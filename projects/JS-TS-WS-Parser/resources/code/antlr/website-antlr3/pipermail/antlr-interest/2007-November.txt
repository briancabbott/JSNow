From mjl at myacc.net  Thu Nov  1 04:50:18 2007
From: mjl at myacc.net (Michael @ myacc)
Date: Thu, 1 Nov 2007 07:50:18 -0400
Subject: [antlr-interest] suppressing evaluation in tree parsers
Message-ID: <007f01c81c7d$615a0b80$6401a8c0@ARIDAVID>

I'm writing a tree parser for evaluating expressions with numerous
variants (literal, variable reference, primitive application,
procedure, etc).  Sometimes I want to suppress evaluation of
a subtree and simply capture a reference to its root node,
to evaluate the tree at a later time. This happens, for example,
when the expression is the body of a procedure definition.
I can do this with semantic predicates, providing a "don't evaluate"
alternative for each expression variant parallel to each
"evaluate" alternative. But I'm guessing there's a more elegant
way of doing this.  Any suggestions?

As an aside, does anyone know of a lazy version of ANTLRReaderStream,
one that consumes input only as needed, which would be useful for
interactive applications? Thanks.

From kpt at doc.ic.ac.uk  Thu Nov  1 08:59:27 2007
From: kpt at doc.ic.ac.uk (Kevin Twidle)
Date: Thu, 1 Nov 2007 16:59:27 +0100
Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number? Help!
Message-ID: <4902CCA3-1F82-49D5-80D6-8E8D95ADFFAE@doc.ic.ac.uk>

Hi,

I love ANTLR! I have a quite sophisticated Smalltalk-like grammar in  
ANTLR using an AST which works beautifully.  I have decided to allow  
floating point numbers and have tried adding them to the grammar.   
Now, Smalltalk uses '.' as a statement separator, numbers have a '.'  
in them - uh-oh.

A number should have the form:

12 or 12.34 but not 12.

I want to be able to parse

13.
13.word.
14.0.13.

to get  13,13,word,14.0,13

all I get is

line 1:3 required (...)+ loop did not match anything at character '\n'
line 2:3 required (...)+ loop did not match anything at character 'w'
recoverFromMismatchedToken
BR.recoverFromMismatchedToken
line 3:4 mismatched input '.13' expecting EOF

with tokens       ord     14.0

I have simplified my problem to the following grammar.  The problem  
is that DECIMAL always matches the first '.' and then fails (I ran  
through the code) it never says DECIMAL is not there, it must be a  
statement separator!  I have tried the greedy option but then it  
never matches the DECIMAL.  I have tried reordering, fragments,  
greedy and now this mailing list!

DECIMAL is optional, why does it fail?

Any help really appreciated!

Kevin

grammar Number;
options {output = AST;}

start	:	statement ( DOT statement? )+ EOF;

statement :	WORD | NUMBER;
	
WORD	:	LETTER (LETTER | DIGIT)+;
	
NUMBER	:	DIGIT+ DECIMAL?;

DECIMAL	:	DOT DIGIT+;
DOT	:	'.';
DIGIT	:	'0'..'9';
LETTER	:	'a'..'z' | 'A'..'Z';
WS      :
	    (' '
	    | '\t'
	    | '\r' '\n'
	    | '\n'
	    ) +
	    { $channel=HIDDEN; }
   	;


From jimi at temporal-wave.com  Thu Nov  1 10:16:21 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Nov 2007 10:16:21 -0700
Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number?
	Help!
In-Reply-To: <4902CCA3-1F82-49D5-80D6-8E8D95ADFFAE@doc.ic.ac.uk>
References: <4902CCA3-1F82-49D5-80D6-8E8D95ADFFAE@doc.ic.ac.uk>
Message-ID: <BAY130-DS3D59E0C9770B91D88FA44868C0@phx.gbl>

See much discussion of this issue over the last 2 or 3 weeks, but you need a
predicate on your number rule, and your DECIMAL and DIGIT and LETTER rules
should be fragments (though you probably don't need them as separate rules
at all really):

NUMBER: ('0'..'9')+ (   ('.' '0'..'9')=> ('.' ('0'..'9')+)
                      |
                    )
      ;
fragment
LETTER

 Etc...

Hope that helps :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kevin Twidle
> Sent: Thursday, November 01, 2007 8:59 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number?
> Help!
> 
> Hi,
> 
> I love ANTLR! I have a quite sophisticated Smalltalk-like grammar in
> ANTLR using an AST which works beautifully.  I have decided to allow
> floating point numbers and have tried adding them to the grammar.
> Now, Smalltalk uses '.' as a statement separator, numbers have a '.'
> in them - uh-oh.
> 
> A number should have the form:
> 
> 12 or 12.34 but not 12.
> 
> I want to be able to parse
> 
> 13.
> 13.word.
> 14.0.13.
> 
> to get  13,13,word,14.0,13
> 
> all I get is
> 
> line 1:3 required (...)+ loop did not match anything at character '\n'
> line 2:3 required (...)+ loop did not match anything at character 'w'
> recoverFromMismatchedToken
> BR.recoverFromMismatchedToken
> line 3:4 mismatched input '.13' expecting EOF
> 
> with tokens       ord     14.0
> 
> I have simplified my problem to the following grammar.  The problem
> is that DECIMAL always matches the first '.' and then fails (I ran
> through the code) it never says DECIMAL is not there, it must be a
> statement separator!  I have tried the greedy option but then it
> never matches the DECIMAL.  I have tried reordering, fragments,
> greedy and now this mailing list!
> 
> DECIMAL is optional, why does it fail?
> 
> Any help really appreciated!
> 
> Kevin
> 
> grammar Number;
> options {output = AST;}
> 
> start	:	statement ( DOT statement? )+ EOF;
> 
> statement :	WORD | NUMBER;
> 
> WORD	:	LETTER (LETTER | DIGIT)+;
> 
> NUMBER	:	DIGIT+ DECIMAL?;
> 
> DECIMAL	:	DOT DIGIT+;
> DOT	:	'.';
> DIGIT	:	'0'..'9';
> LETTER	:	'a'..'z' | 'A'..'Z';
> WS      :
> 	    (' '
> 	    | '\t'
> 	    | '\r' '\n'
> 	    | '\n'
> 	    ) +
> 	    { $channel=HIDDEN; }
>    	;



From Mike at LeBlanc-Engineering.com  Thu Nov  1 11:16:55 2007
From: Mike at LeBlanc-Engineering.com (Michael LeBlanc)
Date: Thu, 1 Nov 2007 14:16:55 -0400
Subject: [antlr-interest] reference tokens{} in other files
Message-ID: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>

What is the usual way in v3 to reference the names from a grammar's  
tokens{} construct in the target language?  That is, if I have a  
token SOMETOKEN and my target is Java, how can I reference SOMETOKEN  
unqualified in a hand written Java file?

From mb.fgel at ownit.nu  Thu Nov  1 11:18:34 2007
From: mb.fgel at ownit.nu (Mats Behre)
Date: Thu, 01 Nov 2007 19:18:34 +0100
Subject: [antlr-interest] semantic predicates use LT() on IntStream - bad
Message-ID: <472A187A.9010700@ownit.nu>

Hello

I have solved my earlier problem (http://www.antlr.org/pipermail/antlr-interest/2007-October/024485.html) at least temporarily by post-processing the generated Java file, but now I have stumbled upon a new one.
The language I'm converting the grammar for, in addition to having loads of keywords, also allows the keywords to be used as identifiers such as variable names, so I have added rules such as this one from the 'The Definitive ANTLR Reference' book:

keyIF : {input.LT(1).getText().equals("if")}? ID ;

Now I get Java compiler errors, because in DFA classes there are methods named 'specialStateTransition', where input is an IntStream, which obviously use these semantic predicates, and IntStream does not have an LT(int) method.
This time I haven't slightest idea of how to work around the problem, but I'll try to wade through the LL(*) section of the book, hoping to find a solution.

Rgds,
Mats

From porcelli at uol.com.br  Thu Nov  1 11:33:30 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Thu, 1 Nov 2007 15:33:30 -0300
Subject: [antlr-interest] semantic predicates use LT() on IntStream - bad
In-Reply-To: <472A187A.9010700@ownit.nu>
References: <472A187A.9010700@ownit.nu>
Message-ID: <ee873c070711011133u3facddd7w830256375d65e16c@mail.gmail.com>

Hi Mats,

 I had the same problem, so to solve it, first I created the folowing
methods on @parser::members area:

	private boolean validateLT(int LTNumber, String text){
		if (null == input) return false;
		if (null == input.LT(LTNumber)) return false;
		if (null == input.LT(LTNumber).getText()) return false;
		
		String text2Validate = input.LT(LTNumber).getText();
		if (text2Validate.startsWith("[") && text2Validate.endsWith("]")){
			text2Validate = text2Validate.substring(1, text2Validate.length() - 1);
		}

		return text2Validate.equalsIgnoreCase(text);
	}

	private boolean validateIdentifierKey(String text){
		return validateLT(1, text);
	}

then I could use that:

keyIF
	:	 {validateIdentifierKey("if")}?  ID
	;


Regards,
Alexandre Porcelli


On 11/1/07, Mats Behre <mb.fgel at ownit.nu> wrote:
> Hello
>
> I have solved my earlier problem (http://www.antlr.org/pipermail/antlr-interest/2007-October/024485.html) at least temporarily by post-processing the generated Java file, but now I have stumbled upon a new one.
> The language I'm converting the grammar for, in addition to having loads of keywords, also allows the keywords to be used as identifiers such as variable names, so I have added rules such as this one from the 'The Definitive ANTLR Reference' book:
>
> keyIF : {input.LT(1).getText().equals("if")}? ID ;
>
> Now I get Java compiler errors, because in DFA classes there are methods named 'specialStateTransition', where input is an IntStream, which obviously use these semantic predicates, and IntStream does not have an LT(int) method.
> This time I haven't slightest idea of how to work around the problem, but I'll try to wade through the LL(*) section of the book, hoping to find a solution.
>
> Rgds,
> Mats
>

From parrt at cs.usfca.edu  Thu Nov  1 11:45:38 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 1 Nov 2007 11:45:38 -0700
Subject: [antlr-interest] semantic predicates use LT() on IntStream - bad
In-Reply-To: <472A187A.9010700@ownit.nu>
References: <472A187A.9010700@ownit.nu>
Message-ID: <B17D8CD3-C454-47BC-9829-A44A2325A944@cs.usfca.edu>


On Nov 1, 2007, at 11:18 AM, Mats Behre wrote:

> Hello
>
> I have solved my earlier problem (http://www.antlr.org/ 
> pipermail/antlr-interest/2007-October/024485.html) at least  
> temporarily by post-processing the generated Java file, but now I  
> have stumbled upon a new one.
> The language I'm converting the grammar for, in addition to having  
> loads of keywords, also allows the keywords to be used as  
> identifiers such as variable names, so I have added rules such as  
> this one from the 'The Definitive ANTLR Reference' book:
>
> keyIF : {input.LT(1).getText().equals("if")}? ID ;
>
> Now I get Java compiler errors, because in DFA classes there are  
> methods named 'specialStateTransition', where input is an  
> IntStream, which obviously use these semantic predicates, and  
> IntStream does not have an LT(int) method.
> This time I haven't slightest idea of how to work around the  
> problem, but I'll try to wade through the LL(*) section of the  
> book, hoping to find a solution.

doh!  Sorry. Can you try casting input to CommonTokenStream or  
whatever you're using?

Ter


From jaluber at gmx.de  Thu Nov  1 12:32:49 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 01 Nov 2007 20:32:49 +0100
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>
Message-ID: <472A29E1.90106@gmx.de>

Michael LeBlanc wrote:
> What is the usual way in v3 to reference the names from a grammar's
> tokens{} construct in the target language?  That is, if I have a token
> SOMETOKEN and my target is Java, how can I reference SOMETOKEN
> unqualified in a hand written Java file?
> 
AFAIK, it should suffice to call a token DUMMY in the target language
also DUMMY.

Johannes

From Mike at LeBlanc-Engineering.com  Thu Nov  1 12:47:45 2007
From: Mike at LeBlanc-Engineering.com (Michael LeBlanc)
Date: Thu, 1 Nov 2007 15:47:45 -0400
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <472A29E1.90106@gmx.de>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>
	<472A29E1.90106@gmx.de>
Message-ID: <67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>

Sorry.  To be more complete, I want to refer to DUMMY in another Java  
source file not built by ANTLR.  In earlier versions, ANTLR wrote an  
'interface' file which other classes could 'implement' to inherit the  
names.  Now for grammar foo.g it writes foo.tokens only, AFAIK.  Yes,  
it writes them into fooParser.java as
	public static final int DUMMY=28;
which forces me (I think) to refer to it as
	fooParser.DUMMY

On Nov 1, 2007, at 3:32 PM, Johannes Luber wrote:

> Michael LeBlanc wrote:
>> What is the usual way in v3 to reference the names from a grammar's
>> tokens{} construct in the target language?  That is, if I have a  
>> token
>> SOMETOKEN and my target is Java, how can I reference SOMETOKEN
>> unqualified in a hand written Java file?
>>
> AFAIK, it should suffice to call a token DUMMY in the target language
> also DUMMY.

From jaluber at gmx.de  Thu Nov  1 13:59:27 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 01 Nov 2007 21:59:27 +0100
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>	<472A29E1.90106@gmx.de>
	<67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>
Message-ID: <472A3E2F.90009@gmx.de>

Michael LeBlanc wrote:
> Sorry.  To be more complete, I want to refer to DUMMY in another Java
> source file not built by ANTLR.  In earlier versions, ANTLR wrote an
> 'interface' file which other classes could 'implement' to inherit the
> names.  Now for grammar foo.g it writes foo.tokens only, AFAIK.  Yes, it
> writes them into fooParser.java as
>     public static final int DUMMY=28;
> which forces me (I think) to refer to it as
>     fooParser.DUMMY
> 
That's correct. It's not possible to change that, but adding fooParser
should be a minor inconvenience.

Johannes

From kpt at doc.ic.ac.uk  Thu Nov  1 14:12:38 2007
From: kpt at doc.ic.ac.uk (Kevin Twidle)
Date: Thu, 1 Nov 2007 22:12:38 +0100
Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number?
	Help!
In-Reply-To: <BAY130-DS3D59E0C9770B91D88FA44868C0@phx.gbl>
References: <4902CCA3-1F82-49D5-80D6-8E8D95ADFFAE@doc.ic.ac.uk>
	<BAY130-DS3D59E0C9770B91D88FA44868C0@phx.gbl>
Message-ID: <C17E18AB-6BB6-4E91-89B6-228F582983CA@doc.ic.ac.uk>

Thank you so much.  I did look back through the archives but unless  
you know what you are looking for it is sometimes hard to spot the  
right thing.  I shall go back and look for predicate info.

Your suggestion completely fixed the problem with

NUMBER	:	DIGIT+ DECIMAL;
fragment DECIMAL	:	(DOT DIGIT) => (DOT DIGIT+) |;

and will now go back and shoehorn it into my language grammar.

Cheers,

Kevin

On 1 Nov 2007, at 18:16, Jim Idle wrote:

> See much discussion of this issue over the last 2 or 3 weeks, but  
> you need a
> predicate on your number rule, and your DECIMAL and DIGIT and  
> LETTER rules
> should be fragments (though you probably don't need them as  
> separate rules
> at all really):
>
> NUMBER: ('0'..'9')+ (   ('.' '0'..'9')=> ('.' ('0'..'9')+)
>                       |
>                     )
>       ;
> fragment
> LETTER
>
>  Etc...
>
> Hope that helps :-)
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Kevin Twidle
>> Sent: Thursday, November 01, 2007 8:59 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal  
>> number?
>> Help!
>>
>> Hi,
>>
>> I love ANTLR! I have a quite sophisticated Smalltalk-like grammar in
>> ANTLR using an AST which works beautifully.  I have decided to allow
>> floating point numbers and have tried adding them to the grammar.
>> Now, Smalltalk uses '.' as a statement separator, numbers have a '.'
>> in them - uh-oh.
>>
>> A number should have the form:
>>
>> 12 or 12.34 but not 12.
>>
>> I want to be able to parse
>>
>> 13.
>> 13.word.
>> 14.0.13.
>>
>> to get  13,13,word,14.0,13
>>
>> all I get is
>>
>> line 1:3 required (...)+ loop did not match anything at character  
>> '\n'
>> line 2:3 required (...)+ loop did not match anything at character 'w'
>> recoverFromMismatchedToken
>> BR.recoverFromMismatchedToken
>> line 3:4 mismatched input '.13' expecting EOF
>>
>> with tokens       ord     14.0
>>
>> I have simplified my problem to the following grammar.  The problem
>> is that DECIMAL always matches the first '.' and then fails (I ran
>> through the code) it never says DECIMAL is not there, it must be a
>> statement separator!  I have tried the greedy option but then it
>> never matches the DECIMAL.  I have tried reordering, fragments,
>> greedy and now this mailing list!
>>
>> DECIMAL is optional, why does it fail?
>>
>> Any help really appreciated!
>>
>> Kevin
>>
>> grammar Number;
>> options {output = AST;}
>>
>> start	:	statement ( DOT statement? )+ EOF;
>>
>> statement :	WORD | NUMBER;
>>
>> WORD	:	LETTER (LETTER | DIGIT)+;
>>
>> NUMBER	:	DIGIT+ DECIMAL?;
>>
>> DECIMAL	:	DOT DIGIT+;
>> DOT	:	'.';
>> DIGIT	:	'0'..'9';
>> LETTER	:	'a'..'z' | 'A'..'Z';
>> WS      :
>> 	    (' '
>> 	    | '\t'
>> 	    | '\r' '\n'
>> 	    | '\n'
>> 	    ) +
>> 	    { $channel=HIDDEN; }
>>    	;
>
>
>
>


From ohumbel at gmail.com  Thu Nov  1 14:12:43 2007
From: ohumbel at gmail.com (Oti)
Date: Thu, 1 Nov 2007 22:12:43 +0100
Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number?
	Help!
In-Reply-To: <BAY130-DS3D59E0C9770B91D88FA44868C0@phx.gbl>
References: <4902CCA3-1F82-49D5-80D6-8E8D95ADFFAE@doc.ic.ac.uk>
	<BAY130-DS3D59E0C9770B91D88FA44868C0@phx.gbl>
Message-ID: <ba90a0a90711011412m49a59ea2o1505c26294734d7d@mail.gmail.com>

Hi Kevin and Jim,

the following NUMBER lexer rule works pretty well for me:

NUMBER
	:	( '+' | '-' ) ?
		( ( ( '1' .. '9' ) ( '0' .. '9' )* ) | '0' )
		( '.' ( '0' | ( '0' .. '9' )* ( '1' .. '9' ) ) ) ?
		;

Just as an example how to prevent leading and trailing zeroes.
It reflects my recognition of how a simple "number" should look like, so YMMV.

Best wishes,
Oti.

On 11/1/07, Jim Idle <jimi at temporal-wave.com> wrote:
> See much discussion of this issue over the last 2 or 3 weeks, but you need a
> predicate on your number rule, and your DECIMAL and DIGIT and LETTER rules
> should be fragments (though you probably don't need them as separate rules
> at all really):
>
> NUMBER: ('0'..'9')+ (   ('.' '0'..'9')=> ('.' ('0'..'9')+)
>                       |
>                     )
>       ;
> fragment
> LETTER
>
>  Etc...
>
> Hope that helps :-)
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Kevin Twidle
> > Sent: Thursday, November 01, 2007 8:59 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number?
> > Help!
> >
> > Hi,
> >
> > I love ANTLR! I have a quite sophisticated Smalltalk-like grammar in
> > ANTLR using an AST which works beautifully.  I have decided to allow
> > floating point numbers and have tried adding them to the grammar.
> > Now, Smalltalk uses '.' as a statement separator, numbers have a '.'
> > in them - uh-oh.
> >
> > A number should have the form:
> >
> > 12 or 12.34 but not 12.
> >
> > I want to be able to parse
> >
> > 13.
> > 13.word.
> > 14.0.13.
> >
> > to get  13,13,word,14.0,13
> >
> > all I get is
> >
> > line 1:3 required (...)+ loop did not match anything at character '\n'
> > line 2:3 required (...)+ loop did not match anything at character 'w'
> > recoverFromMismatchedToken
> > BR.recoverFromMismatchedToken
> > line 3:4 mismatched input '.13' expecting EOF
> >
> > with tokens       ord     14.0
> >
> > I have simplified my problem to the following grammar.  The problem
> > is that DECIMAL always matches the first '.' and then fails (I ran
> > through the code) it never says DECIMAL is not there, it must be a
> > statement separator!  I have tried the greedy option but then it
> > never matches the DECIMAL.  I have tried reordering, fragments,
> > greedy and now this mailing list!
> >
> > DECIMAL is optional, why does it fail?
> >
> > Any help really appreciated!
> >
> > Kevin
> >
> > grammar Number;
> > options {output = AST;}
> >
> > start :       statement ( DOT statement? )+ EOF;
> >
> > statement :   WORD | NUMBER;
> >
> > WORD  :       LETTER (LETTER | DIGIT)+;
> >
> > NUMBER        :       DIGIT+ DECIMAL?;
> >
> > DECIMAL       :       DOT DIGIT+;
> > DOT   :       '.';
> > DIGIT :       '0'..'9';
> > LETTER        :       'a'..'z' | 'A'..'Z';
> > WS      :
> >           (' '
> >           | '\t'
> >           | '\r' '\n'
> >           | '\n'
> >           ) +
> >           { $channel=HIDDEN; }
> >       ;
>
>
>

From Mike at LeBlanc-Engineering.com  Thu Nov  1 14:15:52 2007
From: Mike at LeBlanc-Engineering.com (Michael LeBlanc)
Date: Thu, 1 Nov 2007 17:15:52 -0400
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <472A3E2F.90009@gmx.de>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>	<472A29E1.90106@gmx.de>
	<67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>
	<472A3E2F.90009@gmx.de>
Message-ID: <3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>

On Nov 1, 2007, at 4:59 PM, Johannes Luber wrote:

> That's correct. It's not possible to change that, but adding fooParser
> should be a minor inconvenience.

Unless you want to refer to them in case phrases in a switch  
statement.  Then it's a major inconvenience.

From jaluber at gmx.de  Thu Nov  1 14:21:01 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 01 Nov 2007 22:21:01 +0100
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>	<472A29E1.90106@gmx.de>	<67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>	<472A3E2F.90009@gmx.de>
	<3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>
Message-ID: <472A433D.4000705@gmx.de>

Michael LeBlanc wrote:
> On Nov 1, 2007, at 4:59 PM, Johannes Luber wrote:
> 
>> That's correct. It's not possible to change that, but adding fooParser
>> should be a minor inconvenience.
> 
> Unless you want to refer to them in case phrases in a switch statement. 
> Then it's a major inconvenience.
> 
In C#, you could use the alias directive to strip the prefix - but Java
doesn't that, does it?

Johannes

From jack at icefire.ee  Thu Nov  1 14:25:22 2007
From: jack at icefire.ee (Jaak Niit)
Date: Thu, 01 Nov 2007 23:25:22 +0200
Subject: [antlr-interest] Bug in Java API
Message-ID: <472A4442.6050805@icefire.ee>

Hello

ANTLR Version 3.0.1 seems to have bug in BitSet constuctor
    /** Construction from a list of integers */
    public BitSet(List items) {
        for (int i = 0; i < items.size(); i++) {
            Integer v = (Integer) items.get(i);
            add(v.intValue());
        }
    }
where first line should be
this(BITS);

Problem came out when I try to use
CommonTokenStream.getTokens(int start, int stop, List types);
and I get
Exception in thread "main" java.lang.NullPointerException
    at org.antlr.runtime.BitSet.add(BitSet.java:118)
    at org.antlr.runtime.BitSet.<init>(BitSet.java:64)
    at 
org.antlr.runtime.CommonTokenStream.getTokens(CommonTokenStream.java:226)

-- 
# Jaak Niit





From mb.fgel at ownit.nu  Thu Nov  1 14:28:27 2007
From: mb.fgel at ownit.nu (Mats Behre)
Date: Thu, 01 Nov 2007 22:28:27 +0100
Subject: [antlr-interest] semantic predicates use LT() on IntStream - bad
In-Reply-To: <B17D8CD3-C454-47BC-9829-A44A2325A944@cs.usfca.edu>
References: <472A187A.9010700@ownit.nu>
	<B17D8CD3-C454-47BC-9829-A44A2325A944@cs.usfca.edu>
Message-ID: <472A44FB.6060400@ownit.nu>



Terence Parr wrote:
> doh!  Sorry. Can you try casting input to CommonTokenStream or whatever 
> you're using?

Cool! That did the trick (at least so far, the grammar isn't recognising the keywords as such, so I have some more testing to do, but that's probably my fault). I'm probably using CommonTokenStream, as I haven't changed it, but I casted to TokenStream.
Didn't realise that IntStream was a superclass of that, and that the method was actually fed with a TokenStream, should have thought to check...

And thanks, Alexandre, for the suggestion, but this solution is so much simpler.

Now I have only to figure out where my actions and rules have gone astray to give me exceptions at runtime, but that should be pretty straightforward.

Thanks again,
Mats

From kpt at doc.ic.ac.uk  Thu Nov  1 14:39:09 2007
From: kpt at doc.ic.ac.uk (Kevin Twidle)
Date: Thu, 1 Nov 2007 22:39:09 +0100
Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal number?
	Help!
In-Reply-To: <ba90a0a90711011412m49a59ea2o1505c26294734d7d@mail.gmail.com>
References: <4902CCA3-1F82-49D5-80D6-8E8D95ADFFAE@doc.ic.ac.uk>
	<BAY130-DS3D59E0C9770B91D88FA44868C0@phx.gbl>
	<ba90a0a90711011412m49a59ea2o1505c26294734d7d@mail.gmail.com>
Message-ID: <EB041E63-B64F-422C-A6C6-DE96D4997C4C@doc.ic.ac.uk>

Oti,

Thanks.  My problem was because '.' is also a statement separator and  
it was getting caught up with numbers.  My grammar is for a  
programming language so I have to allow spurious zeros.  Here is what  
I have now finished up with (and it works, thanks to Jim!!!):

NUMBERCONSTANT
	:	'-'? DIGIT+ DECIMAL (('e'|'E') '-'? DIGIT+)?
	|	DIGIT+ 'r' '-'? BIGDIGITS {setText(readNumber(getText()));}
	|	'0x' d=HEXDIGITS {setText(readNumber("16r"+$d.getText()));}
	;
fragment HEXDIGITS
	:	( DIGIT | 'A'..'F' | 'a'..'f' )+
	;
fragment BIGDIGITS
	:	( DIGIT | 'A'..'Z' )+
	;
fragment DECIMAL
	:	(DOT DIGIT) => (DOT DIGIT+) |
	;	

So I can accept normal numbers with exponents, unary minus only.  Any  
radix numbers e.g. octal  8r777 or base 23  23r75BT or C-style hex  
0xCC00.  That should be enough to keep people happy!

Kevin


On 1 Nov 2007, at 22:12, Oti wrote:

> Hi Kevin and Jim,
>
> the following NUMBER lexer rule works pretty well for me:
>
> NUMBER
> 	:	( '+' | '-' ) ?
> 		( ( ( '1' .. '9' ) ( '0' .. '9' )* ) | '0' )
> 		( '.' ( '0' | ( '0' .. '9' )* ( '1' .. '9' ) ) ) ?
> 		;
>
> Just as an example how to prevent leading and trailing zeroes.
> It reflects my recognition of how a simple "number" should look  
> like, so YMMV.
>
> Best wishes,
> Oti.
>
> On 11/1/07, Jim Idle <jimi at temporal-wave.com> wrote:
>> See much discussion of this issue over the last 2 or 3 weeks, but  
>> you need a
>> predicate on your number rule, and your DECIMAL and DIGIT and  
>> LETTER rules
>> should be fragments (though you probably don't need them as  
>> separate rules
>> at all really):
>>
>> NUMBER: ('0'..'9')+ (   ('.' '0'..'9')=> ('.' ('0'..'9')+)
>>                       |
>>                     )
>>       ;
>> fragment
>> LETTER
>>
>>  Etc...
>>
>> Hope that helps :-)
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Kevin Twidle
>>> Sent: Thursday, November 01, 2007 8:59 AM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] Smalltalk-like grammar? Easy! Decimal  
>>> number?
>>> Help!
>>>
>>> Hi,
>>>
>>> I love ANTLR! I have a quite sophisticated Smalltalk-like grammar in
>>> ANTLR using an AST which works beautifully.  I have decided to allow
>>> floating point numbers and have tried adding them to the grammar.
>>> Now, Smalltalk uses '.' as a statement separator, numbers have a '.'
>>> in them - uh-oh.
>>>
>>> A number should have the form:
>>>
>>> 12 or 12.34 but not 12.
>>>
>>> I want to be able to parse
>>>
>>> 13.
>>> 13.word.
>>> 14.0.13.
>>>
>>> to get  13,13,word,14.0,13
>>>
>>> all I get is
>>>
>>> line 1:3 required (...)+ loop did not match anything at character  
>>> '\n'
>>> line 2:3 required (...)+ loop did not match anything at character  
>>> 'w'
>>> recoverFromMismatchedToken
>>> BR.recoverFromMismatchedToken
>>> line 3:4 mismatched input '.13' expecting EOF
>>>
>>> with tokens       ord     14.0
>>>
>>> I have simplified my problem to the following grammar.  The problem
>>> is that DECIMAL always matches the first '.' and then fails (I ran
>>> through the code) it never says DECIMAL is not there, it must be a
>>> statement separator!  I have tried the greedy option but then it
>>> never matches the DECIMAL.  I have tried reordering, fragments,
>>> greedy and now this mailing list!
>>>
>>> DECIMAL is optional, why does it fail?
>>>
>>> Any help really appreciated!
>>>
>>> Kevin
>>>
>>> grammar Number;
>>> options {output = AST;}
>>>
>>> start :       statement ( DOT statement? )+ EOF;
>>>
>>> statement :   WORD | NUMBER;
>>>
>>> WORD  :       LETTER (LETTER | DIGIT)+;
>>>
>>> NUMBER        :       DIGIT+ DECIMAL?;
>>>
>>> DECIMAL       :       DOT DIGIT+;
>>> DOT   :       '.';
>>> DIGIT :       '0'..'9';
>>> LETTER        :       'a'..'z' | 'A'..'Z';
>>> WS      :
>>>           (' '
>>>           | '\t'
>>>           | '\r' '\n'
>>>           | '\n'
>>>           ) +
>>>           { $channel=HIDDEN; }
>>>       ;
>>
>>
>>
>
>


From john.ridgway at trincoll.edu  Thu Nov  1 14:51:41 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Thu, 1 Nov 2007 17:51:41 -0400
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>	<472A29E1.90106@gmx.de>
	<67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>
	<472A3E2F.90009@gmx.de>
	<3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>
Message-ID: <ED58E617-473A-4EA5-BA10-FB4ED8337B01@trincoll.edu>

On Nov 1, 2007, at 5:15 PM, Michael LeBlanc wrote:

> On Nov 1, 2007, at 4:59 PM, Johannes Luber wrote:
>
>> That's correct. It's not possible to change that, but adding  
>> fooParser
>> should be a minor inconvenience.
>
> Unless you want to refer to them in case phrases in a switch  
> statement.  Then it's a major inconvenience.

I haven't tried it, but shouldn't
   import static fooParser.*;
work?

Peace
- John



From ohumbel at gmail.com  Thu Nov  1 14:56:28 2007
From: ohumbel at gmail.com (Oti)
Date: Thu, 1 Nov 2007 22:56:28 +0100
Subject: [antlr-interest] superClass usage
In-Reply-To: <472502A2.2040104@paulkeir.com>
References: <472502A2.2040104@paulkeir.com>
Message-ID: <ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>

Paul,

for the parser superclass, it is really that easy as described in section 5.7.
Currently there is no way of specifiying the lexer superclass. But you
can use a package trick in Foo.g:

@lexer::header {
package my.lexer;
}

If you create a class named "Lexer" (which extends
org.antlr.runtime.Lexer) in package my.lexer, your own Lexer will be
the superclass. That's because ANTLR generates:

package my.lexer;
import org.antlr.runtime.*;
public class FooLexer extends Lexer {...

Hope this helps a little,
Oti.


On 10/28/07, Paul Keir <paul at paulkeir.com> wrote:
> Hi all,
>
> Does anyone have an example using the superClass option described in
> section 5.7 of the ANTLR ref. book? I'd like to extend an existing
> combined grammar.
>
> Thanks in advance,
> Paul
>
>

From parrt at cs.usfca.edu  Thu Nov  1 15:27:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 1 Nov 2007 15:27:14 -0700
Subject: [antlr-interest] Bug in Java API
In-Reply-To: <472A4442.6050805@icefire.ee>
References: <472A4442.6050805@icefire.ee>
Message-ID: <45E7015A-6657-4579-B648-718CC566528B@cs.usfca.edu>

thanks. added:

http://www.antlr.org:8888/browse/ANTLR-192

Ter
On Nov 1, 2007, at 2:25 PM, Jaak Niit wrote:

> Hello
>
> ANTLR Version 3.0.1 seems to have bug in BitSet constuctor
>    /** Construction from a list of integers */
>    public BitSet(List items) {
>        for (int i = 0; i < items.size(); i++) {
>            Integer v = (Integer) items.get(i);
>            add(v.intValue());
>        }
>    }
> where first line should be
> this(BITS);
>
> Problem came out when I try to use
> CommonTokenStream.getTokens(int start, int stop, List types);
> and I get
> Exception in thread "main" java.lang.NullPointerException
>    at org.antlr.runtime.BitSet.add(BitSet.java:118)
>    at org.antlr.runtime.BitSet.<init>(BitSet.java:64)
>    at org.antlr.runtime.CommonTokenStream.getTokens 
> (CommonTokenStream.java:226)
>
> -- 
> # Jaak Niit
>
>
>
>


From lenochodpetiprsty at seznam.cz  Thu Nov  1 16:00:38 2007
From: lenochodpetiprsty at seznam.cz (Bolek Vrany)
Date: Fri, 02 Nov 2007 00:00:38 +0100
Subject: [antlr-interest] Parsing free text
Message-ID: <472A5A96.3080507@seznam.cz>

Hello,

I'm quite new to ANTLR. Could you please help me with the following task?

How do I create either a lexer or parser rule that would read all text 
starting with WRN or ERR until the end of file to a single token. The 
language is case sensitive. For example

IF color=white AND size=big THEN ERR Not in stock
IF color=white AND size=big THEN WRN [[43:WR12345]]

Both identifiers and the text after WRN or ERR can be arbitrarily long. 
Identifiers can contain 'a'..'z'|'A'..'Z'|'_'|'0'..'9' (numeric literals 
are enclosed in $$, ie. $50.0$). WRN [[43:WR12345]] means look up the 
text of warning [[43:WR12345]] in a database and display it, while the 
first form simply display 'Not in stock'. The message is delimited only 
by ERR and EOF.

I tried several ways to do it, but always ended with an ambiguity, loop 
or a lexer rule eating all the text including IF and the condition to a 
single token.


Thanks a lot

Bolek


From amol_bhagavat at yahoo.co.uk  Fri Nov  2 00:20:35 2007
From: amol_bhagavat at yahoo.co.uk (amol Bhagavat)
Date: Fri, 2 Nov 2007 07:20:35 +0000 (GMT)
Subject: [antlr-interest] Antlr options problem: Not able to set
	defaultErrorHandler to false
Message-ID: <550906.82952.qm@web23209.mail.ird.yahoo.com>

Hi,
   
  When i try to stop the default error handling by antlr by the option 
  defaultErrorHandler  , it gives me following error.
   
  prompt>java org.antlr.Tool c.g
  ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(133): c.g:35:1: illegal option defaultErrorHandler
  .
  .
  prompt>
   
   
  Grammar :-
   
  grammar c;
options {
    backtrack=true;
    memoize=true;
    k=2;
      defaultErrorHandler = false;
} 
   
   
  Please let me know, if i am doing any mistake anywhere...
   
  Many thanks.
   
   

       
---------------------------------
 Yahoo! Answers - Get better answers from someone who knows. Tryit now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071102/ea0f0b4b/attachment.html 

From mb.fgel at ownit.nu  Fri Nov  2 00:52:03 2007
From: mb.fgel at ownit.nu (Mats Behre)
Date: Fri, 02 Nov 2007 08:52:03 +0100
Subject: [antlr-interest] Antlr options problem: Not able to set
 defaultErrorHandler to false
In-Reply-To: <550906.82952.qm@web23209.mail.ird.yahoo.com>
References: <550906.82952.qm@web23209.mail.ird.yahoo.com>
Message-ID: <472AD723.2020707@ownit.nu>

Hi,

That option isn't available in ANTLR v3, see http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3.

Hth,
Mats

From Mike at LeBlanc-Engineering.com  Fri Nov  2 02:49:42 2007
From: Mike at LeBlanc-Engineering.com (Michael LeBlanc)
Date: Fri, 2 Nov 2007 05:49:42 -0400
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <ED58E617-473A-4EA5-BA10-FB4ED8337B01@trincoll.edu>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>	<472A29E1.90106@gmx.de>
	<67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>
	<472A3E2F.90009@gmx.de>
	<3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>
	<ED58E617-473A-4EA5-BA10-FB4ED8337B01@trincoll.edu>
Message-ID: <718899DD-5DE9-4B61-A9F5-4FFE15291316@LeBlanc-Engineering.com>

On Nov 1, 2007, at 5:51 PM, John Ridgway wrote:

> I haven't tried it, but shouldn't
>   import static fooParser.*;
> work?

$ javac -Xlint:unchecked -cp .:/Applications/.../antlrworks.jar  
Test.java
Test.java:6: package fooParser does not exist
import fooParser.*;
^
Test.java:22: cannot find symbol
symbol  : variable DUMMY
location: class Test
             case DUMMY:
                  ^

$ ls -l fooParser*
-rw-r--r--   1 mike  staff    2804 Nov  1 16:42 fooParser$DFA14.class
...
-rw-r--r--   1 mike  staff   56905 Nov  1 16:42 fooParser.class
-rw-r--r--   1 mike  staff  163463 Nov  1 16:42 fooParser.java

With "import static fooParser.*;", the first error changes to

Test.java:6: cannot find symbol
symbol: class fooParser
import static fooParser.*;
               ^


From andreas.ravnestad at gmail.com  Fri Nov  2 05:31:16 2007
From: andreas.ravnestad at gmail.com (Andreas Ravnestad)
Date: Fri, 2 Nov 2007 13:31:16 +0100
Subject: [antlr-interest] gUnit and classpaths
Message-ID: <db3e39e10711020531u9650075k56f6554e5f40b9f7@mail.gmail.com>

Hi all,

I am planning to use gUnit for unit testing our grammar, however the
examples on the wiki is rather lacking in covering the corner cases.
My problem in particular is this: How do I run gunit tests for a
grammar/lexer which resides in a specific package?

That is, my parser and lexer are generated and compiled into
./bin/no/ntnu/xqft/parse/. How can I make gUnit aware of where to find
these classes?

Thanks, Andreas

From beradrian at yahoo.com  Fri Nov  2 10:06:47 2007
From: beradrian at yahoo.com (Adrian Ber)
Date: Fri, 2 Nov 2007 10:06:47 -0700 (PDT)
Subject: [antlr-interest] Distinguish between number and value
Message-ID: <671758.35800.qm@web30701.mail.mud.yahoo.com>

I'm using a CSS grammar and wondering how can I write a rule to distinguish between a number and a value. If I have the input "123" and "123px" I want to know that "123" is a number and "123px" is a length. 
I'm new to ANTLR and using v3. 

Thanks a lot,
A.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071102/1d7d16f6/attachment.html 

From john.ridgway at trincoll.edu  Fri Nov  2 10:08:17 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Fri, 2 Nov 2007 13:08:17 -0400
Subject: [antlr-interest] reference tokens{} in other files
In-Reply-To: <718899DD-5DE9-4B61-A9F5-4FFE15291316@LeBlanc-Engineering.com>
References: <5C03CB04-B669-492D-B35C-94FA8C07DC45@LeBlanc-Engineering.com>	<472A29E1.90106@gmx.de>
	<67E37D92-0FF0-44B1-8A39-BC81DCC02922@LeBlanc-Engineering.com>
	<472A3E2F.90009@gmx.de>
	<3D82C9F1-8B85-485A-83D4-3B027980B939@LeBlanc-Engineering.com>
	<ED58E617-473A-4EA5-BA10-FB4ED8337B01@trincoll.edu>
	<718899DD-5DE9-4B61-A9F5-4FFE15291316@LeBlanc-Engineering.com>
Message-ID: <7D0DD47B-2054-469F-89E3-7B95D1B86637@trincoll.edu>

but
   case fooParser.DUMMY:
works?  and fooParser is in the unnamed package (doesn't have a  
package statement)?

Peace
- John



On Nov 2, 2007, at 5:49 AM, Michael LeBlanc wrote:

> On Nov 1, 2007, at 5:51 PM, John Ridgway wrote:
>
>> I haven't tried it, but shouldn't
>>   import static fooParser.*;
>> work?
>
> $ javac -Xlint:unchecked -cp .:/Applications/.../antlrworks.jar  
> Test.java
> Test.java:6: package fooParser does not exist
> import fooParser.*;
> ^
> Test.java:22: cannot find symbol
> symbol  : variable DUMMY
> location: class Test
>             case DUMMY:
>                  ^
>
> $ ls -l fooParser*
> -rw-r--r--   1 mike  staff    2804 Nov  1 16:42 fooParser$DFA14.class
> ...
> -rw-r--r--   1 mike  staff   56905 Nov  1 16:42 fooParser.class
> -rw-r--r--   1 mike  staff  163463 Nov  1 16:42 fooParser.java
>
> With "import static fooParser.*;", the first error changes to
>
> Test.java:6: cannot find symbol
> symbol: class fooParser
> import static fooParser.*;
>               ^
>


From jimi at temporal-wave.com  Fri Nov  2 11:27:01 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 2 Nov 2007 11:27:01 -0700
Subject: [antlr-interest] Distinguish between number and value
In-Reply-To: <671758.35800.qm@web30701.mail.mud.yahoo.com>
References: <671758.35800.qm@web30701.mail.mud.yahoo.com>
Message-ID: <BAY130-DS364FAA4D7673AC0A5DE70868D0@phx.gbl>

Usually, you would do such things in the parser, but in this instance you
can actually do it in the lexer if you want. If you leave it to the pasere
then you would need a keyword 'px', which may be awkward elsewhere of
course:

 

tokens

{

 PIXELS;

}

 

// Parser goes here

 

 

NUMBER 

      : ('0'..'9')+ 

           ( 

                (('px')=> 'px') { $type = PIXELS; } 

              | // Just a number after all

           )

      ;

 

 

Should work fine for you and will avoid lexing errors if the input is 89p by
mistake, that would go back to the parser as two tokens and it will error
out gracefully. Note, that you may get a warning about the PIXELS token,
which you can ignore.

 

There are other approaches of course, such as leaveing the px to go back as
a token like ID, then in the parser allowing:

 

NUMBER ID { see if ID text is 'px' else error}

 

Hope that helps,

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Adrian Ber
Sent: Friday, November 02, 2007 10:07 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Distinguish between number and value

 

I'm using a CSS grammar and wondering how can I write a rule to distinguish
between a number and a value. If I have the input "123" and "123px" I want
to know that "123" is a number and "123px" is a length. 

I'm new to ANTLR and using v3. 

 

Thanks a lot,

A.


__________________________________________________
Do You Yahoo!?
Tired of spam? Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071102/78c9d4f2/attachment-0001.html 

From depakbhalla at gmail.com  Fri Nov  2 12:44:07 2007
From: depakbhalla at gmail.com (Deepak Bhalla)
Date: Fri, 2 Nov 2007 12:44:07 -0700
Subject: [antlr-interest] Structure of C# Grammar file
Message-ID: <ed8521100711021244s6f813acfk9587342d113d31a8@mail.gmail.com>

Hi,

I am looking for plane C# grammar file without any action code so that I can
change it according to my requirement. I am building a tool for doing
refactoring for which I have to parse the C# code first to get the basic
informations like name of classes. methods, variables etc.

I am in badly need for the is file so, any help will be appreciated.

Thanks,
Deepak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071102/0efe18f3/attachment.html 

From cimbroken at gmail.com  Fri Nov  2 15:52:05 2007
From: cimbroken at gmail.com (cimbroken)
Date: Fri, 2 Nov 2007 23:52:05 +0100
Subject: [antlr-interest] overlapping lexer rules
Message-ID: <3b19324d0711021552obfb704ch9f52968449cc1490@mail.gmail.com>

Hi everybody,
quoting two examples from the book (pg.280-281):

1)
INT : DIGIT+ ;
DIGIT : '0'..'9' ;

2)
INT : '0'..'9' +;
FLOAT : '0'..'9' + ('.' '0'..'9'*)? ;

I don't understand very well why the second is *not* a mistake. It seems to
me that this two examples are similar: 2 "free" rules (not fragment) that
try to match different tokens that start with the same character. Why antlr
treats them in different ways?

thanks!
teo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071102/e1812d42/attachment.html 

From leon.antlr at mac.com  Fri Nov  2 17:57:13 2007
From: leon.antlr at mac.com (Leon Su)
Date: Fri, 2 Nov 2007 17:57:13 -0700
Subject: [antlr-interest] gUnit and classpaths
In-Reply-To: <db3e39e10711020531u9650075k56f6554e5f40b9f7@mail.gmail.com>
References: <db3e39e10711020531u9650075k56f6554e5f40b9f7@mail.gmail.com>
Message-ID: <E5E93AA5-DA9D-4F08-A591-340D79CB5360@mac.com>


On Nov 2, 2007, at 5:31 AM, Andreas Ravnestad wrote:

> Hi all,
>
> I am planning to use gUnit for unit testing our grammar, however the
> examples on the wiki is rather lacking in covering the corner cases.
> My problem in particular is this: How do I run gunit tests for a
> grammar/lexer which resides in a specific package?
>
> That is, my parser and lexer are generated and compiled into
> ./bin/no/ntnu/xqft/parse/. How can I make gUnit aware of where to find
> these classes?
>
> Thanks, Andreas


From leon.antlr at mac.com  Fri Nov  2 18:07:37 2007
From: leon.antlr at mac.com (Leon Su)
Date: Fri, 2 Nov 2007 18:07:37 -0700
Subject: [antlr-interest] gUnit and classpaths
In-Reply-To: <db3e39e10711020531u9650075k56f6554e5f40b9f7@mail.gmail.com>
References: <db3e39e10711020531u9650075k56f6554e5f40b9f7@mail.gmail.com>
Message-ID: <E70C97EA-0935-4B02-ABA7-D9BD306231AA@mac.com>

Hi,

Please try to add a header into your gUnit script as below:

gunit your-grammar-name;
@header{package your-package-path;}
rule testsuites


Leon

On Nov 2, 2007, at 5:31 AM, Andreas Ravnestad wrote:

> Hi all,
>
> I am planning to use gUnit for unit testing our grammar, however the
> examples on the wiki is rather lacking in covering the corner cases.
> My problem in particular is this: How do I run gunit tests for a
> grammar/lexer which resides in a specific package?
>
> That is, my parser and lexer are generated and compiled into
> ./bin/no/ntnu/xqft/parse/. How can I make gUnit aware of where to find
> these classes?
>
> Thanks, Andreas


From a.shneyderman at gmail.com  Sat Nov  3 06:59:17 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Sat, 3 Nov 2007 14:59:17 +0100
Subject: [antlr-interest] ANTLR 3.0.1 is not in maven central repository
Message-ID: <693a69ba0711030659s4ba9c7a1i8fff7967238cc4a2@mail.gmail.com>

Does anyone have any inclination to post it there ?

http://repo1.maven.org/maven2/org/antlr/

Is it done by someone from ANTLR team? Does it have to be.

-- 
Thanks,
Alex.

From dave at badgers-in-foil.co.uk  Sat Nov  3 08:18:01 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 3 Nov 2007 15:18:01 +0000
Subject: [antlr-interest] ANTLR 3.0.1 is not in maven central repository
In-Reply-To: <693a69ba0711030659s4ba9c7a1i8fff7967238cc4a2@mail.gmail.com>
References: <693a69ba0711030659s4ba9c7a1i8fff7967238cc4a2@mail.gmail.com>
Message-ID: <20071103151800.GB13466@badgers-in-foil.co.uk>

On Sat, Nov 03, 2007 at 02:59:17PM +0100, Alex Shneyderman wrote:
> Does anyone have any inclination to post it there ?
> 
> http://repo1.maven.org/maven2/org/antlr/
> 
> Is it done by someone from ANTLR team? Does it have to be.

I've been meaning to write a script to automate the creation of upload
bundles, but I've not got around to it yet.

It doesn't have to be a project member, but it might make the processes
easier/quicker if it were.

The process is described here, under "Manual upload of artifacts",

  http://maven.apache.org/guides/mini/guide-central-repository-upload.html


ta,
dave

-- 
http://david.holroyd.me.uk/

From pdhar at tibco.com  Sat Nov  3 09:17:43 2007
From: pdhar at tibco.com (Pranab Dhar)
Date: Sat, 3 Nov 2007 09:17:43 -0700
Subject: [antlr-interest] Bug in antlr-3.0.1 DOTTreeGenerator.getNodeST()
Message-ID: <B5ACD5B0D63ABA4FB1A1B6C467964FBD04226197@NA-PA-VBE01.na.tibco.com>

Hi,

     In the 3.0.1 release of antlr, the DOTTreeGenerator  escapes "
with \  but   not    \  character like \\ . As a result token string
that includes \"  is incorrectly escaped to \\" instead of \\\"

 

The current code shows this

 

if (text!=null) text = text.replaceAll("\"", "\\\\\"");  

 

and this should be

 

if (text!=null) text = text.replaceAll("(\\\\|\")","\\\\$1
<file:///\\\|\%22)%22,%22\$1> ");

 

Regards,

 

Pranab

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071103/4cae29cb/attachment.html 

From devunion at gmail.com  Sat Nov  3 12:09:54 2007
From: devunion at gmail.com (DevUnion Team)
Date: Sat, 3 Nov 2007 21:09:54 +0200
Subject: [antlr-interest] Basic grammar problem
Message-ID: <1223458816.20071103210954@gmail.com>

Dear, antlr-interest.

I've tried to write basic parser. which need to return value for input
string. String example: "parameter(1)". Parser need to return value
from predefined map: parameters.get(1). I can't understand where
problem is.

My grammar:

grammar Property;

@header {
import java.util.Map;
import java.util.HashMap;
import java.io.ByteArrayInputStream;
}

@members {
/** Map variable name to Integer object holding value */
Map<String, String> parameters = new HashMap<String, String>();
String leftArg;

    {
        parameters.put("1", "2");
    }
    
  public static void main(String[] args) throws Exception {
            ANTLRInputStream input = new ANTLRInputStream(new ByteArrayInputStream(args[0].getBytes()));

        PropertyLexer lexer = new PropertyLexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        PropertyParser parser = new PropertyParser(tokens);
        System.out.println(parser.parameter());
 }
}
/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/
parameter   returns [String value]
        :   'parameter(' STRING ')' {$value = parameters.get($STRING.text);};
        

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

STRING 
        :       ('a'..'z' | 'A'..'Z' | '0'..'9')+;


-- 
Best regards,
Vikar Liaskovich, DevUnion Team                         mailto:devunion at gmail.com


From antlr at shmuelhome.mine.nu  Sat Nov  3 12:44:38 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Sat, 03 Nov 2007 21:44:38 +0200
Subject: [antlr-interest] Distinguish between number and value
In-Reply-To: <BAY130-DS364FAA4D7673AC0A5DE70868D0@phx.gbl>
References: <671758.35800.qm@web30701.mail.mud.yahoo.com>
	<BAY130-DS364FAA4D7673AC0A5DE70868D0@phx.gbl>
Message-ID: <472CCFA6.5030706@shmuelhome.mine.nu>

Jim Idle wrote:
>
> Usually, you would do such things in the parser, but in this instance 
> you can actually do it in the lexer if you want. If you leave it to 
> the pasere then you would need a keyword ?px?, which may be awkward 
> elsewhere of course:
>
It is actually not so easy in the parser unless "123 px" is a legal 
pixel size (notice the space). It really is best to do this in the lexer.
>
> tokens
>
> {
>
> PIXELS;
>
> }
>
> // Parser goes here
>
> NUMBER
>
> : (?0?..?9?)+
>
> (
>
> ((?px?)=> ?px?) { $type = PIXELS; }
>
> | // Just a number after all
>
> )
>
> ;
>
> Should work fine for you and will avoid lexing errors if the input is 
> 89p by mistake, that would go back to the parser as two tokens and it 
> will error out gracefully. Note, that you may get a warning about the 
> PIXELS token, which you can ignore.
>
> There are other approaches of course, such as leaveing the px to go 
> back as a token like ID, then in the parser allowing:
>
> NUMBER ID { see if ID text is ?px? else error}
>
> Hope that helps,
>
> Jim
>
> *From:* antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Adrian Ber
> *Sent:* Friday, November 02, 2007 10:07 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Distinguish between number and value
>
> I'm using a CSS grammar and wondering how can I write a rule to 
> distinguish between a number and a value. If I have the input "123" 
> and "123px" I want to know that "123" is a number and "123px" is a 
> length.
>
> I'm new to ANTLR and using v3.
>
> Thanks a lot,
>
> A.
>
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam? Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
>



From dave at badgers-in-foil.co.uk  Sat Nov  3 13:46:18 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 3 Nov 2007 20:46:18 +0000
Subject: [antlr-interest] Distinguish between number and value
In-Reply-To: <472CCFA6.5030706@shmuelhome.mine.nu>
References: <671758.35800.qm@web30701.mail.mud.yahoo.com>
	<BAY130-DS364FAA4D7673AC0A5DE70868D0@phx.gbl>
	<472CCFA6.5030706@shmuelhome.mine.nu>
Message-ID: <20071103204617.GA19703@badgers-in-foil.co.uk>

On Sat, Nov 03, 2007 at 09:44:38PM +0200, shmuel siegel wrote:
> >Usually, you would do such things in the parser, but in this instance 
> >you can actually do it in the lexer if you want. If you leave it to 
> >the pasere then you would need a keyword ?px?, which may be awkward 
> >elsewhere of course:
> >
> It is actually not so easy in the parser unless "123 px" is a legal 
> pixel size (notice the space). It really is best to do this in the lexer.

...unless whitespace is significant in the parser.  Actually, the
published grammar for CSS suggests it should be,

  http://www.w3.org/TR/2003/WD-css3-syntax-20030813/#grammar0

(though indeed 'length', etc. values are handed lexically according to
that spec).

I no longer recall why whitespace is handled like this.


ta,
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Sat Nov  3 16:28:43 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 3 Nov 2007 16:28:43 -0700
Subject: [antlr-interest] mantra update
Message-ID: <58FED1D8-F9F3-4964-80DF-6001A054FA3F@cs.usfca.edu>

Hi, updated site:

http://www.linguamantra.org/

and moved doc to wiki:

http://www.antlr.org/wiki/display/Mantra/The+Mantra+Programming+Language

Updated language to 1.0a4. I basically added a for-each loop and  
altered conditional expr spec on closure to be consistent.  Changes:

   // print set elements 3 times
   set names = set("Ter", "Tom", "Sriram", "Kay");
   for (String name in names) {
           println(name);
   }
   names:println;
   names:{String n | println(n);};

   also has conditional:

   for (string filename in OS.dir(".") where File(filename).isDir()) {
     tester.testDir(filename);
   }

   which forces change to closure for consistency:

   list a = ["Tom", "Ter", "Tim"];
   a:{string n where n!="Ter" | return n;}:println;

Ter

From pink at odahoda.de  Sun Nov  4 01:16:28 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 04 Nov 2007 01:16:28 -0700
Subject: [antlr-interest] how to do exceptions quickly
In-Reply-To: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
Message-ID: <fgjv4u$dgb$1@ger.gmane.org>

Hi,

Terence Parr wrote:
> I had a long conversation at Google last night with Neal Gafter, the guy 
> who built the javac compiler when he was at Sun. He told me that 
> exceptions can be made to execute very quickly.  The only thing you have 
> to avoid is the actual exception object creation which has to do all of 
> the expensive stack trace creation and so on.  He says that the actual 
> throwing of the exception itself is not a problem.  This might be 
> something to look at later to see if it goes quickly, because it results 
> in cleaner backtracking code.  Anyway, we can create some singleton 
> objects, which will solve the problem.  Hooray!
> 
> Anyway, this might be useful to people in general.  I thought was pass 
> along this interesting trick.

As a follow-up to this long forgotten thread: I just replaced the failed 
flag by a BacktrackingFailed exception in my Python target. I got rid of 
all flag checking reducing the file size of the generated parser by ~5% 
and having a small performance gain of about ~2 (using the Java.g parser).
If you are interested, look at CL 4272.


Bye,
  Ben


From mb.fgel at ownit.nu  Sun Nov  4 02:14:42 2007
From: mb.fgel at ownit.nu (Mats Behre)
Date: Sun, 04 Nov 2007 11:14:42 +0100
Subject: [antlr-interest] Basic grammar problem
In-Reply-To: <1223458816.20071103210954@gmail.com>
References: <1223458816.20071103210954@gmail.com>
Message-ID: <472D9B92.5010007@ownit.nu>

>I've tried to write basic parser. which need to return value for input
>string. String example: "parameter(1)". Parser need to return value
>from predefined map: parameters.get(1). I can't understand where
>problem is.

Well, what *is* the problem?

For me it outputs '2', just as expected.

Mats

From devunion at gmail.com  Sun Nov  4 07:26:01 2007
From: devunion at gmail.com (DevUnion Team)
Date: Sun, 4 Nov 2007 17:26:01 +0200
Subject: [antlr-interest] Basic grammar problem
In-Reply-To: <472D9B92.5010007@ownit.nu>
References: <1223458816.20071103210954@gmail.com> <472D9B92.5010007@ownit.nu>
Message-ID: <9210660555.20071104172601@gmail.com>

Dear, Mats.

>>I've tried to write basic parser. which need to return value for input
>>string. String example: "parameter(1)". Parser need to return value
>>from predefined map: parameters.get(1). I can't understand where
>>problem is.

> Well, what *is* the problem?

> For me it outputs '2', just as expected.

> Mats

Thanks for you replay.

I've exception. And Error output is:

BR.recoverFromMismatchedToken
line 1:11 mismatched input ')' expecting P_END

I've runned parser from IDEA. How do you run the parser?


-- 
Best regards,
 Vikar Liaskovich, DevUnion Team                         mailto:devunion at gmail.com


From mb.fgel at ownit.nu  Sun Nov  4 08:37:04 2007
From: mb.fgel at ownit.nu (Mats Behre)
Date: Sun, 04 Nov 2007 17:37:04 +0100
Subject: [antlr-interest] Basic grammar problem
In-Reply-To: <9210660555.20071104172601@gmail.com>
References: <9210660555.20071104172601@gmail.com>
Message-ID: <472DF530.60407@ownit.nu>

>I've exception. And Error output is:

>BR.recoverFromMismatchedToken
>line 1:11 mismatched input ')' expecting P_END

>I've runned parser from IDEA. How do you run the parser?

I'm running it from Eddie, which in this context means that I'm running from an ordinary commnd line.
Are you sure you're running the correct parser? There is no P_END token in it.
Maybe IDEA remembers another version? (I've got no experience with IDEA, so I have no clue.)

Hth
Mats

From atif.azad at hotmail.com  Sun Nov  4 10:49:53 2007
From: atif.azad at hotmail.com (atif azad)
Date: Sun, 04 Nov 2007 23:49:53 +0500
Subject: [antlr-interest] Problem using AST
Message-ID: <BLU105-F24EAC3245775CCB441CFA0E58F0@phx.gbl>

Dear all

I am using antlr trees and tree walker for a grammer.

my output is

(VAR int x) (VAR int y) (FUNC foo)  (VAR int t) (FUCN_BLOCK int p) (FUCN  
base)

What if I want that I should print the nodes starting with  VAR ist then 
FUNC at second postion and so on.
I mean i want the ouput like this


(VAR int x) (VAR int y)  (VAR int t)  (FUNC foo) (FUCN_BLOCK int p )  (FUCN  
base)

How could I rearrange my output.




kind Regards

Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From jaluber at gmx.de  Sun Nov  4 11:16:52 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 04 Nov 2007 20:16:52 +0100
Subject: [antlr-interest] Preserving subrule order
Message-ID: <472E1AA4.5040504@gmx.de>

Hi,

I'm quite sure that I've seen the solution somewhere but I can't seem to
find it. The problem is quite simple:

A : (B|C)*;

I want to rewrite that rule with the order of Bs and Cs preserved. How
do I do it?

Johannes

From antlr at mirality.co.nz  Sun Nov  4 11:41:48 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 05 Nov 2007 08:41:48 +1300
Subject: [antlr-interest] Preserving subrule order
In-Reply-To: <472E1AA4.5040504@gmx.de>
References: <472E1AA4.5040504@gmx.de>
Message-ID: <20071104194200.E01CF11EC44@www.antlr.org>

At 08:16 5/11/2007, Johannes Luber wrote:
 >I'm quite sure that I've seen the solution somewhere but I can't 

 >seem to find it. The problem is quite simple:
 >
 >A : (B|C)*;
 >
 >I want to rewrite that rule with the order of Bs and Cs 
preserved.
 >How do I do it?

Haven't tested this, but IIRC it goes something like:

A : (x+=(B|C))* -> ^(FOO $x*);


From jaluber at gmx.de  Sun Nov  4 11:43:03 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 04 Nov 2007 20:43:03 +0100
Subject: [antlr-interest] Preserving subrule order
In-Reply-To: <20071104194201.28959gmx1@mx069.gmx.net>
References: <472E1AA4.5040504@gmx.de> <20071104194201.28959gmx1@mx069.gmx.net>
Message-ID: <472E20C7.5040108@gmx.de>

Gavin Lambert wrote:
> At 08:16 5/11/2007, Johannes Luber wrote:
>>I'm quite sure that I've seen the solution somewhere but I can't
>>seem to find it. The problem is quite simple:
>>
>>A : (B|C)*;
>>
>>I want to rewrite that rule with the order of Bs and Cs preserved.
>>How do I do it?
> 
> Haven't tested this, but IIRC it goes something like:
> 
> A : (x+=(B|C))* -> ^(FOO $x*);
> 
Thanks!

Johannes

From Austin_Hastings at Yahoo.com  Sun Nov  4 12:12:16 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 04 Nov 2007 15:12:16 -0500
Subject: [antlr-interest] Problem using AST
In-Reply-To: <BLU105-F24EAC3245775CCB441CFA0E58F0@phx.gbl>
References: <BLU105-F24EAC3245775CCB441CFA0E58F0@phx.gbl>
Message-ID: <472E27A0.1090304@Yahoo.com>

Put the subtrees into a queue, and dump them when you're done.

If you have a rule that unifies them, then using antlr it might look like:

var_or_func
    : (vars+=VAR
    | funcs+=FUNC)
    -> $vars $funcs
    ;

If you don't have a single unifying rule, then you might have to create 
an actual queue of nodes, and dump the queue at the end of your 
top-level rule.

=Austin


atif azad wrote:
> Dear all
>
> I am using antlr trees and tree walker for a grammer.
>
> my output is
>
> (VAR int x) (VAR int y) (FUNC foo)  (VAR int t) (FUCN_BLOCK int p) 
> (FUCN  base)
>
> What if I want that I should print the nodes starting with  VAR ist 
> then FUNC at second postion and so on.
> I mean i want the ouput like this
>
>
> (VAR int x) (VAR int y)  (VAR int t)  (FUNC foo) (FUCN_BLOCK int p )  
> (FUCN  base)
>
> How could I rearrange my output.
>
>
>
>
> kind Regards
>
> Azad , Atif
>
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's 
> FREE! http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
>
>
>


From parrt at cs.usfca.edu  Sun Nov  4 16:54:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Nov 2007 16:54:07 -0800
Subject: [antlr-interest] how to do exceptions quickly
In-Reply-To: <fgjv4u$dgb$1@ger.gmane.org>
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
	<fgjv4u$dgb$1@ger.gmane.org>
Message-ID: <1C0309BB-8087-4833-A013-671C575127C1@cs.usfca.edu>


On Nov 4, 2007, at 1:16 AM, Benjamin Niemann wrote:

> Hi,
>
> Terence Parr wrote:
>> I had a long conversation at Google last night with Neal Gafter,  
>> the guy who built the javac compiler when he was at Sun. He told  
>> me that exceptions can be made to execute very quickly.  The only  
>> thing you have to avoid is the actual exception object creation  
>> which has to do all of the expensive stack trace creation and so  
>> on.  He says that the actual throwing of the exception itself is  
>> not a problem.  This might be something to look at later to see if  
>> it goes quickly, because it results in cleaner backtracking code.   
>> Anyway, we can create some singleton objects, which will solve the  
>> problem.  Hooray!
>> Anyway, this might be useful to people in general.  I thought was  
>> pass along this interesting trick.
>
> As a follow-up to this long forgotten thread: I just replaced the  
> failed flag by a BacktrackingFailed exception in my Python target.  
> I got rid of all flag checking reducing the file size of the  
> generated parser by ~5% and having a small performance gain of  
> about ~2 (using the Java.g parser).
> If you are interested, look at CL 4272.

So 2% faster in python?  Perhaps python is slow to try/catch (only  
create is slow in java).

Code was much cleaner though right?

Ter


From mikearace at hotmail.com  Sun Nov  4 19:27:08 2007
From: mikearace at hotmail.com (Mike Arace)
Date: Sun, 4 Nov 2007 22:27:08 -0500
Subject: [antlr-interest] Error Message Question
Message-ID: <BAY118-W388B4F374ABEF1BCDFA6BFB1880@phx.gbl>


Hi guys,

I'm building my first application around Antlr and have a question about the error messages generated by the tool at runtime.

The application is a Java console app, and I am trying to get it so that Antlr only outputs customized messages when lexing or parsing fails entirely.  I found the getErrorMessage() function that can be overridden in the lexer, but that only seems to address part of the error message after the location of the exception, and also only seems to address RecognitionExceptions; my Antlr installation (3.0.1) is very talkative and tells me about exceptions, recoveries, replacements, etc. right in stdout, and I would like to ignore these messages entirely.

I'm sure this is a solved problem already, but I am not finding anything on the site, the Antlr book, or in Google that addresses this in a application-wide way.  Any help would be greatly appreciated!

Best Regards,
Mike

_________________________________________________________________
Boo!?Scare away worms, viruses and so much more! Try Windows Live OneCare!
http://onecare.live.com/standard/en-us/purchase/trial.aspx?s_cid=wl_hotmailnews
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071104/51bfe135/attachment.html 

From simone.tripodi at gmail.com  Mon Nov  5 00:49:59 2007
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Mon, 5 Nov 2007 09:49:59 +0100
Subject: [antlr-interest] First SPARQL ANTLR3 grammar released
In-Reply-To: <BBB97FF2-5B5E-4004-B0EA-0BAB3D22ABC9@cs.usfca.edu>
References: <4173dc210710310355q18d989e6s77b79a138315acff@mail.gmail.com>
	<BBB97FF2-5B5E-4004-B0EA-0BAB3D22ABC9@cs.usfca.edu>
Message-ID: <4173dc210711050049v59c25c7eya169ce2eb2ac5690@mail.gmail.com>

Hi Terence,
thank you very much :)
Did you check the grammar? We implemented a complete infrastructure
with gunit and antlr3 ant task :)
Have a nice day,
Simone

2007/10/31, Terence Parr <parrt at cs.usfca.edu>:
> Hi Simone.  Great!  Thanks. :)
> Ter
> On Oct 31, 2007, at 3:55 AM, Simone Tripodi wrote:
>
> > Hello everybody,
> > my collegue Michele Mostarda and I are glad to announce the first
> > release of W3C SPARQL Grammar, implemented in ANTLR v3.
> > It was submitted yesterday to the central ANTLR Grammar list; if
> > anyone woulds like submit suggestions, raise issues or get involved,
> > is welcome :)
> > Have a nice day,
> >
> > Michele Mostarda
> > Simone Tripodi
>
>


-- 
My GoogleCode profile: http://code.google.com/u/simone.tripodi/
My Sourceforge: https://sourceforge.net/users/stripodi
My Picasa: http://picasaweb.google.com/simone.tripodi/
My Tube: http://www.youtube.com/user/stripodi

From antlr-interest at schraverus.com  Mon Nov  5 04:55:26 2007
From: antlr-interest at schraverus.com (Corno Schraverus)
Date: Mon, 5 Nov 2007 13:55:26 +0100
Subject: [antlr-interest] unknown parameters
Message-ID: <000001c81fab$24214d10$6c63e730$@com>

Hi all,

I ran into a problem with antlr 3, is there anybody that can help me with
that?
I have a rule with a paramater ('context') and within that rule I call
another rule with that parameter as an argument (The grammar is an adjusted
version of the java grammar).
The generated code (in C, see below) contains a function that is a fragment
of the rule, but lacks the parameter, and therefore gives a compile-error.
Is this an error in the code generation or am I doing something wrong?

TIA,

Corno


The rule:
---------------------------	
	
classBodyDeclarations [Context * context]
	:	
	(	';'
	|	(	modifier [context]
		)*
		(	typeParameters [context]
			(	(	type [context]
				| 'void'
				)
				methodDeclaratorRest [context]
			|	constructorDeclaratorRest [context]
			)
		|	type [context]
			methodDeclaratorRest [context]
		|	type [context]
			variableDeclarators [context]
			';'
		)
	)*
	;
--------------------------

The generated code:
--------------------------

// $ANTLR start synpred11
static void synpred11_fragment(pJavaParser ctx ) //<------------- parameter
missing here
{   
    // Java.g:68:5: ( type[context] methodDeclaratorRest[context] )
    // Java.g:68:5: type[context] methodDeclaratorRest[context]
    {
        FOLLOWPUSH(FOLLOW_type_in_synpred11207);
        type(ctx, context);                            //<--------------
problem is here
        FOLLOWPOP();
        if  (HASEXCEPTION())
        {
            goto rulesynpred11Ex;
        }
        if (HASFAILED())
        {
            return ;
        }
        FOLLOWPUSH(FOLLOW_methodDeclaratorRest_in_synpred11214);
        methodDeclaratorRest(ctx, context);
        FOLLOWPOP();
        if  (HASEXCEPTION())
        {
            goto rulesynpred11Ex;
        }
        if (HASFAILED())
        {
            return ;
        }

    }
    .....
----------------------------


From foolishewe at hotmail.com  Mon Nov  5 07:33:09 2007
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 5 Nov 2007 15:33:09 +0000
Subject: [antlr-interest] Disabling recovery during parsing
Message-ID: <BLU108-W33703E1BC2350F7D3FCB42C0880@phx.gbl>


Hello All:

Hopefully this attempt to transmit will get through, I'm sorry if you see this twice but I tried on October 30 but I didn't see my message in the list.

Our experiences with ANTLR has been generally good, but we could use a bit of help here. We have a fairly simple language which we read in one command at a time. A command is passed in as a buffer with an ascii NULL ('\0') terminator character, which we treat as a "sentinel" token to try to better detect when an invalid suffix might be in the look ahead. Since we have an interactive scripting tool, and all commands are terminated by newlines, we have a "wrapper" which invokes the parser and catches exceptions due to syntax errors. However, for some suffix errors, the parser appears to capture the exception internally, and generates a warning message, rather than passing the exception out. So although the diagnostic messages which might look something like (the null terminator is not displayed):

XXXX YYYYYY ZZZZ index-10;ge
BR.recoverFromMismatchedToken line 1:25 mismatched input ';ge expecting ENDOFCOMMAND

where XXXX, YYYYYY and ZZZZ are all valid keywords in the language, and the lexer has a production:
// Lexer Rules
ENDOFCOMMAND : '\000'; // A terminal NULL Character

The ;ge suffix should not be there, and is correctly flagged as invalid, but the error recovery is more "forgiving" than we want in our application, we would prefer the parser to throw a RecognitionException which we handle in the wrapper for consistency reasons.

Regards:

Bill M.

_________________________________________________________________
Help yourself to FREE treats served up daily at the Messenger Caf?. Stop by today.
http://www.cafemessenger.com/info/info_sweetstuff2.html?ocid=TXT_TAGLM_OctWLtagline

From jimi at temporal-wave.com  Mon Nov  5 09:19:31 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 5 Nov 2007 09:19:31 -0800
Subject: [antlr-interest] unknown parameters
In-Reply-To: <000001c81fab$24214d10$6c63e730$@com>
References: <000001c81fab$24214d10$6c63e730$@com>
Message-ID: <BAY130-DS28CE6F6F4800EE22C93C286880@phx.gbl>

You cannot use parameters in predicates I am afraid, as when the predicate
fragment is generated, the rule parameter is no longer in scope. I suspect
that you are using the backtrack=true; option, which is where these options
are coming from. If you wish to pass in such a parameter AND you wish to use
backtrack=true, then you will need to use scopes rather than local
parameters.

Overall it is probably best to get a grammar that does not use
backtrack=true, but using scopes will solve your issue with parameters.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Corno Schraverus
> Sent: Monday, November 05, 2007 4:55 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] unknown parameters
> 
> Hi all,
> 
> I ran into a problem with antlr 3, is there anybody that can help me
> with
> that?
> I have a rule with a paramater ('context') and within that rule I call
> another rule with that parameter as an argument (The grammar is an
> adjusted
> version of the java grammar).
> The generated code (in C, see below) contains a function that is a
> fragment
> of the rule, but lacks the parameter, and therefore gives a compile-
> error.
> Is this an error in the code generation or am I doing something wrong?
> 
> TIA,
> 
> Corno
> 
> 
> The rule:
> ---------------------------
> 
> classBodyDeclarations [Context * context]
> 	:
> 	(	';'
> 	|	(	modifier [context]
> 		)*
> 		(	typeParameters [context]
> 			(	(	type [context]
> 				| 'void'
> 				)
> 				methodDeclaratorRest [context]
> 			|	constructorDeclaratorRest [context]
> 			)
> 		|	type [context]
> 			methodDeclaratorRest [context]
> 		|	type [context]
> 			variableDeclarators [context]
> 			';'
> 		)
> 	)*
> 	;
> --------------------------
> 
> The generated code:
> --------------------------
> 
> // $ANTLR start synpred11
> static void synpred11_fragment(pJavaParser ctx ) //<-------------
> parameter
> missing here
> {
>     // Java.g:68:5: ( type[context] methodDeclaratorRest[context] )
>     // Java.g:68:5: type[context] methodDeclaratorRest[context]
>     {
>         FOLLOWPUSH(FOLLOW_type_in_synpred11207);
>         type(ctx, context);                            //<-------------
> -
> problem is here
>         FOLLOWPOP();
>         if  (HASEXCEPTION())
>         {
>             goto rulesynpred11Ex;
>         }
>         if (HASFAILED())
>         {
>             return ;
>         }
>         FOLLOWPUSH(FOLLOW_methodDeclaratorRest_in_synpred11214);
>         methodDeclaratorRest(ctx, context);
>         FOLLOWPOP();
>         if  (HASEXCEPTION())
>         {
>             goto rulesynpred11Ex;
>         }
>         if (HASFAILED())
>         {
>             return ;
>         }
> 
>     }
>     .....
> ----------------------------



From atif.azad at hotmail.com  Mon Nov  5 10:28:30 2007
From: atif.azad at hotmail.com (atif azad)
Date: Mon, 05 Nov 2007 23:28:30 +0500
Subject: [antlr-interest] get a list of one partiulcar node only from the
	parser
Message-ID: <BLU105-F40B3177236ACCD108E595DE5880@phx.gbl>

Dear all

Can any body please help me how can I get a list of one particular node from 
my parser (tree grammer case).
So that I get only this node values at output. E.g  ADD Add r1, r1  ADD Add 
r3, r4 ADD Add r5, 10.

If i use tree adopter from within the parser which command should I use to 
get a list of a node in main function.

Regards
Azad , Atif

_________________________________________________________________
Don't just search. Find. Check out the new MSN Search! 
http://search.msn.com/


From parrt at cs.usfca.edu  Mon Nov  5 11:16:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 5 Nov 2007 11:16:52 -0800
Subject: [antlr-interest] Bug in antlr-3.0.1 DOTTreeGenerator.getNodeST()
In-Reply-To: <B5ACD5B0D63ABA4FB1A1B6C467964FBD04226197@NA-PA-VBE01.na.tibco.com>
References: <B5ACD5B0D63ABA4FB1A1B6C467964FBD04226197@NA-PA-VBE01.na.tibco.com>
Message-ID: <2533F155-50DD-4F74-A4CA-86F18C1F538E@cs.usfca.edu>


On Nov 3, 2007, at 9:17 AM, Pranab Dhar wrote:

> Hi,
>
>      In the 3.0.1 release of antlr, the DOTTreeGenerator  escapes  
> ?  with \  but   not    \  character like \\ . As a result token  
> string that includes \?  is incorrectly escaped to \\? instead of \\\?
>
>
>
> The current code shows this
>
>
>
> if (text!=null) text = text.replaceAll("\"", "\\\\\"");
>
>
>
> and this should be
>
>
>
> if (text!=null) text = text.replaceAll("(\\\\|\")","\\\\$1");
hi. What's $1?

\\\\\" yields \\" in output; hmm...i guess we want \" in output so we  
need \\\" instead?

Also I need a "\\\\ -> "\\" right?

Ter


From pdhar at tibco.com  Mon Nov  5 12:21:27 2007
From: pdhar at tibco.com (Pranab Dhar)
Date: Mon, 5 Nov 2007 12:21:27 -0800
Subject: [antlr-interest] Bug in antlr-3.0.1 DOTTreeGenerator.getNodeST()
In-Reply-To: <2533F155-50DD-4F74-A4CA-86F18C1F538E@cs.usfca.edu>
References: <B5ACD5B0D63ABA4FB1A1B6C467964FBD04226197@NA-PA-VBE01.na.tibco.com>
	<2533F155-50DD-4F74-A4CA-86F18C1F538E@cs.usfca.edu>
Message-ID: <B5ACD5B0D63ABA4FB1A1B6C467964FBD072049BA@NA-PA-VBE01.na.tibco.com>

Hi Ter,

All those \ characters can quickly become confusing. :-)
Let me try to clarify:


In general, what is needed is:

1) Choose an escape character.
-> Here, backslash. In java: '\\'.

2) Start by escaping the escape character itself. This is what is
missing in the 3.0.1 DOTGenerator code.
-> In java: "\\" (string that contains one backslash character) needs to
become "\\\\" (string that contains two backslash characters).

3) Then, escape whatever other character needs escaping.
-> Here, double quotes. In java: "\"" (string that contains only '"')
needs to become "\\\"" (string that contains one backslash character and
one double quote).


Now, there are multiple ways to do that. Either 2 followed by 3, or 2
and 3 at the same time, which is what was proposed in the previous
email:

    text.replaceAll("(\\\\|\")","\\\\$1");      // steps 2 and 3

You can try it, it works :-).
Let's have a look at both parameters:

"(\\\\|\")" is a regular expression that contains one matching group
(expression between parentheses) that can be referred to in the
replacement string. It matches, in the input string:
 * either one single backslash, noted \\\\ (backslash is a special
character in regex so it needs to be escaped => doubled, and a special
character in java string so it needs to be escaped a second time => to
express one backslash you need to type four backslashes...),
 * or one single double quote, noted \"

"\\\\$1" is the replacement string. It contains one backslash character,
noted \\\\ (similar as above: \ is a special char in both replacement
text and java string so it has to be escaped twice), followed by the
first group that matched in the regexp, noted $1.


To summarize:
We try to match one character which is \ or ", and for all we find
(replaceAll), we prefix them with a \



Alternatively, you can use two steps instead, but I am not sure that it
is more readable:

    text.replaceAll("\\\\","\\\\\\\\")     // step 2
        .replaceAll("\"","\\\\\"");        // step 3



Let us know if it helps... :-)
Nicolas and Pranab.



PS: Also, it may be more efficient to use a statically compiled regular
expression, something like:


private static final Pattern BACKSLASH_OR_DOUBLE_QUOTE_PATTERN =
                                 Pattern.compile("(\\\\|\")");


text =
BACKSLASH_OR_DOUBLE_QUOTE_PATTERN.matcher(text).replaceAll("\\\\$1");



-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Monday, November 05, 2007 11:17 AM
To: Pranab Dhar
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Bug in antlr-3.0.1
DOTTreeGenerator.getNodeST()


On Nov 3, 2007, at 9:17 AM, Pranab Dhar wrote:

> Hi,
>
>      In the 3.0.1 release of antlr, the DOTTreeGenerator  escapes  
> "  with \  but   not    \  character like \\ . As a result token  
> string that includes \"  is incorrectly escaped to \\" instead of \\\"
>
>
>
> The current code shows this
>
>
>
> if (text!=null) text = text.replaceAll("\"", "\\\\\"");
>
>
>
> and this should be
>
>
>
> if (text!=null) text = text.replaceAll("(\\\\|\")","\\\\$1");
hi. What's $1?

\\\\\" yields \\" in output; hmm...i guess we want \" in output so we  
need \\\" instead?

Also I need a "\\\\ -> "\\" right?

Ter


From paul at paulkeir.com  Mon Nov  5 13:30:12 2007
From: paul at paulkeir.com (Paul Keir)
Date: Mon, 05 Nov 2007 21:30:12 +0000
Subject: [antlr-interest] superClass usage
In-Reply-To: <ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>
References: <472502A2.2040104@paulkeir.com>
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>
Message-ID: <472F8B64.5080403@paulkeir.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071105/6aee4a2a/attachment.html 

From pink at odahoda.de  Mon Nov  5 19:34:53 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 05 Nov 2007 19:34:53 -0800
Subject: [antlr-interest] how to do exceptions quickly
In-Reply-To: <1C0309BB-8087-4833-A013-671C575127C1@cs.usfca.edu>
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>	<fgjv4u$dgb$1@ger.gmane.org>
	<1C0309BB-8087-4833-A013-671C575127C1@cs.usfca.edu>
Message-ID: <fgoncu$qb8$1@ger.gmane.org>

Terence Parr wrote:
> 
> On Nov 4, 2007, at 1:16 AM, Benjamin Niemann wrote:
> 
>> Hi,
>>
>> Terence Parr wrote:
>>> I had a long conversation at Google last night with Neal Gafter, the 
>>> guy who built the javac compiler when he was at Sun. He told me that 
>>> exceptions can be made to execute very quickly.  The only thing you 
>>> have to avoid is the actual exception object creation which has to do 
>>> all of the expensive stack trace creation and so on.  He says that 
>>> the actual throwing of the exception itself is not a problem.  This 
>>> might be something to look at later to see if it goes quickly, 
>>> because it results in cleaner backtracking code.  Anyway, we can 
>>> create some singleton objects, which will solve the problem.  Hooray!
>>> Anyway, this might be useful to people in general.  I thought was 
>>> pass along this interesting trick.
>>
>> As a follow-up to this long forgotten thread: I just replaced the 
>> failed flag by a BacktrackingFailed exception in my Python target. I 
>> got rid of all flag checking reducing the file size of the generated 
>> parser by ~5% and having a small performance gain of about ~2 (using 
>> the Java.g parser).
>> If you are interested, look at CL 4272.
> 
> So 2% faster in python?  Perhaps python is slow to try/catch (only 
> create is slow in java).
> 
> Code was much cleaner though right?

I got rid of all the book keeping code for _state.failed, which gives me 
the small but still measurable perf gain (I had to reintroduce a similar 
flag when memoization is turned on, but it is much cheaper).
Adding the try..except block (only in synpredNN methods, where the 
parser is interested of the success/failure result) should be very cheap 
in Python AFAIK.
Also note that my perf timing was very simple. I just timed the whole 
process runtime, including interpreter startup (which should not be 
significant, because the parsed file was big enough to take a few 
seconds) and most significantly including the lexing phase - where most 
of the time is spent and the lexer was not effected by this change!
So the parser itself should see more than these 2%.
And it would probably be nice to have a grammar and input where 
backtracking fails very often to see the worst case impact of raising 
exceptions. Java.g had ~750 BacktrackingFailed exceptions for the 80KB 
java input file.


From the_madman at latinmail.com  Mon Nov  5 23:45:16 2007
From: the_madman at latinmail.com (Jorge Fuente-Alba)
Date: Tue,  6 Nov 2007 08:45:16 +0100 (CET)
Subject: [antlr-interest] Newbie: Confusion building C-Target project
Message-ID: <20071106074516.655A5E17D2B@smtp.latinmail.com>

Hi.

I have a game project, currently being developed under MinGW.

Thanks to Jim I tried Cygwin and managed to build LibAntlr3c.
Then noticed that I was having the same issues building a simple test parser because MinGW doesn't seem to like libantlr3c headers at all.
Tried building a test parser under Cygwin and got dizzy.

I've talked with the guys about building the parser using cygwin as a library and then using said library under mingw. This puts a few bumps in our build process that I'd rather not have. Cygwin forces a unix-like environment that we'd rather not use. We're happily using CodeBlocks and DevCpp before that, both rely on MinGW and we've never had trouble before.

My questions are two:
1.- Is there a reason why MinGW doesn't like libantlr3c? I read something about differences between MinGW-make and Cygwin-make. Is there a way to get libantlr3c to build under mingw?
2.- if the only way to go is to build from Cygwin and then wrap for MinGW, can anyone explain why i'm getting undefined references to '_antlr3AsciiFileStreamNew', '_inifileLexerNew', '_antlr3CommonTokenStreamSourceNew' and '_inifileParserNew' ? Can anyone help me with a proper makefile? (I suspect include and lib paths, as I just did gcc main.c)

Included: Example parser main.c and grammar
main.c
-------
#include "inifileLexer.h"
#include "inifileParser.h"

int main(int argc, char* argv[])
{
    pANTLR3_INPUT_STREAM pIStream = antlr3AsciiFileStreamNew((pANTLR3_UINT8)"MyInputFile.txt");
    pinifileLexer pLexer = inifileLexerNew(pIStream);

    /* Not obvious: */
    pANTLR3_COMMON_TOKEN_STREAM pTokens = antlr3CommonTokenStreamSourceNew(0, pLexer->pLexer->tokSource);

    pinifileParser pParser = inifileParserNew(pTokens);

    pParser->start(pParser);

    return 0;
}

grammar: inifile.g
--------------------
grammar inifile;
options {language=C;}


start	:	header (rule|empty)*;
rule	:	STR '=' data;
data	:	(INTEGER | FLOAT | STR) NL;
header	:	'[' STR ']' NL;
empty	:	WS* NL;

STR	:	('a'..'z' | 'A'..'Z' | '0'..'9' | ' ')*;
INTEGER	:	('0'..'9')*;
FLOAT	:	('0'..'9')  '.' ('0'..'9') ;
NL	:	('\n' | '\r');
WS	:	(' ' | '\t' );

--------
Thanks for any help provided, I'd really hate to end up hacking a brittle custom parser as I know the source of bugs this tends to be. Plus I'm trying to get my teachers to use ANTLR for the classes and students use mostly DevCpp around here :)


Texto: ?Concursa y g?nate un boleto doble para el show de The Police en M?xico! http://mx.starmedia.com/thepolice/

From john.ridgway at trincoll.edu  Tue Nov  6 09:54:15 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Tue, 6 Nov 2007 12:54:15 -0500
Subject: [antlr-interest] Rules with multiple parameters
Message-ID: <9CB7C4BE-C7D3-4BE6-B891-973F1548A325@trincoll.edu>

This is a copy of an earlier message.  I didn't see it on the list  
and saw no responses; so I'm guessing that it never made it to the list:

Consider the following in a grammar with the output=AST option:

methodOrFieldDecl[Tree modifiers, Tree type]
     :	identifier! methodDeclaratorRest[modifiers, type  
$identifier.tree]
     ;

methodDeclaratorRest[Tree modifiers, Tree type, Tree name]

which is a fragment of a Java 1.5 grammar.  The methodDeclaratorRest  
rule takes three parameters, which seems entirely reasonable  
(actually it's totally unreasonable, but Java was not designed for  
parsing...).  In order to pass three arguments to it I have to play  
with the locations of commas in the "call/usage" in order that the  
generated Java is correct.  If I tried to use

   methodDeclaratorRest[modifiers, type, $identifier.tree]

(note the comma after type), I would end up with an extra comma in  
the generated Java.

This is clearly (to me) a bug.  It is likely to be fixed?

Note.  It gets even worse if we want to do something like:

x
     : a! b! c! d[$a $b $c]
     ;

This won't work even with no commas in the given code.  To make it  
work I have to introduce some names:

x
     :   a! bb=b! c! d[$a bb $c]
     ;

probably does work...

Peace
- John


From jimi at temporal-wave.com  Tue Nov  6 15:02:08 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 6 Nov 2007 15:02:08 -0800
Subject: [antlr-interest] Newbie: Confusion building C-Target project
In-Reply-To: <20071106074516.655A5E17D2B@smtp.latinmail.com>
References: <20071106074516.655A5E17D2B@smtp.latinmail.com>
Message-ID: <BAY130-DS388C64F762FF74538F96786890@phx.gbl>

My first question would be why you feel the need to use MingW to be honest
as you can use the Microsoft compiler from the .Net Framework SDK, and your
compilation and linking problems should go away.

That said...

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jorge Fuente-Alba
Sent: Monday, November 05, 2007 11:45 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Newbie: Confusion building C-Target project


> I've talked with the guys about building the parser using cygwin as a 
> library and then using said library under mingw. This puts a few bumps in
> our build process that I'd rather not have. Cygwin forces a unix-like
> environment that we'd rather not use. We're happily using CodeBlocks and
> DevCpp before that, both rely on MinGW and we've never had trouble before.


> My questions are two:
> 1.- Is there a reason why MinGW doesn't like libantlr3c? I read something 
> about differences between MinGW-make and Cygwin-make. Is there a way to 
> get libantlr3c to build under mingw?

You are obviously free to build under MingW, but I won?t be spending any
time making autoconf and so on work under MingW ;-). Why not just make a
straight Makefile for Mingw? Or just build a script? If you configure using
cygwin, then you should get a compilable source set, that while you may need
to configure the generated (by automake) header file for Mingw, should be
fine. There is nothing special about the source coed, you should be able to
just compile all the .c files .to object code, then link the library.

However, MingW is binary compatible with Microsoft libraries is it not? So,
probably your easiest option is to download the .Net Framework SDK and just
namke the C runtime source. This will give you MS binaries, which should
just work with MingW.


2.- if the only way to go is to build from Cygwin and then wrap for MinGW,
can anyone explain why i'm getting undefined references to
'_antlr3AsciiFileStreamNew', '_inifileLexerNew',
'_antlr3CommonTokenStreamSourceNew' and '_inifileParserNew' ? Can anyone
help me with a proper makefile? (I suspect include and lib paths, as I just
did gcc main.c)

This is because cygwin binaries are not binary compatible with Windows. You
won?t get a cygwin built library to link with anything other than other
cygwin libraries. I would just build the proper Microsoft versions then link
these with MingW.

Jim




From atif.azad at hotmail.com  Tue Nov  6 16:58:50 2007
From: atif.azad at hotmail.com (atif azad)
Date: Wed, 07 Nov 2007 05:58:50 +0500
Subject: [antlr-interest] buildAST option
Message-ID: <BLU105-F400EBD895F24FFD60E5047E58A0@phx.gbl>

Hello eevrybody

The buildAST option is not working in my version 3 grammer. Can any body 
please tell me what option should I use instead of this in v3 antlr so that 
I can use commands like
parser.getAST
etc
in my main function.

Right now when I use this command It gives me error tha method getAST is not 
defined in your parser


Regards

Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From Austin_Hastings at Yahoo.com  Tue Nov  6 17:56:20 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 06 Nov 2007 20:56:20 -0500
Subject: [antlr-interest] ENHANCEMENT (JAVA): Catch and report exceptions in
 ActionAnalysis phase
Message-ID: <47311B44.1040306@Yahoo.com>

I am getting this output:

compile:
   [antlr3] ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  
1989-2007
   [antlr3] error(10):  internal error: 
/home/austin/gunit/sources/org/antlr/gunit/TestSuite.g : 
java.lang.NullPointerException
   [antlr3] 
org.antlr.tool.ActionAnalysisLexer.mX_Y(ActionAnalysisLexer.java:133)
   [antlr3] 
org.antlr.tool.ActionAnalysisLexer.mTokens(ActionAnalysisLexer.java:323)
   [antlr3] 
org.antlr.tool.ActionAnalysisLexer.nextToken(ActionAnalysisLexer.java:69)
   [antlr3] 
org.antlr.tool.ActionAnalysisLexer.analyze(ActionAnalysisLexer.java:43)
   [antlr3] 
org.antlr.tool.Grammar.examineAllExecutableActions(Grammar.java:1283)
   [antlr3] org.antlr.tool.Grammar.setGrammarContent(Grammar.java:567)
   [antlr3] org.antlr.tool.Grammar.<init>(Grammar.java:456)
   [antlr3] org.antlr.Tool.getGrammar(Tool.java:331)
   [antlr3] org.antlr.Tool.process(Tool.java:267)
   [antlr3] org.antlr.Tool.main(Tool.java:70)



At this point, I have absolutely no idea what is causing these messages. 
I believe, from the file name and line info, that it relates to 
$rule.attribute referencing inside an action, but beyond that I am 
mystified. I think it would be good to have AAL.analyze() or maybe 
Grammar.examineAllExecutableActions() catch these exceptions and tell 
the user exactly which action was the source of the trouble.

Thanks,

=Austin


From dan.hazon at novafora.com  Tue Nov  6 21:47:00 2007
From: dan.hazon at novafora.com (Dan Hazon)
Date: Tue, 6 Nov 2007 21:47:00 -0800
Subject: [antlr-interest] C target with g++ compiler
In-Reply-To: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
References: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
Message-ID: <DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>

This question is to Jim or users who use the C target.

I'm using the C target.
My code compiles perfectly with gcc but when trying with g++ it fails
with bunch of errors:

/usr/local/include/antlr3bitset.h:51: error: expected unqualified-id
before '||' token
/usr/local/include/antlr3bitset.h:51: error: expected `)' before '||'
token
/usr/local/include/antlr3bitset.h:51: error: abstract declarator
'ANTLR3_BITSET_struct*' used as declaration
/usr/local/include/antlr3bitset.h:51: error: expected ';' before '||'
token

I see that this is because of the following definition in
antlr3bitset.h:

    struct ANTLR3_BITSET_struct  *  (*or)	    (struct
ANTLR3_BITSET_struct  * bitset1, struct ANTLR3_BITSET_struct * bitset2);

g++ seems to be replacing or with ||


And:

vdlParser.c:9085: error: invalid conversion from 'const void*' to
'void*'
vdlParser.c:9205: error: invalid conversion from 'const void*' to
'void*'
vdlParser.c:9481: error: invalid conversion from 'const void*' to
'void*'
vdlParser.c:9626: error: invalid conversion from 'const void*' to
'void*'

This seems to be because of the following definition:

    /** The string name of the exception
     */
    void    *	    name;

    /** The printable message that goes with this exception, in your
preferred
     *  encoding format. ANTLR just uses ASCII by default but you can
ignore these
     *  messages or convert them to another format or whatever of
course. They are
     *  really internal messages that you then decide how to print out
in a form that
     *  the users of your product will understand, as they are unlikely
to know what
     *  to do with "Recognition exception at: [[TOK_GERUND..... " ;-)
     */
    void    *	    message;


In the generated parser code these variables are being assigned antlr
generated constant literal strings (e.g. "Early Exit")
g++ doesn't like this.

Can you suggest an elegant way to overcome those errors?

I'm interfacing with some other C++ code and must use g++.



From jaluber at gmx.de  Wed Nov  7 02:20:06 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 07 Nov 2007 11:20:06 +0100
Subject: [antlr-interest] buildAST option
In-Reply-To: <BLU105-F400EBD895F24FFD60E5047E58A0@phx.gbl>
References: <BLU105-F400EBD895F24FFD60E5047E58A0@phx.gbl>
Message-ID: <47319156.509@gmx.de>

atif azad wrote:
> Hello eevrybody
> 
> The buildAST option is not working in my version 3 grammer. Can any body
> please tell me what option should I use instead of this in v3 antlr so
> that I can use commands like
> parser.getAST
> etc
> in my main function.
> 
> Right now when I use this command It gives me error tha method getAST is
> not defined in your parser

Use "options {output=AST;}" in your parser and the getTree() method to
retrieve the tree.

Johannes

From jaluber at gmx.de  Wed Nov  7 02:22:51 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 07 Nov 2007 11:22:51 +0100
Subject: [antlr-interest] C target with g++ compiler
In-Reply-To: <DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
References: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
	<DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
Message-ID: <473191FB.7080402@gmx.de>

Dan Hazon wrote:
...
> 
> Can you suggest an elegant way to overcome those errors?
> 
> I'm interfacing with some other C++ code and must use g++.

Why don't you compile the C-target with a C-compiler and reference the
resulting library via extern C?

Johannes

From Eric.Deplagne at loria.fr  Wed Nov  7 02:38:58 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Wed, 7 Nov 2007 11:38:58 +0100
Subject: [antlr-interest] C target with g++ compiler
In-Reply-To: <473191FB.7080402@gmx.de>
References: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
	<DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
	<473191FB.7080402@gmx.de>
Message-ID: <20071107103858.GC665@goldorak3.eric.deplagne.name>

On mer, 07 nov 2007 11:22:51 +0100, Johannes Luber wrote:
> Dan Hazon wrote:
> ...
> > 
> > Can you suggest an elegant way to overcome those errors?
> > 
> > I'm interfacing with some other C++ code and must use g++.
> 
> Why don't you compile the C-target with a C-compiler and reference the
> resulting library via extern C?
> 
> Johannes

  If the trouble is in a struct, it's not sure that will be enough...

  Using "or" as an identifier is not a good idea anyway...

-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20071107/f9fc3ebc/attachment.bin 

From antlr-interest at schraverus.com  Wed Nov  7 02:58:31 2007
From: antlr-interest at schraverus.com (Corno Schraverus)
Date: Wed, 7 Nov 2007 11:58:31 +0100
Subject: [antlr-interest] unknown parameters
In-Reply-To: <CC4356A9E0D04EE98791C32BD2BAD0F4@ISDlan.local>
References: <CC4356A9E0D04EE98791C32BD2BAD0F4@ISDlan.local>
Message-ID: <001801c8212d$23a01dc0$6ae05940$@com>

> You cannot use parameters in predicates I am afraid, as when the
> predicate
> fragment is generated, the rule parameter is no longer in scope. I
> suspect
> that you are using the backtrack=true; option, which is where these
> options
> are coming from. If you wish to pass in such a parameter AND you wish
> to use
> backtrack=true, then you will need to use scopes rather than local
> parameters.
> 
> Overall it is probably best to get a grammar that does not use
> backtrack=true, but using scopes will solve your issue with parameters.
> 
> Jim
> 
That's correct, I'm using the 'backtrack=true' option, I'm working with the
Java 1.5 grammar that Terence made for Antlr3. If he wasn't able to create a
grammar without backtracking, I'm very much afraid that I won't be able to
improve on that.

I'm trying to understand if the fact that you can't combine parameters and
backtracking is an implementation issue or a conceptual issue. I could
imagine that the same fragment function is generated twice by antlr; one
with and one without parameters and actions. The first one is used during
probing and the second one is used when the right 'path' is found. Would
that be possible?

The actual issue I have is a bit more complicated than the example I showed,
I'm not passing the parameter directly, the parameter is a container and for
every matched subrule a component will have to be added to that container.
If I was to use scopes; would the following code be a 'good' solution?

bar [Bar * myBar]
	scope {
		Bar * bar_;
	}
	@init {
		$bar::bar_ = myBar;
	}
	:
	(
		{
			Foo * myFoo = new Foo();
			$bar::bar_.addFoo(myFoo);
		}
		foo [myFoo]
	 )*
	;

TIA,

Corno


From craig at palantir.co.za  Wed Nov  7 03:03:21 2007
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Wed, 07 Nov 2007 13:03:21 +0200
Subject: [antlr-interest] Rewriting the input.
Message-ID: <20071107130321.ebkcsq1lc8sk0soc@webmail.palantir.co.za>

Hi,

Is it easy to output the input stream, but replace delimited sections of the
input as they are sent out.
I wish to pipe input to output except for pieces of the input delimited with
?stream? and ?endstream?, which require special processing before being sent
out. In essence I would require a sub-parser to handle the sections of input
inside the delimiters.

Is this easy to do?
I only see samples (in the book) where the input stream is known. I wish to
ignore (well, output) everything not in delimiters without altering it.

Regards
Craig.


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From oehrstroem at gmail.com  Wed Nov  7 03:20:08 2007
From: oehrstroem at gmail.com (Fredrik Ohrstrom)
Date: Wed, 7 Nov 2007 12:20:08 +0100
Subject: [antlr-interest] Rewriting the input.
In-Reply-To: <20071107130321.ebkcsq1lc8sk0soc@webmail.palantir.co.za>
References: <20071107130321.ebkcsq1lc8sk0soc@webmail.palantir.co.za>
Message-ID: <8d80b1570711070320k46919fei968ffddefce2510c@mail.gmail.com>

You should probably use the TokenRewriteStream
to output an identical copy of the input stream.

Your parser then applies stream rewriting commands
on the stream/endstream data only.

It doesn't hurt if you can express both the inside
and outside of your stream/endstream data with a
single grammar. But if that is difficult or unnecessary
complicated, you can simply hide the outside with the
lexer. I.e. the lexer hides all input until it receives a
stream token and goes back to hiding when it receives
an endstream token.

//Fredrik

2007/11/7, craig at palantir.co.za <craig at palantir.co.za>:
> Hi,
>
> Is it easy to output the input stream, but replace delimited sections of the
> input as they are sent out.
> I wish to pipe input to output except for pieces of the input delimited with
> 'stream' and 'endstream', which require special processing before being sent
> out. In essence I would require a sub-parser to handle the sections of input
> inside the delimiters.
>
> Is this easy to do?
> I only see samples (in the book) where the input stream is known. I wish to
> ignore (well, output) everything not in delimiters without altering it.
>
> Regards
> Craig.
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>
>

From henryb at ntlworld.com  Wed Nov  7 05:26:23 2007
From: henryb at ntlworld.com (Henry Butowsky)
Date: Wed, 07 Nov 2007 13:26:23 +0000
Subject: [antlr-interest] Threading the TreeParser
Message-ID: <4731BCFF.1080806@ntlworld.com>

HI Guys,
  Im using the C++ 2.7.6 runtime.
  I am trying to thread my Treeparser with OpenMP. 
    What I would like to have is multiple invocations of my tree paser 
so I can process     expressions in  parallel - but looking at the code 
in the C++ runtime it seems that the base TreeParser()  has a private 
copy constructor and a private '=' operator.
As below:


      private:
    // no copying of treeparser instantiations...
    TreeParser(const TreeParser& other);
    TreeParser& operator=(const TreeParser& other);
};

Has anyone got any ideas how to proceed ?

Regards Henry






From dalke at dalkescientific.com  Wed Nov  7 08:46:04 2007
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 7 Nov 2007 17:46:04 +0100
Subject: [antlr-interest] lexer state and SMILES strings
Message-ID: <050606A6-0470-4AC2-AAD9-B1822DAC8E52@dalkescientific.com>

Hi all,

   I'm parsing a format called SMILES.  It's a notation for
writing molecules as a single line of ASCII.  Details at

http://daylight.com/dayhtml/doc/theory/theory.smiles.html
http://en.wikipedia.org/wiki/ 
Simplified_molecular_input_line_entry_specification

I've written parsers for it using other parser generators
but was hoping to use ANTLR for better cross-language output
and simplifications I can do using tree grammars.

My previous parsers were state dependent, and use only 1
character lookahead.  This is easily handled by most of
the parsers I know about for this format, which are
hand-written using a bunch of switch statements.

I've looked through the back archives and found several people
asking about how to change the lexer state, but I didn't
understand what to do from the responses I found.  I would
appreciate some advice or pointers to existing code which
does something like switching lexers, or adding lexer state, in ANTLR.

=======

That was the summary.  Here's the tedious details.

The two main responses in the mailing list are of the form:

   - create two lexers and have the parser switch between them

   - the more provocative statement of Jim Idle:

     Perhaps, someday, the world can require that any 'new' [insert
     post-modernistic interpolation of 'reality' here ;-)] languages
    have to have a sane ANTLR parser as proof of their ability not
    to drive anyone with any sense mad  ... <duck>

As he then dissed Python ("shoot anyone deciding that
indenting should be lexically/grammatically significant on
the vague justification that it makes people format code -
something that a good programmer should do naturally anyway.")
I feel comfortable not seeing the crouching duck. :)


I couldn't find information how to generate multiple lexers.
There's some old documentation for that in ANTLR 2's
doc/streams.html but I see nothing in the ANTLR book which
talks about that possibility.  (In general the index is
lacking.  Eg, there's no index entry for 'channels',
which does exist in the book, so I don't know if the
lack of information about 'streams' means it doesn't exist.)


I would like some advice, suggestions, pointers to working
code, etc.


So that you can see my problem, here are a few examples
of SMILES strings and why I use lexer states to handle it.
I'm deliberately lying about the grammar because the full
details depends on chemistry that isn't relevant.  (Ie,
I'm not going to talk about "aromaticity".)

Here's a simple atom:
    C     this is methane, a carbon with the default of 4 hydrogens
   [CH4]  this is also methane, a carbon with 4 explicit hydrogens

   [13C]  this is a carbon 13 atom with zero hydrogens.
            (Carbon has many isotopes.  The most common is C-12.
             The ratio between C-12 and radioactive C-14 is used
             for radiocarbon dating.)

   [C-]  this is a carbon atom with zero hydrogens and a charge of -1
   [C--]  this is a carbon atom with zero hydrogens and a charge of -2
   [C-2]  this is a carbon atom with zero hydrogens and a charge of -2


   C-C    this is carbon bonded to another carbon through a single bond.
           Each atom has 3 hydrogens (with the implicit rules,
           the default valence of carbon is 4, the bond takes
           1 electron from each, so there are 3 electrons remaining)

   C=C   this is a carbon bonded to another carbon through a double bond
           Each atom has 2 hydrogens.

You can see at this point that there is ambiguity between "-"
meaning "single bond" and "-" meaning "charge of -1".  The
bond notation only occurs outside of the '[]' notation, and
the charge notation only occurs inside of '[]'.

   CC     this is another way of writing "C-C".  If two atoms are
           side by side then the default rule is to assume it's
           a single bond.

   CCCCCC  This is hexane.  6 carbon atoms in a chain, with a single
         bond between successive atoms

   C1CCCCC1  This is a ring of carbons.  The '1' connects the first
         carbon atom to the last, making a ring.  These are called
         ring closures but they don't necessarily close rings.

   C9CCCCC9  This is another way to describe the same ring.
         I can use the digits '0'..'9'.

   C%43CCCCC%43  The notation '%' DIGIT DIGIT is for ring closure
         numbers from 10 to 99, inclusive.

This last SMILES string should tokenize to
   ATOM "C"
   RING "43"
   ATOM "C"
   ATOM "C"
   ATOM "C"
   ATOM "C"
   ATOM "C"
   RING "43"


   C.C    This is two methanes.  The "." is a way to say that
         successive atoms are not bonded together.

   C1.C1  This is another way to write "CC".  The ring closure in
           this case connects the two carbons together, even
           though there is no explicit connection via the '.'

    C1.C12.C23.C34.C45.C5  This is the same as "CCCCCC".  The
       ring closures connect the atoms despite the "."s that
       are supposed to separate them.

This last case should tokenize to:
    ATOM "C"
    RING "1"
    DOT
    ATOM "C"
    RING "1"
    RING "2"
    DOT
    ATOM "C"
    RING "2"
    RING "3"
    DOT
    ...


Finally,

    C-1.C-1  is the same as "C-C", which is the same as "CC".
        This specifies the bond type ("-" or "=" for single
        or double) for the bond created by the ring closure.
        The default is single.

    C=1.C=1  is the same as "C=C".


    C-67-8[C-].[14C-1]-6.[12C-2]7.[CH2-3]-8

This is very hairy, and should okenize somewhat as:

   ATOM "C" with default hydrogen rules
     closure ("-", "6")
     closure (<default>, "7")
     closure ("-", "8")
   ATOM "C" with no hydrogens and a charge of -1
   DOT
   ATOM "C" with no hydrogens, isotope number 14 and charge of -1
     closure ("-", "6")
   DOT
   ATOM "C" with no hydrogens, isotope number 12 and charge of -2
     closure (<default>, "7")
   DOT
   ATOM "C" with two hydrogens and a charge of -3)
      closure ("-", "8")

You can see my problem.  Depending on where I am,
"-2" is parsed as "charge of -2" or "single bond ring closure
with identifer 2".

If I use '0'...'9'+ to tokenize the isotope field, like in [12C],
then it will also parse the 12 in

   C12.C1.C2

If I instead let the parser do everything, so the lexer
items are '-', and '0'..'9', then it will be annoyingly
tedious in the parser to have to reassemble the characters,
because  '[238U]' will be parsed using

atom_in_brackets: '[' isotope? SYMBOL hydrogen? charge? ']';
isotope: DIGIT*; // will need to combine the tokens to get the value
SYMBOL: 'A'..'Z' 'a'..'z'? ;
hydrogen: 'H' DIGIT*;  // again, will combine the tokens
charge: MINUS DIGIT*
       | PLUS DIGIT* ;

atom_list: (atom closure*)*;
closure: DIGIT | '%' DIGIT DIGIT;


I'm pretty sure this will work, but it ends up pushing all
of the work into the parser.  That seems like a lot of
waste because I'm basically using the parser as a lexer.
While in a yacc-style parser it's very easy to define the
two or three lexer states I need.  When I see '[' I switch
to a "parsing the inside of []s" state, and when I see
the closing ']' I switch back.

What should I do?

				Andrew
				dalke at dalkescientific.com



From john.ridgway at trincoll.edu  Wed Nov  7 09:16:21 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Wed, 7 Nov 2007 12:16:21 -0500
Subject: [antlr-interest] unknown parameters
In-Reply-To: <001801c8212d$23a01dc0$6ae05940$@com>
References: <CC4356A9E0D04EE98791C32BD2BAD0F4@ISDlan.local>
	<001801c8212d$23a01dc0$6ae05940$@com>
Message-ID: <C4EE8503-FB58-4B63-B635-5AFF04E22073@trincoll.edu>

On Nov 7, 2007, at 5:58 AM, Corno Schraverus wrote:

>> You cannot use parameters in predicates I am afraid, as when the
>> predicate
>> fragment is generated, the rule parameter is no longer in scope. I
>> suspect
>> that you are using the backtrack=true; option, which is where these
>> options
>> are coming from. If you wish to pass in such a parameter AND you wish
>> to use
>> backtrack=true, then you will need to use scopes rather than local
>> parameters.
>>
>> Overall it is probably best to get a grammar that does not use
>> backtrack=true, but using scopes will solve your issue with  
>> parameters.
>>
>> Jim
>>
> That's correct, I'm using the 'backtrack=true' option, I'm working  
> with the
> Java 1.5 grammar that Terence made for Antlr3. If he wasn't able to  
> create a
> grammar without backtracking, I'm very much afraid that I won't be  
> able to
> improve on that.
>
> I'm trying to understand if the fact that you can't combine  
> parameters and
> backtracking is an implementation issue or a conceptual issue. I could
> imagine that the same fragment function is generated twice by  
> antlr; one
> with and one without parameters and actions. The first one is used  
> during
> probing and the second one is used when the right 'path' is found.  
> Would
> that be possible?
>
> The actual issue I have is a bit more complicated than the example  
> I showed,
> I'm not passing the parameter directly, the parameter is a  
> container and for
> every matched subrule a component will have to be added to that  
> container.
> If I was to use scopes; would the following code be a 'good' solution?
>
> bar [Bar * myBar]
> 	scope {
> 		Bar * bar_;
> 	}
> 	@init {
> 		$bar::bar_ = myBar;
> 	}
> 	:
> 	(
> 		{
> 			Foo * myFoo = new Foo();
> 			$bar::bar_.addFoo(myFoo);
> 		}
> 		foo [myFoo]
> 	 )*
> 	;
>
> TIA,
>
> Corno
>

Corno -
I believe that it's a conceptual issue.  What happens if the  
parameter that is passed is used in a semantic predicate to allow/ 
disallow a particular parse path?  The parse tree is then dependent  
on the parameter.  I have tried, with some success (not fully yet, I  
believe, but that may be inexperience), the following:

bar[Bar myBar]
     :   (foo[null])=> foo[myBar]
     ;
or whatever.  If the parse is not dependent on the parameter then the  
syntactic predicate should work correctly.

Hope this helps -- and I hope I'm not wildly off-base.

Peace
- John
  

From parrt at cs.usfca.edu  Wed Nov  7 09:50:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 7 Nov 2007 09:50:01 -0800
Subject: [antlr-interest] CFP: Eighth Workshop on Language Descriptions,
	Tools and Applications (LDTA 2008)
Message-ID: <BB77B1C3-B955-45D6-B322-1AC2A7DD421B@cs.usfca.edu>

LDTA Second call for papers

This is the Second Call For Papers for the Eighth Workshop on
Language Descriptions, Tools and Applications (LDTA 2008)

LDTA is a satellite event of ETAPS which takes place between
March 29 and April 6, 2008 in Budapest, Hungary.

See http://ldta2008.inf.elte.hu/

== Invited Speaker ==

LDTA is happy to announce our invited speaker: Bob Fuhrer from IBM  
Research (Program Analysis and Transformation group). He is currently  
leading the team developing Eclipse-IMP, the meta tooling platform  
for the Eclipse IDE.

== Scope ==

LDTA is an application and tool oriented forum on meta programming in  
a broad sense.

A meta program is a program that takes other programs as input or  
output. The focus of LDTA is on generated or otherwise efficiently  
implemented meta programs, possibly using high level descriptions of  
programming languages. Tools and techniques presented at LDTA are  
usually applicable in the context of "Language Workbenches" or "Meta  
Programming Systems" or simply as parts of advanced programming  
environments or IDEs. The applications areas include, but are not  
limited to:

    * Program analysis, transformation, generation and verification
    * Implementation of Domain Specific Languages (both visual and  
textual)
    * Reverse engineering and reengineering
    * Refactoring and other source-to-source transformations
    * Application modelling (MDE, MDA, Software Factories, Product  
lines)
    * Grammar engineering / Grammarware
    * Language definition and language prototyping
    * Debugging, profiling and testing
    * IDE construction
    * Compiler construction

LDTA is traditionally a forum where computer science theories are put  
to the test of real-world software engineering issues, for example by  
applying:        * context-free grammars to parser generation for real
      programming languages,
    * attribute grammars to static analyzer and compiler generation,
    * term rewriting to source-to-source transformation,
    * action semantics to programming language implementation,
    * model checking to software verification.

Note that LDTA solicits submissions from any technological or  
theoretical domain, as long as the paper is within the application  
scope.

== Submission Procedure and Publication ==

Submissions in the following categories are admissible:
    * research papers,
    * experience reports,
    * tool demonstrations.

The final versions of accepted papers will be published in Electronic  
Notes in Theoretical Computer Science (ENTCS), Elsevier Science, and  
will be made
available during the workshop.

Each submission must:
    * be original, i.e. not published or submitted elsewhere,
    * contain a clear motivation,
    * contain a thorough analysis of the claimed results
      (not for tool demonstrations),
    * be written in less than 15 pages (research papers and experience
      reports), or less than 5 pages (tool demonstrations),
    * specify which category (research, experience, tool demonstration)
      the paper is to be considered under,
    * use the ENTCS style.

The authors of the research papers and experience reports are  
required to give a 25 minute presentation at LDTA 2008. The authors  
of the tool demonstrations are required to give a 15 minute  
introduction to the tool, and to demonstrate their tool in a more  
interactive (parallel) session during 90 minutes.

The authors of the best full-length papers will be invited to write a  
journal version of their paper which will be separately reviewed and,  
assuming acceptance, be published in journal form. As in past years,  
this will be done in a special issue devoted to LDTA 2008 of the  
journal Science of Computer Programming (Elsevier Science).

The authors of the best tool demonstrations will be invited to write  
a short paper and submit the source of code of their tool, which will  
both be separately reviewed and, assuming acceptance, be published in  
the special issue on Experimental Software and Toolkits (EST) of the  
journal Science of Computer Programming (Elsevier Science).

Please email your submission to both a.johnstone at rhul.ac.uk and  
jurgen.vinju at cwi.nl

== Important Dates ==
    * Abstract submission deadline:
    Friday November 30th, 2007
    * Paper and tool demo submission deadline:
    Friday December 7th, 2007
    * Notification of acceptance:
    Friday February 1st, 2008
    * Workshop date:
    Saturday April 5th, 2008



From Austin_Hastings at Yahoo.com  Wed Nov  7 10:05:37 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 07 Nov 2007 13:05:37 -0500
Subject: [antlr-interest] lexer state and SMILES strings
In-Reply-To: <050606A6-0470-4AC2-AAD9-B1822DAC8E52@dalkescientific.com>
References: <050606A6-0470-4AC2-AAD9-B1822DAC8E52@dalkescientific.com>
Message-ID: <4731FE71.4080409@Yahoo.com>

Andrew,

I'm not loving the language, but I guess you can't change it. :(

My first recommendation would be to use antlr2 -- antlr3 wants to be 
able to support all that stuff, but can't at the moment.

Next: go ahead and use the parser as a lexer, and then use a tree parser 
to handle the output. Don't get hung up on the names, just work with 
what works. For parsing the insides of square brackets, have a look at 
the book's section on emitting multiple tokens. You'll be in 
hell^W^Wwriting your own token stream class, but you can use the opening 
brace to build a mini-lexer withing the lexing subsystem.

=Austin



Andrew Dalke wrote:
> Hi all,
>
>   I'm parsing a format called SMILES.  It's a notation for
> writing molecules as a single line of ASCII.  Details at
>
> http://daylight.com/dayhtml/doc/theory/theory.smiles.html
> http://en.wikipedia.org/wiki/Simplified_molecular_input_line_entry_specification 
>
>
> I've written parsers for it using other parser generators
> but was hoping to use ANTLR for better cross-language output
> and simplifications I can do using tree grammars.
>
> My previous parsers were state dependent, and use only 1
> character lookahead.  This is easily handled by most of
> the parsers I know about for this format, which are
> hand-written using a bunch of switch statements.
>
> I've looked through the back archives and found several people
> asking about how to change the lexer state, but I didn't
> understand what to do from the responses I found.  I would
> appreciate some advice or pointers to existing code which
> does something like switching lexers, or adding lexer state, in ANTLR.
>
> =======
>
> That was the summary.  Here's the tedious details.
>
> The two main responses in the mailing list are of the form:
>
>   - create two lexers and have the parser switch between them
>
>   - the more provocative statement of Jim Idle:
>
>     Perhaps, someday, the world can require that any 'new' [insert
>     post-modernistic interpolation of 'reality' here ;-)] languages
>    have to have a sane ANTLR parser as proof of their ability not
>    to drive anyone with any sense mad  ... <duck>
>
> As he then dissed Python ("shoot anyone deciding that
> indenting should be lexically/grammatically significant on
> the vague justification that it makes people format code -
> something that a good programmer should do naturally anyway.")
> I feel comfortable not seeing the crouching duck. :)
>
>
> I couldn't find information how to generate multiple lexers.
> There's some old documentation for that in ANTLR 2's
> doc/streams.html but I see nothing in the ANTLR book which
> talks about that possibility.  (In general the index is
> lacking.  Eg, there's no index entry for 'channels',
> which does exist in the book, so I don't know if the
> lack of information about 'streams' means it doesn't exist.)
>
>
> I would like some advice, suggestions, pointers to working
> code, etc.
>
>
> So that you can see my problem, here are a few examples
> of SMILES strings and why I use lexer states to handle it.
> I'm deliberately lying about the grammar because the full
> details depends on chemistry that isn't relevant.  (Ie,
> I'm not going to talk about "aromaticity".)
>
> Here's a simple atom:
>    C     this is methane, a carbon with the default of 4 hydrogens
>   [CH4]  this is also methane, a carbon with 4 explicit hydrogens
>
>   [13C]  this is a carbon 13 atom with zero hydrogens.
>            (Carbon has many isotopes.  The most common is C-12.
>             The ratio between C-12 and radioactive C-14 is used
>             for radiocarbon dating.)
>
>   [C-]  this is a carbon atom with zero hydrogens and a charge of -1
>   [C--]  this is a carbon atom with zero hydrogens and a charge of -2
>   [C-2]  this is a carbon atom with zero hydrogens and a charge of -2
>
>
>   C-C    this is carbon bonded to another carbon through a single bond.
>           Each atom has 3 hydrogens (with the implicit rules,
>           the default valence of carbon is 4, the bond takes
>           1 electron from each, so there are 3 electrons remaining)
>
>   C=C   this is a carbon bonded to another carbon through a double bond
>           Each atom has 2 hydrogens.
>
> You can see at this point that there is ambiguity between "-"
> meaning "single bond" and "-" meaning "charge of -1".  The
> bond notation only occurs outside of the '[]' notation, and
> the charge notation only occurs inside of '[]'.
>
>   CC     this is another way of writing "C-C".  If two atoms are
>           side by side then the default rule is to assume it's
>           a single bond.
>
>   CCCCCC  This is hexane.  6 carbon atoms in a chain, with a single
>         bond between successive atoms
>
>   C1CCCCC1  This is a ring of carbons.  The '1' connects the first
>         carbon atom to the last, making a ring.  These are called
>         ring closures but they don't necessarily close rings.
>
>   C9CCCCC9  This is another way to describe the same ring.
>         I can use the digits '0'..'9'.
>
>   C%43CCCCC%43  The notation '%' DIGIT DIGIT is for ring closure
>         numbers from 10 to 99, inclusive.
>
> This last SMILES string should tokenize to
>   ATOM "C"
>   RING "43"
>   ATOM "C"
>   ATOM "C"
>   ATOM "C"
>   ATOM "C"
>   ATOM "C"
>   RING "43"
>
>
>   C.C    This is two methanes.  The "." is a way to say that
>         successive atoms are not bonded together.
>
>   C1.C1  This is another way to write "CC".  The ring closure in
>           this case connects the two carbons together, even
>           though there is no explicit connection via the '.'
>
>    C1.C12.C23.C34.C45.C5  This is the same as "CCCCCC".  The
>       ring closures connect the atoms despite the "."s that
>       are supposed to separate them.
>
> This last case should tokenize to:
>    ATOM "C"
>    RING "1"
>    DOT
>    ATOM "C"
>    RING "1"
>    RING "2"
>    DOT
>    ATOM "C"
>    RING "2"
>    RING "3"
>    DOT
>    ...
>
>
> Finally,
>
>    C-1.C-1  is the same as "C-C", which is the same as "CC".
>        This specifies the bond type ("-" or "=" for single
>        or double) for the bond created by the ring closure.
>        The default is single.
>
>    C=1.C=1  is the same as "C=C".
>
>
>    C-67-8[C-].[14C-1]-6.[12C-2]7.[CH2-3]-8
>
> This is very hairy, and should okenize somewhat as:
>
>   ATOM "C" with default hydrogen rules
>     closure ("-", "6")
>     closure (<default>, "7")
>     closure ("-", "8")
>   ATOM "C" with no hydrogens and a charge of -1
>   DOT
>   ATOM "C" with no hydrogens, isotope number 14 and charge of -1
>     closure ("-", "6")
>   DOT
>   ATOM "C" with no hydrogens, isotope number 12 and charge of -2
>     closure (<default>, "7")
>   DOT
>   ATOM "C" with two hydrogens and a charge of -3)
>      closure ("-", "8")
>
> You can see my problem.  Depending on where I am,
> "-2" is parsed as "charge of -2" or "single bond ring closure
> with identifer 2".
>
> If I use '0'...'9'+ to tokenize the isotope field, like in [12C],
> then it will also parse the 12 in
>
>   C12.C1.C2
>
> If I instead let the parser do everything, so the lexer
> items are '-', and '0'..'9', then it will be annoyingly
> tedious in the parser to have to reassemble the characters,
> because  '[238U]' will be parsed using
>
> atom_in_brackets: '[' isotope? SYMBOL hydrogen? charge? ']';
> isotope: DIGIT*; // will need to combine the tokens to get the value
> SYMBOL: 'A'..'Z' 'a'..'z'? ;
> hydrogen: 'H' DIGIT*;  // again, will combine the tokens
> charge: MINUS DIGIT*
>       | PLUS DIGIT* ;
>
> atom_list: (atom closure*)*;
> closure: DIGIT | '%' DIGIT DIGIT;
>
>
> I'm pretty sure this will work, but it ends up pushing all
> of the work into the parser.  That seems like a lot of
> waste because I'm basically using the parser as a lexer.
> While in a yacc-style parser it's very easy to define the
> two or three lexer states I need.  When I see '[' I switch
> to a "parsing the inside of []s" state, and when I see
> the closing ']' I switch back.
>
> What should I do?
>
>                 Andrew
>                 dalke at dalkescientific.com
>
>
>
>


From julian.hidalgo at gmail.com  Wed Nov  7 10:52:06 2007
From: julian.hidalgo at gmail.com (Julian Hidalgo)
Date: Wed, 7 Nov 2007 14:52:06 -0400
Subject: [antlr-interest] Source code repository?
Message-ID: <9aec0b4e0711071052x2f636dd9gc666e7150b141479@mail.gmail.com>

Hi

I'm just starting with ANTLR, and until now I'm loving it. I have 3
questions:

1) Is there any way to download the code from a CVS/SVN repository? I don't
like tarballs =)
2) Where's the source code for the C# runtime? I can't find it in the source
distribution.
3) (Leaving money behind) Can people contribute and how? It looks like a
"closed"/personal project.

Best regards,
Juli?n
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071107/44c4ec44/attachment-0001.html 

From jaluber at gmx.de  Wed Nov  7 11:03:08 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 07 Nov 2007 20:03:08 +0100
Subject: [antlr-interest] Source code repository?
In-Reply-To: <9aec0b4e0711071052x2f636dd9gc666e7150b141479@mail.gmail.com>
References: <9aec0b4e0711071052x2f636dd9gc666e7150b141479@mail.gmail.com>
Message-ID: <47320BEC.4050306@gmx.de>

Julian Hidalgo wrote:
> Hi
> 
> I'm just starting with ANTLR, and until now I'm loving it. I have 3
> questions:
> 
> 1) Is there any way to download the code from a CVS/SVN repository? I
> don't like tarballs =)

Just ask Ter for a Perforce account. :)

> 2) Where's the source code for the C# runtime? I can't find it in the
> source distribution.

The source code should be in the latest daily build or is in the repository.

> 3) (Leaving money behind) Can people contribute and how? It looks like a
> "closed"/personal project.

You can contribute over feature requests or bug reports. If you prefer
more involvement then subscribe to ANTLR-dev and ask to join a team. Oh
- you have to sign a contributor license, too, and send it to Ter. If
you want to help with the C# target then you need only the appropriate
permissions and a go from the team leaders - I am one of them. :) I can
fill you in with the todos.

Johannes

From dalke at dalkescientific.com  Wed Nov  7 13:21:46 2007
From: dalke at dalkescientific.com (Andrew Dalke)
Date: Wed, 7 Nov 2007 22:21:46 +0100
Subject: [antlr-interest] lexer state and SMILES strings
In-Reply-To: <4731FE71.4080409@Yahoo.com>
References: <050606A6-0470-4AC2-AAD9-B1822DAC8E52@dalkescientific.com>
	<4731FE71.4080409@Yahoo.com>
Message-ID: <E39E8309-ED78-4971-9C65-1CB642AF7CFA@dalkescientific.com>

On Nov 7, 2007, at 7:05 PM, Austin Hastings wrote:
> I'm not loving the language, but I guess you can't change it. :(

No I can't.  Though I'm rather fond of it.  It's a very
malleable notation and has been around for about 20 years.
I can definitely point to worse ;)


> My first recommendation would be to use antlr2 -- antlr3 wants to  
> be able to support all that stuff, but can't at the moment.

Ahh, didn't know that.  Figured I'ld go for the latest and greatest.

> Next: go ahead and use the parser as a lexer,
> and then use a tree parser to handle the output.
> Don't get hung up on the names, just work with what works.

> For parsing the insides of square brackets, have a look at
> the book's section on emitting multiple tokens.

Ahh, hmm.  Yeah, that part of the language is simple and I can
drop in code from other lexers, like re2c, in that section.
I think.  Error reporting/handling won't be nice, but I don't
need that for now.

Thanks!

				Andrew
				dalke at dalkescientific.com



From jimi at temporal-wave.com  Wed Nov  7 15:05:52 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 7 Nov 2007 23:05:52 +0000
Subject: [antlr-interest] C target with g++ compiler
In-Reply-To: <DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
References: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
	<DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
Message-ID: <BAY108-W21FBD1817F9E66D52D6824868A0@phx.gbl>

Hi dan,
 
Well, if you se the g++ compiler, it is going to try compiling the code as C++, which plainly it isn't ;-). You will find that I did kind of cull most of those things out as Visual Studio 2005 compilers will point out some of this stuff in W4 mode. However, it is best to compile it as C, which is the intent really. You should not need to compile the C runtime as C++ code in order to link with it, you just need to declare your parser interfaces and so on as extern "C". I keep meaning to build that into the C output to make C++ integration easier - sorry I have not done that yet.
 
JIm



> Date: Tue, 6 Nov 2007 21:47:00 -0800> From: dan.hazon at novafora.com> To: antlr-interest at antlr.org> Subject: [antlr-interest] C target with g++ compiler> > This question is to Jim or users who use the C target.> > I'm using the C target.> My code compiles perfectly with gcc but when trying with g++ it fails> with bunch of errors:> > /usr/local/include/antlr3bitset.h:51: error: expected unqualified-id> before '||' token> /usr/local/include/antlr3bitset.h:51: error: expected `)' before '||'> token> /usr/local/include/antlr3bitset.h:51: error: abstract declarator> 'ANTLR3_BITSET_struct*' used as declaration> /usr/local/include/antlr3bitset.h:51: error: expected ';' before '||'> token> > I see that this is because of the following definition in> antlr3bitset.h:> > struct ANTLR3_BITSET_struct * (*or) (struct> ANTLR3_BITSET_struct * bitset1, struct ANTLR3_BITSET_struct * bitset2);> > g++ seems to be replacing or with ||> > > And:> > vdlParser.c:9085: error: invalid conversion from 'const void*' to> 'void*'> vdlParser.c:9205: error: invalid conversion from 'const void*' to> 'void*'> vdlParser.c:9481: error: invalid conversion from 'const void*' to> 'void*'> vdlParser.c:9626: error: invalid conversion from 'const void*' to> 'void*'> > This seems to be because of the following definition:> > /** The string name of the exception> */> void * name;> > /** The printable message that goes with this exception, in your> preferred> * encoding format. ANTLR just uses ASCII by default but you can> ignore these> * messages or convert them to another format or whatever of> course. They are> * really internal messages that you then decide how to print out> in a form that> * the users of your product will understand, as they are unlikely> to know what> * to do with "Recognition exception at: [[TOK_GERUND..... " ;-)> */> void * message;> > > In the generated parser code these variables are being assigned antlr> generated constant literal strings (e.g. "Early Exit")> g++ doesn't like this.> > Can you suggest an elegant way to overcome those errors?> > I'm interfacing with some other C++ code and must use g++.> > 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071107/762f3d98/attachment.html 

From jimi at temporal-wave.com  Wed Nov  7 15:06:39 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 7 Nov 2007 23:06:39 +0000
Subject: [antlr-interest] C target with g++ compiler
In-Reply-To: <20071107103858.GC665@goldorak3.eric.deplagne.name>
References: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
	<DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
	<473191FB.7080402@gmx.de> 
	<20071107103858.GC665@goldorak3.eric.deplagne.name>
Message-ID: <BAY108-W10B2472FA413C508FC4F84868A0@phx.gbl>

Remember that this is C code, not C++, or is not a reserved word in C.
 
Jim



> Date: Wed, 7 Nov 2007 11:38:58 +0100> From: Eric.Deplagne at loria.fr> To: antlr-interest at antlr.org> Subject: Re: [antlr-interest] C target with g++ compiler> > On mer, 07 nov 2007 11:22:51 +0100, Johannes Luber wrote:> > Dan Hazon wrote:> > ...> > > > > > Can you suggest an elegant way to overcome those errors?> > > > > > I'm interfacing with some other C++ code and must use g++.> > > > Why don't you compile the C-target with a C-compiler and reference the> > resulting library via extern C?> > > > Johannes> > If the trouble is in a struct, it's not sure that will be enough...> > Using "or" as an identifier is not a good idea anyway...> > -- > Eric Deplagne
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071107/5d00927d/attachment.html 

From NOSPAM at TheSnakePitDev.com  Wed Nov  7 17:29:46 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Wed, 07 Nov 2007 17:29:46 -0800
Subject: [antlr-interest] Full error reporting with the simplest grammar
Message-ID: <fgtorf$9gk$1@ger.gmane.org>

I am trying to create what should be the simplest grammar possible (with 
EOF) that provides full error reporting, since a grammar without full 
error reporting is worthless. I have solved some undocumented 
peculiarities, but I do not know if I have done so in a manner 
consistent with the intended design of AntLR. I describe 3 problems 
below, the first two with possible solutions and the third still unsolved.

What I need to know is:
   1 Are the solutions I used for problems 1 and 2 consistent with the 
intended design of AntLR, or are there better ways?
   2 How do I deal with problem 3?

The grammar is:
----------
grammar SingleCharacter;

@header {
import static java.lang.System.out;
}


/* Parser Rules */
singleCharacter
returns [boolean succeeded = false]
     :   Character {
             out.println(
                 "Parsed token Character '" + $Character.text + "'"
             );
         }
         EOF {
             out.println("Parsed token EOF");
         }
         {
             out.println("Parsed singleCharacter");
             $succeeded = true;
         }
     ;

/* Lexer Rules */
Character: 'a';
// Invalid added for problem #2
Invalid  :  .  {$type = Token.INVALID_TOKEN_TYPE;};

----------
Problem #1

There is a serious bug in the lexer that causes it, during error 
recovery, to skip two characters instead of just the unexpected 
character. When a character is not matched, match() creates an exception 
object 'mte', calls recover(mte) which consumes the unexpected 
character, and then throws the exception. However, nextToken() catches 
that exception, reports the error, and then calls recover(mte) again, 
erroneously consuming the token after the already consumed unexpected token.

In my simple example, the source "ba" produces the following results:
Note: The Invalid token did not exist at this point.
<<
Parsing: "ba"
Token stream
     <No tokens>

Parser output
line 1:0 mismatched character 'b' expecting 'a'
BR.recoverFromMismatchedToken
line 0:-1 mismatched input '<EOF>' expecting Character

Returned false
 >>

The lexer does not provide any tokens to the token stream.
This is what actually happens in the lexer:
   1 A call to match('a') is is made by mCharacter()
   2 The first character seen is an invalid 'b'
   2 A MismatchedTokenException object is created
   4 The recover(mte) method is called that consumes the current invalid 
character 'b'
   4 The exception object is thrown
   5 The exception is caught by nextToken()
   6 A call to reportError(re) is made that displays the lexer error
   7 Another call to recover(re) is made that consumes the next 
character, the valid character 'a'
   8 nextToken() loops back to try to get a token again, sees EOF, and 
returns Token.EOF_TOKEN
   9 The parser has no tokens in the stream and reports it saw <EOF>

Given the flow of the code and the use of nextToken(), it seems the 
solution is to eliminate the call to recover(re) in the exception 
handler of nextToken(). It works fine for my simple example, but I'm not 
sure if this is consistent with the intended design of AntLR.

----------
Problem #2

I originally did not have the "Invalid" token. I quickly discovered that 
CommonTokenStream parses *ALL* of the tokens in the source on the first 
call for a token. I had expected that it would only buffer the consumed 
and look-ahead tokens so that any lexer exception would be caught by the 
parser and could be reported in parser context. I do not understand and 
it is undocumented for what purpose CommonTokenStream does this.

I also found that the lexer is not capable of propagating a 
RecognitionException since nextToken has a catch hard-coded in. There 
seems to be no way in the grammar to configure this outside of 
overriding the nextToken() method.

The idea is to use AntLR "as is" as much as possible, so implementing a 
new TokenStream that only buffers consumed or look-ahead tokens is out. 
It seems that the only solution is to record lexer errors in the token 
stream as <invalid> tokens. This could be done by defining <invalid> 
tokens in the grammar with a type assigning action, or overriding the 
nextToken() method and altering the exception handler.

Both of these solutions work for my simple example. Also, since they 
both eliminate the possibility of a RecognitionException being thrown, 
they mask problem #1.

I chose the grammar solution for this example, but it might not be 
possible for a more complex lexer, and I do not know if this is a 
solution that is consistent with the intended design.

----------
Problem #3

For this problem, I do not have a solution, and it is a show-stopper.

The parser, when it sees an unexpected token, reports the error and 
tries two kinds of recovery. If the following token is of the expected 
type, it consumes the current token and returns a match, skipping the 
unexpected token. If the current token can follow the expected token, it 
returns a match and does not consume a token, continuing with the 
current token as if it had seen the missing token.

This means that match() might match the next or a non-existing token 
instead of the current. However, when a rule action uses a token 
reference, like in my grammar where the action in singleCharacter that 
follows Character uses the $Character.text field to report the string 
that was matched, that reference is obtained by AntLR before the call to 
match() from the input stream like so:
     Character1=(Token)input.LT(1);
     match(input,Character,FOLLOW_Character_in_singleCharacter33);
     out.println("Parsed token Character '" + Character1.getText() + "'");

If the call to match() performs error recovery, that token reference 
will *NOT* be the one that matched. The matched token might be the next 
token if the current one was skipped, or might be no token if the 
current one was a valid follow token.

Since the code that gets the reference is automatically generated by 
AntLR, and since match() does not record or return the matched token, I 
see no way to tell AntLR to handle this correctly.

In my simple example, if the source text is "ba", I get the following 
result:

<<
Parsing: "ba"
Token stream
     0; channel[0] <invalid>, "b" at 1:0
     1; channel[0] Character, "a" at 1:1

Parser output
BR.recoverFromMismatchedToken
line 1:0 mismatched input 'b' expecting Character
Parsed token Character 'b'
Parsed token EOF
Parsed singleCharacter

Returned true
 >>

The problem is demonstrated by the first action output:
   1 The <invalid> 'b' token is parsed
   2 Error recovery is performed that skips the current token since the 
next is the expected Character 'a'
   3 The Character match() returns successfully
   4 The Character action prints the result

However, the $Character reference is still the skipped <invalid> 'b' 
token instead of the now current Character 'a' token. So the message 
says it "Parsed token Character 'b'" instead of "Parsed token Character 
'a'".

As this problem creates incorrect data within the action, it is data 
corruption and a show-stopper in any environment. Is there a way to deal 
with this in AntLR, or is this an unresolved bug?


From Eric.Deplagne at loria.fr  Wed Nov  7 17:40:53 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Thu, 8 Nov 2007 02:40:53 +0100
Subject: [antlr-interest] C target with g++ compiler
In-Reply-To: <BAY108-W10B2472FA413C508FC4F84868A0@phx.gbl>
References: <mailman.1.1194379201.9576.antlr-interest@antlr.org>
	<DBDE9C823117644B80450B5F6B767E35453ED5@nfsbs.ad.novafora.com>
	<473191FB.7080402@gmx.de>
	<20071107103858.GC665@goldorak3.eric.deplagne.name>
	<BAY108-W10B2472FA413C508FC4F84868A0@phx.gbl>
Message-ID: <20071108014053.GA13837@goldorak3.eric.deplagne.name>

  By saying that again as a mantra, you're telling that you
  explicitly forbid anyone to ever have the stupid idea of
  possibly using C++...

  Great enough...

On mer, 07 nov 2007 23:06:39 +0000, Jim Idle wrote:
> Remember that this is C code, not C++, or is not a reserved word in C.
>  
> Jim
> 
> 
> 
> > Date: Wed, 7 Nov 2007 11:38:58 +0100> From: Eric.Deplagne at loria.fr> To: antlr-interest at antlr.org> Subject: Re: [antlr-interest] C target with g++ compiler> > On mer, 07 nov 2007 11:22:51 +0100, Johannes Luber wrote:> > Dan Hazon wrote:> > ...> > > > > > Can you suggest an elegant way to overcome those errors?> > > > > > I'm interfacing with some other C++ code and must use g++.> > > > Why don't you compile the C-target with a C-compiler and reference the> > resulting library via extern C?> > > > Johannes> > If the trouble is in a struct, it's not sure that will be enough...> > Using "or" as an identifier is not a good idea anyway...> > -- > Eric Deplagne
-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20071108/0d2a4559/attachment.bin 

From NOSPAM at TheSnakePitDev.com  Wed Nov  7 20:39:33 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Wed, 07 Nov 2007 20:39:33 -0800
Subject: [antlr-interest] overlapping lexer rules
In-Reply-To: <3b19324d0711021552obfb704ch9f52968449cc1490@mail.gmail.com>
References: <3b19324d0711021552obfb704ch9f52968449cc1490@mail.gmail.com>
Message-ID: <fgu3vc$fo$1@ger.gmane.org>

The second example is technically valid because of the undocumented fact 
that the *ORDER* of lexer rules is also significant.

For the second example, AntLR creates a DFA (Definite Finite Automata) 
to look-ahead as far as it takes to find which token rule matches. If 
more than one match, it will choose the first listed in the grammar. 
This is why the INT rule will match "12" even though the FLOAT rule also 
matches.

If you were to swap the order of INT and FLOAT in the grammar, "12" 
would be matched as a FLOAT, and INT would never be matched by anything. 
(Tested using AntLr v3.0.1 and ANTLRWorks v1.1.4)

It is worthy of note that this is an incredibly poor example of defining 
a float token. In this context, a float token cannot exist without a 
decimal point ('.'). The following would create a more efficient 
look-ahead DFA:

INT  : '0'..'9'+;
FLOAT: '0'..'9'+ '.' '0'..'9'*;

Also, it does not allow for a float that starts with a decimal point 
instead of a digit. The following does:

INT  : '0'..'9'+;
FLOAT: '0'..'9'+ '.' '0'..'9'*
      | '.' '0'..'9'+;

The preceding also eliminates any dependency on grammar order. You can 
swap the order of these two rules and they will still be correctly parsed.

As to why this poor example is in the book, and why the effect of rule 
order on the lexer is not appropriately documented - ya got me.

I hope that helps
-- Curtis


cimbroken wrote:
> quoting two examples from the book (pg.280-281):
> 
> 1)
> INT : DIGIT+ ;
> DIGIT : '0'..'9' ;
> 
> 2)
> INT : '0'..'9' +;
> FLOAT : '0'..'9' + ('.' '0'..'9'*)? ;
> 
> I don't understand very well why the second is *not* a mistake. It seems 
> to me that this two examples are similar: 2 "free" rules (not fragment) 
> that try to match different tokens that start with the same character. 
> Why antlr treats them in different ways?


From relationalalgebra at gmail.com  Thu Nov  8 05:32:43 2007
From: relationalalgebra at gmail.com (G R)
Date: Thu, 8 Nov 2007 14:32:43 +0100
Subject: [antlr-interest] StringTemplate questions
Message-ID: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>

Hi,

I'm trying to use ST to translate relational algebra into SQL, and I'm stuck
with a template :
"minus(left, right, keys)" where left, and right are just text, and keys is
a list of string (I want it to be a list of String).

So first question is how in Java do I build a ST list of string ?

Then, using my 3 attributes (left, right and keys), I'd like to generate the
following code :

SELECT * FROM <left>
WHERE key1 NOT IN (SELECT key1 FROM <right>)
AND  key2 NOT IN (SELECT key2 FROM <right>)
...
AND  keyN NOT IN (SELECT keyN FROM <right>)

where key1, key2, ... keyN are the element of my list.

How can i do this ? Can i use an attribute within the separator of a list ?

Thanks for any help.

G.R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071108/ef478e33/attachment.html 

From JB0284 at att.com  Thu Nov  8 05:58:22 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Thu, 8 Nov 2007 05:58:22 -0800
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>

I think you may want to try something like this:

ArrayList keyNameList = new ArrayList( Arrays.asList( keyNames ) );
templateObject.setLeft( leftTableName );
templateObject.setRight( rightTableName );
templateObject.setKeyNames( ( String[] ) keyNameList.toArray( new String[ 0 ] ) );

Then your template would look like this, perhaps:

selectStmt ::= <<
SELECT * FROM $templateObject.left$$if( templateObject.keyNames )$ WHERE $templateObject.keyNames | keyName {
$keyName$ NOT IN ( SELECT $keyName$ FROM $templateObject.right$ )
}; separator="\n"$$endif$
>>

I haven't tested this template, so the usual caveats apply.

Best regards,
Jeff
________________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of G R
Sent: Thursday, November 08, 2007 8:33 AM
To: antlr-interest Interest
Subject: [antlr-interest] StringTemplate questions

Hi,

I'm trying to use ST to translate relational algebra into SQL, and I'm stuck with a template :
"minus(left, right, keys)" where left, and right are just text, and keys is a list of string (I want it to be a list of String). 

So first question is how in Java do I build a ST list of string ?

Then, using my 3 attributes (left, right and keys), I'd like to generate the following code :

SELECT * FROM <left>
WHERE key1 NOT IN (SELECT key1 FROM <right>) 
AND? key2 NOT IN (SELECT key2 FROM <right>)
...
AND? keyN NOT IN (SELECT keyN FROM <right>)

where key1, key2, ... keyN are the element of my list.

How can i do this ? Can i use an attribute within the separator of a list ? 

Thanks for any help.

G.R

From antlr-interest at schraverus.com  Thu Nov  8 06:51:03 2007
From: antlr-interest at schraverus.com (Corno Schraverus)
Date: Thu, 8 Nov 2007 15:51:03 +0100
Subject: [antlr-interest] unknown parameter
In-Reply-To: <08ADAC7300B34C96AC95E6D242E55059@ISDlan.local>
References: <08ADAC7300B34C96AC95E6D242E55059@ISDlan.local>
Message-ID: <001701c82216$ca224e90$5e66ebb0$@com>

> Corno -
> I believe that it's a conceptual issue.  What happens if the
> parameter that is passed is used in a semantic predicate to allow/
> disallow a particular parse path?  The parse tree is then dependent
> on the parameter.  I have tried, with some success (not fully yet, I
> believe, but that may be inexperience), the following:
> 
> bar[Bar myBar]
>      :   (foo[null])=> foo[myBar]
>      ;
> or whatever.  If the parse is not dependent on the parameter then the
> syntactic predicate should work correctly.
> 
> Hope this helps -- and I hope I'm not wildly off-base.
> 
> Peace
> - John
> 
John, Jim,

I'm not using the parameters in semantic predicates so I could solve my
problem by adjusting the generated C-code. I don't know if I can expect
problems later on but it does the trick and maybe it could be of interest to
more people.
What I did is the following;
-For every rule, a second function is generated, one that has no extra
parameters.
-For those second functions and the fragment functions (they are both
without parameters), I have defined a macro (#define WITHOUT_PARAMETERS just
before and #undef just after the function).
-at the places where calls to functions are being made, or where actions are
written I check if WITHOUT_PARAMETERS is defined, and if it is then the
extra parameters / action block are skipped.

greetings,

Corno


From bradford.carl.smith at gmail.com  Thu Nov  8 11:05:09 2007
From: bradford.carl.smith at gmail.com (Bradford Smith)
Date: Thu, 8 Nov 2007 14:05:09 -0500
Subject: [antlr-interest] Python warning "unsupported option: seperator"
Message-ID: <f158199e0711081105k41cdedd6gaf39a4e88240d8db@mail.gmail.com>

Hi, ANTLR folks,

Can anyone tell me why I keep getting this error when using the Python
language target?

warning(11):  internal warning: ignoring unsupported option: seperator

Everything seems to be working otherwise.  I just get this warning once or
twice for each time I run antlr. For example, I get it twice for the basic
Expr.g example from the book when I set the language=Python option for it.

Thanks,

Bradford
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071108/756aa55a/attachment.html 

From Alan_Rooks at amis.com  Thu Nov  8 12:19:30 2007
From: Alan_Rooks at amis.com (Alan Rooks)
Date: Thu, 08 Nov 2007 15:19:30 -0500
Subject: [antlr-interest] Python warning "unsupported option: seperator"
References: <f158199e0711081105k41cdedd6gaf39a4e88240d8db@mail.gmail.com>
Message-ID: <47336F52.8C9FA8CB@amis.com>

It's a minor bug in the Python code-gen templates.  The StringTemplate
option named "separator" is misspelled.  You can fix the file
src/org/antlr/codegen/templates/Python/Python.stg (the spelling error occurs
twice, if I remember), and use Java's jar tool to update the
lib/antlr-3.0.1.jar file that ANTLR uses when it runs.

Alan


Bradford Smith wrote:
> 
> Hi, ANTLR folks,
> 
> Can anyone tell me why I keep getting this error when using the Python
> language target?
> 
> warning(11):  internal warning: ignoring unsupported option: seperator
> 
> Everything seems to be working otherwise.  I just get this warning once or
> twice for each time I run antlr. For example, I get it twice for the basic
> Expr.g example from the book when I set the language=Python option for it.
> 
> Thanks,
> 
> Bradford
AMI Semiconductor - "Silicon Solutions for the Real World"
NOTICE: 
This electronic message contains information that may be confidential or privileged. The information is intended for the use of the individual or entity named above. If you are not the intended recipient, please be aware that any disclosure, copying, distribution or use of the contents of this information is prohibited. If you received this electronic message in error, please notify the sender and delete the copy you received.


From kenny at kmdconsulting.ca  Thu Nov  8 12:50:18 2007
From: kenny at kmdconsulting.ca (Kenny MacDermid)
Date: Thu, 8 Nov 2007 15:50:18 -0500
Subject: [antlr-interest] Source code repository?
In-Reply-To: <9aec0b4e0711071052x2f636dd9gc666e7150b141479@mail.gmail.com>
References: <9aec0b4e0711071052x2f636dd9gc666e7150b141479@mail.gmail.com>
Message-ID: <8367efd50711081250u649713f5v6bf6ea1ea8f32771@mail.gmail.com>

On 11/7/07, Julian Hidalgo <julian.hidalgo at gmail.com> wrote:
> 1) Is there any way to download the code from a CVS/SVN repository?

CVS or SVN, not that I know of.  As Johannes said, the _official_ is
in perforce. Although it's not hard to get access.

I'm hosting an unofficial git version that you can clone from:
$ git clone http://code.kmdconsulting.ca/antlr.git/

It's synced daily with the official code.

Kenny

From NOSPAM at TheSnakePitDev.com  Thu Nov  8 14:09:02 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Thu, 08 Nov 2007 14:09:02 -0800
Subject: [antlr-interest] Error Message Question
In-Reply-To: <BAY118-W388B4F374ABEF1BCDFA6BFB1880@phx.gbl>
References: <BAY118-W388B4F374ABEF1BCDFA6BFB1880@phx.gbl>
Message-ID: <fh01f3$5lp$1@ger.gmane.org>

The entire error reporting and recovery system is not appropriately 
documented, and your frustration is well understood.

Both the lexer and parser call
   reportError(RecognitionException e)
to display an error message during a recognition exception.
This, in turn, calls
   displayRecognitionError(String[] tokenNames, RecognitionException e)
with the list of valid token names for error reporting.
This uses
   getErrorHeader(e)
   getErrorMessage(e, tokenNames)
to cobble together the message text, and
   emitErrorMessage(hdr + " " + msg)
to emit the message.

To customize the messages, override getErrorHeader() and 
getErrorMessage() to handle each type of RecognitionException, or 
override displayRecognitionError(...) to handle it all differently.

Override emitErrorMessage(...) to change how the messages are displayed. 
The default is to use System.err.println(msg).

Remember that the lexer has a hard-coded RecognitionException handler in 
nextToken() that calls reportError(re), and that CommonTokenStream lexes 
all tokens into the stream buffer on the first token fetch. You may need 
to override nextToken() to keep the flood of lexer error messages from 
occurring before any parser messages.

One other v3.0.1 bug-a-boo: In recoverFromMismatchedToken(...), which is 
called by the parser but never by the lexer, there is a hard-coded message
   System.err.println("BR.recoverFromMismatchedToken");
I believe that this is a debugging message that was not commented out 
like all the others. You also have to override this method to eliminate 
that call.

I had to spelunk the source to find all of this since these questions 
never get answered on this list. It has worked well for me so far.

I hope that helps.
-- Curtis


Mike Arace wrote:
> The application is a Java console app, and I am trying to get it so that 
> Antlr only outputs customized messages when lexing or parsing fails 
> entirely.  I found the getErrorMessage() function that can be overridden 
> in the lexer, but that only seems to address part of the error message 
> after the location of the exception, and also only seems to address 
> RecognitionExceptions; my Antlr installation (3.0.1) is very talkative 
> and tells me about exceptions, recoveries, replacements, etc. right in 
> stdout, and I would like to ignore these messages entirely.
> 
> I'm sure this is a solved problem already, but I am not finding anything 
> on the site, the Antlr book, or in Google that addresses this in a 
> application-wide way.  Any help would be greatly appreciated!


From the_madman at latinmail.com  Thu Nov  8 14:40:28 2007
From: the_madman at latinmail.com (Jorge Fuente-Alba)
Date: Thu,  8 Nov 2007 23:40:28 +0100 (CET)
Subject: [antlr-interest] Newbie: Confusion building C-Target project
Message-ID: <20071108224028.91FEB9DE3BB@smtp.latinmail.com>

I got the undefined references trying to build a small sample parser from Cygwin after building the binaries in Cygwin also. I asked for Makefiles for that sample parser as I know next to nothing about Makefiles :s
I was, however, going to try to use Cygwin's binary on MinGW afterwards Now I know that's a bad idea, thanks for the heads up.

I already tried to build using MS' .NET SDK also and got the same errors that I did under MinGW. I'll try again later from the commandline (I used codeblocks with the free MS compiler the first time) once I get home where I can install whichever software I want.

I'd do a custom makefile (and even mantain it!) for MinGW if I knew how to.
Honest.

Texto: ?Concursa y g?nate un boleto doble para el show de The Police en M?xico! http://mx.starmedia.com/thepolice/

From NOSPAM at TheSnakePitDev.com  Thu Nov  8 14:42:51 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Thu, 08 Nov 2007 14:42:51 -0800
Subject: [antlr-interest] Disabling recovery during parsing
In-Reply-To: <BLU108-W33703E1BC2350F7D3FCB42C0880@phx.gbl>
References: <BLU108-W33703E1BC2350F7D3FCB42C0880@phx.gbl>
Message-ID: <fh03eg$bu1$1@ger.gmane.org>

The entire error recovery and reporting systems are not appropriately 
documented, and your frustration is well understood.

Both the lexer and parser handle error recovery similarly, but with 
different method calls.

The lexer will call
   recover(re)
before it throws a RecognitionException, which consumes the unexpected 
character. The top
   nextToken()
method has a hard-coded exception handler that catches the 
RecognitionException, reports the error, and calls recover(re) again (a 
bug in my opinion).

To change how the lexer handles recovery, override
   recover(...)
To change how the exception is handled, override
   nextToken()

One important, and also undocumented, note: CommonTokenStream will lex 
the *entire* stream into tokens on the first token fetch. This means the 
lexer will process and display all errors before the parser processes 
the first token. So much for context.

When the parser fails to match a token, it calls
   mismatch(...)
which creates the exception object and then calls
   recoverFromMismatchedToken(...)
This method looks ahead at the next token and if it matches, reports the 
error, skips the unexpected token, and returns a successful match. If it 
does not match, it calls
   recoverFromMismatchedElement(...)
This method tests if the unexpected token could follow the expected 
token. If so, it will report the error, and return a successful match 
(acting as if the missing token were found). If not, the exception 
object is finally thrown.

If you have not created your own rule exception handler in the grammar, 
or configured the default exception handlers with @rulecatch {}, then 
the exception will be caught by the default rule exception handler, 
which will call
   reportError(re)
   recover(input, re)

The recover(...) method in the parser will try to consume tokens until 
one is found that allows it to resynchronize and continue parsing the 
rest of the tokens.

To change how recovery is handled in the parser, override
   recoverFromMismatchedToken(...)
   recoverFromMismatchedElement(...)
to change those strategies, or override
   mismatch(...)
to change the whole before-exception response.
To change how recovery is done in response to the RecoveryException, 
configure or provide a different either default or per-rule exception 
handler in the grammar, or override
   reportError(re)
   recover(input, re)
in the parser.

I had to spelunk the source to find all of this, since these questions 
never get answered. I has worked for me so far.

I hope that helps.
-- Curtis


Foolish Ewe wrote:
> Our experiences with ANTLR has been generally good, but we could use a bit of help here. We have a fairly simple language which we read in one command at a time. A command is passed in as a buffer with an ascii NULL ('\0') terminator character, which we treat as a "sentinel" token to try to better detect when an invalid suffix might be in the look ahead. Since we have an interactive scripting tool, and all commands are terminated by newlines, we have a "wrapper" which invokes the parser and catches exceptions due to syntax errors. However, for some suffix errors, the parser appears to capture the exception internally, and generates a warning message, rather than passing the exception out. So although the diagnostic messages which might look something like (the null terminator is not displayed):
> 
> XXXX YYYYYY ZZZZ index-10;ge
> BR.recoverFromMismatchedToken line 1:25 mismatched input ';ge expecting ENDOFCOMMAND
> 
> where XXXX, YYYYYY and ZZZZ are all valid keywords in the language, and the lexer has a production:
> // Lexer Rules
> ENDOFCOMMAND : '\000'; // A terminal NULL Character
> 
> The ;ge suffix should not be there, and is correctly flagged as invalid, but the error recovery is more "forgiving" than we want in our application, we would prefer the parser to throw a RecognitionException which we handle in the wrapper for consistency reasons.


From NOSPAM at TheSnakePitDev.com  Thu Nov  8 15:47:06 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Thu, 08 Nov 2007 15:47:06 -0800
Subject: [antlr-interest] Parsing free text
In-Reply-To: <472A5A96.3080507@seznam.cz>
References: <472A5A96.3080507@seznam.cz>
Message-ID: <fh0770$mf3$1@ger.gmane.org>

In order to snarf up all of the characters, you must make the character 
match "greedy". Apparently, it is not true that the greedy option is on 
by default in all circumstances. The following lexer rules work with 
AntLR v3.0.1 and ANTLRWorks v1.1.4 for both of your examples.

----------
ErrorStatement  : 'ERR' WS (options {greedy = true;} : .)*;
WarningStatement: 'WRN' WS (options {greedy = true;} : .)*;
Identifier      : ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')+;
Space           : WS {$channel = HIDDEN;};

fragment WS: (' ' | '\t')+;
----------

If you do not set greedy = true, or you set it false, you get 
Unreachable Alternative warnings.

Combined with appropriate parser rules for the conditional and 
expression statements, both of your examples parse correctly.

The only thing that still bothers me is that it will also snarf up any 
trailing whitespace. You might want to trim your input of trailing 
whitespace before you parse.

I hope that helps.
-- Curtis


Bolek Vrany wrote:
> How do I create either a lexer or parser rule that would read all text 
> starting with WRN or ERR until the end of file to a single token. The 
> language is case sensitive. For example
> 
> IF color=white AND size=big THEN ERR Not in stock
> IF color=white AND size=big THEN WRN [[43:WR12345]]
> 
> Both identifiers and the text after WRN or ERR can be arbitrarily long. 
> Identifiers can contain 'a'..'z'|'A'..'Z'|'_'|'0'..'9' (numeric literals 
> are enclosed in $$, ie. $50.0$). WRN [[43:WR12345]] means look up the 
> text of warning [[43:WR12345]] in a database and display it, while the 
> first form simply display 'Not in stock'. The message is delimited only 
> by ERR and EOF.


From Austin_Hastings at Yahoo.com  Thu Nov  8 19:02:24 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Thu, 08 Nov 2007 22:02:24 -0500
Subject: [antlr-interest] Help! I need a hint about where to start debugging
	this...
Message-ID: <4733CDC0.2010901@Yahoo.com>

Howdy, squad.

I'm getting this failure during ANTLR processing of a fairly small 
grammar. Obviously I've done something wrong, but I have no idea what. 
Can anybody point me at a place to start looking?

=Austin


  [antlr3] error(10):  internal error: Can't get property 
javaCompressedTransition using method get/isJavaCompressedTransition 
from org.antlr.analysis.DFA instance : java.lang.OutOfMemoryError: Java 
heap space
   [antlr3] java.util.ArrayList.<init>(ArrayList.java:112)
   [antlr3] org.antlr.analysis.DFA.getRunLengthEncoding(DFA.java:423)
   [antlr3] org.antlr.analysis.DFA.getJavaCompressedTransition(DFA.java:399)
   [antlr3] sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   [antlr3] 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
   [antlr3] 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
   [antlr3] java.lang.reflect.Method.invoke(Method.java:597)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.invokeMethod(ASTExpr.java:563)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:513)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:420)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:346)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:131)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.templateApplication(ActionEvaluator.java:211)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:121)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:79)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
   [antlr3] 
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
   [antlr3] 
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
   [antlr3] 
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
   [antlr3] org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1132)
   [antlr3] org.antlr.codegen.Target.genRecognizerFile(Target.java:94)
   [antlr3] 
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:439)
   [antlr3] org.antlr.Tool.processGrammar(Tool.java:347)
   [antlr3] org.antlr.Tool.process(Tool.java:311)


From john.ridgway at trincoll.edu  Thu Nov  8 19:57:08 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Thu, 8 Nov 2007 22:57:08 -0500
Subject: [antlr-interest] Help! I need a hint about where to start
	debugging this...
In-Reply-To: <4733CDC0.2010901@Yahoo.com>
References: <4733CDC0.2010901@Yahoo.com>
Message-ID: <12EDD7EB-AF98-4F92-8185-1A72B32E9FA9@trincoll.edu>

Try using a larger heap; e.g.:
   java -Xmx256M org.antlr.Tool ...
if that doesn't do it then I don't know.

I needed to increase the size to handle the Java 1.5 grammar (with  
AST rewrites).

Peace
- John


On Nov 8, 2007, at 10:02 PM, Austin Hastings wrote:

> Howdy, squad.
>
> I'm getting this failure during ANTLR processing of a fairly small  
> grammar. Obviously I've done something wrong, but I have no idea  
> what. Can anybody point me at a place to start looking?
>
> =Austin
>
>
>  [antlr3] error(10):  internal error: Can't get property  
> javaCompressedTransition using method get/ 
> isJavaCompressedTransition from org.antlr.analysis.DFA instance :  
> java.lang.OutOfMemoryError: Java heap space
>   [antlr3] java.util.ArrayList.<init>(ArrayList.java:112)
>   [antlr3] org.antlr.analysis.DFA.getRunLengthEncoding(DFA.java:423)
>   [antlr3] org.antlr.analysis.DFA.getJavaCompressedTransition 
> (DFA.java:399)
>   [antlr3] sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>   [antlr3] sun.reflect.NativeMethodAccessorImpl.invoke 
> (NativeMethodAccessorImpl.java:39)
>   [antlr3] sun.reflect.DelegatingMethodAccessorImpl.invoke 
> (DelegatingMethodAccessorImpl.java:25)
>   [antlr3] java.lang.reflect.Method.invoke(Method.java:597)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.invokeMethod 
> (ASTExpr.java:563)
>   [antlr3]  
> org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty 
> (ASTExpr.java:513)
>   [antlr3]  
> org.antlr.stringtemplate.language.ASTExpr.getObjectProperty 
> (ASTExpr.java:420)
>   [antlr3]  
> org.antlr.stringtemplate.language.ActionEvaluator.attribute 
> (ActionEvaluator.java:346)
>   [antlr3] org.antlr.stringtemplate.language.ActionEvaluator.expr 
> (ActionEvaluator.java:131)
>   [antlr3]  
> org.antlr.stringtemplate.language.ActionEvaluator.templateApplication( 
> ActionEvaluator.java:211)
>   [antlr3] org.antlr.stringtemplate.language.ActionEvaluator.expr 
> (ActionEvaluator.java:121)
>   [antlr3] org.antlr.stringtemplate.language.ActionEvaluator.action 
> (ActionEvaluator.java:79)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.write 
> (ASTExpr.java:152)
>   [antlr3] org.antlr.stringtemplate.StringTemplate.write 
> (StringTemplate.java:714)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.write 
> (ASTExpr.java:722)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.writeAttribute 
> (ASTExpr.java:659)
>   [antlr3] org.antlr.stringtemplate.language.ActionEvaluator.action 
> (ActionEvaluator.java:81)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.write 
> (ASTExpr.java:152)
>   [antlr3] org.antlr.stringtemplate.StringTemplate.write 
> (StringTemplate.java:714)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.write 
> (ASTExpr.java:722)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.writeAttribute 
> (ASTExpr.java:659)
>   [antlr3] org.antlr.stringtemplate.language.ActionEvaluator.action 
> (ActionEvaluator.java:81)
>   [antlr3] org.antlr.stringtemplate.language.ASTExpr.write 
> (ASTExpr.java:152)
>   [antlr3] org.antlr.stringtemplate.StringTemplate.write 
> (StringTemplate.java:714)
>   [antlr3] org.antlr.codegen.CodeGenerator.write(CodeGenerator.java: 
> 1132)
>   [antlr3] org.antlr.codegen.Target.genRecognizerFile(Target.java:94)
>   [antlr3] org.antlr.codegen.CodeGenerator.genRecognizer 
> (CodeGenerator.java:439)
>   [antlr3] org.antlr.Tool.processGrammar(Tool.java:347)
>   [antlr3] org.antlr.Tool.process(Tool.java:311)
>


From siemsen at UCAR.EDU  Thu Nov  8 20:12:07 2007
From: siemsen at UCAR.EDU (Pete Siemsen)
Date: Thu, 8 Nov 2007 21:12:07 -0700
Subject: [antlr-interest] newbie stringtemplate question
Message-ID: <1146687F-7AE7-4DF8-AFC2-1D026E6B1418@UCAR.EDU>

I have a working ANTLR 3 parser that recognizes my input files.  Now  
I want to use StringTemplate to make some output.  I stole code from  
the example on page 205 of the book, but I'm having trouble with  
getTemplate.  My translator gives

$ java -cp /Users/siemsen/cimmof2java/target/cimmof2java-1.0- 
SNAPSHOT.jar: \
            /Users/siemsen/antlrplay/antlr-3.0.1/lib/antlr-2.7.7.jar: \
            /Users/siemsen/antlrplay/antlr-3.0.1/lib/antlr-3.0.1.jar: \
            /Users/siemsen/antlrplay/antlr-3.0.1/lib/antlr- 
runtime-3.0.1.jar: \
            /Users/siemsen/antlrplay/antlr-3.0.1/lib/ 
stringtemplate-3.1b1.jar
      cimmof2java cimv216.mof /Users/siemsen/cimmof2java/cimmof2java- 
java.stg /tmp
Exception in thread "main" java.lang.NullPointerException
         at cimmof2java.main(cimmof2java.java:38)
$

Line 38 is the 3rd-from-last line of the program:

import org.antlr.runtime.*;
import org.antlr.stringtemplate.*;
import java.io.*;

public class cimmof2java {
	public static void main(String[] args) throws Exception {

		String inputFileName = args[0];
		String stgFileName = args[1];
		String outputDirectoryName = args[2];

		StringTemplateGroup templates = null;
		// Load template group file cimmof2java.stg into templates variable
		try {
			FileReader groupFileR = new FileReader(stgFileName);
			templates = new StringTemplateGroup(groupFileR);
			groupFileR.close();
		} catch (IOException FileNotFoundException) {
			System.out.println("couldn't open string template group file: " +  
stgFileName);
			System.exit(1);
		}

		// Open an input file stream from the given file name
		CharStream input = new ANTLRFileStream(inputFileName);
		// Create a lexer that feeds from the input file stream
		cimmof2javaLexer lexer = new cimmof2javaLexer(input);
		// Create a stream of tokens fed by the lexer
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		// Create a parser that feeds off the token stream
		cimmof2javaParser parser = new cimmof2javaParser(tokens);
		// Give the parser the string templates
		parser.setTemplateLib(templates);
		// Begin parsing at rule mofSpecification
		cimmof2javaParser.mofSpecification_return retVal =
		    parser.mofSpecification(outputDirectoryName);
		StringTemplate output = (StringTemplate)retVal.getTemplate();
		// Emit the translation
		System.out.println(output.toString());
	}
}

The program reads in my group file, named cimmof2java-java.stg, which  
contains only this:

group cimmof2java;
showclass(clName) ::= "<clName>"

My parser contains these lines among others:

grammar cimmof2java;

options {output=template;}

className
	: Identifier -> showclass(clName={$Identifier.text})
	;

The className rule in the parser definitely gets executed.  What's  
the problem?

-- Pete



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071108/6e0806b7/attachment.html 

From parrt at cs.usfca.edu  Thu Nov  8 20:42:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Nov 2007 20:42:19 -0800
Subject: [antlr-interest] newbie stringtemplate question
In-Reply-To: <1146687F-7AE7-4DF8-AFC2-1D026E6B1418@UCAR.EDU>
References: <1146687F-7AE7-4DF8-AFC2-1D026E6B1418@UCAR.EDU>
Message-ID: <7D46B471-D402-4E06-B194-AB7013D39BC4@cs.usfca.edu>

Hi. most likely you are passing the ST all the back up to the outer  
rule mofSpecification.  ANTLR doesn't pass anything up automatically  
for STs.
Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071108/69ae1d8b/attachment.html 

From Austin_Hastings at Yahoo.com  Thu Nov  8 22:03:56 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Fri, 09 Nov 2007 01:03:56 -0500
Subject: [antlr-interest] BUG? (JAVA) Antlr complains, and possibly fails,
 when dealing with large acceptance sets
In-Reply-To: <4733CDC0.2010901@Yahoo.com>
References: <4733CDC0.2010901@Yahoo.com>
Message-ID: <4733F84C.3000205@Yahoo.com>

Antlr-godz,

In reference to my email earlier tonight (see below), I replaced this rule:


WS    : ({ Character.isWhitespace(input.LA(1)) }? .)+    {$channel = 
HIDDEN;} ;


with this one:


WS: (' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;


This change made the complaint stop. I am guessing that somewhere in the 
bowels of antlr it was trying to expand the '.' dfa, but that doesn't 
make much sense because there's plenty of other times when '.' gets 
used. So I really don't know what it was doing - but enumerating the 
"easy" whitespace characters made it stop. I don't know if this is a bug 
or not - it may be the case that running with -mx allTheRamInTheWorld 
might have let it succeed.

=Austin





Austin Hastings wrote:
> Howdy, squad.
>
> I'm getting this failure during ANTLR processing of a fairly small 
> grammar. Obviously I've done something wrong, but I have no idea what. 
> Can anybody point me at a place to start looking?
>
> =Austin
>
>
>  [antlr3] error(10):  internal error: Can't get property 
> javaCompressedTransition using method get/isJavaCompressedTransition 
> from org.antlr.analysis.DFA instance : java.lang.OutOfMemoryError: 
> Java heap space
>   [antlr3] java.util.ArrayList.<init>(ArrayList.java:112)
>   [antlr3] org.antlr.analysis.DFA.getRunLengthEncoding(DFA.java:423)
>   [antlr3] 
> org.antlr.analysis.DFA.getJavaCompressedTransition(DFA.java:399)
>   [antlr3] sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>   [antlr3] 
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
>
>   [antlr3] 
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
>
>   [antlr3] java.lang.reflect.Method.invoke(Method.java:597)
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.invokeMethod(ASTExpr.java:563)
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:513) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:420) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:346) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:131) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.templateApplication(ActionEvaluator.java:211) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:121) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:79) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
>   [antlr3] 
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
>   [antlr3] 
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:659) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81) 
>
>   [antlr3] 
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
>   [antlr3] 
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
>   [antlr3] org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1132)
>   [antlr3] org.antlr.codegen.Target.genRecognizerFile(Target.java:94)
>   [antlr3] 
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:439)
>   [antlr3] org.antlr.Tool.processGrammar(Tool.java:347)
>   [antlr3] org.antlr.Tool.process(Tool.java:311)
>
>
>


From mikearace at hotmail.com  Thu Nov  8 22:30:21 2007
From: mikearace at hotmail.com (Mike Arace)
Date: Fri, 9 Nov 2007 01:30:21 -0500
Subject: [antlr-interest] Error Message Question
In-Reply-To: <fh01f3$5lp$1@ger.gmane.org>
References: <BAY118-W388B4F374ABEF1BCDFA6BFB1880@phx.gbl>
	<fh01f3$5lp$1@ger.gmane.org>
Message-ID: <BAY118-W25740B675B0D62A4090575B1840@phx.gbl>


Thank you Curtis.  

Since my post I did more research and discovered @rulecatch which was able to give me most of the behavior I wanted, namely letting me handle the various RecognitionExceptions in my own way, or rethrow the exceptions to be handled further upstream.  I also ended up spelunking in the source to find answers; so much has changed since the 2.x series releases that nothing available using Google is current.  The new solutions are much more elegant, provided you can find them.

Thank you for the RecoverFromMismatch advice, that was one I hadn't figured out yet.  I was working around it by either typing everything perfectly or redirecting System.err to the floor. :)

Best Regards,
Mike

> To: antlr-interest at antlr.org
> From: NOSPAM at TheSnakePitDev.com
> Date: Thu, 8 Nov 2007 14:09:02 -0800
> Subject: Re: [antlr-interest] Error Message Question
> 
> The entire error reporting and recovery system is not appropriately 
> documented, and your frustration is well understood.
> 
> Both the lexer and parser call
>    reportError(RecognitionException e)
> to display an error message during a recognition exception.
> This, in turn, calls
>    displayRecognitionError(String[] tokenNames, RecognitionException e)
> with the list of valid token names for error reporting.
> This uses
>    getErrorHeader(e)
>    getErrorMessage(e, tokenNames)
> to cobble together the message text, and
>    emitErrorMessage(hdr + " " + msg)
> to emit the message.
> 
> To customize the messages, override getErrorHeader() and 
> getErrorMessage() to handle each type of RecognitionException, or 
> override displayRecognitionError(...) to handle it all differently.
> 
> Override emitErrorMessage(...) to change how the messages are displayed. 
> The default is to use System.err.println(msg).
> 
> Remember that the lexer has a hard-coded RecognitionException handler in 
> nextToken() that calls reportError(re), and that CommonTokenStream lexes 
> all tokens into the stream buffer on the first token fetch. You may need 
> to override nextToken() to keep the flood of lexer error messages from 
> occurring before any parser messages.
> 
> One other v3.0.1 bug-a-boo: In recoverFromMismatchedToken(...), which is 
> called by the parser but never by the lexer, there is a hard-coded message
>    System.err.println("BR.recoverFromMismatchedToken");
> I believe that this is a debugging message that was not commented out 
> like all the others. You also have to override this method to eliminate 
> that call.
> 
> I had to spelunk the source to find all of this since these questions 
> never get answered on this list. It has worked well for me so far.
> 
> I hope that helps.
> -- Curtis
> 
> 
> Mike Arace wrote:
> > The application is a Java console app, and I am trying to get it so that 
> > Antlr only outputs customized messages when lexing or parsing fails 
> > entirely.  I found the getErrorMessage() function that can be overridden 
> > in the lexer, but that only seems to address part of the error message 
> > after the location of the exception, and also only seems to address 
> > RecognitionExceptions; my Antlr installation (3.0.1) is very talkative 
> > and tells me about exceptions, recoveries, replacements, etc. right in 
> > stdout, and I would like to ignore these messages entirely.
> > 
> > I'm sure this is a solved problem already, but I am not finding anything 
> > on the site, the Antlr book, or in Google that addresses this in a 
> > application-wide way.  Any help would be greatly appreciated!
> 

_________________________________________________________________
Help yourself to FREE treats served up daily at the Messenger Caf?. Stop by today.
http://www.cafemessenger.com/info/info_sweetstuff2.html?ocid=TXT_TAGLM_OctWLtagline
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071109/5264ae12/attachment-0001.html 

From pink at odahoda.de  Thu Nov  8 22:41:37 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 08 Nov 2007 22:41:37 -0800
Subject: [antlr-interest] Python warning "unsupported option: seperator"
In-Reply-To: <47336F52.8C9FA8CB@amis.com>
References: <f158199e0711081105k41cdedd6gaf39a4e88240d8db@mail.gmail.com>
	<47336F52.8C9FA8CB@amis.com>
Message-ID: <fh0vf3$9gv$1@ger.gmane.org>

Alan Rooks wrote:
> Bradford Smith wrote:
>> Can anyone tell me why I keep getting this error when using the Python
>> language target?
>>
>> warning(11):  internal warning: ignoring unsupported option: seperator
>>
>> Everything seems to be working otherwise.  I just get this warning once or
>> twice for each time I run antlr. For example, I get it twice for the basic
>> Expr.g example from the book when I set the language=Python option for it.
> 
> It's a minor bug in the Python code-gen templates.  The StringTemplate
> option named "separator" is misspelled.  You can fix the file
> src/org/antlr/codegen/templates/Python/Python.stg (the spelling error occurs
> twice, if I remember), and use Java's jar tool to update the
> lib/antlr-3.0.1.jar file that ANTLR uses when it runs.

You could also (easier than building your own antlr.jar) grab the 
stringtemplate 3.0 jar from the previous release and use that in your 
CLASSPATH. antlr 3.0.1 contains 3.1b1 of stringtemplate which just 
slipped in mistakenly but didn't cause any trouble besides this little 
warning.

HTH
Ben


From josephg at cse.unsw.edu.au  Thu Nov  8 23:06:44 2007
From: josephg at cse.unsw.edu.au (Joseph Gentle)
Date: Fri, 9 Nov 2007 18:06:44 +1100
Subject: [antlr-interest] Bug using scopes, rule parameters, java code gen
Message-ID: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>

If I have a simple parser:


grammar test;

foo
scope
{
	Object x;
}
: bar;

bar	:	confabulate[$foo::x.toString()];

confabulate[String y]:'y';


... when it actually calls confabulate there it generates this  
incorrect code:

             confabulate(((foo_scope)foo_stack.peek()).x, .toString());

instead of:
             confabulate(((foo_scope)foo_stack.peek()).x.toString());

The problem has something to do with the '.' in the parameter list  
being parsed incorrectly.

There's a work-around using temporary variables, but its ugly.

-J

From NOSPAM at TheSnakePitDev.com  Fri Nov  9 01:23:38 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 01:23:38 -0800
Subject: [antlr-interest] Bug using scopes, rule parameters,
	java code gen
In-Reply-To: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>
References: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>
Message-ID: <fh1902$2b0$1@ger.gmane.org>

The body of scope and the argument to a rule are not actions. You can 
not include target language code like Java in them.

The scope body is a list of named attributes associated with type 
descriptions from the target language and delimited with a ';'.

The argument to a rule is a reference to local or scoped attribute, and 
not target code. So you can refer to the named attribute within the 
scope, but you cannot use target language syntax like a Java method call.

In your example, either your scoped attribute should be a String that 
can be directly referenced in the argument to the confabulate rule, or 
the confabulate rule should take an object as an argument and call the 
toString() method in a contained action.

For example (tested with AntLR v3.0.1)
----------
foo
scope {
     Object x;
}
     : {$foo::x = "Test Object";} bar
     ;

bar
     : confabulate[$foo::x]
     ;

confabulate[Object o]
     : 'y' {System.out.println($o.toString());}
     ;
----------

At least, that's as much as I've been able to figure out in the absence 
of appropriate documentation.

I hope that helps.
-- Curtis


Joseph Gentle wrote:
> If I have a simple parser:
> 
> 
> grammar test;
> 
> foo
> scope
> {
>     Object x;
> }
> : bar;
> 
> bar    :    confabulate[$foo::x.toString()];
> 
> confabulate[String y]:'y';
> 
> 
> ... when it actually calls confabulate there it generates this incorrect 
> code:
> 
>             confabulate(((foo_scope)foo_stack.peek()).x, .toString());
> 
> instead of:
>             confabulate(((foo_scope)foo_stack.peek()).x.toString());
> 
> The problem has something to do with the '.' in the parameter list being 
> parsed incorrectly.
> 
> There's a work-around using temporary variables, but its ugly.


From antlr at mirality.co.nz  Fri Nov  9 01:28:18 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 09 Nov 2007 22:28:18 +1300
Subject: [antlr-interest] Bug using scopes, rule parameters,
 java  code gen
In-Reply-To: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>
References: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>
Message-ID: <20071109092833.DDC4011EB8A@www.antlr.org>

At 20:06 9/11/2007, Joseph Gentle wrote:
 >bar	:	confabulate[$foo::x.toString()];
[...]
 >... when it actually calls confabulate there it generates this
 >incorrect code:
 >
 >             confabulate(((foo_scope)foo_stack.peek()).x,
 >.toString());
 >
 >instead of:
 >
 >confabulate(((foo_scope)foo_stack.peek()).x.toString());
 >
 >The problem has something to do with the '.' in the parameter
 >list being parsed incorrectly.

Haven't tried it, but an earlier post on the list suggests that 
this might work:

   bar : confabulate[$foo::x\.toString()];


From relationalalgebra at gmail.com  Fri Nov  9 03:07:29 2007
From: relationalalgebra at gmail.com (G R)
Date: Fri, 9 Nov 2007 12:07:29 +0100
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>
Message-ID: <2ea6ad20711090307x245ecaado36c44dfc08c58f6c@mail.gmail.com>

First of all, thanks Jeff.
I've try using your template by doing this one (I'm using a group template
file) :
difference(left, right, keyNames) ::= <<
SELECT *
FROM <left><if(keyNames)>
WHERE <keyNames: {keyName | <keyName> NOT IN ( SELECT <keyName> FROM <right>
)
}; separator="\nAND"><endif>
>>

My Tree grammar that is calling this template is here :
->difference(left={$left.st}, right={$right.st}, keyNames={
RATranslator.getPrimaryKeys($left.text)});

Where RATranslator.getPrimaryKeys(String tableName) returns a String[].
I've check the array returned by this methode, ans it's ok.
But when I try to use it as a list, I just get the physical adress of my
array. Instead of writing the content, I get something like this : [
Ljava.lang.String;@1931579.

So When I try your solution, it just acts as if my list were null and give
my something like :
SELECT *
FROM <left>

I don't understand what I am doing wrong with this list. Anyone can help ?
Thanks again.

2007/11/8, Barnes, Jeff <JB0284 at att.com>:
>
> I think you may want to try something like this:
>
> ArrayList keyNameList = new ArrayList( Arrays.asList( keyNames ) );
> templateObject.setLeft( leftTableName );
> templateObject.setRight( rightTableName );
> templateObject.setKeyNames( ( String[] ) keyNameList.toArray( new String[
> 0 ] ) );
>
> Then your template would look like this, perhaps:
>
> selectStmt ::= <<
> SELECT * FROM $templateObject.left$$if( templateObject.keyNames )$ WHERE
> $templateObject.keyNames | keyName {
> $keyName$ NOT IN ( SELECT $keyName$ FROM $templateObject.right$ )
> }; separator="\n"$$endif$
> >>
>
> I haven't tested this template, so the usual caveats apply.
>
> Best regards,
> Jeff
> ________________________________________
> From: antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] On Behalf Of G R
> Sent: Thursday, November 08, 2007 8:33 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] StringTemplate questions
>
> Hi,
>
> I'm trying to use ST to translate relational algebra into SQL, and I'm
> stuck with a template :
> "minus(left, right, keys)" where left, and right are just text, and keys
> is a list of string (I want it to be a list of String).
>
> So first question is how in Java do I build a ST list of string ?
>
> Then, using my 3 attributes (left, right and keys), I'd like to generate
> the following code :
>
> SELECT * FROM <left>
> WHERE key1 NOT IN (SELECT key1 FROM <right>)
> AND key2 NOT IN (SELECT key2 FROM <right>)
> ...
> AND keyN NOT IN (SELECT keyN FROM <right>)
>
> where key1, key2, ... keyN are the element of my list.
>
> How can i do this ? Can i use an attribute within the separator of a list
> ?
>
> Thanks for any help.
>
> G.R
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071109/613dbacc/attachment.html 

From julian.hidalgo at gmail.com  Fri Nov  9 04:21:55 2007
From: julian.hidalgo at gmail.com (=?ISO-8859-1?Q?Juli=E1n_Hidalgo?=)
Date: Fri, 09 Nov 2007 08:21:55 -0400
Subject: [antlr-interest] Indirect left recursion?
Message-ID: <473450E3.5070208@gmail.com>

Hi

The following fragment is taken from one of the earliest examples in 
the book (Expr.g):

expr:   multExpr (('+'|'-') multExpr)*
     ;

multExpr
     :   atom ('*' atom)*
     ;

atom:   INT
     |   ID
     |   '(' expr ')'
     ;

Now my question is: isn't this indirectly recursive? How does ANTLR 
handle it? I haven't read the whole book yet, so forgive me if the 
answer is over there (but I did read the "LL-Incompatible Decisions" 
section and the "Left-recursion" section).

Thanks in advance.
Juli?n

From jaluber at gmx.de  Fri Nov  9 04:16:16 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 09 Nov 2007 13:16:16 +0100
Subject: [antlr-interest] Indirect left recursion?
In-Reply-To: <473450E3.5070208@gmail.com>
References: <473450E3.5070208@gmail.com>
Message-ID: <47344F90.4070409@gmx.de>

Juli?n Hidalgo wrote:
> Hi
> 
> The following fragment is taken from one of the earliest examples in the
> book (Expr.g):
> 
> expr:   multExpr (('+'|'-') multExpr)*
>     ;
> 
> multExpr
>     :   atom ('*' atom)*
>     ;
> 
> atom:   INT
>     |   ID
>     |   '(' expr ')'
>     ;
> 
> Now my question is: isn't this indirectly recursive? How does ANTLR
> handle it? I haven't read the whole book yet, so forgive me if the
> answer is over there (but I did read the "LL-Incompatible Decisions"
> section and the "Left-recursion" section).

Mutual left-recursion is when there is a path, in which a rule calls
itself again and where the call happens to be on the left edge.

a : b
  | c
  ;

b : a
  | c
  ;

is an example. The book example can turn "expr" only into "'(' expr ')'"
and has thus expr not on the left edge. If you want to solve my example
problem, then you have to inline the other rule and solve the
left-recursion:

a : (a
  | c)
  | c
  ;

That is

a : a
  | c
  ;

and this is

a : c;

Similarly we get

b : c;

Hope that helps,
Johannes

From NOSPAM at TheSnakePitDev.com  Fri Nov  9 05:37:01 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 05:37:01 -0800
Subject: [antlr-interest] Bug using scopes, rule parameters,
	java  code gen
In-Reply-To: <20071109092833.DDC4011EB8A@www.antlr.org>
References: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>
	<20071109092833.DDC4011EB8A@www.antlr.org>
Message-ID: <fh1nr5$jog$1@ger.gmane.org>

Doesn't work.  AntLR v3.0.1
   confabulate(((foo_scope)foo_stack.peek()).x, \., toString());


Gavin Lambert wrote:
> Haven't tried it, but an earlier post on the list suggests that this 
> might work:
> 
>   bar : confabulate[$foo::x\.toString()];


From beradrian at yahoo.com  Fri Nov  9 07:06:13 2007
From: beradrian at yahoo.com (Adrian Ber)
Date: Fri, 9 Nov 2007 07:06:13 -0800 (PST)
Subject: [antlr-interest] combine tokens in rewrite rule
Message-ID: <147159.38687.qm@web30704.mail.mud.yahoo.com>

Hi all,

I want to find a way to combine multiple tokens in a single one.
I've searched the archive and found this thread: http://www.antlr.org/pipermail/antlr-interest/2007-January/019161.html.
Does any of you have a short sample code on how to do it?

Thanks,
A.

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From travis.jensen at gmail.com  Fri Nov  9 07:46:42 2007
From: travis.jensen at gmail.com (Travis Jensen)
Date: Fri, 9 Nov 2007 08:46:42 -0700
Subject: [antlr-interest] NullPointerException getting text from a rule
Message-ID: <3605cb0711090746u7b302c03p178923d9daa65cf6@mail.gmail.com>

I have the following action associated with my language:

selectStatement
    :    'from' type (localeClause)? (whereClause)?    {
contentType=$type.text; }
    ;

If I use "from fred" as input, the rule is matched appropriately, but I get
an NPE when the action is run.  Breaking down the location of the NPE, I
find that my token stream (referenced at
"contentType=input.getTokenStream().toStream(...)")
is null.

The very basic driver that I'm using looks like this, which is taken pretty
much verbatim from the ANTLR reference calculator example:

public class Test {
    public static void main(String[] args) throws Exception {
        // Create an input character stream from standard in
        ANTLRInputStream input = new ANTLRInputStream(System.in);
        // Create an ExprLexer that feeds from that stream
        cqlLexer lexer = new cqlLexer(input);
        // Create a stream of tokens fed by the lexer
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        // Create a parser that feeds off the token stream
        cqlParser parser = new cqlParser(tokens);
        // Begin parsing at rule prog, get return value structure
        cqlParser.query_return r=parser.query();

        // Walk the resulting tree

        // Get the tree from the parser
        CommonTree t = (CommonTree)r.getTree();
        // Create a tree node stream from the resulting tree
        CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
        // Create a tree walker
        cqlVcm walker = new cqlVcm(nodes);
        // launch at the start rule
        walker.query();
    }
}

Just for completeness sake, my entire tree parsing grammar is:

tree grammar cqlVcm;

options {
    tokenVocab=cql;
    ASTLabelType=CommonTree;
}

@header {
import java.util.HashMap;
import java.util.Map;
}

@members {
Map attributes = new HashMap();
String contentType = null;
}

query
    :    (expr)+
        {
        StringBuilder qry=new StringBuilder();
        qry.append("select * from ");
        qry.append(contentType);
        if (attributes.size() > 0)
            qry.append(" where");
        for (Object key:attributes.keySet())
            qry.append(key).append('=').append(attributes.get(key));
        System.out.println(qry);
        }
    ;

expr
    :    selectStatement
    ;

selectStatement
    :    'from' type (localeClause)? (whereClause)?    {
contentType=$type.text; }
    ;

localeClause
    :    ^('locale' QUOTED_STRING)            { attributes.put("locale",
$QUOTED_STRING.text); }
    ;

whereClause
    :    ^('where' whereCompare)
    ;

whereCompare
    :    ^('=' column QUOTED_STRING)            {attributes.put($column.text,
$QUOTED_STRING.text); }
    ;

type
    :    ID
    ;

column
    :    ID
    ;

Help appreciated. :)

tj
-- 
Travis Jensen
travis.jensen at gmail.com
http://cmssphere.blogspot.com/
Software Maven * Philosopher-in-Training * Avenged Nerd
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071109/0711acf5/attachment-0001.html 

From siemsen at UCAR.EDU  Fri Nov  9 09:32:59 2007
From: siemsen at UCAR.EDU (Pete Siemsen)
Date: Fri, 9 Nov 2007 10:32:59 -0700
Subject: [antlr-interest] newbie stringtemplate question
In-Reply-To: <7D46B471-D402-4E06-B194-AB7013D39BC4@cs.usfca.edu>
References: <1146687F-7AE7-4DF8-AFC2-1D026E6B1418@UCAR.EDU>
	<7D46B471-D402-4E06-B194-AB7013D39BC4@cs.usfca.edu>
Message-ID: <0ABFB03F-2C37-466F-8C2A-428EF4BA6513@UCAR.EDU>

Thanks, that was it.

-- Pete



On Nov 8, 2007, at 9:42 PM, Terence Parr wrote:

> Hi. most likely you are passing the ST all the back up to the outer  
> rule mofSpecification.  ANTLR doesn't pass anything up  
> automatically for STs.
> Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071109/dfd7fe06/attachment.html 

From lenochodpetiprsty at seznam.cz  Fri Nov  9 10:49:38 2007
From: lenochodpetiprsty at seznam.cz (Bolek Vrany)
Date: Fri, 09 Nov 2007 19:49:38 +0100
Subject: [antlr-interest] Display parse tree in Java or C#
Message-ID: <4734ABC2.7090403@seznam.cz>

Hello,

I have built grammer and a non-tree parser for my language in ANTLRworks 
with ANTLR 3.0.1. It works fine and shows the correct parse tree in 
ANTLRworks for all test cases. Then I generetad Java and C# code for the 
parser and lexer classes. The parser is a descandant of the Parser, 
BaseRecognizer and Object classes.

My question is: how do I traverse the tree in C#? I did not find any way 
to get the parse tree from my parser, not even in the form that's 
displayed in the parse tree window of the ANTLRworks debugger.

The overall goal is integrating the whole parser into MS SQL Server 2005 
using .NET integration and use it there for translation expressions in a 
proprietary language.

Thanks a lot

Bolek


From NOSPAM at TheSnakePitDev.com  Fri Nov  9 13:56:23 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 13:56:23 -0800
Subject: [antlr-interest] combine tokens in rewrite rule
In-Reply-To: <147159.38687.qm@web30704.mail.mud.yahoo.com>
References: <147159.38687.qm@web30704.mail.mud.yahoo.com>
Message-ID: <fh2l3d$dab$1@ger.gmane.org>

I must admit, I am somewhat confused by the answer given in the 
referenced thread. Doesn't the use of fragment lexer rules solve this?

For example, the grammar below will parse this input
<<
name
name.subName1
name.subName1.subName2.subName3
 >>
into a tree that has three ID nodes under the root nil node, each with 
the complete qualified ID text as a single token. Is this what you mean, 
or have I missed something?

(tested with AntLR v3.0.1 and ANTLRWorks v1.1.4)
----------
grammar ABer1;

options {
     output = AST;
}


unit: ID+;


ID: UnqualifiedID ('.' UnqualifiedID)*;
WS: (' ' | '\t' | '\r' | '\n' | '\f')+ {$channel = HIDDEN;};


fragment UnqualifiedID     : UnqualifiedIDFirst (UnqualifiedIDRest)*;
fragment UnqualifiedIDFirst: 'a'..'z' | 'A'..'Z' | '_';
fragment UnqualifiedIDRest : 'a'..'z' | 'A'..'Z' | '_' | '0'..'9';
----------

I hope that helps.
-- Curtis


Adrian Ber wrote:
> Hi all,
> 
> I want to find a way to combine multiple tokens in a single one.
> I've searched the archive and found this thread: http://www.antlr.org/pipermail/antlr-interest/2007-January/019161.html.
> Does any of you have a short sample code on how to do it?


From jimi at temporal-wave.com  Fri Nov  9 14:08:11 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 9 Nov 2007 14:08:11 -0800
Subject: [antlr-interest] combine tokens in rewrite rule
In-Reply-To: <fh2l3d$dab$1@ger.gmane.org>
Message-ID: <"L303C4D26DF174afaB4D45A07B52BF2CB.1194646194.scalix.temporal-wave.com*"@MHS>

But that is a lexical solution. When '.' is used in many places it is 
quite often a better bet to have the parser determine the pieces of a 
valid reference and in many cases you need the individual components 
because the meanings change according to context.

For instance x.y could be an enumeration, or a property reference or 
something else.

All that needs to be done is to take the .text of each element of the ID 
and concatenate them. To be honest, I would probably not even do that in 
the parser, but in the tree parser, where you probably have the 
contextual information available (and may well not have in the parser). 
Then the write would be something like ->^(IDEXPR $ids+ ) or some such.

Jim

-----Original Message-----
From: Curtis Clauson [mailto:NOSPAM at TheSnakePitDev.com] 
Sent: Friday, November 09, 2007 1:56 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] combine tokens in rewrite rule

I must admit, I am somewhat confused by the answer given in the 
referenced thread. Doesn't the use of fragment lexer rules solve this?

For example, the grammar below will parse this input
<<
name
name.subName1
name.subName1.subName2.subName3
 >>
into a tree that has three ID nodes under the root nil node, each with 
the complete qualified ID text as a single token. Is this what you mean, 

or have I missed something?

(tested with AntLR v3.0.1 and ANTLRWorks v1.1.4)
----------
grammar ABer1;

options {
     output = AST;
}


unit: ID+;


ID: UnqualifiedID ('.' UnqualifiedID)*;
WS: (' ' | '\t' | '\r' | '\n' | '\f')+ {$channel = HIDDEN;};


fragment UnqualifiedID     : UnqualifiedIDFirst (UnqualifiedIDRest)*;
fragment UnqualifiedIDFirst: 'a'..'z' | 'A'..'Z' | '_';
fragment UnqualifiedIDRest : 'a'..'z' | 'A'..'Z' | '_' | '0'..'9';
----------

I hope that helps.
-- Curtis


Adrian Ber wrote:
> Hi all,
> 
> I want to find a way to combine multiple tokens in a single one.
> I've searched the archive and found this thread: 
http://www.antlr.org/pipermail/antlr-interest/2007-January/019161.html.
> Does any of you have a short sample code on how to do it?




From NOSPAM at TheSnakePitDev.com  Fri Nov  9 15:31:32 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 15:31:32 -0800
Subject: [antlr-interest] combine tokens in rewrite rule
In-Reply-To: <"L303C4D26DF174afaB4D45A07B52BF2CB.1194646194.scalix.temporal-wave.com*"@MHS>
References: <fh2l3d$dab$1@ger.gmane.org>
	<"L303C4D26DF174afaB4D45A07B52BF2CB.1194646194.scalix.temporal-wave.com*"@MHS>
Message-ID: <fh2qls$sn7$1@ger.gmane.org>

I understand and agree with AST sub-trees for fully qualified 
identifiers in complex languages. However, that is not what either the 
referenced thread poster nor this thread's original poster asked.
They asked for one fully qualified name as one token in one node, which 
would be a lexical solution. I did not want to try to redefine their 
language.

The solution you gave in the referenced thread specified
  1 Declare an "imaginary" token declared in the tokens {} section.
  2 Accumulate the text of the individual IDs and dots ('.') in some 
unspecified manner.
  3 Rewrite the rule as the imaginary token set to the concatenated text 
in some unspecified manner.

What confuses me is why use an "imaginary" token, precisely how steps 2 
and 3 are performed, and how such a solution would differ from using 
lexical fragments as I demonstrated.

Could you provide a concrete example grammar? You got me all curious now. :)

Thanks
-- Curtis


Jim Idle wrote:
> But that is a lexical solution. When '.' is used in many places it is 
> quite often a better bet to have the parser determine the pieces of a 
> valid reference and in many cases you need the individual components 
> because the meanings change according to context.
> 
> For instance x.y could be an enumeration, or a property reference or 
> something else.
> 
> All that needs to be done is to take the .text of each element of the ID 
> and concatenate them. To be honest, I would probably not even do that in 
> the parser, but in the tree parser, where you probably have the 
> contextual information available (and may well not have in the parser). 
> Then the write would be something like ->^(IDEXPR $ids+ ) or some such.
> 
> Jim
> 
> -----Original Message-----
> From: Curtis Clauson [mailto:NOSPAM at TheSnakePitDev.com] 
> Sent: Friday, November 09, 2007 1:56 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] combine tokens in rewrite rule
> 
> I must admit, I am somewhat confused by the answer given in the 
> referenced thread. Doesn't the use of fragment lexer rules solve this?
> 
> For example, the grammar below will parse this input
> <<
> name
> name.subName1
> name.subName1.subName2.subName3
>  >>
> into a tree that has three ID nodes under the root nil node, each with 
> the complete qualified ID text as a single token. Is this what you mean, 
> 
> or have I missed something?
> 
> (tested with AntLR v3.0.1 and ANTLRWorks v1.1.4)
> ----------
> grammar ABer1;
> 
> options {
>      output = AST;
> }
> 
> 
> unit: ID+;
> 
> 
> ID: UnqualifiedID ('.' UnqualifiedID)*;
> WS: (' ' | '\t' | '\r' | '\n' | '\f')+ {$channel = HIDDEN;};
> 
> 
> fragment UnqualifiedID     : UnqualifiedIDFirst (UnqualifiedIDRest)*;
> fragment UnqualifiedIDFirst: 'a'..'z' | 'A'..'Z' | '_';
> fragment UnqualifiedIDRest : 'a'..'z' | 'A'..'Z' | '_' | '0'..'9';
> ----------
> 
> I hope that helps.
> -- Curtis
> 
> 
> Adrian Ber wrote:
>> Hi all,
>>
>> I want to find a way to combine multiple tokens in a single one.
>> I've searched the archive and found this thread: 
> http://www.antlr.org/pipermail/antlr-interest/2007-January/019161.html.
>> Does any of you have a short sample code on how to do it?


From NOSPAM at TheSnakePitDev.com  Fri Nov  9 15:44:57 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 15:44:57 -0800
Subject: [antlr-interest] Full error reporting with the simplest grammar
In-Reply-To: <fgtorf$9gk$1@ger.gmane.org>
References: <fgtorf$9gk$1@ger.gmane.org>
Message-ID: <fh2rf1$uqo$1@ger.gmane.org>

Now I know you AntLR implementers and designers are out there because 
I've seen you submit replies while I've been hanging out trying to help 
with other questions.

I seriously need help with these three issues. Your assistance, or at 
least acknowledgment, would be greatly appreciated.
<big brown puppy-eyes>

-- Curtis


Curtis Clauson wrote:
> I am trying to create what should be the simplest grammar possible (with 
> EOF) that provides full error reporting, since a grammar without full 
> error reporting is worthless. I have solved some undocumented 
> peculiarities, but I do not know if I have done so in a manner 
> consistent with the intended design of AntLR. I describe 3 problems 
> below, the first two with possible solutions and the third still unsolved.
> 
> What I need to know is:
>   1 Are the solutions I used for problems 1 and 2 consistent with the 
> intended design of AntLR, or are there better ways?
>   2 How do I deal with problem 3?
> 
> The grammar is:
> ----------
> grammar SingleCharacter;
> 
> @header {
> import static java.lang.System.out;
> }
> 
> 
> /* Parser Rules */
> singleCharacter
> returns [boolean succeeded = false]
>     :   Character {
>             out.println(
>                 "Parsed token Character '" + $Character.text + "'"
>             );
>         }
>         EOF {
>             out.println("Parsed token EOF");
>         }
>         {
>             out.println("Parsed singleCharacter");
>             $succeeded = true;
>         }
>     ;
> 
> /* Lexer Rules */
> Character: 'a';
> // Invalid added for problem #2
> Invalid  :  .  {$type = Token.INVALID_TOKEN_TYPE;};
> 
> ----------
> Problem #1
> 
> There is a serious bug in the lexer that causes it, during error 
> recovery, to skip two characters instead of just the unexpected 
> character. When a character is not matched, match() creates an exception 
> object 'mte', calls recover(mte) which consumes the unexpected 
> character, and then throws the exception. However, nextToken() catches 
> that exception, reports the error, and then calls recover(mte) again, 
> erroneously consuming the token after the already consumed unexpected 
> token.
> 
> In my simple example, the source "ba" produces the following results:
> Note: The Invalid token did not exist at this point.
> <<
> Parsing: "ba"
> Token stream
>     <No tokens>
> 
> Parser output
> line 1:0 mismatched character 'b' expecting 'a'
> BR.recoverFromMismatchedToken
> line 0:-1 mismatched input '<EOF>' expecting Character
> 
> Returned false
>  >>
> 
> The lexer does not provide any tokens to the token stream.
> This is what actually happens in the lexer:
>   1 A call to match('a') is is made by mCharacter()
>   2 The first character seen is an invalid 'b'
>   2 A MismatchedTokenException object is created
>   4 The recover(mte) method is called that consumes the current invalid 
> character 'b'
>   4 The exception object is thrown
>   5 The exception is caught by nextToken()
>   6 A call to reportError(re) is made that displays the lexer error
>   7 Another call to recover(re) is made that consumes the next 
> character, the valid character 'a'
>   8 nextToken() loops back to try to get a token again, sees EOF, and 
> returns Token.EOF_TOKEN
>   9 The parser has no tokens in the stream and reports it saw <EOF>
> 
> Given the flow of the code and the use of nextToken(), it seems the 
> solution is to eliminate the call to recover(re) in the exception 
> handler of nextToken(). It works fine for my simple example, but I'm not 
> sure if this is consistent with the intended design of AntLR.
> 
> ----------
> Problem #2
> 
> I originally did not have the "Invalid" token. I quickly discovered that 
> CommonTokenStream parses *ALL* of the tokens in the source on the first 
> call for a token. I had expected that it would only buffer the consumed 
> and look-ahead tokens so that any lexer exception would be caught by the 
> parser and could be reported in parser context. I do not understand and 
> it is undocumented for what purpose CommonTokenStream does this.
> 
> I also found that the lexer is not capable of propagating a 
> RecognitionException since nextToken has a catch hard-coded in. There 
> seems to be no way in the grammar to configure this outside of 
> overriding the nextToken() method.
> 
> The idea is to use AntLR "as is" as much as possible, so implementing a 
> new TokenStream that only buffers consumed or look-ahead tokens is out. 
> It seems that the only solution is to record lexer errors in the token 
> stream as <invalid> tokens. This could be done by defining <invalid> 
> tokens in the grammar with a type assigning action, or overriding the 
> nextToken() method and altering the exception handler.
> 
> Both of these solutions work for my simple example. Also, since they 
> both eliminate the possibility of a RecognitionException being thrown, 
> they mask problem #1.
> 
> I chose the grammar solution for this example, but it might not be 
> possible for a more complex lexer, and I do not know if this is a 
> solution that is consistent with the intended design.
> 
> ----------
> Problem #3
> 
> For this problem, I do not have a solution, and it is a show-stopper.
> 
> The parser, when it sees an unexpected token, reports the error and 
> tries two kinds of recovery. If the following token is of the expected 
> type, it consumes the current token and returns a match, skipping the 
> unexpected token. If the current token can follow the expected token, it 
> returns a match and does not consume a token, continuing with the 
> current token as if it had seen the missing token.
> 
> This means that match() might match the next or a non-existing token 
> instead of the current. However, when a rule action uses a token 
> reference, like in my grammar where the action in singleCharacter that 
> follows Character uses the $Character.text field to report the string 
> that was matched, that reference is obtained by AntLR before the call to 
> match() from the input stream like so:
>     Character1=(Token)input.LT(1);
>     match(input,Character,FOLLOW_Character_in_singleCharacter33);
>     out.println("Parsed token Character '" + Character1.getText() + "'");
> 
> If the call to match() performs error recovery, that token reference 
> will *NOT* be the one that matched. The matched token might be the next 
> token if the current one was skipped, or might be no token if the 
> current one was a valid follow token.
> 
> Since the code that gets the reference is automatically generated by 
> AntLR, and since match() does not record or return the matched token, I 
> see no way to tell AntLR to handle this correctly.
> 
> In my simple example, if the source text is "ba", I get the following 
> result:
> 
> <<
> Parsing: "ba"
> Token stream
>     0; channel[0] <invalid>, "b" at 1:0
>     1; channel[0] Character, "a" at 1:1
> 
> Parser output
> BR.recoverFromMismatchedToken
> line 1:0 mismatched input 'b' expecting Character
> Parsed token Character 'b'
> Parsed token EOF
> Parsed singleCharacter
> 
> Returned true
>  >>
> 
> The problem is demonstrated by the first action output:
>   1 The <invalid> 'b' token is parsed
>   2 Error recovery is performed that skips the current token since the 
> next is the expected Character 'a'
>   3 The Character match() returns successfully
>   4 The Character action prints the result
> 
> However, the $Character reference is still the skipped <invalid> 'b' 
> token instead of the now current Character 'a' token. So the message 
> says it "Parsed token Character 'b'" instead of "Parsed token Character 
> 'a'".
> 
> As this problem creates incorrect data within the action, it is data 
> corruption and a show-stopper in any environment. Is there a way to deal 
> with this in AntLR, or is this an unresolved bug?


From jimi at temporal-wave.com  Fri Nov  9 16:15:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 9 Nov 2007 16:15:09 -0800
Subject: [antlr-interest] combine tokens in rewrite rule
In-Reply-To: <fh2qls$sn7$1@ger.gmane.org>
Message-ID: <"L685217BD37F84f1884EA9AE02A16B486.1194653814.scalix.temporal-wave.com*"@MHS>

However, what a person asks for, and what they need are not necessarily 
the same thing. ;-) 

It doesnt have to be an imaginary token, but it usually is because 
there won't be a lexer defined token to use with the rewrite, given that 
you are parsing the construct rather than lexing it. 

So, you are parsing the elements of some complicated reference or 
variable or class etc, and you need '.' in other places in your parser, 
and you also need to look at the individual pieces of the id. When you 
send the reference to the tree parser, you want to tag it with something 
to introduce it as a reference. Hence you would usually use an imaginary 
token as the place holder for the reference and have it introduce the 
individual pieces of the reference, which can then be looked up to find 
out if they are enumerations, objects and so on, such that the tree 
parser deals with them accordingly. 

If you pass the whole thing in as one token from the lexer, then you 
will probably end up splitting the token text anyway, so you can look up 
the context. However, if you never need to do this, then a lexical 
solution probably does work for you. Trying to apply context within the 
lexer rules though is definitely not something you should be doing by 
choice.

Now keep in mind that there are always 18 ways to skin a cat, and that's 
just the way I do such things, it's whatever floats your boat in the end 
:-)

Check the wiki or book for the rewrite syntax, but you can set the text 
of a token when you rewrite it.

So, your options are:

1) Lexical if there is no need to do anything with the different 
components (maybe you are formatting and dont need to know what it is 
for instance).
2) Declare a local String variable and as you get each ID text, append 
it, then rewrite with that as the token text (here this would be so that 
you have simpler lexer rules or are avoiding some lexing ambiguity say, 
because putting the text back together is kind of redundant (I seem to 
think that this was why the first question received the answer it did);
3) Rewrite the place holding imaginary token and each of the name 
components. If you can work out the type or context at this stage in the 
parse, then you might write one of a number of imaginaries, but If you 
have to parser the whole thing before you can work out types, then you 
would use one token and resolve the types in the next phase.

So:
tokens
{
	REFERENCE;
}

id:
   i=ID (DOT i+=ID) -> ^(REFERENCE $i+)
;

Or perhaps, if you have context, something like

id:
   v=ID (DOT r+=ID)

	-> {lookup($v) == OBJECT}? ^(OBJECT $v $r*)
	-> and so on

Jim

-----Original Message-----
From: Curtis Clauson [mailto:NOSPAM at TheSnakePitDev.com] 
Sent: Friday, November 09, 2007 3:32 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] combine tokens in rewrite rule

I understand and agree with AST sub-trees for fully qualified 
identifiers in complex languages. However, that is not what either the 
referenced thread poster nor this thread's original poster asked.
They asked for one fully qualified name as one token in one node, which 
would be a lexical solution. I did not want to try to redefine their 
language.

The solution you gave in the referenced thread specified
  1 Declare an "imaginary" token declared in the tokens {} section.
  2 Accumulate the text of the individual IDs and dots ('.') in some 
unspecified manner.
  3 Rewrite the rule as the imaginary token set to the concatenated text 

in some unspecified manner.

What confuses me is why use an "imaginary" token, precisely how steps 2 
and 3 are performed, and how such a solution would differ from using 
lexical fragments as I demonstrated.

Could you provide a concrete example grammar? You got me all curious 
now. :)

Thanks
-- Curtis


Jim Idle wrote:
> But that is a lexical solution. When '.' is used in many places it is 
> quite often a better bet to have the parser determine the pieces of a 
> valid reference and in many cases you need the individual components 
> because the meanings change according to context.
> 
> For instance x.y could be an enumeration, or a property reference or 
> something else.
> 
> All that needs to be done is to take the .text of each element of the 
ID 
> and concatenate them. To be honest, I would probably not even do that 
in 
> the parser, but in the tree parser, where you probably have the 
> contextual information available (and may well not have in the 
parser). 
> Then the write would be something like ->^(IDEXPR $ids+ ) or some 
such.
> 
> Jim
> 
> -----Original Message-----
> From: Curtis Clauson [mailto:NOSPAM at TheSnakePitDev.com] 
> Sent: Friday, November 09, 2007 1:56 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] combine tokens in rewrite rule
> 
> I must admit, I am somewhat confused by the answer given in the 
> referenced thread. Doesn't the use of fragment lexer rules solve this?
> 
> For example, the grammar below will parse this input
> <<
> name
> name.subName1
> name.subName1.subName2.subName3
>  >>
> into a tree that has three ID nodes under the root nil node, each with 

> the complete qualified ID text as a single token. Is this what you 
mean, 
> 
> or have I missed something?
> 
> (tested with AntLR v3.0.1 and ANTLRWorks v1.1.4)
> ----------
> grammar ABer1;
> 
> options {
>      output = AST;
> }
> 
> 
> unit: ID+;
> 
> 
> ID: UnqualifiedID ('.' UnqualifiedID)*;
> WS: (' ' | '\t' | '\r' | '\n' | '\f')+ {$channel = HIDDEN;};
> 
> 
> fragment UnqualifiedID     : UnqualifiedIDFirst (UnqualifiedIDRest)*;
> fragment UnqualifiedIDFirst: 'a'..'z' | 'A'..'Z' | '_';
> fragment UnqualifiedIDRest : 'a'..'z' | 'A'..'Z' | '_' | '0'..'9';
> ----------
> 
> I hope that helps.
> -- Curtis
> 
> 
> Adrian Ber wrote:
>> Hi all,
>>
>> I want to find a way to combine multiple tokens in a single one.
>> I've searched the archive and found this thread: 
> 
http://www.antlr.org/pipermail/antlr-interest/2007-January/019161.html.
>> Does any of you have a short sample code on how to do it?




From NOSPAM at TheSnakePitDev.com  Fri Nov  9 16:58:52 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 16:58:52 -0800
Subject: [antlr-interest] NullPointerException getting text from a rule
In-Reply-To: <3605cb0711090746u7b302c03p178923d9daa65cf6@mail.gmail.com>
References: <3605cb0711090746u7b302c03p178923d9daa65cf6@mail.gmail.com>
Message-ID: <fh2vpj$9q9$1@ger.gmane.org>

In a tree parser rule action, to use the ".text" attribute with a 
matched element reference, you must provide the original TokenStream 
from which the tree was made. If you do not, then input.getTokenStream() 
will return null and you get that NullPointerException.

In your main() method, add this line
     nodes.setTokenStream(tokens);
after you create the NodeStream.

This grammar will then work correctly with the "from fred" source text. 
(tested AntLR v3.0.1)

-- Curtis


Travis Jensen wrote:
> I have the following action associated with my language:
> 
> selectStatement   
>     :    'from' type (localeClause)? (whereClause)?    { 
> contentType=$type.text; }
>     ;
> 
> If I use "from fred" as input, the rule is matched appropriately, but I 
> get an NPE when the action is run.  Breaking down the location of the 
> NPE, I find that my token stream (referenced at "contentType= 
> input.getTokenStream().toStream(...)") is null.
> 
> The very basic driver that I'm using looks like this, which is taken 
> pretty much verbatim from the ANTLR reference calculator example:
> 
> public class Test {
>     public static void main(String[] args) throws Exception {
>         // Create an input character stream from standard in
>         ANTLRInputStream input = new ANTLRInputStream( System.in 
> <http://System.in>);
>         // Create an ExprLexer that feeds from that stream
>         cqlLexer lexer = new cqlLexer(input);
>         // Create a stream of tokens fed by the lexer
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>         // Create a parser that feeds off the token stream
>         cqlParser parser = new cqlParser(tokens);
>         // Begin parsing at rule prog, get return value structure
>         cqlParser.query_return r= parser.query();
> 
>         // Walk the resulting tree
> 
>         // Get the tree from the parser
>         CommonTree t = (CommonTree)r.getTree();
>         // Create a tree node stream from the resulting tree
>         CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
>         // Create a tree walker
>         cqlVcm walker = new cqlVcm(nodes);
>         // launch at the start rule
>         walker.query();
>     }
> }
> 
> Just for completeness sake, my entire tree parsing grammar is:
> 
> tree grammar cqlVcm;
> 
> options {
>     tokenVocab=cql;
>     ASTLabelType=CommonTree;
> }
> 
> @header {
> import java.util.HashMap;
> import java.util.Map;
> }
> 
> @members {
> Map attributes = new HashMap();
> String contentType = null;
> }
> 
> query
>     :    (expr)+
>         {
>         StringBuilder qry=new StringBuilder();
>         qry.append("select * from ");
>         qry.append(contentType);
>         if (attributes.size() > 0)
>             qry.append(" where");
>         for (Object key:attributes.keySet())
>             qry.append(key).append('=').append(attributes.get(key));
>         System.out.println(qry);
>         }
>     ;
>    
> expr
>     :    selectStatement
>     ;
>    
> selectStatement   
>     :    'from' type (localeClause)? (whereClause)?    { 
> contentType=$type.text; }
>     ;
> 
> localeClause
>     :    ^('locale' QUOTED_STRING)            { attributes.put("locale", 
> $QUOTED_STRING.text); }
>     ;
>    
> whereClause
>     :    ^('where' whereCompare)
>     ;
>    
> whereCompare
>     :    ^('=' column QUOTED_STRING)            
> {attributes.put($column.text, $QUOTED_STRING.text); }
>     ;
>    
> type
>     :    ID
>     ;
> 
> column
>     :    ID
>     ;
> 
> Help appreciated. :)
> 
> tj
> -- 
> Travis Jensen
> travis.jensen at gmail.com 
> <mailto:travis.jensen at gmail.com>
> http://cmssphere.blogspot.com/
> Software Maven * Philosopher-in-Training * Avenged Nerd


From parrt at cs.usfca.edu  Fri Nov  9 17:39:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 9 Nov 2007 17:39:06 -0800
Subject: [antlr-interest] BUG? (JAVA) Antlr complains, and possibly fails,
	when dealing with large acceptance sets
In-Reply-To: <4733F84C.3000205@Yahoo.com>
References: <4733CDC0.2010901@Yahoo.com> <4733F84C.3000205@Yahoo.com>
Message-ID: <D0D4AD5C-D790-4874-A065-FBD28DE9B186@cs.usfca.edu>


On Nov 8, 2007, at 10:03 PM, Austin Hastings wrote:

> Antlr-godz,
>
> In reference to my email earlier tonight (see below), I replaced  
> this rule:
>
>
> WS    : ({ Character.isWhitespace(input.LA(1)) }? .)+    {$channel  
> = HIDDEN;} ;
>
>
> with this one:
>
>
> WS: (' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;
>
>
> This change made the complaint stop. I am guessing that somewhere  
> in the bowels of antlr it was trying to expand the '.' dfa, but  
> that doesn't make much sense because there's plenty of other times  
> when '.' gets used. So I really don't know what it was doing - but  
> enumerating the "easy" whitespace characters made it stop. I don't  
> know if this is a bug or not - it may be the case that running with  
> -mx allTheRamInTheWorld might have let it succeed.

Hi Austin :)  Heh, is your grammar pretty big?  Seems that I've done  
something similar for the java.g once, but ended up enumerating chars  
for speed.  Hmm...yeah, matching any sequence of char can really piss  
antlr off at the moment.  Actually, you'll need {...}?=> not just  
{...}?.  Can u try that?

Ter


From parrt at cs.usfca.edu  Fri Nov  9 17:44:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 9 Nov 2007 17:44:56 -0800
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
Message-ID: <4F762865-4C94-4368-9DAF-867D815EFAF1@cs.usfca.edu>


On Nov 8, 2007, at 5:32 AM, G R wrote:

> Hi,
>
> I'm trying to use ST to translate relational algebra into SQL, and  
> I'm stuck with a template :
> "minus(left, right, keys)" where left, and right are just text, and  
> keys is a list of string (I want it to be a list of String).
>
> So first question is how in Java do I build a ST list of string ?

howdy do.

Just pass in List<String> of your choice.

> Then, using my 3 attributes (left, right and keys), I'd like to  
> generate the following code :
>
> SELECT * FROM <left>
> WHERE key1 NOT IN (SELECT key1 FROM <right>)
> AND  key2 NOT IN (SELECT key2 FROM <right>)
> ...
> AND  keyN NOT IN (SELECT keyN FROM <right>)
>
> where key1, key2, ... keyN are the element of my list.
>
> How can i do this ? Can i use an attribute within the separator of  
> a list ?

Yes.  Separator option can be a template. :)  separator={..$a$..}

But, i don't think that's what you want.  You want to apply a  
template for each keys

SELECT * FROM <left>
WHERE <keys:{k | <k> NOT IN (SELECT <k> FROM <right>)}; separator="  
AND ">

Ain't that cool?

Ter

From parrt at cs.usfca.edu  Fri Nov  9 17:51:41 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 9 Nov 2007 17:51:41 -0800
Subject: [antlr-interest] ST 3.1 daily build
Message-ID: <9E6A1A2D-3A3C-4D29-86E0-F4010726C223@cs.usfca.edu>

hi daily build is essentially 3.1 final.

http://www.stringtemplate.org/download/build/ 
stringtemplate-11-09-2007.17.tar.gz

11-09-2007

o added elseif. $if(x)$...$elseif(y)$...$else$...$endif$

o updated some unit tests (names, guts) to make more sense.

o updated group.g and eval.g so that list literals can have empty
   atoms like $["a",,"b"]:{n | ...}; null="nullstring"$.

11-08-2007

o "default" was not a valid value in map.  had testLiterals looking  
even at strings in lexer for
   group.g. ST-15

o ST-18 fixed.  put close in a finally block.

Ter


From parrt at cs.usfca.edu  Fri Nov  9 17:51:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 9 Nov 2007 17:51:55 -0800
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <2ea6ad20711090307x245ecaado36c44dfc08c58f6c@mail.gmail.com>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>
	<2ea6ad20711090307x245ecaado36c44dfc08c58f6c@mail.gmail.com>
Message-ID: <D616D2E2-047F-445B-AC34-25256B06BD34@cs.usfca.edu>


On Nov 9, 2007, at 3:07 AM, G R wrote:

> First of all, thanks Jeff.
> I've try using your template by doing this one (I'm using a group  
> template file) :
> difference(left, right, keyNames) ::= <<
> SELECT *
> FROM <left><if(keyNames)>
> WHERE <keyNames: {keyName | <keyName> NOT IN ( SELECT <keyName>  
> FROM <right> )
> }; separator="\nAND"><endif>
> >>

Wow!  You got it on your own.

> My Tree grammar that is calling this template is here :
> ->difference(left={$left.st}, right={$right.st}, keyNames= 
> {RATranslator.getPrimaryKeys($left.text)});
>
> Where RATranslator.getPrimaryKeys(String tableName) returns a String 
> [].
> I've check the array returned by this methode, ans it's ok.
> But when I try to use it as a list, I just get the physical adress  
> of my array. Instead of writing the content, I get something like  
> this : [Ljava.lang.String;@1931579.

Oh!  Yeah, I think there was an issue where property return values  
weren't converted to lists. hang on...oh, looks like code is ok.  Can  
you try latest build?

http://www.stringtemplate.org/download/build/ 
stringtemplate-11-09-2007.17.tar.gz

Ter

From parrt at cs.usfca.edu  Fri Nov  9 17:57:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 9 Nov 2007 17:57:06 -0800
Subject: [antlr-interest] Bug using scopes, rule parameters,
	java code gen
In-Reply-To: <fh1902$2b0$1@ger.gmane.org>
References: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>
	<fh1902$2b0$1@ger.gmane.org>
Message-ID: <E75CEEB2-2B5F-470D-AD3D-85EEE0ABF421@cs.usfca.edu>


On Nov 9, 2007, at 1:23 AM, Curtis Clauson wrote:

> The body of scope and the argument to a rule are not actions. You  
> can not include target language code like Java in them.

hi. actually they are actions. sounds like a bug.

> The scope body is a list of named attributes associated with type  
> descriptions from the target language and delimited with a ';'.

correct.

> The argument to a rule is a reference to local or scoped attribute,  
> and not target code. So you can refer to the named attribute within  
> the scope, but you cannot use target language syntax like a Java  
> method call.

you can, just a bug in this case.
Added bug:

http://www.antlr.org:8888/browse/ANTLR-194

Ter

From NOSPAM at TheSnakePitDev.com  Fri Nov  9 19:11:35 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 19:11:35 -0800
Subject: [antlr-interest] Bug using scopes, rule parameters,
	java code gen
In-Reply-To: <E75CEEB2-2B5F-470D-AD3D-85EEE0ABF421@cs.usfca.edu>
References: <921A7BFA-E8EA-47E9-A201-F83A97C4B348@cse.unsw.edu.au>	<fh1902$2b0$1@ger.gmane.org>
	<E75CEEB2-2B5F-470D-AD3D-85EEE0ABF421@cs.usfca.edu>
Message-ID: <fh37if$po2$1@ger.gmane.org>

Terence Parr wrote:
>> The argument to a rule is a reference to local or scoped attribute, 
>> and not target code. So you can refer to the named attribute within 
>> the scope, but you cannot use target language syntax like a Java 
>> method call.
> 
> you can, just a bug in this case.
> Added bug:
> 
> http://www.antlr.org:8888/browse/ANTLR-194

So the text within the rule argument and return '[' ... ']' brackets is 
action text? Kewl. Should make things easier when fixed. Thanks for the 
correction.

-- Curtis


From NOSPAM at TheSnakePitDev.com  Fri Nov  9 19:33:53 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Fri, 09 Nov 2007 19:33:53 -0800
Subject: [antlr-interest] combine tokens in rewrite rule
In-Reply-To: <"L685217BD37F84f1884EA9AE02A16B486.1194653814.scalix.temporal-wave.com*"@MHS>
References: <fh2qls$sn7$1@ger.gmane.org>
	<"L685217BD37F84f1884EA9AE02A16B486.1194653814.scalix.temporal-wave.com*"@MHS>
Message-ID: <fh38s9$s1s$1@ger.gmane.org>

"When addressing a student, learn, and do not assume, their needs."
  - One of "Rules To Teach By" ;)

Ok, I get it now. Each of these techniques produces the same result: one 
node, one token, the fully-qualified identifier text (if desired). 
However, they differ in what it takes to match the identifier.

If the fully-qualified identifier can be matched with the lexer than the 
lexical solution is fine-'n-dandy.

If you need the parser to match it, then you can use the tree 
rule-rewrite grammar to define the node as a previously named token with 
the matched text in whatever coded manner you like (which is what you 
meant by "rewrite the rule as the imaginary token"). That would make 
this solution, uhm, Jim-dandy. <chuckle>

Thx for the clarification.
-- Curtis


Jim Idle wrote:
> However, what a person asks for, and what they need are not necessarily 
> the same thing. ;-) 
> 
> It doesnt have to be an imaginary token, but it usually is because 
> there won't be a lexer defined token to use with the rewrite, given that 
> you are parsing the construct rather than lexing it. 
> 
> So, you are parsing the elements of some complicated reference or 
> variable or class etc, and you need '.' in other places in your parser, 
> and you also need to look at the individual pieces of the id. When you 
> send the reference to the tree parser, you want to tag it with something 
> to introduce it as a reference. Hence you would usually use an imaginary 
> token as the place holder for the reference and have it introduce the 
> individual pieces of the reference, which can then be looked up to find 
> out if they are enumerations, objects and so on, such that the tree 
> parser deals with them accordingly. 
> 
> If you pass the whole thing in as one token from the lexer, then you 
> will probably end up splitting the token text anyway, so you can look up 
> the context. However, if you never need to do this, then a lexical 
> solution probably does work for you. Trying to apply context within the 
> lexer rules though is definitely not something you should be doing by 
> choice.
> 
> Now keep in mind that there are always 18 ways to skin a cat, and that's 
> just the way I do such things, it's whatever floats your boat in the end 
> :-)
> 
> Check the wiki or book for the rewrite syntax, but you can set the text 
> of a token when you rewrite it.
> 
> So, your options are:
> 
> 1) Lexical if there is no need to do anything with the different 
> components (maybe you are formatting and dont need to know what it is 
> for instance).
> 2) Declare a local String variable and as you get each ID text, append 
> it, then rewrite with that as the token text (here this would be so that 
> you have simpler lexer rules or are avoiding some lexing ambiguity say, 
> because putting the text back together is kind of redundant (I seem to 
> think that this was why the first question received the answer it did);
> 3) Rewrite the place holding imaginary token and each of the name 
> components. If you can work out the type or context at this stage in the 
> parse, then you might write one of a number of imaginaries, but If you 
> have to parser the whole thing before you can work out types, then you 
> would use one token and resolve the types in the next phase.
> 
> So:
> tokens
> {
> 	REFERENCE;
> }
> 
> id:
>    i=ID (DOT i+=ID) -> ^(REFERENCE $i+)
> ;
> 
> Or perhaps, if you have context, something like
> 
> id:
>    v=ID (DOT r+=ID)
> 
> 	-> {lookup($v) == OBJECT}? ^(OBJECT $v $r*)
> 	-> and so on
> 
> Jim


From Austin_Hastings at Yahoo.com  Fri Nov  9 20:12:29 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Fri, 09 Nov 2007 23:12:29 -0500
Subject: [antlr-interest] BUG? (JAVA) Antlr complains, and possibly fails,
 when dealing with large acceptance sets
In-Reply-To: <D0D4AD5C-D790-4874-A065-FBD28DE9B186@cs.usfca.edu>
References: <4733CDC0.2010901@Yahoo.com> <4733F84C.3000205@Yahoo.com>
	<D0D4AD5C-D790-4874-A065-FBD28DE9B186@cs.usfca.edu>
Message-ID: <47352FAD.2050702@Yahoo.com>

Terence,

The grammar is fairly small - an emended version of the gunit grammar. 
Adding => didn't seem to have any impact. I'm still getting this:

   [antlr3] error(10):  internal error: Can't get property 
javaCompressedTransition using method get/isJavaCompressedTransition 
from org.antlr.analysis.DFA instance : java.lang.OutOfMemoryError: Java 
heap space
   [antlr3] java.util.ArrayList.<init>(ArrayList.java:112)
   [antlr3] org.antlr.analysis.DFA.getRunLengthEncoding(DFA.java:423)
   [antlr3] org.antlr.analysis.DFA.getJavaCompressedTransition(DFA.java:399)
   [antlr3] sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   [antlr3] 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
   [antlr3] 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
   [antlr3] java.lang.reflect.Method.invoke(Method.java:597)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.invokeMethod(ASTExpr.java:563)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:513)
   [antlr3] 
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:420)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:346)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:131)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.templateApplication(ActionEvaluator.java:211)
   [antlr3] 
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:121)

It's back to enumerated characters for me. :(

=Austin


Terence Parr wrote:
>
> On Nov 8, 2007, at 10:03 PM, Austin Hastings wrote:
>
>> Antlr-godz,
>>
>> In reference to my email earlier tonight (see below), I replaced this 
>> rule:
>>
>>
>> WS    : ({ Character.isWhitespace(input.LA(1)) }? .)+    {$channel = 
>> HIDDEN;} ;
>>
>>
>> with this one:
>>
>>
>> WS: (' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;
>>
>>
>> This change made the complaint stop. I am guessing that somewhere in 
>> the bowels of antlr it was trying to expand the '.' dfa, but that 
>> doesn't make much sense because there's plenty of other times when 
>> '.' gets used. So I really don't know what it was doing - but 
>> enumerating the "easy" whitespace characters made it stop. I don't 
>> know if this is a bug or not - it may be the case that running with 
>> -mx allTheRamInTheWorld might have let it succeed.
>
> Hi Austin :)  Heh, is your grammar pretty big?  Seems that I've done 
> something similar for the java.g once, but ended up enumerating chars 
> for speed.  Hmm...yeah, matching any sequence of char can really piss 
> antlr off at the moment.  Actually, you'll need {...}?=> not just 
> {...}?.  Can u try that?
>
> Ter
>
>
>


From relationalalgebra at gmail.com  Sat Nov 10 01:36:38 2007
From: relationalalgebra at gmail.com (G R)
Date: Sat, 10 Nov 2007 10:36:38 +0100
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <D616D2E2-047F-445B-AC34-25256B06BD34@cs.usfca.edu>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>
	<2ea6ad20711090307x245ecaado36c44dfc08c58f6c@mail.gmail.com>
	<D616D2E2-047F-445B-AC34-25256B06BD34@cs.usfca.edu>
Message-ID: <2ea6ad20711100136v7c73112bq3d53a7d6fc894ec6@mail.gmail.com>

Thanks for your help. Unfortunatly, the problem is still here (same
"errors") also with the latest build.
gasp

Is this a ST implementation error ?

2007/11/10, Terence Parr <parrt at cs.usfca.edu>:
>
>
> On Nov 9, 2007, at 3:07 AM, G R wrote:
>
> > First of all, thanks Jeff.
> > I've try using your template by doing this one (I'm using a group
> > template file) :
> > difference(left, right, keyNames) ::= <<
> > SELECT *
> > FROM <left><if(keyNames)>
> > WHERE <keyNames: {keyName | <keyName> NOT IN ( SELECT <keyName>
> > FROM <right> )
> > }; separator="\nAND"><endif>
> > >>
>
> Wow!  You got it on your own.
>
> > My Tree grammar that is calling this template is here :
> > ->difference(left={$left.st}, right={$right.st}, keyNames=
> > {RATranslator.getPrimaryKeys($left.text)});
> >
> > Where RATranslator.getPrimaryKeys(String tableName) returns a String
> > [].
> > I've check the array returned by this methode, ans it's ok.
> > But when I try to use it as a list, I just get the physical adress
> > of my array. Instead of writing the content, I get something like
> > this : [Ljava.lang.String;@1931579.
>
> Oh!  Yeah, I think there was an issue where property return values
> weren't converted to lists. hang on...oh, looks like code is ok.  Can
> you try latest build?
>
> http://www.stringtemplate.org/download/build/
> stringtemplate-11-09-2007.17.tar.gz
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071110/0637bb6b/attachment.html 

From relationalalgebra at gmail.com  Sat Nov 10 03:43:09 2007
From: relationalalgebra at gmail.com (G R)
Date: Sat, 10 Nov 2007 12:43:09 +0100
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <D616D2E2-047F-445B-AC34-25256B06BD34@cs.usfca.edu>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>
	<2ea6ad20711090307x245ecaado36c44dfc08c58f6c@mail.gmail.com>
	<D616D2E2-047F-445B-AC34-25256B06BD34@cs.usfca.edu>
Message-ID: <2ea6ad20711100343o49be5bcfn83e05f347af5d881@mail.gmail.com>

Ok, I apologies, it seems that the latest version is Ok.
I first use it just in the main program. I've try regenerate the code form
the tree grammar and this time, it's ok.
Thanks for your help, and again, thanks for ANTLR. This is a very usefull
and powerfull framework. Keep going guys !

G.R

2007/11/10, Terence Parr <parrt at cs.usfca.edu>:
>
>
> On Nov 9, 2007, at 3:07 AM, G R wrote:
>
> > First of all, thanks Jeff.
> > I've try using your template by doing this one (I'm using a group
> > template file) :
> > difference(left, right, keyNames) ::= <<
> > SELECT *
> > FROM <left><if(keyNames)>
> > WHERE <keyNames: {keyName | <keyName> NOT IN ( SELECT <keyName>
> > FROM <right> )
> > }; separator="\nAND"><endif>
> > >>
>
> Wow!  You got it on your own.
>
> > My Tree grammar that is calling this template is here :
> > ->difference(left={$left.st}, right={$right.st}, keyNames=
> > {RATranslator.getPrimaryKeys($left.text)});
> >
> > Where RATranslator.getPrimaryKeys(String tableName) returns a String
> > [].
> > I've check the array returned by this methode, ans it's ok.
> > But when I try to use it as a list, I just get the physical adress
> > of my array. Instead of writing the content, I get something like
> > this : [Ljava.lang.String;@1931579.
>
> Oh!  Yeah, I think there was an issue where property return values
> weren't converted to lists. hang on...oh, looks like code is ok.  Can
> you try latest build?
>
> http://www.stringtemplate.org/download/build/
> stringtemplate-11-09-2007.17.tar.gz
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071110/2f213b9e/attachment.html 

From bshkara at gmail.com  Sat Nov 10 04:57:52 2007
From: bshkara at gmail.com (Basil Shkara)
Date: Sat, 10 Nov 2007 23:57:52 +1100
Subject: [antlr-interest] Objective-C tree grammars with 3.0.1
Message-ID: <044AC011-7982-4DCE-BBD3-1B32D7223F2E@gmail.com>

Hi,

I have built an AST and am currently trying to generate my tree  
grammar but when I run the antlr tool, I get the below errors.
I haven't defined an ASTLabelType.  From my understanding it would be  
ANTLRCommonTree however entering that causes xcode to fail on build  
because the generated code does not correctly insert pointers.
In any case, I do not think that is the issue.
Does v3.0.1 contain objective-c support for generating tree grammars?
Any help appreciated!

Thanks!

warning(152): Eval.g:0:0: tree grammar Eval has no ASTLabelType option
error(10):  internal error: Eval.g : java.util.NoSuchElementException:  
no such attribute: ANTLRASTLabelType in template context [outputFile  
treeParser genericParser(...) rule ruleLabelDefs anonymous  
<treeParser's arg labelType default value subtemplate>]
org 
.antlr 
.stringtemplate 
.StringTemplate 
.checkNullAttributeAgainstFormalArguments(StringTemplate.java:1290)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:814)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
org 
.antlr.stringtemplate.StringTemplate.getAttribute(StringTemplate.java: 
696)
org 
.antlr 
.stringtemplate 
.language.ActionEvaluator.attribute(ActionEvaluator.java:355)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:131)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:79)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
659)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
659)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
659)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
659)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
659)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
659)
org 
.antlr 
.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:81)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1132)
org.antlr.codegen.Target.genRecognizerFile(Target.java:94)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:439)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)


From mateus.baur at gmail.com  Sat Nov 10 10:43:07 2007
From: mateus.baur at gmail.com (Mateus Baur da Silva)
Date: Sat, 10 Nov 2007 16:43:07 -0200
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
Message-ID: <9996fef80711101043t41b719bdt24c5ab885e7ed1b3@mail.gmail.com>

Hi Folks,

I'm Mateus Baur from Brazil. I just started learning language and language
tools. I decided to use ANTLRv3 and ANTLRWorks to study this topic.

I'm doing a translator from a subset of Pascal to Java in order to learn
some basic stuff. As my source language is Pascal, I would need a
case-insensitive lexer. I have the ANTLR book (The Definitive ANTLR
Reference: Building Domain-Specific Languages) but I was not able to find
anything about it.

I took a look on the antlr mailing list but I just found a 2006 message sent
by Ter saying that he was planning to make some changes in order to make it
possible. So, what is the status on that?

Is there some way of doing a case-insensitive lexer today using ANTLR? Or
would I need to change the lexer code myself to achieve that?

Thanks and Regards,
Mateus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071110/0d385262/attachment.html 

From robgreene at gmail.com  Sat Nov 10 11:59:25 2007
From: robgreene at gmail.com (Rob Greene)
Date: Sat, 10 Nov 2007 13:59:25 -0600
Subject: [antlr-interest] Embedding expressions in plain text -- how to?
Message-ID: <738584f80711101159l3c22a844g3e15a6d02b05ad96@mail.gmail.com>

How should I go about embedding an expression language in plain text.  The
expression is wrapped in '${' and '}' but may occur zero to many times
within plain text.  When in plain text, I want to keep the whitespace, but
within the expression, it should be ignored.

I've currently placed a boolean into a ThreadLocal and check that before
calling skip() in my whitespace rule.  But, that causes issues with the
actual expressions.

For instance, "${true}" returns Boolean.TRUE while "${ true }" returns a
null.  If I take out the test in WS, I can have those spaces within an
expression, but the plain text loses all white space.

I'm certain this is a simple fix, but I haven't a clue what to do!

I'm using ANTLR 3.0.1.

Thanks!
-Rob

/**
 * Language is the simple expression language used throughout the XML
Template Engine.
 * General language constructs:
 * - functionName(argument, argument, ...)
 * - object.method.method
 * - 'string constant'
 * - "string constant"
 * - 1234.56
 * - true
 * - false
 * - null
 * - [ array, values, ... ]
 */
grammar Language;

/**
 * Use the embeddedExpression entry for expressions that are embedded within
other
 * forms of text.
 * <p>
 * Note that unknown magic occurs because the plainText is somehow
 * glommed together into one string instead of character
 * by character.
 */
embeddedExpression returns [List<Object> list]
@init { list = new ArrayList<Object>(); }
    :    (    '${' expression '}'    { list.add($expression.value); }
        |    plainText            { list.add($plainText.value); }
        )*
    ;

/**
 * Handle plain text that wraps around the expression.
 */
plainText returns [String value]
@init { ThreadState.current().ignoreWhitespace = false; }
@after { ThreadState.current().ignoreWhitespace = true; }
    :    '\\' '$'                { $value = "$"; }
    |    '\\' b=~('$')            { $value = $b.text; }
    |    a=~('$')                { $value = $a.text; }
    ;

/**
 * This is the bare expression evaluation.  Evaluates one expression and
returns
 * an Object.
 */
expression returns [Object value]
    :    function            { $value = $function.value; }
    |    constant            { $value = $constant.value; }
    |    reference            { $value = $reference.value; }
    ;

/**
 * Evaluate a function invocation, along with parameters and return the
Object result.
 */
function returns [Object value]
    :    ID '(' arguments ')'        { $value =
Helper.invoke($ID.text,$arguments.value);
}
    ;
catch [LanguageException le] {
    emitErrorMessage(le.getMessage());
    throw new RuntimeException(le);
}

/**
 * Evaluate a constant value and return that value.
 */
constant returns [Object value]
    :    STRING                { $value =
$STRING.text.substring(1,$STRING.text.length()-1); }
    |    NUMBER                { $value = Double.valueOf($NUMBER.text); }
    |    'true'                { $value = Boolean.TRUE; }
    |    'false'                { $value = Boolean.FALSE; }
    |    'null'                { $value = null; }
    |    '[' arguments ']'        { $value = $arguments.value; }
    ;

/**
 * Evaluate an object reference and any nested evaluations and return that
value.
 */
reference returns [Object value]
    :    a=ID                { $value = Helper.find($a.text); }
        ('.' b=ID            { $value = Helper.reflect($value,$b.text); }
         )*
    ;
catch [LanguageException le] {
    emitErrorMessage(le.getMessage());
    throw new RuntimeException(le);
}

/**
 * A comma-separated argument list.  Use for the function invocation and
array list.
 */
arguments returns [List<Object> value]
@init { value = new ArrayList<Object>(); }
    :    (a=expression            { $value.add($a.value); }
        (',' b=expression        { $value.add($b.value); }
         )* )?
    ;

ID    :    Char (Char|Digit)*
    ;
STRING    :    '"' ~('"')* '"'
    |    '\'' ~('\'')* '\''
    ;
NUMBER    :    ('-'|'+')? Digit+ ('.' Digit+)?
    ;
WS
    :    (' '|'\t'|'\r'|'\n')+    { if
(!ThreadState.current().ignoreWhitespace) skip(); }
    ;

fragment Char
    :    'a'..'z' | 'A'..'Z' | '_'
    ;
fragment Digit
    :    '0'..'9'
    ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071110/3fecfd0b/attachment-0001.html 

From antlr at mirality.co.nz  Sat Nov 10 13:06:03 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 11 Nov 2007 10:06:03 +1300
Subject: [antlr-interest] Embedding expressions in plain text -- how to?
In-Reply-To: <738584f80711101159l3c22a844g3e15a6d02b05ad96@mail.gmail.co
 m>
References: <738584f80711101159l3c22a844g3e15a6d02b05ad96@mail.gmail.com>
Message-ID: <20071110210614.089A211E9C2@www.antlr.org>

At 08:59 11/11/2007, Rob Greene wrote:
>How should I go about embedding an expression language in plain 
>text.  The expression is wrapped in '${' and '}' but may occur 
>zero to many times within plain text.  When in plain text, I want 
>to keep the whitespace, but within the expression, it should be 
>ignored.
>
>I've currently placed a boolean into a ThreadLocal and check that 
>before calling skip() in my whitespace rule.  But, that causes 
>issues with the actual expressions.
>
>For instance, "${true}" returns Boolean.TRUE while "${ true }" 
>returns a null.  If I take out the test in WS, I can have those 
>spaces within an expression, but the plain text loses all white 
>space.

The way I'd do it would be to create multiple lexers/parsers.  (It 
is possible to do it in a single one, but I think it's cleaner to 
separate it out.)

At the first level, you just need a lexer-only grammar to separate 
plain text and expressions.  You need to make the whole ${...} 
construct a single token (see the STRING rules in the wiki for an 
example), and everything else a different token.

Once you've done that, in your app code loop through all the 
returned expressions and then run another lexer/parser over them 
to work out what they actually mean :)

(If you do want to combine it all into one operation, then look up 
the "island grammar" examples.  Same basic idea.) 


From travis.jensen at gmail.com  Sat Nov 10 16:45:11 2007
From: travis.jensen at gmail.com (Travis Jensen)
Date: Sat, 10 Nov 2007 17:45:11 -0700
Subject: [antlr-interest] NullPointerException getting text from a rule
In-Reply-To: <fh2vpj$9q9$1@ger.gmane.org>
References: <3605cb0711090746u7b302c03p178923d9daa65cf6@mail.gmail.com>
	<fh2vpj$9q9$1@ger.gmane.org>
Message-ID: <1194741911.10204.16.camel@nefarian.gateway.2wire.net>

Thanks!  That did it.

tj

On Fri, 2007-11-09 at 16:58 -0800, Curtis Clauson wrote:
> In a tree parser rule action, to use the ".text" attribute with a 
> matched element reference, you must provide the original TokenStream 
> from which the tree was made. If you do not, then input.getTokenStream() 
> will return null and you get that NullPointerException.
> 
> In your main() method, add this line
>      nodes.setTokenStream(tokens);
> after you create the NodeStream.
> 
> This grammar will then work correctly with the "from fred" source text. 
> (tested AntLR v3.0.1)
> 
> -- Curtis
> 
> 
> Travis Jensen wrote:
> > I have the following action associated with my language:
> > 
> > selectStatement   
> >     :    'from' type (localeClause)? (whereClause)?    { 
> > contentType=$type.text; }
> >     ;
> > 
> > If I use "from fred" as input, the rule is matched appropriately, but I 
> > get an NPE when the action is run.  Breaking down the location of the 
> > NPE, I find that my token stream (referenced at "contentType= 
> > input.getTokenStream().toStream(...)") is null.
> > 
> > The very basic driver that I'm using looks like this, which is taken 
> > pretty much verbatim from the ANTLR reference calculator example:
> > 
> > public class Test {
> >     public static void main(String[] args) throws Exception {
> >         // Create an input character stream from standard in
> >         ANTLRInputStream input = new ANTLRInputStream( System.in 
> > <http://System.in>);
> >         // Create an ExprLexer that feeds from that stream
> >         cqlLexer lexer = new cqlLexer(input);
> >         // Create a stream of tokens fed by the lexer
> >         CommonTokenStream tokens = new CommonTokenStream(lexer);
> >         // Create a parser that feeds off the token stream
> >         cqlParser parser = new cqlParser(tokens);
> >         // Begin parsing at rule prog, get return value structure
> >         cqlParser.query_return r= parser.query();
> > 
> >         // Walk the resulting tree
> > 
> >         // Get the tree from the parser
> >         CommonTree t = (CommonTree)r.getTree();
> >         // Create a tree node stream from the resulting tree
> >         CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
> >         // Create a tree walker
> >         cqlVcm walker = new cqlVcm(nodes);
> >         // launch at the start rule
> >         walker.query();
> >     }
> > }
> > 
> > Just for completeness sake, my entire tree parsing grammar is:
> > 
> > tree grammar cqlVcm;
> > 
> > options {
> >     tokenVocab=cql;
> >     ASTLabelType=CommonTree;
> > }
> > 
> > @header {
> > import java.util.HashMap;
> > import java.util.Map;
> > }
> > 
> > @members {
> > Map attributes = new HashMap();
> > String contentType = null;
> > }
> > 
> > query
> >     :    (expr)+
> >         {
> >         StringBuilder qry=new StringBuilder();
> >         qry.append("select * from ");
> >         qry.append(contentType);
> >         if (attributes.size() > 0)
> >             qry.append(" where");
> >         for (Object key:attributes.keySet())
> >             qry.append(key).append('=').append(attributes.get(key));
> >         System.out.println(qry);
> >         }
> >     ;
> >    
> > expr
> >     :    selectStatement
> >     ;
> >    
> > selectStatement   
> >     :    'from' type (localeClause)? (whereClause)?    { 
> > contentType=$type.text; }
> >     ;
> > 
> > localeClause
> >     :    ^('locale' QUOTED_STRING)            { attributes.put("locale", 
> > $QUOTED_STRING.text); }
> >     ;
> >    
> > whereClause
> >     :    ^('where' whereCompare)
> >     ;
> >    
> > whereCompare
> >     :    ^('=' column QUOTED_STRING)            
> > {attributes.put($column.text, $QUOTED_STRING.text); }
> >     ;
> >    
> > type
> >     :    ID
> >     ;
> > 
> > column
> >     :    ID
> >     ;
> > 
> > Help appreciated. :)
> > 
> > tj
> > -- 
> > Travis Jensen
> > travis.jensen at gmail.com 
> > <mailto:travis.jensen at gmail.com>
> > http://cmssphere.blogspot.com/
> > Software Maven * Philosopher-in-Training * Avenged Nerd
> 


From Austin_Hastings at Yahoo.com  Sat Nov 10 17:07:32 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 10 Nov 2007 20:07:32 -0500
Subject: [antlr-interest] Embedding expressions in plain text -- how to?
In-Reply-To: <738584f80711101159l3c22a844g3e15a6d02b05ad96@mail.gmail.com>
References: <738584f80711101159l3c22a844g3e15a6d02b05ad96@mail.gmail.com>
Message-ID: <473655D4.4080102@Yahoo.com>

Create an "outer" lexer that tokenizes your input as STRING PROGRAM 
STRING ...

fragment OpenBrace : '${' ;
fragment CloseBrace: '}';

STRING:  ( ~('$') | ('$' ~('{')))+ ;
PROGRAM: OpenBrace .* CloseBrace ;


Then parse the "PROGRAM" text elements as you like.

Note that if you want nested curly braces, you'll have to implement that 
via a nested fragment that recurses on itself.

=Austin


Rob Greene wrote:
> How should I go about embedding an expression language in plain text.  
> The expression is wrapped in '${' and '}' but may occur zero to many 
> times within plain text.  When in plain text, I want to keep the 
> whitespace, but within the expression, it should be ignored.
>
> I've currently placed a boolean into a ThreadLocal and check that 
> before calling skip() in my whitespace rule.  But, that causes issues 
> with the actual expressions.
>
> For instance, "${true}" returns Boolean.TRUE while "${ true }" returns 
> a null.  If I take out the test in WS, I can have those spaces within 
> an expression, but the plain text loses all white space.
>
> I'm certain this is a simple fix, but I haven't a clue what to do!
>
> I'm using ANTLR 3.0.1.
>
> Thanks!
> -Rob
>
> /**
>  * Language is the simple expression language used throughout the XML 
> Template Engine.
>  * General language constructs:
>  * - functionName(argument, argument, ...)
>  * - object.method.method
>  * - 'string constant'
>  * - "string constant"
>  * - 1234.56
>  * - true
>  * - false
>  * - null
>  * - [ array, values, ... ]
>  */
> grammar Language;
>
> /**
>  * Use the embeddedExpression entry for expressions that are embedded 
> within other
>  * forms of text.
>  * <p>
>  * Note that unknown magic occurs because the plainText is somehow
>  * glommed together into one string instead of character
>  * by character.
>  */
> embeddedExpression returns [List<Object> list]
> @init { list = new ArrayList<Object>(); }
>     :    (    '${' expression '}'    { list.add($expression.value); }
>         |    plainText            { list.add($plainText.value); }
>         )*
>     ;
>
> /**
>  * Handle plain text that wraps around the expression.
>  */
> plainText returns [String value]
> @init { ThreadState.current().ignoreWhitespace = false; }
> @after { ThreadState.current().ignoreWhitespace = true; }
>     :    '\\' '$'                { $value = "$"; }
>     |    '\\' b=~('$')            { $value = $b.text; }
>     |    a=~('$')                { $value = $a.text; }
>     ;
>
> /**
>  * This is the bare expression evaluation.  Evaluates one expression 
> and returns
>  * an Object.
>  */
> expression returns [Object value]
>     :    function            { $value = $function.value; }
>     |    constant            { $value = $constant.value; }
>     |    reference            { $value = $reference.value; }
>     ;
>
> /**
>  * Evaluate a function invocation, along with parameters and return 
> the Object result.
>  */
> function returns [Object value]
>     :    ID '(' arguments ')'        { $value = 
> Helper.invoke($ID.text,$arguments.value); }
>     ;
> catch [LanguageException le] {
>     emitErrorMessage(le.getMessage());
>     throw new RuntimeException(le);
> }
>
> /**
>  * Evaluate a constant value and return that value.
>  */
> constant returns [Object value]
>     :    STRING                { $value = 
> $STRING.text.substring(1,$STRING.text.length()-1); }
>     |    NUMBER                { $value = Double.valueOf($NUMBER.text); }
>     |    'true'                { $value = Boolean.TRUE; }
>     |    'false'                { $value = Boolean.FALSE; }
>     |    'null'                { $value = null; }
>     |    '[' arguments ']'        { $value = $arguments.value; }
>     ;
>
> /**
>  * Evaluate an object reference and any nested evaluations and return 
> that value.
>  */
> reference returns [Object value]
>     :    a=ID                { $value = Helper.find($a.text); }
>         ('.' b=ID            { $value = Helper.reflect($value,$b.text); }
>          )*
>     ;
> catch [LanguageException le] {
>     emitErrorMessage(le.getMessage());
>     throw new RuntimeException(le);
> }
>
> /**
>  * A comma-separated argument list.  Use for the function invocation 
> and array list.
>  */
> arguments returns [List<Object> value]
> @init { value = new ArrayList<Object>(); }
>     :    (a=expression            { $value.add($a.value); }
>         (',' b=expression        { $value.add($b.value); }
>          )* )?
>     ;
>
> ID    :    Char (Char|Digit)*
>     ;
> STRING    :    '"' ~('"')* '"'
>     |    '\'' ~('\'')* '\''
>     ;
> NUMBER    :    ('-'|'+')? Digit+ ('.' Digit+)?
>     ;
> WS
>     :    (' '|'\t'|'\r'|'\n')+    { if 
> (!ThreadState.current().ignoreWhitespace) skip(); }
>     ;
>
> fragment Char
>     :    'a'..'z' | 'A'..'Z' | '_'
>     ;
> fragment Digit
>     :    '0'..'9'
>     ;
>


From parrt at cs.usfca.edu  Sat Nov 10 17:52:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 10 Nov 2007 17:52:04 -0800
Subject: [antlr-interest] StringTemplate questions
In-Reply-To: <2ea6ad20711100343o49be5bcfn83e05f347af5d881@mail.gmail.com>
References: <2ea6ad20711080532o2999a31dic310a99b76e133eb@mail.gmail.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4803D20E30@BD01MSXMB021.US.Cingular.Net>
	<2ea6ad20711090307x245ecaado36c44dfc08c58f6c@mail.gmail.com>
	<D616D2E2-047F-445B-AC34-25256B06BD34@cs.usfca.edu>
	<2ea6ad20711100343o49be5bcfn83e05f347af5d881@mail.gmail.com>
Message-ID: <D6E59818-133C-494F-BB12-372978DB41A5@cs.usfca.edu>


On Nov 10, 2007, at 3:43 AM, G R wrote:

> Ok, I apologies, it seems that the latest version is Ok.
> I first use it just in the main program. I've try regenerate the  
> code form the tree grammar and this time, it's ok.
> Thanks for your help, and again, thanks for ANTLR. This is a very  
> usefull and powerfull framework. Keep going guys !
>

Thanks!

Whew...you had me worried for a second there. Glad it works.

Ter


From parrt at cs.usfca.edu  Sat Nov 10 18:35:29 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 10 Nov 2007 18:35:29 -0800
Subject: [antlr-interest] added ST cheat sheet
Message-ID: <9C08DF69-871B-4BA4-8CB4-BF42FF615CA4@cs.usfca.edu>

http://www.antlr.org/wiki/display/ST/StringTemplate+cheat+sheet

working on doc in prep for 3.1.

Ter

From Austin_Hastings at Yahoo.com  Sat Nov 10 20:13:59 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 10 Nov 2007 23:13:59 -0500
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr rule
	parameter lists
Message-ID: <47368187.20006@Yahoo.com>

Howdy,

In the Java target, the dreaded string-template failure occurs if a rule 
has a parameter with generic type:

testCase[String m1, String m2, List<TestCase> tests]
   
produces a call like

testCase(m1, m2,  , tests);

and a build failure, etc.

=Austin


From matt.kowalczyk at gmail.com  Sat Nov 10 20:42:18 2007
From: matt.kowalczyk at gmail.com (Matt Kowalczyk)
Date: Sat, 10 Nov 2007 20:42:18 -0800
Subject: [antlr-interest] c# runtime no strong name
Message-ID: <5eafd91e0711102042x5fc33adu514a7e4fb9d73254@mail.gmail.com>

I cannot use the Antlr runtime in my project because it does not have
a strong name.  Can I download the source for this project and rebuild
the assembly myself?  Can the owner of this package add a strong name?

"Assembly generation failed -- Referenced assembly 'Antlr3.Runtime'
does not have a strong name"

Thanks,
Matt

From bshkara at gmail.com  Sat Nov 10 23:13:08 2007
From: bshkara at gmail.com (Basil Shkara)
Date: Sun, 11 Nov 2007 18:13:08 +1100
Subject: [antlr-interest] Objective-C tree grammars with 3.0.1
In-Reply-To: <044AC011-7982-4DCE-BBD3-1B32D7223F2E@gmail.com>
References: <044AC011-7982-4DCE-BBD3-1B32D7223F2E@gmail.com>
Message-ID: <6F43E025-4670-4E41-854E-9B658FDC7200@gmail.com>

I ran an example tree grammar and set the language option to ObjC and  
it generated fine so I guess that answers my previous question about  
whether ANTLR supports tree grammars for objective-c.

However I still do not understand why my particular grammar is not  
able to be generated.  I am going through Terence's book (Definitive  
ANTLR reference) and converting the java examples to objective-c  
progressively.  So far I have been able to write and generate  
everything except for the tree grammar.

The grammar I have been trying to generate is below.

Any ideas?

Thanks!

tree grammar Eval;

options
{
	tokenVocab=Expr;
     language=ObjC;
     ASTLabelType = ANTLRCommonTree;
}

@header {
	NSMutableDictionary *aDictionary;
}

@init {
	aDictionary = [[NSMutableDictionary alloc] init];
}

expr returns [NSString *value]
		:	^('+' a=expr b=expr)	{$value = a+b;}
		|	^('-' a=expr b=expr)	{$value = a-b;}
		|	^('*' a=expr b=expr)	{$value = a*b;}
		|	ID
			{
				// look up value of variable
				NSString *v = [aDictionary objectForKey:$ID.text];
				// if found, set return value, else error
				if (v != nil) {
					$value = v;
				} else {
					NSLog(@"undefined variable: \%@", $ID.text);
				}
			}
		|	INT		{$value = $INT.text;}
		;

prog	:	stat+;

stat	:	expr
			{NSLog(@"\%@", $expr.value);}
		|	^('=' ID expr)
			{[aDictionary setObject:$expr.value forKey:$ID.text];}
		;

On 10/11/2007, at 11:57 PM, Basil Shkara wrote:

> Hi,
>
> I have built an AST and am currently trying to generate my tree  
> grammar but when I run the antlr tool, I get the below errors.
> I haven't defined an ASTLabelType.  From my understanding it would  
> be ANTLRCommonTree however entering that causes xcode to fail on  
> build because the generated code does not correctly insert pointers.
> In any case, I do not think that is the issue.
> Does v3.0.1 contain objective-c support for generating tree grammars?
> Any help appreciated!
>
> Thanks!
>
> warning(152): Eval.g:0:0: tree grammar Eval has no ASTLabelType option
> error(10):  internal error: Eval.g :  
> java.util.NoSuchElementException: no such attribute:  
> ANTLRASTLabelType in template context [outputFile treeParser  
> genericParser(...) rule ruleLabelDefs anonymous <treeParser's arg  
> labelType default value subtemplate>]
> org 
> .antlr 
> .stringtemplate 
> .StringTemplate 
> .checkNullAttributeAgainstFormalArguments(StringTemplate.java:1290)
> org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:814)
> org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
> org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
> org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
> org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
> org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
> org 
> .antlr 
> .stringtemplate.StringTemplate.getAttribute(StringTemplate.java:696)
> org 
> .antlr 
> .stringtemplate 
> .language.ActionEvaluator.attribute(ActionEvaluator.java:355)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java: 
> 131)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 79)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
> org 
> .antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
> 659)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 81)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
> org 
> .antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
> 659)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 81)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
> org 
> .antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
> 659)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 81)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:742)
> org 
> .antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
> 659)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 81)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
> org 
> .antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
> 659)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 81)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:722)
> org 
> .antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java: 
> 659)
> org 
> .antlr 
> .stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java: 
> 81)
> org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:152)
> org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:714)
> org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1132)
> org.antlr.codegen.Target.genRecognizerFile(Target.java:94)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:439)
> org.antlr.Tool.processGrammar(Tool.java:347)
> org.antlr.Tool.process(Tool.java:268)
> org.antlr.Tool.main(Tool.java:70)
>


From jaluber at gmx.de  Sun Nov 11 03:26:37 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 11 Nov 2007 12:26:37 +0100
Subject: [antlr-interest] c# runtime no strong name
In-Reply-To: <5eafd91e0711102042x5fc33adu514a7e4fb9d73254@mail.gmail.com>
References: <5eafd91e0711102042x5fc33adu514a7e4fb9d73254@mail.gmail.com>
Message-ID: <4736E6ED.7080409@gmx.de>

Matt Kowalczyk wrote:
> I cannot use the Antlr runtime in my project because it does not have
> a strong name.

Really? I know for certain that this capability already exists, so I'm
wondering where you got a version without a strong name. Did you use the
disassembled version?

> Can I download the source for this project and rebuild
> the assembly myself?  Can the owner of this package add a strong name?

The source code should be in the latest daily build (a prerelease for
3.1, which is incompatible to 3.0.1 binarywise - so regenerate the
grammar first), which should have a strongnamed assembly, too. Or you
can try to get a tarball from fisheye. Or you can ask Ter for a
read-only account for Perforce.

Johannes

From jaluber at gmx.de  Sun Nov 11 03:35:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 11 Nov 2007 12:35:57 +0100
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
 rule	parameter lists
In-Reply-To: <47368187.20006@Yahoo.com>
References: <47368187.20006@Yahoo.com>
Message-ID: <4736E91D.5020205@gmx.de>

Austin Hastings wrote:
> Howdy,
> 
> In the Java target, the dreaded string-template failure occurs if a rule
> has a parameter with generic type:
> 
> testCase[String m1, String m2, List<TestCase> tests]
>   produces a call like
> 
> testCase(m1, m2,  , tests);
> 
> and a build failure, etc.
> 
> =Austin
> 
That's already known - at least for arrays. It could be also that the
generated Java is only for 1.4. If it is the first cause then I'm not
sure when it is fixed, though. It was planned for 3.1, but as Ter won't
release a 3.0-based ANTLR as soon as he thought, it may be a later release.

Johannes

From jaluber at gmx.de  Sun Nov 11 03:39:22 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 11 Nov 2007 12:39:22 +0100
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
 rule	parameter lists
In-Reply-To: <4736E91D.5020205@gmx.de>
References: <47368187.20006@Yahoo.com> <4736E91D.5020205@gmx.de>
Message-ID: <4736E9EA.8000900@gmx.de>

Johannes Luber wrote:
> That's already known - at least for arrays. It could be also that the
> generated Java is only for 1.4. If it is the first cause then I'm not
> sure when it is fixed, though. It was planned for 3.1, but as Ter won't
> release a 3.0-based ANTLR as soon as he thought, it may be a later release.

I forgot the workaround: Use object as parameter type and cast it later.

Johannes



From mb.fgel at ownit.nu  Sun Nov 11 05:59:57 2007
From: mb.fgel at ownit.nu (Mats Behre)
Date: Sun, 11 Nov 2007 14:59:57 +0100
Subject: [antlr-interest] Ant task 'depend' problem
Message-ID: <47370ADD.9080504@ownit.nu>

Hi,

When I try 'depend="true"' with the Ant task, I get

BUILD FAILED
build.xml:19: ANTLR returned: 1

Am I doing something wrong, or does the Ant task not work as intended?

(With 'depend="false"' everything's OK, so this is mostly out of curiosity.)

Rgds,
Mats

From tt at tempel.org  Sun Nov 11 06:26:48 2007
From: tt at tempel.org (Thomas Tempelmann)
Date: Sun, 11 Nov 2007 14:26:48 +0000
Subject: [antlr-interest] just want to translate input into differently
	formatted output
Message-ID: <C35CC1A8.CC41%tt@tempel.org>

Hi,
I'm new to Antlr. I have a rather simple task and wonder how Antlr can best
help me with it:

I want to scan various C header files containing struct { } declarations in
order to turn those structs into a differently formatted text in xml form.

For example, the following:

struct tag {
  byte  id; // note 1
  byte  len; /* note
                2 */
  int16 info;
};

shall be converted into:

<struct label="tag" >
  <field type="byte" label="id"" >
    note 1
  </field>
  <field type="byte" label="len" >
    note
    2
  </field>
  <field type="int16" label="info" />
</stuct>

(basically, I want to output the type, label and comment of each struct
field)

Furthermore, any other stuff in the C file I do not want passed to the
output.

While I could probably achieve this even with a regex find/replace pattern,
I like to use a proper C language parser (using regex might act wrong with
matchable text in a comment or in a string literal)

On the input side this has all been done already - there are C parsers for
Antlr and I can also modify them to my needs.

The question is the output. I have a vague idea that I'll have to add
actions to some of the grammar elements, but I'm not clear on this yet.

Are there any examples in this directions? Or can you suggest even totally
different tools that do this easily?

Thomas



From kroepke at classdump.org  Sun Nov 11 07:09:04 2007
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 11 Nov 2007 16:09:04 +0100
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
	rule	parameter lists
In-Reply-To: <4736E91D.5020205@gmx.de>
References: <47368187.20006@Yahoo.com> <4736E91D.5020205@gmx.de>
Message-ID: <CA77F0BB-3322-45BD-8050-1408AFC29D01@classdump.org>

hi!

On Nov 11, 2007, at 12:35 PM, Johannes Luber wrote:

> Austin Hastings wrote:
>> testCase[String m1, String m2, List<TestCase> tests]
>>  produces a call like
>>
>> testCase(m1, m2,  , tests);
>>
>> and a build failure, etc.

> That's already known - at least for arrays. It could be also that the
> generated Java is only for 1.4. If it is the first cause then I'm not
> sure when it is fixed, though. It was planned for 3.1, but as Ter  
> won't
> release a 3.0-based ANTLR as soon as he thought, it may be a later  
> release.

This problem is strictly a problem with the ANTLR grammar itself.
It doesn't recognize the generic type and does the wrong thing.
Too much a pain to integrate into the existing v2 grammar, so Ter  
postponed it.

The generated code (without generics) works fine with 1.5, though.
I'd use the workaround Johannes mentioned.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/







From kroepke at classdump.org  Sun Nov 11 08:55:39 2007
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sun, 11 Nov 2007 17:55:39 +0100
Subject: [antlr-interest] Objective-C tree grammars with 3.0.1
In-Reply-To: <6F43E025-4670-4E41-854E-9B658FDC7200@gmail.com>
References: <044AC011-7982-4DCE-BBD3-1B32D7223F2E@gmail.com>
	<6F43E025-4670-4E41-854E-9B658FDC7200@gmail.com>
Message-ID: <060334FB-F6E6-44D1-8907-41278024507B@classdump.org>

Hi Basil!

On Nov 11, 2007, at 8:13 AM, Basil Shkara wrote:

> I ran an example tree grammar and set the language option to ObjC  
> and it generated fine so I guess that answers my previous question  
> about whether ANTLR supports tree grammars for objective-c.
>
> However I still do not understand why my particular grammar is not  
> able to be generated.  I am going through Terence's book (Definitive  
> ANTLR reference) and converting the java examples to objective-c  
> progressively.  So far I have been able to write and generate  
> everything except for the tree grammar.
>
> The grammar I have been trying to generate is below.
>
> Any ideas?


Turns out that I've broken the ASTLabelType option with a typo in the  
code generation templates.
Thanks for catching this!

I've uploaded a fixed version to http://classdump.org/articles/2007/11/11/antlr-3-1-early-access-source

Please note that the copy is straight from the (unreleased) depot  
version and contains stuff that might not work (it also contains  
changes to the Java source that might not be in the next release) so  
proceed with care.

In case you want to fix your existing copy, unpack the antlr3.jar and  
change the file named ObjC.stg. After the replacement you can repack  
the jar, or just adjust your classpath accordingly. Alternatively, you  
can put the modified ObjC.stg into your classpath before the jar.  
(Sounds complicated, but really isn't ;))
You need to replace the string "ANTLRASTLabelType" to "ASTLabelType".  
It's just one occurrence. After that change you grammar goes trough  
fine, though it might not do what you intended because the references  
to a and b won't work:

expr returns [NSString *value]
		:	^('+' a=expr b=expr)	{$value = a+b;}
		|	^('-' a=expr b=expr)	{$value = a-b;}
		|	^('*' a=expr b=expr)	{$value = a*b;}
		|	ID
			{

You need to use $a and $b and make sure that you first convert their  
string values to integers or floats and then do the arithmetic.

HTH,

-k
-- 
Kay R?pke
http://classdump.org/







From antlr at mirality.co.nz  Sun Nov 11 11:17:03 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 12 Nov 2007 08:17:03 +1300
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
 rule parameter lists
In-Reply-To: <47368187.20006@Yahoo.com>
References: <47368187.20006@Yahoo.com>
Message-ID: <20071111191715.0872C11EC3D@www.antlr.org>

At 17:13 11/11/2007, Austin Hastings wrote:
 >In the Java target, the dreaded string-template failure occurs 
if a
 >rule has a parameter with generic type:
 >
 >testCase[String m1, String m2, List<TestCase> tests]
 >
 >produces a call like
 >
 >testCase(m1, m2,  , tests);
 >
 >and a build failure, etc.

I tried replicating this in 3.0.1, but couldn't -- calls, 
declarations, and return values involving generic types all seemed 
to generate the correct code.

Can you post a more specific repro example?  Or are you using an 
earlier version?


From Austin_Hastings at Yahoo.com  Sun Nov 11 12:44:57 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 11 Nov 2007 15:44:57 -0500
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
 rule parameter lists
In-Reply-To: <47368187.20006@Yahoo.com> 
References: <47368187.20006@Yahoo.com> 
Message-ID: <473769C9.7040604@Yahoo.com>

Note that this doesn't purport to work - I just jammed some text in to 
reproduce the behavior.

testSuite[List<GunitTest> tests]
    : rule1=ID ('walks' rule2=ID)? ':'
      {
        String        method1 = $rule1.text;

        if (isLexerMethod(method1) && method1.charAt(0) != 'm')
        {
            method1 = 'm' + method1;
        }

        String        method2 = (rule2 != null) ? $rule2.text : null;
      }
      (tc=testCase[method1, method2, $tests]
        {
            if ($tc.test != null)
            {
                $tests.add($tc.test);
            }
        }
      )+
      ';'
    ;

testCase[String m1, String m2, List<GunitTest> tests] returns [GunitTest 
test]
    : input '->' outputExpr
      {
        $test = newTestCase(m1, m2, $input.test_input, $outputExpr.expect);
      }
    ;


compile:
   [antlr3] ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  
1989-2007
   [antlr3] warning(200): 
/home/austin/gunit/sources/org/antlr/gunit/TestSuite.g:433:16: Decision 
can match input such as "'(' QUOTED_LITERAL ')'" using multiple 
alternatives: 1, 2
   [antlr3] As a result, alternative(s) 2 were disabled for that input
    [javac] Compiling 2 source files to /home/austin/gunit/classes
    [javac] /home/austin/gunit/sources/org/antlr/gunit/TestSuiteLexer.java
    [javac] /home/austin/gunit/sources/org/antlr/gunit/TestSuiteParser.java
    [javac] 
/home/austin/gunit/sources/org/antlr/gunit/TestSuiteParser.java:710: 
illegal start of expression
    [javac]                         tc=testCase(method1,  method2,  , 
tests);
    [javac]                                                         ^
    [javac] 1 error

=Austin


Gavin Lambert wrote:
> At 17:13 11/11/2007, Austin Hastings wrote:
> >In the Java target, the dreaded string-template failure occurs if a
> >rule has a parameter with generic type:
> >
> >testCase[String m1, String m2, List<TestCase> tests]
> >
> >produces a call like
> >
> >testCase(m1, m2,  , tests);
> >
> >and a build failure, etc.
>
> I tried replicating this in 3.0.1, but couldn't -- calls, 
> declarations, and return values involving generic types all seemed to 
> generate the correct code.
>
> Can you post a more specific repro example?  Or are you using an 
> earlier version?
>
>
>


From antlr at mirality.co.nz  Sun Nov 11 23:15:37 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 12 Nov 2007 20:15:37 +1300
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
 rule parameter lists
In-Reply-To: <473769C9.7040604@Yahoo.com>
References: <47368187.20006@Yahoo.com>
 <473769C9.7040604@Yahoo.com>
Message-ID: <20071112071552.71EFD11EC2A@www.antlr.org>

At 09:44 12/11/2007, Austin Hastings wrote:
 >      (tc=testCase[method1, method2, $tests]

Interesting; it appears to be the use of the $ here that annoys 
it.  If you remove either the $ or the preceding , then it 
generates the correct number of commas in the call.

(My earlier test was passing a local variable, so didn't use the 
$.)

Still probably a bug, but a weird one.  At least the workaround is 
straightforward :)

 >    : input '->' outputExpr

It's probably not a good idea to call something "input", as that's 
a member of the parser base class itself.


From Austin_Hastings at Yahoo.com  Sun Nov 11 23:28:29 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Mon, 12 Nov 2007 02:28:29 -0500
Subject: [antlr-interest] BUG (JAVA): Generics not permitted in Antlr
 rule parameter lists
In-Reply-To: <473769C9.7040604@Yahoo.com> 
References: <47368187.20006@Yahoo.com> <473769C9.7040604@Yahoo.com> 
Message-ID: <4738009D.5030709@Yahoo.com>

Gavin Lambert wrote:
> At 09:44 12/11/2007, Austin Hastings wrote:
> >      (tc=testCase[method1, method2, $tests]
>
> Interesting; it appears to be the use of the $ here that annoys it.  
> If you remove either the $ or the preceding , then it generates the 
> correct number of commas in the call.
>
> (My earlier test was passing a local variable, so didn't use the $.)
>
> Still probably a bug, but a weird one.  At least the workaround is 
> straightforward :)

Sadly, you can't cast generics. :( The workaround is functional, not 
lexical - return a value and perform the list insertion outside the 
rule. This goes somewhere down around #931 on the list of reasons why I 
hate Java generics. :-O

>
> >    : input '->' outputExpr
>
> It's probably not a good idea to call something "input", as that's a 
> member of the parser base class itself.
>
Thanks, I'll change it.

=Austin

>
>


From bshkara at gmail.com  Mon Nov 12 04:13:37 2007
From: bshkara at gmail.com (Basil Shkara)
Date: Mon, 12 Nov 2007 23:13:37 +1100
Subject: [antlr-interest] Objective-C tree grammars with 3.0.1
In-Reply-To: <060334FB-F6E6-44D1-8907-41278024507B@classdump.org>
References: <044AC011-7982-4DCE-BBD3-1B32D7223F2E@gmail.com>
	<6F43E025-4670-4E41-854E-9B658FDC7200@gmail.com>
	<060334FB-F6E6-44D1-8907-41278024507B@classdump.org>
Message-ID: <0472D896-4A4A-4941-9562-CA5AC03DDB83@gmail.com>

Thanks Kay!

The newly packaged source worked great.

I do have another issue though.  :)

I've attempted to create a test rig to walk my AST based on Terence's  
Java one from his book.

However upon launching from Xcode, it outputs all my root nodes  
correctly but when it attempts to walk the tree it borks with the  
following:

2007-11-12 22:58:37.619 Expr_Ast[10066:10b] *** Terminating app due to  
uncaught exception 'NSInvalidArgumentException', reason: '*** - 
[NSCFArray replaceObjectAtIndex:withObject:]: attempt to insert nil'

For some reason it doesn't like [walker prog].  I should be able to  
invoke the tree walker with a starting rule.  It doesn't work however.

I'd love some advice regarding this if possible.

I've appended my main.m.

Thanks in advance!
Basil.

#import <Cocoa/Cocoa.h>
#import <ANTLR/ANTLR.h>
#import "ExprLexer.h"
#import "ExprParser.h"
#import "Eval.h"

int main() {
	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];

	NSString *string = @"a=3\nb=4\n2+a*b\n";
	NSLog(@"input is: %@", string);
	ANTLRStringStream *stream = [[ANTLRStringStream alloc]  
initWithStringNoCopy:string];
	ExprLexer *lexer = [[ExprLexer alloc] initWithCharStream:stream];

	ANTLRCommonTokenStream *tokenStream = [[ANTLRCommonTokenStream alloc]  
initWithTokenSource:lexer];
	ExprParser *parser = [[ExprParser alloc]  
initWithTokenStream:tokenStream];
	// start parsing from the prog grammar
	ExprParser_prog_return *r = [[ExprParser_prog_return alloc] init];
	r = [parser prog];

	// start walking the tree here
	ANTLRCommonTree *t = [[ANTLRCommonTree alloc] initWithTreeNode:[r  
tree]];
	// create a tree node stream from resulting tree
	ANTLRCommonTreeNodeStream *nodes = [[ANTLRCommonTreeNodeStream alloc]  
initWithTree:t];
	Eval *walker = [[Eval alloc] initWithTreeNodeStream:nodes];
	[walker prog];

	[lexer release];
	[stream release];
	[tokenStream release];
	[parser release];
	[r release];
	[t release];
	[nodes release];
	[walker release];

	[pool release];
	return 0;
}

On 12/11/2007, at 3:55 AM, Kay R?pke wrote:

> Hi Basil!
>
> On Nov 11, 2007, at 8:13 AM, Basil Shkara wrote:
>
>> I ran an example tree grammar and set the language option to ObjC  
>> and it generated fine so I guess that answers my previous question  
>> about whether ANTLR supports tree grammars for objective-c.
>>
>> However I still do not understand why my particular grammar is not  
>> able to be generated.  I am going through Terence's book  
>> (Definitive ANTLR reference) and converting the java examples to  
>> objective-c progressively.  So far I have been able to write and  
>> generate everything except for the tree grammar.
>>
>> The grammar I have been trying to generate is below.
>>
>> Any ideas?
>
>
> Turns out that I've broken the ASTLabelType option with a typo in  
> the code generation templates.
> Thanks for catching this!
>
> I've uploaded a fixed version to http://classdump.org/articles/2007/11/11/antlr-3-1-early-access-source
>
> Please note that the copy is straight from the (unreleased) depot  
> version and contains stuff that might not work (it also contains  
> changes to the Java source that might not be in the next release) so  
> proceed with care.
>
> In case you want to fix your existing copy, unpack the antlr3.jar  
> and change the file named ObjC.stg. After the replacement you can  
> repack the jar, or just adjust your classpath accordingly.  
> Alternatively, you can put the modified ObjC.stg into your classpath  
> before the jar. (Sounds complicated, but really isn't ;))
> You need to replace the string "ANTLRASTLabelType" to  
> "ASTLabelType". It's just one occurrence. After that change you  
> grammar goes trough fine, though it might not do what you intended  
> because the references to a and b won't work:
>
> expr returns [NSString *value]
> 		:	^('+' a=expr b=expr)	{$value = a+b;}
> 		|	^('-' a=expr b=expr)	{$value = a-b;}
> 		|	^('*' a=expr b=expr)	{$value = a*b;}
> 		|	ID
> 			{
>
> You need to use $a and $b and make sure that you first convert their  
> string values to integers or floats and then do the arithmetic.

Yep my mistake.  I think something like this will work:
		:	^('+' a=expr b=expr)	{$value = [NSString stringWithFormat:@"\%d",  
[a intValue] + [b intValue]];}
		|	^('-' a=expr b=expr)	{$value = [NSString stringWithFormat:@"\%d",  
[a intValue] - [b intValue]];}
		|	^('*' a=expr b=expr)	{$value = [NSString stringWithFormat:@"\%d",  
[a intValue] * [b intValue]];}

>
>
> HTH,
>
> -k
> -- 
> Kay R?pke
> http://classdump.org/
>
>
>
>
>
>


From marklsnyder at gmail.com  Mon Nov 12 06:37:57 2007
From: marklsnyder at gmail.com (Mark Snyder)
Date: Mon, 12 Nov 2007 15:37:57 +0100
Subject: [antlr-interest] preserving epsilon derivations when building trees
Message-ID: <d5eb25430711120637s536445cat38a6aa1c3fb0c0d4@mail.gmail.com>

I would like to build ASTs that preserve the
position of optional nonterminals.

For example, given Java syntax rule:
  importDeclaration
    : 'import' 'static'? qualifiedName ('.' '*')? ';'
    -> ^(IMPORT_DECL qualifiedName 'static'? '*'?)

and input:

  import xyz;

I would like to produce a tree like this:
  (IMPORT_DECL (QNAME xyz) EMPTY EMPTY)

Is there a way to do this within ANTRL V3?


Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071112/716c28b2/attachment.html 

From Mike at LeBlanc-Engineering.com  Mon Nov 12 08:21:53 2007
From: Mike at LeBlanc-Engineering.com (Michael LeBlanc)
Date: Mon, 12 Nov 2007 11:21:53 -0500
Subject: [antlr-interest] preserving epsilon derivations when building
	trees
In-Reply-To: <d5eb25430711120637s536445cat38a6aa1c3fb0c0d4@mail.gmail.com>
References: <d5eb25430711120637s536445cat38a6aa1c3fb0c0d4@mail.gmail.com>
Message-ID: <78C9D7AF-BA62-4582-A644-10C9A2E0D247@LeBlanc-Engineering.com>

Replace, for example, 'static'? by

   staticOrEmpty : 'static' | -> EMPTY ;

Add EMPTY to your tokens {}.

From marklsnyder at gmail.com  Mon Nov 12 08:29:46 2007
From: marklsnyder at gmail.com (Mark Snyder)
Date: Mon, 12 Nov 2007 17:29:46 +0100
Subject: [antlr-interest] preserving epsilon derivations when building
	trees
In-Reply-To: <78C9D7AF-BA62-4582-A644-10C9A2E0D247@LeBlanc-Engineering.com>
References: <d5eb25430711120637s536445cat38a6aa1c3fb0c0d4@mail.gmail.com>
	<78C9D7AF-BA62-4582-A644-10C9A2E0D247@LeBlanc-Engineering.com>
Message-ID: <d5eb25430711120829o28d0656fj7fa4ae6de35988d@mail.gmail.com>

Thanks, I had thought of this; however,
this robs me of convenient *,+,? operators
and thereby explodes my grammar ;-(.

On Nov 12, 2007 5:21 PM, Michael LeBlanc <Mike at leblanc-engineering.com>
wrote:

> Replace, for example, 'static'? by
>
>   staticOrEmpty : 'static' | -> EMPTY ;
>
> Add EMPTY to your tokens {}.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071112/598858ed/attachment.html 

From mateus.baur at gmail.com  Mon Nov 12 11:38:14 2007
From: mateus.baur at gmail.com (Mateus Baur da Silva)
Date: Mon, 12 Nov 2007 17:38:14 -0200
Subject: [antlr-interest] "Comments" token from source to the target language
Message-ID: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>

Hi Guys,

As I mentioned in some my other email, I doing a translator from a Pascal
subset to java. Currently, I'm ignoring the "comments" by using skip() on
the lexer rule that defines the "comments".

However, I would like to translate the comments from Pascal to Java code as
well. I was wondering if I could do that by using the HIDDEN_CHANNEL or some
other feature to properly translate the comments. Does someone have any clue
on how to do that?

Thanks in advance,
Mateus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071112/220ce8a1/attachment.html 

From jaluber at gmx.de  Mon Nov 12 12:56:44 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 12 Nov 2007 21:56:44 +0100
Subject: [antlr-interest] Disambiguation problem
Message-ID: <4738BE0C.6050807@gmx.de>

Hi,

I'm not sure how I am supposed to implement the following section of the
C# standard (adapted do ANTLR syntax):

"Cast expressions:

A cast_expression is used to explicitly convert an expression to a given
type.

cast_expression
   :    '( ' type ')'unary_expression
   ;

A cast_expression of the form (T)E, where T is a type and E is a
unary_expression, performs an explicit conversion (?6.2) of the value of
E to type T. If no explicit conversion exists from E to T, a
compile-time error occurs. Otherwise, the result is the value produced
by the explicit conversion. The result is always classified as a value,
even if E denotes a variable.

The grammar for a cast_expression leads to certain syntactic
ambiguities. For example, the expression (x)?y could either be
interpreted as a cast_expression (a cast of ?y to type x) or as an
additive_expression combined with a parenthesized_expression (which
computes the value x ? y).

To resolve cast_expression ambiguities, the following rule exists: A
sequence of one or more tokens (?2.3.3) enclosed in parentheses is
considered the start of a cast_expression only if at least one of the
following are true:

? The sequence of tokens is correct grammar for a type, but not for an
expression.

? The sequence of tokens is correct grammar for a type, and the token
immediately following the closing parentheses is the token ?~?, the
token ?!?, the token ?(?, an identifier (?2.4.1), a literal (?2.4.4), or
any keyword (?2.4.3) except as and is.

The term ?correct grammar? above means only that the sequence of tokens
must conform to the particular grammatical production. It specifically
does not consider the actual meaning of any constituent identifiers. For
example, if x and y are identifiers, then x.y is correct grammar for a
type, even if x.y doesn?t actually denote a type.

>From the disambiguation rule it follows that, if x and y are
identifiers, (x)y, (x)(y), and (x)(-y) are cast_expressions, but (x)-y
is not, even if x identifies a type. However, if x is a keyword that
identifies a predefined type (such as int), then all four forms are
cast_expressions (because such a keyword could not possibly be an
expression by itself)."

So how I am supposed to translate this into ANTLR syntax? The first
point seems to require this: "(OPEN_PARENS type)=> cast_expression". The
second point wants to test what is after the the closing parenthesis,
which I'm also not sure, how to test that - do I have create a function
which scans the input while balancing parenthesis? And I don't
understand why the first point isn't a superset of the second point, as
I don't see why the first point may not be true when the second is.

I've attached the grammar in question. Thanks in advance for any help!

Johannes

-------------- next part --------------
A non-text attachment was scrubbed...
Name: CSharp3ParserTest.zip
Type: application/octetstream
Size: 9094 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20071112/fdd73766/attachment.bin 

From parrt at cs.usfca.edu  Mon Nov 12 14:03:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Nov 2007 14:03:03 -0800
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
Message-ID: <B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>


On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:

> Hi Guys,
>
> As I mentioned in some my other email, I doing a translator from a  
> Pascal subset to java. Currently, I'm ignoring the "comments" by  
> using skip() on the lexer rule that defines the "comments".
>
> However, I would like to translate the comments from Pascal to Java  
> code as well. I was wondering if I could do that by using the  
> HIDDEN_CHANNEL or some other feature to properly translate the  
> comments. Does someone have any clue on how to do that?
>

Yep, use the hidden token thing.  Your actions then ask for the  
hidden tokens between real tokens.  Parser ignores them.

Ter


From john at jacelridge.com  Mon Nov 12 14:23:56 2007
From: john at jacelridge.com (John Ridgway)
Date: Mon, 12 Nov 2007 17:23:56 -0500
Subject: [antlr-interest] Debugging tree grammars
Message-ID: <C76F3E48-FD7F-4C16-8939-08B15D2EED32@jacelridge.com>

Friends -
How do I debug a tree grammar?  I started with the Java 1.5 grammar,  
and modified it to produce an AST.  I'm hoping that the AST I'm  
generating is general enough that others can use it if they like.   
I'm then writing a tree grammar to look at the AST and produce  
equivalent Java.  Together they make a not-partiucularly-pretty- 
printer, since all of the comments get dropped, but it gives me some  
belief that the AST is good.

Here's the problem.  I parse the Java and return an AST; I take the  
tokens from the AST and feed them into the tree grammar that I  
created.  I get the message:

JavaPrinterTree.g: node from after line 7:13 no viable alternative at  
input 'METHOD_DEFINITION'

but I cannot see why I'm getting this error -- the printed AST  
includes the following fragment:
   CLASS
     MODIFIERS
       public
     Test
     CLASS_BODY
       METHOD_DEFINITION
         MODIFIERS
           public
           static
         VOID_TYPE
         main
         FORMAL_PARAMETERS
           FORMAL_PARAMETER
             VARIABLE_MODIFIERS
             ARRAY_OF
               String
             args
         throws
           Exception
         BLOCK

and the tree grammar includes the following:

classBody
	:	{System.err.println("classBody");}
         ^(CLASS_BODY classBodyDeclaration*)
	    {System.err.println("leaving classBody");}
     ;
	
interfaceBody
	:	{System.err.println("interfaceBody");}
         ^(INTERFACE_BODY interfaceBodyDeclaration*)
	;

classBodyDeclaration
	:	{System.err.println("classBodyDeclaration");}
     (   {System.err.println("here");}^(STATIC_BLOCK block)
     |   ^(DYNAMIC_BLOCK block)
	|	^(CONSTRUCTOR_DEFINITION modifiers identifier formalParameters  
formalParameters throwsPhrase?)
     |   ^(METHOD_DECLARATION modifiers VOID_TYPE identifier  
formalParameters throwsPhrase?)
     |   ^(METHOD_DECLARATION modifiers type '['* identifier  
formalParameters throwsPhrase?)
     |   {System.err.println("here");}
         ^(METHOD_DEFINITION  modifiers VOID_TYPE identifier  
formalParameters (throwsPhrase)? methodBody)
     |   ^(METHOD_DEFINITION modifiers type '['* identifier  
formalParameters (throwsPhrase)? methodBody)
     |   ^(SCALAR_DEFINITION modifiers type identifier  
variableInitializer)
     |   ^(ARRAY_DEFINITION modifiers type '['+ identifier  
variableInitializer?)
     |   ^(GENERIC_CONSTRUCTOR_DEFINITION modifiers typeParameters  
identifier formalParameters (throwsPhrase)?)
     |   ^(GENERIC_METHOD_DECLARATION modifiers typeParameters type  
'['* identifier formalParameters (throwsPhrase)?)
     |   ^(GENERIC_METHOD_DEFINITION modifiers typeParameters type  
'['* identifier formalParameters (throwsPhrase)? methodBody)
	|	interfaceDeclaration
	|	classDeclaration
     )
         {System.err.println("leaving classBodyDeclaration");}
	;

Running it yields:

classDeclaration
modifiers
leaving modifiers
classBody
classBodyDeclaration
JavaPrinterTree.g: node from after line 7:13 no viable alternative at  
input 'METHOD_DEFINITION'
classBodyDeclaration
JavaPrinterTree.g: node from after line 7:13 no viable alternative at  
input 'METHOD_DEFINITION'
leaving classBody
BR.recoverFromMismatchedToken
JavaPrinterTree.g: node from after line 8:9 mismatched tree node:  
VOID_TYPE expecting <UP>

I don't understand the error, and I don't know how to debug this.  Help?

Peace
- John


From parrt at cs.usfca.edu  Mon Nov 12 14:35:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Nov 2007 14:35:26 -0800
Subject: [antlr-interest] Debugging tree grammars
In-Reply-To: <C76F3E48-FD7F-4C16-8939-08B15D2EED32@jacelridge.com>
References: <C76F3E48-FD7F-4C16-8939-08B15D2EED32@jacelridge.com>
Message-ID: <8FEF8519-3787-476E-A9A0-9DBE4E335133@cs.usfca.edu>

Hi John, I'd try using ANTLRWorks. :)  It should debug AST grammars  
no problem.

Ter

From jimi at temporal-wave.com  Mon Nov 12 14:42:52 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 12 Nov 2007 14:42:52 -0800
Subject: [antlr-interest] Debugging tree grammars
In-Reply-To: <C76F3E48-FD7F-4C16-8939-08B15D2EED32@jacelridge.com>
Message-ID: <"L9687FC04EE8B4b2e936FACD5037A8344.1194907391.scalix.temporal-wave.com*"@MHS>

You probably have worked out that your grammar does not reflect the tree 
you are producing? 

Looks, from your indenting, like you have

^(METHOD_DEFINITION ^(MODIFERS ...

So, does your modifiers rule reflect that? If so, then keep going 
through each rule until you see that your tree products a sub-tree but 
your tree grammar is not expecting that, or the other way around. 

I think that you can debug tree grammars if you generate it in debug 
mode, then run it external to ANTLRWorks, then use ANTLRWorks remote 
debugger. But you are likely to find this easy enough by hand as it is 
(almost ;-), always just that you are making nodes where your tree 
parser isn't expecting them, or the other way around. You could of 
course be missing a chunk or two in the tree parser :-)

However, all that said, looking at your rules you seem to have lots of 
versions of ^(METHOD_DEFINITION x y z) that look like they are getting 
in your way. If you really want these to be recognized differently in 
the tree parser, then it would probably be best to write them out as 
different nodes and not just different METHOD_DEFINITION nodes, or make 
your ^(METHOD_DEFINITION .. recognize each variant.

Jim

-----Original Message-----
From: John Ridgway [mailto:john at jacelridge.com] 
Sent: Monday, November 12, 2007 2:24 PM
To: antlr-interest
Subject: [antlr-interest] Debugging tree grammars

Friends -
How do I debug a tree grammar?  I started with the Java 1.5 grammar,  
and modified it to produce an AST.  I'm hoping that the AST I'm  
generating is general enough that others can use it if they like.   
I'm then writing a tree grammar to look at the AST and produce  
equivalent Java.  Together they make a not-partiucularly-pretty- 
printer, since all of the comments get dropped, but it gives me some  
belief that the AST is good.

Here's the problem.  I parse the Java and return an AST; I take the  
tokens from the AST and feed them into the tree grammar that I  
created.  I get the message:

JavaPrinterTree.g: node from after line 7:13 no viable alternative at  
input 'METHOD_DEFINITION'

but I cannot see why I'm getting this error -- the printed AST  
includes the following fragment:
   CLASS
     MODIFIERS
       public
     Test
     CLASS_BODY
       METHOD_DEFINITION
         MODIFIERS
           public
           static
         VOID_TYPE
         main
         FORMAL_PARAMETERS
           FORMAL_PARAMETER
             VARIABLE_MODIFIERS
             ARRAY_OF
               String
             args
         throws
           Exception
         BLOCK

and the tree grammar includes the following:

classBody
	:	{System.err.println("classBody");}
         ^(CLASS_BODY classBodyDeclaration*)
	    {System.err.println("leaving classBody");}
     ;
	
interfaceBody
	:	{System.err.println("interfaceBody");}
         ^(INTERFACE_BODY interfaceBodyDeclaration*)
	;

classBodyDeclaration
	:	{System.err.println("classBodyDeclaration");}
     (   {System.err.println("here");}^(STATIC_BLOCK block)
     |   ^(DYNAMIC_BLOCK block)
	|	^(CONSTRUCTOR_DEFINITION modifiers identifier 
formalParameters  
formalParameters throwsPhrase?)
     |   ^(METHOD_DECLARATION modifiers VOID_TYPE identifier  
formalParameters throwsPhrase?)
     |   ^(METHOD_DECLARATION modifiers type '['* identifier  
formalParameters throwsPhrase?)
     |   {System.err.println("here");}
         ^(METHOD_DEFINITION  modifiers VOID_TYPE identifier  
formalParameters (throwsPhrase)? methodBody)
     |   ^(METHOD_DEFINITION modifiers type '['* identifier  
formalParameters (throwsPhrase)? methodBody)



From mateus.baur at gmail.com  Mon Nov 12 16:13:02 2007
From: mateus.baur at gmail.com (Mateus Baur da Silva)
Date: Mon, 12 Nov 2007 22:13:02 -0200
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
Message-ID: <9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>

Hi Ter,

I understand that parser will ignore the tokens if I set the token to be
sent to the parser thru the hidden channel ($channel=HIDDEN;).

By reading your message (and your book), I know I can check the hidden
channel for the comments token inside my actions. However, I don't know how
to do that. Is there some sample implementing this behavior?

If not, could you (or someone else) let me know how I should implement that
inside my actions?

Thanks and Regards,
Mateus


On Nov 12, 2007 8:03 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
>
> > Hi Guys,
> >
> > As I mentioned in some my other email, I doing a translator from a
> > Pascal subset to java. Currently, I'm ignoring the "comments" by
> > using skip() on the lexer rule that defines the "comments".
> >
> > However, I would like to translate the comments from Pascal to Java
> > code as well. I was wondering if I could do that by using the
> > HIDDEN_CHANNEL or some other feature to properly translate the
> > comments. Does someone have any clue on how to do that?
> >
>
> Yep, use the hidden token thing.  Your actions then ask for the
> hidden tokens between real tokens.  Parser ignores them.
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071112/4cb937e5/attachment.html 

From parrt at cs.usfca.edu  Mon Nov 12 17:19:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Nov 2007 17:19:10 -0800
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
Message-ID: <6A812BB7-9B92-4194-928B-ABE7B50F8C87@cs.usfca.edu>

Hi. Sure.  Each token as an index into token buffer via  
t.getTokenIndex().  Then ask for the token at index -1, -2, etc...   
You can ask for it's channel number too.  Just scan :)

Ter
On Nov 12, 2007, at 4:13 PM, Mateus Baur da Silva wrote:

> Hi Ter,
>
> I understand that parser will ignore the tokens if I set the token  
> to be sent to the parser thru the hidden channel ($channel=HIDDEN;).
>
> By reading your message (and your book), I know I can check the  
> hidden channel for the comments token inside my actions. However, I  
> don't know how to do that. Is there some sample implementing this  
> behavior?
>
> If not, could you (or someone else) let me know how I should  
> implement that inside my actions?
>
> Thanks and Regards,
> Mateus
>
>
> On Nov 12, 2007 8:03 PM, Terence Parr < parrt at cs.usfca.edu> wrote:
>
> On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
>
> > Hi Guys,
> >
> > As I mentioned in some my other email, I doing a translator from a
> > Pascal subset to java. Currently, I'm ignoring the "comments" by
> > using skip() on the lexer rule that defines the "comments".
> >
> > However, I would like to translate the comments from Pascal to Java
> > code as well. I was wondering if I could do that by using the
> > HIDDEN_CHANNEL or some other feature to properly translate the
> > comments. Does someone have any clue on how to do that?
> >
>
> Yep, use the hidden token thing.  Your actions then ask for the
> hidden tokens between real tokens.  Parser ignores them.
>
> Ter
>
>


From jack at icefire.ee  Mon Nov 12 17:54:55 2007
From: jack at icefire.ee (Jaak Niit)
Date: Tue, 13 Nov 2007 03:54:55 +0200
Subject: [antlr-interest] How to change AST node order in Java ?
Message-ID: <473903EF.4040407@icefire.ee>

Hi,

Is there solution to change AST node order in Java ?

If current node have children A, B, C, D and I want to change order to 
A, D, B, C.
BaseTree has methods deleteChild(int i) and addChild(Tree t),
but addChild(int offset, Tree t) is missing.

I want to write something like
BaseTree D = t.getChild(3);
t.deleteChild(3);
t.addChild(1,D);

So problem is how to add node in middle of list.

-- 
# Jaak Niit 


From NOSPAM at TheSnakePitDev.com  Mon Nov 12 19:33:09 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Mon, 12 Nov 2007 19:33:09 -0800
Subject: [antlr-interest] How to change AST node order in Java ?
In-Reply-To: <473903EF.4040407@icefire.ee>
References: <473903EF.4040407@icefire.ee>
Message-ID: <fhb5v1$ocd$1@ger.gmane.org>

Jaak Niit wrote:
> Is there solution to change AST node order in Java ?
> 
> If current node have children A, B, C, D and I want to change order to 
> A, D, B, C.
> BaseTree has methods deleteChild(int i) and addChild(Tree t),
> but addChild(int offset, Tree t) is missing.
> 
> I want to write something like
> BaseTree D = t.getChild(3);
> t.deleteChild(3);
> t.addChild(1,D);
> 
> So problem is how to add node in middle of list.

The default object used for an AntLr tree is CommonTree which 
sub-classes BaseTree which implement the Tree interface. BaseTree 
extends the Tree interface with, among others, the method
   void setChild(int i, BaseTree t)

You can simply cast your tree object to BaseTree or CommonTree, or 
specify the returned type in the grammar with the ASTLabelType option.

I hope that helps.
-- Curtis


From NOSPAM at TheSnakePitDev.com  Mon Nov 12 19:56:05 2007
From: NOSPAM at TheSnakePitDev.com (Curtis Clauson)
Date: Mon, 12 Nov 2007 19:56:05 -0800
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
Message-ID: <fhb7a1$qqk$1@ger.gmane.org>

Mateus Baur da Silva wrote:
> As I mentioned in some my other email, I doing a translator from a 
> Pascal subset to java. Currently, I'm ignoring the "comments" by using 
> skip() on the lexer rule that defines the "comments".
> 
> However, I would like to translate the comments from Pascal to Java code 
> as well. I was wondering if I could do that by using the HIDDEN_CHANNEL 
> or some other feature to properly translate the comments. Does someone 
> have any clue on how to do that?

Another way to look at this is to consider input vs. output. In a 
program language parser, you parse the input source text into 
implementable units. In this context, comments have no meaning and are 
skipped or shuttled to the HIDDEN token stream channel.

However, in your situation, you are translating one source language into 
another. In this context, comments not only have meaning, they are part 
of the output. As such, they should be handled by the parser as part of 
the source language and not punted by the lexer.

The components of Pascal comments become valid tokens, the different 
Pascal comment syntaxes are parsed matching those tokens, and you use 
the tokens for the comment text to emit the Java style comments. This 
allows you to distinguish between single-line and multi-line comments, 
and even to prepend " * " to the interior lines of multi-line comments.

In this manner, the comment tokens are a valid part of the main token 
stream and there is no need to use any special code to read alternative 
token stream channels.

I hope that helps.
-- Curtis


From Austin_Hastings at Yahoo.com  Mon Nov 12 16:38:25 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Mon, 12 Nov 2007 19:38:25 -0500
Subject: [antlr-interest] "Comments" token from source to the
	target	language
In-Reply-To: <9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
Message-ID: <4738F201.2000409@Yahoo.com>

Mateus,

I'd recommend that you not hide the comment tokens. Instead, recognize 
them, translate them, and then include them in your AST. You should do 
an early-stage AST rewrite to get the comments out of the way - attach 
them to the nodes instead. Then you can go back to AST rewriting for the 
language itself.

=Austin


Mateus Baur da Silva wrote:
> Hi Ter,
>
> I understand that parser will ignore the tokens if I set the token to 
> be sent to the parser thru the hidden channel ($channel=HIDDEN;).
>
> By reading your message (and your book), I know I can check the hidden 
> channel for the comments token inside my actions. However, I don't 
> know how to do that. Is there some sample implementing this behavior?
>
> If not, could you (or someone else) let me know how I should implement 
> that inside my actions?
>
> Thanks and Regards,
> Mateus
>
>
> On Nov 12, 2007 8:03 PM, Terence Parr < parrt at cs.usfca.edu 
> <mailto:parrt at cs.usfca.edu>> wrote:
>
>
>     On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
>
>     > Hi Guys,
>     >
>     > As I mentioned in some my other email, I doing a translator from a
>     > Pascal subset to java. Currently, I'm ignoring the "comments" by
>     > using skip() on the lexer rule that defines the "comments".
>     >
>     > However, I would like to translate the comments from Pascal to Java
>     > code as well. I was wondering if I could do that by using the
>     > HIDDEN_CHANNEL or some other feature to properly translate the
>     > comments. Does someone have any clue on how to do that?
>     >
>
>     Yep, use the hidden token thing.  Your actions then ask for the
>     hidden tokens between real tokens.  Parser ignores them.
>
>     Ter
>
>
> ------------------------------------------------------------------------
>
> No virus found in this incoming message.
> Checked by AVG Free Edition. 
> Version: 7.5.503 / Virus Database: 269.15.30/1125 - Release Date: 11/11/2007 9:50 PM
>   


From parrt at cs.usfca.edu  Mon Nov 12 21:29:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Nov 2007 21:29:15 -0800
Subject: [antlr-interest] "Comments" token from source to the
	target	language
In-Reply-To: <4738F201.2000409@Yahoo.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
	<4738F201.2000409@Yahoo.com>
Message-ID: <FEFB7BA4-8CCD-4863-88E5-DE52036246E7@cs.usfca.edu>

Hi gang, doesn't this make it hard on the parser grammar? You have  
must have a COMMENT? subrule after every single token in case there  
is a comment on the input stream.  I specifically designed hidden  
channels to avoid this. It's literally a single array of tokens, but  
parser ignores tokens on "off channels".

I'm pretty sure recognizing comments is not the right approach, but  
I'm very open to other options if the "optional COMMENT rule" issue  
can be addressed.

Ter

On Nov 12, 2007, at 4:38 PM, Austin Hastings wrote:

> Mateus,
>
> I'd recommend that you not hide the comment tokens. Instead,  
> recognize them, translate them, and then include them in your AST.  
> You should do an early-stage AST rewrite to get the comments out of  
> the way - attach them to the nodes instead. Then you can go back to  
> AST rewriting for the language itself.
>
> =Austin
>
>
> Mateus Baur da Silva wrote:
>> Hi Ter,
>>
>> I understand that parser will ignore the tokens if I set the token  
>> to be sent to the parser thru the hidden channel ($channel=HIDDEN;).
>>
>> By reading your message (and your book), I know I can check the  
>> hidden channel for the comments token inside my actions. However,  
>> I don't know how to do that. Is there some sample implementing  
>> this behavior?
>>
>> If not, could you (or someone else) let me know how I should  
>> implement that inside my actions?
>>
>> Thanks and Regards,
>> Mateus
>>
>>
>> On Nov 12, 2007 8:03 PM, Terence Parr < parrt at cs.usfca.edu  
>> <mailto:parrt at cs.usfca.edu>> wrote:
>>
>>
>>     On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
>>
>>     > Hi Guys,
>>     >
>>     > As I mentioned in some my other email, I doing a translator  
>> from a
>>     > Pascal subset to java. Currently, I'm ignoring the  
>> "comments" by
>>     > using skip() on the lexer rule that defines the "comments".
>>     >
>>     > However, I would like to translate the comments from Pascal  
>> to Java
>>     > code as well. I was wondering if I could do that by using the
>>     > HIDDEN_CHANNEL or some other feature to properly translate the
>>     > comments. Does someone have any clue on how to do that?
>>     >
>>
>>     Yep, use the hidden token thing.  Your actions then ask for the
>>     hidden tokens between real tokens.  Parser ignores them.
>>
>>     Ter
>>
>>
>> --------------------------------------------------------------------- 
>> ---
>>
>> No virus found in this incoming message.
>> Checked by AVG Free Edition. Version: 7.5.503 / Virus Database:  
>> 269.15.30/1125 - Release Date: 11/11/2007 9:50 PM
>>
>


From jack at icefire.ee  Mon Nov 12 23:23:34 2007
From: jack at icefire.ee (Jaak Niit)
Date: Tue, 13 Nov 2007 09:23:34 +0200
Subject: [antlr-interest] How to change AST node order in Java ?
In-Reply-To: <fhb5v1$ocd$1@ger.gmane.org>
References: <473903EF.4040407@icefire.ee> <fhb5v1$ocd$1@ger.gmane.org>
Message-ID: <473950F6.6020604@icefire.ee>

Curtis Clauson wrote:
> Jaak Niit wrote:
>> Is there solution to change AST node order in Java ?
>>
>> If current node have children A, B, C, D and I want to change order 
>> to A, D, B, C.
>> BaseTree has methods deleteChild(int i) and addChild(Tree t),
>> but addChild(int offset, Tree t) is missing.
>>
>> I want to write something like
>> BaseTree D = t.getChild(3);
>> t.deleteChild(3);
>> t.addChild(1,D);
>>
>> So problem is how to add node in middle of list.
>
> The default object used for an AntLr tree is CommonTree which 
> sub-classes BaseTree which implement the Tree interface. BaseTree 
> extends the Tree interface with, among others, the method
>   void setChild(int i, BaseTree t)
>
I have extended CommonTree and use ASTLabelType already, but setChild 
replaces i-th element in list, but I need to add.
When I look to void addChild(Tree t) source code then I need 
children.add(offset, t) instead of children.add(t).

I thought that this is so common problem that it should have simple 
solution :-)
> You can simply cast your tree object to BaseTree or CommonTree, or 
> specify the returned type in the grammar with the ASTLabelType option.
>
> I hope that helps.
> -- Curtis
>


-- 
# Jaak Niit 


From pink at odahoda.de  Mon Nov 12 23:52:14 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 12 Nov 2007 23:52:14 -0800
Subject: [antlr-interest] How to change AST node order in Java ?
In-Reply-To: <473903EF.4040407@icefire.ee>
References: <473903EF.4040407@icefire.ee>
Message-ID: <fhbl3c$opa$1@ger.gmane.org>

Hi,

Jaak Niit wrote:
> Is there solution to change AST node order in Java ?
> 
> If current node have children A, B, C, D and I want to change order to 
> A, D, B, C.
> BaseTree has methods deleteChild(int i) and addChild(Tree t),
> but addChild(int offset, Tree t) is missing.
> 
> I want to write something like
> BaseTree D = t.getChild(3);
> t.deleteChild(3);
> t.addChild(1,D);
> 
> So problem is how to add node in middle of list.

The API has been extended in the (not yet release) 3.1 release and 
should provide what you need (or you may be able to achieve what you 
want by using tree rewriting...).
You may either wait till it is available, or, if you are brave enough, 
fetch the latest daily build from <http://www.antlr.org/download/build/> 
and give it a try.

HTH


From gbr at newtechlaw.com  Tue Nov 13 00:22:28 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Tue, 13 Nov 2007 00:22:28 -0800
Subject: [antlr-interest] How to change AST node order in Java ?
In-Reply-To: <473950F6.6020604@icefire.ee>
References: <473903EF.4040407@icefire.ee> <fhb5v1$ocd$1@ger.gmane.org>
	<473950F6.6020604@icefire.ee>
Message-ID: <200711130822.lAD8MPMb015610@tach.newtechlaw.com>

It is just a list.  Simple solution is to add whatever methods you need.


At 11:23 PM 11/12/2007, you wrote:
>Curtis Clauson wrote:
>>Jaak Niit wrote:
>>>Is there solution to change AST node order in Java ?
>>>
>>>If current node have children A, B, C, D and I want to change 
>>>order to A, D, B, C.
>>>BaseTree has methods deleteChild(int i) and addChild(Tree t),
>>>but addChild(int offset, Tree t) is missing.
>>>
>>>I want to write something like
>>>BaseTree D = t.getChild(3);
>>>t.deleteChild(3);
>>>t.addChild(1,D);
>>>
>>>So problem is how to add node in middle of list.
>>
>>The default object used for an AntLr tree is CommonTree which 
>>sub-classes BaseTree which implement the Tree interface. BaseTree 
>>extends the Tree interface with, among others, the method
>>   void setChild(int i, BaseTree t)
>I have extended CommonTree and use ASTLabelType already, but 
>setChild replaces i-th element in list, but I need to add.
>When I look to void addChild(Tree t) source code then I need 
>children.add(offset, t) instead of children.add(t).
>
>I thought that this is so common problem that it should have simple 
>solution :-)
>>You can simply cast your tree object to BaseTree or CommonTree, or 
>>specify the returned type in the grammar with the ASTLabelType option.
>>
>>I hope that helps.
>>-- Curtis
>
>
>--
># Jaak Niit
-------------- next part --------------
package net.certiv.antlrdt.core.parser;

import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;
import org.antlr.runtime.Token;
import org.antlr.runtime.tree.CommonTree;

/**
 * Convenience class just to provide some of tree manipulation functionality otherwise
 * missing from the Common Tree base class.
 * 
 * @author Gerald B. Rosenberg
 */
public class AstTreeAdapter extends CommonTree {

	public AstTreeAdapter(Token t) {
		super(t);
	}

	/** Create a child list of the correct type */
	@SuppressWarnings("unchecked")
	@Override
	protected List<AstNode> createChildrenList() {
		children = new ArrayList<AstNode>();
		return children;
	}

	/** Returns the specified child of this node */
	public AstNode getChild(int i) {
		return (AstNode) super.getChild(i);
	}

	/** Deletes the specified child, returning the deleted child */
	public AstNode deleteChild(int idx) {
		return (AstNode) super.deleteChild(idx);
	}

	/** Returns whether this node has children */
	public boolean hasChildren() {
		return getChildCount() > 0;
	}

	/** ArrayList of the children of this node */
	@SuppressWarnings("unchecked")
	public ArrayList<AstNode> getChildren() {
		return (ArrayList<AstNode>) children;
	}

	/** First child of this node */
	public AstNode getFirstChild() {
		return getChild(0);
	}

	/** Last child of this node */
	public AstNode getLastChild() {
		return getChild(getChildCount() - 1);
	}

	/** Index of child of this node */
	public int indexOfChild(AstNode node) {
		if (getChildren() != null) {
			return getChildren().indexOf(node);
		}
		return -1;
	}

	/** Insert at this index */
	public void insertChild(int idx, AstNode child) {
		if (getChildren() == null) createChildrenList();
		getChildren().add(idx, child);
	}

	/** Remove the last child of this node */
	public AstNode deleteLastChild() {
		if (getChildCount() > 0) {
			return getChildren().remove(getChildCount() - 1);
		}
		return null;
	}

	/** Return a list iterator for the children of this node */
	public ListIterator<AstNode> listIterator() {
		return getChildren().listIterator();
	}
}
-------------- next part --------------
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net

From mateus.baur at gmail.com  Tue Nov 13 02:44:46 2007
From: mateus.baur at gmail.com (Mateus Baur da Silva)
Date: Tue, 13 Nov 2007 08:44:46 -0200
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <6A812BB7-9B92-4194-928B-ABE7B50F8C87@cs.usfca.edu>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
	<6A812BB7-9B92-4194-928B-ABE7B50F8C87@cs.usfca.edu>
Message-ID: <9996fef80711130244j1120d935lb1725342347af5d2@mail.gmail.com>

Hi Ter,

I apologize if the questions are stupid and if I'm taking to long to figure
out this stuff. However, I'm a beginner on ANTLR and languages/parsers
stuff.

The problem you mentioned in the other message ("...You have must have a
COMMENT? subrule after every single token in case there is a comment on the
input stream...") is exactly what I'm trying to avoid.

I still don't understand how I can do that. What else I need to do besides
including the $channel=HIDDEN in the COMMENTS token? What do I need to to on
the parser side? Could you show me a real sample, a rule having this
implemented?

Cheers,
Mateus

On Nov 12, 2007 11:19 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi. Sure.  Each token as an index into token buffer via
> t.getTokenIndex().  Then ask for the token at index -1, -2, etc...
> You can ask for it's channel number too.  Just scan :)
>
> Ter
> On Nov 12, 2007, at 4:13 PM, Mateus Baur da Silva wrote:
>
> > Hi Ter,
> >
> > I understand that parser will ignore the tokens if I set the token
> > to be sent to the parser thru the hidden channel ($channel=HIDDEN;).
> >
> > By reading your message (and your book), I know I can check the
> > hidden channel for the comments token inside my actions. However, I
> > don't know how to do that. Is there some sample implementing this
> > behavior?
> >
> > If not, could you (or someone else) let me know how I should
> > implement that inside my actions?
> >
> > Thanks and Regards,
> > Mateus
> >
> >
> > On Nov 12, 2007 8:03 PM, Terence Parr < parrt at cs.usfca.edu> wrote:
> >
> > On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
> >
> > > Hi Guys,
> > >
> > > As I mentioned in some my other email, I doing a translator from a
> > > Pascal subset to java. Currently, I'm ignoring the "comments" by
> > > using skip() on the lexer rule that defines the "comments".
> > >
> > > However, I would like to translate the comments from Pascal to Java
> > > code as well. I was wondering if I could do that by using the
> > > HIDDEN_CHANNEL or some other feature to properly translate the
> > > comments. Does someone have any clue on how to do that?
> > >
> >
> > Yep, use the hidden token thing.  Your actions then ask for the
> > hidden tokens between real tokens.  Parser ignores them.
> >
> > Ter
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071113/97850bdb/attachment.html 

From mateus.baur at gmail.com  Tue Nov 13 03:11:43 2007
From: mateus.baur at gmail.com (Mateus Baur da Silva)
Date: Tue, 13 Nov 2007 09:11:43 -0200
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <fhb7a1$qqk$1@ger.gmane.org>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
	<fhb7a1$qqk$1@ger.gmane.org>
Message-ID: <9996fef80711130311i7916ad2bubebff22b84472705@mail.gmail.com>

Hi Curtis,

Although I'm a beginner on this area and the AST solution (using this same
idea)  looks good (and would solve the problem), I tend to agree with Ter.
I'm not sure if the comments should be considered part of the gramar. As Ter
mentioned, I think it complicates the parser and makes it more complex than
necessary.

Thanks for the hint anyway!

Cheers,
Mateus

On Nov 13, 2007 1:56 AM, Curtis Clauson <NOSPAM at thesnakepitdev.com> wrote:

> Mateus Baur da Silva wrote:
> > As I mentioned in some my other email, I doing a translator from a
> > Pascal subset to java. Currently, I'm ignoring the "comments" by using
> > skip() on the lexer rule that defines the "comments".
> >
> > However, I would like to translate the comments from Pascal to Java code
> > as well. I was wondering if I could do that by using the HIDDEN_CHANNEL
> > or some other feature to properly translate the comments. Does someone
> > have any clue on how to do that?
>
> Another way to look at this is to consider input vs. output. In a
> program language parser, you parse the input source text into
> implementable units. In this context, comments have no meaning and are
> skipped or shuttled to the HIDDEN token stream channel.
>
> However, in your situation, you are translating one source language into
> another. In this context, comments not only have meaning, they are part
> of the output. As such, they should be handled by the parser as part of
> the source language and not punted by the lexer.
>
> The components of Pascal comments become valid tokens, the different
> Pascal comment syntaxes are parsed matching those tokens, and you use
> the tokens for the comment text to emit the Java style comments. This
> allows you to distinguish between single-line and multi-line comments,
> and even to prepend " * " to the interior lines of multi-line comments.
>
> In this manner, the comment tokens are a valid part of the main token
> stream and there is no need to use any special code to read alternative
> token stream channels.
>
> I hope that helps.
> -- Curtis
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071113/9480b251/attachment.html 

From Austin_Hastings at Yahoo.com  Mon Nov 12 22:59:05 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 13 Nov 2007 01:59:05 -0500
Subject: [antlr-interest] "Comments" token from source to the
	target	language
In-Reply-To: <FEFB7BA4-8CCD-4863-88E5-DE52036246E7@cs.usfca.edu>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
	<4738F201.2000409@Yahoo.com>
	<FEFB7BA4-8CCD-4863-88E5-DE52036246E7@cs.usfca.edu>
Message-ID: <47394B39.4050001@Yahoo.com>

Ter,

I suppose it depends on how he plans to deal with comments. But if the 
objective is to link the comments to the nearest-entity (statement, 
subexpression, docblock, etc.) then he's going to have special case 
handling for comments on essentially every node of *some* tree.

That is, consider:

(* maybe do something *)
if (a > 1 (* if a is set *)
   or b > 1 (* if b is set *)
  or c > 1) then (* or c *)
begin
  doSomething; (* defined in other file *)
end

The corresponding Java is, in this case, fairly straightforward. But in 
order to map the comments correctly, he'll have to preserve "shape" as 
well as sequence.

(IF
    (COND
        (OR
            (a > 1 (COMMENT "if a is set"))
            (b > 1 (COMMENT "if b is set"))
            (c > 1 (COMMENT "or c"))))
    (BLOCK
        (STMT_PROC doSomething (COMMENT "defined in other file")))
    (COMMENT "maybe do something"))

Note that in the AST above, "or c" is likely in the wrong position.

=Austin


Terence Parr wrote:
> Hi gang, doesn't this make it hard on the parser grammar? You have 
> must have a COMMENT? subrule after every single token in case there is 
> a comment on the input stream.  I specifically designed hidden 
> channels to avoid this. It's literally a single array of tokens, but 
> parser ignores tokens on "off channels".
>
> I'm pretty sure recognizing comments is not the right approach, but 
> I'm very open to other options if the "optional COMMENT rule" issue 
> can be addressed.
>
> Ter
>
> On Nov 12, 2007, at 4:38 PM, Austin Hastings wrote:
>
>> Mateus,
>>
>> I'd recommend that you not hide the comment tokens. Instead, 
>> recognize them, translate them, and then include them in your AST. 
>> You should do an early-stage AST rewrite to get the comments out of 
>> the way - attach them to the nodes instead. Then you can go back to 
>> AST rewriting for the language itself.
>>
>> =Austin
>>
>>
>> Mateus Baur da Silva wrote:
>>> Hi Ter,
>>>
>>> I understand that parser will ignore the tokens if I set the token 
>>> to be sent to the parser thru the hidden channel ($channel=HIDDEN;).
>>>
>>> By reading your message (and your book), I know I can check the 
>>> hidden channel for the comments token inside my actions. However, I 
>>> don't know how to do that. Is there some sample implementing this 
>>> behavior?
>>>
>>> If not, could you (or someone else) let me know how I should 
>>> implement that inside my actions?
>>>
>>> Thanks and Regards,
>>> Mateus
>>>
>>>
>>> On Nov 12, 2007 8:03 PM, Terence Parr < parrt at cs.usfca.edu 
>>> <mailto:parrt at cs.usfca.edu>> wrote:
>>>
>>>
>>>     On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
>>>
>>>     > Hi Guys,
>>>     >
>>>     > As I mentioned in some my other email, I doing a translator 
>>> from a
>>>     > Pascal subset to java. Currently, I'm ignoring the "comments" by
>>>     > using skip() on the lexer rule that defines the "comments".
>>>     >
>>>     > However, I would like to translate the comments from Pascal to 
>>> Java
>>>     > code as well. I was wondering if I could do that by using the
>>>     > HIDDEN_CHANNEL or some other feature to properly translate the
>>>     > comments. Does someone have any clue on how to do that?
>>>     >
>>>
>>>     Yep, use the hidden token thing.  Your actions then ask for the
>>>     hidden tokens between real tokens.  Parser ignores them.
>>>
>>>     Ter
>>>
>>>
>>> ------------------------------------------------------------------------ 
>>>
>>>
>>> No virus found in this incoming message.
>>> Checked by AVG Free Edition. Version: 7.5.503 / Virus Database: 
>>> 269.15.30/1125 - Release Date: 11/11/2007 9:50 PM
>>>
>>
>
>
>


From Austin_Hastings at Yahoo.com  Tue Nov 13 01:14:27 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 13 Nov 2007 04:14:27 -0500
Subject: [antlr-interest] Greedy Lexer FYI: How to specify a string (or
 block comment) with multi-character delimiters (<<string>> or /*comment*/)
Message-ID: <47396AF3.50702@Yahoo.com>

Howdy,

I'm writing this only because I just sank two hours chasing my tail, and 
I feel like there ought to be SOMETHING to show for it. Maybe this will 
sit on the mailing list and help Google save the next guy some time. :(

Boy, I thought this was trivial. I've piled a bunch of stuff into this 
grammar to eliminate any chance that the lexer "knows" where it's going 
to be in the file. That said, the QUOTED_LITERAL should recognize <<blah 
blah blah\>> with escaped closing marks blah blah blah>>

<code>
grammar g;

QUOTED_LITERAL: Open (Slash Close| ~Close)* Close
;

fragment Slash: '\\';
fragment Open: '<<';
fragment Close: '>>';

// Below here is crap to spoof ANTLR about what it "knows" -- which 
didn't work
rule1: (QUOTED_LITERAL | ID)+;
ID: 'a'..'z'+;
WS: (' ' | '\t' | '\n' | '\r')+ {$channel=HIDDEN;};

</code>

I get this generated java code:

<code>

public final void mQUOTED_LITERAL() throws RecognitionException {
try {
int _type = QUOTED_LITERAL;
// sources/org/antlr/gunit/g.g:5:17: Open ( Slash Close | ~ Close )* Close
mOpen();
// sources/org/antlr/gunit/g.g:5:22: ( Slash Close | ~ Close )*
loop1: do {
int alt1=3;
int LA1_0 = input.LA(1);

if ( (LA1_0=='>') ) {
int LA1_1 = input.LA(2);
if ( (LA1_1=='>') ) {
(**) int LA1_4 = input.LA(3);

if ( ((LA1_4>='\u0000' && LA1_4<='\uFFFE')) ) {
alt1=2;
}
}
else if ( ((LA1_1>='\u0000' && LA1_1<='=')||(LA1_1>='?' && 
LA1_1<='\uFFFE')) ) {
alt1=2;
}
}
else if ( (LA1_0=='\\') ) {
</code>

Notice the LA1_4 check? The code is working fine (since the default for 
alt1=3 means "end of string reached") until the check if LA1_4 is ANY 
character, whereupon the thing keeps eating characters.

The problem here is that the lexer is being greedy. After seeing several 
places where .* and .+ occur, you might (and I definitely did - and lost 
two hours because of it) think that the lexer is non-greedy by default. 
Not so. As Terence says in his book,

"Unfortunately, following the usual convention that all subrules are 
greedy makes this notation useless. Such greedy subrules would match all 
characters until the end of file. ANTLR automatically makes these two 
subrules nongreedy. So, you can use ?.*? instead of manually specifying 
the option."

Those TWO SUBRULES are automatically non-greedy. The lexer by default 
still wants to gobble up everything in sight. Which means that for my 
thing to work, I need to make my ()* loop non-greedy:

<code>

QUOTED_LITERAL: Open (options {greedy=false;}: Slash Close| ~Close)* Close
;

</code>

This gives me much better code:

<code>

mOpen();
// sources/org/antlr/gunit/g.g:5:22: ( options {greedy=false; } : Slash 
Close | ~ Close )*
loop1: do {
int alt1=3;
int LA1_0 = input.LA(1);

if ( (LA1_0=='>') ) {
int LA1_1 = input.LA(2);
if ( (LA1_1=='>') ) {
alt1=3;
}
else if ( ((LA1_1>='\u0000' && LA1_1<='=')||(LA1_1>='?' && 
LA1_1<='\uFFFE')) ) {
alt1=2;
}
}
else if ( (LA1_0=='\\') ) {
alt1=1;
}
</code>

This is important for C-style /* comments */, since they use multi-byte 
delimiters. Presumably also for Pascal (* comments *) as well.

Here's the same rule, with the Open and Close delimiters set to 
double-quote("). Still with greedy=false, and the structure of the code 
is similar, although recognizing the delimiter is much simpler:

<code>
mOpen();
// sources/org/antlr/gunit/g.g:5:22: ( options {greedy=false; } : Slash 
Close | ~ Close )*
loop1:
do {
int alt1=3;
int LA1_0 = input.LA(1);

if ( (LA1_0=='\"') ) {
alt1=3;
}
else if ( (LA1_0=='\\') ) {
alt1=1;
}
else if ( ((LA1_0>='\u0000' && LA1_0<='!')||(LA1_0>='#' && 
LA1_0<='[')||(LA1_0>=']' && LA1_0<='\uFFFE')) ) {
alt1=2;
}
</code>

And with greedy=false turned off:

<code>
mOpen();
// sources/org/antlr/gunit/g.g:5:22: ( Slash Close | ~ Close )*
loop1:
do {
int alt1=3;
int LA1_0 = input.LA(1);

if ( (LA1_0=='\\') ) {
int LA1_2 = input.LA(2);
if ( (LA1_2=='\"') ) {
int LA1_4 = input.LA(3);

if ( ((LA1_4>='\u0000' && LA1_4<='\uFFFE')) ) {
alt1=1;
}
else {
alt1=2;
}
}
else if ( ((LA1_0>='\u0000' && LA1_0<='!')||(LA1_0>='#' && 
LA1_0<='[')||(LA1_0>=']' && LA1_0<='\uFFFE')) ) {
alt1=2;
}
</code>

In this case (no "greedy=false" specified, single-character delimiters) 
the code generated is very different. Notice that the checks are in a 
different order, and the default is to be non-greedy (a closing 
double-quote doesn't execute ANY of the code shown, carrying alt1=3 down 
through). I don't know if this is a special-case to eliminate 
complaining newbies (like me) or if some transformation converts this to 
.* under the hood or what. But it seems like there is some clever DWIM 
code built in to ANTLR for the general case of recognizing strings with 
single-character delimiters.

Now you know -- and knowing is half the battle!

=Austin




From Austin_Hastings at Yahoo.com  Tue Nov 13 03:01:05 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 13 Nov 2007 06:01:05 -0500
Subject: [antlr-interest] Q: How do I left-factor this?
Message-ID: <473983F1.2030104@Yahoo.com>

I'm trying to lexically recognize a (recursive) block of 
code+comments+strings as a single token. I'm building the inverse of an 
island grammar -- a "hole" grammar? -- a grammar with a hole in the 
middle, like a donut. I have a rule to recognize a code block, thus:

CODE_BLOCK : NestedCodeBlock { setText(getText().substring(1, 
getText().length() - 1)); } ;

fragment MultiLineComment : '/*' .* '*/';
fragment SingleLineComment : '//' ~('\r' | '\n')* '\r'? '\n';
fragment NestedCodeBlock
    : '{'
        (options {greedy=false;}
        : MultiLineComment
        | NestedCodeBlock
        | SingleLineComment
        | QUOTED_LITERAL
        | .
        )*
      '}'
    ;

The problem is that ANTLR complains about non-LL(*) left recursion in 
alternatives 1,2 and 5, and suggests left factoring the things. I have 
found that adding option k=2 will make the problem (apparently) go away.

Can anyone tell me how I would "left factor" these things together? Is 
it just asking for help with building a predicate because the .* 
overlaps some of the others? I had thought that having the concrete '{' 
token out front would prevent any recursion issues with NestedCodeBlock. 
What did I miss?

=Austin


From andreas.bartho at inf.tu-dresden.de  Tue Nov 13 08:18:10 2007
From: andreas.bartho at inf.tu-dresden.de (Andreas Bartho)
Date: Tue, 13 Nov 2007 17:18:10 +0100
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>
Message-ID: <4739CE42.8030503@inf.tu-dresden.de>

Hi,

I had a similar problem (getting a C#-AST with comments and Preprocessor 
directives). I settled with defining 3 parsers (C#, Preprocessor, 
Comments) and merging the resulting asts.

There are some ambiguities to be solved (e.g. does a comment above the 
first statement in a method belong to the method body node, the 
StatementList node or the first statement node?), but it saves you much 
hassle in your grammar definition (as already discussed).

Andreas

Mateus Baur da Silva wrote:
> Hi Guys,
> 
> As I mentioned in some my other email, I doing a translator from a 
> Pascal subset to java. Currently, I'm ignoring the "comments" by using 
> skip() on the lexer rule that defines the "comments".
> 
> However, I would like to translate the comments from Pascal to Java code 
> as well. I was wondering if I could do that by using the HIDDEN_CHANNEL 
> or some other feature to properly translate the comments. Does someone 
> have any clue on how to do that?
> 
> Thanks in advance,
> Mateus
> 
> 


From parrt at cs.usfca.edu  Tue Nov 13 11:04:41 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Nov 2007 11:04:41 -0800
Subject: [antlr-interest] "Comments" token from source to the
	target	language
In-Reply-To: <47394B39.4050001@Yahoo.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>
	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>
	<4738F201.2000409@Yahoo.com>
	<FEFB7BA4-8CCD-4863-88E5-DE52036246E7@cs.usfca.edu>
	<47394B39.4050001@Yahoo.com>
Message-ID: <C26BCF71-3F4F-4BDB-98F7-9AB5C017D1E6@cs.usfca.edu>


On Nov 12, 2007, at 10:59 PM, Austin Hastings wrote:

> Ter,
>
> I suppose it depends on how he plans to deal with comments. But if  
> the objective is to link the comments to the nearest-entity  
> (statement, subexpression, docblock, etc.) then he's going to have  
> special case handling for comments on essentially every node of  
> *some* tree.

Hi Austin.  Turns out my mechanism is very simple.  Keep a list of  
all tokens in order.  AST nodes point into that list for their  
payload.  No node in tree for AST.  I just look into token buffer to  
get tokens to left or right of token associated with AST node. :)   
Simple.

> That is, consider:
>
> (* maybe do something *)
> if (a > 1 (* if a is set *)
>   or b > 1 (* if b is set *)
>  or c > 1) then (* or c *)
> begin
>  doSomething; (* defined in other file *)
> end
>
> The corresponding Java is, in this case, fairly straightforward.  
> But in order to map the comments correctly, he'll have to preserve  
> "shape" as well as sequence.

List<Token> works great :)  Not sure what you mean by shape.  Just as  
comments mess up input structure, they mess up tree structure.   
Remember they are part of lexical language but are NOT part of  
grammatical structure.  A crucial distinction.  It implies they  
should not alter parse tree nor AST.

Can you explain how you avoid having COMMENT? everywhere?  I'm  
actually curious to know if I've missed a cool idea.

Ter

From tim.hilgenberg at hewitt.com  Tue Nov 13 12:36:01 2007
From: tim.hilgenberg at hewitt.com (Tim Hilgenberg)
Date: Tue, 13 Nov 2007 14:36:01 -0600
Subject: [antlr-interest] Interating over a list in an AST
Message-ID: <OF6D6C7400.EB9519F6-ON86257392.00700A67-86257392.007128E6@hewitt.com>

I'm trying to figure out how to create a "for" loop around an AST node 
that has between zero and n children. I'll use the Cminus walker example.

Suppose I wanted to print out all the formal paramaters in the "function" 
definition. How do I get the following logic:

function
    :   ^(FUNC type ID formalParameter* block)
       {
        String formalParmString;
        for (... interate over "formalParamter*"...) { 
formalParameterString = formalParamterString + " "+       
$formalParameter.text }
        System.out.println("define "+$type.text+" "+$ID.text+"(" + 
formalParmString+ ")");}
    ;

formalParameter
    :   ^(ARG type ID)
    ;


 
The information contained in this e-mail and any accompanying documents may contain information that is confidential or otherwise protected from disclosure. If you are not the intended recipient of this message, or if this message has been addressed to you in error, please immediately alert the sender by reply e-mail and then delete this message, including any attachments. Any dissemination, distribution or other use of the contents of this message by anyone other than the intended recipient is strictly prohibited. All messages sent to and from this e-mail address may be monitored as permitted by applicable law and regulations to ensure compliance with our internal policies and to protect our business. Emails are not secure and cannot be guaranteed to be error free as they can be intercepted, amended, lost or destroyed, or contain viruses. You are deemed to have accepted these risks if you communicate with us by email. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071113/e09a6174/attachment.html 

From jimi at temporal-wave.com  Tue Nov 13 12:46:56 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 13 Nov 2007 12:46:56 -0800
Subject: [antlr-interest] Interating over a list in an AST
In-Reply-To: <OF6D6C7400.EB9519F6-ON86257392.00700A67-86257392.007128E6@hewitt.com>
Message-ID: <"LBC575AAFE37A4ed8A387D511CF970F19.1194986857.scalix.temporal-wave.com*"@MHS>

If you just want to print them, then put your action code against the
rule:

 

^(FUNC type ID (fp=formalParameter { System.out.println($fp.text); } )*
block)

 

Jim

 

  _____  

From: Tim Hilgenberg [mailto:tim.hilgenberg at hewitt.com] 
Sent: Tuesday, November 13, 2007 12:36 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Interating over a list in an AST

 


I'm trying to figure out how to create a "for" loop around an AST node
that has between zero and n children. I'll use the Cminus walker
example. 

Suppose I wanted to print out all the formal paramaters in the
"function" definition. How do I get the following logic: 

function 
    :   ^(FUNC type ID formalParameter* block) 
       { 
        String formalParmString; 
        for (... interate over "formalParamter*"...) {
formalParameterString = formalParamterString + " "+                     
$formalParameter.text } 
        System.out.println("define "+$type.text+" "+$ID.text+"(" +
formalParmString+ ")");} 
    ; 

formalParameter 
    :   ^(ARG type ID) 
    ; 

  _____  

The information contained in this e-mail and any accompanying documents
may contain information that is confidential or otherwise protected from
disclosure. If you are not the intended recipient of this message, or if
this message has been addressed to you in error, please immediately
alert the sender by reply e-mail and then delete this message, including
any attachments. Any dissemination, distribution or other use of the
contents of this message by anyone other than the intended recipient is
strictly prohibited. All messages sent to and from this e-mail address
may be monitored as permitted by applicable law and regulations to
ensure compliance with our internal policies and to protect our
business. Emails are not secure and cannot be guaranteed to be error
free as they can be intercepted, amended, lost or destroyed, or contain
viruses. You are deemed to have accepted these risks if you communicate
with us by email. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071113/856821aa/attachment.html 

From ohumbel at gmail.com  Tue Nov 13 14:35:07 2007
From: ohumbel at gmail.com (Oti)
Date: Tue, 13 Nov 2007 23:35:07 +0100
Subject: [antlr-interest] superClass usage
In-Reply-To: <472F8B64.5080403@paulkeir.com>
References: <472502A2.2040104@paulkeir.com>
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>
	<472F8B64.5080403@paulkeir.com>
Message-ID: <ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>

Paul,

you are talking about grammar inheritance - sorry no experience with that.
What I meant was putting most of the @member stuff, exception handling
and the like into a simple java super class.
This keeps your grammar cleaner, and simplifies unit testing.

Best wishes,
Oti.

On Nov 5, 2007 10:30 PM, Paul Keir <paul at paulkeir.com> wrote:
>
>  Thanks. But how can I use a parser rule from a grammar's superClass?
> Taking, say, the SimpleC.g Java example Grammar, I create a new test file,
> Mine.g:
>
>  grammar Mine;
>
>  options {
>    superClass=simpleCParser;
>  }
>
>  catchme
>  : variable | declarator
>  ;
>
>  When I then run,
>  java org.antlr.Tool SimpleC.g Mine.g
>  it fails due to the 'variable' and 'declarator' rules being undefined.
>
>  Thanks again,
>  Paul
>
>
>
>  Oti wrote:
>  Paul,
>
> for the parser superclass, it is really that easy as described in section
> 5.7.
> Currently there is no way of specifiying the lexer superclass. But you
> can use a package trick in Foo.g:
>
> @lexer::header {
> package my.lexer;
> }
>
> If you create a class named "Lexer" (which extends
> org.antlr.runtime.Lexer) in package my.lexer, your own Lexer will be
> the superclass. That's because ANTLR generates:
>
> package my.lexer;
> import org.antlr.runtime.*;
> public class FooLexer extends Lexer {...
>
> Hope this helps a little,
> Oti.
>
>
> On 10/28/07, Paul Keir <paul at paulkeir.com> wrote:
>
>
>  Hi all,
>
> Does anyone have an example using the superClass option described in
> section 5.7 of the ANTLR ref. book? I'd like to extend an existing
> combined grammar.
>
> Thanks in advance,
> Paul
>
>
>
>
>

From paul at paulkeir.com  Tue Nov 13 15:23:56 2007
From: paul at paulkeir.com (Paul Keir)
Date: Tue, 13 Nov 2007 23:23:56 +0000
Subject: [antlr-interest] superClass usage
In-Reply-To: <ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
References: <472502A2.2040104@paulkeir.com>	
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>	
	<472F8B64.5080403@paulkeir.com>
	<ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
Message-ID: <473A320C.6050303@paulkeir.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071113/a8f311c2/attachment.html 

From amol_bhagavat at yahoo.co.uk  Tue Nov 13 20:34:43 2007
From: amol_bhagavat at yahoo.co.uk (amol Bhagavat)
Date: Wed, 14 Nov 2007 04:34:43 +0000 (GMT)
Subject: [antlr-interest] Checking condition in a rule, set by another rule
Message-ID: <49275.72792.qm@web23204.mail.ird.yahoo.com>

Hi ,
I am developing a grammar for detecting function pointers in c code.
I want to check condition in rule1 which calls rule 2 & rule 2 changes the condition.
   
  I have wrote the grammar below which does this.
  Not able to understand , even though the rule "structurebody" returns 
true it does not executes the rule "body123". I am trying to detect if a structure has function pointer in it or not.
   
  Grammar:-----------------------
  declaration
scope {
  boolean fptrInStruct; 
}
@init {
  $declaration::fptrInStruct = false;
}
: 'struct' IDENTIFIER d=structurebody 
  {$declaration::fptrInStruct = $d.retval;}
  (
   {$declaration::fptrInStruct}?=> body123  //Useful, Store the identifier.
  |{!$declaration::fptrInStruct}?=> ';'            // No use.
  
  )
;
body123
:structureobject? ';'
;
  structurebody returns [boolean retval]
scope {boolean ContainFptr;}
 :{$structurebody::ContainFptr = false;}'{' insidestruct ( insidestruct)* '}'
 {$retval = $structurebody::ContainFptr;}  
 ;
  insidestruct 
 : stfptrDeclarationsub ';' {$structurebody::ContainFptr = true;}
 | Normal_struct_declaration
 ;
  stfptrDeclarationsub
:declaration_specifiers+ '(''*'IDENTIFIER')' '('(parameter_type_list| )')'
; 
   
  Input to the grammar:-------------------------------------

  struct ST_Tag
{
int (*fptr)(int k);
};
  main()
{
  }
   
  Pls tell me what is going wrong in the grammar....Thanks in advance.
   
  amol

       
---------------------------------
 For ideas on reducing your carbon footprint visit Yahoo! For Good this month.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071114/2d30800a/attachment-0001.html 

From pink at odahoda.de  Tue Nov 13 21:24:05 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 13 Nov 2007 21:24:05 -0800
Subject: [antlr-interest] "Comments" token from source to the target
	language
In-Reply-To: <9996fef80711130244j1120d935lb1725342347af5d2@mail.gmail.com>
References: <9996fef80711121138q5f3ae53ep7615c4be0e5a6042@mail.gmail.com>	<B766C3D4-131D-4F44-8961-710D9AFC3442@cs.usfca.edu>	<9996fef80711121613g21c7960i73aa30f59a0526d3@mail.gmail.com>	<6A812BB7-9B92-4194-928B-ABE7B50F8C87@cs.usfca.edu>
	<9996fef80711130244j1120d935lb1725342347af5d2@mail.gmail.com>
Message-ID: <fhe0pj$6dc$1@ger.gmane.org>

Mateus Baur da Silva wrote:
> Hi Ter,
> 
> I apologize if the questions are stupid and if I'm taking to long to 
> figure out this stuff. However, I'm a beginner on ANTLR and 
> languages/parsers stuff.
> 
> The problem you mentioned in the other message ("...You have must have a 
> COMMENT? subrule after every single token in case there is a comment on 
> the input stream...") is exactly what I'm trying to avoid.
> 
> I still don't understand how I can do that. What else I need to do 
> besides including the $channel=HIDDEN in the COMMENTS token? What do I 
> need to to on the parser side? Could you show me a real sample, a rule 
> having this implemented?

On the parser side you just have to put comments into another channel 
than the default (channel #0). You can have an arbitrary number of 
channels, so you can either use the HIDDEN channel and throw whitespace 
away, because keeping WS and COMMENTS in the same channel will probably 
mess things up. Or use a designated channel for comments. Channels are 
just integers with HIDDEN=100 (or was it 99?).
In your AST every node has getTokenStartIndex() and getTokenStopIndex() 
which point to the first and last token of its subtree in the token 
stream. The tree for "1 + 2" will always have 1 as start and 2 as stop 
token, no matter how the tree actually looks like. You can then get a 
list of all comment tokens anywhere within source fragment of this tree 
using CommonTokenStream.getTokens(startIndex, stopIndex, COMMENT).
So if you generate the output you can get the list of comments in all 
'meaningful' locations and output them in the 'appropriate' way - this 
heavily depends on the syntax of the output language. One thing you 
probably want is when you have a list of statements, look at the 
comments between statements, i.e. currentStmt.getTokenStopIndex()+1 ... 
nextStmt.getTokenStartIndex()-1 and emit them between the statements of 
the output language.

At least that's how I imagine it should work. A real example would be 
nice though ;)


> On Nov 12, 2007 11:19 PM, Terence Parr 
> <parrt at cs.usfca.edu 
> <mailto:parrt at cs.usfca.edu>> wrote:
> 
>     Hi. Sure.  Each token as an index into token buffer via
>     t.getTokenIndex().  Then ask for the token at index -1, -2, etc...
>     You can ask for it's channel number too.  Just scan :)
> 
>     Ter
>     On Nov 12, 2007, at 4:13 PM, Mateus Baur da Silva wrote:
> 
>      > Hi Ter,
>      >
>      > I understand that parser will ignore the tokens if I set the token
>      > to be sent to the parser thru the hidden channel ($channel=HIDDEN;).
>      >
>      > By reading your message (and your book), I know I can check the
>      > hidden channel for the comments token inside my actions. However, I
>      > don't know how to do that. Is there some sample implementing this
>      > behavior?
>      >
>      > If not, could you (or someone else) let me know how I should
>      > implement that inside my actions?
>      >
>      > Thanks and Regards,
>      > Mateus
>      >
>      >
>      > On Nov 12, 2007 8:03 PM, Terence Parr <
>     parrt at cs.usfca.edu
>     <mailto:parrt at cs.usfca.edu>> wrote:
>      >
>      > On Nov 12, 2007, at 11:38 AM, Mateus Baur da Silva wrote:
>      >
>      > > Hi Guys,
>      > >
>      > > As I mentioned in some my other email, I doing a translator from a
>      > > Pascal subset to java. Currently, I'm ignoring the "comments" by
>      > > using skip() on the lexer rule that defines the "comments".
>      > >
>      > > However, I would like to translate the comments from Pascal to
>     Java
>      > > code as well. I was wondering if I could do that by using the
>      > > HIDDEN_CHANNEL or some other feature to properly translate the
>      > > comments. Does someone have any clue on how to do that?
>      > >
>      >
>      > Yep, use the hidden token thing.  Your actions then ask for the
>      > hidden tokens between real tokens.  Parser ignores them.
>      >
>      > Ter
>      >
>      >
> 
> 


From antlr at mirality.co.nz  Tue Nov 13 22:56:15 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 14 Nov 2007 19:56:15 +1300
Subject: [antlr-interest] Q: How do I left-factor this?
In-Reply-To: <473983F1.2030104@Yahoo.com>
References: <473983F1.2030104@Yahoo.com>
Message-ID: <20071114065632.5E98F11EC8D@www.antlr.org>

At 00:01 14/11/2007, Austin Hastings wrote:
 >fragment MultiLineComment : '/*' .* '*/';
 >fragment SingleLineComment : '//' ~('\r' | '\n')* '\r'? '\n';
 >fragment NestedCodeBlock
 >    : '{'
 >        (options {greedy=false;}
 >        : MultiLineComment
 >        | NestedCodeBlock
 >        | SingleLineComment
 >        | QUOTED_LITERAL
 >        | .
 >        )*
 >      '}'
 >    ;
 >
 >The problem is that ANTLR complains about non-LL(*) left 
recursion
 >in alternatives 1,2 and 5, and suggests left factoring the 
things.
 >I have found that adding option k=2 will make the problem
 >(apparently) go away.

The only thing I can see in there that looks particularly dodgy is 
the final "." alt.  Try changing it to "~('{' | '}')" and see if 
that improves anything.


From amol_bhagavat at yahoo.co.uk  Wed Nov 14 00:36:15 2007
From: amol_bhagavat at yahoo.co.uk (amol Bhagavat)
Date: Wed, 14 Nov 2007 08:36:15 +0000 (GMT)
Subject: [antlr-interest] newbie Grammar problem
Message-ID: <684084.62714.qm@web23211.mail.ird.yahoo.com>

Hi,
   
  Please tell me will the following syantax in grammar will work
   
  mainRule
  scope {
  boolean LocalVar; 
  }
  @init
  {
  $mainRule::LocalVar = false;
  }
  : ruleA {$mainRule::LocalVar }?=> ruleB
  ;
   
  ruleA
  :IDENTIFIER {$mainRule::LocalVar = true;}
  | ruleX
  | ruleY
  ;
   
  Please tell me is this right? the mainRule should execute completly only if the condition is true.
  If this is wrong pls tell me how to achieve it?
   
  Thanks..
  
 
   

       
---------------------------------
 Yahoo! Answers - Get better answers from someone who knows. Tryit now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071114/d4695218/attachment.html 

From simone.tripodi at gmail.com  Wed Nov 14 04:22:17 2007
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Wed, 14 Nov 2007 13:22:17 +0100
Subject: [antlr-interest] Natural language analysis
Message-ID: <4173dc210711140422m3c727bb2n15ec037308a58ab4@mail.gmail.com>

Hi everybody!!!!

Could someone suggest me techniques how to realize a Natural language
analyzer, please?
I would like having a parser which is able to recognize, in a text,
patters of Addresses, Names, Cities etc etc.

I don't know nothing about this topic so I really appreciate any kind
of suggestion.
Thank you very much!

Simone

From kroepke at classdump.org  Wed Nov 14 05:32:25 2007
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 14 Nov 2007 14:32:25 +0100
Subject: [antlr-interest] superClass usage
In-Reply-To: <473A320C.6050303@paulkeir.com>
References: <472502A2.2040104@paulkeir.com>	
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>	
	<472F8B64.5080403@paulkeir.com>
	<ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
	<473A320C.6050303@paulkeir.com>
Message-ID: <218751EF-443D-47F8-A628-D606C1C4E680@classdump.org>


On Nov 14, 2007, at 12:23 AM, Paul Keir wrote:

> Thanks Oti. Yeah, I finally realised I was hoping for too much from  
> superClass. It seems like grammar inheritance is only something for  
> the antlr wishlist.


not as much as you think.
Terence has done a lot of work in that area lately.

It works differently, not by inheritance but with delegation. It's  
more like an include of a grammar. Guess he's best qualified to  
comment of what the current state is in the Java target.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From tim.hilgenberg at hewitt.com  Wed Nov 14 06:23:45 2007
From: tim.hilgenberg at hewitt.com (Tim Hilgenberg)
Date: Wed, 14 Nov 2007 08:23:45 -0600
Subject: [antlr-interest] Interating over a list in an AST
In-Reply-To: <mailman.6650.1195014891.2534.antlr-interest@antlr.org>
Message-ID: <OF5BA7E287.2D10C8C5-ON86257393.004E5230-86257393.004F144D@hewitt.com>

I'm sorry I wasn't more clear about my question. I wasn't looking to print 
the formal paramaters. I wanted to perform some action on each entry in 
the list. 

I'm trying to figure out how to create a "for" loop around an AST node 
that has between zero and n children. I'll use the Cminus walker example.

Suppose I wanted to create a new object based on each entry in the formal 
paramaters list in the "function" 
definition and add it to a list. How do I get the following logic:

function
    :   ^(FUNC type ID formalParameter* block)
       {
        List<SomeObject> formalParmList = new List<SomeObject>;
        for (... interate over "formalParamter*"...) { 
           SomeObject formalParmSomeObject = new 
SomeObject($formalParameter.text);
                formalParmList.add (formalParmSomeObject)
           }

    ;

formalParameter
    :   ^(ARG type ID)
    ;

 
The information contained in this e-mail and any accompanying documents may contain information that is confidential or otherwise protected from disclosure. If you are not the intended recipient of this message, or if this message has been addressed to you in error, please immediately alert the sender by reply e-mail and then delete this message, including any attachments. Any dissemination, distribution or other use of the contents of this message by anyone other than the intended recipient is strictly prohibited. All messages sent to and from this e-mail address may be monitored as permitted by applicable law and regulations to ensure compliance with our internal policies and to protect our business. Emails are not secure and cannot be guaranteed to be error free as they can be intercepted, amended, lost or destroyed, or contain viruses. You are deemed to have accepted these risks if you communicate with us by email. 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071114/42975804/attachment.html 

From a.shneyderman at gmail.com  Wed Nov 14 07:04:02 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 14 Nov 2007 16:04:02 +0100
Subject: [antlr-interest] Natural language analysis
In-Reply-To: <4173dc210711140422m3c727bb2n15ec037308a58ab4@mail.gmail.com>
References: <4173dc210711140422m3c727bb2n15ec037308a58ab4@mail.gmail.com>
Message-ID: <693a69ba0711140704g6dc74be9h7013a86d80205e93@mail.gmail.com>

http://www.cs.colorado.edu/~martin/slp.html
that is the "standard" NLP book.

It is quite unlike structured language parsing,


On Nov 14, 2007 1:22 PM, Simone Tripodi <simone.tripodi at gmail.com> wrote:
> Hi everybody!!!!
>
> Could someone suggest me techniques how to realize a Natural language
> analyzer, please?
> I would like having a parser which is able to recognize, in a text,
> patters of Addresses, Names, Cities etc etc.
>
> I don't know nothing about this topic so I really appreciate any kind
> of suggestion.
> Thank you very much!
>
> Simone
>



-- 
Thanks,
Alex.

From parrt at cs.usfca.edu  Wed Nov 14 08:44:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Nov 2007 08:44:40 -0800
Subject: [antlr-interest] superClass usage
In-Reply-To: <218751EF-443D-47F8-A628-D606C1C4E680@classdump.org>
References: <472502A2.2040104@paulkeir.com>	
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>	
	<472F8B64.5080403@paulkeir.com>
	<ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
	<473A320C.6050303@paulkeir.com>
	<218751EF-443D-47F8-A628-D606C1C4E680@classdump.org>
Message-ID: <CAB2543C-CAF9-4BA2-80A5-269C529E7714@cs.usfca.edu>


On Nov 14, 2007, at 5:32 AM, Kay R?pke wrote:

>
> On Nov 14, 2007, at 12:23 AM, Paul Keir wrote:
>
>> Thanks Oti. Yeah, I finally realised I was hoping for too much  
>> from superClass. It seems like grammar inheritance is only  
>> something for the antlr wishlist.
>
>
> not as much as you think.
> Terence has done a lot of work in that area lately.
>
> It works differently, not by inheritance but with delegation. It's  
> more like an include of a grammar. Guess he's best qualified to  
> comment of what the current state is in the Java target.

it should work; grab a daily...3.1 will be ready in near future.   
Waiting on target developers.

Ter


From parrt at cs.usfca.edu  Wed Nov 14 08:46:29 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Nov 2007 08:46:29 -0800
Subject: [antlr-interest] superClass usage
In-Reply-To: <473A320C.6050303@paulkeir.com>
References: <472502A2.2040104@paulkeir.com>	
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>	
	<472F8B64.5080403@paulkeir.com>
	<ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
	<473A320C.6050303@paulkeir.com>
Message-ID: <FD92AC40-8FB4-429B-B417-C775846C31C5@cs.usfca.edu>

see

http://www.antlr.org/wiki/display/~admin/2007/07/18/On+the+reuse+of 
+grammars

for my initial thoughts; i still need to write doc.
Ter
On Nov 13, 2007, at 3:23 PM, Paul Keir wrote:

> Thanks Oti. Yeah, I finally realised I was hoping for too much from  
> superClass. It seems like grammar inheritance is only something for  
> the antlr wishlist.
> Paul
>
> Oti wrote:
>> Paul,
>>
>> you are talking about grammar inheritance - sorry no experience  
>> with that.
>> What I meant was putting most of the @member stuff, exception  
>> handling
>> and the like into a simple java super class.
>> This keeps your grammar cleaner, and simplifies unit testing.
>>
>> Best wishes,
>> Oti.
>>
>> On Nov 5, 2007 10:30 PM, Paul Keir <paul at paulkeir.com> wrote:
>>
>>>  Thanks. But how can I use a parser rule from a grammar's  
>>> superClass?
>>> Taking, say, the SimpleC.g Java example Grammar, I create a new  
>>> test file,
>>> Mine.g:
>>>
>>>  grammar Mine;
>>>
>>>  options {
>>>    superClass=simpleCParser;
>>>  }
>>>
>>>  catchme
>>>  : variable | declarator
>>>  ;
>>>
>>>  When I then run,
>>>  java org.antlr.Tool SimpleC.g Mine.g
>>>  it fails due to the 'variable' and 'declarator' rules being  
>>> undefined.
>>>
>>>  Thanks again,
>>>  Paul
>>>
>>>
>>>
>>>  Oti wrote:
>>>  Paul,
>>>
>>> for the parser superclass, it is really that easy as described in  
>>> section
>>> 5.7.
>>> Currently there is no way of specifiying the lexer superclass.  
>>> But you
>>> can use a package trick in Foo.g:
>>>
>>> @lexer::header {
>>> package my.lexer;
>>> }
>>>
>>> If you create a class named "Lexer" (which extends
>>> org.antlr.runtime.Lexer) in package my.lexer, your own Lexer will be
>>> the superclass. That's because ANTLR generates:
>>>
>>> package my.lexer;
>>> import org.antlr.runtime.*;
>>> public class FooLexer extends Lexer {...
>>>
>>> Hope this helps a little,
>>> Oti.
>>>
>>>
>>> On 10/28/07, Paul Keir <paul at paulkeir.com> wrote:
>>>
>>>
>>>  Hi all,
>>>
>>> Does anyone have an example using the superClass option described in
>>> section 5.7 of the ANTLR ref. book? I'd like to extend an existing
>>> combined grammar.
>>>
>>> Thanks in advance,
>>> Paul
>>>
>>>
>>>
>>>
>>>
>>>
>>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071114/6e76cdb0/attachment-0001.html 

From hnine at isis.vanderbilt.edu  Wed Nov 14 09:36:14 2007
From: hnine at isis.vanderbilt.edu (Harmon Nine)
Date: Wed, 14 Nov 2007 11:36:14 -0600
Subject: [antlr-interest] Bug in lookahead DFA?
Message-ID: <7AB1C26C64423249964AB392C6EBF0E001705081@discovery.isis.vanderbilt.edu>

Hi.

 

I'm trying to write a parser for MatLab (without objects, classes, or
structs) and am coming across some peculiar behavior.  A portion of this
grammar that results in this behavior is at the end of this message.

 

In this grammar, I'm using a syntactic predicate to differentiate
between an assignment and expression-evaluation statements (see the
"statement" rule below).  Antlr accepts the parser definition without
error.

 

The problem occurs when the parser attempts to parse a rather simple
file:

y(1) = 0

y(1)

 

That is, it gives the error

 

line 1:5 no viable alternative at input '=' 

 

Perhaps there is an error in the parser definition, but the peculiar
thing is that when, on the "statement" rule, I reduce "k" to 2, i.e.

 

statement:

options {

  k=2;

}

            : ...

 

The parser works correctly.

 

I also tried k at various other values.  When it is set at a value of
10, I get the following message:

 

ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007

warning(205): DFABug.g:37:2: ANTLR could not analyze this decision in
rule statement; often this is because of recursive rule references
visible from the left edge of alternatives.  ANTLR will re-analyze the
decision with a fixed lookahead of k=1.  Consider using "options {k=1;}"
for that decision and possibly adding a syntactic predicate.

 

The warning message isn't really applicable, as the rule is not
recursive and already has a syntactic predicate.

 

Is this normal behavior?   I.e. when using syntactic predicates, is it
normal to have to give "k" a small finite value to get the lookahead to
work properly, rather than simply to enhance efficiency?

 

If not, how does one submit a bug report?

 

 

Here's the grammar:

parser grammar DFABug;

 

options {

//  language=C++;

  tokenVocab=DFABugTokens;

  output=AST;

}

 

delimiter

        :       null_lines empty_lines?

        |       empty_lines

        ;

 

null_lines

        :       null_line+

        ;

 

null_line

        :       empty_lines? ( COMMA | SEMI )!

        ;

 

empty_lines

        :       line+

        ;

 

line    :       ( COMMENT | NEWLINES )!

        ;

 

statement_list

        :       statement ( delimiter statement )* delimiter?

        ;

 

statement

options {

  k=2;

}

      :     (reference ASSIGN)=> reference ASSIGN^ expr

        |       expr

      ;

 

expr  :     reference

      |     INTEGER

      |     DOUBLE

      |     IMAGINARY

      |     TEXT

      ;

 

reference

      :       IDENTIFIER^ LPAREN! argument_list RPAREN!

        ;

 

argument_list

        :       expr ( COMMA! expr )*

        ;

 

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071114/dc7867c4/attachment.html 

From gbr at newtechlaw.com  Wed Nov 14 11:32:27 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 14 Nov 2007 11:32:27 -0800
Subject: [antlr-interest] newbie Grammar problem
In-Reply-To: <684084.62714.qm@web23211.mail.ird.yahoo.com>
References: <684084.62714.qm@web23211.mail.ird.yahoo.com>
Message-ID: <200711141938.lAEJcAAm024600@tach.newtechlaw.com>

At 12:36 AM 11/14/2007, amol Bhagavat wrote:
>
>
>: ruleA {$mainRule::LocalVar }?=> ruleB

Use a semantic, not gated, predicate:

: a { condition }? b ;




From paul at paulkeir.com  Wed Nov 14 12:13:31 2007
From: paul at paulkeir.com (Paul Keir)
Date: Wed, 14 Nov 2007 20:13:31 +0000
Subject: [antlr-interest] superClass usage
In-Reply-To: <218751EF-443D-47F8-A628-D606C1C4E680@classdump.org>
References: <472502A2.2040104@paulkeir.com>	
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>	
	<472F8B64.5080403@paulkeir.com>
	<ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
	<473A320C.6050303@paulkeir.com>
	<218751EF-443D-47F8-A628-D606C1C4E680@classdump.org>
Message-ID: <473B56EB.7020902@paulkeir.com>

Great, a grammar include would be perfect. I look forward to giving it a 
spin.
P

Kay R?pke wrote:
>
> On Nov 14, 2007, at 12:23 AM, Paul Keir wrote:
>
>> Thanks Oti. Yeah, I finally realised I was hoping for too much from 
>> superClass. It seems like grammar inheritance is only something for 
>> the antlr wishlist.
>
>
> not as much as you think.
> Terence has done a lot of work in that area lately.
>
> It works differently, not by inheritance but with delegation. It's 
> more like an include of a grammar. Guess he's best qualified to 
> comment of what the current state is in the Java target.
>
> cheers,
> -k

From parrt at cs.usfca.edu  Wed Nov 14 12:57:08 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 14 Nov 2007 12:57:08 -0800
Subject: [antlr-interest] superClass usage
In-Reply-To: <473B56EB.7020902@paulkeir.com>
References: <472502A2.2040104@paulkeir.com>	
	<ba90a0a90711011456u754167aej5707d4b719cbefde@mail.gmail.com>	
	<472F8B64.5080403@paulkeir.com>
	<ba90a0a90711131435k72474c00m3b4b1f05a3356d4c@mail.gmail.com>
	<473A320C.6050303@paulkeir.com>
	<218751EF-443D-47F8-A628-D606C1C4E680@classdump.org>
	<473B56EB.7020902@paulkeir.com>
Message-ID: <BA5487AF-488C-4CC1-929A-07763DA36502@cs.usfca.edu>

Grab the daily and try it out...

http://www.antlr.org/download/build/antlr-2007-10-29.14.tar.gz

Ter


From atif.azad at hotmail.com  Wed Nov 14 15:35:43 2007
From: atif.azad at hotmail.com (atif azad)
Date: Thu, 15 Nov 2007 04:35:43 +0500
Subject: [antlr-interest] I get a note when i compile  my grammer
Message-ID: <BLU105-F34A52768C506D35DBE5528E5810@phx.gbl>

Dear All

When I compile my grammer and then use the command

Javac *.java to compile the java classes I get the following message


javac  *.java

Note: Sparc2Parser.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

Then I run with Xlink option to get the following details

javac -Xlint *.java

Sparc2Parser.java:49: warning: [unchecked] unchecked call to put(K,V) as a 
member of the raw type java.util.HashMap
        super.put(attrName, value);
                 ^
Sparc2Parser.java:53: warning: [unchecked] unchecked call to put(K,V) as a 
member of the raw type java.util.HashMap
        super.put(attrName, new Integer(value));
                 ^
Sparc2Parser.java:47: warning: [serial] serializable class 
Sparc2Parser.STAttrMap has no definition of serialVersionUID
    public static class STAttrMap extends HashMap {
                  ^
Sparc2Parser.java:77: warning: [unchecked] unchecked call to push(E) as a 
member of the raw type java.util.Stack
        program_stack.push(new program_scope());




I think this is my portion of the grammer which causes this


grammar Sparc2;
options {

output=template;

}

@header {
import org.antlr.stringtemplate.*;
}

program

scope {
  List globals;
  List functions;
}
@init {
  $program::globals = new ArrayList();
  $program::functions = new ArrayList();
}
    : instructions+


-> program(globals={$program::globals},functions={$program::functions})
    ;



Can any body please help in this regard how to remove this.

Kind Regards

Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From atif.azad at hotmail.com  Wed Nov 14 15:37:45 2007
From: atif.azad at hotmail.com (atif azad)
Date: Thu, 15 Nov 2007 04:37:45 +0500
Subject: [antlr-interest] About generating classes as output
Message-ID: <BLU105-F38FAC58202E7701AE37D1FE5810@phx.gbl>

Dear All

Can I generate some classes with each one in different files as my output 
from a grammer using string template.

Regards

Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From Austin_Hastings at Yahoo.com  Wed Nov 14 16:28:54 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 14 Nov 2007 19:28:54 -0500
Subject: [antlr-interest] I get a note when i compile  my grammer
In-Reply-To: <BLU105-F34A52768C506D35DBE5528E5810@phx.gbl>
References: <BLU105-F34A52768C506D35DBE5528E5810@phx.gbl>
Message-ID: <473B92C6.3080805@Yahoo.com>

Atif,

Your [unchecked] warnings are coming because you are not using generic 
signatures on your collections. You need to declare the type signature 
you will be using for the ArrayLists, using something like "new 
ArrayList<String>();".

Your [serial] warning is complaining because you have not provided a 
unique ID method for a class that extends a serializable parent class. 
Serialization wants each class to have its own unique id.

None of these are caused by or related to ANTLR. You can find answers to 
these on the java tutorials pages on sun.com. Try googling for 
+site:sun.com +java and either serial or unchecked.

=Austin


atif azad wrote:
> Dear All
>
> When I compile my grammer and then use the command
>
> Javac *.java to compile the java classes I get the following message
>
>
> javac  *.java
>
> Note: Sparc2Parser.java uses unchecked or unsafe operations.
> Note: Recompile with -Xlint:unchecked for details.
>
> Then I run with Xlink option to get the following details
>
> javac -Xlint *.java
>
> Sparc2Parser.java:49: warning: [unchecked] unchecked call to put(K,V) 
> as a member of the raw type java.util.HashMap
>        super.put(attrName, value);
>                 ^
> Sparc2Parser.java:53: warning: [unchecked] unchecked call to put(K,V) 
> as a member of the raw type java.util.HashMap
>        super.put(attrName, new Integer(value));
>                 ^
> Sparc2Parser.java:47: warning: [serial] serializable class 
> Sparc2Parser.STAttrMap has no definition of serialVersionUID
>    public static class STAttrMap extends HashMap {
>                  ^
> Sparc2Parser.java:77: warning: [unchecked] unchecked call to push(E) 
> as a member of the raw type java.util.Stack
>        program_stack.push(new program_scope());
>
>
>
>
> I think this is my portion of the grammer which causes this
>
>
> grammar Sparc2;
> options {
>
> output=template;
>
> }
>
> @header {
> import org.antlr.stringtemplate.*;
> }
>
> program
>
> scope {
>  List globals;
>  List functions;
> }
> @init {
>  $program::globals = new ArrayList();
>  $program::functions = new ArrayList();
> }
>    : instructions+
>
>
> -> program(globals={$program::globals},functions={$program::functions})
>    ;
>
>
>
> Can any body please help in this regard how to remove this.
>
> Kind Regards
>
> Azad , Atif
>
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's 
> FREE! http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
>
>
>


From Austin_Hastings at Yahoo.com  Wed Nov 14 16:38:14 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 14 Nov 2007 19:38:14 -0500
Subject: [antlr-interest] About generating classes as output
In-Reply-To: <BLU105-F38FAC58202E7701AE37D1FE5810@phx.gbl>
References: <BLU105-F38FAC58202E7701AE37D1FE5810@phx.gbl>
Message-ID: <473B94F6.8020100@Yahoo.com>

The ANTLR parser generates a pair of classes at output:  xxxParser.java 
and xxxLexer.java, by default. This only changes if you change the 
grammar declaration at the top of the file:

lexer xxx;    // Obviously no parser
tree parser xxx; // Just generates xxx.java, obviously no lexer

Once you have built a parser, you are free to use it however you want. 
So if your "language" wants to generate multiple output files using 
string templates, you are free to do so.

=Austin


atif azad wrote:
> Dear All
>
> Can I generate some classes with each one in different files as my 
> output from a grammer using string template.
>
> Regards
>
> Azad , Atif
>
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's 
> FREE! http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
>
>
>


From clifford.heath at gmail.com  Wed Nov 14 18:18:18 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Thu, 15 Nov 2007 13:18:18 +1100
Subject: [antlr-interest] Mask shift-reduce warning?
Message-ID: <fhga9e$p8u$1@ger.gmane.org>

I have a grammar which has an unavoidable shift-reduce ambiguity,
and I'm happy with the default reduce behaviour. However, I don't
like my code to compile with expected warnings, as they tend to
mask unexpected warnings.

Can I tell ANTLR that a given (sub-)rule is known to be ambiguous
and not to warn me about it every time?

Clifford Heath.


From rschulz at sonic.net  Wed Nov 14 19:41:39 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 14 Nov 2007 19:41:39 -0800
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <fhga9e$p8u$1@ger.gmane.org>
References: <fhga9e$p8u$1@ger.gmane.org>
Message-ID: <200711141941.39317.rschulz@sonic.net>

On Wednesday 14 November 2007 18:18, Clifford Heath wrote:
> I have a grammar which has an unavoidable shift-reduce ambiguity,

Eh? Am I confused? Aren't "shift-reduce" ambiguities something that only 
occur in LR parsers?


> ...
>
> Clifford Heath.



Randall Schulz

From simone.tripodi at gmail.com  Wed Nov 14 23:48:00 2007
From: simone.tripodi at gmail.com (Simone Tripodi)
Date: Thu, 15 Nov 2007 08:48:00 +0100
Subject: [antlr-interest] Natural language analysis
In-Reply-To: <693a69ba0711140704g6dc74be9h7013a86d80205e93@mail.gmail.com>
References: <4173dc210711140422m3c727bb2n15ec037308a58ab4@mail.gmail.com>
	<693a69ba0711140704g6dc74be9h7013a86d80205e93@mail.gmail.com>
Message-ID: <4173dc210711142348ra258d42q3fd0cd208bf1f6c9@mail.gmail.com>

Hi Alex,
thanks a lot, I'll study hard!!!!
Simo

2007/11/14, Alex Shneyderman <a.shneyderman at gmail.com>:
> http://www.cs.colorado.edu/~martin/slp.html
> that is the "standard" NLP book.
>
> It is quite unlike structured language parsing,
>
>
> On Nov 14, 2007 1:22 PM, Simone Tripodi <simone.tripodi at gmail.com> wrote:
> > Hi everybody!!!!
> >
> > Could someone suggest me techniques how to realize a Natural language
> > analyzer, please?
> > I would like having a parser which is able to recognize, in a text,
> > patters of Addresses, Names, Cities etc etc.
> >
> > I don't know nothing about this topic so I really appreciate any kind
> > of suggestion.
> > Thank you very much!
> >
> > Simone
> >
>
>
>
> --
> Thanks,
> Alex.
>


-- 
My GoogleCode profile: http://code.google.com/u/simone.tripodi/
My Sourceforge: https://sourceforge.net/users/stripodi
My Picasa: http://picasaweb.google.com/simone.tripodi/
My Tube: http://www.youtube.com/user/stripodi

From clifford.heath at gmail.com  Wed Nov 14 23:49:31 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Thu, 15 Nov 2007 18:49:31 +1100
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <200711141941.39317.rschulz@sonic.net>
References: <fhga9e$p8u$1@ger.gmane.org> <200711141941.39317.rschulz@sonic.net>
Message-ID: <fhgtmb$3bg$1@ger.gmane.org>

Randall R Schulz wrote:
> On Wednesday 14 November 2007 18:18, Clifford Heath wrote:
>> I have a grammar which has an unavoidable shift-reduce ambiguity,
> Eh? Am I confused? Aren't "shift-reduce" ambiguities something that only 
> occur in LR parsers?

Oh, ok, but you know what I mean - what's the equivalent thing in LL called?
It's a situation like the if... else ambiguity, where I want the else to bind
to the closest if.

Is it possible to tell ANTLR that I know this alternative is ambiguous
and not to warn me please?

Clifford Heath.


From cummings at kjchome.homeip.net  Thu Nov 15 00:09:55 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 15 Nov 2007 03:09:55 -0500
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <fhgtmb$3bg$1@ger.gmane.org>
References: <fhga9e$p8u$1@ger.gmane.org> <200711141941.39317.rschulz@sonic.net>
	<fhgtmb$3bg$1@ger.gmane.org>
Message-ID: <473BFED3.5000504@kjchome.homeip.net>

Clifford Heath wrote:
> Randall R Schulz wrote:
>> On Wednesday 14 November 2007 18:18, Clifford Heath wrote:
>>> I have a grammar which has an unavoidable shift-reduce ambiguity,
>> Eh? Am I confused? Aren't "shift-reduce" ambiguities something that
>> only occur in LR parsers?
> 
> Oh, ok, but you know what I mean - what's the equivalent thing in LL
> called?
> It's a situation like the if... else ambiguity, where I want the else to
> bind
> to the closest if.
> 
> Is it possible to tell ANTLR that I know this alternative is ambiguous
> and not to warn me please?

That's what syntactic predicates do.  If you can view far enough ahead
to see what you want, you can avoid ANTLR doing the "wrong" thing.

> Clifford Heath.


-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From clifford.heath at gmail.com  Thu Nov 15 01:10:24 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Thu, 15 Nov 2007 20:10:24 +1100
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <473BFED3.5000504@kjchome.homeip.net>
References: <fhga9e$p8u$1@ger.gmane.org>
	<200711141941.39317.rschulz@sonic.net>	<fhgtmb$3bg$1@ger.gmane.org>
	<473BFED3.5000504@kjchome.homeip.net>
Message-ID: <fhh2e2$hd5$1@ger.gmane.org>

Kevin J. Cummings wrote:
> That's what syntactic predicates do.  If you can view far enough ahead
> to see what you want, you can avoid ANTLR doing the "wrong" thing.

Perhaps. But in this case, either alternative is ok, and the chosen one
especially so, and I can't look far enough ahead anyhow (using k=5), so
I just want to hide the warning. It's a kind-of awkward grammar, as it
has a strong natural-language element in parts:

reading: role+;

role: quantifier? word+ ( '(' 'as' ID ')' )? (literal | restriction )?;

word: ID | <various keywords not in their keyword contexts>;

You see that role can eat up any number of successive words, and so can
a reading (and I'd be able to cope if it did anyhow); but a quantifier
always starts a new word group and 'as' or a literal or a restriction
always ends one.

I have to walk through the words doing various complex symbol-table
matching to resolve the word groups (which is why I can cope either way),
but that's something I do after parsing the whole reading. The grammar
works, but emits warning that will make it hard to see new ones I might
cause. It's worse because all the contextual keywords that can be a
"word" get a separate warning.

Clifford Heath.


From jaluber at gmx.de  Thu Nov 15 03:27:25 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 15 Nov 2007 12:27:25 +0100
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <fhh2e2$hd5$1@ger.gmane.org>
References: <fhga9e$p8u$1@ger.gmane.org>	<200711141941.39317.rschulz@sonic.net>	<fhgtmb$3bg$1@ger.gmane.org>	<473BFED3.5000504@kjchome.homeip.net>
	<fhh2e2$hd5$1@ger.gmane.org>
Message-ID: <473C2D1D.5060305@gmx.de>

Clifford Heath wrote:
> Kevin J. Cummings wrote:
>> That's what syntactic predicates do.  If you can view far enough ahead
>> to see what you want, you can avoid ANTLR doing the "wrong" thing.
> 
> Perhaps. But in this case, either alternative is ok, and the chosen one
> especially so, and I can't look far enough ahead anyhow (using k=5), so
> I just want to hide the warning.

For now there is no capability to hide a warning. I don't know if 3.1
includes it or at earliest 3.2.

Johannes

From dave at badgers-in-foil.co.uk  Thu Nov 15 05:24:53 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 15 Nov 2007 13:24:53 +0000
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <fhga9e$p8u$1@ger.gmane.org>
References: <fhga9e$p8u$1@ger.gmane.org>
Message-ID: <20071115132452.GA15118@badgers-in-foil.co.uk>

On Thu, Nov 15, 2007 at 01:18:18PM +1100, Clifford Heath wrote:
> I have a grammar which has an unavoidable shift-reduce ambiguity,
> and I'm happy with the default reduce behaviour. However, I don't
> like my code to compile with expected warnings, as they tend to
> mask unexpected warnings.
> 
> Can I tell ANTLR that a given (sub-)rule is known to be ambiguous
> and not to warn me about it every time?

I do this, just to get rid of the warning,

  ifStatement
	:	IF^ condition statement
		((ELSE)=>elseClause)?
	;

ta,
dave

-- 
http://david.holroyd.me.uk/

From jimi at temporal-wave.com  Thu Nov 15 08:38:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Nov 2007 08:38:42 -0800
Subject: [antlr-interest] Mask shift-reduce warning?
In-Reply-To: <fhh2e2$hd5$1@ger.gmane.org>
Message-ID: <"H0000067000119c8.1195144629.scalix.temporal-wave.com*"@MHS>

I think that just ((word)=>word)+ will make your warning go away as this 
should emphatically state that you want to consume the word there. 

However, have you considered that as all the other elements of your role 
rule are optional, that you could just remove the plus from word and 
this will match a whole series of role rules instead? Of course if you 
want the whole 
qualifier word word word as XXX 

to match a single role rule, then that would not work as that would 
give:

role -> qualifier word
role -> word
role -> word as XXX


Jim

-----Original Message-----
From: Clifford Heath [mailto:clifford.heath at gmail.com] 
Sent: Thursday, November 15, 2007 1:10 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Mask shift-reduce warning?

Kevin J. Cummings wrote:
> That's what syntactic predicates do.  If you can view far enough ahead
> to see what you want, you can avoid ANTLR doing the "wrong" thing.

Perhaps. But in this case, either alternative is ok, and the chosen one
especially so, and I can't look far enough ahead anyhow (using k=5), so
I just want to hide the warning. It's a kind-of awkward grammar, as it
has a strong natural-language element in parts:

reading: role+;

role: quantifier? word+ ( '(' 'as' ID ')' )? (literal | restriction )?;

word: ID | <various keywords not in their keyword contexts>;

You see that role can eat up any number of successive words, and so can
a reading (and I'd be able to cope if it did anyhow); but a quantifier
always starts a new word group and 'as' or a literal or a restriction
always ends one.

I have to walk through the words doing various complex symbol-table
matching to resolve the word groups (which is why I can cope either 
way),
but that's something I do after parsing the whole reading. The grammar
works, but emits warning that will make it hard to see new ones I might
cause. It's worse because all the contextual keywords that can be a
"word" get a separate warning.

Clifford Heath.




From atif.azad at hotmail.com  Thu Nov 15 10:12:31 2007
From: atif.azad at hotmail.com (atif azad)
Date: Thu, 15 Nov 2007 23:12:31 +0500
Subject: [antlr-interest] count number of times a rule is called
Message-ID: <BLU105-F2639F95A274F511DDFFC2DE5820@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071115/b84acb17/attachment.html 

From atif.azad at hotmail.com  Thu Nov 15 10:13:13 2007
From: atif.azad at hotmail.com (atif azad)
Date: Thu, 15 Nov 2007 23:13:13 +0500
Subject: [antlr-interest] About generating classes as output
In-Reply-To: <473B94F6.8020100@Yahoo.com>
Message-ID: <BLU105-F29AA1F7ABDDAE31E74C7DBE5820@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071115/ad1b0b74/attachment.html 

From antlr at mirality.co.nz  Thu Nov 15 11:01:45 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 16 Nov 2007 08:01:45 +1300
Subject: [antlr-interest] count number of times a rule is called
In-Reply-To: <BLU105-F2639F95A274F511DDFFC2DE5820@phx.gbl>
References: <BLU105-F2639F95A274F511DDFFC2DE5820@phx.gbl>
Message-ID: <20071115190159.47AED11EBF3@www.antlr.org>

At 07:12 16/11/2007, atif azad wrote:
>I want to count the number fo times a rule is called for a 
>certain input file.
>Does any body has an idea how to do it in the simplest way.

Declare a variable in @members, then increment it in an action 
every time you reach the rule in question. 


From hnine at isis.vanderbilt.edu  Thu Nov 15 12:06:59 2007
From: hnine at isis.vanderbilt.edu (Harmon Nine)
Date: Thu, 15 Nov 2007 14:06:59 -0600
Subject: [antlr-interest] count number of times a rule is called
In-Reply-To: <BLU105-F2639F95A274F511DDFFC2DE5820@phx.gbl>
References: <BLU105-F2639F95A274F511DDFFC2DE5820@phx.gbl>
Message-ID: <7AB1C26C64423249964AB392C6EBF0E001705193@discovery.isis.vanderbilt.edu>

Atif --

 

(Someone pls. correct if wrong)

 

At the top of the parser ".g" file, define a public property for your
parser class:

 

@members {

  public int rule_exec_count = 0;

}

 

Then, in the rule in question, increment this property using an embedded
action:

 

myrule   :  { rule_exec_count++; } <rule body> ;

 

When the parsing is done, you can access the public member
"rule_exec_count" using the "parser" object in your driver:

 

MyParser parser = new MyParser( lexer );

parser.start_rule();

...

System.out.println( "myrule was called " + parser.rule_exec_count + "
times." );

 

HTH

-- Harmon

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of atif azad
Sent: Thursday, November 15, 2007 12:13 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] count number of times a rule is called

 

Dear all

 

I want to count the number fo times a rule is called for a certain input
file.

Does any body has an idea how to do it in the simplest way.

 

regards

Azad , Atif

 




________________________________

Express yourself instantly with MSN Messenger! MSN Messenger
<http://g.msn.com/8HMAEN/2737??PS=47575>  Download today it's FREE!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071115/1eddbc54/attachment.html 

From OJAY78 at gmx.de  Fri Nov 16 00:23:16 2007
From: OJAY78 at gmx.de (OJAY78 at gmx.de)
Date: Fri, 16 Nov 2007 09:23:16 +0100
Subject: [antlr-interest] how to check if a optional token exists or not ??
Message-ID: <20071116082316.26310@gmx.net>

Hi,

I stuck on a small Problem. I have this rule with an optional token meta. In the Java Code I want to check if this token is null or not so that I can call a other method. But this check of the meta token will result in a nullpointer exception. Does anyone know how I can solve this? How can I check the meta token?

Thanks

valueType returns[StringObject value]
	:'value' ',' rv=function_parameter (',' meta=valueMetaType)?
	{
	
	String valName = $rv.value;
	FormValue fv = formInstance.getFormValue( valName 
		
		if( fv == null ) {
			log.debug("VALUE TYPE: Feld ist leer");
			$value = new StringObject("",null,null);
		}
		else {
			if ($meta.text == null){
			$value = new StringObject(fv.getFieldValue().toString(),fv,valName);
			}
			else{
			 $value=FELHelper.getFormValueMeta(fv,$meta.text);
			}
		}

	}
	;
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From zulfiqar.malik at gmail.com  Fri Nov 16 00:44:55 2007
From: zulfiqar.malik at gmail.com (Zulfiqar Malik)
Date: Fri, 16 Nov 2007 08:44:55 +0000 (GMT)
Subject: [antlr-interest] Link to call me for free
Message-ID: <29231147.1171451195202695855.JavaMail.tomcat@media1.jaxtr.com>



I am using jaxtr, and if you also sign up, we

-Zulfiqar

P.S. Here is the link to sign up: http://www.jaxtr.com/user/ticket?n=To9xegljwk0fz&type=joininvite

---
Delivered by jaxtr, Inc., 855 Oak Grove Avenue, Suite 100, Menlo Park, California 94025. To stop receiving messages from this sender go to http://www.jaxtr.com/user/reportabuse.jsp?it=To9xegljwk0fz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071116/a29fbf81/attachment.html 

From Austin_Hastings at Yahoo.com  Fri Nov 16 00:44:16 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Fri, 16 Nov 2007 03:44:16 -0500
Subject: [antlr-interest] how to check if a optional token exists or not
 ??
In-Reply-To: <20071116082316.26310@gmx.net>
References: <20071116082316.26310@gmx.net>
Message-ID: <473D5860.2060408@Yahoo.com>

In java, ANTLR creates a named variable for each label you use. Check 
for meta == null, without using a '$' sign.

if (meta != null)

=Austin

OJAY78 at gmx.de wrote:
> Hi,
>
> I stuck on a small Problem. I have this rule with an optional token meta. In the Java Code I want to check if this token is null or not so that I can call a other method. But this check of the meta token will result in a nullpointer exception. Does anyone know how I can solve this? How can I check the meta token?
>
> Thanks
>
> valueType returns[StringObject value]
> 	:'value' ',' rv=function_parameter (',' meta=valueMetaType)?
> 	{
> 	
> 	String valName = $rv.value;
> 	FormValue fv = formInstance.getFormValue( valName 
> 		
> 		if( fv == null ) {
> 			log.debug("VALUE TYPE: Feld ist leer");
> 			$value = new StringObject("",null,null);
> 		}
> 		else {
> 			if ($meta.text == null){
> 			$value = new StringObject(fv.getFieldValue().toString(),fv,valName);
> 			}
> 			else{
> 			 $value=FELHelper.getFormValueMeta(fv,$meta.text);
> 			}
> 		}
>
> 	}
> 	;
>   


From kreaper666 at hotmail.com  Fri Nov 16 03:06:15 2007
From: kreaper666 at hotmail.com (=?iso-8859-1?Q?Bj=F6rn_=3F=3F=3F?=)
Date: Fri, 16 Nov 2007 11:06:15 +0000
Subject: [antlr-interest] Line and column information
Message-ID: <BAY127-W383E5F85970ED0AB58FFDC83830@phx.gbl>


Hi, 


We got a problem with our compiler.
What I want is to get the line and column information from it.

temptest :
    e1:equation s1:SEMICOLON!
    {
        #temptest = #([EQUATION_STATEMENT,"EQUATION_STATEMENT"], #temptest);        

        RefMyAST(#temptest)->setEndLine((#s1)->getLine()); // working
        RefMyAST(#temptest)->setEndColumn((#s1)->getColumn()); // working
/* This will not be correct since we don't know what e1 will look like and most likely the top tree node will not be first char.
        RefMyAST(#temptest)->setLine((#e1)->getLine());
        RefMyAST(#temptest)->setColumn((#e1)->getColumn());
*/
    }
    ;
    equation : 
        (   (simple_expression EQUALS) => tmp:equality_equation 
        |   /**some more matching...**/
        )
        {
            if(#tmp){
                RefMyAST(#equation)->setLine((#tmp)->getLine());
                RefMyAST(#equation)->setColumn((#tmp)->getColumn());
            }
            
        }

here we do have a problem, tmp->getline will not give the leftmost character.


That is the code.
What i want is in "temptest : matching" to get the position of the first character. 
So i get the start from there and the end from the semicolon, the semicolon is working.
But I can't figure out how to get the start-information.
if i recursivly return the line & column information i can go to "(simple_expression EQUALS) => tmp:equality_equation" at that predicate it will get messed up for some reason. I can't get the simple_expression position.

But preferebly I would like to get the start from


temptest :

    e1:equation s1:SEMICOLON!


Have any ideas ? 

 --Bj?rn Zachrisson 

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE!
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071116/ab98ad3a/attachment.html 

From jaluber at gmx.de  Fri Nov 16 03:17:14 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 16 Nov 2007 12:17:14 +0100
Subject: [antlr-interest] how to check if a optional token exists or not
 ??
In-Reply-To: <473D5860.2060408@Yahoo.com>
References: <20071116082316.26310@gmx.net> <473D5860.2060408@Yahoo.com>
Message-ID: <473D7C3A.6070902@gmx.de>

Austin Hastings wrote:
> In java, ANTLR creates a named variable for each label you use. Check
> for meta == null, without using a '$' sign.
> 
> if (meta != null)

I'd like to add that in 3.1 the check for null is done automatically for
you. The original code will work then fine.

Johannes

From lor.dv at tiscali.it  Fri Nov 16 04:18:28 2007
From: lor.dv at tiscali.it (Lorenzo Dalla Vecchia)
Date: Fri, 16 Nov 2007 13:18:28 +0100
Subject: [antlr-interest] Error in generated tree parser with rewrite rules
	- possible bug?
Message-ID: <B6A4F0C7DD19497EAFCFEDA779AB9923@Atlantis>

Hi.

I've built a simple tree parser to parse a tree and rewrite it (so the output is also a tree).


tree grammar MyGrammar;

options {
 output       = AST;
 ASTLabelType = CommonTree;
}

tokens {
 ...some tokens used for rewrite...
}

...parser rules... with tree rewrite (new 3.0 syntax)


ANTLR Tool compiles the grammar correctly, but the resulting Java file has several errors.

- if I don't rewrite all rules, many errors "The method create(Token) in the type TreeAdaptor is not applicable for the arguments (CommonTree)"

- even after putting rewrite rules everywhere, each rule method has an error "retval.stop cannot be resolved or is not a field", inside a adaptor.setToeknBoundaries call

- if I comment out the setTokenBoundaries calls in the generated code, I get runtime ClassCastException about trying to cast CommonTree to token

What could be the issue? May it be a bug in tree parsers with AST output?
Thanks.

--
Lorenzo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071116/7da3f9d6/attachment-0001.html 

From myeates at jpl.nasa.gov  Fri Nov 16 13:26:12 2007
From: myeates at jpl.nasa.gov (Mathew Yeates)
Date: Fri, 16 Nov 2007 13:26:12 -0800
Subject: [antlr-interest] very simple beginner question
Message-ID: <473E0AF4.4090608@jpl.nasa.gov>

Hi
I recently downloaded antlr-3.0.1.jar. This file is now located in my 
C:\Downloads directory. I want to run
java antlr.Tool t.g

What do I have to do to get this to run?

Thanks
Mathew



From jimi at temporal-wave.com  Fri Nov 16 14:07:33 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Nov 2007 14:07:33 -0800
Subject: [antlr-interest] how to check if a optional token exists or not
	??
In-Reply-To: <473D5860.2060408@Yahoo.com>
Message-ID: <"H000006700011d50.1195248168.scalix.temporal-wave.com*"@MHS>

No - you should no start to build action the reference the internally 
generated variable names. If the format or names of these change, you 
will be in all sorts of trouble. That's one of the reasons for the 
dollar syntax.

The way to do this (in the absence of being able to use $meta) is to use 
a local Boolean intialized to false, and then set the boolean to true in 
an action after valueMetaType. Then test your Boolean.

Jim

-----Original Message-----
From: Austin Hastings [mailto:Austin_Hastings at Yahoo.com] 
Sent: Friday, November 16, 2007 12:44 AM
To: OJAY78 at gmx.de
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] how to check if a optional token exists or 
not ??

In java, ANTLR creates a named variable for each label you use. Check 
for meta == null, without using a '$' sign.

if (meta != null)

=Austin

OJAY78 at gmx.de wrote:
> Hi,
>
> I stuck on a small Problem. I have this rule with an optional token 
meta. In the Java Code I want to check if this token is null or not so 
that I can call a other method. But this check of the meta token will 
result in a nullpointer exception. Does anyone know how I can solve 
this? How can I check the meta token?
>
> Thanks
>
> valueType returns[StringObject value]
> 	:'value' ',' rv=function_parameter (',' meta=valueMetaType)?
> 	{
> 	
> 	String valName = $rv.value;
> 	FormValue fv = formInstance.getFormValue( valName 
> 		
> 		if( fv == null ) {
> 			log.debug("VALUE TYPE: Feld ist leer");
> 			$value = new StringObject("",null,null);
> 		}
> 		else {
> 			if ($meta.text == null){
> 			$value = new 
StringObject(fv.getFieldValue().toString(),fv,valName);
> 			}
> 			else{
> 			 $value=FELHelper.getFormValueMeta(fv,$meta.text);
> 			}
> 		}
>
> 	}
> 	;
>   




From dave at badgers-in-foil.co.uk  Fri Nov 16 15:45:14 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 16 Nov 2007 23:45:14 +0000
Subject: [antlr-interest] very simple beginner question
In-Reply-To: <473E0AF4.4090608@jpl.nasa.gov>
References: <473E0AF4.4090608@jpl.nasa.gov>
Message-ID: <20071116234514.GA7741@badgers-in-foil.co.uk>

On Fri, Nov 16, 2007 at 01:26:12PM -0800, Mathew Yeates wrote:
> I recently downloaded antlr-3.0.1.jar. This file is now located in my 
> C:\Downloads directory. I want to run
> java antlr.Tool t.g
> 
> What do I have to do to get this to run?

java -classpath C:\Downloads\antlr-3.0.1.jar org.antlr.Tool t.g


ta,
dave

-- 
http://david.holroyd.me.uk/

From myeates at jpl.nasa.gov  Fri Nov 16 15:58:12 2007
From: myeates at jpl.nasa.gov (Mathew Yeates)
Date: Fri, 16 Nov 2007 15:58:12 -0800
Subject: [antlr-interest] Looking for a fortran grammar for antlr 3.0
Message-ID: <473E2E94.9000509@jpl.nasa.gov>

Hi
Has anybody got this? There is a Fortran grammar floating around but it 
is for Antlr 2. How difficult is it to update an existing Antlr 2 
grammar (for a beginner)?

Mathew



From cummings at kjchome.homeip.net  Fri Nov 16 16:07:44 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 16 Nov 2007 19:07:44 -0500
Subject: [antlr-interest] Looking for a fortran grammar for antlr 3.0
In-Reply-To: <473E2E94.9000509@jpl.nasa.gov>
References: <473E2E94.9000509@jpl.nasa.gov>
Message-ID: <473E30D0.3050002@kjchome.homeip.net>

Mathew Yeates wrote:
> Hi
> Has anybody got this? There is a Fortran grammar floating around but it
> is for Antlr 2. How difficult is it to update an existing Antlr 2
> grammar (for a beginner)?

For which incarnation of FORTRAN?  I've seen some example grammars in
the PCCTS stuff (ANTLR 1), but if you need specific ANSI release
support, you may have to role your own or at least extend it.  My
company at the time (10+ years ago) was working on both an F77 and an
F90(?) grammar, but it is lost to the free world, buried under
copyrights and inherited by the company that bought out Peritus Software
Services.  FORTRAN also has some unique parsing requirements depending
on whether you are parsing the columized language or the free form
language, so that you can separate embedded keywords from run-on
identifiers.

> Mathew

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From myeates at jpl.nasa.gov  Fri Nov 16 16:14:43 2007
From: myeates at jpl.nasa.gov (Mathew Yeates)
Date: Fri, 16 Nov 2007 16:14:43 -0800
Subject: [antlr-interest] Looking for a fortran grammar for antlr 3.0
In-Reply-To: <473E30D0.3050002@kjchome.homeip.net>
References: <473E2E94.9000509@jpl.nasa.gov>
	<473E30D0.3050002@kjchome.homeip.net>
Message-ID: <473E3273.4000401@jpl.nasa.gov>

I'm looking for a vanilla f77 grammar.

Kevin J. Cummings wrote:
> Mathew Yeates wrote:
>   
>> Hi
>> Has anybody got this? There is a Fortran grammar floating around but it
>> is for Antlr 2. How difficult is it to update an existing Antlr 2
>> grammar (for a beginner)?
>>     
>
> For which incarnation of FORTRAN?  I've seen some example grammars in
> the PCCTS stuff (ANTLR 1), but if you need specific ANSI release
> support, you may have to role your own or at least extend it.  My
> company at the time (10+ years ago) was working on both an F77 and an
> F90(?) grammar, but it is lost to the free world, buried under
> copyrights and inherited by the company that bought out Peritus Software
> Services.  FORTRAN also has some unique parsing requirements depending
> on whether you are parsing the columized language or the free form
> language, so that you can separate embedded keywords from run-on
> identifiers.
>
>   
>> Mathew
>>     
>
>   



From surifilms at gmail.com  Fri Nov 16 17:51:23 2007
From: surifilms at gmail.com (Surinder Jain)
Date: Sat, 17 Nov 2007 11:51:23 +1000
Subject: [antlr-interest] Antlr v3.0.1 installation issue on Windows XP
Message-ID: <9df049670711161751u2a932aaax9406480d717fb7f5@mail.gmail.com>

Any ideas why my ANTLR is not working?


I have downloaded antlr-3.0.1.jar from antlr website and copied it into
e:\antlr-3.0.1 directory.  I have created a sample T.g as given on page 29
of ANTLR definitive book.

However when I run java and antrl on T.g I get an error as follows :



E:\antlr-3.0.1>java org.antlr.Tool T.g
Exception in thread "main" java.lang.NoClassDefFoundError:
org/antlr/stringtempl
ate/StringTemplateErrorListener
        at org.antlr.Tool.main(Tool.java:67)

E:\antlr-3.0.1>


 My T.g is :

grammar T;

/** Match things like "call foo;" */

r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;

ID: 'a'..'z' + ;

WS: (' ' |'\n' |'\r' )+ {$channel=HIDDEN;} ; // ignore whitespace



Surinder Jain
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071117/91a49ef0/attachment.html 

From Austin_Hastings at Yahoo.com  Fri Nov 16 15:17:53 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Fri, 16 Nov 2007 18:17:53 -0500
Subject: [antlr-interest] very simple beginner question
In-Reply-To: <473E0AF4.4090608@jpl.nasa.gov>
References: <473E0AF4.4090608@jpl.nasa.gov>
Message-ID: <473E2521.90305@Yahoo.com>

Read "How do I install this damn thing?" on www.antlr.org:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=728


=Austin


Mathew Yeates wrote:
> Hi
> I recently downloaded antlr-3.0.1.jar. This file is now located in my 
> C:\Downloads directory. I want to run
> java antlr.Tool t.g
>
> What do I have to do to get this to run?
>
> Thanks
> Mathew
>
>
>
>


From pink at odahoda.de  Fri Nov 16 19:06:55 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri, 16 Nov 2007 19:06:55 -0800
Subject: [antlr-interest] Error in generated tree parser with rewrite
 rules - possible bug?
In-Reply-To: <B6A4F0C7DD19497EAFCFEDA779AB9923@Atlantis>
References: <B6A4F0C7DD19497EAFCFEDA779AB9923@Atlantis>
Message-ID: <fhllsd$r14$1@ger.gmane.org>

Hi Lorenzo,

Lorenzo Dalla Vecchia wrote:
> I've built a simple tree parser to parse a tree and rewrite it (so the 
> output is also a tree).

Are you using the upcoming V3.1? 3.0 does not support treeparsers with 
output=AST.

> tree grammar MyGrammar;
>  
> options {
>  output       = AST;
>  ASTLabelType = CommonTree;
> }
>  
> tokens {
>  ...some tokens used for rewrite...
> }
> 
> ...parser rules... with tree rewrite (new 3.0 syntax)
>  
>  
> ANTLR Tool compiles the grammar correctly, but the resulting Java file 
> has several errors.
>  
> - if I don't rewrite all rules, many errors "The method create(Token) in 
> the type TreeAdaptor is not applicable for the arguments (CommonTree)"
>  
> - even after putting rewrite rules everywhere, each rule method has an 
> error "retval.stop cannot be resolved or is not a field", inside a 
> adaptor.setToeknBoundaries call
>  
> - if I comment out the setTokenBoundaries calls in the generated code, I 
> get runtime ClassCastException about trying to cast CommonTree to token
>  
> What could be the issue? May it be a bug in tree parsers with AST output?
> Thanks.


From pink at odahoda.de  Fri Nov 16 19:19:12 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri, 16 Nov 2007 19:19:12 -0800
Subject: [antlr-interest] Antlr v3.0.1 installation issue on Windows XP
In-Reply-To: <9df049670711161751u2a932aaax9406480d717fb7f5@mail.gmail.com>
References: <9df049670711161751u2a932aaax9406480d717fb7f5@mail.gmail.com>
Message-ID: <fhlmjg$t7p$1@ger.gmane.org>

Hi Surinder,

Surinder Jain wrote:
> Any ideas why my ANTLR is not working?
>  
>  
> I have downloaded antlr-3.0.1.jar from antlr website and copied it into 
> e:\antlr-3.0.1 directory.  I have created a sample T.g as given on page 
> 29 of ANTLR definitive book.
>  
> However when I run java and antrl on T.g I get an error as follows :
>  
> 
> 
> E:\antlr-3.0.1>java org.antlr.Tool T.g
> Exception in thread "main" java.lang.NoClassDefFoundError: 
> org/antlr/stringtempl
> ate/StringTemplateErrorListener
>         at org.antlr.Tool.main(Tool.java :67)
> 
> E:\antlr-3.0.1>

You'll also need stringtemplate and antlr2 jars in your CLASSPATH. These 
are included in the source tarball (lib directory).


HTH


From Austin_Hastings at Yahoo.com  Fri Nov 16 22:10:21 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 17 Nov 2007 01:10:21 -0500
Subject: [antlr-interest] BUG: Incorrect token name (AMPERSAND) used in
	antlr.g
Message-ID: <473E85CD.4070907@Yahoo.com>

The antlr.g file currently available from fisheye2.cenqua.com defines 
this token:

AMPERSAND : '@';

And uses it extensively, e.g., 

/** Match stuff like @parser::members {int i;} */
action
	:	AMPERSAND^ (actionScopeName COLON! COLON!)? id ACTION
	;


In point of fact, an ampersand is this character: '&'.

The '@' character is known as a "commercial at" or an "at sign", and may 
also be referred to as an "arroba", an "ana" or an "???" (greek: alpha 
nu alpha-with-accent). I'd recomment the "arroba" usage - it is 
distinctive, easily pronounced, unlikely to be confused when spoken, and 
has a certain gravitas appropriate for discussing such a popular character.

FMTYEWTK about this symbol is available at 
http://en.wikipedia.org/wiki/At_sign

Pedantically yours,

=Austin

From Austin_Hastings at Yahoo.com  Fri Nov 16 22:25:38 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sat, 17 Nov 2007 01:25:38 -0500
Subject: [antlr-interest] Help: What does this mean?
Message-ID: <473E8962.1070508@Yahoo.com>

I get this warning:

   [antlr3] warning(200): 
/home/austin/gunit/sources/org/antlr/gunit/TestSuite.g:504:51: Decision 
can match input such as "'&&'" using multiple alternatives: 1, 2
   [antlr3] As a result, alternative(s) 2 were disabled for that input


For this code:

outputExpr_and returns [Assertion assertion]
    : op1=outputExpr_primary ('&&' op2=outputExpr_and)*
      {
        if (op2 == null)
        {
            $assertion = $op1.assertion;
        }
        else
        {
            $assertion = new Conjunction($op1.start, $op2.stop);
            $assertion.addClauses($op1.assertion, $op2.assertion);
        }
      }
    ;

I don't see two alternatives, unless the * is considered an alternative 
somehow. The 'outputExpr_primary' production is always something 
concrete, either a parenthesized subexpression or a list of keywords - 
never empty. So (1) what are "alternatives 1,2" for this case; and (2) 
how could I display them - is there a "painfully verbose" antlr switch I 
don't know about?

Thanks,

=Austin


From jaluber at gmx.de  Sat Nov 17 02:53:53 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 17 Nov 2007 11:53:53 +0100
Subject: [antlr-interest] Help: What does this mean?
In-Reply-To: <473E8962.1070508@Yahoo.com>
References: <473E8962.1070508@Yahoo.com>
Message-ID: <473EC841.6070304@gmx.de>

Austin Hastings wrote:
> I get this warning:
> 
>   [antlr3] warning(200):
> /home/austin/gunit/sources/org/antlr/gunit/TestSuite.g:504:51: Decision
> can match input such as "'&&'" using multiple alternatives: 1, 2
>   [antlr3] As a result, alternative(s) 2 were disabled for that input
> 
> 
> For this code:
> 
> outputExpr_and returns [Assertion assertion]
>    : op1=outputExpr_primary ('&&' op2=outputExpr_and)*
>      {
>        if (op2 == null)
>        {
>            $assertion = $op1.assertion;
>        }
>        else
>        {
>            $assertion = new Conjunction($op1.start, $op2.stop);
>            $assertion.addClauses($op1.assertion, $op2.assertion);
>        }
>      }
>    ;
> 
> I don't see two alternatives, unless the * is considered an alternative
> somehow. The 'outputExpr_primary' production is always something
> concrete, either a parenthesized subexpression or a list of keywords -
> never empty. So (1) what are "alternatives 1,2" for this case; and (2)
> how could I display them - is there a "painfully verbose" antlr switch I
> don't know about?

The problem is that the two alternatives come up with interaction of
other rules. outputExpr_primary seems to be able to expand itself to
include '&&'. But without a full grammar I can't help you further. Use
ANTLRworks's Check Grammar facility to get a better idea of the cause.
In the worst case you have to use backtrack='true'; option (try local
first).

Johannes

From jbb at acm.org  Sat Nov 17 06:13:54 2007
From: jbb at acm.org (John B. Brodie)
Date: Sat, 17 Nov 2007 09:13:54 -0500
Subject: [antlr-interest] Help: What does this mean?
In-Reply-To: <473E8962.1070508@Yahoo.com> (message from Austin Hastings on
	Sat, 17 Nov 2007 01:25:38 -0500)
References: <473E8962.1070508@Yahoo.com>
Message-ID: <E1ItOQj-0001VN-VH@gecko.home.org>

Hello

Austin Hastings asked:
>I get this warning:
>
>   [antlr3] warning(200): 
>/home/austin/gunit/sources/org/antlr/gunit/TestSuite.g:504:51: Decision 
>can match input such as "'&&'" using multiple alternatives: 1, 2
>   [antlr3] As a result, alternative(s) 2 were disabled for that input
>
>
>For this code:
>
>outputExpr_and returns [Assertion assertion]
>    : op1=outputExpr_primary ('&&' op2=outputExpr_and)*
...snipped...
>    ;
>
>I don't see two alternatives, unless the * is considered an alternative 
>somehow. The 'outputExpr_primary' production is always something 
>concrete, either a parenthesized subexpression or a list of keywords - 
>never empty. So (1) what are "alternatives 1,2" for this case; and (2) 
>how could I display them - is there a "painfully verbose" antlr switch I 
>don't know about?

Yes the * operator generates 2 alternatives. Think about what * means
e.g. "zero or more occurances". There must be some kind of choice
(alternative) in there somewhere.

these two rules are equivalent:

repeat : ( item )* ;
recurse : /*empty*/ | item recurse ;

i believe that ANTLR replaces * with its recursive equivalent during
its analysis.

In your rule you have both recursion and repetition and is thus
ambiguous. E.g. when the next oE_primary is seen after the '&&', we do
not know wheter to recurse starting a new oE_and or to continue
the repetition of the current oE_and.

You should probably either do

outputExpr_and : outputExpr_primary ( '&&' outputExpr_and )? ;

or

outputExpr_and : outputExpr_primary ( '&&' outputExpr_primary )* ;

HTH
   -jbb

From stevagewp at gmail.com  Sat Nov 17 07:52:31 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 18 Nov 2007 02:52:31 +1100
Subject: [antlr-interest] Syntactic and semantic predicates don't work in
	ANTLRWork's "interpreter"?
Message-ID: <b8ceeef70711170752g2e695c7cjb7504d9e67b92d4a@mail.gmail.com>

Hi all,
  (First post!) I'm enjoying playing with ANTLRWorks but seem to have just
hit a gotcha. I spent hours trying to work out how to use syntactic and
semantic predicates, and finally it seems that the problem is just that the
Interpreter doesn't support them. Is that true? Perhaps it could just say so
rather than make the user tear their hair out...

Here's my grammar, just in case I'm missing something:
---
grammar magicword;

f : t ('|' option)*;
option : (magicword '|') => magicword
| t;

t : LETTER;

magicword
: 'magicword';

LETTER : ('a'..'z' | 'A'..'Z')+;
---

I honestly thought I just hadn't understand syntactic predicates for ages,
then on a whim tried the debugger...and it actually worked.

Anyway, hi, everyone! Looking forward to learning ANTLR a lot better and
making sure I get my head around all these constructs. Apart from the book
and the wiki, are there any other good resources that would help answer
questions like "I need to parse X, what's the best way to do it?"

Steve
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071118/d62ccf08/attachment.html 

From stevagewp at gmail.com  Sat Nov 17 08:13:03 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 18 Nov 2007 03:13:03 +1100
Subject: [antlr-interest] Newbie Q: does grammar tree structure matter?
Message-ID: <b8ceeef70711170813i40fec9b1nb6f8ea8f7ce2e88d@mail.gmail.com>

Hi all,
  Question as I think about designing a grammar: how much does the
resulting tree structure matter? For example, a rule like X: P+; will
create a horizontal tree, whereas X:P X?; will create deep nesting. Is
it a bad idea to design around the idea of trying to avoid this sort
of nesting? Should I just use recursion whenever convenient? Is trying
to keep the tree pretty a total waste of time? :)

The project will be a pretty big and complicated markup->HTML translator.

Thanks all,
Steve

From jaluber at gmx.de  Sat Nov 17 09:18:27 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 17 Nov 2007 18:18:27 +0100
Subject: [antlr-interest] Syntactic and semantic predicates don't work
 in	ANTLRWork's "interpreter"?
In-Reply-To: <b8ceeef70711170752g2e695c7cjb7504d9e67b92d4a@mail.gmail.com>
References: <b8ceeef70711170752g2e695c7cjb7504d9e67b92d4a@mail.gmail.com>
Message-ID: <473F2263.9040809@gmx.de>

Steve Bennett wrote:
> Hi all,
>   (First post!) I'm enjoying playing with ANTLRWorks but seem to have
> just hit a gotcha. I spent hours trying to work out how to use syntactic
> and semantic predicates, and finally it seems that the problem is just
> that the Interpreter doesn't support them. Is that true? Perhaps it
> could just say so rather than make the user tear their hair out...
> 
> Here's my grammar, just in case I'm missing something:
> ---
> grammar magicword;
> 
> f : t ('|' option)*;
> option : (magicword '|') => magicword
> | t;
> 
> t : LETTER;
> 
> magicword
> : 'magicword';
> 
> LETTER : ('a'..'z' | 'A'..'Z')+;
> ---
> 
> I honestly thought I just hadn't understand syntactic predicates for
> ages, then on a whim tried the debugger...and it actually worked.

The interpreter ignores predicates. That may or may not change, but
should be documented somewhere.

> Anyway, hi, everyone! Looking forward to learning ANTLR a lot better and
> making sure I get my head around all these constructs. Apart from the
> book and the wiki, are there any other good resources that would help
> answer questions like "I need to parse X, what's the best way to do it?"

The posted grammars may be useful, too, if they happen to include the
required case. Otherwise just ask - usually people will know tips or
links or books about the subject at hand.

Johannes


From jaluber at gmx.de  Sat Nov 17 09:33:04 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 17 Nov 2007 18:33:04 +0100
Subject: [antlr-interest] Newbie Q: does grammar tree structure matter?
In-Reply-To: <b8ceeef70711170813i40fec9b1nb6f8ea8f7ce2e88d@mail.gmail.com>
References: <b8ceeef70711170813i40fec9b1nb6f8ea8f7ce2e88d@mail.gmail.com>
Message-ID: <473F25D0.9020603@gmx.de>

Steve Bennett wrote:
> Hi all,
>   Question as I think about designing a grammar: how much does the
> resulting tree structure matter? For example, a rule like X: P+; will
> create a horizontal tree, whereas X:P X?; will create deep nesting. Is
> it a bad idea to design around the idea of trying to avoid this sort
> of nesting? Should I just use recursion whenever convenient? Is trying
> to keep the tree pretty a total waste of time? :)

I was the opinion that without using the '^'-symbol or an explicit
rewrite the output will be always a flat list. Otherwise some examples
in the book wouldn't make sense. As I haven't done much with tree output
yet, I can't say for sure but make is it to mimic the grammar structure
in the tree. It makes creating a tree grammar easier. I would deviate
from the input grammar structure, if using extra subtrees for ordering
and adding semantic information is useful for later processing.

> The project will be a pretty big and complicated markup->HTML translator.

I suggest to create a syntactic parser for the first pass, if you
require a global view over the input files. This will result in a
superset over the language, which you have to check in a semantic parse
later, but allows you to accommodate for common errors better.

Johannes

From jimi at temporal-wave.com  Sat Nov 17 09:34:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 17 Nov 2007 09:34:09 -0800
Subject: [antlr-interest] Help: What does this mean?
In-Reply-To: <473E8962.1070508@Yahoo.com>
Message-ID: <"L23CD1BF0250B4c5dBB9ADD495F559B54.1195320902.scalix.temporal-wave.com*"@MHS>

I would suggest that you replace your uses of 'literal' with LEXER 
specified tokens, then analyze this grammar with ANTLRWorks. This will 
give you a visual representation of your issue. 

However it looks like this is part of an expression tree and that you 
have mis-constructed it. Take a look at any of the expression trees in 
the example grammars such as Java and this may help you get your 
expression tree in order. This rule looks likely to be not quite what 
you think it is ;-)

Jim

-----Original Message-----
From: Austin Hastings [mailto:Austin_Hastings at Yahoo.com] 
Sent: Friday, November 16, 2007 10:26 PM
To: antlr-interest
Subject: [antlr-interest] Help: What does this mean?

I get this warning:

   [antlr3] warning(200): 
/home/austin/gunit/sources/org/antlr/gunit/TestSuite.g:504:51: Decision 
can match input such as "'&&'" using multiple alternatives: 1, 2
   [antlr3] As a result, alternative(s) 2 were disabled for that input


For this code:

outputExpr_and returns [Assertion assertion]
    : op1=outputExpr_primary ('&&' op2=outputExpr_and)*
      {
        if (op2 == null)
        {
            $assertion = $op1.assertion;
        }
        else
        {
            $assertion = new Conjunction($op1.start, $op2.stop);
            $assertion.addClauses($op1.assertion, $op2.assertion);
        }
      }
    ;

I don't see two alternatives, unless the * is considered an alternative 
somehow. The 'outputExpr_primary' production is always something 
concrete, either a parenthesized subexpression or a list of keywords - 
never empty. So (1) what are "alternatives 1,2" for this case; and (2) 
how could I display them - is there a "painfully verbose" antlr switch I 

don't know about?

Thanks,

=Austin




From gbr at newtechlaw.com  Sat Nov 17 17:49:31 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat, 17 Nov 2007 17:49:31 -0800
Subject: [antlr-interest] Problem catching parser termination errors
Message-ID: <200711180149.lAI1nmIJ009763@tach.newtechlaw.com>

In building an AntlrV3-based Eclipse editor for editing AntlrV3 
grammars, I have run across a bit of a problem supporting grammar 
error markers at the point of failure in the parsing a grammar file.

Specifically, if one of the elements of a rule is a subrule that does 
not itself exist as a defined rule, the *default* exception handling 
of the parser appears to just silently fail the parse -- I can find 
no RecognitionException or other exceptions being generated that 
would indicate the point of failure or reason for failure, both being 
desirable to visually identify the grammar error in the editor.  I 
have overridden BaseRecognizer#displayRecognitionError, but that only 
seems to yield missing Token and no viable alternative-type exceptions.

Have I missed an over-rideable routine that would yield this parser 
failure point information?

Currently, the editor's model is being built using an unmodified copy 
of the AntlrV3.g3 grammar (thanks, Ter!).  Aside from this one 
problem, I have been able to get everything I need to support the 
editor without touching the grammar and, for obvious maintenance 
reasons, would prefer to keep it that way.

(If anyone is interested, a page describing the editor is at 
www.certiv.net/products/antlrdt.html -- download is at 
www.certiv.net/download/certiv-antlrdt-0.10.33.zip - it is at an 
unreleased/alpha quality level, with syntax highlighting g3 editor, 
marginally smart indenter and accelerators, outline view, and 
builder.  The only guarantee is that there are bugs -- feedback welcome.)
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071117/838fa401/attachment.html 

From autophile at zoominternet.net  Sat Nov 17 18:20:53 2007
From: autophile at zoominternet.net (Robert Baruch)
Date: Sat, 17 Nov 2007 21:20:53 -0500
Subject: [antlr-interest] What to override to prevent error recovery?
Message-ID: <9263A9F6-8A5B-4532-81AC-86139D0A0D3F@zoominternet.net>

Hi all,

I have a grammar (v3) that looks like this:

grammar arguments;

format
	:	integerFormat EOF
	;
	
integerFormat
	:	'integer'
	|	'integer' 'in' '[' INT? ',' INT? ']'
	;
	
INT	:	'0'..'9'+ ;
WS	:	(' '|'\t')+ {skip();} ;


I am generating Java code.

If I have input "integergarbage", the parser will happily return after  
printing several lines like this:

line 1:7 no viable alternative at character 'g'

I figured out that I could override the Lexer's reportError method,  
set a "fail" boolean, and check that on return.

However, that does not solve the problem where input "integer in" also  
happily returns after printing:

BR.recoverFromMismatchedToken
line 0:-1 mismatched input '<EOF>' expecting '['


 From the source code of BaseRecognizer, this appears to be an error  
recovery technique to insert an "obvious" missing token or to delete a  
"spurious" extra token. I don't want my parser to do that. I want my  
parser to complain loudly and then keel over. I am not sure which  
method(s) I need to override in the Parser for that to happen. Any help?

Thanks,

--Rob

PS, where can I run a search on the mailing list archive?

From atif.azad at hotmail.com  Thu Nov 15 16:54:06 2007
From: atif.azad at hotmail.com (atif azad)
Date: Fri, 16 Nov 2007 05:54:06 +0500
Subject: [antlr-interest] count number of times a rule is called
In-Reply-To: <7AB1C26C64423249964AB392C6EBF0E001705193@discovery.isis.vanderbilt.edu>
Message-ID: <BLU105-F23EE22544593027423F41DE5830@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071116/ab98906b/attachment.html 

From stevagewp at gmail.com  Sat Nov 17 21:51:43 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 18 Nov 2007 16:51:43 +1100
Subject: [antlr-interest] "Tokens"
Message-ID: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>

Hi all,
  I was wondering if someone could explain exactly what the "tokens"
keyword does. The book (4.4)  doesn't really explain how it differs
from a series of lexer rules.

For example, what's the difference between this:

tokens {
  FOO='FOO';
}

and just this:

FOO: 'FOO';

The book says that this construct "allows you to provide an alias for
a string literal" - but how is that different to just defining a
normal lexer rule?

Also, how exactly do normal string literals operate? Is there a
difference between this:

r: foo '!';

and:

r: foo EXCLAMATION;
EXCLAMATION: '!';

?

Thanks all,
Steve (frustrated by lack of fine detail in the doc atm)

From stevagewp at gmail.com  Sat Nov 17 21:56:15 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 18 Nov 2007 16:56:15 +1100
Subject: [antlr-interest] What to override to prevent error recovery?
In-Reply-To: <9263A9F6-8A5B-4532-81AC-86139D0A0D3F@zoominternet.net>
References: <9263A9F6-8A5B-4532-81AC-86139D0A0D3F@zoominternet.net>
Message-ID: <b8ceeef70711172156u772605e8mf51d4ad0062e003@mail.gmail.com>

> PS, where can I run a search on the mailing list archive?

Try this:
http://www.google.com/search?q=reporterror+site%3Aantlr.org

Steve

From jaluber at gmx.de  Sun Nov 18 03:22:35 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 18 Nov 2007 12:22:35 +0100
Subject: [antlr-interest] "Tokens"
In-Reply-To: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>
Message-ID: <4740207B.6090100@gmx.de>

Steve Bennett wrote:
> Hi all,
>   I was wondering if someone could explain exactly what the "tokens"
> keyword does. The book (4.4)  doesn't really explain how it differs
>>from a series of lexer rules.
> 
> For example, what's the difference between this:
> 
> tokens {
>   FOO='FOO';
> }
> 
> and just this:
> 
> FOO: 'FOO';
> 
> The book says that this construct "allows you to provide an alias for
> a string literal" - but how is that different to just defining a
> normal lexer rule?

In the case above the only advantage is that rules defined in the
tokens-command have a higher priority than the normal defined rules in
case of some ambiguity like between identifiers and keywords. You don't
have to take care of the order as in the "FOO: 'FOO';"-case, but you
can't use additional actions.

> Also, how exactly do normal string literals operate? Is there a
> difference between this:
> 
> r: foo '!';
> 
> and:
> 
> r: foo EXCLAMATION;
> EXCLAMATION: '!';
> 
> ?

For combined parsers you can use both definitions - but do not mix them
like

r: foo '!';
l: bar EXCLAMATION;
EXCLAMATION: '!';

'!' won't be translated to an EXCLAMATION, but to e.g. Token23, so you
have then a MismatchException for r or for l, depending on the priority
between EXCLAMATION and Token23. Personally I would use '!' instead
EXCLAMATION, as it seems clearer to me. In the case of separated parsers
you have to use the EXCLAMATION-style, as ANTLR won't allow literals in
pure parser or tree parser grammars. It would have to generate a second
lexer in that case and as only one lexer is used to split the input
stream, the second wouldn't be ever executed.

Johannes

From stevagewp at gmail.com  Sun Nov 18 07:49:17 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 19 Nov 2007 02:49:17 +1100
Subject: [antlr-interest] "Tokens"
In-Reply-To: <4740207B.6090100@gmx.de>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>
	<4740207B.6090100@gmx.de>
Message-ID: <b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>

On 11/18/07, Johannes Luber <jaluber at gmx.de> wrote:
> '!' won't be translated to an EXCLAMATION, but to e.g. Token23, so you
> have then a MismatchException for r or for l, depending on the priority
> between EXCLAMATION and Token23. Personally I would use '!' instead
> EXCLAMATION, as it seems clearer to me. In the case of separated parsers
> you have to use the EXCLAMATION-style, as ANTLR won't allow literals in
> pure parser or tree parser grammars. It would have to generate a second
> lexer in that case and as only one lexer is used to split the input
> stream, the second wouldn't be ever executed.

Thanks for that explanation. I guess it would probably be preferable
to do something like this:

minus: '-';
hyphen: '-';

so that you can refer to the same token by either name without
stuffing anything else up.

Incidentally, is there a way to visualise the tokenisation in
ANTLRWorks? I seem to have so many problems with tokens, it would be
great to just see the definitive list of how everything has been
broken up. I guess it shouldn't be too hard for me to just add a dump
from the TokenStream in my java test rig, too...

Steve (who's spent the whole day struggling with some lexing issues
before finally stumbling on a way of using a semantic predicate with
this code:   boolean textis(String mw) {  return
input.LT(1).getText().equalsIgnoreCase(mw);  } )

From jaluber at gmx.de  Sun Nov 18 09:40:22 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 18 Nov 2007 18:40:22 +0100
Subject: [antlr-interest] "Tokens"
In-Reply-To: <b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>	
	<4740207B.6090100@gmx.de>
	<b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>
Message-ID: <47407906.8050403@gmx.de>

Steve Bennett wrote:
> On 11/18/07, Johannes Luber <jaluber at gmx.de> wrote:
> Thanks for that explanation. I guess it would probably be preferable
> to do something like this:
> 
> minus: '-';
> hyphen: '-';

Not with the lowercase names though. ;)

> so that you can refer to the same token by either name without
> stuffing anything else up.
> 
> Incidentally, is there a way to visualise the tokenisation in
> ANTLRWorks? I seem to have so many problems with tokens, it would be
> great to just see the definitive list of how everything has been
> broken up. I guess it shouldn't be too hard for me to just add a dump
>>from the TokenStream in my java test rig, too...

AFAIK, there is no way. Not that it would be usable for other targets
than Java, thus limiting the usefulness - unless remote debugging would
support it.

Johannes

From myeates at jpl.nasa.gov  Sun Nov 18 10:39:51 2007
From: myeates at jpl.nasa.gov (Mathew Yeates)
Date: Sun, 18 Nov 2007 10:39:51 -0800
Subject: [antlr-interest] book P1 versus P2
Message-ID: <474086F7.5040100@jpl.nasa.gov>

Hi
I went out and bought the book without realizing there was a second 
printing. How much in P2 is missing from P1?

Mathew



From jaluber at gmx.de  Sun Nov 18 10:52:10 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 18 Nov 2007 19:52:10 +0100
Subject: [antlr-interest] book P1 versus P2
In-Reply-To: <474086F7.5040100@jpl.nasa.gov>
References: <474086F7.5040100@jpl.nasa.gov>
Message-ID: <474089DA.7050207@gmx.de>

Mathew Yeates wrote:
> Hi
> I went out and bought the book without realizing there was a second
> printing. How much in P2 is missing from P1?
> 
> Mathew
> 
> 

I believe the difference is only the inclusion of additional errata and
no extra material. But Ter knows it best.

Johannes

From antlr at mirality.co.nz  Sun Nov 18 11:29:07 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Nov 2007 08:29:07 +1300
Subject: [antlr-interest] "Tokens"
In-Reply-To: <47407906.8050403@gmx.de>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>
	<4740207B.6090100@gmx.de>
	<b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>
	<47407906.8050403@gmx.de>
Message-ID: <20071118192927.4F32911EC6C@www.antlr.org>

At 06:40 19/11/2007, Johannes Luber wrote:
 >> minus: '-';
 >> hyphen: '-';
 >
 >Not with the lowercase names though. ;)

Actually yes; there's no way you can successfully do that with 
uppercase names (lexer rules).  The above is equivalent to this:

minus: MINUS;
hyphen: MINUS;
MINUS: '-';

which will work fine (though it's a bit unusual).  Writing the 
original as lexer rules, though, would result in two ambiguous 
tokens and things would break.

Incidentally, I prefer using explicitly named tokens (whether 
through rules or the tokens section); not only does this generate 
better output (you get MINUS instead of Token12) but it makes it 
easier to get a sense of the separate lexing stage that is going 
on, and it's harder to stuff things up.  I don't use literals 
anywhere in my parser for that reason.


From antlr at mirality.co.nz  Sun Nov 18 11:34:20 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Nov 2007 08:34:20 +1300
Subject: [antlr-interest] "Tokens"
In-Reply-To: <b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.co
 m>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>
	<4740207B.6090100@gmx.de>
	<b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>
Message-ID: <20071118193434.D3BA411EC85@www.antlr.org>

At 04:49 19/11/2007, Steve Bennett wrote:
 >Incidentally, is there a way to visualise the tokenisation in
 >ANTLRWorks? I seem to have so many problems with tokens, it 
would
 >be great to just see the definitive list of how everything has
 >been broken up. I guess it shouldn't be too hard for me to just
 >add a dump from the TokenStream in my java test rig, too...

Sadly not.  I've often wished for this as well, but for now the 
best approach is to write a simple test harness in your target 
language that takes a given input file, runs it through the lexer, 
and spits out the list of tokens thus generated.

My normal strategy is to concentrate on the lexing part first 
(especially since ANTLR has some weird quirks in that area), and 
only start working on the parser once I'm certain that the lexer 
is doing the right things.

It's also a good idea to hook this in to a test harness so that 
you can write unit tests that guarantee your token output for 
given input text; this way you won't accidentally break things 
later on.


From parrt at cs.usfca.edu  Sun Nov 18 11:50:43 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Nov 2007 11:50:43 -0800
Subject: [antlr-interest] book P1 versus P2
In-Reply-To: <474089DA.7050207@gmx.de>
References: <474086F7.5040100@jpl.nasa.gov> <474089DA.7050207@gmx.de>
Message-ID: <672DFDFB-AF34-4E59-83BD-1898A623E635@cs.usfca.edu>

Yep, just fixed typos. no new material.  One tree was mis-shapen,  
errata should specify issues.

Ter
On Nov 18, 2007, at 10:52 AM, Johannes Luber wrote:

> Mathew Yeates wrote:
>> Hi
>> I went out and bought the book without realizing there was a second
>> printing. How much in P2 is missing from P1?
>>
>> Mathew
>>
>>
>
> I believe the difference is only the inclusion of additional errata  
> and
> no extra material. But Ter knows it best.
>
> Johannes


From stevagewp at gmail.com  Sun Nov 18 14:47:55 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 19 Nov 2007 09:47:55 +1100
Subject: [antlr-interest] "Tokens"
In-Reply-To: <47407906.8050403@gmx.de>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>
	<4740207B.6090100@gmx.de>
	<b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>
	<47407906.8050403@gmx.de>
Message-ID: <b8ceeef70711181447r559c57dem86e015a8f8dbb70d@mail.gmail.com>

On 11/19/07, Johannes Luber <jaluber at gmx.de> wrote:
> Steve Bennett wrote:
> > On 11/18/07, Johannes Luber <jaluber at gmx.de> wrote:
> > Thanks for that explanation. I guess it would probably be preferable
> > to do something like this:
> >
> > minus: '-';
> > hyphen: '-';
>
> Not with the lowercase names though. ;)

Why not? I was under the impression that a given piece of text will be
labelled as exactly one kind of token, so this wouldn't work:

MINUS: '-';
HYPHEN: '-';

Every '-' would be a MINUS. Whereas by making minus/hyphen parser
rules, every '-' would just be a '-' at the lexer level, but could be
either a minus or a hyphen at the parser level?

(err, I see Gavin agrees with me - should have read first :))

> AFAIK, there is no way. Not that it would be usable for other targets
> than Java, thus limiting the usefulness - unless remote debugging would
> support it.

Pity, but thanks.

Steve

From jaluber at gmx.de  Sun Nov 18 15:05:39 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 19 Nov 2007 00:05:39 +0100
Subject: [antlr-interest] "Tokens"
In-Reply-To: <b8ceeef70711181447r559c57dem86e015a8f8dbb70d@mail.gmail.com>
References: <b8ceeef70711172151v63379470t906dc3745d21430f@mail.gmail.com>	<4740207B.6090100@gmx.de>	<b8ceeef70711180749w1dc45074u199b8a257552ac2f@mail.gmail.com>	<47407906.8050403@gmx.de>
	<b8ceeef70711181447r559c57dem86e015a8f8dbb70d@mail.gmail.com>
Message-ID: <4740C543.4050304@gmx.de>

Steve Bennett wrote:
> On 11/19/07, Johannes Luber <jaluber at gmx.de> wrote:
>> Not with the lowercase names though. ;)
> 
> Why not? I was under the impression that a given piece of text will be
> labelled as exactly one kind of token, so this wouldn't work:
> 
> MINUS: '-';
> HYPHEN: '-';
> 
> Every '-' would be a MINUS. Whereas by making minus/hyphen parser
> rules, every '-' would just be a '-' at the lexer level, but could be
> either a minus or a hyphen at the parser level?
> 
> (err, I see Gavin agrees with me - should have read first :))

I've misread your intent - I overlooked the identical literals.
Nonetheless I was under the impression that ANTLR doesn't like parser
rules with only literals. I am wrong in that regard?

Johannes

From stevagewp at gmail.com  Sun Nov 18 15:50:35 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 19 Nov 2007 10:50:35 +1100
Subject: [antlr-interest] Inline StringTemplates - sample?
Message-ID: <b8ceeef70711181550h62dc2a0bg7cadfc0d048b5f07@mail.gmail.com>

Hi all,
  I'm trying to find a simple "hello world" version of a grammar that
uses inline stringtemplates, with associated test rig. The book is
frustratingly brief on inline stringtemplates, and doesn't give any
java code - only for stringtemplates defined with an external file,
and using a tree grammar.

Here's my grammar:
---
grammar st1;
options {output=template;}

start	:	text;

CHARS	:	('a'..'z' | ' ' | ('\r'? '\'n'))+;
text	:	CHARS -> template(x={$CHARS.text}) "[<x>]";
---

and here's my test rig:
---
import org.antlr.runtime.*;

public class Main {
    public static void main(String[] args) throws Exception {
        ANTLRInputStream input = new ANTLRInputStream(System.in);
        st1Lexer lexer = new st1Lexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        st1Parser parser = new st1Parser(tokens);
        parser.start();
    }
}
---

Obviously I need to add something (currently it outputs nothing), but
what? I do have stringtemplate-3.0.jar on the CLASSPATH.

Also, question 2: what is the correct way to express a rule outputting
a stringtemplate that is composed of some literal text and its
children's stringtemplates. For example, a "bold" rule needs to output
<b>, followed by whatever its children output, followed by </b>. The
examples mostly use child.$text which obviously isn't right, as it's
not the child's raw text that I want to output, but their transformed
text...

Thanks very much for any help,
Steve

From yotommy at gmail.com  Sun Nov 18 16:55:03 2007
From: yotommy at gmail.com (Tom Smith)
Date: Sun, 18 Nov 2007 19:55:03 -0500
Subject: [antlr-interest] Inline StringTemplates - sample?
In-Reply-To: <b8ceeef70711181550h62dc2a0bg7cadfc0d048b5f07@mail.gmail.com>
References: <b8ceeef70711181550h62dc2a0bg7cadfc0d048b5f07@mail.gmail.com>
Message-ID: <82dc0d190711181655q7dacc6f4r5504a4316fc7039f@mail.gmail.com>

I have a couple of days experience with stringtemplate, so I'll take a
go at this:

> public class Main {
>     public static void main(String[] args) throws Exception {
>         ANTLRInputStream input = new ANTLRInputStream(System.in);
>         st1Lexer lexer = new st1Lexer(input);
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>         st1Parser parser = new st1Parser(tokens);
>         parser.start();
>     }
> }
> ---
>
> Obviously I need to add something (currently it outputs nothing), but
> what? I do have stringtemplate-3.0.jar on the CLASSPATH.

You need to get the template output from the parser via code like:

st1Parser.start_return r = parser.start();
StringTemplate output = r.getTemplate();
System.out.println(output.toString());

See java code in section 9.6 of the book for an example test rig.

> Also, question 2: what is the correct way to express a rule outputting
> a stringtemplate that is composed of some literal text and its
> children's stringtemplates. For example, a "bold" rule needs to output
> <b>, followed by whatever its children output, followed by </b>. The
> examples mostly use child.$text which obviously isn't right, as it's
> not the child's raw text that I want to output, but their transformed
> text...

I think you are looking for $child.st instead of $child.text.

Hope this helps,
Tom.

From stevagewp at gmail.com  Sun Nov 18 18:55:52 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 19 Nov 2007 13:55:52 +1100
Subject: [antlr-interest] Context-sensitive lexing
Message-ID: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>

Hi all,
  What's the general solution when you need to switch lexers
midstream? In the classic C case, for example, an asm {...} block
lexes and parses differently from normal code. A "mov" would be a
special token inside the asm block, but would be nothing in particular
outside it.

How can you handle this? I seem to recall there is a way to switch
individual lexer rules on and off dynamically (like a predicate), but
can't find it in the book. Even if there is, what do you do if you
need information at the parser information to recognise the situation?

I ask because the wikitext I'm parsing has a wide range of vocabulary
depending on the context. In normal text, almost anything goes. In an
image tag, lots of words have special meanings. In a table, suddenly
|- is a special token. In a template call, | is special. If I can't
actually tokenise any of these things (because they don't have meaning
everywhere), I seem to be back to testing regular expressions on
input.LT(1).getText() ?

I gather that most programming languages don't have this drama,
because there are generally two lexing situations: normal text, where
{ and -> are special tokens, or strings/comments, where /* blah -> {
blah */ is treated as a single token. But what would you do if you
wanted to actually parse the contents of that comment, rather than
making it a monolithic token?

It would be really nice to simply have two separate lexers, and switch
between them as needed. Is this possible?

Thanks all for any suggestions,
Steve

From parrt at cs.usfca.edu  Sun Nov 18 21:46:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 18 Nov 2007 21:46:27 -0800
Subject: [antlr-interest] Inline StringTemplates - sample?
In-Reply-To: <b8ceeef70711181550h62dc2a0bg7cadfc0d048b5f07@mail.gmail.com>
References: <b8ceeef70711181550h62dc2a0bg7cadfc0d048b5f07@mail.gmail.com>
Message-ID: <5B38DD36-19B7-4786-98B1-C0D5AC923D31@cs.usfca.edu>


On Nov 18, 2007, at 3:50 PM, Steve Bennett wrote:
> uses inline stringtemplates, with associated test rig. The book is
> frustratingly brief on inline stringtemplates, and doesn't give any
> java code - only for stringtemplates defined with an external file,
> and using a tree grammar.

Sorry about that.  My experience is that separate files are much  
better strategically.

Ter

From mikearace at hotmail.com  Sun Nov 18 23:08:51 2007
From: mikearace at hotmail.com (Mike Arace)
Date: Mon, 19 Nov 2007 02:08:51 -0500
Subject: [antlr-interest] Can't get += working
Message-ID: <BAY118-W1364D6C0A1F49641A29346B17E0@phx.gbl>


Hi guys,

I'm running into a problem with Antlr involving the List += syntax.

Say I have the following example rules:  

//------------------------

buildList : 'PROPERTY' 'LIST' 'IS' prop+=listObject (',' prop+=listObject )*;

listObject returns [String name, String value] : n=ObjectName '=' v=StringLiteral { $name = $n.text; $value = $v.text; }

StringLiteral :  '\'' (~'\'')* '\'' ( '\'' (~'\'')* '\'' )*;

ObjectName : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' )*;
  

//-------------------------

Using the Java target, Antlr creates a static class called listObject_return that wraps the two return values of the listObjectRule, as well as a StringTemplate.  For the buildList rule, it creates a List called list_prop to hold the listObject values assigned using the += syntax, and a temporary variable called prop that holds the current value as it parses each of the elements.  

My problem is this:

I assume that each of the elements of list_prop would be of type listObject_return, but that is not the case.  Instead, it creates a new listObject_return and correctly assigns the name and value properties within the listObject rule, and then runs prop.getTemplate() within buildList and adds that value to list_prop.  In my rule, this value is always null.

Given the rules above, how could I access name and value in listObject_return  object from within buildList? 

Best Regards,
Mike

_________________________________________________________________
Share life as it happens with the new Windows Live.Download today it's FREE!
http://www.windowslive.com/share.html?ocid=TXT_TAGLM_Wave2_sharelife_112007
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071119/48b8d937/attachment.html 

From stevagewp at gmail.com  Sun Nov 18 23:32:54 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 19 Nov 2007 18:32:54 +1100
Subject: [antlr-interest] Inline StringTemplates - sample?
In-Reply-To: <5B38DD36-19B7-4786-98B1-C0D5AC923D31@cs.usfca.edu>
References: <b8ceeef70711181550h62dc2a0bg7cadfc0d048b5f07@mail.gmail.com>
	<5B38DD36-19B7-4786-98B1-C0D5AC923D31@cs.usfca.edu>
Message-ID: <b8ceeef70711182332j5acc40ffnda6484c0b4297dc6@mail.gmail.com>

On 11/19/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Sorry about that.  My experience is that separate files are much
> better strategically.

That's fine, I agree, and really expect to be doing it that way
eventually.  I'm just trying to learn the features one at a time.

Incidentally, I just came across this:
http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html

which I found really helpful on the lexer side of things. You've
obviously written a lot of interesting stuff on ANTLR which I need to
work my way through.

Steve

From antlr at mirality.co.nz  Sun Nov 18 23:35:58 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Nov 2007 20:35:58 +1300
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.co
 m>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
Message-ID: <20071119073617.3B28011EAC4@www.antlr.org>

At 15:55 19/11/2007, Steve Bennett wrote:
 >  What's the general solution when you need to switch lexers
 >midstream? In the classic C case, for example, an asm {...} 
block
 >lexes and parses differently from normal code. A "mov" would be 
a
 >special token inside the asm block, but would be nothing in
 >particular outside it.

Ko, have a look at the "island grammars" example.  And remember 
that since lexing occurs before parsing, you can't use any parser 
context to influence this changeover.

 >In normal text, almost anything goes. In an image tag,
 >lots of words have special meanings. In a table, suddenly
 >|- is a special token. In a template call, | is special. If I
 >can't actually tokenise any of these things (because they
 >don't have meaning everywhere), I seem to be back to testing
 >regular expressions on input.LT(1).getText() ?

Not necessarily.  You can tokenise them as barebones (eg. PIPE and 
HYPHEN) and then figure out whether it means something special in 
the parser.  You'll need to be careful though if you're creating 
any hidden or off-channel tokens (eg. comments or whitespace), 
since the parser will ignore them and happily treat "| -" exactly 
the same as "|-" (if you're hiding whitespace).  So you'll either 
need to avoid hiding things or create separate tokens for your 
composites (eg. PIPEHYPHEN), which will look a bit messier.


From stevagewp at gmail.com  Sun Nov 18 23:52:52 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 19 Nov 2007 18:52:52 +1100
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <47413cea.0aed300a.1da6.446eSMTPIN_ADDED@mx.google.com>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
	<47413cea.0aed300a.1da6.446eSMTPIN_ADDED@mx.google.com>
Message-ID: <b8ceeef70711182352k5854e917r867794eea7855588@mail.gmail.com>

On 11/19/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> Ko, have a look at the "island grammars" example.  And remember
> that since lexing occurs before parsing, you can't use any parser
> context to influence this changeover.

Yeah, I just found a good but short example in the url I referred to
in my last email. The question will be whether or not I can be certain
of the context just from lexing. It could be tough in some cases. But
it would certainly be a lot nicer to parse magic words as actual
tokens rather than just strings that have some particular text. More
readable etc.

> Not necessarily.  You can tokenise them as barebones (eg. PIPE and
> HYPHEN) and then figure out whether it means something special in
> the parser.  You'll need to be careful though if you're creating
> any hidden or off-channel tokens (eg. comments or whitespace),
> since the parser will ignore them and happily treat "| -" exactly
> the same as "|-" (if you're hiding whitespace).  So you'll either
> need to avoid hiding things or create separate tokens for your
> composites (eg. PIPEHYPHEN), which will look a bit messier.

Yeah, I haven't worked through the implications of hidden channels
yet. I think it's unlikely I'll be using them - the grammar I'm
working with is so finicky that it's a lot safer I think to have a lot
of PIPE ws LETTERS ws DOT ws etc than to blithely accept whitespace
everywhere.

Naively, I had assumed there would pretty much be one way to write a
given grammar. I'm now discovering in this case there are at least
four really different ways:

1) use semantic predicates to look at the text of a generic token
2) tokenize individual characters, and make the magic words sequences
of characters: magic: 'm' 'a' 'g' 'i' 'c'...
3) use semantic predicates in the lexer (are they called that, or
something different) to switch lexer rules on and off, as discussed
above
4) tokenize magicwords but feed them back into the general letters
pool whenever they're not needed:  letters: ('a'..'z' | MAGIC)+;

I've tried 1, 3 and 4 and they all work. However, 3 and 4 have major
impacts on how the rest of the grammar will be shaped, I think. Also 4
has the odd behaviour of generating nodes with clumps of tokens:
"magicword" will get lexed as "magic" and "word" then parsed as
MAGIC+'w'+'o'+'r'+'d'.

1 is at least totally independent of anything else, I think.

How does one decide what method is the best?

Steve

From antlr at mirality.co.nz  Mon Nov 19 00:41:32 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Nov 2007 21:41:32 +1300
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <b8ceeef70711182352k5854e917r867794eea7855588@mail.gmail.co
 m>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
	<47413cea.0aed300a.1da6.446eSMTPIN_ADDED@mx.google.com>
	<b8ceeef70711182352k5854e917r867794eea7855588@mail.gmail.com>
Message-ID: <20071119084156.2A5BA11EB9F@www.antlr.org>

At 20:52 19/11/2007, Steve Bennett wrote:
 >4) tokenize magicwords but feed them back into the general 
letters
 >pool whenever they're not needed:  letters: ('a'..'z' | MAGIC)+;

That's usually the approach I use.  Although not quite like that 
:)

 >I've tried 1, 3 and 4 and they all work. However, 3 and 4 have
 >major impacts on how the rest of the grammar will be shaped, I
 >think. Also 4 has the odd behaviour of generating nodes with
 >clumps of tokens: "magicword" will get lexed as "magic" and
 >"word" then parsed as MAGIC+'w'+'o'+'r'+'d'.

If you do it like you've got above, yeah.  But you can still 
combine sequences of characters that don't happen to be magic:

MAGIC: 'magic';
TEXT: ('a'-'z')+;
text: (TEXT | MAGIC)+;

You'll get MAGIC('magic'),TEXT('word').

I usually prefer to put literal tokens (like MAGIC) in a tokens 
block, though.  Makes 'em easier to find.  And I think you get an 
ambiguity warning if you don't (though it'll still do the right 
thing).

 >How does one decide what method is the best?

Personal taste, mostly :)


From antlr at shmuelhome.mine.nu  Mon Nov 19 00:48:28 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon, 19 Nov 2007 10:48:28 +0200
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
Message-ID: <47414DDC.3020802@shmuelhome.mine.nu>

Steve Bennett wrote:
> .....
> I gather that most programming languages don't have this drama,
> because there are generally two lexing situations: normal text, where
> { and -> are special tokens, or strings/comments, where /* blah -> {
> blah */ is treated as a single token. But what would you do if you
> wanted to actually parse the contents of that comment, rather than
> making it a monolithic token?
> .......
> Steve
>   

For cases like comments, there is an alternative to island grammars. 
Since the lexer is capable of recognizing  the boundaries of the 
comment, you can have it return a comment to the parser. The parser 
calls another lexerer/parser passing them the content of the comment. 
This involves double lexing but should be fast enough.

Shmuel


From antlr at mirality.co.nz  Mon Nov 19 00:57:00 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Nov 2007 21:57:00 +1300
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <47414DDC.3020802@shmuelhome.mine.nu>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
	<47414DDC.3020802@shmuelhome.mine.nu>
Message-ID: <20071119085711.17B0411EC75@www.antlr.org>

At 21:48 19/11/2007, shmuel siegel wrote:
 >Since the lexer is capable of recognizing  the boundaries of
 >the comment, you can have it return a comment to the parser.
 >The parser calls another lexerer/parser passing them the
 >content of the comment.
 >This involves double lexing but should be fast enough.

Actually you can do that even for constructs that can only be 
recognised by the parser too.  Each token carries with it a 
location in the input stream, so if you can find two boundary 
tokens then you can extract the substream between them and pass it 
to another lexer/parser combo, if you want.


From antlr at shmuelhome.mine.nu  Mon Nov 19 01:07:47 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon, 19 Nov 2007 11:07:47 +0200
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <8FC0BCD8-F619-4C68-BBC6-F640EF1ACD6F@shmuelhome.mine.nu>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
	<47414DDC.3020802@shmuelhome.mine.nu>
	<8FC0BCD8-F619-4C68-BBC6-F640EF1ACD6F@shmuelhome.mine.nu>
Message-ID: <47415263.1010400@shmuelhome.mine.nu>

Gavin Lambert wrote:
> At 21:48 19/11/2007, shmuel siegel wrote:
> >Since the lexer is capable of recognizing  the boundaries of
> >the comment, you can have it return a comment to the parser.
> >The parser calls another lexer/parser passing them the
> >content of the comment.
> >This involves double lexing but should be fast enough.
>
> Actually you can do that even for constructs that can only be 
> recognised by the parser too.  Each token carries with it a location 
> in the input stream, so if you can find two boundary tokens then you 
> can extract the substream between them and pass it to another 
> lexer/parser combo, if you want.
>
But it can be much more difficult when the inner language understands 
constructs that the outer language doesn't. Consider regular expressions 
in javascript. If the first lexer dealt with the input stream, there can 
very well be white space. Also there can be sequences that the outer 
lexer will reject, like +-+/*.


From antlr at mirality.co.nz  Mon Nov 19 01:41:04 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 19 Nov 2007 22:41:04 +1300
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <47415263.1010400@shmuelhome.mine.nu>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
	<47414DDC.3020802@shmuelhome.mine.nu>
	<8FC0BCD8-F619-4C68-BBC6-F640EF1ACD6F@shmuelhome.mine.nu>
	<47415263.1010400@shmuelhome.mine.nu>
Message-ID: <20071119094130.6F8FC11EC9F@www.antlr.org>

At 22:07 19/11/2007, shmuel siegel wrote:
 >But it can be much more difficult when the inner language
 >understands constructs that the outer language doesn't.
 >Consider regular expressions in javascript. If the first
 >lexer dealt with the input stream, there can very well be
 >white space. Also there can be sequences that the outer
 >lexer will reject, like +-+/*.

Well, the whitespace doesn't matter, since you're accessing the 
input stream directly (so any whitespace will be preserved, not 
skipped).

But you're right, your first lexer will still have to be able to 
produce some kind of token sequence and your first parser will 
have to recognise the appropriate boundary markers to pass along 
to the second lexer/parser.  Depending on your input language 
structure, this might be simple or it might be complicated.

Certainly it's easier if you can capture the whole thing in a 
single lexer token and process it that way, but that's not always 
possible.  I was just trying to point out that it's not impossible 
to do it the other way :)


From yotommy at gmail.com  Mon Nov 19 05:43:00 2007
From: yotommy at gmail.com (Tom Smith)
Date: Mon, 19 Nov 2007 08:43:00 -0500
Subject: [antlr-interest] Can't get += working
In-Reply-To: <BAY118-W1364D6C0A1F49641A29346B17E0@phx.gbl>
References: <BAY118-W1364D6C0A1F49641A29346B17E0@phx.gbl>
Message-ID: <82dc0d190711190543r745e1a32y31ed7c776e0d9ad4@mail.gmail.com>

Since you seem to be using output=template, you may want to try an
approach which has recently worked for me.  Revise your strategy so
that you are writing templates rather than passing return values.
Something like:

buildList : 'PROPERTY' 'LIST' 'IS' prop+=listObject (',' prop+=listObject )*
    -> propertyListTemplate(props={$prop})
    ;

listObject : n=ObjectName '=' v=StringLiteral
    -> nameValueTemplate(name={$n}, value={$v}) << ... >>
    ;

The propertyListTemplate can then use template application on the List of props:

propertyListTemplate(props) ::= <<
   my props are <props;separator=",">
>>

There may be better ways, which I would be happy to hear, as I am an utter noob.

Tom.

On 11/19/07, Mike Arace <mikearace at hotmail.com> wrote:
>
>  Hi guys,
>
> I'm running into a problem with Antlr involving the List += syntax.
>
> Say I have the following example rules:
>
> //------------------------
>
> buildList : 'PROPERTY' 'LIST' 'IS' prop+=listObject (',' prop+=listObject
> )*;
>
> listObject returns [String name, String value] : n=ObjectName '='
> v=StringLiteral { $name = $n.text; $value = $v.text; }
>
> StringLiteral :  '\'' (~'\'')* '\'' ( '\'' (~'\'')* '\'' )*;
>
> ObjectName : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' )*;
>
>
> //-------------------------
>
> Using the Java target, Antlr creates a static class called listObject_return
> that wraps the two return values of the listObjectRule, as well as a
> StringTemplate.  For the buildList rule, it creates a List called list_prop
> to hold the listObject values assigned using the += syntax, and a temporary
> variable called prop that holds the current value as it parses each of the
> elements.
>
> My problem is this:
>
> I assume that each of the elements of list_prop would be of type
> listObject_return, but that is not the case.  Instead, it creates a new
> listObject_return and correctly assigns the name and value properties within
> the listObject rule, and then runs prop.getTemplate() within buildList and
> adds that value to list_prop.  In my rule, this value is always null.
>
> Given the rules above, how could I access name and value in
> listObject_return  object from within buildList?
>
> Best Regards,
> Mike
>
> ________________________________
> Share life as it happens with the new Windows Live. Share now!

From Babak.Timoury at Teradata.Com  Mon Nov 19 06:25:42 2007
From: Babak.Timoury at Teradata.Com (Timoury, Babak)
Date: Mon, 19 Nov 2007 14:25:42 -0000
Subject: [antlr-interest] Antlr memory issue on huge grammar
Message-ID: <F72E3B909921D74DBA1AD9FDEA5161D702474F35@sgbred250.corp.ncr.com>



Hi,

During the first rewrite of a v2 grammar ( THE SQL2 grammar posted by
Lubos Vnuk, many thanks to its efforts! )  I have experimented java heap
memory space  error.
I've tried to run the parser with 1024 MB of extended memory and got the
same error, did somebody experiment this before and if so , what's the
solution?

Many thanks,
Babak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071119/b7afbaa8/attachment.html 

From hnine at isis.vanderbilt.edu  Mon Nov 19 08:42:14 2007
From: hnine at isis.vanderbilt.edu (Harmon Nine)
Date: Mon, 19 Nov 2007 10:42:14 -0600
Subject: [antlr-interest] Definite (but manageable) bug in antlr
Message-ID: <7AB1C26C64423249964AB392C6EBF0E001705308@discovery.isis.vanderbilt.edu>

Hello.

 

I've found a bug in antlr -- in particular, a necessary set of
parentheses is not being generated in the output java code.

 

Suppose you have a grammar that, in part, looks like this.

 

statement

: ( reference ASSIGN )=> reference ASSIGN expr

| expr

      ;

 

reference

      : IDENTIFIER ( {X || Y || Z}?=> paren_arglist )

      ;

 

expr  : reference

      | INTEGER

      ;

 

In the generate Java code, the syntactic predicate "( reference ASSIGN
)" is tested using a method "synpred1".  Due to lookahead, the syntactic
and semantic predicates are combined into a single antecedent in an "if"
expression:

 

if ( synpred1() && X || Y || Z ) { ... }

 

Note the problem:  the semantic predicate "X || Y || Z" needs to be
enclosed in parentheses for the antecedent to be processed properly, due
to the precedence of "&&" over "||".  Antlr currently does not generate
these parentheses.

 

A workaround is, of course, to put the parentheses in manually in the
semantic predicate:

 

reference

      : IDENTIFIER ( { (X || Y || Z) }?=> paren_arglist )

 

 

NOTE:  antlr WILL generate proper debug code, i.e. when executing antlr
with the "-debug" option.  This is because the debug code looks like
this:

 

if (  synpred1() && evalPredicate( X || Y || Z )  ) { ... }

 

This, due to the implicit grouping of "X || Y || Z" as an argument of
the method call "evalPredicate," evaluates the antecedent properly.

 

 

Cheers

-- Harmon

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071119/4cb822d9/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Nov 19 11:38:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 19 Nov 2007 11:38:25 -0800
Subject: [antlr-interest] Definite (but manageable) bug in antlr
In-Reply-To: <7AB1C26C64423249964AB392C6EBF0E001705308@discovery.isis.vanderbilt.edu>
References: <7AB1C26C64423249964AB392C6EBF0E001705308@discovery.isis.vanderbilt.edu>
Message-ID: <BB931E5B-5152-4DE3-AA43-D02A5C131962@cs.usfca.edu>

Hi. Looks familiar.  Can you try 3.1beta?

http://www.antlr.org/download/build/antlr-2007-10-29.14.tar.gz

Ter
On Nov 19, 2007, at 8:42 AM, Harmon Nine wrote:

> Hello.
>
> I?ve found a bug in antlr -- in particular, a necessary set of  
> parentheses is not being generated in the output java code.
>
> Suppose you have a grammar that, in part, looks like this.
>
> statement
> : ( reference ASSIGN )=> reference ASSIGN expr
> | expr
>       ;
>
> reference
>       : IDENTIFIER ( {X || Y || Z}?=> paren_arglist )
>       ;
>
> expr  : reference
>       | INTEGER
>       ;
>
> In the generate Java code, the syntactic predicate ?( reference  
> ASSIGN )? is tested using a method ?synpred1?.  Due to lookahead,  
> the syntactic and semantic predicates are combined into a single  
> antecedent in an ?if? expression:
>
> if ( synpred1() && X || Y || Z ) { ? }
>
> Note the problem:  the semantic predicate ?X || Y || Z? needs to be  
> enclosed in parentheses for the antecedent to be processed  
> properly, due to the precedence of ?&&? over ?||?.  Antlr currently  
> does not generate these parentheses.
>
> A workaround is, of course, to put the parentheses in manually in  
> the semantic predicate:
>
> reference
>       : IDENTIFIER ( { (X || Y || Z) }?=> paren_arglist )
>
>
> NOTE:  antlr WILL generate proper debug code, i.e. when executing  
> antlr with the ?-debug? option.  This is because the debug code  
> looks like this:
>
> if (  synpred1() && evalPredicate( X || Y || Z )  ) { ? }
>
> This, due to the implicit grouping of ?X || Y || Z? as an argument  
> of the method call ?evalPredicate,? evaluates the antecedent properly.
>
>
> Cheers
> -- Harmon
>


From ohumbel at gmail.com  Mon Nov 19 14:05:49 2007
From: ohumbel at gmail.com (Oti)
Date: Mon, 19 Nov 2007 23:05:49 +0100
Subject: [antlr-interest] Antlr memory issue on huge grammar
In-Reply-To: <F72E3B909921D74DBA1AD9FDEA5161D702474F35@sgbred250.corp.ncr.com>
References: <F72E3B909921D74DBA1AD9FDEA5161D702474F35@sgbred250.corp.ncr.com>
Message-ID: <ba90a0a90711191405x611fb656i4d938b914506d768@mail.gmail.com>

Yes, exactly the same.

It was in the very beginning of my ANTLR steps, so the "translation"
might not have been correct.
I tried it out on a 64 bit ubuntu, with 8 G memory, and it blew also
(after several minutes of running).

Since I needed only a small subset of this grammar, I decided to write
my own (which was great to learn ANTLR).

Best wishes,
Oti.

On Nov 19, 2007 3:25 PM, Timoury, Babak <Babak.Timoury at teradata.com> wrote:
>
>
>
>
>
> Hi,
>
>
>
> During the first rewrite of a v2 grammar ( THE SQL2 grammar posted by Lubos
> Vnuk, many thanks to its efforts! )  I have experimented java heap memory
> space  error.
>
> I've tried to run the parser with 1024 MB of extended memory and got the
> same error, did somebody experiment this before and if so , what's the
> solution?
>
> Many thanks,
>
> Babak

From hnine at isis.vanderbilt.edu  Mon Nov 19 14:23:39 2007
From: hnine at isis.vanderbilt.edu (Harmon Nine)
Date: Mon, 19 Nov 2007 16:23:39 -0600
Subject: [antlr-interest] Definite (but manageable) bug in antlr
In-Reply-To: <BB931E5B-5152-4DE3-AA43-D02A5C131962@cs.usfca.edu>
References: <7AB1C26C64423249964AB392C6EBF0E001705308@discovery.isis.vanderbilt.edu>
	<BB931E5B-5152-4DE3-AA43-D02A5C131962@cs.usfca.edu>
Message-ID: <7AB1C26C64423249964AB392C6EBF0E001705389@discovery.isis.vanderbilt.edu>

Thanks.  3b1 does not have the bug (also found the post from July 3rd,
doh!).

BTW, is it normal to have to decrease the value of k (say from '*' to 2)
when using syntactic predicates in order to get the generated parser to
work correctly?

Thanks again.
-- Harmon

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Monday, November 19, 2007 1:38 PM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] Definite (but manageable) bug in antlr
> 
> Hi. Looks familiar.  Can you try 3.1beta?
> 
> http://www.antlr.org/download/build/antlr-2007-10-29.14.tar.gz
> 
> Ter
> On Nov 19, 2007, at 8:42 AM, Harmon Nine wrote:
> 
> > Hello.
> >
> > I've found a bug in antlr -- in particular, a necessary set of
> > parentheses is not being generated in the output java code.
> >
> > Suppose you have a grammar that, in part, looks like this.
> >
> > statement
> > : ( reference ASSIGN )=> reference ASSIGN expr
> > | expr
> >       ;
> >
> > reference
> >       : IDENTIFIER ( {X || Y || Z}?=> paren_arglist )
> >       ;
> >
> > expr  : reference
> >       | INTEGER
> >       ;
> >
> > In the generate Java code, the syntactic predicate "( reference
> > ASSIGN )" is tested using a method "synpred1".  Due to lookahead,
> > the syntactic and semantic predicates are combined into a single
> > antecedent in an "if" expression:
> >
> > if ( synpred1() && X || Y || Z ) { ... }
> >
> > Note the problem:  the semantic predicate "X || Y || Z" needs to be
> > enclosed in parentheses for the antecedent to be processed
> > properly, due to the precedence of "&&" over "||".  Antlr currently
> > does not generate these parentheses.
> >
> > A workaround is, of course, to put the parentheses in manually in
> > the semantic predicate:
> >
> > reference
> >       : IDENTIFIER ( { (X || Y || Z) }?=> paren_arglist )
> >
> >
> > NOTE:  antlr WILL generate proper debug code, i.e. when executing
> > antlr with the "-debug" option.  This is because the debug code
> > looks like this:
> >
> > if (  synpred1() && evalPredicate( X || Y || Z )  ) { ... }
> >
> > This, due to the implicit grouping of "X || Y || Z" as an argument
> > of the method call "evalPredicate," evaluates the antecedent
properly.
> >
> >
> > Cheers
> > -- Harmon
> >


From parrt at cs.usfca.edu  Mon Nov 19 15:00:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 19 Nov 2007 15:00:52 -0800
Subject: [antlr-interest] Definite (but manageable) bug in antlr
In-Reply-To: <7AB1C26C64423249964AB392C6EBF0E001705389@discovery.isis.vanderbilt.edu>
References: <7AB1C26C64423249964AB392C6EBF0E001705308@discovery.isis.vanderbilt.edu>
	<BB931E5B-5152-4DE3-AA43-D02A5C131962@cs.usfca.edu>
	<7AB1C26C64423249964AB392C6EBF0E001705389@discovery.isis.vanderbilt.edu>
Message-ID: <0627D971-C4AB-4BD1-9620-727AC97F784E@cs.usfca.edu>


On Nov 19, 2007, at 2:23 PM, Harmon Nine wrote:

> Thanks.  3b1 does not have the bug (also found the post from July 3rd,
> doh!).
>
> BTW, is it normal to have to decrease the value of k (say from '*'  
> to 2)
> when using syntactic predicates in order to get the generated  
> parser to
> work correctly?

k is just an optimization really though it does allow some things to  
work (but usually just when antlr says it has failed).

Ter


From jaluber at gmx.de  Mon Nov 19 15:50:58 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 20 Nov 2007 00:50:58 +0100
Subject: [antlr-interest] Preprocessor implementation
Message-ID: <47422162.3050503@gmx.de>

Hi,

it occurred to me that a special case isn't handled so far correctly:

#if SYMBOL
/* This is a comment.
 #error This preprocessor directive will be only recognized with an
undefined SYMBOL
 # Sadly is this no preprocessor directive
*/
#endif

If SYMBOL is defined then the comment in the section is a comment, if
SYMBOL is undefined then the comment is treated as text blob, only
broken up by other preprocessor directives. As those start with '#', the
harmless number sign blows the compilation up when it isn't followed by
magic sequences.

How can I lex these cases correctly? Depending on circumstances, one and
the same input can create different tokens. I have to check for #define
and #undef while lexing. Can this be done by ANTLR?

Johannes


From stevagewp at gmail.com  Mon Nov 19 20:00:01 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Tue, 20 Nov 2007 15:00:01 +1100
Subject: [antlr-interest] Context-sensitive lexing
In-Reply-To: <20071119085711.17B0411EC75@www.antlr.org>
References: <b8ceeef70711181855t403a6d5ah5a24de49fd636f83@mail.gmail.com>
	<47414DDC.3020802@shmuelhome.mine.nu>
	<20071119085711.17B0411EC75@www.antlr.org>
Message-ID: <b8ceeef70711192000g1df31769yb3901c51932b6ee5@mail.gmail.com>

On 11/19/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> Actually you can do that even for constructs that can only be
> recognised by the parser too.  Each token carries with it a
> location in the input stream, so if you can find two boundary
> tokens then you can extract the substream between them and pass it
> to another lexer/parser combo, if you want.

I guess this is the solution you're referring to:

http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control

Looks pretty complicated. I wonder if there's a simpler way of doing
it where in the first pass, the parser/lexer simply locates the block
(possibly composed of multiple tokens) and stores it. Then, a second
pass could find those blocks in the tree and reparse/relex them, just
using their .text properties.

This is pretty naive, ignorant thinking though :)

Theroetically, there could also exist grammars where the outer
parser/lexer couldn't identify the end of the inner block, but that
would be pretty evil.

In my particular case, I think I'll have to handle the different types
of blocks differently. In some, it's easy to lexically determine the
start and end of the block. In other cases, it really needs to be
parsed, so I just can't do that, and I honestly think the "island
grammar" solution is going to be more trouble than it's worth for me.
Maybe one day ANTLR will magically handle island grammars with some
beautiful new keyword ;)

Steve

From stevagewp at gmail.com  Mon Nov 19 21:14:46 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Tue, 20 Nov 2007 16:14:46 +1100
Subject: [antlr-interest] Lexer semantic predicate syntax?
Message-ID: <b8ceeef70711192114n89d29ccx6b72244dd8a4317c@mail.gmail.com>

Quick question about predicates in the lexer:

Both of these seem to be acceptable:

FOO: {...}? 'foo';

FOO: {...}? => 'foo';

However, in the first case, a message is printed to the output if the
predicate fails, and one token (I think) is lost. The second case
seems to behave exactly as expected. Is this an error, or is there
some distinction between the two?

The first syntax comes from
http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html
while the second is from p110 of the book. I don't see any other
explicit discussion of lexer predicates apart from that.

Steve

From Austin_Hastings at Yahoo.com  Mon Nov 19 21:30:29 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 20 Nov 2007 00:30:29 -0500
Subject: [antlr-interest] Q: How do I left-factor this?
In-Reply-To: <473983F1.2030104@Yahoo.com> 
References: <473983F1.2030104@Yahoo.com> 
Message-ID: <474270F5.4020902@Yahoo.com>

Gavin,

This was the right direction. Thanks for pointing it out.

=Austin

Gavin Lambert wrote:
> At 00:01 14/11/2007, Austin Hastings wrote:
> >fragment MultiLineComment : '/*' .* '*/';
> >fragment SingleLineComment : '//' ~('\r' | '\n')* '\r'? '\n';
> >fragment NestedCodeBlock
> >    : '{'
> >        (options {greedy=false;}
> >        : MultiLineComment
> >        | NestedCodeBlock
> >        | SingleLineComment
> >        | QUOTED_LITERAL
> >        | .
> >        )*
> >      '}'
> >    ;
> >
> >The problem is that ANTLR complains about non-LL(*) left recursion
> >in alternatives 1,2 and 5, and suggests left factoring the things.
> >I have found that adding option k=2 will make the problem
> >(apparently) go away.
>
> The only thing I can see in there that looks particularly dodgy is the 
> final "." alt.  Try changing it to "~('{' | '}')" and see if that 
> improves anything.
>
>
>


From Austin_Hastings at Yahoo.com  Mon Nov 19 21:41:26 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 20 Nov 2007 00:41:26 -0500
Subject: [antlr-interest] Q: What is the official JDK support level of
	antlr3?
Message-ID: <47427386.3060202@Yahoo.com>

Subject says it all, really.

For generated grammars, what is the rev of the JDK where something that 
doesn't work is a "we'll add that to the bug list" bug, instead of a 
"that's a headscratcher, good luck" issue? By extension, what level of 
language features can the java templates use?

For example, the Collection classes are JDK 1.2, StrictMath, Timer, and 
RMI (effectively) are 1.3, regexes and assertions are 1.4, 
StringBuilder, generics, enums, and annotations are 1.5, and the 
Compiler api is 1.6.


Thanks,

=Austin


From parrt at cs.usfca.edu  Mon Nov 19 22:54:18 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 19 Nov 2007 22:54:18 -0800
Subject: [antlr-interest] Q: What is the official JDK support level of
	antlr3?
In-Reply-To: <47427386.3060202@Yahoo.com>
References: <47427386.3060202@Yahoo.com>
Message-ID: <EFCA45FB-876C-4C87-BC57-AFAF9F5064F8@cs.usfca.edu>

hi. I meant runtime to be 1.4 (or even 1.3?) but tool itself is 1.5

Ter
On Nov 19, 2007, at 9:41 PM, Austin Hastings wrote:

> Subject says it all, really.
>
> For generated grammars, what is the rev of the JDK where something  
> that doesn't work is a "we'll add that to the bug list" bug,  
> instead of a "that's a headscratcher, good luck" issue? By  
> extension, what level of language features can the java templates use?
>
> For example, the Collection classes are JDK 1.2, StrictMath, Timer,  
> and RMI (effectively) are 1.3, regexes and assertions are 1.4,  
> StringBuilder, generics, enums, and annotations are 1.5, and the  
> Compiler api is 1.6.
>
>
> Thanks,
>
> =Austin
>


From stevagewp at gmail.com  Tue Nov 20 04:30:06 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Tue, 20 Nov 2007 23:30:06 +1100
Subject: [antlr-interest] Modifying token text - is it possible?
Message-ID: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>

According to http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html
it ought to be possible to modify a token's text two ways:

FOO: '<'! ... ; // '<' does not become part of the token

FOO: '<' ...{ $setText (...); // $setText manually overrides the matched text.

Neither of these constructs seems to work for me...were they perhaps
taken out or changed to something else? I see there is a setText
method on Lexer, but can't make it work: does FOO: x=TOKEN {$x...};
notation actually work?

Steve

From vbar at comp.cz  Tue Nov 20 04:52:35 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 20 Nov 2007 13:52:35 +0100
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
References: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
Message-ID: <200711201352.35312.vbar@comp.cz>

On Tuesday 20 November 2007 13:30:06 Steve Bennett wrote:
> According to
> http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html it
> ought to be possible to modify a token's text two ways:
>
> FOO: '<'! ... ; // '<' does not become part of the token
>
> FOO: '<' ...{ $setText (...); // $setText manually overrides the matched
> text.
Plain setText works for me (in Java), but note that the syntax is 
target-dependent.

	Bye
		Vasek
--
Open Source integration
http://www.mangrove.cz

From Damir.Kirasic at fer.hr  Tue Nov 20 05:54:02 2007
From: Damir.Kirasic at fer.hr (=?iso-8859-2?Q?Damir_Kirasi=E6?=)
Date: Tue, 20 Nov 2007 14:54:02 +0100
Subject: [antlr-interest] Persistent symbol table?
Message-ID: <6DEE7D97D631C947A753C1019303266602FE16E7@sluga.fer.hr>

Hello everybody,

 

We are using antlr 3 and

would like to have a symbol table

(global scope) that would survive parser completion.

Any suggestions how to implement persistency?

 

Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/b6985912/attachment-0001.html 

From jaluber at gmx.de  Tue Nov 20 06:11:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 20 Nov 2007 15:11:56 +0100
Subject: [antlr-interest] Persistent symbol table?
In-Reply-To: <6DEE7D97D631C947A753C1019303266602FE16E7@sluga.fer.hr>
References: <6DEE7D97D631C947A753C1019303266602FE16E7@sluga.fer.hr>
Message-ID: <4742EB2C.6040202@gmx.de>

Damir Kirasi? wrote:
> Hello everybody,
> 
>  
> 
> We are using antlr 3 and
> 
> would like to have a symbol table
> 
> (global scope) that would survive parser completion.
> 
> Any suggestions how to implement persistency?

Usually you use some instance member to store and update the symbol
table. You could copy the entries of global scopes in an @after action
for the start rule. Add then in @parser::members a getSymbolTable()
method and access the data afterwards.

Johannes

From lenochodpetiprsty at seznam.cz  Tue Nov 20 06:17:16 2007
From: lenochodpetiprsty at seznam.cz (Bolek Vrany)
Date: Tue, 20 Nov 2007 15:17:16 +0100
Subject: [antlr-interest] Problem with StringTemplate example
Message-ID: <4742EC6C.8060802@seznam.cz>

Hello,

I tried to compile and run the StringTemplate example from the ANTLR v3 
sample grammars (C, C#, Java targets)
http://www.antlr.org/download/examples-v3.tar.gz

I opened the grammar templates\T.g in ANTLRworks and let it generate the 
parser. However, ANTRLworks cannot debug it - it complains about 
timeouts. Next, I tried to run it in Java myself with this text to be parsed
ABCD=1234;
However, it goes to the line
TParser parser = new TParser(tokens); // create parser
and never returns. CPU load goes to 100% and it never returns.

Do you know what's the problem? Thanks for help

Bolek
-------------- next part --------------
A non-text attachment was scrubbed...
Name: src.zip
Type: application/x-zip-compressed
Size: 4358 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/3d5d360c/attachment.bin 

From ssiegel at finjan.com  Tue Nov 20 06:24:47 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 20 Nov 2007 16:24:47 +0200
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
References: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C029FA1B0@exmail1.finjan.com>

I'm not sure if I did it this way because of some beta version didn't
handle the "$" but in my grammar I write {setText(buffer.toString());}.

Your $x example won't work because the string for the token is taken
from the input stream (the characters between start of token and end of
token). Changes to intermediate results are irrelevant. You must
override the final token string.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Steve Bennett
Sent: Tuesday, November 20, 2007 2:30 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Modifying token text - is it possible?

According to
http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html
it ought to be possible to modify a token's text two ways:

FOO: '<'! ... ; // '<' does not become part of the token

FOO: '<' ...{ $setText (...); // $setText manually overrides the matched
text.

Neither of these constructs seems to work for me...were they perhaps
taken out or changed to something else? I see there is a setText
method on Lexer, but can't make it work: does FOO: x=TOKEN {$x...};
notation actually work?

Steve


From jaluber at gmx.de  Tue Nov 20 06:51:19 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 20 Nov 2007 15:51:19 +0100
Subject: [antlr-interest] Persistent symbol table?
In-Reply-To: <6DEE7D97D631C947A753C1019303266602FE1704@sluga.fer.hr>
References: <6DEE7D97D631C947A753C1019303266602FE16E7@sluga.fer.hr>
	<4742EB2C.6040202@gmx.de>
	<6DEE7D97D631C947A753C1019303266602FE1704@sluga.fer.hr>
Message-ID: <4742F467.5040107@gmx.de>

Damir Kirasi? wrote:
> But if I do that all the stack content
> created in the subsequent rules will be lost
> becouse there is a "pop" operation at the end of each rule

You need to add the information to a more persistent structure, which
should also include line information. A list should be sufficient for
this task.

> BTW I don't know how to reply to some other reply.
> It seams that this will go only to you, not to list?

Isn't there a "reply all"-button? Use that one and delete any other
email addresses. Or just exchange my personal address with the list one.

Johannes

From yotommy at gmail.com  Tue Nov 20 07:15:21 2007
From: yotommy at gmail.com (Tom Smith)
Date: Tue, 20 Nov 2007 10:15:21 -0500
Subject: [antlr-interest] vim syntax highlighting for .g files?
Message-ID: <82dc0d190711200715w69197220m17e36306d142cdd2@mail.gmail.com>

The syntax highlighting for antlr's .g files that is packaged with vim
7.0 is apparently not compatible with current antlr grammars.  The
antlr.vim file has a last-changed date of May 2001, which is ominous.

Does anyone know of a more current version?

Thanks,
Tom.

From hnine at isis.vanderbilt.edu  Tue Nov 20 07:17:42 2007
From: hnine at isis.vanderbilt.edu (Harmon Nine)
Date: Tue, 20 Nov 2007 09:17:42 -0600
Subject: [antlr-interest] C++ generation
Message-ID: <7AB1C26C64423249964AB392C6EBF0E0017053D6@discovery.isis.vanderbilt.edu>

Hi.

 

Does anyone know when C++ code generation will be available?  It isn't
currently in 3.1beta.

 

Thanks.

-- Harmon

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/2a88ffa3/attachment.html 

From Babak.Timoury at Teradata.Com  Tue Nov 20 07:23:36 2007
From: Babak.Timoury at Teradata.Com (Timoury, Babak)
Date: Tue, 20 Nov 2007 15:23:36 -0000
Subject: [antlr-interest] vim syntax highlighting for .g files?
In-Reply-To: <82dc0d190711200715w69197220m17e36306d142cdd2@mail.gmail.com>
References: <82dc0d190711200715w69197220m17e36306d142cdd2@mail.gmail.com>
Message-ID: <F72E3B909921D74DBA1AD9FDEA5161D7024BD8DB@sgbred250.corp.ncr.com>

I found this,
Hope this helps,


Babak Teymouri
Senior SDW Consultant
* : 33 (0)1 64 47 93 70
* : 33 (0)6 71 70 36 29
* : babak.timoury at teradata.com

-----Message d'origine-----
De?: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] De la part de Tom Smith
Envoy??: mardi 20 novembre 2007 16:15
??: antlr-interest at antlr.org
Objet?: [antlr-interest] vim syntax highlighting for .g files?

The syntax highlighting for antlr's .g files that is packaged with vim
7.0 is apparently not compatible with current antlr grammars.  The
antlr.vim file has a last-changed date of May 2001, which is ominous.

Does anyone know of a more current version?

Thanks,
Tom.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlr3.vim
Type: application/octet-stream
Size: 1812 bytes
Desc: antlr3.vim
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/d5337f52/attachment.obj 

From yotommy at gmail.com  Tue Nov 20 07:34:44 2007
From: yotommy at gmail.com (Tom Smith)
Date: Tue, 20 Nov 2007 10:34:44 -0500
Subject: [antlr-interest] vim syntax highlighting for .g files?
In-Reply-To: <F72E3B909921D74DBA1AD9FDEA5161D7024BD8DB@sgbred250.corp.ncr.com>
References: <82dc0d190711200715w69197220m17e36306d142cdd2@mail.gmail.com>
	<F72E3B909921D74DBA1AD9FDEA5161D7024BD8DB@sgbred250.corp.ncr.com>
Message-ID: <82dc0d190711200734t27236998ya12abd5c0d355fc6@mail.gmail.com>

That is a big improvement --- thanks!

On Nov 20, 2007 10:23 AM, Timoury, Babak <Babak.Timoury at teradata.com> wrote:
> I found this,
> Hope this helps,
>
>
> Babak Teymouri
> Senior SDW Consultant
> * : 33 (0)1 64 47 93 70
> * : 33 (0)6 71 70 36 29
> * : babak.timoury at teradata.com

From wiggjd at lsbu.ac.uk  Tue Nov 20 08:32:00 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Tue, 20 Nov 2007 16:32:00 -0000
Subject: [antlr-interest] Control of tab settings in ANTLR 2.7
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C556C@CSD-EXBE-VS2.lsbu.ac.uk>

I have been unable to find anything about the control and use of tab
characters in updating column numbers in the ANTLR2 documentation for
ANTLR 2.7. 
 
Question 1.
 
I want to use a tabsize of 4 characters instead of 8 as assumed in the
constructors in CharScanner.cpp which I have changed to 4.  Is there
any other way of altering this value without altering a library
function?
 
Question 2.
 
In order to adjust column numbers correctly I have inserted an action
after detecting a tab character in the lexer of "tab()" as required
which should adjust the column number appropriately.
 
When there is a tab at the beginning of a line, but not elsewhere, the
column number is incorrect (too many by the tabsize) and the reason
seems to be that when the tab is at the beginning of a line the tab
function is entered twice so that the column number is advanced to 9
instead of only 5.
 
I cannot see any reason for this (there appears to be only one tab at
the beginning of the line) but I can cure the problem by first
checking if the column number is 1 then setting the new column to 2 so
that on the second entry of tab() the column number is only advanced
by tabsize once (to 5).
 
Is the function working correctly and, if so, what am I doing wrong?
 
Thanks,
 
David.
 
 
 



--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/68468f77/attachment-0001.html 

From mark.edgeworth at scarletcode.co.uk  Tue Nov 20 08:38:31 2007
From: mark.edgeworth at scarletcode.co.uk (Mark Edgeworth)
Date: Tue, 20 Nov 2007 16:38:31 -0000
Subject: [antlr-interest] Rewrite rule cardinality
Message-ID: <001c01c82b93$c9d44de0$0300a8c0@chesterford>

Hi,

 

First post to the list, so be gentle :-)

 

I am parsing a language called verilog in which appears constructs such as
the following:

 

reg a, b, c;

 

The grammar that I am using specifies this as something like:

 

==================================

reg_declaration

            :           'reg' range? list_of_register_variables SEMI

            -> ^(REGISTER range? list_of_register_variables)+ 

    ;

    

list_of_register_variables

            :           register_variable ( COMMA! register_variable )*

            ;

            

range

            :           '[' n1=NUMBER ':' n2=NUMBER ']'

                                    -> ^(RANGE n1 n2)

            ;

            

register_variable: IDENTIFIER;

==================================

 

(REGISTER and RANGE are declared as virtual tokens earlier in the file)

 

Now, I was rather hoping to see something like the following in the tree
(using the input above):

 

( (REGISTER a) (REGISTER b) (REGISTER c) )

 

Because the cardinality of the 'list_of_register_variables' item in the
reg_declaration is > 1 I would expect the tree to be expanded (via the '+'
on the reg_declaration rewrite rule).  This looks quite straightforward in
the book (p172 if anyone is following me!)

 

However, I actually see (REGISTER a b c), which means I have more work to do
in the tree walker to break this out.

 

The weird thing is that if I expand the 'list_of_register_variables' rule
inside the 'reg_declaration' rule then all is as expected.  Like so:

 

reg_declaration

            :           'reg' range? register_variable ( COMMA!
register_variable )* SEMI

            -> ^(REGISTER range? register_variable)+ 

    ;

 

...but I'd rather keep this part factored-out as it is used in lots of
places...

 

Hmmm.  I love ANTLR but it does make me think... perhaps this is why I love
it.  Any of you experts out there able to spot where I'm going wrong?
Please?

 

Ta,

 

Mark Edgeworth  (AKA Medge)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/85f4b1cf/attachment.html 

From parrt at cs.usfca.edu  Tue Nov 20 08:46:51 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Nov 2007 08:46:51 -0800
Subject: [antlr-interest] Rewrite rule cardinality
In-Reply-To: <001c01c82b93$c9d44de0$0300a8c0@chesterford>
References: <001c01c82b93$c9d44de0$0300a8c0@chesterford>
Message-ID: <E2CDE3B7-A50F-4AE0-B9BC-916C768F0A3D@cs.usfca.edu>


On Nov 20, 2007, at 8:38 AM, Mark Edgeworth wrote:

> Hi,
>
> First post to the list, so be gentle :-)
>
> I am parsing a language called verilog in which appears constructs  
> such as the following:
>
> reg a, b, c;
>
> The grammar that I am using specifies this as something like:
>
> ==================================
> reg_declaration
>             :           'reg' range? list_of_register_variables SEMI
>             -> ^(REGISTER range? list_of_register_variables)+
>     ;
>
> list_of_register_variables
>             :           register_variable ( COMMA!  
> register_variable )*
>             ;
>
> range
>             :           '[' n1=NUMBER ':' n2=NUMBER ']'
>                                     -> ^(RANGE n1 n2)
>             ;
>
> register_variable: IDENTIFIER;
> ==================================
>
> (REGISTER and RANGE are declared as virtual tokens earlier in the  
> file)
>
> Now, I was rather hoping to see something like the following in the  
> tree (using the input above):
>
> ( (REGISTER a) (REGISTER b) (REGISTER c) )
>
> Because the cardinality of the 'list_of_register_variables' item in  
> the reg_declaration is > 1 I would expect the tree to be expanded  
> (via the ?+? on the reg_declaration rewrite rule).  This looks  
> quite straightforward in the book (p172 if anyone is following me!)
>
> However, I actually see (REGISTER a b c), which means I have more  
> work to do in the tree walker to break this out.

Hi Medge, welcome :)

Well, ANTLR doesn't flatten anything for you so it gets a single  
element back from the list of regs, which it adds to the REGISTER  
root.  It only knows it got a single result back from the list of regs.

As you saw, i suggest moving them up to reg decl.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/2d077ff3/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Nov 20 08:50:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Nov 2007 08:50:27 -0800
Subject: [antlr-interest] Lexer semantic predicate syntax?
In-Reply-To: <b8ceeef70711192114n89d29ccx6b72244dd8a4317c@mail.gmail.com>
References: <b8ceeef70711192114n89d29ccx6b72244dd8a4317c@mail.gmail.com>
Message-ID: <1F1C20AC-E93A-4CD9-982C-0FB2BCEC3329@cs.usfca.edu>


On Nov 19, 2007, at 9:14 PM, Steve Bennett wrote:

> Quick question about predicates in the lexer:
>
> Both of these seem to be acceptable:
>
> FOO: {...}? 'foo';

This one is a validating predicate and can also be hoisted into a  
rule that invokes FOO if necessary.

>
> FOO: {...}? => 'foo';

This one should be a validating one also but is FORCED into the  
lookahead DFA for any rule that invokes FOO.  Now if you only do

BLORT : FOO ;

then no pred is hoisted as there is no decision.

> seems to behave exactly as expected. Is this an error, or is there
> some distinction between the two?

Is there a pred test in both in the output?

Ter

From parrt at cs.usfca.edu  Tue Nov 20 08:51:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Nov 2007 08:51:36 -0800
Subject: [antlr-interest] Problem with StringTemplate example
In-Reply-To: <4742EC6C.8060802@seznam.cz>
References: <4742EC6C.8060802@seznam.cz>
Message-ID: <DB09B74A-A301-4317-A2AA-C1F49B88B63A@cs.usfca.edu>


On Nov 20, 2007, at 6:17 AM, Bolek Vrany wrote:

> Hello,
>
> I tried to compile and run the StringTemplate example from the  
> ANTLR v3 sample grammars (C, C#, Java targets)
> http://www.antlr.org/download/examples-v3.tar.gz
>
> I opened the grammar templates\T.g in ANTLRworks and let it  
> generate the parser. However, ANTRLworks cannot debug it - it  
> complains about timeouts. Next, I tried to run it in Java myself  
> with this text to be parsed
> ABCD=1234;
> However, it goes to the line
> TParser parser = new TParser(tokens); // create parser
> and never returns. CPU load goes to 100% and it never returns.

Load should be 0 as it's waiting for AW to connect.  From cmd line  
start, you must ask AW to do debug remote.  From within AW, just do  
debug.  should be no problem.

Ter

From parrt at cs.usfca.edu  Tue Nov 20 08:52:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 20 Nov 2007 08:52:21 -0800
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
References: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
Message-ID: <88CE88BF-00E5-4CF1-994F-4E863BA5D777@cs.usfca.edu>

Hi. that is v2 stuff so beware.  Try setText, which modifies the text  
member of the lexer.

Ter
On Nov 20, 2007, at 4:30 AM, Steve Bennett wrote:

> According to http://www.cs.usfca.edu/~parrt/course/652/lectures/ 
> antlr-lexers.html
> it ought to be possible to modify a token's text two ways:
>
> FOO: '<'! ... ; // '<' does not become part of the token
>
> FOO: '<' ...{ $setText (...); // $setText manually overrides the  
> matched text.
>
> Neither of these constructs seems to work for me...were they perhaps
> taken out or changed to something else? I see there is a setText
> method on Lexer, but can't make it work: does FOO: x=TOKEN {$x...};
> notation actually work?
>
> Steve


From mark.edgeworth at scarletcode.co.uk  Tue Nov 20 08:56:48 2007
From: mark.edgeworth at scarletcode.co.uk (Mark Edgeworth)
Date: Tue, 20 Nov 2007 16:56:48 -0000
Subject: [antlr-interest] Rewrite rule cardinality
In-Reply-To: <mailman.8620.1195577216.2534.antlr-interest@antlr.org>
Message-ID: <002101c82b96$57b249d0$0300a8c0@chesterford>

Many thanks for the reply Ter - guess I'll have a bit of rework to do :-( 

Mark Edgeworth 
Scarlet Code Ltd


From mjl at myacc.net  Tue Nov 20 09:47:15 2007
From: mjl at myacc.net (Michael Laszlo)
Date: Tue, 20 Nov 2007 12:47:15 -0500
Subject: [antlr-interest] suppressing evaluation in tree parsers
Message-ID: <00db01c82b9d$680fb9a0$6501a8c0@MichaelsPC>

For my interpreter, I ended up writing a tree grammar that consumes
a tree and produces a tree of Java nodes implementing a common interface
(promising an evaluate() method). This required writing a Java class
hierarchy corresponding to expression types. The rule
arguments and return values supported by antlr was handy in the
tree grammar. The antlr tree is the AST for a program,
and the node tree it produces is the AST for program evaluation.
Other node trees could be produced for other tasks
(eg. type checking); alternatively, I could write an antlr tree grammar for
producing a tree that admits visitors, using the visitor design pattern.

I find that the real benefit of the antlr tree grammar is its
straightforward
notation for pattern matching trees. It might be worthwhile
designing a notation for rewriting trees in the RHS of tree grammar rules.
This notation might use or extend the existing notation for rewrite rules in
string grammars. Tree rewrites would allow you to write trees for various
tasks based on other trees, without depending on the concrete
syntax and without (or postponing) having to write Java code.

When I have an opportunity, I'll try to write a lazy version of
ANTLRReaderStream,
which I still think is needed for interactive applications. Thanks.


From jimi at temporal-wave.com  Tue Nov 20 10:03:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Nov 2007 10:03:42 -0800
Subject: [antlr-interest] C++ generation
In-Reply-To: <7AB1C26C64423249964AB392C6EBF0E0017053D6@discovery.isis.vanderbilt.edu>
Message-ID: <"H000006700013e27.1195581822.scalix.temporal-wave.com*"@MHS>

I am still working on it, but I seem to be endlessly busy travelling and
earning a living at the moment. I will make a sudden surge to 3.1 for C
and C++ as soon as I can though. It is fairly easy to use the C runtime
with your C++ programs though. What is missing is of course the ability
to reference things in actions via C++ objects, which is ?neater? than
the C runtime, but really is just eye candy to the task at hand ;-)

 

Jim

 

  _____  

From: Harmon Nine [mailto:hnine at isis.vanderbilt.edu] 
Sent: Tuesday, November 20, 2007 7:18 AM
To: antlr-interest Interest
Subject: [antlr-interest] C++ generation

 

Hi.

 

Does anyone know when C++ code generation will be available?  It isn?t
currently in 3.1beta.

 

Thanks.

-- Harmon


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/d840d794/attachment.html 

From brian at todoroff.com  Tue Nov 20 11:27:23 2007
From: brian at todoroff.com (Brian Todoroff)
Date: Tue, 20 Nov 2007 11:27:23 -0800
Subject: [antlr-interest] Example C style interpreter?
Message-ID: <2d360a1c0711201127o35b1cadey3ad85c2310df134a@mail.gmail.com>

Is there an example of a more realistic interpreter than the simple
tree based interpreter in the wiki?  Would prefer a simple C style
language, but really anything with multiple types, functions, and
function local variables will give me the basis for learning how to
get this done in ANTLR.  Thanks all for any help and the great tools.

Brian

From jaluber at gmx.de  Tue Nov 20 12:05:35 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 20 Nov 2007 21:05:35 +0100
Subject: [antlr-interest] Example C style interpreter?
In-Reply-To: <2d360a1c0711201127o35b1cadey3ad85c2310df134a@mail.gmail.com>
References: <2d360a1c0711201127o35b1cadey3ad85c2310df134a@mail.gmail.com>
Message-ID: <47433E0F.4050504@gmx.de>

Brian Todoroff wrote:
> Is there an example of a more realistic interpreter than the simple
> tree based interpreter in the wiki?  Would prefer a simple C style
> language, but really anything with multiple types, functions, and
> function local variables will give me the basis for learning how to
> get this done in ANTLR.  Thanks all for any help and the great tools.
> 
> Brian
> 

There are the examples for Java, C and C#. They should be available on
the download page.

Johannes

From hnine at isis.vanderbilt.edu  Tue Nov 20 13:18:56 2007
From: hnine at isis.vanderbilt.edu (Harmon Nine)
Date: Tue, 20 Nov 2007 15:18:56 -0600
Subject: [antlr-interest] C "skip" function
Message-ID: <7AB1C26C64423249964AB392C6EBF0E00170545A@discovery.isis.vanderbilt.edu>

Hi all.

 

I'm trying to use the "C" language generator for an antlr3 lexer, but
the g++ compiler complains that the "skip()" function, for skipping a
token, isn't defined.

 

Is there a different function to call to skip a token for the "C"
language generator?

 

Thanks.

-- Harmon

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/38ce4c3a/attachment.html 

From jimi at temporal-wave.com  Tue Nov 20 13:16:46 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Nov 2007 13:16:46 -0800
Subject: [antlr-interest] C "skip" function
In-Reply-To: <7AB1C26C64423249964AB392C6EBF0E00170545A@discovery.isis.vanderbilt.edu>
Message-ID: <"H000006700013ef3.1195593406.scalix.temporal-wave.com*"@MHS>

I forgot to implement the skip in the last runtime release. Sorry about
that, it was just an oversight. For now, you will need to set the type
to HIDDEN, which means it will be in the token stream but the parser
will tune it out. Obviously SKIP(); will need to be implemented as
sometimes there may be vast amounts of tokens that you don?t want to
push into the token stream. I will make sure it is in the next release.

 

In general the C target implements such things as upper case MACROS() in
the traditional C style.

 

Jim

 

  _____  

From: Harmon Nine [mailto:hnine at isis.vanderbilt.edu] 
Sent: Tuesday, November 20, 2007 1:19 PM
To: antlr-interest Interest
Subject: [antlr-interest] C "skip" function

 

Hi all.

 

I?m trying to use the ?C? language generator for an antlr3 lexer, but
the g++ compiler complains that the ?skip()? function, for skipping a
token, isn?t defined.

 

Is there a different function to call to skip a token for the ?C?
language generator?

 

Thanks.

-- Harmon


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071120/8ee0d61c/attachment.html 

From myeates at jpl.nasa.gov  Tue Nov 20 14:14:54 2007
From: myeates at jpl.nasa.gov (Mathew Yeates)
Date: Tue, 20 Nov 2007 14:14:54 -0800
Subject: [antlr-interest] antlr gramma versus yacc grammar
Message-ID: <47435C5E.6020509@jpl.nasa.gov>

I haven't found mention of yacc yet in the book. How do yacc and antlr 
differ?
I have found a fortran 77 yacc/lex grammar as part of the f2c package at 
netlib. How difficult is it to turn this into a antlr grammar? I know 
... Someone write a translator!!

Mathew



From cummings at kjchome.homeip.net  Tue Nov 20 14:42:21 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Tue, 20 Nov 2007 17:42:21 -0500
Subject: [antlr-interest] antlr gramma versus yacc grammar
In-Reply-To: <47435C5E.6020509@jpl.nasa.gov>
References: <47435C5E.6020509@jpl.nasa.gov>
Message-ID: <474362CD.3080500@kjchome.homeip.net>

Mathew Yeates wrote:
> I haven't found mention of yacc yet in the book. How do yacc and antlr
> differ?

YACC is LALR(1) (or almost LALR(1)), while ANTLR is LL(k).

If you understand the differences in the parsing techniques, then the
translation becomes easy.  If you don't, then you need to understand
that most LALR(1) grammars factor in the opposite direction from LL(k)
grammars.  So you will need to invert the direction of the recursion.

> I have found a fortran 77 yacc/lex grammar as part of the f2c package at
> netlib. How difficult is it to turn this into a antlr grammar? I know
> ... Someone write a translator!!

Shouldn't be too difficult, and it should be a straight-forward problem
to solve.  Let us know where you get stuck, and we can help.

> Mathew

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jaluber at gmx.de  Tue Nov 20 14:55:03 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 20 Nov 2007 23:55:03 +0100
Subject: [antlr-interest] antlr gramma versus yacc grammar
In-Reply-To: <474362CD.3080500@kjchome.homeip.net>
References: <47435C5E.6020509@jpl.nasa.gov>
	<474362CD.3080500@kjchome.homeip.net>
Message-ID: <474365C7.6070903@gmx.de>

Kevin J. Cummings wrote:
> Mathew Yeates wrote:
>> I haven't found mention of yacc yet in the book. How do yacc and antlr
>> differ?
> 
> YACC is LALR(1) (or almost LALR(1)), while ANTLR is LL(k).

ANTLR is LL(*) - no limit regarding the number of tokens.

Johannes


From stevagewp at gmail.com  Tue Nov 20 15:10:02 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 21 Nov 2007 10:10:02 +1100
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <88CE88BF-00E5-4CF1-994F-4E863BA5D777@cs.usfca.edu>
References: <b8ceeef70711200430v58f0048fyebf9b89fa9f31e52@mail.gmail.com>
	<88CE88BF-00E5-4CF1-994F-4E863BA5D777@cs.usfca.edu>
Message-ID: <b8ceeef70711201510m4530ca02v63dc0ed9ffe1dd5d@mail.gmail.com>

On 11/21/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. that is v2 stuff so beware.  Try setText, which modifies the text
> member of the lexer.

So what about this syntax:

> > FOO: '<'! ... ; // '<' does not become part of the token

Is there a v3 equivalent? What's the correct way to get behaviour like:

HTML_TAG: '<'! LETTER+ '>'!;

Steve

From atif.azad at hotmail.com  Tue Nov 20 15:10:46 2007
From: atif.azad at hotmail.com (atif azad)
Date: Wed, 21 Nov 2007 04:10:46 +0500
Subject: [antlr-interest] Help regrading object creation
Message-ID: <BLU105-F2566006AFBE524974A00E3E57F0@phx.gbl>

Dear all


I am writing a grammer which can give me the values of rules returned as 
strings values for a particular variable in a certain class objects.

Does any body has a good idea how to return such objects in a good way.


Regards

Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From jimi at temporal-wave.com  Tue Nov 20 15:11:16 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 20 Nov 2007 15:11:16 -0800
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <b8ceeef70711201510m4530ca02v63dc0ed9ffe1dd5d@mail.gmail.com>
Message-ID: <"H000006700013ef7.1195600276.scalix.temporal-wave.com*"@MHS>

How about:

fragment
TAG_GUTS: LETTER+
		{ emit(); }
;
HTML_TAG: '<' TAG_GUTS '>'
;

You may need to set the token type for the emitted token.

You can also do: xxx=FRAGRULE  and set the token text to $xxx.text

Jim

> -----Original Message-----
> From: Steve Bennett [mailto:stevagewp at gmail.com]
> Sent: Tuesday, November 20, 2007 3:10 PM
> To: Terence Parr
> Cc: antlr-interest Interest
> Subject: Re: [antlr-interest] Modifying token text - is it possible?
> 
> On 11/21/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> > Hi. that is v2 stuff so beware.  Try setText, which modifies the text
> > member of the lexer.
> 
> So what about this syntax:
> 
> > > FOO: '<'! ... ; // '<' does not become part of the token
> 
> Is there a v3 equivalent? What's the correct way to get behaviour like:
> 
> HTML_TAG: '<'! LETTER+ '>'!;
> 
> Steve



From clifford.heath at gmail.com  Tue Nov 20 15:17:18 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Wed, 21 Nov 2007 10:17:18 +1100
Subject: [antlr-interest] C "skip" function
In-Reply-To: <"H000006700013ef3.1195593406.scalix.temporal-wave.com*"@MHS>
References: <7AB1C26C64423249964AB392C6EBF0E00170545A@discovery.isis.vanderbilt.edu>
	<"H000006700013ef3.1195593406.scalix.temporal-wave.com*"@MHS>
Message-ID: <fhvptv$21o$1@ger.gmane.org>

Jim Idle wrote:
> I forgot to implement the skip in the last runtime release. Sorry about 
> that, it was just an oversight. For now, you will need to set the type 
> to HIDDEN, which means it will be in the token stream but the parser 
> will tune it out. Obviously SKIP(); will need to be implemented as 
> sometimes there may be vast amounts of tokens that you don?t want to 
> push into the token stream. I will make sure it is in the next release.

BTW, the same is true for the Ruby version, and the definition HIDDEN=99
is missing also. Since you can't debug in ANTLRWorks without a compatible
skip(), I have this at the top of my grammars:

@lexer::members {
        # The Ruby template lacks skip(), but the WS rule below needs it for ANTLRworks
        def skip; @channel = 99; end
}

I hope that helps someone. Perhaps the same thing is feasible in the C
version, as a work-around?

Clifford Heath.


From atif.azad at hotmail.com  Tue Nov 20 18:03:52 2007
From: atif.azad at hotmail.com (atif azad)
Date: Wed, 21 Nov 2007 07:03:52 +0500
Subject: [antlr-interest] Collecting different variable in one object
Message-ID: <BLU105-F30048E2276CAA0DB989362E5780@phx.gbl>

Dear all

What will be the way to collect different variables say three string from 
three different rules in my grammer , in to one object at the top rule.
I am making a list of objects at the top level.

Regards
Azad ,Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From stevagewp at gmail.com  Tue Nov 20 20:55:50 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 21 Nov 2007 15:55:50 +1100
Subject: [antlr-interest] Antlrworks bug?
Message-ID: <b8ceeef70711202055i595cbd2em6c842dce6a74618b@mail.gmail.com>

Or maybe I don't understand. The test rig generated by Antlrworks for
this grammar won't compile:

grammar tiny;
tiny	:	('a'..'z')+;



[15:52:10] \tmp\antlrworks\__Test__.java:9: <identifier> expected
[15:52:10]  lex = new (new
ANTLRFileStream("\\tmp\\antlrworks\\__Test___input.txt"));
[15:52:10]           ^
[15:52:10] 1 error


However this will compile:
grammar tiny;
L	:	('a'..'z');
tiny	:	L+;

Using ANTLRworks 1.1.4.

Steve

From stevagewp at gmail.com  Tue Nov 20 21:29:03 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 21 Nov 2007 16:29:03 +1100
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <H000006700013ef7.1195600276.scalix.temporal-wave.com*@MHS>
References: <b8ceeef70711201510m4530ca02v63dc0ed9ffe1dd5d@mail.gmail.com>
	<H000006700013ef7.1195600276.scalix.temporal-wave.com*@MHS>
Message-ID: <b8ceeef70711202129q2f4fc4d8u9956f17eeda995b8@mail.gmail.com>

On 11/21/07, Jim Idle <jimi at temporal-wave.com> wrote:
> How about:
>
> fragment
> TAG_GUTS: LETTER+
>                 { emit(); }
> ;
> HTML_TAG: '<' TAG_GUTS '>'
> ;

Hmm, that looks like it would pass <> up the tree? Let's say I want
the opposite, just the guts, not the < and >...


> You may need to set the token type for the emitted token.
>
> You can also do: xxx=FRAGRULE  and set the token text to $xxx.text

That doesn't seem to work for me:

TAG_GUTS: xxx='0'..'9'+
               { emit($xxx.text); };

gives:

[16:25:29] \tmp\antlrworks\tinyLexer.java:135: int cannot be dereferenced
[16:25:29]              emit(xxx.text);

Same without the $.

In any case, passing any arguments to emit() in a lexer rule seems to fail:

[16:26:37] \tmp\antlrworks\tinyLexer.java:135: cannot find symbol
[16:26:37] symbol  : method emit(java.lang.String)
[16:26:37] location: class tinyLexer
[16:26:37]              emit("blah");
[16:26:37]              ^
[16:26:37] 1 error

Is there really no documentation on this stuff at all? I seem to end
up relentlessly text-searching the book pdf for constructs like
"emit(" and hope to hit a fragment of code that looks like what I'm
trying to do. I would dearly love a list of constructs that ANTLR
recognises, that would answer questions like "In a Lexer rule, you can
do X. In a Parser rule you cannot do X but you can do Y" etc etc. It's
very frustrating atm :(

Steve

From OJAY78 at gmx.de  Wed Nov 21 00:38:10 2007
From: OJAY78 at gmx.de (OJAY78 at gmx.de)
Date: Wed, 21 Nov 2007 09:38:10 +0100
Subject: [antlr-interest] How can I abort parsing when the parser recognizes
	an input error?
Message-ID: <20071121083810.101600@gmx.net>

Hi,

I am trying to optimize the error reporting of my parser. The first thing which I want to change is that the parser should abort on every syntax error. Actually it recovers the wrong token and try to parse the rest, how can I change this?

Thanks for your help
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From harald_m_mueller at gmx.de  Wed Nov 21 00:53:44 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 09:53:44 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at all -
 not even with code from the book
Message-ID: <20071121085344.113150@gmx.net>

Hi - 

I'm quite sure that the code generated for (lexer) fragments is wrong. Not even the example on page 105 in Terence's book works as one would assume (but maybe we have to argue about what someone *would* assume). At least the behavior is totally different from ANTLR2, and there is no easy way to rewrite certain ANTLR2 lexer grammers as ANTLR3.

Here is the example from p.105 extended to be runnable in Java:

// -----------------------------------------------------------------
grammar SetTextTrouble;

@parser::header {
  import org.antlr.runtime.*;
}

@parser::members {
  private static void run(String s) throws Exception {
    System.out.print(s + " ==> ");
    ANTLRStringStream input = new ANTLRStringStream(s);
    SetTextTroubleLexer lexer = new SetTextTroubleLexer(input);
    CommonTokenStream tokens = new CommonTokenStream(lexer);   
    SetTextTroubleParser p = new SetTextTroubleParser(tokens);
    p.a();
  }

  public static void main(String[] args) throws Exception {
    run("{ a { b c }}");
    // run("{ {2}}");
    // run("{{2}}");
    
  }
}

// Parser

a : m=MAIN { System.out.println(m.getText()); };

// BEGIN verbatim copy from book p.105
fragment
CODE[boolean stripCurlies]
    : '{' ( CODE[stripCurlies] | ~('{'|'}') )* '}'
        {
        if ( stripCurlies ) {
            setText(getText().substring(1, getText().length()));
            //C#: $text = $text.Substring(1, getText().length()-1);
        }
        }
    ;
// Another rule would invoke CODE via CODE[false] or CODE[true].
// END verbatim copy from book p.105

MAIN : CODE[true]
     ;

// -----------------------------------------------------------------

The result of this is:

{ a { b c }} ==> a { b c }

One sees that the curlies are NOT stripped from the inner fragment - i.e., the call to setText is a no-op. One can guess the reason if one looks into the generated code: The recursive call is

               switch (alt1) {
            	case 1 :
            	    // SetTextTrouble.g:37:13: CODE[stripCurlies]
            	    {
            	    mCODE(stripCurlies); 
            	    
            	    }
            	    break;
 
No-one cares for the fact that the text has changed, it seems. I have some examples (of more complex grammars) where one can see that the text of the fragment is put into a temporary token simply using an index from BEFORE the fragment call and the character position (getCharIndex()?) after the call - so each change of the fragment's text appears to be completely bypassed.

For reasons I do not know, the whole thing works on the outermost level - even though the code looks like this:

                    if ( token==null && ruleNestingLevel==1 ) {
                        emit(_type,_line,_charPosition,_channel,_start,getCharIndex()-1);
                    }

Also here, nothing about text ... but probably emit internally honors changes to the complete symbol's text.

The whole problem is very unfortunate because in ANTLR2, the following worked flawlessly as expected:

protected
NAME
	: '\''!
	  (NAME_CHARACTER)*
	  (GENERIC_TAIL!)?   // We cut off the "generic tail", e.g. 'Stack`1' becomes 'Stack'
	  '\''!
	;

protected
METHODNAME
   :          // empty
   | ':'
     ':' 
     ( NAME | DIRECTIVE )
   ;

FULLNAME
   : n1:NAME            // simple name or namespace name
     ('.' n2:NAME)?     // classname if namespaced name
     n3:NESTEDNAME      // nested classnames
     n4:METHODNAME      // method name (DIRECTIVE if .ctor, .cctor etc.)
     {
       $setToken(CreateNameToken(n1,n2,n3,n4));
     } 
   ;
   

Here, "protected" NAME is a fragment which wants to pass up a stripped text - using the exclamation marks !, it was easy to strip off some characters from the fragment. I have no idea how to write this (straightforwardly - not with any hacks using internal variables) in ANTLR3.

Regards
Harald M.

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From harald_m_mueller at gmx.de  Wed Nov 21 01:47:50 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 10:47:50 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <20071121085344.113150@gmx.net>
References: <20071121085344.113150@gmx.net>
Message-ID: <20071121094750.113150@gmx.net>

Hello - me again - aren't "fragment tokens" created wrong also??

Here's a very tiny addition to the grammar, which seems to show that actually the Text property is "highly ignored" - but maybe I misread the code:

If you replace the line

     : '{' ( CODE[stripCurlies] | ~('{'|'}') )* '}'

>from the book's example with

     : '{' ( x=CODE[stripCurlies] | ~('{'|'}') )* '}'

you get the following code (Java - C# is very similar):


                switch (alt1) {
                case 1 :
                    // SetTextTrouble.g:39:13: x= CODE[stripCurlies]
                    {
                    int xStart26 = getCharIndex();
                    mCODE(stripCurlies);
                    x = new CommonToken(input, Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, xStart26, getCharIndex()-1);

                    }
                    break;

The new CommonToken gets
* the input (CharStream)
* xStart26 - which is the position in the stream before calling mCODE()
and
* getCharIndex()-1 - which is presumably the current position.

Inside, CommonToken simply remembers these parameters to access input later lazily in property Text (in C# - I did not look into the Java code here). So any calls to setText(...) ($text = ... in C#) would never show up in x, wouldn't they? - but I (at least ...) would expect them to ...
:-(

Regards
Harald

P.S. I leave my original posting attached below for reference - I hope that's ok.


> Hi - 
> 
> I'm quite sure that the code generated for (lexer) fragments is wrong. Not
> even the example on page 105 in Terence's book works as one would assume
> (but maybe we have to argue about what someone *would* assume). At least the
> behavior is totally different from ANTLR2, and there is no easy way to
> rewrite certain ANTLR2 lexer grammers as ANTLR3.
> 
> Here is the example from p.105 extended to be runnable in Java:
> 
> // -----------------------------------------------------------------
> grammar SetTextTrouble;
> 
> @parser::header {
>   import org.antlr.runtime.*;
> }
> 
> @parser::members {
>   private static void run(String s) throws Exception {
>     System.out.print(s + " ==> ");
>     ANTLRStringStream input = new ANTLRStringStream(s);
>     SetTextTroubleLexer lexer = new SetTextTroubleLexer(input);
>     CommonTokenStream tokens = new CommonTokenStream(lexer);   
>     SetTextTroubleParser p = new SetTextTroubleParser(tokens);
>     p.a();
>   }
> 
>   public static void main(String[] args) throws Exception {
>     run("{ a { b c }}");
>     // run("{ {2}}");
>     // run("{{2}}");
>     
>   }
> }
> 
> // Parser
> 
> a : m=MAIN { System.out.println(m.getText()); };
> 
> // BEGIN verbatim copy from book p.105
> fragment
> CODE[boolean stripCurlies]
>     : '{' ( CODE[stripCurlies] | ~('{'|'}') )* '}'
>         {
>         if ( stripCurlies ) {
>             setText(getText().substring(1, getText().length()));
>             //C#: $text = $text.Substring(1, getText().length()-1);
>         }
>         }
>     ;
> // Another rule would invoke CODE via CODE[false] or CODE[true].
> // END verbatim copy from book p.105
> 
> MAIN : CODE[true]
>      ;
> 
> // -----------------------------------------------------------------
> 
> The result of this is:
> 
> { a { b c }} ==> a { b c }
> 
> One sees that the curlies are NOT stripped from the inner fragment - i.e.,
> the call to setText is a no-op. One can guess the reason if one looks into
> the generated code: The recursive call is
> 
>                switch (alt1) {
>             	case 1 :
>             	    // SetTextTrouble.g:37:13: CODE[stripCurlies]
>             	    {
>             	    mCODE(stripCurlies); 
>             	    
>             	    }
>             	    break;
>  
> No-one cares for the fact that the text has changed, it seems. I have some
> examples (of more complex grammars) where one can see that the text of the
> fragment is put into a temporary token simply using an index from BEFORE
> the fragment call and the character position (getCharIndex()?) after the
> call - so each change of the fragment's text appears to be completely
> bypassed.
> 
> For reasons I do not know, the whole thing works on the outermost level -
> even though the code looks like this:
> 
>                     if ( token==null && ruleNestingLevel==1 ) {
>                        
> emit(_type,_line,_charPosition,_channel,_start,getCharIndex()-1);
>                     }
> 
> Also here, nothing about text ... but probably emit internally honors
> changes to the complete symbol's text.
> 
> The whole problem is very unfortunate because in ANTLR2, the following
> worked flawlessly as expected:
> 
> protected
> NAME
> 	: '\''!
> 	  (NAME_CHARACTER)*
> 	  (GENERIC_TAIL!)?   // We cut off the "generic tail", e.g. 'Stack`1'
> becomes 'Stack'
> 	  '\''!
> 	;
> 
> protected
> METHODNAME
>    :          // empty
>    | ':'
>      ':' 
>      ( NAME | DIRECTIVE )
>    ;
> 
> FULLNAME
>    : n1:NAME            // simple name or namespace name
>      ('.' n2:NAME)?     // classname if namespaced name
>      n3:NESTEDNAME      // nested classnames
>      n4:METHODNAME      // method name (DIRECTIVE if .ctor, .cctor etc.)
>      {
>        $setToken(CreateNameToken(n1,n2,n3,n4));
>      } 
>    ;
>    
> 
> Here, "protected" NAME is a fragment which wants to pass up a stripped
> text - using the exclamation marks !, it was easy to strip off some characters
> from the fragment. I have no idea how to write this (straightforwardly -
> not with any hacks using internal variables) in ANTLR3.
> 
> Regards
> Harald M.
> 
> -- 
> Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
> Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From antlr at shmuelhome.mine.nu  Wed Nov 21 01:50:36 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 21 Nov 2007 09:50:36 -0000
Subject: [antlr-interest] Modifying token text - is it possible?
In-Reply-To: <b8ceeef70711202129q2f4fc4d8u9956f17eeda995b8@mail.gmail.com>
References: <b8ceeef70711201510m4530ca02v63dc0ed9ffe1dd5d@mail.gmail.com>	<H000006700013ef7.1195600276.scalix.temporal-wave.com*@MHS>
	<b8ceeef70711202129q2f4fc4d8u9956f17eeda995b8@mail.gmail.com>
Message-ID: <3FBDE024.7010008@shmuelhome.mine.nu>

Steve Bennett wrote:
> Is there really no documentation on this stuff at all? I seem to end
> up relentlessly text-searching the book pdf for constructs like
> "emit(" and hope to hit a fragment of code that looks like what I'm
> trying to do. I would dearly love a list of constructs that ANTLR
> recognises, that would answer questions like "In a Lexer rule, you can
> do X. In a Parser rule you cannot do X but you can do Y" etc etc. It's
> very frustrating atm :(
>
> Steve
>   
This wiki page might help with a sample of how to use emit. 
http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497


From antlr at shmuelhome.mine.nu  Wed Nov 21 02:06:39 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 21 Nov 2007 12:06:39 +0200
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <20071121085344.113150@gmx.net>
References: <20071121085344.113150@gmx.net>
Message-ID: <4744032F.8020900@shmuelhome.mine.nu>

My copy of the book has something totally different on page 105 so I 
can't comment on your book reference. Anyway, what you refer to is not a 
bug in the sense that it was a deliberate design decision for the sake 
of performance. The default behavior of token creation is to set 
pointers into the character stream for the beginning and end of the 
token; not to copy a string to a token. "settext at the end of a token 
definition will overwrite this behavior. In other words, "settext" that 
you do in a fragment rule is irrelevant.

PS. Thanks for noticing the problem with the date on my machine. It 
seems to reset itself randomly. Plays havoc with anti-virus updates.


Harald Mueller wrote:
> Hi - 
>
> I'm quite sure that the code generated for (lexer) fragments is wrong. Not even the example on page 105 in Terence's book works as one would assume (but maybe we have to argue about what someone *would* assume). At least the behavior is totally different from ANTLR2, and there is no easy way to rewrite certain ANTLR2 lexer grammers as ANTLR3.
>
> Here is the example from p.105 extended to be runnable in Java:
>
> // -----------------------------------------------------------------
> grammar SetTextTrouble;
>
> @parser::header {
>   import org.antlr.runtime.*;
> }
>
> @parser::members {
>   private static void run(String s) throws Exception {
>     System.out.print(s + " ==> ");
>     ANTLRStringStream input = new ANTLRStringStream(s);
>     SetTextTroubleLexer lexer = new SetTextTroubleLexer(input);
>     CommonTokenStream tokens = new CommonTokenStream(lexer);   
>     SetTextTroubleParser p = new SetTextTroubleParser(tokens);
>     p.a();
>   }
>
>   public static void main(String[] args) throws Exception {
>     run("{ a { b c }}");
>     // run("{ {2}}");
>     // run("{{2}}");
>     
>   }
> }
>
> // Parser
>
> a : m=MAIN { System.out.println(m.getText()); };
>
> // BEGIN verbatim copy from book p.105
> fragment
> CODE[boolean stripCurlies]
>     : '{' ( CODE[stripCurlies] | ~('{'|'}') )* '}'
>         {
>         if ( stripCurlies ) {
>             setText(getText().substring(1, getText().length()));
>             //C#: $text = $text.Substring(1, getText().length()-1);
>         }
>         }
>     ;
> // Another rule would invoke CODE via CODE[false] or CODE[true].
> // END verbatim copy from book p.105
>
> MAIN : CODE[true]
>      ;
>
> // -----------------------------------------------------------------
>
> The result of this is:
>
> { a { b c }} ==> a { b c }
>
> One sees that the curlies are NOT stripped from the inner fragment - i.e., the call to setText is a no-op. One can guess the reason if one looks into the generated code: The recursive call is
>
>                switch (alt1) {
>             	case 1 :
>             	    // SetTextTrouble.g:37:13: CODE[stripCurlies]
>             	    {
>             	    mCODE(stripCurlies); 
>             	    
>             	    }
>             	    break;
>  
> No-one cares for the fact that the text has changed, it seems. I have some examples (of more complex grammars) where one can see that the text of the fragment is put into a temporary token simply using an index from BEFORE the fragment call and the character position (getCharIndex()?) after the call - so each change of the fragment's text appears to be completely bypassed.
>
> For reasons I do not know, the whole thing works on the outermost level - even though the code looks like this:
>
>                     if ( token==null && ruleNestingLevel==1 ) {
>                         emit(_type,_line,_charPosition,_channel,_start,getCharIndex()-1);
>                     }
>
> Also here, nothing about text ... but probably emit internally honors changes to the complete symbol's text.
>
> The whole problem is very unfortunate because in ANTLR2, the following worked flawlessly as expected:
>
> protected
> NAME
> 	: '\''!
> 	  (NAME_CHARACTER)*
> 	  (GENERIC_TAIL!)?   // We cut off the "generic tail", e.g. 'Stack`1' becomes 'Stack'
> 	  '\''!
> 	;
>
> protected
> METHODNAME
>    :          // empty
>    | ':'
>      ':' 
>      ( NAME | DIRECTIVE )
>    ;
>
> FULLNAME
>    : n1:NAME            // simple name or namespace name
>      ('.' n2:NAME)?     // classname if namespaced name
>      n3:NESTEDNAME      // nested classnames
>      n4:METHODNAME      // method name (DIRECTIVE if .ctor, .cctor etc.)
>      {
>        $setToken(CreateNameToken(n1,n2,n3,n4));
>      } 
>    ;
>    
>
> Here, "protected" NAME is a fragment which wants to pass up a stripped text - using the exclamation marks !, it was easy to strip off some characters from the fragment. I have no idea how to write this (straightforwardly - not with any hacks using internal variables) in ANTLR3.
>
> Regards
> Harald M.
>
>   



From harald_m_mueller at gmx.de  Wed Nov 21 02:15:22 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 11:15:22 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <4744032F.8020900@shmuelhome.mine.nu>
References: <20071121085344.113150@gmx.net>
	<4744032F.8020900@shmuelhome.mine.nu>
Message-ID: <20071121101522.113130@gmx.net>

> My copy of the book has something totally different on page 105 ...

A friend of mine showed me the code in a PDF version labelled "Beta 3" he got before the printed book ... so there may be offsets. The example is in 4.3 Rules, section "Lexical Rules" (some 14 pages after the start of the chapter), segment "Fragment Lexer Rules".

> Anyway, what you refer to is not a 
> bug in the sense that it was a deliberate design decision for the sake 
> of performance. [...] In other words, "settext" that 
> you do in a fragment rule is irrelevant.

Aha.
And how do you then convert an ANTLR2 grammar with ! in protected rules to ANTLR3?
And why is the example in the book, which explicitly DOES use setText() in a fragment??????

Regards
Harald


-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From harald_m_mueller at gmx.de  Wed Nov 21 02:29:57 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 11:29:57 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <20071121101522.113130@gmx.net>
References: <20071121085344.113150@gmx.net>
	<4744032F.8020900@shmuelhome.mine.nu> <20071121101522.113130@gmx.net>
Message-ID: <20071121102957.219200@gmx.net>

> Anyway, what you refer to is not a 
> bug in the sense that it was a deliberate design decision for the sake 
> of performance. [...] In other words, "settext" that 
> you do in a fragment rule is irrelevant.

And, anyway, the following also does not work (it replaces the main method and the complete grammar in my original posting):

------------------
  public static void main(String[] args) throws Exception {
    run("{ a { b c }}");
  }
}

a : m=CODE { System.out.println("m:" + m.getText()); }
  ;

CODE
    : '{' ( x=CODE | ~('{'|'}') )* '}'
        {
            setText(getText().substring(1, getText().length()));
            //C#: $text = $text.Substring(1, getText().length()-1);
        }
    ;

------------------

No fragments here, only a simple recursive rule. The output is, as before:

{ a { b c }} ==> a { b c }

So setText doesn't seem to work also for a non-fragment lexer rule called inside another lexer rule ... It appears to me that all this should be checked and output by the ANTLR tool (which probably knows about all these rules), shouldn't it? (ok - I know: it doesn't look into the code blocks, so it allows you to do anything there ... it's at your own risk ... but that means at least documentation, documentation, documentation ...).

Regards
Harald

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From antlr at shmuelhome.mine.nu  Wed Nov 21 02:30:15 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 21 Nov 2007 12:30:15 +0200
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <20071121101522.113130@gmx.net>
References: <20071121085344.113150@gmx.net>	<4744032F.8020900@shmuelhome.mine.nu>
	<20071121101522.113130@gmx.net>
Message-ID: <474408B7.5080006@shmuelhome.mine.nu>

Harald Mueller wrote:
>> Anyway, what you refer to is not a 
>> bug in the sense that it was a deliberate design decision for the sake 
>> of performance. [...] In other words, "settext" that 
>> you do in a fragment rule is irrelevant.
>>     
>
> Aha.
> And how do you then convert an ANTLR2 grammar with ! in protected rules to ANTLR3?
> And why is the example in the book, which explicitly DOES use setText() in a fragment??????
>
> Regards
> Harald
>
>   
Consider,

Tok: f=FOO b=BAR {setText(f.getText()+b.getText();};
FOO: 'foo' {setText("123");};
BAR:'bar' {setText("456");};



From harald_m_mueller at gmx.de  Wed Nov 21 02:36:37 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 11:36:37 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <474408B7.5080006@shmuelhome.mine.nu>
References: <20071121085344.113150@gmx.net>
	<4744032F.8020900@shmuelhome.mine.nu>	<20071121101522.113130@gmx.net>
	<474408B7.5080006@shmuelhome.mine.nu>
Message-ID: <20071121103637.219200@gmx.net>

Hi Shmuel -

Output is: foobar
:-(
(at least with my antlr-3.0.1 ... did it work for you?)

Regards
Harald

-------- Original-Nachricht --------
> Datum: Wed, 21 Nov 2007 12:30:15 +0200
> Von: shmuel siegel <antlr at shmuelhome.mine.nu>
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] Fragments and setText appear to not work at all - not even with code from the book

> Harald Mueller wrote:
> >> Anyway, what you refer to is not a 
> >> bug in the sense that it was a deliberate design decision for the sake 
> >> of performance. [...] In other words, "settext" that 
> >> you do in a fragment rule is irrelevant.
> >>     
> >
> > Aha.
> > And how do you then convert an ANTLR2 grammar with ! in protected rules
> to ANTLR3?
> > And why is the example in the book, which explicitly DOES use setText()
> in a fragment??????
> >
> > Regards
> > Harald
> >
> >   
> Consider,
> 
> Tok: f=FOO b=BAR {setText(f.getText()+b.getText();};
> FOO: 'foo' {setText("123");};
> BAR:'bar' {setText("456");};
> 

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser

From guntiso at latnet.lv  Wed Nov 21 02:54:31 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 21 Nov 2007 12:54:31 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
Message-ID: <1195642471.47440e672c3ef@clients.latnet.lv>

Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):

stars        :        (STAR | TRISTAR)* EOF;
STAR : '*' ;
TRISTAR : STAR STAR STAR;

For '**' I keep getting: mismatched character '<EOF>' expecting '*'.

I am out of options. Below is what I've tried:
//tokens { STAR; TRISTAR;}
//options { backtrack = true; }
//options { k = 3; }
//ST        :        ('***') => '***' {type = TRISTAR;}
//        |        '*' {type = STAR;};
//STAR options {greedy=false;}: '*' ;
//TRISTAR : '***';
//TRISTAR : ('***')=>'***';
//TRISTAR options { greedy=true; } : '***';
//TRISTAR options { greedy=true; } : ('***')=>'***';
//TRISTAR options {greedy=false;} : '***';

Guntis



From jaluber at gmx.de  Wed Nov 21 03:40:44 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 21 Nov 2007 12:40:44 +0100
Subject: [antlr-interest] Antlrworks bug?
In-Reply-To: <b8ceeef70711202055i595cbd2em6c842dce6a74618b@mail.gmail.com>
References: <b8ceeef70711202055i595cbd2em6c842dce6a74618b@mail.gmail.com>
Message-ID: <4744193C.1090609@gmx.de>

Steve Bennett wrote:
> Or maybe I don't understand. The test rig generated by Antlrworks for
> this grammar won't compile:
> 
> grammar tiny;
> tiny	:	('a'..'z')+;

It's no bug but a feature. ;) Joking aside, you can't do closures with
ranges in parser rules. The correct way is the one below.

> However this will compile:
> grammar tiny;
> L	:	('a'..'z');
> tiny	:	L+;
> 
> Using ANTLRworks 1.1.4.
> 
> Steve
> 

Johannes

From jaluber at gmx.de  Wed Nov 21 03:47:44 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 21 Nov 2007 12:47:44 +0100
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195642471.47440e672c3ef@clients.latnet.lv>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
Message-ID: <47441AE0.8080909@gmx.de>

Guntis Ozols wrote:
> Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
> 
> stars        :        (STAR | TRISTAR)* EOF;
> STAR : '*' ;
> TRISTAR : STAR STAR STAR;
> 
> For '**' I keep getting: mismatched character '<EOF>' expecting '*'.
> 
> I am out of options. Below is what I've tried:
> //tokens { STAR; TRISTAR;}
> //options { backtrack = true; }
> //options { k = 3; }
> //ST        :        ('***') => '***' {type = TRISTAR;}
> //        |        '*' {type = STAR;};
> //STAR options {greedy=false;}: '*' ;
> //TRISTAR : '***';
> //TRISTAR : ('***')=>'***';
> //TRISTAR options { greedy=true; } : '***';
> //TRISTAR options { greedy=true; } : ('***')=>'***';
> //TRISTAR options {greedy=false;} : '***';
> 
> Guntis
> 
> 

You didn't try

STAR : '*' ('**' {type = TRISTAR;})? ;

Johannes

From antlr at shmuelhome.mine.nu  Wed Nov 21 03:55:28 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 21 Nov 2007 13:55:28 +0200
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <20071121103637.219200@gmx.net>
References: <20071121085344.113150@gmx.net>	<4744032F.8020900@shmuelhome.mine.nu>	<20071121101522.113130@gmx.net>	<474408B7.5080006@shmuelhome.mine.nu>
	<20071121103637.219200@gmx.net>
Message-ID: <47441CB0.3040106@shmuelhome.mine.nu>

Harald Mueller wrote:
> Hi Shmuel -
>
> Output is: foobar
> :-(
> (at least with my antlr-3.0.1 ... did it work for you?)
>
> Regards
> Harald
>
>   
No it didn't. The text of outer token "Tok" is being constructed 
properly but the intermediate token "f" is created in the outer token 
using the boundaries of the text stream. It is not using the token 
created by the inner rule. I think that you have found a bug, or at 
least a design issue.

In the meantime, you have to get around the problem by using some global 
variables. The outer rule can set its own text.

But worse, this won't work either.

grammar x;
@header
{
    package generated;
}
@lexer::header
{
    package generated;
}
@lexer::members
{
    String fooString;
    String booString;
}

boo    :t=Tok{System.out.println($t.getText());};   
Tok: FOO BAR {setText(fooString+booString);};
fragment FOO: 'foo' {fooString=getText()+"123";};
fragment BAR: 'bar' {booString=getText()+"345";};
 
booString will get the value "foobar345" because the system still thinks 
that it is in the Tok rule which begins with "foo".

This looks like something that one of the developers need to look at.


From harald_m_mueller at gmx.de  Wed Nov 21 04:05:17 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 13:05:17 +0100
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195642471.47440e672c3ef@clients.latnet.lv>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
Message-ID: <20071121120517.219210@gmx.net>

As Johannes pointed out, you can do manual left-factoring - but this somehow defies the reason to use ANTLR ...

A "somewhat less intrusive" way, which avoid the left-factoring, is the following:

stars        :        (STAR | TRISTAR)* EOF;
STAR : '*' ;
TRISTAR : 
   {input.LA(1)=='*' && input.LA(2)=='*' && input.LA(3)=='*'}? =>
   STAR STAR STAR;

{...}? is a semantic predicate; and the => forces checking the predicate as with syntactic predicates.

This way, you could keep any actions inside your grammar - at times a nuisance with left-factoring and a primary reason to use some tool to disambiguate input ...

Regards
Harald

-------- Original-Nachricht --------
> Datum: Wed, 21 Nov 2007 12:54:31 +0200
> Von: Guntis Ozols <guntiso at latnet.lv>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Can antlr v3 lex star | tristar properly?

> Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
> 
> stars        :        (STAR | TRISTAR)* EOF;
> STAR : '*' ;
> TRISTAR : STAR STAR STAR;
> 
> For '**' I keep getting: mismatched character '<EOF>' expecting '*'.
> 
> I am out of options. Below is what I've tried:
> //tokens { STAR; TRISTAR;}
> //options { backtrack = true; }
> //options { k = 3; }
> //ST        :        ('***') => '***' {type = TRISTAR;}
> //        |        '*' {type = STAR;};
> //STAR options {greedy=false;}: '*' ;
> //TRISTAR : '***';
> //TRISTAR : ('***')=>'***';
> //TRISTAR options { greedy=true; } : '***';
> //TRISTAR options { greedy=true; } : ('***')=>'***';
> //TRISTAR options {greedy=false;} : '***';
> 
> Guntis
> 

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From harald_m_mueller at gmx.de  Wed Nov 21 04:28:30 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 13:28:30 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <47441CB0.3040106@shmuelhome.mine.nu>
References: <20071121085344.113150@gmx.net>
	<4744032F.8020900@shmuelhome.mine.nu>	<20071121101522.113130@gmx.net>
	<474408B7.5080006@shmuelhome.mine.nu>	<20071121103637.219200@gmx.net>
	<47441CB0.3040106@shmuelhome.mine.nu>
Message-ID: <20071121122830.219170@gmx.net>

> [...] I think that you have found a bug, or at 
> least a design issue.

I'd say a design issue is worse than a bug ;-)

> 
> In the meantime, you have to get around the problem by using some global 
> variables. The outer rule can set its own text.
> 
> But worse, this won't work either.
> 
[...]
> This looks like something that one of the developers need to look at.

So we'll see what them says ...

Regards & thx
Harald
-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From stevagewp at gmail.com  Wed Nov 21 04:52:34 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 21 Nov 2007 23:52:34 +1100
Subject: [antlr-interest] Antlrworks bug?
In-Reply-To: <4744193C.1090609@gmx.de>
References: <b8ceeef70711202055i595cbd2em6c842dce6a74618b@mail.gmail.com>
	<4744193C.1090609@gmx.de>
Message-ID: <b8ceeef70711210452h1faacd98k7c75ae611b6ed0ae@mail.gmail.com>

On 11/21/07, Johannes Luber <jaluber at gmx.de> wrote:
> It's no bug but a feature. ;) Joking aside, you can't do closures with
> ranges in parser rules. The correct way is the one below.

So many gotchas :( And nowhere to look up a set of rules of what works
in what type of grammar. The "definitive reference" is neither
definitive, nor a reference...*

I also only realised today that there is a difference between:

x: 'X'+;

and:
---
x: Z;
Z: 'X'+;
---

(logically imho they should behave the same, and x: ('X')+; should
give the behaviour of the first one)

I think I was a happier man when I thought you couldn't use literals
in parser rules at all.

Steve
* Which isn't to say that it isn't extremely helpful. But it doesn't
seem to cover everything, and it isn't arranged in a way which is
convenient for quickly looking stuff up.

From stevagewp at gmail.com  Wed Nov 21 05:00:01 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 22 Nov 2007 00:00:01 +1100
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195642471.47440e672c3ef@clients.latnet.lv>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
Message-ID: <b8ceeef70711210500p4f5a0aaai623abeee9e7fa377@mail.gmail.com>

On 11/21/07, Guntis Ozols <guntiso at latnet.lv> wrote:
> Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):

Now, I know you said "lex" but just in case, this works:

----
stars: (tristar | star )*;

tristar: '*''*''*';
star: '*';
----

Can someone explain to me why this is so hard using just lexing rules?
What goes wrong?

Steve

From kroepke at classdump.org  Wed Nov 21 06:21:58 2007
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Wed, 21 Nov 2007 15:21:58 +0100
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <b8ceeef70711210500p4f5a0aaai623abeee9e7fa377@mail.gmail.com>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<b8ceeef70711210500p4f5a0aaai623abeee9e7fa377@mail.gmail.com>
Message-ID: <8C31D98C-F8EB-4F5D-8560-205CF7068E58@classdump.org>

Hi!

On Nov 21, 2007, at 2:00 PM, Steve Bennett wrote:

> On 11/21/07, Guntis Ozols <guntiso at latnet.lv> wrote:
>> Is there a way to lex this simple grammar (I am using ANTLRWorks  
>> 1.1.4):
>
> Now, I know you said "lex" but just in case, this works:

No, it doesn't. It will always match 'star', and never 'tristar'  
unless you use a predicate like this:

stars: ((tristar)=>tristar | star)*;

tristar: '*''*''*';
star: '*' {System.out.println("star");};

Watch what happens in ANTLRWorks!

> ----
> stars: (tristar | star )*;
>
> tristar: '*''*''*';
> star: '*';
> ----
>
> Can someone explain to me why this is so hard using just lexing rules?
> What goes wrong?


The problem is basically that ANTLR doesn't do longest-match matching.  
It predicts the next rule that can possibly match based on a minimal  
number of lookahead symbols (characters, tokens or tree nodes).

After seeing two STAR tokens as lookahead, it concludes that the only  
thing that makes sense should be TRISTAR. This behavior is probably  
not terribly intuitive, but as ANTLR doesn't backtrack like lex does  
(lex can simply backtrack in the internal state machine, ANTLR would  
have to do that across method calls...) it's pretty much unavoidable.
In these cases you need to have some kind of predicate to help ANTLR.  
This should only apply to prefix problems like this, though.

Here's my solution to the problem:

stars	: (STAR | TRISTAR)* EOF;

TRISTAR	: {input.LA(3) == '*'}? => '*' '*' '*';
STAR	: '*';

Works like a charm. Try it with five '*' chars in ANTLRWorks :)
You only have to help out at one place here, to force it to match the  
longer token first. Pretty good tradeoff if you ask me.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From guntiso at latnet.lv  Wed Nov 21 06:23:26 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 21 Nov 2007 16:23:26 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <47441AE0.8080909@gmx.de>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<47441AE0.8080909@gmx.de>
Message-ID: <1195655006.47443f5ec84df@clients.latnet.lv>

Yes, we can add it to the list - does NOT work, too:
STAR : '*' ('**' {type = TRISTAR;})? ;

To be sure, I've also tried:
STAR options {bugs=off;}: '*' ('**' {type = TRISTAR;})? ;

Guntis

Johannes Luber wrote:
> Guntis Ozols wrote:
> > Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
> >
> > stars        :        (STAR | TRISTAR)* EOF;
> > STAR : '*' ;
> > TRISTAR : STAR STAR STAR;
> >
> > For '**' I keep getting: mismatched character '<EOF>' expecting '*'.
> >
> > I am out of options. Below is what I've tried:
> > //tokens { STAR; TRISTAR;}
> > //options { backtrack = true; }
> > //options { k = 3; }
> > //ST        :        ('***') => '***' {type = TRISTAR;}
> > //        |        '*' {type = STAR;};
> > //STAR options {greedy=false;}: '*' ;
> > //TRISTAR : '***';
> > //TRISTAR : ('***')=>'***';
> > //TRISTAR options { greedy=true; } : '***';
> > //TRISTAR options { greedy=true; } : ('***')=>'***';
> > //TRISTAR options {greedy=false;} : '***';
> >
> > Guntis
>
> You didn't try
>
> STAR : '*' ('**' {type = TRISTAR;})? ;
>
> Johannes


From guntiso at latnet.lv  Wed Nov 21 06:24:49 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 21 Nov 2007 16:24:49 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <20071121120517.219210@gmx.net>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<20071121120517.219210@gmx.net>
Message-ID: <1195655089.47443fb1deee9@clients.latnet.lv>

The real life example is actually:

DCOLON                :        '::';
NS_TEST                :        NCName ':*';
PrefixedName        :        NCName ':' NCName;
NCName                :        ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z'
| '.' | '-' | '_' |
'0'..'9')*;

> As Johannes pointed out, you can do manual left-factoring - but this somehow
> defies the reason to use ANTLR ...

And it even does not work...

> A "somewhat less intrusive" way, which avoid the left-factoring, is the
> following:
>
> stars        :        (STAR | TRISTAR)* EOF;
> STAR : '*' ;
> TRISTAR :
>    {input.LA(1)=='*' && input.LA(2)=='*' && input.LA(3)=='*'}? =>
>    STAR STAR STAR;
>
> {...}? is a semantic predicate; and the => forces checking the predicate as
> with syntactic predicates.
>
> This way, you could keep any actions inside your grammar - at times a
> nuisance with left-factoring and a primary reason to use some tool to
> disambiguate input ...
>
> Regards
> Harald
>
> -------- Original-Nachricht --------
> > Datum: Wed, 21 Nov 2007 12:54:31 +0200
> > Von: Guntis Ozols <guntiso at latnet.lv>
> > An: antlr-interest at antlr.org
> > Betreff: [antlr-interest] Can antlr v3 lex star | tristar properly?
>
> > Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
> >
> > stars        :        (STAR | TRISTAR)* EOF;
> > STAR : '*' ;
> > TRISTAR : STAR STAR STAR;
> >
> > For '**' I keep getting: mismatched character '<EOF>' expecting '*'.
> >
> > I am out of options. Below is what I've tried:
> > //tokens { STAR; TRISTAR;}
> > //options { backtrack = true; }
> > //options { k = 3; }
> > //ST        :        ('***') => '***' {type = TRISTAR;}
> > //        |        '*' {type = STAR;};
> > //STAR options {greedy=false;}: '*' ;
> > //TRISTAR : '***';
> > //TRISTAR : ('***')=>'***';
> > //TRISTAR options { greedy=true; } : '***';
> > //TRISTAR options { greedy=true; } : ('***')=>'***';
> > //TRISTAR options {greedy=false;} : '***';
> >
> > Guntis


From guntiso at latnet.lv  Wed Nov 21 07:14:04 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 21 Nov 2007 17:14:04 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <8C31D98C-F8EB-4F5D-8560-205CF7068E58@classdump.org>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<b8ceeef70711210500p4f5a0aaai623abeee9e7fa377@mail.gmail.com>
	<8C31D98C-F8EB-4F5D-8560-205CF7068E58@classdump.org>
Message-ID: <1195658044.47444b3ce16f0@clients.latnet.lv>

Is it a bug or a feature that
  TRISTAR : ('***')=>'***'; does not work?

Is it a bug or a feature that
  STAR : '*' ('**' {type = TRISTAR;})?; does not work?

Can it be lexed with only syntactic predicates?

How can the following be lexed:
  DCOLON       : '::';
  NS_TEST      : NCName ':*';
  PrefixedName : NCName ':' NCName;
  NCName       : ('a'..'z' | 'A'..'Z' | '_')
                 ('a'..'z' | 'A'..'Z' | '.' | '-' | '_' | '0'..'9')*;

> The problem is basically that ANTLR doesn't do longest-match matching.
> It predicts the next rule that can possibly match based on a minimal
> number of lookahead symbols (characters, tokens or tree nodes).
>
> After seeing two STAR tokens as lookahead, it concludes that the only
> thing that makes sense should be TRISTAR. This behavior is probably
> not terribly intuitive, but as ANTLR doesn't backtrack like lex does
> (lex can simply backtrack in the internal state machine, ANTLR would
> have to do that across method calls...) it's pretty much unavoidable.
> In these cases you need to have some kind of predicate to help ANTLR.
> This should only apply to prefix problems like this, though.
>
> Here's my solution to the problem:
>
> stars	: (STAR | TRISTAR)* EOF;
>
> TRISTAR	: {input.LA(3) == '*'}? => '*' '*' '*';
> STAR	: '*';
>
> Works like a charm. Try it with five '*' chars in ANTLRWorks :)
> You only have to help out at one place here, to force it to match the
> longer token first. Pretty good tradeoff if you ask me.
>
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/



From jimi at temporal-wave.com  Wed Nov 21 09:57:28 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 09:57:28 -0800
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195642471.47440e672c3ef@clients.latnet.lv>
Message-ID: <"H000006700014546.1195667848.scalix.temporal-wave.com*"@MHS>


fragment STAR
: '*' ;

TRISTAR
	: '*'
		(  '*' '*'
		  | { $type = STAR; }
            )
	;

> -----Original Message-----
> From: Guntis Ozols [mailto:guntiso at latnet.lv]
> Sent: Wednesday, November 21, 2007 2:55 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
> 
> Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
> 
> stars        :        (STAR | TRISTAR)* EOF;
> STAR : '*' ;
> TRISTAR : STAR STAR STAR;
> 
> For '**' I keep getting: mismatched character '<EOF>' expecting '*'.
> 
> I am out of options. Below is what I've tried:
> //tokens { STAR; TRISTAR;}
> //options { backtrack = true; }
> //options { k = 3; }
> //ST        :        ('***') => '***' {type = TRISTAR;}
> //        |        '*' {type = STAR;};
> //STAR options {greedy=false;}: '*' ;
> //TRISTAR : '***';
> //TRISTAR : ('***')=>'***';
> //TRISTAR options { greedy=true; } : '***';
> //TRISTAR options { greedy=true; } : ('***')=>'***';
> //TRISTAR options {greedy=false;} : '***';
> 
> Guntis
> 
> 



From vbar at comp.cz  Wed Nov 21 10:07:26 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Wed, 21 Nov 2007 19:07:26 +0100
Subject: [antlr-interest] antlr gramma versus yacc grammar
In-Reply-To: <474362CD.3080500@kjchome.homeip.net>
References: <47435C5E.6020509@jpl.nasa.gov>
	<474362CD.3080500@kjchome.homeip.net>
Message-ID: <200711211907.26665.vbar@comp.cz>

On Tuesday 20 November 2007 23:42:21 Kevin J. Cummings wrote:
> Mathew Yeates wrote:
> > I haven't found mention of yacc yet in the book. How do yacc and antlr
> > differ?
> YACC is LALR(1) (or almost LALR(1)), while ANTLR is LL(k).
...
> > I have found a fortran 77 yacc/lex grammar as part of the f2c package at
> > netlib. How difficult is it to turn this into a antlr grammar? I know
> > ... Someone write a translator!!
> Shouldn't be too difficult, and it should be a straight-forward problem
> to solve.  Let us know where you get stuck, and we can help.
Well, AFAIK there are LALR(1) grammars which aren't LL(k), so a general 
translator would be non-trivial :-) - much easier to stick to the specific 
grammar...

	Bye
		Vasek
--
Open Source integration
http://www.mangrove.cz/

From jimi at temporal-wave.com  Wed Nov 21 10:08:37 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 10:08:37 -0800
Subject: [antlr-interest] Antlrworks bug?
In-Reply-To: <b8ceeef70711210452h1faacd98k7c75ae611b6ed0ae@mail.gmail.com>
Message-ID: <"H00000670001454d.1195668517.scalix.temporal-wave.com*"@MHS>

Think through your example below again, they are logically entirely different, but the mis-interpretation is why I think that the literals in the parser is actually causing more trouble than help, especially to people new to it. I advise that nobody uses these until they are completely in command of the system.

Using a literal deinfes a lexer token as being the literal you use. So: 'X'+ means define a token for the text 'X' and it can repeat 1..n times. Whereas your lexer rule is saying that it is a token called Z and this SINGLE TOKEN can be 1..n 'X' characters.

So, don't use the literals in your parser as it is confusing to people unless they are already understand it (you can't get there from here ;-).

Jim  

> -----Original Message-----
> From: Steve Bennett [mailto:stevagewp at gmail.com]
> Sent: Wednesday, November 21, 2007 4:53 AM
> To: Johannes Luber
> Cc: antlr-interest Interest
> Subject: Re: [antlr-interest] Antlrworks bug?
> 
> On 11/21/07, Johannes Luber <jaluber at gmx.de> wrote:
> > It's no bug but a feature. ;) Joking aside, you can't do closures with
> > ranges in parser rules. The correct way is the one below.
> 
> So many gotchas :( And nowhere to look up a set of rules of what works
> in what type of grammar. The "definitive reference" is neither
> definitive, nor a reference...*
> 
> I also only realised today that there is a difference between:
> 
> x: 'X'+;
> 
> and:
> ---
> x: Z;
> Z: 'X'+;
> ---
> 
> (logically imho they should behave the same, and x: ('X')+; should
> give the behaviour of the first one)
> 
> I think I was a happier man when I thought you couldn't use literals
> in parser rules at all.
> 
> Steve
> * Which isn't to say that it isn't extremely helpful. But it doesn't
> seem to cover everything, and it isn't arranged in a way which is
> convenient for quickly looking stuff up.



From Austin_Hastings at Yahoo.com  Wed Nov 21 02:44:37 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Wed, 21 Nov 2007 05:44:37 -0500
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <20071121102957.219200@gmx.net>
References: <20071121085344.113150@gmx.net>	<4744032F.8020900@shmuelhome.mine.nu>
	<20071121101522.113130@gmx.net> <20071121102957.219200@gmx.net>
Message-ID: <47440C15.2090700@Yahoo.com>

I think the underlying source of your angst is the fact that setText() 
works against a non-scoped (effectively: global) object. If you are 
recursing in your token rule, all the calls to setText() update the same 
value. Unless your rule is structured to make use of this somehow (such 
as by calling getText(), I guess) then it probably won't DWYW.

I recently got burned by a similar problem, calling a full-fledged token 
method (that used setText()) when I should have made a fragment.

I think the right idiom to use is this:

TOKEN: TokenFragment { setText(...); } ;
fragment TokenFragment: ... recognize without updating ... ;

In your case, you may want to investigate creating a scope, or a return 
value for the fragment, or using a stack-like construct of your own 
devising.

Anyway, you're right -- the example doesn't work. Welcome to hell, 
here's your accordion.

=Austin


Harald Mueller wrote:
>> Anyway, what you refer to is not a 
>> bug in the sense that it was a deliberate design decision for the sake 
>> of performance. [...] In other words, "settext" that 
>> you do in a fragment rule is irrelevant.
>>     
>
> And, anyway, the following also does not work (it replaces the main method and the complete grammar in my original posting):
>
> ------------------
>   public static void main(String[] args) throws Exception {
>     run("{ a { b c }}");
>   }
> }
>
> a : m=CODE { System.out.println("m:" + m.getText()); }
>   ;
>
> CODE
>     : '{' ( x=CODE | ~('{'|'}') )* '}'
>         {
>             setText(getText().substring(1, getText().length()));
>             //C#: $text = $text.Substring(1, getText().length()-1);
>         }
>     ;
>
> ------------------
>
> No fragments here, only a simple recursive rule. The output is, as before:
>
> { a { b c }} ==> a { b c }
>
> So setText doesn't seem to work also for a non-fragment lexer rule called inside another lexer rule ... It appears to me that all this should be checked and output by the ANTLR tool (which probably knows about all these rules), shouldn't it? (ok - I know: it doesn't look into the code blocks, so it allows you to do anything there ... it's at your own risk ... but that means at least documentation, documentation, documentation ...).
>
> Regards
> Harald
>
>   


From jimi at temporal-wave.com  Wed Nov 21 10:20:44 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 10:20:44 -0800
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <8C31D98C-F8EB-4F5D-8560-205CF7068E58@classdump.org>
Message-ID: <"H0000067000145a4.1195669243.scalix.temporal-wave.com*"@MHS>

You can do this without predicates though. People seem to reach for the predicate stick immediately the lexer doesn't do what they want. Look at the common routes through the tokens and make a single lex rule with alts at each of those points. The lexer code will then be very natural.

If you were coding if statements in a language, you would not code:

If (*(a+2) == '*' && *(a+1) == '*' && *a == '*') {sdkdslkf} else if (*a == '*' { ****

You code:

if (*a == '*')
{
  If (*(a+1) == '*' && *(a+2) == '*')
  {
    L;
  }
  else
  {
    X;
...

So, if you think of constructing the lexer rules as guiding it through the characters it is coming across, you will arrive at:

T : '*'
     (
        // Here can be tristar or star
        //
          '**'  { $type = T3; } // Tristar
        | // Anything else means this is just a T
     )
  ;

And will require no predicates.

A predicate might help you here if you only want to take the '***' path if there really are three '*', instead of erroring out in the lexer if there are two. However, Personally I prefer to catch things like that and issue a specific error message (which programmers like).

You can say:

T : '*'
     (
        // Here can be tristar or star or perhaps error
        //
          '*'
		(
                 '*'  { $type = T3; } // Tristar
               | { // call "Error: malformed operator '**' did you mean '*' or '***' }
             )
        | // Anything else means this is just a T
     )

That kind of technique is useful for trapping un-terminated quoted strings while you are in the lexer and so on.

Jim

> -----Original Message-----
> From: Kay R?pke [mailto:kroepke at classdump.org]
> Sent: Wednesday, November 21, 2007 6:22 AM
> To: Steve Bennett
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can antlr v3 lex star | tristar properly?
> 
> Hi!
> 
> On Nov 21, 2007, at 2:00 PM, Steve Bennett wrote:
> 
> > On 11/21/07, Guntis Ozols <guntiso at latnet.lv> wrote:
> >> Is there a way to lex this simple grammar (I am using ANTLRWorks
> >> 1.1.4):
> >
> > Now, I know you said "lex" but just in case, this works:
> 
> No, it doesn't. It will always match 'star', and never 'tristar'
> unless you use a predicate like this:
> 
> stars: ((tristar)=>tristar | star)*;
> 
> tristar: '*''*''*';
> star: '*' {System.out.println("star");};
> 
> Watch what happens in ANTLRWorks!
> 
> > ----
> > stars: (tristar | star )*;
> >
> > tristar: '*''*''*';
> > star: '*';
> > ----
> >
> > Can someone explain to me why this is so hard using just lexing rules?
> > What goes wrong?
> 
> 
> The problem is basically that ANTLR doesn't do longest-match matching.
> It predicts the next rule that can possibly match based on a minimal
> number of lookahead symbols (characters, tokens or tree nodes).
> 
> After seeing two STAR tokens as lookahead, it concludes that the only
> thing that makes sense should be TRISTAR. This behavior is probably
> not terribly intuitive, but as ANTLR doesn't backtrack like lex does
> (lex can simply backtrack in the internal state machine, ANTLR would
> have to do that across method calls...) it's pretty much unavoidable.
> In these cases you need to have some kind of predicate to help ANTLR.
> This should only apply to prefix problems like this, though.
> 
> Here's my solution to the problem:
> 
> stars	: (STAR | TRISTAR)* EOF;
> 
> TRISTAR	: {input.LA(3) == '*'}? => '*' '*' '*';
> STAR	: '*';
> 
> Works like a charm. Try it with five '*' chars in ANTLRWorks :)
> You only have to help out at one place here, to force it to match the
> longer token first. Pretty good tradeoff if you ask me.
> 
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 
> 
> 
> 



From matthieu at offthelip.org  Wed Nov 21 10:29:03 2007
From: matthieu at offthelip.org (Matthieu Riou)
Date: Wed, 21 Nov 2007 10:29:03 -0800
Subject: [antlr-interest] Support for .* tree rewrite rules
Message-ID: <fbdc6a970711211029o3d10a2d7pcb06943efb7a936@mail.gmail.com>

Hi,

I've downloaded the latest version of ANTLR from Fisheye but I still can't
use AST rewrite rules for any lexer expression containing (.*). For example:

function:    'function' f=ID '(' ID? (',' ID)* ')' '{' (options
{greedy=false;} : .)* '}' -> ^(FUNCTION $f);

Anything like this will result in the following exception:

error(10):  internal error:
/home/mriou/dev/projects/simpel/src/main/antlr/org/apache/ode/simpel/antlr/SimPEL.g
: java.lang.IllegalArgumentException: Can't find template wildcardTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Unknown Source)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(Unknown Source)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java
:160)
org.antlr.codegen.CodeGenTreeWalker.getWildcardST(CodeGenTreeWalker.java
:113)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2177)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1674)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1284)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1068)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1837)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1670)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1284)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1068)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:784)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:575)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:517)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:427)
org.antlr.Tool.processGrammar(Tool.java:368)
org.antlr.Tool.process(Tool.java:270)

Any plan to fix this? Otherwise I'll have to do some manual heavy lifting on
the AST.

Thanks!
Matthieu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071121/8831acdf/attachment.html 

From Mike at LeBlanc-Engineering.com  Wed Nov 21 10:59:40 2007
From: Mike at LeBlanc-Engineering.com (Michael LeBlanc)
Date: Wed, 21 Nov 2007 13:59:40 -0500
Subject: [antlr-interest] Support for .* tree rewrite rules
In-Reply-To: <fbdc6a970711211029o3d10a2d7pcb06943efb7a936@mail.gmail.com>
References: <fbdc6a970711211029o3d10a2d7pcb06943efb7a936@mail.gmail.com>
Message-ID: <37B039F9-5B6A-4214-A2B1-D6EE435BBDF5@LeBlanc-Engineering.com>

The fix is to avoid mixing lexer constructs in a parser rule.  Your  
phrase

	'{' (options {greedy=false;} : .)* '}'

should be recast as a lexer rule like

	FBODY: '{' (options {greedy=false;} : .)* '}' ;

Your parser rule becomes

	function:    'function' f=ID '(' ID? (',' ID)* ')' FBODY -> ^ 
(FUNCTION $f);

From brian at todoroff.com  Wed Nov 21 12:44:33 2007
From: brian at todoroff.com (Brian Todoroff)
Date: Wed, 21 Nov 2007 12:44:33 -0800
Subject: [antlr-interest] Example C style interpreter?
Message-ID: <2d360a1c0711211244w75590c4avdf9ea5903e7c2d3f@mail.gmail.com>

Those are great examples of parsers, but I'm hoping to find an example
where someone has taken it the next step to an actual interpreter.
Unless I'm missing something these all stop after parsing the source.
I need to add a scripting engine to an in house app, so looking for an
example interpreter to help boost me up the learning curve.

Thanks,
Brian

> ---------- Forwarded message ----------
> From: Johannes Luber <jaluber at gmx.de>
> To:
> Date: Tue, 20 Nov 2007 21:05:35 +0100
> Subject: Re: [antlr-interest] Example C style interpreter?
> Brian Todoroff wrote:
> > Is there an example of a more realistic interpreter than the simple
> > tree based interpreter in the wiki?  Would prefer a simple C style
> > language, but really anything with multiple types, functions, and
> > function local variables will give me the basis for learning how to
> > get this done in ANTLR.  Thanks all for any help and the great tools.
> >
> > Brian
> >
>
> There are the examples for Java, C and C#. They should be available on
> the download page.
>
> Johannes

From jaluber at gmx.de  Wed Nov 21 13:43:46 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 21 Nov 2007 22:43:46 +0100
Subject: [antlr-interest] Example C style interpreter?
In-Reply-To: <2d360a1c0711211244w75590c4avdf9ea5903e7c2d3f@mail.gmail.com>
References: <2d360a1c0711211244w75590c4avdf9ea5903e7c2d3f@mail.gmail.com>
Message-ID: <4744A692.3090301@gmx.de>

Brian Todoroff wrote:
> Those are great examples of parsers, but I'm hoping to find an example
> where someone has taken it the next step to an actual interpreter.
> Unless I'm missing something these all stop after parsing the source.
> I need to add a scripting engine to an in house app, so looking for an
> example interpreter to help boost me up the learning curve.
> 
> Thanks,
> Brian

How about http://www.linguamantra.org/? As it is a complete compiler it
may contain the required steps.

Johannes

From harald_m_mueller at gmx.de  Wed Nov 21 13:52:54 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 21 Nov 2007 22:52:54 +0100
Subject: [antlr-interest] Fragments and setText appear to not work at
 all - not even with code from the book
In-Reply-To: <47440C15.2090700@Yahoo.com>
References: <20071121085344.113150@gmx.net>
	<4744032F.8020900@shmuelhome.mine.nu> <20071121101522.113130@gmx.net>
	<20071121102957.219200@gmx.net> <47440C15.2090700@Yahoo.com>
Message-ID: <20071121215254.29860@gmx.net>

> I think the underlying source of your angst is the fact that setText() 
> works against a non-scoped (effectively: global) object. 

It's not so much "angst" or something like that - it's the fact that ANTLR 2 has a well-defined and fully working feature for doing this; and that ANTLR 3 promises (even if only through an example in "the book") the same (and, implicitly, even more); and that I have non-trivial grammars using the ANTLR 2 feature - so I expect ANTLR 3 to provide the same.

Terrence should simply make this work (and for those you fear performance penalities: Simply declaring a local name for the fragment token will create a new object anyway - having the changed text assembled in it does not cost anything [if done through a suitable lazy-write obejct]).

I'm waiting for a design+bug fix on this ...

Regards & thx for the support
Harald

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From clifford.heath at gmail.com  Wed Nov 21 14:28:48 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Thu, 22 Nov 2007 09:28:48 +1100
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <"H000006700014546.1195667848.scalix.temporal-wave.com*"@MHS>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<"H000006700014546.1195667848.scalix.temporal-wave.com*"@MHS>
Message-ID: <fi2bf0$seg$1@ger.gmane.org>

Jim Idle wrote:
> fragment STAR
> : '*' ;
> 
> TRISTAR
> 	: '*'
> 		(  '*' '*'
> 		  | { $type = STAR; }
>             )
> 	;

Jim,

I'm missing something here. Is the fragment STAR only
required to tell ANTLR that there's a token called STAR?
Because your example doesn't use it in the TRISTAR rule.

Assuming that's what you meant, would it be the same to
just have defined STAR in the @tokens section?

Clifford Heath.


From jimi at temporal-wave.com  Wed Nov 21 14:23:22 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 14:23:22 -0800
Subject: [antlr-interest] Fragments and setText appear to not work at
	all - not even with code from the book
In-Reply-To: <20071121215254.29860@gmx.net>
Message-ID: <"H0000067000147e9.1195683802.scalix.temporal-wave.com*"@MHS>

This has been discussed lots of times. Look through the archives before making pronouncements ;-).

You can do everything you need to with ANTLR3, it is just different because Ter fixed the performance overhead of copying the text from the input stream to the token on every token, when you many times did not need it. Your thoughts about performance penalties are not correct because in ANTLR3, you only incur such penalties when you actually need to.

You will mostly need to get your code to work with emit and perhaps think slightly differently about your lexer rules is all. It's different, but you will get the hang of it, I am sure.

Jim


> -----Original Message-----
> From: Harald Mueller [mailto:harald_m_mueller at gmx.de]
> Sent: Wednesday, November 21, 2007 1:53 PM
> To: Austin_Hastings at Yahoo.com
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fragments and setText appear to not work at
> all - not even with code from the book
> 
> > I think the underlying source of your angst is the fact that setText()
> > works against a non-scoped (effectively: global) object.
> 
> It's not so much "angst" or something like that - it's the fact that ANTLR
> 2 has a well-defined and fully working feature for doing this; and that
> ANTLR 3 promises (even if only through an example in "the book") the same
> (and, implicitly, even more); and that I have non-trivial grammars using
> the ANTLR 2 feature - so I expect ANTLR 3 to provide the same.
> 
> Terrence should simply make this work (and for those you fear performance
> penalities: Simply declaring a local name for the fragment token will
> create a new object anyway - having the changed text assembled in it does
> not cost anything [if done through a suitable lazy-write obejct]).
> 
> I'm waiting for a design+bug fix on this ...
> 
> Regards & thx for the support
> Harald
> 
> --
> Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
> Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger



From guntiso at latnet.lv  Wed Nov 21 14:29:44 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Thu, 22 Nov 2007 00:29:44 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195642471.47440e672c3ef@clients.latnet.lv>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
Message-ID: <1195684184.4744b1586b27d@clients.latnet.lv>

Thanks, guys!

I've finally found (thanks to Jim Idle) a solution that both works and
is based on syntactic predicates:
  STAR : '*' (('**') => '**'  { type = TRISTAR; } | );

Solution by Kay R?pke also works:
  TRISTAR : {input.LA(3) == '*'}? => '*' '*' '*';
  STAR    : '*';

I still do not understand why
  STAR : '*' ;
  TRISTAR : ('***') => '***';
does not work as expected, I think it is a bug in v3.

I like antlr because antlr grammar is much more readable than regular
expressions, but enhancements are needed to antlr because lexing gets
broken by adding more tokens, and no warning is given.

> Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
>
> stars        :        (STAR | TRISTAR)* EOF;
> STAR : '*' ;
> TRISTAR : STAR STAR STAR;
>
> For '**' I keep getting: mismatched character '<EOF>' expecting '*'.

Guntis


From jimi at temporal-wave.com  Wed Nov 21 14:25:23 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 14:25:23 -0800
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <fi2bf0$seg$1@ger.gmane.org>
Message-ID: <"H0000067000147ed.1195683923.scalix.temporal-wave.com*"@MHS>

Yes - I should clarify that I tend to use the fragment because that prevents ANLTR from complaining that there is no token called STAR, which is what happens if you put in tokens { STAR; }

I just don't like warnings ;-)

Jim

> -----Original Message-----
> From: Clifford Heath [mailto:clifford.heath at gmail.com]
> Sent: Wednesday, November 21, 2007 2:29 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can antlr v3 lex star | tristar properly?
> 
> Jim Idle wrote:
> > fragment STAR
> > : '*' ;
> >
> > TRISTAR
> > 	: '*'
> > 		(  '*' '*'
> > 		  | { $type = STAR; }
> >             )
> > 	;
> 
> Jim,
> 
> I'm missing something here. Is the fragment STAR only
> required to tell ANTLR that there's a token called STAR?
> Because your example doesn't use it in the TRISTAR rule.
> 
> Assuming that's what you meant, would it be the same to
> just have defined STAR in the @tokens section?
> 
> Clifford Heath.
> 



From cummings at kjchome.homeip.net  Wed Nov 21 14:33:41 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 21 Nov 2007 17:33:41 -0500
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195684184.4744b1586b27d@clients.latnet.lv>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<1195684184.4744b1586b27d@clients.latnet.lv>
Message-ID: <4744B245.6010603@kjchome.homeip.net>

Guntis Ozols wrote:
> Thanks, guys!
> 
> I've finally found (thanks to Jim Idle) a solution that both works and
> is based on syntactic predicates:
>   STAR : '*' (('**') => '**'  { type = TRISTAR; } | );
> 
> Solution by Kay R?pke also works:
>   TRISTAR : {input.LA(3) == '*'}? => '*' '*' '*';
>   STAR    : '*';
> 
> I still do not understand why
>   STAR : '*' ;
>   TRISTAR : ('***') => '***';
> does not work as expected, I think it is a bug in v3.

What happens if you reverse the order of STAR and TRISTAR in the
previous example, ie don't recognize STAR before you've check for
TRISTAR.  I was under the impression that ANTLR was dependent upon the
order of certain productions.

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From guntiso at latnet.lv  Wed Nov 21 14:40:53 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Thu, 22 Nov 2007 00:40:53 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <4744B245.6010603@kjchome.homeip.net>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<1195684184.4744b1586b27d@clients.latnet.lv>
	<4744B245.6010603@kjchome.homeip.net>
Message-ID: <1195684853.4744b3f52d10a@clients.latnet.lv>

Cit?ju "Kevin J. Cummings" <cummings at kjchome.homeip.net>:

> Guntis Ozols wrote:
> > Thanks, guys!
> >
> > I've finally found (thanks to Jim Idle) a solution that both works and
> > is based on syntactic predicates:
> >   STAR : '*' (('**') => '**'  { type = TRISTAR; } | );
> >
> > Solution by Kay R?pke also works:
> >   TRISTAR : {input.LA(3) == '*'}? => '*' '*' '*';
> >   STAR    : '*';
> >
> > I still do not understand why
> >   STAR : '*' ;
> >   TRISTAR : ('***') => '***';
> > does not work as expected, I think it is a bug in v3.
>
> What happens if you reverse the order of STAR and TRISTAR in the
> previous example, ie don't recognize STAR before you've check for
> TRISTAR.  I was under the impression that ANTLR was dependent upon the
> order of certain productions.

Does not work

> --
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>





From cummings at kjchome.homeip.net  Wed Nov 21 14:48:36 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 21 Nov 2007 17:48:36 -0500
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195684853.4744b3f52d10a@clients.latnet.lv>
References: <1195642471.47440e672c3ef@clients.latnet.lv>	<1195684184.4744b1586b27d@clients.latnet.lv>	<4744B245.6010603@kjchome.homeip.net>
	<1195684853.4744b3f52d10a@clients.latnet.lv>
Message-ID: <4744B5C4.609@kjchome.homeip.net>

Guntis Ozols wrote:
> Cit?ju "Kevin J. Cummings" <cummings at kjchome.homeip.net>:
> 
>> Guntis Ozols wrote:
>>> Thanks, guys!
>>>
>>> I've finally found (thanks to Jim Idle) a solution that both works and
>>> is based on syntactic predicates:
>>>   STAR : '*' (('**') => '**'  { type = TRISTAR; } | );
>>>
>>> Solution by Kay R?pke also works:
>>>   TRISTAR : {input.LA(3) == '*'}? => '*' '*' '*';
>>>   STAR    : '*';
>>>
>>> I still do not understand why
>>>   STAR : '*' ;
>>>   TRISTAR : ('***') => '***';
>>> does not work as expected, I think it is a bug in v3.
>> What happens if you reverse the order of STAR and TRISTAR in the
>> previous example, ie don't recognize STAR before you've check for
>> TRISTAR.  I was under the impression that ANTLR was dependent upon the
>> order of certain productions.
> 
> Does not work

I'm surprised, in ANTLR 2, I've done the following, which works fine:

> protected
> DIGIT      : '0' .. '9'
>            ;
> 
> protected
> DIGITS     : ( DIGIT ) +                              // Just digits
>            ;
> 
> protected
> FLOAT      : DIGITS '.' DIGITS
>            ;
> 
> protected
> UINT       : DIGITS
>            ;
> 
> NUM        : ( DIGITS '.' ) => FLOAT
>            | UINT
>            ;

So if the similar construct doesn't work in ANTLR 3, then I'd consider
it a regression.  Terry may feel differently.  B^)

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From guntiso at latnet.lv  Wed Nov 21 14:54:30 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Thu, 22 Nov 2007 00:54:30 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <"H000006700014546.1195667848.scalix.temporal-wave.com*"@MHS>
References: <"H000006700014546.1195667848.scalix.temporal-wave.com*"@MHS>
Message-ID: <1195685670.4744b726c0076@clients.latnet.lv>

> fragment STAR
> : '*' ;
>
> TRISTAR
> 	: '*'
> 		(  '*' '*'
> 		  | { $type = STAR; }
>             )
> 	;

Does not work

>
> > -----Original Message-----
> > From: Guntis Ozols [mailto:guntiso at latnet.lv]
> > Sent: Wednesday, November 21, 2007 2:55 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
> >
> > Is there a way to lex this simple grammar (I am using ANTLRWorks 1.1.4):
> >
> > stars        :        (STAR | TRISTAR)* EOF;
> > STAR : '*' ;
> > TRISTAR : STAR STAR STAR;
> >
> > For '**' I keep getting: mismatched character '<EOF>' expecting '*'.
> >
> > I am out of options. Below is what I've tried:
> > //tokens { STAR; TRISTAR;}
> > //options { backtrack = true; }
> > //options { k = 3; }
> > //ST        :        ('***') => '***' {type = TRISTAR;}
> > //        |        '*' {type = STAR;};
> > //STAR options {greedy=false;}: '*' ;
> > //TRISTAR : '***';
> > //TRISTAR : ('***')=>'***';
> > //TRISTAR options { greedy=true; } : '***';
> > //TRISTAR options { greedy=true; } : ('***')=>'***';
> > //TRISTAR options {greedy=false;} : '***';
> >
> > Guntis



From jimi at temporal-wave.com  Wed Nov 21 14:50:36 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 14:50:36 -0800
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195684184.4744b1586b27d@clients.latnet.lv>
Message-ID: <"H000006700014895.1195685436.scalix.temporal-wave.com*"@MHS>



> -----Original Message-----
> From: Guntis Ozols [mailto:guntiso at latnet.lv]
> Sent: Wednesday, November 21, 2007 2:30 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can antlr v3 lex star | tristar properly?
> 
> Thanks, guys!
> 
> I've finally found (thanks to Jim Idle) a solution that both works and
> is based on syntactic predicates:
>   STAR : '*' (('**') => '**'  { type = TRISTAR; } | );
> 
> Solution by Kay R?pke also works:
>   TRISTAR : {input.LA(3) == '*'}? => '*' '*' '*';
>   STAR    : '*';
> 
> I still do not understand why
>   STAR : '*' ;
>   TRISTAR : ('***') => '***';

Essentially, you  predicate is useless in that there is no other alt than the three '*'. Hence hence you combine the two tokens into a single root, you can use a predicate to choose one path OR the other, having another path is the key here

Jim


From jimi at temporal-wave.com  Wed Nov 21 14:53:15 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Nov 2007 14:53:15 -0800
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <1195685670.4744b726c0076@clients.latnet.lv>
Message-ID: <"H000006700014899.1195685595.scalix.temporal-wave.com*"@MHS>



> -----Original Message-----
> From: Guntis Ozols [mailto:guntiso at latnet.lv]
> Sent: Wednesday, November 21, 2007 2:55 PM
> To: antlr-interest
> Subject: Re: [antlr-interest] Can antlr v3 lex star | tristar properly?
> 
> > fragment STAR
> > : '*' ;
> >
> > TRISTAR
> > 	: '*'
> > 		(  '*' '*'
> > 		  | { $type = STAR; }
> >             )
> > 	;
> 
> Does not work

You probably do need the predicate:

(   ('**')=> '**'
  | ...


You should regard the lexer as a kind of simplified parser. You would not expect to just throw a bunch o rules at the parser and hope it sorts them out, and you also need to make sure you are no expecting the lexer part of this to do the same :-)

Jim


From guntiso at latnet.lv  Wed Nov 21 15:22:07 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Thu, 22 Nov 2007 01:22:07 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <"H000006700014899.1195685595.scalix.temporal-wave.com*"@MHS>
References: <"H000006700014899.1195685595.scalix.temporal-wave.com*"@MHS>
Message-ID: <1195687327.4744bd9ff017c@clients.latnet.lv>

Jim Idle <jimi at temporal-wave.com> wrote:

> You should regard the lexer as a kind of simplified parser. You would not
> expect to just throw a bunch o rules at the parser and hope it sorts them
> out, and you also need to make sure you are no expecting the lexer part of
> this to do the same :-)
>
> Jim

Well, I believe if it can be figured out, it should be figured out!
Maybe there will be antlr v4 some day, free of all those gotchas...


From guntiso at latnet.lv  Wed Nov 21 15:23:58 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Thu, 22 Nov 2007 01:23:58 +0200
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <"H000006700014895.1195685436.scalix.temporal-wave.com*"@MHS>
References: <"H000006700014895.1195685436.scalix.temporal-wave.com*"@MHS>
Message-ID: <1195687438.4744be0e13eb0@clients.latnet.lv>

> > -----Original Message-----
> > From: Guntis Ozols [mailto:guntiso at latnet.lv]
> > Sent: Wednesday, November 21, 2007 2:30 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Can antlr v3 lex star | tristar properly?
> >
> > Thanks, guys!
> >
> > I've finally found (thanks to Jim Idle) a solution that both works and
> > is based on syntactic predicates:
> >   STAR : '*' (('**') => '**'  { type = TRISTAR; } | );
> >
> > Solution by Kay R?pke also works:
> >   TRISTAR : {input.LA(3) == '*'}? => '*' '*' '*';
> >   STAR    : '*';
> >
> > I still do not understand why
> >   STAR : '*' ;
> >   TRISTAR : ('***') => '***';
>
> Essentially, you  predicate is useless in that there is no other alt than the
> three '*'. Hence hence you combine the two tokens into a single root, you can
> use a predicate to choose one path OR the other, having another path is the
> key here
>
> Jim

STAR : '*' ('**'  { type = TRISTAR; } | );

does not work.


From stevagewp at gmail.com  Wed Nov 21 15:54:27 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 22 Nov 2007 10:54:27 +1100
Subject: [antlr-interest] Surprising behaviour with syntactic predicates (X+
	!= X X*)
Message-ID: <b8ceeef70711211554r3ecd9f2cv30934f5e16132909@mail.gmail.com>

I've been experimenting with using syntactic predicates to suppress
the warnings that arise when you have rules that boil down to
something like: y: x* x*;

Here are some findings. In the following, X: x'; and the input string
is 'xxxxx';


start: X* X+;
EarlyExitException

start: X* ((X)=>X)+;
EarlyExitException

(ie, syntactic predicate makes no difference)

start: X* X;
Success - a single non-repeated token gets matched, but a "one or
more" token fails?

start: ((X)=>X)* X;
Success - even when explicitly saying you want the first X to match
wherever possible, the single token takes priority.

Here it makes a difference:
start: ((X=>)X* x2?;
x2: X;

With the predicate, x2 matches nothing. Without it, x2 matches one token.

All of which leads to this surprising result: the following two
grammars should (I think) be equivalent, but the first succeeds and
the second fails.

start: ((X)=>X)* X X*;
start: ((X)=>X)* X+;

Something to beware of, I guess?

Steve

From stevagewp at gmail.com  Wed Nov 21 16:02:39 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 22 Nov 2007 11:02:39 +1100
Subject: [antlr-interest] Can antlr v3 lex star | tristar properly?
In-Reply-To: <8C31D98C-F8EB-4F5D-8560-205CF7068E58@classdump.org>
References: <1195642471.47440e672c3ef@clients.latnet.lv>
	<b8ceeef70711210500p4f5a0aaai623abeee9e7fa377@mail.gmail.com>
	<8C31D98C-F8EB-4F5D-8560-205CF7068E58@classdump.org>
Message-ID: <b8ceeef70711211602j692188d0k5182a32e5d7e5bcd@mail.gmail.com>

On 11/22/07, Kay R?pke <kroepke at classdump.org> wrote:
> No, it doesn't. It will always match 'star', and never 'tristar'
> unless you use a predicate like this:
>
> stars: ((tristar)=>tristar | star)*;
>
> tristar: '*''*''*';
> star: '*' {System.out.println("star");};
>
> Watch what happens in ANTLRWorks!

Grr. It works in the Interpreter. Why the different logic?

Steve

From brian at todoroff.com  Wed Nov 21 16:06:15 2007
From: brian at todoroff.com (Brian Todoroff)
Date: Wed, 21 Nov 2007 16:06:15 -0800
Subject: [antlr-interest] antlr-interest Digest, Vol 36, Issue 49
In-Reply-To: <mailman.8988.1195685328.2534.antlr-interest@antlr.org>
References: <mailman.8988.1195685328.2534.antlr-interest@antlr.org>
Message-ID: <2d360a1c0711211606k2abc8345k5535f5ddfc10f682@mail.gmail.com>

> > ---------- Forwarded message ----------
> > From: Johannes Luber <jaluber at gmx.de>
> > To:
> > Date: Tue, 20 Nov 2007 21:05:35 +0100
> > Subject: Re: [antlr-interest] Example C style interpreter?
> > Brian Todoroff wrote:
> > > Is there an example of a more realistic interpreter than the simple
> > > tree based interpreter in the wiki?  Would prefer a simple C style
> > > language, but really anything with multiple types, functions, and
> > > function local variables will give me the basis for learning how to
> > > get this done in ANTLR.  Thanks all for any help and the great tools.
> > >
> > > Brian
> > >
> >
> > There are the examples for Java, C and C#. They should be available on
> > the download page.
> >
> > Johannes
>
>
>
> ---------- Forwarded message ----------
> From: Johannes Luber <jaluber at gmx.de>
> To:
> Date: Wed, 21 Nov 2007 22:43:46 +0100
> Subject: Re: [antlr-interest] Example C style interpreter?
> Brian Todoroff wrote:
> > Those are great examples of parsers, but I'm hoping to find an example
> > where someone has taken it the next step to an actual interpreter.
> > Unless I'm missing something these all stop after parsing the source.
> > I need to add a scripting engine to an in house app, so looking for an
> > example interpreter to help boost me up the learning curve.
> >
> > Thanks,
> > Brian
>
> How about http://www.linguamantra.org/? As it is a complete compiler it
> may contain the required steps.
>
> Johannes

Interesting example of a compiler to java (I like the idea of the
pipeline operator), but I'm really looking for an interpreter.
Something that takes the input code, creates the AST and actually runs
the code with function calls, loops, etc.
Doesn't need to be a fancy language and I don't care what language the
final interpreter code is in (C, C++, Java, C#, etc.).  I'm just
looking to get a feel for the design patterns around ANTLR based
interpreters for doing things like building up the function lookup
table and moving that between the parse and execute phases, handling
flow control constructs such as for, do, & while loops, etc.

Thanks,
Brian

From atif.azad at hotmail.com  Wed Nov 21 16:13:28 2007
From: atif.azad at hotmail.com (atif azad)
Date: Thu, 22 Nov 2007 05:13:28 +0500
Subject: [antlr-interest] Writing out  a table
Message-ID: <BLU105-F29166B2FFFBAE48A4E0B41E5790@phx.gbl>

Dear all

Is there some special way to write out a table which contains rows and 
columns using antlr .

Regards
Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From ronesh at visibleassets.com  Wed Nov 21 20:39:05 2007
From: ronesh at visibleassets.com (Ronesh Puri)
Date: Wed, 21 Nov 2007 23:39:05 -0500
Subject: [antlr-interest] Push/Pop for CommonTreeNodeStream in C runtime
	target
Message-ID: <EB3EA8C2-B130-4C0D-A3E3-76103743040E@visibleassets.com>

Hi

	I've written a simple parser/ast walker in Java which includes loops  
(for/while) and conditional (if) statements. With help from the  
mailing list; this was accomplished in the Java version by using the  
Java runtime's CommonTreeNodeStream's push() and pop() methods...

for e.g. see:
http://www.antlr.org/pipermail/antlr-interest/2007-March/ 
020029.html
and
http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter

I've been rewriting the grammar in C for performance reasons. So far  
its been fairly straightfoward - kudos to Jim Idle (and all  
involved). However, the C runtime target's  
antlr3commontreenodestream.c doesn't seem to implement the push() and  
pop() methods -or- perhaps I haven't been looking in the right place.  
Could someone please direct me on how to  "Make stream jump to a new  
location, saving old location." as would be needed for a simple IF  
statement such as this (Java version):


grammar file
---------------------
ifStat
     : 'if' '(' expr ')' ifBlock=block
    		-> ^('if' ^(EXPR expr) $ifBlock)
     ;

AST file
--------------------
ifStat
    : ^('if' ^(EXPR v=expr) .)
    {
	CommonTree stmtNode = null;
   	CommonTreeNodeStream stream = (CommonTreeNodeStream)input;
   	if ($v.value != 0)
   	{
   		System.out.println(" 'IF' condition is true");
  	     	stmtNode = (CommonTree)$ifStat.start.getChild(1);
   	} else {
		System.out.println(" 'IF' condition is false");  	
	}
   	
   	if ( stmtNode != null )
   	{
       		stream.push(stream.getNodeIndex(stmtNode));
       		block();
       		stream.pop();      		
   	}
     }


Also, since the node type is always pANTRL3_BASE_TREE in the C  
runtime, does this change how such a conditional would be  
implemented? An example of how to do this with the C runtime would  
really be appreciated.

Thank you,
     Ron

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071121/780cbcd4/attachment-0001.html 

From stevagewp at gmail.com  Wed Nov 21 21:33:59 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 22 Nov 2007 16:33:59 +1100
Subject: [antlr-interest] ANTLRworks stability?
Message-ID: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>

Just wondering if I'm the only one for whom ANTLRworks is very
unstable. I'm running v1.1.4 on Windows XP, on two different machines,
and on both it freezes up very often on my main grammar project (300
lines or so). In fact, at the moment, I can basically load it, make a
tweak, debug it *once*, then the next time I debug, it will freeze.
Shut down the java window, reload, start again.

Is there anything I can do to improve its stability? Would running on
VMware help, and if so, which is the best platform?

It generally seems to be  freezing in the "generating code" phase,
about halfway through - the window gradually becomes more and more
unresponsive before it finally stops responding altogether.

If stability is a general problem, how do most people develop with
ANTLR? Do you just forego ANTLRWorks altogether except for small
tests?

ANTLRWorks reports:
ANTLR: 3.0.1
StringTemplate: 3.1b1
XLibrary: 2.0
Java: 1.6.0_03 (I also have J2SE runtime environment 5.0 update 9 installed)

Thanks for any suggestions.
Steve

From jonathan.thomas at ca.com  Wed Nov 21 21:34:34 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Thu, 22 Nov 2007 16:34:34 +1100
Subject: [antlr-interest] ANTLRworks stability?
In-Reply-To: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>
References: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>
Message-ID: <474514EA.7080801@ca.com>

Yeah, it can definitely get a case of the wobegones.
Have not had as bad as you describe.  I'm using java 1.5 ... wonder if 
anyone else is using 1.6? Sorry, v6 :-) ?

Just a few hours ago I had it refuse to redraw the screen ... though it 
hadn't frozen (wave the mouse around and watch it redraw the parts under 
the pointer).

Steve Bennett said the following on 22/11/2007 4:33 PM:
> Just wondering if I'm the only one for whom ANTLRworks is very
> unstable. I'm running v1.1.4 on Windows XP, on two different machines,
> and on both it freezes up very often on my main grammar project (300
> lines or so). In fact, at the moment, I can basically load it, make a
> tweak, debug it *once*, then the next time I debug, it will freeze.
> Shut down the java window, reload, start again.
>
> Is there anything I can do to improve its stability? Would running on
> VMware help, and if so, which is the best platform?
>
> It generally seems to be  freezing in the "generating code" phase,
> about halfway through - the window gradually becomes more and more
> unresponsive before it finally stops responding altogether.
>
> If stability is a general problem, how do most people develop with
> ANTLR? Do you just forego ANTLRWorks altogether except for small
> tests?
>
> ANTLRWorks reports:
> ANTLR: 3.0.1
> StringTemplate: 3.1b1
> XLibrary: 2.0
> Java: 1.6.0_03 (I also have J2SE runtime environment 5.0 update 9 installed)
>
> Thanks for any suggestions.
> Steve
>
>   

From gbr at newtechlaw.com  Wed Nov 21 21:48:56 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 21 Nov 2007 21:48:56 -0800
Subject: [antlr-interest] ANTLRworks stability?
Message-ID: <200711220549.lAM5nBrp021047@tach.newtechlaw.com>

Are you allocating a large enough VM heap size?

At 09:33 PM 11/21/2007, you wrote:
>Just wondering if I'm the only one for whom ANTLRworks is very
>unstable. I'm running v1.1.4 on Windows XP, on two different machines,
>and on both it freezes up very often on my main grammar project (300
>lines or so). In fact, at the moment, I can basically load it, make a
>tweak, debug it *once*, then the next time I debug, it will freeze.
>Shut down the java window, reload, start again.
>
>Is there anything I can do to improve its stability? Would running on
>VMware help, and if so, which is the best platform?
>
>It generally seems to be  freezing in the "generating code" phase,
>about halfway through - the window gradually becomes more and more
>unresponsive before it finally stops responding altogether.
>
>If stability is a general problem, how do most people develop with
>ANTLR? Do you just forego ANTLRWorks altogether except for small
>tests?
>
>ANTLRWorks reports:
>ANTLR: 3.0.1
>StringTemplate: 3.1b1
>XLibrary: 2.0
>Java: 1.6.0_03 (I also have J2SE runtime environment 5.0 update 9 installed)
>
>Thanks for any suggestions.
>Steve

----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net


From stevagewp at gmail.com  Wed Nov 21 22:16:39 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 22 Nov 2007 17:16:39 +1100
Subject: [antlr-interest] ANTLRworks stability?
In-Reply-To: <200711220548.lAM5mNU9021025@tach.newtechlaw.com>
References: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>
	<200711220548.lAM5mNU9021025@tach.newtechlaw.com>
Message-ID: <b8ceeef70711212216x4131cd27p8e6bc2ba5416aa0@mail.gmail.com>

On 11/22/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> Are you allocating a large enough VM heap size?

Good question. Where do I check that? I don't see a setting in Control
Panel > Java.

Steve

From gbr at newtechlaw.com  Wed Nov 21 22:37:13 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 21 Nov 2007 22:37:13 -0800
Subject: [antlr-interest] ANTLRworks stability?
In-Reply-To: <b8ceeef70711212216x4131cd27p8e6bc2ba5416aa0@mail.gmail.com
 >
References: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>
	<200711220548.lAM5mNU9021025@tach.newtechlaw.com>
	<b8ceeef70711212216x4131cd27p8e6bc2ba5416aa0@mail.gmail.com>
Message-ID: <200711220637.lAM6bKb2021257@tach.newtechlaw.com>

At 10:16 PM 11/21/2007, you wrote:
>On 11/22/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> > Are you allocating a large enough VM heap size?
>
>Good question. Where do I check that? I don't see a setting in Control
>Panel > Java.
>
>Steve

Its a Java command line switch.  Try:

java -Xms256m -Xmx384m -jar antlrworks-1.1.4.jar

Google for details.
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net


From harald_m_mueller at gmx.de  Wed Nov 21 23:50:02 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Thu, 22 Nov 2007 08:50:02 +0100
Subject: [antlr-interest] Fragments and setText appear to not work
 at	all - not even with code from the book
In-Reply-To: <"H0000067000147e9.1195683802.scalix.temporal-wave.com*"@MHS>
References: <"H0000067000147e9.1195683802.scalix.temporal-wave.com*"@MHS>
Message-ID: <20071122075002.306820@gmx.net>

Hi Jim -

I'm sorry - i looked through all archives starting from March 2007 (when the beta came out AFAIK) looking for the keyword "fragment"; and for "fragment" in the FAQ. Not a single posting referred to this problem.

Can you point me to a concrete solution on how to write a fragment which should return a modified Token, as was possible in ANTLR2? 
And can you point me to a working piece of code replacing the example in the book? 
(probably you could write one quickly, as you imply that you already have gotten "the hang of it" ...).

Many thanks
Harald

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser

From stevagewp at gmail.com  Thu Nov 22 02:57:51 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 22 Nov 2007 21:57:51 +1100
Subject: [antlr-interest] ANTLRworks stability?
In-Reply-To: <200711220637.lAM6bKb2021257@tach.newtechlaw.com>
References: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>
	<200711220548.lAM5mNU9021025@tach.newtechlaw.com>
	<b8ceeef70711212216x4131cd27p8e6bc2ba5416aa0@mail.gmail.com>
	<200711220637.lAM6bKb2021257@tach.newtechlaw.com>
Message-ID: <b8ceeef70711220257v78e4f52crd864a65900640e86@mail.gmail.com>

On 11/22/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> Its a Java command line switch.  Try:
>
> java -Xms256m -Xmx384m -jar antlrworks-1.1.4.jar

Great! I'm giving it a go now, will report back.

(I realise that my trip to the memory shop is not going to be put off
much longer though...*weep*)

Steve

From harald_m_mueller at gmx.de  Thu Nov 22 04:37:35 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Thu, 22 Nov 2007 13:37:35 +0100
Subject: [antlr-interest] Fragments and setText appear to not work
 at	all - not even with code from the book
In-Reply-To: <20071122075002.306820@gmx.net>
References: <"H0000067000147e9.1195683802.scalix.temporal-wave.com*"@MHS>
	<20071122075002.306820@gmx.net>
Message-ID: <20071122123735.267600@gmx.net>

Hi - 

I tried to track discussions of this issue in all of 2007. What I came up with after about 2 hours search (for "fragment", "setText", "!"(!)) in all text is only the following:

--------------
On Apr 20, 2007, at 4:36 AM, Wincent Colaiuta wrote:

> Replying to my own post with a more fleshed-out example grammar. My  
> question is, does the ! operator no longer have any effect in lexer  
> rules in ANTLR 3?

  At the moment, it does not work in version 3.
Ter
--------------

Is this to mean that it will work one day?

Best Regards
Harald M.


-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From OJAY78 at gmx.de  Thu Nov 22 04:44:02 2007
From: OJAY78 at gmx.de (OJAY78 at gmx.de)
Date: Thu, 22 Nov 2007 13:44:02 +0100
Subject: [antlr-interest] how can I overright the different exceptions for
	my parser
Message-ID: <20071122124402.129490@gmx.net>

Hi,

can anyone tell how I can overright the different exceptions in my parser.
I want to give the user a bit more information what went wrong so if a mismatchtokenException occurs I want to write my own info to the user. 

How can I do that?

thanks
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From Austin_Hastings at Yahoo.com  Wed Nov 21 23:36:00 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Thu, 22 Nov 2007 02:36:00 -0500
Subject: [antlr-interest] String Template Q: How do I implement object
	identifiers?
Message-ID: <47453160.3000607@Yahoo.com>

Howdy,

I'm trying to generate output using StringTemplate's, and I'd like to 
apply a serial number to each object created. The idea is to output 
something like:

Object foo32 = new Object(...);
String string33 = new String(...);
FooBar foobar34 = new FooBar(...);

I'm simplifying radically here, and the actual generation of the objects 
is widely separated. Because of this, and because large parts of the app 
*don't* need serial numbers, I would really rather not pass an Integer 
parameter to every generate-code method.

What I'd prefer would be a built-in (surely I'm not the only one needing 
this - look at all the numbered variables in ANTLR output), or perhaps 
some kind of built-in variable mechanism in the ST system.

Does something already exist to solve this problem, or will I have to 
build a custom adaptor object?

Thanks,

=Austin


From kroepke at classdump.org  Thu Nov 22 06:55:16 2007
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Thu, 22 Nov 2007 15:55:16 +0100
Subject: [antlr-interest] Fragments and setText appear to not work
	at	all - not even with code from the book
In-Reply-To: <20071122123735.267600@gmx.net>
References: <"H0000067000147e9.1195683802.scalix.temporal-wave.com*"@MHS>
	<20071122075002.306820@gmx.net> <20071122123735.267600@gmx.net>
Message-ID: <2DF254B4-0848-47F0-B06B-D8DFA4A09140@classdump.org>

Hi!

On Nov 22, 2007, at 1:37 PM, Harald Mueller wrote:

> I tried to track discussions of this issue in all of 2007. What I  
> came up with after about 2 hours search (for "fragment", "setText",  
> "!"(!)) in all text is only the following:

I'm sure there's more, because I vividly remember those dicussions.  
sorry I have no links right now. Maybe it was back 2006, dunno. The  
first beta release wasn't the beginning of development on v3. I've  
been involved since late 2005 and at the time Ter had been working on  
it for quite some time, already.

> --------------
> On Apr 20, 2007, at 4:36 AM, Wincent Colaiuta wrote:
>
>> Replying to my own post with a more fleshed-out example grammar. My
>> question is, does the ! operator no longer have any effect in lexer
>> rules in ANTLR 3?
>
>  At the moment, it does not work in version 3.
> Ter
> --------------
>
> Is this to mean that it will work one day?



The ! operator is pretty ugly to implement when all you have is  
indices. If you are copying text like v2 does, it's trivial, because  
then you just don't copy the text for a token/char if there's the !  
operator tacked on.
With indices there can be holes in your character index ranges which  
makes it non-trivial to assemble the text later on, aside from the  
complexity of storing these non-contiguous ranges.

It is possible, but there are workarounds for most of the cases where  
you might want it. If everything else fails, it is possible to  
implement (and I think the ! is properly lexed and parsed by ANTLR).  
So in theory you could write it yourself ;)

IIRC Ter was against implementing it for ANTLR v3 because it is hard  
to get it right *and* efficient.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/







From OJAY78 at gmx.de  Thu Nov 22 06:58:25 2007
From: OJAY78 at gmx.de (OJAY78 at gmx.de)
Date: Thu, 22 Nov 2007 15:58:25 +0100
Subject: [antlr-interest] Can my parser evaluate more than one expression?
Message-ID: <20071122145825.98070@gmx.net>

Hi,

maybe I do not understand it right but now I am a bit confused. I have developed a small evaluation language which check values inside a database and returns booleans for the different functions. Inside my parser I am usind a map which I use as a data buffer, I can write values into that map an get values from it. So my problem is that if I have a new expression which I want to evaluate I have to generate a new parser so that a new empty buffer map for this parser will be generated. Is there a way that I can hold my parser object but can change the expression. Or is my understanding of this wrong and every expression has its own parser?

here is the code how I create my parser


	private FELParser createParser(String expression){
		ANTLRStringStream input =  new   ANTLRStringStream(expression);
		FELLexer lexer = new FELLexer(input);
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		FELParser parser = new FELParser(tokens);
		return parser;
	}


thanks
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From harald_m_mueller at gmx.de  Thu Nov 22 07:57:16 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Thu, 22 Nov 2007 16:57:16 +0100
Subject: [antlr-interest] Fragments and setText appear to not work
 at	all - not even with code from the book
In-Reply-To: <2DF254B4-0848-47F0-B06B-D8DFA4A09140@classdump.org>
References: <"H0000067000147e9.1195683802.scalix.temporal-wave.com*"@MHS>
	<20071122075002.306820@gmx.net> <20071122123735.267600@gmx.net>
	<2DF254B4-0848-47F0-B06B-D8DFA4A09140@classdump.org>
Message-ID: <20071122155716.267600@gmx.net>

Thanks - honestly, that (and the bold example in the book) are everything I found about this issue.

I have been using ANTLR 2 now for years and years (I started with PCCTS ...), I have written very complex grammars in ANTLR 2 with "jumping lexers" (what now would be channels) parsing horrendous languages mixing fixed-column and free-text layout in the same file, I have lectured people about LL(k) and LR(k) parsing etc.; up to now I was quite happy with ANLTR 2 - but maybe I sinned and used too many features ;-)

ANTLR 3, with its LL(*) analysis and its even better performance, is something I long for (and we have changed over a few projects to it - especially complex ones) - but still, arbitrarily modifying the text of returned symbols - including fragments - is a feature I'd very much need ...

Maybe a trade-off can be made: If no ! is in a rule, then it is very fast; if ! are in there, the code creates a replacement object and hence gets only fast ;-). The surrounding (calling) rules would have to know this (but this is not a real problem, I'd say) so that they would correctly assemble their text ... ...  but probably I'm just re-discussing what you already discussed.

Still ... (right now, it takes 9 minutes to parse the dozen or so million lines I have to parse - with ANTLR 3 this could well be 2 minutes, I reckon).

Regards & thx
Harald

 and I managed

-------- Original-Nachricht --------
> Datum: Thu, 22 Nov 2007 15:55:16 +0100
> Von: "Kay R?pke" <kroepke at classdump.org>
> An: Harald Mueller <harald_m_mueller at gmx.de>
> CC: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] Fragments and setText appear to not work at	all - not even with code from the book

> Hi!
> 
> On Nov 22, 2007, at 1:37 PM, Harald Mueller wrote:
> 
> > I tried to track discussions of this issue in all of 2007. What I  
> > came up with after about 2 hours search (for "fragment", "setText",  
> > "!"(!)) in all text is only the following:
> 
> I'm sure there's more, because I vividly remember those dicussions.  
> sorry I have no links right now. Maybe it was back 2006, dunno. The  
> first beta release wasn't the beginning of development on v3. I've  
> been involved since late 2005 and at the time Ter had been working on  
> it for quite some time, already.
> 
> > --------------
> > On Apr 20, 2007, at 4:36 AM, Wincent Colaiuta wrote:
> >
> >> Replying to my own post with a more fleshed-out example grammar. My
> >> question is, does the ! operator no longer have any effect in lexer
> >> rules in ANTLR 3?
> >
> >  At the moment, it does not work in version 3.
> > Ter
> > --------------
> >
> > Is this to mean that it will work one day?
> 
> 
> 
> The ! operator is pretty ugly to implement when all you have is  
> indices. If you are copying text like v2 does, it's trivial, because  
> then you just don't copy the text for a token/char if there's the !  
> operator tacked on.
> With indices there can be holes in your character index ranges which  
> makes it non-trivial to assemble the text later on, aside from the  
> complexity of storing these non-contiguous ranges.
> 
> It is possible, but there are workarounds for most of the cases where  
> you might want it. If everything else fails, it is possible to  
> implement (and I think the ! is properly lexed and parsed by ANTLR).  
> So in theory you could write it yourself ;)
> 
> IIRC Ter was against implementing it for ANTLR v3 because it is hard  
> to get it right *and* efficient.
> 
> cheers,
> -k
> -- 
> Kay R?pke
> http://classdump.org/
> 
> 
> 
> 
> 

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From gbr at newtechlaw.com  Thu Nov 22 08:41:17 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Thu, 22 Nov 2007 08:41:17 -0800
Subject: [antlr-interest] how can I overright the different exceptions
 for my parser
In-Reply-To: <20071122124402.129490@gmx.net>
References: <20071122124402.129490@gmx.net>
Message-ID: <200711221644.lAMGikCw024220@tach.newtechlaw.com>

Look at org.antlr.runtime.BaseRecognizer#displayRecognitionError

Also, it appears that you can add your own 
org.antlr.tool.ANTLRErrorListener to org.antlr.tool.ErrorManager

Not sure if there is a better way.

At 04:44 AM 11/22/2007, OJAY78 at gmx.de wrote:
>Hi,
>
>can anyone tell how I can overright the different exceptions in my parser.
>I want to give the user a bit more information 
>what went wrong so if a mismatchtokenException 
>occurs I want to write my own info to the user.
>
>How can I do that?
>
>thanks
>--
>Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
>Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071122/ae5c2112/attachment.html 

From jimi at temporal-wave.com  Thu Nov 22 11:22:02 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Nov 2007 11:22:02 -0800
Subject: [antlr-interest] Push/Pop for CommonTreeNodeStream in C runtime
	target
In-Reply-To: <EB3EA8C2-B130-4C0D-A3E3-76103743040E@visibleassets.com>
Message-ID: <"H00000670001494e.1195759322.scalix.temporal-wave.com*"@MHS>

The organization of this is a little different with the C runtime
because we don?t have objects and inheritance available. However, the
functionality is all there.

 

pANTRL3_BASE_TREE is always passed to everything, even if you have your
own tree node structures etc. However, within this, there is a pointer
to common tree and within there, there is a pointer that you can use to
point to your own structure (which must contain common tree, which must
contain base tree). So, to get the common tree associated with a base
tree, take the void * called ?super? and cast it to the common tree node
typedef. You will see that all the structures have this ?super? pointer,
which is used to point to any structure that is higher up the
organization chain (parent in object terms).

 

I can only think that the particular methods on the java common tree
node stream were implemented after I implemented this in C and somehow I
missed these additions. However, if you look at the C runtime code for
visitChild(), you will see that there is code to stack a current node
and restore a prior node. Hence, you can probably work out how to use
the inbuilt stack system to do what you need. I will make a note to see
when the push and pop were added and why I have not implemented them
yet. 

 

Jim 

 

 

 

  _____  

From: Ronesh Puri [mailto:ronesh at visibleassets.com] 
Sent: Wednesday, November 21, 2007 8:39 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Push/Pop for CommonTreeNodeStream in C runtime
target

 

Hi 

 

          I've written a simple parser/ast walker in Java which includes
loops (for/while) and conditional (if) statements. With help from the
mailing list; this was accomplished in the Java version by using the
Java runtime's CommonTreeNodeStream's push() and pop() methods... 

 

for e.g. see: 

http://www.antlr.org/pipermail/antlr-interest/2007-March/020029.htm
l

and

http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter 

 

I've been rewriting the grammar in C for performance reasons. So far its
been fairly straightfoward - kudos to Jim Idle (and all involved).
However, the C runtime target's antlr3commontreenodestream.c doesn't
seem to implement the push() and pop() methods -or- perhaps I haven't
been looking in the right place. Could someone please direct me on how
to  "Make stream jump to a new location, saving old location." as would
be needed for a simple IF statement such as this (Java version):

 

 

grammar file

---------------------

ifStat

    : 'if' '(' expr ')' ifBlock=block

                  -> ^('if' ^(EXPR expr) $ifBlock)

    ;

 

AST file

--------------------

ifStat

   : ^('if' ^(EXPR v=expr) .)

   {

          CommonTree stmtNode = null;

       CommonTreeNodeStream stream = (CommonTreeNodeStream)input;

       if ($v.value != 0)

       {

                   System.out.println(" 'IF' condition is true");

                         stmtNode =
(CommonTree)$ifStat.start.getChild(1);

       } else {

                      System.out.println(" 'IF' condition is false");   


          }

       

       if ( stmtNode != null )

       {

                         stream.push(stream.getNodeIndex(stmtNode));

                         block();

                         stream.pop();                   

       }

    }     

 

 

Also, since the node type is always pANTRL3_BASE_TREE in the C runtime,
does this change how such a conditional would be implemented? An example
of how to do this with the C runtime would really be appreciated.

 

Thank you,

    Ron

 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071122/006c6d65/attachment-0001.html 

From jimi at temporal-wave.com  Thu Nov 22 11:26:12 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Nov 2007 11:26:12 -0800
Subject: [antlr-interest] ANTLRworks stability?
In-Reply-To: <b8ceeef70711212133q6e27acfagb9357cdb04b09ac6@mail.gmail.com>
Message-ID: <"H000006700014da5.1195759572.scalix.temporal-wave.com*"@MHS>

I have had such things happen but it is usually because I did something silly with my grammar without realizing and caused huge amounts of memory to be consumed. This usually crashes Java with anything and... well that's another conversation ;-)

I invoke ANTLRWorks with as much memory as I can give it and this usually means it is able to cope (the JVM that is). Generally I think that the issue is it runs out of memory and then all bets are off. This may be that ANTLR itself does not end up releasing a bunch of objects. Try this:

"C:\Program Files\Java\jdk1.6.0_01\bin\java.exe" -Xmx750M -Xincgc -jar C:\antlrsrc\antlrworks\antlrworks-1.1.4.jar

Jim

> -----Original Message-----
> From: Steve Bennett [mailto:stevagewp at gmail.com]
> Sent: Wednesday, November 21, 2007 9:34 PM
> To: antlr-interest Interest
> Subject: [antlr-interest] ANTLRworks stability?
> 
> Just wondering if I'm the only one for whom ANTLRworks is very
> unstable. I'm running v1.1.4 on Windows XP, on two different machines,
> and on both it freezes up very often on my main grammar project (300
> lines or so). In fact, at the moment, I can basically load it, make a
> tweak, debug it *once*, then the next time I debug, it will freeze.
> Shut down the java window, reload, start again.
> 
> Is there anything I can do to improve its stability? Would running on
> VMware help, and if so, which is the best platform?
> 
> It generally seems to be  freezing in the "generating code" phase,
> about halfway through - the window gradually becomes more and more
> unresponsive before it finally stops responding altogether.
> 
> If stability is a general problem, how do most people develop with
> ANTLR? Do you just forego ANTLRWorks altogether except for small
> tests?
> 
> ANTLRWorks reports:
> ANTLR: 3.0.1
> StringTemplate: 3.1b1
> XLibrary: 2.0
> Java: 1.6.0_03 (I also have J2SE runtime environment 5.0 update 9
> installed)
> 
> Thanks for any suggestions.
> Steve



From stevagewp at gmail.com  Thu Nov 22 14:12:33 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Fri, 23 Nov 2007 09:12:33 +1100
Subject: [antlr-interest] PHP target status
Message-ID: <b8ceeef70711221412l4afcdfc2ybd2196404c5dfc2f@mail.gmail.com>

Just wondering whether anyone was working on a PHP target. If not, can
anyone advise roughly how much work it would be to implement?

Thanks,
Steve

From lgeneral_usel at yahoo.com  Thu Nov 22 14:27:41 2007
From: lgeneral_usel at yahoo.com (123 123)
Date: Thu, 22 Nov 2007 14:27:41 -0800 (PST)
Subject: [antlr-interest] ant not recognizing jars in listing as tasks
Message-ID: <384110.22057.qm@web45504.mail.sp1.yahoo.com>

Hi

I'm having a problem to get ant to recognize an
external jar, antlr.jar 2.7.3 downloaded from
www.antlr2.org, which is within "ANT_HOME/lib jar
listing" from ant -diagnostics but not in the task
availability listing i.e. it lists "antlr: not
available" under "task availability"? how to get ant
to recognize this jar as the antlr task?

I'm running ant 1.6.5 on Ubuntu 6.06.

Thanks 


      ____________________________________________________________________________________
Get easy, one-click access to your favorites. 
Make Yahoo! your homepage.
http://www.yahoo.com/r/hs 


From jimi at temporal-wave.com  Thu Nov 22 14:38:43 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 22 Nov 2007 14:38:43 -0800
Subject: [antlr-interest] PHP target status
In-Reply-To: <b8ceeef70711221412l4afcdfc2ybd2196404c5dfc2f@mail.gmail.com>
Message-ID: <"H000006700014dda.1195771123.scalix.temporal-wave.com*"@MHS>

Strangely, I was looking at this at the exact moment your email came in. I can't promise anything because I have the C++ target to finish first and people are waiting patiently on that. I was contemplating trying to generate it from the Java source, which might not give the greatest PHP source code, but should be workable. Of course, the runtime would be a fair amount of stuff to load up as a module, but I quite like PHP and I think there might well be some good use made of such a target.

Writing a target is not a small task, but it isn't a terrible thing if the target language has classes and exceptions as you can pretty much crib off the Java runtime. I have another reason to write a good AST producing Java parser, and plugging in something to spit out PHP might not be too terrible a task, especially targeting a specific set of input source code. The ZEND engine might even make it perform fairly well too.

Jim

> -----Original Message-----
> From: Steve Bennett [mailto:stevagewp at gmail.com]
> Sent: Thursday, November 22, 2007 2:13 PM
> To: antlr-interest Interest
> Subject: [antlr-interest] PHP target status
> 
> Just wondering whether anyone was working on a PHP target. If not, can
> anyone advise roughly how much work it would be to implement?
> 
> Thanks,
> Steve



From chris77550 at gmail.com  Fri Nov 23 07:58:53 2007
From: chris77550 at gmail.com (Christopher Brown)
Date: Fri, 23 Nov 2007 16:58:53 +0100
Subject: [antlr-interest] ST# refresh interval
Message-ID: <85c0f52a0711230758o298414aftc58323ad531ce27a@mail.gmail.com>

Hi,

I'm just trying out using ST# in an ASP.NET application, to generate content
via templates and not via the usual form-oriented object+postback.  I've
downloaded 3.0.1, and can successfully create templates.  Following the
bundled StringTemplate documentation.pdf, I quickly found the
STG.setRefreshInterval() method (talking about caching).  I thought I'd
follow the recommendation and switch off caching for development mode, but
to my surprise, I can't seem to find how to do that in ST#!  There doesn't
seem to be any such method or property in StringTemplateGroup in ST#!  This
is all the more surprising as the paragraph on caching refers to the Int32
type, which is part of the .NET class library...

Can anyone help?

Thanks,
Christopher
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071123/e45ed9a7/attachment.html 

From chris77550 at gmail.com  Fri Nov 23 08:02:13 2007
From: chris77550 at gmail.com (Christopher Brown)
Date: Fri, 23 Nov 2007 17:02:13 +0100
Subject: [antlr-interest] ST# and ASP.NET
Message-ID: <85c0f52a0711230802y65802147g4e708f2f1ca35966@mail.gmail.com>

Hi all,

As I mentioned in my previous post, I'm just starting out with ASP.NET and
ST#.  I had a bit of difficulty finding examples of how to use ST# in
ASP.NET in the documentation and by searching around the Internet.  Here's
the approach I used, just for information (if anyone is wondering) or for
comments (if there's a better way...).  My file is "st1.aspx.cs".

- Christopher
________________________________________

using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;

using Antlr.StringTemplate;



namespace websandbox
{
    public partial class st1 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            Response.ContentType = "text/plain";

            string templateFolder = Request.PhysicalApplicationPath +
"templates";
            StringTemplateGroup myTemplates = new
StringTemplateGroup("myTemplates", templateFolder);
            StringTemplate template = myTemplates.GetInstanceOf("st1");
            template.SetAttribute("name", "chris");

            Response.Write(template.ToString());
            Response.End();
        }

        // don't use the ASPX rendering system, as we render everything in
Page_Load()
        protected override void Render(HtmlTextWriter writer)
        {
            //base.Render(writer);
        }
   }
}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071123/81a70c2a/attachment.html 

From lucasontivero at hotmail.com  Fri Nov 23 17:03:54 2007
From: lucasontivero at hotmail.com (Lucas Ontivero)
Date: Sat, 24 Nov 2007 01:03:54 +0000
Subject: [antlr-interest] NoViableAltException in argumentList
Message-ID: <BAY128-W17BF0FEF1AC26ECE35A91DB57B0@phx.gbl>


Hi all,Somebody could help me with this? I have the following rule: argumentList    : argument (',' argument)* -> ^(ARGUMENT_LIST argument+)    ; argument    : typeName IDENTIFIER -> ^(ARGUMENT typeName IDENTIFIER)    ; typeName    : 'char'    | 'bool'    | 'int'    ; And when I use the interpreter of AntlrWork with:int a, bool b AntlrWork  shows me:


argumentList 

argument 

typeName 

int 
a 
, 
argument 

typeName 

bool 
b 
NoViableAltException Why is that exception? Thanx all.
_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE!
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071124/75c6824e/attachment.html 

From stevagewp at gmail.com  Fri Nov 23 22:02:43 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sat, 24 Nov 2007 17:02:43 +1100
Subject: [antlr-interest] NoViableAltException in argumentList
In-Reply-To: <BAY128-W17BF0FEF1AC26ECE35A91DB57B0@phx.gbl>
References: <BAY128-W17BF0FEF1AC26ECE35A91DB57B0@phx.gbl>
Message-ID: <b8ceeef70711232202x58fb6a52rb4b3d3c675d64eaf@mail.gmail.com>

On 11/24/07, Lucas Ontivero <lucasontivero at hotmail.com> wrote:
> Somebody could help me with this? I have the following rule:
<snip>

It worked fine for me. Here's the complete code I used:
----
grammar ontiverocode ;
options {output = AST;}

tokens {
ARGUMENT_LIST;
ARGUMENT;
}

argumentList
    : argument (',' argument)* -> ^(ARGUMENT_LIST argument+)
    ;

argument
    : typeName IDENTIFIER -> ^(ARGUMENT typeName IDENTIFIER)
    ;

typeName
    : 'char'
    | 'bool'
    | 'int'
    ;

 IDENTIFIER: 'a'..'z'+;
 WS: ' '+ {skip();};
----

Also, you probably want to use the debugger rather than the
interpreter so you can actually see the AST you're building...

Steve

From kwhittingham at gmail.com  Sat Nov 24 00:56:44 2007
From: kwhittingham at gmail.com (Keith Whittingham)
Date: Sat, 24 Nov 2007 09:56:44 +0100
Subject: [antlr-interest] Lexer context problem
Message-ID: <op.t2aggum5ba319o@cirrus>

Could someone explain what I'm doing wrong here

Giving the input "Abc[1..2]" to the following
-----
grammar Test;

@lexer::members {
	boolean brackets;
}

tuple	:	NAME OSB INT DOTDOT INT CSB;

NAME	
	:	{!brackets}?  
('A'..'Z'|'a'..'z'|'.'|'_')('0'..'9'|'A'..'Z'|'a'..'z'|'.'|'_')+
	;

OSB
	:	'[' {brackets=true;}
	;

DOTDOT
	:	{brackets}? '..'
	;

CSB
	:	']' {brackets=false;}
	;

INT
	:	'0' | ('1'..'9')('0'..'9')*
	;
-----
I always get an error "ine 1:6 rule NAME failed predicate: {!brackets}?"

NAME seems to be jumping in when (as far as my understanding goes (which  
isn't very far) it shouldn't. The Open Square Brackets (OSB) sets  
'bracket' true so NAME should not be recognised. Strangely if I reduce  
'tuple' to:

	tuple	:	NAME OSB INT DOTDOT CSB ; / with the input "Abc[1..]" works

but..

	tuple	:	NAME OSB DOTDOT INT CSB ; // with the input "Abc[..1]" fails??

I've just bought the book and scanned that for an answer but can't find  
anything.

Thanks in advance
Keith


From antlr at mirality.co.nz  Sat Nov 24 02:44:30 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 24 Nov 2007 23:44:30 +1300
Subject: [antlr-interest] Lexer context problem
In-Reply-To: <op.t2aggum5ba319o@cirrus>
References: <op.t2aggum5ba319o@cirrus>
Message-ID: <20071124104445.9F54A11EADF@www.antlr.org>

At 21:56 24/11/2007, Keith Whittingham wrote:
 >Could someone explain what I'm doing wrong here
[...]
 >NAME	
 >	:	{!brackets}?
 >('A'..'Z'|'a'..'z'|'.'|'_')('0'..'9'|'A'..'Z'|'a'..'z'|'.'|'_')+
 >	;
[...]
 >DOTDOT
 >	:	{brackets}? '..'
 >	;
[...]
 >I always get an error "ine 1:6 rule NAME failed predicate:
 >{!brackets}?"

You could try using a gated predicate (put => after the ?).  I'm a 
little fuzzy on the exact behaviour but I think this makes it a 
decision-making predicate instead of just a verification predicate 
-- so it's stronger.

If that doesn't work either then possibly ANTLR is discarding the 
predicate because it can't see any alts within the rule 
itself.  If that's what's happening then you'll need to rewrite 
your rules so that you either match the bracket sequence 
completely in the parser or completely within the lexer.  Either 
way, losing the predicates.


From hubdog at gmail.com  Sat Nov 24 15:49:59 2007
From: hubdog at gmail.com (Hub Dog)
Date: Sun, 25 Nov 2007 08:49:59 +0900
Subject: [antlr-interest] AntlrWorks bug?
Message-ID: <4de0b9580711241549l136de272x377cfa7fbc128d35@mail.gmail.com>

Dear friends,


     I found antlrworks can not identify the exception syntax
correctly.When I input the following rule with exception into
antlrworks, it will draw a wavy line under the optionList.
But if I remove the catch exception line , antlrworks will work as expected.


prog	:  optionList declList stmtList -> ^(TPROGRAM ^(TOPTIONLIST
optionList) ^(TDECLLIST declList) ^(TSTMTLIST stmtList) )
;

	catch [re:ERecognitionException ] {
	   ProcessError(re);
	}


optionList:
          (OPTIONS! LCURLY! (option)* RCURLY! SEMI!)?
;


bestr regards
ma lifang

From stevagewp at gmail.com  Sat Nov 24 18:23:09 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 13:23:09 +1100
Subject: [antlr-interest] Structuring a grammar file
Message-ID: <b8ceeef70711241823x72751fc1i49c43a897ca53dca@mail.gmail.com>

Hi all,
  Wondering if there are any suggestions on how best to structure a
grammar file? There doesn't seem to be a way to split out parts of the
code into other files like modules, so I'm not sure how best to go
about keeping things manageable.

In particular:
- Is a separate lexer grammar always the best solution? What are the
downsides of a combined lexer/parser grammar?
- Should all lexer rules be grouped together, or should they be
grouped with the parser rules they're most associated with?
- How should rules be ordered: smallest (lowest?) to biggest
(highest?), or vice versa?

Any other suggestions?

Thanks,
Steve

From soth1985 at yahoo.com  Sat Nov 24 18:26:57 2007
From: soth1985 at yahoo.com (v r)
Date: Sun, 25 Nov 2007 05:26:57 +0300 (MSK)
Subject: [antlr-interest] how to create a list of ast nodes correctly?
Message-ID: <128779.95425.qm@web36915.mail.mud.yahoo.com>

Hi, i`m building an ast and have a problem with the following rule:
   
  array_declarator_suffix
 : (LEFT_BRACKET constant_expression? RIGHT_BRACKET)+ -> ^(ARRAY_DIM constant_expression?)+
   
  which is meant to define multidimensional arrays.
  antlr says:
  [05:23:20] E:\Engine\EngineSVN\Engine\trunk\antlr\GLSL\GLSLastParser.java:9808: illegal start of expression
[05:23:20]                 if ( !() ) {
[05:23:20]                        ^
[05:23:20] E:\Engine\EngineSVN\Engine\trunk\antlr\GLSL\GLSLastParser.java:9811: illegal start of expression
[05:23:20]                 while (  ) {
[05:23:20]                          ^
[05:23:20] 2 errors
   
  but if i write constant_expression instead of constant_expression? everything is ok.
   
   

       
---------------------------------

?? ??? ? Yahoo!? ????????? ??????????? ? ??????????. Yahoo! ?????!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071125/979840ee/attachment.html 

From pink at odahoda.de  Sat Nov 24 18:38:40 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 24 Nov 2007 18:38:40 -0800
Subject: [antlr-interest] Python target: output=template ready for testing
Message-ID: <fian7f$2of$1@ger.gmane.org>

Hello fellow Pythonistas!

If you are interested in the output=template option of ANTLR, have a 
look at the repository <http://fisheye2.cenqua.com/browse/antlr> - I 
just checked in the implementation for it. Using template output creates 
a dependency on the antlr2 runtime and stringtemplate3, which you have 
to grab from fisheye as well. Some minimal documentation can be found in 
the wiki <http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget>.
Using output=template with rewrite=true is a damn cool thing, if you are 
tweaking structure text ;)

BTW: most other V3.1 features should be available in the Python target 
as well.

Have fun,
   Ben


From stevagewp at gmail.com  Sat Nov 24 19:33:42 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 14:33:42 +1100
Subject: [antlr-interest] How to combine rules into one node for an AST?
Message-ID: <b8ceeef70711241933v111ee9f3sdf9615db8a997981@mail.gmail.com>

Say I have a rule like this:

Rule: MARKER sometext moretext ENDMARKER
-> ^(MARKER sometext moretext);

I end up with a MARKER node with two subnodes. What's the best way to
end up with a single subnode that is the concatenation of those two
rules? Do I have to do it manually?

Thanks,
Steve

From antlr at mirality.co.nz  Sat Nov 24 19:46:56 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 25 Nov 2007 16:46:56 +1300
Subject: [antlr-interest] How to combine rules into one node for an AST?
In-Reply-To: <b8ceeef70711241933v111ee9f3sdf9615db8a997981@mail.gmail.co
 m>
References: <b8ceeef70711241933v111ee9f3sdf9615db8a997981@mail.gmail.com>
Message-ID: <20071125034714.8C23811E9D1@www.antlr.org>

At 16:33 25/11/2007, Steve Bennett wrote:
 >Say I have a rule like this:
 >
 >Rule: MARKER sometext moretext ENDMARKER
 >-> ^(MARKER sometext moretext);
 >
 >I end up with a MARKER node with two subnodes. What's the best 
way
 >to end up with a single subnode that is the concatenation of 
those
 >two rules? Do I have to do it manually?

That depends on what you mean.  You can make it have a single 
subnode containing both of those rules by changing it to:
   -> ^(MARKER ^(TEXT sometext moretext))

... but then of course the TEXT node has two subnodes, so this is 
just moving the problem.

A single node of a tree must be a single token, so if the parser 
is handed multiple tokens it will have to put them as multiple 
nodes in the tree, unless you do something fancy.  Ideally, you 
should merge as much text as you can in the lexer, although this 
isn't always possible.


From bshkara at gmail.com  Sun Nov 25 01:07:23 2007
From: bshkara at gmail.com (Basil Shkara)
Date: Sun, 25 Nov 2007 20:07:23 +1100
Subject: [antlr-interest] Match any unicode character
In-Reply-To: <mailman.1.1195934401.6739.antlr-interest@antlr.org>
References: <mailman.1.1195934401.6739.antlr-interest@antlr.org>
Message-ID: <3F67E632-58C5-4A08-822C-22485EE4023D@gmail.com>

Hi there,

I've been running into a dead-end for what seems like a simple problem  
and hopefully someone out there has come across it in the past.

I have token definitions like so:
WORD		:	~('\r' | '\n' | WS)+;
WS				:   ' ' | '\t' | '\r' | '\n';

And I would like to be able to have a rule like this:
matchthis:	'[' (WORD | WS)+;

Essentially, I would like to match a '[' followed by 1 or more unicode  
characters as well as whitespace after it.

If I change the definition of WORD to be:
WORD		:	~('\r' | '\n' | WS | '[')+;

Then my parser is able to match the rule above, however I would like  
to be able to use this WORD token elsewhere in my parser grammar to  
match other things like:

nowmatchthis:	'!' (WORD | WS)+;

This then entails creating another WORD rule excluding the '!'  
literal.  However ANTLR doesn't like the existence of 2 of these token  
definitions because it means that other tokens I have defined are  
'unreachable'.

So my question is how would I approach something like this?  I just  
would like to match any unicode character after certain key characters.

Appreciate any help on the matter.

Thanks!

From stevagewp at gmail.com  Sun Nov 25 01:23:04 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 20:23:04 +1100
Subject: [antlr-interest] How to combine rules into one node for an AST?
In-Reply-To: <4748f044.2315300a.3d53.0debSMTPIN_ADDED@mx.google.com>
References: <b8ceeef70711241933v111ee9f3sdf9615db8a997981@mail.gmail.com>
	<4748f044.2315300a.3d53.0debSMTPIN_ADDED@mx.google.com>
Message-ID: <b8ceeef70711250123x274ea3aeo8ebbb022dbde951d@mail.gmail.com>

On 11/25/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> That depends on what you mean.  You can make it have a single
> subnode containing both of those rules by changing it to:
>    -> ^(MARKER ^(TEXT sometext moretext))

Yeah, I guess that's one possibility, then whatever is treating the
next stage can always treat a TEXT node as an implicit concatenate
operation.

> A single node of a tree must be a single token, so if the parser

Ah, I wasn't aware of that.

> is handed multiple tokens it will have to put them as multiple
> nodes in the tree, unless you do something fancy.  Ideally, you

Perhaps I can construct a new token manually on the fly?

> should merge as much text as you can in the lexer, although this
> isn't always possible.

Yep, in my case it's definitely not possible.

Steve

From harald_m_mueller at gmx.de  Sun Nov 25 01:43:28 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Sun, 25 Nov 2007 10:43:28 +0100
Subject: [antlr-interest] Match any unicode character
In-Reply-To: <3F67E632-58C5-4A08-822C-22485EE4023D@gmail.com>
References: <mailman.1.1195934401.6739.antlr-interest@antlr.org>
	<3F67E632-58C5-4A08-822C-22485EE4023D@gmail.com>
Message-ID: <20071125094328.17810@gmx.net>

Tokenization ("lexing") happens before and without knowledge of syntax analysis ("parsing"). So there is no direct way to tell the lexer from the parser "now behave differently". There are two solutions that I have used:

(a) Do part of the tokenization in the parser: Your lexer has a restricted view of words

WORD : ~('\r' | '\n' | WS | '[' | '!' | ...)+;

or whatever you need to make your lexer deterministic. Maybe you can write this as 

SPECIAL : '[' | '!' | ...;
WORD : ~('\r' | '\n' | WS | SPECIAL)+;

Your parser has extended words:

word: WORD | SPECIAL;

(BTW, Microsoft's idea that you extend the C# language with new "identifier keywords" (e.g. "value" in C# 1.x; "yield" in C# 2.x; "select" in C# 3.x) requires such a "parser-level token recognition").

(b) In ANTLR 2, you can switch lexers along the way (I'd have to look upthe concrete way of doing this - but it's documented). This is a little bit tricky, because you must make sure that one lexer has not read too many characters from your input stream when switching to another one, but it makes things like "use a special lexer inside format strings; or inside regex strings" very easy. I have no idea how to do this in ANTLR 3, ath this moment (I'd have to look up one of our projects where I did jumping over 4 lexers in ANTLR 2; maybe a colleague of mine has converted this to ANTLR 3 - he might then know the trick ...).

Regards
Harald



-------- Original-Nachricht --------
> Datum: Sun, 25 Nov 2007 20:07:23 +1100
> Von: Basil Shkara <bshkara at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Match any unicode character

> Hi there,
> 
> I've been running into a dead-end for what seems like a simple problem  
> and hopefully someone out there has come across it in the past.
> 
> I have token definitions like so:
> WORD		:	~('\r' | '\n' | WS)+;
> WS				:   ' ' | '\t' | '\r' | '\n';
> 
> And I would like to be able to have a rule like this:
> matchthis:	'[' (WORD | WS)+;
> 
> Essentially, I would like to match a '[' followed by 1 or more unicode  
> characters as well as whitespace after it.
> 
> If I change the definition of WORD to be:
> WORD		:	~('\r' | '\n' | WS | '[')+;
> 
> Then my parser is able to match the rule above, however I would like  
> to be able to use this WORD token elsewhere in my parser grammar to  
> match other things like:
> 
> nowmatchthis:	'!' (WORD | WS)+;
> 
> This then entails creating another WORD rule excluding the '!'  
> literal.  However ANTLR doesn't like the existence of 2 of these token  
> definitions because it means that other tokens I have defined are  
> 'unreachable'.
> 
> So my question is how would I approach something like this?  I just  
> would like to match any unicode character after certain key characters.
> 
> Appreciate any help on the matter.
> 
> Thanks!

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From stevagewp at gmail.com  Sun Nov 25 02:10:51 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 21:10:51 +1100
Subject: [antlr-interest] Potential gotcha - could it be warned?
Message-ID: <b8ceeef70711250210q6af21c1yf680baf65da6889c@mail.gmail.com>

I just spent the last hour tracking down one stupid error in my code:
a rule that looked like this:

foo:  (| bar);

It was enough to make the debugger fail on any input, and go into an
infinite loop upon pressing the "back" button.

Perhaps ANTLRWorks could detect this kind of rule and either warn or
refuse to compile?

Steve

From antlr at mirality.co.nz  Sun Nov 25 03:20:57 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 26 Nov 2007 00:20:57 +1300
Subject: [antlr-interest] Potential gotcha - could it be warned?
In-Reply-To: <b8ceeef70711250210q6af21c1yf680baf65da6889c@mail.gmail.com
 >
References: <b8ceeef70711250210q6af21c1yf680baf65da6889c@mail.gmail.com>
Message-ID: <20071125112110.D9AEA11EC38@www.antlr.org>

At 23:10 25/11/2007, Steve Bennett wrote:
 >I just spent the last hour tracking down one stupid error in my
 >code:
 >a rule that looked like this:
 >
 >foo:  (| bar);
 >
 >It was enough to make the debugger fail on any input, and go 
into
 >an infinite loop upon pressing the "back" button.
 >
 >Perhaps ANTLRWorks could detect this kind of rule and either 
warn
 >or refuse to compile?

That's a valid construct, though.  It's essentially identical to:
   foo: bar?;

(Now, if you used that as the only contents of a loop, you'd have 
a problem.)


From stevagewp at gmail.com  Sun Nov 25 03:34:49 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 22:34:49 +1100
Subject: [antlr-interest] Potential gotcha - could it be warned?
In-Reply-To: <47495aa8.0c53300a.1260.6368SMTPIN_ADDED@mx.google.com>
References: <b8ceeef70711250210q6af21c1yf680baf65da6889c@mail.gmail.com>
	<47495aa8.0c53300a.1260.6368SMTPIN_ADDED@mx.google.com>
Message-ID: <b8ceeef70711250334l2c0e3962xf087b230cffd7d68@mail.gmail.com>

On 11/25/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> That's a valid construct, though.  It's essentially identical to:
>    foo: bar?;
>
> (Now, if you used that as the only contents of a loop, you'd have
> a problem.)

Yeah, it was in a loop:

foo:
(
/* Option1 */
| Option2
| Option3
)+;

See the problem?

Steve

From stevagewp at gmail.com  Sun Nov 25 03:41:30 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 22:41:30 +1100
Subject: [antlr-interest] Non-disjoint tokens
Message-ID: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>

Given an input stream like this:
blah <HTML> <NOTHING blah <HTMNOTL> ...

I need to parse <HTML> as one token, and otherwise < as its own token.
<HTMNOTL> would ideally be 3 tokens (<, HTMNOTL, >) but it can be one
token.

I'm finding that the with rules like this:

HTML: '<HTML>';
LT: '<';

The lexer falls into a hole when it hits a sequence of characters with
the same first two characters as '<HTML>'. In the debugger, the input
pane shows that the <HT have been completely swallowed.

Is there a way to avoid this? A work around? It seems like a pretty
common thing to want - would this not mean that you couldn't have a
token which matches 'private' yet an identifier 'privort'?

I've tried refactoring along the lines of:

LT: '<';
HTML: LT 'HTML>;
LT_LITERAL: LT;

But this still doesn't seem to work.

Any suggestions? This is a complete show stopper if i can't find a way
around this. It's really crucial that the lexer can recognise this tag
so it can tokenise the following input differently...

Steve

From stevagewp at gmail.com  Sun Nov 25 03:46:36 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 22:46:36 +1100
Subject: [antlr-interest] Lexer context problem
In-Reply-To: <20071124104445.9F54A11EADF@www.antlr.org>
References: <op.t2aggum5ba319o@cirrus>
	<20071124104445.9F54A11EADF@www.antlr.org>
Message-ID: <b8ceeef70711250346v28ee573fr7b0283240d52023a@mail.gmail.com>

On 11/24/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> You could try using a gated predicate (put => after the ?).  I'm a
> little fuzzy on the exact behaviour but I think this makes it a
> decision-making predicate instead of just a verification predicate
> -- so it's stronger.

Yep. the ...: {expr}? rule; construct is a disambiguating semantic
predicate which only gets invoked if there is actually an ambiguity.
The gated semantic predicate: {expr}?=>rule; is the one to use here.

Steve

From harald_m_mueller at gmx.de  Sun Nov 25 04:02:28 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Sun, 25 Nov 2007 13:02:28 +0100
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
References: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
Message-ID: <20071125120228.165540@gmx.net>

Hi -
I think this is one of the real FAQs with ANTLR ... Antlr computes a minimal k to disambiguate the tokens AS PRESENT IN THE GRAMMAR. < and <HTML can be distinguished by just looking on more character ahead - so k=2 is enough. Even with syntactic predicates, this behavior does not change (why? - probably Terence has explained that somewhere - it's a feature):

HTML: ('<HTML>')? => '<HTML>';
LT: '<';

does not help, therefore: The syntactic predicate is abbreviated to the same 'starts with "<H"' condition.

What does help are semantic predicates (essentially, "arbitrary conditions"):

HTML: {input.LA(1)=='<' && 
       input.LA(2)=='H' && 
       input.LA(3)=='T' && 
       input.LA(4)=='M' && 
       input.LA(5)=='L' && 
       input.LA(6)=='>'
      }? => '<HTML>';
LT: '<';

If there is any other way to do this, I'd also like to know it!!

(and I'm not sure what happends at the end of the input with the above condition: say the end of the file is ...<HT> - would the access to input.LA(6) crash? - I think not, but I did not try it...).

Regards
Harald M.

-------- Original-Nachricht --------
> Datum: Sun, 25 Nov 2007 22:41:30 +1100
> Von: "Steve Bennett" <stevagewp at gmail.com>
> An: "antlr-interest Interest" <antlr-interest at antlr.org>
> Betreff: [antlr-interest] Non-disjoint tokens

> Given an input stream like this:
> blah <HTML> <NOTHING blah <HTMNOTL> ...
> 
> I need to parse <HTML> as one token, and otherwise < as its own token.
> <HTMNOTL> would ideally be 3 tokens (<, HTMNOTL, >) but it can be one
> token.
> 
> I'm finding that the with rules like this:
> 
> HTML: '<HTML>';
> LT: '<';
> 
> The lexer falls into a hole when it hits a sequence of characters with
> the same first two characters as '<HTML>'. In the debugger, the input
> pane shows that the <HT have been completely swallowed.
> 
> Is there a way to avoid this? A work around? It seems like a pretty
> common thing to want - would this not mean that you couldn't have a
> token which matches 'private' yet an identifier 'privort'?
> 
> I've tried refactoring along the lines of:
> 
> LT: '<';
> HTML: LT 'HTML>;
> LT_LITERAL: LT;
> 
> But this still doesn't seem to work.
> 
> Any suggestions? This is a complete show stopper if i can't find a way
> around this. It's really crucial that the lexer can recognise this tag
> so it can tokenise the following input differently...
> 
> Steve

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From stevagewp at gmail.com  Sun Nov 25 04:47:01 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 23:47:01 +1100
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <20071125120228.165540@gmx.net>
References: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
	<20071125120228.165540@gmx.net>
Message-ID: <b8ceeef70711250447o69381e13p1c77b9f3aa3ddc88@mail.gmail.com>

On 11/25/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> What does help are semantic predicates (essentially, "arbitrary conditions"):
>
> HTML: {input.LA(1)=='<' &&
>        input.LA(2)=='H' &&
>        input.LA(3)=='T' &&
>        input.LA(4)=='M' &&
>        input.LA(5)=='L' &&
>        input.LA(6)=='>'
>       }? => '<HTML>';
> LT: '<';
>
> If there is any other way to do this, I'd also like to know it!!

Oh, thanks I'll try that. In the meantime I discovered that this semi-works:
LT:     '<';
GT: '>';
HTML: LT 'HTML' GT;
NONTAG: LT LETTERS;

Lexes as follows:
<HTML> matches HTML
<HTML FOO matches NONTAG, SPACE, LETTERS
<FOO matches NONTAG
< matches LT

It's not great, because I'm stuck with one token (<FOO rather than
two, <, FOO), but it's better than nothing. Maybe with an 'emit()' I
can get an extra token? Though I suspect not...

Steve

From stevagewp at gmail.com  Sun Nov 25 04:52:29 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Sun, 25 Nov 2007 23:52:29 +1100
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <20071125120228.165540@gmx.net>
References: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
	<20071125120228.165540@gmx.net>
Message-ID: <b8ceeef70711250452h1fc1d567q188213d6540b309b@mail.gmail.com>

On 11/25/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> What does help are semantic predicates (essentially, "arbitrary conditions"):
<snip>

> (and I'm not sure what happends at the end of the input with the above condition: say the end of the file is ...<HT> - would the access to input.LA(6) crash? - I think not, but I did not try it...).

Just tried this: it works magnificently. It correctly parsed the following text:
<HTML> HTML <HTML FOO <HTMFOO <HT <HTM

(and no, it didn't crash at the end :))

Thank you very much for this solution, I can now keep making progress.

Steve

From dave at badgers-in-foil.co.uk  Sun Nov 25 06:10:12 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 25 Nov 2007 14:10:12 +0000
Subject: [antlr-interest] how to create a list of ast nodes correctly?
In-Reply-To: <128779.95425.qm@web36915.mail.mud.yahoo.com>
References: <128779.95425.qm@web36915.mail.mud.yahoo.com>
Message-ID: <20071125141009.GA20025@badgers-in-foil.co.uk>

On Sun, Nov 25, 2007 at 05:26:57AM +0300, v r wrote:
> Hi, i`m building an ast and have a problem with the following rule:
>    
>   array_declarator_suffix
>  : (LEFT_BRACKET constant_expression? RIGHT_BRACKET)+ -> ^(ARRAY_DIM constant_expression?)+
>    
>   which is meant to define multidimensional arrays.

I've not tried this, but I'd write it something like,

  array_declarator_suffix
    :  LEFT_BRACKET constant_expression? RIGHT_BRACKET
       -> ^(ARRAY_DIM constant_expression?)

and then have,

  array_declarator_suffix+

at the point of usage.


ta,
dave

-- 
http://david.holroyd.me.uk/

From Austin_Hastings at Yahoo.com  Sun Nov 25 05:14:19 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 25 Nov 2007 08:14:19 -0500
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <20071125120228.165540@gmx.net>
References: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
	<20071125120228.165540@gmx.net>
Message-ID: <4749752B.2020108@Yahoo.com>

This 'design feature' has been discussed before, in the context of 
recognizing a range of numbers. The resulting faq entry, added September 
09, will probably help:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497

I have a similar problem in my code. The grammar has two different uses 
of '{'. One is to delimit a list, the other is to delimit an opaque 
block of code in some other language. I've included some excerpts below 
to show a "real world" example. What I did was to use a toggle at the 
lexer level. The various tokens that look inside code blocks know who 
they are, and they toggle a switch in the lexer.

This lets me use

    -> { /* opaque code block with code in it */ }

as well as

    -> TOKENS { t1, t2, t3 } // transparent block with stuff I have to 
parse in it.

I think my handling of code blocks corresponds roughly with your desired 
handling of <HTML> versus '<'.  One thing to keep in mind is that the 
lexer generator wants to optimize performance, so
it's hard to write a token rule that uses the lexer's internal 
variables. If you use a simple pattern in the description of the token, 
the lexer's mTokens() function is going to have too much information in 
it. If you look in my NestedCodeBlock rule, you'll see there's a .* '}' 
at the end to scare the lexer generator into not pretending it knows how 
long my token will be. Of course, I return before I get there, but I had 
to do that in a "creative" way, too, since otherwise the 
never-to-be-sufficiently-accursed java compiler will whine about 
unreachable code. (Naturally it considers that to be an error, not a 
warning. Stupid gee-whiz language wankers!)

Anyway, enough chatter, here's some code:


// This is just to get strings back as useable literals. Unlike everyone 
else on the list, I like using literals in my grammars.
tokens
{
    LCB = '{';
    TOKENS = 'TOKENS';
}

@lexer::members
{
    /**
    Tells lexer how to handle {...} blocks. If true, the block
    is treated as a big, opaque, possibly recursive string. If false, the
    '{' token type is returned and lexing continues inside the block.
    */
    private
    Boolean    matchCodeBlocks = true;
}

// Later in the grammar, here's an example of matching a code block 
(remember, blocks are opaque so there isn't much Ican do with them):
atAction
    : action=('@header' | '@members') CODE_BLOCK
      {
    addAction($action.text, $CODE_BLOCK.text);
      }
    ;

// Later in the grammar, here's an example of matching the 
open-curly-bracket only (no code block).
assertTokensMatch returns [ List<Object> token_info]
    @init
    {
    $token_info = new ArrayList<Object>();
    }
    : 'TOKENS' '{'
      ( tokenSpec { $token_info.add($tokenSpec.info); }
      )+
      '}'
    ;

// In the lexer, here's the details:
CODE_BLOCK
    : {matchCodeBlocks}? => NestedCodeBlock
      { setText(getText().substring(1, getText().length() - 1)); }
    | '{'
      {
    $type = LCB;
    matchCodeBlocks = true;
      }
    ;
// This has to be below code_block so it can be unreachable.
// Otherwise the definition in the tokens{} block takes
// precedence, and CODE_BLOCK can't be seen.
LCB: '{' ;

// Finally, here's the "good stuff."
// This fragment recognizes an opaque block of source code
// surrounded by curlies, possibly nested, with Java style
// comments (either kind) and quoted literals embedded,
fragment
NestedCodeBlock
    : '{'
    {
    loopNCB:
    do
    {
        int next_char = input.LA(1);

        switch (next_char)
        {
        case '}':
        break loopNCB;

        case '"': mQlit_Double(); break;
        case '\'': mQlit_Single(); break;
        case '\u00AB': mQlit_Willies(); break;
        case '<':
        if (input.LA(2) == '<')
            mQlit_Angles();
        else
            matchAny();
        break;

        case '/':
        switch (input.LA(2))
        {
        case '/': mSingleLineComment(); break;
        case '*': mMultiLineComment(); break;
        default: matchAny(); break;
        }
        break;

        case '{': mNestedCodeBlock(); break;
        default: matchAny(); break;
        }

        if (failed) return;
    }
    while (true);
    match('}');
    if (!failed) return;
    }
    .* '}'
    ;

// Here's a rule that toggles the code-block-matching:
OPTIONS
    : 'options' { matchCodeBlocks = false; }
    ;

TOKENS
    : 'TOKENS' { matchCodeBlocks = false; }
    ;


Harald Mueller wrote:
> Hi -
> I think this is one of the real FAQs with ANTLR ... Antlr computes a minimal k to disambiguate the tokens AS PRESENT IN THE GRAMMAR. < and <HTML can be distinguished by just looking on more character ahead - so k=2 is enough. Even with syntactic predicates, this behavior does not change (why? - probably Terence has explained that somewhere - it's a feature):
>
> HTML: ('<HTML>')? => '<HTML>';
> LT: '<';
>
> does not help, therefore: The syntactic predicate is abbreviated to the same 'starts with "<H"' condition.
>
> What does help are semantic predicates (essentially, "arbitrary conditions"):
>
> HTML: {input.LA(1)=='<' && 
>        input.LA(2)=='H' && 
>        input.LA(3)=='T' && 
>        input.LA(4)=='M' && 
>        input.LA(5)=='L' && 
>        input.LA(6)=='>'
>       }? => '<HTML>';
> LT: '<';
>
> If there is any other way to do this, I'd also like to know it!!
>
> (and I'm not sure what happends at the end of the input with the above condition: say the end of the file is ...<HT> - would the access to input.LA(6) crash? - I think not, but I did not try it...).
>
> Regards
> Harald M.
>
> -------- Original-Nachricht --------
>   
>> Datum: Sun, 25 Nov 2007 22:41:30 +1100
>> Von: "Steve Bennett" <stevagewp at gmail.com>
>> An: "antlr-interest Interest" <antlr-interest at antlr.org>
>> Betreff: [antlr-interest] Non-disjoint tokens
>>     
>
>   
>> Given an input stream like this:
>> blah <HTML> <NOTHING blah <HTMNOTL> ...
>>
>> I need to parse <HTML> as one token, and otherwise < as its own token.
>> <HTMNOTL> would ideally be 3 tokens (<, HTMNOTL, >) but it can be one
>> token.
>>
>> I'm finding that the with rules like this:
>>
>> HTML: '<HTML>';
>> LT: '<';
>>
>> The lexer falls into a hole when it hits a sequence of characters with
>> the same first two characters as '<HTML>'. In the debugger, the input
>> pane shows that the <HT have been completely swallowed.
>>
>> Is there a way to avoid this? A work around? It seems like a pretty
>> common thing to want - would this not mean that you couldn't have a
>> token which matches 'private' yet an identifier 'privort'?
>>
>> I've tried refactoring along the lines of:
>>
>> LT: '<';
>> HTML: LT 'HTML>;
>> LT_LITERAL: LT;
>>
>> But this still doesn't seem to work.
>>
>> Any suggestions? This is a complete show stopper if i can't find a way
>> around this. It's really crucial that the lexer can recognise this tag
>> so it can tokenise the following input differently...
>>
>> Steve
>>     
>
>   


From soth1985 at yahoo.com  Sun Nov 25 08:17:48 2007
From: soth1985 at yahoo.com (v r)
Date: Sun, 25 Nov 2007 19:17:48 +0300 (MSK)
Subject: [antlr-interest] Wrong tokenization of input from file
Message-ID: <811980.93107.qm@web36907.mail.mud.yahoo.com>

Hi, i`m sending the same input to my parser from ANTLRworks using debugger->debug->text or debugger->debug->file. When the input comes from file it doesn`t tokenize correctly and  the token stream becomes a mess but when i just copy text from file into the text window of the debugger everything works correctly (with unix lineendings). This also happens with C.g from the examples. Is there a solution to this problem?
       
---------------------------------

?? ??? ? Yahoo!? ????????? ??????????? ? ??????????. Yahoo! ?????!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071125/cd2afb09/attachment-0001.html 

From kwhittingham at gmail.com  Sun Nov 25 08:17:48 2007
From: kwhittingham at gmail.com (Keith Whittingham)
Date: Sun, 25 Nov 2007 17:17:48 +0100
Subject: [antlr-interest] ANTLR Lexer Contexts
Message-ID: <op.t2cvjyopba319o@cirrus>

Hi all,

I posted a problem earlier thanks to those that responded.

I find it a little bit difficult to use ANTLR when the lexer needs (lots  
of) different contexts. Here's a prototype of what I think is a readable  
solution. The language is required to recognise "a[[1..2]". Without the  
context of 'brackets' it gets confused by "1", ".." amd "2" as it  
recognises them wrongly as names.

Hope you find it useful...

-------------
grammar Test;

tokens {
	NAME;
	POSINT;
	RANGE;
	OSB;
	CSB;
}

@lexer::members {
	// set up the different contexts
	private final static int NORMAL		= 0;
	private final static int BRACKETS	= 1;
	private int context = NORMAL;
	private int tokenType;
}

tuple	:	NAME OSB POSINT RANGE POSINT CSB;

TOKEN_SET_SELECTOR
	:	{ context == NORMAL }? => NORMAL_TOKEN_SET { $type = tokenType; }
	|	{ context == BRACKETS }? => BRACKETS_TOKEN_SET { $type = tokenType; }
	;

fragment
NORMAL_TOKEN_SET
	:	('a'..'z'|'A'..'Z'|'.'|'_') ('0'..'9'|'A'..'Z'|'a'..'z'|'.'|'_')*  
{ tokenType = NAME; }
	|	'[' { tokenType = OSB; context = BRACKETS; }
	;

fragment
BRACKETS_TOKEN_SET
	:	'0' | ('1'..'9')('0'..'9')*  { tokenType = POSINT; }
	|	'..'  { tokenType = RANGE; }
	|	']'  { tokenType = CSB; context = NORMAL; }
	;
-----------


From stevagewp at gmail.com  Sun Nov 25 13:07:35 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 26 Nov 2007 08:07:35 +1100
Subject: [antlr-interest] What's the difference between:
Message-ID: <b8ceeef70711251307q31edf733oc9304faeae0face6@mail.gmail.com>

a) an @init block and a

This:

rule: { code;} foo;

and:

---
rule
@init {code;}
:foo;
---

Do they behave differently with syntactic predicates and/or
backtracking, perhaps? I'm thinking that actions only get run if the
rule matches, but perhaps the @init always gets run?

Similarly, what's the difference between:

rule: foo {code;};

and

---
rule
@after { code; }
:foo;
---

and

---
rule: foo;
finally {code; }
---

Lastly, given all that, what is the best way to set and unset a
context variable for the duration of matching a given rule? Is it as
follows:

---
rule
@init { this.in_rule=true; }
:foo;
finally { this.in_rule=false;}
---

Thanks all,
Steve

From stevagewp at gmail.com  Sun Nov 25 15:40:41 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 26 Nov 2007 10:40:41 +1100
Subject: [antlr-interest] ANTLR Lexer Contexts
In-Reply-To: <op.t2cvjyopba319o@cirrus>
References: <op.t2cvjyopba319o@cirrus>
Message-ID: <b8ceeef70711251540y2df28babo56e14d40b621a071@mail.gmail.com>

On 11/26/07, Keith Whittingham <kwhittingham at gmail.com> wrote:
> fragment
> NORMAL_TOKEN_SET
>         :       ('a'..'z'|'A'..'Z'|'.'|'_') ('0'..'9'|'A'..'Z'|'a'..'z'|'.'|'_')*
> { tokenType = NAME; }
>         |       '[' { tokenType = OSB; context = BRACKETS; }

Thanks for posting. Is it the "fragment" here that prevents this token
always matching ahead of the other one?

Also, did you consider using return values? Might be slightly more
elegant than the quasi-global tokenType member?

Steve

From kwhittingham at gmail.com  Sun Nov 25 23:19:10 2007
From: kwhittingham at gmail.com (Keith Whittingham)
Date: Mon, 26 Nov 2007 08:19:10 +0100
Subject: [antlr-interest] ANTLR Lexer Contexts
In-Reply-To: <b8ceeef70711251540y2df28babo56e14d40b621a071@mail.gmail.com>
References: <op.t2cvjyopba319o@cirrus>
	<b8ceeef70711251540y2df28babo56e14d40b621a071@mail.gmail.com>
Message-ID: <op.t2d098zfba319o@cirrus>

1/ Use of fragement
Yes the use of fragement hides NORMAL_TOKEN_SET so that the lexer never  
'tries for' any of the productions directly

2/ Use of return values
I thought about that but in the language I'm trying to build there are  
many lexer contexts and each context has a significant number of tokens.  
Much better to be able to see the complete set cleanly.

There's one small but in the snippet I posted by the way:

BRACKETS_TOKEN_SET
	:	'0' | ('1'..'9')('0'..'9')*  { tokenType = POSINT; }
	...

should read

BRACKETS_TOKEN_SET
	:	('0' | ('1'..'9')('0'..'9')*)  { tokenType = POSINT; }
	...

I guess I'll need to add a push() and pop() lexer context method to set  
and recall more than just the context type. If I do I'll post how I do  
those too.

--------------------
NOTE to maintainers of ANTLR

1/ I think it would be worth considering adding a feature like this into  
ANTLR. It seems like the focus of efforts is on the parser (reflected in  
the book too!). IMHO if you can generate a clean token stream easily then  
parsing becomes significantly simpler.

2/ The generator also creates warnings about tokens that are generated in  
the tokens {...} action which is annoying. I had to hide the warnings by  
defining someing like "TOKEN_WITH_WARNING: '?HideMe7?' ;", i.e. defining  
it as something that will never be encountered in the input.

Keith

On Mon, 26 Nov 2007 00:40:41 +0100, Steve Bennett <stevagewp at gmail.com>  
wrote:

> On 11/26/07, Keith Whittingham <kwhittingham at gmail.com> wrote:
>> fragment
>> NORMAL_TOKEN_SET
>>         :       ('a'..'z'|'A'..'Z'|'.'|'_')  
>> ('0'..'9'|'A'..'Z'|'a'..'z'|'.'|'_')*
>> { tokenType = NAME; }
>>         |       '[' { tokenType = OSB; context = BRACKETS; }
>
> Thanks for posting. Is it the "fragment" here that prevents this token
> always matching ahead of the other one?
>
> Also, did you consider using return values? Might be slightly more
> elegant than the quasi-global tokenType member?
>
> Steve



From kwhittingham at gmail.com  Sun Nov 25 23:37:25 2007
From: kwhittingham at gmail.com (Keith Whittingham)
Date: Mon, 26 Nov 2007 08:37:25 +0100
Subject: [antlr-interest] ANTLR code generator suggestion
Message-ID: <op.t2d14nxoba319o@cirrus>

Hi ANTLR people,

In certain circumstances the code generator generates:

         public int specialStateTransition(int s, IntStream input) throws  
NoViableAltException {
         	int _s = s;
             switch ( s ) {
		...set s to different values depeing on what is encountered...
             }
             NoViableAltException nvae =
                 new NoViableAltException(getDescription(), 1, _s, input);
             error(nvae);
             throw nvae;
         }
     }

It would be better to manipulate the variable "_s" rather than the  
argument "s". I compile with a lint option that flags changing the values  
of arguments as this is quite bad practice. When you throw the exception  
it's nice to know that the argument has still the same value and the  
variable is the latest value.

Thanks for the great work!
Keith

From antlr at mirality.co.nz  Sun Nov 25 23:44:56 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 26 Nov 2007 20:44:56 +1300
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.co
 m>
References: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
Message-ID: <20071126074522.7F42711EC95@www.antlr.org>

At 00:41 26/11/2007, Steve Bennett wrote:
 >I'm finding that the with rules like this:
 >
 >HTML: '<HTML>';
 >LT: '<';
 >
 >The lexer falls into a hole when it hits a sequence of 
characters
 >with the same first two characters as '<HTML>'. In the debugger, 

 >the input pane shows that the <HT have been completely 
swallowed.

The usual trick with common-prefix literals (or perhaps the 
"other" usual trick, since Austin already posted the semantic 
predicate version) is to compose them into a single rule.  The key 
point is to explicitly give ANTLR the alternatives so that it 
doesn't try to plunge ahead without looking first.

tokens { HTML; }

LT
	:	'<'
	(	/* nothing */
	|	('HTML>') => 'HTML>' { $type=HTML; }
	)
	;

(It'd be nice if you didn't need that syntactic predicate, but 
sadly you do.  But this does work.)

I prefer this sort of approach over using semantic predicates; I 
try to use those as little as possible.  (Mainly because I think 
they're ugly, but also because they're target-specific.)


From chris77550 at gmail.com  Mon Nov 26 00:55:25 2007
From: chris77550 at gmail.com (Christopher Brown)
Date: Mon, 26 Nov 2007 09:55:25 +0100
Subject: [antlr-interest] ST# refresh interval
Message-ID: <85c0f52a0711260055t43189438md704f48b6ba598c4@mail.gmail.com>

Following on from my message on Friday, and after investigating
further, it appears there's no need for a method such as
StringTemplateGroup.setRefreshInterval with the C# version because it
registers a FileSystemWatcher, and is notified automatically if any
change occurs, and doesn't need to poll the file's status.

- Christopher

From chris77550 at gmail.com  Mon Nov 26 01:35:23 2007
From: chris77550 at gmail.com (Christopher Brown)
Date: Mon, 26 Nov 2007 10:35:23 +0100
Subject: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
Message-ID: <85c0f52a0711260135r7985e936r7043acdd42646ea1@mail.gmail.com>

Hi,

Is it possible to create templates that have the capabilities of
ChoiceFormat with StringTemplate (I'm using ST#3)?

http://java.sun.com/javase/6/docs/api/java/text/ChoiceFormat.html

For example, the following template doesn't work:

fileInfo(fileName,fileSize) ::= <<
File $fileName$, $fileSize$ $if(fileSize>1)$bytes$else$byte$endif$.
>>

(I'm using a group template file with the default lexer, not the angle
bracket one, as my target is HTML...).

There only seems to be support for conditions based on string equality
or just non-nullity, not numeric comparisons.  I'm not wanting to add
computation into the view, but it's important in many (human)
languages to be able to vary the text along with a quantity, and I
don't want to hard-code parts of the template into the code that calls
it.

Thanks,
Christopher

From harald_m_mueller at gmx.de  Mon Nov 26 02:14:58 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Mon, 26 Nov 2007 11:14:58 +0100
Subject: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
In-Reply-To: <85c0f52a0711260135r7985e936r7043acdd42646ea1@mail.gmail.com>
References: <85c0f52a0711260135r7985e936r7043acdd42646ea1@mail.gmail.com>
Message-ID: <20071126101458.220100@gmx.net>

Hi -

The whole idea of StringTemplate is to separate "computation" from "string building". Even the $if$ is in a way a concession - one could do everything with lazily evaluated template names (things like $(abc)()$).

The favored way is the definition of a clean interface which provides all the attributes for the template; and do all the computation there.

Stringtemplate is, as I see it, NOT an abstraction layer on a FIXED value-providing machine (as are e.g. most report generators); rather, it is intended that the templates evolve together with the accessed interfaces.

In a way, Stringtemplate tries to do "MV(C)": It provides ONLY the VIEW for a model; and like in MVC, the view itself is not supposed to compute anything (even if some people with GUI builders in their hands prefer it otherwise ...).

Regards
Harald M.

-------- Original-Nachricht --------
> Datum: Mon, 26 Nov 2007 10:35:23 +0100
> Von: "Christopher Brown" <chris77550 at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Able to emulate java.text.ChoiceFormat ?

> Hi,
> 
> Is it possible to create templates that have the capabilities of
> ChoiceFormat with StringTemplate (I'm using ST#3)?
> 
> http://java.sun.com/javase/6/docs/api/java/text/ChoiceFormat.html
> 
> For example, the following template doesn't work:
> 
> fileInfo(fileName,fileSize) ::= <<
> File $fileName$, $fileSize$ $if(fileSize>1)$bytes$else$byte$endif$.
> >>
> 
> (I'm using a group template file with the default lexer, not the angle
> bracket one, as my target is HTML...).
> 
> There only seems to be support for conditions based on string equality
> or just non-nullity, not numeric comparisons.  I'm not wanting to add
> computation into the view, but it's important in many (human)
> languages to be able to vary the text along with a quantity, and I
> don't want to hard-code parts of the template into the code that calls
> it.
> 
> Thanks,
> Christopher

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From harald_m_mueller at gmx.de  Mon Nov 26 03:09:07 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Mon, 26 Nov 2007 12:09:07 +0100
Subject: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
In-Reply-To: <85c0f52a0711260229o453c7d6embb9b0cb45b944650@mail.gmail.com>
References: <85c0f52a0711260135r7985e936r7043acdd42646ea1@mail.gmail.com>	
	<20071126101458.220100@gmx.net>
	<85c0f52a0711260229o453c7d6embb9b0cb45b944650@mail.gmail.com>
Message-ID: <20071126110907.49140@gmx.net>

Hi -

well, I didn't invent this thing ;-) ...

... but n = 0, n = 1, n > 0 are all *computations* (you need to know about numbers and comparison to evaluate these). So none of these things should be done in the view (the template). 

Also (I overlooked this in your original posting), passing of simple values (like fileSize) is not a good idea - you must always pass objects with properties (that's StringTemplates "type" system at work here ...).

So, provide properties in your class to find out what to do:

public class FileInfo {
    public string getFileName() { ... }
    public int getFileSize() { ... }
    public boolean isZeroByteFile() { ... } // not necessary below - but would be in your three-way text creation example
    public boolean isOneByteFile() { ... }
}

Now, your template could be:

fileInfo(fi) ::= <<
File $fi.fileName$, $fi.fileSize$ $if(fi.oneByteFile)$byte$else$bytes$endif$.
>>

(I am not sure I did this perfectly - I have not used Java+StringTemplate for a year or so, only C#, so maybe I did something wrong with the implicit get/is truncation ... But the concept is ok).

However, an even better (? - at least more interesting) way is template indirection:

enum FileSizeType { ZeroByteFile, OneByteFile, LargerFile }

public class FileInfo {
    public string getFileName() { ... }
    public int getFileSize() { ... }
    public FileSizeType getFileSizeType() { ... }
}

fileInfo(fi) ::= <<
File $fi.fileName$, $fi.fileSize$ $(fi.fileSizeType)()$
>>
// note the parentheses around fi.fileSizeType! - 
// this means to evaluate the property and THEN call 
// the template whose name you COMPUTED! Here they are:

ZeroByteFile() ::= <<bytes>>
OneByteFile() ::= <<byte>>
LargerFile() ::= <<bytes>>

Now, there is no $if...$ any longer! OTOH, there is coupling of the template names to the enum constants; still, as there is always coupling from the view to the model (at least the properties must conform to each other!), this is not a principal problem ...

If you need to do *different* things based on the fileSizeType, it becomes a little more complicated; what we do is to have various "template name returning properties" in the model classes which follow strict rules. If someone wants to know about this, email me ...

I hope this helps!

Regards
Harald

P.S. Once again: DO NOT pass simple values around in StringTemplate - even if it works (I dont know whether it does), it's not what is intended.

-------- Original-Nachricht --------
> Datum: Mon, 26 Nov 2007 11:29:32 +0100
> Von: "Christopher Brown" <chris77550 at gmail.com>
> An: "Harald Mueller" <harald_m_mueller at gmx.de>
> Betreff: Re: [antlr-interest] Able to emulate java.text.ChoiceFormat ?

> Hi Harald,
> 
> I can understand that the template engine shouldn't do computation,
> but I'm not trying to do computation here.  And I'm not a GUI-builder
> type person anyway, which is why StringTemplate.NET attracts me, now
> that I'm doing a lot of C# work ;-)
> 
> For me, I'd like to be able to have one template per language.  A lot
> of that targets user interfaces.  With ChoiceFormat, the templating
> isn't computational (and I'd prefer something like ChoiceFormat's
> syntax over if/else/endif), so it's easy to produce the three
> following variations for "n" (the content of the square brackets is to
> show the value, not part of any syntax):
> 
> [n=0] No records updated.
> [n=1] One record updated.
> [n>1] $n$ records updated.
> 
> [n=0] Aucune ligne n'a ?t? modifi?e.
> [n=1] Une ligne a ?t? modifi?e.
> [n>1] $n$ lignes modifi?es.
> 
> That's not computation, that's just linguistically-correct output.
> It'd be a shame to limit myself to phrases like "1 record(s) updated"
> and "1 ligne(s) modifi?e(s)", and it's certainly NOT model or
> controller logic to start spitting out translated content (that's one
> of the main aims of using a template engine).
> 
> That's the problem I'm trying to solve, not in any way about adding
> more complex expressions and types to $if()$ !!!
> 
> So, is there anyway StringTemplate can help in providing
> reader-friendly translations?
> 
> Thanks,
> Christopher
> 
> 
> On 26/11/2007, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > Hi -
> >
> > The whole idea of StringTemplate is to separate "computation" from
> "string building". Even the $if$ is in a way a concession - one could do
> everything with lazily evaluated template names (things like $(abc)()$).
> >
> > The favored way is the definition of a clean interface which provides
> all the attributes for the template; and do all the computation there.
> >
> > Stringtemplate is, as I see it, NOT an abstraction layer on a FIXED
> value-providing machine (as are e.g. most report generators); rather, it is
> intended that the templates evolve together with the accessed interfaces.
> >
> > In a way, Stringtemplate tries to do "MV(C)": It provides ONLY the VIEW
> for a model; and like in MVC, the view itself is not supposed to compute
> anything (even if some people with GUI builders in their hands prefer it
> otherwise ...).
> >
> > Regards
> > Harald M.
> >
> > -------- Original-Nachricht --------
> > > Datum: Mon, 26 Nov 2007 10:35:23 +0100
> > > Von: "Christopher Brown" <chris77550 at gmail.com>
> > > An: antlr-interest at antlr.org
> > > Betreff: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
> >
> > > Hi,
> > >
> > > Is it possible to create templates that have the capabilities of
> > > ChoiceFormat with StringTemplate (I'm using ST#3)?
> > >
> > > http://java.sun.com/javase/6/docs/api/java/text/ChoiceFormat.html
> > >
> > > For example, the following template doesn't work:
> > >
> > > fileInfo(fileName,fileSize) ::= <<
> > > File $fileName$, $fileSize$ $if(fileSize>1)$bytes$else$byte$endif$.
> > > >>
> > >
> > > (I'm using a group template file with the default lexer, not the angle
> > > bracket one, as my target is HTML...).
> > >
> > > There only seems to be support for conditions based on string equality
> > > or just non-nullity, not numeric comparisons.  I'm not wanting to add
> > > computation into the view, but it's important in many (human)
> > > languages to be able to vary the text along with a quantity, and I
> > > don't want to hard-code parts of the template into the code that calls
> > > it.
> > >
> > > Thanks,
> > > Christopher
> >
> > --
> > Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
> > Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger
> >

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From harald_m_mueller at gmx.de  Mon Nov 26 03:24:19 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Mon, 26 Nov 2007 12:24:19 +0100
Subject: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
In-Reply-To: <20071126110907.49140@gmx.net>
References: <85c0f52a0711260135r7985e936r7043acdd42646ea1@mail.gmail.com>	
	<20071126101458.220100@gmx.net>
	<85c0f52a0711260229o453c7d6embb9b0cb45b944650@mail.gmail.com>
	<20071126110907.49140@gmx.net>
Message-ID: <20071126112419.220100@gmx.net>

(Sorry for following up on my own posting - but there's something more I wanted to say ...):

Christopher, I'm not really sure that you can fundamentally solve the translation problem without "programming" (i.e., doing more than writing templates).

Let's assume you split your text generation according to the conditions n=0, n=1, n>1. However, there might be a natural language where the phrase for n=2 is different from other phrases (there have been languages like this - in addition to singular and plural, they had a form called "dual"; I think ancient Greek was such a language; and - don't laugh - the Bavarian dialects have some left-over dual word forms... but I digress ;-) ).

However, if your information-providing class only has property for checking "Zero", "One", "More" (as in my example), you'll never find out whether there are exactly two - and you are stranded again.

Here are more radical examples: The flection of words might change depending on the sex of a person associated with the thing; or even on the position where the thing is; etc.etc. Even if you know all this in your program, you'd have to expose the relevant knowledge to the "view" ("template") - which will at least confuse other people as to what of this plethora of properties they are supposed to use ...

So, you'll end up with a compromise in any case, wouldn't you?

Regards
Harald


-------- Original-Nachricht --------
> Datum: Mon, 26 Nov 2007 12:09:07 +0100
> Von: "Harald Mueller" <harald_m_mueller at gmx.de>
> An: "Christopher Brown" <chris77550 at gmail.com>
> CC: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] Able to emulate java.text.ChoiceFormat ?

> Hi -
> 
> well, I didn't invent this thing ;-) ...
> 
> ... but n = 0, n = 1, n > 0 are all *computations* (you need to know about
> numbers and comparison to evaluate these). So none of these things should
> be done in the view (the template). 
> 
> Also (I overlooked this in your original posting), passing of simple
> values (like fileSize) is not a good idea - you must always pass objects with
> properties (that's StringTemplates "type" system at work here ...).
> 
> So, provide properties in your class to find out what to do:
> 
> public class FileInfo {
>     public string getFileName() { ... }
>     public int getFileSize() { ... }
>     public boolean isZeroByteFile() { ... } // not necessary below - but
> would be in your three-way text creation example
>     public boolean isOneByteFile() { ... }
> }
> 
> Now, your template could be:
> 
> fileInfo(fi) ::= <<
> File $fi.fileName$, $fi.fileSize$
> $if(fi.oneByteFile)$byte$else$bytes$endif$.
> >>
> 
> (I am not sure I did this perfectly - I have not used Java+StringTemplate
> for a year or so, only C#, so maybe I did something wrong with the implicit
> get/is truncation ... But the concept is ok).
> 
> However, an even better (? - at least more interesting) way is template
> indirection:
> 
> enum FileSizeType { ZeroByteFile, OneByteFile, LargerFile }
> 
> public class FileInfo {
>     public string getFileName() { ... }
>     public int getFileSize() { ... }
>     public FileSizeType getFileSizeType() { ... }
> }
> 
> fileInfo(fi) ::= <<
> File $fi.fileName$, $fi.fileSize$ $(fi.fileSizeType)()$
> >>
> // note the parentheses around fi.fileSizeType! - 
> // this means to evaluate the property and THEN call 
> // the template whose name you COMPUTED! Here they are:
> 
> ZeroByteFile() ::= <<bytes>>
> OneByteFile() ::= <<byte>>
> LargerFile() ::= <<bytes>>
> 
> Now, there is no $if...$ any longer! OTOH, there is coupling of the
> template names to the enum constants; still, as there is always coupling from the
> view to the model (at least the properties must conform to each other!),
> this is not a principal problem ...
> 
> If you need to do *different* things based on the fileSizeType, it becomes
> a little more complicated; what we do is to have various "template name
> returning properties" in the model classes which follow strict rules. If
> someone wants to know about this, email me ...
> 
> I hope this helps!
> 
> Regards
> Harald
> 
> P.S. Once again: DO NOT pass simple values around in StringTemplate - even
> if it works (I dont know whether it does), it's not what is intended.
> 
> -------- Original-Nachricht --------
> > Datum: Mon, 26 Nov 2007 11:29:32 +0100
> > Von: "Christopher Brown" <chris77550 at gmail.com>
> > An: "Harald Mueller" <harald_m_mueller at gmx.de>
> > Betreff: Re: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
> 
> > Hi Harald,
> > 
> > I can understand that the template engine shouldn't do computation,
> > but I'm not trying to do computation here.  And I'm not a GUI-builder
> > type person anyway, which is why StringTemplate.NET attracts me, now
> > that I'm doing a lot of C# work ;-)
> > 
> > For me, I'd like to be able to have one template per language.  A lot
> > of that targets user interfaces.  With ChoiceFormat, the templating
> > isn't computational (and I'd prefer something like ChoiceFormat's
> > syntax over if/else/endif), so it's easy to produce the three
> > following variations for "n" (the content of the square brackets is to
> > show the value, not part of any syntax):
> > 
> > [n=0] No records updated.
> > [n=1] One record updated.
> > [n>1] $n$ records updated.
> > 
> > [n=0] Aucune ligne n'a ?t? modifi?e.
> > [n=1] Une ligne a ?t? modifi?e.
> > [n>1] $n$ lignes modifi?es.
> > 
> > That's not computation, that's just linguistically-correct output.
> > It'd be a shame to limit myself to phrases like "1 record(s) updated"
> > and "1 ligne(s) modifi?e(s)", and it's certainly NOT model or
> > controller logic to start spitting out translated content (that's one
> > of the main aims of using a template engine).
> > 
> > That's the problem I'm trying to solve, not in any way about adding
> > more complex expressions and types to $if()$ !!!
> > 
> > So, is there anyway StringTemplate can help in providing
> > reader-friendly translations?
> > 
> > Thanks,
> > Christopher
> > 
> > 
> > On 26/11/2007, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > > Hi -
> > >
> > > The whole idea of StringTemplate is to separate "computation" from
> > "string building". Even the $if$ is in a way a concession - one could do
> > everything with lazily evaluated template names (things like $(abc)()$).
> > >
> > > The favored way is the definition of a clean interface which provides
> > all the attributes for the template; and do all the computation there.
> > >
> > > Stringtemplate is, as I see it, NOT an abstraction layer on a FIXED
> > value-providing machine (as are e.g. most report generators); rather, it
> is
> > intended that the templates evolve together with the accessed
> interfaces.
> > >
> > > In a way, Stringtemplate tries to do "MV(C)": It provides ONLY the
> VIEW
> > for a model; and like in MVC, the view itself is not supposed to compute
> > anything (even if some people with GUI builders in their hands prefer it
> > otherwise ...).
> > >
> > > Regards
> > > Harald M.
> > >
> > > -------- Original-Nachricht --------
> > > > Datum: Mon, 26 Nov 2007 10:35:23 +0100
> > > > Von: "Christopher Brown" <chris77550 at gmail.com>
> > > > An: antlr-interest at antlr.org
> > > > Betreff: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
> > >
> > > > Hi,
> > > >
> > > > Is it possible to create templates that have the capabilities of
> > > > ChoiceFormat with StringTemplate (I'm using ST#3)?
> > > >
> > > > http://java.sun.com/javase/6/docs/api/java/text/ChoiceFormat.html
> > > >
> > > > For example, the following template doesn't work:
> > > >
> > > > fileInfo(fileName,fileSize) ::= <<
> > > > File $fileName$, $fileSize$ $if(fileSize>1)$bytes$else$byte$endif$.
> > > > >>
> > > >
> > > > (I'm using a group template file with the default lexer, not the
> angle
> > > > bracket one, as my target is HTML...).
> > > >
> > > > There only seems to be support for conditions based on string
> equality
> > > > or just non-nullity, not numeric comparisons.  I'm not wanting to
> add
> > > > computation into the view, but it's important in many (human)
> > > > languages to be able to vary the text along with a quantity, and I
> > > > don't want to hard-code parts of the template into the code that
> calls
> > > > it.
> > > >
> > > > Thanks,
> > > > Christopher
> > >
> > > --
> > > Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
> > > Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger
> > >
> 
> -- 
> GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From stevagewp at gmail.com  Mon Nov 26 04:44:43 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Mon, 26 Nov 2007 23:44:43 +1100
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <474a7991.2315300a.5cd0.46d2SMTPIN_ADDED@mx.google.com>
References: <b8ceeef70711250341k4639f08asdc2cd1ed1bc314d1@mail.gmail.com>
	<474a7991.2315300a.5cd0.46d2SMTPIN_ADDED@mx.google.com>
Message-ID: <b8ceeef70711260444s45531245jce07e1ba89f9662e@mail.gmail.com>

On 11/26/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> I prefer this sort of approach over using semantic predicates; I
> try to use those as little as possible.  (Mainly because I think
> they're ugly, but also because they're target-specific.)

Thanks for the tip. I'm new to Antlr, but so far I'm finding a bit of
a preference the other way, actually: I find syntactic predicates
rather clunky and inexpressive, and since they're simply semantic
predicates in disguise, they don't seem elegant to me. Most of the
time they seem to end up in chains like this:

foo:
  (bar) => bar
| (dar) => dar
| (lar) => lar
| (rar) => rar
;

When all I really want to say is: "match the first expression that
fits, and for god's sake don't give me any warnings about it!"

There also seems not to be an easy way to say "in this context, don't
try matching X, it won't work and you'll get stuck". Or for that
matter a way of incorporating previously matched tokens: "If you have
matched A and B, and the next token is D, then now would be a good
time to match a C."

Both semantic and syntactic predicates seem like very powerful tools,
but they seem a bit immature at the moment, and just need a bit more
bedding down.

Steve

From harald_m_mueller at gmx.de  Mon Nov 26 05:16:51 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Mon, 26 Nov 2007 14:16:51 +0100
Subject: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
In-Reply-To: <85c0f52a0711260513j11ceac2bn15fb3d64ca543a5e@mail.gmail.com>
References: <85c0f52a0711260135r7985e936r7043acdd42646ea1@mail.gmail.com>	
	<20071126101458.220100@gmx.net>	
	<85c0f52a0711260229o453c7d6embb9b0cb45b944650@mail.gmail.com>	
	<20071126110907.49140@gmx.net> <20071126112419.220100@gmx.net>
	<85c0f52a0711260513j11ceac2bn15fb3d64ca543a5e@mail.gmail.com>
Message-ID: <20071126131651.220090@gmx.net>

Great :-) I'd only say that your template should read:

fileInfo(fileName,fileSize) ::= <<
File $fileName$, $fileSize.Value$ $if(fileSize.One)$byte$else$bytes$endif$.
>>

because the text for a zero-byte file should be

File abc.txt, 0 bytes

not

File abc.txt, 0 byte

- IMVHO.

Regards
Harald

-------- Original-Nachricht --------
> Datum: Mon, 26 Nov 2007 14:13:15 +0100
> Von: "Christopher Brown" <chris77550 at gmail.com>
> An: "Harald Mueller" <harald_m_mueller at gmx.de>
> Betreff: Re: [antlr-interest] Able to emulate java.text.ChoiceFormat ?

> Harald,
> 
> You're quite right about language difficulties, but I try to overcome
> as many as I can :-)
> 
> Your previous posting however helped me figure out a general solution
> that's StringTemplate-friendly and not much of a burden for the
> controller.  Basically, for numbers, I wrote a simple general wrapper
> that I push to the template, instead of pushing the number.  Here's
> what it looks like in C#:
> 
> public sealed class StInt32 {
>  private readonly int _value;
>  public StInt32(int value) {
>   _value = value;
>  }
>  public int Value {
>   get { return _value; }
>  }
>  public bool Zero {
>   get { return _value == 0; }
>  }
>  public bool One {
>   get { return _value == 1; }
>  }
>  public bool Many {
>   get { return _value > 1; }
>  }
>  public override bool Equals(object obj) {
>   return obj is StInt32 && ((StInt32)obj)._value == _value;
>  }
>  public override int GetHashCode() {
>   return _value;
>  }
>  public override string ToString() {
>   return _value.ToString();
>  }
> }
> 
> In Java, that'd be:
> 
> public final class StInt {
>  private final int _value;
>  public StInt(int value) {
>   _value = value;
>  }
>  public int getValue() {
>   return _value;
>  }
>  public boolean isZero() {
>   return _value == 0;
>  }
>  public boolean isOne() {
>   return _value == 1;
>  }
>  public boolean isMany() {
>   return _value > 1;
>  }
>  public boolean equals(Object obj) {
>   return obj instanceof StInt && ((StInt)obj)._value == _value;
>  }
>  public int hashCode() {
>   return _value;
>  }
>  public String toString() {
>   return Integer.toString(_value);
>  }
> }
> 
> The template for the C# version is as follows:
> fileInfo(fileName,fileSize) ::= <<
> File $fileName$, $fileSize.Value$
> $if(fileSize.Many)$bytes$else$byte$endif$.
> >>
> 
> I guess first-letter capitalization rules are an irritation for
> cross-platform templates :-)
> 
> Hope this helps someone else!
> Christopher
> 
> On 26/11/2007, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > (Sorry for following up on my own posting - but there's something more I
> wanted to say ...):
> >
> > Christopher, I'm not really sure that you can fundamentally solve the
> translation problem without "programming" (i.e., doing more than writing
> templates).
> >
> > Let's assume you split your text generation according to the conditions
> n=0, n=1, n>1. However, there might be a natural language where the phrase
> for n=2 is different from other phrases (there have been languages like
> this - in addition to singular and plural, they had a form called "dual"; I
> think ancient Greek was such a language; and - don't laugh - the Bavarian
> dialects have some left-over dual word forms... but I digress ;-) ).
> >
> > However, if your information-providing class only has property for
> checking "Zero", "One", "More" (as in my example), you'll never find out whether
> there are exactly two - and you are stranded again.
> >
> > Here are more radical examples: The flection of words might change
> depending on the sex of a person associated with the thing; or even on the
> position where the thing is; etc.etc. Even if you know all this in your program,
> you'd have to expose the relevant knowledge to the "view" ("template") -
> which will at least confuse other people as to what of this plethora of
> properties they are supposed to use ...
> >
> > So, you'll end up with a compromise in any case, wouldn't you?
> >
> > Regards
> > Harald
> >
> >
> > -------- Original-Nachricht --------
> > > Datum: Mon, 26 Nov 2007 12:09:07 +0100
> > > Von: "Harald Mueller" <harald_m_mueller at gmx.de>
> > > An: "Christopher Brown" <chris77550 at gmail.com>
> > > CC: antlr-interest at antlr.org
> > > Betreff: Re: [antlr-interest] Able to emulate java.text.ChoiceFormat ?
> >
> > > Hi -
> > >
> > > well, I didn't invent this thing ;-) ...
> > >
> > > ... but n = 0, n = 1, n > 0 are all *computations* (you need to know
> about
> > > numbers and comparison to evaluate these). So none of these things
> should
> > > be done in the view (the template).
> > >
> > > Also (I overlooked this in your original posting), passing of simple
> > > values (like fileSize) is not a good idea - you must always pass
> objects with
> > > properties (that's StringTemplates "type" system at work here ...).
> > >
> > > So, provide properties in your class to find out what to do:
> > >
> > > public class FileInfo {
> > >     public string getFileName() { ... }
> > >     public int getFileSize() { ... }
> > >     public boolean isZeroByteFile() { ... } // not necessary below -
> but
> > > would be in your three-way text creation example
> > >     public boolean isOneByteFile() { ... }
> > > }
> > >
> > > Now, your template could be:
> > >
> > > fileInfo(fi) ::= <<
> > > File $fi.fileName$, $fi.fileSize$
> > > $if(fi.oneByteFile)$byte$else$bytes$endif$.
> > > >>
> > >
> > > (I am not sure I did this perfectly - I have not used
> Java+StringTemplate
> > > for a year or so, only C#, so maybe I did something wrong with the
> implicit
> > > get/is truncation ... But the concept is ok).
> > >
> > > However, an even better (? - at least more interesting) way is
> template
> > > indirection:
> > >
> > > enum FileSizeType { ZeroByteFile, OneByteFile, LargerFile }
> > >
> > > public class FileInfo {
> > >     public string getFileName() { ... }
> > >     public int getFileSize() { ... }
> > >     public FileSizeType getFileSizeType() { ... }
> > > }
> > >
> > > fileInfo(fi) ::= <<
> > > File $fi.fileName$, $fi.fileSize$ $(fi.fileSizeType)()$
> > > >>
> > > // note the parentheses around fi.fileSizeType! -
> > > // this means to evaluate the property and THEN call
> > > // the template whose name you COMPUTED! Here they are:
> > >
> > > ZeroByteFile() ::= <<bytes>>
> > > OneByteFile() ::= <<byte>>
> > > LargerFile() ::= <<bytes>>
> > >
> > > Now, there is no $if...$ any longer! OTOH, there is coupling of the
> > > template names to the enum constants; still, as there is always
> coupling from the
> > > view to the model (at least the properties must conform to each
> other!),
> > > this is not a principal problem ...
> > >
> > > If you need to do *different* things based on the fileSizeType, it
> becomes
> > > a little more complicated; what we do is to have various "template
> name
> > > returning properties" in the model classes which follow strict rules.
> If
> > > someone wants to know about this, email me ...
> > >
> > > I hope this helps!
> > >
> > > Regards
> > > Harald
> > >
> > > P.S. Once again: DO NOT pass simple values around in StringTemplate -
> even
> > > if it works (I dont know whether it does), it's not what is intended.
> > >
> > > -------- Original-Nachricht --------
> > > > Datum: Mon, 26 Nov 2007 11:29:32 +0100
> > > > Von: "Christopher Brown" <chris77550 at gmail.com>
> > > > An: "Harald Mueller" <harald_m_mueller at gmx.de>
> > > > Betreff: Re: [antlr-interest] Able to emulate java.text.ChoiceFormat
> ?
> > >
> > > > Hi Harald,
> > > >
> > > > I can understand that the template engine shouldn't do computation,
> > > > but I'm not trying to do computation here.  And I'm not a
> GUI-builder
> > > > type person anyway, which is why StringTemplate.NET attracts me, now
> > > > that I'm doing a lot of C# work ;-)
> > > >
> > > > For me, I'd like to be able to have one template per language.  A
> lot
> > > > of that targets user interfaces.  With ChoiceFormat, the templating
> > > > isn't computational (and I'd prefer something like ChoiceFormat's
> > > > syntax over if/else/endif), so it's easy to produce the three
> > > > following variations for "n" (the content of the square brackets is
> to
> > > > show the value, not part of any syntax):
> > > >
> > > > [n=0] No records updated.
> > > > [n=1] One record updated.
> > > > [n>1] $n$ records updated.
> > > >
> > > > [n=0] Aucune ligne n'a ?t? modifi?e.
> > > > [n=1] Une ligne a ?t? modifi?e.
> > > > [n>1] $n$ lignes modifi?es.
> > > >
> > > > That's not computation, that's just linguistically-correct output.
> > > > It'd be a shame to limit myself to phrases like "1 record(s)
> updated"
> > > > and "1 ligne(s) modifi?e(s)", and it's certainly NOT model or
> > > > controller logic to start spitting out translated content (that's
> one
> > > > of the main aims of using a template engine).
> > > >
> > > > That's the problem I'm trying to solve, not in any way about adding
> > > > more complex expressions and types to $if()$ !!!
> > > >
> > > > So, is there anyway StringTemplate can help in providing
> > > > reader-friendly translations?
> > > >
> > > > Thanks,
> > > > Christopher
> > > >
> > > >
> > > > On 26/11/2007, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > > > > Hi -
> > > > >
> > > > > The whole idea of StringTemplate is to separate "computation" from
> > > > "string building". Even the $if$ is in a way a concession - one
> could do
> > > > everything with lazily evaluated template names (things like
> $(abc)()$).
> > > > >
> > > > > The favored way is the definition of a clean interface which
> provides
> > > > all the attributes for the template; and do all the computation
> there.
> > > > >
> > > > > Stringtemplate is, as I see it, NOT an abstraction layer on a
> FIXED
> > > > value-providing machine (as are e.g. most report generators);
> rather, it
> > > is
> > > > intended that the templates evolve together with the accessed
> > > interfaces.
> > > > >
> > > > > In a way, Stringtemplate tries to do "MV(C)": It provides ONLY the
> > > VIEW
> > > > for a model; and like in MVC, the view itself is not supposed to
> compute
> > > > anything (even if some people with GUI builders in their hands
> prefer it
> > > > otherwise ...).
> > > > >
> > > > > Regards
> > > > > Harald M.
> > > > >
> > > > > -------- Original-Nachricht --------
> > > > > > Datum: Mon, 26 Nov 2007 10:35:23 +0100
> > > > > > Von: "Christopher Brown" <chris77550 at gmail.com>
> > > > > > An: antlr-interest at antlr.org
> > > > > > Betreff: [antlr-interest] Able to emulate java.text.ChoiceFormat
> ?
> > > > >
> > > > > > Hi,
> > > > > >
> > > > > > Is it possible to create templates that have the capabilities of
> > > > > > ChoiceFormat with StringTemplate (I'm using ST#3)?
> > > > > >
> > > > > >
> http://java.sun.com/javase/6/docs/api/java/text/ChoiceFormat.html
> > > > > >
> > > > > > For example, the following template doesn't work:
> > > > > >
> > > > > > fileInfo(fileName,fileSize) ::= <<
> > > > > > File $fileName$, $fileSize$
> $if(fileSize>1)$bytes$else$byte$endif$.
> > > > > > >>
> > > > > >
> > > > > > (I'm using a group template file with the default lexer, not the
> > > angle
> > > > > > bracket one, as my target is HTML...).
> > > > > >
> > > > > > There only seems to be support for conditions based on string
> > > equality
> > > > > > or just non-nullity, not numeric comparisons.  I'm not wanting
> to
> > > add
> > > > > > computation into the view, but it's important in many (human)
> > > > > > languages to be able to vary the text along with a quantity, and
> I
> > > > > > don't want to hard-code parts of the template into the code that
> > > calls
> > > > > > it.
> > > > > >
> > > > > > Thanks,
> > > > > > Christopher
> > > > >
> > > > > --
> > > > > Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
> > > > > Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger
> > > > >
> > >
> > > --
> > > GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> > > Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail
> >
> > --
> > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> >

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From harald_m_mueller at gmx.de  Mon Nov 26 06:39:04 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Mon, 26 Nov 2007 15:39:04 +0100
Subject: [antlr-interest] "Contextual lexing": Ideas on "nested parsers" and
	"lexing parsers."
Message-ID: <20071126143904.232250@gmx.net>

Hi -

even in the short time where I'm on this list, there have been a few postings about problems with "complex symbols" or "context-dependent symbols". As far as I can see, three solution concepts have been proposed - I want to add two more which I consider quite powerful and clean at the same time. I do not know whether anyone has already written about these new concepts - if someone has, I certainly give credit to her or him (and would like to know where it is documented); otherwise, this posting maybe helps someone - and, at the same time, may draw critique because my ideas are maybe not that good, after all ...

The three solutions proposed up to now are:

* using semantic conditions to look ahead more than the ANTLR-generated lexer does;
* using semantic conditions on a "context variable" (see posting with subject "ANTLR Lexer Contexts")
* using manual rule tweaking (e.g., left-factoring) to get the right rules;

The two concepts I'd like to call attention to are:

* nested parser: If there is a "significant" sub-language, define a separate lexer and parser to handle this.

* "lexing parser:" Use the fact that a parser always reacts according to a local context to get context-dependent (sort of) tokens.

Nested parsers
==============

In ANTLR 2, there was the concept of mutiple lexers on the same input stream. One could then have parsers that would draw symbols from these different lexers, and hence the input could be tokenized with totally different lexer grammars at different places. An example of this is given in the ANTLR 2 documentation, e.g. at http://www.antlr2.org/doc/streams.html.

In ANTLR 3, we do not have multi-lexer streams (as far as I know; the main reason is that lexing happens - at least conceptually - in one big swoosh before parsing starts). However, in many cases, it is still possible to use a solution akin to the ANTLR 2 version as follows: Very often, when a document is in some "outer language," which contains segments written in some other language ("inner language"), the segments can be read as complete tokens in the outer language.

Examples:
-- formatting languages inside strings (e.g. printf formats, C# formatting)
-- other languages inside strings (e.g. SQL in Java/C#/... programs, regular expressions in Regex constructors)
-- languages inside special comments (e.g. Javadoc, XML documentation in source code; /*...*/-delimited option hints in ANSI SQL)

(Not an example at first glance: Plain "line languages" mixed into free-format languages - e.g. #directive languages in C, C++, C#; such directives can occur at arbitrary points in the outer language and hence are not wrapped in an outer language symbol :-( See below for possible solutions for such beasts).

At the place where you stumble over the token in your outer language, you fire up an inner lexer+parser and handle the token as a complete "program" of the inner language - and that's it!
There is one issue with this approach: Usually, the token containing the inner language segment may also be used at other places without the semantics of that inner language - e.g., strings might at one place contain a regular expression which you want to parse with the inner language, whereas they might be "normal strings" at many other places. There are two ways how to handle this:
* Either you run the inner lexer+parser always and decide that unsuccessful runs are discarded;
* Or you pass in some information from the outer language parser that you are at a place where the inner language should be parsed:

cstmt
    : 'printf'
      '('
      s=STRING {
           // we are now in a printf statment -> parse inner language
           CPrintfLexer innerLexer = ...($s.getText());
           CPrintfParser innerParser = ...;
           ... result = innerParser.format();
           ...
      }
      ')'
    | ...
    ;

Both approaches have obvious disadvantages - the first one will probably find too many instances of the inner language, the latter one too few. Still, this approach allows for a very clean separation of languages without any tricks whatsoever (only at the final semantic level - e.g. an AST - will it be necessary to merge the parsing results; but this is probably intended anyway, otherwise you would not parse both languages in detail).

It is straightforward to extend this to more than two nested languages - however, I yet have to see an example of a language nested in a language in a language ...

Unfortunately, this does not yet solve the problem of the directove languages. The following, for example, is a legitimate C# program snippet:

   if (3 <
#pragma warning disable 0619
           4) { i = 0; }

Given the fact that #pragma and newline are defined delimiters of such a "pragma comment," it doesn't seem too hard to write a nested lexer+parser in this case. However, it might be hard to find a place where to call the inner parser!
* During lexing, it is still to early (if all lexing happens up-front). 
* In the parser rules, on the other hand, there is no place where the "pragma comment" could be handled - after all, it should be in the HIDDEN channel so that it does not disturb e.g. the parsing of expressions like 3 < 4.

A solution to this problem might come as a windfall of the next section ...

Lexing parsers
==============

A "lexing parser" (term invented by me) solves the problem that in a *single* language, a few character sequences might be tokenized differently depending on the situation. One famous example is the right-shift operator in modern languages with generics (Java, C#): In the sequence

    int x = ...;
    int s = ...;
    int y = t>> s;

">>" should be the right-shift operator. However, in

    List<List<t>> s;

">>" should be *two* closing angle brackets. A lexer is hard-pressed to distinguish these situations (note that in my examples, the characters following the ">>" are always " s;" - so there is no easy "look-ahead" solution here).
A (the) parser, on the other hand, would know exactly in which situation it is - so it could easily know which symbol is expected.
So if we use a parser for lexing(!), we might solve this issue. This yields a design which uses 3 layers (instead of the standard 2) for parsing:

1. A lexer does simple tokenization into primitive tokens;
2. a lexing parser aggregates the primitive tokens into actual tokens if necessary (in most cases, it will still pass through the primitive tokens);
3. the parser finally does parsing as usual.

For the example above, the relevant rules are roughly (I'll explain in a moment why this is not completely correct - it's only a stepping stone to the final solution):

===================================

// The order of the grammars is reversed to customary usage to allow linear reading - so the lexer is first, parser is last.

// lexer - returns primitve tokens:

WHITESPACE
    : ...as usual... { $channel=HIDDEN; }
    ;

IDENT
    : ...as usual...
    ;

LESS
    : '<'
    ;

LSHIFT
    : '<<'
    ;

GREATER
    : '>'
    ;

// But NO RSHIFT: '>>' rule!! - lexer must not aggregate two >'s into >> unconditionally!

------------------------------------

// lexing parser - by (my) convention, the aggregated tokens start with a lowercase letter and then continue with uppercase letters:

gREATER  : GREATER;

iDENT    : IDENT;

lESS     : LESS;

lSHIFT   : LSHIFT;

rSHIFT   : GREATER GREATER { return ...RSHIFT AST node...; } ; // !!

------------------------------------

// parser:

type
   : iDENT
     ( lESS
       type
       gREATER
     )?
   ;

expression
   : subexpression
     rSHIFT
     subexpression
   ;

===================================

* Passing "t>> s" to expression will correctly yield "IDENT RSHIFT IDENT" (the RSHIFT must be tweaked in by the lexing parser, as indicated above).

* Passing "List<List<t>> s" to type will correctly yield "IDENT LESS IDENT LESS IDENT GREATER GREATER IDENT".

(The term "lexing parser" is somewhat misleading: There is no separate parser that helps with the lexing; rather, certain simple and standardized rules in the parser do some work which coudl arguably still be called lexing. Still, the 3-level architecture is so important that I wanted to have a somewhat catchy name for that intermediate layer.)

However, there is one problem with the solution above: Also the expression "t >    > s" will parse as "IDENT RSHIFT IDENT", because the whitespace has been completely wiped out on the lexer level and hence cannot be used to decide anything on the (lexing) parser level (except with nasty(?) accesses to the token stream below ... maybe an alternative to be checked out!).

With a "lexing parser," there is no other solution than to make whitespace (and comments) first-level citizens again, i.e. make them visible to the (lexing) parser. One can argue that this is correct, after all: The language specification when talking about >> actually does talk about white-space - ">> is a rshift operator if there are no spaces in between; except at the end of a generic type declaration, where it is to be read as separate > tokens." or the like.

Ok - let's repair the grammar to handle whitespace in the lexing parser:

===================================

// lexer - returns primitve tokens:

WHITESPACE
    : ...as usual...                   // $channel=HIDDEN removed!!
    ;

...rest as before...

------------------------------------

// lexing parser:

ignoredtail : (WHITESPACE | COMMENT)* ; // new

gREATER  : GREATER ignoredtail;  // all rules get a trailing ignoredtail 
                                 // (information from which may or may 
                                 // not be added to the resulting AST).

iDENT    : IDENT ignoredtail;

lESS     : LESS ignoredtail;

lSHIFT   : LSHIFT ignoredtail;

rSHIFT   : GREATER GREATER { return ...RSHIFT AST node...; } ignoredtail;
         // but there is no ignoredtail or WHITESPACE between the two > !!

------------------------------------

// parser:

...exactly as before...

===================================

This will now correctly throw an error on "t >   > s", yet parse the other examples.

The "ignoredtail," BTW, is a strategic place where to put "everywhere actions." One example is the "#pragma lexer+parser" discussed at the end of the previous section on "nested parsers:" Here, it can find its place where it can evaluate #pragmas at exactly the right point of time during parsing (maybe a little bit too early, because we do it in the "ignoredTAIL." Rewriting the lexing parser to use an "ignoredPREFIX" *before* each symbol might produce an even more logical execution sequence; with ANTLR 3's LL(*) analysis, parsing should survive the huge ambiguities arising from such a generic prefix for each and every symbol - but I confess I did not yet try this ...).

-----------------------------------

An example of the "complete grammar for a subset" of C# 2.0 is at the end of this posting. It shows a second usage of this concept: namely when words are sometimes interpreted as keywords, sometimes as identifiers. Here is a concrete example: C# 2.0 has a new (in contrast to 1.0) command

        yield return <expression>;

However, so that older programs don't break, Microsoft follows the philosophy that new keywords are "keywordy" only in certain contexts. Therefore, "yield" can be used as an identifier everywhere except before return (and break). The following is therefore legitimate:

        int yield = 4;
        yield return yield;

With a 3-level grammar, there is first a primitive lexer which will always recognize yield as a keyword. Based on that, the lexing parser can then merge "yield" into the "iDENT" actual token, which is then used by the grammar parser.

-----------------------------------

Similarly, the < vs. <HTML> vs. <whatever> problem can be solved along this lines - a corresponding grammar is shown below the C#-subset grammar.

-----------------------------------

I hope these ideas help some of you to overcome those nasty "contextual lexing" problems in real languages; if you want to discuss this with me, drop me an email (e.g. if you want running [C#] code for the two grammars below!).

Best regards
Harald M.

===================================
===================================

grammar CSharpSubset;

options {
    language     = CSharp;
}

// --------------------- parser --------------------

file
    : ignoredtail
      ( using_
      )*
      ( declaration
      )*
      EOF
    ;

using_
   : uSING
     name
     sEMICOLON
   ;

name
   : iDENT
     ( pERIOD
       iDENT
     )*
   ;

declaration
   : cLASS
     iDENT
     lBRACE
     ( classmember
     )*
     rBRACE
   ;

classmember
   : method
   ;

method
   : type
     iDENT
     formalparameterlist
     block
   ;

type
   : iDENT
     ( lESS
       type
       gREATER
     )?
   ;

formalparameterlist
   : lPAR
     rPAR
   ;

block
   : lBRACE
     ( statement
     )*
     rBRACE
   ;

statement
   : vardeclaration
   | yieldreturn
   | foreach_
   ;

vardeclaration
   : type
     iDENT
     ( eQUALS
       expression
     )?
     sEMICOLON
   ;

expression
   : expression1
     ( ( lSHIFT
       | rSHIFT
       )
       expression1
     )?
   ;

expression1
   : expression2
     ( lESS
       expression2
     )?
   ;

expression2
   : name
     ( actualparlist
     )?
   | nUMBER
   ;

actualparlist
   : lPAR
     rPAR
   ;

yieldreturn
   : yIELD
     rETURN
     expression
     sEMICOLON
   ;

foreach_
   : fOREACH
     lPAR
     type
     iDENT
     iN
     expression
     rPAR
     block
   ;

// --------------------- lexing parser ---------------------

cLASS    : CLASS   ignoredtail;

pERIOD   : PERIOD  ignoredtail;

eQUALS   : EQUALS  ignoredtail;

fOREACH  : FOREACH ignoredtail;

gREATER  : GREATER ignoredtail;

iDENT    : (IDENT | YIELD) ignoredtail; // yield is a valid identifier ...

iN       : IN      ignoredtail;

lBRACE   : LBRACE  ignoredtail;

lESS     : LESS    ignoredtail;

lPAR     : LPAR    ignoredtail;

lSHIFT   : LSHIFT  ignoredtail;         // << is never < < - this is not needed
                                        // for genercis; therefore, we keep
                                        // the symbol LSHIFT='<<' in the lexer!

nUMBER   : NUMBER  ignoredtail;

rBRACE   : RBRACE  ignoredtail;

rETURN   : RETURN  ignoredtail;

rPAR     : RPAR    ignoredtail;

rSHIFT   : GREATER GREATER ignoredtail; // >> is sometimes > >, sometimes a single
                                        // symbol. The lexer cannot know this - so
                                        // it always returns single > symbols. Only
                                        // the lexing parser, when called via rSHIFT,
                                        // will return this as a single pseudo-symbol.

sEMICOLON: SEMICOLON ignoredtail;

uSING    : USING   ignoredtail;

yIELD    : YIELD   ignoredtail;         // ... but yield is also a keyword at places(!).
                                        // Again, the lexer does no guessing, but returns
                                        // things with a fine granularily; the lexing
                                        // parser then assembles these to pseudo-symbols
                                        // - YIELD can also be grabbed by the iDENT rule.

ignoredtail : ( WHITESPACE | SINGLE_LINE_COMMENT)* ;

// --------------------- lexer ---------------------

fragment
NEW_LINE
    :    (    // carriage return character followed by possible line feed character
            { input.LA(2)=='\u000A' }? => '\u000D' '\u000A'
        |    '\u000D'            // line feed character
        |    '\u000A'            // line feed character
        |    '\u2028'            // line separator character
        |    '\u2029'            // paragraph separator character
        )
    ;

fragment
NEW_LINE_CHAR
    :    ('\u000D' | '\u000A' | '\u2028' | '\u2029')
    ;

fragment
NOT_NEW_LINE
    :    ~( '\u000D' | '\u000A' | '\u2028' | '\u2029')
    ;


WHITESPACE
    :    (    ' '
        |    '\u0009' // horizontal tab character
        |    '\u000B' // vertical tab character
        |    '\u000C' // form feed character
        |    NEW_LINE
        )+
    ;

SINGLE_LINE_COMMENT
    :    '//'
        (NOT_NEW_LINE)*
        (NEW_LINE)? // may be eof
    ;

fragment
IDENT_CHAR
    : IDENT_START_CHAR
    | DIGIT
    ;

fragment
IDENT_START_CHAR
    : 'a'..'z'
    | 'A'..'Z'
    | '_'
    // and many more, according to the C# spec ...
    | '@'
    ;

fragment
DIGIT
    : '0'..'9'
    ;


CLASS : 'class';

FOREACH : 'foreach';

IN : 'in';

RETURN : 'return';

STATIC : 'static';

USING : 'using';

YIELD : 'yield';

IDENT
    : IDENT_START_CHAR (IDENT_CHAR)*
    ;

NUMBER
    : (DIGIT)+
    ;

LBRACE
    : '{'
    ;

RBRACE
    : '}'
    ;

LPAR
    : '('
    ;

RPAR
    : ')'
    ;

SEMICOLON
    : ';'
    ;

PERIOD
    : '.'
    ;

LESS
    : '<'
    ;

LSHIFT
    : '<<'
    ;

GREATER
    : '>'
    ;

EQUALS
    : '='
    ;

===================================
===================================

grammar Tags;

options {
    language     = CSharp;
}

// --------------------- parser --------------------

file
    : ignoredtail
      ( element
      )*
    ;

element
    : begintag
      ( element
      )*
      endtag
    ;

begintag
    : hTML                { Console.Out.WriteLine("Handling HTML"); }
    | lESS
      w=iDENT             { Console.Out.WriteLine("Ignoring " + w); }
      gREATER
    ;

endtag
    : eNDHTML             { Console.Out.WriteLine("Handling /HTML"); }
    | lESS
      sLASH
      w=iDENT             { Console.Out.WriteLine("Ignoring /" + w); }
      gREATER
    ;

// --------------------- lexing parser ---------------------

hTML
    : LESS
      HTML
      GREATER    ignoredtail
    ;

eNDHTML
    : LESS
      SLASH
      HTML
      GREATER    ignoredtail
    ;

lESS
    : LESS       ignoredtail
    ;

sLASH
    : SLASH      ignoredtail
    ;

iDENT returns [IToken r]
    : i=IDENT { $r = $i; }
      ignoredtail
    ;

gREATER
    : GREATER    ignoredtail
    ;

ignoredtail : ( WHITESPACE )* ;


// --------------------- lexer ---------------------

fragment
NEW_LINE
    :    (    // carriage return character followed by possible line feed character
            { input.LA(2)=='\u000A' }? => '\u000D' '\u000A'
        |    '\u000D'            // line feed character
        |    '\u000A'            // line feed character
        |    '\u2028'            // line separator character
        |    '\u2029'            // paragraph separator character
        )
    ;

WHITESPACE
    :    (    ' '
        |    '\u0009' // horizontal tab character
        |    '\u000B' // vertical tab character
        |    '\u000C' // form feed character
        |    NEW_LINE
        )+
    ;

fragment
IDENT_CHAR
    : 'a'..'z'
    | 'A'..'Z'
    | '_'
    ;

HTML : 'html';

IDENT
    : ( IDENT_CHAR
      )+
    ;

LESS
    : '<'
    ;

GREATER
    : '>'
    ;

SLASH
    : '/'
    ;

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From soth1985 at yahoo.com  Mon Nov 26 06:50:55 2007
From: soth1985 at yahoo.com (v r)
Date: Mon, 26 Nov 2007 17:50:55 +0300 (MSK)
Subject: [antlr-interest] Problem duplicating nodes
Message-ID: <814884.92952.qm@web36907.mail.mud.yahoo.com>

I have a rule
   
  struct_declaration
 : fs=fully_specified_type struct_declarator ( COMMA struct_declarator )* SEMICOLON ->^(STRUCT_FIELD $fs struct_declarator)+
 ;
   
  which should duplicate types for every identifier in a list (like 'int x,y,z[]')
  the problem is that type subtree appears only in the first node 'x',
  but if i write
  struct_declaration
 : fs=fully_specified_type struct_declarator ( COMMA struct_declarator )* SEMICOLON ->^(STRUCT_FIELD {$fs.tree} struct_declarator)+
 ;
   
  all goes as expected. Aren`t these two rules supposed to be equivalent?

       
---------------------------------

?? ??? ? Yahoo!? ????????? ??????????? ? ??????????. Yahoo! ?????!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071126/f3efa9d7/attachment.html 

From lgcraymer at yahoo.com  Mon Nov 26 07:33:30 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 26 Nov 2007 07:33:30 -0800 (PST)
Subject: [antlr-interest] Non-disjoint tokens
Message-ID: <706181.18161.qm@web55913.mail.re3.yahoo.com>



----- Original Message ----
> From: Steve Bennett <stevagewp at gmail.com>
> To: Gavin Lambert <antlr at mirality.co.nz>
> Cc: antlr-interest Interest <antlr-interest at antlr.org>
> Sent: Monday, November 26, 2007 4:44:43 AM
> Subject: Re: [antlr-interest] Non-disjoint tokens
> 
> On 11/26/07, Gavin Lambert  wrote:
> > I prefer this sort of approach over using semantic predicates; I
> > try to use those as little as possible.  (Mainly because I think
> > they're ugly, but also because they're target-specific.)
> 
> Thanks for the tip. I'm new to Antlr, but so far I'm finding a bit of
> a preference the other way, actually: I find syntactic predicates
> rather clunky and inexpressive, and since they're simply semantic
> predicates in disguise, they don't seem elegant to me. Most of the
> time they seem to end up in chains like this:

synpreds are not "simply sempreds in disguise"; that is a "feature" of the current implementation.  They are actually a lookahead device, and may be implemented (more) efficiently in some future version of ANTLR.

> 
> foo:
>   (bar) => bar
> | (dar) => dar
> | (lar) => lar
> | (rar) => rar
> ;
> 
> When all I really want to say is: "match the first expression that
> fits, and for god's sake don't give me any warnings about it!"

The usual behavior is "match the expression that fits"; adding "first" imposes order.  Synpreds impose that ordering.

> 
> There also seems not to be an easy way to say "in this context, don't
> try matching X, it won't work and you'll get stuck". Or for that
> matter a way of incorporating previously matched tokens: "If you have
> matched A and B, and the next token is D, then now would be a good
> time to match a C."

I suspect that this comment is lexer-specific, as is Gavin's comment about needing synpreds in places where they should not be needed.  This is on Ter's "to be fixed" list, and actually has to do with the use (or non-use, as happens now) of FOLLOW sets in lexers.

> 
> Both semantic and syntactic predicates seem like very powerful tools,
> but they seem a bit immature at the moment, and just need a bit more
> bedding down.

There is some truth to this, if you change the "they" to "the current implementation" in the "seem a bit immature" description.  Both PCCTS and ANTLR 2 provide strong bases of experience with predicates.  ANTLR 3 uses a different analysis approach (LL*), which is sufficiently powerful that Ter originally thought he could dispense with synpreds until experience showed otherwise.

The best way to get past this is to report use cases which "should" work but do not; that helps provide fodder for testing.

--Loring

> 
> Steve
> 




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs

From Austin_Hastings at Yahoo.com  Mon Nov 26 08:13:33 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Mon, 26 Nov 2007 11:13:33 -0500
Subject: [antlr-interest] Q: Help! "CharScanner;
 panic: ClassNotFoundException" using StringTemplate library - how
 do I fix this?
Message-ID: <474AF0AD.9020003@Yahoo.com>

Howdy,

I'm using antlr3 to generate my parser, and trying to use StringTemplate 
to emit java code. Running my test cases under junit works okay, but 
when I try to build a mostly-self-contained jar file, things start to go 
awry.

Currently, I'm building a jar that includes the antlr3 runtime, the 
entire antlr2-2.7.7.jar, the stringtemplate-3.1b1.jar, some other 
(non-antlr, non-st) exploded jars, and my own .class files & stg files. 
I am specifying a classpath that includes this jar and nothing else.

When I run this, I get

CharScanner; panic: ClassNotFoundException: 
org.antlr.stringtemplate.language.ChunkToken

Google suggests that the solution is classpath related, but I've got 
everything AND the kitchen sink exploded into a single jar, so I'm stuck 
- what is really going on here, and how do I fix it?

Note that I can get the thing to work in a more relaxed environment 
under junit, it's the final transition to production that is the 
stumbling block.

=Austin


From r.mark.volkmann at gmail.com  Mon Nov 26 12:57:50 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Mon, 26 Nov 2007 14:57:50 -0600
Subject: [antlr-interest] question about ".st" in Mantra grammar
Message-ID: <f0fcc6820711261257l6c9d2d0dm815c1ac9f2b238cf@mail.gmail.com>

I'm trying to learn more about using ANTLR by studying the grammar
files for Mantra. I'm looking at the statement rule in CodeGen.g and
see this alternative.

^('if' expression s=statement (el=statement)?)
-> ifstat(cond={$expression.st}, stat={$s.st}, elsestat={$el.st})

I understand that ifstat is a template in Java.stg, but what do the
".st" parts in that last line do? I couldn't find an example like this
in the ANTLR book, but maybe I missed it.

-- 
R. Mark Volkmann
Object Computing, Inc.

From parrt at cs.usfca.edu  Mon Nov 26 13:22:41 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Nov 2007 13:22:41 -0800
Subject: [antlr-interest] question about ".st" in Mantra grammar
In-Reply-To: <f0fcc6820711261257l6c9d2d0dm815c1ac9f2b238cf@mail.gmail.com>
References: <f0fcc6820711261257l6c9d2d0dm815c1ac9f2b238cf@mail.gmail.com>
Message-ID: <23DDBEB6-5357-4F5D-AA9F-AE157E0320BF@cs.usfca.edu>

hi. Those refer to the template returned from expression, statement,  
etc...

Ter
On Nov 26, 2007, at 12:57 PM, Mark Volkmann wrote:

> I'm trying to learn more about using ANTLR by studying the grammar
> files for Mantra. I'm looking at the statement rule in CodeGen.g and
> see this alternative.
>
> ^('if' expression s=statement (el=statement)?)
> -> ifstat(cond={$expression.st}, stat={$s.st}, elsestat={$el.st})
>
> I understand that ifstat is a template in Java.stg, but what do the
> ".st" parts in that last line do? I couldn't find an example like this
> in the ANTLR book, but maybe I missed it.
>
> -- 
> R. Mark Volkmann
> Object Computing, Inc.


From ronesh at visibleassets.com  Mon Nov 26 13:29:37 2007
From: ronesh at visibleassets.com (Ronesh Puri)
Date: Mon, 26 Nov 2007 16:29:37 -0500
Subject: [antlr-interest] Push/Pop for CommonTreeNodeStream in C runtime
	target
In-Reply-To: <mailman.9219.1195759653.2534.antlr-interest@antlr.org>
References: <mailman.9219.1195759653.2534.antlr-interest@antlr.org>
Message-ID: <40609FCF-70FF-47F6-AD8F-9C8738A9F65D@visibleassets.com>

Hi Jim,

Thanks for your response and particularly the explanation on how to  
get the CommonTree from the BaseTree. I tried following your  
suggestion to use visitChild() in absence of the push() and pop() in  
the C versions of CommonTreeNodeStream; however before I could test  
it out I ran into another problem:

The code generated by the C runtime doesn't seem to be able to match  
the '.' wildcard. Refering to the same snipped from my previous post:


block
     :   (NEWLINE)* BEGIN 	(stat1)*	END
         	-> ^( BLOCK["BLOCK"] stat1* )
     ;

ifStat
     : 'if' '(' expr ')' ifBlock=block
     	-> ^('if' ^(EXPR expr) $ifBlock)
     ;

AST
------
ifStat
     : ^('if' ^(EXPR v=expr) .)				// <-- ERROR due to '.'
    {

	if ($v.value != 0){
   		printf(" 'IF' condition is true  
-----------------------------------");
		// execute block() here... since the condition is true
	}
	else
		printf(" 'IF' condition is false  
-----------------------------------");

   }

gives the following error message:
-Imaginary-(0)  : error 7 : Unexpected node, at offset 0, near DO :  
syntax not recognized...

The error goes away if I replace the '.' with a 'block' in the AST file.

 From the example on "http://www.antlr.org/wiki/display/ANTLR3/Simple 
+tree-based+interpeter", Terence mentions that "The wildcard says  
skip the entire subtree (new in 3.0b6)."

Sounds like this might also be a part of the recent additions that  
haven't been implemented in the C runtime?

In order to implement any conditional statements including loops one  
would need to control when the blocks of code are parsed and hence  
interpreted/executed. The wildcard and the push/pop methods provided  
a non-complex means to achieve this. I'd appreciate any suggestions.

Thanks again
	Ron




>
> From: "Jim Idle" <jimi at temporal-wave.com>
> Date: November 22, 2007 2:22:02 PM EST (CA)
> To: antlr-interest <antlr-interest at antlr.org>
> Subject: Re: [antlr-interest] Push/Pop for CommonTreeNodeStream in  
> C runtime target
>
>
> The organization of this is a little different with the C runtime  
> because we don?t have objects and inheritance available. However,  
> the functionality is all there.
>
>
>
> pANTRL3_BASE_TREE is always passed to everything, even if you have  
> your own tree node structures etc. However, within this, there is a  
> pointer to common tree and within there, there is a pointer that  
> you can use to point to your own structure (which must contain  
> common tree, which must contain base tree). So, to get the common  
> tree associated with a base tree, take the void * called ?super?  
> and cast it to the common tree node typedef. You will see that all  
> the structures have this ?super? pointer, which is used to point to  
> any structure that is higher up the organization chain (parent in  
> object terms).
>
>
>
> I can only think that the particular methods on the java common  
> tree node stream were implemented after I implemented this in C and  
> somehow I missed these additions. However, if you look at the C  
> runtime code for visitChild(), you will see that there is code to  
> stack a current node and restore a prior node. Hence, you can  
> probably work out how to use the inbuilt stack system to do what  
> you need. I will make a note to see when the push and pop were  
> added and why I have not implemented them yet.
>
>
>
> Jim
>
>
>
>
>
>
>
>
> From: Ronesh Puri [mailto:ronesh at visibleassets.com]
> Sent: Wednesday, November 21, 2007 8:39 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Push/Pop for CommonTreeNodeStream in C  
> runtime target
>
>
>
> Hi
>
>
>
>           I've written a simple parser/ast walker in Java which  
> includes loops (for/while) and conditional (if) statements. With  
> help from the mailing list; this was accomplished in the Java  
> version by using the Java runtime's CommonTreeNodeStream's push()  
> and pop() methods...
>
>
>
> for e.g. see:
>
> http://www.antlr.org/pipermail/antlr-interest/2007-March/ 
> 020029.html
>
> and
>
> http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter
>
>
>
> I've been rewriting the grammar in C for performance reasons. So  
> far its been fairly straightfoward - kudos to Jim Idle (and all  
> involved). However, the C runtime target's  
> antlr3commontreenodestream.c doesn't seem to implement the push()  
> and pop() methods -or- perhaps I haven't been looking in the right  
> place. Could someone please direct me on how to  "Make stream jump  
> to a new location, saving old location." as would be needed for a  
> simple IF statement such as this (Java version):
>
>
>
>
>
> grammar file
>
> ---------------------
>
> ifStat
>
>     : 'if' '(' expr ')' ifBlock=block
>
>                   -> ^('if' ^(EXPR expr) $ifBlock)
>
>     ;
>
>
>
> AST file
>
> --------------------
>
> ifStat
>
>    : ^('if' ^(EXPR v=expr) .)
>
>    {
>
>           CommonTree stmtNode = null;
>
>        CommonTreeNodeStream stream = (CommonTreeNodeStream)input;
>
>        if ($v.value != 0)
>
>        {
>
>                    System.out.println(" 'IF' condition is true");
>
>                          stmtNode = (CommonTree) 
> $ifStat.start.getChild(1);
>
>        } else {
>
>                       System.out.println(" 'IF' condition is false");
>
>           }
>
>
>
>        if ( stmtNode != null )
>
>        {
>
>                          stream.push(stream.getNodeIndex(stmtNode));
>
>                          block();
>
>                          stream.pop();
>
>        }
>
>     }
>
>
>
>
>
> Also, since the node type is always pANTRL3_BASE_TREE in the C  
> runtime, does this change how such a conditional would be  
> implemented? An example of how to do this with the C runtime would  
> really be appreciated.
>
>
>
> Thank you,
>
>     Ron
>
>
>
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071126/439a2c85/attachment-0001.html 

From yotommy at gmail.com  Mon Nov 26 13:32:38 2007
From: yotommy at gmail.com (Tom Smith)
Date: Mon, 26 Nov 2007 16:32:38 -0500
Subject: [antlr-interest] question about ".st" in Mantra grammar
In-Reply-To: <f0fcc6820711261257l6c9d2d0dm815c1ac9f2b238cf@mail.gmail.com>
References: <f0fcc6820711261257l6c9d2d0dm815c1ac9f2b238cf@mail.gmail.com>
Message-ID: <82dc0d190711261332l3896c235w1128bb8adb86f28f@mail.gmail.com>

I found a couple of mentions in the ANTLR book:

- the expr rule in templates/generator/2pass/Gen.g (page 215 of my book)
- Table 6.2 (Predefined parser rule attributes)
- Table 6.4 (Predefined attributes for tree grammar rules)

HTH,
Tom

On Nov 26, 2007 3:57 PM, Mark Volkmann <r.mark.volkmann at gmail.com> wrote:
> I understand that ifstat is a template in Java.stg, but what do the
> ".st" parts in that last line do? I couldn't find an example like this
> in the ANTLR book, but maybe I missed it.

From r.mark.volkmann at gmail.com  Mon Nov 26 19:02:46 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Mon, 26 Nov 2007 21:02:46 -0600
Subject: [antlr-interest] conditional processing
Message-ID: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>

Part of my AST looks like this.

^('if' condition simpleStatement)

In my tree grammar, the rule for "condition" evaluates the matching
content to true or false. The rule for "simpleStatement" executes the
statement, for example, it could be a simple print statement. I only
want simpleStatement to be executed if condition evaluates to true. I
haven't been able to figure out how to make this work because when
this part of my AST is matched, the rules for both condition and
simpleStatement are fired.

I'd appreciate any hints on how to achieve this.

-- 
R. Mark Volkmann
Object Computing, Inc.

From gbr at newtechlaw.com  Mon Nov 26 19:48:52 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon, 26 Nov 2007 19:48:52 -0800
Subject: [antlr-interest] conditional processing
In-Reply-To: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.co
 m>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
Message-ID: <200711270348.lAR3mfa8026027@tach.newtechlaw.com>

At 07:02 PM 11/26/2007, Mark Volkmann wrote:
>Part of my AST looks like this.
>
>^('if' condition simpleStatement)

Would help to see the full rule and the condition rule.  Still, a 
possible solution is to use a semantic predicate, something like:

^('if' b=condition { $b.equals("true") }? simpleStatement)


>In my tree grammar, the rule for "condition" evaluates the matching
>content to true or false. The rule for "simpleStatement" executes the
>statement, for example, it could be a simple print statement. I only
>want simpleStatement to be executed if condition evaluates to true. I
>haven't been able to figure out how to make this work because when
>this part of my AST is matched, the rules for both condition and
>simpleStatement are fired.
>
>I'd appreciate any hints on how to achieve this.
>
>--
>R. Mark Volkmann
>Object Computing, Inc.

----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any 
attachments) is being sent by an attorney, is for the sole use of the 
intended recipient, and may contain confidential and privileged 
information.  Any unauthorized review, use, disclosure or 
distribution is prohibited.  If you are not the intended recipient, 
please contact the sender immediately by reply email and delete all 
copies of this message and any attachments without retaining a copy.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071126/94778da5/attachment.html 

From stevagewp at gmail.com  Mon Nov 26 21:41:27 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Tue, 27 Nov 2007 16:41:27 +1100
Subject: [antlr-interest] Non-disjoint tokens
In-Reply-To: <706181.18161.qm@web55913.mail.re3.yahoo.com>
References: <706181.18161.qm@web55913.mail.re3.yahoo.com>
Message-ID: <b8ceeef70711262141m3e922a2cj87e21e4ea94f0834@mail.gmail.com>

On 11/27/07, Loring Craymer <lgcraymer at yahoo.com> wrote:
> > foo:
> >   (bar) => bar
> > | (dar) => dar
> > | (lar) => lar
> > | (rar) => rar
> > ;
> >
> > When all I really want to say is: "match the first expression that
> > fits, and for god's sake don't give me any warnings about it!"
>
> The usual behavior is "match the expression that fits"; adding "first" imposes order.  Synpreds impose that ordering.

Yes, but the syntax to make that happen is so inefficient. It would be
much nicer to be able to do:

foo options {matchfirst = true;} : bar | dar | lar | rar;

I'm finding a constant tradeoff between warning suppression and readability...

> I suspect that this comment is lexer-specific, as is Gavin's comment about needing synpreds in places where they should not be needed.  This is on Ter's "to be fixed" list, and actually has to do with the use (or non-use, as happens now) of FOLLOW sets in lexers.

Oh, goodie :)

> There is some truth to this, if you change the "they" to "the current implementation" in the "seem a bit immature" description.  Both PCCTS and ANTLR 2 provide strong bases of experience with predicates.  ANTLR 3 uses a different analysis approach (LL*), which is sufficiently powerful that Ter originally thought he could dispense with synpreds until experience showed otherwise.

Ah. Well, their uses seem pretty limited to me (suppressing warnings,
and preventing the parser from falling in holes), so I guess that's
why. It *would* be nice to be able to dispense with them.

> The best way to get past this is to report use cases which "should" work but do not; that helps provide fodder for testing.

Ok, I'll try and do that. So far, I'm probably not confident enough to
say what "should" work - all I can say is what I naively expected to
work. Is there a separate bugs/testing list, or do I just send them
here?

Steve

From lgcraymer at yahoo.com  Mon Nov 26 22:25:37 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 26 Nov 2007 22:25:37 -0800 (PST)
Subject: [antlr-interest] Non-disjoint tokens
Message-ID: <11703.28717.qm@web55902.mail.re3.yahoo.com>



----- Original Message ----
> From: Steve Bennett <stevagewp at gmail.com>
...
> > The best way to get past this is to report use cases which
> "should"
> 
 work but do not; that helps provide fodder for testing.
> 
> Ok, I'll try and do that. So far, I'm probably not confident enough to
> say what "should" work - all I can say is what I naively expected to
> work. Is there a separate bugs/testing list, or do I just send them
> here?

Send them here--even the ones which might be "naive expectations".  Ter stays pretty active in monitoring the list, the generated discussions benefit others, and this is a generally friendly group.

--Loring

> 
> Steve
> 




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs

From harald_m_mueller at gmx.de  Tue Nov 27 01:08:10 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Tue, 27 Nov 2007 10:08:10 +0100
Subject: [antlr-interest] conditional processing
In-Reply-To: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
Message-ID: <20071127090810.37810@gmx.net>

Hi -

You need a context that keeps knowledge about the world - variable values, but also results of evaluations e.g. for ifs, returns etc. Usually the context is a stack - see any text on fundamentals of progam language semantics. The context is threaded through all your calls (as a simple parameter), and your calls - e.g. "simpleStatement" - can then react to it:

if (boolStack.Top) {
    ...do evaluation...
}

Just imagine what data a virtual machine would need to do what you want - exactly these data are what you need in your context.

Regards
Harald

-------- Original-Nachricht --------
> Datum: Mon, 26 Nov 2007 21:02:46 -0600
> Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] conditional processing

> Part of my AST looks like this.
> 
> ^('if' condition simpleStatement)
> 
> In my tree grammar, the rule for "condition" evaluates the matching
> content to true or false. The rule for "simpleStatement" executes the
> statement, for example, it could be a simple print statement. I only
> want simpleStatement to be executed if condition evaluates to true. I
> haven't been able to figure out how to make this work because when
> this part of my AST is matched, the rules for both condition and
> simpleStatement are fired.
> 
> I'd appreciate any hints on how to achieve this.
> 
> -- 
> R. Mark Volkmann
> Object Computing, Inc.

-- 
GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail

From vbar at comp.cz  Tue Nov 27 01:29:18 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 27 Nov 2007 10:29:18 +0100
Subject: [antlr-interest] "Contextual lexing": Ideas on "nested parsers"
	and "lexing parsers."
In-Reply-To: <20071126143904.232250@gmx.net>
References: <20071126143904.232250@gmx.net>
Message-ID: <200711271029.18129.vbar@comp.cz>

On Monday 26 November 2007 15:39:04 Harald Mueller wrote:
> runs are discarded; * Or you pass in some information from the outer
> language parser that you are at a place where the inner language should be
> parsed:
>
> cstmt
>
>     : 'printf'
>
>       '('
>       s=STRING {
>            // we are now in a printf statment -> parse inner language
>            CPrintfLexer innerLexer = ...($s.getText());
>            CPrintfParser innerParser = ...;
>            ... result = innerParser.format();
>            ...
>       }
>       ')'
>
>     | ...
...
> It is straightforward to extend this to more than two nested languages -
> however, I yet have to see an example of a language nested in a language in
> a language ...
I see you aren't using Perl :-) - Perl regular expressions can contain Perl 
code, which can contain regular expressions, etc...

	Bye
		Vasek
--
http://www.mangrove.cz/
Open Source integration

From harald_m_mueller at gmx.de  Tue Nov 27 01:50:53 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Tue, 27 Nov 2007 10:50:53 +0100
Subject: [antlr-interest] "Contextual lexing": Ideas on "nested parsers"
 and "lexing parsers."
In-Reply-To: <200711271029.18129.vbar@comp.cz>
References: <20071126143904.232250@gmx.net> <200711271029.18129.vbar@comp.cz>
Message-ID: <20071127095053.37820@gmx.net>

Vasek wrote:
> ...I wrote:
> > however, I yet have to see an example of a language nested in a language
> in
> > a language ...
>
> I see you aren't using Perl :-) - Perl regular expressions can contain
> Perl 
> code, which can contain regular expressions, etc...

Great thing :-) - that makes for recursively nested languages to arbitrary depths!!
(and no, I haven't used anything after Perl 4, I confess).

Regards
Harald


-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From Austin_Hastings at Yahoo.com  Tue Nov 27 04:45:11 2007
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Tue, 27 Nov 2007 07:45:11 -0500
Subject: [antlr-interest] Notes on running Antlr / StringTemplate under Ant
 (explains the CharScanner;
 panic: ClassNotFoundException: org.antlr.stringtemplate.language.ChunkToken)
Message-ID: <474C1157.2050700@Yahoo.com>

Howdy,

A while ago I posted a cry for help because I was using StringTemplate 
to generate some java code and I would sometimes get this error:

CharScanner; panic: ClassNotFoundException: 
org.antlr.stringtemplate.language.ChunkToken

The problem relates to class loading. Here's a nice primer on the 
subject: http://www.onjava.com/pub/a/onjava/2005/01/26/classloading.html

The situation is this:

- I am using Antlr3
- I am using StringTemplate 3.1b1
- I am using Ant
- I have adapted my program to run both stand-alone and as an Ant task.

When I ran the program from the Linux command line, there was no 
problem. But when I ran the program from within Ant, I got the 
CharScanner panic.

What I have learned is that an Ant task can by dynamically loaded, which 
I am doing. That looks like this:

    <taskdef
        classpathRef = "antlr3.class.path"
        loaderRef = "antlr3"
        name = "antlr3"
        />

When you do this, Ant creates a new instance of "AntClassLoader" with 
the loaderRef you specify (a unique meaningless name) and with the 
classpath you provide. (In this example, the classpath is very, very 
specific.)

On the other hand, you can include jar files in your ant installation by 
placing them either in your /usr/share/ant/lib directory, or in your 
$HOME/.ant/lib directory. Putting the files in these pre-defined 
locations means that Ant can load them using the classloader that Ant 
uses to pick up libraries - an instance of java.net.URLClassLoader.

I put this code in my ant task:

private void printLoaderChain(ClassLoader cl, String msg)
{
    if (msg != null) System.err.println(msg);
    System.err.println("Classloader chain starts with:");
    while (cl != null)
    {
        System.err.println(cl);
        cl = cl.getParent();
    }
    System.err.println("--- chain ends");
}
public final void execute()
{
    System.err.println("Classloader data:");
    printLoaderChain(this.getClass().getClassLoader(), "Here is the 
current chain");
    printLoaderChain(antlr.CharScanner.class.getClassLoader(), "Here is 
the CharScanner chain");


And ran Ant with two different invocations. The first invocation, which 
cause the problem, was a mixed model. Some ant tasks were loaded with 
dynamic loading, while other tasks were in the ~/.ant/lib directory. The 
results look like this:

   [gunit3] Classloader data:
   [gunit3] Here is the current chain
   [gunit3] Classloader chain starts with:
** [gunit3] AntClassLoader[/home/austin/gunit/release/gunit-1.1.jar]   
   [gunit3] sun.misc.Launcher$AppClassLoader at 7d772e
   [gunit3] sun.misc.Launcher$ExtClassLoader at 11b86e7
   [gunit3] --- chain ends
   [gunit3] Here is the CharScanner chain
   [gunit3] Classloader chain starts with:
** [gunit3] java.net.URLClassLoader at 61de33              
   [gunit3] sun.misc.Launcher$AppClassLoader at 7d772e
   [gunit3] sun.misc.Launcher$ExtClassLoader at 11b86e7
   [gunit3] --- chain ends
   [gunit3] File: /home/austin/gunit/tests/org/antlr/gunit/CodeBlocks.ts
   [gunit3] Generating: CodeBlocks
   [gunit3] CharScanner; panic: ClassNotFoundException: 
org.antlr.stringtemplate.language.ChunkToken

Notice that the "current" chain and the "CharScanner" chain start with 
different nodes (AntClassLoader vs. URLClassLoader).

When I removed ~/.ant/lib/checkstyle-all-4.3.jar from my ~/.ant/lib 
directory, I got different output:

   [gunit3] Classloader data:
   [gunit3] Here is the current chain
   [gunit3] Classloader chain starts with:
   [gunit3] AntClassLoader[/home/austin/gunit/release/gunit-1.1.jar]
   [gunit3] sun.misc.Launcher$AppClassLoader at 7d772e
   [gunit3] sun.misc.Launcher$ExtClassLoader at 11b86e7
   [gunit3] --- chain ends
   [gunit3] Here is the CharScanner chain
   [gunit3] Classloader chain starts with:
   [gunit3] AntClassLoader[/home/austin/gunit/release/gunit-1.1.jar]
   [gunit3] sun.misc.Launcher$AppClassLoader at 7d772e
   [gunit3] sun.misc.Launcher$ExtClassLoader at 11b86e7
   [gunit3] --- chain ends
   [gunit3] File: /home/austin/gunit/tests/org/antlr/gunit/CodeBlocks.ts
   [gunit3] Generating: CodeBlocks
   [gunit3] Writing junit test class to: ./CodeBlocks_Test.java
   [gunit3] File: /home/austin/gunit/tests/org/antlr/gunit/Gunit.ts
   [gunit3] Generating: Gunit
   [gunit3] Writing junit test class to: ./Gunit_Test.java


In this case, the CharScanner class has the same classloader chain that 
the current (AntTask) class has.

The problem is NOT caused by having different class loader chains. The 
problem is caused by 'poisoning' class loader chains. The StringTemplate 
library uses antlr2, and configures it to use a new token type 
(org.stringtemplate.language.ChunkToken). Find and reread this section 
of the article:

"In other words, the JVM cannot execute the code:

|    Target target3 = (Target) target2;
|


The above code will throw a |ClassCastException|. This is because the 
JVM sees these two as separate, distinct class types, since they are 
defined by different |ClassLoader| instances."

When the checkstyle task is in my ~/.ant/lib path, it gets loaded by 
ant. And checkstyle uses antlr. Hooray for antlr! But when my 
stringtemplate code, which also uses antlr, tried to load the antlr 
classes, there was no need - the classloader chain already had the antlr 
classes loaded - BY A DIFFERENT LOADER. That's not a problem - you can 
still use the classes. But when the antlr lexer tried to instantiate a 
stringtemplate class, it could not find the class because the 
stringtemplate library was loaded by a child of the antlr ClassLoader. 
That is:

1: System loaders
2: Ant loader with ~/.ant/lib/checkstyle classes, including ANTLR
3: Dynamic loader with StringTemplate classes, but not ANTLR.

My code was loaded by #3, and went looking for the antlr classes. The #3 
class loader delegated first to its parent loader, #2, which had loaded 
them already.

My code (StringTemplate) passed a class name to antlr. Antlr tried to 
instantiate the named class, and so called its class loader (#2) which 
can only search in #2 and #1. Doh! ClassNotFoundException.

The solution in the near term is to get antlr out of the loader chain. I 
accomplished this by removing checkstyle from my ant library directory, 
and using dynamic loading to load it with a new AntClassLoader. This 
"cleans up" the loader chain, so that my task only finds classes in its 
own loader.

The longer-term solution is to clean up antlr. Obviously there's an 
antlr-2 versus antlr-3 thing here, and so this will have to happen in 
antlr-3. But passing class names is a no-no -- pass class objects 
instead. Giving a class object would allow the class' own loader (my 
loader, #3, in this case) to be called for the instantiation. There are 
probably some other rules out there for doing this stuff. The ant guys 
may be a good resource, since they do this dynamic loading all the time. 
Or maybe eclipse has a document about it.

=Austin


From r.mark.volkmann at gmail.com  Tue Nov 27 04:50:22 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Tue, 27 Nov 2007 06:50:22 -0600
Subject: [antlr-interest] conditional processing
In-Reply-To: <20071127090810.37810@gmx.net>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<20071127090810.37810@gmx.net>
Message-ID: <f0fcc6820711270450h7290886ayd8372cb0aed80585@mail.gmail.com>

On 11/27/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> Hi -
>
> You need a context that keeps knowledge about the world - variable values, but also results of evaluations e.g. for ifs, returns etc. Usually the context is a stack - see any text on fundamentals of progam language semantics. The context is threaded through all your calls (as a simple parameter), and your calls - e.g. "simpleStatement" - can then react to it:
>
> if (boolStack.Top) {
>     ...do evaluation...
> }
>
> Just imagine what data a virtual machine would need to do what you want - exactly these data are what you need in your context.

>From what you described, it sounds like my current solution might be
using the right approach. I don't have to worry about nested
conditionals, so I probably don't need stacks now. Here's what I have.
Note how the rule for simpleStatement just remembers what it saw but
doesn't execute the statement. Also note how the rule that matches
"IF" executes the statement if the condition evaluates to true. Does
this seem like a reasonable way to implement this?

tree grammar MathScriptTree;

options {
  ASTLabelType = CommonTree;
  tokenVocab = MathScript;
  output = template;
}

@members {
  enum Operation { Add, Subtract, Print }
  Operation operation;
  int operand;
  int value;

  private void execute() {
    switch (operation) {
      case Add: value += operand; break;
      case Subtract: value -= operand; break;
      case Print: System.out.println(value); break;
    }
  }

  private static int toInt(CommonTree node) {
    return Integer.parseInt(node.getText());
  }
}

script: ^(SCRIPT statement*);

statement
  : simpleStatement { execute(); }
  | ^('IF' c=condition simpleStatement) { if ($c.result) execute(); }
  ;

simpleStatement
  : ^('ADD' n=NUMBER) { operation = Operation.Add; operand = toInt(n); }
  | ^('SUBTRACT' n=NUMBER) { operation = Operation.Subtract; operand =
toInt(n); }
  | 'PRINT' { operation = Operation.Print; }
  ;

condition returns [boolean result]
  : 'POSITIVE' { $result = value > 0; }
  | 'NEGATIVE' { $result = value < 0; }
  | ^('<' n=NUMBER) { $result = value < toInt(n); }
  | ^('>' n=NUMBER) { $result = value > toInt(n); }
  | ^('=' n=NUMBER) { $result = value == toInt(n); }
  ;

> -------- Original-Nachricht --------
> > Datum: Mon, 26 Nov 2007 21:02:46 -0600
> > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > An: antlr-interest at antlr.org
> > Betreff: [antlr-interest] conditional processing
>
> > Part of my AST looks like this.
> >
> > ^('if' condition simpleStatement)
> >
> > In my tree grammar, the rule for "condition" evaluates the matching
> > content to true or false. The rule for "simpleStatement" executes the
> > statement, for example, it could be a simple print statement. I only
> > want simpleStatement to be executed if condition evaluates to true. I
> > haven't been able to figure out how to make this work because when
> > this part of my AST is matched, the rules for both condition and
> > simpleStatement are fired.
> >
> > I'd appreciate any hints on how to achieve this.
> >
> > --
> > R. Mark Volkmann
> > Object Computing, Inc.
>
> --
> GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail
>


-- 
R. Mark Volkmann
Object Computing, Inc.

From harald_m_mueller at gmx.de  Tue Nov 27 05:22:26 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Tue, 27 Nov 2007 14:22:26 +0100
Subject: [antlr-interest] conditional processing
In-Reply-To: <f0fcc6820711270450h7290886ayd8372cb0aed80585@mail.gmail.com>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<20071127090810.37810@gmx.net>
	<f0fcc6820711270450h7290886ayd8372cb0aed80585@mail.gmail.com>
Message-ID: <20071127132226.311280@gmx.net>

Hi

after a quick scanning of your code, I'd say this should work.

However, I don't like the design that much: global variables are per se a bad decision - passing your knowledge around (in single parameters; or, when that gets too cumbersome, in my beloved "context object") is simply more state-of-the-art.

Still, I confess that this argument only is valid if your language will grow one day - then a better design will scale better ... (wouldn't you (or someone) at some time like (or need) to have nested ifs or somewhat more expressive expressions? - all little languages I saw one day wanted to do such things).

At least, you could safe-guard your global variables so that you can only assign a value once to them; then do an evaluation which clears the variables; etc. (in other words, define a clean state machine for them; and implement it - probably in some small classes). That way, any modification of your grammar or your evaluation logic which invalidates your implicit assumptions about when a variable is written and when it is read will at least fly into your face immediately ...

Regards
Harald M.

-------- Original-Nachricht --------
> Datum: Tue, 27 Nov 2007 06:50:22 -0600
> Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] conditional processing

> On 11/27/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > Hi -
> >
> > You need a context that keeps knowledge about the world - variable
> values, but also results of evaluations e.g. for ifs, returns etc. Usually the
> context is a stack - see any text on fundamentals of progam language
> semantics. The context is threaded through all your calls (as a simple parameter),
> and your calls - e.g. "simpleStatement" - can then react to it:
> >
> > if (boolStack.Top) {
> >     ...do evaluation...
> > }
> >
> > Just imagine what data a virtual machine would need to do what you want
> - exactly these data are what you need in your context.
> 
> >>From what you described, it sounds like my current solution might be
> using the right approach. I don't have to worry about nested
> conditionals, so I probably don't need stacks now. Here's what I have.
> Note how the rule for simpleStatement just remembers what it saw but
> doesn't execute the statement. Also note how the rule that matches
> "IF" executes the statement if the condition evaluates to true. Does
> this seem like a reasonable way to implement this?
> 
> tree grammar MathScriptTree;
> 
> options {
>   ASTLabelType = CommonTree;
>   tokenVocab = MathScript;
>   output = template;
> }
> 
> @members {
>   enum Operation { Add, Subtract, Print }
>   Operation operation;
>   int operand;
>   int value;
> 
>   private void execute() {
>     switch (operation) {
>       case Add: value += operand; break;
>       case Subtract: value -= operand; break;
>       case Print: System.out.println(value); break;
>     }
>   }
> 
>   private static int toInt(CommonTree node) {
>     return Integer.parseInt(node.getText());
>   }
> }
> 
> script: ^(SCRIPT statement*);
> 
> statement
>   : simpleStatement { execute(); }
>   | ^('IF' c=condition simpleStatement) { if ($c.result) execute(); }
>   ;
> 
> simpleStatement
>   : ^('ADD' n=NUMBER) { operation = Operation.Add; operand = toInt(n); }
>   | ^('SUBTRACT' n=NUMBER) { operation = Operation.Subtract; operand =
> toInt(n); }
>   | 'PRINT' { operation = Operation.Print; }
>   ;
> 
> condition returns [boolean result]
>   : 'POSITIVE' { $result = value > 0; }
>   | 'NEGATIVE' { $result = value < 0; }
>   | ^('<' n=NUMBER) { $result = value < toInt(n); }
>   | ^('>' n=NUMBER) { $result = value > toInt(n); }
>   | ^('=' n=NUMBER) { $result = value == toInt(n); }
>   ;
> 
> > -------- Original-Nachricht --------
> > > Datum: Mon, 26 Nov 2007 21:02:46 -0600
> > > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > > An: antlr-interest at antlr.org
> > > Betreff: [antlr-interest] conditional processing
> >
> > > Part of my AST looks like this.
> > >
> > > ^('if' condition simpleStatement)
> > >
> > > In my tree grammar, the rule for "condition" evaluates the matching
> > > content to true or false. The rule for "simpleStatement" executes the
> > > statement, for example, it could be a simple print statement. I only
> > > want simpleStatement to be executed if condition evaluates to true. I
> > > haven't been able to figure out how to make this work because when
> > > this part of my AST is matched, the rules for both condition and
> > > simpleStatement are fired.
> > >
> > > I'd appreciate any hints on how to achieve this.
> > >
> > > --
> > > R. Mark Volkmann
> > > Object Computing, Inc.
> >
> > --
> > GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> > Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail
> >
> 
> 
> -- 
> R. Mark Volkmann
> Object Computing, Inc.

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser

From r.mark.volkmann at gmail.com  Tue Nov 27 05:34:44 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Tue, 27 Nov 2007 07:34:44 -0600
Subject: [antlr-interest] conditional processing
In-Reply-To: <20071127132226.311280@gmx.net>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<20071127090810.37810@gmx.net>
	<f0fcc6820711270450h7290886ayd8372cb0aed80585@mail.gmail.com>
	<20071127132226.311280@gmx.net>
Message-ID: <f0fcc6820711270534y22bbf058td5355a6ef63d365b@mail.gmail.com>

Thanks for taking the time to review this and thanks for the design
feedback! I'll at least safe-guard the global variables.

What I really hoping for was a way to let the rule for simpleStatement
execute the intended action instead of simply recording the details
about it for later execution. I thought maybe there was a way in the
rewrite rule for the 'IF' to avoid evaluating the simpleStatement rule
unless the condition rule evaluated to true. It seems that there's no
way around what I'll call the bookkeeping approach. Is that right?


On 11/27/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> Hi
>
> after a quick scanning of your code, I'd say this should work.
>
> However, I don't like the design that much: global variables are per se a bad decision - passing your knowledge around (in single parameters; or, when that gets too cumbersome, in my beloved "context object") is simply more state-of-the-art.
>
> Still, I confess that this argument only is valid if your language will grow one day - then a better design will scale better ... (wouldn't you (or someone) at some time like (or need) to have nested ifs or somewhat more expressive expressions? - all little languages I saw one day wanted to do such things).
>
> At least, you could safe-guard your global variables so that you can only assign a value once to them; then do an evaluation which clears the variables; etc. (in other words, define a clean state machine for them; and implement it - probably in some small classes). That way, any modification of your grammar or your evaluation logic which invalidates your implicit assumptions about when a variable is written and when it is read will at least fly into your face immediately ...
>
> Regards
> Harald M.
>
> -------- Original-Nachricht --------
> > Datum: Tue, 27 Nov 2007 06:50:22 -0600
> > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > An: antlr-interest at antlr.org
> > Betreff: Re: [antlr-interest] conditional processing
>
> > On 11/27/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > > Hi -
> > >
> > > You need a context that keeps knowledge about the world - variable
> > values, but also results of evaluations e.g. for ifs, returns etc. Usually the
> > context is a stack - see any text on fundamentals of progam language
> > semantics. The context is threaded through all your calls (as a simple parameter),
> > and your calls - e.g. "simpleStatement" - can then react to it:
> > >
> > > if (boolStack.Top) {
> > >     ...do evaluation...
> > > }
> > >
> > > Just imagine what data a virtual machine would need to do what you want
> > - exactly these data are what you need in your context.
> >
> > >>From what you described, it sounds like my current solution might be
> > using the right approach. I don't have to worry about nested
> > conditionals, so I probably don't need stacks now. Here's what I have.
> > Note how the rule for simpleStatement just remembers what it saw but
> > doesn't execute the statement. Also note how the rule that matches
> > "IF" executes the statement if the condition evaluates to true. Does
> > this seem like a reasonable way to implement this?
> >
> > tree grammar MathScriptTree;
> >
> > options {
> >   ASTLabelType = CommonTree;
> >   tokenVocab = MathScript;
> >   output = template;
> > }
> >
> > @members {
> >   enum Operation { Add, Subtract, Print }
> >   Operation operation;
> >   int operand;
> >   int value;
> >
> >   private void execute() {
> >     switch (operation) {
> >       case Add: value += operand; break;
> >       case Subtract: value -= operand; break;
> >       case Print: System.out.println(value); break;
> >     }
> >   }
> >
> >   private static int toInt(CommonTree node) {
> >     return Integer.parseInt(node.getText());
> >   }
> > }
> >
> > script: ^(SCRIPT statement*);
> >
> > statement
> >   : simpleStatement { execute(); }
> >   | ^('IF' c=condition simpleStatement) { if ($c.result) execute(); }
> >   ;
> >
> > simpleStatement
> >   : ^('ADD' n=NUMBER) { operation = Operation.Add; operand = toInt(n); }
> >   | ^('SUBTRACT' n=NUMBER) { operation = Operation.Subtract; operand =
> > toInt(n); }
> >   | 'PRINT' { operation = Operation.Print; }
> >   ;
> >
> > condition returns [boolean result]
> >   : 'POSITIVE' { $result = value > 0; }
> >   | 'NEGATIVE' { $result = value < 0; }
> >   | ^('<' n=NUMBER) { $result = value < toInt(n); }
> >   | ^('>' n=NUMBER) { $result = value > toInt(n); }
> >   | ^('=' n=NUMBER) { $result = value == toInt(n); }
> >   ;
> >
> > > -------- Original-Nachricht --------
> > > > Datum: Mon, 26 Nov 2007 21:02:46 -0600
> > > > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > > > An: antlr-interest at antlr.org
> > > > Betreff: [antlr-interest] conditional processing
> > >
> > > > Part of my AST looks like this.
> > > >
> > > > ^('if' condition simpleStatement)
> > > >
> > > > In my tree grammar, the rule for "condition" evaluates the matching
> > > > content to true or false. The rule for "simpleStatement" executes the
> > > > statement, for example, it could be a simple print statement. I only
> > > > want simpleStatement to be executed if condition evaluates to true. I
> > > > haven't been able to figure out how to make this work because when
> > > > this part of my AST is matched, the rules for both condition and
> > > > simpleStatement are fired.
> > > >
> > > > I'd appreciate any hints on how to achieve this.
> > > >
> > > > --
> > > > R. Mark Volkmann
> > > > Object Computing, Inc.
> > >
> > > --
> > > GMX FreeMail: 1 GB Postfach, 5 E-Mail-Adressen, 10 Free SMS.
> > > Alle Infos und kostenlose Anmeldung: http://www.gmx.net/de/go/freemail
> > >
> >
> >
> > --
> > R. Mark Volkmann
> > Object Computing, Inc.
>
> --
> Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten
> Browser-Versionen downloaden: http://www.gmx.net/de/go/browser
>


-- 
R. Mark Volkmann
Object Computing, Inc.

From stevagewp at gmail.com  Tue Nov 27 06:52:57 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 28 Nov 2007 01:52:57 +1100
Subject: [antlr-interest] "Contextual lexing": Ideas on "nested parsers"
	and "lexing parsers."
In-Reply-To: <20071126143904.232250@gmx.net>
References: <20071126143904.232250@gmx.net>
Message-ID: <b8ceeef70711270652x6a8fb3d1tea1f14eb4c9c7ce6@mail.gmail.com>

On 11/27/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> In ANTLR 3, we do not have multi-lexer streams (as far as I know; the main reason is that lexing happens - at least conceptually - in one big swoosh before parsing starts). However, in many cases, it is still possible to use a solution akin to the ANTLR 2 version as follows: Very often, when a document is in some "outer language," which contains segments written in some other language ("inner language"), the segments can be read as complete tokens in the outer language.

I think I would understand ANTLR a lot better if I knew its history a
bit better :) To me, the "swoosh" approach feels like a limitation,
but it's actually an improvement on what there was before? I keep
wishing that the lexer was an on-demand stream that could be told to
relex tokens when required.

For example, in the wiki text I'm parsing, ]] is virtually always the
end of an internal link - a single token. But occasionally, it's a
single square bracket at the end of an exernal link.
[[http://foo.com]] is dopey code, but it's technically valid - an
external link wrapped in literal square brackets.

So it would be convenient to treat ]] as a token, but in those rare
cases, tell the lexer to throw out the tokens it's generated, read in
just a single ] then revert to normal. But if all the lexing happens
in one "swoosh" before the parser, that's obviously not possible.

As it is, I tend to use a solution a bit like you suggest:

RIGHT_BRACKET: ']';
external_link_end: RIGHT_BRACKET;
internal_link_end: RIGHT_BRACKET RIGHT_BRACKET;

But it's obviously not perfect: the token is clearly ']]' not ']'
followed by ']'.

Steve

From SWatt at infobal.com  Tue Nov 27 07:32:03 2007
From: SWatt at infobal.com (Stuart Watt)
Date: Tue, 27 Nov 2007 10:32:03 -0500
Subject: [antlr-interest] Line/char positions in C runtime
Message-ID: <96AD91D781CCD511A66000B0D0D15C49043DAD69@EXSVR1>

Hiya,

I'm still in my early days of ANTLRing, but I've dug around the mailing
lists and can't find much help on this issue; any suggestions or pointers
very welcome.

Basically, I want to get line/character position information into the AST
when using the C runtime - and although I've found stuff on doing this in
Java, I'm not as clear about how to extend the C runtime architecture. I'm
using C so I can integrate the ANTLR parser into a Perl XS module - all this
works fine. I'm using gcc on Windows, MinGW and CDT under Eclipse. 

The good news is that all this works fine and I can get the AST into Perl
and process it there with no problems. The bad news is I have no idea how to
map the AST positioning back to the original text, which would be a big step
forward.

Any ideas or suggestions gratefully received
--Stuart

From corellian.c at gmail.com  Tue Nov 27 07:35:38 2007
From: corellian.c at gmail.com (Cristian Peraferrer)
Date: Tue, 27 Nov 2007 16:35:38 +0100
Subject: [antlr-interest]  StringTemplate is Ok,
	but what about "Action code"?
Message-ID: <96BC2DCF-CF6A-49B4-80F6-4AAD885359FE@gmail.com>

Hi,

With StringTemplate we can achieve low coupling with the target  
language. But what about Action code?
How we should achieve low coupling with the target language?

Thanks in advance,
Cristian.

-- 
GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch


From kwhittingham at gmail.com  Tue Nov 27 10:03:02 2007
From: kwhittingham at gmail.com (Keith Whittingham)
Date: Tue, 27 Nov 2007 19:03:02 +0100
Subject: [antlr-interest] "Contextual lexing": Ideas on "nested parsers"
	and "lexing parsers."
In-Reply-To: <b8ceeef70711270652x6a8fb3d1tea1f14eb4c9c7ce6@mail.gmail.com>
References: <20071126143904.232250@gmx.net>
	<b8ceeef70711270652x6a8fb3d1tea1f14eb4c9c7ce6@mail.gmail.com>
Message-ID: <op.t2gprcg7ba319o@cirrus>

I went through this pain a couple of years back. In the end I gave up with  
generators and hand code a 'syntax driven lexer'. I just passed context  
change directives through the nextToken() method. Personally I liked this  
approach a lot. A purist might comment that the split between the lexer  
and parser is broken but I don't think so - quite the opposite.

On Tue, 27 Nov 2007 15:52:57 +0100, Steve Bennett <stevagewp at gmail.com>  
wrote:

> but it's actually an improvement on what there was before? I keep
> wishing that the lexer was an on-demand stream that could be told to
> relex tokens when required.
>

From atif.azad at hotmail.com  Tue Nov 27 10:57:31 2007
From: atif.azad at hotmail.com (atif azad)
Date: Tue, 27 Nov 2007 23:57:31 +0500
Subject: [antlr-interest] Define a class in grammer
Message-ID: <BLU105-F405AD706B58D7825BFA515E5760@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071127/8efaea0f/attachment-0001.html 

From aheller at gmx.at  Tue Nov 27 11:00:44 2007
From: aheller at gmx.at (Arnulf Heller)
Date: Tue, 27 Nov 2007 20:00:44 +0100
Subject: [antlr-interest] StringTemplate is Ok,
 but what about  "Action code"?
In-Reply-To: <96BC2DCF-CF6A-49B4-80F6-4AAD885359FE@gmail.com>
References: <96BC2DCF-CF6A-49B4-80F6-4AAD885359FE@gmail.com>
Message-ID: <20071127190046.DAJI19585.viefep20-int.chello.at@schnuftikus.gmx.at>

hi,

Loring Craymer contributed "Yggdrasil" for this task:
http://www.antlr.org/article/1153859608705/yggdrasil.pdf
http://www.antlr.org/share/list

It seems to be based on ANTLR3 but I don't know to which extent it is 
compatible to recent versions. The Draft is rather old. Maybe Loring 
can tell us about the state of Yggdrasil.

I'd also appreciate seeing language independent action code embedded 
directly into ANTLR3 (e.g. dictionaries). I assume this would also 
make debugging action code in grammars with ANTLRWorks much easier.

hth,
Arnulf

At 16:35 27.11.2007, you wrote:
>Hi,
>
>With StringTemplate we can achieve low coupling with the target
>language. But what about Action code?
>How we should achieve low coupling with the target language?
>
>Thanks in advance,
>Cristian.
>
>--
>GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch


From atif.azad at hotmail.com  Tue Nov 27 11:02:45 2007
From: atif.azad at hotmail.com (atif azad)
Date: Wed, 28 Nov 2007 00:02:45 +0500
Subject: [antlr-interest] Define a class in grammer
In-Reply-To: <BLU105-F405AD706B58D7825BFA515E5760@phx.gbl>
Message-ID: <BLU105-F260FE60C2D6C170FFDE98AE5760@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/84e1b5c8/attachment.html 

From lgcraymer at yahoo.com  Tue Nov 27 12:42:00 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 27 Nov 2007 12:42:00 -0800 (PST)
Subject: [antlr-interest] StringTemplate is Ok,
	but what about  "Action code"?
Message-ID: <79664.87945.qm@web55914.mail.re3.yahoo.com>

Arnulf--

The current version of Yggdrasil incorporates the 3.0 release internals, and the implementation is fairly solid (attribute translation and tree construction features are well tested).  The attribute syntax has changed slightly from the draft manual I had posted at antlr.org but is unlikely to change further.  I will post an updated draft manual on antlr.org and hope to get the sourceforge site up in February (I am in the process of moving from one coast to the other, so I do not have much free time before then).

Most of my recent efforts have been focused on the tree grammar generator, especially on the algorithm for modeling attribute assignments.  I had originally intended to do the "Yggdrasil in Yggdrasil" step first, but after halfway completing the ANTLR 2 to Yggdrasil translator I decided that it made more sense to finish the grammar generator first and use that to help finish the translator.  I have completed  but not yet tested the attribute modeling transformation passes.  [The algorithm proved more difficult than I had anticipated.]  Once I have the modeling passes tested, it should not take long to do the "^ in loop" transformation passes and have a working tree grammar generator.

--Loring


----- Original Message ----
> From: Arnulf Heller <aheller at gmx.at>
> To: antlr-interest at antlr.org
> Sent: Tuesday, November 27, 2007 11:00:44 AM
> Subject: Re: [antlr-interest] StringTemplate is Ok, but what about  "Action code"?
> 
> hi,
> 
> Loring Craymer contributed "Yggdrasil" for this task:
> http://www.antlr.org/article/1153859608705/yggdrasil.pdf
> http://www.antlr.org/share/list
> 
> It seems to be based on ANTLR3 but I don't know to which extent it is 
> compatible to recent versions. The Draft is rather old. Maybe Loring 
> can tell us about the state of Yggdrasil.
> 
> I'd also appreciate seeing language independent action code embedded 
> directly into ANTLR3 (e.g. dictionaries). I assume this would also 
> make debugging action code in grammars with ANTLRWorks much easier.
> 
> hth,
> Arnulf
> 
> At 16:35 27.11.2007, you wrote:
> >Hi,
> >
> >With StringTemplate we can achieve low coupling with the target
> >language. But what about Action code?
> >How we should achieve low coupling with the target language?
> >
> >Thanks in advance,
> >Cristian.
> >
> >--
> >GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch
> 
> 




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs

From r.mark.volkmann at gmail.com  Tue Nov 27 13:34:40 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Tue, 27 Nov 2007 15:34:40 -0600
Subject: [antlr-interest] skipping evaluation of some AST nodes
Message-ID: <f0fcc6820711271334j23569a9ey96aa214b6dab855c@mail.gmail.com>

This is related to an earlier question I asked, but stated in a different way.
Suppose I have part of an AST that looks like this.

^(a b c) { some-action }

So b and c are child nodes of a.
If I match on the expression above then the rules for a, b, and c will
all be processed and their actions will be executed.
What I'd like to do is have "some-action" above be in control of what happens.
It would examine the results of the rule b action and then possibly
decide to not process the rule for c which would avoid executing its
action.
I know I could write the action for rule c to just store information
about what might be executed later, but I'm wondering if there is a
way to avoid that kind of bookkeeping and just specify in the action
for rule c what I want done if "some-action" decides it should be
done.

Is there a way to do this?

-- 
R. Mark Volkmann
Object Computing, Inc.

From ohumbel at gmail.com  Tue Nov 27 15:11:37 2007
From: ohumbel at gmail.com (Oti)
Date: Wed, 28 Nov 2007 00:11:37 +0100
Subject: [antlr-interest] How can I abort parsing when the parser
	recognizes an input error?
In-Reply-To: <20071121083810.101600@gmx.net>
References: <20071121083810.101600@gmx.net>
Message-ID: <ba90a0a90711271511x47df6704oce70bf62359d4f40@mail.gmail.com>

See chapter 10.4 of the book.

best wishes,
Oti.

On Nov 21, 2007 9:38 AM,  <OJAY78 at gmx.de> wrote:
> Hi,
>
> I am trying to optimize the error reporting of my parser. The first thing which I want to change is that the parser should abort on every syntax error. Actually it recovers the wrong token and try to parse the rest, how can I change this?
>
> Thanks for your help
> --
> Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
>

From surifilms at gmail.com  Tue Nov 27 15:41:14 2007
From: surifilms at gmail.com (Surinder Jain)
Date: Wed, 28 Nov 2007 09:41:14 +1000
Subject: [antlr-interest] AST tree output from Tree Parser
Message-ID: <9df049670711271541j6700bb49s804754c9e007ac3@mail.gmail.com>

I remember (vaiguly since it was many years ago) that ANTLR2 tree walker (or
its equivalent) could read a tree, transform it (as per tree grammar rewrite
rules) and produce a new different output tree.  This allowed multiple
passes making translation job into many simple steps rather than one complex
one.

It appears that this ability has been taken away in ANTLR3.

Is my understanding correct or am I missing something that is not in the
defintive book.  If I am correct then is there any plan to add tree
transformation feature in near future?

Thanks.

Suri

PS:  (ANTLR 3 produces much simpler and mroe useful AST, I am glad I am
using the new version).

If I try to use output=AST on a tree grammar, it produces the tree walker
java code but it does not compile with errors like

E:\surinder\ZEN07\java>javac TestTree.java
TestTree.java:86: cannot find symbol
symbol  : variable stop
location: class TestTree.start_return
                adaptor.setTokenBoundaries(retval.tree, retval.start,
retval.sto
p);

^
TestTree.java:191: cannot find symbol
symbol  : method create(org.antlr.runtime.tree.CommonTree)
location: interface org.antlr.runtime.tree.TreeAdaptor
                    string_literal2_tree =
(CommonTree)adaptor.create(string_lit
eral2);
                                                              ^
TestTree.java:218: cannot find symbol
symbol  : method create(org.antlr.runtime.tree.CommonTree)
location: interface org.antlr.runtime.tree.TreeAdaptor
                    string_literal5_tree =
(CommonTree)adaptor.create(string_lit
eral5);
                                                              ^
TestTree.java:245: cannot find symbol
symbol  : method create(org.antlr.runtime.tree.CommonTree)
location: interface org.antlr.runtime.tree.TreeAdaptor
                    char_literal8_tree =
(CommonTree)adaptor.create(char_literal
8);
                                                            ^
TestTree.java:272: cannot find symbol
symbol  : method create(org.antlr.runtime.tree.CommonTree)
location: interface org.antlr.runtime.tree.TreeAdaptor
                    char_literal11_tree =
(CommonTree)adaptor.create(char_litera
l11);
                                                             ^
TestTree.java:299: cannot find symbol
symbol  : method create(org.antlr.runtime.tree.CommonTree)
location: interface org.antlr.runtime.tree.TreeAdaptor
                    ID14_tree = (CommonTree)adaptor.create(ID14);
                                                   ^
TestTree.java:312: cannot find symbol
symbol  : method create(org.antlr.runtime.tree.CommonTree)
location: interface org.antlr.runtime.tree.TreeAdaptor
                    INT15_tree = (CommonTree)adaptor.create(INT15);
                                                    ^
TestTree.java:321: cannot find symbol
symbol  : variable stop
location: class TestTree.expr_return
                adaptor.setTokenBoundaries(retval.tree, retval.start,
retval.sto
p);


My TestTree,g is :


tree grammar TestTree;

options {tokenVocab=Java; ASTLabelType=CommonTree;output=AST;}

start:expr;

expr: ^('==' expr expr)

| ^('!=' expr expr)

| ^('+' expr expr)

| ^('*' expr expr)

| ID

| INT

;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/031b6432/attachment.html 

From brian at todoroff.com  Tue Nov 27 17:33:20 2007
From: brian at todoroff.com (Brian Todoroff)
Date: Tue, 27 Nov 2007 17:33:20 -0800
Subject: [antlr-interest] Update C# VS2005 integration instructions
Message-ID: <2d360a1c0711271733p215f367ckbb1f614827ccd6b@mail.gmail.com>

For those of you working with ANTLR and C# in Visual Studio, I've
updated the integration instructions on the wiki to correctly setup
the output .cs files as dependencies of your .g files.  Also made the
minor edit to use the vs2005 message format included in v3.

http://www.antlr.org/wiki/display/ANTLR3/Integration+with+development+environments

Tested with the latest .jar and VS2005.  Let me know if you experience
any problems.

Brian

From brian at todoroff.com  Tue Nov 27 17:52:11 2007
From: brian at todoroff.com (Brian Todoroff)
Date: Tue, 27 Nov 2007 17:52:11 -0800
Subject: [antlr-interest] Example C style interpreter?
In-Reply-To: <4745AF78.7010006@gmx.de>
References: <mailman.8988.1195685328.2534.antlr-interest@antlr.org>
	<2d360a1c0711211606k2abc8345k5535f5ddfc10f682@mail.gmail.com>
	<4745AF78.7010006@gmx.de>
Message-ID: <2d360a1c0711271752v49ec98aak99811bb5a84f7344@mail.gmail.com>

Thanks.  That's more along the lines of what I was looking for.  It
appears that he basically takes the AST from ANTLR and writes his own
tree walker to evaluate the tree instead of using ANTLR to create the
execution walker.  That might be the better decision as it saves
keeping another copy of the grammar in sync and the tree parser has
already ensured a valid input stream, but I'll have to think on
that...

Thanks,
Brian


On Nov 22, 2007 8:34 AM, Johannes Luber <jaluber at gmx.de> wrote:
> Brian Todoroff wrote:
>  > Interesting example of a compiler to java (I like the idea of the
> > pipeline operator), but I'm really looking for an interpreter.
> > Something that takes the input code, creates the AST and actually runs
> > the code with function calls, loops, etc.
> > Doesn't need to be a fancy language and I don't care what language the
> > final interpreter code is in (C, C++, Java, C#, etc.).  I'm just
> > looking to get a feel for the design patterns around ANTLR based
> > interpreters for doing things like building up the function lookup
> > table and moving that between the parse and execute phases, handling
> > flow control constructs such as for, do, & while loops, etc.
> >
> > Thanks,
> > Brian
> >
>
> I totally forgot about this:
> http://www.codeproject.com/csharp/sota_expression_evaluator.asp
>
> Johannes
>

From antlr at mirality.co.nz  Tue Nov 27 22:51:07 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 28 Nov 2007 19:51:07 +1300
Subject: [antlr-interest] AST tree output from Tree Parser
In-Reply-To: <9df049670711271541j6700bb49s804754c9e007ac3@mail.gmail.com
 >
References: <9df049670711271541j6700bb49s804754c9e007ac3@mail.gmail.com>
Message-ID: <20071128065125.D4B6C11EBCF@www.antlr.org>

At 12:41 28/11/2007, Surinder Jain wrote:
>I remember (vaiguly since it was many years ago) that ANTLR2 tree 
>walker (or its equivalent) could read a tree, transform it (as 
>per tree grammar rewrite rules) and produce a new different 
>output tree.  This allowed multiple passes making translation job 
>into many simple steps rather than one complex one.
>
>It appears that this ability has been taken away in ANTLR3.
>
>Is my understanding correct or am I missing something that is not 
>in the defintive book.  If I am correct then is there any plan to 
>add tree transformation feature in near future?

AST output for tree walkers was intentionally left out of 3.0 (to 
make things simpler), but AFAIK it's planned to be added in a 
future release.  (I think it was going to be in 3.1, but I'm not 
sure if that's still true or not.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/1d2583b7/attachment.html 

From wiggjd at lsbu.ac.uk  Tue Nov 27 23:30:03 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Wed, 28 Nov 2007 07:30:03 -0000
Subject: [antlr-interest] Control of tab settings in ANTLR 2.7
Message-ID: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F2@CSD-EXBE-VS2.lsbu.ac.uk>

Hello,
 
I am disappointed in not receiving any response to my query (Vol.36,
Issue 41, No. 9) about the use and control of tab settings in ANTLR
(2.7) which I repeat below.
 
Is this because there is a perfectly good description somewhere? If
so, I have not been able to find it by searching the ANTLR2 website
and I would be grateful if someone could tell me where it is.
 
Thank you.
 
Question 1.

I want to use a tabsize of 4 characters instead of 8 as assumed in the
constructors in CharScanner.cpp which I have changed to 4.  Is there
any other way of altering this value without altering a library
function?

Question 2.

In order to adjust column numbers correctly I have inserted an action
after detecting a tab character in the lexer of "tab()" as required
which should adjust the column number appropriately.

When there is a tab at the beginning of a line, but not elsewhere, the
column number is incorrect (too many by the tabsize) and the reason
seems to be that when the tab is at the beginning of a line the tab
function is entered twice so that the column number is advanced to 9
instead of only 5 (in my case).

I cannot see any reason for this (there appears to be only one tab at
the beginning of the line) but I can cure the problem in tab() by
first
checking if the column number is 1 then setting the new column to 2 so
that on the second entry of tab() the column number is only advanced
by tabsize once (to 5 in my case) .

Is the function working correctly and, if so, what am I doing wrong?

Thanks,

David.





--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/45b2632f/attachment-0001.html 

From harald_m_mueller at gmx.de  Tue Nov 27 23:45:57 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 28 Nov 2007 08:45:57 +0100
Subject: [antlr-interest] skipping evaluation of some AST nodes
In-Reply-To: <f0fcc6820711271334j23569a9ey96aa214b6dab855c@mail.gmail.com>
References: <f0fcc6820711271334j23569a9ey96aa214b6dab855c@mail.gmail.com>
Message-ID: <20071128074557.54740@gmx.net>

Hi -
my gut feeling is that this should be done with a manually programmed visitor, NOT with a tree parser. Tree parsers are *parsers*, i.e., they traverse *everything*. If actions should pick only parts of a structure, they should be programmed with a visitor which does just that. To that end, I would generate separate types for each node in an AST so that the standard visitor pattern can be applied; but a big "switch on AST head token type" top-level fork calling many specialized visiting methods might also be a useful design.
Regards
Harald

-------- Original-Nachricht --------
> Datum: Tue, 27 Nov 2007 15:34:40 -0600
> Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] skipping evaluation of some AST nodes

> This is related to an earlier question I asked, but stated in a different
> way.
> Suppose I have part of an AST that looks like this.
> 
> ^(a b c) { some-action }
> 
> So b and c are child nodes of a.
> If I match on the expression above then the rules for a, b, and c will
> all be processed and their actions will be executed.
> What I'd like to do is have "some-action" above be in control of what
> happens.
> It would examine the results of the rule b action and then possibly
> decide to not process the rule for c which would avoid executing its
> action.
> I know I could write the action for rule c to just store information
> about what might be executed later, but I'm wondering if there is a
> way to avoid that kind of bookkeeping and just specify in the action
> for rule c what I want done if "some-action" decides it should be
> done.
> 
> Is there a way to do this?
> 
> -- 
> R. Mark Volkmann
> Object Computing, Inc.

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From rdclark at gmail.com  Wed Nov 28 00:08:35 2007
From: rdclark at gmail.com (Richard Clark)
Date: Wed, 28 Nov 2007 00:08:35 -0800
Subject: [antlr-interest] Looking for contract developers w/ ANTLR 3
	experience
Message-ID: <d3992d900711280008r2fb0c261k4b264c6ab75cc2b0@mail.gmail.com>

Hi there,
If you've been on the list for a while (or read the Wiki), you know me --
I've been working with ANTLR for quite a while and know it pretty well. When
I can, I answer questions here and write little tutorials for the wiki.
 I've been quiet of late with a new job that has me swamped and my team may
be looking for one or more contract developers to take over part of the
work.

One of the jobs is we're using ANTLR and StringTemplate to parse XHTML and
emit properly formed Word 2007 documents inside a Java web application. The
whole thing is tiny -- about 250 lines in ANTLR, plus a little glue code and
the output templates (around 150 lines) -- and written in about 2 weeks.

We've made a bunch of simplifying decisions (we control the incoming XHTML
too), so it's basically an internal tool for a specific client's needs.
There's a chance this internal tool may get expanded into a full commercial
product, but my attention is required elsewhere, so I'm starting to fish
around for help. I'd like to recommend one or two contractors to the team.

If you're interested, or curious, please drop me a line at
rclark at intrepidls.com (not here on the list or gmail, as I'm not reading it
very often right now.) I don't have work to give out immediately, but want
to have some options on hand when my manager needs me to go back to my
primary job as an instructional systems architect.

Thanks,

 ...Richard

P.S. If you're wise in the ways of ANTLR 2.x, I also have some legacy code
that needs maintaining and upgrading.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/ec1247c0/attachment.html 

From antlr at shmuelhome.mine.nu  Wed Nov 28 00:55:27 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 28 Nov 2007 10:55:27 +0200
Subject: [antlr-interest] Control of tab settings in ANTLR 2.7
In-Reply-To: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F2@CSD-EXBE-VS2.lsbu.ac.uk>
References: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F2@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <474D2CFF.3080809@shmuelhome.mine.nu>

In java, the same class (CharScanner), has a method setTabSize(). Lexer 
extends CharScanner so the method is available to the lexer. Sorry, I 
don't use the c++ target so I can't help you any further.

Wigg, J D wrote:
> Hello,
>  
> I am disappointed in not receiving any response to my query (Vol.36, 
> Issue 41, No. 9) about the use and control of tab settings in ANTLR 
> (2.7) which I repeat below.
>  
> Is this because there is a perfectly good description somewhere? If 
> so, I have not been able to find it by searching the ANTLR2 website 
> and I would be grateful if someone could tell me where it is.
>  
> Thank you.
>  
> Question 1.
>
> I want to use a tabsize of 4 characters instead of 8 as assumed in the
> constructors in CharScanner.cpp which I have changed to 4.  Is there
> any other way of altering this value without altering a library
> function?
>
> Question 2.
>
> In order to adjust column numbers correctly I have inserted an action
> after detecting a tab character in the lexer of "tab()" as required
> which should adjust the column number appropriately.
>
> When there is a tab at the beginning of a line, but not elsewhere, the
> column number is incorrect (too many by the tabsize) and the reason
> seems to be that when the tab is at the beginning of a line the tab
> function is entered twice so that the column number is advanced to 9
> instead of only 5 (in my case).
>
> I cannot see any reason for this (there appears to be only one tab at
> the beginning of the line) but I can cure the problem in tab() by first
> checking if the column number is 1 then setting the new column to 2 so
> that on the second entry of tab() the column number is only advanced
> by tabsize once (to 5 in my case) .
>
> Is the function working correctly and, if so, what am I doing wrong?
>
> Thanks,
>
> David.
>
>
>
>
> --
> Copyright in this email and in any attachments belongs to London South 
> Bank University. This email, and its attachments if any, may be 
> confidential or legally privileged and is intended to be seen only by 
> the person to whom it is addressed. If you are not the intended 
> recipient, please note the following: (1) You should take immediate 
> action to notify the sender and delete the original email and all 
> copies from your computer systems; (2) You should not read copy or use 
> the contents of the email nor disclose it or its existence to anyone else.
>
> The views expressed herein are those of the author(s) and should not 
> be taken as those of London South Bank University, unless this is 
> specifically stated.
>
> London South Bank University is a company limited by guarantee 
> registered in England and Wales. The following details apply to London 
> South Bank University: Company number - 00986761; Registered office 
> and trading address - 103 Borough Road London SE1 0AA; VAT number - 
> 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk



From dt05ca4 at student.lth.se  Wed Nov 28 01:29:42 2007
From: dt05ca4 at student.lth.se (Christian Andersson)
Date: Wed, 28 Nov 2007 10:29:42 +0100 (CET)
Subject: [antlr-interest] Printing rule token range
Message-ID: <59983.194.237.142.7.1196242182.squirrel@webmail.student.lth.se>


Hi all!

I have a problem when printing the token range of the following constructs:

enum {
    a_var,
    b_var = 10
}a,b;

My parser will generate 2 copies of the "enum" one for 'a'
respective 'b'.

Later in my tree grammar I want to print the corresponding tokens whenever
the constant_expression rule is invoked.(I will get 10 in the example
above).

It works fine printing the 'a', but I only get -1 values
for the copy, and the expression end upp being null.

I use the following code to print the token interval for the expression rule:

int start = input.getTreeAdaptor().getTokenStartIndex($start);
int stop = input.getTreeAdaptor().getTokenStopIndex($start);
String text = input.getTokenStream().toString(start, stop);


So is there a way to solve this issue, it seems that there are some token
information missing when making copies like that?

I appreciate all help
BR Christian



From stevagewp at gmail.com  Wed Nov 28 01:48:45 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 28 Nov 2007 20:48:45 +1100
Subject: [antlr-interest] Bad code generated for simple AST rule
Message-ID: <b8ceeef70711280148v66099e49u566a93582f82a0b@mail.gmail.com>

This is probably a known bug, but is there a good workaround?

paragraph_separator: N+ -> BR+;

generates code that doesn't compile:

[20:45:44] \tmp\antlrworks\headerline6Parser.java:968: illegal start
of expression
[20:45:44]                 if ( !() ) {
[20:45:44]                        ^
[20:45:44] \tmp\antlrworks\headerline6Parser.java:976: ')' expected

Here's my code, if someone can see a workaround:

article: (N*) (line N paragraph_separator)*
-> ^(ARTICLE (line paragraph_separator)* );

paragraph_separator: N+ -> BR+;

N is a newline. BR is an abstract token. For every second and
subsequent newline between two lines of text, I want to generate one
special token.

Thanks,
Steve

From antlr at shmuelhome.mine.nu  Wed Nov 28 01:58:29 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 28 Nov 2007 11:58:29 +0200
Subject: [antlr-interest] Bad code generated for simple AST rule
In-Reply-To: <b8ceeef70711280148v66099e49u566a93582f82a0b@mail.gmail.com>
References: <b8ceeef70711280148v66099e49u566a93582f82a0b@mail.gmail.com>
Message-ID: <474D3BC5.9000102@shmuelhome.mine.nu>

Steve Bennett wrote:
>  but is there a good workaround?
>
> paragraph_separator: N+ -> BR+;
>
> .....
> Thanks,
> Steve
>   

paragraph_separators: paragraph_separator+;

paragraph_separator: N -> BR;



From william.cai at yahoo.com  Wed Nov 28 02:00:20 2007
From: william.cai at yahoo.com (William Cai)
Date: Wed, 28 Nov 2007 02:00:20 -0800 (PST)
Subject: [antlr-interest] Why the generated parser code tolerates illegal
	expression?
Message-ID: <998750.445.qm@web34801.mail.mud.yahoo.com>






 
 

<!--
 _filtered {font-family:??;panose-1:2 1 6 0 3 1 1 1 1 1;}
 _filtered {panose-1:2 1 6 0 3 1 1 1 1 1;}
/* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;margin-bottom:.0001pt;text-align:justify;font-size:12.0pt;font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;text-decoration:underline;}
span.EmailStyle17
	{font-family:"Times New Roman";color:windowtext;font-weight:normal;font-style:normal;text-decoration:none none;}
 _filtered {margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
	{}
-->






Hello
list,

Here is a problem I encountered with ANTLR v2. 
 

  
 

I
defined a general logic operation grammar and compiled it to Java code as
below. It works well except one problem ? the generated code tolerates illegal
expression. I can pass the expression ?NOTExpression1 ANND NOTExpression2? in without any
problems. I looked into the generated parser code and found the illegal word ?ANND?
was just ignored since it didn't match the key word ?and?. (Please see the
code marked in red below.) Anybody in the list got the problem before? Please
share your experience. 
 

  
 

Any
comments are greatly appreciated.



Thanks,

William
 

  
 

----------------
Grammar -------------------
 

// Constraint Rules
 

constraint:
 

    orexpression
 

    ;
 

orexpression
 

    :   andexpression ("or"^
andexpression)*
 

    ;
 

andexpression
 

    : notexpression ("and"^
notexpression)*
 

    ;
 

notexpression
 

    : ("not"^)? equalityExpression
 

    ;
 

equalityExpression
 

    :   relationalExpression ((NOTEQ^ |
EQUAL^) relationalExpression)*
 

    ;

---------------- End of Grammar -------------------
 

  
 

  
 

----------------------------------
Generated Code --------------------------------------

    public final void andexpression() throws RecognitionException,
TokenStreamException {
 

       
 

       returnAST = null;
 

       ASTPair currentAST = new ASTPair();
 

       AST andexpression_AST = null;
 

       
 

       try {      // for error handling
 

           notexpression();
 

           astFactory.addASTChild(currentAST,
returnAST);
 

           {
 

           _loop34:
 

           do {
 

              if ((LA(1)==LITERAL_and)) {
 

                  AST
tmp61_AST = null;
 

                  tmp61_AST
= astFactory.create(LT(1));
 

                  astFactory.makeASTRoot(currentAST,
tmp61_AST);
 

                  match(LITERAL_and);
 

                  notexpression();
 

                  astFactory.addASTChild(currentAST,
returnAST);
 

              }
 

              else {
 

                  break _loop34;
 

              }
 

              
 

           } while (true);
 

           }
 

           andexpression_AST =
(AST)currentAST.root;
 

       }
 

       catch (RecognitionException ex) {
 

           if (inputState.guessing==0) {
 

              reportError(ex);
 

              consume();
 

              consumeUntil(_tokenSet_15);
 

           } else {
 

             throw ex;
 

           }
 

       }
 

       returnAST = andexpression_AST;
 

    }

---------------------------------- End of Generated Code --------------------------------------
 






 






-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/a2271d93/attachment-0001.html 

From harald_m_mueller at gmx.de  Wed Nov 28 02:12:59 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 28 Nov 2007 11:12:59 +0100
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal	expression?
In-Reply-To: <998750.445.qm@web34801.mail.mud.yahoo.com>
References: <998750.445.qm@web34801.mail.mud.yahoo.com>
Message-ID: <20071128101259.276110@gmx.net>

I once found that explicit checking fro EOF helps to force the parser to read thru all its input. So make your outermost rule (constraint?):

 constraint: orexpression EOF ;

- then it should work.
I think that right now, only the part before the ANND is recognized, then parsing ends.

Regards
Harald M.


-------- Original-Nachricht --------
> Datum: Wed, 28 Nov 2007 02:00:20 -0800 (PST)
> Von: William Cai <william.cai at yahoo.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Why the generated parser code tolerates illegal	expression?

> 
> 
> 
> 
> 
>  
>  
> 
> <!--
>  _filtered {font-family:??;panose-1:2 1 6 0 3 1 1 1 1 1;}
>  _filtered {panose-1:2 1 6 0 3 1 1 1 1 1;}
> /* Style Definitions */
>  p.MsoNormal, li.MsoNormal, div.MsoNormal
> 	{margin:0cm;margin-bottom:.0001pt;text-align:justify;font-size:12.0pt;font-family:"Times
> New Roman";}
> a:link, span.MsoHyperlink
> 	{color:blue;text-decoration:underline;}
> a:visited, span.MsoHyperlinkFollowed
> 	{color:purple;text-decoration:underline;}
> span.EmailStyle17
> 	{font-family:"Times New
> Roman";color:windowtext;font-weight:normal;font-style:normal;text-decoration:none none;}
>  _filtered {margin:72.0pt 90.0pt 72.0pt 90.0pt;}
> div.Section1
> 	{}
> -->
> 
> 
> 
> 
> 
> 
> Hello
> list,
> 
> Here is a problem I encountered with ANTLR v2. 
>  
> 
>   
>  
> 
> I
> defined a general logic operation grammar and compiled it to Java code as
> below. It works well except one problem ? the generated code tolerates
> illegal
> expression. I can pass the expression ?NOTExpression1 ANND
> NOTExpression2? in without any
> problems. I looked into the generated parser code and found the illegal
> word ?ANND?
> was just ignored since it didn't match the key word ?and?. (Please see
> the
> code marked in red below.) Anybody in the list got the problem before?
> Please
> share your experience. 
>  
> 
>   
>  
> 
> Any
> comments are greatly appreciated.
> 
> 
> 
> Thanks,
> 
> William
>  
> 
>   
>  
> 
> ----------------
> Grammar -------------------
>  
> 
> // Constraint Rules
>  
> 
> constraint:
>  
> 
>     orexpression
>  
> 
>     ;
>  
> 
> orexpression
>  
> 
>     :   andexpression ("or"^
> andexpression)*
>  
> 
>     ;
>  
> 
> andexpression
>  
> 
>     : notexpression ("and"^
> notexpression)*
>  
> 
>     ;
>  
> 
> notexpression
>  
> 
>     : ("not"^)? equalityExpression
>  
> 
>     ;
>  
> 
> equalityExpression
>  
> 
>     :   relationalExpression ((NOTEQ^ |
> EQUAL^) relationalExpression)*
>  
> 
>     ;
> 
> ---------------- End of Grammar -------------------
>  
> 
>   
>  
> 
>   
>  
> 
> ----------------------------------
> Generated Code --------------------------------------
> 
>     public final void andexpression() throws RecognitionException,
> TokenStreamException {
>  
> 
>        
>  
> 
>        returnAST = null;
>  
> 
>        ASTPair currentAST = new ASTPair();
>  
> 
>        AST andexpression_AST = null;
>  
> 
>        
>  
> 
>        try {      // for error handling
>  
> 
>            notexpression();
>  
> 
>            astFactory.addASTChild(currentAST,
> returnAST);
>  
> 
>            {
>  
> 
>            _loop34:
>  
> 
>            do {
>  
> 
>               if ((LA(1)==LITERAL_and)) {
>  
> 
>                   AST
> tmp61_AST = null;
>  
> 
>                   tmp61_AST
> = astFactory.create(LT(1));
>  
> 
>                   astFactory.makeASTRoot(currentAST,
> tmp61_AST);
>  
> 
>                   match(LITERAL_and);
>  
> 
>                   notexpression();
>  
> 
>                   astFactory.addASTChild(currentAST,
> returnAST);
>  
> 
>               }
>  
> 
>               else {
>  
> 
>                   break _loop34;
>  
> 
>               }
>  
> 
>               
>  
> 
>            } while (true);
>  
> 
>            }
>  
> 
>            andexpression_AST =
> (AST)currentAST.root;
>  
> 
>        }
>  
> 
>        catch (RecognitionException ex) {
>  
> 
>            if (inputState.guessing==0) {
>  
> 
>               reportError(ex);
>  
> 
>               consume();
>  
> 
>               consumeUntil(_tokenSet_15);
>  
> 
>            } else {
>  
> 
>              throw ex;
>  
> 
>            }
>  
> 
>        }
>  
> 
>        returnAST = andexpression_AST;
>  
> 
>     }
> 
> ---------------------------------- End of Generated Code
> --------------------------------------
>  
> 
> 
> 
> 
> 
> 
>  
> 
> 
> 
> 
> 
> 

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From stevagewp at gmail.com  Wed Nov 28 02:22:19 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 28 Nov 2007 21:22:19 +1100
Subject: [antlr-interest] Bad code generated for simple AST rule
In-Reply-To: <474D3BC5.9000102@shmuelhome.mine.nu>
References: <b8ceeef70711280148v66099e49u566a93582f82a0b@mail.gmail.com>
	<474D3BC5.9000102@shmuelhome.mine.nu>
Message-ID: <b8ceeef70711280222u606bc761ifadc733d0630fa20@mail.gmail.com>

On 11/28/07, shmuel siegel <antlr at shmuelhome.mine.nu> wrote:
> paragraph_separators: paragraph_separator+;
>
> paragraph_separator: N -> BR;

Thanks, that works.

(Well, it would if my code was correct. They should be * not +.)

Steve

From jaluber at gmx.de  Wed Nov 28 03:09:32 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 28 Nov 2007 12:09:32 +0100
Subject: [antlr-interest] AST tree output from Tree Parser
In-Reply-To: <20071128065125.D4B6C11EBCF@www.antlr.org>
References: <9df049670711271541j6700bb49s804754c9e007ac3@mail.gmail.com>
	<20071128065125.D4B6C11EBCF@www.antlr.org>
Message-ID: <474D4C6C.7080506@gmx.de>

Gavin Lambert wrote:
> At 12:41 28/11/2007, Surinder Jain wrote:
>> I remember (vaiguly since it was many years ago) that ANTLR2 tree
>> walker (or its equivalent) could read a tree, transform it (as per
>> tree grammar rewrite rules) and produce a new different output tree. 
>> This allowed multiple passes making translation job into many simple
>> steps rather than one complex one.
>>  
>> It appears that this ability has been taken away in ANTLR3.
>>  
>> Is my understanding correct or am I missing something that is not in
>> the defintive book.  If I am correct then is there any plan to add
>> tree transformation feature in near future?
> 
> AST output for tree walkers was intentionally left out of 3.0 (to make
> things simpler), but AFAIK it's planned to be added in a future
> release.  (I think it was going to be in 3.1, but I'm not sure if that's
> still true or not.)

The newest daily build should already have this capability. I haven't
found the documentation for it yet, but I haven't finished reading Ter's
Notes on the wiki nor searched the dev-mailing list.

Johannes

From stevagewp at gmail.com  Wed Nov 28 03:40:37 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 28 Nov 2007 22:40:37 +1100
Subject: [antlr-interest] Bad code generated for simple AST rule
In-Reply-To: <b8ceeef70711280222u606bc761ifadc733d0630fa20@mail.gmail.com>
References: <b8ceeef70711280148v66099e49u566a93582f82a0b@mail.gmail.com>
	<474D3BC5.9000102@shmuelhome.mine.nu>
	<b8ceeef70711280222u606bc761ifadc733d0630fa20@mail.gmail.com>
Message-ID: <b8ceeef70711280340n56a6b6efn89e69f460b2e2bef@mail.gmail.com>

A similar issue:

foo: -> BR;

This code generates code that gives an error for not throwing a
RecognitionException. This workaround seems to work:

foo: {if(false) { throw new RecognitionException(); } }-> BR;

I *think* it's meaningful to have a parser rule that takes no tokens
but generates AST nodes. For example, if a certain set of AST nodes
has to be generated according to some state, and that set has to be
called from various other rules? But maybe it would be better to do
this kind of thing in a later tree-walking step...

Steve

From stevagewp at gmail.com  Wed Nov 28 04:05:45 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Wed, 28 Nov 2007 23:05:45 +1100
Subject: [antlr-interest] Compiler-exploding grammar
Message-ID: <b8ceeef70711280405m447340e7nd82221736436ad36@mail.gmail.com>

I have a grammar, which when generated, causes the java compiler to
explode with an out of stack space message:

The system is out of resources.
Consult the following stack trace for details.
java.lang.StackOverflowError
at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
at com.sun.tools.javac.tree.Tree$Binary.accept(Tree.java:926)
at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:275)
at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
at com.sun.tools.javac.tree.Tree$Binary.accept(Tree.java:926)
at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:275)
at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
...
(hundreds of lines)

Is there a developer I should send this to? It's pretty big. I tried
trimming it down to the relevant bit, but strangely enough, that
compiled fine, and even stranger, ran as expected.

That is, the code that makes it explode is commented out in the
following snippet. But that snippet alone isn't enough to make the
compiler explode, I think.

close_bold_italics
@after {text_bold=false; text_italics = false;}
: ;
/*        {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
       |{text_bold==false && text_italics==true}? => -> I_OFF
       |{text_bold==true && text_italics==false}? => -> B_OFF
       |->;*/


Steve

From wiggjd at lsbu.ac.uk  Wed Nov 28 05:42:59 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Wed, 28 Nov 2007 13:42:59 -0000
Subject: [antlr-interest] Control of tab settings in ANTLR 2.7
References: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F2@CSD-EXBE-VS2.lsbu.ac.uk>
	<d3992d900711280023t6f5e37actb337aea647d8e776@mail.gmail.com>
Message-ID: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F5@CSD-EXBE-VS2.lsbu.ac.uk>

Thanks Richard, I'll leave it as I've got it then.
 
Strange, I suppose nobody cares about the column number! Well they
can't can they. It doesn't work with any tabs as it stands. Perhaps
nobody uses tabs.
 
I wonder what the position is in ANTLR 3.0?
 
Anyway, thanks for taking the trouble to write,
 
David Wigg

________________________________

From: Richard Clark [mailto:rdclark at gmail.com]
Sent: Wed 28/11/2007 08:23
To: Wigg, J D
Subject: Re: [antlr-interest] Control of tab settings in ANTLR 2.7


Hello David, 

I suspect the lack of response is because most people are actively
using ANTLR 3 now. 

The short answer to Question 1 is: you have to alter the library
directly or create your own equivalent (possibly by subclassing the
library.) ANTLR 2's input mechanisms were black boxes for the most
part and not especially extensible. I had to write a couple of custom
variations for different projects. 

Re: question 2, if I recall correctly, the lexer used a "look ahead"
strategy which is probably why the lexer is evaluating the tab twice
-- once as a look-ahead, and then again in actually processing it. 

Off the top of my head, I'd consider a couple of options:
- Write my own input stream that expands the tabs into spaces, or
- Write an input stream that buffers each line, and if there's an
error have the error reporting scan the current line and update the
reported character offset based on how many tabs are to the left of
the error. 

I'm sorry I can't give you a more detailed or specific answer. Your
questions go into esoteric and undocumented parts of the system.

Regards,

...Richard
 



--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/7db74466/attachment.html 

From william.cai at yahoo.com  Wed Nov 28 05:52:29 2007
From: william.cai at yahoo.com (William Cai)
Date: Wed, 28 Nov 2007 05:52:29 -0800 (PST)
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal expression?
Message-ID: <769277.83175.qm@web34801.mail.mud.yahoo.com>

Thanks Harald. It works now. Should this be recorded in FAQ? 

p.s. you are correct. Only the part before the ANND is parsed right now.

Thanks,
William

----- Original Message ----
From: Harald Mueller <harald_m_mueller at gmx.de>
To: William Cai <william.cai at yahoo.com>; antlr-interest at antlr.org
Sent: Wednesday, November 28, 2007 6:12:59 PM
Subject: Re: [antlr-interest] Why the generated parser code tolerates illegal expression?


I once found that explicit checking fro EOF helps to force the parser
 to read thru all its input. So make your outermost rule (constraint?):

 constraint: orexpression EOF ;

- then it should work.
I think that right now, only the part before the ANND is recognized,
 then parsing ends.

Regards
Harald M.


-------- Original-Nachricht --------
> Datum: Wed, 28 Nov 2007 02:00:20 -0800 (PST)
> Von: William Cai <william.cai at yahoo.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Why the generated parser code tolerates
 illegal    expression?

> 
> 
> 
> 
> 
>  
>  
> 
> <!--
>  _filtered {font-family:??;panose-1:2 1 6 0 3 1 1 1 1 1;}
>  _filtered {panose-1:2 1 6 0 3 1 1 1 1 1;}
> /* Style Definitions */
>  p.MsoNormal, li.MsoNormal, div.MsoNormal
> 
    {margin:0cm;margin-bottom:.0001pt;text-align:justify;font-size:12.0pt;font-family:"Times
> New Roman";}
> a:link, span.MsoHyperlink
>     {color:blue;text-decoration:underline;}
> a:visited, span.MsoHyperlinkFollowed
>     {color:purple;text-decoration:underline;}
> span.EmailStyle17
>     {font-family:"Times New
>
 Roman";color:windowtext;font-weight:normal;font-style:normal;text-decoration:none none;}
>  _filtered {margin:72.0pt 90.0pt 72.0pt 90.0pt;}
> div.Section1
>     {}
> -->
> 
> 
> 
> 
> 
> 
> Hello
> list,
> 
> Here is a problem I encountered with ANTLR v2. 
>  
> 
>   
>  
> 
> I
> defined a general logic operation grammar and compiled it to Java
 code as
> below. It works well except one problem ? the generated code
 tolerates
> illegal
> expression. I can pass the expression ?NOTExpression1 ANND
> NOTExpression2? in without any
> problems. I looked into the generated parser code and found the
 illegal
> word ?ANND?
> was just ignored since it didn't match the key word ?and?.
 (Please see
> the
> code marked in red below.) Anybody in the list got the problem
 before?
> Please
> share your experience. 
>  
> 
>   
>  
> 
> Any
> comments are greatly appreciated.
> 
> 
> 
> Thanks,
> 
> William
>  
> 
>   
>  
> 
> ----------------
> Grammar -------------------
>  
> 
> // Constraint Rules
>  
> 
> constraint:
>  
> 
>     orexpression
>  
> 
>     ;
>  
> 
> orexpression
>  
> 
>     :   andexpression ("or"^
> andexpression)*
>  
> 
>     ;
>  
> 
> andexpression
>  
> 
>     : notexpression ("and"^
> notexpression)*
>  
> 
>     ;
>  
> 
> notexpression
>  
> 
>     : ("not"^)? equalityExpression
>  
> 
>     ;
>  
> 
> equalityExpression
>  
> 
>     :   relationalExpression ((NOTEQ^ |
> EQUAL^) relationalExpression)*
>  
> 
>     ;
> 
> ---------------- End of Grammar -------------------
>  
> 
>   
>  
> 
>   
>  
> 
> ----------------------------------
> Generated Code --------------------------------------
> 
>     public final void andexpression() throws RecognitionException,
> TokenStreamException {
>  
> 
>        
>  
> 
>        returnAST = null;
>  
> 
>        ASTPair currentAST = new ASTPair();
>  
> 
>        AST andexpression_AST = null;
>  
> 
>        
>  
> 
>        try {      // for error handling
>  
> 
>            notexpression();
>  
> 
>            astFactory.addASTChild(currentAST,
> returnAST);
>  
> 
>            {
>  
> 
>            _loop34:
>  
> 
>            do {
>  
> 
>               if ((LA(1)==LITERAL_and)) {
>  
> 
>                   AST
> tmp61_AST = null;
>  
> 
>                   tmp61_AST
> = astFactory.create(LT(1));
>  
> 
>                   astFactory.makeASTRoot(currentAST,
> tmp61_AST);
>  
> 
>                   match(LITERAL_and);
>  
> 
>                   notexpression();
>  
> 
>                   astFactory.addASTChild(currentAST,
> returnAST);
>  
> 
>               }
>  
> 
>               else {
>  
> 
>                   break _loop34;
>  
> 
>               }
>  
> 
>               
>  
> 
>            } while (true);
>  
> 
>            }
>  
> 
>            andexpression_AST =
> (AST)currentAST.root;
>  
> 
>        }
>  
> 
>        catch (RecognitionException ex) {
>  
> 
>            if (inputState.guessing==0) {
>  
> 
>               reportError(ex);
>  
> 
>               consume();
>  
> 
>               consumeUntil(_tokenSet_15);
>  
> 
>            } else {
>  
> 
>              throw ex;
>  
> 
>            }
>  
> 
>        }
>  
> 
>        returnAST = andexpression_AST;
>  
> 
>     }
> 
> ---------------------------------- End of Generated Code
> --------------------------------------
>  
> 
> 
> 
> 
> 
> 
>  
> 
> 
> 
> 
> 
> 

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/d4521e70/attachment-0001.html 

From mark.edgeworth at scarletcode.co.uk  Wed Nov 28 06:26:43 2007
From: mark.edgeworth at scarletcode.co.uk (Mark Edgeworth)
Date: Wed, 28 Nov 2007 14:26:43 -0000
Subject: [antlr-interest] Compiler-exploding grammar
In-Reply-To: <mailman.10715.1196257950.2534.antlr-interest@antlr.org>
Message-ID: <008d01c831ca$b9fd28f0$0300a8c0@chesterford>

Hi Steve,

The last alternative in your rule is empty, and so need not contain a '->'.
This looks like a corner case that might just create an invalid AST tree and
an unconstrained recursion.  Remove the '->' :-)

close_bold_italics
@after {text_bold=false; text_italics = false;}
: ;
/*        {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
       |{text_bold==false && text_italics==true}? => -> I_OFF
       |{text_bold==true && text_italics==false}? => -> B_OFF
       |->;*/

Hope this helps,

Mark Edgeworth

-----Original Message-----
Message: 5
Date: Wed, 28 Nov 2007 23:05:45 +1100
From: "Steve Bennett" <stevagewp at gmail.com>
Subject: [antlr-interest] Compiler-exploding grammar

I have a grammar, which when generated, causes the java compiler to explode
with an out of stack space message:

The system is out of resources.
Consult the following stack trace for details. java.lang.StackOverflowError
at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
at com.sun.tools.javac.tree.Tree$Binary.accept(Tree.java:926)
at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:275)
at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
at com.sun.tools.javac.tree.Tree$Binary.accept(Tree.java:926)
at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:275)
at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
...
(hundreds of lines)

Is there a developer I should send this to? It's pretty big. I tried
trimming it down to the relevant bit, but strangely enough, that compiled
fine, and even stranger, ran as expected.

That is, the code that makes it explode is commented out in the following
snippet. But that snippet alone isn't enough to make the compiler explode, I
think.

close_bold_italics
@after {text_bold=false; text_italics = false;}
: ;
/*        {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
       |{text_bold==false && text_italics==true}? => -> I_OFF
       |{text_bold==true && text_italics==false}? => -> B_OFF
       |->;*/


Steve


From harald_m_mueller at gmx.de  Wed Nov 28 06:30:16 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 28 Nov 2007 15:30:16 +0100
Subject: [antlr-interest] Compiler-exploding grammar
In-Reply-To: <008d01c831ca$b9fd28f0$0300a8c0@chesterford>
References: <008d01c831ca$b9fd28f0$0300a8c0@chesterford>
Message-ID: <20071128143016.117360@gmx.net>

HI,

But isn't the problem with the com.sun(!).tools.javac???
It seems like a genuine compiler bug ... maybe if you send the code created around the empty -> rule to Sun (and also to the Antlr people - they might know how to avoid it ...).

Regards
Harald

-------- Original-Nachricht --------
> Datum: Wed, 28 Nov 2007 14:26:43 -0000
> Von: "Mark Edgeworth" <mark.edgeworth at scarletcode.co.uk>
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] Compiler-exploding grammar

> Hi Steve,
> 
> The last alternative in your rule is empty, and so need not contain a
> '->'.
> This looks like a corner case that might just create an invalid AST tree
> and
> an unconstrained recursion.  Remove the '->' :-)
> 
> close_bold_italics
> @after {text_bold=false; text_italics = false;}
> : ;
> /*        {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
>        |{text_bold==false && text_italics==true}? => -> I_OFF
>        |{text_bold==true && text_italics==false}? => -> B_OFF
>        |->;*/
> 
> Hope this helps,
> 
> Mark Edgeworth
> 
> -----Original Message-----
> Message: 5
> Date: Wed, 28 Nov 2007 23:05:45 +1100
> From: "Steve Bennett" <stevagewp at gmail.com>
> Subject: [antlr-interest] Compiler-exploding grammar
> 
> I have a grammar, which when generated, causes the java compiler to
> explode
> with an out of stack space message:
> 
> The system is out of resources.
> Consult the following stack trace for details.
> java.lang.StackOverflowError
> at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
> at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
> at com.sun.tools.javac.tree.Tree$Binary.accept(Tree.java:926)
> at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:275)
> at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
> at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
> at com.sun.tools.javac.tree.Tree$Binary.accept(Tree.java:926)
> at com.sun.tools.javac.comp.Attr.attribTree(Attr.java:275)
> at com.sun.tools.javac.comp.Attr.attribExpr(Attr.java:297)
> at com.sun.tools.javac.comp.Attr.visitBinary(Attr.java:1518)
> ...
> (hundreds of lines)
> 
> Is there a developer I should send this to? It's pretty big. I tried
> trimming it down to the relevant bit, but strangely enough, that compiled
> fine, and even stranger, ran as expected.
> 
> That is, the code that makes it explode is commented out in the following
> snippet. But that snippet alone isn't enough to make the compiler explode,
> I
> think.
> 
> close_bold_italics
> @after {text_bold=false; text_italics = false;}
> : ;
> /*        {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
>        |{text_bold==false && text_italics==true}? => -> I_OFF
>        |{text_bold==true && text_italics==false}? => -> B_OFF
>        |->;*/
> 
> 
> Steve

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt?
Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From harald_m_mueller at gmx.de  Wed Nov 28 06:44:49 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 28 Nov 2007 15:44:49 +0100
Subject: [antlr-interest] skipping evaluation of some AST nodes
In-Reply-To: <20071128074557.54740@gmx.net>
References: <f0fcc6820711271334j23569a9ey96aa214b6dab855c@mail.gmail.com>
	<20071128074557.54740@gmx.net>
Message-ID: <20071128144449.54740@gmx.net>

Hi again -

my second gut feeling says that you can do the following:

rule
    { ... compResult; }
   : ^(a 
       b    { compResult = some-action; }
       c[compResult]
      ) 
   ;

- i.e. you must run through everything; but you can compute things along your way and then pass them into subsequent subtree traversals (or even out to someone else via a returns or an "out" object).

What you cannot do, is change the order: Left things are traversed before right things. So if you want to have a representation of perl's statements

    statement if condition;

or 

    statement unless condition;

you must make sure that the condition subtree is to the *left* of the statement subtree - but that's easy.

Regards
Harald M.



-------- Original-Nachricht --------
> Datum: Wed, 28 Nov 2007 08:45:57 +0100
> Von: "Harald Mueller" <harald_m_mueller at gmx.de>
> An: "Mark Volkmann" <r.mark.volkmann at gmail.com>, antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] skipping evaluation of some AST nodes

> Hi -
> my gut feeling is that this should be done with a manually programmed
> visitor, NOT with a tree parser. Tree parsers are *parsers*, i.e., they
> traverse *everything*. If actions should pick only parts of a structure, they
> should be programmed with a visitor which does just that. To that end, I would
> generate separate types for each node in an AST so that the standard
> visitor pattern can be applied; but a big "switch on AST head token type"
> top-level fork calling many specialized visiting methods might also be a useful
> design.
> Regards
> Harald
> 
> -------- Original-Nachricht --------
> > Datum: Tue, 27 Nov 2007 15:34:40 -0600
> > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > An: antlr-interest at antlr.org
> > Betreff: [antlr-interest] skipping evaluation of some AST nodes
> 
> > This is related to an earlier question I asked, but stated in a
> different
> > way.
> > Suppose I have part of an AST that looks like this.
> > 
> > ^(a b c) { some-action }
> > 
> > So b and c are child nodes of a.
> > If I match on the expression above then the rules for a, b, and c will
> > all be processed and their actions will be executed.
> > What I'd like to do is have "some-action" above be in control of what
> > happens.
> > It would examine the results of the rule b action and then possibly
> > decide to not process the rule for c which would avoid executing its
> > action.
> > I know I could write the action for rule c to just store information
> > about what might be executed later, but I'm wondering if there is a
> > way to avoid that kind of bookkeeping and just specify in the action
> > for rule c what I want done if "some-action" decides it should be
> > done.
> > 
> > Is there a way to do this?
> > 
> > -- 
> > R. Mark Volkmann
> > Object Computing, Inc.
> 
> -- 
> Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
> Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

-- 
Ist Ihr Browser Vista-kompatibel? Jetzt die neuesten 
Browser-Versionen downloaden: http://www.gmx.net/de/go/browser

From guntiso at latnet.lv  Wed Nov 28 06:46:53 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 28 Nov 2007 16:46:53 +0200
Subject: [antlr-interest] Control of tab settings in ANTLR 2.7
In-Reply-To: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F5@CSD-EXBE-VS2.lsbu.ac.uk>
References: <54FBE2327E8C4F4ABF9B6608D12CB9312EB6F2@CSD-EXBE-VS2.lsbu.ac.uk>
	<d3992d900711280023t6f5e37actb337aea647d8e776@mail.gmail.com>
	<54FBE2327E8C4F4ABF9B6608D12CB9312EB6F5@CSD-EXBE-VS2.lsbu.ac.uk>
Message-ID: <1196261213.474d7f5d8bec0@clients.latnet.lv>

> Strange, I suppose nobody cares about the column number! Well they
> can't can they. It doesn't work with any tabs as it stands. Perhaps
> nobody uses tabs.
>
> I wonder what the position is in ANTLR 3.0?

Tab size is still 'officially' 8 chars, and I'm glad Terrence knows that
(although his java editor for v3 doesn't, and produces jumbled code).

Of course, you can not use tabs in your code if you want it to look fine.
I'm replacing tabs with spaces in my editor for years...


From guntiso at latnet.lv  Wed Nov 28 06:59:23 2007
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 28 Nov 2007 16:59:23 +0200
Subject: [antlr-interest] Why the generated parser code
	tolerates	illegal expression?
In-Reply-To: <769277.83175.qm@web34801.mail.mud.yahoo.com>
References: <769277.83175.qm@web34801.mail.mud.yahoo.com>
Message-ID: <1196261963.474d824b8c57b@clients.latnet.lv>

> Thanks Harald. It works now. Should this be recorded in FAQ?

This gotcha got me too.
It would also be nice to display some warning/hint in antlrworks when
debugging/interpreting and starting with rule that does not end with EOF.

>...
> I once found that explicit checking fro EOF helps to force the parser
>  to read thru all its input. So make your outermost rule (constraint?):
>
>  constraint: orexpression EOF ;
>
> - then it should work.
> I think that right now, only the part before the ANND is recognized,
>  then parsing ends.
>...


From stevagewp at gmail.com  Wed Nov 28 07:13:38 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 29 Nov 2007 02:13:38 +1100
Subject: [antlr-interest] Compiler-exploding grammar
In-Reply-To: <b8ceeef70711280711g34c0007ci3ca1d142d15838e3@mail.gmail.com>
References: <mailman.10715.1196257950.2534.antlr-interest@antlr.org>
	<008d01c831ca$b9fd28f0$0300a8c0@chesterford>
	<b8ceeef70711280711g34c0007ci3ca1d142d15838e3@mail.gmail.com>
Message-ID: <b8ceeef70711280713k4b81a15ybd8eb908e182346@mail.gmail.com>

Oops, sorry about the massive message :( I didn't see that it 14000
characters wide :(

Anyway, looks like a bug in ANTLR - the java compiler is entitled to
fall over with junk like that.

Steve

From harald_m_mueller at gmx.de  Wed Nov 28 07:15:41 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Wed, 28 Nov 2007 16:15:41 +0100
Subject: [antlr-interest] StringTemplate is Ok,
 but what about "Action code"?
In-Reply-To: <96BC2DCF-CF6A-49B4-80F6-4AAD885359FE@gmail.com>
References: <96BC2DCF-CF6A-49B4-80F6-4AAD885359FE@gmail.com>
Message-ID: <20071128151541.54760@gmx.net>

Hi -

Why would you want to do this?? - whatever you do in actions, you need to express some sort of "algorithm." I do not see another possibility than to have SOME language that will express what you need. Java is perfect: It will decouple you (they say) from any plat form specifics, because you write it once, and it runs everywhere ;-)

If you do not believe this, you must invest in your own infrastructure for this: Define a language (generic bytecode? Turing machine statements ;-) ?) and deliver in-process compilers which will transform your selected language to something running on the target system.

Not even low coupling with the target language is a worthwhile consideration most times, isn't it? - except for meta-tools like e.g. ANTLR itself.

Regards
Harald M.


-------- Original-Nachricht --------
> Datum: Tue, 27 Nov 2007 16:35:38 +0100
> Von: Cristian Peraferrer <corellian.c at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest]  StringTemplate is Ok,	but what about "Action code"?

> Hi,
> 
> With StringTemplate we can achieve low coupling with the target  
> language. But what about Action code?
> How we should achieve low coupling with the target language?
> 
> Thanks in advance,
> Cristian.
> 
> -- 
> GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From r.mark.volkmann at gmail.com  Wed Nov 28 08:01:06 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Wed, 28 Nov 2007 10:01:06 -0600
Subject: [antlr-interest] skipping evaluation of some AST nodes
In-Reply-To: <20071128144449.54740@gmx.net>
References: <f0fcc6820711271334j23569a9ey96aa214b6dab855c@mail.gmail.com>
	<20071128074557.54740@gmx.net> <20071128144449.54740@gmx.net>
Message-ID: <f0fcc6820711280801h2a2ecd94uc7dadea1651f6506@mail.gmail.com>

On 11/28/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> Hi again -
>
> my second gut feeling says that you can do the following:
>
> rule
>     { ... compResult; }
>    : ^(a
>        b    { compResult = some-action; }
>        c[compResult]
>       )
>    ;
>
> - i.e. you must run through everything; but you can compute things along your way and then pass them into subsequent subtree traversals (or even out to someone else via a returns or an "out" object).
>
> What you cannot do, is change the order: Left things are traversed before right things. So if you want to have a representation of perl's statements
>
>     statement if condition;
>
> or
>
>     statement unless condition;
>
> you must make sure that the condition subtree is to the *left* of the statement subtree - but that's easy.

Thanks Harald! I'm glad you had a second gut feeling! I got the
following to work using your suggestion. It still uses one kind of
global variable, value. Other than that issue, do you see anything
else that could be improved?

tree grammar MathScriptTree;

options {
	ASTLabelType = CommonTree;
	tokenVocab = MathScript;
	output = template;
}

@header {
  package com.ociweb.mathscript;
}

@members {
  int value;

  private static int toInt(CommonTree node) {
    return Integer.parseInt(node.getText());
  }
}

script: ^(SCRIPT statement*);

statement
  : simpleStatement[true]
  | ^('IF' b=condition simpleStatement[$b.result])
  ;

simpleStatement[boolean b]
	: ^('ADD' n=NUMBER) { if ($b) value += toInt(n); }
	| ^('SUBTRACT' n=NUMBER) { if ($b) value -= toInt(n); }
	| 'PRINT' { if ($b) System.out.println(value); }
	;

condition returns [boolean result]
  : 'POSITIVE' { $result = value > 0; }
  | 'NEGATIVE' { $result = value < 0; }
  | ^('<' n=NUMBER) { $result = value < toInt(n); }
  | ^('>' n=NUMBER) { $result = value > toInt(n); }
  | ^('=' n=NUMBER) { $result = value == toInt(n); }
  ;

-- 
R. Mark Volkmann
Object Computing, Inc.

From parrt at cs.usfca.edu  Wed Nov 28 08:46:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 28 Nov 2007 08:46:21 -0800
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal expression?
In-Reply-To: <769277.83175.qm@web34801.mail.mud.yahoo.com>
References: <769277.83175.qm@web34801.mail.mud.yahoo.com>
Message-ID: <19A86009-B264-4377-9BA9-450F71679702@cs.usfca.edu>


On Nov 28, 2007, at 5:52 AM, William Cai wrote:

> Thanks Harald. It works now. Should this be recorded in FAQ?

Sure!  Somebody sign up and add it ;)

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/d3309959/attachment-0001.html 

From drippel at yahoo.com  Wed Nov 28 09:16:18 2007
From: drippel at yahoo.com (Daniel Rippel)
Date: Wed, 28 Nov 2007 09:16:18 -0800 (PST)
Subject: [antlr-interest] ANTLR3 Large Grammar Issue
Message-ID: <358765.72706.qm@web52608.mail.re2.yahoo.com>

I have a large grammar ~500 tokens.  My target language is Java.

After I run antlr to generate my Lexer.  
The Lexer fails to compile with the following error:

TestLexer.java:11428: code too large
    public void mTokens() throws RecognitionException {
                ^
1 error

And indeed the mTokens function is 10000+ lines of code.
I also noticed and tried the -Xnoinlinedfa option.  This just pushes the code too large issue over to the Parser class.

So, my question is:
Is there an antlr3 limit on the size of grammars?

I also noticed that grammar inheritance is out in v3.  
So, perhaps I can back up to v2 and break the grammar into smaller chunks that way.






From andreas.bartho at inf.tu-dresden.de  Wed Nov 28 09:34:50 2007
From: andreas.bartho at inf.tu-dresden.de (Andreas Bartho)
Date: Wed, 28 Nov 2007 18:34:50 +0100
Subject: [antlr-interest] ANTLR3 Large Grammar Issue
In-Reply-To: <358765.72706.qm@web52608.mail.re2.yahoo.com>
References: <358765.72706.qm@web52608.mail.re2.yahoo.com>
Message-ID: <474DA6BA.9040405@inf.tu-dresden.de>

Hi,

I experienced the same, but no one could tell me why. Have a look here 
http://www.antlr.org/pipermail/antlr-interest/2007-September/023627.html

Maybe the presented hack helps you.

Andreas


Daniel Rippel wrote:
> I have a large grammar ~500 tokens.  My target language is Java.
> 
> After I run antlr to generate my Lexer.  
> The Lexer fails to compile with the following error:
> 
> TestLexer.java:11428: code too large
>     public void mTokens() throws RecognitionException {
>                 ^
> 1 error
> 
> And indeed the mTokens function is 10000+ lines of code.
> I also noticed and tried the -Xnoinlinedfa option.  This just pushes the code too large issue over to the Parser class.
> 
> So, my question is:
> Is there an antlr3 limit on the size of grammars?
> 
> I also noticed that grammar inheritance is out in v3.  
> So, perhaps I can back up to v2 and break the grammar into smaller chunks that way.
> 
> 
> 
> 


From gbr at newtechlaw.com  Wed Nov 28 09:43:24 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 28 Nov 2007 09:43:24 -0800
Subject: [antlr-interest] conditional processing
In-Reply-To: <f0fcc6820711280729l2f22e153s59748df39c3994b@mail.gmail.com
 >
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<200711270348.lAR3mfa8026027@tach.newtechlaw.com>
	<f0fcc6820711280729l2f22e153s59748df39c3994b@mail.gmail.com>
Message-ID: <200711281746.lASHk7LZ004824@tach.newtechlaw.com>

Probably a bit of overkill in your given case, but to do it (using 
the boolean return from condition):

statement
   : simpleStatement
   | ^('IF' b=condition { $b.result }? simpleStatement)
   ;
   catch[FailedPredicateException fpe] {System.err.println("Ignore");}

simpleStatement
         : ^('ADD' n=NUMBER) { value += toInt(n); }
         | ^('SUBTRACT' n=NUMBER) { value -= toInt(n); }
         | 'PRINT' { System.out.println(value); }
         ;

Appropriate where simpleStatement does not/should not be aware of condition.


At 07:29 AM 11/28/2007, Mark Volkmann wrote:
>On 11/26/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> >
> >  At 07:02 PM 11/26/2007, Mark Volkmann wrote:
> >
> > Part of my AST looks like this.
> >
> >  ^('if' condition simpleStatement)
> >  Would help to see the full rule and the condition rule.  Still, a possible
> > solution is to use a semantic predicate, something like:
> >
> >  ^('if' b=condition { $b.equals("true") }? simpleStatement)
>
>I want to try you suggestion. Below is my grammar with your suggestion
>incorporated. When the generated Java code is compiled, I get the
>following error. Do you see anything wrong in my small grammar?
>
>---
>
>     [javac] 
> /Users/Mark/Documents/Programming/ANTLR/MathScriptAST/gen/com/ociweb/mathscript/MathScriptTree.java:179:
>cannot find symbol
>     [javac] symbol  : variable $b
>     [javac] location: class com.ociweb.mathscript.MathScriptTree
>     [javac]                     if ( !( $b.equals("true") ) ) {
>     [javac]                             ^
>
>---
>
>tree grammar MathScriptTree;
>
>options {
>         ASTLabelType = CommonTree;
>         tokenVocab = MathScript;
>         output = template;
>}
>
>@header {
>   package com.ociweb.mathscript;
>}
>
>@members {
>   int value;
>
>   private static int toInt(CommonTree node) {
>     return Integer.parseInt(node.getText());
>   }
>}
>
>script: ^(SCRIPT statement*);
>
>statement
>   :     simpleStatement
>   | ^('IF' b=condition { $b.equals("true") }? simpleStatement)
>   ;
>
>simpleStatement
>         : ^('ADD' n=NUMBER) { value += toInt(n); }
>         | ^('SUBTRACT' n=NUMBER) { value -= toInt(n); }
>         | 'PRINT' { System.out.println(value); }
>         ;
>
>condition returns [boolean result]
>   :     'POSITIVE' { $result = value > 0; }
>   | 'NEGATIVE' { $result = value < 0; }
>   | ^('<' n=NUMBER) { $result = value < toInt(n); }
>   | ^('>' n=NUMBER) { $result = value > toInt(n); }
>   | ^('=' n=NUMBER) { $result = value == toInt(n); }
>   ;
>
> >
> >
> >
> >
> > In my tree grammar, the rule for "condition" evaluates the matching
> >  content to true or false. The rule for "simpleStatement" executes the
> >  statement, for example, it could be a simple print statement. I only
> >  want simpleStatement to be executed if condition evaluates to true. I
> >  haven't been able to figure out how to make this work because when
> >  this part of my AST is matched, the rules for both condition and
> >  simpleStatement are fired.
> >
> >  I'd appreciate any hints on how to achieve this.
> >
> >  --
> >  R. Mark Volkmann
> >  Object Computing, Inc.
> >
> >  ----
> >  Gerald B. Rosenberg, Esq.
> >  NewTechLaw
> >  260 Sheridan Ave., Suite 208
> >  Palo Alto, CA  94306-2009
> >
> >  650.325.2100  (office)  /  650.703.1724  (cell)
> >  650.325.2107  (facsimile)
> >
> >  www.newtechlaw.com
> >
> >
> >  CONFIDENTIALITY NOTICE:  This email message (including any attachments) is
> > being sent by an attorney, is for the sole use of the intended recipient,
> > and may contain confidential and privileged information.  Any unauthorized
> > review, use, disclosure or distribution is prohibited.  If you are not the
> > intended recipient, please contact the sender immediately by 
> reply email and
> > delete all copies of this message and any attachments without retaining a
> > copy.
>
>
>--
>R. Mark Volkmann
>Object Computing, Inc.

----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/6a070d86/attachment.html 

From antlr at shmuelhome.mine.nu  Wed Nov 28 09:48:02 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 28 Nov 2007 19:48:02 +0200
Subject: [antlr-interest] ANTLR3 Large Grammar Issue
In-Reply-To: <358765.72706.qm@web52608.mail.re2.yahoo.com>
References: <358765.72706.qm@web52608.mail.re2.yahoo.com>
Message-ID: <474DA9D2.40203@shmuelhome.mine.nu>

Daniel Rippel wrote:
> I have a large grammar ~500 tokens.  My target language is Java.
>
> After I run antlr to generate my Lexer.  
> The Lexer fails to compile with the following error:
>
> TestLexer.java:11428: code too large
>     public void mTokens() throws RecognitionException {
>                 ^
> 1 error
>
> And indeed the mTokens function is 10000+ lines of code.
> I also noticed and tried the -Xnoinlinedfa option.  This just pushes the code too large issue over to the Parser class.
>
> So, my question is:
> Is there an antlr3 limit on the size of grammars?
>
> I also noticed that grammar inheritance is out in v3.  
> So, perhaps I can back up to v2 and break the grammar into smaller chunks that way.
>
>
>   
I haven't had this problem in the lexer but I have had the problem in 
the parser. Typically I have found that left factoring my rules 
eliminates the problem. The predictor is having to look ahead too far to 
decide which token to generate. One way of dealing with this issue is to 
use artificial tokens. For instance,

Instead of

AB : 'A' 'B';
AC: 'A' 'C';

you can write

A: 'A'
    (
       'B' {$type=AB;}
    | 'C'   {$type=AC;}
    )

If there aren't any other tokens that start with A, mToken will be 
satisfied when LA(1)='A'. It would be better if ANTLR itself realized 
that methods were getting too big and it broke up the multi level 
switches into calls to helper functions, but this is something for the 
future.



From rob.harrop at springsource.com  Wed Nov 28 09:55:25 2007
From: rob.harrop at springsource.com (Rob Harrop)
Date: Wed, 28 Nov 2007 17:55:25 +0000
Subject: [antlr-interest] OutOfMemoryException when parsing incorrect input
Message-ID: <ED023985-7C89-47AE-9FCF-CE1278B7EEBD@springsource.com>

I have written a simple (I think!) grammar to parse some of the  
headers in an OSGi bundle manifest. I have included the cut down  
version here:

=================================
grammar OsgiPackageHeader;

header 	:	pkg_decl (',' pkg_decl)*
	;
	
pkg_decl
	: packageNames  (';' parameter) *
	;

packageNames
	: packageName (';' packageName)*
	;
		
parameter
	:	directive | attribute
	;
	
directive
	:	IDENTIFIER ':=' argument
	;

attribute
	:	IDENTIFIER '=' argument
	;

argument
	: 	IDENTIFIER | QUOTED_STRING
	;
	
packageName
	: IDENTIFIER {this.packageNames.add($IDENTIFIER.text);}
	;

QUOTED_STRING
	:  '"' (~('\\' | '"' | '\r' | '\n') | '\\' ('\\' | '"')) * '"'
	{setText(getText().substring(1, getText().length()-1));}
	;
	
IDENTIFIER
	: IDENTIFIER_PART ('.' IDENTIFIER_PART) *
	;

fragment
IDENTIFIER_PART
	: (ALPHA | DIGIT | '_' | '$' | '-') *
	;

fragment	
DIGIT	:	'0'..'9'
	;

fragment	
ALPHA	:	'a'..'z' | 'A'..'Z'
	;

WS	:	' '+ {skip();}
	;
=====================

Attempting to invoke header() with incorrect input like "**" results  
in an OutOfMemoryException. What am I doing wrong?
	
Regards,

Rob

Rob Harrop
SpringSource

This e-mail and any attachments transmitted with it are strictly  
confidential and intended solely for the person or entity to whom  
they are addressed. Unauthorised use, copying, disclosure or  
distribution is prohibited. If you receive this e-mail in error  
please notify the sender immediately and then delete it along with  
any attachments. E-mails should be checked by the recipient to ensure  
that there are no viruses and SpringSource does not accept any  
responsibility if this is not done. Any views or opinions presented  
are solely those of the author and do not necessarily represent those  
of SpringSource.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/6e717a67/attachment-0001.html 

From lgcraymer at yahoo.com  Wed Nov 28 10:06:37 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 28 Nov 2007 10:06:37 -0800 (PST)
Subject: [antlr-interest] StringTemplate is Ok,
	but what about "Action code"?
Message-ID: <958786.55980.qm@web55907.mail.re3.yahoo.com>

Harald--

I suspect you misinterpreted Cristian's question.  It is not uncommon to find a need use the same grammar with multiple target languages, or (more commonly) to want to take a grammar that someone developed for an application written in one target language, say C++, to use for a second target language such as Java.  If you have to modify the actions in the grammar, you end up with two copies of the grammar that need to be kept in synch and the start of a maintenance nightmare.

--Loring


----- Original Message ----
> From: Harald Mueller <harald_m_mueller at gmx.de>
> To: Cristian Peraferrer <corellian.c at gmail.com>; antlr-interest at antlr.org
> Sent: Wednesday, November 28, 2007 7:15:41 AM
> Subject: Re: [antlr-interest] StringTemplate is Ok, but what about "Action code"?
> 
> Hi -
> 
> Why would you want to do this?? - whatever you do in actions, you
> need
> 
 to express some sort of "algorithm." I do not see another
> possibility
> 
 than to have SOME language that will express what you need. Java
> is
> 
 perfect: It will decouple you (they say) from any plat form
> specifics,
> 
 because you write it once, and it runs everywhere ;-)
> 
> If you do not believe this, you must invest in your own
> infrastructure
> 
 for this: Define a language (generic bytecode? Turing
> machine
> 
 statements ;-) ?) and deliver in-process compilers which will transform
> your
> 
 selected language to something running on the target system.
> 
> Not even low coupling with the target language is a
> worthwhile
> 
 consideration most times, isn't it? - except for meta-tools like e.g.
> ANTLR
> 
 itself.
> 
> Regards
> Harald M.
> 
> 
> -------- Original-Nachricht --------
> > Datum: Tue, 27 Nov 2007 16:35:38 +0100
> > Von: Cristian Peraferrer 
> > An: antlr-interest at antlr.org
> > Betreff: [antlr-interest]  StringTemplate is Ok,    but what
> about
> 
 "Action code"?
> 
> > Hi,
> > 
> > With StringTemplate we can achieve low coupling with the target  
> > language. But what about Action code?
> > How we should achieve low coupling with the target language?
> > 
> > Thanks in advance,
> > Cristian.
> > 
> > -- 
> > GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch
> 
> -- 
> Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
> Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> 




      ____________________________________________________________________________________
Get easy, one-click access to your favorites. 
Make Yahoo! your homepage.
http://www.yahoo.com/r/hs 

From drippel at yahoo.com  Wed Nov 28 11:00:15 2007
From: drippel at yahoo.com (Daniel Rippel)
Date: Wed, 28 Nov 2007 11:00:15 -0800 (PST)
Subject: [antlr-interest] ANTLR3 Large Grammar Issue
Message-ID: <833510.36032.qm@web52609.mail.re2.yahoo.com>

That hack works.

I cut and pasted the following lexer rule verbatim at the end of my grammar, and now everything compiles nicely.
Kind of disconcerting.
STUPID_HACK
     :   'a'+ '.'
     ;

----- Original Message ----
From: Andreas Bartho <andreas.bartho at inf.tu-dresden.de>
To: Daniel Rippel <drippel at yahoo.com>
Cc: antlr-interest at antlr.org
Sent: Wednesday, November 28, 2007 12:34:50 PM
Subject: Re: [antlr-interest] ANTLR3 Large Grammar Issue


Hi,

I experienced the same, but no one could tell me why. Have a look here 
http://www.antlr.org/pipermail/antlr-interest/2007-September/023627.html

Maybe the presented hack helps you.

Andreas


Daniel Rippel wrote:
> I have a large grammar ~500 tokens.  My target language is Java.
> 
> After I run antlr to generate my Lexer.  
> The Lexer fails to compile with the following error:
> 
> TestLexer.java:11428: code too large
>     public void mTokens() throws RecognitionException {
>                 ^
> 1 error
> 
> And indeed the mTokens function is 10000+ lines of code.
> I also noticed and tried the -Xnoinlinedfa option.  This just pushes
 the code too large issue over to the Parser class.
> 
> So, my question is:
> Is there an antlr3 limit on the size of grammars?
> 
> I also noticed that grammar inheritance is out in v3.  
> So, perhaps I can back up to v2 and break the grammar into smaller
 chunks that way.
> 
> 
> 
> 





From parrt at cs.usfca.edu  Wed Nov 28 11:11:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 28 Nov 2007 11:11:01 -0800
Subject: [antlr-interest] ANTLR3 Large Grammar Issue
In-Reply-To: <358765.72706.qm@web52608.mail.re2.yahoo.com>
References: <358765.72706.qm@web52608.mail.re2.yahoo.com>
Message-ID: <5C316047-EAF3-48FE-A6D2-FFE3C37EA16F@cs.usfca.edu>


On Nov 28, 2007, at 9:16 AM, Daniel Rippel wrote:

> I have a large grammar ~500 tokens.  My target language is Java.
>
> After I run antlr to generate my Lexer.
> The Lexer fails to compile with the following error:
>
> TestLexer.java:11428: code too large
>     public void mTokens() throws RecognitionException {
>                 ^
> 1 error
>
> And indeed the mTokens function is 10000+ lines of code.
> I also noticed and tried the -Xnoinlinedfa option.  This just  
> pushes the code too large issue over to the Parser class.
>
> So, my question is:
> Is there an antlr3 limit on the size of grammars?

hi :)

no, but javac has limits.

> I also noticed that grammar inheritance is out in v3.
> So, perhaps I can back up to v2 and break the grammar into smaller  
> chunks that way.

3.1 has grammar delegation/import.  coming soon to a theatre near you.

Ter

From arto.viitanen at pp4.inet.fi  Wed Nov 28 11:12:53 2007
From: arto.viitanen at pp4.inet.fi (Arto Viitanen)
Date: Wed, 28 Nov 2007 21:12:53 +0200
Subject: [antlr-interest] ANTLR3 with C# generates code that does not compile
Message-ID: <474DBDB5.40305@pp4.inet.fi>

I use Antlr3.Tool.exe to generate C# code from .g files. I started to
use StreamTemplates, and following code
fragment:

-------------
tree grammar ForceTemplate;

options {
    tokenVocab=Force; // Import tokens from Force.g
    ASTLabelType=CommonTree;
    language=CSharp;
    output=template;
}

@header {
  using SymbolTable;
  using Force;
  using System.Globalization;
}
----------

generates following C# code:

---------
// $ANTLR 3.0 C:\\Documents and Settings\\Administrator\\My
Documents\\Visual Studio 2008\\Projects\\Force\\Force\\ForceTemplate.g
2007-11-28 20:48:01

  using SymbolTable;
  using Force;
  using System.Globalization;

using System;
using Antlr.Runtime;
using Antlr.Runtime.Tree;using IList         = System.Collections.IList;
using ArrayList     = System.Collections.ArrayList;
using Stack         = Antlr.Runtime.Collections.StackList;

using IDictionary    = System.Collections.IDictionary;
using Hashtable     = System.Collections.Hashtable;


using Antlr.StringTemplate;
using Antlr.StringTemplate.Language;
using Hashtable = System.Collections.Hashtable;
---------

Problem is, line "using Hashtable = System.Collections.Hashtable;" is
twice, and at least the new Visual Studio 2008
Express Edition does not like it. I guess the problem is, both
"language=CSharp;" and "output=template;" generate
the Hashtable -line.

How can I drop the second line (other than editing the .cs file by hand
:-( )

--
Arto Viitanen

From r.mark.volkmann at gmail.com  Wed Nov 28 12:08:12 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Wed, 28 Nov 2007 14:08:12 -0600
Subject: [antlr-interest] conditional processing
In-Reply-To: <200711281746.lASHk7LZ004824@tach.newtechlaw.com>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<200711270348.lAR3mfa8026027@tach.newtechlaw.com>
	<f0fcc6820711280729l2f22e153s59748df39c3994b@mail.gmail.com>
	<200711281746.lASHk7LZ004824@tach.newtechlaw.com>
Message-ID: <f0fcc6820711281208yf232292j66a530b15143a220@mail.gmail.com>

On 11/28/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
>
>  Probably a bit of overkill in your given case, but to do it (using the
> boolean return from condition):
>
>  statement
>    : simpleStatement
>    | ^('IF' b=condition { $b.result }? simpleStatement)
>    ;
>    catch[FailedPredicateException fpe] {System.err.println("Ignore");}
>
>  simpleStatement
>          : ^('ADD' n=NUMBER) { value += toInt(n); }
>          | ^( 'SUBTRACT' n=NUMBER) { value -= toInt(n); }
>          | 'PRINT' { System.out.println(value); }
>          ;
>
>  Appropriate where simpleStatement does not/should not be aware of
> condition.

I like your approach, but I can't get it to work. It seems that
something is wrong with the catch of FailedPredicateException. When
the first IF whose condition evaluates to false is encountered, it
prints "Ignore", executes the simpleStatement after the semantic
predicate anyway, and then stops processing, ignoring the rest of the
AST.

>  At 07:29 AM 11/28/2007, Mark Volkmann wrote:
>
> On 11/26/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
>  >
>  >  At 07:02 PM 11/26/2007, Mark Volkmann wrote:
>  >
>  > Part of my AST looks like this.
>  >
>  >  ^('if' condition simpleStatement)
>  >  Would help to see the full rule and the condition rule.  Still, a
> possible
>  > solution is to use a semantic predicate, something like:
>  >
>  >  ^('if' b=condition { $b.equals("true") }? simpleStatement)
>
>  I want to try you suggestion. Below is my grammar with your suggestion
>  incorporated. When the generated Java code is compiled, I get the
>  following error. Do you see anything wrong in my small grammar?
>
>  ---
>
>      [javac]
> /Users/Mark/Documents/Programming/ANTLR/MathScriptAST/gen/com/ociweb/mathscript/MathScriptTree.java:179:
>  cannot find symbol
>      [javac] symbol  : variable $b
>      [javac] location: class
> com.ociweb.mathscript.MathScriptTree
>      [javac]                     if ( !( $b.equals("true") ) ) {
>      [javac]                             ^
>
>  ---
>
>  tree grammar MathScriptTree;
>
>  options {
>           ASTLabelType = CommonTree;
>          tokenVocab = MathScript;
>          output = template;
>  }
>
>  @header {
>    package com.ociweb.mathscript;
>  }
>
>  @members {
>    int value;
>
>    private static int toInt(CommonTree node) {
>      return Integer.parseInt(node.getText());
>    }
>  }
>
>  script: ^(SCRIPT statement*);
>
>  statement
>    :     simpleStatement
>    | ^('IF' b=condition { $b.equals("true") }? simpleStatement)
>    ;
>
>  simpleStatement
>          : ^('ADD' n=NUMBER) { value += toInt(n); }
>          | ^('SUBTRACT' n=NUMBER) { value -= toInt(n); }
>          | 'PRINT' { System.out.println(value); }
>          ;
>
>  condition returns [boolean result]
>    :     'POSITIVE' { $result = value > 0; }
>    | 'NEGATIVE' { $result = value < 0; }
>    | ^('<' n=NUMBER) { $result = value < toInt(n); }
>    | ^('>' n=NUMBER) { $result = value > toInt(n); }
>    | ^('=' n=NUMBER) { $result = value == toInt(n); }
>    ;
>
>  >
>  >
>  >
>  >
>  > In my tree grammar, the rule for "condition" evaluates the matching
>  >  content to true or false. The rule for "simpleStatement" executes the
>  >  statement, for example, it could be a simple print statement. I only
>  >  want simpleStatement to be executed if condition evaluates to true. I
>  >  haven't been able to figure out how to make this work because when
>  >  this part of my AST is matched, the rules for both condition and
>  >  simpleStatement are fired.
>  >
>  >  I'd appreciate any hints on how to achieve this.
>  >
>  >  --
>  >  R. Mark Volkmann
>  >  Object Computing, Inc.
>  >
>  >  ----
>  >  Gerald B. Rosenberg, Esq.
>  >  NewTechLaw
>  >  260 Sheridan Ave., Suite 208
>  >  Palo Alto, CA  94306-2009
>  >
>  >  650.325.2100  (office)  /  650.703.1724  (cell)
>  >  650.325.2107  (facsimile)
>  >
>  >  www.newtechlaw.com
>  >
>  >
>  >  CONFIDENTIALITY NOTICE:  This email message (including any attachments)
> is
>  > being sent by an attorney, is for the sole use of the intended recipient,
>  > and may contain confidential and privileged information.  Any
> unauthorized
>  > review, use, disclosure or distribution is prohibited.  If you are not
> the
>  > intended recipient, please contact the sender immediately by reply email
> and
>  > delete all copies of this message and any attachments without retaining a
>  > copy.
>
>
>  --
>  R. Mark Volkmann
>  Object Computing, Inc.
>  ----
>  Gerald B. Rosenberg
>  Certiv Analytics
>
>  www.certiv.net
>


-- 
R. Mark Volkmann
Object Computing, Inc.

From r.mark.volkmann at gmail.com  Wed Nov 28 12:45:49 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Wed, 28 Nov 2007 14:45:49 -0600
Subject: [antlr-interest] conditional processing
In-Reply-To: <f0fcc6820711281208yf232292j66a530b15143a220@mail.gmail.com>
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<200711270348.lAR3mfa8026027@tach.newtechlaw.com>
	<f0fcc6820711280729l2f22e153s59748df39c3994b@mail.gmail.com>
	<200711281746.lASHk7LZ004824@tach.newtechlaw.com>
	<f0fcc6820711281208yf232292j66a530b15143a220@mail.gmail.com>
Message-ID: <f0fcc6820711281245y445e8d2flfa1a201dd6d2f269@mail.gmail.com>

On 11/28/07, Mark Volkmann <r.mark.volkmann at gmail.com> wrote:
> On 11/28/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> >
> >  Probably a bit of overkill in your given case, but to do it (using the
> > boolean return from condition):
> >
> >  statement
> >    : simpleStatement
> >    | ^('IF' b=condition { $b.result }? simpleStatement)
> >    ;
> >    catch[FailedPredicateException fpe] {System.err.println("Ignore");}
> >
> >  simpleStatement
> >          : ^('ADD' n=NUMBER) { value += toInt(n); }
> >          | ^( 'SUBTRACT' n=NUMBER) { value -= toInt(n); }
> >          | 'PRINT' { System.out.println(value); }
> >          ;
> >
> >  Appropriate where simpleStatement does not/should not be aware of
> > condition.
>
> I like your approach, but I can't get it to work. It seems that
> something is wrong with the catch of FailedPredicateException. When
> the first IF whose condition evaluates to false is encountered, it
> prints "Ignore", executes the simpleStatement after the semantic
> predicate anyway, and then stops processing, ignoring the rest of the
> AST.

Do I need to do something in the catch to consume the tokens that make
up the simpleStatement that I'm skipping because the condition
evaluated to false? I see something like that in section 10.5 of the
book. I don't have a terminating token for my simpleStatements though.
I need to consume the next AST node and it's descendants.

> >  At 07:29 AM 11/28/2007, Mark Volkmann wrote:
> >
> > On 11/26/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> >  >
> >  >  At 07:02 PM 11/26/2007, Mark Volkmann wrote:
> >  >
> >  > Part of my AST looks like this.
> >  >
> >  >  ^('if' condition simpleStatement)
> >  >  Would help to see the full rule and the condition rule.  Still, a
> > possible
> >  > solution is to use a semantic predicate, something like:
> >  >
> >  >  ^('if' b=condition { $b.equals("true") }? simpleStatement)
> >
> >  I want to try you suggestion. Below is my grammar with your suggestion
> >  incorporated. When the generated Java code is compiled, I get the
> >  following error. Do you see anything wrong in my small grammar?
> >
> >  ---
> >
> >      [javac]
> > /Users/Mark/Documents/Programming/ANTLR/MathScriptAST/gen/com/ociweb/mathscript/MathScriptTree.java:179:
> >  cannot find symbol
> >      [javac] symbol  : variable $b
> >      [javac] location: class
> > com.ociweb.mathscript.MathScriptTree
> >      [javac]                     if ( !( $b.equals("true") ) ) {
> >      [javac]                             ^
> >
> >  ---
> >
> >  tree grammar MathScriptTree;
> >
> >  options {
> >           ASTLabelType = CommonTree;
> >          tokenVocab = MathScript;
> >          output = template;
> >  }
> >
> >  @header {
> >    package com.ociweb.mathscript;
> >  }
> >
> >  @members {
> >    int value;
> >
> >    private static int toInt(CommonTree node) {
> >      return Integer.parseInt(node.getText());
> >    }
> >  }
> >
> >  script: ^(SCRIPT statement*);
> >
> >  statement
> >    :     simpleStatement
> >    | ^('IF' b=condition { $b.equals("true") }? simpleStatement)
> >    ;
> >
> >  simpleStatement
> >          : ^('ADD' n=NUMBER) { value += toInt(n); }
> >          | ^('SUBTRACT' n=NUMBER) { value -= toInt(n); }
> >          | 'PRINT' { System.out.println(value); }
> >          ;
> >
> >  condition returns [boolean result]
> >    :     'POSITIVE' { $result = value > 0; }
> >    | 'NEGATIVE' { $result = value < 0; }
> >    | ^('<' n=NUMBER) { $result = value < toInt(n); }
> >    | ^('>' n=NUMBER) { $result = value > toInt(n); }
> >    | ^('=' n=NUMBER) { $result = value == toInt(n); }
> >    ;
> >
> >  >
> >  >
> >  >
> >  >
> >  > In my tree grammar, the rule for "condition" evaluates the matching
> >  >  content to true or false. The rule for "simpleStatement" executes the
> >  >  statement, for example, it could be a simple print statement. I only
> >  >  want simpleStatement to be executed if condition evaluates to true. I
> >  >  haven't been able to figure out how to make this work because when
> >  >  this part of my AST is matched, the rules for both condition and
> >  >  simpleStatement are fired.
> >  >
> >  >  I'd appreciate any hints on how to achieve this.
> >  >
> >  >  --
> >  >  R. Mark Volkmann
> >  >  Object Computing, Inc.
> >  >
> >  >  ----
> >  >  Gerald B. Rosenberg, Esq.
> >  >  NewTechLaw
> >  >  260 Sheridan Ave., Suite 208
> >  >  Palo Alto, CA  94306-2009
> >  >
> >  >  650.325.2100  (office)  /  650.703.1724  (cell)
> >  >  650.325.2107  (facsimile)
> >  >
> >  >  www.newtechlaw.com
> >  >
> >  >
> >  >  CONFIDENTIALITY NOTICE:  This email message (including any attachments)
> > is
> >  > being sent by an attorney, is for the sole use of the intended recipient,
> >  > and may contain confidential and privileged information.  Any
> > unauthorized
> >  > review, use, disclosure or distribution is prohibited.  If you are not
> > the
> >  > intended recipient, please contact the sender immediately by reply email
> > and
> >  > delete all copies of this message and any attachments without retaining a
> >  > copy.
> >
> >
> >  --
> >  R. Mark Volkmann
> >  Object Computing, Inc.
> >  ----
> >  Gerald B. Rosenberg
> >  Certiv Analytics
> >
> >  www.certiv.net
> >
>
>
> --
> R. Mark Volkmann
> Object Computing, Inc.
>


-- 
R. Mark Volkmann
Object Computing, Inc.

From clinton.roy at gmail.com  Wed Nov 28 12:55:09 2007
From: clinton.roy at gmail.com (Clinton Roy)
Date: Thu, 29 Nov 2007 06:55:09 +1000
Subject: [antlr-interest] OutOfMemoryException when parsing incorrect
	input
In-Reply-To: <ED023985-7C89-47AE-9FCF-CE1278B7EEBD@springsource.com>
References: <ED023985-7C89-47AE-9FCF-CE1278B7EEBD@springsource.com>
Message-ID: <9c0715e40711281255y33519980h58f04c6cbc9e6489@mail.gmail.com>

Hi Rob,

On Nov 29, 2007 3:55 AM, Rob Harrop <rob.harrop at springsource.com> wrote:

> IDENTIFIER
>  : IDENTIFIER_PART ('.' IDENTIFIER_PART) *
>
> fragment
> IDENTIFIER_PART
>  : (ALPHA | DIGIT | '_' | '$' | '-') *

Don't let your token rules allow empty matches, if I replace these
zero-to-many matches with one-to-many matches (+) things seem a little
more happy.

More of a rule of thumb than a specific solution to your problem, hope
that helps,
-- 
Clinton Roy
CSIRO - Robotics Platform Engineer
Autonomous Systems Lab

humbug.org.au  - Brisbane Unix Group
azure.humbug.org.au/~croy/blog - Blog
flickr.com/photos/croy/ - Photos

From clifford.heath at gmail.com  Wed Nov 28 13:57:11 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Thu, 29 Nov 2007 08:57:11 +1100
Subject: [antlr-interest] NoViableAltException in argumentList
In-Reply-To: <BAY128-W17BF0FEF1AC26ECE35A91DB57B0@phx.gbl>
References: <BAY128-W17BF0FEF1AC26ECE35A91DB57B0@phx.gbl>
Message-ID: <fiko7p$5hs$1@ger.gmane.org>

Lucas Ontivero wrote:
> Somebody could help me with this? I have the following rule:

Lucas,

A bug I reported a while back with ANTLRWorks is that when you are
using the interpreter to parse a fragment using any selected rule
from a larger grammar, the rule you select will look ahead one
token past the end of your input, and see the EOF. If EOF is not
a valid token to follow that rule *in the wider context* of your
grammar, the parse will fail.

So if you add a temporary rule:

junk: argumentList EOF;

then interpret the argumentList rule, you should find that the parse
succeeds.

HTH,


Clifford Heath.


From jaluber at gmx.de  Wed Nov 28 14:36:14 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 28 Nov 2007 23:36:14 +0100
Subject: [antlr-interest] ANTLR3 with C# generates code that does not
 compile
In-Reply-To: <474DBDB5.40305@pp4.inet.fi>
References: <474DBDB5.40305@pp4.inet.fi>
Message-ID: <474DED5E.9000807@gmx.de>

Arto Viitanen wrote:
> I use Antlr3.Tool.exe to generate C# code from .g files. I started to
> use StreamTemplates, and following code
> fragment:
> 
...
> 
> Problem is, line "using Hashtable = System.Collections.Hashtable;" is
> twice, and at least the new Visual Studio 2008
> Express Edition does not like it. I guess the problem is, both
> "language=CSharp;" and "output=template;" generate
> the Hashtable -line.

Can you check if the newest daily build still generates the error? If
yes, can you please send me a minimum working grammar which I can use to
debug this (add tokens file and some rules to make the grammar valid)?
Do you use per chance backtracking (the options in your sample say
otherwise but you may have edited the snippet)?

> How can I drop the second line (other than editing the .cs file by hand
> :-( )

Other than using a fixed template file no chance. I encountered once a
similar error, so maybe the previous maintainer has fixed that line already.

Johannes

From antlr at jazillian.com  Wed Nov 28 14:45:47 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 28 Nov 2007 17:45:47 -0500
Subject: [antlr-interest] Compiler-exploding grammar
In-Reply-To: <b8ceeef70711280713k4b81a15ybd8eb908e182346@mail.gmail.com>
References: <mailman.10715.1196257950.2534.antlr-interest@antlr.org>	<008d01c831ca$b9fd28f0$0300a8c0@chesterford>	<b8ceeef70711280711g34c0007ci3ca1d142d15838e3@mail.gmail.com>
	<b8ceeef70711280713k4b81a15ybd8eb908e182346@mail.gmail.com>
Message-ID: <474DEF9B.9030109@jazillian.com>

Steve Bennett wrote:
> Oops, sorry about the massive message :( I didn't see that it 14000
> characters wide :(
>
> Anyway, looks like a bug in ANTLR - the java compiler is entitled to
> fall over with junk like that.
>
> Steve
>   
I don't follow. Are you saying that ANTLR generated a single line that 
was 14000 characters
wide, and javac choked on it? If so, that sounds like a javac bug to me.

From sunshine at public.kherson.ua  Wed Nov 28 15:32:28 2007
From: sunshine at public.kherson.ua (Ruslan Zasukhin)
Date: Thu, 29 Nov 2007 01:32:28 +0200
Subject: [antlr-interest] [ANTL 2.7.2][C++] AST destructors eat the whole
	stack => crash
Message-ID: <C373C72C.857CF%sunshine@public.kherson.ua>

Hi All,

We have meet this crash working yet with ANTLR 2.7.2, C++
And I'd like find out if this is known issue,
And if it was fixed in newer versions of ANTLR.

We have try bench SQL commands as
    CREATE TABLE T1 (f1 INT, f2 INT ... f1000 INT)

I.e. Quite long query.

After this query, any next query crashes when we work under MS VISUAL.
Crashes it here:

VSQLPArser::sql()
{
    returnTree = ANTL::null;   <<<<<<<<<


With stack like this:

     Kernel_Win32_Debug.dll!antlr::ASTRef::~ASTRef() Line 23    C++
     Kernel_Win32_Debug.dll!antlr::ASTRef::`scalar deleting destructor'() +
0x2b bytes    C++
     
Kernel_Win32_Debug.dll!antlr::ASTRefCount<antlr::BaseAST>::~ASTRefCount<antl
r::BaseAST>() Line 60 + 0x2d bytes    C++
     Kernel_Win32_Debug.dll!antlr::BaseAST::~BaseAST() Line 29 + 0x1a bytes
C++
     Kernel_Win32_Debug.dll!antlr::CommonAST::~CommonAST() Line 34 + 0x24
bytes    C++
     Kernel_Win32_Debug.dll!antlr::CommonAST::`scalar deleting destructor'()
+ 0x2b bytes    C++

     Kernel_Win32_Debug.dll!antlr::ASTRef::~ASTRef() Line 23 + 0x36 bytes
C++
     Kernel_Win32_Debug.dll!antlr::ASTRef::`scalar deleting destructor'() +
0x2b bytes    C++
     
Kernel_Win32_Debug.dll!antlr::ASTRefCount<antlr::BaseAST>::~ASTRefCount<antl
r::BaseAST>() Line 60 + 0x2d bytes    C++
     Kernel_Win32_Debug.dll!antlr::BaseAST::~BaseAST() Line 29 + 0x1a bytes
C++
     Kernel_Win32_Debug.dll!antlr::CommonAST::~CommonAST() Line 34 + 0x24
bytes    C++
     Kernel_Win32_Debug.dll!antlr::CommonAST::`scalar deleting destructor'()
+ 0x2b bytes    C++

     Kernel_Win32_Debug.dll!antlr::ASTRef::~ASTRef() Line 23 + 0x36 bytes
C++
     Kernel_Win32_Debug.dll!antlr::ASTRef::`scalar deleting destructor'() +
0x2b bytes    C++
     Kernel_Win32_Debug.dll!antlr::ASTRefCount<antlr::AST>::operator=(const
antlr::ASTRefCount<antlr::AST> & other={...}) Line 80 + 0x2d bytes    C++
     Kernel_Win32_Debug.dll!VSQL_Parser::sql() Line 602    C++


It is easy to see, that if we have LONG chain of nodes in the AST tree,
Then current code of destructors do 6 * N calls, where N is number of nodes.

And for 750 nodes, we get crash.
Stack is out ...

So is this known issue?
If yes if it is fixed for ANTLR 3.0 codebase ?
If not  -- please pay attention to it.

It seems to me the best solution ? provide own allocator for AST.
And this also gives bonus ? ability destroy all them in single snap.

I remember few years ago somebody on this list have told he did such
allocator.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071129/f3f07f82/attachment-0001.html 

From stevagewp at gmail.com  Wed Nov 28 16:39:18 2007
From: stevagewp at gmail.com (Steve Bennett)
Date: Thu, 29 Nov 2007 11:39:18 +1100
Subject: [antlr-interest] Compiler-exploding grammar
In-Reply-To: <474DEF9B.9030109@jazillian.com>
References: <mailman.10715.1196257950.2534.antlr-interest@antlr.org>
	<008d01c831ca$b9fd28f0$0300a8c0@chesterford>
	<b8ceeef70711280711g34c0007ci3ca1d142d15838e3@mail.gmail.com>
	<b8ceeef70711280713k4b81a15ybd8eb908e182346@mail.gmail.com>
	<474DEF9B.9030109@jazillian.com>
Message-ID: <b8ceeef70711281639w411fecffueac10b8aded90afb@mail.gmail.com>

On 11/29/07, Andy Tripp <antlr at jazillian.com> wrote:
> I don't follow. Are you saying that ANTLR generated a single line that
> was 14000 characters
> wide, and javac choked on it? If so, that sounds like a javac bug to me.

No, it's more than a single line and apparently more than 14000
characters wide, too. My editor shows about 30 lines in a row at least
that long, but it truncates them at that 14384 characters.

Looking into it a bit, it looks like some sort of combinatorial
expansion gone wrong caused by the combination of two parser rules.
Rule #1:

close_bold_italics
@after {text_bold=false; text_italics = false;}
:
        {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
       |{text_bold==false && text_italics==true}? => -> I_OFF
       |{text_bold==true && text_italics==false}? => -> B_OFF

       ;

bold_and_italics:
     {textis("''") && text_italics}? => APOSTROPHES
{text_italics=false;} ->         ^(I_OFF)
    |{textis("''") && !text_italics}? => APOSTROPHES
{text_italics=true;} ->          ^(I_ON)
    |{textis("'''") && text_bold}? => APOSTROPHES
{text_bold=false;} ->            ^(B_OFF)
    |{textis("'''") && !text_bold}? => APOSTROPHES   {text_bold=true;}
->             ^(B_ON)
    |{textis("''''") && text_bold}? => APOSTROPHES
{text_bold=false;} -> APOSTROPHE ^(B_OFF)
    |{textis("''''") && !text_bold}? => APOSTROPHES  {text_bold=true;}
-> APOSTROPHE  ^(B_ON)
    |{textis("'''''") && text_bold && text_italics}? =>  APOSTROPHES
{text_bold=false; text_italics=false; } -> ^(B_OFF) ^(I_OFF)
    |{textis("'''''") && text_bold && !text_italics}? => APOSTROPHES
{text_bold=false; text_italics=true; }  -> ^(B_OFF) ^(I_ON)
    |{textis("'''''") && !text_bold && text_italics}? => APOSTROPHES
{text_bold=true; text_italics=false; }  -> ^(B_ON)  ^(I_OFF)
    |{textis("'''''") && !text_bold && !text_italics}? =>APOSTROPHES
{text_bold=true; text_italics=true; }   -> ^(B_ON)  ^(I_ON)
    ;

The resulting mess:

(text_bold==false && text_italics==true&&textis("''''") && !text_bold)
||(text_bold==true && text_italics==false&&textis("'''") && text_bold)
||(text_bold==true && text_italics==false&&textis("'''''") &&
text_bold && !text_italics)
||(text_bold==true && text_italics==true&&textis("''''") && !text_bold)
||(text_bold==true && text_italics==true&&textis("'''''") &&
!text_bold && !text_italics)
...

going through *all* the combinations, even the nonsensical ones:
...
||(text_bold==true && text_italics==true&&textis("'''") && !text_bold)
...

Even so, I don't really get why it explodes quite so massively. I also
can't really say why these two rules are even joined in this cartesian
product like that. The only thing they really have in common is that
they produce the same AST node type.

Steve

From gbr at newtechlaw.com  Wed Nov 28 16:58:41 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 28 Nov 2007 16:58:41 -0800
Subject: [antlr-interest] conditional processing
In-Reply-To: <f0fcc6820711281208yf232292j66a530b15143a220@mail.gmail.com
 >
References: <f0fcc6820711261902s47f8cbd6nf1fc0360a07bd627@mail.gmail.com>
	<200711270348.lAR3mfa8026027@tach.newtechlaw.com>
	<f0fcc6820711280729l2f22e153s59748df39c3994b@mail.gmail.com>
	<200711281746.lASHk7LZ004824@tach.newtechlaw.com>
	<f0fcc6820711281208yf232292j66a530b15143a220@mail.gmail.com>
Message-ID: <200711290058.lAT0wmZv006715@tach.newtechlaw.com>


Explained well near the bottom of:
http://www.antlr.org/wiki/display/ANTLR3/6.+Advanced+processing

At 12:08 PM 11/28/2007, Mark Volkmann wrote:
>On 11/28/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> >
> >  Probably a bit of overkill in your given case, but to do it (using the
> > boolean return from condition):
> >
> >  statement
> >    : simpleStatement
> >    | ^('IF' b=condition { $b.result }? simpleStatement)
> >    ;
> >    catch[FailedPredicateException fpe] {System.err.println("Ignore");}
> >
> >  simpleStatement
> >          : ^('ADD' n=NUMBER) { value += toInt(n); }
> >          | ^( 'SUBTRACT' n=NUMBER) { value -= toInt(n); }
> >          | 'PRINT' { System.out.println(value); }
> >          ;
> >
> >  Appropriate where simpleStatement does not/should not be aware of
> > condition.
>
>I like your approach, but I can't get it to work. It seems that
>something is wrong with the catch of FailedPredicateException. When
>the first IF whose condition evaluates to false is encountered, it
>prints "Ignore", executes the simpleStatement after the semantic
>predicate anyway, and then stops processing, ignoring the rest of the
>AST.

----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/3b93af06/attachment.html 

From parrt at cs.usfca.edu  Wed Nov 28 17:03:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 28 Nov 2007 17:03:07 -0800
Subject: [antlr-interest] Compiler-exploding grammar
In-Reply-To: <b8ceeef70711281639w411fecffueac10b8aded90afb@mail.gmail.com>
References: <mailman.10715.1196257950.2534.antlr-interest@antlr.org>
	<008d01c831ca$b9fd28f0$0300a8c0@chesterford>
	<b8ceeef70711280711g34c0007ci3ca1d142d15838e3@mail.gmail.com>
	<b8ceeef70711280713k4b81a15ybd8eb908e182346@mail.gmail.com>
	<474DEF9B.9030109@jazillian.com>
	<b8ceeef70711281639w411fecffueac10b8aded90afb@mail.gmail.com>
Message-ID: <F53932C4-814A-4C36-A32A-674284FFC89D@cs.usfca.edu>

Hi. Try 3.1 daily build (only java at moment).  I think i fixed  
something in that area.
Ter
On Nov 28, 2007, at 4:39 PM, Steve Bennett wrote:

> On 11/29/07, Andy Tripp <antlr at jazillian.com> wrote:
>> I don't follow. Are you saying that ANTLR generated a single line  
>> that
>> was 14000 characters
>> wide, and javac choked on it? If so, that sounds like a javac bug  
>> to me.
>
> No, it's more than a single line and apparently more than 14000
> characters wide, too. My editor shows about 30 lines in a row at least
> that long, but it truncates them at that 14384 characters.
>
> Looking into it a bit, it looks like some sort of combinatorial
> expansion gone wrong caused by the combination of two parser rules.
> Rule #1:
>
> close_bold_italics
> @after {text_bold=false; text_italics = false;}
> :
>         {text_bold==true && text_italics==true}? =>  -> B_OFF I_OFF
>        |{text_bold==false && text_italics==true}? => -> I_OFF
>        |{text_bold==true && text_italics==false}? => -> B_OFF
>
>        ;
>
> bold_and_italics:
>      {textis("''") && text_italics}? => APOSTROPHES
> {text_italics=false;} ->         ^(I_OFF)
>     |{textis("''") && !text_italics}? => APOSTROPHES
> {text_italics=true;} ->          ^(I_ON)
>     |{textis("'''") && text_bold}? => APOSTROPHES
> {text_bold=false;} ->            ^(B_OFF)
>     |{textis("'''") && !text_bold}? => APOSTROPHES   {text_bold=true;}
> ->             ^(B_ON)
>     |{textis("''''") && text_bold}? => APOSTROPHES
> {text_bold=false;} -> APOSTROPHE ^(B_OFF)
>     |{textis("''''") && !text_bold}? => APOSTROPHES  {text_bold=true;}
> -> APOSTROPHE  ^(B_ON)
>     |{textis("'''''") && text_bold && text_italics}? =>  APOSTROPHES
> {text_bold=false; text_italics=false; } -> ^(B_OFF) ^(I_OFF)
>     |{textis("'''''") && text_bold && !text_italics}? => APOSTROPHES
> {text_bold=false; text_italics=true; }  -> ^(B_OFF) ^(I_ON)
>     |{textis("'''''") && !text_bold && text_italics}? => APOSTROPHES
> {text_bold=true; text_italics=false; }  -> ^(B_ON)  ^(I_OFF)
>     |{textis("'''''") && !text_bold && !text_italics}? =>APOSTROPHES
> {text_bold=true; text_italics=true; }   -> ^(B_ON)  ^(I_ON)
>     ;
>
> The resulting mess:
>
> (text_bold==false && text_italics==true&&textis("''''") && !text_bold)
> ||(text_bold==true && text_italics==false&&textis("'''") && text_bold)
> ||(text_bold==true && text_italics==false&&textis("'''''") &&
> text_bold && !text_italics)
> ||(text_bold==true && text_italics==true&&textis("''''") && ! 
> text_bold)
> ||(text_bold==true && text_italics==true&&textis("'''''") &&
> !text_bold && !text_italics)
> ...
>
> going through *all* the combinations, even the nonsensical ones:
> ...
> ||(text_bold==true && text_italics==true&&textis("'''") && !text_bold)
> ...
>
> Even so, I don't really get why it explodes quite so massively. I also
> can't really say why these two rules are even joined in this cartesian
> product like that. The only thing they really have in common is that
> they produce the same AST node type.
>
> Steve


From lucasontivero at hotmail.com  Wed Nov 28 18:05:09 2007
From: lucasontivero at hotmail.com (Lucas Ontivero)
Date: Thu, 29 Nov 2007 02:05:09 +0000
Subject: [antlr-interest] Update C# VS2005 integration instructions
In-Reply-To: <2d360a1c0711271733p215f367ckbb1f614827ccd6b@mail.gmail.com>
References: <2d360a1c0711271733p215f367ckbb1f614827ccd6b@mail.gmail.com>
Message-ID: <BAY128-W45B03C0D5A163C40E3B28FB5700@phx.gbl>

Hi All,
 
I tried this integration and is ok but after, I put the -debug option:
      <Exec Command="Tool\Antlr3.Tool.exe -debug @(Antlr3)" Outputs="%(Antlr3.OutputFiles)"/>
The code is generated but when I compile it, VS2005 show me 4 errors:
"An object reference is required for the nonstatic field, method, or property 'Antlr.Runtime.Debug.DebugParser.dbg' C:\Documents and Settings\Administrador.ROOT\Escritorio\Compiler\Source\Buba\BubaParser.cs 227 59 Buba"
 
I'm just reporting this.
Bye



> Date: Tue, 27 Nov 2007 17:33:20 -0800> From: brian at todoroff.com> To: antlr-interest at antlr.org> Subject: [antlr-interest] Update C# VS2005 integration instructions> > For those of you working with ANTLR and C# in Visual Studio, I've> updated the integration instructions on the wiki to correctly setup> the output .cs files as dependencies of your .g files. Also made the> minor edit to use the vs2005 message format included in v3.> > http://www.antlr.org/wiki/display/ANTLR3/Integration+with+development+environments> > Tested with the latest .jar and VS2005. Let me know if you experience> any problems.> > Brian
_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE!
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071129/9d5d2ffe/attachment.html 

From william.cai at yahoo.com  Wed Nov 28 18:51:47 2007
From: william.cai at yahoo.com (William Cai)
Date: Wed, 28 Nov 2007 18:51:47 -0800 (PST)
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal expression?
Message-ID: <797813.34172.qm@web34809.mail.mud.yahoo.com>


I'm adding the item. By the way, why not add some check code in the generated parser so that we need not declare EOF explicitly? Is this already done in ANTLR v3, or still in to-do list, or just impossible to implement?

Thanks, William

----- Original Message ----
From: Terence Parr <parrt at cs.usfca.edu>
To: antlr-interest Interest <antlr-interest at antlr.org>
Sent: Thursday, November 29, 2007 12:46:21 AM
Subject: Re: [antlr-interest] Why the generated parser code tolerates illegal expression?




On Nov 28, 2007, at 5:52 AM, William Cai wrote:

Thanks Harald. It works now. Should this be recorded in FAQ? 



Sure!  Somebody sign up and add it ;)


Ter



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/4a0b7c31/attachment.html 

From william.cai at yahoo.com  Wed Nov 28 19:11:07 2007
From: william.cai at yahoo.com (William Cai)
Date: Wed, 28 Nov 2007 19:11:07 -0800 (PST)
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal expression?
Message-ID: <843879.23783.qm@web34815.mail.mud.yahoo.com>


At least, the code marked in red below could be updated, say "
    if(LA(1) != LITERAL_and && LA(1) != EOF) 
        throw Exception(); //blablabla...
" in my case.

Did I miss anything?


    
public 
final 
void 
andexpression() throws 
RecognitionException, TokenStreamException {

       


       
returnAST = null;

       ASTPair 
currentAST = new 
ASTPair();

       AST 
andexpression_AST = null;

       


       
try {      
// for error 
handling

           
notexpression();

           
astFactory.addASTChild(currentAST, returnAST);

           
{

           
_loop34:

           
do 
{

              
if 
((LA(1)==LITERAL_and)) 
{

                  
AST tmp61_AST = null;

                  
tmp61_AST = astFactory.create(LT(1));

                  
astFactory.makeASTRoot(currentAST, tmp61_AST);

                  
match(LITERAL_and);

                  
notexpression();

                  
astFactory.addASTChild(currentAST, returnAST);

              
}

              
else 
{

                  
break 
_loop34;

              
}

              


           
} while 
(true);

           
}

           
andexpression_AST = (AST)currentAST.root;

       
}

       
catch 
(RecognitionException ex) {

           
if 
(inputState.guessing==0) {

              
reportError(ex);

              
consume();

              
consumeUntil(_tokenSet_15);

           } 
else 
{

             
throw 
ex;

           
}

       
}

       
returnAST = andexpression_AST;

    
}




----- Original Message ----
From: William Cai <william.cai at yahoo.com>
To: Terence Parr <parrt at cs.usfca.edu>; antlr-interest Interest <antlr-interest at antlr.org>
Sent: Thursday, November 29, 2007 10:51:47 AM
Subject: Re: [antlr-interest] Why the generated parser code tolerates illegal expression?



I'm adding the item. By the way, why not add some check code in the generated parser so that we need not declare EOF explicitly? Is this already done in ANTLR v3, or still in to-do list, or just impossible to implement?

Thanks, William

----- Original Message ----
From: Terence Parr <parrt at cs.usfca.edu>
To: antlr-interest Interest <antlr-interest at antlr.org>
Sent: Thursday, November 29, 2007 12:46:21 AM
Subject: Re: [antlr-interest] Why the generated parser code tolerates illegal expression?




On Nov 28, 2007, at 5:52 AM, William Cai wrote:

Thanks Harald. It works now. Should this be recorded in FAQ? 



Sure!  Somebody sign up and add it ;)


Ter







-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/6585b5b0/attachment-0001.html 

From william.cai at yahoo.com  Wed Nov 28 19:14:48 2007
From: william.cai at yahoo.com (William Cai)
Date: Wed, 28 Nov 2007 19:14:48 -0800 (PST)
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal expression?
Message-ID: <917868.83695.qm@web34801.mail.mud.yahoo.com>


I'm adding the item. By the way, why not add some check code in the
generated parser so that we need not declare EOF explicitly? Is this
already done in ANTLR v3, or still in to-do list, or just impossible to
implement?

Thanks, William

----- Original Message ----
From: Terence Parr <parrt at cs.usfca.edu>
To: antlr-interest Interest <antlr-interest at antlr.org>
Sent: Thursday, November 29, 2007 12:46:21 AM
Subject: Re: [antlr-interest] Why the generated parser code tolerates illegal expression?




On Nov 28, 2007, at 5:52 AM, William Cai wrote:

Thanks Harald. It works now. Should this be recorded in FAQ? 



Sure!  Somebody sign up and add it ;)


Ter



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071128/8d43e646/attachment.html 

From clifford.heath at gmail.com  Wed Nov 28 20:19:23 2007
From: clifford.heath at gmail.com (Clifford Heath)
Date: Thu, 29 Nov 2007 15:19:23 +1100
Subject: [antlr-interest] Why the generated parser code tolerates
	illegal expression?
In-Reply-To: <797813.34172.qm@web34809.mail.mud.yahoo.com>
References: <797813.34172.qm@web34809.mail.mud.yahoo.com>
Message-ID: <filekb$veb$1@ger.gmane.org>

William Cai wrote:
> 
> I'm adding the item. By the way, why not add some check code in the 
> generated parser so that we need not declare EOF explicitly? Is this 
> already done in ANTLR v3, or still in to-do list, or just impossible to 
> implement?

I suspect that the rules that call the rule you're trying to interpret
will be relying on that rule only succeeding in a valid situation, i.e.
not when followed by EOF. To change this might cause parse errors in the
calling rule, which might have another way of parsing the input that
does succeed.

That said, it would be nice if ANTLRWorks was able to arbitrarily insert
such a rule when you choose to interpret like this.

Clifford Heath.


From harald_m_mueller at gmx.de  Wed Nov 28 22:48:41 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Thu, 29 Nov 2007 07:48:41 +0100
Subject: [antlr-interest] StringTemplate is Ok,
	but what about "Action code"?
In-Reply-To: <958786.55980.qm@web55907.mail.re3.yahoo.com>
Message-ID: <20071129064839.5C0A011EC90@www.antlr.org>

Ah yes - you are right! - so what we need is a "generic language" for
expressing

* special actions on the token level - string handling
* special actions in the grammar - lookaheads
* special actions for tree building - when you want to build "something
special"

and some way of translating that generic language to whatever action target
language we want - don't we? This sounds possible (????? - not thought more
than 5 seconds about it, I confess), even if it's some hard work. But if
someone throws together many ANTLR3 grammars and looks for the code, maybe
something could come out ... (even if - as an afterthought - it is found
it's NOT possible ;-) ).

Regards
Harald

> -----Original Message-----
> From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
> Sent: Wednesday, November 28, 2007 7:07 PM
> To: Harald Mueller; Cristian Peraferrer; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] StringTemplate is Ok, but what 
> about "Action code"?
> 
> Harald--
> 
> I suspect you misinterpreted Cristian's question.  It is not 
> uncommon to find a need use the same grammar with multiple 
> target languages, or (more commonly) to want to take a 
> grammar that someone developed for an application written in 
> one target language, say C++, to use for a second target 
> language such as Java.  If you have to modify the actions in 
> the grammar, you end up with two copies of the grammar that 
> need to be kept in synch and the start of a maintenance nightmare.
> 
> --Loring
> 
> 
> ----- Original Message ----
> > From: Harald Mueller <harald_m_mueller at gmx.de>
> > To: Cristian Peraferrer <corellian.c at gmail.com>; 
> > antlr-interest at antlr.org
> > Sent: Wednesday, November 28, 2007 7:15:41 AM
> > Subject: Re: [antlr-interest] StringTemplate is Ok, but 
> what about "Action code"?
> > 
> > Hi -
> > 
> > Why would you want to do this?? - whatever you do in 
> actions, you need
> > 
>  to express some sort of "algorithm." I do not see another
> > possibility
> > 
>  than to have SOME language that will express what you need. Java
> > is
> > 
>  perfect: It will decouple you (they say) from any plat form
> > specifics,
> > 
>  because you write it once, and it runs everywhere ;-)
> > 
> > If you do not believe this, you must invest in your own 
> infrastructure
> > 
>  for this: Define a language (generic bytecode? Turing
> > machine
> > 
>  statements ;-) ?) and deliver in-process compilers which 
> will transform
> > your
> > 
>  selected language to something running on the target system.
> > 
> > Not even low coupling with the target language is a worthwhile
> > 
>  consideration most times, isn't it? - except for meta-tools like e.g.
> > ANTLR
> > 
>  itself.
> > 
> > Regards
> > Harald M.
> > 
> > 
> > -------- Original-Nachricht --------
> > > Datum: Tue, 27 Nov 2007 16:35:38 +0100
> > > Von: Cristian Peraferrer
> > > An: antlr-interest at antlr.org
> > > Betreff: [antlr-interest]  StringTemplate is Ok,    but what
> > about
> > 
>  "Action code"?
> > 
> > > Hi,
> > > 
> > > With StringTemplate we can achieve low coupling with the target 
> > > language. But what about Action code?
> > > How we should achieve low coupling with the target language?
> > > 
> > > Thanks in advance,
> > > Cristian.
> > > 
> > > --
> > > GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch
> > 
> > --
> > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
> > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> > 
> 
> 
> 
> 
>       
> ______________________________________________________________
> ______________________
> Get easy, one-click access to your favorites. 
> Make Yahoo! your homepage.
> http://www.yahoo.com/r/hs 
> 


From Ramon.Verbruggen at quintiq.com  Thu Nov 29 00:41:36 2007
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Thu, 29 Nov 2007 09:41:36 +0100
Subject: [antlr-interest] Line/char positions in C runtime
In-Reply-To: <mailman.10543.1196189862.2534.antlr-interest@antlr.org>
References: <mailman.10543.1196189862.2534.antlr-interest@antlr.org>
Message-ID: <474E894F.BB97.0087.0@quintiq.com>

Hi Stuart,

Sorry for the late reply, I hope someone beat me to it :-)

I'm an ANTLR newbie myself, but I also use the C runtime (thanks Jim!)
to generate ASTs.

Maybe I am misinterpreting (no pun intended) your question, but I just
use the line and position information that is already in the AST nodes:

ANTLR3_UINT64 linenr = treenode->getLine(treenode); //linenr is one
based
ANTLR3_UINT32 column = treenode->getCharPositionInLine(treenode);
//column is zero based

If you use imaginary tokens for AST construction, these do not have
their locations set automatically, but you can set those from your
grammar, see 'the book', section 7.5, page 188-189, 'Deriving Imaginary
Nodes from Real Tokens'

I did notice however that if linenr = 1 and column > 0 I have to add 1
to the column to get the correct text location (don't ask me why...)

I hope this helps,

Ramon Verbruggen


> Hiya,
> 
> I'm still in my early days of ANTLRing, but I've dug around the
mailing
> lists and can't find much help on this issue; any suggestions or
pointers
> very welcome.
> 
> Basically, I want to get line/character position information into the
AST
> when using the C runtime - and although I've found stuff on doing
this in
> Java, I'm not as clear about how to extend the C runtime
architecture. I'm
> using C so I can integrate the ANTLR parser into a Perl XS module -
all this
> works fine. I'm using gcc on Windows, MinGW and CDT under Eclipse. 
> 
> The good news is that all this works fine and I can get the AST into
Perl
> and process it there with no problems. The bad news is I have no idea
how to
> map the AST positioning back to the original text, which would be a
big step
> forward.
> 
> Any ideas or suggestions gratefully received
> --Stuart



This message contains information that may be privileged or confidential
and is the property of Quintiq. It is only intended for the person to
whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute or use
this message or any part thereof. If you have received this message in
error, please notify the sender immediately and delete all copies of
this message. Please note that e-mails are susceptible to change,
therefore they are not binding.

From dannybe at gmail.com  Thu Nov 29 11:21:44 2007
From: dannybe at gmail.com (Dan Bailey)
Date: Thu, 29 Nov 2007 19:21:44 +0000
Subject: [antlr-interest] Using semantic predicates with antlr 3 and python
	runtime
Message-ID: <c994a9900711291121k1a27de0an12b3ae5599f09e7c@mail.gmail.com>

Hi,

I am writing a parser for mel (a language based on tcl) and am having a lot
of problems getting the intricacies of the language to parse.

One of the main problems I am having is through using the semantic
predicates, both to make the grammar easier to read and to make a few of the
statements conditional on variables.

Firstly, if someone could explain the difference between semantic predicates
and gated semantic predicates that would be useful?

One of the errors I have come across is when passing variables around as
arguments, antlr does not pass the variables into the syntactic predicates
it generates for some reason (the synpred1() type functions). However, I
have found that I can edit this file by hand and add in the variables to the
arguments manually, but clearly this is laborious and time-consuming.

Here is a simple example of some mel code which I have had to resort to
semantic predicates in order to try and get round:


(1)  function;
(2)  function -flag;
(3)  function("arg");
(4)  function(3+4);
(5)  function (3+4) -flag;
(6)  $a = `function`;
(7)  $a = `function(function2)`;
(8)  $a = `function -flag`;
(9)  function(`function2 -flag`);


All of the above commands are completed valid, which demonstrates the
variety in the language in function calls alone.

This is the solution I have come up with in antlr grammar:

method[ticks]:
        { ticks == "ticksallowed" }? => '`' methodcall["ticksnotallowed"]
'`' |
        methodcall[ticks]
    ;

methodcall[ticks]:
        methodname '(' expression[ticks] ')' (methodargs[ticks])* |
        methodname '(' expression[ticks] (',' expression[ticks])+ ')' |
        methodname methodargs[ticks] (methodargs[ticks])* |
        methodname ('('')')?
    ;

methodargs[ticks]: expression[ticks];

expression[ticks]: flag | number | STRING | method[ticks];

I have tried to simplify this to demonstrate the problem. In (6) for
example, in order to match the second backtick to an ending tick (rather
than the start of a new backticked method call which is clearly not
allowed), I pass around a variable to halt the parser from trying to execute
the backtick strand if it is already inside a backtick.

I have had many problems trying to get this to work though. Am I going about
this in the correct manor, or can someone suggest a better approach to this?

Thanks,
Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071129/06287959/attachment.html 

From rob.harrop at springsource.com  Thu Nov 29 11:49:41 2007
From: rob.harrop at springsource.com (Rob Harrop)
Date: Thu, 29 Nov 2007 13:49:41 -0600 (CST)
Subject: [antlr-interest] OutOfMemoryException when parsing incorrect
 input
In-Reply-To: <9c0715e40711281255y33519980h58f04c6cbc9e6489@mail.gmail.com>
Message-ID: <9725238.42741196365781171.JavaMail.root@spring04.managed.contegix.com>

Thanks Clinton! That works a treat.

Rob

----- Original Message -----
From: "Clinton Roy" <clinton.roy at gmail.com>
To: "ANTLR List" <antlr-interest at antlr.org>
Sent: Wednesday, November 28, 2007 8:55:09 PM (GMT) Europe/London
Subject: Re: [antlr-interest] OutOfMemoryException when parsing incorrect input

Hi Rob,

On Nov 29, 2007 3:55 AM, Rob Harrop <rob.harrop at springsource.com> wrote:

> IDENTIFIER
>  : IDENTIFIER_PART ('.' IDENTIFIER_PART) *
>
> fragment
> IDENTIFIER_PART
>  : (ALPHA | DIGIT | '_' | '$' | '-') *

Don't let your token rules allow empty matches, if I replace these
zero-to-many matches with one-to-many matches (+) things seem a little
more happy.

More of a rule of thumb than a specific solution to your problem, hope
that helps,
-- 
Clinton Roy
CSIRO - Robotics Platform Engineer
Autonomous Systems Lab

humbug.org.au  - Brisbane Unix Group
azure.humbug.org.au/~croy/blog - Blog
flickr.com/photos/croy/ - Photos


-- 
Rob Harrop
Interface21 Limited

Registered in England & Wales - Registration Number 5187766
Registered Office: A2 Yeoman Gate, Yeoman Way, Worthing, West Sussex, BN13 3QZ, UK

This e-mail and any attachments transmitted with it are strictly confidential and intended solely for the person or entity to whom they are addressed. Unauthorised use, copying, disclosure or distribution is prohibited. If you receive this e-mail in error please notify the sender immediately and then delete it along with any attachments. E-mails should be checked by the recipient to ensure that there are no viruses and Interface21 does not accept any responsibility if this is not done. Any views or opinions presented are solely those of the author and do not necessarily represent those of Interface21.


From brian at todoroff.com  Thu Nov 29 12:20:46 2007
From: brian at todoroff.com (Brian Todoroff)
Date: Thu, 29 Nov 2007 12:20:46 -0800
Subject: [antlr-interest] Update C# VS2005 integration instructions
In-Reply-To: <BAY128-W45B03C0D5A163C40E3B28FB5700@phx.gbl>
References: <2d360a1c0711271733p215f367ckbb1f614827ccd6b@mail.gmail.com>
	<BAY128-W45B03C0D5A163C40E3B28FB5700@phx.gbl>
Message-ID: <2d360a1c0711291220w841ecdav63b8f2466d0d7780@mail.gmail.com>

Looks like a bug in the C# code generator and has nothing to do with
the integration.  BTW you want to put the -message-format vs2005
option back in to your java command so that error messages generated
by antlr.Tool work correctly in the error box in VS:
<Exec Command="java org.antlr.Tool -debug -message-format vs2005
@(Antlr3)" Outputs="%(Antlr3.OutputFiles)" />

Don't use the debugger, so I could be off here, but I believe the work
around should be to change the offending line to a member declaration
only:
     protected ITreeAdaptor adaptor;
and add the initialization to both constructors for the class:
     adaptor = new DebugTreeAdaptor(dbg, new CommonTreeAdaptor());

Ugly since you'll need to do it by hand each time you generate, but it
should keep you moving forward until the generator can get fixed - far
out of my depth on that one...

Brian


On Nov 28, 2007 6:05 PM, Lucas Ontivero <lucasontivero at hotmail.com> wrote:
>
> Hi All,
>
>  I tried this integration and is ok but after, I put the -debug option:
>        <Exec Command="Tool\Antlr3.Tool.exe -debug @(Antlr3)"
> Outputs="%(Antlr3.OutputFiles)"/>
>
> The code is generated but when I compile it, VS2005 show me 4 errors:
>  "An object reference is required for the nonstatic field, method, or
> property 'Antlr.Runtime.Debug.DebugParser.dbg' C:\Documents and
> Settings\Administrador.ROOT\Escritorio\Compiler\Source\Buba\BubaParser.cs
> 227 59 Buba"
>
>  I'm just reporting this.
>  Bye
>
>
>  ________________________________
>
>  > Date: Tue, 27 Nov 2007 17:33:20 -0800
> > From: brian at todoroff.com
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Update C# VS2005 integration instructions
>
>
> >
> > For those of you working with ANTLR and C# in Visual Studio, I've
> > updated the integration instructions on the wiki to correctly setup
> > the output .cs files as dependencies of your .g files. Also made the
> > minor edit to use the vs2005 message format included in v3.
> >
> >
> http://www.antlr.org/wiki/display/ANTLR3/Integration+with+development+environments
> >
> > Tested with the latest .jar and VS2005. Let me know if you experience
> > any problems.
> >
> > Brian
>
>
> ________________________________
> Express yourself instantly with MSN Messenger! MSN Messenger
>

From lgcraymer at yahoo.com  Thu Nov 29 13:55:26 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 29 Nov 2007 13:55:26 -0800 (PST)
Subject: [antlr-interest] StringTemplate is Ok,
	but what about "Action code"?
Message-ID: <517110.51975.qm@web55909.mail.re3.yahoo.com>

Harald--

I have a working system that provides the necessary abstraction of ANTLR from the target language--see the Yggdrasil manual I just posted to antlr.org.

--Loring

----- Original Message ----
> From: Harald M. M?ller <harald_m_mueller at gmx.de>
> To: antlr-interest at antlr.org
> Sent: Wednesday, November 28, 2007 10:48:41 PM
> Subject: Re: [antlr-interest] StringTemplate is Ok, but what about "Action code"?
> 
> Ah yes - you are right! - so what we need is a "generic language" for
> expressing
> 
> * special actions on the token level - string handling
> * special actions in the grammar - lookaheads
> * special actions for tree building - when you want to build "something
> special"
> 
> and some way of translating that generic language to whatever
> action
> 
 target
> language we want - don't we? This sounds possible (????? - not
> thought
> 
 more
> than 5 seconds about it, I confess), even if it's some hard work.
> But
> 
 if
> someone throws together many ANTLR3 grammars and looks for the
> code,
> 
 maybe
> something could come out ... (even if - as an afterthought - it
> is
> 
 found
> it's NOT possible ;-) ).
> 
> Regards
> Harald
> 
> > -----Original Message-----
> > From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
> > Sent: Wednesday, November 28, 2007 7:07 PM
> > To: Harald Mueller; Cristian Peraferrer; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] StringTemplate is Ok, but what 
> > about "Action code"?
> > 
> > Harald--
> > 
> > I suspect you misinterpreted Cristian's question.  It is not 
> > uncommon to find a need use the same grammar with multiple 
> > target languages, or (more commonly) to want to take a 
> > grammar that someone developed for an application written in 
> > one target language, say C++, to use for a second target 
> > language such as Java.  If you have to modify the actions in 
> > the grammar, you end up with two copies of the grammar that 
> > need to be kept in synch and the start of a maintenance nightmare.
> > 
> > --Loring
> > 
> > 
> > ----- Original Message ----
> > > From: Harald Mueller 
> > > To: Cristian Peraferrer ; 
> > > antlr-interest at antlr.org
> > > Sent: Wednesday, November 28, 2007 7:15:41 AM
> > > Subject: Re: [antlr-interest] StringTemplate is Ok, but 
> > what about "Action code"?
> > > 
> > > Hi -
> > > 
> > > Why would you want to do this?? - whatever you do in 
> > actions, you need
> > > 
> >  to express some sort of "algorithm." I do not see another
> > > possibility
> > > 
> >  than to have SOME language that will express what you need. Java
> > > is
> > > 
> >  perfect: It will decouple you (they say) from any plat form
> > > specifics,
> > > 
> >  because you write it once, and it runs everywhere ;-)
> > > 
> > > If you do not believe this, you must invest in your own 
> > infrastructure
> > > 
> >  for this: Define a language (generic bytecode? Turing
> > > machine
> > > 
> >  statements ;-) ?) and deliver in-process compilers which 
> > will transform
> > > your
> > > 
> >  selected language to something running on the target system.
> > > 
> > > Not even low coupling with the target language is a worthwhile
> > > 
> >  consideration most times, isn't it? - except for meta-tools
> like
> 
 e.g.
> > > ANTLR
> > > 
> >  itself.
> > > 
> > > Regards
> > > Harald M.
> > > 
> > > 
> > > -------- Original-Nachricht --------
> > > > Datum: Tue, 27 Nov 2007 16:35:38 +0100
> > > > Von: Cristian Peraferrer
> > > > An: antlr-interest at antlr.org
> > > > Betreff: [antlr-interest]  StringTemplate is Ok,    but what
> > > about
> > > 
> >  "Action code"?
> > > 
> > > > Hi,
> > > > 
> > > > With StringTemplate we can achieve low coupling with the target 
> > > > language. But what about Action code?
> > > > How we should achieve low coupling with the target language?
> > > > 
> > > > Thanks in advance,
> > > > Cristian.
> > > > 
> > > > --
> > > > GPG Key-ID: 0x564903FA - Jabber ID: corellian at swissjabber.ch
> > > 
> > > --
> > > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
> > > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> > > 
> > 
> > 
> > 
> > 
> >       
> > ______________________________________________________________
> > ______________________
> > Get easy, one-click access to your favorites. 
> > Make Yahoo! your homepage.
> > http://www.yahoo.com/r/hs 
> > 
> 
> 




      ____________________________________________________________________________________
Never miss a thing.  Make Yahoo your home page. 
http://www.yahoo.com/r/hs

From dave at badgers-in-foil.co.uk  Thu Nov 29 14:25:20 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 29 Nov 2007 22:25:20 +0000
Subject: [antlr-interest] [ANN] antlr3-maven-plugin 1.0-beta-1 released
Message-ID: <20071129222519.GA28069@badgers-in-foil.co.uk>

Hi!

The ANTLRv3 plugin for Maven has just be released at it's new home on
mojo.codehaus.org:

  http://mojo.codehaus.org/antlr3-maven-plugin/

As a result of living at the Codehaus, the plugin is now available from
the central Maven repository, and so is simpler to use than earlier
releases.


Enjoy!
dave

-- 
http://david.holroyd.me.uk/

From alex at brill.no  Fri Nov 30 07:28:38 2007
From: alex at brill.no (Alexander Brill)
Date: Fri, 30 Nov 2007 16:28:38 +0100
Subject: [antlr-interest] No t in title
Message-ID: <e7a9f7a0711300728u7cfcef1emaf7979e032266e6a@mail.gmail.com>

Hi,

I'm rather new to antlr, just started picking it up a couple of days ago as
I wanted a better way to parse some message files to a object in Java.

What I'd like to have is that the :KEY VALUE pair is to be saved in a Map
for easy retrieval.

I've come a long way in setting it up - but there are some quirks I haven't
quite figured out yet. All the statements, but the 'message' statement,
works on its own. But its the 'message' statement thats going to tie it all
together. tspobject.g and some test data attached below.

What I could figure out was that the T token is messing things up a bit. It
makes all my keys starting with T (:TITLE) go fubar. What am I missing?

tspobject.g:

grammar tspobject;
@header {
package test;
import java.util.HashMap;
}

@lexer::header {package test}

@members {
HashMap memory = new HashMap();
}


char    :    UPPERALPHA|LOWERALPHA|INT|WS        ;
attrname    :    UPPERALPHA +            ;
year    :    INT INT INT INT            ;
month    :    INT INT                ;
date    :    INT INT                ;
hour    :    INT INT                ;
minute    :    INT INT                ;
second    :    INT INT                ;
milli    :    INT INT INT                ;
gmt    :    INT INT                ;
str    :    char*                ;
list    :    LPAREN (QUOTE str QUOTE)* RPAREN        ;
message    :    LPAREN MESSAGE keypair* RPAREN        ;
attrvalue    :    list|QUOTE str QUOTE|INT*            ;
keypair    :    WS? COLON attrname WS* attrvalue        ;
timestamp    :    ALPHA year DASH month DASH date T hour COLON minute COLON
second DOT milli PLUS gmt;


T    :    'T'                ;
MESSAGE    :    'MESSAGE'                ;
INT    :    '0'..'9'                ;
UPPERALPHA    :    'A'..'Z'                ;
LOWERALPHA    :    'a'..'z'                ;
WS     :      (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}     ;
QUOTE    :    '"'                ;
DASH    :    '-'                ;
ALPHA    :    '@'                ;
DOT    :    '.'                ;
PLUS    :    '+'                ;
RPAREN    :    ')'                ;
LPAREN    :    '('                ;
COLON    :    ':'                ;
SEMI    :    ';'                ;


Testdata:
(MESSAGE
 :TOPIC "en"
 :PAGE 100
 :INITIALS "lmg"
 :REVISION 0
 :SOURCE "The Journalist"
 :CUSTOMER "The Customer"
 :TICKERS ("nyhe" "enov" "vind" "utby" "nor" "poli")
 :BYLINE "Anton Oter"
 :TIMESTAMP @2007-02-02T07:09:28.484+01
 :PRIORITY 2
 :TITLE "Some title"
 :BODY
 ("Line1"
  "Line2.")
 :SIGNATURE
 ("-- "
  "COMPANY"
  "Anton Oter"))


-- 
Med vennlig hilsen,
Alexander Brill
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071130/408529d9/attachment.html 

From r.mark.volkmann at gmail.com  Fri Nov 30 07:37:19 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Fri, 30 Nov 2007 09:37:19 -0600
Subject: [antlr-interest] validating semantic predicates
Message-ID: <f0fcc6820711300737h6873a096t9045bf1ad335d9ba@mail.gmail.com>

I'm trying to determine how to use validating semantic predicates in a
rule that has no terminating token. Here's an example of the approach
I've tried.

statement
  : simpleStatement
  | ^('if' c=condition { $c.result }? simpleStatement)
  ;
  catch[FailedPredicateException fpe] {
    consumeUntil(input, STMT_TERMINATOR);
    input.consume();
  }

The problem is that simpleStatements have no terminating token. They
are a keyword optionally foIlowed by a number. I know whether to
expect the number based on the keyword. There's no such thing as
STMT_TERMINATOR in my grammar.

I think in order to continue parsing when the condition evaluates to
false, I have to consume all the tokens that make up the
simpleStatement being skipped. How can I consume those tokens?

-- 
R. Mark Volkmann
Object Computing, Inc.

From isabelle.perseil at enst.fr  Fri Nov 30 07:51:49 2007
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Fri, 30 Nov 2007 16:51:49 +0100
Subject: [antlr-interest] EXTENDED DEADLINE for UML&AADL'2008 CfP : December,
	7
Message-ID: <47503195.1080009@enst.fr>

**********************************************************************
                    CALL FOR PAPERS :  UML&AADL?2008
          http://www.artist-embedded.org/artist/Topics,1199.html

               Workshop held in conjunction with ICECCS 2008
               The thirteenth IEEE International Conference on
                   Engineering of Complex Computer Systems
                           http://www.iceccs.org/
       http://www.compeng.ulster.ac.uk/events/ecbs2008/workshops.php
                             April 02 , 2008
                        Belfast, Northern Ireland

************************************************************************

                     Submission deadline: December 07, 2007
                     --------------------------------------


The first OMG sponsored ?UML & AADL? workshop was held at ENST Paris
(Telecom Paris) in 2006. The workshop was focused on embedded real-time
software-intensive systems that are usually found in the avionic,
vehicular control and aerospace fields.
The workshop clearly had a main concern which was to determine what
architectural levels would be better described with UML as opposed to AADL
and vice versa, how to use these two standardised languages together
(integrating them using an MDA approach, e.g.: TOPCASED).

The second edition of the workshop, ?UML&AADL?2007? was held in
conjunction with the 12th International Conference on Engineering of
Complex Computer Systems (ICECS07). The AADL standard had just been
completed with a behaviour annex proposal and the MARTE UML profile was
about to be accepted. Thus, the main concerns of the second edition of the
workshop were centred around which parts of the MARTE UML profile could be
incorporated into an AADL PSM (Platform Specific Model) without overly
complicating the language, how to maintain the non-functional properties
and aspects of the design throughout the whole software engineering
process and how to specify functional and non-functional properties of
AADL components.

The third edition of the workshop, ?UML&AADL?2008?  will again be held
with the ICECCS conference since many concerns are found to be common
and/or complementary. The proposed topics of the workshop are revolve
around the architecture modeling of complex systems. This year, the main
concerns are:
   ? How to handle code generation from a high-level specification
   ? How to ensure architecture model verification
   ? How to model DRE (Distributed Real-time Embedded) systems with an MDA
     approach
   ? How to carry out scheduling analysis from system models

Topics:
======

New real-time systems have increasingly complex architectures because of
the intricacy of the multiple interdependent features they have to manage.
They must meet new requirements of reusability, interoperability,
flexibility and portability. These new dimensions favour the use of an
architecture description language that offers a global vision of the
system, and which is particularly suitable for handling real-time
characteristics.

Due to the even more increased complexity of distributed, real-time and
embedded systems (DRE), the need for a model-driven approach is more
obvious in this domain than in monolithic RT systems. The purpose of this
workshop is to provide an opportunity to gather researchers and industrial
practitioners to survey existing efforts related to behaviour modelling
and model-based analysis of DRE systems.

This workshop seeks contributions from researchers and practitioners
interested in all aspects of the representation, analysis, and
implementation of DRE system behaviour and/or architecture models. To this
end, we solicit short papers (~6 pages long) as well as full papers (not
more than 20 pages) related to, but not limited to, the following
principal topics:

    ? Code generation from UML (action language) or an ADL (for instance,
      building a runtime corresponding to what is specified in an ADL
      description, code patterns) towards multiple target languages.
      Presentation of code genaration frameworks, tool suites or
      component-based programming  will be particularly appreciated
    ? Model verification to verify functional properties against
      constraints
      given in the architecture model
    ? Verification of non-functional properties given in the architecture
       model against constraints given in the model
    ? Modelling DRE systems with languages such as UML and/or AADL, ACME,
      Wright, or other ADLs
         o Behaviour modelling (concerns described in the Scope part)
         o How to enhance modelling languages and ADLs to capture real
           time,
           embedded and distributed aspects in a convenient manner
         o How to specify real-time requirements and characteristics in
           modelling languages

Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.

Submission and Publication
==========================
To contribute, please send a position paper or a technical paper to
agusti[dot]canals[at]c-s[dot]fr with ?ICECCS08 UML&AADL Workshop? in the
title. Papers should not exceed 6 pages. Submitted manuscripts should be
in English and formatted in the style of the IEEE Computer Society
Proceedings Format. Preferably, submissions should be in PDF format.

Workshop proceedings will be distributed to all participants and made
available through the workshop website.

The seven best papers and a workshop overview will
be published in the IEEE Computer Society Press Proceedings.

Additionally, all selected papers will be availables in an ?IEEE Xplore
Digital Library File Cabinet?.

IMPORTANT DATES
===============
Submission deadline:             December 07, 2007
All Notification of acceptance:  December 15, 2007
Workshop date :                  April 02, 2008


Organizers
==========
Agusti Canals (CS, France)
S?bastien G?rard (CEA-LIST, France)
Isabelle Perseil (ENST, France)


Programme Committee:
Yamine Ait Ameur (LISI / ENSMA, France)
Jean-Paul Bodeveix (IRIT, France)
Agusti Canals (CS, France)
Mamoun Filali (IRIT, France)
Madeleine Faug?re (THALES, France)
Robert France (Colorado State University, USA)
S?bastien G?rard (CEA-LIST, France)
Irfan Hamid (ENST, France)
Bruce Lewis (US Army AMCOM)
Dominique Mery (LORIA, France)
Thierry Millan (IRIT, France)
Richard Paige (University of York, United Kingdom)
Douglas C. Schmidt (Vanderbild University, USA)
Fran?oise Simonot Lion (LORIA, France)
Oleg Sokolsky (University of Pennsylvania, USA)
Jing Sun (University of Auckland, New Zealand)
Martin T?rngren (KTH - Royal Institute of Technology, Sweden)
Thomas Vergnaud (CNES, France)
Fran?ois Vernadat (CNRS-LAAS, France)
Sergio Yovine (CNRS-Verimag, France)
Andr? Windisch (EADS Military Aircraft, Germany)



------------------------------------------------------------------------
Isabelle PERSEIL | tel : (+33) (0)6 10 75 52 84
ENST-INFRES      |
46 rue Barrault  | http://www.infres.enst.fr/~perseil/
75013 PARIS      | e-mail: isabelle.perseil at enst.fr
------------------------------------------------------------------------













From harald_m_mueller at gmx.de  Fri Nov 30 08:47:42 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Fri, 30 Nov 2007 17:47:42 +0100
Subject: [antlr-interest] validating semantic predicates
In-Reply-To: <f0fcc6820711300737h6873a096t9045bf1ad335d9ba@mail.gmail.com>
References: <f0fcc6820711300737h6873a096t9045bf1ad335d9ba@mail.gmail.com>
Message-ID: <20071130164742.55250@gmx.net>

Hi -

You are already in a tree-parser, aren't you?
So some syntax parser has produced your trees (I don't assume you create the trees manually in some other way).
That syntax parser can then - in its tree-building rules (-> ...) - create trees which actually DO have terminating tokens - there is some documentation on such artificial tokens in the Wiki and also - I think - in the ANTLR book.
Hope this helps ...
Regards
Harald

-------- Original-Nachricht --------
> Datum: Fri, 30 Nov 2007 09:37:19 -0600
> Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] validating semantic predicates

> I'm trying to determine how to use validating semantic predicates in a
> rule that has no terminating token. Here's an example of the approach
> I've tried.
> 
> statement
>   : simpleStatement
>   | ^('if' c=condition { $c.result }? simpleStatement)
>   ;
>   catch[FailedPredicateException fpe] {
>     consumeUntil(input, STMT_TERMINATOR);
>     input.consume();
>   }
> 
> The problem is that simpleStatements have no terminating token. They
> are a keyword optionally foIlowed by a number. I know whether to
> expect the number based on the keyword. There's no such thing as
> STMT_TERMINATOR in my grammar.
> 
> I think in order to continue parsing when the condition evaluates to
> false, I have to consume all the tokens that make up the
> simpleStatement being skipped. How can I consume those tokens?
> 
> -- 
> R. Mark Volkmann
> Object Computing, Inc.

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From troy.daniels at baesystems.com  Fri Nov 30 09:15:23 2007
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Fri, 30 Nov 2007 12:15:23 -0500
Subject: [antlr-interest] (no subject)
Message-ID: <40CBD611A793EA438464B91E749DD8B0033E18C5@blums0017.alphatech.com>

I'm using antlr 2.7.6 and I'm trying to write a parser rule of the form

rule: rule1 rule2* rule3?

With two levels of look ahead, there's ambiguity between rule2 and
rule3. The third token would remove the ambiguity. Is there a way to
increase the look ahead for just one rule? (Setting k only appears to be
valid in the grammar file options, not in rule options).

I tried using a syntactic predicate.

rule: rule1 ((TOK1 TOK2 TOK3)=> rule2*) rule3?

but antlr ignored it, since it doesn't consider (...)* to be multiple
options. Adding a blank alternative seems hackish:

rule: rule1 ((TOK1 TOK2 TOK3)=> rule2*|/* */) rule3?

Is there a good way to handle this sort of problem?

Troy


P.S.  I also posted this on Jguru, but there doesn't seem to be much
action in the Antlr forum there.  Is this a better place for such
questions?

From r.mark.volkmann at gmail.com  Fri Nov 30 09:20:26 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Fri, 30 Nov 2007 11:20:26 -0600
Subject: [antlr-interest] validating semantic predicates
In-Reply-To: <20071130164742.55250@gmx.net>
References: <f0fcc6820711300737h6873a096t9045bf1ad335d9ba@mail.gmail.com>
	<20071130164742.55250@gmx.net>
Message-ID: <f0fcc6820711300920m3df82d3n399d82eea3c46a32@mail.gmail.com>

On 11/30/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> Hi -
>
> You are already in a tree-parser, aren't you?

Yes.

> So some syntax parser has produced your trees (I don't assume you create the trees manually in some other way).

Right.

> That syntax parser can then - in its tree-building rules (-> ...) - create trees which actually DO have terminating tokens - there is some documentation on such artificial tokens in the Wiki and also - I think - in the ANTLR book.

Genius! Thanks!

I think I'm almost there, but it still stops processing after it
completes the catch block.

Here's the AST I'm processing.

 (SCRIPT (ADD 10 END) (ADD 20 END) (PRINT END) (SUBTRACT 90 END) (IF
POSITIVE (PRINT END)) (ADD 10 END) (IF NEGATIVE (PRINT END)) (IF (< 0)
(ADD 100 END)) (IF (< 40) (SUBTRACT 10 END)) (IF (> 30) (SUBTRACT 20
END)) (PRINT END))

Everything works up to the first IF. At that point the value is 10 +
20 - 90 which is -60 so the first if fails since the value isn't
positive. Here's the rule with the catch.

statement
  : simpleStatement
  | ^('IF' c=condition { $c.result }? simpleStatement)
  ;
  catch[FailedPredicateException fpe] {
    System.err.println("recoving and continuing");
    consumeUntil(input, END);
    input.consume();
  }

I get the println output, but the ADD that follows isn't executed. I
know because the action for ADD prints out something every time it
runs. Any idea what processing stops after the catch executes?

> Hope this helps ...
> Regards
> Harald
>
> -------- Original-Nachricht --------
> > Datum: Fri, 30 Nov 2007 09:37:19 -0600
> > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > An: antlr-interest at antlr.org
> > Betreff: [antlr-interest] validating semantic predicates
>
> > I'm trying to determine how to use validating semantic predicates in a
> > rule that has no terminating token. Here's an example of the approach
> > I've tried.
> >
> > statement
> >   : simpleStatement
> >   | ^('if' c=condition { $c.result }? simpleStatement)
> >   ;
> >   catch[FailedPredicateException fpe] {
> >     consumeUntil(input, STMT_TERMINATOR);
> >     input.consume();
> >   }
> >
> > The problem is that simpleStatements have no terminating token. They
> > are a keyword optionally foIlowed by a number. I know whether to
> > expect the number based on the keyword. There's no such thing as
> > STMT_TERMINATOR in my grammar.
> >
> > I think in order to continue parsing when the condition evaluates to
> > false, I have to consume all the tokens that make up the
> > simpleStatement being skipped. How can I consume those tokens?
> >
> > --
> > R. Mark Volkmann
> > Object Computing, Inc.
>
> --
> Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
>


-- 
R. Mark Volkmann
Object Computing, Inc.

From harald_m_mueller at gmx.de  Fri Nov 30 09:36:04 2007
From: harald_m_mueller at gmx.de (Harald Mueller)
Date: Fri, 30 Nov 2007 18:36:04 +0100
Subject: [antlr-interest] (no subject)
In-Reply-To: <40CBD611A793EA438464B91E749DD8B0033E18C5@blums0017.alphatech.com>
References: <40CBD611A793EA438464B91E749DD8B0033E18C5@blums0017.alphatech.com>
Message-ID: <20071130173604.55220@gmx.net>

Hi -

Use k=3 for the whole grammar. ANTLR will "optimize away" superfluous lookaheads in its follow-set computations.

I simply write k=5 or k=6, if I get stuck with a lookahead - one usually sees pretty fast whether it's only a problem of a too small finite lookahead, or whether the language is not "ANTLR-LL(k)" for any k (ANTLR 2.x's LL(k) is not "real LL(k)" - it is somewhat weaker because it unifies certain follow-sets ... therefore the term "ANTLD-LL(k)" above).

Regards
Harald

-------- Original-Nachricht --------
> Datum: Fri, 30 Nov 2007 12:15:23 -0500
> Von: "Daniels, Troy \\(US SSA\\)" <troy.daniels at baesystems.com>
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] (no subject)

> I'm using antlr 2.7.6 and I'm trying to write a parser rule of the form
> 
> rule: rule1 rule2* rule3?
> 
> With two levels of look ahead, there's ambiguity between rule2 and
> rule3. The third token would remove the ambiguity. Is there a way to
> increase the look ahead for just one rule? (Setting k only appears to be
> valid in the grammar file options, not in rule options).
> 
> I tried using a syntactic predicate.
> 
> rule: rule1 ((TOK1 TOK2 TOK3)=> rule2*) rule3?
> 
> but antlr ignored it, since it doesn't consider (...)* to be multiple
> options. Adding a blank alternative seems hackish:
> 
> rule: rule1 ((TOK1 TOK2 TOK3)=> rule2*|/* */) rule3?
> 
> Is there a good way to handle this sort of problem?
> 
> Troy
> 
> 
> P.S.  I also posted this on Jguru, but there doesn't seem to be much
> action in the Antlr forum there.  Is this a better place for such
> questions?

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From harald_m_mueller at gmx.de  Fri Nov 30 13:08:30 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Fri, 30 Nov 2007 22:08:30 +0100
Subject: [antlr-interest] validating semantic predicates
In-Reply-To: <f0fcc6820711300920m3df82d3n399d82eea3c46a32@mail.gmail.com>
Message-ID: <20071130210843.0660E11EC70@www.antlr.org>

Ok, Mark. You forced me to. Your exception machinery is no good, I say. 
Here is a different way - and I'm sure I'll get beaten for it ... (and maybe
it doesn't work in general - it's tricky; and it worked in my toy example
:-) ).
Don't say I didn't warn you.
;-)

You want to run through a rule if some condition is true; but you want to
ignore all of the rule if the condition is false. To this end, you trick
ANTLR by doing the followng:

a) You define a rule

    ignore : . (DOWN (ignore)* UP)? ;
    
This describes ANY TREE NODE with subtrees or not; and it has no actions
whatsoever in it. It's the most ignorant thing of all.
(DOWN and UP are "reserved tokens" of ANTLR to tell a tree parser that we go
down or up one level in the tree; using them publicly like above is probably
not intended, but it works ...).

b) In your grammar, you either follow the right way (i.e., your semantically
rich rule, rife with actions and activities) when you want to do something;
or you run the ignore rule on the tree you want to ... well ... ignore:

  statement
      : simpleStatement
      | ^('if' x=condition ( { x }? => statement
                           |           ignore
                           )
         )
     ;

Voila - statement is done when condition is true; but not when it's false.
(I extended the language - nested ifs are possibly ... just to check whether
it works in this case. It does.)
   
If you want, I can send you a small working example around this grammar ...

Still, an honest interpreter should, IMVHO pass parameters with
computations' values into the rules and guard each real (side-effect) action
with the result of checking a parameter ...

Regards
Harald M.

P.S. On some level, I wish ANTLR would handle tree grammars are real
two-dimensional grammars - i.e. NOT flatten them into a TreeNodeSTREAM, but
accept that rules decide themselves whether to "go down" or just handle the
rule as a single node. Maybe it might not be that difficult to have another
special symbol like . (e.g. ...) which means "a complete tree" - essentially
the ignore rule above. Then the conditional would become

        ^('if' x=condition ( { x }? => statement
                           |           ...
                           )
         )

Wouldn't that be nice? 

> -----Original Message-----
> From: Mark Volkmann [mailto:r.mark.volkmann at gmail.com] 
> Sent: Friday, November 30, 2007 6:20 PM
> To: Harald Mueller
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] validating semantic predicates
> 
> On 11/30/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > Hi -
> >
> > You are already in a tree-parser, aren't you?
> 
> Yes.
> 
> > So some syntax parser has produced your trees (I don't 
> assume you create the trees manually in some other way).
> 
> Right.
> 
> > That syntax parser can then - in its tree-building rules 
> (-> ...) - create trees which actually DO have terminating 
> tokens - there is some documentation on such artificial 
> tokens in the Wiki and also - I think - in the ANTLR book.
> 
> Genius! Thanks!
> 
> I think I'm almost there, but it still stops processing after 
> it completes the catch block.
> 
> Here's the AST I'm processing.
> 
>  (SCRIPT (ADD 10 END) (ADD 20 END) (PRINT END) (SUBTRACT 90 
> END) (IF POSITIVE (PRINT END)) (ADD 10 END) (IF NEGATIVE 
> (PRINT END)) (IF (< 0) (ADD 100 END)) (IF (< 40) (SUBTRACT 10 
> END)) (IF (> 30) (SUBTRACT 20
> END)) (PRINT END))
> 
> Everything works up to the first IF. At that point the value 
> is 10 + 20 - 90 which is -60 so the first if fails since the 
> value isn't positive. Here's the rule with the catch.
> 
> statement
>   : simpleStatement
>   | ^('IF' c=condition { $c.result }? simpleStatement)
>   ;
>   catch[FailedPredicateException fpe] {
>     System.err.println("recoving and continuing");
>     consumeUntil(input, END);
>     input.consume();
>   }
> 
> I get the println output, but the ADD that follows isn't 
> executed. I know because the action for ADD prints out 
> something every time it runs. Any idea what processing stops 
> after the catch executes?
> 
> > Hope this helps ...
> > Regards
> > Harald
> >
> > -------- Original-Nachricht --------
> > > Datum: Fri, 30 Nov 2007 09:37:19 -0600
> > > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > > An: antlr-interest at antlr.org
> > > Betreff: [antlr-interest] validating semantic predicates
> >
> > > I'm trying to determine how to use validating semantic 
> predicates in 
> > > a rule that has no terminating token. Here's an example of the 
> > > approach I've tried.
> > >
> > > statement
> > >   : simpleStatement
> > >   | ^('if' c=condition { $c.result }? simpleStatement)
> > >   ;
> > >   catch[FailedPredicateException fpe] {
> > >     consumeUntil(input, STMT_TERMINATOR);
> > >     input.consume();
> > >   }
> > >
> > > The problem is that simpleStatements have no terminating 
> token. They 
> > > are a keyword optionally foIlowed by a number. I know whether to 
> > > expect the number based on the keyword. There's no such thing as 
> > > STMT_TERMINATOR in my grammar.
> > >
> > > I think in order to continue parsing when the condition 
> evaluates to 
> > > false, I have to consume all the tokens that make up the 
> > > simpleStatement being skipped. How can I consume those tokens?
> > >
> > > --
> > > R. Mark Volkmann
> > > Object Computing, Inc.
> >
> > --
> > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> >
> 
> 
> --
> R. Mark Volkmann
> Object Computing, Inc.
> 


From harald_m_mueller at gmx.de  Fri Nov 30 13:36:22 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Fri, 30 Nov 2007 22:36:22 +0100
Subject: [antlr-interest] Wildcard in tree grammar? - was validating
	semantic predicates
In-Reply-To: <20071130210843.0660E11EC70@www.antlr.org>
Message-ID: <20071130213617.4655411EC22@www.antlr.org>

Hi tree grammar gurus -

I wrote to mark about that "ignore rule" - but now I found on the Wiki page
http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter that
"The wildcard says skip the entire subtree (new in 3.0b6)." 
However, the program below does NOT work (at least for me?) when I replace
the call to ignore with a simple wildcard (dot). Instead, it says 

   whoaa
   Tree.g: node from line 1:37 no viable alternative at input 'if'
   :-(

- whereas the "ignore" version simply outputs

   whoaa
   :-(

as intended.
Has anyone a clue why's that so?? (it seems to have to do something with the
lookahead on the tree node stream, doesn't it?)

Regards
Harald M.

P.S. Mark, there's your running example :-)

-----------------

grammar LexerParser;

options {
	language=CSharp;
	output=AST;
	ASTLabelType=CommonTree;
}

file
    : (statement ';'!)+
    ;

statement
    : simpleStatement
    | 'if'^ condition statement
    ;
    
simpleStatement
    : 'print'^ 'true'
    | 'print'^
    ;
    
condition
    : 'true'^
    | 'false'^
    ;

WS  :  (' '|'\r'|'\t'|'\f'|'\n')+ { $channel=HIDDEN; };

-----------------

tree grammar Tree;

options {
	language=CSharp;
	tokenVocab=LexerParser;
	ASTLabelType=CommonTree;
}

file
    : (statement)+
    ;

statement
    : simpleStatement
    |  
      ^('if' x=condition ( { x }? => statement
                         |           .           // instead of ignore - the
Wiki says: "The wildcard says skip the entire subtree (new in 3.0b6)."
                         )
       )
   ;
   
//ignore
////    : . (DOWN (ignore)* UP)?
//    : ^(. (ignore)*)
//    ;
    
simpleStatement
    : ^('print' 'true') { Console.Out.WriteLine("whoaa"); }
    | 'print' { Console.Out.WriteLine(":-("); }
    ;
    
condition returns [bool result]
    : 'true' { result = true; }
    | 'false' { result = false; }
    ;

------------------

using System;
using Antlr.Runtime;
using Antlr.Runtime.Tree;

class Program {
    static void Main() {
        ICharStream s = new ANTLRStringStream("if true if true print true;
if false if true print;");

        LexerParserLexer l = new LexerParserLexer(s);
        CommonTokenStream ts = new CommonTokenStream(l);
        LexerParserParser parser = new LexerParserParser(ts);
        ITreeNodeStream tns = new CommonTreeNodeStream(parser.file().Tree);
        new Tree(tns).file();

        Console.In.Read();
    }
}



From r.mark.volkmann at gmail.com  Fri Nov 30 13:57:09 2007
From: r.mark.volkmann at gmail.com (Mark Volkmann)
Date: Fri, 30 Nov 2007 15:57:09 -0600
Subject: [antlr-interest] validating semantic predicates
In-Reply-To: <47507bd6.11355e0a.4373.09cfSMTPIN_ADDED@mx.google.com>
References: <f0fcc6820711300920m3df82d3n399d82eea3c46a32@mail.gmail.com>
	<47507bd6.11355e0a.4373.09cfSMTPIN_ADDED@mx.google.com>
Message-ID: <f0fcc6820711301357o11f61812kaaf71b17e5596960@mail.gmail.com>

On 11/30/07, Harald M.  M?ller <harald_m_mueller at gmx.de> wrote:
> Ok, Mark. You forced me to.

Thanks for all the time you've spent trying to help me! I have more
replies below.

> Your exception machinery is no good, I say.
> Here is a different way - and I'm sure I'll get beaten for it ... (and maybe
> it doesn't work in general - it's tricky; and it worked in my toy example
> :-) ).
> Don't say I didn't warn you.
> ;-)
>
> You want to run through a rule if some condition is true; but you want to
> ignore all of the rule if the condition is false. To this end, you trick
> ANTLR by doing the followng:
>
> a) You define a rule
>
>     ignore : . (DOWN (ignore)* UP)? ;
>
> This describes ANY TREE NODE with subtrees or not; and it has no actions
> whatsoever in it. It's the most ignorant thing of all.
> (DOWN and UP are "reserved tokens" of ANTLR to tell a tree parser that we go
> down or up one level in the tree; using them publicly like above is probably
> not intended, but it works ...).
>
> b) In your grammar, you either follow the right way (i.e., your semantically
> rich rule, rife with actions and activities) when you want to do something;
> or you run the ignore rule on the tree you want to ... well ... ignore:
>
>   statement
>       : simpleStatement
>       | ^('if' x=condition ( { x }? => statement
>                            |           ignore
>                            )
>          )
>      ;
>
> Voila - statement is done when condition is true; but not when it's false.
> (I extended the language - nested ifs are possibly ... just to check whether
> it works in this case. It does.)
>
> If you want, I can send you a small working example around this grammar ...

Hmm ... that's a little scary looking. Go ahead and send me your
working example though. Thanks!

> Still, an honest interpreter should, IMVHO pass parameters with
> computations' values into the rules and guard each real (side-effect) action
> with the result of checking a parameter ...

Do you mean like the following? I had this working, but I didn't
particularly like having to check the condition result inside the rule
for simpleStatement with "if ($b)". Do you think this is the best
approach? It's certainly pretty simple.

statement
  : simpleStatement[true]
  | ^('IF' b=condition simpleStatement[$b.result])
  ;

simpleStatement[boolean b]
	: ^('ADD' n=NUMBER) { if ($b) value += toInt(n); }
	| ^('SUBTRACT' n=NUMBER) { if ($b) value -= toInt(n); }
	| 'PRINT' { if ($b) System.out.println(value); }
	;

condition returns [boolean result]
  :	'POSITIVE' { $result = value > 0; }
  | 'NEGATIVE' { $result = value < 0; }
  | ^('<' n=NUMBER) { $result = value < toInt(n); }
  | ^('>' n=NUMBER) { $result = value > toInt(n); }
  | ^('=' n=NUMBER) { $result = value == toInt(n); }
  ;

> Regards
> Harald M.
>
> P.S. On some level, I wish ANTLR would handle tree grammars are real
> two-dimensional grammars - i.e. NOT flatten them into a TreeNodeSTREAM, but
> accept that rules decide themselves whether to "go down" or just handle the
> rule as a single node. Maybe it might not be that difficult to have another
> special symbol like . (e.g. ...) which means "a complete tree" - essentially
> the ignore rule above. Then the conditional would become
>
>         ^('if' x=condition ( { x }? => statement
>                            |           ...
>                            )
>          )
>
> Wouldn't that be nice?

Yes, it would!

> > -----Original Message-----
> > From: Mark Volkmann [mailto:r.mark.volkmann at gmail.com]
> > Sent: Friday, November 30, 2007 6:20 PM
> > To: Harald Mueller
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] validating semantic predicates
> >
> > On 11/30/07, Harald Mueller <harald_m_mueller at gmx.de> wrote:
> > > Hi -
> > >
> > > You are already in a tree-parser, aren't you?
> >
> > Yes.
> >
> > > So some syntax parser has produced your trees (I don't
> > assume you create the trees manually in some other way).
> >
> > Right.
> >
> > > That syntax parser can then - in its tree-building rules
> > (-> ...) - create trees which actually DO have terminating
> > tokens - there is some documentation on such artificial
> > tokens in the Wiki and also - I think - in the ANTLR book.
> >
> > Genius! Thanks!
> >
> > I think I'm almost there, but it still stops processing after
> > it completes the catch block.
> >
> > Here's the AST I'm processing.
> >
> >  (SCRIPT (ADD 10 END) (ADD 20 END) (PRINT END) (SUBTRACT 90
> > END) (IF POSITIVE (PRINT END)) (ADD 10 END) (IF NEGATIVE
> > (PRINT END)) (IF (< 0) (ADD 100 END)) (IF (< 40) (SUBTRACT 10
> > END)) (IF (> 30) (SUBTRACT 20
> > END)) (PRINT END))
> >
> > Everything works up to the first IF. At that point the value
> > is 10 + 20 - 90 which is -60 so the first if fails since the
> > value isn't positive. Here's the rule with the catch.
> >
> > statement
> >   : simpleStatement
> >   | ^('IF' c=condition { $c.result }? simpleStatement)
> >   ;
> >   catch[FailedPredicateException fpe] {
> >     System.err.println("recoving and continuing");
> >     consumeUntil(input, END);
> >     input.consume();
> >   }
> >
> > I get the println output, but the ADD that follows isn't
> > executed. I know because the action for ADD prints out
> > something every time it runs. Any idea what processing stops
> > after the catch executes?
> >
> > > Hope this helps ...
> > > Regards
> > > Harald
> > >
> > > -------- Original-Nachricht --------
> > > > Datum: Fri, 30 Nov 2007 09:37:19 -0600
> > > > Von: "Mark Volkmann" <r.mark.volkmann at gmail.com>
> > > > An: antlr-interest at antlr.org
> > > > Betreff: [antlr-interest] validating semantic predicates
> > >
> > > > I'm trying to determine how to use validating semantic
> > predicates in
> > > > a rule that has no terminating token. Here's an example of the
> > > > approach I've tried.
> > > >
> > > > statement
> > > >   : simpleStatement
> > > >   | ^('if' c=condition { $c.result }? simpleStatement)
> > > >   ;
> > > >   catch[FailedPredicateException fpe] {
> > > >     consumeUntil(input, STMT_TERMINATOR);
> > > >     input.consume();
> > > >   }
> > > >
> > > > The problem is that simpleStatements have no terminating
> > token. They
> > > > are a keyword optionally foIlowed by a number. I know whether to
> > > > expect the number based on the keyword. There's no such thing as
> > > > STMT_TERMINATOR in my grammar.
> > > >
> > > > I think in order to continue parsing when the condition
> > evaluates to
> > > > false, I have to consume all the tokens that make up the
> > > > simpleStatement being skipped. How can I consume those tokens?
> > > >
> > > > --
> > > > R. Mark Volkmann
> > > > Object Computing, Inc.
> > >
> > > --
> > > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> > > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> > >
> >
> >
> > --
> > R. Mark Volkmann
> > Object Computing, Inc.
> >
>
>


-- 
R. Mark Volkmann
Object Computing, Inc.

From harald_m_mueller at gmx.de  Fri Nov 30 14:12:16 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Fri, 30 Nov 2007 23:12:16 +0100
Subject: [antlr-interest] Wildcard in tree grammar? - was validating
	semantic predicates
Message-ID: <20071130221210.9CC7311EC72@www.antlr.org>

Sorry - I had the wrong output in my posting: The ignore version of course
outputs simply

    whoaa

as intended ...

Regards
Harald M.

------------------------------

Hi tree grammar gurus -

I wrote to mark about that "ignore rule" - but now I found on the Wiki page
http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter that
"The wildcard says skip the entire subtree (new in 3.0b6)." 
However, the program below does NOT work (at least for me?) when I replace
the call to ignore with a simple wildcard (dot). Instead, it says 

   whoaa
   Tree.g: node from line 1:37 no viable alternative at input 'if'
   :-(

- whereas the "ignore" version simply outputs

   whoaa
   :-(

as intended.
Has anyone a clue why's that so?? (it seems to have to do something with the
lookahead on the tree node stream, doesn't it?)

Regards
Harald M.

P.S. Mark, there's your running example :-)

-----------------

grammar LexerParser;

options {
	language=CSharp;
	output=AST;
	ASTLabelType=CommonTree;
}

file
    : (statement ';'!)+
    ;

statement
    : simpleStatement
    | 'if'^ condition statement
    ;
    
simpleStatement
    : 'print'^ 'true'
    | 'print'^
    ;
    
condition
    : 'true'^
    | 'false'^
    ;

WS  :  (' '|'\r'|'\t'|'\f'|'\n')+ { $channel=HIDDEN; };

-----------------

tree grammar Tree;

options {
	language=CSharp;
	tokenVocab=LexerParser;
	ASTLabelType=CommonTree;
}

file
    : (statement)+
    ;

statement
    : simpleStatement
    |  
      ^('if' x=condition ( { x }? =statement
                         |           .           // instead of ignore - the
Wiki says: "The wildcard says skip the entire subtree (new in 3.0b6)."
                         )
       )
   ;
   
//ignore
////    : . (DOWN (ignore)* UP)?
//    : ^(. (ignore)*)
//    ;
    
simpleStatement
    : ^('print' 'true') { Console.Out.WriteLine("whoaa"); }
    | 'print' { Console.Out.WriteLine(":-("); }
    ;
    
condition returns [bool result]
    : 'true' { result = true; }
    | 'false' { result = false; }
    ;

------------------

using System;
using Antlr.Runtime;
using Antlr.Runtime.Tree;

class Program {
    static void Main() {
        ICharStream s = new ANTLRStringStream("if true if 
true print true; if false if true print;");

        LexerParserLexer l = new LexerParserLexer(s);
        CommonTokenStream ts = new CommonTokenStream(l);
        LexerParserParser parser = new LexerParserParser(ts);
        ITreeNodeStream tns = new 
CommonTreeNodeStream(parser.file().Tree);
        new Tree(tns).file();

        Console.In.Read();
    }
}


From harald_m_mueller at gmx.de  Fri Nov 30 14:24:17 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Fri, 30 Nov 2007 23:24:17 +0100
Subject: [antlr-interest] validating semantic predicates
In-Reply-To: <f0fcc6820711301357o11f61812kaaf71b17e5596960@mail.gmail.com>
Message-ID: <20071130222412.4287911EC31@www.antlr.org>

Hi -

> On 11/30/07, Harald M.  M?ller <harald_m_mueller at gmx.de> wrote:
> > Ok, Mark. You forced me to.
> 
> Thanks for all the time you've spent trying to help me! I 
> have more replies below.

Sure :-) - it's a hobby (at the moment), after all!

> > Still, an honest interpreter should, IMVHO pass parameters with 
> > computations' values into the rules and guard each real 
> (side-effect) 
> > action with the result of checking a parameter ...
> 
> Do you mean like the following? 
[...]
> 
> statement
>   : simpleStatement[true]
>   | ^('IF' b=condition simpleStatement[$b.result])
>   ;
> 
> simpleStatement[boolean b]
> 	: ^('ADD' n=NUMBER) { if ($b) value += toInt(n); }
> 	| ^('SUBTRACT' n=NUMBER) { if ($b) value -= toInt(n); }
> 	| 'PRINT' { if ($b) System.out.println(value); }
> 	;
> 

Yes - but the more I look at 

* that code ("my" code)
* your code
* the code at
http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter with
its pushIndex and getIndex

the more I'm sure that I would write some sort of visitor which simply takes
the node's children and does whatever it wants with them.

I once had to write simplification rules for some sort of expression trees;
in my algorithm, you first ran down and up some subtrees to get some
information about used elements; then you would - based on the results of
that first pass - either go down the first and then the second subtree; or
the other way round; or only one of the subtrees. This was very easy to
write with 3 ifs and corresponding visit calls; I cannot imagine how a
fixed-order tree parser would do this easily.
So my rule of thumb now becomes

   If you want to skip nodes or reorder the actions you do on the tree, dont
use a tree grammar.

If ones makes tree grammars LL(1) - which is easy by selecting the right
symbols in the tree builder, I'd say (or at least after one tree rewrite) -,
a hand-written visitor/tree parser is not that much harder to write than
some tree grammar-based traverser (I'd guess ...).

Regards & good night (here near Munich)
Harald



From jbb at acm.org  Fri Nov 30 14:34:12 2007
From: jbb at acm.org (John B. Brodie)
Date: Fri, 30 Nov 2007 17:34:12 -0500
Subject: [antlr-interest] Wildcard in tree grammar? - was
	validating	semantic predicates
In-Reply-To: <20071130221210.9CC7311EC72@www.antlr.org> (message from
	=?iso-8859-1?Q?Harald_M._M=FCller?= on Fri, 30 Nov 2007 23:12:16
	+0100)
References: <20071130221210.9CC7311EC72@www.antlr.org>
Message-ID: <E1IyER2-0001Yl-E2@gecko.home.org>

I believe that you have to test the boolean condition on both sides of
the alternate.

Not sure whether or not that was Dr. Parr's intention.

But it seems to work for me.

>statement
>    : simpleStatement
>    |  
>      ^('if' x=condition ( { x }? statement
>                         |           .
>                         )
>       )
>   ;
   
instead try:

statement
    : simpleStatement
    |  
      ^('if' x=condition ( { x }? statement
                         | {!x }? .
                         )
       )
   ;
   



   -jbb

From harald_m_mueller at gmx.de  Fri Nov 30 14:48:17 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Fri, 30 Nov 2007 23:48:17 +0100
Subject: [antlr-interest] Wildcard in tree grammar? - was
	validatingsemantic predicates
In-Reply-To: <E1IyER2-0001Yl-E2@gecko.home.org>
Message-ID: <20071130224812.9C73411EC9F@www.antlr.org>

Mhm ... but not for me. Also, I cannot see how *adding* another condition
would allow *more* alternatives to be parsed: I still get same result "no
viable ...".
The generated ifs also dont look too good, IMHO:

                    	else if ( (LA2_0 == 6) && (( x ||  !x )) )
                    	{
                    	    int LA2_2 = input.LA(2);
                    	    
                    	    if ( (LA2_2 == DOWN) && ( x ) )
                    	    {
                    	        alt2 = 1;
                    	    }
                    	    else if ( (LA2_2 == UP) && ( !x ) )
                    	    {
                    	        alt2 = 2;
                    	    }
                    	    else 
                    	    {
                    	        throw ...
                    	    }

This is exactly the same code as without the !x in the grammar, if one
removes the !x conditions; and they lead - in the case of x = false - to the
same branch, namely throw ...
Thx anyway!
Regards
Harald

> -----Original Message-----
> From: John B. Brodie [mailto:jbb at acm.org] 
> Sent: Friday, November 30, 2007 11:34 PM
> To: harald_m_mueller at gmx.de
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Wildcard in tree grammar? - was 
> validatingsemantic predicates
> 
> I believe that you have to test the boolean condition on both 
> sides of the alternate.
> 
> Not sure whether or not that was Dr. Parr's intention.
> 
> But it seems to work for me.
> 
> >statement
> >    : simpleStatement
> >    |  
> >      ^('if' x=condition ( { x }? statement
> >                         |           .
> >                         )
> >       )
> >   ;
>    
> instead try:
> 
> statement
>     : simpleStatement
>     |  
>       ^('if' x=condition ( { x }? statement
>                          | {!x }? .
>                          )
>        )
>    ;
>    
> 
> 
> 
>    -jbb
> 


From harald_m_mueller at gmx.de  Fri Nov 30 14:48:45 2007
From: harald_m_mueller at gmx.de (=?iso-8859-1?Q?Harald_M._M=FCller?=)
Date: Fri, 30 Nov 2007 23:48:45 +0100
Subject: [antlr-interest] Using semantic predicates with antlr 3 and
	pythonruntime
Message-ID: <20071130224840.8BF2111ECBE@www.antlr.org>

Just one idea: Instead of distinguishing based on a semantic predicate,
duplicate your grammar (nt_... is "no-tick-...."):
 
-------------
 
method
    : methodcall
    | '`' nt_methodcall '`'
    ;
 
methodcall
    :
    |   methodname '(' expression ')' (expression)*
    |   methodname '(' expression (',' expression)+ ')' | 
    |   methodname (expression)+ |
    |   methodname ('('')')? 
    ;
 
expression
    : simpleexpression 
    | method
    ;
 
nt_methodcall
    :
    |   methodname '(' nt_expression ')' (nt_expression)*
    |   methodname '(' nt_expression (',' nt_expression)+ ')' | 
    |   methodname (nt_expression)+ |
    |   methodname ('('')')? 
    ;
 
nt_expression
    : simpleexpression 
    | nt_method
    ;
 
simpleexpression: flag | number | STRING ;
 
-------------
 
(I have removed your methodargs; and changed the methodsargs (methodargs)*
to (methodsargs)+ - that way, the grammar above is not so much longer than
yours ;-) - but you might have removed certain parts which were in those
separate rules/branches).
 
Of course, this is code duplication. But it certainly makes debugging and
adapting to that tiny difference of tick or not tick easier.
I must say that I like this "design-time nailing down" of a grammar - it is
akin to compile-time type safety which often (especially with generics) now
helps me to make a design correct the first time it compiles!
 
Regards
Harald M.
 



  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dan Bailey
Sent: Thursday, November 29, 2007 8:22 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Using semantic predicates with antlr 3 and
pythonruntime


Hi,

I am writing a parser for mel (a language based on tcl) and am having a lot
of problems getting the intricacies of the language to parse.

One of the main problems I am having is through using the semantic
predicates, both to make the grammar easier to read and to make a few of the
statements conditional on variables. 

Firstly, if someone could explain the difference between semantic predicates
and gated semantic predicates that would be useful?

One of the errors I have come across is when passing variables around as
arguments, antlr does not pass the variables into the syntactic predicates
it generates for some reason (the synpred1() type functions). However, I
have found that I can edit this file by hand and add in the variables to the
arguments manually, but clearly this is laborious and time-consuming. 

Here is a simple example of some mel code which I have had to resort to
semantic predicates in order to try and get round:


(1)  function;
(2)  function -flag;
(3)  function("arg");
(4)  function(3+4); 
(5)  function (3+4) -flag;
(6)  $a = `function`;
(7)  $a = `function(function2)`;
(8)  $a = `function -flag`;
(9)  function(`function2 -flag`);


All of the above commands are completed valid, which demonstrates the
variety in the language in function calls alone. 

This is the solution I have come up with in antlr grammar:

method[ticks]:
        { ticks == "ticksallowed" }? => '`' methodcall["ticksnotallowed"]
'`' |
        methodcall[ticks] 
    ;

methodcall[ticks]:
        methodname '(' expression[ticks] ')' (methodargs[ticks])* |
        methodname '(' expression[ticks] (',' expression[ticks])+ ')' | 
        methodname methodargs[ticks] (methodargs[ticks])* |
        methodname ('('')')? 
    ;

methodargs[ticks]: expression[ticks];

expression[ticks]: flag | number | STRING | method[ticks]; 

I have tried to simplify this to demonstrate the problem. In (6) for
example, in order to match the second backtick to an ending tick (rather
than the start of a new backticked method call which is clearly not
allowed), I pass around a variable to halt the parser from trying to execute
the backtick strand if it is already inside a backtick. 

I have had many problems trying to get this to work though. Am I going about
this in the correct manor, or can someone suggest a better approach to this?

Thanks,
Dan


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20071130/0bbc10be/attachment.html 

From bshkara at gmail.com  Fri Nov 30 18:14:12 2007
From: bshkara at gmail.com (Basil Shkara)
Date: Sat, 1 Dec 2007 13:14:12 +1100
Subject: [antlr-interest] Match any unicode character
In-Reply-To: <mailman.9838.1195989671.2534.antlr-interest@antlr.org>
References: <mailman.9838.1195989671.2534.antlr-interest@antlr.org>
Message-ID: <B1D180FB-4F4D-4D33-9074-957061812792@gmail.com>

Thanks Harald for your suggestions.  They were very helpful.

I'll document my issues and the solutions I came across in case  
someone else is stuck with the same problem.

I have now rewritten my grammar and it operates somewhat as expected  
now.  The issue before was that I failed to take into account  
accurately, the way the lexer consumed my specified tokens.  As well I  
was specifying huge token ranges like ~(WS | NEWLINE)+ in the midst of  
other token declarations which caused the tokens below to be  
unreachable.

The current implementation of my grammar no longer relies upon  
negating alternates like the token above.  Instead I define all my  
tokens and then have a final catch all token:
OTHER	:	.;
which captures everything else not previously consumed above.   
Terrence's book provided the insight for this behaviour.

Then when specifying parser rules it becomes simple to specify a valid  
range of characters which are acceptable such as:
text	:	OTHER | DOUBLEQUOTE | SINGLEQUOTE;

This then allows me to use this rule in another rule defining the  
specific text I want recognised to add to my AST or perform an action:
recognised	:	COLON text+ COLON;
Because COLON is defined above OTHER, the COLON tokens are already  
consumed and so will not be parsed in rule: text.

So by approaching the grammar design this way, the parser is able to  
accept any valid unicode characters possible within the constraints of  
the rules.

Hope this helps someone!
Baz.

