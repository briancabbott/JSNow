From rhill03 at eds.com  Wed Nov  1 00:43:40 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 1 Nov 2006 08:43:40 -0000
Subject: [antlr-interest] Antlr 3 Bug?
Message-ID: <2E909902FD3A03419E3A905908AE3DD402862F06@UKNSM201.emea.corp.eds.com>

A single line comment ('//')on the last line of a grammar gives the
following internal error with the last character being unexpected,
regardless of what that character is. 

internal error: D:\ActiveProjects\IdeaProjects\Jtest1\src\Backend.g :
D:\ActiveProjects\IdeaProjects\Jtest1\src\Backend.g:369:125: unexpected
char: '.'

The multiline comment doesn't give the same internal error.
(I know its not serious but I thought I'd post it in case there's some
other related bugs )

cheers

Rob

Robert Hill
Information Engineer
E	UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,
Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061101/92dd4486/attachment.html 

From r.morgan at verizonbusiness.com  Wed Nov  1 05:32:34 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Wed, 01 Nov 2006 06:32:34 -0700
Subject: [antlr-interest] Simple way to get the text that matched
In-Reply-To: <mailman.1677.1162218795.15912.antlr-interest@antlr.org>
Message-ID: <000001c6fdba$3114a9e0$142d9283@mcilink.com>

Could someone reply with the simplist way to return the text matched by any
parser rule?  I was told previously that I need to know what kind of things
are returned by the lower level rules, but honestly, I don't know what they
return other than a "Token" from the lexer, and once they get into the
parser I don't know what they turn into, and I don't see a straight-forward
example in the docs.  I just want everything to be a string buffer or
something like that so that I can get the text that matched. A 3-level
example like this is what I'm asking for.
parserRule1 : t1:("keyword1" parserRule2)
              {printf( "parserRule1 got a %s from parserRule2\n",
                       t1.getText());}
            ;
parserRule2 : t2:("keyword2" LEXER_RULE_1)
              {printf( "parserRule2 got a %s from the lexer\n", 
                       t2.getText());}
            ;
LEXER_RULE_1 : "sometoken";

The problem I'm having is that t1 and t2 never get declared and I'm told
it's my responsibility to declare them somehow in a returns statement. It
doesn't seem to me they are a "Token" anymore once they get back to the
parser, since the parser is matching several tokens.

BTW, I tried putting a [returns char* x] on one of my lower rules and then
the Eclipse plugin complained that in a higher rule that used the lower
rule, "classSpec returns a value" (classSpec was the rule name.) That
implies that I need to use an assignment instead of the label:rule notation,
defeating the purpose of the notation I think.  Maybe the label notation
applies only to the lexer, but the docs don't read that way.

Sorry for such a beginner question, but I'm stumped.
Rick



From parrt at cs.usfca.edu  Wed Nov  1 09:06:51 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Nov 2006 09:06:51 -0800
Subject: [antlr-interest] Antlr 3 Bug?
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD402862F06@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD402862F06@UKNSM201.emea.corp.eds.com>
Message-ID: <4D4024EA-D7C2-48D1-B80C-68389A616459@cs.usfca.edu>

yeah, EOF doesn't terminate a // comment in my grammar, I'm afraid.  
partially, this is because UNIX abhors a file without an end of line  
on the and and generally forces one. ;)

Ter
On Nov 1, 2006, at 12:43 AM, Hill, Robert wrote:

> A single line comment ('//')on the last line of a grammar gives the  
> following internal error with the last character being unexpected,  
> regardless of what that character is.
>
> internal error: D:\ActiveProjects\IdeaProjects\Jtest1\src 
> \Backend.g : D:\ActiveProjects\IdeaProjects\Jtest1\src\Backend.g: 
> 369:125: unexpected char: '.'
>
> The multiline comment doesn't give the same internal error.
> (I know its not serious but I thought I'd post it in case there's  
> some other related bugs )
>
> cheers
>
> Rob
>
> Robert Hill
> Information Engineer
> E       UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,  
> Sheffield. S11 8HD
> email:  rhill03 at eds.com
> Office: +44 114 291 1928
> Mobile: +44 7903 185 516
>
>


From ewbank at gmail.com  Wed Nov  1 10:39:36 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed, 1 Nov 2006 13:39:36 -0500
Subject: [antlr-interest] Simple way to get the text that matched
In-Reply-To: <000001c6fdba$3114a9e0$142d9283@mcilink.com>
References: <mailman.1677.1162218795.15912.antlr-interest@antlr.org>
	<000001c6fdba$3114a9e0$142d9283@mcilink.com>
Message-ID: <dd3a065f0611011039r254458f2i67473f00b150c0a2@mail.gmail.com>

Hi Rick,

You're pretty close.  In the actions, you need a "#" prefix on t1 and t2 to
tell ANTLR that these names refer to the subrules.  Also, remove the parens so
that t1 and t2 refer to the strings themselves.  This is what it will be, more
or less:

   // i did not compile this, but it should be very close :-)
   parserRule1
      : t1:"keyword1" parserRule2
      {
       printf("parserRule1 got a %s from parserRule2\n",
          #t1.getText());
      }
      ;
   parserRule2
      : t2:"keyword2" LEXER_RULE_1
      {
       printf("parserRule2 got a %s from the lexer\n",
          #t2.getText());
      }
      ;
   LEXER_RULE_1 : "sometoken";

A related beginners caution: If you want to consume an entire file, make sure
you terminate your main production with EOF; without the EOF match, then it
will only parse the matching prefix of the file.

On 11/1/06, Rick Morgan <r.morgan at verizonbusiness.com> wrote:
> Could someone reply with the simplist way to return the text matched by any
> parser rule?
>
> parserRule1
>  : t1:("keyword1" parserRule2)
>  {
>     printf("parserRule1 got a %s from parserRule2\n",
>        t1.getText());
>  }
>  ;
> parserRule2
>  : t2:("keyword2" LEXER_RULE_1)
>  {
>     printf("parserRule2 got a %s from the lexer\n",
>        t2.getText());
>  }
>  ;
> LEXER_RULE_1 : "sometoken";

From ewbank at gmail.com  Wed Nov  1 10:59:12 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed, 1 Nov 2006 13:59:12 -0500
Subject: [antlr-interest] Conditional tree parsing
In-Reply-To: <200610311647496.SM06920@037f27dd816a40c>
References: <200610311647496.SM06920@037f27dd816a40c>
Message-ID: <dd3a065f0611011059k68789f10g4fe6d2a885f9a7b7@mail.gmail.com>

Try this:
   #(IF_TOKEN t=expression
      ( {t == true}?
         val=expression .
      |
         // expression was false
         . val=expression
      )
   )

This uses the value of the expression, captured in t, to direct the parse to
only evaluate the leg of interest.

Hope this helps,
- Bryan

On 10/31/06, VAUCHER Laurent <VAUCHER at fermat.eu> wrote:
> I'm currently implementing an expression evaluator as a TreeParser, so, for
> correct evaluation semantic, I need to conditionnally evaluate some parts of
> the parse tree...
>
> When evaluating, I need to direct the tree parser to only walk the correct
> branch of the tree (expr1AST is testexpr is true, expr2Ast otherwise).
>
>   My first try was to write:
>
> #(IF_TOKEN t=expression v1=expression v2=expression)
>   but then both expression are evaluated (wrong!)

From antlr at jazillian.com  Wed Nov  1 11:45:07 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 01 Nov 2006 14:45:07 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
Message-ID: <4548F943.7070906@jazillian.com>

Micheal J wrote:

>Andy,
>
>You seem to be changing your position on the issue of whether (as Anthony
>put it):
>
>"If it really *is* great, then the chances are the majority of programmers
>*can't* 'easily "get it" '."
>
>I'm leaning towards agreeing with Anthony as I said.
>  
>
I don't think I'm changing my position. I still disagree with that 
quote. I think almost all the great tools
are the ones that the majority of programmers to "get". In fact, that's 
part of what makes them great.

>>I view Java's decision to do a "limited implementation" by avoiding 
>>things like multiple inheritance
>>as exactly what made it successful.
>>    
>>
>
>Being a great tool for the job doesn't guarantee popularity. Popularity is
>ultimately a measure of the tool's accessibility to average programmers
>(they are the majority). Great tools are often beyond the ability of the
>average programmer. Certainly to build. And often to use too.
>  
>
I disagree. I view Java as being "great" and C++ not being "great". And 
the main thing that makes
Java great is that all the features that made it inaccessible to average 
programmers were removed.
And, it's no coincidence that these same features are what always got 
the supposedly "great programmers"
into trouble: pointers, multiple inheritence, operator overloading, etc.

>C++ is a great tool (Java was written using it). Most Java programmers
>wouldn't be able to master it. Or the domain expertise needed to build Java
>itself.
>  
>
Well, I think Java is far better than C++, and I think the vast majority 
of programmers who know both
agree with me. Probably the main benefit is that it's easy to use for 
"average programmers". That's also why
ANTLR is better than the competition - because it's easier to use.

>  
>
>>By avoiding being 
>>"completely pure", 
>>Java is accessible
>>to average programmers.
>>    
>>
>
>My point exactly (not sure about the "pure OO" label though). 
>
>Incidentally "above average" Java programmers understand the value of the
>missing features and are forever trying to add them back. As I suggested,
>AspectOrientedDesign in Java can be viewed as attempts to hack some of them
>back into Java.
>  
>
Yes, a few people want to add stuff back, but most do not. It's just 
that the few are very vocal.
The vast majority don't want MI, operator overloading, or built-in 
AspectOrientedDesign.
And of course, those who want them think they're "above average", but 
then so does almost
everyone.

>  
>
>>And that's why Java is popular and 
>>Smalltalk and 
>>LISP are not.
>>It's also why people prefer Java over C++.
>>    
>>
>
>It is a easier tool to use. Less powerful. But easier.
>  
>
Right - so I hope there's nothing wrong with me pushing to make ANTLR 
(or some successor)
easier to use. A compiler is easier to use than compiling by hand, but 
also less powerful.
I'm ok with that.

>  
>
>>>So, I'm tending to agree with Anthony here. Great tools 
>>>      
>>>
>>often require 
>>    
>>
>>>in-depth domain expertise that the majority simply don't have.
>>> 
>>>
>>>      
>>>
>>Sometimes they do, but sometimes they don't. Compilers never require 
>>in-depth
>>domain expertise.
>>    
>>
>
>Try feeding Java code or an ANTLR grammar to a C++ compiler. ;-)
>  
>
Of course you need to know the input syntax and symantics (a little). 
That's different from
knowing the details of what the tool is doing. When talking to Ter, at 
one point I said
"and how do I know how many times that pattern was matched?" and he said 
"just check
n < 4". How was I supposed to know that ANTLR generated some code that 
included
a variable called n? That's like having to know the details about the 
bytecode that
javac creates. I don't have to read the manual for that stuff...I'd 
rather have the tool not
force me to know those details.

>  
>
>>I know almost nothing about byte-code 
>>generation, yet 
>>I use javac
>>every minute or two. I think the world would benefit from an 
>>ANTLR tool 
>>that was like that.
>>    
>>
>
>For your examples of [general purpose language] compiler and ANTLR [grammar
>language compiler], the domain expertise isn't primarily about the internals
>of the tool. It's about the syntax, semantics and idioms of the language
>recognized by the tool. Knowledge of the tool's internals can elevate those
>who have it above the "average" user who doesn't.
>  
>
But required knowledge of the tool's internals limits the "average" 
user's productivity.
If I had done AST-based translation, I'd be spending way to much time 
worrying about the details
of the AST, rather than the syntax and semantics of the two languages. I 
demand to spend 95% of
my time on *what* to do, rather than *how* to do it. With ASTs, I found 
myself spending
95% of my time on *how*.

>  
>
>>>>I think a tool can be great while being simple enough for most
>>>>programmers (e.g. Java).
>>>>   
>>>>
>>>>        
>>>>
>>>Not without limiting it's power.
>>> 
>>>
>>>      
>>>
>>Yes, just as Java's power is "limited" by not supporting MI, 
>>pointers, etc. I love to have my power "limited" by not 
>>giving me lots of rope to hang 
>>myself with.
>>And so do most people, judging by the popularity of Java over C++ and 
>>every high-level
>>language over assembly.
>>    
>>
>
>Java's swan song is productivity (for those problems to which to it can be
>applied). Not power as in flexibility, expressivity or performance.
>
>I use Java/C# for the productivity benefits. If performance, flexibility or
>expressivity was *more* important in a particular project, there are better
>tools than Java/C# (e.g. C++, Occaml).
>  
>
Right, so you're just like the rest of us. You've chosen to limit your 
own "power" by using Java rather
than, say, assembly. So I'm sticking with my claim that
"I think a tool can be great while being simple enough for most 
programmers (e.g. Java)."
and not buying your "Not without limiting it's power" reply.

>
>>>      
>>>
>>Sure he could. Joe average could easily write:
>>a + b --> a.add(b)
>>and have his tool do the rest (and maybe warn him about cases 
>>that might 
>>match that he hadn't
>>thought about).
>>    
>>
>
>Not without understanding the syntax and semantics of the DSL you created.
>Not without understanding just what that input string instructs your DSL's
>"compiler" to do.
>  
>
There's little more to my DSL than knowing that "-->" is a separator, 
"v" matches a
single constant or variable tokens, and "x" matches zero or more tokens. 
I'd say it's several
orders of magnitude simpler than ANTLR. I'm not comparing it to ANTLR, 
just saying that
I do believe that I do believe that a does what ANTLR does, but is far 
simpler (like an order
of magnitude or two simpler).

>Incidentally, your DSL is just a small part of your particular language
>recognition toolkit. 
>
It is??? How do you know that?

>My comment refers to someone building the whole
>toolkit. Examples abound of tools that offer multiple DSLs to tackle the
>various phases/modules of a language processing toolkit (e.g. Cocktail,
>Stratego).
>  
>
I'm referring to my "whole toolkit" too, so I think we're talking about 
the same thing.

>  
>
>>I've had a programmer working with me for a few months now, 
>>and he's had 
>>no trouble writing
>>translation rules without every learning ANTLR grammar or knowing 
>>anything about language
>>recognition tools.
>>    
>>
>
>He isn't using ANTLR directly (i.e. creating/maintaining ANTLR grammars) so,
>no surprise if he hasn't had to learn to use ANTLR. 
>  
>
Ah, but he is using ANTLR directly: he spends all day working with the 
Token streams produced by ANTLR,
without having ever seen an ANTLR grammar. That's possible when using 
ANTLR as a lexer,
but that wouldn't be possible using its parser.

>He isn't developing a language translation toolkit (you've done that
>already) so, no surprise if he he has no grounding in formal language
>theory.
>
>He _is_ using a DSL you created to encode source-to-source transformations.
>You just expressed the opinion that he has aquired the domain expertise
>required to use your DSL.
>  
>
Yes, so if you believe me when I say that my DSL is orders of magnitude 
easier to use than
to use ANTLR to build and walk ASTs, then you must see my point: He's 
much more productive.
So I'm building my DSL (and other code) on top of ANTLR/lexer. I think 
there's an opportunity
for Terence to build a better and different tool in place of the 
ANTLR/parser - one that doesn't
require users to know formal language theory or picture ASTs in their 
heads.

>>I want to do. I *never* have to look at java byte code - I'm 
>>completely 
>>hidden from that
>>by the design of the compiler.
>>    
>>
>
>Not by the design of the compiler. But by how well tested it is. And by how
>well documented Java (and javacc) is. 
>
No, I do think it's by the design of the compiler - by the design of 
compilers in general.
Compiler designers take it as a given that users need only know the 
syntax/semantics of the input
language. If Ter took it as a given that ANTLR4 users need only know the 
syntax/semantics
of the input language, he'd end up with a very different tool.

>Many Javacc users - who can and care
>to look under hood - have tripped over bugs-a-plenty in it yet, "average"
>Javacc users don't discover those same bugs in the same tool even when they
>write code that triggers it.
>
>Knowledge of Java and bytecode and how javacc works means "above average"
>users can do more with Java and javacc than the average programmer can. 
>
>Knowing more, lets you do more.
>
>ANTLR is similar and different. Different because it suffers in comparison
>by being a less popular tool with less resources behind it. Nevertheless,
>for someone with a deep knowledge of ANTLR's grammar language, it's
>limitations (e.g. no predicate hoisting and approximate-LLk in 2.x) and the
>available documentation, there really is no need to look at the output code.
>  
>
Well, sure, it's mostly covered in the documentation. But that doesn't 
change the fact that it could be
made a lot easier (IMO). What makes Java great and C++ not-so-great is 
that Java programmers
never have to go look up the syntax for "pointer to function that 
returns an int pointer". Similarly,
a tool that didn't make me look up how to figure out how many patterns a 
"*" matched would make
the tool great.

>You develop your grammar, you develop your tests, you build the whole lot
>and, the tests will alert you if you need to change anything. Unless you
>trip over a bug in ANTLR of course...
>
>Now with ANTLR V3, not only can you look at the output code it if you wish
>but, for the price of a little more knowledge (i.e. domain expertise), you
>can change it!. 
>  
>
I can change the bytecode generated by javac, too. If javac let me do 
that, it would be an indication
to the javac designer that his design is less-than-great.

>The "average" ANTLR user has no need to change the code and would never do
>so but, others will.
>
>
>Micheal
>  
>
OK,
Andy

>
>  
>


From mantu_lists at yahoo.com.br  Wed Nov  1 11:53:34 2006
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Wed, 1 Nov 2006 19:53:34 +0000 (GMT)
Subject: [antlr-interest] Grammar File: Get text from token
Message-ID: <20061101195334.44984.qmail@web39502.mail.mud.yahoo.com>

Greetings!
I'm working with a java grammar and in some point, I want to retrieve the class name. The rule is like follows:

// Definition of a Java class
classDefinition![AST modifiers]{
    boolean isInner = ts.getName() != null;
}
    :    "class" IDENT{
            String txt = $getText;
            ts.setName(txt);
        }
        // it _might_ have type paramaters
        (tp:typeParameters)?
        // it _might_ have a superclass...
        sc:superClassClause
        // it might implement some interfaces...
        ic:implementsClause
        // now parse the body of the class
        cb:classBlock
        {#classDefinition = #(#[CLASS_DEF,"CLASS_DEF"],
                                modifiers,IDENT,tp,sc,ic,cb);}
    ;

It doesn't work that way. The ANTLR Plugin says that "_begin cannot be resolved".
How can I retrieve the name of the class being parsed?
Thank you all!



Luciano Mantuaneli
Analist-Programmer
 		
---------------------------------
 Voc? quer respostas para suas perguntas? Ou voc? sabe muito e quer compartilhar seu conhecimento? Experimente o Yahoo! Respostas!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061101/63d1c714/attachment.html 

From parrt at cs.usfca.edu  Wed Nov  1 12:05:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Nov 2006 12:05:14 -0800
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <4548F943.7070906@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
	<4548F943.7070906@jazillian.com>
Message-ID: <0E12AB82-E35B-4B14-B887-DBFD67CFEC6C@cs.usfca.edu>


On Nov 1, 2006, at 11:45 AM, Andy Tripp wrote:
>> Try feeding Java code or an ANTLR grammar to a C++ compiler. ;-)
>>
> Of course you need to know the input syntax and symantics (a  
> little). That's different from
> knowing the details of what the tool is doing. When talking to Ter,  
> at one point I said
> "and how do I know how many times that pattern was matched?" and he  
> said "just check
> n < 4". How was I supposed to know that ANTLR generated some code  
> that included
> a variable called n?

You aren't.  You need to generate int n=0 and n++ code so you know  
what's up. ;)

Ter

From antlr at thewolery.demon.co.uk  Wed Nov  1 12:54:50 2006
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Wed, 1 Nov 2006 20:54:50 +0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <4548F943.7070906@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
	<4548F943.7070906@jazillian.com>
Message-ID: <5ts8pRRamQSFFw6h@thewolery.demon.co.uk>

In message <4548F943.7070906 at jazillian.com>, Andy Tripp 
<antlr at jazillian.com> writes
>Micheal J wrote:
>
>>Andy,
>>
>>You seem to be changing your position on the issue of whether (as Anthony
>>put it):
>>
>>"If it really *is* great, then the chances are the majority of programmers
>>*can't* 'easily "get it" '."
>>
>>I'm leaning towards agreeing with Anthony as I said.
>>
>I don't think I'm changing my position. I still disagree with that 
>quote. I think almost all the great tools
>are the ones that the majority of programmers to "get". In fact, that's 
>part of what makes them great.

I wouldn't describe "popular" as "great".
>
>>>I view Java's decision to do a "limited implementation" by avoiding 
>>>things like multiple inheritance
>>>as exactly what made it successful.
>>>
>>
>>Being a great tool for the job doesn't guarantee popularity. Popularity is
>>ultimately a measure of the tool's accessibility to average programmers
>>(they are the majority). Great tools are often beyond the ability of the
>>average programmer. Certainly to build. And often to use too.
>>
>I disagree. I view Java as being "great" and C++ not being "great". And 
>the main thing that makes
>Java great is that all the features that made it inaccessible to 
>average programmers were removed.
>And, it's no coincidence that these same features are what always got 
>the supposedly "great programmers"
>into trouble: pointers, multiple inheritence, operator overloading, etc.
>
>>C++ is a great tool (Java was written using it). Most Java programmers
>>wouldn't be able to master it. Or the domain expertise needed to build Java
>>itself.
>>
>Well, I think Java is far better than C++, and I think the vast 
>majority of programmers who know both
>agree with me. Probably the main benefit is that it's easy to use for 
>"average programmers". That's also why
>ANTLR is better than the competition - because it's easier to use.
>
You've just said Java doesn't have pointers. So how do you access a 
hardware register in Java? How do you access a screen buffer?
>>
>>>By avoiding being "completely pure", Java is accessible
>>>to average programmers.
>>>
>>
>>My point exactly (not sure about the "pure OO" label though).
>>Incidentally "above average" Java programmers understand the value of the
>>missing features and are forever trying to add them back. As I suggested,
>>AspectOrientedDesign in Java can be viewed as attempts to hack some of them
>>back into Java.
>>
>Yes, a few people want to add stuff back, but most do not. It's just 
>that the few are very vocal.
>The vast majority don't want MI, operator overloading, or built-in 
>AspectOrientedDesign.
>And of course, those who want them think they're "above average", but 
>then so does almost
>everyone.
>
What about those who don't WANT those things, but NEED them?
>>
>>>And that's why Java is popular and Smalltalk and LISP are not.
>>>It's also why people prefer Java over C++.
>>>
>>
>>It is a easier tool to use. Less powerful. But easier.
>>
>Right - so I hope there's nothing wrong with me pushing to make ANTLR 
>(or some successor)
>easier to use. A compiler is easier to use than compiling by hand, but 
>also less powerful.
>I'm ok with that.
>
So - you're quite happy to see Antlr crippled to suit you, ignoring the 
NEEDS of those who need its power!
>>
>>
>But required knowledge of the tool's internals limits the "average" 
>user's productivity.
>If I had done AST-based translation, I'd be spending way to much time 
>worrying about the details
>of the AST, rather than the syntax and semantics of the two languages. 
>I demand to spend 95% of
>my time on *what* to do, rather than *how* to do it. With ASTs, I found 
>myself spending
>95% of my time on *how*.
>
In other words, as you said earlier, ASTs are the wrong tool for you. So 
you seem happy to delete ASTs from Antlr because *you* don't need them, 
irregardless of what other people *NEED*.
>>
>>>>>I think a tool can be great while being simple enough for most
>>>>>programmers (e.g. Java).
>>>>>
>>>>>
>>>>Not without limiting it's power.
>>>>
>>>>
>>>Yes, just as Java's power is "limited" by not supporting MI, 
>>>pointers, etc. I love to have my power "limited" by not giving me 
>>>lots of rope to hang myself with.
>>>And so do most people, judging by the popularity of Java over C++ and 
>>>every high-level
>>>language over assembly.
>>>
>>
>>Java's swan song is productivity (for those problems to which to it can be
>>applied). Not power as in flexibility, expressivity or performance.
>>
>>I use Java/C# for the productivity benefits. If performance, flexibility or
>>expressivity was *more* important in a particular project, there are better
>>tools than Java/C# (e.g. C++, Occaml).
>>
>Right, so you're just like the rest of us. You've chosen to limit your 
>own "power" by using Java rather
>than, say, assembly. So I'm sticking with my claim that
>"I think a tool can be great while being simple enough for most 
>programmers (e.g. Java)."
>and not buying your "Not without limiting it's power" reply.
>
To my mind, that's not a "great" tool. As I said above, "popular", 
maybe.

Let's ask a question ... how can a tool be "great" if it *relies* on 
other tools even for its existence?

A C compiler can compile itself. Can a Java system build itself? How 
much of Java is actually written in Java? (Oh and I'm including the 
supporting libraries here!)

Antlr v3 is due to be rewritten in Antlr v3. To my mind, that's a 
"necessary but not sufficient" condition for greatness.
>>
>>
>>He _is_ using a DSL you created to encode source-to-source transformations.
>>You just expressed the opinion that he has aquired the domain expertise
>>required to use your DSL.
>>
>Yes, so if you believe me when I say that my DSL is orders of magnitude 
>easier to use than
>to use ANTLR to build and walk ASTs, then you must see my point: He's 
>much more productive.
>So I'm building my DSL (and other code) on top of ANTLR/lexer. I think 
>there's an opportunity
>for Terence to build a better and different tool in place of the 
>ANTLR/parser - one that doesn't
>require users to know formal language theory or picture ASTs in their 
>heads.

But what if the problem can only be specified in terms of formal 
language theory? There is something called "intelligence". If you don't 
have sufficient intelligence, you *cannot* learn certain things. You 
want to give a programmer a tool, so you can set him a problem he is 
INCAPABLE of comprehending. I hope I never have to rely on (or even USE) 
code written by a coder like that !!!
>
>>>I want to do. I *never* have to look at java byte code - I'm 
>>>completely hidden from that
>>>by the design of the compiler.
>>>
>>
>>Not by the design of the compiler. But by how well tested it is. And by how
>>well documented Java (and javacc) is.
>No, I do think it's by the design of the compiler - by the design of 
>compilers in general.
>Compiler designers take it as a given that users need only know the 
>syntax/semantics of the input
>language. If Ter took it as a given that ANTLR4 users need only know 
>the syntax/semantics
>of the input language, he'd end up with a very different tool.

That would appeal to a completely different set of users. He's written a 
tool that does what he needs, and it appeals to users with similar 
needs.

Maybe he will write your version of Antlr 4, but it will be a compiler 
not a lexer/parser - a completely different tool!
>
>>Many Javacc users - who can and care
>>to look under hood - have tripped over bugs-a-plenty in it yet, "average"
>>Javacc users don't discover those same bugs in the same tool even when they
>>write code that triggers it.
>>
>>Knowledge of Java and bytecode and how javacc works means "above average"
>>users can do more with Java and javacc than the average programmer 
>>can.
>>Knowing more, lets you do more.
>>
>>ANTLR is similar and different. Different because it suffers in comparison
>>by being a less popular tool with less resources behind it. Nevertheless,
>>for someone with a deep knowledge of ANTLR's grammar language, it's
>>limitations (e.g. no predicate hoisting and approximate-LLk in 2.x) and the
>>available documentation, there really is no need to look at the output code.
>>
>Well, sure, it's mostly covered in the documentation. But that doesn't 
>change the fact that it could be
>made a lot easier (IMO). What makes Java great and C++ not-so-great is 
>that Java programmers
>never have to go look up the syntax for "pointer to function that 
>returns an int pointer". Similarly,
>a tool that didn't make me look up how to figure out how many patterns 
>a "*" matched would make
>the tool great.
>
And then the programmer needs a pointer to write to a bit of hardware, 
and throws Java out in disgust because his "great" tool is useless for 
the job at hand ...

>>You develop your grammar, you develop your tests, you build the whole lot
>>and, the tests will alert you if you need to change anything. Unless you
>>trip over a bug in ANTLR of course...
>>
>>Now with ANTLR V3, not only can you look at the output code it if you wish
>>but, for the price of a little more knowledge (i.e. domain expertise), you
>>can change it!.
>I can change the bytecode generated by javac, too. If javac let me do 
>that, it would be an indication
>to the javac designer that his design is less-than-great.
>
Because javac is meant to convert java source accurately to java 
bytecode. While Antlr is meant to (and does) accurately convert its 
sourcecode into a lexer/parser/treewalker, it is also designed to let 
you do things beyond the power of the tool. Both fit their design aims - 
javac creates a java program, Antlr creates an extensible 
lexer/parser/treewalker. Both are *good* tools, that doesn't necessarily 
mean they are *great* tools.

At the end of the day, I think your definition of "great" is badly 
flawed - "a great tool lets a mediocre programmer do a decent job". A 
great programmer could probably outperform that mediocre programmer 
without that tool. To my mind, "a great tool lets a great programmer 
give of his best". And a mediocre programmer would not be able to use 
that tool, because he would not be able to understand it.

There's a BIG difference between the RIGHT tool, and a GREAT tool. Would 
you call a hammer a *great* tool when you have a pack of nails? I don't 
know as I'd call a nailgun a great tool but it's certainly greater than 
a hammer. And it requires a greater level of *maturity* than a hammer to 
use safely.

The greater the tool, the greater the level of maturity required to be 
able to use it safely. And the fewer the number of programmers who are 
capable of reaching that level of maturity ... you go on about the 
"dangerous features" of C++ as opposed to Java. A mature C++ programmer 
would NOT USE those features if they weren't needed. Indeed, a mature 
C++ programmer would probably use Java if those features weren't needed.

Too many programmers use features like kids eat candy - the more the 
better! A great programmer likes a tool like a candy shop - but he has 
the self control to only take what he needs - not the entire shop!

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From antlr at jazillian.com  Wed Nov  1 12:58:07 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 01 Nov 2006 15:58:07 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <0E12AB82-E35B-4B14-B887-DBFD67CFEC6C@cs.usfca.edu>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>
	<0E12AB82-E35B-4B14-B887-DBFD67CFEC6C@cs.usfca.edu>
Message-ID: <45490A5F.8000500@jazillian.com>

Terence Parr wrote:

>
> On Nov 1, 2006, at 11:45 AM, Andy Tripp wrote:
>
>>> Try feeding Java code or an ANTLR grammar to a C++ compiler. ;-)
>>>
>> Of course you need to know the input syntax and symantics (a  
>> little). That's different from
>> knowing the details of what the tool is doing. When talking to Ter,  
>> at one point I said
>> "and how do I know how many times that pattern was matched?" and he  
>> said "just check
>> n < 4". How was I supposed to know that ANTLR generated some code  
>> that included
>> a variable called n?
>
>
> You aren't.  You need to generate int n=0 and n++ code so you know  
> what's up. ;)

Or better yet, just call some sort of astNode.getChildCount() method 
while walking the AST :)

So, to sum up...when I have
...( statement )+...
Not only do I not want to have to figure out and then generate the 
"n-type-code" is that I need to
embedd in the ANTLR-generated code, I don't even want to walk the tree 
and call astNode.getChildCount()!

I just want to say something like:
int n = statementList.getStatementList().size()
In other words, I want an ANTLR-generated Java API that mirrors my grammar.
I want my parser's output to be a Java API (and implementation), not an 
AST like ANTLR produces
or even Java code that implements a treewalk like javacc produces.

Guess I'm just being difficult :)
Andy


>
> Ter
>


From parrt at cs.usfca.edu  Wed Nov  1 13:26:52 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Nov 2006 13:26:52 -0800
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <45490A5F.8000500@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>
	<0E12AB82-E35B-4B14-B887-DBFD67CFEC6C@cs.usfca.edu>
	<45490A5F.8000500@jazillian.com>
Message-ID: <CE02E8E5-F4EE-4E37-875B-EF99456D5151@cs.usfca.edu>


On Nov 1, 2006, at 12:58 PM, Andy Tripp wrote:
>> You aren't.  You need to generate int n=0 and n++ code so you  
>> know  what's up. ;)
>
> Or better yet, just call some sort of astNode.getChildCount()  
> method while walking the AST :)
>
> So, to sum up...when I have
> ...( statement )+...
> Not only do I not want to have to figure out and then generate the  
> "n-type-code" is that I need to
> embedd in the ANTLR-generated code, I don't even want to walk the  
> tree and call astNode.getChildCount()!

Or, better yet:

statement+[4]

to match just 4.  Better than using code. ;)

> Guess I'm just being difficult :)

Good on you!  I'm always difficult ;)

Ter

From parrt at cs.usfca.edu  Wed Nov  1 13:55:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Nov 2006 13:55:33 -0800
Subject: [antlr-interest] 2.7.7 released :)
Message-ID: <48D8AF38-58E6-48F2-98D1-3304AAAE5C42@cs.usfca.edu>

Hi,

Get it while it's hot.

http://www.antlr.org/download/antlr-2.7.7.tar.gz

Wolfgang built his MSI files again.  See

http://www.antlr.org/download.html

Thanks to all the people that submitted patches and the language  
target folks: Micheal Jordan, Kunle Odutola, Anthony Oguntimehin,  
Wolfgang Hafelinger, Marq Kole, Ric Klaren.  Am i missing anyone?

Ter

From open.zone at virgin.net  Wed Nov  1 14:49:26 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed, 1 Nov 2006 22:49:26 -0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <4548F943.7070906@jazillian.com>
Message-ID: <002801c6fe07$fc712ee0$c704a8c0@hercules>

Hi Andy,

> I don't think I'm changing my position. I still disagree with that 
> quote. I think almost all the great tools
> are the ones that the majority of programmers to "get". In 
> fact, that's 
> part of what makes them great.

I don't think "popular" and "great" (when applied to tools) are synonyms.

Some "great" tools are accessible to the majority. Others are not.

> >Being a great tool for the job doesn't guarantee popularity. 
> Popularity 
> >is ultimately a measure of the tool's accessibility to average 
> >programmers (they are the majority). Great tools are often 
> beyond the 
> >ability of the average programmer. Certainly to build. And 
> often to use 
> >too.
> >  
> >
> I disagree. I view Java as being "great" and C++ not being 
> "great".

If productivity (not power) is the priority, Java/C# is likely to be a
better tool than C++ for those problems to which Java is applicable.

Otherwise C++ (or some other tool) is better.

> >C++ is a great tool (Java was written using it). Most Java 
> programmers
> >wouldn't be able to master it. Or the domain expertise 
> needed to build 
> >Java itself.
> >  
> >
> Well, I think Java is far better than C++,

I thought you might.

> and I think the 
> vast majority 
> of programmers who know both
> agree with me.

I make no such claim (I have no idea what the vast majority of competent
Java/C++ programmers think).

> Probably the main benefit is that it's easy to use for 
> "average programmers". That's also why
> ANTLR is better than the competition - because it's easier to use.

Not to my mind. Coco/R, JavaCC, SLK are equally easy to use (if one takes
the time to learn them).

ANTLR's "popularity" is due to a lot if things including: Ter's predicated
LL(k)/LL(*) technology, [somewhat] comprehensible code generation for
multiple target languages, grammar as documentation for all phases of
translation, it's PD or BSD license, funky codegen in V3 etc

> Yes, a few people want to add stuff back, but most do not. It's just 
> that the few are very vocal.
> The vast majority don't want MI, operator overloading, or built-in 
> AspectOrientedDesign.

The "vast majority" don't understand the value/utility of MI, mixins, or the
"why?" of AOD  etc.

> >>And that's why Java is popular and
> >>Smalltalk and 
> >>LISP are not.
> >>It's also why people prefer Java over C++.
> >>    
> >It is a easier tool to use. Less powerful. But easier.
> >  
> Right - so I hope there's nothing wrong with me pushing to make ANTLR 
> (or some successor)
> easier to use. A compiler is easier to use than compiling by 
> hand, but 
> also less powerful.
> I'm ok with that.

In the context of this thread, "compiling by hand" is not a tool.

How would you change in ANTLR to make it easier?

> >>Sometimes they do, but sometimes they don't. Compilers never require
> >>in-depth
> >>domain expertise.

> >Try feeding Java code or an ANTLR grammar to a C++ compiler. ;-)

> Of course you need to know the input syntax and symantics (a little). 
> That's different from
> knowing the details of what the tool is doing.

> That's like having to know the details about the 
> bytecode that
> javac creates. I don't have to read the manual for that stuff...I'd 
> rather have the tool not
> force me to know those details.

Quite often just getting "something that works" is all that is required.
Getting the best output from a compiler requires knowing more about what
goes on under the hood.

> >For your examples of [general purpose language] compiler and ANTLR 
> >[grammar language compiler], the domain expertise isn't 
> primarily about 
> >the internals of the tool. It's about the syntax, semantics 
> and idioms 
> >of the language recognized by the tool. Knowledge of the tool's 
> >internals can elevate those who have it above the "average" user who 
> >doesn't.
> >  
> >
> But required knowledge of the tool's internals limits the "average" 
> user's productivity.

A user is already limited if he/she don't understand how a tool works.
Whether or not that matters depends on what they are trying to accomplish.

> >Java's swan song is productivity (for those problems to 
> which to it can 
> >be applied). Not power as in flexibility, expressivity or 
> performance.
> >
> >I use Java/C# for the productivity benefits. If performance, 
> >flexibility or expressivity was *more* important in a particular 
> >project, there are better tools than Java/C# (e.g. C++, Occaml).
> >  
> >
> Right, so you're just like the rest of us. You've chosen to 
> limit your 
> own "power" by using Java rather
> than, say, assembly. So I'm sticking with my claim that
> "I think a tool can be great while being simple enough for most 
> programmers (e.g. Java)."
> and not buying your "Not without limiting it's power" reply.

It isn't "my" reply. The fact is:
- Java/C# is less powerful than assembler, C or C++ (you need them to build
java/c# in the first place).
- For some problems, Java/C# is more productive than assembler, C or C++.

> >Incidentally, your DSL is just a small part of your 
> particular language 
> >recognition toolkit.
> >
> It is??? How do you know that?

Relying on what I've learned about similar systems.
If it isn't I'd like to hear more about it.

> >He isn't using ANTLR directly (i.e. creating/maintaining ANTLR 
> >grammars) so, no surprise if he hasn't had to learn to use ANTLR.
> >  
> >
> Ah, but he is using ANTLR directly: he spends all day working 
> with the 
> Token streams produced by ANTLR,
> without having ever seen an ANTLR grammar. That's possible when using 
> ANTLR as a lexer,
> but that wouldn't be possible using its parser.

I disagree. He is working with code generated by ANTLR. He isn't using
ANTLR.

> >He _is_ using a DSL you created to encode source-to-source 
> >transformations. You just expressed the opinion that he has 
> aquired the 
> >domain expertise required to use your DSL.
> >  
> >
> Yes, so if you believe me when I say that my DSL is orders of 
> magnitude 
> easier to use than
> to use ANTLR to build and walk ASTs, then you must see my point: He's 
> much more productive.

But he is also limited to what your DSL allows - cf. "not without limiting
it's power". 

If he used ANTLR directly (like you did). He can do more. Your DSL (like
Java/C#) favours productivity over power/flexibility.

> So I'm building my DSL (and other code) on top of 
> ANTLR/lexer. I think 
> there's an opportunity
> for Terence to build a better and different tool in place of the 
> ANTLR/parser - one that doesn't
> require users to know formal language theory or picture ASTs in their 
> heads.

Personally, I can't see how that is possible.

> >Not by the design of the compiler. But by how well tested it 
> is. And by 
> >how well documented Java (and javacc) is.
> >
> No, I do think it's by the design of the compiler - by the design of 
> compilers in general.

ANTLR *is* a compiler.

> Compiler designers take it as a given that users need only know the 
> syntax/semantics of the input
> language. If Ter took it as a given that ANTLR4 users need 
> only know the 
> syntax/semantics
> of the input language, he'd end up with a very different tool.

When using ANTLR, that is all one needs to know. By knowing even more, it is
possible to do even more than the "average" ANTLR user.

> >Now with ANTLR V3, not only can you look at the output code 
> it if you 
> >wish but, for the price of a little more knowledge (i.e. domain 
> >expertise), you can change it!.
> >  
> >
> I can change the bytecode generated by javac, too. If javac let me do 
> that, it would be an indication
> to the javac designer that his design is less-than-great.

Or that "the [above average] programmer knows best" to paraphrase the C/C++
motto.

A compiler designer can't determine the best code to generate for every
possible situation in advance. This feature makes the tool more useful - for
those who care to acquire the knowledge required to use it effectively. It
empowers knowledgeable users to tailor the output for any given situation.


Micheal


From sunjigang1965 at yahoo.com.cn  Wed Nov  1 14:53:32 2006
From: sunjigang1965 at yahoo.com.cn (Jigang (Robert) Sun)
Date: Thu, 2 Nov 2006 06:53:32 +0800 (CST)
Subject: [antlr-interest] grammar conversion
Message-ID: <20061101225332.38310.qmail@web15702.mail.cnb.yahoo.com>

I know N = X | N Y could be converted to N = X (Y)*
Now a grammar is N = X | N Y N, should it be converted to N = X (Y N)* or N = X (Y X)* ?

Thanks.
Jigang


		
___________________________________________________________ 
????????-3.5G???20M??? 
http://cn.mail.yahoo.com

From parrt at cs.usfca.edu  Wed Nov  1 14:59:41 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Nov 2006 14:59:41 -0800
Subject: [antlr-interest] lexer rule attributes
Message-ID: <CD8D8CA9-559C-4620-B4FF-9C53F3B9692C@cs.usfca.edu>

Hi,
Lexer rules always have an implicit return value of type Token that  
is sent back to the parser, however, lexer rules that refer to other  
lexer rules may access those portions of the overall token matched by  
the other rules and returned as implicit tokens. The following rule  
illustrates a composite lexer rule that reuses another token definition.

PREPROC_CMD
         :       '#' ID {System.out.println("cmd="+$ID.text);}
         ;
ID      :       ('a'..'z'|'A'..'Z')+
         ;
Lexer (non-fragment) rules may also contain actions that access  
attributes of the surrounding rule itself. Code generated for rules  
begins with a preamble that sets the predefined attributes:

ruleNestingLevel++;
int type = <standin>ruleTokenType</standin>;
int start = getCharIndex();
int line = getLine();
int charPosition = getCharPositionInLine();
int channel = Token.DEFAULT_CHANNEL;

BUT, do we want to say $text, $line, etc... for consistency?  It  
means adding a bunch more templates to handle these predefined  
attributes.  $line is translated to line etc...  $text however needs  
to be getText().  Hmm...should lexer rules be treated differently?

Ter

From lgcraymer at yahoo.com  Wed Nov  1 15:04:24 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 1 Nov 2006 15:04:24 -0800 (PST)
Subject: [antlr-interest] grammar conversion
In-Reply-To: <20061101225332.38310.qmail@web15702.mail.cnb.yahoo.com>
Message-ID: <20061101230424.91482.qmail@web55909.mail.re3.yahoo.com>

The second works--you can prove that by mathematical
induction.  That is
recursion level            result
0                          X
1                          XYX
2                          XYXYX
...
n                          X (YX)+n
n+1                        XYN[n] = X (YX)+n+1

where N[n] is N from recursion level n and (YX)+n is n
copies of YX.

--Loring

--- "Jigang (Robert) Sun" <sunjigang1965 at yahoo.com.cn>
wrote:

> I know N = X | N Y could be converted to N = X (Y)*
> Now a grammar is N = X | N Y N, should it be
> converted to N = X (Y N)* or N = X (Y X)* ?
> 
> Thanks.
> Jigang
> 
> 
> 		
>
___________________________________________________________
> 
> ????????????????-3.5G??????20M?????? 
> http://cn.mail.yahoo.com
> 



 
____________________________________________________________________________________
Want to start your own business? Learn how on Yahoo! Small Business 
(http://smallbusiness.yahoo.com) 


From jimi at intersystems.com  Wed Nov  1 15:06:54 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 1 Nov 2006 18:06:54 -0500
Subject: [antlr-interest] Grammar needed
In-Reply-To: <f1cbf91a17055.4547cd66@Princeton.EDU>
Message-ID: <20061101230646.E03ED1600@mail.intersystems.com>

I doubt, though it is not impossible, that anyone has an ANTLR grammar for this, at least one that is freely available. However EDIF is very well specified and so is EXPRESS so I think that it would not be a difficult job to type it in from the specs (and the contribute it for others of course ;-).

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
 
Any one has any idea whether I can get a Grammar for EDIF. I want to write a parser for EDIF in ANTLR. 
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.13.21/510 - Release Date: 11/1/2006
 

From jimi at intersystems.com  Wed Nov  1 15:21:19 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 1 Nov 2006 18:21:19 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <0E12AB82-E35B-4B14-B887-DBFD67CFEC6C@cs.usfca.edu>
Message-ID: <20061101232111.7FECA978@mail.intersystems.com>

To be honest it is this sort of question (and the answer) that we need to have in the book. The problem is that I would not have thought of this question in a million years (and that is no slight on Andy at all).

For things like this though, remember that ANTLR tries to generate the minimum of code that is required to do the parse and does not automatically include things for stuff you MIGHT want to do as part of the parse. However, it makes it very easy for you to put your own bits of code in there. 

So, think of the grammar like a code template and 'feel' how it works its way through the syntax or the tree. Then where to put a simple counter or a symbol table will just come naturally (honestly, it will!)

The tree grammar says "You will find this bit of tree at these places", then your counter just needs to be higher up the food chain than that to work, and then high enough up the chain to be in scope when you want to use it for something. Recognize something, reach back and count it/register it, move on through the tree.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, November 01, 2006 12:05 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] philosophy about translation


On Nov 1, 2006, at 11:45 AM, Andy Tripp wrote:
>> Try feeding Java code or an ANTLR grammar to a C++ compiler. ;-)
>>
> Of course you need to know the input syntax and symantics (a  
> little). That's different from
> knowing the details of what the tool is doing. When talking to Ter,  
> at one point I said
> "and how do I know how many times that pattern was matched?" and he  
> said "just check
> n < 4". How was I supposed to know that ANTLR generated some code  
> that included
> a variable called n?

You aren't.  You need to generate int n=0 and n++ code so you know  
what's up. ;)

Ter

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.13.21/510 - Release Date: 11/1/2006
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.13.21/510 - Release Date: 11/1/2006
 

From kroepke at classdump.org  Wed Nov  1 15:36:43 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 2 Nov 2006 00:36:43 +0100
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <20061101232111.7FECA978@mail.intersystems.com>
References: <20061101232111.7FECA978@mail.intersystems.com>
Message-ID: <24BF4416-6867-466C-AFF3-843F20B35BA5@classdump.org>


On 2. Nov 2006, at 0:21 , Jim Idle wrote:

> To be honest it is this sort of question (and the answer) that we  
> need to have in the book. The problem is that I would not have  
> thought of this question in a million years (and that is no slight  
> on Andy at all).

It'd be a start to collect these bits of wisdom in the wiki. A book  
is so static and won't be revised that often...which isn't to say  
that it shouldn't be part of the book, maybe in a sort of cookbook  
chapter or so.
Like a "Cool things to pull off"-page. A FAQ entry wouldn't be  
appropriate, as you just admitted ;)

-k
-- 
Kay R?pke <kroepke at classdump.org>
classdump Software
Key fingerprint = A849 0F2C C322 4022 379E  8661 7E1B FE0D 4CD2 A6D0




From jimi at intersystems.com  Wed Nov  1 15:45:05 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 1 Nov 2006 18:45:05 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <45490A5F.8000500@jazillian.com>
Message-ID: <20061101234457.51ABD905@mail.intersystems.com>



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp

>> n < 4". How was I supposed to know that ANTLR generated some code  
>> that included
>> a variable called n?
>
>
> You aren't.  You need to generate int n=0 and n++ code so you know  
> what's up. ;)

Or better yet, just call some sort of astNode.getChildCount() method 
while walking the AST :)


Andy, as per the previous post, ANTLR does not generate code for things that you might like to do, or before too long you would get a parser that would be slower than reading the input text out loud ;-).

I hate to think what astNode.getChildCount() would have to do to be a generic thing in any tree parser, if it could even be done. There is a count of child nodes for any node available one way or another, but that is not context sensitive for your purpose, other than it falls out of the tree construct. However:


stuff
	: { int n = 0; }
		( otherStuff { n++; } )+
	;


Seems pretty obvious, and is just one way to do it, subject to scoping rules.


stuff
	scope { int stuffCount; }
	@init { $stuff::stuffCount = 0; }
	: stuffbits+
		{ 
			System.out.println("There are " + $stuff::stuffCount 
							+ " things!");
		}

stuffbits
	: ^(SUMMAT grand) // This line for Yorkshire folk
	{
		$stuff:stuffCount++;
	}
	;

Is another...



So, to sum up...when I have
...( statement )+...
Not only do I not want to have to figure out and then generate the 
"n-type-code" is that I need to
embedd in the ANTLR-generated code, I don't even want to walk the tree 
and call astNode.getChildCount()!

I just want to say something like:
int n = statementList.getStatementList().size()
In other words, I want an ANTLR-generated Java API that mirrors my grammar.
I want my parser's output to be a Java API (and implementation), not an 
AST like ANTLR produces
or even Java code that implements a treewalk like javacc produces.

Guess I'm just being difficult :)


:-) There may be some merit in this request I think, but I am not sure if what you are asking for is what you want ;-). I would suspect that the API that is generated would require more detailed knowledge of what is going on than the generic knowledge required to use action code neatly, and would be less obvious in use.
 
Jim

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.13.21/510 - Release Date: 11/1/2006
 

From antlr at jazillian.com  Wed Nov  1 19:30:57 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 01 Nov 2006 22:30:57 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <5ts8pRRamQSFFw6h@thewolery.demon.co.uk>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>
	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>
Message-ID: <45496671.9010008@jazillian.com>

Anthony W. Youngman wrote:

> In message <4548F943.7070906 at jazillian.com>, Andy Tripp 
> <antlr at jazillian.com> writ
> I wouldn't describe "popular" as "great".

I would say popularity is a pretty good indicator or "greatness". By 
"popular", I mean "widely seen
as good from a technology point of view". So Java is "popular" that way: 
a lot of people use it
because of its technical merits. COBOL is widely used, but almost no one 
uses it because of its
technical merits.

>> Well, I think Java is far better than C++, and I think the vast 
>> majority of programmers who know both
>> agree with me. Probably the main benefit is that it's easy to use for 
>> "average programmers". That's also why
>> ANTLR is better than the competition - because it's easier to use.
>>
> You've just said Java doesn't have pointers. So how do you access a 
> hardware register in Java? How do you access a screen buffer?

You access them indirectly. Leave the underlying details to a lower layer.

>> Yes, a few people want to add stuff back, but most do not. It's just 
>> that the few are very vocal.
>> The vast majority don't want MI, operator overloading, or built-in 
>> AspectOrientedDesign.
>> And of course, those who want them think they're "above average", but 
>> then so does almost
>> everyone.
>>
> What about those who don't WANT those things, but NEED them?

Every time I've heard anyone say they NEED MI, operator overloading, or 
Aspects, I've thought
that they really don't need them, they're just not good enough 
programmers to see a clean way
to do without them. I've been programming for 25 years without ever 
NEEDING any of these,
and so have most other programmers.

>
>>>
>>>> And that's why Java is popular and Smalltalk and LISP are not.
>>>> It's also why people prefer Java over C++.
>>>>
>>>
>>> It is a easier tool to use. Less powerful. But easier.
>>>
>> Right - so I hope there's nothing wrong with me pushing to make ANTLR 
>> (or some successor)
>> easier to use. A compiler is easier to use than compiling by hand, 
>> but also less powerful.
>> I'm ok with that.
>>
> So - you're quite happy to see Antlr crippled to suit you, ignoring 
> the NEEDS of those who need its power!

Don't worry, I can't cripple ANTLR.  But yes, I'd be happy to see ANTLR4 
become a "crippled" version,
in the same sense that Java is a "crippled" version of C++.

>>>
>>>
>> But required knowledge of the tool's internals limits the "average" 
>> user's productivity.
>> If I had done AST-based translation, I'd be spending way to much time 
>> worrying about the details
>> of the AST, rather than the syntax and semantics of the two 
>> languages. I demand to spend 95% of
>> my time on *what* to do, rather than *how* to do it. With ASTs, I 
>> found myself spending
>> 95% of my time on *how*.
>>
> In other words, as you said earlier, ASTs are the wrong tool for you. 
> So you seem happy to delete ASTs from Antlr because *you* don't need 
> them, irregardless of what other people *NEED*.

Yes, just as I railed against operator overloading and MI in C++, and 
found bliss in Java.
I don't much care that other people think they *NEED* MI. They can 
always stick with C++.

>>>
>> Right, so you're just like the rest of us. You've chosen to limit 
>> your own "power" by using Java rather
>> than, say, assembly. So I'm sticking with my claim that
>> "I think a tool can be great while being simple enough for most 
>> programmers (e.g. Java)."
>> and not buying your "Not without limiting it's power" reply.
>>
> To my mind, that's not a "great" tool. As I said above, "popular", maybe.

Right, so let's just agree to disagree on that. If we can't agree that 
Java is "greater" than assembly,
we won't agree on much else.

>
> Let's ask a question ... how can a tool be "great" if it *relies* on 
> other tools even for its existence?

Sure, of course! Virtually all software relies on other tools 
(compilers, operating systems, etc) for their existence.

>
> A C compiler can compile itself. Can a Java system build itself? How 
> much of Java is actually written in Java? (Oh and I'm including the 
> supporting libraries here!)

Almost all of Java is written in Java. The only part that's not is the 
lowest layer, which is OS and hardware specific.

>
> Antlr v3 is due to be rewritten in Antlr v3. To my mind, that's a 
> "necessary but not sufficient" condition for greatness.

Wow. Only software that's written in itself can be "great"? Are you 
really saying that?

>>>
>>>
>>> He _is_ using a DSL you created to encode source-to-source 
>>> transformations.
>>> You just expressed the opinion that he has aquired the domain expertise
>>> required to use your DSL.
>>>
>> Yes, so if you believe me when I say that my DSL is orders of 
>> magnitude easier to use than
>> to use ANTLR to build and walk ASTs, then you must see my point: He's 
>> much more productive.
>> So I'm building my DSL (and other code) on top of ANTLR/lexer. I 
>> think there's an opportunity
>> for Terence to build a better and different tool in place of the 
>> ANTLR/parser - one that doesn't
>> require users to know formal language theory or picture ASTs in their 
>> heads.
>
>
> But what if the problem can only be specified in terms of formal 
> language theory? 

Then you'd have a different situation. But surely you're not saying that 
a language-to-language translator
can only be specified in terms of formal language theory, are you?

> There is something called "intelligence". If you don't have sufficient 
> intelligence, you *cannot* learn certain things. You want to give a 
> programmer a tool, so you can set him a problem he is INCAPABLE of 
> comprehending. I hope I never have to rely on (or even USE) code 
> written by a coder like that !!!

Well, virtually every coder in the world is like that. Only a handful of 
people in the world know the details of what their
compiler is doing as they use it every day. Same goes for the OS and the 
hardware. Same goes for  the car you drive
and just about everything other non-trivial machine you use: you use it 
without knowing much about how it works.
That's what makes the world go round :)

>>
>>>> I want to do. I *never* have to look at java byte code - I'm 
>>>> completely hidden from that
>>>> by the design of the compiler.
>>>>
>>>
>>> Not by the design of the compiler. But by how well tested it is. And 
>>> by how
>>> well documented Java (and javacc) is.
>>
>> No, I do think it's by the design of the compiler - by the design of 
>> compilers in general.
>> Compiler designers take it as a given that users need only know the 
>> syntax/semantics of the input
>> language. If Ter took it as a given that ANTLR4 users need only know 
>> the syntax/semantics
>> of the input language, he'd end up with a very different tool.
>
>
> That would appeal to a completely different set of users. He's written 
> a tool that does what he needs, and it appeals to users with similar 
> needs.

Just as the first assembler writers built tools that solved their own 
needs. Eventually, they were able to completely hide
the lower level detail, and attack problems at a whole higher level of 
thinking. Same for compiler writers.

>
>
> Maybe he will write your version of Antlr 4, but it will be a compiler 
> not a lexer/parser - a completely different tool!
>
>>
>>> Many Javacc users - who can and care
>>> to look under hood - have tripped over bugs-a-plenty in it yet, 
>>> "average"
>>> Javacc users don't discover those same bugs in the same tool even 
>>> when they
>>> write code that triggers it.
>>>
>>> Knowledge of Java and bytecode and how javacc works means "above 
>>> average"
>>> users can do more with Java and javacc than the average programmer can.
>>> Knowing more, lets you do more.
>>>
>>> ANTLR is similar and different. Different because it suffers in 
>>> comparison
>>> by being a less popular tool with less resources behind it. 
>>> Nevertheless,
>>> for someone with a deep knowledge of ANTLR's grammar language, it's
>>> limitations (e.g. no predicate hoisting and approximate-LLk in 2.x) 
>>> and the
>>> available documentation, there really is no need to look at the 
>>> output code.
>>>
>> Well, sure, it's mostly covered in the documentation. But that 
>> doesn't change the fact that it could be
>> made a lot easier (IMO). What makes Java great and C++ not-so-great 
>> is that Java programmers
>> never have to go look up the syntax for "pointer to function that 
>> returns an int pointer". Similarly,
>> a tool that didn't make me look up how to figure out how many 
>> patterns a "*" matched would make
>> the tool great.
>>
> And then the programmer needs a pointer to write to a bit of hardware, 
> and throws Java out in disgust because his "great" tool is useless for 
> the job at hand ...

Right. And probably gets fired if his boss finds out that he's trying to 
write a bit directly to hardware.
He thinks he needs to do that, and he thinks he's smart, but he's not. 
That's pretty rare these days to
have anyone feel that they need direct access to the hardware. We're 
many levels beyond that now.

>
>>> You develop your grammar, you develop your tests, you build the 
>>> whole lot
>>> and, the tests will alert you if you need to change anything. Unless 
>>> you
>>> trip over a bug in ANTLR of course...
>>>
>>> Now with ANTLR V3, not only can you look at the output code it if 
>>> you wish
>>> but, for the price of a little more knowledge (i.e. domain 
>>> expertise), you
>>> can change it!.
>>
>> I can change the bytecode generated by javac, too. If javac let me do 
>> that, it would be an indication
>> to the javac designer that his design is less-than-great.
>>
> Because javac is meant to convert java source accurately to java 
> bytecode. While Antlr is meant to (and does) accurately convert its 
> sourcecode into a lexer/parser/treewalker, it is also designed to let 
> you do things beyond the power of the tool. Both fit their design aims 
> - javac creates a java program, Antlr creates an extensible 
> lexer/parser/treewalker. Both are *good* tools, that doesn't 
> necessarily mean they are *great* tools.
>
> At the end of the day, I think your definition of "great" is badly 
> flawed - "a great tool lets a mediocre programmer do a decent job". A 
> great programmer could probably outperform that mediocre programmer 
> without that tool. 

Heh, it's been a while since I heard the "A great programmer can write 
better code than the compiler" line.
Used to hear that a lot 20 years ago, not much any more.

> To my mind, "a great tool lets a great programmer give of his best". 
> And a mediocre programmer would not be able to use that tool, because 
> he would not be able to understand it.
>
> There's a BIG difference between the RIGHT tool, and a GREAT tool. 
> Would you call a hammer a *great* tool when you have a pack of nails? 
> I don't know as I'd call a nailgun a great tool but it's certainly 
> greater than a hammer. And it requires a greater level of *maturity* 
> than a hammer to use safely.

The nailgun is greater than the hammer because it does the same job 
better *without* forcing the user to know the details
(how it works internally). If you had to constantly tweak the nailgun 
internals to get things done, it might still be "good" or
even "great", but not as good as it could be.

>
> The greater the tool, the greater the level of maturity required to be 
> able to use it safely. 

If you want to use that meaning for "great", that's fine. But I do 
disagree. If you had one space shuttle
that was completely safe and automated, that would be a "greater" tool 
than one that requires maturity, IMO.
Especially if you have millions of shuttle pilots, and not just a few.

> And the fewer the number of programmers who are capable of reaching 
> that level of maturity ... you go on about the "dangerous features" of 
> C++ as opposed to Java. A mature C++ programmer would NOT USE those 
> features if they weren't needed. Indeed, a mature C++ programmer would 
> probably use Java if those features weren't needed.

Haven't heard that one in a while either. Yes, yes, I know, it's not C++ 
that's dangerous, it's just those *other* guys
who are bad programmers and are misusing it. And we Java fans are just 
not manly enough to handle
MI and operator overloading.

>
>
> Too many programmers use features like kids eat candy - the more the 
> better! A great programmer likes a tool like a candy shop - but he has 
> the self control to only take what he needs - not the entire shop!

Yea, yea, heard it all before. It's all those *other*, less-intelligent 
programmers that are using operator overloading
to apply the "+" operator to the "Person" class. We smart programmers 
know that we *NEED* operator overloading
for our matrix multiplication. Bleh. :)

>
> Cheers,
> Wol



From antlr at jazillian.com  Wed Nov  1 20:10:28 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 01 Nov 2006 23:10:28 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <002801c6fe07$fc712ee0$c704a8c0@hercules>
References: <002801c6fe07$fc712ee0$c704a8c0@hercules>
Message-ID: <45496FB4.2070309@jazillian.com>

Micheal J wrote:

>Hi Andy,
>
>  
>
>>I don't think I'm changing my position. I still disagree with that 
>>quote. I think almost all the great tools
>>are the ones that the majority of programmers to "get". In 
>>fact, that's 
>>part of what makes them great.
>>    
>>
>
>I don't think "popular" and "great" (when applied to tools) are synonyms.
>  
>
I don't either, that's why I said "in part".

>Some "great" tools are accessible to the majority. Others are not.
>
>  
>
>>>Being a great tool for the job doesn't guarantee popularity. 
>>>      
>>>
>>Popularity 
>>    
>>
>>>is ultimately a measure of the tool's accessibility to average 
>>>programmers (they are the majority). Great tools are often 
>>>      
>>>
>>beyond the 
>>    
>>
>>>ability of the average programmer. Certainly to build. And 
>>>      
>>>
>>often to use 
>>    
>>
>>>too.
>>> 
>>>
>>>      
>>>
>>I disagree. I view Java as being "great" and C++ not being 
>>"great".
>>    
>>
>
>If productivity (not power) is the priority, Java/C# is likely to be a
>better tool than C++ for those problems to which Java is applicable.
>
>Otherwise C++ (or some other tool) is better.
>  
>
And Java is *always* the priority. The only way you'd ever fall back to 
C++ is if there really
wasn't enough power in Java. And I've only heard of one or two cases of 
that.

>>and I think the 
>>vast majority 
>>of programmers who know both
>>agree with me.
>>    
>>
>
>I make no such claim (I have no idea what the vast majority of competent
>Java/C++ programmers think).
>  
>
Then you should get out more. Talk to 10 co-workers about Java vs. C++, 
or go to a conference.
I'd say that less than 5% of those who've actually used both Java and 
C++ prefer C++.
That's from my experience of talking to perhaps a few hundred developers 
about it.

>  
>
>>Probably the main benefit is that it's easy to use for 
>>"average programmers". That's also why
>>ANTLR is better than the competition - because it's easier to use.
>>    
>>
>
>Not to my mind. Coco/R, JavaCC, SLK are equally easy to use (if one takes
>the time to learn them).
>
>ANTLR's "popularity" is due to a lot if things including: Ter's predicated
>LL(k)/LL(*) technology, 
>
LL(*) is brand new to V3, so that has nothing to do with it. And some of 
the others are LL(k), so
I don't think that's it, either. I'm using Javacc now, and it's driving 
me nuts, just as lex/yacc
and similar tools did.

>[somewhat] comprehensible code generation for
>multiple target languages, grammar as documentation for all phases of
>translation, it's PD or BSD license, funky codegen in V3 etc
>
>  
>
>>Yes, a few people want to add stuff back, but most do not. It's just 
>>that the few are very vocal.
>>The vast majority don't want MI, operator overloading, or built-in 
>>AspectOrientedDesign.
>>    
>>
>
>The "vast majority" don't understand the value/utility of MI, mixins, or the
>"why?" of AOD  etc.
>  
>
That's a circular argument. If someone "understands the value" of MI, 
etc. then of course they want it.
It's that "vast majority" who know what they are and don't want them 
that matters.

>  
>
>>>>And that's why Java is popular and
>>>>Smalltalk and 
>>>>LISP are not.
>>>>It's also why people prefer Java over C++.
>>>>   
>>>>        
>>>>
>>>It is a easier tool to use. Less powerful. But easier.
>>> 
>>>      
>>>
>>Right - so I hope there's nothing wrong with me pushing to make ANTLR 
>>(or some successor)
>>easier to use. A compiler is easier to use than compiling by 
>>hand, but 
>>also less powerful.
>>I'm ok with that.
>>    
>>
>
>In the context of this thread, "compiling by hand" is not a tool.
>  
>
The point is that just because one approach (whether tool or not) is 
less powerful doesn't
mean that it's worse.

>How would you change in ANTLR to make it easier?
>  
>
Short answer: hide all the details from me. Make it so that I have no 
idea that
there is code being generated to do lexing and parsing. Let me just give 
it a C grammar
and a Java grammar, and then dive in and start writing translation logic 
without any
generated code or even ASTs in sight. How to do that is left as an 
exercise for the reader.

>
>>That's like having to know the details about the 
>>bytecode that
>>javac creates. I don't have to read the manual for that stuff...I'd 
>>rather have the tool not
>>force me to know those details.
>>    
>>
>
>Quite often just getting "something that works" is all that is required.
>Getting the best output from a compiler requires knowing more about what
>goes on under the hood.
>  
>
Yea, I know. You can do a better job at garbage collection than java's 
gc. You can write
better byte code than javac because you've studied javac and bytecode.

The Java JIT guys say the first rule of performance optimization is to 
STOP doing whatever
it is you're doing that you think is producing better bytecode. And what 
did Terence find
out about performance when he tried generating his own bytecode?

>  
>
>>>For your examples of [general purpose language] compiler and ANTLR 
>>>[grammar language compiler], the domain expertise isn't 
>>>      
>>>
>>primarily about 
>>    
>>
>>>the internals of the tool. It's about the syntax, semantics 
>>>      
>>>
>>and idioms 
>>    
>>
>>>of the language recognized by the tool. Knowledge of the tool's 
>>>internals can elevate those who have it above the "average" user who 
>>>doesn't.
>>> 
>>>
>>>      
>>>
>>But required knowledge of the tool's internals limits the "average" 
>>user's productivity.
>>    
>>
>
>A user is already limited if he/she don't understand how a tool works.
>Whether or not that matters depends on what they are trying to accomplish.
>  
>
Yes, we lower 99% of the programming community are writing sub-par code 
because we don't
understand how our compilers work. ;)

>  
>
>>>Java's swan song is productivity (for those problems to 
>>>      
>>>
>>which to it can 
>>    
>>
>>>be applied). Not power as in flexibility, expressivity or 
>>>      
>>>
>>performance.
>>    
>>
>>>I use Java/C# for the productivity benefits. If performance, 
>>>flexibility or expressivity was *more* important in a particular 
>>>project, there are better tools than Java/C# (e.g. C++, Occaml).
>>> 
>>>
>>>      
>>>
>>Right, so you're just like the rest of us. You've chosen to 
>>limit your 
>>own "power" by using Java rather
>>than, say, assembly. So I'm sticking with my claim that
>>"I think a tool can be great while being simple enough for most 
>>programmers (e.g. Java)."
>>and not buying your "Not without limiting it's power" reply.
>>    
>>
>
>It isn't "my" reply. The fact is:
>- Java/C# is less powerful than assembler, C or C++ (you need them to build
>java/c# in the first place).
>  
>
If that's your definition of "power", I don't see how it relates to 
anything. I need an engine to build
a car. That, to me, doesn't mean the engine is "more powerful" than the 
car. I'd say if anything
the car is "more powerful" (or maybe just "more useful") than the 
engine, as it lets you get the
job done faster.

>- For some problems, Java/C# is more productive than assembler, C or C++.
>  
>
I'd say "for almost all problems" but OK.

>  
>
>>>Incidentally, your DSL is just a small part of your 
>>>      
>>>
>>particular language 
>>    
>>
>>>recognition toolkit.
>>>
>>>      
>>>
>>It is??? How do you know that?
>>    
>>
>
>Relying on what I've learned about similar systems.
>If it isn't I'd like to hear more about it.
>  
>
It depends on how you measure, but I wouldnt' say my DSL is a "small part".

>  
>
>>>He isn't using ANTLR directly (i.e. creating/maintaining ANTLR 
>>>grammars) so, no surprise if he hasn't had to learn to use ANTLR.
>>> 
>>>
>>>      
>>>
>>Ah, but he is using ANTLR directly: he spends all day working 
>>with the 
>>Token streams produced by ANTLR,
>>without having ever seen an ANTLR grammar. That's possible when using 
>>ANTLR as a lexer,
>>but that wouldn't be possible using its parser.
>>    
>>
>
>I disagree. He is working with code generated by ANTLR. He isn't using
>ANTLR.
>  
>
Ah, come on. When someone is using a lexer built using ANTLR, you won't 
consider that to be
"using ANTLR?" As in "He's using ANTLR without ever seeing the input 
grammar". That's
like saying I'm not "using javac", I'm just using the bytecode that it 
generates.

>  
>
>>>He _is_ using a DSL you created to encode source-to-source 
>>>transformations. You just expressed the opinion that he has 
>>>      
>>>
>>aquired the 
>>    
>>
>>>domain expertise required to use your DSL.
>>> 
>>>
>>>      
>>>
>>Yes, so if you believe me when I say that my DSL is orders of 
>>magnitude 
>>easier to use than
>>to use ANTLR to build and walk ASTs, then you must see my point: He's 
>>much more productive.
>>    
>>
>
>But he is also limited to what your DSL allows - cf. "not without limiting
>it's power". 
>
>If he used ANTLR directly (like you did). He can do more. Your DSL (like
>Java/C#) favours productivity over power/flexibility.
>  
>
The whole point of building the DSL is because I think if he (or I) used 
ANTLR directly, we'd actually
"do less", not "do more". We'd get less accomplished because we'd be 
struggling with AST
shapes in our heads. The DSL lets us tackle the same problem at a higher 
level of abstraction.

>  
>
>>So I'm building my DSL (and other code) on top of 
>>ANTLR/lexer. I think 
>>there's an opportunity
>>for Terence to build a better and different tool in place of the 
>>ANTLR/parser - one that doesn't
>>require users to know formal language theory or picture ASTs in their 
>>heads.
>>    
>>
>
>Personally, I can't see how that is possible.
>  
>
I'm a bit fuzzy on the details, too :)

>  
>
>>>Not by the design of the compiler. But by how well tested it 
>>>      
>>>
>>is. And by 
>>    
>>
>>>how well documented Java (and javacc) is.
>>>
>>>      
>>>
>>No, I do think it's by the design of the compiler - by the design of 
>>compilers in general.
>>    
>>
>
>ANTLR *is* a compiler.
>  
>
Right, and as such, I believe it can do what "traditional" compilers do: 
hide all the underlying
stuff from the users.

>  
>
>>Compiler designers take it as a given that users need only know the 
>>syntax/semantics of the input
>>language. If Ter took it as a given that ANTLR4 users need 
>>only know the 
>>syntax/semantics
>>of the input language, he'd end up with a very different tool.
>>    
>>
>
>When using ANTLR, that is all one needs to know. 
>
No. To use ANTLR, you not only need to know the input language (say, C) 
syntax&symantics, you
also need to know:
* The ANTLR syntax&symantics
* How to hook in actions: where do they make sense? What language are 
they in?
* You often need to know details about the code that's generated to 
resolve ambiguities
* You need to know how the grammar maps to an AST structure. It's not 
enough to have a mental
   picture of the input grammar, you need to be able to form a mental 
picture of the AST each time
   you see a chunk of code.

>By knowing even more, it is
>possible to do even more than the "average" ANTLR user.
>
>  
>
>>>Now with ANTLR V3, not only can you look at the output code 
>>>      
>>>
>>it if you 
>>    
>>
>>>wish but, for the price of a little more knowledge (i.e. domain 
>>>expertise), you can change it!.
>>> 
>>>
>>>      
>>>
>>I can change the bytecode generated by javac, too. If javac let me do 
>>that, it would be an indication
>>to the javac designer that his design is less-than-great.
>>    
>>
>
>Or that "the [above average] programmer knows best" to paraphrase the C/C++
>motto.
>
>A compiler designer can't determine the best code to generate for every
>possible situation in advance. 
>
He doesn't need to always generate the best code. It's good enough that 
he just generally do
better than humans do.

>This feature makes the tool more useful - for
>those who care to acquire the knowledge required to use it effectively. It
>empowers knowledgeable users to tailor the output for any given situation.
>  
>
And yet, there is no equivalent in Java - no bytecode tweaking. And no 
one seems to mind.
And there is an equivalent in C/C++ - embedded asm code. That was 
popular 20 years ago,
but today's programmers realize that the assembler is probably better at 
producing good code,
and they don't need every last 1% of performance anyway.

So, I guess we're way off topic :( But thanks for the conversation!
Andy

>
>Micheal
>
>
>  
>


From robgreene at gmail.com  Wed Nov  1 20:17:29 2006
From: robgreene at gmail.com (Rob Greene)
Date: Wed, 1 Nov 2006 22:17:29 -0600
Subject: [antlr-interest] Dumping source code into generated output code...
Message-ID: <738584f80611012017o7e080e6aue2e1f4d3fb82e7a7@mail.gmail.com>

How would I go about emitting a line of source code into generated code as a
comment?  Is this possible?  What's the general strategy?

Something like this:
; x = x + 2      <-- original source line
    clc          <-- target assembly (or intermediate code) output
    lda x
    adc #2
    sta x

I've got a compiler functioning now (nowhere near complete) and it would be
really handy if I could have the original source code map into my output
assembly code.  That would give me visual signposts to identify where I am
in reference to the original source.

For reference, I use ANTLR to parse the language into ASTs and then into an
intermediate code (a three-address-ish type code) which is then optimized
and then I use StringTemplate to generate my target assembly.  At a minimum,
I'd like to dump the code references into my intermediate code with the hope
of passing it through to the target assembly code.

Thanks for any ideas!!
-Rob
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061101/78866a44/attachment.html 

From lgcraymer at yahoo.com  Wed Nov  1 20:18:33 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 1 Nov 2006 20:18:33 -0800 (PST)
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <45496671.9010008@jazillian.com>
Message-ID: <20061102041833.23269.qmail@web55911.mail.re3.yahoo.com>

Somehow, I think that utility should be the measure of
greatness rather than popularity.

--Loring

--- Andy Tripp <antlr at jazillian.com> wrote:

> Anthony W. Youngman wrote:
> 
> > In message <4548F943.7070906 at jazillian.com>, Andy
> Tripp 
> > <antlr at jazillian.com> writ
> > I wouldn't describe "popular" as "great".
> 
> I would say popularity is a pretty good indicator or
> "greatness". By 
> "popular", I mean "widely seen
> as good from a technology point of view". So Java is
> "popular" that way: 
> a lot of people use it
> because of its technical merits. COBOL is widely
> used, but almost no one 
> uses it because of its
> technical merits.
> 
> >> Well, I think Java is far better than C++, and I
> think the vast 
> >> majority of programmers who know both
> >> agree with me. Probably the main benefit is that
> it's easy to use for 
> >> "average programmers". That's also why
> >> ANTLR is better than the competition - because
> it's easier to use.
> >>
> > You've just said Java doesn't have pointers. So
> how do you access a 
> > hardware register in Java? How do you access a
> screen buffer?
> 
> You access them indirectly. Leave the underlying
> details to a lower layer.
> 
> >> Yes, a few people want to add stuff back, but
> most do not. It's just 
> >> that the few are very vocal.
> >> The vast majority don't want MI, operator
> overloading, or built-in 
> >> AspectOrientedDesign.
> >> And of course, those who want them think they're
> "above average", but 
> >> then so does almost
> >> everyone.
> >>
> > What about those who don't WANT those things, but
> NEED them?
> 
> Every time I've heard anyone say they NEED MI,
> operator overloading, or 
> Aspects, I've thought
> that they really don't need them, they're just not
> good enough 
> programmers to see a clean way
> to do without them. I've been programming for 25
> years without ever 
> NEEDING any of these,
> and so have most other programmers.
> 
> >
> >>>
> >>>> And that's why Java is popular and Smalltalk
> and LISP are not.
> >>>> It's also why people prefer Java over C++.
> >>>>
> >>>
> >>> It is a easier tool to use. Less powerful. But
> easier.
> >>>
> >> Right - so I hope there's nothing wrong with me
> pushing to make ANTLR 
> >> (or some successor)
> >> easier to use. A compiler is easier to use than
> compiling by hand, 
> >> but also less powerful.
> >> I'm ok with that.
> >>
> > So - you're quite happy to see Antlr crippled to
> suit you, ignoring 
> > the NEEDS of those who need its power!
> 
> Don't worry, I can't cripple ANTLR.  But yes, I'd be
> happy to see ANTLR4 
> become a "crippled" version,
> in the same sense that Java is a "crippled" version
> of C++.
> 
> >>>
> >>>
> >> But required knowledge of the tool's internals
> limits the "average" 
> >> user's productivity.
> >> If I had done AST-based translation, I'd be
> spending way to much time 
> >> worrying about the details
> >> of the AST, rather than the syntax and semantics
> of the two 
> >> languages. I demand to spend 95% of
> >> my time on *what* to do, rather than *how* to do
> it. With ASTs, I 
> >> found myself spending
> >> 95% of my time on *how*.
> >>
> > In other words, as you said earlier, ASTs are the
> wrong tool for you. 
> > So you seem happy to delete ASTs from Antlr
> because *you* don't need 
> > them, irregardless of what other people *NEED*.
> 
> Yes, just as I railed against operator overloading
> and MI in C++, and 
> found bliss in Java.
> I don't much care that other people think they
> *NEED* MI. They can 
> always stick with C++.
> 
> >>>
> >> Right, so you're just like the rest of us. You've
> chosen to limit 
> >> your own "power" by using Java rather
> >> than, say, assembly. So I'm sticking with my
> claim that
> >> "I think a tool can be great while being simple
> enough for most 
> >> programmers (e.g. Java)."
> >> and not buying your "Not without limiting it's
> power" reply.
> >>
> > To my mind, that's not a "great" tool. As I said
> above, "popular", maybe.
> 
> Right, so let's just agree to disagree on that. If
> we can't agree that 
> Java is "greater" than assembly,
> we won't agree on much else.
> 
> >
> > Let's ask a question ... how can a tool be "great"
> if it *relies* on 
> > other tools even for its existence?
> 
> Sure, of course! Virtually all software relies on
> other tools 
> (compilers, operating systems, etc) for their
> existence.
> 
> >
> > A C compiler can compile itself. Can a Java system
> build itself? How 
> > much of Java is actually written in Java? (Oh and
> I'm including the 
> > supporting libraries here!)
> 
> Almost all of Java is written in Java. The only part
> that's not is the 
> lowest layer, which is OS and hardware specific.
> 
> >
> > Antlr v3 is due to be rewritten in Antlr v3. To my
> mind, that's a 
> > "necessary but not sufficient" condition for
> greatness.
> 
> Wow. Only software that's written in itself can be
> "great"? Are you 
> really saying that?
> 
> >>>
> >>>
> >>> He _is_ using a DSL you created to encode
> source-to-source 
> >>> transformations.
> >>> You just expressed the opinion that he has
> aquired the domain expertise
> >>> required to use your DSL.
> >>>
> >> Yes, so if you believe me when I say that my DSL
> is orders of 
> >> magnitude easier to use than
> >> to use ANTLR to build and walk ASTs, then you
> must see my point: He's 
> >> much more productive.
> >> So I'm building my DSL (and other code) on top of
> ANTLR/lexer. I 
> >> think there's an opportunity
> >> for Terence to build a better and different tool
> in place of the 
> >> ANTLR/parser - one that doesn't
> >> require users to know formal language theory or
> picture ASTs in their 
> >> heads.
> >
> >
> > But what if the problem can only be specified in
> terms of formal 
> > language theory? 
> 
> Then you'd have a different situation. But surely
> you're not saying that 
> a language-to-language translator
> 
=== message truncated ===



 
____________________________________________________________________________________
Want to start your own business? Learn how on Yahoo! Small Business 
(http://smallbusiness.yahoo.com) 


From antlr at jazillian.com  Wed Nov  1 20:26:41 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 01 Nov 2006 23:26:41 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <20061101232111.7FECA978@mail.intersystems.com>
References: <20061101232111.7FECA978@mail.intersystems.com>
Message-ID: <45497381.2020107@jazillian.com>

Jim Idle wrote:

>To be honest it is this sort of question (and the answer) that we need to have in the book. The problem is that I would not have thought of this question in a million years (and that is no slight on Andy at all).
>
>  
>
I assume you mean here that you would have just gone ahead and plugged 
in the "calculate n" code at the appropriate place in your grammar.

It might help to see my perspective if you realize:
* I didn't write the grammar. I use Monty's C grammar, and so I've 
avoided learning much about ANTLR.
* I'm now in beta trial on a COBOL-to-Java translator and a C++-to-Java 
translator. I bet I wrote the whole
   COBOL-to-Java translator in less time than those couple of poor souls 
who are trying to create an ANTLR COBOL grammar.
* I'll almost certainly need to "calculate n" at other places in the 
tree sooner or later. It makes no sense at all to me to put "calculate 
n" code
  at one place in the grammar, and then keep having to repeat that. Even 
an AST lets me avoid that (with some kind of
  getChildCount()).
* If you haven't worked with a grammar the size of the C grammar, you 
probably don't have a feel for how awkward embedding
  actions is. And the C++ and COBOL (if ever finished) are even larger.
* Nothing makes you really want to avoid learning ANTLR (or anything 
else new)
   like a large and impossible project with an unreasonable deadline. :)

Andy

From kerecsen at gmail.com  Wed Nov  1 21:31:47 2006
From: kerecsen at gmail.com (Tamas Kerecsen)
Date: Wed, 1 Nov 2006 22:31:47 -0700
Subject: [antlr-interest] Capturing lexer exceptions
In-Reply-To: <45D39BCB-8A10-469C-AC03-1ED604FD986B@cs.usfca.edu>
References: <EF2ED99C54B0FD4188B64423658925EDAA775A@mailserv.lorien.fkie.fgan.de>
	<45D39BCB-8A10-469C-AC03-1ED604FD986B@cs.usfca.edu>
Message-ID: <1cb672170611012131s341d2cd5ha1556d9db6f270ff@mail.gmail.com>

Terence,

I complained about the same thing a couple of months ago. Unfortunately your
solution doesn't work because Java doesn't let you override the "throws"
clause in an overridden method. I would really appreciate if you could come
up with a convenient solution, though...

Thanks,
  Tamas

I would subclass and override nextToken() to not catch the
> exceptions.  That said, I posted email yesterday to which no one
> responded about how to deal with the error recovery that does inline
> insert/delete of tokens/chars.  Not sure if we need an option or what.
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061101/fdad7526/attachment-0001.html 

From Gerz at fgan.de  Wed Nov  1 22:11:29 2006
From: Gerz at fgan.de (Gerz, Michael)
Date: Thu, 2 Nov 2006 07:11:29 +0100
Subject: [antlr-interest] Capturing lexer exceptions
Message-ID: <EF2ED99C54B0FD4188B64423658925EDBE1D6E@mailserv.lorien.fkie.fgan.de>

Dear Jim,

thank you very much!

What you propose (adding an "ELSE" rule to the lexer) sounds like a great idea. I will have a look at this solution.

Best regards,
Michael

************************************************************************
Dr. Michael Gerz                                                        
FGAN e.V.                                      Phone:  +49 228 9435-414 
Department FKIE/ITF                            Fax:    +49 228 9435-685 
Neuenahrer Stra?e 20                           E-Mail: gerz at fgan.de     
53343 Wachtberg-Werthhoven                     WWW:    www.fgan.de      

> -----Urspr?ngliche Nachricht-----
> Von: Jim Idle [mailto:jimi at intersystems.com] 
> Gesendet: Dienstag, 31. Oktober 2006 21:44
> An: Gerz, Michael; antlr-interest at antlr.org
> Cc: Schueller, Henriette
> Betreff: RE: [antlr-interest] Capturing lexer exceptions
> 
> Michael,
> 
> I think that really, you should not have a lexer that can 
> generate errors, in that it should be able to handle anything 
> thrown at it and produce some sort of token or handle it in 
> some way. Hence the ANTLR3 lexer just reports the character 
> it sees that it doesn't know what to do with and throws it 
> away (consumes it). 
> 
> So, if your lexer spec does not cover all the characters that 
> might come in to it, then this is what will happen. However, 
> you can probably achieve what you are looking for by specifying:
> 
> UNKNOWN: . {do something, or not}
> 
> as the last lexer rule, and either looking in the parser for 
> this and reporting the error in some way yourself, or just 
> setting the token to be skipped.
> 
> You might also find the filter mode is what you are looking 
> for in the lexer? Check the examples for a filtering lexer.
> 
> Yet another option is to override the lexer error handler, or 
> more specifically error display using @lexer:: ...  and just 
> don't print anything, which should cause the character to be 
> consumes silently. 
> 
> However, my own opinion is that you should make sure your 
> lexer is able to process all characters and perform some 
> specific, deliberate action such as set the token to be 
> skipped as you then comment it as to why you are doing this 
> and it just feels more logical to me, unless you are 
> specifically constructing some sort of filter.
> 
> Jim

From prashant.deva at gmail.com  Wed Nov  1 22:26:38 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Wed, 1 Nov 2006 22:26:38 -0800
Subject: [antlr-interest] ANTLR Studio : No more registering for evaluation
	downloads
Message-ID: <41fed8f80611012226v4ebb36eesc08660ce740d4f0d@mail.gmail.com>

You no longer need to register at placidsystems.com to download an
evaluation license for ANTLR Studio.

Get ANTLR Studio from here -
www.placidsystems.com

Enjoy :)

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061101/41ad2a63/attachment.html 

From open.zone at virgin.net  Wed Nov  1 22:53:12 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu, 2 Nov 2006 06:53:12 -0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <45496FB4.2070309@jazillian.com>
Message-ID: <004901c6fe4b$91c30fc0$c704a8c0@hercules>

Hi Andy,

> >>I don't think I'm changing my position. I still disagree with that
> >>quote. I think almost all the great tools
> >>are the ones that the majority of programmers to "get". In 
> >>fact, that's 
> >>part of what makes them great.

> >I don't think "popular" and "great" (when applied to tools) are 
> >synonyms.
> >  
> >
> I don't either, that's why I said "in part".

I should have been clearer: Popularity isn't a measure of greatness.

> >>I disagree. I view Java as being "great" and C++ not being
> >>"great".

> >If productivity (not power) is the priority, Java/C# is 
> likely to be a 
> >better tool than C++ for those problems to which Java is applicable.
> >
> >Otherwise C++ (or some other tool) is better.
> >  
> >
> And Java is *always* the priority.

It's pointless to argue over value judgements so, I won't. 

Incidentally, this statement about Java...

> The only way you'd ever 
> fall back to 
> C++ is if there really
> wasn't enough power in Java. And I've only heard of one or 
> two cases of 
> that.

...contradicts this later statement about Java.

> >>and I think the
> >>vast majority 
> >>of programmers who know both
> >>agree with me.

> >I make no such claim (I have no idea what the vast majority of 
> >competent Java/C++ programmers think).

> Then you should get out more. Talk to 10 co-workers about 
> Java vs. C++, 
> or go to a conference.
> I'd say that less than 5% of those who've actually used both Java and 
> C++ prefer C++.
> That's from my experience of talking to perhaps a few hundred 
> developers 
> about it.

A few hundred (even a few thousand) developers doesn't equate to the "vast
majority".

C++ and automatic memory management aren't mutually exclusive. GC systems
for C++ predate Java/C#.
My point?, productivity and C++ aren't mutually exclusive either.

> >>Probably the main benefit is that it's easy to use for
> >>"average programmers". That's also why
> >>ANTLR is better than the competition - because it's easier to use.
> >>    
> >>
> >
> >Not to my mind. Coco/R, JavaCC, SLK are equally easy to use (if one 
> >takes the time to learn them).
> >
> >ANTLR's "popularity" is due to a lot if things including: Ter's 
> >predicated
> >LL(k)/LL(*) technology, 
> >
> LL(*) is brand new to V3, so that has nothing to do with it. 

I disagree. V3 is the reason many ANTLR'ers aren't using some other tool.
V2's performance (and a few missing features) eventually became an issue.
But I digress...

> And some of 
> the others are LL(k), so
> I don't think that's it, either. I'm using Javacc now, and 
> it's driving 
> me nuts, just as lex/yacc
> and similar tools did.

Once I learned the syntax/semanics and prevailing idioms, javacc was easy
enough.

> >The "vast majority" don't understand the value/utility of 
> MI, mixins, 
> >or the "why?" of AOD  etc.
> >  
> >
> That's a circular argument. If someone "understands the value" of MI, 
> etc. then of course they want it.

It isn't a circular argument. It is perfectly possible to "understand the
value" of a feature and yet not want it. I "understand the value" of MI for
instance and I'm not calling for [standard] Java to include it bacause it
make makes dynamic class loading far more difficult to implement. I'd rather
not be introduced to another slew of Java bugs.

Extended variants of Java such as MIJava (a preprocessor) and MultiJava (a
full compiler - uses ANTLR) etc are available for when I need the extra
power in a project.

> It's that "vast majority" who know what they are and don't want them 
> that matters.

I doubt that the vast majority truly understand MI et al.

> >In the context of this thread, "compiling by hand" is not a tool.
> >  
> >
> The point is that just because one approach (whether tool or not) is 
> less powerful doesn't
> mean that it's worse.

It means that it's less powerful. That can mean "useless" if one needs the
missing "power features".

> >How would you change in ANTLR to make it easier?
> >  
> >
> Short answer: hide all the details from me. Make it so that I have no 
> idea that
> there is code being generated to do lexing and parsing. Let 
> me just give 
> it a C grammar
> and a Java grammar, and then dive in and start writing 
> translation logic 
> without any
> generated code or even ASTs in sight. How to do that is left as an 
> exercise for the reader.

Interesting idea. Don't know if it is possible but, interesting nonetheless.
;-)

> >Quite often just getting "something that works" is all that is 
> >required. Getting the best output from a compiler requires 
> knowing more 
> >about what goes on under the hood.
> >  
> >
> Yea, I know. You can do a better job at garbage collection 
> than java's 
> gc. You can write
> better byte code than javac because you've studied javac and bytecode.
> 
> The Java JIT guys say the first rule of performance 
> optimization is to 
> STOP doing whatever
> it is you're doing that you think is producing better 
> bytecode. And what 
> did Terence find
> out about performance when he tried generating his own bytecode?

Regardless of what Ter experienced while generating DFAs as bytecode, what
the Java JIT guys may have said or indeed whether I can beat javac's GC
strategy, what I actually said above remains a fact.

> >>But required knowledge of the tool's internals limits the "average"
> >>user's productivity.
> >
> >A user is already limited if he/she don't understand how a 
> tool works. 
> >Whether or not that matters depends on what they are trying to 
> >accomplish.
> >
> Yes, we lower 99% of the programming community are writing 
> sub-par code 
> because we don't
> understand how our compilers work. ;)

Yes we are. ;-)

> >>>I use Java/C# for the productivity benefits. If performance,
> >>>flexibility or expressivity was *more* important in a particular 
> >>>project, there are better tools than Java/C# (e.g. C++, Occaml).
> >>>
> >>Right, so you're just like the rest of us. You've chosen to
> >>limit your 
> >>own "power" by using Java rather
> >>than, say, assembly. So I'm sticking with my claim that
> >>"I think a tool can be great while being simple enough for most 
> >>programmers (e.g. Java)."
> >>and not buying your "Not without limiting it's power" reply.
> >
> >It isn't "my" reply. The fact is:
> >- Java/C# is less powerful than assembler, C or C++ (you 
> need them to 
> >build java/c# in the first place).
> >  
> >
> If that's your definition of "power", I don't see how it relates to 
> anything.

I defined "power" in terms of performance, flexibility and expressivity
(it's still visible above).

Performance: Given equivalent programs written in Java and asm/C/C++, the
Java version would be slower (or it is always possible to optimize the
asm/C/C++ version so it outperforms the Java version).

Flexibility: Anything program that can be written in Java can be written in
asm/C/C++ (although one might not want to). The reverse is not true.

Expressivity: Java is less expressive than C++ (even without macros). With
[really!] clever use of macros, the same can be said of C and perhaps asm
too.

> >- For some problems, Java/C# is more productive than assembler, C or 
> >C++.
> >  
> I'd say "for almost all problems" but OK.

Depends on what sort of programming problems you have to solve. A
Windows/Linux device driver developer wouldn't use Java for instance.

> >I disagree. He is working with code generated by ANTLR. He 
> isn't using 
> >ANTLR.
> >  
> Ah, come on. When someone is using a lexer built using ANTLR, 
> you won't 
> consider that to be
> "using ANTLR?" As in "He's using ANTLR without ever seeing the input 
> grammar". That's
> like saying I'm not "using javac", I'm just using the 
> bytecode that it 
> generates.

Which is precisely what many ANTLR users do when they download the binary
distribution. They aren't using javac (some probably don't even know what
javac is). They are just "using bytecode generated by javac".

> >If he used ANTLR directly (like you did). He can do more. Your DSL 
> >(like
> >Java/C#) favours productivity over power/flexibility.
> >  
> >
> The whole point of building the DSL is because I think if he 
> (or I) used 
> ANTLR directly, we'd actually
> "do less", not "do more". We'd get less accomplished because we'd be 
> struggling with AST
> shapes in our heads. The DSL lets us tackle the same problem 
> at a higher 
> level of abstraction.

As I said, it is a more productive tool (for what you want to do) than using
ANTLR directly.

On the other hand, using ANTLR directly affords more "power".

> >ANTLR *is* a compiler.
> >  
> >
> Right, and as such, I believe it can do what "traditional" 
> compilers do: 
> hide all the underlying
> stuff from the users.

It does. That's why your guy can use the code it generated without knowing
or caring about ANTLR.

> >>Compiler designers take it as a given that users need only know the
> >>syntax/semantics of the input
> >>language. If Ter took it as a given that ANTLR4 users need 
> >>only know the 
> >>syntax/semantics
> >>of the input language, he'd end up with a very different tool.
> >>    
> >When using ANTLR, that is all one needs to know.
> >
> No. To use ANTLR, you not only need to know the input 
> language (say, C) 
> syntax&symantics, you
> also need to know:
> * The ANTLR syntax&symantics
> * How to hook in actions: where do they make sense? What language are 
> they in?

ANTLR's input language is a customized variant of EBNF that can include
embedded "action" code written in one of a few general programming
languages. It is used to describe the syntactic structure of other languages
e.g. your ANTLR grammar for the C language.

Learning where actions can be "hooked in" is part of learning about the
syntax/semantics of ANTLR's input language.

> * You often need to know details about the code that's generated to 
> resolve ambiguities

A test suite mitigates against this. I agree that approximate lookahead
generates spurious warnings.

> * You need to know how the grammar maps to an AST structure. It's not 
> enough to have a mental
>    picture of the input grammar, you need to be able to form a mental 
> picture of the AST each time
>    you see a chunk of code.

ASTs are optional. You don't use them for instance. In any case, the user
designs an AST not ANTLR. ANTLR simply provides a language for specifying
AST construction.

> >A compiler designer can't determine the best code to 
> generate for every 
> >possible situation in advance.
> >
> He doesn't need to always generate the best code. It's good 
> enough that 
> he just generally do
> better than humans do.

For some users/projects, that is enough. Not for everyone or every project.

> >This feature makes the tool more useful - for
> >those who care to acquire the knowledge required to use it 
> effectively. 
> >It empowers knowledgeable users to tailor the output for any given 
> >situation.
> >
> And yet, there is no equivalent in Java - no bytecode 
> tweaking. And no 
> one seems to mind.

Actually, there is. Not just with javac. Javaassist, BCEL etc do just that.

> And there is an equivalent in C/C++ - embedded asm code. That was 
> popular 20 years ago,
> but today's programmers realize that the assembler is 
> probably better at 
> producing good code,
> and they don't need every last 1% of performance anyway.

Not all the time. When they do, it is reassuring to know that gcc/vc++ still
support it...  ;-)


Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From jose.ventura.roda at gmail.com  Thu Nov  2 00:13:18 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Thu, 2 Nov 2006 09:13:18 +0100
Subject: [antlr-interest] Grammar File: Get text from token
In-Reply-To: <20061101195334.44984.qmail@web39502.mail.mud.yahoo.com>
References: <20061101195334.44984.qmail@web39502.mail.mud.yahoo.com>
Message-ID: <e39abda10611020013s1e8d17c7x60bad7f72e9e8317@mail.gmail.com>

I think

    :    "class" i:IDENT{
            String txt = #i.getText();
            ts.setName(txt);
        }
Regards,

2006/11/1, luciano mantuaneli <mantu_lists at yahoo.com.br>:
>
> Greetings!
> I'm working with a java grammar and in some point, I want to retrieve the
> class name. The rule is like follows:
>
> // Definition of a Java class
> classDefinition![AST modifiers]{
>     boolean isInner = ts.getName() != null;
> }
>     :    "class" IDENT{
>             String txt = $getText;
>             ts.setName(txt);
>         }
>         // it _might_ have type paramaters
>         (tp:typeParameters)?
>         // it _might_ have a superclass...
>         sc:superClassClause
>         // it might implement some interfaces...
>         ic:implementsClause
>         // now parse the body of the class
>         cb:classBlock
>         {#classDefinition = #(#[CLASS_DEF,"CLASS_DEF"],
>                                 modifiers,IDENT,tp,sc,ic,cb);}
>     ;
>
> It doesn't work that way. The ANTLR Plugin says that "_begin cannot be
> resolved".
> How can I retrieve the name of the class being parsed?
> Thank you all!
>
>
>
> Luciano Mantuaneli
> Analist-Programmer
>
> ------------------------------
> Voc? quer respostas para suas perguntas? Ou voc? sabe muito e quer
> compartilhar seu conhecimento? Experimente o Yahoo! Respostas<http://us.rd.yahoo.com/mail/br/tagline/answers/*http://br.answers.yahoo.com/>!
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061102/46c18062/attachment.html 

From VAUCHER at fermat.eu  Thu Nov  2 00:20:46 2006
From: VAUCHER at fermat.eu (VAUCHER Laurent)
Date: Thu, 2 Nov 2006 09:20:46 +0100
Subject: [antlr-interest] Conditional tree parsing
Message-ID: <20061102092109.SM05544@037f27dd816a40c>

  Thank you all.

  My final solution is

  #(IF_TOKEN t=boolean_expression thenAst:. elseAst:.)
     { val = this.expression(t ? thenAst : elseAst); }

  where 
   - expression is the main rule and
   - boolean_expression only casts expression to a boolean


Laurent.


From antlr at thewolery.demon.co.uk  Thu Nov  2 01:21:32 2006
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Thu, 2 Nov 2006 09:21:32 +0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <45496671.9010008@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
	<4548F943.7070906@jazillian.com>
	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>
	<45496671.9010008@jazillian.com>
Message-ID: <qBd4yNMcibSFFwLV@thewolery.demon.co.uk>

In message <45496671.9010008 at jazillian.com>, Andy Tripp 
<antlr at jazillian.com> writes
>Anthony W. Youngman wrote:
>
>> In message <4548F943.7070906 at jazillian.com>, Andy Tripp 
>><antlr at jazillian.com> writ
>> I wouldn't describe "popular" as "great".
>
>I would say popularity is a pretty good indicator or "greatness". By 
>"popular", I mean "widely seen
>as good from a technology point of view". So Java is "popular" that 
>way: a lot of people use it
>because of its technical merits. COBOL is widely used, but almost no 
>one uses it because of its
>technical merits.

Actually, I think you'll find that COBOL has technical merits that the 
average programmer has been brainwashed into ignoring. COBOL does what 
it was designed for very well. I've written an accounts package in 
FORTRAN. I've also written one in DATABASIC (which pinched a lot of 
ideas from COBOL). No question as to which one was the right tool for 
the job ...

And I've also used a version of DATABASIC where some bright spark 
rewrote the system primitives in C. Blech!!!! the number of times I've 
seen people scream because they got bitten by subtle bugs ...

Come to think of it, how many people get bitten by subtle bugs in Java 
because they don't understand that, underneath, it's written in C++? As 
someone said, not many, because it's been well tested, but that's still 
a few too many ...
>
>>> Yes, a few people want to add stuff back, but most do not. It's just 
>>>that the few are very vocal.
>>> The vast majority don't want MI, operator overloading, or built-in 
>>>AspectOrientedDesign.
>>> And of course, those who want them think they're "above average", 
>>>but  then so does almost
>>> everyone.
>>>
>> What about those who don't WANT those things, but NEED them?
>
>Every time I've heard anyone say they NEED MI, operator overloading, or 
>Aspects, I've thought
>that they really don't need them, they're just not good enough 
>programmers to see a clean way
>to do without them. I've been programming for 25 years without ever 
>NEEDING any of these,
>and so have most other programmers.
>
I programmed for many years without needing pointers. FORTRAN didn't 
have them, so I tended not to use them in C. I notice you said *MOST* 
other programmers. You're jumping to conclusions - because "all the 
programmers I know are too stupid to live without these features" you 
conclude that these features "mostly aren't needed". So you'd like to 
see them removed from any tool you use ... :-(
>>
>>>
>> So - you're quite happy to see Antlr crippled to suit you, ignoring 
>>the NEEDS of those who need its power!
>
>Don't worry, I can't cripple ANTLR.  But yes, I'd be happy to see 
>ANTLR4 become a "crippled" version,
>in the same sense that Java is a "crippled" version of C++.
>
And as I said, you're quite happy to ruin the tool for all those people 
who need that power ...
>>>>
>>>>
>>> But required knowledge of the tool's internals limits the "average" 
>>>user's productivity.
>>> If I had done AST-based translation, I'd be spending way to much 
>>>time worrying about the details
>>> of the AST, rather than the syntax and semantics of the two 
>>>languages. I demand to spend 95% of
>>> my time on *what* to do, rather than *how* to do it. With ASTs, I 
>>>found myself spending
>>> 95% of my time on *how*.
>>>
>> In other words, as you said earlier, ASTs are the wrong tool for you. 
>>So you seem happy to delete ASTs from Antlr because *you* don't need 
>>them, irregardless of what other people *NEED*.
>
>Yes, just as I railed against operator overloading and MI in C++, and 
>found bliss in Java.
>I don't much care that other people think they *NEED* MI. They can 
>always stick with C++.
>
Or you could find some other language instead of Java? You'd much rather 
inconvenience all the other Java programmers by removing features they 
need, rather than convenience yourself by finding something that suits 
you better?
>>>>
>
>> Let's ask a question ... how can a tool be "great" if it *relies* on 
>>other tools even for its existence?
>
>Sure, of course! Virtually all software relies on other tools 
>(compilers, operating systems, etc) for their existence.
>
>>
>> A C compiler can compile itself. Can a Java system build itself? How 
>>much of Java is actually written in Java? (Oh and I'm including the 
>>supporting libraries here!)
>
>Almost all of Java is written in Java. The only part that's not is the 
>lowest layer, which is OS and hardware specific.
>
Assembler is written in assembler, pretty much without exception. C is 
written in C, pretty much without exception.

The reason for demanding that a great tool be written in itself is 
exemplified by my databasic example above - the primitives for the 
version I initially used were written in machine code, and followed the 
spec. The C rewrite introduced loads of subtle bugs, because the 
characteristics of the C environment were different. How much of Java 
DEPENDS on the lowest layer? How much knowledge do you need to 
understand that layer?
>>
>> Antlr v3 is due to be rewritten in Antlr v3. To my mind, that's a 
>>"necessary but not sufficient" condition for greatness.
>
>Wow. Only software that's written in itself can be "great"? Are you 
>really saying that?
>
Yes I am. Because otherwise it requires you to understand much more than 
you want about the execution environment. Note my comments about subtle 
bugs. Because it requires the system guys to be *experts* in two 
completely different environments!

I note that you think a "great tool" is one that means you *don't* 
*need* to be an expert. By your logic, Java therefore has to be a crap 
tool for Java system programmers ...

Which is why, in the system I want to build with Antlr, it's very 
important to me that AS MUCH AS POSSIBLE of the system is built using 
DATABASIC, because that's what the programmers using it will have 
experience in. *THAT* is why a great tool must be built using itself.
>>>>
>>
>> But what if the problem can only be specified in terms of formal 
>>language theory?
>
>Then you'd have a different situation. But surely you're not saying 
>that a language-to-language translator
>can only be specified in terms of formal language theory, are you?
>
>> There is something called "intelligence". If you don't have 
>>sufficient intelligence, you *cannot* learn certain things. You want 
>>to give a programmer a tool, so you can set him a problem he is 
>>INCAPABLE of comprehending. I hope I never have to rely on (or even 
>>USE) code written by a coder like that !!!
>
>Well, virtually every coder in the world is like that. Only a handful 
>of people in the world know the details of what their
>compiler is doing as they use it every day. Same goes for the OS and 
>the hardware. Same goes for  the car you drive
>and just about everything other non-trivial machine you use: you use it 
>without knowing much about how it works.
>That's what makes the world go round :)
>
You miss the point. Let's take the car example. There's a big difference 
between what I wrote and you responded to. As far as I can see, you're 
saying that if a guy has a driving licence, you're quite happy to get 
him to repair your car brakes ... WHAT...!!!

You do not give a problem to someone to solve, if they do not have the 
mental capacity to understand the problem. You do not ask a guy to 
repair the brakes on your car if he has no experience of being a 
mechanic, even if he does have a driving licence (and there's a lot of 
people I would hate to have service my car, even if they do have a 
mechanics qualification, because they learnt to follow the diagrams in 
the book and didn't learn to work through what was *actually* 
*happening*!).
>>>
>> And then the programmer needs a pointer to write to a bit of 
>>hardware, and throws Java out in disgust because his "great" tool is 
>>useless for the job at hand ...
>
>Right. And probably gets fired if his boss finds out that he's trying 
>to write a bit directly to hardware.
>He thinks he needs to do that, and he thinks he's smart, but he's not. 
>That's pretty rare these days to
>have anyone feel that they need direct access to the hardware. We're 
>many levels beyond that now.
>
Given the ability of many bosses, I bet the boss gave him the job, and 
told him to use the wrong tool ...
>>
>> Because javac is meant to convert java source accurately to java 
>>bytecode. While Antlr is meant to (and does) accurately convert its 
>>sourcecode into a lexer/parser/treewalker, it is also designed to let 
>>do things beyond the power of the tool. Both fit their design aims  - 
>>javac creates a java program, Antlr creates an extensible 
>>lexer/parser/treewalker. Both are *good* tools, that doesn't 
>>necessarily mean they are *great* tools.
>>
>> At the end of the day, I think your definition of "great" is badly 
>>flawed - "a great tool lets a mediocre programmer do a decent job". A 
>>great programmer could probably outperform that mediocre programmer 
>>without that tool.
>
>Heh, it's been a while since I heard the "A great programmer can write 
>better code than the compiler" line.
>Used to hear that a lot 20 years ago, not much any more.

I gather the statistics still hold true. The best programmers still 
outperform the average ones by about 1000% ... that's a MASSIVE 
difference.
>
>>
>> The greater the tool, the greater the level of maturity required to 
>>be able to use it safely.
>
>If you want to use that meaning for "great", that's fine. But I do 
>disagree. If you had one space shuttle
>that was completely safe and automated, that would be a "greater" tool 
>than one that requires maturity, IMO.
>Especially if you have millions of shuttle pilots, and not just a few.

You've obviously not read Dick Feynmann then ... :-) even *I* could fly 
the space shuttle :-)

Hint - in a former life, the Shuttle's pilot was known as "George" :-)
>
>> And the fewer the number of programmers who are capable of reaching 
>>that level of maturity ... you go on about the "dangerous features" of 
>>C++ as opposed to Java. A mature C++ programmer would NOT USE those 
>>features if they weren't needed. Indeed, a mature C++ programmer would 
>>probably use Java if those features weren't needed.
>
>Haven't heard that one in a while either. Yes, yes, I know, it's not 
>C++ that's dangerous, it's just those *other* guys
>who are bad programmers and are misusing it. And we Java fans are just 
>not manly enough to handle
>MI and operator overloading.
>
>>
>>
>> Too many programmers use features like kids eat candy - the more the 
>>better! A great programmer likes a tool like a candy shop - but he has 
>>the self control to only take what he needs - not the entire shop!
>
>Yea, yea, heard it all before. It's all those *other*, less-intelligent 
>programmers that are using operator overloading
>to apply the "+" operator to the "Person" class. We smart programmers 
>know that we *NEED* operator overloading
>for our matrix multiplication. Bleh. :)
>
Fine. Since Java is such a great language, let's see you write the BIOS 
for all new computers in it ... what? you mean all new computers will be 
bricks if you do? What a crap tool ...

Oh - and as for "we smart programmers", you do realise you've just 
disqualified yourself as a member of that set? You used the word "we"! 
If the "other" guy respects you, he'll do as you say. I've done some 
crazy things in my time, like using a goto in C :-) But when other 
programmers have said "you shouldn't do that" I've just said "well, you 
do better". Usually, they've looked at the problem to be solved, and 
backed down. If you're a smart programmer, you'll show the other guy how 
to do it better. If you can't, he's smarter than you thought!

"Perfection is achieved, not when everything that is necessary has been 
added, but when everything that is unnecessary has been taken away".

I *know* I'm an expert in DATABASIC. I would *like* to *think* I'm a 
guru, but until somebody like Jim, or Rob, or Monty, tells me I am (and 
I probably wouldn't believe Monty), then I'm not! And even then, I 
wouldn't believe them unless other people I trusted agreed with them.

Ask Loring what unnecessary stuff can be removed from Antlr. Ask Ter. 
Ask Jim. Ask Monty. Ask the people *YOU* *RESPECT* *AS* *EXPERTS* (or 
aren't there any such on this list? :-)

I think you'll find everything in Antlr is there because it's needed. 
Like ASTs for example - I think they happen to be a perfect solution to 
my problem :-)

I know Antlr doesn't do what you want. So stop trying to drive screws 
with a hammer, and go find yourself a screwdriver :-) Don't try and ban 
hammers :-)

(Incidentally, one of the features I found Antlr lacked - or rather 
seemed incredibly complex to implement - in v2 was a stream rewriter - I 
wanted a state engine to flip token types - certain types may or may not 
follow other types and I could do it a lot easier in a stream rewriter 
than by tracking state in the lexer. Maybe that would be a useful tool 
for you, maybe not.)

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From inshua at gmail.com  Thu Nov  2 02:34:48 2006
From: inshua at gmail.com (=?GB2312?B?0MLC8g==?=)
Date: Thu, 2 Nov 2006 18:34:48 +0800
Subject: [antlr-interest] Can I catch filtered text as a token?
Message-ID: <2506dcb70611020234g2258d80by1503ff3117204c@mail.gmail.com>

Now there is some text as
<java>
    <c>
          printf("ccc");
          <java>  System.out.println("javavava"); </java>
    </c>
</java>

I' m creating a lexer to parse the text. With filter option turned on, I can
get the tag <java> <c> etc.

But the important code is missing by filter.

Would you tell me how to snag the filtered text as a token? thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061102/8d987f65/attachment.html 

From e.papegaaij at student.utwente.nl  Thu Nov  2 05:15:17 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Thu, 2 Nov 2006 14:15:17 +0100
Subject: [antlr-interest] Problem with lexer
Message-ID: <200611021415.17692.e.papegaaij@student.utwente.nl>

Hello,

I'm having a problem with the attached lexer (v3). When it is run with the 
Test class, the NODE_SELECTION token is never matched, even though the 
input contains a NODE_SELECTION. The problem is that the lexer does not 
look past the WS? in NODE_SELECTION. It first matches '#value'. Now it 
checks the LA and decides to take the (WS? '[]') branch, even though there 
is no '[]'. I've tried adding syntactic predicates and changing k, but to 
no avail. Am I doing something wrong here?

Best regards,
Emond Papegaaij
-------------- next part --------------
lexer grammar ActionMacroGenerate;

NODE_SELECTION
	: '#' IDENTIFIER (WS? '[]')? {
		System.out.println("MATCH: "+getText());
	}
	;

ANY_TEXT
	: . {System.out.println("MATCH ANY: "+getText());}
	;

fragment
WS
	: ( ' ' | '\t' | '\f' | '\r' | '\n')+
	;

fragment
IDENTIFIER
	: ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
	;
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.java
Type: text/x-java
Size: 379 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061102/aef98619/attachment.bin 

From r.morgan at verizonbusiness.com  Thu Nov  2 07:01:57 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Thu, 02 Nov 2006 08:01:57 -0700
Subject: [antlr-interest] Simple way to get the text that matched
In-Reply-To: <mailman.1752.1162406379.15912.antlr-interest@antlr.org>
Message-ID: <000601c6fe8f$db3ffca0$0a0e9283@mcilink.com>

I'm getting closer in that I get declarations for my t1 and t2 element names
now, but only in certain cases; I don't get any declaration for something
like t1:parserRule, but I get one for t1:LEXER_RULE.  So that's one issue,
something I can probably work around if I focus on the lexer rules doing
more work.

A bigger issue for me right now is the generated code for the actions. When
I put the action {initEntity( #nm1.getText());} in my rule, that's exactly
what I get in the output, including the hash mark.  That's not valid C++ in
my book but I don't have ANTLR headers on the target machine yet so can't
compile it there, so I thought I'll switch to Java production and see what I
get.  Well, they're still there and the Java compiler doesn't like them one
bit.  I have to guess that (being new with ANTLR) I've totally overlooked
some step, like some post-processing step that turns those hash marks into
valid AST node references like the wiki says they'll be.  How do I get that
to happen?

Here's a portion of the generated Java (and the C++ looks about the same) in
case there's doubt about what I'm saying (generated by 2.7.7, released
yesterday):

	public final void classSpec() throws RecognitionException,
TokenStreamException {
		
		Token  nm1 = null;
		Token  nm2 = null;
		
		try {      // for error handling
			nm1 = LT(1);
			match(NAME);
			initEntity(#nm1.getText());
			{
			_loop37:

thanks Bryan for your reply, that got me closer,
Rick




From owong at benchmarkconsulting.com  Thu Nov  2 07:24:13 2006
From: owong at benchmarkconsulting.com (Oliver Wong)
Date: Thu, 02 Nov 2006 10:24:13 -0500
Subject: [antlr-interest] philosophy about translation
Message-ID: <F89BA86F375B2F43B05CB04E01B199BA0AAF13@castor-srvr1.benchmarkcanada.com>



-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Anthony W.
Youngman

>>> A C compiler can compile itself. Can a Java system build itself?
>>> How much of Java is actually written in Java? (Oh and I'm
>>> including the supporting libraries here!)
>>
>>Almost all of Java is written in Java. The only part that's not
>>is the lowest layer, which is OS and hardware specific.
>>
> Assembler is written in assembler, pretty much without exception.
> C is written in C, pretty much without exception.

	I think you (plural) might be conflating a language with an
implementation of the toolset for that language. Java, C and assembler
are languages, and you can't "write" (in the sense of program) a
language. You could program a compiler or an interpreter for these
languages. But you can't "write" the languages themselves.

	And yes, there are assembler "compilers" (though an "assembler
compiler" is typically called "an assembler") written in assembler, but
there are also assembler compilers written in C, and possibly in Java.

	Similarly, there are C compilers written in C, but there may
also be C compilers written in assembler, and there's definitely C
compilers written in Java.

	And there are Java compilers and Java virtual machines written
in C, but there are also Java compilers and Java virtual machines
written in Java (see the SableCC and SableVM projects).

[...]
> Fine. Since Java is such a great language, let's see you write
> the BIOS for all new computers in it ... what? you mean all new
> computers will be bricks if you do? What a crap tool ...

	The fact that Sun's javac compiler takes Java as an input
language and emits JVM Bytecode as an output language is a
characteristic of the compiler, and not of the Java language itself.
There's no reason why you couldn't have a compiler take Java as an input
language, and machine code as an output language (The gcj compiler does
exactly this).

	I don't know what's involved in writing BIOSes, but I suspect
that if you can program a BIOS in software (as opposed to fiddling with
wiring at the hardware level), then you essentially need to "burn" a
bytestream representing the BIOS program into the FlashROM containing
the BIOS. Well, you can write a compiler which takes Java as its source
language, and emits the appropriate bytestream in whatever format the
FlashROM expects (which may or may not be machine code; I don't know).

	- Oliver

From antlr at jazillian.com  Thu Nov  2 07:35:36 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Nov 2006 10:35:36 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <004901c6fe4b$91c30fc0$c704a8c0@hercules>
References: <004901c6fe4b$91c30fc0$c704a8c0@hercules>
Message-ID: <454A1048.3010108@jazillian.com>

Micheal J wrote:

>I should have been clearer: Popularity isn't a measure of greatness.
>  
>
No, but popularity is a common result of greatness. If Terence wants to 
build
"the Smalltalk80 of compiler-compilers", that's fine. But I think it's 
reasonable for
someone to request that he build "the Java of compiler-compilers".

>
>  
>
>>Then you should get out more. Talk to 10 co-workers about 
>>Java vs. C++, 
>>or go to a conference.
>>I'd say that less than 5% of those who've actually used both Java and 
>>C++ prefer C++.
>>That's from my experience of talking to perhaps a few hundred 
>>developers 
>>about it.
>>    
>>
>
>A few hundred (even a few thousand) developers doesn't equate to the "vast
>majority".
>  
>
You don't need to sample the whole population to know what they think.

Let's just agree to disagree. I think Java is generally better than C++. 
The Java designers
chose to leave out all the C++ nastyness, and I find myself several 
times more productive in Java.
My personal experience has been that most other developers prefer Java 
over C++, and I
do extrapolate that to all programmers.

>>>      
>>>
>>LL(*) is brand new to V3, so that has nothing to do with it. 
>>    
>>
>
>I disagree. V3 is the reason many ANTLR'ers aren't using some other tool.
>  
>
I know you'll disagree, but I'd venture to guess that over 95% of ANTLR 
users started using
it before V3.

>Once I learned the syntax/semanics and prevailing idioms, javacc was easy
>enough.
>  
>
I'm not happy with "easy enough" - I'd prefer "as easy as possible". 
Just my personality I guess.

>
>It isn't a circular argument. It is perfectly possible to "understand the
>value" of a feature and yet not want it. I "understand the value" of MI for
>instance and I'm not calling for [standard] Java to include it bacause it
>make makes dynamic class loading far more difficult to implement. I'd rather
>not be introduced to another slew of Java bugs.
>  
>
OK. With that definition, I'd then say that I do believe that the vast 
majority of those who
"understand the value" of C++ features do prefer Java.

>
>  
>
>>>How would you change in ANTLR to make it easier?
>>> 
>>>
>>>      
>>>
>>Short answer: hide all the details from me. Make it so that I have no 
>>idea that
>>there is code being generated to do lexing and parsing. Let 
>>me just give 
>>it a C grammar
>>and a Java grammar, and then dive in and start writing 
>>translation logic 
>>without any
>>generated code or even ASTs in sight. How to do that is left as an 
>>exercise for the reader.
>>    
>>
>
>Interesting idea. Don't know if it is possible but, interesting nonetheless.
>;-)
>  
>
The more I think about it, the easier it seems to me. I must be missing 
something.

>  
>
>>>Quite often just getting "something that works" is all that is 
>>>required. Getting the best output from a compiler requires 
>>>      
>>>
>>knowing more 
>>    
>>
>>>about what goes on under the hood.
>>> 
>>>
>>>      
>>>
>>Yea, I know. You can do a better job at garbage collection 
>>than java's 
>>gc. You can write
>>better byte code than javac because you've studied javac and bytecode.
>>
>>The Java JIT guys say the first rule of performance 
>>optimization is to 
>>STOP doing whatever
>>it is you're doing that you think is producing better 
>>bytecode. And what 
>>did Terence find
>>out about performance when he tried generating his own bytecode?
>>    
>>
>
>Regardless of what Ter experienced while generating DFAs as bytecode, what
>the Java JIT guys may have said or indeed whether I can beat javac's GC
>strategy, what I actually said above remains a fact.
>  
>
That you can write better code by knowing the details of bytecode 
generation? I doubt it.
The reason I responded the way I did is my way of saying "I seriously 
doubt it".
I guess that's a separate discussion.

>
>>>      
>>>
>>If that's your definition of "power", I don't see how it relates to 
>>anything.
>>    
>>
>
>I defined "power" in terms of performance, flexibility and expressivity
>(it's still visible above).
>
>Performance: Given equivalent programs written in Java and asm/C/C++, the
>Java version would be slower (or it is always possible to optimize the
>asm/C/C++ version so it outperforms the Java version).
>  
>
Wrong. The 1990's called and they want their "Java is interpreted" 
thinking back ;)

>Flexibility: Anything program that can be written in Java can be written in
>asm/C/C++ (although one might not want to). The reverse is not true.
>  
>
That's technically true, but I'd also add that that I think that 99.9% 
of real-world applications can
be written in Java, but perhaps 20% of the developers out there don't 
think that their app can be
written in Java. I'm just making up numbers, but you get the idea.

>Expressivity: Java is less expressive than C++ (even without macros). With
>[really!] clever use of macros, the same can be said of C and perhaps asm
>too.
>  
>
Then I'd say "expressivity" is a negative attribute: C++ with macros or 
COBOL with lots of
preprocessors are "most expressive" and also "least maintainable".

>  
>
>>>- For some problems, Java/C# is more productive than assembler, C or 
>>>C++.
>>> 
>>>      
>>>
>>I'd say "for almost all problems" but OK.
>>    
>>
>
>Depends on what sort of programming problems you have to solve. A
>Windows/Linux device driver developer wouldn't use Java for instance.
>  
>
Right.

>  
>
>>>I disagree. He is working with code generated by ANTLR. He 
>>>      
>>>
>>isn't using 
>>    
>>
>>>ANTLR.
>>> 
>>>      
>>>
>>Ah, come on. When someone is using a lexer built using ANTLR, 
>>you won't 
>>consider that to be
>>"using ANTLR?" As in "He's using ANTLR without ever seeing the input 
>>grammar". That's
>>like saying I'm not "using javac", I'm just using the 
>>bytecode that it 
>>generates.
>>    
>>
>
>Which is precisely what many ANTLR users do when they download the binary
>distribution. They aren't using javac (some probably don't even know what
>javac is). They are just "using bytecode generated by javac".
>  
>
 I consider myself to be "using javac" when doing Java development.
I think maybe you're trying to "talk past me" on purpose, but it 
worked...I don't remember or
care what the point was here ;)

>
>  
>
>>>ANTLR *is* a compiler.
>>> 
>>>
>>>      
>>>
>>Right, and as such, I believe it can do what "traditional" 
>>compilers do: 
>>hide all the underlying
>>stuff from the users.
>>    
>>
>
>It does. That's why your guy can use the code it generated without knowing
>or caring about ANTLR.
>  
>
The lexer part of ANTLR does hide the details well. It's parser part 
that doesn't do so well,
forcing me to really remember the original grammar and the shape of the 
ASTs that I'm creating.
And treewalkers have the same problem.

>  
>
>>>>Compiler designers take it as a given that users need only know the
>>>>syntax/semantics of the input
>>>>language. If Ter took it as a given that ANTLR4 users need 
>>>>only know the 
>>>>syntax/semantics
>>>>of the input language, he'd end up with a very different tool.
>>>>   
>>>>        
>>>>
>>>When using ANTLR, that is all one needs to know.
>>>
>>>      
>>>
>>No. To use ANTLR, you not only need to know the input 
>>language (say, C) 
>>syntax&symantics, you
>>also need to know:
>>* The ANTLR syntax&symantics
>>* How to hook in actions: where do they make sense? What language are 
>>they in?
>>    
>>
>
>ANTLR's input language is a customized variant of EBNF that can include
>embedded "action" code written in one of a few general programming
>languages. It is used to describe the syntactic structure of other languages
>e.g. your ANTLR grammar for the C language.
>  
>
Yes, I'm familiar with ANTLR.

>Learning where actions can be "hooked in" is part of learning about the
>syntax/semantics of ANTLR's input language.
>  
>
Not really. It requires that you know something about the code being 
generated.

>  
>
>>* You often need to know details about the code that's generated to 
>>resolve ambiguities
>>    
>>
>
>A test suite mitigates against this. I agree that approximate lookahead
>generates spurious warnings.
>  
>
A test suite is just an organized way to produce the ambiguity; it 
doesn't help you
avoid them in the first place, or even help you eliminate them.

>  
>
>>* You need to know how the grammar maps to an AST structure. It's not 
>>enough to have a mental
>>   picture of the input grammar, you need to be able to form a mental 
>>picture of the AST each time
>>   you see a chunk of code.
>>    
>>
>
>ASTs are optional. You don't use them for instance. In any case, the user
>designs an AST not ANTLR. ANTLR simply provides a language for specifying
>AST construction.
>  
>
Yea, well ASTs being optional doesn't change anything. Of course you're 
going to generate
ASTs if you're using ANTLR for language translation, the alternative is 
even worse.

>  
>
>>>A compiler designer can't determine the best code to 
>>>      
>>>
>>generate for every 
>>    
>>
>>>possible situation in advance.
>>>
>>>      
>>>
>>He doesn't need to always generate the best code. It's good 
>>enough that 
>>he just generally do
>>better than humans do.
>>    
>>
>
>For some users/projects, that is enough. Not for everyone or every project.
>  
>
There may be some projects out there that can't use a standard compiler, 
yes.
But probably 99.999% do. So I do think the days of people feeling that a 
standard compiler
is not good enough for them are over.

>  
>
>>>This feature makes the tool more useful - for
>>>those who care to acquire the knowledge required to use it 
>>>      
>>>
>>effectively. 
>>    
>>
>>>It empowers knowledgeable users to tailor the output for any given 
>>>situation.
>>>
>>>      
>>>
>>And yet, there is no equivalent in Java - no bytecode 
>>tweaking. And no 
>>one seems to mind.
>>    
>>
>
>Actually, there is. Not just with javac. Javaassist, BCEL etc do just that.
>  
>
I say "there are no pink elephants", and you find one. OK, I stand 
corrected. There are apps
for which the standard "javac" is not good enough, and there are apps 
that tweak bytecode with BCEL.

I think we're losing site of the point: Javac would not be better by 
becomeing "more powerful" and
allowing you to tweak bytecodes. ANTLR is not better than it could be 
because it's "more powerful"
and lets you tweak the underlying code it generates.

>  
>
>>And there is an equivalent in C/C++ - embedded asm code. That was 
>>popular 20 years ago,
>>but today's programmers realize that the assembler is 
>>probably better at 
>>producing good code,
>>and they don't need every last 1% of performance anyway.
>>    
>>
>
>Not all the time. When they do, it is reassuring to know that gcc/vc++ still
>support it...  ;-)
>  
>
It's also reassuring to know that those people who claim to need a 2% 
performance boost and
so use gcc instead of Java are simply wrong. For one thing, gcc is not 
one of the better compilers
out there for performance.

I recently converted a JPEG image processing app that runs on a mobile 
phone from C to Java.
I'm sure you can guess what I'm going to say about performance ;)

>
>Micheal
>
>
>-----------------------
>The best way to contact me is via the list/forum. My time is very limited.
>
>
>  
>


From antlr at jazillian.com  Thu Nov  2 08:10:33 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Nov 2006 11:10:33 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>	<45496671.9010008@jazillian.com>
	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
Message-ID: <454A1879.6040802@jazillian.com>


>>
>> Every time I've heard anyone say they NEED MI, operator overloading, 
>> or Aspects, I've thought
>> that they really don't need them, they're just not good enough 
>> programmers to see a clean way
>> to do without them. I've been programming for 25 years without ever 
>> NEEDING any of these,
>> and so have most other programmers.
>>
> I programmed for many years without needing pointers. FORTRAN didn't 
> have them, so I tended not to use them in C. I notice you said *MOST* 
> other programmers. You're jumping to conclusions - because "all the 
> programmers I know are too stupid to live without these features" you 
> conclude that these features "mostly aren't needed". So you'd like to 
> see them removed from any tool you use ... :-(

I conclude that these features "mostly aren't needed" (really more like 
"almost never" or even "never") from personal
experience, not from something you or I said.

>>>
>>>>
>>> So - you're quite happy to see Antlr crippled to suit you, ignoring 
>>> the NEEDS of those who need its power!
>>
>>
>> Don't worry, I can't cripple ANTLR.  But yes, I'd be happy to see 
>> ANTLR4 become a "crippled" version,
>> in the same sense that Java is a "crippled" version of C++.
>>
> And as I said, you're quite happy to ruin the tool for all those 
> people who need that power ...

Yes, if you consider Java to be "ruining" C++. New tool without all the 
warts. Those
who "need the power" of the warts can keep using the old tool.

>
>>>>>
>>>>>
>>>> But required knowledge of the tool's internals limits the "average" 
>>>> user's productivity.
>>>> If I had done AST-based translation, I'd be spending way to much 
>>>> time worrying about the details
>>>> of the AST, rather than the syntax and semantics of the two 
>>>> languages. I demand to spend 95% of
>>>> my time on *what* to do, rather than *how* to do it. With ASTs, I 
>>>> found myself spending
>>>> 95% of my time on *how*.
>>>>
>>> In other words, as you said earlier, ASTs are the wrong tool for 
>>> you. So you seem happy to delete ASTs from Antlr because *you* don't 
>>> need them, irregardless of what other people *NEED*.
>>
>>
>> Yes, just as I railed against operator overloading and MI in C++, and 
>> found bliss in Java.
>> I don't much care that other people think they *NEED* MI. They can 
>> always stick with C++.
>>
> Or you could find some other language instead of Java? You'd much 
> rather inconvenience all the other Java programmers by removing 
> features they need, rather than convenience yourself by finding 
> something that suits you better?

No, you're messing up the metaphor. I'm proposing that the next version 
of ANTLR (or maybe it's a completely new tool)
be to today's ANTLR as Java is to C++: a new and improved version that's 
really better, in part because it takes programming
to a higher level.

>>>>>
>>
>>> Let's ask a question ... how can a tool be "great" if it *relies* on 
>>> other tools even for its existence?
>>
>>
>> Sure, of course! Virtually all software relies on other tools 
>> (compilers, operating systems, etc) for their existence.
>>
>>>
>>> A C compiler can compile itself. Can a Java system build itself? How 
>>> much of Java is actually written in Java? (Oh and I'm including the 
>>> supporting libraries here!)
>>
>>
>> Almost all of Java is written in Java. The only part that's not is 
>> the lowest layer, which is OS and hardware specific.
>>
> Assembler is written in assembler, pretty much without exception. C is 
> written in C, pretty much without exception.
>
> The reason for demanding that a great tool be written in itself is 
> exemplified by my databasic example above - the primitives for the 
> version I initially used were written in machine code, and followed 
> the spec. The C rewrite introduced loads of subtle bugs, because the 
> characteristics of the C environment were different. How much of Java 
> DEPENDS on the lowest layer? How much knowledge do you need to 
> understand that layer?

Heheh...didn't know that most of Java was written in Java, did you? ;)
Yes, all of Java DEPENDS on C.  All of C DEPENDS on object code. All of 
object code DEPENDS on
the operating system. All of the operating system DEPENDS on the hardware.

>>>
>>> Antlr v3 is due to be rewritten in Antlr v3. To my mind, that's a 
>>> "necessary but not sufficient" condition for greatness.
>>
>>
>> Wow. Only software that's written in itself can be "great"? Are you 
>> really saying that?
>>
> Yes I am. Because otherwise it requires you to understand much more 
> than you want about the execution environment. Note my comments about 
> subtle bugs. Because it requires the system guys to be *experts* in 
> two completely different environments!
>
> I note that you think a "great tool" is one that means you *don't* 
> *need* to be an expert. By your logic, Java therefore has to be a crap 
> tool for Java system programmers ...

No, I don't mean "...*dont need* to be an expert", but rather "dont need 
to know about the layers below". Java is great
because it doesn't require any knowledge about memory management, for 
example. The tool should let you
only be an expert *at one level of abstraction*. I can program in Java 
without knowing (almost) any details about
any of the underlying layers.

>
> Which is why, in the system I want to build with Antlr, it's very 
> important to me that AS MUCH AS POSSIBLE of the system is built using 
> DATABASIC, because that's what the programmers using it will have 
> experience in. *THAT* is why a great tool must be built using itself.

I think maybe you're only picturing cases where the tool developer is 
the same person as the tool user.
I don't care at all whether ANTLR (Or Java, or anything else I use) is 
built with itself. I'm sure Terence cares,
but he's the exception.

>
>>
>> Well, virtually every coder in the world is like that. Only a handful 
>> of people in the world know the details of what their
>> compiler is doing as they use it every day. Same goes for the OS and 
>> the hardware. Same goes for  the car you drive
>> and just about everything other non-trivial machine you use: you use 
>> it without knowing much about how it works.
>> That's what makes the world go round :)
>>
> You miss the point. Let's take the car example. There's a big 
> difference between what I wrote and you responded to. As far as I can 
> see, you're saying that if a guy has a driving licence, you're quite 
> happy to get him to repair your car brakes ... WHAT...!!!

No, I'm just saying that what makes the car useful is that you don't 
have to understand it to use it. You're
hidden from the layers below.

>
> You do not give a problem to someone to solve, if they do not have the 
> mental capacity to understand the problem. You do not ask a guy to 
> repair the brakes on your car if he has no experience of being a 
> mechanic, even if he does have a driving licence (and there's a lot of 
> people I would hate to have service my car, even if they do have a 
> mechanics qualification, because they learnt to follow the diagrams in 
> the book and didn't learn to work through what was *actually* 
> *happening*!).

I agree.

>>>>
>>> And then the programmer needs a pointer to write to a bit of 
>>> hardware, and throws Java out in disgust because his "great" tool is 
>>> useless for the job at hand ...
>>
>>
>> Right. And probably gets fired if his boss finds out that he's trying 
>> to write a bit directly to hardware.
>> He thinks he needs to do that, and he thinks he's smart, but he's 
>> not. That's pretty rare these days to
>> have anyone feel that they need direct access to the hardware. We're 
>> many levels beyond that now.
>>
> Given the ability of many bosses, I bet the boss gave him the job, and 
> told him to use the wrong tool ...

Maybe. From my experience, almost always when someone says "I need to 
set individual bits by hand,
so Java isn't a good fit", it turns out that in fact he does not need to 
set individual bits by hand, and Java will
work just fine. He just thinks he needs to bit-twiddle because that's 
how he's used to doing things, and he
wouldn't even think to just use an array of booleans because he can't 
make that mental leap.

>
>>>
>>> Because javac is meant to convert java source accurately to java 
>>> bytecode. While Antlr is meant to (and does) accurately convert its 
>>> sourcecode into a lexer/parser/treewalker, it is also designed to 
>>> let do things beyond the power of the tool. Both fit their design 
>>> aims  - javac creates a java program, Antlr creates an extensible 
>>> lexer/parser/treewalker. Both are *good* tools, that doesn't 
>>> necessarily mean they are *great* tools.
>>>
>>> At the end of the day, I think your definition of "great" is badly 
>>> flawed - "a great tool lets a mediocre programmer do a decent job". 
>>> A great programmer could probably outperform that mediocre 
>>> programmer without that tool.
>>
>>
>> Heh, it's been a while since I heard the "A great programmer can 
>> write better code than the compiler" line.
>> Used to hear that a lot 20 years ago, not much any more.
>
>
> I gather the statistics still hold true. The best programmers still 
> outperform the average ones by about 1000% ... that's a MASSIVE 
> difference.

Yea, that's about right. But the best compilers now outperform the best 
programmers at compiling. We're
comparing people to tools above, not people to people.

>
>>
>>>
>>> The greater the tool, the greater the level of maturity required to 
>>> be able to use it safely.
>>
>>
>> If you want to use that meaning for "great", that's fine. But I do 
>> disagree. If you had one space shuttle
>> that was completely safe and automated, that would be a "greater" 
>> tool than one that requires maturity, IMO.
>> Especially if you have millions of shuttle pilots, and not just a few.
>
>
> You've obviously not read Dick Feynmann then ... :-) even *I* could 
> fly the space shuttle :-)

"Surely You're Joking!" ;) Maybe you could point me to where he talks 
about this issue,
because I don't remember it.

>
>>
> Fine. Since Java is such a great language, let's see you write the 
> BIOS for all new computers in it ... what? you mean all new computers 
> will be bricks if you do? What a crap tool ...

Just because a car can't fly doesn't mean it's not a great tool. ;)

>
> Oh - and as for "we smart programmers", you do realise you've just 
> disqualified yourself as a member of that set? You used the word "we"! 
> If the "other" guy respects you, he'll do as you say. I've done some 
> crazy things in my time, like using a goto in C :-) But when other 
> programmers have said "you shouldn't do that" I've just said "well, 
> you do better". Usually, they've looked at the problem to be solved, 
> and backed down. If you're a smart programmer, you'll show the other 
> guy how to do it better. If you can't, he's smarter than you thought!

I'll take that challenge...show me a piece of code that really needs a 
goto, and I'll remove it (assuming you let me rewrite
the whole darn thing if I need to).

>
> "Perfection is achieved, not when everything that is necessary has 
> been added, but when everything that is unnecessary has been taken away".

And so it is with C++ and Java.

>
>
> I *know* I'm an expert in DATABASIC. I would *like* to *think* I'm a 
> guru, but until somebody like Jim, or Rob, or Monty, tells me I am 
> (and I probably wouldn't believe Monty), then I'm not! And even then, 
> I wouldn't believe them unless other people I trusted agreed with them.
>
> Ask Loring what unnecessary stuff can be removed from Antlr. Ask Ter. 
> Ask Jim. Ask Monty. Ask the people *YOU* *RESPECT* *AS* *EXPERTS* (or 
> aren't there any such on this list? :-)

Ask Bjourne what unnecessary stuff can be removed from C++. Now ask 
Gosling. Often, the experts are the
exact wrong people to ask.

>
> I think you'll find everything in Antlr is there because it's needed. 
> Like ASTs for example - I think they happen to be a perfect solution 
> to my problem :-)
>
> I know Antlr doesn't do what you want. So stop trying to drive screws 
> with a hammer, and go find yourself a screwdriver :-) Don't try and 
> ban hammers :-)

You do understand that I'm not trying to "disable" or "take away 
features" from ANTLR, right?
I think it's perfectly reasonable for someone to post his crazy dreams 
for an "electric hammer" on
a "Joe's hammer" forum. If you don't want to read it, then don't.

>
> (Incidentally, one of the features I found Antlr lacked - or rather 
> seemed incredibly complex to implement - in v2 was a stream rewriter - 
> I wanted a state engine to flip token types - certain types may or may 
> not follow other types and I could do it a lot easier in a stream 
> rewriter than by tracking state in the lexer. Maybe that would be a 
> useful tool for you, maybe not.)

Probably not, as I can't imagine how it could be easier than looping 
through the List of tokens "by hand".

Andy

>
> Cheers,
> Wol



From antlr at thewolery.demon.co.uk  Thu Nov  2 08:13:09 2006
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Thu, 2 Nov 2006 16:13:09 +0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <F89BA86F375B2F43B05CB04E01B199BA0AAF13@castor-srvr1.benchmarkcanada.com>
References: <F89BA86F375B2F43B05CB04E01B199BA0AAF13@castor-srvr1.benchmarkcanada.com>
Message-ID: <ZsvkZZTVkhSFFwun@thewolery.demon.co.uk>

In message 
<F89BA86F375B2F43B05CB04E01B199BA0AAF13 at castor-srvr1.benchmarkcanada.com>
, Oliver Wong <owong at benchmarkconsulting.com> writes
>
>
>-----Original Message-----
>From: antlr-interest-bounces at antlr.org
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Anthony W.
>Youngman
>
>>>> A C compiler can compile itself. Can a Java system build itself?
>>>> How much of Java is actually written in Java? (Oh and I'm
>>>> including the supporting libraries here!)
>>>
>>>Almost all of Java is written in Java. The only part that's not
>>>is the lowest layer, which is OS and hardware specific.
>>>
>> Assembler is written in assembler, pretty much without exception.
>> C is written in C, pretty much without exception.
>
>       I think you (plural) might be conflating a language with an
>implementation of the toolset for that language. Java, C and assembler
>are languages, and you can't "write" (in the sense of program) a
>language. You could program a compiler or an interpreter for these
>languages. But you can't "write" the languages themselves.

Ummm ... I see what you're getting at ... the C spec is written in 
English, not C ... (plus, of course, BNF :-)
>
>       And yes, there are assembler "compilers" (though an "assembler
>compiler" is typically called "an assembler") written in assembler, but
>there are also assembler compilers written in C, and possibly in Java.
>
>       Similarly, there are C compilers written in C, but there may
>also be C compilers written in assembler, and there's definitely C
>compilers written in Java.

This is what I'm getting at. The C compiler should, itself, be written 
using the C language. I must admit, you could almost certainly write a C 
compiler in Java using Antlr :-)
>
>       And there are Java compilers and Java virtual machines written
>in C, but there are also Java compilers and Java virtual machines
>written in Java (see the SableCC and SableVM projects).
>
>[...]
>> Fine. Since Java is such a great language, let's see you write
>> the BIOS for all new computers in it ... what? you mean all new
>> computers will be bricks if you do? What a crap tool ...
>
>       The fact that Sun's javac compiler takes Java as an input
>language and emits JVM Bytecode as an output language is a
>characteristic of the compiler, and not of the Java language itself.
>There's no reason why you couldn't have a compiler take Java as an input
>language, and machine code as an output language (The gcj compiler does
>exactly this).
>
>       I don't know what's involved in writing BIOSes, but I suspect
>that if you can program a BIOS in software (as opposed to fiddling with
>wiring at the hardware level), then you essentially need to "burn" a
>bytestream representing the BIOS program into the FlashROM containing
>the BIOS. Well, you can write a compiler which takes Java as its source
>language, and emits the appropriate bytestream in whatever format the
>FlashROM expects (which may or may not be machine code; I don't know).
>
The point I was trying to make there, is that even if you change the 
compiler output from bytecode to machine code, there is NO WAY - using 
Java - to express the concepts needed by a BIOS in Java source code.

Java enforces a virtual-mode paradigm onto the executable, be it 
bytecode, machinecode, p-code or whatever, where it does not need to 
know anything about the underlying hardware. The whole point of a BIOS 
is to provide the layer between the underlying hardware and the 
overlaying application. Therefore, you cannot write a BIOS in Java 
because the basic philosophy of the language says "what you need to do, 
I've been designed to make sure you can't do it".

I don't know whether Java is or isn't a great tool. What seems apparent 
from this discussion is that it is a simple, popular tool, that is just 
perfect for many situations. But to my mind that doesn't make it great.

To give a concrete example of what I *do* consider a great tool, take 
WordPerfect. (Not the modern versions, they've been bastardised :-( On 
the surface, it was an incredibly simple tool - start it up, start 
typing, <alt-f7> print. Out comes your document (okay, dos tools weren't 
that simple :-)

But it presented a very simple interface to novices. Start scratching 
beneath the surface, however, and it was amazingly complex and powerful 
- and easy to use with it! My opinions on Word (and OOo Writer) are 
unprintable, in comparison.

Java, to me, presents me with an incomprehensible interface (though I 
admit that may simply be because it's object-oriented, with which I 
haven't really got to grips), and it strikes me as being fundamentally 
limited. It's been DESIGNED to be fundamentally limited. I don't know 
what half the missing stuff the other people are going on about even IS, 
but I do know, if I wanted to use it and it weren't there, I'd be 
slating Java as crap. Oh - and like pointers in C - I'd only want to use 
it if I thought it were the simplest solution to my problem.

At the end of the day, it always comes back to using the right tool for 
the job. And while a deliberately crippled tool may be great for the job 
in hand, I don't see how it can be a great tool full stop.

At the end of the day, I know I said a great tool "has to be written in 
itself". I think I'll add to that. It has to be self-contained, and 
complete in its own world. FORTRAN didn't have pointers, because they're 
meaningless when doing maths, but it does now have operator overloading 
- you can do matrix arithmetic using +, * etc, because it DOES make 
sense within FORTRAN's problem space. Java doesn't have pointers because 
it doesn't make sense within its security paradigm. I don't know enough 
about Java to comment on other stuff.

But it seems to me that Andy thinks the "great"ness of Java, and Antlr, 
would be *improved* by deleting features that lie within their problem 
space. No!!! That merely gives us crippleware.

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From r.morgan at verizonbusiness.com  Thu Nov  2 08:22:24 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Thu, 02 Nov 2006 09:22:24 -0700
Subject: [antlr-interest] Simple way to get the text that matched
In-Reply-To: <mailman.1800.1162481741.15912.antlr-interest@antlr.org>
Message-ID: <000001c6fe9b$156d04d0$e2289283@mcilink.com>

Cancel my previous question, the "post processing step" I needed was
actually a pre-processing step:
options {
	buildAST=true;
}

>I have to guess that (being new with ANTLR) I've totally overlooked
>some step, like some post-processing step that turns those hash marks into
>valid AST node references like the wiki says they'll be.  How do I get that
>to happen?
Rick



From kroepke at classdump.org  Thu Nov  2 08:49:30 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 2 Nov 2006 17:49:30 +0100
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <454A1879.6040802@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>	<45496671.9010008@jazillian.com>
	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<454A1879.6040802@jazillian.com>
Message-ID: <C40CD76A-070A-4AC9-9DCA-E0BEBA0A43DE@classdump.org>


On 2. Nov 2006, at 17:10 , Andy Tripp wrote:

> No, I don't mean "...*dont need* to be an expert", but rather "dont  
> need to know about the layers below". Java is great
> because it doesn't require any knowledge about memory management,  
> for example. The tool should let you
> only be an expert *at one level of abstraction*. I can program in  
> Java without knowing (almost) any details about
> any of the underlying layers.

IMHO the problem with this approach is that people who started out  
with no knowledge about memory management at all, will not get it  
afterwards, most of the time. They've been spoiled. The fact that I  
sometimes would like not having to care about memory management  
doesn't say that I want to have to use it all the time. Sometimes I  
need to be able to specify data locality for performance reasons.  
Java, AFAIK, doesn't allow me to do that, so it's out.
In other words, Java not only doesn't require the knowledge, it  
actively prevents you from gaining that knowledge. To return briefly  
to the distinction of "great" vs. "popular" and what constitutes  
greatness:
Whatever you may think of Perl and Larry Wall, one motto is  
describing this situation perfectly: "Making easy things easy and  
hard things possible."
Java isn't great (for me), because it locks me in. I'd prefer a  
system/language that makes the normal case easy, allows me to be  
sloppy if I wanted to just hack it down to get it working. But at the  
same time it shouldn't get in the way if I want to write very tight  
code - tight in terms of memory usage, code size and runtime  
performance.

> Maybe. From my experience, almost always when someone says "I need  
> to set individual bits by hand,
> so Java isn't a good fit", it turns out that in fact he does not  
> need to set individual bits by hand, and Java will
> work just fine. He just thinks he needs to bit-twiddle because  
> that's how he's used to doing things, and he
> wouldn't even think to just use an array of booleans because he  
> can't make that mental leap.

I shudder at the thought of a bitvector as an array of booleans.  
Sure, if I have an vector of YES/NO information I think of it as  
exactly that, and I might even implement a very quick and dirty  
version that way (if there isn't already a class that handles this  
particular case for me - I'm thinking in OO terms here, but the same  
applies to procedural languages), but eventually I would want to  
optimize it. If you then tell me that the language cannot do it, I  
think I'm justified in saying "What a crappy language is this?". The  
fact that this person thinks he must fiddle with bits is based on  
experience: The array approach is slow and wasteful, whatever the  
language.
I'm no child, I'm a programmer - why prevent me from accessing  
computer specific details from me?

For the record, any Java program I have used has amazed me with a  
huge waste of resources. A comparable C/C++-based implementation has  
in all cases been order of magnitude faster and at the same time  
consumed *a lot* less memory. If have yet to see a snappy Java program.
If the issue is maintenance, mainenance requires discipline, but the  
quality of it isn't limited to any language.

As to what "average" programmers get or don't get, I think that is  
simply an issue of education. If you present stuff in the right way,  
motivate people by relating to stuff they are already familiar with,  
you'd be surprised how much a "dumb average programmer, that is so  
much worse than me"(tm) can learn. To say MI, ASTs, operator  
overloading et al, are out of reach of the majority of programmers,  
is in my opinion just one thing: arrogant. (This is not meant to  
insult anyone, please don't get me wrong!)
Sorry for the outburst, but I always get sort of angry when I hear/ 
read something like this, because it implies a certain "screw them"- 
attitude.

Anyway, if you think it possible to build a product that handles all  
the AST mucking behind the scenes, allowing you to specify rules to  
reliably translate source-to-source, then by all means do it. If it  
uses ANTLR behind the scenes, congratulations! In essence, if you've  
got an idea, pursue it. Great things have always come from those  
ideas and computers are built for exactly this purpose:

"Making easy things easy and hard things possible."

cheers,
-k




From andy at exchange.voelkel.us  Thu Nov  2 10:46:53 2006
From: andy at exchange.voelkel.us (Andy Voelkel)
Date: Thu, 2 Nov 2006 10:46:53 -0800
Subject: [antlr-interest] philosophy about translation
Message-ID: <7AE2E53336B37440A20C9590DB11BCB90552EEBA@EXVS01.ex.dslextreme.net>

Hi All,
All of you who are arguing for the advantages of C++ over Java should
really be thrilled about Microsoft's approach, I would think. Managed
C++ gives all the low level access you want when you decide you need it,
yet interfaces relatively seamlessly with C#. 
IMO, there is no one best language for everything. So having
intelligently designed interop layers between languages is really a
handy thing for those corner cases. 
In the end, though, I think you'll find that the vast majority of code
can be productively and efficiently written in C#. There are application
areas where C++ is king (I work in embedded systems and C++ is still
king there), but these areas are really niche programming areas these
days.
- Andy
P.S. Isn't this whole thread a little off topic?
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061102/31d20561/attachment.html 

From parrt at cs.usfca.edu  Thu Nov  2 10:52:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Nov 2006 10:52:20 -0800
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <7AE2E53336B37440A20C9590DB11BCB90552EEBA@EXVS01.ex.dslextreme.net>
References: <7AE2E53336B37440A20C9590DB11BCB90552EEBA@EXVS01.ex.dslextreme.net>
Message-ID: <768C0295-4656-4D1E-9D70-A7D8BF0C65F5@cs.usfca.edu>

On Nov 2, 2006, at 10:46 AM, Andy Voelkel wrote:
> P.S. Isn't this whole thread a little off topic?
I agree. I think we've gotten off the topic for long enough now. Let  
us move on to other things :)

Ter

From ewbank at gmail.com  Thu Nov  2 10:50:45 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu, 2 Nov 2006 13:50:45 -0500
Subject: [antlr-interest] Simple way to get the text that matched
In-Reply-To: <000001c6fe9b$156d04d0$e2289283@mcilink.com>
References: <mailman.1800.1162481741.15912.antlr-interest@antlr.org>
	<000001c6fe9b$156d04d0$e2289283@mcilink.com>
Message-ID: <dd3a065f0611021050m62eee94ch66bc5155de18d26d@mail.gmail.com>

Rick,

Be aware that (for buildAST=true and C++) you must define a factory
from which the AST nodes will be created.  See the C++ examples for
details, and search for the identifier ASTFactory.

Without a registered method for your AST node type, you will get a
segv pretty quick.

On 11/2/06, Rick Morgan <r.morgan at verizonbusiness.com> wrote:
> Cancel my previous question, the "post processing step" I needed was
> actually a pre-processing step:
> options {
>         buildAST=true;
> }
>
> >I have to guess that (being new with ANTLR) I've totally overlooked
> >some step, like some post-processing step that turns those hash marks into
> >valid AST node references like the wiki says they'll be.  How do I get that
> >to happen?
> Rick
>
>
>

From antlr at jazillian.com  Thu Nov  2 11:30:41 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Nov 2006 14:30:41 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <ZsvkZZTVkhSFFwun@thewolery.demon.co.uk>
References: <F89BA86F375B2F43B05CB04E01B199BA0AAF13@castor-srvr1.benchmarkcanada.com>
	<ZsvkZZTVkhSFFwun@thewolery.demon.co.uk>
Message-ID: <454A4761.7000709@jazillian.com>

Anthony W. Youngman wrote:

> FORTRAN didn't have pointers, because they're meaningless when doing 
> maths, but it does now have operator overloading - you can do matrix 
> arithmetic using +, * etc, because it DOES make sense within FORTRAN's 
> problem space. 

Operator overloading makes just as much sense in Java as it does for C, 
C++, and FORTRAN: any application that uses
matrixes will be crying out for it, and all those languages are used for 
such applications. The reason Java doesn't
support operator overloading (in my view) is a pragmatic one: Gosling 
chose to leave it out because it's more often
misused than used correctly. Regardless of how powerful the rope, if 
it's more often used to hang yourself than
to tie things up, it's not a good tool.

> Java doesn't have pointers because it doesn't make sense within its 
> security paradigm. I don't know enough about Java to comment on other 
> stuff.

I don't think Java's lack of pointers has much to do with security. Yes, 
it's harder (maybe impossible) to provide security
with pointer support. But I suspect Gosling's thinking was more along 
the lines of "I just hate the bugginess of code that
uses pointers." Just my guess.

>
> But it seems to me that Andy thinks the "great"ness of Java, and 
> Antlr, would be *improved* by deleting features that lie within their 
> problem space. No!!! That merely gives us crippleware.

Again, only in the sense that Java is a "crippleware" version of C++: 
it's a separate language, and no C++ programmers were
harmed in the making of Java :)

>
>
> Cheers,
> Wol



From antlr at jazillian.com  Thu Nov  2 11:48:43 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Nov 2006 14:48:43 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <C40CD76A-070A-4AC9-9DCA-E0BEBA0A43DE@classdump.org>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>	<45496671.9010008@jazillian.com>
	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<454A1879.6040802@jazillian.com>
	<C40CD76A-070A-4AC9-9DCA-E0BEBA0A43DE@classdump.org>
Message-ID: <454A4B9B.9060503@jazillian.com>

Kay Roepke wrote:

>
> On 2. Nov 2006, at 17:10 , Andy Tripp wrote:
>
>> No, I don't mean "...*dont need* to be an expert", but rather "dont  
>> need to know about the layers below". Java is great
>> because it doesn't require any knowledge about memory management,  
>> for example. The tool should let you
>> only be an expert *at one level of abstraction*. I can program in  
>> Java without knowing (almost) any details about
>> any of the underlying layers.
>
>
> IMHO the problem with this approach is that people who started out  
> with no knowledge about memory management at all, will not get it  
> afterwards, most of the time. They've been spoiled. 

Right, just as the car driver is spoiled by not having to know how the 
car works....i.e. "spoiled" is a good thing here.

> The fact that I  sometimes would like not having to care about memory 
> management  doesn't say that I want to have to use it all the time.

And you can tinker under your car's hood all you want, no problem.
The main point is that the automatic transmission is a good design, 
because it hides the user from the underlying
"gears" layer. At home, I prefer to drive a stick because it's fun. But 
at work, I don't prefer to see bytecode, because
I don't find that fun.

> Sometimes I  need to be able to specify data locality for performance 
> reasons.  Java, AFAIK, doesn't allow me to do that, so it's out.

If you're talking about the C "register" keyword, C and C++ don't 
usually allow you to do that anymore either :)
Most modern C and C++ compilers ignore the "register" keyword, or so 
I've heard.

> In other words, Java not only doesn't require the knowledge, it  
> actively prevents you from gaining that knowledge. 

Yes, just as the automatic transmission prevents you from even knowing 
how many gears your car has.
That's not a big issue with cars, as most people can shift as well as an 
automatic.
But with programming languages it's important, because most of the time,
when people access those underlying layers (doing their own memory 
management, guessing which
variables should be "register", etc), they don't do it as well as the 
machine.

> To return briefly  to the distinction of "great" vs. "popular" and 
> what constitutes  greatness:
> Whatever you may think of Perl and Larry Wall, one motto is  
> describing this situation perfectly: "Making easy things easy and  
> hard things possible."
> Java isn't great (for me), because it locks me in. I'd prefer a  
> system/language that makes the normal case easy, allows me to be  
> sloppy if I wanted to just hack it down to get it working. But at the  
> same time it shouldn't get in the way if I want to write very tight  
> code - tight in terms of memory usage, code size and runtime  
> performance.

Just stick with Java long enough to "get it". I went through several 
weeks of trying to "really get" OO, and it was tough going.
After a couple of months, I was as comfortable with Java as with C/C++. 
After a year or so, I felt that
I was several times more productive in Java, and there was no turning back.

>
>> Maybe. From my experience, almost always when someone says "I need  
>> to set individual bits by hand,
>> so Java isn't a good fit", it turns out that in fact he does not  
>> need to set individual bits by hand, and Java will
>> work just fine. He just thinks he needs to bit-twiddle because  
>> that's how he's used to doing things, and he
>> wouldn't even think to just use an array of booleans because he  
>> can't make that mental leap.
>
>
> I shudder at the thought of a bitvector as an array of booleans.  
> Sure, if I have an vector of YES/NO information I think of it as  
> exactly that, and I might even implement a very quick and dirty  
> version that way (if there isn't already a class that handles this  
> particular case for me - I'm thinking in OO terms here, but the same  
> applies to procedural languages), but eventually I would want to  
> optimize it. If you then tell me that the language cannot do it, I  
> think I'm justified in saying "What a crappy language is this?". The  
> fact that this person thinks he must fiddle with bits is based on  
> experience: The array approach is slow and wasteful, whatever the  
> language.
> I'm no child, I'm a programmer - why prevent me from accessing  
> computer specific details from me?

That's a great example. You make the assumption that an array of 
booleans is somehow going to be slower or use more memory
than a bitvector. You've got to let that old thinking go, Luke! You 
worry about your application and pick the appropriate
data structure for it. Let the compiler and runtime be smart about 
performance and memory management. It is better at
those things than you are (and certainly better than you think it is).

>
>
> For the record, any Java program I have used has amazed me with a  
> huge waste of resources. A comparable C/C++-based implementation has  
> in all cases been order of magnitude faster and at the same time  
> consumed *a lot* less memory. If have yet to see a snappy Java program.

Just write yourself a 10-line benchmark and run it. Be sure to subtract 
out the JVM startup and class loading time
(assuming you're doing server-side work and don't care about the few 
seconds of startup time). Just be careful
because if your benchmark isn't complicated enough, the JIT will 
optimize all your code away :)

> If the issue is maintenance, mainenance requires discipline, but the  
> quality of it isn't limited to any language.
>
> As to what "average" programmers get or don't get, I think that is  
> simply an issue of education. If you present stuff in the right way,  
> motivate people by relating to stuff they are already familiar with,  
> you'd be surprised how much a "dumb average programmer, that is so  
> much worse than me"(tm) can learn. To say MI, ASTs, operator  
> overloading et al, are out of reach of the majority of programmers,  
> is in my opinion just one thing: arrogant. (This is not meant to  
> insult anyone, please don't get me wrong!)

I sure wasn't saying that those are "out of reach" - I was saying that 
they're misused more often than not.

> Sorry for the outburst, but I always get sort of angry when I hear/ 
> read something like this, because it implies a certain "screw them"- 
> attitude.
>
> Anyway, if you think it possible to build a product that handles all  
> the AST mucking behind the scenes, allowing you to specify rules to  
> reliably translate source-to-source, then by all means do it. If it  
> uses ANTLR behind the scenes, congratulations! In essence, if you've  
> got an idea, pursue it. Great things have always come from those  
> ideas and computers are built for exactly this purpose:
>
> "Making easy things easy and hard things possible."
>
> cheers,
> -k

Thanks!
Andy

>
>
>


From lists.steve at arachnedesign.net  Thu Nov  2 12:14:13 2006
From: lists.steve at arachnedesign.net (Steve Lianoglou)
Date: Thu, 2 Nov 2006 15:14:13 -0500
Subject: [antlr-interest] (not really about) philosophy about translation
In-Reply-To: <454A4B9B.9060503@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>	<45496671.9010008@jazillian.com>
	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<454A1879.6040802@jazillian.com>
	<C40CD76A-070A-4AC9-9DCA-E0BEBA0A43DE@classdump.org>
	<454A4B9B.9060503@jazillian.com>
Message-ID: <11026A89-D21A-4B2E-BD5D-F6EC9FE87035@arachnedesign.net>

Hi guys,

I've been casually following this thread and don't have much to say,  
but I would like to point out:

> That's a great example. You make the assumption that an array of  
> booleans is somehow going to be slower or use more memory
> than a bitvector. You've got to let that old thinking go, Luke! You  
> worry about your application and pick the appropriate
> data structure for it. Let the compiler and runtime be smart about  
> performance and memory management. It is better at
> those things than you are (and certainly better than you think it is).

At some point an array of booleans (boolean[]) in Java actually used  
one byte to store each bit, so appearances aren't always what they  
seem? That's an 8x bigger data structure than you would have been  
bargaining for ... and sometimes it really does make a difference.

And by "at some point" .. this was seemingly the case in Java 1.2.2.

I'm only mentioning this because:

(1) I'd be very happy to hear that this isn't true anymore; and I  
figured since there's sure to be many-a-Java guru here, someone may  
actually really know the answer to that one (or point me to where I  
could investigate that further). I had to deal with this over the  
summer because I was getting into the bowels of a library I was  
using, and to my surprise found it noted as such in the docs:

http://dsd.lbl.gov/~hoschek/colt/api/cern/colt/bitvector/BitVector.html
(Look for "Why this class?")

I also was searching the web to look into see if that still was the  
case. I found something similarly mentioned elsewhere, but I think it  
was also somewhat dated; moreover, I can't find it again!

(2) Maybe swerve the conversation to more tangible topics :-)

I should probably ask in comp.lang.java or some such, but how many  
times does this thing come up in a passing conversation? I just  
couldn't resist.

Thanks,
-steve

From r.morgan at verizonbusiness.com  Thu Nov  2 12:55:41 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Thu, 02 Nov 2006 13:55:41 -0700
Subject: [antlr-interest] Problem with lexer
In-Reply-To: <mailman.1800.1162481741.15912.antlr-interest@antlr.org>
Message-ID: <000001c6fec1$455c06c0$132f9283@mcilink.com>

Emond,

I'm a total beginner at this stuff, but could I suggest that '[]' is not a
valid lexer character? Maybe "[]" is needed. Others who know better would
have to confirm or deny that.

Rick

>I'm having a problem with the attached lexer (v3). When it is run with the 
>Test class, the NODE_SELECTION token is never matched, even though the 
>input contains a NODE_SELECTION. The problem is that the lexer does not 
>look past the WS? in NODE_SELECTION. It first matches '#value'. Now it 
>checks the LA and decides to take the (WS? '[]') branch, even though there 
>is no '[]'. I've tried adding syntactic predicates and changing k, but to 
>no avail. Am I doing something wrong here?
>
>lexer grammar ActionMacroGenerate;
>NODE_SELECTION
>	: '#' IDENTIFIER (WS? '[]')? {
>		System.out.println("MATCH: "+getText());
>	}
>	;




From antlr at jazillian.com  Thu Nov  2 13:06:05 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Nov 2006 16:06:05 -0500
Subject: [antlr-interest] Java boolean type storage
In-Reply-To: <11026A89-D21A-4B2E-BD5D-F6EC9FE87035@arachnedesign.net>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>	<4548F943.7070906@jazillian.com>	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>	<45496671.9010008@jazillian.com>	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>	<454A1879.6040802@jazillian.com>	<C40CD76A-070A-4AC9-9DCA-E0BEBA0A43DE@classdump.org>	<454A4B9B.9060503@jazillian.com>
	<11026A89-D21A-4B2E-BD5D-F6EC9FE87035@arachnedesign.net>
Message-ID: <454A5DBD.3000300@jazillian.com>

Steve Lianoglou wrote:

> Hi guys,
>
> I've been casually following this thread and don't have much to say,  
> but I would like to point out:
>
>> That's a great example. You make the assumption that an array of  
>> booleans is somehow going to be slower or use more memory
>> than a bitvector. You've got to let that old thinking go, Luke! You  
>> worry about your application and pick the appropriate
>> data structure for it. Let the compiler and runtime be smart about  
>> performance and memory management. It is better at
>> those things than you are (and certainly better than you think it is).
>
>
> At some point an array of booleans (boolean[]) in Java actually used  
> one byte to store each bit, so appearances aren't always what they  
> seem? That's an 8x bigger data structure than you would have been  
> bargaining for ... and sometimes it really does make a difference.
>
> And by "at some point" .. this was seemingly the case in Java 1.2.2.

The place to look would be the JVM spec, which has only this footnote:
In Sun's JDK releases 1.0 and 1.1, and the Java 2 SDK, Standard Edition, 
v1.2, |boolean| arrays in the Java programming language are encoded as 
Java virtual machine |byte| arrays, using 8 bits per |boolean| element.

So that sounds like you're outta luck for now, but the spec doesn't rule 
out a change in the future.
Sorry, I didn't mean to get your hopes up :)

>
> (2) Maybe swerve the conversation to more tangible topics :-)

Not likely :) As with older languages, better to let older threads that 
have gone off track
just fade away quietly :)

>
> I should probably ask in comp.lang.java or some such, but how many  
> times does this thing come up in a passing conversation? I just  
> couldn't resist.
>
> Thanks,
> -steve
>


From antlr at thewolery.demon.co.uk  Thu Nov  2 17:16:49 2006
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Fri, 3 Nov 2006 01:16:49 +0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <454A1879.6040802@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
	<4548F943.7070906@jazillian.com>
	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>
	<45496671.9010008@jazillian.com>
	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<454A1879.6040802@jazillian.com>
Message-ID: <ijaaKsMBipSFFwoA@thewolery.demon.co.uk>

In message <454A1879.6040802 at jazillian.com>, Andy Tripp 
<antlr at jazillian.com> writes
>
>>>
>>> Every time I've heard anyone say they NEED MI, operator overloading, 
>>>or Aspects, I've thought
>>> that they really don't need them, they're just not good enough 
>>>programmers to see a clean way
>>> to do without them. I've been programming for 25 years without ever 
>>>NEEDING any of these,
>>> and so have most other programmers.
>>>
>> I programmed for many years without needing pointers. FORTRAN didn't 
>>have them, so I tended not to use them in C. I notice you said *MOST* 
>>other programmers. You're jumping to conclusions - because "all the 
>>programmers I know are too stupid to live without these features" you 
>>conclude that these features "mostly aren't needed". So you'd like to 
>>see them removed from any tool you use ... :-(
>
>I conclude that these features "mostly aren't needed" (really more like 
>"almost never" or even "never") from personal
>experience, not from something you or I said.
>
I thought that was what I said - your personal experience leads you to 
believe they're not necessary ... (and you ignore other people's 
experiences to the contrary :-)
>>>>
>>>>>
>>>> So - you're quite happy to see Antlr crippled to suit you, ignoring 
>>>>the NEEDS of those who need its power!
>>>
>>>
>>> Don't worry, I can't cripple ANTLR.  But yes, I'd be happy to see 
>>>ANTLR4 become a "crippled" version,
>>> in the same sense that Java is a "crippled" version of C++.
>>>
>> And as I said, you're quite happy to ruin the tool for all those 
>>people who need that power ...
>
>Yes, if you consider Java to be "ruining" C++. New tool without all the 
>warts. Those
>who "need the power" of the warts can keep using the old tool.
>
Except you seem to be saying that C++ is unnecessary because Java can do 
everything that C++ is used for.
>>
>>>>>>
>>>>>>
>>>>> But required knowledge of the tool's internals limits the 
>>>>>"average" user's productivity.
>>>>> If I had done AST-based translation, I'd be spending way to much 
>>>>>time worrying about the details
>>>>> of the AST, rather than the syntax and semantics of the two 
>>>>>languages. I demand to spend 95% of
>>>>> my time on *what* to do, rather than *how* to do it. With ASTs, I 
>>>>>found myself spending
>>>>> 95% of my time on *how*.
>>>>>
>>>> In other words, as you said earlier, ASTs are the wrong tool for 
>>>>you. So you seem happy to delete ASTs from Antlr because *you* don't 
>>>>need them, irregardless of what other people *NEED*.
>>>
>>>
>>> Yes, just as I railed against operator overloading and MI in C++, 
>>>and found bliss in Java.
>>> I don't much care that other people think they *NEED* MI. They can 
>>>always stick with C++.
>>>
>> Or you could find some other language instead of Java? You'd much 
>>rather inconvenience all the other Java programmers by removing 
>>features they need, rather than convenience yourself by finding 
>>something that suits you better?
>
>No, you're messing up the metaphor. I'm proposing that the next version 
>of ANTLR (or maybe it's a completely new tool)
>be to today's ANTLR as Java is to C++: a new and improved version 
>that's really better, in part because it takes programming
>to a higher level.
>
If you want to write a new tool, go ahead. But it won't be Antlr. And 
the people who know Antlr will go on using it because it's better :-)
>>>>>>
>>>
>>>> Let's ask a question ... how can a tool be "great" if it *relies* 
>>>>other tools even for its existence?
>>>
>>>
>>> Sure, of course! Virtually all software relies on other tools 
>>>(compilers, operating systems, etc) for their existence.
>>>
>>>>
>>>> A C compiler can compile itself. Can a Java system build itself? 
>>>>How much of Java is actually written in Java? (Oh and I'm including 
>>>>the supporting libraries here!)
>>>
>>>
>>> Almost all of Java is written in Java. The only part that's not is 
>>>the lowest layer, which is OS and hardware specific.
>>>
>> Assembler is written in assembler, pretty much without exception. C 
>>is written in C, pretty much without exception.
>>
>> The reason for demanding that a great tool be written in itself is 
>>exemplified by my databasic example above - the primitives for the 
>>version I initially used were written in machine code, and followed 
>>the spec. The C rewrite introduced loads of subtle bugs, because the 
>>characteristics of the C environment were different. How much of Java 
>>DEPENDS on the lowest layer? How much knowledge do you need to 
>>understand that layer?
>
>Heheh...didn't know that most of Java was written in Java, did you? ;)
>Yes, all of Java DEPENDS on C.  All of C DEPENDS on object code. All of 
>object code DEPENDS on
>the operating system. All of the operating system DEPENDS on the hardware.
>
Can you separate DEPENDS and IS? Java *depends* on C because at its base 
it's written in C. Neither Java nor C *depend* on object code, because 
at base they *are* object code. (Java twice over, because it's JVM 
object code interpreted by a JVM which is CPU object code :-)

Oh. And I've never met object code that depends on the operating system. 
On the hardware, yes, because it relies on the CPU to execute it 
correctly. But the OS? Not at all.

Actually, I'm beginning to think this is part of your problem. You've 
used the word DEPENDS four times in the paragraph above. With, to my 
mind, at least three different meanings! Everybody's trying to help you, 
but we don't seem able to understand what you're trying to say.
>>>>
>>>> Antlr v3 is due to be rewritten in Antlr v3. To my mind, that's a 
>>>>"necessary but not sufficient" condition for greatness.
>>>
>>>
>>> Wow. Only software that's written in itself can be "great"? Are you 
>>>really saying that?
>>>
>> Yes I am. Because otherwise it requires you to understand much more 
>>than you want about the execution environment. Note my comments about 
>>subtle bugs. Because it requires the system guys to be *experts* in 
>>two completely different environments!
>>
>> I note that you think a "great tool" is one that means you *don't* 
>>*need* to be an expert. By your logic, Java therefore has to be a crap 
>>tool for Java system programmers ...
>
>No, I don't mean "...*dont need* to be an expert", but rather "dont 
>need to know about the layers below". Java is great
>because it doesn't require any knowledge about memory management, for 
>example. The tool should let you
>only be an expert *at one level of abstraction*. I can program in Java 
>without knowing (almost) any details about
>any of the underlying layers.
>
Welcome to your imaginary world! By training, I'm a scientist. Your 
world just doesn't exist in reality! In order to be an expert at, say, 
Chemistry (my speciality) you need to know a hell of a lot about 
Physics. And depending on your branch of Chemistry, you also almost 
certainly need to know a hell of a lot about Biology, or Geology, or 
loads of other stuff.
>>
>> Which is why, in the system I want to build with Antlr, it's very 
>>important to me that AS MUCH AS POSSIBLE of the system is built using 
>>DATABASIC, because that's what the programmers using it will have 
>>experience in. *THAT* is why a great tool must be built using itself.
>
>I think maybe you're only picturing cases where the tool developer is 
>the same person as the tool user.
>I don't care at all whether ANTLR (Or Java, or anything else I use) is 
>built with itself. I'm sure Terence cares,
>but he's the exception.
>
You should care. Otherwise you'll get bitten by paradigm bugs.
>>
>>>
>>> Well, virtually every coder in the world is like that. Only a 
>>>handful  of people in the world know the details of what their
>>> compiler is doing as they use it every day. Same goes for the OS and 
>>>the hardware. Same goes for  the car you drive
>>> and just about everything other non-trivial machine you use: you use 
>>>it without knowing much about how it works.
>>> That's what makes the world go round :)
>>>
>> You miss the point. Let's take the car example. There's a big 
>>difference between what I wrote and you responded to. As far as I can 
>>see, you're saying that if a guy has a driving licence, you're quite 
>>happy to get him to repair your car brakes ... WHAT...!!!
>
>No, I'm just saying that what makes the car useful is that you don't 
>have to understand it to use it. You're
>hidden from the layers below.
>
And if you don't have basic mechanical knowledge you are a liability and 
a danger to other road users. The UK driving test now includes 
elementary car maintenance as a mandatory component. Fail that, and you 
fail your test.

And as I said above, to be an expert you need a considerable amount of 
knowledge in realms close to your specialist subject ... if that's true 
in the scientific world, I doubt it's any different in the programming 
world.
>>
>> You do not give a problem to someone to solve, if they do not have 
>>the mental capacity to understand the problem. You do not ask a guy to 
>>repair the brakes on your car if he has no experience of being a 
>>mechanic, even if he does have a driving licence (and there's a lot of 
>>people I would hate to have service my car, even if they do have a 
>>mechanics qualification, because they learnt to follow the diagrams in 
>>the book and didn't learn to work through what was *actually* *happening*!).
>
>I agree.
>
>>>>>
>>>> And then the programmer needs a pointer to write to a bit of 
>>>>hardware, and throws Java out in disgust because his "great" tool is 
>>>>useless for the job at hand ...
>>>
>>>
>>> Right. And probably gets fired if his boss finds out that he's 
>>>trying  to write a bit directly to hardware.
>>> He thinks he needs to do that, and he thinks he's smart, but he's 
>>>not. That's pretty rare these days to
>>> have anyone feel that they need direct access to the hardware. We're 
>>>many levels beyond that now.
>>>
>> Given the ability of many bosses, I bet the boss gave him the job, 
>>and told him to use the wrong tool ...
>
>Maybe. From my experience, almost always when someone says "I need to 
>set individual bits by hand,
>so Java isn't a good fit", it turns out that in fact he does not need 
>to set individual bits by hand, and Java will
>work just fine. He just thinks he needs to bit-twiddle because that's 
>how he's used to doing things, and he
>wouldn't even think to just use an array of booleans because he can't 
>make that mental leap.
>
Or maybe, just maybe, an array of booleans is a crap fit for the job. I 
don't know how Java stores booleans internally - I know C stores one 
boolean per byte. Crap, because it wastes a hell of a lot of (maybe) 
precious memory. Maybe Java's crap the same way, maybe not.

I've used PL/1. That stores booleans efficiently (as bits). But it bit 
(sorry for the pun) many programmers, because it went from most to least 
significant. Pass "true" between PL/1 and FORTRAN and the result was a 
disaster because FORTRAN, iirc, went from least to most - anyway, on the 
system I used there were big red warnings to be careful everywhere.
>>
>>>>
>>>> Because javac is meant to convert java source accurately to java 
>>>>bytecode. While Antlr is meant to (and does) accurately convert its 
>>>>sourcecode into a lexer/parser/treewalker, it is also designed to 
>>>>let do things beyond the power of the tool. Both fit their design 
>>>>aims  - javac creates a java program, Antlr creates an extensible 
>>>>lexer/parser/treewalker. Both are *good* tools, that doesn't 
>>>>necessarily mean they are *great* tools.
>>>>
>>>> At the end of the day, I think your definition of "great" is badly 
>>>>flawed - "a great tool lets a mediocre programmer do a decent job". 
>>>>A great programmer could probably outperform that mediocre 
>>>>programmer without that tool.
>>>
>>>
>>> Heh, it's been a while since I heard the "A great programmer can 
>>>write better code than the compiler" line.
>>> Used to hear that a lot 20 years ago, not much any more.
>>
>>
>> I gather the statistics still hold true. The best programmers still 
>>outperform the average ones by about 1000% ... that's a MASSIVE 
>>difference.
>
>Yea, that's about right. But the best compilers now outperform the best 
>programmers at compiling. We're
>comparing people to tools above, not people to people.
>
Forth, anyone?

But, to get back to Antlr, Antlr is a compiler for grammars. There are 
things we cannot tell Antlr how to do, because we don't have the 
knowledge to be able to specify it. So Antlr is the best compiler 
possible, but it can't do the full job. So we design Antlr so that 
people can build on what Antlr has done ...
>>
>>>
>>>>
>>>> The greater the tool, the greater the level of maturity required to 
>>>>able to use it safely.
>>>
>>>
>>> If you want to use that meaning for "great", that's fine. But I do 
>>>disagree. If you had one space shuttle
>>> that was completely safe and automated, that would be a "greater" 
>>>tool than one that requires maturity, IMO.
>>> Especially if you have millions of shuttle pilots, and not just a few.
>>
>>
>> You've obviously not read Dick Feynmann then ... :-) even *I* could 
>>fly the space shuttle :-)
>
>"Surely You're Joking!" ;) Maybe you could point me to where he talks 
>about this issue,
>because I don't remember it.
>
Well, the take-off is all done by George. Flying it in space is just a 
matter of pointing it where you want to go. And the landing was mostly 
done by George - the only thing the pilot (used to) did was press the 
red button to lower the landing gear.

And Dick said "Whatever for? Either let the guy fly the thing properly, 
or take responsibility for it away completely".

So, basically, while the pilot is also the captain of the shuttle, his 
job is 99.99% being captain, and 0.01% being pilot ... being pilot means 
sitting back and letting George do the job.
>>
>>>
>> Fine. Since Java is such a great language, let's see you write the 
>>BIOS for all new computers in it ... what? you mean all new computers 
>>will be bricks if you do? What a crap tool ...
>
>Just because a car can't fly doesn't mean it's not a great tool. ;)
>
>>
>> Oh - and as for "we smart programmers", you do realise you've just 
>>disqualified yourself as a member of that set? You used the word "we"! 
>>If the "other" guy respects you, he'll do as you say. I've done some 
>>crazy things in my time, like using a goto in C :-) But when other 
>>programmers have said "you shouldn't do that" I've just said "well, 
>>you do better". Usually, they've looked at the problem to be solved, 
>>and backed down. If you're a smart programmer, you'll show the other 
>>guy how to do it better. If you can't, he's smarter than you thought!
>
>I'll take that challenge...show me a piece of code that really needs a 
>goto, and I'll remove it (assuming you let me rewrite
>the whole darn thing if I need to).
>
I won't let you rewrite the spec, because I didn't write that. It 
contained two fairly convoluted flow charts, with a goto jumping across 
from one path into the other. Basically, an outer if/then/else, and 
then, at just one point half way down the if, under a certain condition 
it jumped across into the else.

I have no doubt you could refactor the code to remove the goto. But you 
would have quadrupled the size of the source, and destroyed any 
resemblance to the specification. And imho, clarity of the source and 
visible adherence to the client spec are much more important than 
"theoretical purity". Oh - and despite the goto, the spec was provably 
correct and the simplest definition of the client's problem.
>>
>> "Perfection is achieved, not when everything that is necessary has 
>>been added, but when everything that is unnecessary has been taken 
>>away".
>
>And so it is with C++ and Java.
>
>>
>>
>> I *know* I'm an expert in DATABASIC. I would *like* to *think* I'm a 
>>guru, but until somebody like Jim, or Rob, or Monty, tells me I am 
>>(and I probably wouldn't believe Monty), then I'm not! And even then, 
>>I wouldn't believe them unless other people I trusted agreed with them.
>>
>> Ask Loring what unnecessary stuff can be removed from Antlr. Ask Ter. 
>>Ask Jim. Ask Monty. Ask the people *YOU* *RESPECT* *AS* *EXPERTS* (or 
>>aren't there any such on this list? :-)
>
>Ask Bjourne what unnecessary stuff can be removed from C++. Now ask 
>Gosling. Often, the experts are the
>exact wrong people to ask.
>
I went on about "completeness". Yes I know Godel's theorem (well, sort 
of), but a lot of things may be like the top quark, or the Higgs Boson. 
As far as we know, they don't exist and we don't need them, but we need 
a place for them to exist or the theory is incomplete. The reason C++ is 
bigger than Java may be because the extra stuff is "needed" for 
completeness. I strongly suspect it is.

Programmers are very poor at seeing the "problem space". That's why so 
many programs crash when they hit an error. Those features you see as 
"superfluous" may well exist because Bjarne (spell his name right - it 
took me several attempts before I realised who you were talking about) 
mapped out the problem space, and there was a feature-shaped hole.

I've regularly come across "neat features" that someone wants to add to 
a tool, and my immediate reaction is "you don't understand the 
philosophy behind the tool. That feature doesn't exist because it 
doesn't belong!". I'm not saying those sort of features haven't made 
their way into C++ or Java. But it wouldn't surprise me if many features 
are there because they DO belong, even if they LOOK superfluous.

And Antlr looks to me as though Ter *has* thought things through, and it 
has the features it has precisely because they DO belong, whether they 
seem superfluous or not. And if they're not what you want, it's because 
you've picked the wrong tool for the job.
>>
>> I think you'll find everything in Antlr is there because it's needed. 
>>Like ASTs for example - I think they happen to be a perfect solution 
>>to my problem :-)
>>
>> I know Antlr doesn't do what you want. So stop trying to drive screws 
>>with a hammer, and go find yourself a screwdriver :-) Don't try and 
>>ban hammers :-)
>
>You do understand that I'm not trying to "disable" or "take away 
>features" from ANTLR, right?
>I think it's perfectly reasonable for someone to post his crazy dreams 
>for an "electric hammer" on
>a "Joe's hammer" forum. If you don't want to read it, then don't.
>
Then why go on about a possible future Antlr v4, that isn't "Antlr as we 
know it"?

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From abir.basak at read-ink.com  Thu Nov  2 21:19:54 2006
From: abir.basak at read-ink.com (abir)
Date: Fri, 03 Nov 2006 10:49:54 +0530
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <mailman.1799.1162481741.15912.antlr-interest@antlr.org>
References: <mailman.1799.1162481741.15912.antlr-interest@antlr.org>
Message-ID: <454AD17A.5050604@read-ink.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061103/1aae6ba7/attachment.html 

From sohail at taggedtype.net  Thu Nov  2 22:19:35 2006
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu, 02 Nov 2006 22:19:35 -0800
Subject: [antlr-interest] Java boolean type storage
In-Reply-To: <454A5DBD.3000300@jazillian.com>
References: <001101c6fd0b$0b7173d0$c704a8c0@hercules>
	<4548F943.7070906@jazillian.com>	<5ts8pRRamQSFFw6h@thewolery.demon.co.uk>
	<45496671.9010008@jazillian.com>	<qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<454A1879.6040802@jazillian.com>
	<C40CD76A-070A-4AC9-9DCA-E0BEBA0A43DE@classdump.org>
	<454A4B9B.9060503@jazillian.com>
	<11026A89-D21A-4B2E-BD5D-F6EC9FE87035@arachnedesign.net>
	<454A5DBD.3000300@jazillian.com>
Message-ID: <1162534775.6099.0.camel@localhost.localdomain>

On Thu, 2006-11-02 at 16:06 -0500, Andy Tripp wrote:
> Not likely :) As with older languages, better to let older threads that 
> have gone off track
> just fade away quietly :)

Sorry, C++ is not going to die.


From parrt at cs.usfca.edu  Thu Nov  2 22:25:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Nov 2006 22:25:07 -0800
Subject: [antlr-interest] no more java vs C++ vs the world please
Message-ID: <F7638957-D02A-4EB9-B0E8-A3834DDEBFE6@cs.usfca.edu>

thanks...back to parsing :)
Ter

From e.papegaaij at student.utwente.nl  Fri Nov  3 01:30:08 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri, 3 Nov 2006 10:30:08 +0100
Subject: [antlr-interest] Problem with lexer
In-Reply-To: <000001c6fec1$455c06c0$132f9283@mcilink.com>
References: <000001c6fec1$455c06c0$132f9283@mcilink.com>
Message-ID: <200611031030.08158.e.papegaaij@student.utwente.nl>

On Thursday 02 November 2006 21:55, Rick Morgan wrote:
> >I'm having a problem with the attached lexer (v3). When it is run with
> > the Test class, the NODE_SELECTION token is never matched, even though
> > the input contains a NODE_SELECTION. The problem is that the lexer
> > does not look past the WS? in NODE_SELECTION. It first matches
> > '#value'. Now it checks the LA and decides to take the (WS? '[]')
> > branch, even though there is no '[]'. I've tried adding syntactic
> > predicates and changing k, but to no avail. Am I doing something wrong
> > here?
> >
> >lexer grammar ActionMacroGenerate;
> >NODE_SELECTION
> >
> >	: '#' IDENTIFIER (WS? '[]')? {
> >
> >		System.out.println("MATCH: "+getText());
> >	}
> >	;
>
> I'm a total beginner at this stuff, but could I suggest that '[]' is not
> a valid lexer character? Maybe "[]" is needed. Others who know better
> would have to confirm or deny that.
>

This is ANTLR v3, which uses single quotes in the lexer, so '[]' should be 
ok.

Best regards,
Emond

From antlr at jazillian.com  Fri Nov  3 07:15:11 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 03 Nov 2006 10:15:11 -0500
Subject: [antlr-interest] ANTLR itself written using treewalkers?
In-Reply-To: <F7638957-D02A-4EB9-B0E8-A3834DDEBFE6@cs.usfca.edu>
References: <F7638957-D02A-4EB9-B0E8-A3834DDEBFE6@cs.usfca.edu>
Message-ID: <454B5CFF.7030202@jazillian.com>

Terence Parr wrote:

> thanks...back to parsing :)
> Ter

Whew! Too much of a good thing :)

Trying to grok the overall structure of ANTLR itself...my first question...

ANTLR2 itself doesn't seem to use a treewalker. Why not?

And is there any sort of description of the internal design of ANTLR 
itself,
or do I need to just start at Tool.java and drill down?

Andy


From r.morgan at verizonbusiness.com  Fri Nov  3 08:32:47 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Fri, 03 Nov 2006 09:32:47 -0700
Subject: [antlr-interest] Simple way to get the text that matched
In-Reply-To: <mailman.1.1162497602.3212.antlr-interest@antlr.org>
Message-ID: <002f01c6ff65$b56988d0$c28522a6@mcilink.com>

Thanks Bryan,

I'm looking into that now, found the headers and am hoping there's a basic
implementation somewhere I can use.  Still looking.

Rick

>Be aware that (for buildAST=true and C++) you must define a factory from
>which the AST nodes will be created.  See the C++ examples for details, and
>search for the identifier ASTFactory.

>Without a registered method for your AST node type, you will get a segv
>pretty quick.




From lgcraymer at yahoo.com  Fri Nov  3 10:18:08 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 3 Nov 2006 10:18:08 -0800 (PST)
Subject: [antlr-interest] ANTLR itself written using treewalkers?
In-Reply-To: <454B5CFF.7030202@jazillian.com>
Message-ID: <20061103181809.70581.qmail@web55902.mail.re3.yahoo.com>



--- Andy Tripp <antlr at jazillian.com> wrote:
> Trying to grok the overall structure of ANTLR
> itself...my first question...
> 
> ANTLR2 itself doesn't seem to use a treewalker. Why
> not?

Ter was in the midst of starting a company and did the
high-level design and some of the new feature
implementation for ANTLR 2; John Lilley did much of
the grunt work to translate antlr (parser generator)
and sorcerer (tree walker generator; late addition to
PCCTS) code from PCCTS to ANTLR 2.0.  There is a
heterogeneous tree internal to ANTLR 2 which is
converted to a graph, but that was done manually
rather than with a tree walker as a direct
transliteration of antlr internals.  [In other
words,the lack of tree walkers is not by design but by
an accident of historical necessity.]

ANTLR 3 uses tree walkers, although the 3.0 tree
grammars have some defects.  Rewriting ANTLR 3 in
ANTLR will help.

> 
> And is there any sort of description of the internal
> design of ANTLR 
> itself,
> or do I need to just start at Tool.java and drill
> down?

"Abandon hope all ye who enter here."  The internals
of ANTLR 2 are _messy_!

--Loring

> 
> Andy
> 
> 



 
____________________________________________________________________________________
Low, Low, Low Rates! Check out Yahoo! Messenger's cheap PC-to-Phone call rates 
(http://voice.yahoo.com)


From parrt at cs.usfca.edu  Fri Nov  3 14:53:10 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 3 Nov 2006 14:53:10 -0800
Subject: [antlr-interest] labels on chars
Message-ID: <3861DD36-09D3-4F7A-95A6-73FB646BAFC8@cs.usfca.edu>

Hi, in the lexer for v3 when you reference a char, should it be of  
type int or char?

R : a='c' {char foo = $a;} ;

Should $a be an int or char?  Char is more convenient and probably  
correct.  Any issues?  EOF perhaps?

Ter

From kroepke at classdump.org  Fri Nov  3 15:00:32 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 4 Nov 2006 00:00:32 +0100
Subject: [antlr-interest] labels on chars
In-Reply-To: <3861DD36-09D3-4F7A-95A6-73FB646BAFC8@cs.usfca.edu>
References: <3861DD36-09D3-4F7A-95A6-73FB646BAFC8@cs.usfca.edu>
Message-ID: <2124581C-21BC-4BAA-B0D4-14A696B4675B@classdump.org>


On 3. Nov 2006, at 23:53 , Terence Parr wrote:

> Hi, in the lexer for v3 when you reference a char, should it be of  
> type int or char?
>
> R : a='c' {char foo = $a;} ;
>
> Should $a be an int or char?  Char is more convenient and probably  
> correct.  Any issues?  EOF perhaps?

char is unsigned in java, isn't it? what happens if you get EOF (=  
-1)? Does it wrap around to 0xFFFF?
Having EOF==-1 bothered me in ObjC since I couldn't use enums to hold  
tokentypes because of the -1 :(
Other than that char should be ok, it covers the whole UTF-16 range,  
right?

-k

-- 
Kay R?pke <kroepke at classdump.org>
classdump Software
Key fingerprint = A849 0F2C C322 4022 379E  8661 7E1B FE0D 4CD2 A6D0




From parrt at cs.usfca.edu  Fri Nov  3 15:05:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 3 Nov 2006 15:05:17 -0800
Subject: [antlr-interest] labels on chars
In-Reply-To: <2124581C-21BC-4BAA-B0D4-14A696B4675B@classdump.org>
References: <3861DD36-09D3-4F7A-95A6-73FB646BAFC8@cs.usfca.edu>
	<2124581C-21BC-4BAA-B0D4-14A696B4675B@classdump.org>
Message-ID: <9F8535DD-EF95-4F5D-82EB-A3F3445B3A5B@cs.usfca.edu>


On Nov 3, 2006, at 3:00 PM, Kay Roepke wrote:

>
> On 3. Nov 2006, at 23:53 , Terence Parr wrote:
>
>> Hi, in the lexer for v3 when you reference a char, should it be of  
>> type int or char?
>>
>> R : a='c' {char foo = $a;} ;
>>
>> Should $a be an int or char?  Char is more convenient and probably  
>> correct.  Any issues?  EOF perhaps?
>
> char is unsigned in java, isn't it? what happens if you get EOF (=  
> -1)? Does it wrap around to 0xFFFF?
> Having EOF==-1 bothered me in ObjC since I couldn't use enums to  
> hold tokentypes because of the -1 :(
> Other than that char should be ok, it covers the whole UTF-16  
> range, right?

Yep, 16 bits.  -1 would go to 0xFFFF, an invalid UNICODE char I  
think.  Hmm...  Well, I'll leave as int for now and see if anyone  
complains. ;)

Ter

From prm225 at gmail.com  Fri Nov  3 16:26:00 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Fri, 03 Nov 2006 19:26:00 -0500
Subject: [antlr-interest] newbie question
Message-ID: <454BDE18.9010402@gmail.com>

Hi.
I'd like a suggestion on a rather simple exercise I'm trying.
I have a sample language of the form:

a = 4;
b = 3;
e = a;
c = b + e;
e = b WHEN a > 4 OR b < 5 AND c > 6 OR e != 3;

The user input above would go through 3 stages:
1. get transformed into something similar to:
(num (a 4))
(num (b 3))
(expr (e a))
(expr (c (+ b e)))
(expr (b (...)))

2. This output would be stored as XML on disk (for which I'll look at 
XMLTreeParser).
3. This stored XML could be read back in to produce the user input.


The CFG I've written produces the AST:
( = a 4 )
( = b 3 )
( = e a )
( = c ( + b e ) )
( = e b ( OR ( > a 4 ) ( AND ( < b 5 ) ( OR ( > c 6 ) ( != e 3 ) ) ) ) )

which is good.

My doubt is: to perform the conversion for stage 1, is it better to use 
a TreeParser and walk through each node, or actually write the code in 
for each production in the Parser? I'd personally like to do the former, 
but just want to make sure from someone with more experience. (I might 
not even be making much sense asking this question either ...)

Also, is it possible to reverse the process of creating the AST to get 
back the user input (stage 3 above.)

Thanks so much for your time and input.



From lgcraymer at yahoo.com  Fri Nov  3 17:02:07 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 3 Nov 2006 17:02:07 -0800 (PST)
Subject: [antlr-interest] newbie question
In-Reply-To: <454BDE18.9010402@gmail.com>
Message-ID: <20061104010207.75422.qmail@web55903.mail.re3.yahoo.com>

Rajesh--

Trees are very good for converting infix notation to
prefix notation as you are looking to do; there is a
treewalker example of this sort in the ANTLR 2
distribution.

Yes on your second question, although you will want an
XML parser to convert the XML tree into an AST and
then output "child root child" sequences in a tree
walker.

--Loring

--- Rajesh Menon <prm225 at gmail.com> wrote:

> Hi.
> I'd like a suggestion on a rather simple exercise
> I'm trying.
> I have a sample language of the form:
> 
> a = 4;
> b = 3;
> e = a;
> c = b + e;
> e = b WHEN a > 4 OR b < 5 AND c > 6 OR e != 3;
> 
> The user input above would go through 3 stages:
> 1. get transformed into something similar to:
> (num (a 4))
> (num (b 3))
> (expr (e a))
> (expr (c (+ b e)))
> (expr (b (...)))
> 
> 2. This output would be stored as XML on disk (for
> which I'll look at 
> XMLTreeParser).
> 3. This stored XML could be read back in to produce
> the user input.
> 
> 
> The CFG I've written produces the AST:
> ( = a 4 )
> ( = b 3 )
> ( = e a )
> ( = c ( + b e ) )
> ( = e b ( OR ( > a 4 ) ( AND ( < b 5 ) ( OR ( > c 6
> ) ( != e 3 ) ) ) ) )
> 
> which is good.
> 
> My doubt is: to perform the conversion for stage 1,
> is it better to use 
> a TreeParser and walk through each node, or actually
> write the code in 
> for each production in the Parser? I'd personally
> like to do the former, 
> but just want to make sure from someone with more
> experience. (I might 
> not even be making much sense asking this question
> either ...)
> 
> Also, is it possible to reverse the process of
> creating the AST to get 
> back the user input (stage 3 above.)
> 
> Thanks so much for your time and input.
> 
> 
> 



 
____________________________________________________________________________________
We have the perfect Group for you. Check out the handy changes to Yahoo! Groups 
(http://groups.yahoo.com)


From manunews at gmail.com  Sat Nov  4 03:14:09 2006
From: manunews at gmail.com (Manuel Abadia)
Date: Sat, 4 Nov 2006 12:14:09 +0100
Subject: [antlr-interest] ANTLR v3.04b - problems with the generated CSharp
	code
Message-ID: <96f4581f0611040314u4acbfc77m1b3aa1877f11b4d7@mail.gmail.com>

Hi,

I have tried the lastest v3 version and the generated CSharp code has
some minor problems:
VS2005 reports that the generated files don't have consistent line endings.
Also, the following warings appear:

warning CS0114: 'CSharpTest.GrammarFileName' hides inherited member
'Antlr.Runtime.BaseRecognizer.GrammarFileName'. To make the current
member override that implementation, add the override keyword.
Otherwise add the new keyword.

warning CS0114: 'CSharpTestLexer.GrammarFileName' hides inherited
member 'Antlr.Runtime.BaseRecognizer.GrammarFileName'. To make the
current member override that implementation, add the override keyword.
Otherwise add the new keyword.

If I call antlr with the -debug option some additional errors appear:

error CS0246: The type or namespace name 'DebugEventListener' could
not be found (are you missing a using directive or an assembly
reference?)
error CS0246: The type or namespace name 'TreeAdaptor' could not be
found (are you missing a using directive or an assembly reference?)

I have search for those types and only found IDebugEventListener and
ITreeAdaptor so maybe that's the fix.

Finally I want to know how can I debug a CSharp generated grammar with
ANTLRWorks. It seems that I have to use Debug remote but I don't know
how to start my csharp grammar. Can somebody help me?

Thanks,
Manu

From dieter_frej at gmx.net  Sat Nov  4 12:07:33 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Sat, 04 Nov 2006 21:07:33 +0100
Subject: [antlr-interest] v3: ASTFrame equivalent for ParseTree
Message-ID: <454CF305.7050201@gmx.net>

Hi everybody,

I created a PTFrame which can be used as the old ASTFrame, just that it
is for the ParseTree. What I did was basically to extract the needed
functionality from antlrworks and make it programmatically accessable.

The two attached file have only dependencies on antlr.jar, antlr3.jar
and antlrwork.jar (but that is only because I was to lazy and I use
their EditorInterpreterTreeModel and AWTreePanel classes for
visualization).

Have a nice weekend!

- Didi



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: FileGrammar.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20061104/8dff4041/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: PTFrame.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20061104/8dff4041/attachment-0001.pl 

From hugo.a.garcia at gmail.com  Sun Nov  5 12:12:56 2006
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Sun, 5 Nov 2006 15:12:56 -0500
Subject: [antlr-interest] ANTLRWorks Interpreter problem? Linux
Message-ID: <f9637ada0611051212j56f24775x15530cddef149fbb@mail.gmail.com>

hi

using v3 of antlr and antlrWorks in Linux. I am using the java grammar
v3 in the the examples. I created a simple java class definition and
pasted it into the interpreter (after generating the parser/lexer form
antlrWorks). When I click on the > button with 'compilationUnit' in
the dropdown then I get a 'FailedPredicateException(compilationUnit,
{synpred4}?)' error in the resulting parse tree zone pane. Curiously,
if I run the debugger witht the same java class as input then I can
see the tree being built.

What am I doing wrong?

thanks

-H

From parrt at cs.usfca.edu  Sun Nov  5 14:51:36 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 5 Nov 2006 14:51:36 -0800
Subject: [antlr-interest] ANTLRWorks Interpreter problem? Linux
In-Reply-To: <f9637ada0611051212j56f24775x15530cddef149fbb@mail.gmail.com>
References: <f9637ada0611051212j56f24775x15530cddef149fbb@mail.gmail.com>
Message-ID: <E9FBCEC0-E19B-4ED1-A4D3-D617C6B02B82@cs.usfca.edu>

interpreter doesn't work yet for syntactic predicates...sorry.
Ter
On Nov 5, 2006, at 12:12 PM, Hugo Garcia wrote:

> hi
>
> using v3 of antlr and antlrWorks in Linux. I am using the java grammar
> v3 in the the examples. I created a simple java class definition and
> pasted it into the interpreter (after generating the parser/lexer form
> antlrWorks). When I click on the > button with 'compilationUnit' in
> the dropdown then I get a 'FailedPredicateException(compilationUnit,
> {synpred4}?)' error in the resulting parse tree zone pane. Curiously,
> if I run the debugger witht the same java class as input then I can
> see the tree being built.
>
> What am I doing wrong?
>
> thanks
>
> -H


From hugo.a.garcia at gmail.com  Sun Nov  5 15:23:46 2006
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Sun, 5 Nov 2006 18:23:46 -0500
Subject: [antlr-interest] ANTLRWorks Interpreter problem? Linux
In-Reply-To: <E9FBCEC0-E19B-4ED1-A4D3-D617C6B02B82@cs.usfca.edu>
References: <f9637ada0611051212j56f24775x15530cddef149fbb@mail.gmail.com>
	<E9FBCEC0-E19B-4ED1-A4D3-D617C6B02B82@cs.usfca.edu>
Message-ID: <f9637ada0611051523k13763302lab8f4e9a901d6225@mail.gmail.com>

ok

found that you are working on that part.

http://www.antlr.org/wiki/display/ANTLR3/interpreter+cannot+handle+syntactic+predicates

In the mean time, I guess I can work in debugger mode to see the parse
tree... just to verify that things are working.

thanks

-H

On 11/5/06, Terence Parr <parrt at cs.usfca.edu> wrote:
> interpreter doesn't work yet for syntactic predicates...sorry.
> Ter
> On Nov 5, 2006, at 12:12 PM, Hugo Garcia wrote:
>
> > hi
> >
> > using v3 of antlr and antlrWorks in Linux. I am using the java grammar
> > v3 in the the examples. I created a simple java class definition and
> > pasted it into the interpreter (after generating the parser/lexer form
> > antlrWorks). When I click on the > button with 'compilationUnit' in
> > the dropdown then I get a 'FailedPredicateException(compilationUnit,
> > {synpred4}?)' error in the resulting parse tree zone pane. Curiously,
> > if I run the debugger witht the same java class as input then I can
> > see the tree being built.
> >
> > What am I doing wrong?
> >
> > thanks
> >
> > -H
>
>

From porcelli at uol.com.br  Sun Nov  5 16:25:41 2006
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Sun, 5 Nov 2006 21:25:41 -0300
Subject: [antlr-interest] Failed predicate problem [v3]
Message-ID: <ee873c070611051625g25755313hc94259316683f235@mail.gmail.com>

Hi People,

  I'm getting problems with semantic predicate. I constructed the folowing :

pictureClause
	:	PIC PIC_VALUE
	;

PIC_VALUE
	:{ultPic}? ('+'|'-'|'$'|'A'|'B'|','|'E'|('0'..'9')|'X'|'S'|'V'|'Z'|'*'|'('|')'|
{ input.LA(2) != ' ' && input.LA(2) != '\n' && input.LA(2) != '\r' }?
'.')+
	{
		ultPic = false;
	}
	;

PIC	:	'PIC' 'TURE'?
{
ultPic = true;
}
	;

  It works almost time, but when I have a situation that should escape
(by semantic predicate) I got an failed predicate error:

mTokens, mPIC_VALUE]: line 6:53 rule PIC_VALUE failed predicate: {
input.LA(2) != ' ' && input.LA(2) != '\n' && input.LA(2) != '\r' }?

  I appreciate any help - I?m getting this problem and I can?t advance
in my job :(

ps: Attached the sample grammar and a text that generates the problem.


Thanks in Advance,
Alexandre Porcelli
-------------- next part --------------
       DATA DIVISION.
       WORKING-STORAGE SECTION.

       01  WH-VRSOMPRO1                PIC S9(008)V99 COMP-3.
       01  WH-VRSOMPRO2                PIC S9(008)V99.
       01  WH-VRSOMPRO3                PIC S9(008)V99 .

       PROCEDURE DIVISION.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Cobol.g
Type: application/octet-stream
Size: 4390 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061105/3461dfee/attachment.obj 

From rhill03 at EDS.com  Mon Nov  6 02:40:49 2006
From: rhill03 at EDS.com (Hill, Robert)
Date: Mon, 6 Nov 2006 10:40:49 -0000
Subject: [antlr-interest] Predicate Question...
Message-ID: <2E909902FD3A03419E3A905908AE3DD4028D5540@UKNSM201.emea.corp.eds.com>

Does it make sense to have predicates in tree parsers in V3? If the
predicate is skipped, the failedPredException is thrown, and the parsing
following the exception gets out of sync.

Does the rule you're skipping have to be a root token?

I think I'm misunderstanding the usage here.
Does anyone have any pointers to any (simple!) examples ?

Cheers!

Rob

Robert Hill
Information Engineer
E	UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,
Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061106/29f409a5/attachment.html 

From parrt at cs.usfca.edu  Mon Nov  6 09:13:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Nov 2006 09:13:19 -0800
Subject: [antlr-interest] Failed predicate problem [v3]
In-Reply-To: <ee873c070611051625g25755313hc94259316683f235@mail.gmail.com>
References: <ee873c070611051625g25755313hc94259316683f235@mail.gmail.com>
Message-ID: <3442F9C8-D859-45DA-88DA-23F3D6BB6DAC@cs.usfca.edu>

Perhaps try {...}?=> not just {...}?, which says to gate the rule out  
when ultPic is false versus just use sem pred when necessary syntax- 
wise.
Ter
On Nov 5, 2006, at 4:25 PM, Alexandre Porcelli wrote:

> Hi People,
>
>  I'm getting problems with semantic predicate. I constructed the  
> folowing :
>
> pictureClause
> 	:	PIC PIC_VALUE
> 	;
>
> PIC_VALUE
> 	:{ultPic}? ('+'|'-'|'$'|'A'|'B'|','|'E'| 
> ('0'..'9')|'X'|'S'|'V'|'Z'|'*'|'('|')'|
> { input.LA(2) != ' ' && input.LA(2) != '\n' && input.LA(2) != '\r' }?
> '.')+
> 	{
> 		ultPic = false;
> 	}
> 	;
>
> PIC	:	'PIC' 'TURE'?
> {
> ultPic = true;
> }
> 	;
>
>  It works almost time, but when I have a situation that should escape
> (by semantic predicate) I got an failed predicate error:
>
> mTokens, mPIC_VALUE]: line 6:53 rule PIC_VALUE failed predicate: {
> input.LA(2) != ' ' && input.LA(2) != '\n' && input.LA(2) != '\r' }?
>
>  I appreciate any help - I?m getting this problem and I can?t advance
> in my job :(
>
> ps: Attached the sample grammar and a text that generates the problem.
>
>
> Thanks in Advance,
> Alexandre Porcelli
> <sample.txt>
> <Cobol.g>


From parrt at cs.usfca.edu  Mon Nov  6 09:14:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Nov 2006 09:14:02 -0800
Subject: [antlr-interest] Predicate Question...
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD4028D5540@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD4028D5540@UKNSM201.emea.corp.eds.com>
Message-ID: <A0DEFA9A-CEE7-4C5E-8751-B33202A2AFCF@cs.usfca.edu>


On Nov 6, 2006, at 2:40 AM, Hill, Robert wrote:

> Does it make sense to have predicates in tree parsers in V3?

Possible, but trees should be designed so they are unnecessary.  The  
tree grammar should be trivial...no need for preds.
Ter
> If the predicate is skipped, the failedPredException is thrown, and  
> the parsing following the exception gets out of sync.
>
> Does the rule you're skipping have to be a root token?
>
> I think I'm misunderstanding the usage here.
> Does anyone have any pointers to any (simple!) examples ?
>
> Cheers!
>
> Rob
>
> Robert Hill
> Information Engineer
> E       UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,  
> Sheffield. S11 8HD
> email:  rhill03 at eds.com
> Office: +44 114 291 1928
> Mobile: +44 7903 185 516
>
>


From porcelli at uol.com.br  Mon Nov  6 10:25:41 2006
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 6 Nov 2006 15:25:41 -0300
Subject: [antlr-interest] Failed predicate problem [v3]
Message-ID: <ee873c070611061025i2bc16263s96f39581827e6799@mail.gmail.com>

Hi Terrance,

  It was my first try, but I got the folowing error:

java.lang.NullPointerException
	at org.antlr.analysis.NFAToDFAConverter.convertToAcceptState(NFAToDFAConverter.java:989)
	at org.antlr.analysis.NFAToDFAConverter.addDFAStateToWorkList(NFAToDFAConverter.java:953)
	at org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransitions(NFAToDFAConverter.java:291)
	at org.antlr.analysis.NFAToDFAConverter.convert(NFAToDFAConverter.java:101)
	at org.antlr.analysis.DFA.<init>(DFA.java:214)
	at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:763)
	at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:711)
	at org.antlr.works.grammar.EngineGrammar.analyze(EngineGrammar.java:284)
	at org.antlr.works.debugger.local.DBLocal.analyzeGrammar(DBLocal.java:301)
	at org.antlr.works.debugger.local.DBLocal.generateAndCompileGrammar(DBLocal.java:281)
	at org.antlr.works.debugger.local.DBLocal.run(DBLocal.java:170)
	at java.lang.Thread.run(Unknown Source)

Best Regards,
Alexandre Porcelli

From parrt at cs.usfca.edu  Mon Nov  6 10:35:10 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Nov 2006 10:35:10 -0800
Subject: [antlr-interest] Failed predicate problem [v3]
In-Reply-To: <ee873c070611061025i2bc16263s96f39581827e6799@mail.gmail.com>
References: <ee873c070611061025i2bc16263s96f39581827e6799@mail.gmail.com>
Message-ID: <CC8FA675-7077-4CF5-AB86-87927D9AB00F@cs.usfca.edu>

Yikes.  Can you try the latest build from the repository browser:

http://fisheye2.cenqua.com/browse/antlr

  if it still fails, can you send me the grammar?

  we are about to release 3.0b5, by the way.

Thanks!
Ter
On Nov 6, 2006, at 10:25 AM, Alexandre Porcelli wrote:

> Hi Terrance,
>
>  It was my first try, but I got the folowing error:
>
> java.lang.NullPointerException
> 	at org.antlr.analysis.NFAToDFAConverter.convertToAcceptState 
> (NFAToDFAConverter.java:989)
> 	at org.antlr.analysis.NFAToDFAConverter.addDFAStateToWorkList 
> (NFAToDFAConverter.java:953)
> 	at  
> org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransiti 
> ons(NFAToDFAConverter.java:291)
> 	at org.antlr.analysis.NFAToDFAConverter.convert 
> (NFAToDFAConverter.java:101)
> 	at org.antlr.analysis.DFA.<init>(DFA.java:214)
> 	at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:763)
> 	at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:711)
> 	at org.antlr.works.grammar.EngineGrammar.analyze 
> (EngineGrammar.java:284)
> 	at org.antlr.works.debugger.local.DBLocal.analyzeGrammar 
> (DBLocal.java:301)
> 	at org.antlr.works.debugger.local.DBLocal.generateAndCompileGrammar 
> (DBLocal.java:281)
> 	at org.antlr.works.debugger.local.DBLocal.run(DBLocal.java:170)
> 	at java.lang.Thread.run(Unknown Source)
>
> Best Regards,
> Alexandre Porcelli


From manunews at gmail.com  Mon Nov  6 10:36:59 2006
From: manunews at gmail.com (Manu)
Date: Mon, 6 Nov 2006 19:36:59 +0100
Subject: [antlr-interest] ANTLR3 question
Message-ID: <96f4581f0611061036q34c177cft42dc90e4b69e1d78@mail.gmail.com>

Hi,

I'm working with the latests ANTLR release and with this rules:

attribute_arguments: LEFT_BRACKET (positional_argument_list? |
(positional_argument_list COMMA named_argument_list) |
named_argument_list) RIGHT_BRACKET;

positional_argument_list: (positional_argument) (COMMA positional_argument)*;

positional_argument: attribute_argument_expression;

named_argument_list: (named_argument) (COMMA named_argument)*;

named_argument: identifier EQUALS attribute_argument_expression;

attribute_argument_expression: expression;

expression
	:	literal
	;

literal
	:	TRUE | FALSE
	| 	INTEGER_LITERAL
	| 	REAL_LITERAL
	|	CHARACTER_LITERAL
	|	STRING_LITERAL
	|	NULL
	;

I get the following message:

Decision can match input such as "<EPSILON>" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

for the rule: attribute_arguments

I assume that ANTLR reports multiple alternates for the rule because
internally it works with the unfactored rule like this:

attribute_arguments
	:	LEFT_BRACKET positional_argument_list? RIGHT_BRACKET
	|	LEFT_BRACKET positional_argument_list COMMA named_argument_list RIGHT_BRACKET
	|	LEFT_BRACKET named_argument_list RIGHT_BRACKET
	;

So that's why it reports two alternates, right?

Anyway, from the first alternate, <EPSILON> can be obtained because
the positional_argument_list is optional, but I don't see how
<EPSILON> can be obtained in the second one. Am I missing something or
is it a bug?

This happens with options k=4;

I'm a newbie in ANTLR so I'd appreciate help.

Thanks a lot,
Manu

From jimi at intersystems.com  Mon Nov  6 11:16:51 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 6 Nov 2006 14:16:51 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <45497381.2020107@jazillian.com>
Message-ID: <20061106191652.4454E178E@mail.intersystems.com>

To address your points:

* It is great to be able to re-use and existing grammar and more power to the elbow's of those who donate them :-). However if you are going to use an ANTLR grammar, I honestly can think of no valid reason to avoid learning how ANTLR works in as much detail as you can. This applies to anything really. You can write much better Java code if you understand the effects of your code upon the runtime;
* As you seem to have surmised, counting things is not generally done in the syntax parsing unless there is some reason that it is easier there or there is no need for anything but a single syntactical parse. In general, counting things would be done for semantic verification or code generation or something akin to these and you would do it in the tree parser. However, the code for counting things is small anyway and specific to the task at hand and therefore will be more efficient. The more computing time you can save on things like this, the more time you have to spend on optimization and so on.
* Size of C grammar eh? I assure you that the C grammar is relatively simple compared to many. But I have not found a larger grammar to create any more problems than a smaller grammar. Problems with grammars are usually engendered by how well the original 'language' you are trying to parse was structured. C++ is a more difficult parsing prospect. I guess I just don't find embedding actions awkward, but then I don't tend to put all the code for the action right inline if it is more complex than a small number of lines.
* There are other projects than ones with impossible deadlines? :-)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp


Jim Idle wrote:

>To be honest it is this sort of question (and the answer) that we need to have in the book. The problem is that I would not have thought of this question in a million years (and that is no slight on Andy at all).
>
>  
>
I assume you mean here that you would have just gone ahead and plugged 
in the "calculate n" code at the appropriate place in your grammar.

It might help to see my perspective if you realize:
* I didn't write the grammar. I use Monty's C grammar, and so I've 
avoided learning much about ANTLR.

* I'm now in beta trial on a COBOL-to-Java translator and a C++-to-Java 
translator. I bet I wrote the whole
   COBOL-to-Java translator in less time than those couple of poor souls 
who are trying to create an ANTLR COBOL grammar.
* I'll almost certainly need to "calculate n" at other places in the 
tree sooner or later. It makes no sense at all to me to put "calculate 
n" code
  at one place in the grammar, and then keep having to repeat that. Even 
an AST lets me avoid that (with some kind of
  getChildCount()).
* If you haven't worked with a grammar the size of the C grammar, you 
probably don't have a feel for how awkward embedding
  actions is. And the C++ and COBOL (if ever finished) are even larger.
* Nothing makes you really want to avoid learning ANTLR (or anything 
else new)
   like a large and impossible project with an unreasonable deadline. :)

Andy

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.13.28/518 - Release Date: 11/4/2006 5:30 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.13.28/518 - Release Date: 11/4/2006 5:30 PM
 

From jimi at intersystems.com  Mon Nov  6 12:05:59 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 6 Nov 2006 15:05:59 -0500
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
Message-ID: <20061106200601.0B5989C2@mail.intersystems.com>

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Anthony W. Youngman
Sent: Thursday, November 02, 2006 1:22 AM


> And I've also used a version of DATABASIC where some bright spark 
> rewrote the system primitives in C. Blech!!!! the number of times I've 
> seen people scream because they got bitten by subtle bugs ...


As it seems somewhat likely that you are in fact talking at least in part about my own work, I feel somewhat qualified to comment:

While understanding the point you were making, and generally agreeing, the particular system that incorporated this form of DATABASIC does not allow us to use it as good example of it, at least to my mind. In the main because the subtle bugs you talk about were usually there because of some defect in the original systems ;-).

1) I haven?t seen anyone get caught by 'subtle' bugs, just plain stupid ones like all systems ;-)
2) The early versions of these rewrites in C were buggy, but it was more to do with them following the original way of doing things - hack it together and stick it out there.
3) I believe that the particular version of this system that I came up with was very much better from a bug point of view than any of the original systems or the earlier C versions, however there were many cases where the bugs were actually subtle bugs in the original hardware based systems that we had to choose to either emulate or ignore (document). 


> Come to think of it, how many people get bitten by subtle bugs in Java 
> because they don't understand that, underneath, it's written in C++? As 
> someone said, not many, because it's been well tested, but that's still 
> a few too many ...

It isn?t so much the bugs as it is causing greatly more work to be done for a task by not understanding how poorly the application has been put together as far as the machine is concerned.

> Assembler is written in assembler, pretty much without exception. 

Well, it depends what you mean. Assemblers have been written in higher level languages than assembler for quite some time :-). 

> C is written in C, pretty much without exception.
>
Much of the C runtime is of course C, but specific elements, such as functions like memchr() are very often writing in assembler. There is quite often some bootstrapping goes on of course.

> The reason for demanding that a great tool be written in itself is 
> exemplified by my databasic example above - the primitives for the 
> version I initially used were written in machine code, and followed the 
> spec. The C rewrite introduced loads of subtle bugs, because the 
> characteristics of the C environment were different. How much of Java 
> DEPENDS on the lowest layer? How much knowledge do you need to 
> understand that layer?

1) There was no spec for DATABASIC, it just happened, not quite by accident, but almost. The subtle bugs were in general not a function of the demands of the new environment, but the old one.
2) When these systems were re-written in C, there were of course new bugs but also a lot of improvements. In the version I am blamed for, a lot of the system other than the low level elements was in fact written using DATABASIC, translated to C logic, compiled to call the system primitives (written in C) from machine code. A lot of what you might call subtle bugs were actually behavioral issues in the original implementations that people got to rely on. The original systems were in fact just not that great technically but were a great idea.
3) The original systems (widely used ones that are now generally thought of as the original systems) used a micro-coded processor with a specific and (especially for the time) well thought out data area and instruction set to deal with it. The assembler code was converted into an instruction code set, interpreted by the microcode, databasic runtime was implemented in this virtual assembler, as was the interpreter for the byte code and the BASIC compiler itself. This stuff was re-implemented quite a few times and each time we discovered that there were subtle bugs in the original system that were not brought forward. That isn?t to say that there were no new bugs (just not in my code =;-) ), but the subtle ones, so to speak, were almost always caused by failing to emulate subtle bugs in the ORIGINAL system. The C re-writes merely had the same issues to deal with, though some were done better than others and it helped if you knew the originals intimately of course :-).
4) I seemed to be doomed to re-write yet another version of this system (in fact it is nearly finished) and once again the same thing applies of course. 


> I *know* I'm an expert in DATABASIC. I would *like* to *think* I'm a 
> guru, but until somebody like Jim, or Rob, or Monty, tells me I am (and 
> I probably wouldn't believe Monty), then I'm not! And even then, I 
> wouldn't believe them unless other people I trusted agreed with them.


I am sure that anyone who is wise would not trust me, but if anybody would like to experiment, with say a few million dollars... ;-)

Jim


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.13.28/518 - Release Date: 11/4/2006 5:30 PM
 

From porcelli at uol.com.br  Mon Nov  6 12:38:56 2006
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 6 Nov 2006 17:38:56 -0300
Subject: [antlr-interest] Failed predicate problem [v3]
Message-ID: <ee873c070611061238i4ed78118if34fe5324c30f99e@mail.gmail.com>

The FishEye seens to be corrupted or something like this, I got this
message when I try to open any file:

Exception getting annotation blame: java.io.IOException:
create_process: Cannot allocate memory

And the zip, tgz and tbz2 are corrupted too.

I apreciate, if you can send to me the latest build.

Best Regards,
Alexandre Porcelli

From rob.hill at blueyonder.co.uk  Mon Nov  6 12:46:08 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Mon, 6 Nov 2006 20:46:08 -0000
Subject: [antlr-interest] Predicate Question...
In-Reply-To: <A0DEFA9A-CEE7-4C5E-8751-B33202A2AFCF@cs.usfca.edu>
Message-ID: <20061106204612.257AA190773@www.antlr.org>

Thought so, I think I made a *huge* mistake when I first embarked on this
task, and that was that my first pass on the input, also spits out a tree
for the WHOLE grammar, which I then use on subsequent passes. Now I've been
though the wringer, there's a whole bunch of stuff I'd do differently. - wow
that feeling of 20/20 hindsight ;)
I now have loads of cases where I'd like to skip branches (like to remove
declarations of unused variables or events etc) but its too late, and the
whole thing is just a bit too close to the deadline I have, to change it all
round :(

One thing I have found though, even though it was a huge mistake to output a
tree so early, 95% of all my problems would be solved with the ability to
prune branches as I go.

Still, its been a great learning exercise, and I've learnt so much! I don't
think I'll be making those mistakes again.

I'd like to see a full tutorial that shows how to avoid some of the pitfalls
and why you'd want to proceed in a certain way,(hopefully your book will
contain some stuff for Antlr Dummies.. - hey there's a book title in there
somewhere LOL ;)
maybe if I get time I'll put a simple one together for the wiki, a "how not
to do it" article :) , as I said, its been an amazing learning experience,
and your help as well as those active on the list has been totally
invaluable.

Thanks guys!

Rob



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 06 November 2006 17:14
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Predicate Question...
> 
> 
> On Nov 6, 2006, at 2:40 AM, Hill, Robert wrote:
> 
> > Does it make sense to have predicates in tree parsers in V3?
> 
> Possible, but trees should be designed so they are unnecessary.  The
> tree grammar should be trivial...no need for preds.
> Ter
> > If the predicate is skipped, the failedPredException is thrown, and
> > the parsing following the exception gets out of sync.
> >
> > Does the rule you're skipping have to be a root token?
> >
> > I think I'm misunderstanding the usage here.
> > Does anyone have any pointers to any (simple!) examples ?
> >
> > Cheers!
> >
> > Rob
> >
> > Robert Hill
> > Information Engineer
> > E       UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St,
> > Sheffield. S11 8HD
> > email:  rhill03 at eds.com
> > Office: +44 114 291 1928
> > Mobile: +44 7903 185 516
> >
> >




From jbb at acm.org  Mon Nov  6 13:11:59 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon, 06 Nov 2006 16:11:59 -0500
Subject: [antlr-interest] ANTLR3 question
In-Reply-To: <96f4581f0611061036q34c177cft42dc90e4b69e1d78@mail.gmail.com>
	(message from Manu on Mon, 06 Nov 2006 19:36:59 +0100)
References: <96f4581f0611061036q34c177cft42dc90e4b69e1d78@mail.gmail.com>
Message-ID: <E1GhBl9-0001KM-00@gecko>

Greetings!

>I'm working with the latests ANTLR release and with this rules:
...snipped...

This version of your grammar works just fine for me (v3 3.0b4):

//----begin
grammar t;
options { output=AST; ASTLabelType=MyAST; }

startRule : attribute_arguments EOF;

attribute_arguments: '{' (positional_argument_list? |
(positional_argument_list ',' named_argument_list) |
named_argument_list) '}';

positional_argument_list: (positional_argument) (',' positional_argument)*;

positional_argument: attribute_argument_expression;

named_argument_list: (named_argument) (',' named_argument)*;

named_argument: identifier '=' attribute_argument_expression;

attribute_argument_expression: expression;

expression
        :       literal
        ;

literal
        :       'true' | 'false'
        |       INTEGER_LITERAL
        |       REAL_LITERAL
        |       'character'
        |       'string'
        |       'null'
        ;

identifier : IDENTIFIER ;

IDENTIFIER : ('a'..'z')+ ;
INTEGER_LITERAL : UINT ;
REAL_LITERAL : (UINT '.' UINT?) | ('.' UINT) ;

fragment UINT : ('0'..'9')+ ;

// Whitespace -- ignored
WS : ( ' ' | '\t' | '\f' | '\r' | '\n' )+ { channel=99; };

// single-line comments
SL_COMMENT :
        '//'
        ( options { greedy=false; } : . )*
        ( '\r' | '\r\n' | '\n' )
        { channel=99; }
    ;

// multiple-line comments
ML_COMMENT :
        '/*'
        ( options {greedy=false;} : . )*
        '*/'
        { channel=99; }
        ;
//----end

I suspect that maybe you were alittle too agressive in trying to trim the
problem for posting... (or I got my grammar wrong ;-)

I suspect that your bigger grammar has expressions that involve an
identifier. If so, this probably would lead to an ambiguity on the COMMA the
separates the positional_argument_list from the named_argument_list, altho k=4
should probably be big enuf to take care of that.

Hope this helps... but probably not ;-(    maybe post another example?
   -jbb

From ren_c_tan at yahoo.com  Mon Nov  6 21:23:02 2006
From: ren_c_tan at yahoo.com (Randolph Tan)
Date: Tue, 7 Nov 2006 05:23:02 +0000 (GMT)
Subject: [antlr-interest] Installing ANTLR
Message-ID: <20061107052302.96495.qmail@web56112.mail.re3.yahoo.com>

Greetings!
   
  I would like to ask a simple question. I know this may sound stupid but I'm really stucked.
   
   
  I am following the intructions on the install.txt of ANTLR 2.7.6 and got this message after I typed "make install"
   
  make: *** No rule to make target 'install'. Stop.
   
  Btw, I am using WinXp so I used MinGW. I also tried using CygWin, but it doesn't have the make utility installed by default - I don't know how to get it.
   
  I don't quite understand why it won't work since I saw install inside the makefile. Then, I noticed that the file inside the antlr-2.7.6 is Makefile.in so I tried renaming it to Makefile and executed "make install". Then I got this message instead:
   
  Makefile 6: *** Mising separator. Stop.
   
   
  Thanks!

 Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061107/d2a3f1b9/attachment.html 

From lgcraymer at yahoo.com  Mon Nov  6 23:12:54 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 6 Nov 2006 23:12:54 -0800 (PST)
Subject: [antlr-interest] Predicate Question...
In-Reply-To: <20061106204612.257AA190773@www.antlr.org>
Message-ID: <20061107071254.26466.qmail@web55905.mail.re3.yahoo.com>

Rob--

For v2, syntactic predicates in tree grammars are
common--or rather, most large grammars seem to have
one and sometimes two--just because getting to k=1 was
not easy.  v3 should do better.

Outputting a full tree is not a mistake--unless you
are building tree grammars by hand.  Tree grammars
should be built automatically--they are determined by
the annotated input (parser or tree walker)
grammar--and then refactored.  I have also found that
skipping over branches is much less attractive with
automatic tree grammar generation.

--Loring


--- Robert Hill <rob.hill at blueyonder.co.uk> wrote:

> Thought so, I think I made a *huge* mistake when I
> first embarked on this
> task, and that was that my first pass on the input,
> also spits out a tree
> for the WHOLE grammar, which I then use on
> subsequent passes. Now I've been
> though the wringer, there's a whole bunch of stuff
> I'd do differently. - wow
> that feeling of 20/20 hindsight ;)
> I now have loads of cases where I'd like to skip
> branches (like to remove
> declarations of unused variables or events etc) but
> its too late, and the
> whole thing is just a bit too close to the deadline
> I have, to change it all
> round :(
> 
> One thing I have found though, even though it was a
> huge mistake to output a
> tree so early, 95% of all my problems would be
> solved with the ability to
> prune branches as I go.
> 
> Still, its been a great learning exercise, and I've
> learnt so much! I don't
> think I'll be making those mistakes again.
> 
> I'd like to see a full tutorial that shows how to
> avoid some of the pitfalls
> and why you'd want to proceed in a certain
> way,(hopefully your book will
> contain some stuff for Antlr Dummies.. - hey there's
> a book title in there
> somewhere LOL ;)
> maybe if I get time I'll put a simple one together
> for the wiki, a "how not
> to do it" article :) , as I said, its been an
> amazing learning experience,
> and your help as well as those active on the list
> has been totally
> invaluable.
> 
> Thanks guys!
> 
> Rob
> 
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Terence Parr
> > Sent: 06 November 2006 17:14
> > To: ANTLR Interest
> > Subject: Re: [antlr-interest] Predicate
> Question...
> > 
> > 
> > On Nov 6, 2006, at 2:40 AM, Hill, Robert wrote:
> > 
> > > Does it make sense to have predicates in tree
> parsers in V3?
> > 
> > Possible, but trees should be designed so they are
> unnecessary.  The
> > tree grammar should be trivial...no need for
> preds.
> > Ter
> > > If the predicate is skipped, the
> failedPredException is thrown, and
> > > the parsing following the exception gets out of
> sync.
> > >
> > > Does the rule you're skipping have to be a root
> token?
> > >
> > > I think I'm misunderstanding the usage here.
> > > Does anyone have any pointers to any (simple!)
> examples ?
> > >
> > > Cheers!
> > >
> > > Rob
> > >
> > > Robert Hill
> > > Information Engineer
> > > E       UKIMEA DWP ACU, Hallamshire Business
> Park, 100 Napier St,
> > > Sheffield. S11 8HD
> > > email:  rhill03 at eds.com
> > > Office: +44 114 291 1928
> > > Mobile: +44 7903 185 516
> > >
> > >
> 
> 
> 
> 




 
____________________________________________________________________________________
Sponsored Link

Get a free Motorola Razr! Today Only! 
Choose Cingular, Sprint, Verizon, Alltel, or T-Mobile. 
http://www.letstalk.com/inlink.htm?to=592913

From rhill03 at eds.com  Mon Nov  6 23:36:29 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Tue, 7 Nov 2006 07:36:29 -0000
Subject: [antlr-interest] Predicate Question...
In-Reply-To: <20061107071254.26466.qmail@web55905.mail.re3.yahoo.com>
Message-ID: <2E909902FD3A03419E3A905908AE3DD4028D578D@UKNSM201.emea.corp.eds.com>

Cheers Loring.


>For v2, syntactic predicates in tree grammars are common--or 
>rather, most large grammars seem to have one and sometimes 
>two--just because getting to k=1 was not easy.  v3 should do better.

ISTR using them in V2 but since I'd only ever done small things I didn't
really think how all this stuff would scale up to something larger.
Writing an 'if' statement to skip some logic is fine when you have a
single grammar, but I now make 7 passes over the same tree, if I have a
branch to skip in on I have to duplicate the code 7 times, it's a bit of
a maintainence headache!, still, I've learned some new tricks along the
way so its not wasted experience.

>Outputting a full tree is not a mistake--unless you are 
>building tree grammars by hand.  Tree grammars should be built 
>automatically--they are determined by the annotated input 
>(parser or tree walker) grammar--and then refactored.  I have 
>also found that skipping over branches is much less attractive 
>with automatic tree grammar generation.

I see the immense value in generating the tree, and also having a
grammar that matches to walk it too. I think that's a fantastic way of
looking at the tree's description and seeing exactly where to add code
as we come across each node. Pretty cool. My issue was I failed to
annotate the parser to build the correct tree in the first place. It
just blindly outputs everything from the first grammar - literally there
are no actions in the first grammer! Then from that point on I work with
tree parsers only. What I should have done is concentrate on building a
*correct* tree earlier, well at least the tree that more closely
represents what I wanted to work with. That was the big mistake, it
would have saved me quite a bit of work if the tree was in a better
state by the time I start to use it. Still, its caused me to think
deeply about how to structure this kind of tool, now I have a lot of the
pre-requisite knowledge. Reading the books & examples is fine, you
'know' how it works, actually putting it into practice is another thing
entirely! I read how the space shuttle works. Doesn't mean I can launch
one ;) hehe 

Anyway, you know what they say, "the plan is useless, the planning is
essential!" lol

Thanks for all your help Loring!*

Rob


(*) don't run off too far, I'll be starting something new to annoy you
with shortly ;) hehe


From prashant.deva at gmail.com  Mon Nov  6 23:54:31 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon, 6 Nov 2006 23:54:31 -0800
Subject: [antlr-interest] ANTLR Studio : Almost FREE! (Only 19 bucks)
Message-ID: <41fed8f80611062354kfed8148qb2d1f665c3d6aaf2@mail.gmail.com>

hi all,
 As of now, I am dropping the price of ANTLR Studio from 99$ to 19.99$.
At this price, it is almost free.

Grab it while the offer lasts, from -
www.placidsystems.com

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061106/dea57ff2/attachment.html 

From antlr at thewolery.demon.co.uk  Tue Nov  7 06:06:00 2006
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Tue, 7 Nov 2006 14:06:00 +0000
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <20061106200601.0B5989C2@mail.intersystems.com>
References: <qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<20061106200601.0B5989C2@mail.intersystems.com>
Message-ID: <rUOoHtSILJUFFw6l@thewolery.demon.co.uk>

In message <20061106200601.0B5989C2 at mail.intersystems.com>, Jim Idle 
<jimi at intersystems.com> writes
>From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Anthony W. Youngman
>Sent: Thursday, November 02, 2006 1:22 AM
>
>
>> And I've also used a version of DATABASIC where some bright spark
>> rewrote the system primitives in C. Blech!!!! the number of times I've
>> seen people scream because they got bitten by subtle bugs ...
>
>
>As it seems somewhat likely that you are in fact talking at least in 
>part about my own work, I feel somewhat qualified to comment:

Likely? I'm not sure - did you write a chunk of UniVerse? I always 
associate you with jBASE.

Mind you, I don't see what else the "bright spark" could have done. I 
think the Prime CPUs had BCD instructions, so didn't have all the "wide 
0" problems of UV.

I just don't remember PI having anywhere near the number problems that 
UV seems to have.

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From elecharny at gmail.com  Tue Nov  7 06:25:11 2006
From: elecharny at gmail.com (Emmanuel Lecharny)
Date: Tue, 7 Nov 2006 15:25:11 +0100
Subject: [antlr-interest] philosophy about translation
In-Reply-To: <rUOoHtSILJUFFw6l@thewolery.demon.co.uk>
References: <qBd4yNMcibSFFwLV@thewolery.demon.co.uk>
	<20061106200601.0B5989C2@mail.intersystems.com>
	<rUOoHtSILJUFFw6l@thewolery.demon.co.uk>
Message-ID: <d45b08f00611070625h57fecc8dl80241267552a1fcf@mail.gmail.com>

Guys,

not that this is an interesting thread about pros/cons of
Java/C/C++/Basic/jBase/WarCraft/Whatever, but there are forums for this kind
of discussion, like comp.lang.<pick your favorite language>.

This is an antlr thread, remember ...

Thanks !

Emmanuel

On 11/7/06, Anthony W. Youngman <antlr at thewolery.demon.co.uk> wrote:
>
> In message <20061106200601.0B5989C2 at mail.intersystems.com>, Jim Idle
> <jimi at intersystems.com> writes
> >From: antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] On Behalf Of Anthony W. Youngman
> >Sent: Thursday, November 02, 2006 1:22 AM
> >
> >
> >> And I've also used a version of DATABASIC where some bright spark
> >> rewrote the system primitives in C. Blech!!!! the number of times I've
> >> seen people scream because they got bitten by subtle bugs ...
> >
> >
> >As it seems somewhat likely that you are in fact talking at least in
> >part about my own work, I feel somewhat qualified to comment:
>
> Likely? I'm not sure - did you write a chunk of UniVerse? I always
> associate you with jBASE.
>
> Mind you, I don't see what else the "bright spark" could have done. I
> think the Prime CPUs had BCD instructions, so didn't have all the "wide
> 0" problems of UV.
>
> I just don't remember PI having anywhere near the number problems that
> UV seems to have.
>
> Cheers,
> Wol
> --
> Anthony W. Youngman - anthony at thewolery.demon.co.uk
>
>


-- 
Cordialement,
Emmanuel L?charny
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061107/24fd7e67/attachment.html 

From kochismo at gmail.com  Tue Nov  7 07:36:08 2006
From: kochismo at gmail.com (Kochismo)
Date: Tue, 7 Nov 2006 15:36:08 +0000
Subject: [antlr-interest] Unicode escapes in C++
Message-ID: <3703f4460611070736k79942a64u2592b26f101335ea@mail.gmail.com>

Hi,

I'm interested in parsing a plain ascii file which represents unicode
characters as escaped hex digits.  For example:

blah\uff20\uff30blah

is the string blah,  unicode character #ff20, unicode character #ff30, then
blah.  Recognising it with the lexer is simple enough, but the lexer returns
tokens as C++ strings, rather than unicode friendly wstrings.  Is there a
way I can handle this from within the lexer?  Or will I have to write code
to convert the string token into a wstring?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061107/60854c1e/attachment.html 

From madcapmaggie at yahoo.com  Tue Nov  7 10:13:15 2006
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Tue, 7 Nov 2006 10:13:15 -0800 (PST)
Subject: [antlr-interest] Installing ANTLR
In-Reply-To: <20061107052302.96495.qmail@web56112.mail.re3.yahoo.com>
Message-ID: <820222.68763.qm@web60020.mail.yahoo.com>

You need to rename the file back to Makefile.in and do

configure

mostly you can do it without supplying any other options but try

configure --help

to see what else you can specify.

The configue is a script that generates the makefiles  (and other stuff, if necessary).



Randolph Tan <ren_c_tan at yahoo.com> wrote: Greetings!
   
  I would like to ask a simple question. I know this may sound stupid but I'm really stucked.
   
   
  I am following the intructions on the install.txt of ANTLR 2.7.6 and got this message after I typed "make install"
   
  make: *** No rule to make target 'install'. Stop.
   
  Btw, I am using WinXp so I used MinGW. I also tried using CygWin, but it doesn't have the make utility installed by default - I don't know how to get it.
   
  I don't quite understand why it won't work since I saw install inside the makefile. Then, I noticed that the file inside the antlr-2.7.6 is Makefile.in so I tried renaming it to Makefile and executed "make install". Then I got this message instead:
   
  Makefile 6: *** Mising separator. Stop.
   
   
   Thanks!
 Send instant messages to your online friends http://uk.messenger.yahoo.com 



Margaret Fieland
    www.margaretfieland.com
 
---------------------------------
Sponsored Link

$200,000 mortgage for $660/mo - 30/15 yr fixed, reduce debt, home equity - Click now for info
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061107/8fd3a7c7/attachment.html 

From ric.klaren at gmail.com  Tue Nov  7 12:06:38 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue, 07 Nov 2006 21:06:38 +0100
Subject: [antlr-interest] Unicode escapes in C++
In-Reply-To: <3703f4460611070736k79942a64u2592b26f101335ea@mail.gmail.com>
References: <3703f4460611070736k79942a64u2592b26f101335ea@mail.gmail.com>
Message-ID: <4550E74E.1040802@gmail.com>

Hi,

Kochismo wrote:
> I'm interested in parsing a plain ascii file which represents unicode
> characters as escaped hex digits.  For example:
> 
> blah\uff20\uff30blah
> 
> is the string blah,  unicode character #ff20, unicode character #ff30, then
> blah.  Recognising it with the lexer is simple enough, but the lexer
> returns
> tokens as C++ strings, rather than unicode friendly wstrings.  Is there a
> way I can handle this from within the lexer?  Or will I have to write code
> to convert the string token into a wstring?

You can probably get some inspiration for this from the Unicode C++
example in the distribution. You probably only need to pay attention to
the part where the strings for the tokens are collected.

Cheers,

Ric

From christian.bryan at dsl.pipex.com  Tue Nov  7 13:06:15 2006
From: christian.bryan at dsl.pipex.com (Christian Bryan)
Date: Tue, 7 Nov 2006 21:06:15 +0000
Subject: [antlr-interest] ANTLR 3: Newbie EEPROM Binary Parsing
Message-ID: <127616A6-F725-4751-83B6-44BA78807815@dsl.pipex.com>

Hi,
	I am currently taking a crash course in ANTLR 3 and language  
recognition in general for my latest project which involves parsing a  
file from an automotive company. The format of the file is like the  
following:

vbf_version = 2.2;
header {
	/*Contents*/
} &^%$?@@&*% ...

I have not a problem in writing the lexer or parser rules to parse  
the vbf_version line the header or its contents. My problem is how do  
I write a rule to get the lexer to consume everything after the right  
curly brace including spaces as this is EEPROM data.

Cheers

Christian. 
  

From parrt at cs.usfca.edu  Tue Nov  7 13:08:45 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 7 Nov 2006 13:08:45 -0800
Subject: [antlr-interest] ANTLR 3: Newbie EEPROM Binary Parsing
In-Reply-To: <127616A6-F725-4751-83B6-44BA78807815@dsl.pipex.com>
References: <127616A6-F725-4751-83B6-44BA78807815@dsl.pipex.com>
Message-ID: <66DE529F-2ED9-4BD6-A83F-60DA373E8AAF@cs.usfca.edu>


On Nov 7, 2006, at 1:06 PM, Christian Bryan wrote:

> Hi,
> 	I am currently taking a crash course in ANTLR 3 and language  
> recognition in general for my latest project which involves parsing  
> a file from an automotive company. The format of the file is like  
> the following:
>
> vbf_version = 2.2;
> header {
> 	/*Contents*/
> } &^%$?@@&*% ...
>
> I have not a problem in writing the lexer or parser rules to parse  
> the vbf_version line the header or its contents. My problem is how  
> do I write a rule to get the lexer to consume everything after the  
> right curly brace including spaces as this is EEPROM data.

What indicates that the data is "over"?

Ter


From antlr at shmuelhome.mine.nu  Wed Nov  8 00:59:43 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 08 Nov 2006 10:59:43 +0200
Subject: [antlr-interest] Is catch a keyword in Antlr3
Message-ID: <45519C7F.9090903@shmuelhome.mine.nu>

Sorry if this is a multiple post. Previous reports are not showing up in 
the mailing list.

Consider this simple grammar.

tryStatement     :     'try' block
                    (
                            finallyclause
                        |
                             catch ( finallyclause )?
                    )
                    ;

catch     :     'catch' '(' identifier ')' block;
finallyclause     :     'finally' block;

block
    :    'b';
identifier
    :    'c';


antlrworks says that 'catch' in tryStatement is an unexpected token.
Changing the rule to catchx solves the problem. I don't see any mention
on the Antlr3 site that indicates that one should avoid this word as a
parser rule.

Shmuel




From manunews at gmail.com  Wed Nov  8 05:19:02 2006
From: manunews at gmail.com (Manu)
Date: Wed, 8 Nov 2006 14:19:02 +0100
Subject: [antlr-interest] AST - don't get it
Message-ID: <96f4581f0611080519k731fe2a6l41295182d4d197b3@mail.gmail.com>

Hi,

I have understood why is good to build an AST but I don't understand
exactly how the tree builder operators work. For example, I'd expect
the following grammar to generate an AST for the entry: 123 * 456
like:

(START (* 123 456))

but instead it generates:

(NIL (START (* 456)))

where did the 123 go?

grammar Expressions;

options
{
	output=AST;
	ASTLabelType=CommonTree;
}

tokens
{
	START;
}

s	:	 expression EOF -> ^(START expression);


expression: multiplicativeExpression ('+'^^ multiplicativeExpression)*;

multiplicativeExpression: primitiveExpression ('*'^^ primitiveExpression)*;

primitiveExpression: INT_LITERAL;
	
INT_LITERAL: ('0'..'9')+;

WS: (' ' | '\r' | '\t' | '\n') {channel=99;};

Please help me,
Thanks.

From jbb at acm.org  Wed Nov  8 07:07:39 2006
From: jbb at acm.org (John B. Brodie)
Date: Wed, 08 Nov 2006 10:07:39 -0500
Subject: [antlr-interest] AST - don't get it
In-Reply-To: <96f4581f0611080519k731fe2a6l41295182d4d197b3@mail.gmail.com>
	(message from Manu on Wed, 08 Nov 2006 14:19:02 +0100)
References: <96f4581f0611080519k731fe2a6l41295182d4d197b3@mail.gmail.com>
Message-ID: <E1Ghp1f-00040a-00@gecko>

Manu :-

>I have understood why is good to build an AST but I don't understand
>exactly how the tree builder operators work. For example, I'd expect
>the following grammar to generate an AST for the entry: 123 * 456
>like:
>
>(START (* 123 456))
>
>but instead it generates:
>
>(NIL (START (* 456)))
>
>where did the 123 go?

....grammar snipped...

your grammar works just fine for me.
e.g. input: 123 * 456
gets tree:  (START (* 123 456) 

maybe there is some setup missing in the Main? here is my Main.java:

//----------begin
import java.io.*;
import java.util.*;

import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.Token;
import org.antlr.runtime.tree.*;

class Main {

   private static final String [] x = new String[]{
      "123 * 456", "1+2", "3*4+5", "8*8*8*8+9+10*11"
   };

   // Custom adaptor to create MyAST node type. will need this adaptor
   // when we override CommonTree with our own AST type.
   //private static final TreeAdaptor adaptor = new CommonTreeAdaptor() {
   //      public Object create(Token payload) {
   //         return new MyAST(payload);
   //      }
   //   };

   public static void main(String[] args) {
      for (int i=0; i < x.length; ++i) {
         try {
            ExpressionsLexer lexer =
               new ExpressionsLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);
            Expressions parser = new Expressions(tokens);
            //parser.setTreeAdaptor(adaptor); // set up our custom AST.
            Expressions.s_return r = parser.s();
            System.out.format("tree:%s%n",((Tree)r.tree).toStringTree());
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}
//----------end

Hope this helps...
   -jbb

From mailists at gmx.net  Wed Nov  8 09:51:53 2006
From: mailists at gmx.net (Jens Braeuer)
Date: Wed, 8 Nov 2006 18:51:53 +0100 (CET)
Subject: [antlr-interest] TreeWalker and AST Transformation
Message-ID: <62716.194.114.62.68.1163008313.squirrel@www.muppet-show>

Dear TreeTransformation-Experts,

i've got a problem transforming an AST using a TreeWalker, which i was
unable to solve using google, antlr-doc and the mailinglist archive. :-)

I currently work on a small code generation project, which involves
TreeWalkers to modify a AST (so buildAST is true).

The problem is, that _before_ using the TreeParser a StreamStatement has
_multiple_ children whereas after using the TreeParser only the first
child survives. I used included ASTFrame to look at the results.

Any hints on how i have to modify the grammar so all children are included
in the output-tree ?


TreeWalker grammar snipet:
-----
pr_StepletBody
	:
	#(StepletBody (pr_StreamStatement)*)
	;

pr_StreamStatement
	{ StringBuffer s;}
	:
	#(StreamStatement
		(
			pr_SimpleStreamStatement
			| pr_MultiStreamStatement
			| pr_TimeStreamStatement
			| pr_StreamStatmntWithDefault
			| pr_StepletInvokation

		)
	)
	;
---------


Greetings, Jens Braeuer





From jimi at intersystems.com  Wed Nov  8 12:32:31 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 8 Nov 2006 15:32:31 -0500
Subject: [antlr-interest] ANTLR 3: Newbie EEPROM Binary Parsing
In-Reply-To: <127616A6-F725-4751-83B6-44BA78807815@dsl.pipex.com>
Message-ID: <20061108203232.5217015CA@mail.intersystems.com>

If the construct is always header { yourstuff } stuff to throw away until end, then:

1) Make sure your lexer is able to match any character that might come up, perhaps with a final lexer rule to catch anything that isn't normally matched;
2) After the rule that matches the final brace have rule that consumes anything else (which I realize was in fact your question ;-);

This works with the "literal" input you give in your example:

grammar t;

file
	: version contents eeprom_data ;
	
version
	: VBF_VERSION EQ INT (DOT INT)? SEMI ;
	
contents
	: HEADER LBRACE
			CONTENTS
		 RBRACE
	;

eeprom_data
	: .*
	;
	
VBF_VERSION	:	'vbf_version' 	;
HEADER	:	'header'		;	

EQ		: 	'=' 			;
LBRACE	:	'{'			;
RBRACE	:	'}'			;

CONTENTS:	'/*Contents*/'		;

DOT		:	'.'			;
SEMI		:	';'			;
INT		: '0'..'9' ('0'..'9')*	;

WS		: (' ' | '\t' | '\n' | '\r')+	{ channel=99; }	;

DATA		: . 				;


However, it could be simpler than this, in that if you just want to stop doing anything after the RBRACE, then don't have the eeprom_rule at all. I think it will just naturally end. This assumes that there is an unambiguous end of course. 

If you don't have the lexer catch all though and there are characters that would other wise not match in the lexer you need to capture them as the lexer doesn't 'know' that you are done. You can also add a skip to the DATA lexing rule too of course. If there can only be one '}' then you could just use a lexer rule to find that then consume all the rest of the input as the text for RBRACE... and so on.

Experiment a bit, but that should give you the basic idea I think.

Jim


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christian Bryan


Hi,
	I am currently taking a crash course in ANTLR 3 and language  
recognition in general for my latest project which involves parsing a  
file from an automotive company. The format of the file is like the  
following:

vbf_version = 2.2;
header {
	/*Contents*/
} &^%$?@@&*% ...

I have not a problem in writing the lexer or parser rules to parse  
the vbf_version line the header or its contents. My problem is how do  
I write a rule to get the lexer to consume everything after the right  
curly brace including spaces as this is EEPROM data.

Cheers

Christian. 
  

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.13.30/521 - Release Date: 11/7/2006 3:30 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.13.32/523 - Release Date: 11/7/2006 1:40 PM
 

From r.morgan at verizonbusiness.com  Wed Nov  8 15:48:41 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Wed, 08 Nov 2006 16:48:41 -0700
Subject: [antlr-interest] String size limit and how to free memory real-time?
In-Reply-To: <mailman.1.1162929601.28461.antlr-interest@antlr.org>
Message-ID: <000201c70390$6ef23710$ea1a9283@mcilink.com>

Hi,

2 things:

1)is there a configuration variable that controls how large a token can be
when ANTLR is parsing/lexing?  I am getting the following error when my
program shuts down (seems to run fine until the EOF token is matched):

Pid 4507 received a SIGSEGV for stack growth failure.
Possible causes: insufficient memory or swap space,
or stack size exceeded maxssiz. 
Segmentation fault

The parser itself seems to run fine, it's the return from my main program
that induces the error, but none of this happened until I changed my grammar
to handle some rather large "tokens" (7800 or more chars.)  The file I'm
parsing is only 86k, so I'm surprised I'm running into this.

Is there some limit I need to change somewhere?  

2) I think if I could free up parts of the AST tree that's been built, parts
I no longer need once my action routines have fired, then I could reduce the
memory utilization. Right now it shoots up to about 140Meg on the above 86k
file before exiting the program and that's mostly the parser and its AST
because I stubbed out all the application code.  The ASTFactory.cpp code I'm
using from the distribution doesn't have any type of prune operations that I
can see.  

Any suggestions on how to free up some memory real-time? Do I need to create
my own AST factory for this purpose?

thanks,
Rick




From foolishewe at hotmail.com  Thu Nov  9 05:36:28 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Thu, 09 Nov 2006 13:36:28 +0000
Subject: [antlr-interest] Some ANTLR questions
Message-ID: <BAY107-F174706A78B6F245A690460C0F00@phx.gbl>

Hello All:

At this point, I've gotten the entire language I'm working on recognized and
have had some good experiences for the most part with ANTLRworks (although 
I've
tripped a few of those sorts of things that might be keeping it in Beta).
I have a few questions

1) In my language UP and DOWN are keywords, yet when I tried to create rules 
to scan
    them, ANTLRworks treated them strangely, so I changed the token names to 
MYUP and MYDOWN
    and it worked.  Are UP and DOWN keywords in ANTLR or Java (my parser 
creates a Java file).
2) I'm now ready to actually do something with the language I'm recognizing, 
and I'm wondering
    if the smart thing is to go with an AST or to try to use rules to do 
attribute propagation
    (back when dinosaurs ruled the earth, i did a lex/yacc, flex/bison style 
compiler which uses
      rules to do it).  If I do an AST, do I need to give AST management 
annotations to each
      production, or can I do it incrementally for unit testing?
3) I had some scanning issues, since my language includes undelimited 
strings (sort of like
    identifiers in many languages).  I created a parse rule that matched all 
alpha numeric
    keywords and created  scanning rules at the end which looked like:
ASTERISK: '*';
//The following rule was not well received by the scanner :-(
ALPHANUMSTRINGWITHWILDCARD	:  (ALPHANUM)+ ASTERISK;
// I think this needs to be last to avoid recognizing keywords.
NONKEYWORDUNDELIMITEDSTRING	: (ALPHANUM)+;

    ANTLR3 and ANTLRworks didn't like it and the debugger hung, leaving the 
TCP/IP
    port (I think it was 49153) unavailable under Windows XP (my employer's 
development
    environment) and preventing future debugging attempts (I didn't bother 
resetting
    the debugger's port number) until reboot.

    As a work around, I created a rule:
alphaNumStringWithWildcard
	:
	NONKEYWORDUNDELIMITEDSTRING ASTERISK // this is a bit of a hack, it allows 
white space between the two
	;

      But that since I have a rule that discards white space by sending it 
to channel=99, then
      this should accept say 'abc*' and 'abc *' so it is  a bit over 
permissive, so I would rather
      use the lexer (or fix this rule somehow).
      What is the best fix for this kind of rule?

Regards:

Bill M.

_________________________________________________________________
Try Search Survival Kits: Fix up your home and better handle your cash with 
Live Search! 
http://imagine-windowslive.com/search/kits/default.aspx?kit=improve&locale=en-US&source=hmtagline


From hugo.a.garcia at gmail.com  Thu Nov  9 06:58:36 2006
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Thu, 9 Nov 2006 09:58:36 -0500
Subject: [antlr-interest] How to use StringTemplate in Antler 3
Message-ID: <f9637ada0611090658m6a619836re4e4e600bdba44db@mail.gmail.com>

hi

newbie here.

I am using Parr's Java grammar. I am trying to figure out how to get a
simple usage of StringTemplate working so....

I did this (almost straight from the docs):

http://www.antlr.org/wiki/pages/viewpage.action?pageId=719

<snip>

grammar JavaParser;
options {k=2; backtrack=true; memoize=true; output=template;}
...
importDeclaration
	:	'import' 'static'? Identifier ('.' Identifier)* ('.' '*')? ';'
	-> import(name={$Identifier.st},
                begin={$Identifier.start},
                end={$Identifier.stop})
	;

</snip>

I run antlr from command line to generate the JavaParser and JavaParserLexer.

I get the folloing in the code of JavaParser.java :

<snip>

            match(input,25,FOLLOW_25_in_importDeclaration121); if
(failed) return retval;

            // TEMPLATE REWRITE
            if ( backtracking==0 ) {
              // 50:2: ->
import(name=$Identifier.stbegin=$Identifier.startend=$Identifier.stop)
              {
                  retval.st = templateLib.getInstanceOf("import",
                new STAttrMap().put("name",
Identifier1.st).put("begin", Identifier1.start).put("end",
Identifier1.stop));
              }

            }

            }

</snip>

which generates an error where

'Identifier1*' cannot be resolved.

-------

what am I missing? something I should further read?

-H

From kroepke at classdump.org  Thu Nov  9 07:09:59 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 9 Nov 2006 16:09:59 +0100
Subject: [antlr-interest] How to use StringTemplate in Antler 3
In-Reply-To: <f9637ada0611090658m6a619836re4e4e600bdba44db@mail.gmail.com>
References: <f9637ada0611090658m6a619836re4e4e600bdba44db@mail.gmail.com>
Message-ID: <5D8BD577-72CF-4820-BBEB-055FC3EA0B17@classdump.org>

Hi Hugo!

On 9. Nov 2006, at 15:58 , Hugo Garcia wrote:

> importDeclaration
> 	:	'import' 'static'? Identifier ('.' Identifier)* ('.' '*')? ';'
> 	-> import(name={$Identifier.st},
>                begin={$Identifier.start},
>                end={$Identifier.stop})
> 	;

ANTLR can't figure out which Identifier you mean here. If you mean  
the first one, give it a label:

importDeclaration
	:	'import' 'static'? id=Identifier ('.' Identifier)* ('.' '*')? ';'
	-> import(name={$id.st},
                begin={$id.start},
                end={$id.stop})
	;

If you need all identifiers, you can't access it like $id.st etc., of  
course, the action code would be more
involved in that case.

HTH,
-k
-- 
Kay R?pke <kroepke at classdump.org>
classdump Software
Key fingerprint = A849 0F2C C322 4022 379E  8661 7E1B FE0D 4CD2 A6D0




From Gerz at fgan.de  Thu Nov  9 07:30:09 2006
From: Gerz at fgan.de (Gerz, Michael)
Date: Thu, 9 Nov 2006 16:30:09 +0100
Subject: [antlr-interest] Exception handling (again)
Message-ID: <EF2ED99C54B0FD4188B64423658925EDBE1D95@mailserv.lorien.fkie.fgan.de>

Hello everybody,

I would like to inform you that my project team finally managed to disable exception handling in our parser. 

Thank you very much for the hint on mismatch() at "Migrating from ANTLR 2 to ANTLR 3".

Some thoughts:

 - Why is it necessary to override mismatch() manually? 
   Options { defaultErrorHandler=false; } in ANTLR was much easier
   and less error-prone.

 - We played desparately with @rulecatch (because we weren't aware 
   of mismatched at first). To our surprise, ANTLR accepts @rulecatch 
   in a rule header but doesn't do anything with it. I suggest
   outputting a warning if an action is used at a place 
   where it doesn't make sense and is ignored by ANTLR.

 - How about a nice little table that lists all available actions
   (@members, @rulecatch, ...) and where they can be used
   (grammar, rule, subrule, etc.)??? (*wink*)

Kind regards,

Michael

************************************************************************
Dr. Michael Gerz                                                        
FGAN e.V.                                      Phone:  +49 228 9435-414 
Department FKIE/ITF                            Fax:    +49 228 9435-685 
Neuenahrer Stra?e 20                           E-Mail: gerz at fgan.de     
53343 Wachtberg-Werthhoven                     WWW:    www.fgan.de     

From jimi at intersystems.com  Thu Nov  9 10:07:04 2006
From: jimi at intersystems.com (Jim Idle)
Date: Thu, 9 Nov 2006 13:07:04 -0500
Subject: [antlr-interest] Some ANTLR questions
In-Reply-To: <BAY107-F174706A78B6F245A690460C0F00@phx.gbl>
Message-ID: <20061109180706.A632F159A@mail.intersystems.com>

1) UP and DOWN are indicators of tree structure when the output is an AST. There are a few other things like this, depending on your target language too. So, yes you cannot use these. ANTLR3 error checking is a bit lax right now as this will be filled in when ANTLR3 is written in ANTLR3. It becomes "obvious" as you use it right now ;-)
2) There are differing opinions of course, but if you are doing anything other than just straight output of something that can be done without reference to much else you have parsed, then always use a tree. The tree parser is easy to construct as the syntax of it is basically the same as the rewrite rules in the parser. You will need to cover all the structure in your parser really, but it isn't onerous (IMO).
3) Both ASTERISK and ALPHAblah are lexer rules so antlr will match the first one it finds basically. If you define ASTERISK as a fragment and then use it in two other rules, in order of which should be matched first, you will probably have more success, something like:

fragment
ASTERISK: '*' ;
fragment
ALPHANUM: 'a'..'z' | 0'..'9';

KEY1: 'X*Y' ;
KEY2: 'X' ;
WILD: ALPHANUM+ ASTERISK;
MULT: ASTERISK;

You can of course use lexer predicates if it isn?t as simple as ordering. If only the parser can distinguish because of context, then create LEXER rules that supply the bits for the parser to do so using whatever predicates might be needed, something like:

expr: id (MULT^^ id)*;
wild: ID (   (MULT)=> wild=MULT)?
	-> {wild != null}? ^(WILDID $ID)
...

ID: ALPHANUM+;
MULT: '*';

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-

Hello All:

At this point, I've gotten the entire language I'm working on recognized and
have had some good experiences for the most part with ANTLRworks (although 
I've
tripped a few of those sorts of things that might be keeping it in Beta).
I have a few questions

1) In my language UP and DOWN are keywords, yet when I tried to create rules 
to scan
    them, ANTLRworks treated them strangely, so I changed the token names to 
MYUP and MYDOWN
    and it worked.  Are UP and DOWN keywords in ANTLR or Java (my parser 
creates a Java file).
2) I'm now ready to actually do something with the language I'm recognizing, 
and I'm wondering
    if the smart thing is to go with an AST or to try to use rules to do 
attribute propagation
    (back when dinosaurs ruled the earth, i did a lex/yacc, flex/bison style 
compiler which uses
      rules to do it).  If I do an AST, do I need to give AST management 
annotations to each
      production, or can I do it incrementally for unit testing?
3) I had some scanning issues, since my language includes undelimited 
strings (sort of like
    identifiers in many languages).  I created a parse rule that matched all 
alpha numeric
    keywords and created  scanning rules at the end which looked like:
ASTERISK: '*';
//The following rule was not well received by the scanner :-(
ALPHANUMSTRINGWITHWILDCARD	:  (ALPHANUM)+ ASTERISK;
// I think this needs to be last to avoid recognizing keywords.
NONKEYWORDUNDELIMITEDSTRING	: (ALPHANUM)+;

    ANTLR3 and ANTLRworks didn't like it and the debugger hung, leaving the 
TCP/IP
    port (I think it was 49153) unavailable under Windows XP (my employer's 
development
    environment) and preventing future debugging attempts (I didn't bother 
resetting
    the debugger's port number) until reboot.

    As a work around, I created a rule:
alphaNumStringWithWildcard
	:
	NONKEYWORDUNDELIMITEDSTRING ASTERISK // this is a bit of a hack, it allows 
white space between the two
	;

      But that since I have a rule that discards white space by sending it 
to channel=99, then
      this should accept say 'abc*' and 'abc *' so it is  a bit over 
permissive, so I would rather
      use the lexer (or fix this rule somehow).
      What is the best fix for this kind of rule?

Regards:

Bill M.

_________________________________________________________________
Try Search Survival Kits: Fix up your home and better handle your cash with 
Live Search! 
http://imagine-windowslive.com/search/kits/default.aspx?kit=improve&locale=en-US&source=hmtagline


-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.14.0/524 - Release Date: 11/8/2006 1:40 PM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.14.0/524 - Release Date: 11/8/2006 1:40 PM
 

From mantu_lists at yahoo.com.br  Thu Nov  9 11:58:55 2006
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Thu, 9 Nov 2006 19:58:55 +0000 (GMT)
Subject: [antlr-interest] java.lang.InternalError "name is too long to
	represent": Do you know any workaround
Message-ID: <20061109195855.63848.qmail@web39510.mail.mud.yahoo.com>

Greetings!
I'm working with a TreeParser and, suddenly, I tried to debug my code (Using Eclipse + ANTLRWorks in Windows XP) and an infamous exception was thrown in my face: "java.lang.InternalError: name is too long to represent".
A bug in JVM implementation of JSR 045 is responsible for this: If the smap have more than 64K and you try to debug your grammar, the JVM crashes...

I realy wan't to know if anyone achieved to workaround this anoyin bug without lose the grammar debug capability.
What you say?

Thanks to All!
[]'s
Mantu




Luciano Mantuaneli
Analist-Programmer
 		
---------------------------------
 Voc? quer respostas para suas perguntas? Ou voc? sabe muito e quer compartilhar seu conhecimento? Experimente o Yahoo! Respostas!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061109/8fe3795f/attachment-0001.html 

From ren_c_tan at yahoo.com  Thu Nov  9 23:18:30 2006
From: ren_c_tan at yahoo.com (Randolph Tan)
Date: Fri, 10 Nov 2006 07:18:30 +0000 (GMT)
Subject: [antlr-interest] Still need help on installing ANTLR
Message-ID: <20061110071830.77517.qmail@web56108.mail.re3.yahoo.com>

Sorry for disturbing again. I followed the steps in the text file install and performed configure.
   
  ///////////////////////////////////////////////////////////////////Screen//////////////////////////////////////////////////////////
  $ ./configure -disable-examples
checking build system type... i686-pc-mingw32
checking host system type... i686-pc-mingw32
checking whether this is Cygwin... no
checking whether this is MinGW... checking for cygpath.exe... no
checking for make... /bin/make
checking for gmake... no
checking for gnumake... no
checking for /bin/make... yes
checking for /usr/bin/make... yes
checking whether /bin/make is GNU make... yes
checking for make... /bin/make
checking for java... /c/WINDOWS/system32/java
checking for gij... no
checking for jikes... no
checking for javac... no
checking for gcj... no
  ============================================================
Warning:
Support for JAVA has been disabled as I have not been able
locate to locate a mandatory program. Please change $PATH or run
with option --help on how to overcome this problem.
============================================================
  checking for tlib... no
checking for lib... no
checking for ar... no
checking for /usr/bin/ar... no
configure: error: no suitable value has been found for AR

   
  $ make install
make: *** No rule to make target `install'.  Stop.

   
  ///////////////////////////////////////////////////////////////////Screen//////////////////////////////////////////////////////////
   
  and I still get this problem. Is there some steps that I have done wrong? Btw, I am using MinGW-install-20060210. Thanks!

 Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061110/4a5acb7f/attachment.html 

From lgcraymer at yahoo.com  Fri Nov 10 00:25:23 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 10 Nov 2006 00:25:23 -0800 (PST)
Subject: [antlr-interest] Still need help on installing ANTLR
In-Reply-To: <20061110071830.77517.qmail@web56108.mail.re3.yahoo.com>
Message-ID: <20061110082523.46192.qmail@web55911.mail.re3.yahoo.com>

Well, the error reports say you have no development
support for Java installed (neither gcj nor javac),
you are missing binutils (no ar -- you cannot make
libraries), and the configure script did not get far
enough to check if you have a C++ compiler.

You need a few more of the MinGW packages, and you
might want to download an SDK from java.sun.com

--Loring


--- Randolph Tan <ren_c_tan at yahoo.com> wrote:

> Sorry for disturbing again. I followed the steps in
> the text file install and performed configure.
>    
>  
>
///////////////////////////////////////////////////////////////////Screen//////////////////////////////////////////////////////////
>   $ ./configure -disable-examples
> checking build system type... i686-pc-mingw32
> checking host system type... i686-pc-mingw32
> checking whether this is Cygwin... no
> checking whether this is MinGW... checking for
> cygpath.exe... no
> checking for make... /bin/make
> checking for gmake... no
> checking for gnumake... no
> checking for /bin/make... yes
> checking for /usr/bin/make... yes
> checking whether /bin/make is GNU make... yes
> checking for make... /bin/make
> checking for java... /c/WINDOWS/system32/java
> checking for gij... no
> checking for jikes... no
> checking for javac... no
> checking for gcj... no
>  
>
============================================================
> Warning:
> Support for JAVA has been disabled as I have not
> been able
> locate to locate a mandatory program. Please change
> $PATH or run
> with option --help on how to overcome this problem.
>
============================================================
>   checking for tlib... no
> checking for lib... no
> checking for ar... no
> checking for /usr/bin/ar... no
> configure: error: no suitable value has been found
> for AR
> 
>    
>   $ make install
> make: *** No rule to make target `install'.  Stop.
> 
>    
>  
>
///////////////////////////////////////////////////////////////////Screen//////////////////////////////////////////////////////////
>    
>   and I still get this problem. Is there some steps
> that I have done wrong? Btw, I am using
> MinGW-install-20060210. Thanks!
> 
>  Send instant messages to your online friends
> http://uk.messenger.yahoo.com 



 
____________________________________________________________________________________
Cheap talk?
Check out Yahoo! Messenger's low PC-to-Phone call rates.
http://voice.yahoo.com

From mailists at gmx.net  Fri Nov 10 01:05:07 2006
From: mailists at gmx.net (=?ISO-8859-1?Q?Jens_Br=E4uer?=)
Date: Fri, 10 Nov 2006 10:05:07 +0100
Subject: [antlr-interest] TreeWalker and AST Transformation
In-Reply-To: <445445.52955.qm@web55903.mail.re3.yahoo.com>
References: <445445.52955.qm@web55903.mail.re3.yahoo.com>
Message-ID: <455440C3.9080107@gmx.net>

Dear Loring, Dear Antlr-Intrest

thanks a lot for your answer. Seems as i made a mistake when writing the
mail.
In contrast to what i wrote, the problem is, that before transformation
a _StepletBody_ has multiple StreamStatements as children. Only the
first child (aka StreamStatement) survives a walk with the TreeWalker.
Antlr version is 2.7.7.

>> pr_StepletBody
>> 	:
>> 	#(StepletBody (pr_StreamStatement)*)
>> 	;
>>
>> pr_StreamStatement
>> 	{ StringBuffer s;}
>> 	:
>> 	#(StreamStatement
>> 		(
>> 			pr_SimpleStreamStatement
>> 			| pr_MultiStreamStatement
>> 			| pr_TimeStreamStatement
>> 			| pr_StreamStatmntWithDefault
>> 			| pr_StepletInvokation
>>
>> 		)
>> 	)
>> 	;

Any hints ?

Greetings, Jens


Loring Craymer wrote:
> Jens--
> 
> The problem is that you are only looking for a single
> child; change the child subgroup to a closure
> 
> pr_StreamStatement
>  	{ StringBuffer s;}
>  	:
>  	#(StreamStatement
>  		(
>  			pr_SimpleStreamStatement
>  			| pr_MultiStreamStatement
>  			| pr_TimeStreamStatement
>  			| pr_StreamStatmntWithDefault
>  			| pr_StepletInvokation
>  
>  		)+   // CHANGED from ) to )+
>  	)
>  	;
> 
> and everything should work.
> 
> --Loring
> 
> 
> --- Jens Braeuer <mailists at gmx.net> wrote:
> 
>> Dear TreeTransformation-Experts,
>>
>> i've got a problem transforming an AST using a
>> TreeWalker, which i was
>> unable to solve using google, antlr-doc and the
>> mailinglist archive. :-)
>>
>> I currently work on a small code generation project,
>> which involves
>> TreeWalkers to modify a AST (so buildAST is true).
>>
>> The problem is, that _before_ using the TreeParser a
>> StreamStatement has
>> _multiple_ children whereas after using the
>> TreeParser only the first
>> child survives. I used included ASTFrame to look at
>> the results.
>>
>> Any hints on how i have to modify the grammar so all
>> children are included
>> in the output-tree ?
>>
>>
>> TreeWalker grammar snipet:
>> -----
>> pr_StepletBody
>> 	:
>> 	#(StepletBody (pr_StreamStatement)*)
>> 	;
>>
>> pr_StreamStatement
>> 	{ StringBuffer s;}
>> 	:
>> 	#(StreamStatement
>> 		(
>> 			pr_SimpleStreamStatement
>> 			| pr_MultiStreamStatement
>> 			| pr_TimeStreamStatement
>> 			| pr_StreamStatmntWithDefault
>> 			| pr_StepletInvokation
>>
>> 		)
>> 	)
>> 	;
>> ---------
>>
>>
>> Greetings, Jens Braeuer
>>
>>
>>
>>
>>
> 
> 
> 
> 
>  
> ____________________________________________________________________________________
> Yahoo! Music Unlimited
> Access over 1 million songs.
> http://music.yahoo.com/unlimited
> 


-- 
Mit Unix zu arbeiten, ist wie mit einem wuerdigen Gegner zu ringen. Mit
Windows zu arbeiten, ist wie ein kleines heulendes Kind anzugreifen,
dass eine geladene .38er in der Hand hat.



From VAUCHER at fermat.eu  Fri Nov 10 02:33:23 2006
From: VAUCHER at fermat.eu (VAUCHER Laurent)
Date: Fri, 10 Nov 2006 11:33:23 +0100
Subject: [antlr-interest] ANTLRWorks interpreter question
Message-ID: <55DDB08CC9CD2941A70E8D626789A2C902FA553D@ec8l7ljvo9h5dde.hosting.exch>

  Hi and a big thank you for ANTLRWorks. It would make a great Eclipse
plug-in, but it is already very useful as a standalone tool.

  I just wondered if the interpreter is 'guaranteed' to run exactly as
the final generated code.

  I don't use semantic predicates, only syntactic ones, and the
interpreter chokes on inputs that the 'debugger' swallows easily.

  I use v1.0b5 and the interpreter gives me errors like
'FailedPredicateException'.

  Here is a sample grammar file that exhibits the problem when trying to
parse "a.b" as a table_spec.


------------------------------------------------------------------------
--
grammar testInterpreter;

table_spec
  : ( schema_name DOT ) => schema_name DOT table_name 
  | table_name
  ;

schema_name :	IDENTIFIER ;

table_name : IDENTIFIER ;

DOT :	'.' ;
ASTERISK : '*' ;
IDENTIFIER : LETTER+ ;
LETTER : 'a'..'z' | 'A'..'Z' ;
------------------------------------------------------------------------
--

Laurent.


From r.morgan at verizonbusiness.com  Fri Nov 10 08:35:59 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Fri, 10 Nov 2006 09:35:59 -0700
Subject: [antlr-interest] String size limit and how to free memory
	real-time?
In-Reply-To: <mailman.2121.1163102337.15912.antlr-interest@antlr.org>
Message-ID: <002001c704e6$50ef07a0$c28522a6@mcilink.com>

regarding my own questions:
1) there doesn't seem to be a built-in limit since, in the c++ target code
anyway, there is a circular queue being used which is implemented with a
vector. The vector is self-expanding for you non-c++ types (which includes
me for the most part, but I'm learning). There is a trip point in the code
set at 5000 that causes the vector to shuffle things around somehow, but I
didn't study it hard enough to figure out the purpose. I don't think my 7800
character (or bigger) tokens are impeded by that 5000 number, not really
sure on that point.

Delving further into my problem I found that the stack overflow occurs when
the parser destructor is called.  It attempts to free the AST which in my
case is a degenerate list of some sort, containing 25800 nodes.  The
compiler apparently generates code that frees these up using recursive stack
frames which eventually blows the stack.  I'm looking at how to implement a
non-recursive version of it but c++ isn't my strong point and I can't really
see how the list is being destructed in the first place (recursion is just
my theory at the moment), so don't see where to intervene.

2) I found a removeChildren method in the BaseAST class (a base class of my
parser I believe), but when I attempt to call it, I get a no-such-method
error at compile time.  I probably need to cast the result of my #myVar
reference to BaseAST, but I got way off in the weeds with number 1) above,
so haven't got back to this.  Any suggestions on how to free up the AST
real-time would be helpful, as well as warnings about corrupting it all.

thanks,
Rick

> Message: 2
> Date: Wed, 08 Nov 2006 16:48:41 -0700
> From: Rick Morgan <r.morgan at verizonbusiness.com>
> Subject: [antlr-interest] String size limit and how to free memory
> 	real-time?
> To: antlr-interest at antlr.org
> Message-ID: <000201c70390$6ef23710$ea1a9283 at mcilink.com>
> Content-Type: text/plain; charset=us-ascii
> 
> Hi,
> 
> 2 things:
> 
> 1)is there a configuration variable that controls how large a token can be
> when ANTLR is parsing/lexing?  I am getting the following error when my
> program shuts down (seems to run fine until the EOF token is matched):
> 
> Pid 4507 received a SIGSEGV for stack growth failure.
> Possible causes: insufficient memory or swap space,
> or stack size exceeded maxssiz.
> Segmentation fault
> 
> The parser itself seems to run fine, it's the return from my main program
> that induces the error, but none of this happened until I changed my
> grammar
> to handle some rather large "tokens" (7800 or more chars.)  The file I'm
> parsing is only 86k, so I'm surprised I'm running into this.
> 
> Is there some limit I need to change somewhere?
> 
> 2) I think if I could free up parts of the AST tree that's been built,
> parts
> I no longer need once my action routines have fired, then I could reduce
> the
> memory utilization. Right now it shoots up to about 140Meg on the above
> 86k
> file before exiting the program and that's mostly the parser and its AST
> because I stubbed out all the application code.  The ASTFactory.cpp code
> I'm
> using from the distribution doesn't have any type of prune operations that
> I
> can see.
> 
> Any suggestions on how to free up some memory real-time? Do I need to
> create
> my own AST factory for this purpose?
> 
> thanks,
> Rick




From parrt at cs.usfca.edu  Fri Nov 10 09:31:49 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 10 Nov 2006 09:31:49 -0800
Subject: [antlr-interest] ANTLRWorks interpreter question
In-Reply-To: <55DDB08CC9CD2941A70E8D626789A2C902FA553D@ec8l7ljvo9h5dde.hosting.exch>
References: <55DDB08CC9CD2941A70E8D626789A2C902FA553D@ec8l7ljvo9h5dde.hosting.exch>
Message-ID: <E796DB6B-0F92-45DD-ACE9-2770984A2D65@cs.usfca.edu>

Hi.  A search reveals I have not implemented predicates in  
interpreter yet.
Terence


From fermin.reig at gmail.com  Fri Nov 10 10:50:53 2006
From: fermin.reig at gmail.com (F Reig)
Date: Fri, 10 Nov 2006 18:50:53 +0000
Subject: [antlr-interest] Line number help
In-Reply-To: <1153510873.7920.46.camel@localhost>
References: <1153510873.7920.46.camel@localhost>
Message-ID: <4f1b77310611101050k43c46d32jea9567811bc5210@mail.gmail.com>

On 7/21/06, Walter Schilling <walter.schilling at computer.org> wrote:
> Good afternoon.
>
> I am having some difficulty developing a Java analysis tool when it
> comes to line numberings and I want to see if there is a better way to
> handle what I need done.  In specific, I desire two bits of information
> from my tree parser, the starting line / column location for a construct
> and the ending line / column location for a construct.  Per one of the
> older FAQ answers in the antlr documentation, I have extended the
> CommonAST class to include line numbers and locations.  However, if I
> have a rule such as:
>
> expression
>         :       #(EXPR expr)
>         ;
>
> the line number and column number within the AST are always zero.  I
> suspect this has to do with the way they are constructed in the parser.
> As an interim measure, I have developed routines which walk the
> expression structure to find the starting and ending line numbers, but
> is there any easy way of appending this information right into the EXPR
> node?  That is, any way short of modifying each and every rule where I
> create such a tree structure when parsing the code?
>
> Thanks,
>
> Walt Schilling

I've had to fix the same problem with my grammar today. I ended up
defining a method like this:

    private void setLineCol(AST t, LineColAST child) {
        ((LineColAST)t).setLine(child.getLine());
        ((LineColAST)t).setCol(child.getCol());
    }

This is for C#. Then, in my grammar, I replace rules like this one:

expression
    : start:exp
      {## = #([EXPR,"EXPR"], #expression);  }
    ;

by this

expression
    : start:exp
      {## = #([EXPR,"EXPR"], #expression); setLineCol(##, #start); }
    ;

I noticed this is how it is done in the grammar for SDL 2000,
available at the antlr website, so I'm doing the same.

I hope that helps
Fermin

From open.zone at virgin.net  Fri Nov 10 11:18:29 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 10 Nov 2006 19:18:29 -0000
Subject: [antlr-interest] Line number help
In-Reply-To: <4f1b77310611101050k43c46d32jea9567811bc5210@mail.gmail.com>
Message-ID: <001701c704fd$0244d190$c704a8c0@hercules>

Hi,

> > However, if I have a rule such as:
> >
> > expression
> >         :       #(EXPR expr)
> >         ;
> >
> > the line number and column number within the AST are always 
> zero.  I 
> > suspect this has to do with the way they are constructed in the 
> > parser. As an interim measure, I have developed routines which walk 
> > the expression structure to find the starting and ending 
> line numbers, 
> > but is there any easy way of appending this information 
> right into the 
> > EXPR node?  That is, any way short of modifying each and every rule 
> > where I create such a tree structure when parsing the code?

> 
> I've had to fix the same problem with my grammar today. I 
> ended up defining a method like this:
> 
>     private void setLineCol(AST t, LineColAST child) {
>         ((LineColAST)t).setLine(child.getLine());
>         ((LineColAST)t).setCol(child.getCol());
>     }
> 
> This is for C#. Then, in my grammar, I replace rules like this one:
> 
> expression
>     : start:exp
>       {## = #([EXPR,"EXPR"], #expression);  }
>     ;
> 
> by this
> 
> expression
>     : start:exp
>       {## = #([EXPR,"EXPR"], #expression); setLineCol(##, #start); }
>     ;
> 
> I noticed this is how it is done in the grammar for SDL 2000, 
> available at the antlr website, so I'm doing the same.

KCSParse/csharp_v1 uses a similar scheme: ##.CopyPositionFrom( #some_node );


One difference is that CopyPositionFrom(node) is a method on a custom AST
class.

Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From foolishewe at hotmail.com  Fri Nov 10 11:44:53 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Fri, 10 Nov 2006 19:44:53 +0000
Subject: [antlr-interest] Some ANTLR questions
Message-ID: <BAY107-F11BE639BF544C5EFB45518C0F70@phx.gbl>

Jim and Antlr-Interest Readers:

Thanks for all your help.  I have some questions about the recommended 
approach
for tree construction in the following cases.

In general, the questions are for when there are fixed suffixes with 
arbitrary or optional
repetitions of a prefix/infix with alternatives.

Consider the following cases:

case 1) a parse rule of the form
           a: B (C)+ D;

           I think a preferred AST construction rule is of the form

           tokens{
               A;
               // other tokens
           }
           a: b=B (c+ =C)+ d=d-> ^(A $b $c+ $d);

           Would we use the same approach if there were zero or more 
repetitions?
           i..e the rule was of the form

           a: B (C)* D;

case 2) suppose instead that instead of a repeated rule we have a "do it or 
skip it" of the form

           a: B (C)? D;

          should the rule look like?

          a: b=B (c+ =C)? d=d-> ^(A $b $c+ $d)

case 3) suppose instead we have an infix of alternatives (but perhaps we 
would not
           want the infix values to be roots like say  + or - operators in 
an expression
           tree for example) of the form

         a: B  (C | D) E;

         Must we refactor to distribute suffix concatenation over the 
alternatives
         and have something of the form:

         a: b=B ( (c=C e1=E)->^(A $b $c $e1)  | (d=D e2=E)->^(A $b $d $e2));

          Or is there a smarter way?

case 4) Suppose that instead we have repetitions of infix alternatives so 
that the rule reads:

         a: B (C | D)+ E;

         What form should the solution take, would we use something like:

         a: b=B (c+=C | d+=D) e=E->^(A $b $c+ $d+ $e);

Sorry for troubling you all with this, I'm a bit new to ANTLR's AST 
construction.

Regards:

Bill M.
>From: "Jim Idle" <jimi at intersystems.com>
>To: "Foolish Ewe" <foolishewe at hotmail.com>,<antlr-interest at antlr.org>
>Subject: RE: [antlr-interest] Some ANTLR questions
>Date: Thu, 9 Nov 2006 13:07:04 -0500
>
>1) UP and DOWN are indicators of tree structure when the output is an AST. 
>There are a few other things like this, depending on your target language 
>too. So, yes you cannot use these. ANTLR3 error checking is a bit lax right 
>now as this will be filled in when ANTLR3 is written in ANTLR3. It becomes 
>"obvious" as you use it right now ;-)
>2) There are differing opinions of course, but if you are doing anything 
>other than just straight output of something that can be done without 
>reference to much else you have parsed, then always use a tree. The tree 
>parser is easy to construct as the syntax of it is basically the same as 
>the rewrite rules in the parser. You will need to cover all the structure 
>in your parser really, but it isn't onerous (IMO).
>3) Both ASTERISK and ALPHAblah are lexer rules so antlr will match the 
>first one it finds basically. If you define ASTERISK as a fragment and then 
>use it in two other rules, in order of which should be matched first, you 
>will probably have more success, something like:
>
>fragment
>ASTERISK: '*' ;
>fragment
>ALPHANUM: 'a'..'z' | 0'..'9';
>
>KEY1: 'X*Y' ;
>KEY2: 'X' ;
>WILD: ALPHANUM+ ASTERISK;
>MULT: ASTERISK;
>
>You can of course use lexer predicates if it isn?t as simple as ordering. 
>If only the parser can distinguish because of context, then create LEXER 
>rules that supply the bits for the parser to do so using whatever 
>predicates might be needed, something like:
>
>expr: id (MULT^^ id)*;
>wild: ID (   (MULT)=> wild=MULT)?
>	-> {wild != null}? ^(WILDID $ID)
>...
>
>ID: ALPHANUM+;
>MULT: '*';
>
>-----Original Message-----
>From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>
>Hello All:
>
>At this point, I've gotten the entire language I'm working on recognized 
>and
>have had some good experiences for the most part with ANTLRworks (although
>I've
>tripped a few of those sorts of things that might be keeping it in Beta).
>I have a few questions
>
>1) In my language UP and DOWN are keywords, yet when I tried to create 
>rules
>to scan
>     them, ANTLRworks treated them strangely, so I changed the token names 
>to
>MYUP and MYDOWN
>     and it worked.  Are UP and DOWN keywords in ANTLR or Java (my parser
>creates a Java file).
>2) I'm now ready to actually do something with the language I'm 
>recognizing,
>and I'm wondering
>     if the smart thing is to go with an AST or to try to use rules to do
>attribute propagation
>     (back when dinosaurs ruled the earth, i did a lex/yacc, flex/bison 
>style
>compiler which uses
>       rules to do it).  If I do an AST, do I need to give AST management
>annotations to each
>       production, or can I do it incrementally for unit testing?
>3) I had some scanning issues, since my language includes undelimited
>strings (sort of like
>     identifiers in many languages).  I created a parse rule that matched 
>all
>alpha numeric
>     keywords and created  scanning rules at the end which looked like:
>ASTERISK: '*';
>//The following rule was not well received by the scanner :-(
>ALPHANUMSTRINGWITHWILDCARD	:  (ALPHANUM)+ ASTERISK;
>// I think this needs to be last to avoid recognizing keywords.
>NONKEYWORDUNDELIMITEDSTRING	: (ALPHANUM)+;
>
>     ANTLR3 and ANTLRworks didn't like it and the debugger hung, leaving 
>the
>TCP/IP
>     port (I think it was 49153) unavailable under Windows XP (my 
>employer's
>development
>     environment) and preventing future debugging attempts (I didn't bother
>resetting
>     the debugger's port number) until reboot.
>
>     As a work around, I created a rule:
>alphaNumStringWithWildcard
>	:
>	NONKEYWORDUNDELIMITEDSTRING ASTERISK // this is a bit of a hack, it allows
>white space between the two
>	;
>
>       But that since I have a rule that discards white space by sending it
>to channel=99, then
>       this should accept say 'abc*' and 'abc *' so it is  a bit over
>permissive, so I would rather
>       use the lexer (or fix this rule somehow).
>       What is the best fix for this kind of rule?
>
>Regards:
>
>Bill M.
>
>_________________________________________________________________
>Try Search Survival Kits: Fix up your home and better handle your cash with
>Live Search!
>http://imagine-windowslive.com/search/kits/default.aspx?kit=improve&locale=en-US&source=hmtagline
>
>
>--
>No virus found in this incoming message.
>Checked by AVG Free Edition.
>Version: 7.5.430 / Virus Database: 268.14.0/524 - Release Date: 11/8/2006 
>1:40 PM
>
>
>--
>No virus found in this outgoing message.
>Checked by AVG Free Edition.
>Version: 7.5.430 / Virus Database: 268.14.0/524 - Release Date: 11/8/2006 
>1:40 PM
>

_________________________________________________________________
Find a local pizza place, music store, museum and more?then map the best 
route!  http://local.live.com?FORM=MGA001


From ric.klaren at gmail.com  Fri Nov 10 13:50:14 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri, 10 Nov 2006 22:50:14 +0100
Subject: [antlr-interest] String size limit and how to free memory
	real-time?
In-Reply-To: <002001c704e6$50ef07a0$c28522a6@mcilink.com>
References: <mailman.2121.1163102337.15912.antlr-interest@antlr.org>
	<002001c704e6$50ef07a0$c28522a6@mcilink.com>
Message-ID: <bc607a4e0611101350y25059b85r8dd78cf56f3d7b25@mail.gmail.com>

Hi,

On 11/10/06, Rick Morgan <r.morgan at verizonbusiness.com> wrote:
> Delving further into my problem I found that the stack overflow occurs when
> the parser destructor is called.  It attempts to free the AST which in my
> case is a degenerate list of some sort, containing 25800 nodes.

This is a known gotcha. It seems that more and more people are running into it.

See also this link:

http://www.antlr.org/pipermail/antlr-interest/2006-July/016967.html

> so haven't got back to this.  Any suggestions on how to free up the AST
> real-time would be helpful, as well as warnings about corrupting it all.

Some quick copy paste & modify from the above link and the exprAST
example in the distro:

-----snip-----
options {
        language="Cpp";
}

{
#include <iostream>
#include <queue>

ExprParser::~ExprParser()
{
        destroy(returnAST);
}

using antlr::RefAST;
using antlr::nullAST;

void ExprParser::destroy( RefAST ast )
{
        if( ! ast )
                return;

        // std::cerr << "before destroy" << std::endl;

        std::queue<RefAST> stack;

        stack.push(ast);
        ast = nullAST;
        RefAST current;
        // while stuff left..
        while(!stack.empty()) {
                current = stack.front();
                stack.pop();

                RefAST child = current->getFirstChild();
                current->setFirstChild(nullAST);

                if( child )
                        stack.push(child);

                child = current->getNextSibling();
                current->setNextSibling(nullAST);

                if( child )
                        stack.push(child);

                current = nullAST;
                // std::cout << "size = " << stack.size() << std::endl;
        }
}
}

class ExprParser extends Parser;
options {  buildAST=true; }
{
public:
   // destroy function...
   void destroy(antlr::RefAST ast);
   // custom destructor...
   virtual ~ExprParser();
}

// rest of exprAST.g from example
----snip----

Usual disclaimers apply, I did not really test this very well, so I
might have introduced an error in the original code from Eugen.

You would have to apply the above pattern to all Parsers/TreeParsers
in your project that build trees.

Cheers,

Ric

From r.morgan at verizonbusiness.com  Fri Nov 10 14:23:58 2006
From: r.morgan at verizonbusiness.com (Rick Morgan)
Date: Fri, 10 Nov 2006 15:23:58 -0700
Subject: [antlr-interest] String size limit and how to free memory
 real-time?
In-Reply-To: <bc607a4e0611101350y25059b85r8dd78cf56f3d7b25@mail.gmail.com>
Message-ID: <003501c70516$ee0ae7e0$c28522a6@mcilink.com>

Thanks Ric,

it confirms what I thought.

appreciate the link and code too,
Rick




From rschulz at sonic.net  Fri Nov 10 16:58:50 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 10 Nov 2006 16:58:50 -0800
Subject: [antlr-interest] Seeking jEdit Mode Definition for ANTLR v3.0
Message-ID: <200611101658.50703.rschulz@sonic.net>

Hi,

I'm very new to ANTLR, having decided to use it for a new project after 
having used JavaCC for several years.

I am also a jEdit user and would like to know if anyone has created a 
jEdit mode definition that reflects the language changes in ANTLR 3.0. 
(A jEdit mode is a specification for how to highlight and auto-indent a 
particular language.)

If there's something out there, please point me to it.


Thanks.

Randall Schulz

From parrt at cs.usfca.edu  Fri Nov 10 17:15:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 10 Nov 2006 17:15:21 -0800
Subject: [antlr-interest] Seeking jEdit Mode Definition for ANTLR v3.0
In-Reply-To: <200611101658.50703.rschulz@sonic.net>
References: <200611101658.50703.rschulz@sonic.net>
Message-ID: <3EDAE8F3-E333-42C4-8083-87B505C4C696@cs.usfca.edu>

Hi Randall,

You'll enjoy ANTLRWorks:

http://www.antlr.org/works

New version coming shortly (next week).

Ter
On Nov 10, 2006, at 4:58 PM, Randall R Schulz wrote:

> Hi,
>
> I'm very new to ANTLR, having decided to use it for a new project  
> after
> having used JavaCC for several years.
>
> I am also a jEdit user and would like to know if anyone has created a
> jEdit mode definition that reflects the language changes in ANTLR 3.0.
> (A jEdit mode is a specification for how to highlight and auto- 
> indent a
> particular language.)
>
> If there's something out there, please point me to it.
>
>
> Thanks.
>
> Randall Schulz


From rschulz at sonic.net  Fri Nov 10 18:33:28 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 10 Nov 2006 18:33:28 -0800
Subject: [antlr-interest] Seeking jEdit Mode Definition for ANTLR v3.0
In-Reply-To: <3EDAE8F3-E333-42C4-8083-87B505C4C696@cs.usfca.edu>
References: <200611101658.50703.rschulz@sonic.net>
	<3EDAE8F3-E333-42C4-8083-87B505C4C696@cs.usfca.edu>
Message-ID: <200611101833.29012.rschulz@sonic.net>

Terence,

On Friday 10 November 2006 17:15, Terence Parr wrote:
> Hi Randall,
>
> You'll enjoy ANTLRWorks:

I have it installed and am using it to explore and validate my grammars 
(as well as using CLI to compile them), but I'm reluctant to do major 
editing in something other than my favorite editor.

I use jEdit for all my major editing (and Vim for some things for which 
its global editing suits me better). In contrast, I use Eclipse for 
quickly fixing Java coding errors and <oXygen> for editing XML schemas 
and, I expect, ANTLRworks for ANTLR-specific activities.

The thing is, purpose-built editors such as ANTLRworks and <oXygen> 
emphasize their domain and not general-purpose editing. As such, they 
usually disappoint me (in the editing department) while proving very 
productivity-enhancing w.r.t. to their domain. That's why I split my 
activities between editing in jEdit and various domain-specific 
activities in the special-purpose tools.

So I'd still like to have a syntax mode for ANTLR (v3--there is a v2.x 
one already), and if nothing turns up, I may try creating one myself, 
though it's rather arcane and I have little experience with it and am a 
total newbie to ANTLR...


> http://www.antlr.org/works
>
> New version coming shortly (next week).

I've got it set to check daily.


> Ter


Randall Schulz

From lgcraymer at yahoo.com  Fri Nov 10 22:23:51 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 10 Nov 2006 22:23:51 -0800 (PST)
Subject: [antlr-interest] TreeWalker and AST Transformation
In-Reply-To: <455440C3.9080107@gmx.net>
Message-ID: <3101.55972.qm@web55901.mail.re3.yahoo.com>

Jens--

That should not happen; take a look at the generated
code for pr_StepletBody and see if it makes sense.

--Loring

--- Jens Br?uer <mailists at gmx.net> wrote:

> Dear Loring, Dear Antlr-Intrest
> 
> thanks a lot for your answer. Seems as i made a
> mistake when writing the
> mail.
> In contrast to what i wrote, the problem is, that
> before transformation
> a _StepletBody_ has multiple StreamStatements as
> children. Only the
> first child (aka StreamStatement) survives a walk
> with the TreeWalker.
> Antlr version is 2.7.7.
> 
> >> pr_StepletBody
> >> 	:
> >> 	#(StepletBody (pr_StreamStatement)*)
> >> 	;
> >>
> >> pr_StreamStatement
> >> 	{ StringBuffer s;}
> >> 	:
> >> 	#(StreamStatement
> >> 		(
> >> 			pr_SimpleStreamStatement
> >> 			| pr_MultiStreamStatement
> >> 			| pr_TimeStreamStatement
> >> 			| pr_StreamStatmntWithDefault
> >> 			| pr_StepletInvokation
> >>
> >> 		)
> >> 	)
> >> 	;
> 
> Any hints ?
> 
> Greetings, Jens
> 
> 
> Loring Craymer wrote:
> > Jens--
> > 
> > The problem is that you are only looking for a
> single
> > child; change the child subgroup to a closure
> > 
> > pr_StreamStatement
> >  	{ StringBuffer s;}
> >  	:
> >  	#(StreamStatement
> >  		(
> >  			pr_SimpleStreamStatement
> >  			| pr_MultiStreamStatement
> >  			| pr_TimeStreamStatement
> >  			| pr_StreamStatmntWithDefault
> >  			| pr_StepletInvokation
> >  
> >  		)+   // CHANGED from ) to )+
> >  	)
> >  	;
> > 
> > and everything should work.
> > 
> > --Loring
> > 
> > 
> > --- Jens Braeuer <mailists at gmx.net> wrote:
> > 
> >> Dear TreeTransformation-Experts,
> >>
> >> i've got a problem transforming an AST using a
> >> TreeWalker, which i was
> >> unable to solve using google, antlr-doc and the
> >> mailinglist archive. :-)
> >>
> >> I currently work on a small code generation
> project,
> >> which involves
> >> TreeWalkers to modify a AST (so buildAST is
> true).
> >>
> >> The problem is, that _before_ using the
> TreeParser a
> >> StreamStatement has
> >> _multiple_ children whereas after using the
> >> TreeParser only the first
> >> child survives. I used included ASTFrame to look
> at
> >> the results.
> >>
> >> Any hints on how i have to modify the grammar so
> all
> >> children are included
> >> in the output-tree ?
> >>
> >>
> >> TreeWalker grammar snipet:
> >> -----
> >> pr_StepletBody
> >> 	:
> >> 	#(StepletBody (pr_StreamStatement)*)
> >> 	;
> >>
> >> pr_StreamStatement
> >> 	{ StringBuffer s;}
> >> 	:
> >> 	#(StreamStatement
> >> 		(
> >> 			pr_SimpleStreamStatement
> >> 			| pr_MultiStreamStatement
> >> 			| pr_TimeStreamStatement
> >> 			| pr_StreamStatmntWithDefault
> >> 			| pr_StepletInvokation
> >>
> >> 		)
> >> 	)
> >> 	;
> >> ---------
> >>
> >>
> >> Greetings, Jens Braeuer
> >>
> >>
> >>
> >>
> >>
> > 
> > 
> > 
> > 
> >  
> >
>
____________________________________________________________________________________
> > Yahoo! Music Unlimited
> > Access over 1 million songs.
> > http://music.yahoo.com/unlimited
> > 
> 
> 
> -- 
> Mit Unix zu arbeiten, ist wie mit einem wuerdigen
> Gegner zu ringen. Mit
> Windows zu arbeiten, ist wie ein kleines heulendes
> Kind anzugreifen,
> dass eine geladene .38er in der Hand hat.
> 
> 
> 



 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com

From mydiksha at yahoo.com  Sat Nov 11 16:25:19 2006
From: mydiksha at yahoo.com (Diksha singh)
Date: Sat, 11 Nov 2006 16:25:19 -0800 (PST)
Subject: [antlr-interest] V2 to V3 conversion
Message-ID: <347042.1019.qm@web55905.mail.re3.yahoo.com>

Hello,
   
  I am to re-write a v2 grammar to v3. I have just no clue how to proceed with that. Would really appreciate any suggestions.
   
  Thanks,
  Diksha

 
---------------------------------
Cheap Talk? Check out Yahoo! Messenger's low PC-to-Phone call rates.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061111/f29475d3/attachment.html 

From parrt at cs.usfca.edu  Sat Nov 11 16:35:30 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 11 Nov 2006 16:35:30 -0800
Subject: [antlr-interest] V2 to V3 conversion
In-Reply-To: <347042.1019.qm@web55905.mail.re3.yahoo.com>
References: <347042.1019.qm@web55905.mail.re3.yahoo.com>
Message-ID: <A1346C2B-3174-4859-AF1B-84006431D6D7@cs.usfca.edu>

hi. start with v2 to v3 converter on site. :)  see doc etc...  Did  
you look before posting?
Ter
On Nov 11, 2006, at 4:25 PM, Diksha singh wrote:

> Hello,
>
> I am to re-write a v2 grammar to v3. I have just no clue how to  
> proceed with that. Would really appreciate any suggestions.
>
> Thanks,
> Diksha
>
> Cheap Talk? Check out Yahoo! Messenger's low PC-to-Phone call rates.


From rschulz at sonic.net  Sun Nov 12 08:10:16 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 08:10:16 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0
Message-ID: <200611120810.16439.rschulz@sonic.net>

Hi,

I'm having a very perplexing problem with a grammar I'm developing for 
ANTLR v3.0. Since this is my first foray in ANTLR and since version 3.0 
is still in beta, I'm uncertain whether the problem is with my 
understanding or the software.

Before I try to create an excerpt of the grammar to post here, I thought 
I'd describe the problem roughly and ask for general suggestions on 
what might be the problem. If that doesn't yield any progress, I'll 
make a longer, more detailed post.


So here's the thing. My grammar, as usual, has both lexical rules and 
grammar productions (sorry if I'm using the wrong terminology).

When I compile the grammar, I get this diagnostic:

ANTLR Parser Generator   Early Access Version 3.0b4 (??, 2006)  
1989-2006
TSTPv3209.g:1099:1: The following token definitions are unreachable: 
AtomicWord,FileName,SingleQuoted

These are lines 1098-1100:

SingleQuoted
    :   '\'' ( ~( '\'' | '\\' ) | '\\' '\'' | '\\' '\\' )* '\''
    ;


Now, I've looked very closely at my grammar and there most certainly are 
chains of derivation in the production rules from the start symbol to 
AtomicWord. Furthermore, when I sumbit input to the parser, it fails at 
precisely the point where it should recognize an AtomicWord, issuing 
this diagnostic (line breaks added by me):

[main,
 tptpUnit,
 tptpInput,
 annotatedFormula,
 fofAnnotated,
 firstOrderFormula,
 unitaryFormula,
 firstOrderFormula,
 unitaryFormula,
 quantifiedFormula,
 unitaryFormula,
 unaryFormula,
 unitaryFormula]:
line 29:14 state 0 (decision=11) no viable alt;
 token=[@49,1289:1290='gt',<4>,29:14]

The input does include the characters 'g' and 't' at columns 14 and 15 
of line 29. The rule unitaryFormula includes in its four alternatives 
one which derives, through a fairly long chain, an instance of 
AtomicWord. None of those derivations appear at the point the parse 
failure is reported.


The pertinent portion of the grammar, lines 1288-1291:

fragment
Alphanumeric
    :   ( LowerAlpha | UpperAlpha | Numeric | '_' )
    ;


This chain of derivations is correct up to the point that the input 
token 'gt' is rejected. That sequence, 'gt', should be matched by 
AtomicWord.

I have scrutinized my grammar both in its source form and in ANTLRworks, 
and I can see no reason for this parse failure.


I'd very much welcome any suggestions on what might be going wrong or 
how I might diagnose the problem. If the suggestion is to send a more 
comprehensive report, please give me some idea of what's the best way 
to construct and submit it.


Thanks.


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 12 08:38:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 12 Nov 2006 08:38:31 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0
In-Reply-To: <200611120810.16439.rschulz@sonic.net>
References: <200611120810.16439.rschulz@sonic.net>
Message-ID: <322462CE-5976-4E30-B0FA-89319CA74261@cs.usfca.edu>


On Nov 12, 2006, at 8:10 AM, Randall R Schulz wrote:

> Hi,
>
> I'm having a very perplexing problem with a grammar I'm developing for
> ANTLR v3.0. Since this is my first foray in ANTLR and since version  
> 3.0
> is still in beta, I'm uncertain whether the problem is with my
> understanding or the software.
>
> Before I try to create an excerpt of the grammar to post here, I  
> thought
> I'd describe the problem roughly and ask for general suggestions on
> what might be the problem. If that doesn't yield any progress, I'll
> make a longer, more detailed post.
>
>
> So here's the thing. My grammar, as usual, has both lexical rules and
> grammar productions (sorry if I'm using the wrong terminology).
>
> When I compile the grammar, I get this diagnostic:
>
> ANTLR Parser Generator   Early Access Version 3.0b4 (??, 2006)
> 1989-2006
> TSTPv3209.g:1099:1: The following token definitions are unreachable:
> AtomicWord,FileName,SingleQuoted

Most likely you need "fragment" in front of some rules (the ones that  
are only used by other lexical rules).

Ter

From rschulz at sonic.net  Sun Nov 12 08:44:44 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 08:44:44 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <200611120810.16439.rschulz@sonic.net>
References: <200611120810.16439.rschulz@sonic.net>
Message-ID: <200611120844.44317.rschulz@sonic.net>

Hello again,

I've found what appears to be a genuine anomaly. Using ANTLRworks, I've 
shown that the AtomicWord lexical rule works properly when explicitly 
applied to inputs that it describes.

When applied to the production rule "plainTerm" that directly addresses 
AtomicWord, ANTLRworks reports "MismatchedTokenException(4!=6)" as the 
direct descendant of plainTerm:

- [plainTerm]
  [MismatchedTokenException(4!=6)]


When the test input (the two characters "gt") is applied to AtomicWord, 
the expected derivation occurs. but when the same input is submitted to 
plainTerm:

plainTerm
    :    AtomicWord ( '(' arguments ')' ) ?


... the aforementioned error occurs.


Surely this is a bug? Or am I confused about something?


Here are the pertinent rules:


plainTerm
    :    AtomicWord ( '(' arguments ')' ) ?

AtomicWord
    :   LowerWord
    ;

fragment
LowerWord
    :   LowerAlpha ( Alphanumeric * )
    ;

fragment
Alphanumeric
    :   ( LowerAlpha | UpperAlpha | Numeric | '_' )
    ;

fragment
LowerAlpha
    :   ( 'a'..'z' )
    ;

fragment
UpperAlpha
    :   ( 'A'..'Z' )
    ;

fragment
Numeric
    :   ( '0'..'9' )
    ;



Am I missing something, or is this some kind of parser (or parser 
generator) error?


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 12 08:46:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 12 Nov 2006 08:46:27 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <200611120844.44317.rschulz@sonic.net>
References: <200611120810.16439.rschulz@sonic.net>
	<200611120844.44317.rschulz@sonic.net>
Message-ID: <08AFD553-627A-4ECA-924E-30F2F1EA1C9C@cs.usfca.edu>


On Nov 12, 2006, at 8:44 AM, Randall R Schulz wrote:
> plainTerm
>     :    AtomicWord ( '(' arguments ')' ) ?
>
> AtomicWord
>     :   LowerWord
>     ;

These rules are a problem.  AtomicWord is unreachable as both rules  
can match it's input.  You will never see it in the parser.
Ter

From rschulz at sonic.net  Sun Nov 12 08:46:54 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 08:46:54 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0
In-Reply-To: <322462CE-5976-4E30-B0FA-89319CA74261@cs.usfca.edu>
References: <200611120810.16439.rschulz@sonic.net>
	<322462CE-5976-4E30-B0FA-89319CA74261@cs.usfca.edu>
Message-ID: <200611120846.54375.rschulz@sonic.net>

Terence,

On Sunday 12 November 2006 08:38, Terence Parr wrote:
> ...
>
> > When I compile the grammar, I get this diagnostic:
> >
> > ANTLR Parser Generator   Early Access Version 3.0b4 (??, 2006)
> > 1989-2006
> > TSTPv3209.g:1099:1: The following token definitions are
> > unreachable: AtomicWord,FileName,SingleQuoted
>
> Most likely you need "fragment" in front of some rules (the ones that
> are only used by other lexical rules).

I'm pretty sure I have the pertinent lexical rules flagged as fragments. 
See the post that I was submitting just as your reply came in.


> Ter


Randy

From rschulz at sonic.net  Sun Nov 12 08:54:53 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 08:54:53 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <08AFD553-627A-4ECA-924E-30F2F1EA1C9C@cs.usfca.edu>
References: <200611120810.16439.rschulz@sonic.net>
	<200611120844.44317.rschulz@sonic.net>
	<08AFD553-627A-4ECA-924E-30F2F1EA1C9C@cs.usfca.edu>
Message-ID: <200611120854.53300.rschulz@sonic.net>

Terence,

On Sunday 12 November 2006 08:46, Terence Parr wrote:
> On Nov 12, 2006, at 8:44 AM, Randall R Schulz wrote:
> > plainTerm
> >
> >     :    AtomicWord ( '(' arguments ')' ) ?
> >
> > AtomicWord
> >
> >     :   LowerWord
> >
> >     ;
>
> These rules are a problem.  AtomicWord is unreachable as both rules
> can match it's input.  You will never see it in the parser.

I'm afraid I don't get it. Which "both" are you referring to? Atomic 
word is a basic symbol token. It's used in several grammar productions, 
including, of course, plainTerm. How does one structure their grammars 
to capture this sharing? How do you stratify a mixed grammar into 
non-overlapping lexical and syntactic portions?

Looking at the sample Java grammar (examples-v3/java/java.g), I seem to 
see exactly these kinds of rules in the same relationship.


> Ter


Randall Schulz

From rschulz at sonic.net  Sun Nov 12 09:05:39 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 09:05:39 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <08AFD553-627A-4ECA-924E-30F2F1EA1C9C@cs.usfca.edu>
References: <200611120810.16439.rschulz@sonic.net>
	<200611120844.44317.rschulz@sonic.net>
	<08AFD553-627A-4ECA-924E-30F2F1EA1C9C@cs.usfca.edu>
Message-ID: <200611120905.40049.rschulz@sonic.net>

Terence,

On Sunday 12 November 2006 08:46, Terence Parr wrote:
> On Nov 12, 2006, at 8:44 AM, Randall R Schulz wrote:
> > plainTerm
> >
> >     :    AtomicWord ( '(' arguments ')' ) ?
> >
> > AtomicWord
> >
> >     :   LowerWord
> >
> >     ;
>
> These rules are a problem.  AtomicWord is unreachable as both rules
> can match it's input.  You will never see it in the parser.
> Ter

Oh, I get it. You cannot (meaningfully) have lexical rules like

AtomicWord
    :    LowerWord
    ;


Because the replacement (or one alternative, anyway) is 
indistinguishable from the rule head. The lexer generator has to pick 
one token type to generate and in this case, LowerWord was chosen, 
essentially "stranding" any parser rule that refers to AtomicWord.

Out of curiosity, why do production such as this work for syntax rules 
but not for lexical rules?


I've noticed that when I have a lexical rule like this:

Dot: '.';

in addition to literal references to '.' in the grammar. In such cases, 
ANTLRworks displays the literal '.' instances as the named lexical 
rule "Dot."

Perhaps this identification can be used to collapse lexer rules such as 
my ill-formed ones?


Randy

From parrt at cs.usfca.edu  Sun Nov 12 09:08:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 12 Nov 2006 09:08:19 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <200611120854.53300.rschulz@sonic.net>
References: <200611120810.16439.rschulz@sonic.net>
	<200611120844.44317.rschulz@sonic.net>
	<08AFD553-627A-4ECA-924E-30F2F1EA1C9C@cs.usfca.edu>
	<200611120854.53300.rschulz@sonic.net>
Message-ID: <17C86851-DB93-4996-97DE-DAB45FE8E842@cs.usfca.edu>


On Nov 12, 2006, at 8:54 AM, Randall R Schulz wrote:

> Terence,
>
> On Sunday 12 November 2006 08:46, Terence Parr wrote:
>> On Nov 12, 2006, at 8:44 AM, Randall R Schulz wrote:
>>> plainTerm
>>>
>>>     :    AtomicWord ( '(' arguments ')' ) ?
>>>
>>> AtomicWord
>>>
>>>     :   LowerWord
>>>
>>>     ;
>>
>> These rules are a problem.  AtomicWord is unreachable as both rules
>> can match it's input.  You will never see it in the parser.
>
> I'm afraid I don't get it. Which "both" are you referring to? Atomic
> word is a basic symbol token.

oh, plainTerm is a parser rule...sorry...  yeah that part is ok then.

Hmm....the rules look ok.  What is your entire input to the rule  
plainTerm?  Have you run AW to see what that parser rule accepts?   
What tokens are 4 and 6?  Have you stepped through with a debugger?

Ter

From rschulz at sonic.net  Sun Nov 12 09:39:43 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 09:39:43 -0800
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <17C86851-DB93-4996-97DE-DAB45FE8E842@cs.usfca.edu>
References: <200611120810.16439.rschulz@sonic.net>
	<200611120854.53300.rschulz@sonic.net>
	<17C86851-DB93-4996-97DE-DAB45FE8E842@cs.usfca.edu>
Message-ID: <200611120939.43551.rschulz@sonic.net>

Terence,

On Sunday 12 November 2006 09:08, Terence Parr wrote:
>...
>
> > I'm afraid I don't get it. Which "both" are you referring to?
> > Atomic word is a basic symbol token.
>
> oh, plainTerm is a parser rule...sorry...  yeah that part is ok then.
>
> Hmm....the rules look ok.  What is your entire input to the rule
> plainTerm?  Have you run AW to see what that parser rule accepts?
> What tokens are 4 and 6?  Have you stepped through with a debugger?

You can find the complete grammar file and a sample of valid input here:

- <http://64.142.14.4/~rschulz/TSTP.g>
- <http://64.142.14.4/~rschulz/MED001+0.ax>

The grammar has changed a bit since I wrote the original message here, 
but the problems remain.


I don't know how to use the debugger, and there appear to be significant 
discrepancies between the ANTLRworks User's Guide 
(<http://www.antlr.org/works/doc/antlrworks.pdf>) and the program as it 
presents itself on my system. When I issue the "Debug..." command, I 
get an alert stating "Compiler Exception: ClassNotFoundException: 
com.sun.tools.javac.Main". I do have a full JDK installed, of course. 
I'm using SuSE Linux 10.0 and Sun's Java 1.5.0_07.


> Ter


Randy

From lgcraymer at yahoo.com  Sun Nov 12 12:05:31 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 12 Nov 2006 12:05:31 -0800 (PST)
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <200611120905.40049.rschulz@sonic.net>
Message-ID: <175580.28071.qm@web55909.mail.re3.yahoo.com>

Randy--

The "combined" nature of combined grammars is pretty
much just syntactic sugar--the parser and lexer are
still generated as distinct classes (there are some
advantages for token naming and synchronization of
token types between lexer and parser, but these are
minor).  Lexers are still behaviorally different from
parsers in that there is a master mTokens rule that
recognizes tokens and is the concatenation of all
non-fragment lexer rules as alternatives.  Parser
rules are called in context; lexer rules have no
context (just because you have matched an "A" token in
the lexer, there is no reason to expect "B" or any
other token; in the parser, A is matched as part of a
sequence--A D E perhaps--and not in isolation.

It is probably best to think of the lexer as a
separate entity--that will help you avoid these
particular traps.

--Loring

--- Randall R Schulz <rschulz at sonic.net> wrote:

> Terence,
> 
> On Sunday 12 November 2006 08:46, Terence Parr
> wrote:
> > On Nov 12, 2006, at 8:44 AM, Randall R Schulz
> wrote:
> > > plainTerm
> > >
> > >     :    AtomicWord ( '(' arguments ')' ) ?
> > >
> > > AtomicWord
> > >
> > >     :   LowerWord
> > >
> > >     ;
> >
> > These rules are a problem.  AtomicWord is
> unreachable as both rules
> > can match it's input.  You will never see it in
> the parser.
> > Ter
> 
> Oh, I get it. You cannot (meaningfully) have lexical
> rules like
> 
> AtomicWord
>     :    LowerWord
>     ;
> 
> 
> Because the replacement (or one alternative, anyway)
> is 
> indistinguishable from the rule head. The lexer
> generator has to pick 
> one token type to generate and in this case,
> LowerWord was chosen, 
> essentially "stranding" any parser rule that refers
> to AtomicWord.
> 
> Out of curiosity, why do production such as this
> work for syntax rules 
> but not for lexical rules?
> 
> 
> I've noticed that when I have a lexical rule like
> this:
> 
> Dot: '.';
> 
> in addition to literal references to '.' in the
> grammar. In such cases, 
> ANTLRworks displays the literal '.' instances as the
> named lexical 
> rule "Dot."
> 
> Perhaps this identification can be used to collapse
> lexer rules such as 
> my ill-formed ones?
> 
> 
> Randy
> 



 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com

From canterburry at gmail.com  Sun Nov 12 13:50:39 2006
From: canterburry at gmail.com (HC)
Date: Sun, 12 Nov 2006 15:50:39 -0600
Subject: [antlr-interest] Newbe lexer question
Message-ID: <b7e28d060611121350t12e65118ube2fc4209c7013c4@mail.gmail.com>

Hey all,

I am very new to Antlr and I am evaluating it for a project. To begin, I
have two quick lexer questions:

1. Can (an what would a pseudo lexer rule be) antlr handle the following
scenario easily:

Let's say my lexer needs to be able to tokenize the following strings:

a) "car"
b) "bus"
c) "bus car"

It is fairly easy to write a rule for antlr that is smart enough to
recognize the string "bus car" as token C and not as token B followed by
token A?

2. Can I pass strings to be tokenized into the lexer from outside the
grammar file?

Let's say I have lexer rule called WORD which may be any character sequence
which I specify externally. I am looking to maintain an external dictionary
of words which are valid WORD tokens which can be expanded and reduced by a
user without modifying the grammar file.

Am I using Antlr in the right context here?

Thanks
-HC
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061112/15db9482/attachment.html 

From kroepke at classdump.org  Sun Nov 12 14:12:07 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 12 Nov 2006 23:12:07 +0100
Subject: [antlr-interest] Newbe lexer question
In-Reply-To: <b7e28d060611121350t12e65118ube2fc4209c7013c4@mail.gmail.com>
References: <b7e28d060611121350t12e65118ube2fc4209c7013c4@mail.gmail.com>
Message-ID: <684DDE8C-EFE4-4DFD-AF7F-D85528336CDF@classdump.org>

Hi!

On 12. Nov 2006, at 22:50 , HC wrote:

> 1. Can (an what would a pseudo lexer rule be) antlr handle the  
> following
> scenario easily:
>
> Let's say my lexer needs to be able to tokenize the following strings:
>
> a) "car"
> b) "bus"
> c) "bus car"
>
> It is fairly easy to write a rule for antlr that is smart enough to
> recognize the string "bus car" as token C and not as token B  
> followed by
> token A?

Yes, this is no problem, although it looks a bit ugly at times ;)
If you do not have a whole lot of those cases it shouldn't be a concern.
I.e. you could solve this with syntactic predicates.

> 2. Can I pass strings to be tokenized into the lexer from outside the
> grammar file?
>
> Let's say I have lexer rule called WORD which may be any character  
> sequence
> which I specify externally. I am looking to maintain an external  
> dictionary
> of words which are valid WORD tokens which can be expanded and  
> reduced by a
> user without modifying the grammar file.

Am I understanding you correctly, in that you want to have a dynamic  
lexer rule, or
do you want this:
I could imagine to do this is to let the lexer recognize the said  
strings
as WORDs and then use a custom action to look up the token's text in  
your external
dictionary. You could indicate a recognition error to ANTLR and try  
error recovery
(like ANTLR does internally) or simply fail.
If you want the latter, this is easy. Dynamically changing lexer  
rules isn't because
that would affect lookahead.
Another way could be to employ syntactic predicates, but it really  
depends on what you
are trying to achieve.

> Am I using Antlr in the right context here?

If you are doing language recognition, yes ;)

HTH,

-k
-- 
Kay R?pke
http://classdump.org/





From jbb at acm.org  Sun Nov 12 15:04:33 2006
From: jbb at acm.org (John B. Brodie)
Date: Sun, 12 Nov 2006 18:04:33 -0500
Subject: [antlr-interest] Grammar Perplexity in v3.0 (More)
In-Reply-To: <200611120939.43551.rschulz@sonic.net> (message from Randall R
	Schulz on Sun, 12 Nov 2006 09:39:43 -0800)
References: <200611120810.16439.rschulz@sonic.net>
	<200611120854.53300.rschulz@sonic.net>
	<17C86851-DB93-4996-97DE-DAB45FE8E842@cs.usfca.edu>
	<200611120939.43551.rschulz@sonic.net>
Message-ID: <E1GjONN-0007Wh-00@gecko>

>You can find the complete grammar file and a sample of valid input here:
>
>- <http://64.142.14.4/~rschulz/TSTP.g>
>- <http://64.142.14.4/~rschulz/MED001+0.ax>
>
>The grammar has changed a bit since I wrote the original message here, 
>but the problems remain.

When I run org.antlr.Tool on the above TSTP.g file I get (this from the
command line and also similiar from within AntlrWorks) this message:

ANTLR Parser Generator   Early Access Version 3.0b4 (??, 2006)  1989-2006
TSTP.g:943:21: Decision can match input such as "':' {DistinctObject, LowerWord..SingleQuoted, '['}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input


Sorry that I already deleted your previous e-mails so am not sure whether
or not this is your original error or not.


Notice that the error is complaining about an ambiguity on ':' when it is
followed by one of set the 4 tokens in the {Di...['} part of the message.

So we need to look for uses of ':' to discover the source of the ambiguity.
And we find:

parentInfo : source ( ':' parentDetail )? ;
source : generalTerm ;
generalTerm : generalData ( ':' generalTerm )? | generalList ;

and we quickly realize that, when parsing a parentInfo and encounter a ':', we
are unable to determine whether we have finished the `generalTerm` comprising
a `source` and are moving onto parsing a `parentDetail` or whether we are
still inside the `source`s `generalTerm` and are about to recurse.



I also seem to recall that part of your original request for help was the
inability for the `plainTerm` rule to recognize the string "gt". I think you
listed the relevant rules in your original e-mail --- which I deleted already
-- so here they are again:

plainTerm : atomicWord ( '(' arguments ')' ) ? ;
atomicWord : LowerWord | SingleQuoted ;
SingleQuoted : '\'' ( ~( '\'' | '\\' ) | '\\' '\'' | '\\' '\\' )* '\'' ;
fragment LowerWord : LowerAlpha Alphanumeric * ;
^^^^^^^^

notice that you have specified LowerWord to be a fragment, a component of
other Tokens and *not* a Token in its own right. LowerWord will never be
emitted as a Token by your lexer (in its current form).

Antlr should give you an error for this, saying that you have referenced a
lexical fragment from within a parser rule.

and since "gt" is a LowerWord, which the parser can never see, a syntax error
is generated.

one way to fix this situation - where you have a lexer rule that is both a
fragment and a token - is to use a trampoline:

LowerWord : LW ; // use this in parser rules
LW : LowerAlpha Alphanumeric* ; // use this in lexer rules

hope this helps...
   -jbb


From jbb at acm.org  Sun Nov 12 15:38:08 2006
From: jbb at acm.org (John B. Brodie)
Date: Sun, 12 Nov 2006 18:38:08 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference to
	lexical fragment
Message-ID: <E1GjOts-0007fF-00@gecko>

Sorry if this is a duplicate.

This incorrect grammar draws no error report from org.antlr.Tool

grammar t;

@members {
   private static final String [] x = new String[]{
       "b", // no syntax error
       "c"  // draws syntax error
   };
   public static void main(String[] args) {
      for (int i=0; i < x.length; ++i) {
         try {
            tLexer lexer = new tLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);
            t parser = new t(tokens);
            parser.startRule();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

startRule : a EOF;
a : B | C ; // reference to a fragment, C
B : 'b' ;
fragment C : 'c' ; // not visible to parser

From kroepke at classdump.org  Sun Nov 12 15:45:31 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 00:45:31 +0100
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
	to lexical fragment
In-Reply-To: <E1GjOts-0007fF-00@gecko>
References: <E1GjOts-0007fF-00@gecko>
Message-ID: <A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>


On 13. Nov 2006, at 0:38 , John B. Brodie wrote:

> Sorry if this is a duplicate.
>
> This incorrect grammar draws no error report from org.antlr.Tool

Neither should it, IMHO.

Yes, it will fail to recognize just 'c' as input, but ANTLR can't be  
certain that you didn't
have any actions that explicitely set the token type to C in some  
other rule.
Throwing an error here would mean that you couldn't reference any  
tokens from a @tokens
section, for instance.

cheers,

-k






From jbb at acm.org  Sun Nov 12 16:21:54 2006
From: jbb at acm.org (John B. Brodie)
Date: Sun, 12 Nov 2006 19:21:54 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
 to lexical fragment
In-Reply-To: <A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org> (message
	from Kay Roepke on Mon, 13 Nov 2006 00:45:31 +0100)
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
Message-ID: <E1GjPaE-00026g-00@gecko>

on Mon, 13 Nov 2006 00:45:31 +0100, Kay Roepke wrote:

>On 13. Nov 2006, at 0:38 , John B. Brodie wrote:
>
>> Sorry if this is a duplicate.
>>
>> This incorrect grammar draws no error report from org.antlr.Tool
>
>Neither should it, IMHO.
>
>Yes, it will fail to recognize just 'c' as input, but ANTLR can't be certain
>that you didn't have any actions that explicitely set the token type to C in
>some other rule.

i have declared C to be a fragment, doesn't fragment mean "part of" ?  aren't
fragments meant to be internal to the lexer.  does it make sense for C to be an
internal "part of" one token and then be the whole of (via set token type) of
another token ?

>Throwing an error here would mean that you couldn't reference any tokens from
>a @tokens section, for instance.

(i am not aware of a @tokens section, to you mean tokens{...} (no @) ?)

sounds like an unfortunate mixing of functionality between fragment and the
tokens{...} section

From kroepke at classdump.org  Sun Nov 12 17:16:26 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 02:16:26 +0100
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
	to lexical fragment
In-Reply-To: <E1GjPaE-00026g-00@gecko>
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
Message-ID: <B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>


On 13. Nov 2006, at 1:21 , John B. Brodie wrote:

> i have declared C to be a fragment, doesn't fragment mean "part  
> of" ?  aren't
> fragments meant to be internal to the lexer.  does it make sense  
> for C to be an
> internal "part of" one token and then be the whole of (via set  
> token type) of
> another token ?

I didn't mean the "token C" but the "token type C". I could do the  
following:

fragment
C	: 'c'
	;
B	: 'b' ('a' { $type = C;})?

and it would be perfectly legal (and maybe even sensible...;))

>> Throwing an error here would mean that you couldn't reference any  
>> tokens from
>> a @tokens section, for instance.
>
> (i am not aware of a @tokens section, to you mean tokens{...} (no  
> @) ?)

yes, t'was a typo

> sounds like an unfortunate mixing of functionality between fragment  
> and the
> tokens{...} section

fragment only means that it will not be directly called from  
nextToken (and certain
stuff isn't done in a fragment rule, but that's for optimization only).
It is still a lexer rule and still produces an entry in the token  
vocabulary, thus its
token type can be used and referred to in parsers.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Sun Nov 12 17:37:33 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 17:37:33 -0800
Subject: [antlr-interest] Interpretation of Parser Rule w/ Alternative Lexer
	RHS
Message-ID: <200611121737.33478.rschulz@sonic.net>

Hi,

I have a question about the meaning of a rule such as this:

name
	:	LowerWord
	|	SingleQuoted
	|	UnsignedInteger
	;


LowerWord is an initial lower-case followed by any number (including 
zero) alphanumeric characters. Singlequoted is a classic quoted string 
using single quote marks. Unsigned integer is an integer with no sign, 
i.e. one or more decimal digits.

When I look at this rule in ANTLRworks Syntax Diagram view, it shows:

    +--------------------------+
----|LowerWord..UnsignedInteger|---
    +--------------------------+

I know how to interpret 'a'..'z' in these diagrams (I think) but not 
this notation using lexer rule names.


When I use the interpreter in ANTLRworks it will not match an input that 
is a match for LowerWord ("irreflexivity_gt", e.g.).

However, the same input _is_ matched successfully against LowerWord 
directly (in the ANTLRworks interpreter).

So I'm confused about how lexer rules are interpreted when reference 
from parser rules. How do I write a parser rule that can accept one of 
several lexeme types?


Can someone clarify this?

Thanks.


Randall Schulz

From jbb at acm.org  Sun Nov 12 17:44:07 2006
From: jbb at acm.org (John B. Brodie)
Date: Sun, 12 Nov 2006 20:44:07 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
 to lexical fragment
In-Reply-To: <B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org> (message
	from Kay Roepke on Mon, 13 Nov 2006 02:16:26 +0100)
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
Message-ID: <E1GjQrn-0004j7-00@gecko>

>I didn't mean the "token C" but the "token type C". I could do the  
>following:
>
>fragment
>C	: 'c'
>	;
>B	: 'b' ('a' { $type = C;})?
>
>and it would be perfectly legal (and maybe even sensible...;))

i must be really stupid (but hopefully we can fix that ;-)

in the above rules, i see that the lexer will recognize a 'c' in the input
stream ---- but never pass that fact up to the parser! is that real?

perhaps you meant something like:

FOO : 'x' C 'y' ;
fragment C : 'c' ; // reference to C in parser is legal
B : 'b' ( 'a' { $type = C; } )? ;

and i am suggesting:

tokens { C; } // reference to C in parser is legal
FOO : 'x' X 'y' ;
fragment X : 'c' ; // reference to X in parser is illegal
B : 'b' ( 'a' { $type = C; } )? ;


From kroepke at classdump.org  Sun Nov 12 17:49:30 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 02:49:30 +0100
Subject: [antlr-interest] Interpretation of Parser Rule w/ Alternative
	Lexer RHS
In-Reply-To: <200611121737.33478.rschulz@sonic.net>
References: <200611121737.33478.rschulz@sonic.net>
Message-ID: <85307423-25A3-4CE5-A124-8D8855876621@classdump.org>

Hi Randall!

On 13. Nov 2006, at 2:37 , Randall R Schulz wrote:

> When I look at this rule in ANTLRworks Syntax Diagram view, it shows:
>
>     +--------------------------+
> ----|LowerWord..UnsignedInteger|---
>     +--------------------------+
>
> I know how to interpret 'a'..'z' in these diagrams (I think) but not
> this notation using lexer rule names.

All tokens get assigned a unique number (the token type). ANTLR uses  
these
internally to represent kinds of tokens (in switch, if, bitsets). If  
it turns
out that LowerWord < SingleQuoted < UnsignedInteger (i.e. their token  
types)
ANTLR represents a test for those as 'LowerWord..UnsignedInteger'.

Can be hard to read if you don't know the tokentypes, but they are  
both in the
generated code, as well as in the .tokens file.

> So I'm confused about how lexer rules are interpreted when reference
> from parser rules. How do I write a parser rule that can accept one of
> several lexeme types?

like you did. it should work, but the actual outcome may depend on  
other rules (i.e.
the lookahead).

> Can someone clarify this?

hard to say without seeing the grammar and sample input that fails to  
be recognized.
could you provide a more detailed example?

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sun Nov 12 18:06:37 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 03:06:37 +0100
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
	to lexical fragment
In-Reply-To: <E1GjQrn-0004j7-00@gecko>
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
	<E1GjQrn-0004j7-00@gecko>
Message-ID: <185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org>


On 13. Nov 2006, at 2:44 , John B. Brodie wrote:

>
> i must be really stupid (but hopefully we can fix that ;-)

i doubt that. the first part, i mean ;)

> in the above rules, i see that the lexer will recognize a 'c' in  
> the input
> stream ---- but never pass that fact up to the parser! is that real?

yeah, totally contrived example and not useful. sorry 'bout that.

> perhaps you meant something like:
>
> FOO : 'x' C 'y' ;
> fragment C : 'c' ; // reference to C in parser is legal
> B : 'b' ( 'a' { $type = C; } )? ;

consider the input:
xcxbba

the lexer would return the following tokens (when you look at their  
type):
FOO B C

> and i am suggesting:
>
> tokens { C; } // reference to C in parser is legal
> FOO : 'x' X 'y' ;
> fragment X : 'c' ; // reference to X in parser is illegal
> B : 'b' ( 'a' { $type = C; } )? ;

this works, but token types C and X will be different.

well, ANTLR treats fragment rules specially, but not *that* specially.
fragment X creates a valid token type even though rule X cannot and  
does not
return a token by itself. OTOH another rule can use that token type  
and set it
manually, thus passing X tokens to the parser.

-k

-- 
Kay R?pke
http://classdump.org/





From foolishewe at hotmail.com  Sun Nov 12 18:27:05 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 13 Nov 2006 02:27:05 +0000
Subject: [antlr-interest] ANTLR3 AST construction with options and
	alternatives
Message-ID: <BAY107-F3464AD85044FF4D8F9F9EAC0F40@phx.gbl>

Hello All:

I've not heard back on a previous question about how to generate AST's.

I have a construct in a grammar that looks something like:

// allows optional override of default version id
versionInfo: (id+=versionId)? (f1+=fieldType1 | f2+=fieldType2 | 
f3+=fieldType3)*
   ->^(VERSIONINFO $id+ $f1+ $f2+ $f3+);

but it doesn't work the way I would like, meaning that I run the debugger 
for a test case that
has well defined ASTs are constructed for some of the fields, but some some 
are not populated.
This debugger halts and won't proceed to construct the VERSIONINFO node, 
although
before I decorated the grammar with action annotations for AST construction, 
the grammar
created a well formed parse tree.   I looked at the wiki  for AST related 
stuff, and
I am still not sure how to fix this problem or if it is a bug in ANTLR3.

Regards:

Bill M.

_________________________________________________________________
Find a local pizza place, music store, museum and more?then map the best 
route!  http://local.live.com?FORM=MGA001


From jbb at acm.org  Sun Nov 12 19:02:34 2006
From: jbb at acm.org (John B. Brodie)
Date: Sun, 12 Nov 2006 22:02:34 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
 to lexical fragment
In-Reply-To: <185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org> (message
	from Kay Roepke on Mon, 13 Nov 2006 03:06:37 +0100)
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
	<E1GjQrn-0004j7-00@gecko>
	<185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org>
Message-ID: <E1GjS5i-0000V2-00@gecko>

>well, ANTLR treats fragment rules specially, but not *that* specially.
>fragment X creates a valid token type even though rule X cannot and
>does not return a token by itself. OTOH another rule can use that
>token type and set it manually, thus passing X tokens to the parser.

and is this a feature or a bug?

i am trying to assert that this is a bug.

from the fact that "fragment X <...snip...> rule X cannot and does not return a
token by itself."

we must conclude that "<...snip...>, thus passing X tokens to the parser."
shall *not* be permitted.

i understand that the current antlr v3 implementation (3.b04) does not
consider references to lexical fragments by the parser as an error.  i am
just trying to assert that this current implementation is problematic.


From kroepke at classdump.org  Sun Nov 12 19:38:33 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 04:38:33 +0100
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
	to lexical fragment
In-Reply-To: <E1GjS5i-0000V2-00@gecko>
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
	<E1GjQrn-0004j7-00@gecko>
	<185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org>
	<E1GjS5i-0000V2-00@gecko>
Message-ID: <802BE6DE-DE76-4526-AB49-5A8B8BEAD957@classdump.org>


On 13. Nov 2006, at 4:02 , John B. Brodie wrote:

>
> and is this a feature or a bug?

this is a feature.

> i am trying to assert that this is a bug.

i realize ;)

> from the fact that "fragment X <...snip...> rule X cannot and does  
> not return a
> token by itself."

differentiate between 'rule X' and...

> we must conclude that "<...snip...>, thus passing X tokens to the  
> parser."
> shall *not* be permitted.

...token type X.

> i understand that the current antlr v3 implementation (3.b04) does not
> consider references to lexical fragments by the parser as an  
> error.  i am
> just trying to assert that this current implementation is problematic.

This has not been changed in the upcoming b5.

The key point to see here is that the parser does not "call" a lexer  
rule!
It merely reads from a token stream that is calling nextToken() in  
the lexer.
In which way the lexer ends up with a token to return is unspecified  
and this is a GoodThing(tm).
It means that you could use a lexer with a different internal  
structure (say different
rules) or even a non-ANTLR generated lexer. You could write a simple  
wrapper around flex
or hand-code a lexer, if you have special needs, such as performance.

So, even if it might look as the parser is calling rule X in the  
lexer class, it's not!
The parser isn't concerned with the lexer rules at all, it's just  
interested in the type
of a particular token (which is also called X). Maybe this  
overlapping of terminology
is the source of the confusion.

A rule X implies the token it returns to have the type X, but that is  
not enforced at all.
In the general case it's the exception to return a token with a  
different type, but sometimes
it's the easiest way out (like in lexing number literals).
I think it would be unnatural to forbid the use of token types  
induced by fragment rules,
there's no need to do that either.

When I stretch my mind a bit, I can even imagine that I'd actually  
want to emit tokens for
fragment rules. Although I realize that I might totally confuse the  
issue at hand right now, I
cannot refrain from writing this down ;)
Ok, what am I thinking?
Conside the following rules in the lexer:

FOO
   : start=ID c=C end=ID
	{ emit(FOO); emit(start); emit(c); emit(end); } // this is  
pseudocode, but i think you get what i mean
   ;	
fragment C : '0x01223'; // some magic thing that should not be normal  
token.
fragment ID : 'a'..'z' ('a'..'z'|'0'..'9')*;

Suppose you have built a lexer subclass that can emit multiple tokens  
for one lexer rule (ANTLR
by default emits a maximum of one token per lexer rule).
In the parser you'd like to receive multiple tokens when you  
reference FOO. You could write:

somerule : FOO ID C ID	; // FOO generates ID C ID even though the  
rules are fragments!

what have you won? you might get around fiddling with the token's  
text's in the parser, you could
possibly set up a finer control of token channels, etc.
This might be a bad idea, but is interesting nonetheless. ;)

I need coffee. Quick.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Sun Nov 12 19:54:51 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 19:54:51 -0800
Subject: [antlr-interest] On the Importance of Parentheses in Lexer Rules
Message-ID: <200611121954.51783.rschulz@sonic.net>

Hi,

I figured out the bizarre (to me, anyway) behavior of my lexer rules and 
parser rules that directly reference lexer rules. E.g., it turns out 
these two are very different:

name
	:	( AtomicWord )
	|	( SingleQuoted )
	|	( UnsignedInteger )
	;

name
	:	AtomicWord
	|	SingleQuoted
	|	UnsignedInteger
	;


By parenthesizing all my lexer alternatives, my parser now is "working." 
(I use the scare quotes because it's really too early to claim that, 
but I'm certain I'm much closer than I was. I can get a successful 
parse of much of my input corpus.)


Randall Schulz

From kroepke at classdump.org  Sun Nov 12 20:01:04 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 05:01:04 +0100
Subject: [antlr-interest] On the Importance of Parentheses in Lexer Rules
In-Reply-To: <200611121954.51783.rschulz@sonic.net>
References: <200611121954.51783.rschulz@sonic.net>
Message-ID: <151FF15E-1416-49D2-A70A-338414717EEE@classdump.org>


On 13. Nov 2006, at 4:54 , Randall R Schulz wrote:

> By parenthesizing all my lexer alternatives, my parser now is  
> "working."
> (I use the scare quotes because it's really too early to claim that,
> but I'm certain I'm much closer than I was. I can get a successful
> parse of much of my input corpus.)

That does not sound good. AFAIK this shouldn't have an influence at all.
Could you provide a version that fails? I'd like to take a look.
You can also send that off-list, if you like.

thanks,
-k

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Sun Nov 12 20:03:40 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 20:03:40 -0800
Subject: [antlr-interest] ANTLR Grammar Operator Precedences
Message-ID: <200611122003.40508.rschulz@sonic.net>

Hi,

Is the precedence of the operators in ANTLR v3.0's grammar documented 
somewhere? I couldn't find anything on the Wiki.


Randall Schulz

From kroepke at classdump.org  Sun Nov 12 20:09:35 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 05:09:35 +0100
Subject: [antlr-interest] ANTLR Grammar Operator Precedences
In-Reply-To: <200611122003.40508.rschulz@sonic.net>
References: <200611122003.40508.rschulz@sonic.net>
Message-ID: <EBAEA28B-8BEF-401F-8126-CC2D617BC52F@classdump.org>


On 13. Nov 2006, at 5:03 , Randall R Schulz wrote:

> Is the precedence of the operators in ANTLR v3.0's grammar documented
> somewhere? I couldn't find anything on the Wiki.

no, there isn't a list, unfortunately.
if you suspect a parser error to be responsible, consider running
ANTLR with
java org.antlr.Tool -Xgrtree yougrammar.g

that will print out the grammar AST. it could be huge, but at the  
moment this
is the single most helpful tool we have.

-k
-- 
Kay R?pke
http://classdump.org/





From jbb at acm.org  Sun Nov 12 20:31:28 2006
From: jbb at acm.org (John B. Brodie)
Date: Sun, 12 Nov 2006 23:31:28 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
 to lexical fragment
In-Reply-To: <802BE6DE-DE76-4526-AB49-5A8B8BEAD957@classdump.org> (message
	from Kay Roepke on Mon, 13 Nov 2006 04:38:33 +0100)
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
	<E1GjQrn-0004j7-00@gecko>
	<185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org>
	<E1GjS5i-0000V2-00@gecko>
	<802BE6DE-DE76-4526-AB49-5A8B8BEAD957@classdump.org>
Message-ID: <E1GjTTk-0006oU-00@gecko>


>The key point to see here is that the parser does not "call" a lexer rule!

Of course.      ...where, in this thread, was it stated otherwise.

>When I stretch my mind a bit, I can even imagine that I'd actually want to
>emit tokens for fragment rules.

Of course. fragment rules are inside the lexer and so may call emit() as an
action, just like any other lexer rule. And of course if any lexer rule wants
to emit() multiple tokens it can do so, but the default lexer only buffers 1
token at a time so must be modified. See the lexer example i posted to this
list (after Dr. Parr helped me) that emits multiple tokens when trying to
differentiate between integers, reals and the range ".."  operator.

>what have you won? you might get around fiddling with the token's text's in
>the parser, you could possibly set up a finer control of token channels, etc.
>This might be a bad idea, but is interesting nonetheless. ;)

who is talking about any of that in this thread?




There is an interface between a Parser and a Lexer. The Lexer produces a
stream of Tokens which the Parser consumes.

And of what type should these lexer produced Tokens be?

Should that type include the tokens{}, lexer rules *AND* fragment rules?

Or should that type be restricted *AND ENFORCED* to just tokens{} and
lexer rules --- with fragments excluded.

>I need coffee. Quick.

I need sleep. Good Night.
   -jbb

From rschulz at sonic.net  Sun Nov 12 20:46:56 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 12 Nov 2006 20:46:56 -0800
Subject: [antlr-interest] ANTLR Grammar Operator Precedences
In-Reply-To: <EBAEA28B-8BEF-401F-8126-CC2D617BC52F@classdump.org>
References: <200611122003.40508.rschulz@sonic.net>
	<EBAEA28B-8BEF-401F-8126-CC2D617BC52F@classdump.org>
Message-ID: <200611122046.56116.rschulz@sonic.net>

Hi,

On Sunday 12 November 2006 20:09, you wrote:
> On 13. Nov 2006, at 5:03 , Randall R Schulz wrote:
> > Is the precedence of the operators in ANTLR v3.0's grammar
> > documented somewhere? I couldn't find anything on the Wiki.
>
> no, there isn't a list, unfortunately.
> if you suspect a parser error to be responsible, consider running
> ANTLR with
> java org.antlr.Tool -Xgrtree yougrammar.g

On what basis would I suspect an error when I don't know what's the 
correct behavior?


> that will print out the grammar AST. it could be huge, but at the
> moment this
> is the single most helpful tool we have.

Surely someone knows what the relative priority of the concatenation, 
alternation and closure operators are, no? It seems kind of important.


> -k


Randall Schulz

From kroepke at classdump.org  Sun Nov 12 21:21:14 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 06:21:14 +0100
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
	to lexical fragment
In-Reply-To: <E1GjTTk-0006oU-00@gecko>
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
	<E1GjQrn-0004j7-00@gecko>
	<185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org>
	<E1GjS5i-0000V2-00@gecko>
	<802BE6DE-DE76-4526-AB49-5A8B8BEAD957@classdump.org>
	<E1GjTTk-0006oU-00@gecko>
Message-ID: <5CAA6292-95BB-4013-BBD2-42D70454C38C@classdump.org>


On 13. Nov 2006, at 5:31 , John B. Brodie wrote:

>
>> The key point to see here is that the parser does not "call" a  
>> lexer rule!
>
> Of course.      ...where, in this thread, was it stated otherwise.

Nowhere in particular. It just wanted to make the point that rules  
and token types
are not required to be isomorph. No offense meant.

>> When I stretch my mind a bit, I can even imagine that I'd actually  
>> want to
>> emit tokens for fragment rules.
>
> Of course. fragment rules are inside the lexer and so may call emit 
> () as an
> action, just like any other lexer rule. And of course if any lexer  
> rule wants
> to emit() multiple tokens it can do so, but the default lexer only  
> buffers 1
> token at a time so must be modified. See the lexer example i posted  
> to this
> list (after Dr. Parr helped me) that emits multiple tokens when  
> trying to
> differentiate between integers, reals and the range ".."  operator.

Yes, I recall that.

>> what have you won? you might get around fiddling with the token's  
>> text's in
>> the parser, you could possibly set up a finer control of token  
>> channels, etc.
>> This might be a bad idea, but is interesting nonetheless. ;)
>
> who is talking about any of that in this thread?

As a matter of fact, I gave an example where I could imagine to do  
something of
that sort we have been talking about.

>
> There is an interface between a Parser and a Lexer. The Lexer  
> produces a
> stream of Tokens which the Parser consumes.

Exactly. The question now is, what is that interface? Is it the set
of lexer rules? Or is it the set of token types?

> And of what type should these lexer produced Tokens be?

The set is defined by the terminal symbols of the language.

> Should that type include the tokens{}, lexer rules *AND* fragment  
> rules?

IMHO, yes. It is only natural that even fragment rules generate token  
types, too,
because once you label them in an enclosing rule, ANTLR has to  
generate a token for them.
fragment only means that this rule is not invoked directly when  
nextToken is invoked.
There are a variety of reasons why a rule might be declared as  
fragment, see below.

> Or should that type be restricted *AND ENFORCED* to just tokens{} and
> lexer rules --- with fragments excluded.

One could argue that way. I see your point, though I don't share it.
I don't see a problem with the current implementation. The key point  
I was referring
to earlier, namely that the parser doesn't call lexer rules, means  
that I cannot
arbitrarily call fragment rules from the parser. Thus the lexer  
implementation
is still hidden from the parser and the only interface is the set of  
token types.
I argue that there is no purpose in excluding the token types induced  
by fragment
rules, since it doesn't do harm to reference those in the parser  
(other than preventing
it to match anything, but there are numerous other ways to achieve  
that...).
To actually prevent a grammar author to use that token type is much  
more involved. It means you
either have to change the way fragment rules are represented  
internally, or you have to check
all actions to catch any attempt to change a token's type to a  
forbidden value.
That sounds too difficult and I'd call that problematic. It'd be  
bound to be a fragile implementation.

Furthermore, I think there a bona-fide reasons to make lexer rules  
fragmented rules, other than them being
simple helper rules. One is to reduce lookahead in the generated  
tokens rule. Maybe there's a need to
disambiguate between some rules, too. I'm sure there are situations  
where just setting a fragment rule's
type via a 'switch' lexer rule is easier than to restructure the  
grammar in an unnatural way.

What exactly is your gripe with this? Are you concerned that one  
might reference a token type
that is associated with a fragment rule, thus preventing the parser  
rule to match?
I have a hard time to believe that this is a real-world scenario.

kind regards,

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sun Nov 12 21:50:50 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 13 Nov 2006 06:50:50 +0100
Subject: [antlr-interest] ANTLR Grammar Operator Precedences
In-Reply-To: <200611122046.56116.rschulz@sonic.net>
References: <200611122003.40508.rschulz@sonic.net>
	<EBAEA28B-8BEF-401F-8126-CC2D617BC52F@classdump.org>
	<200611122046.56116.rschulz@sonic.net>
Message-ID: <0C8654D4-F575-4D35-BD76-8550B09AB934@classdump.org>


On 13. Nov 2006, at 5:46 , Randall R Schulz wrote:

> Hi,
>
> On Sunday 12 November 2006 20:09, you wrote:
>> On 13. Nov 2006, at 5:03 , Randall R Schulz wrote:
>>> Is the precedence of the operators in ANTLR v3.0's grammar
>>> documented somewhere? I couldn't find anything on the Wiki.
>>
>> no, there isn't a list, unfortunately.
>> if you suspect a parser error to be responsible, consider running
>> ANTLR with
>> java org.antlr.Tool -Xgrtree yougrammar.g
>
> On what basis would I suspect an error when I don't know what's the
> correct behavior?

oh, boy. somehow i get the creepy feeling that i come across as an  
ass today.

i was merely judging by your previous posts that you suspect an error.

FOO: 'A' | 'B' | 'C' ;
vs.
FOO: ('A')|('B')|('C');

shouldn't make a difference, other than that the latter produces  
worse, but
semantically equivalent code.

>
>> that will print out the grammar AST. it could be huge, but at the
>> moment this
>> is the single most helpful tool we have.
>
> Surely someone knows what the relative priority of the concatenation,
> alternation and closure operators are, no? It seems kind of important.

well, afaik there is no written documentation of this, short of the  
grammar itself.
i can make one up at the spot, but surely that would bring in even  
more trouble today.
seems to be a bad day for communication :(

ok, here we go (descending priority):
set operators (range:'..',set negation:'~' only one allowed)
closure operators ('+','*','?' only one allowed)
concatenation (TERMINAL 'literal' TERMINAL)
alternation ('|')

this is probably not complete, and may be hideously wrong, but so what.
when in doubt, use parens. as always.

examples:
FOO: 'a'..'z'+;			// same as ('a'..'z')+
FOO: 'a'|'b'|'c'+;		// same as ('a')|('b')|('c'+)
FOO: ('a'|'b'|'c')+;		// to change priority
FOO: TOKEN 'literal' | BAR;	// same as (TOKEN 'literal')|(BAR)
FOO: ~'a'+;			// same as (~'a')+
FOO: (options {greedy=false;}: . )* BAR;	// options are for valid for  
all alts within the ()

hth,

-k
-- 
Kay R?pke
http://classdump.org/





From tomasi at lambrate.inaf.it  Mon Nov 13 01:16:34 2006
From: tomasi at lambrate.inaf.it (Maurizio Tomasi)
Date: Mon, 13 Nov 2006 10:16:34 +0100
Subject: [antlr-interest] Context-dependent lexer?
Message-ID: <455837F2.4080304@lambrate.inaf.it>

Hi to all,

  This is the first time I post to this list. I am using ANTLR 2.7.4 to
develop an interpreter for ESARAD, a language used for radiative thermal
analysis of satellites. This is a simple case-insensitive procedural
language, but supports a feature I am not able to model with ANTLR.

Variables must be declared, and there are plenty of types. To declare a
variable of type "COORDINATE" e.g. you write:

COORDINATE dummy;

The program supports procedure calls using keywords (like python):

CREATE_OBJECT (coordinate = my_position, bulk = my_bulk);

Some keywords share the same name with variable types, as in the case of
"COORDINATE". This is a problem for the lexer, as COORDINATE can be
considered either an identifier (when used inside a function call) or a
reserved word (anywhere else).

Using Flex, I would simply use a start condition when inside
parentheses, e.g.

coordinate                  { return TOK_COORDINATE; }
[a-z][a-z0-9]*              { return TOK_IDENTIFIER; }
(                           BEGIN(PARENTHESES);
<PARENTHESES>[a-z][a-z0-9]* { return TOK_IDENTIFIER; }

and then taking care for nested parentheses and so on. How can I
implement this using ANTLR?

Thank you very much,
  Maurizio Tomasi.

From dave at badgers-in-foil.co.uk  Mon Nov 13 01:52:46 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 13 Nov 2006 09:52:46 +0000
Subject: [antlr-interest] [v3] Token boundries unset for non-rightmost-edge
	rewrites
Message-ID: <20061113095245.GA8992@badgers-in-foil.co.uk>

I have a rule like this:

identPrimary
    :   (identPart -> identPart)
        (    options{greedy=true;}
        :    (    DOT n=identPart
                  -> ^(PROPERTY_OR_IDENTIFIER $identPrimary $n)
             )
        |    (    LBRACK e=expression RBRACK
                  -> ^(ARRAY_ACC $identPrimary $e)
             )
        )*
        (    options {greedy=true;}
        :    a=arguments
             -> ^(METHOD_CALL $identPrimary $a)
        )*
    ;

I find that, for instance, the resulting PROPERTY_OR_IDENTIFIER
imaginary nodes have no start or stop values set.  Inspecting the
generated parser code, it looks like start/stop are only set for the
final result fragment that the rule as a whole produces.

I really need to see those values, so I tried splitting the rule above
so that the PROPERTY_OR_IDENTIFIER token will be the root, in a new rule:

identPrimary
    :   (identPart -> identPart)
        (    options{greedy=true;}
        :    (    test[$identPrimary.tree] -> test
             )
        |    (    LBRACK e=expression RBRACK
                  -> ^(ARRAY_ACC $identPrimary $e)
             )
        )*
        (    options {greedy=true;}
        :    a=arguments
             -> ^(METHOD_CALL $identPrimary $a)
        )*
    ;

test[Tree identPrimary]
    :    DOT n=identPart
         -> ^(PROPERTY_OR_IDENTIFIER {$identPrimary} $n)
    ;

However passing the $rulename reference to another rule like this
doesn't seem to work (no errors, but no subtree is added to the AST
either).

Am I doing something wrong, or are these things just not implemented yet?


ta,
dave

-- 
http://david.holroyd.me.uk/

From jbb at acm.org  Mon Nov 13 06:53:10 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon, 13 Nov 2006 09:53:10 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
 to lexical fragment
In-Reply-To: <5CAA6292-95BB-4013-BBD2-42D70454C38C@classdump.org> (message
	from Kay Roepke on Mon, 13 Nov 2006 06:21:14 +0100)
References: <E1GjOts-0007fF-00@gecko>
	<A47E0B28-9E89-4428-AAF6-BFB10CEE596D@classdump.org>
	<E1GjPaE-00026g-00@gecko>
	<B0398FB9-AFF0-4224-9FC4-76A8E8275FCA@classdump.org>
	<E1GjQrn-0004j7-00@gecko>
	<185ABCBE-46EA-4C84-A97A-E51ACAC5702E@classdump.org>
	<E1GjS5i-0000V2-00@gecko>
	<802BE6DE-DE76-4526-AB49-5A8B8BEAD957@classdump.org>
	<E1GjTTk-0006oU-00@gecko>
	<5CAA6292-95BB-4013-BBD2-42D70454C38C@classdump.org>
Message-ID: <E1GjdBO-0004vF-00@gecko>

>>
>> There is an interface between a Parser and a Lexer. The Lexer  
>> produces a
>> stream of Tokens which the Parser consumes.
>
>Exactly. The question now is, what is that interface? Is it the set
>of lexer rules? Or is it the set of token types?

Apparently the set of rules is the same as the set of token types.


>> And of what type should these lexer produced Tokens be?
>
>The set is defined by the terminal symbols of the language.

Yes. and as we have both pointed out to each other, lexical fragments
do not represent terminal symbols of the language.




>To actually prevent a grammar author to use that token type is much
>more involved. It means you either have to change the way fragment
>rules are represented internally, or you have to check all actions to
>catch any attempt to change a token's type to a forbidden value.
>That sounds too difficult and I'd call that problematic. It'd be  
>bound to be a fragile implementation.

I envisioned that the code that handles token references in parser
rules would do the check. not any code in lexer rules that sets the
token type.

The file produce by the lexer generation code containing the assigned
token types (is it the *.tokens file?) would need to include an
additional flag for each token type to indicate whether or that token
type was induced by a lexical fragment (or maybe just not write
fragment token types to that file in the first place?) the parser
generation code would then use that flag to perform the error check.

I am sure I have oversimplified this checking. Not sure how the
handling of a tokens{} section would impact this checking.



>Furthermore, I think there a bona-fide reasons to make lexer rules
>fragmented rules, other than them being simple helper rules.

Agreed. I never meant to ask for the removal of lexical framents,
sorry if I was unclear about that.



>What exactly is your gripe with this? Are you concerned that one
>might reference a token type that is associated with a fragment rule,
>thus preventing the parser rule to match?

Yes.

>I have a hard time to believe that this is a real-world scenario.

I have helped new users to resolve this on at least 2 occasions. Most
recently just this past Sunday immediately before I started this thread.

From foolishewe at hotmail.com  Mon Nov 13 07:24:30 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 13 Nov 2006 15:24:30 +0000
Subject: [antlr-interest] Enabling Antlr's tracing in ANTLRworks
Message-ID: <BAY107-F16CB467D96F49738BCE31CC0F40@phx.gbl>

Hi All:

I've been using the current version of Antlrworks, and for debugging 
reasons, I would
like to turn on ANTLR's trace facility in a grammar I am working on (I want 
to check
my lexer, given my current symptoms I want to determine if the lexer  
incorrectly
labels some lexemes as the wrong token type).  On a side note if I can turn 
it on, would the
trace facility's output appear in the console window?

Thanks:

Bill M.

_________________________________________________________________
Stay in touch with old friends and meet new ones with Windows Live Spaces 
http://clk.atdmt.com/MSN/go/msnnkwsp0070000001msn/direct/01/?href=http://spaces.live.com/spacesapi.aspx?wx_action=create&wx_url=/friends.aspx&mkt=en-us


From foolishewe at hotmail.com  Mon Nov 13 07:43:31 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 13 Nov 2006 15:43:31 +0000
Subject: [antlr-interest] ANTLR3 AST construction with options and
	alternatives
In-Reply-To: <BAY107-F3464AD85044FF4D8F9F9EAC0F40@phx.gbl>
Message-ID: <BAY107-F32499B1EB4AE783FB23F78C0F40@phx.gbl>


Hello All:

I think the previous approach had an error in it, which was detected at 
run-time.
The problem lies in that a "zero repetition" scenario may leave an attribute 
uninitilized,
in which case it should not be inserted into the AST.

This can be fixed by refactoring rules to use recursion and not variable 
repetition operators.
Note that the proposed changes may impact treewalking. So a rule of the 
form:

a: (b=B)? c:C->^(A $b $c);

may run into trouble if the optional B is not encountered, since $b will be 
uninitialized
We can fix this by doing:

a: b=optionalB c:C->^(A $b $c);

optionalB: b=B->^(OPTIONALB $b)
             |      ->^(OPTIONALB) // empty case
             ;

And if we have a case like say

a: (B | C)+  D;

we can then create an AST using something like
tokens{
    BORC; // B or C
}

a: (bc+=bOrC)+ d=D    ->^(A $bc+ $d)

bOrC:  b=B                 ->^(BORC $b)
       | c=C                  ->^(BORC $c)
       ;

At this point however, I am less certain about how to handle a zero or more 
repetition case
such that we don't try to insert an uninitialized attribute into the AST, 
e.g.

What should we do with:

a: (B|C)* D;

Regards:

Bill M.

>From: "Foolish Ewe" <foolishewe at hotmail.com>
>To: antlr-interest at antlr.org
>CC: FoolishEwe at hotmail.com
>Subject: ANTLR3 AST construction with options and alternatives
>Date: Mon, 13 Nov 2006 02:27:05 +0000
>
>Hello All:
>
>I've not heard back on a previous question about how to generate AST's.
>
>I have a construct in a grammar that looks something like:
>
>// allows optional override of default version id
>versionInfo: (id+=versionId)? (f1+=fieldType1 | f2+=fieldType2 | 
>f3+=fieldType3)*
>   ->^(VERSIONINFO $id+ $f1+ $f2+ $f3+);
>
>but it doesn't work the way I would like, meaning that I run the debugger 
>for a test case that
>has well defined ASTs are constructed for some of the fields, but some some 
>are not populated.
>This debugger halts and won't proceed to construct the VERSIONINFO node, 
>although
>before I decorated the grammar with action annotations for AST 
>construction, the grammar
>created a well formed parse tree.   I looked at the wiki  for AST related 
>stuff, and
>I am still not sure how to fix this problem or if it is a bug in ANTLR3.
>
>Regards:
>
>Bill M.
>
>_________________________________________________________________
>Find a local pizza place, music store, museum and more?then map the best 
>route!  http://local.live.com?FORM=MGA001
>

_________________________________________________________________
Get today's hot entertainment gossip  
http://movies.msn.com/movies/hotgossip?icid=T002MSN03A07001


From canterburry at gmail.com  Mon Nov 13 08:56:39 2006
From: canterburry at gmail.com (HC)
Date: Mon, 13 Nov 2006 10:56:39 -0600
Subject: [antlr-interest] Newbe lexer question
In-Reply-To: <684DDE8C-EFE4-4DFD-AF7F-D85528336CDF@classdump.org>
References: <b7e28d060611121350t12e65118ube2fc4209c7013c4@mail.gmail.com>
	<684DDE8C-EFE4-4DFD-AF7F-D85528336CDF@classdump.org>
Message-ID: <b7e28d060611130856p766517a9p67110429c98b6fa1@mail.gmail.com>

Thanks Kay,

Yes, I guess for question #2 I think I mean the second option. However, my
question 1 and 2 are sort of inter-related since the word I would be passing
in would be very much like the list in question #1.

"If you do not have a whole lot of those cases it shouldn't be a
concern."....

well, since I don't have control over the number of words provided by the
user, there might be many cases where I have composite words as in question
#1. I will look at actions and see how that can help. I just can't write a
custom rule for each word patter.

Thanks
HC




On 11/12/06, Kay Roepke <kroepke at classdump.org> wrote:
>
> Hi!
>
> On 12. Nov 2006, at 22:50 , HC wrote:
>
> > 1. Can (an what would a pseudo lexer rule be) antlr handle the
> > following
> > scenario easily:
> >
> > Let's say my lexer needs to be able to tokenize the following strings:
> >
> > a) "car"
> > b) "bus"
> > c) "bus car"
> >
> > It is fairly easy to write a rule for antlr that is smart enough to
> > recognize the string "bus car" as token C and not as token B
> > followed by
> > token A?
>
> Yes, this is no problem, although it looks a bit ugly at times ;)
> If you do not have a whole lot of those cases it shouldn't be a concern.
> I.e. you could solve this with syntactic predicates.
>
> > 2. Can I pass strings to be tokenized into the lexer from outside the
> > grammar file?
> >
> > Let's say I have lexer rule called WORD which may be any character
> > sequence
> > which I specify externally. I am looking to maintain an external
> > dictionary
> > of words which are valid WORD tokens which can be expanded and
> > reduced by a
> > user without modifying the grammar file.
>
> Am I understanding you correctly, in that you want to have a dynamic
> lexer rule, or
> do you want this:
> I could imagine to do this is to let the lexer recognize the said
> strings
> as WORDs and then use a custom action to look up the token's text in
> your external
> dictionary. You could indicate a recognition error to ANTLR and try
> error recovery
> (like ANTLR does internally) or simply fail.
> If you want the latter, this is easy. Dynamically changing lexer
> rules isn't because
> that would affect lookahead.
> Another way could be to employ syntactic predicates, but it really
> depends on what you
> are trying to achieve.
>
> > Am I using Antlr in the right context here?
>
> If you are doing language recognition, yes ;)
>
> HTH,
>
> -k
> --
> Kay R?pke
> http://classdump.org/
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061113/7c77bbc0/attachment-0001.html 

From rschulz at sonic.net  Mon Nov 13 09:00:36 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 13 Nov 2006 09:00:36 -0800
Subject: [antlr-interest] Token Unreachable?
Message-ID: <200611130900.36897.rschulz@sonic.net>

Hi,

I'm getting this diagnostic from ANTLR:

TSTP.g:1062:1: The following token definitions are unreachable: 
SingleQuoted


These rules refer to SingleQuoted:

name
	:	( AtomicWord )
	|	( SingleQuoted )
	|	( UnsignedInteger )
	;


atomicWord
	:	 AtomicWord
	;


AtomicWord
	:	( LowerWord )
	|	( SingleQuoted )
	;


The parser rules "name" and "atomicWord" are used extensively in the 
grammar. AtomicWord's only allowable first character is a lower-case 
letter. UnsignedInteger's first character must be a decimal digit. 
SingleQuoted starts with a single quote. Thus there is no ambiguity 
between these three lexical rules.

So I don't see why it's telling me SingleQuoted is unreachable.


Randall Schulz

From foolishewe at hotmail.com  Mon Nov 13 09:26:12 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 13 Nov 2006 17:26:12 +0000
Subject: [antlr-interest] ANTLR3 AST construction with options
	andalternatives
In-Reply-To: <BAY107-F32499B1EB4AE783FB23F78C0F40@phx.gbl>
Message-ID: <BAY107-F13E5ADCAA866C9D01A0374C0F40@phx.gbl>


Hello All:

Just in case anyone besides me is reading this, I've discovered another 
construct
where the "do it or skip it" construct may require refactoring in order to 
build an
AST from a working parser.  I'm not sure if these are of general interest, 
unless
I hear interest from the community, I'll drop this topic.

If you have a construct like:

a: B (C)?;  // valid parser construction if (i)A is a token and (ii) B and C 
are defined in the lexer

then ANTLR3 does not seem to like something of the form:

a: b=b (c+=C)?->^(A $b $c+); // Doesn't seem to work if C is not scanned

so some refactoring is required to avoid using an uninitialized $c+ in the 
AST

I'm going to try something like

a:  B                 ->^(A $b)
  | B C              ->^(A $b $c)
  ;

I think some additional discussion should be added to the wiki by someone
knowledgeable about ANTLR about what sorts of restrictions there are
on ANTLR grammars if you want to have AST support.  It is not clear
to me that if a grammar parses that the AST can be built directly from that
grammar.  If that is so, it may be a good idea for a seasoned veteran or two 
to
write about what constructs to avoid and how to refactor preexisting 
constructs
to bring the grammar into compliance with the AST construction requirements.

Regards:

Bill M.

>From: "Foolish Ewe" <foolishewe at hotmail.com>
>To: foolishewe at hotmail.com, antlr-interest at antlr.org
>Subject: Re: [antlr-interest] ANTLR3 AST construction with options 
>andalternatives
>Date: Mon, 13 Nov 2006 15:43:31 +0000
>
>
>Hello All:
>
>I think the previous approach had an error in it, which was detected at 
>run-time.
>The problem lies in that a "zero repetition" scenario may leave an 
>attribute uninitilized,
>in which case it should not be inserted into the AST.
>
>This can be fixed by refactoring rules to use recursion and not variable 
>repetition operators.
>Note that the proposed changes may impact treewalking. So a rule of the 
>form:
>
>a: (b=B)? c:C->^(A $b $c);
>
>may run into trouble if the optional B is not encountered, since $b will be 
>uninitialized
>We can fix this by doing:
>
>a: b=optionalB c:C->^(A $b $c);
>
>optionalB: b=B->^(OPTIONALB $b)
>             |      ->^(OPTIONALB) // empty case
>             ;
>
>And if we have a case like say
>
>a: (B | C)+  D;
>
>we can then create an AST using something like
>tokens{
>    BORC; // B or C
>}
>
>a: (bc+=bOrC)+ d=D    ->^(A $bc+ $d)
>
>bOrC:  b=B                 ->^(BORC $b)
>       | c=C                  ->^(BORC $c)
>       ;
>
>At this point however, I am less certain about how to handle a zero or more 
>repetition case
>such that we don't try to insert an uninitialized attribute into the AST, 
>e.g.
>
>What should we do with:
>
>a: (B|C)* D;
>
>Regards:
>
>Bill M.
>
>>From: "Foolish Ewe" <foolishewe at hotmail.com>
>>To: antlr-interest at antlr.org
>>CC: FoolishEwe at hotmail.com
>>Subject: ANTLR3 AST construction with options and alternatives
>>Date: Mon, 13 Nov 2006 02:27:05 +0000
>>
>>Hello All:
>>
>>I've not heard back on a previous question about how to generate AST's.
>>
>>I have a construct in a grammar that looks something like:
>>
>>// allows optional override of default version id
>>versionInfo: (id+=versionId)? (f1+=fieldType1 | f2+=fieldType2 | 
>>f3+=fieldType3)*
>>   ->^(VERSIONINFO $id+ $f1+ $f2+ $f3+);
>>
>>but it doesn't work the way I would like, meaning that I run the debugger 
>>for a test case that
>>has well defined ASTs are constructed for some of the fields, but some 
>>some are not populated.
>>This debugger halts and won't proceed to construct the VERSIONINFO node, 
>>although
>>before I decorated the grammar with action annotations for AST 
>>construction, the grammar
>>created a well formed parse tree.   I looked at the wiki  for AST related 
>>stuff, and
>>I am still not sure how to fix this problem or if it is a bug in ANTLR3.
>>
>>Regards:
>>
>>Bill M.
>>
>>_________________________________________________________________
>>Find a local pizza place, music store, museum and more?then map the best 
>>route!  http://local.live.com?FORM=MGA001
>>
>
>_________________________________________________________________
>Get today's hot entertainment gossip  
>http://movies.msn.com/movies/hotgossip?icid=T002MSN03A07001
>

_________________________________________________________________
Try the next generation of search with Windows Live Search today!  
http://imagine-windowslive.com/minisites/searchlaunch/?locale=en-us&source=hmtagline


From dave at badgers-in-foil.co.uk  Mon Nov 13 10:21:13 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 13 Nov 2006 18:21:13 +0000
Subject: [antlr-interest] ANTLR3 AST construction with options
	andalternatives
In-Reply-To: <BAY107-F13E5ADCAA866C9D01A0374C0F40@phx.gbl>
References: <BAY107-F32499B1EB4AE783FB23F78C0F40@phx.gbl>
	<BAY107-F13E5ADCAA866C9D01A0374C0F40@phx.gbl>
Message-ID: <20061113182113.GA14398@badgers-in-foil.co.uk>

On Mon, Nov 13, 2006 at 05:26:12PM +0000, Foolish Ewe wrote:
> a: b=b (c+=C)?->^(A $b $c+); // Doesn't seem to work if C is not scanned

I dunno if this is the problem or not, but if 'C' only appears once on
the left of the rewrite above, wouldn't you write 'c=C', rather than
'c+=C'?  I've not used the += systax, so I'm not entirely sure.

Also, my simplistic unserstanding is that cardinality should 'match'
(sort of) on the left and the right of the rewrite, so I would be doing
something like,

  a: b=b (c=C)?->^(A $b $c?);

(i.e. giving the $c ref a '?' rather than a '+')

finally, I think that in such a simple rule, you don't need to
explicitly label each of the values, so you could rewrite it thus,

  a: b C? -> ^(A b C?)


I've not tested any of that though.  ;)


ta,
dave

-- 
http://david.holroyd.me.uk/

From a.shneyderman at gmail.com  Mon Nov 13 10:28:36 2006
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Mon, 13 Nov 2006 19:28:36 +0100
Subject: [antlr-interest] Incremental lexer and parser?
Message-ID: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>

I was reading the  Prashant Deva's article on ibm site and he was talking of
incremental lexing and parsing. I was wondering if ANTLR has any support
for it. If not is this something that would be supported in 3.0?

A discussion on how one would approch the problem given ANTLR as
the tool - for parser and lexer generation - would also be helpfull.

-- 
Thanks,
Alex.

From foolishewe at hotmail.com  Mon Nov 13 10:40:05 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 13 Nov 2006 18:40:05 +0000
Subject: [antlr-interest] ANTLR3 AST construction with
	optionsandalternatives
In-Reply-To: <20061113182113.GA14398@badgers-in-foil.co.uk>
Message-ID: <BAY107-F25EABBF857B055F8315FB5C0F40@phx.gbl>

Hi Dave and ANTLRInterest folks:

I'm not sure about what the ANTLR folks call these things so just
to be clear, if we have a rule like the one I originally suggested,
b and c+ are what I'll call atributes.  I'm guessing that Dave
refers to the + suffix as the cardinality of the attribute.

I wasn't sure, it isn't clear to me what the + suffix implies for
attributes, my gut reaction was that it was intended for attributes
that occur a variable number of times.  If + means one or more repetitions,
like it does for parsing and lexing, and if (from your the remainder of your 
reply)
we can use '?' for zero or one times, does that mean we can use other 
cardinalities,
i.e.  '*' for zero or more times as well?   Are empty/uninitialized 
attributes (assuming * or ?
cardinality) omitted from the tree if they are listed in the right hand side 
of the ->
operator in an AST rule?

If that is true, I'll have to go back and look to see if I missed something 
obvious in the wiki or if
the Wiki could use a more explicit hint.

I've been busy today refactoring grammars, but perhaps my limited 
understanding of
ANTLR compelled me to do more work than I had to.  It would be really nice 
if I could
get ANTLR to do that so I would not have to.

Regards:

Bll M.
>From: David Holroyd <dave at badgers-in-foil.co.uk>
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] ANTLR3 AST construction with 
>optionsandalternatives
>Date: Mon, 13 Nov 2006 18:21:13 +0000
>
>On Mon, Nov 13, 2006 at 05:26:12PM +0000, Foolish Ewe wrote:
> > a: b=b (c+=C)?->^(A $b $c+); // Doesn't seem to work if C is not scanned
>
>I dunno if this is the problem or not, but if 'C' only appears once on
>the left of the rewrite above, wouldn't you write 'c=C', rather than
>'c+=C'?  I've not used the += systax, so I'm not entirely sure.
>
>Also, my simplistic unserstanding is that cardinality should 'match'
>(sort of) on the left and the right of the rewrite, so I would be doing
>something like,
>
>   a: b=b (c=C)?->^(A $b $c?);
>
>(i.e. giving the $c ref a '?' rather than a '+')
>
>finally, I think that in such a simple rule, you don't need to
>explicitly label each of the values, so you could rewrite it thus,
>
>   a: b C? -> ^(A b C?)
>
>
>I've not tested any of that though.  ;)
>
>
>ta,
>dave
>
>--
>http://david.holroyd.me.uk/

_________________________________________________________________
Try the next generation of search with Windows Live Search today!  
http://imagine-windowslive.com/minisites/searchlaunch/?locale=en-us&source=hmtagline


From prashant.deva at gmail.com  Mon Nov 13 11:43:07 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon, 13 Nov 2006 11:43:07 -0800
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
References: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
Message-ID: <41fed8f80611131143n1ec031b4s339f5ca678674f3@mail.gmail.com>

Hi,
 Yes, we were originally planning to add the support for incremental parsing
in antlr 3, but since Terence has been busy with other stuff i  am unsure
whether it will be included in the first release or not.

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com


On 11/13/06, Alex Shneyderman <a.shneyderman at gmail.com> wrote:
>
> I was reading the  Prashant Deva's article on ibm site and he was talking
> of
> incremental lexing and parsing. I was wondering if ANTLR has any support
> for it. If not is this something that would be supported in 3.0?
>
> A discussion on how one would approch the problem given ANTLR as
> the tool - for parser and lexer generation - would also be helpfull.
>
> --
> Thanks,
> Alex.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061113/c21d62e1/attachment.html 

From rob.hill at blueyonder.co.uk  Mon Nov 13 11:57:05 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Mon, 13 Nov 2006 19:57:05 -0000
Subject: [antlr-interest] ANTLR3 AST construction with
	optionsandalternatives
In-Reply-To: <20061113182113.GA14398@badgers-in-foil.co.uk>
Message-ID: <20061113195719.8DD12190AD9@www.antlr.org>

> 
> On Mon, Nov 13, 2006 at 05:26:12PM +0000, Foolish Ewe wrote:
> > a: b=b (c+=C)?->^(A $b $c+); // Doesn't seem to work if C is not scanned

I think the rule you're looking for would be...

a: b (C+)? -> ^(A b (C+)?)

Where A is a Token you've defined.
You don't need the $ signs on a re-write rule, unless you're in an action
between {}'s
Also, the ? needs to go outside the parens - C+? won't work.

There's a good description of the terminology used in the antlr manual,and 
ISTR there's a page on tree re-write rules on the V3 wiki. The example
source , especially mantra , is invaluable for showing stuff that's not
described anywhere else.

/2ob



From dave at badgers-in-foil.co.uk  Mon Nov 13 12:24:52 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 13 Nov 2006 20:24:52 +0000
Subject: [antlr-interest] ANTLR3 AST construction with
	optionsandalternatives
In-Reply-To: <BAY107-F25EABBF857B055F8315FB5C0F40@phx.gbl>
References: <20061113182113.GA14398@badgers-in-foil.co.uk>
	<BAY107-F25EABBF857B055F8315FB5C0F40@phx.gbl>
Message-ID: <20061113202452.GA16744@badgers-in-foil.co.uk>

On Mon, Nov 13, 2006 at 06:40:05PM +0000, Foolish Ewe wrote:
> I'm not sure about what the ANTLR folks call these things so just
> to be clear, if we have a rule like the one I originally suggested,
> b and c+ are what I'll call atributes.  I'm guessing that Dave
> refers to the + suffix as the cardinality of the attribute.

Yes.  (I hope it's the right term.)

> I wasn't sure, it isn't clear to me what the + suffix implies for
> attributes, my gut reaction was that it was intended for attributes
> that occur a variable number of times.  If + means one or more repetitions,
> like it does for parsing and lexing, and if (from your the remainder of 
> your reply)
> we can use '?' for zero or one times, does that mean we can use other 
> cardinalities,
> i.e.  '*' for zero or more times as well?   Are empty/uninitialized 
> attributes (assuming * or ?
> cardinality) omitted from the tree if they are listed in the right hand 
> side of the ->
> operator in an AST rule?

I took my cues from this page,

  http://www.antlr.org/wiki/display/ANTLR3/Tree+construction


Where I saw stuff like,

  compilationUnit
    :   packageDefinition? importDefinition* typeDefinition+
        -> ^(UNIT packageDefinition? importDefinition* typeDefinition*)
    ;

  ['packageDefinition' has a '?' on the left and on the right;
  'typeDefinition' doesn't match - maybe a typo, or doesn't matter?]

and

  compoundStatement
      :   lc='{' statement* '}' -> ^(SLIST[$lc] statement*)
      ;

  ['statement' has a '*' on the left and the right]

Now, to be honest, I don't know *why* I'm doing this, but following the
established pattern seems to work :)

It is the case that in the above compoundStatement example, if there are
zero 'statement' matches, then the result tree will just be an SLIST
node with no children (i.e. the appearence of 'statement*' on the r.h.s.
doesn't add anything to the result tree if there's nothing to add).


does that help?
dave

From open.zone at virgin.net  Mon Nov 13 17:43:19 2006
From: open.zone at virgin.net (Micheal J)
Date: Tue, 14 Nov 2006 01:43:19 -0000
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser reference
	to lexical fragment
In-Reply-To: <E1GjdBO-0004vF-00@gecko>
Message-ID: <002601c7078e$43bf9d10$c704a8c0@hercules>

Hi,

> >> There is an interface between a Parser and a Lexer. The Lexer
> >> produces a
> >> stream of Tokens which the Parser consumes.
> >
> >Exactly. The question now is, what is that interface? Is it 
> the set of 
> >lexer rules? Or is it the set of token types?
> 
> Apparently the set of rules is the same as the set of token types.

No. Token types may be defined in a tokens{..} block without an associated
rule.

> >> And of what type should these lexer produced Tokens be?
> >
> >The set is defined by the terminal symbols of the language.
> 
> Yes. and as we have both pointed out to each other, lexical 
> fragments do not represent terminal symbols of the language.

Not quite. They just do not [normally] emit tokens. I'd have to double-check
again if that can be overridded with action code.

> >To actually prevent a grammar author to use that token type is much 
> >more involved. It means you either have to change the way fragment 
> >rules are represented internally, or you have to check all 
> actions to 
> >catch any attempt to change a token's type to a forbidden 
> value. That 
> >sounds too difficult and I'd call that problematic. It'd be
> >bound to be a fragile implementation.
> 
> I envisioned that the code that handles token references in 
> parser rules would do the check. not any code in lexer rules 
> that sets the token type.

Parsers [quite rightly] know nothing about lexer rules or fragments. They
just expect a stream of tokens (with token types from their token type
vocabulary).

> The file produce by the lexer generation code containing the 
> assigned token types (is it the *.tokens file?) would need to 
> include an additional flag for each token type to indicate 
> whether or that token type was induced by a lexical fragment 
> (or maybe just not write fragment token types to that file in 
> the first place?) the parser generation code would then use 
> that flag to perform the error check.
> 
> I am sure I have oversimplified this checking. Not sure how 
> the handling of a tokens{} section would impact this checking.

Interesting idea. While it certainly could be done, I can't help feeling
that this is really a training issue.

My reasoning?. Well:
- there are legitimate reasons for sending tokens types named after a
fragment rule to the parser as Kay pointed out.
- the option exists to name fragment rules (and their auto-generated token
type namesake) such that it is impossible to misuse unintentionally [e.g.
DIGIT_NotForParser, DoNotUseInParser_DIGIT, LexerInternal_DIGIT]

> >I have a hard time to believe that this is a real-world scenario.
> 
> I have helped new users to resolve this on at least 2 
> occasions. Most recently just this past Sunday immediately 
> before I started this thread.

As I said, this sounds like a training issue.


Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Mon Nov 13 17:50:19 2006
From: open.zone at virgin.net (Micheal J)
Date: Tue, 14 Nov 2006 01:50:19 -0000
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <41fed8f80611131143n1ec031b4s339f5ca678674f3@mail.gmail.com>
Message-ID: <002701c7078f$3ee56fd0$c704a8c0@hercules>

Hi,
 
Can you go ahead and publish just how this was supposed to work?. Perhaps
build a one-off V3 release with incremental lex/parse support?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Prashant Deva
Sent: 13 November 2006 19:43
To: Alex Shneyderman
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Incremental lexer and parser?


Hi,
 Yes, we were originally planning to add the support for incremental parsing
in antlr 3, but since Terence has been busy with other stuff i  am unsure
whether it will be included in the first release or not.

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com



On 11/13/06, Alex Shneyderman <a.shneyderman at gmail.com> wrote: 

I was reading the  Prashant Deva's article on ibm site and he was talking of
incremental lexing and parsing. I was wondering if ANTLR has any support
for it. If not is this something that would be supported in 3.0?

A discussion on how one would approch the problem given ANTLR as
the tool - for parser and lexer generation - would also be helpfull.

--
Thanks,
Alex.




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061114/550f71af/attachment.html 

From foolishewe at hotmail.com  Mon Nov 13 19:46:28 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 14 Nov 2006 03:46:28 +0000
Subject: [antlr-interest] ANTLR3 AST construction
	withoptionsandalternatives
In-Reply-To: <20061113202452.GA16744@badgers-in-foil.co.uk>
Message-ID: <BAY107-F73021406F67807DF8A11AC0EB0@phx.gbl>

Thanks Dave:

That does help.  I didn't undersand the examples so well and I did not
interpret the examples the way you did (I got a bit confused since I
thought it was mandatory to create attributes separate from
the tokens, i.e. a: b=B->(A $b); was required, not a: B->(A B); ).
I managed to get one part of the grammar working, I'll need to revisit
the remaining parts of the grammar, where I will try the approach you 
recomend.

I'm on to walking the tree next, but that might wait till I get a nights 
sleep.

Thanks Again, I'll give it a try.

Bill M.


>From: David Holroyd <dave at badgers-in-foil.co.uk>
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] ANTLR3 AST construction 
>withoptionsandalternatives
>Date: Mon, 13 Nov 2006 20:24:52 +0000
>
>On Mon, Nov 13, 2006 at 06:40:05PM +0000, Foolish Ewe wrote:
> > I'm not sure about what the ANTLR folks call these things so just
> > to be clear, if we have a rule like the one I originally suggested,
> > b and c+ are what I'll call atributes.  I'm guessing that Dave
> > refers to the + suffix as the cardinality of the attribute.
>
>Yes.  (I hope it's the right term.)
>
> > I wasn't sure, it isn't clear to me what the + suffix implies for
> > attributes, my gut reaction was that it was intended for attributes
> > that occur a variable number of times.  If + means one or more 
>repetitions,
> > like it does for parsing and lexing, and if (from your the remainder of
> > your reply)
> > we can use '?' for zero or one times, does that mean we can use other
> > cardinalities,
> > i.e.  '*' for zero or more times as well?   Are empty/uninitialized
> > attributes (assuming * or ?
> > cardinality) omitted from the tree if they are listed in the right hand
> > side of the ->
> > operator in an AST rule?
>
>I took my cues from this page,
>
>   http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>
>
>Where I saw stuff like,
>
>   compilationUnit
>     :   packageDefinition? importDefinition* typeDefinition+
>         -> ^(UNIT packageDefinition? importDefinition* typeDefinition*)
>     ;
>
>   ['packageDefinition' has a '?' on the left and on the right;
>   'typeDefinition' doesn't match - maybe a typo, or doesn't matter?]
>
>and
>
>   compoundStatement
>       :   lc='{' statement* '}' -> ^(SLIST[$lc] statement*)
>       ;
>
>   ['statement' has a '*' on the left and the right]
>
>Now, to be honest, I don't know *why* I'm doing this, but following the
>established pattern seems to work :)
>
>It is the case that in the above compoundStatement example, if there are
>zero 'statement' matches, then the result tree will just be an SLIST
>node with no children (i.e. the appearence of 'statement*' on the r.h.s.
>doesn't add anything to the result tree if there's nothing to add).
>
>
>does that help?
>dave

_________________________________________________________________
Try the next generation of search with Windows Live Search today!  
http://imagine-windowslive.com/minisites/searchlaunch/?locale=en-us&source=hmtagline


From jbb at acm.org  Mon Nov 13 20:03:47 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon, 13 Nov 2006 23:03:47 -0500
Subject: [antlr-interest] [BUG] 3.0b4 no complaint on parser
 reference	to lexical fragment
In-Reply-To: <002601c7078e$43bf9d10$c704a8c0@hercules> (message from Micheal J
	on Tue, 14 Nov 2006 01:43:19 +0000)
References: <002601c7078e$43bf9d10$c704a8c0@hercules>
Message-ID: <E1GjpWV-0003Wr-00@gecko>

>> >I have a hard time to believe that this is a real-world scenario.
>> 
>> I have helped new users to resolve this on at least 2 
>> occasions. Most recently just this past Sunday immediately 
>> before I started this thread.
>
>As I said, this sounds like a training issue.

Ok. Fine. Lets for the moment agree that this is a "training issue".

So how do you propose that a user resolve this "training issue"?

Should she/he simply post a mesage to the antlr-interest mailing saying
"my grammar doesn't work, please help"?

or

Should the org.antlr.Tool provide an error message stating that their parser
has referred to a token type that the lexer can not produce?

Seeking guidance...
   -jbb




note I am assuming that anywhere in the lexer that one might be
tempted to write something like this (and *ALL* of its permutations):

A: 'a' { type = C; }
B: 'b' C;
fragment C: 'c';

would be replaced with an equivalent like this (and similar for all
permutations):

tokens{ C; }
A: 'a' { type = C; }
B: 'b' Cprime;
fragment Cprime: 'c';


From dave at badgers-in-foil.co.uk  Tue Nov 14 00:52:40 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 14 Nov 2006 08:52:40 +0000
Subject: [antlr-interest] [v3] Token boundries unset for
	non-rightmost-edge rewrites
In-Reply-To: <20061113095245.GA8992@badgers-in-foil.co.uk>
References: <20061113095245.GA8992@badgers-in-foil.co.uk>
Message-ID: <20061114085240.GA25802@badgers-in-foil.co.uk>

On Mon, Nov 13, 2006 at 09:52:46AM +0000, David Holroyd wrote:
> I find that, for instance, the resulting PROPERTY_OR_IDENTIFIER
> imaginary nodes have no start or stop values set.  Inspecting the
> generated parser code, it looks like start/stop are only set for the
> final result fragment that the rule as a whole produces.
> 
> I really need to see those values, so I tried splitting the rule above
> so that the PROPERTY_OR_IDENTIFIER token will be the root, in a new rule:
> 
> identPrimary
>     :   (identPart -> identPart)
>         (    options{greedy=true;}
>         :    (    test[$identPrimary.tree] -> test
>              )
>         |    (    LBRACK e=expression RBRACK
>                   -> ^(ARRAY_ACC $identPrimary $e)
>              )
>         )*
>         (    options {greedy=true;}
>         :    a=arguments
>              -> ^(METHOD_CALL $identPrimary $a)
>         )*
>     ;
> 
> test[Tree identPrimary]
>     :    DOT n=identPart
>          -> ^(PROPERTY_OR_IDENTIFIER {$identPrimary} $n)
>     ;

Another problem with the above is that the 'test' rule I added doesn't
actually see the token that I want to be the 'start' of that subtree
anyway.  I have got soething working for PROPERTY_OR_IDENTIFIER nodes,
but it's rather convoluted:

identPrimary
    :    (identPart -> identPart)
        (    options{greedy=true;}
        :    (    poi=propOrIdent[root_0, retval.start] -> $poi
             )
        |    (    LBRACK expr=expression RBRACK
                -> ^(ARRAY_ACC $identPrimary $expr)
             )
        )*
        (    options {greedy=true;}
        :    a=arguments
             -> ^(METHOD_CALL $identPrimary $a)
        )*
    ;

propOrIdent[Tree identPrimary, Token startToken]
    :    
        { retval.start = startToken; }
        DOT propId=identPart
        -> ^(PROPERTY_OR_IDENTIFIER {$identPrimary} $propId)
    ;


Is there any way I could simplify this?


ta,
dave

-- 
http://david.holroyd.me.uk/

From s_herlam at ira.uka.de  Tue Nov 14 03:32:23 2006
From: s_herlam at ira.uka.de (Christian Phang)
Date: Tue, 14 Nov 2006 12:32:23 +0100
Subject: [antlr-interest] BibTex Grammar
Message-ID: <c996ed450611140332x759005efqef99a88e110c1983@mail.gmail.com>

Hello,

Has anyone exprience with BibTex Grammar and succesfully wrote it in ANTLR?

The only source I get on the web is:
Beebe, Nelson H.F. , "Bibliography Prettyprinting and Syntax
Checking", TUGboat, Volume 14, 1993, No. 4
======http://www.tug.org/TUGboat/Articles/tb14-4/tb41beebe.pdf=====

It is written in lex and C.

I started writing it in ANTLR and think it'll spare my time if someone
has already done it.

regards,

Christian Phang

From kroepke at classdump.org  Tue Nov 14 04:18:56 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 14 Nov 2006 13:18:56 +0100
Subject: [antlr-interest] ANTLR3 AST construction with
	optionsandalternatives
In-Reply-To: <20061113202452.GA16744@badgers-in-foil.co.uk>
References: <20061113182113.GA14398@badgers-in-foil.co.uk>
	<BAY107-F25EABBF857B055F8315FB5C0F40@phx.gbl>
	<20061113202452.GA16744@badgers-in-foil.co.uk>
Message-ID: <7B00575D-AD85-4D54-A60C-A62315067732@classdump.org>


On 13. Nov 2006, at 21:24 , David Holroyd wrote:

> On Mon, Nov 13, 2006 at 06:40:05PM +0000, Foolish Ewe wrote:
>> I'm not sure about what the ANTLR folks call these things so just
>> to be clear, if we have a rule like the one I originally suggested,
>> b and c+ are what I'll call atributes.  I'm guessing that Dave
>> refers to the + suffix as the cardinality of the attribute.
>
> Yes.  (I hope it's the right term.)

Don't call them attributes, that term is used for something different.
They are called rule or token references (depending whether you write  
a+ or A+).
Attributes are "fields" of those references, like $a.text and the like.
Also, parameters, return values, and scope "fields" are also called  
attributes
(since they are essentially the same thing).
As such, there are predefined attributes (text, start, stop, line, st  
come to mind)
and "user defined" attributes, though I think we don't have a  
qualifier like that,
they are just "attributes".

Hope that clears that up :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From e.papegaaij at student.utwente.nl  Tue Nov 14 05:32:24 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Tue, 14 Nov 2006 14:32:24 +0100
Subject: [antlr-interest] [v3] TreeParser capabilities
Message-ID: <200611141432.24374.e.papegaaij@student.utwente.nl>

Hello,

For a research project I need some information about the capabilities of the 
TreeParser (for ANTLR v3). My application uses a custom TreeAdaptor, which 
constructs trees in a very different maner. The tree classes do not extend 
CommonTree, nor do they implement Tree.

My first question: Is it possible to use a TreeParser with these nodes? It 
seems the TreeParser is based on a NodeStream, which presents the tree nodes 
to the TreeParser one by one. However only an implementation based on 
CommonTree is provided. What is needed to use a TreeParser with my custom 
TreeAdaptor? Do I need to write a TreeNodeStream based on a TreeAdaptor, or 
is such a stream already available?

My second question: Is it possible to skip sub-trees, or visit the same branch 
more than once (for example in an interpreter of a for statement)? I suspect 
that the NodeStream will get out-of-sync when you try to do so.

Best regards,
Emond Papegaaij

From koen.vanderkimpen+antlr at cs.kuleuven.be  Tue Nov 14 05:41:09 2006
From: koen.vanderkimpen+antlr at cs.kuleuven.be (Koen Vanderkimpen)
Date: Tue, 14 Nov 2006 14:41:09 +0100
Subject: [antlr-interest] parser generator error and tail recursion
Message-ID: <001101c707f2$8b2471d0$b3273a86@codewalker>

Hi,

I recently changed some things in the java 1.5 grammar (antlr v3) to get 
nicer ast trees.

For example:

I changed
    multiplicativeExpression
        :   unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )*
        ;
to
    multiplicativeExpression
     :     unaryExpression multiplicativeOp multiplicativeExpression
          -> ^(multiplicativeOp unaryExpression multiplicativeExpression)
     |    unaryExpression
     ;

This has tail recursion, works fine, and generates more usable expression 
trees, with the operator as root and the left and right operands as 
children. (multiplicativeOp is of course a rule with the possible operators)

I did the same on some higher level rules, and it also works fine for 
additive and shift expressions.

When I come to the level of relational expressions however, the parser 
generator tells me of an internal error and that it "could not even do k=1" 
for a certain rule. This happens only when I have 4 of those tail recursive 
rules in one hierachy, wherever they appear. It never happens when I have 3 
or less of them. If I were to change one of the rules like this:

    multiplicativeExpression
        : unaryExpression (multiplicativeOp multiplicativeExpression)?

it also still works without the error. But what is the difference between 
that and the other? Except for the fact that I can't build the tree how I 
want to build it with the latter rule.

Can anyone tell me how I can make antlr work and parse the expression 
1*2*3+4*5 to a tree of the following shape (for all possible expressions):

        +
    *       *
  *  3   4  5
1 2

I will post an ast tree generating java 1.5 grammar once I get it working 
decently.

Greetz,

Koen Vanderkimpen 


From foolishewe at hotmail.com  Tue Nov 14 05:51:19 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 14 Nov 2006 13:51:19 +0000
Subject: [antlr-interest] ANTLR3 AST construction
	withoptionsandalternatives
In-Reply-To: <7B00575D-AD85-4D54-A60C-A62315067732@classdump.org>
Message-ID: <BAY107-F93370F187F30EF88DFAE0C0EB0@phx.gbl>

Thanks Kay:

That is very helpful, good notation is like clean living, a good, helpful 
and sometimes necessary
thing :-).

Currently I am thinking about what sort of semantic processing my language 
needs.
Since the AST is "walked" during tree construction, I'm hoping to complete 
any needed
processing during the initial construction phase, however until I start 
trying stuff, I'm not
sure if I will be so lucky.  In the event that I might need to walk
part of the tree after construction, am I right that this is typically done 
in Java
(based on what I noticed 
at:http://www.antlr.org/wiki/pages/viewpage.action?pageId=754) ,
or does ANTLR have a grammar for traversing the AST after construction as 
well?

Regards:

Bill M.


Kay Roepke wrote on November 14, 2006
>On 13. Nov 2006, at 21:24 , David Holroyd wrote:
>
>>On Mon, Nov 13, 2006 at 06:40:05PM +0000, Foolish Ewe wrote:
>>>I'm not sure about what the ANTLR folks call these things so just
>>>to be clear, if we have a rule like the one I originally suggested,
>>>b and c+ are what I'll call atributes.  I'm guessing that Dave

>>>refers to the + suffix as the cardinality of the attribute.
>>
>>Yes.  (I hope it's the right term.)
>
>Don't call them attributes, that term is used for something different.
>They are called rule or token references (depending whether you write  a+ 
>or A+).
>Attributes are "fields" of those references, like $a.text and the like.
>Also, parameters, return values, and scope "fields" are also called  
>attributes
>(since they are essentially the same thing).
>As such, there are predefined attributes (text, start, stop, line, st  come 
>to mind)
>and "user defined" attributes, though I think we don't have a  qualifier 
>like that,
>they are just "attributes".
>
>Hope that clears that up :)
>
>cheers,
>-k
>--
>Kay R?pke
>http://classdump.org/
>
>
>
>

_________________________________________________________________
Use your PC to make calls at very low rates 
https://voiceoam.pcs.v2s.live.com/partnerredirect.aspx


From prm225 at gmail.com  Tue Nov 14 11:28:56 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Tue, 14 Nov 2006 14:28:56 -0500
Subject: [antlr-interest] searchable antlr archives/forum/irc
Message-ID: <81ce7cdb0611141128j7d3bafdat28fb96ebf5d6eaf9@mail.gmail.com>

Hi.
Is there a way to search the archives?  I didn't see any such thing at
http://www.antlr.org/pipermail/antlr-interest/ . Sure, antlr may
be fun, but searching through those archives is not.

And is there a forum other than the jGuru one? That doesn't have
anything after 2003.

And why not have an #antlr irc channel?

Thanks.

From antlr at shmuelhome.mine.nu  Tue Nov 14 22:16:39 2006
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 15 Nov 2006 08:16:39 +0200
Subject: [antlr-interest] Possible serious bug using setText in Antlr3
Message-ID: <455AB0C7.50306@shmuelhome.mine.nu>

The wiki page, "how do I strip quotes", recommends using setText to 
change the text of the token to be generated. For example

ESC : '\\' 'n' {setText("\n");};

As far as I can tell, this sets an instance variable of the lexer to the 
specified text. Emit then adds this text to generated tokens. getText 
will then preferentially return this text rather than build a string 
from the character stream. So far, so good. But nothing changes the 
instance variable back to null. So all future tokens will have the same 
text.

setting text=null in nextToken seems to work for me.

From mail at martin-probst.com  Wed Nov 15 01:26:01 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 15 Nov 2006 10:26:01 +0100
Subject: [antlr-interest] Some ANTLR questions
In-Reply-To: <20061109180706.A632F159A@mail.intersystems.com>
References: <20061109180706.A632F159A@mail.intersystems.com>
Message-ID: <3DFDDFBF-06B2-413D-879D-31035C4EF001@martin-probst.com>

> 1) UP and DOWN are indicators of tree structure when the output is  
> an AST. There are a few other things like this, depending on your  
> target language too. So, yes you cannot use these. ANTLR3 error  
> checking is a bit lax right now as this will be filled in when  
> ANTLR3 is written in ANTLR3. It becomes "obvious" as you use it  
> right now ;-)

I think this should be changed to something less common. Maybe  
__UP_ANTLR_INT or something similar, something normal users won't run  
into?

Regards,
Martin

From rhill03 at eds.com  Wed Nov 15 07:42:18 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 15 Nov 2006 15:42:18 -0000
Subject: [antlr-interest] Template rewrite problem?
Message-ID: <2E909902FD3A03419E3A905908AE3DD40296CE4A@UKNSM201.emea.corp.eds.com>

On a string template re-write, the code generated by the following rule

: ^(BLOCKCODE BlockCode) -> {%{$BlockCode.text}}
| ^(LINECODE LineCode)  {System.out.println($LineCode.text);} ->
{%{$LineCode.text}}


Does not handle the template creation for LineCode correctly, in the
generated Java I get

// TEMPLATE REWRITE
                    // 99:26: -> {%{$LineCode.text}}
                    {
                        retval.st = new
StringTemplate(templateLib,$LineCode.text);
                    }
(it doesn't seem to want to reference the Tree for the LineCode variable
in the action?)
however it does reference $LineCode correctly in the action code.  :

             System.out.println(LineCode4.getText());


The code generation for the BLOCKCODE alt is fine, and the template
creation is ok.

// TEMPLATE REWRITE
                    // 98:27: -> {%{$BlockCode.text}}
                    {
                        retval.st = new
StringTemplate(templateLib,BlockCode3.getText());
                    }


I have done a work around thus
@init {
String code;
} 
	: ^(BLOCKCODE BlockCode) -> {%{$BlockCode.text}}
	| ^(LINECODE LineCode)  {code = $LineCode.text;} -> {%{code}}
;


Can anyone throw any light on this odd behaviour?

Cheers!

Rob

Robert Hill
Information Engineer
UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St, Sheffield. S11
8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061115/b78edc01/attachment.html 

From parrt at cs.usfca.edu  Wed Nov 15 08:55:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Nov 2006 08:55:38 -0800
Subject: [antlr-interest] Possible serious bug using setText in Antlr3
In-Reply-To: <455AB0C7.50306@shmuelhome.mine.nu>
References: <455AB0C7.50306@shmuelhome.mine.nu>
Message-ID: <EA2345CB-A5D1-443C-A64F-593A8C8D9FFA@cs.usfca.edu>


On Nov 14, 2006, at 10:16 PM, shmuel siegel wrote:

> The wiki page, "how do I strip quotes", recommends using setText to  
> change the text of the token to be generated. For example
>
> ESC : '\\' 'n' {setText("\n");};
>
> As far as I can tell, this sets an instance variable of the lexer  
> to the specified text. Emit then adds this text to generated  
> tokens. getText will then preferentially return this text rather  
> than build a string from the character stream. So far, so good. But  
> nothing changes the instance variable back to null. So all future  
> tokens will have the same text.
>
> setting text=null in nextToken seems to work for me.

Yes, you are right.  I have that fix already in 3.0b5 coming out  
today :)

Ter

From rob.hill at blueyonder.co.uk  Wed Nov 15 09:52:59 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 15 Nov 2006 17:52:59 -0000
Subject: [antlr-interest] Possible serious bug using setText in Antlr3
In-Reply-To: <EA2345CB-A5D1-443C-A64F-593A8C8D9FFA@cs.usfca.edu>
Message-ID: <20061115175305.3DA9919076C@www.antlr.org>

Lol, this is partly related to my problem.
I altered the lexer to strip off some characters, - using settext - and
that's why I'd altered the BLOCKCODE/ LINECODE rules to just make a template
from the token.. LOL, didn't realise that wasn't working either!

I still cant figure out why my LINECODE rule won't re-write the template
though :(


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 15 November 2006 16:56
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Possible serious bug using setText in Antlr3
> 
> 
> On Nov 14, 2006, at 10:16 PM, shmuel siegel wrote:
> 
> > The wiki page, "how do I strip quotes", recommends using setText to
> > change the text of the token to be generated. For example
> >
> > ESC : '\\' 'n' {setText("\n");};
> >
> > As far as I can tell, this sets an instance variable of the lexer
> > to the specified text. Emit then adds this text to generated
> > tokens. getText will then preferentially return this text rather
> > than build a string from the character stream. So far, so good. But
> > nothing changes the instance variable back to null. So all future
> > tokens will have the same text.
> >
> > setting text=null in nextToken seems to work for me.
> 
> Yes, you are right.  I have that fix already in 3.0b5 coming out
> today :)
> 
> Ter



From parrt at cs.usfca.edu  Wed Nov 15 10:11:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Nov 2006 10:11:38 -0800
Subject: [antlr-interest] behind in my email
Message-ID: <E2BC213D-A1A3-4A6D-8DF8-AED0824FA241@cs.usfca.edu>

hi, I'm way behind in email at the moment...will catch up soon.

Ter

From parrt at cs.usfca.edu  Wed Nov 15 14:13:49 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Nov 2006 14:13:49 -0800
Subject: [antlr-interest] ANTLR 3.0b5 released!
Message-ID: <4FD8EED0-834C-46C0-A75B-D74E9C49C768@cs.usfca.edu>

Hi, 3.0b5 is out and is a very substantial fix to 3.0b4 (3 months of  
tweaking and bug fixing).  It should also be slightly faster to  
process .g files.

The biggest thing is that your grammar file names must match the  
grammar name
inside (your generated class names will also be different) and we use
$channel=HIDDEN now instead of channel=99 inside lexer actions.
Should be compatible other than that.   Please look at complete list of
changes.

Book is progressing nicely as well. I hope to have final draft in to  
the publisher by March 07.  Look for an announcement sometime soon.

Terence

From rschulz at sonic.net  Wed Nov 15 14:32:17 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 15 Nov 2006 14:32:17 -0800
Subject: [antlr-interest] ANTLR 3.0b5 released!
In-Reply-To: <4FD8EED0-834C-46C0-A75B-D74E9C49C768@cs.usfca.edu>
References: <4FD8EED0-834C-46C0-A75B-D74E9C49C768@cs.usfca.edu>
Message-ID: <200611151432.17481.rschulz@sonic.net>

Terence,

On Wednesday 15 November 2006 14:13, Terence Parr wrote:
> Hi, 3.0b5 is out and is a very substantial fix to 3.0b4 (3 months of
> tweaking and bug fixing).  It should also be slightly faster to
> process .g files.

Many thanks.


> The biggest thing is that your grammar file names must match the
> grammar name
> inside (your generated class names will also be different) and we use
> $channel=HIDDEN now instead of channel=99 inside lexer actions.
> Should be compatible other than that.   Please look at complete list
> of changes.

If I'm not mistaken, the generated parser class name is now the grammar 
name with "Parser" appended, right? Previously the main parser name was 
the grammar name.


> Book is progressing nicely as well. I hope to have final draft in to
> the publisher by March 07.  Look for an announcement sometime soon.
>
> Terence


Randall Schulz

From kroepke at classdump.org  Wed Nov 15 14:36:22 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 15 Nov 2006 23:36:22 +0100
Subject: [antlr-interest] ANTLR 3.0b5 released!
In-Reply-To: <200611151432.17481.rschulz@sonic.net>
References: <4FD8EED0-834C-46C0-A75B-D74E9C49C768@cs.usfca.edu>
	<200611151432.17481.rschulz@sonic.net>
Message-ID: <3A5BEF82-DF31-4A14-BFD3-C7D521571F66@classdump.org>


On 15. Nov 2006, at 23:32 , Randall R Schulz wrote:

> If I'm not mistaken, the generated parser class name is now the  
> grammar
> name with "Parser" appended, right? Previously the main parser name  
> was
> the grammar name.

Yes. The suffixes used are Lexer, Parser, and TreeParser.

-k
-- 
Kay R?pke
http://classdump.org/





From rob.hill at blueyonder.co.uk  Wed Nov 15 14:48:26 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 15 Nov 2006 22:48:26 -0000
Subject: [antlr-interest] ANTLR 3.0b5 released!
In-Reply-To: <4FD8EED0-834C-46C0-A75B-D74E9C49C768@cs.usfca.edu>
Message-ID: <20061115224834.D80831906E5@www.antlr.org>

Hi Ter! 
	Thanks for this, I've just installed, and rebuilt my current
project, and all seems well :)

Sweet !


Cheers!
/2ob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 15 November 2006 22:14
> To: ANTLR Interest
> Subject: [antlr-interest] ANTLR 3.0b5 released!
> 
> Hi, 3.0b5 is out and is a very substantial fix to 3.0b4 (3 months of
> tweaking and bug fixing).  It should also be slightly faster to
> process .g files.
> 
> The biggest thing is that your grammar file names must match the
> grammar name
> inside (your generated class names will also be different) and we use
> $channel=HIDDEN now instead of channel=99 inside lexer actions.
> Should be compatible other than that.   Please look at complete list of
> changes.
> 
> Book is progressing nicely as well. I hope to have final draft in to
> the publisher by March 07.  Look for an announcement sometime soon.
> 
> Terence



From parrt at cs.usfca.edu  Wed Nov 15 14:55:53 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Nov 2006 14:55:53 -0800
Subject: [antlr-interest] ANTLR 3.0b5 released!
In-Reply-To: <20061115224834.D80831906E5@www.antlr.org>
References: <20061115224834.D80831906E5@www.antlr.org>
Message-ID: <AD3FA24D-584F-4FDB-8170-9E1A0BAE82F6@cs.usfca.edu>


On Nov 15, 2006, at 2:48 PM, Robert Hill wrote:

> Hi Ter!
> 	Thanks for this, I've just installed, and rebuilt my current
> project, and all seems well :)
>
> Sweet !

Good to know. :)  Yeah, b5 is a major update over b4.  We're getting  
close. Like 20 must-fix bugs left for final release.  As I write the  
book I find weird inconsistencies in my writing and then I fix the  
software to be more sane so the text is sane. :)

Expect upgrade of ANTLRWorks shortly that has 3.0b5 in it.

Ter

From rschulz at sonic.net  Wed Nov 15 14:59:15 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 15 Nov 2006 14:59:15 -0800
Subject: [antlr-interest] Tip for Eclipse Users
Message-ID: <200611151459.16047.rschulz@sonic.net>

Hi,

Perhaps this is SOP for most Eclipse users, but being rather far from an 
Eclipse power user, I just discovered it. And then, it was only by 
accident after Terence supplied my an interim JAR file that included 
both .class and .java files. What I'm talking about is Eclipse's 
ability to access Java source files from an external JAR file in its 
build path.

So my tip is to take the source files from a release tarball and merge 
them with the results of expanding lib/antlr-v3.0b5.jar and build a new 
JAR from the combined contents. Use that in Eclipse and you can browse 
the source with all the power of Eclipse's navigation features and get 
the JavaDoc pop-ups and whatnot, as well.


Randall Schulz

From rob.hill at blueyonder.co.uk  Wed Nov 15 15:12:45 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 15 Nov 2006 23:12:45 -0000
Subject: [antlr-interest] ANTLR 3.0b5 released!
In-Reply-To: <AD3FA24D-584F-4FDB-8170-9E1A0BAE82F6@cs.usfca.edu>
Message-ID: <20061115231249.7DB881907AE@www.antlr.org>

I've just re-checked my only known weird antlr problem, and its still there
in the new b5.
Mail earlier today outlines problem, not sure what it could be, I'm fairly
sure its not my grammar/code since the line immediately above does exactly
the same and works just fine.

Hmmm. Weird!

Cheers,
Rob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 15 November 2006 22:56
> To: ANTLR Interest
> Subject: Re: [antlr-interest] ANTLR 3.0b5 released!
> 
> 
> On Nov 15, 2006, at 2:48 PM, Robert Hill wrote:
> 
> > Hi Ter!
> > 	Thanks for this, I've just installed, and rebuilt my current
> > project, and all seems well :)
> >
> > Sweet !
> 
> Good to know. :)  Yeah, b5 is a major update over b4.  We're getting
> close. Like 20 must-fix bugs left for final release.  As I write the
> book I find weird inconsistencies in my writing and then I fix the
> software to be more sane so the text is sane. :)
> 
> Expect upgrade of ANTLRWorks shortly that has 3.0b5 in it.
> 
> Ter



From rob.hill at blueyonder.co.uk  Wed Nov 15 15:14:35 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed, 15 Nov 2006 23:14:35 -0000
Subject: [antlr-interest] Tip for Eclipse Users
In-Reply-To: <200611151459.16047.rschulz@sonic.net>
Message-ID: <20061115231439.A73231909FB@www.antlr.org>

Or just use a *real* ide like IntelliJ ;)

<ducks from ensuing IDE holy jihad.>

;) 

/2ob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Randall R Schulz
> Sent: 15 November 2006 22:59
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Tip for Eclipse Users
> 
> Hi,
> 
> Perhaps this is SOP for most Eclipse users, but being rather far from an
> Eclipse power user, I just discovered it. And then, it was only by
> accident after Terence supplied my an interim JAR file that included
> both .class and .java files. What I'm talking about is Eclipse's
> ability to access Java source files from an external JAR file in its
> build path.
> 
> So my tip is to take the source files from a release tarball and merge
> them with the results of expanding lib/antlr-v3.0b5.jar and build a new
> JAR from the combined contents. Use that in Eclipse and you can browse
> the source with all the power of Eclipse's navigation features and get
> the JavaDoc pop-ups and whatnot, as well.
> 
> 
> Randall Schulz



From dave at badgers-in-foil.co.uk  Wed Nov 15 15:16:56 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Wed, 15 Nov 2006 23:16:56 +0000
Subject: [antlr-interest] Tip for Eclipse Users
In-Reply-To: <200611151459.16047.rschulz@sonic.net>
References: <200611151459.16047.rschulz@sonic.net>
Message-ID: <20061115231656.GA22850@badgers-in-foil.co.uk>

On Wed, Nov 15, 2006 at 02:59:15PM -0800, Randall R Schulz wrote:
> So my tip is to take the source files from a release tarball and merge 
> them with the results of expanding lib/antlr-v3.0b5.jar and build a new 
> JAR from the combined contents. Use that in Eclipse and you can browse 
> the source with all the power of Eclipse's navigation features and get 
> the JavaDoc pop-ups and whatnot, as well.

I've seen many projects release both a foo.jar and a foo-src.jar in
their standard download to support just that kind of usage.  (You can
add a 'source attachmnent' to a classpath entry in Eclipse so that
there's no need for .class and .java files to all be in one .jar file.)


ta,
dave

-- 
http://david.holroyd.me.uk/

From foolishewe at hotmail.com  Wed Nov 15 15:33:42 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Wed, 15 Nov 2006 23:33:42 +0000
Subject: [antlr-interest] A few ANTLR 3.0b4 questions
Message-ID: <BAY107-F484B5644269A8B909F516C0EA0@phx.gbl>

Hello All:

I'm trying to use ANTLR 3.0b4 in ANTLRworks, and I have a few things I'd 
like to ask.

1) I'm chomping at the bit to try Ter's new Anltr 3.05b (if I have the 
version number right),
    so I'm looking forward to the new release of ANTLRworlks.  If anything 
I'm asking
    is fixed in the new version, I haven't had a chance to try it yet due to 
my choice of
    development environment, so just let me know.
2) I am using an AST but for some reason, neither @header{} @members{} seem
    to have the deisred behavior as  appears to be
    indicated in the wiki nor does header{} appear to work.  I want to set 
the java package
    name and perhaps use some imported libraries.

The relevant syntax looks like:
grammar MyGrammar;

options{
	output=AST;
}

/* This won't compile
@header{
	package mypackage;
}

// Additional members for the derived Parser class
@members{

	public static void main(String[] args) throws Exception {
// Body of main omitted
	}

}
*/

tokens{
// This all works.
}

3) I would like to add some Java source to invoke some actions in my 
grammar.
    Do I need code to walk the AST, or can I try to accomplish them during 
the AST
    construction phase, I expect I'll be using both inherited and synthetic 
attributes in my rules.
If I have a rule like

command:
    (
        c1=commandType1->(COMMAND $c1) // Here I would like java code for 
command processing
    |
        c2=commandType2->(COMMAND $c2) // Here too
    );

I took a quick look at the wiki and it appears there is some @actions stuff 
but I don't grok it yet.

Regards:

Bill M.

_________________________________________________________________
Get the latest Windows Live Messenger 8.1 Beta version.?Join now. 
http://ideas.live.com


From rschulz at sonic.net  Wed Nov 15 15:40:15 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 15 Nov 2006 15:40:15 -0800
Subject: [antlr-interest] Tip for Eclipse Users
In-Reply-To: <20061115231656.GA22850@badgers-in-foil.co.uk>
References: <200611151459.16047.rschulz@sonic.net>
	<20061115231656.GA22850@badgers-in-foil.co.uk>
Message-ID: <200611151540.15695.rschulz@sonic.net>

On Wednesday 15 November 2006 15:16, David Holroyd wrote:
> ...
>
> I've seen many projects release both a foo.jar and a foo-src.jar in
> their standard download to support just that kind of usage.  (You can
> add a 'source attachmnent' to a classpath entry in Eclipse so that
> there's no need for .class and .java files to all be in one .jar
> file.)

It seems preferable to me to have them both in one. Then I have fewer 
things to worry about being in sync and changing when a new release 
comes out.


> ta,
> dave


Randall Schulz

From rschulz at sonic.net  Wed Nov 15 15:44:22 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 15 Nov 2006 15:44:22 -0800
Subject: [antlr-interest] Tip for Eclipse Users
In-Reply-To: <20061115231439.A73231909FB@www.antlr.org>
References: <20061115231439.A73231909FB@www.antlr.org>
Message-ID: <200611151544.22458.rschulz@sonic.net>

Robert,

On Wednesday 15 November 2006 15:14, Robert Hill wrote:
> Or just use a *real* ide like IntelliJ ;)

I will gladly accept a $250 contribution to equalize my out-of-pocket 
cost of using IntelliJ instead of Eclipse. The good news for you is 
that I will not charge you for the cost of the time I spend learning 
this major new tool.


> <ducks from ensuing IDE holy jihad.>
>
> ;)
>
> /2ob


RRS

From kroepke at classdump.org  Wed Nov 15 15:51:37 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 16 Nov 2006 00:51:37 +0100
Subject: [antlr-interest] Tip for Eclipse Users
In-Reply-To: <200611151544.22458.rschulz@sonic.net>
References: <20061115231439.A73231909FB@www.antlr.org>
	<200611151544.22458.rschulz@sonic.net>
Message-ID: <31C9CBB7-3E5A-408E-9704-C2FACDC8B04F@classdump.org>


On 16. Nov 2006, at 0:44 , Randall R Schulz wrote:

> I will gladly accept a $250 contribution to equalize my out-of-pocket
> cost of using IntelliJ instead of Eclipse. The good news for you is
> that I will not charge you for the cost of the time I spend learning
> this major new tool.

Never have I seen such an elegant response to an offer for a flamewar!
kudos! ;)
(But I have to say that IntelliJ is worth every cent!)

-k
-- 
Kay R?pke
http://classdump.org/





From open.zone at virgin.net  Wed Nov 15 19:04:41 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu, 16 Nov 2006 03:04:41 -0000
Subject: [antlr-interest] A few ANTLR 3.0b4 questions
In-Reply-To: <BAY107-F484B5644269A8B909F516C0EA0@phx.gbl>
Message-ID: <003801c7092b$f7b9a150$c704a8c0@hercules>

Hi,

[...]

> 2) I am using an AST but for some reason, neither @header{} 
> @members{} seem
>     to have the deisred behavior as  appears to be
>     indicated in the wiki nor does header{} appear to work.  
> I want to set 
> the java package
>     name and perhaps use some imported libraries.
> 
> The relevant syntax looks like:
> grammar MyGrammar;
> 
> options{
> 	output=AST;
> }
> 
> /* This won't compile
> @header{
> 	package mypackage;
> }

[...]

> tokens{
> // This all works.
> }

@header{...}, @members{...} etc blocks cannot appear before tokens{...}
block.

> 3) I would like to add some Java source to invoke some actions in my 
> grammar.
>     Do I need code to walk the AST, or can I try to 
> accomplish them during 
> the AST
>     construction phase, I expect I'll be using both inherited 
> and synthetic 
> attributes in my rules.

Depends on your language. Some language do not lend themselves to
"single-phase" processing tools. Using an independent TreeParser is
"cleaner" but less performant.

> If I have a rule like
> 
> command:
>     (
>         c1=commandType1->(COMMAND $c1) // Here I would like 
> java code for 
> command processing
>     |
>         c2=commandType2->(COMMAND $c2) // Here too
>     );
> 
> I took a quick look at the wiki and it appears there is some 
> @actions stuff 
> but I don't grok it yet.

Have a look at the source code in the samples. And at the mantra project
sources too.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From jan_vlegels at hotmail.com  Thu Nov 16 08:06:01 2006
From: jan_vlegels at hotmail.com (Jan Vlegels)
Date: Thu, 16 Nov 2006 16:06:01 +0000
Subject: [antlr-interest] (no subject)
Message-ID: <BAY122-F10B349EDD60816954F62D97E90@phx.gbl>

Hello,

I created my own AST node type, which extends the default CommonAST node 
type.  In the documentation i read that i should set the ASTLabelType option 
in my grammar so the generated parser knows which type of nodes he should 
create.

When i check the generated code of the parser after compiling my grammar, i 
can't find where the parser sets the ASTFactory to make nodes of the type i 
created.  The parser just casts the nodes of type CommonAST created by the 
ASTFactory to my node type.   But, the problem in that case is that the 
ASTFactory does not call the initialize methods of my node type, which 
execute some extra logic, but the initialize methods of CommonAST node type. 
  So at the end, i think, there is an AST with nodes of my type, but they 
will not contain the correct information because neither of the initialize 
methods from my node type were used.  Am i right?

Thank you for helping me,

JV

_________________________________________________________________
In 2 tellen een GRATIS online foto dagboek http://spaces.live.com/


From open.zone at virgin.net  Thu Nov 16 09:23:16 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu, 16 Nov 2006 17:23:16 -0000
Subject: [antlr-interest] (no subject)
In-Reply-To: <BAY122-F10B349EDD60816954F62D97E90@phx.gbl>
Message-ID: <001701c709a3$e9239150$c704a8c0@hercules>

Hi,

> I created my own AST node type, which extends the default 
> CommonAST node type.

[...]

> When i check the generated code of the parser after compiling 
> my grammar, i 
> can't find where the parser sets the ASTFactory to make nodes 
> of the type i 
> created.
[...]

You should create your own custom ASTFactory that created nodes of your
custom AST node type.

Then, in your code, when you create the parser, configure it to use your
ASTFactory. You will need to do the same with any TreeParsers too.


Micheal


From prashant.deva at gmail.com  Thu Nov 16 12:59:50 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu, 16 Nov 2006 12:59:50 -0800
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <002701c7078f$3ee56fd0$c704a8c0@hercules>
References: <41fed8f80611131143n1ec031b4s339f5ca678674f3@mail.gmail.com>
	<002701c7078f$3ee56fd0$c704a8c0@hercules>
Message-ID: <41fed8f80611161259t17adfa44vabddc6a44c2c7aca@mail.gmail.com>

Well, actually I was supposed to publish the paper along with Terence after
we implement it for antlr 3.
So everything is on hold right now :(

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com

On 11/13/06, Micheal J <open.zone at virgin.net> wrote:
>
>  Hi,
>
> Can you go ahead and publish just how this was supposed to work?. Perhaps
> build a one-off V3 release with incremental lex/parse support?
>
> Micheal
>
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
>
>  -----Original Message-----
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Prashant Deva
> *Sent:* 13 November 2006 19:43
> *To:* Alex Shneyderman
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Incremental lexer and parser?
>
> Hi,
>  Yes, we were originally planning to add the support for incremental
> parsing in antlr 3, but since Terence has been busy with other stuff i  am
> unsure whether it will be included in the first release or not.
>
> --
> Prashant Deva
> Creator, ANTLR Studio
> Founder, Placid Systems, www.placidsystems.com
>
>
> On 11/13/06, Alex Shneyderman <a.shneyderman at gmail.com> wrote:
> >
> > I was reading the  Prashant Deva's article on ibm site and he was
> > talking of
> > incremental lexing and parsing. I was wondering if ANTLR has any support
> > for it. If not is this something that would be supported in 3.0?
> >
> > A discussion on how one would approch the problem given ANTLR as
> > the tool - for parser and lexer generation - would also be helpfull.
> >
> > --
> > Thanks,
> > Alex.
> >
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061116/d83ff300/attachment.html 

From open.zone at virgin.net  Thu Nov 16 18:44:31 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 17 Nov 2006 02:44:31 -0000
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <41fed8f80611161259t17adfa44vabddc6a44c2c7aca@mail.gmail.com>
Message-ID: <000201c709f2$4fc03280$c704a8c0@hercules>

Hi,
 
Ok. I remember now that there may have been something posted to the list a
while back. One quick question, was it going to be _very_ different
(conceptually and implementation-wise) from what you did with ANTLR Studio?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: Prashant Deva [mailto:prashant.deva at gmail.com] 
Sent: 16 November 2006 21:00
To: Micheal J
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Incremental lexer and parser?



Well, actually I was supposed to publish the paper along with Terence after
we implement it for antlr 3.
So everything is on hold right now :(

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com


On 11/13/06, Micheal J <open.zone at virgin.net > wrote: 

Hi,
 
Can you go ahead and publish just how this was supposed to work?. Perhaps
build a one-off V3 release with incremental lex/parse support?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:
<mailto:antlr-interest-bounces at antlr.org> antlr-interest-bounces at antlr.org]
On Behalf Of Prashant Deva
Sent: 13 November 2006 19:43
To: Alex Shneyderman
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Incremental lexer and parser?


Hi,
 Yes, we were originally planning to add the support for incremental parsing
in antlr 3, but since Terence has been busy with other stuff i  am unsure
whether it will be included in the first release or not.

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com



On 11/13/06, Alex Shneyderman <a.shneyderman at gmail.com> wrote: 

I was reading the  Prashant Deva's article on ibm site and he was talking of
incremental lexing and parsing. I was wondering if ANTLR has any support
for it. If not is this something that would be supported in 3.0?

A discussion on how one would approch the problem given ANTLR as
the tool - for parser and lexer generation - would also be helpfull.

--
Thanks,
Alex.






-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061117/f41b4d98/attachment.html 

From ren_c_tan at yahoo.com  Fri Nov 17 01:16:43 2006
From: ren_c_tan at yahoo.com (Randolph Tan)
Date: Fri, 17 Nov 2006 09:16:43 +0000 (GMT)
Subject: [antlr-interest] Still need help on installing ANTLR
Message-ID: <347300.17809.qm@web56104.mail.re3.yahoo.com>

I am really sorry for my continuous disturbance to this mailing list.
   
  Following some of your previous suggestions, I have already successfully done run configure. But I encountered another set of problems when trying to make install:
   
  /////////////////////////////////////////////Screen////////////////////////////////////////////////
  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>> make -C ./antlr install                              
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
make[1]: Entering directory `/e/Ren_Junks/antlr-2.7.6/antlr'
*** compiling 209 Java file(s)
./Parser.java:57: error: Class `antlr.Parser' already defined in e:/Ren_Junks/antlr-2.7.6/antlr/Parser.java:57.
   public abstract class Parser {
                         ^
./Parser.java:86: confused by earlier errors, bailing out
/////////////////////////////////////////////Screen////////////////////////////////////////////////
   
  Thinking that I may need jdk, i tried running it and got this error.
   
  /////////////////////////////////////////////Screen////////////////////////////////////////////////
  $ j2sdk-1_4_2_13-linux-i586.bin 
./j2sdk-1_4_2_13-linux-i586.bin: more: command not found
  Do you agree to the above license terms? [yes or no] 
y
./j2sdk-1_4_2_13-linux-i586.bin: df: command not found
./j2sdk-1_4_2_13-linux-i586.bin: [: -lt: unary operator expected
Unpacking...
Can't find /usr/bin/sum to do checksum.  Continuing anyway.
Extracting...
./install.sfx.2304: ./install.sfx.2304: cannot execute binary file
Done.
/////////////////////////////////////////////Screen////////////////////////////////////////////////
   
  Btw, thanks to Peggy Fieland & Loring Craymer for your help. And sorry again for disturbing the mailing list with stupid questions.
   
  > Well, the error reports say you have no development
> support for Java installed (neither gcj nor javac),
> you are missing binutils (no ar -- you cannot make
> libraries), and the configure script did not get far
> enough to check if you have a C++ compiler.
> 
> You need a few more of the MinGW packages, and you
> might want to download an SDK from java.sun.com
> 
> --Loring


 Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061117/6c8141f7/attachment.html 

From prashant.deva at gmail.com  Fri Nov 17 02:39:38 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Fri, 17 Nov 2006 02:39:38 -0800
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <000201c709f2$4fc03280$c704a8c0@hercules>
References: <41fed8f80611161259t17adfa44vabddc6a44c2c7aca@mail.gmail.com>
	<000201c709f2$4fc03280$c704a8c0@hercules>
Message-ID: <41fed8f80611170239l6326bfeej431d019a9e7d8223@mail.gmail.com>

Its gonna be the same algorithm as inside ANTLR Studio, though we are gonna
do a fair bit of tweaking to make it more generic.
I personally dont remember posting anything abt the algorithm on the list,
but if you can find something thats great for you :)

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com

On 11/16/06, Micheal J <open.zone at virgin.net> wrote:
>
>  Hi,
>
> Ok. I remember now that there may have been something posted to the list a
> while back. One quick question, was it going to be _very_ different
> (conceptually and implementation-wise) from what you did with ANTLR Studio?
>
> Micheal
>
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
>
>  -----Original Message-----
> *From:* Prashant Deva [mailto:prashant.deva at gmail.com]
> *Sent:* 16 November 2006 21:00
> *To:* Micheal J
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Incremental lexer and parser?
>
>
> Well, actually I was supposed to publish the paper along with Terence
> after we implement it for antlr 3.
> So everything is on hold right now :(
>
> --
> Prashant Deva
> Creator, ANTLR Studio
> Founder, Placid Systems, www.placidsystems.com
>
> On 11/13/06, Micheal J <open.zone at virgin.net > wrote:
> >
> >  Hi,
> >
> > Can you go ahead and publish just how this was supposed to work?.
> > Perhaps build a one-off V3 release with incremental lex/parse support?
> >
> > Micheal
> >
> > -----------------------
> > The best way to contact me is via the list/forum. My time is very
> > limited.
> >
> >  -----Original Message-----
> > *From:* antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org]
> > *On Behalf Of *Prashant Deva
> > *Sent:* 13 November 2006 19:43
> > *To:* Alex Shneyderman
> > *Cc:* antlr-interest at antlr.org
> > *Subject:* Re: [antlr-interest] Incremental lexer and parser?
> >
> > Hi,
> >  Yes, we were originally planning to add the support for incremental
> > parsing in antlr 3, but since Terence has been busy with other stuff i  am
> > unsure whether it will be included in the first release or not.
> >
> > --
> > Prashant Deva
> > Creator, ANTLR Studio
> > Founder, Placid Systems, www.placidsystems.com
> >
> >
> > On 11/13/06, Alex Shneyderman <a.shneyderman at gmail.com> wrote:
> > >
> > > I was reading the  Prashant Deva's article on ibm site and he was
> > > talking of
> > > incremental lexing and parsing. I was wondering if ANTLR has any
> > > support
> > > for it. If not is this something that would be supported in 3.0?
> > >
> > > A discussion on how one would approch the problem given ANTLR as
> > > the tool - for parser and lexer generation - would also be helpfull.
> > >
> > > --
> > > Thanks,
> > > Alex.
> > >
> >
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061117/34ccef55/attachment-0001.html 

From prashant.deva at gmail.com  Fri Nov 17 02:41:50 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Fri, 17 Nov 2006 02:41:50 -0800
Subject: [antlr-interest] ANTLR and ANTLR Studio on this month's Eclipse
	Magazine
Message-ID: <41fed8f80611170241ma1974dap5fc8572a860551e0@mail.gmail.com>

Hi,
 This month's Eclipse magazine contains an article on ANTLR and ANTLR Studio
on the cd rom!

Its in german only i guess.

Here is the link -
http://eclipse-magazin.de/itr/ausgaben/psecom,id,333,nodeid,228.html

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061117/659c1408/attachment.html 

From open.zone at virgin.net  Fri Nov 17 03:21:21 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 17 Nov 2006 11:21:21 -0000
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <41fed8f80611170239l6326bfeej431d019a9e7d8223@mail.gmail.com>
Message-ID: <000d01c70a3a$8378a010$c704a8c0@hercules>

Hi,
 
Not sure if algorithms were discussed. Just some notice about Ter,  yourself
and incremental analysis.
 
I'm not actually looking for anything in particular. Just curious about
differences with what was already possible [to tack on manually] with 2.7.x.
Sounds like it's the same just co-opting memoization.
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: Prashant Deva [mailto:prashant.deva at gmail.com] 
Sent: 17 November 2006 10:40
To: Micheal J
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Incremental lexer and parser?


Its gonna be the same algorithm as inside ANTLR Studio, though we are gonna
do a fair bit of tweaking to make it more generic.
I personally dont remember posting anything abt the algorithm on the list,
but if you can find something thats great for you :) 

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com


On 11/16/06, Micheal J <open.zone at virgin.net> wrote: 

Hi,
 
Ok. I remember now that there may have been something posted to the list a
while back. One quick question, was it going to be _very_ different
(conceptually and implementation-wise) from what you did with ANTLR Studio?

 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 



-----Original Message-----
From: Prashant Deva [mailto:prashant.deva at gmail.com] 
Sent: 16 November 2006 21:00
To: Micheal J
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Incremental lexer and parser?



Well, actually I was supposed to publish the paper along with Terence after
we implement it for antlr 3.
So everything is on hold right now :(

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com


On 11/13/06, Micheal J <open.zone at virgin.net > wrote: 

Hi,
 
Can you go ahead and publish just how this was supposed to work?. Perhaps
build a one-off V3 release with incremental lex/parse support?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:
<mailto:antlr-interest-bounces at antlr.org> antlr-interest-bounces at antlr.org]
On Behalf Of Prashant Deva
Sent: 13 November 2006 19:43
To: Alex Shneyderman
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Incremental lexer and parser?


Hi,
 Yes, we were originally planning to add the support for incremental parsing
in antlr 3, but since Terence has been busy with other stuff i  am unsure
whether it will be included in the first release or not.

-- 
Prashant Deva
Creator, ANTLR Studio
Founder, Placid Systems, www.placidsystems.com



On 11/13/06, Alex Shneyderman <a.shneyderman at gmail.com> wrote: 

I was reading the  Prashant Deva's article on ibm site and he was talking of
incremental lexing and parsing. I was wondering if ANTLR has any support
for it. If not is this something that would be supported in 3.0?

A discussion on how one would approch the problem given ANTLR as
the tool - for parser and lexer generation - would also be helpfull.

--
Thanks,
Alex.








-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061117/91044e3c/attachment.html 

From alexander.berger at finnova.ch  Fri Nov 17 06:56:54 2006
From: alexander.berger at finnova.ch (alexander.berger at finnova.ch)
Date: Fri, 17 Nov 2006 15:56:54 +0100
Subject: [antlr-interest] Antlr 3.0b5 - possible Bug in NFAToDFAConverter
Message-ID: <696E9A46BED8E544A7BD2C20A7E94F68043BBDA0@marena.SIDON.OLYMP>

Hi Everybody. 

I upgraded from antlr 3.0b4 to 3.0b5 and now the processing of my grammar
fails with the StackTrace below. Antlr is consuming a lot of memory (up to 
1GB), so it looks as if there is a serious problem in the NFA to DFA Converter.

So, can anybody please confirm this or am I the only one having this problem. The grammar producing this error is quite big but I will provide
it if someone wants to have a look at it.


Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.util.HashMap.resize(HashMap.java:462)
	at java.util.HashMap.addEntry(HashMap.java:755)
	at java.util.HashMap.put(HashMap.java:385)
	at java.util.HashSet.add(HashSet.java:200)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:618)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:748)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:748)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:748)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:704)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:669)
	at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:457)
	at org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransitions(NFAToDFAConverter.java:274)
	at org.antlr.analysis.NFAToDFAConverter.convert(NFAToDFAConverter.java:99)
	at org.antlr.analysis.DFA.<init>(DFA.java:219)
	at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:826)
	at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:774)
	at org.antlr.codegen.Target.performGrammarAnalysis(Target.java:111)
	at org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:279)
	at org.antlr.Tool.processGrammar(Tool.java:329)
	at org.antlr.Tool.process(Tool.java:266)
	at org.antlr.Tool.main(Tool.java:69)



By the way. What is the official way to report bugs in antlr 3.0b* ?

Kind Regards
Alex
____________________________________________

finnova AG Bankware
Alexander Berger
SR-Peripheral-Team 

S?gestrasse 22, CH-5600 Lenzburg
Tel: +41 62 886 4807 / Fax: +41 62 886 4888 mailto:alexander.berger at finnova.ch
http://www.finnova.ch 


From kroepke at classdump.org  Fri Nov 17 07:13:06 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 17 Nov 2006 16:13:06 +0100
Subject: [antlr-interest] Antlr 3.0b5 - possible Bug in NFAToDFAConverter
In-Reply-To: <696E9A46BED8E544A7BD2C20A7E94F68043BBDA0@marena.SIDON.OLYMP>
References: <696E9A46BED8E544A7BD2C20A7E94F68043BBDA0@marena.SIDON.OLYMP>
Message-ID: <0CED8234-6E31-4F30-9684-23155010A569@classdump.org>

Hi Alexander!

On 17. Nov 2006, at 15:56 , alexander.berger at finnova.ch wrote:

> Hi Everybody.
>
> I upgraded from antlr 3.0b4 to 3.0b5 and now the processing of my  
> grammar
> fails with the StackTrace below. Antlr is consuming a lot of memory  
> (up to
> 1GB), so it looks as if there is a serious problem in the NFA to  
> DFA Converter.
>
> So, can anybody please confirm this or am I the only one having  
> this problem. The grammar producing this error is quite big but I  
> will provide
> it if someone wants to have a look at it.

That would be helpful, yes. Terence has made quite a few changes to  
the DFA stuff to fix bugs so it is possible that something's gone  
wrong :(

> By the way. What is the official way to report bugs in antlr 3.0b* ?

Just send them to this list. We will pick it up and put it into the  
bugtracker. You can view the list
of known bugs at <http://www.antlr.org:8888/secure/Dashboard.jspa>.

cheers,

-k
-- 
Kay R?pke
http://classdump.org/





From vipin.gupta at impetus.co.in  Fri Nov 17 08:49:21 2006
From: vipin.gupta at impetus.co.in (Vipin Gupta)
Date: Fri, 17 Nov 2006 22:19:21 +0530
Subject: [antlr-interest] getting error while generating the grammar
In-Reply-To: <mailman.2480.1163759980.15912.antlr-interest@antlr.org>
Message-ID: <004601c70a68$54c52030$8862a8c0@impetus.co.in>

I am getting the error while generating the grammar the following code in
ANTLR 3. can any one help me to correct this syntax.

	expr 	 :	mexpr ((PLUS|MINUS) mexpr)*  -> $s1 (PLUS? MINUS?
$s2)*
		 ; 




From vipin.gupta at impetus.co.in  Fri Nov 17 08:59:35 2006
From: vipin.gupta at impetus.co.in (Vipin Gupta)
Date: Fri, 17 Nov 2006 22:29:35 +0530
Subject: [antlr-interest] getting error while generating the grammar
Message-ID: <004701c70a69$c28b9580$8862a8c0@impetus.co.in>


Corrected the grammar rule
-----Original Message-----
From: Vipin Gupta [mailto:vipin.gupta at impetus.co.in] 
Sent: Friday, November 17, 2006 10:19 PM
To: 'antlr-interest at antlr.org'
Subject: getting error while generating the grammar

I am getting the error while generating the grammar the following code in
ANTLR 3. can any one help me to correct this syntax.

	expr 	 :	s1=mexpr ((PLUS|MINUS) s2=mexpr)*  -> $s1 (PLUS?
MINUS? $s2)*
		 ; 




From dave at badgers-in-foil.co.uk  Fri Nov 17 09:33:20 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 17 Nov 2006 17:33:20 +0000
Subject: [antlr-interest] getting error while generating the grammar
In-Reply-To: <004701c70a69$c28b9580$8862a8c0@impetus.co.in>
References: <004701c70a69$c28b9580$8862a8c0@impetus.co.in>
Message-ID: <20061117173320.GC21323@badgers-in-foil.co.uk>

On Fri, Nov 17, 2006 at 10:29:35PM +0530, Vipin Gupta wrote:
> I am getting the error while generating the grammar the following code in
> ANTLR 3. can any one help me to correct this syntax.
> 
> 	expr 	 :	s1=mexpr ((PLUS|MINUS) s2=mexpr)*  -> $s1 (PLUS?
> MINUS? $s2)*
> 		 ; 

It's an unimplemented feature.  The workaround is to label PLUS and
MINUS, and refer to that label on the right hand side.

See,
  http://www.antlr.org/pipermail/antlr-interest/2006-August/017343.html


ta,
dave

-- 
http://david.holroyd.me.uk/

From foolishewe at hotmail.com  Fri Nov 17 11:03:42 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Fri, 17 Nov 2006 19:03:42 +0000
Subject: [antlr-interest] A few ANTLR 3.0b4 questions
Message-ID: <BAY107-F15F301E82A8911B469C86CC0E80@phx.gbl>

Thanks Michael:

This is very helpful.

Regarding the @header{} section, this appears to only show up in the parser,
so I think I need to copy the body and wrap it with an @lexer::header{} 
section.
Is there some way that I can avoid having two separate headers.  I also 
noticed that changing
the package name has introduced some problems when trying to run the 
debugging environment.
I've gotten to the point where the ANTLR part of the code is large enough we 
want to split
it (to allow a colleague to collaborate with me on the remaining section).  
So now we want
to use separate compilation, and we want the language recognition and high 
level processing
to be an a "frontend" namespace, say "myproject.frontend" while some of the 
library
support routines and run time environment would exist in a "backend" name 
space,
say "myproject.backend".

When I went to debug the "frontend", I get a popup saying "Compler Failed 
with result code 1".
The console shows a bunch of errore messages in class __Test__ that indicate 
that
the Main generated by the debugger cannot locate the parser class nor can 
the compiler
find the lexer class.  If I comment out the headers with the package name 
messages, the
error goes away.

I suspect this is a namespace issue, does anyone know a fix for it?

Thanks:

Bill M.




>From: "Micheal J" <open.zone at virgin.net>
>To: <antlr-interest at antlr.org>
>Subject: Re: [antlr-interest] A few ANTLR 3.0b4 questions
>Date: Thu, 16 Nov 2006 03:04:41 -0000
>
>Hi,
>
>[...]
>
> > 2) I am using an AST but for some reason, neither @header{}
> > @members{} seem
> >     to have the deisred behavior as  appears to be
> >     indicated in the wiki nor does header{} appear to work.
> > I want to set
> > the java package
> >     name and perhaps use some imported libraries.
> >
> > The relevant syntax looks like:
> > grammar MyGrammar;
> >
> > options{
> > 	output=AST;
> > }
> >
> > /* This won't compile
> > @header{
> > 	package mypackage;
> > }
>
>[...]
>
> > tokens{
> > // This all works.
> > }
>
>@header{...}, @members{...} etc blocks cannot appear before tokens{...}
>block.
>
> > 3) I would like to add some Java source to invoke some actions in my
> > grammar.
> >     Do I need code to walk the AST, or can I try to
> > accomplish them during
> > the AST
> >     construction phase, I expect I'll be using both inherited
> > and synthetic
> > attributes in my rules.
>
>Depends on your language. Some language do not lend themselves to
>"single-phase" processing tools. Using an independent TreeParser is
>"cleaner" but less performant.
>
> > If I have a rule like
> >
> > command:
> >     (
> >         c1=commandType1->(COMMAND $c1) // Here I would like
> > java code for
> > command processing
> >     |
> >         c2=commandType2->(COMMAND $c2) // Here too
> >     );
> >
> > I took a quick look at the wiki and it appears there is some
> > @actions stuff
> > but I don't grok it yet.
>
>Have a look at the source code in the samples. And at the mantra project
>sources too.
>
>
>Micheal
>
>-----------------------
>The best way to contact me is via the list/forum. My time is very limited.
>

_________________________________________________________________
All-in-one security and maintenance for your PC.? Get a free 90-day trial! 
http://clk.atdmt.com/MSN/go/msnnkwlo0050000002msn/direct/01/?href=http://clk.atdmt.com/MSN/go/msnnkwlo0050000001msn/direct/01/?href=http://www.windowsonecare.com/?sc_cid=msn_hotmail


From gzhu at peak6.com  Fri Nov 17 11:27:02 2006
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Fri, 17 Nov 2006 13:27:02 -0600
Subject: [antlr-interest] How to come up with catch-all rules?
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA276@ppi-mail1.chicago.peak6.net>

Hi All,
 
I am writing a code generator with ANTLR 2.x. Like ANTLR itself, the
program is going to generate a framework and fill in handwritten code in
the right places. For example, in the following code:
 
handler abc_name (x, y, z)
{
   //hand-written code here
}
 
I'd like my code generator to dump the handwritten code between the {
and } to an output file, without the code generator caring about the
syntax of those code. But I cannot seem to be able to come up with a
rule that can match arbitrary text between { and }. One thing I can come
up with is { #include "file_name"} and have my code in a separate file,
but this is extremely awkward. 
 
Does anyone know how to best solve this problem?
 
Best regards,
Geoffrey
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061117/2e6a6300/attachment.html 

From parrt at cs.usfca.edu  Fri Nov 17 11:44:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Nov 2006 11:44:20 -0800
Subject: [antlr-interest] Antlr 3.0b5 - possible Bug in NFAToDFAConverter
In-Reply-To: <696E9A46BED8E544A7BD2C20A7E94F68043BBDA0@marena.SIDON.OLYMP>
References: <696E9A46BED8E544A7BD2C20A7E94F68043BBDA0@marena.SIDON.OLYMP>
Message-ID: <AEDF37DE-2AF0-4F35-9B4A-3ECD4A2380B7@cs.usfca.edu>

Hi. I removed a failsafe that I thought was not needed.  I will make  
a modification for 3.0b6 that will catch these situations.  The  
problem is a case where you have recursive rule refs in more than one  
alt of a decision.  Use -Xwatchconversion to see which rule is the  
problem.

I added a bug report yesterday.

Ter
On Nov 17, 2006, at 6:56 AM, <alexander.berger at finnova.ch>  
<alexander.berger at finnova.ch> wrote:

> Hi Everybody.
>
> I upgraded from antlr 3.0b4 to 3.0b5 and now the processing of my  
> grammar
> fails with the StackTrace below. Antlr is consuming a lot of memory  
> (up to
> 1GB), so it looks as if there is a serious problem in the NFA to  
> DFA Converter.
>
> So, can anybody please confirm this or am I the only one having  
> this problem. The grammar producing this error is quite big but I  
> will provide
> it if someone wants to have a look at it.
>
>
> Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
> 	at java.util.HashMap.resize(HashMap.java:462)
> 	at java.util.HashMap.addEntry(HashMap.java:755)
> 	at java.util.HashMap.put(HashMap.java:385)
> 	at java.util.HashSet.add(HashSet.java:200)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:618)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:748)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:748)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:748)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:704)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:669)
> 	at org.antlr.analysis.NFAToDFAConverter.closure 
> (NFAToDFAConverter.java:457)
> 	at  
> org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransiti 
> ons(NFAToDFAConverter.java:274)
> 	at org.antlr.analysis.NFAToDFAConverter.convert 
> (NFAToDFAConverter.java:99)
> 	at org.antlr.analysis.DFA.<init>(DFA.java:219)
> 	at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:826)
> 	at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:774)
> 	at org.antlr.codegen.Target.performGrammarAnalysis(Target.java:111)
> 	at org.antlr.codegen.CodeGenerator.genRecognizer 
> (CodeGenerator.java:279)
> 	at org.antlr.Tool.processGrammar(Tool.java:329)
> 	at org.antlr.Tool.process(Tool.java:266)
> 	at org.antlr.Tool.main(Tool.java:69)
>
>
>
> By the way. What is the official way to report bugs in antlr 3.0b* ?
>
> Kind Regards
> Alex
> ____________________________________________
>
> finnova AG Bankware
> Alexander Berger
> SR-Peripheral-Team
>
> S?gestrasse 22, CH-5600 Lenzburg
> Tel: +41 62 886 4807 / Fax: +41 62 886 4888  
> mailto:alexander.berger at finnova.ch
> http://www.finnova.ch
>


From flybypsy at yahoo.com  Fri Nov 17 11:59:27 2006
From: flybypsy at yahoo.com (r m)
Date: Fri, 17 Nov 2006 11:59:27 -0800 (PST)
Subject: [antlr-interest] tree rewrite - tokenRefRootTrack.st?
Message-ID: <20061117195927.27781.qmail@web34604.mail.mud.yahoo.com>

Hi,
On running the grammar below with antlr3.0-b5, I get
the errors:

>java -classpath ..\..\lib\antlr-2.7.7.jar;..\..
\lib\antlr-3.0b5.jar;..\..\lib\stringtemplate-3.0.jar;.
org.antlr.Tool SLang
.g
ANTLR Parser Generator  Version 3.0b5 (November 15,
2006)  1989-2006
error(10):  internal error: SLang.g :
java.lang.IllegalArgumentException: Ca
n't find template tokenRefRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.
java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.
java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160
)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2105)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1371)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1116)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:728)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:519)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:461)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:308)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:404)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)

/*------------------------*/

grammar SLang;

options {
       language = CSharp; 
       output = AST;
}

tokens {
	ASSIGN;
	EXPR;
	ASSERT;
}

lang
	:	statement+
	;

statement
	:	assign
	|	expression
	;

assign:	lhs EQ aRhs -> ^(ASSIGN lhs aRhs)
	;

expression:	lhs EQ eRhs -> ^(EXPR lhs eRhs)
	;

lhs	:	ID ;

aRhs
	:	constant(SEMI!)
	;

eRhs
	:	NUM PRED^ conditions(SEMI!) -> ^(ASSERT NUM ^(PRED
conditions))
	|	expr(PRED^ conditions)?(SEMI!) -> ^(ASSERT expr
^(PRED conditions?))
	;

expr:	variable((MULT^|DIV^|PLUS^|MINUS^)variable^)* ;

conditions
	:	condition (('and'^|'&&'^|'or'^|'||'^) condition)*
	;

condition
	:	ID((LOGICOP^|EQ^|NEQ^)term)
	;

term:
(variable^|constant^)((MULT^|DIV^|PLUS^|MINUS^)term)?
;

variable
	:	ID
	;

constant
	:	NUM 
	;

PRED:	WHEN ;

ID	:	('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;

NUM	:	('0'..'9')+ ;

LOGICOP
	:	'<'
	|	'<='
	|	'>'
	|	'>='
	;

fragment 
WHEN:	'when' ;

fragment
AND	:	'and'
	|	'&&'
	;

fragment
OR	:	'or'
	|	'||'
	;

PLUS:	'+' ;
MINUS
	:	'-'
	;

MULT:	'*' ;
DIV	:	'/' ;

EQ	:	'=' ;
NEQ	:	'!=' ;

SEMI:	';' ;

/*------------------------*/

I'll look further into what I'm doing wrong, but if
anyone knows ...

Thanks, bfn.


 
____________________________________________________________________________________
Sponsored Link

Mortgage rates near 39yr lows. 
$510k for $1,698/mo. Calculate new payment! 
www.LowerMyBills.com/lre

From open.zone at virgin.net  Fri Nov 17 12:00:22 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 17 Nov 2006 20:00:22 -0000
Subject: [antlr-interest] A few ANTLR 3.0b4 questions
In-Reply-To: <BAY107-F15F301E82A8911B469C86CC0E80@phx.gbl>
Message-ID: <002001c70a83$050f70c0$c704a8c0@hercules>

Hi,

> Thanks Michael:
> 
> This is very helpful.
> 
> Regarding the @header{} section, this appears to only show up 
> in the parser, so I think I need to copy the body and wrap it 
> with an @lexer::header{} 
> section.
> Is there some way that I can avoid having two separate 
> headers.

An open issue:

http://www.antlr.org:8888/browse/ANTLR-35


> I also 
> noticed that changing
> the package name has introduced some problems when trying to run the 
> debugging environment.
[...]
> The console shows a bunch of errore messages in class 
> __Test__ that indicate 
> that
> the Main generated by the debugger cannot locate the parser 
> class nor can 
> the compiler
> find the lexer class.  If I comment out the headers with the 
> package name 
> messages, the
> error goes away.

AntlrWorks debugging isn't a strong point of my mine. Perhaps others can
comment?


Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From dave at badgers-in-foil.co.uk  Fri Nov 17 12:03:01 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 17 Nov 2006 20:03:01 +0000
Subject: [antlr-interest] How to come up with catch-all rules?
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA276@ppi-mail1.chicago.peak6.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA276@ppi-mail1.chicago.peak6.net>
Message-ID: <20061117200301.GA23440@badgers-in-foil.co.uk>

On Fri, Nov 17, 2006 at 01:27:02PM -0600, Geoffrey Zhu wrote:
> Hi All,
>  
> I am writing a code generator with ANTLR 2.x. Like ANTLR itself, the
> program is going to generate a framework and fill in handwritten code in
> the right places. For example, in the following code:
>  
> handler abc_name (x, y, z)
> {
>    //hand-written code here
> }
>  
> I'd like my code generator to dump the handwritten code between the {
> and } to an output file, without the code generator caring about the
> syntax of those code. But I cannot seem to be able to come up with a
> rule that can match arbitrary text between { and }. One thing I can come
> up with is { #include "file_name"} and have my code in a separate file,
> but this is extremely awkward. 
>  
> Does anyone know how to best solve this problem?

This 'parrt' guy does:

http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/tool/antlr.g?r=3244#l1186

;)

dave

-- 
http://david.holroyd.me.uk/

From gzhu at peak6.com  Fri Nov 17 13:49:47 2006
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Fri, 17 Nov 2006 15:49:47 -0600
Subject: [antlr-interest] How to come up with catch-all rules?
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA317@ppi-mail1.chicago.peak6.net>

Thanks for the quick reply, Dave.

 This is pretty good but still makes assumptions on the structure of the
hand-written code. For example, the number of { and } within the outmost
{ and } need to match. It also makes assumptions on the syntax of
string, comments, and char literals. If I use perl style comments in the
hand-written code and write: 

# This will break ANTLR {{{

It will cause syntax errors in ANTLR.

Is there any even more general ways?

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Holroyd
Sent: Friday, November 17, 2006 2:03 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to come up with catch-all rules?

On Fri, Nov 17, 2006 at 01:27:02PM -0600, Geoffrey Zhu wrote:
> Hi All,
>  
> I am writing a code generator with ANTLR 2.x. Like ANTLR itself, the 
> program is going to generate a framework and fill in handwritten code 
> in the right places. For example, in the following code:
>  
> handler abc_name (x, y, z)
> {
>    //hand-written code here
> }
>  
> I'd like my code generator to dump the handwritten code between the { 
> and } to an output file, without the code generator caring about the 
> syntax of those code. But I cannot seem to be able to come up with a 
> rule that can match arbitrary text between { and }. One thing I can 
> come up with is { #include "file_name"} and have my code in a separate

> file, but this is extremely awkward.
>  
> Does anyone know how to best solve this problem?

This 'parrt' guy does:

http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/tool/antlr.g?r=324
4#l1186

;)

dave

--
http://david.holroyd.me.uk/



From rschulz at sonic.net  Fri Nov 17 14:12:17 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 17 Nov 2006 14:12:17 -0800
Subject: [antlr-interest] How to come up with catch-all rules?
In-Reply-To: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA317@ppi-mail1.chicago.peak6.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA317@ppi-mail1.chicago.peak6.net>
Message-ID: <200611171412.17861.rschulz@sonic.net>

Hi,

On Friday 17 November 2006 13:49, Geoffrey Zhu wrote:
> Thanks for the quick reply, Dave.
>
>  This is pretty good but still makes assumptions on the structure of
> the hand-written code. For example, the number of { and } within the
> outmost { and } need to match. It also makes assumptions on the
> syntax of string, comments, and char literals. If I use perl style
> comments in the hand-written code and write:
>
> # This will break ANTLR {{{
>
> It will cause syntax errors in ANTLR.
>
> Is there any even more general ways?

In JavaCC there's something called Lexical States, which essentially 
allow wholesale swapping of one lexer for another. The transitions 
between which lexer state is in effect are driven by the lexical rules 
themselves. (I'm not sure whether or not parser rules can switch the 
lexical state.) It's often used to handle C-style comment processing, 
e.g. In the beginning (and still now? -- I don' know) there was only 
greedy closure in JavaCC regular expression matching. Lexcal states can 
be seen as a more generalized form of ANTLR's lexer "fragment" notion. 
JavaCC also has something closer to ANTLR's fragments but the fragments 
have a context limited to the global rule within which they're nested.

Is there any equivalent or counterpart to in ANTLR?


Randall Schulz

From gzhu at peak6.com  Fri Nov 17 15:17:55 2006
From: gzhu at peak6.com (Geoffrey Zhu)
Date: Fri, 17 Nov 2006 17:17:55 -0600
Subject: [antlr-interest] Odd syntax error
Message-ID: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA330@ppi-mail1.chicago.peak6.net>

ANTLR 2.77 suddenly generates a weird error. It says the file cannot be
found, but I am sure the file is there. If I change the output directory
to -o "c:\my test," it works; if I change it to -o c:\, it works, too;
but if I change it to -o "c:\" , it does not work. Does anyone has any
idea?

Thanks,
Geoffrey



antlr  -o "C:\Documents and Settings\gzhu\My Documents\Visual Studio
2005\DataGenerator\" "C:\Documents and Settings\gzhu\My Documents\Visual
Studio 2005\DataGenerator\stx.g"
java -classpath "C:\antlr\277rc1\lib\antlr.jar;. " antlr.Tool -o
"C:\Documents and Settings\gzhu\My Documents\Visual Studio
2005\DataGenerator\" "C:\Documents and Settings\gzhu\My Documents\Visual
Studio 2005\DataGenerator\stx.g"
ANTLR Parser Generator   Version 2.7.7 (20060930)   1989-2005
warning: grammar file must be last; ignoring other arguments...
error: file and not found

From parrt at cs.usfca.edu  Fri Nov 17 15:22:41 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Nov 2006 15:22:41 -0800
Subject: [antlr-interest] How to come up with catch-all rules?
In-Reply-To: <200611171412.17861.rschulz@sonic.net>
References: <99F81FFD0EA54E4DA8D4F1BFE272F341028DA317@ppi-mail1.chicago.peak6.net>
	<200611171412.17861.rschulz@sonic.net>
Message-ID: <FB9E177E-B0FC-4562-8DB4-2016BD13DC6C@cs.usfca.edu>

Hi. ANTLR does not *yet* have lexical states, but I just added a new  
feature request:

http://www.antlr.org:8888/browse/ANTLR-40

Ter

From open.zone at virgin.net  Fri Nov 17 16:25:33 2006
From: open.zone at virgin.net (Micheal J)
Date: Sat, 18 Nov 2006 00:25:33 -0000
Subject: [antlr-interest] How to come up with catch-all rules?
In-Reply-To: <200611171412.17861.rschulz@sonic.net>
Message-ID: <002401c70aa8$1102fb20$c704a8c0@hercules>

Hi,

> >  This is pretty good but still makes assumptions on the 
> structure of 
> > the hand-written code. For example, the number of { and } 
> within the 
> > outmost { and } need to match. It also makes assumptions on 
> the syntax 
> > of string, comments, and char literals. If I use perl style 
> comments 
> > in the hand-written code and write:
> >
> > # This will break ANTLR {{{
> >
> > It will cause syntax errors in ANTLR.
> >
> > Is there any even more general ways?
> 
> In JavaCC there's something called Lexical States, which essentially 
> allow wholesale swapping of one lexer for another. The transitions 
> between which lexer state is in effect are driven by the 
> lexical rules 
> themselves.
[...]

> Is there any equivalent or counterpart to in ANTLR?

Island grammars in V3 and the TokenStreamSelector in V2.7.x are the closest
features.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From lgcraymer at yahoo.com  Fri Nov 17 17:08:09 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 17 Nov 2006 17:08:09 -0800 (PST)
Subject: [antlr-interest] How to come up with catch-all rules?
In-Reply-To: <002401c70aa8$1102fb20$c704a8c0@hercules>
Message-ID: <141427.72287.qm@web55910.mail.re3.yahoo.com>

I should point out that javaCC was inspired by PCCTS
(ANTLR 1) and that lexical modes were one of the very
cool features of dlg, the PCCTS lexer generator. 
Lexical state did not seem that important for ANTLR
2--the advance there was LL(k) lexing--but are slated
to return.

--Loring

--- Micheal J <open.zone at virgin.net> wrote:

> Hi,
> 
> > >  This is pretty good but still makes assumptions
> on the 
> > structure of 
> > > the hand-written code. For example, the number
> of { and } 
> > within the 
> > > outmost { and } need to match. It also makes
> assumptions on 
> > the syntax 
> > > of string, comments, and char literals. If I use
> perl style 
> > comments 
> > > in the hand-written code and write:
> > >
> > > # This will break ANTLR {{{
> > >
> > > It will cause syntax errors in ANTLR.
> > >
> > > Is there any even more general ways?
> > 
> > In JavaCC there's something called Lexical States,
> which essentially 
> > allow wholesale swapping of one lexer for another.
> The transitions 
> > between which lexer state is in effect are driven
> by the 
> > lexical rules 
> > themselves.
> [...]
> 
> > Is there any equivalent or counterpart to in
> ANTLR?
> 
> Island grammars in V3 and the TokenStreamSelector in
> V2.7.x are the closest
> features.
> 
> 
> Micheal
> 
> -----------------------
> The best way to contact me is via the list/forum. My
> time is very limited.
> 
> 



 
____________________________________________________________________________________
Sponsored Link

Don't quit your job - take classes online
www.Classesusa.com


From antlr-list at arizona-software.ch  Sat Nov 18 18:31:38 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sat, 18 Nov 2006 18:31:38 -0800
Subject: [antlr-interest]  ANTLRWorks 1.0b6 released
Message-ID: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>

Hello,

I've just released ANTLRWorks 1.0b6 with the following changes (it  
includes now ANTLR 3.0b5 and StringTemplate 3.0):

- added line endings preferences in debugger input text dialog and  
interpreter panel
- read now the token vocab file from the output path (in addition to  
the default grammar location)
- output path is now specified in the preferences
- alert after checking grammar
- added shift-delete to behave like delete when typing with the shift  
key pressed

- fixed a bug when storing strings greated than 8KB (it is now  
truncated and an alert is displayed)
- fixed a bug that prevented some DFA diagram from being completely  
displayed (scrollable zone too small)
- fixed a bug in the syntax coloring parser when a multi-line comment  
where located at the end of file
- fixed a bug where some menu items were not disabled in debug mode
- fixed a bug where AST node where not correctly added when a node  
became parent (nil node)
- fixed a bug where errors in the grammar where not reported when  
checking or generating the grammar

It can be downloaded as usual here:

http://www.antlr.org/works/index.html

Regards,

Jean


From rschulz at sonic.net  Sat Nov 18 18:47:35 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 18 Nov 2006 18:47:35 -0800
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
References: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
Message-ID: <200611181847.35222.rschulz@sonic.net>

Jean,

On Saturday 18 November 2006 18:31, Jean Bovet wrote:
> Hello,
>
> I've just released ANTLRWorks 1.0b6 with the following changes (it
> includes now ANTLR 3.0b5 and StringTemplate 3.0):

Thanks.

Will you be uploading a new IDEA plug-in to the IDEA plug-in repository 
(i.e., <http://plugins.intellij.net/plugin/?id=953>)?


Randall Schulz

From rschulz at sonic.net  Sat Nov 18 20:13:37 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 18 Nov 2006 20:13:37 -0800
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
References: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
Message-ID: <200611182013.37611.rschulz@sonic.net>

On Saturday 18 November 2006 18:31, Jean Bovet wrote:
> Hello,
>
> I've just released ANTLRWorks 1.0b6 with the following changes (it
> includes now ANTLR 3.0b5 and StringTemplate 3.0):

According to the "Information" tab of the "About" window, ANTLRworks 
1.0b6 includes StringTemplate 2.3b10. Perhaps it's just the information 
display that's off or maybe the program actually does include the 
stated version of StringTemplate--I don't know how to ascertain which 
is the case.


Randy

From kroepke at classdump.org  Sat Nov 18 20:20:44 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 19 Nov 2006 05:20:44 +0100
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <200611182013.37611.rschulz@sonic.net>
References: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
	<200611182013.37611.rschulz@sonic.net>
Message-ID: <0CC489B9-CF23-475D-84DE-A678D0768236@classdump.org>


On 19. Nov 2006, at 5:13 , Randall R Schulz wrote:

> According to the "Information" tab of the "About" window, ANTLRworks
> 1.0b6 includes StringTemplate 2.3b10. Perhaps it's just the  
> information
> display that's off or maybe the program actually does include the
> stated version of StringTemplate--I don't know how to ascertain which
> is the case.

You'd need to look inside the .jar file.
The ST classes in there have timestamps as:
24329 Wed Sep 06 13:02:32 CEST 2006 org/antlr/stringtemplate/ 
StringTemplate.class

Sep 06 was the release date of ST 3.0, so I infer that it indeed is 3.0.
"About" boxes are notoriously easy to forget to update...

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From raj.sisodia at impetus.co.in  Sun Nov 19 01:00:16 2006
From: raj.sisodia at impetus.co.in (raj sisodia)
Date: Sun, 19 Nov 2006 14:30:16 +0530
Subject: [antlr-interest] tree rewrite - tokenRefRootTrack.st?
Message-ID: <012101c70bb9$21868db0$4361a8c0@impetus.co.in>

Hi,

 

Looks like you have written this rule wrong

 

eRhs

      :     NUM PRED^ conditions(SEMI!) -> ^(ASSERT NUM ^(PRED

conditions))

      |     expr(PRED^ conditions)?(SEMI!) -> ^(ASSERT expr

^(PRED conditions?))

 

 

Thee shall not mix operators and rewrite rules

 

If you remove the operators and write the rule like this, your grammar would
compile and work fine.

 

eRhs

      :     NUM PRED conditions(SEMI) -> ^(ASSERT NUM ^(PRED conditions))

      |     expr(PRED conditions)?(SEMI) -> ^(ASSERT expr ^(PRED
conditions?))

      ;

 

Hoping that helps,

Raj Singh Sisodia

 

---------------------------------------------------------------------------

 

Hi,

On running the grammar below with antlr3.0-b5, I get

the errors:

 

>java -classpath ..\..\lib\antlr-2.7.7.jar;..\..

\lib\antlr-3.0b5.jar;..\..\lib\stringtemplate-3.0.jar;.

org.antlr.Tool SLang

.g

ANTLR Parser Generator  Version 3.0b5 (November 15,

2006)  1989-2006

error(10):  internal error: SLang.g :

java.lang.IllegalArgumentException: Ca

n't find template tokenRefRootTrack.st

 

---------------------------------------------------------------------------

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061119/d83732b6/attachment.html 

From rschulz at sonic.net  Sun Nov 19 09:29:07 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 09:29:07 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
Message-ID: <200611190929.07947.rschulz@sonic.net>

Hi,

I find that ANTLRworks IDEA plug-in usurps some of IDEA's native 
functionality and key mappings.

Is there a way around this?


Randall Schulz

From rschulz at sonic.net  Sun Nov 19 09:44:31 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 09:44:31 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
Message-ID: <200611190944.31413.rschulz@sonic.net>

Hi,

When I attempt to launch the debugger in ANTLRworks (stand-alone,
versino 1.0b6) I always get this after submitting the input:

Grammar compilation phase:

[09:36:26] warning(208): /dar/tau/src/tau/tstp/TSTP.g:1090:1: The following token definitions are unreachable: SingleQuoted
[09:36:28] Note: /dar/tau/src/tau/tstp/TSTPParser.java uses unchecked or unsafe operations.
[09:36:28] Note: Recompile with -Xlint:unchecked for details.


Parser invocation (following submission of test input and selection of entry-point grammar rule):

[09:36:31] /dar/tau/src/tau/tstp/__Test__.java:9: cannot find symbol
[09:36:31] symbol  : class TSTPLexer
[09:36:31] location: class __Test__
[09:36:31]         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream("/dar/tau/src/tau/tstp/__Test___input.txt"));
[09:36:31]         ^
[09:36:31] /dar/tau/src/tau/tstp/__Test__.java:9: cannot find symbol
[09:36:31] symbol  : class TSTPLexer
[09:36:31] location: class __Test__
[09:36:31]         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream("/dar/tau/src/tau/tstp/__Test___input.txt"));
[09:36:31]                             ^
[09:36:31] /dar/tau/src/tau/tstp/__Test__.java:12: cannot find symbol
[09:36:31] symbol  : class TSTPParser
[09:36:31] location: class __Test__
[09:36:31]         TSTPParser g = new TSTPParser(tokens);
[09:36:31]         ^
[09:36:31] /dar/tau/src/tau/tstp/__Test__.java:12: cannot find symbol
[09:36:31] symbol  : class TSTPParser
[09:36:31] location: class __Test__
[09:36:31]         TSTPParser g = new TSTPParser(tokens);
[09:36:31]                            ^
[09:36:31] 4 errors


This happens whether or not I put the directory holding my project's
compiled class files into the "custom" classpath field of the "Compiler"
pane of the "Preferences" dialog.


What am I doing wrong?


Randall Schulz

From rob.hill at blueyonder.co.uk  Sun Nov 19 10:24:29 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Sun, 19 Nov 2006 18:24:29 -0000
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <200611181847.35222.rschulz@sonic.net>
Message-ID: <20061119182435.7BCA1190A64@www.antlr.org>

Ahh, I see you took the advice after all... now what were you saying about
that $250 out of pocket and the time learning a major new tool? LOL?!

Oh, yeah, I remember!

"I will gladly accept a $250 contribution to equalize my out-of-pocket cost
of using IntelliJ instead of Eclipse. The good news for you is that I will
not charge you for the cost of the time I spend learning this major new
tool.
"

LOL

/2ob

<ducks again>

[snip]


> > Hello,
> >
> > I've just released ANTLRWorks 1.0b6 with the following changes (it
> > includes now ANTLR 3.0b5 and StringTemplate 3.0):
> 
> Thanks.
> 
> Will you be uploading a new IDEA plug-in to the IDEA plug-in repository
> (i.e., <http://plugins.intellij.net/plugin/?id=953>)?
> 
> 
> Randall Schulz




From parrt at cs.usfca.edu  Sun Nov 19 10:48:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 10:48:47 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611190944.31413.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
Message-ID: <E021EB19-14AB-401C-BD8F-62048D6B59CA@cs.usfca.edu>


On Nov 19, 2006, at 9:44 AM, Randall R Schulz wrote:

> Hi,
>
> When I attempt to launch the debugger in ANTLRworks (stand-alone,
> versino 1.0b6) I always get this after submitting the input:
>
> Grammar compilation phase:
>
> [09:36:26] warning(208): /dar/tau/src/tau/tstp/TSTP.g:1090:1: The  
> following token definitions are unreachable: SingleQuoted
> [09:36:28] Note: /dar/tau/src/tau/tstp/TSTPParser.java uses  
> unchecked or unsafe operations.
> [09:36:28] Note: Recompile with -Xlint:unchecked for details.

Hiyo Randall!

This means that you have two lexer rules that match same thing and  
SingleQuoted is after the other so it gets tossed out.

It generates no code hence the compile errors.

Ter



From dieter_frej at gmx.net  Sun Nov 19 11:07:56 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Sun, 19 Nov 2006 20:07:56 +0100
Subject: [antlr-interest] unexpected NoViableAltException
Message-ID: <20061119190756.288600@gmx.net>

Hi everybody,

I need your help because I am totally puzzled about my very easy grammar.
The grammar contains three parser rules 

ml
	:	exp 'mit' with
	;
	
exp
	:	(IDENT '=' SEMI)*
	;

with
	:	(IDENT '='  SEMI)*
	;

I used the interpreter of antlrworks for the 
- rule 'with' and the input 'bla=;' (without ')
-> everything works fine

- rule 'exp' and the (same) input 'bla=;'
-> I get a NoViableAltException

- rule 'exp' and the input 'bla =; mit blubb=;'
-> works fine

- rule 'ml' and the input 'bla =; mit blubb=;'
-> works fine (as expected)

I have not idea what the problem is. I know that the order of rules
appearing in the grammar has effect, so I changed it, but still the
same... :-(

Thanks in advance,

- Didi
-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
-------------- next part --------------
grammar noviablealtexception;
options {
	output = AST;
}

@members {
	public static final CommonToken IGNORE_TOKEN = new CommonToken(null,0,99,0,0);
}

ml
	:	exp 'mit' with
	;
	
exp
	:	(IDENT '=' SEMI)*
	;

with
	:	(IDENT '='  SEMI)*
	;
	

	
SEMI	:	';'
	;

IDENT
	:	('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
	;

WS	:	(' ' | '\t' | '\n' | '\r') { channel=99;}
	;

From parrt at cs.usfca.edu  Sun Nov 19 11:22:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 11:22:26 -0800
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <20061119190756.288600@gmx.net>
References: <20061119190756.288600@gmx.net>
Message-ID: <7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>

Hi :)

ml and with can be followed by EOF, but expr cannot.  'mit' follows  
exp.  NoViableAltException because in rule exp, ANTLR cannot imagine  
how EOF can be matched.

Ter

On Nov 19, 2006, at 11:07 AM, Dieter Frej wrote:

> Hi everybody,
>
> I need your help because I am totally puzzled about my very easy  
> grammar.
> The grammar contains three parser rules
>
> ml
> 	:	exp 'mit' with
> 	;
> 	
> exp
> 	:	(IDENT '=' SEMI)*
> 	;
>
> with
> 	:	(IDENT '='  SEMI)*
> 	;
>
> I used the interpreter of antlrworks for the
> - rule 'with' and the input 'bla=;' (without ')
> -> everything works fine
>
> - rule 'exp' and the (same) input 'bla=;'
> -> I get a NoViableAltException
>
> - rule 'exp' and the input 'bla =; mit blubb=;'
> -> works fine
>
> - rule 'ml' and the input 'bla =; mit blubb=;'
> -> works fine (as expected)
>
> I have not idea what the problem is. I know that the order of rules
> appearing in the grammar has effect, so I changed it, but still the
> same... :-(
>
> Thanks in advance,
>
> - Didi
> -- 
> Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> <noviablealtexception.g>


From rschulz at sonic.net  Sun Nov 19 11:29:25 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 11:29:25 -0800
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <20061119182435.7BCA1190A64@www.antlr.org>
References: <20061119182435.7BCA1190A64@www.antlr.org>
Message-ID: <200611191129.25724.rschulz@sonic.net>

On Sunday 19 November 2006 10:24, Robert Hill wrote:
> Ahh, I see you took the advice after all... now what were you saying
> about that $250 out of pocket and the time learning a major new tool?
> LOL?!
>
> Oh, yeah, I remember!
>
> "I will gladly accept a $250 contribution to equalize my
> out-of-pocket cost of using IntelliJ instead of Eclipse. The good
> news for you is that I will not charge you for the cost of the time I
> spend learning this major new tool."

As true now as it was when I wrote it.


> LOL
>
> /2ob
>
> <ducks again>

Paypal will do.


> [snip]


RRS

From dieter_frej at gmx.net  Sun Nov 19 11:33:42 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Sun, 19 Nov 2006 20:33:42 +0100
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
References: <20061119190756.288600@gmx.net>
	<7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
Message-ID: <20061119193342.220640@gmx.net>

thanks Ter.

Using v3 I thought I do not have to put EOF in the grammar anymore. So,
when I choose a rule there is no EOF automatically at the end of that
rule?

- Didi



-------- Original-Nachricht --------
Datum: Sun, 19 Nov 2006 11:22:26 -0800
Von: Terence Parr <parrt at cs.usfca.edu>
An: ANTLR Interest <antlr-interest at antlr.org>
Betreff: Re: [antlr-interest] unexpected NoViableAltException

> Hi :)
> 
> ml and with can be followed by EOF, but expr cannot.  'mit' follows  
> exp.  NoViableAltException because in rule exp, ANTLR cannot imagine  
> how EOF can be matched.
> 
> Ter
> 
> On Nov 19, 2006, at 11:07 AM, Dieter Frej wrote:
> 
> > Hi everybody,
> >
> > I need your help because I am totally puzzled about my very easy  
> > grammar.
> > The grammar contains three parser rules
> >
> > ml
> > 	:	exp 'mit' with
> > 	;
> > 	
> > exp
> > 	:	(IDENT '=' SEMI)*
> > 	;
> >
> > with
> > 	:	(IDENT '='  SEMI)*
> > 	;
> >
> > I used the interpreter of antlrworks for the
> > - rule 'with' and the input 'bla=;' (without ')
> > -> everything works fine
> >
> > - rule 'exp' and the (same) input 'bla=;'
> > -> I get a NoViableAltException
> >
> > - rule 'exp' and the input 'bla =; mit blubb=;'
> > -> works fine
> >
> > - rule 'ml' and the input 'bla =; mit blubb=;'
> > -> works fine (as expected)
> >
> > I have not idea what the problem is. I know that the order of rules
> > appearing in the grammar has effect, so I changed it, but still the
> > same... :-(
> >
> > Thanks in advance,
> >
> > - Didi
> > -- 
> > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer
> > <noviablealtexception.g>

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From parrt at cs.usfca.edu  Sun Nov 19 11:39:15 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 11:39:15 -0800
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <20061119193342.220640@gmx.net>
References: <20061119190756.288600@gmx.net>
	<7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
	<20061119193342.220640@gmx.net>
Message-ID: <1DFC10D7-FD31-434B-851C-75F488C8271D@cs.usfca.edu>


On Nov 19, 2006, at 11:33 AM, Dieter Frej wrote:

> thanks Ter.
>
> Using v3 I thought I do not have to put EOF in the grammar anymore.

That's what I thought. ;)  I and wondering if maybe I made it work  
for (...)? but not (...)*.

> So,
> when I choose a rule there is no EOF automatically at the end of that
> rule?

Can you try (...)? and report back?

Thanks,
Ter


From rschulz at sonic.net  Sun Nov 19 11:40:30 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 11:40:30 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <E021EB19-14AB-401C-BD8F-62048D6B59CA@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<E021EB19-14AB-401C-BD8F-62048D6B59CA@cs.usfca.edu>
Message-ID: <200611191140.30586.rschulz@sonic.net>

Terence,

On Sunday 19 November 2006 10:48, Terence Parr wrote:
> On Nov 19, 2006, at 9:44 AM, Randall R Schulz wrote:
> > Hi,
> >
> > When I attempt to launch the debugger in ANTLRworks (stand-alone,
> > versino 1.0b6) I always get this after submitting the input:
> >
> > Grammar compilation phase:
> >
> > [09:36:26] warning(208): /dar/tau/src/tau/tstp/TSTP.g:1090:1: The
> > following token definitions are unreachable: SingleQuoted
> > [09:36:28] Note: /dar/tau/src/tau/tstp/TSTPParser.java uses
> > unchecked or unsafe operations.
> > [09:36:28] Note: Recompile with -Xlint:unchecked for details.
>
> Hiyo Randall!
>
> This means that you have two lexer rules that match same thing and
> SingleQuoted is after the other so it gets tossed out.

Well, that's not really true. No other lexer rule matches what 
SingleQuoted does, since SingleQuoted starts with a single-quote (') 
only and no other rule allows a single quote as its first character. So 
how could there be a conflict?


> It generates no code hence the compile errors.

The stand-alone / command-line parser generates code just fine from this 
ANTLR grammar. And it parses the stuff it should parse (so far my test 
corpus doesn't use this construct, so it's irrelevant for now).

And in fact when I remove the SingleQuoted rule and the references to 
it, silencing the spurious error about its being unreachable, the same 
thing happens when I try to debug in ANTLRworks.


> Ter


Randall Schulz

From dieter_frej at gmx.net  Sun Nov 19 11:41:33 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Sun, 19 Nov 2006 20:41:33 +0100
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <1DFC10D7-FD31-434B-851C-75F488C8271D@cs.usfca.edu>
References: <20061119190756.288600@gmx.net>
	<7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
	<20061119193342.220640@gmx.net>
	<1DFC10D7-FD31-434B-851C-75F488C8271D@cs.usfca.edu>
Message-ID: <20061119194133.220630@gmx.net>

looks like you missed it

()*
-> NoViableAltException

()+
-> NoViableAltException

()?
-> works

- Didi



-------- Original-Nachricht --------
Datum: Sun, 19 Nov 2006 11:39:15 -0800
Von: Terence Parr <parrt at cs.usfca.edu>
An: ANTLR Interest <antlr-interest at antlr.org>
Betreff: Re: [antlr-interest] unexpected NoViableAltException

> 
> On Nov 19, 2006, at 11:33 AM, Dieter Frej wrote:
> 
> > thanks Ter.
> >
> > Using v3 I thought I do not have to put EOF in the grammar anymore.
> 
> That's what I thought. ;)  I and wondering if maybe I made it work  
> for (...)? but not (...)*.
> 
> > So,
> > when I choose a rule there is no EOF automatically at the end of that
> > rule?
> 
> Can you try (...)? and report back?
> 
> Thanks,
> Ter

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From parrt at cs.usfca.edu  Sun Nov 19 11:49:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 11:49:47 -0800
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <20061119194133.220630@gmx.net>
References: <20061119190756.288600@gmx.net>
	<7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
	<20061119193342.220640@gmx.net>
	<1DFC10D7-FD31-434B-851C-75F488C8271D@cs.usfca.edu>
	<20061119194133.220630@gmx.net>
Message-ID: <CDD47229-D41B-426A-B71E-2BCE5225122A@cs.usfca.edu>

crap!  created new issue:

http://www.antlr.org:8888/browse/ANTLR-41

I'm in book writing mode but should be back to bug fixing mode soon.   
That said, I am not sure when I will get to this small improvement.

Ter
On Nov 19, 2006, at 11:41 AM, Dieter Frej wrote:

> looks like you missed it
>
> ()*
> -> NoViableAltException
>
> ()+
> -> NoViableAltException
>
> ()?
> -> works
>
> - Didi
>
>
>
> -------- Original-Nachricht --------
> Datum: Sun, 19 Nov 2006 11:39:15 -0800
> Von: Terence Parr <parrt at cs.usfca.edu>
> An: ANTLR Interest <antlr-interest at antlr.org>
> Betreff: Re: [antlr-interest] unexpected NoViableAltException
>
>>
>> On Nov 19, 2006, at 11:33 AM, Dieter Frej wrote:
>>
>>> thanks Ter.
>>>
>>> Using v3 I thought I do not have to put EOF in the grammar anymore.
>>
>> That's what I thought. ;)  I and wondering if maybe I made it work
>> for (...)? but not (...)*.
>>
>>> So,
>>> when I choose a rule there is no EOF automatically at the end of  
>>> that
>>> rule?
>>
>> Can you try (...)? and report back?
>>
>> Thanks,
>> Ter
>
> -- 
> Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer


From parrt at cs.usfca.edu  Sun Nov 19 11:50:45 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 11:50:45 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191140.30586.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<E021EB19-14AB-401C-BD8F-62048D6B59CA@cs.usfca.edu>
	<200611191140.30586.rschulz@sonic.net>
Message-ID: <C2411650-5D4F-4656-A506-244A5C4B1070@cs.usfca.edu>


On Nov 19, 2006, at 11:40 AM, Randall R Schulz wrote:
> Well, that's not really true. No other lexer rule matches what
> SingleQuoted does, since SingleQuoted starts with a single-quote (')
> only and no other rule allows a single quote as its first  
> character. So
> how could there be a conflict?

  not sure, but that is the only explanation.  You should look for a  
rule that does not specifically mention the single quote such as  
something that uses the wildcard '.'.

>> It generates no code hence the compile errors.
>
> The stand-alone / command-line parser generates code just fine from  
> this
> ANTLR grammar. And it parses the stuff it should parse (so far my test
> corpus doesn't use this construct, so it's irrelevant for now).
>
> And in fact when I remove the SingleQuoted rule and the references to
> it, silencing the spurious error about its being unreachable, the same
> thing happens when I try to debug in ANTLRworks.

  thanks for the report
Ter

From dieter_frej at gmx.net  Sun Nov 19 11:56:05 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Sun, 19 Nov 2006 20:56:05 +0100
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <CDD47229-D41B-426A-B71E-2BCE5225122A@cs.usfca.edu>
References: <20061119190756.288600@gmx.net>
	<7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
	<20061119193342.220640@gmx.net>
	<1DFC10D7-FD31-434B-851C-75F488C8271D@cs.usfca.edu>
	<20061119194133.220630@gmx.net>
	<CDD47229-D41B-426A-B71E-2BCE5225122A@cs.usfca.edu>
Message-ID: <20061119195605.220650@gmx.net>

thanks for your help Ter!

- Didi



-------- Original-Nachricht --------
Datum: Sun, 19 Nov 2006 11:49:47 -0800
Von: Terence Parr <parrt at cs.usfca.edu>
An: ANTLR Interest <antlr-interest at antlr.org>
Betreff: Re: [antlr-interest] unexpected NoViableAltException

> crap!  created new issue:
> 
> http://www.antlr.org:8888/browse/ANTLR-41
> 
> I'm in book writing mode but should be back to bug fixing mode soon.   
> That said, I am not sure when I will get to this small improvement.
> 
> Ter
> On Nov 19, 2006, at 11:41 AM, Dieter Frej wrote:
> 
> > looks like you missed it
> >
> > ()*
> > -> NoViableAltException
> >
> > ()+
> > -> NoViableAltException
> >
> > ()?
> > -> works
> >
> > - Didi
> >
> >
> >
> > -------- Original-Nachricht --------
> > Datum: Sun, 19 Nov 2006 11:39:15 -0800
> > Von: Terence Parr <parrt at cs.usfca.edu>
> > An: ANTLR Interest <antlr-interest at antlr.org>
> > Betreff: Re: [antlr-interest] unexpected NoViableAltException
> >
> >>
> >> On Nov 19, 2006, at 11:33 AM, Dieter Frej wrote:
> >>
> >>> thanks Ter.
> >>>
> >>> Using v3 I thought I do not have to put EOF in the grammar anymore.
> >>
> >> That's what I thought. ;)  I and wondering if maybe I made it work
> >> for (...)? but not (...)*.
> >>
> >>> So,
> >>> when I choose a rule there is no EOF automatically at the end of  
> >>> that
> >>> rule?
> >>
> >> Can you try (...)? and report back?
> >>
> >> Thanks,
> >> Ter
> >
> > -- 
> > Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen!
> > Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

-- 
Der GMX SmartSurfer hilft bis zu 70% Ihrer Onlinekosten zu sparen! 
Ideal f?r Modem und ISDN: http://www.gmx.net/de/go/smartsurfer

From parrt at cs.usfca.edu  Sun Nov 19 12:04:13 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 12:04:13 -0800
Subject: [antlr-interest] unexpected NoViableAltException
In-Reply-To: <20061119195605.220650@gmx.net>
References: <20061119190756.288600@gmx.net>
	<7551FB77-EAAE-4D0E-909E-8A1931BCD3A8@cs.usfca.edu>
	<20061119193342.220640@gmx.net>
	<1DFC10D7-FD31-434B-851C-75F488C8271D@cs.usfca.edu>
	<20061119194133.220630@gmx.net>
	<CDD47229-D41B-426A-B71E-2BCE5225122A@cs.usfca.edu>
	<20061119195605.220650@gmx.net>
Message-ID: <63433BA3-A0BA-47AD-BA18-E05A108597AE@cs.usfca.edu>


On Nov 19, 2006, at 11:56 AM, Dieter Frej wrote:

> thanks for your help Ter!

my pleasure; I am just sorry that I can't be more helpful over the  
next two months while I a race to finish the software and finish the  
book. expect an announcement on Amazon within a week or two and  
hopefully we will have a beta book up on the web before the end of  
the year.  I hope to have the complete book done in early February.  
the software and the book will probably come out at the same time.

BTW, I must say that my development editor, Susannah Davidson  
Pfalzer, and the folks at pragmatic programmers really kick butt. I  
actually get to operate like a programmer as I write this book; none  
of the foolishness I see with other publishers. If you're writing a  
book, you should consider pragmatic programmers--they have totally  
eclipsed O'Reilly as the publisher of choice for practical  
programming books in my view.

Ter

From rschulz at sonic.net  Sun Nov 19 12:04:46 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 12:04:46 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <C2411650-5D4F-4656-A506-244A5C4B1070@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191140.30586.rschulz@sonic.net>
	<C2411650-5D4F-4656-A506-244A5C4B1070@cs.usfca.edu>
Message-ID: <200611191204.46996.rschulz@sonic.net>

Terence,

On Sunday 19 November 2006 11:50, Terence Parr wrote:
> On Nov 19, 2006, at 11:40 AM, Randall R Schulz wrote:
> > Well, that's not really true. No other lexer rule matches what
> > SingleQuoted does, since SingleQuoted starts with a single-quote
> > (') only and no other rule allows a single quote as its first
> > character. So
> > how could there be a conflict?
>
>   not sure, but that is the only explanation.  You should look for a
> rule that does not specifically mention the single quote such as
> something that uses the wildcard '.'.

Well, I've checked again, for the 17th time, and there is no such 
conflict.

There is a lexer rule called Period whose right hand side is simply '.'. 
I put a backslash in (though my understanding is that a dot is only a 
single-character wild-card outside of a quoted string) but it had no 
effect. There was an (unused) lexer rule fragment called PrintableChar 
which was indeed simply a wild-card dot (no quote marks of any sort). 
Removing this rule did not change the diagnostic.


> ...


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 19 12:10:59 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 12:10:59 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191204.46996.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191140.30586.rschulz@sonic.net>
	<C2411650-5D4F-4656-A506-244A5C4B1070@cs.usfca.edu>
	<200611191204.46996.rschulz@sonic.net>
Message-ID: <E825729C-B90C-4DFF-B31E-B286A358C999@cs.usfca.edu>


On Nov 19, 2006, at 12:04 PM, Randall R Schulz wrote:
> Well, I've checked again, for the 17th time, and there is no such
> conflict.
>
> There is a lexer rule called Period whose right hand side is simply  
> '.'.
> I put a backslash in (though my understanding is that a dot is only a
> single-character wild-card outside of a quoted string) but it had no
> effect. There was an (unused) lexer rule fragment called PrintableChar
> which was indeed simply a wild-card dot (no quote marks of any sort).

ah.

> Removing this rule did not change the diagnostic.

oh.  Better  send me the grammar, though I'm sure I'll find something ;)

Ter


From rschulz at sonic.net  Sun Nov 19 12:14:33 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 12:14:33 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <E825729C-B90C-4DFF-B31E-B286A358C999@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191204.46996.rschulz@sonic.net>
	<E825729C-B90C-4DFF-B31E-B286A358C999@cs.usfca.edu>
Message-ID: <200611191214.34046.rschulz@sonic.net>

On Sunday 19 November 2006 12:10, Terence Parr wrote:
> ...
>
> oh.  Better  send me the grammar, though I'm sure I'll find something
> ;)

<http://64.142.14.4/~rschulz/TSTP.g>


> Ter

From parrt at cs.usfca.edu  Sun Nov 19 12:29:34 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 12:29:34 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191214.34046.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191204.46996.rschulz@sonic.net>
	<E825729C-B90C-4DFF-B31E-B286A358C999@cs.usfca.edu>
	<200611191214.34046.rschulz@sonic.net>
Message-ID: <C731E987-0B5D-4B82-B094-4B25968E551A@cs.usfca.edu>

AtomicWord
         :       ( LowerWord )
         |       ( SingleQuoted )
         ;

is above SingleQuoted and therefore matches it instead of  
SingleQuoted. :)

Adding example to book ;)

added improvement request.

http://www.antlr.org:8888/browse/ANTLR-42

Ter

On Nov 19, 2006, at 12:14 PM, Randall R Schulz wrote:

> On Sunday 19 November 2006 12:10, Terence Parr wrote:
>> ...
>>
>> oh.  Better  send me the grammar, though I'm sure I'll find something
>> ;)
>
> <http://64.142.14.4/~rschulz/TSTP.g>
>
>
>> Ter


From rschulz at sonic.net  Sun Nov 19 12:31:07 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 12:31:07 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <C731E987-0B5D-4B82-B094-4B25968E551A@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191214.34046.rschulz@sonic.net>
	<C731E987-0B5D-4B82-B094-4B25968E551A@cs.usfca.edu>
Message-ID: <200611191231.07276.rschulz@sonic.net>

On Sunday 19 November 2006 12:29, Terence Parr wrote:
> AtomicWord
>
>          :       ( LowerWord )
>          |       ( SingleQuoted )
>
>          ;
>
> is above SingleQuoted and therefore matches it instead of
> SingleQuoted. :)

Eh? LowerWord must start with a lower-case alphabetic character. 
SingleQuoted must start with a single quote (a.k.a. apostrophe).

How is that a conflict?


> Adding example to book ;)
>
> added improvement request.
>
> http://www.antlr.org:8888/browse/ANTLR-42
>
> Ter


Still confused,

Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 19 12:47:54 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 12:47:54 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191231.07276.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191214.34046.rschulz@sonic.net>
	<C731E987-0B5D-4B82-B094-4B25968E551A@cs.usfca.edu>
	<200611191231.07276.rschulz@sonic.net>
Message-ID: <78A379F3-7D1C-4994-B1AB-66903CB1B642@cs.usfca.edu>


On Nov 19, 2006, at 12:31 PM, Randall R Schulz wrote:

> On Sunday 19 November 2006 12:29, Terence Parr wrote:
>> AtomicWord
>>
>>          :       ( LowerWord )
>>          |       ( SingleQuoted )
>>
>>          ;
>>
>> is above SingleQuoted and therefore matches it instead of
>> SingleQuoted. :)
>
> Eh? LowerWord must start with a lower-case alphabetic character.
> SingleQuoted must start with a single quote (a.k.a. apostrophe).
>
> How is that a conflict?

Both AtomicWord and SingleQUoted can match SingleQuoted, correct?    
seems to me that what you really want is

atomicWord not AtomicWord.


Ter

From rschulz at sonic.net  Sun Nov 19 12:53:51 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 12:53:51 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <78A379F3-7D1C-4994-B1AB-66903CB1B642@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191231.07276.rschulz@sonic.net>
	<78A379F3-7D1C-4994-B1AB-66903CB1B642@cs.usfca.edu>
Message-ID: <200611191253.51443.rschulz@sonic.net>

On Sunday 19 November 2006 12:47, Terence Parr wrote:
> On Nov 19, 2006, at 12:31 PM, Randall R Schulz wrote:
> > On Sunday 19 November 2006 12:29, Terence Parr wrote:
> >> AtomicWord
> >>
> >>          :       ( LowerWord )
> >>          |       ( SingleQuoted )
> >>          ;
> >>
> >> is above SingleQuoted and therefore matches it instead of
> >> SingleQuoted. :)
> >
> > Eh? LowerWord must start with a lower-case alphabetic character.
> > SingleQuoted must start with a single quote (a.k.a. apostrophe).
> >
> > How is that a conflict?
>
> Both AtomicWord and SingleQUoted can match SingleQuoted, correct?
> seems to me that what you really want is

What does it mean to say SingleQuoted can match SingleQuoted?


> atomicWord not AtomicWord.
>
>
> Ter


When are the first drafts of the book going be available? I desperately 
need documentation.


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 19 13:03:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 13:03:40 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191253.51443.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191231.07276.rschulz@sonic.net>
	<78A379F3-7D1C-4994-B1AB-66903CB1B642@cs.usfca.edu>
	<200611191253.51443.rschulz@sonic.net>
Message-ID: <FA56EEB6-B2B7-4032-961D-610D9141D90C@cs.usfca.edu>


On Nov 19, 2006, at 12:53 PM, Randall R Schulz wrote:

> On Sunday 19 November 2006 12:47, Terence Parr wrote:
>> On Nov 19, 2006, at 12:31 PM, Randall R Schulz wrote:
>>> On Sunday 19 November 2006 12:29, Terence Parr wrote:
>>>> AtomicWord
>>>>
>>>>          :       ( LowerWord )
>>>>          |       ( SingleQuoted )
>>>>          ;
>>>>
>>>> is above SingleQuoted and therefore matches it instead of
>>>> SingleQuoted. :)
>>>
>>> Eh? LowerWord must start with a lower-case alphabetic character.
>>> SingleQuoted must start with a single quote (a.k.a. apostrophe).
>>>
>>> How is that a conflict?
>>
>> Both AtomicWord and SingleQUoted can match SingleQuoted, correct?
>> seems to me that what you really want is
>
> What does it mean to say SingleQuoted can match SingleQuoted?

I simply meant that AtomicWord matches SingleQuoted which means that  
the lexer must decide which rule, AtomicWord or SingleQuoted, will  
match the  the production  with the actual single quote in.

Ter


From rschulz at sonic.net  Sun Nov 19 13:26:38 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 13:26:38 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <FA56EEB6-B2B7-4032-961D-610D9141D90C@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191253.51443.rschulz@sonic.net>
	<FA56EEB6-B2B7-4032-961D-610D9141D90C@cs.usfca.edu>
Message-ID: <200611191326.38870.rschulz@sonic.net>

Terence,

On Sunday 19 November 2006 13:03, Terence Parr wrote:
> ...
>
> I simply meant that AtomicWord matches SingleQuoted which means that
> the lexer must decide which rule, AtomicWord or SingleQuoted, will
> match the  the production  with the actual single quote in.

Got it.

I guess I keep applying parser-rule thinking to lexer rules.


> Ter


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 19 13:30:47 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 13:30:47 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191326.38870.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191253.51443.rschulz@sonic.net>
	<FA56EEB6-B2B7-4032-961D-610D9141D90C@cs.usfca.edu>
	<200611191326.38870.rschulz@sonic.net>
Message-ID: <4C13F835-EA3D-446D-A7E5-1BBE6F2DD908@cs.usfca.edu>


On Nov 19, 2006, at 1:26 PM, Randall R Schulz wrote:

> Terence,
>
> On Sunday 19 November 2006 13:03, Terence Parr wrote:
>> ...
>>
>> I simply meant that AtomicWord matches SingleQuoted which means that
>> the lexer must decide which rule, AtomicWord or SingleQuoted, will
>> match the  the production  with the actual single quote in.
>
> Got it.
>
> I guess I keep applying parser-rule thinking to lexer rules.

Yup ;) knowing where to draw the line is often difficult.

Ter


From rschulz at sonic.net  Sun Nov 19 13:38:21 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 13:38:21 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <4C13F835-EA3D-446D-A7E5-1BBE6F2DD908@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191326.38870.rschulz@sonic.net>
	<4C13F835-EA3D-446D-A7E5-1BBE6F2DD908@cs.usfca.edu>
Message-ID: <200611191338.21915.rschulz@sonic.net>

On Sunday 19 November 2006 13:30, Terence Parr wrote:
> On Nov 19, 2006, at 1:26 PM, Randall R Schulz wrote:
> ...
>
> > I guess I keep applying parser-rule thinking to lexer rules.
>
> Yup ;) knowing where to draw the line is often difficult.
>
> Ter


So, to wrap up and tie this all back to the original report, I still get
a failure when using the debugger in ANTLRworks:

[13:31:03] Note: /dar/tau/src/tau/tstp/TSTPParser.java uses unchecked or unsafe operations.
[13:31:03] Note: Recompile with -Xlint:unchecked for details.
[13:31:06] /dar/tau/src/tau/tstp/__Test__.java:9: cannot find symbol
[13:31:06] symbol  : class TSTPLexer
[13:31:06] location: class __Test__
[13:31:06]         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream("/dar/tau/src/tau/tstp/__Test___input.txt"));
[13:31:06]         ^
[13:31:06] /dar/tau/src/tau/tstp/__Test__.java:9: cannot find symbol
[13:31:06] symbol  : class TSTPLexer
[13:31:06] location: class __Test__
[13:31:06]         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream("/dar/tau/src/tau/tstp/__Test___input.txt"));
[13:31:06]                             ^
[13:31:06] /dar/tau/src/tau/tstp/__Test__.java:12: cannot find symbol
[13:31:06] symbol  : class TSTPParser
[13:31:06] location: class __Test__
[13:31:06]         TSTPParser g = new TSTPParser(tokens);
[13:31:06]         ^
[13:31:06] /dar/tau/src/tau/tstp/__Test__.java:12: cannot find symbol
[13:31:06] symbol  : class TSTPParser
[13:31:06] location: class __Test__
[13:31:06]         TSTPParser g = new TSTPParser(tokens);
[13:31:06]                            ^
[13:31:06] 4 errors


But I have accidentally discovered the problem. Because ANTLRworks left
__Test__.java in the same directory as my other source files (because I
made that the start directory associated with the desktop icon I set up
to launch it) and I then ran my Ant build, I got the same error when it
tried, in its usual megalomaniac way, to compile ever .java file
present. So I looked at that file and see that the problem is that it
lacks a package declaration and / or imports for the Parser and Lexer
classes:

import java.io.*;
import org.antlr.runtime.*;

public class __Test__ {

    public static void main(String args[]) throws Exception {
        //System.out.println("Parser launched");

        TSTPLexer lex = new TSTPLexer(new ANTLRFileStream("/dar/tau/src/tau/tstp/__Test___input.txt"));
        CommonTokenStream tokens = new CommonTokenStream(lex);

        TSTPParser g = new TSTPParser(tokens);

        try {
            g.tptpUnit();
        } catch (RecognitionException e) {
            e.printStackTrace();
        }

        //System.out.println("Parser stopped");
    }
}

From parrt at cs.usfca.edu  Sun Nov 19 13:49:25 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 13:49:25 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191338.21915.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191326.38870.rschulz@sonic.net>
	<4C13F835-EA3D-446D-A7E5-1BBE6F2DD908@cs.usfca.edu>
	<200611191338.21915.rschulz@sonic.net>
Message-ID: <038AE6B3-4A1A-4507-B2A7-E5D9BD769804@cs.usfca.edu>

Hmm...Is TSTPLexer.java on the disk? the compiler saying that the  
generated lexer is not there.
Ter
On Nov 19, 2006, at 1:38 PM, Randall R Schulz wrote:

> On Sunday 19 November 2006 13:30, Terence Parr wrote:
>> On Nov 19, 2006, at 1:26 PM, Randall R Schulz wrote:
>> ...
>>
>>> I guess I keep applying parser-rule thinking to lexer rules.
>>
>> Yup ;) knowing where to draw the line is often difficult.
>>
>> Ter
>
>
> So, to wrap up and tie this all back to the original report, I  
> still get
> a failure when using the debugger in ANTLRworks:
>
> [13:31:03] Note: /dar/tau/src/tau/tstp/TSTPParser.java uses  
> unchecked or unsafe operations.
> [13:31:03] Note: Recompile with -Xlint:unchecked for details.
> [13:31:06] /dar/tau/src/tau/tstp/__Test__.java:9: cannot find symbol
> [13:31:06] symbol  : class TSTPLexer
> [13:31:06] location: class __Test__
> [13:31:06]         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream 
> ("/dar/tau/src/tau/tstp/__Test___input.txt"));
> [13:31:06]         ^
> [13:31:06] /dar/tau/src/tau/tstp/__Test__.java:9: cannot find symbol
> [13:31:06] symbol  : class TSTPLexer
> [13:31:06] location: class __Test__
> [13:31:06]         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream 
> ("/dar/tau/src/tau/tstp/__Test___input.txt"));
> [13:31:06]                             ^
> [13:31:06] /dar/tau/src/tau/tstp/__Test__.java:12: cannot find symbol
> [13:31:06] symbol  : class TSTPParser
> [13:31:06] location: class __Test__
> [13:31:06]         TSTPParser g = new TSTPParser(tokens);
> [13:31:06]         ^
> [13:31:06] /dar/tau/src/tau/tstp/__Test__.java:12: cannot find symbol
> [13:31:06] symbol  : class TSTPParser
> [13:31:06] location: class __Test__
> [13:31:06]         TSTPParser g = new TSTPParser(tokens);
> [13:31:06]                            ^
> [13:31:06] 4 errors
>
>
> But I have accidentally discovered the problem. Because ANTLRworks  
> left
> __Test__.java in the same directory as my other source files  
> (because I
> made that the start directory associated with the desktop icon I  
> set up
> to launch it) and I then ran my Ant build, I got the same error  
> when it
> tried, in its usual megalomaniac way, to compile ever .java file
> present. So I looked at that file and see that the problem is that it
> lacks a package declaration and / or imports for the Parser and Lexer
> classes:
>
> import java.io.*;
> import org.antlr.runtime.*;
>
> public class __Test__ {
>
>     public static void main(String args[]) throws Exception {
>         //System.out.println("Parser launched");
>
>         TSTPLexer lex = new TSTPLexer(new ANTLRFileStream("/dar/tau/ 
> src/tau/tstp/__Test___input.txt"));
>         CommonTokenStream tokens = new CommonTokenStream(lex);
>
>         TSTPParser g = new TSTPParser(tokens);
>
>         try {
>             g.tptpUnit();
>         } catch (RecognitionException e) {
>             e.printStackTrace();
>         }
>
>         //System.out.println("Parser stopped");
>     }
> }


From rschulz at sonic.net  Sun Nov 19 14:07:16 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 14:07:16 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <038AE6B3-4A1A-4507-B2A7-E5D9BD769804@cs.usfca.edu>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191338.21915.rschulz@sonic.net>
	<038AE6B3-4A1A-4507-B2A7-E5D9BD769804@cs.usfca.edu>
Message-ID: <200611191407.16459.rschulz@sonic.net>

Terence,

On Sunday 19 November 2006 13:49, Terence Parr wrote:
> Hmm...Is TSTPLexer.java on the disk? the compiler saying that the
> generated lexer is not there.
> Ter

They're there. They have a package declaration:


-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
@header {
package			tau.tstp;

import			java.io.IOException;
}


@lexer::header {
package			tau.tstp;
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


Producing:

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
// $ANTLR 3.0b5 TSTP.g 2006-11-19 13:58:05

package         tau.tstp;

import          java.io.IOException;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

import org.antlr.runtime.debug.*;

import org.antlr.runtime.tree.*;

public class TSTPParser extends DebugParser {
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
// $ANTLR 3.0b5 TSTP.g 2006-11-19 13:58:06

package         tau.tstp;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

public class TSTPLexer extends Lexer {
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


But ANTLworks' __Test__ driver omits the package declaration and it uses 
unqualified parser and lexer class names, hence the problem.


Randall Schulz

From rschulz at sonic.net  Sun Nov 19 14:12:25 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 14:12:25 -0800
Subject: [antlr-interest] Exit Status from ANTLR
Message-ID: <200611191412.25438.rschulz@sonic.net>

Hi,

It would be nice if the ANTLR command (as in {@link 
org.antlr.Tool#main(String[])} would call System.exit(somethingNonZero) 
if it detected and error in the submitted grammar specification.


Randall Schulz

From Brendan.Babb at uiActive.com  Sun Nov 19 14:14:03 2006
From: Brendan.Babb at uiActive.com (Brendan Babb)
Date: Mon, 20 Nov 2006 09:14:03 +1100
Subject: [antlr-interest] Java.lang.OutOfMemoryError with 3.0b5 but not 3.0b4
In-Reply-To: <001501c70c24$100a60a0$01011eac@bullant.local>
Message-ID: <375EFF03AA6188429920AE6434AF0C432E82E6@syda.bullant.local>

Hi,

I have a grammar based on a mix the ECMA script one and Java 1.5 one.
This compiles without issues using 3.0b4. I'm trying to move to 3.0b5
and I get OOM errors. If I increase the max heap size (java -Xmx1024M),
antlr seems to go into an infinite loop. 

Given that this does work on 3.0b4, I guess there is a bug in 3.0b5. Any
suggestions as to how to help track the problem down, or the sorts of
grammar rules to avoid?

Thanks,
Brendan

From parrt at cs.usfca.edu  Sun Nov 19 14:30:21 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 14:30:21 -0800
Subject: [antlr-interest] Using the ANTLRworks Debugger
In-Reply-To: <200611191407.16459.rschulz@sonic.net>
References: <200611190944.31413.rschulz@sonic.net>
	<200611191338.21915.rschulz@sonic.net>
	<038AE6B3-4A1A-4507-B2A7-E5D9BD769804@cs.usfca.edu>
	<200611191407.16459.rschulz@sonic.net>
Message-ID: <045A07B6-AF34-4B37-A08A-7173A5D63066@cs.usfca.edu>

Ah.  Yeah, apparenlty AW cannot deal with packages; it doesn't look  
inside the header.
Ter

On Nov 19, 2006, at 2:07 PM, Randall R Schulz wrote:

> Terence,
>
> On Sunday 19 November 2006 13:49, Terence Parr wrote:
>> Hmm...Is TSTPLexer.java on the disk? the compiler saying that the
>> generated lexer is not there.
>> Ter
>
> They're there. They have a package declaration:
>
>
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> @header {
> package			tau.tstp;
>
> import			java.io.IOException;
> }
>
>
> @lexer::header {
> package			tau.tstp;
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
>
>
> Producing:
>
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> // $ANTLR 3.0b5 TSTP.g 2006-11-19 13:58:05
>
> package         tau.tstp;
>
> import          java.io.IOException;
>
>
> import org.antlr.runtime.*;
> import java.util.Stack;
> import java.util.List;
> import java.util.ArrayList;
>
> import org.antlr.runtime.debug.*;
>
> import org.antlr.runtime.tree.*;
>
> public class TSTPParser extends DebugParser {
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
>
>
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
> // $ANTLR 3.0b5 TSTP.g 2006-11-19 13:58:06
>
> package         tau.tstp;
>
>
> import org.antlr.runtime.*;
> import java.util.Stack;
> import java.util.List;
> import java.util.ArrayList;
>
> public class TSTPLexer extends Lexer {
> -==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
>
>
> But ANTLworks' __Test__ driver omits the package declaration and it  
> uses
> unqualified parser and lexer class names, hence the problem.
>
>
> Randall Schulz


From parrt at cs.usfca.edu  Sun Nov 19 14:32:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 14:32:29 -0800
Subject: [antlr-interest] Java.lang.OutOfMemoryError with 3.0b5 but not
	3.0b4
In-Reply-To: <375EFF03AA6188429920AE6434AF0C432E82E6@syda.bullant.local>
References: <375EFF03AA6188429920AE6434AF0C432E82E6@syda.bullant.local>
Message-ID: <B74502D0-ECE4-4BDA-BC95-2246E250B219@cs.usfca.edu>

Hi Brendan,

  as I've mentioned to a few other people, I have removed a failsafe  
that I thought was a needed.  For large grammars, ANTLR will take too  
long to decide that one of your decisions has multiple recursive  
alternatives.  Turn on -Xwatchconversion and it will tell you which  
one has the problem. look for common left factors that are very large  
rules and/or recursive. can you privately send me the grammar?

Ter

On Nov 19, 2006, at 2:14 PM, Brendan Babb wrote:

> Hi,
>
> I have a grammar based on a mix the ECMA script one and Java 1.5 one.
> This compiles without issues using 3.0b4. I'm trying to move to 3.0b5
> and I get OOM errors. If I increase the max heap size (java - 
> Xmx1024M),
> antlr seems to go into an infinite loop.
>
> Given that this does work on 3.0b4, I guess there is a bug in  
> 3.0b5. Any
> suggestions as to how to help track the problem down, or the sorts of
> grammar rules to avoid?
>
> Thanks,
> Brendan


From rschulz at sonic.net  Sun Nov 19 14:34:16 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 14:34:16 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
In-Reply-To: <70CA726F-0406-4892-9BD7-50B1432CB4A1@mac.com>
References: <200611190929.07947.rschulz@sonic.net>
	<70CA726F-0406-4892-9BD7-50B1432CB4A1@mac.com>
Message-ID: <200611191434.17232.rschulz@sonic.net>

Jean,

On Sunday 19 November 2006 13:33, you wrote:
> Which key in particular? I know the integration is far from being
> complete but I lack the time to do it right now (and there is almost
> no documentation about how to create a plugin for IntelliJ). If you
> have any suggestion or ideas, let me know.

As others have noted, I'm a rank newbie with IDEA (_and_ with ANTLR!), 
but what I noticed is that CTRL+F and CTRL-R are intercepted by 
ANTLRworks where the native IDEA counterparts are actually more 
capable. I think there was something else, too, but I've already 
uninstalled the plug-in and cannot easily check right now what it might 
have been.


> Best regards,
>
> Jean


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 19 14:43:59 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 19 Nov 2006 14:43:59 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
In-Reply-To: <200611191434.17232.rschulz@sonic.net>
References: <200611190929.07947.rschulz@sonic.net>
	<70CA726F-0406-4892-9BD7-50B1432CB4A1@mac.com>
	<200611191434.17232.rschulz@sonic.net>
Message-ID: <403CED18-7771-4882-B42A-AA7F71CF3A22@cs.usfca.edu>


On Nov 19, 2006, at 2:34 PM, Randall R Schulz wrote:

> Jean,
>
> On Sunday 19 November 2006 13:33, you wrote:
>> Which key in particular? I know the integration is far from being
>> complete but I lack the time to do it right now (and there is almost
>> no documentation about how to create a plugin for IntelliJ). If you
>> have any suggestion or ideas, let me know.
>
> As others have noted, I'm a rank newbie with IDEA (_and_ with ANTLR!),
> but what I noticed is that CTRL+F and CTRL-R are intercepted by
> ANTLRworks where the native IDEA counterparts are actually more
> capable. I think there was something else, too, but I've already
> uninstalled the plug-in and cannot easily check right now what it  
> might
> have been.

ctrl-F is forward 1 char in AW because it understands some Emacs key  
bindings. ;)

Ter

From rschulz at sonic.net  Sun Nov 19 14:52:26 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 14:52:26 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
In-Reply-To: <403CED18-7771-4882-B42A-AA7F71CF3A22@cs.usfca.edu>
References: <200611190929.07947.rschulz@sonic.net>
	<200611191434.17232.rschulz@sonic.net>
	<403CED18-7771-4882-B42A-AA7F71CF3A22@cs.usfca.edu>
Message-ID: <200611191452.26323.rschulz@sonic.net>

Terence,

On Sunday 19 November 2006 14:43, Terence Parr wrote:
> ...
>
> ctrl-F is forward 1 char in AW because it understands some Emacs key
> bindings. ;)

Not as the 1.0b6 came out of the box on my system. The stand-alone 
ANTLRworks application activates its Find (and replace) dialog when I 
type CTRL+F. CTRL+R invokes "Check Grammar."

The behavior of the 1.0b5 IDEA plug-in was the same.


> Ter


RRS

From kroepke at classdump.org  Sun Nov 19 16:13:23 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Nov 2006 01:13:23 +0100
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200611191412.25438.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net>
Message-ID: <D3244574-EC16-4190-ADF6-129B535BCE3C@classdump.org>


On 19. Nov 2006, at 23:12 , Randall R Schulz wrote:

> It would be nice if the ANTLR command (as in {@link
> org.antlr.Tool#main(String[])} would call System.exit 
> (somethingNonZero)
> if it detected and error in the submitted grammar specification.

Right you are! http://www.antlr.org:8888/browse/ANTLR-43

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From andrew at adersoftware.com  Sun Nov 19 20:04:20 2006
From: andrew at adersoftware.com (Andrew Deren)
Date: Sun, 19 Nov 2006 22:04:20 -0600
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
References: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
Message-ID: <000001c70c58$f5331710$df994530$@com>

I'd be interesting in reading that article.
Can you provide a link to it?
Thanks.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alex Shneyderman
Sent: Monday, November 13, 2006 12:29 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Incremental lexer and parser?

I was reading the  Prashant Deva's article on ibm site and he was talking of
incremental lexing and parsing. I was wondering if ANTLR has any support
for it. If not is this something that would be supported in 3.0?

A discussion on how one would approch the problem given ANTLR as
the tool - for parser and lexer generation - would also be helpfull.

-- 
Thanks,
Alex.



From rschulz at sonic.net  Sun Nov 19 20:13:20 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 20:13:20 -0800
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <000001c70c58$f5331710$df994530$@com>
References: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
	<000001c70c58$f5331710$df994530$@com>
Message-ID: <200611192013.20599.rschulz@sonic.net>

Andrew,

On Sunday 19 November 2006 20:04, Andrew Deren wrote:
> I'd be interesting in reading that article.
> Can you provide a link to it?
> Thanks.

Got Google?

<http://placidsystems.com/blog/2006/09/developerworks-tutorial-cr_115765612942354445.html>
<http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.html?S_TACT=105AGX01&S_CMP=HP>


Randall Schulz

From rschulz at sonic.net  Sun Nov 19 20:18:54 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 20:18:54 -0800
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <200611192013.20599.rschulz@sonic.net>
References: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
	<000001c70c58$f5331710$df994530$@com>
	<200611192013.20599.rschulz@sonic.net>
Message-ID: <200611192018.54912.rschulz@sonic.net>

Andrew,

On Sunday 19 November 2006 20:13, Randall R Schulz wrote:
> On Sunday 19 November 2006 20:04, Andrew Deren wrote:
> > I'd be interesting in reading that article.
> > Can you provide a link to it?
> > Thanks.
>
> Got Google?
>
> <http://placidsystems.com/blog/2006/09/developerworks-tutorial-cr_115
>765612942354445.html>
> <http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.ht
>ml?S_TACT=105AGX01&S_CMP=HP>

Wow. That was way off! I gotta' look before I leap.

But there are some somewhat relevant hits on Google for "Prashant Deva 
Incremental Parser".

There are six hits from searching for "Prashant Deva" alone on 
DeveloperWorks (<http://www.ibm.com/developerworks/>), but none of them 
seem to relate to incremental parsing.

Sorry for the carelessness.


Randall Schulz

From antlr-list at arizona-software.ch  Sun Nov 19 20:53:47 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 19 Nov 2006 20:53:47 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
In-Reply-To: <200611191452.26323.rschulz@sonic.net>
References: <200611190929.07947.rschulz@sonic.net>
	<200611191434.17232.rschulz@sonic.net>
	<403CED18-7771-4882-B42A-AA7F71CF3A22@cs.usfca.edu>
	<200611191452.26323.rschulz@sonic.net>
Message-ID: <194121B4-67CF-4ABD-91EA-CC5B06F495E9@arizona-software.ch>

AW has two behaviors:
- On Mac OS X, CTRL+F is used as an Emacs key binding while COMMAND+F  
is used for the find dialog.
- On Windows/Linux, CTRL+F is used for the find dialog (no Emacs key  
bindings).

I think that the behavior in your case is normal: AW will use its own  
Find dialog when you want to find something in the grammar.

Jean

On Nov 19, 2006, at 2:52 PM, Randall R Schulz wrote:

> Terence,
>
> On Sunday 19 November 2006 14:43, Terence Parr wrote:
>> ...
>>
>> ctrl-F is forward 1 char in AW because it understands some Emacs key
>> bindings. ;)
>
> Not as the 1.0b6 came out of the box on my system. The stand-alone
> ANTLRworks application activates its Find (and replace) dialog when I
> type CTRL+F. CTRL+R invokes "Check Grammar."
>
> The behavior of the 1.0b5 IDEA plug-in was the same.
>
>
>> Ter
>
>
> RRS


From a.shneyderman at gmail.com  Sun Nov 19 21:55:55 2006
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Mon, 20 Nov 2006 06:55:55 +0100
Subject: [antlr-interest] Incremental lexer and parser?
In-Reply-To: <200611192018.54912.rschulz@sonic.net>
References: <693a69ba0611131028s3406ca5na1fd66176fa866af@mail.gmail.com>
	<000001c70c58$f5331710$df994530$@com>
	<200611192013.20599.rschulz@sonic.net>
	<200611192018.54912.rschulz@sonic.net>
Message-ID: <693a69ba0611192155x64ada873t22dd1904b57900aa@mail.gmail.com>

My original post sort if implied that the incremental parser was
mentioned but not
discussed to the level of details that one would want when
implementing something
like that.

Here is the link to the article I meant:

http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.html?S_TACT=105AGX01&S_CMP=HP

Alex.

On 11/20/06, Randall R Schulz <rschulz at sonic.net> wrote:
> Andrew,
>
> On Sunday 19 November 2006 20:13, Randall R Schulz wrote:
> > On Sunday 19 November 2006 20:04, Andrew Deren wrote:
> > > I'd be interesting in reading that article.
> > > Can you provide a link to it?
> > > Thanks.
> >
> > Got Google?
> >
> > <http://placidsystems.com/blog/2006/09/developerworks-tutorial-cr_115
> >765612942354445.html>
> > <http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.ht
> >ml?S_TACT=105AGX01&S_CMP=HP>
>
> Wow. That was way off! I gotta' look before I leap.
>
> But there are some somewhat relevant hits on Google for "Prashant Deva
> Incremental Parser".
>
> There are six hits from searching for "Prashant Deva" alone on
> DeveloperWorks (<http://www.ibm.com/developerworks/>), but none of them
> seem to relate to incremental parsing.
>
> Sorry for the carelessness.
>
>
> Randall Schulz
>


-- 
Thanks,
Alex.

From rschulz at sonic.net  Sun Nov 19 22:04:52 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 19 Nov 2006 22:04:52 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
In-Reply-To: <194121B4-67CF-4ABD-91EA-CC5B06F495E9@arizona-software.ch>
References: <200611190929.07947.rschulz@sonic.net>
	<200611191452.26323.rschulz@sonic.net>
	<194121B4-67CF-4ABD-91EA-CC5B06F495E9@arizona-software.ch>
Message-ID: <200611192204.52810.rschulz@sonic.net>

On Sunday 19 November 2006 20:53, Jean Bovet wrote:
> ...
>
> I think that the behavior in your case is normal: AW will use its own
> Find dialog when you want to find something in the grammar.

Since ANTLRworks' Find / Replace dialog is less functional than IDEA's, 
there seems to be no reason to have it usurp the IDEA functionality.

Anyway, I see that some plug-ins make their actions available to the 
IDEA Keymap configuration section so the user can control whether and 
how they're associated with keyboard shortcuts. I suppose that would be 
the ideal way to handle it.


Even more important, can you make ANTLRworks respect package 
declarations in the grammar when it creates a __Test__ driver class?


> Jean


Randall Schulz

From oliver.zeigermann at gmail.com  Mon Nov 20 00:40:56 2006
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon, 20 Nov 2006 09:40:56 +0100
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <200611191412.25438.rschulz@sonic.net>
References: <200611191412.25438.rschulz@sonic.net>
Message-ID: <9da4f4520611200040o6cdf4ea9mba4955f4d616b602@mail.gmail.com>

I do not think so. Using System.exit in an IDE like e.g. Eclipse will
either tear down the whole IDE or cause a security exception. Neither
option is desirable.

Oliver

2006/11/19, Randall R Schulz <rschulz at sonic.net>:
> Hi,
>
> It would be nice if the ANTLR command (as in {@link
> org.antlr.Tool#main(String[])} would call System.exit(somethingNonZero)
> if it detected and error in the submitted grammar specification.
>
>
> Randall Schulz
>

From kroepke at classdump.org  Mon Nov 20 00:50:53 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Nov 2006 09:50:53 +0100
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <9da4f4520611200040o6cdf4ea9mba4955f4d616b602@mail.gmail.com>
References: <200611191412.25438.rschulz@sonic.net>
	<9da4f4520611200040o6cdf4ea9mba4955f4d616b602@mail.gmail.com>
Message-ID: <F006089B-379E-45F9-93CA-DADC50C480DE@classdump.org>


On 20. Nov 2006, at 9:40 , Oliver Zeigermann wrote:

> I do not think so. Using System.exit in an IDE like e.g. Eclipse will
> either tear down the whole IDE or cause a security exception. Neither
> option is desirable.

mmh. but isn't there a possibilty for a java process to signal  
something to its
caller? surely there must be.
If ANTLR is embedded I see what you mean, but it's not likely that a  
plugin of some sort
would use the stock Tool class without modification, or is it?
Coming from a *nix world, I'm not too familiar how these Java  
thingies do their magic.
However, for build systems (make et al) this is desirable, so I think  
the enhancement ticket
I opened is somewhat sensible. I don't think it will get high  
priority just yet, since there
are more important matters that need to be dealt with.

Of course, someone could step up and have a look at the issues  
involved - there's no harm in that.
The code involved is rather confined, so it would be a good  
opportunity to get one's feet wet ;)

I'm updating the ticket with your concerns, Oliver.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From VAUCHER at fermat.eu  Mon Nov 20 01:18:34 2006
From: VAUCHER at fermat.eu (VAUCHER Laurent)
Date: Mon, 20 Nov 2006 10:18:34 +0100
Subject: [antlr-interest] Exit Status from ANTLR
Message-ID: <55DDB08CC9CD2941A70E8D626789A2C90312D28A@ec8l7ljvo9h5dde.hosting.exch>

> Coming from a *nix world, I'm not too familiar how these Java thingies
do their magic.

  I think the usual way is to have an API class that allows to summon
the ANTLR magic (with all possible parametres) and signals and exception
when something is wrong.
  Then, above this API class, you have several interfaces :
 - one for the command line, which is free to do a System.exit()
whenever it receives and exception from the API class,
 - one for the plugin embedding, which must not do a System.exit() but
can display an error dialog or print a log somewhere,
 - another one for Ant embedding, which takes a 'stoponfailure' argument
and behaves accordingly, throwing a BuildException...


Laurent.



From e.papegaaij at student.utwente.nl  Mon Nov 20 01:24:57 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon, 20 Nov 2006 10:24:57 +0100
Subject: [antlr-interest] [v3] TreeParser capabilities
In-Reply-To: <200611141432.24374.e.papegaaij@student.utwente.nl>
References: <200611141432.24374.e.papegaaij@student.utwente.nl>
Message-ID: <200611201024.57778.e.papegaaij@student.utwente.nl>

On Tuesday 14 November 2006 14:32, Emond Papegaaij wrote:
> For a research project I need some information about the capabilities of
> the TreeParser (for ANTLR v3). My application uses a custom TreeAdaptor,
> which constructs trees in a very different maner. The tree classes do not
> extend CommonTree, nor do they implement Tree.
>
> My first question: Is it possible to use a TreeParser with these nodes? It
> seems the TreeParser is based on a NodeStream, which presents the tree
> nodes to the TreeParser one by one. However only an implementation based on
> CommonTree is provided. What is needed to use a TreeParser with my custom
> TreeAdaptor? Do I need to write a TreeNodeStream based on a TreeAdaptor, or
> is such a stream already available?

It seems like there is currently no such stream. Is there a reason why 
CommonTreeNodeStream is written based on the Tree interface, instead of using 
a TreeAdaptor?

> My second question: Is it possible to skip sub-trees, or visit the same
> branch more than once (for example in an interpreter of a for statement)? I
> suspect that the NodeStream will get out-of-sync when you try to do so.

So far, I've not been able to skip children. A simple wildcard '.' seems to 
match only a single node in the stream, and '^(.)' gives a syntax error.

Can anybody help me with this?

Best regards,
Emond


From kroepke at classdump.org  Mon Nov 20 02:10:37 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Nov 2006 11:10:37 +0100
Subject: [antlr-interest] [v3] TreeParser capabilities
In-Reply-To: <200611201024.57778.e.papegaaij@student.utwente.nl>
References: <200611141432.24374.e.papegaaij@student.utwente.nl>
	<200611201024.57778.e.papegaaij@student.utwente.nl>
Message-ID: <F42BCB4B-7251-4981-A551-0EC5BA981593@classdump.org>


On 20. Nov 2006, at 10:24 , Emond Papegaaij wrote:

>>
>> My first question: Is it possible to use a TreeParser with these  
>> nodes? It
>> seems the TreeParser is based on a NodeStream, which presents the  
>> tree
>> nodes to the TreeParser one by one. However only an implementation  
>> based on
>> CommonTree is provided. What is needed to use a TreeParser with my  
>> custom
>> TreeAdaptor? Do I need to write a TreeNodeStream based on a  
>> TreeAdaptor, or
>> is such a stream already available?
>
> It seems like there is currently no such stream. Is there a reason why
> CommonTreeNodeStream is written based on the Tree interface,  
> instead of using
> a TreeAdaptor?

You'd need to implement a custom node stream class in this case. It  
might be a problem
if you do not implement Tree at all, I thought it was used in some  
cast or something, but
it could be that I'm wrong about this.
Is there a specific reason that you can't implement Tree?

>> My second question: Is it possible to skip sub-trees, or visit the  
>> same
>> branch more than once (for example in an interpreter of a for  
>> statement)? I
>> suspect that the NodeStream will get out-of-sync when you try to  
>> do so.
>
> So far, I've not been able to skip children. A simple wildcard '.'  
> seems to
> match only a single node in the stream, and '^(.)' gives a syntax  
> error.

ANTLR cannot skip subtrees currently :( It's a pain, but it's not  
there yet, sorry.

> Can anybody help me with this?

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From e.papegaaij at student.utwente.nl  Mon Nov 20 02:57:59 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon, 20 Nov 2006 11:57:59 +0100
Subject: [antlr-interest] [v3] TreeParser capabilities
In-Reply-To: <F42BCB4B-7251-4981-A551-0EC5BA981593@classdump.org>
References: <200611141432.24374.e.papegaaij@student.utwente.nl>
	<200611201024.57778.e.papegaaij@student.utwente.nl>
	<F42BCB4B-7251-4981-A551-0EC5BA981593@classdump.org>
Message-ID: <200611201157.59738.e.papegaaij@student.utwente.nl>

On Monday 20 November 2006 11:10, Kay Roepke wrote:
> On 20. Nov 2006, at 10:24 , Emond Papegaaij wrote:
<cut TreeParser over custom AST nodes with TreeAdaptor>
> >
> > It seems like there is currently no such stream. Is there a reason why
> > CommonTreeNodeStream is written based on the Tree interface,
> > instead of using a TreeAdaptor?
>
> You'd need to implement a custom node stream class in this case. It
> might be a problem if you do not implement Tree at all, I thought it was
> used in some cast or something, but it could be that I'm wrong about this.
> Is there a specific reason that you can't implement Tree?

I'm using a heterogeneous AST, which is generated by an external tool. This 
tree is strictly typed, with fields containing the various subtrees. This 
makes the Tree interface difficult to implement. All functionality required 
for the Tree interface is already part of the custom TreeAdaptor (such as 
getChildCount() and getChild(int)). Therefore, I'm wondering why the 
CommonTreeNodeStream is based on the Tree interface, and not on a 
TreeAdaptor. Especially because CommonTreeNodeStream can take a TreeAdaptor 
in its constructor, but it's not used.

> >> My second question: Is it possible to skip sub-trees, or visit the
> >> same
> >> branch more than once (for example in an interpreter of a for
> >> statement)? I
> >> suspect that the NodeStream will get out-of-sync when you try to
> >> do so.
> >
> > So far, I've not been able to skip children. A simple wildcard '.'
> > seems to
> > match only a single node in the stream, and '^(.)' gives a syntax
> > error.
>
> ANTLR cannot skip subtrees currently :( It's a pain, but it's not
> there yet, sorry.

Is this a planned feature?

Best regards,
Emond

From kroepke at classdump.org  Mon Nov 20 03:07:47 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Nov 2006 12:07:47 +0100
Subject: [antlr-interest] [v3] TreeParser capabilities
In-Reply-To: <200611201157.59738.e.papegaaij@student.utwente.nl>
References: <200611141432.24374.e.papegaaij@student.utwente.nl>
	<200611201024.57778.e.papegaaij@student.utwente.nl>
	<F42BCB4B-7251-4981-A551-0EC5BA981593@classdump.org>
	<200611201157.59738.e.papegaaij@student.utwente.nl>
Message-ID: <7B3E1670-AF89-484C-BD66-58046A90F131@classdump.org>


On 20. Nov 2006, at 11:57 , Emond Papegaaij wrote:

> I'm using a heterogeneous AST, which is generated by an external  
> tool. This
> tree is strictly typed, with fields containing the various  
> subtrees. This
> makes the Tree interface difficult to implement. All functionality  
> required
> for the Tree interface is already part of the custom TreeAdaptor  
> (such as
> getChildCount() and getChild(int)). Therefore, I'm wondering why the
> CommonTreeNodeStream is based on the Tree interface, and not on a
> TreeAdaptor. Especially because CommonTreeNodeStream can take a  
> TreeAdaptor
> in its constructor, but it's not used.

Ah, I see. I think the reason was to not place any burden on the tree  
nodes, i.e.
you should be able to pass in everything, as long as it implements  
the basic Tree
interface. At some point Terence has said that he wants to support  
heterogeneous
trees again. It's just not done yet :(
You can probably hack around for the time being, it all depends on  
how much custom
code you are willing to invest at this point.

>> ANTLR cannot skip subtrees currently :( It's a pain, but it's not
>> there yet, sorry.
>
> Is this a planned feature?

Definitely, but again, I can't say when that'll be, with the book and  
bugs and all.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From e.papegaaij at student.utwente.nl  Mon Nov 20 04:31:48 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Mon, 20 Nov 2006 13:31:48 +0100
Subject: [antlr-interest] [v3] TreeParser capabilities
In-Reply-To: <7B3E1670-AF89-484C-BD66-58046A90F131@classdump.org>
References: <200611141432.24374.e.papegaaij@student.utwente.nl>
	<200611201157.59738.e.papegaaij@student.utwente.nl>
	<7B3E1670-AF89-484C-BD66-58046A90F131@classdump.org>
Message-ID: <200611201331.49277.e.papegaaij@student.utwente.nl>

On Monday 20 November 2006 12:07, you wrote:
> On 20. Nov 2006, at 11:57 , Emond Papegaaij wrote:
> > I'm using a heterogeneous AST, which is generated by an external
> > tool. This
> > tree is strictly typed, with fields containing the various
> > subtrees. This
> > makes the Tree interface difficult to implement. All functionality
> > required
> > for the Tree interface is already part of the custom TreeAdaptor
> > (such as
> > getChildCount() and getChild(int)). Therefore, I'm wondering why the
> > CommonTreeNodeStream is based on the Tree interface, and not on a
> > TreeAdaptor. Especially because CommonTreeNodeStream can take a
> > TreeAdaptor
> > in its constructor, but it's not used.
>
> Ah, I see. I think the reason was to not place any burden on the tree
> nodes, i.e.
> you should be able to pass in everything, as long as it implements
> the basic Tree
> interface. At some point Terence has said that he wants to support
> heterogeneous
> trees again. It's just not done yet :(
> You can probably hack around for the time being, it all depends on
> how much custom
> code you are willing to invest at this point.

It seems, it should be fairly easy to convert CommonTreeNodeStream to use 
TreeAdaptor. I just tried a naive attempt to convert the class. It commes 
down to converting 'node.getChild(n)' to 'adaptor.getChild(node, n)'. There 
are however 2 problems: TreeAdaptor is missing a isNil method and the EOF, 
DOWN and UP nodes cannot be made static final. Another minor issue is that 
some methods are not implemented in CommonTreeAdaptor, such as getChild and 
getChildCount. But these methods are trivial to implement.

With these changes, the tree node stream can be implemented without any 
reliance on the Tree interface, just as the parser.

Best regards,
Emond

From rschulz at sonic.net  Mon Nov 20 06:47:34 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 20 Nov 2006 06:47:34 -0800
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <9da4f4520611200040o6cdf4ea9mba4955f4d616b602@mail.gmail.com>
References: <200611191412.25438.rschulz@sonic.net>
	<9da4f4520611200040o6cdf4ea9mba4955f4d616b602@mail.gmail.com>
Message-ID: <200611200647.34544.rschulz@sonic.net>

Oliver,

On Monday 20 November 2006 00:40, you wrote:
> I do not think so. Using System.exit in an IDE like e.g. Eclipse will
> either tear down the whole IDE or cause a security exception. Neither
> option is desirable.

I specifically asked that this be done for the command-line interface 
invoked via the main method org.antlr.Tool. That method should only be 
used by the stand-alone CLI tool.


Randall Schulz


> Oliver
>
> 2006/11/19, Randall R Schulz <rschulz at sonic.net>:
> > Hi,
> >
> > It would be nice if the ANTLR command (as in {@link
> > org.antlr.Tool#main(String[])} would call
> > System.exit(somethingNonZero) if it detected and error in the
> > submitted grammar specification.

From obdrzalek at gmail.com  Mon Nov 20 07:20:50 2006
From: obdrzalek at gmail.com (Jan Obdrzalek)
Date: Mon, 20 Nov 2006 16:20:50 +0100
Subject: [antlr-interest] cgram problem
Message-ID: <66cce1fb0611200720m3c72d80l2ab05d894d2c540b@mail.gmail.com>

Hello,

I think I've encountered a problem in the cgram C grammar. The code
below can pass "gcc -c -std=c89" (i.e. should be allright as far as
ISO C89 standard is concerned), but GnuCParser from cgram crashes on
it.

<<< test.c <<<
void a(void){
	int a=5;
	struct s *ps=({
	typedef int T;
	T t;
	&a;
	});
	return;
}
>>> test.c >>>

I've tried to investigate the problem and found that it looks to be
caused by the following sequence of steps:
- when the parser first encounters the initializer of ps (which is a
compound statement),  the action of opening new scope is not executed
because the parser is in "guess mode"
- for the same reason the new type T not added to the symbol table
- when "T t" is encountered, the check whether T is a tyoedef name
fails, since there is no typedef name T in our current symbol table

Have I missed something, or is it genuine error in cgram? Is there an
easy way to fix this?

Thanks,
Jan

From dave at badgers-in-foil.co.uk  Mon Nov 20 07:51:00 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 20 Nov 2006 15:51:00 +0000
Subject: [antlr-interest] Exit Status from ANTLR
In-Reply-To: <55DDB08CC9CD2941A70E8D626789A2C90312D28A@ec8l7ljvo9h5dde.hosting.exch>
References: <55DDB08CC9CD2941A70E8D626789A2C90312D28A@ec8l7ljvo9h5dde.hosting.exch>
Message-ID: <20061120155100.GA7195@badgers-in-foil.co.uk>

On Mon, Nov 20, 2006 at 10:18:34AM +0100, VAUCHER Laurent wrote:
>   I think the usual way is to have an API class that allows to summon
> the ANTLR magic (with all possible parametres) and signals and exception
> when something is wrong.
>   Then, above this API class, you have several interfaces :
>  - one for the command line, which is free to do a System.exit()
> whenever it receives and exception from the API class,
>  - one for the plugin embedding, which must not do a System.exit() but
> can display an error dialog or print a log somewhere,
>  - another one for Ant embedding, which takes a 'stoponfailure' argument
> and behaves accordingly, throwing a BuildException...

Ditto the last for Maven embedding as well.

Was there someone working on a Maven (2) ANTLR (3) plugin?


ta,
dave

-- 
http://david.holroyd.me.uk/

From rschulz at sonic.net  Mon Nov 20 09:15:46 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 20 Nov 2006 09:15:46 -0800
Subject: [antlr-interest] ANTLR v3 Syntax Questions: !, [squareBrackets];
	Tree Building
Message-ID: <200611200915.46358.rschulz@sonic.net>

Hi,

In reviewing the v3 examples I noticed this (from 
the "examples-v3/simplecTreeParser/simplec.g" example):

stat: forStat
    | expr ';'!
    | block
    | assignStat ';'!
    | ';'!
    ;


What do the trailing exclamation points mean?


-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-

In the slide show at 
<http://www.antlr.org/workshop/ANTLR2005/presentations/ANTLR-v3.ppt> 
there are some snippets of ANTLR v3 rules that look like this:

a[String s] returns [float y]
  : id=ID f==field (ids+=ID)+
    {$s, $y, $id, $id.text, $f.z; $ids.size();}
  ;

field returns [int x, int z] : ... ;


How are these rules (or fragments thereof) interpreted?

I'm also wondering how these features, which I gather have something to 
do with the results or return value from a given rule activation, 
relate to or interact with the tree-building constructs that are 
specified using the "-> ..." notation. Are the constructs shown in the 
example above allowed with the grammar option "output = AST;"?


Thanks.

Randall Schulz

From rschulz at sonic.net  Mon Nov 20 09:16:16 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 20 Nov 2006 09:16:16 -0800
Subject: [antlr-interest] Samples or Examples w/ Action and / or
	Tree-Building Code?
Message-ID: <200611200916.16304.rschulz@sonic.net>

Hi,

I was wondering if there are examples of ANTLR v3 grammars that go 
beyond the mostly purely lexical and syntactic specifications as 
illustrated in the samples available from the ANTLR v3 page 
(<http://www.antlr.org/v3/index.html> / 
<http://www.antlr.org/download/examples-v3.tar.gz>)?

The closest those examples come to including significant action code is 
the "cminus.g" grammar (".../examples-v3/cminus/cminus.g").


Alternately, if there's no fleshed-out examples available currently, is 
there something that details how v3 differs from the amply documented 
v2 ANTLR?

Thanks

Randall Schulz

From lists.steve at arachnedesign.net  Mon Nov 20 09:21:10 2006
From: lists.steve at arachnedesign.net (Steve Lianoglou)
Date: Mon, 20 Nov 2006 12:21:10 -0500
Subject: [antlr-interest] ANTLR v3 Syntax Questions: !, [squareBrackets];
	Tree Building
In-Reply-To: <200611200915.46358.rschulz@sonic.net>
References: <200611200915.46358.rschulz@sonic.net>
Message-ID: <9FF3C0AE-44DD-4F72-9371-914B6ACE696C@arachnedesign.net>

> What do the trailing exclamation points mean?

If it's anything like the v2 syntax, they're used to tell the parser  
to "toss them" after they are scanned.

As in, they're not needed for the next step (building/walking the AST 
(?))

I guess it's the same as v2 since these exclamation points are tacked  
onto the ';' token.

HTH,
-steve

From parrt at cs.usfca.edu  Mon Nov 20 09:46:13 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 20 Nov 2006 09:46:13 -0800
Subject: [antlr-interest] Samples or Examples w/ Action and / or
	Tree-Building Code?
In-Reply-To: <200611200916.16304.rschulz@sonic.net>
References: <200611200916.16304.rschulz@sonic.net>
Message-ID: <DFB8973E-6A3B-4741-8304-0DA9C790C07B@cs.usfca.edu>

See the http://www.lingamantra.org site. have a hidden that link too  
much.   I thought I had that on the v3 page.

Ter
On Nov 20, 2006, at 9:16 AM, Randall R Schulz wrote:

> Hi,
>
> I was wondering if there are examples of ANTLR v3 grammars that go
> beyond the mostly purely lexical and syntactic specifications as
> illustrated in the samples available from the ANTLR v3 page
> (<http://www.antlr.org/v3/index.html> /
> <http://www.antlr.org/download/examples-v3.tar.gz>)?
>
> The closest those examples come to including significant action  
> code is
> the "cminus.g" grammar (".../examples-v3/cminus/cminus.g").
>
>
> Alternately, if there's no fleshed-out examples available  
> currently, is
> there something that details how v3 differs from the amply documented
> v2 ANTLR?
>
> Thanks
>
> Randall Schulz


From rschulz at sonic.net  Mon Nov 20 09:50:57 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 20 Nov 2006 09:50:57 -0800
Subject: [antlr-interest] Samples or Examples w/ Action and / or
	Tree-Building Code?
In-Reply-To: <DFB8973E-6A3B-4741-8304-0DA9C790C07B@cs.usfca.edu>
References: <200611200916.16304.rschulz@sonic.net>
	<DFB8973E-6A3B-4741-8304-0DA9C790C07B@cs.usfca.edu>
Message-ID: <200611200950.57724.rschulz@sonic.net>

Terence,

On Monday 20 November 2006 09:46, Terence Parr wrote:
> See the http://www.lingamantra.org site. have a hidden that link too
> much.   I thought I had that on the v3 page.

I guess you're referring to this (from 
<http://www.antlr.org/v3/index.html>):

"Also check out Mantra Programming Language for a prototype (work in 
progress) using v3."

The correct URL, which is present on the ANTLR v3 Web page, is 
<http://www.linguamantra.org/> (note the 'u' missing from the URL 
above).


> Ter


Randy


> On Nov 20, 2006, at 9:16 AM, Randall R Schulz wrote:
> > Hi,
> >
> > I was wondering if there are examples of ANTLR v3 grammars that go
> > beyond the mostly purely lexical and syntactic specifications as
> > illustrated in the samples available from the ANTLR v3 page
> > (<http://www.antlr.org/v3/index.html> /
> > <http://www.antlr.org/download/examples-v3.tar.gz>)?
> >
> > The closest those examples come to including significant action
> > code is
> > the "cminus.g" grammar (".../examples-v3/cminus/cminus.g").
> >
> >
> > Alternately, if there's no fleshed-out examples available
> > currently, is
> > there something that details how v3 differs from the amply
> > documented v2 ANTLR?
> >
> > Thanks
> >
> > Randall Schulz

From rschulz at sonic.net  Mon Nov 20 11:42:04 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 20 Nov 2006 11:42:04 -0800
Subject: [antlr-interest] References from Parser Rules to Lexer Fragments
	Should Elicit Diagnostic
Message-ID: <200611201142.04121.rschulz@sonic.net>

Hi,

I finally found the last vexing problem in my combined lexer + parser 
grammar.

It turns out I had a parser / non-terminal rule that referred to a lexer 
fragment. I would not / could not match at run time, but there was no 
warning given at the point of reference.

I think references to lexer fragments from parser rules should produce a 
diagnostic.


Randall Schulz

From adrian_yau at rocketmail.com  Mon Nov 20 11:56:10 2006
From: adrian_yau at rocketmail.com (Adrian Yau)
Date: Mon, 20 Nov 2006 11:56:10 -0800 (PST)
Subject: [antlr-interest] ANTLR and unicode supplementary char support
Message-ID: <20061120195610.64751.qmail@web42204.mail.scd.yahoo.com>

Hi,

I'm new to ANTLR and was wondering if version 2.7.x supports
Unicode supplementary character support.  For example, would I be able
to specify '\u26FEE' as a literal and in the range (..) constraint? 
I'm assuming that the ANTLR source code would need to be compiled with
JDK 1.5 for that, am I right?


Thanks,
Adrian




Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061120/844e5dc8/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Nov 20 18:55:46 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 20 Nov 2006 18:55:46 -0800
Subject: [antlr-interest] someone advertising ANTLR for us
Message-ID: <39C6FA67-6ECA-4D29-B986-A82C0235E65F@cs.usfca.edu>

Hi, the nice folks over at semantic designs have a nice headline in  
their ad:

----
ANTLR: just tree parsing
DMS adds analyzers and transformers 30+ predefined language front ends
www.semanticdesigns.com
----

Nice to know ANTLR's the tool to beat! ;)

Ter

From antlr-list at arizona-software.ch  Mon Nov 20 19:48:18 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 20 Nov 2006 19:48:18 -0800
Subject: [antlr-interest] Accessing IDEA Find/Replace and Keyboard
	Assignments w/ ANTLRworks Plug-In Installed
In-Reply-To: <200611192204.52810.rschulz@sonic.net>
References: <200611190929.07947.rschulz@sonic.net>
	<200611191452.26323.rschulz@sonic.net>
	<194121B4-67CF-4ABD-91EA-CC5B06F495E9@arizona-software.ch>
	<200611192204.52810.rschulz@sonic.net>
Message-ID: <85C751C8-183C-467B-8AFE-666FD5AF2999@arizona-software.ch>

>
> Since ANTLRworks' Find / Replace dialog is less functional than  
> IDEA's,
> there seems to be no reason to have it usurp the IDEA functionality.
>

The problem is that the IDEA's Find dialog cannot be used for grammar  
file as ANTLRWorks is the editor-manager for these files.

> Anyway, I see that some plug-ins make their actions available to the
> IDEA Keymap configuration section so the user can control whether and
> how they're associated with keyboard shortcuts. I suppose that  
> would be
> the ideal way to handle it.
>
>

That's right, but again, it does not help in this case as IntelliJ is  
unaware of what a grammar file is - except that ANTLRWorks will  
handle it.

> Even more important, can you make ANTLRworks respect package
> declarations in the grammar when it creates a __Test__ driver class?
>

Will add that for the next release if I have time ;-)

Jean


From foolishewe at hotmail.com  Mon Nov 20 20:31:02 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 21 Nov 2006 04:31:02 +0000
Subject: [antlr-interest] Channel=HIDDEN In ANTLR 3.0b5, ANTLRworks 1.0b6
Message-ID: <BAY107-F209748DBE74DA4ADC7372DC0EC0@phx.gbl>

Hello All:

I just got the shiny new ANTLRworks (1.0b5) and wanted to port from the 
previous revisoin of
ANTLRworks which uses the new ANTLR release (3.0b5).
My early experiences have brought no joy so far (my grammar does not compile 
reliably,
and when I can get it to compile and run dynamically, it does not recognize 
things that
the corresponding ANTLR 3.0b4 version appears to handle correctly).

I may have a cockpit error, but I got the darndest error message for my 
white space handling.
In my grammar end of line signals end of a command, and must be treated 
seperately from
blanks and tabs.

The offending line reads:

WHITESPACE :   (' '  | '\t') {channel=HIDDEN;};

And HIDDEN (I also tried hidden and Hidden) does not link properly.

Regards:

Bill M.

_________________________________________________________________
Share your latest news with your friends with the Windows Live Spaces 
friends module. 
http://clk.atdmt.com/MSN/go/msnnkwsp0070000001msn/direct/01/?href=http://spaces.live.com/spacesapi.aspx?wx_action=create&wx_url=/friends.aspx&mk


From rschulz at sonic.net  Mon Nov 20 20:49:26 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 20 Nov 2006 20:49:26 -0800
Subject: [antlr-interest] Channel=HIDDEN In ANTLR 3.0b5, ANTLRworks 1.0b6
In-Reply-To: <BAY107-F209748DBE74DA4ADC7372DC0EC0@phx.gbl>
References: <BAY107-F209748DBE74DA4ADC7372DC0EC0@phx.gbl>
Message-ID: <200611202049.26554.rschulz@sonic.net>

On Monday 20 November 2006 20:31, Foolish Ewe wrote:
> Hello All:
>
> I just got the shiny new ANTLRworks (1.0b5) ...
>
> I may have a cockpit error, but I got the darndest error message for
> my white space handling. In my grammar end of line signals end of a
> command, and must be treated seperately from blanks and tabs.
>
> The offending line reads:
>
> WHITESPACE :   (' '  | '\t') {channel=HIDDEN;};

Try this:

  { $channel = HIDDEN; }


> And HIDDEN (I also tried hidden and Hidden) does not link properly.
>
> Regards:
>
> Bill M.


Randall Schulz

From mantu_lists at yahoo.com.br  Tue Nov 21 03:50:19 2006
From: mantu_lists at yahoo.com.br (luciano mantuaneli)
Date: Tue, 21 Nov 2006 11:50:19 +0000 (GMT)
Subject: [antlr-interest] Parser: How to refer to an token in a grammar file,
	without conflict with the local AST variable generated by ANTLR?
Message-ID: <20061121115019.50779.qmail@web39504.mail.mud.yahoo.com>

Greetings!

Suppose a grammar rule like that:

1    classField!
2        :    // method, constructor, or variable declaration
3            mods:modifiers
4            (    td:typeDefinitionInternal[#mods]
5                {#classField = #td;}
6
7            |    (tp:typeParameters)?
8                (
9                    h:ctorHead s:constructorBody // constructor
10                    {#classField = #(#[CTOR_DEF,"CTOR_DEF"], mods, tp, h, s);}
11
12                    |    // A generic method/ctor has the typeParameters before the return type.
13                        // This is not allowed for variable definitions, but this production
14                        // allows it, a semantic check could be used if you wanted.
15                        t:typeSpec[false]        // method or variable declaration(s)
16                        (    IDENT{                // the name of the method
17                            //syso(methId_AST.getText());
18                            }
19
20                            // parse the formal parameter declarations.
21                            LPAREN! param:parameterDeclarationList RPAREN!
22
23                            rt:declaratorBrackets[#t]
24
25                            // get the list of exceptions that this method is
26                            // declared to throw
27                            (tc:throwsClause)?
28
29                            ( s2:compoundStatement | SEMI )
30                            {#classField = #(#[METHOD_DEF,"METHOD_DEF"],
31                                         mods,
32                                         tp,
33                                         #(#[TYPE,"TYPE"],rt),
34                                         IDENT,
35                                         param,
36                                         tc,
37                                         s2);}
38                        |    v:variableDefinitions[#mods,#t] SEMI
39                            {#classField = #v;}
40                        )
41                )
42            )
43
44        // "static { ... }" class initializer
45        |    static s3:compoundStatement
46            {#classField = #(#[STATIC_INIT,"STATIC_INIT"], s3);}
47
48        // "{ ... }" instance initializer
49        |    s4:compoundStatement
50            {#classField = #(#[INSTANCE_INIT,"INSTANCE_INIT"], s4);}
51        ;

Suppose now that i want to just print out the name of methods in java console. I tried to do something like this:

...
 15                        t:typeSpec[false]        // method or variable declaration(s)
 16                        (    methId:IDENT{                // the name of the method
 17                            System.out.println(methId_AST.getText());
 18                            }
 19
 20                            // parse the formal parameter declarations.
 21                            LPAREN! 
...

But, this approach induces to a compile error ("The method add(AST) in the type ASTArray is not applicable for the arguments (int)").
I noticed that when i have the line 16 as "(    IDENT{" only, no compile error occur. But, when i try to bind some reference to the IDENT token (i.e.:"(    methId:IDENT{"), I got that compile error message...
Analyzing the Parser class generated by ANTLR, I noticed the following:

   When I do not try to bind the IDENT token to a reference, ANTLR bind the IDENT token to a temporary AST variable, and use this variable to create the node for the enclosing grammar rule "classField"
   When I do, ANTLR indeed bind the IDENT token to my variable "methId", but this variable isn't used to create the grammar rule node. Antlr try to pass directly the IDENT constant to the creation of the node.

My questions is: How can I have a reference to the corresponding IDENT token? How can I avoid that "mess" when I try to reference the token using the "methId:IDENT" form? How can I grab the name of the methods w/o producing compile errors?
Please, help me!

My best regards!
Mantu






 		
---------------------------------
 Voc? quer respostas para suas perguntas? Ou voc? sabe muito e quer compartilhar seu conhecimento? Experimente o Yahoo! Respostas!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061121/5e345679/attachment-0001.html 

From foolishewe at hotmail.com  Tue Nov 21 06:56:50 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 21 Nov 2006 14:56:50 +0000
Subject: [antlr-interest] Channel=HIDDEN In ANTLR 3.0b5, ANTLRworks 1.0b6
Message-ID: <BAY107-F20DBFCF13B00A6DF70B68AC0EC0@phx.gbl>

Thanks Randall:

Sorry that I missed that, I just looked more carefully at the readme and 
must have
missed the leading $.  I thought the $ was needed to access a token or a 
"handle"
bound to a token in the grammar rules, is channel a token or am I 
misunderstanding
the semantics of the leading $?

Regards:

Bill M.


>From: Randall R Schulz <rschulz at sonic.net>
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Channel=HIDDEN In ANTLR 3.0b5, ANTLRworks 
>1.0b6
>Date: Mon, 20 Nov 2006 20:49:26 -0800
>
>On Monday 20 November 2006 20:31, Foolish Ewe wrote:
> > Hello All:
> >
> > I just got the shiny new ANTLRworks (1.0b5) ...
> >
> > I may have a cockpit error, but I got the darndest error message for
> > my white space handling. In my grammar end of line signals end of a
> > command, and must be treated seperately from blanks and tabs.
> >
> > The offending line reads:
> >
> > WHITESPACE :   (' '  | '\t') {channel=HIDDEN;};
>
>Try this:
>
>   { $channel = HIDDEN; }
>
>
> > And HIDDEN (I also tried hidden and Hidden) does not link properly.
> >
> > Regards:
> >
> > Bill M.
>
>
>Randall Schulz

_________________________________________________________________
All-in-one security and maintenance for your PC.? Get a free 90-day trial! 
http://clk.atdmt.com/MSN/go/msnnkwlo0050000002msn/direct/01/?href=http://clk.atdmt.com/MSN/go/msnnkwlo0050000001msn/direct/01/?href=http://www.windowsonecare.com/?sc_cid=msn_hotmail


From parrt at cs.usfca.edu  Tue Nov 21 08:26:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 21 Nov 2006 08:26:12 -0800
Subject: [antlr-interest] Channel=HIDDEN In ANTLR 3.0b5, ANTLRworks 1.0b6
In-Reply-To: <BAY107-F20DBFCF13B00A6DF70B68AC0EC0@phx.gbl>
References: <BAY107-F20DBFCF13B00A6DF70B68AC0EC0@phx.gbl>
Message-ID: <631AA78C-F8AE-45F6-A404-295A7456DD1E@cs.usfca.edu>


On Nov 21, 2006, at 6:56 AM, Foolish Ewe wrote:

> Thanks Randall:
>
> Sorry that I missed that, I just looked more carefully at the  
> readme and must have
> missed the leading $.  I thought the $ was needed to access a token  
> or a "handle"
> bound to a token in the grammar rules, is channel a token or am I  
> misunderstanding
> the semantics of the leading $?

channel is a token attribute, which is an attribute of a lexer  
rule. :)  $ is for all attribute stuff.  @ is for action and % is for  
template junk.

Ter


From rschulz at sonic.net  Tue Nov 21 10:52:32 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Nov 2006 10:52:32 -0800
Subject: [antlr-interest] Implicit Parser Rule Return Types
Message-ID: <200611211052.32403.rschulz@sonic.net>

Hi,

I am seeing what appears to be inconsistent behavior in the return type
 for the methods corresponding to parser rules.

Specifically, I have these two rules:

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-

binaryConnective
  : '<=>'
  | '=>'
  | '<='
  | '<~>'
  | '~|'
  | '~&'
  ;


This rule generates the following code:

  // $ANTLR start binaryConnective
  // TSTP.g:518:1: binaryConnective : ('<=>'|'=>'|'<='|'<~>'|'~|'|'~&');
  public void binaryConnective() throws RecognitionException {
    try {
      // TSTP.g:524:2: ( ('<=>'|'=>'|'<='|'<~>'|'~|'|'~&'))
      // TSTP.g:524:4: ('<=>'|'=>'|'<='|'<~>'|'~|'|'~&')
      {
      if ( (input.LA(1)>=45 && input.LA(1)<=50) ) {
        input.consume();

      ...

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-

name
  : LowerWord
  | SingleQuoted
  | UnsignedInteger
  ;


This generates:

  public static class name_return extends ParserRuleReturnScope {
  };

  // $ANTLR start name
  // TSTP.g:1232:1: name : (LowerWord|SingleQuoted|UnsignedInteger);
  public name_return name() throws RecognitionException {
    name_return retval = new name_return();
    retval.start = input.LT(1);

    try {
      // TSTP.g:1233:2: ( (LowerWord|SingleQuoted|UnsignedInteger))
      // TSTP.g:1233:4: (LowerWord|SingleQuoted|UnsignedInteger)
      {

        ...

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


So my question is this: Why does one rule return something when the
other does not even though both of them have terminals as their
right-hand-side?

In an attempt to make this rule more like the "name:" rule, I tried this
replacement for binaryConnective, but it did not help:

binaryConnective
  : BinaryConnective
  ;

BinaryConnective
  : '<=>'
  | '=>'
  | '<='
  | '<~>'
  | '~|'
  | '~&'
  ;


  // $ANTLR start binaryConnective
  // TSTP.g:518:1: binaryConnective : BinaryConnective ;
  public void binaryConnective() throws RecognitionException {
    try {
      // TSTP.g:519:4: ( BinaryConnective )
      // TSTP.g:519:4: BinaryConnective
      {
      match(input,BinaryConnective,FOLLOW_BinaryConnective_in_binaryConnective630);




Randall Schulz


From parrt at cs.usfca.edu  Tue Nov 21 11:04:35 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 21 Nov 2006 11:04:35 -0800
Subject: [antlr-interest] Implicit Parser Rule Return Types
In-Reply-To: <200611211052.32403.rschulz@sonic.net>
References: <200611211052.32403.rschulz@sonic.net>
Message-ID: <E6641CCA-C0ED-4E3C-84F6-7F4CC0074934@cs.usfca.edu>


On Nov 21, 2006, at 10:52 AM, Randall R Schulz wrote:
> So my question is this: Why does one rule return something when the
> other does not even though both of them have terminals as their
> right-hand-side?

if in an action you reference one of those rules' attributes, then it  
creates the return structure.  Because this is expensive, it tries to  
avoid at all costs.

Ter


From rschulz at sonic.net  Tue Nov 21 11:16:16 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Nov 2006 11:16:16 -0800
Subject: [antlr-interest] Implicit Parser Rule Return Types
In-Reply-To: <E6641CCA-C0ED-4E3C-84F6-7F4CC0074934@cs.usfca.edu>
References: <200611211052.32403.rschulz@sonic.net>
	<E6641CCA-C0ED-4E3C-84F6-7F4CC0074934@cs.usfca.edu>
Message-ID: <200611211116.16920.rschulz@sonic.net>

Terence,

On Tuesday 21 November 2006 11:04, Terence Parr wrote:
> On Nov 21, 2006, at 10:52 AM, Randall R Schulz wrote:
> > So my question is this: Why does one rule return something when the
> > other does not even though both of them have terminals as their
> > right-hand-side?
>
> if in an action you reference one of those rules' attributes, then it
> creates the return structure.  Because this is expensive, it tries to
> avoid at all costs.

OK, except that nothing I do triggers the generation of (non-void) 
return value from the binaryConnective rule in the manner that 
referencing the ".text" attribute of an instance of the "name" rule 
does.

What's the trick?


> Ter


Randall Schulz

From adrian_yau at rocketmail.com  Tue Nov 21 11:56:36 2006
From: adrian_yau at rocketmail.com (Adrian Yau)
Date: Tue, 21 Nov 2006 11:56:36 -0800 (PST)
Subject: [antlr-interest] ANTLR and unicode supplementary char support
Message-ID: <20061121195636.58653.qmail@web42206.mail.scd.yahoo.com>

Hi,

I'm new to ANTLR and was wondering if version 2.7.x supports
Unicode supplementary character support.  For example, would I be able
to specify '\U26FEE' as a literal and in the range (..) constraint?


Thanks,
Adrian









Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061121/df3aa507/attachment.html 

From foolishewe at hotmail.com  Tue Nov 21 12:17:41 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 21 Nov 2006 20:17:41 +0000
Subject: [antlr-interest] Semantic Predicates invoking locally defined
	methods
Message-ID: <BAY107-F186A47A4FF8DB3C9B73E45C0EC0@phx.gbl>

Hello All:

Thanks for the hints.   I'm using ANTLRworks 1.0b6 with ANTLR 3.0b5 (the 
latest and greatest
on both).

I am getting errors using separate compilation.  I would like to divide my 
compiler into a frontend
and backend.  My frontend would include my .g file (the ANTLR language part) 
and some
additional classes in files written in java.  I would like all the frontend 
files to be in the same
java package (we use Eclipse here) so that I can reference my own classes in 
the
actions of the ANTLR grammar.  In the ANTLR source I have created 
@lexer::header{}
and @parser::header{} regions, have the filenames/package names match 
between ANTLR
and java, however, when I try to build the program in ANTLRworks, ANTLRworks 
complains
that the symbol associated with my class cannot be found.  These errors 
appear to be
java compilation issues.  When I go to look at the parser and lexer java 
files, they don't
appear updated (perhaps since the compilation failed).

On a side note, I wish ANTLR would allow for a single optional region that 
would come
first in all files, and then allow for optional lexer and parser specific 
header sections that
would follow it in the generated code.


Any help would be appreciated.

Thanks:

Bill M.

_________________________________________________________________
All-in-one security and maintenance for your PC.? Get a free 90-day trial! 
http://clk.atdmt.com/MSN/go/msnnkwlo0050000002msn/direct/01/?href=http://clk.atdmt.com/MSN/go/msnnkwlo0050000001msn/direct/01/?href=http://www.windowsonecare.com/?sc_cid=msn_hotmail


From antlr1 at cyberplasm.com  Tue Nov 21 16:33:21 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Tue, 21 Nov 2006 16:33:21 -0800
Subject: [antlr-interest] Antlr 3 c# source?
Message-ID: <53f51a64a52e4617be0682c2985c1cff@cyberplasm.com>

The c# classes have changed from earlier versions. I have to sort of 
reverse engineer this thing as I go along, and use the java docs as a guide.
Probably a stupid question but where is the source code for
 
antlr-3.0b5\lib\csharp\bin\net-1.1\antlr.runtime.dll,
Antlr3.Runtime.dll, and StringTemplate.dll?

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061121/285720ad/attachment.html 

From antlr1 at cyberplasm.com  Tue Nov 21 16:36:03 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Tue, 21 Nov 2006 16:36:03 -0800
Subject: [antlr-interest] Searchable list archive?
Message-ID: <a3530ca75c06465d8d4e64c878d2c02e@cyberplasm.com>

I couldn't find this list on http://www.mail-archive.com. Is there some reason this list 
is not available for searching through them?

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061121/9eeb65d9/attachment.html 

From parrt at cs.usfca.edu  Tue Nov 21 16:40:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 21 Nov 2006 16:40:24 -0800
Subject: [antlr-interest] Searchable list archive?
In-Reply-To: <a3530ca75c06465d8d4e64c878d2c02e@cyberplasm.com>
References: <a3530ca75c06465d8d4e64c878d2c02e@cyberplasm.com>
Message-ID: <91DA573C-BB0D-4E59-A2E0-EC17D9CAF018@cs.usfca.edu>

I do keyword antlr-interest plus other search terms in google and it  
finds stuff.
Ter
On Nov 21, 2006, at 4:36 PM, Paul Shaffer wrote:

> I couldn't find this list on http://www.mail-archive.com. Is there  
> some reason this list
> is not available for searching through them?
>
>
>
>
>


From rschulz at sonic.net  Tue Nov 21 17:59:50 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Nov 2006 17:59:50 -0800
Subject: [antlr-interest] Searchable list archive?
In-Reply-To: <91DA573C-BB0D-4E59-A2E0-EC17D9CAF018@cs.usfca.edu>
References: <a3530ca75c06465d8d4e64c878d2c02e@cyberplasm.com>
	<91DA573C-BB0D-4E59-A2E0-EC17D9CAF018@cs.usfca.edu>
Message-ID: <200611211759.50412.rschulz@sonic.net>

Hi,

On Tuesday 21 November 2006 16:40, Terence Parr wrote:
> I do keyword antlr-interest plus other search terms in google and it
> finds stuff.
> Ter

Google Search's "site:" and "inurl:" modifiers are invaluable for 
restricting searches to specific sites and archives. (But they do cut 
down on serendipity...)


Randall Schulz

From rschulz at sonic.net  Tue Nov 21 18:03:08 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Nov 2006 18:03:08 -0800
Subject: [antlr-interest] Unclosed Brace,
	Bracket & Parenthesis Feedback (Request)
Message-ID: <200611211803.08450.rschulz@sonic.net>

Hi,

I would like to request that ANTLR indicate the line (and column) of the 
left brace, bracket or parenthesis that remained unclosed at the time a 
(premature) end-of-file was reached. The current report indicates the 
line number of the EOF, but that's pretty easy to determine without the 
help of the ANTLR compiler.


Randall Schulz

From parrt at cs.usfca.edu  Tue Nov 21 18:08:30 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 21 Nov 2006 18:08:30 -0800
Subject: [antlr-interest] Unclosed Brace,
	Bracket & Parenthesis Feedback (Request)
In-Reply-To: <200611211803.08450.rschulz@sonic.net>
References: <200611211803.08450.rschulz@sonic.net>
Message-ID: <1AF54451-CFA2-41F0-97D0-0CCE8768A139@cs.usfca.edu>

yeah, when we rebuild v3 in v3 we can fix sytnax errors.
Ter
On Nov 21, 2006, at 6:03 PM, Randall R Schulz wrote:

> Hi,
>
> I would like to request that ANTLR indicate the line (and column)  
> of the
> left brace, bracket or parenthesis that remained unclosed at the  
> time a
> (premature) end-of-file was reached. The current report indicates the
> line number of the EOF, but that's pretty easy to determine without  
> the
> help of the ANTLR compiler.
>
>
> Randall Schulz


From rschulz at sonic.net  Tue Nov 21 22:57:04 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Nov 2006 22:57:04 -0800
Subject: [antlr-interest] References to Non-Terminals in Actions
Message-ID: <200611212257.04573.rschulz@sonic.net>

Hi,

I have these parser rules in my grammar:

term
returns [ Term t ]
  : ( functionTerm  { $t = $functionTerm.ft; } )
  | ( variable    { $t = fFF.variableTerm($variable.v); } )
  ;


variable
returns [ Variable v ]
  : UpperWord
    {
      $v = fFF.individualVariable($UpperWord);
    }
  ;


The code this generates is correct for the first case (functionTerm) but 
not for the second (variable). Specifically, the generated code for the 
second case contains literally "$variable.v".

Why is $functionTerm handled correctly when $variable not?

Here's the code the "term:" rule generates:

switch (alt26) {
    case 1 :
        // TSTP.g:932:4: ( functionTerm )
    {
        // TSTP.g:932:4: ( functionTerm )
        // TSTP.g:932:6: functionTerm
        {
        pushFollow(FOLLOW_functionTerm_in_term1747);
        functionTerm22=functionTerm();
        _fsp--;
         t = functionTerm22;

        }
    }
    break;

    case 2 :
        // TSTP.g:933:4: ( variable )
    {
        // TSTP.g:933:4: ( variable )
        // TSTP.g:933:6: variable
        {
        pushFollow(FOLLOW_variable_in_term1758);
        variable();
        _fsp--;
         t = fFF.variableTerm($variable.v);
        }
    }
    break;
}


This is the header of the "variable:" rule's code:

    // $ANTLR start variable
    // TSTP.g:1017:1: variable returns [ Variable v ] : UpperWord ;
    public Variable variable() throws RecognitionException {



Thanks.

Randall Schulz

From ren_c_tan at yahoo.com  Tue Nov 21 23:22:56 2006
From: ren_c_tan at yahoo.com (Randolph Tan)
Date: Wed, 22 Nov 2006 07:22:56 +0000 (GMT)
Subject: [antlr-interest] Using ANTLR on MSV .NET 2k3
Message-ID: <20061122072256.82907.qmail@web56112.mail.re3.yahoo.com>

Greetings!
   
  Sorry to bother the thread again.
   
  I gave up on buildiing the antlr on MinGW and used antler.net-2.7.6 executable instead for generating a C++ source code.
   
  And now, I am encountering another kind of problem during linking (symbol already defined).
   
  Here are the steps I did:
   
  Then, I added all .cpp and .hpp files under antlr-2.7.6\lib\cpp\antlr and antlr-2.7.6\lib\cpp\src to the project.
   
  I modified the sample grammar of the "cut and paste" tutorial from the ANTLR getting started to output C++. I also created a main function (translated Java example to C++).
   
  As I try to build the project, I got these errors:
  fatal error C1010: unexpected end of file while looking for precompiled header directive L.cpp
   
  MSDN says:
  ------------------------------------------------------------------------------------------------------------------
  A precompiled header did not contain a precompiled header directive.
   
  Possible Cause:
  1. Incorrect file specified as a header file.
  2. An include file with /YU (Use Precompiled Header) is not listed in the souce file)
  ------------------------------------------------------------------------------------------------------------------
  I don't really understood what that meant but after I set both all cpp files to "not using precomiled headers", the project was able to compile succesfully.
   
  Then the build failed at linking with 20 errors and 19 warnings.
  One sample error (all of the errors are similar, just different symbols or different object files):
  CharScanner.obj : error LNK2005: "private: static int const antlr::CharScanner::NO_CHAR" (?NO_CHAR at CharScanner@antlr@@0HB) already defined in ANTLR test.obj
   
  Btw, if there is a link to a tutorial using ANTLR on MVS .NET. Please tell me! Thanks!
   
  PS. I am just curious, why does everybody want to build ANTLR into a library? If it can be built, why doesn't antler.org add it in its downloads section?
   
  Reference (These might help, I just followed their suggestions blindly, since I don't know what the build settings really meant):
  http://www.antlr.org/pipermail/antlr-interest/2006-March/015683.html
  http://www.antlr.org/pipermail/antlr-interest/2002-August/001693.html

 Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061122/5cd28f40/attachment.html 

From antlr1 at cyberplasm.com  Tue Nov 21 23:32:12 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Tue, 21 Nov 2006 23:32:12 -0800
Subject: [antlr-interest] v3: definition of fragment
Message-ID: <a02f53582e904a8186247b4ca23c017e@cyberplasm.com>

v3: What is the definition of fragment? Reason for this qualifier or whatever you call it?

I am finding v3 very interesting to use after only a day of working with it. I have no
earlier antlr experience. I used to yacc and lex. I have it all up and running no problem,
but the lack of documentation is killing me however -- is there any ETA on a basic primer 
for grammer file syntax? There is nothing coherent that starts from the beginning.

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061121/40fcccef/attachment.html 

From ric.klaren at gmail.com  Wed Nov 22 01:11:19 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 22 Nov 2006 10:11:19 +0100
Subject: [antlr-interest] Using ANTLR on MSV .NET 2k3
In-Reply-To: <20061122072256.82907.qmail@web56112.mail.re3.yahoo.com>
References: <20061122072256.82907.qmail@web56112.mail.re3.yahoo.com>
Message-ID: <bc607a4e0611220111i2646ab9ga660137eaeca7076@mail.gmail.com>

Hi,

On 11/22/06, Randolph Tan <ren_c_tan at yahoo.com> wrote:
> Then, I added all .cpp and .hpp files under antlr-2.7.6\lib\cpp\antlr and
> antlr-2.7.6\lib\cpp\src to the project.

The simplest to get to work is the static library version. Be sure to
exclude dll.cpp from the project then. (Not sure if it will be a
problem when not building a DLL, I'm no MSVC expert)

> I modified the sample grammar of the "cut and paste" tutorial from the ANTLR
> getting started to output C++. I also created a main function (translated
> Java example to C++).
>
> As I try to build the project, I got these errors:
> fatal error C1010: unexpected end of file while looking for precompiled
> header directive L.cpp

No clue about these. Probably MSVC needs some new syntactic sugar for
precompiled headers.

> I don't really understood what that meant but after I set both all cpp files
> to "not using precomiled headers", the project was able to compile
> succesfully.

Good.

> Then the build failed at linking with 20 errors and 19 warnings.
> One sample error (all of the errors are similar, just different symbols or
> different object files):
> CharScanner.obj : error LNK2005: "private: static int const
> antlr::CharScanner::NO_CHAR" (?NO_CHAR at CharScanner@antlr@@0HB) already
> defined in ANTLR test.obj

Or some objects are included twice or maybe you're using different
compile settings for the library and the project linking to it? Does
it work if you just make one big project with the antlr files and the
files from the sample?

I'm not sure which MSVC version you're exactly using if it's newer
then version 7.1 it may need some tweaking in the config.hpp. Looking
at the error you might have to tinker with the define that tells how
constants should be declared.

> Btw, if there is a link to a tutorial using ANTLR on MVS .NET. Please tell
> me! Thanks!

There have been some posts in the past to the mailing list. But these
have been mostly merged into the readme of the runtime (in lib/cpp)
When I get some time, or when someone else feels like it, it would be
nice to add a wiki page on it.

> PS. I am just curious, why does everybody want to build ANTLR into a
> library? If it can be built, why doesn't antler.org add it in its downloads
> section?

It seems Wolfgang didn't have time to make nice release packages for
the last version at least he did for 2.7.6 (or was it 2.7.5?).
Although with the C++ version one often has to recompile anyway for
specific compiler settings etc. Myself I never figured out how to make
a complete package with everything in it for windows. So usually if no
one contributes binaries they won't get made.

Cheers,

Ric

From rschulz at sonic.net  Wed Nov 22 07:45:27 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 22 Nov 2006 07:45:27 -0800
Subject: [antlr-interest] Can Lexer Rules Have "returns" Clauses?
Message-ID: <200611220745.27307.rschulz@sonic.net>

Hi,

I gather the following rule is not valid, but it produces no complaint 
from ANTLR v3.0b5.

DistinctObject
returns [ String do ]
  : '"' ( ~( '"' | '\\' ) | '\\' '"' | '\\' '\\' )* '"'
    {
      $do = getText().substring(1, getText().length() - 1);
    }
  ;



Randall Schulz

From mail at martin-probst.com  Wed Nov 22 09:27:42 2006
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 22 Nov 2006 18:27:42 +0100
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
References: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
Message-ID: <B3AE167A-1561-4047-8A8B-6A15F87EF9B2@martin-probst.com>

Hi,

somewhat unrelated to the actual software: I get download rates of  
about 3 kb/s from the antlr.org/works server - is there any  
(European?) mirror?

Regards,
Martin

From rschulz at sonic.net  Wed Nov 22 09:32:05 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 22 Nov 2006 09:32:05 -0800
Subject: [antlr-interest] 2nd and Subsequent References in Action to
	Non-Terminals Generate Incorrect Code
Message-ID: <200611220932.05450.rschulz@sonic.net>

Hi,

It appears that within any given parser rule only the first 
alternative's action can successfully refer to (non-assigned) 
non-terminals.

E.g., this parser rule:

functionTerm
returns [ Term ft ]
  : plainTerm     { $ft = $plainTerm.pt; }
  | definedTerm     { $ft = $definedTerm.dt; }
  ;

generates correct code for the reference in the action to $plainTerm.pt 
but simply emits $definedTerm.dt for the reference in the second 
alternative.


However, by assigning the non-terminals to local labels the correct code 
is generated:

functionTerm
returns [ Term ft ]
  : pt = plainTerm    { $ft = $pt.pt; }
  | dt = definedTerm  { $ft = $dt.dt; }
  ;

This formulation generates correct parser Java code.


Randall Schulz

From kroepke at classdump.org  Wed Nov 22 10:42:37 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 19:42:37 +0100
Subject: [antlr-interest] 2nd and Subsequent References in Action to
	Non-Terminals Generate Incorrect Code
In-Reply-To: <200611220932.05450.rschulz@sonic.net>
References: <200611220932.05450.rschulz@sonic.net>
Message-ID: <2D68BBFF-A373-44C2-B935-434602B8F0F5@classdump.org>


On 22. Nov 2006, at 18:32 , Randall R Schulz wrote:

> It appears that within any given parser rule only the first
> alternative's action can successfully refer to (non-assigned)
> non-terminals.
>
> E.g., this parser rule:
>
> functionTerm
> returns [ Term ft ]
>   : plainTerm     { $ft = $plainTerm.pt; }
>   | definedTerm     { $ft = $definedTerm.dt; }
>   ;
>
> generates correct code for the reference in the action to  
> $plainTerm.pt
> but simply emits $definedTerm.dt for the reference in the second
> alternative.

ouch. I added a minimal test case and the bug report: <http:// 
www.antlr.org:8888/browse/ANTLR-46>

but the problem seems to be worse:

grammar MissingAttributeRef;

rule1 returns [ Object obj ]
	:	rule2 { $obj = $rule2.obj2; }
	|	rule3 { $obj = $rule3.obj3; }
	|	rule4 { $obj = $rule4.obj4; }
	;
	
rule2 returns [ Object obj2 ]
	:	foo='foo' { $obj2 = $foo.text; }
	;
	
rule3 returns [ Object obj3 ]
	:	bar='bar' { $obj3 = $bar.text; }
	;
	
rule4 returns [ Object obj4 ]
	:	baz='baz' { $obj4 = $baz.text; }
	;
	
gives:

ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
error(116): MissingAttributeRef.g:0:0: unknown attribute for rule  
rule2: obj2
error(114): MissingAttributeRef.g:10:14: attribute is not a token,  
parameter, or return value: obj2
error(114): MissingAttributeRef.g:14:14: attribute is not a token,  
parameter, or return value: obj3
error(114): MissingAttributeRef.g:18:14: attribute is not a token,  
parameter, or return value: obj4

That's <http://www.antlr.org:8888/browse/ANTLR-47>. Sigh.

Thanks for the report!

-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 22 10:44:36 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 19:44:36 +0100
Subject: [antlr-interest] ANTLRWorks 1.0b6 released
In-Reply-To: <B3AE167A-1561-4047-8A8B-6A15F87EF9B2@martin-probst.com>
References: <63E3807C-6C03-42C5-B1CF-EFE2319BC9F7@arizona-software.ch>
	<B3AE167A-1561-4047-8A8B-6A15F87EF9B2@martin-probst.com>
Message-ID: <07558470-A025-4B57-8DFF-3C5F0E9D0A90@classdump.org>


On 22. Nov 2006, at 18:27 , Martin Probst wrote:

> somewhat unrelated to the actual software: I get download rates of  
> about 3 kb/s from the antlr.org/works server - is there any  
> (European?) mirror?

I sometimes have that problem, too. I thought about setting up a  
mirror, but haven't talked to Terence about it yet, though I'm not  
sure whether it's necessary or not. The other issue is of course the  
bandwidth ;)

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 22 10:49:05 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 19:49:05 +0100
Subject: [antlr-interest] Can Lexer Rules Have "returns" Clauses?
In-Reply-To: <200611220745.27307.rschulz@sonic.net>
References: <200611220745.27307.rschulz@sonic.net>
Message-ID: <B98A44B5-DABD-47C7-AEDE-1571BFD6AE0E@classdump.org>


On 22. Nov 2006, at 16:45 , Randall R Schulz wrote:

> I gather the following rule is not valid, but it produces no complaint
> from ANTLR v3.0b5.

That's right, lexer rules cannot have arbitrary return values.  
Getting an error message would be nice, but I think that might have  
to wait until the rewrite of ANTLR's grammars in v3. I added a bug  
report nonetheless, so it's no going to be forgotten.

You really are in bugreporting mood ;) <http://www.antlr.org:8888/ 
browse/ANTLR-48>

Thanks!

> DistinctObject
> returns [ String do ]
>   : '"' ( ~( '"' | '\\' ) | '\\' '"' | '\\' '\\' )* '"'
>     {
>       $do = getText().substring(1, getText().length() - 1);
>     }
>   ;
>

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Wed Nov 22 10:53:23 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 22 Nov 2006 10:53:23 -0800
Subject: [antlr-interest] Can Lexer Rules Have "returns" Clauses?
In-Reply-To: <B98A44B5-DABD-47C7-AEDE-1571BFD6AE0E@classdump.org>
References: <200611220745.27307.rschulz@sonic.net>
	<B98A44B5-DABD-47C7-AEDE-1571BFD6AE0E@classdump.org>
Message-ID: <200611221053.23156.rschulz@sonic.net>

Kay,

On Wednesday 22 November 2006 10:49, Kay Roepke wrote:
> ...
>
> You really are in bugreporting mood ;) ...

I think "extreme trial-and-error" would be a better characterization...


> Thanks!

No problem.


Randall Schulz

From antlr1 at cyberplasm.com  Wed Nov 22 10:56:50 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Wed, 22 Nov 2006 10:56:50 -0800
Subject: [antlr-interest] v3: definition of fragment
Message-ID: <9cfebf7779f642b8a9e779347afe1070@cyberplasm.com>


 > v3: What is the definition of fragment? Reason for this qualifier or whatever you call it?

Found it. I didn't see this topic in the wiki the first time through.

  Five minute introduction to ANTLR 3
http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3

fragment  in front of a lexer rule instructs ANTLR that the rule is only used as part of another 
lexer rule (i.e. it only builds a fragment of a recognized token)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061122/677332fe/attachment.html 

From cormier at u-picardie.fr  Wed Nov 22 11:12:43 2006
From: cormier at u-picardie.fr (Christian CORMIER)
Date: Wed, 22 Nov 2006 20:12:43 +0100
Subject: [antlr-interest] V3 unicode.g
In-Reply-To: <9cfebf7779f642b8a9e779347afe1070@cyberplasm.com>
References: <9cfebf7779f642b8a9e779347afe1070@cyberplasm.com>
Message-ID: <7339729C-C4D7-4DEA-93C2-75FF3D76F5C8@u-picardie.fr>

Hi,
I seek for unicode.g antlr V3 version.
Regards

From kroepke at classdump.org  Wed Nov 22 11:13:21 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 20:13:21 +0100
Subject: [antlr-interest] V3 unicode.g
In-Reply-To: <7339729C-C4D7-4DEA-93C2-75FF3D76F5C8@u-picardie.fr>
References: <9cfebf7779f642b8a9e779347afe1070@cyberplasm.com>
	<7339729C-C4D7-4DEA-93C2-75FF3D76F5C8@u-picardie.fr>
Message-ID: <438558A6-7E66-49E1-AFEB-F1AC00A87E9C@classdump.org>


On 22. Nov 2006, at 20:12 , Christian CORMIER wrote:

> I seek for unicode.g antlr V3 version.

Christian,

what exactly do you mean by that?

-k
-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Wed Nov 22 11:40:52 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 22 Nov 2006 11:40:52 -0800
Subject: [antlr-interest] Deep Disambiguation
Message-ID: <200611221140.52575.rschulz@sonic.net>

Hi,

I have a thorny disambiguation problem on which I'd like some 
suggestions or pointers.

The PRELIMINARIES can be skipped. Look below for THE SETUP and THE 
PROBLEM to cut to the chase.


-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
PRELIMINARIES:

I'm developing a parser for a format call TSTP (Thousands of Soluations 
for Theorem Provers, part of the TPTP project: 
<http://www.cs.miami.edu/~tptp/>).

Among the constructs that can be encoded in this format is plain old 
First-Order Logic (FOL).

FOL has things called Formulas, which can be thought of as the level at 
which objects have truth values--they're either true or false. Formulas 
are either the application of a named predicate to a list of arguments 
or boolean combinations thereof (there are also quantifiers, for-all 
and there-exists).

At a lower (syntactic) level there are things called Terms. Terms are 
ways of specifying the entities about which logical statements are 
being made. They are individual constants or the application of named 
functions to lists of arguments, which are themselves Terms.

The ambiguity I'm facing stems from the fact that functional terms look 
syntactically just like predicate formulas:

A functional term:

  functionName(termArg1, termArg2, fun2(f2Arg1, f2Arg2))


A predicate formula:

  predicateName(termArg1, termArg2, fun2(f2Arg1, f2Arg2))


The only structural difference is that terms nest arbitrarily but 
predicates do not. That is, both functions and predicates take terms as 
arguments. Predicates cannot be applied to predicate (or boolean or 
quantified) formulas.


In TSTP there are also two allowed infix predicate formulas, for the 
special predicates identity (=) and distinctness (!=).


-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
THE SETUP:

So when I parse something like this:

  fun1(arg1, arg2, fun2(fun2Arg)) = fun3(fun3Arg)

I have to build two (top-level) terms and combine them into a predicate 
formula that applies the identity predicate to those two terms.


By comparison, parsing this:

  pred1(arg1, arg2, fun2(fun2Arg)) & pred2(pred2Arg)

yields a boolean AND formula combining the two top-level predicate 
formulas.


-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
THE PROBLEM

As you can see from comparing the two immediately preceding examples, 
until either the ampersand or the equal sign is encountered, the 
interpretation of preceding content is unknown.

I should note, too, that there are no declarations that state whether a 
given name refers to a predicate or a function.


So how do I resolve this? I'd rather not build a generic tree structure 
and convert it to a Predicate Formula or a Function Term only after the 
parse completes. Everything else in the grammar admits direct local 
construction of the formula and / or term constituents, building the 
overall tree structure incrementally as the parse proceeds.


Thanks.

Randall Schulz

From cormier at u-picardie.fr  Wed Nov 22 12:21:34 2006
From: cormier at u-picardie.fr (Christian CORMIER)
Date: Wed, 22 Nov 2006 21:21:34 +0100
Subject: [antlr-interest] V3 unicode.g
In-Reply-To: <438558A6-7E66-49E1-AFEB-F1AC00A87E9C@classdump.org>
References: <9cfebf7779f642b8a9e779347afe1070@cyberplasm.com>
	<7339729C-C4D7-4DEA-93C2-75FF3D76F5C8@u-picardie.fr>
	<438558A6-7E66-49E1-AFEB-F1AC00A87E9C@classdump.org>
Message-ID: <7CEF7716-C6CF-4700-A419-FF5D2E6339A7@u-picardie.fr>


Le 22 nov. 06 ? 20:13, Kay Roepke a ?crit :

>
> On 22. Nov 2006, at 20:12 , Christian CORMIER wrote:
>
>> I seek for unicode.g antlr V3 version.
>
> Christian,
>
> what exactly do you mean by that?
>
> -k
> --  
> Kay R?pke
> http://classdump.org/
>
Hi,
My grammar with last antlrworks 1.0b6
grammar unicodeEssai;

ID	:	ID_START_LETTER ( ID_LETTER )*
	;
ID_START_LETTER
	:	'$'
	|	'_'
	|	'a'..'z'
	|	'\u0080'..'\ufffe'
	;
ID_LETTER
	:	ID_START_LETTER
	|	'0'..'9'
	;
[21:16:26] Checking Grammar...
[21:16:26] warning(208): unicodeEssai.g:5:1: The following token  
definitions are unreachable: ID_START_LETTER


From kroepke at classdump.org  Wed Nov 22 12:24:21 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 21:24:21 +0100
Subject: [antlr-interest] V3 unicode.g
In-Reply-To: <7CEF7716-C6CF-4700-A419-FF5D2E6339A7@u-picardie.fr>
References: <9cfebf7779f642b8a9e779347afe1070@cyberplasm.com>
	<7339729C-C4D7-4DEA-93C2-75FF3D76F5C8@u-picardie.fr>
	<438558A6-7E66-49E1-AFEB-F1AC00A87E9C@classdump.org>
	<7CEF7716-C6CF-4700-A419-FF5D2E6339A7@u-picardie.fr>
Message-ID: <0C17769C-53C8-4EF0-BDF3-D9C525163F15@classdump.org>


On 22. Nov 2006, at 21:21 , Christian CORMIER wrote:

> grammar unicodeEssai;
>
> ID	:	ID_START_LETTER ( ID_LETTER )*
> 	;
> ID_START_LETTER
> 	:	'$'
> 	|	'_'
> 	|	'a'..'z'
> 	|	'\u0080'..'\ufffe'
> 	;
> ID_LETTER
> 	:	ID_START_LETTER
> 	|	'0'..'9'
> 	;

presumably you want to get only ID tokens in your parser, right?
ANTLR tries to match either ID, ID_START_LETTER, or ID_LETTER.
For input like
$0
there are two possibilities:
1) ID ID_LETTER
2) ID_START_LETTER ID_LETTER

Try this (which is probably what you want, anyway):

grammar unicodeEssai;

ID	:	ID_START_LETTER ( ID_LETTER )*
	;
fragment
ID_START_LETTER
	:	'$'
	|	'_'
	|	'a'..'z'
	|	'\u0080'..'\ufffe'
	;
fragment
ID_LETTER
	:	ID_START_LETTER
	|	'0'..'9'
	;

HTH,

-k

P.S.: Also see the wiki's Five Minute Introduction for an explanation!
<http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to 
+ANTLR+3>
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 22 12:47:02 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 21:47:02 +0100
Subject: [antlr-interest] Deep Disambiguation
In-Reply-To: <200611221140.52575.rschulz@sonic.net>
References: <200611221140.52575.rschulz@sonic.net>
Message-ID: <46B17115-C0DB-4076-8C1B-086D4FC538FC@classdump.org>


On 22. Nov 2006, at 20:40 , Randall R Schulz wrote:

> As you can see from comparing the two immediately preceding examples,
> until either the ampersand or the equal sign is encountered, the
> interpretation of preceding content is unknown.
>
> I should note, too, that there are no declarations that state  
> whether a
> given name refers to a predicate or a function.

Given that, I don't think it is possible without knowledge about the  
names (this
is like casts vs. function calls).

> So how do I resolve this? I'd rather not build a generic tree  
> structure
> and convert it to a Predicate Formula or a Function Term only after  
> the
> parse completes. Everything else in the grammar admits direct local
> construction of the formula and / or term constituents, building the
> overall tree structure incrementally as the parse proceeds.

That said, you might be able to get away with the backtrack option.
Sadly, without delving in to the problem domain, I cannot really give  
you an example, sorry.

I think you would somehow need a symbol table in which you keep track  
of what name
can be a predicate, or formula, or both, i.e. not yet decided. It  
sounds pretty hard
to avoid a second pass, though.

Hope that helps at least a little...

-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 22 13:26:47 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 22:26:47 +0100
Subject: [antlr-interest] References to Non-Terminals in Actions
In-Reply-To: <200611212257.04573.rschulz@sonic.net>
References: <200611212257.04573.rschulz@sonic.net>
Message-ID: <73BFBEA4-9F6F-471B-BF3B-6F1384BE303E@classdump.org>

The list seemed to have a hiccup, this hasn't been delivered to the  
list. Here it is again for completeness sake.

On 22. Nov 2006, at 18:32 , Randall R Schulz wrote:


> It appears that within any given parser rule only the first
> alternative's action can successfully refer to (non-assigned)
> non-terminals.
>
> E.g., this parser rule:
>
> functionTerm
> returns [ Term ft ]
>   : plainTerm     { $ft = $plainTerm.pt; }
>   | definedTerm     { $ft = $definedTerm.dt; }
>   ;
>
> generates correct code for the reference in the action to  
> $plainTerm.pt
> but simply emits $definedTerm.dt for the reference in the second
> alternative.
>

ouch. I added a minimal test case and the bug report: <http:// 
www.antlr.org:8888/browse/ANTLR-46>

but the problem seems to be worse:

grammar MissingAttributeRef;

rule1 returns [ Object obj ]
	:	rule2 { $obj = $rule2.obj2; }
	|	rule3 { $obj = $rule3.obj3; }
	|	rule4 { $obj = $rule4.obj4; }
	;
	
rule2 returns [ Object obj2 ]
	:	foo='foo' { $obj2 = $foo.text; }
	;
	
rule3 returns [ Object obj3 ]
	:	bar='bar' { $obj3 = $bar.text; }
	;
	
rule4 returns [ Object obj4 ]
	:	baz='baz' { $obj4 = $baz.text; }
	;
	
gives:

ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
error(116): MissingAttributeRef.g:0:0: unknown attribute for rule  
rule2: obj2
error(114): MissingAttributeRef.g:10:14: attribute is not a token,  
parameter, or return value: obj2
error(114): MissingAttributeRef.g:14:14: attribute is not a token,  
parameter, or return value: obj3
error(114): MissingAttributeRef.g:18:14: attribute is not a token,  
parameter, or return value: obj4

That's <http://www.antlr.org:8888/browse/ANTLR-47>. Sigh.

Thanks for the report!

-k

-- 
Kay R?pke
http://classdump.org/




From parrt at cs.usfca.edu  Wed Nov 22 13:51:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 22 Nov 2006 13:51:33 -0800
Subject: [antlr-interest] References to Non-Terminals in Actions
In-Reply-To: <73BFBEA4-9F6F-471B-BF3B-6F1384BE303E@classdump.org>
References: <200611212257.04573.rschulz@sonic.net>
	<73BFBEA4-9F6F-471B-BF3B-6F1384BE303E@classdump.org>
Message-ID: <094315BA-1CAA-4E89-9A83-84FF9D3E8F2C@cs.usfca.edu>

it's the digits in the names.  obj2->obj makes it work.  ooops.
Ter

From kroepke at classdump.org  Wed Nov 22 14:48:55 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 22 Nov 2006 23:48:55 +0100
Subject: [antlr-interest] References to Non-Terminals in Actions
In-Reply-To: <094315BA-1CAA-4E89-9A83-84FF9D3E8F2C@cs.usfca.edu>
References: <200611212257.04573.rschulz@sonic.net>
	<73BFBEA4-9F6F-471B-BF3B-6F1384BE303E@classdump.org>
	<094315BA-1CAA-4E89-9A83-84FF9D3E8F2C@cs.usfca.edu>
Message-ID: <A2EA6AD8-B2C9-4F7D-B2BB-BC81C618E49C@classdump.org>


On 22. Nov 2006, at 22:51 , Terence Parr wrote:

> it's the digits in the names.  obj2->obj makes it work.  ooops.

i've fixed it. just committing it to the depot.
attributes now permit digits in names, but not in front, the  
actiontranslator will refuse to
accept something like $x.1i1

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 22 16:59:53 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 23 Nov 2006 01:59:53 +0100
Subject: [antlr-interest] 2nd and Subsequent References in Action to
	Non-Terminals Generate Incorrect Code
In-Reply-To: <200611220932.05450.rschulz@sonic.net>
References: <200611220932.05450.rschulz@sonic.net>
Message-ID: <A0C781F6-44ED-42FC-91F7-8DBACA41808F@classdump.org>


On 22. Nov 2006, at 18:32 , Randall R Schulz wrote:

> It appears that within any given parser rule only the first
> alternative's action can successfully refer to (non-assigned)
> non-terminals.

I have just committed the fix to the depot. 'Twas a headscratcher ;)

You can get the latest version from <http://fisheye2.cenqua.com/ 
browse/~tarball=tgz/antlr/antlr.tgz>
Should be up any minute.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From qwertie256 at gmail.com  Wed Nov 22 17:51:01 2006
From: qwertie256 at gmail.com (David Piepgrass)
Date: Wed, 22 Nov 2006 18:51:01 -0700
Subject: [antlr-interest] Ignoring syntax errors
Message-ID: <ce40b1470611221751i7f9b49d2y84a8b69be1a84800@mail.gmail.com>

I would like to ignore syntax errors in my grammar (because if the syntax is
wrong, I presume that some other parser in an expandable system might
understand it), yet if the syntax is correct, I want to flag semantic errors
that are detected within semantic actions. Therefore I have a start rule
like this:

real_starting_rule returns[AST u=null]:
    (    (starting_rule)=> u=starting_rule
    |   (.)*
    );

In order to avoid an exception thrown by the lexer, I also have this scanner
rule (as the last rule):

INVALID_CHARACTER: '\u0001'..'\uFFFE';

This works, but it causes a boatload of nondeterminism exceptions. I know I
could use the filter option, but that's no good, because the parser would
not see the invalid characters.

How can I get the behavior I want without the warnings?

// Note: generateAmbigWarnings=false doesn't help
INVALID_CHARACTER options { generateAmbigWarnings = false; }:
'\u0001'..'\uFFFE';
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061122/f216a490/attachment.html 

From mathieu.clabaut at gmail.com  Thu Nov 23 01:50:32 2006
From: mathieu.clabaut at gmail.com (Mathieu Clabaut)
Date: Thu, 23 Nov 2006 10:50:32 +0100
Subject: [antlr-interest] Translation and pattern matching....
Message-ID: <db9360ca0611230150u4e7fe33bj485d3f0426a1c4a7@mail.gmail.com>

Some time ago there was a long thread about translation philosophy....

One colleague of mine has just pointed me to TOM : http://tom.loria.fr
which may be of some interest to those of you who want to transform
antlr trees with pattern matching rules.

(I didn't try myself for now).

-mathieu

From jose.ventura.roda at gmail.com  Thu Nov 23 02:17:44 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Thu, 23 Nov 2006 11:17:44 +0100
Subject: [antlr-interest] Problem with "Unexpected char" (Antlr 2.7.5)
Message-ID: <e39abda10611230217xd061cd4l87e8c382770286e9@mail.gmail.com>

Antlr 2.7.5

Hi, I don't know how to do to recognize the character '|' in the lexer.

In the lexer I have:


class CobolLex extends Lexer;
options
{
k=1;
charVocabulary = '\u0000'..'\uFFEE';
caseSensitive=false;
caseSensitiveLiterals=false;
testLiterals=false;
exportVocab=CobolLexVocab;
}


The error:


:\Documents and Settings\JVR3651A\Desktop\call\fuentes\EDO4007.NEW:1313:58:
unexpected char: '|'
at parser.cobol.CobolLex.nextToken(CobolLex.java:674)
at antlr.TokenBuffer.fill(TokenBuffer.java:69)
at antlr.TokenBuffer.LA(TokenBuffer.java:80)
at antlr.LLkParser.LA(LLkParser.java:52)
at parser.cobol.CobolParser.comando_sql(CobolParser.java:14898)
at parser.cobol.CobolParser.comando_exec(CobolParser.java:3704)
at parser.cobol.CobolParser.comando(CobolParser.java:5582)
at parser.cobol.CobolParser.sentencia(CobolParser.java:5490)
at parser.cobol.CobolParser.lista_sentencias(CobolParser.java:5356)
at parser.cobol.CobolParser.dec_apartado(CobolParser.java:5450)
at parser.cobol.CobolParser.parrafos(CobolParser.java:5322)
at parser.cobol.CobolParser.procedure_division(CobolParser.java:505)
at parser.cobol.CobolParser.source_cobol(CobolParser.java:184)
at parser.cobol.CobolParser.programa(CobolParser.java:103)
at parser.cobol.ASTCobol.construirAST(ASTCobol.java:82)
at parser.cobol.ASTCobol.<init>(ASTCobol.java:49)
at bpe.Modulos.main(Modulos.java:98)


Know anyone what's the problem?.

Thank's in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/0360a861/attachment.html 

From mai00cas at studserv.uni-leipzig.de  Thu Nov 23 04:01:43 2006
From: mai00cas at studserv.uni-leipzig.de (Magnus Knuth)
Date: Thu, 23 Nov 2006 13:01:43 +0100
Subject: [antlr-interest] Ignoring syntax errors
In-Reply-To: <ce40b1470611221751i7f9b49d2y84a8b69be1a84800@mail.gmail.com>
References: <ce40b1470611221751i7f9b49d2y84a8b69be1a84800@mail.gmail.com>
Message-ID: <45658DA7.3050609@studserv.uni-leipzig.de>

Hello David,

when your input is not syntactically correct to your grammar, you will
get a RecognitionException thrown by your Parser anyway, why not using
this mechanism? In case you find semantic errors you just throw an own
SemanticException.
> I would like to ignore syntax errors in my grammar (because if the
> syntax is wrong, I presume that some other parser in an expandable
> system might understand it), yet if the syntax is correct, I want to
> flag semantic errors that are detected within semantic actions.
> Therefore I have a start rule like this:
>
> real_starting_rule returns[AST u=null]:
>     (    (starting_rule)=> u=starting_rule
>     |   (.)*
>     );
Why consuming the input and building a flat AST, when you don't need it?
 
real_starting_rule returns[AST u=null]:
    ( u=starting_rule )
    ;
    exception // for rule
    catch [RecognitionException ex] {
        reportError(ex);
        return(null);
    }

> INVALID_CHARACTER: '\u0001'..'\uFFFE';
>
> This works, but it causes a boatload of nondeterminism exceptions.
Isn't the range of INVALID_CHARACTER to big? Isn't it almost all UTF-8
characters? Afaik ASCII ranges from '\u0000' to '\u007F'. When
INVALID_CHARACTER and the alphabet of your tokens overlap that should be
a reason for indeterminism.

Regards, Magnus.

-- 
Magnus Knuth
mai00cas at studserv.uni-leipzig.de
JABBER mgns at jabber.ccc.de


From jose.ventura.roda at gmail.com  Thu Nov 23 04:08:26 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Thu, 23 Nov 2006 13:08:26 +0100
Subject: [antlr-interest] Problem with "Unexpected char" (Antlr 2.7.5)
In-Reply-To: <e7e02b7a0611230255n6cb998evb348b44cb3adfbe0@mail.gmail.com>
References: <e39abda10611230217xd061cd4l87e8c382770286e9@mail.gmail.com>
	<e7e02b7a0611230255n6cb998evb348b44cb3adfbe0@mail.gmail.com>
Message-ID: <e39abda10611230408x16847a40v533eaee94323ff50@mail.gmail.com>

Thank's Dominik for your response.

I think the character '|' is \u007c. I don't know what I'm doing wrong.

Any help?


2006/11/23, Dominik Holenstein <dhantlr at googlemail.com>:
>
> Hi Jose,
>
> Just a thought:
> Perhaps the '|' is not in the range of your charVocabulary definition:
> charVocabulary = '\u0000'..'\uFFEE';
>
>
> Dominik
>
>
>
>
> 2006/11/23, Jose Ventura <jose.ventura.roda at gmail.com>:
> >
> > Antlr 2.7.5
> >
> > Hi, I don't know how to do to recognize the character '|' in the lexer.
> >
> > In the lexer I have:
> >
> >
> > class CobolLex extends Lexer;
> > options
> > {
> > k=1;
> > charVocabulary = '\u0000'..'\uFFEE';
> > caseSensitive=false;
> > caseSensitiveLiterals=false;
> > testLiterals=false;
> > exportVocab=CobolLexVocab;
> > }
> >
> >
> > The error:
> >
> >
> > :\Documents and
> > Settings\JVR3651A\Desktop\call\fuentes\EDO4007.NEW:1313:58: unexpected char:
> > '|'
> > at parser.cobol.CobolLex.nextToken(CobolLex.java:674)
> > at antlr.TokenBuffer.fill (TokenBuffer.java:69)
> > at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> > at antlr.LLkParser.LA(LLkParser.java:52)
> > at parser.cobol.CobolParser.comando_sql(CobolParser.java:14898)
> > at parser.cobol.CobolParser.comando_exec (CobolParser.java:3704)
> > at parser.cobol.CobolParser.comando(CobolParser.java:5582)
> > at parser.cobol.CobolParser.sentencia(CobolParser.java:5490)
> > at parser.cobol.CobolParser.lista_sentencias(CobolParser.java:5356)
> > at parser.cobol.CobolParser.dec_apartado(CobolParser.java:5450)
> > at parser.cobol.CobolParser.parrafos(CobolParser.java:5322)
> > at parser.cobol.CobolParser.procedure_division(CobolParser.java:505)
> > at parser.cobol.CobolParser.source_cobol (CobolParser.java:184)
> > at parser.cobol.CobolParser.programa(CobolParser.java:103)
> > at parser.cobol.ASTCobol.construirAST(ASTCobol.java:82)
> > at parser.cobol.ASTCobol.<init>(ASTCobol.java:49)
> > at bpe.Modulos.main (Modulos.java:98)
> >
> >
> > Know anyone what's the problem?.
> >
> > Thank's in advance.
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/c30845e1/attachment.html 

From ssiegel at finjan.com  Thu Nov 23 04:17:37 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 23 Nov 2006 14:17:37 +0200
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
Message-ID: <E344C433F006AB45A306D422F9C3EB4CEE7DFA@exmail1.finjan.com>


From ssiegel at finjan.com  Thu Nov 23 04:20:33 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 23 Nov 2006 14:20:33 +0200
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
Message-ID: <E344C433F006AB45A306D422F9C3EB4CEE7E02@exmail1.finjan.com>

I am having problems with this simple rule. It throws a failed predicate
exception at the end of any multi-line comment.

 

MLCOMMENT

      :     '/*'

            (

                  { input.LA(2)!='/' }? '*'

            |     ~('*')

            )*

            '*/'

            {$channel=99;}

      ;

 

It produces the (reformatted) following code. Please note that the
produced code will execute case 1 for asterisk whether or not the
asterisk is followed by a slash. But case 1 throws an exception if the
asterisk is followed by a slash. The code was produced with AntlrWorks
1.0b6

 

loop12: do

{

            int alt12 = 3;

            int LA12_0 = input.LA(1);

            if ((LA12_0 == '*'))

            {

                  int LA12_1 = input.LA(2);

                  if ((LA12_1 == '/'))

                  {

                        int LA12_3 = input.LA(3);

                        if (((LA12_3 >= '\u0000' && LA12_3 <=
'\uFFFE')))

                        {

                              alt12 = 1;

                        }

                  }

                  else if (((LA12_1 >= '\u0000' && LA12_1 <= '.') 

|| (LA12_1 >= '0' && LA12_1 <= '\uFFFE')))

                  {

                        alt12 = 1;

                  }

            }

            else if (((LA12_0 >= '\u0000' && LA12_0 <= ')') 

|| (LA12_0 >= '+' && LA12_0 <= '\uFFFE')))

            {

                  alt12 = 2;

            }

 

            switch (alt12)

            {

            case 1:

            // {...}? '*'

            {

                  if (!(input.LA(2) != '/'))

                  {

                        if (backtracking > 0)

                        {

                              failed = true;

                              return;

                        }

                        throw new FailedPredicateException(input,

                              "MLCOMMENT", " input.LA(2)!='/' ");

                  }

                  match('*');

                  if (failed)

                        return;

            }

                  break;

            case 2:

            // ~ '*'

            {

                  if ((input.LA(1) >= '\u0000' && input.LA(1) <= ')')

                              || (input.LA(1) >= '+' && input.LA(1) <=
'\uFFFE'))

                  {

                        input.consume();

                        failed = false;

                  }

                  else

                  {

                        if (backtracking > 0)

                        {

                              failed = true;

                              return;

                        }

                        MismatchedSetException mse = 

new MismatchedSetException(null, input);

                        recover(mse);

                        throw mse;

                  }

            }

                  break;

            default:

                  break loop12;

            }

} while (true);


From wiggjd at lsbu.ac.uk  Thu Nov 23 04:32:11 2006
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Thu, 23 Nov 2006 12:32:11 -0000
Subject: [antlr-interest] Antlr 2.7.3 problem with LT(1)->getLine()?
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C533B@CSD-EXBE-VS2.lsbu.ac.uk>

I now need to be able to use non-static character arrays in
productions used recursively to hold source code text passed up from
recursive calls. I assume this is the normal and safest way of dealing
with data from recursive calls.
 
Up till now I have been using static character arrays and not getting
all of the text. 
 
I currently obtain the appropriate line number for output for which I
use LT(1)->getLine() in printf statements.
 
However, when using non-static character arrays in productions used
recursively I am now finding that the use of LT(1)->getLine() totally
messes up the piece of text just returned which I want to print (with
the line number). 
 
Is there any obvious reason for this?
 
I am generating parser in C++ using Antlr 2.7.3
 
David.



This e-mail message may be confidential and is intended only for the use of the individual(s) to whom it is addressed.  It may contain information which is or may be confidential, non-public or legally privileged. Please do not disseminate or distribute this message other than to its intended recipient without permission of the author. You should not copy it or use it for any purpose nor disclose its contents to any other person. If you have received this message in error, please notify me by email immediately and delete the original message and all copies in your computer systems.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/deab1311/attachment.html 

From VAUCHER at fermat.eu  Thu Nov 23 04:34:21 2006
From: VAUCHER at fermat.eu (VAUCHER Laurent)
Date: Thu, 23 Nov 2006 13:34:21 +0100
Subject: [antlr-interest] Problem with "Unexpected char" (Antlr 2.7.5)
Message-ID: <55DDB08CC9CD2941A70E8D626789A2C903220BD1@ec8l7ljvo9h5dde.hosting.exch>

Perhaps you simply don't have a rule that matches it.
 
Do you have a 'catch-all' rule of the style:
 
LOST_CHARACTER : . ;
 
at the end of all rules?

________________________________

De : antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] De la part de Jose Ventura
Envoy? : 23 November 2006 13:08
? : ANTLR Interest
Cc : Dominik Holenstein
Objet : Re: [antlr-interest] Problem with "Unexpected char" (Antlr 2.7.5)


Thank's Dominik for your response.
 
I think the character '|' is \u007c. I don't know what I'm doing wrong.
 
Any help?

 
2006/11/23, Dominik Holenstein <dhantlr at googlemail.com>: 

	Hi Jose,
	 
	Just a thought:
	Perhaps the '|' is not in the range of your charVocabulary definition: charVocabulary = '\u0000'..'\uFFEE';
	 
	 
	Dominik
	 


	 
	2006/11/23, Jose Ventura <jose.ventura.roda at gmail.com>: 
	

		Antlr 2.7.5
		 
		Hi, I don't know how to do to recognize the character '|' in the lexer. 

		In the lexer I have:


			class CobolLex extends Lexer;
			options 
			{ 
			k=1;
			charVocabulary = '\u0000'..'\uFFEE';
			caseSensitive=false;
			caseSensitiveLiterals=false;
			testLiterals=false;
			exportVocab=CobolLexVocab;
			}
			 

		The error:


			:\Documents and Settings\JVR3651A\Desktop\call\fuentes\EDO4007.NEW:1313:58: unexpected char: '|'
			at parser.cobol.CobolLex.nextToken(CobolLex.java:674)
			at antlr.TokenBuffer.fill (TokenBuffer.java:69)
			at antlr.TokenBuffer.LA(TokenBuffer.java:80)
			at antlr.LLkParser.LA(LLkParser.java:52)
			at parser.cobol.CobolParser.comando_sql(CobolParser.java:14898)
			at parser.cobol.CobolParser.comando_exec (CobolParser.java:3704)
			at parser.cobol.CobolParser.comando(CobolParser.java:5582)
			at parser.cobol.CobolParser.sentencia(CobolParser.java:5490)
			at parser.cobol.CobolParser.lista_sentencias(CobolParser.java:5356) 
			at parser.cobol.CobolParser.dec_apartado(CobolParser.java:5450)
			at parser.cobol.CobolParser.parrafos(CobolParser.java:5322)
			at parser.cobol.CobolParser.procedure_division(CobolParser.java:505)
			at parser.cobol.CobolParser.source_cobol (CobolParser.java:184)
			at parser.cobol.CobolParser.programa(CobolParser.java:103)
			at parser.cobol.ASTCobol.construirAST(ASTCobol.java:82)
			at parser.cobol.ASTCobol.<init>(ASTCobol.java:49)
			at bpe.Modulos.main (Modulos.java:98)
			 

		Know anyone what's the problem?.
		 
		Thank's in advance.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/9419e8b4/attachment.html 

From jose.ventura.roda at gmail.com  Thu Nov 23 05:46:21 2006
From: jose.ventura.roda at gmail.com (Jose Ventura)
Date: Thu, 23 Nov 2006 14:46:21 +0100
Subject: [antlr-interest] Fwd: Problem with "Unexpected char" (Antlr 2.7.5)
In-Reply-To: <e39abda10611230546v6a194fcldc58cec4f86c01d6@mail.gmail.com>
References: <55DDB08CC9CD2941A70E8D626789A2C903220BD1@ec8l7ljvo9h5dde.hosting.exch>
	<e39abda10611230546v6a194fcldc58cec4f86c01d6@mail.gmail.com>
Message-ID: <e39abda10611230546r2c4003d1l6cfc4d06364bb61@mail.gmail.com>

Ok, you are rigth.

With this rule run ok.

Thank's.


2006/11/23, VAUCHER Laurent <VAUCHER at fermat.eu>:
>
>  Perhaps you simply don't have a rule that matches it.
>
> Do you have a 'catch-all' rule of the style:
>
> LOST_CHARACTER : . ;
>
> at the end of all rules?
>
>  ------------------------------
> *De :* antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org]
> *De la part de* Jose Ventura
> *Envoy? :* 23 November 2006 13:08
> *? :* ANTLR Interest
> *Cc :* Dominik Holenstein
> *Objet :* Re: [antlr-interest] Problem with "Unexpected char" (Antlr 2.7.5
> )
>
>
>  Thank's Dominik for your response.
>
> I think the character '|' is \u007c. I don't know what I'm doing wrong.
>
> Any help?
>
>
> 2006/11/23, Dominik Holenstein <dhantlr at googlemail.com>:
> >
> > Hi Jose,
> >
> > Just a thought:
> > Perhaps the '|' is not in the range of your charVocabulary definition:
> > charVocabulary = '\u0000'..'\uFFEE';
> >
> >
> > Dominik
> >
> >
> >
> >
> > 2006/11/23, Jose Ventura <jose.ventura.roda at gmail.com>:
> > >
> > > Antlr 2.7.5
> > >
> > > Hi, I don't know how to do to recognize the character '|' in the
> > > lexer.
> > >
> > > In the lexer I have:
> > >
> > >
> > > class CobolLex extends Lexer;
> > > options
> > > {
> > > k=1;
> > > charVocabulary = '\u0000'..'\uFFEE';
> > > caseSensitive=false;
> > > caseSensitiveLiterals=false;
> > > testLiterals=false;
> > > exportVocab=CobolLexVocab;
> > > }
> > >
> > >
> > > The error:
> > >
> > >
> > > :\Documents and
> > > Settings\JVR3651A\Desktop\call\fuentes\EDO4007.NEW:1313:58: unexpected char:
> > > '|'
> > > at parser.cobol.CobolLex.nextToken(CobolLex.java:674)
> > > at antlr.TokenBuffer.fill (TokenBuffer.java:69)
> > > at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> > > at antlr.LLkParser.LA(LLkParser.java:52)
> > > at parser.cobol.CobolParser.comando_sql(CobolParser.java:14898)
> > > at parser.cobol.CobolParser.comando_exec (CobolParser.java:3704)
> > > at parser.cobol.CobolParser.comando(CobolParser.java:5582)
> > > at parser.cobol.CobolParser.sentencia(CobolParser.java:5490)
> > > at parser.cobol.CobolParser.lista_sentencias(CobolParser.java:5356)
> > > at parser.cobol.CobolParser.dec_apartado(CobolParser.java:5450)
> > > at parser.cobol.CobolParser.parrafos(CobolParser.java:5322)
> > > at parser.cobol.CobolParser.procedure_division(CobolParser.java:505)
> > > at parser.cobol.CobolParser.source_cobol (CobolParser.java:184)
> > > at parser.cobol.CobolParser.programa(CobolParser.java:103)
> > > at parser.cobol.ASTCobol.construirAST(ASTCobol.java:82)
> > > at parser.cobol.ASTCobol.<init>(ASTCobol.java:49)
> > > at bpe.Modulos.main (Modulos.java:98)
> > >
> > >
> > > Know anyone what's the problem?.
> > >
> > > Thank's in advance.
> > >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/2bd001fc/attachment-0001.html 

From antlr1 at cyberplasm.com  Thu Nov 23 06:58:32 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Thu, 23 Nov 2006 06:58:32 -0800
Subject: [antlr-interest] v3 c# code gen: filter=true problem
Message-ID: <c58ab143a5ae4eb1b4b52400ae26add3@cyberplasm.com>

For v3 c# code generation I get no parser rule matches if filter=true.

I have no idea what's wrong. If I don't set the filter option the parser
works more or less as expected.

By the way this page
http://www.antlr.org/wiki/display/ANTLR3/Lexical+filters
makes no sense to me -- the description and the grammer
example don't match. Of course I have about 24 hours time
with antlr3 and no antlr 2 experience.

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/c8007a01/attachment.html 

From rschulz at sonic.net  Thu Nov 23 07:57:53 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 23 Nov 2006 07:57:53 -0800
Subject: [antlr-interest] Code Generation Error in 3.0b5
Message-ID: <200611230757.54123.rschulz@sonic.net>

Hi,

This rule:

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
literal
returns [ Formula lf ]
    :   atomicFormula
    {
        $lf = $atomicFormula.af;
    }

    |   '~' atomicFormula
    {
        $lf = fFF.negateFormula($atomicFormula.af);
    }
    ;
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-

Produces the following Java parser code. Note that in the second case,
the one with the '~', that the value of the call to the atomicFormula
rule is discarded instead of being assigned to the local variable
atomicFormula18, causing null to be passed to negateFormula().

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
    // $ANTLR start literal
    // TSTP.g:772:1: literal returns [ Formula lf ] : ( atomicFormula | '~' atomicFormula );
    public Formula literal() throws RecognitionException {
        Formula lf = null;

        Formula atomicFormula18 = null;

        try {
            // TSTP.g:774:4: ( atomicFormula | '~' atomicFormula )
            int alt18 = 2;
            int LA18_0 = input.LA(1);

            if (((LA18_0 == DistinctObject) ||
                        ((LA18_0 >= UpperWord) && (LA18_0 <= SignedInteger)) ||
                        ((LA18_0 >= 72) && (LA18_0 <= 73)))) {
                alt18 = 1;
            } else if ((LA18_0 == 69)) {
                alt18 = 2;
            } else {
                NoViableAltException nvae = new NoViableAltException(
                        "772:1: literal returns [ Formula lf ] : ( atomicFormula | '~' atomicFormula );",
                        18, 0, input);

                throw nvae;
            }

            switch (alt18) {
            case 1:
            // TSTP.g:774:4: atomicFormula
            {
                pushFollow(FOLLOW_atomicFormula_in_literal1226);
                atomicFormula18 = atomicFormula();
                _fsp--;

                lf = atomicFormula18;
            }
            break;

            case 2:
            // TSTP.g:779:4: '~' atomicFormula
            {
                match(input, 69, FOLLOW_69_in_literal1235);
                pushFollow(FOLLOW_atomicFormula_in_literal1237);
                atomicFormula();
                _fsp--;
                lf = fFF.negateFormula(atomicFormula18);
            }
            break;

            }
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
        } finally {
        }

        return lf;
    }
    // $ANTLR end literal
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


Recasting the rule like this corrects the problem:

-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-
literal
returns [ Formula lf ]
    :   af = atomicFormula
    {
        $lf = $af.af;
    }

    |   '~' af = atomicFormula
    {
        $lf = fFF.negateFormula($af.af);
    }
    ;
-==--==--==--==--==--==--==--==--==--==--==--==--==--==--==-


I'm using ANTLR 3.0b5 with Java 1.5.0_07 on Linux.


Randall Schulz

From parrt at cs.usfca.edu  Thu Nov 23 08:35:19 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Nov 2006 08:35:19 -0800
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4CEE7E02@exmail1.finjan.com>
References: <E344C433F006AB45A306D422F9C3EB4CEE7E02@exmail1.finjan.com>
Message-ID: <38AE8ADF-E45A-48BF-AB9C-1D35F5DCA5C2@cs.usfca.edu>

Hi.  That predicate says that no matter what, the 2nd lookahead  
symbol cannot be '/'.  This breaks when you exit.  You want =='/'  
not !='/' right?  Further, this is an old style v2 idiom.  Use  '/ 
*' (options {greedy=false;} : .)* '*/' and you're good!
ter
On Nov 23, 2006, at 4:20 AM, Shmuel Siegel wrote:

> I am having problems with this simple rule. It throws a failed  
> predicate
> exception at the end of any multi-line comment.
>
>
>
> MLCOMMENT
>
>       :     '/*'
>
>             (
>
>                   { input.LA(2)!='/' }? '*'
>
>             |     ~('*')
>
>             )*
>
>             '*/'
>
>             {$channel=99;}
>
>       ;
>
>
>
> It produces the (reformatted) following code. Please note that the
> produced code will execute case 1 for asterisk whether or not the
> asterisk is followed by a slash. But case 1 throws an exception if the
> asterisk is followed by a slash. The code was produced with AntlrWorks
> 1.0b6
>
>
>
> loop12: do
>
> {
>
>             int alt12 = 3;
>
>             int LA12_0 = input.LA(1);
>
>             if ((LA12_0 == '*'))
>
>             {
>
>                   int LA12_1 = input.LA(2);
>
>                   if ((LA12_1 == '/'))
>
>                   {
>
>                         int LA12_3 = input.LA(3);
>
>                         if (((LA12_3 >= '\u0000' && LA12_3 <=
> '\uFFFE')))
>
>                         {
>
>                               alt12 = 1;
>
>                         }
>
>                   }
>
>                   else if (((LA12_1 >= '\u0000' && LA12_1 <= '.')
>
> || (LA12_1 >= '0' && LA12_1 <= '\uFFFE')))
>
>                   {
>
>                         alt12 = 1;
>
>                   }
>
>             }
>
>             else if (((LA12_0 >= '\u0000' && LA12_0 <= ')')
>
> || (LA12_0 >= '+' && LA12_0 <= '\uFFFE')))
>
>             {
>
>                   alt12 = 2;
>
>             }
>
>
>
>             switch (alt12)
>
>             {
>
>             case 1:
>
>             // {...}? '*'
>
>             {
>
>                   if (!(input.LA(2) != '/'))
>
>                   {
>
>                         if (backtracking > 0)
>
>                         {
>
>                               failed = true;
>
>                               return;
>
>                         }
>
>                         throw new FailedPredicateException(input,
>
>                               "MLCOMMENT", " input.LA(2)!='/' ");
>
>                   }
>
>                   match('*');
>
>                   if (failed)
>
>                         return;
>
>             }
>
>                   break;
>
>             case 2:
>
>             // ~ '*'
>
>             {
>
>                   if ((input.LA(1) >= '\u0000' && input.LA(1) <= ')')
>
>                               || (input.LA(1) >= '+' && input.LA(1) <=
> '\uFFFE'))
>
>                   {
>
>                         input.consume();
>
>                         failed = false;
>
>                   }
>
>                   else
>
>                   {
>
>                         if (backtracking > 0)
>
>                         {
>
>                               failed = true;
>
>                               return;
>
>                         }
>
>                         MismatchedSetException mse =
>
> new MismatchedSetException(null, input);
>
>                         recover(mse);
>
>                         throw mse;
>
>                   }
>
>             }
>
>                   break;
>
>             default:
>
>                   break loop12;
>
>             }
>
> } while (true);
>


From parrt at cs.usfca.edu  Thu Nov 23 08:49:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Nov 2006 08:49:29 -0800
Subject: [antlr-interest] v3 c# code gen: filter=true problem
In-Reply-To: <c58ab143a5ae4eb1b4b52400ae26add3@cyberplasm.com>
References: <c58ab143a5ae4eb1b4b52400ae26add3@cyberplasm.com>
Message-ID: <409E0339-BC04-4B56-A3B5-EF93A63CD5C5@cs.usfca.edu>

On Nov 23, 2006, at 6:58 AM, Paul Shaffer wrote:
> By the way this page
> http://www.antlr.org/wiki/display/ANTLR3/Lexical+filters
> makes no sense to me -- the description and the grammer
> example don't match. Of course I have about 24 hours time
> with antlr3 and no antlr 2 experience.

Looks ok to me.

Ter


From ssiegel at finjan.com  Thu Nov 23 09:54:03 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 23 Nov 2006 19:54:03 +0200
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
In-Reply-To: <38AE8ADF-E45A-48BF-AB9C-1D35F5DCA5C2@cs.usfca.edu>
Message-ID: <E344C433F006AB45A306D422F9C3EB4CEE8070@exmail1.finjan.com>

No, that predicate says "only pick up the * if the next char is not a
slash.
This is what antlr2 did. I quote from the cpp_parser on your site. My
original code was the same but I simplified it for the sake of the
problem report. I got the same error with the full code.

Comment  
	:	
		"/*"   
		(	{LA(2) != '/'}? '*'
		|	EndOfLine {deferredNewline();}
		|	~('*'| '\r' | '\n')
		)*
		"*/" {_ttype = ANTLR_USE_NAMESPACE(antlr)Token::SKIP;}
	;

Have things changed in Antlr3?

Anyway, your suggestion about greedy works.


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, November 23, 2006 6:35 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] ANTLR 3.0b5 problem with predicates

Hi.  That predicate says that no matter what, the 2nd lookahead  
symbol cannot be '/'.  This breaks when you exit.  You want =='/'  
not !='/' right?  Further, this is an old style v2 idiom.  Use  '/ 
*' (options {greedy=false;} : .)* '*/' and you're good!
ter
On Nov 23, 2006, at 4:20 AM, Shmuel Siegel wrote:

> I am having problems with this simple rule. It throws a failed  
> predicate
> exception at the end of any multi-line comment.
>
>
>
> MLCOMMENT
>
>       :     '/*'
>
>             (
>
>                   { input.LA(2)!='/' }? '*'
>
>             |     ~('*')
>
>             )*
>
>             '*/'
>
>             {$channel=99;}
>
>       ;
>
>
>
> It produces the (reformatted) following code. Please note that the
> produced code will execute case 1 for asterisk whether or not the
> asterisk is followed by a slash. But case 1 throws an exception if the
> asterisk is followed by a slash. The code was produced with AntlrWorks
> 1.0b6
>
>
>
> loop12: do
>
> {
>
>             int alt12 = 3;
>
>             int LA12_0 = input.LA(1);
>
>             if ((LA12_0 == '*'))
>
>             {
>
>                   int LA12_1 = input.LA(2);
>
>                   if ((LA12_1 == '/'))
>
>                   {
>
>                         int LA12_3 = input.LA(3);
>
>                         if (((LA12_3 >= '\u0000' && LA12_3 <=
> '\uFFFE')))
>
>                         {
>
>                               alt12 = 1;
>
>                         }
>
>                   }
>
>                   else if (((LA12_1 >= '\u0000' && LA12_1 <= '.')
>
> || (LA12_1 >= '0' && LA12_1 <= '\uFFFE')))
>
>                   {
>
>                         alt12 = 1;
>
>                   }
>
>             }
>
>             else if (((LA12_0 >= '\u0000' && LA12_0 <= ')')
>
> || (LA12_0 >= '+' && LA12_0 <= '\uFFFE')))
>
>             {
>
>                   alt12 = 2;
>
>             }
>
>
>
>             switch (alt12)
>
>             {
>
>             case 1:
>
>             // {...}? '*'
>
>             {
>
>                   if (!(input.LA(2) != '/'))
>
>                   {
>
>                         if (backtracking > 0)
>
>                         {
>
>                               failed = true;
>
>                               return;
>
>                         }
>
>                         throw new FailedPredicateException(input,
>
>                               "MLCOMMENT", " input.LA(2)!='/' ");
>
>                   }
>
>                   match('*');
>
>                   if (failed)
>
>                         return;
>
>             }
>
>                   break;
>
>             case 2:
>
>             // ~ '*'
>
>             {
>
>                   if ((input.LA(1) >= '\u0000' && input.LA(1) <= ')')
>
>                               || (input.LA(1) >= '+' && input.LA(1) <=
> '\uFFFE'))
>
>                   {
>
>                         input.consume();
>
>                         failed = false;
>
>                   }
>
>                   else
>
>                   {
>
>                         if (backtracking > 0)
>
>                         {
>
>                               failed = true;
>
>                               return;
>
>                         }
>
>                         MismatchedSetException mse =
>
> new MismatchedSetException(null, input);
>
>                         recover(mse);
>
>                         throw mse;
>
>                   }
>
>             }
>
>                   break;
>
>             default:
>
>                   break loop12;
>
>             }
>
> } while (true);
>


From antlr1 at cyberplasm.com  Thu Nov 23 10:52:48 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Thu, 23 Nov 2006 10:52:48 -0800
Subject: [antlr-interest] v3 c# code gen: filter=true problem
Message-ID: <76f416df2ffc41088dd40c4ed1b73f65@cyberplasm.com>


On Nov 23, 2006, at 6:58 AM, Paul Shaffer wrote:
> By the way this page
> http://www.antlr.org/wiki/display/ANTLR3/Lexical+filters
> makes no sense to me -- the description and the grammer
> example don't match. Of course I have about 24 hours time
> with antlr3 and no antlr 2 experience.

Looks ok to me.

Ter
===========

My problem is I couldn't read the example all the way through, where is "TYPE", it's not defined.
I know it's a trivial case, but it's hard for a beginner. The scanner for TYPE was left out of the 
example.
TYPE WS name=ID '[]'? WS? (';'|'=')

The real issue was why does the parser stop working
with the option filter=true? My target purpose was 
to discard anything that didn't parse in the input
and stop all the error messages. I'd turn off the 
error reports but I don't know how to do that either. Otherwise
the parser seems usable for what I need it for. You refer
to a rapid prototyping mode that I might be able to use
but I couldn't quite figure it out.

The other main problem is I'd like to see all the 
source for the c# runtime. I sent an email to someone
who I think it the author, but no reply. Reflection
is all I have now, and it would be much better to see the
code... all this matters since there's no api doc.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/752c2cba/attachment.html 

From rob.hill at blueyonder.co.uk  Thu Nov 23 13:06:40 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Thu, 23 Nov 2006 21:06:40 -0000
Subject: [antlr-interest] unit tests
Message-ID: <20061123210651.4DC20190A70@www.antlr.org>

Hi all, just want to open up a bit of a discussion, how does everyone else
handle unit testing for a compiler/code generator.
Or if you're using JUnit/NUnit how do test your Antlr output ?

File compares on the output sources? How do you test individual constructs?
Hundred of files( or embedded strings) with each one having a single example
to the construct in question?

Just looking for some good ideas ( or examples :) ) on implementation (I'll
be using JUinit btw)

Cheers all!

/2ob





From ric.klaren at gmail.com  Thu Nov 23 13:44:22 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu, 23 Nov 2006 22:44:22 +0100
Subject: [antlr-interest] unit tests
In-Reply-To: <20061123210651.4DC20190A70@www.antlr.org>
References: <20061123210651.4DC20190A70@www.antlr.org>
Message-ID: <bc607a4e0611231344j4574e8e8v46ee12bd51655bc@mail.gmail.com>

Hi,

On 11/23/06, Robert Hill <rob.hill at blueyonder.co.uk> wrote:
> Hi all, just want to open up a bit of a discussion, how does everyone else
> handle unit testing for a compiler/code generator.

You could have a look at the ANTLR3 unit tests for inspiration.

> Or if you're using JUnit/NUnit how do test your Antlr output ?

If you have a choice you might have a look at TestNG (testng.org). My
impression is that it's more flexible than Junit (wrt to fixtures,
attaching meta information, grouping of tests , running groups of
tests, parameterization of tests, test factories, and more..). Most
testing I do at the moment does not involve testing of grammars
though, and borders more on integration-ish tests. There's also an
eclipse plugin for testNg which works pretty much the same as the
Junit one, and offers the option of retesting only the failed
testcases.

Cheers,

Ric

From rob.hill at blueyonder.co.uk  Thu Nov 23 14:33:44 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Thu, 23 Nov 2006 22:33:44 -0000
Subject: [antlr-interest] unit tests
In-Reply-To: <45661B5A.5030900@informatik.uni-mannheim.de>
Message-ID: <20061123223349.53A2D190AC1@www.antlr.org>

Thanks Matthias / Rick

I was scratching my head a little, wondering how you'd actually test your
output. I ended up with the output file method purely because I can't really
see any other non-intrusive way to test the output. If the tests were
intrusive then I guess removing the tests would by definition require
retesting..lol! My only worry is minor formatting changes would make tests
fail when it doesn't really affect the files correctness. I suppose I could
strip out all the whitespace, hmm I'll have another think about this!

Thanks for the pointers that I'm on the right track :)

I'll check out the antlr tests, and the sun methods too.

Cheers guys!

/2ob


> -----Original Message-----
> From: Matthias Gutheil [mailto:matthias.gutheil at informatik.uni-
> mannheim.de]
> Sent: 23 November 2006 22:06
> To: Robert Hill
> Subject: Re: [antlr-interest] unit tests
> 
> Hi Robert,
> 
> we do it in this way with JUnit and a lot of files.
> Sun provides for Java a LOT of test files and also the results to test
> an implementation of the compiler.
> 
> Cheers
> Matthias
> 
> 
> Robert Hill schrieb:
> > Hi all, just want to open up a bit of a discussion, how does everyone
> else
> > handle unit testing for a compiler/code generator.
> > Or if you're using JUnit/NUnit how do test your Antlr output ?
> >
> > File compares on the output sources? How do you test individual
> constructs?
> > Hundred of files( or embedded strings) with each one having a single
> example
> > to the construct in question?
> >
> > Just looking for some good ideas ( or examples :) ) on implementation
> (I'll
> > be using JUinit btw)
> >
> > Cheers all!
> >
> > /2ob
> >
> >
> >
> >




From tommy.nordgren at chello.se  Thu Nov 23 15:26:27 2006
From: tommy.nordgren at chello.se (Tommy Nordgren)
Date: Fri, 24 Nov 2006 00:26:27 +0100
Subject: [antlr-interest] Suffix of grammar files
Message-ID: <A7AC17CC-DD5F-42B9-B1C2-0DC55EC6412A@chello.se>

Can you use other suffixes for antlr 2.7.7 than the default suffix of  
'.g''? This suffix causes problems,
because of conflict with a tool for conversion between different  
graphics formats.
------------------------------------------------------
"Home is not where you are born, but where your heart finds peace" -
Tommy Nordgren, "The dying old crone"
tommy.nordgren at chello.se



From tommy.nordgren at chello.se  Thu Nov 23 15:56:42 2006
From: tommy.nordgren at chello.se (Tommy Nordgren)
Date: Fri, 24 Nov 2006 00:56:42 +0100
Subject: [antlr-interest] Error in running antlr
Message-ID: <8F28023A-1BB9-48FC-A517-D0D4577BDD45@chello.se>

What causes the following when trying to run antlr 2.7.7?
Exception in thread "main" java.lang.UnsupportedClassVersionError:  
Bad version number in .class file
         at java.lang.ClassLoader.defineClass1(Native Method)
         at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
         at java.security.SecureClassLoader.defineClass 
(SecureClassLoader.java:124)
         at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)
         at java.net.URLClassLoader.access$100(URLClassLoader.java:56)
         at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
         at java.security.AccessController.doPrivileged(Native Method)
         at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
         at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
         at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java: 
268)
         at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
         at java.lang.ClassLoader.loadClassInternal(ClassLoader.java: 
319)
(Compiled with javac, Java version 1.5)
----
Kine dies, Kinfolk dies, and thus at last yourself
This I know that never dies, how a dead mans deeds are deemed. --  
Elder edda
Tommy Nordgren
tommy.nordgren at chello.se




From andrew.monaghan at asktheobvious.com  Thu Nov 23 16:35:04 2006
From: andrew.monaghan at asktheobvious.com (Andrew Monaghan)
Date: Fri, 24 Nov 2006 00:35:04 -0000
Subject: [antlr-interest] Using long literal definitions in ANTLR
Message-ID: <3038C6AA83E9F448B0D7E4183E2C2F6C502A@www.asktheobvious.com>

I'm using an older version of ANTLR 2.7.2 to build a relatively simple
forms parser, but I've come across an issue that has stumped me for a
couple of days now.  I'm no expert on parsers so I'm probably missing
something very obvious - so any help would be gratefully received.  The
issue stems for a set of long, similar literals in the form definition.

 

The grammer has a number of definitions for 'form' style including
"DOULBLE_THIN",  "DOUBLE_THICK",  "DOUBLE" and "DOUBLEUNDER".  To
accommodate the long literal length allowing ANTLR to distinguish
between the literals i've upped k to 11, but I'm still getting
nondeterminism between rules FRAMESTYLETYPE and STYLETYPE.  And when the
parser is run I get an exception in the generated  nextToken() operation
in the lexer.

 

For example, the parser may be parsing a STYLE line and expects one of
the STYLETYPES to follow but due to the order of the rules in the
grammer nextToken() matches the DOUBLE (from DOUBLE_THIN) from the
FRAMESTYLETYPE first and throws an exception.  Changing the rules order
isn't an option because it will throw an exception on the FRAMESTYLE
line instead.

 

I'm sure this is a problem because i've increased k but I'm at a loss at
any alternative strategies.  

 

Cheers,

 

Andy

 

---------------------------------------------------------

Below is a simplified version of the grammer...

 

options

{

language = "CSharp";

}

 

class TestParser extends Parser;

form:             (formbody)+ ;

formbody:         BEGIN formcontent END  ;

formcontent:      (formentry)+ ;

 

formentry :       styleline

                  | framestyleline;

                  

styleline:              STYLE style1:STYLETYPE;


framestyleline:         FRAMESTYLE style:FRAMESTYLETYPE;

            

      

class TestLexer extends Lexer;

options

{

      k = 11;

      charVocabulary = '\3'..'\377';

      charVocabulary = '\u0000'..'\uFFFE';

}

 

 

BEGIN:                  "BEGIN" ;

END:                    "END" ;

STYLE:                  "STYLE" ;

FRAMESTYLE:             "FRAMESTYLE" ;

FRAMESTYLETYPE:         "SINGLE_THIN" | "DOUBLE_THIN" | "SINGLE_THICK" |
"DOUBLE_THICK" | "DOTTED" ;

STYLETYPE:              "NORMAL" | "BOLD" | "ITALIC" | "UNDER" |
"DOUBLEUNDER" | "DOUBLE" | "TRIPLE" | "QUADRUPLE" |

                        "STRIKETHROUGH" | "ROTATE90" | "ROTATE270" |
"UPSIDEDOWN" | "PROPORTIONAL" | "DOUBLEHIGH" |

                        "TRIPLEHIGH" | "QUADRUPLEHIGH" | "CONDENSED" |
"SUPERSCRIPT" | "OVERSCORE" | "LETTERQUALITY" |

                        "NEARLETTERQUALITY" | "DOUBLESTRIKE" | "OPAQUE"
;

 

WS : (' ' | '\t')+  { $setType(Token.SKIP); }

            ;

NEWLINE

    :   '\r' '\n' { newline(); $setType(Token.SKIP);}

    |   '\n' { newline(); $setType(Token.SKIP);}            

    |   '\r' { newline(); $setType(Token.SKIP);}            

     ;

    

------------------------------------------------

 

            public new Token nextToken()              //throws
TokenStreamException

            {

                  ...

                                    default:

                                          if ((LA(1)=='D'||LA(1)=='S')
&& (LA(2)=='I'||LA(2)=='O') && (LA(3)=='N'||LA(3)=='T'||LA(3)=='U') &&
(LA(4)=='B'||LA(4)=='G'||LA(4)=='T') && (LA(5)=='E'||LA(5)=='L') &&
(LA(6)=='D'||LA(6)=='E') && (true) && (true) && (true) && (true) &&
(true))

                                          {

                                                mFRAMESTYLETYPE(true);

                                                theRetToken =
returnToken_;

                                          }

                                          else if
((tokenSet_0_.member(LA(1))) && (tokenSet_1_.member(LA(2))) &&
(tokenSet_2_.member(LA(3))) && (tokenSet_3_.member(LA(4))) && (true) &&
(true) && (true) && (true) && (true) && (true) && (true)) {

                                                mSTYLETYPE(true);

                                                theRetToken =
returnToken_;

                                          }

                                          else if ((LA(1)=='B') &&
(LA(2)=='E') && (LA(3)=='G')) {

                                                mBEGIN(true);

                                                theRetToken =
returnToken_;

                                          }

                                          else if ((LA(1)=='S') &&
(LA(2)=='T') && (LA(3)=='Y')) {

                                                mSTYLE(true);

                                                theRetToken =
returnToken_;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/c0245e6e/attachment-0001.html 

From antlr1 at cyberplasm.com  Thu Nov 23 21:11:38 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Thu, 23 Nov 2006 21:11:38 -0800
Subject: [antlr-interest] 3.0b5: help with parse puzzle
Message-ID: <c7ab2d33b19b4809ae284f0c87bc58c7@cyberplasm.com>

Can you suggest a fix for this?

g file:

grammar s1;
options {
    language = CSharp;
    filter=true;
}
program: string_def+  ;

string_def:  ID '=' (~'\n')+ '\n'     { Console.Out.WriteLine("found string_def"); }   ;

ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*  ;

WS  :   (' '|'\n'|'\r')+ {$channel=HIDDEN;}  ;

Input line, it can contain a '\' followed by a 'n' anywhere. Line is terminated in 0D 0A.

testline = "This is a test line I am working on "with difficulty".\n\nSometimes we meet some troublesome characters.\n\nTime's a wastin'."

Runtime error message:

[string_def]: line 0:-1 mismatched token: [@0,0:0='<no text>',<-1>,0:-1]; expecting type '\n'

Can someone interpret what this line says? I don't know how to read it.

If I turn off filtering, I also get a "no viable alt line" error on every . \ and " in the input.

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061123/82dc3ca5/attachment.html 

From parrt at cs.usfca.edu  Thu Nov 23 21:41:28 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Nov 2006 21:41:28 -0800
Subject: [antlr-interest] 3.0b5: help with parse puzzle
In-Reply-To: <c7ab2d33b19b4809ae284f0c87bc58c7@cyberplasm.com>
References: <c7ab2d33b19b4809ae284f0c87bc58c7@cyberplasm.com>
Message-ID: <79C2AD48-DFE7-48A7-AF3B-DD1FEA2B2905@cs.usfca.edu>

hi. ~'\n' won't do you much good in the parser. ;)

That error is saying it found EOF.

Ter
On Nov 23, 2006, at 9:11 PM, Paul Shaffer wrote:

> Can you suggest a fix for this?
>
> g file:
>
> grammar s1;
> options {
>     language = CSharp;
>     filter=true;
> }
> program: string_def+  ;
>
> string_def:  ID '=' (~'\n')+ '\n'     { Console.Out.WriteLine 
> ("found string_def"); }   ;
>
> ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*  ;
>
> WS  :   (' '|'\n'|'\r')+ {$channel=HIDDEN;}  ;
>
>
> Input line, it can contain a '\' followed by a 'n' anywhere. Line  
> is terminated in 0D 0A.
>
> testline = "This is a test line I am working on "with difficulty".\n 
> \nSometimes we meet some troublesome characters.\n\nTime's a wastin'."
>
>
> Runtime error message:
>
> [string_def]: line 0:-1 mismatched token: [@0,0:0='<no text>',<-1>, 
> 0:-1]; expecting type '\n'
>
> Can someone interpret what this line says? I don't know how to read  
> it.
>
> If I turn off filtering, I also get a "no viable alt line" error on  
> every . \ and " in the input.
>
>
>


From antlr1 at cyberplasm.com  Thu Nov 23 22:39:51 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Thu, 23 Nov 2006 23:39:51 -0700
Subject: [antlr-interest] 3.0b5: help with parse puzzle
In-Reply-To: <79C2AD48-DFE7-48A7-AF3B-DD1FEA2B2905@cs.usfca.edu>
References: <c7ab2d33b19b4809ae284f0c87bc58c7@cyberplasm.com>
	<c7ab2d33b19b4809ae284f0c87bc58c7@cyberplasm.com>
Message-ID: <4.3.2.7.2.20061123232134.031df880@mail.cyberplasm.com>

Ok, thank you. "in the parser" seemed to be a clue -- I am an idiot. This 
works for now:

grammar s1;

options {
         language = CSharp;
         //filter=true;
}

program: string_def*
     ;

string_def: s = LINE
             { Console.Out.WriteLine("string_def: " + s.Text); }
     ;

LINE: ID WS* '=' (~'\n')+ '\n' ;

ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
     ;

WS  :   (' '|'\n'|'\r')+ {$channel=HIDDEN;}
     ;




At 10:41 PM 11/23/2006, you wrote:
>hi. ~'\n' won't do you much good in the parser. ;)
>
>That error is saying it found EOF.
>
>Ter
>On Nov 23, 2006, at 9:11 PM, Paul Shaffer wrote:
>
>>Can you suggest a fix for this?
>>
>>g file:
>>
>>grammar s1;
>>options {
>>     language = CSharp;
>>     filter=true;
>>}
>>program: string_def+  ;
>>
>>string_def:  ID '=' (~'\n')+ '\n'     { Console.Out.WriteLine ("found 
>>string_def"); }   ;
>>
>>ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*  ;
>>
>>WS  :   (' '|'\n'|'\r')+ {$channel=HIDDEN;}  ;
>>
>>
>>Input line, it can contain a '\' followed by a 'n' anywhere. Line
>>is terminated in 0D 0A.
>>
>>testline = "This is a test line I am working on "with difficulty".\n 
>>\nSometimes we meet some troublesome characters.\n\nTime's a wastin'."
>>
>>
>>Runtime error message:
>>
>>[string_def]: line 0:-1 mismatched token: [@0,0:0='<no text>',<-1>, 
>>0:-1]; expecting type '\n'
>>
>>Can someone interpret what this line says? I don't know how to read
>>it.
>>
>>If I turn off filtering, I also get a "no viable alt line" error on
>>every . \ and " in the input.


From e.papegaaij at student.utwente.nl  Fri Nov 24 00:05:31 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Fri, 24 Nov 2006 09:05:31 +0100
Subject: [antlr-interest] unit tests
In-Reply-To: <20061123223349.53A2D190AC1@www.antlr.org>
References: <20061123223349.53A2D190AC1@www.antlr.org>
Message-ID: <200611240905.31635.e.papegaaij@student.utwente.nl>

On Thursday 23 November 2006 23:33, Robert Hill wrote:
<cut HOWTO test parser generator output>
> I was scratching my head a little, wondering how you'd actually test your
> output. I ended up with the output file method purely because I can't
> really see any other non-intrusive way to test the output. If the tests
> were intrusive then I guess removing the tests would by definition require
> retesting..lol! My only worry is minor formatting changes would make tests
> fail when it doesn't really affect the files correctness. I suppose I could
> strip out all the whitespace, hmm I'll have another think about this!
>
> Thanks for the pointers that I'm on the right track :)
>
> I'll check out the antlr tests, and the sun methods too.

Do you really want to test the output of ANTLR? What exactly do you want to 
test? In my opinion, you should specify your grammar in EBNF and create your 
parser directly from this EBNF specification. The only thing you have to 
test, is whether your parser specification matches your grammar 
specification. But as ANTLR supports EBNF grammars, this proof is almost 
trivial. Whatever you do, try not to test ANTLR itself. There is no point in 
testing whether ANTLR generates the correct code for a parser specification. 
This is the job of the ANTLR test cases. If you go down this road, where does 
it end? Do you need to test whether the JVM really gives 2 for 1+1?

Ofcourse, it can help to have several correct inputs, to test if your grammar 
really accepts the language you intended. I've never found incorrect inputs 
to be very useful. Normally you'd want to use a cornercase as incorrect 
input. But what is a cornercase for a grammar? Failing tests usually end up 
testing the parser generator, not your grammar.

There is an exception to this: non-trivial semantic predicates. In my opinion 
these need both passing and failing tests.

Comparing the output of ANTLR to a copy of that file is not a very good test. 
How do you know that the output, you compare against, is correct? Does a 
change in the file really indicate a problem, or just another way to solve 
the same problem? To test a generated grammar, simply run it with a sample 
input and check the output. The output of a parser depends on how you use the 
parser. It can be an AST (you can check those by using toStringTree()), a 
simple pass or fail or something else.

Best regards,
Emond


From ric.klaren at gmail.com  Fri Nov 24 00:45:51 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri, 24 Nov 2006 09:45:51 +0100
Subject: [antlr-interest] Error in running antlr
In-Reply-To: <8F28023A-1BB9-48FC-A517-D0D4577BDD45@chello.se>
References: <8F28023A-1BB9-48FC-A517-D0D4577BDD45@chello.se>
Message-ID: <bc607a4e0611240045t102949c8n555bb71b71a91b8d@mail.gmail.com>

Hi,

On 11/24/06, Tommy Nordgren <tommy.nordgren at chello.se> wrote:
> What causes the following when trying to run antlr 2.7.7?

I would guess that you're trying to run the java 1.5 compiled classes
with a java 1.4 or lower jre.

Cheers,

Ric

From jsantander at lucent.com  Fri Nov 24 02:12:18 2006
From: jsantander at lucent.com (Julian Santander)
Date: Fri, 24 Nov 2006 11:12:18 +0100
Subject: [antlr-interest] Matching ellipsis
Message-ID: <4566C582.7010109@lucent.com>

Folks,

    I'd be very grateful if someone could provide me some guidance on a 
problem I'm having. This is actually my first attempt at a parser using 
ANTLR. I'm using ANTLR beta 5 with Java generation (on a Windows XP 
machine and Java 1.5 if that matters).

    At the lexical level I need to match tokens like '.' (dot) '..'  
(ellipsis), integers and floating point numbers. (Actually I don't need 
sign nor exponential formats)....

    So far one of my many attempts has been:

T_INTEGER_LITERAL: DIGIT+;

DOT:
	('.' (('.')=>{false}? |  ))=> '.'
	;
// This one is copied from http://www.antlr.org/blog/antlr3/lookahead.tml May 2006 post.

T_ELLIPSIS:
	'.' '.'+
	;

T_FLOAT_LITERAL:
  	DIGIT+ DOT DIGIT*
	| DOT DIGIT+
  ;

But so far I'm unable to parse "1..2" into T_INTEGER_LITERAL, 
T_ELLIPSIS, T_INTEGER_LITERAL.

for example: "... .. 1..2 3...4 5.0 .6 7." renders:

TOKEN: T_ELLIPSIS[@-1,0:2='...',<180>,1:0]
TOKEN: WS[@-1,3:3=' ',<168>,channel=99,1:3]
TOKEN: T_ELLIPSIS[@-1,4:5='..',<180>,1:4]
TOKEN: WS[@-1,6:6=' ',<168>,channel=99,1:6]
*TOKEN: T_FLOAT_LITERAL[@-1,7:8='1.',<181>,1:7]
TOKEN: T_FLOAT_LITERAL[@-1,9:10='.2',<181>,1:9]*
TOKEN: WS[@-1,11:11=' ',<168>,channel=99,1:11]
*TOKEN: T_FLOAT_LITERAL[@-1,12:13='3.',<181>,1:12]*
TOKEN: T_ELLIPSIS[@-1,14:15='..',<180>,1:14]
TOKEN: T_INTEGER_LITERAL[@-1,16:16='4',<175>,1:16]
TOKEN: WS[@-1,17:17=' ',<168>,channel=99,1:17]
TOKEN: T_FLOAT_LITERAL[@-1,18:20='5.0',<181>,1:18]
TOKEN: WS[@-1,21:21=' ',<168>,channel=99,1:21]
TOKEN: T_FLOAT_LITERAL[@-1,22:23='.6',<181>,1:22]
TOKEN: WS[@-1,24:24=' ',<168>,channel=99,1:24]
TOKEN: T_FLOAT_LITERAL[@-1,25:26='7.',<181>,1:25]
TOKEN: WS[@-1,27:27='\n',<168>,channel=99,1:27]

I've tried other things (I've seen a post on emitting multiple tokens 
for the same rule, but was apparently not yet supported in v3, I've seen 
also the pascal examples for v2, but somehow I couldn't get them to work??)

Thanks very much in advance and best regards

    Julian




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/f15a6603/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 10760 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/f15a6603/attachment-0001.bin 

From open.zone at virgin.net  Fri Nov 24 03:28:08 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 24 Nov 2006 11:28:08 -0000
Subject: [antlr-interest] Antlr 3 c# source?
In-Reply-To: <53f51a64a52e4617be0682c2985c1cff@cyberplasm.com>
Message-ID: <012701c70fbb$a16880f0$c704a8c0@hercules>

Hi Paul,
 
antlr.runtime.dll is part of ANTLR 2.7.x. Grab ANTLR 2.7.x to get the
sources.
 
StringTemplate.dll is part of StringTemplate for .NET (ST#) 2.3.x or later.
Grab ST# to get the sources.
 
Supplying [useful] API docs is a work in progress for Antlr3.Runtime.dll.
 
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Paul Shaffer
Sent: 22 November 2006 00:33
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr 3 c# source?


The c# classes have changed from earlier versions. I have to sort of 
reverse engineer this thing as I go along, and use the java docs as a guide.
Probably a stupid question but where is the source code for
 
antlr-3.0b5\lib\csharp\bin\net-1.1\antlr.runtime.dll,
Antlr3.Runtime.dll, and StringTemplate.dll?









-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/001fc6b8/attachment.html 

From ssiegel at finjan.com  Fri Nov 24 03:37:48 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Fri, 24 Nov 2006 13:37:48 +0200
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4CEE8070@exmail1.finjan.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4CEE82C1@exmail1.finjan.com>

"greedy=false" works great if I want to include the terminating
characters in the token. But if I merely want to stop the catchall prior
to some tokens, I really need a predicate. 
As I stated in my previous post, the cpp_parser grammar uses 
	{ input.LA(2)!='/' }? '*'
The java1.5 sample uses the same method to terminate the multi-line
comment.

I still think that this is a bug.

From open.zone at virgin.net  Fri Nov 24 03:51:13 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 24 Nov 2006 11:51:13 -0000
Subject: [antlr-interest] v3 c# code gen: filter=true problem
In-Reply-To: <c58ab143a5ae4eb1b4b52400ae26add3@cyberplasm.com>
Message-ID: <012c01c70fbe$d85c77d0$c704a8c0@hercules>

Hi,
 
Don't think filtering mode is implemented for parsers in v3 [yet?].
 
For lexers, the FuzzyJava filtering example works fine.
 
What does your grammar look like?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Paul Shaffer
Sent: 23 November 2006 14:59
To: antlr-interest at antlr.org
Subject: [antlr-interest] v3 c# code gen: filter=true problem


For v3 c# code generation I get no parser rule matches if filter=true.

I have no idea what's wrong. If I don't set the filter option the parser
works more or less as expected.

By the way this page
http://www.antlr.org/wiki/display/ANTLR3/Lexical+filters
makes no sense to me -- the description and the grammer
example don't match. Of course I have about 24 hours time
with antlr3 and no antlr 2 experience.




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/a5f2c44f/attachment.html 

From open.zone at virgin.net  Fri Nov 24 04:45:23 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 24 Nov 2006 12:45:23 -0000
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4CEE82C1@exmail1.finjan.com>
Message-ID: <013a01c70fc6$69bdb4d0$c704a8c0@hercules>

Hi,

> "greedy=false" works great if I want to include the 
> terminating characters in the token. But if I merely want to 
> stop the catchall prior to some tokens, I really need a predicate. 
> As I stated in my previous post, the cpp_parser grammar uses 
> 	{ input.LA(2)!='/' }? '*'
> The java1.5 sample uses the same method to terminate the 
> multi-line comment.
> 
> I still think that this is a bug.

You're talking about V2 grammars right?


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From ssiegel at finjan.com  Fri Nov 24 05:23:01 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Fri, 24 Nov 2006 15:23:01 +0200
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
In-Reply-To: <013a01c70fc6$69bdb4d0$c704a8c0@hercules>
Message-ID: <E344C433F006AB45A306D422F9C3EB4CEE82F2@exmail1.finjan.com>

Right, the sources where I found those lines are antlr 2 grammars. My
question is how do I do the same thing in antlr3 for situations where
greedy=false doesn't suffice. Antlr3 generates unusable code for the
same constructs.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
Sent: Friday, November 24, 2006 2:45 PM
To: 'ANTLR Interest'
Subject: Re: [antlr-interest] ANTLR 3.0b5 problem with predicates

Hi,

> "greedy=false" works great if I want to include the 
> terminating characters in the token. But if I merely want to 
> stop the catchall prior to some tokens, I really need a predicate. 
> As I stated in my previous post, the cpp_parser grammar uses 
> 	{ input.LA(2)!='/' }? '*'
> The java1.5 sample uses the same method to terminate the 
> multi-line comment.
> 
> I still think that this is a bug.

You're talking about V2 grammars right?


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very
limited.


From kroepke at classdump.org  Fri Nov 24 05:35:17 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 24 Nov 2006 14:35:17 +0100
Subject: [antlr-interest] v3 c# code gen: filter=true problem
In-Reply-To: <012c01c70fbe$d85c77d0$c704a8c0@hercules>
References: <012c01c70fbe$d85c77d0$c704a8c0@hercules>
Message-ID: <EF123C67-8A39-45DC-9A21-BF40E8594626@classdump.org>


On 24. Nov 2006, at 12:51 , Micheal J wrote:

> Don't think filtering mode is implemented for parsers in v3 [yet?].

Yes, that's correct, on both accounts ;)

-k
-- 
Kay R?pke
http://classdump.org/





From open.zone at virgin.net  Fri Nov 24 07:27:06 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 24 Nov 2006 15:27:06 -0000
Subject: [antlr-interest] Using long literal definitions in ANTLR
In-Reply-To: <3038C6AA83E9F448B0D7E4183E2C2F6C502A@www.asktheobvious.com>
Message-ID: <014b01c70fdd$01ea4d70$c704a8c0@hercules>

Hi,
 
Any reason why you're still using ANTLR 2.7.2?. I'd recommend V3 for what
you're doing (or at least ANTLR 2.7.6+ if you must use ANTLR 2.7.x).
 
You could try something like (check for typos/syntax)
 
class TestLexer extends...
 
options {...}
 
tokens {
   BEGIN,
   END,
    ....
   FRAMESTYLE,
   STYLE
}
 
FORMS_LITERALS
    : "BEGIN"              { $setType(BEGIN); } 
    | "END"                  { $setType(END); }
    .......
    | "FRAMESTYLE"   { $setType(FRAMESTYLE); }
    | "STYLE"              { $setType(STYLE); }
    ;
 
 
Micheal
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andrew Monaghan
Sent: 24 November 2006 00:35
To: antlr-interest at antlr.org
Subject: [antlr-interest] Using long literal definitions in ANTLR



I'm using an older version of ANTLR 2.7.2 to build a relatively simple forms
parser, but I've come across an issue that has stumped me for a couple of
days now.  I'm no expert on parsers so I'm probably missing something very
obvious - so any help would be gratefully received.  The issue stems for a
set of long, similar literals in the form definition.

 

The grammer has a number of definitions for 'form' style including
"DOULBLE_THIN",  "DOUBLE_THICK",  "DOUBLE" and "DOUBLEUNDER".  To
accommodate the long literal length allowing ANTLR to distinguish between
the literals i've upped k to 11, but I'm still getting nondeterminism
between rules FRAMESTYLETYPE and STYLETYPE.  And when the parser is run I
get an exception in the generated  nextToken() operation in the lexer.

 

For example, the parser may be parsing a STYLE line and expects one of the
STYLETYPES to follow but due to the order of the rules in the grammer
nextToken() matches the DOUBLE (from DOUBLE_THIN) from the FRAMESTYLETYPE
first and throws an exception.  Changing the rules order isn't an option
because it will throw an exception on the FRAMESTYLE line instead.

 

I'm sure this is a problem because i've increased k but I'm at a loss at any
alternative strategies.  

 

Cheers,

 

Andy

 

---------------------------------------------------------

Below is a simplified version of the grammer...

 

options

{

language = "CSharp";

}

 

class TestParser extends Parser;

form:             (formbody)+ ;

formbody:         BEGIN formcontent END  ;

formcontent:      (formentry)+ ;

 

formentry :       styleline

                  | framestyleline;

                  

styleline:              STYLE style1:STYLETYPE;


framestyleline:         FRAMESTYLE style:FRAMESTYLETYPE;

            

      

class TestLexer extends Lexer;

options

{

      k = 11;

      charVocabulary = '\3'..'\377';

      charVocabulary = '\u0000'..'\uFFFE';

}

 

 

BEGIN:                  "BEGIN" ;

END:                    "END" ;

STYLE:                  "STYLE" ;

FRAMESTYLE:             "FRAMESTYLE" ;

FRAMESTYLETYPE:         "SINGLE_THIN" | "DOUBLE_THIN" | "SINGLE_THICK" |
"DOUBLE_THICK" | "DOTTED" ;

STYLETYPE:              "NORMAL" | "BOLD" | "ITALIC" | "UNDER" |
"DOUBLEUNDER" | "DOUBLE" | "TRIPLE" | "QUADRUPLE" |

                        "STRIKETHROUGH" | "ROTATE90" | "ROTATE270" |
"UPSIDEDOWN" | "PROPORTIONAL" | "DOUBLEHIGH" |

                        "TRIPLEHIGH" | "QUADRUPLEHIGH" | "CONDENSED" |
"SUPERSCRIPT" | "OVERSCORE" | "LETTERQUALITY" |

                        "NEARLETTERQUALITY" | "DOUBLESTRIKE" | "OPAQUE" ;

 

WS : (' ' | '\t')+  { $setType(Token.SKIP); }

            ;

NEWLINE

    :   '\r' '\n' { newline(); $setType(Token.SKIP);}

    |   '\n' { newline(); $setType(Token.SKIP);}            

    |   '\r' { newline(); $setType(Token.SKIP);}            

     ;

    

------------------------------------------------

 

            public new Token nextToken()              //throws
TokenStreamException

            {

                  ...

                                    default:

                                          if ((LA(1)=='D'||LA(1)=='S') &&
(LA(2)=='I'||LA(2)=='O') && (LA(3)=='N'||LA(3)=='T'||LA(3)=='U') &&
(LA(4)=='B'||LA(4)=='G'||LA(4)=='T') && (LA(5)=='E'||LA(5)=='L') &&
(LA(6)=='D'||LA(6)=='E') && (true) && (true) && (true) && (true) && (true))

                                          {

                                                mFRAMESTYLETYPE(true);

                                                theRetToken = returnToken_;

                                          }

                                          else if
((tokenSet_0_.member(LA(1))) && (tokenSet_1_.member(LA(2))) &&
(tokenSet_2_.member(LA(3))) && (tokenSet_3_.member(LA(4))) && (true) &&
(true) && (true) && (true) && (true) && (true) && (true)) {

                                                mSTYLETYPE(true);

                                                theRetToken = returnToken_;

                                          }

                                          else if ((LA(1)=='B') &&
(LA(2)=='E') && (LA(3)=='G')) {

                                                mBEGIN(true);

                                                theRetToken = returnToken_;

                                          }

                                          else if ((LA(1)=='S') &&
(LA(2)=='T') && (LA(3)=='Y')) {

                                                mSTYLE(true);

                                                theRetToken = returnToken_;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/14275e15/attachment-0001.html 

From rschulz at sonic.net  Fri Nov 24 08:21:59 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 24 Nov 2006 08:21:59 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
Message-ID: <200611240822.00404.rschulz@sonic.net>

Hi,

I would like to integrate comments into the stream of top-level 
constructs recognized by my ANTLR (v3) grammar.

Specifically, I'd like to treat comments in the input something like 
JavaDoc comments in that I accumulate them (merge their contents in a 
single StringBuilder instance) as they appear and then when the parser 
encounters a top-level construct (the analogy would be a method or 
field definition in Java source code) associate the accumulated 
comment, if any, with that construct.

I've had partial success, but there's one problem: It appears all the 
comments are processed before any of the parsing happens. Thus the 
comments don't properly interleave with the non-comment content and 
don't get associated with the proper constructs. Instead, they all 
appear at the beginning, merged into a single comment block.

How can I get the kind of behavior I want? Namely that comment action 
code is processed in sequence with the parsing process?


Thanks.

Randall Schulz

From dave at badgers-in-foil.co.uk  Fri Nov 24 08:39:02 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 24 Nov 2006 16:39:02 +0000
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <200611240822.00404.rschulz@sonic.net>
References: <200611240822.00404.rschulz@sonic.net>
Message-ID: <20061124163901.GD11697@badgers-in-foil.co.uk>

On Fri, Nov 24, 2006 at 08:21:59AM -0800, Randall R Schulz wrote:
> How can I get the kind of behavior I want? Namely that comment action 
> code is processed in sequence with the parsing process?

I've tackled this by just build a linked list of all tokens:

http://maven.badgers-in-foil.co.uk/sites/metaas/xref/uk/co/badgersinfoil/metaas/impl/antlr/LinkedListTokenSource.html

Then I can walk back from the node-of-interest looking for doc-comments
and the like.


ta,
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Fri Nov 24 10:45:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 10:45:12 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <200611240822.00404.rschulz@sonic.net>
References: <200611240822.00404.rschulz@sonic.net>
Message-ID: <A2D30F4E-8B00-4701-80CD-FC1557EB9C0D@cs.usfca.edu>

Hi. You are probably trying to execute code with in the lexer, but  
you should really simply matched lexical items in the lexer and leave  
processing to the parser.  Place comments on a hidden token channel  
so that the parser does not see them in terms of parsing, but actions  
can still access the comments.  All non-skipped tokens are sent to  
the parser in the token stream and just by looking backwards and  
forwards in the token stream you can see all of the hidden channel  
tokens. For example, at the start of the method, look one token to  
the left of the first token of the method definition and you will  
find out if there is a comment there. :)

CommonTokenStream is your friend. :)

Ter
On Nov 24, 2006, at 8:21 AM, Randall R Schulz wrote:

> Hi,
>
> I would like to integrate comments into the stream of top-level
> constructs recognized by my ANTLR (v3) grammar.
>
> Specifically, I'd like to treat comments in the input something like
> JavaDoc comments in that I accumulate them (merge their contents in a
> single StringBuilder instance) as they appear and then when the parser
> encounters a top-level construct (the analogy would be a method or
> field definition in Java source code) associate the accumulated
> comment, if any, with that construct.
>
> I've had partial success, but there's one problem: It appears all the
> comments are processed before any of the parsing happens. Thus the
> comments don't properly interleave with the non-comment content and
> don't get associated with the proper constructs. Instead, they all
> appear at the beginning, merged into a single comment block.
>
> How can I get the kind of behavior I want? Namely that comment action
> code is processed in sequence with the parsing process?
>
>
> Thanks.
>
> Randall Schulz


From open.zone at virgin.net  Fri Nov 24 11:15:53 2006
From: open.zone at virgin.net (Micheal J)
Date: Fri, 24 Nov 2006 19:15:53 -0000
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <A2D30F4E-8B00-4701-80CD-FC1557EB9C0D@cs.usfca.edu>
Message-ID: <015501c70ffc$f986e150$c704a8c0@hercules>

Hi,

> Place comments on a hidden token channel  
> so that the parser does not see them in terms of parsing, but 
> actions  
> can still access the comments.  All non-skipped tokens are sent to  
> the parser in the token stream and just by looking backwards and  
> forwards in the token stream you can see all of the hidden channel  
> tokens.

How to really drop a token (i.e. not just hide using channel no.)?

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From rschulz at sonic.net  Fri Nov 24 11:30:31 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 24 Nov 2006 11:30:31 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <A2D30F4E-8B00-4701-80CD-FC1557EB9C0D@cs.usfca.edu>
References: <200611240822.00404.rschulz@sonic.net>
	<A2D30F4E-8B00-4701-80CD-FC1557EB9C0D@cs.usfca.edu>
Message-ID: <200611241130.31364.rschulz@sonic.net>

Terence,

On Friday 24 November 2006 10:45, Terence Parr wrote:
> Hi. You are probably trying to execute code with in the lexer, but
> you should really simply matched lexical items in the lexer and leave
> processing to the parser. Place comments on a hidden token channel 
> so that the parser does not see them in terms of parsing,

Naturally, that's what I do.


> but actions 
> can still access the comments.

How? The Wiki page 
<http://www.antlr.org/wiki/pages/viewpage.action?pageId=1057> alludes 
to doing this, but lack specifics on how to code such actions.


> All non-skipped tokens are sent to 
> the parser in the token stream and just by looking backwards and
> forwards in the token stream you can see all of the hidden channel
> tokens. For example, at the start of the method, look one token to
> the left of the first token of the method definition and you will
> find out if there is a comment there. :)

How do I get at the tokens? How do I navigate the token stream? I notice 
that TokenStream.LB(int) is protected, so I cannot even call it from 
parse action code.

I also notice that rules that return a single value (which is all but 
two of the rules in my grammar) don't trigger the generation of return 
types that descend from ParserRuleReturnScope. In those cases, how do I 
get at the start and stop tokens?


> CommonTokenStream is your friend. :)
>
> Ter


Randall Schulz

From parrt at cs.usfca.edu  Fri Nov 24 11:37:16 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 11:37:16 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <015501c70ffc$f986e150$c704a8c0@hercules>
References: <015501c70ffc$f986e150$c704a8c0@hercules>
Message-ID: <A10BC9CE-5778-4B9F-A8B8-4C2315937A65@cs.usfca.edu>


On Nov 24, 2006, at 11:15 AM, Micheal J wrote:
> How to really drop a token (i.e. not just hide using channel no.)?

FOO : 'foo' {skip();} ;

Ter


From parrt at cs.usfca.edu  Fri Nov 24 11:40:00 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 11:40:00 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <200611241130.31364.rschulz@sonic.net>
References: <200611240822.00404.rschulz@sonic.net>
	<A2D30F4E-8B00-4701-80CD-FC1557EB9C0D@cs.usfca.edu>
	<200611241130.31364.rschulz@sonic.net>
Message-ID: <426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>


On Nov 24, 2006, at 11:30 AM, Randall R Schulz wrote:
> How do I get at the tokens? How do I navigate the token stream? I  
> notice
> that TokenStream.LB(int) is protected, so I cannot even call it from
> parse action code.

Didn't this method leap out at you?

	/** Return absolute token i; ignore which channel the tokens are on;
	 *  that is, count all tokens not just on-channel tokens.
	 */
	public Token get(int i) {
		return (Token)tokens.get(i);
	}

Looking at the generated code and looking at the source code for the  
run time is very important.

> I also notice that rules that return a single value (which is all but
> two of the rules in my grammar) don't trigger the generation of return
> types that descend from ParserRuleReturnScope. In those cases, how  
> do I
> get at the start and stop tokens?

Ask and ye shall receive. ANTLR senses it and turns on multiple  
return values to return start and stop for you.  Just try it and see  
what happens. that is the name of the game.

Ter


From qwertie256 at gmail.com  Fri Nov 24 11:42:51 2006
From: qwertie256 at gmail.com (David Piepgrass)
Date: Fri, 24 Nov 2006 12:42:51 -0700
Subject: [antlr-interest] Ignoring syntax errors
Message-ID: <ce40b1470611241142l3f4d7bcahacce6298c37ae335@mail.gmail.com>

>
> > INVALID_CHARACTER: '\u0001'..'\uFFFE';
> >
> Isn't the range of INVALID_CHARACTER to big? Isn't it almost all UTF-8
> characters? Afaik ASCII ranges from '\u0000' to '\u007F'. When
> INVALID_CHARACTER and the alphabet of your tokens overlap that should be
> a reason for indeterminism.


That's right, I include the entire character set because there are some
ASCII characters that are, in fact, invalid in my grammar. I don't think I
should have to explicitly spell out every invalid ASCII character (what if I
forget one?) By making INVALID_CHARACTER the last rule, it catches all
invalid characters (but no valid characters).

Anyway, I have a solution. I found out that when an invalid character is
encountered, the Lexer throws an exception that the parser does not catch,
so I just have to catch it outside the parser.

Hello David,
>
when your input is not syntactically correct to your grammar, you will
> get a RecognitionException thrown by your Parser anyway, why not using
> this mechanism? In case you find semantic errors you just throw an own
> SemanticException.


This is just FYI because I no longer need help.

The challenge is that semantic errors are detected in parallel with parsing;
for example an "unknown symbol" error might occur when the first token is
examined, and this halts parsing because the AST is more-or-less designed in
such a way that it cannot be semantically invalid, so parsing could not
continue unless I added extra code everywhere to handle a special "error"
state. Unfortunately if parsing is halted, the parser might never discover
that there is a syntax error. That is why I pre-recognise it:

>> real_starting_rule returns[AST u=null]:
>>     (    (starting_rule)=> u=starting_rule
>>     |   (.)*
>>     );
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/612bc998/attachment.html 

From rschulz at sonic.net  Fri Nov 24 11:44:19 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 24 Nov 2006 11:44:19 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>
References: <200611240822.00404.rschulz@sonic.net>
	<200611241130.31364.rschulz@sonic.net>
	<426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>
Message-ID: <200611241144.19666.rschulz@sonic.net>

Terence,

On Friday 24 November 2006 11:40, Terence Parr wrote:
> On Nov 24, 2006, at 11:30 AM, Randall R Schulz wrote:
> > How do I get at the tokens? How do I navigate the token stream? I
> > notice
> > that TokenStream.LB(int) is protected, so I cannot even call it
> > from parse action code.
>
> Didn't this method leap out at you?
>
> 	/** Return absolute token i; ignore which channel the tokens are on;
> 	 *  that is, count all tokens not just on-channel tokens.
> 	 */
> 	public Token get(int i) {
> 		return (Token)tokens.get(i);
> 	}

What "i" values do I use? The comment doesn't specify how that parameter 
is interpreted.


> Looking at the generated code and looking at the source code for the
> run time is very important.

May I respectfully disagree? I should not have to understand a tool's 
internals to use it, should I?


> > I also notice that rules that return a single value (which is all
> > but two of the rules in my grammar) don't trigger the generation of
> > return types that descend from ParserRuleReturnScope. In those
> > cases, how do I
> > get at the start and stop tokens?
>
> Ask and ye shall receive. ANTLR senses it and turns on multiple
> return values to return start and stop for you.  Just try it and see
> what happens. that is the name of the game.

Trial and error makes for very slow going, which is how it's been for 
me.

Are you sure you won't share some documentation?


> Ter


Randall Schulz

From rschulz at sonic.net  Fri Nov 24 11:57:53 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 24 Nov 2006 11:57:53 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>
References: <200611240822.00404.rschulz@sonic.net>
	<200611241130.31364.rschulz@sonic.net>
	<426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>
Message-ID: <200611241157.53502.rschulz@sonic.net>

Hi,

Here are the top-level rules for which I'd like to record intervening comments:

fofAnnotated
    :   'fof'
        '('
                name
            ',' formulaRole
            ',' firstOrderFormula
          ( ',' annotations ) ?
        ')'
        Period
        {
            acceptFOF($firstOrderFormula.fof, $name.n, $formulaRole.role);
        }
    ;


cnfAnnotated
    :   'cnf'
        '('
                name
            ',' formulaRole
            ',' clausalFormula
          ( ',' annotations ) ?
        ')'
        Period
        {
            acceptCNF($clausalFormula.cf, $name.n, $formulaRole.role);
        }
    ;


How would I modify them to get at the 'fof' or 'cnf' keyword token so I
can work backward and find any interstitial comments?


Thanks.

Randall Schulz

From parrt at cs.usfca.edu  Fri Nov 24 12:05:55 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 12:05:55 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <200611241144.19666.rschulz@sonic.net>
References: <200611240822.00404.rschulz@sonic.net>
	<200611241130.31364.rschulz@sonic.net>
	<426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>
	<200611241144.19666.rschulz@sonic.net>
Message-ID: <50D20116-C265-4652-9716-159F82C44C56@cs.usfca.edu>


On Nov 24, 2006, at 11:44 AM, Randall R Schulz wrote:
> What "i" values do I use? The comment doesn't specify how that  
> parameter
> is interpreted.

Token index.  See myToken.getTokenIndex().

>> Looking at the generated code and looking at the source code for the
>> run time is very important.
>
> May I respectfully disagree? I should not have to understand a tool's
> internals to use it, should I?

Yes, when you have no documentation and you are trying to use a  
library.  Further, you can substitute knowledge of grammars with  
knowledge of Java code by looking at grammar to Java code  
translation. This will always be of help to you.

>>> I also notice that rules that return a single value (which is all
>>> but two of the rules in my grammar) don't trigger the generation of
>>> return types that descend from ParserRuleReturnScope. In those
>>> cases, how do I
>>> get at the start and stop tokens?
>>
>> Ask and ye shall receive. ANTLR senses it and turns on multiple
>> return values to return start and stop for you.  Just try it and see
>> what happens. that is the name of the game.
>
> Trial and error makes for very slow going, which is how it's been for
> me.

I feel that only people with experience should use the beta because  
there is no documentation. You must rely on experience and looking at  
source code.

> Are you sure you won't share some documentation?

You will see a beta book up in a couple of weeks at the pragmatic  
programmer's website. :)

Ter

From parrt at cs.usfca.edu  Fri Nov 24 12:07:41 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 12:07:41 -0800
Subject: [antlr-interest] Comments / White-Space and All The Rest
In-Reply-To: <200611241157.53502.rschulz@sonic.net>
References: <200611240822.00404.rschulz@sonic.net>
	<200611241130.31364.rschulz@sonic.net>
	<426F173C-7093-4040-A836-DA6D219E4570@cs.usfca.edu>
	<200611241157.53502.rschulz@sonic.net>
Message-ID: <3B7A3F95-25B3-4D0F-B7D6-6E35A58BFEEF@cs.usfca.edu>


forAnnotated
	:	f='fof' ...
		{if ( input.get($f.index-1).getType()==DOC_COMMENT ) {...} }
		...
	;

  In reality you would need a for loop to look backwards so that it  
avoided whitespace, unless of course you use skip on those tokens in  
the lexer.

Ter

On Nov 24, 2006, at 11:57 AM, Randall R Schulz wrote:

> Hi,
>
> Here are the top-level rules for which I'd like to record  
> intervening comments:
>
> fofAnnotated
>     :   'fof'
>         '('
>                 name
>             ',' formulaRole
>             ',' firstOrderFormula
>           ( ',' annotations ) ?
>         ')'
>         Period
>         {
>             acceptFOF($firstOrderFormula.fof, $name.n,  
> $formulaRole.role);
>         }
>     ;
>
>
> cnfAnnotated
>     :   'cnf'
>         '('
>                 name
>             ',' formulaRole
>             ',' clausalFormula
>           ( ',' annotations ) ?
>         ')'
>         Period
>         {
>             acceptCNF($clausalFormula.cf, $name.n, $formulaRole.role);
>         }
>     ;
>
>
> How would I modify them to get at the 'fof' or 'cnf' keyword token  
> so I
> can work backward and find any interstitial comments?
>
>
> Thanks.
>
> Randall Schulz


From antlr1 at cyberplasm.com  Fri Nov 24 12:49:57 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 13:49:57 -0700
Subject: [antlr-interest] Antlr 3 c# source?
In-Reply-To: <012701c70fbb$a16880f0$c704a8c0@hercules>
References: <53f51a64a52e4617be0682c2985c1cff@cyberplasm.com>
Message-ID: <4.3.2.7.2.20061124133008.031e71d0@mail.cyberplasm.com>

At 04:28 AM 11/24/2006, Micheal J wrote:
>
>antlr.runtime.dll is part of ANTLR 2.7.x. Grab ANTLR 2.7.x to get the sources.
>
>StringTemplate.dll is part of StringTemplate for .NET (ST#) 2.3.x or 
>later. Grab ST# to get the sources.

I found StringTemplate right after I posted...

>
>Supplying [useful] API docs is a work in progress for Antlr3.Runtime.dll.

For the 2.7.x c# project, many java source comments were carried over 
intact to the c# files. Only some of the comments are in the "///" format. 
This is where a non top-level expert could assist the project -- fixing the 
comments. Then you could run nDOc against it all and get a better api doc. 
This would also help intellisense tremendously if you are using visual 
studio -- you don't need as much formal documentation if this is done well. 
For the Antlr3.Runtime.dll, I see where the cooresponding java files are, 
so this is some help-- but there are never enough comments.




From Pierre-Etienne.Moreau at loria.fr  Fri Nov 24 13:10:36 2006
From: Pierre-Etienne.Moreau at loria.fr (Pierre-Etienne Moreau)
Date: Fri, 24 Nov 2006 22:10:36 +0100
Subject: [antlr-interest] Translation and pattern matching....
In-Reply-To: <db9360ca0611230150u4e7fe33bj485d3f0426a1c4a7@mail.gmail.com>
References: <db9360ca0611230150u4e7fe33bj485d3f0426a1c4a7@mail.gmail.com>
Message-ID: <20061124211036.GD571@wifi-65-134.loria.fr>

Dear Mathieu,

> One colleague of mine has just pointed me to TOM : http://tom.loria.fr
> which may be of some interest to those of you who want to transform
> antlr trees with pattern matching rules.

you are completely right. Thanks for the advertisement :-)

Tom provides an efficient implementation of AST as well as pattern
matching. 
Attached to this mail you can find 2 examples of tom-antlr v2 usage:
- in the first one, the AST (in Tom representation) is built by the
  parser, such that the AST can be directly matched, traversed, or
  transformed

- in the second example, we use the AST facilities offered by ANTLR. The
  transformation into a Tom AST is done in a second step.

We plan to use the rewrite rule facilities offered by ANTLR v3 to
directly build a Tom AST. Please, contact us if you are interested.

  cheers,
  Pierre-Etienne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: example-tom-antlr.tgz
Type: application/x-tar-gz
Size: 2864 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/fc0a1ba6/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 186 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061124/fc0a1ba6/attachment-0001.bin 

From parrt at cs.usfca.edu  Fri Nov 24 13:16:13 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 13:16:13 -0800
Subject: [antlr-interest] Translation and pattern matching....
In-Reply-To: <20061124211036.GD571@wifi-65-134.loria.fr>
References: <db9360ca0611230150u4e7fe33bj485d3f0426a1c4a7@mail.gmail.com>
	<20061124211036.GD571@wifi-65-134.loria.fr>
Message-ID: <832FCAF7-4910-4664-AF70-F4FF24ADF7AB@cs.usfca.edu>

On Nov 24, 2006, at 1:10 PM, Pierre-Etienne Moreau wrote:

> Dear Mathieu,
>
>> One colleague of mine has just pointed me to TOM : http:// 
>> tom.loria.fr
>> which may be of some interest to those of you who want to transform
>> antlr trees with pattern matching rules.
>
> you are completely right. Thanks for the advertisement :-)

I have seen a demo of TOM from Pierre-Etienne and it's pretty cool. :)

Ter

From antlr1 at cyberplasm.com  Fri Nov 24 13:33:10 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 14:33:10 -0700
Subject: [antlr-interest] v3 c# code gen: filter=true problem
In-Reply-To: <012c01c70fbe$d85c77d0$c704a8c0@hercules>
References: <c58ab143a5ae4eb1b4b52400ae26add3@cyberplasm.com>
Message-ID: <4.3.2.7.2.20061124142526.031d93c0@mail.cyberplasm.com>

At 04:51 AM 11/24/2006, Micheal J wrote:
>Hi,
>
>Don't think filtering mode is implemented for parsers in v3 [yet?].
>
>For lexers, the FuzzyJava filtering example works fine.
>
>What does your grammar look like?

Test case for grammer is below. If filter=true nothing is matched, even the 
input lines I know will match the string_def rule. If false the correct 
matches are found. I'm sure I completely misunderstand the purpose of 
filter or where to use it. The fuzzyJava example is just a lexer, perhaps 
that's my problem.


grammar s1;

options {
         language = CSharp;
         filter=true;
}

program: string_def* ;

string_def: LINE { Console.Out.WriteLine("string_def: " + $LINE.Text); } ;

LINE: ID WS* '=' (~'\n')+ '\n' ;

ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ;

WS  :   (' '|'\n'|'\r')+ {$channel=HIDDEN;} ;



From jsantander at lucent.com  Fri Nov 24 13:36:34 2006
From: jsantander at lucent.com (Julian Santander)
Date: Fri, 24 Nov 2006 22:36:34 +0100
Subject: [antlr-interest]  Matching ellipsis
Message-ID: <456765E2.60305@lucent.com>

Folks,

    [I sent this e-mail prior today, but afterwards I realized it had 
been sent in HTML format and signed... which I believe might cause 
problems in some e-mail clients. I hope I'm sending it now in plain 
text. If you already received it, please disregard the new copy]

    I'd be very grateful if someone could provide me some guidance on a 
problem I'm having. This is actually my first attempt at a parser using 
ANTLR. I'm using ANTLR beta 5 with Java generation (on a Windows XP 
machine and Java 1.5 if that matters).

    At the lexical level I need to match tokens like '.' (dot) '..'  
(ellipsis), integers and floating point numbers. (Actually I don't need 
sign nor exponential formats)....

    So far one of my many attempts has been:

T_INTEGER_LITERAL: DIGIT+;

DOT:
	('.' (('.')=>{false}? |  ))=> '.'
	;
// This one is copied from http://www.antlr.org/blog/antlr3/lookahead.tml May 2006 post.

T_ELLIPSIS:
	'.' '.'+
	;

T_FLOAT_LITERAL:
  	DIGIT+ DOT DIGIT*
	| DOT DIGIT+
  ;

But so far I'm unable to parse "1..2" into T_INTEGER_LITERAL, 
T_ELLIPSIS, T_INTEGER_LITERAL.

for example: "... .. 1..2 3...4 5.0 .6 7." renders:

TOKEN: T_ELLIPSIS[@-1,0:2='...',<180>,1:0]
TOKEN: WS[@-1,3:3=' ',<168>,channel=99,1:3]
TOKEN: T_ELLIPSIS[@-1,4:5='..',<180>,1:4]
TOKEN: WS[@-1,6:6=' ',<168>,channel=99,1:6]
*TOKEN: T_FLOAT_LITERAL[@-1,7:8='1.',<181>,1:7]
TOKEN: T_FLOAT_LITERAL[@-1,9:10='.2',<181>,1:9]*
TOKEN: WS[@-1,11:11=' ',<168>,channel=99,1:11]
*TOKEN: T_FLOAT_LITERAL[@-1,12:13='3.',<181>,1:12]*
TOKEN: T_ELLIPSIS[@-1,14:15='..',<180>,1:14]
TOKEN: T_INTEGER_LITERAL[@-1,16:16='4',<175>,1:16]
TOKEN: WS[@-1,17:17=' ',<168>,channel=99,1:17]
TOKEN: T_FLOAT_LITERAL[@-1,18:20='5.0',<181>,1:18]
TOKEN: WS[@-1,21:21=' ',<168>,channel=99,1:21]
TOKEN: T_FLOAT_LITERAL[@-1,22:23='.6',<181>,1:22]
TOKEN: WS[@-1,24:24=' ',<168>,channel=99,1:24]
TOKEN: T_FLOAT_LITERAL[@-1,25:26='7.',<181>,1:25]
TOKEN: WS[@-1,27:27='\n',<168>,channel=99,1:27]

I've tried other things (I've seen a post on emitting multiple tokens 
for the same rule, but was apparently not yet supported in v3, I've seen 
also the pascal examples for v2, but somehow I couldn't get them to work??)

Thanks very much in advance and best regards

    Julian





From brian-antlr at slesinsky.org  Fri Nov 24 14:05:59 2006
From: brian-antlr at slesinsky.org (Brian Slesinsky)
Date: Fri, 24 Nov 2006 14:05:59 -0800
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
Message-ID: <824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>

I had a lot of trouble downloading ANTLR 3.0 beta 5.  It will usually
get part of the way through and hang.  The website even seemed to be
down for a few minutes; I hope I didn't break anything.

I did finally get the whole file; switching from Firefox to Safari
seemed to help for some reason.

If it's a bandwidth or cost issue, maybe it would make sense to put
the most popular downloads elsewhere?  For example, the beta version
of Google Groups provides 100MB of disk space for files.

(Disclaimer:  I work for Google, but am speaking only for myself, etc.
 I'm sure there are many other ways to do it.)

- Brian

From parrt at cs.usfca.edu  Fri Nov 24 14:21:10 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 14:21:10 -0800
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
	<824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
Message-ID: <6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>

Hi. website is very snappy on my side so it is not the site.  Is  
probably some kind of network issue.  I have heard people from Europe  
having trouble getting to the site.  Where are you accessing it from?

can I just e-mail it to you?

Ter
On Nov 24, 2006, at 2:05 PM, Brian Slesinsky wrote:

> I had a lot of trouble downloading ANTLR 3.0 beta 5.  It will usually
> get part of the way through and hang.  The website even seemed to be
> down for a few minutes; I hope I didn't break anything.
>
> I did finally get the whole file; switching from Firefox to Safari
> seemed to help for some reason.
>
> If it's a bandwidth or cost issue, maybe it would make sense to put
> the most popular downloads elsewhere?  For example, the beta version
> of Google Groups provides 100MB of disk space for files.
>
> (Disclaimer:  I work for Google, but am speaking only for myself, etc.
> I'm sure there are many other ways to do it.)
>
> - Brian


From antlr1 at cyberplasm.com  Fri Nov 24 15:28:30 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 16:28:30 -0700
Subject: [antlr-interest] v3.0b5: input size problem
Message-ID: <4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>

My input files can be up to 1MB of text. I am only able to parse about 500 
lines of a 5000 line file when apparently it just stops. Showstopper, and 
everything was going so well. Is there some default setting I can override 
to support large files?




From parrt at cs.usfca.edu  Fri Nov 24 16:15:57 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 16:15:57 -0800
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
References: <4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
Message-ID: <78EE3E9E-0C0D-48A6-8B7D-F12C9A8EE80E@cs.usfca.edu>

Stops?  No error no nothin'?  Currently antlr scarfs all input until  
EOF.  Gotta build one that does it on demand, but haven't yet.

Ter
On Nov 24, 2006, at 3:28 PM, Paul Shaffer wrote:

> My input files can be up to 1MB of text. I am only able to parse  
> about 500 lines of a 5000 line file when apparently it just stops.  
> Showstopper, and everything was going so well. Is there some  
> default setting I can override to support large files?
>
>
>


From parrt at cs.usfca.edu  Fri Nov 24 16:17:15 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 16:17:15 -0800
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <824b0d840611241548j706075bbq6efd0b9e95445d43@mail.gmail.com>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
	<824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
	<6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>
	<824b0d840611241548j706075bbq6efd0b9e95445d43@mail.gmail.com>
Message-ID: <CA84267F-7DB8-45BB-85BF-89CE02F89682@cs.usfca.edu>


On Nov 24, 2006, at 3:48 PM, Brian Slesinsky wrote:

> Thanks, but I did eventually manage to download what I needed; I was
> just puzzled by why I was having trouble downloading only large files
> and only from this website.  I think it might be a browser
> incompatibility issue between Firefox 1.5.0.8 (and possibly one of my
> plugins) and Resin.  I updated my plugins and upgraded to Firefox 2.0
> and had much better luck.
>
> By the way, it would be a bit easier to get started if the
> documentation started out with a "hello world" for ANTLR - it's a bit
> unclear what's required and what's optonal.  I think this is a minimal
> example?
>
> grammar hello;
> start	:	 'hello' ;
>
> - Brian

Can you add to the tutorials?  I'd add '\n' on the end to make it  
play better with unix.

http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to 
+ANTLR+3

or a new page.

Ter


From antlr1 at cyberplasm.com  Fri Nov 24 17:07:57 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 18:07:57 -0700
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <78EE3E9E-0C0D-48A6-8B7D-F12C9A8EE80E@cs.usfca.edu>
References: <4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
Message-ID: <4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>

Sorry, I see this stopping is actually due to my parsing errors. As I fix 
the errors I am able to parse farther into the input text, I am up to line 
1600 or so now. But there are no errors being reported when it stops. I 
wish I knew how to get errors to show up-- any suggestions appreciated.

At 05:15 PM 11/24/2006, you wrote:
>Stops?  No error no nothin'?  Currently antlr scarfs all input until
>EOF.  Gotta build one that does it on demand, but haven't yet.
>
>Ter
>On Nov 24, 2006, at 3:28 PM, Paul Shaffer wrote:
>
>>My input files can be up to 1MB of text. I am only able to parse
>>about 500 lines of a 5000 line file when apparently it just stops.
>>Showstopper, and everything was going so well. Is there some
>>default setting I can override to support large files?


From parrt at cs.usfca.edu  Fri Nov 24 17:12:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 17:12:26 -0800
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
References: <4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
Message-ID: <BCDBE70D-6256-4D85-B7BF-5C2FC2F7E5C0@cs.usfca.edu>


On Nov 24, 2006, at 5:07 PM, Paul Shaffer wrote:

> Sorry, I see this stopping is actually due to my parsing errors. As  
> I fix the errors I am able to parse farther into the input text, I  
> am up to line 1600 or so now. But there are no errors being  
> reported when it stops. I wish I knew how to get errors to show  
> up-- any suggestions appreciated.

Yikes. that sounds like a problem on my side...can you run with  
ANTLRWorks to figure out where it is?
Ter


From parrt at cs.usfca.edu  Fri Nov 24 17:21:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 17:21:27 -0800
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <824b0d840611241705q5a8bd48bl5946e5d1d45fef51@mail.gmail.com>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
	<824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
	<6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>
	<824b0d840611241548j706075bbq6efd0b9e95445d43@mail.gmail.com>
	<CA84267F-7DB8-45BB-85BF-89CE02F89682@cs.usfca.edu>
	<824b0d840611241705q5a8bd48bl5946e5d1d45fef51@mail.gmail.com>
Message-ID: <E3732AAC-A618-4364-863F-F1DB31C4A8D7@cs.usfca.edu>

Hi. Try again. somebody added 200 spam users, but I am not sure how  
they are doing it except manually.  Damn spammers ought be roasted  
slowly in their own filth.

Ter
On Nov 24, 2006, at 5:05 PM, Brian Slesinsky wrote:

> Well, I would, but when I try to sign up, it says "This installation
> of Confluence is not licensed to add any more users."
>
> - Brian
>
> On 11/24/06, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> On Nov 24, 2006, at 3:48 PM, Brian Slesinsky wrote:
>>
>> > Thanks, but I did eventually manage to download what I needed; I  
>> was
>> > just puzzled by why I was having trouble downloading only large  
>> files
>> > and only from this website.  I think it might be a browser
>> > incompatibility issue between Firefox 1.5.0.8 (and possibly one  
>> of my
>> > plugins) and Resin.  I updated my plugins and upgraded to  
>> Firefox 2.0
>> > and had much better luck.
>> >
>> > By the way, it would be a bit easier to get started if the
>> > documentation started out with a "hello world" for ANTLR - it's  
>> a bit
>> > unclear what's required and what's optonal.  I think this is a  
>> minimal
>> > example?
>> >
>> > grammar hello;
>> > start :        'hello' ;
>> >
>> > - Brian
>>
>> Can you add to the tutorials?  I'd add '\n' on the end to make it
>> play better with unix.
>>
>> http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to
>> +ANTLR+3
>>
>> or a new page.
>>
>> Ter
>>
>>
>>


From antlr1 at cyberplasm.com  Fri Nov 24 17:29:25 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 18:29:25 -0700
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <BCDBE70D-6256-4D85-B7BF-5C2FC2F7E5C0@cs.usfca.edu>
References: <4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
Message-ID: <4.3.2.7.2.20061124182244.031e27a8@mail.cyberplasm.com>

At 06:12 PM 11/24/2006, Terence Parr wrote:

>On Nov 24, 2006, at 5:07 PM, Paul Shaffer wrote:
>
>>Sorry, I see this stopping is actually due to my parsing errors. As
>>I fix the errors I am able to parse farther into the input text, I
>>am up to line 1600 or so now. But there are no errors being
>>reported when it stops. I wish I knew how to get errors to show
>>up-- any suggestions appreciated.
>
>Yikes. that sounds like a problem on my side...can you run with
>ANTLRWorks to figure out where it is?
>Ter

I forgot to mention I am using c# generation. AFAIK ANTLRWorks will only 
check the grammer.






From parrt at cs.usfca.edu  Fri Nov 24 17:37:45 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 17:37:45 -0800
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <4.3.2.7.2.20061124182244.031e27a8@mail.cyberplasm.com>
References: <4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
	<4.3.2.7.2.20061124182244.031e27a8@mail.cyberplasm.com>
Message-ID: <F4F0F436-8116-4BA2-9758-822AEBB58D3D@cs.usfca.edu>


On Nov 24, 2006, at 5:29 PM, Paul Shaffer wrote:

> At 06:12 PM 11/24/2006, Terence Parr wrote:
>
>> On Nov 24, 2006, at 5:07 PM, Paul Shaffer wrote:
>>
>>> Sorry, I see this stopping is actually due to my parsing errors. As
>>> I fix the errors I am able to parse farther into the input text, I
>>> am up to line 1600 or so now. But there are no errors being
>>> reported when it stops. I wish I knew how to get errors to show
>>> up-- any suggestions appreciated.
>>
>> Yikes. that sounds like a problem on my side...can you run with
>> ANTLRWorks to figure out where it is?
>> Ter
>
> I forgot to mention I am using c# generation. AFAIK ANTLRWorks will  
> only check the grammer.

ANTLWorks has an awesome interactive debugger that will work with any  
target language as long as that target language sends events across  
the socket as AW needs. :)  Use -debug with ANTLR and then in AW say  
"Debug remote...". It will try to connect to the local machine at a  
special port 0xC001 ("cool"), I think, and suck events from your parser.

Ter


From antlr1 at cyberplasm.com  Fri Nov 24 18:08:04 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 19:08:04 -0700
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <F4F0F436-8116-4BA2-9758-822AEBB58D3D@cs.usfca.edu>
References: <4.3.2.7.2.20061124182244.031e27a8@mail.cyberplasm.com>
	<4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
	<4.3.2.7.2.20061124182244.031e27a8@mail.cyberplasm.com>
Message-ID: <4.3.2.7.2.20061124190410.031e5440@mail.cyberplasm.com>

At 06:37 PM 11/24/2006, Terence Parr wrote:

>On Nov 24, 2006, at 5:29 PM, Paul Shaffer wrote:
>
>>At 06:12 PM 11/24/2006, Terence Parr wrote:
>>
>>>On Nov 24, 2006, at 5:07 PM, Paul Shaffer wrote:
>>>
>>>>Sorry, I see this stopping is actually due to my parsing errors. As
>>>>I fix the errors I am able to parse farther into the input text, I
>>>>am up to line 1600 or so now. But there are no errors being
>>>>reported when it stops. I wish I knew how to get errors to show
>>>>up-- any suggestions appreciated.
>>>
>>>Yikes. that sounds like a problem on my side...can you run with
>>>ANTLRWorks to figure out where it is?
>>>Ter
>>
>>I forgot to mention I am using c# generation. AFAIK ANTLRWorks will
>>only check the grammer.
>
>ANTLWorks has an awesome interactive debugger that will work with any
>target language as long as that target language sends events across
>the socket as AW needs. :)  Use -debug with ANTLR and then in AW say
>"Debug remote...". It will try to connect to the local machine at a
>special port 0xC001 ("cool"), I think, and suck events from your parser.

Yes I noticed that and it does look great. I have another post just now on 
this list, the c# code gen for -debug won't compile. So I may have to wait 
a bit for remote debugging. I have figured out all my little parsing errors 
and I am able to parse my full 5000 lines. I have about 40 keywords to scan 
for and they can be in various combinations so it has been a good learning 
curve.









From antlr1 at cyberplasm.com  Fri Nov 24 18:08:44 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Fri, 24 Nov 2006 19:08:44 -0700
Subject: [antlr-interest] 3.0b5: c# parser gen error with -debug
Message-ID: <4.3.2.7.2.20061124190835.031e7da0@mail.cyberplasm.com>

There are several parser generation errors if you use the -debug command 
line option. I'm just reporting this, I'm sure you will fix it later. 
Unless I have some other setting wrong and it's not an error... These are 
typical compiler errors:

dbg.location(0, 5);

M:\Projects\Antlr\Test1\myParser.cs(238): 
'Antlr.Runtime.Debug.IDebugEventListener' does not contain a definition for 
'location'

It should be "dbg.Location(0, 5);" I think.


NoViableAltException nvae_d2s29 = new NoViableAltException(" blah, blah, 
blah...");
dbg.RecognitionException(nvae);
throw nvae_d2s29;

M:\Projects\Antlr\Test1\myParser.cs(335): The name 'nvae' does not exist in 
the class or namespace 'myParser'

I guess "nvae" should be "nvae_d2s29".


From aspitz at gmail.com  Fri Nov 24 18:33:38 2006
From: aspitz at gmail.com (Ayal Spitz)
Date: Fri, 24 Nov 2006 21:33:38 -0500
Subject: [antlr-interest] Exception catching
Message-ID: <a54e7a220611241833h3bfa433dx68ac80fd7e31a4f@mail.gmail.com>

Does anyone know if there is a way to stop the parser generated from
Antlr 3.0b5 from catching and attempting to recover from an error
without having to edit the parse file? I'm actually using the fact
that an exception was thrown by the parser and having the parser
recover breaks my code.

Thanks in advance - AYAL

From rschulz at sonic.net  Fri Nov 24 18:43:12 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 24 Nov 2006 18:43:12 -0800
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
References: <4.3.2.7.2.20061124162430.031cd960@mail.cyberplasm.com>
	<4.3.2.7.2.20061124180357.0320acb0@mail.cyberplasm.com>
Message-ID: <200611241843.12825.rschulz@sonic.net>

Paul,

On Friday 24 November 2006 17:07, Paul Shaffer wrote:
> Sorry, I see this stopping is actually due to my parsing errors. As I
> fix the errors I am able to parse farther into the input text, I am
> up to line 1600 or so now. But there are no errors being reported
> when it stops. I wish I knew how to get errors to show up-- any
> suggestions appreciated.

Are you sure you're invoking the JVM that runs the ANTLR-generated 
parser with enough RAM? It's typical for execution to appear to grind 
slowly to a halt as more and more of the CPU time goes to running the 
garbage collector.

As Terence pointed out, by default ANTLR parsers process the entire 
input, transforming it into a linear sequence of tokens that, in 
addition to the input text itself, contains a list of Token instances 
that partition that input.

If you don't have enough RAM allocated to the JVM, then it will fail at 
some point during analysis of the input.


Randall Schulz

From parrt at cs.usfca.edu  Fri Nov 24 19:03:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 19:03:29 -0800
Subject: [antlr-interest] Exception catching
In-Reply-To: <a54e7a220611241833h3bfa433dx68ac80fd7e31a4f@mail.gmail.com>
References: <a54e7a220611241833h3bfa433dx68ac80fd7e31a4f@mail.gmail.com>
Message-ID: <0DDF41FA-0FF1-450B-A2D2-EE7AEF8E00C7@cs.usfca.edu>

Please see the "Error handling" section of

http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to 
+ANTLR+3

Ter
On Nov 24, 2006, at 6:33 PM, Ayal Spitz wrote:

> Does anyone know if there is a way to stop the parser generated from
> Antlr 3.0b5 from catching and attempting to recover from an error
> without having to edit the parse file? I'm actually using the fact
> that an exception was thrown by the parser and having the parser
> recover breaks my code.
>
> Thanks in advance - AYAL


From parrt at cs.usfca.edu  Fri Nov 24 19:27:34 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Nov 2006 19:27:34 -0800
Subject: [antlr-interest] new "tutorial" for v3
Message-ID: <EB5430AC-E81E-4837-B3C8-C4904EDF4BFB@cs.usfca.edu>

http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

Just the code w/o discussion.  Taken from the book, but figured it  
would help.

Ter

From brian-antlr at slesinsky.org  Fri Nov 24 22:54:53 2006
From: brian-antlr at slesinsky.org (Brian Slesinsky)
Date: Fri, 24 Nov 2006 22:54:53 -0800
Subject: [antlr-interest] new "tutorial" for v3
In-Reply-To: <EB5430AC-E81E-4837-B3C8-C4904EDF4BFB@cs.usfca.edu>
References: <EB5430AC-E81E-4837-B3C8-C4904EDF4BFB@cs.usfca.edu>
Message-ID: <824b0d840611242254l2eed790o9740956c1b6e1ccd@mail.gmail.com>

Thanks, that's helpful.

In the whitespace rule, why is it using skip() instead of $channel=HIDDEN?

- Brian

On 11/24/06, Terence Parr <parrt at cs.usfca.edu> wrote:
> http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
>
> Just the code w/o discussion.  Taken from the book, but figured it
> would help.
>
> Ter
>
>

From open.zone at virgin.net  Fri Nov 24 23:44:23 2006
From: open.zone at virgin.net (Micheal J)
Date: Sat, 25 Nov 2006 07:44:23 -0000
Subject: [antlr-interest] 3.0b5: c# parser gen error with -debug
In-Reply-To: <4.3.2.7.2.20061124190835.031e7da0@mail.cyberplasm.com>
Message-ID: <016501c71065$881be7e0$c704a8c0@hercules>

Hi Paul,

Thanks for the report.

> There are several parser generation errors if you use the
> -debug command 
> line option. I'm just reporting this, I'm sure you will fix it later. 
> Unless I have some other setting wrong and it's not an 
> error... These are 
> typical compiler errors:
> 
> dbg.location(0, 5);
[...]
> It should be "dbg.Location(0, 5);" I think.

> NoViableAltException nvae_d2s29 = new NoViableAltException("
[...]
> dbg.RecognitionException(nvae);
[...]
> I guess "nvae" should be "nvae_d2s29".

Replace the file:
    src\org\antlr\codegen\templates\CSharp\Dbg.stg

With the attached Dbg.stg file.


Micheal
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Dbg.stg
Type: application/octet-stream
Size: 6043 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061125/eda227e4/attachment.obj 

From open.zone at virgin.net  Fri Nov 24 23:52:54 2006
From: open.zone at virgin.net (Micheal J)
Date: Sat, 25 Nov 2006 07:52:54 -0000
Subject: [antlr-interest] 3.0b5: c# parser gen error with -debug
In-Reply-To: <016501c71065$881be7e0$c704a8c0@hercules>
Message-ID: <016f01c71066$b81e4a90$c704a8c0@hercules>

Hi,

> Replace the file:
>     src\org\antlr\codegen\templates\CSharp\Dbg.stg
> 
> With the attached Dbg.stg file.

Forgot to mention that you'd need to re-run the ANTLR tool to re-generate
your lexer/parser.

Micheal
 


From bonkabonka at gmail.com  Sat Nov 25 02:21:11 2006
From: bonkabonka at gmail.com (James Cook)
Date: Sat, 25 Nov 2006 05:21:11 -0500
Subject: [antlr-interest] Config file parsing grammar
Message-ID: <ab5ce4510611250221h442e7a95kf173fa88419a04b1@mail.gmail.com>

Howdy

I've been banging on a grammar to parse Unix-style config files
(notably /etc/hosts, /etc/ethers and dhcpd's leases file) but haven't
had much luck.  I'm sure it's a simple fix but I've been at it for
almost three days now and have just about reached the throwing-stuff
stage.  =P  Anyway, here's the lexer bits:

lexer grammar CommonUnixConfig;

// ---------------------------------------------------------------------
// Base
// ---------------------------------------------------------------------

WHITESPACE
        :       (' ' | '\t')+
        ;

NEWLINE
        :       ('\r\n' | '\n' | '\r')
        ;

COLON
        :       ':'
        ;

DOT
        :       '.'
        ;

STAR
        :       '*'
        ;

DASH
        :       '-'
        ;

HASH
        :       '#'
        ;

SLASH
        :       '/'
        ;

DIGIT
        :       '0'..'9'
        ;

HEXDIGIT
        :       DIGIT | 'a'..'f' | 'A'..'F'
        ;

LETTER
        :       'a'..'z' | 'A'..'Z'
        ;

// ----------------------------------------------------------------------------
// Configuration Cruft
// ----------------------------------------------------------------------------

COMMENT
        :       HASH ~NEWLINE*
//              { $channel=HIDDEN; System.out.println("comment"); }
                { System.out.println("comment"); skip(); }
        ;

BLANKLINE
        :       WHITESPACE? NEWLINE
                { System.out.println("blankline"); skip(); }
        ;

// ----------------------------------------------------------------------------
// Ethernet
// ----------------------------------------------------------------------------

CLIENTID
        :       HEXPAIR COLON MACADDRESS
        ;

MACADDRESS
        :       HEXPAIR COLON HEXPAIR COLON HEXPAIR COLON HEXPAIR
COLON HEXPAIR COLON HEXPAIR
        ;

fragment
HEXPAIR
        :       HEXDIGIT HEXDIGIT
        ;

// ----------------------------------------------------------------------------
// Internet Address (DNS and Bare IP)
// ----------------------------------------------------------------------------

IPADDRESS
        :       IPV4ADDRESS | IPV6ADDRESS
        ;

IPV4ADDRESS
        :       BYTE DOT BYTE DOT BYTE DOT BYTE
        ;

// RFC 2373 Appendix B is evil
IPV6ADDRESS
        :       HEXPART (COLON IPV4ADDRESS)?
        ;

HOSTNAME
        :       DNSCHAR+ (DOT DNSCHAR+)* DOT?
        ;

// RFC 2373 Appendix B says the four parts of an IPv4address can have only one
// to three digits
fragment
BYTE
        :       DIGIT (DIGIT DIGIT?)?
        ;

fragment
HEXPART
        :       HEXSEQ | HEXSEQ COLON COLON HEXSEQ? | COLON COLON HEXSEQ?
        ;

fragment
HEXSEQ
        :       HEX4 (COLON HEX4)*
        ;

fragment
HEX4
        :       HEXDIGIT (HEXDIGIT (HEXDIGIT HEXDIGIT?)?)?
        ;

// As defined in RFC 1034
fragment
DNSCHAR
        :       LETTER | DIGIT | DASH
        ;

======

Next up is the particular parser I've been focusing on:

parser grammar Hosts;

options {
        tokenVocab = CommonUnixConfig;
}

go
        :       hostline*
        ;

hostline
        :       ip=IPADDRESS WHITESPACE hostname=HOSTNAME (WHITESPACE
alias=HOSTNAME{System.out.println("alias: " + $alias);})* NEWLINE
                {
                        System.out.println("ip addr  : " + $ip);
                        System.out.println("hostname : " + $hostname);
                }
        ;

======

And then, finally, the test harness:

import org.antlr.runtime.*;

public class hosts
{
        public static void main(String args[])
                throws Throwable
        {
                ANTLRFileStream in = new ANTLRFileStream(args[0]);
                CommonUnixConfigLexer lexer = new CommonUnixConfigLexer(in);

                CommonTokenStream tokens = new CommonTokenStream(lexer);

                HostsParser parser = new HostsParser(tokens);
                parser.go();
        }
}

======

In the event that there aren't any blank lines or comments, the file
parses properly.  However, add in a blank line or a comment and
parsing seems to abort without throwing an exception.  =(  Also, the
print statements never execute but I suspect I'm using them wrong.

I didn't have any luck finding examples to pattern my efforts after -
most often newlines and whitespace are ignorable whereas they're
delimiters here.  Any help would be appreciated.  Thanks!

-- 
James

From antlr1 at cyberplasm.com  Sat Nov 25 02:32:13 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Sat, 25 Nov 2006 03:32:13 -0700
Subject: [antlr-interest] 3.0b5: c# parser gen error with -debug
In-Reply-To: <016f01c71066$b81e4a90$c704a8c0@hercules>
References: <016501c71065$881be7e0$c704a8c0@hercules>
Message-ID: <4.3.2.7.2.20061125025345.031e65b8@mail.cyberplasm.com>


> > Replace the file:
> >     src\org\antlr\codegen\templates\CSharp\Dbg.stg
> >
> > With the attached Dbg.stg file.
>
>Forgot to mention that you'd need to re-run the ANTLR tool to re-generate
>your lexer/parser.

Thanks. The new file got rid of the compile errors, but the parser hangs 
now -- just get a blinking cursor..

There is also a strange problem. I used filemon and noticed that ANTLR is 
looking for the .stg files under the lib path not the src. So I copied the 
org directories over to lib.





From chris at eidhof.nl  Sat Nov 25 02:43:31 2006
From: chris at eidhof.nl (Chris Eidhof)
Date: Sat, 25 Nov 2006 11:43:31 +0100
Subject: [antlr-interest] [newbie] nondeterminism upon error
Message-ID: <46F24094-73DB-46EB-A920-BFD4D4B8DD1E@eidhof.nl>

Hi all,

I'm getting this nondeterminism upon error:

> hasdat.g:67: warning:nondeterminism upon
> hasdat.g:67:     k==1:SMALL
> hasdat.g:67:     between alt 1 and exit branch of block

at line 67 is the following code:
> idrest: (SMALL | LARGE | DIGIT | APOS)*;

And the following terminals are defined (among others):
> APOS        : "'" ;
> SMALL       : 'a'..'z' ;
> LARGE       : 'A'..'Z' ;
> DIGIT       : '0'..'9' ;

So, there's nondeterminism upon the first alternative and the idrest  
that matches nothing?

The idrest is used in the following lines:
> conid: LARGE idrest;
> varid: SMALL idrest;

What I also tried was removing the star operator from idrest, and  
change the two lines too:
> conid: LARGE (idrest)*;
> varid: SMALL (idrest)*;

Can anyone give me some hints? I don't get why that rule is  
nondeterministic... If anyone wants to see the whole file I can put  
it online somewhere.

Thanks a lot,
-chris

From antlr at mirality.co.nz  Sat Nov 25 03:56:38 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 26 Nov 2006 00:56:38 +1300
Subject: [antlr-interest] String lexing and partial tokens
Message-ID: <7.0.1.0.0.20061126002902.03715e28@mirality.co.nz>

What's the new 3.0 way to do string lexing?  I'd like to have it 
strip off the surrounding quotes so that the token contains just 
the text itself.  My first attempt was this, since it's the v2 
way:

STRING: '"'! ( ~'"' )* '"'!	;

But that gives me this error:

error(149): Message.g3:101:7: rule STRING uses rewrite syntax or 
operator with no output option or lexer rule uses !

Looking in the archives seems to indicate that ! is no longer 
supported, which is a pain in the butt.  It was a nice simple 
syntax, and the alternatives all seem a lot more 
complicated.  Incidentally, what *is* the recommended 
alternative?  Further posts seemed to suggest that calling 
$setText or setText would do the trick, but those functions don't 
seem to exist in the C runtime (which is what I'm trying to use); 
or at least I can't find them.

For the moment I've ended up with the following, which seems to 
work but just seems a bit too evil to me...

STRING: '"' content=UnquotedText '"'	{ emit($content); 
ltoken()->type = STRING; };

fragment UnquotedText:	(~'"')*	;

(the fragment seemed a little silly, but it wouldn't accept the 
label otherwise.)

On an only-slightly-related note, I was also wondering what's the 
right way to deal with lexical ambiguity?  Say I've got one 
parsing context (eg. after a #include in C) where backslashes are 
treated literally, not as escapes, and another context (anywhere 
else) where they should be used as an escape sequence.  And again, 
ideally I want the resulting token to contain the 'real' string 
(ie. after escapes had been acted on).  Is this even possible?  (I 
imagine you could do it by treating it as an island grammar.  But 
that seems a little heavyweight.)


From theirix at gmail.com  Sat Nov 25 04:50:50 2006
From: theirix at gmail.com (Eugene Seliverstov)
Date: Sat, 25 Nov 2006 15:50:50 +0300
Subject: [antlr-interest] Tree walk exception
Message-ID: <2a638aba0611250450l46e0abeby1e8225143892d5d1@mail.gmail.com>

Hello!

Sometimes during work of tree grammar parser NullPointerException is thrown.
Exception happens at "org.antlr.runtime.tree.CommonTr
eeNodeStream.walkBackToMostRecentNodeWithUnvisitedChildren(
CommonTreeNodeStream.java :483)" and caused by accessing null element at top
of stack indexStack.
This can appear unexpectedly on different rules, on different input texts. I
think sometimes it's because small lookahead or disambiguation of
 grammar rules, but why it's no detected at code generation time?..

Of course, I can provide grammars if it can help (they are too large to post
here).
Version of antlr - 3.0b5.

Thank you for regards!
-- 
Best regards,
Eugene Seliverstov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061125/cf88c728/attachment.html 

From contingencyplan at gmail.com  Sat Nov 25 05:47:46 2006
From: contingencyplan at gmail.com (Brian DeVries)
Date: Sat, 25 Nov 2006 07:47:46 -0600
Subject: [antlr-interest] Way to send two different trees based on input to
	rule?
Message-ID: <a3db01e90611250547yb2ea49aj788c740fc8e659cf@mail.gmail.com>

Hello all,

I have an ANTLR v3 parser rule that takes a boolean parameter, does some
stuff, and outputs (part of) an AST. When that parameter is true, I want it
to output a certain node in the tree, and something else when it's false. Is
there a way to do this? I'm thinking semantic predicates, but the v2
documentation from the website states that predicates in the middle of the
rule are validating, and I couldn't get the disambiguating one to work on
another rule a few days ago (it was still treating it as a validating
predicate).

Toy example (should be syntactically right):

rule [boolean b]
    :    X y  -> ^(R X y)
    ;

I'm wanting something like

rule [boolean b]
    :    X y /* if $b == true */ -> ^(R X y)
               /* else */            -> ^(R Z y)
    ;

Thanks!
~Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061125/8f202a37/attachment.html 

From theirix at gmail.com  Sat Nov 25 07:46:15 2006
From: theirix at gmail.com (Eugene Seliverstov)
Date: Sat, 25 Nov 2006 18:46:15 +0300
Subject: [antlr-interest]  Tree walk NullPointerException
Message-ID: <2a638aba0611250746n14fde11eyed12d66c45b32172@mail.gmail.com>

Hello, all!

Sometimes during work of tree grammar parser NullPointerException is thrown.
Exception happens at "
org.antlr.runtime.tree.CommonTreeNodeStream.walkBackToMostRecentNodeWithUnvisitedChildren
(CommonTreeNodeStream.java :483)" and caused by accessing null element at
top of stack indexStack.
This can appear unexpectedly on different rules, on different input texts. I
think sometimes it's because small lookahead or disambiguation of
 grammar rules, but why it's no detected at code generation time?..

Of course, I can provide grammars if it can help (they are too large to post
here).
Version of antlr - 3.0b5.

Thank you for regards!

-- 
Best regards,
Eugene Seliverstov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061125/5e4451bb/attachment.html 

From parrt at cs.usfca.edu  Sat Nov 25 07:54:43 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 25 Nov 2006 07:54:43 -0800
Subject: [antlr-interest] 3.0b5: c# parser gen error with -debug
In-Reply-To: <4.3.2.7.2.20061125025345.031e65b8@mail.cyberplasm.com>
References: <016501c71065$881be7e0$c704a8c0@hercules>
	<4.3.2.7.2.20061125025345.031e65b8@mail.cyberplasm.com>
Message-ID: <2CF0947B-BD67-488D-B9E1-B2A95760B003@cs.usfca.edu>


On Nov 25, 2006, at 2:32 AM, Paul Shaffer wrote:

>
>> > Replace the file:
>> >     src\org\antlr\codegen\templates\CSharp\Dbg.stg
>> >
>> > With the attached Dbg.stg file.
>>
>> Forgot to mention that you'd need to re-run the ANTLR tool to re- 
>> generate
>> your lexer/parser.
>
> Thanks. The new file got rid of the compile errors, but the parser  
> hangs now -- just get a blinking cursor..

Yep, now it's a server.  Must connect to it from AW.

Ter

From parrt at cs.usfca.edu  Sat Nov 25 07:57:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 25 Nov 2006 07:57:01 -0800
Subject: [antlr-interest] Way to send two different trees based on input
	to rule?
In-Reply-To: <a3db01e90611250547yb2ea49aj788c740fc8e659cf@mail.gmail.com>
References: <a3db01e90611250547yb2ea49aj788c740fc8e659cf@mail.gmail.com>
Message-ID: <CC8000C2-A4AB-4224-92E6-A2EFCBFC9D34@cs.usfca.edu>


On Nov 25, 2006, at 5:47 AM, Brian DeVries wrote:

> Hello all,
>
> I have an ANTLR v3 parser rule that takes a boolean parameter, does  
> some stuff, and outputs (part of) an AST. When that parameter is  
> true, I want it to output a certain node in the tree, and something  
> else when it's false.

a : A -> {p}? x
         -> y
    ;

That should be in the manual...

Ter
> Is there a way to do this? I'm thinking semantic predicates, but  
> the v2 documentation from the website states that predicates in the  
> middle of the rule are validating, and I couldn't get the  
> disambiguating one to work on another rule a few days ago (it was  
> still treating it as a validating predicate).
>
> Toy example (should be syntactically right):
>
> rule [boolean b]
>     :    X y  -> ^(R X y)
>     ;
>
> I'm wanting something like
>
> rule [boolean b]
>     :    X y /* if $b == true */ -> ^(R X y)
>                /* else */            -> ^(R Z y)
>     ;
>
> Thanks!
> ~Brian


From parrt at cs.usfca.edu  Sat Nov 25 09:55:57 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 25 Nov 2006 09:55:57 -0800
Subject: [antlr-interest] Config file parsing grammar
In-Reply-To: <ab5ce4510611250221h442e7a95kf173fa88419a04b1@mail.gmail.com>
References: <ab5ce4510611250221h442e7a95kf173fa88419a04b1@mail.gmail.com>
Message-ID: <024F24B1-8438-4108-B26F-1E94496E5BF6@cs.usfca.edu>

Hi.  Try -trace or -debug options (that last one requires ANTLRWorks)
Ter
On Nov 25, 2006, at 2:21 AM, James Cook wrote:

> Howdy
>
> I've been banging on a grammar to parse Unix-style config files
> (notably /etc/hosts, /etc/ethers and dhcpd's leases file) but haven't
> had much luck.  I'm sure it's a simple fix but I've been at it for
> almost three days now and have just about reached the throwing-stuff
> stage.  =P  Anyway, here's the lexer bits:
>
> lexer grammar CommonUnixConfig;
>
> //  
> ---------------------------------------------------------------------
> // Base
> //  
> ---------------------------------------------------------------------
>
> WHITESPACE
>        :       (' ' | '\t')+
>        ;
>
> NEWLINE
>        :       ('\r\n' | '\n' | '\r')
>        ;
>
> COLON
>        :       ':'
>        ;
>
> DOT
>        :       '.'
>        ;
>
> STAR
>        :       '*'
>        ;
>
> DASH
>        :       '-'
>        ;
>
> HASH
>        :       '#'
>        ;
>
> SLASH
>        :       '/'
>        ;
>
> DIGIT
>        :       '0'..'9'
>        ;
>
> HEXDIGIT
>        :       DIGIT | 'a'..'f' | 'A'..'F'
>        ;
>
> LETTER
>        :       'a'..'z' | 'A'..'Z'
>        ;
>
> //  
> ---------------------------------------------------------------------- 
> ------
> // Configuration Cruft
> //  
> ---------------------------------------------------------------------- 
> ------
>
> COMMENT
>        :       HASH ~NEWLINE*
> //              { $channel=HIDDEN; System.out.println("comment"); }
>                { System.out.println("comment"); skip(); }
>        ;
>
> BLANKLINE
>        :       WHITESPACE? NEWLINE
>                { System.out.println("blankline"); skip(); }
>        ;
>
> //  
> ---------------------------------------------------------------------- 
> ------
> // Ethernet
> //  
> ---------------------------------------------------------------------- 
> ------
>
> CLIENTID
>        :       HEXPAIR COLON MACADDRESS
>        ;
>
> MACADDRESS
>        :       HEXPAIR COLON HEXPAIR COLON HEXPAIR COLON HEXPAIR
> COLON HEXPAIR COLON HEXPAIR
>        ;
>
> fragment
> HEXPAIR
>        :       HEXDIGIT HEXDIGIT
>        ;
>
> //  
> ---------------------------------------------------------------------- 
> ------
> // Internet Address (DNS and Bare IP)
> //  
> ---------------------------------------------------------------------- 
> ------
>
> IPADDRESS
>        :       IPV4ADDRESS | IPV6ADDRESS
>        ;
>
> IPV4ADDRESS
>        :       BYTE DOT BYTE DOT BYTE DOT BYTE
>        ;
>
> // RFC 2373 Appendix B is evil
> IPV6ADDRESS
>        :       HEXPART (COLON IPV4ADDRESS)?
>        ;
>
> HOSTNAME
>        :       DNSCHAR+ (DOT DNSCHAR+)* DOT?
>        ;
>
> // RFC 2373 Appendix B says the four parts of an IPv4address can  
> have only one
> // to three digits
> fragment
> BYTE
>        :       DIGIT (DIGIT DIGIT?)?
>        ;
>
> fragment
> HEXPART
>        :       HEXSEQ | HEXSEQ COLON COLON HEXSEQ? | COLON COLON  
> HEXSEQ?
>        ;
>
> fragment
> HEXSEQ
>        :       HEX4 (COLON HEX4)*
>        ;
>
> fragment
> HEX4
>        :       HEXDIGIT (HEXDIGIT (HEXDIGIT HEXDIGIT?)?)?
>        ;
>
> // As defined in RFC 1034
> fragment
> DNSCHAR
>        :       LETTER | DIGIT | DASH
>        ;
>
> ======
>
> Next up is the particular parser I've been focusing on:
>
> parser grammar Hosts;
>
> options {
>        tokenVocab = CommonUnixConfig;
> }
>
> go
>        :       hostline*
>        ;
>
> hostline
>        :       ip=IPADDRESS WHITESPACE hostname=HOSTNAME (WHITESPACE
> alias=HOSTNAME{System.out.println("alias: " + $alias);})* NEWLINE
>                {
>                        System.out.println("ip addr  : " + $ip);
>                        System.out.println("hostname : " + $hostname);
>                }
>        ;
>
> ======
>
> And then, finally, the test harness:
>
> import org.antlr.runtime.*;
>
> public class hosts
> {
>        public static void main(String args[])
>                throws Throwable
>        {
>                ANTLRFileStream in = new ANTLRFileStream(args[0]);
>                CommonUnixConfigLexer lexer = new  
> CommonUnixConfigLexer(in);
>
>                CommonTokenStream tokens = new CommonTokenStream 
> (lexer);
>
>                HostsParser parser = new HostsParser(tokens);
>                parser.go();
>        }
> }
>
> ======
>
> In the event that there aren't any blank lines or comments, the file
> parses properly.  However, add in a blank line or a comment and
> parsing seems to abort without throwing an exception.  =(  Also, the
> print statements never execute but I suspect I'm using them wrong.
>
> I didn't have any luck finding examples to pattern my efforts after -
> most often newlines and whitespace are ignorable whereas they're
> delimiters here.  Any help would be appreciated.  Thanks!
>
> -- 
> James


From parrt at cs.usfca.edu  Sat Nov 25 09:58:10 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 25 Nov 2006 09:58:10 -0800
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <7.0.1.0.0.20061126002902.03715e28@mirality.co.nz>
References: <7.0.1.0.0.20061126002902.03715e28@mirality.co.nz>
Message-ID: <CDF7016E-3C7A-4D5B-A7C9-4968946969DB@cs.usfca.edu>


On Nov 25, 2006, at 3:56 AM, Gavin Lambert wrote:

> What's the new 3.0 way to do string lexing?  I'd like to have it  
> strip off the surrounding quotes so that the token contains just  
> the text itself.  My first attempt was this, since it's the v2 way:
>
> STRING: '"'! ( ~'"' )* '"'!	;
>
> But that gives me this error:
>
> error(149): Message.g3:101:7: rule STRING uses rewrite syntax or  
> operator with no output option or lexer rule uses !
>
> Looking in the archives seems to indicate that ! is no longer  
> supported, which is a pain in the butt.  It was a nice simple  
> syntax, and the alternatives all seem a lot more complicated.   
> Incidentally, what *is* the recommended alternative?  Further posts  
> seemed to suggest that calling $setText or setText would do the  
> trick, but those functions don't seem to exist in the C runtime  
> (which is what I'm trying to use); or at least I can't find them.

You can  ask Jim Idle about that, but we decided to use methods for  
setting the text rather than implementing ! which makes everything  
inefficient. I could swear there was something in the documentation.

> On an only-slightly-related note, I was also wondering what's the  
> right way to deal with lexical ambiguity?  Say I've got one parsing  
> context (eg. after a #include in C) where backslashes are treated  
> literally, not as escapes, and another context (anywhere else)  
> where they should be used as an escape sequence.  And again,  
> ideally I want the resulting token to contain the 'real' string  
> (ie. after escapes had been acted on).  Is this even possible?  (I  
> imagine you could do it by treating it as an island grammar.  But  
> that seems a little heavyweight.)

Easy enough, just match \  with a rule called FILENAME after '#include'.
Ter

From parrt at cs.usfca.edu  Sat Nov 25 10:01:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 25 Nov 2006 10:01:20 -0800
Subject: [antlr-interest] Tree walk exception
In-Reply-To: <2a638aba0611250450l46e0abeby1e8225143892d5d1@mail.gmail.com>
References: <2a638aba0611250450l46e0abeby1e8225143892d5d1@mail.gmail.com>
Message-ID: <1055DF62-6342-49C5-A818-4E3013C53763@cs.usfca.edu>


On Nov 25, 2006, at 4:50 AM, Eugene Seliverstov wrote:

> Hello!
>
> Sometimes during work of tree grammar parser NullPointerException  
> is thrown.
> Exception happens at  
> "org.antlr.runtime.tree.CommonTreeNodeStream.walkBackToMostRecentNodeW 
> ithUnvisitedChildren(CommonTreeNodeStream.java :483)"

That line number does not make sense in my 3.0b5 version. that line is:

	public boolean hasUniqueNavigationNodes() {

  can you check the line number again?
Ter
> and caused by accessing null element at top of stack indexStack.
> This can appear unexpectedly on different rules, on different input  
> texts. I think sometimes it's because small lookahead or  
> disambiguation of  grammar rules, but why it's no detected at code  
> generation time?..
>
> Of course, I can provide grammars if it can help (they are too  
> large to post here).
> Version of antlr - 3.0b5.
>
> Thank you for regards!
> -- 
> Best regards,
> Eugene Seliverstov


From bonkabonka at gmail.com  Sat Nov 25 12:23:32 2006
From: bonkabonka at gmail.com (James Cook)
Date: Sat, 25 Nov 2006 15:23:32 -0500
Subject: [antlr-interest] Config file parsing grammar
In-Reply-To: <024F24B1-8438-4108-B26F-1E94496E5BF6@cs.usfca.edu>
References: <ab5ce4510611250221h442e7a95kf173fa88419a04b1@mail.gmail.com>
	<024F24B1-8438-4108-B26F-1E94496E5BF6@cs.usfca.edu>
Message-ID: <ab5ce4510611251223o40b2fda5k78050d45885d6d64@mail.gmail.com>

On 11/25/06, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi.  Try -trace or -debug options (that last one requires ANTLRWorks)

Okay, I did the trace but I'm not sure I understand what I'm seeing
(gods above, this stuff makes me stupid and full of suck).  I am
suspicious of some stuff I see towards the end of the trace, notably:

exit WHITESPACE 'f' line=5:23 failed=false backtracking=0
enter HOSTNAME 'f' line=5:23 failed=false backtracking=0
enter DNSCHAR 'f' line=5:23 failed=false backtracking=0
enter LETTER 'f' line=5:23 failed=false backtracking=0
exit LETTER 'o' line=5:24 failed=false backtracking=0
exit DNSCHAR 'o' line=5:24 failed=false backtracking=0
enter DNSCHAR 'o' line=5:24 failed=false backtracking=0
enter LETTER 'o' line=5:24 failed=false backtracking=0
exit LETTER 'u' line=5:25 failed=false backtracking=0
exit DNSCHAR 'u' line=5:25 failed=false backtracking=0
enter DNSCHAR 'u' line=5:25 failed=false backtracking=0
enter LETTER 'u' line=5:25 failed=false backtracking=0
exit LETTER 'r' line=5:26 failed=false backtracking=0
exit DNSCHAR 'r' line=5:26 failed=false backtracking=0
enter DNSCHAR 'r' line=5:26 failed=false backtracking=0
enter LETTER 'r' line=5:26 failed=false backtracking=0
exit LETTER '
' line=5:27 failed=false backtracking=0
exit DNSCHAR '
' line=5:27 failed=false backtracking=0
exit HOSTNAME '
' line=5:27 failed=false backtracking=0
enter NEWLINE '
' line=5:27 failed=false backtracking=0
exit NEWLINE '???' line=6:0 failed=false backtracking=0
enter go [@0,0:10='192.168.0.1',<22>,1:0] failed=false backtracking=0
enter hostline [@0,0:10='192.168.0.1',<22>,1:0] failed=false backtracking=0
alias: [@4,22:24='one',<26>,1:22]
alias: [@6,26:32='primary',<26>,1:26]
alias: [@8,34:39='master',<26>,1:34]
ip addr  : [@0,0:10='192.168.0.1',<22>,1:0]
hostname : [@2,12:20='one.local',<26>,1:12]
exit hostline [@10,41:41='\n',<5>,2:0] failed=false backtracking=0
exit go [@10,41:41='\n',<5>,2:0] failed=false backtracking=0

I don't have an exclamation followed by two upside-down question marks
in the file.  Also, the lexer is parsing the whole shootin' match but
the Parser seems to only process records prior to the comment or blank
line.  I think.  I'm running the file against a sample file that looks
like:

192.168.0.1     one.local one primary master

192.168.0.2     two.local two secondary
192.168.0.3     three.local three
192.168.0.4     four.local four

And, I'm attaching the trace (it's ... big - perhaps I need to
collapse some of the rules rather than referencing fragments).

-- 
James
-------------- next part --------------
A non-text attachment was scrubbed...
Name: trace
Type: application/octet-stream
Size: 26971 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061125/3cd95bef/attachment-0001.obj 

From antlr at mirality.co.nz  Sat Nov 25 14:10:21 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 26 Nov 2006 11:10:21 +1300
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <CDF7016E-3C7A-4D5B-A7C9-4968946969DB@cs.usfca.edu>
References: <7.0.1.0.0.20061126002902.03715e28@mirality.co.nz>
	<CDF7016E-3C7A-4D5B-A7C9-4968946969DB@cs.usfca.edu>
Message-ID: <7.0.1.0.0.20061126105023.0375c568@mirality.co.nz>

At 06:58 26/11/2006, Terence Parr wrote:
 >
 >> On an only-slightly-related note, I was also wondering what's
 >> the right way to deal with lexical ambiguity?  Say I've got 
one
 >> parsing context (eg. after a #include in C) where backslashes
 >> are treated literally, not as escapes, and another context
 >> (anywhere else) where they should be used as an escape 
sequence.
 >> And again, ideally I want the resulting token to contain the
 >> 'real' string (ie. after escapes had been acted on).  Is this
 >> even possible?  (I imagine you could do it by treating it as 
an
 >> island grammar.  But that seems a little heavyweight.)
 >
 >Easy enough, just match \  with a rule called FILENAME after
 >'#include'.

So, this would mean that the lexer and grammar are run in 
parallel, so that the grammar can influence the lexer?  For some 
reason, I always thought that the character stream was completely 
lexed, and then the resulting tokens were parsed.

Anyway, I tried that and it gave me a warning:

warning(208): Message.g3:99:1: The following token definitions are 
unreachable: STRING

The relevant definitions are:

FILENAME: '"' content=UnquotedText '"' { emit($content); 
ltoken()->type = FILENAME; };

fragment UnquotedText:	(~'"')* ;
	
STRING: '"' content=EscapedText '"'    { emit($content); 
ltoken()->type = STRING; };
	
fragment EscapedText: (EscapeSequence | ~('\\' | '"'))* ;


And yes, both FILENAME and STRING are referenced by the grammar.


From rob.hill at blueyonder.co.uk  Sat Nov 25 14:51:40 2006
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Sat, 25 Nov 2006 22:51:40 -0000
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <7.0.1.0.0.20061126105023.0375c568@mirality.co.nz>
Message-ID: <20061125225148.3D7FC190738@www.antlr.org>

I think you might need your keyword before the filename, to differentiate it
from the STRING rule.

FILENAME: 'include' '"' content=UnquotedText '"' { emit($content);


/2ob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: 25 November 2006 22:10
> To: Terence Parr
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] String lexing and partial tokens
> 
> At 06:58 26/11/2006, Terence Parr wrote:
>  >
>  >> On an only-slightly-related note, I was also wondering what's
>  >> the right way to deal with lexical ambiguity?  Say I've got
> one
>  >> parsing context (eg. after a #include in C) where backslashes
>  >> are treated literally, not as escapes, and another context
>  >> (anywhere else) where they should be used as an escape
> sequence.
>  >> And again, ideally I want the resulting token to contain the
>  >> 'real' string (ie. after escapes had been acted on).  Is this
>  >> even possible?  (I imagine you could do it by treating it as
> an
>  >> island grammar.  But that seems a little heavyweight.)
>  >
>  >Easy enough, just match \  with a rule called FILENAME after
>  >'#include'.
> 
> So, this would mean that the lexer and grammar are run in
> parallel, so that the grammar can influence the lexer?  For some
> reason, I always thought that the character stream was completely
> lexed, and then the resulting tokens were parsed.
> 
> Anyway, I tried that and it gave me a warning:
> 
> warning(208): Message.g3:99:1: The following token definitions are
> unreachable: STRING
> 
> The relevant definitions are:
> 
> FILENAME: '"' content=UnquotedText '"' { emit($content);
> ltoken()->type = FILENAME; };
> 
> fragment UnquotedText:	(~'"')* ;
> 
> STRING: '"' content=EscapedText '"'    { emit($content);
> ltoken()->type = STRING; };
> 
> fragment EscapedText: (EscapeSequence | ~('\\' | '"'))* ;
> 
> 
> And yes, both FILENAME and STRING are referenced by the grammar.




From contingencyplan at gmail.com  Sat Nov 25 19:28:56 2006
From: contingencyplan at gmail.com (Brian DeVries)
Date: Sat, 25 Nov 2006 21:28:56 -0600
Subject: [antlr-interest] Is dupTree( ) completely recursive?
Message-ID: <a3db01e90611251928k459f0820u1ab4e40901723931@mail.gmail.com>

I'm looking at the code in BaseTree.dupTree( ) and CommonTree.dupNode(), and
the comment says it recursively walks the tree, but the code only calls
dupNode( ) for each child node, not dupTree( ). Thus, this only does a
one-level down duplication, rather than duplicating the entire tree all the
way down. As a result, I'm having to subclass CommonTree and write a
dupTree( ) that recursively invokes dupTree( ) for every child to grab the
whole tree.

Is there an easier way to do this? Am I missing something? I would think
that BaseTree.dupTree( ) would do this for me, but it doesn't seem to.

Thanks,
~Brian DeVries
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061125/4279f40e/attachment.html 

From dave at badgers-in-foil.co.uk  Sun Nov 26 05:54:51 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 26 Nov 2006 13:54:51 +0000
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
	<824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
	<6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>
Message-ID: <20061126135451.GA11615@badgers-in-foil.co.uk>

On Fri, Nov 24, 2006 at 02:21:10PM -0800, Terence Parr wrote:
> Hi. website is very snappy on my side so it is not the site.  Is  
> probably some kind of network issue.  I have heard people from Europe  
> having trouble getting to the site.  Where are you accessing it from?

I just downloaded 3.0b5, at 616.06 B/s according to wget.  Similarly
slow speeds using Firefox.


Here's the path from me to antlr.org:

$ tracepath www.antlr.org
 1:  192.168.9.162 (192.168.9.162)                          0.434ms pmtu 1500
 1:  192.168.9.1 (192.168.9.1)                              2.020ms 
 2:  10.171.128.1 (10.171.128.1)                           19.624ms 
 3:  gsr01-ca.blueyonder.co.uk (62.30.144.161)             19.505ms 
 4:  pc-62-30-250-45-ha.blueyonder.co.uk (62.30.250.45)    25.427ms 
 5:  pc-62-30-250-58-ha.blueyonder.co.uk (62.30.250.58)    17.746ms 
 6:  ex1-g1-0-0.linxuk.sbcglobal.net (195.66.224.210)      18.019ms 
 7:  ded-p1-0.pltn13.sbcglobal.net (151.164.191.245)       asymm 19 176.700ms 
 8:  VIP-University-of-San-Francisco-IAF1073874.cust-rtr.pacbell.net (69.108.221.142) asymm 20 178.468ms 
  9:  www.antlr.org (138.202.175.217)                      asymm 21 180.776ms 

Latency is pretty low, with no spikes as far as I can see:

  --- 138.202.175.217 ping statistics ---
  27 packets transmitted, 27 received, 0% packet loss, time 26002ms
  rtt min/avg/max/mdev = 172.488/179.802/193.441/6.050 ms

For comparisons sake, I can download the ~700Kb JavaIO-notes.pdf from
Terr's homepage on cs.usfca.edu at +200Kb/s.  The tracepath from here to
www.cs.usfca.edu looks exactly the same until after the host
VIP-University-of-San-Francisco-IAF1073874.cust-rtr.pacbell.net



ta,
dave

-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Sun Nov 26 06:11:10 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 26 Nov 2006 14:11:10 +0000
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <20061126135451.GA11615@badgers-in-foil.co.uk>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
	<824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
	<6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>
	<20061126135451.GA11615@badgers-in-foil.co.uk>
Message-ID: <20061126141110.GB11615@badgers-in-foil.co.uk>

On Sun, Nov 26, 2006 at 01:54:51PM +0000, David Holroyd wrote:
> I just downloaded 3.0b5, at 616.06 B/s according to wget.  Similarly
> slow speeds using Firefox.

> For comparisons sake, I can download the ~700Kb JavaIO-notes.pdf from
> Terr's homepage on cs.usfca.edu at +200Kb/s.  The tracepath from here to
> www.cs.usfca.edu looks exactly the same until after the host
> VIP-University-of-San-Francisco-IAF1073874.cust-rtr.pacbell.net

Sorry, that comparison appears to be bogus, as a second attempt to
download the 3.0b5 release has it coming down the pipe at a far more
resonable speed.

Over the course of five or six downloads of both files, I've seen the
connection all but stall completely once for each though :(


dave

-- 
http://david.holroyd.me.uk/

From mail at martin-probst.com  Sun Nov 26 08:36:45 2006
From: mail at martin-probst.com (Martin Probst)
Date: Sun, 26 Nov 2006 17:36:45 +0100
Subject: [antlr-interest] [newbie] nondeterminism upon error
In-Reply-To: <46F24094-73DB-46EB-A920-BFD4D4B8DD1E@eidhof.nl>
References: <46F24094-73DB-46EB-A920-BFD4D4B8DD1E@eidhof.nl>
Message-ID: <7BE077A0-48C4-4D75-BF6C-C77D691D57D2@martin-probst.com>

Hi,

> Can anyone give me some hints? I don't get why that rule is  
> nondeterministic... If anyone wants to see the whole file I can put  
> it online somewhere.

Can varid be followed by another varid or idrest?

If you have:
varid: SMALL (idrest)*;
idrest: (SMALL | LARGE | ... )*
Then the parser will first consume a SMALL token, then for example  
take another SMALL token, then the parser will be within the idrest  
rule. If now another SMALL token comes up, the parser cannot decide  
whether it should parse the new token as part of the idrest rule  
('alternative 1') or exit the idrest rule and parse it as another  
iteration of the (idrest)* block ('exit branch').

Does this help?

Regards,
Martin

From brian-antlr at slesinsky.org  Sun Nov 26 09:57:27 2006
From: brian-antlr at slesinsky.org (Brian Slesinsky)
Date: Sun, 26 Nov 2006 09:57:27 -0800
Subject: [antlr-interest] trouble with ANTLR website
In-Reply-To: <20061126141110.GB11615@badgers-in-foil.co.uk>
References: <824b0d840611241253p155c206ase4ee56fcda0a9699@mail.gmail.com>
	<824b0d840611241319i7f523068xe8c452ba0bb8ad41@mail.gmail.com>
	<824b0d840611241405t7c766353q75e5e64498c159b3@mail.gmail.com>
	<6689EC67-1EE5-454C-9A0B-EF76A4EF62B8@cs.usfca.edu>
	<20061126135451.GA11615@badgers-in-foil.co.uk>
	<20061126141110.GB11615@badgers-in-foil.co.uk>
Message-ID: <824b0d840611260957j7e85d9a2md14d9f8d6028a143@mail.gmail.com>

That corresponds to what I've seen: normally very fast downloads, but
occasional hangs.  It seems to happen only in large files such as
3.0b5.

I wonder if it's a disk access issue?  Maybe we don't see it anymore
once the data has been cached.

- Brian

On 11/26/06, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Sun, Nov 26, 2006 at 01:54:51PM +0000, David Holroyd wrote:
> > I just downloaded 3.0b5, at 616.06 B/s according to wget.  Similarly
> > slow speeds using Firefox.
>
> > For comparisons sake, I can download the ~700Kb JavaIO-notes.pdf from
> > Terr's homepage on cs.usfca.edu at +200Kb/s.  The tracepath from here to
> > www.cs.usfca.edu looks exactly the same until after the host
> > VIP-University-of-San-Francisco-IAF1073874.cust-rtr.pacbell.net
>
> Sorry, that comparison appears to be bogus, as a second attempt to
> download the 3.0b5 release has it coming down the pipe at a far more
> resonable speed.
>
> Over the course of five or six downloads of both files, I've seen the
> connection all but stall completely once for each though :(
>
>
> dave
>
> --
> http://david.holroyd.me.uk/
>
>

From rschulz at sonic.net  Sun Nov 26 11:05:40 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 26 Nov 2006 11:05:40 -0800
Subject: [antlr-interest] Parsing Very Large Inputs
Message-ID: <200611261105.40756.rschulz@sonic.net>

Hi,

I'm using ANTLR v3 (3.0b5).

If I understand correctly, the Token sequence produced by an ANTLR 
lexical analyzer is retained throughout the parse by CommonTokenStream. 
Ordinarily, this is fine, but when parsing very large inputs, it can 
place an excessive demand on primary storage and become a limiting 
factor for the size of inputs that can be processed without the 
allocation of inordinate amounts of RAM.

It appears that TokenRewriteStream would allow me to discard old Token 
instances once they're no longer needed. In my parser, I do this in 
conjunction with collecting any comment Tokens that may appear between 
top-level constructs in the language.

So I switched to using a TokenRewriteStream and then invoked 
TokenRewriteStream.delete(0, newFirstTokenIndex) after parsing every 
top-level construct (where newFirstTokenIndex is the index of the first 
token in the top-level construct).

However, this does not seem to have the effect on RAM consumption I'd 
hoped. The JavaDoc comment on TokenRewriteStream says the manipulations 
it performs are carried out "lazily," so I added a call to 
TokenRewriteStream.toString(0, 1) after the delete(...) call. When I 
print this string it shows the text of the newFirstTokenIndex, which 
seems correct.

With this modification, the parse continues normally but it does not 
appear memory use is significantly reduced. I noticed that the token 
indexes associated with the left-hand token of successive top-level 
constructs increase as if no Token deletion was performed, though I'm 
guessing that's as intended.

Apparently, the Token structures remain and only the text to which they 
refer is discarded. It also seems, based on the comments for 
TokenRewriteStream that a lot of bookkeeping is put in place to record 
the manipulations.

Is there a simpler way to simply and completely discard old Tokens?


Randall Schulz

From parrt at cs.usfca.edu  Sun Nov 26 11:48:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 26 Nov 2006 11:48:27 -0800
Subject: [antlr-interest] Parsing Very Large Inputs
In-Reply-To: <200611261105.40756.rschulz@sonic.net>
References: <200611261105.40756.rschulz@sonic.net>
Message-ID: <CE23F0E6-9931-4779-A5D9-6222E1B5F3CC@cs.usfca.edu>

hi.  Those streams never throw tokens out.  It creates text based  
upon the tokens in the buffer and operations you perform, but it  
never does a delete...it just skips them during printing.

Implement TokenStream interface and just don't keep the tokens  
around.  I think it's just nextToken() and LT() or something.

Ter
On Nov 26, 2006, at 11:05 AM, Randall R Schulz wrote:

> Hi,
>
> I'm using ANTLR v3 (3.0b5).
>
> If I understand correctly, the Token sequence produced by an ANTLR
> lexical analyzer is retained throughout the parse by  
> CommonTokenStream.
> Ordinarily, this is fine, but when parsing very large inputs, it can
> place an excessive demand on primary storage and become a limiting
> factor for the size of inputs that can be processed without the
> allocation of inordinate amounts of RAM.
>
> It appears that TokenRewriteStream would allow me to discard old Token
> instances once they're no longer needed. In my parser, I do this in
> conjunction with collecting any comment Tokens that may appear between
> top-level constructs in the language.
>
> So I switched to using a TokenRewriteStream and then invoked
> TokenRewriteStream.delete(0, newFirstTokenIndex) after parsing every
> top-level construct (where newFirstTokenIndex is the index of the  
> first
> token in the top-level construct).
>
> However, this does not seem to have the effect on RAM consumption I'd
> hoped. The JavaDoc comment on TokenRewriteStream says the  
> manipulations
> it performs are carried out "lazily," so I added a call to
> TokenRewriteStream.toString(0, 1) after the delete(...) call. When I
> print this string it shows the text of the newFirstTokenIndex, which
> seems correct.
>
> With this modification, the parse continues normally but it does not
> appear memory use is significantly reduced. I noticed that the token
> indexes associated with the left-hand token of successive top-level
> constructs increase as if no Token deletion was performed, though I'm
> guessing that's as intended.
>
> Apparently, the Token structures remain and only the text to which  
> they
> refer is discarded. It also seems, based on the comments for
> TokenRewriteStream that a lot of bookkeeping is put in place to record
> the manipulations.
>
> Is there a simpler way to simply and completely discard old Tokens?
>
>
> Randall Schulz


From kroepke at classdump.org  Sun Nov 26 17:34:29 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 27 Nov 2006 02:34:29 +0100
Subject: [antlr-interest] new "tutorial" for v3
In-Reply-To: <824b0d840611242254l2eed790o9740956c1b6e1ccd@mail.gmail.com>
References: <EB5430AC-E81E-4837-B3C8-C4904EDF4BFB@cs.usfca.edu>
	<824b0d840611242254l2eed790o9740956c1b6e1ccd@mail.gmail.com>
Message-ID: <1460DAE6-2C78-4658-8B59-A46C372A65F6@classdump.org>


On 25. Nov 2006, at 7:54 , Brian Slesinsky wrote:

> In the whitespace rule, why is it using skip() instead of  
> $channel=HIDDEN?

Using a different channel will retain the tokens but hide them from  
the parser, but skip()
won't even emit a token. If you are certain that you don't ever need  
the whitespace you can
save yourself the overhead of creating them.

HTH,

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sun Nov 26 17:40:39 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 27 Nov 2006 02:40:39 +0100
Subject: [antlr-interest] Is dupTree( ) completely recursive?
In-Reply-To: <a3db01e90611251928k459f0820u1ab4e40901723931@mail.gmail.com>
References: <a3db01e90611251928k459f0820u1ab4e40901723931@mail.gmail.com>
Message-ID: <BC675FEC-8DC2-45DB-8B64-D6484FF6B65D@classdump.org>


On 26. Nov 2006, at 4:28 , Brian DeVries wrote:

> I'm looking at the code in BaseTree.dupTree( ) and  
> CommonTree.dupNode(), and
> the comment says it recursively walks the tree, but the code only  
> calls
> dupNode( ) for each child node, not dupTree( ). Thus, this only does a
> one-level down duplication, rather than duplicating the entire tree  
> all the
> way down. As a result, I'm having to subclass CommonTree and write a
> dupTree( ) that recursively invokes dupTree( ) for every child to  
> grab the
> whole tree.
>
> Is there an easier way to do this? Am I missing something? I would  
> think
> that BaseTree.dupTree( ) would do this for me, but it doesn't seem to.

Apparently that's a bug. I didn't even realize before, I had simply  
recoded
that from scratch for Objective C, so I didn't notice that behavior  
in the
Java runtime.

It seems that your solution is the way to go. You are right,  
BaseTree.dupTree()
should be doing exactly that.
I filed a bug: <http://www.antlr.org:8888/browse/ANTLR-50>

This should be fixed in the next beta release.

Thanks!

-k
-- 
Kay R?pke
http://classdump.org/





From external.Stephan.Schnitzer at de.bosch.com  Mon Nov 27 00:40:27 2006
From: external.Stephan.Schnitzer at de.bosch.com (EXTERNAL Schnitzer Stephan (Praktikant;
	BEG-PG/EAP5))
Date: Mon, 27 Nov 2006 09:40:27 +0100
Subject: [antlr-interest] v3 lexer problem
Message-ID: <25EF88D5A001C54697E67354AE71A63A8BDECF@si-mail15.de.bosch.com>

Hi,

I use v3.0b5 and have a (probably simple) lexer problem.

grammar Test;
protected ALPHABET : ('a'..'z'|'A'..'Z');
file    : ('T' . | 'Test')  EOF;
----------------
public static void main(String[] args) throws Exception {	
   TestLexer lexer = new TestLexer(new ANTLRStringStream("Te"));
   CommonTokenStream tokens = new CommonTokenStream(lexer);
   TestParser parser = new TestParser(tokens);
   parser.file();
}
----------------

I expected "Te" matching to "'T' ."
But it returns "[mTokens, mT6]: line 1:2 mismatched char: '?' on line 1;
expecting char 's'
[file]: line 0:-1 state 0 (decision=1) no viable alt;
token=[@-1,0:0='<no text>',<-1>,0:-1]"

The method mTokens() reads "Te" and then tries to match "Test", which
fails.
However if I use 
file    : ('T' . | 'T''e''s''t')  EOF;
everything works as expected. But it looks ugly, especially with long
expressions! 

Does anybody know, how I can get the same behaviour using 'Test' instead
of 'T''e''s''t'?

Regards,
Stephan


From kroepke at classdump.org  Mon Nov 27 05:18:50 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 27 Nov 2006 14:18:50 +0100
Subject: [antlr-interest] v3 c# code gen: filter=true problem
In-Reply-To: <4.3.2.7.2.20061124142526.031d93c0@mail.cyberplasm.com>
References: <c58ab143a5ae4eb1b4b52400ae26add3@cyberplasm.com>
	<4.3.2.7.2.20061124142526.031d93c0@mail.cyberplasm.com>
Message-ID: <57A519A1-9E8C-4C6E-90A4-873099D54479@classdump.org>


On 24. Nov 2006, at 22:33 , Paul Shaffer wrote:

> Test case for grammer is below. If filter=true nothing is matched,  
> even the input lines I know will match the string_def rule. If  
> false the correct matches are found. I'm sure I completely  
> misunderstand the purpose of filter or where to use it. The  
> fuzzyJava example is just a lexer, perhaps that's my problem.

Exactly. You need to split it up in two grammars. Combined grammars  
don't support filter yet.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Mon Nov 27 09:05:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 27 Nov 2006 09:05:01 -0800
Subject: [antlr-interest] public sign-up off on the wiki
Message-ID: <E556E8B4-A37F-4767-9BD4-C4E0013513FA@cs.usfca.edu>

Hi, I had to turn off public sign-up of new users because some jerk  
was signing up with a bunch of spam usernames.  If you would like to  
be a user of the wiki so that you can add content, please e-mail me  
and I will add you.  I need your full name and e-mail address.

Thanks,
Ter

From parrt at cs.usfca.edu  Mon Nov 27 09:49:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 27 Nov 2006 09:49:38 -0800
Subject: [antlr-interest] v3 lexer problem
In-Reply-To: <25EF88D5A001C54697E67354AE71A63A8BDECF@si-mail15.de.bosch.com>
References: <25EF88D5A001C54697E67354AE71A63A8BDECF@si-mail15.de.bosch.com>
Message-ID: <B2DD8D17-A259-4D20-AFE3-81DAF64768F6@cs.usfca.edu>

Hi.  '.' in the parser matches a token not any random character.  You  
must be very careful how you draw the line between the lexer and the  
parser. also note that protected->fragment in version 3.
Ter
On Nov 27, 2006, at 12:40 AM, EXTERNAL Schnitzer Stephan (Praktikant;  
BEG-PG/EAP5) wrote:

> Hi,
>
> I use v3.0b5 and have a (probably simple) lexer problem.
>
> grammar Test;
> protected ALPHABET : ('a'..'z'|'A'..'Z');
> file    : ('T' . | 'Test')  EOF;
> ----------------
> public static void main(String[] args) throws Exception {	
>    TestLexer lexer = new TestLexer(new ANTLRStringStream("Te"));
>    CommonTokenStream tokens = new CommonTokenStream(lexer);
>    TestParser parser = new TestParser(tokens);
>    parser.file();
> }
> ----------------
>
> I expected "Te" matching to "'T' ."
> But it returns "[mTokens, mT6]: line 1:2 mismatched char: '?' on  
> line 1;
> expecting char 's'
> [file]: line 0:-1 state 0 (decision=1) no viable alt;
> token=[@-1,0:0='<no text>',<-1>,0:-1]"
>
> The method mTokens() reads "Te" and then tries to match "Test", which
> fails.
> However if I use
> file    : ('T' . | 'T''e''s''t')  EOF;
> everything works as expected. But it looks ugly, especially with long
> expressions!
>
> Does anybody know, how I can get the same behaviour using 'Test'  
> instead
> of 'T''e''s''t'?
>
> Regards,
> Stephan
>


From jimi at intersystems.com  Mon Nov 27 13:14:04 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 27 Nov 2006 16:14:04 -0500
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <CDF7016E-3C7A-4D5B-A7C9-4968946969DB@cs.usfca.edu>
Message-ID: <20061127211405.0BB961540@mail.intersystems.com>



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-

> Looking in the archives seems to indicate that ! is no longer  
> supported, which is a pain in the butt.  It was a nice simple  
> syntax, and the alternatives all seem a lot more complicated.   
> Incidentally, what *is* the recommended alternative?  Further posts  
> seemed to suggest that calling $setText or setText would do the  
> trick, but those functions don't seem to exist in the C runtime  
> (which is what I'm trying to use); or at least I can't find them.

You can  ask Jim Idle about that, but we decided to use methods for  
setting the text rather than implementing ! which makes everything  
inefficient. I could swear there was something in the documentation.

I failed to get the C codegen templates up to date with the new $lexerelement codegen templates, one of these additions that I have not got to yet is $setText. 

however, in this case all you want to do is create the token such that the start and end of it exclude the delimiters, so you don?t need to do a $setText.

The lexer emits a token automatically if you have not emitted one, but if you use (C output) emitNew() in an action then it will use this as the token. So, to exclude the start and end character:

STRING: '"' (~'"')* '"'
	{
		emitNew(type,line,charPosition,channel,start,getCharIndex()-1);
	}

Notes: 
  That might actually need to be getCharIndex()-2;
  I will add the lexer $lexerelement constructus shortly, at which point you will need to use:
	emitNew($type,$line,$charPosition,$channel,$start,getCharIndex()-1);

Also, note the string is not actualized (does not create an ANTLR3_STRING C structure) unless you reference the .text in the parser. Whereas a $setTExt will create an ANTLR3_STRING even if you don?t end up needing it. This is the lexer does not create any strings that are not needed, with the associated malloc() and free() etc. This does mean though that you will get a new copy of the token text everytime you reference .text, so if you want to reference the text multiple times, create a local pointer and reuse it:

summat: s=STRING x y z
	{
		ANTLR3_STRING theString;

		theString = $s.text;

		printf("Char 3 is '%c', char 5 is '%c'\n", theString->charAt(theString, 3), theString->charAt(theString, 5)
	;

The text of an ANTLR3_STRING is available at theString->chars, but if this is a UTF16 or other non-ascii input, then you would have to code lots of string things yourself. The ANTLR3_STRING comes with a number of helper methods that are encoding independent such as subString(), charAt(), append(), addc() and so on, so it is generally better to work with these.

As people are starting to try the C output, it is probably time for me to create the C equivalents of the Java examples and provide the doxygen runtime docs etc. I will shortly ask Ter to put the C runtime distribution as a download link on the ANTLR3 page (VS2005 .sln  and ./configure).

Jim

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.14.17/553 - Release Date: 11/27/2006 4:00 AM
 

From antlr1 at cyberplasm.com  Mon Nov 27 14:25:55 2006
From: antlr1 at cyberplasm.com (Paul Shaffer)
Date: Mon, 27 Nov 2006 15:25:55 -0700
Subject: [antlr-interest] v3.0b5: input size problem
Message-ID: <4.3.2.7.2.20061127152536.0264e768@mail.cyberplasm.com>


>>Sorry, I see this stopping is actually due to my parsing errors. As
>>I fix the errors I am able to parse farther into the input text, I
>>am up to line 1600 or so now. But there are no errors being
>>reported when it stops. I wish I knew how to get errors to show
>>up-- any suggestions appreciated.
>
>Yikes. that sounds like a problem on my side...can you run with
>ANTLRWorks to figure out where it is?
>Ter


Don't have anything from ANTLRWorks yet.

In general AFAIK there is no error return or exception when the parser 
quits unexpectedly. If there is an event I don't know how subscribe to it. 
My project will require some way to inform the user that there was a parser 
error.



From parrt at cs.usfca.edu  Mon Nov 27 14:38:48 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 27 Nov 2006 14:38:48 -0800
Subject: [antlr-interest] v3.0b5: input size problem
In-Reply-To: <4.3.2.7.2.20061127152536.0264e768@mail.cyberplasm.com>
References: <4.3.2.7.2.20061127152536.0264e768@mail.cyberplasm.com>
Message-ID: <AD6FA152-F8BA-4FF1-95DF-8276CDBB12CA@cs.usfca.edu>


On Nov 27, 2006, at 2:25 PM, Paul Shaffer wrote:

>
>>> Sorry, I see this stopping is actually due to my parsing errors. As
>>> I fix the errors I am able to parse farther into the input text, I
>>> am up to line 1600 or so now. But there are no errors being
>>> reported when it stops. I wish I knew how to get errors to show
>>> up-- any suggestions appreciated.
>>
>> Yikes. that sounds like a problem on my side...can you run with
>> ANTLRWorks to figure out where it is?
>> Ter
>
>
> Don't have anything from ANTLRWorks yet.
>
> In general AFAIK there is no error return or exception when the  
> parser quits unexpectedly. If there is an event I don't know how  
> subscribe to it. My project will require some way to inform the  
> user that there was a parser error.

You can override report() no problem and also set the  
@rulecatchclause {...} action or whatever it is called.  I would turn  
on -trace  And then find out where is stopping. it says enter and  
exit rule showing the current symbol of lookahead as it does so.

Ter

From asmith at moncons.co.uk  Mon Nov 27 16:17:06 2006
From: asmith at moncons.co.uk (Andrew Smith)
Date: Tue, 28 Nov 2006 00:17:06 +0000
Subject: [antlr-interest] ANTLRWorks1.0b6 New useability annoyances
In-Reply-To: <8344265E-7EE0-42E0-931D-13F2A540F879@mac.com>
References: <44F6C702.2060704@moncons.co.uk>
	<A49B8FA9-90B2-4FAA-8ABE-5FECD8C30DBC@mac.com>
	<44FC7864.8000302@moncons.co.uk>
	<8344265E-7EE0-42E0-931D-13F2A540F879@mac.com>
Message-ID: <456B8002.4050908@moncons.co.uk>

Hi Jean,

There have been notable improvements in your amendments to ANTLRWorks,
thanks, but b5 to b6 has taken some steps back. I have noticed two
changes that are not helpful:
a) The ability to retain the size and position of project windows has
stopped working as a result of this upgrade - on Win2K/Java 1.5.0.09 at
least. Whatever the setting of the check box in Preferences, and making
sure that Apply is clicked, if ANTLRWorks is restarted or a project is
reloaded the standard window (top left corner and 800x600 overall) will
appear.
b)In b6 the only way to alter the output directory seems to be to change
the overall preferences. On generation or debugging in b5 and earlier a
directory change dialogue was offered if a grammar file was altered and
saved, or even just reloaded. I found this very useful to keep work on
different grammars separate.

The first one at least was a change that you introduced (b1 to b2 or b3)
in the development process and it would be a shame to lose it again,
whilst the second was welcome from the very first beta!,

Thanks,
Andrew Smith

From lgcraymer at yahoo.com  Mon Nov 27 16:27:17 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 27 Nov 2006 16:27:17 -0800 (PST)
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <20061127211405.0BB961540@mail.intersystems.com>
Message-ID: <59792.3420.qm@web55913.mail.re3.yahoo.com>


--- Jim Idle <jimi at intersystems.com> wrote:

..
> You can  ask Jim Idle about that, but we decided to
> use methods for  
> setting the text rather than implementing ! which
> makes everything  
> inefficient. I could swear there was something in
> the documentation.

! in the lexer does not "make everything inefficient";
you just have to be smart about the implementation. 
The lexer editing via ! that is currently in the
Yggdrasil 0.5b releases (I'll have b2 out soon) costs
about 5-10% (rough estimate from looking at generated
code); once I can analyze which rules edit, that drops
still further.

--Loring


 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com

From kroepke at classdump.org  Mon Nov 27 16:39:55 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 28 Nov 2006 01:39:55 +0100
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <59792.3420.qm@web55913.mail.re3.yahoo.com>
References: <59792.3420.qm@web55913.mail.re3.yahoo.com>
Message-ID: <91C038C9-D23D-480E-9D3B-BE6E5DB58B22@classdump.org>


On 28. Nov 2006, at 1:27 , Loring Craymer wrote:

>> You can  ask Jim Idle about that, but we decided to
>> use methods for
>> setting the text rather than implementing ! which
>> makes everything
>> inefficient. I could swear there was something in
>> the documentation.
>
> ! in the lexer does not "make everything inefficient";
> you just have to be smart about the implementation.

Then read it as "which makes everything inefficient,
including the current development process, since no one
has stepped up to do it."

I promise that this is the last time I'll take the bait.

> The lexer editing via ! that is currently in the
> Yggdrasil 0.5b releases (I'll have b2 out soon) costs
> about 5-10% (rough estimate from looking at generated
> code); once I can analyze which rules edit, that drops
> still further.

Care to point me at the release? I'm not bad a googling for
stuff, but for the life of me, I can't find it.
All I get is an empty [1] project.

-k

[1] <http://antlr-yggdrasil.cvs.sourceforge.net/antlr-yggdrasil/>

-- 
Kay R?pke
http://classdump.org/





From asmith at moncons.co.uk  Mon Nov 27 16:44:08 2006
From: asmith at moncons.co.uk (Andrew Smith)
Date: Tue, 28 Nov 2006 00:44:08 +0000
Subject: [antlr-interest] Postscript to "ANTLRWorks1.0b6 New useability
	annoyances"
Message-ID: <456B8658.2050702@moncons.co.uk>

Hi  Jean,

I do not know if it is directly connected to your window changes or not,
but I have just noticed that a new chain of exceptions is now triggered
on using the Debugger windows. These appeared in the Console pane on
running the very first token into the Tree building part of Ter's new
expression evaluator tutorial, using his example input.

[00:24:09] javax.swing.text.BadLocationException: Position not
represented by view
	at javax.swing.text.CompositeView.modelToView(Unknown Source)
	at javax.swing.text.BoxView.modelToView(Unknown Source)
	at javax.swing.plaf.basic.BasicTextUI$RootView.modelToView(Unknown Source)
	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
	at javax.swing.text.JTextComponent.modelToView(Unknown Source)
	at org.antlr.works.debugger.input.DBInputProcessorToken$1.run(Unknown
Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)

HTH,
Andrew Smith

From lgcraymer at yahoo.com  Mon Nov 27 16:46:48 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 27 Nov 2006 16:46:48 -0800 (PST)
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <91C038C9-D23D-480E-9D3B-BE6E5DB58B22@classdump.org>
Message-ID: <302859.78610.qm@web55903.mail.re3.yahoo.com>

Kay--

That's where it (starting with 0.5b2; 0.5b1 is in the
antlr.org file sharing section) will go--I have been
too busy with work to finish getting the sourceforge
project set up.  I had hoped to manage that this
weekend--it was supposed to be a 4 day weekend, after
all--but spent too much time getting a critical
presentation together instead.

Cheers!

--Loring


--- Kay Roepke <kroepke at classdump.org> wrote:

> 
> On 28. Nov 2006, at 1:27 , Loring Craymer wrote:
> 
> >> You can  ask Jim Idle about that, but we decided
> to
> >> use methods for
> >> setting the text rather than implementing ! which
> >> makes everything
> >> inefficient. I could swear there was something in
> >> the documentation.
> >
> > ! in the lexer does not "make everything
> inefficient";
> > you just have to be smart about the
> implementation.
> 
> Then read it as "which makes everything inefficient,
> including the current development process, since no
> one
> has stepped up to do it."
> 
> I promise that this is the last time I'll take the
> bait.
> 
> > The lexer editing via ! that is currently in the
> > Yggdrasil 0.5b releases (I'll have b2 out soon)
> costs
> > about 5-10% (rough estimate from looking at
> generated
> > code); once I can analyze which rules edit, that
> drops
> > still further.
> 
> Care to point me at the release? I'm not bad a
> googling for
> stuff, but for the life of me, I can't find it.
> All I get is an empty [1] project.
> 
> -k
> 
> [1]
>
<http://antlr-yggdrasil.cvs.sourceforge.net/antlr-yggdrasil/>
> 
> -- 
> Kay R?pke
> http://classdump.org/
> 
> 
> 
> 
> 



 
____________________________________________________________________________________
Want to start your own business?
Learn how on Yahoo! Small Business.
http://smallbusiness.yahoo.com/r-index

From jimi at intersystems.com  Mon Nov 27 16:53:18 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 27 Nov 2006 19:53:18 -0500
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <59792.3420.qm@web55913.mail.re3.yahoo.com>
Message-ID: <20061128005251.7557F17BC@mail.intersystems.com>

Loring,

To my mind, 5-10% (assuming that you mean runtime) is still quite an overhead, which seems quite a lot for such a feature when there are other ways of achieving the same that don't really cost anything (at least in the C runtime any way). 

I would be interested in how you measure this, because anything that causes the token string to be created rather than just be indexes into the source would surely have a higher overhead than this. I suppose that what could be done would be that when a part of the token spec includes ! on a fixed length leading or trailing part of the token, then the start and end indexes could be adjusted at token emit time, but it just doesn't seem such a big deal to me, so long as there are reasonable ways of achieving the same thing manually. It seems that the removal of " in strings is in fact the main use for this functionality.

However, I don't believe that Ter rejected looking at this out of hand, just that for the moment there are plenty of other things to work on. That said, for my part, I think it is just a matter of documenting some ways to achieve the same thing and people getting used to them. I don't think that people object to changing ways of doing things if they are reasonable. While it is obviously quite a lot easier to just add ! to the matching text, you do this work once, whereas the resulting lexer will presumably run many more times than once; it seems that it is worth the small effort at grammar specification time to keep the lexer as trim as possible.

I am a fan of the ANTLR 3 approach of simplification over ANTLR 2, which generally yields leaner code generation, and transferring a certain amount of the effort to the grammar author. There are limits to this of course, but I think ANTLR 3 is a reasonable blend, given that it makes grammar programming in general so much easier than its predecessors. 

However I am sure that your efforts in this regard will be appreciated if they turn out to yield something that has very little overhead and little time to incorporate into the main ANTLR product.

Jim



-----Original Message-----
From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
Sent: Monday, November 27, 2006 4:27 PM
To: Jim Idle; antlr-interest at antlr.org
Subject: Re: [antlr-interest] String lexing and partial tokens


--- Jim Idle <jimi at intersystems.com> wrote:

..
> You can  ask Jim Idle about that, but we decided to
> use methods for  
> setting the text rather than implementing ! which
> makes everything  
> inefficient. I could swear there was something in
> the documentation.

! in the lexer does not "make everything inefficient";
you just have to be smart about the implementation. 
The lexer editing via ! that is currently in the
Yggdrasil 0.5b releases (I'll have b2 out soon) costs
about 5-10% (rough estimate from looking at generated
code); once I can analyze which rules edit, that drops
still further.

--Loring


 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.14.17/553 - Release Date: 11/27/2006
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.14.17/553 - Release Date: 11/27/2006
 

From asmith at moncons.co.uk  Mon Nov 27 17:18:48 2006
From: asmith at moncons.co.uk (Andrew Smith)
Date: Tue, 28 Nov 2006 01:18:48 +0000
Subject: [antlr-interest] [Fwd: Postscript to "ANTLRWorks1.0b6 New
	useability annoyances"]
Message-ID: <456B8E78.1060108@moncons.co.uk>

Hi Jean,

Further to the second mail this evening, further checking has shown that
the Java exceptions result from using debugger settings of DOS line
endings to read input from your input dialogue rather than the Linux
format required. The exceptions are therefore unlikely to be connected
to the window problems.

It also follows that it is getting too late for me to think straight
tonight,

Andrew Smith

From lgcraymer at yahoo.com  Mon Nov 27 17:48:15 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 27 Nov 2006 17:48:15 -0800 (PST)
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <20061128005251.7557F17BC@mail.intersystems.com>
Message-ID: <20061128014815.32928.qmail@web55902.mail.re3.yahoo.com>

Jim--

The basic implementation is to have a "copy" stream
and to only copy characters there when necessary; that
is, when characters are deleted from the middle of a
lexed character sequence.  If you trim characters from
the ends of the sequence only, then there is no
copying.  There is then a four-state machine that
either 1.) skips leading characters, 2.) increments
the end counter, 3.) copies text, or 4.) skips
(possibly trailing) characters.

The reason for the current performance hit is that the
logic for character handling is repeated everywhere
instead of just in the rules that edit.  The 5-10%
figure does not include copying, which would add
additional overhead--but I've never run into a grammar
that needed copying, although I can see the value. 
The next revision will be to make only rules that edit
suffer the performance hit.  I will note that the
baseline ANTLR 3 approach of "construct your own
string" has much higher overheads for character
editing.

--Loring


--- Jim Idle <jimi at intersystems.com> wrote:

> Loring,
> 
> To my mind, 5-10% (assuming that you mean runtime)
> is still quite an overhead, which seems quite a lot
> for such a feature when there are other ways of
> achieving the same that don't really cost anything
> (at least in the C runtime any way). 
> 
> I would be interested in how you measure this,
> because anything that causes the token string to be
> created rather than just be indexes into the source
> would surely have a higher overhead than this. I
> suppose that what could be done would be that when a
> part of the token spec includes ! on a fixed length
> leading or trailing part of the token, then the
> start and end indexes could be adjusted at token
> emit time, but it just doesn't seem such a big deal
> to me, so long as there are reasonable ways of
> achieving the same thing manually. It seems that the
> removal of " in strings is in fact the main use for
> this functionality.
> 
> However, I don't believe that Ter rejected looking
> at this out of hand, just that for the moment there
> are plenty of other things to work on. That said,
> for my part, I think it is just a matter of
> documenting some ways to achieve the same thing and
> people getting used to them. I don't think that
> people object to changing ways of doing things if
> they are reasonable. While it is obviously quite a
> lot easier to just add ! to the matching text, you
> do this work once, whereas the resulting lexer will
> presumably run many more times than once; it seems
> that it is worth the small effort at grammar
> specification time to keep the lexer as trim as
> possible.
> 
> I am a fan of the ANTLR 3 approach of simplification
> over ANTLR 2, which generally yields leaner code
> generation, and transferring a certain amount of the
> effort to the grammar author. There are limits to
> this of course, but I think ANTLR 3 is a reasonable
> blend, given that it makes grammar programming in
> general so much easier than its predecessors. 
> 
> However I am sure that your efforts in this regard
> will be appreciated if they turn out to yield
> something that has very little overhead and little
> time to incorporate into the main ANTLR product.
> 
> Jim
> 
> 
> 
> -----Original Message-----
> From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
> Sent: Monday, November 27, 2006 4:27 PM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] String lexing and
> partial tokens
> 
> 
> --- Jim Idle <jimi at intersystems.com> wrote:
> 
> ..
> > You can  ask Jim Idle about that, but we decided
> to
> > use methods for  
> > setting the text rather than implementing ! which
> > makes everything  
> > inefficient. I could swear there was something in
> > the documentation.
> 
> ! in the lexer does not "make everything
> inefficient";
> you just have to be smart about the implementation. 
> The lexer editing via ! that is currently in the
> Yggdrasil 0.5b releases (I'll have b2 out soon)
> costs
> about 5-10% (rough estimate from looking at
> generated
> code); once I can analyze which rules edit, that
> drops
> still further.
> 
> --Loring
> 
> 
>  
>
____________________________________________________________________________________
> Do you Yahoo!?
> Everyone is raving about the all-new Yahoo! Mail
> beta.
> http://new.mail.yahoo.com
> 
> -- 
> No virus found in this incoming message.
> Checked by AVG Free Edition.
> Version: 7.1.409 / Virus Database: 268.14.17/553 -
> Release Date: 11/27/2006
>  
> 
> -- 
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.409 / Virus Database: 268.14.17/553 -
> Release Date: 11/27/2006
>  
> 



 
____________________________________________________________________________________
Do you Yahoo!?
Everyone is raving about the all-new Yahoo! Mail beta.
http://new.mail.yahoo.com

From foolishewe at hotmail.com  Mon Nov 27 18:43:06 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 28 Nov 2006 02:43:06 +0000
Subject: [antlr-interest] Postscript to "ANTLRWorks1.0b6 New
	useabilityannoyances"
In-Reply-To: <456B8658.2050702@moncons.co.uk>
Message-ID: <BAY107-F259B4C296781B9952D3D96C0E50@phx.gbl>

Hello Andrew and list members:

This looks suspisciously similar to ANLTRworks feedback I sent to Jean (not 
to the mailing list) a few
days ago, triggered  by one of my own grammars.  Currently I think Jean has 
fixes in testing.
On a side note, I too was using the windows end CRLF of line delimiters.

Regards:

Bill M.
>From: Andrew Smith <asmith at moncons.co.uk>
>To: Jean Bovet <jean_bovet at mac.com>
>CC: antlr-interest at antlr.org
>Subject: [antlr-interest] Postscript to "ANTLRWorks1.0b6 New 
>useabilityannoyances"
>Date: Tue, 28 Nov 2006 00:44:08 +0000
>
>Hi  Jean,
>
>I do not know if it is directly connected to your window changes or not,
>but I have just noticed that a new chain of exceptions is now triggered
>on using the Debugger windows. These appeared in the Console pane on
>running the very first token into the Tree building part of Ter's new
>expression evaluator tutorial, using his example input.
>
>[00:24:09] javax.swing.text.BadLocationException: Position not
>represented by view
>	at javax.swing.text.CompositeView.modelToView(Unknown Source)
>	at javax.swing.text.BoxView.modelToView(Unknown Source)
>	at javax.swing.plaf.basic.BasicTextUI$RootView.modelToView(Unknown Source)
>	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
>	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
>	at javax.swing.text.JTextComponent.modelToView(Unknown Source)
>	at org.antlr.works.debugger.input.DBInputProcessorToken$1.run(Unknown
>Source)
>	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
>	at java.awt.EventQueue.dispatchEvent(Unknown Source)
>	at java.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown Source)
>	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
>	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
>	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
>	at java.awt.EventDispatchThread.run(Unknown Source)
>
>HTH,
>Andrew Smith

_________________________________________________________________
Get free, personalized commercial-free online radio with MSN Radio powered 
by Pandora http://radio.msn.com/?icid=T002MSN03A07001


From antlr-list at arizona-software.ch  Mon Nov 27 21:15:57 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 27 Nov 2006 21:15:57 -0800
Subject: [antlr-interest] ANTLRWorks1.0b6 New useability annoyances
In-Reply-To: <456B8002.4050908@moncons.co.uk>
References: <44F6C702.2060704@moncons.co.uk>
	<A49B8FA9-90B2-4FAA-8ABE-5FECD8C30DBC@mac.com>
	<44FC7864.8000302@moncons.co.uk>
	<8344265E-7EE0-42E0-931D-13F2A540F879@mac.com>
	<456B8002.4050908@moncons.co.uk>
Message-ID: <2C2C9D6C-2B42-4DCA-B510-8F2259D86D4A@arizona-software.ch>

> There have been notable improvements in your amendments to ANTLRWorks,
> thanks, but b5 to b6 has taken some steps back. I have noticed two
> changes that are not helpful:
> a) The ability to retain the size and position of project windows has
> stopped working as a result of this upgrade - on Win2K/Java  
> 1.5.0.09 at
> least. Whatever the setting of the check box in Preferences, and  
> making
> sure that Apply is clicked, if ANTLRWorks is restarted or a project is
> reloaded the standard window (top left corner and 800x600 overall)  
> will
> appear.

Mmmm... yep, apparently it's broken on Windows but working on OS X.  
OK, I will fix that.

> b)In b6 the only way to alter the output directory seems to be to  
> change
> the overall preferences. On generation or debugging in b5 and  
> earlier a
> directory change dialogue was offered if a grammar file was altered  
> and
> saved, or even just reloaded. I found this very useful to keep work on
> different grammars separate.
>
> The first one at least was a change that you introduced (b1 to b2  
> or b3)
> in the development process and it would be a shame to lose it again,
> whilst the second was welcome from the very first beta!,
>

That's right but the previous dialog didn't offer a "per grammar"  
output directory: that's why I moved it to the preferences. But I can  
make a pref to display it each time you want to generate a grammar.

Thanks for your comments.

Regards,

Jean




From antlr-list at arizona-software.ch  Mon Nov 27 21:16:46 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 27 Nov 2006 21:16:46 -0800
Subject: [antlr-interest] [Fwd: Postscript to "ANTLRWorks1.0b6 New
	useability annoyances"]
In-Reply-To: <456B8E78.1060108@moncons.co.uk>
References: <456B8E78.1060108@moncons.co.uk>
Message-ID: <08A33AC8-1F8E-473D-A819-953181D93D61@arizona-software.ch>

I fixed several bugs related to the end of line on Windows. Next  
release will have these fixes.

Regards,

Jean

On Nov 27, 2006, at 5:18 PM, Andrew Smith wrote:

> Hi Jean,
>
> Further to the second mail this evening, further checking has shown  
> that
> the Java exceptions result from using debugger settings of DOS line
> endings to read input from your input dialogue rather than the Linux
> format required. The exceptions are therefore unlikely to be connected
> to the window problems.
>
> It also follows that it is getting too late for me to think straight
> tonight,
>
> Andrew Smith


From antlr-list at arizona-software.ch  Mon Nov 27 21:17:28 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 27 Nov 2006 21:17:28 -0800
Subject: [antlr-interest] Postscript to "ANTLRWorks1.0b6 New
	useabilityannoyances"
In-Reply-To: <BAY107-F259B4C296781B9952D3D96C0E50@phx.gbl>
References: <BAY107-F259B4C296781B9952D3D96C0E50@phx.gbl>
Message-ID: <8D5DACA8-B8AD-43B5-826F-2E4656CA567B@arizona-software.ch>

Yes, that's exactly the problem that I fixed.

Jean

On Nov 27, 2006, at 6:43 PM, Foolish Ewe wrote:

> Hello Andrew and list members:
>
> This looks suspisciously similar to ANLTRworks feedback I sent to  
> Jean (not to the mailing list) a few
> days ago, triggered  by one of my own grammars.  Currently I think  
> Jean has fixes in testing.
> On a side note, I too was using the windows end CRLF of line  
> delimiters.
>
> Regards:
>
> Bill M.
>> From: Andrew Smith <asmith at moncons.co.uk>
>> To: Jean Bovet <jean_bovet at mac.com>
>> CC: antlr-interest at antlr.org
>> Subject: [antlr-interest] Postscript to "ANTLRWorks1.0b6 New  
>> useabilityannoyances"
>> Date: Tue, 28 Nov 2006 00:44:08 +0000
>>
>> Hi  Jean,
>>
>> I do not know if it is directly connected to your window changes  
>> or not,
>> but I have just noticed that a new chain of exceptions is now  
>> triggered
>> on using the Debugger windows. These appeared in the Console pane on
>> running the very first token into the Tree building part of Ter's new
>> expression evaluator tutorial, using his example input.
>>
>> [00:24:09] javax.swing.text.BadLocationException: Position not
>> represented by view
>> 	at javax.swing.text.CompositeView.modelToView(Unknown Source)
>> 	at javax.swing.text.BoxView.modelToView(Unknown Source)
>> 	at javax.swing.plaf.basic.BasicTextUI$RootView.modelToView 
>> (Unknown Source)
>> 	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
>> 	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
>> 	at javax.swing.text.JTextComponent.modelToView(Unknown Source)
>> 	at org.antlr.works.debugger.input.DBInputProcessorToken$1.run 
>> (Unknown
>> Source)
>> 	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
>> 	at java.awt.EventQueue.dispatchEvent(Unknown Source)
>> 	at java.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown  
>> Source)
>> 	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown  
>> Source)
>> 	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
>> 	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
>> 	at java.awt.EventDispatchThread.run(Unknown Source)
>>
>> HTH,
>> Andrew Smith
>
> _________________________________________________________________
> Get free, personalized commercial-free online radio with MSN Radio  
> powered by Pandora http://radio.msn.com/?icid=T002MSN03A07001
>


From antlr at mirality.co.nz  Mon Nov 27 23:11:31 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 28 Nov 2006 20:11:31 +1300
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <mailman.3098.1164676651.15912.antlr-interest@antlr.org>
References: <mailman.3098.1164676651.15912.antlr-interest@antlr.org>
Message-ID: <7.0.1.0.0.20061128195352.035a25c8@mirality.co.nz>

At 16:14 27/11/2006, Jim Idle wrote:
 >The lexer emits a token automatically if you have not emitted 
one,
 >but if you use (C output) emitNew() in an action then it will 
use
 >this as the token. So, to exclude the start and end character:
 >
 >STRING: '"' (~'"')* '"'
 >	{
 > 
emitNew(type,line,charPosition,channel,start,getCharIndex()-1);
 >	}

The thing is that this is a lot more parameters than I really want 
to deal with in a grammar.  It violates my "this should be simple" 
rule :)

Though I agree that having it not go allocating strings is a good 
thing, so avoiding $setText seems like a good idea.

How about something more like what I ended up hacking out, with a 
bit of extra support code to make it more palatable?  Like so:

STRING: '"' content=UnquotedText '"' { emitPartial($content); };
fragment UnquotedText: (~'"')*;

Where 'emitPartial(x);' is the equivalent of 'emit(x); 
ltoken()->setType(ltoken(), the_token_type_being_generated);'

That should be fairly simple to implement.

It'd be better still if the fragment weren't required, and you 
could write something like this (this generates an AST parse error 
from ANTLR at the moment):

STRING: '"' content=(~'"')* '"' { emitPartial($content); };

(maybe you'd have to have an extra set of parentheses around 
there; not sure.)

And the ultimate extension would then be to reintroduce the ! 
operator, which automatically did the above stuff if all the non-! 
components of the rule formed a contiguous block.  If they're 
non-contiguous, then it'd still be an error since you can't 
generate a single substring from the incoming char stream that way.


From naimal_khan at hotmail.com  Tue Nov 28 04:36:29 2006
From: naimal_khan at hotmail.com (Naimal Khan)
Date: Tue, 28 Nov 2006 17:36:29 +0500
Subject: [antlr-interest] help with instrumentor
Message-ID: <BAY23-F11AA2436C9E6B31C8DF4BB9AE50@phx.gbl>

Hi every one,
I want to develop a java Source code instrumentor for analysing the source 
code. For example i want to analyse a conditional statement such as x1=10; 
x2=12; . . . xn=6 and i've condition such as if ((x1<x2)&& (x3>x5)) {do this 
thing;} else {do that thing;} at this point i want the instrumentor to 
insert code. e.g, declare temp1, temp2,...tempn variables (egual to the 
number of variable used in the condition) and then return the values such as 
(x2-x1)+(x3-x5). Can i do such kind of intrumentation with ANTLR? how?

_________________________________________________________________
FREE pop-up blocking with the new MSN Toolbar - get it now! 
http://toolbar.msn.click-url.com/go/onm00200415ave/direct/01/


From Marc.Pichon at ca.com  Tue Nov 28 05:15:48 2006
From: Marc.Pichon at ca.com (Pichon, Marc)
Date: Tue, 28 Nov 2006 13:15:48 -0000
Subject: [antlr-interest] Use of ECMA grammar: Newbie user question
Message-ID: <4E17D75FA98F324693D948999F01CDB79CB14B@UKSLMS11.ca.com>

Hello,
 
I'm facing a problem with the use of ECMA.g grammar when I'm trying to
use it:
What I am getting is as follows:
 
at compile time, a lot of non determinism appears (in the ECMA.zip file
associated)
 
js file parsed:
var __menuBar=void(0);

function menubar()

{

}

********************************

what I defined in ECMA.g to call Lexer and Parser:

class ECMAParser extends Parser;
options {
 k = 8;                            // for token lookahead
 exportVocab=ECMA;                  // Call its vocabulary "ECMA"
 defaultErrorHandler = false;      // Don't generate parser error
handlers
 }

class ECMALexer extends Lexer;
options {
 exportVocab=ECMA;      // call the vocabulary "ECMA"
 testLiterals=true;    // don't automatically test for literals
 caseSensitive = true;
     caseSensitiveLiterals = true;
 k=8;                   // eight characters of lookahead

 // Allow any char but \uFFFF (16 bit -1)
 charVocabulary='\u0000'..'\uFFFE';
}

******************************************************

 

> ecma_grammar; LA(1)==(SOURCE_CHAR) v [inputState.guessing 0]

> sourceElements; LA(1)==(SOURCE_CHAR) v [inputState.guessing 0]

< sourceElements; LA(1)==(SOURCE_CHAR) v [inputState.guessing 0]

< ecma_grammar; LA(1)==(SOURCE_CHAR) v [inputState.guessing 0]

and

Call ECMALexer ...
Call ECMAParser ...
Call parser.ECMA_grammar_expr ...
exception: line 1:1: unexpected token: v

v is the first character of the input file.

My understang is that no litteral are recognised and that no lexer rule
can be applied.

I've tried changing  testLiterals=true; to  testLiterals=false; withou
difference.

 

Any advice welcome, Marc

 

Marc Pichon

Marc.Pichon at ca.com

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061128/c6733b1f/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 2371 bytes
Desc: Pie Charts Bkgrd.JPG
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061128/c6733b1f/attachment-0001.jpe 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ECMA.zip
Type: application/x-zip-compressed
Size: 6963 bytes
Desc: ECMA.zip
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061128/c6733b1f/attachment-0001.bin 

From Martina.Pantzagias at Elektrobit.com  Tue Nov 28 07:00:21 2006
From: Martina.Pantzagias at Elektrobit.com (Pantzagias, Martina)
Date: Tue, 28 Nov 2006 16:00:21 +0100
Subject: [antlr-interest] How to use greedy in antlr3
Message-ID: <F0B08E6040B78D46BEED1124B57C6176023CC472@eridani.de.3soft>

Hi everybody,
 
I?m using ANTLR3 with AW since some weeks and I have a problem with one of my lexer rules.Consider the following pseudocode:
 
alternative 1:
    eat everything between '{' ... '}' until you get the token '}'
 
alternative 2:
    eat everything between '{!{' ... '}!}' until you get '}!}'
 
 
Here is my lexer rule "Tag"
 
Tag
    :    '{' (options{greedy=false;}: .)* '}'
    ;
 
This works fine, but if I add the second alternative an warning occurs (--> multiple alternatives):
 
Tag
    :    '{' (options{greedy=false;}: .)* '}'
    |    '{!{' (options{greedy=false;}: .)* '}!}'
 
 
How can I solve this problem?
 
 
 
best regards,
Martina


----------------------------------------------------------------
Please note: This e-mail may contain confidential information
intended solely for the addressee. If you have received this
e-mail in error, please do not disclose it to anyone, notify
the sender promptly, and delete the message from your system.
Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061128/776cf6d0/attachment.html 

From alexander.berger at finnova.ch  Tue Nov 28 07:17:07 2006
From: alexander.berger at finnova.ch (alexander.berger at finnova.ch)
Date: Tue, 28 Nov 2006 16:17:07 +0100
Subject: [antlr-interest] ANTLR3.0b5 - Embedding on parser within another
	one (Parser nesting)
Message-ID: <696E9A46BED8E544A7BD2C20A7E94F680452B6A7@marena.SIDON.OLYMP>

Hi 

I have two parsers and want to embed on parser within the other. But somehow
I don't get it. I expected it to work like this:


start : 
	x=subParser -> $x.expression
	;


subParser returns [Expression expression] : 
		'do' { 
			PLangParser p = new PLangParser(this.getTokenStream());
			p.setTreeAdaptor(this.getTreeAdaptor());
			$subParser.expression = (Expression)p.start().getTree();		}
	;


but in the rewrite instruction '-> $x.expression' antlr complains with the following error message:

error(100): PLang.g3:111:19: syntax error: antlr: PLang.g3:111:19: unexpected token: .

In other words, in the rewrite instruction "x=subParser -> $x.expression"
antlr does not allow to use the return value as output Tree.

I haven't found a solution on the WIKI page so I am curious if this kind
of parser embedding is possible or not with antlr3. 

Has anybody ever tried to do something similar?

Kind regards
Alex
____________________________________________

finnova AG Bankware
Alexander Berger
SR-Peripheral-Team 

S?gestrasse 22, CH-5600 Lenzburg
Tel: +41 62 886 4807 / Fax: +41 62 886 4888 mailto:alexander.berger at finnova.ch
http://www.finnova.ch 


From kroepke at classdump.org  Tue Nov 28 07:41:05 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 28 Nov 2006 16:41:05 +0100
Subject: [antlr-interest] How to use greedy in antlr3
In-Reply-To: <F0B08E6040B78D46BEED1124B57C6176023CC472@eridani.de.3soft>
References: <F0B08E6040B78D46BEED1124B57C6176023CC472@eridani.de.3soft>
Message-ID: <3AC34A8E-D470-409D-B7DC-0BB83248A397@classdump.org>

Hi Martina!

On 28. Nov 2006, at 16:00 , Pantzagias, Martina wrote:

> This works fine, but if I add the second alternative an warning  
> occurs (--> multiple alternatives):
>
> Tag
>     :    '{' (options{greedy=false;}: .)* '}'
>     |    '{!{' (options{greedy=false;}: .)* '}!}'
>
>
> How can I solve this problem?

There are two ways:
One with a warning, but correct behavior, the other without a warning  
but a (slight) performance hit.

The important thing to note with ANTLR is that it will always do the  
matching in the order of the alts in a rule.
In your rule ANTLR tells you that it disabled alt2 for input like  
'{', because the first alt already matches.
Simply reversing the alts will match correctly.
The second option you can take is to use a syntactic predicate to  
disambiguate (and to shut up the warning).
The grammar below will make it clear (hopefully :)...

grammar Greedy;

tags:	TAG+;
/* This rule doesn't warn */
/*
TAG	:	('{!{') => '{!{' (options{greedy=false;}: .)*  
{ System.err.println("alt1"); }'}!}'
	|	'{'	(options{greedy=false;}: .)*{ System.err.println("alt2"); } '}'
	;
*/

/* This warns, but will match correctly */
TAG	:	'{!{' (options{greedy=false;}: .)* { System.err.println("{! 
{"); } '}!}'
	|	'{' (options{greedy=false;}: .)* { System.err.println("plain  
{"); }'}'
	;

WS	:	(' ' | '\t' | '\n' | '\r') { skip(); }
	;

In AW, you need to use the debugger and watch the "Output" to see the  
System.err... calls.

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Tue Nov 28 07:45:06 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 28 Nov 2006 16:45:06 +0100
Subject: [antlr-interest] ANTLR3.0b5 - Embedding on parser within
	another one (Parser nesting)
In-Reply-To: <696E9A46BED8E544A7BD2C20A7E94F680452B6A7@marena.SIDON.OLYMP>
References: <696E9A46BED8E544A7BD2C20A7E94F680452B6A7@marena.SIDON.OLYMP>
Message-ID: <0167CCEC-C9BF-42AA-A33C-2374B9C0D996@classdump.org>


On 28. Nov 2006, at 16:17 , alexander.berger at finnova.ch wrote:

> but in the rewrite instruction '-> $x.expression' antlr complains  
> with the following error message:
>
> error(100): PLang.g3:111:19: syntax error: antlr: PLang.g3:111:19:  
> unexpected token: .
>
> In other words, in the rewrite instruction "x=subParser ->  
> $x.expression"
> antlr does not allow to use the return value as output Tree.

This is a bit obscure, I agree. Needs documentation.

Try using

start :
	x=subParser -> {$x}
	;

That should treat the return value of subParser as a tree.

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Tue Nov 28 07:50:30 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 28 Nov 2006 16:50:30 +0100
Subject: [antlr-interest] ANTLR3.0b5 - Embedding on parser within
	another one (Parser nesting)
In-Reply-To: <0167CCEC-C9BF-42AA-A33C-2374B9C0D996@classdump.org>
References: <696E9A46BED8E544A7BD2C20A7E94F680452B6A7@marena.SIDON.OLYMP>
	<0167CCEC-C9BF-42AA-A33C-2374B9C0D996@classdump.org>
Message-ID: <64BC12EE-FB5B-4E24-BB54-C43FA1BB5CA2@classdump.org>

For the archives:

On 28. Nov 2006, at 16:45 , Kay Roepke wrote:

> This is a bit obscure, I agree. Needs documentation.

Talking to myself, it is mentioned, but only in passing on
<http://www.antlr.org/wiki/display/ANTLR3/Tree+construction>

Look for {$mod} in rule classDefinition about halfway down on that page.

-k
-- 
Kay R?pke
http://classdump.org/





From jimi at intersystems.com  Tue Nov 28 08:02:21 2006
From: jimi at intersystems.com (Jim Idle)
Date: Tue, 28 Nov 2006 11:02:21 -0500
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <7.0.1.0.0.20061128195352.035a25c8@mirality.co.nz>
Message-ID: <20061128160133.2E64316A0@mail.intersystems.com>

Gavin,

Fair comment I think, though I personally prefer to see the whole parameter set. I can create another macro that makes something like that a bit easier. I will add it to my list of stuff to do. The reintroduction of ! is another matter, which we have discussed quite a bit and Ter is loathe to reintroduce at this point in the game ;-)

Jim



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Monday, November 27, 2006 11:12 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] String lexing and partial tokens

At 16:14 27/11/2006, Jim Idle wrote:
 >The lexer emits a token automatically if you have not emitted 
one,
 >but if you use (C output) emitNew() in an action then it will 
use
 >this as the token. So, to exclude the start and end character:
 >
 >STRING: '"' (~'"')* '"'
 >	{
 > 
emitNew(type,line,charPosition,channel,start,getCharIndex()-1);
 >	}

The thing is that this is a lot more parameters than I really want 
to deal with in a grammar.  It violates my "this should be simple" 
rule :)

Though I agree that having it not go allocating strings is a good 
thing, so avoiding $setText seems like a good idea.

How about something more like what I ended up hacking out, with a 
bit of extra support code to make it more palatable?  Like so:

STRING: '"' content=UnquotedText '"' { emitPartial($content); };
fragment UnquotedText: (~'"')*;

Where 'emitPartial(x);' is the equivalent of 'emit(x); 
ltoken()->setType(ltoken(), the_token_type_being_generated);'

That should be fairly simple to implement.

It'd be better still if the fragment weren't required, and you 
could write something like this (this generates an AST parse error 
from ANTLR at the moment):

STRING: '"' content=(~'"')* '"' { emitPartial($content); };

(maybe you'd have to have an extra set of parentheses around 
there; not sure.)

And the ultimate extension would then be to reintroduce the ! 
operator, which automatically did the above stuff if all the non-! 
components of the rule formed a contiguous block.  If they're 
non-contiguous, then it'd still be an error since you can't 
generate a single substring from the incoming char stream that way.


-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.14.19/555 - Release Date: 11/27/2006
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.409 / Virus Database: 268.14.19/555 - Release Date: 11/27/2006
 

From nwo2757 at hotmail.com  Tue Nov 28 08:24:02 2006
From: nwo2757 at hotmail.com (DG l)
Date: Tue, 28 Nov 2006 16:24:02 +0000
Subject: [antlr-interest] Problems - KCSParse
Message-ID: <BAY24-F25181D4A722336DA8842ABBEE50@phx.gbl>

Hello, I've recently only begun delving into the world of parsing as part of 
a project. I'm attempting to use antlr on the example KCSParse provided with 
the download. Several false starts later I'm getting errors along the lines 
of

ANTLR Parser Generator   Version 2.7.7 (2006-11-01)   1989-2005
CSharpParser.g:1845: warning:nondeterminism between alts 1 and 5 of block 
upon
CSharpParser.g:1845:     
k==1:PP_DEFINE,PP_UNDEFINE,PP_COND_IF,PP_LINE,PP_ERROR,
PP_WARNING,PP_REGION
CSharpParser.g:1845:     
k==2:"true","false","default",PP_DEFINE,PP_UNDEFINE,PP_
COND_IF,PP_LINE,PP_ERROR,PP_WARNING,PP_REGION,PP_ENDREGION,PP_FILENAME,PP_IDENT,
PP_STRING,PP_NUMBER,OPEN_PAREN,LOG_NOT,"abstract","as","base","bool","break","by
te","case","catch","char","checked","class","const","continue","decimal","delega
te","do","double","else","enum","event","explicit","extern","finally","fixed","f
loat","for","foreach","goto","if","implicit","in","int","interface","internal","
is","lock","long","namespace","new","null","object","operator","out","override",
"params","private","protected","public","readonly","ref","return","sbyte","seale
d","short","sizeof","stackalloc","static","string","struct","switch","this","thr
ow","try","typeof","uint","ulong","unchecked","unsafe","ushort","using","virtual
","void","volatile","while",UINT_LITERAL,LONG_LITERAL,ULONG_LITERAL,DECIMAL_LITE
RAL,FLOAT_LITERAL,DOUBLE_LITERAL,"add","remove","get","set","assembly","field","
method","module","param","property","type",IDENTIFIER,INT_LITERAL,CHAR_LITERAL,S
TRING_LITERAL,OPEN_CURLY,OPEN_BRACK,SEMI,PLUS,MINUS,STAR,BIN_AND,BIN_NOT,INC,DEC

>From what I can gather this warning is telling me that it's something to do 
with the lookahead. I have not modified the base examples in anyway. So my 
question is thus; where have I let it all go wrong? Your advice is 
appreciated.
aindriu

Software Engineering is guesswork, constrained by business. Once we can 
reduce money to binary format it will flow like data and programming shall 
be pure. --unknown

_________________________________________________________________
Find a baby-sitter FAST with MSN Search! http://search.msn.ie/


From mdepascale at dii.unisi.it  Tue Nov 28 09:28:43 2006
From: mdepascale at dii.unisi.it (Maurizio de Pascale)
Date: Tue, 28 Nov 2006 18:28:43 +0100
Subject: [antlr-interest] ANTLR C++ Lexer
Message-ID: <456C71CB.7010903@dii.unisi.it>

Hi everybody,
I'm evaluating ANTLR for a research project so in order to learn it I'm 
planning to build some very small samples to experiment with.
I've started with a lexer-only demo, and here are some questions:

1) is it possible (and how) to recover from an exception thrown by 
lexer.nextToken?
I would like to do something like this:

do
{
    try{
   
    token = lexer.nextToken();

    } catch (exception)
    {
       //spit output for user but make sure we can continue
       lexer.resume() ?!?
    }
}
while( token->getType() != Lexer::EOF_ );


2) I've noticed the paraphrase option:

Identifier
options{paraphrase = "identifier";}

but is there a way (and how) I can access that string from C++?
it looks like those strings are only contained in the *TokenTypes.txt 
outputted vocabolary but not anywhere in the other C++ generated files :(
is this a parser-only accessible stuff?


thank you very much,
Maurizio de Pascale
mdepascale at dii.unisi.it

From parrt at cs.usfca.edu  Tue Nov 28 10:15:42 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 10:15:42 -0800
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <20061128160133.2E64316A0@mail.intersystems.com>
References: <20061128160133.2E64316A0@mail.intersystems.com>
Message-ID: <64B1A30D-498E-4BDE-AE51-B7422BD69FF7@cs.usfca.edu>

Hi Gang,

We will reinvestigate '!' after 3.0 is done and the book is out.  I  
am not opposed to this, I just did not have time to find a way to  
optimize things for the moment.

Ter


On Nov 28, 2006, at 8:02 AM, Jim Idle wrote:

> Gavin,
>
> Fair comment I think, though I personally prefer to see the whole  
> parameter set. I can create another macro that makes something like  
> that a bit easier. I will add it to my list of stuff to do. The  
> reintroduction of ! is another matter, which we have discussed  
> quite a bit and Ter is loathe to reintroduce at this point in the  
> game ;-)
>
> Jim
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Monday, November 27, 2006 11:12 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] String lexing and partial tokens
>
> At 16:14 27/11/2006, Jim Idle wrote:
>> The lexer emits a token automatically if you have not emitted
> one,
>> but if you use (C output) emitNew() in an action then it will
> use
>> this as the token. So, to exclude the start and end character:
>>
>> STRING: '"' (~'"')* '"'
>> 	{
>>
> emitNew(type,line,charPosition,channel,start,getCharIndex()-1);
>> 	}
>
> The thing is that this is a lot more parameters than I really want
> to deal with in a grammar.  It violates my "this should be simple"
> rule :)
>
> Though I agree that having it not go allocating strings is a good
> thing, so avoiding $setText seems like a good idea.
>
> How about something more like what I ended up hacking out, with a
> bit of extra support code to make it more palatable?  Like so:
>
> STRING: '"' content=UnquotedText '"' { emitPartial($content); };
> fragment UnquotedText: (~'"')*;
>
> Where 'emitPartial(x);' is the equivalent of 'emit(x);
> ltoken()->setType(ltoken(), the_token_type_being_generated);'
>
> That should be fairly simple to implement.
>
> It'd be better still if the fragment weren't required, and you
> could write something like this (this generates an AST parse error
> from ANTLR at the moment):
>
> STRING: '"' content=(~'"')* '"' { emitPartial($content); };
>
> (maybe you'd have to have an extra set of parentheses around
> there; not sure.)
>
> And the ultimate extension would then be to reintroduce the !
> operator, which automatically did the above stuff if all the non-!
> components of the rule formed a contiguous block.  If they're
> non-contiguous, then it'd still be an error since you can't
> generate a single substring from the incoming char stream that way.
>
>
> -- 
> No virus found in this incoming message.
> Checked by AVG Free Edition.
> Version: 7.1.409 / Virus Database: 268.14.19/555 - Release Date:  
> 11/27/2006
>
>
> -- 
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.409 / Virus Database: 268.14.19/555 - Release Date:  
> 11/27/2006
>


From kroepke at classdump.org  Tue Nov 28 10:26:17 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 28 Nov 2006 19:26:17 +0100
Subject: [antlr-interest] String lexing and partial tokens
In-Reply-To: <64B1A30D-498E-4BDE-AE51-B7422BD69FF7@cs.usfca.edu>
References: <20061128160133.2E64316A0@mail.intersystems.com>
	<64B1A30D-498E-4BDE-AE51-B7422BD69FF7@cs.usfca.edu>
Message-ID: <73A0C10A-3886-471E-B16F-5F926FBB54D7@classdump.org>


On 28. Nov 2006, at 19:15 , Terence Parr wrote:

> We will reinvestigate '!' after 3.0 is done and the book is out.  I  
> am not opposed to this, I just did not have time to find a way to  
> optimize things for the moment.

I have some ideas about a lightweight solution, but haven't had time  
to try it. Let's postpone for 3.1.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From monty at codetransform.com  Tue Nov 28 10:53:57 2006
From: monty at codetransform.com (Monty Zukowski)
Date: Tue, 28 Nov 2006 10:53:57 -0800
Subject: [antlr-interest] Tree parser tree building bug and workaround
Message-ID: <598864c70611281053h398ebf3bx5cefc1ed12419a85@mail.gmail.com>

Hi all,

I just found a bug in 2.7.7 (and 2.7.4).  I have a tree parser rule
that builds a tree (just adding a new parent node), like this:

rule1:
#( T1 T2 T3
  { ##=#(#[NEWROOT],##); }
  )
  ;

>From inside the action, I see that the tree is built properly.  But
for some reason, upon exit of the rule the AST for rule1 is replaced
by the original.  (You can see it in the generated code).

I didn't track down the problem in ANTLR itself.  However, I found a workaround:

rule1:
  subruleT1 { ##=#(#[NEWROOT],##); }
  ;

subruleT1
  : #( T1 T2 T3 )
  ;

Monty

From parrt at cs.usfca.edu  Tue Nov 28 11:07:30 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 11:07:30 -0800
Subject: [antlr-interest] ANTLR book announced at amazon.com
Message-ID: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>

Hi,

Looks like the publisher will not be backing out since they've  
announced the ANTLR book on amazon. ;)

http://www.amazon.com/Complete-ANTLR-Reference-Guide/dp/0978739256/ 
sr=8-1/qid=1164654480/ref=sr_1_1/104-2916184-7396725?ie=UTF8&s=books

Now I just have to finish.  I'm cranking away.  About 150 pages and  
counting... thanks gawd for voice recognition.

The next book will be "An ANTLR cookbook...the taste of  
venison" (assuming they don't balk at the title) ;)

:)

Ter

From asmith at moncons.co.uk  Tue Nov 28 11:17:40 2006
From: asmith at moncons.co.uk (Andrew Smith)
Date: Tue, 28 Nov 2006 19:17:40 +0000
Subject: [antlr-interest] ANTLRWorks1.0b6 New useability annoyances
Message-ID: <456C8B54.20302@moncons.co.uk>

Hi Jean,

A preference setting for the Output directory sounds like a very good
solution and better still if it is to be implemented on a "per grammar"
basis. The solid gold solution would be to have the directory set on a
"per grammar" basis and the preference to offer the choice between the
dialogue being shown on every generation versus the change dialogue
being only offered when a new grammar is being edited, but the silver
level suggestion above would be  comfortable to work with.

Incidentally, today on my setup the windows seem to remember their size
and position. Could this be affected by syntax errors in the grammar
being loaded? I have noticed before, without being able to produce
simple test cases, that there seems to be a correlation between V3
grammar correctness and the reliability of ANTLR/ANTLRWorks. As a rough
example, checking a grammar of about 200+ rules containing a dozen or
more errors will lead to a fairly close approximation to an infinite
loop and with some types of error - possibly such as omitting the
terminating semi-colon of an action sequence to be used as final code -
then ANTLR/ANTLRWorks will fall into some sort of trap where the
Analysis section is never completed, though oddly enough CPU usage may
be very low 0 - 2%. Both these effects are seen only with ANTLR v2.7.7
or v3.0b5, not earlier ones, and I suspect that Terence has activated
rafts of error checking code which is either new or was being skipped
before.

After the first paragraph these are merely random thoughts and can be
ignored.

Thanks for your responsiveness,

Andrew Smith

From jddahl at micron.com  Tue Nov 28 12:33:27 2006
From: jddahl at micron.com (Jeff Dahl)
Date: Tue, 28 Nov 2006 13:33:27 -0700
Subject: [antlr-interest] ANTLR book announced at amazon.com
In-Reply-To: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
References: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
Message-ID: <456C9D17.5070907@micron.com>

Terence Parr wrote:
> Looks like the publisher will not be backing out since they've 
> announced the ANTLR book on amazon. ;)
>
> http://www.amazon.com/Complete-ANTLR-Reference-Guide/dp/0978739256/sr=8-1/qid=1164654480/ref=sr_1_1/104-2916184-7396725?ie=UTF8&s=books 
>
>
> Now I just have to finish.  I'm cranking away.  About 150 pages and 
> counting... thanks gawd for voice recognition.
If you don't mind me asking, what voice recognition package are you using?

From parrt at cs.usfca.edu  Tue Nov 28 13:28:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 13:28:12 -0800
Subject: [antlr-interest] ANTLR book announced at amazon.com
In-Reply-To: <456C9D17.5070907@micron.com>
References: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
	<456C9D17.5070907@micron.com>
Message-ID: <19E5E3C3-5A14-4B69-BC2B-F7D9772297D2@cs.usfca.edu>

Dragon Naturally Speaking v9.  It's the only one that works.  I use  
VNC to speak into a PC hiding under the desk that sends char to my  
Mac os x box :)  Seemlessy.

Ter
On Nov 28, 2006, at 12:33 PM, Jeff Dahl wrote:

> Terence Parr wrote:
>> Looks like the publisher will not be backing out since they've  
>> announced the ANTLR book on amazon. ;)
>>
>> http://www.amazon.com/Complete-ANTLR-Reference-Guide/dp/0978739256/ 
>> sr=8-1/qid=1164654480/ref=sr_1_1/104-2916184-7396725?ie=UTF8&s=books
>>
>> Now I just have to finish.  I'm cranking away.  About 150 pages  
>> and counting... thanks gawd for voice recognition.
> If you don't mind me asking, what voice recognition package are you  
> using?


From rob.hill at blueyonder.co.uk  Tue Nov 28 13:27:23 2006
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Tue, 28 Nov 2006 21:27:23 -0000
Subject: [antlr-interest] ANTLR book announced at amazon.com
In-Reply-To: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
References: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
Message-ID: <000f01c71333$fe3f7560$fabe6020$@hill@blueyonder.co.uk>

Er, i hope this is going to be on amazon.co.uk too!
:(


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: 28 November 2006 19:08
To: ANTLR Interest
Subject: [antlr-interest] ANTLR book announced at amazon.com

Hi,

Looks like the publisher will not be backing out since they've  
announced the ANTLR book on amazon. ;)

http://www.amazon.com/Complete-ANTLR-Reference-Guide/dp/0978739256/ 
sr=8-1/qid=1164654480/ref=sr_1_1/104-2916184-7396725?ie=UTF8&s=books

Now I just have to finish.  I'm cranking away.  About 150 pages and  
counting... thanks gawd for voice recognition.

The next book will be "An ANTLR cookbook...the taste of  
venison" (assuming they don't balk at the title) ;)

:)

Ter



From rschulz at sonic.net  Tue Nov 28 15:07:47 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 28 Nov 2006 15:07:47 -0800
Subject: [antlr-interest] ANTLR book announced at amazon.com
In-Reply-To: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
References: <916C507D-E842-49EA-9291-399A45A1FDA4@cs.usfca.edu>
Message-ID: <200611281507.47624.rschulz@sonic.net>

On Tuesday 28 November 2006 11:07, Terence Parr wrote:
> Hi,
>
> Looks like the publisher will not be backing out since they've
> announced the ANTLR book on amazon. ;)
>
> http://www.amazon.com/Complete-ANTLR-Reference-Guide/dp/0978739256/
> sr=8-1/qid=1164654480/ref=sr_1_1/104-2916184-7396725?ie=UTF8&s=books

This is enough URL to get the detail page for that product: 
<http://www.amazon.com/Complete-ANTLR-Reference-Guide/dp/0978739256>


> ...


Randall Schulz

From parrt at cs.usfca.edu  Tue Nov 28 15:18:53 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 15:18:53 -0800
Subject: [antlr-interest] new v3 FAQ entry on lexing
Message-ID: <F0C9A64D-ACF7-4422-9306-C6AF5FE56F38@cs.usfca.edu>

"How do I selectively ignore tokens depending on parser context?"

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1734

by Edson Tirelli.

From parrt at cs.usfca.edu  Tue Nov 28 17:44:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 17:44:26 -0800
Subject: [antlr-interest] Antlr 3.0b5 - possible Bug in NFAToDFAConverter
In-Reply-To: <696E9A46BED8E544A7BD2C20A7E94F68043BBDE2@marena.SIDON.OLYMP>
References: <696E9A46BED8E544A7BD2C20A7E94F68043BBDE2@marena.SIDON.OLYMP>
Message-ID: <0B01DD4B-3D30-4891-ACEE-A10CB96A84C3@cs.usfca.edu>

I have added a bug report for this.

http://www.antlr.org:8888/browse/ANTLR-53

In your particular case,

programmDeclaration :
                 functionDeclaration     ';'     -> functionDeclaration
         |       functionDefinition      ';'     -> functionDefinition
         |       procedureDeclaration ';' -> procedureDeclaration
         |       procedureDefinition ';' -> procedureDefinition
         ;

is non-LL(*), it's just that ANTLR does not figure this out soon  
enough.  Your function definition calls your function declaration  
rule I think. The failsafe will catch this.

Ter
On Nov 19, 2006, at 11:54 PM, <alexander.berger at finnova.ch>  
<alexander.berger at finnova.ch> wrote:

> Hi Terence
>
> Here is the grammar that causes the problem.
> I tried the -Xwatchconversion option, but I am not yet
> sure how I have to interpret the output. It looks as
> if the rule "programmDeclaration" causes the problem.
>
> The grammar itself is far from finished but it used to
> work with antlr-3.0b4.
>
> Kind regards
> Alex
>
> ____________________________________________
>
> finnova AG Bankware
> Alexander Berger
> SR-Peripheral-Team
>
> S?gestrasse 22, CH-5600 Lenzburg
> Tel: +41 62 886 4807 / Fax: +41 62 886 4888  
> mailto:alexander.berger at finnova.ch
> http://www.finnova.ch
>
> -----Urspr?ngliche Nachricht-----
> Von: Terence Parr [mailto:parrt at cs.usfca.edu]
> Gesendet: Sonntag, 19. November 2006 19:47
> An: Berger Alexander
> Betreff: Re: [antlr-interest] Antlr 3.0b5 - possible Bug in  
> NFAToDFAConverter
>
> Hi.  Did you find out what the issue was with your rule?  You can
> send me your gramma if you  want and I'll take a look.
>
> Ter
> On Nov 17, 2006, at 6:56 AM, <alexander.berger at finnova.ch>
> <alexander.berger at finnova.ch> wrote:
>
>> Hi Everybody.
>>
>> I upgraded from antlr 3.0b4 to 3.0b5 and now the processing of my
>> grammar
>> fails with the StackTrace below. Antlr is consuming a lot of memory
>> (up to
>> 1GB), so it looks as if there is a serious problem in the NFA to
>> DFA Converter.
>>
>> So, can anybody please confirm this or am I the only one having
>> this problem. The grammar producing this error is quite big but I
>> will provide
>> it if someone wants to have a look at it.
>>
>>
>> Exception in thread "main" java.lang.OutOfMemoryError: Java heap  
>> space
>> 	at java.util.HashMap.resize(HashMap.java:462)
>> 	at java.util.HashMap.addEntry(HashMap.java:755)
>> 	at java.util.HashMap.put(HashMap.java:385)
>> 	at java.util.HashSet.add(HashSet.java:200)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:618)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:748)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:748)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:748)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:704)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:669)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:457)
>> 	at
>> org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransit 
>> i
>> ons(NFAToDFAConverter.java:274)
>> 	at org.antlr.analysis.NFAToDFAConverter.convert
>> (NFAToDFAConverter.java:99)
>> 	at org.antlr.analysis.DFA.<init>(DFA.java:219)
>> 	at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:826)
>> 	at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:774)
>> 	at org.antlr.codegen.Target.performGrammarAnalysis(Target.java:111)
>> 	at org.antlr.codegen.CodeGenerator.genRecognizer
>> (CodeGenerator.java:279)
>> 	at org.antlr.Tool.processGrammar(Tool.java:329)
>> 	at org.antlr.Tool.process(Tool.java:266)
>> 	at org.antlr.Tool.main(Tool.java:69)
>>
>>
>>
>> By the way. What is the official way to report bugs in antlr 3.0b* ?
>>
>> Kind Regards
>> Alex
>> ____________________________________________
>>
>> finnova AG Bankware
>> Alexander Berger
>> SR-Peripheral-Team
>>
>> S?gestrasse 22, CH-5600 Lenzburg
>> Tel: +41 62 886 4807 / Fax: +41 62 886 4888
>> mailto:alexander.berger at finnova.ch
>> http://www.finnova.ch
>>
>
> <PLSQL.g>


From parrt at cs.usfca.edu  Tue Nov 28 17:46:35 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 17:46:35 -0800
Subject: [antlr-interest] [v3] TreeParser capabilities
In-Reply-To: <200611201331.49277.e.papegaaij@student.utwente.nl>
References: <200611141432.24374.e.papegaaij@student.utwente.nl>
	<200611201157.59738.e.papegaaij@student.utwente.nl>
	<7B3E1670-AF89-484C-BD66-58046A90F131@classdump.org>
	<200611201331.49277.e.papegaaij@student.utwente.nl>
Message-ID: <215523B0-74B0-426D-8D84-C0E6C43084E8@cs.usfca.edu>


On Nov 20, 2006, at 4:31 AM, Emond Papegaaij wrote:

> It seems, it should be fairly easy to convert CommonTreeNodeStream  
> to use
> TreeAdaptor. I just tried a naive attempt to convert the class. It  
> commes
> down to converting 'node.getChild(n)' to 'adaptor.getChild(node,  
> n)'. There
> are however 2 problems: TreeAdaptor is missing a isNil method and  
> the EOF,
> DOWN and UP nodes cannot be made static final. Another minor issue  
> is that
> some methods are not implemented in CommonTreeAdaptor, such as  
> getChild and
> getChildCount. But these methods are trivial to implement.
>
> With these changes, the tree node stream can be implemented without  
> any
> reliance on the Tree interface, just as the parser.

Cool. doesn't seem like it would have the same performance?  Perhaps  
we can adapt it to be completely general. On the other hand, perhaps  
a subclass should be used for the more general case.

Ter

From parrt at cs.usfca.edu  Tue Nov 28 17:48:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 17:48:33 -0800
Subject: [antlr-interest] References from Parser Rules to Lexer
	Fragments Should Elicit Diagnostic
In-Reply-To: <200611201142.04121.rschulz@sonic.net>
References: <200611201142.04121.rschulz@sonic.net>
Message-ID: <6082D69A-DFFE-4CAB-9778-2377C6B570FB@cs.usfca.edu>


On Nov 20, 2006, at 11:42 AM, Randall R Schulz wrote:

> Hi,
>
> I finally found the last vexing problem in my combined lexer + parser
> grammar.
>
> It turns out I had a parser / non-terminal rule that referred to a  
> lexer
> fragment. I would not / could not match at run time, but there was no
> warning given at the point of reference.
>
> I think references to lexer fragments from parser rules should  
> produce a
> diagnostic.

Added. http://www.antlr.org:8888/browse/ANTLR-54

Ter


From parrt at cs.usfca.edu  Tue Nov 28 17:53:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 17:53:31 -0800
Subject: [antlr-interest] ANTLR 3.0b5  problem with predicates
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4CEE8070@exmail1.finjan.com>
References: <E344C433F006AB45A306D422F9C3EB4CEE8070@exmail1.finjan.com>
Message-ID: <0B48D9AD-BBC1-4F53-96B8-5742DA56FE39@cs.usfca.edu>


On Nov 23, 2006, at 9:54 AM, Shmuel Siegel wrote:

> No, that predicate says "only pick up the * if the next char is not a
> slash.
> This is what antlr2 did. I quote from the cpp_parser on your site. My
> original code was the same but I simplified it for the sake of the
> problem report. I got the same error with the full code.
>

Have I suggested {LA(2) != '/'}?=> '*' yet?

Ter

From parrt at cs.usfca.edu  Tue Nov 28 17:59:56 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 17:59:56 -0800
Subject: [antlr-interest] Matching ellipsis
In-Reply-To: <4566C582.7010109@lucent.com>
References: <4566C582.7010109@lucent.com>
Message-ID: <FB9F1A24-8E92-4A96-B7AD-B79FEB59349A@cs.usfca.edu>

Hi Julian,

just call emit() multiple times within a lexer rule :)

Ter
On Nov 24, 2006, at 2:12 AM, Julian Santander wrote:

> Folks,
>
>     I'd be very grateful if someone could provide me some guidance  
> on a problem I'm having. This is actually my first attempt at a  
> parser using ANTLR. I'm using ANTLR beta 5 with Java generation (on  
> a Windows XP machine and Java 1.5 if that matters).
>
>     At the lexical level I need to match tokens like '.' (dot)  
> '..'  (ellipsis), integers and floating point numbers. (Actually I  
> don't need sign nor exponential formats)....
>
>     So far one of my many attempts has been:
> T_INTEGER_LITERAL: DIGIT+; DOT: ('.' (('.')=>{false}? | ))=>  
> '.' ; // This one is copied from http://www.antlr.org/blog/antlr3/ 
> lookahead.tml May 2006 post. T_ELLIPSIS: '.' '.'+ ;  
> T_FLOAT_LITERAL: DIGIT+ DOT DIGIT* | DOT DIGIT+ ;
> But so far I'm unable to parse "1..2" into T_INTEGER_LITERAL,  
> T_ELLIPSIS, T_INTEGER_LITERAL.
>
> for example: "... .. 1..2 3...4 5.0 .6 7." renders: TOKEN:  
> T_ELLIPSIS[@-1,0:2='...',<180>,1:0] TOKEN: WS[@-1,3:3='  
> ',<168>,channel=99,1:3] TOKEN: T_ELLIPSIS[@-1,4:5='..',<180>,1:4]  
> TOKEN: WS[@-1,6:6=' ',<168>,channel=99,1:6] TOKEN: T_FLOAT_LITERAL 
> [@-1,7:8='1.',<181>,1:7] TOKEN: T_FLOAT_LITERAL[@-1,9:10='.2',<181>, 
> 1:9] TOKEN: WS[@-1,11:11=' ',<168>,channel=99,1:11] TOKEN:  
> T_FLOAT_LITERAL[@-1,12:13='3.',<181>,1:12] TOKEN: T_ELLIPSIS 
> [@-1,14:15='..',<180>,1:14] TOKEN: T_INTEGER_LITERAL 
> [@-1,16:16='4',<175>,1:16] TOKEN: WS[@-1,17:17='  
> ',<168>,channel=99,1:17] TOKEN: T_FLOAT_LITERAL 
> [@-1,18:20='5.0',<181>,1:18] TOKEN: WS[@-1,21:21='  
> ',<168>,channel=99,1:21] TOKEN: T_FLOAT_LITERAL[@-1,22:23='. 
> 6',<181>,1:22] TOKEN: WS[@-1,24:24=' ',<168>,channel=99,1:24]  
> TOKEN: T_FLOAT_LITERAL[@-1,25:26='7.',<181>,1:25] TOKEN: WS 
> [@-1,27:27='\n',<168>,channel=99,1:27]
> I've tried other things (I've seen a post on emitting multiple  
> tokens for the same rule, but was apparently not yet supported in  
> v3, I've seen also the pascal examples for v2, but somehow I  
> couldn't get them to work??)
>
> Thanks very much in advance and best regards
>
>     Julian
>
>
>
>


From parrt at cs.usfca.edu  Tue Nov 28 18:01:48 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Nov 2006 18:01:48 -0800
Subject: [antlr-interest] help with instrumentor
In-Reply-To: <BAY23-F11AA2436C9E6B31C8DF4BB9AE50@phx.gbl>
References: <BAY23-F11AA2436C9E6B31C8DF4BB9AE50@phx.gbl>
Message-ID: <1BCCA8DA-3C7B-49C0-9DF6-D6AB8BD0F6C1@cs.usfca.edu>


On Nov 28, 2006, at 4:36 AM, Naimal Khan wrote:

> Hi every one,
> I want to develop a java Source code instrumentor for analysing the  
> source code. For example i want to analyse a conditional statement  
> such as x1=10; x2=12; . . . xn=6 and i've condition such as if  
> ((x1<x2)&& (x3>x5)) {do this thing;} else {do that thing;} at this  
> point i want the instrumentor to insert code. e.g, declare temp1,  
> temp2,...tempn variables (egual to the number of variable used in  
> the condition) and then return the values such as (x2-x1)+(x3-x5).  
> Can i do such kind of intrumentation with ANTLR? how?

You want to think about TokenRewriteStream in v3 or  
TokenStreamRewriteEngine in v2.

Ter


From alexander.berger at finnova.ch  Tue Nov 28 23:28:45 2006
From: alexander.berger at finnova.ch (alexander.berger at finnova.ch)
Date: Wed, 29 Nov 2006 08:28:45 +0100
Subject: [antlr-interest] ANTLR3.0b5 - Embedding on parser within
	another one (Parser nesting)
Message-ID: <696E9A46BED8E544A7BD2C20A7E94F680452B6E4@marena.SIDON.OLYMP>

Hi Kay

Thank you for your answer. Of course you are right, but it is not what I
intended to do. The problem is not to force antlr to use the return value
of a rule as the resulting tree. The Problem is within the called rule to
force antlr to set the resulting tree to the one returned by the embedded parser. 

My next approach was the following one:

  start2 : 
	x=subParser -> $x
	;


  subParser : 
		'do' { 
			PLangParser p = new PLangParser(this.getTokenStream());
			p.setTreeAdaptor(this.getTreeAdaptor());
			Object t = p.start().getTree();
			$tree = t;
		}
	;

in this case nearly everything went alright but eventually at the end of 
the generated java code for the rule the following statement

	retval.tree = (Object)adaptor.rulePostProcessing(root_0);

made all my work into void :-(.
So I recognized that funny "root_0" variable and modified the rule like
this:

  start2 : 
	x=subParser -> $x
	;


  subParser : 
		'do' { 
			PLangParser p = new PLangParser(this.getTokenStream());
			p.setTreeAdaptor(this.getTreeAdaptor());
			Object t = p.start().getTree();
			root_0 = t;
		}
	;

And horray it worked the way I expected it, but I think that using "root_0" is very intrusive and not the way to go. So I am still wondering if there 
is a way to do things like that in a non-intrusive way.

Kind Regards
Alex
____________________________________________

finnova AG Bankware
Alexander Berger
SR-Peripheral-Team 

S?gestrasse 22, CH-5600 Lenzburg
Tel: +41 62 886 4807 / Fax: +41 62 886 4888 mailto:alexander.berger at finnova.ch
http://www.finnova.ch 
-----Urspr?ngliche Nachricht-----
Von: Kay Roepke [mailto:kroepke at classdump.org] 
Gesendet: Dienstag, 28. November 2006 16:45
An: Berger Alexander
Cc: antlr-interest at antlr.org; alex-berger at gmx.ch
Betreff: Re: [antlr-interest] ANTLR3.0b5 - Embedding on parser within another one (Parser nesting)


On 28. Nov 2006, at 16:17 , alexander.berger at finnova.ch wrote:

> but in the rewrite instruction '-> $x.expression' antlr complains  
> with the following error message:
>
> error(100): PLang.g3:111:19: syntax error: antlr: PLang.g3:111:19:  
> unexpected token: .
>
> In other words, in the rewrite instruction "x=subParser ->  
> $x.expression"
> antlr does not allow to use the return value as output Tree.

This is a bit obscure, I agree. Needs documentation.

Try using

start :
	x=subParser -> {$x}
	;

That should treat the return value of subParser as a tree.

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From alexander.berger at finnova.ch  Tue Nov 28 23:50:45 2006
From: alexander.berger at finnova.ch (alexander.berger at finnova.ch)
Date: Wed, 29 Nov 2006 08:50:45 +0100
Subject: [antlr-interest] Antlr 3.0b5 - possible Bug in NFAToDFAConverter
Message-ID: <696E9A46BED8E544A7BD2C20A7E94F680452B6EC@marena.SIDON.OLYMP>

Hi Terence

Yes that's right. A function definition can recursively contain another function declaration and even function definitions. Like in the example
below:

function outerFunction return number is
   function fx return number;   
   function f1 return number is begin return fx; end;
   function fx return number is begin return null; end;
begin
   return f1();
end;

The same is also true for procedureDeclaration and procedureDefinition.

Kind regards
Alex
____________________________________________

finnova AG Bankware
Alexander Berger
SR-Peripheral-Team 

S?gestrasse 22, CH-5600 Lenzburg
Tel: +41 62 886 4807 / Fax: +41 62 886 4888 mailto:alexander.berger at finnova.ch
http://www.finnova.ch 

-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] Im Auftrag von Terence Parr
Gesendet: Mittwoch, 29. November 2006 02:44
An: ANTLR Interest
Betreff: Re: [antlr-interest] Antlr 3.0b5 - possible Bug in NFAToDFAConverter

I have added a bug report for this.

http://www.antlr.org:8888/browse/ANTLR-53

In your particular case,

programmDeclaration :
                 functionDeclaration     ';'     -> functionDeclaration
         |       functionDefinition      ';'     -> functionDefinition
         |       procedureDeclaration ';' -> procedureDeclaration
         |       procedureDefinition ';' -> procedureDefinition
         ;

is non-LL(*), it's just that ANTLR does not figure this out soon  
enough.  Your function definition calls your function declaration  
rule I think. The failsafe will catch this.

Ter
On Nov 19, 2006, at 11:54 PM, <alexander.berger at finnova.ch>  
<alexander.berger at finnova.ch> wrote:

> Hi Terence
>
> Here is the grammar that causes the problem.
> I tried the -Xwatchconversion option, but I am not yet
> sure how I have to interpret the output. It looks as
> if the rule "programmDeclaration" causes the problem.
>
> The grammar itself is far from finished but it used to
> work with antlr-3.0b4.
>
> Kind regards
> Alex
>
> ____________________________________________
>
> finnova AG Bankware
> Alexander Berger
> SR-Peripheral-Team
>
> S?gestrasse 22, CH-5600 Lenzburg
> Tel: +41 62 886 4807 / Fax: +41 62 886 4888  
> mailto:alexander.berger at finnova.ch
> http://www.finnova.ch
>
> -----Urspr?ngliche Nachricht-----
> Von: Terence Parr [mailto:parrt at cs.usfca.edu]
> Gesendet: Sonntag, 19. November 2006 19:47
> An: Berger Alexander
> Betreff: Re: [antlr-interest] Antlr 3.0b5 - possible Bug in  
> NFAToDFAConverter
>
> Hi.  Did you find out what the issue was with your rule?  You can
> send me your gramma if you  want and I'll take a look.
>
> Ter
> On Nov 17, 2006, at 6:56 AM, <alexander.berger at finnova.ch>
> <alexander.berger at finnova.ch> wrote:
>
>> Hi Everybody.
>>
>> I upgraded from antlr 3.0b4 to 3.0b5 and now the processing of my
>> grammar
>> fails with the StackTrace below. Antlr is consuming a lot of memory
>> (up to
>> 1GB), so it looks as if there is a serious problem in the NFA to
>> DFA Converter.
>>
>> So, can anybody please confirm this or am I the only one having
>> this problem. The grammar producing this error is quite big but I
>> will provide
>> it if someone wants to have a look at it.
>>
>>
>> Exception in thread "main" java.lang.OutOfMemoryError: Java heap  
>> space
>> 	at java.util.HashMap.resize(HashMap.java:462)
>> 	at java.util.HashMap.addEntry(HashMap.java:755)
>> 	at java.util.HashMap.put(HashMap.java:385)
>> 	at java.util.HashSet.add(HashSet.java:200)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:618)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:748)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:748)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:748)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:704)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:669)
>> 	at org.antlr.analysis.NFAToDFAConverter.closure
>> (NFAToDFAConverter.java:457)
>> 	at
>> org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransit 
>> i
>> ons(NFAToDFAConverter.java:274)
>> 	at org.antlr.analysis.NFAToDFAConverter.convert
>> (NFAToDFAConverter.java:99)
>> 	at org.antlr.analysis.DFA.<init>(DFA.java:219)
>> 	at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:826)
>> 	at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:774)
>> 	at org.antlr.codegen.Target.performGrammarAnalysis(Target.java:111)
>> 	at org.antlr.codegen.CodeGenerator.genRecognizer
>> (CodeGenerator.java:279)
>> 	at org.antlr.Tool.processGrammar(Tool.java:329)
>> 	at org.antlr.Tool.process(Tool.java:266)
>> 	at org.antlr.Tool.main(Tool.java:69)
>>
>>
>>
>> By the way. What is the official way to report bugs in antlr 3.0b* ?
>>
>> Kind Regards
>> Alex
>> ____________________________________________
>>
>> finnova AG Bankware
>> Alexander Berger
>> SR-Peripheral-Team
>>
>> S?gestrasse 22, CH-5600 Lenzburg
>> Tel: +41 62 886 4807 / Fax: +41 62 886 4888
>> mailto:alexander.berger at finnova.ch
>> http://www.finnova.ch
>>
>
> <PLSQL.g>


From Martina.Pantzagias at Elektrobit.com  Wed Nov 29 01:18:16 2006
From: Martina.Pantzagias at Elektrobit.com (Pantzagias, Martina)
Date: Wed, 29 Nov 2006 10:18:16 +0100
Subject: [antlr-interest] How to use greedy in antlr3
Message-ID: <F0B08E6040B78D46BEED1124B57C6176023CC68F@eridani.de.3soft>

 Hay Kay,	:-)

Thanks a lot for your help. Now I?ve taken your option with the syntactic predicate and it works fine.


Best wishes,
Martina


-----Original Message-----
From: Kay Roepke [mailto:kroepke at classdump.org] 
Sent: Tuesday, November 28, 2006 4:41 PM
To: Pantzagias, Martina
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to use greedy in antlr3

Hi Martina!

On 28. Nov 2006, at 16:00 , Pantzagias, Martina wrote:

> This works fine, but if I add the second alternative an warning occurs 
> (--> multiple alternatives):
>
> Tag
>     :    '{' (options{greedy=false;}: .)* '}'
>     |    '{!{' (options{greedy=false;}: .)* '}!}'
>
>
> How can I solve this problem?

There are two ways:
One with a warning, but correct behavior, the other without a warning but a (slight) performance hit.

The important thing to note with ANTLR is that it will always do the matching in the order of the alts in a rule.
In your rule ANTLR tells you that it disabled alt2 for input like '{', because the first alt already matches.
Simply reversing the alts will match correctly.
The second option you can take is to use a syntactic predicate to disambiguate (and to shut up the warning).
The grammar below will make it clear (hopefully :)...

grammar Greedy;

tags:	TAG+;
/* This rule doesn't warn */
/*
TAG	:	('{!{') => '{!{' (options{greedy=false;}: .)*  
{ System.err.println("alt1"); }'}!}'
	|	'{'	(options{greedy=false;}: .)*{ System.err.println("alt2"); } '}'
	;
*/

/* This warns, but will match correctly */
TAG	:	'{!{' (options{greedy=false;}: .)* { System.err.println("{! 
{"); } '}!}'
	|	'{' (options{greedy=false;}: .)* { System.err.println("plain  
{"); }'}'
	;

WS	:	(' ' | '\t' | '\n' | '\r') { skip(); }
	;

In AW, you need to use the debugger and watch the "Output" to see the System.err... calls.

HTH,
-k

--
Kay R?pke
http://classdump.org/






----------------------------------------------------------------
Please note: This e-mail may contain confidential information
intended solely for the addressee. If you have received this
e-mail in error, please do not disclose it to anyone, notify
the sender promptly, and delete the message from your system.
Thank you.


From nicolai at mainiero.de  Wed Nov 29 00:34:05 2006
From: nicolai at mainiero.de (Nicolai Mainiero)
Date: Wed, 29 Nov 2006 09:34:05 +0100
Subject: [antlr-interest] Problem with mutually left recursion
Message-ID: <4E75D7EB-081A-45BB-B3B5-FCDF9FF8BBA5@mainiero.de>

Hi,

I am new to ANTLR and parser grammars and have with the following  
grammar a mutual left recusrion problem. Perhapes anybody can guide  
me throug the necessary rewriting of the rules.

I already used ANTLRWorks to detect the affectet rules. Here is the  
console output from it.

[09:19:55] Checking Grammar...
[09:19:55] Aborting because the following rules are mutually left- 
recursive:
     [var, functioncall, prefixexp]
     [fieldset, exp, tableconstructor, field]

Any help would be great.
Nicolai

PS: Here is the grammar I'm using:

chunk	:	(stat SEMI)* (laststat SEMI)?
	 	;
	
block	:	chunk
		;
		
stat	:	varlist1 EQUALS explist1
		|	functioncall
		|	DO block END
		|	WHILE exp DO block END
		|	REPEAT block UNTIL exp
		|	IF exp THEN block (ELSEIF exp THEN block)* (ELSE block)? END
		|	FOR NAME EQUALS exp COMMA exp (COMMA exp)? DO block END
		|	FOR namelist IN explist1 DO block END
		|	FUNCTION^ funcname funcbody
		| 	LOCAL FUNCTION NAME funcbody
		|	LOCAL namelist (EQUALS explist1)?
		;
	
laststat: 	RETURN explist1
		|		BREAK
		;
		
funcname:	NAME (DOT NAME)* (COLON NAME)?
		;


varlist1:	var (COMMA var)*
		;

var	:	NAME
		|	prefixexp LLARGEBRACKET exp RLARGEBRACKET
		|	prefixexp  DOT NAME
		;


namelist:	NAME (COMMA NAME)*
		;
		
explist1:	(exp COMMA)* exp
		;

exp		:	(NIL | FALSE | TRUE | NUMBER | STRING | THREEDOTS | function |  
prefixexp | tableconstructor | unop exp) (binop exp)*
		;

prefixexp:	var
		 |	functioncall
		 |	LBRACKET exp RBRACKET
		 ;
		 	
functioncall: prefixexp  args
			| prefixexp COLON NAME args
			;
			
	
			
args	:	LBRACKET (explist1)? RBRACKET
		|	tableconstructor
		| 	STRING
		;

function:	FUNCTION funcbody
		;

funcbody:	LBRACKET (parlist1)? RBRACKET block END
		;
		
parlist1:	namelist (COMMA THREEDOTS)?
		|	THREEDOTS
		;
		
tableconstructor:	(fieldset)*
				;
				
fieldset:	field (fieldsep field)* (fieldsep)?
		;

field	:	LLARGEBRACKET exp RLARGEBRACKET EQUALS exp
		|	NAME EQUALS exp
		|	exp
		;
		
fieldsep:	COMMA
		|	SEMI
		;
		
binop	:	PLUS
		|	MINUS
		|	STAR
		|	SLASH
		|	HAT
		|	PERCENT
		|	TWODOTS
		|	SMALLER
		|	SMALLEREQ
		|	LARGER
		|	LARGEREQ
		|	DOUBLEEQ
		|	NEGATEEQ
		|	AND
		|	OR
		;
		
unop	:	MINUS
		|	NOT
		|	HASH
		;
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2421 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061129/3969d7c8/attachment.bin 

From open.zone at virgin.net  Wed Nov 29 02:05:23 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed, 29 Nov 2006 10:05:23 -0000
Subject: [antlr-interest] How to use greedy in antlr3
In-Reply-To: <F0B08E6040B78D46BEED1124B57C6176023CC68F@eridani.de.3soft>
Message-ID: <008101c7139d$e3873270$c704a8c0@hercules>

Hi Martina,

> Thanks a lot for your help. Now I?ve taken your option with 
> the syntactic predicate and it works fine.

The other option that generates a warning is a better choice if performance
is important to you. Syntactic predicates are costly. Particularly in a
lexer. 

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From kroepke at classdump.org  Wed Nov 29 03:35:20 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 29 Nov 2006 12:35:20 +0100
Subject: [antlr-interest] ANTLR3.0b5 - Embedding on parser within
	another one (Parser nesting)
In-Reply-To: <696E9A46BED8E544A7BD2C20A7E94F680452B6E4@marena.SIDON.OLYMP>
References: <696E9A46BED8E544A7BD2C20A7E94F680452B6E4@marena.SIDON.OLYMP>
Message-ID: <48895B78-867D-4090-AF47-932C49693EC8@classdump.org>

Moin Alex!

On 29. Nov 2006, at 8:28 , alexander.berger at finnova.ch wrote:

> Hi Kay
>
> Thank you for your answer. Of course you are right, but it is not  
> what I
> intended to do. The problem is not to force antlr to use the return  
> value
> of a rule as the resulting tree. The Problem is within the called  
> rule to
> force antlr to set the resulting tree to the one returned by the  
> embedded parser.

Oops, I missed that.

> My next approach was the following one:
[...]
> 	retval.tree = (Object)adaptor.rulePostProcessing(root_0);

Yes, the retval stuff is done last. Setting $tree only makes sense in  
@finally actions (I think, I might be wrong here).

> And horray it worked the way I expected it, but I think that using  
> "root_0" is very intrusive and not the way to go. So I am still  
> wondering if there
> is a way to do things like that in a non-intrusive way.

You're right, depending on root_0 is a bad idea. At some point this  
might get an '_' prefix.
Try this (I haven't actually tried to execute it, but the code looks  
good):

grammar Parent;

options {
	output=AST;
	ASTLabelType=CommonTree;
}

start
	:	s=subRule -> ^($s);
	
subRule
@init {
	CommonTree child = null;
}
	:	'do' {
			ChildParser p = new ChildParser(this.getTokenStream());
			p.setTreeAdaptor(this.getTreeAdaptor());
			child = (CommonTree)p.some_rule().getTree();
		}
		-> ^({child})
	;

generates this for start():

             retval.tree = root_0;
             root_0 = (CommonTree)adaptor.nil();
             // 9:14: -> ^( $s)
             {
                 // /Users/kroepke/test/Parent.g:9:17: ^( $s)
                 {
                 CommonTree root_1 = (CommonTree)adaptor.nil();
                 root_1 = (CommonTree)adaptor.becomeRoot(s.tree,  
root_1);

                 adaptor.addChild(root_0, root_1);
                 }

             }
and this for subRule():
             retval.tree = root_0;
             root_0 = (CommonTree)adaptor.nil();
             // 20:3: -> ^()
             {
                 // /Users/kroepke/test/Parent.g:20:6: ^()
                 {
                 CommonTree root_1 = (CommonTree)adaptor.nil();
                 root_1 = (CommonTree)adaptor.becomeRoot(child, root_1);

                 adaptor.addChild(root_0, root_1);
                 }

             }

Postprocessing at the end should get rid of the nil nodes, leaving  
you with 'child'.

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From hugo.a.garcia at gmail.com  Wed Nov 29 03:36:29 2006
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Wed, 29 Nov 2006 12:36:29 +0100
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
Message-ID: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>

Hi

At http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

I cut and past the grammar and succesfully generate a parser and a
lexer but when I open the code for the parser then I get the following
error (line 382 in my editor) :

                case 3 :
                    // Expr.g:46:5: '(' expr ')'
                    {
                    match(input,12,FOLLOW_12_in_atom257);
                    pushFollow(FOLLOW_expr_in_atom259);
                    expr();
                    _fsp--;

                    match(input,13,FOLLOW_13_in_atom261);
<error>          value = $expr.value;

                    }
                    break;


-H

From alexander.berger at finnova.ch  Wed Nov 29 03:51:29 2006
From: alexander.berger at finnova.ch (alexander.berger at finnova.ch)
Date: Wed, 29 Nov 2006 12:51:29 +0100
Subject: [antlr-interest] ANTLR3.0b5 - Embedding on parser within
	another one (Parser nesting)
Message-ID: <696E9A46BED8E544A7BD2C20A7E94F680452B731@marena.SIDON.OLYMP>

Yep, that is it. This way it works as expected. Now it's fun again :-).

Thank you very much for your help.

Kind regards
Alex

____________________________________________

finnova AG Bankware
Alexander Berger
SR-Peripheral-Team 

S?gestrasse 22, CH-5600 Lenzburg
Tel: +41 62 886 4807 / Fax: +41 62 886 4888 mailto:alexander.berger at finnova.ch
http://www.finnova.ch 

-----Urspr?ngliche Nachricht-----
Von: Kay Roepke [mailto:kroepke at classdump.org] 
Gesendet: Mittwoch, 29. November 2006 12:35
An: Berger Alexander
Cc: antlr-interest at antlr.org; alex-berger at gmx.ch
Betreff: Re: AW: [antlr-interest] ANTLR3.0b5 - Embedding on parser within another one (Parser nesting)

Moin Alex!

On 29. Nov 2006, at 8:28 , alexander.berger at finnova.ch wrote:

> Hi Kay
>
> Thank you for your answer. Of course you are right, but it is not  
> what I
> intended to do. The problem is not to force antlr to use the return  
> value
> of a rule as the resulting tree. The Problem is within the called  
> rule to
> force antlr to set the resulting tree to the one returned by the  
> embedded parser.

Oops, I missed that.

> My next approach was the following one:
[...]
> 	retval.tree = (Object)adaptor.rulePostProcessing(root_0);

Yes, the retval stuff is done last. Setting $tree only makes sense in  
@finally actions (I think, I might be wrong here).

> And horray it worked the way I expected it, but I think that using  
> "root_0" is very intrusive and not the way to go. So I am still  
> wondering if there
> is a way to do things like that in a non-intrusive way.

You're right, depending on root_0 is a bad idea. At some point this  
might get an '_' prefix.
Try this (I haven't actually tried to execute it, but the code looks  
good):

grammar Parent;

options {
	output=AST;
	ASTLabelType=CommonTree;
}

start
	:	s=subRule -> ^($s);
	
subRule
@init {
	CommonTree child = null;
}
	:	'do' {
			ChildParser p = new ChildParser(this.getTokenStream());
			p.setTreeAdaptor(this.getTreeAdaptor());
			child = (CommonTree)p.some_rule().getTree();
		}
		-> ^({child})
	;

generates this for start():

             retval.tree = root_0;
             root_0 = (CommonTree)adaptor.nil();
             // 9:14: -> ^( $s)
             {
                 // /Users/kroepke/test/Parent.g:9:17: ^( $s)
                 {
                 CommonTree root_1 = (CommonTree)adaptor.nil();
                 root_1 = (CommonTree)adaptor.becomeRoot(s.tree,  
root_1);

                 adaptor.addChild(root_0, root_1);
                 }

             }
and this for subRule():
             retval.tree = root_0;
             root_0 = (CommonTree)adaptor.nil();
             // 20:3: -> ^()
             {
                 // /Users/kroepke/test/Parent.g:20:6: ^()
                 {
                 CommonTree root_1 = (CommonTree)adaptor.nil();
                 root_1 = (CommonTree)adaptor.becomeRoot(child, root_1);

                 adaptor.addChild(root_0, root_1);
                 }

             }

Postprocessing at the end should get rid of the nil nodes, leaving  
you with 'child'.

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 29 03:57:36 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 29 Nov 2006 12:57:36 +0100
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
Message-ID: <82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>


On 29. Nov 2006, at 12:36 , Hugo Garcia wrote:

> At http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
>
> I cut and past the grammar and succesfully generate a parser and a
> lexer but when I open the code for the parser then I get the following
> error (line 382 in my editor) :

Ouch. Changing the offending line to

    |   '(' e=expr ')' {$value = $e.value;}

works as expected. I'll investigate.

Thanks,

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Nov 29 04:06:47 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 29 Nov 2006 13:06:47 +0100
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
	<82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
Message-ID: <42FDA90C-7A45-4507-BA3C-DE09EFE173DA@classdump.org>


On 29. Nov 2006, at 12:57 , Kay Roepke wrote:

> Ouch. Changing the offending line to
>
>    |   '(' e=expr ')' {$value = $e.value;}
>
> works as expected. I'll investigate.

Turns out that ANTLR only checks for predefined attributes when using  
$expr.value without a label.
$expr.tree etc. work.
The question is, whether we want to allow return values to be  
accessed that way, too.
Going the route with the label always works.

-k
-- 
Kay R?pke
http://classdump.org/





From jsantander at lucent.com  Wed Nov 29 06:05:03 2006
From: jsantander at lucent.com (Julian Santander)
Date: Wed, 29 Nov 2006 15:05:03 +0100
Subject: [antlr-interest] Matching ellipsis
In-Reply-To: <FB9F1A24-8E92-4A96-B7AD-B79FEB59349A@cs.usfca.edu>
References: <4566C582.7010109@lucent.com>
	<FB9F1A24-8E92-4A96-B7AD-B79FEB59349A@cs.usfca.edu>
Message-ID: <456D938F.9090108@lucent.com>

Hi Ter,

    Thanks very much for your answer. I did manage to solve it, let me 
tell you what I did and also pose an additional problem I have:

The rule I used in the end (I manage to find a previous post that I 
could shamelessly copy-and-modify) is:

T_FLOAT_LITERAL:
        ( i=T_INTEGER_LITERAL d=T_DOT
            ( ( T_INTEGER_LITERAL?)
            | ( r=T_DOT
                    ( ( /*empty*/
                            { i.setType(T_INTEGER_LITERAL);
                              emit(i);
                              d.setType(T_ELLIPSIS);
                              d.setText("..");
                              emit(d); } )
                    ) )
	    | (r=T_ELLIPSIS
                    ( ( /*empty*/
                            { i.setType(T_INTEGER_LITERAL);
                              emit(i);
                              d.setType(T_ELLIPSIS);
                              d.setText("."+r.getText());
                              emit(d); } )
                    ) )
			
            ) )
    	|   ( T_DOT T_INTEGER_LITERAL)
    ;


However this needs some additional code to be added:

@lexer::members {
    // maximum number of emit() calls inside any rule action
    private static final int MAX_EMIT_COUNT = 2;

    // buffer (queue) to hold the emit()'d tokens
    private Token [] myToken = new Token[MAX_EMIT_COUNT];
    private int add_idx = 0; // deposit emit token here
    private int next_idx = 0; // next token to be delivered to parser

    public void emit(Token t) {
        token = t; // set flag to avoid automatic emit() at end of rule.
        myToken[add_idx++] = t;
    }

    public Token nextToken() {
        while (true) {
            if ( add_idx == next_idx ) {
                token = null;
                add_idx = 0;
                next_idx = 0;
                tokenStartCharIndex = getCharIndex();
                if ( input.LA(1)==CharStream.EOF ) {
                    return Token.EOF_TOKEN;
                }
                try {
                    mTokens();
                }
                catch (RecognitionException re) {
                    reportError(re);
                    recover(re);
                }
            } else {
                Token result = myToken[next_idx++];
                if ( result != Token.SKIP_TOKEN ) { // discard SKIP tokens
                    return result;
                }
            }
        }
    }
}


At least I believe that If I don't add this code, only the last token is 
really emitted (???) and this aligns with what was indicated in the post 
I refer too (actually the code was copied from that post)

Is this still applicable? or can I just happily emit(). Am I doing too 
many unneeded things in the rule?

I have another problem in this language (this is an existing language 
written in yacc and lex I'm trying to create a scanner for, btw).  The 
language defines an identifier as being able to contain '!' characters, 
but not as the last or the first character of the identifier. I.e 
abc!xyz should produce a T_IDENT(abc!xyz) token, while abc!=xyz should 
produce T_IDENT(abc); T_BANG_EQUAL(!=); T_IDENT(xyz).

After different attempts I decided to use a similar approach than the 
ellipsis case I showed above. However the problem was the interaction 
with Keywords sort of this (i.e. if!(a && B) should produce 
KW_IF(if);T_BANG(!);T_LPAREN(();T_IDENT(a);T_AND(&&);T_IDEN(B);T_RPAREN()).

So far my solution has been to explicitly test for the "if" string to 
emit token KW_IF or T_IDENT, but I wonder if there's some magic I could 
perform to implement this in a more uniform manner:

T_IDENT: 
	ALPHANUMERIC+
	;

T_IDENT_BANG:
	i=T_IDENT (T_BANG T_IDENT)* b=T_BANG (
		(T_IDENT)=> s=T_IDENT {
			i.setType(T_IDENT);
			i.setText(getText());
			emit(i);
		  }
		| (T_EQUAL)=> s=T_EQUAL {
			if(i.getText().equals("if")) {
				i.setType(KW_IF);
			} else if (i.getText().equals("elif")) {
				i.setType(KW_ELIF);
			} else {
				i.setType(T_IDENT);
			}
			emit(i);
			b.setType(T_BANG_EQUAL);
			b.setText(b.getText()+s.getText());
			emit(b);
		}
		| { 
			if(i.getText().equals("if")) {
				i.setType(KW_IF);
			} else if (i.getText().equals("elif")) {
				i.setType(KW_ELIF);
			} else {
				i.setType(T_IDENT);
			}
			emit(i);
			b.setType(T_BANG);
			emit(b);
		  }
	) 
	;



Thanks very much in advance and sorry for the long e-mail.
Best regards

    Julian

Terence Parr escribi?:
> Hi Julian,
>
> just call emit() multiple times within a lexer rule :)
>
> Ter
> On Nov 24, 2006, at 2:12 AM, Julian Santander wrote:
>
>> Folks,
>>
>>     I'd be very grateful if someone could provide me some guidance on 
>> a problem I'm having. This is actually my first attempt at a parser 
>> using ANTLR. I'm using ANTLR beta 5 with Java generation (on a 
>> Windows XP machine and Java 1.5 if that matters).
>>
>>     At the lexical level I need to match tokens like '.' (dot) '..'  
>> (ellipsis), integers and floating point numbers. (Actually I don't 
>> need sign nor exponential formats)....
>>
>>     So far one of my many attempts has been:
>> T_INTEGER_LITERAL: DIGIT+; DOT: ('.' (('.')=>{false}? | ))=> '.' ; // 
>> This one is copied from 
>> http://www.antlr.org/blog/antlr3/lookahead.tml May 2006 post. 
>> T_ELLIPSIS: '.' '.'+ ; T_FLOAT_LITERAL: DIGIT+ DOT DIGIT* | DOT DIGIT+ ;
>> But so far I'm unable to parse "1..2" into T_INTEGER_LITERAL, 
>> T_ELLIPSIS, T_INTEGER_LITERAL.
>>
>> for example: "... .. 1..2 3...4 5.0 .6 7." renders: TOKEN: 
>> T_ELLIPSIS[@-1,0:2='...',<180>,1:0] TOKEN: WS[@-1,3:3=' 
>> ',<168>,channel=99,1:3] TOKEN: T_ELLIPSIS[@-1,4:5='..',<180>,1:4] 
>> TOKEN: WS[@-1,6:6=' ',<168>,channel=99,1:6] TOKEN: 
>> T_FLOAT_LITERAL[@-1,7:8='1.',<181>,1:7] TOKEN: 
>> T_FLOAT_LITERAL[@-1,9:10='.2',<181>,1:9] TOKEN: WS[@-1,11:11=' 
>> ',<168>,channel=99,1:11] TOKEN: 
>> T_FLOAT_LITERAL[@-1,12:13='3.',<181>,1:12] TOKEN: 
>> T_ELLIPSIS[@-1,14:15='..',<180>,1:14] TOKEN: 
>> T_INTEGER_LITERAL[@-1,16:16='4',<175>,1:16] TOKEN: WS[@-1,17:17=' 
>> ',<168>,channel=99,1:17] TOKEN: 
>> T_FLOAT_LITERAL[@-1,18:20='5.0',<181>,1:18] TOKEN: WS[@-1,21:21=' 
>> ',<168>,channel=99,1:21] TOKEN: 
>> T_FLOAT_LITERAL[@-1,22:23='.6',<181>,1:22] TOKEN: WS[@-1,24:24=' 
>> ',<168>,channel=99,1:24] TOKEN: 
>> T_FLOAT_LITERAL[@-1,25:26='7.',<181>,1:25] TOKEN: 
>> WS[@-1,27:27='\n',<168>,channel=99,1:27]
>> I've tried other things (I've seen a post on emitting multiple tokens 
>> for the same rule, but was apparently not yet supported in v3, I've 
>> seen also the pascal examples for v2, but somehow I couldn't get them 
>> to work??)
>>
>> Thanks very much in advance and best regards
>>
>>     Julian
>>
>>
>>
>>
>
>

-- 
Julian Santander 
IN Application Development		   Tel: +34 91714 9145
Lucent Technologies Spain	<mailto:jsantander at lucent.com>
Avenida De Bruselas 8, Alcobendas,  		  28108  Spain


From open.zone at virgin.net  Wed Nov 29 06:46:53 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed, 29 Nov 2006 14:46:53 -0000
Subject: [antlr-interest] Tree parser tree building bug and workaround
In-Reply-To: <598864c70611281053h398ebf3bx5cefc1ed12419a85@mail.gmail.com>
Message-ID: <009b01c713c5$386a63d0$c704a8c0@hercules>

Hi Monty,

> I just found a bug in 2.7.7 (and 2.7.4).  I have a tree 
> parser rule that builds a tree (just adding a new parent 
> node), like this:
> 
> rule1:
> #( T1 T2 T3
>   { ##=#(#[NEWROOT],##); }
>   )
>   ;

Shouldn't that be:

Rule1
  :  #( T1 T2 T3
     )
     { ##=#(#[NEWROOT],##); }
  ;

With the action block following the tree pattern matching specification.

> >From inside the action, I see that the tree is built properly.  But
> for some reason, upon exit of the rule the AST for rule1 is 
> replaced by the original.  (You can see it in the generated code).

This resonates with my preposition that action block placement might be the
issue here.

[...]

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Wed Nov 29 06:46:53 2006
From: open.zone at virgin.net (Micheal J)
Date: Wed, 29 Nov 2006 14:46:53 -0000
Subject: [antlr-interest] ANTLR C++ Lexer
In-Reply-To: <456C71CB.7010903@dii.unisi.it>
Message-ID: <009c01c713c5$3fda61b0$c704a8c0@hercules>

Hi,

> I'm evaluating ANTLR for a research project so in order to 
> learn it I'm 
> planning to build some very small samples to experiment with. 
> I've started with a lexer-only demo, and here are some questions:

Since you're using ANTLR and C++, you are likely using ANTLR2 (perhaps
2.7.7?). In that case I would advise using a Flex lexer or similar rather
than an ANTLR2 lexer in conjunction with your ANTLR2 parsers/treeparsers. 

This is purely from a performance perspective. ANTLR2 lexers have better
support for error handling for instance.


Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From parrt at cs.usfca.edu  Wed Nov 29 08:30:52 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 08:30:52 -0800
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
	<82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
Message-ID: <3CE857B0-98C5-412C-9FB1-0299E44CE959@cs.usfca.edu>

Jean had the same problem but was using old version not 3.0b5.  It  
works for me...i just built it and put it up ;)

Ter
On Nov 29, 2006, at 3:57 AM, Kay Roepke wrote:

>
> On 29. Nov 2006, at 12:36 , Hugo Garcia wrote:
>
>> At http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
>>
>> I cut and past the grammar and succesfully generate a parser and a
>> lexer but when I open the code for the parser then I get the  
>> following
>> error (line 382 in my editor) :
>
> Ouch. Changing the offending line to
>
>    |   '(' e=expr ')' {$value = $e.value;}
>
> works as expected. I'll investigate.
>
> Thanks,
>
> -k
> -- 
> Kay R?pke
> http://classdump.org/
>
>
>
>


From parrt at cs.usfca.edu  Wed Nov 29 08:32:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 08:32:29 -0800
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <42FDA90C-7A45-4507-BA3C-DE09EFE173DA@classdump.org>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
	<82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
	<42FDA90C-7A45-4507-BA3C-DE09EFE173DA@classdump.org>
Message-ID: <35862EC2-CF2F-4179-BF97-F616EFF6AF35@cs.usfca.edu>


On Nov 29, 2006, at 4:06 AM, Kay Roepke wrote:

>
> On 29. Nov 2006, at 12:57 , Kay Roepke wrote:
>
>> Ouch. Changing the offending line to
>>
>>    |   '(' e=expr ')' {$value = $e.value;}
>>
>> works as expected. I'll investigate.
>
> Turns out that ANTLR only checks for predefined attributes when  
> using $expr.value without a label.
> $expr.tree etc. work.
> The question is, whether we want to allow return values to be  
> accessed that way, too.
> Going the route with the label always works.

This works in latest antlr...perhaps 3.0b5 isn't up to date  
enough...we must have fixed a bug ;)

Grab latest build from the depot browser.

Ter


From Bernd.Vogt at Innovations.de  Wed Nov 29 08:44:09 2006
From: Bernd.Vogt at Innovations.de (Bernd Vogt)
Date: Wed, 29 Nov 2006 17:44:09 +0100
Subject: [antlr-interest] Problems with lexing tokens containing blanks
Message-ID: <456DB8D9.1010802@Innovations.de>

Hi all,

in my current project I have the requirement to lex some tokens like this:

lexer grammar ExampleLexer;
?
INDEX : 'index' ;
INDEX_OF : 'index of' ;
INT : '0' | '1'..'9' '0'..'9'* ;

Internally, the generated lexer does somethin like this:

if ('i' 'n' 'd' 'e' 'x' ' ') -> INDEX_OF
else if ('i' 'n' 'd' 'e' 'x') -> INDEX

Now I get a problem lexing the following input:

?index 4?

The lexer detects 'i' 'n' 'd' 'e' 'x' ' ' and expects the token 
INDEX_OF. So the lexer throws an exception that he expects 'o' and 
doesn't mach the Tokens INDEX and INT...

Hm, I think, I need to teach the lexer to do something like this:

if ('i' 'n' 'd' 'e' 'x' ' ' 'o') -> INDEX_OF
else if ('i' 'n' 'd' 'e' 'x') -> INDEX

How can I do that?

Kind regards
Bernd

P.S.: We are using ANTLR3.


From monty at codetransform.com  Wed Nov 29 10:02:48 2006
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 29 Nov 2006 10:02:48 -0800
Subject: [antlr-interest] Tree parser tree building bug and workaround
In-Reply-To: <009b01c713c5$386a63d0$c704a8c0@hercules>
References: <598864c70611281053h398ebf3bx5cefc1ed12419a85@mail.gmail.com>
	<009b01c713c5$386a63d0$c704a8c0@hercules>
Message-ID: <598864c70611291002wa9b3365s257af268a4786043@mail.gmail.com>

On 11/29/06, Micheal J <open.zone at virgin.net> wrote:
> Hi Monty,
>
> > I just found a bug in 2.7.7 (and 2.7.4).  I have a tree
> > parser rule that builds a tree (just adding a new parent
> > node), like this:
> >
> > rule1:
> > #( T1 T2 T3
> >   { ##=#(#[NEWROOT],##); }
> >   )
> >   ;
>
> Shouldn't that be:
>
> Rule1
>   :  #( T1 T2 T3
>      )
>      { ##=#(#[NEWROOT],##); }
>   ;
>
> With the action block following the tree pattern matching specification.
>
> > >From inside the action, I see that the tree is built properly.  But
> > for some reason, upon exit of the rule the AST for rule1 is
> > replaced by the original.  (You can see it in the generated code).
>
> This resonates with my preposition that action block placement might be the
> issue here.
>

I suppose that is it, but I don't understand why.  What does it
matter?  I would expect the root to be built after T1 has been
matched.  Why can't I manipulate it from inside the #() ?

Monty

Monty

From ric.klaren at gmail.com  Wed Nov 29 10:51:35 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 29 Nov 2006 19:51:35 +0100
Subject: [antlr-interest] ANTLR C++ Lexer
In-Reply-To: <456C71CB.7010903@dii.unisi.it>
References: <456C71CB.7010903@dii.unisi.it>
Message-ID: <bc607a4e0611291051o406f2d52hbbfdc5b1b055fee3@mail.gmail.com>

Hi,

On 11/28/06, Maurizio de Pascale <mdepascale at dii.unisi.it> wrote:
> 1) is it possible (and how) to recover from an exception thrown by
> lexer.nextToken?

If you want to do recovery outside the lexer you could use mark/rewind
on the inputbuffer between tries (if you really want to...)

> I would like to do something like this:
>
> do
> {
>     try{
>
>     token = lexer.nextToken();
>
>     } catch (exception)
>     {
>        //spit output for user but make sure we can continue
>        lexer.resume() ?!?
>     }
> }
> while( token->getType() != Lexer::EOF_ );

If you combine an antlr parser and lexer then this scheme is probably
not the most practical. Rule of thumb keep the lexer simple (and fast)
and do your recovery in the parser where you have more context to give
more sensible error messages.

> 2) I've noticed the paraphrase option:
>
> Identifier
> options{paraphrase = "identifier";}
>
> but is there a way (and how) I can access that string from C++?
> it looks like those strings are only contained in the *TokenTypes.txt
> outputted vocabolary but not anywhere in the other C++ generated files :(
> is this a parser-only accessible stuff?

In the parser you have getTokenName() inside the lexer they're unused
if my memory serves me right.

Cheers,

Ric

From ric.klaren at gmail.com  Wed Nov 29 11:14:23 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 29 Nov 2006 20:14:23 +0100
Subject: [antlr-interest] Tree parser tree building bug and workaround
In-Reply-To: <598864c70611291002wa9b3365s257af268a4786043@mail.gmail.com>
References: <598864c70611281053h398ebf3bx5cefc1ed12419a85@mail.gmail.com>
	<009b01c713c5$386a63d0$c704a8c0@hercules>
	<598864c70611291002wa9b3365s257af268a4786043@mail.gmail.com>
Message-ID: <bc607a4e0611291114w6f656f93q8c578566d8a1368c@mail.gmail.com>

Hi,

On 11/29/06, Monty Zukowski <monty at codetransform.com> wrote:
> On 11/29/06, Micheal J <open.zone at virgin.net> wrote:
> > Hi Monty,
> >
> > > I just found a bug in 2.7.7 (and 2.7.4).  I have a tree
> > > parser rule that builds a tree (just adding a new parent
> > > node), like this:
> > >
> > > rule1:
> > > #( T1 T2 T3
> > >   { ##=#(#[NEWROOT],##); }
> > >   )
> > >   ;
> >
> > Shouldn't that be:
> >
> > Rule1
> >   :  #( T1 T2 T3
> >      )
> >      { ##=#(#[NEWROOT],##); }
> >   ;
> >
> > With the action block following the tree pattern matching specification.
> >
> > > >From inside the action, I see that the tree is built properly.  But
> > > for some reason, upon exit of the rule the AST for rule1 is
> > > replaced by the original.  (You can see it in the generated code).
> >
> > This resonates with my preposition that action block placement might be the
> > issue here.
> >
>
> I suppose that is it, but I don't understand why.  What does it
> matter?  I would expect the root to be built after T1 has been
> matched.  Why can't I manipulate it from inside the #() ?

This is probably an artifact of how the code gets generated for the #(
.. ). After the closing ')' of the #() some code is probably emitted
that borks the ## pointer/reference or something similar. Hmm those
T1..3 are those terminals or subrules in your case? Or I'm missing
something or I made my example .g file to simple.....

Cheers,

Ric

From kroepke at classdump.org  Wed Nov 29 11:19:40 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 29 Nov 2006 20:19:40 +0100
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <35862EC2-CF2F-4179-BF97-F616EFF6AF35@cs.usfca.edu>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
	<82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
	<42FDA90C-7A45-4507-BA3C-DE09EFE173DA@classdump.org>
	<35862EC2-CF2F-4179-BF97-F616EFF6AF35@cs.usfca.edu>
Message-ID: <8723AD49-E583-4F79-92E3-B29D1637EDB3@classdump.org>


On 29. Nov 2006, at 17:32 , Terence Parr wrote:

> This works in latest antlr...perhaps 3.0b5 isn't up to date  
> enough...we must have fixed a bug ;)

Yeah, it was the translateAction thing from last week. Had my  
classpath all mixed up :\

-k
-- 
Kay R?pke
http://classdump.org/





From jbriant at highmoonstudios.com  Wed Nov 29 11:22:21 2006
From: jbriant at highmoonstudios.com (Jamie Briant)
Date: Wed, 29 Nov 2006 11:22:21 -0800
Subject: [antlr-interest] antlrdev woes
Message-ID: <DDE09233DE8FB842BC45AAC0A8218E0A05706E19@hermes.sammystudios.com>

I downloaded ANTLRWorks version 1.0b6 and also the antlr examples
(examples-v3). However, in ANTLRWorks the interpreter chokes on the
tweak grammar (T.g). It looks like it doesn't understand the hidden
directive in the white space rule:

 

WS  :   (' '|'\t'|'\n')+ {$channel=HIDDEN;}

    ;

 

I haven't been following v3 development. Is this a new addition that
ANTLRWorks isn't aware of, and if so what do I need to do to get these
examples to work?

 

Jamie

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061129/a80863e3/attachment.html 

From parrt at cs.usfca.edu  Wed Nov 29 11:35:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 11:35:39 -0800
Subject: [antlr-interest] antlrdev woes
In-Reply-To: <DDE09233DE8FB842BC45AAC0A8218E0A05706E19@hermes.sammystudios.com>
References: <DDE09233DE8FB842BC45AAC0A8218E0A05706E19@hermes.sammystudios.com>
Message-ID: <DD19C3B9-562B-4283-BE96-C9F9460265A8@cs.usfca.edu>

Hi. we recently changed channel= to $channel.  Jean, did you update  
AW to see the new style?

Regardless, you can tell AW which rules are whitespace manually. :)

Ter
On Nov 29, 2006, at 11:22 AM, Jamie Briant wrote:

> I downloaded ANTLRWorks version 1.0b6 and also the antlr examples  
> (examples-v3). However, in ANTLRWorks the interpreter chokes on the  
> tweak grammar (T.g). It looks like it doesn?t understand the hidden  
> directive in the white space rule:
>
>
> WS  :   (' '|'\t'|'\n')+ {$channel=HIDDEN;}
>
>     ;
>
>
> I haven?t been following v3 development. Is this a new addition  
> that ANTLRWorks isn?t aware of, and if so what do I need to do to  
> get these examples to work?
>
>
> Jamie
>
>


From parrt at cs.usfca.edu  Wed Nov 29 11:36:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 11:36:31 -0800
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <8723AD49-E583-4F79-92E3-B29D1637EDB3@classdump.org>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
	<82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
	<42FDA90C-7A45-4507-BA3C-DE09EFE173DA@classdump.org>
	<35862EC2-CF2F-4179-BF97-F616EFF6AF35@cs.usfca.edu>
	<8723AD49-E583-4F79-92E3-B29D1637EDB3@classdump.org>
Message-ID: <7BA4D3C0-8EC4-4AB4-A41A-CA54EBD11DBD@cs.usfca.edu>

Ok, can we switch tutorial back then ( with a note that it requires  
the latest build)?

Ter
On Nov 29, 2006, at 11:19 AM, Kay Roepke wrote:

>
> On 29. Nov 2006, at 17:32 , Terence Parr wrote:
>
>> This works in latest antlr...perhaps 3.0b5 isn't up to date  
>> enough...we must have fixed a bug ;)
>
> Yeah, it was the translateAction thing from last week. Had my  
> classpath all mixed up :\
>
> -k
> -- 
> Kay R?pke
> http://classdump.org/
>
>
>
>


From kroepke at classdump.org  Wed Nov 29 11:36:19 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 29 Nov 2006 20:36:19 +0100
Subject: [antlr-interest] Expression evaluator error [v3 wiki]
In-Reply-To: <7BA4D3C0-8EC4-4AB4-A41A-CA54EBD11DBD@cs.usfca.edu>
References: <f9637ada0611290336t16142ffbt489e1bad39ca7d89@mail.gmail.com>
	<82FC8CD3-6EF7-405B-B70C-8854CF200D7A@classdump.org>
	<42FDA90C-7A45-4507-BA3C-DE09EFE173DA@classdump.org>
	<35862EC2-CF2F-4179-BF97-F616EFF6AF35@cs.usfca.edu>
	<8723AD49-E583-4F79-92E3-B29D1637EDB3@classdump.org>
	<7BA4D3C0-8EC4-4AB4-A41A-CA54EBD11DBD@cs.usfca.edu>
Message-ID: <D7130697-B369-4CF0-B5D7-CFBD53A3D4D7@classdump.org>


On 29. Nov 2006, at 20:36 , Terence Parr wrote:

> Ok, can we switch tutorial back then ( with a note that it requires  
> the latest build)?

Will do.

-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Wed Nov 29 11:52:25 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 11:52:25 -0800
Subject: [antlr-interest] antlrdev woes
In-Reply-To: <241B9834-010F-1000-B690-7A1EF2F78B5F-Webmail-10024@mac.com>
References: <DDE09233DE8FB842BC45AAC0A8218E0A05706E19@hermes.sammystudios.com>
	<DD19C3B9-562B-4283-BE96-C9F9460265A8@cs.usfca.edu>
	<241B9834-010F-1000-B690-7A1EF2F78B5F-Webmail-10024@mac.com>
Message-ID: <8906069D-73DC-40A5-9F6E-05139D89CAE7@cs.usfca.edu>


On Nov 29, 2006, at 11:44 AM, Jean Bovet wrote:

>> Hi. we recently changed channel= to $channel.  Jean, did you update
>> AW to see the new style?
>
> The current version of AW does not support the new style but the  
> upcoming b7 does. What about skip() (does it have the same  
> purpose)? I was planning to support it also.

Yep, but you should support it only if it is alone  in the action  
(i.e., without other conditionals and so on in the action).

Ter


From monty at codetransform.com  Wed Nov 29 11:51:55 2006
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 29 Nov 2006 11:51:55 -0800
Subject: [antlr-interest] Tree parser tree building bug and workaround
In-Reply-To: <bc607a4e0611291114w6f656f93q8c578566d8a1368c@mail.gmail.com>
References: <598864c70611281053h398ebf3bx5cefc1ed12419a85@mail.gmail.com>
	<009b01c713c5$386a63d0$c704a8c0@hercules>
	<598864c70611291002wa9b3365s257af268a4786043@mail.gmail.com>
	<bc607a4e0611291114w6f656f93q8c578566d8a1368c@mail.gmail.com>
Message-ID: <598864c70611291151g175ecf46n37fb4512b3a4e813@mail.gmail.com>

Oh, actually my rule did call subrules instead of just terminals.
Here's a simple example, just for looking at the generated code.
functionBad generates code which overwrites the built AST.
functionGood generates code which builds and preserves the AST
properly.

class Test extends TreeParser;
options {
	buildAST=true;
}

functionBad
    :
    #(f:FUNCTION
	      (functionBad)*
	      {##=#(#[FUNCTION],##);}
	     )
    ;

functionGood
    :
    #(f:FUNCTION
	      (functionGood)*
	     )
	      {##=#(#[FUNCTION],##);}
    ;
On 11/29/06, Ric Klaren <ric.klaren at gmail.com> wrote:
> Hi,
>
> On 11/29/06, Monty Zukowski <monty at codetransform.com> wrote:
> > On 11/29/06, Micheal J <open.zone at virgin.net> wrote:
> > > Hi Monty,
> > >
> > > > I just found a bug in 2.7.7 (and 2.7.4).  I have a tree
> > > > parser rule that builds a tree (just adding a new parent
> > > > node), like this:
> > > >
> > > > rule1:
> > > > #( T1 T2 T3
> > > >   { ##=#(#[NEWROOT],##); }
> > > >   )
> > > >   ;
> > >
> > > Shouldn't that be:
> > >
> > > Rule1
> > >   :  #( T1 T2 T3
> > >      )
> > >      { ##=#(#[NEWROOT],##); }
> > >   ;
> > >
> > > With the action block following the tree pattern matching specification.
> > >
> > > > >From inside the action, I see that the tree is built properly.  But
> > > > for some reason, upon exit of the rule the AST for rule1 is
> > > > replaced by the original.  (You can see it in the generated code).
> > >
> > > This resonates with my preposition that action block placement might be the
> > > issue here.
> > >
> >
> > I suppose that is it, but I don't understand why.  What does it
> > matter?  I would expect the root to be built after T1 has been
> > matched.  Why can't I manipulate it from inside the #() ?
>
> This is probably an artifact of how the code gets generated for the #(
> .. ). After the closing ')' of the #() some code is probably emitted
> that borks the ## pointer/reference or something similar. Hmm those
> T1..3 are those terminals or subrules in your case? Or I'm missing
> something or I made my example .g file to simple.....
>
> Cheers,
>
> Ric
>

From parrt at cs.usfca.edu  Wed Nov 29 12:22:40 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 12:22:40 -0800
Subject: [antlr-interest] Problems with lexing tokens containing blanks
In-Reply-To: <456DB8D9.1010802@Innovations.de>
References: <456DB8D9.1010802@Innovations.de>
Message-ID: <C0E865BD-A107-4732-994F-C8A080E9E272@cs.usfca.edu>


On Nov 29, 2006, at 8:44 AM, Bernd Vogt wrote:

> Hi all,
>
> in my current project I have the requirement to lex some tokens  
> like this:
>
> lexer grammar ExampleLexer;
> ?
> INDEX : 'index' ;
> INDEX_OF : 'index of' ;
> INT : '0' | '1'..'9' '0'..'9'* ;

Hi, try putting

INDEX_OF : 'index of' ;

before INDEX.

Ter


From ric.klaren at gmail.com  Wed Nov 29 13:03:15 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 29 Nov 2006 22:03:15 +0100
Subject: [antlr-interest] Tree parser tree building bug and workaround
In-Reply-To: <598864c70611291151g175ecf46n37fb4512b3a4e813@mail.gmail.com>
References: <598864c70611281053h398ebf3bx5cefc1ed12419a85@mail.gmail.com>
	<009b01c713c5$386a63d0$c704a8c0@hercules>
	<598864c70611291002wa9b3365s257af268a4786043@mail.gmail.com>
	<bc607a4e0611291114w6f656f93q8c578566d8a1368c@mail.gmail.com>
	<598864c70611291151g175ecf46n37fb4512b3a4e813@mail.gmail.com>
Message-ID: <bc607a4e0611291303o274d2be6pcd9f47a683be0879@mail.gmail.com>

Hi,

On 11/29/06, Monty Zukowski <monty at codetransform.com> wrote:
> Oh, actually my rule did call subrules instead of just terminals.
> Here's a simple example, just for looking at the generated code.
> functionBad generates code which overwrites the built AST.
> functionGood generates code which builds and preserves the AST
> properly.
>
> class Test extends TreeParser;
> options {
>         buildAST=true;
> }
>
> functionBad
>     :
>     #(f:FUNCTION
>               (functionBad)*
>               {##=#(#[FUNCTION],##);}
>              )
>     ;
>
> functionGood
>     :
>     #(f:FUNCTION
>               (functionGood)*
>              )
>               {##=#(#[FUNCTION],##);}
>     ;

         functionBad_AST = (AST)currentAST.root;
         functionBad_AST=(AST)astFactory.make( (new ASTArray(2)).add(astFactory$
         currentAST.root = functionBad_AST;
         currentAST.child = functionBad_AST!=null &&functionBad_AST.getFirstChi$
            functionBad_AST.getFirstChild() : functionBad_AST;
         currentAST.advanceChildToEnd();
.         currentAST = __currentAST2;
.         _t = __t2;
.         _t = _t.getNextSibling();
         functionBad_AST = (AST)currentAST.root;

vs:

.        currentAST = __currentAST6;
.         _t = __t6;
.         _t = _t.getNextSibling();
         functionGood_AST = (AST)currentAST.root;
         functionGood_AST=(AST)astFactory.make( (new ASTArray(2)).add(astFactor$
         currentAST.root = functionGood_AST;
         currentAST.child = functionGood_AST!=null &&functionGood_AST.getFirstC$
            functionGood_AST.getFirstChild() : functionGood_AST;
         currentAST.advanceChildToEnd();
         functionGood_AST = (AST)currentAST.root;

The bad AST example modifies the currentAST before it's set as a
result of the #( .. ) construct. Compare the position of the lines
with a '.' in front of them. I guess the fix in this case would be to
disallow assigning to ## (and probably to #rulename) inside #( .. ).

Cheers,

Ric

From ryan.hollom at us.lawson.com  Wed Nov 29 13:14:33 2006
From: ryan.hollom at us.lawson.com (Ryan Hollom)
Date: Wed, 29 Nov 2006 15:14:33 -0600
Subject: [antlr-interest] Problems with lexing tokens containing blanks
In-Reply-To: <C0E865BD-A107-4732-994F-C8A080E9E272@cs.usfca.edu>
Message-ID: <OF340ED6DA.89ADB4EB-ON86257235.0073DE20-86257235.0074B092@lawson.com>

Terence,
Putting the INDEX_OF rule first doesn't seem to do the trick for me.  For 
instance, the full lexer grammar:

lexer grammar testgrammarlexer;

INDEX_OF :      'index of' ;
INDEX   :       'index' ;

NEWLINE :   (('\r')? '\n' )+ ;
ID      : ( 'A' .. 'Z' | '0' .. '9') ( 'A' .. 'Z' | 'a' .. 'z' | '0' .. 
'9')*; 
WS      :       (' '|'\t')+ {$channel=HIDDEN;};

Still generates the mTOKENS section that checks for 'i' 'n' 'd' 'e' 'x' ' 
', at which point it assumes the token is 'index of'.  In detail, it 
generates this:
    public void mTokens() throws RecognitionException {
        int alt5=5;
        switch ( input.LA(1) ) {
        case 'i':
            int LA5_1 = input.LA(2);
            if ( (LA5_1=='n') ) {
                int LA5_5 = input.LA(3);
                if ( (LA5_5=='d') ) {
                    int LA5_6 = input.LA(4);
                    if ( (LA5_6=='e') ) {
                        int LA5_7 = input.LA(5);
                        if ( (LA5_7=='x') ) {
                            int LA5_8 = input.LA(6);
                            if ( (LA5_8==' ') ) {
                                alt5=1; <- INDEX_OF
                            }
                            else {
                                alt5=2;} <- INDEX
                        }

I've run into this issue in other ways for my grammar, and even if putting 
INDEX_OF as the first rule did work, what if you're not directly creating 
a lexer rule for each multi word keyword (that is, just referencing the 
keywords in the parser rules like 'index of' and 'index')?  Do all of the 
parser rules therefore need to be in the proper order to generate the 
correct lexer?  Sometimes this is not possible, and likely not desired.

Do lexer predicates need to be used, or perhaps a fixed lookahead (of at 
least 7 in this case)?

Thanks,
-Ryan




Terence Parr <parrt at cs.usfca.edu> 
Sent by: antlr-interest-bounces at antlr.org
11/29/2006 02:22 PM

To
ANTLR Interest <antlr-interest at antlr.org>
cc

Subject
Re: [antlr-interest] Problems with lexing tokens containing blanks







On Nov 29, 2006, at 8:44 AM, Bernd Vogt wrote:

> Hi all,
>
> in my current project I have the requirement to lex some tokens 
> like this:
>
> lexer grammar ExampleLexer;
> ?
> INDEX : 'index' ;
> INDEX_OF : 'index of' ;
> INT : '0' | '1'..'9' '0'..'9'* ;

Hi, try putting

INDEX_OF : 'index of' ;

before INDEX.

Ter



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061129/2d2bdc4f/attachment.html 

From rschulz at sonic.net  Wed Nov 29 13:19:55 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 29 Nov 2006 13:19:55 -0800
Subject: [antlr-interest] Problems with lexing tokens containing blanks
In-Reply-To: <456DB8D9.1010802@Innovations.de>
References: <456DB8D9.1010802@Innovations.de>
Message-ID: <200611291319.55895.rschulz@sonic.net>

Bernd,

On Wednesday 29 November 2006 08:44, Bernd Vogt wrote:
> Hi all,
>
> in my current project I have the requirement to lex some tokens like
> this:
>
> lexer grammar ExampleLexer;
> ?
> INDEX : 'index' ;
> INDEX_OF : 'index of' ;
> INT : '0' | '1'..'9' '0'..'9'* ;
>
> ...
>
> How can I do that?

Wouldn't it just be easier to handle this sort of construct at the 
parsing level rather than the lexical analysis level?


> Kind regards
> Bernd


Randall Schulz

From jbriant at highmoonstudios.com  Wed Nov 29 14:57:24 2006
From: jbriant at highmoonstudios.com (Jamie Briant)
Date: Wed, 29 Nov 2006 14:57:24 -0800
Subject: [antlr-interest] namespaces in v3
Message-ID: <DDE09233DE8FB842BC45AAC0A8218E0A0341F713@hermes.sammystudios.com>

How do I get v3 to generate code wrapped in a namespace? The namespace
option doesn't appear to be supported anymore?

 

Thanks!



Jamie

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061129/734fdbfb/attachment.html 

From jbriant at highmoonstudios.com  Wed Nov 29 15:11:05 2006
From: jbriant at highmoonstudios.com (Jamie Briant)
Date: Wed, 29 Nov 2006 15:11:05 -0800
Subject: [antlr-interest] antlrdev woes
Message-ID: <DDE09233DE8FB842BC45AAC0A8218E0A0341F714@hermes.sammystudios.com>

If I use $channel=HIDDEN, the generated parser doesn't compile in C#:

{ $channel=HIDDEN; }

C:\ps3\Internal\Projects\BuildTools\VexParser\TargetGrammarv3\VexMakeTar
getsLexer.cs(131,23): error CS0103: The name 'HIDDEN' does not exist in
the current context

Also, is there an equivalent for "newline()" or is that not needed
anymore?

Thanks!

Jamie

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, November 29, 2006 11:52 AM
To: Jean Bovet
Cc: ANTLR Interest
Subject: Re: [antlr-interest] antlrdev woes


On Nov 29, 2006, at 11:44 AM, Jean Bovet wrote:

>> Hi. we recently changed channel= to $channel.  Jean, did you update
>> AW to see the new style?
>
> The current version of AW does not support the new style but the  
> upcoming b7 does. What about skip() (does it have the same  
> purpose)? I was planning to support it also.

Yep, but you should support it only if it is alone  in the action  
(i.e., without other conditionals and so on in the action).

Ter


From kroepke at classdump.org  Wed Nov 29 15:24:47 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 30 Nov 2006 00:24:47 +0100
Subject: [antlr-interest] antlrdev woes
In-Reply-To: <DDE09233DE8FB842BC45AAC0A8218E0A0341F714@hermes.sammystudios.com>
References: <DDE09233DE8FB842BC45AAC0A8218E0A0341F714@hermes.sammystudios.com>
Message-ID: <2D986294-95E3-47B5-8629-5D424478DFFE@classdump.org>


On 30. Nov 2006, at 0:11 , Jamie Briant wrote:

> If I use $channel=HIDDEN, the generated parser doesn't compile in C#:

HIDDEN might not yet be supported in C#. I.e. for Objective-C I still  
use 99. The C# folks will know.

> Also, is there an equivalent for "newline()" or is that not needed
> anymore?

No, it's not needed anymore. ANTLR keeps track of the current line  
automatically.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Wed Nov 29 15:29:01 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 29 Nov 2006 15:29:01 -0800
Subject: [antlr-interest] namespaces in v3
In-Reply-To: <DDE09233DE8FB842BC45AAC0A8218E0A0341F713@hermes.sammystudios.com>
References: <DDE09233DE8FB842BC45AAC0A8218E0A0341F713@hermes.sammystudios.com>
Message-ID: <200611291529.02039.rschulz@sonic.net>

Jamie,

On Wednesday 29 November 2006 14:57, Jamie Briant wrote:
> How do I get v3 to generate code wrapped in a namespace? The
> namespace option doesn't appear to be supported anymore?

For Java parsers and lexers, it's like this:

@header {
package			tau.tstp;

...
}


@lexer::header {
package			tau.tstp;

...
}


> Jamie


Randall Schulz

From kroepke at classdump.org  Wed Nov 29 15:34:10 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 30 Nov 2006 00:34:10 +0100
Subject: [antlr-interest] namespaces in v3
In-Reply-To: <200611291529.02039.rschulz@sonic.net>
References: <DDE09233DE8FB842BC45AAC0A8218E0A0341F713@hermes.sammystudios.com>
	<200611291529.02039.rschulz@sonic.net>
Message-ID: <B5B05DDD-EDE9-412C-98A2-E8AEE9AE13C0@classdump.org>


On 30. Nov 2006, at 0:29 , Randall R Schulz wrote:

> On Wednesday 29 November 2006 14:57, Jamie Briant wrote:
>> How do I get v3 to generate code wrapped in a namespace? The
>> namespace option doesn't appear to be supported anymore?
>
> For Java parsers and lexers, it's like this:
>
> @header {
> package			tau.tstp;
>
> ...
> }
>
>
> @lexer::header {
> package			tau.tstp;
>
> ...
> }

Be advised that, for combined grammars (parsers and lexers in one),  
you need to specify both.
This is a common pit people fall into...
In combined grammars a simple @header{} goes into the parser *only*!

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From jbriant at highmoonstudios.com  Wed Nov 29 16:03:46 2006
From: jbriant at highmoonstudios.com (Jamie Briant)
Date: Wed, 29 Nov 2006 16:03:46 -0800
Subject: [antlr-interest] HIDDEN works in b5 - was RE:  antlrdev woes
Message-ID: <DDE09233DE8FB842BC45AAC0A8218E0A05706E1A@hermes.sammystudios.com>

My apologies. It's fixed in 3.0b5, though I'm not sure where I got b5
from because its not listed on the download page:
(http://www.antlr.org/download.html).

Jamie

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jamie Briant
Sent: Wednesday, November 29, 2006 3:11 PM
Cc: ANTLR Interest
Subject: Re: [antlr-interest] antlrdev woes

If I use $channel=HIDDEN, the generated parser doesn't compile in C#:

{ $channel=HIDDEN; }

C:\ps3\Internal\Projects\BuildTools\VexParser\TargetGrammarv3\VexMakeTar
getsLexer.cs(131,23): error CS0103: The name 'HIDDEN' does not exist in
the current context

Also, is there an equivalent for "newline()" or is that not needed
anymore?

Thanks!

Jamie

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, November 29, 2006 11:52 AM
To: Jean Bovet
Cc: ANTLR Interest
Subject: Re: [antlr-interest] antlrdev woes


On Nov 29, 2006, at 11:44 AM, Jean Bovet wrote:

>> Hi. we recently changed channel= to $channel.  Jean, did you update
>> AW to see the new style?
>
> The current version of AW does not support the new style but the  
> upcoming b7 does. What about skip() (does it have the same  
> purpose)? I was planning to support it also.

Yep, but you should support it only if it is alone  in the action  
(i.e., without other conditionals and so on in the action).

Ter


From kroepke at classdump.org  Wed Nov 29 16:07:48 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 30 Nov 2006 01:07:48 +0100
Subject: [antlr-interest] HIDDEN works in b5 - was RE:  antlrdev woes
In-Reply-To: <DDE09233DE8FB842BC45AAC0A8218E0A05706E1A@hermes.sammystudios.com>
References: <DDE09233DE8FB842BC45AAC0A8218E0A05706E1A@hermes.sammystudios.com>
Message-ID: <11FB8852-E9FE-4151-928B-A0160BF11283@classdump.org>


On 30. Nov 2006, at 1:03 , Jamie Briant wrote:

> My apologies. It's fixed in 3.0b5, though I'm not sure where I got b5
> from because its not listed on the download page:
> (http://www.antlr.org/download.html).

 From there: http://www.antlr.org/v3/index.html ;)
CC'ing Ter, to let him know of the outdated download page.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From jimi at intersystems.com  Wed Nov 29 17:16:25 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 29 Nov 2006 20:16:25 -0500
Subject: [antlr-interest] Problems with lexing tokens containing blanks
In-Reply-To: <OF340ED6DA.89ADB4EB-ON86257235.0073DE20-86257235.0074B092@lawson.com>
Message-ID: <20061130011626.116A31390@mail.intersystems.com>

I cannot immediately see why this is not working for you, however unless whitespace is typically significant in the language you are parsing, you should not deal with this in the lexer. Though I suspect that if you supply the full source it will be evident as to why this does not seem to work, such as you have a lexer rule that captures whitespace before the INDEX_OF definition or something similar.
 
However, I think you are confusing lexical definitions with disambiguation that the parser should be handling. For instance, what would happen if the source code was:
 
index         <tab><tab>      of
 
 
You are well advised to think of the source input as you would any other language. In English you would not tokenize ?index of? as one semantic element, and should not really do this in ANTLR (it isn?t as clear cut as this of course). 
 
Is there any reason you cannot have:
 
WS        : ? ? | ?\t? {channel=$hidden};
INDEX     : ?index? ;
OF        : ?of?
 
And then have parser rules that ?know? the difference? Remember that the lexer is a simple beast whose only job is to just tokenize the input.
 
indexer:
          INDEX 
              (
                    OF somerule
                   | somethingelse
              )
     ;
 
Jim
 
   _____  

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ryan Hollom
Sent: Wednesday, November 29, 2006 1:15 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Problems with lexing tokens containing blanks
 

Terence, 
Putting the INDEX_OF rule first doesn't seem to do the trick for me.  For instance, the full lexer grammar: 

lexer grammar testgrammarlexer; 

INDEX_OF :        'index of' ; 
INDEX         :        'index' ; 

NEWLINE :   (('\r')? '\n' )+ ; 
ID        : ( 'A' .. 'Z' | '0' .. '9') ( 'A' .. 'Z' | 'a' .. 'z' | '0' .. '9')*; 
WS        :        (' '|'\t')+ {$channel=HIDDEN;}; 

Still generates the mTOKENS section that checks for 'i' 'n' 'd' 'e' 'x' ' ', at which point it assumes the token is 'index of'.  In detail, it generates this: 
    public void mTokens() throws RecognitionException { 
        int alt5=5; 
        switch ( input.LA(1) ) { 
        case 'i': 
            int LA5_1 = input.LA(2); 
            if ( (LA5_1=='n') ) { 
                int LA5_5 = input.LA(3); 
                if ( (LA5_5=='d') ) { 
                    int LA5_6 = input.LA(4); 
                    if ( (LA5_6=='e') ) { 
                        int LA5_7 = input.LA(5); 
                        if ( (LA5_7=='x') ) { 
                            int LA5_8 = input.LA(6); 
                            if ( (LA5_8==' ') ) { 
                                alt5=1; <- INDEX_OF 
                            } 
                            else { 
                                alt5=2;} <- INDEX 
                        } 

I've run into this issue in other ways for my grammar, and even if putting INDEX_OF as the first rule did work, what if you're not directly creating a lexer rule for each multi word keyword (that is, just referencing the keywords in the parser rules like 'index of' and 'index')?  Do all of the parser rules therefore need to be in the proper order to generate the correct lexer?  Sometimes this is not possible, and likely not desired. 

Do lexer predicates need to be used, or perhaps a fixed lookahead (of at least 7 in this case)? 

Thanks, 
-Ryan 




Terence Parr <parrt at cs.usfca.edu> 
Sent by: antlr-interest-bounces at antlr.org 
11/29/2006 02:22 PM 

To
ANTLR Interest <antlr-interest at antlr.org> 

cc
 

Subject
Re: [antlr-interest] Problems with lexing tokens containing blanks
 

 
 




On Nov 29, 2006, at 8:44 AM, Bernd Vogt wrote:

> Hi all,
>
> in my current project I have the requirement to lex some tokens  
> like this:
>
> lexer grammar ExampleLexer;
> ?
> INDEX : 'index' ;
> INDEX_OF : 'index of' ;
> INT : '0' | '1'..'9' '0'..'9'* ;

Hi, try putting

INDEX_OF : 'index of' ;

before INDEX.

Ter




--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.14.19/556 - Release Date: 11/28/2006 3:22 PM

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.14.19/556 - Release Date: 11/28/2006 3:22 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061129/c4f8b40d/attachment-0001.html 

From parrt at cs.usfca.edu  Wed Nov 29 18:06:36 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Nov 2006 18:06:36 -0800
Subject: [antlr-interest] HIDDEN works in b5 - was RE:  antlrdev woes
In-Reply-To: <11FB8852-E9FE-4151-928B-A0160BF11283@classdump.org>
References: <DDE09233DE8FB842BC45AAC0A8218E0A05706E1A@hermes.sammystudios.com>
	<11FB8852-E9FE-4151-928B-A0160BF11283@classdump.org>
Message-ID: <F2B6D6E0-485B-46DF-B175-5F5066E2C3D0@cs.usfca.edu>

weird.  Fixed.
Terence
On Nov 29, 2006, at 4:07 PM, Kay Roepke wrote:

>
> On 30. Nov 2006, at 1:03 , Jamie Briant wrote:
>
>> My apologies. It's fixed in 3.0b5, though I'm not sure where I got b5
>> from because its not listed on the download page:
>> (http://www.antlr.org/download.html).
>
> From there: http://www.antlr.org/v3/index.html ;)
> CC'ing Ter, to let him know of the outdated download page.




From ryan.hollom at us.lawson.com  Wed Nov 29 19:22:57 2006
From: ryan.hollom at us.lawson.com (Ryan Hollom)
Date: Wed, 29 Nov 2006 21:22:57 -0600
Subject: [antlr-interest] Problems with lexing tokens containing blanks
Message-ID: <OFC4DE216E.ADB4A01A-ON86257236.001294C4-86257236.001294D1@lawson.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061129/883e91dc/attachment.html 

From jchgautier at yahoo.fr  Thu Nov 30 00:36:48 2006
From: jchgautier at yahoo.fr (JeanChristophe Gautier)
Date: Thu, 30 Nov 2006 09:36:48 +0100 (CET)
Subject: [antlr-interest] How can I ignore reserved words in certain cases ?
Message-ID: <20061130083648.98597.qmail@web23408.mail.ird.yahoo.com>


Hi,

I am writing a command line editor that has reserved words, such as
"print", that should accept, at times, any string value. For example the
following should be allowed:

print hello
print print

The grammar is defined as follows:



class ExprParser extends Parser;

options {
        k = 2;
    buildAST=true;
}

expr: expr1;

expr1: PRINT STRING;



class ExprLexer extends Lexer;

options {
    k=2;
    charVocabulary='\u0000'..'\u007F';
    testLiterals = false;
}

tokens {
        PRINT = "print";
}

STRING options { testLiterals = true; } : ('a'..'z')+;

WS    : ( ' '
        | '\r' '\n'
        | '\n'
        | '\t'
        )
        {$setType(Token.SKIP);}
      ;


Obviously the second example ("print print") does not work
 because the
token PRINT takes priority since we have testLiterals = true (note that
this example is taken from a more complex grammar).

The question is: how do I, under certain circumstances, ignore reserved
word tokens?

Bythe way, I am currently using antlr 2.7.

Many thanks,
JC




 		
---------------------------------
 Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son interface r?volutionnaire.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/c606774d/attachment-0001.html 

From Bernd.Vogt at Innovations.de  Thu Nov 30 00:41:27 2006
From: Bernd.Vogt at Innovations.de (Bernd Vogt)
Date: Thu, 30 Nov 2006 09:41:27 +0100
Subject: [antlr-interest] Problems with lexing tokens containing blanks
Message-ID: <456E9937.4070207@Innovations.de>

Ok, some words to my project.

I'm going to build a kind of a simple translator, who's job is to detect 
some defined tokens in an input string an replace this tokens with a 
given translation.

Therefor I have a config file that maps english tokens to its german 
representation.

The content of the file can look like this:
index of  = der Index von;
index = Index;

So my idea was to use the antlr3 lexer to strip an input string into the 
given tokens and than replace each token with its foreign representation.

Here an example lexer grammar:

lexer grammar SimpleLexer;

INDEX : 'index';
INDEX_OF : 'index of';
INT : '0' | '1'..'9' '0'..'9'*;
IDENT: ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*;

WS : ( ' ' | '\r' '\n' | '\n' | '\t' ){$channel=HIDDEN;};

Ok, for the input string "index of value1" everyfing works finde. The 
Lexer retuns the expected token types: INDEX_OF WS IDENT. And I can 
proper translat it into "der Index von value1".

But for the input string "index 4" the lexer throws the execption that 
he expects 'o' intead of '4'. But I'm expecting the token types INDEX 
and INT to translate it into "Index 4".

Internally, the generated lexer does somethin like this:

if ('i' 'n' 'd' 'e' 'x' ' ') -> INDEX_OF
else if ('i' 'n' 'd' 'e' 'x') -> INDEX

Hm, I think, I need to teach the lexer to do something like this:

if ('i' 'n' 'd' 'e' 'x' ' ' 'o') -> INDEX_OF
else if ('i' 'n' 'd' 'e' 'x') -> INDEX

Regards
Bernd

------------------------------

Message: 3
Date: Wed, 29 Nov 2006 20:16:25 -0500
From: "Jim Idle" <jimi at intersystems.com>
Subject: Re: [antlr-interest] Problems with lexing tokens containing
    blanks
To: <antlr-interest at antlr.org>
Message-ID: <20061130011626.116A31390 at mail.intersystems.com>
Content-Type: text/plain; charset="windows-1250"

I cannot immediately see why this is not working for you, however unless 
whitespace is typically significant in the language you are parsing, you 
should not deal with this in the lexer. Though I suspect that if you 
supply the full source it will be evident as to why this does not seem 
to work, such as you have a lexer rule that captures whitespace before 
the INDEX_OF definition or something similar.
 
However, I think you are confusing lexical definitions with 
disambiguation that the parser should be handling. For instance, what 
would happen if the source code was:
 
index         <tab><tab>      of
 
 
You are well advised to think of the source input as you would any other 
language. In English you would not tokenize ?index of? as one semantic 
element, and should not really do this in ANTLR (it isn?t as clear cut 
as this of course).
 
Is there any reason you cannot have:
 
WS        : ? ? | ?\t? {channel=$hidden};
INDEX     : ?index? ;
OF        : ?of?
 
And then have parser rules that ?know? the difference? Remember that the 
lexer is a simple beast whose only job is to just tokenize the input.
 
indexer:
          INDEX
              (
                    OF somerule
                   | somethingelse
              )
     ;
 
Jim




From open.zone at virgin.net  Thu Nov 30 01:11:35 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu, 30 Nov 2006 09:11:35 -0000
Subject: [antlr-interest] How can I ignore reserved words in certain
	cases ?
In-Reply-To: <20061130083648.98597.qmail@web23408.mail.ird.yahoo.com>
Message-ID: <00d101c7145f$8cee13d0$c704a8c0@hercules>

Hi,

I am writing a command line editor that has reserved words, such as
"print", that should accept, at times, any string value. For example the
following should be allowed:

print hello
print print

The grammar is defined as follows:



class ExprParser extends Parser;

options {
        k = 2;
    buildAST=true;
}

expr: expr1;

expr1: PRINT STRING; 
==> expr: PRINT ( STRING | PRINT ) ;
 



class ExprLexer extends Lexer;

options {
    k=2;
    charVocabulary='\u0000'..'\u007F';
    testLiterals = false;
}

tokens {
        PRINT = "print";
}

STRING options { testLiterals = true; } : ('a'..'z')+;

WS    : ( ' '
        | '\r' '\n'
        | '\n'
        | '\t'
        )
        {$setType(Token.SKIP);}
      ;


Obviously the second example ("print print") does not work
 because the
token PRINT takes priority since we have testLiterals = true (note
that
this example is taken from a more complex grammar).

The question is: how do I, under certain circumstances, ignore reserved
word tokens?

Bythe way, I am currently using antlr 2.7. 
 
==> ANTLR2's latest version is 2.7.7 

Many thanks,
JC






  _____  

Yahoo! Mail r?invente le mail ! D?couvrez le nouveau
<http://fr.rd.yahoo.com/evt=40577/*http://fr.promotions.yahoo.com/mail/nouve
aumail.html> Yahoo! Mail et son interface r?volutionnaire. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/7fd1ef0b/attachment.html 

From jchgautier at yahoo.fr  Thu Nov 30 04:59:08 2006
From: jchgautier at yahoo.fr (JeanChristophe Gautier)
Date: Thu, 30 Nov 2006 13:59:08 +0100 (CET)
Subject: [antlr-interest] RE : Re: How can I ignore reserved words in
	certain cases ?
In-Reply-To: <00d101c7145f$8cee13d0$c704a8c0@hercules>
Message-ID: <453092.75829.qm@web23408.mail.ird.yahoo.com>

Hi,
 
 Thanks for your help but that doesn't solve my problem. We have a hundred or so key words (such as print) declared in the lexer, all of which should be accepted as a STRING. We could always do as you suggested but we would have a parser rule several lines long and we would need to modify it whenever we added a new key word. Is there no way to simply ignore the key word tokens for certain rules?
 
 Many thanks,
 JC
 

Micheal J <open.zone at virgin.net> a ?crit :   Message    
Hi,

I am writing a command line editor that has reserved words, such as
"print", that should accept, at times, any string value. For example the
following should be allowed:

print hello
print print

The grammar is defined as follows:



class ExprParser extends Parser;

options {
        k = 2;
    buildAST=true;
}

expr: expr1;

expr1: PRINT STRING; 

==> expr: PRINT ( STRING | PRINT ) ;

 



class ExprLexer extends Lexer;

options {
    k=2;
    charVocabulary='\u0000'..'\u007F';
    testLiterals = false;
}

tokens {
        PRINT = "print";
}

STRING options { testLiterals = true; } : ('a'..'z')+;

WS    : ( ' '
        | '\r' '\n'
        | '\n'
        | '\t'
        )
        {$setType(Token.SKIP);}
      ;


Obviously the second example ("print print") does not work
 because the
token PRINT takes priority since we have testLiterals = true (note
    that
this example is taken from a more complex grammar).

The    question is: how do I, under certain circumstances, ignore reserved
word    tokens?

Bythe way, I am currently using antlr 2.7. 
    
   ==> ANTLR2's latest version is 2.7.7 

Many    thanks,
JC



      

---------------------------------
   Yahoo! Mail r?invente le mail ! D?couvrez le nouveau    Yahoo! Mail et son interface r?volutionnaire. 

 		
---------------------------------
 Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son interface r?volutionnaire.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/c128a579/attachment.html 

From sergio at moredata.pt  Thu Nov 30 05:43:04 2006
From: sergio at moredata.pt (sergio at moredata.pt)
Date: Thu, 30 Nov 2006 13:43:04 -0000 (WET)
Subject: [antlr-interest] RE : Re: How can I ignore reserved words in
 certain cases ?
In-Reply-To: <453092.75829.qm@web23408.mail.ird.yahoo.com>
References: <453092.75829.qm@web23408.mail.ird.yahoo.com>
Message-ID: <48734.194.65.141.26.1164894184.squirrel@i.moredata.pt>

Hi,

I have the some problem on SQL grammar because the key words can be
identifiers like in the folowing example:

CREATE TABLE INDEX (
  FOREIGN INTEGER,
  KEY CHAR(10)
);

CREATE INDEX TABLE ON INDEX (FOREIGN);

Thanks
S?rgio Ferreira

> Hi,
>
>  Thanks for your help but that doesn't solve my problem. We have a hundred
> or so key words (such as print) declared in the lexer, all of which
> should be accepted as a STRING. We could always do as you suggested but
> we would have a parser rule several lines long and we would need to
> modify it whenever we added a new key word. Is there no way to simply
> ignore the key word tokens for certain rules?
>
>  Many thanks,
>  JC
>
>
> Micheal J <open.zone at virgin.net> a ?crit :   Message
> Hi,
>
> I am writing a command line editor that has reserved words, such as
> "print", that should accept, at times, any string value. For example the
> following should be allowed:
>
> print hello
> print print
>
> The grammar is defined as follows:
>
>
>
> class ExprParser extends Parser;
>
> options {
>         k = 2;
>     buildAST=true;
> }
>
> expr: expr1;
>
> expr1: PRINT STRING;
>
> ==> expr: PRINT ( STRING | PRINT ) ;
>
>
>
>
>
> class ExprLexer extends Lexer;
>
> options {
>     k=2;
>     charVocabulary='\u0000'..'\u007F';
>     testLiterals = false;
> }
>
> tokens {
>         PRINT = "print";
> }
>
> STRING options { testLiterals = true; } : ('a'..'z')+;
>
> WS    : ( ' '
>         | '\r' '\n'
>         | '\n'
>         | '\t'
>         )
>         {$setType(Token.SKIP);}
>       ;
>
>
> Obviously the second example ("print print") does not work
>  because the
> token PRINT takes priority since we have testLiterals = true (note
>     that
> this example is taken from a more complex grammar).
>
> The    question is: how do I, under certain circumstances, ignore reserved
> word    tokens?
>
> Bythe way, I am currently using antlr 2.7.
>
>    ==> ANTLR2's latest version is 2.7.7
>
> Many    thanks,
> JC
>
>
>
>
>
> ---------------------------------
>    Yahoo! Mail r?invente le mail ! D?couvrez le nouveau    Yahoo! Mail et
> son interface r?volutionnaire.
>
>
> ---------------------------------
>  Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son
> interface r?volutionnaire.



From ryan.hollom at us.lawson.com  Thu Nov 30 05:44:06 2006
From: ryan.hollom at us.lawson.com (Ryan Hollom)
Date: Thu, 30 Nov 2006 07:44:06 -0600
Subject: [antlr-interest] RE : Re: How can I ignore reserved words
 in	certain cases ?
Message-ID: <OF202E6D4A.F59AA463-ON86257236.004B72E3-86257236.004B72E7@lawson.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/f3cb9384/attachment.html 

From open.zone at virgin.net  Thu Nov 30 06:10:23 2006
From: open.zone at virgin.net (Micheal J)
Date: Thu, 30 Nov 2006 14:10:23 -0000
Subject: [antlr-interest] RE : Re: How can I ignore reserved words
	incertain cases ?
In-Reply-To: <453092.75829.qm@web23408.mail.ird.yahoo.com>
Message-ID: <00e401c71489$48bfc170$c704a8c0@hercules>

keyword :
   PRINT
   ...
   ...
   ;
 
expr :
   PRINT ( STRING | keyword )
   ;
 
 
Micheal
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of JeanChristophe
Gautier
Sent: 30 November 2006 12:59
To: antlr-interest at antlr.org
Subject: [antlr-interest] RE : Re: How can I ignore reserved words incertain
cases ?


Hi,

Thanks for your help but that doesn't solve my problem. We have a hundred or
so key words (such as print) declared in the lexer, all of which should be
accepted as a STRING. We could always do as you suggested but we would have
a parser rule several lines long and we would need to modify it whenever we
added a new key word. Is there no way to simply ignore the key word tokens
for certain rules?

Many thanks,
JC


Micheal J <open.zone at virgin.net> a ?crit : 

Hi,

I am writing a command line editor that has reserved words, such

 as
"print", that should accept, at times, any string value. For example the
following should be allowed:

print hello
print print

The grammar is defined as follows:



class ExprParser extends Parser;

options {
        k = 2;
    buildAST=true;
}

expr: expr1;

expr1: PRINT STRING; 
==> expr: PRINT ( STRING | PRINT ) ;
 



class ExprLexer extends Lexer;

options {
    k=2;
    charVocabulary='\u0000'..'\u007F';
    testLiterals = false;
}

tokens {
        PRINT = "print";
}

STRING options { testLiterals = true; } : ('a'..'z')+;

WS    : ( ' '
        | '\r' '\n'
        | '\n'
        | '\t'
  

      )
        {$setType(Token.SKIP);}
      ;


Obviously the second example ("print print") does not work
 because the
token PRINT takes priority since we have testLiterals = true (note
that
this example is taken from a more complex grammar).

The question is: how do I, under certain circumstances, ignore reserved
word tokens?

Bythe way, I am currently using antlr 2.7. 
 
==> ANTLR2's latest version is 2.7.7 

Many thanks,
JC



  _____  

Yahoo! Mail r?invente le mail ! D?couvrez le nouveau
<http://fr.rd.yahoo.com/evt=40577/*http://fr.promotions.yahoo.com/mail/nouve
aumail.html%20> Yahoo! Mail et son interface r?volutionnaire. 




  _____  

Yahoo! Mail r?invente le mail ! D?couvrez le nouveau
<http://fr.rd.yahoo.com/evt=40577/*http://fr.promotions.yahoo.com/mail/nouve
aumail.html> Yahoo! Mail et son interface r?volutionnaire. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/dd30eb51/attachment-0001.html 

From foolishewe at hotmail.com  Thu Nov 30 08:04:38 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Thu, 30 Nov 2006 16:04:38 +0000
Subject: [antlr-interest] How can I ignore reserved words in certain
	cases ?
Message-ID: <BAY107-F3165FB884C0334F5AD0569C0DB0@phx.gbl>

Hi All:

I faced this issue recently in a grammar at my job.  My suggestion is
to use delimited strings (i.e. require quotes around strings).

Since I didn't have (complete) control over the grammar specification,
I was forced to resort to using a rule enumerating all keywords and having
a string rule that took a non keyword string or a keyword.  I agree it is 
unpleasant,
but I tried approaches like using semantic actions in the parser but those 
approaches
either didn't work or appeared worse than the solution I used.

Regards:

Bill M.

>From: JeanChristophe Gautier <jchgautier at yahoo.fr>
>To: antlr-interest at antlr.org
>Subject: [antlr-interest] How can I ignore reserved words in certain cases 
>?
>Date: Thu, 30 Nov 2006 09:36:48 +0100 (CET)
>
>
>Hi,
>
>I am writing a command line editor that has reserved words, such as
>"print", that should accept, at times, any string value. For example the
>following should be allowed:
>
>print hello
>print print
>
>The grammar is defined as follows:
>
>
>
>class ExprParser extends Parser;
>
>options {
>         k = 2;
>     buildAST=true;
>}
>
>expr: expr1;
>
>expr1: PRINT STRING;
>
>
>
>class ExprLexer extends Lexer;
>
>options {
>     k=2;
>     charVocabulary='\u0000'..'\u007F';
>     testLiterals = false;
>}
>
>tokens {
>         PRINT = "print";
>}
>
>STRING options { testLiterals = true; } : ('a'..'z')+;
>
>WS    : ( ' '
>         | '\r' '\n'
>         | '\n'
>         | '\t'
>         )
>         {$setType(Token.SKIP);}
>       ;
>
>
>Obviously the second example ("print print") does not work
>  because the
>token PRINT takes priority since we have testLiterals = true (note that
>this example is taken from a more complex grammar).
>
>The question is: how do I, under certain circumstances, ignore reserved
>word tokens?
>
>Bythe way, I am currently using antlr 2.7.
>
>Many thanks,
>JC
>
>
>
>
>
>---------------------------------
>  Yahoo! Mail r?invente le mail ! D?couvrez le nouveau Yahoo! Mail et son 
>interface r?volutionnaire.

_________________________________________________________________
Stay up-to-date with your friends through the Windows Live Spaces friends 
list. 
http://clk.atdmt.com/MSN/go/msnnkwsp0070000001msn/direct/01/?href=http://spaces.live.com/spacesapi.aspx?wx_action=create&wx_url=/friends.aspx&mk


From rschulz at sonic.net  Thu Nov 30 08:20:24 2006
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 30 Nov 2006 08:20:24 -0800
Subject: [antlr-interest] How can I ignore reserved words in certain
	cases ?
In-Reply-To: <20061130083648.98597.qmail@web23408.mail.ird.yahoo.com>
References: <20061130083648.98597.qmail@web23408.mail.ird.yahoo.com>
Message-ID: <200611300820.24802.rschulz@sonic.net>

JeanChristophe,

On Thursday 30 November 2006 00:36, JeanChristophe Gautier wrote:
> Hi,
>
> I am writing a command line editor that has reserved words, such as
> "print", that should accept, at times, any string value. For example
> the following should be allowed:
>
> print hello
> print print
>
> The grammar is defined as follows:
>
>...

I have a similar issue with a grammar for which I used JavaCC. I believe 
the technique I used there would apply in ANTLR, as well.

Basically, I define all my keywords as specific lexical tokens. In 
contexts where they're allowable, I have a non-terminal (parser rule) 
that matches either a generic word (which excludes the keywords because 
they're caught by the lexer as such) along with the keywords as 
explicit alternatives. Then any place that the keywords are in effect 
uses the regular, generic "word" token and in any grammatical context 
in which the keywords are not special and must be treated like ordinary 
words uses the rule that explicitly allows them. That way you only need 
to enumerate the keywords once (well, twice, once in the lexical 
specification and once in the rule that allows them).

To sketch it out as a minimal example:

KEYWORD1 : "keyword1" ;
KEYWORD2 : "keyword2" ;
KEYWORD3 : "keyword3" ;

KEYWORD: (KEYWORD1 | KEYWORD2 | KEYWORD3) ;

WORD : 'a'..'z' ( ( 'a'..'z' | 'A'..'Z' | '0'..'9' | '_' ) * ) ;

ANYWORD : KEYWORD1 | KEYWORD2 | KEYWORD3 | word ;

keywordPhrase : KEYWORD <<<more stuff>>> ;

plainPhrase : <<<left stuff>>> ANYWORD <<<right stuff>>> ;


I think the only thing you have to look out for is ambiguity, but that's 
always true...

Would this approach work for you?

Randall Schulz

From parrt at cs.usfca.edu  Thu Nov 30 09:16:50 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 30 Nov 2006 09:16:50 -0800
Subject: [antlr-interest] How can I ignore reserved words in certain
	cases ?
In-Reply-To: <BAY107-F3165FB884C0334F5AD0569C0DB0@phx.gbl>
References: <BAY107-F3165FB884C0334F5AD0569C0DB0@phx.gbl>
Message-ID: <02D5989B-781B-4848-AF89-9C73692E8CF9@cs.usfca.edu>

Hi.  An example from the book on predicated LL(*) parsing:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741

Ter

From sun2 at public.kherson.ua  Thu Nov 30 09:39:01 2006
From: sun2 at public.kherson.ua (Serge)
Date: Thu, 30 Nov 2006 19:39:01 +0200
Subject: [antlr-interest] Get position of the symbol in the input string?
Message-ID: <F0E8AB18-3954-42A6-A030-0851395D5D63@public.kherson.ua>

Hi,

I am do parsing of  the sql string like "select * from t; select *  
from t2;"

sql	
	:	sql_single ( SEMI! (sql_single)?  )* EOF!
	|	EOF!
	;

When in the parser I meet token SEMI,
how can I receive position of this symbol ";" in my input string?
For my example: 14 and 32

I need this because we need extract ORIGINAL STRING of a SQL command
to be saved into system tables of database.
As far as I see it is bad idea try do manual parsing to search ';'
because it can be also part of string literals.
So may be ANTLR do have such feature, which I have miss?
If such feature not presented, then what workaround?


Serge




From VAUCHER at fermat.eu  Thu Nov 30 09:44:48 2006
From: VAUCHER at fermat.eu (VAUCHER Laurent)
Date: Thu, 30 Nov 2006 18:44:48 +0100
Subject: [antlr-interest] How can I ignore reserved words in
	certaincases ?
Message-ID: <200611301845455.SM06700@037f27dd816a40c>

Isn't there a performance penalty in this case? I mean, almost all tokens look like IDs, so the parser is forced to use the predicates to choose the right rule. There is no possibility to precompute jump-tables (or whatever you call them).


Laurent.


-----Message d'origine-----
De : antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] De la part de Terence Parr
Envoy? : 30 November 2006 18:17
? : ANTLR Interest
Objet : Re: [antlr-interest] How can I ignore reserved words in certaincases ?

Hi.  An example from the book on predicated LL(*) parsing:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741

Ter



From parrt at cs.usfca.edu  Thu Nov 30 10:12:08 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 30 Nov 2006 10:12:08 -0800
Subject: [antlr-interest] How can I ignore reserved words in
	certaincases ?
In-Reply-To: <200611301845455.SM06700@037f27dd816a40c>
References: <200611301845455.SM06700@037f27dd816a40c>
Message-ID: <E5B42661-0CC4-4FB5-9A1A-80F3165AC2EA@cs.usfca.edu>


On Nov 30, 2006, at 9:44 AM, VAUCHER Laurent wrote:

> Isn't there a performance penalty in this case?

Most definitely.

> I mean, almost all tokens look like IDs, so the parser is forced to  
> use the predicates to choose the right rule. There is no  
> possibility to precompute jump-tables (or whatever you call them).

The other alternative is to do

identifier : KEY1 | KEY2 | ... | ID ;

which is a set comparison and should be faster.

Ter
>
>
> Laurent.
>
>
> -----Message d'origine-----
> De : antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] De la part de Terence Parr
> Envoy? : 30 November 2006 18:17
> ? : ANTLR Interest
> Objet : Re: [antlr-interest] How can I ignore reserved words in  
> certaincases ?
>
> Hi.  An example from the book on predicated LL(*) parsing:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>
> Ter
>
>


From jbriant at highmoonstudios.com  Thu Nov 30 10:18:45 2006
From: jbriant at highmoonstudios.com (Jamie Briant)
Date: Thu, 30 Nov 2006 10:18:45 -0800
Subject: [antlr-interest] How can I ignore reserved words incertaincases
	?
Message-ID: <DDE09233DE8FB842BC45AAC0A8218E0A0341F716@hermes.sammystudios.com>

The csharp_v1 parser from 2.7.7 does the following for the "contextual keywords":

nonKeywordLiterals
	:	"add"
	|	"remove"
	|	"get"
	|	"set"
	|	"assembly"
	|	"field"
	|	"method"
	|	"module"
	|	"param"
	|	"property"
	|	"type"
	;
	
identifier
	:	IDENTIFIER
	|	n:nonKeywordLiterals { #n.setType(IDENTIFIER); }
	;

getAccessorDeclaration! [AST attribs]
	:	g:"get" abody:accessorBody
		{ ## = #( #g, #attribs, #abody ); }
	;



Jamie

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, November 30, 2006 10:12 AM
To: ANTLR Interest
Subject: Re: [antlr-interest] How can I ignore reserved words incertaincases ?


On Nov 30, 2006, at 9:44 AM, VAUCHER Laurent wrote:

> Isn't there a performance penalty in this case?

Most definitely.

> I mean, almost all tokens look like IDs, so the parser is forced to  
> use the predicates to choose the right rule. There is no  
> possibility to precompute jump-tables (or whatever you call them).

The other alternative is to do

identifier : KEY1 | KEY2 | ... | ID ;

which is a set comparison and should be faster.

Ter
>
>
> Laurent.
>
>
> -----Message d'origine-----
> De : antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] De la part de Terence Parr
> Envoy? : 30 November 2006 18:17
> ? : ANTLR Interest
> Objet : Re: [antlr-interest] How can I ignore reserved words in  
> certaincases ?
>
> Hi.  An example from the book on predicated LL(*) parsing:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>
> Ter
>
>


From foolishewe at hotmail.com  Thu Nov 30 10:38:42 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Thu, 30 Nov 2006 18:38:42 +0000
Subject: [antlr-interest] Remote Parser Time-outs ANTLRworks 1.0b6 on
	Windows XP
Message-ID: <BAY107-F49B03414440D926DBF0BBC0DB0@phx.gbl>

Hi All:

I've been experiencing occasional (not always reproducible) remote parser 
time-outs under
Windows XP when using the latest Antlrworks 1.0b6.  I can sometimes get this 
to happen
after a fresh boot, and when I run ANTLRworks in a command line mode, I 
don't get
diagnostic errors.

Do other people experience this, and if so, is there a workaround or 
configuration setting
that might remedy this.  Recently the attached grammar has been known to 
give
me this problem.

Thanks:

Bill M.

_________________________________________________________________
MSN Shopping has everything on your holiday list. Get expert picks by style, 
age, and price. Try it! 
http://shopping.msn.com/content/shp/?ctId=8000,ptnrid=176,ptnrdata=200601&tcode=wlmtagline
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestGrammar.g
Type: application/octet-stream
Size: 4154 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/66f0b2c7/attachment.obj 

From prashant.deva at gmail.com  Thu Nov 30 14:03:57 2006
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu, 30 Nov 2006 14:03:57 -0800
Subject: [antlr-interest] File extensions for ANTLR 3
Message-ID: <41fed8f80611301403o591b6da0yfb25b309b22e92d@mail.gmail.com>

The current file extensions for antlr 3 (its .g or .g3, i guess) does
not indicate in any way whether the grammar file contains a parser or
lexer. Also the file name itself doesnt indicate the name of the
parser/lexer.

I propose to let the extension of grammar files be something like
.gl,.gp & .glp which indicates instantly whether the file contains a
lexer, parser or both. Also like java the name of the file should be
the same as the name of the lexer inside.

Although, this may not seem as good as a plain .g, but this will help
tools like ANTLR Studio better figure out what the file contains and
provide you with greater assistance.  Remember the file extension is
for the machine anyway, it is the file name itself that is meant for
human consumtion.

This is especially important in my new tool Virtual Ant
(http://placidsystems.com/virtualant/)  in the part where it can
instantly show you the state of the file system after a certain ant
task has executed. Now currently for the 'antlr' task we will have to
parse the entire grammar file to make out what files it can produce.
This really slows us down and is very bad for the speed at which the
rest of the system runs. With more specific file extensions, we can
just look at the extension and tell the files that can be produced.

-- 
Prashant Deva
Creator, ANTLR Studio, Virtual Ant
Founder, Placid Systems, www.placidsystems.com

From parrt at cs.usfca.edu  Thu Nov 30 14:18:52 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 30 Nov 2006 14:18:52 -0800
Subject: [antlr-interest] File extensions for ANTLR 3
In-Reply-To: <41fed8f80611301403o591b6da0yfb25b309b22e92d@mail.gmail.com>
References: <41fed8f80611301403o591b6da0yfb25b309b22e92d@mail.gmail.com>
Message-ID: <B0914EDC-A0F6-42DB-B298-EF4409111076@cs.usfca.edu>


On Nov 30, 2006, at 2:03 PM, Prashant Deva wrote:

> The current file extensions for antlr 3 (its .g or .g3, i guess) does
> not indicate in any way whether the grammar file contains a parser or
> lexer. Also the file name itself doesnt indicate the name of the
> parser/lexer.
>
> I propose to let the extension of grammar files be something like
> .gl,.gp & .glp which indicates instantly whether the file contains a
> lexer, parser or both. Also like java the name of the file should be
> the same as the name of the lexer inside.

In general I support this proposal.  The most common case is plain .g  
for a combined parser and lexer so nothing will change.  I like the  
idea that, from the extension, a build tool or IDE knows the Java  
class that will come out.

T.gl -> TLexer.java
T.gp -> TParser.java
T.gtp -> TTreeParser.java
T.g -> TLexer.java, TParser.java

Kunle also has a proposal that  tree parsers are different enough  
that we should translate literally

T.gtp -> T.java

His rationale is that normal grammars are named for the language and,  
hence, adding Lexer or Parser suffix makes sense, but tree parsers  
are usually named properly and adding the TreeParser suffix does  
not.  I noticed this a number of times myself.  For example,

DefineVariables.g -> DefineVariablesTreeParser.java  (or .gtp?)
SemanticAnalyzer.g -> SemanticAnalyzerTreeParser.java

weird, right? Because tree grammars are named for their functions, we  
should probably leave that alone.  With the addition of Prashant's  
proposal (a similar proposed by others) then we will know precisely  
what Java file will come out given the extension.

So, the proposal is that ANTLR specifically  
enforce .g, .gl, .gp, .gtp as well as the name of the file being the  
name of the grammar inside.  Further, ANTLR would deviate from  
regular grammars for tree grammars so that no suffix is added to the  
generated code.

How will this fly in other target languages?

Ter

From Jayne.Ochoa at absg.com  Thu Nov 30 14:18:16 2006
From: Jayne.Ochoa at absg.com (Ochoa, Jayne)
Date: Thu, 30 Nov 2006 16:18:16 -0600
Subject: [antlr-interest] Trying to compile ANTLR 3.0b5
Message-ID: <635F6C7B8484E1478EDD2BC050176420085DA95D@100-MAIL-V-001.absg.net>

Hello.
 
To be upfront, I do not have experience in Java, so I already have a
disadvantage there. :( I actually come from a C#/.Net 2.0 background. I
am having issues working with 3.0b5 and I don't know what it is I am
doing wrong. I am working on a Windows 2003 computer with the Java JDK
1.5. My intent is to generate C# code with ANTLR.
 
A couple of things. I am reading the read me for v3 at:
http://www.antlr.org/v3/README.txt I am not using the ANTLRWorks GUI.
 
My CLASSPATH reads: 
 
D:\Code\ANTLR\antlr-3.0b5\src>echo %CLASSPATH%
D:\Code\ANTLR\antlr-3.0b5\lib\antlr2.7.7.jar;D:\Code\ANTLR\antlr-3.0b5\l
ib\antlr
-3.0b5.jar;D:\Code\ANTLR\antlr-3.0b5\lib\stringtemplate-3.0.jar
 
At one point, my CLASSPATH only had:
 
D:\Code\ANTLR\antlr-3.0b5\lib
 
I was using the example in the readme.txt file at antlr.org, and I
figured out that the example command to type in to compile ANTLR did
*not* work. The command I am referring to is:
 
javac -d . org/antlr/Tool.java org/antlr/*/*.java org/antlr/*/*/*.java
 
That did not work on my system. So I came up with the following command:
 
javac -verbose -d . -classpath org\antlr\*.java
org\antlr\analysis\*.java org\antlr\codegen\*.java org\antlr\misc\*.java
org\antlr\runtime\debug\*.java  org\antlr\runtime\misc\*.java
org\antlr\runtime\tree\*.java org\antlr\test\*.java
org\antlr\tool\*.java

I did that trying to include all the java files. I am now getting 100
errors. Many of which look like:
 
org\antlr\tool\Grammar.java:494: package antlr does not exist
                throws antlr.RecognitionException,
antlr.TokenStreamException
                            ^
org\antlr\tool\Grammar.java:494: package antlr does not exist
                throws antlr.RecognitionException,
antlr.TokenStreamException
                                                        ^
org\antlr\tool\ANTLRParser.java:35: package antlr does not exist
import antlr.*;
^
org\antlr\tool\ANTLRParser.java:37: package antlr does not exist
import antlr.TokenBuffer;
             ^
I have installed Eclipse. I was not able to compile ANTLR. I have
installed JCreator. I was not able to compile it. The further I have
gotten was when I loaded up Visual Studio 2005 and attempted J#. I
_still_ got errors as described above. I don't know how to fix this. Is
there something in the ANTLR code I need to do to get it to compile? How
do I get this to compile?
 
Secondly.
I am reading the readme.txt file and found where the .jar files are in
antlr-3.0b5\lib. I tried to run: java org/antlr/tool.java but kept
getting the exception no "main" found error. I realize that it's not
finding the org.antlr.tool file.
 
I even tried running that java command from the src/ directory. Still no
go.
 
I am frustrated with this. We have a system I need to rewrite and I have
been tasked with using ANTLR. I am trying to use the new version of
ANTLR but have gotten no where with it. I've played a little bit with
version 2.7.6 and was able to get something. I may go back to that
version, or version 2.7.7. I don't know. I want to use the latest
version, however.
 
I have looked into other language translators but they're not doing what
ANTLR can do. Like I said, I don't have a java background so I have no
idea how to get these files to compile. I have, to the best of my
ability, my environment set up. I know I can atleast run .jar files and
I am able to run the antlrworks .jar program.
 
How do I get ANTLR 3.0b5 to compile under Java? Are there any
executables/jar files already ready to go that I don't even have to
worry about compiling and I can get to just working with the grammar
files already? I've spent on a week on this already and don't have
anything. Thank you for whatever help you can give.
 
Jayne Ochoa
Software Developer
AmerisourceBergen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061130/181ef53f/attachment.html 

From kroepke at classdump.org  Thu Nov 30 15:02:43 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 1 Dec 2006 00:02:43 +0100
Subject: [antlr-interest] File extensions for ANTLR 3
In-Reply-To: <B0914EDC-A0F6-42DB-B298-EF4409111076@cs.usfca.edu>
References: <41fed8f80611301403o591b6da0yfb25b309b22e92d@mail.gmail.com>
	<B0914EDC-A0F6-42DB-B298-EF4409111076@cs.usfca.edu>
Message-ID: <24CABF8A-6215-4ECD-95D5-B6F020ED86F8@classdump.org>


On 30. Nov 2006, at 23:18 , Terence Parr wrote:

> In general I support this proposal.  The most common case is  
> plain .g for a combined parser and lexer so nothing will change.  I  
> like the idea that, from the extension, a build tool or IDE knows  
> the Java class that will come out.

For the Xcode thingy I actually wrote a filter lexer to check out the  
file content to figure out what the output files will be. I even  
check for lexer rules explicitely, just to be sure. It's a pain.

> T.gl -> TLexer.java
> T.gp -> TParser.java
> T.gtp -> TTreeParser.java
> T.g -> TLexer.java, TParser.java
>
> Kunle also has a proposal that  tree parsers are different enough  
> that we should translate literally
>
> T.gtp -> T.java
>
> His rationale is that normal grammars are named for the language  
> and, hence, adding Lexer or Parser suffix makes sense, but tree  
> parsers are usually named properly and adding the TreeParser suffix  
> does not.  I noticed this a number of times myself.  For example,
>
> DefineVariables.g -> DefineVariablesTreeParser.java  (or .gtp?)
> SemanticAnalyzer.g -> SemanticAnalyzerTreeParser.java

Yes, that has bugged me, too.

> weird, right? Because tree grammars are named for their functions,  
> we should probably leave that alone.  With the addition of  
> Prashant's proposal (a similar proposed by others) then we will  
> know precisely what Java file will come out given the extension.
>
> So, the proposal is that ANTLR specifically  
> enforce .g, .gl, .gp, .gtp as well as the name of the file being  
> the name of the grammar inside.  Further, ANTLR would deviate from  
> regular grammars for tree grammars so that no suffix is added to  
> the generated code.

Sounds pretty good to me. This also comes in time for the book ;)
I give my vote to:
T.g	- combined, (TLexer|TParser).targetexts
T.gl	- lexer, TLexer.targetexts
T.gp	- parser, TParser.targetexts
T.gtp	- tree parser, T.targetexts

But I wonder if ANTLR should really enforce this. After all, a  
compiler shouldn't care what the file is named, right? In ANTLR's  
case I see file extensions more like a recommendation to make life  
easier for GUIs, build systems, etc. The only thing we have to change  
is the class/filename of tree parsers. Everything else will already  
be working. Maybe change the extensions of the intermediate lexer  
grammar file of combined grammars, and that's it. Document the "best  
practice file extensions" and be done with it.

> How will this fly in other target languages?

I don't see how this will be any different to the current situation.  
After all, the targets aren't involved in generating the filenames.

What I sometimes longed for is to be able to generate more than one  
pair of files (or one file as in Java), esp. for rule return classes,  
but that discussion really doesn't belong here ;) Besides, that would  
be difficult to implement in a uniform manner for all targets, so  
I'll just deal with the humongous output files. My ideal for this  
would be too Objective-C specific anyway.

cheers,

-k

-- 
Kay R?pke
http://classdump.org/





From jimi at intersystems.com  Thu Nov 30 15:46:37 2006
From: jimi at intersystems.com (Jim Idle)
Date: Thu, 30 Nov 2006 18:46:37 -0500
Subject: [antlr-interest] File extensions for ANTLR 3
In-Reply-To: <B0914EDC-A0F6-42DB-B298-EF4409111076@cs.usfca.edu>
Message-ID: <20061130234635.284B0150E@mail.intersystems.com>

Hang on a mo ;-). When I proposed extensions (and I have adopted them and encoded them into the visual studio plug-in), everyone moaned and said they only wanted to use .g3 and only optionally. So we agreed that I would use the extensions I proposed:

.g3l
.g3p
.g3pl (or .g3 or .g)
.g3t

For visual studio if you wanted to use the plugin, but that we would not force it upon anyone. If we are now going to change our minds, then can we at least use the extensions I proposed.

I don't support T.g3t -> T.java in general as it is not orthogonal. But, whatever ;-)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, November 30, 2006 2:19 PM
To: Antlr Interest
Cc: Kunle Odutola
Subject: Re: [antlr-interest] File extensions for ANTLR 3


On Nov 30, 2006, at 2:03 PM, Prashant Deva wrote:

> The current file extensions for antlr 3 (its .g or .g3, i guess) does
> not indicate in any way whether the grammar file contains a parser or
> lexer. Also the file name itself doesnt indicate the name of the
> parser/lexer.
>
> I propose to let the extension of grammar files be something like
> .gl,.gp & .glp which indicates instantly whether the file contains a
> lexer, parser or both. Also like java the name of the file should be
> the same as the name of the lexer inside.

In general I support this proposal.  The most common case is plain .g  
for a combined parser and lexer so nothing will change.  I like the  
idea that, from the extension, a build tool or IDE knows the Java  
class that will come out.

T.gl -> TLexer.java
T.gp -> TParser.java
T.gtp -> TTreeParser.java
T.g -> TLexer.java, TParser.java

Kunle also has a proposal that  tree parsers are different enough  
that we should translate literally

T.gtp -> T.java

His rationale is that normal grammars are named for the language and,  
hence, adding Lexer or Parser suffix makes sense, but tree parsers  
are usually named properly and adding the TreeParser suffix does  
not.  I noticed this a number of times myself.  For example,

DefineVariables.g -> DefineVariablesTreeParser.java  (or .gtp?)
SemanticAnalyzer.g -> SemanticAnalyzerTreeParser.java

weird, right? Because tree grammars are named for their functions, we  
should probably leave that alone.  With the addition of Prashant's  
proposal (a similar proposed by others) then we will know precisely  
what Java file will come out given the extension.

So, the proposal is that ANTLR specifically  
enforce .g, .gl, .gp, .gtp as well as the name of the file being the  
name of the grammar inside.  Further, ANTLR would deviate from  
regular grammars for tree grammars so that no suffix is added to the  
generated code.

How will this fly in other target languages?

Ter

-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.1.430 / Virus Database: 268.15.2/559 - Release Date: 11/30/2006 5:07 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.430 / Virus Database: 268.15.2/559 - Release Date: 11/30/2006 5:07 AM
 

From antlr at thewolery.demon.co.uk  Thu Nov 30 14:44:34 2006
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Thu, 30 Nov 2006 22:44:34 +0000
Subject: [antlr-interest] How can I ignore reserved words in certain
	cases ?
In-Reply-To: <20061130083648.98597.qmail@web23408.mail.ird.yahoo.com>
References: <20061130083648.98597.qmail@web23408.mail.ird.yahoo.com>
Message-ID: <hNn6RHFS71bFFwDf@thewolery.demon.co.uk>

In message <20061130083648.98597.qmail at web23408.mail.ird.yahoo.com>, 
JeanChristophe Gautier <jchgautier at yahoo.fr> writes
>Obviously the second example ("print print") does not work
> because the
>token PRINT takes priority since we have testLiterals = true (note
> that
>this example is taken from a more complex grammar).
>
>The question is: how do I, under certain circumstances, ignore reserved
>word tokens?

Is v3 token filter working?

That's why I want a filter between the lexer and the parser (Monty's 
AREV grammar does this in v2 iirc), so that you can say "print is always 
followed by a string" and when the filter sees a "print" token, it will 
force the following token to a string token regardless of what the lexer 
said it was.

That to me is conceptually a far simpler approach, and I got the 
impression that functionality was intended for v3.

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From kroepke at classdump.org  Thu Nov 30 16:05:00 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 1 Dec 2006 01:05:00 +0100
Subject: [antlr-interest] File extensions for ANTLR 3
In-Reply-To: <20061130234635.284B0150E@mail.intersystems.com>
References: <20061130234635.284B0150E@mail.intersystems.com>
Message-ID: <065C4511-4D08-4C75-88A7-C44E147A8393@classdump.org>


On 1. Dec 2006, at 0:46 , Jim Idle wrote:

> Hang on a mo ;-). When I proposed extensions (and I have adopted  
> them and encoded them into the visual studio plug-in), everyone  
> moaned and said they only wanted to use .g3 and only optionally. So  
> we agreed that I would use the extensions I proposed:

Damn! I missed that opportunity to moan ;) Seriously, that discussion  
somehow escaped me. strange.
So, if you use those extensions already, for the next beta release  
I'll pick them up, too. Unless of course we want to use creator codes  
and resource forks and leave non-Mac users out in the cold :P

> .g3l
> .g3p
> .g3pl (or .g3 or .g)
> .g3t
>
> For visual studio if you wanted to use the plugin, but that we  
> would not force it upon anyone. If we are now going to change our  
> minds, then can we at least use the extensions I proposed.

yup, they are as good as any.

> I don't support T.g3t -> T.java in general as it is not orthogonal.  
> But, whatever ;-)

Yeah, sorta. It has bugged me to have the TreeParser suffix, but  
after all it's just a name, so I don't care too deeply. Nice to have  
a system to it, I agree.

Still, I'm against forcing the extensions onto users. We can advise  
and tell people that some tools won't be able to work properly if  
they ignore the advice, but force? No need.
ANTLR could generate .g3l lexers for combined grammars to find its  
own file, but other than that it shouldn't care. This is a  
documentation issue, IMHO.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Thu Nov 30 16:18:13 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 30 Nov 2006 19:18:13 -0500 (EST)
Subject: [antlr-interest] Scopes and return values
Message-ID: <30552.203.118.130.100.1164932293.squirrel@www.mirality.co.nz>

In ANTLR v3, if I've got a top-level rule that I want to return an object
from (to the calling code, not another grammar rule), how do I make that
object accessible to subrules so it can be modified as its parsed?

eg:

file
returns [ FileData data ]
@init {
  $data = new FileData();
}
  : fileItem* EOF
  ;

fileItem
  : someOtherRule { $data.AddFileItem(...); }
  ;

I've currently hacked something together using scopes, but this produces
an annoying variable duplication, so I'm sure there must be a better way:

file
returns [ FileData dataRet ]
scope {
  FileData data;
}
@init {
  $file::data = new FileData();
  $dataRet = $file::data;
}
  : fileItem* EOF
  ;

fileItem
  : someOtherRule { $file::data.AddFileItem(...); }
  ;


From kroepke at classdump.org  Thu Nov 30 16:25:08 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 1 Dec 2006 01:25:08 +0100
Subject: [antlr-interest] Scopes and return values
In-Reply-To: <30552.203.118.130.100.1164932293.squirrel@www.mirality.co.nz>
References: <30552.203.118.130.100.1164932293.squirrel@www.mirality.co.nz>
Message-ID: <8017BC01-E5DD-4763-9EC2-8FFA3F574296@classdump.org>


On 1. Dec 2006, at 1:18 , Gavin Lambert wrote:

> In ANTLR v3, if I've got a top-level rule that I want to return an  
> object
> from (to the calling code, not another grammar rule), how do I make  
> that
> object accessible to subrules so it can be modified as its parsed?

Depending on how many rules are affected, I'd pass the object in via  
a parameter:

file
returns [ FileData data ]
@init {
   $data = new FileData();
}
   : fileItem[data]* EOF
   ;

fileItem [ FileData data ]
   : someOtherRule { $data.AddFileItem(...); }
   ;

Otherwise use a @member directive and a @finally action in rule file:

@members {
FileData currentData;
}
@init {
currentData = null;
}

file
returns [ FileData data ]
@init {
   currentData = new FileData();
}
@finally {
   $data = currentData;
}
   : fileItem* EOF
   ;

fileItem [ FileData data ]
   : someOtherRule { if (currentData != null) currentData.AddFileItem 
(...); }
   ;

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Thu Nov 30 16:39:23 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 1 Dec 2006 01:39:23 +0100
Subject: [antlr-interest] Scopes and return values
In-Reply-To: <8017BC01-E5DD-4763-9EC2-8FFA3F574296@classdump.org>
References: <30552.203.118.130.100.1164932293.squirrel@www.mirality.co.nz>
	<8017BC01-E5DD-4763-9EC2-8FFA3F574296@classdump.org>
Message-ID: <62EF5CF3-5D06-4204-9141-5DF6B1849C1E@classdump.org>


On 1. Dec 2006, at 1:25 , Kay Roepke wrote:

> Otherwise use a @member directive and a @finally action in rule file:
>
> @members {
> FileData currentData;
> }
> @init {
> currentData = null;
> }
>
> file
> returns [ FileData data ]
> @init {
>   currentData = new FileData();
> }
> @finally {
>   $data = currentData;
> }
>   : fileItem* EOF
>   ;
>
> fileItem [ FileData data ]
>   : someOtherRule { if (currentData != null) currentData.AddFileItem 
> (...); }
>   ;
>

Tthe parameter of fileItem is a copy&paste error, of course...

-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Thu Nov 30 19:28:43 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 30 Nov 2006 19:28:43 -0800
Subject: [antlr-interest] [antlr-dev] actions in rules with backtracking
In-Reply-To: <FAA9FB8D-0806-4E3F-AF5C-29A252B21BDA@classdump.org>
References: <Pine.LNX.4.58.0611301352520.15401@lennox.lanl.gov>
	<FAA9FB8D-0806-4E3F-AF5C-29A252B21BDA@classdump.org>
Message-ID: <371FE653-6648-45B2-BE5F-09E53BD95E8D@cs.usfca.edu>

Hi, as Kay points out the only way right now to execute actions  
during syntactic predicates speculative recognition is by specifying  
your own special action to gate actions in and out during speculation  
and by using the @init action.

I would really like to come up with a way to specify that an action  
should always execute so that, for example, people can update a  
symbol table.

Finally, please note that modifying the lexer from the parser usually  
won't work as you mentioned in your follow-up.

Ter
On Nov 30, 2006, at 1:08 PM, Kay Roepke wrote:

> Hi!
>
> On 30. Nov 2006, at 21:54 , Christopher D. Rickett wrote:
>
>> Is there a way to force actions that begin rules to always be
>> executed,
>> even if backtracking is enabled?  For example:
>>
>> A : {/* my action */;} B ;
>>
>> Is there a way to ensure that this action will be executed?
>
> Do you mean to execute the action 'while backtracking'?
> That's tricky. For synpreds you might be able to get away with the
> global
> @synpredgate { expression that replaces the 'backtracking == 0'
> check}, but
> that only works for syntactic predicates and affects all synpreds.
>
> OTOH:
> If you simply want to execute code at the beginning of a rule, use an
> @init action.
> Those are not protected with 'if (backtracking==0)':
>
> rule
> @init {
> 	// this is always executed, try the -trace option to see it in action
> }
> :	'foo' ;
>
> BTW, what do you want to achieve?
>
> HTH,
> -k
>
> P.S.: antlr-interest is a better list for those questions ;)
> -- 
> Kay R?pke
> http://classdump.org/
>
>
>
>
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev


From antlr at mirality.co.nz  Thu Nov 30 23:28:09 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 01 Dec 2006 20:28:09 +1300
Subject: [antlr-interest] How can I ignore reserved words in
 certain	cases ?
In-Reply-To: <mailman.3274.1164896002.15912.antlr-interest@antlr.org>
References: <mailman.3274.1164896002.15912.antlr-interest@antlr.org>
Message-ID: <7.0.1.0.0.20061201201739.03810140@mirality.co.nz>

At 09:11 30/11/2006, Micheal J wrote:
 >I am writing a command line editor that has reserved words, such 

 >as "print", that should accept, at times, any string value. For
 >example the following should be allowed:
 >
 >print hello
 >print print
[...]
 >Obviously the second example ("print print") does not work
 >because the token PRINT takes priority since we have 
testLiterals = true
 >(note that this example is taken from a more complex grammar).
 >
 >The question is: how do I, under certain circumstances, ignore
 >reserved word tokens?

I haven't tried this, but I think you ought to be able to use a 
catchall here.  Something like this:

expr1: PRINT what:. { print($what.getText()); };

(Or more likely a ~-set, since you probably don't want to allow 
symbols instead of words.)

I could be wrong, though :)


