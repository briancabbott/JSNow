From nikolay.ognyanov at travelstoremaker.com  Sun Apr  1 15:09:45 2012
From: nikolay.ognyanov at travelstoremaker.com (Nikolay Ognyanov)
Date: Mon, 02 Apr 2012 01:09:45 +0300
Subject: [antlr-interest] does ANTLR have syntax for negation of syntactic
	predicates?
Message-ID: <4F78D229.2050606@travelstoremaker.com>

Can somebody please advise whether it is possible to negate
a syntactic predicate in an ANTLR grammar? This is something
fairly easy to do in the generated code but I am not able to
find ANTLR syntax for it. I googled a couple of threads on
the issue but found no definitive answer.

I am not asking for help with my specific problem because I
have a (kludgey) solution but but will describe it below FYI
and in a hope to motivate implementation of the feature if it
is not available.

The problem is with a rule

like this:

rule
     : alt1
     | alt2
       // ... more alternatives
     | altm
     | altn
     ;

where altm and altn can have (among many others) prefixes
prefm and prefn respectively such that:

   1/ No alternative other than altm and altm can have prefix
      prefm or prefn.
   2/ LL(*) analysis can not distinguish between prefm and prefn
   2/ If the alternatve between prefm and prefm is resolved
      then what remains from altm and altn is resolvable by LL(*)

Now I can not say something like:

rule
     : alt1
     | alt2
       // ... more alternatives
     | (prefm) =>  altm
     | altn
     ;

because prefm is not the only possible start of altm.
It is possible in priciple to say something like this:

rule
     : alt1
     | alt2
       // ... more alternatives
     | (prefm) =>  prefm altmRest
     | altmRest
     | altn
     ;

but prefm and prefn are two of the core nonterminals
in the grammar with so many rules, dependences,
appearances and recursions that the breakdown to
prefix and reminder is not practically feasible.

Moreover I do not want to enable general backtracking for
the rule because it would be quite a bit more expensive
than backtracking over prefn only.

So what I would like to say is something like this:

rule
     : alt1
     | alt2
       // ... more alternatives
     | !(prefn) =>  altm
     | altn
     ;


My kludgey solution is to subclass the parser and to
override the syntactic predicate method to negate its
result. It is somewhat better than directly patching
the generated parser code but there is still the problem
with the need to watch out for change of predicate method
name if/when I add more predicates and the nasty
side effects if/when I fail to do that.

Thank you in advance
Nikolay




From jimi at temporal-wave.com  Sun Apr  1 15:20:03 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 1 Apr 2012 15:20:03 -0700
Subject: [antlr-interest] does ANTLR have syntax for negation of
	syntactic predicates?
In-Reply-To: <4F78D229.2050606@travelstoremaker.com>
References: <4F78D229.2050606@travelstoremaker.com>
Message-ID: <964ce6fd41f303a305fa1fbd49a28ca6@mail.gmail.com>

In order, this:

1) Left factor all those prefixes so that they have a common path until
they disambiguate (this is the fastest and neatest, but you have to work
at it)
2) Re order the alts - you should be able to put the alt that DOES have
that prefix before the ones that don't. If you cannot, then you will have
to work on 1) above at least to some extent.
3) Change to a semantic predicate and call the syntactic predicate
yourself

Things like this usually mean that your grammar is not 'right' though, so
I strongly advise that you start with 1. If you think of say C function
prototypes vs functions, you can see what to do:

stat: func_leadin  ( SEMI /* proto */ | func_body) ;


Just group all the common stuff together and don't even worry if the rules
allow slightly incorrect syntax - just detect that with a semantic check
either in the code or within your tree walk if you have once.


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Nikolay Ognyanov
> Sent: Sunday, April 01, 2012 3:10 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] does ANTLR have syntax for negation of
> syntactic predicates?
>
> Can somebody please advise whether it is possible to negate a syntactic
> predicate in an ANTLR grammar? This is something fairly easy to do in
> the generated code but I am not able to find ANTLR syntax for it. I
> googled a couple of threads on the issue but found no definitive
> answer.
>
> I am not asking for help with my specific problem because I have a
> (kludgey) solution but but will describe it below FYI and in a hope to
> motivate implementation of the feature if it is not available.
>
> The problem is with a rule
>
> like this:
>
> rule
>      : alt1
>      | alt2
>        // ... more alternatives
>      | altm
>      | altn
>      ;
>
> where altm and altn can have (among many others) prefixes prefm and
> prefn respectively such that:
>
>    1/ No alternative other than altm and altm can have prefix
>       prefm or prefn.
>    2/ LL(*) analysis can not distinguish between prefm and prefn
>    2/ If the alternatve between prefm and prefm is resolved
>       then what remains from altm and altn is resolvable by LL(*)
>
> Now I can not say something like:
>
> rule
>      : alt1
>      | alt2
>        // ... more alternatives
>      | (prefm) =>  altm
>      | altn
>      ;
>
> because prefm is not the only possible start of altm.
> It is possible in priciple to say something like this:
>
> rule
>      : alt1
>      | alt2
>        // ... more alternatives
>      | (prefm) =>  prefm altmRest
>      | altmRest
>      | altn
>      ;
>
> but prefm and prefn are two of the core nonterminals in the grammar
> with so many rules, dependences, appearances and recursions that the
> breakdown to prefix and reminder is not practically feasible.
>
> Moreover I do not want to enable general backtracking for the rule
> because it would be quite a bit more expensive than backtracking over
> prefn only.
>
> So what I would like to say is something like this:
>
> rule
>      : alt1
>      | alt2
>        // ... more alternatives
>      | !(prefn) =>  altm
>      | altn
>      ;
>
>
> My kludgey solution is to subclass the parser and to override the
> syntactic predicate method to negate its result. It is somewhat better
> than directly patching the generated parser code but there is still the
> problem with the need to watch out for change of predicate method name
> if/when I add more predicates and the nasty side effects if/when I fail
> to do that.
>
> Thank you in advance
> Nikolay
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From nikolay.ognyanov at travelstoremaker.com  Sun Apr  1 15:51:01 2012
From: nikolay.ognyanov at travelstoremaker.com (Nikolay Ognyanov)
Date: Mon, 02 Apr 2012 01:51:01 +0300
Subject: [antlr-interest] does ANTLR have syntax for negation
 of	syntactic predicates?
In-Reply-To: <964ce6fd41f303a305fa1fbd49a28ca6@mail.gmail.com>
References: <4F78D229.2050606@travelstoremaker.com>
	<964ce6fd41f303a305fa1fbd49a28ca6@mail.gmail.com>
Message-ID: <4F78DBD5.2010502@travelstoremaker.com>

Thank you, Jim.

Apparently your implicit answer is that there is no syntax
in ANTR for negation of syntactic predicates. If so - please
take this as a humble feature request.

To your specific suggestions:

Left-factoring the prefixes is not practically feasible
because they come from different rules and joining them
would ripple through too big part of the grammar. Ordering
would not help because LL(*) does not distinguish between
the 2 prefixes. The idea of using semantic predicate sounds
helpful to me. The way I am inclined to use this hint is
to subclass the parser and implement in the derived
class the syntactic predicate I need with all the backtracking
logic and then use a semantic predicate (which can not have
backtracking logic inlined) to call the sytactic predicate.
This way I will avoid problems with eventual change of sytactic
predicate method name. Of course this all is still a kludge
but it is considerably better than the one I described earlier.

Regards
Nikolay

On 04/02/2012 01:20 AM, Jim Idle wrote:
> In order, this:
>
> 1) Left factor all those prefixes so that they have a common path until
> they disambiguate (this is the fastest and neatest, but you have to work
> at it)
> 2) Re order the alts - you should be able to put the alt that DOES have
> that prefix before the ones that don't. If you cannot, then you will have
> to work on 1) above at least to some extent.
> 3) Change to a semantic predicate and call the syntactic predicate
> yourself
>
> Things like this usually mean that your grammar is not 'right' though, so
> I strongly advise that you start with 1. If you think of say C function
> prototypes vs functions, you can see what to do:
>
> stat: func_leadin  ( SEMI /* proto */ | func_body) ;
>
>
> Just group all the common stuff together and don't even worry if the rules
> allow slightly incorrect syntax - just detect that with a semantic check
> either in the code or within your tree walk if you have once.
>
>
> Jim
>
>
>    
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Nikolay Ognyanov
>> Sent: Sunday, April 01, 2012 3:10 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] does ANTLR have syntax for negation of
>> syntactic predicates?
>>
>> Can somebody please advise whether it is possible to negate a syntactic
>> predicate in an ANTLR grammar? This is something fairly easy to do in
>> the generated code but I am not able to find ANTLR syntax for it. I
>> googled a couple of threads on the issue but found no definitive
>> answer.
>>
>> I am not asking for help with my specific problem because I have a
>> (kludgey) solution but but will describe it below FYI and in a hope to
>> motivate implementation of the feature if it is not available.
>>
>> The problem is with a rule
>>
>> like this:
>>
>> rule
>>       : alt1
>>       | alt2
>>         // ... more alternatives
>>       | altm
>>       | altn
>>       ;
>>
>> where altm and altn can have (among many others) prefixes prefm and
>> prefn respectively such that:
>>
>>     1/ No alternative other than altm and altm can have prefix
>>        prefm or prefn.
>>     2/ LL(*) analysis can not distinguish between prefm and prefn
>>     2/ If the alternatve between prefm and prefm is resolved
>>        then what remains from altm and altn is resolvable by LL(*)
>>
>> Now I can not say something like:
>>
>> rule
>>       : alt1
>>       | alt2
>>         // ... more alternatives
>>       | (prefm) =>   altm
>>       | altn
>>       ;
>>
>> because prefm is not the only possible start of altm.
>> It is possible in priciple to say something like this:
>>
>> rule
>>       : alt1
>>       | alt2
>>         // ... more alternatives
>>       | (prefm) =>   prefm altmRest
>>       | altmRest
>>       | altn
>>       ;
>>
>> but prefm and prefn are two of the core nonterminals in the grammar
>> with so many rules, dependences, appearances and recursions that the
>> breakdown to prefix and reminder is not practically feasible.
>>
>> Moreover I do not want to enable general backtracking for the rule
>> because it would be quite a bit more expensive than backtracking over
>> prefn only.
>>
>> So what I would like to say is something like this:
>>
>> rule
>>       : alt1
>>       | alt2
>>         // ... more alternatives
>>       | !(prefn) =>   altm
>>       | altn
>>       ;
>>
>>
>> My kludgey solution is to subclass the parser and to override the
>> syntactic predicate method to negate its result. It is somewhat better
>> than directly patching the generated parser code but there is still the
>> problem with the need to watch out for change of predicate method name
>> if/when I add more predicates and the nasty side effects if/when I fail
>> to do that.
>>
>> Thank you in advance
>> Nikolay
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>>      
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    

From nikolay.ognyanov at travelstoremaker.com  Sun Apr  1 16:06:03 2012
From: nikolay.ognyanov at travelstoremaker.com (Nikolay Ognyanov)
Date: Mon, 02 Apr 2012 02:06:03 +0300
Subject: [antlr-interest] does ANTLR have syntax for negation
 of	syntactic predicates?
In-Reply-To: <4F78DBD5.2010502@travelstoremaker.com>
References: <4F78D229.2050606@travelstoremaker.com>	<964ce6fd41f303a305fa1fbd49a28ca6@mail.gmail.com>
	<4F78DBD5.2010502@travelstoremaker.com>
Message-ID: <4F78DF5B.7050601@travelstoremaker.com>

P.S.: On a second thought, there is no need to subclass the
parser because it is probably possible to implement the
needed syntactic predicate in the @members section.

On 04/02/2012 01:51 AM, Nikolay Ognyanov wrote:

> Thank you, Jim.
>
> Apparently your implicit answer is that there is no syntax
> in ANTR for negation of syntactic predicates. If so - please
> take this as a humble feature request.
>
> To your specific suggestions:
>
> Left-factoring the prefixes is not practically feasible
> because they come from different rules and joining them
> would ripple through too big part of the grammar. Ordering
> would not help because LL(*) does not distinguish between
> the 2 prefixes. The idea of using semantic predicate sounds
> helpful to me. The way I am inclined to use this hint is
> to subclass the parser and implement in the derived
> class the syntactic predicate I need with all the backtracking
> logic and then use a semantic predicate (which can not have
> backtracking logic inlined) to call the sytactic predicate.
> This way I will avoid problems with eventual change of sytactic
> predicate method name. Of course this all is still a kludge
> but it is considerably better than the one I described earlier.
>
> Regards
> Nikolay
>
> On 04/02/2012 01:20 AM, Jim Idle wrote:
>    
>> In order, this:
>>
>> 1) Left factor all those prefixes so that they have a common path until
>> they disambiguate (this is the fastest and neatest, but you have to work
>> at it)
>> 2) Re order the alts - you should be able to put the alt that DOES have
>> that prefix before the ones that don't. If you cannot, then you will have
>> to work on 1) above at least to some extent.
>> 3) Change to a semantic predicate and call the syntactic predicate
>> yourself
>>
>> Things like this usually mean that your grammar is not 'right' though, so
>> I strongly advise that you start with 1. If you think of say C function
>> prototypes vs functions, you can see what to do:
>>
>> stat: func_leadin  ( SEMI /* proto */ | func_body) ;
>>
>>
>> Just group all the common stuff together and don't even worry if the rules
>> allow slightly incorrect syntax - just detect that with a semantic check
>> either in the code or within your tree walk if you have once.
>>
>>
>> Jim
>>
>>
>>
>>      
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Nikolay Ognyanov
>>> Sent: Sunday, April 01, 2012 3:10 PM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] does ANTLR have syntax for negation of
>>> syntactic predicates?
>>>
>>> Can somebody please advise whether it is possible to negate a syntactic
>>> predicate in an ANTLR grammar? This is something fairly easy to do in
>>> the generated code but I am not able to find ANTLR syntax for it. I
>>> googled a couple of threads on the issue but found no definitive
>>> answer.
>>>
>>> I am not asking for help with my specific problem because I have a
>>> (kludgey) solution but but will describe it below FYI and in a hope to
>>> motivate implementation of the feature if it is not available.
>>>
>>> The problem is with a rule
>>>
>>> like this:
>>>
>>> rule
>>>        : alt1
>>>        | alt2
>>>          // ... more alternatives
>>>        | altm
>>>        | altn
>>>        ;
>>>
>>> where altm and altn can have (among many others) prefixes prefm and
>>> prefn respectively such that:
>>>
>>>      1/ No alternative other than altm and altm can have prefix
>>>         prefm or prefn.
>>>      2/ LL(*) analysis can not distinguish between prefm and prefn
>>>      2/ If the alternatve between prefm and prefm is resolved
>>>         then what remains from altm and altn is resolvable by LL(*)
>>>
>>> Now I can not say something like:
>>>
>>> rule
>>>        : alt1
>>>        | alt2
>>>          // ... more alternatives
>>>        | (prefm) =>    altm
>>>        | altn
>>>        ;
>>>
>>> because prefm is not the only possible start of altm.
>>> It is possible in priciple to say something like this:
>>>
>>> rule
>>>        : alt1
>>>        | alt2
>>>          // ... more alternatives
>>>        | (prefm) =>    prefm altmRest
>>>        | altmRest
>>>        | altn
>>>        ;
>>>
>>> but prefm and prefn are two of the core nonterminals in the grammar
>>> with so many rules, dependences, appearances and recursions that the
>>> breakdown to prefix and reminder is not practically feasible.
>>>
>>> Moreover I do not want to enable general backtracking for the rule
>>> because it would be quite a bit more expensive than backtracking over
>>> prefn only.
>>>
>>> So what I would like to say is something like this:
>>>
>>> rule
>>>        : alt1
>>>        | alt2
>>>          // ... more alternatives
>>>        | !(prefn) =>    altm
>>>        | altn
>>>        ;
>>>
>>>
>>> My kludgey solution is to subclass the parser and to override the
>>> syntactic predicate method to negate its result. It is somewhat better
>>> than directly patching the generated parser code but there is still the
>>> problem with the need to watch out for change of predicate method name
>>> if/when I add more predicates and the nasty side effects if/when I fail
>>> to do that.
>>>
>>> Thank you in advance
>>> Nikolay
>>>
>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>>>
>>>        
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>      
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    

From page.cal at gmail.com  Mon Apr  2 11:32:58 2012
From: page.cal at gmail.com (Cal Page)
Date: Mon, 2 Apr 2012 14:32:58 -0400
Subject: [antlr-interest] Any examples of setDebugListener for v3?
Message-ID: <CAD3Ud_=Mg_x39kPW5uu735PKmyTygB4MHYtv=F5i6atLiWzg-Q@mail.gmail.com>

Are there any examples of Parser.setDebugListener?

Specifically, none of the debug/trace techniques I found work with V3,
including the Eclipse ANTLR module.

Should I back down to V2 or just press ahead?

Cal Page

From researcher0x00 at gmail.com  Mon Apr  2 11:44:45 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 2 Apr 2012 14:44:45 -0400
Subject: [antlr-interest] Any examples of setDebugListener for v3?
In-Reply-To: <CAD3Ud_=Mg_x39kPW5uu735PKmyTygB4MHYtv=F5i6atLiWzg-Q@mail.gmail.com>
References: <CAD3Ud_=Mg_x39kPW5uu735PKmyTygB4MHYtv=F5i6atLiWzg-Q@mail.gmail.com>
Message-ID: <CAN45N12zzGRtsAd=TCQhPP4YzZFCL8x5kUP=uvpoBb7S-4tVsA@mail.gmail.com>

I believe ANTLRWorks uses it. You will have to check the source code to be
sure.

On Mon, Apr 2, 2012 at 2:32 PM, Cal Page <page.cal at gmail.com> wrote:

> Are there any examples of Parser.setDebugListener?
>
> Specifically, none of the debug/trace techniques I found work with V3,
> including the Eclipse ANTLR module.
>
> Should I back down to V2 or just press ahead?
>
> Cal Page
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From golledge at us.ibm.com  Mon Apr  2 15:14:53 2012
From: golledge at us.ibm.com (Chris Golledge)
Date: Mon, 2 Apr 2012 17:14:53 -0500
Subject: [antlr-interest] confounded exceptions on predicate
Message-ID: <OF4FF1F856.C6D3EA2F-ON862579D4.00748F1C-862579D4.007A3655@us.ibm.com>


Hi,

Kind of fishing for some suggestions on where to look for the cause of this
problem.
Currently I'm working on converting a set of grammar files from ANTLR 2 to
ANTLR 3.

Descrpition:
>From within Eclipse 3.6.2, using
	Java
	java version "1.6.0"
	Java(TM) SE Runtime Environment (build pwi3260sr10-20111208_01(SR10))
	IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows 7 x86-32
jvmwi3260sr10-201112

	ANTLR IDE- ANTLR Tools
	2.1.1.201011141044

	ANTLR
	antlr-3.4-complete.jar

Code snippet:

primary
	: (CURSOR LPAREN SELECT) => c=CURSOR^ LPAREN! s=subquery1 r=RPAREN!
	     {$c.setText (SrcAST.getText($c) + "(" + SrcAST.getText($s) + ")"
) ;
	      SrcAST.setSpan ($c, $c, $r);  }


  | CAST LPAREN => cast_expr	      // problematic line
	| (simple_case_expr) => simple_case_expr
	| (searched_case_expr)  => searched_case_expr
	//functions with special syntax:
	| (trim_function) => trim_function
	| (decompose_function) => decompose_function
	| (extract_function) => extract_function

	| (treat_function)	=> treat_function
	| (tz_offset_function)	=>	tz_offset_function
	| (percentile_functions) => percentile_functions
	| (xmlcolattval_function)=> xmlcolattval_function
	| (xmlelement_function)=> xmlelement_function
	| (xmlforest_function)=> xmlforest_function
	| literal
	| t=TIMESTAMP^ st=STRING_LITERAL
		{ $primary.setText("TIMESTAMP "+SrcAST.getText($st));
		  SrcAST.setSpan($primary,$t,$st); }
	| d=DATE^ sd=STRING_LITERAL
		{ $primary.setText("DATE "+SrcAST.getText($st));
		  SrcAST.setSpan($primary,$t,$st); }
	| interval_literal

	| ((NEW)=> NEW)? v=variable_expression
	  ->  // build no AST for this alternative
	    {$primary = $v;}
	| (LPAREN subquery2) =>   l3=LPAREN! su=subquery2 r3=RPAREN!
	     { $primary.setText ( "(" + SrcAST.getText($su) + ")" ) ;
	       SrcAST.setSpan ($primary, $l3, $r3); }
	| expr_list_p

	;

cast_expr
	: c=CAST^ LPAREN! e=expr_or_multiset AS! t=datatype r=RPAREN!
	     { $c.setText ( "CAST(" + SrcAST.getText($e) + " AS " +
SrcAST.getText($t) + ")" ) ;
	       SrcAST.setSpan ($c, $c, $r); }
	;


If the problem line, CAST LPAREN ... , is not commented out, from the
Eclipse IDE and ANTLRWorks, I get the errors below.  I get other errors if
I comment it out, but the processing makes it past the point where this
error occurs.


   ANTLR Parser Generator 3.4 Jul 19, 2011 11:35:12.
   Using project classpath: Yes.
   Grammar: [snipped]Parser.g
   java.lang.NoSuchFieldError:
   org/antlr/tool/GrammarSyntaxMessage.offendingToken
   	at org.deved.antlride.runtime.AntlrErrorListener.extractToken
   (AntlrErrorListener.java:108)
   	at org.deved.antlride.runtime.AntlrErrorListener.report
   (AntlrErrorListener.java:79)
   	at org.deved.antlride.runtime.AntlrErrorListener.message
   (AntlrErrorListener.java:63)
   	at org.deved.antlride.runtime.AntlrErrorListener.error
   (AntlrErrorListener.java:53)
   	at org.antlr.tool.ErrorManager.syntaxError(ErrorManager.java:768)
   	at org.antlr.grammar.v3.ANTLRParser.reportError(ANTLRParser.java:443)
   	at org.antlr.grammar.v3.ANTLRParser.elementNoOptionSpec
   (ANTLRParser.java:4909)
   	at org.antlr.grammar.v3.ANTLRParser.element(ANTLRParser.java:4533)
   	at org.antlr.grammar.v3.ANTLRParser.alternative
   (ANTLRParser.java:4120)
   	at org.antlr.grammar.v3.ANTLRParser.ruleAltList
   (ANTLRParser.java:3580)
   	at org.antlr.grammar.v3.ANTLRParser.rule(ANTLRParser.java:2787)
   	at org.antlr.grammar.v3.ANTLRParser.rules(ANTLRParser.java:2405)
   	at org.antlr.grammar.v3.ANTLRParser.grammar_(ANTLRParser.java:702)
   	at org.antlr.tool.Grammar.parseAndBuildAST(Grammar.java:644)
   	at org.antlr.Tool.getRootGrammar(Tool.java:626)
   	at org.antlr.Tool.process(Tool.java:459)
   	at org.deved.antlride.runtime.Tool2.main(Tool2.java:24)
   BUILD SUCCESSFUL
   Total time: 1 second


This is confusing for a couple of reasons:  the build is reported to be
successful when it isn't, and the field offendingToken appears to actually
be a member GrammarSyntaxMessage.

I wasn't getting anywhere trying to solve this with the plugin; so, I tried
using ANTLRWorks 1.4.3.  This told me a bit more:

   [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error: antlr:
   NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) ( atom |
   block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2= ebnfSuffix
   [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
   ( IMPLIES )? | t3= tree_ )])
   [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error: antlr:
   NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) ( atom |
   block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2= ebnfSuffix
   [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
   ( IMPLIES )? | t3= tree_ )])
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(0!=29)
   [16:35:27] error(100): [snipped]Parser.g:0:: syntax error: assign.types:
   NoViableAltException(3@[])
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(3!=28)
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(3!=27)
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(26!=3)
   [16:35:27] java.lang.ClassCastException:
   org.antlr.runtime.tree.CommonTree incompatible with
   org.antlr.tool.GrammarAST
   	at org.antlr.grammar.v3.DefineGrammarItemsWalker.rewrite
   (DefineGrammarItemsWalker.java:3463)
   	at org.antlr.grammar.v3.DefineGrammarItemsWalker.block
   (DefineGrammarItemsWalker.java:2072)
   	at org.antlr.grammar.v3.DefineGrammarItemsWalker.rule
   (DefineGrammarItemsWalker.java:1627)
   	at org.antlr.grammar.v3.DefineGrammarItemsWalker.rules
   (DefineGrammarItemsWalker.java:1190)
   	at org.antlr.grammar.v3.DefineGrammarItemsWalker.grammarSpec
   (DefineGrammarItemsWalker.java:623)
   	at
   org.antlr.grammar.v3.DefineGrammarItemsWalker.grammar_(DefineGrammarItemsWalker.java:275)
   	at org.antlr.tool.Grammar.defineGrammarSymbols(Grammar.java:748)
   	at org.antlr.tool.CompositeGrammar.defineGrammarSymbols
   (CompositeGrammar.java:369)
   	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:606)
   	at
   org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar
   (ANTLRGrammarEngineImpl.java:192)
   	at
   org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar
   (ANTLRGrammarEngineImpl.java:225)
   	at
   org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars
   (ANTLRGrammarEngineImpl.java:169)
   	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze
   (ANTLRGrammarEngineImpl.java:272)
   	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze
   (GrammarEngineImpl.java:325)
   	at org.antlr.works.grammar.CheckGrammar.run(CheckGrammar.java:70)
   	at java.lang.Thread.run(Thread.java:736)

   [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error: antlr:
   NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) ( atom |
   block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2= ebnfSuffix
   [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
   ( IMPLIES )? | t3= tree_ )])
   [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error: antlr:
   NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) ( atom |
   block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2= ebnfSuffix
   [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
   ( IMPLIES )? | t3= tree_ )])
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(0!=29)
   [16:35:27] error(100):[snipped]Parser.g:0:: syntax error: assign.types:
   NoViableAltException(3@[])
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(3!=28)
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(3!=27)
   [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
   assign.types: MismatchedTreeNodeException(26!=3)
   [16:35:27] error(10):  internal error: [snipped]Parser.g :
   java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree
   incompatible with org.antlr.tool.GrammarAST
   org.antlr.grammar.v3.DefineGrammarItemsWalker.rewrite
   (DefineGrammarItemsWalker.java:3463)
   org.antlr.grammar.v3.DefineGrammarItemsWalker.block
   (DefineGrammarItemsWalker.java:2072)
   org.antlr.grammar.v3.DefineGrammarItemsWalker.rule
   (DefineGrammarItemsWalker.java:1627)
   org.antlr.grammar.v3.DefineGrammarItemsWalker.rules
   (DefineGrammarItemsWalker.java:1190)
   org.antlr.grammar.v3.DefineGrammarItemsWalker.grammarSpec
   (DefineGrammarItemsWalker.java:623)
   org.antlr.grammar.v3.DefineGrammarItemsWalker.grammar_(DefineGrammarItemsWalker.java:275)
   org.antlr.tool.Grammar.defineGrammarSymbols(Grammar.java:748)
   org.antlr.tool.CompositeGrammar.defineGrammarSymbols
   (CompositeGrammar.java:369)
   org.antlr.Tool.process(Tool.java:465)
   org.antlr.works.generate.CodeGenerate.generate(CodeGenerate.java:104)
   org.antlr.works.generate.CodeGenerate.run(CodeGenerate.java:185)
   java.lang.Thread.run(Thread.java:736)

It is not very clear to me if I need to pursue this as a
NoViableAltException, a  MismatchedTreeNodeException, or a
ClassCastException.

I'm looking at the existing code, and I'm not sure I would have handled
(expression) in the same way, but I don't have time to change everything I
don't like.

I'm looking at some potential matches in the problem space:

________________
Why do I get a ClassCastException when parsing a tree?
http://www.antlr.org/wiki/pages/viewpage.action?pageId=23232571
// but this appears to be happening at runtime and mine is a generation
time problem.
________________
Tree Rewrite Rules Replace Rewrite Actions


While you can still use the ^ and ! tree construction operators to build
trees, v3 introduces an entirely new syntax for Tree construction that
avoids the special syntax was used in ANTLR 2 actions:


                                                                                                                       
                               ANTLR 2                                                    ANTLR 3                      
                                                                                                                       
                                                                                                                       
                                                                                                                       
                                                                                                                       
 arrayLiteral                                                        arrayLiteral                                      
 ????:??? LBRACK! (elementList)? RBRACK!                             ????:??? LBRACK (elementList)? RBRACK             
 ????????{## = #([ARRAY_LITERAL, "ARRAY_LITERAL"],##);}              ????????-> ^(ARRAY_LITERAL elementList)           
 ????;                                                               ????;                                             
                                                                                                                       
                                                                                                                       


http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3

// But, while this style of grammar appears in the first alt, it does not
appear on the problematic line.
_____________________

This looks promising, but 722:4 does not have any errors in it according to
ANTLRWorks, and there should be no relationship between the rules for CAST
and what is defined there.
http://www.antlr.org/pipermail/antlr-interest/2011-June/041789.html


Any suggestions?

Chris

"Ah, because I have learned something since last week."  - Gandhi


From jimi at temporal-wave.com  Mon Apr  2 15:19:06 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Apr 2012 15:19:06 -0700
Subject: [antlr-interest] confounded exceptions on predicate
In-Reply-To: <OF4FF1F856.C6D3EA2F-ON862579D4.00748F1C-862579D4.007A3655@us.ibm.com>
References: <OF4FF1F856.C6D3EA2F-ON862579D4.00748F1C-862579D4.007A3655@us.ibm.com>
Message-ID: <6fc8e954097d7fd002406b0bc7791cc7@mail.gmail.com>

Should be:

| (CAST LPAREN ) => cast_expr	      // problematic line

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Chris Golledge
> Sent: Monday, April 02, 2012 3:15 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] confounded exceptions on predicate
>
>
> Hi,
>
> Kind of fishing for some suggestions on where to look for the cause of
> this problem.
> Currently I'm working on converting a set of grammar files from ANTLR 2
> to ANTLR 3.
>
> Descrpition:
> >From within Eclipse 3.6.2, using
> 	Java
> 	java version "1.6.0"
> 	Java(TM) SE Runtime Environment (build pwi3260sr10-
> 20111208_01(SR10))
> 	IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Windows 7 x86-32
> jvmwi3260sr10-201112
>
> 	ANTLR IDE- ANTLR Tools
> 	2.1.1.201011141044
>
> 	ANTLR
> 	antlr-3.4-complete.jar
>
> Code snippet:
>
> primary
> 	: (CURSOR LPAREN SELECT) => c=CURSOR^ LPAREN! s=subquery1
> r=RPAREN!
> 	     {$c.setText (SrcAST.getText($c) + "(" + SrcAST.getText($s) +
> ")"
> ) ;
> 	      SrcAST.setSpan ($c, $c, $r);  }
>
>
>   | CAST LPAREN => cast_expr	      // problematic line
> 	| (simple_case_expr) => simple_case_expr
> 	| (searched_case_expr)  => searched_case_expr
> 	//functions with special syntax:
> 	| (trim_function) => trim_function
> 	| (decompose_function) => decompose_function
> 	| (extract_function) => extract_function
>
> 	| (treat_function)	=> treat_function
> 	| (tz_offset_function)	=>	tz_offset_function
> 	| (percentile_functions) => percentile_functions
> 	| (xmlcolattval_function)=> xmlcolattval_function
> 	| (xmlelement_function)=> xmlelement_function
> 	| (xmlforest_function)=> xmlforest_function
> 	| literal
> 	| t=TIMESTAMP^ st=STRING_LITERAL
> 		{ $primary.setText("TIMESTAMP "+SrcAST.getText($st));
> 		  SrcAST.setSpan($primary,$t,$st); }
> 	| d=DATE^ sd=STRING_LITERAL
> 		{ $primary.setText("DATE "+SrcAST.getText($st));
> 		  SrcAST.setSpan($primary,$t,$st); }
> 	| interval_literal
>
> 	| ((NEW)=> NEW)? v=variable_expression
> 	  ->  // build no AST for this alternative
> 	    {$primary = $v;}
> 	| (LPAREN subquery2) =>   l3=LPAREN! su=subquery2 r3=RPAREN!
> 	     { $primary.setText ( "(" + SrcAST.getText($su) + ")" ) ;
> 	       SrcAST.setSpan ($primary, $l3, $r3); }
> 	| expr_list_p
>
> 	;
>
> cast_expr
> 	: c=CAST^ LPAREN! e=expr_or_multiset AS! t=datatype r=RPAREN!
> 	     { $c.setText ( "CAST(" + SrcAST.getText($e) + " AS " +
> SrcAST.getText($t) + ")" ) ;
> 	       SrcAST.setSpan ($c, $c, $r); }
> 	;
>
>
> If the problem line, CAST LPAREN ... , is not commented out, from the
> Eclipse IDE and ANTLRWorks, I get the errors below.  I get other errors
> if I comment it out, but the processing makes it past the point where
> this error occurs.
>
>
>    ANTLR Parser Generator 3.4 Jul 19, 2011 11:35:12.
>    Using project classpath: Yes.
>    Grammar: [snipped]Parser.g
>    java.lang.NoSuchFieldError:
>    org/antlr/tool/GrammarSyntaxMessage.offendingToken
>    	at org.deved.antlride.runtime.AntlrErrorListener.extractToken
>    (AntlrErrorListener.java:108)
>    	at org.deved.antlride.runtime.AntlrErrorListener.report
>    (AntlrErrorListener.java:79)
>    	at org.deved.antlride.runtime.AntlrErrorListener.message
>    (AntlrErrorListener.java:63)
>    	at org.deved.antlride.runtime.AntlrErrorListener.error
>    (AntlrErrorListener.java:53)
>    	at org.antlr.tool.ErrorManager.syntaxError(ErrorManager.java:768)
>    	at
> org.antlr.grammar.v3.ANTLRParser.reportError(ANTLRParser.java:443)
>    	at org.antlr.grammar.v3.ANTLRParser.elementNoOptionSpec
>    (ANTLRParser.java:4909)
>    	at org.antlr.grammar.v3.ANTLRParser.element(ANTLRParser.java:4533)
>    	at org.antlr.grammar.v3.ANTLRParser.alternative
>    (ANTLRParser.java:4120)
>    	at org.antlr.grammar.v3.ANTLRParser.ruleAltList
>    (ANTLRParser.java:3580)
>    	at org.antlr.grammar.v3.ANTLRParser.rule(ANTLRParser.java:2787)
>    	at org.antlr.grammar.v3.ANTLRParser.rules(ANTLRParser.java:2405)
>    	at org.antlr.grammar.v3.ANTLRParser.grammar_(ANTLRParser.java:702)
>    	at org.antlr.tool.Grammar.parseAndBuildAST(Grammar.java:644)
>    	at org.antlr.Tool.getRootGrammar(Tool.java:626)
>    	at org.antlr.Tool.process(Tool.java:459)
>    	at org.deved.antlride.runtime.Tool2.main(Tool2.java:24)
>    BUILD SUCCESSFUL
>    Total time: 1 second
>
>
> This is confusing for a couple of reasons:  the build is reported to be
> successful when it isn't, and the field offendingToken appears to
> actually be a member GrammarSyntaxMessage.
>
> I wasn't getting anywhere trying to solve this with the plugin; so, I
> tried using ANTLRWorks 1.4.3.  This told me a bit more:
>
>    [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error:
> antlr:
>    NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) (
> atom |
>    block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2=
> ebnfSuffix
>    [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
>    ( IMPLIES )? | t3= tree_ )])
>    [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error:
> antlr:
>    NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) (
> atom |
>    block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2=
> ebnfSuffix
>    [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
>    ( IMPLIES )? | t3= tree_ )])
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(0!=29)
>    [16:35:27] error(100): [snipped]Parser.g:0:: syntax error:
> assign.types:
>    NoViableAltException(3@[])
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(3!=28)
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(3!=27)
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(26!=3)
>    [16:35:27] java.lang.ClassCastException:
>    org.antlr.runtime.tree.CommonTree incompatible with
>    org.antlr.tool.GrammarAST
>    	at org.antlr.grammar.v3.DefineGrammarItemsWalker.rewrite
>    (DefineGrammarItemsWalker.java:3463)
>    	at org.antlr.grammar.v3.DefineGrammarItemsWalker.block
>    (DefineGrammarItemsWalker.java:2072)
>    	at org.antlr.grammar.v3.DefineGrammarItemsWalker.rule
>    (DefineGrammarItemsWalker.java:1627)
>    	at org.antlr.grammar.v3.DefineGrammarItemsWalker.rules
>    (DefineGrammarItemsWalker.java:1190)
>    	at org.antlr.grammar.v3.DefineGrammarItemsWalker.grammarSpec
>    (DefineGrammarItemsWalker.java:623)
>    	at
>
> org.antlr.grammar.v3.DefineGrammarItemsWalker.grammar_(DefineGrammarIte
> msWalker.java:275)
>    	at org.antlr.tool.Grammar.defineGrammarSymbols(Grammar.java:748)
>    	at org.antlr.tool.CompositeGrammar.defineGrammarSymbols
>    (CompositeGrammar.java:369)
>    	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:606)
>    	at
>
> org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar
>    (ANTLRGrammarEngineImpl.java:192)
>    	at
>
> org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createParserGramma
> r
>    (ANTLRGrammarEngineImpl.java:225)
>    	at
>    org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars
>    (ANTLRGrammarEngineImpl.java:169)
>    	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze
>    (ANTLRGrammarEngineImpl.java:272)
>    	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze
>    (GrammarEngineImpl.java:325)
>    	at org.antlr.works.grammar.CheckGrammar.run(CheckGrammar.java:70)
>    	at java.lang.Thread.run(Thread.java:736)
>
>    [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error:
> antlr:
>    NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) (
> atom |
>    block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2=
> ebnfSuffix
>    [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
>    ( IMPLIES )? | t3= tree_ )])
>    [16:35:27] error(100): [snipped]Parser.g:3825:17: syntax error:
> antlr:
>    NoViableAltException(72@[722:4: ( ( id ( ASSIGN | PLUS_ASSIGN ) (
> atom |
>    block ) ) (sub= ebnfSuffix[root_0,false] )? | a= atom (sub2=
> ebnfSuffix
>    [$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION | p= SEMPRED
>    ( IMPLIES )? | t3= tree_ )])
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(0!=29)
>    [16:35:27] error(100):[snipped]Parser.g:0:: syntax error:
> assign.types:
>    NoViableAltException(3@[])
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(3!=28)
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(3!=27)
>    [16:35:27] error(100): [snipped]Parser.g:0:1: syntax error:
>    assign.types: MismatchedTreeNodeException(26!=3)
>    [16:35:27] error(10):  internal error: [snipped]Parser.g :
>    java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree
>    incompatible with org.antlr.tool.GrammarAST
>    org.antlr.grammar.v3.DefineGrammarItemsWalker.rewrite
>    (DefineGrammarItemsWalker.java:3463)
>    org.antlr.grammar.v3.DefineGrammarItemsWalker.block
>    (DefineGrammarItemsWalker.java:2072)
>    org.antlr.grammar.v3.DefineGrammarItemsWalker.rule
>    (DefineGrammarItemsWalker.java:1627)
>    org.antlr.grammar.v3.DefineGrammarItemsWalker.rules
>    (DefineGrammarItemsWalker.java:1190)
>    org.antlr.grammar.v3.DefineGrammarItemsWalker.grammarSpec
>    (DefineGrammarItemsWalker.java:623)
>
> org.antlr.grammar.v3.DefineGrammarItemsWalker.grammar_(DefineGrammarIte
> msWalker.java:275)
>    org.antlr.tool.Grammar.defineGrammarSymbols(Grammar.java:748)
>    org.antlr.tool.CompositeGrammar.defineGrammarSymbols
>    (CompositeGrammar.java:369)
>    org.antlr.Tool.process(Tool.java:465)
>
> org.antlr.works.generate.CodeGenerate.generate(CodeGenerate.java:104)
>    org.antlr.works.generate.CodeGenerate.run(CodeGenerate.java:185)
>    java.lang.Thread.run(Thread.java:736)
>
> It is not very clear to me if I need to pursue this as a
> NoViableAltException, a  MismatchedTreeNodeException, or a
> ClassCastException.
>
> I'm looking at the existing code, and I'm not sure I would have handled
> (expression) in the same way, but I don't have time to change
> everything I don't like.
>
> I'm looking at some potential matches in the problem space:
>
> ________________
> Why do I get a ClassCastException when parsing a tree?
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=23232571
> // but this appears to be happening at runtime and mine is a generation
> time problem.
> ________________
> Tree Rewrite Rules Replace Rewrite Actions
>
>
> While you can still use the ^ and ! tree construction operators to
> build trees, v3 introduces an entirely new syntax for Tree construction
> that avoids the special syntax was used in ANTLR 2 actions:
>
>
>
>                                ANTLR 2
> ANTLR 3
>
>
>
>
>  arrayLiteral
> arrayLiteral
>  ????:??? LBRACK! (elementList)?
> RBRACK!                             ????:??? LBRACK (elementList)?
> RBRACK
>  ????????{## = #([ARRAY_LITERAL,
> "ARRAY_LITERAL"],##);}              ????????-> ^(ARRAY_LITERAL
> elementList)
>  ????;
> ??;
>
>
>
>
> http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTL
> R+3
>
> // But, while this style of grammar appears in the first alt, it does
> not appear on the problematic line.
> _____________________
>
> This looks promising, but 722:4 does not have any errors in it
> according to ANTLRWorks, and there should be no relationship between
> the rules for CAST and what is defined there.
> http://www.antlr.org/pipermail/antlr-interest/2011-June/041789.html
>
>
> Any suggestions?
>
> Chris
>
> "Ah, because I have learned something since last week."  - Gandhi
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From golledge at us.ibm.com  Mon Apr  2 17:21:26 2012
From: golledge at us.ibm.com (Chris Golledge)
Date: Mon, 2 Apr 2012 19:21:26 -0500
Subject: [antlr-interest] confounded exceptions on predicate
In-Reply-To: <6fc8e954097d7fd002406b0bc7791cc7@mail.gmail.com>
References: <OF4FF1F856.C6D3EA2F-ON862579D4.00748F1C-862579D4.007A3655@us.ibm.com>
	<6fc8e954097d7fd002406b0bc7791cc7@mail.gmail.com>
Message-ID: <OF4D7E98D4.14860F9A-ON862579D5.0001B302-862579D5.0001F660@us.ibm.com>

Thanks Jim; that was embarrassingly simple.

Chris

"Ah, because I have learned something since last week."  - Gandhi





Sent by:	antlr-interest-bounces at antlr.org



Should be:

| (CAST LPAREN ) => cast_expr		       // problematic line

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Chris Golledge
> Sent: Monday, April 02, 2012 3:15 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] confounded exceptions on predicate




From pnicklas at freenet.de  Tue Apr  3 00:34:35 2012
From: pnicklas at freenet.de (Peter Nicklas)
Date: Tue, 03 Apr 2012 09:34:35 +0200
Subject: [antlr-interest] Mutant Generator
Message-ID: <4F7AA80B.5020205@freenet.de>

Hi everyone!

I'd like to use antlr for writing a mutant generator. There should be 
only one tiny difference between the mutant and the original code, e.g. 
by changing a "public" modifier to "private" etc.

I'm not sure which way would be the best:

#1 creating the AST, changing one node in the AST, creating the new 
source code from that

#2 using a rewriter (TokenRewriteStream etc.)


Things I don't know about that:

#1 How can I create the source code for the new AST ?

#2 Is it possible to change the code only on one location with a 
rewriter? Because I don't want to change the code on every occurrence of 
"public", only one of them should be changed.

Which way would you prefer/is easier/the best/most efficient ? Are there 
solutions for my problems?
Thank you very much.


Peter




From pnicklas at freenet.de  Tue Apr  3 07:07:15 2012
From: pnicklas at freenet.de (Peter Nicklas)
Date: Tue, 03 Apr 2012 16:07:15 +0200
Subject: [antlr-interest] Mutant Generator
In-Reply-To: <CAD3Ud_n+Oki25JCCr-HXt=Y36FsZjwGRzZ+OA2ixRgqrAGb5AA@mail.gmail.com>
References: <4F7AA80B.5020205@freenet.de>
	<CAD3Ud_n+Oki25JCCr-HXt=Y36FsZjwGRzZ+OA2ixRgqrAGb5AA@mail.gmail.com>
Message-ID: <4F7B0413.7020806@freenet.de>

Ok, perhaps my example was too simple.

There are a lot of operators to implement relating to polymorphism, OO, 
inheritance etc.
I think I have to use an AST.

New Example: Deletion/insertion of hiding or overriding variables.

I think you can't do this with a simple RegEx.

Peter



Cal Page wrote:
> use awk or sed.
>
> Using ANTLR is like hunting flies with a hammer.
>
>
> On Tue, Apr 3, 2012 at 3:34 AM, Peter Nicklas <pnicklas at freenet.de 
> <mailto:pnicklas at freenet.de>> wrote:
>
>     Hi everyone!
>
>     I'd like to use antlr for writing a mutant generator. There should be
>     only one tiny difference between the mutant and the original code,
>     e.g.
>     by changing a "public" modifier to "private" etc.
>
>     I'm not sure which way would be the best:
>
>     #1 creating the AST, changing one node in the AST, creating the new
>     source code from that
>
>     #2 using a rewriter (TokenRewriteStream etc.)
>
>
>     Things I don't know about that:
>
>     #1 How can I create the source code for the new AST ?
>
>     #2 Is it possible to change the code only on one location with a
>     rewriter? Because I don't want to change the code on every
>     occurrence of
>     "public", only one of them should be changed.
>
>     Which way would you prefer/is easier/the best/most efficient ? Are
>     there
>     solutions for my problems?
>     Thank you very much.
>
>
>     Peter
>
>
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From golledge at us.ibm.com  Tue Apr  3 08:53:10 2012
From: golledge at us.ibm.com (Chris Golledge)
Date: Tue, 3 Apr 2012 10:53:10 -0500
Subject: [antlr-interest] TokenStreamSelector replacement pattern for ANTLR2
	to ANTLR3
Message-ID: <OF4817A5AE.A9274CE1-ON862579D5.0055A25A-862579D5.00574428@us.ibm.com>


Hi,

I'm thinking that an appropriate way to replace this

	http://www.antlr2.org/javadoc/antlr/TokenStreamSelector.html

 is with an delegates.

	http://www.antlr.org/blog/antlr3/reuse.tml

Any better/other ideas?

Chris



"Ah, because I have learned something since last week."  - Gandhi


From ivanhoeabrahams at gmail.com  Wed Apr  4 00:14:48 2012
From: ivanhoeabrahams at gmail.com (Ivanhoe Abrahams)
Date: Wed, 4 Apr 2012 09:14:48 +0200
Subject: [antlr-interest] Starting with antlr V4
Message-ID: <CAFqxYXr=BkmtdwHoM5fgZ87B2ciqxM3nK387yHaWrXqBD4+VKg@mail.gmail.com>

Hi All

I would like to start looking at antlr v4.
I see that I can get hold of the source for antlr v4 from GitHub.

What I would like to know is if I can use antlrworks when running against
V4? or Is there a different version of antlrworks that one can use when
running against V4?
How do others make this transition... do you use antlrworks?

Thanks in advance

Regards
Ivanhoe

From jimi at temporal-wave.com  Wed Apr  4 11:56:37 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 Apr 2012 11:56:37 -0700
Subject: [antlr-interest] [antlr-dev] C and C++ targets in ANTLR
In-Reply-To: <1709C8E8-E0AA-45DC-9994-5AF063322594@lischke-online.de>
References: <F2C10CD7-5DCF-4BDA-8786-6D4FC0C584B9@lischke-online.de>
	<343cf7d77f438b4dc79d4cda59720c48@mail.gmail.com>
	<1709C8E8-E0AA-45DC-9994-5AF063322594@lischke-online.de>
Message-ID: <3448c842db067d909c295861f3be1e75@mail.gmail.com>

What is happening is that your grammar is badly organized, at least in some
areas and this is causing the production of some massive DFAs. In order to
generate code that is more efficient in C, the defaults for tables vs
switch statements and related settings are different for C than for the
other targets. It is this that is causing ANTLR to fail. Look at the ?X
options and specifically set them to the defaults or perhaps slightly
higher than the defaults. The generated code is then so large that it runs
out of memory producing it.



However, this still means that your grammar needs to be tweaked as
something in there is ambiguous enough to cause a huge DFA, which under the
differing ?X defaults of the C target looks like it is not actually just
huge, but never ending. When you generate the java code, look at the
generated code and find out which of the DFAs are really big ? then find
out where they are used and that will tell you the rules you need to look
at.



In your grammar, you have a lot of backtrack and memoize options. This is a
clue to the fact that your grammar is in need of some restructure (perhaps
quite a lot), and also will be unable to report errors accurately. The
other place to look might be the expression tree. Take out the backtracking
options one at a time and fix the resulting ambiguities and I bet that the
issue goes away.



Jim



PS: Please use the mailing list rather than emailing me directly as then
there are searchable answers for everyone.



*From:* Mike Lischke [mailto:mike at lischke-online.de]
*Sent:* Wednesday, April 04, 2012 2:09 AM
*To:* Jim Idle
*Subject:* Re: [antlr-dev] C and C++ targets in ANTLR





Hey Jim,



thanks a lot for taking care to answer.



Without the grammar, or a stack trace or some indication of whether you
mean that the 3.4 tool crashes when generating C, there is nothing I can do
to help you here.



You are right, there wasn't much info. I first wanted to check if there's a
simple measure like a setting or log or something like that, that could
help me without posting lots of text. In fact I'm using
the antlr-3.4-complete.jar (OSX that is):



java -jar antlr-3.4-complete.jar MySQL51Parser.g3 -o mysql.parser



no special VM memory assignment, as you can see. I tried 8GB and the jar
happily eats it, but this only delays the stack overflow.



The grammar I used is here: http://www.pasteall.org/30674 and the stack
trace is:



Exception in thread "main" java.lang.OutOfMemoryError: Java heap space

        at java.util.AbstractList.listIterator(AbstractList.java:315)

        at java.util.AbstractList.listIterator(AbstractList.java:284)

        at org.antlr.misc.IntervalSet.add(IntervalSet.java:107)

        at org.antlr.misc.IntervalSet.add(IntervalSet.java:96)

        at org.antlr.misc.IntervalSet.add(IntervalSet.java:85)

        at org.antlr.misc.IntervalSet.of(IntervalSet.java:70)

        at org.antlr.analysis.Label.getSet(Label.java:220)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:116)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.genFixedLookaheadDecision(ACyclicDFACodeGenerator.java:47)

        at
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:640)

        at
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)

        at
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)

        at
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)

        at
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1441)

        at
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:477)

        at
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)

        at org.antlr.Tool.generateRecognizer(Tool.java:655)

        at org.antlr.Tool.process(Tool.java:468)

        at org.antlr.Tool.main(Tool.java:93)





I imagine that there is something wrong with the grammar that happens to be
OK with the other targets and is not in the C target code generating
templates (which were changed between 3.3 and 3.4).



Which is what me leaves me so perplex. How can it crash only for certain
targets, but not in others? The parsing of the grammar is the same, no?



However you will need to experiment commenting out rules until you find the
rule that causes ANTLR to break. Also, did you try 3.3 instead of 3.4?



Yes, that seems to be the only option now ... :-( If there were only a log
that I could scan to see what happened last before things went havoc.



I also tried 3.3 and the same crash happens just with a partially different
stack:



Exception in thread "main" java.lang.OutOfMemoryError: Java heap space

        at java.util.HashMap.addEntry(HashMap.java:753)

        at java.util.HashMap.put(HashMap.java:385)

        at
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.java:654)

        at
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java:508)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:84)

        at
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:144)

...



What would help here to fix this problem is an indication which rule is
currently being parsed, which would narrow down the search.





I am sorry but I can?t work out what you mean by ?ANTLR.works gives me
green on the grammar (but doesn't generate the compiler either, however it
also has problems with the java target, so I better leave it out for tasks
other than editing and syntax checking).? In the first paragraph you said
that the Java target works, but here you seem to be saying that it does
not, or perhaps just does not with ANTLR Works?



ANTLR Works is a great tool and I was happy to have it for syntax checks,
refactoring etc. But unfortunately I couldn't generate the parser with it
using the Java target (even tho AW did not show any syntax error). It just
hung while on the command line the generation was done in like 30 secs
(similar to the generation time for java and c# on a Windows box). Also it
just did nothing when I tried to generate the parser when I left the line
192 (http://www.pasteall.org/30674) uncommented. No reaction, no message,
simply nothing. Really took me a while to figure out this line was the
culprit. What adds to the trouble is that once ANTLR Works had this problem
not even fixing the line made it work. I had to restart the tool and could
then run the next attempt. Took me quite some time as you can imagine.
Another problem is that with a larger grammar the UI locks up for a few
seconds with every keypress if there are changes to multiline comments
(which I used to find the offending line). But this is a different story
and I can work around that. My main concern is really to find the problem
in the grammar that makes ANTLR crash.



Thanks again for trying to help!



Mike
-- 
www.soft-gems.net

From parrt at cs.usfca.edu  Wed Apr  4 16:29:47 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 4 Apr 2012 16:29:47 -0700
Subject: [antlr-interest] Starting with antlr V4
In-Reply-To: <CAFqxYXr=BkmtdwHoM5fgZ87B2ciqxM3nK387yHaWrXqBD4+VKg@mail.gmail.com>
References: <CAFqxYXr=BkmtdwHoM5fgZ87B2ciqxM3nK387yHaWrXqBD4+VKg@mail.gmail.com>
Message-ID: <CF27D3A0-B596-4A4A-9D87-62DDCEFD96B2@cs.usfca.edu>

you can use ANTLRWorks2,  find it on the v4 wiki, but it only does syntax highlighting and syntax diagram now. You can run v4 on the command line and then use the built-in TestRig to show the parse tree and all I can stuff.
Ter

On Apr 4, 2012, at 12:14 AM, Ivanhoe Abrahams wrote:

> Hi All
> 
> I would like to start looking at antlr v4.
> I see that I can get hold of the source for antlr v4 from GitHub.
> 
> What I would like to know is if I can use antlrworks when running against
> V4? or Is there a different version of antlrworks that one can use when
> running against V4?
> How do others make this transition... do you use antlrworks?
> 
> Thanks in advance
> 
> Regards
> Ivanhoe
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ludwig.maes at gmail.com  Wed Apr  4 18:06:27 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Thu, 5 Apr 2012 03:06:27 +0200
Subject: [antlr-interest] C++ grammar,
	troubleshooting mutually left recursive rules
Message-ID: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>

The grammar in attachment contains the following 3 rules which are
supposedly mutually left recursive:


decl_specifier_seq	: decl_specifier attribute_specifier_seq? // C++0x:
			| decl_specifier decl_specifier_seq // C++0x:
			;


type_specifier_seq	: type_specifier attribute_specifier_seq? // C++0x:
			| type_specifier type_specifier_seq
			;


trailing_type_specifier_seq	: trailing_type_specifier
attribute_specifier_seq? // C++0x:
				| trailing_type_specifier trailing_type_specifier_seq // C++0x:
				;

However I fail to find the mutual left-recursion ( have been
navigating through usages and trying to find how one of these three
can call one of the other two but failed to find such a path). I
believe it is something about the way they are defined, since all 3
share the same structure... what am I doing wrong?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cpp.g
Type: application/octet-stream
Size: 33758 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120405/e8d4b230/attachment.obj 

From jbb at acm.org  Wed Apr  4 20:06:35 2012
From: jbb at acm.org (John B. Brodie)
Date: Wed, 04 Apr 2012 23:06:35 -0400
Subject: [antlr-interest] C++ grammar,
 troubleshooting mutually left recursive rules
In-Reply-To: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>
References: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>
Message-ID: <4F7D0C3B.2000305@acm.org>

Greetings!

On 04/04/2012 09:06 PM, Ludwig Maes wrote:
> The grammar in attachment contains the following 3 rules which are
> supposedly mutually left recursive:
>
>
> decl_specifier_seq	: decl_specifier attribute_specifier_seq? // C++0x:
> 			| decl_specifier decl_specifier_seq // C++0x:
> 			;
>
>
> type_specifier_seq	: type_specifier attribute_specifier_seq? // C++0x:
> 			| type_specifier type_specifier_seq
> 			;
>
>
> trailing_type_specifier_seq	: trailing_type_specifier
> attribute_specifier_seq? // C++0x:
> 				| trailing_type_specifier trailing_type_specifier_seq // C++0x:
> 				;
>
> However I fail to find the mutual left-recursion ( have been
> navigating through usages and trying to find how one of these three
> can call one of the other two but failed to find such a path). I
> believe it is something about the way they are defined, since all 3
> share the same structure... what am I doing wrong?
>

1) the leftmost element of decl_specifier_seq is decl_specifier

2) the second alternative of decl_specifier is type_specifier

3) the leftmost element of type_specifier_seq is type_specifier

4) therefore decl_specifier_seq and type_specifier_seq are mutually left 
recursive

5) the leftmost element of trailing_type_specifier_seq is 
trailing_type_specifier

6) the first alternative of type_specifier is trailing_type_specifier

7) therefore trailing_type_specifier_seq is mutually left recursive with 
both decl_specifier_seq and type_specifier_seq



Hope this helps!
    -jbb


From peter.crowther at melandra.com  Thu Apr  5 00:57:47 2012
From: peter.crowther at melandra.com (Peter Crowther)
Date: Thu, 5 Apr 2012 08:57:47 +0100
Subject: [antlr-interest] v3: How could I construct a parser for an "active"
 language such as ASP.Net, PHP or (in my case) Active RTF?
Message-ID: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>

I've taken over a product that produces reports using RTF (Rich Text
Format) with embedded codes where processing is required.  We need to make
some enhancements to it, and I'd like to use Antlr to parse these files -
the enhancements will be a lot easier with a sane parse tree.

My key problem is that parts of the codes might appear in the body of the
RTF text.  To take a terse example that demonstrates the problem:

*/bs row/*For the row */*rowid:int/*: */*num:roundu/* / */*denom:roundu/* =
*/*result:roundu//bf/*

The "active" parts are /**var*:*format*/, /bs *name*/ and /bf/.  Everything
else can be arbitrary text or RTF directives.  However, that "everything
else" can include content like /, :, and text that matches the rules for
identifiers.

My ideal would be to somehow construct a lexer rule that lexes an
"EVERYTHINGELSE" token including slashes, colons, identifiers and the like
but that stops just before it sees /*, /bs, or /bf, and then to somehow
enable the more complex parsing of identifiers and the like inside the
active part of the content.  However my Google-fu is failing me and, though
I'm sure it's possible, I've not yet managed to find a way of solving this
problem using Antlr.

Can any of the list members point me towards a possible solution, or an
approach within Antlr that could help?

Thanks in advance,

- Peter
--
Peter Crowther, Director, Melandra Limited

From researcher0x00 at gmail.com  Thu Apr  5 03:09:42 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 5 Apr 2012 06:09:42 -0400
Subject: [antlr-interest] v3: How could I construct a parser for an
 "active" language such as ASP.Net, PHP or (in my case) Active RTF?
In-Reply-To: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>
References: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>
Message-ID: <CAN45N10MCNG=eB9-7T_Us_h1V6Cf9CPxUPa6bB5qiZ-2q_uoWQ@mail.gmail.com>

Just my thoughts or thinking out loud on this.

I played around with RTF a few years ago because I wanted to make an
editor/diff tool that could add tags to change the properties of the text,
i.e. color, underlining, etc., something like HTML. If I remember
correctly, one of the interesting aspects of RTF was that it was designed
to be read and processed sequentially in one pass. If the tags were done
correctly, you could start at a marked boundary and continue processing,
even in the middle of the stream. This was highly advantageous when working
with long documents of hundreds of pages or more.

>From the Rich Text Format (RTF) Specification Version 1.9.1

"A sample RTF parsing reader program is given in Appendix A: Sample RTF
Reader Application. This sample RTF reader is designed for use in
conjunction with this document to assist those interested in developing
their own RTF readers. The sample RTF reader is not a for-sale product, and
Microsoft does not provide technical support or any other kind of support
for the sample RTF parsing reader code or this document. "

I would seriously read the RTF specs first and truly understand how RTF
works before using ANTLR with it. You may be walking through a door you
wish you never opened.

Do not take this as implying ANTLR is terrible. It is merely that you
should use the right tool for the right job and here ANTLR is not the right
tool, the tool you need is outlined in the RTF spec.

From peter.crowther at melandra.com  Thu Apr  5 04:40:49 2012
From: peter.crowther at melandra.com (Peter Crowther)
Date: Thu, 5 Apr 2012 12:40:49 +0100
Subject: [antlr-interest] v3: How could I construct a parser for an
 "active" language such as ASP.Net, PHP or (in my case) Active RTF?
In-Reply-To: <CAN45N10MCNG=eB9-7T_Us_h1V6Cf9CPxUPa6bB5qiZ-2q_uoWQ@mail.gmail.com>
References: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>
	<CAN45N10MCNG=eB9-7T_Us_h1V6Cf9CPxUPa6bB5qiZ-2q_uoWQ@mail.gmail.com>
Message-ID: <CALhdq6s=ShWMtCCnNcTOrqvBWXzYVnBrTz-4Yvc5ThBN9g6kXw@mail.gmail.com>

Thanks for the input!  I read the RTF spec some time ago, believe I know
how RTF works, and (luckily) I'm doing a different job.

This application doesn't need to understand RTF. Other than the few
commands I outline (that aren't RTF tags - note the forward slash not
backslash), the RTF is presently opaque to the application.  It's just a
bunch of bytes that need to be output in that order until a processing
instruction is encountered.  I believe some parser other than the RTF
parser is appropriate for the job I wish to do with these processing
instructions :-).

Cheers,

- Peter

On 5 April 2012 11:09, Eric <researcher0x00 at gmail.com> wrote:

> Just my thoughts or thinking out loud on this.
>
> I played around with RTF a few years ago because I wanted to make an
> editor/diff tool that could add tags to change the properties of the text,
> i.e. color, underlining, etc., something like HTML. If I remember
> correctly, one of the interesting aspects of RTF was that it was designed
> to be read and processed sequentially in one pass. If the tags were done
> correctly, you could start at a marked boundary and continue processing,
> even in the middle of the stream. This was highly advantageous when working
> with long documents of hundreds of pages or more.
>
> From the Rich Text Format (RTF) Specification Version 1.9.1
>
> "A sample RTF parsing reader program is given in Appendix A: Sample RTF
> Reader Application. This sample RTF reader is designed for use in
> conjunction with this document to assist those interested in developing
> their own RTF readers. The sample RTF reader is not a for-sale product, and
> Microsoft does not provide technical support or any other kind of support
> for the sample RTF parsing reader code or this document. "
>
> I would seriously read the RTF specs first and truly understand how RTF
> works before using ANTLR with it. You may be walking through a door you
> wish you never opened.
>
> Do not take this as implying ANTLR is terrible. It is merely that you
> should use the right tool for the right job and here ANTLR is not the right
> tool, the tool you need is outlined in the RTF spec.
>

From kresimir.tonkovic at multimodus.hr  Thu Apr  5 05:59:14 2012
From: kresimir.tonkovic at multimodus.hr (=?UTF-8?Q?Kre=C5=A1imir_Tonkovi=C4=87?=)
Date: Thu, 5 Apr 2012 14:59:14 +0200
Subject: [antlr-interest] rewrite rule for optional root insertion?
Message-ID: <CAArjk6rDmUq8tTbKs6v8aqtCTT3U_uoy3c24hPNHutZJw7jUGg@mail.gmail.com>

Hi!

I have many rules like this in my grammar:

plus_minus_exp :
    mult_div_exp ('+'^ | '-'^ mult_div_exp)?
;

which produces desired trees:
1+2 -> ^(+ 1 2)
1+2*3 ->^(+ 1 ^(* 2 3))
2*3 -> ^(* 2 3)
for correct operator precedence and no superfluous nodes.

However, I have some cases where tree operators are not enough. I need more
control that rewrite rules provide. I have tried with syntactic predicates,
but I find they hurt the performance of my parser and I would like to avoid
that.

How would I rewrite above rule with rewrite rules and no syntactic
predicates?

Regards,
-- 
Kre?imir Tonkovi?
Multimodus d.o.o.

From researcher0x00 at gmail.com  Thu Apr  5 07:09:47 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 5 Apr 2012 10:09:47 -0400
Subject: [antlr-interest] v3: How could I construct a parser for an
 "active" language such as ASP.Net, PHP or (in my case) Active RTF?
In-Reply-To: <CALhdq6s=ShWMtCCnNcTOrqvBWXzYVnBrTz-4Yvc5ThBN9g6kXw@mail.gmail.com>
References: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>
	<CAN45N10MCNG=eB9-7T_Us_h1V6Cf9CPxUPa6bB5qiZ-2q_uoWQ@mail.gmail.com>
	<CALhdq6s=ShWMtCCnNcTOrqvBWXzYVnBrTz-4Yvc5ThBN9g6kXw@mail.gmail.com>
Message-ID: <CAN45N1397+jHF9tK1Xx0mukYHmzAUZY+JBx_qzqytMe=GbFTPA@mail.gmail.com>

I do not really understand your question but I will give you some ideas
that come to mind. As I am busy, I won't be able to elaborate past giving
these ideas.

1. Check out combined grammars. i.e. A grammar with an embedded grammar,
e.g. JavaScript inside of HTML. I believe the examples from the downloads
page has one.

2. Token stream rewriting between the lexer and the parser. ANTLR includes
methods to help do this; they are noted in the API.

On Thu, Apr 5, 2012 at 7:40 AM, Peter Crowther
<peter.crowther at melandra.com>wrote:

> Thanks for the input!  I read the RTF spec some time ago, believe I know
> how RTF works, and (luckily) I'm doing a different job.
>
> This application doesn't need to understand RTF. Other than the few
> commands I outline (that aren't RTF tags - note the forward slash not
> backslash), the RTF is presently opaque to the application.  It's just a
> bunch of bytes that need to be output in that order until a processing
> instruction is encountered.  I believe some parser other than the RTF
> parser is appropriate for the job I wish to do with these processing
> instructions :-).
>
> Cheers,
>
> - Peter
>
>
> On 5 April 2012 11:09, Eric <researcher0x00 at gmail.com> wrote:
>
>> Just my thoughts or thinking out loud on this.
>>
>> I played around with RTF a few years ago because I wanted to make an
>> editor/diff tool that could add tags to change the properties of the text,
>> i.e. color, underlining, etc., something like HTML. If I remember
>> correctly, one of the interesting aspects of RTF was that it was designed
>> to be read and processed sequentially in one pass. If the tags were done
>> correctly, you could start at a marked boundary and continue processing,
>> even in the middle of the stream. This was highly advantageous when working
>> with long documents of hundreds of pages or more.
>>
>> From the Rich Text Format (RTF) Specification Version 1.9.1
>>
>> "A sample RTF parsing reader program is given in Appendix A: Sample RTF
>> Reader Application. This sample RTF reader is designed for use in
>> conjunction with this document to assist those interested in developing
>> their own RTF readers. The sample RTF reader is not a for-sale product, and
>> Microsoft does not provide technical support or any other kind of support
>> for the sample RTF parsing reader code or this document. "
>>
>> I would seriously read the RTF specs first and truly understand how RTF
>> works before using ANTLR with it. You may be walking through a door you
>> wish you never opened.
>>
>> Do not take this as implying ANTLR is terrible. It is merely that you
>> should use the right tool for the right job and here ANTLR is not the right
>> tool, the tool you need is outlined in the RTF spec.
>>
>
>

From peter.crowther at melandra.com  Thu Apr  5 07:58:05 2012
From: peter.crowther at melandra.com (Peter Crowther)
Date: Thu, 5 Apr 2012 15:58:05 +0100
Subject: [antlr-interest] v3: How could I construct a parser for an
 "active" language such as ASP.Net, PHP or (in my case) Active RTF?
In-Reply-To: <CAN45N1397+jHF9tK1Xx0mukYHmzAUZY+JBx_qzqytMe=GbFTPA@mail.gmail.com>
References: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>
	<CAN45N10MCNG=eB9-7T_Us_h1V6Cf9CPxUPa6bB5qiZ-2q_uoWQ@mail.gmail.com>
	<CALhdq6s=ShWMtCCnNcTOrqvBWXzYVnBrTz-4Yvc5ThBN9g6kXw@mail.gmail.com>
	<CAN45N1397+jHF9tK1Xx0mukYHmzAUZY+JBx_qzqytMe=GbFTPA@mail.gmail.com>
Message-ID: <CALhdq6t_bBjOkccm1qO9KCeK=SqU0gV7h12-grdnWfxCbmW3tg@mail.gmail.com>

Aha!  Island grammars!  Thank you - that's the pointer I needed.

- Peter

On 5 April 2012 15:09, Eric <researcher0x00 at gmail.com> wrote:

> I do not really understand your question but I will give you some ideas
> that come to mind. As I am busy, I won't be able to elaborate past giving
> these ideas.
>
> 1. Check out combined grammars. i.e. A grammar with an embedded grammar,
> e.g. JavaScript inside of HTML. I believe the examples from the downloads
> page has one.
>
> 2. Token stream rewriting between the lexer and the parser. ANTLR includes
> methods to help do this; they are noted in the API.
>
> On Thu, Apr 5, 2012 at 7:40 AM, Peter Crowther <
> peter.crowther at melandra.com> wrote:
>
>> Thanks for the input!  I read the RTF spec some time ago, believe I know
>> how RTF works, and (luckily) I'm doing a different job.
>>
>> This application doesn't need to understand RTF. Other than the few
>> commands I outline (that aren't RTF tags - note the forward slash not
>> backslash), the RTF is presently opaque to the application.  It's just a
>> bunch of bytes that need to be output in that order until a processing
>> instruction is encountered.  I believe some parser other than the RTF
>> parser is appropriate for the job I wish to do with these processing
>> instructions :-).
>>
>> Cheers,
>>
>> - Peter
>>
>>
>> On 5 April 2012 11:09, Eric <researcher0x00 at gmail.com> wrote:
>>
>>> Just my thoughts or thinking out loud on this.
>>>
>>> I played around with RTF a few years ago because I wanted to make an
>>> editor/diff tool that could add tags to change the properties of the text,
>>> i.e. color, underlining, etc., something like HTML. If I remember
>>> correctly, one of the interesting aspects of RTF was that it was designed
>>> to be read and processed sequentially in one pass. If the tags were done
>>> correctly, you could start at a marked boundary and continue processing,
>>> even in the middle of the stream. This was highly advantageous when working
>>> with long documents of hundreds of pages or more.
>>>
>>> From the Rich Text Format (RTF) Specification Version 1.9.1
>>>
>>> "A sample RTF parsing reader program is given in Appendix A: Sample RTF
>>> Reader Application. This sample RTF reader is designed for use in
>>> conjunction with this document to assist those interested in developing
>>> their own RTF readers. The sample RTF reader is not a for-sale product, and
>>> Microsoft does not provide technical support or any other kind of support
>>> for the sample RTF parsing reader code or this document. "
>>>
>>> I would seriously read the RTF specs first and truly understand how RTF
>>> works before using ANTLR with it. You may be walking through a door you
>>> wish you never opened.
>>>
>>> Do not take this as implying ANTLR is terrible. It is merely that you
>>> should use the right tool for the right job and here ANTLR is not the right
>>> tool, the tool you need is outlined in the RTF spec.
>>>
>>
>>
>

From golledge at us.ibm.com  Thu Apr  5 09:05:14 2012
From: golledge at us.ibm.com (Chris Golledge)
Date: Thu, 5 Apr 2012 11:05:14 -0500
Subject: [antlr-interest] TokenStreamSelector replacement pattern for
 ANTLR2	to ANTLR3
In-Reply-To: <OF4817A5AE.A9274CE1-ON862579D5.0055A25A-862579D5.00574428@us.ibm.com>
References: <OF4817A5AE.A9274CE1-ON862579D5.0055A25A-862579D5.00574428@us.ibm.com>
Message-ID: <OF2B15329A.D0483D18-ON862579D7.0057CBD4-862579D7.00585F02@us.ibm.com>

FWIW,

The answer, I'm pretty sure, is the best fit replacement is to use
org.antlr.runtime.tree.CommonTreeNodeStream, and replace the stream names
(string) in the push() calls with the names replace with ints, set to
values above 1.

Can't tell for sure because I've hit the problem with statics being larger
than 64K in my parser, and I have not figured a way past that yet.

Chris




From:	Chris Golledge/Lenexa/IBM at IBMUS
To:	antlr-interest at antlr.org
Date:	04/03/2012 10:56 AM
Subject:	[antlr-interest] TokenStreamSelector replacement pattern for
            ANTLR2	to ANTLR3
Sent by:	antlr-interest-bounces at antlr.org




Hi,

I'm thinking that an appropriate way to replace this

		 http://www.antlr2.org/javadoc/antlr/TokenStreamSelector.html

 is with an delegates.

		 http://www.antlr.org/blog/antlr3/reuse.tml

Any better/other ideas?

Chris



"Ah, because I have learned something since last week."  - Gandhi


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From jbb at acm.org  Thu Apr  5 15:25:08 2012
From: jbb at acm.org (John B. Brodie)
Date: Thu, 05 Apr 2012 18:25:08 -0400
Subject: [antlr-interest] rewrite rule for optional root insertion?
In-Reply-To: <CAArjk6rDmUq8tTbKs6v8aqtCTT3U_uoy3c24hPNHutZJw7jUGg@mail.gmail.com>
References: <CAArjk6rDmUq8tTbKs6v8aqtCTT3U_uoy3c24hPNHutZJw7jUGg@mail.gmail.com>
Message-ID: <4F7E1BC4.80304@acm.org>

Greetings!

On 04/05/2012 08:59 AM, Kre?imir Tonkovi? wrote:
> Hi!
>
> I have many rules like this in my grammar:
>
> plus_minus_exp :
>      mult_div_exp ('+'^ | '-'^ mult_div_exp)?
> ;
>
> which produces desired trees:
> 1+2 ->  ^(+ 1 2)
> 1+2*3 ->^(+ 1 ^(* 2 3))
> 2*3 ->  ^(* 2 3)
> for correct operator precedence and no superfluous nodes.
>
> However, I have some cases where tree operators are not enough. I need more
> control that rewrite rules provide. I have tried with syntactic predicates,
> but I find they hurt the performance of my parser and I would like to avoid
> that.
>
> How would I rewrite above rule with rewrite rules and no syntactic
> predicates?
>
> Regards,

Off the top of my head. Untested. Your Mileage May Vary.

pme :
    ( mde -> mde ) // init pme's tree result
       ( ( (o='+' | o='-') mde ) -> ^($o pme mde) )? // reset the result 
using prior
   ;


sorry for the abbreviations.

note that the "o=" stuff only works because both alternative assignments 
are tokens.

this is the general idea, hope it gets you going...
    -jbb



From antlr at mirality.co.nz  Fri Apr  6 06:24:30 2012
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 07 Apr 2012 01:24:30 +1200
Subject: [antlr-interest] v3: How could I construct a parser for an
 "active" language such as ASP.Net, PHP or (in my case) Active RTF?
In-Reply-To: <CALhdq6t_bBjOkccm1qO9KCeK=SqU0gV7h12-grdnWfxCbmW3tg@mail.g
	mail.com>
References: <CALhdq6sMhYbr8MhYkgvncoq_T9RCYySzk9uzkDfraVgos_6CfQ@mail.gmail.com>
	<CAN45N10MCNG=eB9-7T_Us_h1V6Cf9CPxUPa6bB5qiZ-2q_uoWQ@mail.gmail.com>
	<CALhdq6s=ShWMtCCnNcTOrqvBWXzYVnBrTz-4Yvc5ThBN9g6kXw@mail.gmail.com>
	<CAN45N1397+jHF9tK1Xx0mukYHmzAUZY+JBx_qzqytMe=GbFTPA@mail.gmail.com>
	<CALhdq6t_bBjOkccm1qO9KCeK=SqU0gV7h12-grdnWfxCbmW3tg@mail.gmail.com>
Message-ID: <20120406132447.721BD3418498@www.antlr.org>

At 02:58 6/04/2012, Peter Crowther wrote:
 >Aha!  Island grammars!  Thank you - that's the pointer I needed.

The other thing you might want to read up on is a filter lexer -- 
those are intended to cherry-pick interesting tokens from a larger 
stream.

-- 
Gavin Lambert, Mirality Systems
<http://www.mirality.co.nz/>
<http://lambert.geek.nz/>
----
Anyone who goes to a psychiatrist ought to have their head 
examined.

Few women admit their age.  Few men act theirs.


From kresimir.tonkovic at multimodus.hr  Fri Apr  6 07:35:29 2012
From: kresimir.tonkovic at multimodus.hr (=?UTF-8?Q?Kre=C5=A1imir_Tonkovi=C4=87?=)
Date: Fri, 6 Apr 2012 16:35:29 +0200
Subject: [antlr-interest] rewrite rule for optional root insertion?
In-Reply-To: <4F7E1BC4.80304@acm.org>
References: <CAArjk6rDmUq8tTbKs6v8aqtCTT3U_uoy3c24hPNHutZJw7jUGg@mail.gmail.com>
	<4F7E1BC4.80304@acm.org>
Message-ID: <CAArjk6rvnvVfN_QA4pFvZ=WKBTeQfubxX6z8jkeGNZRWg2VB5Q@mail.gmail.com>

On Fri, Apr 6, 2012 at 12:25 AM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
>
>
> On 04/05/2012 08:59 AM, Kre?imir Tonkovi? wrote:
>
>> Hi!
>>
>> I have many rules like this in my grammar:
>>
>> plus_minus_exp :
>>     mult_div_exp ('+'^ | '-'^ mult_div_exp)?
>> ;
>>
>> which produces desired trees:
>> 1+2 ->  ^(+ 1 2)
>> 1+2*3 ->^(+ 1 ^(* 2 3))
>> 2*3 ->  ^(* 2 3)
>> for correct operator precedence and no superfluous nodes.
>>
>> However, I have some cases where tree operators are not enough. I need
>> more
>> control that rewrite rules provide. I have tried with syntactic
>> predicates,
>> but I find they hurt the performance of my parser and I would like to
>> avoid
>> that.
>>
>> How would I rewrite above rule with rewrite rules and no syntactic
>> predicates?
>>
>> Regards,
>>
>
> Off the top of my head. Untested. Your Mileage May Vary.
>
> pme :
>   ( mde -> mde ) // init pme's tree result
>      ( ( (o='+' | o='-') mde ) -> ^($o pme mde) )? // reset the result
> using prior
>  ;
>
>
> sorry for the abbreviations.
>
> note that the "o=" stuff only works because both alternative assignments
> are tokens.
>
> this is the general idea, hope it gets you going...
>   -jbb
>

Thanks, that did the trick.

Is this covered in the ANTLR reference guide book?
-- 
Kre?imir Tonkovi?
Multimodus d.o.o.

From ludwig.maes at gmail.com  Fri Apr  6 13:10:30 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Fri, 6 Apr 2012 22:10:30 +0200
Subject: [antlr-interest] C++ grammar,
 troubleshooting mutually left recursive rules
In-Reply-To: <4F7D0C3B.2000305@acm.org>
References: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>
	<4F7D0C3B.2000305@acm.org>
Message-ID: <CAJ8SgHmbrU0xonpJ3d+FNYB8jN5mKeLYdytd6_gY+FLCdmR4Mw@mail.gmail.com>

Hello, thanks for helping me out

My misunderstanding was that I thought recursion meant (in)directly
calling itself (of which I could not find a cycle). If I understand
correctly, you point out that "mutually left-recursive" actually means
that the call trees of the 3 functions intersect. Why is that not
allowed? it would seem to imply every rule may only be usaged in just
one other rule?

I.e. : if I define a rule called digit, I can use/call this rule in
other rules. Why would that be allowed but not what we have here be
allowed?

Perhaps there is a real recursion but when I draw the directed graph
of calls in the steps you mention I get an acyclic graph...

I must be misunderstanding something

On 5 April 2012 05:06, John B. Brodie <jbb at acm.org> wrote:
> Greetings!
>
>
> On 04/04/2012 09:06 PM, Ludwig Maes wrote:
>>
>> The grammar in attachment contains the following 3 rules which are
>> supposedly mutually left recursive:
>>
>>
>> decl_specifier_seq ? ? ?: decl_specifier attribute_specifier_seq? //
>> C++0x:
>> ? ? ? ? ? ? ? ? ? ? ? ?| decl_specifier decl_specifier_seq // C++0x:
>> ? ? ? ? ? ? ? ? ? ? ? ?;
>>
>>
>> type_specifier_seq ? ? ?: type_specifier attribute_specifier_seq? //
>> C++0x:
>> ? ? ? ? ? ? ? ? ? ? ? ?| type_specifier type_specifier_seq
>> ? ? ? ? ? ? ? ? ? ? ? ?;
>>
>>
>> trailing_type_specifier_seq ? ? : trailing_type_specifier
>> attribute_specifier_seq? // C++0x:
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?| trailing_type_specifier
>> trailing_type_specifier_seq // C++0x:
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?;
>>
>> However I fail to find the mutual left-recursion ( have been
>> navigating through usages and trying to find how one of these three
>> can call one of the other two but failed to find such a path). I
>> believe it is something about the way they are defined, since all 3
>> share the same structure... what am I doing wrong?
>>
>
> 1) the leftmost element of decl_specifier_seq is decl_specifier
>
> 2) the second alternative of decl_specifier is type_specifier
>
> 3) the leftmost element of type_specifier_seq is type_specifier
>
> 4) therefore decl_specifier_seq and type_specifier_seq are mutually left
> recursive
>
> 5) the leftmost element of trailing_type_specifier_seq is
> trailing_type_specifier
>
> 6) the first alternative of type_specifier is trailing_type_specifier
>
> 7) therefore trailing_type_specifier_seq is mutually left recursive with
> both decl_specifier_seq and type_specifier_seq
>
>
>
> Hope this helps!
> ? -jbb
>

From rprememail at yahoo.com  Fri Apr  6 15:20:51 2012
From: rprememail at yahoo.com (Premkumar)
Date: Fri, 6 Apr 2012 15:20:51 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1333750851.41461.BPMail_high_noncarrier@web124702.mail.ne1.yahoo.com>


http://www.accentsdentallab.com/entrance.php?fjkyvimi=223&yqjmiqyqan=52

From forumer at smartmobili.com  Sat Apr  7 09:37:25 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sat, 07 Apr 2012 18:37:25 +0200
Subject: [antlr-interest] C# target
Message-ID: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>

Hi,

I am trying to use a java parser from a c# project (targetting 4.0) and 
I have added references to the
antlr runtime found inside antlr-3.4\runtime\CSharp2\dist\bin\net-2.0.
By the way the DOT-NET-runtime-3.1.3.zip is not correct because when I 
try to unzip it with 7-zip or
from windows I get the following message : WOuld you like to replace 
the existing file Antlr3.Utility.xml.
If I examine the zip file I can see that the Antlr3.Utility.xml is 
duplicated :


$ unzip -l DOT-NET-runtime-3.1.3.zip
Archive:  DOT-NET-runtime-3.1.3.zip
   Length      Date    Time    Name
---------  ---------- -----   ----
         0  02-21-2009 22:51   bin/
         0  03-11-2009 23:25   bin/net-2.0/
      6144  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll
     75617  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll.mdb
      2412  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.xml <<<<<<< 
DUPLICATE
    198080  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.xml
    117760  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll
      1110  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll.mdb
    114688  06-13-2008 13:17   bin/net-2.0/antlr.runtime.dll
    155648  03-11-2009 23:25   bin/net-2.0/StringTemplate.dll
      2525  08-11-2008 23:04   bin/net-2.0/Antlr3.Utility.XML <<<<<<< 
DUPLICATE
      1300  03-11-2009 23:19   README.TXT
---------                     -------
    675284                     12 files

As you can see file is duplicated.

I am also using antlrworks-1.4.3 and generated CSharp parser/lexer but 
when I try it I get
some missing GrammarRule attribute (I tried with CSharp2 and CSharp3 
but same error).
When I read 
http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target I can see 
the following instruction :
For recognizers created with ANTLR v3.1.x, you will need ANTLRWorks 
v1.2.x.
I find it weird to have to use an old version but ok let's try it, so I 
have generated my files again and now I get the
following error :

'skip' doesn't exist in current context but if I replace skip by Skip 
it seems to find the symbol.

So my question : Can I rely on c# target because it doesn't seem very 
stable...

Thanks




From forumer at smartmobili.com  Sat Apr  7 10:14:03 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sat, 07 Apr 2012 19:14:03 +0200
Subject: [antlr-interest] C# target
In-Reply-To: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>
References: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>
Message-ID: <870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>

I have found here 
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
a antlr-dotnet-csharpruntime-3.4.1 that after some compilations fixes
understand the files generated with antlrworks-1.4.3.
The fixes were : rename a boolean into bool and replace skip by Skip.
So is it normal it 's not inside the distribution archive ?
And while I am at it, it would be great if you could avoid to put
macos hidden files inside your archive because it's useless for 
windows/linux users.

Can I suggest you to regenerate a new archive without hidden files ?

mkdir tmp && cd tmp
wget http://www.antlr.org/download/antlr-3.4.tar.gz
tar xvf antlr-3.4.tar.gz
find . -type f -iname ".*" -exec rm -rf {} \;
rm antlr-3.4.tar.gz
tar zcvf antlr-3.4.tar.gz antlr-3.4

Thanks


> Hi,
>
> I am trying to use a java parser from a c# project (targetting 4.0) 
> and
> I have added references to the
> antlr runtime found inside 
> antlr-3.4\runtime\CSharp2\dist\bin\net-2.0.
> By the way the DOT-NET-runtime-3.1.3.zip is not correct because when 
> I
> try to unzip it with 7-zip or
> from windows I get the following message : WOuld you like to replace
> the existing file Antlr3.Utility.xml.
> If I examine the zip file I can see that the Antlr3.Utility.xml is
> duplicated :
>
>
> $ unzip -l DOT-NET-runtime-3.1.3.zip
> Archive:  DOT-NET-runtime-3.1.3.zip
>    Length      Date    Time    Name
> ---------  ---------- -----   ----
>          0  02-21-2009 22:51   bin/
>          0  03-11-2009 23:25   bin/net-2.0/
>       6144  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll
>      75617  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll.mdb
>       2412  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.xml <<<<<<<
> DUPLICATE
>     198080  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.xml
>     117760  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll
>       1110  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll.mdb
>     114688  06-13-2008 13:17   bin/net-2.0/antlr.runtime.dll
>     155648  03-11-2009 23:25   bin/net-2.0/StringTemplate.dll
>       2525  08-11-2008 23:04   bin/net-2.0/Antlr3.Utility.XML <<<<<<<
> DUPLICATE
>       1300  03-11-2009 23:19   README.TXT
> ---------                     -------
>     675284                     12 files
>
> As you can see file is duplicated.
>
> I am also using antlrworks-1.4.3 and generated CSharp parser/lexer 
> but
> when I try it I get
> some missing GrammarRule attribute (I tried with CSharp2 and CSharp3
> but same error).
> When I read
> http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target I can 
> see
> the following instruction :
> For recognizers created with ANTLR v3.1.x, you will need ANTLRWorks
> v1.2.x.
> I find it weird to have to use an old version but ok let's try it, so 
> I
> have generated my files again and now I get the
> following error :
>
> 'skip' doesn't exist in current context but if I replace skip by Skip
> it seems to find the symbol.
>
> So my question : Can I rely on c# target because it doesn't seem very
> stable...
>
> Thanks
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jbb at acm.org  Sat Apr  7 14:06:53 2012
From: jbb at acm.org (John B. Brodie)
Date: Sat, 07 Apr 2012 17:06:53 -0400
Subject: [antlr-interest] C++ grammar,
 troubleshooting mutually left recursive rules
In-Reply-To: <CAJ8SgHmbrU0xonpJ3d+FNYB8jN5mKeLYdytd6_gY+FLCdmR4Mw@mail.gmail.com>
References: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>
	<4F7D0C3B.2000305@acm.org>
	<CAJ8SgHmbrU0xonpJ3d+FNYB8jN5mKeLYdytd6_gY+FLCdmR4Mw@mail.gmail.com>
Message-ID: <4F80AC6D.5040204@acm.org>

Sorry!

On 04/06/2012 04:10 PM, Ludwig Maes wrote:
> Hello, thanks for helping me out
>
> My misunderstanding was that I thought recursion meant (in)directly
> calling itself (of which I could not find a cycle). If I understand
> correctly, you point out that "mutually left-recursive" actually means
> that the call trees of the 3 functions intersect. Why is that not
> allowed? it would seem to imply every rule may only be usaged in just
> one other rule?

Sorry for my error.

You are correct. Mutual left recursion is a (possibly indirect) cycle.

For some reason I mis-read your question and was responding to removing 
ambiguity by finding common left prefixes. Which was not your question 
and may not be a problem with these particular rules.

>
> I.e. : if I define a rule called digit, I can use/call this rule in
> other rules. Why would that be allowed but not what we have here be
> allowed?
>
> Perhaps there is a real recursion but when I draw the directed graph
> of calls in the steps you mention I get an acyclic graph...
>
> I must be misunderstanding something
>
>

Sorry for the noise.
    -jbb


From ludwig.maes at gmail.com  Sat Apr  7 14:56:17 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sat, 7 Apr 2012 23:56:17 +0200
Subject: [antlr-interest] C++ grammar,
 troubleshooting mutually left recursive rules
In-Reply-To: <4F80AC6D.5040204@acm.org>
References: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>
	<4F7D0C3B.2000305@acm.org>
	<CAJ8SgHmbrU0xonpJ3d+FNYB8jN5mKeLYdytd6_gY+FLCdmR4Mw@mail.gmail.com>
	<4F80AC6D.5040204@acm.org>
Message-ID: <CAJ8SgHkd0cU+EJ8FqaKtP__z36pAYHSfD6h_3WzBj10kypgUtA@mail.gmail.com>

Well, I still fail to find the recursion cycle, so maybe you are
right, perhaps the wrong error message is displayed? either way if a
(mutual) left recursion is found (a cycle was detected by antlr) why
cant it print out the cycle sequence?

On 7 April 2012 23:06, John B. Brodie <jbb at acm.org> wrote:
> Sorry!
>
>
> On 04/06/2012 04:10 PM, Ludwig Maes wrote:
>>
>> Hello, thanks for helping me out
>>
>> My misunderstanding was that I thought recursion meant (in)directly
>> calling itself (of which I could not find a cycle). If I understand
>> correctly, you point out that "mutually left-recursive" actually means
>> that the call trees of the 3 functions intersect. Why is that not
>> allowed? it would seem to imply every rule may only be usaged in just
>> one other rule?
>
>
> Sorry for my error.
>
> You are correct. Mutual left recursion is a (possibly indirect) cycle.
>
> For some reason I mis-read your question and was responding to removing
> ambiguity by finding common left prefixes. Which was not your question and
> may not be a problem with these particular rules.
>
>
>>
>> I.e. : if I define a rule called digit, I can use/call this rule in
>> other rules. Why would that be allowed but not what we have here be
>> allowed?
>>
>> Perhaps there is a real recursion but when I draw the directed graph
>> of calls in the steps you mention I get an acyclic graph...
>>
>> I must be misunderstanding something
>>
>>
>
> Sorry for the noise.
> ? -jbb
>

From sam at tunnelvisionlabs.com  Sat Apr  7 16:41:47 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sat, 7 Apr 2012 18:41:47 -0500
Subject: [antlr-interest] C# target
In-Reply-To: <870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>
References: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>
	<870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>
Message-ID: <085901cd1518$002dc390$00894ab0$@tunnelvisionlabs.com>

Hello,

Thank you for your interest in the C# target for ANTLR 3.

The wiki page you linked to here has a link to documentation on setting up a
Visual Studio project to use the C# target:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

When generating a grammar for the CSharp2 or CSharp3 target with a release
from that wiki article, the only way I've tested is using the Antlr3.exe
binary included in the release. In particular, ANTLRWorks may or may not be
capable of generating a proper grammar for these targets.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com] 
Sent: Saturday, April 07, 2012 12:14 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C# target

I have found here
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
a antlr-dotnet-csharpruntime-3.4.1 that after some compilations fixes
understand the files generated with antlrworks-1.4.3.
The fixes were : rename a boolean into bool and replace skip by Skip.
So is it normal it 's not inside the distribution archive ?
And while I am at it, it would be great if you could avoid to put macos
hidden files inside your archive because it's useless for windows/linux
users.

Can I suggest you to regenerate a new archive without hidden files ?

mkdir tmp && cd tmp
wget http://www.antlr.org/download/antlr-3.4.tar.gz
tar xvf antlr-3.4.tar.gz
find . -type f -iname ".*" -exec rm -rf {} \; rm antlr-3.4.tar.gz tar zcvf
antlr-3.4.tar.gz antlr-3.4

Thanks


> Hi,
>
> I am trying to use a java parser from a c# project (targetting 4.0) 
> and I have added references to the antlr runtime found inside 
> antlr-3.4\runtime\CSharp2\dist\bin\net-2.0.
> By the way the DOT-NET-runtime-3.1.3.zip is not correct because when I 
> try to unzip it with 7-zip or from windows I get the following message 
> : WOuld you like to replace the existing file Antlr3.Utility.xml.
> If I examine the zip file I can see that the Antlr3.Utility.xml is 
> duplicated :
>
>
> $ unzip -l DOT-NET-runtime-3.1.3.zip
> Archive:  DOT-NET-runtime-3.1.3.zip
>    Length      Date    Time    Name
> ---------  ---------- -----   ----
>          0  02-21-2009 22:51   bin/
>          0  03-11-2009 23:25   bin/net-2.0/
>       6144  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll
>      75617  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll.mdb
>       2412  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.xml <<<<<<<
> DUPLICATE
>     198080  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.xml
>     117760  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll
>       1110  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll.mdb
>     114688  06-13-2008 13:17   bin/net-2.0/antlr.runtime.dll
>     155648  03-11-2009 23:25   bin/net-2.0/StringTemplate.dll
>       2525  08-11-2008 23:04   bin/net-2.0/Antlr3.Utility.XML <<<<<<<
> DUPLICATE
>       1300  03-11-2009 23:19   README.TXT
> ---------                     -------
>     675284                     12 files
>
> As you can see file is duplicated.
>
> I am also using antlrworks-1.4.3 and generated CSharp parser/lexer but 
> when I try it I get some missing GrammarRule attribute (I tried with 
> CSharp2 and CSharp3 but same error).
> When I read
> http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target I can 
> see the following instruction :
> For recognizers created with ANTLR v3.1.x, you will need ANTLRWorks 
> v1.2.x.
> I find it weird to have to use an old version but ok let's try it, so 
> I have generated my files again and now I get the following error :
>
> 'skip' doesn't exist in current context but if I replace skip by Skip 
> it seems to find the symbol.
>
> So my question : Can I rely on c# target because it doesn't seem very 
> stable...
>
> Thanks
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ludwig.maes at gmail.com  Sat Apr  7 22:32:55 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sun, 8 Apr 2012 07:32:55 +0200
Subject: [antlr-interest] specify package name for generated lexer and
	parser?
Message-ID: <CAJ8SgHkqE2OeAwEA7GaOysDUFdT5QiBrYYGfVuAnTHnzL8EyYg@mail.gmail.com>

Hi, im working on a small java project, and wrote a small parser for
it. All the project files reside in a named package, inserting the
package declaration at every recompile is not a very clean way. If I
put it in the @header { } section only the parser and not the lexer
gets it. Am I missing something?

From ludwig.maes at gmail.com  Sat Apr  7 22:36:48 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sun, 8 Apr 2012 07:36:48 +0200
Subject: [antlr-interest] specify package name for generated lexer and
	parser?
In-Reply-To: <CAJ8SgHkqE2OeAwEA7GaOysDUFdT5QiBrYYGfVuAnTHnzL8EyYg@mail.gmail.com>
References: <CAJ8SgHkqE2OeAwEA7GaOysDUFdT5QiBrYYGfVuAnTHnzL8EyYg@mail.gmail.com>
Message-ID: <CAJ8SgH=O7QL2yiQ_JjK0VPq3WhGmMC4WTXVipfzpv9STDnEEug@mail.gmail.com>

I just realized this could be done with action scoping: lexer::header etc

On 8 April 2012 07:32, Ludwig Maes <ludwig.maes at gmail.com> wrote:
> Hi, im working on a small java project, and wrote a small parser for
> it. All the project files reside in a named package, inserting the
> package declaration at every recompile is not a very clean way. If I
> put it in the @header { } section only the parser and not the lexer
> gets it. Am I missing something?

From forumer at smartmobili.com  Sun Apr  8 02:16:32 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sun, 08 Apr 2012 11:16:32 +0200
Subject: [antlr-interest] C# target
In-Reply-To: <085901cd1518$002dc390$00894ab0$@tunnelvisionlabs.com>
References: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>
	<870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>
	<085901cd1518$002dc390$00894ab0$@tunnelvisionlabs.com>
Message-ID: <11e0c5f5e083d01d56d65fa235d85c32@smartmobili.com>

Hello,

Thanks I will try but wouldn't be better to fix archive and/or 
antlrworks ?
I mean when you use antlr for the first time it's really annoying to 
take one piece of code here another there
Next time you make a release I could help with the c# target.

Le 08.04.2012 01:41, Sam Harwell a ?crit?:
> Hello,
>
> Thank you for your interest in the C# target for ANTLR 3.
>
> The wiki page you linked to here has a link to documentation on 
> setting up a
> Visual Studio project to use the C# target:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
>
> When generating a grammar for the CSharp2 or CSharp3 target with a 
> release
> from that wiki article, the only way I've tested is using the 
> Antlr3.exe
> binary included in the release. In particular, ANTLRWorks may or may 
> not be
> capable of generating a proper grammar for these targets.
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> Sent: Saturday, April 07, 2012 12:14 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C# target
>
> I have found here
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> a antlr-dotnet-csharpruntime-3.4.1 that after some compilations fixes
> understand the files generated with antlrworks-1.4.3.
> The fixes were : rename a boolean into bool and replace skip by Skip.
> So is it normal it 's not inside the distribution archive ?
> And while I am at it, it would be great if you could avoid to put 
> macos
> hidden files inside your archive because it's useless for 
> windows/linux
> users.
>
> Can I suggest you to regenerate a new archive without hidden files ?
>
> mkdir tmp && cd tmp
> wget http://www.antlr.org/download/antlr-3.4.tar.gz
> tar xvf antlr-3.4.tar.gz
> find . -type f -iname ".*" -exec rm -rf {} \; rm antlr-3.4.tar.gz tar 
> zcvf
> antlr-3.4.tar.gz antlr-3.4
>
> Thanks
>
>
>> Hi,
>>
>> I am trying to use a java parser from a c# project (targetting 4.0)
>> and I have added references to the antlr runtime found inside
>> antlr-3.4\runtime\CSharp2\dist\bin\net-2.0.
>> By the way the DOT-NET-runtime-3.1.3.zip is not correct because when 
>> I
>> try to unzip it with 7-zip or from windows I get the following 
>> message
>> : WOuld you like to replace the existing file Antlr3.Utility.xml.
>> If I examine the zip file I can see that the Antlr3.Utility.xml is
>> duplicated :
>>
>>
>> $ unzip -l DOT-NET-runtime-3.1.3.zip
>> Archive:  DOT-NET-runtime-3.1.3.zip
>>    Length      Date    Time    Name
>> ---------  ---------- -----   ----
>>          0  02-21-2009 22:51   bin/
>>          0  03-11-2009 23:25   bin/net-2.0/
>>       6144  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll
>>      75617  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll.mdb
>>       2412  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.xml 
>> <<<<<<<
>> DUPLICATE
>>     198080  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.xml
>>     117760  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll
>>       1110  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll.mdb
>>     114688  06-13-2008 13:17   bin/net-2.0/antlr.runtime.dll
>>     155648  03-11-2009 23:25   bin/net-2.0/StringTemplate.dll
>>       2525  08-11-2008 23:04   bin/net-2.0/Antlr3.Utility.XML 
>> <<<<<<<
>> DUPLICATE
>>       1300  03-11-2009 23:19   README.TXT
>> ---------                     -------
>>     675284                     12 files
>>
>> As you can see file is duplicated.
>>
>> I am also using antlrworks-1.4.3 and generated CSharp parser/lexer 
>> but
>> when I try it I get some missing GrammarRule attribute (I tried with
>> CSharp2 and CSharp3 but same error).
>> When I read
>> http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target I can
>> see the following instruction :
>> For recognizers created with ANTLR v3.1.x, you will need ANTLRWorks
>> v1.2.x.
>> I find it weird to have to use an old version but ok let's try it, 
>> so
>> I have generated my files again and now I get the following error :
>>
>> 'skip' doesn't exist in current context but if I replace skip by 
>> Skip
>> it seems to find the symbol.
>>
>> So my question : Can I rely on c# target because it doesn't seem 
>> very
>> stable...
>>
>> Thanks
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>>
>> 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From forumer at smartmobili.com  Sun Apr  8 02:57:07 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sun, 08 Apr 2012 11:57:07 +0200
Subject: [antlr-interest] C# target
In-Reply-To: <11e0c5f5e083d01d56d65fa235d85c32@smartmobili.com>
References: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>
	<870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>
	<085901cd1518$002dc390$00894ab0$@tunnelvisionlabs.com>
	<11e0c5f5e083d01d56d65fa235d85c32@smartmobili.com>
Message-ID: <dfc04ce4ec3117a375a710463bf285b5@smartmobili.com>

Ok so I have downloaded/unzipped antlr-dotnet-tool-3.4.1.9004.7z and
when I run Antlr3.exe inside a command prompt I get :


$ ./Antlr3.exe
can't Load group file 
C:\Developer\antlr-dotnet-tool-3.4.1.9004\Tool\Templates\messages\languages\fr.stg
Caused by:    ? Antlr4.StringTemplate.TemplateGroupFile..ctor(String 
fileName, Char delimiterStartChar, Char delimiterStopChar) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr4.StringTemplate\TemplateGroupFile.cs:ligne 
82


Exception non g?r?e?: System.IO.FileNotFoundException: No such group 
file: 
C:\Developer\antlr-dotnet-tool-3.4.1.9004\Tool\Templates\messages\languages\fr.stg
    ? Antlr4.StringTemplate.TemplateGroupFile..ctor(String fileName, 
Char delimiterStartChar, Char delimiterStopChar) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr4.StringTemplate\TemplateGroupFile.cs:ligne 
82
    ? Antlr4.StringTemplate.TemplateGroupFile..ctor(String fileName, 
Char delimiterStartChar, Char delimiterStopChar) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr4.StringTemplate\TemplateGroupFile.cs:ligne 
94
    ? Antlr3.Tool.ErrorManager.SetLocale(CultureInfo locale) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr3\Tool\ErrorManager.cs:ligne 
432
    ? Antlr3.AntlrTool..ctor(String toolPathRoot) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr3\AntlrTool.cs:ligne 127
    ? Antlr3.AntlrTool..ctor(String[] args) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr3\AntlrTool.cs:ligne 134
    ? Antlr3.AntlrTool.Main(String[] args) dans 
c:\dev\stringtemplate_main\antlrcs\main\Antlr3\AntlrTool.cs:ligne 104

I am using a french windows (nobody's perfect) and it seems to search 
for a localized file but cannot found it.
When I look at source code I can see :

if (!File.Exists(fileName))
                     throw new FileNotFoundException(string.Format("No 
such group file: {0}", fileName));

Is it so important to use the right localized file, wouldn't be simpler 
to use english if it cannot find the right one ?


From forumer at smartmobili.com  Sun Apr  8 05:13:56 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Sun, 08 Apr 2012 14:13:56 +0200
Subject: [antlr-interest] Syntax highlighting : need some advice
Message-ID: <8b92d4a99b4e854119ed6381249e0ec2@smartmobili.com>

Hi,

I would like to create some visual studio plugins to provide syntax 
highlighting (and maybe latter code completion)
for some custom languages. To start with a "simple" language I am using 
the java 1.6 grammar and I would like to know
how can I provide syntax coloration knowing that editor calls a 
function and gives source code line by line.
For instance editor gives the following lines instead of providing the 
entire source code:

/*
* Some comment
*/

package com.foobar.servlets;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.mail.*;
import javax.mail.internet.InternetAddress;

and the first question is how can I parse those lines and know in which 
context I am ?
Is the lexer enough or do I have to use the parser ?
In java 1.6 grammar comments are skipped so how can I change that to 
recognize comments ?
About comments, if I only get a part of the comment like this :

/*
*
*

I suppose lexer will throw an exception because it will try to find the 
matching */
so how can I prevent this ?



Thanks

From tangeleno at gmail.com  Sun Apr  8 10:27:51 2012
From: tangeleno at gmail.com (Tangeleno)
Date: Sun, 08 Apr 2012 13:27:51 -0400
Subject: [antlr-interest] Default token?
Message-ID: <4F81CA97.6000905@gmail.com>

I'm having a bit of trouble with my lexer, the language I'm working on 
building a parser for does not require strings to be surrounded by 
quotes, for example all of these are valid

string1:Set[This is string 1,this is not string 1] //commas separate 
params, string1:Set takes one, any extras are thrown away
strin1:Set[This is all one string] //I end on the right square bracket
string1:Set["This is string 1,this is all string 1"] // standard string, 
surrounded in quotes to ignore the comma
variable string string1 = This is string 1 //Ends on the new line
variable ComplexType ct = "Param1" 2 "Param3" //Param1 and 3 are strings 
but param2 is an int
echo "This is string 1" "This would be a separate string" //Quoted 
strings are separated by a space or comma
echo This is all one string
echo \t\t I also accept \r\n escape sequences!
SomeCommand0(This is all one string)
SomeCommand1(These,are,all,separate,strings)
SomeCommand2(1,2,3,4,Those are all ints)
SomeCommand3(I can be anywhere!,1,2,3)

I am wondering if there is a way to set a lexer rule to the default 
option if no other lexer rule matches, or any other tips on how to 
handle this.

From sam at tunnelvisionlabs.com  Sun Apr  8 11:09:25 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sun, 8 Apr 2012 13:09:25 -0500
Subject: [antlr-interest] C# target
In-Reply-To: <dfc04ce4ec3117a375a710463bf285b5@smartmobili.com>
References: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>	<870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>	<085901cd1518$002dc390$00894ab0$@tunnelvisionlabs.com>	<11e0c5f5e083d01d56d65fa235d85c32@smartmobili.com>
	<dfc04ce4ec3117a375a710463bf285b5@smartmobili.com>
Message-ID: <087b01cd15b2$bc6f38a0$354da9e0$@tunnelvisionlabs.com>

Hello,

I've fixed this issue locally but it looks like build 9004 doesn't include it. For now, you can search for the file en.stg in the folders where you extracted the 7z file, and copy it to another file fr.stg in the same folder.

Thanks,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com] 
Sent: Sunday, April 08, 2012 4:57 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C# target

Ok so I have downloaded/unzipped antlr-dotnet-tool-3.4.1.9004.7z and when I run Antlr3.exe inside a command prompt I get :


$ ./Antlr3.exe
can't Load group file
C:\Developer\antlr-dotnet-tool-3.4.1.9004\Tool\Templates\messages\languages\fr.stg
Caused by:    ? Antlr4.StringTemplate.TemplateGroupFile..ctor(String 
fileName, Char delimiterStartChar, Char delimiterStopChar) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr4.StringTemplate\TemplateGroupFile.cs:ligne
82


Exception non g?r?e?: System.IO.FileNotFoundException: No such group
file: 
C:\Developer\antlr-dotnet-tool-3.4.1.9004\Tool\Templates\messages\languages\fr.stg
    ? Antlr4.StringTemplate.TemplateGroupFile..ctor(String fileName, Char delimiterStartChar, Char delimiterStopChar) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr4.StringTemplate\TemplateGroupFile.cs:ligne
82
    ? Antlr4.StringTemplate.TemplateGroupFile..ctor(String fileName, Char delimiterStartChar, Char delimiterStopChar) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr4.StringTemplate\TemplateGroupFile.cs:ligne
94
    ? Antlr3.Tool.ErrorManager.SetLocale(CultureInfo locale) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr3\Tool\ErrorManager.cs:ligne
432
    ? Antlr3.AntlrTool..ctor(String toolPathRoot) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr3\AntlrTool.cs:ligne 127
    ? Antlr3.AntlrTool..ctor(String[] args) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr3\AntlrTool.cs:ligne 134
    ? Antlr3.AntlrTool.Main(String[] args) dans c:\dev\stringtemplate_main\antlrcs\main\Antlr3\AntlrTool.cs:ligne 104

I am using a french windows (nobody's perfect) and it seems to search for a localized file but cannot found it.
When I look at source code I can see :

if (!File.Exists(fileName))
                     throw new FileNotFoundException(string.Format("No
such group file: {0}", fileName));

Is it so important to use the right localized file, wouldn't be simpler to use english if it cannot find the right one ?


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sam at tunnelvisionlabs.com  Sun Apr  8 11:13:04 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sun, 8 Apr 2012 13:13:04 -0500
Subject: [antlr-interest] C# target
In-Reply-To: <11e0c5f5e083d01d56d65fa235d85c32@smartmobili.com>
References: <e9e53af895fb888a352714e0e2ecb8a9@smartmobili.com>
	<870669a3eb73fe42503719b87e3bf1ff@smartmobili.com>
	<085901cd1518$002dc390$00894ab0$@tunnelvisionlabs.com>
	<11e0c5f5e083d01d56d65fa235d85c32@smartmobili.com>
Message-ID: <087c01cd15b3$3f2b8b40$bd82a1c0$@tunnelvisionlabs.com>

This situation is mostly caused by the fact that I never used ANTLRWorks or the Java version of the Tool*. I always built my projects within Visual Studio, and use the following for editing grammars:

http://visualstudiogallery.msdn.microsoft.com/25b991db-befd-441b-b23b-bb5f8d07ee9f

* This applies specifically to ANTLRWorks 1.x and the Tool from ANTLR 3. I'm the primary developer on ANTLRWorks 2 (rewrite from scratch), so obviously I'll be making sure it supports the C# target for ANTLR 4 whenever that's released.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com] 
Sent: Sunday, April 08, 2012 4:17 AM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] C# target

Hello,

Thanks I will try but wouldn't be better to fix archive and/or antlrworks ?
I mean when you use antlr for the first time it's really annoying to take one piece of code here another there Next time you make a release I could help with the c# target.

Le 08.04.2012 01:41, Sam Harwell a ?crit :
> Hello,
>
> Thank you for your interest in the C# target for ANTLR 3.
>
> The wiki page you linked to here has a link to documentation on 
> setting up a Visual Studio project to use the C# target:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
>
> When generating a grammar for the CSharp2 or CSharp3 target with a 
> release from that wiki article, the only way I've tested is using the 
> Antlr3.exe binary included in the release. In particular, ANTLRWorks 
> may or may not be capable of generating a proper grammar for these 
> targets.
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> Sent: Saturday, April 07, 2012 12:14 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C# target
>
> I have found here
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> a antlr-dotnet-csharpruntime-3.4.1 that after some compilations fixes 
> understand the files generated with antlrworks-1.4.3.
> The fixes were : rename a boolean into bool and replace skip by Skip.
> So is it normal it 's not inside the distribution archive ?
> And while I am at it, it would be great if you could avoid to put 
> macos hidden files inside your archive because it's useless for 
> windows/linux users.
>
> Can I suggest you to regenerate a new archive without hidden files ?
>
> mkdir tmp && cd tmp
> wget http://www.antlr.org/download/antlr-3.4.tar.gz
> tar xvf antlr-3.4.tar.gz
> find . -type f -iname ".*" -exec rm -rf {} \; rm antlr-3.4.tar.gz tar 
> zcvf antlr-3.4.tar.gz antlr-3.4
>
> Thanks
>
>
>> Hi,
>>
>> I am trying to use a java parser from a c# project (targetting 4.0) 
>> and I have added references to the antlr runtime found inside 
>> antlr-3.4\runtime\CSharp2\dist\bin\net-2.0.
>> By the way the DOT-NET-runtime-3.1.3.zip is not correct because when 
>> I try to unzip it with 7-zip or from windows I get the following 
>> message
>> : WOuld you like to replace the existing file Antlr3.Utility.xml.
>> If I examine the zip file I can see that the Antlr3.Utility.xml is 
>> duplicated :
>>
>>
>> $ unzip -l DOT-NET-runtime-3.1.3.zip
>> Archive:  DOT-NET-runtime-3.1.3.zip
>>    Length      Date    Time    Name
>> ---------  ---------- -----   ----
>>          0  02-21-2009 22:51   bin/
>>          0  03-11-2009 23:25   bin/net-2.0/
>>       6144  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll
>>      75617  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll.mdb
>>       2412  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.xml 
>> <<<<<<<
>> DUPLICATE
>>     198080  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.xml
>>     117760  03-11-2009 23:25   bin/net-2.0/Antlr3.Runtime.dll
>>       1110  03-11-2009 23:25   bin/net-2.0/Antlr3.Utility.dll.mdb
>>     114688  06-13-2008 13:17   bin/net-2.0/antlr.runtime.dll
>>     155648  03-11-2009 23:25   bin/net-2.0/StringTemplate.dll
>>       2525  08-11-2008 23:04   bin/net-2.0/Antlr3.Utility.XML 
>> <<<<<<<
>> DUPLICATE
>>       1300  03-11-2009 23:19   README.TXT
>> ---------                     -------
>>     675284                     12 files
>>
>> As you can see file is duplicated.
>>
>> I am also using antlrworks-1.4.3 and generated CSharp parser/lexer 
>> but when I try it I get some missing GrammarRule attribute (I tried 
>> with
>> CSharp2 and CSharp3 but same error).
>> When I read
>> http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target I can 
>> see the following instruction :
>> For recognizers created with ANTLR v3.1.x, you will need ANTLRWorks 
>> v1.2.x.
>> I find it weird to have to use an old version but ok let's try it, so 
>> I have generated my files again and now I get the following error :
>>
>> 'skip' doesn't exist in current context but if I replace skip by Skip 
>> it seems to find the symbol.
>>
>> So my question : Can I rely on c# target because it doesn't seem very 
>> stable...
>>
>> Thanks
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>>
>> 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>> s
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stephen at perceptisys.co.uk  Sun Apr  8 12:06:42 2012
From: stephen at perceptisys.co.uk (Stephen Gaito)
Date: Sun, 08 Apr 2012 20:06:42 +0100
Subject: [antlr-interest] Default token?
In-Reply-To: <4F81CA97.6000905@gmail.com>
References: <4F81CA97.6000905@gmail.com>
Message-ID: <4F81E1C2.8060808@perceptisys.co.uk>

Tangeleno,

Yes there is, "simply use":

OTHER : . ;

BUT beware of using .+ as this might gobble up all the rest of the
characters in your parse.

The best discussion of this topic and this example, comes from Terence's
excellent book: "The Definitive ANTLR reference".  It is well worth the
cost as it is a very good introduction.

If you have the book search for "greedy" and/or look on page 290.

Regards,

Stephen Gaito

On 08/04/2012 18:27, Tangeleno wrote:
> I'm having a bit of trouble with my lexer, the language I'm working on 
> building a parser for does not require strings to be surrounded by 
> quotes, for example all of these are valid
>
> string1:Set[This is string 1,this is not string 1] //commas separate 
> params, string1:Set takes one, any extras are thrown away
> strin1:Set[This is all one string] //I end on the right square bracket
> string1:Set["This is string 1,this is all string 1"] // standard string, 
> surrounded in quotes to ignore the comma
> variable string string1 = This is string 1 //Ends on the new line
> variable ComplexType ct = "Param1" 2 "Param3" //Param1 and 3 are strings 
> but param2 is an int
> echo "This is string 1" "This would be a separate string" //Quoted 
> strings are separated by a space or comma
> echo This is all one string
> echo \t\t I also accept \r\n escape sequences!
> SomeCommand0(This is all one string)
> SomeCommand1(These,are,all,separate,strings)
> SomeCommand2(1,2,3,4,Those are all ints)
> SomeCommand3(I can be anywhere!,1,2,3)
>
> I am wondering if there is a way to set a lexer rule to the default 
> option if no other lexer rule matches, or any other tips on how to 
> handle this.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From peter at crispu.com  Sun Apr  8 13:44:12 2012
From: peter at crispu.com (Peter Kooiman)
Date: Sun, 8 Apr 2012 15:44:12 -0500 (CDT)
Subject: [antlr-interest] C++ grammar,
	troubleshooting mutually left recursive rules
In-Reply-To: <CAJ8SgHkd0cU+EJ8FqaKtP__z36pAYHSfD6h_3WzBj10kypgUtA@mail.gmail.com>
References: <CAJ8SgHnoGOBOwJFVmO2VLarRN2opFURUPBdPUes3W6zmOVbBiA@mail.gmail.com>	<4F7D0C3B.2000305@acm.org>	<CAJ8SgHmbrU0xonpJ3d+FNYB8jN5mKeLYdytd6_gY+FLCdmR4Mw@mail.gmail.com>	<4F80AC6D.5040204@acm.org>
	<CAJ8SgHkd0cU+EJ8FqaKtP__z36pAYHSfD6h_3WzBj10kypgUtA@mail.gmail.com>
Message-ID: <efbc11b6.000016b8.00000007@devleno>

Ludwig,

Due to this:

identifier_nondigit	: Nondigit // C++0x:
			| universal_character_name // C++0x:
			| //"other implementation-defined characters" //
C++0x: <-------------!!!!!!!!!!!!!!!!!!
			;
Your identifier_nodigit can produce empty...I guess you wanted that last
"|" inside the comment. This in turn makes it so that

identifier	: identifier_nondigit (identifier_nondigit | Digit)* //
C++0x
		;
Can produce empty, this keeps cascading so that type_name, then
simple_type_specifier, then trailing_type_specifier, then type_specifier
can all produce empty.

Of course then rule
type_specifier_seq	: type_specifier attribute_specifier_seq? //
C++0x:
			| type_specifier type_specifier_seq
			;
Is left recursive because type_specifier can produce empty...same applies
for the other two rules.
The error message from ANTLR is a bit confusing in that it can be taken to
mean that the 3 rules in the error message are mutually left recursive,
when in fact ANTLR is giving 3 sets of MLR rules, each set containing one
rule, ie due to identifier producing empty, each of the three rules is
left recursive by itself.

HTH
Peter



-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ludwig Maes
Sent: 07 April 2012 23:56
To: John B. Brodie
Cc: ANTLR Interest
Subject: Re: [antlr-interest] C++ grammar, troubleshooting mutually left
recursive rules

Well, I still fail to find the recursion cycle, so maybe you are
right, perhaps the wrong error message is displayed? either way if a
(mutual) left recursion is found (a cycle was detected by antlr) why
cant it print out the cycle sequence?

On 7 April 2012 23:06, John B. Brodie <jbb at acm.org> wrote:
> Sorry!
>
>
> On 04/06/2012 04:10 PM, Ludwig Maes wrote:
>>
>> Hello, thanks for helping me out
>>
>> My misunderstanding was that I thought recursion meant (in)directly
>> calling itself (of which I could not find a cycle). If I understand
>> correctly, you point out that "mutually left-recursive" actually means
>> that the call trees of the 3 functions intersect. Why is that not
>> allowed? it would seem to imply every rule may only be usaged in just
>> one other rule?
>
>
> Sorry for my error.
>
> You are correct. Mutual left recursion is a (possibly indirect) cycle.
>
> For some reason I mis-read your question and was responding to removing
> ambiguity by finding common left prefixes. Which was not your question
and
> may not be a problem with these particular rules.
>
>
>>
>> I.e. : if I define a rule called digit, I can use/call this rule in
>> other rules. Why would that be allowed but not what we have here be
>> allowed?
>>
>> Perhaps there is a real recursion but when I draw the directed graph
>> of calls in the steps you mention I get an acyclic graph...
>>
>> I must be misunderstanding something
>>
>>
>
> Sorry for the noise.
> ? -jbb
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From sam at tunnelvisionlabs.com  Mon Apr  9 11:17:59 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Mon, 9 Apr 2012 13:17:59 -0500
Subject: [antlr-interest] Syntax highlighting : need some advice
In-Reply-To: <8b92d4a99b4e854119ed6381249e0ec2@smartmobili.com>
References: <8b92d4a99b4e854119ed6381249e0ec2@smartmobili.com>
Message-ID: <08d901cd167d$1925e790$4b71b6b0$@tunnelvisionlabs.com>

You should be aware from the start that you're entering an area with sparse
documentation, much of which suffers from:

* Incomplete (works for some examples but leaves you hanging when you want
to do something more)
* Outdated (applies to Visual Studio 2008 or earlier - Visual Studio 2010
supports this but also offers a much more powerful new model that is
preferable in pretty much every way).
* Incorrect (violates best practices and/or exemplifies things I've come to
realize are bad ideas)

I also have to point out the following regarding your message below:

* When it comes to this task, the only things "simple" about the Java
language is it doesn't require a preprocessor and it doesn't have any
context-sensitive keywords.
* One extension for Java support already exists, so if you're just looking
for something to use it may save you some time:
http://visualstudiogallery.msdn.microsoft.com/bc561769-36ff-4a40-9504-e266e8
706f93

Here are some resources to get you started:

[1] Diff Classifier example. I haven't looked at the code, but based on the
description it uses the new Visual Studio 2010 APIs which I recommend unless
you absolutely must for some reason support 2008 and/or 2005.

[2] DiveDeeper's blog. This is a mix of many VSX topics.

[3] Topics tagged "Programming" on my blog. It's a mix of various topics
from Visual Studio 2008 and 2010, plus a bit of information about using
ANTLR 3 as part of your extension.


[1] http://code.msdn.microsoft.com/windowsdesktop/Diff-Classifier-e87ed723
[2] http://dotneteers.net/blogs/divedeeper/default.aspx
[3] http://blog.280z28.org/archives/category/programming/


--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com] 
Sent: Sunday, April 08, 2012 7:14 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Syntax highlighting : need some advice

Hi,

I would like to create some visual studio plugins to provide syntax
highlighting (and maybe latter code completion) for some custom languages.
To start with a "simple" language I am using the java 1.6 grammar and I
would like to know how can I provide syntax coloration knowing that editor
calls a function and gives source code line by line.
For instance editor gives the following lines instead of providing the
entire source code:

/*
* Some comment
*/

package com.foobar.servlets;

import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.mail.*;
import javax.mail.internet.InternetAddress;

and the first question is how can I parse those lines and know in which
context I am ?
Is the lexer enough or do I have to use the parser ?
In java 1.6 grammar comments are skipped so how can I change that to
recognize comments ?
About comments, if I only get a part of the comment like this :

/*
*
*

I suppose lexer will throw an exception because it will try to find the
matching */ so how can I prevent this ?



Thanks

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jackett_dad at yahoo.com  Mon Apr  9 13:28:11 2012
From: jackett_dad at yahoo.com (Scott)
Date: Mon, 9 Apr 2012 13:28:11 -0700 (PDT)
Subject: [antlr-interest] grammar that separates classpath from class name
Message-ID: <1334003291.26846.YahooMailNeo@web84005.mail.mud.yahoo.com>

All,

I'm just starting with Antlr.? I have past experience with JavaCC, but it's been a while.

I'm parsing a fully qualified java type name, and would like to differentiate the classpath from the class name.? So if I were parsing this:

com.company.JavaType

I would like to specify an expression for which the package and class name are distinct nodes in the parse tree.? I copied a Java 5 grammar as a starting point, but that distinction is not made.? I could easily do this separation in a visitor, but since Antlr is so cool, I'd rather that it did the work for me.

The catch is, I don't want to have the last dot character be part of the package name, and I don't want the dot to be part of the class name either.??

So here is what I have so far:

genericTypeArgument : type | QUESTION_MARK (('extends' | 'super') type)?;

type??? ??? ??? : qualifiedJavaType arrayModifier* | primitiveType arrayModifier*;

packageDecl??? ??? : (Identifier DOT)*;

qualifiedJavaType??? : packageDecl? javaType;

javaType??? ??? : Identifier genericTypeArguments?;

This works almost.? The package declaration includes the last dot.? Is there a way that I can have the parser ignore(or not include) only the last dot in the package declaration?

Thanks,

Scott

From dave at daveboden.com  Mon Apr  9 13:41:36 2012
From: dave at daveboden.com (David Boden)
Date: Mon, 9 Apr 2012 21:41:36 +0100
Subject: [antlr-interest] grammar that separates classpath from class
	name
In-Reply-To: <1334003291.26846.YahooMailNeo@web84005.mail.mud.yahoo.com>
References: <1334003291.26846.YahooMailNeo@web84005.mail.mud.yahoo.com>
Message-ID: <CACr8g8iT-Hw4vVKbe43kviFABSJd4KTha-4___stT77RCtKxuw@mail.gmail.com>

Hi Scott,

I'm a relative Antlr newbie too, but I've just completed a successful
project so may be able to help.

Would this work for you?:
packageDecl        : Identifier (DOT Identifer)*;
qualifiedJavaType    : (packageDecl DOT)? javaType;

Regards,
Dave



On 9 April 2012 21:28, Scott <jackett_dad at yahoo.com> wrote:

> All,
>
> I'm just starting with Antlr.  I have past experience with JavaCC, but
> it's been a while.
>
> I'm parsing a fully qualified java type name, and would like to
> differentiate the classpath from the class name.  So if I were parsing this:
>
> com.company.JavaType
>
> I would like to specify an expression for which the package and class name
> are distinct nodes in the parse tree.  I copied a Java 5 grammar as a
> starting point, but that distinction is not made.  I could easily do this
> separation in a visitor, but since Antlr is so cool, I'd rather that it did
> the work for me.
>
> The catch is, I don't want to have the last dot character be part of the
> package name, and I don't want the dot to be part of the class name
> either.
>
> So here is what I have so far:
>
> genericTypeArgument : type | QUESTION_MARK (('extends' | 'super') type)?;
>
> type            : qualifiedJavaType arrayModifier* | primitiveType
> arrayModifier*;
>
> packageDecl        : (Identifier DOT)*;
>
> qualifiedJavaType    : packageDecl? javaType;
>
> javaType        : Identifier genericTypeArguments?;
>
> This works almost.  The package declaration includes the last dot.  Is
> there a way that I can have the parser ignore(or not include) only the last
> dot in the package declaration?
>
> Thanks,
>
> Scott
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jbb at acm.org  Mon Apr  9 13:51:20 2012
From: jbb at acm.org (John B. Brodie)
Date: Mon, 09 Apr 2012 16:51:20 -0400
Subject: [antlr-interest] grammar that separates classpath from class
 name
In-Reply-To: <CACr8g8iT-Hw4vVKbe43kviFABSJd4KTha-4___stT77RCtKxuw@mail.gmail.com>
References: <1334003291.26846.YahooMailNeo@web84005.mail.mud.yahoo.com>
	<CACr8g8iT-Hw4vVKbe43kviFABSJd4KTha-4___stT77RCtKxuw@mail.gmail.com>
Message-ID: <4F834BC8.3000203@acm.org>

A small tweak (UNTESTED) so that you do not need the trailing DOT on 
each usage

On 04/09/2012 04:41 PM, David Boden wrote:
> Hi Scott,
>
> I'm a relative Antlr newbie too, but I've just completed a successful
> project so may be able to help.
>
> Would this work for you?:
> packageDecl        : Identifier (DOT Identifer)*;
> qualifiedJavaType    : (packageDecl DOT)? javaType;

packageDecl : Identifier (DOT Identifier)* DOT! ;
qualifiedJavaType : packageDecl? javaType ;

(the `!` meta suffix operator tells ANTLR not to include the 
corresponding element in the generated AST).

Hope this helps...
    -jbb


>
> Regards,
> Dave
>
>
>
> On 9 April 2012 21:28, Scott<jackett_dad at yahoo.com>  wrote:
>
>> All,
>>
>> I'm just starting with Antlr.  I have past experience with JavaCC, but
>> it's been a while.
>>
>> I'm parsing a fully qualified java type name, and would like to
>> differentiate the classpath from the class name.  So if I were parsing this:
>>
>> com.company.JavaType
>>
>> I would like to specify an expression for which the package and class name
>> are distinct nodes in the parse tree.  I copied a Java 5 grammar as a
>> starting point, but that distinction is not made.  I could easily do this
>> separation in a visitor, but since Antlr is so cool, I'd rather that it did
>> the work for me.
>>
>> The catch is, I don't want to have the last dot character be part of the
>> package name, and I don't want the dot to be part of the class name
>> either.
>>
>> So here is what I have so far:
>>
>> genericTypeArgument : type | QUESTION_MARK (('extends' | 'super') type)?;
>>
>> type            : qualifiedJavaType arrayModifier* | primitiveType
>> arrayModifier*;
>>
>> packageDecl        : (Identifier DOT)*;
>>
>> qualifiedJavaType    : packageDecl? javaType;
>>
>> javaType        : Identifier genericTypeArguments?;
>>
>> This works almost.  The package declaration includes the last dot.  Is
>> there a way that I can have the parser ignore(or not include) only the last
>> dot in the package declaration?
>>
>> Thanks,
>>
>> Scott
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jackett_dad at yahoo.com  Mon Apr  9 13:59:50 2012
From: jackett_dad at yahoo.com (Scott)
Date: Mon, 9 Apr 2012 13:59:50 -0700 (PDT)
Subject: [antlr-interest] grammar that separates classpath from class
	name
In-Reply-To: <4F834BC8.3000203@acm.org>
References: <1334003291.26846.YahooMailNeo@web84005.mail.mud.yahoo.com>
	<CACr8g8iT-Hw4vVKbe43kviFABSJd4KTha-4___stT77RCtKxuw@mail.gmail.com>
	<4F834BC8.3000203@acm.org>
Message-ID: <1334005190.41359.YahooMailNeo@web84001.mail.mud.yahoo.com>

I was just about to reply and say that David's code worked (thanks!).? John's code should work, but for some reason I'm getting an exception:

[ERROR] Failed to execute goal org.codehaus.mojo:antlr3-maven-plugin:1.0:antlr (default) on project processors: MojoExecutionException: Can't find template tokenRefBang.st -> [Help 1]


I'm using version 3.0.1 of antlr because that seems to be the version that works with the AntlrWorks plugin in IntelliJ, and works with the maven plugin for building antlr grammars.? I saw this by googling (came from this list):

You can't have both AST operators (^ and !) and rewrites in the same rule.
You are using ! in a rule with rewrites. Unfortunately currently the error
message doesn't give the location, this is a known issue. I don't think this
will be fixed in 3.1.

I don't think I'm doing any rewrites, but maybe I've accidentally triggered one--I'll have to re-read a tutorial that demonstrated how to do this.

Either way, thanks for the quick replies.

Scott




________________________________
 From: John B. Brodie <jbb at acm.org>
To: antlr-interest at antlr.org 
Sent: Monday, April 9, 2012 4:51 PM
Subject: Re: [antlr-interest] grammar that separates classpath from class name
 
A small tweak (UNTESTED) so that you do not need the trailing DOT on 
each usage

On 04/09/2012 04:41 PM, David Boden wrote:
> Hi Scott,
>
> I'm a relative Antlr newbie too, but I've just completed a successful
> project so may be able to help.
>
> Would this work for you?:
> packageDecl? ? ? ? : Identifier (DOT Identifer)*;
> qualifiedJavaType? ? : (packageDecl DOT)? javaType;

packageDecl : Identifier (DOT Identifier)* DOT! ;
qualifiedJavaType : packageDecl? javaType ;

(the `!` meta suffix operator tells ANTLR not to include the 
corresponding element in the generated AST).

Hope this helps...
? ? -jbb


>
> Regards,
> Dave
>
>
>
> On 9 April 2012 21:28, Scott<jackett_dad at yahoo.com>? wrote:
>
>> All,
>>
>> I'm just starting with Antlr.? I have past experience with JavaCC, but
>> it's been a while.
>>
>> I'm parsing a fully qualified java type name, and would like to
>> differentiate the classpath from the class name.? So if I were parsing this:
>>
>> com.company.JavaType
>>
>> I would like to specify an expression for which the package and class name
>> are distinct nodes in the parse tree.? I copied a Java 5 grammar as a
>> starting point, but that distinction is not made.? I could easily do this
>> separation in a visitor, but since Antlr is so cool, I'd rather that it did
>> the work for me.
>>
>> The catch is, I don't want to have the last dot character be part of the
>> package name, and I don't want the dot to be part of the class name
>> either.
>>
>> So here is what I have so far:
>>
>> genericTypeArgument : type | QUESTION_MARK (('extends' | 'super') type)?;
>>
>> type? ? ? ? ? ? : qualifiedJavaType arrayModifier* | primitiveType
>> arrayModifier*;
>>
>> packageDecl? ? ? ? : (Identifier DOT)*;
>>
>> qualifiedJavaType? ? : packageDecl? javaType;
>>
>> javaType? ? ? ? : Identifier genericTypeArguments?;
>>
>> This works almost.? The package declaration includes the last dot.? Is
>> there a way that I can have the parser ignore(or not include) only the last
>> dot in the package declaration?
>>
>> Thanks,
>>
>> Scott
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Mon Apr  9 14:08:41 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 9 Apr 2012 14:08:41 -0700
Subject: [antlr-interest] grammar that separates classpath from class
	name
In-Reply-To: <1334005190.41359.YahooMailNeo@web84001.mail.mud.yahoo.com>
References: <1334003291.26846.YahooMailNeo@web84005.mail.mud.yahoo.com>
	<CACr8g8iT-Hw4vVKbe43kviFABSJd4KTha-4___stT77RCtKxuw@mail.gmail.com>
	<4F834BC8.3000203@acm.org>
	<1334005190.41359.YahooMailNeo@web84001.mail.mud.yahoo.com>
Message-ID: <33996f19a39c2e6f33cd3643a7267169@mail.gmail.com>

The ! only means don't include it in a tree that you are building. As you
are not building a tree, the answer given is not relevant to you and gives
the error you see.

In general, always use the broadest syntax and do not try to artificially
apply context to your rules.

Also, instead of:

(a DOT)? a

It is usually more efficient to use

a (DOT a)?


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Scott
> Sent: Monday, April 09, 2012 2:00 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] grammar that separates classpath from
> class name
>
> I was just about to reply and say that David's code worked
> (thanks!).? John's code should work, but for some reason I'm getting an
> exception:
>
> [ERROR] Failed to execute goal org.codehaus.mojo:antlr3-maven-
> plugin:1.0:antlr (default) on project processors:
> MojoExecutionException: Can't find template tokenRefBang.st -> [Help 1]
>
>
> I'm using version 3.0.1 of antlr because that seems to be the version
> that works with the AntlrWorks plugin in IntelliJ, and works with the
> maven plugin for building antlr grammars.? I saw this by googling (came
> from this list):
>
> You can't have both AST operators (^ and !) and rewrites in the same
> rule.
> You are using ! in a rule with rewrites. Unfortunately currently the
> error message doesn't give the location, this is a known issue. I don't
> think this will be fixed in 3.1.
>
> I don't think I'm doing any rewrites, but maybe I've accidentally
> triggered one--I'll have to re-read a tutorial that demonstrated how to
> do this.
>
> Either way, thanks for the quick replies.
>
> Scott
>
>
>
>
> ________________________________
>  From: John B. Brodie <jbb at acm.org>
> To: antlr-interest at antlr.org
> Sent: Monday, April 9, 2012 4:51 PM
> Subject: Re: [antlr-interest] grammar that separates classpath from
> class name
>
> A small tweak (UNTESTED) so that you do not need the trailing DOT on
> each usage
>
> On 04/09/2012 04:41 PM, David Boden wrote:
> > Hi Scott,
> >
> > I'm a relative Antlr newbie too, but I've just completed a successful
> > project so may be able to help.
> >
> > Would this work for you?:
> > packageDecl? ? ? ? : Identifier (DOT Identifer)*;
> qualifiedJavaType
> > : (packageDecl DOT)? javaType;
>
> packageDecl : Identifier (DOT Identifier)* DOT! ; qualifiedJavaType :
> packageDecl? javaType ;
>
> (the `!` meta suffix operator tells ANTLR not to include the
> corresponding element in the generated AST).
>
> Hope this helps...
> ? ? -jbb
>
>
> >
> > Regards,
> > Dave
> >
> >
> >
> > On 9 April 2012 21:28, Scott<jackett_dad at yahoo.com>? wrote:
> >
> >> All,
> >>
> >> I'm just starting with Antlr.? I have past experience with JavaCC,
> >> but it's been a while.
> >>
> >> I'm parsing a fully qualified java type name, and would like to
> >> differentiate the classpath from the class name.? So if I were
> parsing this:
> >>
> >> com.company.JavaType
> >>
> >> I would like to specify an expression for which the package and
> class
> >> name are distinct nodes in the parse tree.? I copied a Java 5
> grammar
> >> as a starting point, but that distinction is not made.? I could
> >> easily do this separation in a visitor, but since Antlr is so cool,
> >> I'd rather that it did the work for me.
> >>
> >> The catch is, I don't want to have the last dot character be part of
> >> the package name, and I don't want the dot to be part of the class
> >> name either.
> >>
> >> So here is what I have so far:
> >>
> >> genericTypeArgument : type | QUESTION_MARK (('extends' | 'super')
> >> type)?;
> >>
> >> type? ? ? ? ? ? : qualifiedJavaType arrayModifier* | primitiveType
> >> arrayModifier*;
> >>
> >> packageDecl? ? ? ? : (Identifier DOT)*;
> >>
> >> qualifiedJavaType? ? : packageDecl? javaType;
> >>
> >> javaType? ? ? ? : Identifier genericTypeArguments?;
> >>
> >> This works almost.? The package declaration includes the last dot.
> >> Is there a way that I can have the parser ignore(or not include)
> only
> >> the last dot in the package declaration?
> >>
> >> Thanks,
> >>
> >> Scott
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kierans777 at gmail.com  Mon Apr  9 21:18:26 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Tue, 10 Apr 2012 14:18:26 +1000
Subject: [antlr-interest] Gated semantic predicates in C tree walker causing
	exceptions
Message-ID: <4F83B492.6050503@gmail.com>

For my tree grammar, I've come across the situation where I want to 
ignore the rest of the subtree we're currently in as well as any 
subtrees of the current tree.

As part of the rule, a variable continueProcessingBlock can get set to 
false, and the actions for parts of the rule check the boolean before 
taking action.

When it comes to the part of the rule where I want to descend into child 
trees, I was wanting to use a gated semantic predicate to decide whether 
or not to as in the example below:

myTreeRule
@init {
   bool continueProcessingBlock = true;
}
  :
    // .... matcher rules for nodes in the tree
    // can set continueProcessingBlock to false

    // Do we descend into subtrees?
    ({continueProcessingBlock}?=> myTreeRule*)
  ;

However the C code generated "throws" a FailedPredicateException.  It 
was my understanding that a gated semantic predicate is evaluated and if 
the result is false, then the walker moves on as opposed to a semantic 
predicate (non gated?) which would throw the FailedPredicateException.

Is this a bug, or a misunderstanding on my part?  Is there a better way 
to achieve the outcome?

Cheers,


From toby.nance at gmail.com  Tue Apr 10 11:47:04 2012
From: toby.nance at gmail.com (Toby Nance)
Date: Tue, 10 Apr 2012 13:47:04 -0500
Subject: [antlr-interest] Reduce.g generates broken java with
	antlr-3.4-complete.jar (but not antlr-3.3-complete.jar)
Message-ID: <CAF8F_UVP8Eh0kiG0w9gyqHeL=yxM+c_RRJr6UhW3JfWjfX0CRA@mail.gmail.com>

The file walking/patterns/Reduce.g (downloadable for the book "Language
Implementation Patterns" by Terence Parr) produces invalid java code when
using antlr-3.4-complete.jar.

I'm not sure of the rights I have to redistribute the code here, so here's
the code reduced to what still causes the error.

//*********************** start of Reduce.g****

tree grammar Reduce;****

options {****

    tokenVocab=VecMath;      // use tokens from VecMath.g****

    ASTLabelType=CommonTree; // we're using CommonTree nodes****

    output=AST;              // build new ASTs from input AST****

    filter=true;             // tree pattern matching mode****

    backtrack=true;          // allow backtracking if it's needed****

}****

** **

bottomup :  multBy2 ;****

** **

multBy2****

    :   ^('*' x=INT {$x.int==2}? y=.) -> ^(SHIFT["<<"] $y INT["1"])****

    |   ^('*' a=. b=INT {$b.int==2}?) -> ^(SHIFT["<<"] $a INT["1"])****

    ;****

** **

//*********************** end of Reduce.g

**

** **


**Using antlr-3.4, this generates the invalid java code:

 **

    //*** GENERATED WITH 3.4****

** **

    public final void synpred1_Reduce_fragment() throws
RecognitionException {****

        CommonTree =null;****

        CommonTree =null;****

** **

** **

Using antlr-3.3, this generates:

    //*** GENERATED WITH 3.3****

** **

    public final void synpred1_Reduce_fragment() throws
RecognitionException {  ****

        CommonTree x=null;****

        CommonTree y=null;

From waisbrot at highfleet.com  Tue Apr 10 14:36:07 2012
From: waisbrot at highfleet.com (Nathaniel Waisbrot)
Date: Tue, 10 Apr 2012 17:36:07 -0400
Subject: [antlr-interest] Parsing large files: A trip report
Message-ID: <30A58FF3-5E1F-4768-BE46-6179F57928BD@highfleet.com>

Hello, ANTLR list.  I just finished a mini project where I used ANTLR to convert a 20-gigabyte MySQL database dump into a set of files for ingest into PostgreSQL, and I thought some of you might find my experience interesting.  Also, I had a few problems along the way, and maybe some of you can offer a guess as to what I was doing wrong.

For background, I'd found two previous threads on the subject of large files:

http://www.antlr.org/pipermail/antlr-interest/2009-March/033715.html
- Vlad wants to parse a 100MB file.  People suggest chunking the file outside of ANTLR.

http://www.antlr.org/pipermail/antlr-interest/2010-April/038129.html
- Amitesh Kumar wants to syntax-check a large file.  People suggest fixing his grammar, chunking the file outside of ANTLR, and using UnbufferedTokenStream.



I wanted ANTLR to do the parsing because SQL allows for multi-line quoted strings, so without some kind of parse you can't be sure that the ';' you're looking at signifies the end of a statement.  I tried passing the dump file to ANTLR, but discovered that ANTLRFileStream tries to read the entire file into memory.

I took a stab at rolling my own Stream class, ANTLRUnbufferedFileStream, posted here ( http://pastebin.com/gyVsquQK ).  I use Java's RandomAccessFile to handle mark/rewind.  Something must be wrong with my code, though, because when I ran it, I'd get nondeterministic behavior.  One run I'd have an unexpected token around line 20000, the next run, I'd have the same error around line 600000.  None of the errors popped up until it had been running for at least 6 minutes, so I gave up debugging it pretty quickly.

After abandoning that, I determined that since my dump was machine-generated, I could safely assume that a line beginning with "INSERT INTO" was the start of a statement and never part of a string.  That allowed me to chop the file into 23k pieces with an average of 1m characters per line and feed each one to ANTLR separately.  It took 1.5 hours to read in the file and write out the conversion.

In retrospect, I /think/ that ANTLR was the right choice, since I'll want to go back and patch in lots of holes.  (The group producing the MySQL dump is going to add a column with the 'geometry' datatype at a later date, and I'll need to figure out how to translate that into PostgreSQL.)  The grammar is fairly readable, and is doing nearly all of the work.  I'm disappointed, though, that I wasn't able to stream the complete file through ANTLR in one go.  (And the way I'm doing it isn't proof against SQL injection!)  While I was dealing with the memory problems, I was wishing that I had a 'cut' operator like in Prolog, since I'm confident that most of the parsing could be done without any back-tracking.

Suggestions or questions are welcome.

From kierans777 at gmail.com  Tue Apr 10 18:13:55 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Wed, 11 Apr 2012 11:13:55 +1000
Subject: [antlr-interest] Gated semantic predicates in C tree walker
 causing exceptions
In-Reply-To: <4F83B492.6050503@gmail.com>
References: <4F83B492.6050503@gmail.com>
Message-ID: <4F84DAD3.3070306@gmail.com>

Looking at that the Java code that is generated for the same grammar, 
again a FailedPredicateException is thrown if the gated semantic 
predicate is false

if ( !((continueProcessingBlock)) ) {
     throw new FailedPredicateException(input, "myTreeRule", 
"continueProcessingBlock");
}

According to the Antlr book (and 
http://stackoverflow.com/questions/3056441/what-is-a-semantic-predicate-in-antlr) 
gated semantic predicates shouldn't throw exceptions.

The caveat however is what I've read deals with parsers (something that 
produces an AST) not a tree walker/grammar so perhaps gated semantic 
predicates are treated differently.

Cheers,

On 23/07/64 5:59 AM, Kieran Simpson wrote:
> For my tree grammar, I've come across the situation where I want to
> ignore the rest of the subtree we're currently in as well as any
> subtrees of the current tree.
>
> As part of the rule, a variable continueProcessingBlock can get set to
> false, and the actions for parts of the rule check the boolean before
> taking action.
>
> When it comes to the part of the rule where I want to descend into child
> trees, I was wanting to use a gated semantic predicate to decide whether
> or not to as in the example below:
>
> myTreeRule
> @init {
> bool continueProcessingBlock = true;
> }
> :
> // .... matcher rules for nodes in the tree
> // can set continueProcessingBlock to false
>
> // Do we descend into subtrees?
> ({continueProcessingBlock}?=> myTreeRule*)
> ;
>
> However the C code generated "throws" a FailedPredicateException. It was
> my understanding that a gated semantic predicate is evaluated and if the
> result is false, then the walker moves on as opposed to a semantic
> predicate (non gated?) which would throw the FailedPredicateException.
>
> Is this a bug, or a misunderstanding on my part? Is there a better way
> to achieve the outcome?
>
> Cheers,
>
>

From tangeleno at gmail.com  Tue Apr 10 19:19:59 2012
From: tangeleno at gmail.com (Tangeleno)
Date: Tue, 10 Apr 2012 22:19:59 -0400
Subject: [antlr-interest] Error 206 Recursion woes
Message-ID: <4F84EA4F.6010601@gmail.com>

The error is "Ln17:7 Alternative 1: after matching input such as '$' 
'{''$' '{''$' '{''$' '{''$' '{' the decision cannot predict what comes 
next due to recursion overflow to id from accessor and to object data 
from id and to accessor from objectData"

 From what I can gather from the book pg 281 is the closest I can find 
to this problem it should be a warning and not an error. The problem is 
coming about when I add the rule objectData as an alternative to the 
param rule, which I really don't understand as because it's complaining 
about id accessor and objectData...

So my question is what am I doing wrong and what can I do to fix it 
while still allowing nested objectDatas? 
http://privatepaste.com/6611be2380 is an example of what can happen in 
this silly language and 6 levels is by no means the cap...

objectData
     :    '$' '{'accessor objectMember*'}'
     ;
objectMember
     :    ('.'|':') accessor;

accessor:    id indexer* typeCast*;

id    :    (ID|objectData);

indexer    :    '[' commaParams ']'
     ;
commaParams
     :    param (',' param)*
     ;

param    :    objectData|number|string
     ;
spaceParams
     :    param (WS param)* NewLine
     ;
typeCast:    '(' id ')';
number    :    INT|FLOAT;
string    :    STRING|.*;

From kferrio at gmail.com  Tue Apr 10 22:27:26 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Tue, 10 Apr 2012 22:27:26 -0700
Subject: [antlr-interest] Error 206 Recursion woes
In-Reply-To: <4F84EA4F.6010601@gmail.com>
References: <4F84EA4F.6010601@gmail.com>
Message-ID: <CAAfeETowmMmr50KE8tzugfQEr1N2asLH5ukRGVirSCNd6NdmKg@mail.gmail.com>

Hi.

Recursion (both in ANTLR grammars and in the target runtimes) are topics of
interest to me.  So I looked at what you wrote.  It appears that your
partial grammar spec includes some rules which are not referenced and, more
notably, omits some necessary rules.  Consequently, whatever errors I might
derive from your grammar may not actually be interesting to you.  So I took
a different view.

I dashed out two grammars -- not identical but substantially similar to
each other and remotely similar to yours -- one for antlr v3 and one for
artlr v4 [1].  I've attached the grammars with the caveat that neither is a
model to emulate on the whole.  These are toys, absolutely not
production-worthy.  But thee toys do highlight a few details which you
might consider, such as:

 - It is useful to ponder what tokens a parser really needs and hence which
lexer rules should be mere fragments.
 - Using whitespace as a token may come to tears in your grammar.  And WS
does not appear to be semantic in your language.
 - If all/some WS is truly semantic in your language (as in Python or R)
you might do well to filter before lexing, viz. "form fits function."

Both toy grammars -- each processed with and run against its respective
version of antlr -- parsed the following input as expected without error:

*   ${${${${${${${${${${${${${${${${Test15}}}}}}}}}}}}}}}}*

(I used the attached Main.java for antlr v3.4 and
org.antlr.v4.runtime.misc.TestRig for antlr v4.)

I hope you get something out of this even if it does not answer your
question directly.  Sorry to post and run, but checking email may be spotty
for me the rest of the week.

Good luck!

Kyle

[1] I probably could have written one grammar for both versions of the
antlr tool, but already I've been spoiled by how tolerant Honey Badger (aka
antlr v4) is of my misteps.  And it's been a long day.  :)


On Tue, Apr 10, 2012 at 7:19 PM, Tangeleno <tangeleno at gmail.com> wrote:

> The error is "Ln17:7 Alternative 1: after matching input such as '$'
> '{''$' '{''$' '{''$' '{''$' '{' the decision cannot predict what comes
> next due to recursion overflow to id from accessor and to object data
> from id and to accessor from objectData"
>
>  From what I can gather from the book pg 281 is the closest I can find
> to this problem it should be a warning and not an error. The problem is
> coming about when I add the rule objectData as an alternative to the
> param rule, which I really don't understand as because it's complaining
> about id accessor and objectData...
>
> So my question is what am I doing wrong and what can I do to fix it
> while still allowing nested objectDatas?
> http://privatepaste.com/6611be2380 is an example of what can happen in
> this silly language and 6 levels is by no means the cap...
>
> objectData
>     :    '$' '{'accessor objectMember*'}'
>     ;
> objectMember
>     :    ('.'|':') accessor;
>
> accessor:    id indexer* typeCast*;
>
> id    :    (ID|objectData);
>
> indexer    :    '[' commaParams ']'
>     ;
> commaParams
>     :    param (',' param)*
>     ;
>
> param    :    objectData|number|string
>     ;
> spaceParams
>     :    param (WS param)* NewLine
>     ;
> typeCast:    '(' id ')';
> number    :    INT|FLOAT;
> string    :    STRING|.*;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tlo.g
Type: application/octet-stream
Size: 1502 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120410/6fcdba41/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Main.java
Type: application/octet-stream
Size: 394 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120410/6fcdba41/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tlo.g4
Type: application/octet-stream
Size: 1116 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120410/6fcdba41/attachment-0002.obj 

From kjabari at ymail.com  Wed Apr 11 03:48:18 2012
From: kjabari at ymail.com (Khutsafalo Jabari)
Date: Wed, 11 Apr 2012 11:48:18 +0100 (BST)
Subject: [antlr-interest] ANTLR3 C Target: Unicode characters support.
Message-ID: <1334141298.68536.YahooMailNeo@web24915.mail.ird.yahoo.com>

Hi all,

Using ANTLR3 C target, I am writing a parser that accepts Unicode characters for both identifiers and string literals. What are ANTLR's limitations for characters outside the Unicode basic multilingual plane i.e. Unicode supplementary planes? Also, how do I specify these characters in the lexer?


Thanks in advance.

From jimi at temporal-wave.com  Wed Apr 11 08:02:19 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Apr 2012 08:02:19 -0700
Subject: [antlr-interest] ANTLR3 C Target: Unicode characters support.
In-Reply-To: <1334141298.68536.YahooMailNeo@web24915.mail.ird.yahoo.com>
References: <1334141298.68536.YahooMailNeo@web24915.mail.ird.yahoo.com>
Message-ID: <8076954ed05152462f8a81c1a2db0ba7@mail.gmail.com>

There are no limitations, but I think you are confusing the term Unicode
with Encoding. The lexer uses a 32 bit integer code point and can
therefore store and match the entire Unicode code-point range.

However, when you create the input stream, you must specify what the input
stream encoding is (as of version 3.4). This can be latin1, UTF8, UTF16,
UTF32 or EBCIDIC and it will auto-detect and compensate for the BOM. See
the code for the inputstream for details.

To specify a character, use '\unnnn' where nnnn is the hex code point.
Note that surrogate pairs are not specified and the input stream handles
them (see the relevant versions of the LA() routines in the source code
for details.


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Khutsafalo Jabari
> Sent: Wednesday, April 11, 2012 3:48 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR3 C Target: Unicode characters support.
>
> Hi all,
>
> Using ANTLR3 C target, I am writing a parser that accepts Unicode
> characters for both identifiers and string literals. What are ANTLR's
> limitations for characters outside the Unicode basic multilingual plane
> i.e. Unicode supplementary planes? Also, how do I specify these
> characters in the lexer?
>
>
> Thanks in advance.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From tangeleno at gmail.com  Wed Apr 11 15:28:05 2012
From: tangeleno at gmail.com (Tangeleno)
Date: Wed, 11 Apr 2012 18:28:05 -0400
Subject: [antlr-interest] Error 206 Recursion woes
In-Reply-To: <CAAfeETowmMmr50KE8tzugfQEr1N2asLH5ukRGVirSCNd6NdmKg@mail.gmail.com>
References: <4F84EA4F.6010601@gmail.com>
	<CAAfeETowmMmr50KE8tzugfQEr1N2asLH5ukRGVirSCNd6NdmKg@mail.gmail.com>
Message-ID: <4F860575.9040701@gmail.com>

Thanks for the tips I figured out what the issue was, it was 'string   
  :    STRING|.*;'

I got that part working but now I'm having another issue... at times I 
need to pay attention to whitespace as they are used to delimit 
arguments at certain points in time.
But I can't seem to find a way to have the parser switch channels over 
to the hidden channel to check for whitespaces. The only option seems to 
be to take WS off the hidden channel but then for the parts where I 
don't care about whitespace I would have to add WS* all over the place 
to prevent 'UnwantedTokenExceptions'

Attached is an example grammar.

Kyle Ferrio wrote:
> Hi.
>
> Recursion (both in ANTLR grammars and in the target runtimes) are 
> topics of interest to me.  So I looked at what you wrote.  It appears 
> that your partial grammar spec includes some rules which are not 
> referenced and, more notably, omits some necessary rules. 
>  Consequently, whatever errors I might derive from your grammar may 
> not actually be interesting to you.  So I took a different view.
>
> I dashed out two grammars -- not identical but substantially similar 
> to each other and remotely similar to yours -- one for antlr v3 and 
> one for artlr v4 [1].  I've attached the grammars with the caveat that 
> neither is a model to emulate on the whole.  These are toys, 
> absolutely not production-worthy.  But thee toys do highlight a few 
> details which you might consider, such as:
>
>  - It is useful to ponder what tokens a parser really needs and hence 
> which lexer rules should be mere fragments.
>  - Using whitespace as a token may come to tears in your grammar.  And 
> WS does not appear to be semantic in your language.
>  - If all/some WS is truly semantic in your language (as in Python or 
> R) you might do well to filter before lexing, viz. "form fits function."
>
> Both toy grammars -- each processed with and run against its 
> respective version of antlr -- parsed the following input as expected 
> without error:
>
> *   ${${${${${${${${${${${${${${${${Test15}}}}}}}}}}}}}}}}*
>
> (I used the attached Main.java for antlr v3.4 and 
> org.antlr.v4.runtime.misc.TestRig for antlr v4.)
>
> I hope you get something out of this even if it does not answer your 
> question directly.  Sorry to post and run, but checking email may be 
> spotty for me the rest of the week.
>
> Good luck!
>
> Kyle
>
> [1] I probably could have written one grammar for both versions of the 
> antlr tool, but already I've been spoiled by how tolerant Honey Badger 
> (aka antlr v4) is of my misteps.  And it's been a long day.  :)
>
>
> On Tue, Apr 10, 2012 at 7:19 PM, Tangeleno <tangeleno at gmail.com 
> <mailto:tangeleno at gmail.com>> wrote:
>
>     The error is "Ln17:7 Alternative 1: after matching input such as '$'
>     '{''$' '{''$' '{''$' '{''$' '{' the decision cannot predict what comes
>     next due to recursion overflow to id from accessor and to object data
>     from id and to accessor from objectData"
>
>      From what I can gather from the book pg 281 is the closest I can find
>     to this problem it should be a warning and not an error. The
>     problem is
>     coming about when I add the rule objectData as an alternative to the
>     param rule, which I really don't understand as because it's
>     complaining
>     about id accessor and objectData...
>
>     So my question is what am I doing wrong and what can I do to fix it
>     while still allowing nested objectDatas?
>     http://privatepaste.com/6611be2380 is an example of what can happen in
>     this silly language and 6 levels is by no means the cap...
>
>     objectData
>         :    '$' '{'accessor objectMember*'}'
>         ;
>     objectMember
>         :    ('.'|':') accessor;
>
>     accessor:    id indexer* typeCast*;
>
>     id    :    (ID|objectData);
>
>     indexer    :    '[' commaParams ']'
>         ;
>     commaParams
>         :    param (',' param)*
>         ;
>
>     param    :    objectData|number|string
>         ;
>     spaceParams
>         :    param (WS param)* NewLine
>         ;
>     typeCast:    '(' id ')';
>     number    :    INT|FLOAT;
>     string    :    STRING|.*;
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

-------------- next part --------------
grammar test;
options {
	backtrack=true;
}

//Test with "	[1,22,333,a b c,"A B C"]" minus the outer quotes and you'll get
//the unwantedtokenexception
//Uncomment WS* to get rid of the exception
indexer	:	/*WS**/LSquare commaArgs RSquare
	;

//Test with "Arg1 ThisIsArg2 1 22 333 "A B C"" minus the outer quotes and it works
// as desired. But if you uncomment {$channel=HIDDEN;} in NewLine and whitespace
// it no longer works properly
spaceArgs
	:	(value|newLineSpaceUnquotedString) (WS (value|newLineSpaceUnquotedString))*
	;

commaArgs
	:	(value|commaSquareUnquotedString) (Comma(value|commaSquareUnquotedString))*
	;

newLineSpaceUnquotedString
	:	( options {greedy=false;} : ~(NewLine|WS))+
	;
	
commaSquareUnquotedString
	:	( options {greedy=false;} : ~(Comma|RSquare|NewLine))+
	;
	
value	:	STRING|INT|FLOAT
	;

NewLine	:	(/*{$channel=HIDDEN;}*/'\r'? '\n')
	;
	
Comma	:	','
	;

RSquare	:	']'
	;

LSquare	:	'['
	;
	
INT :	'0'..'9'+
    ;

FLOAT
    :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
    |   '.' ('0'..'9')+ EXPONENT?
    |   ('0'..'9')+ EXPONENT
    ;

WS  :   ( ' '
        | '\t'
        ) //{$channel=HIDDEN;}
    ;

STRING
    :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
    ;

fragment
EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;
    
Other 	:	.;

From parrt at cs.usfca.edu  Wed Apr 11 16:43:09 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Apr 2012 16:43:09 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
Message-ID: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>

Hiya,

I've  then speaking with the awesome people at stack exchange and they were okay with me pointing the support list at

http://stackoverflow.com/questions/tagged/antlr 

rather than using the mailing list. Well, we would have to phase it out or something and keep the archives available. Part of the issue is that people use both at the moment. there is no single place to go for questions.

Basically, I'm trying to reduce my system administration load. I've turned off p4 in favor of github and have turned off jira in favor of github's bug tracker.  I tried to move the confluence wiki to the on demand service, but I'm not sure it's ready for prime time yet so I backed off.

Moving to that website has a lot of advantages over an old-school mailing list, if you've ever used it. You can also treat it like a mailing list by asking for events when someone posts an antlr-tagged posting. It's set up very nicely for question-and-answer. It's also easier for people to post a question because they don't have to sign up for our mailing list. there is a good chance that they will have an account already at stackoverflow.com

Does anybody see any bears in the woods that I'm not? issues? those in favor?

Ter

From jimi at temporal-wave.com  Wed Apr 11 17:44:21 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Apr 2012 17:44:21 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <7E6707CB-4F05-457A-A3E8-9600D8227053@temporal-wave.com>

Good idea I think. 

Jkm

On Apr 11, 2012, at 4:43 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hiya,
> 
> I've  then speaking with the awesome people at stack exchange and they were okay with me pointing the support list at
> 
> http://stackoverflow.com/questions/tagged/antlr 
> 
> rather than using the mailing list. Well, we would have to phase it out or something and keep the archives available. Part of the issue is that people use both at the moment. there is no single place to go for questions.
> 
> Basically, I'm trying to reduce my system administration load. I've turned off p4 in favor of github and have turned off jira in favor of github's bug tracker.  I tried to move the confluence wiki to the on demand service, but I'm not sure it's ready for prime time yet so I backed off.
> 
> Moving to that website has a lot of advantages over an old-school mailing list, if you've ever used it. You can also treat it like a mailing list by asking for events when someone posts an antlr-tagged posting. It's set up very nicely for question-and-answer. It's also easier for people to post a question because they don't have to sign up for our mailing list. there is a good chance that they will have an account already at stackoverflow.com
> 
> Does anybody see any bears in the woods that I'm not? issues? those in favor?
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mark.mandel at gmail.com  Wed Apr 11 18:22:58 2012
From: mark.mandel at gmail.com (Mark Mandel)
Date: Thu, 12 Apr 2012 11:22:58 +1000
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <7E6707CB-4F05-457A-A3E8-9600D8227053@temporal-wave.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<7E6707CB-4F05-457A-A3E8-9600D8227053@temporal-wave.com>
Message-ID: <CAFiDPQdrkzJj37dLH+G3AQ=5UVZb5zQxs-N6L84aV-_a=DiR7g@mail.gmail.com>

Honestly - I'll miss seeing the updates of what people are up to in my
email :)

What are you going to do for announcements? Keep the mailing list for that?

Mark

On Thu, Apr 12, 2012 at 10:44 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Good idea I think.
>
> Jkm
>
> On Apr 11, 2012, at 4:43 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> > Hiya,
> >
> > I've  then speaking with the awesome people at stack exchange and they
> were okay with me pointing the support list at
> >
> > http://stackoverflow.com/questions/tagged/antlr
> >
> > rather than using the mailing list. Well, we would have to phase it out
> or something and keep the archives available. Part of the issue is that
> people use both at the moment. there is no single place to go for questions.
> >
> > Basically, I'm trying to reduce my system administration load. I've
> turned off p4 in favor of github and have turned off jira in favor of
> github's bug tracker.  I tried to move the confluence wiki to the on demand
> service, but I'm not sure it's ready for prime time yet so I backed off.
> >
> > Moving to that website has a lot of advantages over an old-school
> mailing list, if you've ever used it. You can also treat it like a mailing
> list by asking for events when someone posts an antlr-tagged posting. It's
> set up very nicely for question-and-answer. It's also easier for people to
> post a question because they don't have to sign up for our mailing list.
> there is a good chance that they will have an account already at
> stackoverflow.com
> >
> > Does anybody see any bears in the woods that I'm not? issues? those in
> favor?
> >
> > Ter
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

2 Devs from Down Under Podcast
http://www.2ddu.com/

From kferrio at gmail.com  Wed Apr 11 19:13:14 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Wed, 11 Apr 2012 19:13:14 -0700
Subject: [antlr-interest] Error 206 Recursion woes
In-Reply-To: <4F860575.9040701@gmail.com>
References: <4F84EA4F.6010601@gmail.com>
	<CAAfeETowmMmr50KE8tzugfQEr1N2asLH5ukRGVirSCNd6NdmKg@mail.gmail.com>
	<4F860575.9040701@gmail.com>
Message-ID: <CAAfeETomy0F2LgwzUuk1-Xz4-Ec10JPbWqTa-cn7f6QVcqE0+w@mail.gmail.com>

Hi again,

I don't claim to know your intended language, but you might discover a more
elegant approach.  I'm not yet convinced that whitespace is semantic in
your language.

Here is a test: suppose the input stream comprises text recognized by the
lexer as any two tokens T1 and T2 chosen from your language definition and
separated by a single non-empty unit (e.g. character) W of whitespace.
Note the production P of the parser acting on the token stream.  Now
replace W with W' also not null but orthographically distinct from W (e.g.
make it two whitespaces, W'=WW, but it could also be W plus tab or any
other whitespace), run the lexer and parse to produce P'.  If P=P' then
whitespace is not semantic.  (Note that the test requires considering all
valid ordered pairs of T1 and T2 and the proof proceeds by induction.
Details omitted.)

If whitespace really is semantic in your language, then you have to work
through all the possibile meanings and hope you can reduce this to a
manageable set of rules.  Typically in such languages not all whitespace is
equivalent.  Ask anyone who has wrangled with makefiles or certain HTML
templating engines.  :)  Not fun.

If whitespace is not semantic -- and I still think that's the case here --
then you can just throw whitespace away.  Really.  Remember, the parser
just gets a sequence of tokens.  Nothing is needed to delimit tokens.

If I've truly missed the intent of your language, then you might have a
look at a parser for Python and see how semantic whitespace is handled
there.

Kyle
On Apr 11, 2012 3:28 PM, "Tangeleno" <tangeleno at gmail.com> wrote:

> Thanks for the tips I figured out what the issue was, it was 'string    :
>    STRING|.*;'
>
> I got that part working but now I'm having another issue... at times I
> need to pay attention to whitespace as they are used to delimit arguments
> at certain points in time.
> But I can't seem to find a way to have the parser switch channels over to
> the hidden channel to check for whitespaces. The only option seems to be to
> take WS off the hidden channel but then for the parts where I don't care
> about whitespace I would have to add WS* all over the place to prevent
> 'UnwantedTokenExceptions'
>
> Attached is an example grammar.
>
> Kyle Ferrio wrote:
>
>> Hi.
>>
>> Recursion (both in ANTLR grammars and in the target runtimes) are topics
>> of interest to me.  So I looked at what you wrote.  It appears that your
>> partial grammar spec includes some rules which are not referenced and, more
>> notably, omits some necessary rules.  Consequently, whatever errors I might
>> derive from your grammar may not actually be interesting to you.  So I took
>> a different view.
>>
>> I dashed out two grammars -- not identical but substantially similar to
>> each other and remotely similar to yours -- one for antlr v3 and one for
>> artlr v4 [1].  I've attached the grammars with the caveat that neither is a
>> model to emulate on the whole.  These are toys, absolutely not
>> production-worthy.  But thee toys do highlight a few details which you
>> might consider, such as:
>>
>>  - It is useful to ponder what tokens a parser really needs and hence
>> which lexer rules should be mere fragments.
>>  - Using whitespace as a token may come to tears in your grammar.  And WS
>> does not appear to be semantic in your language.
>>  - If all/some WS is truly semantic in your language (as in Python or R)
>> you might do well to filter before lexing, viz. "form fits function."
>>
>> Both toy grammars -- each processed with and run against its respective
>> version of antlr -- parsed the following input as expected without error:
>>
>> *   ${${${${${${${${${${${${${${${**${Test15}}}}}}}}}}}}}}}}*
>>
>> (I used the attached Main.java for antlr v3.4 and
>> org.antlr.v4.runtime.misc.**TestRig for antlr v4.)
>>
>> I hope you get something out of this even if it does not answer your
>> question directly.  Sorry to post and run, but checking email may be spotty
>> for me the rest of the week.
>>
>> Good luck!
>>
>> Kyle
>>
>> [1] I probably could have written one grammar for both versions of the
>> antlr tool, but already I've been spoiled by how tolerant Honey Badger (aka
>> antlr v4) is of my misteps.  And it's been a long day.  :)
>>
>>
>> On Tue, Apr 10, 2012 at 7:19 PM, Tangeleno <tangeleno at gmail.com <mailto:
>> tangeleno at gmail.com>> wrote:
>>
>>    The error is "Ln17:7 Alternative 1: after matching input such as '$'
>>    '{''$' '{''$' '{''$' '{''$' '{' the decision cannot predict what comes
>>    next due to recursion overflow to id from accessor and to object data
>>    from id and to accessor from objectData"
>>
>>     From what I can gather from the book pg 281 is the closest I can find
>>    to this problem it should be a warning and not an error. The
>>    problem is
>>    coming about when I add the rule objectData as an alternative to the
>>    param rule, which I really don't understand as because it's
>>    complaining
>>    about id accessor and objectData...
>>
>>    So my question is what am I doing wrong and what can I do to fix it
>>    while still allowing nested objectDatas?
>>    http://privatepaste.com/**6611be2380<http://privatepaste.com/6611be2380>is an example of what can happen in
>>    this silly language and 6 levels is by no means the cap...
>>
>>    objectData
>>        :    '$' '{'accessor objectMember*'}'
>>        ;
>>    objectMember
>>        :    ('.'|':') accessor;
>>
>>    accessor:    id indexer* typeCast*;
>>
>>    id    :    (ID|objectData);
>>
>>    indexer    :    '[' commaParams ']'
>>        ;
>>    commaParams
>>        :    param (',' param)*
>>        ;
>>
>>    param    :    objectData|number|string
>>        ;
>>    spaceParams
>>        :    param (WS param)* NewLine
>>        ;
>>    typeCast:    '(' id ')';
>>    number    :    INT|FLOAT;
>>    string    :    STRING|.*;
>>
>>    List: http://www.antlr.org/mailman/**listinfo/antlr-interest<http://www.antlr.org/mailman/listinfo/antlr-interest>
>>    Unsubscribe:
>>    http://www.antlr.org/mailman/**options/antlr-interest/your-**
>> email-address<http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>>
>>
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From kferrio at gmail.com  Wed Apr 11 19:37:12 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Wed, 11 Apr 2012 19:37:12 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <CAAfeETqzoz42LqfhwcqfEieojLdDMX_NBJdj+h6-r+D-5ARWog@mail.gmail.com>

Sounds like an interesting experiment.  The signal/noise ratio of this list
is typically higher than what I've seen at SO.   Maybe antlr can give SO a
boost.  :)

Kyle
 On Apr 11, 2012 4:43 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

> Hiya,
>
> I've  then speaking with the awesome people at stack exchange and they
> were okay with me pointing the support list at
>
> http://stackoverflow.com/questions/tagged/antlr
>
> rather than using the mailing list. Well, we would have to phase it out or
> something and keep the archives available. Part of the issue is that people
> use both at the moment. there is no single place to go for questions.
>
> Basically, I'm trying to reduce my system administration load. I've turned
> off p4 in favor of github and have turned off jira in favor of github's bug
> tracker.  I tried to move the confluence wiki to the on demand service, but
> I'm not sure it's ready for prime time yet so I backed off.
>
> Moving to that website has a lot of advantages over an old-school mailing
> list, if you've ever used it. You can also treat it like a mailing list by
> asking for events when someone posts an antlr-tagged posting. It's set up
> very nicely for question-and-answer. It's also easier for people to post a
> question because they don't have to sign up for our mailing list. there is
> a good chance that they will have an account already at stackoverflow.com
>
> Does anybody see any bears in the woods that I'm not? issues? those in
> favor?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Norman at dunbar-it.co.uk  Wed Apr 11 23:28:38 2012
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Thu, 12 Apr 2012 07:28:38 +0100
Subject: [antlr-interest] contemplating a move of mailing list
	to	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <4F867616.3090005@dunbar-it.co.uk>

On 12/04/12 00:43, Terence Parr wrote:
> Hiya,
Morning,

>...

> Basically, I'm trying to reduce my system administration load.
I can understand that need!

> Does anybody see any bears in the woods that I'm not? issues? those in favor?
I'm much more of a user than contributor but I have to say  that I much 
prefer emails rather than having to go to a website and look for stuff, 
especially when I'm offline.

At the moment, I have the entire ANTLR mailing list contents stored 
locally on my laptop, going back to when I subscribed - October 2011 - 
and I can search it easily without needing an internet connection.

With the web site, there are 914 current questions - but I only see 15 
of them per screen. It looks nice, but I much prefer content to looks!

So, my vote is with the mailing list. (Sorry!)

I am subscribed to a number of support lists - for work and pleasure - 
and by far the best ones, for me, are the ones where the contents hits 
my inbox without me doing anything, other than setting up a rule to move 
related stuff to the appropriate folder of course!


Cheers,
Norm.

-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767

From kjabari at ymail.com  Thu Apr 12 02:17:45 2012
From: kjabari at ymail.com (Khutsafalo Jabari)
Date: Thu, 12 Apr 2012 10:17:45 +0100 (BST)
Subject: [antlr-interest] ANTLR3 C Target: Unicode characters support.
In-Reply-To: <8076954ed05152462f8a81c1a2db0ba7@mail.gmail.com>
References: <1334141298.68536.YahooMailNeo@web24915.mail.ird.yahoo.com>
	<8076954ed05152462f8a81c1a2db0ba7@mail.gmail.com>
Message-ID: <1334222265.42671.YahooMailNeo@web24909.mail.ird.yahoo.com>

Hi Jim,

Thanks for your response. Sorry, I'm not sure what you mean by "surrogate pairs are not specified and the input stream handles them".

The '\unnnn' syntax works fine for characters in the BMP, but what about characters in the supplementary planes, which can't be expressed using 4 hex digits?

Elsewhere on this mailing list, it's been suggested that such characters should be encoded in the grammar file as surrogate pairs. For example, the unicode codepoint U+2008A would be expressed as '\uD840\uDC8A'. This appears to work OK when using the Java target, but when I use the C target I get a lexer error. I'm using UTF-8 as the input encoding and used the appropriate flag when creating the input stream.

In theory, should this work or I am doing something obviously wrong? I can provide my test program, if required.

Regards,

Khutsafalo


________________________________
 From: Jim Idle <jimi at temporal-wave.com>
To: antlr-interest at antlr.org 
Sent: Wednesday, 11 April 2012, 16:02
Subject: Re: [antlr-interest] ANTLR3 C Target: Unicode characters support.
 
There are no limitations, but I think you are confusing the term Unicode
with Encoding. The lexer uses a 32 bit integer code point and can
therefore store and match the entire Unicode code-point range.

However, when you create the input stream, you must specify what the input
stream encoding is (as of version 3.4). This can be latin1, UTF8, UTF16,
UTF32 or EBCIDIC and it will auto-detect and compensate for the BOM. See
the code for the inputstream for details.

To specify a character, use '\unnnn' where nnnn is the hex code point.
Note that surrogate pairs are not specified and the input stream handles
them (see the relevant versions of the LA() routines in the source code
for details.


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Khutsafalo Jabari
> Sent: Wednesday, April 11, 2012 3:48 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR3 C Target: Unicode characters support.
>
> Hi all,
>
> Using ANTLR3 C target, I am writing a parser that accepts Unicode
> characters for both identifiers and string literals. What are ANTLR's
> limitations for characters outside the Unicode basic multilingual plane
> i.e. Unicode supplementary planes? Also, how do I specify these
> characters in the lexer?
>
>
> Thanks in advance.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ibre5041 at ibrezina.net  Thu Apr 12 02:38:37 2012
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Thu, 12 Apr 2012 11:38:37 +0200
Subject: [antlr-interest] Parsing large files: A trip report
In-Reply-To: <30A58FF3-5E1F-4768-BE46-6179F57928BD@highfleet.com>
References: <30A58FF3-5E1F-4768-BE46-6179F57928BD@highfleet.com>
Message-ID: <20120412113837.q997rvazfccws88s@webmail.kamm.cz>

Hello
just a quick comment.
I you use C target you can use mmap. The whole file will be loaded into
your processes address space, all the reads (and pre-fetches) will be  
handled by OS kernel.

In Java target you can use nio's MappedByteBuffer, which is an  
equivalent for mmap.
For some unknown reason Java designers decided, that max. size for  
Java "mmap" is 2GB.

Ivan

Quoting Nathaniel Waisbrot <waisbrot at highfleet.com>:

> Hello, ANTLR list.  I just finished a mini project where I used   
> ANTLR to convert a 20-gigabyte MySQL database dump into a set of   
> files for ingest into PostgreSQL, and I thought some of you might   
> find my experience interesting.  Also, I had a few problems along   
> the way, and maybe some of you can offer a guess as to what I was   
> doing wrong.
>
> For background, I'd found two previous threads on the subject of large files:
>
> http://www.antlr.org/pipermail/antlr-interest/2009-March/033715.html
> - Vlad wants to parse a 100MB file.  People suggest chunking the   
> file outside of ANTLR.
>
> http://www.antlr.org/pipermail/antlr-interest/2010-April/038129.html
> - Amitesh Kumar wants to syntax-check a large file.  People suggest   
> fixing his grammar, chunking the file outside of ANTLR, and using   
> UnbufferedTokenStream.
>
>
>
> I wanted ANTLR to do the parsing because SQL allows for multi-line   
> quoted strings, so without some kind of parse you can't be sure that  
>  the ';' you're looking at signifies the end of a statement.  I  
> tried  passing the dump file to ANTLR, but discovered that  
> ANTLRFileStream  tries to read the entire file into memory.
>
> I took a stab at rolling my own Stream class,   
> ANTLRUnbufferedFileStream, posted here (   
> http://pastebin.com/gyVsquQK ).  I use Java's RandomAccessFile to   
> handle mark/rewind.  Something must be wrong with my code, though,   
> because when I ran it, I'd get nondeterministic behavior.  One run   
> I'd have an unexpected token around line 20000, the next run, I'd   
> have the same error around line 600000.  None of the errors popped   
> up until it had been running for at least 6 minutes, so I gave up   
> debugging it pretty quickly.
>
> After abandoning that, I determined that since my dump was   
> machine-generated, I could safely assume that a line beginning with   
> "INSERT INTO" was the start of a statement and never part of a   
> string.  That allowed me to chop the file into 23k pieces with an   
> average of 1m characters per line and feed each one to ANTLR   
> separately.  It took 1.5 hours to read in the file and write out the  
>  conversion.
>
> In retrospect, I /think/ that ANTLR was the right choice, since I'll  
>  want to go back and patch in lots of holes.  (The group producing   
> the MySQL dump is going to add a column with the 'geometry' datatype  
>  at a later date, and I'll need to figure out how to translate that   
> into PostgreSQL.)  The grammar is fairly readable, and is doing   
> nearly all of the work.  I'm disappointed, though, that I wasn't   
> able to stream the complete file through ANTLR in one go.  (And the   
> way I'm doing it isn't proof against SQL injection!)  While I was   
> dealing with the memory problems, I was wishing that I had a 'cut'   
> operator like in Prolog, since I'm confident that most of the   
> parsing could be done without any back-tracking.
>
> Suggestions or questions are welcome.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From forumer at smartmobili.com  Thu Apr 12 03:29:32 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Thu, 12 Apr 2012 12:29:32 +0200
Subject: [antlr-interest] Parsing line by line and multiline comments
Message-ID: <e77d82f5ea5733258095037ba13b2aea@smartmobili.com>

Hi,

I am trying to parse some java source code and I have some issues 
because parsing
is done by creating a new lexer for each line that is transmitted by 
the IDE.
The problem is with multi-line comments because in the original grammar 
it tries
to match the closing */ token.
I have two strategies to resolve this problem

1) Parse the entire file at least once to indentify where are the 
multiline comments
    I will try this approach once I have resolved the problem 2) to 
compare performance.

2) Try to modify the grammar to not match the */ and maintain a 
variable where I store
    a flag to know if I am inside a block comment. So I have modified 
the java 1.6 grammar like this :

COMMENT
	:	'/*'
		{
			InBlockComment = true;
			$channel = Hidden;
		}
		(
			~('*')
			|	('*' ~'/') => '*'
		)*
		('*/' {InBlockComment = false;})?
	;

and in the code I have

public override IToken NextToken()
         {
             IToken next = base.NextToken();

             if ( next.Type != EOF && InBlockComment && next.Type != 
COMMENT )
             {
                 if ( next.Type == END_BLOCK_COMMENT )
                     InBlockComment = false;

                 next.Type = COMMENT;
                 next.Channel = Hidden;
             }

             return next;
         }

The problem I have is for instance with the following code :

/*
* ' I am inside a comment block and I am not a char literal
*/

because when I look at the NextToken values during each step I get :
/* => COMMENT (we set InBlockComment  to true - see above)
*  => STAR but inside NextToken we force it to be a COMMENT
EXCEPTION here because we end inside the CHARLITERAL and it tries to 
find the matching '

So my question is how can I "force" the lexer to be in another state ? 
In my case
once I have detected I am in a block comment I would like it parses the 
line starting in that state.

Thanks











From forumer at smartmobili.com  Thu Apr 12 05:48:16 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Thu, 12 Apr 2012 14:48:16 +0200
Subject: [antlr-interest] Parsing line by line and multiline comments
In-Reply-To: <e77d82f5ea5733258095037ba13b2aea@smartmobili.com>
References: <e77d82f5ea5733258095037ba13b2aea@smartmobili.com>
Message-ID: <dfe716d47ce39c949e126535704e1ad5@smartmobili.com>

I also tried to define a ANYCHAR rule like this :

ANYCHAR
     :   .
     ;

and in the mTokens() lexer methods I tried to eat the token when I am 
inside a block comment :


public override void mTokens()
{
	...

         // 9 corresponds to END_BLOCK_COMMENT (*/)
         if (InBlockComment && alt34 != 9)
         {
             mANYCHAR(); if (state.failed) return;
         }
         ...
}

but I get an exception inside WS rule :

if ((input.LA(1)>='\t' && input.LA(1)<='\n')||(input.LA(1)>='\f' && 
input.LA(1)<='\r')||input.LA(1)==' ')
			{
				input.Consume();
			state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new 
MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}


So I suppose this is not so easy to hack the lexer.
What is the right approach for this problem ?

From jmurray at aerotech.com  Thu Apr 12 06:02:10 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 12 Apr 2012 09:02:10 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFFA3@EXCH-VIRTUAL.aerotechad.com>

I'm all for it. At this point, Stack Overflow is a proven system for the 
question and answer(s) format. If you love email notifications, you can 
subscribe to the antlr tag. I'd prefer to add the antlr tag rss feed to 
Google Reader to follow along with current events, and subscribe to 
specific questions that interest me. Seems like a more flexible option 
than this mailing list, and it's probably a step in the right direction.

-Justin

On 4/11/2012 7:43 PM, Terence Parr wrote:
> Hiya,
>
> I've  then speaking with the awesome people at stack exchange and they were okay with me pointing the support list at
>
> http://stackoverflow.com/questions/tagged/antlr
>
> rather than using the mailing list. Well, we would have to phase it out or something and keep the archives available. Part of the issue is that people use both at the moment. there is no single place to go for questions.
>
> Basically, I'm trying to reduce my system administration load. I've turned off p4 in favor of github and have turned off jira in favor of github's bug tracker.  I tried to move the confluence wiki to the on demand service, but I'm not sure it's ready for prime time yet so I backed off.
>
> Moving to that website has a lot of advantages over an old-school mailing list, if you've ever used it. You can also treat it like a mailing list by asking for events when someone posts an antlr-tagged posting. It's set up very nicely for question-and-answer. It's also easier for people to post a question because they don't have to sign up for our mailing list. there is a good chance that they will have an account already at stackoverflow.com
>
> Does anybody see any bears in the woods that I'm not? issues? those in favor?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Thu Apr 12 08:11:19 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2012 08:11:19 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAFiDPQdrkzJj37dLH+G3AQ=5UVZb5zQxs-N6L84aV-_a=DiR7g@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<7E6707CB-4F05-457A-A3E8-9600D8227053@temporal-wave.com>
	<CAFiDPQdrkzJj37dLH+G3AQ=5UVZb5zQxs-N6L84aV-_a=DiR7g@mail.gmail.com>
Message-ID: <C1E28A68-F38F-43D9-8BA1-D3FA57CD2A8C@cs.usfca.edu>

hiya. you can easily follow tags and get email from SO.com :)
Ter
On Apr 11, 2012, at 6:22 PM, Mark Mandel wrote:

> Honestly - I'll miss seeing the updates of what people are up to in my
> email :)
> 
> What are you going to do for announcements? Keep the mailing list for that?
> 
> Mark
> 
> On Thu, Apr 12, 2012 at 10:44 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> 
>> Good idea I think.
>> 
>> Jkm
>> 
>> On Apr 11, 2012, at 4:43 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> 
>>> Hiya,
>>> 
>>> I've  then speaking with the awesome people at stack exchange and they
>> were okay with me pointing the support list at
>>> 
>>> http://stackoverflow.com/questions/tagged/antlr
>>> 
>>> rather than using the mailing list. Well, we would have to phase it out
>> or something and keep the archives available. Part of the issue is that
>> people use both at the moment. there is no single place to go for questions.
>>> 
>>> Basically, I'm trying to reduce my system administration load. I've
>> turned off p4 in favor of github and have turned off jira in favor of
>> github's bug tracker.  I tried to move the confluence wiki to the on demand
>> service, but I'm not sure it's ready for prime time yet so I backed off.
>>> 
>>> Moving to that website has a lot of advantages over an old-school
>> mailing list, if you've ever used it. You can also treat it like a mailing
>> list by asking for events when someone posts an antlr-tagged posting. It's
>> set up very nicely for question-and-answer. It's also easier for people to
>> post a question because they don't have to sign up for our mailing list.
>> there is a good chance that they will have an account already at
>> stackoverflow.com
>>> 
>>> Does anybody see any bears in the woods that I'm not? issues? those in
>> favor?
>>> 
>>> Ter
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> 
> -- 
> E: mark.mandel at gmail.com
> T: http://www.twitter.com/neurotic
> W: www.compoundtheory.com
> 
> 2 Devs from Down Under Podcast
> http://www.2ddu.com/
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Apr 12 08:12:51 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2012 08:12:51 -0700
Subject: [antlr-interest] contemplating a move of mailing list
	to	stackoverflow.com
In-Reply-To: <4F867616.3090005@dunbar-it.co.uk>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<4F867616.3090005@dunbar-it.co.uk>
Message-ID: <69B5F0A7-AA13-437C-A486-99AD36F41E12@cs.usfca.edu>

I think following the tag will get you the "event" you need.  i think their search will be better than what we have but it won't be offline :(
T
On Apr 11, 2012, at 11:28 PM, Norman Dunbar wrote:

> On 12/04/12 00:43, Terence Parr wrote:
>> Hiya,
> Morning,
> 
>> ...
> 
>> Basically, I'm trying to reduce my system administration load.
> I can understand that need!
> 
>> Does anybody see any bears in the woods that I'm not? issues? those in favor?
> I'm much more of a user than contributor but I have to say  that I much 
> prefer emails rather than having to go to a website and look for stuff, 
> especially when I'm offline.
> 
> At the moment, I have the entire ANTLR mailing list contents stored 
> locally on my laptop, going back to when I subscribed - October 2011 - 
> and I can search it easily without needing an internet connection.
> 
> With the web site, there are 914 current questions - but I only see 15 
> of them per screen. It looks nice, but I much prefer content to looks!
> 
> So, my vote is with the mailing list. (Sorry!)
> 
> I am subscribed to a number of support lists - for work and pleasure - 
> and by far the best ones, for me, are the ones where the contents hits 
> my inbox without me doing anything, other than setting up a rule to move 
> related stuff to the appropriate folder of course!
> 
> 
> Cheers,
> Norm.
> 
> -- 
> Norman Dunbar
> Dunbar IT Consultants Ltd
> 
> Registered address:
> Thorpe House
> 61 Richardshaw Lane
> Pudsey
> West Yorkshire
> United Kingdom
> LS28 7EL
> 
> Company Number: 05132767
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From richardmatthias at gmail.com  Thu Apr 12 08:46:23 2012
From: richardmatthias at gmail.com (Richard Matthias)
Date: Thu, 12 Apr 2012 16:46:23 +0100
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <CA+4QypwCsphu3Ph2u9OtKXHy9tznoQg-Vuxqz4g7-z-6VhrWVQ@mail.gmail.com>

Getting people to ask questions on SO makes sense, but bear in mind that
the whole design of SO is actively hostile to any kind of debate and so
it's fine if a question has one specific answer like "where is the
ambiguity that ANTLR is complaining about here?", but it really gets in the
way when someone needs more general help with input from more than one
person. Essentially you have a tree of depth one with the question as the
root and each answer as a leaf - although more than one person can answer,
the ordering is changed by votes and changed randomly when there are no
votes.

They do have comments on both the question and each answer that are ordered
chronologically - these were added as a 'sink' to dissuade people from
getting into debates in the answers themselves, but they are limited in
size and editability in order to further be hostile to the users desire to
actually communicate with eachother.

And of course if you want to announce anything or get feedback like this
thread, you'll still need a mailing list or forum of your own.

Personally I use ANTLR, but I don't post on this so I don't know if my
opinion counts much. However, I read (or at least skim) every mailing list
thread. I probably won't see any SO questions because I don't use the site
that much any more due to the way it tries to turn people into faceless
question-answering automatons.

On Thu, Apr 12, 2012 at 12:43 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> Does anybody see any bears in the woods that I'm not? issues? those in
> favor?
>
> Ter
>
>

From jmjones5 at gmail.com  Thu Apr 12 09:43:50 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Thu, 12 Apr 2012 17:43:50 +0100
Subject: [antlr-interest] Whitespace matching
Message-ID: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>

Hi ANTLR reading list,

I'm fairly new to ANTLR, and all it's oddities, and I'm having issues with
whitespace matching. I have a file which begins with "\r\n" and everytime I
try to run my parser over the file I get the error "line 1:0 mismatched
input '\r\n' expecting WHITESPACE" however since both '\r' and '\n' are in
the WHITESPACE rule and allowing it to be 0 or more over all alternatives I
would expect it to match '\r\n'. I do find that replacing the first
WHITESPACE occurrence with '\r\n' does work but I'm trying to understand
why this way doesn't.

Here are the rules in questions:

start : program ;
program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;

WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in string

Thanks for any help in advance!

Jason.

From bkiers at gmail.com  Thu Apr 12 11:10:21 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 12 Apr 2012 20:10:21 +0200
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
Message-ID: <CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>

Hi Jason,

On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com> wrote:

> ...
>
> start : program ;
> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>
> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in string
>
>
A lexer rule must always match something: if it can match zero chars, it
can/will go in an infinite loop.

Do something like this:

start : program ;
program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;

or simply skip spaces like this:

start : program ;
program : line+ query*;
WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;

Regards,

Bart.

From bkiers at gmail.com  Thu Apr 12 11:26:28 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 12 Apr 2012 20:26:28 +0200
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CA+4QypwCsphu3Ph2u9OtKXHy9tznoQg-Vuxqz4g7-z-6VhrWVQ@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CA+4QypwCsphu3Ph2u9OtKXHy9tznoQg-Vuxqz4g7-z-6VhrWVQ@mail.gmail.com>
Message-ID: <CAOrgODZqxaQJKg0Pp7xScPC=V3CTqQ3PejU_WQokDgDgRqLJEw@mail.gmail.com>

Hi Richard, list,


On Thu, Apr 12, 2012 at 5:46 PM, Richard Matthias <richardmatthias at gmail.com
> wrote:

> Getting people to ask questions on SO makes sense, but bear in mind that
> the whole design of SO is actively hostile to any kind of debate and so
> it's fine if a question has one specific answer like "where is the
> ambiguity that ANTLR is complaining about here?", but it really gets in the
> way when someone needs more general help with input from more than one
> person. Essentially you have a tree of depth one with the question as the
> root and each answer as a leaf - although more than one person can answer,
> the ordering is changed by votes and changed randomly when there are no
> votes.
>

Most of the questions asked on the mailing list are the type that can be
answered by a "best" answer. So these would be well suited for
stackoverflow.

However, you raise a valid point about question to which no single correct
answer exists: these are (very) likely to be closed by the community.
Discussions are indeed out of the question over there. I don't follow the
developers-mailing list of ANTLR, but I could imagine that discussions are
not uncommon over there.



> They do have comments on both the question and each answer that are ordered
> chronologically - these were added as a 'sink' to dissuade people from
> getting into debates in the answers themselves, but they are limited in
> size and editability in order to further be hostile to the users desire to
> actually communicate with eachother.
>

If the number comments beneath a question or answer get too large, a link
to chat room is automatically created where people can continue their
discussion. So yes, SO wants to keep the site "clean" from (large)
discussions, but they do facilitate a means to have one.



> And of course if you want to announce anything or get feedback like this
> thread, you'll still need a mailing list or forum of your own.
>

Also a good point.
But this wouldn't necessarily have to be a mailing list: it could just be
http://www.antlr.org/news, but if there's still going to be a mailing list
for the developers of ANTLR, perhaps an announce-list might also be created.


Personally I use ANTLR, but I don't post on this so I don't know if my
> opinion counts much.


I'm not too active on the list as well, but as long as you raise valid
points, I think they will be taken into account.



> However, I read (or at least skim) every mailing list
> thread. I probably won't see any SO questions because I don't use the site
> that much any more due to the way it tries to turn people into faceless
> question-answering automatons.
>

 That's a bit of an exaggeration, IMHO.

Regards,

Bart.

From bkiers at gmail.com  Thu Apr 12 11:36:37 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 12 Apr 2012 20:36:37 +0200
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <4F867616.3090005@dunbar-it.co.uk>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<4F867616.3090005@dunbar-it.co.uk>
Message-ID: <CAOrgODY-_Q8e1cUdbvgm3bJNv1xcX-dizo6krFrZNJyfiR31Sg@mail.gmail.com>

Hi Norman, list,


On Thu, Apr 12, 2012 at 8:28 AM, Norman Dunbar <Norman at dunbar-it.co.uk>wrote:

> ...
>
> > Does anybody see any bears in the woods that I'm not? issues? those in
> favor?
> I'm much more of a user than contributor but I have to say  that I much
> prefer emails rather than having to go to a website and look for stuff,
> especially when I'm offline.
>

Off line, in this time and age? :)


At the moment, I have the entire ANTLR mailing list contents stored
> locally on my laptop, going back to when I subscribed - October 2011 -
> and I can search it easily without needing an internet connection.
>
> With the web site, there are 914 current questions - but I only see 15
> of them per screen. It looks nice, but I much prefer content to looks!
>

At the bottom of the list of ANTLR questions,
http://stackoverflow.com/questions/tagged/antlr , you can change the 15
into 30 or 50 (which will be saved, once logged in).


So, my vote is with the mailing list. (Sorry!)
>
> I am subscribed to a number of support lists - for work and pleasure -
> and by far the best ones, for me, are the ones where the contents hits
> my inbox without me doing anything, other than setting up a rule to move
> related stuff to the appropriate folder of course!


I can image the sentiment, especially if one does more reading than
answering, but if you do answer (I answer question at SO), SO is soooo much
more convenient! Decent syntax highlighting, Markdown-formatting, it's a
real joy! :)

Regards,

Bart.

From jmjones5 at gmail.com  Thu Apr 12 13:48:39 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Thu, 12 Apr 2012 21:48:39 +0100
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
Message-ID: <CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>

Hi Bart,

Thanks for the suggestion, although it doesn't work either... The skip
option does work but since I'll be doing something with the whitespace
later I don't want to take this option. Is there something else we're
missing?

Jason.

On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:

> Hi Jason,
>
> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>
>> ...
>>
>>
>> start : program ;
>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>
>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in
>> string
>>
>>
> A lexer rule must always match something: if it can match zero chars, it
> can/will go in an infinite loop.
>
> Do something like this:
>
> start : program ;
> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>
> or simply skip spaces like this:
>
> start : program ;
> program : line+ query*;
> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>
> Regards,
>
> Bart.
>

From bkiers at gmail.com  Thu Apr 12 14:06:24 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 12 Apr 2012 23:06:24 +0200
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
Message-ID: <CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>

Hi Jason,

Then there's something other than what you've posted going wrong, since the
parser generated from:

start      : program EOF;
program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
line       : 'L';
query      : 'Q';
WHITESPACE : (' ' | '\t' | '\r' | '\n')+;

parses the input "\r\nL\r\n" just fine.

Regards,

Bart.


On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com> wrote:

> Hi Bart,
>
> Thanks for the suggestion, although it doesn't work either... The skip
> option does work but since I'll be doing something with the whitespace
> later I don't want to take this option. Is there something else we're
> missing?
>
> Jason.
>
>
> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Hi Jason,
>>
>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>>
>>> ...
>>>
>>>
>>> start : program ;
>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>
>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in
>>> string
>>>
>>>
>> A lexer rule must always match something: if it can match zero chars, it
>> can/will go in an infinite loop.
>>
>> Do something like this:
>>
>> start : program ;
>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>
>> or simply skip spaces like this:
>>
>> start : program ;
>> program : line+ query*;
>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>
>> Regards,
>>
>> Bart.
>>
>
>

From jmjones5 at gmail.com  Thu Apr 12 15:09:28 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Thu, 12 Apr 2012 23:09:28 +0100
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
Message-ID: <CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>

Hi Bart,

I thing we're using different version of ANTLR (or something along those
lines) as using your grammar I get a MismatchedTokenException using the
input you've used "\r\nL\r\n". I'm currently using ANTLRWorks version
1.4.3, could this be the reason why your end seems to be working and mine
not?

Jason.

On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:

> Hi Jason,
>
> Then there's something other than what you've posted going wrong, since
> the parser generated from:
>
> start      : program EOF;
> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> line       : 'L';
> query      : 'Q';
> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>
> parses the input "\r\nL\r\n" just fine.
>
> Regards,
>
> Bart.
>
>
> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>
>> Hi Bart,
>>
>> Thanks for the suggestion, although it doesn't work either... The skip
>> option does work but since I'll be doing something with the whitespace
>> later I don't want to take this option. Is there something else we're
>> missing?
>>
>> Jason.
>>
>>
>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>>
>>> Hi Jason,
>>>
>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>>>
>>>> ...
>>>>
>>>>
>>>> start : program ;
>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>
>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in
>>>> string
>>>>
>>>>
>>> A lexer rule must always match something: if it can match zero chars, it
>>> can/will go in an infinite loop.
>>>
>>> Do something like this:
>>>
>>> start : program ;
>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>
>>> or simply skip spaces like this:
>>>
>>> start : program ;
>>> program : line+ query*;
>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>>
>>> Regards,
>>>
>>> Bart.
>>>
>>
>>
>

From bkiers at gmail.com  Thu Apr 12 23:12:10 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 13 Apr 2012 08:12:10 +0200
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
Message-ID: <CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>

Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse the
input just fine.

I'm assuming you're not entering "\r" and "\n" as literals, but are
actually entering line breaks in the text areas of ANTLRWorks'
interpreter... Perhaps you've selected ANTLRWorks to start parsing with a
different rule than the `start` rule? Anyway, forget about ANTLRWorks for a
moment and whip up a manual test:

public class Main {
  public static void main(String[] args) throws Exception {
    TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
    TParser parser = new TParser(new CommonTokenStream(lexer));
    parser.start();
  }
}


Bart.


On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com> wrote:

> Hi Bart,
>
> I thing we're using different version of ANTLR (or something along those
> lines) as using your grammar I get a MismatchedTokenException using the
> input you've used "\r\nL\r\n". I'm currently using ANTLRWorks version
> 1.4.3, could this be the reason why your end seems to be working and mine
> not?
>
> Jason.
>
>
> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Hi Jason,
>>
>> Then there's something other than what you've posted going wrong, since
>> the parser generated from:
>>
>> start      : program EOF;
>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>> line       : 'L';
>> query      : 'Q';
>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>>
>> parses the input "\r\nL\r\n" just fine.
>>
>> Regards,
>>
>> Bart.
>>
>>
>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>>
>>> Hi Bart,
>>>
>>> Thanks for the suggestion, although it doesn't work either... The skip
>>> option does work but since I'll be doing something with the whitespace
>>> later I don't want to take this option. Is there something else we're
>>> missing?
>>>
>>> Jason.
>>>
>>>
>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>>>
>>>> Hi Jason,
>>>>
>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>>
>>>>> ...
>>>>>
>>>>>
>>>>> start : program ;
>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>>
>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in
>>>>> string
>>>>>
>>>>>
>>>> A lexer rule must always match something: if it can match zero chars,
>>>> it can/will go in an infinite loop.
>>>>
>>>> Do something like this:
>>>>
>>>> start : program ;
>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>>
>>>> or simply skip spaces like this:
>>>>
>>>> start : program ;
>>>> program : line+ query*;
>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>>>
>>>> Regards,
>>>>
>>>> Bart.
>>>>
>>>
>>>
>>
>

From ludwig.maes at gmail.com  Fri Apr 13 01:00:38 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Fri, 13 Apr 2012 10:00:38 +0200
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAOrgODY-_Q8e1cUdbvgm3bJNv1xcX-dizo6krFrZNJyfiR31Sg@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<4F867616.3090005@dunbar-it.co.uk>
	<CAOrgODY-_Q8e1cUdbvgm3bJNv1xcX-dizo6krFrZNJyfiR31Sg@mail.gmail.com>
Message-ID: <CAJ8SgH=R+A6Mgisso9mZ9im7e5sZepzh0roMRZpS_q02C=XrsQ@mail.gmail.com>

Not sure where you can find current dumps, but
http://blog.stackoverflow.com/2009/06/stack-overflow-creative-commons-data-dump/

On 12 April 2012 20:36, Bart Kiers <bkiers at gmail.com> wrote:
> Hi Norman, list,
>
>
> On Thu, Apr 12, 2012 at 8:28 AM, Norman Dunbar <Norman at dunbar-it.co.uk>wrote:
>
>> ...
>>
>> > Does anybody see any bears in the woods that I'm not? issues? those in
>> favor?
>> I'm much more of a user than contributor but I have to say ?that I much
>> prefer emails rather than having to go to a website and look for stuff,
>> especially when I'm offline.
>>
>
> Off line, in this time and age? :)
>
>
> At the moment, I have the entire ANTLR mailing list contents stored
>> locally on my laptop, going back to when I subscribed - October 2011 -
>> and I can search it easily without needing an internet connection.
>>
>> With the web site, there are 914 current questions - but I only see 15
>> of them per screen. It looks nice, but I much prefer content to looks!
>>
>
> At the bottom of the list of ANTLR questions,
> http://stackoverflow.com/questions/tagged/antlr , you can change the 15
> into 30 or 50 (which will be saved, once logged in).
>
>
> So, my vote is with the mailing list. (Sorry!)
>>
>> I am subscribed to a number of support lists - for work and pleasure -
>> and by far the best ones, for me, are the ones where the contents hits
>> my inbox without me doing anything, other than setting up a rule to move
>> related stuff to the appropriate folder of course!
>
>
> I can image the sentiment, especially if one does more reading than
> answering, but if you do answer (I answer question at SO), SO is soooo much
> more convenient! Decent syntax highlighting, Markdown-formatting, it's a
> real joy! :)
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jmjones5 at gmail.com  Fri Apr 13 04:06:09 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Fri, 13 Apr 2012 12:06:09 +0100
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
Message-ID: <CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>

Stranger... Okay will I've done a manual test using this class:

import org.antlr.runtime.*;

public class Main {
          public static void main(String[] args) throws Exception {
              prologLexer lexer = new prologLexer(new
ANTLRStringStream("\r\nL\r\n"));
              prologParser parser = new prologParser(new
CommonTokenStream(lexer));
              parser.start();
          }
}

After running it like so:

$ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
line 1:0 mismatched input '\r\n' expecting WHITESPACE

I still seem to be getting the same issue ^. Here's the current grammar
that I used to create the parser and lexer:

start : program EOF;
program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
line    :       'L';
query   :       'Q';

WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;

Jason.

On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:

> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse the
> input just fine.
>
> I'm assuming you're not entering "\r" and "\n" as literals, but are
> actually entering line breaks in the text areas of ANTLRWorks'
> interpreter... Perhaps you've selected ANTLRWorks to start parsing with a
> different rule than the `start` rule? Anyway, forget about ANTLRWorks for a
> moment and whip up a manual test:
>
> public class Main {
>   public static void main(String[] args) throws Exception {
>     TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
>     TParser parser = new TParser(new CommonTokenStream(lexer));
>     parser.start();
>   }
> }
>
>
> Bart.
>
>
> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com> wrote:
>
>> Hi Bart,
>>
>> I thing we're using different version of ANTLR (or something along those
>> lines) as using your grammar I get a MismatchedTokenException using the
>> input you've used "\r\nL\r\n". I'm currently using ANTLRWorks version
>> 1.4.3, could this be the reason why your end seems to be working and mine
>> not?
>>
>> Jason.
>>
>>
>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
>>
>>> Hi Jason,
>>>
>>> Then there's something other than what you've posted going wrong, since
>>> the parser generated from:
>>>
>>> start      : program EOF;
>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>> line       : 'L';
>>> query      : 'Q';
>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>>>
>>> parses the input "\r\nL\r\n" just fine.
>>>
>>> Regards,
>>>
>>> Bart.
>>>
>>>
>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>
>>>> Hi Bart,
>>>>
>>>> Thanks for the suggestion, although it doesn't work either... The skip
>>>> option does work but since I'll be doing something with the whitespace
>>>> later I don't want to take this option. Is there something else we're
>>>> missing?
>>>>
>>>> Jason.
>>>>
>>>>
>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>>>>
>>>>> Hi Jason,
>>>>>
>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>>>
>>>>>> ...
>>>>>>
>>>>>>
>>>>>> start : program ;
>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>>>
>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in
>>>>>> string
>>>>>>
>>>>>>
>>>>> A lexer rule must always match something: if it can match zero chars,
>>>>> it can/will go in an infinite loop.
>>>>>
>>>>> Do something like this:
>>>>>
>>>>> start : program ;
>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>>>
>>>>> or simply skip spaces like this:
>>>>>
>>>>> start : program ;
>>>>> program : line+ query*;
>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>>>>
>>>>> Regards,
>>>>>
>>>>> Bart.
>>>>>
>>>>
>>>>
>>>
>>
>

From bkiers at gmail.com  Fri Apr 13 04:39:04 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 13 Apr 2012 13:39:04 +0200
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
Message-ID: <CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>

You must be doing something wrong/different. Perhaps you're running an old
.class file?
I copied your prolog.g grammar and Main.java file and did this:

wget http://www.antlr.org/download/antlr-3.4-complete.jar
java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g
javac -cp antlr-3.4-complete.jar *.java
java -cp .:antlr-3.4-complete.jar Main

which didn't produce any error or warning.

Regards,

Bart.


On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com> wrote:

> Stranger... Okay will I've done a manual test using this class:
>
> import org.antlr.runtime.*;
>
>
> public class Main {
>           public static void main(String[] args) throws Exception {
>               prologLexer lexer = new prologLexer(new
> ANTLRStringStream("\r\nL\r\n"));
>               prologParser parser = new prologParser(new
> CommonTokenStream(lexer));
>               parser.start();
>           }
> }
>
> After running it like so:
>
> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
> line 1:0 mismatched input '\r\n' expecting WHITESPACE
>
> I still seem to be getting the same issue ^. Here's the current grammar
> that I used to create the parser and lexer:
>
>
> start : program EOF;
> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> line    :       'L';
> query   :       'Q';
>
> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>
> Jason.
>
>
> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse the
>> input just fine.
>>
>> I'm assuming you're not entering "\r" and "\n" as literals, but are
>> actually entering line breaks in the text areas of ANTLRWorks'
>> interpreter... Perhaps you've selected ANTLRWorks to start parsing with a
>> different rule than the `start` rule? Anyway, forget about ANTLRWorks for a
>> moment and whip up a manual test:
>>
>> public class Main {
>>   public static void main(String[] args) throws Exception {
>>     TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
>>     TParser parser = new TParser(new CommonTokenStream(lexer));
>>     parser.start();
>>   }
>> }
>>
>>
>> Bart.
>>
>>
>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com> wrote:
>>
>>> Hi Bart,
>>>
>>> I thing we're using different version of ANTLR (or something along those
>>> lines) as using your grammar I get a MismatchedTokenException using the
>>> input you've used "\r\nL\r\n". I'm currently using ANTLRWorks version
>>> 1.4.3, could this be the reason why your end seems to be working and mine
>>> not?
>>>
>>> Jason.
>>>
>>>
>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
>>>
>>>> Hi Jason,
>>>>
>>>> Then there's something other than what you've posted going wrong, since
>>>> the parser generated from:
>>>>
>>>> start      : program EOF;
>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>> line       : 'L';
>>>> query      : 'Q';
>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>>>>
>>>> parses the input "\r\nL\r\n" just fine.
>>>>
>>>> Regards,
>>>>
>>>> Bart.
>>>>
>>>>
>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>>
>>>>> Hi Bart,
>>>>>
>>>>> Thanks for the suggestion, although it doesn't work either... The skip
>>>>> option does work but since I'll be doing something with the whitespace
>>>>> later I don't want to take this option. Is there something else we're
>>>>> missing?
>>>>>
>>>>> Jason.
>>>>>
>>>>>
>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>>>>>
>>>>>> Hi Jason,
>>>>>>
>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>>>>
>>>>>>> ...
>>>>>>>
>>>>>>>
>>>>>>> start : program ;
>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>>>>
>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used in
>>>>>>> string
>>>>>>>
>>>>>>>
>>>>>> A lexer rule must always match something: if it can match zero chars,
>>>>>> it can/will go in an infinite loop.
>>>>>>
>>>>>> Do something like this:
>>>>>>
>>>>>> start : program ;
>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>>>>
>>>>>> or simply skip spaces like this:
>>>>>>
>>>>>> start : program ;
>>>>>> program : line+ query*;
>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>>>>>
>>>>>> Regards,
>>>>>>
>>>>>> Bart.
>>>>>>
>>>>>
>>>>>
>>>>
>>>
>>
>

From NickAl at discovery.co.za  Fri Apr 13 05:43:56 2012
From: NickAl at discovery.co.za (Nicholas Alexander)
Date: Fri, 13 Apr 2012 14:43:56 +0200
Subject: [antlr-interest] Problem with Tree Grammar
Message-ID: <D1E5EAF212262147A03D14E0C2AEA7136689B243FF@DHPMAIL02.discovery.holdings.co.za>


Hi i'm building a tree grammar for my AST

I have 2 rules


if_statement :
      ^(IF expression ^(THEN statement+) elsif_statement+ ^(ELSE statement+))
    ;

elsif_statement :
       ^(ELSIF expression statement+)
    ;

This seems to be a problem although I can construct the AST using this


if_statement :
        IF ifexpr=expression THEN ( thenstats+=statement SEMI )+
        ( ELSIF elseifexpr=expression THEN ( elseifstats+=statement SEMI )+ )*
        ( ELSE ( elsestats+=statement SEMI )+ )?
        END IF
        -> ^(IF $ifexpr ^(THEN $thenstats+)  ^(ELSIF $elseifexpr $elseifstats*)* ^(ELSE $elsestats*)?)
    ;

Which works fine.
Does anyone have any ideas how to address this?

Thanks

Nick Alexander


Discovery is an authorised financial services provider.

The information in this email is confidential and may have legal privileges. We intend it only for the use of the individual or entity we've addressed the communication to. If you've received this email by mistake please delete it and tell the sender. We forbid any unauthorised use, change, disclosure or sending of the contents of this email (including its attachments), whether in part or as a whole, unless consented to in writing by the sender, as it may be unlawful.

We cannot guarantee this email has no malicious coding. 

We reserve the right to check, intercept and block emails or take any other action according to our email etiquette. 

Discovery will not be liable for any delivery delay, loss, harm, disruption or data corruption that may arise from this email.

A full list of company directors is available on our website at: https://www.discovery.co.za/index_login.jhtml?p_content=/investor_relations/directorate.jhtml - or to get this list by email, please email directors_list at discovery.co.za

From jmjones5 at gmail.com  Fri Apr 13 06:03:15 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Fri, 13 Apr 2012 14:03:15 +0100
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
	<CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
Message-ID: <CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>

Ah, I see. I think I get what's been happening (whether I understand it is
a different matter) there must be something else in the prolog grammar of
mine that's changing the behaviour of the lexer/parser. I assumed that if I
just added the rules you have that it would work the same as yours but
apparently not. Here's the full grammar that I've been playing with:

//TODO: Add grammar for operators
//TODO: Add grammar for lists - DONE
//TODO: Add grammar for comments - DONE
//TODO: Add grammar for whitespace

grammar prolog;

//options {
//output=template;
//rewrite=true;
//}

start : program EOF;
program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
line    :    'L';
query    :    'Q';
//line : clause | comment ;
comment : '% ' string '\r\n' | '/*' string '*/' ; //Doesn't allow commas,
parenthese, square brakets, etc. in comments. Consider fixing!
//Another issue being how the single line comment is ended is it determined
by the newline character?
clause : predicate ('.' | ':-' predicate_list '.') ;
predicate : atom | atom '(' term_list ')' ;
predicate_list : predicate (',' predicate)* ;
list : '[' term_list ('|' term)? ']' ;

structure : atom '(' term_list ')' ;
term_list : term (',' term)* ;

//query : '?-' predicate_list '.' ;

term : numeral | atom | variable | structure | list ;
atom : small_atom | '\'' string '\'';
small_atom : LOWERCASE_LETTER character*;
variable : UPPERCASE_LETTER character* ;
numeral : DIGIT+ ;
character : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ;
string : character+ (WHITESPACE+ character+)* ;

WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ; //currently only used in string
//NEWLINE : '\r\n' | '\n' ;
LOWERCASE_LETTER : 'a' .. 'z' ;
UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
DIGIT : '0' .. '9' ;
SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' | '?' | '@'
| '#' | '$' | '&' ;

So when I create a grammar just including the rules you've suggested it
works fine but why when I use the same rules in this grammar does it not
work?

Jason.

On 13 April 2012 12:39, Bart Kiers <bkiers at gmail.com> wrote:

> You must be doing something wrong/different. Perhaps you're running an old
> .class file?
> I copied your prolog.g grammar and Main.java file and did this:
>
> wget http://www.antlr.org/download/antlr-3.4-complete.jar
> java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g
> javac -cp antlr-3.4-complete.jar *.java
> java -cp .:antlr-3.4-complete.jar Main
>
> which didn't produce any error or warning.
>
> Regards,
>
> Bart.
>
>
>
> On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>
>> Stranger... Okay will I've done a manual test using this class:
>>
>> import org.antlr.runtime.*;
>>
>>
>> public class Main {
>>           public static void main(String[] args) throws Exception {
>>                prologLexer lexer = new prologLexer(new
>> ANTLRStringStream("\r\nL\r\n"));
>>               prologParser parser = new prologParser(new
>> CommonTokenStream(lexer));
>>               parser.start();
>>           }
>> }
>>
>> After running it like so:
>>
>> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
>> line 1:0 mismatched input '\r\n' expecting WHITESPACE
>>
>> I still seem to be getting the same issue ^. Here's the current grammar
>> that I used to create the parser and lexer:
>>
>>
>> start : program EOF;
>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>> line    :       'L';
>> query   :       'Q';
>>
>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>
>> Jason.
>>
>>
>> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
>>
>>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse the
>>> input just fine.
>>>
>>> I'm assuming you're not entering "\r" and "\n" as literals, but are
>>> actually entering line breaks in the text areas of ANTLRWorks'
>>> interpreter... Perhaps you've selected ANTLRWorks to start parsing with a
>>> different rule than the `start` rule? Anyway, forget about ANTLRWorks for a
>>> moment and whip up a manual test:
>>>
>>> public class Main {
>>>   public static void main(String[] args) throws Exception {
>>>     TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
>>>     TParser parser = new TParser(new CommonTokenStream(lexer));
>>>     parser.start();
>>>   }
>>> }
>>>
>>>
>>> Bart.
>>>
>>>
>>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>
>>>> Hi Bart,
>>>>
>>>> I thing we're using different version of ANTLR (or something along
>>>> those lines) as using your grammar I get a MismatchedTokenException using
>>>> the input you've used "\r\nL\r\n". I'm currently using ANTLRWorks version
>>>> 1.4.3, could this be the reason why your end seems to be working and mine
>>>> not?
>>>>
>>>> Jason.
>>>>
>>>>
>>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
>>>>
>>>>> Hi Jason,
>>>>>
>>>>> Then there's something other than what you've posted going wrong,
>>>>> since the parser generated from:
>>>>>
>>>>> start      : program EOF;
>>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>> line       : 'L';
>>>>> query      : 'Q';
>>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>>>>>
>>>>> parses the input "\r\nL\r\n" just fine.
>>>>>
>>>>> Regards,
>>>>>
>>>>> Bart.
>>>>>
>>>>>
>>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>>>
>>>>>> Hi Bart,
>>>>>>
>>>>>> Thanks for the suggestion, although it doesn't work either... The
>>>>>> skip option does work but since I'll be doing something with the whitespace
>>>>>> later I don't want to take this option. Is there something else we're
>>>>>> missing?
>>>>>>
>>>>>> Jason.
>>>>>>
>>>>>>
>>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>>>>>>
>>>>>>> Hi Jason,
>>>>>>>
>>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com>wrote:
>>>>>>>
>>>>>>>> ...
>>>>>>>>
>>>>>>>>
>>>>>>>> start : program ;
>>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>>>>>
>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used
>>>>>>>> in string
>>>>>>>>
>>>>>>>>
>>>>>>> A lexer rule must always match something: if it can match zero
>>>>>>> chars, it can/will go in an infinite loop.
>>>>>>>
>>>>>>> Do something like this:
>>>>>>>
>>>>>>> start : program ;
>>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>>>>>
>>>>>>> or simply skip spaces like this:
>>>>>>>
>>>>>>> start : program ;
>>>>>>> program : line+ query*;
>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>>>>>>
>>>>>>> Regards,
>>>>>>>
>>>>>>> Bart.
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>

From cjdaniels4 at gmail.com  Fri Apr 13 06:34:29 2012
From: cjdaniels4 at gmail.com (Charles Daniels)
Date: Fri, 13 Apr 2012 09:34:29 -0400
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
	<CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
	<CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
Message-ID: <CA+e3_ST_o+jxXbeaXJq7eqH5+j4KFOOj8ZvUX6y8sS17h84E-w@mail.gmail.com>

Try the following changes (note that some of your parser rules become lexer
rules):

atom : SMALL_ATOM | STRING;

COMMENT : '% ' ~('\n'|'\r')* '\r'? '\n' | '/*' ( options {greedy=false;} :
. )* '*/' ;
SMALL_ATOM : LOWERCASE_LETTER CHARACTER* ;
VARIABLE : UPPERCASE_LETTER CHARACTER* ;
NUMERAL : DIGIT+ ;
STRING : '"' (CHARACTER | WHITESPACE)* '"' ;

fragment CHARACTER : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ;
fragment LOWERCASE_LETTER : 'a' .. 'z' ;
fragment UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
fragment DIGIT : '0' .. '9' ;
fragment SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' |
'?' | '@' | '#' | '$' | '&' ;


I haven't tested this, but it should get you closer to what you need, if it
doesn't completely address the issue.

Regards,
Chuck

On Fri, Apr 13, 2012 at 9:03 AM, Jason Jones <jmjones5 at gmail.com> wrote:

> Ah, I see. I think I get what's been happening (whether I understand it is
> a different matter) there must be something else in the prolog grammar of
> mine that's changing the behaviour of the lexer/parser. I assumed that if I
> just added the rules you have that it would work the same as yours but
> apparently not. Here's the full grammar that I've been playing with:
>
> //TODO: Add grammar for operators
> //TODO: Add grammar for lists - DONE
> //TODO: Add grammar for comments - DONE
> //TODO: Add grammar for whitespace
>
> grammar prolog;
>
> //options {
> //output=template;
> //rewrite=true;
> //}
>
> start : program EOF;
> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> line    :    'L';
> query    :    'Q';
> //line : clause | comment ;
> comment : '% ' string '\r\n' | '/*' string '*/' ; //Doesn't allow commas,
> parenthese, square brakets, etc. in comments. Consider fixing!
> //Another issue being how the single line comment is ended is it determined
> by the newline character?
> clause : predicate ('.' | ':-' predicate_list '.') ;
> predicate : atom | atom '(' term_list ')' ;
> predicate_list : predicate (',' predicate)* ;
> list : '[' term_list ('|' term)? ']' ;
>
> structure : atom '(' term_list ')' ;
> term_list : term (',' term)* ;
>
> //query : '?-' predicate_list '.' ;
>
> term : numeral | atom | variable | structure | list ;
> atom : small_atom | '\'' string '\'';
> small_atom : LOWERCASE_LETTER character*;
> variable : UPPERCASE_LETTER character* ;
> numeral : DIGIT+ ;
> character : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ;
> string : character+ (WHITESPACE+ character+)* ;
>
> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ; //currently only used in string
> //NEWLINE : '\r\n' | '\n' ;
> LOWERCASE_LETTER : 'a' .. 'z' ;
> UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
> DIGIT : '0' .. '9' ;
> SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' | '?' | '@'
> | '#' | '$' | '&' ;
>
> So when I create a grammar just including the rules you've suggested it
> works fine but why when I use the same rules in this grammar does it not
> work?
>
> Jason.
>
> On 13 April 2012 12:39, Bart Kiers <bkiers at gmail.com> wrote:
>
> > You must be doing something wrong/different. Perhaps you're running an
> old
> > .class file?
> > I copied your prolog.g grammar and Main.java file and did this:
> >
> > wget http://www.antlr.org/download/antlr-3.4-complete.jar
> > java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g
> > javac -cp antlr-3.4-complete.jar *.java
> > java -cp .:antlr-3.4-complete.jar Main
> >
> > which didn't produce any error or warning.
> >
> > Regards,
> >
> > Bart.
> >
> >
> >
> > On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com> wrote:
> >
> >> Stranger... Okay will I've done a manual test using this class:
> >>
> >> import org.antlr.runtime.*;
> >>
> >>
> >> public class Main {
> >>           public static void main(String[] args) throws Exception {
> >>                prologLexer lexer = new prologLexer(new
> >> ANTLRStringStream("\r\nL\r\n"));
> >>               prologParser parser = new prologParser(new
> >> CommonTokenStream(lexer));
> >>               parser.start();
> >>           }
> >> }
> >>
> >> After running it like so:
> >>
> >> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
> >> line 1:0 mismatched input '\r\n' expecting WHITESPACE
> >>
> >> I still seem to be getting the same issue ^. Here's the current grammar
> >> that I used to create the parser and lexer:
> >>
> >>
> >> start : program EOF;
> >> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >> line    :       'L';
> >> query   :       'Q';
> >>
> >> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
> >>
> >> Jason.
> >>
> >>
> >> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
> >>
> >>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse the
> >>> input just fine.
> >>>
> >>> I'm assuming you're not entering "\r" and "\n" as literals, but are
> >>> actually entering line breaks in the text areas of ANTLRWorks'
> >>> interpreter... Perhaps you've selected ANTLRWorks to start parsing
> with a
> >>> different rule than the `start` rule? Anyway, forget about ANTLRWorks
> for a
> >>> moment and whip up a manual test:
> >>>
> >>> public class Main {
> >>>   public static void main(String[] args) throws Exception {
> >>>     TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
> >>>     TParser parser = new TParser(new CommonTokenStream(lexer));
> >>>     parser.start();
> >>>   }
> >>> }
> >>>
> >>>
> >>> Bart.
> >>>
> >>>
> >>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com
> >wrote:
> >>>
> >>>> Hi Bart,
> >>>>
> >>>> I thing we're using different version of ANTLR (or something along
> >>>> those lines) as using your grammar I get a MismatchedTokenException
> using
> >>>> the input you've used "\r\nL\r\n". I'm currently using ANTLRWorks
> version
> >>>> 1.4.3, could this be the reason why your end seems to be working and
> mine
> >>>> not?
> >>>>
> >>>> Jason.
> >>>>
> >>>>
> >>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>
> >>>>> Hi Jason,
> >>>>>
> >>>>> Then there's something other than what you've posted going wrong,
> >>>>> since the parser generated from:
> >>>>>
> >>>>> start      : program EOF;
> >>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>> line       : 'L';
> >>>>> query      : 'Q';
> >>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
> >>>>>
> >>>>> parses the input "\r\nL\r\n" just fine.
> >>>>>
> >>>>> Regards,
> >>>>>
> >>>>> Bart.
> >>>>>
> >>>>>
> >>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com
> >wrote:
> >>>>>
> >>>>>> Hi Bart,
> >>>>>>
> >>>>>> Thanks for the suggestion, although it doesn't work either... The
> >>>>>> skip option does work but since I'll be doing something with the
> whitespace
> >>>>>> later I don't want to take this option. Is there something else
> we're
> >>>>>> missing?
> >>>>>>
> >>>>>> Jason.
> >>>>>>
> >>>>>>
> >>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>>>
> >>>>>>> Hi Jason,
> >>>>>>>
> >>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com
> >wrote:
> >>>>>>>
> >>>>>>>> ...
> >>>>>>>>
> >>>>>>>>
> >>>>>>>> start : program ;
> >>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>>>>>
> >>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used
> >>>>>>>> in string
> >>>>>>>>
> >>>>>>>>
> >>>>>>> A lexer rule must always match something: if it can match zero
> >>>>>>> chars, it can/will go in an infinite loop.
> >>>>>>>
> >>>>>>> Do something like this:
> >>>>>>>
> >>>>>>> start : program ;
> >>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
> >>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
> >>>>>>>
> >>>>>>> or simply skip spaces like this:
> >>>>>>>
> >>>>>>> start : program ;
> >>>>>>> program : line+ query*;
> >>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
> >>>>>>>
> >>>>>>> Regards,
> >>>>>>>
> >>>>>>> Bart.
> >>>>>>>
> >>>>>>
> >>>>>>
> >>>>>
> >>>>
> >>>
> >>
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Stefan.Maetje at esd-electronics.com  Fri Apr 13 09:16:35 2012
From: Stefan.Maetje at esd-electronics.com (=?ISO-8859-1?Q?Stefan_M=E4tje?=)
Date: Fri, 13 Apr 2012 18:16:35 +0200
Subject: [antlr-interest] Problem with Tree Grammar
In-Reply-To: <D1E5EAF212262147A03D14E0C2AEA7136689B243FF@DHPMAIL02.discovery.holdings.co.za>
References: <D1E5EAF212262147A03D14E0C2AEA7136689B243FF@DHPMAIL02.discovery.holdings.co.za>
Message-ID: <4F885163.2090406@esd-electronics.com>

Hi,

unfortunately you don't describe what your problem is. But looking at 
your if_statement rule from the tree grammar I would change the pattern 
from  this

^(IF expression ^(THEN statement+) elsif_statement+ ^(ELSE statement+))

to that pattern

^(IF expression ^(THEN statement+) elsif_statement* ^(ELSE statement+)?)

Your version mandates that the elsif_statement must always occur at 
least once (+) and that there is always an ^(ELSE ...) clause (missing ?).

If your source input doesn't deliver an elsif_statement and also an 
^(ELSE ...) clause the tree parser will abort after an exception.

Greetings,
	Stefan


Am 13.04.2012 14:43, schrieb Nicholas Alexander:
>
> Hi i'm building a tree grammar for my AST
>
> I have 2 rules
>
>
> if_statement :
>        ^(IF expression ^(THEN statement+) elsif_statement+ ^(ELSE statement+))
>      ;
>
> elsif_statement :
>         ^(ELSIF expression statement+)
>      ;
>
> This seems to be a problem although I can construct the AST using this
>
>
> if_statement :
>          IF ifexpr=expression THEN ( thenstats+=statement SEMI )+
>          ( ELSIF elseifexpr=expression THEN ( elseifstats+=statement SEMI )+ )*
>          ( ELSE ( elsestats+=statement SEMI )+ )?
>          END IF
>          ->  ^(IF $ifexpr ^(THEN $thenstats+)  ^(ELSIF $elseifexpr $elseifstats*)* ^(ELSE $elsestats*)?)
>      ;
>
> Which works fine.
> Does anyone have any ideas how to address this?
>
> Thanks
>
> Nick Alexander
>
>
> Discovery is an authorised financial services provider.
>
> The information in this email is confidential and may have legal privileges. We intend it only for the use of the individual or entity we've addressed the communication to. If you've received this email by mistake please delete it and tell the sender. We forbid any unauthorised use, change, disclosure or sending of the contents of this email (including its attachments), whether in part or as a whole, unless consented to in writing by the sender, as it may be unlawful.
>
> We cannot guarantee this email has no malicious coding.
>
> We reserve the right to check, intercept and block emails or take any other action according to our email etiquette.
>
> Discovery will not be liable for any delivery delay, loss, harm, disruption or data corruption that may arise from this email.
>
> A full list of company directors is available on our website at: https://www.discovery.co.za/index_login.jhtml?p_content=/investor_relations/directorate.jhtml - or to get this list by email, please email directors_list at discovery.co.za
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


-- 
Mit freundlichen Gr??en
Stefan M?tje

               Besuchen Sie uns auf der Hannover Messe 2012
                        in Halle 9, Stand D24
                   vom 23.-27. April 2012 in Hannover !



-------------------------------------------------------------------------
Dipl.-Ing. Stefan M?tje
System-Design

esd electronic system design gmbh
Vahrenwalder Str. 207 - 30165 Hannover - GERMANY
Telefon: 0511-37298-146 - Fax: 0511-37298-68
Bitte besuchen Sie uns im Internet unter http://www.esd.eu
Quality Products - Made in Germany
-------------------------------------------------------------------------
Gesch?ftsf?hrer: Klaus Detering
Amtsgericht Hannover HRB 51373 - VAT-ID DE 115672832
-------------------------------------------------------------------------


From jimi at temporal-wave.com  Fri Apr 13 09:31:30 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Apr 2012 09:31:30 -0700
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
	<CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
	<CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
Message-ID: <fb09aff767785346fd6a670e81b75471@mail.gmail.com>

You have a lexer rule called WHITESPACE but you ALSO have the literal
string '\r\n' in your parser rules. Hence the longer parser rule is
creating the ANTLR formed token tok_NN and not your WHITESPACE token
because it is a longer match. Hence the mismatched token.

Do not use 'literals' in your parser rules as it gets you in to trouble
when you are starting out. *

Have you been through the getting started posts in the wiki?

Jim

* I feel like I must have written this line about 32,768 times ;)

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jason Jones
> Sent: Friday, April 13, 2012 6:03 AM
> To: Bart Kiers
> Cc: antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] Whitespace matching
>
> Ah, I see. I think I get what's been happening (whether I understand it
> is a different matter) there must be something else in the prolog
> grammar of mine that's changing the behaviour of the lexer/parser. I
> assumed that if I just added the rules you have that it would work the
> same as yours but apparently not. Here's the full grammar that I've
> been playing with:
>
> //TODO: Add grammar for operators
> //TODO: Add grammar for lists - DONE
> //TODO: Add grammar for comments - DONE
> //TODO: Add grammar for whitespace
>
> grammar prolog;
>
> //options {
> //output=template;
> //rewrite=true;
> //}
>
> start : program EOF;
> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> line    :    'L';
> query    :    'Q';
> //line : clause | comment ;
> comment : '% ' string '\r\n' | '/*' string '*/' ; //Doesn't allow
> commas, parenthese, square brakets, etc. in comments. Consider fixing!
> //Another issue being how the single line comment is ended is it
> determined by the newline character?
> clause : predicate ('.' | ':-' predicate_list '.') ; predicate : atom |
> atom '(' term_list ')' ; predicate_list : predicate (',' predicate)* ;
> list : '[' term_list ('|' term)? ']' ;
>
> structure : atom '(' term_list ')' ;
> term_list : term (',' term)* ;
>
> //query : '?-' predicate_list '.' ;
>
> term : numeral | atom | variable | structure | list ; atom : small_atom
> | '\'' string '\''; small_atom : LOWERCASE_LETTER character*; variable
> : UPPERCASE_LETTER character* ; numeral : DIGIT+ ; character :
> LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ; string :
> character+ (WHITESPACE+ character+)* ;
>
> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ; //currently only used in
> string //NEWLINE : '\r\n' | '\n' ; LOWERCASE_LETTER : 'a' .. 'z' ;
> UPPERCASE_LETTER : 'A' .. 'Z' | '_' ; DIGIT : '0' .. '9' ; SPECIAL :
> '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' | '?' | '@'
> | '#' | '$' | '&' ;
>
> So when I create a grammar just including the rules you've suggested it
> works fine but why when I use the same rules in this grammar does it
> not work?
>
> Jason.
>
> On 13 April 2012 12:39, Bart Kiers <bkiers at gmail.com> wrote:
>
> > You must be doing something wrong/different. Perhaps you're running
> an
> > old .class file?
> > I copied your prolog.g grammar and Main.java file and did this:
> >
> > wget http://www.antlr.org/download/antlr-3.4-complete.jar
> > java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g javac -cp
> > antlr-3.4-complete.jar *.java java -cp .:antlr-3.4-complete.jar Main
> >
> > which didn't produce any error or warning.
> >
> > Regards,
> >
> > Bart.
> >
> >
> >
> > On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com>
> wrote:
> >
> >> Stranger... Okay will I've done a manual test using this class:
> >>
> >> import org.antlr.runtime.*;
> >>
> >>
> >> public class Main {
> >>           public static void main(String[] args) throws Exception {
> >>                prologLexer lexer = new prologLexer(new
> >> ANTLRStringStream("\r\nL\r\n"));
> >>               prologParser parser = new prologParser(new
> >> CommonTokenStream(lexer));
> >>               parser.start();
> >>           }
> >> }
> >>
> >> After running it like so:
> >>
> >> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
> >> line 1:0 mismatched input '\r\n' expecting WHITESPACE
> >>
> >> I still seem to be getting the same issue ^. Here's the current
> >> grammar that I used to create the parser and lexer:
> >>
> >>
> >> start : program EOF;
> >> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >> line    :       'L';
> >> query   :       'Q';
> >>
> >> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
> >>
> >> Jason.
> >>
> >>
> >> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
> >>
> >>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse
> >>> the input just fine.
> >>>
> >>> I'm assuming you're not entering "\r" and "\n" as literals, but are
> >>> actually entering line breaks in the text areas of ANTLRWorks'
> >>> interpreter... Perhaps you've selected ANTLRWorks to start parsing
> >>> with a different rule than the `start` rule? Anyway, forget about
> >>> ANTLRWorks for a moment and whip up a manual test:
> >>>
> >>> public class Main {
> >>>   public static void main(String[] args) throws Exception {
> >>>     TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
> >>>     TParser parser = new TParser(new CommonTokenStream(lexer));
> >>>     parser.start();
> >>>   }
> >>> }
> >>>
> >>>
> >>> Bart.
> >>>
> >>>
> >>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones
> <jmjones5 at gmail.com>wrote:
> >>>
> >>>> Hi Bart,
> >>>>
> >>>> I thing we're using different version of ANTLR (or something along
> >>>> those lines) as using your grammar I get a
> MismatchedTokenException
> >>>> using the input you've used "\r\nL\r\n". I'm currently using
> >>>> ANTLRWorks version 1.4.3, could this be the reason why your end
> >>>> seems to be working and mine not?
> >>>>
> >>>> Jason.
> >>>>
> >>>>
> >>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>
> >>>>> Hi Jason,
> >>>>>
> >>>>> Then there's something other than what you've posted going wrong,
> >>>>> since the parser generated from:
> >>>>>
> >>>>> start      : program EOF;
> >>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>> line       : 'L';
> >>>>> query      : 'Q';
> >>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
> >>>>>
> >>>>> parses the input "\r\nL\r\n" just fine.
> >>>>>
> >>>>> Regards,
> >>>>>
> >>>>> Bart.
> >>>>>
> >>>>>
> >>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones
> <jmjones5 at gmail.com>wrote:
> >>>>>
> >>>>>> Hi Bart,
> >>>>>>
> >>>>>> Thanks for the suggestion, although it doesn't work either...
> The
> >>>>>> skip option does work but since I'll be doing something with the
> >>>>>> whitespace later I don't want to take this option. Is there
> >>>>>> something else we're missing?
> >>>>>>
> >>>>>> Jason.
> >>>>>>
> >>>>>>
> >>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>>>
> >>>>>>> Hi Jason,
> >>>>>>>
> >>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones
> <jmjones5 at gmail.com>wrote:
> >>>>>>>
> >>>>>>>> ...
> >>>>>>>>
> >>>>>>>>
> >>>>>>>> start : program ;
> >>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>>>>>
> >>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only
> >>>>>>>> used in string
> >>>>>>>>
> >>>>>>>>
> >>>>>>> A lexer rule must always match something: if it can match zero
> >>>>>>> chars, it can/will go in an infinite loop.
> >>>>>>>
> >>>>>>> Do something like this:
> >>>>>>>
> >>>>>>> start : program ;
> >>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
> >>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
> >>>>>>>
> >>>>>>> or simply skip spaces like this:
> >>>>>>>
> >>>>>>> start : program ;
> >>>>>>> program : line+ query*;
> >>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
> >>>>>>>
> >>>>>>> Regards,
> >>>>>>>
> >>>>>>> Bart.
> >>>>>>>
> >>>>>>
> >>>>>>
> >>>>>
> >>>>
> >>>
> >>
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jmjones5 at gmail.com  Fri Apr 13 15:55:00 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Fri, 13 Apr 2012 23:55:00 +0100
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CA+e3_ST_o+jxXbeaXJq7eqH5+j4KFOOj8ZvUX6y8sS17h84E-w@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
	<CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
	<CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
	<CA+e3_ST_o+jxXbeaXJq7eqH5+j4KFOOj8ZvUX6y8sS17h84E-w@mail.gmail.com>
Message-ID: <CAFkEsQwphJQgdgOawhoMhdmSs0=H_ecy+ggUG4dfi=b2Qi4=6A@mail.gmail.com>

Yeah thanks, looks a bit better and definitely makes more sense, but still
having the weird whitespace mismatch issue... :S

On 13 April 2012 14:34, Charles Daniels <cjdaniels4 at gmail.com> wrote:

> Try the following changes (note that some of your parser rules become
> lexer rules):
>
> atom : SMALL_ATOM | STRING;
>
> COMMENT : '% ' ~('\n'|'\r')* '\r'? '\n' | '/*' ( options {greedy=false;} :
> . )* '*/' ;
> SMALL_ATOM : LOWERCASE_LETTER CHARACTER* ;
> VARIABLE : UPPERCASE_LETTER CHARACTER* ;
> NUMERAL : DIGIT+ ;
> STRING : '"' (CHARACTER | WHITESPACE)* '"' ;
>
> fragment CHARACTER : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL
> ;
> fragment LOWERCASE_LETTER : 'a' .. 'z' ;
> fragment UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
> fragment DIGIT : '0' .. '9' ;
> fragment SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' |
> '?' | '@' | '#' | '$' | '&' ;
>
>
> I haven't tested this, but it should get you closer to what you need, if
> it doesn't completely address the issue.
>
> Regards,
> Chuck
>
> On Fri, Apr 13, 2012 at 9:03 AM, Jason Jones <jmjones5 at gmail.com> wrote:
>
>> Ah, I see. I think I get what's been happening (whether I understand it is
>> a different matter) there must be something else in the prolog grammar of
>> mine that's changing the behaviour of the lexer/parser. I assumed that if
>> I
>> just added the rules you have that it would work the same as yours but
>> apparently not. Here's the full grammar that I've been playing with:
>>
>> //TODO: Add grammar for operators
>> //TODO: Add grammar for lists - DONE
>> //TODO: Add grammar for comments - DONE
>> //TODO: Add grammar for whitespace
>>
>> grammar prolog;
>>
>> //options {
>> //output=template;
>> //rewrite=true;
>> //}
>>
>> start : program EOF;
>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>> line    :    'L';
>> query    :    'Q';
>> //line : clause | comment ;
>> comment : '% ' string '\r\n' | '/*' string '*/' ; //Doesn't allow commas,
>> parenthese, square brakets, etc. in comments. Consider fixing!
>> //Another issue being how the single line comment is ended is it
>> determined
>> by the newline character?
>> clause : predicate ('.' | ':-' predicate_list '.') ;
>> predicate : atom | atom '(' term_list ')' ;
>> predicate_list : predicate (',' predicate)* ;
>> list : '[' term_list ('|' term)? ']' ;
>>
>> structure : atom '(' term_list ')' ;
>> term_list : term (',' term)* ;
>>
>> //query : '?-' predicate_list '.' ;
>>
>> term : numeral | atom | variable | structure | list ;
>> atom : small_atom | '\'' string '\'';
>> small_atom : LOWERCASE_LETTER character*;
>> variable : UPPERCASE_LETTER character* ;
>> numeral : DIGIT+ ;
>> character : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ;
>> string : character+ (WHITESPACE+ character+)* ;
>>
>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ; //currently only used in
>> string
>> //NEWLINE : '\r\n' | '\n' ;
>> LOWERCASE_LETTER : 'a' .. 'z' ;
>> UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
>> DIGIT : '0' .. '9' ;
>> SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' | '?' | '@'
>> | '#' | '$' | '&' ;
>>
>> So when I create a grammar just including the rules you've suggested it
>> works fine but why when I use the same rules in this grammar does it not
>> work?
>>
>> Jason.
>>
>> On 13 April 2012 12:39, Bart Kiers <bkiers at gmail.com> wrote:
>>
>> > You must be doing something wrong/different. Perhaps you're running an
>> old
>> > .class file?
>> > I copied your prolog.g grammar and Main.java file and did this:
>> >
>> > wget http://www.antlr.org/download/antlr-3.4-complete.jar
>> > java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g
>> > javac -cp antlr-3.4-complete.jar *.java
>> > java -cp .:antlr-3.4-complete.jar Main
>> >
>> > which didn't produce any error or warning.
>> >
>> > Regards,
>> >
>> > Bart.
>> >
>> >
>> >
>> > On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com>
>> wrote:
>> >
>> >> Stranger... Okay will I've done a manual test using this class:
>> >>
>> >> import org.antlr.runtime.*;
>> >>
>> >>
>> >> public class Main {
>> >>           public static void main(String[] args) throws Exception {
>> >>                prologLexer lexer = new prologLexer(new
>> >> ANTLRStringStream("\r\nL\r\n"));
>> >>               prologParser parser = new prologParser(new
>> >> CommonTokenStream(lexer));
>> >>               parser.start();
>> >>           }
>> >> }
>> >>
>> >> After running it like so:
>> >>
>> >> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
>> >> line 1:0 mismatched input '\r\n' expecting WHITESPACE
>> >>
>> >> I still seem to be getting the same issue ^. Here's the current grammar
>> >> that I used to create the parser and lexer:
>> >>
>> >>
>> >> start : program EOF;
>> >> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>> >> line    :       'L';
>> >> query   :       'Q';
>> >>
>> >> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>> >>
>> >> Jason.
>> >>
>> >>
>> >> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
>> >>
>> >>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse
>> the
>> >>> input just fine.
>> >>>
>> >>> I'm assuming you're not entering "\r" and "\n" as literals, but are
>> >>> actually entering line breaks in the text areas of ANTLRWorks'
>> >>> interpreter... Perhaps you've selected ANTLRWorks to start parsing
>> with a
>> >>> different rule than the `start` rule? Anyway, forget about ANTLRWorks
>> for a
>> >>> moment and whip up a manual test:
>> >>>
>> >>> public class Main {
>> >>>   public static void main(String[] args) throws Exception {
>> >>>     TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
>> >>>     TParser parser = new TParser(new CommonTokenStream(lexer));
>> >>>     parser.start();
>> >>>   }
>> >>> }
>> >>>
>> >>>
>> >>> Bart.
>> >>>
>> >>>
>> >>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com
>> >wrote:
>> >>>
>> >>>> Hi Bart,
>> >>>>
>> >>>> I thing we're using different version of ANTLR (or something along
>> >>>> those lines) as using your grammar I get a MismatchedTokenException
>> using
>> >>>> the input you've used "\r\nL\r\n". I'm currently using ANTLRWorks
>> version
>> >>>> 1.4.3, could this be the reason why your end seems to be working and
>> mine
>> >>>> not?
>> >>>>
>> >>>> Jason.
>> >>>>
>> >>>>
>> >>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
>> >>>>
>> >>>>> Hi Jason,
>> >>>>>
>> >>>>> Then there's something other than what you've posted going wrong,
>> >>>>> since the parser generated from:
>> >>>>>
>> >>>>> start      : program EOF;
>> >>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>> >>>>> line       : 'L';
>> >>>>> query      : 'Q';
>> >>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>> >>>>>
>> >>>>> parses the input "\r\nL\r\n" just fine.
>> >>>>>
>> >>>>> Regards,
>> >>>>>
>> >>>>> Bart.
>> >>>>>
>> >>>>>
>> >>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com
>> >wrote:
>> >>>>>
>> >>>>>> Hi Bart,
>> >>>>>>
>> >>>>>> Thanks for the suggestion, although it doesn't work either... The
>> >>>>>> skip option does work but since I'll be doing something with the
>> whitespace
>> >>>>>> later I don't want to take this option. Is there something else
>> we're
>> >>>>>> missing?
>> >>>>>>
>> >>>>>> Jason.
>> >>>>>>
>> >>>>>>
>> >>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>> >>>>>>
>> >>>>>>> Hi Jason,
>> >>>>>>>
>> >>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com
>> >wrote:
>> >>>>>>>
>> >>>>>>>> ...
>> >>>>>>>>
>> >>>>>>>>
>> >>>>>>>> start : program ;
>> >>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>> >>>>>>>>
>> >>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used
>> >>>>>>>> in string
>> >>>>>>>>
>> >>>>>>>>
>> >>>>>>> A lexer rule must always match something: if it can match zero
>> >>>>>>> chars, it can/will go in an infinite loop.
>> >>>>>>>
>> >>>>>>> Do something like this:
>> >>>>>>>
>> >>>>>>> start : program ;
>> >>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>> >>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>> >>>>>>>
>> >>>>>>> or simply skip spaces like this:
>> >>>>>>>
>> >>>>>>> start : program ;
>> >>>>>>> program : line+ query*;
>> >>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>> >>>>>>>
>> >>>>>>> Regards,
>> >>>>>>>
>> >>>>>>> Bart.
>> >>>>>>>
>> >>>>>>
>> >>>>>>
>> >>>>>
>> >>>>
>> >>>
>> >>
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From cruxic at gmail.com  Fri Apr 13 16:58:26 2012
From: cruxic at gmail.com (Adam B)
Date: Fri, 13 Apr 2012 16:58:26 -0700
Subject: [antlr-interest] Noob needs help with: warning "Decision can match
 input such as X... using multiple alternatives"
Message-ID: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>

Hello all,

I'm learning antlr in hopes of creating a DSL.  To this end I need to
define a rule for nested "expressions" like:

       (1+2)*((3-4)/5)+7

After working around the left-recursion limitation I came up with something
like this (simplified for clarity):

-------help.g------
    grammar help;

    options
    {
        output=AST;
    }

    prog: expr EOF;

    expr
        : INT (binary_op^ expr)*
        | '('! expr ')'! (binary_op^ expr)*
        ;

    binary_op
        : '+'
        | '-'
        | '*'
        | '/'
        ;


    INT:    '0'..'9'+;
----------------

This creates a beautiful AST with one problem.  ANTLRWorks spits out this
warning:

    [16:47:14] warning(200): help.g:11:24:
    Decision can match input such as "'*'..'/'" using multiple
alternatives: 1, 2

    As a result, alternative(s) 2 were disabled for that input

What am I doing wrong?

Any help you could offer would be greatly appreciated!
- Adam B.

From jimi at temporal-wave.com  Fri Apr 13 17:10:58 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Apr 2012 17:10:58 -0700
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <CAFkEsQwphJQgdgOawhoMhdmSs0=H_ecy+ggUG4dfi=b2Qi4=6A@mail.gmail.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
	<CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
	<CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
	<CA+e3_ST_o+jxXbeaXJq7eqH5+j4KFOOj8ZvUX6y8sS17h84E-w@mail.gmail.com>
	<CAFkEsQwphJQgdgOawhoMhdmSs0=H_ecy+ggUG4dfi=b2Qi4=6A@mail.gmail.com>
Message-ID: <3AB82FCE-2557-43A1-B7BF-9D619BE603B2@temporal-wave.com>

Did you read my reply?

On Apr 13, 2012, at 3:55 PM, Jason Jones <jmjones5 at gmail.com> wrote:

> Yeah thanks, looks a bit better and definitely makes more sense, but still
> having the weird whitespace mismatch issue... :S
> 
> On 13 April 2012 14:34, Charles Daniels <cjdaniels4 at gmail.com> wrote:
> 
>> Try the following changes (note that some of your parser rules become
>> lexer rules):
>> 
>> atom : SMALL_ATOM | STRING;
>> 
>> COMMENT : '% ' ~('\n'|'\r')* '\r'? '\n' | '/*' ( options {greedy=false;} :
>> . )* '*/' ;
>> SMALL_ATOM : LOWERCASE_LETTER CHARACTER* ;
>> VARIABLE : UPPERCASE_LETTER CHARACTER* ;
>> NUMERAL : DIGIT+ ;
>> STRING : '"' (CHARACTER | WHITESPACE)* '"' ;
>> 
>> fragment CHARACTER : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL
>> ;
>> fragment LOWERCASE_LETTER : 'a' .. 'z' ;
>> fragment UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
>> fragment DIGIT : '0' .. '9' ;
>> fragment SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' |
>> '?' | '@' | '#' | '$' | '&' ;
>> 
>> 
>> I haven't tested this, but it should get you closer to what you need, if
>> it doesn't completely address the issue.
>> 
>> Regards,
>> Chuck
>> 
>> On Fri, Apr 13, 2012 at 9:03 AM, Jason Jones <jmjones5 at gmail.com> wrote:
>> 
>>> Ah, I see. I think I get what's been happening (whether I understand it is
>>> a different matter) there must be something else in the prolog grammar of
>>> mine that's changing the behaviour of the lexer/parser. I assumed that if
>>> I
>>> just added the rules you have that it would work the same as yours but
>>> apparently not. Here's the full grammar that I've been playing with:
>>> 
>>> //TODO: Add grammar for operators
>>> //TODO: Add grammar for lists - DONE
>>> //TODO: Add grammar for comments - DONE
>>> //TODO: Add grammar for whitespace
>>> 
>>> grammar prolog;
>>> 
>>> //options {
>>> //output=template;
>>> //rewrite=true;
>>> //}
>>> 
>>> start : program EOF;
>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>> line    :    'L';
>>> query    :    'Q';
>>> //line : clause | comment ;
>>> comment : '% ' string '\r\n' | '/*' string '*/' ; //Doesn't allow commas,
>>> parenthese, square brakets, etc. in comments. Consider fixing!
>>> //Another issue being how the single line comment is ended is it
>>> determined
>>> by the newline character?
>>> clause : predicate ('.' | ':-' predicate_list '.') ;
>>> predicate : atom | atom '(' term_list ')' ;
>>> predicate_list : predicate (',' predicate)* ;
>>> list : '[' term_list ('|' term)? ']' ;
>>> 
>>> structure : atom '(' term_list ')' ;
>>> term_list : term (',' term)* ;
>>> 
>>> //query : '?-' predicate_list '.' ;
>>> 
>>> term : numeral | atom | variable | structure | list ;
>>> atom : small_atom | '\'' string '\'';
>>> small_atom : LOWERCASE_LETTER character*;
>>> variable : UPPERCASE_LETTER character* ;
>>> numeral : DIGIT+ ;
>>> character : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ;
>>> string : character+ (WHITESPACE+ character+)* ;
>>> 
>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ; //currently only used in
>>> string
>>> //NEWLINE : '\r\n' | '\n' ;
>>> LOWERCASE_LETTER : 'a' .. 'z' ;
>>> UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
>>> DIGIT : '0' .. '9' ;
>>> SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' | '?' | '@'
>>> | '#' | '$' | '&' ;
>>> 
>>> So when I create a grammar just including the rules you've suggested it
>>> works fine but why when I use the same rules in this grammar does it not
>>> work?
>>> 
>>> Jason.
>>> 
>>> On 13 April 2012 12:39, Bart Kiers <bkiers at gmail.com> wrote:
>>> 
>>>> You must be doing something wrong/different. Perhaps you're running an
>>> old
>>>> .class file?
>>>> I copied your prolog.g grammar and Main.java file and did this:
>>>> 
>>>> wget http://www.antlr.org/download/antlr-3.4-complete.jar
>>>> java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g
>>>> javac -cp antlr-3.4-complete.jar *.java
>>>> java -cp .:antlr-3.4-complete.jar Main
>>>> 
>>>> which didn't produce any error or warning.
>>>> 
>>>> Regards,
>>>> 
>>>> Bart.
>>>> 
>>>> 
>>>> 
>>>> On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com>
>>> wrote:
>>>> 
>>>>> Stranger... Okay will I've done a manual test using this class:
>>>>> 
>>>>> import org.antlr.runtime.*;
>>>>> 
>>>>> 
>>>>> public class Main {
>>>>>          public static void main(String[] args) throws Exception {
>>>>>               prologLexer lexer = new prologLexer(new
>>>>> ANTLRStringStream("\r\nL\r\n"));
>>>>>              prologParser parser = new prologParser(new
>>>>> CommonTokenStream(lexer));
>>>>>              parser.start();
>>>>>          }
>>>>> }
>>>>> 
>>>>> After running it like so:
>>>>> 
>>>>> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
>>>>> line 1:0 mismatched input '\r\n' expecting WHITESPACE
>>>>> 
>>>>> I still seem to be getting the same issue ^. Here's the current grammar
>>>>> that I used to create the parser and lexer:
>>>>> 
>>>>> 
>>>>> start : program EOF;
>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>> line    :       'L';
>>>>> query   :       'Q';
>>>>> 
>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>>> 
>>>>> Jason.
>>>>> 
>>>>> 
>>>>> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
>>>>> 
>>>>>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse
>>> the
>>>>>> input just fine.
>>>>>> 
>>>>>> I'm assuming you're not entering "\r" and "\n" as literals, but are
>>>>>> actually entering line breaks in the text areas of ANTLRWorks'
>>>>>> interpreter... Perhaps you've selected ANTLRWorks to start parsing
>>> with a
>>>>>> different rule than the `start` rule? Anyway, forget about ANTLRWorks
>>> for a
>>>>>> moment and whip up a manual test:
>>>>>> 
>>>>>> public class Main {
>>>>>>  public static void main(String[] args) throws Exception {
>>>>>>    TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
>>>>>>    TParser parser = new TParser(new CommonTokenStream(lexer));
>>>>>>    parser.start();
>>>>>>  }
>>>>>> }
>>>>>> 
>>>>>> 
>>>>>> Bart.
>>>>>> 
>>>>>> 
>>>>>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com
>>>> wrote:
>>>>>> 
>>>>>>> Hi Bart,
>>>>>>> 
>>>>>>> I thing we're using different version of ANTLR (or something along
>>>>>>> those lines) as using your grammar I get a MismatchedTokenException
>>> using
>>>>>>> the input you've used "\r\nL\r\n". I'm currently using ANTLRWorks
>>> version
>>>>>>> 1.4.3, could this be the reason why your end seems to be working and
>>> mine
>>>>>>> not?
>>>>>>> 
>>>>>>> Jason.
>>>>>>> 
>>>>>>> 
>>>>>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
>>>>>>> 
>>>>>>>> Hi Jason,
>>>>>>>> 
>>>>>>>> Then there's something other than what you've posted going wrong,
>>>>>>>> since the parser generated from:
>>>>>>>> 
>>>>>>>> start      : program EOF;
>>>>>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>>>>> line       : 'L';
>>>>>>>> query      : 'Q';
>>>>>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
>>>>>>>> 
>>>>>>>> parses the input "\r\nL\r\n" just fine.
>>>>>>>> 
>>>>>>>> Regards,
>>>>>>>> 
>>>>>>>> Bart.
>>>>>>>> 
>>>>>>>> 
>>>>>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com
>>>> wrote:
>>>>>>>> 
>>>>>>>>> Hi Bart,
>>>>>>>>> 
>>>>>>>>> Thanks for the suggestion, although it doesn't work either... The
>>>>>>>>> skip option does work but since I'll be doing something with the
>>> whitespace
>>>>>>>>> later I don't want to take this option. Is there something else
>>> we're
>>>>>>>>> missing?
>>>>>>>>> 
>>>>>>>>> Jason.
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
>>>>>>>>> 
>>>>>>>>>> Hi Jason,
>>>>>>>>>> 
>>>>>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <jmjones5 at gmail.com
>>>> wrote:
>>>>>>>>>> 
>>>>>>>>>>> ...
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>>> start : program ;
>>>>>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
>>>>>>>>>>> 
>>>>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only used
>>>>>>>>>>> in string
>>>>>>>>>>> 
>>>>>>>>>>> 
>>>>>>>>>> A lexer rule must always match something: if it can match zero
>>>>>>>>>> chars, it can/will go in an infinite loop.
>>>>>>>>>> 
>>>>>>>>>> Do something like this:
>>>>>>>>>> 
>>>>>>>>>> start : program ;
>>>>>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
>>>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
>>>>>>>>>> 
>>>>>>>>>> or simply skip spaces like this:
>>>>>>>>>> 
>>>>>>>>>> start : program ;
>>>>>>>>>> program : line+ query*;
>>>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
>>>>>>>>>> 
>>>>>>>>>> Regards,
>>>>>>>>>> 
>>>>>>>>>> Bart.
>>>>>>>>>> 
>>>>>>>>> 
>>>>>>>>> 
>>>>>>>> 
>>>>>>> 
>>>>>> 
>>>>> 
>>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>> 
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rapczynskimatthew at fhda.edu  Fri Apr 13 18:55:21 2012
From: rapczynskimatthew at fhda.edu (Matt Rapczynski)
Date: Fri, 13 Apr 2012 18:55:21 -0700
Subject: [antlr-interest] Fighting with Mismatched Character Exceptions
In-Reply-To: <4F88D861.8070006@fhda.edu>
References: <4F88D861.8070006@fhda.edu>
Message-ID: <4F88D909.9080009@fhda.edu>

Howdy,

I am working on a research project to develop a PL/SQL documentation 
tool in the hopes of picking up where some previous developers had left 
off years. My goal is create something javadoc-like, especially since 
PL/SQL supports multi line /* */ comments. The existing ANTLR grammer 
files out there just don't work, and it doesn't seem like me trying a 
crack at it would be all that hard. I picked up the Definitive ANTLR 
reference book earlier today, and so far I have successfully created an 
AST that models an input source code file into a nice relationship of 
parent package, procedure, function, and parameter nodes.

I'm stuck right now trying to get the lexer to appreciate the difference 
between the string literal "in" and the string literal "is". Given this 
code sample...

procedure P_RenderPage(p_param1 varchar2, p_param2 in out number, 
p_param3 cursor%rowtype)

...the lexer is insisting through MismatchedCharacter exceptions that 
the "in" (following p_param2) really should be "is" because that matches 
a different token definition which drops any use of the "is" keyword 
altogether. It's not a language keyword relevant to generating docs. 
Here are the details:

Error Message:

line 2:52 mismatched character 'n' expecting 's'

That rules that should work just fine:

parameter
     :    ORACLE_IDENTIFIER ' ' parameter_modifier* oracle_type -> 
^(PARAM ORACLE_IDENTIFIER oracle_type parameter_modifier*);

parameter_modifier
     :    ('in' | 'out' | 'nocopy') ' '*;

The token that sticking its nose where it doesn't belong:

STATEMENT_TERMINATORS
     :    ' '* (';' | 'is' | 'as' | 'end') ' '* { $channel = HIDDEN; };

I've read some elaborate commentary about how the lexer selects a rule 
to work with, but "in" and "is" are in fact different How can it 
possibly be messing that up? Is there anything I can do? I really should 
be capturing those parameter modifiers because they can signify some 
pretty important behavioral changes that belong in a good documentation 
tool.

Thanks in advance for any help!

-- 
Matt Rapczynski
ETS/IS, Database Analyst
Foothill-De Anza College District


From jmjones5 at gmail.com  Sat Apr 14 05:46:20 2012
From: jmjones5 at gmail.com (Jason Jones)
Date: Sat, 14 Apr 2012 13:46:20 +0100
Subject: [antlr-interest] Whitespace matching
In-Reply-To: <3AB82FCE-2557-43A1-B7BF-9D619BE603B2@temporal-wave.com>
References: <CAFkEsQwW2KiLU8R7w8sN8tyHz+vYuE+frdA2QOunDzhU88ceFw@mail.gmail.com>
	<CAOrgODZqi0ST9bwhpXKMJ_8vi-2v=Wo-TpV_=+2mbBD355dYRQ@mail.gmail.com>
	<CAFkEsQyLqxZUv1yxbR3pM9tS5njpNEAgdRAoH3iDTji0PtpjUQ@mail.gmail.com>
	<CAOrgODbfkoD8Don0czVx0r6K+e-E38m7a800+h2xGA65g5N3Og@mail.gmail.com>
	<CAFkEsQz99z9LPi6enOc2+1c-SZJaaD0-1h-jeQuZwH80L6_02Q@mail.gmail.com>
	<CAOrgODZug=sJ=1x0EOmfxYkScF5=+pQPHYBNk9sDppsu_kT15Q@mail.gmail.com>
	<CAFkEsQzSEWH+SSdCRQFd1TSeA7PVsACOkWBYcptPg3tmdC+AFg@mail.gmail.com>
	<CAOrgODbnrFzGRKLr2tkrvrUgfnkn8TneVNRup5nVpQ2QR9sWcQ@mail.gmail.com>
	<CAFkEsQy8ZcDz=1LY=4BHdoM3v8pbu7s_=O4H0=GCk_r+5+iwtg@mail.gmail.com>
	<CA+e3_ST_o+jxXbeaXJq7eqH5+j4KFOOj8ZvUX6y8sS17h84E-w@mail.gmail.com>
	<CAFkEsQwphJQgdgOawhoMhdmSs0=H_ecy+ggUG4dfi=b2Qi4=6A@mail.gmail.com>
	<3AB82FCE-2557-43A1-B7BF-9D619BE603B2@temporal-wave.com>
Message-ID: <CAFkEsQxpnuBQ_w8AneO=fw6fAKtkZ1NgrnwxaAWCJV9rGFNjJA@mail.gmail.com>

Hi Jim,

Didn't see it before, sorry. Seems there's a lot of hidden complexity in
antlr that I've got to understand. I've not read the starting wiki is there
anything in particular I should be looking at? I've just be working from
the antlr reference book.

I think what I'm really missing is how the grammar really maps to the java
output of antlr.

Jason.

On 14 April 2012 01:10, Jim Idle <jimi at temporal-wave.com> wrote:

> Did you read my reply?
>
> On Apr 13, 2012, at 3:55 PM, Jason Jones <jmjones5 at gmail.com> wrote:
>
> > Yeah thanks, looks a bit better and definitely makes more sense, but
> still
> > having the weird whitespace mismatch issue... :S
> >
> > On 13 April 2012 14:34, Charles Daniels <cjdaniels4 at gmail.com> wrote:
> >
> >> Try the following changes (note that some of your parser rules become
> >> lexer rules):
> >>
> >> atom : SMALL_ATOM | STRING;
> >>
> >> COMMENT : '% ' ~('\n'|'\r')* '\r'? '\n' | '/*' ( options
> {greedy=false;} :
> >> . )* '*/' ;
> >> SMALL_ATOM : LOWERCASE_LETTER CHARACTER* ;
> >> VARIABLE : UPPERCASE_LETTER CHARACTER* ;
> >> NUMERAL : DIGIT+ ;
> >> STRING : '"' (CHARACTER | WHITESPACE)* '"' ;
> >>
> >> fragment CHARACTER : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT |
> SPECIAL
> >> ;
> >> fragment LOWERCASE_LETTER : 'a' .. 'z' ;
> >> fragment UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
> >> fragment DIGIT : '0' .. '9' ;
> >> fragment SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.'
> |
> >> '?' | '@' | '#' | '$' | '&' ;
> >>
> >>
> >> I haven't tested this, but it should get you closer to what you need, if
> >> it doesn't completely address the issue.
> >>
> >> Regards,
> >> Chuck
> >>
> >> On Fri, Apr 13, 2012 at 9:03 AM, Jason Jones <jmjones5 at gmail.com>
> wrote:
> >>
> >>> Ah, I see. I think I get what's been happening (whether I understand
> it is
> >>> a different matter) there must be something else in the prolog grammar
> of
> >>> mine that's changing the behaviour of the lexer/parser. I assumed that
> if
> >>> I
> >>> just added the rules you have that it would work the same as yours but
> >>> apparently not. Here's the full grammar that I've been playing with:
> >>>
> >>> //TODO: Add grammar for operators
> >>> //TODO: Add grammar for lists - DONE
> >>> //TODO: Add grammar for comments - DONE
> >>> //TODO: Add grammar for whitespace
> >>>
> >>> grammar prolog;
> >>>
> >>> //options {
> >>> //output=template;
> >>> //rewrite=true;
> >>> //}
> >>>
> >>> start : program EOF;
> >>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>> line    :    'L';
> >>> query    :    'Q';
> >>> //line : clause | comment ;
> >>> comment : '% ' string '\r\n' | '/*' string '*/' ; //Doesn't allow
> commas,
> >>> parenthese, square brakets, etc. in comments. Consider fixing!
> >>> //Another issue being how the single line comment is ended is it
> >>> determined
> >>> by the newline character?
> >>> clause : predicate ('.' | ':-' predicate_list '.') ;
> >>> predicate : atom | atom '(' term_list ')' ;
> >>> predicate_list : predicate (',' predicate)* ;
> >>> list : '[' term_list ('|' term)? ']' ;
> >>>
> >>> structure : atom '(' term_list ')' ;
> >>> term_list : term (',' term)* ;
> >>>
> >>> //query : '?-' predicate_list '.' ;
> >>>
> >>> term : numeral | atom | variable | structure | list ;
> >>> atom : small_atom | '\'' string '\'';
> >>> small_atom : LOWERCASE_LETTER character*;
> >>> variable : UPPERCASE_LETTER character* ;
> >>> numeral : DIGIT+ ;
> >>> character : LOWERCASE_LETTER | UPPERCASE_LETTER | DIGIT | SPECIAL ;
> >>> string : character+ (WHITESPACE+ character+)* ;
> >>>
> >>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ; //currently only used in
> >>> string
> >>> //NEWLINE : '\r\n' | '\n' ;
> >>> LOWERCASE_LETTER : 'a' .. 'z' ;
> >>> UPPERCASE_LETTER : 'A' .. 'Z' | '_' ;
> >>> DIGIT : '0' .. '9' ;
> >>> SPECIAL : '+' | '-' | '*' | '/' | '\\' | '^' | '~' | ':' | '.' | '?' |
> '@'
> >>> | '#' | '$' | '&' ;
> >>>
> >>> So when I create a grammar just including the rules you've suggested it
> >>> works fine but why when I use the same rules in this grammar does it
> not
> >>> work?
> >>>
> >>> Jason.
> >>>
> >>> On 13 April 2012 12:39, Bart Kiers <bkiers at gmail.com> wrote:
> >>>
> >>>> You must be doing something wrong/different. Perhaps you're running an
> >>> old
> >>>> .class file?
> >>>> I copied your prolog.g grammar and Main.java file and did this:
> >>>>
> >>>> wget http://www.antlr.org/download/antlr-3.4-complete.jar
> >>>> java -cp antlr-3.4-complete.jar org.antlr.Tool prolog.g
> >>>> javac -cp antlr-3.4-complete.jar *.java
> >>>> java -cp .:antlr-3.4-complete.jar Main
> >>>>
> >>>> which didn't produce any error or warning.
> >>>>
> >>>> Regards,
> >>>>
> >>>> Bart.
> >>>>
> >>>>
> >>>>
> >>>> On Fri, Apr 13, 2012 at 1:06 PM, Jason Jones <jmjones5 at gmail.com>
> >>> wrote:
> >>>>
> >>>>> Stranger... Okay will I've done a manual test using this class:
> >>>>>
> >>>>> import org.antlr.runtime.*;
> >>>>>
> >>>>>
> >>>>> public class Main {
> >>>>>          public static void main(String[] args) throws Exception {
> >>>>>               prologLexer lexer = new prologLexer(new
> >>>>> ANTLRStringStream("\r\nL\r\n"));
> >>>>>              prologParser parser = new prologParser(new
> >>>>> CommonTokenStream(lexer));
> >>>>>              parser.start();
> >>>>>          }
> >>>>> }
> >>>>>
> >>>>> After running it like so:
> >>>>>
> >>>>> $ java -cp .:/usr/local/antlr-3.4/lib/antlr-3.4-complete.jar Main
> >>>>> line 1:0 mismatched input '\r\n' expecting WHITESPACE
> >>>>>
> >>>>> I still seem to be getting the same issue ^. Here's the current
> grammar
> >>>>> that I used to create the parser and lexer:
> >>>>>
> >>>>>
> >>>>> start : program EOF;
> >>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>> line    :       'L';
> >>>>> query   :       'Q';
> >>>>>
> >>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
> >>>>>
> >>>>> Jason.
> >>>>>
> >>>>>
> >>>>> On 13 April 2012 07:12, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>>
> >>>>>> Both the interpreter and the debugger from ANTLRWorks (1.4.3) parse
> >>> the
> >>>>>> input just fine.
> >>>>>>
> >>>>>> I'm assuming you're not entering "\r" and "\n" as literals, but are
> >>>>>> actually entering line breaks in the text areas of ANTLRWorks'
> >>>>>> interpreter... Perhaps you've selected ANTLRWorks to start parsing
> >>> with a
> >>>>>> different rule than the `start` rule? Anyway, forget about
> ANTLRWorks
> >>> for a
> >>>>>> moment and whip up a manual test:
> >>>>>>
> >>>>>> public class Main {
> >>>>>>  public static void main(String[] args) throws Exception {
> >>>>>>    TLexer lexer = new TLexer(new ANTLRStringStream("\r\nL\r\n"));
> >>>>>>    TParser parser = new TParser(new CommonTokenStream(lexer));
> >>>>>>    parser.start();
> >>>>>>  }
> >>>>>> }
> >>>>>>
> >>>>>>
> >>>>>> Bart.
> >>>>>>
> >>>>>>
> >>>>>> On Fri, Apr 13, 2012 at 12:09 AM, Jason Jones <jmjones5 at gmail.com
> >>>> wrote:
> >>>>>>
> >>>>>>> Hi Bart,
> >>>>>>>
> >>>>>>> I thing we're using different version of ANTLR (or something along
> >>>>>>> those lines) as using your grammar I get a MismatchedTokenException
> >>> using
> >>>>>>> the input you've used "\r\nL\r\n". I'm currently using ANTLRWorks
> >>> version
> >>>>>>> 1.4.3, could this be the reason why your end seems to be working
> and
> >>> mine
> >>>>>>> not?
> >>>>>>>
> >>>>>>> Jason.
> >>>>>>>
> >>>>>>>
> >>>>>>> On 12 April 2012 22:06, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>>>>
> >>>>>>>> Hi Jason,
> >>>>>>>>
> >>>>>>>> Then there's something other than what you've posted going wrong,
> >>>>>>>> since the parser generated from:
> >>>>>>>>
> >>>>>>>> start      : program EOF;
> >>>>>>>> program    : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>>>>> line       : 'L';
> >>>>>>>> query      : 'Q';
> >>>>>>>> WHITESPACE : (' ' | '\t' | '\r' | '\n')+;
> >>>>>>>>
> >>>>>>>> parses the input "\r\nL\r\n" just fine.
> >>>>>>>>
> >>>>>>>> Regards,
> >>>>>>>>
> >>>>>>>> Bart.
> >>>>>>>>
> >>>>>>>>
> >>>>>>>> On Thu, Apr 12, 2012 at 10:48 PM, Jason Jones <jmjones5 at gmail.com
> >>>> wrote:
> >>>>>>>>
> >>>>>>>>> Hi Bart,
> >>>>>>>>>
> >>>>>>>>> Thanks for the suggestion, although it doesn't work either... The
> >>>>>>>>> skip option does work but since I'll be doing something with the
> >>> whitespace
> >>>>>>>>> later I don't want to take this option. Is there something else
> >>> we're
> >>>>>>>>> missing?
> >>>>>>>>>
> >>>>>>>>> Jason.
> >>>>>>>>>
> >>>>>>>>>
> >>>>>>>>> On 12 April 2012 19:10, Bart Kiers <bkiers at gmail.com> wrote:
> >>>>>>>>>
> >>>>>>>>>> Hi Jason,
> >>>>>>>>>>
> >>>>>>>>>> On Thu, Apr 12, 2012 at 6:43 PM, Jason Jones <
> jmjones5 at gmail.com
> >>>> wrote:
> >>>>>>>>>>
> >>>>>>>>>>> ...
> >>>>>>>>>>>
> >>>>>>>>>>>
> >>>>>>>>>>> start : program ;
> >>>>>>>>>>> program : WHITESPACE line+ WHITESPACE (query WHITESPACE)*;
> >>>>>>>>>>>
> >>>>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')* ; //currently only
> used
> >>>>>>>>>>> in string
> >>>>>>>>>>>
> >>>>>>>>>>>
> >>>>>>>>>> A lexer rule must always match something: if it can match zero
> >>>>>>>>>> chars, it can/will go in an infinite loop.
> >>>>>>>>>>
> >>>>>>>>>> Do something like this:
> >>>>>>>>>>
> >>>>>>>>>> start : program ;
> >>>>>>>>>> program : WHITESPACE? line+ WHITESPACE? (query WHITESPACE?)*;
> >>>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ ;
> >>>>>>>>>>
> >>>>>>>>>> or simply skip spaces like this:
> >>>>>>>>>>
> >>>>>>>>>> start : program ;
> >>>>>>>>>> program : line+ query*;
> >>>>>>>>>> WHITESPACE  : (' ' | '\t' | '\r' | '\n')+ {skip();} ;
> >>>>>>>>>>
> >>>>>>>>>> Regards,
> >>>>>>>>>>
> >>>>>>>>>> Bart.
> >>>>>>>>>>
> >>>>>>>>>
> >>>>>>>>>
> >>>>>>>>
> >>>>>>>
> >>>>>>
> >>>>>
> >>>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From list at toolazydogs.com  Sun Apr 15 09:04:27 2012
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sun, 15 Apr 2012 09:04:27 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>


On Apr 11, 2012, at 4:43 PM, Terence Parr wrote:

> Hiya,
> 
> I've  then speaking with the awesome people at stack exchange and they were okay with me pointing the support list at
> 
> http://stackoverflow.com/questions/tagged/antlr 
> 
> rather than using the mailing list. Well, we would have to phase it out or something and keep the archives available. Part of the issue is that people use both at the moment. there is no single place to go for questions.
> 
> Basically, I'm trying to reduce my system administration load. I've turned off p4 in favor of github and have turned off jira in favor of github's bug tracker.  I tried to move the confluence wiki to the on demand service, but I'm not sure it's ready for prime time yet so I backed off.
> 
> Moving to that website has a lot of advantages over an old-school mailing list, if you've ever used it. You can also treat it like a mailing list by asking for events when someone posts an antlr-tagged posting. It's set up very nicely for question-and-answer. It's also easier for people to post a question because they don't have to sign up for our mailing list. there is a good chance that they will have an account already at stackoverflow.com
> 
> Does anybody see any bears in the woods that I'm not? issues? those in favor?

Having a single place for storing old questions is quite compelling and stack exchange is an outstanding home.  One concern that I have is to how to facilitate general dialectic discussions.  I'm not sure stack exchange is a good place for that.

May I suggest stack exchange for user questions and a google groups dev list for tooling discussions?


Regards,
Alan
 

From parrt at cs.usfca.edu  Sun Apr 15 14:36:02 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 15 Apr 2012 14:36:02 -0700
Subject: [antlr-interest] gUnit for v4?
Message-ID: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>

Hi,

I started down the path of building the new version of gUnit for v4, but I'm beginning to question its value for the new version. Because I am pooh-poohing putting actions directly within a grammar, grammar can only yield parse trees. and looks nice to be able to say:

expr:
	"1"		-> (expr 1)
	"1+2"	-> (expr (expr 1) + (expr 2))

but so what? all that did was confirm that the parser generated by ANTLR works correctly. it's not telling you anything you didn't know by looking at the grammar.

In the old days we used to build ASTs and so we needed to check the structure. That need is no longer here. Also, these rules don't generate output and so we can't check input to output translation.

What it comes down to is this: we really need functional testing not unit testing for language applications, unless of course each rule returns a string that the translation of the input some phrase or something. But, it's just as easy to write calls to assertEquals() saying that input x should yield input y. If we are doing something other than generating output, such as building up a data structure, then we really do need to manually check that the data structure is solid given some input.

I'm trying to find a flaw in my logic. Is there something I'm missing about testing grammars? In v4, they will give you exactly what you want, unless there is a bug in ANTLR. But that's my problem not yours.

If we can't find a major benefit, then we should avoid introducing another moving part to the ANTLR ecosystem.

Ter

From oliver.zeigermann at gmail.com  Sun Apr 15 14:40:13 2012
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 15 Apr 2012 23:40:13 +0200
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
Message-ID: <CABJr57AcbmsKhyCf74zDdW7DfRG8vHAE_O-PDhmA3NM5_wsb9w@mail.gmail.com>

+1
Am 15.04.2012 23:36 schrieb "Terence Parr" <parrt at cs.usfca.edu>:

> Hi,
>
> I started down the path of building the new version of gUnit for v4, but
> I'm beginning to question its value for the new version. Because I am
> pooh-poohing putting actions directly within a grammar, grammar can only
> yield parse trees. and looks nice to be able to say:
>
> expr:
>        "1"             -> (expr 1)
>        "1+2"   -> (expr (expr 1) + (expr 2))
>
> but so what? all that did was confirm that the parser generated by ANTLR
> works correctly. it's not telling you anything you didn't know by looking
> at the grammar.
>
> In the old days we used to build ASTs and so we needed to check the
> structure. That need is no longer here. Also, these rules don't generate
> output and so we can't check input to output translation.
>
> What it comes down to is this: we really need functional testing not unit
> testing for language applications, unless of course each rule returns a
> string that the translation of the input some phrase or something. But,
> it's just as easy to write calls to assertEquals() saying that input x
> should yield input y. If we are doing something other than generating
> output, such as building up a data structure, then we really do need to
> manually check that the data structure is solid given some input.
>
> I'm trying to find a flaw in my logic. Is there something I'm missing
> about testing grammars? In v4, they will give you exactly what you want,
> unless there is a bug in ANTLR. But that's my problem not yours.
>
> If we can't find a major benefit, then we should avoid introducing another
> moving part to the ANTLR ecosystem.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sun Apr 15 14:44:28 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 15 Apr 2012 14:44:28 -0700
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <CABJr57AcbmsKhyCf74zDdW7DfRG8vHAE_O-PDhmA3NM5_wsb9w@mail.gmail.com>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
	<CABJr57AcbmsKhyCf74zDdW7DfRG8vHAE_O-PDhmA3NM5_wsb9w@mail.gmail.com>
Message-ID: <F87F002A-938E-4403-AD68-401B24922DE3@cs.usfca.edu>

Ah. I see that "Dr. Simplify" still awake in Germany. :)
Ter
On Apr 15, 2012, at 2:40 PM, Oliver Zeigermann wrote:

> +1
> Am 15.04.2012 23:36 schrieb "Terence Parr" <parrt at cs.usfca.edu>:
> 
>> Hi,
>> 
>> I started down the path of building the new version of gUnit for v4, but
>> I'm beginning to question its value for the new version. Because I am
>> pooh-poohing putting actions directly within a grammar, grammar can only
>> yield parse trees. and looks nice to be able to say:
>> 
>> expr:
>>       "1"             -> (expr 1)
>>       "1+2"   -> (expr (expr 1) + (expr 2))
>> 
>> but so what? all that did was confirm that the parser generated by ANTLR
>> works correctly. it's not telling you anything you didn't know by looking
>> at the grammar.
>> 
>> In the old days we used to build ASTs and so we needed to check the
>> structure. That need is no longer here. Also, these rules don't generate
>> output and so we can't check input to output translation.
>> 
>> What it comes down to is this: we really need functional testing not unit
>> testing for language applications, unless of course each rule returns a
>> string that the translation of the input some phrase or something. But,
>> it's just as easy to write calls to assertEquals() saying that input x
>> should yield input y. If we are doing something other than generating
>> output, such as building up a data structure, then we really do need to
>> manually check that the data structure is solid given some input.
>> 
>> I'm trying to find a flaw in my logic. Is there something I'm missing
>> about testing grammars? In v4, they will give you exactly what you want,
>> unless there is a bug in ANTLR. But that's my problem not yours.
>> 
>> If we can't find a major benefit, then we should avoid introducing another
>> moving part to the ANTLR ecosystem.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From oliver.zeigermann at gmail.com  Sun Apr 15 14:54:36 2012
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 15 Apr 2012 23:54:36 +0200
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <F87F002A-938E-4403-AD68-401B24922DE3@cs.usfca.edu>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
	<CABJr57AcbmsKhyCf74zDdW7DfRG8vHAE_O-PDhmA3NM5_wsb9w@mail.gmail.com>
	<F87F002A-938E-4403-AD68-401B24922DE3@cs.usfca.edu>
Message-ID: <CABJr57C1ivX6BN7Wp+SWyjYn4r9zSM3uhQzd7faJuKMswd28vQ@mail.gmail.com>

Correct! Both statements :)
Am 15.04.2012 23:44 schrieb "Terence Parr" <parrt at cs.usfca.edu>:

> Ah. I see that "Dr. Simplify" still awake in Germany. :)
> Ter
> On Apr 15, 2012, at 2:40 PM, Oliver Zeigermann wrote:
>
> > +1
> > Am 15.04.2012 23:36 schrieb "Terence Parr" <parrt at cs.usfca.edu>:
> >
> >> Hi,
> >>
> >> I started down the path of building the new version of gUnit for v4, but
> >> I'm beginning to question its value for the new version. Because I am
> >> pooh-poohing putting actions directly within a grammar, grammar can only
> >> yield parse trees. and looks nice to be able to say:
> >>
> >> expr:
> >>       "1"             -> (expr 1)
> >>       "1+2"   -> (expr (expr 1) + (expr 2))
> >>
> >> but so what? all that did was confirm that the parser generated by ANTLR
> >> works correctly. it's not telling you anything you didn't know by
> looking
> >> at the grammar.
> >>
> >> In the old days we used to build ASTs and so we needed to check the
> >> structure. That need is no longer here. Also, these rules don't generate
> >> output and so we can't check input to output translation.
> >>
> >> What it comes down to is this: we really need functional testing not
> unit
> >> testing for language applications, unless of course each rule returns a
> >> string that the translation of the input some phrase or something. But,
> >> it's just as easy to write calls to assertEquals() saying that input x
> >> should yield input y. If we are doing something other than generating
> >> output, such as building up a data structure, then we really do need to
> >> manually check that the data structure is solid given some input.
> >>
> >> I'm trying to find a flaw in my logic. Is there something I'm missing
> >> about testing grammars? In v4, they will give you exactly what you want,
> >> unless there is a bug in ANTLR. But that's my problem not yours.
> >>
> >> If we can't find a major benefit, then we should avoid introducing
> another
> >> moving part to the ANTLR ecosystem.
> >>
> >> Ter
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From kferrio at gmail.com  Sun Apr 15 15:54:21 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Sun, 15 Apr 2012 15:54:21 -0700
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
Message-ID: <CAAfeETr_hJdy_Ptbq-bpDO39UYgUOhZzTEM85YD3aNAi1V4mng@mail.gmail.com>

Simple is good.
+1
On Apr 15, 2012 2:36 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

> Hi,
>
> I started down the path of building the new version of gUnit for v4, but
> I'm beginning to question its value for the new version. Because I am
> pooh-poohing putting actions directly within a grammar, grammar can only
> yield parse trees. and looks nice to be able to say:
>
> expr:
>        "1"             -> (expr 1)
>        "1+2"   -> (expr (expr 1) + (expr 2))
>
> but so what? all that did was confirm that the parser generated by ANTLR
> works correctly. it's not telling you anything you didn't know by looking
> at the grammar.
>
> In the old days we used to build ASTs and so we needed to check the
> structure. That need is no longer here. Also, these rules don't generate
> output and so we can't check input to output translation.
>
> What it comes down to is this: we really need functional testing not unit
> testing for language applications, unless of course each rule returns a
> string that the translation of the input some phrase or something. But,
> it's just as easy to write calls to assertEquals() saying that input x
> should yield input y. If we are doing something other than generating
> output, such as building up a data structure, then we really do need to
> manually check that the data structure is solid given some input.
>
> I'm trying to find a flaw in my logic. Is there something I'm missing
> about testing grammars? In v4, they will give you exactly what you want,
> unless there is a bug in ANTLR. But that's my problem not yours.
>
> If we can't find a major benefit, then we should avoid introducing another
> moving part to the ANTLR ecosystem.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Sun Apr 15 19:27:01 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 15 Apr 2012 22:27:01 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
Message-ID: <CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>

Hi all,

I think killing off this list is a bad idea because the format here
complements the format at StackOverflow. We need both, but I do agree that
people should make use of both not just this list.

I just started using StackOverflow (SO) a few months ago and have spent
some serious hours just getting used to it.

Long story short.

1. Simple questions, simple answers.

2. The reputation game.

3. Vote counts do not always mean right answer or good question.

4. The serial upvoting detector. Yes Ter that was me, the mods taught me
how to get around it.

5. Having your questions and answers scrutinized by people who don't even
use ANTLR.

6. Losing lots of freedoms you have here.

7. Some people here who have implied reputations will lose them because
they are new to SO.
8. All post becoming

9. More fish answers than fishing answers. In other words, people tend to
give you a fish instead of teaching you to fish.

http://creativecommons.org/licenses/by-sa/3.0/

Eric

From jimi at temporal-wave.com  Sun Apr 15 19:32:23 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 15 Apr 2012 19:32:23 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
Message-ID: <7199356a83c7c0fa9894f8d17ab1a4bb@mail.gmail.com>

I like fish.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric
> Sent: Sunday, April 15, 2012 7:27 PM
> To: Terence Parr
> Cc: stringtemplate-interest at antlr.org List; ANTLR interest
> Subject: Re: [antlr-interest] contemplating a move of mailing list to
> stackoverflow.com
>
> Hi all,
>
> I think killing off this list is a bad idea because the format here
> complements the format at StackOverflow. We need both, but I do agree
> that people should make use of both not just this list.
>
> I just started using StackOverflow (SO) a few months ago and have spent
> some serious hours just getting used to it.
>
> Long story short.
>
> 1. Simple questions, simple answers.
>
> 2. The reputation game.
>
> 3. Vote counts do not always mean right answer or good question.
>
> 4. The serial upvoting detector. Yes Ter that was me, the mods taught
> me how to get around it.
>
> 5. Having your questions and answers scrutinized by people who don't
> even use ANTLR.
>
> 6. Losing lots of freedoms you have here.
>
> 7. Some people here who have implied reputations will lose them because
> they are new to SO.
> 8. All post becoming
>
> 9. More fish answers than fishing answers. In other words, people tend
> to give you a fish instead of teaching you to fish.
>
> http://creativecommons.org/licenses/by-sa/3.0/
>
> Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Sun Apr 15 19:40:01 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 15 Apr 2012 22:40:01 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <7199356a83c7c0fa9894f8d17ab1a4bb@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<7199356a83c7c0fa9894f8d17ab1a4bb@mail.gmail.com>
Message-ID: <CAN45N12+RnAG1Gcv=j4xGafcwy228a0rF+UFZhAQbkbrrH4bfg@mail.gmail.com>

At SO, if you were new then you would not have enough rep to make that
comment; in which case you would have to leave an answer. Then you would
get down votes for not using an answer properly, and then lose rep.

By the way, do you have an account there?

:)


On Sun, Apr 15, 2012 at 10:32 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> I like fish.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Eric
> > Sent: Sunday, April 15, 2012 7:27 PM
> > To: Terence Parr
> > Cc: stringtemplate-interest at antlr.org List; ANTLR interest
> > Subject: Re: [antlr-interest] contemplating a move of mailing list to
> > stackoverflow.com
> >
> > Hi all,
> >
> > I think killing off this list is a bad idea because the format here
> > complements the format at StackOverflow. We need both, but I do agree
> > that people should make use of both not just this list.
> >
> > I just started using StackOverflow (SO) a few months ago and have spent
> > some serious hours just getting used to it.
> >
> > Long story short.
> >
> > 1. Simple questions, simple answers.
> >
> > 2. The reputation game.
> >
> > 3. Vote counts do not always mean right answer or good question.
> >
> > 4. The serial upvoting detector. Yes Ter that was me, the mods taught
> > me how to get around it.
> >
> > 5. Having your questions and answers scrutinized by people who don't
> > even use ANTLR.
> >
> > 6. Losing lots of freedoms you have here.
> >
> > 7. Some people here who have implied reputations will lose them because
> > they are new to SO.
> > 8. All post becoming
> >
> > 9. More fish answers than fishing answers. In other words, people tend
> > to give you a fish instead of teaching you to fish.
> >
> > http://creativecommons.org/licenses/by-sa/3.0/
> >
> > Eric
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cruxic at gmail.com  Mon Apr 16 10:23:59 2012
From: cruxic at gmail.com (Adam B)
Date: Mon, 16 Apr 2012 10:23:59 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
Message-ID: <CAGFMnfE3Exy27a37+sGL5gMAn_unZSJMJZEaUAXT4mN1D05UtQ@mail.gmail.com>

If the opinion of a Noob counts, I agree with Alan.  Stackoverflow is GREAT
for getting high quality answers to questions.  Go for it!  However, you'll
need a place for general discussion and, like Alan says, google groups is a
fine choice.
- AdamB

On Sun, Apr 15, 2012 at 9:04 AM, Alan D. Cabrera <list at toolazydogs.com>wrote:

>
> On Apr 11, 2012, at 4:43 PM, Terence Parr wrote:
>
> > Hiya,
> >
> > I've  then speaking with the awesome people at stack exchange and they
> were okay with me pointing the support list at
> >
> > http://stackoverflow.com/questions/tagged/antlr
> >
> > rather than using the mailing list. Well, we would have to phase it out
> or something and keep the archives available. Part of the issue is that
> people use both at the moment. there is no single place to go for questions.
> >
> > Basically, I'm trying to reduce my system administration load. I've
> turned off p4 in favor of github and have turned off jira in favor of
> github's bug tracker.  I tried to move the confluence wiki to the on demand
> service, but I'm not sure it's ready for prime time yet so I backed off.
> >
> > Moving to that website has a lot of advantages over an old-school
> mailing list, if you've ever used it. You can also treat it like a mailing
> list by asking for events when someone posts an antlr-tagged posting. It's
> set up very nicely for question-and-answer. It's also easier for people to
> post a question because they don't have to sign up for our mailing list.
> there is a good chance that they will have an account already at
> stackoverflow.com
> >
> > Does anybody see any bears in the woods that I'm not? issues? those in
> favor?
>
> Having a single place for storing old questions is quite compelling and
> stack exchange is an outstanding home.  One concern that I have is to how
> to facilitate general dialectic discussions.  I'm not sure stack exchange
> is a good place for that.
>
> May I suggest stack exchange for user questions and a google groups dev
> list for tooling discussions?
>
>
> Regards,
> Alan
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From peter.goetz at gutefrage.net  Mon Apr 16 10:36:12 2012
From: peter.goetz at gutefrage.net (=?iso-8859-1?Q?Peter_G=F6tz?=)
Date: Mon, 16 Apr 2012 19:36:12 +0200
Subject: [antlr-interest] problem with tree parsing -> don't get a tree
 walker to work correctly
Message-ID: <2CEC15782427EE4486A5E0E8836A41BB24BAC0DC0B@ZENTRALE.gutefrage.muc>

Hi there, 

I am quite new to ANTLR and grammar parsing in general, but I am currently trying to implement an expression parser for arithmetic expressions of the following form: "foo:bar + bar:foo". So I have operands (foo:bar and bar:foo) and operators (+, -, * and /)
Those expressions are working fine with my current grammar and tree grammar. Now I want to enhance this parser to be able to handle functions of the form "function[foo:bar, bar:foo]". The function calls should be able to handle simple operands (like above), but also arithmetic expressions themselves as their parameters. 
I have created the attached two grammar files MetricArithmeticExpression.g to parse the expression and MetricArithmeticExpressionTreeWalker.g to build up a tree of Java objects for further use in my application. 
My problem now is that I am not able to handle parameter lists to functions, but only a single parameter. The problematic line in my MetricArithmeticExpressionTreeWalker.g is line 20, where I would like to give the list of parsed "expr" results to the FunctionNode. 
I have attached the grammar files, their compiled Lexer, Parser and TreeWalker classes (incl. .tokens files) and a simple test case for you to this message to make it easier for you to see the problem yourselves. I won't add the ANTLR jar file to not blow up this message unnecessarily (and I think you all have your copy ready ;) ). 
Can you please tell me how I can motivate ANTLR to add all the parsed "expr" nodes to my function node? I know that they are being parsed correctly, because when I debug into the TreeWalker I can see that they are generated and assigned to the variable "e", but the hand-over to the function node does only take place after all the parameters have been interpreted and so only the last one comes into the function node. 
Or did I miss something else in grammar parsing and my approach is wrong? Then please point me to the correct direction. 

Thanks a lot in advance for your help, this has now cost me half of Friday and the whole of today so far and currently I don't know what to try else. 

Best regards, 

Peter
-------------- next part --------------
A non-text attachment was scrubbed...
Name: MetricArithmeticExpressions.zip
Type: application/zip
Size: 12899 bytes
Desc: MetricArithmeticExpressions.zip
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120416/6f2f6998/attachment.zip 

From jimi at temporal-wave.com  Mon Apr 16 11:12:09 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2012 11:12:09 -0700
Subject: [antlr-interest] problem with tree parsing -> don't get a tree
 walker to work correctly
In-Reply-To: <2CEC15782427EE4486A5E0E8836A41BB24BAC0DC0B@ZENTRALE.gutefrage.muc>
References: <2CEC15782427EE4486A5E0E8836A41BB24BAC0DC0B@ZENTRALE.gutefrage.muc>
Message-ID: <c35c6b202c44027e29a85a5db50b4beb@mail.gmail.com>

Without looking at your code, I suggest that it looks like this:

 LBRACKET (e=expr (COMMA e=expr)*)? RBRACKET

But should look like this:

 LBRACKET (e+=expr (COMMA e+=expr)*)? RBRACKET


And e will be a List type (no generics) so any code should expect that.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter G?tz
> Sent: Monday, April 16, 2012 10:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] problem with tree parsing -> don't get a tree
> walker to work correctly
>
> Hi there,
>
> I am quite new to ANTLR and grammar parsing in general, but I am
> currently trying to implement an expression parser for arithmetic
> expressions of the following form: "foo:bar + bar:foo". So I have
> operands (foo:bar and bar:foo) and operators (+, -, * and /) Those
> expressions are working fine with my current grammar and tree grammar.
> Now I want to enhance this parser to be able to handle functions of the
> form "function[foo:bar, bar:foo]". The function calls should be able to
> handle simple operands (like above), but also arithmetic expressions
> themselves as their parameters.
> I have created the attached two grammar files
> MetricArithmeticExpression.g to parse the expression and
> MetricArithmeticExpressionTreeWalker.g to build up a tree of Java
> objects for further use in my application.
> My problem now is that I am not able to handle parameter lists to
> functions, but only a single parameter. The problematic line in my
> MetricArithmeticExpressionTreeWalker.g is line 20, where I would like
> to give the list of parsed "expr" results to the FunctionNode.
> I have attached the grammar files, their compiled Lexer, Parser and
> TreeWalker classes (incl. .tokens files) and a simple test case for you
> to this message to make it easier for you to see the problem
> yourselves. I won't add the ANTLR jar file to not blow up this message
> unnecessarily (and I think you all have your copy ready ;) ).
> Can you please tell me how I can motivate ANTLR to add all the parsed
> "expr" nodes to my function node? I know that they are being parsed
> correctly, because when I debug into the TreeWalker I can see that they
> are generated and assigned to the variable "e", but the hand-over to
> the function node does only take place after all the parameters have
> been interpreted and so only the last one comes into the function node.
> Or did I miss something else in grammar parsing and my approach is
> wrong? Then please point me to the correct direction.
>
> Thanks a lot in advance for your help, this has now cost me half of
> Friday and the whole of today so far and currently I don't know what to
> try else.
>
> Best regards,
>
> Peter

From ba1093 at wayne.edu  Mon Apr 16 11:54:12 2012
From: ba1093 at wayne.edu (Sonia Haiduc)
Date: Mon, 16 Apr 2012 14:54:12 -0400
Subject: [antlr-interest] CFP SCAM 2012 - submissions due May 4 (abstracts:
	April 29)
Message-ID: <4F8C6AD4.3070702@wayne.edu>

**********************************************************************
*     12th IEEE International Working Conference on Source           *
*                Code Analysis and Manipulation                      *
*                            SCAM 2012                               *
* http://scam2012.cs.usask.ca/                       *
*                                                                    *
*                     September 23 - 24, 2012                        *
*                 Riva Del Garda, Trento, Italy                      *
**********************************************************************
*                     *** CALL FOR PAPERS ***                        *
**********************************************************************

OVERVIEW/SCOPE
**************
The aim of  SCAM  is to bring  together researchers  and practitioners
working on theory, techniques and applications, which concern analysis
and/or manipulation of the source code of computer systems. While much
attention  in the wider  software engineering  community  is  properly
directed towards  other aspects of  systems  development and evolution,
such as  specification, design and requirements engineering, it is the
source code that contains the only precise description of the behavior
of the  system.  The  analysis and manipulation  of  source  code thus
remains a pressing concern.

COVERED TOPICS AND PAPER FORMATS
********************************
We welcome submission  of  *full papers*  that describe  original  and
significant work in the field of source code analysis and manipulation.
SCAM explicitly solicits results from any theoretical or technological
domain that can be applied to the following or similar topics:
- program transformation
- abstract interpretation
- program slicing
- source level software metrics
- decompilation
- source level testing and verification
- source level optimization
- program comprehension

SCAM  also welcomes *short tool papers* that introduce tools for source
code analysis and  manipulation. Tool papers should describe a concrete
source code analysis or manipulation tool that is available for download
and general use  and can  be  run and demonstrated  at  the conference.

Submitted papers should not be  longer than  10 pages (6 pages for tool
papers). All papers  submitted  should  follow  IEEE  Computer  Society
Press Proceedings Author Guidelines.  The  papers  should  be submitted
electronically in PDF form via the conference web site.Submitted papers
must not have  been previously  published or concurrently submitted for
consideration elsewhere.

In addition  to  the main  and  tool tracks,  SCAM 2012 solicits 2-page
*Frontiers position papers* describing a significantly new  idea in the
theory, technology, application or  engineering of source code analysis
and manipulation systems. Frontiers  authors will join in an open panel
discussion of the frontiers of the area at the conference.

IMPORTANT DATES
***************
Abstract submission (full and frontiers papers): April 29, 2012
Papers submission (full and frontiers papers): May 04, 2012
Tool papers submission: May 31, 2012
Notification full and frontier papers: June 16, 2012
Notification tool papers: June 21, 2012
Camera ready submission: July 06, 2012
Working Conference: September 23 - 24, 2012

PROCEEDINGS
***********
All  accepted  papers  will appear  in  the  proceedings  which  will be
published by the IEEE Computer Society Press. Best papers from SCAM 2012
will be considered for revision, extension, and publication in a special
issue of the Journal of Software: Evolution and Process.

ORGANIZING COMMITTEE
********************
*General Chair*
James R. Cordy, Queen's University, Canada

*Program Co-Chairs*
Mariano Ceccato, Fondazione Bruno Kessler, Italy
Zheng Li, Beijing University of Chemical Technology, China

*Tool Chair*
Chanchal K. Roy, University of Saskatchewan, Canada

*Local Arangements Chair*
Alessandro Marchetto, Fondazione Bruno Kessler, Italy

*Finance Chair*
Dave Binkley, Loyola University Maryland, USA

*Publications Chair*
Dawn Lawrie, Loyola University Maryland, USA

*Publicity Chair*
Sonia Haiduc, Wayne State University, Detroit, USA

*Web chair*
Minhaz Fahim Zibran, University of Saskatchewan, Canada


From burton.samograd at markit.com  Mon Apr 16 12:03:19 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Mon, 16 Apr 2012 15:03:19 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so as
 to not have to parse the whole file at once?
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>

Hello,
In the following Antlr example, the parser is used to generate an AST which is then converted into a CommonTreeNodeStream, which is then passed to the checker.
public static void main(String[] args) {

CalcLexer  lex  = new CalcLexer(
                        new ANTLRInputStream(System.in));
CommonTokenStream tokens = new CommonTokenStream(lex);
CalcParser parser = new CalcParser(tokens);

CalcParser.program_result result = parser.program();
CommonTree tree = (CommonTree) result.getTree();

CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
CalcChecker checker = new CalcChecker(nodes);
checker.program();

CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
CalcInterpreter interpreter = new CalcInterpreter(nodes);
interpreter.program();
}
Is it possible to get the parser to return a CommonTreeNodeStream that can be then passed to the Checker so that the whole file does not have to be lexed and parsed at once and rather as a stream of tokens and then tree nodes?
I ask because we are running into a problem with an extremely large file being passed into our Antlr parser and it is causing memory exhaustion in the parsing phase. I am thinking that using a TreeNodeStream would solve this problem if it is even possible.
--
Burton Samograd


________________________________
This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From researcher0x00 at gmail.com  Mon Apr 16 12:14:38 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 16 Apr 2012 15:14:38 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
Message-ID: <CAN45N11Qfbzz2y7mqWQHwn8i2i7m2wAc5BxGqSxH1UFpcJNtsw@mail.gmail.com>

I see you use both SO and ANTLR interest list.

It sounds like your problem has more to do with being a large file, than
trying to find out if your purposed solution works. While I have not had
this problem, it is a common one mentioned here.

Try

http://antlr.markmail.org/search/ with large file.


On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <burton.samograd at markit.com
> wrote:

> Hello,
> In the following Antlr example, the parser is used to generate an AST
> which is then converted into a CommonTreeNodeStream, which is then passed
> to the checker.
> public static void main(String[] args) {
>
> CalcLexer  lex  = new CalcLexer(
>                        new ANTLRInputStream(System.in));
> CommonTokenStream tokens = new CommonTokenStream(lex);
> CalcParser parser = new CalcParser(tokens);
>
> CalcParser.program_result result = parser.program();
> CommonTree tree = (CommonTree) result.getTree();
>
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> CalcChecker checker = new CalcChecker(nodes);
> checker.program();
>
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> interpreter.program();
> }
> Is it possible to get the parser to return a CommonTreeNodeStream that can
> be then passed to the Checker so that the whole file does not have to be
> lexed and parsed at once and rather as a stream of tokens and then tree
> nodes?
> I ask because we are running into a problem with an extremely large file
> being passed into our Antlr parser and it is causing memory exhaustion in
> the parsing phase. I am thinking that using a TreeNodeStream would solve
> this problem if it is even possible.
> --
> Burton Samograd
>
>
> ________________________________
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any retention,
> use or disclosure not expressly authorised by Markit is prohibited. This
> email is subject to all waivers and other terms at the following link:
> http://www.markit.com/en/about/legal/email-disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page? for
> contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Mon Apr 16 12:47:43 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 16 Apr 2012 15:47:43 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
Message-ID: <CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>

On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <burton.samograd at markit.com
> wrote:

> Hello,
> In the following Antlr example, the parser is used to generate an AST
> which is then converted into a CommonTreeNodeStream, which is then passed
> to the checker.
> public static void main(String[] args) {
>
> CalcLexer  lex  = new CalcLexer(
>                        new ANTLRInputStream(System.in));
> CommonTokenStream tokens = new CommonTokenStream(lex);
> CalcParser parser = new CalcParser(tokens);
>
> CalcParser.program_result result = parser.program();
> CommonTree tree = (CommonTree) result.getTree();
>
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> CalcChecker checker = new CalcChecker(nodes);
> checker.program();
>
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> interpreter.program();
> }
> Is it possible to get the parser to return a CommonTreeNodeStream that can
> be then passed to the Checker so that the whole file does not have to be
> lexed and parsed at once and rather as a stream of tokens and then tree
> nodes?
>
If I am understanding this correctly, you want to do partial parsing, and
then generating a partial AST because the file is to large. Since the lexer
has to lex/scan the entire text file to create the tokens for the parser,
you cannot do a partial lexing of the input.

Ter did something with scannerless parsing several months ago, but since I
never worked with it I cannot say it will help, but is something I
personally would look into for your problem, but not expect it to work. I
have had stranger suggestions that worked.

I would also profile the running of the grammar to see which part of the
grammar is using too much memory and try altering the grammar and/or adding
actions to correct the problem.

Usually one wants the entire AST before doing analysis, so I am curious as
to what you would do with an the AST tokens being processed as a stream
instead of a DOM.

As a worse case, you could switch to overriding parts of the ANTLR parser
with hand written code, or even worse, switch to a different type of
parser, i.e. LR, parser combinator, fully hand written recursive descent.

You can also contract for support from Ter.

 Eric.





> I ask because we are running into a problem with an extremely large file
> being passed into our Antlr parser and it is causing memory exhaustion in
> the parsing phase. I am thinking that using a TreeNodeStream would solve
> this problem if it is even possible.
> --
> Burton Samograd
>
>
> ________________________________
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any retention,
> use or disclosure not expressly authorised by Markit is prohibited. This
> email is subject to all waivers and other terms at the following link:
> http://www.markit.com/en/about/legal/email-disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page? for
> contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Norman at dunbar-it.co.uk  Mon Apr 16 12:59:06 2012
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Mon, 16 Apr 2012 20:59:06 +0100
Subject: [antlr-interest] Noob needs help with: warning "Decision can
 match input such as X... using multiple alternatives"
In-Reply-To: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>
References: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>
Message-ID: <4F8C7A0A.6070508@dunbar-it.co.uk>

Evening Adam,

as one noob to another then, here's what I think. I noticed you haven't 
had any replies yet, so idf I put something obviously incorrect, I'm 
sure we'll get jumped on by those who know better than I do! Let's hope 
so anyway!


> I'm learning antlr in hopes of creating a DSL.  To this end I need to
> define a rule for nested "expressions" like:
>
>         (1+2)*((3-4)/5)+7
>

Does this help? It's not mine, it's one of the ANTLR examples:

grammar SimpleCalc;

tokens {
	PLUS 	= '+' ;
	MINUS	= '-' ;
	MULT	= '*' ;
	DIV	= '/' ;
}


/*------------------------------------------------------------------
  * PARSER RULES
  *------------------------------------------------------------------*/

expr	: term ( ( PLUS | MINUS )  term )* ;

term	: factor ( ( MULT | DIV ) factor )* ;

factor	: NUMBER ;


/*------------------------------------------------------------------
  * LEXER RULES
  *------------------------------------------------------------------*/

NUMBER	: (DIGIT)+ ;

WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ 	{ $channel = 
HIDDEN; } ;

fragment DIGIT	: '0'..'9' ;


Now, I'm not convinced that the above is complete, yet, but as a simple 
grammar it's fine. I'd be thinking about a FACTOR being also able to be 
a '(' followed by an expr followed by a ')'. Something like:


factor	: NUMBER |
	LPAREN expr RPAREN;

Where LPAREN and RPAREN are defined in the tokens table.


HTH


Cheers,
Norm.


-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767

From researcher0x00 at gmail.com  Mon Apr 16 13:12:00 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 16 Apr 2012 16:12:00 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
Message-ID: <CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>

I just notice that you are using an earlier version of the C target. There
has been lots of messages here about running out of memory for that
version. Check the mailing list for old post. Since I don't use the C
target and Jim Idle created it, is the expert on it, and is here regularly,
he might jump in on this. Anything he suggests is worth the trouble of
looking into, even if it means a few days of work.

Eric

On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com> wrote:

>
>
> On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> burton.samograd at markit.com> wrote:
>
>> Hello,
>> In the following Antlr example, the parser is used to generate an AST
>> which is then converted into a CommonTreeNodeStream, which is then passed
>> to the checker.
>> public static void main(String[] args) {
>>
>> CalcLexer  lex  = new CalcLexer(
>>                        new ANTLRInputStream(System.in));
>> CommonTokenStream tokens = new CommonTokenStream(lex);
>> CalcParser parser = new CalcParser(tokens);
>>
>> CalcParser.program_result result = parser.program();
>> CommonTree tree = (CommonTree) result.getTree();
>>
>> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>> CalcChecker checker = new CalcChecker(nodes);
>> checker.program();
>>
>> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>> CalcInterpreter interpreter = new CalcInterpreter(nodes);
>> interpreter.program();
>> }
>> Is it possible to get the parser to return a CommonTreeNodeStream that
>> can be then passed to the Checker so that the whole file does not have to
>> be lexed and parsed at once and rather as a stream of tokens and then tree
>> nodes?
>>
> If I am understanding this correctly, you want to do partial parsing, and
> then generating a partial AST because the file is to large. Since the lexer
> has to lex/scan the entire text file to create the tokens for the parser,
> you cannot do a partial lexing of the input.
>
> Ter did something with scannerless parsing several months ago, but since I
> never worked with it I cannot say it will help, but is something I
> personally would look into for your problem, but not expect it to work. I
> have had stranger suggestions that worked.
>
> I would also profile the running of the grammar to see which part of the
> grammar is using too much memory and try altering the grammar and/or adding
> actions to correct the problem.
>
> Usually one wants the entire AST before doing analysis, so I am curious as
> to what you would do with an the AST tokens being processed as a stream
> instead of a DOM.
>
> As a worse case, you could switch to overriding parts of the ANTLR parser
> with hand written code, or even worse, switch to a different type of
> parser, i.e. LR, parser combinator, fully hand written recursive descent.
>
> You can also contract for support from Ter.
>
>  Eric.
>
>
>
>
>
>> I ask because we are running into a problem with an extremely large file
>> being passed into our Antlr parser and it is causing memory exhaustion in
>> the parsing phase. I am thinking that using a TreeNodeStream would solve
>> this problem if it is even possible.
>> --
>> Burton Samograd
>>
>>
>> ________________________________
>> This e-mail, including accompanying communications and attachments, is
>> strictly confidential and only for the intended recipient. Any retention,
>> use or disclosure not expressly authorised by Markit is prohibited. This
>> email is subject to all waivers and other terms at the following link:
>> http://www.markit.com/en/about/legal/email-disclaimer.page
>>
>> Please visit http://www.markit.com/en/about/contact/contact-us.page? for
>> contact information on our offices worldwide.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Mon Apr 16 13:41:45 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2012 13:41:45 -0700
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
Message-ID: <447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>

This isn't the C target unless someone added 'new' to the ANSI C standard
when I was not looking.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric
> Sent: Monday, April 16, 2012 1:12 PM
> To: Burton Samograd
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> I just notice that you are using an earlier version of the C target.
> There has been lots of messages here about running out of memory for
> that version. Check the mailing list for old post. Since I don't use
> the C target and Jim Idle created it, is the expert on it, and is here
> regularly, he might jump in on this. Anything he suggests is worth the
> trouble of looking into, even if it means a few days of work.
>
> Eric
>
> On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com> wrote:
>
> >
> >
> > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > burton.samograd at markit.com> wrote:
> >
> >> Hello,
> >> In the following Antlr example, the parser is used to generate an
> AST
> >> which is then converted into a CommonTreeNodeStream, which is then
> >> passed to the checker.
> >> public static void main(String[] args) {
> >>
> >> CalcLexer  lex  = new CalcLexer(
> >>                        new ANTLRInputStream(System.in));
> >> CommonTokenStream tokens = new CommonTokenStream(lex); CalcParser
> >> parser = new CalcParser(tokens);
> >>
> >> CalcParser.program_result result = parser.program(); CommonTree tree
> >> = (CommonTree) result.getTree();
> >>
> >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> >> CalcChecker checker = new CalcChecker(nodes); checker.program();
> >>
> >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> >> interpreter.program(); } Is it possible to get the parser to return
> a
> >> CommonTreeNodeStream that can be then passed to the Checker so that
> >> the whole file does not have to be lexed and parsed at once and
> >> rather as a stream of tokens and then tree nodes?
> >>
> > If I am understanding this correctly, you want to do partial parsing,
> > and then generating a partial AST because the file is to large. Since
> > the lexer has to lex/scan the entire text file to create the tokens
> > for the parser, you cannot do a partial lexing of the input.
> >
> > Ter did something with scannerless parsing several months ago, but
> > since I never worked with it I cannot say it will help, but is
> > something I personally would look into for your problem, but not
> > expect it to work. I have had stranger suggestions that worked.
> >
> > I would also profile the running of the grammar to see which part of
> > the grammar is using too much memory and try altering the grammar
> > and/or adding actions to correct the problem.
> >
> > Usually one wants the entire AST before doing analysis, so I am
> > curious as to what you would do with an the AST tokens being
> processed
> > as a stream instead of a DOM.
> >
> > As a worse case, you could switch to overriding parts of the ANTLR
> > parser with hand written code, or even worse, switch to a different
> > type of parser, i.e. LR, parser combinator, fully hand written
> recursive descent.
> >
> > You can also contract for support from Ter.
> >
> >  Eric.
> >
> >
> >
> >
> >
> >> I ask because we are running into a problem with an extremely large
> >> file being passed into our Antlr parser and it is causing memory
> >> exhaustion in the parsing phase. I am thinking that using a
> >> TreeNodeStream would solve this problem if it is even possible.
> >> --
> >> Burton Samograd
> >>
> >>
> >> ________________________________
> >> This e-mail, including accompanying communications and attachments,
> >> is strictly confidential and only for the intended recipient. Any
> >> retention, use or disclosure not expressly authorised by Markit is
> >> prohibited. This email is subject to all waivers and other terms at
> the following link:
> >> http://www.markit.com/en/about/legal/email-disclaimer.page
> >>
> >> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> >> for contact information on our offices worldwide.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From burton.samograd at markit.com  Mon Apr 16 13:45:02 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Mon, 16 Apr 2012 16:45:02 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
	<447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14B379AC98@NJ4MSGSCR02.markit.partners>

Jim,

I just used that as an example.  It is similar to the process that we are using in our lexer/parser.

--
Burton

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, April 16, 2012 2:42 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so as to not have to parse the whole file at once?

This isn't the C target unless someone added 'new' to the ANSI C standard when I was not looking.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric
> Sent: Monday, April 16, 2012 1:12 PM
> To: Burton Samograd
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> I just notice that you are using an earlier version of the C target.
> There has been lots of messages here about running out of memory for
> that version. Check the mailing list for old post. Since I don't use
> the C target and Jim Idle created it, is the expert on it, and is here
> regularly, he might jump in on this. Anything he suggests is worth the
> trouble of looking into, even if it means a few days of work.
>
> Eric
>
> On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com> wrote:
>
> >
> >
> > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > burton.samograd at markit.com> wrote:
> >
> >> Hello,
> >> In the following Antlr example, the parser is used to generate an
> AST
> >> which is then converted into a CommonTreeNodeStream, which is then
> >> passed to the checker.
> >> public static void main(String[] args) {
> >>
> >> CalcLexer  lex  = new CalcLexer(
> >>                        new ANTLRInputStream(System.in));
> >> CommonTokenStream tokens = new CommonTokenStream(lex); CalcParser
> >> parser = new CalcParser(tokens);
> >>
> >> CalcParser.program_result result = parser.program(); CommonTree
> >> tree = (CommonTree) result.getTree();
> >>
> >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> >> CalcChecker checker = new CalcChecker(nodes); checker.program();
> >>
> >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> >> interpreter.program(); } Is it possible to get the parser to return
> a
> >> CommonTreeNodeStream that can be then passed to the Checker so that
> >> the whole file does not have to be lexed and parsed at once and
> >> rather as a stream of tokens and then tree nodes?
> >>
> > If I am understanding this correctly, you want to do partial
> > parsing, and then generating a partial AST because the file is to
> > large. Since the lexer has to lex/scan the entire text file to
> > create the tokens for the parser, you cannot do a partial lexing of the input.
> >
> > Ter did something with scannerless parsing several months ago, but
> > since I never worked with it I cannot say it will help, but is
> > something I personally would look into for your problem, but not
> > expect it to work. I have had stranger suggestions that worked.
> >
> > I would also profile the running of the grammar to see which part of
> > the grammar is using too much memory and try altering the grammar
> > and/or adding actions to correct the problem.
> >
> > Usually one wants the entire AST before doing analysis, so I am
> > curious as to what you would do with an the AST tokens being
> processed
> > as a stream instead of a DOM.
> >
> > As a worse case, you could switch to overriding parts of the ANTLR
> > parser with hand written code, or even worse, switch to a different
> > type of parser, i.e. LR, parser combinator, fully hand written
> recursive descent.
> >
> > You can also contract for support from Ter.
> >
> >  Eric.
> >
> >
> >
> >
> >
> >> I ask because we are running into a problem with an extremely large
> >> file being passed into our Antlr parser and it is causing memory
> >> exhaustion in the parsing phase. I am thinking that using a
> >> TreeNodeStream would solve this problem if it is even possible.
> >> --
> >> Burton Samograd
> >>
> >>
> >> ________________________________
> >> This e-mail, including accompanying communications and attachments,
> >> is strictly confidential and only for the intended recipient. Any
> >> retention, use or disclosure not expressly authorised by Markit is
> >> prohibited. This email is subject to all waivers and other terms at
> the following link:
> >> http://www.markit.com/en/about/legal/email-disclaimer.page
> >>
> >> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> >> for contact information on our offices worldwide.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From researcher0x00 at gmail.com  Mon Apr 16 13:45:35 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 16 Apr 2012 16:45:35 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
	<447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
Message-ID: <CAN45N126XqqHi6xyZ3XJGArGaOz06riwvaUsc07AJ6yLZo9S+Q@mail.gmail.com>

Nice catch Jim.

Burton, which ANTLR target are you using? e.g. ANTLR 3.4 C# 3, ANTLR 3.4
Java, ...

On Mon, Apr 16, 2012 at 4:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> This isn't the C target unless someone added 'new' to the ANSI C standard
> when I was not looking.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Eric
> > Sent: Monday, April 16, 2012 1:12 PM
> > To: Burton Samograd
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Can an Antlr Parser return a
> > TreeNodeStream so as to not have to parse the whole file at once?
> >
> > I just notice that you are using an earlier version of the C target.
> > There has been lots of messages here about running out of memory for
> > that version. Check the mailing list for old post. Since I don't use
> > the C target and Jim Idle created it, is the expert on it, and is here
> > regularly, he might jump in on this. Anything he suggests is worth the
> > trouble of looking into, even if it means a few days of work.
> >
> > Eric
> >
> > On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com> wrote:
> >
> > >
> > >
> > > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > > burton.samograd at markit.com> wrote:
> > >
> > >> Hello,
> > >> In the following Antlr example, the parser is used to generate an
> > AST
> > >> which is then converted into a CommonTreeNodeStream, which is then
> > >> passed to the checker.
> > >> public static void main(String[] args) {
> > >>
> > >> CalcLexer  lex  = new CalcLexer(
> > >>                        new ANTLRInputStream(System.in));
> > >> CommonTokenStream tokens = new CommonTokenStream(lex); CalcParser
> > >> parser = new CalcParser(tokens);
> > >>
> > >> CalcParser.program_result result = parser.program(); CommonTree tree
> > >> = (CommonTree) result.getTree();
> > >>
> > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > >> CalcChecker checker = new CalcChecker(nodes); checker.program();
> > >>
> > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> > >> interpreter.program(); } Is it possible to get the parser to return
> > a
> > >> CommonTreeNodeStream that can be then passed to the Checker so that
> > >> the whole file does not have to be lexed and parsed at once and
> > >> rather as a stream of tokens and then tree nodes?
> > >>
> > > If I am understanding this correctly, you want to do partial parsing,
> > > and then generating a partial AST because the file is to large. Since
> > > the lexer has to lex/scan the entire text file to create the tokens
> > > for the parser, you cannot do a partial lexing of the input.
> > >
> > > Ter did something with scannerless parsing several months ago, but
> > > since I never worked with it I cannot say it will help, but is
> > > something I personally would look into for your problem, but not
> > > expect it to work. I have had stranger suggestions that worked.
> > >
> > > I would also profile the running of the grammar to see which part of
> > > the grammar is using too much memory and try altering the grammar
> > > and/or adding actions to correct the problem.
> > >
> > > Usually one wants the entire AST before doing analysis, so I am
> > > curious as to what you would do with an the AST tokens being
> > processed
> > > as a stream instead of a DOM.
> > >
> > > As a worse case, you could switch to overriding parts of the ANTLR
> > > parser with hand written code, or even worse, switch to a different
> > > type of parser, i.e. LR, parser combinator, fully hand written
> > recursive descent.
> > >
> > > You can also contract for support from Ter.
> > >
> > >  Eric.
> > >
> > >
> > >
> > >
> > >
> > >> I ask because we are running into a problem with an extremely large
> > >> file being passed into our Antlr parser and it is causing memory
> > >> exhaustion in the parsing phase. I am thinking that using a
> > >> TreeNodeStream would solve this problem if it is even possible.
> > >> --
> > >> Burton Samograd
> > >>
> > >>
> > >> ________________________________
> > >> This e-mail, including accompanying communications and attachments,
> > >> is strictly confidential and only for the intended recipient. Any
> > >> retention, use or disclosure not expressly authorised by Markit is
> > >> prohibited. This email is subject to all waivers and other terms at
> > the following link:
> > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > >>
> > >> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> > >> for contact information on our offices worldwide.
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >>
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From burton.samograd at markit.com  Mon Apr 16 13:47:59 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Mon, 16 Apr 2012 16:47:59 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <CAN45N126XqqHi6xyZ3XJGArGaOz06riwvaUsc07AJ6yLZo9S+Q@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
	<447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
	<CAN45N126XqqHi6xyZ3XJGArGaOz06riwvaUsc07AJ6yLZo9S+Q@mail.gmail.com>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14B379AC9C@NJ4MSGSCR02.markit.partners>

Antlr 3.1.3, C target wrapped for a C++ program.

--
Burton Samograd

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Eric
Sent: Monday, April 16, 2012 2:46 PM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so as to not have to parse the whole file at once?

Nice catch Jim.

Burton, which ANTLR target are you using? e.g. ANTLR 3.4 C# 3, ANTLR 3.4 Java, ...

On Mon, Apr 16, 2012 at 4:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> This isn't the C target unless someone added 'new' to the ANSI C
> standard when I was not looking.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Eric
> > Sent: Monday, April 16, 2012 1:12 PM
> > To: Burton Samograd
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Can an Antlr Parser return a
> > TreeNodeStream so as to not have to parse the whole file at once?
> >
> > I just notice that you are using an earlier version of the C target.
> > There has been lots of messages here about running out of memory for
> > that version. Check the mailing list for old post. Since I don't use
> > the C target and Jim Idle created it, is the expert on it, and is
> > here regularly, he might jump in on this. Anything he suggests is
> > worth the trouble of looking into, even if it means a few days of work.
> >
> > Eric
> >
> > On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com> wrote:
> >
> > >
> > >
> > > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > > burton.samograd at markit.com> wrote:
> > >
> > >> Hello,
> > >> In the following Antlr example, the parser is used to generate an
> > AST
> > >> which is then converted into a CommonTreeNodeStream, which is
> > >> then passed to the checker.
> > >> public static void main(String[] args) {
> > >>
> > >> CalcLexer  lex  = new CalcLexer(
> > >>                        new ANTLRInputStream(System.in));
> > >> CommonTokenStream tokens = new CommonTokenStream(lex); CalcParser
> > >> parser = new CalcParser(tokens);
> > >>
> > >> CalcParser.program_result result = parser.program(); CommonTree
> > >> tree = (CommonTree) result.getTree();
> > >>
> > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > >> CalcChecker checker = new CalcChecker(nodes); checker.program();
> > >>
> > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> > >> interpreter.program(); } Is it possible to get the parser to
> > >> return
> > a
> > >> CommonTreeNodeStream that can be then passed to the Checker so
> > >> that the whole file does not have to be lexed and parsed at once
> > >> and rather as a stream of tokens and then tree nodes?
> > >>
> > > If I am understanding this correctly, you want to do partial
> > > parsing, and then generating a partial AST because the file is to
> > > large. Since the lexer has to lex/scan the entire text file to
> > > create the tokens for the parser, you cannot do a partial lexing of the input.
> > >
> > > Ter did something with scannerless parsing several months ago, but
> > > since I never worked with it I cannot say it will help, but is
> > > something I personally would look into for your problem, but not
> > > expect it to work. I have had stranger suggestions that worked.
> > >
> > > I would also profile the running of the grammar to see which part
> > > of the grammar is using too much memory and try altering the
> > > grammar and/or adding actions to correct the problem.
> > >
> > > Usually one wants the entire AST before doing analysis, so I am
> > > curious as to what you would do with an the AST tokens being
> > processed
> > > as a stream instead of a DOM.
> > >
> > > As a worse case, you could switch to overriding parts of the ANTLR
> > > parser with hand written code, or even worse, switch to a
> > > different type of parser, i.e. LR, parser combinator, fully hand
> > > written
> > recursive descent.
> > >
> > > You can also contract for support from Ter.
> > >
> > >  Eric.
> > >
> > >
> > >
> > >
> > >
> > >> I ask because we are running into a problem with an extremely
> > >> large file being passed into our Antlr parser and it is causing
> > >> memory exhaustion in the parsing phase. I am thinking that using
> > >> a TreeNodeStream would solve this problem if it is even possible.
> > >> --
> > >> Burton Samograd
> > >>
> > >>
> > >> ________________________________
> > >> This e-mail, including accompanying communications and
> > >> attachments, is strictly confidential and only for the intended
> > >> recipient. Any retention, use or disclosure not expressly
> > >> authorised by Markit is prohibited. This email is subject to all
> > >> waivers and other terms at
> > the following link:
> > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > >>
> > >> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> > >> for contact information on our offices worldwide.
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >>
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From jimi at temporal-wave.com  Mon Apr 16 13:51:34 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2012 13:51:34 -0700
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14B379AC9C@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
	<447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
	<CAN45N126XqqHi6xyZ3XJGArGaOz06riwvaUsc07AJ6yLZo9S+Q@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14B379AC9C@NJ4MSGSCR02.markit.partners>
Message-ID: <bcd104f9a164af331c43809c7244334d@mail.gmail.com>

3.1? You should try 3.3 or maybe 3.4

However, your best bet is to partition your input. I have suggested some
ways to do that in past posts but if your input is not a calculator, then
I can't be any more specific. However, the fact that you can process the
TreeNodeStream (which is what is produced anyway) suggests that you can
partition this up before the lexer.

Jim



> -----Original Message-----
> From: Burton Samograd [mailto:burton.samograd at markit.com]
> Sent: Monday, April 16, 2012 1:48 PM
> To: Eric; Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> Antlr 3.1.3, C target wrapped for a C++ program.
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric
> Sent: Monday, April 16, 2012 2:46 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> Nice catch Jim.
>
> Burton, which ANTLR target are you using? e.g. ANTLR 3.4 C# 3, ANTLR
> 3.4 Java, ...
>
> On Mon, Apr 16, 2012 at 4:41 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> > This isn't the C target unless someone added 'new' to the ANSI C
> > standard when I was not looking.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Eric
> > > Sent: Monday, April 16, 2012 1:12 PM
> > > To: Burton Samograd
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Can an Antlr Parser return a
> > > TreeNodeStream so as to not have to parse the whole file at once?
> > >
> > > I just notice that you are using an earlier version of the C
> target.
> > > There has been lots of messages here about running out of memory
> for
> > > that version. Check the mailing list for old post. Since I don't
> use
> > > the C target and Jim Idle created it, is the expert on it, and is
> > > here regularly, he might jump in on this. Anything he suggests is
> > > worth the trouble of looking into, even if it means a few days of
> work.
> > >
> > > Eric
> > >
> > > On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com>
> wrote:
> > >
> > > >
> > > >
> > > > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > > > burton.samograd at markit.com> wrote:
> > > >
> > > >> Hello,
> > > >> In the following Antlr example, the parser is used to generate
> an
> > > AST
> > > >> which is then converted into a CommonTreeNodeStream, which is
> > > >> then passed to the checker.
> > > >> public static void main(String[] args) {
> > > >>
> > > >> CalcLexer  lex  = new CalcLexer(
> > > >>                        new ANTLRInputStream(System.in));
> > > >> CommonTokenStream tokens = new CommonTokenStream(lex);
> CalcParser
> > > >> parser = new CalcParser(tokens);
> > > >>
> > > >> CalcParser.program_result result = parser.program(); CommonTree
> > > >> tree = (CommonTree) result.getTree();
> > > >>
> > > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > > >> CalcChecker checker = new CalcChecker(nodes); checker.program();
> > > >>
> > > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > > >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> > > >> interpreter.program(); } Is it possible to get the parser to
> > > >> return
> > > a
> > > >> CommonTreeNodeStream that can be then passed to the Checker so
> > > >> that the whole file does not have to be lexed and parsed at once
> > > >> and rather as a stream of tokens and then tree nodes?
> > > >>
> > > > If I am understanding this correctly, you want to do partial
> > > > parsing, and then generating a partial AST because the file is to
> > > > large. Since the lexer has to lex/scan the entire text file to
> > > > create the tokens for the parser, you cannot do a partial lexing
> of the input.
> > > >
> > > > Ter did something with scannerless parsing several months ago,
> but
> > > > since I never worked with it I cannot say it will help, but is
> > > > something I personally would look into for your problem, but not
> > > > expect it to work. I have had stranger suggestions that worked.
> > > >
> > > > I would also profile the running of the grammar to see which part
> > > > of the grammar is using too much memory and try altering the
> > > > grammar and/or adding actions to correct the problem.
> > > >
> > > > Usually one wants the entire AST before doing analysis, so I am
> > > > curious as to what you would do with an the AST tokens being
> > > processed
> > > > as a stream instead of a DOM.
> > > >
> > > > As a worse case, you could switch to overriding parts of the
> ANTLR
> > > > parser with hand written code, or even worse, switch to a
> > > > different type of parser, i.e. LR, parser combinator, fully hand
> > > > written
> > > recursive descent.
> > > >
> > > > You can also contract for support from Ter.
> > > >
> > > >  Eric.
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >> I ask because we are running into a problem with an extremely
> > > >> large file being passed into our Antlr parser and it is causing
> > > >> memory exhaustion in the parsing phase. I am thinking that using
> > > >> a TreeNodeStream would solve this problem if it is even
> possible.
> > > >> --
> > > >> Burton Samograd
> > > >>
> > > >>
> > > >> ________________________________
> > > >> This e-mail, including accompanying communications and
> > > >> attachments, is strictly confidential and only for the intended
> > > >> recipient. Any retention, use or disclosure not expressly
> > > >> authorised by Markit is prohibited. This email is subject to all
> > > >> waivers and other terms at
> > > the following link:
> > > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > > >>
> > > >> Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > > >> for contact information on our offices worldwide.
> > > >>
> > > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> Unsubscribe:
> > > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > addres
> > > >> s
> > > >>
> > > >
> > > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at the
> following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.

From kferrio at gmail.com  Mon Apr 16 16:18:03 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Mon, 16 Apr 2012 16:18:03 -0700
Subject: [antlr-interest] Noob needs help with: warning "Decision can
 match input such as X... using multiple alternatives"
In-Reply-To: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>
References: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>
Message-ID: <CAAfeEToQ-p9Atf1YYa8BDyuoiuYyzM4B9KpEuR2FZUykVxaQcg@mail.gmail.com>

In addition to the examples swirling around the antlr website, have a look
at the screencasts posted by Scott Stanchfield on vimeo.

And if you really want to see how easy calculator-like parsing can be and
you're not afraid of working without a net, try the early access builds of
antlr v4, aka Honey Badger.  Besides making a lot of things dead simple, v4
has specific features for making algebraic expression parsing a snap.  Oh,
and it can handle direct left recursion.  Thanks be to Ter, Benevolent
ANTLR Dictator for Life!

Kyle
On Apr 13, 2012 4:58 PM, "Adam B" <cruxic at gmail.com> wrote:

> Hello all,
>
> I'm learning antlr in hopes of creating a DSL.  To this end I need to
> define a rule for nested "expressions" like:
>
>       (1+2)*((3-4)/5)+7
>
> After working around the left-recursion limitation I came up with something
> like this (simplified for clarity):
>
> -------help.g------
>    grammar help;
>
>    options
>    {
>        output=AST;
>    }
>
>    prog: expr EOF;
>
>    expr
>        : INT (binary_op^ expr)*
>        | '('! expr ')'! (binary_op^ expr)*
>        ;
>
>    binary_op
>        : '+'
>        | '-'
>        | '*'
>        | '/'
>        ;
>
>
>    INT:    '0'..'9'+;
> ----------------
>
> This creates a beautiful AST with one problem.  ANTLRWorks spits out this
> warning:
>
>    [16:47:14] warning(200): help.g:11:24:
>    Decision can match input such as "'*'..'/'" using multiple
> alternatives: 1, 2
>
>    As a result, alternative(s) 2 were disabled for that input
>
> What am I doing wrong?
>
> Any help you could offer would be greatly appreciated!
> - Adam B.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cruxic at gmail.com  Mon Apr 16 16:21:50 2012
From: cruxic at gmail.com (Adam B)
Date: Mon, 16 Apr 2012 16:21:50 -0700
Subject: [antlr-interest] Noob needs help with: warning "Decision can
 match input such as X... using multiple alternatives"
In-Reply-To: <4F8C7A0A.6070508@dunbar-it.co.uk>
References: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>
	<4F8C7A0A.6070508@dunbar-it.co.uk>
Message-ID: <CAGFMnfGjLW78bRrhmH=m+DaqKxkdiEG3b+GpB4Q9r2-UBXmt0w@mail.gmail.com>

Thanks for the reply, Norm.  I tried your suggested tweak to the calculator
example and it complains that

   "rule term has non-LL(*) decision due to recursive rule invocations..."


On Mon, Apr 16, 2012 at 12:59 PM, Norman Dunbar <Norman at dunbar-it.co.uk>wrote:

> Evening Adam,
>
> as one noob to another then, here's what I think. I noticed you haven't
> had any replies yet, so idf I put something obviously incorrect, I'm
> sure we'll get jumped on by those who know better than I do! Let's hope
> so anyway!
>
>
> > I'm learning antlr in hopes of creating a DSL.  To this end I need to
> > define a rule for nested "expressions" like:
> >
> >         (1+2)*((3-4)/5)+7
> >
>
> Does this help? It's not mine, it's one of the ANTLR examples:
>
> grammar SimpleCalc;
>
> tokens {
>        PLUS    = '+' ;
>        MINUS   = '-' ;
>        MULT    = '*' ;
>        DIV     = '/' ;
> }
>
>
> /*------------------------------------------------------------------
>  * PARSER RULES
>  *------------------------------------------------------------------*/
>
> expr    : term ( ( PLUS | MINUS )  term )* ;
>
> term    : factor ( ( MULT | DIV ) factor )* ;
>
> factor  : NUMBER ;
>
>
> /*------------------------------------------------------------------
>  * LEXER RULES
>  *------------------------------------------------------------------*/
>
> NUMBER  : (DIGIT)+ ;
>
> WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+    { $channel =
> HIDDEN; } ;
>
> fragment DIGIT  : '0'..'9' ;
>
>
> Now, I'm not convinced that the above is complete, yet, but as a simple
> grammar it's fine. I'd be thinking about a FACTOR being also able to be
> a '(' followed by an expr followed by a ')'. Something like:
>
>
> factor  : NUMBER |
>        LPAREN expr RPAREN;
>
> Where LPAREN and RPAREN are defined in the tokens table.
>
>
> HTH
>
>
> Cheers,
> Norm.
>
>
> --
> Norman Dunbar
> Dunbar IT Consultants Ltd
>
> Registered address:
> Thorpe House
> 61 Richardshaw Lane
> Pudsey
> West Yorkshire
> United Kingdom
> LS28 7EL
>
> Company Number: 05132767
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cruxic at gmail.com  Mon Apr 16 16:28:04 2012
From: cruxic at gmail.com (Adam B)
Date: Mon, 16 Apr 2012 16:28:04 -0700
Subject: [antlr-interest] Noob needs help with: warning "Decision can
 match input such as X... using multiple alternatives"
In-Reply-To: <CAAfeEToQ-p9Atf1YYa8BDyuoiuYyzM4B9KpEuR2FZUykVxaQcg@mail.gmail.com>
References: <CAGFMnfE06-jHTgq=6nvEHzsaxoKkp1hL0kmNvtXkt0-0R8y7Fw@mail.gmail.com>
	<CAAfeEToQ-p9Atf1YYa8BDyuoiuYyzM4B9KpEuR2FZUykVxaQcg@mail.gmail.com>
Message-ID: <CAGFMnfGE7z0Df4+S1zvr8bMkNEcYYom8EQNHAA2Kp8a5Hqa9aA@mail.gmail.com>

Version 4 sounds nice, Kyle, but since I'm new to ANTLR I'd prefer to stick
to the stable version so I'm not debugging and learning at the same time.

Can anybody weigh in on the original warning?

On Mon, Apr 16, 2012 at 4:18 PM, Kyle Ferrio <kferrio at gmail.com> wrote:

> In addition to the examples swirling around the antlr website, have a look
> at the screencasts posted by Scott Stanchfield on vimeo.
>
> And if you really want to see how easy calculator-like parsing can be and
> you're not afraid of working without a net, try the early access builds of
> antlr v4, aka Honey Badger.  Besides making a lot of things dead simple, v4
> has specific features for making algebraic expression parsing a snap.  Oh,
> and it can handle direct left recursion.  Thanks be to Ter, Benevolent
> ANTLR Dictator for Life!
>
> Kyle
> On Apr 13, 2012 4:58 PM, "Adam B" <cruxic at gmail.com> wrote:
>
>> Hello all,
>>
>> I'm learning antlr in hopes of creating a DSL.  To this end I need to
>> define a rule for nested "expressions" like:
>>
>>       (1+2)*((3-4)/5)+7
>>
>> After working around the left-recursion limitation I came up with
>> something
>> like this (simplified for clarity):
>>
>> -------help.g------
>>    grammar help;
>>
>>    options
>>    {
>>        output=AST;
>>    }
>>
>>    prog: expr EOF;
>>
>>    expr
>>        : INT (binary_op^ expr)*
>>        | '('! expr ')'! (binary_op^ expr)*
>>        ;
>>
>>    binary_op
>>        : '+'
>>        | '-'
>>        | '*'
>>        | '/'
>>        ;
>>
>>
>>    INT:    '0'..'9'+;
>> ----------------
>>
>> This creates a beautiful AST with one problem.  ANTLRWorks spits out this
>> warning:
>>
>>    [16:47:14] warning(200): help.g:11:24:
>>    Decision can match input such as "'*'..'/'" using multiple
>> alternatives: 1, 2
>>
>>    As a result, alternative(s) 2 were disabled for that input
>>
>> What am I doing wrong?
>>
>> Any help you could offer would be greatly appreciated!
>> - Adam B.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>

From peter.goetz at gutefrage.net  Tue Apr 17 02:05:44 2012
From: peter.goetz at gutefrage.net (=?iso-8859-1?Q?Peter_G=F6tz?=)
Date: Tue, 17 Apr 2012 11:05:44 +0200
Subject: [antlr-interest] problem with tree parsing -> don't get a tree
 walker to work correctly
Message-ID: <2CEC15782427EE4486A5E0E8836A41BB24BAC0DC0D@ZENTRALE.gutefrage.muc>

Hi Jim, 

thanks for your answer. So it seems my problem is a common one, if you don't even have to look at my rules. ;) 

>  LBRACKET (e=expr (COMMA e=expr)*)? RBRACKET
> 
> But should look like this:
> 
>  LBRACKET (e+=expr (COMMA e+=expr)*)? RBRACKET

But it seems you have been right. I have not managed to get it to work, though, because in my grammar options I can not give an output value, because my output value is of my own type. But the error message when not giving the output option and Google brought me to the correct solution. I know have created a separate rule to parse the function parameters and its return value is being added to the function node: 

params returns[List result]
        @init { $result = new ArrayList(); }
        : (e=expr { $result.add(e); })+
        ; 

This seems to work fine and is ok for me. If anyone has some information for me if this is not the optimal solution and could be implemented in a better way, I would be happy to receive this knowledge and improve my grammar - it starts being fun and making sense. :)

Thanks for your help and best regards, 

Peter

From parrt at cs.usfca.edu  Tue Apr 17 18:29:20 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2012 18:29:20 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
Message-ID: <D700505E-F594-40B5-94F8-218D76644B03@cs.usfca.edu>


On Apr 15, 2012, at 9:04 AM, Alan D. Cabrera wrote:
>> Does anybody see any bears in the woods that I'm not? issues? those in favor?
> 
> Having a single place for storing old questions is quite compelling and stack exchange is an outstanding home.  One concern that I have is to how to facilitate general dialectic discussions.  I'm not sure stack exchange is a good place for that.

Yeah, worried about that too.

> May I suggest stack exchange for user questions and a google groups dev list for tooling discussions?

Well, we could move to a Google group for sure or we could try the chat at SO:

http://chat.stackoverflow.com/search?q=antlr

has anyone tried this chat thing at SO?

we would create a chat room for ANTLR / ST.

Ter

From researcher0x00 at gmail.com  Tue Apr 17 19:02:25 2012
From: researcher0x00 at gmail.com (Eric)
Date: Tue, 17 Apr 2012 22:02:25 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <D700505E-F594-40B5-94F8-218D76644B03@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
	<D700505E-F594-40B5-94F8-218D76644B03@cs.usfca.edu>
Message-ID: <CAN45N11Bxwdbggy4P88PFrRF08qiGFNaGQpCZ4950xChhpyryQ@mail.gmail.com>

Chat rooms are nice for open ended discussions; the problem is that anybody
can say anything in a chat room. If you have too many people in the room,
it is like any other chat room, hard to track one conversation.

On the plus side, you can see who is in the chat room, summon people to a
chat room using @<tag> if they are logged in and see the history of the
chat. Then there is the rep game. You need 20 rep to join a chat room if
you are logged in. If you submit a question anonymously, then you won't
even see the chat room. At 100 rep you can create a chat room. I haven't
created one, but I have seen some created for temporary use, but they never
seem to go away.

One idea is to create your own Stack Exchange site. You could create the
ANTLR site in Area 51 see:

http://area51.stackexchange.com/ and http://area51.stackexchange.com/faq

You will need to have at least 200 people committed and actively using the
site for it to make it into a real site. If you can't scrounge up 200 ANTLR
people, try creating a parsing site, then invite everyone you know who does
parsing and hope the moderators don't shut you down because you would be
taking away from other sites.

Also, you might consider moving the ANTLR questions out of StackExchange
and into one of the other sites such as Computer Science, see:

http://cs.stackexchange.com/

Eric





On Tue, Apr 17, 2012 at 9:29 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Apr 15, 2012, at 9:04 AM, Alan D. Cabrera wrote:
> >> Does anybody see any bears in the woods that I'm not? issues? those in
> favor?
> >
> > Having a single place for storing old questions is quite compelling and
> stack exchange is an outstanding home.  One concern that I have is to how
> to facilitate general dialectic discussions.  I'm not sure stack exchange
> is a good place for that.
>
> Yeah, worried about that too.
>
> > May I suggest stack exchange for user questions and a google groups dev
> list for tooling discussions?
>
> Well, we could move to a Google group for sure or we could try the chat at
> SO:
>
> http://chat.stackoverflow.com/search?q=antlr
>
> has anyone tried this chat thing at SO?
>
> we would create a chat room for ANTLR / ST.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Tue Apr 17 20:25:47 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Apr 2012 20:25:47 -0700
Subject: [antlr-interest] [stringtemplate-interest] contemplating a move
	of mailing list to stackoverflow.com
In-Reply-To: <D700505E-F594-40B5-94F8-218D76644B03@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
	<D700505E-F594-40B5-94F8-218D76644B03@cs.usfca.edu>
Message-ID: <A09C9377-0D64-4A29-AD79-FE421A99A6B7@temporal-wave.com>

Ter,

I think that google groups has improved vastly since last we looked. I think I claimed ANTLR, or perhaps you did, but it takes virtually no maintenance and I think that one or both of us has the name or a suitable name. 

Stackoverflow isn't what we need after I have looked at it - in fact it is not what any group needs and is instead aimed at an amorphous group of everyone, for which it appears very good. We need something more focused and I think that google groups is just fine. 

Jim

On Apr 17, 2012, at 6:29 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> 
> On Apr 15, 2012, at 9:04 AM, Alan D. Cabrera wrote:
>>> Does anybody see any bears in the woods that I'm not? issues? those in favor?
>> 
>> Having a single place for storing old questions is quite compelling and stack exchange is an outstanding home.  One concern that I have is to how to facilitate general dialectic discussions.  I'm not sure stack exchange is a good place for that.
> 
> Yeah, worried about that too.
> 
>> May I suggest stack exchange for user questions and a google groups dev list for tooling discussions?
> 
> Well, we could move to a Google group for sure or we could try the chat at SO:
> 
> http://chat.stackoverflow.com/search?q=antlr
> 
> has anyone tried this chat thing at SO?
> 
> we would create a chat room for ANTLR / ST.
> 
> Ter
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From bkiers at gmail.com  Tue Apr 17 23:07:58 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 18 Apr 2012 08:07:58 +0200
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAN45N11Bxwdbggy4P88PFrRF08qiGFNaGQpCZ4950xChhpyryQ@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<3B04F4F9-FF6E-4141-9F5A-843BAEB8FFE1@toolazydogs.com>
	<D700505E-F594-40B5-94F8-218D76644B03@cs.usfca.edu>
	<CAN45N11Bxwdbggy4P88PFrRF08qiGFNaGQpCZ4950xChhpyryQ@mail.gmail.com>
Message-ID: <CAOrgODa3778H8CVf0SRFVW6NvM4KHXs5ri4HnnCeKkvor=d8dA@mail.gmail.com>

Hi Eric, list,


On Wed, Apr 18, 2012 at 4:02 AM, Eric <researcher0x00 at gmail.com> wrote:

> Chat rooms are nice for open ended discussions; the problem is that anybody
> can say anything in a chat room. If you have too many people in the room,
> it is like any other chat room, hard to track one conversation.
>

I agree: a Google-group might be more suitable than chat.


...
>
> One idea is to create your own Stack Exchange site. You could create the
> ANTLR site in Area 51 see:
>
> http://area51.stackexchange.com/ and http://area51.stackexchange.com/faq
>
> You will need to have at least 200 people committed and actively using the
> site for it to make it into a real site. If you can't scrounge up 200 ANTLR
> people, try creating a parsing site, then invite everyone you know who does
> parsing and hope the moderators don't shut you down because you would be
> taking away from other sites.
>

Yes, I thought about that too and suggested it to Terence off-list, but
after looking into it a bit more, I don't think ANTLR/ST has enough
"weight" for its own SE-site. Especially these requirements:

- 15 questions per day on average is a healthy beta, 5 questions or fewer
per day needs some work;
- 1500 visits per day is good, 500 visits per day needs some work.

seem like a tall order if I look at the present ANTLR activity on
stackoverflow and on the list (not sure how active ST is...).



> Also, you might consider moving the ANTLR questions out of StackExchange
> and into one of the other sites such as Computer Science, see:
>
> http://cs.stackexchange.com/
>


Seeing that many ANTLR related questions often have concrete questions and
target-specific (programming) questions, I think they're best suited in
stackoverflow, not the CS-sister site. Besides, I'm not sure if the SE team
is going to move more than 1000 questions: they do it with single
questions, or a hand full, but not such a large amount.

Regards,

Bart.

From parrt at cs.usfca.edu  Wed Apr 18 09:50:02 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2012 09:50:02 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
Message-ID: <903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>


On Apr 15, 2012, at 7:27 PM, Eric wrote:

> Hi all,
> 
> I think killing off this list is a bad idea because the format here
> complements the format at StackOverflow. We need both, but I do agree that
> people should make use of both not just this list.

I'm slowly coming around this position. just think about where we would have this very discussion. it would get closed immediately at SO as it is not a question.

I'm thinking that the Google group idea in addition to SO for FAQ-like questions is the right approach. I can alter the website to differentiate and also in the discussion group, we can point people at SO answers.

Let me poke around to see what groups Jim Idle and I created years ago that might still be around :) It satisfies one of my goals of not having to manage another piece of software.

Ter

From researcher0x00 at gmail.com  Wed Apr 18 10:01:59 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 18 Apr 2012 13:01:59 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
Message-ID: <CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>

On Wed, Apr 18, 2012 at 12:50 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Apr 15, 2012, at 7:27 PM, Eric wrote:
>
> > Hi all,
> >
> > I think killing off this list is a bad idea because the format here
> > complements the format at StackOverflow. We need both, but I do agree
> that
> > people should make use of both not just this list.
>
> I'm slowly coming around this position. just think about where we would
> have this very discussion. it would get closed immediately at SO as it is
> not a question.
>
Most defiantly.



>
> I'm thinking that the Google group idea in addition to SO for FAQ-like
> questions is the right approach. I can alter the website to differentiate
> and also in the discussion group, we can point people at SO answers.
>

At SO you can modify the antlr tag see:
http://stackoverflow.com/tags/antlr/info to give information about other
sites. You could also suggest which site to use for which type of question.



>
> Let me poke around to see what groups Jim Idle and I created years ago
> that might still be around :) It satisfies one of my goals of not having to
> manage another piece of software.
>
> Ter

From parrt at cs.usfca.edu  Wed Apr 18 10:06:08 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2012 10:06:08 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
	<CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
Message-ID: <A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>

getting: "An error (#681) occurred while communicating with the server.Reload"

when trying to create the ANTLR group

https://groups.google.com/d/forum/antlr

 No doubt it is because there used to be such a name?

BTW, I'm going to create just one list for all tools in the ANTLR project ecosystem.

Ter
On Apr 18, 2012, at 10:01 AM, Eric wrote:

> 
> 
> On Wed, Apr 18, 2012 at 12:50 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
> On Apr 15, 2012, at 7:27 PM, Eric wrote:
> 
> > Hi all,
> >
> > I think killing off this list is a bad idea because the format here
> > complements the format at StackOverflow. We need both, but I do agree that
> > people should make use of both not just this list.
> 
> I'm slowly coming around this position. just think about where we would have this very discussion. it would get closed immediately at SO as it is not a question.
> Most defiantly.
> 
>  
>  
> 
> I'm thinking that the Google group idea in addition to SO for FAQ-like questions is the right approach. I can alter the website to differentiate and also in the discussion group, we can point people at SO answers.
>  
> At SO you can modify the antlr tag see: http://stackoverflow.com/tags/antlr/info to give information about other sites. You could also suggest which site to use for which type of question.
>  
>  
> 
> Let me poke around to see what groups Jim Idle and I created years ago that might still be around :) It satisfies one of my goals of not having to manage another piece of software.
> 
> Ter
> 


From parrt at cs.usfca.edu  Wed Apr 18 10:07:33 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2012 10:07:33 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
	<CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
	<A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>
Message-ID: <69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>


On Apr 18, 2012, at 10:06 AM, Terence Parr wrote:

> getting: "An error (#681) occurred while communicating with the server.Reload"
> 
> when trying to create the ANTLR group
> 
> https://groups.google.com/d/forum/antlr
> 

 and when I go to that URL, it says

> You do not have permission to access this group. (#418)

 awesome.  Google search reveals nothing on these errors. excellent
Ter


From researcher0x00 at gmail.com  Wed Apr 18 10:12:11 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 18 Apr 2012 13:12:11 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
	<CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
	<A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>
	<69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>
Message-ID: <CAN45N10Keyr2nu8_JLLW29XyFmah5tc7RYLChPYKW3LSspz9tg@mail.gmail.com>

Ter,

Same here on both google group links.

Maybe Jim has the magic key.


On Wed, Apr 18, 2012 at 1:07 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Apr 18, 2012, at 10:06 AM, Terence Parr wrote:
>
> > getting: "An error (#681) occurred while communicating with the
> server.Reload"
> >
> > when trying to create the ANTLR group
> >
> > https://groups.google.com/d/forum/antlr
> >
>
>  and when I go to that URL, it says
>
> > You do not have permission to access this group. (#418)
>
>  awesome.  Google search reveals nothing on these errors. excellent
> Ter
>
>

From burton.samograd at markit.com  Wed Apr 18 10:19:50 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Wed, 18 Apr 2012 13:19:50 -0400
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <bcd104f9a164af331c43809c7244334d@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
	<447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>
	<CAN45N126XqqHi6xyZ3XJGArGaOz06riwvaUsc07AJ6yLZo9S+Q@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14B379AC9C@NJ4MSGSCR02.markit.partners>
	<bcd104f9a164af331c43809c7244334d@mail.gmail.com>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14B379AD27@NJ4MSGSCR02.markit.partners>

Jim,

Personally, I think we should be using flex/bison because I don't think that Antlr is the right tool for the job.  Our initial requirements have been exceeded by over 2 orders of magnitude and I just don't think that the Antlr architecture is up for the task, and I feel that we might need to be able to handle another order of magnitude on top of that in the not so near future.  For what we are creating I don't think we need all the features that Antlr provides, but it was chosen before I got to my new job and before these new requirements came up.
--
Burton Samograd

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, April 16, 2012 2:52 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so as to not have to parse the whole file at once?

3.1? You should try 3.3 or maybe 3.4

However, your best bet is to partition your input. I have suggested some ways to do that in past posts but if your input is not a calculator, then I can't be any more specific. However, the fact that you can process the TreeNodeStream (which is what is produced anyway) suggests that you can partition this up before the lexer.

Jim



> -----Original Message-----
> From: Burton Samograd [mailto:burton.samograd at markit.com]
> Sent: Monday, April 16, 2012 1:48 PM
> To: Eric; Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> Antlr 3.1.3, C target wrapped for a C++ program.
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric
> Sent: Monday, April 16, 2012 2:46 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> Nice catch Jim.
>
> Burton, which ANTLR target are you using? e.g. ANTLR 3.4 C# 3, ANTLR
> 3.4 Java, ...
>
> On Mon, Apr 16, 2012 at 4:41 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> > This isn't the C target unless someone added 'new' to the ANSI C
> > standard when I was not looking.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Eric
> > > Sent: Monday, April 16, 2012 1:12 PM
> > > To: Burton Samograd
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Can an Antlr Parser return a
> > > TreeNodeStream so as to not have to parse the whole file at once?
> > >
> > > I just notice that you are using an earlier version of the C
> target.
> > > There has been lots of messages here about running out of memory
> for
> > > that version. Check the mailing list for old post. Since I don't
> use
> > > the C target and Jim Idle created it, is the expert on it, and is
> > > here regularly, he might jump in on this. Anything he suggests is
> > > worth the trouble of looking into, even if it means a few days of
> work.
> > >
> > > Eric
> > >
> > > On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com>
> wrote:
> > >
> > > >
> > > >
> > > > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > > > burton.samograd at markit.com> wrote:
> > > >
> > > >> Hello,
> > > >> In the following Antlr example, the parser is used to generate
> an
> > > AST
> > > >> which is then converted into a CommonTreeNodeStream, which is
> > > >> then passed to the checker.
> > > >> public static void main(String[] args) {
> > > >>
> > > >> CalcLexer  lex  = new CalcLexer(
> > > >>                        new ANTLRInputStream(System.in));
> > > >> CommonTokenStream tokens = new CommonTokenStream(lex);
> CalcParser
> > > >> parser = new CalcParser(tokens);
> > > >>
> > > >> CalcParser.program_result result = parser.program(); CommonTree
> > > >> tree = (CommonTree) result.getTree();
> > > >>
> > > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > > >> CalcChecker checker = new CalcChecker(nodes);
> > > >> checker.program();
> > > >>
> > > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > > >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> > > >> interpreter.program(); } Is it possible to get the parser to
> > > >> return
> > > a
> > > >> CommonTreeNodeStream that can be then passed to the Checker so
> > > >> that the whole file does not have to be lexed and parsed at
> > > >> once and rather as a stream of tokens and then tree nodes?
> > > >>
> > > > If I am understanding this correctly, you want to do partial
> > > > parsing, and then generating a partial AST because the file is
> > > > to large. Since the lexer has to lex/scan the entire text file
> > > > to create the tokens for the parser, you cannot do a partial
> > > > lexing
> of the input.
> > > >
> > > > Ter did something with scannerless parsing several months ago,
> but
> > > > since I never worked with it I cannot say it will help, but is
> > > > something I personally would look into for your problem, but not
> > > > expect it to work. I have had stranger suggestions that worked.
> > > >
> > > > I would also profile the running of the grammar to see which
> > > > part of the grammar is using too much memory and try altering
> > > > the grammar and/or adding actions to correct the problem.
> > > >
> > > > Usually one wants the entire AST before doing analysis, so I am
> > > > curious as to what you would do with an the AST tokens being
> > > processed
> > > > as a stream instead of a DOM.
> > > >
> > > > As a worse case, you could switch to overriding parts of the
> ANTLR
> > > > parser with hand written code, or even worse, switch to a
> > > > different type of parser, i.e. LR, parser combinator, fully hand
> > > > written
> > > recursive descent.
> > > >
> > > > You can also contract for support from Ter.
> > > >
> > > >  Eric.
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >> I ask because we are running into a problem with an extremely
> > > >> large file being passed into our Antlr parser and it is causing
> > > >> memory exhaustion in the parsing phase. I am thinking that
> > > >> using a TreeNodeStream would solve this problem if it is even
> possible.
> > > >> --
> > > >> Burton Samograd
> > > >>
> > > >>
> > > >> ________________________________ This e-mail, including
> > > >> accompanying communications and attachments, is strictly
> > > >> confidential and only for the intended recipient. Any
> > > >> retention, use or disclosure not expressly authorised by Markit
> > > >> is prohibited. This email is subject to all waivers and other
> > > >> terms at
> > > the following link:
> > > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > > >>
> > > >> Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > > >> for contact information on our offices worldwide.
> > > >>
> > > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> Unsubscribe:
> > > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > addres
> > > >> s
> > > >>
> > > >
> > > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at
> the following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From jmurray at aerotech.com  Wed Apr 18 10:21:17 2012
From: jmurray at aerotech.com (Justin Murray)
Date: Wed, 18 Apr 2012 13:21:17 -0400
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <CAN45N10Keyr2nu8_JLLW29XyFmah5tc7RYLChPYKW3LSspz9tg@mail.gmail.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
	<CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
	<A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>
	<69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>
	<CAN45N10Keyr2nu8_JLLW29XyFmah5tc7RYLChPYKW3LSspz9tg@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFFAE@EXCH-VIRTUAL.aerotechad.com>

Ter,

Any idea what the il-antlr-interest google group is? It claims to be a 
mirror of this mailing list, but it appears to be filled with spam 
rather than what has been coming though the mailing list.

https://groups.google.com/forum/?fromgroups#!forumsearch/il-antlr-interest 
<https://groups.google.com/forum/?fromgroups#%21forumsearch/il-antlr-interest>

- Justin

On 4/18/2012 1:12 PM, Eric wrote:
> Ter,
>
> Same here on both google group links.
>
> Maybe Jim has the magic key.
>
>
> On Wed, Apr 18, 2012 at 1:07 PM, Terence Parr<parrt at cs.usfca.edu>  wrote:
>
>> On Apr 18, 2012, at 10:06 AM, Terence Parr wrote:
>>
>>> getting: "An error (#681) occurred while communicating with the
>> server.Reload"
>>> when trying to create the ANTLR group
>>>
>>> https://groups.google.com/d/forum/antlr
>>>
>>   and when I go to that URL, it says
>>
>>> You do not have permission to access this group. (#418)
>>   awesome.  Google search reveals nothing on these errors. excellent
>> Ter
>>
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Wed Apr 18 10:24:07 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2012 10:24:07 -0700
Subject: [antlr-interest] contemplating a move of mailing list to
	stackoverflow.com
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFFAE@EXCH-VIRTUAL.aerotechad.com>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>
	<CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
	<A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>
	<69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>
	<CAN45N10Keyr2nu8_JLLW29XyFmah5tc7RYLChPYKW3LSspz9tg@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFFAE@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <4659ACF2-4C99-49D0-A12B-1BD041F48578@cs.usfca.edu>

yeah, that's a mirror I believe.  I've created:

https://groups.google.com/forum/#!forum/antlr-discussion

Will think about transition then mail everyone.

Ter
On Apr 18, 2012, at 10:21 AM, Justin Murray wrote:

> Ter,
> 
> Any idea what the il-antlr-interest google group is? It claims to be a 
> mirror of this mailing list, but it appears to be filled with spam 
> rather than what has been coming though the mailing list.
> 
> https://groups.google.com/forum/?fromgroups#!forumsearch/il-antlr-interest 
> <https://groups.google.com/forum/?fromgroups#%21forumsearch/il-antlr-interest>
> 
> - Justin
> 
> On 4/18/2012 1:12 PM, Eric wrote:
>> Ter,
>> 
>> Same here on both google group links.
>> 
>> Maybe Jim has the magic key.
>> 
>> 
>> On Wed, Apr 18, 2012 at 1:07 PM, Terence Parr<parrt at cs.usfca.edu>  wrote:
>> 
>>> On Apr 18, 2012, at 10:06 AM, Terence Parr wrote:
>>> 
>>>> getting: "An error (#681) occurred while communicating with the
>>> server.Reload"
>>>> when trying to create the ANTLR group
>>>> 
>>>> https://groups.google.com/d/forum/antlr
>>>> 
>>>  and when I go to that URL, it says
>>> 
>>>> You do not have permission to access this group. (#418)
>>>  awesome.  Google search reveals nothing on these errors. excellent
>>> Ter
>>> 
>>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Apr 18 11:12:56 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Apr 2012 11:12:56 -0700
Subject: [antlr-interest] [stringtemplate-interest] contemplating a move
 of mailing list to stackoverflow.com
In-Reply-To: <69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>
References: <AB26D018-362B-4D9C-86BD-6EA5F8EACEEB@cs.usfca.edu>
	<CAN45N10wrmXirt43ou1+ZH-j4BPJmHjBGJCGjqomM53XzpEdGg@mail.gmail.com>
	<903BA843-CD30-4154-9B9A-9287CD22DDB6@cs.usfca.edu>	<CAN45N10o7GD2-r1HZ_5_6VarM+8LZ97iCqbo-0SfrBoYdLaX9Q@mail.gmail.com>
	<A7219978-17F4-426A-9026-D6E147BDC19C@cs.usfca.edu>
	<69972E4E-0157-4096-952C-EDF86DAB7336@cs.usfca.edu>
Message-ID: <8c019504b19fde9f95cdcdde06c9aab8@mail.gmail.com>

I think that I created that and then deleted it a few years ago - perhaps
it does not really delete it so that it can be searched. Let me try to
create it as well, in case it remembers that I owned it at one time...
nope, I get the same issue. Sounds more like something is wrong at google.

However, perhaps you should pick a different name if this is going to
cover stringtemplate as well?

Jim





> -----Original Message-----
> From: stringtemplate-interest-bounces at antlr.org [mailto:stringtemplate-
> interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, April 18, 2012 10:08 AM
> To: Eric
> Cc: stringtemplate-interest at antlr.org List; ANTLR interest
> Subject: Re: [stringtemplate-interest] [antlr-interest] contemplating a
> move of mailing list to stackoverflow.com
>
>
> On Apr 18, 2012, at 10:06 AM, Terence Parr wrote:
>
> > getting: "An error (#681) occurred while communicating with the
> server.Reload"
> >
> > when trying to create the ANTLR group
> >
> > https://groups.google.com/d/forum/antlr
> >
>
>  and when I go to that URL, it says
>
> > You do not have permission to access this group. (#418)
>
>  awesome.  Google search reveals nothing on these errors. excellent Ter
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest

From jimi at temporal-wave.com  Wed Apr 18 11:20:55 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Apr 2012 11:20:55 -0700
Subject: [antlr-interest] Can an Antlr Parser return a TreeNodeStream so
 as to not have to parse the whole file at once?
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14B379AD27@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14B379AC7A@NJ4MSGSCR02.markit.partners>
	<CAN45N10Lz++pJEzt=evv+GmkiaKYpUPt4xqoLW-fU+L84qsRdA@mail.gmail.com>
	<CAN45N12_f_tDRZwohLtcrU1k5hji8VPh+frz228mgSOXT2CE9w@mail.gmail.com>
	<447c129af15fdef2e04d3aa7de018ffb@mail.gmail.com>	<CAN45N126XqqHi6xyZ3XJGArGaOz06riwvaUsc07AJ6yLZo9S+Q@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14B379AC9C@NJ4MSGSCR02.markit.partners>
	<bcd104f9a164af331c43809c7244334d@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14B379AD27@NJ4MSGSCR02.markit.partners>
Message-ID: <e871cb9b9e702de851aff7783df1d22c@mail.gmail.com>

If you post some sample input and what you are trying to do, then perhaps
I can help. However, without knowing the input, what you are trying to
achieve and how you are currently doing it, it is a little difficult to
advise. I think that your question is not the one you are asking, but a
more fundamental question.

Jim

> -----Original Message-----
> From: Burton Samograd [mailto:burton.samograd at markit.com]
> Sent: Wednesday, April 18, 2012 10:20 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> Jim,
>
> Personally, I think we should be using flex/bison because I don't think
> that Antlr is the right tool for the job.  Our initial requirements
> have been exceeded by over 2 orders of magnitude and I just don't think
> that the Antlr architecture is up for the task, and I feel that we
> might need to be able to handle another order of magnitude on top of
> that in the not so near future.  For what we are creating I don't think
> we need all the features that Antlr provides, but it was chosen before
> I got to my new job and before these new requirements came up.
> --
> Burton Samograd
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Monday, April 16, 2012 2:52 PM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can an Antlr Parser return a
> TreeNodeStream so as to not have to parse the whole file at once?
>
> 3.1? You should try 3.3 or maybe 3.4
>
> However, your best bet is to partition your input. I have suggested
> some ways to do that in past posts but if your input is not a
> calculator, then I can't be any more specific. However, the fact that
> you can process the TreeNodeStream (which is what is produced anyway)
> suggests that you can partition this up before the lexer.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: Burton Samograd [mailto:burton.samograd at markit.com]
> > Sent: Monday, April 16, 2012 1:48 PM
> > To: Eric; Jim Idle
> > Cc: antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Can an Antlr Parser return a
> > TreeNodeStream so as to not have to parse the whole file at once?
> >
> > Antlr 3.1.3, C target wrapped for a C++ program.
> >
> > --
> > Burton Samograd
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Eric
> > Sent: Monday, April 16, 2012 2:46 PM
> > To: Jim Idle
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Can an Antlr Parser return a
> > TreeNodeStream so as to not have to parse the whole file at once?
> >
> > Nice catch Jim.
> >
> > Burton, which ANTLR target are you using? e.g. ANTLR 3.4 C# 3, ANTLR
> > 3.4 Java, ...
> >
> > On Mon, Apr 16, 2012 at 4:41 PM, Jim Idle <jimi at temporal-wave.com>
> > wrote:
> >
> > > This isn't the C target unless someone added 'new' to the ANSI C
> > > standard when I was not looking.
> > >
> > > Jim
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Eric
> > > > Sent: Monday, April 16, 2012 1:12 PM
> > > > To: Burton Samograd
> > > > Cc: antlr-interest at antlr.org
> > > > Subject: Re: [antlr-interest] Can an Antlr Parser return a
> > > > TreeNodeStream so as to not have to parse the whole file at once?
> > > >
> > > > I just notice that you are using an earlier version of the C
> > target.
> > > > There has been lots of messages here about running out of memory
> > for
> > > > that version. Check the mailing list for old post. Since I don't
> > use
> > > > the C target and Jim Idle created it, is the expert on it, and is
> > > > here regularly, he might jump in on this. Anything he suggests is
> > > > worth the trouble of looking into, even if it means a few days of
> > work.
> > > >
> > > > Eric
> > > >
> > > > On Mon, Apr 16, 2012 at 3:47 PM, Eric <researcher0x00 at gmail.com>
> > wrote:
> > > >
> > > > >
> > > > >
> > > > > On Mon, Apr 16, 2012 at 3:03 PM, Burton Samograd <
> > > > > burton.samograd at markit.com> wrote:
> > > > >
> > > > >> Hello,
> > > > >> In the following Antlr example, the parser is used to generate
> > an
> > > > AST
> > > > >> which is then converted into a CommonTreeNodeStream, which is
> > > > >> then passed to the checker.
> > > > >> public static void main(String[] args) {
> > > > >>
> > > > >> CalcLexer  lex  = new CalcLexer(
> > > > >>                        new ANTLRInputStream(System.in));
> > > > >> CommonTokenStream tokens = new CommonTokenStream(lex);
> > CalcParser
> > > > >> parser = new CalcParser(tokens);
> > > > >>
> > > > >> CalcParser.program_result result = parser.program();
> CommonTree
> > > > >> tree = (CommonTree) result.getTree();
> > > > >>
> > > > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > > > >> CalcChecker checker = new CalcChecker(nodes);
> > > > >> checker.program();
> > > > >>
> > > > >> CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
> > > > >> CalcInterpreter interpreter = new CalcInterpreter(nodes);
> > > > >> interpreter.program(); } Is it possible to get the parser to
> > > > >> return
> > > > a
> > > > >> CommonTreeNodeStream that can be then passed to the Checker so
> > > > >> that the whole file does not have to be lexed and parsed at
> > > > >> once and rather as a stream of tokens and then tree nodes?
> > > > >>
> > > > > If I am understanding this correctly, you want to do partial
> > > > > parsing, and then generating a partial AST because the file is
> > > > > to large. Since the lexer has to lex/scan the entire text file
> > > > > to create the tokens for the parser, you cannot do a partial
> > > > > lexing
> > of the input.
> > > > >
> > > > > Ter did something with scannerless parsing several months ago,
> > but
> > > > > since I never worked with it I cannot say it will help, but is
> > > > > something I personally would look into for your problem, but
> not
> > > > > expect it to work. I have had stranger suggestions that worked.
> > > > >
> > > > > I would also profile the running of the grammar to see which
> > > > > part of the grammar is using too much memory and try altering
> > > > > the grammar and/or adding actions to correct the problem.
> > > > >
> > > > > Usually one wants the entire AST before doing analysis, so I am
> > > > > curious as to what you would do with an the AST tokens being
> > > > processed
> > > > > as a stream instead of a DOM.
> > > > >
> > > > > As a worse case, you could switch to overriding parts of the
> > ANTLR
> > > > > parser with hand written code, or even worse, switch to a
> > > > > different type of parser, i.e. LR, parser combinator, fully
> hand
> > > > > written
> > > > recursive descent.
> > > > >
> > > > > You can also contract for support from Ter.
> > > > >
> > > > >  Eric.
> > > > >
> > > > >
> > > > >
> > > > >
> > > > >
> > > > >> I ask because we are running into a problem with an extremely
> > > > >> large file being passed into our Antlr parser and it is
> causing
> > > > >> memory exhaustion in the parsing phase. I am thinking that
> > > > >> using a TreeNodeStream would solve this problem if it is even
> > possible.
> > > > >> --
> > > > >> Burton Samograd
> > > > >>
> > > > >>
> > > > >> ________________________________ This e-mail, including
> > > > >> accompanying communications and attachments, is strictly
> > > > >> confidential and only for the intended recipient. Any
> > > > >> retention, use or disclosure not expressly authorised by
> Markit
> > > > >> is prohibited. This email is subject to all waivers and other
> > > > >> terms at
> > > > the following link:
> > > > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > > > >>
> > > > >> Please visit http://www.markit.com/en/about/contact/contact-
> > us.page?
> > > > >> for contact information on our offices worldwide.
> > > > >>
> > > > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > >> Unsubscribe:
> > > > >> http://www.antlr.org/mailman/options/antlr-interest/your-
> email-
> > > > addres
> > > > >> s
> > > > >>
> > > > >
> > > > >
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe:
> > > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > > email-address
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> >
> > This e-mail, including accompanying communications and attachments,
> is
> > strictly confidential and only for the intended recipient. Any
> > retention, use or disclosure not expressly authorised by Markit is
> > prohibited. This email is subject to all waivers and other terms at
> > the following link: http://www.markit.com/en/about/legal/email-
> > disclaimer.page
> >
> > Please visit http://www.markit.com/en/about/contact/contact-us.page?
> > for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at the
> following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.

From davidblubaugh2000 at yahoo.com  Wed Apr 18 11:56:00 2012
From: davidblubaugh2000 at yahoo.com (David Blubaugh)
Date: Wed, 18 Apr 2012 11:56:00 -0700 (PDT)
Subject: [antlr-interest] C TO PROMELA TRANSLATOR
Message-ID: <1334775360.50180.YahooMailClassic@web113314.mail.gq1.yahoo.com>

To All,
?
?
I was wondering if anyone was interested in helping me to develop a c to Promela translator and maybe even a promela to c reverse translator ???? 
?
?
Promela is the scripting language utilized within the spin model checker !!? This can be utilized to determine if a program has been verified !!!
?
David Blubaugh
?
?
?

From researcher0x00 at gmail.com  Wed Apr 18 12:10:25 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 18 Apr 2012 15:10:25 -0400
Subject: [antlr-interest] C TO PROMELA TRANSLATOR
In-Reply-To: <1334775360.50180.YahooMailClassic@web113314.mail.gq1.yahoo.com>
References: <1334775360.50180.YahooMailClassic@web113314.mail.gq1.yahoo.com>
Message-ID: <CAN45N120Oiw7PRA1XWSxZkNFOKhDZYrr7r3vhOM49tqtjm6xZg@mail.gmail.com>

David,

Have you ever attempted something like this?

What is your background?

This doesn?t mean I will help, but currently curious.

Eric

On Wed, Apr 18, 2012 at 2:56 PM, David Blubaugh <davidblubaugh2000 at yahoo.com
> wrote:

> To All,
>
>
> I was wondering if anyone was interested in helping me to develop a c to
> Promela translator and maybe even a promela to c reverse translator ???
>
>
> Promela is the scripting language utilized within the spin model checker
> !!  This can be utilized to determine if a program has been verified !!!
>
> David Blubaugh
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Gaetan.Garcia at ec-nantes.fr  Wed Apr 18 14:14:43 2012
From: Gaetan.Garcia at ec-nantes.fr (=?ISO-8859-1?Q?Ga=EBtan_GARCIA?=)
Date: Wed, 18 Apr 2012 23:14:43 +0200
Subject: [antlr-interest] Is it possible to disallow spaces between operands
 and operators ?
Message-ID: <4F8F2EC3.3040707@ec-nantes.fr>

Hi all,

I'm a beginner in the use of ANTLR. Thanks to Scott Stanchfield's video 
tutorials and using examples from antlr.org, I managed to created my 
first parser. It works fine, but I have the following (small?) problem:

I have a simple rule:

matrixProd
     : matrix( ':' matrix )*
     ;

It allows building things like a:b:c. My problem is that it also allows 
a : b : c, which the target language does not allow. No such problem 
with other operators (+,-,/,*,mod) of the language, though. Do I have a 
way to fix this so the parser reports an error in the presence of extra 
spaces?
Thanks for any input.

           G.G.


From ludwig.maes at gmail.com  Wed Apr 18 15:46:19 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Thu, 19 Apr 2012 00:46:19 +0200
Subject: [antlr-interest] C TO PROMELA TRANSLATOR
In-Reply-To: <CAN45N120Oiw7PRA1XWSxZkNFOKhDZYrr7r3vhOM49tqtjm6xZg@mail.gmail.com>
References: <1334775360.50180.YahooMailClassic@web113314.mail.gq1.yahoo.com>
	<CAN45N120Oiw7PRA1XWSxZkNFOKhDZYrr7r3vhOM49tqtjm6xZg@mail.gmail.com>
Message-ID: <CAJ8SgHkHYwH8bAvw1ebJnB0=528jYC=twSFB=mid=Nc9pm9H6Q@mail.gmail.com>

I suggest you check out http://epispin.ewi.tudelft.nl/
and check out the relevant master's thesis
http://swerl.tudelft.nl/twiki/pub/Main/PastAndCurrentMScProjects/thesis-bob-de-vos.pdf

On 18 April 2012 21:10, Eric <researcher0x00 at gmail.com> wrote:
> David,
>
> Have you ever attempted something like this?
>
> What is your background?
>
> This doesn?t mean I will help, but currently curious.
>
> Eric
>
> On Wed, Apr 18, 2012 at 2:56 PM, David Blubaugh <davidblubaugh2000 at yahoo.com
>> wrote:
>
>> To All,
>>
>>
>> I was wondering if anyone was interested in helping me to develop a c to
>> Promela translator and maybe even a promela to c reverse translator ???
>>
>>
>> Promela is the scripting language utilized within the spin model checker
>> !! ?This can be utilized to determine if a program has been verified !!!
>>
>> David Blubaugh
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gdiamos at nvidia.com  Wed Apr 18 17:00:37 2012
From: gdiamos at nvidia.com (Greg Diamos)
Date: Wed, 18 Apr 2012 17:00:37 -0700
Subject: [antlr-interest] Interest in CUDA Target?
Message-ID: <F6308D2295D83F48A9955B844DDEC881372FDA6F2C@HQMAIL04.nvidia.com>

I'm curious whether people who know parsing and lexing better than me think that there would be interest in a CUDA backend for ANTLR.  I believe that
I have developed an algorithm that will allow for fine-grained data-parallel parsing of arbitrary LL(*) grammars, and will likely be significantly faster than
existing implementations on CUDA (it could probably also be adapted to other multi-core processors).  

However, I don't really have a sense of how performance bottlenecked applications that rely on parsing are.  My interest was more of a thought experiment than
driven by the needs of a particular application, so I'd be interested in any feedback that members of this list could provide.

Does anyone have an application that would benefit from an order of magnitude or more reduction in parsing time, or are existing backends fast enough?

Regards,

Greg
-----------------------------------------------------------------------------------
This email message is for the sole use of the intended recipient(s) and may contain
confidential information.  Any unauthorized review, use, disclosure or distribution
is prohibited.  If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
-----------------------------------------------------------------------------------

From kierans777 at gmail.com  Wed Apr 18 21:56:20 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Thu, 19 Apr 2012 14:56:20 +1000
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
Message-ID: <4F8F9AF4.6010209@gmail.com>

On 23/07/64 5:59 AM, Terence Parr wrote:
> Hi,
>
> I started down the path of building the new version of gUnit for v4, but I'm beginning to question its value for the new version. Because I am pooh-poohing putting actions directly within a grammar, grammar can only yield parse trees. and looks nice to be able to say:
>
> expr:
> 	"1"		->  (expr 1)
> 	"1+2"	->  (expr (expr 1) + (expr 2))
>
> but so what? all that did was confirm that the parser generated by ANTLR works correctly. it's not telling you anything you didn't know by looking at the grammar.
>
> In the old days we used to build ASTs and so we needed to check the structure. That need is no longer here. Also, these rules don't generate output and so we can't check input to output translation.
>
> What it comes down to is this: we really need functional testing not unit testing for language applications, unless of course each rule returns a string that the translation of the input some phrase or something. But, it's just as easy to write calls to assertEquals() saying that input x should yield input y. If we are doing something other than generating output, such as building up a data structure, then we really do need to manually check that the data structure is solid given some input.
>
> I'm trying to find a flaw in my logic. Is there something I'm missing about testing grammars? In v4, they will give you exactly what you want, unless there is a bug in ANTLR. But that's my problem not yours.
>
> If we can't find a major benefit, then we should avoid introducing another moving part to the ANTLR ecosystem.

I find gUnit very helpful in testing parts of my grammar both in 
isolation and different combinations.  I like being able to test token 
definitions against different input.

Where I find functional testing more beneficial is for tree walkers. 
For my grammars that produce ASTs I've found the grammar tests useful in 
preventing regression bugs.

There's also testing in non Java languages to consider.  Having the 
ability to have tests generated/run via JUnit may be easier than having 
to piece together your tests in another language (eg: C) which I 
personally find is more time consuming.

Just a few thoughts.

Cheers,


From researcher0x00 at gmail.com  Thu Apr 19 06:20:37 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 19 Apr 2012 09:20:37 -0400
Subject: [antlr-interest] C TO PROMELA TRANSLATOR
In-Reply-To: <1334775360.50180.YahooMailClassic@web113314.mail.gq1.yahoo.com>
References: <1334775360.50180.YahooMailClassic@web113314.mail.gq1.yahoo.com>
Message-ID: <CAN45N10wVY43YddZNdMNu06NtPj_A35Nrr44cHms0FF1Tv4_=A@mail.gmail.com>

Hi David,

In reviewing questions at SO I came across

When to use an abstract or concrete syntax
tree?<http://stackoverflow.com/questions/9456448/when-to-use-an-abstract-or-concrete-syntax-tree>
How to translate between programming
languages<http://stackoverflow.com/questions/3455456/how-to-translate-between-programming-languages>

Check out the answers by Ira Baxter, they should shed some light on your
endeavor.

Eric



On Wed, Apr 18, 2012 at 2:56 PM, David Blubaugh <davidblubaugh2000 at yahoo.com
> wrote:

> To All,
>
>
> I was wondering if anyone was interested in helping me to develop a c to
> Promela translator and maybe even a promela to c reverse translator ???
>
>
> Promela is the scripting language utilized within the spin model checker
> !!  This can be utilized to determine if a program has been verified !!!
>
> David Blubaugh
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From siegel at udel.edu  Thu Apr 19 07:00:23 2012
From: siegel at udel.edu (Stephen Siegel)
Date: Thu, 19 Apr 2012 10:00:23 -0400
Subject: [antlr-interest] parsing preprocessed C file
Message-ID: <BB22F3B4-589B-4C74-857E-B639E44CAF89@UDel.Edu>

I want to parse a C file that has already gone through the C preprocessor.  My question is, how do I get my parser to associate the correct files and line numbers to each token?

I found this question and an answer in one of the FAQs (http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+C+Target):

------------------------------------- begin quote -------------------------------------

One way is to follow this path:

	? Derive your own token from CommonToken and add file number field to it;
	? Get the lexer to produce those tokens and the parser to accept them;
	? Build a file table in the lexer and refer to it in error messages;
	? Keep track of current file in the lexer in case you need error messages from thelexer;
	? Keep track of current line number in the inferred file by setting it in your PPLINE rule then incrementing it in your NEWLINE rule;
	? Set the line and file number at the end of each rule (or override the nextToken stuff to set this automatically);
Start down that path and you will see the best way for your requirements.

In the C target there are user fields for storing such additional information so you can do the same thing as deriving a token.

-------------------------------------- end quote --------------------------------------

I was wondering if anyone has actually done this, and can share the result?   Or, are there any examples around that do any of the things above that might help me figure out how to do this?

I'm using the Java target.
Thanks.


From parrt at cs.usfca.edu  Thu Apr 19 10:10:32 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Apr 2012 10:10:32 -0700
Subject: [antlr-interest] ANTLR C target FAQ
Message-ID: <082FB830-F27F-461C-A355-A61FD37D185B@cs.usfca.edu>

Hi,

Sridevi Achutan has spent a few months collecting all of the discussions regarding the C target and putting it into a nicely organized FAQ:

http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+C+Target

Please take a look and feel free to make tweaks or updates if you have experience.

Thanks to Sri for doing such a great job!

Regards,
Terence

From parrt at cs.usfca.edu  Thu Apr 19 10:11:48 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Apr 2012 10:11:48 -0700
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <4F8F9AF4.6010209@gmail.com>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
	<4F8F9AF4.6010209@gmail.com>
Message-ID: <E6B80325-DDC8-40E4-9C18-53A3AC9BA6C4@cs.usfca.edu>

Hi Kieran,

thanks very much for the feedback. What exactly were you testing when you say parts of your grammar and in different combinations? Were you testing the ASTs you created? It was very useful for that. Since v4 automatically builds trees, those trees will be correct unless there's a bug so there's nothing really to test as far as I can tell.
Ter
On Apr 18, 2012, at 9:56 PM, Kieran Simpson wrote:

> On 23/07/64 5:59 AM, Terence Parr wrote:
>> Hi,
>> 
>> I started down the path of building the new version of gUnit for v4, but I'm beginning to question its value for the new version. Because I am pooh-poohing putting actions directly within a grammar, grammar can only yield parse trees. and looks nice to be able to say:
>> 
>> expr:
>> 	"1"		->  (expr 1)
>> 	"1+2"	->  (expr (expr 1) + (expr 2))
>> 
>> but so what? all that did was confirm that the parser generated by ANTLR works correctly. it's not telling you anything you didn't know by looking at the grammar.
>> 
>> In the old days we used to build ASTs and so we needed to check the structure. That need is no longer here. Also, these rules don't generate output and so we can't check input to output translation.
>> 
>> What it comes down to is this: we really need functional testing not unit testing for language applications, unless of course each rule returns a string that the translation of the input some phrase or something. But, it's just as easy to write calls to assertEquals() saying that input x should yield input y. If we are doing something other than generating output, such as building up a data structure, then we really do need to manually check that the data structure is solid given some input.
>> 
>> I'm trying to find a flaw in my logic. Is there something I'm missing about testing grammars? In v4, they will give you exactly what you want, unless there is a bug in ANTLR. But that's my problem not yours.
>> 
>> If we can't find a major benefit, then we should avoid introducing another moving part to the ANTLR ecosystem.
> 
> I find gUnit very helpful in testing parts of my grammar both in 
> isolation and different combinations.  I like being able to test token 
> definitions against different input.
> 
> Where I find functional testing more beneficial is for tree walkers. 
> For my grammars that produce ASTs I've found the grammar tests useful in 
> preventing regression bugs.
> 
> There's also testing in non Java languages to consider.  Having the 
> ability to have tests generated/run via JUnit may be easier than having 
> to piece together your tests in another language (eg: C) which I 
> personally find is more time consuming.
> 
> Just a few thoughts.
> 
> Cheers,
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Thu Apr 19 10:14:01 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Apr 2012 10:14:01 -0700
Subject: [antlr-interest] ANTLR C target FAQ
In-Reply-To: <082FB830-F27F-461C-A355-A61FD37D185B@cs.usfca.edu>
References: <082FB830-F27F-461C-A355-A61FD37D185B@cs.usfca.edu>
Message-ID: <a8bf71c58b0511ab3917562cdb597742@mail.gmail.com>

Cool - I'll try to spend some time over the next few months helping to
organize it and correct my own typos - A lot of work went in to this and
it will be very useful.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Thursday, April 19, 2012 10:11 AM
> To: ANTLR interest
> Subject: [antlr-interest] ANTLR C target FAQ
>
> Hi,
>
> Sridevi Achutan has spent a few months collecting all of the
> discussions regarding the C target and putting it into a nicely
> organized FAQ:
>
> http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+C+Target
>
> Please take a look and feel free to make tweaks or updates if you have
> experience.
>
> Thanks to Sri for doing such a great job!
>
> Regards,
> Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gonzague.reydet at gmail.com  Thu Apr 19 11:07:05 2012
From: gonzague.reydet at gmail.com (Gonzague Reydet)
Date: Thu, 19 Apr 2012 20:07:05 +0200
Subject: [antlr-interest] ANTLR C target FAQ
In-Reply-To: <a8bf71c58b0511ab3917562cdb597742@mail.gmail.com>
References: <082FB830-F27F-461C-A355-A61FD37D185B@cs.usfca.edu>
	<a8bf71c58b0511ab3917562cdb597742@mail.gmail.com>
Message-ID: <CAHHXKCaKFXSuZFCqhGbZ2yHJ-FxmtXpcdUXd624SiVrkqFrz9A@mail.gmail.com>

Found this a couple of days ago on google!
There are lots of very usefull information. Thanks for this very good job.

Maybe it should be splitted in different pages to organize questions by
category?

Gonzague

2012/4/19 Jim Idle <jimi at temporal-wave.com>

> Cool - I'll try to spend some time over the next few months helping to
> organize it and correct my own typos - A lot of work went in to this and
> it will be very useful.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Terence Parr
> > Sent: Thursday, April 19, 2012 10:11 AM
> > To: ANTLR interest
> > Subject: [antlr-interest] ANTLR C target FAQ
> >
> > Hi,
> >
> > Sridevi Achutan has spent a few months collecting all of the
> > discussions regarding the C target and putting it into a nicely
> > organized FAQ:
> >
> > http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+C+Target
> >
> > Please take a look and feel free to make tweaks or updates if you have
> > experience.
> >
> > Thanks to Sri for doing such a great job!
> >
> > Regards,
> > Terence
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu Apr 19 11:17:26 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Apr 2012 11:17:26 -0700
Subject: [antlr-interest] ANTLR C target FAQ
In-Reply-To: <CAHHXKCaKFXSuZFCqhGbZ2yHJ-FxmtXpcdUXd624SiVrkqFrz9A@mail.gmail.com>
References: <082FB830-F27F-461C-A355-A61FD37D185B@cs.usfca.edu>
	<a8bf71c58b0511ab3917562cdb597742@mail.gmail.com>
	<CAHHXKCaKFXSuZFCqhGbZ2yHJ-FxmtXpcdUXd624SiVrkqFrz9A@mail.gmail.com>
Message-ID: <26b9ea0524b71cfbb528674770f6fcb4@mail.gmail.com>

Yes, I agree ? I will work on some organizational stuff now that Devi has
gathered all the info (which is a huge task),



Jim



*From:* Gonzague Reydet [mailto:gonzague.reydet at gmail.com]
*Sent:* Thursday, April 19, 2012 11:07 AM
*To:* Jim Idle
*Cc:* ANTLR interest
*Subject:* Re: [antlr-interest] ANTLR C target FAQ



Found this a couple of days ago on google!

There are lots of very usefull information. Thanks for this very good job.



Maybe it should be splitted in different pages to organize questions by
category?



Gonzague



2012/4/19 Jim Idle <jimi at temporal-wave.com>

Cool - I'll try to spend some time over the next few months helping to
organize it and correct my own typos - A lot of work went in to this and
it will be very useful.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Thursday, April 19, 2012 10:11 AM
> To: ANTLR interest
> Subject: [antlr-interest] ANTLR C target FAQ
>
> Hi,
>
> Sridevi Achutan has spent a few months collecting all of the
> discussions regarding the C target and putting it into a nicely
> organized FAQ:
>
> http://www.antlr.org/wiki/display/ANTLR3/FAQ+-+C+Target
>
> Please take a look and feel free to make tweaks or updates if you have
> experience.
>
> Thanks to Sri for doing such a great job!
>
> Regards,
> Terence
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Stefan.Maetje at esd-electronics.com  Thu Apr 19 11:26:26 2012
From: Stefan.Maetje at esd-electronics.com (=?ISO-8859-15?Q?Stefan_M=E4tje?=)
Date: Thu, 19 Apr 2012 20:26:26 +0200
Subject: [antlr-interest] Problems with spurious EOF tree nodes while
	working with a tree parser
Message-ID: <4F9058D2.8030501@esd-electronics.com>

Hi,

generate an AST with a combined lexer/parser grammar. Then I feed the 
generated AST via a CommonTreeNodeStream into a tree grammar to build up 
a symbol table. The tree grammar is in filter mode and I use my
own tree nodes called Pearl90Tree. Therefore I created a custom
Pearl90TreeAdaptor class.

In my tree grammar I have two very simple rules quoted below:

label_dcl
//	:	LBL_DCL ID		// Won't match
	:	LBL_DCL EOF ID		// Will match
	{
		dbgOut.println("-> Label at _",$ID.line, $ID.pos));
	}
	;

label_resolve
//	:	gt='GOTO' id=ID			// Won't match
	:	gt='GOTO' eof=EOF myId=ID	// Will match
	{
	dbgOut.println("GOTO_Label "+$myId.toString());
	dbgOut.println("EOF #"+$eof.serial);
	}
	;

The parser generates simply "LBL_DCL ID" for each label definition and a 
sequence of "'GOTO' ID" for a goto statement. I verified that the AST is 
correct. Also I dumped the CommonTreeNodeStream to see that it doesn't 
contain any EOF tree node behind the 'GOTO' or LBL_DCL tree node. My 
test source input is this:

MODULE goto;
PROBLEM;
P: PROC;
   label: GOTO label;
END;
MODEND;

The CommonTreeNodeStream dumped follows here:

+++++++++++++++ Tree +++++++++++++++++++++
Pearl90Tree node #-1, c:2; token type: 92 'MODULE', value: 'MODULE'
Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
Pearl90Tree node #0, c:0; token type: 73 'ID', value: 'goto'
Pearl90Tree node #1, c:1; token type: 182 ''PROBLEM'', value: 'PROBLEM'
Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
Pearl90Tree node #0, c:3; token type: 115 'PROC_DCL', value: 'PROC_DCL'
Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
Pearl90Tree node #0, c:0; token type: 73 'ID', value: 'P'
Pearl90Tree node #1, c:0; token type: 93 'MOD_LIST', value: 'MOD_LIST'
Pearl90Tree node #2, c:4; token type: 27 'BODY', value: 'BODY'
Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
Pearl90Tree node #0, c:0; token type: 85 'LBL_DCL', value: 'LBL_DCL'
Pearl90Tree node #1, c:0; token type: 73 'ID', value: 'label'
Pearl90Tree node #2, c:0; token type: 77 'KW_GOTO', value: 'GOTO'
Pearl90Tree node #3, c:0; token type: 73 'ID', value: 'label'
Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
Pearl90Tree node #-1, c:0; token type: -1 '>EOF<', value: 'EOF'

What I can see is that the tree parser in the filter mode generates lots 
of UP, DOWN and EOF tree nodes. Apparently the tree parser stuffs some 
of these EOF nodes between the others. (I know this because the tree 
parser calls my Pearl90TreeAdaptor to generate these nodes.)

Because of this added EOF it can only match to "'GOTO' EOF ID" which I 
believe to be very strange. Why doesn't it match the "LBL_DCL ID" 
sequence either?

What am I doing wrong? Any suggestions to get this running without 
putting this "magic" EOF in between?

Thanks in advance,
	Stefan




From gdiamos at nvidia.com  Thu Apr 19 12:37:16 2012
From: gdiamos at nvidia.com (Greg Diamos)
Date: Thu, 19 Apr 2012 12:37:16 -0700
Subject: [antlr-interest] Interest in CUDA Target?
In-Reply-To: <4F901230.1050201@freemail.hu>
References: <F6308D2295D83F48A9955B844DDEC881372FDA6F2C@HQMAIL04.nvidia.com>,
	<4F901230.1050201@freemail.hu>
Message-ID: <F6308D2295D83F48A9955B844DDEC881372FDA6F2E@HQMAIL04.nvidia.com>

Thank you for the response M?rton.

I don't have a tuned implementation yet that would be suitable for benchmarking, just a general outline of an algorithm.  But, based on its characteristics I think that
it could have the potential to get within a factor of 3-4 of peak on a GPU for simple grammars.  

The basic idea algorithm is conservative and bottom-up; it resembles a parallel reduction in structure.  It starts by processing each input character in parallel, and feeding them as the input
to a DFA that transitions to an initial state.  Each subsequent stage merges two (or more) discrete states together, such that the combination of states yields a new state and
possibly generates a token.  Tokens are produced sparsely and eventually gathered together using parallel stream compaction.  I'm mainly considering doing this for lexing at this point, 
but it could be directly extended to parsing by lexical tokens the input rather than characters.

I've attached an example of the state transitions rules for a very simple grammar.  The circles represent states, and the squares represent rules for merging
states.

The worst case runtime of the algorithm on an infinitely parallel machine should be O(Log N) where N is the number of characters
in the longest token.  Real implementations should be able to do much of the state merging in passes over a block of characters
stored in on-chip memory, with additional passes to handle state machines that have not terminated on the block boundaries.  As long
as the majority of tokens can be generated completely within a block of characters, an implementation would have near-linear complexity
in terms of the number of memory accesses. Similar algorithms involving reductions over characters in on-chip memory (merge, intersect)
can come very close to saturating GPU DRAM bandwidth (over 150GB/s).

I still have a few major concerns with the algorithm:
  1) I don't know what the complexity of the state transition table would look like for arbitrary grammars.   The larger this is, the more costly the
      state merging operation will be.  If these are larger than the GPU on-chip memory (similar in size to an L1 cache), it could significantly impact
      performance.
  2) I don't have a proof that this can be done in general for arbitrary grammars.

The next step is to write down an algorithm for computing a state transition table from a grammar specification, although realistically I'm going to
work through several more examples by hand first.

Regards,

Greg

________________________________________
From: anteusz at freemail.hu [anteusz at freemail.hu]
Sent: Thursday, April 19, 2012 6:25 AM
To: Greg Diamos
Subject: Re: [antlr-interest] Interest in CUDA Target?

On 4/19/2012 2:00 AM, Greg Diamos wrote:
> I'm curious whether people who know parsing and lexing better than me think that there would be interest in a CUDA backend for ANTLR.  I believe that
> I have developed an algorithm that will allow for fine-grained data-parallel parsing of arbitrary LL(*) grammars, and will likely be significantly faster than
> existing implementations on CUDA (it could probably also be adapted to other multi-core processors).
>
> However, I don't really have a sense of how performance bottlenecked applications that rely on parsing are.  My interest was more of a thought experiment than
> driven by the needs of a particular application, so I'd be interested in any feedback that members of this list could provide.
>
> Does anyone have an application that would benefit from an order of magnitude or more reduction in parsing time, or are existing backends fast enough?
>
> Regards,
>
> Greg
>

Hi,

I am interested in parsers in general. I wrote couple of hand-made and
yacc based parsers.
What have you got? How much is it faster to a normal CPU approach?


Regards

M?rton Papp

-----------------------------------------------------------------------------------
This email message is for the sole use of the intended recipient(s) and may contain
confidential information.  Any unauthorized review, use, disclosure or distribution
is prohibited.  If you are not the intended recipient, please contact the sender by
reply email and destroy all copies of the original message.
-----------------------------------------------------------------------------------
-------------- next part --------------
A non-text attachment was scrubbed...
Name: state-transitions-bottom-up.png
Type: image/png
Size: 70288 bytes
Desc: state-transitions-bottom-up.png
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120419/86b5166e/attachment.png 

From stephan.opfer at gmx.net  Thu Apr 19 13:41:16 2012
From: stephan.opfer at gmx.net (Stephan Opfer)
Date: Thu, 19 Apr 2012 22:41:16 +0200
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
Message-ID: <4F90786C.5070307@gmx.net>

Hi ANTLR Community,

I need a grammar for first order logic fomulas. I thought I could find
one on the antlr website, but I didnt. So now I started to write one by
myself and got some errors by antlrworks (version 1.4.3, java openjdk7):

[22:39:03] error(10):  internal error: /home/user/Desktop/FOL.g :
java.lang.IllegalArgumentException: No such group file:
org/antlr/codegen/templates/java/java.stg
org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.works.generate.CodeGenerate.generate(CodeGenerate.java:104)
org.antlr.works.debugger.local.DBLocal.generateGrammar(DBLocal.java:398)
org.antlr.works.debugger.local.DBLocal.generateAndCompileGrammar(DBLocal.java:372)
org.antlr.works.debugger.local.DBLocal.run(DBLocal.java:222)
java.lang.Thread.run(Thread.java:722)


My first order grammar should support everything except quantifiers:

grammar FOL;

options{
	language=java;
	output=AST;
}

tokens{
	LPAREN='(';
	RPAREN= ')';
	AND= '&';
	OR= '|';
	NOT= '!';
}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

condition: formula EOF!;

formula: disjunction (AND^ disjunction)*;

disjunction: element (OR^ element)*;

element	: predicate
	| NOT^? LPAREN! formula RPAREN!
	;

predicate
	: ID TUPLE
	| NOT^ ID TUPLE
	| CONSTANT
	| NOT^ CONSTANT;

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

VARIABLE: '?' CHARACTER+;

CONSTANT: ('a'..'z') CHARACTER*;

ID: ('A'..'Z') CHARACTER*;

TUPLE: LPAREN (CONSTANT | VARIABLE) (','(CONSTANT | VARIABLE))* RPAREN;

CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');

WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};

Do someone have a clue, why I get this error? I would provide this
grammar to the community, if it is finished.

Best Regards,
  Stephan

From jimi at temporal-wave.com  Thu Apr 19 14:16:28 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Apr 2012 14:16:28 -0700
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <4F90786C.5070307@gmx.net>
References: <4F90786C.5070307@gmx.net>
Message-ID: <9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>

language=Java; // Case sensitive.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stephan Opfer
> Sent: Thursday, April 19, 2012 1:41 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
>
> Hi ANTLR Community,
>
> I need a grammar for first order logic fomulas. I thought I could find
> one on the antlr website, but I didnt. So now I started to write one by
> myself and got some errors by antlrworks (version 1.4.3, java
> openjdk7):
>
> [22:39:03] error(10):  internal error: /home/user/Desktop/FOL.g :
> java.lang.IllegalArgumentException: No such group file:
> org/antlr/codegen/templates/java/java.stg
> org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
> org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
> org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.works.generate.CodeGenerate.generate(CodeGenerate.java:104)
> org.antlr.works.debugger.local.DBLocal.generateGrammar(DBLocal.java:398
> )
> org.antlr.works.debugger.local.DBLocal.generateAndCompileGrammar(DBLoca
> l.java:372)
> org.antlr.works.debugger.local.DBLocal.run(DBLocal.java:222)
> java.lang.Thread.run(Thread.java:722)
>
>
> My first order grammar should support everything except quantifiers:
>
> grammar FOL;
>
> options{
> 	language=java;
> 	output=AST;
> }
>
> tokens{
> 	LPAREN='(';
> 	RPAREN= ')';
> 	AND= '&';
> 	OR= '|';
> 	NOT= '!';
> }
>
> /*------------------------------------------------------------------
>  * PARSER RULES
>  *------------------------------------------------------------------*/
>
> condition: formula EOF!;
>
> formula: disjunction (AND^ disjunction)*;
>
> disjunction: element (OR^ element)*;
>
> element	: predicate
> 	| NOT^? LPAREN! formula RPAREN!
> 	;
>
> predicate
> 	: ID TUPLE
> 	| NOT^ ID TUPLE
> 	| CONSTANT
> 	| NOT^ CONSTANT;
>
> /*------------------------------------------------------------------
>  * LEXER RULES
>  *------------------------------------------------------------------*/
>
> VARIABLE: '?' CHARACTER+;
>
> CONSTANT: ('a'..'z') CHARACTER*;
>
> ID: ('A'..'Z') CHARACTER*;
>
> TUPLE: LPAREN (CONSTANT | VARIABLE) (','(CONSTANT | VARIABLE))* RPAREN;
>
> CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');
>
> WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};
>
> Do someone have a clue, why I get this error? I would provide this
> grammar to the community, if it is finished.
>
> Best Regards,
>   Stephan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From stephan.opfer at gmx.net  Thu Apr 19 14:37:21 2012
From: stephan.opfer at gmx.net (Stephan Opfer)
Date: Thu, 19 Apr 2012 23:37:21 +0200
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
References: <4F90786C.5070307@gmx.net>
	<9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
Message-ID: <4F908591.50104@gmx.net>

Oh! Thanks Jim! That was easy :)

On 04/19/2012 11:16 PM, Jim Idle wrote:
> language=Java; // Case sensitive.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Stephan Opfer
>> Sent: Thursday, April 19, 2012 1:41 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
>>
>> Hi ANTLR Community,
>>
>> I need a grammar for first order logic fomulas. I thought I could find
>> one on the antlr website, but I didnt. So now I started to write one by
>> myself and got some errors by antlrworks (version 1.4.3, java
>> openjdk7):
>>
>> [22:39:03] error(10):  internal error: /home/user/Desktop/FOL.g :
>> java.lang.IllegalArgumentException: No such group file:
>> org/antlr/codegen/templates/java/java.stg
>> org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
>> org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
>> org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>> org.antlr.Tool.process(Tool.java:468)
>> org.antlr.works.generate.CodeGenerate.generate(CodeGenerate.java:104)
>> org.antlr.works.debugger.local.DBLocal.generateGrammar(DBLocal.java:398
>> )
>> org.antlr.works.debugger.local.DBLocal.generateAndCompileGrammar(DBLoca
>> l.java:372)
>> org.antlr.works.debugger.local.DBLocal.run(DBLocal.java:222)
>> java.lang.Thread.run(Thread.java:722)
>>
>>
>> My first order grammar should support everything except quantifiers:
>>
>> grammar FOL;
>>
>> options{
>> 	language=java;
>> 	output=AST;
>> }
>>
>> tokens{
>> 	LPAREN='(';
>> 	RPAREN= ')';
>> 	AND= '&';
>> 	OR= '|';
>> 	NOT= '!';
>> }
>>
>> /*------------------------------------------------------------------
>>  * PARSER RULES
>>  *------------------------------------------------------------------*/
>>
>> condition: formula EOF!;
>>
>> formula: disjunction (AND^ disjunction)*;
>>
>> disjunction: element (OR^ element)*;
>>
>> element	: predicate
>> 	| NOT^? LPAREN! formula RPAREN!
>> 	;
>>
>> predicate
>> 	: ID TUPLE
>> 	| NOT^ ID TUPLE
>> 	| CONSTANT
>> 	| NOT^ CONSTANT;
>>
>> /*------------------------------------------------------------------
>>  * LEXER RULES
>>  *------------------------------------------------------------------*/
>>
>> VARIABLE: '?' CHARACTER+;
>>
>> CONSTANT: ('a'..'z') CHARACTER*;
>>
>> ID: ('A'..'Z') CHARACTER*;
>>
>> TUPLE: LPAREN (CONSTANT | VARIABLE) (','(CONSTANT | VARIABLE))* RPAREN;
>>
>> CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');
>>
>> WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};
>>
>> Do someone have a clue, why I get this error? I would provide this
>> grammar to the community, if it is finished.
>>
>> Best Regards,
>>   Stephan
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From kierans777 at gmail.com  Thu Apr 19 17:06:31 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Fri, 20 Apr 2012 10:06:31 +1000
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <E6B80325-DDC8-40E4-9C18-53A3AC9BA6C4@cs.usfca.edu>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
	<4F8F9AF4.6010209@gmail.com>
	<E6B80325-DDC8-40E4-9C18-53A3AC9BA6C4@cs.usfca.edu>
Message-ID: <4F90A887.6030405@gmail.com>

On 20/04/12 3:11 AM, Terence Parr wrote:
> Hi Kieran,
>
> thanks very much for the feedback. What exactly were you testing when you say parts of your grammar and in different combinations? Were you testing the ASTs you created? It was very useful for that. Since v4 automatically builds trees, those trees will be correct unless there's a bug so there's nothing really to test as far as I can tell.
> Ter

Ter and list,
   I must admit I haven't been watching the development of v4 that 
closely so perhaps there's something I'm not understanding about AST 
construction/rewrite rules.

An example from my current project is that you can define an entity 
inside a namespace.  However there is the ability to define the 
namespace as part of the entity def (it can make the input more readable).

eg: namespace(namespaceId)  { entity(entityId) ... }

eg: entity(namespaceId:entityId) ....

Conceptually the result is the same, a namespace tree with the entity as 
a subtree.  Using gUnit I've been able to write tests quickly! that test 
whether input combinations not only match, but build the correct AST 
structure.

Coupled with Token testing, and more complicated parser rules I've found 
gUnit valuable to my TDD process as I can come up with a bunch of input 
and refactor my grammar as I go.  Given my target AST walker language is 
C, in my C++ tests (the rest of my app is in C++) I can focus on 
semantic issues.  The separation of concerns testing wise is also nicer 
as I can isolate syntactic issues from semantic problems.

Cheers,

> On Apr 18, 2012, at 9:56 PM, Kieran Simpson wrote:
>
>> On 23/07/64 5:59 AM, Terence Parr wrote:
>>> Hi,
>>>
>>> I started down the path of building the new version of gUnit for v4, but I'm beginning to question its value for the new version. Because I am pooh-poohing putting actions directly within a grammar, grammar can only yield parse trees. and looks nice to be able to say:
>>>
>>> expr:
>>> 	"1"		->   (expr 1)
>>> 	"1+2"	->   (expr (expr 1) + (expr 2))
>>>
>>> but so what? all that did was confirm that the parser generated by ANTLR works correctly. it's not telling you anything you didn't know by looking at the grammar.
>>>
>>> In the old days we used to build ASTs and so we needed to check the structure. That need is no longer here. Also, these rules don't generate output and so we can't check input to output translation.
>>>
>>> What it comes down to is this: we really need functional testing not unit testing for language applications, unless of course each rule returns a string that the translation of the input some phrase or something. But, it's just as easy to write calls to assertEquals() saying that input x should yield input y. If we are doing something other than generating output, such as building up a data structure, then we really do need to manually check that the data structure is solid given some input.
>>>
>>> I'm trying to find a flaw in my logic. Is there something I'm missing about testing grammars? In v4, they will give you exactly what you want, unless there is a bug in ANTLR. But that's my problem not yours.
>>>
>>> If we can't find a major benefit, then we should avoid introducing another moving part to the ANTLR ecosystem.
>>
>> I find gUnit very helpful in testing parts of my grammar both in
>> isolation and different combinations.  I like being able to test token
>> definitions against different input.
>>
>> Where I find functional testing more beneficial is for tree walkers.
>> For my grammars that produce ASTs I've found the grammar tests useful in
>> preventing regression bugs.
>>
>> There's also testing in non Java languages to consider.  Having the
>> ability to have tests generated/run via JUnit may be easier than having
>> to piece together your tests in another language (eg: C) which I
>> personally find is more time consuming.
>>
>> Just a few thoughts.
>>
>> Cheers,

From Stefan.Maetje at esd-electronics.com  Fri Apr 20 00:38:39 2012
From: Stefan.Maetje at esd-electronics.com (=?UTF-8?B?U3RlZmFuIE3DpHRqZQ==?=)
Date: Fri, 20 Apr 2012 09:38:39 +0200
Subject: [antlr-interest] Problems with spurious EOF tree nodes while
 working with a tree parser (update)
In-Reply-To: <4F9058D2.8030501@esd-electronics.com>
References: <4F9058D2.8030501@esd-electronics.com>
Message-ID: <4F91127F.2090607@esd-electronics.com>

Hi ANTLR community,

perhaps I should ask my questions from another point of view.

Is it possible in a filtering tree parser to match simple sequences of 
two or more tokens? How is this be done or may be it is impossible?

In my parser I have the following "statement" rule that parses common 
statements and generates the AST:

statement
	:  (ID ':')* unlabeledStatement
		-> (LBD_DCL ID)* unlabeledStatement
	;

A statement like "lbl1: lbl2: GOTO somewhere;" would generate an AST 
like this:

"LBL_DCL lbl1 LBL_DCL lbl2 'GOTO' somewhere"

with 'lbl1', 'lbl2' and 'somewhere' being ID nodes. Is it possible to 
match these sequences like I tried with the tree grammar (filter mode) 
rules below without interfering with this unexpected 'EOF' tree node?

Thanks for any help,
	Stefan

Am 19.04.2012 20:26, schrieb Stefan M?tje:
> Hi,
>
> generate an AST with a combined lexer/parser grammar. Then I feed the
> generated AST via a CommonTreeNodeStream into a tree grammar to build up
> a symbol table. The tree grammar is in filter mode and I use my
> own tree nodes called Pearl90Tree. Therefore I created a custom
> Pearl90TreeAdaptor class.
>
> In my tree grammar I have two very simple rules quoted below:
>
> label_dcl
> //	:	LBL_DCL ID		// Won't match
> 	:	LBL_DCL EOF ID		// Will match
> 	{
> 		dbgOut.println("->  Label at _",$ID.line, $ID.pos));
> 	}
> 	;
>
> label_resolve
> //	:	gt='GOTO' id=ID			// Won't match
> 	:	gt='GOTO' eof=EOF myId=ID	// Will match
> 	{
> 	dbgOut.println("GOTO_Label "+$myId.toString());
> 	dbgOut.println("EOF #"+$eof.serial);
> 	}
> 	;
>
> The parser generates simply "LBL_DCL ID" for each label definition and a
> sequence of "'GOTO' ID" for a goto statement. I verified that the AST is
> correct. Also I dumped the CommonTreeNodeStream to see that it doesn't
> contain any EOF tree node behind the 'GOTO' or LBL_DCL tree node. My
> test source input is this:
>
> MODULE goto;
> PROBLEM;
> P: PROC;
>     label: GOTO label;
> END;
> MODEND;
>
> The CommonTreeNodeStream dumped follows here:
>
> +++++++++++++++ Tree +++++++++++++++++++++
> Pearl90Tree node #-1, c:2; token type: 92 'MODULE', value: 'MODULE'
> Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
> Pearl90Tree node #0, c:0; token type: 73 'ID', value: 'goto'
> Pearl90Tree node #1, c:1; token type: 182 ''PROBLEM'', value: 'PROBLEM'
> Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
> Pearl90Tree node #0, c:3; token type: 115 'PROC_DCL', value: 'PROC_DCL'
> Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
> Pearl90Tree node #0, c:0; token type: 73 'ID', value: 'P'
> Pearl90Tree node #1, c:0; token type: 93 'MOD_LIST', value: 'MOD_LIST'
> Pearl90Tree node #2, c:4; token type: 27 'BODY', value: 'BODY'
> Pearl90Tree node #-1, c:0; token type: 2 '<DOWN>', value: 'DOWN'
> Pearl90Tree node #0, c:0; token type: 85 'LBL_DCL', value: 'LBL_DCL'
> Pearl90Tree node #1, c:0; token type: 73 'ID', value: 'label'
> Pearl90Tree node #2, c:0; token type: 77 'KW_GOTO', value: 'GOTO'
> Pearl90Tree node #3, c:0; token type: 73 'ID', value: 'label'
> Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
> Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
> Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
> Pearl90Tree node #-1, c:0; token type: 3 '<UP>', value: 'UP'
> Pearl90Tree node #-1, c:0; token type: -1 '>EOF<', value: 'EOF'
>
> What I can see is that the tree parser in the filter mode generates lots
> of UP, DOWN and EOF tree nodes. Apparently the tree parser stuffs some
> of these EOF nodes between the others. (I know this because the tree
> parser calls my Pearl90TreeAdaptor to generate these nodes.)
>
> Because of this added EOF it can only match to "'GOTO' EOF ID" which I
> believe to be very strange. Why doesn't it match the "LBL_DCL ID"
> sequence either?
>
> What am I doing wrong? Any suggestions to get this running without
> putting this "magic" EOF in between?
>
> Thanks in advance,
> 	Stefan
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From louddwarf at gmail.com  Fri Apr 20 03:22:16 2012
From: louddwarf at gmail.com (Jason Jones)
Date: Fri, 20 Apr 2012 11:22:16 +0100
Subject: [antlr-interest] AST grammar
Message-ID: <CAFkEsQyfyGu3=TOYTBAFms6o1TfBOvxbzAbeqSaTs1xHdrZnNw@mail.gmail.com>

Hi antlr-interest,

I have the following grammar for building an AST, it's a slight adaption of
the Expr.g grammar from the Antlr Reference book:

grammar obfParenthese;

options {
output=AST;
ASTLabelType=CommonTree;
}

statement      : '(' expr symbol^ expr ')';    //first expr token will
match everything....
expr : mult (('+'^ | '-'^) mult)* ;
mult : atom (('*'^ | '/'^) atom)* ;
atom : NUMBER ;
symbol : SYMBOL;

SYMBOL : '+' | '-' | '*' | '/' ;

NUMBER : '0' .. '9'+ ;

And as you might be able to tell from the grammar I want to build an AST
that will take into consideration parenthese and change accordingly. Now it
is obvious to me that the above grammar won't work (as the first token expr
will consume everything) but I'm wondering if there's a way to do this
without using syntactic or semantic predicates and if not how would I do it
using them?

Please be kind as I'm new to Antlr and would very much appreciate it if
you'd explain carefully how it works. Even just a general direction to go
in would be appreciated.

Thanks, Jason.

From stephan.opfer at gmx.net  Fri Apr 20 07:37:53 2012
From: stephan.opfer at gmx.net (Stephan Opfer)
Date: Fri, 20 Apr 2012 16:37:53 +0200
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <4F908591.50104@gmx.net>
References: <4F90786C.5070307@gmx.net>
	<9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
	<4F908591.50104@gmx.net>
Message-ID: <4F9174C1.4000904@gmx.net>

Hi,

I think I created a grammar, which accepts prepositional logic and first
order logic. the only problem I see at the moment, is that quantifiers
are not the parent, but siblings of their scope.

I have an example input:

Exists ?x (Forall ?y Check(?y) & HasRelation(?x, ?y)) & (Exists ?y
NoCheck(?y) & HasNoRelation(?x, ?y))<EOF>

Exists ?x is a sibling of the & between the parenthesed formulas, but I
want ?x to be parent of this &. The problem is at the second alternative
of the element rule. Here is the grammar:

grammar FOLFUL;

options{
	language=Java;
	output=AST;
}

tokens{
	LPAREN='(';
	RPAREN= ')';
	AND= '&';
	OR= '|';
	NOT= '!';
	FORALL= 'Forall';
	EXISTS= 'Exists';
}


/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

condition: formula EOF!;

formula: conjunction (OR^ conjunction)*;

conjunction: element (AND^ element)*;

element	: NOT^? atom
	| NOT^? quantifier formula
	| NOT^? LPAREN! formula RPAREN!
	;
	
quantifier : (FORALL^ | EXISTS^) VARIABLE;
	
atom 	: PREPOSITION^ tuple?;

tuple	: LPAREN! (CONSTANT | VARIABLE) (','!(CONSTANT | VARIABLE))* RPAREN! ;


/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

VARIABLE: '?' (('a'..'z') | ('0'..'9')) CHARACTER*;

CONSTANT: (('a'..'z') | ('0'..'9')) CHARACTER*;

PREPOSITION: ('A'..'Z') CHARACTER*;

CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');

WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};

Best Regards,
  Stephan



On 04/19/2012 11:37 PM, Stephan Opfer wrote:
> Oh! Thanks Jim! That was easy :)
> 
> On 04/19/2012 11:16 PM, Jim Idle wrote:
>> language=Java; // Case sensitive.
>>
>> Jim
>>


From rossfreemantle at yahoo.co.uk  Fri Apr 20 07:46:28 2012
From: rossfreemantle at yahoo.co.uk (Ross Freemantle)
Date: Fri, 20 Apr 2012 15:46:28 +0100 (BST)
Subject: [antlr-interest] Encoding Unicode code points in a grammar file
Message-ID: <1334933188.8749.YahooMailNeo@web28802.mail.ir2.yahoo.com>

Hi,
?
I'm trying to use the C target to write a parser for a simple language that permits Unicode characters in identifiers and string literals.
?
The '\uXXXX' escape sequence works fine for characters in the Basic Multilingual Plane, but isn't suitable for anything beyond it. Ideally, I need a way of encoding the actual code point number into the grammar file. This quote from the C FAQ suggests it can be done:
?
"The purpose of LA() is to return the 32 bit integer Unicode code point for the specified character ? how it does that is irrelevant to the lexer, which is just matching 32 bit numbers. This means you should not code your lexer to match surrogates, just the code points."
?
I haven't been able to find any documentation or code examples to support this, however. Is this actually possible, or am I barking up the wrong tree?
?
Thanks in advance,
?
Ross Freemantle

From researcher0x00 at gmail.com  Fri Apr 20 09:21:06 2012
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 20 Apr 2012 12:21:06 -0400
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <4F9174C1.4000904@gmx.net>
References: <4F90786C.5070307@gmx.net>
	<9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
	<4F908591.50104@gmx.net> <4F9174C1.4000904@gmx.net>
Message-ID: <CAN45N12RQgXeOkVGckVJsuWTX=Hp-DwbUA8Xa7s0NYjfX=sttQ@mail.gmail.com>

Hi Stephan,


Have you looked at other FOL grammars on the internet?

i.e. https://www.cs.uiowa.edu/~hzhang/c145/notes/08a-fol-4p.pdf

or 140.122.185.120/.../AI2008-Lecture10-First-Order%20Logic.pdf

As a suggestion, you might want to design and test the engine then
concentrate on the grammar. If you start on the grammar you may be tempted
to modify the engine to accommodate the grammar. IMHO the grammar should
accommodate the engine.

Eric


On Fri, Apr 20, 2012 at 10:37 AM, Stephan Opfer <stephan.opfer at gmx.net>wrote:

> Hi,
>
> I think I created a grammar, which accepts prepositional logic and first
> order logic. the only problem I see at the moment, is that quantifiers
> are not the parent, but siblings of their scope.
>
> I have an example input:
>
> Exists ?x (Forall ?y Check(?y) & HasRelation(?x, ?y)) & (Exists ?y
> NoCheck(?y) & HasNoRelation(?x, ?y))<EOF>
>
> Exists ?x is a sibling of the & between the parenthesed formulas, but I
> want ?x to be parent of this &. The problem is at the second alternative
> of the element rule. Here is the grammar:
>
> grammar FOLFUL;
>
> options{
>        language=Java;
>         output=AST;
> }
>
> tokens{
>        LPAREN='(';
>        RPAREN= ')';
>        AND= '&';
>        OR= '|';
>        NOT= '!';
>         FORALL= 'Forall';
>        EXISTS= 'Exists';
> }
>
>
> /*------------------------------------------------------------------
>  * PARSER RULES
>  *------------------------------------------------------------------*/
>
> condition: formula EOF!;
>
> formula: conjunction (OR^ conjunction)*;
>
> conjunction: element (AND^ element)*;
>
> element : NOT^? atom
>        | NOT^? quantifier formula
>        | NOT^? LPAREN! formula RPAREN!
>        ;
>
> quantifier : (FORALL^ | EXISTS^) VARIABLE;
>
> atom    : PREPOSITION^ tuple?;
>
> tuple   : LPAREN! (CONSTANT | VARIABLE) (','!(CONSTANT | VARIABLE))*
> RPAREN! ;
>
>
> /*------------------------------------------------------------------
>  * LEXER RULES
>  *------------------------------------------------------------------*/
>
> VARIABLE: '?' (('a'..'z') | ('0'..'9')) CHARACTER*;
>
> CONSTANT: (('a'..'z') | ('0'..'9')) CHARACTER*;
>
> PREPOSITION: ('A'..'Z') CHARACTER*;
>
> CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');
>
> WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};
>
> Best Regards,
>  Stephan
>
>
>
> On 04/19/2012 11:37 PM, Stephan Opfer wrote:
> > Oh! Thanks Jim! That was easy :)
> >
> > On 04/19/2012 11:16 PM, Jim Idle wrote:
> >> language=Java; // Case sensitive.
> >>
> >> Jim
> >>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From stephan.opfer at gmx.net  Fri Apr 20 09:38:18 2012
From: stephan.opfer at gmx.net (Stephan Opfer)
Date: Fri, 20 Apr 2012 18:38:18 +0200
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <CAN45N12RQgXeOkVGckVJsuWTX=Hp-DwbUA8Xa7s0NYjfX=sttQ@mail.gmail.com>
References: <4F90786C.5070307@gmx.net>
	<9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
	<4F908591.50104@gmx.net> <4F9174C1.4000904@gmx.net>
	<CAN45N12RQgXeOkVGckVJsuWTX=Hp-DwbUA8Xa7s0NYjfX=sttQ@mail.gmail.com>
Message-ID: <4F9190FA.90105@gmx.net>

Hi Eric,

thx for the advice. Right now, I am just heading this way, because this
not that perfect grammar is already enough make some basic tests.

I was looking for grammars, but only in the context of ANTLR. The second
source is inaccessible to me.

Stephan

On 04/20/2012 06:21 PM, Eric wrote:
> Hi Stephan,
>  
> 
> Have you looked at other FOL grammars on the internet?
> 
> i.e. https://www.cs.uiowa.edu/~hzhang/c145/notes/08a-fol-4p.pdf
> 
> or 140.122.185.120/.../AI2008-Lecture10-First-Order%20Logic.pdf
> <http://140.122.185.120/.../AI2008-Lecture10-First-Order%20Logic.pdf>
> 
> As a suggestion, you might want to design and test the engine then
> concentrate on the grammar. If you start on the grammar you may be
> tempted to modify the engine to accommodate the grammar. IMHO the
> grammar should accommodate the engine.
> 
> Eric
> 
> 
> 
> On Fri, Apr 20, 2012 at 10:37 AM, Stephan Opfer <stephan.opfer at gmx.net
> <mailto:stephan.opfer at gmx.net>> wrote:
> 
>     Hi,
> 
>     I think I created a grammar, which accepts prepositional logic and first
>     order logic. the only problem I see at the moment, is that quantifiers
>     are not the parent, but siblings of their scope.
> 
>     I have an example input:
> 
>     Exists ?x (Forall ?y Check(?y) & HasRelation(?x, ?y)) & (Exists ?y
>     NoCheck(?y) & HasNoRelation(?x, ?y))<EOF>
> 
>     Exists ?x is a sibling of the & between the parenthesed formulas, but I
>     want ?x to be parent of this &. The problem is at the second alternative
>     of the element rule. Here is the grammar:
> 
>     grammar FOLFUL;
> 
>     options{
>            language=Java;
>            output=AST;
>     }
> 
>     tokens{
>            LPAREN='(';
>            RPAREN= ')';
>            AND= '&';
>            OR= '|';
>            NOT= '!';
>            FORALL= 'Forall';
>            EXISTS= 'Exists';
>     }
> 
> 
>     /*------------------------------------------------------------------
>      * PARSER RULES
>      *------------------------------------------------------------------*/
> 
>     condition: formula EOF!;
> 
>     formula: conjunction (OR^ conjunction)*;
> 
>     conjunction: element (AND^ element)*;
> 
>     element : NOT^? atom
>            | NOT^? quantifier formula
>            | NOT^? LPAREN! formula RPAREN!
>            ;
> 
>     quantifier : (FORALL^ | EXISTS^) VARIABLE;
> 
>     atom    : PREPOSITION^ tuple?;
> 
>     tuple   : LPAREN! (CONSTANT | VARIABLE) (','!(CONSTANT | VARIABLE))*
>     RPAREN! ;
> 
> 
>     /*------------------------------------------------------------------
>      * LEXER RULES
>      *------------------------------------------------------------------*/
> 
>     VARIABLE: '?' (('a'..'z') | ('0'..'9')) CHARACTER*;
> 
>     CONSTANT: (('a'..'z') | ('0'..'9')) CHARACTER*;
> 
>     PREPOSITION: ('A'..'Z') CHARACTER*;
> 
>     CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');
> 
>     WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};
> 
>     Best Regards,
>      Stephan
> 
> 
> 
>     On 04/19/2012 11:37 PM, Stephan Opfer wrote:
>     > Oh! Thanks Jim! That was easy :)
>     >
>     > On 04/19/2012 11:16 PM, Jim Idle wrote:
>     >> language=Java; // Case sensitive.
>     >>
>     >> Jim
>     >>
> 
> 
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 


From pedrogfrancisco at gmail.com  Fri Apr 20 10:09:49 2012
From: pedrogfrancisco at gmail.com (Pedro Francisco)
Date: Fri, 20 Apr 2012 18:09:49 +0100
Subject: [antlr-interest] StringTemplate 4 documentation bug report -- lacks
	some code
Message-ID: <CAJZjf_wMCH3NxJcPqCvOvOG1W11v7WKQ-J5YqnWwXDD4ZHzerA@mail.gmail.com>

FYI, I found that documentation for ST4 is having some issues.

Search for "Here's an example" in
http://www.antlr.org/wiki/display/ST4/Introduction . Notice no code at
all right after that text
Then do the same in http://www.antlr.org/wik--
i/plugins/viewsource/viewpagesrc.action?pageId=25559470 (source for
the above page). Notice there is markup for code.

May be related to Composition plugin (
http://wiki.customware.net/repository/display/COMP/Macro+Reference )
and migration to Confluence 4.0 .

--
Pedro

From jimi at temporal-wave.com  Fri Apr 20 11:00:43 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Apr 2012 11:00:43 -0700
Subject: [antlr-interest] Encoding Unicode code points in a grammar file
In-Reply-To: <1334933188.8749.YahooMailNeo@web28802.mail.ir2.yahoo.com>
References: <1334933188.8749.YahooMailNeo@web28802.mail.ir2.yahoo.com>
Message-ID: <b3fd8e5f16eb86b9853162db00542ef3@mail.gmail.com>

Did you try just '\uNNNNN' - are you seeing an error when you do this?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ross Freemantle
> Sent: Friday, April 20, 2012 7:46 AM
> To: ANTLR interest
> Subject: [antlr-interest] Encoding Unicode code points in a grammar
> file
>
> Hi,
>
> I'm trying to use the C target to write a parser for a simple language
> that permits Unicode characters in identifiers and string literals.
>
> The '\uXXXX' escape sequence works fine for characters in the Basic
> Multilingual Plane, but isn't suitable for anything beyond it. Ideally,
> I need a way of encoding the actual code point number into the grammar
> file. This quote from the C FAQ suggests it can be done:
>
> "The purpose of LA() is to return the 32 bit integer Unicode code point
> for the specified character ? how it does that is irrelevant to the
> lexer, which is just matching 32 bit numbers. This means you should not
> code your lexer to match surrogates, just the code points."
>
> I haven't been able to find any documentation or code examples to
> support this, however. Is this actually possible, or am I barking up
> the wrong tree?
>
> Thanks in advance,
>
> Ross Freemantle
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Apr 20 11:16:15 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Apr 2012 11:16:15 -0700
Subject: [antlr-interest] Encoding Unicode code points in a grammar file
In-Reply-To: <1334933188.8749.YahooMailNeo@web28802.mail.ir2.yahoo.com>
References: <1334933188.8749.YahooMailNeo@web28802.mail.ir2.yahoo.com>
Message-ID: <92115233ce9483c8e6b34d4fde9ddbdc@mail.gmail.com>

I see that the current code is assuming the \unnnn format proscribed by the
Java spec. We are going to have to implement something extra such as
\xnnnnn; where the ; indicates the end of the sequence. Then the
supplementary sets can be coded for. This has to be done in CTarget.java in
the Java toolset. It is pretty easy, I will see if I can do this and a few
other things at the weekend (you can always do it yourself too of course).

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ross Freemantle
> Sent: Friday, April 20, 2012 7:46 AM
> To: ANTLR interest
> Subject: [antlr-interest] Encoding Unicode code points in a grammar
> file
>
> Hi,
>
> I'm trying to use the C target to write a parser for a simple language
> that permits Unicode characters in identifiers and string literals.
>
> The '\uXXXX' escape sequence works fine for characters in the Basic
> Multilingual Plane, but isn't suitable for anything beyond it. Ideally,
> I need a way of encoding the actual code point number into the grammar
> file. This quote from the C FAQ suggests it can be done:
>
> "The purpose of LA() is to return the 32 bit integer Unicode code point
> for the specified character ? how it does that is irrelevant to the
> lexer, which is just matching 32 bit numbers. This means you should not
> code your lexer to match surrogates, just the code points."
>
> I haven't been able to find any documentation or code examples to
> support this, however. Is this actually possible, or am I barking up
> the wrong tree?
>
> Thanks in advance,
>
> Ross Freemantle
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jbb at acm.org  Fri Apr 20 13:08:42 2012
From: jbb at acm.org (John B. Brodie)
Date: Fri, 20 Apr 2012 16:08:42 -0400
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <4F9174C1.4000904@gmx.net>
References: <4F90786C.5070307@gmx.net>
	<9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
	<4F908591.50104@gmx.net> <4F9174C1.4000904@gmx.net>
Message-ID: <4F91C24A.1070107@acm.org>

Greetings!

Attached please find a tested (on just your single sample input string) 
version with the quantifier at a higher precedence that the disjunctive 
operation.

Basically just moved the quantifier clause higher up in the rule set.

And sorry but I also made a bunch of unnecessary gratuitous changes 
along the way...

Hope this helps...
    -jbb

On 04/20/2012 10:37 AM, Stephan Opfer wrote:
> Hi,
>
> I think I created a grammar, which accepts prepositional logic and first
> order logic. the only problem I see at the moment, is that quantifiers
> are not the parent, but siblings of their scope.
>
> I have an example input:
>
> Exists ?x (Forall ?y Check(?y)&  HasRelation(?x, ?y))&  (Exists ?y
> NoCheck(?y)&  HasNoRelation(?x, ?y))<EOF>
>
> Exists ?x is a sibling of the&  between the parenthesed formulas, but I
> want ?x to be parent of this&. The problem is at the second alternative
> of the element rule. Here is the grammar:
>
> grammar FOLFUL;
>
> options{
> 	language=Java;
> 	output=AST;
> }
>
> tokens{
> 	LPAREN='(';
> 	RPAREN= ')';
> 	AND= '&';
> 	OR= '|';
> 	NOT= '!';
> 	FORALL= 'Forall';
> 	EXISTS= 'Exists';
> }
>
>
> /*------------------------------------------------------------------
>   * PARSER RULES
>   *------------------------------------------------------------------*/
>
> condition: formula EOF!;
>
> formula: conjunction (OR^ conjunction)*;
>
> conjunction: element (AND^ element)*;
>
> element	: NOT^? atom
> 	| NOT^? quantifier formula
> 	| NOT^? LPAREN! formula RPAREN!
> 	;
> 	
> quantifier : (FORALL^ | EXISTS^) VARIABLE;
> 	
> atom 	: PREPOSITION^ tuple?;
>
> tuple	: LPAREN! (CONSTANT | VARIABLE) (','!(CONSTANT | VARIABLE))* RPAREN! ;
>
>
> /*------------------------------------------------------------------
>   * LEXER RULES
>   *------------------------------------------------------------------*/
>
> VARIABLE: '?' (('a'..'z') | ('0'..'9')) CHARACTER*;
>
> CONSTANT: (('a'..'z') | ('0'..'9')) CHARACTER*;
>
> PREPOSITION: ('A'..'Z') CHARACTER*;
>
> CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');
>
> WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};
>
> Best Regards,
>    Stephan
>
>
>
> On 04/19/2012 11:37 PM, Stephan Opfer wrote:
>> Oh! Thanks Jim! That was easy :)
>>
>> On 04/19/2012 11:16 PM, Jim Idle wrote:
>>> language=Java; // Case sensitive.
>>>
>>> Jim
>>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: FOLFUL.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20120420/b4e3c457/attachment.pl 

From parrt at cs.usfca.edu  Fri Apr 20 17:45:22 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2012 17:45:22 -0700
Subject: [antlr-interest] gUnit for v4?
In-Reply-To: <4F90A887.6030405@gmail.com>
References: <FFE0A3DB-0E59-4DF4-A447-73F860CD8A06@cs.usfca.edu>
	<4F8F9AF4.6010209@gmail.com>
	<E6B80325-DDC8-40E4-9C18-53A3AC9BA6C4@cs.usfca.edu>
	<4F90A887.6030405@gmail.com>
Message-ID: <AF8F76D4-5867-4387-9A00-9AB0201A1D6B@cs.usfca.edu>


On Apr 19, 2012, at 5:06 PM, Kieran Simpson wrote:

> On 20/04/12 3:11 AM, Terence Parr wrote:
>> Hi Kieran,
>> 
>> thanks very much for the feedback. What exactly were you testing when you say parts of your grammar and in different combinations? Were you testing the ASTs you created? It was very useful for that. Since v4 automatically builds trees, those trees will be correct unless there's a bug so there's nothing really to test as far as I can tell.
>> Ter
> 
> Ter and list,
>  I must admit I haven't been watching the development of v4 that closely so perhaps there's something I'm not understanding about AST construction/rewrite rules.
> 
> An example from my current project is that you can define an entity inside a namespace.  However there is the ability to define the namespace as part of the entity def (it can make the input more readable).
> 
> eg: namespace(namespaceId)  { entity(entityId) ... }
> 
> eg: entity(namespaceId:entityId) ....
> 
> Conceptually the result is the same, a namespace tree with the entity as a subtree.  Using gUnit I've been able to write tests quickly! that test whether input combinations not only match, but build the correct AST structure.

Since ANTLR would be constructing trees, you are only testing validity of sentences.  Seems like we can make a simple function

assertEquals("rulename", "entity(namespaceId:entityId) ?", "tree for that entity");

> Coupled with Token testing, and more complicated parser rules I've found gUnit valuable to my TDD process as I can come up with a bunch of input and refactor my grammar as I go.  Given my target AST walker language is C, in my C++ tests (the rest of my app is in C++) I can focus on semantic issues.  The separation of concerns testing wise is also nicer as I can isolate syntactic issues from semantic problems.

Hmm?yeah, i still think a function/macro could work here.

Ter

From parrt at cs.usfca.edu  Sat Apr 21 12:11:49 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Apr 2012 12:11:49 -0700
Subject: [antlr-interest] anybody know joomla well?
Message-ID: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>

toying with idea of moving antlr.org to a joomla installation as both site / doc (old wiki).
please send me some email if you have some time to discuss it's possibilities.
thanks,
T

From cjdaniels4 at gmail.com  Sat Apr 21 12:39:34 2012
From: cjdaniels4 at gmail.com (Charles Daniels)
Date: Sat, 21 Apr 2012 15:39:34 -0400
Subject: [antlr-interest] anybody know joomla well?
In-Reply-To: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
References: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
Message-ID: <CA+e3_SS6FOubRekj74f-maMV-PP5nBW5F0LCrk448a7Yec3dbg@mail.gmail.com>

Have you considered using Atlassian's OnDemand
Confluence<http://www.atlassian.com/software/confluence/overview>?
Atlassian offers free
licensing<http://www.atlassian.com/software/views/open-source-license-request>of
all of their OnDemand product subscriptions for open source projects.

Regards,
Chuck

On Sat, Apr 21, 2012 at 3:11 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> toying with idea of moving antlr.org to a joomla installation as both
> site / doc (old wiki).
> please send me some email if you have some time to discuss it's
> possibilities.
> thanks,

T
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sat Apr 21 12:41:20 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Apr 2012 12:41:20 -0700
Subject: [antlr-interest] anybody know joomla well?
In-Reply-To: <CA+e3_SS6FOubRekj74f-maMV-PP5nBW5F0LCrk448a7Yec3dbg@mail.gmail.com>
References: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
	<CA+e3_SS6FOubRekj74f-maMV-PP5nBW5F0LCrk448a7Yec3dbg@mail.gmail.com>
Message-ID: <50BB0FEF-F0AB-4869-8882-B70ED213B058@cs.usfca.edu>

tried. ondemand fail. ;)
Ter
On Apr 21, 2012, at 12:39 PM, Charles Daniels wrote:

> Have you considered using Atlassian's OnDemand Confluence? Atlassian offers free licensing of all of their OnDemand product subscriptions for open source projects.
> 
> Regards,
> Chuck
> 
> On Sat, Apr 21, 2012 at 3:11 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> toying with idea of moving antlr.org to a joomla installation as both site / doc (old wiki).
> please send me some email if you have some time to discuss it's possibilities.
> thanks, 
> T
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From cjdaniels4 at gmail.com  Sat Apr 21 13:31:29 2012
From: cjdaniels4 at gmail.com (Charles Daniels)
Date: Sat, 21 Apr 2012 16:31:29 -0400
Subject: [antlr-interest] anybody know joomla well?
In-Reply-To: <50BB0FEF-F0AB-4869-8882-B70ED213B058@cs.usfca.edu>
References: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
	<CA+e3_SS6FOubRekj74f-maMV-PP5nBW5F0LCrk448a7Yec3dbg@mail.gmail.com>
	<50BB0FEF-F0AB-4869-8882-B70ED213B058@cs.usfca.edu>
Message-ID: <CA+e3_STrdzW0B_ar=icd1ukiG9g2vHjmJ8eGVod0YGf5C_925g@mail.gmail.com>

Would you mind elaborating?

On Sat, Apr 21, 2012 at 3:41 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> tried. ondemand fail. ;)
> Ter
>
> On Apr 21, 2012, at 12:39 PM, Charles Daniels wrote:
>
> Have you considered using Atlassian's OnDemand Confluence<http://www.atlassian.com/software/confluence/overview>?
> Atlassian offers free licensing<http://www.atlassian.com/software/views/open-source-license-request>of all of their OnDemand product subscriptions for open source projects.
>
> Regards,
> Chuck
>
> On Sat, Apr 21, 2012 at 3:11 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> toying with idea of moving antlr.org to a joomla installation as both
>> site / doc (old wiki).
>> please send me some email if you have some time to discuss it's
>> possibilities.
>> thanks,
>
> T
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>

From jimi at temporal-wave.com  Sat Apr 21 16:41:01 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 21 Apr 2012 16:41:01 -0700
Subject: [antlr-interest] anybody know joomla well?
In-Reply-To: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
References: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
Message-ID: <1A8ED721-F358-4C87-A125-27A7F162A762@temporal-wave.com>

I know joomla backwards. I'll email you. 

Jim

On Apr 21, 2012, at 12:11 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> toying with idea of moving antlr.org to a joomla installation as both site / doc (old wiki).
> please send me some email if you have some time to discuss it's possibilities.
> thanks,
> T
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From stephan.opfer at gmx.net  Sun Apr 22 00:47:17 2012
From: stephan.opfer at gmx.net (Stephan Opfer)
Date: Sun, 22 Apr 2012 09:47:17 +0200
Subject: [antlr-interest] anybody know joomla well?
In-Reply-To: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
References: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
Message-ID: <4F93B785.8070900@gmx.net>

Hi,

what I am doing now, is really typical for internet discussions and
annoying. So apologies in advance: "I don't know Joomla, but have you
tried Drupal instead?"

If you don't want to use Drupal, ignore this mail. :)

Otherwise, here is the page I set up without any experience in CMS or
Webpages at all: das-lab.net
Drupal.org has a nice and active community, so that I was able to solve
every problem by just asking in their IRC channel or searching the rich
documentation on their website.

Best Regards,
  Stephan



On 04/21/2012 09:11 PM, Terence Parr wrote:
> toying with idea of moving antlr.org to a joomla installation as both site / doc (old wiki).
> please send me some email if you have some time to discuss it's possibilities.
> thanks,
> T
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From stephan.opfer at gmx.net  Sun Apr 22 00:57:35 2012
From: stephan.opfer at gmx.net (Stephan Opfer)
Date: Sun, 22 Apr 2012 09:57:35 +0200
Subject: [antlr-interest] Grammar for Predicate Logic (FOL)
In-Reply-To: <4F91C24A.1070107@acm.org>
References: <4F90786C.5070307@gmx.net>
	<9eb76b200f2c3b4b0c58ea83f69e39f0@mail.gmail.com>
	<4F908591.50104@gmx.net> <4F9174C1.4000904@gmx.net>
	<4F91C24A.1070107@acm.org>
Message-ID: <4F93B9EF.5010303@gmx.net>

Hi JBB,

thank you for your help! The grammar you send look really nice and the
"unnecessary changes" helped me to understand ANTLR a little bit more.

I am not sure, if I want the variable of the quantifier as sibling or
parent of their scope. Maybe its more convenient to have something like this

Exists
  |
  V
  ?x
  |
  V
(formula)

, instead of the version you sent to me

       Exists
  _______|_______
 |               |
 V               V
 ?x          (formula)

I tried to achieve this, but failed, because of several
NoViableAltExceptions. Before I head on to this, I first make the rest
of the software run.

Best Regards,
  Stephan

On 04/20/2012 10:08 PM, John B. Brodie wrote:
> Greetings!
> 
> Attached please find a tested (on just your single sample input string)
> version with the quantifier at a higher precedence that the disjunctive
> operation.
> 
> Basically just moved the quantifier clause higher up in the rule set.
> 
> And sorry but I also made a bunch of unnecessary gratuitous changes
> along the way...
> 
> Hope this helps...
>    -jbb
> 
> On 04/20/2012 10:37 AM, Stephan Opfer wrote:
>> Hi,
>>
>> I think I created a grammar, which accepts prepositional logic and first
>> order logic. the only problem I see at the moment, is that quantifiers
>> are not the parent, but siblings of their scope.
>>
>> I have an example input:
>>
>> Exists ?x (Forall ?y Check(?y)&  HasRelation(?x, ?y))&  (Exists ?y
>> NoCheck(?y)&  HasNoRelation(?x, ?y))<EOF>
>>
>> Exists ?x is a sibling of the&  between the parenthesed formulas, but I
>> want ?x to be parent of this&. The problem is at the second alternative
>> of the element rule. Here is the grammar:
>>
>> grammar FOLFUL;
>>
>> options{
>>     language=Java;
>>     output=AST;
>> }
>>
>> tokens{
>>     LPAREN='(';
>>     RPAREN= ')';
>>     AND= '&';
>>     OR= '|';
>>     NOT= '!';
>>     FORALL= 'Forall';
>>     EXISTS= 'Exists';
>> }
>>
>>
>> /*------------------------------------------------------------------
>>   * PARSER RULES
>>   *------------------------------------------------------------------*/
>>
>> condition: formula EOF!;
>>
>> formula: conjunction (OR^ conjunction)*;
>>
>> conjunction: element (AND^ element)*;
>>
>> element    : NOT^? atom
>>     | NOT^? quantifier formula
>>     | NOT^? LPAREN! formula RPAREN!
>>     ;
>>     
>> quantifier : (FORALL^ | EXISTS^) VARIABLE;
>>     
>> atom     : PREPOSITION^ tuple?;
>>
>> tuple    : LPAREN! (CONSTANT | VARIABLE) (','!(CONSTANT | VARIABLE))*
>> RPAREN! ;
>>
>>
>> /*------------------------------------------------------------------
>>   * LEXER RULES
>>   *------------------------------------------------------------------*/
>>
>> VARIABLE: '?' (('a'..'z') | ('0'..'9')) CHARACTER*;
>>
>> CONSTANT: (('a'..'z') | ('0'..'9')) CHARACTER*;
>>
>> PREPOSITION: ('A'..'Z') CHARACTER*;
>>
>> CHARACTER: ('0'..'9' | 'a'..'z' | 'A'..'Z' | '_');
>>
>> WS : (' ' | '\t' | '\r' | '\n')+ {$channel = HIDDEN;};
>>
>> Best Regards,
>>    Stephan
>>
>>
>>
>> On 04/19/2012 11:37 PM, Stephan Opfer wrote:
>>> Oh! Thanks Jim! That was easy :)
>>>
>>> On 04/19/2012 11:16 PM, Jim Idle wrote:
>>>> language=Java; // Case sensitive.
>>>>
>>>> Jim
>>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Sun Apr 22 10:46:19 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 22 Apr 2012 10:46:19 -0700
Subject: [antlr-interest] anybody know joomla well?
In-Reply-To: <4F93B785.8070900@gmx.net>
References: <03740811-DD33-4F8D-BD94-65611F8A9941@cs.usfca.edu>
	<4F93B785.8070900@gmx.net>
Message-ID: <2AC01C6D-4EDC-4B5E-A3E2-69F702D3CB8D@temporal-wave.com>

Don't use Drupal or Wordpress. Some if the most inefficient code you could adopt in my opinion. Nothing but trouble when you want to do more than a simple page. 

Jim

On Apr 22, 2012, at 12:47 AM, Stephan Opfer <stephan.opfer at gmx.net> wrote:

> Hi,
> 
> what I am doing now, is really typical for internet discussions and
> annoying. So apologies in advance: "I don't know Joomla, but have you
> tried Drupal instead?"
> 
> If you don't want to use Drupal, ignore this mail. :)
> 
> Otherwise, here is the page I set up without any experience in CMS or
> Webpages at all: das-lab.net
> Drupal.org has a nice and active community, so that I was able to solve
> every problem by just asking in their IRC channel or searching the rich
> documentation on their website.
> 
> Best Regards,
>  Stephan
> 
> 
> 
> On 04/21/2012 09:11 PM, Terence Parr wrote:
>> toying with idea of moving antlr.org to a joomla installation as both site / doc (old wiki).
>> please send me some email if you have some time to discuss it's possibilities.
>> thanks,
>> T
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From costa_basil at yahoo.ca  Mon Apr 23 00:06:07 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 23 Apr 2012 00:06:07 -0700 (PDT)
Subject: [antlr-interest] parametrized c# parser class
Message-ID: <1335164767.59782.YahooMailMobile@web161405.mail.bf1.yahoo.com>

Using the cshap3 target, is it possible to generate a parametrized c# parser class? Something like:

public class MyParser<T> and so on.

I also want to have some non-terminal attributes of type T.

Thanks

From sam at tunnelvisionlabs.com  Mon Apr 23 04:11:02 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Mon, 23 Apr 2012 06:11:02 -0500
Subject: [antlr-interest] parametrized c# parser class
In-Reply-To: <1335164767.59782.YahooMailMobile@web161405.mail.bf1.yahoo.com>
References: <1335164767.59782.YahooMailMobile@web161405.mail.bf1.yahoo.com>
Message-ID: <04d701cd2141$c61ca7d0$5255f770$@tunnelvisionlabs.com>

The CSharp2 and CSharp3 targets always generate generic classes. I've even
managed to get the CSharp3 target to generate a parser that used a value
type (struct in C#) for the token type without any boxing/unboxing involved.

I'll need more details about what you're trying to do to be more specific.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Costa Basil [mailto:costa_basil at yahoo.ca] 
Sent: Monday, April 23, 2012 2:06 AM
To: antlr
Subject: [antlr-interest] parametrized c# parser class

Using the cshap3 target, is it possible to generate a parametrized c# parser
class? Something like:

public class MyParser<T> and so on.

I also want to have some non-terminal attributes of type T.

Thanks

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andrea.polci at exmachina.ch  Mon Apr 23 09:11:50 2012
From: andrea.polci at exmachina.ch (Andrea Polci)
Date: Mon, 23 Apr 2012 18:11:50 +0200
Subject: [antlr-interest] Lexer for Ruby's heredoc syntax
Message-ID: <CAKF_Ucmn08vpGYzQ34pkUhUvd__9NZaOz6DWab5nuTuznfHPTQ@mail.gmail.com>

I'm trying to write a parser that allow the Ruby's heredoc syntax that
allow to write something like this:

method_name(<<DELIM, 123, <<OTHERDELIM)
    This is the content for the
    first argument of the method
DELIM
   This is the content for the third argument of the method
OTHERDELIM
otherMethod()
....


The lexer should produce the following token stream:
IDENTIFIER LPAREN HEREDOC COMMA INTEGER COMMA HEREDOC RPAREN EOL IDENTIFIER
...

What the lexer should do when it found a heredoc tag (<<XXXX) is to mark
the current position, skip to the following line, than consume all the
characters until it finds the delimiter matching the tag. After that it
should rewind to the mark previously set.
The problem is that it should then skip all the lines part of the heredoc
already analysed.

Is there a way to do something similar?
All I can think of is to wrap the input CharStream and allow to mark lines
that have to be ignored by calls to input.consume() (and other methods of
the CharStream interface).

Thanks for any help.

Andrea

From jimi at temporal-wave.com  Mon Apr 23 09:30:37 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Apr 2012 09:30:37 -0700
Subject: [antlr-interest] Lexer for Ruby's heredoc syntax
In-Reply-To: <CAKF_Ucmn08vpGYzQ34pkUhUvd__9NZaOz6DWab5nuTuznfHPTQ@mail.gmail.com>
References: <CAKF_Ucmn08vpGYzQ34pkUhUvd__9NZaOz6DWab5nuTuznfHPTQ@mail.gmail.com>
Message-ID: <3f3b7dd8af19aa0314e56bd58af4fe48@mail.gmail.com>

You have to use some member variables in the lexer and hand craft a method
to do what you need. But you will also need to add code at the newline
rule that notices you have recorded the position of text to skip before
the next LA call. You need to mark the end of the last text you process.
You will also need to process an error when the delimiter is missing and
so on.

It is easy enough with a little thought, but to me it is another example
of Ruby's arbitrary syntax and functionality.


HEREDOC: '<<' { setText(processHere()); } ;
NL: '\n' { skipHereDoc(); } ;


You need to look at input.Mark() . skip() and .rewind (or is it release, I
cannot remember).

Having looked at parsing Ruby before, this is the least of your worries to
be honest - you are trying to be bug compatible with an interpreter and
there is almost always something that is impossible to determine at parse
time vs runtime.


Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andrea Polci
> Sent: Monday, April 23, 2012 9:12 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer for Ruby's heredoc syntax
>
> I'm trying to write a parser that allow the Ruby's heredoc syntax that
> allow to write something like this:
>
> method_name(<<DELIM, 123, <<OTHERDELIM)
>     This is the content for the
>     first argument of the method
> DELIM
>    This is the content for the third argument of the method OTHERDELIM
> otherMethod()
> ....
>
>
> The lexer should produce the following token stream:
> IDENTIFIER LPAREN HEREDOC COMMA INTEGER COMMA HEREDOC RPAREN EOL
> IDENTIFIER ...
>
> What the lexer should do when it found a heredoc tag (<<XXXX) is to
> mark the current position, skip to the following line, than consume all
> the characters until it finds the delimiter matching the tag. After
> that it should rewind to the mark previously set.
> The problem is that it should then skip all the lines part of the
> heredoc already analysed.
>
> Is there a way to do something similar?
> All I can think of is to wrap the input CharStream and allow to mark
> lines that have to be ignored by calls to input.consume() (and other
> methods of the CharStream interface).
>
> Thanks for any help.
>
> Andrea
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From costa_basil at yahoo.ca  Mon Apr 23 09:43:20 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 23 Apr 2012 09:43:20 -0700 (PDT)
Subject: [antlr-interest] parametrized c# parser class
In-Reply-To: <04d701cd2141$c61ca7d0$5255f770$@tunnelvisionlabs.com>
References: <1335164767.59782.YahooMailMobile@web161405.mail.bf1.yahoo.com>
	<04d701cd2141$c61ca7d0$5255f770$@tunnelvisionlabs.com>
Message-ID: <1335199400.20995.YahooMailNeo@web161403.mail.bf1.yahoo.com>

I have a tree grammar which I use to compile formulas (additions, subtractions, relational expressions etc). I want to use the same grammar to translate the formulas in another language. I don't want to maintain two grammars, so I thought I will create an interface that would handle my grammar actions (i.e. the interface would have methods for each action - one for binary operations, one for handling strings etc). If I want to compile formulas I hand the parser one implementation of the interface, if I want to translate formulas I hand the parser another implementation. 


The problem is that when I compile formulas, the non-terminal attribute type that I am using for expressions is a custom type T1, while for the other case is T2. So, I was thinking of parameterizing the parser with a parameter type T. When I want to compile formulas I instantiate the parser with T1, when I want to translate the formulas I instantiate the parser with type T2.


Hence my question, whether I can customize the generation of the parser to specify my own parameter type T, so I can declare attributes of type T.


Thanks,
Costa



________________________________
 From: Sam Harwell <sam at tunnelvisionlabs.com>
To: 'Costa Basil' <costa_basil at yahoo.ca>; 'antlr' <antlr-interest at antlr.org> 
Sent: Monday, April 23, 2012 4:11:02 AM
Subject: RE: [antlr-interest] parametrized c# parser class
 
The CSharp2 and CSharp3 targets always generate generic classes. I've even
managed to get the CSharp3 target to generate a parser that used a value
type (struct in C#) for the token type without any boxing/unboxing involved.

I'll need more details about what you're trying to do to be more specific.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Costa Basil [mailto:costa_basil at yahoo.ca] 
Sent: Monday, April 23, 2012 2:06 AM
To: antlr
Subject: [antlr-interest] parametrized c# parser class

Using the cshap3 target, is it possible to generate a parametrized c# parser
class? Something like:

public class MyParser<T> and so on.

I also want to have some non-terminal attributes of type T.

Thanks

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From lrperlmu at colby.edu  Mon Apr 23 10:38:42 2012
From: lrperlmu at colby.edu (Leah Perlmutter)
Date: Mon, 23 Apr 2012 13:38:42 -0400
Subject: [antlr-interest] Quick rewrite question
Message-ID: <CACtzujhN10guWYBwFD-fDgMKcCpRpw-y7_jnBcu7yHcT-mhbKw@mail.gmail.com>

I have the following rule in a C grammar:

parameter_declaration
    : declaration_specifiers (declarator|abstract_declarator)*
    ;

I want the rule to get its own token, so I tried the following rewrite:

parameter_declaration
    : declaration_specifiers (declarator|abstract_declarator)*
        -> ^( ParamDecToken<ParamDec> declaration_specifiers (declarator |
abstract_declarator)* )
    ;

but that doesn't compile (antlr syntax error). The attempt below compiles
but is semantically wrong because it doesn't account for when the
declarators and abstract_declarators are interspersed.

parameter_declaration
    : declaration_specifiers (declarator|abstract_declarator)*
        -> ^( ParamDecToken<ParamDec> declaration_specifiers declarator*
abstract_declarator*)  // semantically wrong
    ;

Is there a way to add my token and preserve proper semantics?


Thanks!
-Leah

From jimi at temporal-wave.com  Mon Apr 23 10:48:26 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Apr 2012 10:48:26 -0700
Subject: [antlr-interest] Quick rewrite question
In-Reply-To: <CACtzujhN10guWYBwFD-fDgMKcCpRpw-y7_jnBcu7yHcT-mhbKw@mail.gmail.com>
References: <CACtzujhN10guWYBwFD-fDgMKcCpRpw-y7_jnBcu7yHcT-mhbKw@mail.gmail.com>
Message-ID: <0cf1cccc00b2350f7ebabda071e3372f@mail.gmail.com>

x: subrule -> ^(ParamDecToken subrule) ;

subrule : declaration_specifiers (declarator|abstract_declarator)* ;


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Leah Perlmutter
> Sent: Monday, April 23, 2012 10:39 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Quick rewrite question
>
> I have the following rule in a C grammar:
>
> parameter_declaration
>     : declaration_specifiers (declarator|abstract_declarator)*
>     ;
>
> I want the rule to get its own token, so I tried the following rewrite:
>
> parameter_declaration
>     : declaration_specifiers (declarator|abstract_declarator)*
>         -> ^( ParamDecToken<ParamDec> declaration_specifiers
> (declarator |
> abstract_declarator)* )
>     ;
>
> but that doesn't compile (antlr syntax error). The attempt below
> compiles but is semantically wrong because it doesn't account for when
> the declarators and abstract_declarators are interspersed.
>
> parameter_declaration
>     : declaration_specifiers (declarator|abstract_declarator)*
>         -> ^( ParamDecToken<ParamDec> declaration_specifiers
> declarator*
> abstract_declarator*)  // semantically wrong
>     ;
>
> Is there a way to add my token and preserve proper semantics?
>
>
> Thanks!
> -Leah
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From christian.lerch at km-works.eu  Tue Apr 24 01:53:26 2012
From: christian.lerch at km-works.eu (Christian Lerch)
Date: Tue, 24 Apr 2012 10:53:26 +0200
Subject: [antlr-interest] Fwd: "Exotic" grammar rule
In-Reply-To: <4F9667C3.1010707@km-works.eu>
References: <4F9667C3.1010707@km-works.eu>
Message-ID: <4F966A06.8040606@km-works.eu>


On some other website I found the following interesting ANTRL grammar rule:

onestar
     :    ( { input.LA(2) != STAR }?  ( STAR )?)
     |
     ;

Can anybody explain its precise meaning to me?

Cheers,
Chris



From pedrogfrancisco at gmail.com  Tue Apr 24 09:51:10 2012
From: pedrogfrancisco at gmail.com (Pedro Francisco)
Date: Tue, 24 Apr 2012 17:51:10 +0100
Subject: [antlr-interest] StringTemplate 4 documentation bug report --
	lacks some code
In-Reply-To: <CAJZjf_wMCH3NxJcPqCvOvOG1W11v7WKQ-J5YqnWwXDD4ZHzerA@mail.gmail.com>
References: <CAJZjf_wMCH3NxJcPqCvOvOG1W11v7WKQ-J5YqnWwXDD4ZHzerA@mail.gmail.com>
Message-ID: <CAJZjf_w=oFvsL=v1TiHXAfdF0a9vA1qMa4S9-bNpR5y_Bj2dtw@mail.gmail.com>

On Fri, Apr 20, 2012 at 6:09 PM, Pedro Francisco
<pedrogfrancisco at gmail.com>wrote:

> FYI, I found that documentation for ST4 is having some issues.
>
> Search for "Here's an example" in
> http://www.antlr.org/wiki/display/ST4/Introduction . Notice no code at
> all right after that text
> Then do the same in http://www.antlr.org/wik--
> i/plugins/viewsource/viewpagesrc.action?pageId=25559470 (source for
> the above page). Notice there is markup for code.
>
> May be related to Composition plugin (
> http://wiki.customware.net/repository/display/COMP/Macro+Reference )
> and migration to Confluence 4.0 .
>
>
I fixed all the problems with ST4 documentation. There were some missing
code snippets, namely empty boxes serving as placeholder for C# and Python
code, I added "(TBD)" on them.

-- 
Pedro

From silverhand31 at yahoo.com  Tue Apr 24 10:13:34 2012
From: silverhand31 at yahoo.com (silverhand31)
Date: Tue, 24 Apr 2012 10:13:34 -0700 (PDT)
Subject: [antlr-interest] C++ Grammars
In-Reply-To: <CAJ8SgH=6vgugBU-Kcuum027xWvVDGiP4=8khgwMdSM6qT6sC+w@mail.gmail.com>
References: <CAJueBb97uj2yyKbmkrj4TL9QkX=-F0nRStMLy_WSNbsX_ur6Fg@mail.gmail.com>
	<CAJ8SgHk_RX09DYAA+72QmTBFkbEzDD8+K2Kkv3658gXhCfgMBg@mail.gmail.com>
	<CAJ8SgHnV3vTy5DGV1uXLm1S32yWY1_AqwWJzfcg6xvaAi7hqbg@mail.gmail.com>
	<CAJ8SgH=6vgugBU-Kcuum027xWvVDGiP4=8khgwMdSM6qT6sC+w@mail.gmail.com>
Message-ID: <1335287614098-7496708.post@n2.nabble.com>

Hi, I edited the "\\u" but there some errors more
[code]error(8):  file CPP.g contains grammar cpp; names must be identical
error(106): CPP.g:1018:20: reference to undefined rule: alignment_expression
[/code]
Honestly I want to convert c,c++ file with pointers to AST tree, then build
it in another language.
I did tried google so I come to ANTLR.
Read some example.
Hope this cpp.g could work for my job.

--
View this message in context: http://antlr.1301665.n2.nabble.com/C-Grammars-tp7359540p7496708.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sidraakhalid at gmail.com  Tue Apr 24 10:58:44 2012
From: sidraakhalid at gmail.com (skhalid)
Date: Tue, 24 Apr 2012 10:58:44 -0700 (PDT)
Subject: [antlr-interest] help for Tree Grammar PLSQL subset
Message-ID: <1335290323996-7496855.post@n2.nabble.com>

I am doing my research project on converting PLsql to MySQL syntax. I have
completed analysis work and now I am doing implementation. I have taken
ANTLR, and C# for implementation. 

Since I am new to ANTLR so getting lot of trouble to write a translator in
antlr. I am using antlrworks 1.4 and i have extracted a subset of plsql
grammer which works fine to me and debuggers shows me correct AST. I am
getting problem on writing tree grammer for plsql subset grammar. 
grammer files Key.g and keyprinter.g  are attached herewith. 

I have extracted tree grammer from an open source link for the sake of my
learning so that i can understand  it by debugging the grammar in
antlrworks. 
https://bitbucket.org/notnull/ingres-migration-library/src/6203a63188cf/IngresMigrationParser/src/main/antlr3/com/ingres/antlr/idiom/oracle

When i run tree grammar on antlrworks, it gives error 
"grammar mismatch: grammar for the remote parser is not the same" 
and shows me NIL in antlrworks debugger 

ANTLR also provides the support for the Stringtemplates for writing
translators. I am bit confused that which approach should i follow for
translation .Please give me some suggestions on it. 
1- writing traslation logic in tree grammer directly 
2- using stringtemplte .stg files 


 key.g
keyPrinter.g


Can anyone help me and guide me with expert advice on it. 
Thanks in advance 


Sidra 


--
View this message in context: http://antlr.1301665.n2.nabble.com/help-for-Tree-Grammar-PLSQL-subset-tp7496855p7496855.html
Sent from the ANTLR mailing list archive at Nabble.com.

From cummings at kjchome.homeip.net  Tue Apr 24 11:02:19 2012
From: cummings at kjchome.homeip.net (Kevin Cummings)
Date: Tue, 24 Apr 2012 14:02:19 -0400
Subject: [antlr-interest] Fwd: "Exotic" grammar rule
In-Reply-To: <4F966A06.8040606@km-works.eu>
References: <4F9667C3.1010707@km-works.eu> <4F966A06.8040606@km-works.eu>
Message-ID: <0D3ECC4B-46E2-4367-921D-6F9651415735@kjchome.homeip.net>

Yes, the code in the {}? Is a gated semantic predicate.  If the expression inside evaluates to true, then the alternative is attempted to be matched.  If the expression is false, then the alternative is never tried.

So, for the code you are looking at, if the 2nd look ahead character is *not* a STAR, then it is OK to match an optional STAR character as the next input character.  This guarantees that if you *do* match a STAR, there is only one to match (and not two of them).

--
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232
(http://www.linuxcounter.net/)


On Apr 24, 2012, at 4:53, Christian Lerch <christian.lerch at km-works.eu> wrote:

> 
> On some other website I found the following interesting ANTRL grammar rule:
> 
> onestar
>     :    ( { input.LA(2) != STAR }?  ( STAR )?)
>     |
>     ;
> 
> Can anybody explain its precise meaning to me?
> 
> Cheers,
> Chris
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Tue Apr 24 11:53:41 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Apr 2012 11:53:41 -0700
Subject: [antlr-interest] StringTemplate 4 documentation bug report --
	lacks some code
In-Reply-To: <CAJZjf_w=oFvsL=v1TiHXAfdF0a9vA1qMa4S9-bNpR5y_Bj2dtw@mail.gmail.com>
References: <CAJZjf_wMCH3NxJcPqCvOvOG1W11v7WKQ-J5YqnWwXDD4ZHzerA@mail.gmail.com>
	<CAJZjf_w=oFvsL=v1TiHXAfdF0a9vA1qMa4S9-bNpR5y_Bj2dtw@mail.gmail.com>
Message-ID: <9A44F058-F61C-4D17-B829-618FCB233948@cs.usfca.edu>

Thanks very much Pedro!
Ter
On Apr 24, 2012, at 9:51 AM, Pedro Francisco wrote:

> On Fri, Apr 20, 2012 at 6:09 PM, Pedro Francisco
> <pedrogfrancisco at gmail.com>wrote:
> 
>> FYI, I found that documentation for ST4 is having some issues.
>> 
>> Search for "Here's an example" in
>> http://www.antlr.org/wiki/display/ST4/Introduction . Notice no code at
>> all right after that text
>> Then do the same in http://www.antlr.org/wik--
>> i/plugins/viewsource/viewpagesrc.action?pageId=25559470 (source for
>> the above page). Notice there is markup for code.
>> 
>> May be related to Composition plugin (
>> http://wiki.customware.net/repository/display/COMP/Macro+Reference )
>> and migration to Confluence 4.0 .
>> 
>> 
> I fixed all the problems with ST4 documentation. There were some missing
> code snippets, namely empty boxes serving as placeholder for C# and Python
> code, I added "(TBD)" on them.
> 
> -- 
> Pedro
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Tue Apr 24 12:32:21 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Apr 2012 12:32:21 -0700
Subject: [antlr-interest] Fwd: "Exotic" grammar rule
In-Reply-To: <0D3ECC4B-46E2-4367-921D-6F9651415735@kjchome.homeip.net>
References: <4F9667C3.1010707@km-works.eu> <4F966A06.8040606@km-works.eu>
	<0D3ECC4B-46E2-4367-921D-6F9651415735@kjchome.homeip.net>
Message-ID: <3e7d14f85cfa9f4fc87bf784d3e49560@mail.gmail.com>

It is a semantic predicate, not a gated semantic predicate (though it
probably should be a gated version). It is [possibly] better written:

onestar
     :    { input.LA(2) != STAR }?=>  STAR?
     |
     ;

However it smacks very much of a weakness in the grammar itself in that it
is trying to force context on to a syntax rule. Without seeing the rest of
the grammar, it is difficult to see - can you point to the original
grammar?

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kevin Cummings
> Sent: Tuesday, April 24, 2012 11:02 AM
> To: Christian Lerch
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fwd: "Exotic" grammar rule
>
> Yes, the code in the {}? Is a gated semantic predicate.  If the
> expression inside evaluates to true, then the alternative is attempted
> to be matched.  If the expression is false, then the alternative is
> never tried.
>
> So, for the code you are looking at, if the 2nd look ahead character is
> *not* a STAR, then it is OK to match an optional STAR character as the
> next input character.  This guarantees that if you *do* match a STAR,
> there is only one to match (and not two of them).
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232
> (http://www.linuxcounter.net/)
>
>
> On Apr 24, 2012, at 4:53, Christian Lerch <christian.lerch at km-works.eu>
> wrote:
>
> >
> > On some other website I found the following interesting ANTRL grammar
> rule:
> >
> > onestar
> >     :    ( { input.LA(2) != STAR }?  ( STAR )?)
> >     |
> >     ;
> >
> > Can anybody explain its precise meaning to me?
> >
> > Cheers,
> > Chris
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From costa_basil at yahoo.ca  Tue Apr 24 12:38:59 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Tue, 24 Apr 2012 12:38:59 -0700 (PDT)
Subject: [antlr-interest] Suggestion for StringTemplate
Message-ID: <1335296339.39439.YahooMailNeo@web161404.mail.bf1.yahoo.com>

Add a way of setting the template argument values in one shot using a collection. Currently, I have to call the Template.Add method to assign values for each argument. I would like to use something like this:

public Template Add(object[] values)

where the method will assign each value in the array to the argument on the corresponding position.


I currently use StringTemplate 4 (C#) to translate functions from one language to another. Each function in the source language is mapped to a template name. The argument values are stored in lists and assigning the values to the template arguments becomes a bit of a pain. 


Also it would be nice to add a function at(args, index) along with first, rest, last and the others.

Thanks.

From christian.lerch at km-works.eu  Tue Apr 24 22:27:18 2012
From: christian.lerch at km-works.eu (Christian Lerch)
Date: Wed, 25 Apr 2012 07:27:18 +0200
Subject: [antlr-interest] "Exotic" grammar rule
Message-ID: <4F978B36.7050104@km-works.eu>


From syedjamalhaider at gmail.com  Wed Apr 25 03:34:29 2012
From: syedjamalhaider at gmail.com (Jamal Haider)
Date: Wed, 25 Apr 2012 12:34:29 +0200
Subject: [antlr-interest] How to combine tokens around comments without
	using AST
Message-ID: <CAPB7WxwDs4vSii01+L80fQHMpXWKTpsPjEKogOnVwtwYfzeCAA@mail.gmail.com>

I am a newbie to ANTLR and using it to develop a parser for an ambiguous
language. What I want to do is to some how combine the tokens around the
"comments" into one token without using AST.

I am using this simple grammar to illustrate the problem

grammar test;

query
    :     expression+
    ;

expression
    :   alpha
    ;


alpha
    : ID
    ;


ID  :   ('a'..'z'|'A'..'Z'|'_')*
    ;


COMMENT
    :   '{' ( options {greedy=false;} : . )* '}' {$channel=HIDDEN;}
    ;

Now if we execute it with a simple text "Test{Comments}er" two separate
tokens are generated i.e. "Test" and "er". while I want to create a single
token out of it. Any help will be much appreciated.

Thanks in advance

Jim

From pnicklas at freenet.de  Wed Apr 25 03:53:48 2012
From: pnicklas at freenet.de (pnicklas at freenet.de)
Date: Wed, 25 Apr 2012 12:53:48 +0200
Subject: [antlr-interest] Antlr StringTemplate version conflicts C#
Message-ID: <68adb9795b6eba5aa1b9e9df48fb4dcc@email.freenet.de>

Hi!
?
I use antlrworks 1.4.3 (with ANTLR 3.4) to generate the C# code for my grammars.
?
?
The using directives in the generated code are ?"using Antlr3.ST;" and "using Antlr3.ST.language;", but this doesn't work with the newer "Antlr4.StringTemplate.dll", so I changed em to "using Antlr4.StringTemplate" etc. The problem is, that doesn't work, too. All StringTemplate types can not be found.
?
?
So when I use the old version of Antrl3.StringTemplate (3.3.1.7705) with the current version of Antlr3.Runtime (3.4), no compilation errors occure. But I get exceptions at running time, I think because of version conflicts?
?
Using version 3.3.1.7705 of StringTemplate and Antlr Runtime generates compilations error again.
?
?
So which dlls can I use to get ANTLR 3.4 working with C# and StringTemplate?
?
Thanks.
?
?
Peter


---
E-Mail ist da wo du bist! Jetzt mit freenetMail ganz bequem auch unterwegs E-Mails verschicken.
Am besten gleich informieren unter http://mail.freenet.de/mobile-email/index.html

From researcher0x00 at gmail.com  Wed Apr 25 04:06:38 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 25 Apr 2012 07:06:38 -0400
Subject: [antlr-interest] How to combine tokens around comments without
 using AST
In-Reply-To: <CAPB7WxwDs4vSii01+L80fQHMpXWKTpsPjEKogOnVwtwYfzeCAA@mail.gmail.com>
References: <CAPB7WxwDs4vSii01+L80fQHMpXWKTpsPjEKogOnVwtwYfzeCAA@mail.gmail.com>
Message-ID: <CAN45N116rt8pO1CC4vvZ0Ja8ZCyiAHUe9aJ25jLTG3uuTWOcyQ@mail.gmail.com>

Hi Jim,

Off the top of my head.

Use the TokenRewriteStream class after the lexer.

Don't hide the comment tokens. Use them as input to the TokenRewriteStream
and then when you see a comment token, delete it and combine the text from
the tokens before and after the comment into the token before the comment,
and delete the token after the comment.

Eric
On Wed, Apr 25, 2012 at 6:34 AM, Jamal Haider <syedjamalhaider at gmail.com>wrote:

> I am a newbie to ANTLR and using it to develop a parser for an ambiguous
> language. What I want to do is to some how combine the tokens around the
> "comments" into one token without using AST.
>
> I am using this simple grammar to illustrate the problem
>
> grammar test;
>
> query
>    :     expression+
>    ;
>
> expression
>    :   alpha
>    ;
>
>
> alpha
>    : ID
>    ;
>
>
> ID  :   ('a'..'z'|'A'..'Z'|'_')*
>    ;
>
>
> COMMENT
>    :   '{' ( options {greedy=false;} : . )* '}' {$channel=HIDDEN;}
>    ;
>
> Now if we execute it with a simple text "Test{Comments}er" two separate
> tokens are generated i.e. "Test" and "er". while I want to create a single
> token out of it. Any help will be much appreciated.
>
> Thanks in advance
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sam at tunnelvisionlabs.com  Wed Apr 25 05:18:08 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 25 Apr 2012 07:18:08 -0500
Subject: [antlr-interest] Antlr StringTemplate version conflicts C#
In-Reply-To: <68adb9795b6eba5aa1b9e9df48fb4dcc@email.freenet.de>
References: <68adb9795b6eba5aa1b9e9df48fb4dcc@email.freenet.de>
Message-ID: <068401cd22dd$7a526770$6ef73650$@tunnelvisionlabs.com>

The ANTLR 3.4 C# runtime does not have any dependency on StringTemplate. You'll want to download the "ST3" release from the following page that includes Antlr3.Runtime.dll and Antlr3.StringTemplate.dll.
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

ANTLR 3 with "output=template" only supports generating code that uses StringTemplate 3.

You'll always want to use Antlr3.exe from the "Tool" or "Bootstrap" release at the above link to generate code for the C# targets. The code is further optimized and the Tool is much more extensively tested with the C# target.

Thank you,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: pnicklas at freenet.de [mailto:pnicklas at freenet.de] 
Sent: Wednesday, April 25, 2012 5:54 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr StringTemplate version conflicts C#

Hi!
 
I use antlrworks 1.4.3 (with ANTLR 3.4) to generate the C# code for my grammars.
 
 
The using directives in the generated code are  "using Antlr3.ST;" and "using Antlr3.ST.language;", but this doesn't work with the newer "Antlr4.StringTemplate.dll", so I changed em to "using Antlr4.StringTemplate" etc. The problem is, that doesn't work, too. All StringTemplate types can not be found.
 
 
So when I use the old version of Antrl3.StringTemplate (3.3.1.7705) with the current version of Antlr3.Runtime (3.4), no compilation errors occure. But I get exceptions at running time, I think because of version conflicts?
 
Using version 3.3.1.7705 of StringTemplate and Antlr Runtime generates compilations error again.
 
 
So which dlls can I use to get ANTLR 3.4 working with C# and StringTemplate?
 
Thanks.
 
 
Peter


---
E-Mail ist da wo du bist! Jetzt mit freenetMail ganz bequem auch unterwegs E-Mails verschicken.
Am besten gleich informieren unter http://mail.freenet.de/mobile-email/index.html

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Apr 25 09:06:25 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Apr 2012 09:06:25 -0700
Subject: [antlr-interest] How to combine tokens around comments without
 using AST
In-Reply-To: <CAPB7WxwDs4vSii01+L80fQHMpXWKTpsPjEKogOnVwtwYfzeCAA@mail.gmail.com>
References: <CAPB7WxwDs4vSii01+L80fQHMpXWKTpsPjEKogOnVwtwYfzeCAA@mail.gmail.com>
Message-ID: <6f82e23bebe4b6b47b4f1a47d07d8b2e@mail.gmail.com>

First note the given example will not work as your ID token is allowed to
be empty, which means it will match the empty string infinitely, you
needed a + not a *.

However, I would generally make a pre-pass on the text and just remove the
comments as this is usually the easiest. You can possible even do this
with regexp based replacement function (you do not say what your
target/development language is). But if you cannot do this:


ID
@init {

  StringBuilder sb = new StringBuilder();
}
:  ('a'..'z'|'A'..'Z'|'_') { sb.add(input.LA(-1); }
     (
       ('a'..'z'|'A'..'Z'|'_') { sb.add(input.LA(-1); }
       | COMMENT
     )*
     { setText(sb.toString();); }
;

If you do not need the COMMENT tokens, then use skip() rather than
$channel=HIDDEN.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jamal Haider
> Sent: Wednesday, April 25, 2012 3:34 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to combine tokens around comments without
> using AST
>
> I am a newbie to ANTLR and using it to develop a parser for an
> ambiguous language. What I want to do is to some how combine the tokens
> around the "comments" into one token without using AST.
>
> I am using this simple grammar to illustrate the problem
>
> grammar test;
>
> query
>     :     expression+
>     ;
>
> expression
>     :   alpha
>     ;
>
>
> alpha
>     : ID
>     ;
>
>
> ID  :   ('a'..'z'|'A'..'Z'|'_')*
>     ;
>
>
> COMMENT
>     :   '{' ( options {greedy=false;} : . )* '}' {$channel=HIDDEN;}
>     ;
>
> Now if we execute it with a simple text "Test{Comments}er" two separate
> tokens are generated i.e. "Test" and "er". while I want to create a
> single token out of it. Any help will be much appreciated.
>
> Thanks in advance
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Apr 25 09:12:33 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Apr 2012 09:12:33 -0700
Subject: [antlr-interest] How to combine tokens around comments without
 using AST
In-Reply-To: <CAN45N116rt8pO1CC4vvZ0Ja8ZCyiAHUe9aJ25jLTG3uuTWOcyQ@mail.gmail.com>
References: <CAPB7WxwDs4vSii01+L80fQHMpXWKTpsPjEKogOnVwtwYfzeCAA@mail.gmail.com>
	<CAN45N116rt8pO1CC4vvZ0Ja8ZCyiAHUe9aJ25jLTG3uuTWOcyQ@mail.gmail.com>
Message-ID: <21f959a93bba299576b606b67bc12ba3@mail.gmail.com>

Blindly combining the tokens assumes that comments only occur between ID
tokens, in fact you would need to check the token before and after and
then delete any other COMMENT tokens. I think that the lexer based
solution is better.

However, in the lexer based solution I gave earlier, I used the supplied
definition of COMMENT, which will eat all characters to EOF if there is a
lexical error in the COMMENT - unless they are multi-line, then I would
rewrite that token to stop at the end of line and give an error, or better
still, use custom code to consume characters when { is seen.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Eric
> Sent: Wednesday, April 25, 2012 4:07 AM
> To: Jamal Haider
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to combine tokens around comments
> without using AST
>
> Hi Jim,
>
> Off the top of my head.
>
> Use the TokenRewriteStream class after the lexer.
>
> Don't hide the comment tokens. Use them as input to the
> TokenRewriteStream and then when you see a comment token, delete it and
> combine the text from the tokens before and after the comment into the
> token before the comment, and delete the token after the comment.
>
> Eric
> On Wed, Apr 25, 2012 at 6:34 AM, Jamal Haider
> <syedjamalhaider at gmail.com>wrote:
>
> > I am a newbie to ANTLR and using it to develop a parser for an
> > ambiguous language. What I want to do is to some how combine the
> > tokens around the "comments" into one token without using AST.
> >
> > I am using this simple grammar to illustrate the problem
> >
> > grammar test;
> >
> > query
> >    :     expression+
> >    ;
> >
> > expression
> >    :   alpha
> >    ;
> >
> >
> > alpha
> >    : ID
> >    ;
> >
> >
> > ID  :   ('a'..'z'|'A'..'Z'|'_')*
> >    ;
> >
> >
> > COMMENT
> >    :   '{' ( options {greedy=false;} : . )* '}' {$channel=HIDDEN;}
> >    ;
> >
> > Now if we execute it with a simple text "Test{Comments}er" two
> > separate tokens are generated i.e. "Test" and "er". while I want to
> > create a single token out of it. Any help will be much appreciated.
> >
> > Thanks in advance
> >
> > Jim
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From christian.lerch at km-works.eu  Wed Apr 25 22:17:00 2012
From: christian.lerch at km-works.eu (Christian Lerch)
Date: Thu, 26 Apr 2012 07:17:00 +0200
Subject: [antlr-interest] "Exotic" grammar rule
In-Reply-To: <mailman.1.1335380402.27560.antlr-interest@antlr.org>
References: <mailman.1.1335380402.27560.antlr-interest@antlr.org>
Message-ID: <4F98DA4C.40800@km-works.eu>


From LeeStewart at RandomOddness.com  Wed Apr 25 23:15:12 2012
From: LeeStewart at RandomOddness.com (Lee Stewart)
Date: Thu, 26 Apr 2012 02:15:12 -0400
Subject: [antlr-interest] Converting my Java code to work as a C Target.
Message-ID: <000901cd2373$f12530d0$d36f9270$@RandomOddness.com>

I'm a total Antlr noob, but I put together a working language by grabbing
random Java code samples I found.  It's pretty simple, basically I have a
Node class that all the nodes inherited from.  This base class has an "eval"
method and there are specialized classes for the different nodes.

 

My old grammar has rules like:

multiplicativeExpression returns [Node node]:

    receiver=moduleVariable

      operation=(MUL|DIV|MOD|MINUS) arguments=multiplicativeExpression

    { $node = new MathNode($operation.text, $receiver.node,
$arguments.node); }

  ;

 

And my MathNode stores the parameters passed into the constructor:

public MathNode(String operation, Node receiver, List<Node> arguments)

 

I call my eval() method with the current context and it handles all of the
internal work.

 

At this point I want to rewrite things so I can target C as my
implementation language.  I worked through a few of the samples and read as
much as I can, but I'm not quite sure how to connect what I'm doing now with
the C structures.  I read that my code should "subclass" the data that comes
from the C runtime, but I'm not sure what that means from a C perspective.

 

I defined a "struct MathNode" that pretty much mirrors the Java class,
complete with a function pointer for eval. In main() I create a lexer and
parser, etc and I think I should be able to do something like this:

struct MathNode *math;

math = psr->multiplicativeExpression(psr);

math->eval(global_context);

 

My grammar has these options:

Language = C;

ASTLabelType = pANTLR3_BASE_TREE;

output = AST;

 

I kept the same syntax with my rules: "multiplicativeExpression returns
[Node node]".  The tricky part is what code I need for the rule when I
create a new MathNode and initialize it.  It seems like my code has a lot of
info that it can use, but I'm not quite sure what the "connective glue"
should look like.  I have the same three variables: operation, receiver, and
arguments - operation is pretty straightforward, I can use gettext (or maybe
use the token constant stored in ANTLR3_COMMON_TOKEN.type).

 

I'm not sure how to manage the two nodes.  The way I set up the grammar
seems to have given me several options, but I think it's the same as the
Java code, $node = sexy_node_making_function($operation->type,
$receiver->node, $arguments->node ).  My node builder could allocate a
MathNode structure, fill in the details, and return for storage in the
return structure.

 

It seems like an odd way to store things, am I missing something?  The
return value has start/stop tokens (not sure what to do with those) and a
tree, in addition to my node information.

 

Should I somehow store my node data in the ANTLR3_BASE_TREE.u variable?
Would my grammar still need the "returns [Node node]" bit, or will the
parser still return the tree?

 

Since there are several levels of structures, how do I call eval() on the
node?

 

Thanks for any input!

 

Lee

 


From pnicklas at freenet.de  Thu Apr 26 02:49:49 2012
From: pnicklas at freenet.de (pnicklas at freenet.de)
Date: Thu, 26 Apr 2012 11:49:49 +0200
Subject: [antlr-interest] Rewriting questions
Message-ID: <2c0a35b842c8f1a120f648b6b42123bf@email.freenet.de>

Hi!
?
I want to write a code rewriter, but I don't know how to realize the following pseudocode:
?
?
string[] list = {"int", "float"};
?
foreach(string newtype in list){
?
 //rewriting rule
 if(predefined_type != newtype)
 predefined_type -> newtype;
?
 // action: create the new TokenString
 tokens.ToString();
?
 // use the original tokens to go on
 tokens.ToOriginalString();
}
?
?
Explanation:
?
1. The first problem is, that I don't want to write a grammar for every type I want to insert. Can I use a list/array/multi-value type for that?
?
2. I don't want to replace all occurrencies of the type, only the first, the second etc. in the file. Can I execute an action (save the token strings) right after the rewrite and set the tokens back after that?
?
3. Can I insert some conditions in the rule, like exluding the actual type?
?
Do you have any better ideas to realize that?
(Sry for my newbie questions, I couldn't find it in the docs.)
?
Thank you.
?
Peter


---
Nutzen Sie freenet Mail optimal angepasst f?r Ihr iPhone, Android oder Nokia Handy auch von unterwegs.
Alle Infos und Download unter freenetMail Apps

From parrt at cs.usfca.edu  Thu Apr 26 15:03:18 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 26 Apr 2012 15:03:18 -0700
Subject: [antlr-interest] updated Honey badger, examples
Message-ID: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>

Updated Honey badger examples to be consistent with antlr/antlr4 and parrt/antlr4 github repositories. Biggest change is a syntax alteration for alternative labels. -> is now #. Reloaded all of the test files here so they compile and run with the latest and greatest v4:

http://www.antlr.org/wiki/display/ANTLR4/Examples

you can download here:

https://github.com/antlr/antlr4/downloads

 if you're really brave you can download here:

https://github.com/parrt/antlr4/downloads

that's what I update regularly whereas the other I only update once a month or so.

Ter

From forumer at smartmobili.com  Thu Apr 26 15:15:17 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Fri, 27 Apr 2012 00:15:17 +0200
Subject: [antlr-interest] Remarks about c# target
Message-ID: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>

Hi,

I have some remarks about the c# target because I am working on a 
project where warnings are treated as errors
and the generated class have the following attribute 
[System.CLSCompliant(false)]
but when I compile I get the following error :

Error	3	Warning as Error: 'EnadaLexer' does not need a CLSCompliant 
attribute because the assembly does not have a CLSCompliant attribute

Is it really necessary to generate this attribute ?




From chris at christopherschultz.net  Thu Apr 26 18:38:00 2012
From: chris at christopherschultz.net (Christopher Schultz)
Date: Thu, 26 Apr 2012 21:38:00 -0400
Subject: [antlr-interest] [ANTLR2] post-rule action?
Message-ID: <4F99F878.2030002@christopherschultz.net>

All,

(Apologies is this turns out to be a re-post. After a few hours, I
hadn't seen it come across the mailing list, so I'm trying again).

I'm looking for something like an init-action for a rule, except that I
want it to go after the rule body just before the return.

Here's a concrete example of a rule I have: it takes text separated by
commas and returns a List of those things. It works just fine:

argumentlist returns [java.util.List list = new java.util.ArrayList()]
throws EvaluationException
    {
        Expression arg;
    }
    :
        arg=argument { if(null != arg) { list.add(arg); } }
        (COMMA! arg=argument { if(null != arg) { list.add(arg); } })*
    ;


But, I'd like to make it so that the resulting ArrayList gets trimmed
before the return, like this:

....
....
((ArrayList)list).trimToSize();

return list;

It turns out that I have a lot of ArrayLists being created that only
contain a single element, but an ArrayList created with no size
constraint defaults to 10 elements. Believe it or not, this results in a
significant memory usage for me.

(As further performance optimizations, I could even do something like this:

switch(list.size()) {
  case 0: list = Collections.emptyList(); break;
  case 1: list = Collections.singletonList(list.get(0)); break;
  default: ((ArrayList)list).trimToSize();
}

In any case, I didn't see a way to include such a "postamble" or
anything like that in the ANTLR .g file.

Any suggestions?

-chris



From jimi at temporal-wave.com  Thu Apr 26 19:22:29 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Apr 2012 19:22:29 -0700
Subject: [antlr-interest] [ANTLR2] post-rule action?
In-Reply-To: <4F99F878.2030002@christopherschultz.net>
References: <4F99F878.2030002@christopherschultz.net>
Message-ID: <54F9028F-0109-41E8-B526-CD1EE94FDECC@temporal-wave.com>

@after

Or (my preference)

rule : ( alt | alt | alt) { actions(); } ;

Jim

On Apr 26, 2012, at 6:38 PM, Christopher Schultz <chris at christopherschultz.net> wrote:

> All,
> 
> (Apologies is this turns out to be a re-post. After a few hours, I
> hadn't seen it come across the mailing list, so I'm trying again).
> 
> I'm looking for something like an init-action for a rule, except that I
> want it to go after the rule body just before the return.
> 
> Here's a concrete example of a rule I have: it takes text separated by
> commas and returns a List of those things. It works just fine:
> 
> argumentlist returns [java.util.List list = new java.util.ArrayList()]
> throws EvaluationException
>    {
>        Expression arg;
>    }
>    :
>        arg=argument { if(null != arg) { list.add(arg); } }
>        (COMMA! arg=argument { if(null != arg) { list.add(arg); } })*
>    ;
> 
> 
> But, I'd like to make it so that the resulting ArrayList gets trimmed
> before the return, like this:
> 
> ....
> ....
> ((ArrayList)list).trimToSize();
> 
> return list;
> 
> It turns out that I have a lot of ArrayLists being created that only
> contain a single element, but an ArrayList created with no size
> constraint defaults to 10 elements. Believe it or not, this results in a
> significant memory usage for me.
> 
> (As further performance optimizations, I could even do something like this:
> 
> switch(list.size()) {
>  case 0: list = Collections.emptyList(); break;
>  case 1: list = Collections.singletonList(list.get(0)); break;
>  default: ((ArrayList)list).trimToSize();
> }
> 
> In any case, I didn't see a way to include such a "postamble" or
> anything like that in the ANTLR .g file.
> 
> Any suggestions?
> 
> -chris
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From sam at tunnelvisionlabs.com  Thu Apr 26 20:36:42 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Thu, 26 Apr 2012 22:36:42 -0500
Subject: [antlr-interest] Remarks about c# target
In-Reply-To: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>
References: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>
Message-ID: <07a401cd2426$f73f2440$e5bd6cc0$@tunnelvisionlabs.com>

Yes, the attribute is necessary. You should add the following attribute to
your project:

[assembly: CLSCompliant(false)]

Since there is no warning for redundancy, this will make it stop printing
that warning/error.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com] 
Sent: Thursday, April 26, 2012 5:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Remarks about c# target

Hi,

I have some remarks about the c# target because I am working on a project
where warnings are treated as errors and the generated class have the
following attribute [System.CLSCompliant(false)] but when I compile I get
the following error :

Error	3	Warning as Error: 'EnadaLexer' does not need a CLSCompliant 
attribute because the assembly does not have a CLSCompliant attribute

Is it really necessary to generate this attribute ?




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From don.boogert at gmail.com  Fri Apr 27 00:24:55 2012
From: don.boogert at gmail.com (Don Boogert)
Date: Fri, 27 Apr 2012 08:24:55 +0100
Subject: [antlr-interest] multiple pass translator
Message-ID: <CA+rFNd+2j1sZaQBk2=7J18eFyuwMTczhuGbmNxTdk38dx4WLLQ@mail.gmail.com>

Hi,

I have a toy language translator which uses ANTLR, C runtime and LLVM to
execute simple programs.  It uses combined grammar and a tree grammar (
https://bitbucket.org/dmb/egg/src/2c5b5d10322c/src/grammar) which contains
the C++ calls to LLVM. I'd like to be able to add multiple passes to my
translator.

My options :

1) Define additional tree grammars for the new passes
2) Walk the AST tree in code.
3) Add a switch to my existing tree grammar to alter the output based on
pass

I'm leaning towards option (1)  but it seems a lot of information needs to
be duplicated between the tree grammars for the various passes. Is there
any recommendations of how I should do this with ANTLR & C runtime?

Thanks for the help

- Don

From oliver.zeigermann at gmail.com  Fri Apr 27 00:54:47 2012
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri, 27 Apr 2012 09:54:47 +0200
Subject: [antlr-interest] updated Honey badger, examples
In-Reply-To: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
References: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
Message-ID: <CABJr57DDqOFGeEALefJ__9_gptaZX4W_nimx+044dxCPjp5WjA@mail.gmail.com>

Cool stuff. Any suggestions what I should replace

1. TokenRewriteStream and
2. CommonTokenStream#toString(Token start, Token stop)

that used to be there in previous versions with?

Cheers

Dr. Simplify :)

2012/4/27 Terence Parr <parrt at cs.usfca.edu>:
> Updated Honey badger examples to be consistent with antlr/antlr4 and parrt/antlr4 github repositories. Biggest change is a syntax alteration for alternative labels. -> is now #. Reloaded all of the test files here so they compile and run with the latest and greatest v4:
>
> http://www.antlr.org/wiki/display/ANTLR4/Examples
>
> you can download here:
>
> https://github.com/antlr/antlr4/downloads
>
> ?if you're really brave you can download here:
>
> https://github.com/parrt/antlr4/downloads
>
> that's what I update regularly whereas the other I only update once a month or so.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From chris at christopherschultz.net  Fri Apr 27 09:59:26 2012
From: chris at christopherschultz.net (Christopher Schultz)
Date: Fri, 27 Apr 2012 12:59:26 -0400
Subject: [antlr-interest] [ANTLR2] post-rule action?
In-Reply-To: <54F9028F-0109-41E8-B526-CD1EE94FDECC@temporal-wave.com>
References: <4F99F878.2030002@christopherschultz.net>
	<54F9028F-0109-41E8-B526-CD1EE94FDECC@temporal-wave.com>
Message-ID: <4F9AD06E.70900@christopherschultz.net>

Jim,

On 4/26/12 10:22 PM, Jim Idle wrote:
> @after
> 
> Or (my preference)
> 
> rule : ( alt | alt | alt) { actions(); } ;

Perfect. I'm not sure why I thought that there needed to be special
syntax for code that executes after all alternatives. Just put it at the
end!

Thanks,
-chris

From esen2007 at gmail.com  Fri Apr 27 12:03:20 2012
From: esen2007 at gmail.com (Esen Yilmaz)
Date: Fri, 27 Apr 2012 12:03:20 -0700
Subject: [antlr-interest] Question about grammar trees
Message-ID: <CAMbFZKXBXte_FAJepwxAxaHUMn=aXDPCG+KMEa9thLFTyofkyA@mail.gmail.com>

I'd appreciate it very much if you could give me some help on the following
- I'm guessing it's a very simple issue but I can't get to grips with how
to solve it.

I've got a simple grammar (below) and it is meant to process inputs like:

group gA
{
  keyA1 = "1"

group gB
{
  keyB1 = "1"
}

keyA2 = "3"
}

I need to place code (C-code) within the grammar (or the tree grammar for
it I think) that will automatically give me a struct in my actual
application code like:

struct Group
{
  int numKVPs;
  int numGroups;

  KeyValuePair* pKVPList;
  Group* pGroupList;
};

struct MyTree
{
  int numKVPs;
  int numGroups;

  KeyValuePair* pKVPList;
  Group* pGroupList;
};

So that I can access the MyTree struct via something like:

parser->group(parser).tree;

Currently I see that the above member gives me a pANTLR3_BASE_TREE type
which still requires me to do a recursive traversal to get all of the
values and put them together into the structs I need above.

Any help would be greatly appreciated,

---------------
The grammar
---------------

grammar APA;

options
{
    output=AST;
    language=C;
    //ASTLabelType=MYTree; //pANTLR3_BASE_TREE;
}

/****************************************************************************************************
 PARSER RULES
****************************************************************************************************/

settings
:  group?
;

group
: GROUP IDENT BODY_START assignment* group* assignment* BODY_END
;

assignment
: IDENT ASSIGN STRING
;

/*
**************************************************************************************************
 LEXER RULES
****************************************************************************************************/

GROUP
: 'group'
;

BODY_START
: '{';

BODY_END
: '}';

DEFAULTS
: '[DEFAULTS]'
;

SETTINGS
: '[SETTINGS]'
;

ASSIGN
: '='
;

IDENT
: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
        ;

NUMBERS
: ('0'..'9')*
        ;

COMMENT
: '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
     | '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
     ;

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;

STRING
     :  '\"' ( ~('\\'|'"') )* '\"'
     ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

From parrt at cs.usfca.edu  Fri Apr 27 15:57:10 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 27 Apr 2012 15:57:10 -0700
Subject: [antlr-interest] updated Honey badger, examples
In-Reply-To: <CABJr57DDqOFGeEALefJ__9_gptaZX4W_nimx+044dxCPjp5WjA@mail.gmail.com>
References: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
	<CABJr57DDqOFGeEALefJ__9_gptaZX4W_nimx+044dxCPjp5WjA@mail.gmail.com>
Message-ID: <EB5D83E2-5F06-4F32-AC69-F9487D449F6A@cs.usfca.edu>


On Apr 27, 2012, at 12:54 AM, Oliver Zeigermann wrote:

> Cool stuff. Any suggestions what I should replace
> 
> 1. TokenRewriteStream and

Ooops.  This is TokenStreamRewriter now and is not a stream itself. it takes a stream.

> 2. CommonTokenStream#toString(Token start, Token stop)

getText

> that used to be there in previous versions with?
> 
> Cheers
> 
> Dr. Simplify :)

Dr. Slash and burn!

> 
> 2012/4/27 Terence Parr <parrt at cs.usfca.edu>:
>> Updated Honey badger examples to be consistent with antlr/antlr4 and parrt/antlr4 github repositories. Biggest change is a syntax alteration for alternative labels. -> is now #. Reloaded all of the test files here so they compile and run with the latest and greatest v4:
>> 
>> http://www.antlr.org/wiki/display/ANTLR4/Examples
>> 
>> you can download here:
>> 
>> https://github.com/antlr/antlr4/downloads
>> 
>>  if you're really brave you can download here:
>> 
>> https://github.com/parrt/antlr4/downloads
>> 
>> that's what I update regularly whereas the other I only update once a month or so.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kferrio at gmail.com  Fri Apr 27 18:17:23 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Fri, 27 Apr 2012 18:17:23 -0700
Subject: [antlr-interest] updated Honey badger, examples
In-Reply-To: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
References: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
Message-ID: <CAAfeETobAe9XTEp3HN3KwgMb9UKwjWnggTrYaS1+28GJ+RyE=A@mail.gmail.com>

woot!
On Apr 26, 2012 3:03 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

> Updated Honey badger examples to be consistent with antlr/antlr4 and
> parrt/antlr4 github repositories. Biggest change is a syntax alteration for
> alternative labels. -> is now #. Reloaded all of the test files here so
> they compile and run with the latest and greatest v4:
>
> http://www.antlr.org/wiki/display/ANTLR4/Examples
>
> you can download here:
>
> https://github.com/antlr/antlr4/downloads
>
>  if you're really brave you can download here:
>
> https://github.com/parrt/antlr4/downloads
>
> that's what I update regularly whereas the other I only update once a
> month or so.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From oliver.zeigermann at gmail.com  Fri Apr 27 23:47:07 2012
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 28 Apr 2012 08:47:07 +0200
Subject: [antlr-interest] updated Honey badger, examples
In-Reply-To: <EB5D83E2-5F06-4F32-AC69-F9487D449F6A@cs.usfca.edu>
References: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
	<CABJr57DDqOFGeEALefJ__9_gptaZX4W_nimx+044dxCPjp5WjA@mail.gmail.com>
	<EB5D83E2-5F06-4F32-AC69-F9487D449F6A@cs.usfca.edu>
Message-ID: <CABJr57D8vAkBj5H1JXT_UieTnUx8NnrH77cvL6s4_Gv6sDifog@mail.gmail.com>

Perfect. Thanks for the help!

What have you slashed and burned recently? Mission?
Am 28.04.2012 00:57 schrieb "Terence Parr" <parrt at cs.usfca.edu>:

>
> On Apr 27, 2012, at 12:54 AM, Oliver Zeigermann wrote:
>
> > Cool stuff. Any suggestions what I should replace
> >
> > 1. TokenRewriteStream and
>
> Ooops.  This is TokenStreamRewriter now and is not a stream itself. it
> takes a stream.
>
> > 2. CommonTokenStream#toString(Token start, Token stop)
>
> getText
>
> > that used to be there in previous versions with?
> >
> > Cheers
> >
> > Dr. Simplify :)
>
> Dr. Slash and burn!
>
> >
> > 2012/4/27 Terence Parr <parrt at cs.usfca.edu>:
> >> Updated Honey badger examples to be consistent with antlr/antlr4 and
> parrt/antlr4 github repositories. Biggest change is a syntax alteration for
> alternative labels. -> is now #. Reloaded all of the test files here so
> they compile and run with the latest and greatest v4:
> >>
> >> http://www.antlr.org/wiki/display/ANTLR4/Examples
> >>
> >> you can download here:
> >>
> >> https://github.com/antlr/antlr4/downloads
> >>
> >>  if you're really brave you can download here:
> >>
> >> https://github.com/parrt/antlr4/downloads
> >>
> >> that's what I update regularly whereas the other I only update once a
> month or so.
> >>
> >> Ter
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From parrt at cs.usfca.edu  Sat Apr 28 07:53:24 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 Apr 2012 07:53:24 -0700
Subject: [antlr-interest] updated Honey badger, examples
In-Reply-To: <CABJr57D8vAkBj5H1JXT_UieTnUx8NnrH77cvL6s4_Gv6sDifog@mail.gmail.com>
References: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
	<CABJr57DDqOFGeEALefJ__9_gptaZX4W_nimx+044dxCPjp5WjA@mail.gmail.com>
	<EB5D83E2-5F06-4F32-AC69-F9487D449F6A@cs.usfca.edu>
	<CABJr57D8vAkBj5H1JXT_UieTnUx8NnrH77cvL6s4_Gv6sDifog@mail.gmail.com>
Message-ID: <22F5D631-29DD-4F2C-9C77-741411E396A7@cs.usfca.edu>


On Apr 27, 2012, at 11:47 PM, Oliver Zeigermann wrote:

> Perfect. Thanks for the help!
> 
> What have you slashed and burned recently? Mission?
> 
> 

gUnit for one. perforce usage dropped. jira. server maintenance soon to drop. :)
T


From oliver.zeigermann at gmail.com  Sat Apr 28 11:27:12 2012
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 28 Apr 2012 20:27:12 +0200
Subject: [antlr-interest] updated Honey badger, examples
In-Reply-To: <22F5D631-29DD-4F2C-9C77-741411E396A7@cs.usfca.edu>
References: <87A4F4D9-EDB5-4BDC-BA4B-17DC6DFEE8F4@cs.usfca.edu>
	<CABJr57DDqOFGeEALefJ__9_gptaZX4W_nimx+044dxCPjp5WjA@mail.gmail.com>
	<EB5D83E2-5F06-4F32-AC69-F9487D449F6A@cs.usfca.edu>
	<CABJr57D8vAkBj5H1JXT_UieTnUx8NnrH77cvL6s4_Gv6sDifog@mail.gmail.com>
	<22F5D631-29DD-4F2C-9C77-741411E396A7@cs.usfca.edu>
Message-ID: <CABJr57BhgQt=3+t0r58vV6bwxVp33C2Zb8tcFTEQHBeWjVc27Q@mail.gmail.com>

Cool. Right and honourus!
Am 28.04.2012 16:53 schrieb "Terence Parr" <parrt at cs.usfca.edu>:

>
> On Apr 27, 2012, at 11:47 PM, Oliver Zeigermann wrote:
>
> Perfect. Thanks for the help!
>
> What have you slashed and burned recently? Mission?
>
>
> gUnit for one. perforce usage dropped. jira. server maintenance soon to
> drop. :)
> T
>
>

From costa_basil at yahoo.ca  Mon Apr 30 00:25:43 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 30 Apr 2012 00:25:43 -0700 (PDT)
Subject: [antlr-interest] Remarks about c# target
In-Reply-To: <07a401cd2426$f73f2440$e5bd6cc0$@tunnelvisionlabs.com>
References: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>
	<07a401cd2426$f73f2440$e5bd6cc0$@tunnelvisionlabs.com>
Message-ID: <1335770743.7742.YahooMailNeo@web161403.mail.bf1.yahoo.com>

I was wondering about this attribute as well. I don't care about it and as far as I am concerned I would turn it off. Why is it necessary? Why don't you offer a setting to control the generation of this attribute? 


Thanks



________________________________
 From: Sam Harwell <sam at tunnelvisionlabs.com>
To: forumer at smartmobili.com; antlr-interest at antlr.org 
Sent: Thursday, April 26, 2012 8:36:42 PM
Subject: Re: [antlr-interest] Remarks about c# target
 
Yes, the attribute is necessary. You should add the following attribute to
your project:

[assembly: CLSCompliant(false)]

Since there is no warning for redundancy, this will make it stop printing
that warning/error.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com] 
Sent: Thursday, April 26, 2012 5:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Remarks about c# target

Hi,

I have some remarks about the c# target because I am working on a project
where warnings are treated as errors and the generated class have the
following attribute [System.CLSCompliant(false)] but when I compile I get
the following error :

Error??? 3??? Warning as Error: 'EnadaLexer' does not need a CLSCompliant 
attribute because the assembly does not have a CLSCompliant attribute

Is it really necessary to generate this attribute ?




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From costa_basil at yahoo.ca  Mon Apr 30 00:31:19 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 30 Apr 2012 00:31:19 -0700 (PDT)
Subject: [antlr-interest] parametrized c# parser class
In-Reply-To: <1335199400.20995.YahooMailNeo@web161403.mail.bf1.yahoo.com>
References: <1335164767.59782.YahooMailMobile@web161405.mail.bf1.yahoo.com>
	<04d701cd2141$c61ca7d0$5255f770$@tunnelvisionlabs.com>
	<1335199400.20995.YahooMailNeo@web161403.mail.bf1.yahoo.com>
Message-ID: <1335771079.71558.YahooMailNeo@web161401.mail.bf1.yahoo.com>

I take it there is no way to do what I want, and actually, this would be a Visitor pattern. I ended up skinning the cat differently by using the visitor pattern on the structures produced by the formulas compiler.

Bogdan



________________________________
 From: Costa Basil <costa_basil at yahoo.ca>
To: 'antlr' <antlr-interest at antlr.org> 
Sent: Monday, April 23, 2012 9:43:20 AM
Subject: Re: [antlr-interest] parametrized c# parser class
 
I have a tree grammar which I use to compile formulas (additions, subtractions, relational expressions etc). I want to use the same grammar to translate the formulas in another language. I don't want to maintain two grammars, so I thought I will create an interface that would handle my grammar actions (i.e. the interface would have methods for each action - one for binary operations, one for handling strings etc). If I want to compile formulas I hand the parser one implementation of the interface, if I want to translate formulas I hand the parser another implementation. 


The problem is that when I compile formulas, the non-terminal attribute type that I am using for expressions is a custom type T1, while for the other case is T2. So, I was thinking of parameterizing the parser with a parameter type T. When I want to compile formulas I instantiate the parser with T1, when I want to translate the formulas I instantiate the parser with type T2.


Hence my question, whether I can customize the generation of the parser to specify my own parameter type T, so I can declare attributes of type T.


Thanks,
Costa



________________________________
From: Sam Harwell <sam at tunnelvisionlabs.com>
To: 'Costa Basil' <costa_basil at yahoo.ca>; 'antlr' <antlr-interest at antlr.org> 
Sent: Monday, April 23, 2012 4:11:02 AM
Subject: RE: [antlr-interest] parametrized c# parser class

The CSharp2 and CSharp3 targets always generate generic classes. I've even
managed to get the CSharp3 target to generate a parser that used a value
type (struct in C#) for the token type without any boxing/unboxing involved.

I'll need more details about what you're trying to do to be more specific.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Costa Basil [mailto:costa_basil at yahoo.ca] 
Sent: Monday, April 23, 2012 2:06 AM
To: antlr
Subject: [antlr-interest] parametrized c# parser class

Using the cshap3 target, is it possible to generate a parametrized c# parser
class? Something like:

public class MyParser<T> and so on.

I also want to have some non-terminal attributes of type T.

Thanks

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From sam at tunnelvisionlabs.com  Mon Apr 30 05:28:20 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Mon, 30 Apr 2012 07:28:20 -0500
Subject: [antlr-interest] Remarks about c# target
In-Reply-To: <1335770743.7742.YahooMailNeo@web161403.mail.bf1.yahoo.com>
References: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>	<07a401cd2426$f73f2440$e5bd6cc0$@tunnelvisionlabs.com>
	<1335770743.7742.YahooMailNeo@web161403.mail.bf1.yahoo.com>
Message-ID: <089901cd26cc$bbe39310$33aab930$@tunnelvisionlabs.com>

[assembly: CLSCompliant(false)] has the same effect as not setting the
attribute on the assembly, except that you won't get the warnings about
other uses of the CLSCompliantAttribute. There's no reason to not mark the
assembly with the CLSCompliantAttribute (whether true or false), which means
there's no reason to offer a setting in code generation.

For projects properly using the CLSCompliantAttribute, if the attribute is
omitted in generated code then other compile time warnings will be issued.
The warning you are seeing indicates a proper warning in your project, so
with warnings as errors you'll need to correct the project configuration
before the build will succeed again.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Costa Basil [mailto:costa_basil at yahoo.ca] 
Sent: Monday, April 30, 2012 2:26 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Remarks about c# target

I was wondering about this attribute as well. I don't care about it and as
far as I am concerned I would turn it off. Why is it necessary? Why don't
you offer a setting to control the generation of this attribute? 


Thanks



________________________________
 From: Sam Harwell <sam at tunnelvisionlabs.com>
To: forumer at smartmobili.com; antlr-interest at antlr.org
Sent: Thursday, April 26, 2012 8:36:42 PM
Subject: Re: [antlr-interest] Remarks about c# target
 
Yes, the attribute is necessary. You should add the following attribute to
your project:

[assembly: CLSCompliant(false)]

Since there is no warning for redundancy, this will make it stop printing
that warning/error.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com]
Sent: Thursday, April 26, 2012 5:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Remarks about c# target

Hi,

I have some remarks about the c# target because I am working on a project
where warnings are treated as errors and the generated class have the
following attribute [System.CLSCompliant(false)] but when I compile I get
the following error :

Error??? 3??? Warning as Error: 'EnadaLexer' does not need a CLSCompliant
attribute because the assembly does not have a CLSCompliant attribute

Is it really necessary to generate this attribute ?




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pedrogfrancisco at gmail.com  Mon Apr 30 10:05:33 2012
From: pedrogfrancisco at gmail.com (Pedro Francisco)
Date: Mon, 30 Apr 2012 18:05:33 +0100
Subject: [antlr-interest] ANTLR v3.4 generates compiler errors (that
 v3.3 doesn't generate)
In-Reply-To: <CAN45N131Qsz+X-v2R6LvV9yKw=GGOvTZd+snSj+qN6NQaYyomQ@mail.gmail.com>
References: <CAC3B97F-0350-4D01-93FF-AC6E02709A2B@habelitz.com>
	<CAN45N131Qsz+X-v2R6LvV9yKw=GGOvTZd+snSj+qN6NQaYyomQ@mail.gmail.com>
Message-ID: <CAJZjf_wNf_e10KQROfDF_LmhQMXrE+c41yHCFJditurqFc5MRA@mail.gmail.com>

Sorry for the poke but... any news on this? (getting "void  =null;")...

On Mon, Oct 24, 2011 at 8:24 PM, Eric <researcher0x00 at gmail.com> wrote:
> On Mon, Oct 24, 2011 at 10:41 AM, Dieter Habelitz <
> dieter.habelitz at habelitz.com> wrote:
>
>> Hi folks,
>>
>> When feeding ANTLR 3.4 with my Java grammars it doesn't generate valid
>> Java sources (26 compiler errors) - with v3.3 everything is okay.
>>
>> Here's a snipped of the grammar that raises one of the problems:
>>
>> statement
>> ? : ? block
>> ? | ? assertStatement
>> ? | ? ifStatement
>> ? | ? forStatement
>> ? | ? ?[... and so on ...]
>> ? ;
>>
>> ifStatement
>> ? ? ? ?: IF parenthesizedExpression ifStat=statement
>> ? ? ? ( ? ELSE elseStat=statement -> ^(IF parenthesizedExpression $ifStat
>> $elseStat)
>> ? ? ? | ? ? ? ? ? ? ? ? ? ? ? ? ? -> ^(IF parenthesizedExpression $ifStat)
>> ? ? ? )
>> ? ? ? ?;
>>
>> Amongst other things v3.4 generates the following code for the 'ELSE'
>> branch
>> of the rule 'ifStatement' (have a look at the local 'variable
>> declaration': void ?=null;):
>>
>> ? public final void synpred137_Java_fragment() throws RecognitionException
>> {
>> ? ? ? void ?=null;
>>
>> ? ? ? // [... some comments not relevant here ...]
>> ? ? ? {
>> ? ? ? match(input,ELSE,FOLLOW_ELSE_in_synpred137_Java9244); if
>> (state.failed) return ;
>>
>> ? ? ? pushFollow(FOLLOW_statement_in_synpred137_Java9248);
>> ? ? ? elseStat=statement();
>>
>> ? ? ? state._fsp--;
>> ? ? ? if (state.failed) return ;
>>
>> ? ? ? }
>>
>> ? }
>>
>> However, v3.3 generates the following code from the same grammar:
>>
>> ? public final void synpred137_Java_fragment() throws RecognitionException
>> {
>> ? ? ? JavaParser.statement_return elseStat = null;
>>
>>
>> ? ? ? // [... some comments not relevant here ...]
>> ? ? ? {
>> ? ? ? match(input,ELSE,FOLLOW_ELSE_in_synpred137_Java9244); if
>> (state.failed) return ;
>> ? ? ? pushFollow(FOLLOW_statement_in_synpred137_Java9248);
>> ? ? ? elseStat=statement();
>>
>> ? ? ? state._fsp--;
>> ? ? ? if (state.failed) return ;
>>
>> ? ? ? }
>> ? }
>>
>> The complete grammars can be found at ...
>>
>> http://www.habelitz.com/index.php?option=com_content&task=view&id=12&Itemid=8
>>
>> Any hints? Switch back to org.antlr.Tool 3.3
>
>
>
>
>> A bug within v3.4? Yes
>>
>
> Ter is aware of it but is holding off on fixing the bugs for org.antlr.Tool
> 3.4.
>
>
>>

From parrt at cs.usfca.edu  Mon Apr 30 11:04:19 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Apr 2012 11:04:19 -0700
Subject: [antlr-interest] ANTLR v3.4 generates compiler errors (that
	v3.3 doesn't generate)
In-Reply-To: <CAJZjf_wNf_e10KQROfDF_LmhQMXrE+c41yHCFJditurqFc5MRA@mail.gmail.com>
References: <CAC3B97F-0350-4D01-93FF-AC6E02709A2B@habelitz.com>
	<CAN45N131Qsz+X-v2R6LvV9yKw=GGOvTZd+snSj+qN6NQaYyomQ@mail.gmail.com>
	<CAJZjf_wNf_e10KQROfDF_LmhQMXrE+c41yHCFJditurqFc5MRA@mail.gmail.com>
Message-ID: <ACB17861-1550-464E-8843-CFBF11B45B5A@cs.usfca.edu>

grab antlr/antlr3 from github which has the fix.
Ter
On Apr 30, 2012, at 10:05 AM, Pedro Francisco wrote:

> Sorry for the poke but... any news on this? (getting "void  =null;")...
> 
> On Mon, Oct 24, 2011 at 8:24 PM, Eric <researcher0x00 at gmail.com> wrote:
>> On Mon, Oct 24, 2011 at 10:41 AM, Dieter Habelitz <
>> dieter.habelitz at habelitz.com> wrote:
>> 
>>> Hi folks,
>>> 
>>> When feeding ANTLR 3.4 with my Java grammars it doesn't generate valid
>>> Java sources (26 compiler errors) - with v3.3 everything is okay.
>>> 
>>> Here's a snipped of the grammar that raises one of the problems:
>>> 
>>> statement
>>>   :   block
>>>   |   assertStatement
>>>   |   ifStatement
>>>   |   forStatement
>>>   |    [... and so on ...]
>>>   ;
>>> 
>>> ifStatement
>>>        : IF parenthesizedExpression ifStat=statement
>>>       (   ELSE elseStat=statement -> ^(IF parenthesizedExpression $ifStat
>>> $elseStat)
>>>       |                           -> ^(IF parenthesizedExpression $ifStat)
>>>       )
>>>        ;
>>> 
>>> Amongst other things v3.4 generates the following code for the 'ELSE'
>>> branch
>>> of the rule 'ifStatement' (have a look at the local 'variable
>>> declaration': void  =null;):
>>> 
>>>   public final void synpred137_Java_fragment() throws RecognitionException
>>> {
>>>       void  =null;
>>> 
>>>       // [... some comments not relevant here ...]
>>>       {
>>>       match(input,ELSE,FOLLOW_ELSE_in_synpred137_Java9244); if
>>> (state.failed) return ;
>>> 
>>>       pushFollow(FOLLOW_statement_in_synpred137_Java9248);
>>>       elseStat=statement();
>>> 
>>>       state._fsp--;
>>>       if (state.failed) return ;
>>> 
>>>       }
>>> 
>>>   }
>>> 
>>> However, v3.3 generates the following code from the same grammar:
>>> 
>>>   public final void synpred137_Java_fragment() throws RecognitionException
>>> {
>>>       JavaParser.statement_return elseStat = null;
>>> 
>>> 
>>>       // [... some comments not relevant here ...]
>>>       {
>>>       match(input,ELSE,FOLLOW_ELSE_in_synpred137_Java9244); if
>>> (state.failed) return ;
>>>       pushFollow(FOLLOW_statement_in_synpred137_Java9248);
>>>       elseStat=statement();
>>> 
>>>       state._fsp--;
>>>       if (state.failed) return ;
>>> 
>>>       }
>>>   }
>>> 
>>> The complete grammars can be found at ...
>>> 
>>> http://www.habelitz.com/index.php?option=com_content&task=view&id=12&Itemid=8
>>> 
>>> Any hints? Switch back to org.antlr.Tool 3.3
>> 
>> 
>> 
>> 
>>> A bug within v3.4? Yes
>>> 
>> 
>> Ter is aware of it but is holding off on fixing the bugs for org.antlr.Tool
>> 3.4.
>> 
>> 
>>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From costa_basil at yahoo.ca  Mon Apr 30 11:28:58 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 30 Apr 2012 11:28:58 -0700 (PDT)
Subject: [antlr-interest] Remarks about c# target
In-Reply-To: <089901cd26cc$bbe39310$33aab930$@tunnelvisionlabs.com>
References: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>
	<07a401cd2426$f73f2440$e5bd6cc0$@tunnelvisionlabs.com>
	<1335770743.7742.YahooMailNeo@web161403.mail.bf1.yahoo.com>
	<089901cd26cc$bbe39310$33aab930$@tunnelvisionlabs.com>
Message-ID: <1335810538.61828.YahooMailNeo@web161406.mail.bf1.yahoo.com>

Actually, it's not the same. Following your suggestion I tried to set the [assembly: CLSCompliant(false)] attribute at the assembly level and now I am getting some weird error that doesn't make sense (the compiler complains that some assembly is not referenced). If I remove the attribute the project compiles fine.

?


________________________________
 From: Sam Harwell <sam at tunnelvisionlabs.com>
To: 'Costa Basil' <costa_basil at yahoo.ca>; antlr-interest at antlr.org 
Sent: Monday, April 30, 2012 5:28:20 AM
Subject: RE: [antlr-interest] Remarks about c# target
 
[assembly: CLSCompliant(false)] has the same effect as not setting the
attribute on the assembly, except that you won't get the warnings about
other uses of the CLSCompliantAttribute. There's no reason to not mark the
assembly with the CLSCompliantAttribute (whether true or false), which means
there's no reason to offer a setting in code generation.

For projects properly using the CLSCompliantAttribute, if the attribute is
omitted in generated code then other compile time warnings will be issued.
The warning you are seeing indicates a proper warning in your project, so
with warnings as errors you'll need to correct the project configuration
before the build will succeed again.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Costa Basil [mailto:costa_basil at yahoo.ca] 
Sent: Monday, April 30, 2012 2:26 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Remarks about c# target

I was wondering about this attribute as well. I don't care about it and as
far as I am concerned I would turn it off. Why is it necessary? Why don't
you offer a setting to control the generation of this attribute? 


Thanks



________________________________
From: Sam Harwell <sam at tunnelvisionlabs.com>
To: forumer at smartmobili.com; antlr-interest at antlr.org
Sent: Thursday, April 26, 2012 8:36:42 PM
Subject: Re: [antlr-interest] Remarks about c# target

Yes, the attribute is necessary. You should add the following attribute to
your project:

[assembly: CLSCompliant(false)]

Since there is no warning for redundancy, this will make it stop printing
that warning/error.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com]
Sent: Thursday, April 26, 2012 5:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Remarks about c# target

Hi,

I have some remarks about the c# target because I am working on a project
where warnings are treated as errors and the generated class have the
following attribute [System.CLSCompliant(false)] but when I compile I get
the following error :

Error??? 3??? Warning as Error: 'EnadaLexer' does not need a CLSCompliant
attribute because the assembly does not have a CLSCompliant attribute

Is it really necessary to generate this attribute ?




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From costa_basil at yahoo.ca  Mon Apr 30 11:32:43 2012
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 30 Apr 2012 11:32:43 -0700 (PDT)
Subject: [antlr-interest] Remarks about c# target
In-Reply-To: <089901cd26cc$bbe39310$33aab930$@tunnelvisionlabs.com>
References: <6c1ff389f0c7ae2a2c87f06992e109af@smartmobili.com>
	<07a401cd2426$f73f2440$e5bd6cc0$@tunnelvisionlabs.com>
	<1335770743.7742.YahooMailNeo@web161403.mail.bf1.yahoo.com>
	<089901cd26cc$bbe39310$33aab930$@tunnelvisionlabs.com>
Message-ID: <1335810763.59084.YahooMailNeo@web161406.mail.bf1.yahoo.com>

I found the issue: http://stackoverflow.com/questions/1254078/clscomplianttrue-drags-in-unused-references

So, I stand my case, it is better to have an option turn the generation of this flag off.



________________________________
 From: Sam Harwell <sam at tunnelvisionlabs.com>
To: 'Costa Basil' <costa_basil at yahoo.ca>; antlr-interest at antlr.org 
Sent: Monday, April 30, 2012 5:28:20 AM
Subject: RE: [antlr-interest] Remarks about c# target
 
[assembly: CLSCompliant(false)] has the same effect as not setting the
attribute on the assembly, except that you won't get the warnings about
other uses of the CLSCompliantAttribute. There's no reason to not mark the
assembly with the CLSCompliantAttribute (whether true or false), which means
there's no reason to offer a setting in code generation.

For projects properly using the CLSCompliantAttribute, if the attribute is
omitted in generated code then other compile time warnings will be issued.
The warning you are seeing indicates a proper warning in your project, so
with warnings as errors you'll need to correct the project configuration
before the build will succeed again.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Costa Basil [mailto:costa_basil at yahoo.ca] 
Sent: Monday, April 30, 2012 2:26 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Remarks about c# target

I was wondering about this attribute as well. I don't care about it and as
far as I am concerned I would turn it off. Why is it necessary? Why don't
you offer a setting to control the generation of this attribute? 


Thanks



________________________________
From: Sam Harwell <sam at tunnelvisionlabs.com>
To: forumer at smartmobili.com; antlr-interest at antlr.org
Sent: Thursday, April 26, 2012 8:36:42 PM
Subject: Re: [antlr-interest] Remarks about c# target

Yes, the attribute is necessary. You should add the following attribute to
your project:

[assembly: CLSCompliant(false)]

Since there is no warning for redundancy, this will make it stop printing
that warning/error.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: forumer at smartmobili.com [mailto:forumer at smartmobili.com]
Sent: Thursday, April 26, 2012 5:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Remarks about c# target

Hi,

I have some remarks about the c# target because I am working on a project
where warnings are treated as errors and the generated class have the
following attribute [System.CLSCompliant(false)] but when I compile I get
the following error :

Error??? 3??? Warning as Error: 'EnadaLexer' does not need a CLSCompliant
attribute because the assembly does not have a CLSCompliant attribute

Is it really necessary to generate this attribute ?




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From David.Meibusch at csgi.com  Mon Apr 30 19:38:56 2012
From: David.Meibusch at csgi.com (David Meibusch)
Date: Tue, 1 May 2012 12:38:56 +1000
Subject: [antlr-interest] gUnit for v4?
Message-ID: <A7BB7EF4D43DCC49B9E8201A2743F71E0AE68B02@ibbriex01.intecbilling.com>

Ter,

I can layout out our use case, just to see if it confirms your
assumptions.

 

We have an ANTLR v3 combined grammar for an existing proprietary
language. The language is implemented elsewhere in the company, bespoke
in C/C++, and never previously had/has a grammar.

This grammar is used to generate Java ASTs for our Eclipse-based IDE
editor plugins. The grammar heavily uses actions and has all manner of
weird and wonderful predicates to workaround some of the peculiarities
of the  language. The language parser/interpreter is still
developed/maintained in C/C++ by another team - our team just follow
their lead with our own parser.

 

We have several thousand gunit tests that form our regression suite.

 

I forked my own gunit sometime ago, creating a new gunit-maven-plugin
(note following the Maven 3 naming convention for non-Apache plugins).
This Maven plugin uses the Maven surefire framework to launch and run
the tests, so you get  junit result XML files. This integrates with our
Jenkins continuous integration server.

 

The gunit grammar has also evolved, with some cleaned up syntax and
added features.

 

Expectations have:

OK/FAIL, same as before

RETURN[<name>] allows you to test a rule return by name

OUTPUT (or ->) allows you to test the parse tree created with no parse
errors expected

ERROR allows you to test the parse tree with error nodes expected

 

Note that error reporting and recovery is particularly important - in
fact close to the entire rationale for this parser's existence.

 

Pretty much all aspects of the parser's operation can then be tested
with simple single (mostly) line tests in gunit files.

 

In running the tests, they are expected to catch:

1)      Changes in ANTLR itself after version upgrades (each v3 minor
version of ANTLR has changed at least something, mostly for good...but
not always)

2)      Regressions in  output or error handling when adding/changing
the grammar to reflect external changes to the language 

3)      Similarly, regressions as we (often) try to improve the error
handling and recovery logic.

 

Since the move to github, I really have no excuse now not to contribute
this plugin back to the project...if anyone is interested.

 

Regards,

Dave Meibusch
 
All emails in this message string and any attachments are the confidential information of CSG Systems International, Inc. (CSG), or its affiliates and subsidiaries, and may contain privileged and/or confidential material. If you are not an intended recipient, please delete it immediately and notify the sender; unintended recipients are not authorized to read or otherwise use the information contained herein.

