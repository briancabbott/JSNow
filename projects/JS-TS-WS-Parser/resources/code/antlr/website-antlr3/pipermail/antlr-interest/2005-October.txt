From mail at martin-probst.com  Sat Oct  1 03:21:54 2005
From: mail at martin-probst.com (Martin Probst)
Date: Sat Oct  1 03:22:09 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <20050930172649.58246.qmail@web52915.mail.yahoo.com>
References: <20050930172649.58246.qmail@web52915.mail.yahoo.com>
Message-ID: <1128162114.8845.2.camel@localhost.localdomain>

Hi,

> I also keep scratching my head thinking, "What's the
> point of compilers implemented in Java?".  It's neat
> but pretty much in the same way that the ASCII client
> for Doom was neat. I guess they must be using it for
> business rules engines where the data processing
> workloads are light.. That's the only thing I can
> think  of..

Well, what's the problem about Parsers/Compilers in Java? Actually the
Java version of ANTLR v2 is significantly faster than the C++ part. 
The only problem you might run into is the JVM startup overhead, if you
compile file by file on the command line.

Not wanting to start a language war it might be necessary to point out
that Java is in no way necessarily slower than C++.

Martin

From mail at martin-probst.com  Sat Oct  1 03:23:48 2005
From: mail at martin-probst.com (Martin Probst)
Date: Sat Oct  1 03:23:56 2005
Subject: [antlr-interest] Spam and Pipermail archives
In-Reply-To: <4338FACA.7070008@cyconix.com>
References: <4338FACA.7070008@cyconix.com>
Message-ID: <1128162228.8845.4.camel@localhost.localdomain>

Hi,

I think by now we just have to accept spam somehow. Personally I don't
put much effort into keeping my mail adress private anymore - if you've
got a working spam filter system it's hardly a problem.

Martin

Am Dienstag, den 27.09.2005, 08:54 +0100 schrieb Paul Johnson:
> I've just started getting spam to this address. According to Google, 
> this address only appears in the Antlr Pipermail archives, with the '@' 
> replaced by " at ".
> 
> This is a free address, so it's not a problem for me, but others will be 
> using more important addresses. Is there a simple way to scrub future 
> archived posts? Or do we have to live with it?
> 
> Thanks
> 
> Paul
> 
> 

From sohail at taggedtype.net  Sat Oct  1 09:39:18 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat Oct  1 09:38:45 2005
Subject: [antlr-interest] Comments/newlines
In-Reply-To: <1689405756.20050930141216@semagia.com>
References: <1127884753.11037.3.camel@localhost.localdomain>
	<1689405756.20050930141216@semagia.com>
Message-ID: <1128184758.8676.0.camel@localhost.localdomain>

On Fri, 2005-30-09 at 14:12 +0200, Lars Heuer wrote:
> Hi Sohail,
> 
> > How would you define a lexer to tokenize the following so that the
> > grammar rules use EOL?
> 
> > x = y // some comment
> > // some comment
> > x = y
> 
> Maybe this works:
> 
>       COMMENT : "//" (~('\r'|'\n'))+ {$setType(Token.SKIP);}
>       ;
> 
>       EOL : ('\r')? '\n' {newline();}
>       ;
> 

Yes this works. I don't know what I was thinking when I wrote my rule
for the comments. 

Thanks!

From virtualaspirin at yahoo.com  Sat Oct  1 11:43:19 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Sat Oct  1 11:43:22 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <1128162114.8845.2.camel@localhost.localdomain>
Message-ID: <20051001184319.42021.qmail@web30802.mail.mud.yahoo.com>


Oh, bloodless wars are fun :)

Point in case, in our case Java parser was 2x faster
than C++ parser... both using automatic memory
management (C++ using ref counts).

Oh, and it used 33% less memory too as extra topping.

(Right now I'm playing with a 3.75M node AST generated
with this baby).

- Akhilesh

--- Martin Probst <mail@martin-probst.com> wrote:
> > I also keep scratching my head thinking, "What's
> the
> > point of compilers implemented in Java?".  It's
> 
> Well, what's the problem about Parsers/Compilers in
> Java? Actually the
> Java version of ANTLR v2 is significantly faster
> than the C++ part. 
> The only problem you might run into is the JVM
> startup overhead, if you
> compile file by file on the command line.



		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From sohail at taggedtype.net  Sat Oct  1 22:52:34 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat Oct  1 22:51:58 2005
Subject: [antlr-interest] Lexical nondeterminism
Message-ID: <1128232354.10005.2.camel@localhost.localdomain>

Given this simple lexer:

class L extends Lexer;
options
{
        testLiterals = true;
        k=2;
        caseSensitive=true;
        caseSensitiveLiterals=true;
}

SOME_KEYWORD
        : "if"
        ;

protected
LETTER
        : 'a'..'z' | 'A'..'Z'
        ;

protected
DIGIT
        : '0'..'9'
        ;

IDENTIFIER
        : LETTER (LETTER | DIGIT)*
        ;

antlr 2.7.6 tells me:

test.g: warning:lexical nondeterminism between rules SOME_KEYWORD and
IDENTIFIER upon
test.g:     k==1:'i'
test.g:     k==2:'f'

Why is this? I thought testLiterals is supposed to get antlr to compare
matched tokens to my literals?

Thanks

Sohail

From sohail at taggedtype.net  Sat Oct  1 23:00:48 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat Oct  1 23:00:10 2005
Subject: [antlr-interest] Lexical nondeterminism
In-Reply-To: <1128232354.10005.2.camel@localhost.localdomain>
References: <1128232354.10005.2.camel@localhost.localdomain>
Message-ID: <1128232849.10005.4.camel@localhost.localdomain>

On Sat, 2005-01-10 at 22:52 -0700, Sohail Somani wrote:
> Why is this? I thought testLiterals is supposed to get antlr to compare
> matched tokens to my literals?

Doh, the reason is that the literals that matter are the literals in the
**parser** not the lexer.

That took some serious reading :)

From tharwood at TheWorld.com  Sun Oct  2 07:01:45 2005
From: tharwood at TheWorld.com (Tom Harwood)
Date: Sun Oct  2 07:02:33 2005
Subject: [antlr-interest] Re: C++ based code gen lab (was:C++ beginner
	questions)
References: <20050930190003.F2798DCD33@www.antlr.org>
Message-ID: <005f01c5c759$d4659110$800101df@Tango>

Nick Brereton did a nice C++ port of Ter's code-gen lab; the lab's source 
language is very simple, but for examples of getting the plumbing hooked up, 
it should be a useful starting point.  The code emitter is generated by 
JBurg, a tree walker that finds minimum-cost codegen solutions.

The original lab is still online at: 
http://www.cs.usfca.edu/~parrt/course/652/labs/jburg.html

The C++ port (which I do maintain) is at: 
http://cvs.sourceforge.net/viewcvs.py/jburg/jburg/test/examples/cpp/parrlab4/

And the general JBurg site, with some additional documentation, is at: 
http://jburg.sourceforge.net/

Hope this helps, and best regards,

- Tom Harwood


From iank at bearcave.com  Sun Oct  2 15:03:12 2005
From: iank at bearcave.com (Ian Kaplan)
Date: Sun Oct  2 15:03:28 2005
Subject: [antlr-interest] C++ beginner questions
Message-ID: <200510022203.j92M3Cp18354@shell2.webquarry.com>


> Oh, bloodless wars are fun :)
> 
> Point in case, in our case Java parser was 2x faster
> than C++ parser...  

  My experience with Java scanners and other language like processing
  tools (my Java disassembler, for examle) is that Java is slower than
  C++.  Another data point: I have a query language processor that is
  implemented in Java that does tree-to-tree transformation to
  optimize queries.  Here again, Java is surprisingly slow.  I would,
  in fact, be nervous about implementing a compiler in Java because of
  performance issues.

  As I've written here before: it is a simple fact: Java has
  interpretive overhead.  For what ever reason Java string processing
  also seems slow.  So this clam that Java beats native code must
  first address why the overhead of the interpreter is not an issue.
  And don't feed me that line about the JIT compiler.  JIT is fine for
  long running servers.  But a JIT compiler is not likely to do a run
  once application like a compiler much good.

  All this said, I use Java more these days than C++.  There are many
  applications which access databases or networks, where this overhead
  is far and away the bottleneck.  Here the amazing class libraries
  available with Java make it a huge win.

  Ian
From mail at martin-probst.com  Mon Oct  3 00:23:13 2005
From: mail at martin-probst.com (Martin Probst)
Date: Mon Oct  3 00:23:27 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <200510022203.j92M3Cp18354@shell2.webquarry.com>
References: <200510022203.j92M3Cp18354@shell2.webquarry.com>
Message-ID: <1128324193.10109.5.camel@localhost.localdomain>

>   And don't feed me that line about the JIT compiler.  JIT is fine for
>   long running servers.  But a JIT compiler is not likely to do a run
>   once application like a compiler much good.

Well, that's the point. Command line applications in Java suck, admitted
- for one because of the JVM startup and on the other hand because of
the JIT, though you can of course run your JVM with -server to get even
longer startup times ...

But if you run it with -server or after the JIT kicks in I have not
experienced much of a difference, and in some cases the Java code
actually runs faster.

Martin

From dzubi at users.sourceforge.net  Mon Oct  3 04:24:53 2005
From: dzubi at users.sourceforge.net (Daniel Zuberbuehler)
Date: Mon Oct  3 04:24:49 2005
Subject: [antlr-interest] How to read line/col from testLiteralsTable() ?
In-Reply-To: <200509302321.10274.dzubi@users.sourceforge.net>
References: <200509302321.10274.dzubi@users.sourceforge.net>
Message-ID: <200510031324.53540.dzubi@users.sourceforge.net>

Hi 

too bad I've got no feedback for my problem. However I've found a solution, I 
just call super.makeToken() myself and query the instantiated token for it's 
line/column values. I belief this should have no sideeffects, but it seems 
not very elegant to me to instantiate a token just to access the line/col 
values. So if anyone knows a direct way to access these values, I'd 
appreciate to hear from you.

Cheers, Daniel


On Friday 30 September 2005 23:21, Daniel Zuberbuehler wrote:
> Hi
>
> I want to call a method every time the lexer matches a token in the literal
> table. So I override the testLiteralsTable() method. I first call
> super.testLiteralsTable() and check, if it was a match. If so, I call my
> method.
> But for that method call, I need the line and col value of the keyword.
> Unfourtunately I see in the source of the generated lexer that makeToken()
> is called after testLiteralsTable(), so I can't query the token for those
> values. I also can't read the tokenStartColumn/tokenStartLine fields of the
> inputstate, as those are protected, and the CharScanner offers no methods
> to access those fields.
> Is there any way to get those values? Or do you see a better approach?
>
> Thanks and cheers,
> Daniel Zuberb?hler
From demakov at ispras.ru  Mon Oct  3 04:40:07 2005
From: demakov at ispras.ru (Alexey Demakov)
Date: Mon Oct  3 04:40:12 2005
Subject: [antlr-interest] How to read line/col from testLiteralsTable() ?
References: <200509302321.10274.dzubi@users.sourceforge.net>
	<200510031324.53540.dzubi@users.sourceforge.net>
Message-ID: <03af01c5c80f$33f97be0$8cc79553@marlboro>

Hi Daniel,

You can try other solutions:
1. Lexer takes line/column from input state. Unfortunately,
LexerSharedInputState doesn't have observers for these fields.
But you can make your own subclass of LexerSharedInputState
and pass it to Lexer in constructor.
2. If you know tokens where literals are tested,
you can set testLiterals = false and make token action
where inputState field are accessed:

ID :
  ( LETTER | UNDERSCORE )
  ( LETTER | UNDERSCORE | DIGIT )*
  {

    int line = inputState.line;
    int column = inputState.column;
    _ttype = testLiteralsTable( _ttype );
  }
;

Hope it will work :)

Regards,
Alexey

-----
Alexey Demakov
TreeDL: Tree Description Language: http://treedl.sourceforge.net
RedVerst Group: http://www.unitesk.com



----- Original Message ----- 
From: "Daniel Zuberbuehler" <dzubi@users.sourceforge.net>
To: <antlr-interest@antlr.org>
Sent: Monday, October 03, 2005 3:24 PM
Subject: Re: [antlr-interest] How to read line/col from testLiteralsTable() ?


> Hi
>
> too bad I've got no feedback for my problem. However I've found a solution, I
> just call super.makeToken() myself and query the instantiated token for it's
> line/column values. I belief this should have no sideeffects, but it seems
> not very elegant to me to instantiate a token just to access the line/col
> values. So if anyone knows a direct way to access these values, I'd
> appreciate to hear from you.
>
> Cheers, Daniel
>
>
> On Friday 30 September 2005 23:21, Daniel Zuberbuehler wrote:
> > Hi
> >
> > I want to call a method every time the lexer matches a token in the literal
> > table. So I override the testLiteralsTable() method. I first call
> > super.testLiteralsTable() and check, if it was a match. If so, I call my
> > method.
> > But for that method call, I need the line and col value of the keyword.
> > Unfourtunately I see in the source of the generated lexer that makeToken()
> > is called after testLiteralsTable(), so I can't query the token for those
> > values. I also can't read the tokenStartColumn/tokenStartLine fields of the
> > inputstate, as those are protected, and the CharScanner offers no methods
> > to access those fields.
> > Is there any way to get those values? Or do you see a better approach?
> >
> > Thanks and cheers,
> > Daniel Zuberb?hler
>
>


From madcapmaggie at yahoo.com  Mon Oct  3 06:50:39 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Mon Oct  3 06:50:43 2005
Subject: [antlr-interest] How to read line/col from testLiteralsTable() ?
In-Reply-To: <200510031324.53540.dzubi@users.sourceforge.net>
Message-ID: <20051003135039.35376.qmail@web30202.mail.mud.yahoo.com>

Since ANTLR is open source, I'd just add the methods I
needed.

--- Daniel Zuberbuehler <dzubi@users.sourceforge.net>
wrote:

> Hi 
> 
> too bad I've got no feedback for my problem. However
> I've found a solution, I 
> just call super.makeToken() myself and query the
> instantiated token for it's 
> line/column values. I belief this should have no
> sideeffects, but it seems 
> not very elegant to me to instantiate a token just
> to access the line/col 
> values. So if anyone knows a direct way to access
> these values, I'd 
> appreciate to hear from you.
> 
> Cheers, Daniel
> 
> 
> On Friday 30 September 2005 23:21, Daniel
> Zuberbuehler wrote:
> > Hi
> >
> > I want to call a method every time the lexer
> matches a token in the literal
> > table. So I override the testLiteralsTable()
> method. I first call
> > super.testLiteralsTable() and check, if it was a
> match. If so, I call my
> > method.
> > But for that method call, I need the line and col
> value of the keyword.
> > Unfourtunately I see in the source of the
> generated lexer that makeToken()
> > is called after testLiteralsTable(), so I can't
> query the token for those
> > values. I also can't read the
> tokenStartColumn/tokenStartLine fields of the
> > inputstate, as those are protected, and the
> CharScanner offers no methods
> > to access those fields.
> > Is there any way to get those values? Or do you
> see a better approach?
> >
> > Thanks and cheers,
> > Daniel Zuberb?hler
> 

From virtualaspirin at yahoo.com  Mon Oct  3 08:32:28 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Mon Oct  3 08:32:31 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <200510022203.j92M3Cp18354@shell2.webquarry.com>
Message-ID: <20051003153228.35113.qmail@web30809.mail.mud.yahoo.com>

Hi Ian

--- Ian Kaplan <iank@bearcave.com> wrote:
>   My experience with Java scanners and other
> language like processing
>   tools (my Java disassembler, for examle) is that
> Java is slower than
>   C++.  Another data point: I have a query language

Umm, basic question... do any of examples you quotes
here help you pay bills ? If yes, I think you can
easily calculate ratio of cost of one CPU hour to cost
of one HUMAN hour. 

Then take a complex project that takes, say, approx 3
man years of effort in Java Vs 4 man years for C++
(which includes debugging memory problems).

If I need to complete it in an year, I need to find 1
extra 'perfectly fitting' guy or 2 'fitting' guys, if
I use C++. Finding them is neither cheap nor easy!
OTOH, I can ring up my local shop in morning and have
them deliver 5 fast computers by lunch-time for the
cost of two *month* salary of one 'fitting' guy.

So unless C++ is so "ridiculously" fast that the cost
savings in machines outweights human time saving. 

Yes, I calculated it in hard figures.
No, even at 50X (thats times, not percent) speedup I
don't break even.
Yes, this is true even in India (Namaste! :-) )
No, We're not a body shop
Yes, I know C++ *very* well
No, I'm not a zealot by any stretch of imagination

Yes, I believe in principle that humans shouldn't be
*made* to do the work that machines can do.

-- Akhilesh



> processor that is
>   implemented in Java that does tree-to-tree
> transformation to
>   optimize queries.  Here again, Java is
> surprisingly slow.  I would,
>   in fact, be nervous about implementing a compiler
> in Java because of
>   performance issues.
> 
>   As I've written here before: it is a simple fact:
> Java has
>   interpretive overhead.  For what ever reason Java
> string processing
>   also seems slow.  So this clam that Java beats
> native code must
>   first address why the overhead of the interpreter
> is not an issue.
>   And don't feed me that line about the JIT
> compiler.  JIT is fine for
>   long running servers.  But a JIT compiler is not
> likely to do a run
>   once application like a compiler much good.
> 
>   All this said, I use Java more these days than
> C++.  There are many
>   applications which access databases or networks,
> where this overhead
>   is far and away the bottleneck.  Here the amazing
> class libraries
>   available with Java make it a huge win.
> 
>   Ian
> 



		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From virtualaspirin at yahoo.com  Mon Oct  3 09:13:04 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Mon Oct  3 09:13:08 2005
Subject: [antlr-interest] BaseAST *sob* *sob*  (Hi Terence)
Message-ID: <20051003161305.72913.qmail@web30805.mail.mud.yahoo.com>

Hi Terence

Please please tell me you didn't code BaseAST class.


Ok, now my grudge against that class. After perfectly
fine declarations in AST interface of tree walking
methods, this class goes and implements what seems to
be common 'algorithms'. But instead of using available
interface, it defines fields ('down' and 'right') and
uses them liberally throughout the code.

And, now, here I am. I tried making a node class that
dissociates the logic of keeping track of
child/sibling /nodes (in short, I implemented a
mechanism for demand paging the tree or fragments
thereof), which, (no prizes for guessing), failed
miserably because in this implementation BaseAST.right
and BaseAST.down are always null (the magic of
figuring out and fetching child/sibling is elsewhere).

Now I am crying in pain after debugging for two days
why the parse tree after my magic is missing about 10%
of nodes. Tell me what I should do to make it right.
Please don't tell me to fork the ANTLR code base.

The only option I have right now is to drag myself to
the bar next door, get drunk and forget for the
meanwhile that this issue exists :=(

*sob* *sob*

- Akhilesh



	
		
______________________________________________________ 
Yahoo! for Good 
Donate to the Hurricane Katrina relief effort. 
http://store.yahoo.com/redcross-donate3/ 

From iank at bearcave.com  Mon Oct  3 10:08:51 2005
From: iank at bearcave.com (Ian Kaplan)
Date: Mon Oct  3 10:09:01 2005
Subject: [antlr-interest] C++ beginner questions
Message-ID: <200510031708.j93H8p309646@shell2.webquarry.com>


> Umm, basic question... do any of examples you quotes here help you
> pay bills ? If yes, I think you can easily calculate ratio of cost
> of one CPU hour to cost of one HUMAN hour.

  Yes, there are actual released products.

  If the customer's perception of a compiler is that it is slow, they
  may not buy it.  So the speed of a "run once" application is
  important because it also ties into perception.

  Your argument seems also revolve around "I can find a bunch of Java
  programmers, but C++ programmers are harder to find".  I'm
  specifically talking about compilers or other complex language
  processors.  For example, although parsing a query language is
  relatively straight forward, optimizing it can be non-trivial.
  The sort of people that can do this are not easy to find either.  So
  I'm not going to be calling up my local "body-shop".

  I have found that because of the huge Java class libraries
  available, some Java programmers I've worked with do not understand
  algorithms and data structures as well as they should.  For example,
  I've seen some gross misuse of the Java HashMap.  So the idea of
  hiring someone who knows Java from some trade school when I want
  complex software built is not terribly attractive.

  I've been purposely staying away from the offshoring issue that the
  previous post invited reference to, since I don't think that this is
  the place for such a discussion.  For my views on this topic, see
  http://www.bearcave.com/misl/misl_other/economics.html.  We can
  correspond via email.

  If you're developing a software product there will be, you hope, a
  few developers and many users.  So the extra effort that goes into
  development to produce a better product is something that is
  amortized over your user base.  Generally it pays to go the "extra
  mile".

  The real issue here is using the right tool for the job.  Java,
  Python, C++, they all have places where they are particularly
  powerful.  Because of the interpretive overhead of Java (and as
  others have pointed out, the JVM startup cost) you need to think
  carefully when choosing to use Java in some performance intensive
  applications.  On the other hand, if you're writing software that
  "talks" to a database, Java is a great choice because of the
  excellent JDBC class library and here the database will be the
  bottleneck.

  Ian


From hdeshmane at montalvosystems.com  Mon Oct  3 10:33:48 2005
From: hdeshmane at montalvosystems.com (Harsh Deshmane)
Date: Mon Oct  3 10:35:23 2005
Subject: [antlr-interest] AST and test data size problem
Message-ID: <200510031033.49270.hdeshmane@montalvosystems.com>

Hi,

I am using 2.7.5 for C++ code.
I have a lexer/parser built. When compiled,
I tested with increasing sizes of datafile - ~100, ~1000, ~135K, upto
1.1 M lines of text. Didnt try beyond that.

Subsequently, I defined a treeparser, and
changed the grammar to use tree-grammar.
I invoked it the same way as described in transform example.
This time, it works and displays the tree upto 
~100lines, ~1000 lines testcases, upto 50K lines but core dumps on ~124K 
testcase(
I increased the size gradually from 50K to 123K, it exited normally.
At ~124K(precisely 123876, 123875 exits normally)., it coredumped. I havent 
introduced any of my own classes to the
trees or other antlr produced code.

Any suggestions welcomed..

thanks,
-harsh


This is the gdb message:


Program received signal SIGSEGV, Segmentation fault.
0x00000000004168b4 in antlr::ASTRef::~ASTRef ()
(gdb) bt 5
#0  0x00000000004168b4 in antlr::ASTRef::~ASTRef ()
#1  0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#2  0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#3  0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#4  0x00000000004168b7 in antlr::ASTRef::~ASTRef ()

Running bt -10 gives:

(gdb) bt -10
#326959 0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#326960 0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#326961 0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#326962 0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#326963 0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#326964 0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#326965 0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#326966 0x0000000000412167 in ~ASTRefCount (this=0x7fbfffa750)
    at <$TOOLSDIR>/antlr/2.7.5/include/antlr/ASTRefCount.hpp:60
#326967 0x00000000004122b5 in ~SpiceParser (this=0x7fbfffa730)
    at <$USER>/antlr/spiceparser/src/NetParser.cpp:28
#326968 0x00000000004142b8 in main (argc=2, argv=0x7fbfffab28)
    at <$USER>/antlr/spiceparser/src/NetParser.cpp:37

I have manually edited the path to refer to  <$USER>, <$TOOLSDIR> in the 
debug messages above.


Running at 135K produced a different message.



Program received signal SIGSEGV, Segmentation fault.
0x0000002a9581ac44 in std::string::_Rep::_M_destroy () 
from /usr/lib64/libstdc++.so.5
(gdb) bt 10
#0  0x0000002a9581ac44 in std::string::_Rep::_M_destroy () 
from /usr/lib64/libstdc++.so.5
#1  0x000000000041c7d5 in antlr::CommonAST::~CommonAST$delete ()
#2  0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#3  0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#4  0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#5  0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#6  0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#7  0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()
#8  0x00000000004168b7 in antlr::ASTRef::~ASTRef ()
#9  0x000000000041c7c6 in antlr::CommonAST::~CommonAST$delete ()




From gt54-antlr at cyconix.com  Mon Oct  3 10:55:06 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Oct  3 10:55:17 2005
Subject: [antlr-interest] AST and test data size problem
In-Reply-To: <200510031033.49270.hdeshmane@montalvosystems.com>
References: <200510031033.49270.hdeshmane@montalvosystems.com>
Message-ID: <4341707A.1060906@cyconix.com>

Is this thread any use?

<http://www.antlr.org/pipermail/antlr-interest/2005-July/013101.html>

From parrt at cs.usfca.edu  Mon Oct  3 11:24:21 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Oct  3 11:24:27 2005
Subject: [antlr-interest] Re: bad generated code?
Message-ID: <EC3E2C21-CFFC-4D91-988F-CA6875E24BEA@cs.usfca.edu>

> Tree parsers have to be k=1 because they are actually two dimensional
> and it gets too weird to allow k>1.  Syntactic predicates should
> work, though.

Hi :)  ANTLR v3 allows k>1 lookahead trivially I'm happy to say.  I  
didn't have my brain working for v2 ;)

Ter
From spraja0 at engr.uky.edu  Mon Oct  3 11:50:16 2005
From: spraja0 at engr.uky.edu (spraja0@engr.uky.edu)
Date: Mon Oct  3 11:50:21 2005
Subject: [antlr-interest] OPTION
Message-ID: <20051003145016.sq8x7l28ock4g8wo@mail.engr.uky.edu>

Like the -p option in PCCTS is there an option in ANTLR to print out the grammar
?

--
Riya


From dzubi at users.sourceforge.net  Mon Oct  3 13:38:36 2005
From: dzubi at users.sourceforge.net (Daniel Zuberbuehler)
Date: Mon Oct  3 13:38:32 2005
Subject: [antlr-interest] How to read line/col from testLiteralsTable() ?
In-Reply-To: <03af01c5c80f$33f97be0$8cc79553@marlboro>
References: <200509302321.10274.dzubi@users.sourceforge.net>
	<200510031324.53540.dzubi@users.sourceforge.net>
	<03af01c5c80f$33f97be0$8cc79553@marlboro>
Message-ID: <200510032238.36931.dzubi@users.sourceforge.net>

Hi Alexey

> You can try other solutions:
> 1. Lexer takes line/column from input state. Unfortunately,
> LexerSharedInputState doesn't have observers for these fields.
> But you can make your own subclass of LexerSharedInputState
> and pass it to Lexer in constructor.

I didn't realized that I could set my own LexerSharedInputState. This surely 
is the cleanest solution for my problem

> 2. If you know tokens where literals are tested,
> you can set testLiterals = false and make token action
> where inputState field are accessed:
>
> ID :
>   ( LETTER | UNDERSCORE )
>   ( LETTER | UNDERSCORE | DIGIT )*
>   {
>
>     int line = inputState.line;
>     int column = inputState.column;
>     _ttype = testLiteralsTable( _ttype );
>   }
> ;
>

Wow, you're great! You just showed me the solution for another problem I had!

Thanks a lot for your help!

Cheers, Daniel
From virtualaspirin at yahoo.com  Mon Oct  3 13:54:37 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Mon Oct  3 13:54:41 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <200510031708.j93H8p309646@shell2.webquarry.com>
Message-ID: <20051003205437.20129.qmail@web30811.mail.mud.yahoo.com>

Hi Ivan

--- Ian Kaplan <iank@bearcave.com> wrote:
>   If the customer's perception of a compiler is that
> it is slow, they
>   may not buy it.  So the speed of a "run once"

Yes, rather they *will not* buy it if the slow
compiler means that their developers sit around
twiddling fingers for a long time.

But to come at that, lets defines 'slow'. If the
compilation time is insignifant compared to other
overheads, then its not an issue. OTOH, in spaces like
databases, you'll end up seeing SQL interpreter taking
a significant part total time if end users are not
careful enough (eg. not using prepared statements).

A lot of that comes through proper compiler design.
eg. one of the prime reasons why Java, and to some
extent MS C++ and C# compilers, are taking lead
because they allow incremental compilation. Thus a
frontend can give an illusion of code-run-debug-code
cycle with compiler being invisible. Eclipse's java
compiler is written in Java (so is Sun's) and its
beauty is that it gets out of the way. Thus the
perception of time 'wasted' is reduced... a win-win
situation.

>   Your argument seems also revolve around "I can
> find a bunch of Java
>   programmers, but C++ programmers are harder to
> find".  I'm

Nope. My argument is that 'good' programmers are hard
to find, and when I actually get them, why should I
waste their time on petty issues like, for example,
finding memory leaks. About the languages, my
perception is that good programmers can be good in any
language they code in. They are not tied to a specific
language. Smart people are not afraid of learning new
things and they learn damn fast.

>   processors.  For example, although parsing a query
> language is relatively straight forward, optimizing 
> it can be non-trivial. The sort of people that can
do 
> this are not easy to find either.

*grin* so why waste their time on obvious and petty
things ? I'm working on a well known DSL too! And I'd
rather have my team work on solving complex and fun
problems rather than doing menial tasks.

>   I have found that because of the huge Java class
> libraries available, some Java programmers I've 
> worked with do not understand algorithms and data
> structures as well as they should.

Oh, you forgot STL. Its far... far... richer than
Java's algorithm collection. Again, why blame the
tools ? Should I complain that because eclipse handles
compilation transparently, my team may not know all
compiler options... no I shouldn't! That's not in
their KRA and if and when they'd require it, they're
smart enough to learn in & out of it in hours.

>  For example,
>   I've seen some gross misuse of the Java HashMap. 

Oh please. Don't tell me you haven't seen any of
pointers, hash_map<char*, SomeType>, etc etc.

I've seen people using a hammer on screws. Should we
start blaming the hammer ? Or should we be straight
and call the 'human' holding it a prime evidence
against Darwin's law of evolution and survival for the
fittest ?

> http://www.bearcave.com/misl/misl_other/economics.
> html. We can correspond via email.

Interesting link. Reading it.

>   If you're developing a software product there will
> be, you hope, a few developers and many users.  So 
> the extra effort that goes into development to 
> produce a better product is something that is
>   amortized over your user base.

Oh sure. But also factor in things like support.
Coders are fallible. So, what if the product crashes
and burns ? Can you ask them a log file and ship the
patch by monday ? Can you code upgrades fast enough to
keep pace with time and competition 50x your company's
size ?

Also, in a complex project, by the time product ships
(12-18 months), the harware is about 2x faster
overall. So in my opinion going for a 20% increase in
performance at the cost of above points is wrong
unless speed is the make-or-break situation.


>   powerful.  Because of the interpretive overhead of
> Java (and as others have pointed out, the JVM
startup 
> cost) you need to think carefully when choosing to 
> use Java in some performance intensive applications.
 

Well, Java at least has come a long way since 1.1
days.  And for some reasons I think writing a compiler
in Java makes sense. The prime reason is the 'input'.

Input to compilers is not white-noise. It is
structured and generated by either humans or machines
- both exhibiting clear patterns in whatever they
generate. The only difference is that it is situation,
person and machine dependant that what pattern will be
there.

Static compilers (C/C++) do static optimizations. Can
they make optimizations with regard to these patterns
? Nope! JVM (hotspot VM) now has a run-time profiler
that provides feedback to JIT. It can at run time find
critical portions and optimize them through a number
of ways implemented right now and in time to come. So
the speed of execution on any non-trivial amount of
input will increase over time... something that static
compilers will never be able to do.

(That is exactly how java version of my compiler beat
the C++ version. The input was 8MB script generated
code. The JVM figured it out and optimized the
particular code path while C++ one just kept fighting
branch mispredictions and RefCount'ed GC overheads).

- Akhilesh



		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From ric.klaren at gmail.com  Mon Oct  3 15:24:01 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 15:21:40 2005
Subject: [antlr-interest] Re: bad generated code?
In-Reply-To: <EC3E2C21-CFFC-4D91-988F-CA6875E24BEA@cs.usfca.edu>
References: <EC3E2C21-CFFC-4D91-988F-CA6875E24BEA@cs.usfca.edu>
Message-ID: <4341AF81.7000300@gmail.com>

Terence Parr wrote:
>> Tree parsers have to be k=1 because they are actually two dimensional
>> and it gets too weird to allow k>1.  Syntactic predicates should
>> work, though.
> 
> 
> Hi :)  ANTLR v3 allows k>1 lookahead trivially I'm happy to say.  I 
> didn't have my brain working for v2 ;)

Though it looks like a bug for v2 ;) I browsed a bit around in the
changelogs and the code earlier this evening. I'm not sure where it's
triggered. I would currenlty guess in the analysis since there's no
changes (I think) in the codegenerator that could do this (or this is a
sleeper bug). For some reason it uses k > 1, anycase the && between the
terms looks strange... can it have to do with semantic predicates?

The (trimmed down) grammar files would be a help to track it down.

Cheers,

Ric
From ric.klaren at gmail.com  Mon Oct  3 15:25:31 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 15:23:03 2005
Subject: [antlr-interest] OPTION
In-Reply-To: <20051003145016.sq8x7l28ock4g8wo@mail.engr.uky.edu>
References: <20051003145016.sq8x7l28ock4g8wo@mail.engr.uky.edu>
Message-ID: <4341AFDB.2070809@gmail.com>

spraja0@engr.uky.edu wrote:
> Like the -p option in PCCTS is there an option in ANTLR to print out the grammar

The -html or -docbook or maybe even -diagnostic options are probably
what you're looking for.

Cheers,

Ric
From ric.klaren at gmail.com  Mon Oct  3 15:34:23 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 15:31:55 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <20051003205437.20129.qmail@web30811.mail.mud.yahoo.com>
References: <20051003205437.20129.qmail@web30811.mail.mud.yahoo.com>
Message-ID: <4341B1EF.40705@gmail.com>

Could you guys move this to a new thread please (no do not reply, make a
new post, so mail programs will not thread them, thanks!)

While interesting to some extent the content does not  really match the
subject anymore.

Thanks!

Ric
From ric.klaren at gmail.com  Mon Oct  3 15:42:35 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 15:40:08 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <1971701424.20050930193827@gmail.com>
References: <dd3a065f0509291639cadb993@mail.gmail.com>	<20050930160819.36078.qmail@web30210.mail.mud.yahoo.com>
	<1971701424.20050930193827@gmail.com>
Message-ID: <4341B3DB.2060309@gmail.com>

Nicola Cuomo wrote:
>>C++ Lexer its $getText. For example:
> 
>>IDENT: (ID_START_LETTER) (ID_LETTER)*
>>{
>> std::string s = $getText;
>>       $setText( LowerCase(s) ); }
>>resolving ambiguities:  syntactic or semantic
>>predicates
> 
> 
> It's possible to do that also in the parser??

$getText() is lexer only.

> Compiling this give me the error
> 
> underline.g: In member function `void TestParser::spec()':
> underline.g:20: error: `text' undeclared (first use this function)
> underline.g:20: error: (Each undeclared identifier is reported only once for
>    each function it appears in.)
> underline.g:20: error: `_begin' undeclared (first use this function)

Antlr is not very good in giving errors for incorrect use of the
shorthands in the actions :(

> As  far  as  construction own type during parsing i'm getting on using
> returns/passing role parameter something like that:
> 
> variableListInit returns [list<VariableInit> rinitVariable]
> { 
>         VariableInit tvariableInit;
>         VariableInit tvariableInits;
> }
>   : tvariableInit=variableInit { rinitVariable.push_back( tvariableInit ); }
>         (COMMA tvariableInits=variableInit { rinitVariable.push_back( tvariableInits ); } )*
>   ;
> 
> variableInit returns [VariableInit rvariableInit]
> {
>         string texpression1;
>         string texpression2;
>         
> }
>         : texpression1=expression EQUAL texpression2=expression
>         { rvariableInit.name = texpression1;  rvariableInit.value = texpression2;} 
>         ;
> 
> and it seem to work.

A little bit depending on how your parser is put together it may be more
efficient to pass in a list reference from the top (saves copying):

variableListInit[list<VariableInit>& rinitVariable]
{
  VariableInit tvariableInit;
  VariableInit tvariableInits;
} : tvariableInit=variableInit { rinitVariable.push_back( tvariableInit ; }
         (COMMA tvariableInits=variableInit {
rinitVariable.push_back(tvariableInits ); } )*
   ;

Cheers,

Ric
From cabird at gmail.com  Mon Oct  3 15:52:27 2005
From: cabird at gmail.com (Christian Bird)
Date: Mon Oct  3 15:52:29 2005
Subject: [antlr-interest] Re: bad generated code?
In-Reply-To: <4341AF81.7000300@gmail.com>
References: <EC3E2C21-CFFC-4D91-988F-CA6875E24BEA@cs.usfca.edu>
	<4341AF81.7000300@gmail.com>
Message-ID: <e1d90f4805100315522cd80c6f@mail.gmail.com>

I'll trim them down.  Would you like me to post them to the list or
mail directly to you?  Thanks for your help.

-- Chris

On 10/3/05, Ric Klaren <ric.klaren@gmail.com> wrote:
> Terence Parr wrote:
> >> Tree parsers have to be k=1 because they are actually two dimensional
> >> and it gets too weird to allow k>1.  Syntactic predicates should
> >> work, though.
> >
> >
> > Hi :)  ANTLR v3 allows k>1 lookahead trivially I'm happy to say.  I
> > didn't have my brain working for v2 ;)
>
> Though it looks like a bug for v2 ;) I browsed a bit around in the
> changelogs and the code earlier this evening. I'm not sure where it's
> triggered. I would currenlty guess in the analysis since there's no
> changes (I think) in the codegenerator that could do this (or this is a
> sleeper bug). For some reason it uses k > 1, anycase the && between the
> terms looks strange... can it have to do with semantic predicates?
>
> The (trimmed down) grammar files would be a help to track it down.
>
> Cheers,
>
> Ric
>


--
Christian Bird
cabird@gmail.com
From ric.klaren at gmail.com  Mon Oct  3 16:07:37 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 16:04:59 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <20050929194619.GB1216@mail>
References: <20050929194619.GB1216@mail>
Message-ID: <4341B9B9.9070002@gmail.com>

David Maxwell wrote:
> I've just started using Antlr, and while I appreciate the concepts, I'm
> finding it very frustrating.

Antlr has a pretty steep learning curve :(

> 2) Are there any examples targetting C++ that do NOT use the AST
> funcionality?

Should be some simple ones in the distro (but I guess you found those
already)

A bigger project is here (has lexer/parser/bunch of treewalkers,
although this may not be a good example to start with (and it's software
that's grown over time, the parser is in need of a rewrite)):

http://fmt.cs.utwente.nl/tools/motor/

It does cover line info in ast, error handling, and has a decent lexer
for a C-ish language. It also has symbol table stuff, but that's for a
language with some quirks that make it less usable for a general language.

> The AST tools sound great - but right now I just want a lex/yacc
> replacement with multi-token lookahead. The types of things you want to
> do in the parsing stage are quite different if you're not building ASTs,
> and I can't find examples to get me started. (Yes, I've looked in
> examples/cpp/*)

Actually things are not that different only you have less options to
'divide and conquer'.

> 3) The documentation plays a bit fast and loose with the term 'antlr'.
> i.e. "Antlr keeps track of the column position of tokens for you" -
> 
> Well, no, but the _Lexer_ antlr produces does so. Now, it's not a great
> example, because we could have an argument about what column position
> should mean in the context of the Parser - but regardless, it would be
> nice to have a list of which Functions are applicable in which contexts.
> Using getColumn() in the Parser led to some wasted time for me, before
> I thought about the Parser/Lexer split in the .g file for a bit.

In the parser position information is tagged on teh tokens. Same as in
TreeParser (although you have to use a custom AST class to get
line/column information in the AST)

> 4) Is there any equivalent to the Lex/Yacc documentation 'How to resolve
> shift/reduce conflicts' - for how to address lexical nondeterminisms in
> antlr?

Cannot add much to what Bryan said.. although left factoring is more
important imho then fiddling with greedy options. Also some warnings you
can never get rid off in antlr (cannot be turned off while antlr does
the right thing). Any book covering top down parsing should have a
section left factoring and there's probably some to be found on the net.
         Note that there is a tradeoff in readability of your grammar
and left factoring. Syntactic predicates can help reduce conflicts for a
start at the expense of performance. Lateron you can remove them by left
factoring things out when you have your gramar running.

> For example, I've noticed that rule order in the Lexer DOES matter, but
> I can't find any documentation about how to order rules to get the
> desired results. I've just been following 'most specific first', but
> I'd appreciate a more precise answer.

If I'm not mistaken, it just handles stuff in order as they appear in
the input. So the first matching alternative is chosen.

Cheers,

Ric
From ric.klaren at gmail.com  Mon Oct  3 16:10:16 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 16:07:39 2005
Subject: [antlr-interest] Re: bad generated code?
In-Reply-To: <e1d90f4805100315522cd80c6f@mail.gmail.com>
References: <EC3E2C21-CFFC-4D91-988F-CA6875E24BEA@cs.usfca.edu>	
	<4341AF81.7000300@gmail.com>
	<e1d90f4805100315522cd80c6f@mail.gmail.com>
Message-ID: <4341BA58.4010900@gmail.com>

Hi,

Christian Bird wrote:
> I'll trim them down.  Would you like me to post them to the list or
> mail directly to you?  Thanks for your help.

You can mail them directly to me, then I'll have a look. Make sure antlr
can still process them.

Cheers,

Ric
From ric.klaren at gmail.com  Mon Oct  3 16:16:19 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 16:13:39 2005
Subject: [antlr-interest] Antlr embedded in c++ dll... Token Type Export
In-Reply-To: <430C3459.5060505@digitech.fr>
References: <430C3459.5060505@digitech.fr>
Message-ID: <4341BBC3.8090701@gmail.com>

nicolas.felix@digitech.fr wrote:
> I am using Antlr in C++ dll.
> I would like to export de ParserType generated like this.
> 
> #ifdef __cplusplus
> struct CUSTOM_API DigiladParserTokenTypes {
> #endif
>    enum {
>        EOF_ = 1,
>        ABS_OP = 4,
>        ENT_OP = 5,
>    ...
>        }
>    };
> #ifdef __cplusplus
> };
> 
> My question is how (and where) I define the symbol CUSTOM_API to make
> the enum visible out of my librairy.
> 
> Or may I do this in a different way.

Check out <distro>/lib/cpp/README

Cheers,

Ric
From ric.klaren at gmail.com  Mon Oct  3 16:17:26 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct  3 16:14:44 2005
Subject: [antlr-interest] Writing an antlr code generator
In-Reply-To: <DE95CCE5-CE6F-4BCA-8FD8-817082EDBDA7@chello.se>
References: <DE95CCE5-CE6F-4BCA-8FD8-817082EDBDA7@chello.se>
Message-ID: <4341BC06.6010202@gmail.com>

Tommy Nordgren wrote:
> How do i implement an Antlr code generator to support a new language?

For antlr2 copy'n'paste'n'modify from an existing one. And the same
again with the support lib. There's longer posts of mine in the archives
on this topic.

Cheers,

Ric
From madcapmaggie at yahoo.com  Tue Oct  4 07:13:52 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Tue Oct  4 07:13:59 2005
Subject: [antlr-interest] C++ beginner questions
In-Reply-To: <20051003205437.20129.qmail@web30811.mail.mud.yahoo.com>
Message-ID: <20051004141352.80345.qmail@web30204.mail.mud.yahoo.com>



--- Akhilesh Mritunjai <virtualaspirin@yahoo.com>
wrote:

> Static compilers (C/C++) do static optimizations.
> Can
> they make optimizations with regard to these
> patterns
> ? Nope! JVM (hotspot VM) now has a run-time profiler
> that provides feedback to JIT. 

Static compilers can do this too.  The HP PARISC
compilers have done this for years.  If you own the
compilers, the linker and the kernel you can really do
a lot.

>It can at run time
> find
> critical portions and optimize them through a number
> of ways implemented right now and in time to come.
> So
> the speed of execution on any non-trivial amount of
> input will increase over time... something that
> static
> compilers will never be able to do.

<grumble>.  See above.  

Not that it's not easier for Java.

> (That is exactly how java version of my compiler
> beat
> the C++ version. The input was 8MB script generated
> code. The JVM figured it out and optimized the
> particular code path while C++ one just kept
> fighting
> branch mispredictions and RefCount'ed GC overheads).
> 
> - Akhilesh

Peggy, happy to be coding in C++ instead of C and
asssembly language.
> 
> 
> 
> 		
> __________________________________ 
> Yahoo! Mail - PC Magazine Editors' Choice 2005 
> http://mail.yahoo.com
> 

From aldib at fuurou.org  Tue Oct  4 07:34:57 2005
From: aldib at fuurou.org (Alessandro Di Bella)
Date: Tue Oct  4 07:35:15 2005
Subject: [antlr-interest] antlr jar dependency
Message-ID: <200510041634.57348.aldib@fuurou.org>

Hi,
I'm new to ANTLR and I need to write a parser that needs to be shipped within 
an applet. Because of size restrictions, I was wondering if there was a way 
of generating code that did not rely at runtime on the antlr.jar file (like 
javacc does).

Thanks

Alessandro 
From virtualaspirin at yahoo.com  Tue Oct  4 08:29:06 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Tue Oct  4 08:29:09 2005
Subject: [antlr-interest] antlr jar dependency
In-Reply-To: <200510041634.57348.aldib@fuurou.org>
Message-ID: <20051004152906.73093.qmail@web30807.mail.mud.yahoo.com>

Hi

Short answer: No

Long answer: Not everything in antlr.jar is actually
needed for runtime. There is also a separate antlr
runtime jar file floating somewhere that containes
only the classes needed at runtime.

Basically, you can load the generate files in
eclipse/IDEA/netbeans/whatever and remove unncessary
imports. Then just pack the ones left, and ship your
product.

I looked at it sometime back, and needed class file
were south of 100kB or so.

- Akhilesh

--- Alessandro Di Bella <aldib@fuurou.org> wrote:

> Hi,
> I'm new to ANTLR and I need to write a parser that
> needs to be shipped within 
> an applet. Because of size restrictions, I was
> wondering if there was a way 
> of generating code that did not rely at runtime on
> the antlr.jar file (like 
> javacc does).
> 
> Thanks
> 
> Alessandro 
> 



		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From chris at lotuscat.com  Tue Oct  4 08:32:11 2005
From: chris at lotuscat.com (Chris Black)
Date: Tue Oct  4 08:32:30 2005
Subject: [antlr-interest] antlr jar dependency
In-Reply-To: <20051004152906.73093.qmail@web30807.mail.mud.yahoo.com>
References: <20051004152906.73093.qmail@web30807.mail.mud.yahoo.com>
Message-ID: <4342A07B.8020202@lotuscat.com>

You could use an obfuscator with dead code removal like proguard to trim 
all unneeded classes, methods and fields with respect to what you 
actually use. This would make creating a trimmed down jar easier.

Chris

Akhilesh Mritunjai wrote:

>Hi
>
>Short answer: No
>
>Long answer: Not everything in antlr.jar is actually
>needed for runtime. There is also a separate antlr
>runtime jar file floating somewhere that containes
>only the classes needed at runtime.
>
>Basically, you can load the generate files in
>eclipse/IDEA/netbeans/whatever and remove unncessary
>imports. Then just pack the ones left, and ship your
>product.
>
>I looked at it sometime back, and needed class file
>were south of 100kB or so.
>
>- Akhilesh
>
>--- Alessandro Di Bella <aldib@fuurou.org> wrote:
>
>  
>
>>Hi,
>>I'm new to ANTLR and I need to write a parser that
>>needs to be shipped within 
>>an applet. Because of size restrictions, I was
>>wondering if there was a way 
>>of generating code that did not rely at runtime on
>>the antlr.jar file (like 
>>javacc does).
>>
>>Thanks
>>
>>Alessandro 
>>
>>    
>>
>
>
>
>		
>__________________________________ 
>Yahoo! Mail - PC Magazine Editors' Choice 2005 
>http://mail.yahoo.com
>  
>

From parrt at cs.usfca.edu  Tue Oct  4 17:15:21 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Oct  4 17:15:27 2005
Subject: [antlr-interest] automated randomized parser testing
Message-ID: <EF861DDD-90C0-494F-88EF-33948B965327@cs.usfca.edu>

Hi.  You may recall that I was playing around with generating random  
sentences from grammars for testing purposes.  Well, I finished a  
little more of that in preparation for the ANTLR2005 workshop.  Reto  
Kramer, who you may know from his iContract tool, asked me about  
pounding servers that listen for a specific protocol; i.e., what  
automation can be done to hit parsers, interpreters, and translators  
with random but syntactically correct sentences?

Here is an example.  I give it a grammar called simple.g and a  
starting rule, then let it rip!

/tmp $ java org.antlr.tool.RandomPhrase simple.g program
int H = 873 ';' method j '(' ')' '{' int a ';' int b ';' return a ';'  
'}'
/tmp $ java org.antlr.tool.RandomPhrase simple.g program
method SD '(' ')' '{' int Ta = 3 ';' int F ';' return 0 ';' '}'  
method SaE '(' ')' '{' int L ';' int BdT ';' return x ';' x = Fg ';'  
CDSCO = x ';' '}'
/tmp $ java org.antlr.tool.RandomPhrase simple.g program
int Ktcdn ';' method wh '(' ')' '{' return 5 ';' '}'
/tmp $ java org.antlr.tool.RandomPhrase simple.g program
method k '(' ')' '{' z = BqehVnH ';' '}' method r '(' ')' '{' g = 32  
';' '}' method c '(' ')' '{' int X ';' return Gs ';' vm = 134 ';' '}'
...

Notice that it first gets a random phrase of token types and then  
asks the lexer repeatedly for a random token of each type.

The grammar is

grammar SimpleParser;
options {output=AST;}
program : variable* method+
         ;
variable: INTTYPE ID (ASSIGN expr)? ';' -> ^(INTTYPE ID ^(ASSIGN expr)?)
         ;
method  : METHOD ID '(' ')'
           '{'
               variable* statement+
           '}'
           -> ^(METHOD ID variable* statement+)
         ;
statement
         : ID ASSIGN expr ';' -> ^(ASSIGN ID expr)
         | RETURN expr ';'    -> ^(RETURN expr)
         ;
expr    : ID | INT
         ;
ASSIGN  : '=' ;
RETURN  : "return";
INTTYPE : "int";
METHOD  : "method";
ID      : ('a'..'z'|'A'..'Z')+ ;
INT     : ('0'..'9')+ ;
WS      : (' '|'\t'|'\n')+ {channel=99;}
         ;

Pretty useful for when you have actions.  You can just let it run  
overnight and see if you can make your system crash.

This is all done in an interpreted manner; no code gen or anything.

Cool, eh?

Ter
From henryb at ntlworld.com  Wed Oct  5 05:34:11 2005
From: henryb at ntlworld.com (Henry Butowsky)
Date: Wed Oct  5 05:07:04 2005
Subject: [antlr-interest] TinyC
Message-ID: <4343C843.3080908@ntlworld.com>

Hi Guys,
   I have compiled a C++ parser for the tinyc example.

Below is some of main.cpp

try {
	MyTinyCLexer lexer( str );
	MyTinyCParser parser(lexer);

	parser.funclist();	

	print_tree pr;
	pr.pr_tree( parser.getAST() );
	//trav_tree( parser.getAST(), 0 );
	
       } catch(std::exception& e) {
	std::cerr << "exception: " << e.what() << std::endl;

The program is crashing out on the call parser.funclist()

More specifically its a problem with the "ASTFactory".

See below

Program received signal SIGSEGV, Segmentation fault.
0x08063b50 in 
antlr::ASTFactory::create(antlr::TokenRefCount<antlr::Token>) ()


With my miniscule understanding of ANTLR -- Is the problem to do with 
the fact that I am using the default AST class ?
Pleas Help


From mail at martin-probst.com  Wed Oct  5 05:49:00 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Oct  5 05:49:36 2005
Subject: [antlr-interest] TinyC
In-Reply-To: <4343C843.3080908@ntlworld.com>
References: <4343C843.3080908@ntlworld.com>
Message-ID: <1128516540.19509.57.camel@localhost.localdomain>

Hi,

> Program received signal SIGSEGV, Segmentation fault.
> 0x08063b50 in 
> antlr::ASTFactory::create(antlr::TokenRefCount<antlr::Token>) ()
> 
> 
> With my miniscule understanding of ANTLR -- Is the problem to do with 
> the fact that I am using the default AST class ?

I would guess that the TinyC grammar _is_ using a custom AST class, and
that you would have to register an ASTFactory with your parser. Did you
try that?

Martin

From ewbank at gmail.com  Wed Oct  5 11:40:31 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Oct  5 11:40:34 2005
Subject: [antlr-interest] TinyC
In-Reply-To: <4343C843.3080908@ntlworld.com>
References: <4343C843.3080908@ntlworld.com>
Message-ID: <dd3a065f0510051140t7fff9632j7ba6216637e32a95@mail.gmail.com>

> The program is crashing out on the call parser.funclist()
> More specifically its a problem with the "ASTFactory".
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x08063b50 in
> antlr::ASTFactory::create(antlr::TokenRefCount<antlr::Token>) ()

Looks like you are generating a tree, right (e.g., buildAST=true). 
For this, you need an instance of the factory class; this is described
(buried ;-) on page 112 of the antlrman.pdf file in the distro:

quoting...

   New as of ANTLR 2.7.2 is that if you supply the
         buildAST=true
   option to a parser then you have to set and initialize an ASTFactory
   for the parser and treewalkers that use the resulting AST.
         ASTFactory my_factory; // generates CommonAST per default..
         MyParser parser( some?lexer );
         // Do setup from the AST factory repeat this for all parsers
using the AST
         parser.initializeASTFactory( my_factory );
         parser.setASTFactory( );

In other words, you need to call the initialize and set methods on the
parser /before/ you attempt to build a tree by calling your
parser.funclist() method.  Also, that same factory should be used by
all TreeParser classes in your pipeline.

I use a hand-written constructor that takes a second argument - the
AST factory - to help prevent me from forgetting this:

class P extends Parser;
options {
   noConstructors = true;
}
{
   public:
      P(antlr::TokenStream &lexer, antlr::ASTFactory *my_factory)
      : antlr::LLkParser(lexer,2)            // copied from default
generated constructor
      , ... ......                                    // other c'tor
initializations here, as needed
      {
         initializeASTFactory(*my_factory);
         setASTFactory(my_factory);
      }
}
From david at crlf.net  Wed Oct  5 13:46:32 2005
From: david at crlf.net (David Maxwell)
Date: Wed Oct  5 13:44:40 2005
Subject: [antlr-interest] Overlapping tokens
Message-ID: <20051005204632.GG1216@mail>


Hi all,

Thanks to everyone who replied (on topic ;-) to my C++ beginner
questions.  That did help me get further.

Now I have a more specific query.

In a lex/yacc example, I could do something like this:

"FooBar"                { printf ("Found a FOOBAR lex token\n");
                          strcpy(yylval.stval,yytext);
                          return FOOBAR; }

[a-zA-Z_]*              { printf("Found a ID lex token\n");
                          strcpy(yylval.stval,yytext);
                          return ID; }

If the input text is:
=====
Foobar
=====

The lexer will pass a FOOBAR token to the parser, which then either
accepts it, or not, based on the current position in the grammar.

Any text of the form [a-zA-Z_]* that doesn't match "FooBar" will result in
an ID token being returned to the paser.

In lex/yacc, that is valid for strings such as "Foo".

In Antlr, a run-time error is produced, even with k > length(FooBar) >
length(Foo)

Parse exception: <cin>:1:4: expecting ''B'', found '' ''

So, what I'm confused about is this: If I was writing a language without
reserved keywords, I would expect to have to match every piece of
textual input and check it against a list of keywords, and make sure the
parser could use it as a keyword token if appropriate, or an ID if
appropriate. In that case, the 'ID' token matcher would be the only
entry in the lexer...

However, in a lanaguage with reserved keywords, the above seems like a
reasonable way to write the lexer patterns, but every substring of the
reserved keywords ends up being reserved (in-effect) too.

Why does Antlr demand that the rest of the token must be 'ooBar' once it
sees the 'F' - when it has another valid token to use - even when given
enough 'k' to tell the difference?

Thanks again,

							David

From oliver.wraight at brooks.com  Wed Oct  5 14:03:49 2005
From: oliver.wraight at brooks.com (Wraight, Oliver)
Date: Wed Oct  5 14:03:59 2005
Subject: [antlr-interest] Overlapping tokens
Message-ID: <B0EF51D84DDEEF4D9F7D485485751F6C04BF24@mail-brooks5.brooks.com>

Sounds to me as though you are looking for the tokens{} section of the
grammar.

Class MyLexer extends Lexer
options
{
  k=1; // Just to highlight the point
}
tokens
{
  FOOBAR = "FooBar";
}

ID : ('a'..'z' | 'A'..'Z' | '_')*;

That should do the trick.

Hope this helps,

Oliver

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of David Maxwell
Sent: 05 October 2005 21:47
To: antlr-interest@antlr.org
Subject: [antlr-interest] Overlapping tokens


Hi all,

Thanks to everyone who replied (on topic ;-) to my C++ beginner
questions.  That did help me get further.

Now I have a more specific query.

In a lex/yacc example, I could do something like this:

"FooBar"                { printf ("Found a FOOBAR lex token\n");
                          strcpy(yylval.stval,yytext);
                          return FOOBAR; }

[a-zA-Z_]*              { printf("Found a ID lex token\n");
                          strcpy(yylval.stval,yytext);
                          return ID; }

If the input text is:
=====
Foobar
=====

The lexer will pass a FOOBAR token to the parser, which then either
accepts it, or not, based on the current position in the grammar.

Any text of the form [a-zA-Z_]* that doesn't match "FooBar" will result
in
an ID token being returned to the paser.

In lex/yacc, that is valid for strings such as "Foo".

In Antlr, a run-time error is produced, even with k > length(FooBar) >
length(Foo)

Parse exception: <cin>:1:4: expecting ''B'', found '' ''

So, what I'm confused about is this: If I was writing a language without
reserved keywords, I would expect to have to match every piece of
textual input and check it against a list of keywords, and make sure the
parser could use it as a keyword token if appropriate, or an ID if
appropriate. In that case, the 'ID' token matcher would be the only
entry in the lexer...

However, in a lanaguage with reserved keywords, the above seems like a
reasonable way to write the lexer patterns, but every substring of the
reserved keywords ends up being reserved (in-effect) too.

Why does Antlr demand that the rest of the token must be 'ooBar' once it
sees the 'F' - when it has another valid token to use - even when given
enough 'k' to tell the difference?

Thanks again,

							David


_____________________________________________________________________
This email has been scanned by the MessageLabs Email Security System.

_____________________________________________________________________
This email message, including any attachments, may contain confidential and proprietary information for the sole use of the intended recipient.  If you are not the intended recipient, you are hereby notified that any use, copying or dissemination of this message is strictly prohibited.  If you received this message in error, please notify Brooks Automation, Inc. immediately by reply email or by calling Brooks US Headquarters at +1 978-262-2400. Then delete this message from your system, without making any copy or distribution.  Thank you.
From dzubi at users.sourceforge.net  Thu Oct  6 03:38:17 2005
From: dzubi at users.sourceforge.net (=?UTF-8?B?IkRhbmllbCBadWJlcmLDvGhsZXIi?=)
Date: Thu Oct  6 03:38:22 2005
Subject: [antlr-interest] Tool for generating graphical representation of
	parser rules?
Message-ID: <8f5e2d076b5be891502b8648d6ce8ef5@zubinet.org>

Hi 

I'm looking for a tool which generates a graphical representation of the
parser rules from an antlr grammar. I imagine something like the graphs in
this ada reference manual:
http://cui.unige.ch/db-research/Enseignement/analyseinfo/Ada95/subprogram_specification.html

Does anybody know about such a tool?

Cheers, 
Daniel Zuberb?hler

From darthia at gmail.com  Thu Oct  6 03:45:54 2005
From: darthia at gmail.com (=?ISO-8859-1?Q?Jos=E9_Mar=EDa_Garc=EDa_Rodr=EDguez?=)
Date: Thu Oct  6 03:45:56 2005
Subject: [antlr-interest] Tool for generating graphical representation of
	parser rules?
In-Reply-To: <8f5e2d076b5be891502b8648d6ce8ef5@zubinet.org>
References: <8f5e2d076b5be891502b8648d6ce8ef5@zubinet.org>
Message-ID: <87ca58520510060345x27939701x@mail.gmail.com>

Try Syntax Diagram Generator. I used it in the past. You can find it
in http://www.antlr.org/share/list

Regards.
--
Jos? Mar?a Garc?a Rodr?guez
From parrt at cs.usfca.edu  Thu Oct  6 11:23:24 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Oct  6 11:23:32 2005
Subject: [antlr-interest] Tool for generating graphical representation of
	parser rules?
In-Reply-To: <8f5e2d076b5be891502b8648d6ce8ef5@zubinet.org>
References: <8f5e2d076b5be891502b8648d6ce8ef5@zubinet.org>
Message-ID: <DE3AAA77-4E24-4E77-99E3-AB8C13F23B2E@cs.usfca.edu>


On Oct 6, 2005, at 3:38 AM, Daniel Zuberb?hler wrote:

> Hi
>
> I'm looking for a tool which generates a graphical representation  
> of the
> parser rules from an antlr grammar. I imagine something like the  
> graphs in
> this ada reference manual:
> http://cui.unige.ch/db-research/Enseignement/analyseinfo/Ada95/ 
> subprogram_specification.html
>
> Does anybody know about such a tool?

ANTLRWorks, the GUI for ANTLR v3, does this automatically.  We're  
still racing to work on these tools...prototypes are available in

http://www.antlr.org/download

directory.

Ter
From teddemc at yahoo.com  Thu Oct  6 13:32:15 2005
From: teddemc at yahoo.com (Matthew Tedder)
Date: Thu Oct  6 13:32:19 2005
Subject: [antlr-interest] Dumb Question
Message-ID: <20051006203215.21795.qmail@web52913.mail.yahoo.com>

I hate to burden you with this kind of question but I
cannot remember, cannot find my notes, and cannot seem
to find anything through google this morning on how to
simply run antlr on my morph.g file (other than the
apache ant method)..

http://134.121.235.77/quickdoc/morph.g

My memory is to just type: "antlr.Tool morph.g" but
that command doesn't seem to exist.  I wrote this some
months ago and forgot.

I want to work on this again and start learning how to
walk the tree so I can actually make it compile a
runnable program.  Then I want to learn how to convert
this to C++ so I can know how to make something
actually be useful.  I really don't understand the
point with Java...

Matthew



		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com


		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From parrt at cs.usfca.edu  Thu Oct  6 14:00:54 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Oct  6 14:01:01 2005
Subject: [antlr-interest] Dumb Question
In-Reply-To: <20051006203215.21795.qmail@web52913.mail.yahoo.com>
References: <20051006203215.21795.qmail@web52913.mail.yahoo.com>
Message-ID: <1A0AC754-E8D1-45A3-BB0D-3F3C67DF751A@cs.usfca.edu>


On Oct 6, 2005, at 1:32 PM, Matthew Tedder wrote:

> I hate to burden you with this kind of question but I
> cannot remember, cannot find my notes, and cannot seem
> to find anything through google this morning on how to
> simply run antlr on my morph.g file (other than the
> apache ant method)..
>
> http://134.121.235.77/quickdoc/morph.g
>
> My memory is to just type: "antlr.Tool morph.g" but
> that command doesn't seem to exist.  I wrote this some
> months ago and forgot.

You need

java antlr.Tool morph.g

:)

Ter

From dtkien at usfca.edu  Thu Oct  6 14:35:07 2005
From: dtkien at usfca.edu (Kien Te Do)
Date: Thu Oct  6 14:35:11 2005
Subject: [antlr-interest] Need help with java1.5.g
Message-ID: <c23e05c28c70.c28c70c23e05@usfca.edu>

Hi all,

I have a problem with java1.5.g: my Lexer.java has some syntax errors at
these following lines:

Char.IsLetter(LA(1))
Char.IsLetterOrDigit(LA(1))

..I tried to convert these lines to java syntax:
Charater.isLetter(LA(1)) and Character.isLetterOrDigit(LA(1)). But it
does not work !?

What i should do?
Thankx,
-Kien



 
From parrt at cs.usfca.edu  Thu Oct  6 16:36:17 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Oct  6 16:36:24 2005
Subject: [antlr-interest] ANTLR2005 agenda posted
Message-ID: <B359E9E2-8E1F-4AEE-8C47-4CECAA486603@cs.usfca.edu>

Hi everyone,

I have finished the initial topics list for the workshop; there are a  
few more talks but I'm waiting to confirm they are able to make it.

http://www.cs.usfca.edu/ANTLR2005.shtml

We have only a few spots left so register now if you want to come.   
Just 2 weeks left til the workshop!

3 lucky attendees will receive free Intellij IDE licenses ($500  
value) plus we're doing nice polo shirts with embroidered letters.   
Other swag as well.  Thursday night dinner and some other goodies  
will be provided.  Wireless will be available in the room.

Thanks to BEA Systems for hosting the workshop and for pitching in  
some cash!

Best regards,
Terence
From geiroves at online.no  Thu Oct  6 17:44:00 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Thu Oct  6 17:44:24 2005
Subject: [antlr-interest] Serious Bug when using BitSet generation
Message-ID: <000301c5cad8$3af30940$bd00a8c0@rexii>

Hello,
 
I seem to have encountered a serious bug when using bitset generation
(the default). I have had to turn it of setting
codeGenBitsetTestThreshold=999;
 
The problem occurs in empty productions preceded by syntactic
predicates. I have this in several bocks as shown below. When using
bitset generation, I get NoViableAltException because of the wrong code
generation whenever a particular block should match an empty production.
Here is an excerpt of the code:
 
(Terrence, If you need samples of the generated code with / without
BitSet generation, I will provide it. Right now I am very tired, just
wanted to post this!)
 
------------------------------------ Start Parser Code Excerpt
-------------------------------------------
 
.....
 
parseProgram returns [String r=null]
 : c0:commonProgramHeader 
   c1:commonTitleDescriptionUsesStoresBlock1
   c2:commonConstantsBlock2
   c3:commonLibraryBlock3
   c4:commonFormulaBlock4
   c5:commonFunctionCallBlock5
   end:RCURLY (SEMI!)? EOF!
 ;
 

commonProgramHeader
 :  (autoGeneratedDateTag)?
  (p:PROGRAM^<AST=no.oss.gos.FunctionNode> pId:ID {isProgram = true;} |
CATEGORY^ cId:ID {isCategory = true;} | CONSTANTS^ gId:ID {isConstants =
true;}) LCURLY
 ; 
 
 
commonTitleDescriptionUsesStoresBlock1
 {
  String programTitle = null, programDescription = null;
  int pos = 0; // rewind position set below
 }
 // We need to terminate the (title)? (description)?
(storesDeclarations)? (usesDeclarations)? construction
 // or we get an ambiguity: Thus, we state that we expect (CONSTANTS! |
LIBRARY! | FORMULAS!) following this optional construct
 // But then we need to rewind before continuing: Thus we use a mark()
and rewind() to do this !
 : {isProgram | isCategory}? (programTitle=title)?
(programDescription=description)? (storesDeclarations)?
(usesDeclarations)? {pos=mark();} (CONSTANTS! | LIBRARY! | FORMULAS!)
   { 
    rewind(pos);
    options.setProgramDescription(programDescription); 
    options.setProgramTitle(programTitle);
   }
 | {isProgram}? ( )         ****************   NOTE : These kind of
empty productions FAIL to match an empty Production when using BITSET
generation !
 | {isCategory}? ( )
 | {isConstants}?   ( )
 ;
 
commonConstantsBlock2
 : {isCategory}? constantDeclarations
 | {isCategory}? ( )  
 | {isConstants}? constantDeclarationsList
 | {isProgram}? ( )
 ;
 
commonLibraryBlock3
 : {isCategory}? libraryDeclarations
 | {isCategory}? ( )  
 | {isProgram}?  ( ) 
 | {isConstants}? ( ) 
 ;
 
commonFormulaBlock4
 : {isProgram}? formulaDeclarations
 | {isCategory}? formulaDeclarations
 | {isConstants}? ( ) 
 ;
 
commonFunctionCallBlock5
 : {isProgram}? mainCall SEMI!   
 | {isCategory}? ( ) 
 | {isConstants}? ( )
 ; 
 
.........
 
 
------------------------------------ End Parser Code Excerpt
-------------------------------------------
 
 
regards

Geir Ove Skjaervik
Objective Software Solutions
Norway
Phone: Int+907-48-869
Fax: Int+47-6988-5947
E-mail: objective.software@online.no
WEB: http://objective.bitfikler.com/

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051007/56299efc/attachment.html
From geiroves at online.no  Thu Oct  6 17:56:38 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Thu Oct  6 17:56:52 2005
Subject: [antlr-interest] Serious Bug when using BitSet generation -
	Forgot: USING ANTLR 2.7.5 !!!!
In-Reply-To: <000301c5cad8$3af30940$bd00a8c0@rexii>
Message-ID: <000001c5cad9$fa917d80$bd00a8c0@rexii>

Forgot: USING ANTLR 2.7.5 !!!!
 
Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Geir Ove
Skjaervik
Sent: 7. oktober 2005 02:44
To: antlr-interest@antlr.org
Subject: [antlr-interest] Serious Bug when using BitSet generation


Hello,
 
I seem to have encountered a serious bug when using bitset generation
(the default). I have had to turn it of setting
codeGenBitsetTestThreshold=999;
 
The problem occurs in empty productions preceded by syntactic
predicates. I have this in several bocks as shown below. When using
bitset generation, I get NoViableAltException because of the wrong code
generation whenever a particular block should match an empty production.
Here is an excerpt of the code:
 
(Terrence, If you need samples of the generated code with / without
BitSet generation, I will provide it. Right now I am very tired, just
wanted to post this!)
 
------------------------------------ Start Parser Code Excerpt
-------------------------------------------
 
.....
 
parseProgram returns [String r=null]
 : c0:commonProgramHeader 
   c1:commonTitleDescriptionUsesStoresBlock1
   c2:commonConstantsBlock2
   c3:commonLibraryBlock3
   c4:commonFormulaBlock4
   c5:commonFunctionCallBlock5
   end:RCURLY (SEMI!)? EOF!
 ;
 


commonProgramHeader
 :  (autoGeneratedDateTag)?
  (p:PROGRAM^<AST=no.oss.gos.FunctionNode> pId:ID {isProgram = true;} |
CATEGORY^ cId:ID {isCategory = true;} | CONSTANTS^ gId:ID {isConstants =
true;}) LCURLY
 ; 
 
 
commonTitleDescriptionUsesStoresBlock1
 {
  String programTitle = null, programDescription = null;
  int pos = 0; // rewind position set below
 }
 // We need to terminate the (title)? (description)?
(storesDeclarations)? (usesDeclarations)? construction
 // or we get an ambiguity: Thus, we state that we expect (CONSTANTS! |
LIBRARY! | FORMULAS!) following this optional construct
 // But then we need to rewind before continuing: Thus we use a mark()
and rewind() to do this !
 : {isProgram | isCategory}? (programTitle=title)?
(programDescription=description)? (storesDeclarations)?
(usesDeclarations)? {pos=mark();} (CONSTANTS! | LIBRARY! | FORMULAS!)
   { 
    rewind(pos);
    options.setProgramDescription(programDescription); 
    options.setProgramTitle(programTitle);
   }
 | {isProgram}? ( )         ****************   NOTE : These kind of
empty productions FAIL to match an empty Production when using BITSET
generation !
 | {isCategory}? ( )
 | {isConstants}?   ( )
 ;
 
commonConstantsBlock2
 : {isCategory}? constantDeclarations
 | {isCategory}? ( )  
 | {isConstants}? constantDeclarationsList
 | {isProgram}? ( )
 ;
 
commonLibraryBlock3
 : {isCategory}? libraryDeclarations
 | {isCategory}? ( )  
 | {isProgram}?  ( ) 
 | {isConstants}? ( ) 
 ;
 
commonFormulaBlock4
 : {isProgram}? formulaDeclarations
 | {isCategory}? formulaDeclarations
 | {isConstants}? ( ) 
 ;
 
commonFunctionCallBlock5
 : {isProgram}? mainCall SEMI!   
 | {isCategory}? ( ) 
 | {isConstants}? ( )
 ; 
 
.........
 
 

------------------------------------ End Parser Code Excerpt
-------------------------------------------
 
 
regards

Geir Ove Skjaervik
Objective Software Solutions
Norway
Phone: Int+907-48-869
Fax: Int+47-6988-5947
E-mail: objective.software@online.no
WEB: http://objective.bitfikler.com/

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051007/d9633b31/attachment-0001.html
From zhixueyong at hotmail.com  Fri Oct  7 14:23:39 2005
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Fri Oct  7 14:26:17 2005
Subject: [antlr-interest] Do I have to use lex state in this case?
Message-ID: <di6p0r$b7e$1@sea.gmane.org>

In Perl and ruby, regular expression starts and ends with '/', for example:
/perl|ruby/

As we all know, '/' is the divide operator.

In my lexer I need to know wether '/' is the start of regular expression or 
simple a divide operator. Seems I have to reply on the current "context" (by 
introducing lex state). Are better ideas?

Thank you.

Yong
http://seclib.blogspot.com 



From ewbank at gmail.com  Fri Oct  7 16:57:50 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Oct  7 16:57:54 2005
Subject: [antlr-interest] Do I have to use lex state in this case?
In-Reply-To: <di6p0r$b7e$1@sea.gmane.org>
References: <di6p0r$b7e$1@sea.gmane.org>
Message-ID: <dd3a065f0510071657r7127c56doa3c76c4332ad21b3@mail.gmail.com>

If you can figure out the context to know if it is "divide" or
"regex", that's probably your only choice because of ugly math
expressions like "a+b/c*32/d" which would probably match any attempt
at a lex regular expression point of view.

Another option is to tokenize using "divide", and have your parser
recognize when DIV....DIV should be a regex instead of a DIV operator.

For extra credit :-), do you want to match C++ style comments, too? 
from "//" to the end of the line?

On 10/7/05, Xue Yong Zhi <zhixueyong@hotmail.com> wrote:
> In Perl and ruby, regular expression starts and ends with '/', for example:
> /perl|ruby/
>
> As we all know, '/' is the divide operator.
>
> In my lexer I need to know wether '/' is the start of regular expression or
> simple a divide operator. Seems I have to reply on the current "context" (by
> introducing lex state). Are better ideas?
>
> Thank you.
>
> Yong
> http://seclib.blogspot.com
>
>
>
>
From mail at martin-probst.com  Sat Oct  8 08:09:31 2005
From: mail at martin-probst.com (Martin Probst)
Date: Sat Oct  8 08:09:37 2005
Subject: [antlr-interest] Do I have to use lex state in this case?
In-Reply-To: <dd3a065f0510071657r7127c56doa3c76c4332ad21b3@mail.gmail.com>
References: <di6p0r$b7e$1@sea.gmane.org>
	<dd3a065f0510071657r7127c56doa3c76c4332ad21b3@mail.gmail.com>
Message-ID: <1128784171.9678.0.camel@localhost.localdomain>

Hi,

I don't think you'll get around a stateful lexer. Those are ugly (I
know!) but they work. But yours should be quite simple:

a := /foo/ --> RegExp
a := foo / bar --> div

You have two states: expecting an operand and expecting and operator. If
your expecting and operator, '/' is the start of a regular expression.
Otherwise (operand) it's a div. Shouldn't be too difficult - it's just
very annoying to put all the state transitions into place.

> For extra credit :-), do you want to match C++ style comments, too? 
> from "//" to the end of the line?

Well, just lex & parse it as an empty regular expression and then
optimizie it away ;-)

Martin

From dtkien at usfca.edu  Sat Oct  8 13:21:14 2005
From: dtkien at usfca.edu (Kien Te Do)
Date: Sat Oct  8 13:21:17 2005
Subject: [antlr-interest] Get the line number of the last code line of the
	java file
Message-ID: <c66f6ac692d3.c692d3c66f6a@usfca.edu>

Hi all,

With antlr, how can I get the line number of the last code line of the
java file?

Thanks,
-Kien
From parrt at cs.usfca.edu  Sat Oct  8 14:12:52 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Oct  8 14:12:58 2005
Subject: [antlr-interest] Antler alert! 
Message-ID: <C446F3EA-D02F-4320-85F1-A93E25887F79@cs.usfca.edu>

Apparently the San Francisco bay area authorities are aware of the  
impending ANTLR2005 workshop! ;)

"Antler alert! Pet-killing buck at large in Orinda"

http://www.sfgate.com/cgi-bin/article.cgi?file=/c/a/2005/10/07/ 
MNGB1F45GF20.DTL

Ter
From prashant.deva at gmail.com  Sat Oct  8 15:13:08 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sat Oct  8 15:13:10 2005
Subject: [antlr-interest] ANTLR Studio AVAILABLE for DOWNLOAD !!!
Message-ID: <41fed8f80510081513s4c5f3012l7725da6cdfd45927@mail.gmail.com>

Ok, wait is finally over :)

You can download it from -
http://www.antlrstudio.com

Note that the new web site and the shopping system are not available yet, so
i am still calling this a beta.
For details please look at my latest blog posting.

--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/2a7d801e/attachment.html
From prashant.deva at gmail.com  Sat Oct  8 19:06:36 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sat Oct  8 19:06:38 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510081513s4c5f3012l7725da6cdfd45927@mail.gmail.com>
References: <41fed8f80510081513s4c5f3012l7725da6cdfd45927@mail.gmail.com>
Message-ID: <41fed8f80510081906x6319bfc3j2b4f937ade5640a0@mail.gmail.com>

I forgot to mention that you will need-
Eclipse 3.1 or higher
Java 5 or higher
to install Antlr Studio.


On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote:
>
> Ok, wait is finally over :)
>
> You can download it from -
> http://www.antlrstudio.com
>
> Note that the new web site and the shopping system are not available yet,
> so i am still calling this a beta.
> For details please look at my latest blog posting.
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>



--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/88362ea1/attachment.html
From prashant.deva at gmail.com  Sat Oct  8 22:52:53 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sat Oct  8 22:52:55 2005
Subject: [antlr-interest] Tool for generating graphical representation of
	parser rules?
In-Reply-To: <DE3AAA77-4E24-4E77-99E3-AB8C13F23B2E@cs.usfca.edu>
References: <8f5e2d076b5be891502b8648d6ce8ef5@zubinet.org>
	<DE3AAA77-4E24-4E77-99E3-AB8C13F23B2E@cs.usfca.edu>
Message-ID: <41fed8f80510082252u7f69b252i39820bbff144baf5@mail.gmail.com>

If its an antlr 2 grammar, you can always use ANTLR Studio :)

PRASHANT

On 10/6/05, Terence Parr <parrt@cs.usfca.edu> wrote:
>
>
> On Oct 6, 2005, at 3:38 AM, Daniel Zuberb?hler wrote:
>
> > Hi
> >
> > I'm looking for a tool which generates a graphical representation
> > of the
> > parser rules from an antlr grammar. I imagine something like the
> > graphs in
> > this ada reference manual:
> > http://cui.unige.ch/db-research/Enseignement/analyseinfo/Ada95/
> > subprogram_specification.html
> >
> > Does anybody know about such a tool?
>
> ANTLRWorks, the GUI for ANTLR v3, does this automatically. We're
> still racing to work on these tools...prototypes are available in
>
> http://www.antlr.org/download
>
> directory.
>
> Ter




--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/02246d53/attachment.html
From prashant.deva at gmail.com  Sun Oct  9 03:25:11 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Oct  9 03:25:14 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510081906x6319bfc3j2b4f937ade5640a0@mail.gmail.com>
References: <41fed8f80510081513s4c5f3012l7725da6cdfd45927@mail.gmail.com>
	<41fed8f80510081906x6319bfc3j2b4f937ade5640a0@mail.gmail.com>
Message-ID: <41fed8f80510090325h41ab3b3aq86d82006e7d40e95@mail.gmail.com>

Ahem... Some sort of feedback would be useful :)

PRASHANT

On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote:
>
> I forgot to mention that you will need-
> Eclipse 3.1 or higher
> Java 5 or higher
> to install Antlr Studio.
>
>
> On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> >
> > Ok, wait is finally over :)
> >
> > You can download it from -
> > http://www.antlrstudio.com
> >
> > Note that the new web site and the shopping system are not available
> > yet, so i am still calling this a beta.
> > For details please look at my latest blog posting.
> >
> > --
> > Prashant Deva
> > Creator, ANTLR Studio, http://www.antlrstudio.com
> > Founder, Placid Systems
> >
>
>
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>



--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/0b9cb451/attachment.html
From prashant.deva at gmail.com  Sun Oct  9 05:37:12 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Oct  9 05:37:13 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510081513s4c5f3012l7725da6cdfd45927@mail.gmail.com>
References: <41fed8f80510081513s4c5f3012l7725da6cdfd45927@mail.gmail.com>
Message-ID: <41fed8f80510090537h1ab73322o820e4941c22f97fe@mail.gmail.com>

One more thing -

You need to right click on a project and select 'Enable ANTLR Studio' for
the build system and debugging to work :)

PRASHANT

On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote:
>
> Ok, wait is finally over :)
>
> You can download it from -
> http://www.antlrstudio.com
>
> Note that the new web site and the shopping system are not available yet,
> so i am still calling this a beta.
> For details please look at my latest blog posting.
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>



--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/b52fe079/attachment.html
From prashant.deva at gmail.com  Sun Oct  9 07:00:02 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Oct  9 07:00:04 2005
Subject: [antlr-interest] Brainstom: Making ANTLR Studio & Antlr Eclipse
	play together
Message-ID: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>

As you guys already know, if you try using AS(ANTLR Studio) with AE(ANTLR
Eclipse), AS seems to use the antlr provided with AE.
Also you are not supposed to enable AS on a project which has AE enabled on
it.

The solution to the 2nd problem is simple. I have put AS project nature in a
'one-of' set. Scott can put the same 'one-of' set id in his plugin and thus
you wont be able to enable both the plugins on the same project.

But I cant seem to find the solution to the first problem. Can anyone
familiar with eclipse give me any suggestions on solving this?

This is how the current situation is-
In the plugins directory, there are 2 files-
org.antlr_xxx //for use by AE
AntlrStudio.Antlr_1.0.0 //for use by AS

Now what is happening is the AS runtime seems to be using the codegen of '
org.antlr' instead of AntlrStudio.Antlr , although i dont reference
org.antlr anywhere.
This is probably cause the package and class names are same in both the
jars.

So can anyone come up with any ideas on how to solve the problem?

For those wondering about the antlr_2.7.6 jar inside the AntlrStudio_1.0.0
directory, it is the runtime jar which is used when you run your projects.
The AntlrStudio.Antlr is a special jar which contains special code used
internally by AS.
The antlr_2.7.6 is the normal antlr and is provided without a license, so
you can distribute it with your progs, while everything else including the '
AntlrStudio.Antlr_1.0.0.jar' is proprietary.

--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/44f7e6f6/attachment-0001.html
From dcaton at shorelinesoftware.com  Sun Oct  9 09:30:25 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Sun Oct  9 09:30:27 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510090325h41ab3b3aq86d82006e7d40e95@mail.gmail.com>
Message-ID: <1128875971.29621@mx9.mysite4now.com>

Prashant:
 
This may not be the kind of feedback you were looking for, so take it for
whatever it's worth.
 
I'm a Windows, C++ guy. I spend most of my life inside Visual Studio, and I
don't know anything about Java or Eclipse. I have plenty of C++ work and
precious little spare time, so I really have no desire to tinker with Java
or Eclipse. It's hard enough to find time to cut the grass.
 
I go to your web site in anticipation of downloading an IDE for Antlr. Nice
screen shots, looks really interesting. .But nowhere does it say that this
is a plug-in for some other IDE, at least nowhere that was obvious to me. I
eventually figure that out and do a Google search for Eclipse. Now I'm faced
with a large array of things to download. Do I just need the Eclipse SDK, or
do I need any of the other stuff?
 
Then I notice that you need Java to run Eclipse. Great. Now I'm faced with
the prospect of downloading three things from three different sources,
hoping I choose the right downloads and that I install them in the proper
order, and hoping that they'll all play nice and work together.  And more
important, I have to hope that installing all this stuff doesn't somehow
hose up my development machine.
 
Faced with the prospect of wasting many hours trying to get all of this to
work vs., getting back to the mountain of work I have to do, I close my
browser and get back to work.
 
Now, I realize that your target audience is probably Java people and
installing Java and Eclipse might be as simple to you guys as installing
Visual Studio is to me.  If there was some assurance that this stuff is
fairly painless to install and get running, I'd take a look at Antlr Studio
and most likely, purchase a copy, as long as it can work with Antlr's C++
generated parsers. No interest in creating or debugging Java-based parsers.
C# would be a plus, but C++ is a must.
 
I looked for some hand-holding article on your web site, but didn't find
anything at all that would help a Java/Eclipse-challenged programmer such as
myself. Maybe most of the people in the Antlr world are Java people, so I
realize that this might not be worth your time. 
 
My 2 cents, hope its useful.
 
Don
 
 
  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Sunday, October 09, 2005 6:25 AM
To: ANTLR Interest
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!



Ahem... Some sort of feedback would be useful :)

PRASHANT


On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote: 

I forgot to mention that you will need-
Eclipse 3.1 or higher
Java 5 or higher
to install Antlr Studio. 




On 10/9/05, Prashant Deva <prashant.deva@gmail.com
<mailto:prashant.deva@gmail.com> > wrote: 

Ok, wait is finally over :)

You can download it from -
http://www.antlrstudio.com

Note that the new web site and the shopping system are not available yet, so
i am still calling this a beta.
For details please look at my latest blog posting.

-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems





-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
<http://www.antlrstudio.com> 
Founder, Placid Systems





-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/1e4e8a1c/attachment.html
From geiroves at online.no  Sun Oct  9 14:37:25 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Sun Oct  9 14:37:37 2005
Subject: [antlr-interest] Serious Bug when using BitSet generation
	-Forgot: USING ANTLR 2.7.5 !!!!
Message-ID: <001d01c5cd19$a5f94360$0100a8c0@rexii>

Hello,
 
Really nobody have a comment on this? It looks like a bug to me, and a
serious one ! At least ANTLR behaves differently when using if() code
then Bitsets, and it is not supposed to do that, at least now without
issuing any warnings that the bitsets may behave wronly, or what?
 
Terrence ?
 
Geir Ove
-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Geir Ove
Skjaervik
Sent: 7. oktober 2005 02:57
To: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious Bug when using BitSet generation
-Forgot: USING ANTLR 2.7.5 !!!!


Forgot: USING ANTLR 2.7.5 !!!!
 
Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Geir Ove
Skjaervik
Sent: 7. oktober 2005 02:44
To: antlr-interest@antlr.org
Subject: [antlr-interest] Serious Bug when using BitSet generation


Hello,
 
I seem to have encountered a serious bug when using bitset generation
(the default). I have had to turn it of setting
codeGenBitsetTestThreshold=999;
 
The problem occurs in empty productions preceded by syntactic
predicates. I have this in several bocks as shown below. When using
bitset generation, I get NoViableAltException because of the wrong code
generation whenever a particular block should match an empty production.
Here is an excerpt of the code:
 
(Terrence, If you need samples of the generated code with / without
BitSet generation, I will provide it. Right now I am very tired, just
wanted to post this!)
 
------------------------------------ Start Parser Code Excerpt
-------------------------------------------
 
.....
 
parseProgram returns [String r=null]
 : c0:commonProgramHeader 
   c1:commonTitleDescriptionUsesStoresBlock1
   c2:commonConstantsBlock2
   c3:commonLibraryBlock3
   c4:commonFormulaBlock4
   c5:commonFunctionCallBlock5
   end:RCURLY (SEMI!)? EOF!
 ;
 


commonProgramHeader
 :  (autoGeneratedDateTag)?
  (p:PROGRAM^<AST=no.oss.gos.FunctionNode> pId:ID {isProgram = true;} |
CATEGORY^ cId:ID {isCategory = true;} | CONSTANTS^ gId:ID {isConstants =
true;}) LCURLY
 ; 
 
 
commonTitleDescriptionUsesStoresBlock1
 {
  String programTitle = null, programDescription = null;
  int pos = 0; // rewind position set below
 }
 // We need to terminate the (title)? (description)?
(storesDeclarations)? (usesDeclarations)? construction
 // or we get an ambiguity: Thus, we state that we expect (CONSTANTS! |
LIBRARY! | FORMULAS!) following this optional construct
 // But then we need to rewind before continuing: Thus we use a mark()
and rewind() to do this !
 : {isProgram | isCategory}? (programTitle=title)?
(programDescription=description)? (storesDeclarations)?
(usesDeclarations)? {pos=mark();} (CONSTANTS! | LIBRARY! | FORMULAS!)
   { 
    rewind(pos);
    options.setProgramDescription(programDescription); 
    options.setProgramTitle(programTitle);
   }
 | {isProgram}? ( )         ****************   NOTE : These kind of
empty productions FAIL to match an empty Production when using BITSET
generation !
 | {isCategory}? ( )
 | {isConstants}?   ( )
 ;
 
commonConstantsBlock2
 : {isCategory}? constantDeclarations
 | {isCategory}? ( )  
 | {isConstants}? constantDeclarationsList
 | {isProgram}? ( )
 ;
 
commonLibraryBlock3
 : {isCategory}? libraryDeclarations
 | {isCategory}? ( )  
 | {isProgram}?  ( ) 
 | {isConstants}? ( ) 
 ;
 
commonFormulaBlock4
 : {isProgram}? formulaDeclarations
 | {isCategory}? formulaDeclarations
 | {isConstants}? ( ) 
 ;
 
commonFunctionCallBlock5
 : {isProgram}? mainCall SEMI!   
 | {isCategory}? ( ) 
 | {isConstants}? ( )
 ; 
 
.........
 
 

------------------------------------ End Parser Code Excerpt
-------------------------------------------
 
 
regards

Geir Ove Skjaervik
Objective Software Solutions
Norway
Phone: Int+907-48-869
Fax: Int+47-6988-5947
E-mail: objective.software@online.no
WEB: http://objective.bitfikler.com/

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/268021c8/attachment.html
From prashant.deva at gmail.com  Sun Oct  9 15:23:51 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Oct  9 15:23:53 2005
Subject: Fwd: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510091455i488e01d0h4bec7cd63f153a4f@mail.gmail.com>
References: <41fed8f80510090325h41ab3b3aq86d82006e7d40e95@mail.gmail.com>
	<1128875971.29621@mx9.mysite4now.com>
	<41fed8f80510091455i488e01d0h4bec7cd63f153a4f@mail.gmail.com>
Message-ID: <41fed8f80510091523y7009b93dq49f144e7c57dad95@mail.gmail.com>

Hi Don,
Actually the videos make it quite clear that it is for eclipse.

And you can use it for C++, although debugging wont work in such a case.
But you can easily use the grammar editor to type your antlr grammar and put
c++ code inside the actions.

To run AS, you need to download JVM 1.5 from Sun's site and Eclipse 3.1 from
eclipse.org <http://eclipse.org> :)

PRASHANT

On 10/9/05, Don Caton <dcaton@shorelinesoftware.com> wrote:
>
> Prashant:
>  This may not be the kind of feedback you were looking for, so take it for
> whatever it's worth.
>  I'm a Windows, C++ guy. I spend most of my life inside Visual Studio, and
> I don't know anything about Java or Eclipse. I have plenty of C++ work and
> precious little spare time, so I really have no desire to tinker with Java
> or Eclipse. It's hard enough to find time to cut the grass.
>  I go to your web site in anticipation of downloading an IDE for Antlr.
> Nice screen shots, looks really interesting. .But nowhere does it say that
> this is a plug-in for some other IDE, at least nowhere that was obvious to
> me. I eventually figure that out and do a Google search for Eclipse. Now I'm
> faced with a large array of things to download. Do I just need the Eclipse
> SDK, or do I need any of the other stuff?
>  Then I notice that you need Java to run Eclipse. Great. Now I'm faced
> with the prospect of downloading three things from three different sources,
> hoping I choose the right downloads and that I install them in the proper
> order, and hoping that they'll all play nice and work together. And more
> important, I have to hope that installing all this stuff doesn't somehow
> hose up my development machine.
>  Faced with the prospect of wasting many hours trying to get all of this
> to work vs., getting back to the mountain of work I have to do, I close my
> browser and get back to work.
>  Now, I realize that your target audience is probably Java people and
> installing Java and Eclipse might be as simple to you guys as installing
> Visual Studio is to me. If there was some assurance that this stuff is
> fairly painless to install and get running, I'd take a look at Antlr Studio
> and most likely, purchase a copy, as long as it can work with Antlr's C++
> generated parsers. No interest in creating or debugging Java-based parsers.
> C# would be a plus, but C++ is a must.
>  I looked for some hand-holding article on your web site, but didn't find
> anything at all that would help a Java/Eclipse-challenged programmer such as
> myself. Maybe most of the people in the Antlr world are Java people, so I
> realize that this might not be worth your time.
>  My 2 cents, hope its useful.
>  Don
>    ------------------------------
>  *From:* antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org]
> *On Behalf Of *Prashant Deva
> *Sent:* Sunday, October 09, 2005 6:25 AM
> *To:* ANTLR Interest
> *Subject:* [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
>
>  Ahem... Some sort of feedback would be useful :)
>
> PRASHANT
>
> On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> >
> > I forgot to mention that you will need-
> > Eclipse 3.1 or higher
> > Java 5 or higher
> > to install Antlr Studio.
> >
> >
> > On 10/9/05, Prashant Deva <prashant.deva@gmail.com > wrote:
> > >
> > > Ok, wait is finally over :)
> > >
> > > You can download it from -
> > > http://www.antlrstudio.com
> > >
> > > Note that the new web site and the shopping system are not available
> > > yet, so i am still calling this a beta.
> > > For details please look at my latest blog posting.
> > >
> > > --
> > > Prashant Deva
> > > Creator, ANTLR Studio, http://www.antlrstudio.com
> > > Founder, Placid Systems
> > >
> >
> >
> >
> > --
> > Prashant Deva
> > Creator, ANTLR Studio, http://www.antlrstudio.com
> > Founder, Placid Systems
> >
>
>
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/9cf34827/attachment-0001.html
From dcaton at shorelinesoftware.com  Sun Oct  9 17:57:48 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Sun Oct  9 17:58:50 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510091523y7009b93dq49f144e7c57dad95@mail.gmail.com>
Message-ID: <1128906473.32391@mx9.mysite4now.com>

Prashant:
 
Ok, but I didn't watch the videos, I tend to ignore things like that (I have
Flash blocked too). I'm a "just give me the facts" kind of guy. You should
have something on the web site making it clear what the product is, and what
its requirements are.  That's pretty standard stuff for any product.
 
In any case, yes, I know I need to download Java and Eclipse. I think you
kinda missed the point of my message. There's lots of links on the Eclipse
download page. Knowing nothing whatsoever about Eclipse, how is one supposed
to know what is needed to run your plug in?  Is the SDK enough? Do I need
the Java Development tools or the Plugin Environment or the Platform? How
about the Visual Editor?
 
And if you go to Sun's site, there's links to all sorts of things named
"java" this and "java" that. There's "Java 2 Standard Edition" on the
downloads page, and there's links to J2SE 5.0, J2SE 1.4.2 and J2SE 1.3.1.  I
don't see any "JVM 1.5".
 
One of your earlier posts today started out: "As you guys already know, if
you try using AS(ANTLR Studio) with AE(ANTLR Eclipse)..."  No, not of us
"already know". That's the point I was trying to make in my original post.
If you're only focused on those who already know Java and Eclipse, that's
fine.  Maybe that's covers most of the Antlr community, but you shouldn't
assume that everyone already knows about any particular platform, language
or development environment.
 
A short "here's how to get started on a Windows machine without Java"
document would be a great help. I'd invest the time to look at Antlr Studio
if I knew exactly what to install to get up and running with a minimum of
fuss. But I don't have time to go digging around Sun's site or figuring out
what parts of Eclipse I need to install. Like most developers, I've got too
much work to get done and too few hours in the day to do it <g>.
 
Don 
  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Sunday, October 09, 2005 6:24 PM
To: ANTLR Interest
Subject: Fwd: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!




Hi Don,
  Actually the videos make it quite clear that it is for eclipse.

And you can use it for C++, although debugging wont work in such a case.
But you can easily use the grammar editor to type your antlr grammar and put
c++ code inside the actions.

To run AS, you need to download JVM 1.5 from Sun's site and Eclipse 3.1 from
eclipse.org :)

PRASHANT 



On 10/9/05, Don Caton <  <mailto:dcaton@shorelinesoftware.com>
dcaton@shorelinesoftware.com> wrote: 

Prashant:
 
This may not be the kind of feedback you were looking for, so take it for
whatever it's worth.
 
I'm a Windows, C++ guy. I spend most of my life inside Visual Studio, and I
don't know anything about Java or Eclipse. I have plenty of C++ work and
precious little spare time, so I really have no desire to tinker with Java
or Eclipse. It's hard enough to find time to cut the grass.
 
I go to your web site in anticipation of downloading an IDE for Antlr. Nice
screen shots, looks really interesting. .But nowhere does it say that this
is a plug-in for some other IDE, at least nowhere that was obvious to me. I
eventually figure that out and do a Google search for Eclipse. Now I'm faced
with a large array of things to download. Do I just need the Eclipse SDK, or
do I need any of the other stuff?
 
Then I notice that you need Java to run Eclipse. Great. Now I'm faced with
the prospect of downloading three things from three different sources,
hoping I choose the right downloads and that I install them in the proper
order, and hoping that they'll all play nice and work together.  And more
important, I have to hope that installing all this stuff doesn't somehow
hose up my development machine.
 
Faced with the prospect of wasting many hours trying to get all of this to
work vs., getting back to the mountain of work I have to do, I close my
browser and get back to work.
 
Now, I realize that your target audience is probably Java people and
installing Java and Eclipse might be as simple to you guys as installing
Visual Studio is to me.  If there was some assurance that this stuff is
fairly painless to install and get running, I'd take a look at Antlr Studio
and most likely, purchase a copy, as long as it can work with Antlr's C++
generated parsers. No interest in creating or debugging Java-based parsers.
C# would be a plus, but C++ is a must.
 
I looked for some hand-holding article on your web site, but didn't find
anything at all that would help a Java/Eclipse-challenged programmer such as
myself. Maybe most of the people in the Antlr world are Java people, so I
realize that this might not be worth your time. 
 
My 2 cents, hope its useful.
 
Don
 
 
  _____  

From: antlr-interest-bounces@antlr.org [mailto:
<mailto:antlr-interest-bounces@antlr.org> antlr-interest-bounces@antlr.org]
On Behalf Of Prashant Deva
Sent: Sunday, October 09, 2005 6:25 AM
To: ANTLR Interest
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!




Ahem... Some sort of feedback would be useful :)

PRASHANT


On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote: 

I forgot to mention that you will need-
Eclipse 3.1 or higher
Java 5 or higher
to install Antlr Studio. 




On 10/9/05, Prashant Deva <prashant.deva@gmail.com
<mailto:prashant.deva@gmail.com> > wrote: 

Ok, wait is finally over :)

You can download it from -
http://www.antlrstudio.com

Note that the new web site and the shopping system are not available yet, so
i am still calling this a beta.
For details please look at my latest blog posting.

-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems





-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
<http://www.antlrstudio.com> 
Founder, Placid Systems





-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems





-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
<http://www.antlrstudio.com> 
Founder, Placid Systems



-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/ad9568d1/attachment.html
From prashant.deva at gmail.com  Sun Oct  9 18:26:29 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Oct  9 18:26:31 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <1128906473.32391@mx9.mysite4now.com>
References: <41fed8f80510091523y7009b93dq49f144e7c57dad95@mail.gmail.com>
	<1128906473.32391@mx9.mysite4now.com>
Message-ID: <41fed8f80510091826k274fbc17k8709a30488fdadc1@mail.gmail.com>

Please note that this is not the final antlrstudio site. It is currently
meant only for people who would like to try out a pre release version of AS.
As such it contains very little information and handholding. Its really just
a bunch of html files which i manually update with hand to announce the
release of videos and betas.

The new web site which i am currently designing, which will be up on the day
of the final release, will have all the information that you possibly need
to understand and get started with ANTLR Studio :)

PRASHANT

On 10/10/05, Don Caton <dcaton@shorelinesoftware.com> wrote:
>
> Prashant:
>  Ok, but I didn't watch the videos, I tend to ignore things like that (I
> have Flash blocked too). I'm a "just give me the facts" kind of guy. You
> should have something on the web site making it clear what the product is,
> and what its requirements are. That's pretty standard stuff for any product.
>  In any case, yes, I know I need to download Java and Eclipse. I think you
> kinda missed the point of my message. There's lots of links on the Eclipse
> download page. Knowing nothing whatsoever about Eclipse, how is one supposed
> to know what is needed to run your plug in? Is the SDK enough? Do I need the
> Java Development tools or the Plugin Environment or the Platform? How about
> the Visual Editor?
>  And if you go to Sun's site, there's links to all sorts of things named
> "java" this and "java" that. There's "Java 2 Standard Edition" on the
> downloads page, and there's links to J2SE 5.0, J2SE 1.4.2 and J2SE 1.3.1.
> I don't see any "JVM 1.5".
>  One of your earlier posts today started out: "As you guys already know,
> if you try using AS(ANTLR Studio) with AE(ANTLR Eclipse)..." No, not of us
> "already know". That's the point I was trying to make in my original post.
> If you're only focused on those who already know Java and Eclipse, that's
> fine. Maybe that's covers most of the Antlr community, but you shouldn't
> assume that everyone already knows about any particular platform, language
> or development environment.
>  A short "here's how to get started on a Windows machine without Java"
> document would be a great help. I'd invest the time to look at Antlr Studio
> if I knew exactly what to install to get up and running with a minimum of
> fuss. But I don't have time to go digging around Sun's site or figuring out
> what parts of Eclipse I need to install. Like most developers, I've got too
> much work to get done and too few hours in the day to do it <g>.
>  Don
>  ------------------------------
>  *From:* antlr-interest-bounces@antlr.org [mailto:
> antlr-interest-bounces@antlr.org] *On Behalf Of *Prashant Deva
> *Sent:* Sunday, October 09, 2005 6:24 PM
> *To:* ANTLR Interest
> *Subject:* Fwd: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD
> !!!
>
>
> Hi Don,
> Actually the videos make it quite clear that it is for eclipse.
>
> And you can use it for C++, although debugging wont work in such a case.
> But you can easily use the grammar editor to type your antlr grammar and
> put c++ code inside the actions.
>
> To run AS, you need to download JVM 1.5 from Sun's site and Eclipse 3.1from
> eclipse.org <http://eclipse.org> :)
>
> PRASHANT
>
> On 10/9/05, Don Caton < dcaton@shorelinesoftware.com> wrote:
> >
> > Prashant:
> >  This may not be the kind of feedback you were looking for, so take it
> > for whatever it's worth.
> >  I'm a Windows, C++ guy. I spend most of my life inside Visual Studio,
> > and I don't know anything about Java or Eclipse. I have plenty of C++ work
> > and precious little spare time, so I really have no desire to tinker with
> > Java or Eclipse. It's hard enough to find time to cut the grass.
> >  I go to your web site in anticipation of downloading an IDE for Antlr.
> > Nice screen shots, looks really interesting. .But nowhere does it say that
> > this is a plug-in for some other IDE, at least nowhere that was obvious to
> > me. I eventually figure that out and do a Google search for Eclipse. Now I'm
> > faced with a large array of things to download. Do I just need the Eclipse
> > SDK, or do I need any of the other stuff?
> >  Then I notice that you need Java to run Eclipse. Great. Now I'm faced
> > with the prospect of downloading three things from three different sources,
> > hoping I choose the right downloads and that I install them in the proper
> > order, and hoping that they'll all play nice and work together. And more
> > important, I have to hope that installing all this stuff doesn't somehow
> > hose up my development machine.
> >  Faced with the prospect of wasting many hours trying to get all of this
> > to work vs., getting back to the mountain of work I have to do, I close
> > my browser and get back to work.
> >  Now, I realize that your target audience is probably Java people and
> > installing Java and Eclipse might be as simple to you guys as installing
> > Visual Studio is to me. If there was some assurance that this stuff is
> > fairly painless to install and get running, I'd take a look at Antlr Studio
> > and most likely, purchase a copy, as long as it can work with Antlr's C++
> > generated parsers. No interest in creating or debugging Java-based parsers.
> > C# would be a plus, but C++ is a must.
> >  I looked for some hand-holding article on your web site, but didn't
> > find anything at all that would help a Java/Eclipse-challenged programmer
> > such as myself. Maybe most of the people in the Antlr world are Java people,
> > so I realize that this might not be worth your time.
> >  My 2 cents, hope its useful.
> >  Don
> >    ------------------------------
> >  *From:* antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org]
> > *On Behalf Of *Prashant Deva
> > *Sent:* Sunday, October 09, 2005 6:25 AM
> > *To:* ANTLR Interest
> > *Subject:* [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
> >
> >  Ahem... Some sort of feedback would be useful :)
> >
> > PRASHANT
> >
> > On 10/9/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > >
> > > I forgot to mention that you will need-
> > > Eclipse 3.1 or higher
> > > Java 5 or higher
> > > to install Antlr Studio.
> > >
> > >
> > > On 10/9/05, Prashant Deva <prashant.deva@gmail.com > wrote:
> > > >
> > > > Ok, wait is finally over :)
> > > >
> > > > You can download it from -
> > > > http://www.antlrstudio.com
> > > >
> > > > Note that the new web site and the shopping system are not available
> > > > yet, so i am still calling this a beta.
> > > > For details please look at my latest blog posting.
> > > >
> > > > --
> > > > Prashant Deva
> > > > Creator, ANTLR Studio, http://www.antlrstudio.com
> > > > Founder, Placid Systems
> > > >
> > >
> > >
> > >
> > > --
> > > Prashant Deva
> > > Creator, ANTLR Studio, http://www.antlrstudio.com
> > > Founder, Placid Systems
> > >
> >
> >
> >
> > --
> > Prashant Deva
> > Creator, ANTLR Studio, http://www.antlrstudio.com
> > Founder, Placid Systems
> >
> >
>
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/614dafe3/attachment-0001.html
From dcaton at shorelinesoftware.com  Sun Oct  9 18:52:50 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Sun Oct  9 18:52:52 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <41fed8f80510091826k274fbc17k8709a30488fdadc1@mail.gmail.com>
Message-ID: <1128909716.5786@mx9.mysite4now.com>

Prashant:
 
Cool, I'll wait for the final release then. I look forward to trying out
your product, and good luck with it. BTW, add my vote for a Visual Studio
version of the plug-in. Debugging a C++ parser would really be at the top of
my wish list though.
 
Don
 



  _____  

From: Prashant Deva [mailto:prashant.deva@gmail.com] 
Sent: Sunday, October 09, 2005 9:26 PM
To: Don Caton
Cc: ANTLR Interest
Subject: Re: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!


Please note that this is not the final antlrstudio site. It is currently
meant only for people who would like to try out a pre release version of AS.
As such it contains very little information and handholding. Its really just
a bunch of html files which i manually update with hand to announce the
release of videos and betas.

The new web site which i am currently designing, which will be up on the day
of the final release, will have all the information that you possibly need
to understand and get started with ANTLR Studio :)

PRASHANT


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051009/eab20379/attachment.html
From prashant.deva at gmail.com  Sun Oct  9 19:26:54 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Oct  9 19:26:55 2005
Subject: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD !!!
In-Reply-To: <1128909716.5786@mx9.mysite4now.com>
References: <41fed8f80510091826k274fbc17k8709a30488fdadc1@mail.gmail.com>
	<1128909716.5786@mx9.mysite4now.com>
Message-ID: <41fed8f80510091926s2e294c07w27d7cc92d2f0ce51@mail.gmail.com>

Sure :)

PRASHANT

On 10/10/05, Don Caton <dcaton@shorelinesoftware.com> wrote:
>
> Prashant:
>  Cool, I'll wait for the final release then. I look forward to trying out
> your product, and good luck with it. BTW, add my vote for a Visual Studio
> version of the plug-in. Debugging a C++ parser would really be at the top of
> my wish list though.
>  Don
>
>  ------------------------------
> *From:* Prashant Deva [mailto:prashant.deva@gmail.com]
> *Sent:* Sunday, October 09, 2005 9:26 PM
> *To:* Don Caton
> *Cc:* ANTLR Interest
> *Subject:* Re: [antlr-interest] Re: ANTLR Studio AVAILABLE for DOWNLOAD
> !!!
>
> Please note that this is not the final antlrstudio site. It is currently
> meant only for people who would like to try out a pre release version of AS.
> As such it contains very little information and handholding. Its really just
> a bunch of html files which i manually update with hand to announce the
> release of videos and betas.
>
> The new web site which i am currently designing, which will be up on the
> day of the final release, will have all the information that you possibly
> need to understand and get started with ANTLR Studio :)
>
> PRASHANT
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/a6f956be/attachment.html
From scott at javadude.com  Sun Oct  9 20:06:33 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Oct  9 20:12:24 2005
Subject: [antlr-interest] Brainstom: Making ANTLR Studio & Antlr 
	Eclipse play together
In-Reply-To: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
References: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
Message-ID: <27020.65.114.139.158.1128913593.squirrel@www.javadude.com>

I'll have to play around with this at some point.

It really shouldn't be a problem, as Eclipse starts a new classloader for
each plugin, and unless there's a dependency between the plugins, they
shouldn't see each other's jars...
-- Scott



From ccesc at eonomine.com  Sun Oct  9 21:22:07 2005
From: ccesc at eonomine.com (Eric Crampton)
Date: Sun Oct  9 21:19:22 2005
Subject: [antlr-interest] Antlr regex support for {min,max}
Message-ID: <47E5647E-7797-4244-94B3-453CC0862A9F@eonomine.com>

Does Antlr provide a way to match a range of occurrences of a literal  
in a lexer? For example, in a modern egrep implementation, you can do:

   a[0-9]{2}c

which will match 'a' followed by exactly 2 digits followed by 'c'.

   a[0-9]{2,3}c

would match 'a' followed by 2 or 3 digits followed by 'c'. Any way to  
do that in Antlr? I know the second one could be written like so:

   a[0-9][0-9][0-9]?c

but the grammar I'm writing has a lot of occurrences of this and with  
more complicated Antlr expressions like ('0'..'9'). Repeating these  
everywhere makes the grammar very hard to follow and near as I can  
tell, Antlr doesn't provide the {min,max} construct.

Yeah, this is something pretty wacky I'm trying to parse. :-)  Might  
end up hand-coding it, but I'd rather avoid that.

Thanks,
--Eric



From nbsherid at secsme.org.au  Sun Oct  9 22:10:58 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Sun Oct  9 22:11:34 2005
Subject: [antlr-interest] Antlr regex support for {min,max}
In-Reply-To: <47E5647E-7797-4244-94B3-453CC0862A9F@eonomine.com>
Message-ID: <000001c5cd59$12517980$6629198a@nigelnote>



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Eric Crampton
> Sent: Monday, 10 October 2005 2:22 PM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Antlr regex support for {min,max}
> 
> Does Antlr provide a way to match a range of occurrences of a literal
> in a lexer? For example, in a modern egrep implementation, you can do:
> 
>    a[0-9]{2}c
> 
> which will match 'a' followed by exactly 2 digits followed by 'c'.
> 
>    a[0-9]{2,3}c
> 
> would match 'a' followed by 2 or 3 digits followed by 'c'. Any way to
> do that in Antlr? I know the second one could be written like so:
> 
>    a[0-9][0-9][0-9]?c
> 
> but the grammar I'm writing has a lot of occurrences of this and with
> more complicated Antlr expressions like ('0'..'9'). Repeating these
> everywhere makes the grammar very hard to follow and near as I can
> tell, Antlr doesn't provide the {min,max} construct.
> 
> Yeah, this is something pretty wacky I'm trying to parse. :-)  Might
> end up hand-coding it, but I'd rather avoid that.
> 

Hi Eric,

I believe Terence has added this to ANTLR 3.x, but in ANTLR 2.x you can use
a counter variable combined with a semantic predicate. Have a look through
the last few months of the list archive, as this has been discussed fairly
recently.

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435

From torkildr at resheim.no  Mon Oct 10 04:01:16 2005
From: torkildr at resheim.no (Torkild U. Resheim)
Date: Mon Oct 10 04:01:14 2005
Subject: [antlr-interest] Brainstom: Making ANTLR Studio & Antlr Eclipse
	play together
In-Reply-To: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
References: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
Message-ID: <200510101301.16561.torkildr@resheim.no>

On Sunday 09 October 2005 16:00, Prashant Deva wrote:
> As you guys already know, if you try using AS(ANTLR Studio) with AE(ANTLR
> Eclipse), AS seems to use the antlr provided with AE.
Classpath problem.

> Also you are not supposed to enable AS on a project which has AE enabled on
> it.
>
> The solution to the 2nd problem is simple. I have put AS project nature in
> a 'one-of' set. Scott can put the same 'one-of' set id in his plugin and
> thus you wont be able to enable both the plugins on the same project.
>
> But I cant seem to find the solution to the first problem. Can anyone
> familiar with eclipse give me any suggestions on solving this?
Perhaps you should consider assigning an Eclipse builder to the plugin. This 
way which builder(s) will be used (and in which order) is controlled by the 
contents of the .project file.
>
> This is how the current situation is-
> In the plugins directory, there are 2 files-
> org.antlr_xxx //for use by AE
> AntlrStudio.Antlr_1.0.0 //for use by AS
This is a bad plugin name according to the Eclipse norm....

>
> Now what is happening is the AS runtime seems to be using the codegen of '
> org.antlr' instead of AntlrStudio.Antlr , although i dont reference
> org.antlr anywhere.
> This is probably cause the package and class names are same in both the
> jars.
You should probably take a look at the plugin deployment classpaths. It is 
possible to have different versions of the same classes in different plugins.
>
> So can anyone come up with any ideas on how to solve the problem?
>
> For those wondering about the antlr_2.7.6 jar inside the AntlrStudio_1.0.0
> directory, it is the runtime jar which is used when you run your projects.
> The AntlrStudio.Antlr is a special jar which contains special code used
> internally by AS.
> The antlr_2.7.6 is the normal antlr and is provided without a license, so
> you can distribute it with your progs, while everything else including the
> ' AntlrStudio.Antlr_1.0.0.jar' is proprietary.
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
While I'm at it; I've downloaded and tried you product for a couple of days. 
It looks cool :-). I think you should remove all IMarker instances from the 
resource before building, not just your own. If someone has i.e. markers left 
from AE these will never go away the way things are now. Your plugin does not 
seem to contribute some help. I guess it's early days still, but I'm missing 
clues on how to get started with the debugger.
-- 
Med vennlig hilsen / Kind regards                                  ((
Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
bug is indistinguishable from a feature."                         |____|'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/002a7757/attachment.bin
From prashant.deva at gmail.com  Mon Oct 10 04:41:48 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Oct 10 04:41:50 2005
Subject: Fwd: [antlr-interest] Brainstom: Making ANTLR Studio & Antlr Eclipse
	play together
In-Reply-To: <41fed8f80510100441s6c04887ak3ee5eceab2eeaa8c@mail.gmail.com>
References: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
	<200510101301.16561.torkildr@resheim.no>
	<41fed8f80510100441s6c04887ak3ee5eceab2eeaa8c@mail.gmail.com>
Message-ID: <41fed8f80510100441h3c2a2ed1o353211a42a681ce9@mail.gmail.com>

Hi torkild,
>Perhaps you should consider assigning an Eclipse builder to the plugin.
This
>way which builder(s) will be used (and in which order) is controlled by the
>contents of the .project file.
I already do that and in fact the builder is the only place antlr is called.


>You should probably take a look at the plugin deployment classpaths. It is
>possible to have different versions of the same classes in different
plugins.
I am sorry i dont seem to get you.
As i already said, i dont reference the org.antlr jar in any place.

>Your plugin does not
>seem to contribute some help. I guess it's early days still, but I'm
missing
>clues on how to get started with the debugger.
The help manual will be available in the final version as i have said on my
blog.
Meanwhile, you can see a demonstration video of the debugger at
antlrstudio.com <http://antlrstudio.com> :)

PRASHANT

On 10/10/05, Torkild U. Resheim <torkildr@resheim.no> wrote:
>
> On Sunday 09 October 2005 16:00, Prashant Deva wrote:
> > As you guys already know, if you try using AS(ANTLR Studio) with
> AE(ANTLR
> > Eclipse), AS seems to use the antlr provided with AE.
> Classpath problem.
>
> > Also you are not supposed to enable AS on a project which has AE enabled
> on
> > it.
> >
> > The solution to the 2nd problem is simple. I have put AS project nature
> in
> > a 'one-of' set. Scott can put the same 'one-of' set id in his plugin and
>
> > thus you wont be able to enable both the plugins on the same project.
> >
> > But I cant seem to find the solution to the first problem. Can anyone
> > familiar with eclipse give me any suggestions on solving this?
> Perhaps you should consider assigning an Eclipse builder to the plugin.
> This
> way which builder(s) will be used (and in which order) is controlled by
> the
> contents of the .project file.
> >
> > This is how the current situation is-
> > In the plugins directory, there are 2 files-
> > org.antlr_xxx //for use by AE
> > AntlrStudio.Antlr_1.0.0 //for use by AS
> This is a bad plugin name according to the Eclipse norm....
>
> >
> > Now what is happening is the AS runtime seems to be using the codegen of
> '
> > org.antlr' instead of AntlrStudio.Antlr , although i dont reference
> > org.antlr anywhere.
> > This is probably cause the package and class names are same in both the
> > jars.
> You should probably take a look at the plugin deployment classpaths. It is
>
> possible to have different versions of the same classes in different
> plugins.
> >
> > So can anyone come up with any ideas on how to solve the problem?
> >
> > For those wondering about the antlr_2.7.6 jar inside the
> AntlrStudio_1.0.0
> > directory, it is the runtime jar which is used when you run your
> projects.
> > The AntlrStudio.Antlr is a special jar which contains special code used
> > internally by AS.
> > The antlr_2.7.6 is the normal antlr and is provided without a license,
> so
> > you can distribute it with your progs, while everything else including
> the
> > ' AntlrStudio.Antlr_1.0.0.jar' is proprietary.
> >
> > --
> > Prashant Deva
> > Creator, ANTLR Studio, http://www.antlrstudio.com
> > Founder, Placid Systems
> While I'm at it; I've downloaded and tried you product for a couple of
> days.
> It looks cool :-). I think you should remove all IMarker instances from
> the
> resource before building, not just your own. If someone has i.e. markers
> left
> from AE these will never go away the way things are now. Your plugin does
> not
> seem to contribute some help. I guess it's early days still, but I'm
> missing
> clues on how to get started with the debugger.
> --
> Med vennlig hilsen / Kind regards ((
> Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer ))
> Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no |----|_
> Private pages: http://resheim.no - "Any sufficiently advanced | | )
> bug is indistinguishable from a feature." |____|'
>
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/753402fb/attachment-0001.html
From torkildr at resheim.no  Mon Oct 10 05:40:10 2005
From: torkildr at resheim.no (Torkild U. Resheim)
Date: Mon Oct 10 05:40:15 2005
Subject: Fwd: [antlr-interest] Brainstom: Making ANTLR Studio & Antlr
	Eclipse play together
In-Reply-To: <41fed8f80510100441h3c2a2ed1o353211a42a681ce9@mail.gmail.com>
References: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
	<41fed8f80510100441s6c04887ak3ee5eceab2eeaa8c@mail.gmail.com>
	<41fed8f80510100441h3c2a2ed1o353211a42a681ce9@mail.gmail.com>
Message-ID: <200510101440.11004.torkildr@resheim.no>

On Monday 10 October 2005 13:41, Prashant Deva wrote:
> Hi torkild,
>
> >Perhaps you should consider assigning an Eclipse builder to the plugin.
>
> This
>
> >way which builder(s) will be used (and in which order) is controlled by
> > the contents of the .project file.
>
> I already do that and in fact the builder is the only place antlr is
> called.
There is no reference to your plugin in the buildspec and I am using it (your 
plugin that is). There is however an action in the package explorer for 
building the parser. You don't need this if you hook into the build 
framework. Did you implement an IncrementalProjectBuilder or similar?
>
> >You should probably take a look at the plugin deployment classpaths. It is
> >possible to have different versions of the same classes in different
>
> plugins.
> I am sorry i dont seem to get you.
> As i already said, i dont reference the org.antlr jar in any place.
But antlr_2.7.6.jar is distributed with your plugin. Anyway, you're saying 
that your "codegen" is utilizing the wrong ANTLR library and that you're not 
referencing it anywhere. (I'm guessing that this refers to the action that 
generates the code). If you're using a custom version if the ANTLR libraries 
you should really put them in a package with another name. In Eclipse 3.1 
there was introduced a method of controlling access to other plugins and 
libraries. Maybe that could help you out.
>
> >Your plugin does not
> >seem to contribute some help. I guess it's early days still, but I'm
>
> missing
>
> >clues on how to get started with the debugger.
>
> The help manual will be available in the final version as i have said on my
> blog.
> Meanwhile, you can see a demonstration video of the debugger at
> antlrstudio.com <http://antlrstudio.com> :)
I don't watch flash videos ;-) That kind of stuff is also stopped by my 
browser.
>
> PRASHANT
>
[snip]
-- 
Med vennlig hilsen / Kind regards                                  ((
Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
bug is indistinguishable from a feature."                         |____|'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/6f7ffa98/attachment.bin
From oliver.zeigermann at gmail.com  Mon Oct 10 08:53:53 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon Oct 10 08:53:56 2005
Subject: [antlr-interest] Re: lexer labels in v3
In-Reply-To: <C3AEE4CB-84BF-4D46-97C8-DBD694673A58@cs.usfca.edu>
References: <9da4f45205091205566db32e08@mail.gmail.com>
	<9da4f4520509120639455bd795@mail.gmail.com>
	<C3AEE4CB-84BF-4D46-97C8-DBD694673A58@cs.usfca.edu>
Message-ID: <9da4f4520510100853o640541b3u@mail.gmail.com>

Unfortunately, this does not work when the '!' operator is used to
suppres certain parts of the token. Right now I have no idea how to
fix this :(

Any ideas?

Oliver

2005/9/25, Terence Parr <parrt@cs.usfca.edu>:
> Oliver, nice work.  Labels on lexer fragment rule refs now work great:
>
> lexer grammar T;
>
> A : 'a' x=B y="void" z='x' ;
>
> fragment
> B : 'b' ;
>
> It still works, but is slightly inefficient when B is not a fragment.
>
> I added similar stuff to char and string refs.  Note that labelling a
> string should be a token label
>
> x="void"
>
> should define x as a Token right whereas
>
> c='x'
>
> has label c as an int?
>
> Another difference is that labels will be unique to the alternative
> as they can have different types.  In parser/tree parser rules,
> everything is one type: Token or AST so I collect and put labels at
> the start of the rule so you can ref them like this:
>
> ( x:A | x:B )
> {print x;}
>
> pretty handy.  Are you ok with the inconsistency?  It's rare to label
> stuff in the lexer so this is probably ok.
>
> The code block for A is (comment auto generated):
>
>          // t.g:3:5: 'a' x= B y= "void" z= 'x'
>          {
>          match('a');
>          int xStart = getCharIndex();
>          mB();
>          Token x = new CommonToken(input, Token.INVALID_TOKEN_TYPE,
> Token.DEFAULT_CHANNEL, xStart, getCharIndex()-1);
>
>          int yStart = getCharIndex();
>          match("void");
>          Token y = new CommonToken(input, Token.INVALID_TOKEN_TYPE,
> Token.DEFAULT_CHANNEL, yStart, getCharIndex()-1);
>
>          int z = input.LA(1);
>          match('x');
>          }
>
> Oh, wildcard labels work too :)
>
> Ter
>
> On Sep 12, 2005, at 6:39 AM, Oliver Zeigermann wrote:
>
> > Modifying template lexerRuleRef in Java.stg
> > (org/antlr/codegen/templates/) to this
> >
> > lexerRuleRef(label,rule,args) ::= <<
> > <if(label)>
> > int <label>Start = getCharIndex();<\n>
> > m<rule>(<args>);<\n>
> > Token <label> = new CommonToken(input, Token.INVALID_TOKEN_TYPE,
> > Token.DEFAULT_CHANNEL, <label>Start, getCharIndex()-1);<\n>
> > <else>
> > m<rule>(<args>);<\n>
> > <endif>
> >
> >>>
> >>>
> >
> > allowed me to have labled lexer fragments like
> >
> > name=GENERIC_ID
> >
> > ...
> >
> > fragment GENERIC_ID     : ... ;
> >
> > Oliver
> >
> >
> > 2005/9/12, Oliver Zeigermann <oliver.zeigermann@gmail.com>:
> >
> >> In codegen.g, rule atom the attribute "label" is set for
> >> lexerStringRef, charRef and lexerRuleRef while there is no attribute
> >> label for these rules. This causes an error upon generation.
> >>
> >> Obvious solution: either remove code that sets "label" (already done
> >> at certain parts of rule atom) or add attribute "label" to the
> >> templates.
> >>
> >> Oliver
> >>
> >
>
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
>
>
From parrt at cs.usfca.edu  Mon Oct 10 09:57:28 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Oct 10 09:57:35 2005
Subject: [antlr-interest] Re: lexer labels in v3
In-Reply-To: <9da4f4520510100853o640541b3u@mail.gmail.com>
References: <9da4f45205091205566db32e08@mail.gmail.com>
	<9da4f4520509120639455bd795@mail.gmail.com>
	<C3AEE4CB-84BF-4D46-97C8-DBD694673A58@cs.usfca.edu>
	<9da4f4520510100853o640541b3u@mail.gmail.com>
Message-ID: <5002E3E4-962A-40DC-8342-76D69E75190E@cs.usfca.edu>


On Oct 10, 2005, at 8:53 AM, Oliver Zeigermann wrote:

> Unfortunately, this does not work when the '!' operator is used to
> suppres certain parts of the token. Right now I have no idea how to
> fix this :(

Do you mean in general or when using labels?  I have not implemented  
the "don't include char" ! feature yet ;)

Ter

From christopher.d.schultz at comcast.net  Mon Oct 10 10:20:07 2005
From: christopher.d.schultz at comcast.net (Christopher Schultz)
Date: Mon Oct 10 10:18:13 2005
Subject: [antlr-interest] antlr jar dependency
In-Reply-To: <20051004152906.73093.qmail@web30807.mail.mud.yahoo.com>
References: <20051004152906.73093.qmail@web30807.mail.mud.yahoo.com>
Message-ID: <434AA2C7.2000809@comcast.net>

All,

> Long answer: Not everything in antlr.jar is actually
> needed for runtime. There is also a separate antlr
> runtime jar file floating somewhere that containes
> only the classes needed at runtime.

I have one myself:

-r--r--r--  1 chris users  47138 Feb 14  2005 antlr-2.7.3-runtime.jar

47k is an order of magnitude smaller than the entire ANTLR JAR itself.
47k is still not exactly cheap over a slow network connection (like a
56k connection), but if you're going to use ANTLR, you pretty much need
the support library.

-chris
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 254 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/b34b46d8/signature.bin
From geiroves at online.no  Mon Oct 10 13:33:37 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Mon Oct 10 13:33:49 2005
Subject: FW: [antlr-interest] Serious Bug when using BitSet generation-Forgot:
	USING ANTLR 2.7.5 !!!!
Message-ID: <001a01c5cdd9$e5e7faf0$0100a8c0@rexii>

Hello Terrence,
 
When you have the time, can you please consider this problem ? It looks
like a bug to me as my code work when I do NOT use Bitsets.However, I
guess the if() code is more time consuming. I also think it is important
for everyone to know about this scenario, and how to avoid it if
possible.
 
 
Geir Ove
 
-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Geir Ove
Skjaervik
Sent: 9. oktober 2005 23:37
To: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious Bug when using BitSet
generation-Forgot: USING ANTLR 2.7.5 !!!!


Hello,
 
Really nobody have a comment on this? It looks like a bug to me, and a
serious one ! At least ANTLR behaves differently when using if() code
then Bitsets, and it is not supposed to do that, at least now without
issuing any warnings that the bitsets may behave wronly, or what?
 
Terrence ?
 
Geir Ove
-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Geir Ove
Skjaervik
Sent: 7. oktober 2005 02:57
To: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious Bug when using BitSet generation
-Forgot: USING ANTLR 2.7.5 !!!!


Forgot: USING ANTLR 2.7.5 !!!!
 
Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Geir Ove
Skjaervik
Sent: 7. oktober 2005 02:44
To: antlr-interest@antlr.org
Subject: [antlr-interest] Serious Bug when using BitSet generation


Hello,
 
I seem to have encountered a serious bug when using bitset generation
(the default). I have had to turn it of setting
codeGenBitsetTestThreshold=999;
 
The problem occurs in empty productions preceded by syntactic
predicates. I have this in several bocks as shown below. When using
bitset generation, I get NoViableAltException because of the wrong code
generation whenever a particular block should match an empty production.
Here is an excerpt of the code:
 
(Terrence, If you need samples of the generated code with / without
BitSet generation, I will provide it. Right now I am very tired, just
wanted to post this!)
 
------------------------------------ Start Parser Code Excerpt
-------------------------------------------
 
.....
 
parseProgram returns [String r=null]
 : c0:commonProgramHeader 
   c1:commonTitleDescriptionUsesStoresBlock1
   c2:commonConstantsBlock2
   c3:commonLibraryBlock3
   c4:commonFormulaBlock4
   c5:commonFunctionCallBlock5
   end:RCURLY (SEMI!)? EOF!
 ;
 


commonProgramHeader
 :  (autoGeneratedDateTag)?
  (p:PROGRAM^<AST=no.oss.gos.FunctionNode> pId:ID {isProgram = true;} |
CATEGORY^ cId:ID {isCategory = true;} | CONSTANTS^ gId:ID {isConstants =
true;}) LCURLY
 ; 
 
 
commonTitleDescriptionUsesStoresBlock1
 {
  String programTitle = null, programDescription = null;
  int pos = 0; // rewind position set below
 }
 // We need to terminate the (title)? (description)?
(storesDeclarations)? (usesDeclarations)? construction
 // or we get an ambiguity: Thus, we state that we expect (CONSTANTS! |
LIBRARY! | FORMULAS!) following this optional construct
 // But then we need to rewind before continuing: Thus we use a mark()
and rewind() to do this !
 : {isProgram | isCategory}? (programTitle=title)?
(programDescription=description)? (storesDeclarations)?
(usesDeclarations)? {pos=mark();} (CONSTANTS! | LIBRARY! | FORMULAS!)
   { 
    rewind(pos);
    options.setProgramDescription(programDescription); 
    options.setProgramTitle(programTitle);
   }
 | {isProgram}? ( )         ****************   NOTE : These kind of
empty productions FAIL to match an empty Production when using BITSET
generation !
 | {isCategory}? ( )
 | {isConstants}?   ( )
 ;
 
commonConstantsBlock2
 : {isCategory}? constantDeclarations
 | {isCategory}? ( )  
 | {isConstants}? constantDeclarationsList
 | {isProgram}? ( )
 ;
 
commonLibraryBlock3
 : {isCategory}? libraryDeclarations
 | {isCategory}? ( )  
 | {isProgram}?  ( ) 
 | {isConstants}? ( ) 
 ;
 
commonFormulaBlock4
 : {isProgram}? formulaDeclarations
 | {isCategory}? formulaDeclarations
 | {isConstants}? ( ) 
 ;
 
commonFunctionCallBlock5
 : {isProgram}? mainCall SEMI!   
 | {isCategory}? ( ) 
 | {isConstants}? ( )
 ; 
 
.........
 
 

------------------------------------ End Parser Code Excerpt
-------------------------------------------
 
 
regards

Geir Ove Skjaervik
Objective Software Solutions
Norway
Phone: Int+907-48-869
Fax: Int+47-6988-5947
E-mail: objective.software@online.no
WEB: http://objective.bitfikler.com/

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051010/d4c6b0cf/attachment.html
From ric.klaren at gmail.com  Mon Oct 10 15:08:26 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct 10 15:07:35 2005
Subject: FW: [antlr-interest] Serious Bug when using BitSet
	generation-Forgot
In-Reply-To: <001a01c5cdd9$e5e7faf0$0100a8c0@rexii>
References: <001a01c5cdd9$e5e7faf0$0100a8c0@rexii>
Message-ID: <434AE65A.5050908@gmail.com>

Hi,

Geir Ove Skjaervik wrote:
> When you have the time, can you please consider this problem ? It looks
> like a bug to me as my code work when I do NOT use Bitsets.However, I
> guess the if() code is more time consuming. I also think it is important
> for everyone to know about this scenario, and how to avoid it if
> possible.

To avoid it my guess would be: don't make rules that match nothing.
Another work around is to change the bitset option for the rule (not
100% sure if that is supported) Empty rules are generally a good source
for unintuitive (and now also) bad behaviour with antlr.

I myself will probably not have much time to look at it this week
(workshop/trip preparations). Could you make a small example grammar of
this (it's enough if it produces code) makes bughunting faster. I will
probably have some time to look at it before/during the workshop next week.

Cheers,

Ric
From parrt at cs.usfca.edu  Mon Oct 10 15:08:48 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Oct 10 15:08:54 2005
Subject: [antlr-interest] Serious Bug when using BitSet generation-Forgot:
	USING ANTLR 2.7.5 !!!!
In-Reply-To: <001a01c5cdd9$e5e7faf0$0100a8c0@rexii>
References: <001a01c5cdd9$e5e7faf0$0100a8c0@rexii>
Message-ID: <B35160CC-E3E9-46E1-8C82-FD5B9A73D32B@cs.usfca.edu>

Hi Geir,

I'm overwhelmed preparing for the ANTLR2005 workshop at the  
moment...sorry for my lack of responsiveness at the moment...perhaps  
you can ping me again in a couple of weeks.

Ter
On Oct 10, 2005, at 1:33 PM, Geir Ove Skjaervik wrote:

> Hello Terrence,
>
> When you have the time, can you please consider this problem ? It  
> looks like a bug to me as my code work when I do NOT use  
> Bitsets.However, I guess the if() code is more time consuming. I  
> also think it is important for everyone to know about this  
> scenario, and how to avoid it if possible.
>
>
> Geir Ove
>
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest- 
> bounces@antlr.org] On Behalf Of Geir Ove Skjaervik
> Sent: 9. oktober 2005 23:37
> To: antlr-interest@antlr.org
> Subject: RE: [antlr-interest] Serious Bug when using BitSet  
> generation-Forgot: USING ANTLR 2.7.5 !!!!
>
> Hello,
>
> Really nobody have a comment on this? It looks like a bug to me,  
> and a serious one ! At least ANTLR behaves differently when using if 
> () code then Bitsets, and it is not supposed to do that, at least  
> now without issuing any warnings that the bitsets may behave  
> wronly, or what?
>
> Terrence ?
>
> Geir Ove
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest- 
> bounces@antlr.org] On Behalf Of Geir Ove Skjaervik
> Sent: 7. oktober 2005 02:57
> To: antlr-interest@antlr.org
> Subject: RE: [antlr-interest] Serious Bug when using BitSet  
> generation -Forgot: USING ANTLR 2.7.5 !!!!
>
> Forgot: USING ANTLR 2.7.5 !!!!
>
> Geir Ove
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest- 
> bounces@antlr.org] On Behalf Of Geir Ove Skjaervik
> Sent: 7. oktober 2005 02:44
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Serious Bug when using BitSet generation
>
> Hello,
>
> I seem to have encountered a serious bug when using bitset  
> generation (the default). I have had to turn it of setting   
> codeGenBitsetTestThreshold=999;
>
> The problem occurs in empty productions preceded by syntactic  
> predicates. I have this in several bocks as shown below. When using  
> bitset generation, I get NoViableAltException because of the wrong  
> code generation whenever a particular block should match an empty  
> production. Here is an excerpt of the code:
>
> (Terrence, If you need samples of the generated code with / without  
> BitSet generation, I will provide it. Right now I am very tired,  
> just wanted to post this!)
>
> ------------------------------------ Start Parser Code Excerpt  
> -------------------------------------------
>
> .....
>
> parseProgram returns [String r=null]
>  : c0:commonProgramHeader
>    c1:commonTitleDescriptionUsesStoresBlock1
>    c2:commonConstantsBlock2
>    c3:commonLibraryBlock3
>    c4:commonFormulaBlock4
>    c5:commonFunctionCallBlock5
>    end:RCURLY (SEMI!)? EOF!
>  ;
>
>
> commonProgramHeader
>  :  (autoGeneratedDateTag)?
>   (p:PROGRAM^<AST=no.oss.gos.FunctionNode> pId:ID {isProgram =  
> true;} | CATEGORY^ cId:ID {isCategory = true;} | CONSTANTS^ gId:ID  
> {isConstants = true;}) LCURLY
>  ;
>
>
> commonTitleDescriptionUsesStoresBlock1
>  {
>   String programTitle = null, programDescription = null;
>   int pos = 0; // rewind position set below
>  }
>  // We need to terminate the (title)? (description)?  
> (storesDeclarations)? (usesDeclarations)? construction
>  // or we get an ambiguity: Thus, we state that we expect  
> (CONSTANTS! | LIBRARY! | FORMULAS!) following this optional construct
>  // But then we need to rewind before continuing: Thus we use a mark 
> () and rewind() to do this !
>  : {isProgram | isCategory}? (programTitle=title)?  
> (programDescription=description)? (storesDeclarations)?  
> (usesDeclarations)? {pos=mark();} (CONSTANTS! | LIBRARY! | FORMULAS!)
>    {
>     rewind(pos);
>     options.setProgramDescription(programDescription);
>     options.setProgramTitle(programTitle);
>    }
>  | {isProgram}? ( )         ****************   NOTE : These kind of  
> empty productions FAIL to match an empty Production when using  
> BITSET generation !
>  | {isCategory}? ( )
>  | {isConstants}?   ( )
>  ;
>
> commonConstantsBlock2
>  : {isCategory}? constantDeclarations
>  | {isCategory}? ( )
>  | {isConstants}? constantDeclarationsList
>  | {isProgram}? ( )
>  ;
>
> commonLibraryBlock3
>  : {isCategory}? libraryDeclarations
>  | {isCategory}? ( )
>  | {isProgram}?  ( )
>  | {isConstants}? ( )
>  ;
>
> commonFormulaBlock4
>  : {isProgram}? formulaDeclarations
>  | {isCategory}? formulaDeclarations
>  | {isConstants}? ( )
>  ;
>
> commonFunctionCallBlock5
>  : {isProgram}? mainCall SEMI!
>  | {isCategory}? ( )
>  | {isConstants}? ( )
>  ;
>
> .........
>
>
> ------------------------------------ End Parser Code Excerpt  
> -------------------------------------------
>
>
> regards
>
> Geir Ove Skjaervik
> Objective Software Solutions
> Norway
> Phone: Int+907-48-869
> Fax: Int+47-6988-5947
> E-mail: objective.software@online.no
> WEB: http://objective.bitfikler.com/
>
>

From oliver.zeigermann at gmail.com  Mon Oct 10 15:53:52 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon Oct 10 15:53:58 2005
Subject: [antlr-interest] Re: lexer labels in v3
In-Reply-To: <5002E3E4-962A-40DC-8342-76D69E75190E@cs.usfca.edu>
References: <9da4f45205091205566db32e08@mail.gmail.com>
	<9da4f4520509120639455bd795@mail.gmail.com>
	<C3AEE4CB-84BF-4D46-97C8-DBD694673A58@cs.usfca.edu>
	<9da4f4520510100853o640541b3u@mail.gmail.com>
	<5002E3E4-962A-40DC-8342-76D69E75190E@cs.usfca.edu>
Message-ID: <9da4f4520510101553x6d8446e8r@mail.gmail.com>

2005/10/10, Terence Parr <parrt@cs.usfca.edu>:
>
> On Oct 10, 2005, at 8:53 AM, Oliver Zeigermann wrote:
>
> > Unfortunately, this does not work when the '!' operator is used to
> > suppres certain parts of the token. Right now I have no idea how to
> > fix this :(
>
> Do you mean in general or when using labels?  I have not implemented
> the "don't include char" ! feature yet ;)

Oh, I was talking about labels. Did not know it does not work in
general as well. So I will wait until it actually works :)

Oliver
From jimi at temporal-wave.com  Mon Oct 10 16:34:32 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon Oct 10 16:34:37 2005
Subject: [antlr-interest] ANTLR 3 - New package for Conference?
References: <9da4f45205091205566db32e08@mail.gmail.com><9da4f4520509120639455bd795@mail.gmail.com><C3AEE4CB-84BF-4D46-97C8-DBD694673A58@cs.usfca.edu><9da4f4520510100853o640541b3u@mail.gmail.com>
	<5002E3E4-962A-40DC-8342-76D69E75190E@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A487@wavemachine.temporal-wave.com>

Are there plans to make a new ANTLR 3 EA 4 bundle for the conference? It would be especially useful for the conference.... and me.. and the conference of course. Jean has added some perforce support to ANTLR works, there are new fixes to ANTLR 3 lexer and things and Ric swore blind he would have the C generator templates back working for the conference. 
 
So for the sake of the conference, and for those of us that cannot attend because our jobs demand we travel to the other side of the country to Boston instead of just down the road to SF that week, and because I don't want to mess about trying to get ANTLR works to deal with Terence's updates, then surely a new EA4 jar would be in order? ;-)
 
Jim
From parrt at cs.usfca.edu  Mon Oct 10 17:03:01 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Oct 10 17:03:08 2005
Subject: [antlr-interest] ANTLR 3 - New package for Conference?
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A487@wavemachine.temporal-wave.com>
References: <9da4f45205091205566db32e08@mail.gmail.com><9da4f4520509120639455bd795@mail.gmail.com><C3AEE4CB-84BF-4D46-97C8-DBD694673A58@cs.usfca.edu><9da4f4520510100853o640541b3u@mail.gmail.com>
	<5002E3E4-962A-40DC-8342-76D69E75190E@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A487@wavemachine.temporal-wave.com>
Message-ID: <79CC53C3-CA24-49D2-B812-EBB4281BBEB5@cs.usfca.edu>


On Oct 10, 2005, at 4:34 PM, Jim Idle wrote:

> Are there plans to make a new ANTLR 3 EA 4 bundle for the conference?

Yep!

> It would be especially useful for the conference.... and me.. and  
> the conference of course. Jean has added some perforce support to  
> ANTLR works, there are new fixes to ANTLR 3 lexer and things and  
> Ric swore blind he would have the C generator templates back  
> working for the conference.

We'll do ANTLR before the workshop (Ric will be here early) and  
ANTLRWOrks will get another cut right after the workshop...

> So for the sake of the conference, and for those of us that cannot  
> attend because our jobs demand we travel to the other side of the  
> country to Boston instead of just down the road to SF that week,  
> and because I don't want to mess about trying to get ANTLR works to  
> deal with Terence's updates, then surely a new EA4 jar would be in  
> order? ;-)

:) SOoooooon!

Ter
From geiroves at online.no  Tue Oct 11 02:45:32 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Tue Oct 11 02:45:41 2005
Subject: FW: [antlr-interest] Serious Bug when using
	BitSetgeneration-Forgot
In-Reply-To: <434AE65A.5050908@gmail.com>
Message-ID: <000501c5ce48$8721beb0$0100a8c0@rexii>

Hello,

Thanks a lot for taking the time to look at my problem !

The reason why there's empty productions is that I have a common parser
structure that matches several similar looking files. There is most
certainly other ways to do that, one of them is to write out the grammar
for each version completely, but more clever solutions probably exists.
I used the common structure to try to reduce the size of my grammar file
that has already reached 2200 lines.

I am also under considerable time pressure with a delivery coming up in
1 month, and weekly milestones putting pressure on me. So unfortunately
I do not see that I have the time to produce the mini grammar that
reveals the error like you ask for.

Hopefully we can find a solution to this "Empty Pruction & BitSet wrong
code generation". 

It has kept my puzzling about errors in my grammar for a long long time,
but I have put off investigating it because there had been other more
important things to look at. However, I know had to solve it, and it
turned out to be a Bug ! 

Most certainly this problem may have kept other Grammar Writers busy
looking for problems in their grammar, when it actually is ANTLR that
plays a trick on them.  Thus, finding and Solving or Documenting this
Bug seems rather important to me for the ANTLE community. 

Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Ric Klaren
Sent: 11. oktober 2005 00:08
To: antlr-interest@antlr.org
Subject: Re: FW: [antlr-interest] Serious Bug when using
BitSetgeneration-Forgot


Hi,

Geir Ove Skjaervik wrote:
> When you have the time, can you please consider this problem ? It 
> looks like a bug to me as my code work when I do NOT use 
> Bitsets.However, I guess the if() code is more time consuming. I also 
> think it is important for everyone to know about this scenario, and 
> how to avoid it if possible.

To avoid it my guess would be: don't make rules that match nothing.
Another work around is to change the bitset option for the rule (not
100% sure if that is supported) Empty rules are generally a good source
for unintuitive (and now also) bad behaviour with antlr.

I myself will probably not have much time to look at it this week
(workshop/trip preparations). Could you make a small example grammar of
this (it's enough if it produces code) makes bughunting faster. I will
probably have some time to look at it before/during the workshop next
week.

Cheers,

Ric



From atripp at jazillian.com  Tue Oct 11 08:14:15 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Tue Oct 11 08:13:34 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
Message-ID: <434BD6C7.5060904@jazillian.com>

 

>Hi Terence
>
>Please please tell me you didn't code BaseAST class.
>
>
>Ok, now my grudge against that class. After perfectly
>fine declarations in AST interface of tree walking
>methods, this class goes and implements what seems to
>be common 'algorithms'. But instead of using available
>interface, it defines fields ('down' and 'right') and
>uses them liberally throughout the code.
>
>And, now, here I am. I tried making a node class that
>dissociates the logic of keeping track of
>child/sibling /nodes (in short, I implemented a
>mechanism for demand paging the tree or fragments
>thereof), which, (no prizes for guessing), failed
>miserably because in this implementation BaseAST.right
>and BaseAST.down are always null (the magic of
>figuring out and fetching child/sibling is elsewhere).
>
>Now I am crying in pain after debugging for two days
>why the parse tree after my magic is missing about 10%
>of nodes. Tell me what I should do to make it right.
>Please don't tell me to fork the ANTLR code base.
>
>The only option I have right now is to drag myself to
>the bar next door, get drunk and forget for the
>meanwhile that this issue exists :=(
>
>*sob* *sob*
>
>- Akhilesh
>
 
Looks to me that the only places where the "right" and "down" fields are 
misused are in
the addChild() and getNumberOfChildren() methods of BaseAST.
Here is what they should look like:

 /**Add a node to the end of the child list for this node */
    public void addChild(AST node) {
        if (node == null) return;
        BaseAST t = getFirstChild();
        if (t != null) {
            while (t.right != null) {
                t = t.getNextSibling();
            }
            t.right = (BaseAST)node;
        }
        else {
            this.down = (BaseAST)node;
        }
    }

    /** How many children does this node have? */
    public int getNumberOfChildren() {
        BaseAST t = getFirstChild();
        int n = 0;
        if (t != null) {
            n = 1;
            while (t.getNextSibling() != null) {
                t = t.getNextSibling();
                n++;
            }
            return n;
        }
        return n;
    }

From virtualaspirin at yahoo.com  Tue Oct 11 09:24:08 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Tue Oct 11 09:24:11 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <434BD6C7.5060904@jazillian.com>
Message-ID: <20051011162408.21552.qmail@web30810.mail.mud.yahoo.com>

Hi

The problem is bit more than that. If the fields are
removed from BaseAST (there is no reason for them to
be there), following classes are affected:

BaseAST
CommonAST
ParserTree
ParseTreeRule
ParseTreeToken

I finally forked the code, and made changesin ANTLR
rather than copying/pasting the algorithms and making
a new MyBaseAST class that I might need to update
everytime a new release comes over. And I figured that
I can submit the diffs to Terence after I test it.

In our testing so far, there haven't been any
problems. The fix works like a charm and now our
appliction handles multi-million node trees with
default heap settings :-)

- Akhilesh

--- Andy Tripp <atripp@jazillian.com> wrote:
> Looks to me that the only places where the "right"
> and "down" fields are 
> misused are in
> the addChild() and getNumberOfChildren() methods of
> BaseAST.
> Here is what they should look like:
> 
>  /**Add a node to the end of the child list for this
> node */
>     public void addChild(AST node) {
>         if (node == null) return;
>         BaseAST t = getFirstChild();
>         if (t != null) {
>             while (t.right != null) {
>                 t = t.getNextSibling();
>             }
>             t.right = (BaseAST)node;
>         }
>         else {
>             this.down = (BaseAST)node;
>         }
>     }
> 
>     /** How many children does this node have? */
>     public int getNumberOfChildren() {
>         BaseAST t = getFirstChild();
>         int n = 0;
>         if (t != null) {
>             n = 1;
>             while (t.getNextSibling() != null) {
>                 t = t.getNextSibling();
>                 n++;
>             }
>             return n;
>         }
>         return n;
>     }
> 
> 



		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
From atripp at jazillian.com  Tue Oct 11 13:57:58 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Tue Oct 11 13:57:17 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051011162408.21552.qmail@web30810.mail.mud.yahoo.com>
References: <20051011162408.21552.qmail@web30810.mail.mud.yahoo.com>
Message-ID: <434C2756.1000705@jazillian.com>

I guess I'm missing something here. How is it that the BaseAST class doesn't
need "down" and "right" variables. It's the base class for all ASTs, and it
needs to implement the various tree functions functions (addChild, 
getNumberOfChildren,
etc). How can it provide that functionality without having those fields?

Andy

Akhilesh Mritunjai wrote:

>Hi
>
>The problem is bit more than that. If the fields are
>removed from BaseAST (there is no reason for them to
>be there), following classes are affected:
>
>BaseAST
>CommonAST
>ParserTree
>ParseTreeRule
>ParseTreeToken
>
>I finally forked the code, and made changesin ANTLR
>rather than copying/pasting the algorithms and making
>a new MyBaseAST class that I might need to update
>everytime a new release comes over. And I figured that
>I can submit the diffs to Terence after I test it.
>
>In our testing so far, there haven't been any
>problems. The fix works like a charm and now our
>appliction handles multi-million node trees with
>default heap settings :-)
>
>- Akhilesh
>
>--- Andy Tripp <atripp@jazillian.com> wrote:
>  
>
>>Looks to me that the only places where the "right"
>>and "down" fields are 
>>misused are in
>>the addChild() and getNumberOfChildren() methods of
>>BaseAST.
>>Here is what they should look like:
>>
>> /**Add a node to the end of the child list for this
>>node */
>>    public void addChild(AST node) {
>>        if (node == null) return;
>>        BaseAST t = getFirstChild();
>>        if (t != null) {
>>            while (t.right != null) {
>>                t = t.getNextSibling();
>>            }
>>            t.right = (BaseAST)node;
>>        }
>>        else {
>>            this.down = (BaseAST)node;
>>        }
>>    }
>>
>>    /** How many children does this node have? */
>>    public int getNumberOfChildren() {
>>        BaseAST t = getFirstChild();
>>        int n = 0;
>>        if (t != null) {
>>            n = 1;
>>            while (t.getNextSibling() != null) {
>>                t = t.getNextSibling();
>>                n++;
>>            }
>>            return n;
>>        }
>>        return n;
>>    }
>>
>>
>>    
>>
>
>
>
>		
>__________________________________ 
>Yahoo! Music Unlimited 
>Access over 1 million songs. Try it free.
>http://music.yahoo.com/unlimited/
>
>  
>
From david at crlf.net  Tue Oct 11 14:45:03 2005
From: david at crlf.net (David Maxwell)
Date: Tue Oct 11 14:43:07 2005
Subject: [antlr-interest] Re: Overlapping tokens
In-Reply-To: <20051005204632.GG1216@mail>
References: <20051005204632.GG1216@mail>
Message-ID: <20051011214503.GA1109@mail>

On Wed, 05 Oct 2005, David Maxwell wrote:
> In a lex/yacc example, I could do something like this:
> 
> "FooBar"                { printf ("Found a FOOBAR lex token\n");
>                           strcpy(yylval.stval,yytext);
>                           return FOOBAR; }
> 
> [a-zA-Z_]*              { printf("Found a ID lex token\n");
>                           strcpy(yylval.stval,yytext);
>                           return ID; }

Okay - so it was a bit of an RTFM (though no one even said that...)

testLiterals can do most of what I want as described above - but not
perfectly. The generated code takes the {} in the ID token and runs it
before the lookup in the literals table. As a result, the code can't
access the token type - it's not known yet.

The generated code looks like what is shown below. Is there any
construct that allows insertion of code _after_ the token type is set?
(Other than hand-editing the Lexer.cpp after every rebuild.)

void Lexer::mID(bool _createToken) {
	... // match code

	{ Your code here }
#line 442 "Lexer.cpp"
        _ttype = testLiteralsTable(_ttype);
        if ( _createToken && _token==ANTLR_USE_NAMESPACE(antlr)nullToken && _ttype!=ANTLR_USE_NAMESPACE(antlr)Token::SKIP ) {
           _token = makeToken(_ttype);
           _token->setText(text.substr(_begin, text.length()-_begin));
        }
        _returnToken = _token;
        _saveIndex=0;
}

-- 
David Maxwell, david@vex.net|david@maxwell.net --> Unless you have a solution
when you tell them things like that, most people collapse into a gibbering, 
unthinking mass.  This is the same reason why you probably don't tell your 
boss about everything you read on BugTraq!    - Signal 11
From virtualaspirin at yahoo.com  Tue Oct 11 19:08:28 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Tue Oct 11 19:08:30 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <434C2756.1000705@jazillian.com>
Message-ID: <20051012020828.53123.qmail@web30804.mail.mud.yahoo.com>

Hi Andy

Having the fields is wrong due to a primary reason
that  adding fields violates the design principle with
which the class was created.

   BaseAST was clearly  created with the right
decision to implement common algorithms.  Thats why
its abstract. Algorithms, ideally, don't depend on how
the data is stored and design is said to be solid if
interface provides methods through which they can be
implemented. The methods are there in AST interface!

By putting fields, freedom is taken away from
implementer how exactly the nodes will be connected to
each other. eg. Some person may want to have constant
time access to any given child of a node, which
current  fields can't satisfy. So they are left unused
(BAD!), when implementer adds the particular
methods/fields.

I am against the idea that a class meant to hold
algorithms should dictate in any way how the data is
supposed to be stored.

So, either all classes deriving from BaseAST should
implement get/set child/sibling AND get/set text/type,
OR a minimal concrete class can be provided that
derives from BaseAST (other classes derive from this
concrete class) and implements node connectivity
(right/down) and returns empty string and 0
respectively for getText() and getType(). Again,
implementing them in BaseAST is incorrect. It is an
abstract class and *must not* have any say in things
it  has no info about.

Now about why having useless fields is bad (in case
implementer decides to store connectivity info
differently, for example) is that the 8 extra bytes
(two fields, x86 32bit platform) start to matter when
you have multi-million node tree and 8 bytes is like
20% of total node size.

Thanks for listening. You folks have done some damn
good work. I'm ranting about this stuff because I feel
ANTLR can and should be perfect. Its one of the very
few softwares I've found to be so good!

Thanks and Regards
- Akhilesh



--- Andy Tripp <atripp@jazillian.com> wrote:

> I guess I'm missing something here. How is it that
> the BaseAST class doesn't
> need "down" and "right" variables. It's the base
> class for all ASTs, and it
> needs to implement the various tree functions
> functions (addChild, 
> getNumberOfChildren,
> etc). How can it provide that functionality without
> having those fields?
> 
> Andy
> 
> Akhilesh Mritunjai wrote:
> 
> >Hi
> >
> >The problem is bit more than that. If the fields
> are
> >removed from BaseAST (there is no reason for them
> to
> >be there), following classes are affected:
> >
> >BaseAST
> >CommonAST
> >ParserTree
> >ParseTreeRule
> >ParseTreeToken
> >
> >I finally forked the code, and made changesin ANTLR
> >rather than copying/pasting the algorithms and
> making
> >a new MyBaseAST class that I might need to update
> >everytime a new release comes over. And I figured
> that
> >I can submit the diffs to Terence after I test it.
> >
> >In our testing so far, there haven't been any
> >problems. The fix works like a charm and now our
> >appliction handles multi-million node trees with
> >default heap settings :-)
> >
> >- Akhilesh
> >
> >--- Andy Tripp <atripp@jazillian.com> wrote:
> >  
> >
> >>Looks to me that the only places where the "right"
> >>and "down" fields are 
> >>misused are in
> >>the addChild() and getNumberOfChildren() methods
> of
> >>BaseAST.
> >>Here is what they should look like:
> >>
> >> /**Add a node to the end of the child list for
> this
> >>node */
> >>    public void addChild(AST node) {
> >>        if (node == null) return;
> >>        BaseAST t = getFirstChild();
> >>        if (t != null) {
> >>            while (t.right != null) {
> >>                t = t.getNextSibling();
> >>            }
> >>            t.right = (BaseAST)node;
> >>        }
> >>        else {
> >>            this.down = (BaseAST)node;
> >>        }
> >>    }
> >>
> >>    /** How many children does this node have? */
> >>    public int getNumberOfChildren() {
> >>        BaseAST t = getFirstChild();
> >>        int n = 0;
> >>        if (t != null) {
> >>            n = 1;
> >>            while (t.getNextSibling() != null) {
> >>                t = t.getNextSibling();
> >>                n++;
> >>            }
> >>            return n;
> >>        }
> >>        return n;
> >>    }
> >>
> >>
> >>    
> >>
> >
> >
> >
> >		
> >__________________________________ 
> >Yahoo! Music Unlimited 
> >Access over 1 million songs. Try it free.
> >http://music.yahoo.com/unlimited/
> >
> >  
> >
> 



		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
From mail at martin-probst.com  Tue Oct 11 23:55:15 2005
From: mail at martin-probst.com (Martin Probst)
Date: Tue Oct 11 23:55:20 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051012020828.53123.qmail@web30804.mail.mud.yahoo.com>
References: <20051012020828.53123.qmail@web30804.mail.mud.yahoo.com>
Message-ID: <1129100116.9682.1.camel@localhost.localdomain>

Hi,

I agree with you, except this sounds a little strange:

> So, either all classes deriving from BaseAST should
> implement get/set child/sibling AND get/set text/type,
> OR a minimal concrete class can be provided that
> derives from BaseAST (other classes derive from this
> concrete class) and implements node connectivity
> (right/down) and returns empty string and 0
> respectively for getText() and getType(). Again,
> implementing them in BaseAST is incorrect. It is an
> abstract class and *must not* have any say in things
> it  has no info about.

Why would you create a _concrete_ class, and then have it return bogus
values on two method calls? Who should instantiate that class? I guess
it should be abstract, don't you think?

Martin

From gt54-antlr at cyconix.com  Wed Oct 12 00:57:32 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Wed Oct 12 00:57:41 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051011162408.21552.qmail@web30810.mail.mud.yahoo.com>
References: <20051011162408.21552.qmail@web30810.mail.mud.yahoo.com>
Message-ID: <434CC1EC.7060100@cyconix.com>

Akhilesh Mritunjai wrote:

> I finally forked the code, and made changesin ANTLR
> rather than copying/pasting the algorithms and making
> a new MyBaseAST class that I might need to update
> everytime a new release comes over. And I figured that
> I can submit the diffs to Terence after I test it.

I'd be interested in seeing your diffs when you're ready.

Thanks -

Paul

From open.zone at virgin.net  Wed Oct 12 05:57:23 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Oct 12 05:42:14 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051012020828.53123.qmail@web30804.mail.mud.yahoo.com>
Message-ID: <000001c5cf2c$7e0f74e0$6902a8c0@hercules>

> Hi Andy
> 
> Having the fields is wrong due to a primary reason
> that  adding fields violates the design principle with
> which the class was created.

Don't think so but like Paul, I'd like to see your changes before making up
my mind.

>    BaseAST was clearly  created with the right
> decision to implement common algorithms.  Thats why
> its abstract. Algorithms, ideally, don't depend on how
> the data is stored and design is said to be solid if
> interface provides methods through which they can be 
> implemented. The methods are there in AST interface!

Perhaps BaseAST simply implements common algorithms for the CommonASTxxxx
classes. Anyone is free to design a new AST-Node class that implements the
behaviour specified in the AST interface.

> By putting fields, freedom is taken away from
> implementer how exactly the nodes will be connected to
> each other. eg. Some person may want to have constant
> time access to any given child of a node, which
> current  fields can't satisfy. So they are left unused
> (BAD!), when implementer adds the particular
> methods/fields.
> 
> I am against the idea that a class meant to hold
> algorithms should dictate in any way how the data is
> supposed to be stored.

One explanation is that BaseAST is a common subclass for a specific set of
concrete classes that store their data in the down/right fields.

> So, either all classes deriving from BaseAST should
> implement get/set child/sibling AND get/set text/type,
> OR a minimal concrete class can be provided that
> derives from BaseAST (other classes derive from this
> concrete class) and implements node connectivity
> (right/down) and returns empty string and 0
> respectively for getText() and getType(). Again,
> implementing them in BaseAST is incorrect. It is an
> abstract class and *must not* have any say in things
> it  has no info about.

Your insistence that it "*must not* have any say" might be mistaken for a
faith-based belief. The BaseAST class clearly has info about node
connectivity. You have an opinion about how it should [have] be[en] written
and that is fine but, it doesn't make all other opinions wrong.

Anyways, still looking forward to see your changes. Sounds like you've
managed to expand the set of classes that BaseAST can support.

Cheers,

Micheal

From atripp at jazillian.com  Wed Oct 12 07:02:24 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Wed Oct 12 07:01:44 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051012020828.53123.qmail@web30804.mail.mud.yahoo.com>
References: <20051012020828.53123.qmail@web30804.mail.mud.yahoo.com>
Message-ID: <434D1770.6080202@jazillian.com>

Akhilesh,

All ranting aside, I don't see how BaseAST can implement AST
and thus provide methods like getFirstChild() and getNextSibling() without
having any fields. Can you say specifically how that can be done?

You say:

  By putting fields, freedom is taken away from
  implementer how exactly the nodes will be connected to
  each other.

But BaseAST itself implements the tree relationships, not
your subclass. If you want to do that yourself, you shouldn't
be subclassing BaseAST.

Andy

Akhilesh Mritunjai wrote:

>Hi Andy
>
>Having the fields is wrong due to a primary reason
>that  adding fields violates the design principle with
>which the class was created.
>
>   BaseAST was clearly  created with the right
>decision to implement common algorithms.  Thats why
>its abstract. Algorithms, ideally, don't depend on how
>the data is stored and design is said to be solid if
>interface provides methods through which they can be
>implemented. The methods are there in AST interface!
>
>By putting fields, freedom is taken away from
>implementer how exactly the nodes will be connected to
>each other. eg. Some person may want to have constant
>time access to any given child of a node, which
>current  fields can't satisfy. So they are left unused
>(BAD!), when implementer adds the particular
>methods/fields.
>
>I am against the idea that a class meant to hold
>algorithms should dictate in any way how the data is
>supposed to be stored.
>
>So, either all classes deriving from BaseAST should
>implement get/set child/sibling AND get/set text/type,
>OR a minimal concrete class can be provided that
>derives from BaseAST (other classes derive from this
>concrete class) and implements node connectivity
>(right/down) and returns empty string and 0
>respectively for getText() and getType(). Again,
>implementing them in BaseAST is incorrect. It is an
>abstract class and *must not* have any say in things
>it  has no info about.
>
>Now about why having useless fields is bad (in case
>implementer decides to store connectivity info
>differently, for example) is that the 8 extra bytes
>(two fields, x86 32bit platform) start to matter when
>you have multi-million node tree and 8 bytes is like
>20% of total node size.
>
>Thanks for listening. You folks have done some damn
>good work. I'm ranting about this stuff because I feel
>ANTLR can and should be perfect. Its one of the very
>few softwares I've found to be so good!
>
>Thanks and Regards
>- Akhilesh
>
>
>
>--- Andy Tripp <atripp@jazillian.com> wrote:
>
>  
>
>>I guess I'm missing something here. How is it that
>>the BaseAST class doesn't
>>need "down" and "right" variables. It's the base
>>class for all ASTs, and it
>>needs to implement the various tree functions
>>functions (addChild, 
>>getNumberOfChildren,
>>etc). How can it provide that functionality without
>>having those fields?
>>
>>Andy
>>
>>Akhilesh Mritunjai wrote:
>>
>>    
>>
>>>Hi
>>>
>>>The problem is bit more than that. If the fields
>>>      
>>>
>>are
>>    
>>
>>>removed from BaseAST (there is no reason for them
>>>      
>>>
>>to
>>    
>>
>>>be there), following classes are affected:
>>>
>>>BaseAST
>>>CommonAST
>>>ParserTree
>>>ParseTreeRule
>>>ParseTreeToken
>>>
>>>I finally forked the code, and made changesin ANTLR
>>>rather than copying/pasting the algorithms and
>>>      
>>>
>>making
>>    
>>
>>>a new MyBaseAST class that I might need to update
>>>everytime a new release comes over. And I figured
>>>      
>>>
>>that
>>    
>>
>>>I can submit the diffs to Terence after I test it.
>>>
>>>In our testing so far, there haven't been any
>>>problems. The fix works like a charm and now our
>>>appliction handles multi-million node trees with
>>>default heap settings :-)
>>>
>>>- Akhilesh
>>>
>>>--- Andy Tripp <atripp@jazillian.com> wrote:
>>> 
>>>
>>>      
>>>
>>>>Looks to me that the only places where the "right"
>>>>and "down" fields are 
>>>>misused are in
>>>>the addChild() and getNumberOfChildren() methods
>>>>        
>>>>
>>of
>>    
>>
>>>>BaseAST.
>>>>Here is what they should look like:
>>>>
>>>>/**Add a node to the end of the child list for
>>>>        
>>>>
>>this
>>    
>>
>>>>node */
>>>>   public void addChild(AST node) {
>>>>       if (node == null) return;
>>>>       BaseAST t = getFirstChild();
>>>>       if (t != null) {
>>>>           while (t.right != null) {
>>>>               t = t.getNextSibling();
>>>>           }
>>>>           t.right = (BaseAST)node;
>>>>       }
>>>>       else {
>>>>           this.down = (BaseAST)node;
>>>>       }
>>>>   }
>>>>
>>>>   /** How many children does this node have? */
>>>>   public int getNumberOfChildren() {
>>>>       BaseAST t = getFirstChild();
>>>>       int n = 0;
>>>>       if (t != null) {
>>>>           n = 1;
>>>>           while (t.getNextSibling() != null) {
>>>>               t = t.getNextSibling();
>>>>               n++;
>>>>           }
>>>>           return n;
>>>>       }
>>>>       return n;
>>>>   }
>>>>
>>>>
>>>>   
>>>>
>>>>        
>>>>
>>>
>>>		
>>>__________________________________ 
>>>Yahoo! Music Unlimited 
>>>Access over 1 million songs. Try it free.
>>>http://music.yahoo.com/unlimited/
>>>
>>> 
>>>
>>>      
>>>
>
>
>
>		
>__________________________________ 
>Yahoo! Music Unlimited 
>Access over 1 million songs. Try it free.
>http://music.yahoo.com/unlimited/
>
>  
>
From parrt at cs.usfca.edu  Wed Oct 12 08:02:58 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Oct 12 08:03:02 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <000001c5cf2c$7e0f74e0$6902a8c0@hercules>
References: <000001c5cf2c$7e0f74e0$6902a8c0@hercules>
Message-ID: <3CDA4EB5-F77D-4257-8054-A4CA52C559FC@cs.usfca.edu>


On Oct 12, 2005, at 5:57 AM, Micheal J wrote:
> Perhaps BaseAST simply implements common algorithms for the  
> CommonASTxxxx
> classes. Anyone is free to design a new AST-Node class that  
> implements the
> behaviour specified in the AST interface.

Correct and correct. :)  BaseAST was meant simply to abstract out the  
child-sibling tree part so anybody could subclass to add fields like  
string and token type etc...  If you don't want a child-sibling, then  
implement AST.

That said, ANTLR 2 is a mess built under duress in my part time.   
ANTLR3 is much better designed.  The v3 overview slides I'm building  
for the workshop look good :)

Ter

From virtualaspirin at yahoo.com  Wed Oct 12 13:37:14 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Wed Oct 12 13:37:16 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <1129100116.9682.1.camel@localhost.localdomain>
Message-ID: <20051012203714.67334.qmail@web30802.mail.mud.yahoo.com>

Hi,

One, not two to be precise.

'type' is basic property of *any* AST node that we
want to be processable by ANTLR (parser and
treewalker). I don't think 'text' property belongs
here (AST interface) ... its important in parser, but
has no significance at all in treeparser, for example.

The concrete class I proposed would return these
'bogus' values because these values are not required
everywhere. eg, apart from CommonAST, there are three
more descendants of BaseAST - ParseTree, ParseTreeRule
and ParseTreeToken, and none of the three need either
type or text fields. So this concrete class is just a
convenience class so that one doesn't have to
implement 5 or so methods in ParseTreeRule and
ParseTreeToken with same fuctionality... that apart,
it might not be needed at all if one is comfortable of
putting them in both's common abstract parent
ParseTree.

- Akhilesh

--- Martin Probst <mail@martin-probst.com> wrote:

> Hi,
> 
> I agree with you, except this sounds a little
> strange:
> 
> > So, either all classes deriving from BaseAST
> should
> > implement get/set child/sibling AND get/set
> text/type,
> > OR a minimal concrete class can be provided that
> > derives from BaseAST (other classes derive from
> this
> > concrete class) and implements node connectivity
> > (right/down) and returns empty string and 0
> > respectively for getText() and getType(). Again,
> > implementing them in BaseAST is incorrect. It is
> an
> > abstract class and *must not* have any say in
> things
> > it  has no info about.
> 
> Why would you create a _concrete_ class, and then
> have it return bogus
> values on two method calls? Who should instantiate
> that class? I guess
> it should be abstract, don't you think?
> 
> Martin
> 
> 



	
		
__________________________________ 
Yahoo! Mail - PC Magazine Editors' Choice 2005 
http://mail.yahoo.com
From virtualaspirin at yahoo.com  Wed Oct 12 13:47:31 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Wed Oct 12 13:47:35 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <434D1770.6080202@jazillian.com>
Message-ID: <20051012204732.13736.qmail@web30811.mail.mud.yahoo.com>

Hi Andy

--- Andy Tripp <atripp@jazillian.com> wrote:
> All ranting aside, I don't see how BaseAST can
> implement AST
> and thus provide methods like getFirstChild() and
> getNextSibling() without
> having any fields. Can you say specifically how that
> can be done?

It doesn't have to! Thats what my point is.
BaseAST is abstract, so there is no obligation on it
to implement anything it has no idea about. It is the
duty of concrete class inheriting from it to provide
concrete implementations of set/getFirstChild() and
set/getFirstSibling() etc. How the concrete class
implements them is again of no concern of BaseAST. The
contract from AST interface says they return an
instance of type AST... so as long as it is fulfilled
by concrete class everything should be fine.

> But BaseAST itself implements the tree
> relationships, not
> your subclass.

Thats what is wrong. BaseAST should not do it. It
implements just the algorithms, which should have
nothing to do with how data is *actually* stored.

> If you want to do that yourself, you
> shouldn't
> be subclassing BaseAST.

But there is problem with it. BaseAST implements a ton
of algorithms which work just fine. They are tested
and would work (may not be most optimally) whatever
way data is stored. I don't want to reimplement (and
debug) them again... I don't even want to copy/paste
them in MyBaseAST (which will be *identical* to
BaseAST with the two fields less).

So eg, addChild() would work fine even if childs are
stored in a doubly linked list, however, if the
implementer wants better performance she/he might
choose to implement it in fashion that gives O(1) 
performance rather than O(n) which is right now.
Again, it is implementer's choice.

- Akhilesh



		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
From virtualaspirin at yahoo.com  Wed Oct 12 14:16:51 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Wed Oct 12 14:16:57 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <3CDA4EB5-F77D-4257-8054-A4CA52C559FC@cs.usfca.edu>
Message-ID: <20051012211651.90895.qmail@web30803.mail.mud.yahoo.com>

Hi Terence and Micheal

I am attaching the diffs against 2.7.6b2 with this
mail. It works with one known bug. My comments to mail
are inline after the following description.

Changes are-
* Storage of child/sibling relationship data removed
from BaseAST. Algorithm code updated to use the
interface methods rather than data.
* Addition of option 'dupTree' (values, true/false,
default false, option has effect only when 'buildAST'
option is set to true) to Tree Walker grammar. This
option enables duplicating whole tree while only
processing and generating some nodes so that writing
full tree grammar is not required. So for example, you
can write a tree transformer that only walks
identifier declarations and loops and generates a new
tree with loops unrolled... writing grammar for other
constructs won't be required.

Bugs:
1. One known bug where if option 'ASTLabelType' is
used in conjugation with 'dupTree', in generated code,
code to for casting is not generated. So the output
doesn't compile. The workaround is to use the
ASTFactory and add following code-
///
ASTFactory factory = new ASTFactory();
factory.setASTNodeType(MyCustomNode.class);
mytreewalker.setASTFactory(factory);
///

My comments inline-

--- Terence Parr <parrt@cs.usfca.edu> wrote:

> 
> On Oct 12, 2005, at 5:57 AM, Micheal J wrote:
> > Perhaps BaseAST simply implements common
> algorithms for the  
> > CommonASTxxxx
> > classes. Anyone is free to design a new AST-Node
> class that  
> > implements the
> > behaviour specified in the AST interface.
> 
> Correct and correct. :)  BaseAST was meant simply to
> abstract out the child-sibling tree part so anybody 
> could subclass to add fields like string and token 
> type etc...  If you don't want a child-sibling, then
 
> implement AST.

Wrong and wrong impression :)

BaseAST is just a AST algorithms class. AST, by
definition is a tree. So there is nothing wrong with
child-sibling relation... it is fundamental to a tree
and at this hour I fail to see any other way a 'tree'
can be defined. So there is nothing like a 'If you
don't want a child-sibling'... they are required.
However, how I want to *store* this information about
child/sibling should be my choice! If I choose to have
half tree on this machine and half on another, with
info about remote child/sibling in a node with which
getNextSibling/getFirstChild can return the proper
object, be it so.

Again, subclassing AST would mean reimplementing the
15 algorithms that are coded there. That
reimplementation would be a 'copy-paste' job, makes
matter even worse.. the algorithms are perfectly fine
and are absolutely essential. One more correction -
the algorithms are not for CommonAST, they are for
AST. They work on basic AST interface contract and
have nothing to do with how the interface gets
implemented.

> That said, ANTLR 2 is a mess built under duress in
> my part time.   
> ANTLR3 is much better designed.  The v3 overview
> slides I'm building  
> for the workshop look good :)

OMG! If ANTLR 2.x is just a 'part-time' job, you're
god! ANTLR is one of the few good software I've ever
seen (I never laid my hands on a VAX on a PDP-11,
people say it was good too!). Many thanks for ANTLR
and string template :) We're all eagerly waiting for
ANTLR3.

- Akhilesh




		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: new.diff
Type: application/octet-stream
Size: 13755 bytes
Desc: 3096160192-new.diff
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051012/2ba55dfa/new-0001.obj
From atripp at jazillian.com  Wed Oct 12 14:20:59 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Wed Oct 12 14:20:37 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051012204732.13736.qmail@web30811.mail.mud.yahoo.com>
References: <20051012204732.13736.qmail@web30811.mail.mud.yahoo.com>
Message-ID: <434D7E3B.5080603@jazillian.com>

Hi Akhilesh,

OK, I see what you're saying now. Split BaseAST into two: a base class
that has no reference to "down" and "right" fields, and a subclass that 
does.

I guess that makes sense. A couple of things though:
*  the subclass will need to be called BaseAST and not the base class,
or else everyone's code will break.
* You'll still want the "type" and "text" fields in the base class, I 
assume -
I can't imagine an AST that doesn't need these
* I'm still having trouble picturing why you would want to implement
these "down" and "right" fields any other way. I don't doubt that you need
to do it, I'm just saying I can't picture it. So in the end, it may not 
be worth
it for Terrence to fold in this change, because you may be the only
person who ends up needing/wanting it. I know there's no real harm in
him doing it, but it does add a little complexity.

And in defense of BaseAST (and it's author :), it's certainly not 
obvious that
someone might not want to keep "down" and "right" fields, and in fact I 
suspect
that you may be the only user who wants/needs to. So I think the
"this BaseAST design is awful" is unwarranted. Making your change may
be an improvement, but the current design has worked just fine for every 
ANTLR user
for many years, AFAICT.

Andy

Akhilesh Mritunjai wrote:

>Hi Andy
>
>--- Andy Tripp <atripp@jazillian.com> wrote:
>  
>
>>All ranting aside, I don't see how BaseAST can
>>implement AST
>>and thus provide methods like getFirstChild() and
>>getNextSibling() without
>>having any fields. Can you say specifically how that
>>can be done?
>>    
>>
>
>It doesn't have to! Thats what my point is.
>BaseAST is abstract, so there is no obligation on it
>to implement anything it has no idea about. It is the
>duty of concrete class inheriting from it to provide
>concrete implementations of set/getFirstChild() and
>set/getFirstSibling() etc. How the concrete class
>implements them is again of no concern of BaseAST. The
>contract from AST interface says they return an
>instance of type AST... so as long as it is fulfilled
>by concrete class everything should be fine.
>
>  
>
>>But BaseAST itself implements the tree
>>relationships, not
>>your subclass.
>>    
>>
>
>Thats what is wrong. BaseAST should not do it. It
>implements just the algorithms, which should have
>nothing to do with how data is *actually* stored.
>
>  
>
>>If you want to do that yourself, you
>>shouldn't
>>be subclassing BaseAST.
>>    
>>
>
>But there is problem with it. BaseAST implements a ton
>of algorithms which work just fine. They are tested
>and would work (may not be most optimally) whatever
>way data is stored. I don't want to reimplement (and
>debug) them again... I don't even want to copy/paste
>them in MyBaseAST (which will be *identical* to
>BaseAST with the two fields less).
>
>So eg, addChild() would work fine even if childs are
>stored in a doubly linked list, however, if the
>implementer wants better performance she/he might
>choose to implement it in fashion that gives O(1) 
>performance rather than O(n) which is right now.
>Again, it is implementer's choice.
>
>- Akhilesh
>
>
>
>		
>__________________________________ 
>Yahoo! Music Unlimited 
>Access over 1 million songs. Try it free.
>http://music.yahoo.com/unlimited/
>
>  
>
From oliver.zeigermann at gmail.com  Wed Oct 12 14:28:42 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Wed Oct 12 14:28:45 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051012211651.90895.qmail@web30803.mail.mud.yahoo.com>
References: <3CDA4EB5-F77D-4257-8054-A4CA52C559FC@cs.usfca.edu>
	<20051012211651.90895.qmail@web30803.mail.mud.yahoo.com>
Message-ID: <9da4f4520510121428x26692b59t@mail.gmail.com>

2005/10/12, Akhilesh Mritunjai <virtualaspirin@yahoo.com>:
> --- Terence Parr <parrt@cs.usfca.edu> wrote:
> > Correct and correct. :)  BaseAST was meant simply to
> > abstract out the child-sibling tree part so anybody
> > could subclass to add fields like string and token
> > type etc...  If you don't want a child-sibling, then
> > implement AST.
>
> Wrong and wrong impression :)
>
> BaseAST is just a AST algorithms class. AST, by
> definition is a tree. So there is nothing wrong with
> child-sibling relation... it is fundamental to a tree
> and at this hour I fail to see any other way a 'tree'
> can be defined. So there is nothing like a 'If you
> don't want a child-sibling'... they are required.

What about a list of children associated to each node? This way there
is no explicit notion of a sibling or 'left'. Preferred when you are
working with a remote RDBMS where each request has high overhead, so
you might want to retrieve all children in one request.

You could also let each node know who is its parent. This is the only
required information I guess, but in most cases this would be a sick
implementation, though.

Oliver
From virtualaspirin at yahoo.com  Wed Oct 12 14:45:29 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Wed Oct 12 14:45:31 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <434D7E3B.5080603@jazillian.com>
Message-ID: <20051012214529.26414.qmail@web30809.mail.mud.yahoo.com>

Hi Andy

Thanks for the fast reply :)

The good news is that splitting is not even required.
Just move the fields and get/setFirstChild() and
get/setNextSibling to CommonAST and ParseTree classes
and its done and nobody's code will break if they
inherit from CommonAST. I doubt anybody directly
subclasses BaseAST because type and text are basic
properties that pretty much everyone needs, but even
if they do, they can add the two fields and four
getter/setter methods. It would be safe for them too
because rather than code silently breaking, now
compiler will throw an error.

--- Andy Tripp <atripp@jazillian.com> wrote:
> * You'll still want the "type" and "text" fields in
> the base class, I assume -
> I can't imagine an AST that doesn't need these

They're there only for ParseTree, ParseTreeRule and
ParseTreeToken classes... they don't need type or text
:) So I removed them from BaseAST and put them there.

> * I'm still having trouble picturing why you would
> want to implement
> these "down" and "right" fields any other way. I
> don't doubt that you need
> to do it, I'm just saying I can't picture it. So in

Well. One revealation. I work in an EDA tools starup
and am currently lead for developing a compiler and
analyzer for a leading HDL. The trees generated can
have 1-50 million nodes depending on type of input,
which of course I can't keep in memory because memory
requirements for tree alone goes into several
gigabytes. For that I have designed something that is
like a pluggable smart paging mechanism for tree
nodes... it breaks and reconstructs tree fragments on
the fly without ANTLR or our compiler knowing
anything. I can't reveal much without further
permission, but lets just say we're pushing ANTLR to
its limits :) Ah, and we are extremely happy ;-)

> the end, it may not 
> be worth
> it for Terrence to fold in this change, because you
> may be the only
> person who ends up needing/wanting it. I know
<snip>
> Making your change may
> be an improvement, but the current design has worked
> just fine for every 
> ANTLR user for many years, AFAICT.

It is ok. My obligation is just to inform about the
shortcomings I find while pushing the limits :)

One processor, 640kb RAM, petroleum burning cars etc
also worked for everyone for many years... until some
people pushed the limits (I know... bad analogies, but
I think the idea is clear) :-)

- Akhilesh



		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
From geiroves at online.no  Wed Oct 12 16:34:01 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Wed Oct 12 16:34:11 2005
Subject: ANTLR 2.x a Mess ? ( was [antlr-interest] Complaints about
	BaseAST implementation)
In-Reply-To: <3CDA4EB5-F77D-4257-8054-A4CA52C559FC@cs.usfca.edu>
Message-ID: <000001c5cf85$6f494540$bc00a8c0@rexii>

Hello

Terrence said: (snip) <<That said, ANTLR 2 is a mess built under duress
in my part time.  >>

This is disturbing news for all of us that has based projects on 2.x
versions ! It is NOT a matter of just swithcing to 3.0 in the midst of a
project !

I do sincerely hope that wa a figure of speach, and not a signal that
ANTLR bugs like the one I reported with the Wong Bitset Code generation
will not be attended to in 2.x

Sincerely worried

Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
Sent: 12. oktober 2005 17:03
To: ANTLR Interest
Subject: Re: [antlr-interest] Complaints about BaseAST implementation



On Oct 12, 2005, at 5:57 AM, Micheal J wrote:
> Perhaps BaseAST simply implements common algorithms for the
> CommonASTxxxx
> classes. Anyone is free to design a new AST-Node class that  
> implements the
> behaviour specified in the AST interface.

Correct and correct. :)  BaseAST was meant simply to abstract out the  
child-sibling tree part so anybody could subclass to add fields like  
string and token type etc...  If you don't want a child-sibling, then  
implement AST.

That said, ANTLR 2 is a mess built under duress in my part time.   
ANTLR3 is much better designed.  The v3 overview slides I'm building  
for the workshop look good :)

Ter



From parrt at cs.usfca.edu  Wed Oct 12 19:25:06 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Oct 12 19:25:11 2005
Subject: ANTLR 2.x a Mess ? ( was [antlr-interest] Complaints about
	BaseAST implementation)
In-Reply-To: <000001c5cf85$6f494540$bc00a8c0@rexii>
References: <000001c5cf85$6f494540$bc00a8c0@rexii>
Message-ID: <1E65B80B-36CC-4FE5-9708-15F7C8BAB63A@cs.usfca.edu>


On Oct 12, 2005, at 4:34 PM, Geir Ove Skjaervik wrote:

> Hello
>
> Terrence said: (snip) <<That said, ANTLR 2 is a mess built under  
> duress
> in my part time.  >>
>
> This is disturbing news for all of us that has based projects on 2.x
> versions ! It is NOT a matter of just swithcing to 3.0 in the midst  
> of a
> project !

It's a mess internally but it is very stable.

> I do sincerely hope that wa a figure of speach, and not a signal that
> ANTLR bugs like the one I reported with the Wong Bitset Code  
> generation
> will not be attended to in 2.x

I will do my best to find this and fix bugs until 3.0 comes out, but  
for the most part people seem very happy with 2.0.  I was mainly  
indicating how much I don't like the internals of the old system.   
The v3 is almost identical to the old in grammar functionality so I'm  
pleased with the human interface clearly :)

Ter
From jim.crafton at gmail.com  Wed Oct 12 19:58:13 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 12 19:58:16 2005
Subject: [antlr-interest] C++ parser usage ideas
Message-ID: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>

I working on a C++ IDE (yes, yet *another* IDE project :) ).
I am using antlr(2.7.5) and the C++ grammar provided by David Wigg and
friends to handle the job of taking a chunk of C++ and parsing it into
an AST.

My first problem (which I have resolved) was that the parser couldn't
handle macro code at all. so something like:

class MY_API FooBar {
//code here
};

would cause exceptions to be thrown. I found a preprocessor library
which seems to work quite well, that can replace these macros with
their real values.

I can create my custom code graph from this modified text. Each node
in this graph contains the line it's on, and it's column, or start
position.

So now I have another problem, which I am hoping folks here may have
some ideas about how best to tackle:

All the line/col positions are based on the *modified*, pre-processed
code. Ideally I want this information so that I can use it, say, to
position the cursor at a given position in the editor, or to
replace/modify a chunk of text that corresponds to that node. But the
"real" positions need to be based on the original code, so I need some
sort of translation back from one (parsed code) to the other (original
code).

Has anyone done anything like this? Is there a better way to tackle
this? Is there a way to modify the orignal C++ grammar to just skip
over the macros entirely (this would be great, as it would get around
the whole issue). Apologies if this isn't strictly antlr specific, and
if it's inapropriate, just let me know.

Thanks

Jim Crafton


PS: This is for David: I have made some changes to the grammar, if
you'd like them please let me know where to send them to, and what the
best way to do that is. And thanks for GREAT head start on this!
From sohail at taggedtype.net  Wed Oct 12 20:19:18 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Wed Oct 12 20:19:26 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
Message-ID: <1129173559.8579.3.camel@localhost.localdomain>

On Wed, 2005-12-10 at 22:58 -0400, Jim Crafton wrote:
> Has anyone done anything like this? Is there a better way to tackle
> this? Is there a way to modify the orignal C++ grammar to just skip
> over the macros entirely (this would be great, as it would get around
> the whole issue). Apologies if this isn't strictly antlr specific, and
> if it's inapropriate, just let me know.

You might try getting the macro library to do this:

not preprocessed:

#define SOME_MACRO \
{\
line1();  \
line2();  \
}

// the following is at line n
int main() SOME_MACRO

have the library replace it with:

int main()
#line n
{
#line n
line1();
#line n
line2();
#line n
}

Then use this information in your AST?

I don't know how hard it would be.

Sohail

From jim.crafton at gmail.com  Wed Oct 12 20:24:07 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 12 20:24:10 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <1129173559.8579.3.camel@localhost.localdomain>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
	<1129173559.8579.3.camel@localhost.localdomain>
Message-ID: <e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>

It does insert "#line" statements!
Is that what they are for? I've personally never really used them, so
I don't have much/any experience with them. I'l look into that though!
Thanks!
From sohail at taggedtype.net  Wed Oct 12 21:16:18 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Wed Oct 12 21:16:24 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
	<1129173559.8579.3.camel@localhost.localdomain>
	<e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>
Message-ID: <1129176979.8635.3.camel@localhost.localdomain>

On Wed, 2005-12-10 at 23:24 -0400, Jim Crafton wrote:
> It does insert "#line" statements!
> Is that what they are for? I've personally never really used them, so
> I don't have much/any experience with them. I'l look into that though!
> Thanks!

#line statements are how antlr does magic with c++. Try generating a
parser for C++. It will probably have something like:

#line 555 "parser.g"

The above is standard afaik.

From gt54-antlr at cyconix.com  Thu Oct 13 00:41:35 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Oct 13 00:41:49 2005
Subject: [antlr-interest] Complaints about BaseAST implementation
In-Reply-To: <20051012214529.26414.qmail@web30809.mail.mud.yahoo.com>
References: <20051012214529.26414.qmail@web30809.mail.mud.yahoo.com>
Message-ID: <434E0FAF.3090708@cyconix.com>

[Completely OT]

Akhilesh Mritunjai wrote:

> Well. One revealation. I work in an EDA tools starup
> and am currently lead for developing a compiler and
> analyzer for a leading HDL. The trees generated can
> have 1-50 million nodes depending on type of input,
> which of course I can't keep in memory because memory
> requirements for tree alone goes into several
> gigabytes. 

50M nodes? I'm intrigued. If this is RTL, then surely you should be 
doing incremental compilation, and should never reach a tree that size. 
If it's a netlist, then surely it's so dumb and flat that you could do 
just about anything and it would work. And, if you don't know what the 
input is, then you could have some sort of adaptive approach.

:)

From gt54-antlr at cyconix.com  Thu Oct 13 00:57:28 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Oct 13 00:57:35 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>	<1129173559.8579.3.camel@localhost.localdomain>
	<e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>
Message-ID: <434E1368.2040808@cyconix.com>

Jim Crafton wrote:
> It does insert "#line" statements!
> Is that what they are for?

Yes - try using cpp; it's documented.

I've done this with lex (but not Antlr) for C, and it's pretty trivial. 
    You should only attempt to analyse the cpp output. When you've got 
the output, look for any lines starting with '#', (manually!) parse for 
the current file name and line number, and reset your own fname/line 
number variables.

Paul


From virtualaspirin at yahoo.com  Thu Oct 13 01:11:16 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Thu Oct 13 01:11:19 2005
Subject: ANTLR 2.x a Mess ? ( was [antlr-interest] Complaints about
	BaseAST implementation)
In-Reply-To: <000001c5cf85$6f494540$bc00a8c0@rexii>
Message-ID: <20051013081116.43306.qmail@web30808.mail.mud.yahoo.com>

Hi Geir

It was a figure of speech :-)

ANTLR 2.x is rock solid. I can vouch for it. If you
want further assurance, let me say that my career
personally depends on ANTLR... and we have taken that
decision after a LOT of analysis and study. ANTLR
rocks!

ANTLR is backed by more than 2 *decades* of solid work
by Terence. He has made a great contribution.

Oh, and still if you're unsure, ANTLR is under BSD
license (previous versions are in public domain!!!) so
what more one can ask. It is well documented and I am
confident of fixing the bugs we might encounter in the
remote and unlikely situation that no other support is
available. Terence has stood by his creations for more
than two decades and its enough to have faith in his
products. Bugs are part of software development, they
come and go... no big deal there!

- Akhilesh

--- Geir Ove Skjaervik <geiroves@online.no> wrote:

> Hello
> 
> Terrence said: (snip) <<That said, ANTLR 2 is a mess
> built under duress
> in my part time.  >>
> 
> This is disturbing news for all of us that has based
> projects on 2.x
> versions ! It is NOT a matter of just swithcing to
> 3.0 in the midst of a
> project !
> 
> I do sincerely hope that wa a figure of speach, and
> not a signal that
> ANTLR bugs like the one I reported with the Wong
> Bitset Code generation
> will not be attended to in 2.x
> 
> Sincerely worried
> 
> Geir Ove
> 
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org
> [mailto:antlr-interest-bounces@antlr.org] On Behalf
> Of Terence Parr
> Sent: 12. oktober 2005 17:03
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Complaints about
> BaseAST implementation
> 
> 
> 
> On Oct 12, 2005, at 5:57 AM, Micheal J wrote:
> > Perhaps BaseAST simply implements common
> algorithms for the
> > CommonASTxxxx
> > classes. Anyone is free to design a new AST-Node
> class that  
> > implements the
> > behaviour specified in the AST interface.
> 
> Correct and correct. :)  BaseAST was meant simply to
> abstract out the  
> child-sibling tree part so anybody could subclass to
> add fields like  
> string and token type etc...  If you don't want a
> child-sibling, then  
> implement AST.
> 
> That said, ANTLR 2 is a mess built under duress in
> my part time.   
> ANTLR3 is much better designed.  The v3 overview
> slides I'm building  
> for the workshop look good :)
> 
> Ter
> 
> 
> 
> 



		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
From henryb at ntlworld.com  Thu Oct 13 03:12:19 2005
From: henryb at ntlworld.com (Henry Butowsky)
Date: Thu Oct 13 02:44:47 2005
Subject: [antlr-interest] Interpreter
Message-ID: <434E3303.7010605@ntlworld.com>

Hi All,
    Im trying to write an interpreter and am in desperate need of a few 
full C++ antlr examples with tree walkers as well as grammer. I've 
checked out some of projects from
http://www.cs.bris.ac.uk/Teaching/Resources/General/antlr/examples/cpp/
(most of these are grammer only)


And have tried to elaborate on the calc example given in the 
documentation -- But am having trouble writing the tree walker

Regards Henry

From gt54-antlr at cyconix.com  Thu Oct 13 07:07:07 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Oct 13 07:07:21 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510130635t43e701cbn6f476abd261a9e51@mail.gmail.com>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>	
	<1129173559.8579.3.camel@localhost.localdomain>	
	<e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>	
	<434E1368.2040808@cyconix.com>
	<e88138500510130635t43e701cbn6f476abd261a9e51@mail.gmail.com>
Message-ID: <434E6A0B.9040200@cyconix.com>

Jim Crafton wrote:
> I need something that's a library, not something driving a process
> (i.e. I don't want to drice a "cpp" process, if I could use it as a
> library that would be ideal). Plus I thought when I looked before that
> cpp (if it's the one I'm thinking of) is GPL'd?
> 
> I do have a pre-processor lib. It would appear that the only "glitch"
> with it, is that it doesn't seem to put in the "#line XXX" notation
> (or I haven't figured out how to enable that part of it).

My code's a library. I build a string that looks like

"cpp user_file_name temp_file_name extra_cpp_options -nostdinc"

and then I 'system' it (on Unix), and compile the resulting 
temp_file_name. I can't see any way around that - if the user expects to 
  use the system C preprocessor, then I think you have to do exactly the 
same. I don't know about cpp's licensing - as far as I'm concerned, I'm 
just running the program.

That said, I'm not really sure that an IDE should be preprocessing code 
anyway. Does the IDE need to know about #include files?

Paul

From jim.crafton at gmail.com  Thu Oct 13 07:20:17 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Thu Oct 13 07:20:18 2005
Subject: Fwd: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510130719n3f19063dy8a8e02953f35e8b7@mail.gmail.com>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
	<1129173559.8579.3.camel@localhost.localdomain>
	<e88138500510122024l3101f3b7y476797e3c187cf1c@mail.gmail.com>
	<434E1368.2040808@cyconix.com>
	<e88138500510130635t43e701cbn6f476abd261a9e51@mail.gmail.com>
	<434E6A0B.9040200@cyconix.com>
	<e88138500510130719n3f19063dy8a8e02953f35e8b7@mail.gmail.com>
Message-ID: <e88138500510130720r1e4c37a0i5c02b90b7195cdfc@mail.gmail.com>

Well here's the problem, say you have the following C++ code:

class MY_API Foo {

};


Now somewhere else MY_API is defined as a macro, that uses #defines to
determine whether or not to define it as empty or use the Microsoft
specific __declspec() syntax for exporting a class in a DLL.

However, if the fragment above is parsed as is, it will cause the
parser to throw an exception as it's not syntactically correct. So the
only solution (as I understand it) is to either put logic in the C++
grammar to gracefully skip over macro bits (which is understandably
pretty hard to do), or pre-process it first before passing it over to
the C++ parser.

> "cpp user_file_name temp_file_name extra_cpp_options -nostdinc"
>
> and then I 'system' it (on Unix), and compile the resulting

Keep in mind that I am not compiling anything - I am doing to to be
able to analyze the code a user is writing. Stuff like showing the
classes/methods/members in a tree view, refactoring, etc. So I really
don't want to have to shell out stuff like this if I can avoid it.

> Does the IDE need to know about #include files?
Yes it would. But that would be setup as part of your project anyways,
so it would be that big of a deal.
From virtualaspirin at yahoo.com  Thu Oct 13 09:21:19 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Thu Oct 13 09:27:06 2005
Subject: Fwd: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510130720r1e4c37a0i5c02b90b7195cdfc@mail.gmail.com>
Message-ID: <20051013162119.84275.qmail@web30801.mail.mud.yahoo.com>


Preprocessor macros are one of the most PITA in
languages that support them. Only options are-

1. Use external macro processor and pipe its output in
your compiler/IDE

2. Write your own.

(2) is pretty hard to do as preprocessors are
character and line oriented, rather than token
oriented. So if you're, in special cases, able to use
a lexer, you'd have to lex the output of preprossor
again. But it is the only option you have if you also
want original line/column info.

--- Jim Crafton <jim.crafton@gmail.com> wrote:
> syntactically correct. So the
> only solution (as I understand it) is to either put
> logic in the C++
> grammar to gracefully skip over macro bits (which is
> understandably
> pretty hard to do), or pre-process it first before

Rather next to impossible. C preprocessor is one of
the most 'hard to get right' ones. You can do stuff
like

#define CONCAT(A, B) A##B

CONCAT(cl, ass) CONCAT(some_, class) {
  CONCAT(pr, ivate):
    CONCAT(i, nt) i;
};

which generates-

class some_class {
  private:
    int i;
};

Disgusting, ain't it ?? :=|

- Akhilesh




		
__________________________________ 
Yahoo! Music Unlimited 
Access over 1 million songs. Try it free.
http://music.yahoo.com/unlimited/
From open.zone at virgin.net  Thu Oct 13 10:37:04 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Oct 13 10:21:55 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
Message-ID: <001501c5d01c$bacebda0$6902a8c0@hercules>

> My first problem (which I have resolved) was that the parser 
> couldn't handle macro code at all. so something like:
> 
> class MY_API FooBar {
> //code here
> };
> 
> would cause exceptions to be thrown. I found a preprocessor 
> library which seems to work quite well, that can replace 
> these macros with their real values.
> 
> I can create my custom code graph from this modified text. 
> Each node in this graph contains the line it's on, and it's 
> column, or start position.
> 
> So now I have another problem, which I am hoping folks here 
> may have some ideas about how best to tackle:
> 
> All the line/col positions are based on the *modified*, 
> pre-processed code. Ideally I want this information so that I 
> can use it, say, to position the cursor at a given position 
> in the editor, or to replace/modify a chunk of text that 
> corresponds to that node. But the "real" positions need to be 
> based on the original code, so I need some sort of 
> translation back from one (parsed code) to the other (original code).
> 
> Has anyone done anything like this? Is there a better way to 
> tackle this?

Depends on whether you need to tackle arbitary codebases or just code that
you have some control over. For sane code without extreme macro-isms (e.g.
Akilesh's CONCAT sample), you can parse the unpreprocessed code into a graph
that maintains both the macro definitions and their uses (with links between
them). Thus for any given set of compile-time symbols, you can generate the
preprocessed text. This implies that your graph must be able to support
multiple definitions for any given symbol.

I define sane code as code that would parse correctly if the preprocessor
#xxx lines were deleted. For some classes of insane code, it may be possible
to write a filter that converts the insane code to sane code by sanitizing
the use of macros.

> Is there a way to modify the orignal C++ grammar 
> to just skip over the macros entirely (this would be great, 
> as it would get around the whole issue).

Perhaps but (as per my response above), the source code that remains after
excising/ignoring macros may not be legal C++.

Cheers,

Micheal



From anandmohans at lycos.com  Thu Oct 13 11:38:14 2005
From: anandmohans at lycos.com (anand mohan shrivastava)
Date: Thu Oct 13 11:38:18 2005
Subject: [antlr-interest] Newbie - How to extract values of tokens?
Message-ID: <20051013183814.51AB2E5BC7@ws7-2.us4.outblaze.com>

Hi,


I'm a newbie for ANTLR. I need to parse an addres-string and break that into sub-components. After looking into some examples I was able to successfully write the grammar.

ANTLR generated the corresponding Parser, Lexer and TokenTypes classes and I was able to display the breakup in form of swing based tree format.

Now, I need to pass the values of those sub-components to my main java application but finding myself helpless here. 

Can't understand how to extract values of those "variables"! I would appreciate if someone could help me out (or at least tell me about some link that explains how to achieve this)...


Thanks in advance,
Anand

-- 
_______________________________________________

Search for businesses by name, location, or phone number.  -Lycos Yellow Pages

http://r.lycos.com/r/yp_emailfooter/http://yellowpages.lycos.com/default.asp?SRC=lycos10

From prashant.deva at gmail.com  Thu Oct 13 16:20:56 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Oct 13 16:20:58 2005
Subject: [antlr-interest] Brainstom: Making ANTLR Studio & Antlr Eclipse
	play together
In-Reply-To: <41fed8f80510131618i478d1cb2l8ece6e8b8c47d8a0@mail.gmail.com>
References: <41fed8f80510090700x4b5a78f6ma754abba0581b75e@mail.gmail.com>
	<41fed8f80510100441s6c04887ak3ee5eceab2eeaa8c@mail.gmail.com>
	<41fed8f80510100441h3c2a2ed1o353211a42a681ce9@mail.gmail.com>
	<200510101440.11004.torkildr@resheim.no>
	<41fed8f80510131618i478d1cb2l8ece6e8b8c47d8a0@mail.gmail.com>
Message-ID: <41fed8f80510131620h188c7613y5b420a6bbadf64a2@mail.gmail.com>

 There is however an action in the package explorer for
> building the parser. You don't need this if you hook into the build
> framework. Did you implement an IncrementalProjectBuilder or similar?


The action is there in case you have 'build automatically' turned off or
something screws up royally.

But antlr_2.7.6.jar is distributed with your plugin. Anyway, you're saying
> that your "codegen" is utilizing the wrong ANTLR library and that you're
> not
> referencing it anywhere. (I'm guessing that this refers to the action that
> generates the code). If you're using a custom version if the ANTLR
> libraries
> you should really put them in a package with another name. In Eclipse 3.1
> there was introduced a method of controlling access to other plugins and
> libraries. Maybe that could help you out.



You should have read my first post. I *am* packaging the antlr lib as a
separate plugin.
The antlr_2.7.6.jar u see is attached to the client projects as their antlr
runtimes. Our plugin has nothing to do with it.



> I don't watch flash videos ;-) That kind of stuff is also stopped by my
> browser.


Well then i guess you will have to wait for the help manual in the final
version ;)

>
> > PRASHANT
> >
> [snip]
> --
> Med vennlig hilsen / Kind regards ((
> Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer ))
> Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no |----|_
> Private pages: http://resheim.no - "Any sufficiently advanced | | )
> bug is indistinguishable from a feature." |____|'
>
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051014/11a9bcfa/attachment.html
From EldenCrom at comcast.net  Thu Oct 13 19:11:39 2005
From: EldenCrom at comcast.net (Elden Crom)
Date: Thu Oct 13 19:11:55 2005
Subject: [antlr-interest] ANTLR3ea+ANTLWorks is *really cool*,
	but how do I insert PythonTokenStream.java
Message-ID: <20051014021153.D214BDCC8F@www.antlr.org>

Or the like into the token stream to make it Indention Sensitive?
(like python http://www.antlr.org/grammar/1078018002577/python.tar.gz)

Or does (will?) the 3.0 grammar support indention more directly now?

Thanks,
Elden





From sohail at taggedtype.net  Fri Oct 14 00:37:14 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Fri Oct 14 00:37:31 2005
Subject: [antlr-interest] Weird operator precedence
Message-ID: <1129275435.9997.3.camel@localhost.localdomain>

Hi guys,

In the language I am parsing, the below is valid (I hope its enough of a
grammar for you to help me). I have implemented operator precedence in
the same way as Scott Stanchfields:

exponentExpression
	: primitiveElement (POWER signExpression)*
	;
	
signExpression
	: ((PLUS|MINUS))* exponentExpression
	;

That is, exponentiation has higher precedence than negation except when
the exponent is a signExpression.

However, ANTLR tells me that there is nondeterminism upon k==1:POWER
between alt 1 and exit branch of the exponentExpression. I thought I
understood why ANTLR tells me this, but now I'm not sure. And I'm also
not sure if I can hush this warning safely.

Thanks in advance for your input,

Sohail

From anderavi004 at yahoo.com  Fri Oct 14 03:26:59 2005
From: anderavi004 at yahoo.com (ANDE RAVI)
Date: Fri Oct 14 03:28:53 2005
Subject: [antlr-interest] Need info abt Design Documentation of ANTLR
Message-ID: <42856.172.27.19.24.1129285619.squirrel@webmail.cse.iitk.ac.in>


Hi
 i hav to study the design and implementation details of ANTLR. can
anybody tell where can i get right information.. I did browse the antlr
site but i didnt find proper information abt the design and
implementation details of ANTLR.
   I hav to study the design in view of OBJECT ORIENTATION.

ANDE RAVI
                               \\\|///
                             \\  ~ ~  //
                              (  @ @  )
***************************-oOOo-(_)-oOOo-***********************         
    Email:                anderavi004@yahoo.com
                      ande@cse.iitk.ac.in
profile: http://profiles.yahoo.com/anderavi004
      MTech'05, Department of CSE,  B-104/h7
      IIT Kanpur 208 016.
      India
mobile: 9839748546 , home: 08728283085
************************************-Oooo.-**********************
                           .oooO     (   )
                           (   )      ) /
                            \ (      (_/
                             \_)
From jimi at temporal-wave.com  Fri Oct 14 08:37:43 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri Oct 14 08:37:46 2005
Subject: [antlr-interest] ANTLR3ea+ANTLWorks is *really cool*,
	but how do I insert PythonTokenStream.java
Message-ID: <B36CCC332A32904F8FA3DE134A23533615BDA9@wavemachine.temporal-wave.com>

I can't imagine why anyone though it was a good idea to make a language
"indentation sensitive" but I guess you are stuck with it. I believe
that in a post of about a month ago, Terence recognized that he would
need to cater for this junk (oh no, now all the Python addicts are going
to flame me ;-), but that he does not do so at the present time. In the
meantime, you would have to use a previous version of ANTLR or a
different language. At the moment only Java is 'really' supported in
ANTLR3, though there are definitely plans to implement other target
languages. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Elden Crom
> Sent: Thursday, October 13, 2005 7:12 PM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] ANTLR3ea+ANTLWorks is *really cool*,but how
do I
> insert PythonTokenStream.java
> 
> Or the like into the token stream to make it Indention Sensitive?
> (like python http://www.antlr.org/grammar/1078018002577/python.tar.gz)
> 
> Or does (will?) the 3.0 grammar support indention more directly now?
> 
> Thanks,
> Elden
> 
> 
> 
> 

From parrt at cs.usfca.edu  Fri Oct 14 09:24:36 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Oct 14 09:24:41 2005
Subject: [antlr-interest] Need info abt Design Documentation of ANTLR
In-Reply-To: <42856.172.27.19.24.1129285619.squirrel@webmail.cse.iitk.ac.in>
References: <42856.172.27.19.24.1129285619.squirrel@webmail.cse.iitk.ac.in>
Message-ID: <F17C6008-FAAD-4ED0-AC0E-413ECC2D1C7B@cs.usfca.edu>

Hi Ande,

There are no docs on the internals of ANTLR 2.x I'm afraid.  It's  
dark and scary in there too!

Ter
From parrt at cs.usfca.edu  Sun Oct 16 15:06:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Oct 16 15:06:28 2005
Subject: [antlr-interest] ANTLR's StringTemplates for code generation
Message-ID: <5D318876-500B-44D5-8C91-F5A67DE53747@cs.usfca.edu>

Howdy

interesting new tidbit in my "blog" about the ANTLR v3 code generator  
and factoring/reusing templates:

http://www.antlr.org/blog/antlr3/codegen.tml

Ter
From sohail at taggedtype.net  Sun Oct 16 19:42:09 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Oct 16 19:42:17 2005
Subject: [antlr-interest] Syntax-directed translation
Message-ID: <1129516929.9062.4.camel@localhost.localdomain>

Hey guys,

What are your opinions on syntax-directed translations with antlr? 

Do you find syntax-directed translations make your translators more or
less maintainable? After doing a few actions for syntax directed
translation, I'm leaning towards doing translation based on an AST using
something like treedl. I think this would make the code more
maintainable and allow more readable context-based transformation of the
source text (not currently a requirement though). I look forward to your
opinions.

Thanks

Sohail

From jeric10 at hotmail.com  Mon Oct 17 04:13:43 2005
From: jeric10 at hotmail.com (Eric Nelson)
Date: Mon Oct 17 04:13:46 2005
Subject: [antlr-interest] simple function exercise
Message-ID: <BAY104-F85EA5763C92C9E504684CB97E0@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051017/85f5a2a3/attachment.html
From johnny_job at rambler.ru  Mon Oct 17 06:24:44 2005
From: johnny_job at rambler.ru (johnny_job@rambler.ru)
Date: Mon Oct 17 06:25:27 2005
Subject: [antlr-interest] Strange bug in ANTLR under .Net
Message-ID: <20051017132524.C7675DCC40@www.antlr.org>

Hello all!

            I have found strange problem with ANTLR for .Net. I have .Net
application that uses ANTLR (this application works under IIS, more exactly
- under Sharepoint Portal Server 2003). And sometimes ANTLR fails with the
following error message:

Unable to load AST Node Type: 'antlr.CommonAST'

  at antlr.ASTFactory.loadNodeTypeObject(String nodeTypeName) in
d:\temp\cvstemp\utils\src\antlr\src\antlr\astfactory.cs:line 582

            I found quick workaround for this problem - seems that sometimes
assembly antlr.runtime.dll doesn't belong to collection returned by
AppDomain.CurrentDomain.GetAssemblies() method. So my quickfix consist in
adding this assembly (AppDomain.Current.GetExecutingAssembly()) to this
collection.

But I changed source code of ANTLR (method loadNodeTypeObject() in the
ASTFactory class), so I want to know: is it a bug of ANTLR or not? If it is,
ANTLR should be changed to implement fix for this bug.

 

Ivan A. Gusev

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051017/dbd3fab9/attachment.html
From michael.sielemann at asdl.gatech.edu  Mon Oct 17 08:31:47 2005
From: michael.sielemann at asdl.gatech.edu (Michael Sielemann)
Date: Mon Oct 17 08:31:51 2005
Subject: [antlr-interest] Helpfulness of exception messages
Message-ID: <20051017153148.440F9DCC40@www.antlr.org>

 

Hi list,

Now that I understand more and more about ANTLR I am getting really
impressed and would like to say a big "Thanks!" to everybody involved in
this.

 

I have one question though: Due to the nature of the input I am parsing I
have to distinguish various ways to define a construct. In the example
below, these alternatives are in the rule 'body'. If someone providing an
input file to the parser forgets a semicolon or makes a similar minor
mistake inside the rule 'composition' for example, ANTLR assumes that (
IDENT composition END ) is not the appropriate alternative to choose (but it
actually is the right alternative, some user just messed up a part of the
syntax). The other alternatives do not work in that case either.
Consequently, ANTLR raises a no viable alternative exception and says that
he could not match the token IDENT. It would be more helpful to get a
message like "Expected token SEMI" however. For me, it would thus be helpful
to have some sort of ANTLR directive at a point in the rule 'composition'
saying "If you're this far then assume that you chose the right alternative
and consume all the tokens until here". Is there such a feature in ANTLR? If
someone had some hints on how to get this done I would seriously appreciate
the help.

 

Thank you guys in any case MICHAEL

 

 

class ExampleParser extends parser;

 

start_rule

      : (

          ( WITHIN (name)? SEMI! )?

          ( ( CLASS | PACKAGE )

            body 

            SEMI!

          )*

        )

        ;

 

body  : (

          ( IDENT composition END )

          | ( IDENT EQ name (modification)? )

        )

        ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051017/3eb43ddb/attachment.html
From parrt at cs.usfca.edu  Mon Oct 17 13:01:31 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Oct 17 13:01:39 2005
Subject: [antlr-interest] updated codegen blog again
Message-ID: <5A1178AD-467B-4BB3-A0F0-FB403CF9DE4B@cs.usfca.edu>

Howdy,

More experience with the template refactoring in the v3 code  
generator...some interesting thoughts:

http://www.antlr.org/blog/antlr3/codegen.tml

The conclusion is that I may define "regions" within a template so  
you can override chunks of a template in a subgroup rather having to  
redefine the whole template. :)

Ter
From wawong at bea.com  Mon Oct 17 14:26:04 2005
From: wawong at bea.com (Warren Wong)
Date: Mon Oct 17 14:27:27 2005
Subject: [antlr-interest] Getting the offset/Overloading Constructors
Message-ID: <8E1B805138A73F45967FE749D07D904F1598428D@ussjex02.amer.bea.com>

Hi,

 

I'm trying to get the offset of the current token in the token stream
provided by ANTLR. However, since we can only get the line and column #
of the current token and the next token, I can't actually figure out
where I am in the input buffer since parts of the parser changes the
length of the text. For example, 

{{ 

x 

}} may get parsed as { x } (three tokens). The offsets are 0,3,5.
However, the ANTLR tokens only keep track of lines & columns, so I'll
get back line 1, col 1, line 2, col 1, line 3, col 1, which can't be
easily translated to offsets since I don't know what col line 1 ends up.

 

I've tried to solve this problem by overloading CharScanner (the token
stream I'm using). However, since I'm muxing multiple lexers, I can't
keep track of the offset in this subclass. Therefore, I tried to
overload the LexerSharedInputState as well to keep track of the offset.
However, the subclass of this subclass (generated by the .g file) does
not allow me to create my own constructors (which ANTLR generates
automatically). This leaves me with the very ugly option of having to
create a separate constructor for my overloaded LexerSharedInputState
type but still having the automatically generated constructor for ANTLR
sending in a LexerSharedInputState, which the subclass of CharScanner
still has to support (but has to report an error). 

 

What's the proper way of resolving these issues?

 

Thanks,

Warren

________________________________________________________________________________
BEAWorld 2005: coming to a city near you.  Everything you need for SOA and enterprise infrastructure success.

 
Register now at http://www.bea.com/4beaworld

 
London 11-12 Oct| Paris13-14 Oct| Prague18-19 Oct |Tokyo 25-26 Oct| Beijing 7-8 Dec
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051017/94d30d57/attachment.html
From Mark.Gressett at sas.com  Mon Oct 17 14:46:43 2005
From: Mark.Gressett at sas.com (Mark Gressett)
Date: Mon Oct 17 14:52:22 2005
Subject: [antlr-interest] Import problem when antlr is in non-standard
	package
Message-ID: <BBB646166E3FCE46A5E9CE14B252558607870899@MERC27.na.sas.com>

Hi everyone,

I'm using antlr 2.7.2 from within ant.  For reasons not entirely clear to me, in our part of the build we use antlr unmodified but packaged into com.sas.solutions.antlr.  The standard ant task for antlr hardwires the antlr package, so I tried a java task with the modified package name, i.e., <java classname="com.sas.solutions.antlr.Tool" ...>

In the generated lexer and parser java files, I end up with import statements like import com.sas.solutions.antlr.TokenStream;
import com.sas.solutions.antlr.ANTLRHashString;
import com.sas.solutions.antlr.LexerSharedInputState;
import com.sas.solutions.com.sas.solutions.com.sas.solutions.antlr.collections.impl.BitSet;

Some are correct, but anything in collections.impl is prefixed with extra stuff.

Is this a known bug that's been fixed in a later release?

Thanks,
Mark
From ric.klaren at gmail.com  Mon Oct 17 15:40:11 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Oct 17 15:40:15 2005
Subject: [antlr-interest] Import problem when antlr is in non-standard
	package
In-Reply-To: <BBB646166E3FCE46A5E9CE14B252558607870899@MERC27.na.sas.com>
References: <BBB646166E3FCE46A5E9CE14B252558607870899@MERC27.na.sas.com>
Message-ID: <bc607a4e0510171540l6717a71cr6cd931086c116fb7@mail.gmail.com>

On 10/17/05, Mark Gressett <Mark.Gressett@sas.com> wrote:
> I'm using antlr 2.7.2 from within ant.  For reasons not entirely clear to me, in our part of
> the build we use antlr unmodified but packaged into com.sas.solutions.antlr.  The
> standard ant task for antlr hardwires the antlr package, so I tried a java task with the
> modified package name, i.e., <java classname="com.sas.solutions.antlr.Tool" ...>
>
> In the generated lexer and parser java files, I end up with import statements like
> import com.sas.solutions.antlr.TokenStream;
> import com.sas.solutions.antlr.ANTLRHashString;
> import com.sas.solutions.antlr.LexerSharedInputState;
> import com.sas.solutions.com.sas.solutions.com.sas.solutions.antlr.collections.impl.BitSet;
>
> Some are correct, but anything in collections.impl is prefixed with extra stuff.
>
> Is this a known bug that's been fixed in a later release?

I doubt wether this is an unmodified antlr... or these import
statements are somehow changed by something else. Anycase antlr only
generates lines like 'import antlr.collections...' so the wrong
prefixes must come from elsewhere (at least when looking at the
current 2.7.5 code).

Cheers,

Ric
From wirecracker at gmail.com  Mon Oct 17 16:16:54 2005
From: wirecracker at gmail.com (eric nelson)
Date: Mon Oct 17 16:17:00 2005
Subject: [antlr-interest] simple function exercise (take 2)
Message-ID: <ca5eeb330510171616h39a275cbqc01ac4f5e8eb5ffa@mail.gmail.com>

I tried this earlier, but it appeared saying that an HTML attachment had
been scrubbed ... anyways, can you see it now? ;)
 I haven't posted for awhile since my research responsibilities shifted over
the summer, but my goal is still to learn ANTLR ... Its actually been
driving me crazy, although mabye that's why it holds my interest? ;)
 Well here is a simple exercise that would give me some insight:
 Using a Java grammar, write a source to source translator that simply
recognizes functions and replaces the names as such:
 1) replace "main" (or "int main" or whatever) with "func_0"
2) append to all other functions "func_1" ... "func_n"
 I'd like the new source code to be written to a file ... although honestly
I'll take anything you can throw my way. You might ask me for what purpose
I'd like to do this ... I'd probably just answer its because I have no idea
what I'm doing ;) Thanks for any tips!
  - e
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051017/2f67d3bd/attachment.html
From open.zone at virgin.net  Mon Oct 17 17:27:11 2005
From: open.zone at virgin.net (Micheal J)
Date: Mon Oct 17 17:11:58 2005
Subject: [antlr-interest] Strange bug in ANTLR under .Net
In-Reply-To: <20051017132524.C7675DCC40@www.antlr.org>
Message-ID: <002201c5d37a$af3871f0$6902a8c0@hercules>

This sounds like .NET assembly loading behaviour (I think).
 
1. Make sure your program references the ANTLR dll
2. Load/instantiate a type from the ANTLR dll before your app uses ANTLR,
this ensure the assembled is loaded.
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of johnny_job@rambler.ru
Sent: 17 October 2005 14:25
To: antlr-interest@antlr.org
Subject: [antlr-interest] Strange bug in ANTLR under .Net



Hello all!

            I have found strange problem with ANTLR for .Net. I have .Net
application that uses ANTLR (this application works under IIS, more exactly
- under Sharepoint Portal Server 2003). And sometimes ANTLR fails with the
following error message:

Unable to load AST Node Type: 'antlr.CommonAST'

  at antlr.ASTFactory.loadNodeTypeObject(String nodeTypeName) in
d:\temp\cvstemp\utils\src\antlr\src\antlr\astfactory.cs:line 582

            I found quick workaround for this problem - seems that sometimes
assembly antlr.runtime.dll doesn't belong to collection returned by
AppDomain.CurrentDomain.GetAssemblies() method. So my quickfix consist in
adding this assembly (AppDomain.Current.GetExecutingAssembly()) to this
collection.

But I changed source code of ANTLR (method loadNodeTypeObject() in the
ASTFactory class), so I want to know: is it a bug of ANTLR or not? If it is,
ANTLR should be changed to implement fix for this bug.

 

Ivan A. Gusev

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/b54776ee/attachment.html
From sohail at taggedtype.net  Mon Oct 17 21:02:23 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon Oct 17 21:02:30 2005
Subject: [antlr-interest] simple function exercise
In-Reply-To: <BAY104-F85EA5763C92C9E504684CB97E0@phx.gbl>
References: <BAY104-F85EA5763C92C9E504684CB97E0@phx.gbl>
Message-ID: <1129608143.13249.6.camel@localhost.localdomain>

On Mon, 2005-17-10 at 04:13 -0700, Eric Nelson wrote:
> I haven't posted for awhile since my research responsibilities shifted
> over the summer, but my goal is still to learn ANTLR ... Its actually
> been driving me crazy, although mabye that's why it holds my
> interest? ;)
>  
> Well here is a simple exercise that would give me some insight:
>  
> Using a Java grammar, write a source to source translator that simply
> recognizes functions and replaces the names as such:
>  
> 1) replace "main" (or "int main" or whatever) with "func_0"
> 2) append to all other functions "func_1" ... "func_n"
>  
> I'd like the new source code to be written to a file ... although
> honestly I'll take anything you can throw my way.  You might ask me
> for what purpose I'd like to do this ... I'd probably just answer its
> because I have no idea what I'm doing ;)  Thanks for any tips!

I'd suggest something slightly less ambitious (than modifying a java
grammar!).

Make up your own language that has only two sentences (you'll have to
figure out how to get the below to actually work, define a lexer and a
parser atleast):

funcDefn: "Function" IDENTIFIER LCURLY EOL
	(singleStatement EOL)+
	RCURLY EOL
	;
singleStatement: "MOV" IDENTIFIER (COMMA IDENTIFIER);

Transform the source text by changing MOV A,B to "A = B" and change the
function name to be the concatenation of identifiers of the last
statement.

My guess is you will need atleast a tree grammar, though I might be
mistaken.

Also, make sure you work with streams, not files.

Best of luck.

Sohail

From wirecracker at gmail.com  Mon Oct 17 21:23:20 2005
From: wirecracker at gmail.com (eric nelson)
Date: Mon Oct 17 21:23:22 2005
Subject: [antlr-interest] simple function exercise
In-Reply-To: <1129608143.13249.6.camel@localhost.localdomain>
References: <BAY104-F85EA5763C92C9E504684CB97E0@phx.gbl>
	<1129608143.13249.6.camel@localhost.localdomain>
Message-ID: <ca5eeb330510172123n4ab0765crc11ed7d4f3b3afe3@mail.gmail.com>

Why do you say "make sure you work with streams, not files"? Eventually I'd
like to actually be able to have the new source code in a new file. Thanks
for your response! - e


 On 10/17/05, Sohail Somani <sohail@taggedtype.net> wrote:
>
> On Mon, 2005-17-10 at 04:13 -0700, Eric Nelson wrote:
> > I haven't posted for awhile since my research responsibilities shifted
> > over the summer, but my goal is still to learn ANTLR ... Its actually
> > been driving me crazy, although mabye that's why it holds my
> > interest? ;)
> >
> > Well here is a simple exercise that would give me some insight:
> >
> > Using a Java grammar, write a source to source translator that simply
> > recognizes functions and replaces the names as such:
> >
> > 1) replace "main" (or "int main" or whatever) with "func_0"
> > 2) append to all other functions "func_1" ... "func_n"
> >
> > I'd like the new source code to be written to a file ... although
> > honestly I'll take anything you can throw my way. You might ask me
> > for what purpose I'd like to do this ... I'd probably just answer its
> > because I have no idea what I'm doing ;) Thanks for any tips!
>
> I'd suggest something slightly less ambitious (than modifying a java
> grammar!).
>
> Make up your own language that has only two sentences (you'll have to
> figure out how to get the below to actually work, define a lexer and a
> parser atleast):
>
> funcDefn: "Function" IDENTIFIER LCURLY EOL
> (singleStatement EOL)+
> RCURLY EOL
> ;
> singleStatement: "MOV" IDENTIFIER (COMMA IDENTIFIER);
>
> Transform the source text by changing MOV A,B to "A = B" and change the
> function name to be the concatenation of identifiers of the last
> statement.
>
> My guess is you will need atleast a tree grammar, though I might be
> mistaken.
>
> Also, make sure you work with streams, not files.
>
> Best of luck.
>
> Sohail
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051017/881a62e3/attachment.html
From sohail at taggedtype.net  Mon Oct 17 21:56:10 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon Oct 17 21:56:14 2005
Subject: [antlr-interest] simple function exercise
In-Reply-To: <ca5eeb330510172123n4ab0765crc11ed7d4f3b3afe3@mail.gmail.com>
References: <BAY104-F85EA5763C92C9E504684CB97E0@phx.gbl>
	<1129608143.13249.6.camel@localhost.localdomain>
	<ca5eeb330510172123n4ab0765crc11ed7d4f3b3afe3@mail.gmail.com>
Message-ID: <1129611370.16791.7.camel@localhost.localdomain>

On Mon, 2005-17-10 at 21:23 -0700, eric nelson wrote:
> Why do you say "make sure you work with streams, not files"?
> Eventually I'd like to actually be able to have the new source code in
> a new file.  Thanks for your response!  - e

Streams are a useful abstraction. It means you can use the same code to
write to a file, write to a network connection or write to a screen.

You don't lose anything much by working with streams.

For example (C++, my java isn't so hot, perhaps the c++ isn't either :D)

#include <iostream>
#include <fstream>

using namespace std;

void func(std::ostream & os)
{
        os << "output" << endl;
        os << "... more complicated stuff" << endl;
        os << "done" << endl;
}

int main(int argc, char * argv[])
{
        if (argc==1)
        {
                func(cout); // write to console
        }
        else if (argc==2)
        {
                ofstream file(argv[1]);
                func(file); // else write to file
        }
}

Witness the output:

pundai@dev:~/tmp$ ./a.out # writes to console
output
... more complicated stuff
done
pundai@dev:~/tmp$ ./a.out file # writes to file named as first argument
pundai@dev:~/tmp$ cat file
output
... more complicated stuff
done

Sohail

From mansuk at gmail.com  Tue Oct 18 05:51:39 2005
From: mansuk at gmail.com (Suman Karumuri)
Date: Tue Oct 18 05:51:42 2005
Subject: [antlr-interest] Possible Bug in ANTLR Python
Message-ID: <c26541e00510180551x702dc103o9c3a3cdbe399b52f@mail.gmail.com>

Hi all,

I am unsure if this is a bug in antlr python code generation routine,
but it does look like a bug.I am reading the getting started tutorial
by terrence parr and i tried to implement the basic calculator.

I have created the lexer and grammar files, generated the python
classes, imported them into main and startes the main script.

The main script should ideally read a line (from sys.stdin) of input
and after EOL compute the expr(), print expr and exit. But in this
case it is accepting the input and executing it only after i give
another expression as input. So upon giving 2 inputs it is executing
the first one.

To trace this i added a few prints  to the generated parser code whose
output executed as follows:

suman@suman:~/exercise/paper/npl_sw/python/src$ python main.py
2 + 3
Value in atom 2
Value in mexpr 2
Value in atom 3
3
Value in mexpr 3
Value in expr 5
5

suman@suman:~/exercise/paper/npl_sw/python/src$ python main.py
2 * 4
Value in atom 2
Value in atom 4
*
7
Value in atom 7
7
Value in mexpr 56
Value in expr 56
56
suman@suman:~/exercise/paper/npl_sw/python/src$

The ouput is more peculiar, if * is given(actualy mexpr is atom
STAR(*) atom ) .But this is not the case when the input if redirected
from a file as in

python main.py< test.npl

I am attaching the files here. Please add some print statements before
the returns to see the output shown above.

Please clarify if this is a bug.

-Suman
-------------- next part --------------
A non-text attachment was scrubbed...
Name: npl.tar.gz
Type: application/x-gzip
Size: 1567 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/ade783f4/npl.tar.gz
From srinivasan.subramanian at tcs.com  Tue Oct 18 06:09:29 2005
From: srinivasan.subramanian at tcs.com (srinivasan.subramanian@tcs.com)
Date: Tue Oct 18 06:25:45 2005
Subject: [antlr-interest] Parsing the Keywords/Identifiers
Message-ID: <OFEDB330A8.99B7141A-ON6525709E.0047C61C-6525709E.004847CF@tcs.com>


Hi everyone,
                I am part of a Language Processing project and i am 
relatively new to ANTLR. One of the problems that i often encounter is the 
keywords. Whenever we encounter we encounter an identifier, we check it 
against a keyword list and return the keyword token if it is a keyword or 
an IDENTIFIER token if it is not. There can be situations where a keyword 
can come as an identifier. For example when writing a pl/sql parser, 
PASSWORD is a keyword and it can come as a column name too. Is there a way 
around for this?  Hope i am clear in explaining the problem.

Could anyone please help me out on this?

Thanks,
Srinivasan Subramanian
Assistant Systems Engineer -Trainee
Tata Consultancy Services Limited
Mailto: srinivasan.subramanian@tcs.com
Website: http://www.tcs.com

Notice: The information contained in this e-mail message and/or attachments to it may contain confidential or privileged information.   If you are not the intended recipient, any dissemination, use, review, distribution, printing or copying of the information contained in this e-mail message and/or attachments to it are strictly prohibited.   If you have received this communication in error, please notify us by reply e-mail or telephone and immediately and permanently delete the message and any attachments.  Thank you
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/680a6da1/attachment.html
From prashant.deva at gmail.com  Tue Oct 18 07:10:22 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Oct 18 07:10:25 2005
Subject: [antlr-interest] ANTLR Studio release information
Message-ID: <41fed8f80510180710y2758f7a2s11e5c75b83a58318@mail.gmail.com>

As antlrstudio.com <http://antlrstudio.com> is currently down cause my host
is having some problems (will be back by tomorrow morning), I cant access my
blog. So I am posting this here.

This is for all the people who want to know the details of ANTLR Studio's
release.

The beta will expire tomorrow. I had originally planned to release on 19th
itself. But it seems it will take a few more days. It should be done by end
of this week though.
There will be a fully functional 15 day evaluation available of Antlr Studio
on release.
The cost of full version will be 49$.

Antlr Studio will be available at
www.placidsystems.com<http://www.placidsystems.com>(not available
right now). On release
antlrstudio.com <http://antlrstudio.com> will be redirected to
placidsystems.com <http://placidsystems.com> .
You will need to completly remove the beta of ANTLR Studio to install the
final release, as the package names differ.

I have been unable to solve the conflict with the ANTLR Eclipse plugin, so
you will need to uninstall that too.

If you want to be automatically informed of the release of ANTLR Studio,
please send me an email with the subject 'Inform Me'.
If you found some bugs while evaluting ANTLR Studio, you can still tell me
and they will be cured before release.

For those who dont already know ANTLR Studio is an IDE for ANTLR that plugs
into the Eclipse IDE.
You can watch the videos of it at antlrstudio.com <http://antlrstudio.com> .
Note that as of writing this, antlrstudio.com <http://antlrstudio.com> is
down but will be back in around 12-14 hrs.

--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/52d20045/attachment.html
From prashant.deva at gmail.com  Tue Oct 18 07:32:45 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Oct 18 07:32:47 2005
Subject: [antlr-interest] Re: ANTLR Studio release information
In-Reply-To: <41fed8f80510180710y2758f7a2s11e5c75b83a58318@mail.gmail.com>
References: <41fed8f80510180710y2758f7a2s11e5c75b83a58318@mail.gmail.com>
Message-ID: <41fed8f80510180732w1f165049sa93ce7918aeb8a66@mail.gmail.com>

If you have already started working on a project that requires ANTLR Studio
and cant afford a single day's gap, pls send me an email and you will get a
special evaluation version which wont expire till release is out.

PRASHANT


On 10/18/05, Prashant Deva <prashant.deva@gmail.com> wrote:
>
> As antlrstudio.com <http://antlrstudio.com> is currently down cause my
> host is having some problems (will be back by tomorrow morning), I cant
> access my blog. So I am posting this here.
>
> This is for all the people who want to know the details of ANTLR Studio's
> release.
>
> The beta will expire tomorrow. I had originally planned to release on 19th
> itself. But it seems it will take a few more days. It should be done by end
> of this week though.
> There will be a fully functional 15 day evaluation available of Antlr
> Studio on release.
> The cost of full version will be 49$.
>
> Antlr Studio will be available at www.placidsystems.com<http://www.placidsystems.com>(not available right now). On release
> antlrstudio.com <http://antlrstudio.com> will be redirected to
> placidsystems.com <http://placidsystems.com> .
> You will need to completly remove the beta of ANTLR Studio to install the
> final release, as the package names differ.
>
> I have been unable to solve the conflict with the ANTLR Eclipse plugin, so
> you will need to uninstall that too.
>
> If you want to be automatically informed of the release of ANTLR Studio,
> please send me an email with the subject 'Inform Me'.
> If you found some bugs while evaluting ANTLR Studio, you can still tell me
> and they will be cured before release.
>
> For those who dont already know ANTLR Studio is an IDE for ANTLR that
> plugs into the Eclipse IDE.
> You can watch the videos of it at antlrstudio.com <http://antlrstudio.com>.
> Note that as of writing this, antlrstudio.com <http://antlrstudio.com> is
> down but will be back in around 12-14 hrs.
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>



--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/ab92b27b/attachment-0001.html
From canton at indra.es  Tue Oct 18 08:12:43 2005
From: canton at indra.es (=?iso-8859-1?Q?Ant=F3n_Garc=EDa=2C_Carolina?=)
Date: Tue Oct 18 08:12:46 2005
Subject: [antlr-interest] How to throw an Exception when unexpeted token
	occurs?
Message-ID: <17B525E69E376B4A8B99B25170B4A0B702DCA36B@MADARRMAIL1.indra.es>

Hi, 
 
May be this is a stupid question, but... How can I thow an Exception when unexpeted token occurs? This just inform of it, but does not thows an Exception.
 
Thanks in advance
 
Carolina Ant?n, 
< canton@indra.es>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/3836ba29/attachment.html
From zhixueyong at hotmail.com  Tue Oct 18 08:19:10 2005
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Tue Oct 18 08:25:16 2005
Subject: [antlr-interest] Re: Parsing the Keywords/Identifiers
References: <OFEDB330A8.99B7141A-ON6525709E.0047C61C-6525709E.004847CF@tcs.com>
Message-ID: <dj33pe$3gl$1@sea.gmane.org>

It should not matter.
For example, you can do:
select: SELECT IDENTIFIER from (IDENTIFIER | PASSWORD);

        Notice: The information contained in this e-mail message and/or attachments to it may contain confidential or privileged information. If you are not the intended recipient, any dissemination, use, review, distribution, printing or copying of the information contained in this e-mail message and/or attachments to it are strictly prohibited. If you have received this communication in error, please notify us by reply e-mail or telephone and immediately and permanently delete the message and any attachments. Thank you
       
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/9029637c/attachment.html
From parrt at cs.usfca.edu  Tue Oct 18 08:31:35 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Oct 18 08:31:38 2005
Subject: [antlr-interest] syntactic predicates and exceptions
Message-ID: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>

Howdy,

Many people have complained about the fact that ANTLR uses exceptions  
for backtracking and it's slow in many languages and many grammars.   
For v3 I was thinking of changing to be return values and lots of IF  
checks everywhere...ugly but fast.

Then i realized last night that it's not so easy.  We use exceptions  
for throwing exceptions right?  All the support code for match,  
matchAny, blah blah throws exceptions, which would trigger rewinding  
the backtracking predicate in v2.  How can we use exceptions for  
error conditions and not for guessing?  Do people propose that we  
duplicate the support library code or put IFs everywhere in the  
support code, perhaps slowing all cases down?

Perhaps looking at javacc output (which avoids exceptions for  
backtracking I think) would be useful.  I don't like a mixed model.   
Remember, normal case you want exceptions and backtracking case you  
don't.  Pretty messy support code if you ask me.  Easy to say "get  
rid of exceptions", but now when it comes to doing it I don't see a  
clean solution.  I also hate the idea that even when not backtracking  
you'll see code like this everywhere (ugly and slower):

if ( !match(ID) ) {code inserted to clean up; return false;} //  
indicate error if guessing

instead of the current

match(ID);

Note: java can use a try/finally for the cleanup code but other  
languages will need perhaps a goto or to duplicate cleanup code at  
*all* exit sites...ick.

Ideas for implementing backtracking without exceptions?

Ter
From scott at javadude.com  Tue Oct 18 08:53:42 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Oct 18 08:54:55 2005
Subject: [antlr-interest] ANTLR Studio release information
In-Reply-To: <41fed8f80510180710y2758f7a2s11e5c75b83a58318@mail.gmail.com>
Message-ID: <200510181546.j9IFkduB016934@s2.eroute.net>

I must apologize that I've been unable to help resolve the antlr-eclipse
plugin conflict. Been insanely busy at work for the past month for a huge
client demo. As soon as I get a chance to breathe, I'll give it a poke.
 
I think uninstalling antlr-eclipse is a good solution for now; ANTLR Studio
really does the same (and more) anyway, so you really don't need them both.
At least I hope not!
 
Later,
-- Scott
 
 


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Tuesday, October 18, 2005 10:10 AM
To: ANTLR Interest
Subject: [antlr-interest] ANTLR Studio release information


As antlrstudio.com is currently down cause my host is having some problems
(will be back by tomorrow morning), I cant access my blog. So I am posting
this here.

This is for all the people who want to know the details of ANTLR Studio's
release.

The beta will expire tomorrow. I had originally planned to release on 19th
itself. But it seems it will take a few more days. It should be done by end
of this week though.
There will be a fully functional 15 day evaluation available of Antlr Studio
on release. 
The cost of full version will be 49$. 

Antlr Studio will be available at www.placidsystems.com (not available right
now). On release antlrstudio.com will be redirected to placidsystems.com .
You will need to completly remove the beta of ANTLR Studio to install the
final release, as the package names differ.

I have been unable to solve the conflict with the ANTLR Eclipse plugin, so
you will need to uninstall that too.

If you want to be automatically informed of the release of ANTLR Studio,
please send me an email with the subject 'Inform Me'.
If you found some bugs while evaluting ANTLR Studio, you can still tell me
and they will be cured before release.

For those who dont already know ANTLR Studio is an IDE for ANTLR that plugs
into the Eclipse IDE. 
You can watch the videos of it at antlrstudio.com  .
Note that as of writing this, antlrstudio.com is down but will be back in
around 12-14 hrs.

-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/3efe2038/attachment.html
From dcaton at shorelinesoftware.com  Tue Oct 18 09:03:04 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue Oct 18 09:03:03 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>
Message-ID: <1129651947.28074@mx9.mysite4now.com>

Ter: 

Exceptions should be used for just that: exceptions.  A rule that fails to
match is not an exceptional condition, it is an expected condition and as
such, should be handled with normal flow control constructs.

IMO, efficiency should be the overriding concern, not whether any given
piece of code is "ugly" or not.  "Ugly" is subjective anyhow, and the end
user couldn't care less what the code looks like.  The inside of your coffee
maker is probably not terribly attractive either, or else the case would not
be opaque.  As long as the code is decently formatted and readable and can
be debugged without making your eyes bleed, that should be sufficient.  

Putting if's throughout the code isn't going to slow anything down, you're
talking about a handful of cpu instructions.  Contrast that to throwing a
single exception that requires thousands of instructions to execute, then
multiply that by the number of exceptions thrown in any non-trivial grammar.

I don't think you should use exceptions for error conditions either.  Errors
in parsing are an expected condition, not an exceptional condition.  IMO,
the only time Antlr should throw an exception is when something truly
exceptional happens (out of memory, unexpected end of stream or something
else that would never occur under normal conditions).

Don

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, October 18, 2005 11:32 AM
> To: ANTLR Interest
> Subject: [antlr-interest] syntactic predicates and exceptions
> 
> Howdy,
> 
> Many people have complained about the fact that ANTLR uses 
> exceptions  
> for backtracking and it's slow in many languages and many grammars.   
> For v3 I was thinking of changing to be return values and 
> lots of IF checks everywhere...ugly but fast.
> 
> Then i realized last night that it's not so easy.  We use 
> exceptions for throwing exceptions right?  All the support 
> code for match, matchAny, blah blah throws exceptions, which 
> would trigger rewinding the backtracking predicate in v2.  
> How can we use exceptions for error conditions and not for 
> guessing?  Do people propose that we duplicate the support 
> library code or put IFs everywhere in the support code, 
> perhaps slowing all cases down?
> 
> Perhaps looking at javacc output (which avoids exceptions for  
> backtracking I think) would be useful.  I don't like a mixed model.   
> Remember, normal case you want exceptions and backtracking 
> case you don't.  Pretty messy support code if you ask me.  
> Easy to say "get rid of exceptions", but now when it comes to 
> doing it I don't see a clean solution.  I also hate the idea 
> that even when not backtracking you'll see code like this 
> everywhere (ugly and slower):
> 
> if ( !match(ID) ) {code inserted to clean up; return false;} 
> // indicate error if guessing
> 
> instead of the current
> 
> match(ID);
> 
> Note: java can use a try/finally for the cleanup code but 
> other languages will need perhaps a goto or to duplicate 
> cleanup code at
> *all* exit sites...ick.
> 
> Ideas for implementing backtracking without exceptions?
> 
> Ter
> 


From tarunkhanna at gmail.com  Tue Oct 18 09:15:05 2005
From: tarunkhanna at gmail.com (Tarun Khanna)
Date: Tue Oct 18 09:15:08 2005
Subject: [antlr-interest] How to throw an Exception when unexpeted token
	occurs?
In-Reply-To: <17B525E69E376B4A8B99B25170B4A0B702DCA36B@MADARRMAIL1.indra.es>
References: <17B525E69E376B4A8B99B25170B4A0B702DCA36B@MADARRMAIL1.indra.es>
Message-ID: <dbcf4c2c0510180915i310def19l1c1d0f0c85f56316@mail.gmail.com>

I guess this is what you are looking for

http://www.antlr.org/doc/err.html#_bb1

Tarun

On 10/18/05, Ant?n Garc?a, Carolina <canton@indra.es> wrote:
>
> Hi,
>  May be this is a stupid question, but... How can I thow an Exception when
> unexpeted token occurs? This just inform of it, but does not thows an
> Exception.
>  Thanks in advance
>  Carolina Ant?n,
> <canton@indra.es>
>



--
Tarun Khanna
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/0cb1b3b4/attachment.html
From canton at indra.es  Tue Oct 18 09:18:48 2005
From: canton at indra.es (=?iso-8859-1?Q?Ant=F3n_Garc=EDa=2C_Carolina?=)
Date: Tue Oct 18 09:18:56 2005
Subject: [antlr-interest] How to throw an Exception when unexpeted token
	occurs?
Message-ID: <17B525E69E376B4A8B99B25170B4A0B702DCA36D@MADARRMAIL1.indra.es>

I thougth that when I found this link weeks ago but maybe I dont read as well as I should... I didnt find the solution here, but many thanks anyway; I'll read again!
 
Carol
 
 
-----Mensaje original-----
De: Tarun Khanna [mailto:tarunkhanna@gmail.com]
Enviado el: martes, 18 de octubre de 2005 18:15
Para: Ant?n Garc?a, Carolina
CC: ANTLR Interest
Asunto: Re: [antlr-interest] How to throw an Exception when unexpeted token occurs?



I guess this is what you are looking for

http://www.antlr.org/doc/err.html#_bb1

Tarun


On 10/18/05, Ant?n Garc?a, Carolina < canton@indra.es> wrote: 

Hi, 
 
May be this is a stupid question, but... How can I thow an Exception when unexpeted token occurs? This just inform of it, but does not thows an Exception.
 
Thanks in advance
 
Carolina Ant?n, 
< canton@indra.es>




-- 
Tarun Khanna 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/6997a532/attachment-0001.html
From prashant.deva at gmail.com  Tue Oct 18 09:47:19 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Oct 18 09:47:23 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>
References: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>
Message-ID: <41fed8f80510180947q7432bc0ep2cdd973ed511e6c2@mail.gmail.com>

cant u have something like this-
match(int tokenType, int guessing)
{
//do matching stuff
//on error, do this-
if (guessing>0)
return false;

else throw Excpetion;
}




On 10/18/05, Terence Parr <parrt@cs.usfca.edu> wrote:
>
> Howdy,
>
> Many people have complained about the fact that ANTLR uses exceptions
> for backtracking and it's slow in many languages and many grammars.
> For v3 I was thinking of changing to be return values and lots of IF
> checks everywhere...ugly but fast.
>
> Then i realized last night that it's not so easy. We use exceptions
> for throwing exceptions right? All the support code for match,
> matchAny, blah blah throws exceptions, which would trigger rewinding
> the backtracking predicate in v2. How can we use exceptions for
> error conditions and not for guessing? Do people propose that we
> duplicate the support library code or put IFs everywhere in the
> support code, perhaps slowing all cases down?
>
> Perhaps looking at javacc output (which avoids exceptions for
> backtracking I think) would be useful. I don't like a mixed model.
> Remember, normal case you want exceptions and backtracking case you
> don't. Pretty messy support code if you ask me. Easy to say "get
> rid of exceptions", but now when it comes to doing it I don't see a
> clean solution. I also hate the idea that even when not backtracking
> you'll see code like this everywhere (ugly and slower):
>
> if ( !match(ID) ) {code inserted to clean up; return false;} //
> indicate error if guessing
>
> instead of the current
>
> match(ID);
>
> Note: java can use a try/finally for the cleanup code but other
> languages will need perhaps a goto or to duplicate cleanup code at
> *all* exit sites...ick.
>
> Ideas for implementing backtracking without exceptions?
>
> Ter
>



--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/44dd8f68/attachment.html
From prashant.deva at gmail.com  Tue Oct 18 10:15:00 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Oct 18 10:15:03 2005
Subject: [antlr-interest] ANTLR Studio release information
In-Reply-To: <200510181546.j9IFkduB016934@s2.eroute.net>
References: <41fed8f80510180710y2758f7a2s11e5c75b83a58318@mail.gmail.com>
	<200510181546.j9IFkduB016934@s2.eroute.net>
Message-ID: <41fed8f80510181015g1632bd4bjcbc4c589ce0092d3@mail.gmail.com>

> I must apologize that I've been unable to help resolve the antlr-eclipse
> plugin conflict. Been insanely busy at work for the past month for a huge
> client demo. As soon as I get a chance to breathe, I'll give it a poke.
>
No problem :)

PRASHANT



I think uninstalling antlr-eclipse is a good solution for now; ANTLR Studio
> really does the same (and more) anyway, so you really don't need them both.
> At least I hope not!
>  Later,
> -- Scott
>
>  ------------------------------
> *From:* antlr-interest-bounces@antlr.org [mailto:
> antlr-interest-bounces@antlr.org] *On Behalf Of *Prashant Deva
> *Sent:* Tuesday, October 18, 2005 10:10 AM
> *To:* ANTLR Interest
> *Subject:* [antlr-interest] ANTLR Studio release information
>
> As antlrstudio.com <http://antlrstudio.com> is currently down cause my
> host is having some problems (will be back by tomorrow morning), I cant
> access my blog. So I am posting this here.
>
> This is for all the people who want to know the details of ANTLR Studio's
> release.
>
> The beta will expire tomorrow. I had originally planned to release on 19th
> itself. But it seems it will take a few more days. It should be done by end
> of this week though.
> There will be a fully functional 15 day evaluation available of Antlr
> Studio on release.
> The cost of full version will be 49$.
>
> Antlr Studio will be available at www.placidsystems.com<http://www.placidsystems.com>(not available right now). On release
> antlrstudio.com <http://antlrstudio.com> will be redirected to
> placidsystems.com <http://placidsystems.com> .
> You will need to completly remove the beta of ANTLR Studio to install the
> final release, as the package names differ.
>
> I have been unable to solve the conflict with the ANTLR Eclipse plugin, so
> you will need to uninstall that too.
>
> If you want to be automatically informed of the release of ANTLR Studio,
> please send me an email with the subject 'Inform Me'.
> If you found some bugs while evaluting ANTLR Studio, you can still tell me
> and they will be cured before release.
>
> For those who dont already know ANTLR Studio is an IDE for ANTLR that
> plugs into the Eclipse IDE.
> You can watch the videos of it at antlrstudio.com <http://antlrstudio.com>.
> Note that as of writing this, antlrstudio.com <http://antlrstudio.com> is
> down but will be back in around 12-14 hrs.
>
> --
> Prashant Deva
> Creator, ANTLR Studio, http://www.antlrstudio.com
> Founder, Placid Systems
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051018/7d2cc1af/attachment.html
From parrt at cs.usfca.edu  Tue Oct 18 11:17:32 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Oct 18 11:17:38 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <41fed8f80510180947q7432bc0ep2cdd973ed511e6c2@mail.gmail.com>
References: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>
	<41fed8f80510180947q7432bc0ep2cdd973ed511e6c2@mail.gmail.com>
Message-ID: <B34B616D-5204-4D20-B8B8-B09CDD24CE89@cs.usfca.edu>


On Oct 18, 2005, at 9:47 AM, Prashant Deva wrote:

> cant u have something like this-
> match(int tokenType, int guessing)
> {
>     //do matching stuff
>     //on error, do this-
>     if (guessing>0)
>        return false;
>
>    else throw Excpetion;
> }


Yep, something like that, but it would require those changes over a  
lot of the code...perhaps it's worse in my mid than reality.  All  
generated code though would see

match vs if(match)

and then

int alt = predict(...);
switch (alt) {
   case 1 : ...
   ...
   default : // error
     if ( guessing>0 ) cleanup; return false;
     else throw NoViableAltException(...);
}

That is not so bad I guess...this is mroe complicated when I have to  
clean up code.  Imagine that the switch is nested 10 levels deep.  I  
have to figure out how to do all the clean up for all 10 code levels  
in that error clause. :(  I suppose try/finally is the answer.  What  
about C++?  Gotos?

Also using a return value is a drag as I have to deal with user  
return values.

perhaps a separate stack for error returns?  Can we get away with a  
single global instance var for errors like the old errno for old unix?

void match(int type) {
   if ( input.LA(1)!=type ) {
     if ( guessing>0 ) error=true; return;
     throw exception
   }
   ...
}

then in the call, you'd do

match(ID); // normal
if ( error ) return;

Maybe an error for each level:

int error[MAX_GUESSING_LEVEL];

then

if (error[guessing]) return;

???

Hmm...seeming more and more doable...

Ter
From parrt at cs.usfca.edu  Tue Oct 18 11:19:23 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Oct 18 11:19:29 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129651947.28074@mx9.mysite4now.com>
References: <1129651947.28074@mx9.mysite4now.com>
Message-ID: <7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>

On Oct 18, 2005, at 9:03 AM, Don Caton wrote:

> Ter:
>
> Exceptions should be used for just that: exceptions.  A rule that  
> fails to
> match is not an exceptional condition,

Hi Don! :)

Really?  When was the last time an HTTP server got a bad GET request  
from a browser?  That said, I'm sure the java compiler sees 99%  
erroneous programs from my students? ;)

> it is an expected condition and as
> such, should be handled with normal flow control constructs.

Agreed, but parse errors are errors if ya ask me...

Perhaps you're right though: adding some IFs won't be that bad.

Ter
From dcaton at shorelinesoftware.com  Tue Oct 18 11:45:53 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Tue Oct 18 11:45:55 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>
Message-ID: <1129661718.16141@mx9.mysite4now.com>

Ter: 

> > Exceptions should be used for just that: exceptions.  A rule that 
> > fails to match is not an exceptional condition,
> 
> Hi Don! :)
> 
> Really?  When was the last time an HTTP server got a bad GET 
> request from a browser?  That said, I'm sure the java 
> compiler sees 99% erroneous programs from my students? ;)

Ok, point taken; there's no hard and fast rule for what constitutes an
"exception" condition.  

But IMO, if something can be expected to happen with a certain regularity in
the normal course of an activity, it isn't an exception.  An out of memory
condition is usually not the norm.  A file not found error is more common,
so whether something like that is an exception could be argued either way.  

But when it comes to parsers, it's almost a sure thing that input is going
to fail more often than it doesn't.  At least with human-generated input.

> Agreed, but parse errors are errors if ya ask me...

Errors yes, but not exceptions.  Would probably be a moot point if exception
handling wasn't so expensive. 

> 
> Perhaps you're right though: adding some IFs won't be that bad.
> 
> Ter
> 


From jimi at temporal-wave.com  Tue Oct 18 12:50:23 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue Oct 18 12:53:40 2005
Subject: [antlr-interest] ANTLR3 vcab import exception
References: <1129651947.28074@mx9.mysite4now.com>
	<7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>

Anyone got any thoughts on this (ANTLR 3 built from source code as of Sunday evening, JDK 1.5 Update 5)
 
problem reading token vocabulary file cmql.tokens: java.lang.NullPointerException
org.antlr.tool.AssignTokenTypesWalker.importTokenVocab(Unknown Source)
org.antlr.tool.AssignTokenTypesWalker.option(Unknown Source)
org.antlr.tool.AssignTokenTypesWalker.optionsSpec(Unknown Source)
org.antlr.tool.AssignTokenTypesWalker.grammarSpec(Unknown Source)
org.antlr.tool.AssignTokenTypesWalker.grammar(Unknown Source)
org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
org.antlr.Tool.process(Unknown Source)
org.antlr.Tool.main(Unknown Source)
 
The cmql.tokens file is there and looks correct. If  I delete a token in the file, then it tells me that there is a token sequence error, so it is reading the tokens. 
 
if not then I guess I will start debugging from source code. But just in case anyone has seen this before...

Jim
From parrt at cs.usfca.edu  Tue Oct 18 13:10:56 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Oct 18 13:11:02 2005
Subject: [antlr-interest] ANTLR3 vcab import exception
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>
References: <1129651947.28074@mx9.mysite4now.com>
	<7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>
Message-ID: <F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>


On Oct 18, 2005, at 12:50 PM, Jim Idle wrote:

> Anyone got any thoughts on this (ANTLR 3 built from source code as  
> of Sunday evening, JDK 1.5 Update 5)
>
> problem reading token vocabulary file cmql.tokens:  
> java.lang.NullPointerException
> org.antlr.tool.AssignTokenTypesWalker.importTokenVocab(Unknown Source)
> org.antlr.tool.AssignTokenTypesWalker.option(Unknown Source)
> org.antlr.tool.AssignTokenTypesWalker.optionsSpec(Unknown Source)
> org.antlr.tool.AssignTokenTypesWalker.grammarSpec(Unknown Source)
> org.antlr.tool.AssignTokenTypesWalker.grammar(Unknown Source)
> org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> org.antlr.Tool.process(Unknown Source)
> org.antlr.Tool.main(Unknown Source)

I wonder why it says "unknown source"?  Perhaps 1.5 can't read  
old .class files completely?  That would be odd...if you can get me a  
line number i'll look it up ;)

Ter
>
> The cmql.tokens file is there and looks correct. If  I delete a  
> token in the file, then it tells me that there is a token sequence  
> error, so it is reading the tokens.
>
> if not then I guess I will start debugging from source code. But  
> just in case anyone has seen this before...
>
> Jim
>

From oliver.zeigermann at gmail.com  Tue Oct 18 13:15:45 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue Oct 18 13:15:50 2005
Subject: [antlr-interest] ANTLR3 vcab import exception
In-Reply-To: <F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>
References: <1129651947.28074@mx9.mysite4now.com>
	<7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>
	<F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>
Message-ID: <9da4f4520510181315t20b23077u@mail.gmail.com>

2005/10/18, Terence Parr <parrt@cs.usfca.edu>:
>
> On Oct 18, 2005, at 12:50 PM, Jim Idle wrote:
>
> > Anyone got any thoughts on this (ANTLR 3 built from source code as
> > of Sunday evening, JDK 1.5 Update 5)
> >
> > problem reading token vocabulary file cmql.tokens:
> > java.lang.NullPointerException
> > org.antlr.tool.AssignTokenTypesWalker.importTokenVocab(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.option(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.optionsSpec(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.grammarSpec(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.grammar(Unknown Source)
> > org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> > org.antlr.Tool.process(Unknown Source)
> > org.antlr.Tool.main(Unknown Source)
>
> I wonder why it says "unknown source"?  Perhaps 1.5 can't read
> old .class files completely?  That would be odd...if you can get me a
> line number i'll look it up ;)

This is most likely because the sources have been compiled without
debug and/or line number options.

Oliver
From jimi at temporal-wave.com  Tue Oct 18 13:43:17 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue Oct 18 13:43:20 2005
Subject: [antlr-interest] ANTLR3 vcab import exception
References: <1129651947.28074@mx9.mysite4now.com><7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com><F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>
	<9da4f4520510181315t20b23077u@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com>

 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Oliver Zeigermann
Sent: Tue 10/18/2005 1:15 PM
Cc: ANTLR Interest
Subject: Re: [antlr-interest] ANTLR3 vcab import exception



2005/10/18, Terence Parr <parrt@cs.usfca.edu>:
>
> On Oct 18, 2005, at 12:50 PM, Jim Idle wrote:
>
> > Anyone got any thoughts on this (ANTLR 3 built from source code as
> > of Sunday evening, JDK 1.5 Update 5)
> >
> > problem reading token vocabulary file cmql.tokens:
> > java.lang.NullPointerException
> > org.antlr.tool.AssignTokenTypesWalker.importTokenVocab(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.option(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.optionsSpec(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.grammarSpec(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.grammar(Unknown Source)
> > org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> > org.antlr.Tool.process(Unknown Source)
> > org.antlr.Tool.main(Unknown Source)
>
> I wonder why it says "unknown source"?  Perhaps 1.5 can't read
> old .class files completely?  That would be odd...if you can get me a
> line number i'll look it up ;)

This is most likely because the sources have been compiled without
debug and/or line number options.


Indeed, that is why the unknownsource is there. The exception is being thrown from the code in generated by assign.types.g (at least, according to grep that is the only place it could be thrown). The antrl.jar is built compeltely from scratch using jdk 1.5 and there are no 1.4 classes around because I don't have that jdk loaded.

I will have to rebuild but I will have to setup the project to build it again and so on as I am on the road with my laptop and blah blah blah. Trying to simplify the grammar to see if it goes away. I would also try with the last antlr.jar you produced, but the problem there is that it produces code tha won't compile so I am a bit stuck. This jar has a fix to java.stg that casts adaptor.create() to <<ASTLabelType>> (or whatever the parameter is), which fixes the defualt tree building stuff when ASTLabelType=CommonTree... or at least, I thought it did ;-)

Is the following (example simplified) tree stuff expected to work right now?

: "KEYWORD" STRING -> ^("KEYWORD" STRING)
;

Somehow there must be a strange token or somethign in there, or at least something it does not like, but because I forgot to turn on the debug option for the jar I built, it is hard for me to trace of course. Here are the tokens in case it helps. BTW - do you wantt this type of stuff sent here, or do you prefer an email direct via the feedback web page? I don't mind either way of course.

$ sort -n -k2 -t= cmql.tokens
QUERY=4
DICTSPEC=5
DICTELEMENT=6
DICTNAME=7
DICTHEADING=8
DICTATTRSPEC=9
TERMINALSPEC=10
PRINTERSPEC=11
OUTPUTSPEC=12
QUERYBODY=13
QUERYSPECS=14
FILENAME=15
COMMAND=16
PROCESSOR=17
SORTED=18
TYPEIDLIST=19
TYPEITEMSTREAM=20
TYPEDATASTREAM=21
STATEMENT=22
CONNECTIVES=23
SELECTTO=24
SAVING=25
SELECTFACTOR=26
LBRACE=27
RBRACE=28
EQ=29
STRING=30
SEMI=31
WORD=32
ATTRIBUTEVALUE=33

 

 

 

 

 

From jimi at temporal-wave.com  Tue Oct 18 14:15:37 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue Oct 18 14:15:40 2005
Subject: [antlr-interest] ANTLR3 vcab import exception
References: <1129651947.28074@mx9.mysite4now.com><7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com><F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu><9da4f4520510181315t20b23077u@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com>

I got that abort to go away once I realized that I had somehow deleted the word "tree" from:
 
tree grammar blah;
 
However I am not sure that this is the correct error message to get for that ;-)
 
I also not that a rule such as:
 
: "format" EQ STRING
 
Does not define the token "format" for export to the tree grammar. Maybe this is just a TBD, but it look like the thing to do is either define imaginary tokens for all such elements and rewrite them OR define such things in the lexer and use tokens in the grammar.  Perhaps this is intentional, perhaps a TBD?
 
Jim
 

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Jim Idle
Sent: Tue 10/18/2005 1:43 PM
To: Oliver Zeigermann
Cc: ANTLR Interest
Subject: RE: [antlr-interest] ANTLR3 vcab import exception





________________________________

From: antlr-interest-bounces@antlr.org on behalf of Oliver Zeigermann
Sent: Tue 10/18/2005 1:15 PM
Cc: ANTLR Interest
Subject: Re: [antlr-interest] ANTLR3 vcab import exception



2005/10/18, Terence Parr <parrt@cs.usfca.edu>:
>
> On Oct 18, 2005, at 12:50 PM, Jim Idle wrote:
>
> > Anyone got any thoughts on this (ANTLR 3 built from source code as
> > of Sunday evening, JDK 1.5 Update 5)
> >
> > problem reading token vocabulary file cmql.tokens:
> > java.lang.NullPointerException
> > org.antlr.tool.AssignTokenTypesWalker.importTokenVocab(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.option(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.optionsSpec(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.grammarSpec(Unknown Source)
> > org.antlr.tool.AssignTokenTypesWalker.grammar(Unknown Source)
> > org.antlr.tool.Grammar.setGrammarContent(Unknown Source)
> > org.antlr.Tool.process(Unknown Source)
> > org.antlr.Tool.main(Unknown Source)
>
> I wonder why it says "unknown source"?  Perhaps 1.5 can't read
> old .class files completely?  That would be odd...if you can get me a
> line number i'll look it up ;)

This is most likely because the sources have been compiled without
debug and/or line number options.


Indeed, that is why the unknownsource is there. The exception is being thrown from the code in generated by assign.types.g (at least, according to grep that is the only place it could be thrown). The antrl.jar is built compeltely from scratch using jdk 1.5 and there are no 1.4 classes around because I don't have that jdk loaded.

I will have to rebuild but I will have to setup the project to build it again and so on as I am on the road with my laptop and blah blah blah. Trying to simplify the grammar to see if it goes away. I would also try with the last antlr.jar you produced, but the problem there is that it produces code tha won't compile so I am a bit stuck. This jar has a fix to java.stg that casts adaptor.create() to <<ASTLabelType>> (or whatever the parameter is), which fixes the defualt tree building stuff when ASTLabelType=CommonTree... or at least, I thought it did ;-)

Is the following (example simplified) tree stuff expected to work right now?

: "KEYWORD" STRING -> ^("KEYWORD" STRING)
;

Somehow there must be a strange token or somethign in there, or at least something it does not like, but because I forgot to turn on the debug option for the jar I built, it is hard for me to trace of course. Here are the tokens in case it helps. BTW - do you wantt this type of stuff sent here, or do you prefer an email direct via the feedback web page? I don't mind either way of course.

$ sort -n -k2 -t= cmql.tokens
QUERY=4
DICTSPEC=5
DICTELEMENT=6
DICTNAME=7
DICTHEADING=8
DICTATTRSPEC=9
TERMINALSPEC=10
PRINTERSPEC=11
OUTPUTSPEC=12
QUERYBODY=13
QUERYSPECS=14
FILENAME=15
COMMAND=16
PROCESSOR=17
SORTED=18
TYPEIDLIST=19
TYPEITEMSTREAM=20
TYPEDATASTREAM=21
STATEMENT=22
CONNECTIVES=23
SELECTTO=24
SAVING=25
SELECTFACTOR=26
LBRACE=27
RBRACE=28
EQ=29
STRING=30
SEMI=31
WORD=32
ATTRIBUTEVALUE=33













From andrei at metalanguage.com  Tue Oct 18 19:08:21 2005
From: andrei at metalanguage.com (Andrei Alexandrescu)
Date: Tue Oct 18 19:08:24 2005
Subject: [antlr-interest] question on greedy matching 
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com>
References: <1129651947.28074@mx9.mysite4now.com><7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com><F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu><9da4f4520510181315t20b23077u@mail.gmail.com>	<B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com>
	<B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com>
Message-ID: <4355AA95.3000202@metalanguage.com>

Hello,


I have a question on how to solve a particular greedy/non-greedy 
matching with ANTLR.

Consider the following language design for a sort of a try statement:

try statement ( catch (ID ID) '{' statement '}' )+

Clearly not an award-winning design, because it has the "dangling catch" 
ambiguity:

try
     try
         foo();
     catch (E1 e) { bar(); }
catch (E2 e) { baz(); }

There's a need for a meta-rule to decide where the last catch comes. So 
here it is:

"One catch always binds to the closest try statement. The others always 
bind to the outermost try statement possible."

I'm not sure I was clear enough, but the intent of the rule above binds 
the first catch in the example to the inner try, and the second catch to 
the outer try, as the indentation suggests.

Moreover, in the example:

try
     try
         foo();
     catch (E1 e) { bar(); }
catch (E2 e) { baz(); }
catch (E3 e) { baa(); }

again the rule makes the statements bind as the indentation suggests.

So, the question is, what would be the cleanest way to express that in 
ANTLR (preferrably without semantic predicates)? If I understand 
correctly, it's not an issue of setting the greedy option, because the 
same try construct must be parsed greedily or not, depending on whether 
the parent is a try statement as well.


Thanks,

Andrei
From sohail at taggedtype.net  Tue Oct 18 19:53:41 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Tue Oct 18 19:53:47 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129651947.28074@mx9.mysite4now.com>
References: <1129651947.28074@mx9.mysite4now.com>
Message-ID: <1129690421.8206.3.camel@localhost.localdomain>

On Tue, 2005-18-10 at 12:03 -0400, Don Caton wrote:
> Putting if's throughout the code isn't going to slow anything down, you're
> talking about a handful of cpu instructions.  Contrast that to throwing a
> single exception that requires thousands of instructions to execute, then
> multiply that by the number of exceptions thrown in any non-trivial grammar.

I think this is a good point. Especially since the code is generated it
doesn't need to be maintained. While developing ~ 1 KLOC grammar, I've
had to debug into the generated code about twice. So if I have to see if
statements, its not a big deal.

Btw, it was great debugging into the generated code. So easy to read!

Sohail

From jim.crafton at gmail.com  Wed Oct 19 06:24:40 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 19 06:24:43 2005
Subject: [antlr-interest] Re: C++ parser usage ideas
In-Reply-To: <4356365E.6090603@lsbu.ac.uk>
References: <4356365E.6090603@lsbu.ac.uk>
Message-ID: <e88138500510190624q92062b0rfea355e367f7188d@mail.gmail.com>

David,


> Thanks for your kind words about the C++ parser. I would very
> much like to see the amendments you have found necessary.
>


The simplest case is this:

#define FOO_API __declspec( __dllimport)

class FOO_API Foo {

};

This will cause the compiler to bail, as it doesn't know how to handle
the "FOO_API" identifier/symbol.

If the "FOO_API" is resolved to __declspec( __dllimport), it also
chokes. I have added support in the grammar to handle either
__declspec( __dllimport), or __declspec( __dllexport).


> Unfortunately there is no ultimate set of test data for a C++
> parser (and may not be for any parser!) and I have just had to
> do my best from the language syntax specification shown in my
> documentation and Bjarne Stroustrup's book (third edition).

You know, prior to starting something like this, I never truly
understood why so many people railed about C++ syntax. I do understand
now. C++ has got to be the worst for this kind of thing.

> FYI I now have an updated version of the parser which I hope
> will be clearer and more correct which I am hoping to publish in
> November.

Oooh! Sounds great, I'll be looking forward to that.

Cheers,

Jim
From ric.klaren at gmail.com  Wed Oct 19 10:31:46 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Oct 19 10:31:52 2005
Subject: [antlr-interest] C++ parser usage ideas
In-Reply-To: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
References: <e88138500510121958s19dcd347nc6853efe88db4db5@mail.gmail.com>
Message-ID: <bc607a4e0510191031k15d23e2ege08364461ef5e207@mail.gmail.com>

On 10/12/05, Jim Crafton <jim.crafton@gmail.com> wrote:
> My first problem (which I have resolved) was that the parser couldn't
> handle macro code at all. so something like:
>
> class MY_API FooBar {
> //code here
> };

> ... Is there a way to modify the orignal C++ grammar to just skip
> over the macros entirely (this would be great, as it would get around
> the whole issue). Apologies if this isn't strictly antlr specific, and
> if it's inapropriate, just let me know.

A while back I started adding a preprocessor to the grammar from David
Wigg using a tokenstream filter. I had to abandon the project but got
it partially working the results are available for download at (at the
ned of the webpage):

http://pts14043.pts.nl/antlr/

It works as a parser in front of the original C++ parser that replaces
macro's as it goes. I think it should do line tracking ok as well
(it's been a while since I made it). It might be interesting to look
at... it's very rough code though.

Cheers,

Ric
From jim.crafton at gmail.com  Wed Oct 19 12:22:27 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 19 12:22:33 2005
Subject: [antlr-interest] Re: C++ parser usage ideas
In-Reply-To: <4356365E.6090603@lsbu.ac.uk>
References: <4356365E.6090603@lsbu.ac.uk>
Message-ID: <e88138500510191222g411dfd5sa1b6d87f286636d0@mail.gmail.com>

David,

For specific questions/problems with regards to the C++
grammar/parser, would it be more appropriate to email you directly, or
is it OK to post them on the ANTLR list?

Cheers,

Jim
From jim.crafton at gmail.com  Wed Oct 19 12:38:19 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 19 12:38:21 2005
Subject: [antlr-interest] potentially stupid question
Message-ID: <e88138500510191238u189bb09eqe61558958978f51d@mail.gmail.com>

How does one get the exact character position at a given moment in a
parser? Is this even possible?

Thanks

Jim
From mail at martin-probst.com  Wed Oct 19 15:09:06 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Oct 19 15:09:12 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129661718.16141@mx9.mysite4now.com>
References: <1129661718.16141@mx9.mysite4now.com>
Message-ID: <1129759746.9181.5.camel@localhost.localdomain>

Hi,

> But when it comes to parsers, it's almost a sure thing that input is going
> to fail more often than it doesn't.  At least with human-generated input.

Ehm, at this place I got to raise a voice. We - and many others
apparently - are using ANTLR in a server setup. E.g. there will be
incorrect language statements while the application built on top of the
server is being developed, but few to none afterwards (at least is
certainly hope so). So a failing query is a truly exceptional case.

Also, consider that a normal compiler usually compiles source files a
lot more often then you write them. Think of nightly builds, "ant clean
build", your co-workers checking your code out and compiling it etc. I
think under normal circumstances compiling source files should outweigh
those with errors.

Meaning: get rid of of exceptions for backtracking if you want to (we
don't use backtracking anyways, to be honest) but feel free to keep them
for failing source files. A file that is incorrect in terms of the
language is an exceptional case for a parser, and those exceptions are
valid.

Martin

From mail at martin-probst.com  Wed Oct 19 15:14:46 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Oct 19 15:14:52 2005
Subject: [antlr-interest] potentially stupid question
In-Reply-To: <e88138500510191238u189bb09eqe61558958978f51d@mail.gmail.com>
References: <e88138500510191238u189bb09eqe61558958978f51d@mail.gmail.com>
Message-ID: <1129760086.9181.11.camel@localhost.localdomain>

Hi,

> How does one get the exact character position at a given moment in a
> parser? Is this even possible?

Well, there is no such thing - your code in the parser is in a given
rule, but line numbers/cols are related to single tokens, so you have to
specify of what you want to get the line number. You can get the exact
character position of a given AST/Token you have, e.g.:

rule: t:TOKEN { t.getLine(); }

Although you have to use an AST subclass to get line numbers. See the
ANTLR manual about that.

Martin

From mail at martin-probst.com  Wed Oct 19 15:20:04 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Oct 19 15:20:15 2005
Subject: [antlr-interest] Parsing the Keywords/Identifiers
In-Reply-To: <OFEDB330A8.99B7141A-ON6525709E.0047C61C-6525709E.004847CF@tcs.com>
References: <OFEDB330A8.99B7141A-ON6525709E.0047C61C-6525709E.004847CF@tcs.com>
Message-ID: <1129760404.9181.16.camel@localhost.localdomain>

Hi,

> For example when writing a pl/sql parser, PASSWORD is a keyword and it
> can come as a column name too. Is there a way around for this?  Hope i
> am clear in explaining the problem. 

You have a keyword free language. The normal way to work around that is
to have a lexer that is stateful. E.g. if in SQL SELECT is not always a
keyword, so you can do:
SELECT SELECT FROM SELECT WHERE SELECT = 'SELECT'
You have to keep track of e.g. an operator/operand state:
first SELECT is an operator, afterwards the Lexer switches to the
operand state. The next SELECT is then recognised as an operand (because
of the state), and the Lexer switches back to operator sate, and so on.

This is somewhat annoying and messy, but at least it keeps the Parser
out of those lexical details. You might need to add additional Lexer
states if you language is more complex. If you can't resolve a problem
that way your language is simply ambiguous (at least not LL(1)) and
you're boned ;-)

Martin

From dcaton at shorelinesoftware.com  Wed Oct 19 16:08:34 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Wed Oct 19 16:08:36 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129759746.9181.5.camel@localhost.localdomain>
Message-ID: <1129763880.8421@mx9.mysite4now.com>

Martin: 

> Ehm, at this place I got to raise a voice. We - and many 
> others apparently - are using ANTLR in a server setup. E.g. 
> there will be incorrect language statements while the 
> application built on top of the server is being developed, 
> but few to none afterwards (at least is certainly hope so). 
> So a failing query is a truly exceptional case.

Sure, but I did say "with human generated input".  Machine generated input
no doubt will be correct most of the time, and an error in the input might
be considered an exceptional condition.

On the other end of the scale, you could be using an Antlr-generated parser
for syntax highlighting in an editor.  In that case the percentage of bad
input is probably very high, unless you're a really good typist and you
never made coding errors.

> Meaning: get rid of of exceptions for backtracking if you 
> want to (we don't use backtracking anyways, to be honest) but 
> feel free to keep them for failing source files. A file that 
> is incorrect in terms of the language is an exceptional case 
> for a parser, and those exceptions are valid.

I wish I could get rid of backtracking, but it's not always possible.  I've
spent a lot of time trying to get rid of as many as I can but sometimes
there just doesn't appear to be any other alternative.

I disagree that a "failing source file" is an exceptional case.  Consider
the syntax highlighting scenario I mentioned above.

Given that Antlr can be used in widely different scenarios, it can't be
everything to everyone.  But if there's an alternate way to accomplish
something without throwing exceptions, why not do it the more efficient way?
That's always a good thing.

Don


From jim.crafton at gmail.com  Wed Oct 19 16:57:27 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 19 16:57:29 2005
Subject: [antlr-interest] potentially stupid question
In-Reply-To: <1129760086.9181.11.camel@localhost.localdomain>
References: <e88138500510191238u189bb09eqe61558958978f51d@mail.gmail.com>
	<1129760086.9181.11.camel@localhost.localdomain>
Message-ID: <e88138500510191657k2bc871a3ya19932a8aff1f686@mail.gmail.com>

Martin,

> > How does one get the exact character position at a given moment in a
> > parser? Is this even possible?
>
> Well, there is no such thing - your code in the parser is in a given
> rule, but line numbers/cols are related to single tokens, so you have to
> specify of what you want to get the line number. You can get the exact
> character position of a given AST/Token you have, e.g.:
>
> rule: t:TOKEN { t.getLine(); }

Well I do get that. As you mentioned, I have subclassed the AST to my
own custom class.
What I also need is the offset, from the beginning of the input
stream/buffer. I noticed a mark() method in the Parser base class, but
I'm not sure if this is what I want to use.

Cheers,

Jim
From nbsherid at secsme.org.au  Wed Oct 19 18:34:27 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Wed Oct 19 18:34:30 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129690421.8206.3.camel@localhost.localdomain>
Message-ID: <000301c5d516$68f5e770$0500a8c0@nigel>


 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Sohail Somani
> Sent: Wednesday, 19 October 2005 12:54 PM
> To: Don Caton
> Cc: 'ANTLR Interest'
> Subject: RE: [antlr-interest] syntactic predicates and exceptions
> 
> I think this is a good point. Especially since the code is generated it
> doesn't need to be maintained. While developing ~ 1 KLOC grammar, I've
> had to debug into the generated code about twice. So if I have to see if
> statements, its not a big deal.
> 
> Btw, it was great debugging into the generated code. So easy to read!
> 

I don't want to weigh in to this argument too much, but I do want to mention
one point. 

If you remove exception handling for back-tracking, there is one risk: the
readability of the code (and hence the ease of debugging and tracing) will
be reduced. 

If high performance is essential, then removing the exception handling is
the way to go. However, if readability of the parsers/lexers generated is an
essential requirement, then you should consider what you are losing. 

I certainly don't want to give Terence more work than he already has, but
can a command line switch or ANTLR option be considered here? Do people see
benefits in readability and the ease of debugging?

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435


From prashant.deva at gmail.com  Thu Oct 20 00:32:18 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Oct 20 00:32:20 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <000301c5d516$68f5e770$0500a8c0@nigel>
References: <1129690421.8206.3.camel@localhost.localdomain>
	<000301c5d516$68f5e770$0500a8c0@nigel>
Message-ID: <41fed8f80510200032o6e222bbck1b39aa6c5bf182a9@mail.gmail.com>

>If you remove exception handling for back-tracking, there is one risk: the
>readability of the code (and hence the ease of debugging and tracing) will
>be reduced.
With ANTLR Studio available, I dont think debugging the generated code
should be an issue as you can debug right into the grammar file and take a
look at 'live' parse trees and ASTs etc.
So I think it is quite ok that the code is a little cluttered up if the gain
in speed is large.

PRASHANT


On 10/20/05, Nigel Sheridan-Smith <nbsherid@secsme.org.au> wrote:
>
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> > bounces@antlr.org] On Behalf Of Sohail Somani
> > Sent: Wednesday, 19 October 2005 12:54 PM
> > To: Don Caton
> > Cc: 'ANTLR Interest'
> > Subject: RE: [antlr-interest] syntactic predicates and exceptions
> >
> > I think this is a good point. Especially since the code is generated it
> > doesn't need to be maintained. While developing ~ 1 KLOC grammar, I've
> > had to debug into the generated code about twice. So if I have to see if
> > statements, its not a big deal.
> >
> > Btw, it was great debugging into the generated code. So easy to read!
> >
>
> I don't want to weigh in to this argument too much, but I do want to
> mention
> one point.
>
> If you remove exception handling for back-tracking, there is one risk: the
> readability of the code (and hence the ease of debugging and tracing) will
> be reduced.
>
> If high performance is essential, then removing the exception handling is
> the way to go. However, if readability of the parsers/lexers generated is
> an
> essential requirement, then you should consider what you are losing.
>
> I certainly don't want to give Terence more work than he already has, but
> can a command line switch or ANTLR option be considered here? Do people
> see
> benefits in readability and the ease of debugging?
>
> Nigel
>
> --
> Nigel Sheridan-Smith
> PhD research student
>
> Faculty of Engineering
> University of Technology, Sydney
> Phone: 02 9514 7946
> Fax: 02 9514 2435
>
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/019b444e/attachment.html
From prashant.deva at gmail.com  Thu Oct 20 00:32:33 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Oct 20 00:32:38 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <000301c5d516$68f5e770$0500a8c0@nigel>
References: <1129690421.8206.3.camel@localhost.localdomain>
	<000301c5d516$68f5e770$0500a8c0@nigel>
Message-ID: <41fed8f80510200032n60a8d8c2h34681494be17f328@mail.gmail.com>

>If you remove exception handling for back-tracking, there is one risk: the
>readability of the code (and hence the ease of debugging and tracing) will
>be reduced.
With ANTLR Studio available, I dont think debugging the generated code
should not be an issue as you can debug right into the grammar file and take
a look at 'live' parse trees and ASTs etc.
So I think it is quite ok that the code is a little cluttered up if the gain
in speed is large.

PRASHANT


On 10/20/05, Nigel Sheridan-Smith <nbsherid@secsme.org.au> wrote:
>
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> > bounces@antlr.org] On Behalf Of Sohail Somani
> > Sent: Wednesday, 19 October 2005 12:54 PM
> > To: Don Caton
> > Cc: 'ANTLR Interest'
> > Subject: RE: [antlr-interest] syntactic predicates and exceptions
> >
> > I think this is a good point. Especially since the code is generated it
> > doesn't need to be maintained. While developing ~ 1 KLOC grammar, I've
> > had to debug into the generated code about twice. So if I have to see if
> > statements, its not a big deal.
> >
> > Btw, it was great debugging into the generated code. So easy to read!
> >
>
> I don't want to weigh in to this argument too much, but I do want to
> mention
> one point.
>
> If you remove exception handling for back-tracking, there is one risk: the
> readability of the code (and hence the ease of debugging and tracing) will
> be reduced.
>
> If high performance is essential, then removing the exception handling is
> the way to go. However, if readability of the parsers/lexers generated is
> an
> essential requirement, then you should consider what you are losing.
>
> I certainly don't want to give Terence more work than he already has, but
> can a command line switch or ANTLR option be considered here? Do people
> see
> benefits in readability and the ease of debugging?
>
> Nigel
>
> --
> Nigel Sheridan-Smith
> PhD research student
>
> Faculty of Engineering
> University of Technology, Sydney
> Phone: 02 9514 7946
> Fax: 02 9514 2435
>
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/95a5c17e/attachment-0001.html
From ric.klaren at gmail.com  Thu Oct 20 00:50:22 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Oct 20 00:50:25 2005
Subject: [antlr-interest] question on greedy matching
In-Reply-To: <4355AA95.3000202@metalanguage.com>
References: <1129651947.28074@mx9.mysite4now.com>
	<7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>
	<F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>
	<9da4f4520510181315t20b23077u@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com>
	<B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com>
	<4355AA95.3000202@metalanguage.com>
Message-ID: <bc607a4e0510200050i775cf6cel5cbb7380bb0ab245@mail.gmail.com>

Hi,

On 10/18/05, Andrei Alexandrescu <andrei@metalanguage.com> wrote:
> I have a question on how to solve a particular greedy/non-greedy
> matching with ANTLR.
>
> Consider the following language design for a sort of a try statement:
>
> try statement ( catch (ID ID) '{' statement '}' )+
>
> Clearly not an award-winning design, because it has the "dangling catch"
> ambiguity:
>
> try
>      try
>          foo();
>      catch (E1 e) { bar(); }
> catch (E2 e) { baz(); }

I assume the try statement is an alternative of the statement rule (or
somewhere below it)?

> There's a need for a meta-rule to decide where the last catch comes. So
> here it is:
>
> "One catch always binds to the closest try statement. The others always
> bind to the outermost try statement possible."
>
> I'm not sure I was clear enough, but the intent of the rule above binds
> the first catch in the example to the inner try, and the second catch to
> the outer try, as the indentation suggests.
>
> Moreover, in the example:
>
> try
>      try
>          foo();
>      catch (E1 e) { bar(); }
> catch (E2 e) { baz(); }
> catch (E3 e) { baa(); }
>
> again the rule makes the statements bind as the indentation suggests.

(Side note: This is awfully horrid language design.... adding curlies
around the statement inside the try would make life a lot more
pleasant.)

I guess the following is not allowed?

try
     try
         foo();
     catch (E1 e) { bar(); }
     catch (E2 e) { baz(); }
     bbb();
catch (E3 e) { baa(); }

> So, the question is, what would be the cleanest way to express that in
> ANTLR (preferrably without semantic predicates)? If I understand
> correctly, it's not an issue of setting the greedy option, because the
> same try construct must be parsed greedily or not, depending on whether
> the parent is a try statement as well.

No predicates is probably not possible without switching to
treebuilding and fixing things in a 2nd pass.

Not 100% sure but the dirty trick department might work:

try_rule { ncatch = 0; }:
try { this.ntry++; } statement
(  { if( ntry > 1 && ncatch > 1 ) break; }:
   catch { ncatch++; }  (ID ID) '{' statement '}'
)+ { this.ntry--; }

Alternatively:

start out with a try rule with only one catch. Then define an extra
alternative (probably in the statement rule to collect trailing catch
statements) Some checks are probably necessary afterwards to see if
everything made sense. The catch all might need a predicate to prevent
it from being entered if the preceding statement was not a try.

Going multipass is probably the cleanest.

Hope this helps (and that it was not too late in the evening when I
wrote this ;) ),

Ric
From gt54-antlr at cyconix.com  Thu Oct 20 00:51:12 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Oct 20 00:51:27 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129759746.9181.5.camel@localhost.localdomain>
References: <1129661718.16141@mx9.mysite4now.com>
	<1129759746.9181.5.camel@localhost.localdomain>
Message-ID: <43574C70.3050004@cyconix.com>

Martin Probst wrote:

> Meaning: get rid of of exceptions for backtracking if you want to (we
> don't use backtracking anyways, to be honest) but feel free to keep them
> for failing source files. A file that is incorrect in terms of the
> language is an exceptional case for a parser, and those exceptions are
> valid.

But it's the normal case for a human sitting in front of a terminal 
developing a program, which is what I spend my life doing. I don't care 
what the compiler is doing if it's running overnight or analysing 
machine-generated input.

Having said that, it's the backtracking that's the problem. It makes no 
difference to me if it takes marginally longer to report a syntax error.

Paul

From andrei at metalanguage.com  Thu Oct 20 01:55:30 2005
From: andrei at metalanguage.com (Andrei Alexandrescu)
Date: Thu Oct 20 01:55:32 2005
Subject: [antlr-interest] question on greedy matching
In-Reply-To: <bc607a4e0510200050i775cf6cel5cbb7380bb0ab245@mail.gmail.com>
References: <1129651947.28074@mx9.mysite4now.com>	
	<7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>	
	<B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>	
	<F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>	
	<9da4f4520510181315t20b23077u@mail.gmail.com>	
	<B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com>	
	<B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com>	
	<4355AA95.3000202@metalanguage.com>
	<bc607a4e0510200050i775cf6cel5cbb7380bb0ab245@mail.gmail.com>
Message-ID: <43575B82.2070300@metalanguage.com>

Ric Klaren wrote:
> On 10/18/05, Andrei Alexandrescu <andrei@metalanguage.com> wrote:
>>try statement ( catch (ID ID) '{' statement '}' )+
>>
>>Clearly not an award-winning design, because it has the "dangling catch"
>>ambiguity:
>>
>>try
>>     try
>>         foo();
>>     catch (E1 e) { bar(); }
>>catch (E2 e) { baz(); }
> 
> 
> I assume the try statement is an alternative of the statement rule (or
> somewhere below it)?


That is correct. The try statement is an alt of statement.

> (Side note: This is awfully horrid language design.... adding curlies
> around the statement inside the try would make life a lot more
> pleasant.)

Definitely. But it's the most sensible example I could find for a 
situation where you want a non-greedy parsing. (Other examples?) In 
addition, it's an excellent exercise for understanding how to do some 
nontrivial parsing with antlr.

Besides, think o the even more horrid rule:

statement ::= ...
   | try statement ( catch (ID ID) statement )+

That is, eliminate curlies from the catch as well. Now you need an awful 
lot of disambiguation, because how are you going to interpret:

try
      try
          foo();
      catch (E1 e) try bar(); catch (E3 e) zip();
catch (E2 e) baz();

> I guess the following is not allowed?
> 
> try
>      try
>          foo();
>      catch (E1 e) { bar(); }
>      catch (E2 e) { baz(); }
>      bbb();
> catch (E3 e) { baa(); }

You can't do that, you'd have to add curlies:

try {
      try
          foo();
      catch (E1 e) { bar(); }
      catch (E2 e) { baz(); }
      bbb();
}
catch (E3 e) { baa(); }

In other words, it's a Java-like language, not a Python-like language 
(indentation is irrelevant).

> No predicates is probably not possible without switching to
> treebuilding and fixing things in a 2nd pass.

That's what I thought.

> Not 100% sure but the dirty trick department might work:
> 
> try_rule { ncatch = 0; }:
> try { this.ntry++; } statement
> (  { if( ntry > 1 && ncatch > 1 ) break; }:
>    catch { ncatch++; }  (ID ID) '{' statement '}'
> )+ { this.ntry--; }

Ok, I understand.

> Alternatively:
> 
> start out with a try rule with only one catch. Then define an extra
> alternative (probably in the statement rule to collect trailing catch
> statements) Some checks are probably necessary afterwards to see if
> everything made sense. The catch all might need a predicate to prevent
> it from being entered if the preceding statement was not a try.

I believe this is not possible with syntactic predicates. You have to 
have semantic predicates, I think. Actually that's my fundamental 
question. Another fundamental question is how would a PEG deal with that 
(see http://pdos.csail.mit.edu/~baford/packrat/).

> Hope this helps (and that it was not too late in the evening when I
> wrote this ;) ),

Thanks, Ric.


Andrei
From antlr at shmuelhome.mine.nu  Thu Oct 20 02:47:34 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu Oct 20 02:46:22 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <000301c5d516$68f5e770$0500a8c0@nigel>
References: <000301c5d516$68f5e770$0500a8c0@nigel>
Message-ID: <435767B6.5000900@shmuelhome.mine.nu>

Nigel Sheridan-Smith wrote:
> I don't want to weigh in to this argument too much, but I do want to mention
> one point. 
> 
> If you remove exception handling for back-tracking, there is one risk: the
> readability of the code (and hence the ease of debugging and tracing) will
> be reduced. 
> 
Don't underestimate this point. The readability is one of the main 
selling points of antlr. At least that is how I get away with using it 
in a yacc shop.


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005



-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005

From pdeva at placidsystems.com  Thu Oct 20 02:54:18 2005
From: pdeva at placidsystems.com (Prashant Deva)
Date: Thu Oct 20 02:54:20 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <435767B6.5000900@shmuelhome.mine.nu>
References: <000301c5d516$68f5e770$0500a8c0@nigel>
	<435767B6.5000900@shmuelhome.mine.nu>
Message-ID: <41fed8f80510200254v561e5c05y48c9ed22f4d0a54@mail.gmail.com>

Nigel,
The code will still be readable, although difficult to debug.
My point is that if you are using somehting like ANTLR Studio then it doesnt
matter how readable/unreadable the code is.

PRASHANT

On 10/20/05, shmuel siegel <antlr@shmuelhome.mine.nu> wrote:
>
> Nigel Sheridan-Smith wrote:
> > I don't want to weigh in to this argument too much, but I do want to
> mention
> > one point.
> >
> > If you remove exception handling for back-tracking, there is one risk:
> the
> > readability of the code (and hence the ease of debugging and tracing)
> will
> > be reduced.
> >
> Don't underestimate this point. The readability is one of the main
> selling points of antlr. At least that is how I get away with using it
> in a yacc shop.
>
>
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005
>
>
>
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/ef937606/attachment.html
From prashant.deva at gmail.com  Thu Oct 20 03:02:06 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Oct 20 03:02:07 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <41fed8f80510200254v561e5c05y48c9ed22f4d0a54@mail.gmail.com>
References: <000301c5d516$68f5e770$0500a8c0@nigel>
	<435767B6.5000900@shmuelhome.mine.nu>
	<41fed8f80510200254v561e5c05y48c9ed22f4d0a54@mail.gmail.com>
Message-ID: <41fed8f80510200302n4f4c2507t4abc78e6e1c6034e@mail.gmail.com>

Nigel,
The code will still be readable, although difficult to debug.
My point is that if you are using somehting like ANTLR Studio then it doesnt
matter how readable/unreadable the code is.

PRASHANT

On 10/20/05, shmuel siegel <antlr@shmuelhome.mine.nu> wrote:
>
> Nigel Sheridan-Smith wrote:
> > I don't want to weigh in to this argument too much, but I do want to
> mention
> > one point.
> >
> > If you remove exception handling for back-tracking, there is one risk:
> the
> > readability of the code (and hence the ease of debugging and tracing)
> will
> > be reduced.
> >
> Don't underestimate this point. The readability is one of the main
> selling points of antlr. At least that is how I get away with using it
> in a yacc shop.
>
>
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005
>
>
>
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005
>
>


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems


--
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com
Founder, Placid Systems
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/a740bd09/attachment.html
From harsha.nagesh at csfb.com  Thu Oct 20 04:38:06 2005
From: harsha.nagesh at csfb.com (Nagesh, Harsha)
Date: Thu Oct 20 04:38:29 2005
Subject: [antlr-interest] syntactic predicates and exceptions
Message-ID: <FDFBED0CBC3CA04BB7F633CC85ADDA5B15AAD600@enyc12p32001.corpny.csfb.com>

 
Code readability/ability to debug does not have to be conditional to the use of antlr studio ;)
not everybody will use it and there could be other tools such as antlr works that people may be
interested and may support a different set of features compared to AS.
 
Harsha

This material has been prepared by individual sales and/or trading personnel and does not constitute investment research. Please follow the attached hyperlink to an important disclaimer: 
< http://www.csfb.com/legal_terms/disclaimer_americas_salestrading.shtml <http://www.csfb.com/legal_terms/disclaimer_americas_salestrading.shtml> > 

-----Original Message-----
From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org]On Behalf Of Prashant Deva
Sent: Thursday, October 20, 2005 6:02 AM
To: ANTLR Interest
Subject: Re: [antlr-interest] syntactic predicates and exceptions



Nigel,
    The code will still be readable, although difficult to debug.
My point is that if you are using somehting like ANTLR Studio then it doesnt matter how readable/unreadable the code is.

PRASHANT 



On 10/20/05, shmuel siegel <  <mailto:antlr@shmuelhome.mine.nu> antlr@shmuelhome.mine.nu> wrote: 

Nigel Sheridan-Smith wrote:
> I don't want to weigh in to this argument too much, but I do want to mention
> one point.
>
> If you remove exception handling for back-tracking, there is one risk: the 
> readability of the code (and hence the ease of debugging and tracing) will
> be reduced.
>
Don't underestimate this point. The readability is one of the main
selling points of antlr. At least that is how I get away with using it 
in a yacc shop.


--
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005



--
No virus found in this outgoing message. 
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/143 - Release Date: 10/19/2005






-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com <http://www.antlrstudio.com> 
Founder, Placid Systems



-- 
Prashant Deva
Creator, ANTLR Studio, http://www.antlrstudio.com <http://www.antlrstudio.com> 
Founder, Placid Systems



==============================================================================
Please access the attached hyperlink for an important electronic communications disclaimer: 

http://www.csfb.com/legal_terms/disclaimer_external_email.shtml

==============================================================================
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/37f4e760/attachment-0001.html
From fwittenburg at nemetschek.de  Thu Oct 20 05:48:44 2005
From: fwittenburg at nemetschek.de (fwittenburg@nemetschek.de)
Date: Thu Oct 20 05:48:37 2005
Subject: [antlr-interest] Problem with Cpp-Grammer (declarator)
Message-ID: <OF925508BC.59EEBB59-ONC12570A0.0046272C-C12570A0.00465B7A@nemetschek.de>


Hello,

I have code, that looks like this:

int (data[6]); // unexpected token: ;
void datafun(char *(installsources[6])); // expecting STAR, found
'installsources

I have tried to fix the parser, with

direct_declarator
{char *id;
CPPParser::TypeQualifier tq;}
...
| LPAREN declarator RPAREN // declarator_suffixes
;

But now, the parser can't handle

typedef int (__cdecl * _onexit_t)(void);

Since I'm not really an expert, I would like to ask for a fix.

Another little bug is: reinterpret_cast<const char*>(data)

I fixed it with:
postfix_expression
...
("dynamic_cast"|"static_cast"|"reinterpret_cast"|"const_cast") // Note
const_cast in elsewhere
LESSTHAN ("const")? ts = type_specifier[ds] (ptr_operator)? GREATERTHAN
LPAREN expression RPAREN

Is there a better way to do it?

Regards Florian




**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

This footnote also confirms that this email message has been swept by
MIMEsweeper and SOPHOS Antivirus for the presence of computer viruses.

**********************************************************************

From mail at martin-probst.com  Thu Oct 20 07:09:27 2005
From: mail at martin-probst.com (Martin Probst)
Date: Thu Oct 20 07:09:34 2005
Subject: [antlr-interest] potentially stupid question
In-Reply-To: <e88138500510191657k2bc871a3ya19932a8aff1f686@mail.gmail.com>
References: <e88138500510191238u189bb09eqe61558958978f51d@mail.gmail.com>
	<1129760086.9181.11.camel@localhost.localdomain>
	<e88138500510191657k2bc871a3ya19932a8aff1f686@mail.gmail.com>
Message-ID: <1129817367.7855.58.camel@localhost.localdomain>

Hi,

> What I also need is the offset, from the beginning of the input
> stream/buffer. I noticed a mark() method in the Parser base class, but
> I'm not sure if this is what I want to use.

No, that one is used for rewinding the stream afaik. But it should be
fairly easy to modify your Lexer to keep track of the character/byte
offset in the file. I'm not completely sure where, but there is some
place where the Lexer increases the column count by one. 

Just override the method and add another field ('offset') and increase
that one too, but don't set it to zero on a line break. Should do the
trick.

Martin

From jim.crafton at gmail.com  Thu Oct 20 07:29:41 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Thu Oct 20 07:29:43 2005
Subject: [antlr-interest] potentially stupid question
In-Reply-To: <1129817367.7855.58.camel@localhost.localdomain>
References: <e88138500510191238u189bb09eqe61558958978f51d@mail.gmail.com>
	<1129760086.9181.11.camel@localhost.localdomain>
	<e88138500510191657k2bc871a3ya19932a8aff1f686@mail.gmail.com>
	<1129817367.7855.58.camel@localhost.localdomain>
Message-ID: <e88138500510200729s11385f1bi47275d2fbab56174@mail.gmail.com>

Martin,


> Just override the method and add another field ('offset') and increase
> that one too, but don't set it to zero on a line break. Should do the
> trick.

Will this also take into account whitespace?  I'll try and look around
tonight and see if this works.

Cheers, and thanks!

Jim
From dcaton at shorelinesoftware.com  Thu Oct 20 08:00:59 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Thu Oct 20 08:01:04 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <41fed8f80510200032o6e222bbck1b39aa6c5bf182a9@mail.gmail.com>
Message-ID: <1129821031.29426@mx9.mysite4now.com>

Prashant:
 
The whole world isn't using Java, Eclipse and Antlr Studio. 
 
There seems to be a feeling here that there is a tradeoff between efficient
code, and "pretty" or readable code.  I love Antlr, but the generated code
isn't all that readable now.  Especially when you use #( ... ) to generate
trees, the generated code will make your eyes bleed.  It's one huge nested
expression on a single line with no whitespace or any attempt to nicely
format it.  Try debugging that when you've accidentally created a tree that
recurses on itself.
 
In any case, there's no connection between any particular coding construct,
whether it's an if statement or an exception or whatever, and how readable
that code might be.  Readability is a matter of style and formatting. You
can take the simplest piece of code and format it in such as way that it is
unreadable.  You could take an entire C++ program and put it on a single
line, or you could put line feeds between each token and expand it
vertically to an unreadable level.  Could be the best piece of code in the
world, just bad formatting.
 
Don
 
 
  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Thursday, October 20, 2005 3:32 AM
To: Nigel Sheridan-Smith
Cc: ANTLR Interest
Subject: Re: [antlr-interest] syntactic predicates and exceptions



>If you remove exception handling for back-tracking, there is one risk: the
>readability of the code (and hence the ease of debugging and tracing) will
>be reduced.
With ANTLR Studio available, I dont think debugging the generated code
should be an issue as you can debug right into the grammar file and take a
look at 'live' parse trees and ASTs etc.
So I think it is quite ok that the code is a little cluttered up if the gain
in speed is large.

PRASHANT



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/09018224/attachment.html
From open.zone at virgin.net  Thu Oct 20 08:32:50 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Oct 20 08:17:52 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <435767B6.5000900@shmuelhome.mine.nu>
Message-ID: <001001c5d58b$895fe220$6902a8c0@hercules>


> Nigel Sheridan-Smith wrote:
> > I don't want to weigh in to this argument too much, but I 
> do want to 
> > mention one point.
> > 
> > If you remove exception handling for back-tracking, there 
> is one risk: 
> > the readability of the code (and hence the ease of debugging and 
> > tracing) will be reduced.
> > 
> Don't underestimate this point. The readability is one of the main 
> selling points of antlr. At least that is how I get away with 
> using it 
> in a yacc shop.

Actually, the selling point is that it generates code that resembles what a
person might write while developing a hand-crafted parser. Getting rid of
exceptions for backtracking takes ANTLR closer to that ideal.  ;-)

Seriously, I have hand-crafted and also generated code that eschew the use
of exceptions for all but *truly* exceptional events and yes, the speed
boost is substantial and, I've had no problems come debug time. I don't
remember ever wishing it was more like ANTLR's default code output. I do
remember the satisfaction of seeing my language processors execute more
quickly than they would have otherwise ;-)

Cheers,

Micheal

From mail at martin-probst.com  Thu Oct 20 09:59:18 2005
From: mail at martin-probst.com (Martin Probst)
Date: Thu Oct 20 09:59:23 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129821031.29426@mx9.mysite4now.com>
References: <1129821031.29426@mx9.mysite4now.com>
Message-ID: <1129827558.7855.71.camel@localhost.localdomain>

Hi,
 
> There seems to be a feeling here that there is a tradeoff between
> efficient code, and "pretty" or readable code.  

Yes. Though I'm not completely sure that is actually true. I mean, most
of the time it will be something along the lines of:
> if (!match(FOO))
>   return false;
instead of
> match(FOO);
which is not actually killing me. Indeed, it may be nicer to debug, as
you clearly see that this match() didn't work while stepping over,
instead of being thrown to a completely different place in the code at
once.

> I love Antlr, but the generated code isn't all that readable now.
> Especially when you use #( ... ) to generate trees, the generated code
> will make your eyes bleed.

+1 from me, maybe someone could hack something that adds an occasional
line break in there?

Speaking of bleeding eyes btw, could you guys refrain from writing HTML
mails to a mailing list?
 
> Readability is a matter of style and formatting. You can take the
> simplest piece of code and format it in such as way that it is
> unreadable.

Except for perl of course...

Martin

From chris at lotuscat.com  Thu Oct 20 10:02:10 2005
From: chris at lotuscat.com (Chris Black)
Date: Thu Oct 20 10:05:45 2005
Subject: Speed vs Readability (was: Re: [antlr-interest] syntactic predicates
	and exceptions)
In-Reply-To: <001001c5d58b$895fe220$6902a8c0@hercules>
References: <001001c5d58b$895fe220$6902a8c0@hercules>
Message-ID: <4357CD92.4080406@lotuscat.com>

I've been following this thread with interest and have decided to 
finally chime in (and change the subject header to something more 
indicative of the discussion). Some of my main reasons for using ANTLR 
rather than hand-coded parsers are speed and maintainability/readability 
of the GRAMMAR files (not the generated code). That the generated code 
is readable is nice, and certainly a bonus when it comes time to debug, 
but here are my thoughts on the matter:
Go for speed of the core engine first. The code generator can always be 
adjusted to add readability later (by adding comments or generating 
better formatted/readable code).

Chris

Micheal J wrote:

>>Nigel Sheridan-Smith wrote:
>>    
>>
>>>the readability of the code (and hence the ease of debugging and 
>>>tracing) will be reduced.
>>>
>>>      
>>>
>>Don't underestimate this point. The readability is one of the main 
>>selling points of antlr. At least that is how I get away with 
>>using it 
>>in a yacc shop.
>>    
>>
>
>Actually, the selling point is that it generates code that resembles what a
>person might write while developing a hand-crafted parser. Getting rid of
>exceptions for backtracking takes ANTLR closer to that ideal.  ;-)
>
>Seriously, I have hand-crafted and also generated code that eschew the use
>of exceptions for all but *truly* exceptional events and yes, the speed
>boost is substantial and, I've had no problems come debug time. I don't
>remember ever wishing it was more like ANTLR's default code output. I do
>remember the satisfaction of seeing my language processors execute more
>quickly than they would have otherwise ;-)
>
>Cheers,
>
>Micheal
>
>  
>

From prashant.deva at gmail.com  Thu Oct 20 10:26:36 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Oct 20 10:26:40 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129827558.7855.71.camel@localhost.localdomain>
References: <1129821031.29426@mx9.mysite4now.com>
	<1129827558.7855.71.camel@localhost.localdomain>
Message-ID: <41fed8f80510201026t57f25887x40cc06c5fcfa893a@mail.gmail.com>

I believe we should forget discussing whether to include 'if's or not and
think how to include them in the current code gen, which is what is all
about.

On 10/20/05, Martin Probst <mail@martin-probst.com> wrote:
>
> Hi,
>
> > There seems to be a feeling here that there is a tradeoff between
> > efficient code, and "pretty" or readable code.
>
> Yes. Though I'm not completely sure that is actually true. I mean, most
> of the time it will be something along the lines of:
> > if (!match(FOO))
> > return false;
> instead of
> > match(FOO);
> which is not actually killing me. Indeed, it may be nicer to debug, as
> you clearly see that this match() didn't work while stepping over,
> instead of being thrown to a completely different place in the code at
> once.
>
> > I love Antlr, but the generated code isn't all that readable now.
> > Especially when you use #( ... ) to generate trees, the generated code
> > will make your eyes bleed.
>
> +1 from me, maybe someone could hack something that adds an occasional
> line break in there?
>
> Speaking of bleeding eyes btw, could you guys refrain from writing HTML
> mails to a mailing list?
>
> > Readability is a matter of style and formatting. You can take the
> > simplest piece of code and format it in such as way that it is
> > unreadable.
>
> Except for perl of course...
>
> Martin
>
>


--
Prashant Deva
Creator, ANTLR Studio,www.antlrstudio.com <http://www.antlrstudio.com>
Founder, Placid Systems, www.placidsystems.com<http://www.placidsystems.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/50cddecd/attachment-0001.html
From prashant.deva at gmail.com  Thu Oct 20 11:09:52 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Oct 20 11:09:57 2005
Subject: Speed vs Readability (was: Re: [antlr-interest] syntactic
	predicates and exceptions)
In-Reply-To: <4357CD92.4080406@lotuscat.com>
References: <001001c5d58b$895fe220$6902a8c0@hercules>
	<4357CD92.4080406@lotuscat.com>
Message-ID: <41fed8f80510201109m66adf42cm4177d170f9bbbce9@mail.gmail.com>

I agree.
Readability should be the job of ides.
ANTLR itself should focus on going fast.

On 10/20/05, Chris Black <chris@lotuscat.com> wrote:
>
> I've been following this thread with interest and have decided to
> finally chime in (and change the subject header to something more
> indicative of the discussion). Some of my main reasons for using ANTLR
> rather than hand-coded parsers are speed and maintainability/readability
> of the GRAMMAR files (not the generated code). That the generated code
> is readable is nice, and certainly a bonus when it comes time to debug,
> but here are my thoughts on the matter:
> Go for speed of the core engine first. The code generator can always be
> adjusted to add readability later (by adding comments or generating
> better formatted/readable code).
>
> Chris
>
> Micheal J wrote:
>
> >>Nigel Sheridan-Smith wrote:
> >>
> >>
> >>>the readability of the code (and hence the ease of debugging and
> >>>tracing) will be reduced.
> >>>
> >>>
> >>>
> >>Don't underestimate this point. The readability is one of the main
> >>selling points of antlr. At least that is how I get away with
> >>using it
> >>in a yacc shop.
> >>
> >>
> >
> >Actually, the selling point is that it generates code that resembles what
> a
> >person might write while developing a hand-crafted parser. Getting rid of
> >exceptions for backtracking takes ANTLR closer to that ideal. ;-)
> >
> >Seriously, I have hand-crafted and also generated code that eschew the
> use
> >of exceptions for all but *truly* exceptional events and yes, the speed
> >boost is substantial and, I've had no problems come debug time. I don't
> >remember ever wishing it was more like ANTLR's default code output. I do
> >remember the satisfaction of seeing my language processors execute more
> >quickly than they would have otherwise ;-)
> >
> >Cheers,
> >
> >Micheal
> >
> >
> >
>
>


--
Prashant Deva
Creator, ANTLR Studio,www.antlrstudio.com <http://www.antlrstudio.com>
Founder, Placid Systems, www.placidsystems.com<http://www.placidsystems.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/8ff72dc1/attachment.html
From ric.klaren at gmail.com  Thu Oct 20 13:34:49 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Oct 20 13:34:52 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <41fed8f80510201026t57f25887x40cc06c5fcfa893a@mail.gmail.com>
References: <1129821031.29426@mx9.mysite4now.com>
	<1129827558.7855.71.camel@localhost.localdomain>
	<41fed8f80510201026t57f25887x40cc06c5fcfa893a@mail.gmail.com>
Message-ID: <bc607a4e0510201334k27c17319k51198f857d8be911@mail.gmail.com>

With antlr3 it's just a matter of putting in different codegeneration
templates to tweak the code generated, so accomodating either option
should not be a big problem. Some extra suppor (or changes to) classes
in the runtime might also be required.

For C codegen in v3 using ifs was easily implemented in the templates only.

Tweaking the generated code will be very easy in v3 (I hope we'll
figure out a good mechanism to specify overrides)

Cheers,

Ric
From andrei at metalanguage.com  Thu Oct 20 13:44:24 2005
From: andrei at metalanguage.com (Andrei Alexandrescu)
Date: Thu Oct 20 13:44:28 2005
Subject: [antlr-interest] Re: Speed vs Readability
In-Reply-To: <41fed8f80510201109m66adf42cm4177d170f9bbbce9@mail.gmail.com>
References: <001001c5d58b$895fe220$6902a8c0@hercules>	<4357CD92.4080406@lotuscat.com>
	<41fed8f80510201109m66adf42cm4177d170f9bbbce9@mail.gmail.com>
Message-ID: <435801A8.1010200@metalanguage.com>

Prashant Deva wrote:
> I agree.
> Readability should be the job of ides.
> ANTLR itself should focus on going fast.

I think this whole discussion is lingering on a presupposition that is 
simply wrong. Code using if statements as opposed to exceptions can be 
eminently readable, possibly even more so. So instead of discussing on 
how important readability is, we better focus - with examples - on how 
things would look and perform one way or the other.

I know ANTLR exceptions have annoyed me in the past on both 
readabilty/traceability and performance.


Andrei
From Ger.Hobbelt at bermuda-holding.com  Thu Oct 20 14:20:31 2005
From: Ger.Hobbelt at bermuda-holding.com (Gerrit E.G. Hobbelt)
Date: Thu Oct 20 14:06:51 2005
Subject: [antlr-interest] question on greedy matching
References: <1129651947.28074@mx9.mysite4now.com><7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu><B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com><F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu><9da4f4520510181315t20b23077u@mail.gmail.com><B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com><B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com><4355AA95.3000202@metalanguage.com>
	<bc607a4e0510200050i775cf6cel5cbb7380bb0ab245@mail.gmail.com>
Message-ID: <E2774CFE80B94E1E9F06CECE7AC1AFB2@walgelijk>

From: "Ric Klaren" <ric.klaren@gmail.com>
[...]
> > Consider the following language design for a sort of a try statement:
> >
> > try statement ( catch (ID ID) '{' statement '}' )+
[...]
> > Moreover, in the example:
> >
> > try
> >      try
> >          foo();
> >      catch (E1 e) { bar(); }
> > catch (E2 e) { baz(); }
> > catch (E3 e) { baa(); }
> >
> > again the rule makes the statements bind as the indentation suggests.
[...]
> Alternatively:
>
> start out with a try rule with only one catch. Then define an extra
> alternative (probably in the statement rule to collect trailing catch
> statements) Some checks are probably necessary afterwards to see if
> everything made sense. The catch all might need a predicate to prevent
> it from being entered if the preceding statement was not a try.

Hm, I just might be saying the same thing (I don't think so, but I might've
misinterpreted that last paragraph there) when I suggest this solution, of
course assuming your meta-rule applies:



Use two rules for 'try/catch': one for an 'outer try' (which by your
definition may have multiple consecutive catch phrases) and one for 'inner
try' statement blocks, where each 'inner try' must have only one 'catch',
hence matching your meta-rule.

Excuse me, but my ANTLR is *very* rusty ATM, though my attempt at this would
probably look a bit like this:

-------------

// fluff
source: ( function )+
function: header base_statement_block;

// here it comes: inner vs. outer
base_statement_block: (no_try_statement | outer_try_stmt)+;

outer_try_stmt: 'try'
                    (no_try_statement | inner_try_stmt)+
               (catch_phrase)+; // accept one or more catch sections

inner_try_stmt: 'try'
                    (no_try_statement | inner_try_stmt)+
               catch_phrase;  // accept one and only one catch section

// and choose one of these 'catch_phrase' rules:
// alternative A for catch with mandatory curly's:
//             try statement ( catch (ID ID) '{' statement '}' )+

catch_phrase: '{' base_statement_block '}';
              // outer_try_stmt acceptable as curly's unambiguously
delineate a base_statement_block

// or this enhancement for A:
// alternative B, which _includes_ support for
//             try statement ( catch (ID ID) statement )+
// assuming the additional meta-rule defined below

catch_phrase: (no_try_statement | inner_try_stmt)+ ;
                // accept try/catch nesting in catch section, naturally ;-)

no_try_statement: '{' base_statement_block '}'
                             // curly's explicitly delineate a code section,
like in the 'C' language
                          |  // all non-'try' single statements for this
language:
                            'if' yada | 'for' walla |
whatever__you_get_the_idea;

-------------

If I'm not mistaken, this is still somewhat readable, doesn't need
predicates and is a hack which even makes

> > try statement ( catch (ID ID) statement )+

work, when using catch_phrase rule 'B' and assuming an EXTRA (2nd) meta-rule
to disambiguate this lovely language: "all statements following a 'catch'
keyword will be assumed to be part of the catch phrase until another 'catch'
statement at the same block-level is found or the end of this code section
has been reached (i.e. one of: end of function, end of block, end of
source)".

It would make

> lot of disambiguation, because how are you going to interpret:
>
> try
>       try
>           foo();
>       catch (E1 e) try bar(); catch (E3 e) zip();
> catch (E2 e) baz();

unambiguously parseable - or am I completely out of my mind by now? (again,
I assume both meta rules here. No rules? No dice.)

I expect my 'solution' to provide this parse result - curly braces added to
identify major parse tree levels:

try {                   // outer_try - level #0
      try {             // inner_try - level #1
           foo();        // no_try_stmt
       }
       catch (E1 e) { // catch_phrase @ level #1
         // 2nd meta-rule says: gobble as much as you can:
         try {          // inner_try as part of catch_phrase [i.e. level #2]
            bar();     // no_try_Stmt
         }
         catch (E3 e) { // catch_phrase @ level #2
            zip();
         }
       } // 'catch (E2 ...' is identified as second catch at level #2 -->
fallback to #1
       // ... also second catch at #1 --> fallback to #0
}
catch (E2 e) {        // catch_phrase for outer_try [level #0]
  baz();
}
// end of code section


The above should probably even work with yuck, I mean, yacc. ;-)


HTH,

Ger

From jpschewe at mtu.net  Thu Oct 20 16:03:29 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Thu Oct 20 16:03:33 2005
Subject: [antlr-interest] Lexer not as smart as it should be?
Message-ID: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051020/6d16aa73/attachment.bin
From Ger.Hobbelt at bermuda-holding.com  Thu Oct 20 17:02:05 2005
From: Ger.Hobbelt at bermuda-holding.com (Gerrit E.G. Hobbelt)
Date: Thu Oct 20 16:48:23 2005
Subject: [antlr-interest] syntactic predicates and exceptions
References: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu><41fed8f80510180947q7432bc0ep2cdd973ed511e6c2@mail.gmail.com>
	<B34B616D-5204-4D20-B8B8-B09CDD24CE89@cs.usfca.edu>
Message-ID: <313BC89C968349F7995F89783DBD165C@walgelijk>

From: "Terence Parr" <parrt@cs.usfca.edu>
> in that error clause. :(  I suppose try/finally is the answer.  What
> about C++?  Gotos?

Can't quote chapter and verse, but the latest ISO C/C++ standards define
try/finally (Microsoft: __try/__finally).


This would cover (GNU gcc & MSVC offer it at least) about, errr, say 90% of
the appdev market, but I hope you take into account that there are a myriad
of non-Intel embedded platforms out there, which come with C (or even C++,
good golly!) compilers which have just about noticed the old ANSI C and/or
'Stroustrup' C++ standards.
Not all of those are up to parr (pun intended) with the latest and greatest
of programming language standards, but it'd be nice if we can do without
Yucky Yacc for development there too, so I guess it's goto's for us, old
timers. ;-)



I expect you will run into all the ugly bits of code generation if you can
get antlr to generate memoryleak-free ('old') ANSI C code without any
setjmp()/signal() hack, so you might try that to test the span / capability
of new codegen concepts.
Heck, you (and Tom Moog) made it happen once with PCCTS, so why shouldn't we
try again with ANTLR v3, eh?



> Also using a return value is a drag as I have to deal with user
> return values.

May I suggest the nasty way out: creating functions with an extra
'parameter/argument' which is passed by reference, so that the called
function can set this parameter to the error-value fo choice and pass it
back to the callee? My own tweaked PCCTS copy does something like that when
generating re-entrent parsers [it's too long ago since I last looked at the
official release but I expect it's in there too]. Anyway, this 'solution'
wouldn't collide with any user return values, right?
The same parameter can be 'enhanced' to allow for passing other
'parser-global' state info up & down too.


> perhaps a separate stack for error returns?  Can we get away with a
> single global instance var for errors like the old errno for old unix?

I am but a humble measly software engineer, but, puhleeeez, I beg of you:
*DON'T* EVEN CONSIDER THAT 'errno' ONE.
I suddenly recall this magnificent project where I had to create a
re-entrant, thread-safe script parser/interpreter, using yacc. Uh-huh. Yep,
the yacc became a hairy bison, and _that_ one got it's own, custom tweaked
parser skeleton, just so as to get rid of the last horrid bits of His
Globalness. It worked, but don't try this at home, Young Maintenance Paduan!
Too bad I only learned about PCCTS shortly after I got that heap of guano
working. Detailed parser error reporting to the script-programmers would
have been soooo much easier.


Best regards,

Ger






[Nightmare Thought: write a codegen for antlr which regurgitates the parser
as a set of SQL stored procedures. Or LISP output, anyone? That'll get your
knickers twisted.]

From Ger.Hobbelt at bermuda-holding.com  Thu Oct 20 17:24:13 2005
From: Ger.Hobbelt at bermuda-holding.com (Gerrit E.G. Hobbelt)
Date: Thu Oct 20 17:10:27 2005
Subject: [antlr-interest] syntactic predicates and exceptions
References: <1129821031.29426@mx9.mysite4now.com><1129827558.7855.71.camel@localhost.localdomain><41fed8f80510201026t57f25887x40cc06c5fcfa893a@mail.gmail.com>
	<bc607a4e0510201334k27c17319k51198f857d8be911@mail.gmail.com>
Message-ID: <6C01FFED18384619ACCEB5CF1734B475@walgelijk>

From: "Ric Klaren" <ric.klaren@gmail.com>
> With antlr3 it's just a matter of putting in different codegeneration
> templates to tweak the code generated, so accomodating either option
> should not be a big problem. Some extra suppor (or changes to) classes
> in the runtime might also be required.
>
> For C codegen in v3 using ifs was easily implemented in the templates
only.

I'm glad to hear that as I try to follow this argument (in which I lean
towards Nigel's opinion).


Besides that, I am probably one of those blokes not particularly interested
in an ANTLR IDE (call me 'old fashioned') and who likes the fact that, while
applying a wee bit of grey matter, you can easily track/debug ANTLR
generated code. Try yacc-tables on for size instead, ESPECIALLY when you've
got something going on which might - the Gods forbid! - hint at a subtle bug
in the parser generator tool itself. Or some code generator anomaly which
didn't make into the documentation. Oh sure, stuff like that happens only to
crazy ol' me. Yeah, right.
And then there are the times when I need something that coughs up code
without *any* exceptions, maybe even written in such an arcane language
like, say, 'C' for some [embedded] product.


Bottom line: I suggest: cop out by offering both: generated code
- with exceptions at any location where they're handy codesize-wise (Antlr
On A Conditionals Diet(tm)), and
- without any, for those that need 'Low On Clockticks(tm)' Health Code With
Extra Fiber for high-performance and/or specific embedded environments (e.g.
where exceptions are severily frowned upon as per company policy).
Both versions do not need to be maintained by the same people, thus
spreading the workload. And, yes, I realize this adds to the complexity of
the antlr package as a whole. So be it.

I can't find another way to satisfy both 'groups' of developers, who have
partly contrasting goals (ease of readability/maintainability throughout
versus top performance of the end result: it's the application versus system
engineers hustle all over again)




It all reminds me about the good ol' days of PCCTS, which was/is able to
produce 'C' code without exceptions while you could write your grammar WITH
[some sort of] exceptions - I loved that! -, so if Ric has a way to somehow
rewrite those ANTLR exceptions to 'C' 'if' statements in the codegen
templates, I'd be all for it to go that way, no matter how 'complex' the
generated end result turns out to be.

Languages with exception support (java, C++, what-have-you) could then be
offered with two templates: one 'basic', which uses native exception
handling and puts 'clean, concise and readable' before utter parsing
performance, and another 'high perf' one, where exceptions are rewritten as
chunks of 'if's, etc., where looking at the code might be considered harmful
;-)
You could then delegate the maintenance of the 'high perf' templates to
those that need/want them anyway (embedded development, etc.), assuming the
majority prefers the 'Exceptions Included' package.


Note that I'm not worried about 'backtracking versus other situations', but
that I'd like to see this considered at a slightly higher level: any
exceptions at *all*? Or exceptions at all those spots where it significantly
reduces the LOC (Lines Of Code #) - and hence inproves the [perceived]
legibility and maintainability?




My 2 Eurocents.

Best regards,

Ger

From nbsherid at secsme.org.au  Thu Oct 20 17:17:42 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Thu Oct 20 17:18:19 2005
Subject: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
Message-ID: <000601c5d5d4$ec49a6c0$d629198a@nigelnote>

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Jon Schewe
Sent: Friday, 21 October 2005 9:03 AM
To: ANTLR Interest
Subject: [antlr-interest] Lexer not as smart as it should be?

 

I'm trying to handle IP addresses in my lexer.  Below are the important
rules.





Have a browse of this thread from June regarding IPv4/IPv6 addresses and MAC
addresses:

 

http://www.antlr.org/pipermail/antlr-interest/2005-June/012655.html

 

You probably need to increase k>=4 in the lexer, if you are defining one
rule as three digits followed by a dot. This is required to distinguish
between integers and IP addresses. If you then add floats you will have a
problem, so you probably need syntactic or semantic predicates for
disambiguation, or one big "anything goes" token that combines the lot.  

 

Mark and I had some good ideas for a suitable grammer, so check out the URL.

 

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051021/ec0e103c/attachment-0001.html
From nbsherid at secsme.org.au  Thu Oct 20 17:26:05 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Thu Oct 20 17:26:38 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <6C01FFED18384619ACCEB5CF1734B475@walgelijk>
Message-ID: <000d01c5d5d6$1853f440$d629198a@nigelnote>


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Gerrit E.G. Hobbelt
> Sent: Friday, 21 October 2005 10:24 AM
> To: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] syntactic predicates and exceptions
> 
> 
> 
> Bottom line: I suggest: cop out by offering both: generated code
> - with exceptions at any location where they're handy codesize-wise (Antlr
> On A Conditionals Diet(tm)), and
> - without any, for those that need 'Low On Clockticks(tm)' Health Code
> With
> Extra Fiber for high-performance and/or specific embedded environments
> (e.g.
> where exceptions are severily frowned upon as per company policy).
> Both versions do not need to be maintained by the same people, thus
> spreading the workload. And, yes, I realize this adds to the complexity of
> the antlr package as a whole. So be it.
> 

I agree with this entirely, but it really just comes down to how much more
complex is the code generated going to be. If you end up with something like
(as suggested by Martin):

if (!match(ID))
{ 
  return false;
}

then that is much more readable than 5+ levels of nesting of
ifs/breaks/continues/gotos/etc. If it is going to be that simple, then there
is not any loss in readability (it may actually be in increase in
'understandability', since the error handling is explicit), so exceptions
will not be any better in this department.

So once everyone (more likely, Terence, unfortunately) comes up with the
suitable replacement for exceptions, then its just a matter of judging how
much obstruction there would be, and how important this is to the ANTLR
users/community.

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435

From Ger.Hobbelt at bermuda-holding.com  Thu Oct 20 17:50:46 2005
From: Ger.Hobbelt at bermuda-holding.com (Gerrit E.G. Hobbelt)
Date: Thu Oct 20 17:37:00 2005
Subject: [antlr-interest] Lexer not as smart as it should be?
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
Message-ID: <5CAC7FE79FC44A47864684C13DFFF9BB@walgelijk>

Take as an example the input

4

which is a single INT.
To which token should the lexer resolve this one? It matches the rule (INT)+
as it is 1(one) occurrence of INT, so it's an INTEGER, but OTOH, it also
matches INT (INT (INT)?)? as it is a single INT, thus it's an IPSEG.

same for an input of two INTs and an input of three INTs: there's no way
this set of rules uniquely identifies the token to pick. So antlr yaks about
it by yelling nondeterminism ;-)

A bit of a hack (imho) is to define an INTEGER token to equal an IPSEG (one
to 3 digits) or a collection of 4 or more digits. You might try something
like this:

INTEGER: IPSEG (INT)* ;

but then you should consider how and where you wish to validate the 'IPSEG'
range of acceptable values (0 to 255 inclusive for IPv4), so, when you
choose to validate the IP number using a bit of code you might ultimately
reduce the ruleset to

IP :
    INTEGER '.' INTEGER '.' INTEGER '.' INTEGER '/' INTEGER
  ;

which in itself would still be valid when you upgrade your implementation to
IPv6 support ;-)


Anyway, when you like to strictly differentiate between IPSEG and INTEGER in
your rule-set, you'll have to define a complementing definition for INTEGER
to give the lexer a shot at uniquely identfying the token at hand, so if you
used

IPSEG
  :
    INT
  | (INT INT)
  | ('0'..'2' '0'..'5' INT)
  ;

it'd require this extension/complement for an INTEGER ==>

INTEGER:
    IPSEG // up to 3 digits: '25x'
    | ('0'..'2' '6'..'9' INT) // the other 3-digit combo's
    | ('3'..'9' INT INT)
    | INT INT INT INT+ ; // 4 or more digits


It's rather late now, so I might have erred. Hope it helps anyway,

Ger



----- Original Message -----
From: Jon Schewe
To: ANTLR Interest
Sent: Friday, 21 October 2005 01:03
Subject: [antlr-interest] Lexer not as smart as it should be?


I'm trying to handle IP addresses in my lexer.  Below are the important
rules.


INTEGER
  :
    ( INT )+
  ;

protected
INT
  :
    '0'..'9'
  ;

protected
IPSEG
  :
    INT (INT (INT)? )?
  ;

IP :
    IPSEG '.' IPSEG '.' IPSEG '.' IPSEG '/' INT (INT)?
  ;


This yields these errors:
ANTLR Parser Generator   Version 2.7.4   1989-2004 jGuru.com
/net/users/jschewe/projects/argus/working-dir/java/src/scyllarus/verter/snor
t/snort_rule.g: warning:lexical nondeterminism between rules INTEGER and IP
upon
/net/users/jschewe/projects/argus/working-dir/java/src/scyllarus/verter/snor
t/snort_rule.g:     k==1:'0'..'9'
/net/users/jschewe/projects/argus/working-dir/java/src/scyllarus/verter/snor
t/snort_rule.g:     k==2:'0'..'9'
/net/users/jschewe/projects/argus/working-dir/java/src/scyllarus/verter/snor
t/snort_rule.g:     k==3:'0'..'9'
/net/users/jschewe/projects/argus/working-dir/java/src/scyllarus/verter/snor
t/snort_rule.g:     k==4:'0'..'9'

Why does the lexer even consider IP after the fourth number?  Since IPSEG
can only be a maximum of 3 integers?

I even tried using this rule for IPSEG and it still can't figure it out.
protected
IPSEG
  :
    INT
  | (INT INT)
  | ('0'..'2' '0'..'5' INT)
  ;





Jon Schewe | http://www.mtu.net/~jpschewe
If you see a signature.asc file attached to the message this is my digital
signature.
See http://www.gnupg.org for more information.

For I am convinced that neither death nor life, neither angels
nor demons, neither the present nor the future, nor any
powers, neither height nor depth, nor anything else in all
creation, will be able to separate us from the love of God that
is in Christ Jesus our Lord. - Romans 8:38-39

From sohail at taggedtype.net  Thu Oct 20 20:39:06 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu Oct 20 20:39:12 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <313BC89C968349F7995F89783DBD165C@walgelijk>
References: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>
	<41fed8f80510180947q7432bc0ep2cdd973ed511e6c2@mail.gmail.com>
	<B34B616D-5204-4D20-B8B8-B09CDD24CE89@cs.usfca.edu>
	<313BC89C968349F7995F89783DBD165C@walgelijk>
Message-ID: <1129865946.10087.0.camel@localhost.localdomain>

On Fri, 2005-21-10 at 02:02 +0200, Gerrit E.G. Hobbelt wrote:
> From: "Terence Parr" <parrt@cs.usfca.edu>
> > in that error clause. :(  I suppose try/finally is the answer.  What
> > about C++?  Gotos?
> 
> Can't quote chapter and verse, but the latest ISO C/C++ standards define
> try/finally (Microsoft: __try/__finally).

I don't think this is standard  at all. You might be thinking about C++
extensions that Microsoft has proposed for ISO. This is distinct from
the C++ standard.

From nbsherid at secsme.org.au  Thu Oct 20 21:59:48 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Thu Oct 20 22:00:21 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <1129865946.10087.0.camel@localhost.localdomain>
Message-ID: <000f01c5d5fc$54cd4220$d629198a@nigelnote>


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Sohail Somani
> Sent: Friday, 21 October 2005 1:39 PM
> To: Gerrit E.G. Hobbelt
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] syntactic predicates and exceptions
> 
> On Fri, 2005-21-10 at 02:02 +0200, Gerrit E.G. Hobbelt wrote:
> > From: "Terence Parr" <parrt@cs.usfca.edu>
> > > in that error clause. :(  I suppose try/finally is the answer.  What
> > > about C++?  Gotos?
> >
> > Can't quote chapter and verse, but the latest ISO C/C++ standards define
> > try/finally (Microsoft: __try/__finally). 
> 
> I don't think this is standard  at all. You might be thinking about C++
> extensions that Microsoft has proposed for ISO. This is distinct from
> the C++ standard.
> 

Searching for 'try', 'finally' and 'catch' in the latest standard (2004)
leads to zip. Searching for 'except' only pulls up information about
floating-point exceptions.

http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf

__try/__finally and __try/__except are definitely Microsoft extensions to C:

http://msdn.microsoft.com/library/en-us/vccelng/htm/key_s-z_4.asp
http://msdn.microsoft.com/library/en-us/vccelng/htm/key_s-z_5.asp

MS Windows also has its own exception handling mechanism, independent of the
source code language. 

http://msdn.microsoft.com/library/en-us/debug/base/raiseexception.asp

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435

From sohail at taggedtype.net  Thu Oct 20 22:07:26 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu Oct 20 22:07:33 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <000f01c5d5fc$54cd4220$d629198a@nigelnote>
References: <000f01c5d5fc$54cd4220$d629198a@nigelnote>
Message-ID: <1129871247.12655.1.camel@localhost.localdomain>

On Fri, 2005-21-10 at 14:59 +1000, Nigel Sheridan-Smith wrote:
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> > bounces@antlr.org] On Behalf Of Sohail Somani
> > Sent: Friday, 21 October 2005 1:39 PM
> > To: Gerrit E.G. Hobbelt
> > Cc: ANTLR Interest
> > Subject: Re: [antlr-interest] syntactic predicates and exceptions
> > 
> > On Fri, 2005-21-10 at 02:02 +0200, Gerrit E.G. Hobbelt wrote:
> > > From: "Terence Parr" <parrt@cs.usfca.edu>
> > > > in that error clause. :(  I suppose try/finally is the answer.  What
> > > > about C++?  Gotos?
> > >
> > > Can't quote chapter and verse, but the latest ISO C/C++ standards define
> > > try/finally (Microsoft: __try/__finally). 
> > 
> > I don't think this is standard  at all. You might be thinking about C++
> > extensions that Microsoft has proposed for ISO. This is distinct from
> > the C++ standard.
> > 
> 
> Searching for 'try', 'finally' and 'catch' in the latest standard (2004)
> leads to zip. Searching for 'except' only pulls up information about
> floating-point exceptions.

In a nutshell, finally is only needed for garbage collected languages.
You want to release resources after you leave scope, use a destructor.

From sohail at taggedtype.net  Thu Oct 20 22:15:17 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Thu Oct 20 22:15:22 2005
Subject: [antlr-interest] StringTemplate + ANTLR
Message-ID: <1129871718.12655.10.camel@localhost.localdomain>

Hi all,

So I'm at the point where I need to start generating the target code. I
came across an article that uses ANTLR + StringTemplate by manually
creating the StringTemplates. While this is all fine and dandy, it
crossed my mind that perhaps ANTLR can actually create the
StringTemplate for me.

Then I googled for CommonAST to StringTemplate and I came across
http://www.stringtemplate.org/doc/api/org/antlr/stringtemplate/language/StringTemplateAST.html

Before I get too excited, is it possible for ANTLR to generate the
StringTemplate for me using the above without embedding too many manual
actions in the parser? I've tried a syntax directed translation and its
just fugly. I've also read Terence's article about translators using
tree parsers instead of manually walking/using classes, but I don't
think that seems to apply to me and I'd like to see if I can use
StringTemplate.

Thanks in advance!

Sohail

From ric.klaren at gmail.com  Thu Oct 20 23:14:57 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Oct 20 23:15:00 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <6C01FFED18384619ACCEB5CF1734B475@walgelijk>
References: <1129821031.29426@mx9.mysite4now.com>
	<1129827558.7855.71.camel@localhost.localdomain>
	<41fed8f80510201026t57f25887x40cc06c5fcfa893a@mail.gmail.com>
	<bc607a4e0510201334k27c17319k51198f857d8be911@mail.gmail.com>
	<6C01FFED18384619ACCEB5CF1734B475@walgelijk>
Message-ID: <bc607a4e0510202314r3b037db1v33d2d3c110afa5a@mail.gmail.com>

On 10/20/05, Gerrit E.G. Hobbelt <Ger.Hobbelt@bermuda-holding.com> wrote:
> From: "Ric Klaren" <ric.klaren@gmail.com>
> > With antlr3 it's just a matter of putting in different codegeneration
> > templates to tweak the code generated, so accomodating either option
> > should not be a big problem. Some extra suppor (or changes to) classes
> > in the runtime might also be required.
> >
> > For C codegen in v3 using ifs was easily implemented in the templates
> only.
>
> I'm glad to hear that as I try to follow this argument (in which I lean
> towards Nigel's opinion).

Tweaking antlr3 output is very easy. (at least to me it seems to be ;) )

> Besides that, I am probably one of those blokes not particularly interested
> in an ANTLR IDE (call me 'old fashioned') and who likes the fact that, while
> applying a wee bit of grey matter, you can easily track/debug ANTLR
> generated code.

IDE wise some nice things are happening with ANTLR. There's antlr
works by Jean Bovet that's more geared to understanding what antlr (3)
is doing. And Prashants antlr plugin which is utterly impressive (yes
I'm saying impressive, and people who know me, know that I won't say
impressive that easily..) These are the first IDE's I consider using
to be honest.

> Try yacc-tables on for size instead, ESPECIALLY when you've
> got something going on which might - the Gods forbid! - hint at a subtle bug
> in the parser generator tool itself. Or some code generator anomaly which
> didn't make into the documentation. Oh sure, stuff like that happens only to
> crazy ol' me. Yeah, right.

Well 'Hobbelt' code is a bit notorious to be honest ;)

> And then there are the times when I need something that coughs up code
> without *any* exceptions, maybe even written in such an arcane language
> like, say, 'C' for some [embedded] product.

Basically it's possible. I'm not sure wether I'll invest the time to
make the prototype C codegen work again for antlr3 a lot of stuff
changed since my last attempt at syncing with Terence. Last week we
had some nice talks on factoring the codegeneration templates for the
different generation options (AST/debug and various combinations of
such) It looks like we nailed it down and Ter is hacking away at this.
After he's done I'll get C++ up and running. Then if I got the
energy/time I'll see if I can get the C target running again.

> Bottom line: I suggest: cop out by offering both: generated code
> - with exceptions at any location where they're handy codesize-wise (Antlr
> On A Conditionals Diet(tm)), and
> - without any, for those that need 'Low On Clockticks(tm)' Health Code With
> Extra Fiber for high-performance and/or specific embedded environments (e.g.
> where exceptions are severily frowned upon as per company policy).
> Both versions do not need to be maintained by the same people, thus
> spreading the workload. And, yes, I realize this adds to the complexity of
> the antlr package as a whole. So be it.

Easy for you to decide ;P it's not your time ;) In the general case
exception don't work bad for most error handling. Consider the
overhead of checking return values after every match and building
nested if's to accomodate (or goto/longjmp's maybe) Which will slow
down the general flow of control in a parser. We also thought of using
some object that would pass down a return value 'policy' that would
either throw or return an error code. Guess we have to play a bit
around with templates and see what looks nice and above all
maintainable.

> I can't find another way to satisfy both 'groups' of developers, who have
> partly contrasting goals (ease of readability/maintainability throughout
> versus top performance of the end result: it's the application versus system
> engineers hustle all over again)

Nothing like a religious war ;) especially viewed from the sideline :)
I'd suspect
'we' would just choose the most practicall one to implement and leave
the other as an excercise to the reader..... (gotta love saying that
>:-) miss my university days teaching ;) )

As mentioned before (and also on the workshop by less objective
people) stringtemplate rocks. A lot of the codegen can be tweaked or
completely altered by just changing a few text files, no recompiling
necessary. Only if the templates don't get enough information from the
environment recompiles and tweaks to the java parts of antlr are
necessary. The only thing to be decided is how to allow users to
override templates from antlr3. Per default adding a new target
involves one java file and the necessary template file(s) So it's not
as easy to say 'just add a new target'.

> It all reminds me about the good ol' days of PCCTS, which was/is able to
> produce 'C' code without exceptions while you could write your grammar WITH
> [some sort of] exceptions - I loved that! -, so if Ric has a way to somehow
> rewrite those ANTLR exceptions to 'C' 'if' statements in the codegen
> templates, I'd be all for it to go that way, no matter how 'complex' the
> generated end result turns out to be.

Well we'll know for sure when Terence implements the backtracking
stuff for java. I suspect there will be no problems in writing things
as templates.

> Languages with exception support (java, C++, what-have-you) could then be
> offered with two templates: one 'basic', which uses native exception
> handling and puts 'clean, concise and readable' before utter parsing
> performance, and another 'high perf' one, where exceptions are rewritten as
> chunks of 'if's, etc., where looking at the code might be considered harmful
> ;-)
> You could then delegate the maintenance of the 'high perf' templates to
> those that need/want them anyway (embedded development, etc.), assuming the
> majority prefers the 'Exceptions Included' package.

Actually it depends on your parsing problem which one might be the
high performance one. All those if checks also have their performance
hit. It depends on how exceptional exceptions are... If exceptions are
rare in your grammar (and input!) then using exceptions is high
performance if they're not then the if style might be best. (Another
argument for us to implement what's easiest, can't keep all happy
anyway... we'll try but we reserve the right to be utter bastards
anyway ;) well at least for the C++ target I would anyway.. I suspect
Terence will be pragmatic with Java as well especially when seeing how
easy it is to tweak output...)

> Note that I'm not worried about 'backtracking versus other situations', but
> that I'd like to see this considered at a slightly higher level: any
> exceptions at *all*? Or exceptions at all those spots where it significantly
> reduces the LOC (Lines Of Code #) - and hence inproves the [perceived]
> legibility and maintainability?

In general I got the impression from discussions so far that we'll go
for consistency anytime. Having multiple ways of dealing with it could
be messy.

Anyway these are my impressions/opinions so far... How things are/get
actually implemented might be another ;)

Cheers,

Ric
From ric.klaren at gmail.com  Thu Oct 20 23:29:42 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Oct 20 23:29:45 2005
Subject: [antlr-interest] syntactic predicates and exceptions
In-Reply-To: <313BC89C968349F7995F89783DBD165C@walgelijk>
References: <EBF0BFBE-BA0E-4B77-834E-E37B5AC1AC84@cs.usfca.edu>
	<41fed8f80510180947q7432bc0ep2cdd973ed511e6c2@mail.gmail.com>
	<B34B616D-5204-4D20-B8B8-B09CDD24CE89@cs.usfca.edu>
	<313BC89C968349F7995F89783DBD165C@walgelijk>
Message-ID: <bc607a4e0510202329q38f612a4j64de66ad17f627d6@mail.gmail.com>

On 10/20/05, Gerrit E.G. Hobbelt <Ger.Hobbelt@bermuda-holding.com> wrote:
> From: "Terence Parr" <parrt@cs.usfca.edu>
> > in that error clause. :(  I suppose try/finally is the answer.  What
> > about C++?  Gotos?
>
> Can't quote chapter and verse, but the latest ISO C/C++ standards define
> try/finally (Microsoft: __try/__finally).

Why have finally if you have destructors in C++ ?? One of those things
I really miss when dealing with Java. Basically any cleanups for a
rule you can stick into a destructor (like the C++ in 2.7.x deals with
tracing...)

> I expect you will run into all the ugly bits of code generation if you can
> get antlr to generate memoryleak-free ('old') ANSI C code without any
> setjmp()/signal() hack, so you might try that to test the span / capability
> of new codegen concepts.
> Heck, you (and Tom Moog) made it happen once with PCCTS, so why shouldn't we
> try again with ANTLR v3, eh?

I intend to stay as clear as possible from reference counters as
possible for V3 (C++) They caused me more than enough headache for v2.
I'd rather use some allocators and do cheap
garbage collection or see if we can glue in the boehm gc. Haven't
spend much time thinking on the tree stuff yet for C++, currently
still working on getting UTF decoding to play nice with everything.
Prototype handcrafted lexers are already spitting out tokens :) with a
new basic runtime port.

> > Also using a return value is a drag as I have to deal with user
> > return values.

Well return values you can also treat as refernce parameters (well as
long as they aren't primitive in java, have to revert to sillyness
then...)

> May I suggest the nasty way out: creating functions with an extra
> 'parameter/argument' which is passed by reference, so that the called
> function set this parameter to the error-value fo choice and pass it
> back to the callee? My own tweaked PCCTS copy does something like that when
> generating re-entrent parsers [it's too long ago since I last looked at the
> official release but I expect it's in there too]. Anyway, this 'solution'
> wouldn't collide with any user return values, right?
> The same parameter can be 'enhanced' to allow for passing other
> 'parser-global' state info up & down too.

Shouldn't be too much of a problem to pass along extra stuff being it
return values, scopes structures/whatever...

> > perhaps a separate stack for error returns?  Can we get away with a
> > single global instance var for errors like the old errno for old unix?
>
> I am but a humble measly software engineer, but, puhleeeez, I beg of you:
> *DON'T* EVEN CONSIDER THAT 'errno' ONE.

As warm fuzzy feelings about code go.. ernno isn't one of them. So
rest assured C++ codegen won't see them.

Cheers,

Ric 'who actually should be making slides in stead of writing mails...'
From wirecracker at gmail.com  Fri Oct 21 00:39:55 2005
From: wirecracker at gmail.com (eric nelson)
Date: Fri Oct 21 00:39:57 2005
Subject: [antlr-interest] StringTemplate + ANTLR
In-Reply-To: <1129871718.12655.10.camel@localhost.localdomain>
References: <1129871718.12655.10.camel@localhost.localdomain>
Message-ID: <ca5eeb330510210039u3f0ebc4ara761c1b33908c7f0@mail.gmail.com>

I'm sorry that I don't know the answer to your question, but I just wanted
to add that I'd be very interested in knowing the answer too! ;) By the way,
I posted a day or two ago to this list: <stringtemplate-interest@antlr.org>
... subject: cminus.g, but I have not heard any reply. Is that just because
of the extra attention to ANTLR (conference)? Should questions pertaining to
ANTLR + Stringtemplate be posted here, or there, or both places? Sorry ...
this has probably already been discussed in the past, but I missed it.
Thanks!
  - e


 On 10/20/05, Sohail Somani <sohail@taggedtype.net> wrote:
>
> Hi all,
>
> So I'm at the point where I need to start generating the target code. I
> came across an article that uses ANTLR + StringTemplate by manually
> creating the StringTemplates. While this is all fine and dandy, it
> crossed my mind that perhaps ANTLR can actually create the
> StringTemplate for me.
>
> Then I googled for CommonAST to StringTemplate and I came across
>
> http://www.stringtemplate.org/doc/api/org/antlr/stringtemplate/language/StringTemplateAST.html
>
> Before I get too excited, is it possible for ANTLR to generate the
> StringTemplate for me using the above without embedding too many manual
> actions in the parser? I've tried a syntax directed translation and its
> just fugly. I've also read Terence's article about translators using
> tree parsers instead of manually walking/using classes, but I don't
> think that seems to apply to me and I'd like to see if I can use
> StringTemplate.
>
> Thanks in advance!
>
> Sohail
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051021/330e92d2/attachment.html
From jpschewe at mtu.net  Fri Oct 21 06:05:50 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Fri Oct 21 06:05:49 2005
Subject: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <000601c5d5d4$ec49a6c0$d629198a@nigelnote>
References: <000601c5d5d4$ec49a6c0$d629198a@nigelnote>
Message-ID: <1129899950.28920.5.camel@workstation.mn.mtu.net>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051021/dedb6abf/attachment.bin
From jpschewe at mtu.net  Fri Oct 21 06:08:44 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Fri Oct 21 06:08:44 2005
Subject: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <5CAC7FE79FC44A47864684C13DFFF9BB@walgelijk>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<5CAC7FE79FC44A47864684C13DFFF9BB@walgelijk>
Message-ID: <1129900124.28920.9.camel@workstation.mn.mtu.net>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051021/f5d50350/attachment.bin
From gevik at xs4all.nl  Fri Oct 21 06:19:18 2005
From: gevik at xs4all.nl (Gevik babakhani)
Date: Fri Oct 21 06:19:19 2005
Subject: [antlr-interest] unsubscribe
Message-ID: <200510211319.j9LDJEmj023413@smtp-vbr8.xs4all.nl>

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051021/13aba067/attachment.html
From jpschewe at mtu.net  Fri Oct 21 07:15:26 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Fri Oct 21 07:15:29 2005
Subject: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <db9360ca0510210702y7b0c139cn@mail.gmail.com>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<db9360ca0510210702y7b0c139cn@mail.gmail.com>
Message-ID: <1129904126.32418.0.camel@workstation.mn.mtu.net>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: This is a digitally signed message part
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20051021/3d6f1fea/attachment-0001.bin
From mathieu.clabaut at gmail.com  Fri Oct 21 08:27:10 2005
From: mathieu.clabaut at gmail.com (Mathieu Clabaut)
Date: Fri Oct 21 08:27:18 2005
Subject: [antlr-interest] enigmatic error message
Message-ID: <db9360ca0510210827v5033542y@mail.gmail.com>

ANTLR 2.7.5 just gives me the following enigmatic error message !

 ANTLR Parser Generator   Version 2.7.5 (20050201)   1989-2005 jGuru.com
 usage: java antlr.Tool [args] file.g

I must say I was quite surprised as it usually gives lot of usefull
informations. Any tip in such a situation ?

-mathieu

--
____________http://www.gnu.org/philosophy/no-word-attachments.fr.html
Mathieu CLABAUT                         mailto:mathieu.clabaut@gmail.com
           F2F5 442F F2AC E1D5 9D31  3EFC 842A BC4A 123B 9A65
From mansuk at gmail.com  Fri Oct 21 12:16:04 2005
From: mansuk at gmail.com (Suman Karumuri)
Date: Fri Oct 21 12:16:06 2005
Subject: Fwd: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <c26541e00510211214u27781ce7t51afaf76dd295b90@mail.gmail.com>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<db9360ca0510210702y7b0c139cn@mail.gmail.com>
	<1129904126.32418.0.camel@workstation.mn.mtu.net>
	<c26541e00510211214u27781ce7t51afaf76dd295b90@mail.gmail.com>
Message-ID: <c26541e00510211216g7fe2e448q94c86a5fc0f9998a@mail.gmail.com>

This seems to work as well(atleast no non-determinism error). As antlr
generates codes, which itself is means that there is no
non-determinism.However, when i give an input i get an exception that is in
bold. It can be fixed by adding a condition for WS.

--------------------------------------
options {
language = "Python";
}
class Ilexer extends Lexer;
options {
k = 1;
}

protected
INT: ('0'..'9')+
;

IP: a:INT '.' b:INT '.' c:INT '.' d:INT
{
if(int(a.text)<255):
print a.text
add other range checks in this rule.
}


suman@suman:~/temp$ python Ilexer.py
2.2.2.2 <http://2.2.2.2>
2
["2.2.2.2 <http://2.2.2.2>",<5>,line=1,col=1]
error: exception caught while lexing: unexpected char: 0xA
--------------------------------------------

>From what i understand syntactic predictes slow down the lexer .Correct me
if i am wrong.

-Suman
On 10/21/05, Jon Schewe <jpschewe@mtu.net> wrote:

> This worked:
>
> protected
> DIGIT
> :
> '0'..'9'
> ;
>
> protected
> IPNUM
> :
> DIGIT
> | (DIGIT DIGIT)
> | ('0'..'2' '0'..'5' DIGIT)
> ;
>
> protected
> INTEGER
> :
> ( DIGIT )+
> ;
>
> IP_OR_INTEGER
> :
> (IPNUM '.' IPNUM '.') => IP { $setType(IP); }
> | (DIGIT) => INTEGER { $setType(INTEGER); }
> ;
>
> protected
> IP :
> IPNUM '.' IPNUM '.' IPNUM '.' IPNUM '/' DIGIT (DIGIT)?
> ;
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051022/ae536726/attachment.html
From mail at martin-probst.com  Fri Oct 21 12:36:24 2005
From: mail at martin-probst.com (Martin Probst)
Date: Fri Oct 21 12:36:31 2005
Subject: Fwd: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <c26541e00510211216g7fe2e448q94c86a5fc0f9998a@mail.gmail.com>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<db9360ca0510210702y7b0c139cn@mail.gmail.com>
	<1129904126.32418.0.camel@workstation.mn.mtu.net>
	<c26541e00510211214u27781ce7t51afaf76dd295b90@mail.gmail.com>
	<c26541e00510211216g7fe2e448q94c86a5fc0f9998a@mail.gmail.com>
Message-ID: <1129923384.9524.7.camel@localhost.localdomain>

> This seems to work as well(atleast no non-determinism error). As antlr
> generates codes, which itself is means that there is no
> non-determinism.

That is not correct. ANTLR will generate code even if there are non-
determinisms. That's why they are warnings, not errors. The code might
still not work as you expect it to.

> However, when i give an input i get an exception that is in bold. It
> can be fixed by adding a condition for WS.

Well, that's not surprising, is it? It encounters a character (0xA aka
'\n' or the line terminator) which it doesn't know how to handle.

> From what i understand syntactic predictes slow down the
> lexer .Correct me if i am wrong.

Syntactic predicates are indeed slow, as they currently require the
Parser to throw an exception while parsing, rewind to the place where it
started guessing and start again with the next alternative.

However, what you have ( if (int(...) < )...) is not a syntactic but a
semantic predicate. That's just a posh name for host-code injected into
the parser at certain places. Depending on what you do, that will be
slow or fast. E.g. calculating 1.000.000 digits of Pi will be slow, but
a single integer comparison is usually quite fast ;-)

Martin

From mail at martin-probst.com  Fri Oct 21 12:38:47 2005
From: mail at martin-probst.com (Martin Probst)
Date: Fri Oct 21 12:38:57 2005
Subject: [antlr-interest] enigmatic error message
In-Reply-To: <db9360ca0510210827v5033542y@mail.gmail.com>
References: <db9360ca0510210827v5033542y@mail.gmail.com>
Message-ID: <1129923527.9524.10.camel@localhost.localdomain>

Am Freitag, den 21.10.2005, 17:27 +0200 schrieb Mathieu Clabaut:
> ANTLR 2.7.5 just gives me the following enigmatic error message !
> 
>  ANTLR Parser Generator   Version 2.7.5 (20050201)   1989-2005 jGuru.com
>  usage: java antlr.Tool [args] file.g
> 
> I must say I was quite surprised as it usually gives lot of usefull
> informations. Any tip in such a situation ?

What's so cryptic? The tool tells you how to use it:
java antlr.Tool mygrammar.g

Probably you invoked it without passing a grammar or with illegal
parameters.

Martin

From sohail at taggedtype.net  Fri Oct 21 17:29:28 2005
From: sohail at taggedtype.net (sohail@taggedtype.net)
Date: Fri Oct 21 17:29:58 2005
Subject: [antlr-interest] StringTemplate + ANTLR
In-Reply-To: <ca5eeb330510210039u3f0ebc4ara761c1b33908c7f0@mail.gmail.com>
References: <1129871718.12655.10.camel@localhost.localdomain>
	<ca5eeb330510210039u3f0ebc4ara761c1b33908c7f0@mail.gmail.com>
Message-ID: <55321.127.0.0.1.1129940968.squirrel@taggedtype.net>

> I'm sorry that I don't know the answer to your question, but I just wanted
> to add that I'd be very interested in knowing the answer too! ;) By the
> way,
> I posted a day or two ago to this list:
> <stringtemplate-interest@antlr.org>
> ... subject: cminus.g, but I have not heard any reply. Is that just
> because
> of the extra attention to ANTLR (conference)? Should questions pertaining
> to
> ANTLR + Stringtemplate be posted here, or there, or both places? Sorry ...
> this has probably already been discussed in the past, but I missed it.
> Thanks!

If you get a reply, please post it here too. Thanks!

Sohail
From ewbank at gmail.com  Fri Oct 21 18:30:01 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Oct 21 18:30:03 2005
Subject: [antlr-interest] Performance Issues
Message-ID: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>

I've been having some discussions with the "powers that be" where I
work regarding whether ANTLR is up to the task we have set before it. 
We have it working (lex scanner; ANTLR parser, multiple tree parsers,
C++/linux), but the performance is pretty bad (~3 seconds to clone the
AST for a 10K line input file for a C-like language).  A first quick
glance at gprof doesn't show any obvious outliers or idiocies;
however, I know there's more to be done with profiling.

I got the impression, several times, that people were pleased with the
thruput of ANTLR for parsing and tree transformations.  Yes, there are
a few "classic" tunings required - I'm working thru the information
from this list over the past few yearse - but still...

Our productivity is certainly higher with ANTLR, particularly for the
tree-parsers; however, if customer perceived thruput is "bad"
(whatever that means, right :-), it's a serious problem.

So, has anyone been holding out on tunings, optimizations, and
outright tricks that they are using to get ANTLR to eat trees faster? 
Again, I'm in the C++ world, so java suggestions don't help.

Thanks from a harried ANTLRite,
- Bryan Ewbank
From ric.klaren at gmail.com  Fri Oct 21 21:29:18 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri Oct 21 21:29:21 2005
Subject: [antlr-interest] Performance Issues
In-Reply-To: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>
References: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>
Message-ID: <bc607a4e0510212129h2d833b19i29fcbe01a42dee55@mail.gmail.com>

On 10/21/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> I've been having some discussions with the "powers that be" where I
> work regarding whether ANTLR is up to the task we have set before it.
> We have it working (lex scanner; ANTLR parser, multiple tree parsers,
> C++/linux), but the performance is pretty bad (~3 seconds to clone the
> AST for a 10K line input file for a C-like language).  A first quick
> glance at gprof doesn't show any obvious outliers or idiocies;
> however, I know there's more to be done with profiling.
>
> I got the impression, several times, that people were pleased with the
> thruput of ANTLR for parsing and tree transformations.  Yes, there are
> a few "classic" tunings required - I'm working thru the information
> from this list over the past few yearse - but still...
>
> Our productivity is certainly higher with ANTLR, particularly for the
> tree-parsers; however, if customer perceived thruput is "bad"
> (whatever that means, right :-), it's a serious problem.
>
> So, has anyone been holding out on tunings, optimizations, and
> outright tricks that they are using to get ANTLR to eat trees faster?
> Again, I'm in the C++ world, so java suggestions don't help.

If you're not afraid to maintain a own backend library you could dumb
the AST's down. E.g. typedef the RefAST to a real pointer then get rid
of the virtuals (if you don't use polymorphism anywhere) Use some
allocator to allocate AST's between passes. Then throw complete trees
away as you go and don't need them anymore. Cut out all the separate
strings from the AST and hash them once, then only store int's in the
AST (or only pointers to the strings). (Or don't even carry the
strings around if you don't need them). There's so many places were
stuff is copied that it's sick.

There's really a lot of places where you can optimize. The codegen
might need some small massaging, or use a sed/tcl/perl script to fix
the generated code (should be easy to include in a build system)

I guess you could 'prototype' such a hacked library pretty quick (few
days) Then see if the gain is worth it. If you only concentrate on the
tree stuff it should be manageable I think. Maybe you could hack
something together that talks native antlr tree on one side and custom
tree on the other.

Cheers,

Ric
From ric.klaren at gmail.com  Fri Oct 21 22:03:22 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri Oct 21 22:03:24 2005
Subject: [antlr-interest] question on greedy matching
In-Reply-To: <43575B82.2070300@metalanguage.com>
References: <1129651947.28074@mx9.mysite4now.com>
	<7EE7F94A-00CB-408C-81AB-DBD9D4B125CC@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533608A48F@wavemachine.temporal-wave.com>
	<F12219F8-5E1B-4844-934B-1D26F4CD3A77@cs.usfca.edu>
	<9da4f4520510181315t20b23077u@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A23533608A490@wavemachine.temporal-wave.com>
	<B36CCC332A32904F8FA3DE134A23533608A492@wavemachine.temporal-wave.com>
	<4355AA95.3000202@metalanguage.com>
	<bc607a4e0510200050i775cf6cel5cbb7380bb0ab245@mail.gmail.com>
	<43575B82.2070300@metalanguage.com>
Message-ID: <bc607a4e0510212203pdc146f3p596788d0331e2b7d@mail.gmail.com>

On 10/20/05, Andrei Alexandrescu <andrei@metalanguage.com> wrote:
> > (Side note: This is awfully horrid language design.... adding curlies
> > around the statement inside the try would make life a lot more
> > pleasant.)
>
> Definitely. But it's the most sensible example I could find for a
> situation where you want a non-greedy parsing. (Other examples?) In
> addition, it's an excellent exercise for understanding how to do some
> nontrivial parsing with antlr.

Wouldn't know good examples off the top of my head, had the luxury of
designing the language I was working on, so could prevent any
braindeadness.

> In other words, it's a Java-like language, not a Python-like language
> (indentation is irrelevant).

Some sanity prevails ;)

> > start out with a try rule with only one catch. Then define an extra
> > alternative (probably in the statement rule to collect trailing catch
> > statements) Some checks are probably necessary afterwards to see if
> > everything made sense. The catch all might need a predicate to prevent
> > it from being entered if the preceding statement was not a try.
>
> I believe this is not possible with syntactic predicates. You have to
> have semantic predicates, I think. Actually that's my fundamental
> question. Another fundamental question is how would a PEG deal with that
> (see http://pdos.csail.mit.edu/~baford/packrat/).

Come to think of it... if your intention is to build a tree during
parsing, then it's quite easy to implement it with this strategy and
end up with a tree with the right structure. It wouldn't even need
predicates (some action code though to fix the trees).

Strategy as above use a try catch with only one catch, build the tree
as usual, carry around a pointer to the last catch,  then when
entering the trailing catch rule see if there's a pointer around to
the last catch.. if not it's a syntax error. Then see if there's no
statements between this last catch and the trailers. If all is ok, add
the trailers to the tree of the last catch.

I'm not familiar with PEG's so can't comment on that.

Cheers,

Ric
From mansuk at gmail.com  Fri Oct 21 23:44:54 2005
From: mansuk at gmail.com (Suman Karumuri)
Date: Fri Oct 21 23:44:57 2005
Subject: Fwd: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <1129923384.9524.7.camel@localhost.localdomain>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<db9360ca0510210702y7b0c139cn@mail.gmail.com>
	<1129904126.32418.0.camel@workstation.mn.mtu.net>
	<c26541e00510211214u27781ce7t51afaf76dd295b90@mail.gmail.com>
	<c26541e00510211216g7fe2e448q94c86a5fc0f9998a@mail.gmail.com>
	<1129923384.9524.7.camel@localhost.localdomain>
Message-ID: <c26541e00510212344p49e3761fo9b024ae086745aa@mail.gmail.com>

On 10/22/05, Martin Probst <mail@martin-probst.com> wrote:
> > This seems to work as well(atleast no non-determinism error). As antlr
> > generates codes, which itself is means that there is no
> > non-determinism.
>
> That is not correct. ANTLR will generate code even if there are non-
> determinisms. That's why they are warnings, not errors. The code might
> still not work as you expect it to.
>
I did not see any warnings or errors for that grammar though.
I tried some examples, but can you give me an example where the above
grammar fails?

> However, what you have ( if (int(...) < )...) is not a syntactic but a
> semantic predicate. That's just a posh name for host-code injected into
> the parser at certain places. Depending on what you do, that will be
> slow or fast. E.g. calculating 1.000.000 digits of Pi will be slow, but
> a single integer comparison is usually quite fast ;-)
So, can i take this as a rule of thumb:
" If i am using an If in the action to check some property of the a
label, it can be made a semantic predicate in the rule".

-Suman
From alexsedow at mail.ru  Sat Oct 22 00:32:23 2005
From: alexsedow at mail.ru (Alex Sedow)
Date: Sat Oct 22 00:32:26 2005
Subject: [antlr-interest] Performance Issues
References: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>
Message-ID: <006601c5d6da$bf7ecce0$07060b0a@home>

Perfomance improvements:

Fast string class - 1.5-3 times
Custom allocators - 1.5-2 times
Using fast data structures in AST-nodes (replace homogenous tree with 
heterogenous tree) - 1.5-2 times
Removing reference counters - ?
Use multithread edition on dual-core processors (Athlon X2, Pentium D) - ?

Note: this statistics is correct for hand-written parser.

--
Alex Sedow
Metaspec


From mail at martin-probst.com  Sat Oct 22 01:37:02 2005
From: mail at martin-probst.com (Martin Probst)
Date: Sat Oct 22 01:37:07 2005
Subject: Fwd: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <c26541e00510212344p49e3761fo9b024ae086745aa@mail.gmail.com>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<db9360ca0510210702y7b0c139cn@mail.gmail.com>
	<1129904126.32418.0.camel@workstation.mn.mtu.net>
	<c26541e00510211214u27781ce7t51afaf76dd295b90@mail.gmail.com>
	<c26541e00510211216g7fe2e448q94c86a5fc0f9998a@mail.gmail.com>
	<1129923384.9524.7.camel@localhost.localdomain>
	<c26541e00510212344p49e3761fo9b024ae086745aa@mail.gmail.com>
Message-ID: <1129970222.9154.2.camel@localhost.localdomain>

Am Samstag, den 22.10.2005, 12:14 +0530 schrieb Suman Karumuri:
> On 10/22/05, Martin Probst <mail@martin-probst.com> wrote:
> > > This seems to work as well(atleast no non-determinism error). As antlr
> > > generates codes, which itself is means that there is no
> > > non-determinism.
> >
> > That is not correct. ANTLR will generate code even if there are non-
> > determinisms. That's why they are warnings, not errors. The code might
> > still not work as you expect it to.
> >
> I did not see any warnings or errors for that grammar though.
> I tried some examples, but can you give me an example where the above
> grammar fails?

I was just referring to your last sentence:

> > As antlr generates codes, which itself is means that there is no
> > non-determinism.

> So, can i take this as a rule of thumb:
> " If i am using an If in the action to check some property of the a
> label, it can be made a semantic predicate in the rule".

A syntactic predicate is something like this:
foo: ( AB CD EF ) => ruleA
     | ruleB;
And that is slowing down parsing. If you don't use that, it's not slow.

Martin

From sohail at taggedtype.net  Sat Oct 22 02:08:25 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat Oct 22 02:08:32 2005
Subject: Fwd: [antlr-interest] Lexer not as smart as it should be?
In-Reply-To: <1129970222.9154.2.camel@localhost.localdomain>
References: <1129849409.21682.44.camel@mn65-eggplant.htc.honeywell.com>
	<db9360ca0510210702y7b0c139cn@mail.gmail.com>
	<1129904126.32418.0.camel@workstation.mn.mtu.net>
	<c26541e00510211214u27781ce7t51afaf76dd295b90@mail.gmail.com>
	<c26541e00510211216g7fe2e448q94c86a5fc0f9998a@mail.gmail.com>
	<1129923384.9524.7.camel@localhost.localdomain>
	<c26541e00510212344p49e3761fo9b024ae086745aa@mail.gmail.com>
	<1129970222.9154.2.camel@localhost.localdomain>
Message-ID: <1129972106.13647.0.camel@localhost.localdomain>

On Sat, 2005-22-10 at 10:37 +0200, Martin Probst wrote:
> A syntactic predicate is something like this:
> foo: ( AB CD EF ) => ruleA
>      | ruleB;
> And that is slowing down parsing. If you don't use that, it's not slow.

Isnt that only true if you see ruleB more than (AB CD EE)?

From wirecracker at gmail.com  Sat Oct 22 06:04:18 2005
From: wirecracker at gmail.com (eric nelson)
Date: Sat Oct 22 06:04:22 2005
Subject: [antlr-interest] Re: [stringtemplate-interest] Re: cminus.g
In-Reply-To: <5CCE5530-BF40-4929-97CA-9DE80B4A4FED@infonie.fr>
References: <5CCE5530-BF40-4929-97CA-9DE80B4A4FED@infonie.fr>
Message-ID: <ca5eeb330510220604m1a9d0972w9aac644d9fcb90fa@mail.gmail.com>

The way I've started to think about it is just that it doesn't make sense to
have a template for the "declaration" rule in cminus.g. A declaration is
either a function or a variable, but we just let the respective
"function(type,name,args,locals,stats)"
and "variable(type,name)" templates (via the p determine the output grammar
depending on which is applicable.

"declaration" and "block" seem to serve only as helpers, so mabye it would
have been more clear if they had been prefixed with "protected" (isn't that
the convention with ANTLR?).
 Yes, mabye the example was just supposed to show the different approaches.
 At first I thought it would also be ok to do something like this (assuming
the templates were modified accordingly):

program returns [StringTemplate code=template("program")]

: (code.setAttribute(declaration))+

;

 declaration returns [StringTemplate code = template("declaration")]

{StringTemplate f=null,v=null;}

: v=variable {code.setAttribute("globals", v);}

| f=function {code.setAttribute("functions", f);}

;
EXCEPT that the attributes "globals" and "functions" are in the program
template. It seems the appropriate place. In other words it would be out of
place to have "globals" and "functions" be attributes of "declaration"
because any single declaration matches to EITHER a global or a function.
Does that seem logical? Anyone want to confirm or disconfirm? I have been
racking my head for 2 or 3 days over this ... by now mabye my brain is just
willing to accept ANY logic ;)
 Thanks for the response Laurent!
  - e

 On 10/22/05, Laurent Vaucher <blo.b@infonie.fr> wrote:
>
> Well, the way I understand the difference between program, which
> returns a value, and declaration, which takes a stringtemplate as a
> parameter is the same as between a 'purely functional' function and a
> 'side-effect' one. The second is used to 'fill' an already existing
> object with additional data.
> It might be possible to convert the whole thing to a 'purely
> functional' style, but I think one point of the article was to show
> all the possible approaches with the library. The other possible
> explanation is 'purely pragmatic': do the simplest thing that might
> possibly work ((c) Ward Cunningham). If one style is simpler to use
> in some cases, just use it.
>
>
> Laurent.
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051022/8495fde8/attachment.html
From tech at swingkid.fsnet.co.uk  Sat Oct 22 07:27:33 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Sat Oct 22 07:27:17 2005
Subject: [antlr-interest] Problem with carriage returns in c# stringtemplate
Message-ID: <435A4C55.2080309@swingkid.fsnet.co.uk>

Hi,

I am trying to create a C# StringTemplateGroup(v2.2) file containing the 
following template

   group TestOutput;

   // Basic statements

   program(statements) ::= <<
   class Wrapper
   {
       <statements; separator="\r\n">
   }
    >>

I am reading this file in using the AngleBracketLexer (code in C#)

       Stream stgStream = 
typeof(JavascriptParser).Assembly.GetManifestResourceStream("translator.csharp.stg"); 

       TextReader stgReader = new StreamReader(stgStream);
       StringTemplateGroup stg = new StringTemplateGroup(stgReader, 
typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));

running this code gives the following error:

   StringTemplate: error: problem parsing template 'program': line
   3:34: unexpected char: 'r'


putting "\\r" instead puts '\r' in the output as text. "\n" on its own 
is accepted, but I need a carriage return as well. How do I put carriage 
returns as an attribute separator?

Thanks,

Mark


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/146 - Release Date: 21/10/2005


From johnny_job at rambler.ru  Sat Oct 22 09:56:16 2005
From: johnny_job at rambler.ru (johnny_job@rambler.ru)
Date: Sat Oct 22 09:56:32 2005
Subject: [antlr-interest] RE: Strange bug in ANTLR under .Net
In-Reply-To: <20051018040233.AAD4DDCC9D@www.antlr.org>
Message-ID: <200510221656.j9MGuDev040269@mailc.rambler.ru>

	Sure, my program references ANTLR dll. Also, the type from ANTLR is
instantiated correctly, but the error occurs exactly in ANTLR library (when
ANTLR uses reflection tecnique)!
	I reproduced behavior without ANTLR, and I have a test application
demonstrating that GetExecutingAssembly() may not always be within
AppDomain.Current.GetAssemblies() collection.
	I'll try to discuss this behavior in .Net forums, it seems to be an
error, but I still don't know:
	a) is it an error in .Net?
	b) .Net works correctly, and it is an error within ANTLR (so ANTLR
should be updated to fix it)?
I've implemented quick fix into my local copy of ANTLR.

Ivan Gusev

> -----Original Message-----
> Date: Tue, 18 Oct 2005 01:27:11 +0100
> From: "Micheal J" <open.zone@virgin.net>
> Subject: RE: [antlr-interest] Strange bug in ANTLR under .Net
> To: <antlr-interest@antlr.org>
> Message-ID: <002201c5d37a$af3871f0$6902a8c0@hercules>
> Content-Type: text/plain; charset="us-ascii"
> 
> This sounds like .NET assembly loading behaviour (I think).
> 
> 1. Make sure your program references the ANTLR dll
> 2. Load/instantiate a type from the ANTLR dll before your app uses ANTLR,
> this ensure the assembled is loaded.

From jim.crafton at gmail.com  Sat Oct 22 10:46:34 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Sat Oct 22 10:46:36 2005
Subject: [antlr-interest] Custom ast factory
Message-ID: <e88138500510221046r56793d18oeeae6bef282946e@mail.gmail.com>

I am trying to get my custom ast factory to work as the creator of new
AST nodes. However I don't see how to make this happen. I do the
following in my constructor :


CppASTNodeFactory() :
ASTFactory("CppASTNodeFactory",CppASTNode::factory),
nodeFactory(&CppASTNode::factory) {}

>From tracing the code, what this means is that the "factory" method
for creating node is actually the  CppASTNode::factory, which is a
static method. Is there a way to get the parser to call a member
method on the ast factory that I can then override in my custom ast
class?

Thanks!

Jim
From antlr-list at arizona-software.ch  Sat Oct 22 11:31:50 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sat Oct 22 11:31:57 2005
Subject: [antlr-interest] ANTLRWorks 1.0ea4 available!
Message-ID: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>

Hello!

ANTLRWorks 1.0ea4 is now available. It has a lot of new features to  
make your life easier when navigating in the grammar and also some  
new refactoring tools (see the history at the bottom of the e-mail).

http://www.antlr.org/works/index.html

The ANTLRWorks jar has everything you need including ANTLR 3.0ea6.

Feel free to send comments to the antlr-interest list or online at:

http://www.antlr.org/misc/feedback


Enjoy this new release!

Jean Bovet

* HISTORY *

10/22/05 - version 1.0ea4
   - find and replace
   - ideas actions
   - rule folding (experimental)
   - duplicates rules are now underlined in blue
   - undefined rules are now underlined in red
   - rules can now be grouped and displayed in a tree view
   - auto-indentation
   - show decision DFA (using DOT tool defined in the preferences)
   - replace literal with token label
   - remove left recursion (one or all)
   - insert rule from template

   - new analysis column displaying the location and kind of
     errors and warnings
   - support Perforce SCM commands
   - console moved from Window menu to project's window
   - improved console with events list
   - refactored the main menu bar
   - remove collapse/expand actions (will reintroduce them later)
   - improved drag and drop visual feedback (can now drop below
     or above a rule)
   - improved auto-completion (context sensitive)
   - removed duplicate names in auto-completion

   - current line is now highlighted
   - display line and column number in bottom status bar
   - HOME/END key move to beginning/end of line
   - can now navigate backward/forward
   - rules have now icon in the tree view
   - go to rule now move the cursor to the beginning of the rule
     instead of selecting it
   - new toolbar

   - prefs: auto-save every n minutes
   - prefs: syntax coloring parser delay
   - prefs: can now specify the colors of each type of token in
     the debugger input text panel
   - prefs: can specify rule folding (experimental yet)

   - include a pre-version of ANTLR 3.0ea6

   - fixed a bug where a new document created on Windows would not
     be correctly colorized
   - fixed several visual bugs on Windows and Linux

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051022/0e906b1a/attachment-0001.html
From antlr-list at arizona-software.ch  Sat Oct 22 13:34:42 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sat Oct 22 13:34:48 2005
Subject: [antlr-interest] Comments about ANTLRWorks 1.0ea4
Message-ID: <5A810DD7-B4AD-4004-80A8-784415163FAA@arizona-software.ch>

Just a few comments about ANTLRWorks 1.0ea4:

- currently, only grammar for ANTLR 3 are accepted.
- the underlying coloring may not be accurate for some rule name - I  
know I have to improve that for the next release. You can disable  
this feature by clicking in the appropriate icon in the toolbar.
- ANTLR 3.0ea6 bundled inside ANTLRWorks is a pre-release version.

Best regards,

Jean

From madcapmaggie at yahoo.com  Sat Oct 22 15:26:32 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Sat Oct 22 15:26:35 2005
Subject: [antlr-interest] Performance Issues
In-Reply-To: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>
Message-ID: <20051022222632.67592.qmail@web30204.mail.mud.yahoo.com>

Our performance issues are surely not the same as
yours; however, we ended up with a big win by
statically initializing the literal table.

Peggy

--- Bryan Ewbank <ewbank@gmail.com> wrote:

> I've been having some discussions with the "powers
> that be" where I
> work regarding whether ANTLR is up to the task we
> have set before it. 
> We have it working (lex scanner; ANTLR parser,
> multiple tree parsers,
> C++/linux), but the performance is pretty bad (~3
> seconds to clone the
> AST for a 10K line input file for a C-like
> language).  A first quick
> glance at gprof doesn't show any obvious outliers or
> idiocies;
> however, I know there's more to be done with
> profiling.
> 
> I got the impression, several times, that people
> were pleased with the
> thruput of ANTLR for parsing and tree
> transformations.  Yes, there are
> a few "classic" tunings required - I'm working thru
> the information
> from this list over the past few yearse - but
> still...
> 
> Our productivity is certainly higher with ANTLR,
> particularly for the
> tree-parsers; however, if customer perceived thruput
> is "bad"
> (whatever that means, right :-), it's a serious
> problem.
> 
> So, has anyone been holding out on tunings,
> optimizations, and
> outright tricks that they are using to get ANTLR to
> eat trees faster? 
> Again, I'm in the C++ world, so java suggestions
> don't help.
> 
> Thanks from a harried ANTLRite,
> - Bryan Ewbank
> 

From jim.crafton at gmail.com  Sat Oct 22 16:03:08 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Sat Oct 22 16:03:11 2005
Subject: [antlr-interest] ANTLR modification
Message-ID: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>

I have made a small modification to the ANTL Token, CommonToken, and
CharScanner classes. The changes make it possible to for a Token (and
an AST node as well) to have an offset assigned to it that represents
the offset from the beginning of the character stream. I have a need
for this, and I added and thought others might find it useful as well.

The changes include added a virtual getOffset/setOffset method to the
Token class, and re-implementing these in the CommonToken class. The
CharScanner class has a new member var "offset" that is initially set
to 0 in it's constructor(s) and then incremented for each call of the
consume() method. This is member is then used when the CharScanner
creates a new Token in the makeToken() method. The Token is then
assigned this value by calling the Token's setOffset() method.

Would there be any interest in having this merged into the general
ANTLR codebase? If so, what's the best way to submit this?

Thanks

Jim Crafton
From oliver.zeigermann at gmail.com  Sat Oct 22 16:36:13 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat Oct 22 16:36:17 2005
Subject: [antlr-interest] ANTLRWorks 1.0ea4 available!
In-Reply-To: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
References: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
Message-ID: <9da4f4520510221636u570ef987x@mail.gmail.com>

Hi Jean!

That's really cool! Will try it ASAP. Is there any more information on
the GUI lib you are using for ANTLRWorks and/or source code available?

Cheers

Oliver

2005/10/22, Jean Bovet <antlr-list@arizona-software.ch>:
> Hello!
>
> ANTLRWorks 1.0ea4 is now available. It has a lot of new features to make
> your life easier when navigating in the grammar and also some new
> refactoring tools (see the history at the bottom of the e-mail).
>
> http://www.antlr.org/works/index.html
>
> The ANTLRWorks jar has everything you need including ANTLR 3.0ea6.
>
> Feel free to send comments to the antlr-interest list or online at:
>
> http://www.antlr.org/misc/feedback
>
>
> Enjoy this new release!
>
> Jean Bovet
>
> * HISTORY *
>
> 10/22/05 - version 1.0ea4
>   - find and replace
>   - ideas actions
>   - rule folding (experimental)
>   - duplicates rules are now underlined in blue
>   - undefined rules are now underlined in red
>   - rules can now be grouped and displayed in a tree view
>   - auto-indentation
>   - show decision DFA (using DOT tool defined in the preferences)
>   - replace literal with token label
>   - remove left recursion (one or all)
>   - insert rule from template
>
>   - new analysis column displaying the location and kind of
>     errors and warnings
>   - support Perforce SCM commands
>   - console moved from Window menu to project's window
>   - improved console with events list
>   - refactored the main menu bar
>   - remove collapse/expand actions (will reintroduce them later)
>   - improved drag and drop visual feedback (can now drop below
>     or above a rule)
>   - improved auto-completion (context sensitive)
>   - removed duplicate names in auto-completion
>
>   - current line is now highlighted
>   - display line and column number in bottom status bar
>   - HOME/END key move to beginning/end of line
>   - can now navigate backward/forward
>   - rules have now icon in the tree view
>   - go to rule now move the cursor to the beginning of the rule
>     instead of selecting it
>   - new toolbar
>
>   - prefs: auto-save every n minutes
>   - prefs: syntax coloring parser delay
>   - prefs: can now specify the colors of each type of token in
>     the debugger input text panel
>   - prefs: can specify rule folding (experimental yet)
>
>   - include a pre-version of ANTLR 3.0ea6
>
>   - fixed a bug where a new document created on Windows would not
>     be correctly colorized
>   - fixed several visual bugs on Windows and Linux
>
>
From prashant.deva at gmail.com  Sat Oct 22 22:21:13 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sat Oct 22 22:21:16 2005
Subject: [antlr-interest] ANTLR modification
In-Reply-To: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
References: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
Message-ID: <41fed8f80510222221l7b32ea34r535fe8931cc255f0@mail.gmail.com>

The general way to get anything included is to talk with the 'supreme
dictator' of antlr Terence Parr ;-)

Though i doubt this would be included. I know a lot of people who have had a
need for this, including myself but we have had to to with implementing this
ourselves.

PRASHANT


On 10/23/05, Jim Crafton <jim.crafton@gmail.com> wrote:
>
> I have made a small modification to the ANTL Token, CommonToken, and
> CharScanner classes. The changes make it possible to for a Token (and
> an AST node as well) to have an offset assigned to it that represents
> the offset from the beginning of the character stream. I have a need
> for this, and I added and thought others might find it useful as well.
>
> The changes include added a virtual getOffset/setOffset method to the
> Token class, and re-implementing these in the CommonToken class. The
> CharScanner class has a new member var "offset" that is initially set
> to 0 in it's constructor(s) and then incremented for each call of the
> consume() method. This is member is then used when the CharScanner
> creates a new Token in the makeToken() method. The Token is then
> assigned this value by calling the Token's setOffset() method.
>
> Would there be any interest in having this merged into the general
> ANTLR codebase? If so, what's the best way to submit this?
>
> Thanks
>
> Jim Crafton
>



--
Prashant Deva
Creator, ANTLR Studio,www.antlrstudio.com <http://www.antlrstudio.com>
Founder, Placid Systems, www.placidsystems.com<http://www.placidsystems.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051023/3f9963f2/attachment.html
From wirecracker at gmail.com  Sun Oct 23 02:20:38 2005
From: wirecracker at gmail.com (eric nelson)
Date: Sun Oct 23 02:20:41 2005
Subject: [antlr-interest] ANTLRWorks 1.0ea4 available!
In-Reply-To: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
References: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
Message-ID: <ca5eeb330510230220p19ccbb7eq42012a9cd6fb45c4@mail.gmail.com>

Thanks for your hard work on this Jean :) I should mention though that I
have so far had some trouble using it. I downloaded the latest version
today, and at startup a java.g grammar file loaded automatically. Is that
java.g file valid? Is it an ANTLR 3.0 grammar? I don't know the difference
to be honest (kinda new), but I am getting an error when I try to generate
code:
 "Cannot generate the grammar because:
000:000: syntax error:buildnfa:<AST>:0:0:unexpected end of subtreebuildnfa"
.. etc
 There are numerous red squiggly lines underneath the rule references
throughout the grammar file. In this block:
 // Package statement: "package" followed by an identifier.
packageDefinition
options {defaultErrorHandler = true;} // let ANTLR handle errors
: p:"package"^ {#p.setType(PACKAGE_DEF);} identifier SEMI!
;
 "packageDefinition" is underlined with a red squiggly. I noticed that it
has been labeled or referenced as simply "p" elsewhere, including in the
list of rules and tokens in the region to the left (region 1).
 By the way, I am using Windows XP.
 Oh, and the emacs key bindings that were discussed in the
antlrworks.pdfdon't work; however, the "ctrl + spacebar" does bring up
the autocompletion
list, also "alt + F7" does list usages correctly as far as I can tell ;)
 Any thoughts? Anyone?
 Thanks,
  - e


 On 10/22/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
>
> Hello!
>
>  ANTLRWorks 1.0ea4 is now available. It has a lot of new features to make
> your life easier when navigating in the grammar and also some new
> refactoring tools (see the history at the bottom of the e-mail).
>
>  http://www.antlr.org/works/index.html
>
>  The ANTLRWorks jar has everything you need including ANTLR 3.0ea6.
>
>  Feel free to send comments to the antlr-interest list or online at:
>
>  http://www.antlr.org/misc/feedback
>
>
>  Enjoy this new release!
>
>  Jean Bovet
>
>  * HISTORY *
>
>  10/22/05 - version 1.0ea4
>  - find and replace
>  - ideas actions
>  - rule folding (experimental)
>  - duplicates rules are now underlined in blue
>  - undefined rules are now underlined in red
>  - rules can now be grouped and displayed in a tree view
>  - auto-indentation
>  - show decision DFA (using DOT tool defined in the preferences)
>  - replace literal with token label
>  - remove left recursion (one or all)
>  - insert rule from template
>
>  - new analysis column displaying the location and kind of
>  errors and warnings
>  - support Perforce SCM commands
>  - console moved from Window menu to project's window
>  - improved console with events list
>  - refactored the main menu bar
>  - remove collapse/expand actions (will reintroduce them later)
>  - improved drag and drop visual feedback (can now drop below
>  or above a rule)
>  - improved auto-completion (context sensitive)
>  - removed duplicate names in auto-completion
>
>  - current line is now highlighted
>  - display line and column number in bottom status bar
>  - HOME/END key move to beginning/end of line
>  - can now navigate backward/forward
>  - rules have now icon in the tree view
>  - go to rule now move the cursor to the beginning of the rule
>  instead of selecting it
>  - new toolbar
>
>  - prefs: auto-save every n minutes
>  - prefs: syntax coloring parser delay
>  - prefs: can now specify the colors of each type of token in
>  the debugger input text panel
>  - prefs: can specify rule folding (experimental yet)
>
>  - include a pre-version of ANTLR 3.0ea6
>
>  - fixed a bug where a new document created on Windows would not
>  be correctly colorized
>  - fixed several visual bugs on Windows and Linux
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051023/120274ec/attachment-0001.html
From mail at martin-probst.com  Sun Oct 23 04:39:38 2005
From: mail at martin-probst.com (Martin Probst)
Date: Sun Oct 23 04:40:21 2005
Subject: [antlr-interest] ANTLR modification
In-Reply-To: <41fed8f80510222221l7b32ea34r535fe8931cc255f0@mail.gmail.com>
References: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
	<41fed8f80510222221l7b32ea34r535fe8931cc255f0@mail.gmail.com>
Message-ID: <1130067578.9732.2.camel@localhost.localdomain>


> The general way to get anything included is to talk with the 'supreme
>  dictator' of antlr Terence Parr ;-)

'Supreme benevolent dictator' please ;-)

> 
> Though i doubt this would be included. I know a lot of people who have
> had a need for this, including myself but we have had to to with
> implementing this ourselves. 

I think this is quite a trivial change (nothing against your work Jim,
it's just not very complicated) and most people writing parsers probably
don't need it in the first place.

Is it really necessary to manipulate the base classes? Can't you reach
the same thing by subclassing?

Martin

From tech at swingkid.fsnet.co.uk  Sun Oct 23 06:08:37 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Sun Oct 23 06:07:37 2005
Subject: [antlr-interest] Problem with carriage returns in c# stringtemplate
Message-ID: <435B8B55.8000205@swingkid.fsnet.co.uk>

I have managed to fix this by using a subtemplate instead of a string or 
anonymous subtemplate, ie:

    newline() ::= "$\r$$\n$"

    program(statements) ::= <<
    class Wrapper$\r$
    {
        $statements; separator={$newline()$}$
    }
     >>

works, but

    program(statements) ::= <<
    class Wrapper$\r$
    {
        $statements; separator={$\r$$\n$}$
    }
     >>

does not. Also,

    program(statements) ::= <<
    class Wrapper$\r$
    {
        $statements; separator={
        }$
    }
     >>

works as well.

At least its working, but if anyone could explain what the problem is, 
it is always nice to know these things! :-)

Thanks,

Mark









-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.361 / Virus Database: 267.12.4/146 - Release Date: 21/10/2005


From nadesai at cse.iitb.ac.in  Sun Oct 23 06:32:49 2005
From: nadesai at cse.iitb.ac.in (Desai Nishitkumar Ashokkumar)
Date: Sun Oct 23 06:32:57 2005
Subject: [antlr-interest] query
Message-ID: <Pine.LNX.4.61.0510231857030.5317@nsl-13.cse.iitb.ac.in>

Hello sir,
 		I m doing M.Tech at IIT bombay, India. My project is on 
re-engineering from procedural to object oriented program. And I am trying 
to apply that on linux kernel. Currently I am trying to make any c code 
compilable by c++ code. I am using GNU C grammar given in ANTLR grammars.
My doubt is is Preprocessing done by ANTLR or is there any option to do 
that. and can I apply tool (translation tool) to entire project directory 
such that tool itself take care of #include and #define statement ??

thanks

-- 
Nishit Desai
M.Tech II year 
Computer Science & Engg.
IIT Bombay
From luisl at scarab.co.za  Sun Oct 23 06:52:40 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Sun Oct 23 06:52:57 2005
Subject: [antlr-interest] Problem with carriage returns in c#
	stringtemplate
In-Reply-To: <435A4C55.2080309@swingkid.fsnet.co.uk>
Message-ID: <MPEMLILMNEOKCPPBGEMKAEIACIAA.luisl@scarab.co.za>

Hi Mark,

Is this your complete group file?

The following code test works correctly with \r\n for me:

StringReader sr = new StringReader("group TestOutput; program(statements)
::= << class Wrapper { <statements; separator=\"\r\n\"> } >>");
StringTemplateGroup stg = new StringTemplateGroup(sr,
typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));
ArrayList a = new ArrayList();
a.Add(1);
a.Add(2);
a.Add(3);
StringTemplate st = stg.getInstanceOf("program");
st.setAttribute("statements", a);
string s = st.ToString();
Console.WriteLine(s);

Regards

Luis

-----Original Message-----
From: Tech [mailto:tech@swingkid.fsnet.co.uk]
Sent: 22 October 2005 04:28 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Problem with carriage returns in c#
stringtemplate


Hi,

I am trying to create a C# StringTemplateGroup(v2.2) file containing the
following template

   group TestOutput;

   // Basic statements

   program(statements) ::= <<
   class Wrapper
   {
       <statements; separator="\r\n">
   }
    >>

I am reading this file in using the AngleBracketLexer (code in C#)

       Stream stgStream =
typeof(JavascriptParser).Assembly.GetManifestResourceStream("translator.csha
rp.stg");

       TextReader stgReader = new StreamReader(stgStream);
       StringTemplateGroup stg = new StringTemplateGroup(stgReader,
typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));

running this code gives the following error:

   StringTemplate: error: problem parsing template 'program': line
   3:34: unexpected char: 'r'


putting "\\r" instead puts '\r' in the output as text. "\n" on its own
is accepted, but I need a carriage return as well. How do I put carriage
returns as an attribute separator?

Thanks,

Mark


--
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/146 - Release Date: 21/10/2005





From jim.crafton at gmail.com  Sun Oct 23 07:02:26 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Sun Oct 23 07:02:28 2005
Subject: [antlr-interest] ANTLR modification
In-Reply-To: <1130067578.9732.2.camel@localhost.localdomain>
References: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
	<41fed8f80510222221l7b32ea34r535fe8931cc255f0@mail.gmail.com>
	<1130067578.9732.2.camel@localhost.localdomain>
Message-ID: <e88138500510230702m78bfa144m2fe9b35aeb669bb6@mail.gmail.com>

Not with anything I tried. You're right it is pretty basic to do (not
more than 10-15 LOC if that). If it doesn't go in then I may have
issues when I upgrade to the next version. I guess it's not that big
of a deal, just something to watch out for.

If it's appropriate, I'd be more than happy to just post my snippets
on the list so that other's can more easily find it.

Cheers,

Jim
From open.zone at virgin.net  Sun Oct 23 07:26:45 2005
From: open.zone at virgin.net (Micheal J)
Date: Sun Oct 23 07:11:32 2005
Subject: [antlr-interest] RE: Strange bug in ANTLR under .Net
In-Reply-To: <200510221656.j9MGuDev040269@mailc.rambler.ru>
Message-ID: <001301c5d7dd$ced58090$6902a8c0@hercules>

> 	Sure, my program references ANTLR dll. Also, the type 
> from ANTLR is instantiated correctly, but the error occurs 
> exactly in ANTLR library (when ANTLR uses reflection tecnique)!

Ok. Strange one there.

> 	I reproduced behavior without ANTLR, and I have a test 
> application demonstrating that GetExecutingAssembly() may not 
> always be within
> AppDomain.Current.GetAssemblies() collection.

Ok. I did think it might be [an anomaly in] .NET behaviour.

> 	I'll try to discuss this behavior in .Net forums, it 
> seems to be an error, but I still don't know:
> 	a) is it an error in .Net?
> 	b) .Net works correctly, and it is an error within 
> ANTLR (so ANTLR should be updated to fix it)? I've 
> implemented quick fix into my local copy of ANTLR.

ANTLR provide the IASTFactory interface (and a default implementation in
ASTFactory) if you decide to handle AST node creation directly yourself
without using reflection (recommended for performance reasons).

Send me some code that demonstrates the behaviour with ANTLR and I'll look
into this again.

> Ivan Gusev

Micheal

From open.zone at virgin.net  Sun Oct 23 07:53:10 2005
From: open.zone at virgin.net (Micheal J)
Date: Sun Oct 23 07:37:53 2005
Subject: [antlr-interest] ANTLR modification
In-Reply-To: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
Message-ID: <001401c5d7e1$7de0b8e0$6902a8c0@hercules>


> I have made a small modification to the ANTL Token, 
> CommonToken, and CharScanner classes. The changes make it 
> possible to for a Token (and an AST node as well) to have an 
> offset assigned to it that represents the offset from the 
> beginning of the character stream. I have a need for this, 
> and I added and thought others might find it useful as well.

Can the changes be isolated to a CharScanner sub-class and a CommonToken
subclass?

Not everyone needs (or can afford the cost of) the offset data.

> The changes include added a virtual getOffset/setOffset 
> method to the Token class, and re-implementing these in the 
> CommonToken class. The CharScanner class has a new member var 
> "offset" that is initially set to 0 in it's constructor(s) 
> and then incremented for each call of the
> consume() method. This is member is then used when the 
> CharScanner creates a new Token in the makeToken() method. 
> The Token is then assigned this value by calling the Token's 
> setOffset() method.
> 
> Would there be any interest in having this merged into the 
> general ANTLR codebase? If so, what's the best way to submit this?

Problems I see with this. 
1. Lexer state isn't stored in CharScanner. There is a separate class for
it.
2. Not everyone needs (or can afford) the overhead of both line/col and
offest tracking. Perhaps a more generic mechanism for specifying (perhaps on
construction) whether to track offsets, line/col or both?

Cheers,

Micheal

From endigitalmind at yahoo.co.uk  Sun Oct 23 07:44:39 2005
From: endigitalmind at yahoo.co.uk (Phil Ritchie)
Date: Sun Oct 23 07:44:44 2005
Subject: [antlr-interest] C# AST problem.
Message-ID: <20051023144439.77609.qmail@web25803.mail.ukl.yahoo.com>

I have been stepping through the IntAndIDParser example under the Getting Started link on antlr.org. It's a lovely simple tutorial and everything builds and runs fine until I try to add an AST. My code builds but when parsing the second token it bombs with "Index was outside the bounds of the array" error at FactoryEntry entry = hetroList_[nodeTypeINdex] in ASTFactory.cs.
 
I have seen some historical threads about initializeASTFactory but from the 2.7.2 release notes this issue would seem to have been fixed.
 
Has anyone had similar problems or could suggest what's wrong? I'm using antlr-2.7.5 and C#.
 
Phil.

		
---------------------------------
How much free photo storage do you get? Store your holiday snaps for FREE with Yahoo! Photos. Get Yahoo! Photos
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051023/d5cd3528/attachment.html
From open.zone at virgin.net  Sun Oct 23 08:09:10 2005
From: open.zone at virgin.net (Micheal J)
Date: Sun Oct 23 07:53:53 2005
Subject: [antlr-interest] C# AST problem.
In-Reply-To: <20051023144439.77609.qmail@web25803.mail.ukl.yahoo.com>
Message-ID: <001701c5d7e3$b9aedd00$6902a8c0@hercules>

HTML mail - yuck!
 
Anyways, please post the changes you made that got this error Phil. It might
just be an AST factory init issue.
 
Cheers,
 
Micheal
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Phil Ritchie
Sent: 23 October 2005 15:45
To: antlr-interest@antlr.org
Subject: [antlr-interest] C# AST problem.


I have been stepping through the IntAndIDParser example under the Getting
Started link on antlr.org. It's a lovely simple tutorial and everything
builds and runs fine until I try to add an AST. My code builds but when
parsing the second token it bombs with "Index was outside the bounds of the
array" error at FactoryEntry entry = hetroList_[nodeTypeINdex] in
ASTFactory.cs.
 
I have seen some historical threads about initializeASTFactory but from the
2.7.2 release notes this issue would seem to have been fixed.
 
Has anyone had similar problems or could suggest what's wrong? I'm using
antlr-2.7.5 and C#.
 
Phil.



  _____  

How much free photo storage do you get? Store your holiday snaps for FREE
with Yahoo! Photos.
<http://us.rd.yahoo.com/mail/uk/taglines/default/photos/*http://uk.photos.ya
hoo.com/> Get Yahoo! Photos

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051023/4b42d34e/attachment.html
From parrt at cs.usfca.edu  Sun Oct 23 10:16:15 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Oct 23 10:16:19 2005
Subject: [antlr-interest] query
In-Reply-To: <Pine.LNX.4.61.0510231857030.5317@nsl-13.cse.iitb.ac.in>
References: <Pine.LNX.4.61.0510231857030.5317@nsl-13.cse.iitb.ac.in>
Message-ID: <868E79E4-60A2-4C6B-BAF0-A58AB2175043@cs.usfca.edu>


On Oct 23, 2005, at 6:32 AM, Desai Nishitkumar Ashokkumar wrote:

> Hello sir,
>         I m doing M.Tech at IIT bombay, India. My project is on re- 
> engineering from procedural to object oriented program. And I am  
> trying to apply that on linux kernel. Currently I am trying to make  
> any c code compilable by c++ code. I am using GNU C grammar given  
> in ANTLR grammars.
> My doubt is is Preprocessing done by ANTLR or is there any option  
> to do that. and can I apply tool (translation tool) to entire  
> project directory such that tool itself take care of #include and  
> #define statement ??

Hi Nishit,

You need to run the preprocessor manually I'd say.  /lib/cpp or an  
option on gcc.

Ter
From nadesai at cse.iitb.ac.in  Sun Oct 23 10:32:01 2005
From: nadesai at cse.iitb.ac.in (Desai Nishitkumar Ashokkumar)
Date: Sun Oct 23 10:32:42 2005
Subject: [antlr-interest] Re: antlr-interest Digest, Vol 11, Issue 41
In-Reply-To: <20051023171621.A6595DCD0D@www.antlr.org>
References: <20051023171621.A6595DCD0D@www.antlr.org>
Message-ID: <Pine.LNX.4.61.0510232301500.6884@mars.cse.iitb.ac.in>


Hello sir,
            After running preprocessor manually, preprocessod code is
different (not in semantic but syntatic) from original code. And if I
convert this preprocessod code to c++ code (without classes, only
compatible to g++) such that it is compile by g++ compiler then this
translated code is also without any macros (preprocessor statement) but
that I dont want. I only want to do is making C code compile by g++
compiler. And this I want to do automatically and dont want to change
unnecessary codes.

If I manually first do preprocessing then I think it ll not fulfilled my
goal.
Actually I want to make linux kernel compilable by g++. If I manually
apply preprocessor on that and then translate it to c++ then translated
code ll be very big. bcz kernel has lots of macros used.

Give me some suggetion to solve this problem.

Thank you again.


On Sun, 23 Oct 2005 antlr-interest-request@antlr.org wrote:

> Send antlr-interest mailing list submissions to
> 	antlr-interest@antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request@antlr.org
>
> You can reach the person managing the list at
> 	antlr-interest-owner@antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>   1. Re: ANTLR modification (Martin Probst)
>   2. Problem with carriage returns in c# stringtemplate (Tech)
>   3. query (Desai Nishitkumar Ashokkumar)
>   4. RE: Problem with carriage returns in c#	stringtemplate (Luis Leal)
>   5. Re: ANTLR modification (Jim Crafton)
>   6. RE: RE: Strange bug in ANTLR under .Net (Micheal J)
>   7. RE: ANTLR modification (Micheal J)
>   8. C# AST problem. (Phil Ritchie)
>   9. RE: C# AST problem. (Micheal J)
>  10. Re: query (Terence Parr)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 23 Oct 2005 13:39:38 +0200
> From: Martin Probst <mail@martin-probst.com>
> Subject: Re: [antlr-interest] ANTLR modification
> To: antlr-interest@antlr.org
> Message-ID: <1130067578.9732.2.camel@localhost.localdomain>
> Content-Type: text/plain
>
>
>> The general way to get anything included is to talk with the 'supreme
>>  dictator' of antlr Terence Parr ;-)
>
> 'Supreme benevolent dictator' please ;-)
>
>>
>> Though i doubt this would be included. I know a lot of people who have
>> had a need for this, including myself but we have had to to with
>> implementing this ourselves.
>
> I think this is quite a trivial change (nothing against your work Jim,
> it's just not very complicated) and most people writing parsers probably
> don't need it in the first place.
>
> Is it really necessary to manipulate the base classes? Can't you reach
> the same thing by subclassing?
>
> Martin
>
>
>
> ------------------------------
>
> Message: 2
> Date: Sun, 23 Oct 2005 14:08:37 +0100
> From: Tech <tech@swingkid.fsnet.co.uk>
> Subject: [antlr-interest] Problem with carriage returns in c#
> 	stringtemplate
> To: antlr-interest@antlr.org
> Message-ID: <435B8B55.8000205@swingkid.fsnet.co.uk>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> I have managed to fix this by using a subtemplate instead of a string or
> anonymous subtemplate, ie:
>
>    newline() ::= "$\r$$\n$"
>
>    program(statements) ::= <<
>    class Wrapper$\r$
>    {
>        $statements; separator={$newline()$}$
>    }
>     >>
>
> works, but
>
>    program(statements) ::= <<
>    class Wrapper$\r$
>    {
>        $statements; separator={$\r$$\n$}$
>    }
>     >>
>
> does not. Also,
>
>    program(statements) ::= <<
>    class Wrapper$\r$
>    {
>        $statements; separator={
>        }$
>    }
>     >>
>
> works as well.
>
> At least its working, but if anyone could explain what the problem is,
> it is always nice to know these things! :-)
>
> Thanks,
>
> Mark
>
>
>
>
>
>
>
>
>
>

-- 
Nishit Desai
M.Tech II year 
Computer Science & Engg.
IIT Bombay
From sohail at taggedtype.net  Sun Oct 23 12:08:00 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Oct 23 12:08:08 2005
Subject: [antlr-interest] query
In-Reply-To: <Pine.LNX.4.61.0510231857030.5317@nsl-13.cse.iitb.ac.in>
References: <Pine.LNX.4.61.0510231857030.5317@nsl-13.cse.iitb.ac.in>
Message-ID: <1130094480.8124.1.camel@localhost.localdomain>

On Sun, 2005-23-10 at 19:02 +0530, Desai Nishitkumar Ashokkumar wrote:
> Hello sir,
>  		I m doing M.Tech at IIT bombay, India. My project is on 
> re-engineering from procedural to object oriented program. And I am trying 
> to apply that on linux kernel. Currently I am trying to make any c code 
> compilable by c++ code. I am using GNU C grammar given in ANTLR grammars.
> My doubt is is Preprocessing done by ANTLR or is there any option to do 
> that. and can I apply tool (translation tool) to entire project directory 
> such that tool itself take care of #include and #define statement ??

FYI: Structs + Functions != procedural, Classes != object-oriented.

Speaking from personal experience, it is entirely possible to write an
object oriented kernel in C. I'd imagine the linux kernel is no
different.

Sohail

From parrt at cs.usfca.edu  Sun Oct 23 13:05:29 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Oct 23 13:05:35 2005
Subject: [antlr-interest] Re: thank you sir
In-Reply-To: <Pine.LNX.4.61.0510232251120.6884@mars.cse.iitb.ac.in>
References: <Pine.LNX.4.61.0510232251120.6884@mars.cse.iitb.ac.in>
Message-ID: <873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>


On Oct 23, 2005, at 10:31 AM, Desai Nishitkumar Ashokkumar wrote:

> Hello sir,
>            After running preprocessor manually, preprocessod code  
> is different (not in semantic but syntatic) from original code. And  
> if I convert this preprocessod code to c++ code (without classes,  
> only compatible to g++) such that it is compile by g++ compiler  
> then this translated code is also without any macros (preprocessor  
> statement) but that I dont want. I only want to do is making C code  
> compile by g++ compiler. And this I want to do automatically and  
> dont want to change unnecessary codes.

Hi.  This is a standard problem.  Preprocessors can render the output  
messy, but w/o using preproc, the input is often not valid C code.

> If I manually first do preprocessing then I think it ll not  
> fulfilled my goal.
> Actually I want to make linux kernel compilable by g++. If I  
> manually apply preprocessor on that and then translate it to c++  
> then translated code ll be very big. bcz kernel has lots of macros  
> used.

C++ is C so I'm not sure you have a problem with anything except the  
io libraries and such; still the Clib should still work with C++ right?

Ter
From mansuk at gmail.com  Sun Oct 23 13:06:56 2005
From: mansuk at gmail.com (Suman Karumuri)
Date: Sun Oct 23 13:07:01 2005
Subject: [antlr-interest] ANTLR modification
In-Reply-To: <e88138500510230702m78bfa144m2fe9b35aeb669bb6@mail.gmail.com>
References: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
	<41fed8f80510222221l7b32ea34r535fe8931cc255f0@mail.gmail.com>
	<1130067578.9732.2.camel@localhost.localdomain>
	<e88138500510230702m78bfa144m2fe9b35aeb669bb6@mail.gmail.com>
Message-ID: <c26541e00510231306m6cb74795w2f6a0e320b4e1397@mail.gmail.com>

On 10/23/05, Jim Crafton <jim.crafton@gmail.com> wrote:
> Not with anything I tried. You're right it is pretty basic to do (not
> more than 10-15 LOC if that). If it doesn't go in then I may have
> issues when I upgrade to the next version. I guess it's not that big
> of a deal, just something to watch out for.
>
> If it's appropriate, I'd be more than happy to just post my snippets
> on the list so that other's can more easily find it.
>
Please do post them here.
They would prove useful for people.Better post as much as you can(incl
examples) so that it will stay in the archives for future reference.

-Suman
From parrt at cs.usfca.edu  Sun Oct 23 13:10:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Oct 23 13:10:28 2005
Subject: [antlr-interest] Re: thank you sir
In-Reply-To: <873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>
References: <Pine.LNX.4.61.0510232251120.6884@mars.cse.iitb.ac.in>
	<873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>
Message-ID: <FABAD9E0-A17D-4AB0-A604-6A4605C56605@cs.usfca.edu>


On Oct 23, 2005, at 1:05 PM, Terence Parr wrote:
> C++ is C so ...

ooops...make that "C is C++..." or "C++ is C with additions..."

Ter
From mail at martin-probst.com  Sun Oct 23 13:25:31 2005
From: mail at martin-probst.com (Martin Probst)
Date: Sun Oct 23 13:25:48 2005
Subject: [antlr-interest] Re: antlr-interest Digest, Vol 11, Issue 41
In-Reply-To: <Pine.LNX.4.61.0510232301500.6884@mars.cse.iitb.ac.in>
References: <20051023171621.A6595DCD0D@www.antlr.org>
	<Pine.LNX.4.61.0510232301500.6884@mars.cse.iitb.ac.in>
Message-ID: <1130099131.10755.7.camel@localhost.localdomain>

Hi,

>             After running preprocessor manually, preprocessod code is
> different (not in semantic but syntatic) from original code. And if I
> convert this preprocessod code to c++ code (without classes, only
> compatible to g++) such that it is compile by g++ compiler

you do realise that C is a proper subset of C++, e.g. that any valid C
program is also a valid C++ program? If you just replace all occurrences
of "gcc" in the Makefiles of the Linux kernel with "g++" you will be
able to compile the kernel just as before.

>  then this
> translated code is also without any macros (preprocessor statement) but
> that I dont want. 

C++ includes pre-processor macros as a language feature, albeit they are
usually not used to the degree they are in C. Pre-processed C++ files
will contain the defines of all header files they include in their body,
which will render the classes completely unusable.

> I only want to do is making C code compile by g++
> compiler. And this I want to do automatically and dont want to change
> unnecessary codes.

Any code compilable by gcc is compilable by g++.

> If I manually first do preprocessing then I think it ll not fulfilled my
> goal.

You mean by manually calling "/lib/cpp" or by replacing all the macros?
The first is not really manual, the later is probably close to
impossible in a project as big as the Linux kernel. Especially as you'd
have to come up with a equally powerful C++ programming technique as a
replacement for each.

I don't really see the point in what you're trying to do.

Martin

From tech at swingkid.fsnet.co.uk  Sun Oct 23 14:31:31 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Sun Oct 23 14:31:10 2005
Subject: [antlr-interest] Problem with carriage returns in c#	stringtemplate
Message-ID: <435C0133.7060902@swingkid.fsnet.co.uk>

Thanks for your reply Luis.

No, this is not my whole template group, but I was trying to reduce the 
problem. I agree with you that your code works. However, if you copy the 
string into a text file (removing the escape characters from the 
quotation marks) and include it as an embedded resource, it doesn't work!

     //StringReader sr = new StringReader("group TestOutput;
    program(statements)::= << class Wrapper { <statements;
    separator=\"\r\n\"> } >>");
     Stream s =
    typeof(Class1).Assembly.GetManifestResourceStream("Project1.Test.stg");
    StreamReader sr = new StreamReader(s);
    StringTemplateGroup stg = new StringTemplateGroup(sr,
    typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));

where Test.stg contains

    group TestOutput; program(statements)::= << class Wrapper {
    <statements; separator="\r\n"> } >>

I have tried copying the StreamReader contents into a string before 
constructing the StringTemplateGroup, but that doesn't help. It seems 
more like a .Net issue than a StringTemplate issue, but I can't figure 
it out. I wonder if it is an encoding thing?

Always curious,

Mark



-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.361 / Virus Database: 267.12.4/146 - Release Date: 21/10/2005


From antlr-list at arizona-software.ch  Sun Oct 23 14:44:37 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun Oct 23 14:44:41 2005
Subject: [antlr-interest] ANTLRWorks 1.0ea4 available!
In-Reply-To: <9da4f4520510221636u570ef987x@mail.gmail.com>
References: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
	<9da4f4520510221636u570ef987x@mail.gmail.com>
Message-ID: <D158929E-3929-4724-A264-124613E712F2@arizona-software.ch>

Hi Oliver!

The GUI lib is the XJLibrary that I am developing at the same time.  
It can be already downloaded for free with source code at this adress:

http://www.cs.usfca.edu/~jbovet/vas/download/source.zip

It is the source code of another project named "Visual Automata  
Simulator" which let's you play with NFA/DFA and Turing Machine. The  
GUI library can be found in the package edu.usfca.xj.

Best regards,

Jean

Le 22 oct. 05 ? 16:36, Oliver Zeigermann a ?crit :

> Hi Jean!
>
> That's really cool! Will try it ASAP. Is there any more information on
> the GUI lib you are using for ANTLRWorks and/or source code available?
>
> Cheers
>
> Oliver
>
> 2005/10/22, Jean Bovet <antlr-list@arizona-software.ch>:
>
>> Hello!
>>
>> ANTLRWorks 1.0ea4 is now available. It has a lot of new features  
>> to make
>> your life easier when navigating in the grammar and also some new
>> refactoring tools (see the history at the bottom of the e-mail).
>>
>> http://www.antlr.org/works/index.html
>>
>> The ANTLRWorks jar has everything you need including ANTLR 3.0ea6.
>>
>> Feel free to send comments to the antlr-interest list or online at:
>>
>> http://www.antlr.org/misc/feedback
>>
>>
>> Enjoy this new release!
>>
>> Jean Bovet
>>
>> * HISTORY *
>>
>> 10/22/05 - version 1.0ea4
>>   - find and replace
>>   - ideas actions
>>   - rule folding (experimental)
>>   - duplicates rules are now underlined in blue
>>   - undefined rules are now underlined in red
>>   - rules can now be grouped and displayed in a tree view
>>   - auto-indentation
>>   - show decision DFA (using DOT tool defined in the preferences)
>>   - replace literal with token label
>>   - remove left recursion (one or all)
>>   - insert rule from template
>>
>>   - new analysis column displaying the location and kind of
>>     errors and warnings
>>   - support Perforce SCM commands
>>   - console moved from Window menu to project's window
>>   - improved console with events list
>>   - refactored the main menu bar
>>   - remove collapse/expand actions (will reintroduce them later)
>>   - improved drag and drop visual feedback (can now drop below
>>     or above a rule)
>>   - improved auto-completion (context sensitive)
>>   - removed duplicate names in auto-completion
>>
>>   - current line is now highlighted
>>   - display line and column number in bottom status bar
>>   - HOME/END key move to beginning/end of line
>>   - can now navigate backward/forward
>>   - rules have now icon in the tree view
>>   - go to rule now move the cursor to the beginning of the rule
>>     instead of selecting it
>>   - new toolbar
>>
>>   - prefs: auto-save every n minutes
>>   - prefs: syntax coloring parser delay
>>   - prefs: can now specify the colors of each type of token in
>>     the debugger input text panel
>>   - prefs: can specify rule folding (experimental yet)
>>
>>   - include a pre-version of ANTLR 3.0ea6
>>
>>   - fixed a bug where a new document created on Windows would not
>>     be correctly colorized
>>   - fixed several visual bugs on Windows and Linux
>>
>>
>

From antlr-list at arizona-software.ch  Sun Oct 23 14:47:29 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun Oct 23 14:47:35 2005
Subject: [antlr-interest] ANTLRWorks 1.0ea4 available!
In-Reply-To: <ca5eeb330510230220p19ccbb7eq42012a9cd6fb45c4@mail.gmail.com>
References: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
	<ca5eeb330510230220p19ccbb7eq42012a9cd6fb45c4@mail.gmail.com>
Message-ID: <8A889626-42A0-486A-A930-9AFE157DC431@arizona-software.ch>

Thanks!

The grammar implementation is not yet completely done in ANTLRWorks  
and I have included a pre-version of ANTLR 3.0ea6 that may not be  
able to handle the tree completely: I would suggest to stick with  
grammar containing no tree for now. Another release will be available  
soon to fix that.

The emacs key-bindings are currently only implemented in Mac OS X  
because there is, as you saw, some conflict between the menu-shortcut  
in Linux/Windows and the emacs key-bindings. I will have to think  
about a workaround (change the menu short-cuts or deactivate them)...

Best regards,

Jean

Le 23 oct. 05 ? 02:20, eric nelson a ?crit :

> Thanks for your hard work on this Jean :)  I should mention though  
> that I have so far had some trouble using it.  I downloaded the  
> latest version today, and at startup a java.g grammar file loaded  
> automatically.  Is that java.g file valid?  Is it an ANTLR 3.0  
> grammar?  I don't know the difference to be honest (kinda new), but  
> I am getting an error when I try to generate code:
>
> "Cannot generate the grammar because:
> 000:000: syntax error:buildnfa:<AST>:0:0:unexpected end of  
> subtreebuildnfa" .. etc
>
> There are numerous red squiggly lines underneath the rule  
> references throughout the grammar file.  In this block:
>
> // Package statement: "package" followed by an identifier.
> packageDefinition
>  options {defaultErrorHandler = true;} // let ANTLR handle errors
>  : p:"package"^ {#p.setType(PACKAGE_DEF);} identifier SEMI!
>  ;
>
> "packageDefinition" is underlined with a red squiggly.  I noticed  
> that it has been labeled or referenced as simply "p" elsewhere,  
> including in the list of rules and tokens in the region to the left  
> (region 1).
>
> By the way, I am using Windows XP.
>
> Oh, and the emacs key bindings that were discussed in the  
> antlrworks.pdf don't work; however, the "ctrl + spacebar" does  
> bring up the autocompletion list, also "alt + F7" does list usages  
> correctly as far as I can tell ;)
>
> Any thoughts?  Anyone?
>
> Thanks,
>
>  - e
>
>
>
>
>
>
> On 10/22/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
> Hello!
>
>
> ANTLRWorks 1.0ea4 is now available. It has a lot of new features to  
> make your life easier when navigating in the grammar and also some  
> new refactoring tools (see the history at the bottom of the e-mail).
>
>
> http://www.antlr.org/works/index.html
>
>
> The ANTLRWorks jar has everything you need including ANTLR 3.0ea6.
>
>
> Feel free to send comments to the antlr-interest list or online at:
>
>
> http://www.antlr.org/misc/feedback
>
>
>
>
> Enjoy this new release!
>
>
> Jean Bovet
>
>
> * HISTORY *
>
>
> 10/22/05 - version 1.0ea4
>   - find and replace
>   - ideas actions
>   - rule folding (experimental)
>   - duplicates rules are now underlined in blue
>   - undefined rules are now underlined in red
>   - rules can now be grouped and displayed in a tree view
>   - auto-indentation
>   - show decision DFA (using DOT tool defined in the preferences)
>   - replace literal with token label
>   - remove left recursion (one or all)
>   - insert rule from template
>
>
>   - new analysis column displaying the location and kind of
>     errors and warnings
>   - support Perforce SCM commands
>   - console moved from Window menu to project's window
>   - improved console with events list
>   - refactored the main menu bar
>   - remove collapse/expand actions (will reintroduce them later)
>   - improved drag and drop visual feedback (can now drop below
>     or above a rule)
>   - improved auto-completion (context sensitive)
>   - removed duplicate names in auto-completion
>
>
>   - current line is now highlighted
>   - display line and column number in bottom status bar
>   - HOME/END key move to beginning/end of line
>   - can now navigate backward/forward
>   - rules have now icon in the tree view
>   - go to rule now move the cursor to the beginning of the rule
>     instead of selecting it
>   - new toolbar
>
>
>   - prefs: auto-save every n minutes
>   - prefs: syntax coloring parser delay
>   - prefs: can now specify the colors of each type of token in
>     the debugger input text panel
>   - prefs: can specify rule folding (experimental yet)
>
>
>   - include a pre-version of ANTLR 3.0ea6
>
>
>   - fixed a bug where a new document created on Windows would not
>     be correctly colorized
>   - fixed several visual bugs on Windows and Linux
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051023/a8b71dbd/attachment-0001.html
From sohail at taggedtype.net  Sun Oct 23 18:32:30 2005
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun Oct 23 18:32:38 2005
Subject: [antlr-interest] Manual tree construction?
Message-ID: <1130117550.15408.7.camel@localhost.localdomain>

Hey guys,

Please bear with a tree parser newb.

I have a couple of grammar rules as follows:

fnDefn
	: FUNCTION ID parameters;
	  codeBlock
	  END
	;

parameters
	: LPAREN (parameter (COMMA parameters)*)? RPAREN
	;

I want to construct the tree:

(FUNCTION ID (parameter parameter) (codeBlock))

But how can I construct the tree in the parameters rule so that theres
no LPAREN or weird ugliness there?

I've done this which kinda does what I want:

parameters
	: LPAREN^ (parameter (COMMA! parameter)*)? RPAREN!
	;

But I can't think of how to manually or automatically construct the tree
above because of the (parameter (COMMA parameter)*)? business. Is there
an example?

Thanks in advance!

Sohail

From jim.crafton at gmail.com  Sun Oct 23 20:31:46 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Sun Oct 23 20:31:49 2005
Subject: [antlr-interest] Collecting chars in the lexer
Message-ID: <e88138500510232031x4e9f5b26lcc772b7c6763896@mail.gmail.com>

I have the following rule in my lexer

Pragma
	:	('#' "pragma" (~('\r' | '\n'))* EndOfLine)
		{_ttype = ANTLR_USE_NAMESPACE(antlr)Token::SKIP; newline();}
	;

As I understand it, this means the lexer will skip everything till the
first newline char. How would I collect this text anyways, for
parsing/analysis done by some other method?
From oliver.zeigermann at gmail.com  Sun Oct 23 21:40:09 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun Oct 23 21:40:12 2005
Subject: [antlr-interest] ANTLRWorks 1.0ea4 available!
In-Reply-To: <D158929E-3929-4724-A264-124613E712F2@arizona-software.ch>
References: <E790EA8D-8E62-44F6-805F-309882A95902@arizona-software.ch>
	<9da4f4520510221636u570ef987x@mail.gmail.com>
	<D158929E-3929-4724-A264-124613E712F2@arizona-software.ch>
Message-ID: <9da4f4520510232140n37f9383cq@mail.gmail.com>

Thanks a lot will try this ASAP as well!

Oliver

2005/10/23, Jean Bovet <antlr-list@arizona-software.ch>:
> Hi Oliver!
>
> The GUI lib is the XJLibrary that I am developing at the same time.
> It can be already downloaded for free with source code at this adress:
>
> http://www.cs.usfca.edu/~jbovet/vas/download/source.zip
>
> It is the source code of another project named "Visual Automata
> Simulator" which let's you play with NFA/DFA and Turing Machine. The
> GUI library can be found in the package edu.usfca.xj.
>
> Best regards,
>
> Jean
>
> Le 22 oct. 05 ? 16:36, Oliver Zeigermann a ?crit :
>
> > Hi Jean!
> >
> > That's really cool! Will try it ASAP. Is there any more information on
> > the GUI lib you are using for ANTLRWorks and/or source code available?
> >
> > Cheers
> >
> > Oliver
> >
> > 2005/10/22, Jean Bovet <antlr-list@arizona-software.ch>:
> >
> >> Hello!
> >>
> >> ANTLRWorks 1.0ea4 is now available. It has a lot of new features
> >> to make
> >> your life easier when navigating in the grammar and also some new
> >> refactoring tools (see the history at the bottom of the e-mail).
> >>
> >> http://www.antlr.org/works/index.html
> >>
> >> The ANTLRWorks jar has everything you need including ANTLR 3.0ea6.
> >>
> >> Feel free to send comments to the antlr-interest list or online at:
> >>
> >> http://www.antlr.org/misc/feedback
> >>
> >>
> >> Enjoy this new release!
> >>
> >> Jean Bovet
> >>
> >> * HISTORY *
> >>
> >> 10/22/05 - version 1.0ea4
> >>   - find and replace
> >>   - ideas actions
> >>   - rule folding (experimental)
> >>   - duplicates rules are now underlined in blue
> >>   - undefined rules are now underlined in red
> >>   - rules can now be grouped and displayed in a tree view
> >>   - auto-indentation
> >>   - show decision DFA (using DOT tool defined in the preferences)
> >>   - replace literal with token label
> >>   - remove left recursion (one or all)
> >>   - insert rule from template
> >>
> >>   - new analysis column displaying the location and kind of
> >>     errors and warnings
> >>   - support Perforce SCM commands
> >>   - console moved from Window menu to project's window
> >>   - improved console with events list
> >>   - refactored the main menu bar
> >>   - remove collapse/expand actions (will reintroduce them later)
> >>   - improved drag and drop visual feedback (can now drop below
> >>     or above a rule)
> >>   - improved auto-completion (context sensitive)
> >>   - removed duplicate names in auto-completion
> >>
> >>   - current line is now highlighted
> >>   - display line and column number in bottom status bar
> >>   - HOME/END key move to beginning/end of line
> >>   - can now navigate backward/forward
> >>   - rules have now icon in the tree view
> >>   - go to rule now move the cursor to the beginning of the rule
> >>     instead of selecting it
> >>   - new toolbar
> >>
> >>   - prefs: auto-save every n minutes
> >>   - prefs: syntax coloring parser delay
> >>   - prefs: can now specify the colors of each type of token in
> >>     the debugger input text panel
> >>   - prefs: can specify rule folding (experimental yet)
> >>
> >>   - include a pre-version of ANTLR 3.0ea6
> >>
> >>   - fixed a bug where a new document created on Windows would not
> >>     be correctly colorized
> >>   - fixed several visual bugs on Windows and Linux
> >>
> >>
> >
>
>
From ric.klaren at gmail.com  Sun Oct 23 21:47:11 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Sun Oct 23 21:47:14 2005
Subject: [antlr-interest] Collecting chars in the lexer
In-Reply-To: <e88138500510232031x4e9f5b26lcc772b7c6763896@mail.gmail.com>
References: <e88138500510232031x4e9f5b26lcc772b7c6763896@mail.gmail.com>
Message-ID: <bc607a4e0510232147p2c2583d1qc593d1c6131f4d61@mail.gmail.com>

On 10/23/05, Jim Crafton <jim.crafton@gmail.com> wrote:
> I have the following rule in my lexer
>
> Pragma
>         :       ('#' "pragma" (~('\r' | '\n'))* EndOfLine)
>                 {_ttype = ANTLR_USE_NAMESPACE(antlr)Token::SKIP; newline();}
>         ;
>
> As I understand it, this means the lexer will skip everything till the
> first newline char. How would I collect this text anyways, for
> parsing/analysis done by some other method?

The preserveWhitespace example might be interesting to look at. It
details how to make skipped whitespace available at later stages, the
same could also be applied to this.

Another approach would be to create a tokenstream filter it depends a
little on what you want to do at later stages.

Cheers,

Ric
From ric.klaren at gmail.com  Sun Oct 23 21:52:19 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Sun Oct 23 21:52:21 2005
Subject: [antlr-interest] ANTLR modification
In-Reply-To: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
References: <e88138500510221603uaf9b78er7b7e3478b49a92b4@mail.gmail.com>
Message-ID: <bc607a4e0510232152y67198a12kbd4f7fa1abe54614@mail.gmail.com>

On 10/22/05, Jim Crafton <jim.crafton@gmail.com> wrote:
> I have made a small modification to the ANTL Token, CommonToken, and
> CharScanner classes. The changes make it possible to for a Token (and
> an AST node as well) to have an offset assigned to it that represents
> the offset from the beginning of the character stream. I have a need
> for this, and I added and thought others might find it useful as well.
>
> The changes include added a virtual getOffset/setOffset method to the
> Token class, and re-implementing these in the CommonToken class. The
> CharScanner class has a new member var "offset" that is initially set
> to 0 in it's constructor(s) and then incremented for each call of the
> consume() method. This is member is then used when the CharScanner
> creates a new Token in the makeToken() method. The Token is then
> assigned this value by calling the Token's setOffset() method.
>
> Would there be any interest in having this merged into the general
> ANTLR codebase? If so, what's the best way to submit this?

I could have a look at it, just send me a diff or the changed files.
Not sure if I'll add it to the custom functionality though. I'd be
interested in changing it into an example though, and see if the
runtime can be modified to accomodate doing this on the 'outside'.

Cheers,

Ric
From gt54-antlr at cyconix.com  Mon Oct 24 01:22:31 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Oct 24 01:22:41 2005
Subject: [antlr-interest] Custom ast factory
In-Reply-To: <e88138500510221046r56793d18oeeae6bef282946e@mail.gmail.com>
References: <e88138500510221046r56793d18oeeae6bef282946e@mail.gmail.com>
Message-ID: <435C99C7.9060401@cyconix.com>

Jim Crafton wrote:
> I am trying to get my custom ast factory to work as the creator of new
> AST nodes. However I don't see how to make this happen. I do the
> following in my constructor :
> 
> 
> CppASTNodeFactory() :
> ASTFactory("CppASTNodeFactory",CppASTNode::factory),
> nodeFactory(&CppASTNode::factory) {}
> 
>>From tracing the code, what this means is that the "factory" method
> for creating node is actually the  CppASTNode::factory, which is a
> static method. Is there a way to get the parser to call a member
> method on the ast factory that I can then override in my custom ast
> class?

I don't use the parser, but this should (?!) work:

1) subclass AST

2) include a factory method in your new class

3) Your factory method is now automatically registered by 
'initializeASTFactory', without the need to subclass ASTFactory

Paul

From jim.crafton at gmail.com  Mon Oct 24 06:02:42 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Mon Oct 24 06:02:46 2005
Subject: [antlr-interest] Custom ast factory
In-Reply-To: <435C99C7.9060401@cyconix.com>
References: <e88138500510221046r56793d18oeeae6bef282946e@mail.gmail.com>
	<435C99C7.9060401@cyconix.com>
Message-ID: <e88138500510240602y2f3f96d4h3d772c84b0221ee0@mail.gmail.com>

OK, thanks. I actually got what I needed to work without having to
worry about this any ways.

Cheers,

Jim
From nadesai at cse.iitb.ac.in  Mon Oct 24 06:04:30 2005
From: nadesai at cse.iitb.ac.in (Desai Nishitkumar Ashokkumar)
Date: Mon Oct 24 06:04:37 2005
Subject: [antlr-interest] Re: antlr-interest Digest, Vol 11, Issue 43
In-Reply-To: <20051023214741.A41FCDCD3F@www.antlr.org>
References: <20051023214741.A41FCDCD3F@www.antlr.org>
Message-ID: <Pine.LNX.4.61.0510241828490.21087@nsl-14.cse.iitb.ac.in>

On Sun, 23 Oct 2005 antlr-interest-request@antlr.org wrote:

> Send antlr-interest mailing list submissions to
> 	antlr-interest@antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request@antlr.org
>
> You can reach the person managing the list at
> 	antlr-interest-owner@antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>   1. Re: query (Sohail Somani)
>   2. Re: thank you sir (Terence Parr)
>   3. Re: ANTLR modification (Suman Karumuri)
>   4. Re: Re: thank you sir (Terence Parr)
>   5. Re: Re: antlr-interest Digest, Vol 11, Issue 41 (Martin Probst)
>   6. Problem with carriage returns in c#	stringtemplate (Tech)
>   7. Re: ANTLRWorks 1.0ea4 available! (Jean Bovet)
>   8. Re: ANTLRWorks 1.0ea4 available! (Jean Bovet)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 23 Oct 2005 12:08:00 -0700
> From: Sohail Somani <sohail@taggedtype.net>
> Subject: Re: [antlr-interest] query
> To: Desai Nishitkumar Ashokkumar <nadesai@cse.iitb.ac.in>
> Cc: antlr-interest@antlr.org
> Message-ID: <1130094480.8124.1.camel@localhost.localdomain>
> Content-Type: text/plain
>
> On Sun, 2005-23-10 at 19:02 +0530, Desai Nishitkumar Ashokkumar wrote:
>> Hello sir,
>>  		I m doing M.Tech at IIT bombay, India. My project is on
>> re-engineering from procedural to object oriented program. And I am trying
>> to apply that on linux kernel. Currently I am trying to make any c code
>> compilable by c++ code. I am using GNU C grammar given in ANTLR grammars.
>> My doubt is is Preprocessing done by ANTLR or is there any option to do
>> that. and can I apply tool (translation tool) to entire project directory
>> such that tool itself take care of #include and #define statement ??
>
> FYI: Structs + Functions != procedural, Classes != object-oriented.
>
> Speaking from personal experience, it is entirely possible to write an
> object oriented kernel in C. I'd imagine the linux kernel is no
> different.
>
> Sohail
>
>
>
> ------------------------------
>
> Message: 2
> Date: Sun, 23 Oct 2005 13:05:29 -0700
> From: Terence Parr <parrt@cs.usfca.edu>
> Subject: [antlr-interest] Re: thank you sir
> To: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID: <873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>
> Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
>
>
> On Oct 23, 2005, at 10:31 AM, Desai Nishitkumar Ashokkumar wrote:
>
>> Hello sir,
>>            After running preprocessor manually, preprocessod code
>> is different (not in semantic but syntatic) from original code. And
>> if I convert this preprocessod code to c++ code (without classes,
>> only compatible to g++) such that it is compile by g++ compiler
>> then this translated code is also without any macros (preprocessor
>> statement) but that I dont want. I only want to do is making C code
>> compile by g++ compiler. And this I want to do automatically and
>> dont want to change unnecessary codes.
>
> Hi.  This is a standard problem.  Preprocessors can render the output
> messy, but w/o using preproc, the input is often not valid C code.
>
>> If I manually first do preprocessing then I think it ll not
>> fulfilled my goal.
>> Actually I want to make linux kernel compilable by g++. If I
>> manually apply preprocessor on that and then translate it to c++
>> then translated code ll be very big. bcz kernel has lots of macros
>> used.
>
> C++ is C so I'm not sure you have a problem with anything except the
> io libraries and such; still the Clib should still work with C++ right?
>
> Ter
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 24 Oct 2005 01:36:56 +0530
> From: Suman Karumuri <mansuk@gmail.com>
> Subject: Re: [antlr-interest] ANTLR modification
> To: antlr-interest@antlr.org
> Message-ID:
> 	<c26541e00510231306m6cb74795w2f6a0e320b4e1397@mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> On 10/23/05, Jim Crafton <jim.crafton@gmail.com> wrote:
>> Not with anything I tried. You're right it is pretty basic to do (not
>> more than 10-15 LOC if that). If it doesn't go in then I may have
>> issues when I upgrade to the next version. I guess it's not that big
>> of a deal, just something to watch out for.
>>
>> If it's appropriate, I'd be more than happy to just post my snippets
>> on the list so that other's can more easily find it.
>>
> Please do post them here.
> They would prove useful for people.Better post as much as you can(incl
> examples) so that it will stay in the archives for future reference.
>
> -Suman
>
>
> ------------------------------
>
> Message: 4
> Date: Sun, 23 Oct 2005 13:10:22 -0700
> From: Terence Parr <parrt@cs.usfca.edu>
> Subject: Re: [antlr-interest] Re: thank you sir
> To: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID: <FABAD9E0-A17D-4AB0-A604-6A4605C56605@cs.usfca.edu>
> Content-Type: text/plain; charset=US-ASCII; format=flowed
>
>
> On Oct 23, 2005, at 1:05 PM, Terence Parr wrote:
>> C++ is C so ...
>
> ooops...make that "C is C++..." or "C++ is C with additions..."
>
Hi   Sir,
 	There are lots of program which can be compiled by gcc but not 
g++. like in gcc no need to do explicit type casting wheres in g++ it is 
needed.

  So, program in which typecasting is not done explicitly is compiled by 
gcc but by g++. I want to make changes in c code such that it is also 
compiled by g++. And then I can convert any module to object oriented and 
test the entire project by g++.

If I ll not convert entire project to g++ compatible then after making one 
module object oriented how can i test that project is still working or 
not??

thanks

-Nishit

  > Ter
>
>
> ------------------------------
>
> Message: 5
> Date: Sun, 23 Oct 2005 22:25:31 +0200
> From: Martin Probst <mail@martin-probst.com>
> Subject: Re: [antlr-interest] Re: antlr-interest Digest, Vol 11, Issue
> 	41
> To: Desai Nishitkumar Ashokkumar <nadesai@cse.iitb.ac.in>
> Cc: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID: <1130099131.10755.7.camel@localhost.localdomain>
> Content-Type: text/plain
>
> Hi,
>
>>             After running preprocessor manually, preprocessod code is
>> different (not in semantic but syntatic) from original code. And if I
>> convert this preprocessod code to c++ code (without classes, only
>> compatible to g++) such that it is compile by g++ compiler
>
> you do realise that C is a proper subset of C++, e.g. that any valid C
> program is also a valid C++ program? If you just replace all occurrences
> of "gcc" in the Makefiles of the Linux kernel with "g++" you will be
> able to compile the kernel just as before.
>
>>  then this
>> translated code is also without any macros (preprocessor statement) but
>> that I dont want.
>
> C++ includes pre-processor macros as a language feature, albeit they are
> usually not used to the degree they are in C. Pre-processed C++ files
> will contain the defines of all header files they include in their body,
> which will render the classes completely unusable.
>
>> I only want to do is making C code compile by g++
>> compiler. And this I want to do automatically and dont want to change
>> unnecessary codes.
>
> Any code compilable by gcc is compilable by g++.
>
>> If I manually first do preprocessing then I think it ll not fulfilled my
>> goal.
>
> You mean by manually calling "/lib/cpp" or by replacing all the macros?
> The first is not really manual, the later is probably close to
> impossible in a project as big as the Linux kernel. Especially as you'd
> have to come up with a equally powerful C++ programming technique as a
> replacement for each.
>
> I don't really see the point in what you're trying to do.
>
> Martin
>
>
>
> ------------------------------
>
> Message: 6
> Date: Sun, 23 Oct 2005 22:31:31 +0100
> From: Tech <tech@swingkid.fsnet.co.uk>
> Subject: [antlr-interest] Problem with carriage returns in c#
> 	stringtemplate
> To: antlr-interest@antlr.org
> Message-ID: <435C0133.7060902@swingkid.fsnet.co.uk>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Thanks for your reply Luis.
>
> No, this is not my whole template group, but I was trying to reduce the
> problem. I agree with you that your code works. However, if you copy the
> string into a text file (removing the escape characters from the
> quotation marks) and include it as an embedded resource, it doesn't work!
>
>     //StringReader sr = new StringReader("group TestOutput;
>    program(statements)::= << class Wrapper { <statements;
>    separator=\"\r\n\"> } >>");
>     Stream s =
>    typeof(Class1).Assembly.GetManifestResourceStream("Project1.Test.stg");
>    StreamReader sr = new StreamReader(s);
>    StringTemplateGroup stg = new StringTemplateGroup(sr,
>    typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));
>
> where Test.stg contains
>
>    group TestOutput; program(statements)::= << class Wrapper {
>    <statements; separator="\r\n"> } >>
>
> I have tried copying the StreamReader contents into a string before
> constructing the StringTemplateGroup, but that doesn't help. It seems
> more like a .Net issue than a StringTemplate issue, but I can't figure
> it out. I wonder if it is an encoding thing?
>
> Always curious,
>
> Mark
>
>
>
>

-- 
Nishit Desai
M.Tech II year 
Computer Science & Engg.
IIT Bombay
From gt54-antlr at cyconix.com  Mon Oct 24 06:18:02 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Oct 24 06:18:12 2005
Subject: [antlr-interest] Re: antlr-interest Digest, Vol 11, Issue 43
In-Reply-To: <Pine.LNX.4.61.0510241828490.21087@nsl-14.cse.iitb.ac.in>
References: <20051023214741.A41FCDCD3F@www.antlr.org>
	<Pine.LNX.4.61.0510241828490.21087@nsl-14.cse.iitb.ac.in>
Message-ID: <435CDF0A.9000202@cyconix.com>

Desai Nishitkumar Ashokkumar wrote:

<1: please don't quote everything - it makes it impossible to read>

<2: use a valid subject line - people may actually read your message then>

>     There are lots of program which can be compiled by gcc but not g++. 
> like in gcc no need to do explicit type casting wheres in g++ it is needed.

Do you have an example? Are you using the same versions of gcc and g++?

Paul

From henryb at ntlworld.com  Mon Oct 24 07:19:54 2005
From: henryb at ntlworld.com (Henry Butowsky)
Date: Mon Oct 24 06:51:36 2005
Subject: [antlr-interest] Recognizing C type numbers
Message-ID: <435CED8A.7020501@ntlworld.com>

Hi Guys,
	I want to recognize C type numbers with/without a suffix.
	ie 200b ,50B   type byte
	20L ,10l       type long
	111,212        type int
	1.2 12e10, .234E-3 , 1.2d, 200e+10D  type double
	1f ,1.2f, .234f 20e+10F              type float

So far I have in the lexer


	
protected DGT:     ('0'..'9');
protected LPH:     ( 'a'..'z' | 'A'..'Z' | '_' );
protected LPHDGT:  ( 'a'..'z' | 'A'..'Z' | '_' | '0'..'9');
protected XPN:     ( 'e' | 'E' ) ( '+' | '-' )? ('0'..'9')+ ;


NUMBER:
         ( (DGT)* ((  '.' (DGT)*(XPN)? ) | XPN ))=> ( (DGT)* 
(('.'(DGT)*(XPN)? ) | XPN ))
		{  $setType(DOUBLE);  }
             | ((DGT)+   { $setType(INT);}
             | ('L'|'l') { $setType(INT);}
             | ('S'|'s') { $setType(SHORT);}
             | ('B'|'b') { $setType(BYTE); printf("Lexing byte\n"); }
           )
         ;
VAR_ID: LPH (LPH|DGT)*;

The numbers sort of work -- but Im getting non-determinism between 
VAR_ID and NUMBER

Any ideas how to rewrite lexer ?
Many thx

From luisl at scarab.co.za  Mon Oct 24 06:57:18 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Mon Oct 24 06:57:39 2005
Subject: [antlr-interest] Problem with carriage returns in
	c#	stringtemplate
In-Reply-To: <435C0133.7060902@swingkid.fsnet.co.uk>
Message-ID: <MPEMLILMNEOKCPPBGEMKCEIGCIAA.luisl@scarab.co.za>

Hi Mark,

Some investigation has revealed the following:

1. When you use a string literal the template actually contains a carriage
return and a new line
2. When you read the template from an embedded resource the template
contains "\r\n" instead of a carriage return and a new line

The second case sends the lexer down a path where \r is not defined as a
valid escape character. I've just uploaded a new C# version to
www.stringtemplate.org which fixes this problem.

Regards

Luis

-----Original Message-----
From: Tech [mailto:tech@swingkid.fsnet.co.uk]
Sent: 23 October 2005 11:32 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Problem with carriage returns in c#
stringtemplate


Thanks for your reply Luis.

No, this is not my whole template group, but I was trying to reduce the
problem. I agree with you that your code works. However, if you copy the
string into a text file (removing the escape characters from the
quotation marks) and include it as an embedded resource, it doesn't work!

     //StringReader sr = new StringReader("group TestOutput;
    program(statements)::= << class Wrapper { <statements;
    separator=\"\r\n\"> } >>");
     Stream s =
    typeof(Class1).Assembly.GetManifestResourceStream("Project1.Test.stg");
    StreamReader sr = new StreamReader(s);
    StringTemplateGroup stg = new StringTemplateGroup(sr,
    typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));

where Test.stg contains

    group TestOutput; program(statements)::= << class Wrapper {
    <statements; separator="\r\n"> } >>

I have tried copying the StreamReader contents into a string before
constructing the StringTemplateGroup, but that doesn't help. It seems
more like a .Net issue than a StringTemplate issue, but I can't figure
it out. I wonder if it is an encoding thing?

Always curious,

Mark



--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.361 / Virus Database: 267.12.4/146 - Release Date: 21/10/2005





From tech at swingkid.fsnet.co.uk  Mon Oct 24 23:39:08 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Mon Oct 24 23:38:52 2005
Subject: [antlr-interest] Problem with carriage returns
	in	c#	stringtemplate
In-Reply-To: <MPEMLILMNEOKCPPBGEMKCEIGCIAA.luisl@scarab.co.za>
References: <MPEMLILMNEOKCPPBGEMKCEIGCIAA.luisl@scarab.co.za>
Message-ID: <435DD30C.3090406@swingkid.fsnet.co.uk>

Thanks Luis,
                I've just tried downloading the patch, but the link is 
broken. Thanks for the explanation though, it's always good to know 
about these kinds of subtle differences.

Mark

Luis Leal wrote:

>Hi Mark,
>
>Some investigation has revealed the following:
>
>1. When you use a string literal the template actually contains a carriage
>return and a new line
>2. When you read the template from an embedded resource the template
>contains "\r\n" instead of a carriage return and a new line
>
>The second case sends the lexer down a path where \r is not defined as a
>valid escape character. I've just uploaded a new C# version to
>www.stringtemplate.org which fixes this problem.
>
>Regards
>
>Luis
>
>-----Original Message-----
>From: Tech [mailto:tech@swingkid.fsnet.co.uk]
>Sent: 23 October 2005 11:32 PM
>To: antlr-interest@antlr.org
>Subject: [antlr-interest] Problem with carriage returns in c#
>stringtemplate
>
>
>Thanks for your reply Luis.
>
>No, this is not my whole template group, but I was trying to reduce the
>problem. I agree with you that your code works. However, if you copy the
>string into a text file (removing the escape characters from the
>quotation marks) and include it as an embedded resource, it doesn't work!
>
>     //StringReader sr = new StringReader("group TestOutput;
>    program(statements)::= << class Wrapper { <statements;
>    separator=\"\r\n\"> } >>");
>     Stream s =
>    typeof(Class1).Assembly.GetManifestResourceStream("Project1.Test.stg");
>    StreamReader sr = new StreamReader(s);
>    StringTemplateGroup stg = new StringTemplateGroup(sr,
>    typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));
>
>where Test.stg contains
>
>    group TestOutput; program(statements)::= << class Wrapper {
>    <statements; separator="\r\n"> } >>
>
>I have tried copying the StreamReader contents into a string before
>constructing the StringTemplateGroup, but that doesn't help. It seems
>more like a .Net issue than a StringTemplate issue, but I can't figure
>it out. I wonder if it is an encoding thing?
>
>Always curious,
>
>Mark
>
>
>
>--
>No virus found in this outgoing message.
>Checked by AVG Free Edition.
>Version: 7.1.361 / Virus Database: 267.12.4/146 - Release Date: 21/10/2005
>
>
>
>
>
>
>
>
>  
>


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.361 / Virus Database: 267.12.5/147 - Release Date: 24/10/2005


From tech at swingkid.fsnet.co.uk  Tue Oct 25 00:11:53 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Tue Oct 25 00:11:28 2005
Subject: [antlr-interest] Checking for expression end in Javascript parser
Message-ID: <435DDAB9.2040308@swingkid.fsnet.co.uk>

Hi all,
       I am new to ANTLR, and am writing a (basic) Javascript grammer, 
based on Todd King's C# grammer (mostly because it was very clean and 
easy to understand, thanks Todd).
One aspect that is different is that Javascript expressions end either 
at a semi colon, or at the earliest new line that makes a valid 
expression. However, I don't really want to include newline characters 
in the parser, as you'd have to add them in everywhere. I was thinking 
of trying to use a semantic predicate that checked the line number of 
the current token against the line number of the next token just for 
expression statements. How do you programatically reference the current 
token being checked? Is it always effectively LT(1)?
If there is a better approach, I would be interested to know it. This is 
only really out of academic interest, currently my solution is to assume 
the input file is well written javascript ;-)

Thanks,

Mark


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.361 / Virus Database: 267.12.5/147 - Release Date: 24/10/2005


From parrt at cs.usfca.edu  Tue Oct 25 07:50:01 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Oct 25 07:50:05 2005
Subject: [antlr-interest] Problem with carriage returns
	in	c#	stringtemplate
In-Reply-To: <435DD30C.3090406@swingkid.fsnet.co.uk>
References: <MPEMLILMNEOKCPPBGEMKCEIGCIAA.luisl@scarab.co.za>
	<435DD30C.3090406@swingkid.fsnet.co.uk>
Message-ID: <874C1B4C-CF2E-478E-8D61-F70455C86452@cs.usfca.edu>

oh, right.  There is a bug in my server software that forgets to put  
the full hostname...hang on...

Ter
On Oct 24, 2005, at 11:39 PM, Tech wrote:

> Thanks Luis,
>                I've just tried downloading the patch, but the link  
> is broken. Thanks for the explanation though, it's always good to  
> know about these kinds of subtle differences.
>
> Mark
>
> Luis Leal wrote:
>
>
>> Hi Mark,
>>
>> Some investigation has revealed the following:
>>
>> 1. When you use a string literal the template actually contains a  
>> carriage
>> return and a new line
>> 2. When you read the template from an embedded resource the template
>> contains "\r\n" instead of a carriage return and a new line
>>
>> The second case sends the lexer down a path where \r is not  
>> defined as a
>> valid escape character. I've just uploaded a new C# version to
>> www.stringtemplate.org which fixes this problem.
>>
>> Regards
>>
>> Luis
>>
>> -----Original Message-----
>> From: Tech [mailto:tech@swingkid.fsnet.co.uk]
>> Sent: 23 October 2005 11:32 PM
>> To: antlr-interest@antlr.org
>> Subject: [antlr-interest] Problem with carriage returns in c#
>> stringtemplate
>>
>>
>> Thanks for your reply Luis.
>>
>> No, this is not my whole template group, but I was trying to  
>> reduce the
>> problem. I agree with you that your code works. However, if you  
>> copy the
>> string into a text file (removing the escape characters from the
>> quotation marks) and include it as an embedded resource, it  
>> doesn't work!
>>
>>     //StringReader sr = new StringReader("group TestOutput;
>>    program(statements)::= << class Wrapper { <statements;
>>    separator=\"\r\n\"> } >>");
>>     Stream s =
>>    typeof(Class1).Assembly.GetManifestResourceStream 
>> ("Project1.Test.stg");
>>    StreamReader sr = new StreamReader(s);
>>    StringTemplateGroup stg = new StringTemplateGroup(sr,
>>    typeof(antlr.stringtemplate.language.AngleBracketTemplateLexer));
>>
>> where Test.stg contains
>>
>>    group TestOutput; program(statements)::= << class Wrapper {
>>    <statements; separator="\r\n"> } >>
>>
>> I have tried copying the StreamReader contents into a string before
>> constructing the StringTemplateGroup, but that doesn't help. It seems
>> more like a .Net issue than a StringTemplate issue, but I can't  
>> figure
>> it out. I wonder if it is an encoding thing?
>>
>> Always curious,
>>
>> Mark
>>
>>
>>
>> --
>> No virus found in this outgoing message.
>> Checked by AVG Free Edition.
>> Version: 7.1.361 / Virus Database: 267.12.4/146 - Release Date:  
>> 21/10/2005
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>
>
> -- 
> No virus found in this outgoing message.
> Checked by AVG Free Edition.
> Version: 7.1.361 / Virus Database: 267.12.5/147 - Release Date:  
> 24/10/2005
>
>
>

From gil.loureiro at edinfor.logicacmg.com  Tue Oct 25 10:59:01 2005
From: gil.loureiro at edinfor.logicacmg.com (Gil Loureiro)
Date: Tue Oct 25 11:02:48 2005
Subject: [antlr-interest] Help to make an iteration
Message-ID: <OF73565A13.8B63B581-ON802570A5.0062F745-802570A5.0062FC72@edinfor.logicacmg.com>

DQpIaSBhbGwsDQoNCiAgSeKAmW0gdHJ5aW5nIHRvIG1ha2UgYSBwYXJzZXIg
dG8gdmVyeSBzaW1wbGUgbGFuZ3VhZ2Ugd2hlcmUgb25seSBleGlzdHMgYQ0K
ICBzZXF1ZW5jZSBvZiBhdG9taWMgc3RhdGVtZW50cyBpbnNpZGUgYSB3aGls
ZS4gVGhlIHNldCBvZiBzdGF0ZW1lbnRzDQogIGluc2lkZSB0aGUgd2hpbGUg
bG9vcCBzaG91bGQgYmUgZXhlY3V0ZWQgdW50aWwgYSBjb25kaXRpb24gYXJl
IHRydWUuDQogIEhvdyBjYW4gSSBydW4gdGhlIGZ1bmN0aW9ucyAoYXNzb2Np
YXRlZCB0byBydWxlcyBpbnNpZGUgdGhlIHdoaWxlKSB1bnRpbA0KICB0aGUg
Y29uZGl0aW9uIGlzIHRydWU/DQoNCiAgUmVnYXJkcywNCkdpbCBMb3VyZWly
bwoKRXN0ZSBlLW1haWwgZSBxdWFpc3F1ZXIgYW5leG9zIGNvbSBlbGUgdHJh
bnNtaXRpZG9zIHPjbyBkZXN0aW5hZG9zIGV4Y2x1c2l2YW1lbnRlIOBzIHBl
c3NvYXMgbmVsZSBlbmRlcmXnYWRhcywgb3MgcXVhaXMgcG9kZXLjbyBjb250
ZXIgaW5mb3JtYefjbyBsZWdhbG1lbnRlIHByb3RlZ2lkYSwgY29uZmlkZW5j
aWFsIG91IHNpZ2lsb3NhLiBO428gZGV2ZXLhIGZhemVyIHF1YWxxdWVyIGPz
cGlhIGRlc3RhIG1lbnNhZ2VtLCB1dGlsaXrhLWxhIHBhcmEgcXVhbHF1ZXIg
ZmltIG91IHRyYW5zbWl0aXIgbyBzZXUgY29udGX6ZG8gYSB0ZXJjZWlyb3Mu
IENhc28gdGVuaGEgcmVjZWJpZG8gZXN0ZSBlLW1haWwgaW5kZXZpZGFtZW50
ZSwgcG9yIGZhdm9yIGFwYWd1ZS1vIGRlZmluaXRpdmFtZW50ZSBkbyBzZXUg
c2lzdGVtYSBzZW0gbyBjb3BpYXIgZSBpbmZvcm1lIG8gcmVzcGVjdGl2byBy
ZW1ldGVudGUuIE9icmlnYWRvLgo=
From gil.loureiro at edinfor.logicacmg.com  Tue Oct 25 11:01:15 2005
From: gil.loureiro at edinfor.logicacmg.com (Gil Loureiro)
Date: Tue Oct 25 11:05:02 2005
Subject: [antlr-interest] Help to make an iteration (somehing go wrong with
	previous)
Message-ID: <OFD0EE3007.A89A9BC8-ON802570A5.00631541-802570A5.006330B8@edinfor.logicacmg.com>

SGkgYWxsLA0KDQpJ4oCZbSB0cnlpbmcgdG8gbWFrZSBhIHBhcnNlciB0byB2
ZXJ5IHNpbXBsZSBsYW5ndWFnZSB3aGVyZSBvbmx5IGV4aXN0cyBhDQpzZXF1
ZW5jZSBvZiBhdG9taWMgc3RhdGVtZW50cyBpbnNpZGUgYSB3aGlsZS4gVGhl
IHNldCBvZiBzdGF0ZW1lbnRzIGluc2lkZQ0KdGhlIHdoaWxlIGxvb3Agc2hv
dWxkIGJlIGV4ZWN1dGVkIHVudGlsIGEgY29uZGl0aW9uIGFyZSB0cnVlLg0K
SG93IGNhbiBJIHJ1biB0aGUgZnVuY3Rpb25zIChhc3NvY2lhdGVkIHRvIHJ1
bGVzIGluc2lkZSB0aGUgd2hpbGUpIHVudGlsDQp0aGUgY29uZGl0aW9uIGlz
IHRydWU/DQoNClJlZ2FyZHMsDQpHaWwgTG91cmVpcm8KCkVzdGUgZS1tYWls
IGUgcXVhaXNxdWVyIGFuZXhvcyBjb20gZWxlIHRyYW5zbWl0aWRvcyBz428g
ZGVzdGluYWRvcyBleGNsdXNpdmFtZW50ZSDgcyBwZXNzb2FzIG5lbGUgZW5k
ZXJl52FkYXMsIG9zIHF1YWlzIHBvZGVy428gY29udGVyIGluZm9ybWHn428g
bGVnYWxtZW50ZSBwcm90ZWdpZGEsIGNvbmZpZGVuY2lhbCBvdSBzaWdpbG9z
YS4gTuNvIGRldmVy4SBmYXplciBxdWFscXVlciBj83BpYSBkZXN0YSBtZW5z
YWdlbSwgdXRpbGl64S1sYSBwYXJhIHF1YWxxdWVyIGZpbSBvdSB0cmFuc21p
dGlyIG8gc2V1IGNvbnRl+mRvIGEgdGVyY2Vpcm9zLiBDYXNvIHRlbmhhIHJl
Y2ViaWRvIGVzdGUgZS1tYWlsIGluZGV2aWRhbWVudGUsIHBvciBmYXZvciBh
cGFndWUtbyBkZWZpbml0aXZhbWVudGUgZG8gc2V1IHNpc3RlbWEgc2VtIG8g
Y29waWFyIGUgaW5mb3JtZSBvIHJlc3BlY3Rpdm8gcmVtZXRlbnRlLiBPYnJp
Z2Fkby4K
From gil.loureiro at edinfor.logicacmg.com  Tue Oct 25 11:03:28 2005
From: gil.loureiro at edinfor.logicacmg.com (Gil Loureiro)
Date: Tue Oct 25 11:07:16 2005
Subject: [antlr-interest] Help to make an iteration
Message-ID: <OFAE739105.7C6494C8-ON802570A5.00634399-802570A5.006364A2@edinfor.logicacmg.com>

SGkgYWxsLA0KDQpJ4oCZbSB0cnlpbmcgdG8gbWFrZSBhIHBhcnNlciB0byB2
ZXJ5IHNpbXBsZSBsYW5ndWFnZSB3aGVyZSBvbmx5IGV4aXN0cyBhDQpzZXF1
ZW5jZSBvZiBhdG9taWMgc3RhdGVtZW50cyBpbnNpZGUgYSB3aGlsZS4gVGhl
IHNldCBvZiBzdGF0ZW1lbnRzIGluc2lkZQ0KdGhlIHdoaWxlIGxvb3Agc2hv
dWxkIGJlIGV4ZWN1dGVkIHVudGlsIGEgY29uZGl0aW9uIGFyZSB0cnVlLg0K
SG93IGNhbiBJIHJ1biB0aGUgZnVuY3Rpb25zIChhc3NvY2lhdGVkIHRvIHJ1
bGVzIGluc2lkZSB0aGUgd2hpbGUpIHVudGlsDQp0aGUgY29uZGl0aW9uIGlz
IHRydWU/DQoNClJlZ2FyZHMsDQpHaWwgTG91cmVpcm8KCkVzdGUgZS1tYWls
IGUgcXVhaXNxdWVyIGFuZXhvcyBjb20gZWxlIHRyYW5zbWl0aWRvcyBz428g
ZGVzdGluYWRvcyBleGNsdXNpdmFtZW50ZSDgcyBwZXNzb2FzIG5lbGUgZW5k
ZXJl52FkYXMsIG9zIHF1YWlzIHBvZGVy428gY29udGVyIGluZm9ybWHn428g
bGVnYWxtZW50ZSBwcm90ZWdpZGEsIGNvbmZpZGVuY2lhbCBvdSBzaWdpbG9z
YS4gTuNvIGRldmVy4SBmYXplciBxdWFscXVlciBj83BpYSBkZXN0YSBtZW5z
YWdlbSwgdXRpbGl64S1sYSBwYXJhIHF1YWxxdWVyIGZpbSBvdSB0cmFuc21p
dGlyIG8gc2V1IGNvbnRl+mRvIGEgdGVyY2Vpcm9zLiBDYXNvIHRlbmhhIHJl
Y2ViaWRvIGVzdGUgZS1tYWlsIGluZGV2aWRhbWVudGUsIHBvciBmYXZvciBh
cGFndWUtbyBkZWZpbml0aXZhbWVudGUgZG8gc2V1IHNpc3RlbWEgc2VtIG8g
Y29waWFyIGUgaW5mb3JtZSBvIHJlc3BlY3Rpdm8gcmVtZXRlbnRlLiBPYnJp
Z2Fkby4K
From gil.loureiro at edinfor.logicacmg.com  Tue Oct 25 11:26:34 2005
From: gil.loureiro at edinfor.logicacmg.com (Gil Loureiro)
Date: Tue Oct 25 11:30:22 2005
Subject: [antlr-interest] Help to make an iteration (somehing go wrong with
	previous)
Message-ID: <OF8CBACCBF.843C9A1E-ON802570A5.006569E7-802570A5.00658214@edinfor.logicacmg.com>

DQpIaSBhbGwsDQoNCknigJltIHRyeWluZyB0byBtYWtlIGEgcGFyc2VyIHRv
IHZlcnkgc2ltcGxlIGxhbmd1YWdlIHdoZXJlIG9ubHkgZXhpc3RzIGENCnNl
cXVlbmNlIG9mIGF0b21pYyBzdGF0ZW1lbnRzIGluc2lkZSBhIHdoaWxlLiBU
aGUgc2V0IG9mIHN0YXRlbWVudHMgaW5zaWRlDQp0aGUgd2hpbGUgbG9vcCBz
aG91bGQgYmUgZXhlY3V0ZWQgdW50aWwgYSBjb25kaXRpb24gYXJlIHRydWUu
DQpIb3cgY2FuIEkgcnVuIHRoZSBmdW5jdGlvbnMgKGFzc29jaWF0ZWQgdG8g
cnVsZXMgaW5zaWRlIHRoZSB3aGlsZSkgdW50aWwNCnRoZSBjb25kaXRpb24g
aXMgdHJ1ZT8NCg0KUmVnYXJkcywNCkdpbCBMb3VyZWlybwoKRXN0ZSBlLW1h
aWwgZSBxdWFpc3F1ZXIgYW5leG9zIGNvbSBlbGUgdHJhbnNtaXRpZG9zIHPj
byBkZXN0aW5hZG9zIGV4Y2x1c2l2YW1lbnRlIOBzIHBlc3NvYXMgbmVsZSBl
bmRlcmXnYWRhcywgb3MgcXVhaXMgcG9kZXLjbyBjb250ZXIgaW5mb3JtYefj
byBsZWdhbG1lbnRlIHByb3RlZ2lkYSwgY29uZmlkZW5jaWFsIG91IHNpZ2ls
b3NhLiBO428gZGV2ZXLhIGZhemVyIHF1YWxxdWVyIGPzcGlhIGRlc3RhIG1l
bnNhZ2VtLCB1dGlsaXrhLWxhIHBhcmEgcXVhbHF1ZXIgZmltIG91IHRyYW5z
bWl0aXIgbyBzZXUgY29udGX6ZG8gYSB0ZXJjZWlyb3MuIENhc28gdGVuaGEg
cmVjZWJpZG8gZXN0ZSBlLW1haWwgaW5kZXZpZGFtZW50ZSwgcG9yIGZhdm9y
IGFwYWd1ZS1vIGRlZmluaXRpdmFtZW50ZSBkbyBzZXUgc2lzdGVtYSBzZW0g
byBjb3BpYXIgZSBpbmZvcm1lIG8gcmVzcGVjdGl2byByZW1ldGVudGUuIE9i
cmlnYWRvLgo=
From gil_loureiro at iol.pt  Tue Oct 25 11:34:38 2005
From: gil_loureiro at iol.pt (gil_loureiro@iol.pt)
Date: Tue Oct 25 11:34:42 2005
Subject: [antlr-interest] Help to make an iteration (somehing go wrong with
	previous)
Message-ID: <1aa0061a9718.1a97181aa006@iol.pt>

Hi all,

I?m trying to make a parser to very simple language where only exists a sequence of atomic statements inside a while. The set of statements inside the while loop should be executed until a condition are true.
How can I run the functions (associated to rules inside the while) until the condition is true?

Regards,
Gil Loureiro

_________________________________________________________________________________
Agora ja pode telefonar e nao pagar nada!
E fale Tambem para qualquer numero fixo, movel ou internacional.
IOL Talki. Chamadas atraves da Internet.
Saber mais em http://www.iol.pt/correio/rodape.php?dst=0510241

From zhixueyong at hotmail.com  Tue Oct 25 11:49:09 2005
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Tue Oct 25 11:54:58 2005
Subject: [antlr-interest] Re: Checking for expression end in Javascript
	parser
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
Message-ID: <djlun6$v7g$1@sea.gmane.org>

I have the same problem since I am working on a ruby parser. Checking line 
number is an interesting idea, I will think it a little more tonight.

I am using another approach right now:
1. Do not filter line break in the lexer.
2. Subclass antlr generated lexer, overide nextToken(), add a flag to 
control the visibility of the linebreak.
For example:
Token nextToken()
{
   if (!filter_line_break)
  {
    //act like a normal lexer
    return super.nextToken();
  }
  else
 {
    //filter line break
    while (true)
    {
       Token t = super.nextToken();
       if (t.Type() != Token.LINE_BREAK)
      {
          return t;
      }
    }
 }
}

Most of the time linebreaks is ignored in the parser (by setting 
lexer.filter_line_break = true), but you can "see" them when you need.
I have not finished my parser yet so I am not sure if it works in all cases, 
but so far so good.

-- 
Xue Yong Zhi
http://seclib.blogspot.com

> expression. However, I don't really want to include newline characters in 
> the parser, as you'd have to add them in everywhere. I was thinking of 
> trying to use a semantic predicate that checked the line number of the 
> current token against the line number of the next token just for 
> expression statements. How do you programatically reference the current 
> token being checked? Is it always effectively LT(1)?
> If there is a better approach, I would be interested to know it. This is 
> only really out of academic interest, currently my solution is to assume 
> the input file is well written javascript ;-)



From ewbank at gmail.com  Tue Oct 25 12:52:55 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Oct 25 12:54:13 2005
Subject: [antlr-interest] Help to make an iteration (somehing go wrong
	with previous)
In-Reply-To: <OF8CBACCBF.843C9A1E-ON802570A5.006569E7-802570A5.00658214@edinfor.logicacmg.com>
References: <OF8CBACCBF.843C9A1E-ON802570A5.006569E7-802570A5.00658214@edinfor.logicacmg.com>
Message-ID: <dd3a065f0510251252h4dc5b50eka7cd4659eeda5d73@mail.gmail.com>

Hmm.  ANTLR allows you to build your tree, but you have to process it
yourself.  ANTLR does not provide any runtime support for this type of
operation; it allows you to walk trees and operate on them...

One way to do this, if you want to use ANTLR's treeparser to drive
your execution, is something like this:

eval:
   ... ... ... | while_stmt | ... ... ...
   ;

while_stmt : #( WHILE e:expr s:stmt ) { while (eval(#e) == true) {
eval(#s); } };

You still have to define what "eval(X)" means, but the "program
counter" is managed by ANTLR via tree walker.

Hope this helps,
- Bryan
From tech at damle.name  Tue Oct 25 13:39:32 2005
From: tech at damle.name (tech@damle.name)
Date: Tue Oct 25 13:39:31 2005
Subject: [antlr-interest] Grammar for search criteria
Message-ID: <20051025203929.8FA1FDCC46@www.antlr.org>

We're trying to build a language for specifying search criteria 
something like 
	 (CompanyName LIKE 'A%') AND (CompanyRevenue >= 1000000 AND Year =
2000)
 
Are there any parsers generated for language similar to above ? Would
greatly appreciate if someone can give any pointers. 
 
Thanks,
 
S

From chris at lotuscat.com  Tue Oct 25 13:37:11 2005
From: chris at lotuscat.com (Chris Black)
Date: Tue Oct 25 13:42:29 2005
Subject: [antlr-interest] Grammar for search criteria
In-Reply-To: <20051025203929.8FA1FDCC46@www.antlr.org>
References: <20051025203929.8FA1FDCC46@www.antlr.org>
Message-ID: <435E9777.7070302@lotuscat.com>

tech@damle.name wrote:

>We're trying to build a language for specifying search criteria 
>something like 
>	 (CompanyName LIKE 'A%') AND (CompanyRevenue >= 1000000 AND Year =
>2000)
> 
>Are there any parsers generated for language similar to above ? Would
>greatly appreciate if someone can give any pointers. 
> 
>Thanks,
> 
>S
>  
>
This seems quite SQL-like to me. If you check out 
http://antlr.org/grammar/list you will see a few SQL-related parsers. 
One of these should give you some hints.

Chris
From tech at swingkid.fsnet.co.uk  Tue Oct 25 14:08:22 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Tue Oct 25 14:07:06 2005
Subject: [antlr-interest] Re: Checking for expression end in Javascript
	parser
In-Reply-To: <djlun6$v7g$1@sea.gmane.org>
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
	<djlun6$v7g$1@sea.gmane.org>
Message-ID: <435E9EC6.2050505@swingkid.fsnet.co.uk>

Hi Xue,

I had been thinking along similar lines, but was going to use the 
TokenStreamHiddenTokenFilter (see Preserving Whitespace During 
Translation <http://antlr.org/article/whitespace/index.html>) to store 
the newline characters. However, this would still need some kind of 
semantic predicate to access the values as part of a parser check (I 
think, I've not tried using semantic predicates yet). So both options 
are quite similar. Your approach means you can use newline tokens in the 
recognition rule, which might be simpler. Looking forward to hearing 
what you think.

Mark

Xue Yong Zhi wrote:

>I have the same problem since I am working on a ruby parser. Checking line 
>number is an interesting idea, I will think it a little more tonight.
>
>I am using another approach right now:
>1. Do not filter line break in the lexer.
>2. Subclass antlr generated lexer, overide nextToken(), add a flag to 
>control the visibility of the linebreak.
>For example:
>Token nextToken()
>{
>   if (!filter_line_break)
>  {
>    //act like a normal lexer
>    return super.nextToken();
>  }
>  else
> {
>    //filter line break
>    while (true)
>    {
>       Token t = super.nextToken();
>       if (t.Type() != Token.LINE_BREAK)
>      {
>          return t;
>      }
>    }
> }
>}
>
>Most of the time linebreaks is ignored in the parser (by setting 
>lexer.filter_line_break = true), but you can "see" them when you need.
>I have not finished my parser yet so I am not sure if it works in all cases, 
>but so far so good.
>
>  
>


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.1.361 / Virus Database: 267.12.5/148 - Release Date: 25/10/2005


From serg2 at narod.ru  Tue Oct 25 22:55:06 2005
From: serg2 at narod.ru (Danilov S.N.)
Date: Tue Oct 25 22:55:27 2005
Subject: [antlr-interest] HTML and PHP script paser Could antlr do it?
Message-ID: <435F1A3A.000006.17734@tide.yandex.ru>

I need html and php parser for  highlighting hmtml php code.
this means that this parser have to work with non-valid or bad code. Can I use antlr for this purpose. And may be anybody has examples how could I do it?

Best Reagads 
Sergey
From tech at swingkid.fsnet.co.uk  Wed Oct 26 01:33:32 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Wed Oct 26 01:32:47 2005
Subject: [antlr-interest] Re: Checking for expression end in Javascript
	parser
In-Reply-To: <djlun6$v7g$1@sea.gmane.org>
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
	<djlun6$v7g$1@sea.gmane.org>
Message-ID: <435F3F5C.4090604@swingkid.fsnet.co.uk>

I have overriden consume() in my parser to store the line number of the 
last token consumed:

    int currentLine = 0;

    public override void consume()
        {
            currentLine = LA(1);
            base.consume();
        }

I have then defined semi:

    semi
        :    {currentLine == LT(1).getLine()}? SEMI
        |    (SEMI)?
        ;

This seems to work, but gives me lots of disambiguation warnings. What 
do you think?

Mark

From gil_loureiro at iol.pt  Wed Oct 26 02:44:04 2005
From: gil_loureiro at iol.pt (gil_loureiro@iol.pt)
Date: Wed Oct 26 02:44:10 2005
Subject: [antlr-interest] Help to make an iteration (somehing go wrong with
	previous)
Message-ID: <314452c814.2c81431445@iol.pt>

Hi Bryan,

Thanks for your answer.

But the problem is ?stmt?  is another tree ... how can I walk this tree (with eval(#s)) to run the contained set of statements multiple times?

Regards,


_________________________________________________________________________________
Agora ja pode telefonar e nao pagar nada!
E fale Tambem para qualquer numero fixo, movel ou internacional.
IOL Talki. Chamadas atraves da Internet.
Saber mais em http://www.iol.pt/correio/rodape.php?dst=0510241

From parrt at cs.usfca.edu  Wed Oct 26 07:39:23 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Oct 26 07:39:27 2005
Subject: [antlr-interest] Re: Checking for expression end in Javascript
	parser
In-Reply-To: <435F3F5C.4090604@swingkid.fsnet.co.uk>
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
	<djlun6$v7g$1@sea.gmane.org>
	<435F3F5C.4090604@swingkid.fsnet.co.uk>
Message-ID: <3047775D-CB95-48AA-8555-AB780C9C058C@cs.usfca.edu>


On Oct 26, 2005, at 1:33 AM, Tech wrote:

> I have overriden consume() in my parser to store the line number of  
> the last token consumed:
>
>    int currentLine = 0;
>
>    public override void consume()
>        {
>            currentLine = LA(1);
>            base.consume();
>        }
>
> I have then defined semi:
>
>    semi
>        :    {currentLine == LT(1).getLine()}? SEMI
>        |    (SEMI)?
>        ;
>
> This seems to work, but gives me lots of disambiguation warnings.  
> What do you think?

Hi Mark,

remove the (...)? around the SEMI as semi is optional...probably not  
waht you want.
Ter
From zhixueyong at hotmail.com  Wed Oct 26 08:52:36 2005
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Wed Oct 26 08:58:36 2005
Subject: [antlr-interest] Re: Checking for expression end in Javascriptparser
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
	<djlun6$v7g$1@sea.gmane.org>
Message-ID: <djo8o4$tm5$1@sea.gmane.org>

Oops, find a problem in my approach: parser will not access token stream 
directly everytime, it uses buffer. So overriding Parser::LA() might be 
better.

-- 
Xue Yong Zhi
http://seclib.blogspot.com

> 1. Do not filter line break in the lexer.
> 2. Subclass antlr generated lexer, overide nextToken(), add a flag to 
> control the visibility of the linebreak.



From open.zone at virgin.net  Wed Oct 26 11:27:59 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Oct 26 11:12:41 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
Message-ID: <000101c5da5a$fef55550$6902a8c0@hercules>

Hi,

For background info, pls see this thread:
 
http://www.antlr.org/pipermail/antlr-interest/2005-April/011838.html


The options currently being considered are (in order of attractiveness):

1. Rewrite ASTPair as a struct.
   Pros: no heap allocations, no GC impact/churn
   Cons: breaking changes to ASTFactory methods (and client code):
         - makeASTRoot() and 
         - addASTChild() 

2. Provide a per-instance object pool
   Pros: fixes multi-threading issue, reduces ASTPair allocations
   Cons: future GCs may be more efficient, GC impact

3. Return to the pre-2.7.5 scheme and allow the GC to clean up.
   Pros: fixes multi-threading issue, leverages GC improvements
   Cons: more ASTPair allocations, GC impact

Any opinions?.

Cheers,

Micheal
ANTLR/C#

From antlr at shmuelhome.mine.nu  Wed Oct 26 11:28:33 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed Oct 26 11:28:57 2005
Subject: [antlr-interest] Checking for expression end in Javascript parser
In-Reply-To: <435DDAB9.2040308@swingkid.fsnet.co.uk>
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
Message-ID: <435FCAD1.1040609@shmuelhome.mine.nu>

Tech wrote:
> One aspect that is different is that Javascript expressions end either 
> at a semi colon, or at the earliest new line that makes a valid 
> expression.

As far as I know, this is not a valid definition for javascript 
statements. It is true for control statements like "return" or "break" 
but not for arithmetic statements.

Consider,
	<script>
		a=3
		+4
		alert(a);
	</script>

It is legal and will result in an alert with the value 7. In general, a 
new line only marks the end of a statement if the next token cannot be 
part of the previous pattern.


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/146 - Release Date: 10/21/2005



-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/146 - Release Date: 10/21/2005

From luisl at scarab.co.za  Wed Oct 26 13:18:06 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Wed Oct 26 13:18:35 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
In-Reply-To: <000101c5da5a$fef55550$6902a8c0@hercules>
Message-ID: <MPEMLILMNEOKCPPBGEMKAEJFCIAA.luisl@scarab.co.za>

Hi,

I vote for option 3 as it will have the least impact on client code and will
probably be reasonably efficient given the generational garbage collector. I
think it's probably better to spend effort on the run-time design for Antlr
v3 - which I'm very keen to help with BTW. Has work started on it? Please
let me know how I can help.

There is also a bug in the _saveIndex optimization which causes compile
errors in generated lexers. I'd be happy to contribute a patch if this
hasn't already been fixed.

Regards

Luis

-----Original Message-----
From: Micheal J [mailto:open.zone@virgin.net]
Sent: 26 October 2005 08:28 PM
To: ''antlr-interest' Interest'
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6


Hi,

For background info, pls see this thread:

http://www.antlr.org/pipermail/antlr-interest/2005-April/011838.html


The options currently being considered are (in order of attractiveness):

1. Rewrite ASTPair as a struct.
   Pros: no heap allocations, no GC impact/churn
   Cons: breaking changes to ASTFactory methods (and client code):
         - makeASTRoot() and
         - addASTChild()

2. Provide a per-instance object pool
   Pros: fixes multi-threading issue, reduces ASTPair allocations
   Cons: future GCs may be more efficient, GC impact

3. Return to the pre-2.7.5 scheme and allow the GC to clean up.
   Pros: fixes multi-threading issue, leverages GC improvements
   Cons: more ASTPair allocations, GC impact

Any opinions?.

Cheers,

Micheal
ANTLR/C#




From tech at swingkid.fsnet.co.uk  Wed Oct 26 13:29:43 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Wed Oct 26 13:29:22 2005
Subject: [antlr-interest] Checking for expression end in Javascript parser
In-Reply-To: <435FCAD1.1040609@shmuelhome.mine.nu>
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
	<435FCAD1.1040609@shmuelhome.mine.nu>
Message-ID: <435FE737.8090007@swingkid.fsnet.co.uk>

Absolutely, poor wording on my part. I guess I should have said 
'Javascript statements end at either a semi colon, or the earliest new 
line that makes a valid statement.'

Given this, should

    a=3

count as a complete statement on it's own line? My parser won't treat is 
as such because the expressions are nested, so I hope not!

Mark

shmuel siegel wrote:

> Tech wrote:
>
>> One aspect that is different is that Javascript expressions end 
>> either at a semi colon, or at the earliest new line that makes a 
>> valid expression.
>
>
> As far as I know, this is not a valid definition for javascript 
> statements. It is true for control statements like "return" or "break" 
> but not for arithmetic statements.
>
> Consider,
>     <script>
>         a=3
>         +4
>         alert(a);
>     </script>
>
> It is legal and will result in an alert with the value 7. In general, 
> a new line only marks the end of a statement if the next token cannot 
> be part of the previous pattern.
>
>

From tech at swingkid.fsnet.co.uk  Wed Oct 26 13:38:00 2005
From: tech at swingkid.fsnet.co.uk (Tech)
Date: Wed Oct 26 13:37:35 2005
Subject: [antlr-interest] Re: Checking for expression end in Javascript
	parser
In-Reply-To: <3047775D-CB95-48AA-8555-AB780C9C058C@cs.usfca.edu>
References: <435DDAB9.2040308@swingkid.fsnet.co.uk>
	<djlun6$v7g$1@sea.gmane.org>
	<435F3F5C.4090604@swingkid.fsnet.co.uk>
	<3047775D-CB95-48AA-8555-AB780C9C058C@cs.usfca.edu>
Message-ID: <435FE928.20406@swingkid.fsnet.co.uk>

Hi Terence,

I wanted to say 'if the next character is on the same line it has to be 
a semi colon, otherwise the semi colon is optional.' I'm not sure if I 
need the 'semi colon is optional' bit, because we could always treat it 
as a separate (empty) statement, but am I right in thinking I have to 
put something as an alternative for the semantic predicate to make sense?

Mark

Terence Parr wrote:

>
> On Oct 26, 2005, at 1:33 AM, Tech wrote:
>
>> I have overriden consume() in my parser to store the line number of  
>> the last token consumed:
>>
>>    int currentLine = 0;
>>
>>    public override void consume()
>>        {
>>            currentLine = LA(1);
>>            base.consume();
>>        }
>>
>> I have then defined semi:
>>
>>    semi
>>        :    {currentLine == LT(1).getLine()}? SEMI
>>        |    (SEMI)?
>>        ;
>>
>> This seems to work, but gives me lots of disambiguation warnings.  
>> What do you think?
>
>
> Hi Mark,
>
> remove the (...)? around the SEMI as semi is optional...probably not  
> waht you want.
> Ter
>
>
>

From mail at martin-probst.com  Wed Oct 26 14:54:48 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Oct 26 14:54:53 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
In-Reply-To: <000101c5da5a$fef55550$6902a8c0@hercules>
References: <000101c5da5a$fef55550$6902a8c0@hercules>
Message-ID: <1130363688.9728.3.camel@localhost.localdomain>

Hi,

> For background info, pls see this thread:
>  
> http://www.antlr.org/pipermail/antlr-interest/2005-April/011838.html

Has anyone actually tested how big the performance impact is? This is of
course application dependant, but in my experience doing such
optimisations without a good benchmark is not a good idea, especially in
managed code (in my case: Java code, but probably applies to .NET, too).

Martin

From open.zone at virgin.net  Wed Oct 26 16:05:30 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Oct 26 15:50:11 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
In-Reply-To: <MPEMLILMNEOKCPPBGEMKAEJFCIAA.luisl@scarab.co.za>
Message-ID: <000401c5da81$c3f225b0$6902a8c0@hercules>

> Hi,
> 
> I vote for option 3 as it will have the least impact on 
> client code and will probably be reasonably efficient given 
> the generational garbage collector.

Noted. I describe the reasons for moving away from option 3 in 2.7.5 in
another message in this thread.

> I think it's probably 
> better to spend effort on the run-time design for Antlr v3 - 
> which I'm very keen to help with BTW. Has work started on it? 
> Please let me know how I can help.

;-)

Will do.

> There is also a bug in the _saveIndex optimization which 
> causes compile errors in generated lexers. I'd be happy to 
> contribute a patch if this hasn't already been fixed.

Details of the bug?.


Cheers,

Micheal
ANTLR/C#




From open.zone at virgin.net  Wed Oct 26 16:05:30 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Oct 26 15:50:16 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
In-Reply-To: <1130363688.9728.3.camel@localhost.localdomain>
Message-ID: <000501c5da81$c4b2b690$6902a8c0@hercules>

> Has anyone actually tested how big the performance impact is? 
> This is of course application dependant, but in my experience 
> doing such optimisations without a good benchmark is not a 
> good idea, especially in managed code (in my case: Java code, 
> but probably applies to .NET, too).

Yes. I did with a couple of in-production grammars with input files
typically over 3MB in size. Hundreds of thousands of the damned things were
alloc'ed even though the longest only call-chain was only a few thousands.
With larger files, that alloc'ed resource and the resulting GC churn was an
issue. That is what led to the original change to use an object pool in
2.7.5. 

Jim Crozman did as well. He reports about this in the thread.

Option 1 seems to have it all IMO.

Cheers,

Micheal

From jim.crafton at gmail.com  Wed Oct 26 16:53:12 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Wed Oct 26 16:53:20 2005
Subject: [antlr-interest] Changes for stream offset determination
Message-ID: <e88138500510261653w6b016f6oc687d5bf3f89f37c@mail.gmail.com>

Here are the changes I made to allow a custom AST node to determine
the current offset of the lexer.

In CharScanner.hpp, class antlr::CharScanner

protected:
unsigned int offset_;

public:
  unsigned int offset() const {
    return offset_;
  }


	virtual void consume()
	{
		if (inputState->guessing == 0)
		{
			int c = LA(1);
			if (caseSensitive)
			{
				append(c);
			}
			else
			{
				// use input.LA(), not LA(), to get original case
				// CharScanner.LA() would toLower it.
				append(inputState->getInput().LA(1));
			}
//*************************************************************
			offset_ ++;
//*************************************************************

			// RK: in a sense I don't like this automatic handling.
			if (c == '\t')
				tab();
			else
				inputState->column++;
		}
		inputState->getInput().consume();
	}

I increment the offset_ member in the consume() method.


In CharScanner.cpp

CharScanner::CharScanner(InputBuffer& cb, bool case_sensitive )
	: saveConsumedInput(true) //, caseSensitiveLiterals(true)
	, offset_(0) <<<<<<<<<<<<-------I added initializer for offset to 0
	, caseSensitive(case_sensitive)
	, literals(CharScannerLiteralsLess(this))
	, inputState(new LexerInputState(cb))
	, commitToPath(false)
	, tabsize(8)
	, traceDepth(0)
{
	setTokenObjectFactory(&CommonToken::factory);
}

CharScanner::CharScanner(InputBuffer* cb, bool case_sensitive )
	: saveConsumedInput(true) //, caseSensitiveLiterals(true)
	, offset_(0) <<<<<<<<<<<<-------I added initializer for offset to 0
	, caseSensitive(case_sensitive)
	, literals(CharScannerLiteralsLess(this))
	, inputState(new LexerInputState(cb))
	, commitToPath(false)
	, tabsize(8)
	, traceDepth(0)
{
	setTokenObjectFactory(&CommonToken::factory);
}

CharScanner::CharScanner( const LexerSharedInputState& state, bool
case_sensitive )
	: saveConsumedInput(true) //, caseSensitiveLiterals(true)
	, offset_(0) <<<<<<<<<<<<-------I added initializer for offset to 0
	, caseSensitive(case_sensitive)
	, literals(CharScannerLiteralsLess(this))
	, inputState(state)
	, commitToPath(false)
	, tabsize(8)
	, traceDepth(0)
{
	setTokenObjectFactory(&CommonToken::factory);
}


In Token.hpp, class antlr::Token

public:
virtual void setOffset( unsigned int offset ){

}

virtual unsigned int getOffset() const{
   return 0;
}


In CommonToken.hpp class antlr::CommonToken

protected:
unsigned int offset_;

public:
virtual void setOffset( unsigned int offset ) {
	offset_ = offset;
}

virtual unsigned int getOffset() const {
	return offset_;
}



In CommonToken.cpp

CommonToken::CommonToken() : Token(), line(1), col(1), offset_(0), text("")
{}

CommonToken::CommonToken(int t, const ANTLR_USE_NAMESPACE(std)string& txt)
: Token(t)
, line(1)
, col(1)
,offset_(0)
, text(txt)
{}

CommonToken::CommonToken(const ANTLR_USE_NAMESPACE(std)string& s)
: Token()
, line(1)
, col(1)
, offset_(0)
, text(s)
{}


Note that the offset_ member is initialized to 0.

Then in my custom AST class I do something like this:


class CppASTNode : public CommonAST {
public:

	CppASTNode(): line_(0), column_(0), offset_(0) {}


	CppASTNode( antlr::RefToken t ): line_(0), column_(0), offset_(0) {
		CommonAST::setType(t->getType() );
		CommonAST::setText(t->getText() );

		line_ = t->getLine();
		column_ = t->getColumn();
		offset_ = t->getOffset() - t->getText().size();
	}

	void initialize(int t, const std::string& txt) {
		CommonAST::setType(t);
		CommonAST::setText(txt);

		line_ = 0; // to be noticed !
		column_ = 0;
    }

	void initialize( RefCppASTNode t ) {
        CommonAST::setType(t->getType() );
		CommonAST::setText(t->getText() );

		line_ = t->line_;
		column_ = t->column_;

		offset_ = t->offset_;
    }

	void initialize( RefAST t ) {
        CommonAST::initialize(t);
    }

	void initialize( antlr::RefToken t )  {
        CommonAST::initialize(t);

		line_ = t->getLine();
		column_ = t->getColumn();
		offset_ = t->getOffset() - t->getText().size();
    }

	void setText(const std::string& txt) {
		CommonAST::setText(txt);
	}

	void setType(int type) {
		CommonAST::setType(type);
	}

	static antlr::RefAST factory( void ) {		
		antlr::RefAST ret =
			static_cast<antlr::RefAST>(RefCppASTNode(new CppASTNode()));	
		
		return ret;
	}

	int getLineNumber() const {
		return line_;
	}

	int getColumnNumber() const {
		return column_;
	}

	unsigned int getOffset() const {
		return offset_;
	}
protected:
	int line_;
	int column_;
	unsigned int offset_;
};


Cheers, and hope this proves useful to others.

Jim
From Sebastian.Kaliszewski at softax.com.pl  Thu Oct 27 00:32:57 2005
From: Sebastian.Kaliszewski at softax.com.pl (Sebastian Kaliszewski)
Date: Thu Oct 27 00:22:48 2005
Subject: [antlr-interest] Re: thank you sir
In-Reply-To: <873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>
References: <Pine.LNX.4.61.0510232251120.6884@mars.cse.iitb.ac.in>
	<873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>
Message-ID: <436082A9.4050208@softax.com.pl>

Terence Parr wrote:
> C++ is C so I'm not sure you have a problem with anything except the  io 
> libraries and such; still the Clib should still work with C++ right?

Well, this is not true. There are many C constructs which are illegal in 
C++, and some constructs have different meaning (i.e. my_type my_fun() vs 
my_type my_fun(void)).

rgds
Sebastian Kaliszewski
From gt54-antlr at cyconix.com  Thu Oct 27 02:20:10 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Oct 27 02:20:17 2005
Subject: [antlr-interest] Re: thank you sir
In-Reply-To: <436082A9.4050208@softax.com.pl>
References: <Pine.LNX.4.61.0510232251120.6884@mars.cse.iitb.ac.in>	<873B2D00-FC78-49EB-9820-CA28EA4BCF9F@cs.usfca.edu>
	<436082A9.4050208@softax.com.pl>
Message-ID: <43609BCA.1090407@cyconix.com>

Sebastian Kaliszewski wrote:
> Terence Parr wrote:
> 
>> C++ is C so I'm not sure you have a problem with anything except the  
>> io libraries and such; still the Clib should still work with C++ right?
> 
> 
> Well, this is not true. There are many C constructs which are illegal in 
> C++, and some constructs have different meaning (i.e. my_type my_fun() 
> vs my_type my_fun(void)).

As Stroustrup says in Appx B of his book, "with minor exceptions, C++ is 
a superset of [C89] C... Well-written C programs tend to be C++ programs 
as well". Sure, you can write bad C that won't compile as C++, but you 
can't fix bad C programs automatically, which appears to be what the OP 
wanted.

Anyway, it's not at all obvious what the OP wanted to do. g++ is just a 
driver for GCC: it assumes that the default language is C++, and that 
you need to link against the C++ libraries. It has no problem compiling 
C programs, even bad ones, and certainly ones which aren't valid C++.

Paul

From ewbank at gmail.com  Thu Oct 27 02:26:58 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Oct 27 02:27:00 2005
Subject: [antlr-interest] Help to make an iteration (somehing go wrong
	with previous)
In-Reply-To: <314452c814.2c81431445@iol.pt>
References: <314452c814.2c81431445@iol.pt>
Message-ID: <dd3a065f0510270226x3def51dco3c305831222298de@mail.gmail.com>

Let me try again with more explanation...

[01] eval:
[02]  ... ... ... | while_stmt | ... ... ...
[03] ;
[04]
[05] while_stmt
[06] :
[07] 	#( WHILE e:expr s:stmt )
[08] 	{
[09] 		while (eval(#e) == true)
[10] 		{
[11] 			eval(#s);
[12] 		}
[13] 	}
[14] ;

Line [07] matches the assumed tree for a while node.  When this matches, the
action (lines [08-13]) is executed.  The while-statement at [09] is executed in
the native language, which means that the "eval(#s)" at [11] will be executed
each time that the condition in the while at [09] evaluates to "true"

Note that [07] could probably be rewritten as follows, because it's likely
wasteful to traverse those trees to recognize them:

	[07] 	#( WHILE e:. s:. )

So, yes, stmt is another tree. ANTLR allows you to walk (and capture) the expr
and stmt trees once; after that, you must walk (and evaluate) each tree
multiple times.

Hope this is a bit more clear in what I was saying,

- Bryan

On 10/26/05, gil_loureiro@iol.pt <gil_loureiro@iol.pt> wrote:
> But the problem is stmt is another tree ... how can I walk this tree
> (with eval(#s)) to run the contained set of statements multiple times?
From luisl at scarab.co.za  Thu Oct 27 03:14:15 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Thu Oct 27 03:17:58 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
In-Reply-To: <000401c5da81$c3f225b0$6902a8c0@hercules>
Message-ID: <20051027101752.AC2746C5E0@jhb-relay01.worldonline.co.za>

Hi,

I haven't experienced the problem you described in the other message. I
guess a struct makes more sense at this point then.

The _saveIndex optimization only declares _saveIndex when needed. 

The trouble is that the C# standard does not allow local variable
redeclarations in nested blocks (even if the definition of local variable in
the outer block occurs after the declaration in the nested block): 

"It is an error for two members of a local variable declaration space to
have the same name. It is an error for the local variable declaration space
of a block and the local variable declaration space of a nested block to
contain elements with the same name. [Note: Thus, within a nested block it
is not possible to declare a local variable or constant with the same name
as a local variable or constant in an enclosing block. It is possible for
two nested blocks to contain elements
with the same name as long as neither block contains the other. end note]"

The code generator currently generates code like this:

if ()
{
	{
		switch
		{
			case
				int _saveIndex=0;
		}	
	}
	int _saveIndex=0 // Error! It has already been declared in the
switch!
}

So _saveIndex should only be declared once in the outer block and then used
in the inner block. I don't think it's possible to predict in the code
generator that _saveIndex will be used in a nested block? Personally I'm not
sure this is worth all the effort. Perhaps we should just stick to the way
the Java generator does it - once at the beginning of the method? The
optimization has the side-effect that many _saveIndex variables are declared
that take up more memory than just declaring it once at the beginning.

Regards

Luis



From nadesai at cse.iitb.ac.in  Thu Oct 27 03:47:13 2005
From: nadesai at cse.iitb.ac.in (Desai Nishitkumar Ashokkumar)
Date: Thu Oct 27 03:48:50 2005
Subject: [antlr-interest] Re: antlr-interest Digest, Vol 11, Issue 48
In-Reply-To: <20051027092707.5BF64DCDF9@www.antlr.org>
References: <20051027092707.5BF64DCDF9@www.antlr.org>
Message-ID: <Pine.LNX.4.61.0510271612380.25494@mars.cse.iitb.ac.in>

On Thu, 27 Oct 2005 antlr-interest-request@antlr.org wrote:

> Send antlr-interest mailing list submissions to
> 	antlr-interest@antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request@antlr.org
>
> You can reach the person managing the list at
> 	antlr-interest-owner@antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>   1. RE: ASTPair handling in C# runtime for 2.7.6 (Luis Leal)
>   2. Re: Checking for expression end in Javascript parser (Tech)
>   3. Re: Re: Checking for expression end in Javascript	parser (Tech)
>   4. Re: ASTPair handling in C# runtime for 2.7.6 (Martin Probst)
>   5. RE: ASTPair handling in C# runtime for 2.7.6 (Micheal J)
>   6. RE: ASTPair handling in C# runtime for 2.7.6 (Micheal J)
>   7. Changes for stream offset determination (Jim Crafton)
>   8. Re: Re: thank you sir (Sebastian Kaliszewski)
>   9. Re: Re: thank you sir (Paul Johnson)
>  10. Re: Help to make an iteration (somehing go wrong	with
>      previous) (Bryan Ewbank)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Wed, 26 Oct 2005 22:18:06 +0200
> From: "Luis Leal" <luisl@scarab.co.za>
> Subject: RE: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
> To: "Micheal J" <open.zone@virgin.net>,	"''antlr-interest' Interest'"
> 	<antlr-interest@antlr.org>
> Message-ID: <MPEMLILMNEOKCPPBGEMKAEJFCIAA.luisl@scarab.co.za>
> Content-Type: text/plain;	charset="us-ascii"
>
> Hi,
>
> I vote for option 3 as it will have the least impact on client code and will
> probably be reasonably efficient given the generational garbage collector. I
> think it's probably better to spend effort on the run-time design for Antlr
> v3 - which I'm very keen to help with BTW. Has work started on it? Please
> let me know how I can help.
>
> There is also a bug in the _saveIndex optimization which causes compile
> errors in generated lexers. I'd be happy to contribute a patch if this
> hasn't already been fixed.
>
> Regards
>
> Luis
>
> -----Original Message-----
> From: Micheal J [mailto:open.zone@virgin.net]
> Sent: 26 October 2005 08:28 PM
> To: ''antlr-interest' Interest'
> Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
>
>
> Hi,
>
> For background info, pls see this thread:
>
> http://www.antlr.org/pipermail/antlr-interest/2005-April/011838.html
>
>
> The options currently being considered are (in order of attractiveness):
>
> 1. Rewrite ASTPair as a struct.
>   Pros: no heap allocations, no GC impact/churn
>   Cons: breaking changes to ASTFactory methods (and client code):
>         - makeASTRoot() and
>         - addASTChild()
>
> 2. Provide a per-instance object pool
>   Pros: fixes multi-threading issue, reduces ASTPair allocations
>   Cons: future GCs may be more efficient, GC impact
>
> 3. Return to the pre-2.7.5 scheme and allow the GC to clean up.
>   Pros: fixes multi-threading issue, leverages GC improvements
>   Cons: more ASTPair allocations, GC impact
>
> Any opinions?.
>
> Cheers,
>
> Micheal
> ANTLR/C#
>
>
>
>
>
>
> ------------------------------
>
> Message: 2
> Date: Wed, 26 Oct 2005 21:29:43 +0100
> From: Tech <tech@swingkid.fsnet.co.uk>
> Subject: Re: [antlr-interest] Checking for expression end in
> 	Javascript parser
> To: shmuel siegel <antlr@shmuelhome.mine.nu>
> Cc: antlr-interest@antlr.org
> Message-ID: <435FE737.8090007@swingkid.fsnet.co.uk>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Absolutely, poor wording on my part. I guess I should have said
> 'Javascript statements end at either a semi colon, or the earliest new
> line that makes a valid statement.'
>
> Given this, should
>
>    a=3
>
> count as a complete statement on it's own line? My parser won't treat is
> as such because the expressions are nested, so I hope not!
>
> Mark
>
> shmuel siegel wrote:
>
>> Tech wrote:
>>
>>> One aspect that is different is that Javascript expressions end
>>> either at a semi colon, or at the earliest new line that makes a
>>> valid expression.
>>
>>
>> As far as I know, this is not a valid definition for javascript
>> statements. It is true for control statements like "return" or "break"
>> but not for arithmetic statements.
>>
>> Consider,
>>     <script>
>>         a=3
>>         +4
>>         alert(a);
>>     </script>
>>
>> It is legal and will result in an alert with the value 7. In general,
>> a new line only marks the end of a statement if the next token cannot
>> be part of the previous pattern.
>>
>>
>
>
>
> ------------------------------
>
> Message: 3
> Date: Wed, 26 Oct 2005 21:38:00 +0100
> From: Tech <tech@swingkid.fsnet.co.uk>
> Subject: Re: [antlr-interest] Re: Checking for expression end in
> 	Javascript	parser
> To: Terence Parr <parrt@cs.usfca.edu>
> Cc: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID: <435FE928.20406@swingkid.fsnet.co.uk>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Hi Terence,
>
> I wanted to say 'if the next character is on the same line it has to be
> a semi colon, otherwise the semi colon is optional.' I'm not sure if I
> need the 'semi colon is optional' bit, because we could always treat it
> as a separate (empty) statement, but am I right in thinking I have to
> put something as an alternative for the semantic predicate to make sense?
>
> Mark
>
> Terence Parr wrote:
>
>>
>> On Oct 26, 2005, at 1:33 AM, Tech wrote:
>>
>>> I have overriden consume() in my parser to store the line number of
>>> the last token consumed:
>>>
>>>    int currentLine = 0;
>>>
>>>    public override void consume()
>>>        {
>>>            currentLine = LA(1);
>>>            base.consume();
>>>        }
>>>
>>> I have then defined semi:
>>>
>>>    semi
>>>        :    {currentLine == LT(1).getLine()}? SEMI
>>>        |    (SEMI)?
>>>        ;
>>>
>>> This seems to work, but gives me lots of disambiguation warnings.
>>> What do you think?
>>
>>
>> Hi Mark,
>>
>> remove the (...)? around the SEMI as semi is optional...probably not
>> waht you want.
>> Ter
>>
>>
>>
>
>
>
> ------------------------------
>
> Message: 4
> Date: Wed, 26 Oct 2005 23:54:48 +0200
> From: Martin Probst <mail@martin-probst.com>
> Subject: Re: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
> To: antlr-interest@antlr.org
> Message-ID: <1130363688.9728.3.camel@localhost.localdomain>
> Content-Type: text/plain
>
> Hi,
>
>> For background info, pls see this thread:
>>
>> http://www.antlr.org/pipermail/antlr-interest/2005-April/011838.html
>
> Has anyone actually tested how big the performance impact is? This is of
> course application dependant, but in my experience doing such
> optimisations without a good benchmark is not a good idea, especially in
> managed code (in my case: Java code, but probably applies to .NET, too).
>
> Martin
>
>
>
> ------------------------------
>
> Message: 5
> Date: Thu, 27 Oct 2005 00:05:30 +0100
> From: "Micheal J" <open.zone@virgin.net>
> Subject: RE: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
> To: "''antlr-interest' Interest'" <antlr-interest@antlr.org>
> Message-ID: <000401c5da81$c3f225b0$6902a8c0@hercules>
> Content-Type: text/plain;	charset="us-ascii"
>
>> Hi,
>>
>> I vote for option 3 as it will have the least impact on
>> client code and will probably be reasonably efficient given
>> the generational garbage collector.
>
> Noted. I describe the reasons for moving away from option 3 in 2.7.5 in
> another message in this thread.
>
>> I think it's probably
>> better to spend effort on the run-time design for Antlr v3 -
>> which I'm very keen to help with BTW. Has work started on it?
>> Please let me know how I can help.
>
> ;-)
>
> Will do.
>
>> There is also a bug in the _saveIndex optimization which
>> causes compile errors in generated lexers. I'd be happy to
>> contribute a patch if this hasn't already been fixed.
>
> Details of the bug?.
>
>
> Cheers,
>
> Micheal
> ANTLR/C#
>
>
>
>
>
>
> ------------------------------
>
> Message: 6
> Date: Thu, 27 Oct 2005 00:05:30 +0100
> From: "Micheal J" <open.zone@virgin.net>
> Subject: RE: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
> To: <antlr-interest@antlr.org>
> Message-ID: <000501c5da81$c4b2b690$6902a8c0@hercules>
> Content-Type: text/plain;	charset="us-ascii"
>
>> Has anyone actually tested how big the performance impact is?
>> This is of course application dependant, but in my experience
>> doing such optimisations without a good benchmark is not a
>> good idea, especially in managed code (in my case: Java code,
>> but probably applies to .NET, too).
>
> Yes. I did with a couple of in-production grammars with input files
> typically over 3MB in size. Hundreds of thousands of the damned things were
> alloc'ed even though the longest only call-chain was only a few thousands.
> With larger files, that alloc'ed resource and the resulting GC churn was an
> issue. That is what led to the original change to use an object pool in
> 2.7.5.
>
> Jim Crozman did as well. He reports about this in the thread.
>
> Option 1 seems to have it all IMO.
>
> Cheers,
>
> Micheal
>
>
>
> ------------------------------
>
> Message: 7
> Date: Wed, 26 Oct 2005 19:53:12 -0400
> From: Jim Crafton <jim.crafton@gmail.com>
> Subject: [antlr-interest] Changes for stream offset determination
> To: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID:
> 	<e88138500510261653w6b016f6oc687d5bf3f89f37c@mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Here are the changes I made to allow a custom AST node to determine
> the current offset of the lexer.
>
> In CharScanner.hpp, class antlr::CharScanner
>
> protected:
> unsigned int offset_;
>
> public:
>  unsigned int offset() const {
>    return offset_;
>  }
>
>
> 	virtual void consume()
> 	{
> 		if (inputState->guessing == 0)
> 		{
> 			int c = LA(1);
> 			if (caseSensitive)
> 			{
> 				append(c);
> 			}
> 			else
> 			{
> 				// use input.LA(), not LA(), to get original case
> 				// CharScanner.LA() would toLower it.
> 				append(inputState->getInput().LA(1));
> 			}
> //*************************************************************
> 			offset_ ++;
> //*************************************************************
>
> 			// RK: in a sense I don't like this automatic handling.
> 			if (c == '\t')
> 				tab();
> 			else
> 				inputState->column++;
> 		}
> 		inputState->getInput().consume();
> 	}
>
> I increment the offset_ member in the consume() method.
>
>
> In CharScanner.cpp
>
> CharScanner::CharScanner(InputBuffer& cb, bool case_sensitive )
> 	: saveConsumedInput(true) //, caseSensitiveLiterals(true)
> 	, offset_(0) <<<<<<<<<<<<-------I added initializer for offset to 0
> 	, caseSensitive(case_sensitive)
> 	, literals(CharScannerLiteralsLess(this))
> 	, inputState(new LexerInputState(cb))
> 	, commitToPath(false)
> 	, tabsize(8)
> 	, traceDepth(0)
> {
> 	setTokenObjectFactory(&CommonToken::factory);
> }
>
> CharScanner::CharScanner(InputBuffer* cb, bool case_sensitive )
> 	: saveConsumedInput(true) //, caseSensitiveLiterals(true)
> 	, offset_(0) <<<<<<<<<<<<-------I added initializer for offset to 0
> 	, caseSensitive(case_sensitive)
> 	, literals(CharScannerLiteralsLess(this))
> 	, inputState(new LexerInputState(cb))
> 	, commitToPath(false)
> 	, tabsize(8)
> 	, traceDepth(0)
> {
> 	setTokenObjectFactory(&CommonToken::factory);
> }
>
> CharScanner::CharScanner( const LexerSharedInputState& state, bool
> case_sensitive )
> 	: saveConsumedInput(true) //, caseSensitiveLiterals(true)
> 	, offset_(0) <<<<<<<<<<<<-------I added initializer for offset to 0
> 	, caseSensitive(case_sensitive)
> 	, literals(CharScannerLiteralsLess(this))
> 	, inputState(state)
> 	, commitToPath(false)
> 	, tabsize(8)
> 	, traceDepth(0)
> {
> 	setTokenObjectFactory(&CommonToken::factory);
> }
>
>
> In Token.hpp, class antlr::Token
>
> public:
> virtual void setOffset( unsigned int offset ){
>
> }
>
> virtual unsigned int getOffset() const{
>   return 0;
> }
>
>
> In CommonToken.hpp class antlr::CommonToken
>
> protected:
> unsigned int offset_;
>
> public:
> virtual void setOffset( unsigned int offset ) {
> 	offset_ = offset;
> }
>
> virtual unsigned int getOffset() const {
> 	return offset_;
> }
>
>
>
> In CommonToken.cpp
>
> CommonToken::CommonToken() : Token(), line(1), col(1), offset_(0), text("")
> {}
>
> CommonToken::CommonToken(int t, const ANTLR_USE_NAMESPACE(std)string& txt)
> : Token(t)
> , line(1)
> , col(1)
> ,offset_(0)
> , text(txt)
> {}
>
> CommonToken::CommonToken(const ANTLR_USE_NAMESPACE(std)string& s)
> : Token()
> , line(1)
> , col(1)
> , offset_(0)
> , text(s)
> {}
>
>
> Note that the offset_ member is initialized to 0.
>
> Then in my custom AST class I do something like this:
>
>
> class CppASTNode : public CommonAST {
> public:
>
> 	CppASTNode(): line_(0), column_(0), offset_(0) {}
>
>
> 	CppASTNode( antlr::RefToken t ): line_(0), column_(0), offset_(0) {
> 		CommonAST::setType(t->getType() );
> 		CommonAST::setText(t->getText() );
>
> 		line_ = t->getLine();
> 		column_ = t->getColumn();
> 		offset_ = t->getOffset() - t->getText().size();
> 	}
>
> 	void initialize(int t, const std::string& txt) {
> 		CommonAST::setType(t);
> 		CommonAST::setText(txt);
>
> 		line_ = 0; // to be noticed !
> 		column_ = 0;
>    }
>
> 	void initialize( RefCppASTNode t ) {
>        CommonAST::setType(t->getType() );
> 		CommonAST::setText(t->getText() );
>
> 		line_ = t->line_;
> 		column_ = t->column_;
>
> 		offset_ = t->offset_;
>    }
>
> 	void initialize( RefAST t ) {
>        CommonAST::initialize(t);
>    }
>
> 	void initialize( antlr::RefToken t )  {
>        CommonAST::initialize(t);
>
> 		line_ = t->getLine();
> 		column_ = t->getColumn();
> 		offset_ = t->getOffset() - t->getText().size();
>    }
>
> 	void setText(const std::string& txt) {
> 		CommonAST::setText(txt);
> 	}
>
> 	void setType(int type) {
> 		CommonAST::setType(type);
> 	}
>
> 	static antlr::RefAST factory( void ) {
> 		antlr::RefAST ret =
> 			static_cast<antlr::RefAST>(RefCppASTNode(new CppASTNode()));
>
> 		return ret;
> 	}
>
> 	int getLineNumber() const {
> 		return line_;
> 	}
>
> 	int getColumnNumber() const {
> 		return column_;
> 	}
>
> 	unsigned int getOffset() const {
> 		return offset_;
> 	}
> protected:
> 	int line_;
> 	int column_;
> 	unsigned int offset_;
> };
>
>
> Cheers, and hope this proves useful to others.
>
> Jim
>
>
> ------------------------------
>
> Message: 8
> Date: Thu, 27 Oct 2005 09:32:57 +0200
> From: Sebastian Kaliszewski <Sebastian.Kaliszewski@softax.com.pl>
> Subject: Re: [antlr-interest] Re: thank you sir
> To: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID: <436082A9.4050208@softax.com.pl>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Terence Parr wrote:
>> C++ is C so I'm not sure you have a problem with anything except the  io
>> libraries and such; still the Clib should still work with C++ right?
>
> Well, this is not true. There are many C constructs which are illegal in
> C++, and some constructs have different meaning (i.e. my_type my_fun() vs
> my_type my_fun(void)).
>
> rgds
> Sebastian Kaliszewski
>
>
> ------------------------------
>
> Message: 9
> Date: Thu, 27 Oct 2005 10:20:10 +0100
> From: Paul Johnson <gt54-antlr@cyconix.com>
> Subject: Re: [antlr-interest] Re: thank you sir
> To: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID: <43609BCA.1090407@cyconix.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Sebastian Kaliszewski wrote:
>> Terence Parr wrote:
>>
>>> C++ is C so I'm not sure you have a problem with anything except the
>>> io libraries and such; still the Clib should still work with C++ right?
>>
>>
>> Well, this is not true. There are many C constructs which are illegal in
>> C++, and some constructs have different meaning (i.e. my_type my_fun()
>> vs my_type my_fun(void)).
>
> As Stroustrup says in Appx B of his book, "with minor exceptions, C++ is
> a superset of [C89] C... Well-written C programs tend to be C++ programs
> as well". Sure, you can write bad C that won't compile as C++, but you
> can't fix bad C programs automatically, which appears to be what the OP
> wanted.
>
> Anyway, it's not at all obvious what the OP wanted to do. g++ is just a
> driver for GCC: it assumes that the default language is C++, and that
> you need to link against the C++ libraries. It has no problem compiling
> C programs, even bad ones, and certainly ones which aren't valid C++.

  g++ has problem in compiling many c programs. As I previously said in c 
typecasting is not needed explicitly where as in c++ it is needed. 
there are many other types of statments for which g++ gives error but gcc 
compiles without any error. Btw, whats the OP ?

  thanks for ur reply.
>
> Paul
>
>
>
> ------------------------------
>
> Message: 10
> Date: Thu, 27 Oct 2005 05:26:58 -0400
> From: Bryan Ewbank <ewbank@gmail.com>
> Subject: Re: [antlr-interest] Help to make an iteration (somehing go
> 	wrong	with previous)
> To: ANTLR Interest <antlr-interest@antlr.org>
> Message-ID:
> 	<dd3a065f0510270226x3def51dco3c305831222298de@mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Let me try again with more explanation...
>
> [01] eval:
> [02]  ... ... ... | while_stmt | ... ... ...
> [03] ;
> [04]
> [05] while_stmt
> [06] :
> [07] 	#( WHILE e:expr s:stmt )
> [08] 	{
> [09] 		while (eval(#e) == true)
> [10] 		{
> [11] 			eval(#s);
> [12] 		}
> [13] 	}
> [14] ;
>
> Line [07] matches the assumed tree for a while node.  When this matches, the
> action (lines [08-13]) is executed.  The while-statement at [09] is executed in
> the native language, which means that the "eval(#s)" at [11] will be executed
> each time that the condition in the while at [09] evaluates to "true"
>
> Note that [07] could probably be rewritten as follows, because it's likely
> wasteful to traverse those trees to recognize them:
>
> 	[07] 	#( WHILE e:. s:. )
>
> So, yes, stmt is another tree. ANTLR allows you to walk (and capture) the expr
> and stmt trees once; after that, you must walk (and evaluate) each tree
> multiple times.
>
> Hope this is a bit more clear in what I was saying,
>
> - Bryan
>
> On 10/26/05, gil_loureiro@iol.pt <gil_loureiro@iol.pt> wrote:
>> But the problem is stmt is another tree ... how can I walk this tree
>> (with eval(#s)) to run the contained set of statements multiple times?
>
>
> ------------------------------
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest@antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
>
>
> End of antlr-interest Digest, Vol 11, Issue 48
> **********************************************
>

-- 
Nishit Desai
M.Tech II year 
Computer Science & Engg.
IIT Bombay
From henryb at ntlworld.com  Thu Oct 27 06:29:14 2005
From: henryb at ntlworld.com (Henry Butowsky)
Date: Thu Oct 27 06:00:46 2005
Subject: [antlr-interest] C++ Comments
Message-ID: <4360D62A.7020008@ntlworld.com>

Hi Guys I'm using the following rule in my Lexer to skip C++ style comments

CPP_COMMENT: ("//" (~'\n')* '\n')
	{ newline(); $setType(antlr::Token::SKIP); };

Upon executing this rule the lexer is "aborted" ( in 
CalcLexer::nextToken() )


when I use the string ("//" (~'\n')*) it deletes all text to the end-of 
file ? There is some problem with the '\n' -- Any ideas ?
Many thx Henry



From wirecracker at gmail.com  Thu Oct 27 06:49:50 2005
From: wirecracker at gmail.com (eric nelson)
Date: Thu Oct 27 06:49:52 2005
Subject: [antlr-interest] C++ Comments
In-Reply-To: <4360D62A.7020008@ntlworld.com>
References: <4360D62A.7020008@ntlworld.com>
Message-ID: <ca5eeb330510270649u4f32b0dbq4c25bb325c4a7784@mail.gmail.com>

I saw this in Todd King's C# grammar file ... its related ... mabye it'll
give you some ideas? Best, - e

// ***** A.1.1 LINE TERMINATORS *****
protected
NEW_LINE
	:	(	// carriage return character followed by possible line feed character	
			{ LA(2)=='\u000A' }? '\u000D' '\u000A'			
		|	'\u000D'			// line feed character							
		|	'\u000A'			// line feed character							
		|	'\u2028'			// line separator character
		|	'\u2029'			// paragraph separator character
		)
		{newline();}
	;
	
protected
NEW_LINE_CHARACTER
	:	('\u000D' | '\u000A' | '\u2028' | '\u2029')
	;
	
protected
NOT_NEW_LINE
	:	~( '\u000D' | '\u000A' | '\u2028' | '\u2029')
	;

....
....

SINGLE_LINE_COMMENT
	:	"//"
		(NOT_NEW_LINE)*
		(NEW_LINE)
		{_ttype = Token.SKIP;}
	;
	



 On 10/27/05, Henry Butowsky <henryb@ntlworld.com> wrote:
>
> Hi Guys I'm using the following rule in my Lexer to skip C++ style
> comments
>
> CPP_COMMENT: ("//" (~'\n')* '\n')
> { newline(); $setType(antlr::Token::SKIP); };
>
> Upon executing this rule the lexer is "aborted" ( in
> CalcLexer::nextToken() )
>
>
> when I use the string ("//" (~'\n')*) it deletes all text to the end-of
> file ? There is some problem with the '\n' -- Any ideas ?
> Many thx Henry
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051027/8301b02f/attachment-0001.html
From antlr at shmuelhome.mine.nu  Thu Oct 27 09:52:46 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu Oct 27 09:53:03 2005
Subject: [antlr-interest] Two questions about antlr3 syntax
Message-ID: <436105DE.5070401@shmuelhome.mine.nu>

1) In antlr2 I used EOT to indicate that the entire input file must 
match my syntax. What has replaced this in antlr3.
example
     document : contextSection (eventSection)? (handlerList)? 
(settingSection)* EOT!;

2) in antlr2 we used labels to create referenceable items. The read me 
notes say that we should use an equal sign instead of a colon but 
neither syntax works for me in antlr3. what do I need to do?

example:
    LINE_DIRECTIVE : a="#line" WS line=NUMBER WS (filename=STRING)?
        {
            $setType(Token.SKIP);
            setLine(Integer.parseInt(line.getText())-1);
            if(filename!=null)
            {
                currentFilename = filename.getText();
                setFilename(currentFilename);
            }
        }
        ;



-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/146 - Release Date: 10/21/2005

From jpljpl at gmx.de  Thu Oct 27 12:26:52 2005
From: jpljpl at gmx.de (Jan Ploski)
Date: Thu Oct 27 12:27:08 2005
Subject: [antlr-interest] Run-time construction of syntactic predicates
Message-ID: <12122157.1130441213016.JavaMail.jpl@remotejava>

Hello,

Is it possible to construct a syntactic predicate in ANTLR for
which the lookahead string is computed at run time from a token
previously read by the lexer?

Context: I need to extract strings from a Perl source file.
Such strings begin with a quote character after which some text
enclosed by a pair of arbitrary non-alphanumeric, non-whitespace
delimiters follows. For example

q/some string/
q!some string!
q#some string#

and even

q{some string}

are all legal strings.

I want to avoid putting rules for all possible pairs of delimiters
into my grammar.

My idea was to save the delimiter in an action after reading the
it first and use the saved value while looking for the second
delimiter. I can implement this easily by modifying the generated
lexer, but I am at loss when it comes to expressing this in the
grammar file (obviously, modifying generated code would be a last
resort).

I guess it would be something for the parser phase where I could
use a semantic predicate. However, moving the logic to parser would
be difficult because I also rely on the filter=IGNORE option in the
lexer (is there anything like that available at the parser level?)

I have already tried a semantic predicate in a lexer rule,
but this results in an exception being thrown rather than
the desired disambiguating effect.

Best regards -
Jan Ploski

From oliver.zeigermann at gmail.com  Thu Oct 27 12:59:53 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu Oct 27 13:00:00 2005
Subject: [antlr-interest] Two questions about antlr3 syntax
In-Reply-To: <436105DE.5070401@shmuelhome.mine.nu>
References: <436105DE.5070401@shmuelhome.mine.nu>
Message-ID: <9da4f4520510271259u1ec4508l@mail.gmail.com>

2005/10/27, shmuel siegel <antlr@shmuelhome.mine.nu>:
> 1) In antlr2 I used EOT to indicate that the entire input file must
> match my syntax. What has replaced this in antlr3.
> example
>      document : contextSection (eventSection)? (handlerList)?
> (settingSection)* EOT!;

AFAIK the EOT is no longer required. The only thing you will need is
at least one start rule. A start rule is called by no other rule.

> 2) in antlr2 we used labels to create referenceable items. The read me
> notes say that we should use an equal sign instead of a colon but
> neither syntax works for me in antlr3. what do I need to do?
>
> example:
>     LINE_DIRECTIVE : a="#line" WS line=NUMBER WS (filename=STRING)?
>         {
>             $setType(Token.SKIP);
>             setLine(Integer.parseInt(line.getText())-1);
>             if(filename!=null)
>             {
>                 currentFilename = filename.getText();
>                 setFilename(currentFilename);
>             }
>         }
>         ;

I suppose this is a lexer rule, isn't it? If so, there is no way to
make this work in ANTLR3ea5, but this will work in the next release.

HTH

Oliver
From parrt at cs.usfca.edu  Thu Oct 27 13:32:58 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Oct 27 13:33:04 2005
Subject: [antlr-interest] Two questions about antlr3 syntax
In-Reply-To: <9da4f4520510271259u1ec4508l@mail.gmail.com>
References: <436105DE.5070401@shmuelhome.mine.nu>
	<9da4f4520510271259u1ec4508l@mail.gmail.com>
Message-ID: <CE77376E-88B7-453F-8C03-2E0614A646B8@cs.usfca.edu>


On Oct 27, 2005, at 12:59 PM, Oliver Zeigermann wrote:
>>     LINE_DIRECTIVE : a="#line" WS line=NUMBER WS (filename=STRING)?
>>         {
>>             $setType(Token.SKIP);
>>             setLine(Integer.parseInt(line.getText())-1);
>>             if(filename!=null)
>>             {
>>                 currentFilename = filename.getText();
>>                 setFilename(currentFilename);
>>             }
>>         }
>>         ;
>>
>
> I suppose this is a lexer rule, isn't it? If so, there is no way to
> make this work in ANTLR3ea5, but this will work in the next release.

I hope to have the next antlr v3 out next week...

Ter
From antlr at shmuelhome.mine.nu  Thu Oct 27 15:34:02 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu Oct 27 15:33:41 2005
Subject: [antlr-interest] Two questions about antlr3 syntax
In-Reply-To: <9da4f4520510271259u1ec4508l@mail.gmail.com>
References: <436105DE.5070401@shmuelhome.mine.nu>
	<9da4f4520510271259u1ec4508l@mail.gmail.com>
Message-ID: <436155DA.5080205@shmuelhome.mine.nu>

Oliver Zeigermann wrote:

>2005/10/27, shmuel siegel 
>  
>
>>1) In antlr2 I used EOT to indicate that the entire input file must
>>match my syntax. What has replaced this in antlr3.
>>example
>>     document : contextSection (eventSection)? (handlerList)?
>>(settingSection)* EOT!;
>>    
>>
>
>AFAIK the EOT is no longer required. The only thing you will need is
>at least one start rule. A start rule is called by no other rule.
>
>  
>
The EOT was introduced into this rule to avoid having document match a 
contextSection followed by garbage. Are you saying that the mere fact 
that document is a top level rule will make it try to consume the entire 
input stream?


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.344 / Virus Database: 267.12.4/146 - Release Date: 10/21/2005

From ewbank at gmail.com  Thu Oct 27 18:44:18 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Oct 27 18:44:24 2005
Subject: [antlr-interest] Re: Performance Issues
In-Reply-To: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>
References: <dd3a065f0510211830r42062504t8de5c270b35df80c@mail.gmail.com>
Message-ID: <dd3a065f0510271844lfc9dddm4f99c4a0770db9a@mail.gmail.com>

All,


An update on my performance issues.  Thanks for all the responses!

We've found two measurable improvements (C++)

(1) Replace => predicates with {}? predicates.  THIS IS HUGE

We'd done quite a bit of this before, but we got much more aggressive.
 Specifically, replace something like this:
  ( asgn ) => foo
with this equivalent
  { is_asgn(_t) }? foo
and is_asgn is defined something like this (hope the parens are correct):

  is_asgn!
  returns [bool match_asgn=false]
  :
    ( { _t->getType() == STMT }?
      #( STMT
        ( { _t->getType() == EXPR }?
          #( EXPR
            ( { _t->getType() == ASGN }?
              ASGN
                { match_asgn=true; }
            | . )
          )
        | . )
      )
    | . )
  ;

I suspect there's a more concise way to do this, but this is what
seems to work.  Any suggestions?

(2) Drive to "buildAST=false"  MEASURABLE

We had several passes that mutate specific nodes IN PLACE.  This is
now done with a tree walker using buildAST=false, rather than with a
tree copier (buildAST=true).  By itself, for one pass, not much. 
Systematically, okay.

More if we learn anything else.

On 10/21/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> I've been having some discussions with the "powers that be" where I
> work regarding whether ANTLR is up to the task we have set before it.
> We have it working (lex scanner; ANTLR parser, multiple tree parsers,
> C++/linux), but the performance is pretty bad (~3 seconds to clone the
> AST for a 10K line input file for a C-like language).  A first quick
> glance at gprof doesn't show any obvious outliers or idiocies;
> however, I know there's more to be done with profiling.
>
> I got the impression, several times, that people were pleased with the
> thruput of ANTLR for parsing and tree transformations.  Yes, there are
> a few "classic" tunings required - I'm working thru the information
> from this list over the past few yearse - but still...
>
> Our productivity is certainly higher with ANTLR, particularly for the
> tree-parsers; however, if customer perceived thruput is "bad"
> (whatever that means, right :-), it's a serious problem.
>
> So, has anyone been holding out on tunings, optimizations, and
> outright tricks that they are using to get ANTLR to eat trees faster?
> Again, I'm in the C++ world, so java suggestions don't help.
>
> Thanks from a harried ANTLRite,
> - Bryan Ewbank
>
From oliver.zeigermann at gmail.com  Fri Oct 28 01:09:03 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Oct 28 01:09:06 2005
Subject: [antlr-interest] Two questions about antlr3 syntax
In-Reply-To: <436155DA.5080205@shmuelhome.mine.nu>
References: <436105DE.5070401@shmuelhome.mine.nu>
	<9da4f4520510271259u1ec4508l@mail.gmail.com>
	<436155DA.5080205@shmuelhome.mine.nu>
Message-ID: <9da4f4520510280109t3a800909p@mail.gmail.com>

2005/10/28, shmuel siegel <antlr@shmuelhome.mine.nu>:
> Oliver Zeigermann wrote:
>
> >2005/10/27, shmuel siegel
> >
> >
> >>1) In antlr2 I used EOT to indicate that the entire input file must
> >>match my syntax. What has replaced this in antlr3.
> >>example
> >>     document : contextSection (eventSection)? (handlerList)?
> >>(settingSection)* EOT!;
> >>
> >>
> >
> >AFAIK the EOT is no longer required. The only thing you will need is
> >at least one start rule. A start rule is called by no other rule.
> >
> >
> >
> The EOT was introduced into this rule to avoid having document match a
> contextSection followed by garbage. Are you saying that the mere fact
> that document is a top level rule will make it try to consume the entire
> input stream?

That was my impression, but I am not entirely sure...

Oliver
From wiggjd at lsbu.ac.uk  Fri Oct 28 04:16:29 2005
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Fri Oct 28 04:11:44 2005
Subject: [antlr-interest] Replies to messages in a digest
Message-ID: <4362088D.6080305@lsbu.ac.uk>

I think if someone replies to a message in a digest they should 
extract the message from the digest (including the number) and 
then use the text of the original subject line, and not send the 
whole digest every time.

David.

From wiggjd at lsbu.ac.uk  Fri Oct 28 05:07:33 2005
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Fri Oct 28 05:02:47 2005
Subject: [antlr-interest] Re: C++ Comments (Digest 11/49)
Message-ID: <43621485.1000001@lsbu.ac.uk>

Henry Butowsky asked about parsing C++ style comments.

Message: 3
Date: Thu, 27 Oct 2005 14:29:14 +0100
From: Henry Butowsky <henryb@ntlworld.com>
Subject: [antlr-interest] C++ Comments
To: antlr-interest@antlr.org
Message-ID: <4360D62A.7020008@ntlworld.com>
Content-Type: text/plain; charset=us-ascii; format=flowed

Hi Guys I'm using the following rule in my Lexer to skip C++ 
style comments

CPP_COMMENT: ("//" (~'\n')* '\n')
	{ newline(); $setType(antlr::Token::SKIP); };

Upon executing this rule the lexer is "aborted" ( in
CalcLexer::nextToken() )

when I use the string ("//" (~'\n')*) it deletes all text to the 
end-of file ? There is some problem with the '\n' -- Any ideas ?
Many thx Henry


FYI I use the following in our C++ parser available from the 
antlr website,


CPPComment
    :	
        "//" (~('\n' | '\r'))* EndOfLine
        {_ttype = ANTLR_USE_NAMESPACE(antlr)Token::SKIP;
         newline();}
    ;

protected
EndOfLine
    :	
        (options{generateAmbigWarnings = false;}:
         "\r\n"  // MS
        |'\r'    // Mac
        |'\n'    // Unix
        )
    ;

David.

From kroepke at dolphin-services.de  Fri Oct 28 07:58:03 2005
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri Oct 28 07:58:08 2005
Subject: [antlr-interest] Replies to messages in a digest
In-Reply-To: <4362088D.6080305@lsbu.ac.uk>
References: <4362088D.6080305@lsbu.ac.uk>
Message-ID: <44E4DBC0-B7B4-441A-A8BC-6B809E9B1DE3@dolphin-services.de>


On 28. Oct 2005, at 13:16 Uhr, David Wigg wrote:

> and not send the whole digest every time.

The same thing applies to anti-virus footers, signatures and other  
irrelevant stuff...but I guess we won't get rid
of that behavior anytime soon :-(

Regards,
Kay
From Anthony.Youngman at eca-international.com  Fri Oct 28 08:08:42 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Fri Oct 28 08:08:44 2005
Subject: [antlr-interest] Replies to messages in a digest
Message-ID: <C7FE35004D40FD45AA342991B88CE40401290063@lnml1.eca-international.local>

Actually, replying to a digest without trimming tends to die off pretty
quick. It's akin to hitting a nail with a hammer but getting your thumb
instead every time ... :-)

Many digests are size-triggered, so a digest-sized reply will trigger
the next digest ... the offender is mailbombing themselves ...

Shame the same logic doesn't work for those other obnoxious practices
you mention - but many of us have no control thereover. For example, the
footer I know will be on the end of this message wasn't put there by me
- and I can't stop our mailserver doing it for me :-(

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Kay Roepke
Sent: 28 October 2005 15:58
To: David Wigg
Cc: antlr-interest@antlr.org
Subject: Re: [antlr-interest] Replies to messages in a digest


On 28. Oct 2005, at 13:16 Uhr, David Wigg wrote:

> and not send the whole digest every time.

The same thing applies to anti-virus footers, signatures and other  
irrelevant stuff...but I guess we won't get rid
of that behavior anytime soon :-(

Regards,
Kay

* ************************************************************************ *

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

* ************************************************************************ *

From kroepke at dolphin-services.de  Fri Oct 28 08:17:30 2005
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri Oct 28 08:17:37 2005
Subject: [antlr-interest] Replies to messages in a digest
In-Reply-To: <C7FE35004D40FD45AA342991B88CE40401290063@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE40401290063@lnml1.eca-international.local>
Message-ID: <7621591D-4DA8-4E16-9ED2-769C48AAE99D@dolphin-services.de>


On 28. Oct 2005, at 17:08 Uhr, Anthony Youngman wrote:

> For example, the
> footer I know will be on the end of this message wasn't put there  
> by me
> - and I can't stop our mailserver doing it for me :-(

I know. But that's not the problem:
It's just that it annoys the hell out of me to get a 50kb mail, just  
to see some go: "No." and then see the
whole thread including five(!) copies of the very same (forced)  
signature/footer at the end, each of which is like
six lines long.

I read a lot of mail, and try to keep up with all the information  
contained within, and these practices are all
keeping me from getting on top of it all :-(

- kay
From parrt at cs.usfca.edu  Fri Oct 28 08:20:25 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Oct 28 08:20:27 2005
Subject: [antlr-interest] Replies to messages in a digest
In-Reply-To: <7621591D-4DA8-4E16-9ED2-769C48AAE99D@dolphin-services.de>
References: <C7FE35004D40FD45AA342991B88CE40401290063@lnml1.eca-international.local>
	<7621591D-4DA8-4E16-9ED2-769C48AAE99D@dolphin-services.de>
Message-ID: <C3F956CE-C160-489E-88EB-BA5508C0449A@cs.usfca.edu>


On Oct 28, 2005, at 8:17 AM, Kay Roepke wrote:

>
> On 28. Oct 2005, at 17:08 Uhr, Anthony Youngman wrote:
>
>
>> For example, the
>> footer I know will be on the end of this message wasn't put there  
>> by me
>> - and I can't stop our mailserver doing it for me :-(
>>
>
> I know. But that's not the problem:
> It's just that it annoys the hell out of me to get a 50kb mail,  
> just to see some go: "No." and then see the
> whole thread including five(!) copies of the very same (forced)  
> signature/footer at the end, each of which is like
> six lines long.

I almost decided to unsubscribe any digest posters ;)  But, I'm a  
softy. :)

Ter
From kroepke at dolphin-services.de  Fri Oct 28 08:23:37 2005
From: kroepke at dolphin-services.de (Kay Roepke)
Date: Fri Oct 28 08:23:43 2005
Subject: [antlr-interest] Replies to messages in a digest
In-Reply-To: <C3F956CE-C160-489E-88EB-BA5508C0449A@cs.usfca.edu>
References: <C7FE35004D40FD45AA342991B88CE40401290063@lnml1.eca-international.local>
	<7621591D-4DA8-4E16-9ED2-769C48AAE99D@dolphin-services.de>
	<C3F956CE-C160-489E-88EB-BA5508C0449A@cs.usfca.edu>
Message-ID: <4D6CE6F8-4F86-4364-8706-5055E1EF414E@dolphin-services.de>


On 28. Oct 2005, at 17:20 Uhr, Terence Parr wrote:

> I almost decided to unsubscribe any digest posters ;)

Just send them each single file of the Linux kernel source from a  
server somewhere on a pacific island.
That should keep'em busy for a while ;-)

- kay
From canfield at computer.org  Fri Oct 28 12:14:53 2005
From: canfield at computer.org (Bill Canfield)
Date: Fri Oct 28 12:04:52 2005
Subject: [antlr-interest] Re: Performance Issues
In-Reply-To: <20051028151741.78A00DCC9F@www.antlr.org>
References: <20051028151741.78A00DCC9F@www.antlr.org>
Message-ID: <436278AD.8000608@computer.org>

Bryan Ewbank wrote:
> An update on my performance issues.  Thanks for all the responses!
> 
> We've found two measurable improvements (C++)
> 

Hi Bryan:

This may not apply to you, but another performance issue is 
TokenStreamSelector::retry().  If you use token streams for things like 
include files, and retry on EOF, the retry() is really an exception in 
disguise.

My strategy was to subclass TokenStreamSelector, and override 
nextToken() to handle EOF more gracefully (also delete the previous stream).

There are some details in a powerpoint I showed at ANTLR 2005; if that's 
not up on the web yet I can edit them into an email for the list for 
those who are interested.

Bill

From mansuk at gmail.com  Sat Oct 29 02:16:11 2005
From: mansuk at gmail.com (Suman Karumuri)
Date: Sat Oct 29 02:16:15 2005
Subject: [antlr-interest] Questions about ANTLR tree parsers
Message-ID: <c26541e00510290216h5c62a1een92e2ab3be7318804@mail.gmail.com>

Hi ,

1) Can anyone explain me what this action does. I have taken this
example from the calc.g file in antlr examples.

expr :  expr1        { ## = #(#[EXPR,"expr"],##); }    ;

I have gone through the docs but i am unable to understand what ##  in
an action is translated to .As i understand it is a shortcut for #expr
but it doesn't seem to be correct and i get many errors.

2) There are no docs on how to write the grammar for a tree parser.
>From what i have read and understood, this is the conclusion i have
reached:

" A parser grammar is shows associativity and precedence where as the
tree parser grammar is the grammar
- Without associativity
- Without precedence
- Without delimiting characters.
"

Is that correct?

3) I have a problem grouping multiple trees as a single node from a
rule.For example in the below grammar:

program :       stmt;

stmt    :       expr EOL
        |!      v:VAR EQUALS s:expr EOL
        { #v.setType(VAR_NAME); #stmt = #(#EQUALS, #s, #v); }
        |       PRINT^ expr EOL!
        |       WHILE^ cond sl:stmt_lst { #sl.setType(STMT_LIST);}

stmt_lst:       BEGIN! (EOL!)* (stmt)* END! (EOL!)*

expr : // This is an expression

I want the statement list to be a subtree of while root. But the above
set type does not seem to work. Am i  missing something important?

4) How is this rule in parser translated to tree parser?

program = (stmt)*

But in the tree parser this doesn't seem to work:

program = #(stmt)*

What is the right way to do it?

Thanks for your time.
-Suman
From ewbank at gmail.com  Sat Oct 29 04:31:34 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sat Oct 29 04:31:37 2005
Subject: [antlr-interest] Questions about ANTLR tree parsers
In-Reply-To: <c26541e00510290216h5c62a1een92e2ab3be7318804@mail.gmail.com>
References: <c26541e00510290216h5c62a1een92e2ab3be7318804@mail.gmail.com>
Message-ID: <dd3a065f0510290431y567f1615rc6733b0a59e03c67@mail.gmail.com>

Hi Suman, welcome to the list...

On 10/29/05, Suman Karumuri <mansuk@gmail.com> wrote:
> Hi ,
>
> 1) Can anyone explain me what this action does. I have taken this
> example from the calc.g file in antlr examples.
>
> expr :  expr1        { ## = #(#[EXPR,"expr"],##); }    ;

This means
(1) Create a new EXPR node
(2) Place the current version of the output tree for this rule
    as the only child of that node
(3) Use that new tree as the output tree for this rule

If this is not working, make sure you have buildAST=true; it might
do weird things otherwise.


> 2) There are no docs on how to write the grammar for a tree parser.
> >From what i have read and understood, this is the conclusion i have
> reached:
>
> " A parser grammar is shows associativity and precedence where as the
> tree parser grammar is the grammar
> - Without associativity
> - Without precedence
> - Without delimiting characters.
> "
>
> Is that correct?

Please take a look at the PDF manual; there's a chapter about tree grammars.

I think what you say is correct, though I would say it like this:

- A tree HAS NO ASSOCIATIVITY, and NO PRECEDENCE; just shape.
- A tree has only those tokens you placed in it.

What you built in the parser (or previous tree grammar) is what you have.

Said another way, you don't (typically) build a tree like this:
	#(+ A B C)
Instead, you build this:
	#(+ #(+ A B) C)
Therefore, associativity is implied in the tree.

The same is true for precedence; you don't produce a tree that looks like this:
	#(EXPR A * B + C)
But rather whichever is needed for correct processing:
	#(* A #(+ B C) )
	#(+ #(* A B) C)
Or something like this if you'd rather not use trees (though this is ANTRL, and
ANTLR does trees :-)
	#(EXPR * A + B C )
	#(EXPR + * A B C )	

> 3) I have a problem grouping multiple trees as a single node from a
> rule.For example in the below grammar:
>
> program :       stmt;
>
> stmt    :       expr EOL
>         |!      v:VAR EQUALS s:expr EOL
>         { #v.setType(VAR_NAME); #stmt = #(#EQUALS, #s, #v); }
>         |       PRINT^ expr EOL!
>         |       WHILE^ cond sl:stmt_lst { #sl.setType(STMT_LIST);}
>
> stmt_lst:       BEGIN! (EOL!)* (stmt)* END! (EOL!)*
>
> expr : // This is an expression
>
> I want the statement list to be a subtree of while root. But the above
> set type does not seem to work. Am i  missing something important?

Hmm.  I think so.  You are overwriting the first element in stmt_lst,
rather than
introducing a collector node.  Try replacing stmt_lst with this:

	stmt_list:	BEGIN^ (EOL!)* (stmt)* END! (EOL!)*
			{ ##.setType(STMT_LIST); }

Also remove the action on the WHILE line...

The problem is that the original grammar left the stmt_lst as a list of
siblings, rather than a tree with a single root.  Not a problem, really, until
it's used.  Drawing what this grammar does to a WHILE:

	#(WHILE cond STMT_LIST s2 s3 ... sN)
		// s1 type is replaced with STMT_LIST

With the changed stmt_list rule:

	#(WHILE cond #(STMT_LIST s1 s2 ... sN) )

>
> 4) How is this rule in parser translated to tree parser?
>		program = (stmt)*
> But in the tree parser this doesn't seem to work:
>		program = #(stmt)*

I don't understand this question, so have to say "what do you mean?"  A tree
parser's rules have to match trees, rather than be sequences of tokens; but
there's not enough in the fragments to see what you are trying to do.
From wirecracker at gmail.com  Sat Oct 29 05:18:45 2005
From: wirecracker at gmail.com (eric nelson)
Date: Sat Oct 29 05:18:48 2005
Subject: [antlr-interest] Java In / Java Out
Message-ID: <ca5eeb330510290518q120825a9o7fdceec2c33a23d7@mail.gmail.com>

I'm trying to modify the java.g grammar file so that I can use
StringTemplate for outputting the file. The input is a Java file. I would
like the output to be Java also. So, yes, basically no change in content ...
mabye some spacing will differ here or there. I am still learning to use
ANTLR and StringTemplate and I've written a Java.stg file based on what I
think I know so far. Exerpts from java.g and Java.stg appear below. One of
the questions I have is how to handle the "|" (or) symbol (i.e.
classDefinition | interfaceDefinition). The way I have it right now there
would be a list of "modifiers", a list of "classDefinitions", and a list of
interfaceDefinitions (then naturally I would have a question about the " |
s:SEMI!" ... but one question at a time ;) So, the problem in Java.stg is
how to match up the correct "modifiers" with the corresponding
"interfaceDefinition" or "classDefinition". Or what if there is a
classDefinition with no modifier, etc. I am quite convinced that my
Java.stgtemplate (typeDefinition in particular) and/or my
java.g code has erred somewhere. Any thoughts? This is HUGE since this will
help me understand how to approach the "field" rule in java.g .... if anyone
has some hints on a "field" template that would also be great! Thanks :) - e
  java.g exerpt (java 1.3 grammar)

//////////////////////////////////////////////////////////////////////////////////////////////////
// A type definition in a file is either a class or interface definition.
typeDefinition returns [StringTemplate code=template("typeDefinition")]
options {defaultErrorHandler = true;}
{StringTemplate mod=null, cd=null, id=null, semi=null;}
: mod=m:modifiers! {code.setAttribute("modifiers", mod);}
( cd=classDefinition[#m] {code.setAttribute("classDefinitions", cd);}
| id=interfaceDefinition[#m] {code.setAttribute("interfaceDefinitions",
id);}
)
| s:SEMI! {semi=template("lexer_semi");semi.setAttribute("semi",
s.getText());code.setAttribute("semi",
semi);}
;

//////////////////////////////////////////////////////////////////////////////////////////////////
  Java.stg exerpt

//////////////////////////////////////////////////////////////////////////////////////////////////
typeDefinition(modifiers,classDefinitions,interfaceDefinitions,semi) ::= <<
<modifiers><classDefinitions><interfaceDefinitions><semi>
>>

modifiers(modifiers) ::= "<modifiers>"

modifier(modifier) ::= "<modifier>"

classDefinition(ident,superClassClause,implementsClause,classBlock) ::= <<
class <ident> <superClassClause> <implementsClause>
<classBlock>
>>

interfaceDefinition() ::= <<
not yet completed
>>

//////////////////////////////////////////////////////////////////////////////////////////////////
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051029/11745468/attachment.html
From open.zone at virgin.net  Sat Oct 29 05:42:15 2005
From: open.zone at virgin.net (Micheal J)
Date: Sat Oct 29 05:26:57 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6 (and
	_saveIndex bugs in 2.7.5)
In-Reply-To: <20051027101752.ABE075A752@jhb-relay02.worldonline.co.za>
Message-ID: <002901c5dc86$32b70230$6902a8c0@hercules>

Luis,

> Hi,
> 
> I haven't experienced the problem you described in the other 
> message. I guess a struct makes more sense at this point then.

Noted. 

> The _saveIndex optimization only declares _saveIndex when needed. 
> 
> The trouble is that the C# standard does not allow local 
> variable redeclarations in nested blocks (even if the 
> definition of local variable in the outer block occurs after 
> the declaration in the nested block): 

<snip>

What version of ANTLR/C# are you using?. IIRC, Kunle and I fixed this for
the 2.7.5 release.

If you are using 2.7.5, send me a small grammar that demonstrates the
problem.

> So _saveIndex should only be declared once in the outer block 
> and then used in the inner block. I don't think it's possible 
> to predict in the code generator that _saveIndex will be used 
> in a nested block? Personally I'm not sure this is worth all 
> the effort. Perhaps we should just stick to the way the Java 
> generator does it - once at the beginning of the method?

C# [unlike Java] generates warning for unused variables. We aim for codegen
output to be "warning-free".

> The 
> optimization has the side-effect that many _saveIndex 
> variables are declared that take up more memory than just 
> declaring it once at the beginning.

Nope. The C# compiler/CLR Jit system are smart enough (or should be smart
enough for CLRs on non-MS platforms) to reuse a single memory slot.

Micheal

From mathieu.clabaut at gmail.com  Sat Oct 29 13:52:59 2005
From: mathieu.clabaut at gmail.com (Mathieu Clabaut)
Date: Sat Oct 29 13:53:03 2005
Subject: [antlr-interest] enigmatic error message
In-Reply-To: <1129923527.9524.10.camel@localhost.localdomain>
References: <db9360ca0510210827v5033542y@mail.gmail.com>
	<1129923527.9524.10.camel@localhost.localdomain>
Message-ID: <db9360ca0510291352q38b7e7d2t@mail.gmail.com>

 Oups !
 I did copy/past the wrong error message ! Sorry for that !

 I do not have the appropiate error message anymore at hand, but antlr
just said that '(' was an unexpected token, without any
line/column/context information.
 It was quite uneasy to spot the problem in an already quite big
grammar. Usually antlr gives quite usefull information.

 I'll send here another mail if I manage to reproduce the error.

 Anyway, thank you Martin to have taken time to respond to such a dumb
message. How can I write such things ! Damned !



On 21/10/05, Martin Probst <mail@martin-probst.com> wrote:
> Am Freitag, den 21.10.2005, 17:27 +0200 schrieb Mathieu Clabaut:
> > ANTLR 2.7.5 just gives me the following enigmatic error message !
> >
> >  ANTLR Parser Generator   Version 2.7.5 (20050201)   1989-2005 jGuru.com
> >  usage: java antlr.Tool [args] file.g
> >
> > I must say I was quite surprised as it usually gives lot of usefull
> > informations. Any tip in such a situation ?
>
> What's so cryptic? The tool tells you how to use it:
> java antlr.Tool mygrammar.g
>
> Probably you invoked it without passing a grammar or with illegal
> parameters.
>
> Martin
>
>


--
____________http://www.gnu.org/philosophy/no-word-attachments.fr.html
Mathieu CLABAUT                         mailto:mathieu.clabaut@gmail.com
           F2F5 442F F2AC E1D5 9D31  3EFC 842A BC4A 123B 9A65
From eric_mahurin at yahoo.com  Sat Oct 29 14:37:48 2005
From: eric_mahurin at yahoo.com (Eric Mahurin)
Date: Sat Oct 29 14:37:50 2005
Subject: [antlr-interest] tool for left recursion removal
Message-ID: <20051029213748.32005.qmail@web36111.mail.mud.yahoo.com>

Hey all, even though I haven't used ANTLR in about a year or
so, I still take inspiration from it.  I ended up designing my
own LL(1/infinite) parser in Ruby and I started with ideas from
ANTLR.  Unlike other parsers, you specify the grammar directly
in the target language so that integration with logic outside
the grammar is easy.  The same techniques could be applied to
any other OO language, but it would be better if the language
had operator overloading and closures (Java has neither). 
Here's a link if anyone is interested:

http://rubyforge.org/projects/cursor/

Anyways, back to my real question.  Like other LL parsers, the
big problem is dealing with grammars that have left-recursion. 
I found many links on the techniques to remove left-recursion. 
But, what I would really like is some tool that took a grammar
(.y file maybe), removed the left-recursion, and spit out a new
grammar (also a .y file).  Maybe also did left factoring. 
Anybody know of something that does this?

Eric


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From mansuk at gmail.com  Sat Oct 29 15:00:44 2005
From: mansuk at gmail.com (Suman Karumuri)
Date: Sat Oct 29 15:00:47 2005
Subject: [antlr-interest] tool for left recursion removal
In-Reply-To: <20051029213748.32005.qmail@web36111.mail.mud.yahoo.com>
References: <20051029213748.32005.qmail@web36111.mail.mud.yahoo.com>
Message-ID: <c26541e00510291500n7afddbbcu5c642a67a16a7524@mail.gmail.com>

Hi Eric,

Why not create a ruby code generation for antlr?

I understand that antlr 2.x syntax is designed with java in mind,
which makes it rather inelegent from a design perspective when your
target language is python, because python parsers like sparc, PLY use
the power of python to get elegent designs.

However, developing a backend for antlr  is still worth it because, it
gives you the flexibility to move across languages. For example i am
generating python code for the prototype, but for the production code
i would be generating c/c++ for the same grammar which is a nice thing
to have.

-Suman
On 10/30/05, Eric Mahurin <eric_mahurin@yahoo.com> wrote:
> Hey all, even though I haven't used ANTLR in about a year or
> so, I still take inspiration from it.  I ended up designing my
> own LL(1/infinite) parser in Ruby and I started with ideas from
> ANTLR.  Unlike other parsers, you specify the grammar directly
> in the target language so that integration with logic outside
> the grammar is easy.  The same techniques could be applied to
> any other OO language, but it would be better if the language
> had operator overloading and closures (Java has neither).
> Here's a link if anyone is interested:
>
> http://rubyforge.org/projects/cursor/
>
> Anyways, back to my real question.  Like other LL parsers, the
> big problem is dealing with grammars that have left-recursion.
> I found many links on the techniques to remove left-recursion.
> But, what I would really like is some tool that took a grammar
> (.y file maybe), removed the left-recursion, and spit out a new
> grammar (also a .y file).  Maybe also did left factoring.
> Anybody know of something that does this?
>
> Eric
>
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
>
From luisl at scarab.co.za  Sat Oct 29 23:52:47 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Sat Oct 29 23:53:03 2005
Subject: [antlr-interest] ASTPair handling in C# runtime for 2.7.6
	(and_saveIndex bugs in 2.7.5)
In-Reply-To: <002901c5dc86$32b70230$6902a8c0@hercules>
Message-ID: <MPEMLILMNEOKCPPBGEMKAEJOCIAA.luisl@scarab.co.za>

<snip>

> What version of ANTLR/C# are you using?. IIRC, Kunle and I fixed this for
> the 2.7.5 release.

I'm using the source distribution of 2.7.5.

> If you are using 2.7.5, send me a small grammar that demonstrates the
> problem.

The problem occurs in the StringTemplate lexers - just run Antlr on
angle.bracket.template.g.

Regards

Luis



From eric_mahurin at yahoo.com  Sun Oct 30 06:58:34 2005
From: eric_mahurin at yahoo.com (Eric Mahurin)
Date: Sun Oct 30 06:58:38 2005
Subject: [antlr-interest] tool for left recursion removal
In-Reply-To: <c26541e00510291500n7afddbbcu5c642a67a16a7524@mail.gmail.com>
Message-ID: <20051030145834.97209.qmail@web36114.mail.mud.yahoo.com>

Before I continue too far off topic (and give another plug for
my own LL parser), I'll ask again: anybody know of any software
for doing left-recursion removal?

--- Suman Karumuri <mansuk@gmail.com> wrote:

> Hi Eric,
> 
> Why not create a ruby code generation for antlr?

Here are my initial reason for making my own in ruby:

1. My holy grail was to be able to specify a language grammar
directly in  the target language hopefully with BNF-like
syntax.  When you do this, you avoid these problems:

   A. a grammar language to learn (and for the parser to parse)
   B. funny $/macros in your actions
   C. parser may need to parse a subset of the target language
      to handle the actions - at least a lexer?
   D. limitations on the actions for various reasons

2. Even more symmetry between lexer and parser.  With what I
came up with, they are *identical*.  The difference is what
their input and output is.  lexer - input: char stream, output:
token stream; parser - input: token stream, output: AST stream.
 I created a separate package (cursor) to give something like
java streams and C++ iterators but with more abstraction and
power.  One of the results of the symmetry of lexer/parser is
that you can define tokens however you like (they just needs to
respond to the === method).  Ah, the joys of a dynamically
typed language.

3. Wanted to be able to naturally handle arbitrary lookahead. 
ANTLR can handle it, but not very pretty/efficiently last time
I checked - you replicate the grammar in a syntactic predicate.
 With mine, you simply call "lookahead" on a grammar to to
create a grammar with arbitrary lookahead.  No need to specify
a global lookahead for the language.  The default is 1 and if
you need more you just apply this lookahead method where
needed.

4. Wanted the concept that every grammar rule/subrule is an
object.  Thus the project/class name is Grammar.  A rule is
basically an assignment.

5. Very easily add flexibility/power by adding more methods
that can be applied to grammar objects.

6. Users can easily add their own generic grammar
transformations (simply a lambda that takes grammar objects or
whatever as arguments and generates a new grammar object).

7. No need for a parser generation stage.  Effectively, the
parser is made at run-time.  This will result in a slight
startup penalty, but really helps ease of use.  No need to
figure out how to integrate generated files.

8. Well defined way of handling "ambiguities" such that there
are none similar to regular expressions.  Some may consider
this a disadvantage because there are no "ambiguity" warnings. 
In many of the cases where ANTLR gave me these warnings, it was
mainly a matter a figuring out how to turn them off - setting
greedy/non-greedy, etc.  Like regular expression alternations,
mine are also prioritized - first match wins.  This removes the
ambiguities and makes it easier to specify some things.

Later, here are the other advantages I added/found:

9. Instead of a lexer just parsing one token at a time and
possibly retaining state, I define a lexer as a grammar object
that parses the entire stream of characters and generates a
stream of tokens.  For simple lexers, this would just be a
repetition of simple token grammars, but for more complex ones,
each of these tokens might actually be a series of tokens
instead.  Doing it this way makes it so most lexer state is not
needed.  The only lexer state that may be absolutely needed
would be state controlled by the parser.  Doing a lexer this
way also forces it to be in a separate thread from the parser
(unless you want to use continuations).  So we may get a
performance boost from it being multi-threaded.  I could also
make a conventional-style lexer where you only specify one
token, but I haven't made the Cursor class to do it - don't see
the advantage of doing it either.

10. Code flattening.  Instead of each rule generating its own
method and having the run-time/stack penalty of a method call,
I flattened the code so that only when you have recursion do
you need to go to another method.  Intially, I wasn't doing any
code generation and each grammar transformation (sequence,
alternation) was another level on the stack.  For the sake of
performance, I'm now doing code generation with flattening with
"eval".

11. Tail recursion (only in my development version).  Before I
had specific methods for handling various types of grammar
loops.  Now all of those are aliases for tail recursion.  And
you can specify any tail recursion and it will become a loop
instead of actual recursion.  But, you do have to be explicit
about when you want this tail recursion optimization - I'm not
detecting it automatically.



> However, developing a backend for antlr  is still worth it
> because, it
> gives you the flexibility to move across languages. For
> example i am
> generating python code for the prototype, but for the
> production code
> i would be generating c/c++ for the same grammar which is a
> nice thing
> to have.

I've been thinking about making various classes with the same
API (or extend the API) to do things like that:

- generate ruby code to a file so like most other parser
generators

- generate code for other languages - actions would be
specified in strings instead of a simple ruby block

- generate code for C/C++ and Inline it in ruby to make the
parser faster.  This could be done transparently with current
grammars with ruby actions (C code would call the ruby
methods).

- generate syntax diagrams of the grammar

- port this library to other OO languages.  The ideal
candidates would be those with operator overloading,
closures/anonymous functions, and dynamic typing, but I think
these could be overcome with some ugliness in the grammar
specification.

Right now, probably the most portable thing to use would be a
variation of yacc since a variant of it exists in almost every
language.

> -Suman
> On 10/30/05, Eric Mahurin <eric_mahurin@yahoo.com> wrote:
> > Hey all, even though I haven't used ANTLR in about a year
> or
> > so, I still take inspiration from it.  I ended up designing
> my
> > own LL(1/infinite) parser in Ruby and I started with ideas
> from
> > ANTLR.  Unlike other parsers, you specify the grammar
> directly
> > in the target language so that integration with logic
> outside
> > the grammar is easy.  The same techniques could be applied
> to
> > any other OO language, but it would be better if the
> language
> > had operator overloading and closures (Java has neither).
> > Here's a link if anyone is interested:
> >
> > http://rubyforge.org/projects/cursor/
> >
> > Anyways, back to my real question.  Like other LL parsers,
> the
> > big problem is dealing with grammars that have
> left-recursion.
> > I found many links on the techniques to remove
> left-recursion.
> > But, what I would really like is some tool that took a
> grammar
> > (.y file maybe), removed the left-recursion, and spit out a
> new
> > grammar (also a .y file).  Maybe also did left factoring.
> > Anybody know of something that does this?



		
__________________________________ 
Yahoo! FareChase: Search multiple travel sites in one click.
http://farechase.yahoo.com
From open.zone at virgin.net  Sun Oct 30 10:41:54 2005
From: open.zone at virgin.net (Micheal J)
Date: Sun Oct 30 10:26:35 2005
Subject: [antlr-interest] _saveIndex bugs in 2.7.5
In-Reply-To: <MPEMLILMNEOKCPPBGEMKAEJOCIAA.luisl@scarab.co.za>
Message-ID: <000201c5dd81$9a808200$6902a8c0@hercules>

> > What version of ANTLR/C# are you using?. IIRC, Kunle and I 
> fixed this 
> > for the 2.7.5 release.
> 
> I'm using the source distribution of 2.7.5.
> 
> > If you are using 2.7.5, send me a small grammar that 
> demonstrates the 
> > problem.
> 
> The problem occurs in the StringTemplate lexers - just run 
> Antlr on angle.bracket.template.g.

Aargh!. You are right of course. 

A quick look in my mail archive reveals that Steve [Sarandos] didn't get
back to us after I send him our fixes for the same issue prior to the 2.7.5
release (he was working on a new release of StringTemplate at the time
iirc). We assumed he was happy with the fix.

We don't think we can fix this without fairly involved changes to the 2.x
codegen. The need to predict future _saveIndex usage in nested blocks being
the showstopper.

Yours is the first report of this issue since 2.7.5 was released so, I'm
deferring this for the moment but, I'll look into it some more.

Kunle

From ewbank at gmail.com  Sun Oct 30 11:17:56 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Oct 30 11:17:59 2005
Subject: [antlr-interest] tool for left recursion removal
In-Reply-To: <20051030145834.97209.qmail@web36114.mail.mud.yahoo.com>
References: <c26541e00510291500n7afddbbcu5c642a67a16a7524@mail.gmail.com>
	<20051030145834.97209.qmail@web36114.mail.mud.yahoo.com>
Message-ID: <dd3a065f0510301117y6bcf7460p9c528c3d6880d90d@mail.gmail.com>

Eric,

I think 24 hours isn't really enough time (on this list, anyway) to
reasonable expect responses.  A few days is more likely; some folks
only ready once a week or so.  Not sure how this compares to other
lists, but it seens more the norm than the exception.

On 10/30/05, Eric Mahurin <eric_mahurin@yahoo.com> wrote:
> Before I continue too far off topic (and give another plug for
> my own LL parser), I'll ask again: anybody know of any software
> for doing left-recursion removal?
From open.zone at virgin.net  Sun Oct 30 17:11:28 2005
From: open.zone at virgin.net (Micheal J)
Date: Sun Oct 30 16:56:09 2005
Subject: [antlr-interest] More on _saveIndex bugs in 2.7.5
In-Reply-To: <000201c5dd81$9a808200$6902a8c0@hercules>
Message-ID: <000b01c5ddb8$06b0acd0$6902a8c0@hercules>

-- begin ---
> We don't think we can fix this without fairly involved 
> changes to the 2.x codegen. The need to predict future 
> _saveIndex usage in nested blocks being the showstopper.

It might be possible to alter the 2.x codegen so that it can switch the
destination of the output statements to a temp buffer. We can then flush the
temp buffer to the output file later. With this hack, it may be possible to
implement a fix to the current issue with _saveIndex without actually
solving (or needing to solve) the "future use prediction problem" above.

It looks possible but it's still quite a bit of work. I've got too much on
my plate currently so, perhaps save this for another time?. Or maybe drop
and fix in 3.x codegen.

Kunle
-- end   ---


I think we got most use cases with our _saveIndex fix in the 2.7.5 release.
My inclination is to document this as a known issue with some grammars with
the ANTLR2 branch and, look to fixing it for the ANTLR3 branch. 

Cheers,

Micheal

From parrt at cs.usfca.edu  Sun Oct 30 22:13:21 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Oct 30 22:13:24 2005
Subject: [antlr-interest] tool for left recursion removal
In-Reply-To: <20051030145834.97209.qmail@web36114.mail.mud.yahoo.com>
References: <20051030145834.97209.qmail@web36114.mail.mud.yahoo.com>
Message-ID: <5B506648-7BE4-4860-A0C4-17B8FB68D3D2@cs.usfca.edu>


On Oct 30, 2005, at 6:58 AM, Eric Mahurin wrote:

> Before I continue too far off topic (and give another plug for
> my own LL parser), I'll ask again: anybody know of any software
> for doing left-recursion removal?

Hi.  New version of http://www.antlr.org/works/index.html does left  
recursion removal :)

Ter

From wirecracker at gmail.com  Mon Oct 31 03:05:31 2005
From: wirecracker at gmail.com (eric nelson)
Date: Mon Oct 31 03:05:33 2005
Subject: [antlr-interest] Re: Java In / Java Out
In-Reply-To: <ca5eeb330510290518q120825a9o7fdceec2c33a23d7@mail.gmail.com>
References: <ca5eeb330510290518q120825a9o7fdceec2c33a23d7@mail.gmail.com>
Message-ID: <ca5eeb330510310305rd36bd16m917103b18495e3ba@mail.gmail.com>

Its been a couple of days so I just thought I should repost, since I would
still like to ask the same question. If anyone can help that would be great!
Thanks :)
 original:
  I'm trying to modify the java.g grammar file so that I can use
StringTemplate for outputting the file. The input is a Java file. I would
like the output to be Java also. So, yes, basically no change in content ...
mabye some spacing will differ here or there. I am still learning to use
ANTLR and StringTemplate and I've written a Java.stg file based on what I
think I know so far. Exerpts from java.g and Java.stg appear below. One of
the questions I have is how to handle the "|" (or) symbol (i.e.
classDefinition | interfaceDefinition). The way I have it right now there
would be a list of "modifiers", a list of "classDefinitions", and a list of
interfaceDefinitions (then naturally I would have a question about the " |
s:SEMI!" ... but one question at a time ;) So, the problem in Java.stg is
how to match up the correct "modifiers" with the corresponding
"interfaceDefinition" or "classDefinition". Or what if there is a
classDefinition with no modifier, etc. I am quite convinced that my
Java.stgtemplate (typeDefinition in particular) and/or my
java.g code has erred somewhere. Any thoughts? This is HUGE since this will
help me understand how to approach the "field" rule in java.g .... if anyone
has some hints on a "field" template that would also be great! Thanks :) - e

  java.g exerpt (java 1.3 grammar)

//////////////////////////////////////////////////////////////////////////////////////////////////
// A type definition in a file is either a class or interface definition.
typeDefinition returns [StringTemplate code=template("typeDefinition")]
options {defaultErrorHandler = true;}
{StringTemplate mod=null, cd=null, id=null, semi=null;}
: mod=m:modifiers! {code.setAttribute("modifiers", mod);}
( cd=classDefinition[#m] { code.setAttribute("classDefinitions", cd);}
| id=interfaceDefinition[#m] {code.setAttribute("interfaceDefinitions",
id);}
)
| s:SEMI! {semi=template("lexer_semi");semi.setAttribute("semi",
s.getText());code.setAttribute("semi",
semi);}
;

//////////////////////////////////////////////////////////////////////////////////////////////////
  Java.stg exerpt

//////////////////////////////////////////////////////////////////////////////////////////////////
typeDefinition(modifiers,classDefinitions,interfaceDefinitions,semi) ::= <<
<modifiers><classDefinitions><interfaceDefinitions><semi>
>>

modifiers(modifiers) ::= "<modifiers>"

modifier(modifier) ::= "<modifier>"

classDefinition(ident,superClassClause,implementsClause,classBlock) ::= <<
class <ident> <superClassClause> <implementsClause>
<classBlock>
>>

interfaceDefinition() ::= <<
not yet completed
>>

//////////////////////////////////////////////////////////////////////////////////////////////////


 On 10/29/05, eric nelson <wirecracker@gmail.com> wrote:
>
> I'm trying to modify the java.g grammar file so that I can use
> StringTemplate for outputting the file. The input is a Java file. I would
> like the output to be Java also. So, yes, basically no change in content ...
> mabye some spacing will differ here or there. I am still learning to use
> ANTLR and StringTemplate and I've written a Java.stg file based on what I
> think I know so far. Exerpts from java.g and Java.stg appear below. One of
> the questions I have is how to handle the "|" (or) symbol (i.e.
> classDefinition | interfaceDefinition). The way I have it right now there
> would be a list of "modifiers", a list of "classDefinitions", and a list of
> interfaceDefinitions (then naturally I would have a question about the " |
> s:SEMI!" ... but one question at a time ;) So, the problem in Java.stg is
> how to match up the correct "modifiers" with the corresponding
> "interfaceDefinition" or "classDefinition". Or what if there is a
> classDefinition with no modifier, etc. I am quite convinced that my
> Java.stg template (typeDefinition in particular) and/or my java.g code has
> erred somewhere. Any thoughts? This is HUGE since this will help me
> understand how to approach the "field" rule in java.g .... if anyone has
> some hints on a "field" template that would also be great! Thanks :) - e
>   java.g exerpt (java 1.3 grammar)
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
> // A type definition in a file is either a class or interface definition.
> typeDefinition returns [StringTemplate code=template("typeDefinition")]
> options {defaultErrorHandler = true;}
> {StringTemplate mod=null, cd=null, id=null, semi=null;}
> : mod=m:modifiers! {code.setAttribute("modifiers", mod);}
> ( cd=classDefinition[#m] { code.setAttribute("classDefinitions", cd);}
> | id=interfaceDefinition[#m] {code.setAttribute("interfaceDefinitions",
> id);}
> )
> | s:SEMI! {semi=template("lexer_semi");semi.setAttribute("semi", s.getText());code.setAttribute("semi",
> semi);}
> ;
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
>   Java.stg exerpt
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
> typeDefinition(modifiers,classDefinitions,interfaceDefinitions,semi) ::=
> <<
> <modifiers><classDefinitions><interfaceDefinitions><semi>
> >>
>
> modifiers(modifiers) ::= "<modifiers>"
>
> modifier(modifier) ::= "<modifier>"
>
> classDefinition(ident,superClassClause,implementsClause,classBlock) ::= <<
> class <ident> <superClassClause> <implementsClause>
> <classBlock>
> >>
>
> interfaceDefinition() ::= <<
> not yet completed
> >>
>
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20051031/8caae9e0/attachment.html
From oliver.zeigermann at gmail.com  Mon Oct 31 09:12:00 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon Oct 31 09:12:03 2005
Subject: [antlr-interest] Re: [stringtemplate-interest] Java In / Java Out
In-Reply-To: <ca5eeb330510290518q120825a9o7fdceec2c33a23d7@mail.gmail.com>
References: <ca5eeb330510290518q120825a9o7fdceec2c33a23d7@mail.gmail.com>
Message-ID: <9da4f4520510310912s14896a04m@mail.gmail.com>

Hi Eric,

I was doing limited Java to Java conversions as well. An example that
describes how to generate Java sources from Java interface definitions
can be found here:

http://www.zeigermann.de/genEJB.zip

May idea there was to separate the Java analysis (using ANTLR and a
Java grammar) from the Java generation part (using StringTemplate)
with an intermediate step that uses Java Beans for the tree
representation of the Java interface. Java Beans looked good as they
are familiar to the Java programmer and make a very good input for
StringTemplate.

HTH

Oliver

2005/10/29, eric nelson <wirecracker@gmail.com>:
> I'm trying to modify the java.g grammar file so that I can use
> StringTemplate for outputting the file.  The input is a Java file.  I would
> like the output to be Java also.  So, yes, basically no change in content
> ... mabye some spacing will differ here or there.  I am still learning to
> use ANTLR and StringTemplate and I've written a Java.stg file based on what
> I think I know so far.  Exerpts from java.g and Java.stg appear below.  One
> of the questions I have is how to handle the "|" (or) symbol (i.e.
> classDefinition | interfaceDefinition).  The way I have it right now there
> would be a list of "modifiers", a list of "classDefinitions", and a list of
> interfaceDefinitions (then naturally I would have a question about the " |
> s:SEMI!" ... but one question at a time ;)  So, the problem in Java.stg is
> how to match up the correct "modifiers" with the corresponding
> "interfaceDefinition" or "classDefinition".  Or what if there is a
> classDefinition with no modifier, etc.  I am quite convinced that my
> Java.stg template (typeDefinition in particular) and/or my java.g code has
> erred somewhere.  Any thoughts?  This is HUGE since this will help me
> understand how to approach the "field" rule in java.g .... if anyone has
> some hints on a "field" template that would also be great!  Thanks :) - e
>
>
> java.g exerpt (java 1.3 grammar)
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
> // A type definition in a file is either a class or interface definition.
> typeDefinition returns [StringTemplate
> code=template("typeDefinition")]
> options {defaultErrorHandler = true;}
> {StringTemplate mod=null, cd=null, id=null, semi=null;}
>      :      mod=m:modifiers! {code.setAttribute("modifiers", mod);}
>             ( cd=classDefinition[#m] { code.setAttribute("classDefinitions",
> cd);}
>             | id=interfaceDefinition[#m]
> {code.setAttribute("interfaceDefinitions", id);}
>             )
>      |      s:SEMI!
> {semi=template("lexer_semi");semi.setAttribute("semi",
> s.getText());code.setAttribute("semi", semi);}
>      ;
>
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
>
>
> Java.stg exerpt
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
> typeDefinition(modifiers,classDefinitions,interfaceDefinitions,semi)
> ::= <<
> <modifiers><classDefinitions><interfaceDefinitions><semi>
> >>
>
>
> modifiers(modifiers) ::= "<modifiers>"
>
> modifier(modifier) ::= "<modifier>"
>
> classDefinition(ident,superClassClause,implementsClause,classBlock)
> ::= <<
> class <ident> <superClassClause> <implementsClause>
> <classBlock>
> >>
>
> interfaceDefinition() ::= <<
> not yet completed
> >>
>
> //////////////////////////////////////////////////////////////////////////////////////////////////
>
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest@antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
From parrt at cs.usfca.edu  Mon Oct 31 12:35:48 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Oct 31 12:35:56 2005
Subject: [antlr-interest] tool for left recursion removal
In-Reply-To: <29256ea00510310516j7c7925y14a03101aa33f9bc@mail.gmail.com>
References: <20051030145834.97209.qmail@web36114.mail.mud.yahoo.com>
	<5B506648-7BE4-4860-A0C4-17B8FB68D3D2@cs.usfca.edu>
	<29256ea00510310516j7c7925y14a03101aa33f9bc@mail.gmail.com>
Message-ID: <8EDA1E77-E635-41C0-8754-4DA305135AD9@cs.usfca.edu>


On Oct 31, 2005, at 5:16 AM, Eric Mahurin wrote:

> On 10/31/05, Terence Parr <parrt@cs.usfca.edu> wrote:
>
> On Oct 30, 2005, at 6:58 AM, Eric Mahurin wrote:
>
> > Before I continue too far off topic (and give another plug for
> > my own LL parser), I'll ask again: anybody know of any software
> > for doing left-recursion removal?
>
> Hi.  New version of http://www.antlr.org/works/index.html does left
> recursion removal :)
>
> Ter
>
> Thanks Terrance!  I just downloaded this and it worked great!   
> Istarted with some yacc grammar, stripped out all the surrounding  
> code, read it into antlrworks, asked it to remove all left  
> recursion, and it looks like it did the right thing!  I'm not sure  
> about actions, but what it did to the grammar looks right.
>
> Would you consider having this left recursion removal as a stand- 
> alone command-line tool?  What you have now is a great start at  
> converting LR grammar (yacc file) to LL grammar.  How about trying  
> to do full conversion?
>
> - removing left recursion
> - left factoring
> - use precedence info to generate expression rules for each level

That is exactly what I hope to build (and integrate into  
antlrworks). :)  Jean's left-factoring is one of the steps...

Ter
From open.zone at virgin.net  Mon Oct 31 22:14:12 2005
From: open.zone at virgin.net (Micheal J)
Date: Mon Oct 31 21:58:58 2005
Subject: [antlr-interest] [Re-]Building ANTLR on Windows is a $$$ pain!
Message-ID: <002701c5deab$7c4110e0$6902a8c0@hercules>

Either that, or I'm having a really bad day.

Building from depot source. On a clean Windows install. The intent was to
use the features of the 'antlr.build' package to save some time. So, I
planned to use the AntlrWorks jar files to bootstrap my copy then use my
copy exclusively after that. The bootstrapping worked. So I then do the
following:

    cd antlr275
    javac -cp . antlr/build/*.java
->  java -cp . antlr.build.Tool build
    java -cp . antlr.build.Tool jar

Unfortunately, the third line consistently results in ANTLR parsing errors
related to the antlr.g file. The first error message relates to the '/*' of
the first comment block in the file. Weird!.

[Incidentally, there is nothing special about the antlr.g file, it just
happens to be the first one processed by the build tool. Copying the failing
command and applying it to other .g files gives similar errors.]

If I put the ANTLRWorks jar file (or the antlr.jar from 2.7.5rc2) in the
classpath it all works but, I still get the above error on any attempt to
rebuild ANTLR using the .class/.jar file(s) built from the ANTLR 2.7.5
sources. 

- What is different in ANTLR between the AntlrWorks version and the current
2.7.5 in the depot?

- Why can't ANTLR 2.7.5 build itself on my Windows box?

Anyone else come across similar ANTLR (re)build errors?

Cheers,

Micheal


PS	The "Version.java contains outdated info" issue remains. I seem to
remember that it was to be auto-updated on check-ins etc. It still contains
details related to 2.7.5rc2.

PPS	Hmmm, can this be due to weird UNIX/PC line ending wackiness?

