From elekis at gmail.com  Tue Apr  1 00:18:16 2008
From: elekis at gmail.com (elekis)
Date: Tue, 1 Apr 2008 09:18:16 +0200
Subject: [antlr-interest] dellete space token
Message-ID: <78316ea80804010018m22a5867fo6984a18c1f0b16bc@mail.gmail.com>

hi all,

I try to make a simple grammar and print token.
I try to parse some sentence like that

DEFINITION MODULE helloworld ;

there my lexer grammar

lexer grammar Lyaflplug;

TAG_DEFINITION_MODULE 		:'DEFINITION MODULE';
TAG_POINT_VIRGULE			:';';
Ident						:LETTER NAMECHAR*;
fragment NAMECHAR			:LETTER | DIGIT | '-' | '_';
fragment LETTER				:'a'..'z'| 'A'..'Z';
fragment DIGIT				:'0'..'9';
WS  			:(' '|'\r'|'\t'|'\u000C'|'\n') {channel=99;};

based on the xml tutorial

but when I print token I have that

Token: DEFINITION MODULE
Token:
Token: helloworld
Token:
Token: ;


he print all space. WHY??

other thing is it possible to put directly token in the parser I mean
write a rule like that

compilationUnit: 'DEFINITION MODULE' Ident ';';

than that

compilationUnit: TAG_DEFINITION_MODULE Ident TAG_POINT_VIRGULE;

??

thanks, a+++

From antlr at mirality.co.nz  Tue Apr  1 01:41:28 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 01 Apr 2008 21:41:28 +1300
Subject: [antlr-interest] dellete space token
In-Reply-To: <78316ea80804010018m22a5867fo6984a18c1f0b16bc@mail.gmail.co
 m>
References: <78316ea80804010018m22a5867fo6984a18c1f0b16bc@mail.gmail.com>
Message-ID: <20080401084141.82FA611EAEE@www.antlr.org>

At 20:18 1/04/2008, elekis wrote:
 >lexer grammar Lyaflplug;
 >
 >TAG_DEFINITION_MODULE 		:'DEFINITION MODULE';
 >TAG_POINT_VIRGULE			:';';
 >Ident						:LETTER NAMECHAR*;
 >fragment NAMECHAR			:LETTER | DIGIT | '-' | '_';
 >fragment LETTER				:'a'..'z'| 'A'..'Z';
 >fragment DIGIT				:'0'..'9';
 >WS  			:(' '|'\r'|'\t'|'\u000C'|'\n') {channel=99;};
 >
 >based on the xml tutorial
 >
 >but when I print token I have that
 >
 >Token: DEFINITION MODULE
 >Token:
 >Token: helloworld
 >Token:
 >Token: ;
 >
 >
 >he print all space. WHY??

When you say "channel=99" (and incidentally, this should probably 
be "$channel=HIDDEN"), tokens are still generated, they're just 
given a different channel id.  If you're reading the output of the 
lexer directly you'll still see all of them.

I don't recall whether it's the token stream or the parser itself 
that filters down to a single channel, but either way the parser 
will normally only see tokens on one specific channel, although 
it's possible to locate nearby tokens on other channels in target 
language code blocks (which can be useful for disambiguation).

On the other hand, if you don't want it to generate a token at 
all, then you can call skip() instead.

 >other thing is it possible to put directly token in the parser I 

 >mean write a rule like that
 >
 >compilationUnit: 'DEFINITION MODULE' Ident ';';
 >
 >than that
 >
 >compilationUnit: TAG_DEFINITION_MODULE Ident TAG_POINT_VIRGULE;

You can do this if you write a combined grammar ("grammar foo" 
instead of "lexer grammar foo" and "parser grammar bar"), but 
personally I think this just makes things more confusing.  The 
generated code is harder to read (because you've now got T12 
instead of TAG_DEFINITION_MODULE, for example), and it's too easy 
to forget the separation between lexing and parsing, and end up 
with conflicting or ambiguous lexer rules.


From antlr at b0nz0.de  Tue Apr  1 02:21:32 2008
From: antlr at b0nz0.de (Joachim Rosskopf)
Date: Tue, 01 Apr 2008 11:21:32 +0200
Subject: [antlr-interest] Expression embedded in arbitary Text
Message-ID: <47F1FE9C.2030000@b0nz0.de>

Hello List,

currently I?m working on a small grammar to build an expression language 
for an ETL tool. This works very nice for the expression ( e.g 
#{foo.bar('test')} ) itself. It gets parsed to the desired AST.

But I?m not able to figure out Lexer/Parser rules, that make it possible 
to embed the expression in arbitary text (e.g. an URI, 
http://www.dom.com/#{res.uri()} ). So every character not consumed by 
the expression should be in one rule.

Can someone please give me an hint? I attached the grammar.
Thank you in advance.

Best regards
---
Joachim
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: EL.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/b91978ac/attachment.pl 

From elekis at gmail.com  Tue Apr  1 02:25:47 2008
From: elekis at gmail.com (elekis)
Date: Tue, 01 Apr 2008 11:25:47 +0200
Subject: [antlr-interest] dellete space token
In-Reply-To: <47f1f546.0172420a.4984.0bb9SMTPIN_ADDED@mx.google.com>
References: <78316ea80804010018m22a5867fo6984a18c1f0b16bc@mail.gmail.com>
	<47f1f546.0172420a.4984.0bb9SMTPIN_ADDED@mx.google.com>
Message-ID: <47F1FF9B.8010201@gmail.com>

thanks a lot

a++
Gavin Lambert a ?crit :
> At 20:18 1/04/2008, elekis wrote:
> >lexer grammar Lyaflplug;
> >
> >TAG_DEFINITION_MODULE         :'DEFINITION MODULE';
> >TAG_POINT_VIRGULE            :';';
> >Ident                        :LETTER NAMECHAR*;
> >fragment NAMECHAR            :LETTER | DIGIT | '-' | '_';
> >fragment LETTER                :'a'..'z'| 'A'..'Z';
> >fragment DIGIT                :'0'..'9';
> >WS              :(' '|'\r'|'\t'|'\u000C'|'\n') {channel=99;};
> >
> >based on the xml tutorial
> >
> >but when I print token I have that
> >
> >Token: DEFINITION MODULE
> >Token:
> >Token: helloworld
> >Token:
> >Token: ;
> >
> >
> >he print all space. WHY??
>
> When you say "channel=99" (and incidentally, this should probably be 
> "$channel=HIDDEN"), tokens are still generated, they're just given a 
> different channel id.  If you're reading the output of the lexer 
> directly you'll still see all of them.
>
> I don't recall whether it's the token stream or the parser itself that 
> filters down to a single channel, but either way the parser will 
> normally only see tokens on one specific channel, although it's 
> possible to locate nearby tokens on other channels in target language 
> code blocks (which can be useful for disambiguation).
>
> On the other hand, if you don't want it to generate a token at all, 
> then you can call skip() instead.
>
> >other thing is it possible to put directly token in the parser I
> >mean write a rule like that
> >
> >compilationUnit: 'DEFINITION MODULE' Ident ';';
> >
> >than that
> >
> >compilationUnit: TAG_DEFINITION_MODULE Ident TAG_POINT_VIRGULE;
>
> You can do this if you write a combined grammar ("grammar foo" instead 
> of "lexer grammar foo" and "parser grammar bar"), but personally I 
> think this just makes things more confusing.  The generated code is 
> harder to read (because you've now got T12 instead of 
> TAG_DEFINITION_MODULE, for example), and it's too easy to forget the 
> separation between lexing and parsing, and end up with conflicting or 
> ambiguous lexer rules.
>



From nopik at data.pl  Tue Apr  1 02:55:51 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 01 Apr 2008 11:55:51 +0200
Subject: [antlr-interest] Problem with C target output on example C grammar
Message-ID: <788386369dd9ba06fb581d1c6ef75f70.qmail@home.pl>

Hello,

I am new to this list as well as to antlr, so please be gentle ;) My goal
is to have flexible C/C++ parser, after trying yacc/lex for a short while I
decided to go to antlr. Since I want my project in C++, it seems, that
antlr 3.1b is better than official 3.0.1. Anyway, I have installed
antlr-2008-03-13.12.tar.gz with libantlr3c-3.1b2.tar.gz and tried to
compile some examples from examples-v3.1b1.tar.gz. The simple ones do work,
indeed. However, when I try to run C grammar, it fails with segfault. Here
is some info (I have cut off a bunch of 'Created a symbolpp class'
messages):

988 05:34:46 andLinux ~/Warsztat/antlr/examples-v3/C/C$ java org.antlr.Tool
C.g3pl
ANTLR Parser Generator Version 3.1b1 (??) 1989-2007
Generating CParser.c
Generating CParser.h
Generating CLexer.c
Generating CLexer.h
989 05:35:24 andLinux ~/Warsztat/antlr/examples-v3/C/C$ g++ *.c -o main -I.
-L /usr/local/lib/ -lantlr3c -ggdb
990 05:35:32 andLinux ~/Warsztat/antlr/examples-v3/C/C$ gdb main
GNU gdb 6.6-debian
Copyright (C) 2006 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you
are
welcome to change it and/or distribute copies of it under certain
conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB. Type "show warranty" for details.
This GDB was configured as "i486-linux-gnu"...
Using host libthread_db library "/lib/libthread_db.so.1".
(gdb) run
Starting program: /home/nopik/Warsztat/antlr/examples-v3/C/C/main
Including file 'jimtest.h'
Created a symbolpp class
define type size_t
[cut many similar messages]
Created a symbolpp class
define type fd_mask

Program received signal SIGSEGV, Segmentation fault.
0x08054f75 in direct_declarator (ctx=0x80b0868) at CParser.c:16284
16284 if (
(SCOPE_TOP(declaration))->isTypedef)
Current language: auto; currently c++
(gdb) where
#0 0x08054f75 in direct_declarator (ctx=0x80b0868) at CParser.c:16284
#1 0x08055897 in declarator (ctx=0x80b0868) at CParser.c:16156
#2 0x0806efa4 in function_definition (ctx=0x80b0868) at CParser.c:13775
#3 0x0806f5c3 in external_declaration (ctx=0x80b0868) at CParser.c:13652
#4 0x0806f89e in translation_unit (ctx=0x80b0868) at CParser.c:13543
#5 0x0806fbef in main (argc=1, argv=0xbf9b45a4) at main.c:188
(gdb) print ctx
$2 = (pCParser) 0x80b0868
(gdb) print ctx->pCParser_declarationTop
$3 = (pCParser_declaration_SCOPE) 0x0
(gdb) quit

Indeed, when in direct_declarator I change if( $declaration::isTypedef ) to
e.g. if( false ), program do not crash, though report a bunch of errors.

Any ideas? Maybe I am using mismatched versions (e.g. old examples) or
what? Original author must have ran it at least once, so probably I have
messed something ;)

PS. It seems, that antlr banner says wrong year - it should be 2008 instead
of 2007, right? :)


-- 
Best regards from
Kamil Burzynski


From m_mayur at hotmail.com  Tue Apr  1 03:36:42 2008
From: m_mayur at hotmail.com (Mayur M)
Date: Tue, 1 Apr 2008 16:06:42 +0530
Subject: [antlr-interest] Debugging grammar throught VS C#.NET
In-Reply-To: <BAY0-MC4-F18lS0mAtY002329d1@bay0-mc4-f18.bay0.hotmail.com>
References: <BLU117-W389C46A79EDE7AF349CA158FFA0@phx.gbl>
	<5a7f481f9ad99a499ad8f27782b00dd2@temporal-wave.com>
	<BLU117-W18DEBFD092AF1D3A189EB08FF50@phx.gbl> 
	<BAY0-MC4-F18lS0mAtY002329d1@bay0-mc4-f18.bay0.hotmail.com>
Message-ID: <BLU117-W22FDEEAB095D402CABDF128FF50@phx.gbl>

Yes, I'm having the problem in Debugging. Could you please let me know the process


Date: Tue, 1 Apr 2008 19:34:38 +1300To: m_mayur at hotmail.com; jimi at temporal-wave.com; antlr-interest at antlr.orgFrom: antlr at mirality.co.nzSubject: Re: [antlr-interest] Debugging grammar throught VS C#.NETAt 18:17 1/04/2008, Mayur M wrote:
<ItemGroup ><Antlr3 Include =" MIF_LP.g" > ....... in the *.csproj there is a warning. "The element 'ItemGroup' in namespace ' http://schemas.microsoft.com/developer/msbuild/2003' has invalid child element 'Antlr3' in namespace ' http://schemas.microsoft.com/developer/msbuild/2003'." That warning can be ignored.  It should only appear while the .csproj file is open in the editor, and it's caused by the schema validation the XML editor performs being overly sensitive (the "real" XML is extensible in ways the schema doesn't indicate).Do you have any problems actually compiling or using it?
_________________________________________________________________
Education: Are exams worrying you all the day long? Write to MSN education experts for help.
http://education.in.msn.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/d74ae695/attachment-0001.html 

From nopik at data.pl  Tue Apr  1 03:48:23 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 01 Apr 2008 12:48:23 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar - temporary (?) solution found
References: <788386369dd9ba06fb581d1c6ef75f70.qmail@home.pl>
Message-ID: <c7e7a0ef86745386c01a81fbfc6efc0d.qmail@home.pl>

Hello again,

 For the time being, I've simplified external_declaration just to:
external_declaration : declaration ;

(which effectively allows to remove it completely, of course) and moved
( declaration_specifiers? declarator declaration* '{' )=> 
function_definition
from external_declaration to declaration. I have moved options { k = 1 } to 
declaration as well,
though I am not yet experienced enough with antlr to be sure if this is 
correct action.

Now, it works on sample file, at least ;) On other trivial files it works 
as well. However, if I run it on main.c file (i.e. on itself), it crashes 
around #include statement ;p

"Kamil Burzynski" <nopik at data.pl> napisa?(a):
> Hello,
>
> I am new to this list as well as to antlr, so please be gentle ;) My goal
>
> is to have flexible C/C++ parser, after trying yacc/lex for a short while 

> I
> decided to go to antlr. Since I want my project in C++, it seems, that
> antlr 3.1b is better than official 3.0.1. Anyway, I have installed
> antlr-2008-03-13.12.tar.gz with libantlr3c-3.1b2.tar.gz and tried to
> compile some examples from examples-v3.1b1.tar.gz. The simple ones do
> work,
> indeed. However, when I try to run C grammar, it fails with segfault.
> Here
> is some info (I have cut off a bunch of 'Created a symbolpp class'
> messages):
>
> 988 05:34:46 andLinux ~/Warsztat/antlr/examples-v3/C/C$ java
> org.antlr.Tool
> C.g3pl
> ANTLR Parser Generator Version 3.1b1 (??) 1989-2007
> Generating CParser.c
> Generating CParser.h
> Generating CLexer.c
> Generating CLexer.h
> 989 05:35:24 andLinux ~/Warsztat/antlr/examples-v3/C/C$ g++ *.c -o main
> -I.
> -L /usr/local/lib/ -lantlr3c -ggdb
> 990 05:35:32 andLinux ~/Warsztat/antlr/examples-v3/C/C$ gdb main
> GNU gdb 6.6-debian
> Copyright (C) 2006 Free Software Foundation, Inc.
> GDB is free software, covered by the GNU General Public License, and you
> are
> welcome to change it and/or distribute copies of it under certain
> conditions.
> Type "show copying" to see the conditions.
> There is absolutely no warranty for GDB. Type "show warranty" for
> details.
> This GDB was configured as "i486-linux-gnu"...
> Using host libthread_db library "/lib/libthread_db.so.1".
> (gdb) run
> Starting program: /home/nopik/Warsztat/antlr/examples-v3/C/C/main
> Including file 'jimtest.h'
> Created a symbolpp class
> define type size_t
> [cut many similar messages]
> Created a symbolpp class
> define type fd_mask
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x08054f75 in direct_declarator (ctx=0x80b0868) at CParser.c:16284
> 16284 if (
> (SCOPE_TOP(declaration))->isTypedef)
> Current language: auto; currently c++
> (gdb) where
> #0 0x08054f75 in direct_declarator (ctx=0x80b0868) at CParser.c:16284
> #1 0x08055897 in declarator (ctx=0x80b0868) at CParser.c:16156
> #2 0x0806efa4 in function_definition (ctx=0x80b0868) at CParser.c:13775
> #3 0x0806f5c3 in external_declaration (ctx=0x80b0868) at CParser.c:13652
> #4 0x0806f89e in translation_unit (ctx=0x80b0868) at CParser.c:13543
> #5 0x0806fbef in main (argc=1, argv=0xbf9b45a4) at main.c:188
> (gdb) print ctx
> $2 = (pCParser) 0x80b0868
> (gdb) print ctx->pCParser_declarationTop
> $3 = (pCParser_declaration_SCOPE) 0x0
> (gdb) quit
>
> Indeed, when in direct_declarator I change if( $declaration::isTypedef )
> to
> e.g. if( false ), program do not crash, though report a bunch of errors.
>
> Any ideas? Maybe I am using mismatched versions (e.g. old examples) or
> what? Original author must have ran it at least once, so probably I have
> messed something ;)
>
> PS. It seems, that antlr banner says wrong year - it should be 2008
> instead
> of 2007, right? :)
>
> --
> Best regards from
> Kamil Burzynski




-- 
Best regards from
Kamil Burzynski


From potrto at centrum.cz  Tue Apr  1 03:57:36 2008
From: potrto at centrum.cz (Tomas Potrusil)
Date: Tue, 1 Apr 2008 12:57:36 +0200
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <4e15f6f299a2864eab87c5e66052d427@temporal-wave.com>
References: <000d01c890d1$49009a40$db01cec0$@cz>
	<4e15f6f299a2864eab87c5e66052d427@temporal-wave.com>
Message-ID: <00ae01c893e7$320647e0$9612d7a0$@cz>

I was wrong. I do not need to "override" a tree, but a tree adaptor!
Investigating the mailing-list and the source code I've found that the
generated parser uses just the adapter and not the tree directly. But then
there is something strange in the current C runtime:

 

In Java runtime the tree adaptor interface works with "Object" objects only.
Of course it must abstract access to real tree nodes - it is an adaptor; not
just an object factory.  Terence Parr in a documentation says: "Rather than
have a separate factory and adaptor, I've merged them."

 

The C runtime simulates its Java version, but it doesn't work with void*
("Object" in C) but directly with ANTLR3_BASE_TREE. It is not an adaptor
anymore, it is just an object factory. Methods like

ANTLR3_TREE_ADAPTOR::addChild(...adaptor, pANTLR3_BASE_TREE t,
pANTLR3_BASE_TREE child)

are useless, because everyone can call t->addChild(child) directly.

 

This prevents me to use our existing AST C++ classes within ANTLR without
"subclassing" them from ANTLR3_COMMON_TREE, doesn't it.

 

Tom

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, March 31, 2008 1:39 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

You will probably find it best to override pANTLR3_COMMON_TREE by
encapsulating this within your own structure, as per the docs. This, as all
the structures are, is a set of pointers to functions and you need only
override the ones that you have to, just as in Java. Runtime type checking
'can' be an overhead, so i am not sure you would want to do that anyway, but
I will contemplate your suggestion of course as it has some merit.

 

Jim

 

From: Tomas Potrusil [mailto:potrto at centrum.cz] 
Sent: Friday, March 28, 2008 5:43 AM
To: Jim Idle
Cc: ANTLR
Subject: RE: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

Oh yes, I know. I've already made a prototype implementation of a part of
the grammar based on the idea I presented bellow (atom returns [OurNode*
result] etc.). It is working but it is a little bit clumsy and I cannot use
the resulting AST for a tree parsing - of course, I'm creating my own AST.

 

I've been thinking about the new tree adapter (I was talking about bellow)
and probably you are true,  few C++ wrappers could do the work. But there is
one inconvenience - there is not an "abstract" tree yet. The most abstract
tree is ANTLR3_BASE_TREE_struct which contains children vector and other
attributes. The ANTLR3_TREE_struct with only pointers to functions
(something like a Java interface) would suit my needs better. Our existing
AST nodes solve the storage already. Could you do it, please?

 

Another problem is safety. When somebody call
ANTLR3_BASE_TREE_struct::addChild(pANTLR3_BASE_TREE tree) for example, I
must trust him that the tree argument is really the tree he is calling. I
cannot write dynamic_cast<MyTreeWrapper>(tree->super). This cannot be solved
in the current C-based system.

 

Tom

 

From: Jim Idle

 

ANTLR 3.1 C target can now incorporate C++ code directly into the grammar
and so can easily call your existing C++ code. All you do is compile the C
output file as C++ (or rename it to .cpp perhaps). 

Can you try using that and let me know if you think that there is anything
that you could do if the runtime was C++ that you can't do right now? I
don't really think that there will be.

You need to get the latest 3.1 snapshot from the downloads page and use the
ANTLR Tool hjar in there. Then build the ANTLR 3.1 C runtime from the tar.gz
in the dist director under the runtime/C directory in the snapshot. 3 or 4
people have successfully integrated their C++ code with the C target now and
I think you will have similar success :-)

Jim

 

-----

Hallo,

 

I'm new to the list. I'm trying to use ANTLR for generating a SQL parser
because our current parser doesn't support Unicode input - it was generated
by Lex/Yacc. We use C++ and we have our own complex AST that is used by a
SQL engine already... So my idea is to write a tree adapter that would
create our existing AST nodes (they would just inherit ANTLR tree
interface).

 

And here comes a problem that ANTLR 3.x doesn't contain support for "pure"
C++ implementation. I've just found Jim Idle's "promise":

 

> Later I may well produce a complete C++ implementation from scratch,

> however, at this point I am not sure that it buys you anything. Please

> let me know if there are things you cannot do with the system as it

> stands (other than access the tokens and so on using C++ objects, which

> will be done later). 

 

I know that the problem could be solved with the current system somehow, but
it would be probably very ugly. So yes, complete C++ implementation will buy
us something! Or we can use ANTLR 2.x.

 

Right now we will probably try to build the AST by hand:

 

atom returns [OurNode* result]

@init { $result = NULL; }

:              NUMBER

                {

                               std::string str((char*)$NUMBER.text->chars,
$NUMBER.text->len);

                               $result = new OurNumberNode(str);

                };

 

Or do you have some other ideas?

 

Thanks

 

Tom

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/fe889173/attachment.html 

From dmitry.gusev at gmail.com  Tue Apr  1 04:18:00 2008
From: dmitry.gusev at gmail.com (Dmitry Gusev)
Date: Tue, 1 Apr 2008 15:18:00 +0400
Subject: [antlr-interest] Expression embedded in arbitary Text
In-Reply-To: <47F1FE9C.2030000@b0nz0.de>
References: <47F1FE9C.2030000@b0nz0.de>
Message-ID: <37a147f40804010418n1cded16ds53cbe015669597ef@mail.gmail.com>

I'd recommend you to use Regular expressions to extract the "#{bla}" things.

Then you'll be able to use these match results as an input to your Parser.


On Tue, Apr 1, 2008 at 1:21 PM, Joachim Rosskopf <antlr at b0nz0.de> wrote:

> Hello List,
>
> currently I?m working on a small grammar to build an expression language
> for an ETL tool. This works very nice for the expression ( e.g
> #{foo.bar('test')} ) itself. It gets parsed to the desired AST.
>
> But I?m not able to figure out Lexer/Parser rules, that make it possible
> to embed the expression in arbitary text (e.g. an URI,
> http://www.dom.com/#{res.uri()} <http://www.dom.com/#%7Bres.uri%28%29%7D>). So every character not consumed by
> the expression should be in one rule.
>
> Can someone please give me an hint? I attached the grammar.
> Thank you in advance.
>
> Best regards
> ---
> Joachim
>
> grammar el;
>
> options {
>        backtrack=true;
>        output=AST;
>        ASTLabelType=CommonTree;
>        language=CSharp;
> }
>
> tokens {
>        OBJECT_IDENTIFIER;
>        LOGICAL_EXPRESSION;
>        FUNCTIONAL_EXPRESSION;
>        VALUE_EXPRESSION;
>        ARGUMENT_LIST;
> }
>
> @lexer::namespace {
>        DataPumper.AntlrExpressionLanguage
> }
>
> @parser::namespace {
>        DataPumper.AntlrExpressionLanguage
> }
>
> statement
>        :       ( options { greedy=true; }  :    EXPRESSION_OPEN!
> expression EXPRESSION_CLOSE! )+
>        ;
>
> expression
>        :       functionalExpression            -> ^( FUNCTIONAL_EXPRESSION
> functionalExpression )
>        |       valueExpression                 -> ^( VALUE_EXPRESSION
> valueExpression )
>        |       literal
>        ;
>
> valueExpression
>        :       objectIdentifier
>        ;
>
>
> functionalExpression
>        :       objectIdentifier BRACE_OPEN! (argumentList)? BRACE_CLOSE!
>        ;
>
>
> argumentList
>        :       argument (SEMICOLON argument )*         -> ^( ARGUMENT_LIST
> argument+ )
>        ;
>
> argument
>        :        ( literal | statement )
>        ;
>
>
> objectIdentifier
>        :       IDENTIFIER ( '.' IDENTIFIER )* -> ^( OBJECT_IDENTIFIER
> IDENTIFIER+ )
>        ;
>
> fragment
> literal
>        :       HEX_LITERAL             -> ^( HEX_LITERAL )
>        |       DECIMAL_LITERAL         -> ^( DECIMAL_LITERAL )
>        |       OCTAL_LITERAL           -> ^( OCTAL_LITERAL )
>        |       FLOATING_POINT_LITERAL  -> ^( FLOATING_POINT_LITERAL )
>        |       STRING_LITERAL          -> ^( STRING_LITERAL )
>        ;
>
> IDENTIFIER
>        :       LETTER ( LETTER | '0'..'9')*
>        ;
>
> fragment
> LETTER
>        :       'A'..'Z'
>        |       'a'..'z'
>        ;
>
> HEX_LITERAL
>        :       '0' ('x'|'X') HEX_DIGIT+
>        ;
>
> DECIMAL_LITERAL
>        :       ('0' | '1'..'9' '0'..'9'*)
>        ;
>
> OCTAL_LITERAL
>        :       '0' ('0'..'7')+
>        ;
>
> fragment
> HEX_DIGIT
>        :       ('0'..'9' | 'a'..'f' | 'A'..'F')
>        ;
>
>
> FLOATING_POINT_LITERAL
>        :       ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>        |       '.' ('0'..'9')+ EXPONENT?
>        |       ('0'..'9')+ EXPONENT?
>        ;
>
> fragment
> EXPONENT
>        :       ('e'|'E') ('+'|'-')? ('0'..'9')+
>        ;
>
>
> STRING_LITERAL
>        :       '\'' STRING '\''
>        ;
>
> fragment
> STRING
>        :       ( ESCAPESEQ | ~('\'' | '\\') )*
>        ;
>
> fragment
> ESCAPESEQ
>        :       '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>        ;
>
>
> WS
>        :       (' '|'\r'|'\t'|'\u000C'|'\n') { channel=99; }
>        ;
>
> SEMICOLON
>        :       ','
>        ;
>
> EXPRESSION_OPEN
>        :       '#{'
>        ;
>
> EXPRESSION_CLOSE
>        :       '}'
>        ;
>
> BRACE_OPEN
>        :       '('
>        ;
>
> BRACE_CLOSE
>        :       ')'
>        ;
>
> COMMENT
>        :       '/*' ( options {greedy=false;} : . )* '*/' { channel=99; }
>        ;
>
> LINE_COMMENT
>        :       '//' ~('\n'|'\r')* '\r'? '\n' { channel=99; }
>        ;
>
>
--
Dmitry Gusev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/8ea13939/attachment-0001.html 

From antlr at b0nz0.de  Tue Apr  1 04:45:29 2008
From: antlr at b0nz0.de (Joachim Rosskopf)
Date: Tue, 01 Apr 2008 13:45:29 +0200
Subject: [antlr-interest] Expression embedded in arbitary Text
In-Reply-To: <37a147f40804010418n1cded16ds53cbe015669597ef@mail.gmail.com>
References: <47F1FE9C.2030000@b0nz0.de>
	<37a147f40804010418n1cded16ds53cbe015669597ef@mail.gmail.com>
Message-ID: <47F22059.10509@b0nz0.de>

Hello Drmitry,

that was the approach I was using previously. I parsed the expressions 
soley with regex. But that was getting pretty ugly and doesn?t work well 
with nested as well as suceeding expression. So I searched for something 
like:

statement
    :    ( options { greedy=false; } :  . )+
    |    ( options { greedy=true; }  :   EXPRESSION_OPEN! expression 
EXPRESSION_CLOSE!  )+
    ;

But the point '.' in the above example stands for any defined lexer rule 
and not any character as I would like to have.
Is that possible with antlr?

Regards
---
Joachim

Dmitry Gusev schrieb:
> I'd recommend you to use Regular expressions to extract the "#{bla}" 
> things.
>
> Then you'll be able to use these match results as an input to your Parser.
>
>
> On Tue, Apr 1, 2008 at 1:21 PM, Joachim Rosskopf <antlr at b0nz0.de 
> <mailto:antlr at b0nz0.de>> wrote:
>
>     Hello List,
>
>     currently I?m working on a small grammar to build an expression
>     language
>     for an ETL tool. This works very nice for the expression ( e.g
>     #{foo.bar('test')} ) itself. It gets parsed to the desired AST.
>
>     But I?m not able to figure out Lexer/Parser rules, that make it
>     possible
>     to embed the expression in arbitary text (e.g. an URI,
>     http://www.dom.com/#{res.uri()}
>     <http://www.dom.com/#%7Bres.uri%28%29%7D> ). So every character
>     not consumed by
>     the expression should be in one rule.
>
>     Can someone please give me an hint? I attached the grammar.
>     Thank you in advance.
>
>     Best regards
>     ---
>     Joachim
>
>     grammar el;
>
>     options {
>            backtrack=true;
>            output=AST;
>            ASTLabelType=CommonTree;
>            language=CSharp;
>     }
>
>     tokens {
>            OBJECT_IDENTIFIER;
>            LOGICAL_EXPRESSION;
>            FUNCTIONAL_EXPRESSION;
>            VALUE_EXPRESSION;
>            ARGUMENT_LIST;
>     }
>
>     @lexer::namespace {
>            DataPumper.AntlrExpressionLanguage
>     }
>
>     @parser::namespace {
>            DataPumper.AntlrExpressionLanguage
>     }
>
>     statement
>            :       ( options { greedy=true; }  :    EXPRESSION_OPEN!
>     expression EXPRESSION_CLOSE! )+
>            ;
>
>     expression
>            :       functionalExpression            -> ^(
>     FUNCTIONAL_EXPRESSION functionalExpression )
>            |       valueExpression                 -> ^(
>     VALUE_EXPRESSION valueExpression )
>            |       literal
>            ;
>
>     valueExpression
>            :       objectIdentifier
>            ;
>
>
>     functionalExpression
>            :       objectIdentifier BRACE_OPEN! (argumentList)?
>     BRACE_CLOSE!
>            ;
>
>
>     argumentList
>            :       argument (SEMICOLON argument )*         -> ^(
>     ARGUMENT_LIST argument+ )
>            ;
>
>     argument
>            :        ( literal | statement )
>            ;
>
>
>     objectIdentifier
>            :       IDENTIFIER ( '.' IDENTIFIER )* -> ^(
>     OBJECT_IDENTIFIER IDENTIFIER+ )
>            ;
>
>     fragment
>     literal
>            :       HEX_LITERAL             -> ^( HEX_LITERAL )
>            |       DECIMAL_LITERAL         -> ^( DECIMAL_LITERAL )
>            |       OCTAL_LITERAL           -> ^( OCTAL_LITERAL )
>            |       FLOATING_POINT_LITERAL  -> ^( FLOATING_POINT_LITERAL )
>            |       STRING_LITERAL          -> ^( STRING_LITERAL )
>            ;
>
>     IDENTIFIER
>            :       LETTER ( LETTER | '0'..'9')*
>            ;
>
>     fragment
>     LETTER
>            :       'A'..'Z'
>            |       'a'..'z'
>            ;
>
>     HEX_LITERAL
>            :       '0' ('x'|'X') HEX_DIGIT+
>            ;
>
>     DECIMAL_LITERAL
>            :       ('0' | '1'..'9' '0'..'9'*)
>            ;
>
>     OCTAL_LITERAL
>            :       '0' ('0'..'7')+
>            ;
>
>     fragment
>     HEX_DIGIT
>            :       ('0'..'9' | 'a'..'f' | 'A'..'F')
>            ;
>
>
>     FLOATING_POINT_LITERAL
>            :       ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>            |       '.' ('0'..'9')+ EXPONENT?
>            |       ('0'..'9')+ EXPONENT?
>            ;
>
>     fragment
>     EXPONENT
>            :       ('e'|'E') ('+'|'-')? ('0'..'9')+
>            ;
>
>
>     STRING_LITERAL
>            :       '\'' STRING '\''
>            ;
>
>     fragment
>     STRING
>            :       ( ESCAPESEQ | ~('\'' | '\\') )*
>            ;
>
>     fragment
>     ESCAPESEQ
>            :       '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>            ;
>
>
>     WS
>            :       (' '|'\r'|'\t'|'\u000C'|'\n') { channel=99; }
>            ;
>
>     SEMICOLON
>            :       ','
>            ;
>
>     EXPRESSION_OPEN
>            :       '#{'
>            ;
>
>     EXPRESSION_CLOSE
>            :       '}'
>            ;
>
>     BRACE_OPEN
>            :       '('
>            ;
>
>     BRACE_CLOSE
>            :       ')'
>            ;
>
>     COMMENT
>            :       '/*' ( options {greedy=false;} : . )* '*/' {
>     channel=99; }
>            ;
>
>     LINE_COMMENT
>            :       '//' ~('\n'|'\r')* '\r'? '\n' { channel=99; }
>            ;
>
>
> --
> Dmitry Gusev


From dmitry.gusev at gmail.com  Tue Apr  1 04:55:17 2008
From: dmitry.gusev at gmail.com (Dmitry Gusev)
Date: Tue, 1 Apr 2008 15:55:17 +0400
Subject: [antlr-interest] Expression embedded in arbitary Text
In-Reply-To: <47F22059.10509@b0nz0.de>
References: <47F1FE9C.2030000@b0nz0.de>
	<37a147f40804010418n1cded16ds53cbe015669597ef@mail.gmail.com>
	<47F22059.10509@b0nz0.de>
Message-ID: <37a147f40804010455v2a5f5380v8d331233f824913c@mail.gmail.com>

On Tue, Apr 1, 2008 at 3:45 PM, Joachim Rosskopf <antlr at b0nz0.de> wrote:

> Hello Drmitry,
>
> that was the approach I was using previously. I parsed the expressions
> soley with regex. But that was getting pretty ugly and doesn?t work well
> with nested as well as suceeding expression. So I searched for something
> like:
>
> statement
>    :    ( options { greedy=false; } :  . )+
>     |    ( options { greedy=true; }  :   EXPRESSION_OPEN! expression
> EXPRESSION_CLOSE!  )+
>    ;
>
> But the point '.' in the above example stands for any defined lexer rule
> and not any character as I would like to have.
> Is that possible with antlr?


You can always declare a token that match any char you want and refer to
that token


>
> Regards
> ---
> Joachim
>
> Dmitry Gusev schrieb:
> > I'd recommend you to use Regular expressions to extract the "#{bla}"
> > things.
> >
> > Then you'll be able to use these match results as an input to your
> Parser.
> >
> >
> > On Tue, Apr 1, 2008 at 1:21 PM, Joachim Rosskopf <antlr at b0nz0.de
> > <mailto:antlr at b0nz0.de>> wrote:
> >
> >     Hello List,
> >
> >     currently I?m working on a small grammar to build an expression
> >     language
> >     for an ETL tool. This works very nice for the expression ( e.g
> >     #{foo.bar('test')} ) itself. It gets parsed to the desired AST.
> >
> >     But I?m not able to figure out Lexer/Parser rules, that make it
> >     possible
> >     to embed the expression in arbitary text (e.g. an URI,
> >     http://www.dom.com/#{res.uri()}<http://www.dom.com/#%7Bres.uri%28%29%7D>
> >     <http://www.dom.com/#%7Bres.uri%28%29%7D> ). So every character
> >     not consumed by
> >     the expression should be in one rule.
> >
> >     Can someone please give me an hint? I attached the grammar.
> >     Thank you in advance.
> >
> >     Best regards
> >     ---
> >     Joachim
> >
> >     grammar el;
> >
> >     options {
> >            backtrack=true;
> >            output=AST;
> >            ASTLabelType=CommonTree;
> >            language=CSharp;
> >     }
> >
> >     tokens {
> >            OBJECT_IDENTIFIER;
> >            LOGICAL_EXPRESSION;
> >            FUNCTIONAL_EXPRESSION;
> >            VALUE_EXPRESSION;
> >            ARGUMENT_LIST;
> >     }
> >
> >     @lexer::namespace {
> >            DataPumper.AntlrExpressionLanguage
> >     }
> >
> >     @parser::namespace {
> >            DataPumper.AntlrExpressionLanguage
> >     }
> >
> >     statement
> >            :       ( options { greedy=true; }  :    EXPRESSION_OPEN!
> >     expression EXPRESSION_CLOSE! )+
> >            ;
> >
> >     expression
> >            :       functionalExpression            -> ^(
> >     FUNCTIONAL_EXPRESSION functionalExpression )
> >            |       valueExpression                 -> ^(
> >     VALUE_EXPRESSION valueExpression )
> >            |       literal
> >            ;
> >
> >     valueExpression
> >            :       objectIdentifier
> >            ;
> >
> >
> >     functionalExpression
> >            :       objectIdentifier BRACE_OPEN! (argumentList)?
> >     BRACE_CLOSE!
> >            ;
> >
> >
> >     argumentList
> >            :       argument (SEMICOLON argument )*         -> ^(
> >     ARGUMENT_LIST argument+ )
> >            ;
> >
> >     argument
> >            :        ( literal | statement )
> >            ;
> >
> >
> >     objectIdentifier
> >            :       IDENTIFIER ( '.' IDENTIFIER )* -> ^(
> >     OBJECT_IDENTIFIER IDENTIFIER+ )
> >            ;
> >
> >     fragment
> >     literal
> >            :       HEX_LITERAL             -> ^( HEX_LITERAL )
> >            |       DECIMAL_LITERAL         -> ^( DECIMAL_LITERAL )
> >            |       OCTAL_LITERAL           -> ^( OCTAL_LITERAL )
> >            |       FLOATING_POINT_LITERAL  -> ^( FLOATING_POINT_LITERAL
> )
> >            |       STRING_LITERAL          -> ^( STRING_LITERAL )
> >            ;
> >
> >     IDENTIFIER
> >            :       LETTER ( LETTER | '0'..'9')*
> >            ;
> >
> >     fragment
> >     LETTER
> >            :       'A'..'Z'
> >            |       'a'..'z'
> >            ;
> >
> >     HEX_LITERAL
> >            :       '0' ('x'|'X') HEX_DIGIT+
> >            ;
> >
> >     DECIMAL_LITERAL
> >            :       ('0' | '1'..'9' '0'..'9'*)
> >            ;
> >
> >     OCTAL_LITERAL
> >            :       '0' ('0'..'7')+
> >            ;
> >
> >     fragment
> >     HEX_DIGIT
> >            :       ('0'..'9' | 'a'..'f' | 'A'..'F')
> >            ;
> >
> >
> >     FLOATING_POINT_LITERAL
> >            :       ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
> >            |       '.' ('0'..'9')+ EXPONENT?
> >            |       ('0'..'9')+ EXPONENT?
> >            ;
> >
> >     fragment
> >     EXPONENT
> >            :       ('e'|'E') ('+'|'-')? ('0'..'9')+
> >            ;
> >
> >
> >     STRING_LITERAL
> >            :       '\'' STRING '\''
> >            ;
> >
> >     fragment
> >     STRING
> >            :       ( ESCAPESEQ | ~('\'' | '\\') )*
> >            ;
> >
> >     fragment
> >     ESCAPESEQ
> >            :       '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
> >            ;
> >
> >
> >     WS
> >            :       (' '|'\r'|'\t'|'\u000C'|'\n') { channel=99; }
> >            ;
> >
> >     SEMICOLON
> >            :       ','
> >            ;
> >
> >     EXPRESSION_OPEN
> >            :       '#{'
> >            ;
> >
> >     EXPRESSION_CLOSE
> >            :       '}'
> >            ;
> >
> >     BRACE_OPEN
> >            :       '('
> >            ;
> >
> >     BRACE_CLOSE
> >            :       ')'
> >            ;
> >
> >     COMMENT
> >            :       '/*' ( options {greedy=false;} : . )* '*/' {
> >     channel=99; }
> >            ;
> >
> >     LINE_COMMENT
> >            :       '//' ~('\n'|'\r')* '\r'? '\n' { channel=99; }
> >            ;
> >
> >
> > --
> > Dmitry Gusev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/aa7fdf5d/attachment.html 

From chris at lambrou.net  Tue Apr  1 07:41:27 2008
From: chris at lambrou.net (Chris Lambrou)
Date: Tue, 1 Apr 2008 15:41:27 +0100
Subject: [antlr-interest] JavaScript grammar
In-Reply-To: <C3525AF49F7D374D8E4D3C46ED4BC6211685DD@srvxdcex.xebic.com>
References: <70bbae280803281313i70fb25d1hbd758ac5e1049ad2@mail.gmail.com>
	<BAYC1-PASMTP04A88DA32D362FF409C90DF5FB0@CEZ.ICE>
	<70bbae280803292243k2d575d3et4b67945a013e03dc@mail.gmail.com>
	<C3525AF49F7D374D8E4D3C46ED4BC6211685DD@srvxdcex.xebic.com>
Message-ID: <70bbae280804010741m62f0bfdh41111ad913084d2@mail.gmail.com>

Patrick,

Thanks for the suggestion. I'll give it a try. Could you please elaborate on
how to ensure that there are no line terminators in those rules which
disallow them? It's a bit disappointing that these kinds of manipulation tie
the grammar to a specific language, i.e. Java, but I think that's
unavoidable if I want to eliminate the excessive LT!* elements from all of
the rules. It's a simple trade-off, I guess.

What problem are you having with unicode identifiers?  I don't think there
was any problem with Greg's original grammar (apart from the ANTLRWorks
debugger issue I mentioned). As for regular expression literals, I'm
inclined to simply treat them as separate Regex tokens without any further
treatment, and leave their analysis to a separate grammar. Interestingly
enough, whilst the ECMAScript spec has a whole section on the composition of
regular expression literals, it doesn't appear to incorporate them into the
rest of the grammar - not that I could see, anyway. I think they can be
included as an alternative in the literal rule, which then becomes

literal : 'null' | 'true' | 'false' | StringLiteral | NumericLiteral | Regex


Regards,

Chris





On 31/03/2008, Patrick Hulsmeijer <phulsmeijer at xebic.com> wrote:
>
>  Chris,
>
>
>
> I've written an complete ECMAScript compiant grammar recently.
>
> I've struggled with the following issues:
>
> -          Unicode identifiers
>
> -          Regular expression literals
>
> -          Semicolon insertion
>
>
>
> For the semicolon insertion issue I've taken the following approach.  The
> line terminators are left on the hidden channel. In the parser the semicolon
> (e.g. in statements) is defined as a rule. In this rule I scan the token
> stream for line terminators and promote the first encountered to the default
> channel. Line terminator are also an alternative in this rule. Something
> like this:
>
>
>
> semic:
>
> @init
>
> {
>
>                 int marker = input.mark();
>
>                 promoteEOL();
>
> }
>
>                 : SEMIC
>
>                 | EOL
>
>                 | RBRACE { input.rewind(marker); }
>
>                 | EOF
>
>                 ;
>
>
>
> The grammar also scans for line terminators in places where the
> specification states there are none allowed (e.g. between "return" and the
> following optional expression in the return statement).
>
>
>
> Hope this helps.
>
>
>
> Regards,
>
> patrick.
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Chris Lambrou
> *Sent:* zondag 30 maart 2008 7:43
> *To:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] JavaScript grammar
>
>
>
>
> The approach I took was to keep LT tokens on the default channel, for the
> benefit of the few rules where line terminators are important. For example,
> the ECMAScript spec defines a return statement as follows:
>
> 'return' [no LineTerminator here] Expression[optional] ';'
>
> In the ANTLR grammar, this becomes:
>
> returnStatement : 'return' expression (LT | ';')! ;
>
> You can see that the statement may end either with a semicolon or with a
> line terminator, which the ECMAScript spec permits. This appears to work
> just fine. The only part I find annoying is that because the LT tokens are
> not on the hidden channel, all of the other rules need to deal with them
> too. For example, the ifStatement rule looks like this:
>
> ifStatement : 'if' LT!* '(' LT!* expression LT!* ')' LT!* statement (LT!*
> 'else' LT!* statement)? ;
>
> when it would be much clearer if it looked like this:
>
> ifStatement : 'if' '(' expression ')' statement ('else' statement)? ;
>
> This affects all of the parser rules, which makes the grammar less
> readable. I did think about performing some filtering of the token stream
> between the lexing and parsing phases, but the rules for automatic semicolon
> insertion defined by the ECMAScript are a bit nasty. It's just too difficult
> to actually determine where the virtual semicolons should be, without the
> grammatical context that only the parsing stage can provide. In any case, I
> think the grammar would be less useful if it required any special runtime
> tweaks to make it work.
>
> I think what would really solve the problem would be to have the LT tokens
> on the hidden channel by default, and then dynamically switch them to the
> default channel only for those rules that require it. I'm afraid I'm not yet
> familiar enough with channels and token streams to know if this is even
> possible. My guess is that it probably isn't, but it can't hurt to ask.
>
> Chris
>
> P.S. I've just remembered that although the grammar compiles just fine, I
> couldn't get it to work with the ANTLRWorks debugger. It seems like it's the
> huge Identifier lexer rule that causes the problem - I had to temporarily
> replace it with something simpler in order to persuade the debugger to work.
> I presume this is a bug in ANTLRWorks - if anyone is interested in this, I
> can provide more information, perhaps off-line.
>
>  On 30/03/2008, *Benjamin Shropshire* <shro8822 at vandals.uidaho.edu> wrote:
>
> Chris Lambrou wrote:
>
>
> [snip]
>
>
>
> >    1. Unlike other whitespace characters, line separators (represented
>
> >       by my LT token type) are important in JavaScript, as you're
> >       allowed to use them to terminate statements instead of the usual
> >       terminating semicolon character. As a result, I cannot 'hide'
> >       line separators like other whitespace characters, and my grammar
> >       is peppered with LT!* sequences. Is there a way to place the LT
> >       tokens on the hidden channel, and then optionally reveal them
> >       only in the few rules that require it?
>
>
> [snip]
>
>
>
> It is most likely not kosher, but if you can look at an LT in a sequence
> of tokens test if it is a virtual semicolon (without knowing anything
> but the adjoining tokens) then some sort of preprocessor (I'm thinking:
> lex, filter tokens into new lex stream, parse) might be able to convert
> what is needed. You might call the filter a TokenSedStream or something
> like that. I did something like that (but with the text) to deal with
> indentation sensitivity in my only attempt with ANTLR. As I said, not
> kosher, but if all else fails "You gotta go with what works." (Law #37)
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/9d264420/attachment-0001.html 

From dave at badgers-in-foil.co.uk  Tue Apr  1 08:20:59 2008
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 1 Apr 2008 15:20:59 +0000
Subject: [antlr-interest] JavaScript grammar
In-Reply-To: <70bbae280804010741m62f0bfdh41111ad913084d2@mail.gmail.com>
References: <70bbae280803281313i70fb25d1hbd758ac5e1049ad2@mail.gmail.com>
	<BAYC1-PASMTP04A88DA32D362FF409C90DF5FB0@CEZ.ICE>
	<70bbae280803292243k2d575d3et4b67945a013e03dc@mail.gmail.com>
	<C3525AF49F7D374D8E4D3C46ED4BC6211685DD@srvxdcex.xebic.com>
	<70bbae280804010741m62f0bfdh41111ad913084d2@mail.gmail.com>
Message-ID: <20080401152056.GA7213@badgers-in-foil.co.uk>

On Tue, Apr 01, 2008 at 03:41:27PM +0100, Chris Lambrou wrote:

> As for regular expression literals, I'm
> inclined to simply treat them as separate Regex tokens without any further
> treatment, and leave their analysis to a separate grammar. Interestingly
> enough, whilst the ECMAScript spec has a whole section on the composition of
> regular expression literals, it doesn't appear to incorporate them into the
> rest of the grammar - not that I could see, anyway. I think they can be
> included as an alternative in the literal rule, which then becomes
> 
> literal : 'null' | 'true' | 'false' | StringLiteral | NumericLiteral | Regex

Regular expression literals are ambiguous with '/' (division) unless you
give ANTLR a hand to work out what's what.  Some discussion here,

  http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control


ta,
dave

-- 
http://david.holroyd.me.uk/

From dbrunton at gmail.com  Tue Apr  1 08:52:21 2008
From: dbrunton at gmail.com (David Brunton)
Date: Tue, 1 Apr 2008 11:52:21 -0400
Subject: [antlr-interest] section identifiers
Message-ID: <586d73570804010852n381798edh8fbd0452b33adc09@mail.gmail.com>

I am parsing some files that have sections demarcated with the "begin" and
"end" at the start of a line, followed by a (matching) arbitrary identifier:

<snip>
begin foo
some stuff
some other stuff
end but don't end the section!
other stuff
end foo
</snip>

I don't need to parse anything inside of the section.

I imagine this is a fairly common problem- any pointers?

Best,
David.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/d6eabe95/attachment.html 

From jimi at temporal-wave.com  Tue Apr  1 09:42:26 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 09:42:26 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <788386369dd9ba06fb581d1c6ef75f70.qmail@home.pl>
Message-ID: <ecc7deaa9f33394e8b3bf5705acbbb51@temporal-wave.com>

Are you using the examples that go with the 3.1b runtime? It looks to me like you are not. There should be an examples tar for 3.1 somewhere, though now that I look for it, I cannot find it either. You can get the latest examples from Fisheye, however the tarball downloads seem to yield invalid archives so you may need to get the source directly from the tree.

http://fisheye2.cenqua.com/browse/antlr-examples

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kamil Burzynski
> Sent: Tuesday, April 01, 2008 2:56 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem with C target output on example C
> grammar
> 
> Hello,
> 
> I am new to this list as well as to antlr, so please be gentle ;) My
> goal
> is to have flexible C/C++ parser, after trying yacc/lex for a short
> while I
> decided to go to antlr. Since I want my project in C++, it seems, that
> antlr 3.1b is better than official 3.0.1. Anyway, I have installed
> antlr-2008-03-13.12.tar.gz with libantlr3c-3.1b2.tar.gz and tried to
> compile some examples from examples-v3.1b1.tar.gz. The simple ones do
> work,





From jimi at temporal-wave.com  Tue Apr  1 09:53:39 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 09:53:39 -0700
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <00ae01c893e7$320647e0$9612d7a0$@cz>
Message-ID: <b4443b867f63b447abb65e98083cbb14@temporal-wave.com>

Please read the comments in the source for common tree adaptor and base tree adaptor before attempting this, as well as http://www.antlr.org/api/C/index.html. 

 

In the C version , all adaptors and so on should return a pointer to pANTLR_BASE_TREE, which should be contained within your own tree nodes (which can contain anything so long as they have an ANTLR_BASE_TREE interface. That interface contains a pointer to the higher level structure, such as COMMON_TREE, which in turn can point to an even higher level tree. But, you need to implement an adaptor, which will handle the tree for you and which the generated code will use. The adaptor needs to provide the methods in the BASE_TREE_ADAPTOR. You can probably create a COMMON adaptor, then install pointers to your own methods for those that won't work as is. To be honest though, I don't know of anyone that is doing this, so you may be pioneering here, though the standard implementation uses the same mechanisms, so it must 'work' ;-)

 

It would seem that in your case you will want both an adaptor and a tree implementation. You might find it just as easy to implement the standard tree, then use a tree grammar to construct your own tree, though you shoudl not HAVE to do this.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tomas Potrusil
Sent: Tuesday, April 01, 2008 3:58 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

I was wrong. I do not need to "override" a tree, but a tree adaptor! Investigating the mailing-list and the source code I've found that the generated parser uses just the adapter and not the tree directly. But then there is something strange in the current C runtime:

 

In Java runtime the tree adaptor interface works with "Object" objects only. Of course it must abstract access to real tree nodes - it is an adaptor; not just an object factory.  Terence Parr in a documentation says: "Rather than have a separate factory and adaptor, I've merged them."

 

The C runtime simulates its Java version, but it doesn't work with void* ("Object" in C) but directly with ANTLR3_BASE_TREE. It is not an adaptor anymore, it is just an object factory. Methods like

ANTLR3_TREE_ADAPTOR::addChild(...adaptor, pANTLR3_BASE_TREE t, pANTLR3_BASE_TREE child)

are useless, because everyone can call t->addChild(child) directly.

 

This prevents me to use our existing AST C++ classes within ANTLR without "subclassing" them from ANTLR3_COMMON_TREE, doesn't it...

 

Tom

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, March 31, 2008 1:39 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

You will probably find it best to override pANTLR3_COMMON_TREE by encapsulating this within your own structure, as per the docs. This, as all the structures are, is a set of pointers to functions and you need only override the ones that you have to, just as in Java. Runtime type checking 'can' be an overhead, so i am not sure you would want to do that anyway, but I will contemplate your suggestion of course as it has some merit.

 

Jim

 

From: Tomas Potrusil [mailto:potrto at centrum.cz] 
Sent: Friday, March 28, 2008 5:43 AM
To: Jim Idle
Cc: ANTLR
Subject: RE: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

Oh yes, I know. I've already made a prototype implementation of a part of the grammar based on the idea I presented bellow (atom returns [OurNode* result] etc.). It is working but it is a little bit clumsy and I cannot use the resulting AST for a tree parsing - of course, I'm creating my own AST.

 

I've been thinking about the new tree adapter (I was talking about bellow) and probably you are true,  few C++ wrappers could do the work. But there is one inconvenience - there is not an "abstract" tree yet. The most abstract tree is ANTLR3_BASE_TREE_struct which contains children vector and other attributes. The ANTLR3_TREE_struct with only pointers to functions (something like a Java interface) would suit my needs better. Our existing AST nodes solve the storage already... Could you do it, please?

 

Another problem is safety. When somebody call ANTLR3_BASE_TREE_struct::addChild(pANTLR3_BASE_TREE tree) for example, I must trust him that the tree argument is really the tree he is calling. I cannot write dynamic_cast<MyTreeWrapper>(tree->super). This cannot be solved in the current C-based system.

 

Tom

 

From: Jim Idle

 

ANTLR 3.1 C target can now incorporate C++ code directly into the grammar and so can easily call your existing C++ code. All you do is compile the C output file as C++ (or rename it to .cpp perhaps). 

Can you try using that and let me know if you think that there is anything that you could do if the runtime was C++ that you can't do right now? I don't really think that there will be.

You need to get the latest 3.1 snapshot from the downloads page and use the ANTLR Tool hjar in there. Then build the ANTLR 3.1 C runtime from the tar.gz in the dist director under the runtime/C directory in the snapshot. 3 or 4 people have successfully integrated their C++ code with the C target now and I think you will have similar success :-)

Jim

 

-----

Hallo,

 

I'm new to the list. I'm trying to use ANTLR for generating a SQL parser because our current parser doesn't support Unicode input - it was generated by Lex/Yacc. We use C++ and we have our own complex AST that is used by a SQL engine already... So my idea is to write a tree adapter that would create our existing AST nodes (they would just inherit ANTLR tree interface).

 

And here comes a problem that ANTLR 3.x doesn't contain support for "pure" C++ implementation. I've just found Jim Idle's "promise":

 

> Later I may well produce a complete C++ implementation from scratch,

> however, at this point I am not sure that it buys you anything. Please

> let me know if there are things you cannot do with the system as it

> stands (other than access the tokens and so on using C++ objects, which

> will be done later). 

 

I know that the problem could be solved with the current system somehow, but it would be probably very ugly. So yes, complete C++ implementation will buy us something! Or we can use ANTLR 2.x...

 

Right now we will probably try to build the AST by hand:

 

atom returns [OurNode* result]

@init { $result = NULL; }

:              NUMBER

                {

                               std::string str((char*)$NUMBER.text->chars, $NUMBER.text->len);

                               $result = new OurNumberNode(str);

                };

 

Or do you have some other ideas?

 

Thanks

 

Tom

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/52424eef/attachment-0001.html 

From jimi at temporal-wave.com  Tue Apr  1 10:10:36 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 10:10:36 -0700
Subject: [antlr-interest] section identifiers
In-Reply-To: <586d73570804010852n381798edh8fbd0452b33adc09@mail.gmail.com>
Message-ID: <c5b133bce15cec43ba0d77ec1b190910@temporal-wave.com>

You can either use a filtering lexer, or give your lexer some states using @lexer::header { int state; }. If all you want to do is capture the stuff in between the begin and end and return a token for it, then you could probably just use a filtering lexer, or if it really is just that simple, then just a rule to capture the being and end stuff with some embedded logic to only recognize the end when the following word matches the start word (which you will capture after 'being' and check for after 'end'.

 

However, you might just find that awk does this just as well if this is all you need out of the file. If this is just part of a larger picture, then a single lexer rule for 'being' and a bit of custom code using input.LA() and input.consume() to find the end will do just as well.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Brunton
Sent: Tuesday, April 01, 2008 8:52 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] section identifiers

 

I am parsing some files that have sections demarcated with the "begin" and "end" at the start of a line, followed by a (matching) arbitrary identifier:

<snip>
begin foo
some stuff
some other stuff
end but don't end the section!
other stuff
end foo
</snip>

I don't need to parse anything inside of the section.

I imagine this is a fairly common problem- any pointers?

Best,
David.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/28ef44b4/attachment.html 

From jimi at temporal-wave.com  Tue Apr  1 10:14:16 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 10:14:16 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <ecc7deaa9f33394e8b3bf5705acbbb51@temporal-wave.com>
Message-ID: <4751e8f135d9ac44a86c9379042b275b@temporal-wave.com>

To follow up on this, I did successfully download the .tgz of the examples from Fisheye by right clicking the tgz link and selecting "save as" from IE 7, but the .zip format seems to be corrupt.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Tuesday, April 01, 2008 9:42 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problem with C target output on example C
> grammar
> 
> Are you using the examples that go with the 3.1b runtime? It looks to
> me like you are not. There should be an examples tar for 3.1 somewhere,
> though now that I look for it, I cannot find it either. You can get the
> latest examples from Fisheye, however the tarball downloads seem to
> yield invalid archives so you may need to get the source directly from
> the tree.
> 
> http://fisheye2.cenqua.com/browse/antlr-examples
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Kamil Burzynski
> > Sent: Tuesday, April 01, 2008 2:56 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Problem with C target output on example C
> > grammar
> >
> > Hello,
> >
> > I am new to this list as well as to antlr, so please be gentle ;) My
> > goal
> > is to have flexible C/C++ parser, after trying yacc/lex for a short
> > while I
> > decided to go to antlr. Since I want my project in C++, it seems,
> that
> > antlr 3.1b is better than official 3.0.1. Anyway, I have installed
> > antlr-2008-03-13.12.tar.gz with libantlr3c-3.1b2.tar.gz and tried to
> > compile some examples from examples-v3.1b1.tar.gz. The simple ones do
> > work,
> 
> 
> 





From snyder at t-vec.com  Tue Apr  1 11:02:43 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Tue, 1 Apr 2008 14:02:43 -0400
Subject: [antlr-interest] Some C target issues
Message-ID: <002801c89422$961c11c0$265d080a@Gizmo>

Hello,

 

1) Is there a default ASTLabelType=[?] to get rid of this warning? 

warning(152): tree grammar MScriptToBlock has no ASTLabelType option

 

2) Following the guidelines here: http://www.antlr.org/api/C/index.html, in
my Tree grammar I tried changing 

 

@header {

#include <string.h>

#include <string.h>

#include <iostream.h>

}

 

To this

 

@parser::includes {

#include <string.h>

#include <iostream.h>

}

 

And I get this error:

error(143): unknown or invalid action scope for tree grammar: parser

 

@parser::header also failed with the same error

 

3) The last version of code I have from 3/13/2008 still had this warning

y:\t_vec_cots\include\antlr3\antlr3defs.h(75) : warning C4005:
'_CRT_SECURE_NO_DEPRECATE' : macro redefinition

 

4) I tried using the @declarations section in my tree grammar and although
no warnings were generated none of the code in the @declarations section was
added to either the generated C or h files.

 

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/c01c8b7e/attachment.html 

From yau at LGSInnovations.com  Tue Apr  1 11:03:28 2008
From: yau at LGSInnovations.com (Yau Kwong K (Tony))
Date: Tue, 1 Apr 2008 14:03:28 -0400
Subject: [antlr-interest] Parse data structure as input
Message-ID: <8A2EB455D62ADA438CD446EDF41F2D0D023EF12F@BLTSXVS01.govsolutions.com>

Hi all,

 

I'm new to antlr and I'm trying to find out if Antlr can parse C data
structure (instead of plain character stream) as input. My data
structures have struct containing 

different data types and pointers to multiple different struct (like a
tree).  They are all in C target.

I would like to write a tree walker to walk the data structure and take
appropriate action when a particular value is set inside the input
structure.

 

Any suggestions would be appreciated.

 

Thanks,

Tony

 

  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/2a4fab43/attachment-0001.html 

From simon.woods at virgin.net  Tue Apr  1 11:20:23 2008
From: simon.woods at virgin.net (Simon Woods)
Date: Tue, 01 Apr 2008 19:20:23 +0100
Subject: [antlr-interest] Newbie Q: Tree Grammar, Template or manual
Message-ID: <47F27CE7.2030602@virgin.net>

Hi

I'm just beginning to start using antlr -so forgive the dumb question!

I am trying to develop a query language which is quite like (derivative 
of) SQL but has other structures which are more explicit of the data 
structures being interrogated which I will then tranform into SQL. I 
have developed an outline grammar for my query language but am wondering 
what is the best option for generating SQL. Certain parts of a statement 
may map directly onto a SQL clause whereas other bits may need 
completely re-writing to fit SQL.

I would be grateful of any pointers, clues or links which I could go 
through to increase my understanding of this.

Thanks

Simon



From nopik at data.pl  Tue Apr  1 11:22:02 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 1 Apr 2008 20:22:02 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <4751e8f135d9ac44a86c9379042b275b@temporal-wave.com>
References: <ecc7deaa9f33394e8b3bf5705acbbb51@temporal-wave.com>
	<4751e8f135d9ac44a86c9379042b275b@temporal-wave.com>
Message-ID: <1563785504.20080401202202@data.pl>

Hello,

> To follow up on this, I did successfully download the .tgz of the
> examples from Fisheye by right clicking the tgz link and selecting
> "save as" from IE 7, but the .zip format seems to be corrupt.

Till now I was using http://www.antlr.org/download/examples-v3.1b1.tar.gz
Now I had downloaded from fisheye, to the same result. This is no
surprise, since in both cases external_declaration goes to
function_definition without going through declaration, and
function_definition in turn calls declarator and direct_declarator,
while they require declaration to be on stack...

In meantime I have also managed to play a little with C target and while
it is working, I am little worried, as for now I have found 2 problems.

a) I wanted to do some lex/yacc-type return values:

declaration returns[ MyType result ] : ....
translation_unit returns[ MyType result ] :
d=declaration declaration* { result = ....; }

C target does insert:
 MyType d = NULL;
in CParser.c. Unfortunately, with C++ MyType is quite complex. In fact
it is smart pointer (taken  from boost library) to my class. The problem
is that you cannot do = NULL on it. The proper operation is just:
 MyType d;
since its constructor will do the right thing anyway.

b) In some cases, by adding 'innocent' code whole thing crashes. Namely
I only add:
scope MyScope
{
      int foo;
}
to the working project based on C.g3pl (without using MyScope anywhere)
and program crashes in very nasty way. Gdb says, that stack is corrupt
(well, if I would do step-by-step analysis I would find it, probably),
and valgrind says, that 'impossible happened' and internal valgrind
error occurred ;) The problem is that I was not able to reproduce it on
original C.g3pl file from examples ;( I did not made any serious
modifications yet, though I changed compilation mode slightly (whole
parser is in .so now). Without this additional scope everything works
fine, I can add my rules, actions, etc. And it seems, that I am alone
here, since nobody will reproduce it.. ;(

-- 
Best regards from
Kamil Burzynski


From snyder at t-vec.com  Tue Apr  1 12:05:23 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Tue, 1 Apr 2008 15:05:23 -0400
Subject: [antlr-interest] tree construction ?
Message-ID: <003c01c8942b$56eb1290$265d080a@Gizmo>

Hello,

 

I'm using Antlr 3 with this tree construction statement

 

completeExpression

: expression ( NEWLINE! | SEMI! | (ASSIGN^ expression (NEWLINE!|SEMI!)) )

;

 

I would like the order of the expression children of the root ASSIGN node to
be reversed. Is there a simple way to do that?

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/1c18ee90/attachment.html 

From jimi at temporal-wave.com  Tue Apr  1 12:11:04 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 12:11:04 -0700
Subject: [antlr-interest] Some C target issues
In-Reply-To: <002801c89422$961c11c0$265d080a@Gizmo>
Message-ID: <8c37793ff33c7345986a125ea16812d3@temporal-wave.com>

1) Set it to anything, but pANTLR3_BASE_TREE is probably best;

2) In tree grammars, you just use @includes or @headers or @members etc;

3) This is protected in the current 3.1 source;

4) I'll look at that one, but where were you using the @declarations? I have a number of parsers that rely on this, but I will check that it is still working for tree parsers. Can you post an example to save time?

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 11:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Some C target issues

 

Hello,

 

1) Is there a default ASTLabelType=[?] to get rid of this warning? 

warning(152): tree grammar MScriptToBlock has no ASTLabelType option

 

2) Following the guidelines here: http://www.antlr.org/api/C/index.html, in my Tree grammar I tried changing 

 

@header {

#include <string.h>

#include <string.h>

#include <iostream.h>

}

 

To this

 

@parser::includes {

#include <string.h>

#include <iostream.h>

}

 

And I get this error:

error(143): unknown or invalid action scope for tree grammar: parser

 

@parser::header also failed with the same error

 

3) The last version of code I have from 3/13/2008 still had this warning

y:\t_vec_cots\include\antlr3\antlr3defs.h(75) : warning C4005: '_CRT_SECURE_NO_DEPRECATE' : macro redefinition

 

4) I tried using the @declarations section in my tree grammar and although no warnings were generated none of the code in the @declarations section was added to either the generated C or h files.

 

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/c8d2cf05/attachment.html 

From jimi at temporal-wave.com  Tue Apr  1 12:35:00 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 12:35:00 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <1563785504.20080401202202@data.pl>
Message-ID: <d5ce8019a627184aa93bdb6ba0f237ee@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kamil Burzynski
> Sent: Tuesday, April 01, 2008 11:22 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problem with C target output on example C
> grammar
> 
> Hello,
> 
> > To follow up on this, I did successfully download the .tgz of the
> > examples from Fisheye by right clicking the tgz link and selecting
> > "save as" from IE 7, but the .zip format seems to be corrupt.
> 
> Till now I was using http://www.antlr.org/download/examples-
> v3.1b1.tar.gz

OK - that version works for me. It may be a problem with the actual grammar rather than the target/code generator. 

> Now I had downloaded from fisheye, to the same result. This is no
> surprise, since in both cases external_declaration goes to
> function_definition without going through declaration, and
> function_definition in turn calls declarator and direct_declarator,
> while they require declaration to be on stack...

Hmm, that does sound like a problem with the grammar construction if there is a path through the rules that does not cause a scope to be stacked for the symbol table. Can you provide either your sample input or a small example, or confirm that you are using the default supplied input? Of course the example grammars are not meant to be rigorous examples of a parser for the language, more examples of how to use rules and so on, but they should not crash, at least not with the sample input. I will try the examples on Linux and make sure it isn't just something stupid here.

> 
> In meantime I have also managed to play a little with C target and
> while
> it is working, I am little worried, as for now I have found 2 problems.
> 
> a) I wanted to do some lex/yacc-type return values:

This isn't anything to do with the C target - you cannot do that in lexers.
 
> b) In some cases, by adding 'innocent' code whole thing crashes. Namely
> I only add:
> scope MyScope
> {
>       int foo;
> }
> to the working project based on C.g3pl (without using MyScope anywhere)
> and program crashes in very nasty way. 

Well, are you sure that you have recompiled everything correctly? If I get the input you are using, I can try to reproduce it. If you are using the supplied input without modification, then it should work because I tested it. It is possible that something has broken since I last tested it, but I usually test the examples before a snapshot, so I am surprised. If I could get anyone to volunteer to write some regression/unit tests then I could have more confidence ;-)

> Gdb says, that stack is corrupt
> (well, if I would do step-by-step analysis I would find it, probably),
> and valgrind says, that 'impossible happened' and internal valgrind
> error occurred ;) 

That sounds like something you have not quite compiled correctly to be honest, but it may be some sort of bug I suppose.

> The problem is that I was not able to reproduce it on
> original C.g3pl file from examples ;( I did not made any serious
> modifications yet, though I changed compilation mode slightly (whole
> parser is in .so now). Without this additional scope everything works
> fine, I can add my rules, actions, etc. 

I see, so you haven't done anything... except change the linking model ;-) How are you building the .so and did you relink your calling binary program with it or just rebuild the library and try to run with it. If the latter, then I suggest that that may well be your problem and the reason that stack is out of whack. Do you mean you can't reproduce either problem with the original example, or just this second one which I think is the way you are building it?


> And it seems, that I am alone
> here, since nobody will reproduce it.. ;(

Well, you haven't really given me an exact set of instruction with which to reproduce your problems! It wasn't until this email that I even knew you were using the correct version of the examples or that you were trying to put the parser in a shared library, and I still don't know for certain what input you are using :-) I will try this all out now and make sure though that at least the sample input works on Linux - watch for a patch if it does not. 

Jim





From snyder at t-vec.com  Tue Apr  1 12:35:04 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Tue, 1 Apr 2008 15:35:04 -0400
Subject: [antlr-interest] Some C target issues
In-Reply-To: <8c37793ff33c7345986a125ea16812d3@temporal-wave.com>
References: <002801c89422$961c11c0$265d080a@Gizmo>
	<8c37793ff33c7345986a125ea16812d3@temporal-wave.com>
Message-ID: <004701c8942f$7ce7d100$265d080a@Gizmo>

1)       worked thanks

2)       ok

3)       ok

4)       Here is the top of the tree grammar I was using. I tried placing
garbage in the @declarations section and it never complains during
compilation nor does the code appear in my MScriptToBlock.c or
MScriptToBlock.h files.

 

//begin tree grammar

tree grammar MScriptToBlock;

options {

            tokenVocab=MScript; // reuse token types

            ASTLabelType=pANTLR3_BASE_TREE ; // $label will have type
CommonTree

            language=C;

            k=2;

}

 

@header {

#include <string.h>

#include <iostream.h>

}

 

@declarations

{

  SSSIG *test=NULL;

}

 

@members {  

  TCSSLModel *m_model=NULL;

  TCString m_rootScope;

} 

 

 

//container subsystem is the subsystem containing the eml block

start[TCSSLModel *pModel, TCString pRootScope] returns [TCSSLSubsystem
*rootSubsystem]

  : 

            so=script

            ;

            

....... rest of tree grammar

//end tree grammar

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 01, 2008 3:11 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Some C target issues

 

1) Set it to anything, but pANTLR3_BASE_TREE is probably best;

2) In tree grammars, you just use @includes or @headers or @members etc;

3) This is protected in the current 3.1 source;

4) I'll look at that one, but where were you using the @declarations? I have
a number of parsers that rely on this, but I will check that it is still
working for tree parsers. Can you post an example to save time?

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 11:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Some C target issues

 

Hello,

 

1) Is there a default ASTLabelType=[?] to get rid of this warning? 

warning(152): tree grammar MScriptToBlock has no ASTLabelType option

 

2) Following the guidelines here: http://www.antlr.org/api/C/index.html, in
my Tree grammar I tried changing 

 

@header {

#include <string.h>

#include <string.h>

#include <iostream.h>

}

 

To this

 

@parser::includes {

#include <string.h>

#include <iostream.h>

}

 

And I get this error:

error(143): unknown or invalid action scope for tree grammar: parser

 

@parser::header also failed with the same error

 

3) The last version of code I have from 3/13/2008 still had this warning

y:\t_vec_cots\include\antlr3\antlr3defs.h(75) : warning C4005:
'_CRT_SECURE_NO_DEPRECATE' : macro redefinition

 

4) I tried using the @declarations section in my tree grammar and although
no warnings were generated none of the code in the @declarations section was
added to either the generated C or h files.

 

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/a08cdda3/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Apr  1 12:36:09 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 1 Apr 2008 12:36:09 -0700
Subject: [antlr-interest] Parse data structure as input
In-Reply-To: <8A2EB455D62ADA438CD446EDF41F2D0D023EF12F@BLTSXVS01.govsolutions.com>
References: <8A2EB455D62ADA438CD446EDF41F2D0D023EF12F@BLTSXVS01.govsolutions.com>
Message-ID: <5CB5547C-7F55-4AD7-8A26-5BAF710CD177@cs.usfca.edu>

Sure. a tree adaptor + tree grammar i what you want.
Ter
On Apr 1, 2008, at 11:03 AM, Yau Kwong K (Tony) wrote:

> Hi all,
>
> I?m new to antlr and I?m trying to find out if Antlr can parse C  
> data structure (instead of plain character stream) as input. My data  
> structures have struct containing
> different data types and pointers to multiple different struct (like  
> a tree).  They are all in C target.
> I would like to write a tree walker to walk the data structure and  
> take appropriate action when a particular value is set inside the  
> input structure.
>
> Any suggestions would be appreciated.
>
> Thanks,
> Tony
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/eeeb5c67/attachment.html 

From parrt at cs.usfca.edu  Tue Apr  1 12:37:13 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 1 Apr 2008 12:37:13 -0700
Subject: [antlr-interest] Newbie Q: Tree Grammar, Template or manual
In-Reply-To: <47F27CE7.2030602@virgin.net>
References: <47F27CE7.2030602@virgin.net>
Message-ID: <165BA60B-3E2D-437D-BFDD-ACBC469C2157@cs.usfca.edu>

Hi. if you are rewriting only some of the input, use  
TokenRewriteStream and output=template, rewrite=true.  Then rules have  
-> rewrites that say how to tweak that one item.
Ter

On Apr 1, 2008, at 11:20 AM, Simon Woods wrote:
> Hi
>
> I'm just beginning to start using antlr -so forgive the dumb question!
>
> I am trying to develop a query language which is quite like  
> (derivative of) SQL but has other structures which are more explicit  
> of the data structures being interrogated which I will then tranform  
> into SQL. I have developed an outline grammar for my query language  
> but am wondering what is the best option for generating SQL. Certain  
> parts of a statement may map directly onto a SQL clause whereas  
> other bits may need completely re-writing to fit SQL.
>
> I would be grateful of any pointers, clues or links which I could go  
> through to increase my understanding of this.
>
> Thanks
>
> Simon
>
>


From jimi at temporal-wave.com  Tue Apr  1 12:53:53 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 12:53:53 -0700
Subject: [antlr-interest] Some C target issues
In-Reply-To: <002801c89422$961c11c0$265d080a@Gizmo>
Message-ID: <5e15bf708b324842910747c3f152f34f@temporal-wave.com>

4) I checked this by modifying the example grammar LangDumpDecl as follows:

 

decls 

@declarations

{

      int jimwashere;

}

: ^(DECL type declarator+)

...

 

Then I generated the code and everythign worked as expected:

 

static void

decls(pLangDumpDecl ctx)

{   

    

      int jimwashere;

...

 

Are you sure that you are using the @declarations section correctly? It is a rule level section, not a file level section, so if you put it in the wrong place, it will be accepted by the ANTLR Tool as a valid section name, but nothing will happen to it. I'll check the docs and make sure that this is clear....

 

As well as the @init section, which C programmers should use to initialize their local variables, the C target provides the @declarations section, which is also a rule based section...

 

Perhaps this is not what is happening to you though?

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 11:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Some C target issues

 

Hello,

 

1) Is there a default ASTLabelType=[?] to get rid of this warning? 

warning(152): tree grammar MScriptToBlock has no ASTLabelType option

 

2) Following the guidelines here: http://www.antlr.org/api/C/index.html, in my Tree grammar I tried changing 

 

@header {

#include <string.h>

#include <string.h>

#include <iostream.h>

}

 

To this

 

@parser::includes {

#include <string.h>

#include <iostream.h>

}

 

And I get this error:

error(143): unknown or invalid action scope for tree grammar: parser

 

@parser::header also failed with the same error

 

3) The last version of code I have from 3/13/2008 still had this warning

y:\t_vec_cots\include\antlr3\antlr3defs.h(75) : warning C4005: '_CRT_SECURE_NO_DEPRECATE' : macro redefinition

 

4) I tried using the @declarations section in my tree grammar and although no warnings were generated none of the code in the @declarations section was added to either the generated C or h files.

 

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/d1a25eb2/attachment-0001.html 

From snyder at t-vec.com  Tue Apr  1 13:10:12 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Tue, 1 Apr 2008 16:10:12 -0400
Subject: [antlr-interest] tree construction ?
In-Reply-To: <003c01c8942b$56eb1290$265d080a@Gizmo>
References: <003c01c8942b$56eb1290$265d080a@Gizmo>
Message-ID: <005301c89434$65557a10$265d080a@Gizmo>

This seems to do what I wanted:

 

completeExpression

      : e1=expression ( NEWLINE | SEMI | (ASSIGN e2=expression
(NEWLINE|SEMI)) -> ^(ASSIGN $e2 $e1)    )

      ;

 

Chris

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 3:05 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] tree construction ?

 

Hello,

 

I'm using Antlr 3 with this tree construction statement

 

completeExpression

: expression ( NEWLINE! | SEMI! | (ASSIGN^ expression (NEWLINE!|SEMI!)) )

;

 

I would like the order of the expression children of the root ASSIGN node to
be reversed. Is there a simple way to do that?

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/a4939bd7/attachment.html 

From nopik at data.pl  Tue Apr  1 13:44:40 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 1 Apr 2008 22:44:40 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <d5ce8019a627184aa93bdb6ba0f237ee@temporal-wave.com>
References: <1563785504.20080401202202@data.pl>
	<d5ce8019a627184aa93bdb6ba0f237ee@temporal-wave.com>
Message-ID: <388567796.20080401224440@data.pl>

Hello,

>> Now I had downloaded from fisheye, to the same result. This is no
>> surprise, since in both cases external_declaration goes to
>> function_definition without going through declaration, and
>> function_definition in turn calls declarator and direct_declarator,
>> while they require declaration to be on stack...

> Hmm, that does sound like a problem with the grammar construction
> if there is a path through the rules that does not cause a scope to be
> stacked for the symbol table. Can you provide either your sample input
> or a small example, or confirm that you are using the default supplied
> input? Of course the example grammars are not meant to be rigorous
> examples of a parser for the language, more examples of how to use
> rules and so on, but they should not crash, at least not with the
> sample input. I will try the examples on Linux and make sure it isn't
> just something stupid here.

Yeah, it is a problem in grammar for me. I was testing on default input
provided with the example. You can find exact path in my original gdb
output, code went through this path:

#0 0x08054f75 in direct_declarator (ctx=0x80b0868) at CParser.c:16284
#1 0x08055897 in declarator (ctx=0x80b0868) at CParser.c:16156
#2 0x0806efa4 in function_definition (ctx=0x80b0868) at CParser.c:13775
#3 0x0806f5c3 in external_declaration (ctx=0x80b0868) at CParser.c:13652
#4 0x0806f89e in translation_unit (ctx=0x80b0868) at CParser.c:13543
#5 0x0806fbef in main (argc=1, argv=0xbf9b45a4) at main.c:188

I am really puzzled how it worked at least once - probably on non-linux
platform (or just different compiler) program was faulty but did not
crashed.

I have also described how to fix the grammar in some previous post,
though I am not sure if my solution was 100% correct.

>> In meantime I have also managed to play a little with C target and
>> while
>> it is working, I am little worried, as for now I have found 2 problems.
>>
>> a) I wanted to do some lex/yacc-type return values:

> This isn't anything to do with the C target - you cannot do that in lexers.

I think there was small misunderstanding. Indeed lexer do not build
symbol tree, but I was doing something different. I wanted something
like code I've found in examples/Python/calc/Calculator.g:

evaluate returns [result]: r = expression { result = r; };

(this is python syntax, though the usage of 'returns' keyword should
stay the same). The problem is that C target when sees something like "r
= expression" does initialize internal variable with NULL before
assignment. This is improper even in plain C. Consider this example
(just reduced and slightly modified version of
examples/Python/calc/Calculator.g):


grammar Calculator;
options {
  language = C;
}

@members
{
        struct foo
        {
                int bar;
        };
}

evaluate returns [struct foo result]: r=INTEGER {result.bar = 42;};

INTEGER: DIGIT+;

fragment
DIGIT: '0'..'9';

Try to compile it. C compiler will say, that you cannot assign NULL to
foo.

>> b) In some cases, by adding 'innocent' code whole thing crashes. Namely
>> I only add:
>> scope MyScope
>> {
>>       int foo;
>> }
>> to the working project based on C.g3pl (without using MyScope anywhere)
>> and program crashes in very nasty way.

> Well, are you sure that you have recompiled everything correctly?

Well, in meantime I switched machines, and on the new machine got the
same problem. Tried to debug it with step-by-step debugging under gdb
and found out, that psr->translation_unit() call from main() does leave
main, but even do not enter translation_unit() function. After
recompilation it started to work, indeed. Strange thing is that it was
new machine where I downloaded sources from svn and compiled.. Anyway,
program is stable now. And I have found another problem with C target :D

Namely, when I use two scopes in target, e.g. like this:

translation_unit
 scope Symbols;
 scope MyScope;
 @init
 {
      $Symbols::types = ....; //This line stops to work after adding
      MyScope.
 }

Program crashes, since $Symbols is not initialized. It seems, that only
last scope is initialized - as I can access MyScope. If I reverse
scopes like this:

translation_unit
 scope MyScope;
 scope Symbols;

I can @init Symbols, but not MyScope.

> If I get the input you are using, I can try to reproduce it. If you
> are using the supplied input without modification, then it should work
> because I tested it. It is possible that something has broken since I

Yeah, I also suspected that you tested it, that is why the first problem
described here puzzled me ;)

> last tested it, but I usually test the examples before a snapshot, so
> I am surprised. If I could get anyone to volunteer to write some
> regression/unit tests then I could have more confidence ;-)

> I see, so you haven't done anything... except change the linking
> model ;-) How are you building the .so and did you relink your calling
> binary program with it or just rebuild the library and try to run with
> it. If the latter, then I suggest that that may well be your problem
> and the reason that stack is out of whack. Do you mean you can't
> reproduce either problem with the original example, or just this
> second one which I think is the way you are building it?

Yeah, it turned out to be my fault, as described above. It also explains
why I was not able to reproduce problem on supplied example. I linked
.so correctly, just main.o was not recompiled.

> Well, you haven't really given me an exact set of instruction with
> which to reproduce your problems! It wasn't until this email that I

Yes, I know. It was because I did not had them :) And this is why I knew
that I am alone, as I was not able to tell anybody how to reproduce..

-- 
Best regards from
Kamil Burzynski


From jimi at temporal-wave.com  Tue Apr  1 13:58:11 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 13:58:11 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <1563785504.20080401202202@data.pl>
Message-ID: <44f314c218b0374183c034d93f3990b3@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kamil Burzynski
> Sent: Tuesday, April 01, 2008 11:22 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problem with C target output on example C
> grammar
> 
> Hello,
> 
> > To follow up on this, I did successfully download the .tgz of the
> > examples from Fisheye by right clicking the tgz link and selecting
> > "save as" from IE 7, but the .zip format seems to be corrupt.
> 
> Till now I was using http://www.antlr.org/download/examples-
> v3.1b1.tar.gz
> Now I had downloaded from fisheye, to the same result. This is no
> surprise, since in both cases external_declaration goes to
> function_definition without going through declaration, and
> function_definition in turn calls declarator and direct_declarator,
> while they require declaration to be on stack...

OK - the good news is that nothing is broken in the C target. The reason you are seeing the error now is that I backed off a change inherited from the Java target whereby scope access was 'protected' from being accessed if it was NULL by returning a 'default' value. This is because I believe that this would mask errors in dangerous ways, that would be difficult to debug. 

It seems that I was correct based on our own example ;-). However, it seems that I did not run that particular example after the C code generation template change. Hence this is a grammar problem rather than a runtime problem. In the prior version of the C.stg file, the scope would have been seen to be NULL, so 0 would have been return for the isTypeDef reference and the code would not crash. However, this is clearly incorrect behavior, as it masks a problem and in a real world grammar would have been very difficult to see just what was going on. Best to crash in testing, where it will be obvious that the stack is empty and you can find out why. 

I suspect, but have not yet looked, that the Java and C# versions of this example are also masking this grammar problem.

To fix for the C target example, you can use either the SCOPE_TOP() or SCOPE_SIZE macros, but in this case I choose SCOPE_TOP as it is faster:

direct_declarator
    :   (   IDENTIFIER
			{
	    		if (SCOPE_TOP(declaration) != NULL && $declaration::isTypedef)


Perhaps a better fix would be move around the scope, but then, this is really an example of using scopes rather than how you really would process typedefs in the C grammar.


As to your shared object issue:


~antlrsrc/code/examples-v3/C/C: gcc -I. -fPIC C*.c -c
-~/antlrsrc/code/examples-v3/C/C: gcc -shared *.o -o libcex.so
scalix-~/antlrsrc/code/examples-v3/C/C: gcc -I. -fPIC main.c -o jc -L. -lcex -lantlr3c
scalix-~/antlrsrc/code/examples-v3/C/C: export LD_LIBRARY_PATH=$(pwd):/usr/local/lib
scalix-~/antlrsrc/code/examples-v3/C/C: ./jc
Including file 'jimtest.h'
define type size_t
etc ...

Now add the scope...
scalix-~/antlrsrc/code/examples-v3/C/C: antlr C.g3pl
ANTLR Parser Generator  Version 3.1 1989-2007
Generating CParser.c
Generating CParser.h
Generating CLexer.c
Generating CLexer.h
scalix-~/antlrsrc/code/examples-v3/C/C: gcc -I. -fPIC C*.c -c                                               
scalix-~/antlrsrc/code/examples-v3/C/C: gcc -shared *.o -o libcex.so                                        
scalix-~/antlrsrc/code/examples-v3/C/C: ./jc
Segmentation fault

As expected, now, relink:

scalix-~/antlrsrc/code/examples-v3/C/C: gcc -I. -fPIC main.c -o jc -L. -lcex -lantlr3c                              
scalix-~/antlrsrc/code/examples-v3/C/C: ./jc
Including file 'jimtest.h'
define type size_t

everything works as expected.


Jim




From jimi at temporal-wave.com  Tue Apr  1 14:03:39 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 14:03:39 -0700
Subject: [antlr-interest] Some C target issues
In-Reply-To: <004701c8942f$7ce7d100$265d080a@Gizmo>
Message-ID: <725387cc0a47824b9469fe14c4e1da52@temporal-wave.com>

4) Yes, it isn't a file scope level section, as per the C API docs. It is for rules and if you are compiling as C++, then you can skip it and just use @init. It is only for pure C, where you cannot generally declare an initialize at the same time. 

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 12:35 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Some C target issues

 

1)  worked thanks

2)  ok

3)  ok

4)  Here is the top of the tree grammar I was using. I tried placing garbage in the @declarations section and it never complains during compilation nor does the code appear in my MScriptToBlock.c or MScriptToBlock.h files.

 

//begin tree grammar

tree grammar MScriptToBlock;

options {

            tokenVocab=MScript; // reuse token types

            ASTLabelType=pANTLR3_BASE_TREE ; // $label will have type CommonTree

            language=C;

            k=2;

}

 

@header {

#include <string.h>

#include <iostream.h>

}

 

@declarations

{

  SSSIG *test=NULL;

}

 

@members {  

  TCSSLModel *m_model=NULL;

  TCString m_rootScope;

} 

 

 

//container subsystem is the subsystem containing the eml block

start[TCSSLModel *pModel, TCString pRootScope] returns [TCSSLSubsystem *rootSubsystem]

  : 

            so=script

            ;

            

....... rest of tree grammar

//end tree grammar

  _____  

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 01, 2008 3:11 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Some C target issues

 

1) Set it to anything, but pANTLR3_BASE_TREE is probably best;

2) In tree grammars, you just use @includes or @headers or @members etc;

3) This is protected in the current 3.1 source;

4) I'll look at that one, but where were you using the @declarations? I have a number of parsers that rely on this, but I will check that it is still working for tree parsers. Can you post an example to save time?

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 11:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Some C target issues

 

Hello,

 

1) Is there a default ASTLabelType=[?] to get rid of this warning? 

warning(152): tree grammar MScriptToBlock has no ASTLabelType option

 

2) Following the guidelines here: http://www.antlr.org/api/C/index.html, in my Tree grammar I tried changing 

 

@header {

#include <string.h>

#include <string.h>

#include <iostream.h>

}

 

To this

 

@parser::includes {

#include <string.h>

#include <iostream.h>

}

 

And I get this error:

error(143): unknown or invalid action scope for tree grammar: parser

 

@parser::header also failed with the same error

 

3) The last version of code I have from 3/13/2008 still had this warning

y:\t_vec_cots\include\antlr3\antlr3defs.h(75) : warning C4005: '_CRT_SECURE_NO_DEPRECATE' : macro redefinition

 

4) I tried using the @declarations section in my tree grammar and although no warnings were generated none of the code in the @declarations section was added to either the generated C or h files.

 

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080401/29547ee4/attachment-0001.html 

From nopik at data.pl  Tue Apr  1 14:04:32 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 1 Apr 2008 23:04:32 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <44f314c218b0374183c034d93f3990b3@temporal-wave.com>
References: <1563785504.20080401202202@data.pl>
	<44f314c218b0374183c034d93f3990b3@temporal-wave.com>
Message-ID: <3247265.20080401230432@data.pl>

Hello,

> OK - the good news is that nothing is broken in the C target. The
> reason you are seeing the error now is that I backed off a change
> inherited from the Java target whereby scope access was 'protected'
> from being accessed if it was NULL by returning a 'default' value.
> This is because I believe that this would mask errors in dangerous
> ways, that would be difficult to debug.

Yeah, if java/C# targets do mask this error, it is quite dangerous,
indeed.

> As to your shared object issue:

Thanks for confirmation. What about 2 other problems I have just
reported in previous mail (double scope and NULL assignment)?

-- 
Best regards from
Kamil Burzynski


From antlr at mirality.co.nz  Tue Apr  1 12:45:48 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 02 Apr 2008 08:45:48 +1300
Subject: [antlr-interest] Some C target issues
In-Reply-To: <002801c89422$961c11c0$265d080a@Gizmo>
References: <002801c89422$961c11c0$265d080a@Gizmo>
Message-ID: <20080401212459.1B12D2F4328@www.antlr.org>

At 07:02 2/04/2008, Chris Snyder wrote:
>2) Following the guidelines here: 
><http://www.antlr.org/api/C/index.html>http://www.antlr.org/api/C/index.html, 
>in my Tree grammar I tried changing
>
>@header {
>#include <string.h>
>#include <string.h>
>#include <iostream.h>
>}
>
>To this
>
>@parser::includes {
>#include <string.h>
>#include <iostream.h>
>}
>
>And I get this error:
>error(143): unknown or invalid action scope for tree grammar: 
>parser

The parser:: scope only works in combined grammars and parser 
grammars, of course.  Just leave out the scope and use @includes 
instead.  (Don't know if the tree grammar template actually 
supports that tag or not, but it probably does if the others do.)

>4) I tried using the @declarations section in my tree grammar and 
>although no warnings were generated none of the code in the 
>@declarations section was added to either the generated C or h 
>files.

No warnings are ever generated for any action blocks; you can 
actually specify anything at all and ANTLR won't mind.  It's up to 
the generator template to either use it or not, though.  However, 
in this case: I think @declarations only works within a rule, not 
globally.  For a global equivalent, use @members.


From jimi at temporal-wave.com  Tue Apr  1 14:38:58 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 01 Apr 2008 14:38:58 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <388567796.20080401224440@data.pl>
Message-ID: <eaeefe5b0d708a49b3b0b67d7f989b23@temporal-wave.com>

> I am really puzzled how it worked at least once - probably on non-linux
> platform (or just different compiler) program was faulty but did not
> crashed.

I don't think it ever would have.

> 
> >> a) I wanted to do some lex/yacc-type return values:
> 
> > This isn't anything to do with the C target - you cannot do that in
> lexers.
> 
> I think there was small misunderstanding. Indeed lexer do not build
> symbol tree, but I was doing something different. I wanted something
> like code I've found in examples/Python/calc/Calculator.g:
> 
> evaluate returns [result]: r = expression { result = r; };
> 
> (this is python syntax, though the usage of 'returns' keyword should
> stay the same). The problem is that C target when sees something like
> "r
> = expression" 

No, that isn't your problem, look at the generated code.

> does initialize internal variable with NULL before
> assignment. This is improper even in plain C. 

I am well aware of what can be initialized with what in C :-). Please consider that you may be doing something wrong or slightly unorthodox yourself before blaming the C target ;-)

> Consider this example
> (just reduced and slightly modified version of
> examples/Python/calc/Calculator.g):
> 
> 
> grammar Calculator;
> options {
>   language = C;
> }
> 
> @members
> {
>         struct foo
>         {
>                 int bar;
>         };
> }
> 
> evaluate returns [struct foo result]: r=INTEGER {result.bar = 42;};
> 
> INTEGER: DIGIT+;
> 
> fragment
> DIGIT: '0'..'9';
> 
> Try to compile it. C compiler will say, that you cannot assign NULL to
> foo.

You would get a similar thing on any target when you use something that the templates do not know how to initialize. The problem is that there is no default initializer for struct foo in the C.stg, so it declares:

struct foo result = NULL;

Because NULL is the default initializing value when the type is unknown. Return anything other than a struct and you will be fine.

Now, why are we initializing the return values? I no longer remember, but I think that there is some good reason and it might be that it is the same code that is used for initializing tree return variables. (If you use output=AST then the error actually goes away). I know though that I have looked at this before and there was no easy solution adn in fact no NEED for a solution (see below for your error). Perhaps it is coming time to revisit it and make sure I have documented it at least. 

However, the answer to your problem is that the rule already returns a struct if you have more than one return value, so if you have just one element in your struct, then don't use the struct. If you have more than one element, then don't use the struct, just list it:

returns [int x, int y]

And let the code generator build the struct for you, whence you can use:

x=evaluate
{
  ... $x.x  .... $x.y .....

}

So, I think that we have reduced all your problems to the one grammar error, one user error, one user misunderstanding and zero problems with the C target, so I don't think you need to be concerned about the C runtime :-)

Jim







From jaluber at gmx.de  Tue Apr  1 14:56:38 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 01 Apr 2008 23:56:38 +0200
Subject: [antlr-interest] Debugging grammar throught VS C#.NET
In-Reply-To: <BLU117-W389C46A79EDE7AF349CA158FFA0@phx.gbl>
References: <BLU117-W230A9723A2169F9CD508DB8FFA0@phx.gbl>
	<47F0E793.8040609@gmx.de>
	<BLU117-W389C46A79EDE7AF349CA158FFA0@phx.gbl>
Message-ID: <47F2AF96.6090006@gmx.de>

Mayur M schrieb:
>  
> Hi,
> 
> Thanks for the reply,
> 
> I would like to know about the VS plugin and Is there certain steps or 
> procedures that need to be followed to link the plugin ?

A plugin is a piece of software which can be embedded into other 
software in a way that it looks like it was already a part of the other 
one. What you actually mean is not creating a plugin for VS, but using 
the C# target library in a project. That is entirely different and lead 
me astray. The most important point is that referencing this library is 
half of the work.

> I'm looking for the Debug option facilities available in ANTLRworks as 
> well as control the generated code like ANTLRworks does via 
> remote debugging?
> I tried with both the options without any success.

ANTLRworks supports only direct debugging for Java. AFAIK, it still 
generates the required files with the additional "-debug" option, 
without controlling the parser is impossible (unless you do a 
step-by-step debugging by hand). Once you have the debug version of the 
parser, you have to compile it and start it afterwards. Then using 
remote debugging should work. If you still have problems, ask again.

Johannes

From elekis at gmail.com  Tue Apr  1 22:32:47 2008
From: elekis at gmail.com (elekis)
Date: Wed, 02 Apr 2008 07:32:47 +0200
Subject: [antlr-interest] create eclipse plug with antlr
Message-ID: <47F31A7F.8050406@gmail.com>

hello world,

I try to create a eclipse plugin for a custom language. I ve used antlr 
3.0 to create a lexer and grammar (and comming soon, an ast). but now I 
would like to interact with my plugin.

How To do that??? I have problemes.

first I ve created a editor  with a damager and a repairer etc... but 
how to link all of that?
the only thing I do now is always pass all the document after delete all 
the comment (all that follow "--"). but it's big.

is there any tuto on how to interact ?? I ve found a paper
http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.html
but it's just a theory, there is no sources to analyse.


any idea?

thanks

PS : this is also posted on e.platform

a+++



From nopik at data.pl  Tue Apr  1 22:55:16 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Wed, 2 Apr 2008 07:55:16 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <eaeefe5b0d708a49b3b0b67d7f989b23@temporal-wave.com>
References: <388567796.20080401224440@data.pl>
	<eaeefe5b0d708a49b3b0b67d7f989b23@temporal-wave.com>
Message-ID: <353010144.20080402075516@data.pl>

Hello,

>> evaluate returns [result]: r = expression { result = r; };
>>
>> (this is python syntax, though the usage of 'returns' keyword should
>> stay the same). The problem is that C target when sees something like
>> "r
>> = expression"

> No, that isn't your problem, look at the generated code.

Indeed.

>> does initialize internal variable with NULL before
>> assignment. This is improper even in plain C.

> I am well aware of what can be initialized with what in C :-).

Yes, I know. You misunderstood me - as I was not implying that you do
not know C. I wanted to tell, that such approach can fail even in C, you
do not need C++ to make it fail.

> Please consider that you may be doing something wrong or slightly
> unorthodox yourself before blaming the C target ;-)

Well, the thing is that it is natural way of doing in C++. In pure C
returning struct by value is rarely used, I agree. But in C++ (and Java
in fact), returning objects by value is much more common. Especially in
my case - when the object was smart pointer itself. These entities are
*meant* to be passed as value. And since they point to (usually)
non-trivial class, you cannot reduce them away by returning a bunch of
struct members at once.

> Because NULL is the default initializing value when the type is
> unknown. Return anything other than a struct and you will be fine.

Yes, I know that. The example was just to show that there are cases when
= NULL cannot work. I chose struct intentionally to indicate this
problem.

> Now, why are we initializing the return values? I no longer
> remember, but I think that there is some good reason and it might be
> that it is the same code that is used for initializing tree return
> variables. (If you use output=AST then the error actually goes away).

Yeah, I am not familiar enough with antlr yet and do not know what tree
parsing is for, gotta read more about it. Unfortunately I did not found
any good documentation about it on antlr.org, maybe I was not looking
carefully enough.

> I know though that I have looked at this before and there was no easy
> solution adn in fact no NEED for a solution (see below for your
> error). Perhaps it is coming time to revisit it and make sure I have
> documented it at least.

I agree, that there is no easy way for fixing it. Either you leave all
variables uninitialized or initialize all of them somehow, in uniform
way. In Java '= null' was very safe for almost anything, not so in
C/C++. But, lack of solution is actually painful in C++. The
operator=(int) was intentionally removed from boost smart pointers (and
they are very important tool in modern c++ programmer toolbox), as
potentially dangerous. Now, your target forced me to inherit original
pointer class and add this operator=(int) myself. Making whole program
slower, less efficient and more error-prone ;(

> However, the answer to your problem is that the rule already
> returns a struct if you have more than one return value, so if you
> have just one element in your struct, then don't use the struct. If

But if you have object as in Java, you cannot return all its members
separately, that would make no sense.

> So, I think that we have reduced all your problems to the one
> grammar error, one user error, one user misunderstanding and zero
> problems with the C target, so I don't think you need to be concerned
> about the C runtime :-)

Not so easy ;) There is one grammar error indeed. I do not know which
problem you are thinking about my error, but the default initialization
is a problem of C runtime for me. Though I agree, that there is probably
no chance of getting it solved. So, some users (most of them are not hit
by the problem, fortunately) are forced to workaround it creating some
awkward solutions.

In my other email I also indicated other error which are purely related to
C runtime, I think: when rule uses 2 scopes, first of them is not
accessible.

-- 
Best regards from
Kamil Burzynski


From jhvdven at xs4all.nl  Tue Apr  1 23:04:29 2008
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Wed, 02 Apr 2008 08:04:29 +0200
Subject: [antlr-interest] create eclipse plug with antlr
In-Reply-To: <47F31A7F.8050406@gmail.com>
References: <47F31A7F.8050406@gmail.com>
Message-ID: <47F321ED.4010203@xs4all.nl>

Dear Elekis,


The article you mention is a very good one. It inspired us to write a 
SQL editor using antlr. You can find the code at 
http://quantum.cvs.sourceforge.net/quantum/quantum-plugin/src/com/quantum/ 
in the core and editors folders. It is not as good as Prashant's 
description though. Feel free to comment on it.

Kind regards,

Jan



elekis wrote:
> hello world,
>
> I try to create a eclipse plugin for a custom language. I ve used 
> antlr 3.0 to create a lexer and grammar (and comming soon, an ast). 
> but now I would like to interact with my plugin.
>
> How To do that??? I have problemes.
>
> first I ve created a editor  with a damager and a repairer etc... but 
> how to link all of that?
> the only thing I do now is always pass all the document after delete 
> all the comment (all that follow "--"). but it's big.
>
> is there any tuto on how to interact ?? I ve found a paper
> http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.html
> but it's just a theory, there is no sources to analyse.
>
>
> any idea?
>
> thanks
>
> PS : this is also posted on e.platform
>
> a+++
>
>
>
>


From potrto at centrum.cz  Wed Apr  2 01:10:34 2008
From: potrto at centrum.cz (Tomas Potrusil)
Date: Wed, 2 Apr 2008 10:10:34 +0200
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <b4443b867f63b447abb65e98083cbb14@temporal-wave.com>
References: <00ae01c893e7$320647e0$9612d7a0$@cz>
	<b4443b867f63b447abb65e98083cbb14@temporal-wave.com>
Message-ID: <014c01c89499$06f07c30$14d17490$@cz>

What was wrong on my ideas bellow? I know that with the current design I
need a new tree adaptor and to "override" the ANTRL_BASE_TREE which means
that I must include the ANTLR_BASE_TREE structure (or better, MY_TREE
structure which will contain COMMON_TREE which contains ANTLR_BASE_TREE
structure) inside my AST classes. This is completely clear and it will
probably work without any problems.

 

All I wanted to point out was that the current design is not very correct
(unlike Java version).

 

One question: why should I (or probably you - you are the parser generator)
use such an adaptor when you can call some functions (like addChild)
directly through ANTLR_BASE_TREE interface? You hold pointer to that
interface. But you give up to do this and call the "adaptor" (function with
the same name - addChild) which in turn calls the function directly on the
tree. There are few such functions, right? Why they are there? It doesn't
make sense.

 

Java version (its documentation) makes this clear. These functions are in
the TreeAdaptor interface also, but they have slightly different semantic
meaning: their attributes are Objects not direct interfaces. Of course, the
adaptor should hide the real tree that is used behind the scene! Users can
use Tree interface (this does the BaseTreeAdaptor), but can use completely
different tree classes they like.

 

Here is a correspondence in this list:

> Why does the method create(Token) return an Object? I'm curious why an

> Object and not a Tree. When you manipulate trees, it seems to cause

> quite a bit of (useless?) casts everywhere...

this is because you might want tree nodes that do not implement ANTLR's 

tree interface. When I made a TreeAdaptor to output XML (DOM) I was 

quite happy that I could work with Objects :)

 

There is one another feature that is hidden in the adaptors. They are object
factories. They create new trees so that the runtime doesn't need to know
the real type of the tree. In Java this is particularly funny because these
"factory methods" (create()) are adaptors as well and so they return Object.
Nevertheless Terence Parr knows this: "Rather than have a separate factory
and adaptor, I've merged them."

 

In C version these "factory methods" returns pANTLR3_BASE_TREE. This is
correct, no problem.

 

To sum it up - the ANTLR3_BASE_TREE_ADAPTOR is an object factory, but it is
NOT a tree ADAPTOR. It's a pity!

 

Why I'm writing all this garbage? Because the idea of tree adaptors is
wonderful and I cannot use it. Adaptors would make my implementation much
easier. I would just create a new adaptor that would work with our existing
C++ AST classes and that's it! Right now I must include a "MY_TREE"
structure in our classes that just recalls ANTLR3_BASE_TREE functions to our
methods. This is an overhead that is not necessary.

 

Tom

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 01, 2008 6:54 PM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

Please read the comments in the source for common tree adaptor and base tree
adaptor before attempting this, as well as
http://www.antlr.org/api/C/index.html. 

 

In the C version , all adaptors and so on should return a pointer to
pANTLR_BASE_TREE, which should be contained within your own tree nodes
(which can contain anything so long as they have an ANTLR_BASE_TREE
interface. That interface contains a pointer to the higher level structure,
such as COMMON_TREE, which in turn can point to an even higher level tree.
But, you need to implement an adaptor, which will handle the tree for you
and which the generated code will use. The adaptor needs to provide the
methods in the BASE_TREE_ADAPTOR. You can probably create a COMMON adaptor,
then install pointers to your own methods for those that won't work as is.
To be honest though, I don't know of anyone that is doing this, so you may
be pioneering here, though the standard implementation uses the same
mechanisms, so it must 'work' ;-)

 

It would seem that in your case you will want both an adaptor and a tree
implementation. You might find it just as easy to implement the standard
tree, then use a tree grammar to construct your own tree, though you shoudl
not HAVE to do this.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tomas Potrusil
Sent: Tuesday, April 01, 2008 3:58 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

I was wrong. I do not need to "override" a tree, but a tree adaptor!
Investigating the mailing-list and the source code I've found that the
generated parser uses just the adapter and not the tree directly. But then
there is something strange in the current C runtime:

 

In Java runtime the tree adaptor interface works with "Object" objects only.
Of course it must abstract access to real tree nodes - it is an adaptor; not
just an object factory.  Terence Parr in a documentation says: "Rather than
have a separate factory and adaptor, I've merged them."

 

The C runtime simulates its Java version, but it doesn't work with void*
("Object" in C) but directly with ANTLR3_BASE_TREE. It is not an adaptor
anymore, it is just an object factory. Methods like

ANTLR3_TREE_ADAPTOR::addChild(...adaptor, pANTLR3_BASE_TREE t,
pANTLR3_BASE_TREE child)

are useless, because everyone can call t->addChild(child) directly.

 

This prevents me to use our existing AST C++ classes within ANTLR without
"subclassing" them from ANTLR3_COMMON_TREE, doesn't it.

 

Tom

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, March 31, 2008 1:39 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

You will probably find it best to override pANTLR3_COMMON_TREE by
encapsulating this within your own structure, as per the docs. This, as all
the structures are, is a set of pointers to functions and you need only
override the ones that you have to, just as in Java. Runtime type checking
'can' be an overhead, so i am not sure you would want to do that anyway, but
I will contemplate your suggestion of course as it has some merit.

 

Jim

 

From: Tomas Potrusil [mailto:potrto at centrum.cz] 
Sent: Friday, March 28, 2008 5:43 AM
To: Jim Idle
Cc: ANTLR
Subject: RE: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

Oh yes, I know. I've already made a prototype implementation of a part of
the grammar based on the idea I presented bellow (atom returns [OurNode*
result] etc.). It is working but it is a little bit clumsy and I cannot use
the resulting AST for a tree parsing - of course, I'm creating my own AST.

 

I've been thinking about the new tree adapter (I was talking about bellow)
and probably you are true,  few C++ wrappers could do the work. But there is
one inconvenience - there is not an "abstract" tree yet. The most abstract
tree is ANTLR3_BASE_TREE_struct which contains children vector and other
attributes. The ANTLR3_TREE_struct with only pointers to functions
(something like a Java interface) would suit my needs better. Our existing
AST nodes solve the storage already. Could you do it, please?

 

Another problem is safety. When somebody call
ANTLR3_BASE_TREE_struct::addChild(pANTLR3_BASE_TREE tree) for example, I
must trust him that the tree argument is really the tree he is calling. I
cannot write dynamic_cast<MyTreeWrapper>(tree->super). This cannot be solved
in the current C-based system.

 

Tom

 

From: Jim Idle

 

ANTLR 3.1 C target can now incorporate C++ code directly into the grammar
and so can easily call your existing C++ code. All you do is compile the C
output file as C++ (or rename it to .cpp perhaps). 

Can you try using that and let me know if you think that there is anything
that you could do if the runtime was C++ that you can't do right now? I
don't really think that there will be.

You need to get the latest 3.1 snapshot from the downloads page and use the
ANTLR Tool hjar in there. Then build the ANTLR 3.1 C runtime from the tar.gz
in the dist director under the runtime/C directory in the snapshot. 3 or 4
people have successfully integrated their C++ code with the C target now and
I think you will have similar success :-)

Jim

 

-----

Hallo,

 

I'm new to the list. I'm trying to use ANTLR for generating a SQL parser
because our current parser doesn't support Unicode input - it was generated
by Lex/Yacc. We use C++ and we have our own complex AST that is used by a
SQL engine already... So my idea is to write a tree adapter that would
create our existing AST nodes (they would just inherit ANTLR tree
interface).

 

And here comes a problem that ANTLR 3.x doesn't contain support for "pure"
C++ implementation. I've just found Jim Idle's "promise":

 

> Later I may well produce a complete C++ implementation from scratch,

> however, at this point I am not sure that it buys you anything. Please

> let me know if there are things you cannot do with the system as it

> stands (other than access the tokens and so on using C++ objects, which

> will be done later). 

 

I know that the problem could be solved with the current system somehow, but
it would be probably very ugly. So yes, complete C++ implementation will buy
us something! Or we can use ANTLR 2.x.

 

Right now we will probably try to build the AST by hand:

 

atom returns [OurNode* result]

@init { $result = NULL; }

:              NUMBER

                {

                               std::string str((char*)$NUMBER.text->chars,
$NUMBER.text->len);

                               $result = new OurNumberNode(str);

                };

 

Or do you have some other ideas?

 

Thanks

 

Tom

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/5b035861/attachment-0001.html 

From mail at martin-probst.com  Wed Apr  2 01:19:20 2008
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 2 Apr 2008 10:19:20 +0200
Subject: [antlr-interest] Strange ambiguous decision warning
Message-ID: <FB4AAA69-8E18-42C0-9338-C47E8915B0E7@martin-probst.com>

Hi all,

I'm running into a seemingly strange ambiguity warning with ANTLR 3  
(latest beta).

I have a rule like this:
sequenceType	:	(EMPTY_SEQUENCE '(' ')')
			| (itemType occurrenceIndicator) => (itemType occurrenceIndicator)
			| itemType ;
occurrenceIndicator	
		:	'?' | '*' | '+';
itemType	:	kindTest | (ITEM '(' ')') | atomicType ;
kindTest	:	...;
atomicType	:	qNameOrIdent ;
qNameOrIdent	:	QNAME | EMPTY_SEQUENCE | ...;

ANTLR complains about sequenceType:
ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
warning(200): /Users/martin/workspace/XQPretty/src/antlr/XQuery.g: 
235:14: Decision can match input such as "EMPTY_SEQUENCE" using  
multiple alternatives: 1, 2, 3
As a result, alternative(s) 2,3 were disabled for that input

Now the problem is: I cannot isolate the (apparent) bug into a small  
example. The sequenceType rule is of course part of a larger grammar  
(XQuery), which is quite complex. If I just excerpt all the rules  
below sequenceType, the problem does not occur. Which is pretty  
strange, as there is no more recursion, sequenceType is a dead end wrt  
the grammar.

I've attached the full XQuery grammar. There are still some lexical  
issues, but I've more or less disabled those rules, so this is the  
only problem the grammar currently has (I hope...).

I'd be grateful for any input on this.

Thanks,
Martin

-------------- next part --------------
A non-text attachment was scrubbed...
Name: XQuery.g
Type: application/octet-stream
Size: 14772 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/bf7cbf2f/attachment.obj 
-------------- next part --------------


From jeroen at pbemengine.nl  Wed Apr  2 01:32:17 2008
From: jeroen at pbemengine.nl (Jeroen Steenbeeke)
Date: Wed, 02 Apr 2008 10:32:17 +0200
Subject: [antlr-interest] Strange ambiguous decision warning
In-Reply-To: <FB4AAA69-8E18-42C0-9338-C47E8915B0E7@martin-probst.com>
References: <FB4AAA69-8E18-42C0-9338-C47E8915B0E7@martin-probst.com>
Message-ID: <47F34491.8020306@pbemengine.nl>

I simplified your grammar a bit to illustrate the problem
> sequenceType    :    (EMPTY_SEQUENCE '(' ')')
>                         | (itemType occurrenceIndicator) => (itemType 
> occurrenceIndicator)
>                       | itemType ;
> itemType    :    atomicType ;
> atomicType    :    qNameOrIdent ;
> qNameOrIdent    :    EMPTY_SEQUENCE;
Every single choice in sequenceType can start with EMPTY_SEQUENCE, so 
ANTLR does not have a clue which one to pick.

From mail at martin-probst.com  Wed Apr  2 02:08:49 2008
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 2 Apr 2008 11:08:49 +0200
Subject: [antlr-interest] Strange ambiguous decision warning
In-Reply-To: <47F34491.8020306@pbemengine.nl>
References: <FB4AAA69-8E18-42C0-9338-C47E8915B0E7@martin-probst.com>
	<47F34491.8020306@pbemengine.nl>
Message-ID: <E32BC4C6-9728-4287-A63F-2974ABB9A2B3@martin-probst.com>


Am 02.04.2008 um 10:32 schrieb Jeroen Steenbeeke:
> I simplified your grammar a bit to illustrate the problem
>> sequenceType    :    (EMPTY_SEQUENCE '(' ')')
>>                        | (itemType occurrenceIndicator) =>  
>> (itemType occurrenceIndicator)
>>                      | itemType ;
>> itemType    :    atomicType ;
>> atomicType    :    qNameOrIdent ;
>> qNameOrIdent    :    EMPTY_SEQUENCE;
> Every single choice in sequenceType can start with EMPTY_SEQUENCE,  
> so ANTLR does not have a clue which one to pick.

Well, generally yes, but I thought the point of the LL(*) algorithm is  
to disambiguate such decisions by taking the next token into  
consideration. I.e. in this case:
* EMPTY_SEQUENCE -> itemType
* EMPTY_SEQUENCE ( ) -> direct match
* EMPTY_SEQUENCE + -> itemType occurrenceIndicator

Btw. as far as I can see the grammar does not allow a sequenceType  
declaration to be followed by an open parenthesis, which should rule  
out such an ambiguity (and such an error should of course be flagged  
in the rule where the following '(' occurs, I think).

Best regards,
Martin

From mail at martin-probst.com  Wed Apr  2 03:08:28 2008
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 2 Apr 2008 12:08:28 +0200
Subject: [antlr-interest] skipOffChannelTokens in CommonTokenStream
Message-ID: <45687F0D-B1A1-47A2-8711-5397DD99F9DB@martin-probst.com>

Hi,

I'm running into a bug where the parser will see and analyze tokens  
that are on a hidden channel, thus failing with noviablealt  
exceptions. I think the culprit is this code in  
CommonTokenStream.LT(int), around line 250.

		int i = p;
		int n = 1;
		// find k good tokens
		while ( n<k ) {
			// skip off-channel tokens
			i = skipOffTokenChannels(i+1); // leave p on valid token
			n++;
		}

Where k is the desired lookahead, p is the current position in the  
token stream and i is the position of the actually asked token. If k  
== 1 the while loop will never execute. So if the token at k (at 1) is  
a $channel == HIDDEN token, it will still be returned, even if it  
should be ignored.

I think changing the condition to "while ( n<=k )" and changing  
"skipOffTokenChannels(i+1)" to "skipOffTokenChannels(i)" should fix  
the issue.

Regards,
Martin

From mail at martin-probst.com  Wed Apr  2 04:04:27 2008
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 2 Apr 2008 13:04:27 +0200
Subject: [antlr-interest] Disabling Lexer rules using predicates
Message-ID: <BF159826-7CE0-4241-95F8-7545B1AA8280@martin-probst.com>

Hi all,

I'm trying to disable certain lexer rules depending on some fancy  
logic in the lexer. However ANTLR seems to have a different opinion on  
what is a validating and what is a disambiguating predicate.

My rule looks like this:

ElementContentChar
	:	{ inElement }?
		(('\u0020'..'\u0025' | '\u0027'..'\u003B' | '\u003D'..'\u007A' |
		'\u007C'..'\u007C' | '\u007E'..'\uD7FF' | '\uE000'..'\uFFFD')+);

Which was supposed to mean "only enter this rule if 'inElement' is  
true". ANTLR seems to interpret this as a validating predicate,  
throwing an exception if 'inElement' is false. Is there a way to force  
ANTLR into considering this as a semantic predicate? I already tried  
"{ inElement }?=>" but that didn't help.

Is there a way to globally disable certain Lexer rules if a certain  
condition holds?

Regards,
Martin

From thkarcher at gmx.de  Wed Apr  2 04:33:35 2008
From: thkarcher at gmx.de (Thomas Karcher)
Date: Wed, 02 Apr 2008 13:33:35 +0200
Subject: [antlr-interest] Disabling Lexer rules using predicates
In-Reply-To: <BF159826-7CE0-4241-95F8-7545B1AA8280@martin-probst.com>
References: <BF159826-7CE0-4241-95F8-7545B1AA8280@martin-probst.com>
Message-ID: <1207136015.5011.5.camel@localhost>

Hi,

> ANTLR into considering this as a semantic predicate? I already tried  
> "{ inElement }?=>" but that didn't help.

Something like
STEP	:	{prefixed}? => 'step'
	;

works for me. STEP is not emitted if prefixed is false.


Thomas


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/47544897/attachment-0001.bin 

From snyder at t-vec.com  Wed Apr  2 06:29:48 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Wed, 2 Apr 2008 09:29:48 -0400
Subject: [antlr-interest] Some C target issues
In-Reply-To: <725387cc0a47824b9469fe14c4e1da52@temporal-wave.com>
References: <004701c8942f$7ce7d100$265d080a@Gizmo>
	<725387cc0a47824b9469fe14c4e1da52@temporal-wave.com>
Message-ID: <004001c894c5$a07772b0$265d080a@Gizmo>

Jim, Gavin,

 

Thanks for the comments,

 

I should have looked at the example closer. It shows the correct use. 

 

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 01, 2008 5:04 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Some C target issues

 

4) Yes, it isn't a file scope level section, as per the C API docs. It is
for rules and if you are compiling as C++, then you can skip it and just use
@init. It is only for pure C, where you cannot generally declare an
initialize at the same time. 

 

Jim

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 12:35 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Some C target issues

 

1)   worked thanks

2)   ok

3)   ok

4)   Here is the top of the tree grammar I was using. I tried placing
garbage in the @declarations section and it never complains during
compilation nor does the code appear in my MScriptToBlock.c or
MScriptToBlock.h files.

 

//begin tree grammar

tree grammar MScriptToBlock;

options {

            tokenVocab=MScript; // reuse token types

            ASTLabelType=pANTLR3_BASE_TREE ; // $label will have type
CommonTree

            language=C;

            k=2;

}

 

@header {

#include <string.h>

#include <iostream.h>

}

 

@declarations

{

  SSSIG *test=NULL;

}

 

@members {  

  TCSSLModel *m_model=NULL;

  TCString m_rootScope;

} 

 

 

//container subsystem is the subsystem containing the eml block

start[TCSSLModel *pModel, TCString pRootScope] returns [TCSSLSubsystem
*rootSubsystem]

  : 

            so=script

            ;

            

....... rest of tree grammar

//end tree grammar

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 01, 2008 3:11 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Some C target issues

 

1) Set it to anything, but pANTLR3_BASE_TREE is probably best;

2) In tree grammars, you just use @includes or @headers or @members etc;

3) This is protected in the current 3.1 source;

4) I'll look at that one, but where were you using the @declarations? I have
a number of parsers that rely on this, but I will check that it is still
working for tree parsers. Can you post an example to save time?

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Tuesday, April 01, 2008 11:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Some C target issues

 

Hello,

 

1) Is there a default ASTLabelType=[?] to get rid of this warning? 

warning(152): tree grammar MScriptToBlock has no ASTLabelType option

 

2) Following the guidelines here: http://www.antlr.org/api/C/index.html, in
my Tree grammar I tried changing 

 

@header {

#include <string.h>

#include <string.h>

#include <iostream.h>

}

 

To this

 

@parser::includes {

#include <string.h>

#include <iostream.h>

}

 

And I get this error:

error(143): unknown or invalid action scope for tree grammar: parser

 

@parser::header also failed with the same error

 

3) The last version of code I have from 3/13/2008 still had this warning

y:\t_vec_cots\include\antlr3\antlr3defs.h(75) : warning C4005:
'_CRT_SECURE_NO_DEPRECATE' : macro redefinition

 

4) I tried using the @declarations section in my tree grammar and although
no warnings were generated none of the code in the @declarations section was
added to either the generated C or h files.

 

 

Thanks,

Chris

 

T-VEC Technologies, Inc.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/e0c18cd4/attachment-0001.html 

From nopik at data.pl  Wed Apr  2 06:38:18 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Wed, 02 Apr 2008 15:38:18 +0200
Subject: [antlr-interest] Parsing of partial input
Message-ID: <90a6dc0a2f47e7b19a122e3ef65293e5.qmail@home.pl>

Hello,
I am considering a small project which involve parsing of "partial input" - 
something that IntelliSense have to do, e.g. user types in:

void foo( int a, float b );
int bar = foo( 5,

and I would like to figure out, that parser have stopped second parameter 
to the function call (and there were no other alternative matches). Of 
course in general such task is full of ambiguities (in extreme case input 
text is empty, so any rule do match), as in some cases few rules may match. 
However, in most cases it is possible to figure out that we are calling 
function or are in middle of expression etc. - i.e. getting list of 
possible matching rules together with their progress (how much tokens these 
rules already matched) should be possible. I am wondering how much antlr 
does support such approach, if at all?


-- 
Best regards from
Kamil Burzynski


From mail at martin-probst.com  Wed Apr  2 07:46:57 2008
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 2 Apr 2008 16:46:57 +0200
Subject: [antlr-interest] skipOffChannelTokens in CommonTokenStream
In-Reply-To: <45687F0D-B1A1-47A2-8711-5397DD99F9DB@martin-probst.com>
References: <45687F0D-B1A1-47A2-8711-5397DD99F9DB@martin-probst.com>
Message-ID: <F43EC77F-6392-4B7B-9698-B0CD0B5E8139@martin-probst.com>

False alarm, my token was not on the right channel. But that  
CommonTokenStream is really quite a confusing machine for such a  
semmingly simple task...

Regards,
Martin

Am 02.04.2008 um 12:08 schrieb Martin Probst:
> Hi,
>
> I'm running into a bug where the parser will see and analyze tokens  
> that are on a hidden channel, thus failing with noviablealt  
> exceptions. I think the culprit is this code in  
> CommonTokenStream.LT(int), around line 250.
>
> 		int i = p;
> 		int n = 1;
> 		// find k good tokens
> 		while ( n<k ) {
> 			// skip off-channel tokens
> 			i = skipOffTokenChannels(i+1); // leave p on valid token
> 			n++;
> 		}
>
> Where k is the desired lookahead, p is the current position in the  
> token stream and i is the position of the actually asked token. If k  
> == 1 the while loop will never execute. So if the token at k (at 1)  
> is a $channel == HIDDEN token, it will still be returned, even if it  
> should be ignored.
>
> I think changing the condition to "while ( n<=k )" and changing  
> "skipOffTokenChannels(i+1)" to "skipOffTokenChannels(i)" should fix  
> the issue.
>
> Regards,
> Martin


From felix_do at web.de  Wed Apr  2 08:10:16 2008
From: felix_do at web.de (Felix Dorner)
Date: Wed, 02 Apr 2008 17:10:16 +0200
Subject: [antlr-interest] Reuse rule-return "shortcuts"
Message-ID: <47F3A1D8.9050008@web.de>

Hey,

I try to reuse abbreviations for return values in rules like this:

expression: op=unaryOp e1=expression | op=binaryOp e1=expression 
e2=expression;

It seems like Antlr(3.0.1) can't handle this correctly, as it does not 
suffix the "op" with a unique id. So "op" gets only declared once. In 
generated code for the the second alternative, the assignment is 
completely missing.

Strangely a few minutes ago I got a warning "redefiniton of rule 
attribute with incompatible type" (or so). That warning now doesn't 
appear anymore, instead this silent bogus.

I'd like to be able to reuse these names (how are they called actually?) 
in different  alternatives even  if their types are different.  Antlr 
would have to append unique id in the generated code then.

Thanks for comments.
Felix


From hardawaycg at gmail.com  Wed Apr  2 08:16:25 2008
From: hardawaycg at gmail.com (hardaway)
Date: Wed, 2 Apr 2008 23:16:25 +0800
Subject: [antlr-interest] how do i throw my exception and get the rule text
	and line number
Message-ID: <3bc8062e0804020816m45349554g151d590aa4980ecb@mail.gmail.com>

in antlr 3,how do i throw my exception in an rule,raw grammar just like
below:

grammar test;
@header
{
 import java.util.HashMap;
}
@member
{
  HashMap reportMap= new HashMap();
}

prog:line+
line: reportStat | indexStat;

reportStat :  a=ID '=' '[' b=ID ']'  ( a=ID '=' '[' b=ID ']' )*
                  {
                     reportMap.put($a.text, $b.text);
                   };
indexStat  :  a=ID '(' b=INT ',' c=INT ')' '=' d=INT
                   {
                     if(reportMap.containsKey($a.text)
                      {
                          //System.out.println("reportID=" + $a.text + "has
not been defined");
                          //just here i want to throw my Exception maybe
like this
                           throws new MyException("report not defined",
ruleText, lineNumber);
                           //and more i want to record the line number and
the text,how can i ge the two values?.$a.line doesn't work.and is this the
only way to record the full text : $a.text + '(' $b.text + "," + $c.text +
")=" + $d.text; is there any simple way to get the full text with the
indexStat rule?
                       }
                    }
                   ;
and i have text like this:
a=[REPA],b=[REPB],c=[REPC]
a(1,1)=100
e(5,5)=2

when i throw exception to warning that "e(5,5)=2" e has not been defined ,i
also want to alert with the full text "e(5,5)=2" and also with line number
"3".how can i get these two value?

besides i can't define the rule like this
indexStat  throws MyException
               :  a=ID '(' INT ',' INT ')' '=' INT
then  when the parser file generated ,i need to modify the java file with
the indexStat method ,adds" throws MyException".what should i do with the
grammar file to make i easy?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/2c4e8ec4/attachment.html 

From jimi at temporal-wave.com  Wed Apr  2 09:41:04 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 09:41:04 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <353010144.20080402075516@data.pl>
Message-ID: <a4806f3c42c85847bc9611b74af11e8a@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kamil Burzynski
> 
> Well, the thing is that it is natural way of doing in C++. In pure C
> returning struct by value is rarely used, I agree. But in C++ (and Java
> in fact), returning objects by value is much more common. Especially in
> my case - when the object was smart pointer itself. These entities are
> *meant* to be passed as value. And since they point to (usually)
> non-trivial class, you cannot reduce them away by returning a bunch of
> struct members at once.

If they are pointers, then they can be assign NULL so it should not be an issue, but as I said, if you use more than one element then you won't get the issue, so at worst, you could add a dummy int to the returns clause. Can you give me an example, other than struct, which you do not need to return, of something that you cannot because it cannot be assigned to NULL? I think, after a bit of looking, that I can avoid initializing the single return element, but something nags at the back of my mind about this. I would like to have an example of something that cannot be done that a user actually wants to do, so I can see if I can make it work. Thanks.

> Yeah, I am not familiar enough with antlr yet and do not know what tree
> parsing is for, gotta read more about it. Unfortunately I did not found
> any good documentation about it on antlr.org, maybe I was not looking
> carefully enough.

Best thing is to just buy yourself a copy of the reference book:
http://www.pragprog.com/titles/tpantlr

There is a lot of great information in there on how to do all sorts of things.

> > However, the answer to your problem is that the rule already
> > returns a struct if you have more than one return value, so if you
> > have just one element in your struct, then don't use the struct. If
> 
> But if you have object as in Java, you cannot return all its members
> separately, that would make no sense.

Would you want to return an object by value? Surely it will be by reference? However, as I said, if this really is the case, then add a dummy flag to the return for the moment, while I look in to it.

> > So, I think that we have reduced all your problems to the one
> > grammar error, one user error, one user misunderstanding and zero
> > problems with the C target, so I don't think you need to be concerned
> > about the C runtime :-)
> 
> Not so easy ;) There is one grammar error indeed. I do not know which
> problem you are thinking about my error, 

The fact that you did not relink your main program with a new .so and therefore got a segmentation violation when trying to run the binary with it. I explained that i n a previous eamil.

> In my other email I also indicated other error which are purely related
> to
> C runtime, I think: when rule uses 2 scopes, first of them is not
> accessible.

This was just that you did not relink the main executable with your library I believe. If not, then can you provide an example as I did not see anything in the prior emails. It might be there of course, but I didn't see anything else?

Jim




From chris at lambrou.net  Wed Apr  2 09:44:03 2008
From: chris at lambrou.net (Chris Lambrou)
Date: Wed, 2 Apr 2008 17:44:03 +0100
Subject: [antlr-interest] JavaScript grammar
In-Reply-To: <20080401152056.GA7213@badgers-in-foil.co.uk>
References: <70bbae280803281313i70fb25d1hbd758ac5e1049ad2@mail.gmail.com>
	<BAYC1-PASMTP04A88DA32D362FF409C90DF5FB0@CEZ.ICE>
	<70bbae280803292243k2d575d3et4b67945a013e03dc@mail.gmail.com>
	<C3525AF49F7D374D8E4D3C46ED4BC6211685DD@srvxdcex.xebic.com>
	<70bbae280804010741m62f0bfdh41111ad913084d2@mail.gmail.com>
	<20080401152056.GA7213@badgers-in-foil.co.uk>
Message-ID: <70bbae280804020944s609a6c9y4f29cfe0a3f368ff@mail.gmail.com>

Ah, I see the problem now. Having re-read the spec, I think one implied
solution is to incorporate the parsing of RE literals as part of the parsing
of the entire script, rather than as tokens. On the other hand, it does also
explicitly suggest enclosing RE literals in parentheses to avoid parsing
ambiguities, though this isn't mandatory (i.e. a compliant parser needs to
deal with ambiguities).

I'm not sure where that leaves me... I'll probably have a stab at including
rules to fully parse RE literals.

Chris


P.S. On a side note, I'm finding that every time I go back through the spec,
lots of edge cases start to creep out of the woodwork. For example, /*...*/
style comments that contain line-terminators should be treated as
line-terminator tokens, whilst those that don't should be treated like
white-space. The further I delve into this, the more I think that allowing
semicolon statement terminators to be optional was a poor choice on the part
of the spec designers. It just leads to unnecessary complication.



On 01/04/2008, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
>
> On Tue, Apr 01, 2008 at 03:41:27PM +0100, Chris Lambrou wrote:
>
> > As for regular expression literals, I'm
> > inclined to simply treat them as separate Regex tokens without any
> further
> > treatment, and leave their analysis to a separate grammar. Interestingly
> > enough, whilst the ECMAScript spec has a whole section on the
> composition of
> > regular expression literals, it doesn't appear to incorporate them into
> the
> > rest of the grammar - not that I could see, anyway. I think they can be
> > included as an alternative in the literal rule, which then becomes
> >
> > literal : 'null' | 'true' | 'false' | StringLiteral | NumericLiteral |
> Regex
>
>
> Regular expression literals are ambiguous with '/' (division) unless you
> give ANTLR a hand to work out what's what.  Some discussion here,
>
>
> http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control
>
>
> ta,
> dave
>
>
> --
> http://david.holroyd.me.uk/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/9bfb3163/attachment.html 

From jimi at temporal-wave.com  Wed Apr  2 10:23:58 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 10:23:58 -0700
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <014c01c89499$06f07c30$14d17490$@cz>
Message-ID: <3da59e1498908e478c3848593b50605e@temporal-wave.com>

Tom,

 

This is the C version of the runtime, not the Java version. Until this week I have been very busy and not had a chance to look at C++ tree building. However, you CAN use it, but it will take a bit more ingenuity. 

 

The adaptor is an adaptor, or the default tree nodes would not work, but in C there is no class inheritance and I cannot protect functions/pointers that must be public, from being used anywhere. The Java version of the tree node also has addChild etc. It needs to because the tree adaptor needs to ask it to add children. However, if you don't call the treenode methods, then they won't be used directly in either C or Java or any other target.

 

If you want a different tree node and different adaptor, then you must do it the C way for the moment. This means creating a set of functions that have C linkage and providing a pointer to this interface as your adaptor. The internals will not call the node functions directly, and if they do, then it is merely a mistake that I will fix. At some point, i will provide some C++ classes to make this easier for C++ programmers. At that point, there will be inheritance and so on available, which I do not have for C. Hence, it isn't 'incorrect', it is just C.

 

So, you need two C++ classes, one for an adaptor one for a tree node. The internals don't matter, but within them you need to be able to provide a pointer to structure, within which there are pointers to the 'method' set, which the generated code will call and not care what you do with the call. There is also a pointer to a 'super' class (which is void and so can point to the object if you want, though there is another user pointer that can be for that). The tree adaptor uses the interface pANTLR3_BASE_TREE to play with nodes, the tree grammar uses the interface pANTLR3_BASE_TREE_ADAPTOR. As there is no inheritance and interfaces, I cannot simply make the pointers all void and cast as all that happens is that it becomes a pointer to a function anyway, so then you would have to build your own set of pointers to functions and basically reproduce all the work I already did for you. So in C you define your own structure, and within that hold a pointer or embedded the base structure, which your methods return a pointer to. What exactly contains this structure doesn't matter, hence it is an interface.

 

Is it more of a pain than C++ inheritance? Yes, it certainly is; it is C. Will I provide something better for C++ programmers? Yes, but I don't have it right now, so if you need to do something in C++ right now, then it will be a bit more work for you I am afraid. I am sorry about that, but this is all free work and I have asked for examples of what C++ programmers find difficult with the C interface, which I will provide answers for in my own time. 

 

However, your conjecture that the current design isn't 'correct' doesn't make any sense as it is a C design, not a class based design - this is as close as you can get in C and under the covers isn't that far away from what the C++ compilers do anyway (within the limits of not being able to include assembler).

 

Jim

 

 

From: Tomas Potrusil [mailto:potrto at centrum.cz] 
Sent: Wednesday, April 02, 2008 1:11 AM
To: ANTLR
Cc: Jim Idle; Terence Parr
Subject: RE: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

What was wrong on my ideas bellow? I know that with the current design I need a new tree adaptor and to "override" the ANTRL_BASE_TREE which means that I must include the ANTLR_BASE_TREE structure (or better, MY_TREE structure which will contain COMMON_TREE which contains ANTLR_BASE_TREE structure) inside my AST classes. This is completely clear and it will probably work without any problems.

 

All I wanted to point out was that the current design is not very correct (unlike Java version).

 

One question: why should I (or probably you - you are the parser generator) use such an adaptor when you can call some functions (like addChild) directly through ANTLR_BASE_TREE interface? You hold pointer to that interface. But you give up to do this and call the "adaptor" (function with the same name - addChild) which in turn calls the function directly on the tree. There are few such functions, right? Why they are there? It doesn't make sense.

 

Java version (its documentation) makes this clear. These functions are in the TreeAdaptor interface also, but they have slightly different semantic meaning: their attributes are Objects not direct interfaces. Of course, the adaptor should hide the real tree that is used behind the scene! Users can use Tree interface (this does the BaseTreeAdaptor), but can use completely different tree classes they like.

 

Here is a correspondence in this list:

> Why does the method create(Token) return an Object? I'm curious why an

> Object and not a Tree. When you manipulate trees, it seems to cause

> quite a bit of (useless?) casts everywhere...

this is because you might want tree nodes that do not implement ANTLR's 

tree interface. When I made a TreeAdaptor to output XML (DOM) I was 

quite happy that I could work with Objects :)

 

There is one another feature that is hidden in the adaptors. They are object factories. They create new trees so that the runtime doesn't need to know the real type of the tree. In Java this is particularly funny because these "factory methods" (create()) are adaptors as well and so they return Object. Nevertheless Terence Parr knows this: "Rather than have a separate factory and adaptor, I've merged them."

 

In C version these "factory methods" returns pANTLR3_BASE_TREE. This is correct, no problem.

 

To sum it up - the ANTLR3_BASE_TREE_ADAPTOR is an object factory, but it is NOT a tree ADAPTOR. It's a pity!

 

Why I'm writing all this garbage? Because the idea of tree adaptors is wonderful and I cannot use it. Adaptors would make my implementation much easier. I would just create a new adaptor that would work with our existing C++ AST classes and that's it! Right now I must include a "MY_TREE" structure in our classes that just recalls ANTLR3_BASE_TREE functions to our methods. This is an overhead that is not necessary.

 

Tom

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 01, 2008 6:54 PM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

Please read the comments in the source for common tree adaptor and base tree adaptor before attempting this, as well as http://www.antlr.org/api/C/index.html. 

 

In the C version , all adaptors and so on should return a pointer to pANTLR_BASE_TREE, which should be contained within your own tree nodes (which can contain anything so long as they have an ANTLR_BASE_TREE interface. That interface contains a pointer to the higher level structure, such as COMMON_TREE, which in turn can point to an even higher level tree. But, you need to implement an adaptor, which will handle the tree for you and which the generated code will use. The adaptor needs to provide the methods in the BASE_TREE_ADAPTOR. You can probably create a COMMON adaptor, then install pointers to your own methods for those that won't work as is. To be honest though, I don't know of anyone that is doing this, so you may be pioneering here, though the standard implementation uses the same mechanisms, so it must 'work' ;-)

 

It would seem that in your case you will want both an adaptor and a tree implementation. You might find it just as easy to implement the standard tree, then use a tree grammar to construct your own tree, though you shoudl not HAVE to do this.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tomas Potrusil
Sent: Tuesday, April 01, 2008 3:58 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

I was wrong. I do not need to "override" a tree, but a tree adaptor! Investigating the mailing-list and the source code I've found that the generated parser uses just the adapter and not the tree directly. But then there is something strange in the current C runtime:

 

In Java runtime the tree adaptor interface works with "Object" objects only. Of course it must abstract access to real tree nodes - it is an adaptor; not just an object factory.  Terence Parr in a documentation says: "Rather than have a separate factory and adaptor, I've merged them."

 

The C runtime simulates its Java version, but it doesn't work with void* ("Object" in C) but directly with ANTLR3_BASE_TREE. It is not an adaptor anymore, it is just an object factory. Methods like

ANTLR3_TREE_ADAPTOR::addChild(...adaptor, pANTLR3_BASE_TREE t, pANTLR3_BASE_TREE child)

are useless, because everyone can call t->addChild(child) directly.

 

This prevents me to use our existing AST C++ classes within ANTLR without "subclassing" them from ANTLR3_COMMON_TREE, doesn't it...

 

Tom

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, March 31, 2008 1:39 AM
To: ANTLR
Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

You will probably find it best to override pANTLR3_COMMON_TREE by encapsulating this within your own structure, as per the docs. This, as all the structures are, is a set of pointers to functions and you need only override the ones that you have to, just as in Java. Runtime type checking 'can' be an overhead, so i am not sure you would want to do that anyway, but I will contemplate your suggestion of course as it has some merit.

 

Jim

 

From: Tomas Potrusil [mailto:potrto at centrum.cz] 
Sent: Friday, March 28, 2008 5:43 AM
To: Jim Idle
Cc: ANTLR
Subject: RE: [antlr-interest] advocacy of C++ support in ANTLR 3.x

 

Oh yes, I know. I've already made a prototype implementation of a part of the grammar based on the idea I presented bellow (atom returns [OurNode* result] etc.). It is working but it is a little bit clumsy and I cannot use the resulting AST for a tree parsing - of course, I'm creating my own AST.

 

I've been thinking about the new tree adapter (I was talking about bellow) and probably you are true,  few C++ wrappers could do the work. But there is one inconvenience - there is not an "abstract" tree yet. The most abstract tree is ANTLR3_BASE_TREE_struct which contains children vector and other attributes. The ANTLR3_TREE_struct with only pointers to functions (something like a Java interface) would suit my needs better. Our existing AST nodes solve the storage already... Could you do it, please?

 

Another problem is safety. When somebody call ANTLR3_BASE_TREE_struct::addChild(pANTLR3_BASE_TREE tree) for example, I must trust him that the tree argument is really the tree he is calling. I cannot write dynamic_cast<MyTreeWrapper>(tree->super). This cannot be solved in the current C-based system.

 

Tom

 

From: Jim Idle

 

ANTLR 3.1 C target can now incorporate C++ code directly into the grammar and so can easily call your existing C++ code. All you do is compile the C output file as C++ (or rename it to .cpp perhaps). 

Can you try using that and let me know if you think that there is anything that you could do if the runtime was C++ that you can't do right now? I don't really think that there will be.

You need to get the latest 3.1 snapshot from the downloads page and use the ANTLR Tool hjar in there. Then build the ANTLR 3.1 C runtime from the tar.gz in the dist director under the runtime/C directory in the snapshot. 3 or 4 people have successfully integrated their C++ code with the C target now and I think you will have similar success :-)

Jim

 

-----

Hallo,

 

I'm new to the list. I'm trying to use ANTLR for generating a SQL parser because our current parser doesn't support Unicode input - it was generated by Lex/Yacc. We use C++ and we have our own complex AST that is used by a SQL engine already... So my idea is to write a tree adapter that would create our existing AST nodes (they would just inherit ANTLR tree interface).

 

And here comes a problem that ANTLR 3.x doesn't contain support for "pure" C++ implementation. I've just found Jim Idle's "promise":

 

> Later I may well produce a complete C++ implementation from scratch,

> however, at this point I am not sure that it buys you anything. Please

> let me know if there are things you cannot do with the system as it

> stands (other than access the tokens and so on using C++ objects, which

> will be done later). 

 

I know that the problem could be solved with the current system somehow, but it would be probably very ugly. So yes, complete C++ implementation will buy us something! Or we can use ANTLR 2.x...

 

Right now we will probably try to build the AST by hand:

 

atom returns [OurNode* result]

@init { $result = NULL; }

:              NUMBER

                {

                               std::string str((char*)$NUMBER.text->chars, $NUMBER.text->len);

                               $result = new OurNumberNode(str);

                };

 

Or do you have some other ideas?

 

Thanks

 

Tom

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/546dee1e/attachment-0001.html 

From jimi at temporal-wave.com  Wed Apr  2 10:28:28 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 10:28:28 -0700
Subject: [antlr-interest] Disabling Lexer rules using predicates
In-Reply-To: <BF159826-7CE0-4241-95F8-7545B1AA8280@martin-probst.com>
Message-ID: <573b05d2beaac94e9c9e26fc49152cac@temporal-wave.com>

You do want a gated predicate, but you may find that you have to use the latest snapshot of 3.1 to make this work. The three main targets Java/C/C# are being worked on for release now and this should happen pretty soon. But if you are using the Java or C targets, then the 3.1b snapshots should be fine for you to use. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Martin Probst
> Sent: Wednesday, April 02, 2008 4:04 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Disabling Lexer rules using predicates
> 
> Hi all,
> 
> I'm trying to disable certain lexer rules depending on some fancy
> logic in the lexer. However ANTLR seems to have a different opinion on
> what is a validating and what is a disambiguating predicate.
> 
> My rule looks like this:
> 
> ElementContentChar
> 	:	{ inElement }?
> 		(('\u0020'..'\u0025' | '\u0027'..'\u003B' |
> '\u003D'..'\u007A' |
> 		'\u007C'..'\u007C' | '\u007E'..'\uD7FF' |
> '\uE000'..'\uFFFD')+);
> 
> Which was supposed to mean "only enter this rule if 'inElement' is
> true". ANTLR seems to interpret this as a validating predicate,
> throwing an exception if 'inElement' is false. Is there a way to force
> ANTLR into considering this as a semantic predicate? I already tried
> "{ inElement }?=>" but that didn't help.
> 
> Is there a way to globally disable certain Lexer rules if a certain
> condition holds?
> 
> Regards,
> Martin




From jimi at temporal-wave.com  Wed Apr  2 10:42:01 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 10:42:01 -0700
Subject: [antlr-interest] Strange ambiguous decision warning
In-Reply-To: <FB4AAA69-8E18-42C0-9338-C47E8915B0E7@martin-probst.com>
Message-ID: <920fc83661eec642ae6f7acac6533a95@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Martin Probst
> Sent: Wednesday, April 02, 2008 1:19 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Strange ambiguous decision warning
> 
> Hi all,
> 
> I'm running into a seemingly strange ambiguity warning with ANTLR 3
> (latest beta).
> 
> I have a rule like this:
> sequenceType	:	(EMPTY_SEQUENCE '(' ')')
> 			| (itemType occurrenceIndicator) => (itemType
> occurrenceIndicator)
> 			| itemType ;
> occurrenceIndicator
> 		:	'?' | '*' | '+';
> itemType	:	kindTest | (ITEM '(' ')') | atomicType ;
> kindTest	:	...;
> atomicType	:	qNameOrIdent ;
> qNameOrIdent	:	QNAME | EMPTY_SEQUENCE | ...;
> 
> ANTLR complains about sequenceType:
> ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
> warning(200): /Users/martin/workspace/XQPretty/src/antlr/XQuery.g:
> 235:14: Decision can match input such as "EMPTY_SEQUENCE" using
> multiple alternatives: 1, 2, 3 As a result, alternative(s) 2,3 were
> disabled for that input


If you use ANTLRWorks, it will help you to see the following:

Alt1 starts with EMPTY_SEQUENCE
Alt2 goes to itemType
At3  goes to itemType

itemType goes to atomicType

atomicType goes to qNameOrIndent

qNameOrIndent contains EMTPY_SEQUENCE


hence all three alts can start with EMPTY_SEQUENCE. as occurenceIndicator is optional, then it is ambiguous.


Change your rule to:

sequenceType	: (EMPTY_SEQUENCE '(')=>(EMPTY_SEQUENCE '(' ')')  
			| itemType occurrenceIndicator?
			;

Then you will get ambiguities on '+', which means that you actually need:

sequenceType	: (EMPTY_SEQUENCE '(')=>(EMPTY_SEQUENCE '(' ')')  
			| itemType ((occurrenceIndicator)=>occurrenceIndicator)?
			;

If you want to eliminate all the warnings.

Doing this removes the huge predicate that you have right, replace it with a two token sequence, which will be much faster :-)

Though it is somewhat irrelevant to the issue, you will find your grammar more maintainable if you format it a little ;-)

Jim




From jimi at temporal-wave.com  Wed Apr  2 11:11:47 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 11:11:47 -0700
Subject: [antlr-interest] Reuse rule-return "shortcuts"
In-Reply-To: <47F3A1D8.9050008@web.de>
Message-ID: <523b26c0992e184690cb8fcbef712dc9@temporal-wave.com>

Felix,

the label is just that, a label named as per your choice, hence it is generated as a label in the target language, typed according to the rule name. Just as in say Java you cannot have both an int and a String called 'felix', you cannot use the same name on different rules as they have different return types and hence the variable types need to be different. If you want suffixes you must add them yourself. Just think of the labels as variable names and it should make sense to you.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Felix Dorner
> Sent: Wednesday, April 02, 2008 8:10 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Reuse rule-return "shortcuts"
> 
> Hey,
> 
> I try to reuse abbreviations for return values in rules like this:
> 
> expression: op=unaryOp e1=expression | op=binaryOp e1=expression
> e2=expression;
> 
> It seems like Antlr(3.0.1) can't handle this correctly, as it does not
> suffix the "op" with a unique id. So "op" gets only declared once. In
> generated code for the the second alternative, the assignment is
> completely missing.
> 
> Strangely a few minutes ago I got a warning "redefiniton of rule
> attribute with incompatible type" (or so). That warning now doesn't
> appear anymore, instead this silent bogus.
> 
> I'd like to be able to reuse these names (how are they called
> actually?)
> in different  alternatives even  if their types are different.  Antlr
> would have to append unique id in the generated code then.
> 
> Thanks for comments.
> Felix





From nopik at data.pl  Wed Apr  2 11:14:41 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Wed, 2 Apr 2008 20:14:41 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <a4806f3c42c85847bc9611b74af11e8a@temporal-wave.com>
References: <353010144.20080402075516@data.pl>
	<a4806f3c42c85847bc9611b74af11e8a@temporal-wave.com>
Message-ID: <123141467.20080402201441@data.pl>

Hello,

>> Well, the thing is that it is natural way of doing in C++. In pure C
>> returning struct by value is rarely used, I agree. But in C++ (and Java
>> in fact), returning objects by value is much more common. Especially in
>> my case - when the object was smart pointer itself. These entities are
>> *meant* to be passed as value. And since they point to (usually)
>> non-trivial class, you cannot reduce them away by returning a bunch of
>> struct members at once.

> If they are pointers, then they can be assign NULL so it should not

They are smart pointers, not pointers. It means, that they are (rather
complex) template objects mimicking pointer behavior. They are very
useful when it comes to memory management and avoiding memleaks, for
example. And their version taken from boost library do not allow
assigning raw pointer (or int) unfortunately (which is reasonable, and
would be dangerous if enabled). More info at
http://en.wikipedia.org/wiki/Smart_pointers or at boost.org.

> be an issue, but as I said, if you use more than one element then you
> won't get the issue, so at worst, you could add a dummy int to the
> returns clause. Can you give me an example, other than struct, which

Hm, thats interesting idea. I did not tried returning 2 values.. this
workaround will be safer and easier than mine.

> you do not need to return, of something that you cannot because it
> cannot be assigned to NULL?

Smart pointer is the example ;) The idea is something like this (though
full understanding requires some C++ and template knowledge):

class Foo
{
public:
       void do_something();
};

template<typename T> class SmartPtr
{
public:
 SmartPtr( T *t ) { my_t = t; };
 T &operator->() { return *t; };
private:
 T *t;
};

typedef SmartPtr<Foo> SmartFooPtr;

void bar()
{
  SmartFooPtr foo_ptr( new Foo() );
  foo_ptr->do_something(); //smart pointer is used like regular pointer
}

The trick is that you can add extra functionality to you pointer-like
object (namely SmartPtr template above). 99% of smart pointers do
reference count their objects and call delete when last reference is
destroyed. For example:

void foo()
{
     Foo *foo_ptr = new Foo();
     Foo *foo_ptr2 = foo_ptr;

     //memory leak at the end of function, since nobody called delete
}

and their smart version:

void foo()
{
     SmartPtr<Foo> foo_ptr( new Foo() );   //SmartPtr may create
     //reference counter and set it to 1

     SmartPtr<Foo> foo_ptr2( foo_ptr ); //Reference counter bumped to 2

     //No memory leak. At the end of function 2 destructors will be
     //called, one will decrement reference counter to 1, second
     //will do the same, and once counter reaches 0, SmartPtr will call
     //delete automatically.
}

Of course this is very simple case, but when you pass your pointers
around complex methods, it is sometimes awkward to call delete properly.
Java have garbage collector, smart pointers are just C++-ish way of
doing the same.

> I think, after a bit of looking, that I
> can avoid initializing the single return element, but something nags
> at the back of my mind about this. I would like to have an example of
> something that cannot be done that a user actually wants to do, so I
> can see if I can make it work. Thanks.

Well, just as you, I do not want to have dangerous C target at antlr ;)
So, if removal of NULL here is dangerous, just do not do it. C++ people
will have to do workarounds, but it still will be safer.

> Best thing is to just buy yourself a copy of the reference book:
> http://www.pragprog.com/titles/tpantlr

> There is a lot of great information in there on how to do all sorts of things.

Yeah, I was considering it already.. and made the purchase minute ago :D

>> But if you have object as in Java, you cannot return all its members
>> separately, that would make no sense.

> Would you want to return an object by value? Surely it will be by
> reference? However, as I said, if this really is the case, then add a
> dummy flag to the return for the moment, while I look in to it.

No, I indeed wanted to return by value. Thats why used nasty case of
returning plain C struct by value, too ;) Smart pointers described above
are just example of returning by value (just like regular pointers are,
in this case). Till now I have created ugly workaround, but dummy return
value seems to be much cleaner than my solution.

>> Not so easy ;) There is one grammar error indeed. I do not know which
>> problem you are thinking about my error,

> The fact that you did not relink your main program with a new .so

Ah yes. Today I have also checked on the other machine, main.o was not
rebuild, indeed. I have tweaked my makefile so it wont happen again :D

> and therefore got a segmentation violation when trying to run the
> binary with it. I explained that i n a previous eamil.

>> In my other email I also indicated other error which are purely related
>> to
>> C runtime, I think: when rule uses 2 scopes, first of them is not
>> accessible.

> This was just that you did not relink the main executable with your
> library I believe. If not, then can you provide an example as I did
> not see anything in the prior emails. It might be there of course, but
> I didn't see anything else?

Sure, here you go (my mailer may wrap lines, watch out):

11854 20:12:06 nopigentoo ~/Warsztat/antlr/scope$ cat main.c
#include    <scope1Lexer.h>
#include    <scope1Parser.h>

int ANTLR3_CDECL
main    (int argc, char *argv[])
{
    pANTLR3_UINT8           fName;
    pANTLR3_INPUT_STREAM    input;
    pscope1Lexer                    lxr;
    pANTLR3_COMMON_TOKEN_STREAM     tstream;
    pscope1Parser                               psr;
    if (argc < 2 || argv[1] == NULL)
    {
                        fName   =(pANTLR3_UINT8)"./input"; // Note in VS2005 debug, working directory must be configured
    }
    else
    {
                        fName   = (pANTLR3_UINT8)argv[1];
    }
    input       = antlr3AsciiFileStreamNew(fName);
    lxr     = scope1LexerNew(input);        // CLexerNew is generated by ANTLR
                tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));
    psr     = scope1ParserNew(tstream);  // CParserNew is generated by ANTLR3

    psr->evaluate(psr);

    psr     ->free  (psr);          psr = NULL;
    tstream ->free  (tstream);      tstream = NULL;
    lxr     ->free  (lxr);          lxr = NULL;
    input   ->close (input);        input = NULL;

    return 0;
}

11855 20:12:09 nopigentoo ~/Warsztat/antlr/scope$ cat scope1.g
grammar scope1;

options {
  language = C;
}

scope A
{
        int a;
}

scope B
{
        int b;
}

scope C
{
        int c;
}

evaluate
scope A;
scope B;
scope C;
@init
{
        printf("\%p \%p \%p\n", SCOPE_TOP(A), SCOPE_TOP(B), SCOPE_TOP(C) );
        $A::a = 42;
        $B::b = 42;
        $C::c = 42;
}
: 'foo';

11856 20:12:14 nopigentoo ~/Warsztat/antlr/scope$ java org.antlr.Tool scope1.g
ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
Generating scope1Parser.c
Generating scope1Parser.h
Generating scope1Lexer.c
Generating scope1Lexer.h
11857 20:12:26 nopigentoo ~/Warsztat/antlr/scope$ gcc *.c -o main -I. -lantlr3c
11858 20:12:35 nopigentoo ~/Warsztat/antlr/scope$ ./main
(nil) (nil) 0x52d390
Segmentation fault
11859 20:12:37 nopigentoo ~/Warsztat/antlr/scope$

As you see, only last scope (C) was initialized.

-- 
Best regards from
Kamil Burzynski


From gudnabrsam at yahoo.com  Wed Apr  2 11:19:30 2008
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Wed, 2 Apr 2008 11:19:30 -0700 (PDT)
Subject: [antlr-interest] Fwd: Re: [antlr-dev] antlr3-task in depot, updated
Message-ID: <860972.75465.qm@web55101.mail.re4.yahoo.com>

forgot... :)

--- Matt Benson <gudnabrsam at yahoo.com> wrote:

> Date: Wed, 2 Apr 2008 11:18:40 -0700 (PDT)
> From: Matt Benson <gudnabrsam at yahoo.com>
> Subject: Re: [antlr-dev] antlr3-task in depot,
> updated
> To: Terence Parr <parrt at cs.usfca.edu>
> 
> 
> --- Terence Parr <parrt at cs.usfca.edu> wrote:
> 
> > Gang,
> > 
> > Added Juergen's antlr3 ANTLR task (did you write
> the
> > initial version  
> > by the way?  we should add you to the readme.) 
> 
> I think it was adapted from the ANTLR2 task in Ant,
> but Juergen:  don't attack me if that isn't so.  :) 
> That's just what I thought...
> 
> > Anyway, it's in: // 
> > depot/code/antlr-ant/... so you need to have:
> > 
> >        //depot/code/antlr-ant/...
> > //parrt.spork/code/antlr-ant/...
> > 
> > in your client/project mapping to see it...many of
> > you won't have  
> > access; let me know if you want it, i'll alter
> > protections.
> > 
> > Jim add -X antlr option to ant task.
> >
> 
> Ter, want to set me up for it?
> 
> Thanks,
> Matt
>  
> > Ter
> > 
> > add
> >
> //depot/code/antlr-ant/main/antlr3-task/Readme.txt#1
> > add
> >
>
//depot/code/antlr-ant/main/antlr3-task/antlr3-src/org/apache/
> > 
> > tools/ant/antlr/ANTLR3.java#1
> > add
> >
>
//depot/code/antlr-ant/main/antlr3-task/antlr3-src/org/apache/
> > 
> > tools/ant/antlr/antlib.xml#1
> > add
> >
>
//depot/code/antlr-ant/main/antlr3-task/antlr3-task.doc#1
> > add
> >
>
//depot/code/antlr-ant/main/antlr3-task/antlr3-task.htm#1
> > add
> >
> //depot/code/antlr-ant/main/antlr3-task/antlr3.jar#1
> > add
> > //depot/code/antlr-ant/main/antlr3-task/d2u.zip#1
> > add
> >
>
//depot/code/antlr-ant/main/antlr3-task/simplecTreeParser.zip#1
> > Change 4733 submitted.
> > 
> > _______________________________________________
> > antlr-dev mailing list
> > antlr-dev at antlr.org
> >
> http://www.antlr.org/mailman/listinfo/antlr-dev
> > 
> 
> 
> 
>      
>
____________________________________________________________________________________
> You rock. That's why Blockbuster's offering you one
> month of Blockbuster Total Access, No Cost.  
> http://tc.deals.yahoo.com/tc/blockbuster/text5.com
> 



      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com

From jimi at temporal-wave.com  Wed Apr  2 11:24:14 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 11:24:14 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <123141467.20080402201441@data.pl>
Message-ID: <278bd7511d342d41a95ab03525a93c5f@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kamil Burzynski
> Sent: Wednesday, April 02, 2008 11:
 
> > This was just that you did not relink the main executable with your
> > library I believe. If not, then can you provide an example as I did
> > not see anything in the prior emails. It might be there of course,
> but
> > I didn't see anything else?
> 
> Sure, here you go (my mailer may wrap lines, watch out):
> 
> 
> evaluate
> scope A;
> scope B;
> scope C;
> @init
> {
>         printf("\%p \%p \%p\n", SCOPE_TOP(A), SCOPE_TOP(B),
> SCOPE_TOP(C) );
>         $A::a = 42;
>         $B::b = 42;
>         $C::c = 42;
> }
> : 'foo';
> 
> 11856 20:12:14 nopigentoo ~/Warsztat/antlr/scope$ java org.antlr.Tool
> scope1.g
> ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
> Generating scope1Parser.c
> Generating scope1Parser.h
> Generating scope1Lexer.c
> Generating scope1Lexer.h
> 11857 20:12:26 nopigentoo ~/Warsztat/antlr/scope$ gcc *.c -o main -I. -
> lantlr3c
> 11858 20:12:35 nopigentoo ~/Warsztat/antlr/scope$ ./main
> (nil) (nil) 0x52d390
> Segmentation fault
> 11859 20:12:37 nopigentoo ~/Warsztat/antlr/scope$
> 
> As you see, only last scope (C) was initialized.

OK - will look at that. 

On the smart pointer thing, I did not realize (as I don't use smart pointers) that they were passed around using a reference that was not nullable, but I was looking at supporting boost for the C++ stuff, so I guess it would have fallen out of the trying. I will look into that, but I am still thinking that the answer is that it is better not to initialize the return value. 

Incidentally, rather than passing things up and down the rules, you might find i easier to create helper classes in higher up scopes. 

Jim




From nopik at data.pl  Wed Apr  2 11:33:39 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Wed, 2 Apr 2008 20:33:39 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <278bd7511d342d41a95ab03525a93c5f@temporal-wave.com>
References: <123141467.20080402201441@data.pl>
	<278bd7511d342d41a95ab03525a93c5f@temporal-wave.com>
Message-ID: <462084567.20080402203339@data.pl>

Hello,

>> As you see, only last scope (C) was initialized.

> OK - will look at that.

Thanks.

> On the smart pointer thing, I did not realize (as I don't use smart
> pointers) that they were passed around using a reference that was not
> nullable, but I was looking at supporting boost for the C++ stuff, so
> I guess it would have fallen out of the trying. I will look into that,
> but I am still thinking that the answer is that it is better not to
> initialize the return value.

Yeah, when I look at generated code, in my trivial examples it is not
necessary to initialize this value at all. I do not know if there is
possibility that in more complex example it is safe..
I was also thinking about default constructor, like:
  int i = int();
which in C++ guarantees to initialize plain types to 0 (or to your values in case of
custom classes). This would work with smart pointers and 99% of other
classes (and structs?) as well. However, with complex classes copying of
the resulting object may be problematic and unexpected.
Anyway, this do not work in C, unfortunately :)

> Incidentally, rather than passing things up and down the rules, you
> might find i easier to create helper classes in higher up scopes.

Yes, I was trying to do so, too. This is why I reported the second error
about multiple scopes :D

-- 
Best regards from
Kamil Burzynski


From mail at martin-probst.com  Wed Apr  2 11:44:03 2008
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 2 Apr 2008 20:44:03 +0200
Subject: [antlr-interest] Strange ambiguous decision warning
In-Reply-To: <920fc83661eec642ae6f7acac6533a95@temporal-wave.com>
References: <920fc83661eec642ae6f7acac6533a95@temporal-wave.com>
Message-ID: <4F48D6DA-B4A2-4D5F-A234-53B76E72544F@martin-probst.com>

> If you use ANTLRWorks, it will help you to see the following:

Well, ANTLRWorks comes with ANTLR 3.0.1, and that doesn't work at  
all :-(

> Alt1 starts with EMPTY_SEQUENCE
> Alt2 goes to itemType
> At3  goes to itemType
>
> itemType goes to atomicType
>
> atomicType goes to qNameOrIndent
>
> qNameOrIndent contains EMTPY_SEQUENCE
>
> hence all three alts can start with EMPTY_SEQUENCE. as  
> occurenceIndicator is optional, then it is ambiguous.

Why? The parentheses following the literal EMPTY_SEQUENCE are not  
optional, and the occurrence indicator after the second rule is not  
optional either, so all three rules have a different second token -  
k=2 should be sufficient to disambiguate.

> sequenceType	: (EMPTY_SEQUENCE '(')=>(EMPTY_SEQUENCE '(' ')')
> 			| itemType ((occurrenceIndicator)=>occurrenceIndicator)?
> 			;

Thanks, this worked. Though I'm still curious why this was ambiguous...

> Though it is somewhat irrelevant to the issue, you will find your  
> grammar more maintainable if you format it a little ;-)

You don't really want to argue about indentation style, do you? :-)

Thanks again,
Martin

From bruce at cresanta.com  Wed Apr  2 11:49:50 2008
From: bruce at cresanta.com (Bruce Cresanta)
Date: Wed, 2 Apr 2008 11:49:50 -0700
Subject: [antlr-interest] I'm new to this....
Message-ID: <4614E100-FDAA-443F-86E8-D277FE74F4EF@cresanta.com>

Hello all!

I'm new to language construction in general, and I am forming ideas  
around what I've already learned of ANTLR.    I've googled for C and C+ 
+ examples of scripting languages and interpreters, and there isn't  
much in the way of a fully functional example in C and C++.    Does  
anyone have a non-trivial example of an end to end program for a  
moderately complex grammer that you would be willing to share in C or C 
++.    I've bought the ANTLR book today and I'm waiting for the  
shipment to arrive.    I am using the nifty ANTLR Works program on a  
Mac OS X PPC box.

Thank you!

Bruce Cresanta


From jimi at temporal-wave.com  Wed Apr  2 12:10:35 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 12:10:35 -0700
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <123141467.20080402201441@data.pl>
Message-ID: <095528b20721764ab490e5c2c2483016@temporal-wave.com>


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kamil Burzynski
> Sent: Wednesday, April 02, 2008 11:15 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problem with C target output on example C
> grammar
> 
> 
> evaluate
> scope A;
> scope B;
> scope C;
> @init
> {
>         printf("\%p \%p \%p\n", SCOPE_TOP(A), SCOPE_TOP(B),
> SCOPE_TOP(C) );
>         $A::a = 42;
>         $B::b = 42;
>         $C::c = 42;
> }
> : 'foo';


Sorry, this turns out to be user error after all ;-(. That is good really as it means that you can fix your grammar without needing any patches. You should get an error from ANTLR but such errors are a little lacking in this version and will improve once ANTLR 3 is using an ANTLR3 parser.

The syntax is:

evaluate

  scope A B C;

: .....


And then everything should be fine.

Jim




From jimi at temporal-wave.com  Wed Apr  2 12:13:56 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 12:13:56 -0700
Subject: [antlr-interest] I'm new to this....
In-Reply-To: <4614E100-FDAA-443F-86E8-D277FE74F4EF@cresanta.com>
Message-ID: <ca1828dc00450e4a84a3233201307aeb@temporal-wave.com>

Start with the examples for the C target, which you can download on the download page. There are no Makefiles for these yet, so you will need to build manually, but it should be pretty obvious.

Also, typing "C examples" in the search box on the ANTLR front page gives many hits.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bruce Cresanta
> Sent: Wednesday, April 02, 2008 11:50 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] I'm new to this....
> 
> Hello all!
> 
> I'm new to language construction in general, and I am forming ideas
> around what I've already learned of ANTLR.    I've googled for C and C+
> + examples of scripting languages and interpreters, and there isn't
> much in the way of a fully functional example in C and C++.    Does
> anyone have a non-trivial example of an end to end program for a
> moderately complex grammer that you would be willing to share in C or C
> ++.    I've bought the ANTLR book today and I'm waiting for the
> shipment to arrive.    I am using the nifty ANTLR Works program on a
> Mac OS X PPC box.
> 
> Thank you!
> 
> Bruce Cresanta





From nopik at data.pl  Wed Apr  2 12:42:47 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Wed, 2 Apr 2008 21:42:47 +0200
Subject: [antlr-interest] Problem with C target output on example C
	grammar
In-Reply-To: <095528b20721764ab490e5c2c2483016@temporal-wave.com>
References: <123141467.20080402201441@data.pl>
	<095528b20721764ab490e5c2c2483016@temporal-wave.com>
Message-ID: <79856441.20080402214247@data.pl>

Hello,

> Sorry, this turns out to be user error after all ;-(. That is good
> really as it means that you can fix your grammar without needing any
> patches. You should get an error from ANTLR but such errors are a
> little lacking in this version and will improve once ANTLR 3 is using
> an ANTLR3 parser.

> The syntax is:

> evaluate

>   scope A B C;

> : .....


> And then everything should be fine.

It works fine. Thanks a lot!

-- 
Best regards from
Kamil Burzynski


From antlr at mirality.co.nz  Wed Apr  2 13:06:07 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 03 Apr 2008 09:06:07 +1300
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <3da59e1498908e478c3848593b50605e@temporal-wave.com>
References: <014c01c89499$06f07c30$14d17490$@cz>
	<3da59e1498908e478c3848593b50605e@temporal-wave.com>
Message-ID: <20080402200741.CCCA511EC43@www.antlr.org>

At 06:23 3/04/2008, Jim Idle wrote:
>The adaptor is an adaptor, or the default tree nodes would not 
>work, but in C there is no class inheritance and I cannot protect 
>functions/pointers that must be public, from being used anywhere. 
>The Java version of the tree node also has addChild etc. It needs 
>to because the tree adaptor needs to ask it to add children. 
>However, if you don't call the treenode methods, then they won't 
>be used directly in either C or Java or any other target.

I think Tom's point is that in the Java version the tree nodes are 
simple objects, and the adaptor class is the only known interface 
-- you ask the adaptor class to create a node, to add a child to a 
node, etc, but when an actual node is referred to it's always an 
'object', not a 'CommonTreeNode'.  The grammar generated code 
never directly touches the tree nodes themselves.

This same approach ought to still be possible in C -- substituting 
'void *' for 'object' and adding some memory tracking/disposal 
semantics, of course.

So the default ANTLR3_COMMON_TREE_ADAPTOR creates and manipulates 
ANTLR3_COMMON_TREE objects, but the interface specified by 
ANTLR3_BASE_TREE_ADAPTOR only ever uses 'void *'.  This means that 
a user can completely reimplement the interface to use their own 
custom node type totally divorced from ANTLR.  The 
ANTLR3_BASE_TREE structure simply goes away, as it's no longer 
useful.  (Or maybe you could still have two levels; one which 
implements the basic tree semantics and one that adds the token 
payload.  But I'm not sure that's especially useful.)


From jimi at temporal-wave.com  Wed Apr  2 13:10:54 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 13:10:54 -0700
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <20080402200550.CAA0B107ED45@msf1.dnsmadeeasy.com>
Message-ID: <8b6e74b143eb204f89d1f3c2da8b768b@temporal-wave.com>



> -----Original Message-----
> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Sent: Wednesday, April 02, 2008 1:06 PM
> To: Jim Idle; ANTLR
> Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x
> 
> At 06:23 3/04/2008, Jim Idle wrote:
> >The adaptor is an adaptor, or the default tree nodes would not
> >work, but in C there is no class inheritance and I cannot protect
> >functions/pointers that must be public, from being used anywhere.
> >The Java version of the tree node also has addChild etc. It needs
> >to because the tree adaptor needs to ask it to add children.
> >However, if you don't call the treenode methods, then they won't
> >be used directly in either C or Java or any other target.
> 
> I think Tom's point is that in the Java version the tree nodes are
> simple objects, and the adaptor class is the only known interface
> -- you ask the adaptor class to create a node, to add a child to a
> node, etc, but when an actual node is referred to it's always an
> 'object', not a 'CommonTreeNode'.  The grammar generated code
> never directly touches the tree nodes themselves.
> 
> This same approach ought to still be possible in C -- substituting
> 'void *' for 'object' and adding some memory tracking/disposal
> semantics, of course.

As I said, you just end up having create the structure yourself, I already went down this path and back up.

> 
> So the default ANTLR3_COMMON_TREE_ADAPTOR creates and manipulates
> ANTLR3_COMMON_TREE objects, but the interface specified by
> ANTLR3_BASE_TREE_ADAPTOR only ever uses 'void *'.  This means that
> a user can completely reimplement the interface to use their own
> custom node type totally divorced from ANTLR.  The
> ANTLR3_BASE_TREE structure simply goes away, as it's no longer
> useful.  (Or maybe you could still have two levels; one which
> implements the basic tree semantics and one that adds the token
> payload.  But I'm not sure that's especially useful.)

Then you cast it to whatever the user says, and they have to have a structure that supplies the same function set anyway. However, done this way they will need to supply all functions and not just the ones they need to override. Basically, it is C and you choose your poison, which I have done.

Jim




From antlr at mirality.co.nz  Wed Apr  2 13:21:37 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 03 Apr 2008 09:21:37 +1300
Subject: [antlr-interest] Problem with C target output on example C
 grammar
In-Reply-To: <278bd7511d342d41a95ab03525a93c5f@temporal-wave.com>
References: <123141467.20080402201441@data.pl>
	<278bd7511d342d41a95ab03525a93c5f@temporal-wave.com>
Message-ID: <20080402202149.719AB11EC62@www.antlr.org>

At 07:24 3/04/2008, Jim Idle wrote:
 >On the smart pointer thing, I did not realize (as I don't use 
smart
 >pointers) that they were passed around using a reference that 
was
 >not nullable, but I was looking at supporting boost for the C++
 >stuff, so I guess it would have fallen out of the trying. I will 

 >look into that, but I am still thinking that the answer is that 
it
 >is better not to initialize the return value.

There was some discussion a while back about a similar problem 
with initialising DateTime objects in C#, since they're value 
types and can't be initialised with 'null'.

Two options discussed were either avoiding the initialisation when 
you don't recognise the type (ie. still initialise ints and 
pointers etc, but assume anything else can self-initialise), or 
adding some in-grammar syntax to let ANTLR know how to initialise 
specific types (and then throwing an error if it encounters a type 
it doesn't recognise).

Of the two, I think the first is the simplest option, and should 
be sufficient for almost all cases.  (I don't think it's a big 
hardship to require that any type used in ANTLR has a default 
constructor.)

The only drawback I see to this is disguised pointers; if someone 
has defined "typedef FOO *PFOO;" for example then there's no way 
ANTLR can be expected to figure out that "PFOO" is a simple 
pointer, so it will end up being uninitialised.  I'm not sure 
there's any way of avoiding this short of saying "user beware" 
:)  (Or using option two instead.)


From antlr at mirality.co.nz  Wed Apr  2 13:34:17 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 03 Apr 2008 09:34:17 +1300
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <8b6e74b143eb204f89d1f3c2da8b768b@temporal-wave.com>
References: <20080402200550.CAA0B107ED45@msf1.dnsmadeeasy.com>
	<8b6e74b143eb204f89d1f3c2da8b768b@temporal-wave.com>
Message-ID: <20080402203428.6FFFB11ECEE@www.antlr.org>

At 09:10 3/04/2008, Jim Idle wrote:
 >As I said, you just end up having create the structure yourself, 
I
 >already went down this path and back up.

But that's exactly what some people want -- they already have 
their own tree structures completely independent of ANTLR, and 
forcing people to use ANTLR's trees instead means they'll have to 
write a conversion layer to run afterwards instead of simply 
generating their own tree in the first place.

 >Then you cast it to whatever the user says, and they have to 
have a
 >structure that supplies the same function set anyway. However, 
done
 >this way they will need to supply all functions and not just the 

 >ones they need to override.

Not true.  If they simply want to extend the standard tree, they 
can do that by inheriting from ANTLR3_COMMON_TREE and 
ANTLR3_COMMON_TREE_ADAPTOR, and overriding the minimal set of 
methods they actually want to change.

If they want to replace the entire tree structure, then they 
ignore ANTLR3_COMMON_TREE and inherit from 
ANTLR3_BASE_TREE_ADAPTOR; this requires them to implement all 
methods, but means that their tree node could be some C++ type 
completely divorced from ANTLR -- the adaptor carries the burden 
of converting the interfaces.


From felix_do at web.de  Wed Apr  2 13:53:37 2008
From: felix_do at web.de (Felix Dorner)
Date: Wed, 02 Apr 2008 22:53:37 +0200
Subject: [antlr-interest] Reuse rule-return "shortcuts"
In-Reply-To: <523b26c0992e184690cb8fcbef712dc9@temporal-wave.com>
References: <523b26c0992e184690cb8fcbef712dc9@temporal-wave.com>
Message-ID: <47F3F251.2050009@web.de>

Jim Idle wrote:
> Felix,
>
> the label is just that, a label named as per your choice, hence it is generated as a label in the target language, typed according to the rule name. Just as in say Java you cannot have both an int and a String called 'felix', you cannot use the same name on different rules as they have different return types and hence the variable types need to be different. If you want suffixes you must add them yourself. Just think of the labels as variable names and it should make sense to you.
>
>   
Of course you are right with what you say - from your perspective. 
Change it and consider the various alternatives of a rule like 
"subfunctions" of which only one will be of importance, then, the scope 
of that label is just the subfunction. Thus you could reuse the same 
label within different alternatives,just like you can use "x" in foo() 
and in bar(), which I find quite useful. 
It's just that the rule is mapped to a single java method, so Antlr 
would have to secretly make each label unique with a number suffix. A 
similar Strategy is applied when you use $Node, which won't be just 
"Node" in the code, but "NodeX".

Hope I could make myself clear.

Felix

From jimi at temporal-wave.com  Wed Apr  2 14:25:53 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 02 Apr 2008 14:25:53 -0700
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <20080402200550.CAA0B107ED45@msf1.dnsmadeeasy.com>
Message-ID: <9fc432517736664a879985a951862f19@temporal-wave.com>

If this cannot be don't now, then it is a mistake in the generating templates as that is what is supposed to happen, so I will look into it. Perhaps I have left some casts in the templates.

Jim

> -----Original Message-----
> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Sent: Wednesday, April 02, 2008 1:06 PM
> To: Jim Idle; ANTLR
> Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x
> 
> At 06:23 3/04/2008, Jim Idle wrote:
> >The adaptor is an adaptor, or the default tree nodes would not
> >work, but in C there is no class inheritance and I cannot protect
> >functions/pointers that must be public, from being used anywhere.
> >The Java version of the tree node also has addChild etc. It needs
> >to because the tree adaptor needs to ask it to add children.
> >However, if you don't call the treenode methods, then they won't
> >be used directly in either C or Java or any other target.
> 
> I think Tom's point is that in the Java version the tree nodes are
> simple objects, and the adaptor class is the only known interface
> -- you ask the adaptor class to create a node, to add a child to a
> node, etc, but when an actual node is referred to it's always an
> 'object', not a 'CommonTreeNode'.  The grammar generated code
> never directly touches the tree nodes themselves.
> 
> This same approach ought to still be possible in C -- substituting
> 'void *' for 'object' and adding some memory tracking/disposal
> semantics, of course.
> 
> So the default ANTLR3_COMMON_TREE_ADAPTOR creates and manipulates
> ANTLR3_COMMON_TREE objects, but the interface specified by
> ANTLR3_BASE_TREE_ADAPTOR only ever uses 'void *'.  This means that
> a user can completely reimplement the interface to use their own
> custom node type totally divorced from ANTLR.  The
> ANTLR3_BASE_TREE structure simply goes away, as it's no longer
> useful.  (Or maybe you could still have two levels; one which
> implements the basic tree semantics and one that adds the token
> payload.  But I'm not sure that's especially useful.)





From lgcraymer at yahoo.com  Wed Apr  2 14:50:16 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 2 Apr 2008 14:50:16 -0700 (PDT)
Subject: [antlr-interest] Every grammar an output grammar
Message-ID: <229675.39964.qm@web55914.mail.re3.yahoo.com>

One of the problems that we hoped that ANTLR 3 would solve was that of text output--generating text from ANTLR 2 was an unpleasant experience.  StringTemplate helps considerably, and one of the inchoate ideas that Ter was grappling with at the ANTLR 3 cabal was that of an "output grammar" that would provide a mapping between an ANTLR grammar and a template group.  This idea never quite gelled; the ANTLR 3 "template" output options was a first attempt to go in this direction.

Last week's "template generation" discussion came just as I was finishing a pretty printer for Yggdrasil and started me thinking about the problem again.  I finally came up an approach that seems to provide a solution and have implemented that in Yggdrasil.  After trying other syntaxes, I ended up with an annotation that "mirrors" the template syntax:  a <foo> suffix assigns a token's text to a "foo" attribute, while <<bar>> references a bar template (fills a slot that holds slots; i. e:  a template).  This approach could easily be incorporated into the baseline ANTLR 3; the whole idea of output grammars seems to be a big step forward.  I have documented this for Yggdrasil as follows:


Output annotations and automated template
generationIf the grammar
option ?buildText? is set to true, Yggdrasil will automatically
output templates according to the model:
String
	templates are decorated as trees mirroring the input elements of the
	grammar.  For each rule in a grammar, there may be a corresponding
	string template definition, either explicitly specified or (by
	default) with the same name as the rule.  Upon entry to a rule, the
	current template value is pushed onto a stack.  If there is a
	template for the rule, then an instance of that template is created
	and current is set with that instance; otherwise, the current
	template remains in effect.
	Unless
	otherwise specified, values are added to the ?body? attribute of
	the current template.
	Grammar
	annotations for template building generally take the form of <key>
	or <<template>> suffixes.  A rule defined with the name
	foo<<bar>> has ?bar? as the rule template (the
	syntax here is limited to a single argument).  A rule, token, or
	instantiated attribute reference of the form tok<t> assigns
	tok to the t attribute.  ?<->? is the template equivalent
	of ?!?.  Rule references have the additonal form
	ruleRef<<templateName>> or <key<templateName>>;
	templateName overrides the template that would have otherwise been
	invoked.  If templateName is ?-?, then no template is created
	for the invoked rule and text items are added to the current
	template.  [So ?<->? is ?do not add text? and ?<<->>?
	is ?do not invoke a new template?.]
	Syntactic
	predicates build templates, and the recognizer class tracks the last
	syntactic predicate. Synpred templates are not added to the output
	template; they are tracked as an aid to debugging.
Within a rule,
?@$<>? references the active template and can be assigned
to a Text attribute.  Grammar attributes are not added to the output
template except through actions or through the attribute algebra.
Given this scheme,
any grammar can become an output grammar, and a variety of template
groups can be built in order to do such things as build text for
displaying a parse tree, build XML output, pretty print, and the
like.  Parse tree and XML output forms can be built automatically. 
To build a pretty printer or other customized output format, the
natural approach is to start with a parse tree format, then fill out
individual templates and annotate the grammar.  For a rule named
?rule?, one parse tree template is
rule(body) ::= <<
?rule?
	<body;
separator = ?\n?>
>>
and this template
can be easily generated for all rules in a grammar.
Example output grammarThis
is a simplified subset of some definitions from antlr.g:


rule<<ruleDef>>
	:
	(
		DOC_COMMENT
	)?
	(
		"protected"
		|
			"public"
		|
			"private"
		|
			"fragment"
	)?
	(
		RULE_REF<name>
		|
			TOKEN_REF<name>
	)
	COLON
	block
	SEMI
	;


block
	:
	alternative
	(
OR<-> alternative<<orAlt>> )*
	;


and
this is the corresponding template set for a pretty printer:


ruleDef(name,
body) ::= <<
<name>
	:
	<body;
separator = "\n">
	;
>>


block(body,
suffix) ::= <<
(
	<body;
separator = "\n">
)<suffix>
>>


alternative(body)
::= <<
<body;
separator = "\n">
>>


orAlt(body)
::= <<
|
	<body;
separator = "\n">
>>



Note that a fairly minimal annotation of the .g file maps the
input onto a rich template set; that is, the development effort for
producing a pretty printer is focused primarily on building
templates, not on annotating the grammar.





      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/c309e3b3/attachment.html 

From gerald at certiv.net  Wed Apr  2 16:31:51 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Wed, 02 Apr 2008 16:31:51 -0700
Subject: [antlr-interest] Every grammar an output grammar
In-Reply-To: <229675.39964.qm@web55914.mail.re3.yahoo.com>
References: <229675.39964.qm@web55914.mail.re3.yahoo.com>
Message-ID: <200804022333.m32NXkDk022414@tach.newtechlaw.com>

Nice!  Couple of possible issues, though:

First, the proposed annotation syntax appears to conflict (at least 
in syntax presentation) with the heterogeneous AST production 
syntax.  Even though the example shown only uses lhs annotation, 
annotations in the rewrite production would likely be as or more 
useful.  On the rhs, the conflict with heteroAST would be direct.

Second, any chance to not further overload the "<" and ">" 
symbols?  I realize there is a certain parallel to the template 
definition syntax, but these are really grammar-based selectors and 
values, so bringing in template definition syntax just feels a bit 
odd.  Perhaps a simplified anchor/parameter syntax?

rule#ruleref : (DOC_COMMENT)? (RULE_REF#name | TOKEN_REF#name) ;

sends "name" values to "ruleref" template, skipping any output for 
DOC_COMMENT -- leaving no attribute produced by default might be more 
desirable if only go keep the grammar as lean and literate as possible.

or

rule#ruleref : (DOC_COMMENT)? (ref=RULE_REF | ref=TOKEN_REF)  -> 
^(RULE<RuleNode> $ref#name ^(SRC<SourceNode> $rule#content)) ;

My $0.02 ...

Best,
Gerald

At 02:50 PM 4/2/2008, Loring Craymer wrote:
>One of the problems that we hoped that ANTLR 3 would solve was that 
>of text output--generating text from ANTLR 2 was an unpleasant 
>experience.  StringTemplate helps considerably, and one of the 
>inchoate ideas that Ter was grappling with at the ANTLR 3 cabal was 
>that of an "output grammar" that would provide a mapping between an 
>ANTLR grammar and a template group.  This idea never quite gelled; 
>the ANTLR 3 "template" output options was a first attempt to go in 
>this direction.
>
>Last week's "template generation" discussion came just as I was 
>finishing a pretty printer for Yggdrasil and started me thinking 
>about the problem again.  I finally came up an approach that seems 
>to provide a solution and have implemented that in Yggdrasil.  After 
>trying other syntaxes, I ended up with an annotation that "mirrors" 
>the template syntax:  a <foo> suffix assigns a token's text to a 
>"foo" attribute, while <<bar>> references a bar template (fills a 
>slot that holds slots; i. e:  a template).  This approach could 
>easily be incorporated into the baseline ANTLR 3; the whole idea of 
>output grammars seems to be a big step forward.


From adam.rpconnelly at googlemail.com  Wed Apr  2 17:15:06 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 3 Apr 2008 01:15:06 +0100
Subject: [antlr-interest] how do i throw my exception and get the rule
	text and line number
In-Reply-To: <3bc8062e0804020816m45349554g151d590aa4980ecb@mail.gmail.com>
References: <3bc8062e0804020816m45349554g151d590aa4980ecb@mail.gmail.com>
Message-ID: <b9a39b060804021715q41154d1ep64fe229d17524a17@mail.gmail.com>

Just realised I didn't send my reply to the list - also I think it should be
FailedPredicateException rather than PredicateException.

Adam

On 02/04/2008, hardaway <hardawaycg at gmail.com> wrote:
>
> in antlr 3,how do i throw my exception in an rule,raw grammar just like
> below:
>
> grammar test;
> @header
> {
>  import java.util.HashMap;
> }
> @member
> {
>   HashMap reportMap= new HashMap();
> }
>
> prog:line+
> line: reportStat | indexStat;
>
> reportStat :  a=ID '=' '[' b=ID ']'  ( a=ID '=' '[' b=ID ']' )*
>                   {
>                      reportMap.put($a.text, $b.text);
>                    };
> indexStat  :  a=ID '(' b=INT ',' c=INT ')' '=' d=INT
>                    {
>                      if(reportMap.containsKey($a.text)
>                       {
>                           //System.out.println("reportID=" + $a.text +
> "has not been defined");
>                           //just here i want to throw my Exception maybe
> like this
>                            throws new MyException("report not defined",
> ruleText, lineNumber);
>                            //and more i want to record the line number and
> the text,how can i ge the two values?.$a.line doesn't work.and is this the
> only way to record the full text : $a.text + '(' $b.text + "," + $c.text +
> ")=" + $d.text; is there any simple way to get the full text with the
> indexStat rule?
>                        }
>                     }
>                    ;
> and i have text like this:
> a=[REPA],b=[REPB],c=[REPC]
> a(1,1)=100
> e(5,5)=2
>
> when i throw exception to warning that "e(5,5)=2" e has not been defined
> ,i also want to alert with the full text "e(5,5)=2" and also with line
> number "3".how can i get these two value?
>
> besides i can't define the rule like this
> indexStat  throws MyException
>                :  a=ID '(' INT ',' INT ')' '=' INT
> then  when the parser file generated ,i need to modify the java file with
> the indexStat method ,adds" throws MyException".what should i do with the
> grammar file to make i easy?
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/78e10e08/attachment-0001.html 

From lgcraymer at yahoo.com  Wed Apr  2 17:17:52 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 2 Apr 2008 17:17:52 -0700 (PDT)
Subject: [antlr-interest] Every grammar an output grammar
Message-ID: <675357.64991.qm@web55904.mail.re3.yahoo.com>

Gerald--

I don't have this problem with Yggdrasil:  rewrites occur through !/^ annotations, attribute assignments and attribute instantiations in the output tree; nodes are created with a factory according to token type using the ANTLR 2 type mapping syntax which occurs only in the tokens {} section.

I guess it may take more effort with the baseline ANTLR 3 than I had thought.

--Loring


----- Original Message ----
From: Gerald Rosenberg <gerald at certiv.net>
To: antlr-interest at antlr.org
Sent: Wednesday, April 2, 2008 4:31:51 PM
Subject: Re: [antlr-interest] Every grammar an output grammar

Nice!  Couple of possible issues, though:

First, the proposed annotation syntax appears to conflict (at least 
in syntax presentation) with the heterogeneous AST production 
syntax.  Even though the example shown only uses lhs annotation, 
annotations in the rewrite production would likely be as or more 
useful.  On the rhs, the conflict with heteroAST would be direct.

Second, any chance to not further overload the "<" and ">" 
symbols?  I realize there is a certain parallel to the template 
definition syntax, but these are really grammar-based selectors and 
values, so bringing in template definition syntax just feels a bit 
odd.  Perhaps a simplified anchor/parameter syntax?

rule#ruleref : (DOC_COMMENT)? (RULE_REF#name | TOKEN_REF#name) ;

sends "name" values to "ruleref" template, skipping any output for 
DOC_COMMENT -- leaving no attribute produced by default might be more 
desirable if only go keep the grammar as lean and literate as possible.

or

rule#ruleref : (DOC_COMMENT)? (ref=RULE_REF | ref=TOKEN_REF)  -> 
^(RULE<RuleNode> $ref#name ^(SRC<SourceNode> $rule#content)) ;

My $0.02 ...

Best,
Gerald

At 02:50 PM 4/2/2008, Loring Craymer wrote:
>One of the problems that we hoped that ANTLR 3 would solve was that 
>of text output--generating text from ANTLR 2 was an unpleasant 
>experience.  StringTemplate helps considerably, and one of the 
>inchoate ideas that Ter was grappling with at the ANTLR 3 cabal was 
>that of an "output grammar" that would provide a mapping between an 
>ANTLR grammar and a template group.  This idea never quite gelled; 
>the ANTLR 3 "template" output options was a first attempt to go in 
>this direction.
>
>Last week's "template generation" discussion came just as I was 
>finishing a pretty printer for Yggdrasil and started me thinking 
>about the problem again.  I finally came up an approach that seems 
>to provide a solution and have implemented that in Yggdrasil.  After 
>trying other syntaxes, I ended up with an annotation that "mirrors" 
>the template syntax:  a <foo> suffix assigns a token's text to a 
>"foo" attribute, while <<bar>> references a bar template (fills a 
>slot that holds slots; i. e:  a template).  This approach could 
>easily be incorporated into the baseline ANTLR 3; the whole idea of 
>output grammars seems to be a big step forward.







      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080402/2855c5f9/attachment.html 

From 12345alex at gmx.net  Wed Apr  2 21:12:27 2008
From: 12345alex at gmx.net (alexander krohn)
Date: Thu, 03 Apr 2008 06:12:27 +0200
Subject: [antlr-interest] python grammar(s)
Message-ID: <47F4592B.8030304@gmx.net>

hi.

i'm trying to use the python grammars that exist. i found one for python 
2.3 done by terence and one updated version for python 2.5 done by frank.

both versions don't match with the grammar(s) i found on python.org

some example, the del-statement:

antlr-grammars just say:
del_stmt : 'del' exprlist;

the grammar on python.org says something about

del_stmt ::= 
             "del" target_list

and for target_list:

target_list ::= 
             target ("," target)* [","]
  
target ::= 
             identifier
                | "(" target_list ")"
                | "[" target_list "]"
                | attributeref
                | subscription
                | slicing

etc.

the "target"-stuff doesn't even exist in the antlr-grammars. they would 
accept a line like
del 1 + 1
which python spits out with a SyntaxError.

there are some more things python does not accept, while the antlr 
grammars do. how comes?

are these just meant as examples?

regards

alexander

grammar links:
http://www.python.org/doc/2.3/ref/grammar.txt
http://www.python.org/doc/2.5/ref/grammar.txt

From elekis at gmail.com  Wed Apr  2 23:04:38 2008
From: elekis at gmail.com (elekis)
Date: Thu, 03 Apr 2008 08:04:38 +0200
Subject: [antlr-interest] create eclipse plug with antlr
In-Reply-To: <47F321ED.4010203@xs4all.nl>
References: <47F31A7F.8050406@gmail.com> <47F321ED.4010203@xs4all.nl>
Message-ID: <47F47376.9070202@gmail.com>

hi ,

stupid question, but do you know how to import this project in eclipse 
(easier to analyse)?? via cvs

I ve tried
host = cvs.sourceforge.net
path = /cvsroot/quantum/ or cvs/quantum/quantum-plugin.
but it's seems refused.

thanks

a+++


Jan van der Ven a ?crit :
> Dear Elekis,
>
>
> The article you mention is a very good one. It inspired us to write a 
> SQL editor using antlr. You can find the code at 
> http://quantum.cvs.sourceforge.net/quantum/quantum-plugin/src/com/quantum/ 
> in the core and editors folders. It is not as good as Prashant's 
> description though. Feel free to comment on it.
>
> Kind regards,
>
> Jan
>
>
>
> elekis wrote:
>> hello world,
>>
>> I try to create a eclipse plugin for a custom language. I ve used 
>> antlr 3.0 to create a lexer and grammar (and comming soon, an ast). 
>> but now I would like to interact with my plugin.
>>
>> How To do that??? I have problemes.
>>
>> first I ve created a editor  with a damager and a repairer etc... but 
>> how to link all of that?
>> the only thing I do now is always pass all the document after delete 
>> all the comment (all that follow "--"). but it's big.
>>
>> is there any tuto on how to interact ?? I ve found a paper
>> http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.html
>> but it's just a theory, there is no sources to analyse.
>>
>>
>> any idea?
>>
>> thanks
>>
>> PS : this is also posted on e.platform
>>
>> a+++
>>
>>
>>
>>
>



From potrto at centrum.cz  Thu Apr  3 00:27:26 2008
From: potrto at centrum.cz (Tomas Potrusil)
Date: Thu, 3 Apr 2008 09:27:26 +0200
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <20080402203428.6FFFB11ECEE@www.antlr.org>
References: <20080402200550.CAA0B107ED45@msf1.dnsmadeeasy.com>
	<8b6e74b143eb204f89d1f3c2da8b768b@temporal-wave.com>
	<20080402203428.6FFFB11ECEE@www.antlr.org>
Message-ID: <01d601c8955c$2b00c620$81025260$@cz>

> If they want to replace the entire tree structure, then they 
> ignore ANTLR3_COMMON_TREE and inherit from 
> ANTLR3_BASE_TREE_ADAPTOR; this requires them to implement all 
> methods, but means that their tree node could be some C++ type 
> completely divorced from ANTLR -- the adaptor carries the burden 
> of converting the interfaces.

This is exactly what I wanted to say. Thanks Gavin.

I think that this is exactly the reason why adaptors were introduced. To be
completely independent of the ANTLR tree classes/structures. If you omit
this independence then the adaptors are not real adaptors as they do not
adapt your classes to something ANTLR can understand. In the current
situation you can remove all the "adaptive" functions from
ANTLR3_BASE_TREE_ADAPTOR and call the functions directly on ANTLR3_BASE_TREE
- this change will preserve all other functionality, the uses will not need
to notice it... But then the ANTLR3_BASE_TREE_ADAPTOR will consist of
functions that do just some sugar (i.e. becomeRoot()), these could be also
removed somewhere else, and the rest will be just "factory methods". And
hence the ANTLR3_BASE_TREE_ADAPTOR will be renamed to
ANTLR3_BASE_TREE_FACTORY :-) It will be perfectly correct, the current
functionality will be entirely preserved, but this system will be obviously
without adaptors...

Tom


From hardawaycg at gmail.com  Thu Apr  3 01:12:02 2008
From: hardawaycg at gmail.com (hardaway)
Date: Thu, 3 Apr 2008 16:12:02 +0800
Subject: [antlr-interest] how do i throw my exception and get the rule
	text and line number
In-Reply-To: <b9a39b060804021715q41154d1ep64fe229d17524a17@mail.gmail.com>
References: <3bc8062e0804020816m45349554g151d590aa4980ecb@mail.gmail.com>
	<b9a39b060804021715q41154d1ep64fe229d17524a17@mail.gmail.com>
Message-ID: <3bc8062e0804030112o53051d24m84dea8be0e45caee@mail.gmail.com>

i 'm new to antlr and maybe my questions are very stupid.
  just like my question,
1: if i have text like those in red
 *a = [REPA], b=[REPB], c=[REPC]*
 *a(1,1)=100*
 b(1,4)=19
 e(1,1)=100
when i'm parsing the text,i'll put the first line to a map ,just like
map.put(a,REPA),map.put(b,REPB)....and when parsing line2-4,just like
a(1,1).i'll scan the map whether the variable has been defined,just like
map.containsKey(a),if it is ,i'll do some operations.and just like the above
text,when it turn to line 4: "map.containsKey(e)".obviously it'll return a
false to me.and i want to throw my custom Excpetion to warning the text
writer to do some correct.and i want to throw some custom messages with the
full text of  "e(1,1)=100" and the line number: 4,maybe message like this
"REPORT HAS NOT BEEN DEFINED WITH THE TEXT:  e(1,1)=100  in line 4.how can i
get the full text and the line number.
indexStat : a=ID '(' b=INT ',' c=INT ')'' '=' d=INT.
i only know that writing like this: $a.text + '(" + $b.text + ',' + $c.text
+ ')=' + $d.text to combine e '(' 1 ',' 1 ')=' 100 .but is it too
complicate?is there any way to get e(1,1)=100 as easy as possible?

and in your replys ,firstly a big thank to ur replays.u mentioned that use
the FailedPredicateException.but i'm afraid map.containsKey(e) returns only
true or false, it wont throw any exception.how can i catch it??

and the last question.i googled some pages that in an older version of
antlr,wen can write rule like this to throws Exception:
indexStat returns[String value] throws MyException   but in antlr 3,does the
format change? when i write like that,i got an tip and "indexStat  is not a
rule"...
and if in an action,i write ... throw new MyException()..i have to modify
the generated parser java file with the sentence like
public String indexStat() throws RecoginitionException
to
 public String indexStat() throws RecoginitionException, MyException..
to make the java code compileable.what is the right way to handle this?

thanks to ur help again

hardaway
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/6fa65963/attachment.html 

From elekis at gmail.com  Thu Apr  3 01:52:57 2008
From: elekis at gmail.com (elekis)
Date: Thu, 03 Apr 2008 10:52:57 +0200
Subject: [antlr-interest] create eclipse plug with antlr
In-Reply-To: <47F321ED.4010203@xs4all.nl>
References: <47F31A7F.8050406@gmail.com> <47F321ED.4010203@xs4all.nl>
Message-ID: <47F49AE9.30205@gmail.com>

all is wright , I found.
sorry

a++

Jan van der Ven a ?crit :
> Dear Elekis,
>
>
> The article you mention is a very good one. It inspired us to write a 
> SQL editor using antlr. You can find the code at 
> http://quantum.cvs.sourceforge.net/quantum/quantum-plugin/src/com/quantum/ 
> in the core and editors folders. It is not as good as Prashant's 
> description though. Feel free to comment on it.
>
> Kind regards,
>
> Jan
>
>
>
> elekis wrote:
>> hello world,
>>
>> I try to create a eclipse plugin for a custom language. I ve used 
>> antlr 3.0 to create a lexer and grammar (and comming soon, an ast). 
>> but now I would like to interact with my plugin.
>>
>> How To do that??? I have problemes.
>>
>> first I ve created a editor  with a damager and a repairer etc... but 
>> how to link all of that?
>> the only thing I do now is always pass all the document after delete 
>> all the comment (all that follow "--"). but it's big.
>>
>> is there any tuto on how to interact ?? I ve found a paper
>> http://www-128.ibm.com/developerworks/edu/os-dw-os-ecl-commplgin1.html
>> but it's just a theory, there is no sources to analyse.
>>
>>
>> any idea?
>>
>> thanks
>>
>> PS : this is also posted on e.platform
>>
>> a+++
>>
>>
>>
>>
>



From simon.woods at virgin.net  Thu Apr  3 02:12:12 2008
From: simon.woods at virgin.net (Simon Woods)
Date: Thu, 03 Apr 2008 10:12:12 +0100
Subject: [antlr-interest] Matching String Templates to Tree Grammars
Message-ID: <47F49F6C.8020009@virgin.net>

Hi

New to all this so please bear with me ... I'm missing something 
(probably quite a lot, actually) in my understanding. (I'm awaiting 
delivery of the  Definitive Antlr guide ... )

It may seem overkill for what I'm trying to do but ... I have

============================ tree grammar

tree grammar QLWalker;

options {
    tokenVocab=QL;
    ASTLabelType = CommonTree;
        language = CSharp;
        output=template;
        rewrite=true;
}

mainstatement
    : forstatement getstatement
    ;
   
forstatement
    : ^(FOR text)
    ;

getstatement
    : ^(GET text (COMMA text)*)
    ;   
   
text
    : ID -> template(name = {$ID.text}) "$name$"
    ;

============================ String Template Group

group QL2SQL;

translate(forClause, getClause) ::= <<
SELECT <getClause; separator=","> FROM <forClause>
 >>

simpletemplate() ::= "This is the template"

============================ Test routine

Here's the test I'm running (VB.Net)

    Public Sub Template_CanSubstituteFromAST()

        Dim l_templateGroup As Antlr.StringTemplate.StringTemplateGroup 
= CreateTemplateGroup(TemplateGroupFile)     
        Dim l_lexer As New QLLexer(New 
Antlr.Runtime.ANTLRStringStream("FOR myDatasource GET a,b,c"))

        '???
        Dim l_tokens As New Antlr.Runtime.TokenRewriteStream(l_lexer)
        Dim l_parser As New QLParser(l_tokens)

        '???
        Dim l_nodes As New 
Antlr.Runtime.Tree.CommonTreeNodeStream(l_parser.mainStatement.Tree)

        Dim l_treeWalker As New QLWalker(l_nodes)
        l_treeWalker.TemplateLib = l_templateGroup

        Assert.AreEqual("SELECT a,b,c FROM myDatasource", 
l_treeWalker.mainstatement.ToString())

    End Sub

(I've left ??? in as I'm just copying from 
http://aaronfeng.com/articles/2007/04/26/translation-part-2-via-abstract-syntax-tree  
- though I'm not sure why I need to do this at the moment)

Now when I step the code, I check the template variable in the 
mainstatement class and it is not set. So I figured this has something 
to do with my problem (of the thing not working!). But I'm wondering how 
the treeWalker is meant to know which template to use. Do I have to tell 
it in some way?

Thanks in advance for any help,

Simon





From adam.rpconnelly at googlemail.com  Thu Apr  3 03:32:39 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 3 Apr 2008 11:32:39 +0100
Subject: [antlr-interest] how do i throw my exception and get the rule
	text and line number
In-Reply-To: <3bc8062e0804030112o53051d24m84dea8be0e45caee@mail.gmail.com>
References: <3bc8062e0804020816m45349554g151d590aa4980ecb@mail.gmail.com>
	<b9a39b060804021715q41154d1ep64fe229d17524a17@mail.gmail.com>
	<3bc8062e0804030112o53051d24m84dea8be0e45caee@mail.gmail.com>
Message-ID: <b9a39b060804030332u65ae1179me3ff626c39469ecd@mail.gmail.com>

Ok, here's an example grammar:

prog:line+;

line: reportStat | indexStat;

reportStat :  a=ID '=' '[' b=ID ']'  ( a=ID '=' '[' b=ID ']' )*
              {
                     reportMap.put($a.text, $b.text);
              };
indexStat
    :    (a=ID '(' b=INT ',' c=INT ')' '=' d=INT)
{!reportMap.containsKey($a.text)}?
    ;
catch [FailedPredicateException e]
{
    // e.line is the line that the predicate failed at
    // e.charPositionInLine is the position in the line
}

In the indexStat rule, I've written "{!reportMap.containsKey($a.text)}?".
What this means is "stop parsing if the condition inside the braces fails"
(more or less).  So although reportMap.containsKey() only returns a boolean,
because of the {}? around it a FailedPredicateException is thrown if the
condition evaluates to false.

If you generate the parser code and go to the indexStat method you can see
how it works.  You should see some code along the lines of:

if ( !(!reportMap.ContainsKey(a.getText())) ) {
                throw new FailedPredicateException(input, "indexStat",
"!reportMap.ContainsKey($a.text)");
            }

Now you can just leave it like that and you'll get a default error message
if the collection already contains the specified key.  If you want to alter
the exception that gets thrown by the rule when your predicate fails you can
use the optional catch block of the rule (which comes after the last ";" of
the rule) to catch the FailedPredicateException and potentially re-throw it
as your own exception.  I guess you'd have to add a throws clause to your
rule in that case (although since I'm not a big Java person I'm not 100%).

Next, if you want to actually alter the error message that's displayed you
can override the getErrorMessage(RecognitionException e, String[]
tokenNames) method of BaseRecognizer.  To do this you simply write a method
in the members section of the grammar.  It would probably be something like
this:

@members
{
  public String getErrorMessage(RecognitionException e, String[] tokenNames)
  {
    if(e instanceof FailedPredicateException)
    {
      // cast e to FPE and extract whatever data you need from it
      return myNewErrorMessage;
    }

    return super.getErrorMessage(e, tokenNames);
  }
}

Hope that's a help - I think it should do what you need (obviously you'll
need to fill in the blanks and change things here and there).  Below are
some links to the API specs for some of the classes I mentioned.

Cheers,
Adam

http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html
http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_recognition_exception.html
http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_failed_predicate_exception.html

On 03/04/2008, hardaway <hardawaycg at gmail.com> wrote:
>
> i 'm new to antlr and maybe my questions are very stupid.
>   just like my question,
> 1: if i have text like those in red
>  *a = [REPA], b=[REPB], c=[REPC]*
>  *a(1,1)=100*
>  b(1,4)=19
>  e(1,1)=100
> when i'm parsing the text,i'll put the first line to a map ,just like
> map.put(a,REPA),map.put(b,REPB)....and when parsing line2-4,just like
> a(1,1).i'll scan the map whether the variable has been defined,just like
> map.containsKey(a),if it is ,i'll do some operations.and just like the above
> text,when it turn to line 4: "map.containsKey(e)".obviously it'll return a
> false to me.and i want to throw my custom Excpetion to warning the text
> writer to do some correct.and i want to throw some custom messages with the
> full text of  "e(1,1)=100" and the line number: 4,maybe message like this
> "REPORT HAS NOT BEEN DEFINED WITH THE TEXT:  e(1,1)=100  in line 4.how can i
> get the full text and the line number.
> indexStat : a=ID '(' b=INT ',' c=INT ')'' '=' d=INT.
> i only know that writing like this: $a.text + '(" + $b.text + ',' +
> $c.text + ')=' + $d.text to combine e '(' 1 ',' 1 ')=' 100 .but is it too
> complicate?is there any way to get e(1,1)=100 as easy as possible?
>
> and in your replys ,firstly a big thank to ur replays.u mentioned that use
> the FailedPredicateException.but i'm afraid map.containsKey(e) returns only
> true or false, it wont throw any exception.how can i catch it??
>
> and the last question.i googled some pages that in an older version of
> antlr,wen can write rule like this to throws Exception:
> indexStat returns[String value] throws MyException   but in antlr 3,does
> the format change? when i write like that,i got an tip and "indexStat  is
> not a rule"...
> and if in an action,i write ... throw new MyException()..i have to modify
> the generated parser java file with the sentence like
> public String indexStat() throws RecoginitionException
> to
>  public String indexStat() throws RecoginitionException, MyException..
> to make the java code compileable.what is the right way to handle this?
>
> thanks to ur help again
>
> hardaway
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/46d4d5f9/attachment.html 

From adam.rpconnelly at googlemail.com  Thu Apr  3 03:35:14 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 3 Apr 2008 11:35:14 +0100
Subject: [antlr-interest] how do i throw my exception and get the rule
	text and line number
In-Reply-To: <b9a39b060804030332u65ae1179me3ff626c39469ecd@mail.gmail.com>
References: <3bc8062e0804020816m45349554g151d590aa4980ecb@mail.gmail.com>
	<b9a39b060804021715q41154d1ep64fe229d17524a17@mail.gmail.com>
	<3bc8062e0804030112o53051d24m84dea8be0e45caee@mail.gmail.com>
	<b9a39b060804030332u65ae1179me3ff626c39469ecd@mail.gmail.com>
Message-ID: <b9a39b060804030335g112f5e40mcdd8bd244b5b7a4d@mail.gmail.com>

One last thing, looking at the generated code it looks like you should be
able to access a, b, c and d in the catch block of the rule if that's any
help to you.

Adam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/5f2cdfe9/attachment.html 

From jaluber at gmx.de  Thu Apr  3 03:56:14 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 03 Apr 2008 12:56:14 +0200
Subject: [antlr-interest] python grammar(s)
In-Reply-To: <47F4592B.8030304@gmx.net>
References: <47F4592B.8030304@gmx.net>
Message-ID: <47F4B7CE.40407@gmx.de>

alexander krohn schrieb:
> hi.
> 
> i'm trying to use the python grammars that exist. i found one for python 
> 2.3 done by terence and one updated version for python 2.5 done by frank.
> 
> both versions don't match with the grammar(s) i found on python.org
> 
> some example, the del-statement:
> 
> antlr-grammars just say:
> del_stmt : 'del' exprlist;
> 
> the grammar on python.org says something about
> 
> del_stmt ::=             "del" target_list
> 
> and for target_list:
> 
> target_list ::=             target ("," target)* [","]
>  
> target ::=             identifier
>                | "(" target_list ")"
>                | "[" target_list "]"
>                | attributeref
>                | subscription
>                | slicing
> 
> etc.
> 
> the "target"-stuff doesn't even exist in the antlr-grammars. they would 
> accept a line like
> del 1 + 1
> which python spits out with a SyntaxError.
> 
> there are some more things python does not accept, while the antlr 
> grammars do. how comes?
> 
> are these just meant as examples?

My theory is that the ANTLR python grammars are supersets over the 
specification on python.org. Such grammar definitions tend to include 
semantic limitations, which could be included in BNF form, but make it 
more difficult to create good error diagnostics from. The solution is 
then to do a second pass which filters the wrong semantics out.

Johannes

From adam.rpconnelly at googlemail.com  Thu Apr  3 04:28:17 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 3 Apr 2008 12:28:17 +0100
Subject: [antlr-interest] Matching String Templates to Tree Grammars
In-Reply-To: <47F49F6C.8020009@virgin.net>
References: <47F49F6C.8020009@virgin.net>
Message-ID: <b9a39b060804030428h15f8aea3v8535856afe257318@mail.gmail.com>

When you do l_treeWalker.TemplateLib = l_templateGroup you let the tree
walker know where to look for templates.  In your rules, in a template
output grammar (where you have output=template in the options for your
grammar) the bit after "->" specifies how to "create" the template for the
rule.

So a simple example that uses the template group you provided would be:

myRule: SOMETHING -> simpletemplate();

myOtherRule : forClause getClause -> translate(forClause={$forClause.text},
getClause={$getClause.text});

So basically it looks for the name of the template specified after the "->"
in the template group that you've specified for the walker.  You can also
write inline templates and so on.  Just so you know, the code I've written
above should be taken as pseudo-code since I've not verified that it works,
but it should be pretty close.

The following page has a reference for template construction
http://www.antlr.org/wiki/display/ANTLR3/Template+construction.

Cheers,
Adam

On 03/04/2008, Simon Woods <simon.woods at virgin.net> wrote:
>
> Hi
>
> New to all this so please bear with me ... I'm missing something (probably
> quite a lot, actually) in my understanding. (I'm awaiting delivery of the
>  Definitive Antlr guide ... )
>
> It may seem overkill for what I'm trying to do but ... I have
>
> ============================ tree grammar
>
> tree grammar QLWalker;
>
> options {
>   tokenVocab=QL;
>   ASTLabelType = CommonTree;
>       language = CSharp;
>       output=template;
>       rewrite=true;
> }
>
> mainstatement
>   : forstatement getstatement
>   ;
>  forstatement
>   : ^(FOR text)
>   ;
>
> getstatement
>   : ^(GET text (COMMA text)*)
>   ;    text
>   : ID -> template(name = {$ID.text}) "$name$"
>   ;
>
> ============================ String Template Group
>
> group QL2SQL;
>
> translate(forClause, getClause) ::= <<
> SELECT <getClause; separator=","> FROM <forClause>
> >>
>
> simpletemplate() ::= "This is the template"
>
> ============================ Test routine
>
> Here's the test I'm running (VB.Net)
>
>   Public Sub Template_CanSubstituteFromAST()
>
>       Dim l_templateGroup As Antlr.StringTemplate.StringTemplateGroup =
> CreateTemplateGroup(TemplateGroupFile)           Dim l_lexer As New
> QLLexer(New Antlr.Runtime.ANTLRStringStream("FOR myDatasource GET a,b,c"))
>
>       '???
>       Dim l_tokens As New Antlr.Runtime.TokenRewriteStream(l_lexer)
>       Dim l_parser As New QLParser(l_tokens)
>
>       '???
>       Dim l_nodes As New
> Antlr.Runtime.Tree.CommonTreeNodeStream(l_parser.mainStatement.Tree)
>
>       Dim l_treeWalker As New QLWalker(l_nodes)
>       l_treeWalker.TemplateLib = l_templateGroup
>
>       Assert.AreEqual("SELECT a,b,c FROM myDatasource",
> l_treeWalker.mainstatement.ToString())
>
>   End Sub
>
> (I've left ??? in as I'm just copying from
> http://aaronfeng.com/articles/2007/04/26/translation-part-2-via-abstract-syntax-tree - though I'm not sure why I need to do this at the moment)
>
> Now when I step the code, I check the template variable in the
> mainstatement class and it is not set. So I figured this has something to do
> with my problem (of the thing not working!). But I'm wondering how the
> treeWalker is meant to know which template to use. Do I have to tell it in
> some way?
>
> Thanks in advance for any help,
>
> Simon
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/bb3af345/attachment.html 

From jimi at temporal-wave.com  Thu Apr  3 07:26:40 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 03 Apr 2008 07:26:40 -0700
Subject: [antlr-interest] advocacy of C++ support in ANTLR 3.x
In-Reply-To: <01d601c8955c$2b00c620$81025260$@cz>
Message-ID: <1c2ddb9832a2ea42827b0c6af1d0cae8@temporal-wave.com>

As I said, if I have wandered away from that recently, it is a mistake as it is intended to do this, so I will fix it up for the release of 3.1. I have been talking as if it already was like this because it is supposed to be :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Tomas Potrusil
> Sent: Thursday, April 03, 2008 12:27 AM
> To: ANTLR
> Subject: Re: [antlr-interest] advocacy of C++ support in ANTLR 3.x
> 
> > If they want to replace the entire tree structure, then they
> > ignore ANTLR3_COMMON_TREE and inherit from
> > ANTLR3_BASE_TREE_ADAPTOR; this requires them to implement all
> > methods, but means that their tree node could be some C++ type
> > completely divorced from ANTLR -- the adaptor carries the burden
> > of converting the interfaces.
> 
> This is exactly what I wanted to say. Thanks Gavin.
> 
> I think that this is exactly the reason why adaptors were introduced.
> To be
> completely independent of the ANTLR tree classes/structures. If you
> omit
> this independence then the adaptors are not real adaptors as they do
> not
> adapt your classes to something ANTLR can understand. In the current
> situation you can remove all the "adaptive" functions from
> ANTLR3_BASE_TREE_ADAPTOR and call the functions directly on
> ANTLR3_BASE_TREE
> - this change will preserve all other functionality, the uses will not
> need
> to notice it... But then the ANTLR3_BASE_TREE_ADAPTOR will consist of
> functions that do just some sugar (i.e. becomeRoot()), these could be
> also
> removed somewhere else, and the rest will be just "factory methods".
> And
> hence the ANTLR3_BASE_TREE_ADAPTOR will be renamed to
> ANTLR3_BASE_TREE_FACTORY :-) It will be perfectly correct, the current
> functionality will be entirely preserved, but this system will be
> obviously
> without adaptors...
> 
> Tom





From markobarko at gmail.com  Thu Apr  3 08:00:20 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Thu, 03 Apr 2008 11:00:20 -0400
Subject: [antlr-interest] Rookie problem
In-Reply-To: <1207233309.6403.29.camel@main>
References: <1207233309.6403.29.camel@main>
Message-ID: <1207234820.6403.31.camel@main>

Hi all,

I've just started using Antlr and I'm having a bit of a problem with a
grammar definiton. I want my grammar to support a language with
multi-word variable names. However, making the adjustment breaks my
if-then conditional recognition.

The grammar at the end of this e-mail works fine for variable names
without spaces. If i change the 'name' definition to the following:

name: String (' ' String)*;

then the 'if' statement can no longer be recognized. What am i doing
wrong?

Thanks,
Marko

grammar test;

String : ('a'..'z' | 'A'..'Z')+;

ConditionOperator
: '<' | '>';

name 
: String;

condition
: name (ConditionOperator name)*;
selection
: 'if' condition 'then' condition;

statement
: selection;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/a02faf00/attachment.html 

From adam.rpconnelly at googlemail.com  Thu Apr  3 09:31:53 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 3 Apr 2008 17:31:53 +0100
Subject: [antlr-interest] Rookie problem
In-Reply-To: <1207234820.6403.31.camel@main>
References: <1207233309.6403.29.camel@main> <1207234820.6403.31.camel@main>
Message-ID: <b9a39b060804030931j7d99c97cjec9561dfd37ab374@mail.gmail.com>

Not 100% on this, but I would guess that the "name" rule that's part of
"condition" is consuming the "then".  Basically if I'm right about this,
antlr thinks that the "then" keyword of the if statement is part of a name.

Unfortunately I don't know a solution for this of the top of my head.

Sorry,
Adam


On 03/04/2008, Marko Simovic <markobarko at gmail.com> wrote:
>
> Hi all,
>
> I've just started using Antlr and I'm having a bit of a problem with a
> grammar definiton. I want my grammar to support a language with multi-word
> variable names. However, making the adjustment breaks my if-then conditional
> recognition.
>
> The grammar at the end of this e-mail works fine for variable names
> without spaces. If i change the 'name' definition to the following:
>
> name: String (' ' String)*;
>
> then the 'if' statement can no longer be recognized. What am i doing
> wrong?
>
> Thanks,
> Marko
>
> grammar test;
>
> String : ('a'..'z' | 'A'..'Z')+;
>
> ConditionOperator
> : '<' | '>';
>
> name
> : String;
>
> condition
> : name (ConditionOperator name)*;
> selection
> : 'if' condition 'then' condition;
>
> statement
> : selection;
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/6af4d6d4/attachment.html 

From simon.woods at virgin.net  Thu Apr  3 10:45:42 2008
From: simon.woods at virgin.net (Simon Woods)
Date: Thu, 03 Apr 2008 18:45:42 +0100
Subject: [antlr-interest] How to suppress tokens with rewrite rules
Message-ID: <47F517C6.6030503@virgin.net>

Hi again

In trying to learn antlr, I've been trying to find out the best way to 
remove certain tokens through rewrite, but I'm not sure of the best way.

The tree grammar will receive a forstatement "FOR tableX" and a 
getstatement "GET columnX,columnY ..."

I'm simply trying to suppress the FOR and GET keywords

I have tried with a tree grammar/string template

===Tree Grammar ===

mainstatement
    : forstatement getstatement
      -> 
translate(forClause={$forstatement.text},getClause={$getstatement.text})
    ;
   
forstatement
    : ^(FOR ID)
      -> striptoken(text={$ID.text})
    ;

getstatement
    : ^(GET ID+)
      -> striptoken(text={$ID.text})
    ;   


==== STG ====

group QL2SQL;

translate(forClause, getClause) ::= <<
SELECT <getClause; separator=","> FROM <forClause>
 >>

striptoken(text) ::= <<
<text>
 >>

Now I'm *sure* this isn't the best way, nor does it work for the GET ID+ 
rule as I only get the last get entry in the comma separate value list 
of columns ...

Thanks again

Simon





From dbrunton at gmail.com  Thu Apr  3 11:33:33 2008
From: dbrunton at gmail.com (David Brunton)
Date: Thu, 3 Apr 2008 14:33:33 -0400
Subject: [antlr-interest] section identifiers
In-Reply-To: <c5b133bce15cec43ba0d77ec1b190910@temporal-wave.com>
References: <586d73570804010852n381798edh8fbd0452b33adc09@mail.gmail.com>
	<c5b133bce15cec43ba0d77ec1b190910@temporal-wave.com>
Message-ID: <586d73570804031133p116c6198h99b4b6c511a0cbff@mail.gmail.com>

Thanks, Jim- your response pointed me in the right direction, I think.
Here's what the results look like, for anyone else who's flailing around
like I am:

  comment: 'begin' id=ID .* {input.LT(2).getText().equals($id.text)}? end
ID;
  ID: 'a'..'z'+;
  WS: (' '|'\n'|'\r')+ {$channel=HIDDEN;};

Best,
David.

PS. Any improvements would be welcome- I'm brand new to ANTLR :)

On Tue, Apr 1, 2008 at 1:10 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  You can either use a filtering lexer, or give your lexer some states
> using @lexer::header { int state; }. If all you want to do is capture the
> stuff in between the begin and end and return a token for it, then you could
> probably just use a filtering lexer, or if it really is just that simple,
> then just a rule to capture the being and end stuff with some embedded logic
> to only recognize the end when the following word matches the start word
> (which you will capture after 'being' and check for after 'end'.
>
>
>
> However, you might just find that awk does this just as well if this is
> all you need out of the file. If this is just part of a larger picture, then
> a single lexer rule for 'being' and a bit of custom code using input.LA()
> and input.consume() to find the end will do just as well.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *David Brunton
> *Sent:* Tuesday, April 01, 2008 8:52 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] section identifiers
>
>
>
> I am parsing some files that have sections demarcated with the "begin" and
> "end" at the start of a line, followed by a (matching) arbitrary identifier:
>
> <snip>
> begin foo
> some stuff
> some other stuff
> end but don't end the section!
> other stuff
> end foo
> </snip>
>
> I don't need to parse anything inside of the section.
>
> I imagine this is a fairly common problem- any pointers?
>
> Best,
> David.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/56afdd3f/attachment.html 

From parrt at cs.usfca.edu  Thu Apr  3 12:08:01 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 Apr 2008 12:08:01 -0700
Subject: [antlr-interest] ok, lack of automatic help for ST driving me nuts
Message-ID: <2283AAE3-30F8-4F3B-B8F1-1A5A07989400@cs.usfca.edu>

ANTLR doesn't create templates by default (but does do so for ASTs if  
you recall).  This is now driving me nuts...investigating...will  
require minor tweaks to all runtime targets...sorry!

Ter

From 12345alex at gmx.net  Thu Apr  3 13:12:29 2008
From: 12345alex at gmx.net (alexander krohn)
Date: Thu, 03 Apr 2008 22:12:29 +0200
Subject: [antlr-interest] python grammar(s)
In-Reply-To: <47F4B7CE.40407@gmx.de>
References: <47F4592B.8030304@gmx.net> <47F4B7CE.40407@gmx.de>
Message-ID: <47F53A2D.9030600@gmx.net>

(sorry, i've sent this directly)

hi, johannes.

Johannes Luber schrieb:
> alexander krohn schrieb:
>> [...]
>> there are some more things python does not accept, while the antlr 
>> grammars do. how comes?
>>
>> are these just meant as examples?
>
> My theory is that the ANTLR python grammars are supersets over the 
> specification on python.org. Such grammar definitions tend to include 
> semantic limitations, which could be included in BNF form, but make it 
> more difficult to create good error diagnostics from. The solution is 
> then to do a second pass which filters the wrong semantics out.
>
> Johannes
>
can you explain what you mean by "semantic limitations"?

what would the second pass look like? what grammar should it use? a tree 
grammar maybe?

i want to do a mostly complete transformation using a heterogenous ast 
build by using rule arguments and return values. this puts more stuff to 
the rules than using rewrite rules but the result is really nice.

regards

alexander

From jaluber at gmx.de  Thu Apr  3 13:50:35 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 03 Apr 2008 22:50:35 +0200
Subject: [antlr-interest] python grammar(s)
In-Reply-To: <47F53A2D.9030600@gmx.net>
References: <47F4592B.8030304@gmx.net> <47F4B7CE.40407@gmx.de>
	<47F53A2D.9030600@gmx.net>
Message-ID: <47F5431B.6010900@gmx.de>

alexander krohn schrieb:
>>
> can you explain what you mean by "semantic limitations"?

There is syntax and there is semantics. Syntax means only correct use of 
the grammar, but not necessarily that the semantics are correct, that 
there is meaning being conferred. "The jam flew like carwinkle." is 
correct syntax, but still nonsense.

Other example. In C# you can use modifiers in front of class-, method-, 
etc.-definitions. But while there is a set of known modifiers, only a 
subset is valid for certain definitions and even there is additional 
context involved. Allowing all modifiers at every place would be 
syntactically correct.

Semantically correct, you can use "virtual" on methods, but not on 
classes. Classes can be "protected" or "private" only when being nested 
themselves. Methods can have "override" only, if there is in a base 
class a suitable "virtual" method.

Some of these limitations can be expressed in BNF where you just allow 
only sensible modifiers, removing only the ones which are never used. 
But this imposes semantic meaning on a pure syntactical construct. This 
should be done in a second pass, because then one can check for other 
context-dependent limitations.

> what would the second pass look like? what grammar should it use? a tree 
> grammar maybe?

A tree grammar is probably the right approach. At least I don't know any 
reason why it isn't. I would use the first pass also to create a symbol 
table. While I haven't gotten around to get my own C# compiler to 
include symbol tables yet, my dissertation thesis may be still useful 
for you, at least the bits about compiler design and ANTLR grammar 
tweaking. If you like I can send you one copy.

> i want to do a mostly complete transformation using a heterogenous ast 
> build by using rule arguments and return values. this puts more stuff to 
> the rules than using rewrite rules but the result is really nice.

That goes beyond my own expertise. Sorry. :(

Johannes

From simon.woods at virgin.net  Thu Apr  3 14:33:50 2008
From: simon.woods at virgin.net (Simon Woods)
Date: Thu, 03 Apr 2008 22:33:50 +0100
Subject: [antlr-interest]  How to suppress tokens with rewrite rules
In-Reply-To: <mailman.1.1207249201.27207.antlr-interest@antlr.org>
References: <mailman.1.1207249201.27207.antlr-interest@antlr.org>
Message-ID: <47F54D3E.8070401@virgin.net>

OK. Sorted  ... perhaps not the best way (as my lack of knowledge means 
that I'm unaware whether there are better ways to do this) but it seems 
to work...

forstatement
    : ^(FOR ID)
      -> {%{$ID.text}}
    ;

getstatement
    : ^(GET (s+=ID)+)
      -> listcolumns(columns={$s})
//      -> template(ids={$s}) "<ids; separator=\",\">" in-line version

The definitive ref arrived today!


> Hi again
>
> In trying to learn antlr, I've been trying to find out the best way to 
> remove certain tokens through rewrite, but I'm not sure of the best way.
>
> The tree grammar will receive a forstatement "FOR tableX" and a 
> getstatement "GET columnX,columnY ..."
>
> I'm simply trying to suppress the FOR and GET keywords
>
> I have tried with a tree grammar/string template
>
> ===Tree Grammar ===
>
> mainstatement
>     : forstatement getstatement
>       -> 
> translate(forClause={$forstatement.text},getClause={$getstatement.text})
>     ;
>    
> forstatement
>     : ^(FOR ID)
>       -> striptoken(text={$ID.text})
>     ;
>
> getstatement
>     : ^(GET ID+)
>       -> striptoken(text={$ID.text})
>     ;   
>
>
> ==== STG ====
>
> group QL2SQL;
>
> translate(forClause, getClause) ::= <<
> SELECT <getClause; separator=","> FROM <forClause>
>  >>
>
> striptoken(text) ::= <<
> <text>
>  >>
>
> Now I'm *sure* this isn't the best way, nor does it work for the GET ID+ 
> rule as I only get the last get entry in the comma separate value list 
> of columns ...
>
> Thanks again
>
> Simon


From 12345alex at gmx.net  Thu Apr  3 15:06:24 2008
From: 12345alex at gmx.net (alexander krohn)
Date: Fri, 04 Apr 2008 00:06:24 +0200
Subject: [antlr-interest] python grammar(s)
In-Reply-To: <47F5431B.6010900@gmx.de>
References: <47F4592B.8030304@gmx.net> <47F4B7CE.40407@gmx.de>
	<47F53A2D.9030600@gmx.net> <47F5431B.6010900@gmx.de>
Message-ID: <47F554E0.30703@gmx.net>

Johannes Luber schrieb:
> alexander krohn schrieb:
>>>
>> can you explain what you mean by "semantic limitations"?
>
> There is syntax and there is semantics. Syntax means only correct use 
> of the grammar, but not necessarily that the semantics are correct, 
> that there is meaning being conferred. "The jam flew like carwinkle." 
> is correct syntax, but still nonsense.
>
> Other example. In C# you can use modifiers in front of class-, 
> method-, etc.-definitions. But while there is a set of known 
> modifiers, only a subset is valid for certain definitions and even 
> there is additional context involved. Allowing all modifiers at every 
> place would be syntactically correct.
>
> Semantically correct, you can use "virtual" on methods, but not on 
> classes. Classes can be "protected" or "private" only when being 
> nested themselves. Methods can have "override" only, if there is in a 
> base class a suitable "virtual" method.
>
> Some of these limitations can be expressed in BNF where you just allow 
> only sensible modifiers, removing only the ones which are never used. 
> But this imposes semantic meaning on a pure syntactical construct. 
> This should be done in a second pass, because then one can check for 
> other context-dependent limitations.
yes, i see. but i think the python grammar's differences are more from 
syntactical nature.

>
>> what would the second pass look like? what grammar should it use? a 
>> tree grammar maybe?
>
> A tree grammar is probably the right approach. At least I don't know 
> any reason why it isn't. I would use the first pass also to create a 
> symbol table. While I haven't gotten around to get my own C# compiler 
> to include symbol tables yet, my dissertation thesis may be still 
> useful for you, at least the bits about compiler design and ANTLR 
> grammar tweaking. If you like I can send you one copy.
sure, would like to read it.
>
>> i want to do a mostly complete transformation using a heterogenous 
>> ast build by using rule arguments and return values. this puts more 
>> stuff to the rules than using rewrite rules but the result is really 
>> nice.
>
> That goes beyond my own expertise. Sorry. :(
>
> Johannes
>
i'm still unsure if i should fix the grammar, at least i will try.

as terence said: "don't touch the lexer" ;)

regards

alexander

From markobarko at gmail.com  Thu Apr  3 15:15:41 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Thu, 03 Apr 2008 18:15:41 -0400
Subject: [antlr-interest] Rookie problem
In-Reply-To: <b9a39b060804030931j7d99c97cjec9561dfd37ab374@mail.gmail.com>
References: <1207233309.6403.29.camel@main> <1207234820.6403.31.camel@main>
	<b9a39b060804030931j7d99c97cjec9561dfd37ab374@mail.gmail.com>
Message-ID: <1207260941.6644.5.camel@main>

You're right on the money with that Adam. For the life of me i can't
figure out a solution either. Forget the if-then statement thing from
before and here is a simpler example:

union:  name ('union' name)*;

this rule works well on stuff with syntax:

abcxyz union qrtabc

however, what would be the modification needed to do this:

abc xyz union qrtabc

I'm not smart enough for that problem
Marko

-----Original Message-----
From: Adam Connelly <adam.rpconnelly at googlemail.com>
To: Marko Simovic <markobarko at gmail.com>
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Rookie problem
Date: Thu, 3 Apr 2008 17:31:53 +0100

Not 100% on this, but I would guess that the "name" rule that's part of
"condition" is consuming the "then".  Basically if I'm right about this,
antlr thinks that the "then" keyword of the if statement is part of a
name.
 
Unfortunately I don't know a solution for this of the top of my head.
 
Sorry,
Adam

 
On 03/04/2008, Marko Simovic <markobarko at gmail.com> wrote: 
        Hi all,
        
        I've just started using Antlr and I'm having a bit of a problem
        with a grammar definiton. I want my grammar to support a
        language with multi-word variable names. However, making the
        adjustment breaks my if-then conditional recognition.
        
        The grammar at the end of this e-mail works fine for variable
        names without spaces. If i change the 'name' definition to the
        following:
        
        name: String (' ' String)*;
        
        then the 'if' statement can no longer be recognized. What am i
        doing wrong?
        
        Thanks,
        Marko
        
        grammar test;
        
        String : ('a'..'z' | 'A'..'Z')+;
        
        ConditionOperator
        : '<' | '>';
        
        name 
        : String;
        
        condition
        : name (ConditionOperator name)*;
        selection
        : 'if' condition 'then' condition;
        
        statement
        : selection;
        
         

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/c6edd9ea/attachment.html 

From gerald at certiv.net  Thu Apr  3 16:30:56 2008
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 03 Apr 2008 16:30:56 -0700
Subject: [antlr-interest] Rookie problem
In-Reply-To: <1207260941.6644.5.camel@main>
References: <1207233309.6403.29.camel@main> <1207234820.6403.31.camel@main>
	<b9a39b060804030931j7d99c97cjec9561dfd37ab374@mail.gmail.com>
	<1207260941.6644.5.camel@main>
Message-ID: <200804032340.m33NeDSZ010110@tach.newtechlaw.com>

One way is to use a validating semantic predicate:

keyword : w1=word w2=word { helper.isKeywordPhrase($w1.text, $w2.text); }?
              | w=word { helper.isKeyword($w.text); }?
              ;

word : ( 'a'..'z' | 'A'..'Z' )+ ;

where the helper methods are lookup boolean return methods, the lexer 
is set to skip whitespace, and (for simplicity) the parser is set to 
backtrack.

After you understand the predicate use, look in the wiki/archives for 
the list operator '+=' and switch to using variable lists instead of instances.


At 03:15 PM 4/3/2008, Marko Simovic wrote:
>You're right on the money with that Adam. For the life of me i can't 
>figure out a solution either. Forget the if-then statement thing 
>from before and here is a simpler example:
>
>union:  name ('union' name)*;
>
>this rule works well on stuff with syntax:
>
>abcxyz union qrtabc
>
>however, what would be the modification needed to do this:
>
>abc xyz union qrtabc
>
>I'm not smart enough for that problem
>Marko
>
>-----Original Message-----
>From: Adam Connelly 
><<mailto:Adam%20Connelly%20%3cadam.rpconnelly at googlemail.com%3e>adam.rpconnelly at googlemail.com>
>To: Marko Simovic 
><<mailto:Marko%20Simovic%20%3cmarkobarko at gmail.com%3e>markobarko at gmail.com>
>Cc: <mailto:antlr-interest at antlr.org>antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Rookie problem
>Date: Thu, 3 Apr 2008 17:31:53 +0100
>
>Not 100% on this, but I would guess that the "name" rule that's part 
>of "condition" is consuming the "then".  Basically if I'm right 
>about this, antlr thinks that the "then" keyword of the if statement 
>is part of a name.   Unfortunately I don't know a solution for this 
>of the top of my head.   Sorry, Adam
>
>   On 03/04/2008, Marko Simovic 
> <<mailto:markobarko at gmail.com>markobarko at gmail.com> wrote:
>Hi all,
>
>I've just started using Antlr and I'm having a bit of a problem with 
>a grammar definiton. I want my grammar to support a language with 
>multi-word variable names. However, making the adjustment breaks my 
>if-then conditional recognition.
>
>The grammar at the end of this e-mail works fine for variable names 
>without spaces. If i change the 'name' definition to the following:
>
>name: String (' ' String)*;
>
>then the 'if' statement can no longer be recognized. What am i doing wrong?
>
>Thanks,
>Marko
>
>grammar test;
>
>String : ('a'..'z' | 'A'..'Z')+;
>
>ConditionOperator
>: '<' | '>';
>
>name
>: String;
>
>condition
>: name (ConditionOperator name)*;
>selection
>: 'if' condition 'then' condition;
>
>statement
>: selection;
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080403/466ef50b/attachment-0001.html 

From antlr at mirality.co.nz  Fri Apr  4 00:58:11 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 04 Apr 2008 20:58:11 +1300
Subject: [antlr-interest] Rookie problem
In-Reply-To: <1207234820.6403.31.camel@main>
References: <1207233309.6403.29.camel@main>
 <1207234820.6403.31.camel@main>
Message-ID: <20080404075821.EFA5411E9F1@www.antlr.org>

At 04:00 4/04/2008, Marko Simovic wrote:
>The grammar at the end of this e-mail works fine for variable 
>names without spaces. If i change the 'name' definition to the 
>following:
>
>name: String (' ' String)*;
>
>then the 'if' statement can no longer be recognized. What am i 
>doing wrong?

If that was a complete grammar, then you're missing a whitespace 
rule.  If a character (such as whitespace) isn't referred to by 
any lexer rule then ANTLR will by default output an error and then 
drop the character and move on, which is why your 'if' rule would 
have been "working" originally.

As soon as you add the space to the 'name' rule, space becomes a 
valid input character and it will start generating space tokens, 
which means that for the input "if foo then bar" you'll now get 
'if',' ','foo',' ','then',' ','bar' instead of 
'if',(error),'foo',(error),'then',(error),'bar'.  And since your 
'selection' rule doesn't match spaces, it won't be able to match 
any more.

The normal solution is to add a WS rule and make it hidden; 
however if you do that then no WS tokens will be visible to the 
parser so your 'name' rule won't be able to match spaces 
anyway.  But you shouldn't need to explicitly specify a space, 
assuming that any amount of whitespace is permitted between the 
words in your multi-word names; the simple fact that multiple 
tokens were generated proves that there was something that broke 
the tokens up.

This is just off the cuff (I haven't tested it), but something 
like this ought to work:

grammar test;

String : ('a'..'z' | 'A'..'Z')+;

ConditionOperator : '<' | '>';

WS : (' ' | '\r' | '\n')+ { $channel = HIDDEN; };

name : String+;

condition : name (ConditionOperator name)*;

selection : 'if' condition 'then' condition;

statement : selection;


From mail at martin-probst.com  Fri Apr  4 02:24:54 2008
From: mail at martin-probst.com (Martin Probst)
Date: Fri, 4 Apr 2008 11:24:54 +0200
Subject: [antlr-interest] XML QName Character Validation
Message-ID: <315C9076-9A30-40FC-82A9-4DC92D5A0FAA@martin-probst.com>

Hi all,

I'm making really nice progress with my XQuery grammar, thanks to the  
help of Jim Idle and Ter's awesome LL(*) algorithm.

I'm facing a single last problem: in XQuery, QNames play an important  
role. QNames and keywords overlap, so it's a keyword-free grammar. The  
rules on what makes a legal QName from the XML spec are quite complex  
in their selection of Unicode characters, see here: http://www.w3.org/TR/REC-xml/#NT-Letter

If I naively translate that to ANTLR fragment rules, ANTLR fails to  
analyze those rules:
warning(205): XQuery.g:1:8: ANTLR could not analyze this decision in  
rule Tokens; often this is because of recursive rule references  
visible from the left edge of alternatives.  ANTLR will re-analyze the  
decision with a fixed lookahead of k=1.  Consider using "options  
{k=1;}" for that decision and possibly adding a syntactic predicate.
error(10):  internal error:  
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1152): could  
not even do k=1 for decision 24; reason: timed out (>1000ms)

No blame here, those rules are probably better handled in a different  
way. The question is: which different way? I tried taking those rules  
out into a Java file called CharHelper, and having these rules:

... lots of tokens, snip ...
UNION	:	'union';
UNORDERED
		:	'unordered';
... snip ...
QName	:	NCName (':' NCName)?;
fragment NCName	:	NCNameStartChar NCNameChar*;
fragment NCNameStartChar
		:	Letter | '_';
fragment NCNameStartChar
		:	Letter | '_';
fragment NCNameChar
		:	Letter | XMLDigit | '.' | '-' | '_' | CombiningChar | Extender;
fragment Letter
		:	{ CharHelper.isLetter(LA(1) }? =>  .;
fragment BaseChar
		:	{ CharHelper.isBaseChar(LA(1) }? =>  .;
fragment Ideographic	
		:	{ CharHelper.isIdeographic(LA(1)) }? =>  .;
fragment XMLDigit
		:	{ CharHelper.isXMLDigit(LA(1)) }? =>  .;
fragment CombiningChar
		:	{ CharHelper.isCombiningChar(LA(1)) }? =>  .;
fragment Extender
		:	{ CharHelper.isExtender(LA(1)) }? =>  .;

But this makes ANTLR complain about ambiguities:
warning(209): XQuery.g:319:1: Multiple token rules can match input  
such as "'u'": UNION, UNORDERED, QName, Wildcard
As a result, tokens(s) UNORDERED,QName,Wildcard were disabled for that  
input

So apparently the lexical analysis is now behaving quite differently.  
Before all this, I just specified NCName to be ('a'..'z' | 'A'..'Z')+  
and it worked like a charm. I somehow fail to see how (effectivly)  
changing that to '\u0000'..'\uFFFE' with a gating predicate changes  
this to be ambiguous.

Any ideas?

BTW: I've implemented a nice technique of lexer switching based on  
parser context. XQuery is a language who's lexical structure changes  
quite radically between normal expressions and the embedded XML  
literals.

This is somewhat similar to the example at http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control 
. However I don't need to switch the full parser, as my grammatical  
rules for the whole language fit into one grammar - I just needed to  
change the way tokens are generated by the lexer. I'm going to write  
up my technique as an addendum to that page once it's done.

I'd also like to make my grammar freely available on antlr.org once  
it's done, if there is interest. Do I just send it to Ter, or how does  
that work?

Thanks,
Martin

From silvester.pozarnik at tracetracker.com  Fri Apr  4 03:29:02 2008
From: silvester.pozarnik at tracetracker.com (Silvester Pozarnik)
Date: Fri, 4 Apr 2008 12:29:02 +0200
Subject: [antlr-interest] Lexer problem - previous token semantic predicate
In-Reply-To: <20080404075821.EFA5411E9F1@www.antlr.org>
Message-ID: <5D85F621120B9545BE359DCFA7788125E254CD@SERVER.tt.tracetracker.com>

Hi,

I have a problem in forcing the lexer to emit the right token type,
based on previous token type encountered.

The string I want to parse is for example "TRD.2ads". This now generate
token sequence (SYS_TRD, REAL_LITERAL) while I need it to generate
(SYS_TRD, DOT, IDENTIFIER) sequence (see the fragments from the grammar
below). The logic should be that if lexer previously encountered a
SYS_TRD token, do not interpret the DOT as a start of REAL_LITERAL, but
as a DOT itself. 

I tried to use semantic predicate "{ input.index()>0 && input.LT(-1) !=
'D' }?" at the commented marker below ( instead of /* code here? */) but
the result is that recognition of REAL_LITERAL gets aborted, but lexer
fails to generate a DOT token.

I will really appreciate if there is someone in antlr community with any
idea how to solve this.

Thanks
Silvester Pozarnik

// ... parser part
tokens {...
  SYS_TRD='TRD';
//...
}

//...
trd_property returns [String value]	:
    SYS_TRD! DOT! {input.LT(1).setType(IDENTIFIER);} property { $value =
$property.text; }
    ;
//..

// lexer parts
DOT      : '.' ;
//...

IDENTIFIER 
    : { testLiterals=true; } ('a'..'z' | 'A'..'Z' | '0'..'9' |
'\u0080'..'\ufffe') ( Letter | Digit)*
    ;
//...

fragment
REAL_LITERAL
    :   ('0'..'9')+ '.' ('0'..'9')* Exponent? 
    |   { /* code here? */ }? '.' ('0'..'9')+ Exponent? 
    |   ('0'..'9')+ Exponent
	;
//...



From antlr at mirality.co.nz  Fri Apr  4 04:14:29 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 05 Apr 2008 00:14:29 +1300
Subject: [antlr-interest] Lexer problem - previous token semantic
 predicate
In-Reply-To: <5D85F621120B9545BE359DCFA7788125E254CD@SERVER.tt.tracetrac
	ker.com>
References: <20080404075821.EFA5411E9F1@www.antlr.org>
	<5D85F621120B9545BE359DCFA7788125E254CD@SERVER.tt.tracetracker.com>
Message-ID: <20080404111439.CD35311E940@www.antlr.org>

At 23:29 4/04/2008, Silvester Pozarnik wrote:
 >The string I want to parse is for example "TRD.2ads". This now
 >generate token sequence (SYS_TRD, REAL_LITERAL) while I need it
 >to generate (SYS_TRD, DOT, IDENTIFIER) sequence (see the
 >fragments from the grammar below).

Can't you just add a dot to the end of SYS_TRD?  Or can that also 
occur without the trailing dot?


From PSheehan at decaresystems.ie  Fri Apr  4 06:33:07 2008
From: PSheehan at decaresystems.ie (PSheehan at decaresystems.ie)
Date: Fri, 4 Apr 2008 14:33:07 +0100
Subject: [antlr-interest] Noob TreeWalker Template question
Message-ID: <OF3FA47429.56C789F3-ON80257421.00484EA5-80257421.004A71E7@decaresystems.ie>

Hi all,
I'm completely new to Antlr with no previous complier/parser experience. 
I'm create a simple lexer/parser and treewalker to help me understand the 
ins and outs of Antlr.  I also have the Antlr reference book, which I 
would be completely lost without!

I'm having a simple problem when trying to process a rule that does not 
have a template associated with it.  When I run my example I get an 
ArrayList of nulls for 'fields'.

options{
       tokenVocab=mytest;
        ASTLabelType=CommonTree;
        output=template;
}

model   :       ^(MODEL TYPE fs+=fielddef+) -> 
modeltmp(name={$TYPE},fields={$fs})
        ;

fielddef returns [String type,String id] 
        :       ^(FIELD TYPE ID) {$type=$TYPE.text;$id=$ID.text;}
        ;


When I look at the generate code it is like this

                    fs=fielddef();
                    _fsp--;

                    if (list_fs==null) list_fs=new ArrayList();
                    list_fs.add(fs.getTemplate());

Sorry if this is a simple question but is there a way I can modify the 
grammar so that I end up with an ArrayList of return_fielddef like so:-

                    fs=fielddef();
                    _fsp--;

                    if (list_fs==null) list_fs=new ArrayList();
                    list_fs.add(fs);

Or do have I have to use scopes in my grammar to deal with this problem. 
Thanks,
Paul


This e-mail and any files transmitted with it are intended solely for the individual or entity to whom they are addressed. This communication may contain material that is privileged, confidential and protected from disclosure under the law. If you are not the intended recipient, any disclosure, distribution, copying, or use of this information is strictly prohibited and may be unlawful. 

If you have received this e-mail in error, please reply immediately to the sender and delete it.

Registered Address:
DeCare Systems Ireland Ltd, 
Building 1, University Technology Centre, Curraheen Road, Cork, Ireland. 
Company Registration Number:  278462
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/1bc16cb7/attachment.html 

From ymo.mail at gmail.com  Fri Apr  4 07:01:32 2008
From: ymo.mail at gmail.com (Ymo)
Date: Fri, 4 Apr 2008 10:01:32 -0400
Subject: [antlr-interest] This is driving me crazy .. please help !
Message-ID: <7196ed5b0804040701u4845ade2p2b02e0558861dcc4@mail.gmail.com>

I already have file defined i dont understand why the parser still cant see
this rule !

error:
   public void initTemplates() {
   }

BR.recoverFromMismatchedToken
line 23:7 mismatched input 'file ${fname} ?\r\n      ' expecting EOF


input:
package org.idezk.xmm.xmmt.parser.templates;

import org.antlr.runtime.ANTLRFileStream;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.tree.CommonTreeNodeStream;
import org.antlr.runtime.tree.Tree;

import org.idezk.xmm.xmmt.parser.grammar.XTemplateLexer;
import org.idezk.xmm.xmmt.parser.grammar.XTemplateParser;


public class BasicDriver {

   public static void main(String[] args) {
      String fname = args[0];
      new BasicDriver().compile(fname);
   }

   public void initTemplates() {
   }
      ?file ${fname} ?
      ?/file?

/*
      ?file ${fname} ?

         if(){
            ?print?
               testing ?${}?
            ?/print?
         }
         else if(){
            ?print??/print?
         }

      ?/file?
*/
}

grammar :

templateFile
   :  templateBlock
      EOF
   ;

templateBlock //returns [AstTemplateBlock tb]
   @init{List fBlocks=new ArrayList() , eBlocks=new ArrayList(); }
   :  textBlock LG
      (  fb=fileBlock eb=elementBlock )*
   ;

fileBlock //returns [AstFileBlock afb]
   :  'file' codeBlock
      (elementBlock (printBlock elementBlock)* )*
      '/file'
   ;

printBlock //returns [AstPrintBlock apb]
   :  'print'
      (  elementBlock
         (cb=codeBlock eb=elementBlock  )* )*
      '/print'
   ;

codeBlock //returns [AstCodeBlock cb]
   :   '$' '{' textBlock '}'
   ;

elementBlock //returns [AstElementBlock aeb]
   :  RG textBlock LG?
   ;

textBlock //returns [AstTextBlock cb]
   :   tb=TextBlock { System.out.println("tb:"+tb.getText()); }
   ;

//LEXER

WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;

ML_COMMENT
    :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
    ;

LINE_COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
    ;

LG  : '\u00AB';
fragment
RG: '\u00BB';

TextBlock //returns [AstTextBlock atb]
   :  ~(LG)*
   ;

// a dummy rule to force vocabulary to be all characters (except special
// ones that ANTLR uses internally (0 to 2) and the guillemot characters
fragment
VOCAB :
   ('\3'..'\u00aa'|'\u00ac'..'\u00ba'|'\u00bc'..'\ufffe')
;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/a611700c/attachment-0001.html 

From arjode at uni-koblenz.de  Fri Apr  4 07:34:02 2008
From: arjode at uni-koblenz.de (arjode at uni-koblenz.de)
Date: Fri, 4 Apr 2008 16:34:02 +0200 (CEST)
Subject: [antlr-interest] Lexer problem - previous token semantic
 predicate
In-Reply-To: <5D85F621120B9545BE359DCFA7788125E254CD@SERVER.tt.tracetracker.com>
References: <5D85F621120B9545BE359DCFA7788125E254CD@SERVER.tt.tracetracker.com>
Message-ID: <2178.212.16.235.86.1207319642.squirrel@mail.uni-koblenz.de>

> I have a problem in forcing the lexer to emit the right token type,
> based on previous token type encountered.

I've encounter the same problem. My solution is to remember the last
(significant) emited token in the lexer and check for this (this was for
embedded RegEx).

Heres my code:

@lexer::members {

private Token lastSignificantToken;

public void emit(Token token) {
    if(token.getChannel() == Token.DEFAULT_CHANNEL) {
        lastSignificantToken = token;
    }
    super.emit(token);
}

private boolean isLastToken(int... type) {
    Token last = getLastSignificantToken();
    if(last == null)
        return false;
    for(int t : type) {
        if(t == last.getType())
            return true;
    }
    return false;
}

private boolean isLastToken(String... type) {
    Token last = getLastSignificantToken();
    if(last == null)
        return false;
    for(String t : type) {
        if(t.equals(last.getText()))
            return true;
    }
    return false;
}

private Token getLastSignificantToken() {
    return lastSignificantToken;
}
}


RegEx
 : {isLastToken("=", "(", ",")}?=>'/' ( RegEx_ESCAPE_SEQUENCE |
~('\\'|'\''|'\n'|'\r'|'/') )* '/' ('g'|'i'|'m'|'s'|'x')* ;
fragment RegEx_ESCAPE_SEQUENCE : '\\' ('/') ;


Hope that helps.


From go2elango at gmail.com  Fri Apr  4 08:15:19 2008
From: go2elango at gmail.com (elango m)
Date: Fri, 4 Apr 2008 20:45:19 +0530
Subject: [antlr-interest] Need help regarding parser
Message-ID: <154902370804040815n3a0e32a2n1ebfbdff85dce72f@mail.gmail.com>

Hi,

We used a home grown hand written parser for parsing expressions, now I am
working on moving the hand written parser to ANLTR based parser. I have
written a grammar that well suits my requirement. But now I am facing an
issue.

In our parser we used to convert the following expression
NOT VAR1 = VAR2
to
NOT ( VAR1 = VAR2 )
while parsing (since the earlier one is wrong).

Now I want to do this with ANTLR. How do I do that?

Thanks in advance,
-EM-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/7d96e103/attachment.html 

From tmoog at polhode.com  Fri Apr  4 10:19:10 2008
From: tmoog at polhode.com (Tom Moog)
Date: Fri, 4 Apr 2008 13:19:10 -0400 (EDT)
Subject: [antlr-interest] XML QName Character Validation
In-Reply-To: <315C9076-9A30-40FC-82A9-4DC92D5A0FAA@martin-probst.com>
References: <315C9076-9A30-40FC-82A9-4DC92D5A0FAA@martin-probst.com>
Message-ID: <Pine.NEB.4.64.0804041315490.10571@panix5.panix.com>



For NCName, I suggest you look only at the first character, then 
accept anything which is not a delimiter (e.g. ":", space, angle 
bracket, etc..  After the match, call a routine to check that the 
match is a valid name This has two advantages:

a. It allows you to use the same grammar for both xml 1.0 and
xml 1.1 names.

b. The error messages are much better.  Compare:

    The element tag "foo at bar" is not a valid NCName
vs.
    Unexpected character "@" ...



On Fri, 4 Apr 2008, Martin Probst wrote:

> Hi all,
>
> I'm making really nice progress with my XQuery grammar, thanks to the help of 
> Jim Idle and Ter's awesome LL(*) algorithm.
>
> I'm facing a single last problem: in XQuery, QNames play an important role. 
> QNames and keywords overlap, so it's a keyword-free grammar. The rules on 
> what makes a legal QName from the XML spec are quite complex in their 
> selection of Unicode characters, see here: 
> http://www.w3.org/TR/REC-xml/#NT-Letter
>
> If I naively translate that to ANTLR fragment rules, ANTLR fails to analyze 
> those rules:
> warning(205): XQuery.g:1:8: ANTLR could not analyze this decision in rule 
> Tokens; often this is because of recursive rule references visible from the 
> left edge of alternatives.  ANTLR will re-analyze the decision with a fixed 
> lookahead of k=1.  Consider using "options {k=1;}" for that decision and 
> possibly adding a syntactic predicate.
> error(10):  internal error: 
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1152): could not even 
> do k=1 for decision 24; reason: timed out (>1000ms)
>
> No blame here, those rules are probably better handled in a different way. 
> The question is: which different way? I tried taking those rules out into a 
> Java file called CharHelper, and having these rules:
>
> ... lots of tokens, snip ...
> UNION	:	'union';
> UNORDERED
> 		:	'unordered';
> ... snip ...
> QName	:	NCName (':' NCName)?;
> fragment NCName	:	NCNameStartChar NCNameChar*;
> fragment NCNameStartChar
> 		:	Letter | '_';
> fragment NCNameStartChar
> 		:	Letter | '_';
> fragment NCNameChar
> 		:	Letter | XMLDigit | '.' | '-' | '_' | CombiningChar | 
> Extender;
> fragment Letter
> 		:	{ CharHelper.isLetter(LA(1) }? =>  .;
> fragment BaseChar
> 		:	{ CharHelper.isBaseChar(LA(1) }? =>  .;
> fragment Ideographic			:	{ 
> CharHelper.isIdeographic(LA(1)) }? =>  .;
> fragment XMLDigit
> 		:	{ CharHelper.isXMLDigit(LA(1)) }? =>  .;
> fragment CombiningChar
> 		:	{ CharHelper.isCombiningChar(LA(1)) }? =>  .;
> fragment Extender
> 		:	{ CharHelper.isExtender(LA(1)) }? =>  .;
>
> But this makes ANTLR complain about ambiguities:
> warning(209): XQuery.g:319:1: Multiple token rules can match input such as 
> "'u'": UNION, UNORDERED, QName, Wildcard
> As a result, tokens(s) UNORDERED,QName,Wildcard were disabled for that input
>
> So apparently the lexical analysis is now behaving quite differently. Before 
> all this, I just specified NCName to be ('a'..'z' | 'A'..'Z')+ and it worked 
> like a charm. I somehow fail to see how (effectivly) changing that to 
> '\u0000'..'\uFFFE' with a gating predicate changes this to be ambiguous.
>
> Any ideas?
>
> BTW: I've implemented a nice technique of lexer switching based on parser 
> context. XQuery is a language who's lexical structure changes quite radically 
> between normal expressions and the embedded XML literals.
>
> This is somewhat similar to the example at 
> http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control. 
> However I don't need to switch the full parser, as my grammatical rules for 
> the whole language fit into one grammar - I just needed to change the way 
> tokens are generated by the lexer. I'm going to write up my technique as an 
> addendum to that page once it's done.
>
> I'd also like to make my grammar freely available on antlr.org once it's 
> done, if there is interest. Do I just send it to Ter, or how does that work?
>
> Thanks,
> Martin
>

From kenneth.domino at domemtech.com  Fri Apr  4 11:36:59 2008
From: kenneth.domino at domemtech.com (Kenneth Domino)
Date: Fri, 4 Apr 2008 14:36:59 -0400
Subject: [antlr-interest] FYI on how to build ANTLR (the "duplicate class:
	org.antlr.tool.ANTLRLexer" problem)
Message-ID: <1F1AE19AF1C2436A97A78449436B20E4@pc2008>

Hi all,

I've been trying to build ANTLR version 3 from the sources provided in
the intermediate build archive antlr-2008-03-13.12.tar.gz (see
http://www.antlr.org/download/build/) using Ant.  However, I was running
into the same type of problem presented three times previously but
never explained why or how to fix it.  The error produced
by the build would be caused by compiling duplicate files:
"duplicate class: org.antlr.tool.ANTLRLexer".  See:

http://www.antlr.org/pipermail/antlr-interest/2007-September/023639.html
and 
http://www.antlr.org/pipermail/antlr-interest/2007-October/024192.html
and 
http://www.antlr.org/pipermail/antlr-interest/2007-December/025377.html
and http://www.antlr.org/wiki/pages/viewpage.action?pageId=732
and associated threads.

Unfortunately, the intermediate build archives contain several
generated ".java" files that should not be there if you intend to
build ANTLR via Ant.  This happens because "java antlr.Tool" was
performed within the src/org/antlr/tool/ and src/org/codegen/
directories on several ".g" files in those directories.  At the same time,
the Ant build copies these grammar files to the directory "codegen/",
generating another copy of the parser/lexer/.... Thus, the build now
has duplicates.  Why does it copy the ".g" files to "codegen/"?
I'm not sure.

Ideally, either these output ".java" files should be removed prior to 
archiving,
or the generated java files generated in-situ with the rest of the source
code.  The build.xml file should be fixed to prevent us users from
hitting the same problem over and over again. There are other ".g" files,
but these appear to be ANTLR v3 input, and are not part of the
build yet.

(Also, the build.xml also seems to reference property ${antlr2.jar}
but never defines it.  It this correct?)

To fix this manually, try:

gzip -d antlr-2008-03-13.12.tar.gz
tar -xvf antlr-2008-03-13.12.tar
cd antlr-2008-03-13.12
ant clean
rm -f src/org/antlr/tool/ANTLRLexer.java
rm -f src/org/antlr/tool/ANTLRLexer.smap
rm -f src/org/antlr/tool/ANTLRParser.java
rm -f src/org/antlr/tool/ANTLRParser.smap
rm -f src/org/antlr/tool/ANTLRTokenTypes.java
rm -f src/org/antlr/tool/ANTLRTokenTypes.txt
rm -f src/org/antlr/tool/ANTLRTreePrinter.java
rm -f src/org/antlr/tool/ANTLRTreePrinter.smap
rm -f src/org/antlr/tool/ANTLRTreePrinterTokenTypes.java
rm -f src/org/antlr/tool/ANTLRTreePrinterTokenTypes.txt
rm -f src/org/antlr/tool/AssignTokenTypesWalker.java
rm -f src/org/antlr/tool/AssignTokenTypesWalker.smap
rm -f src/org/antlr/tool/AssignTokenTypesWalkerTokenTypes.java
rm -f src/org/antlr/tool/AssignTokenTypesWalkerTokenTypes.txt
rm -f src/org/antlr/tool/DefineGrammarItemsWalker.java
rm -f src/org/antlr/tool/DefineGrammarItemsWalker.smap
rm -f src/org/antlr/tool/DefineGrammarItemsWalkerTokenTypes.java
rm -f src/org/antlr/tool/DefineGrammarItemsWalkerTokenTypes.txt
rm -f src/org/antlr/tool/TreeToNFAConverter.java
rm -f src/org/antlr/tool/TreeToNFAConverter.smap
rm -f src/org/antlr/tool/TreeToNFAConverterTokenTypes.java
rm -f src/org/antlr/tool/TreeToNFAConverterTokenTypes.txt
rm -f src/org/antlr/codegen/CodeGenTreeWalker.java
rm -f src/org/antlr/codegen/CodeGenTreeWalker.smap
rm -f src/org/antlr/codegen/CodeGenTreeWalkerTokenTypes.java
rm -f src/org/antlr/codegen/CodeGenTreeWalkerTokenTypes.txt

If you don't have junit, then remove the test subdirectory as well,
because the build file does not test this dependency:

rm -rf src/org/antlr/test/

Also, setting classpath is unnecessary, at least for the build,
because the build file sets classpath explicitly to include jar files
in directory "lib/".

Ken Domino


From parrt at cs.usfca.edu  Fri Apr  4 12:29:49 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Apr 2008 12:29:49 -0700
Subject: [antlr-interest] Noob TreeWalker Template question
In-Reply-To: <OF3FA47429.56C789F3-ON80257421.00484EA5-80257421.004A71E7@decaresystems.ie>
References: <OF3FA47429.56C789F3-ON80257421.00484EA5-80257421.004A71E7@decaresystems.ie>
Message-ID: <4A36C6A6-12B1-4424-80E6-A605BC4C5AF9@cs.usfca.edu>

Hi. the return structs are really internal use.  you have to manually  
add the elements to a list if you want the return values other than  
template.
Ter
On Apr 4, 2008, at 6:33 AM, PSheehan at decaresystems.ie wrote:

>
> Hi all,
> I'm completely new to Antlr with no previous complier/parser  
> experience.  I'm create a simple lexer/parser and treewalker to help  
> me understand the ins and outs of Antlr.  I also have the Antlr  
> reference book, which I would be completely lost without!
>
> I'm having a simple problem when trying to process a rule that does  
> not have a template associated with it.  When I run my example I get  
> an ArrayList of nulls for 'fields'.
>
> options{
>        tokenVocab=mytest;
>         ASTLabelType=CommonTree;
>         output=template;
> }
>
> model        :       ^(MODEL TYPE fs+=fielddef+) ->  
> modeltmp(name={$TYPE},fields={$fs})
>         ;
>
> fielddef returns [String type,String id]
>         :       ^(FIELD TYPE ID) {$type=$TYPE.text;$id=$ID.text;}
>         ;
>
>
> When I look at the generate code it is like this
>
>                         fs=fielddef();
>                         _fsp--;
>
>                         if (list_fs==null) list_fs=new ArrayList();
>                         list_fs.add(fs.getTemplate());
>
> Sorry if this is a simple question but is there a way I can modify  
> the  grammar so that I end up with an ArrayList of return_fielddef  
> like so:-
>
>                         fs=fielddef();
>                         _fsp--;
>
>                         if (list_fs==null) list_fs=new ArrayList();
>                         list_fs.add(fs);
>
> Or do have I have to use scopes in my grammar to deal with this  
> problem.
> Thanks,
> Paul
> This e-mail and any files transmitted with it are intended solely  
> for the individual or entity to whom they are addressed. This  
> communication may contain material that is privileged, confidential  
> and protected from disclosure under the law. If you are not the  
> intended recipient, any disclosure, distribution, copying, or use of  
> this information is strictly prohibited and may be unlawful.
>
> If you have received this e-mail in error, please reply immediately  
> to the sender and delete it.
>
> Registered Address:
> DeCare Systems Ireland Ltd,
> Building 1, University Technology Centre, Curraheen Road, Cork,  
> Ireland.
> Company Registration Number:  278462

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/a4aeb28a/attachment.html 

From antlr at mirality.co.nz  Fri Apr  4 12:39:07 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 05 Apr 2008 08:39:07 +1300
Subject: [antlr-interest] This is driving me crazy .. please help !
In-Reply-To: <7196ed5b0804040701u4845ade2p2b02e0558861dcc4@mail.gmail.co
 m>
References: <7196ed5b0804040701u4845ade2p2b02e0558861dcc4@mail.gmail.com>
Message-ID: <20080404193920.CA3F911EC43@www.antlr.org>

At 03:01 5/04/2008, Ymo wrote:
>I already have file defined i dont understand why the parser 
>still cant see this rule !

The first thing you should do is to write a test harness for the 
lexer alone; feed it some sample input and verify that it's 
producing the tokens you want it to.  I suspect that this is where 
your trouble lies.

Also:

>elementBlock //returns [AstElementBlock aeb]
>    :  RG textBlock LG?
>    ;
[...]
>LG  : '\u00AB';
>fragment
>RG: '\u00BB';

RG is a fragment, so you can't refer to it from a parser rule -- 
it will never match.

>TextBlock //returns [AstTextBlock atb]
>    :  ~(LG)*
>    ;

It's a very bad idea to have a lexer rule that is permitted to 
match zero characters of input.  Change this to:

TextBlock
     :  (~LG)+
     ;


From antlr at mirality.co.nz  Fri Apr  4 12:41:46 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 05 Apr 2008 08:41:46 +1300
Subject: [antlr-interest] Need help regarding parser
In-Reply-To: <154902370804040815n3a0e32a2n1ebfbdff85dce72f@mail.gmail.co
 m>
References: <154902370804040815n3a0e32a2n1ebfbdff85dce72f@mail.gmail.com>
Message-ID: <20080404194158.138C011ECA3@www.antlr.org>

At 04:15 5/04/2008, elango m wrote:
>In our parser we used to convert the following expression
>NOT VAR1 = VAR2
>to
>NOT ( VAR1 = VAR2 )
>while parsing (since the earlier one is wrong).
>
>Now I want to do this with ANTLR. How do I do that?

Probably the easiest way to do it is to wait until you've 
generated the full AST and then scan it for erroneous constructs 
like the above and replace them with the correct versions.  After 
all, it's still valid syntax, it's the semantics that are wrong.


From snyder at t-vec.com  Fri Apr  4 12:54:44 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Fri, 4 Apr 2008 15:54:44 -0400
Subject: [antlr-interest] How can I create a tree node if a rule is not
	matched
Message-ID: <006401c8968d$bb94deb0$265d080a@Gizmo>

Hello,

 

I have the rules below. When an "ifStatement" is found I want to create an
empty "NODE_ELSE" node when there are no "elseStatement" rule matches. I was
looking to do this so that in my tree walker I will always process a
NODE_ELSE assuming a NODE_IF was found. I can think of a couple of things to
try but I'm guessing there is probably a simple shortcut someone has already
run into.

 

Thanks,

Chris

 

//rule excerpt

ifStatement

      : IF expression (SEMI|COMMA)? (statement+ (COMMA)?)?
(elseIfStatement)* elseStatement? END SEMI? -> ^(NODE_IF expression
statement* elseIfStatement* elseStatement?)

      ;

 

elseIfStatement

      : ELSEIF expression (SEMI|COMMA)? (statement+ (COMMA)?)? ->
^(NODE_ELSE_IF expression statement*)

      ;

 

elseStatement

      : ELSE (SEMI|COMMA)? statement* -> ^(NODE_ELSE statement*)

      ;

 

 

 

 

T-VEC Technologies, Inc.

P.O. Box 8572

Delray Beach, FL 33482

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/e0bb6853/attachment.html 

From antlr at zavalon.com  Fri Apr  4 13:05:04 2008
From: antlr at zavalon.com (Nev)
Date: Sat, 5 Apr 2008 07:05:04 +1100
Subject: [antlr-interest] How can I create a tree node if a rule is
	notmatched
In-Reply-To: <006401c8968d$bb94deb0$265d080a@Gizmo>
Message-ID: <6pjumm$28e7ei@ipmail01.adl6.internode.on.net>

You could try,

1.	remove the "?" after elseStatement
2.	add empty alt in the elseStatement

 

elseStatement

      : ELSE (SEMI|COMMA)? statement* -> ^(NODE_ELSE statement*)

      | -> ^(NODE_ELSE)

      ;

 

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Saturday, 5 April 2008 6:55 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How can I create a tree node if a rule is
notmatched

 

Hello,

 

I have the rules below. When an "ifStatement" is found I want to create an
empty "NODE_ELSE" node when there are no "elseStatement" rule matches. I was
looking to do this so that in my tree walker I will always process a
NODE_ELSE assuming a NODE_IF was found. I can think of a couple of things to
try but I'm guessing there is probably a simple shortcut someone has already
run into.

 

Thanks,

Chris

 

//rule excerpt

ifStatement

      : IF expression (SEMI|COMMA)? (statement+ (COMMA)?)?
(elseIfStatement)* elseStatement? END SEMI? -> ^(NODE_IF expression
statement* elseIfStatement* elseStatement?)

      ;

 

elseIfStatement

      : ELSEIF expression (SEMI|COMMA)? (statement+ (COMMA)?)? ->
^(NODE_ELSE_IF expression statement*)

      ;

 

elseStatement

      : ELSE (SEMI|COMMA)? statement* -> ^(NODE_ELSE statement*)

      ;

 

 

 

 

T-VEC Technologies, Inc.

P.O. Box 8572

Delray Beach, FL 33482

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080405/8d222175/attachment-0001.html 

From snyder at t-vec.com  Fri Apr  4 13:08:42 2008
From: snyder at t-vec.com (Chris Snyder)
Date: Fri, 4 Apr 2008 16:08:42 -0400
Subject: [antlr-interest] How can I create a tree node if a rule is
	notmatched
In-Reply-To: <006401c8968d$bb94deb0$265d080a@Gizmo>
References: <006401c8968d$bb94deb0$265d080a@Gizmo>
Message-ID: <007001c8968f$aee91620$265d080a@Gizmo>

Much easier then I though

 

ifStatement

      : IF expression (SEMI|COMMA)? (statement+ (COMMA)?)?
(elseIfStatement)* 

        (

        (elseStatement END SEMI?) -> ^(NODE_IF expression statement*
elseIfStatement* elseStatement)

        | (END SEMI?) -> ^(NODE_IF expression statement* elseIfStatement*
^(NODE_ELSE ))

        )

      ;

 

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Chris Snyder
Sent: Friday, April 04, 2008 3:55 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How can I create a tree node if a rule is
notmatched

 

Hello,

 

I have the rules below. When an "ifStatement" is found I want to create an
empty "NODE_ELSE" node when there are no "elseStatement" rule matches. I was
looking to do this so that in my tree walker I will always process a
NODE_ELSE assuming a NODE_IF was found. I can think of a couple of things to
try but I'm guessing there is probably a simple shortcut someone has already
run into.

 

Thanks,

Chris

 

//rule excerpt

ifStatement

      : IF expression (SEMI|COMMA)? (statement+ (COMMA)?)?
(elseIfStatement)* elseStatement? END SEMI? -> ^(NODE_IF expression
statement* elseIfStatement* elseStatement?)

      ;

 

elseIfStatement

      : ELSEIF expression (SEMI|COMMA)? (statement+ (COMMA)?)? ->
^(NODE_ELSE_IF expression statement*)

      ;

 

elseStatement

      : ELSE (SEMI|COMMA)? statement* -> ^(NODE_ELSE statement*)

      ;

 

 

 

 

T-VEC Technologies, Inc.

P.O. Box 8572

Delray Beach, FL 33482

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/6a5ff633/attachment.html 

From markobarko at gmail.com  Fri Apr  4 13:31:13 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Fri, 04 Apr 2008 16:31:13 -0400
Subject: [antlr-interest] Rookie problem
In-Reply-To: <47f5df9e.0622300a.4e25.ffffabd7SMTPIN_ADDED@mx.google.com>
References: <1207233309.6403.29.camel@main> <1207234820.6403.31.camel@main>
	<47f5df9e.0622300a.4e25.ffffabd7SMTPIN_ADDED@mx.google.com>
Message-ID: <1207341073.7140.10.camel@main>

wow...thanks a lot Gavin. Not only did that solve my problem but it also
gave me a lot more understanding of how this whole thing works.

Thanks to everyone else as well. this mailing list is great.
Marko

-----Original Message-----
From: Gavin Lambert <antlr at mirality.co.nz>
To: Marko Simovic <markobarko at gmail.com>, antlr-interest at antlr.org
Subject: Re: [antlr-interest] Rookie problem
Date: Fri, 04 Apr 2008 20:58:11 +1300


At 04:00 4/04/2008, Marko Simovic wrote:
>The grammar at the end of this e-mail works fine for variable 
>names without spaces. If i change the 'name' definition to the 
>following:
>
>name: String (' ' String)*;
>
>then the 'if' statement can no longer be recognized. What am i 
>doing wrong?

If that was a complete grammar, then you're missing a whitespace 
rule.  If a character (such as whitespace) isn't referred to by 
any lexer rule then ANTLR will by default output an error and then 
drop the character and move on, which is why your 'if' rule would 
have been "working" originally.

As soon as you add the space to the 'name' rule, space becomes a 
valid input character and it will start generating space tokens, 
which means that for the input "if foo then bar" you'll now get 
'if',' ','foo',' ','then',' ','bar' instead of 
'if',(error),'foo',(error),'then',(error),'bar'.  And since your 
'selection' rule doesn't match spaces, it won't be able to match 
any more.

The normal solution is to add a WS rule and make it hidden; 
however if you do that then no WS tokens will be visible to the 
parser so your 'name' rule won't be able to match spaces 
anyway.  But you shouldn't need to explicitly specify a space, 
assuming that any amount of whitespace is permitted between the 
words in your multi-word names; the simple fact that multiple 
tokens were generated proves that there was something that broke 
the tokens up.

This is just off the cuff (I haven't tested it), but something 
like this ought to work:

grammar test;

String : ('a'..'z' | 'A'..'Z')+;

ConditionOperator : '<' | '>';

WS : (' ' | '\r' | '\n')+ { $channel = HIDDEN; };

name : String+;

condition : name (ConditionOperator name)*;

selection : 'if' condition 'then' condition;

statement : selection;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/a985f835/attachment.html 

From lefevrol at yahoo.com  Fri Apr  4 14:02:54 2008
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 04 Apr 2008 23:02:54 +0200
Subject: [antlr-interest] python grammar(s)
In-Reply-To: <47F4B7CE.40407@gmx.de>
References: <47F4592B.8030304@gmx.net> <47F4B7CE.40407@gmx.de>
Message-ID: <ft6522$s0s$1@ger.gmane.org>

Johannes Luber wrote:
> My theory is that the ANTLR python grammars are supersets over the 
> specification on python.org. Such grammar definitions tend to include 
> semantic limitations, which could be included in BNF form, but make it 
> more difficult to create good error diagnostics from. The solution is 
> then to do a second pass which filters the wrong semantics out.

I also find that's can be a good idea to deliberately "widen" the syntax so 
as to "bless" errors that come up frequently (say, commas between array 
literal items when your language mandates spaces instead), letting them 
flow unimpeded through the parser, and then strike them down in a second 
pass on the AST. The reason is that it is easier to emit customized error 
messages in that second pass, where _you_ do all the checking, than it is 
to massage the rather obscure syntactic error messages you'd be getting 
from ANTLR otherwise.

-- O.L.


From antlr at mirality.co.nz  Fri Apr  4 14:34:12 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 05 Apr 2008 10:34:12 +1300
Subject: [antlr-interest] This is driving me crazy .. please help !
In-Reply-To: <7196ed5b0804041420j3676678fxa3e6778c200fa2@mail.gmail.com>
References: <7196ed5b0804040701u4845ade2p2b02e0558861dcc4@mail.gmail.com>
	<47f683e9.01bb420a.1313.0132SMTPIN_ADDED@mx.google.com>
	<7196ed5b0804041420j3676678fxa3e6778c200fa2@mail.gmail.com>
Message-ID: <20080404213442.17D3E11EC50@www.antlr.org>

At 10:20 5/04/2008, Ymo wrote:
>Can you explain how this would be done ? So far i have been using 
>antlrworks. But as soon as i started putting in my own AST in ( 
>like calling my own functions from the parser) antlrworks cannot 
>grok it. Is there a different way to see all the tokens the lexer 
>is seing  beside using antlrworks ?

ANTLRworks can't help you with lexer trouble at all.  You need to 
write a test harness in your target language; either something 
simple that just creates a lexer and token stream and dumps all 
the tokens to the screen, or something that uses a unit testing 
framework such as JUnit, NUnit, or CppUnit.  Another option is to 
try using gUnit, but I'm not sure how far along that is.


From parrt at cs.usfca.edu  Fri Apr  4 15:43:58 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 4 Apr 2008 15:43:58 -0700
Subject: [antlr-interest] ignoring auto template construction for now
Message-ID: <D27F2614-0615-4CF5-8183-DB57C522FDD7@cs.usfca.edu>

Hi. decided it's too hard to get a perfect solution in short order.  i  
easily added auto temp construction but got stuck thinking about  
efficiency and hidden channel stuff.

For now, i realized I can just add this to rules that must return the  
text by default, which suits my purposes with output=template and  
rewrite=true at moment:

@after {
if ( $st==null ) {
	StringTemplate t = %{"<element>"};
	%t.element = $text;
	$st = t;
}
}

Ter

From lgcraymer at yahoo.com  Fri Apr  4 17:37:08 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 4 Apr 2008 17:37:08 -0700 (PDT)
Subject: [antlr-interest] ignoring auto template construction for now
Message-ID: <591641.71215.qm@web55905.mail.re3.yahoo.com>

Ter--

The solution I implemented in Yggdrasil depends on a few key insights:

1.)   ST output provides real visibility into the input stream (or anidealized, user-friendly. tweaked version of the input stream), and that visibility can be provided to development tools to provide RAD support, not just pretty output but pretty output that makes the tools more usable.
2.)  The ST structuring mechanism is via named slots and is fundamentally different from the tree structuring mechanisms which determine order in an output "stream".
3.)  The proper view for AST versus ST output is not  "either/or" but "and/or".  The printing of intermediate forms should not require a grammar dedicated to template output:  that just prolongs the development process.  Oddly enough, I think that this is the fundamental insight--none of the possibilities I explored "felt right" until I got here.
4.) Heavy duty rearrangement of the input stream should be done through trees; a minimalist syntax for ST support is sufficient.  The first class attributes in Yggdrasil can support major rewrites of template outputs, but I consider that fortuitous; the real benefits are visualization and a more rapid development cycle.

Efficiency is achieved through code generation flags--either the ST generation support is included in the target code generated from a grammar or not.

Cheers!

--Loring



----- Original Message ----
From: Terence Parr <parrt at cs.usfca.edu>
To: antlr-interest Interest <antlr-interest at antlr.org>
Cc: antlr-dev list <antlr-dev at antlr.org>
Sent: Friday, April 4, 2008 3:43:58 PM
Subject: [antlr-interest] ignoring auto template construction for now

Hi. decided it's too hard to get a perfect solution in short order.  i  
easily added auto temp construction but got stuck thinking about  
efficiency and hidden channel stuff.

For now, i realized I can just add this to rules that must return the  
text by default, which suits my purposes with output=template and  
rewrite=true at moment:

@after {
if ( $st==null ) {
    StringTemplate t = %{"<element>"};
    %t.element = $text;
    $st = t;
}
}

Ter






      ____________________________________________________________________________________
You rock. That's why Blockbuster's offering you one month of Blockbuster Total Access, No Cost.  
http://tc.deals.yahoo.com/tc/blockbuster/text5.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080404/69fe5fd6/attachment.html 

From mobisuxsux at gmail.com  Sat Apr  5 05:12:55 2008
From: mobisuxsux at gmail.com (mobi sux)
Date: Sat, 5 Apr 2008 14:12:55 +0200
Subject: [antlr-interest] ANTLR error
Message-ID: <9588fd9a0804050512y477da69dheaaa3cd5612a4b08@mail.gmail.com>

HI!

I'm doing an exercise on antlr. An it works on different computers,
but when i try it on my computer it doesn't. So i don't know what is
wrong.

I keep getting an error: http://shrani.si/f/2Z/JM/sLDMu6K/error.jpg
I tried differend prgrams and they all put out this error.

What should i do?
Please help.

Thanks in advance!

From ad_cooney at hotmail.com  Sat Apr  5 10:47:46 2008
From: ad_cooney at hotmail.com (Adam Cooney)
Date: Sat, 5 Apr 2008 18:47:46 +0100
Subject: [antlr-interest] Java AST Grammar
In-Reply-To: <E64A7366-B429-4F39-AE5D-46AF7C390E32@jacelridge.com>
References: <BLU124-W179B921BAEC05CFFFAC07484100@phx.gbl>
	<E64A7366-B429-4F39-AE5D-46AF7C390E32@jacelridge.com>
Message-ID: <BLU124-W6947D0F655606DB0B35C584F10@phx.gbl>


Hi John (or to anyone else who mgiht have it),
  I was wondering if you had finished or have an updated version of the JavaAST you gave me sometime ago? I'm currently working on an output for a program that compares files via ASTs and would be very grateful if I could use an updated version of the grammar to further test my work :)
 
Thanks in advance
Adam
_________________________________________________________________
Get Hotmail on your mobile. Text MSN to 63463 now!
http://mobile.uk.msn.com/pc/mail.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080405/b99a81cc/attachment.html 

From belayda at gmail.com  Sat Apr  5 13:14:45 2008
From: belayda at gmail.com (Bernardo Elayda)
Date: Sat, 5 Apr 2008 13:14:45 -0700
Subject: [antlr-interest] Can ANTLR traverse an AST postorder?
Message-ID: <3e5ed32f0804051314x3ca31045n279258d338a95a6d@mail.gmail.com>

Hi,

I'm using Antlr 3 and StringTemplate 3 to generate code for a language that
doesn't use a stack.

So, there are lots of temporary variables.  It seems like Antlr is
hard-coded to perform only a preorder traversal(NLR) if an AST.  I need to
perform a postorder traversal(LRN).

Is there an option I can use to perform a postorder traversal of an AST?
I'm hoping I missed something and there is an option to do this.

thx in advance!
-Bernardo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080405/1770af3f/attachment.html 

From antlr at mirality.co.nz  Sat Apr  5 15:39:22 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 06 Apr 2008 10:39:22 +1200
Subject: [antlr-interest] ANTLR error
In-Reply-To: <9588fd9a0804050512y477da69dheaaa3cd5612a4b08@mail.gmail.co
 m>
References: <9588fd9a0804050512y477da69dheaaa3cd5612a4b08@mail.gmail.com>
Message-ID: <20080405223937.35C6611EC75@www.antlr.org>

At 00:12 6/04/2008, mobi sux wrote:
 >I'm doing an exercise on antlr. An it works on different
 >computers, but when i try it on my computer it doesn't. So
 >i don't know what is wrong.

Well, clearly you've got an unexpected backslash character.  So 
we'd probably need to see the grammar you're trying to compile in 
order to help.

One other possibility, if it's really only failing on one 
computer: maybe the ANSI codepage (aka the "Language for 
Non-Unicode Programs" in the Languages control panel) is 
different, and confusing it?


From john at jacelridge.com  Sat Apr  5 19:04:20 2008
From: john at jacelridge.com (John Ridgway)
Date: Sat, 5 Apr 2008 22:04:20 -0400
Subject: [antlr-interest] Lexing question
Message-ID: <E120AAF0-92F8-4246-96A7-6C2583F62BE8@jacelridge.com>

So I'm parsing Java and the JLS has some interesting rules about  
tokens.  Specifically a Java identifier begins with a "JavaLetter"  
followed by zero or more "JavaLetterOrDigit"s.

A "JavaLetter" is a character for which the method  
Character.isJavaIdentifierStart(int) returns true.  A  
"JavaLetterOrDigit" is a character for which the method  
Character.isJavaIdentifierPart(int) returns true.  How do I specify  
that in ANTLR (v3)?

Peace
- John

From antlr at mirality.co.nz  Sat Apr  5 20:34:54 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 06 Apr 2008 15:34:54 +1200
Subject: [antlr-interest] Lexing question
In-Reply-To: <E120AAF0-92F8-4246-96A7-6C2583F62BE8@jacelridge.com>
References: <E120AAF0-92F8-4246-96A7-6C2583F62BE8@jacelridge.com>
Message-ID: <20080406033504.E8CF411E9D6@www.antlr.org>

At 13:04 6/04/2008, John Ridgway wrote:
 >A "JavaLetter" is a character for which the method
 >Character.isJavaIdentifierStart(int) returns true.  A
 >"JavaLetterOrDigit" is a character for which the method
 >Character.isJavaIdentifierPart(int) returns true.  How
 >do I specify that in ANTLR (v3)?

Well, you *could* do it via a gated semantic predicate:

fragment JavaLetter
   : { Character.isJavaIdentifierStart(input.LA(1)) }? => .
   ;
fragment JavaLetterOrDigit
   : { Character.isJavaIdentifierPart(input.LA(1)) }? => .
   ;

However doing this will mean that the interpreter will no longer 
work (since that can't execute target language blocks), and can 
limit the things ANTLR can do with the generated code.  It's 
usually better to explicitly spell out the characters you mean 
within ANTLR itself rather than calling a target language function 
to make the decisions, wherever possible.


From th30dan at gmail.com  Sun Apr  6 00:31:26 2008
From: th30dan at gmail.com (Dan)
Date: Sun, 6 Apr 2008 02:31:26 -0500
Subject: [antlr-interest] Can't figure out the ambiguity leading to this
	unreachable token def
Message-ID: <398064110804060031w1175d2fcta30c52c28b0fb629@mail.gmail.com>

Hello all.

I've come close to tearing my hair out.  This seems like a simple problem,
but I can't figure out what the issue is.  I've even thoroughly perused the
"Ambiguities and Nondeterminisms" section of a friend's copy of "The
Definitive ANTLR Reference".  But none of the described ambiguities or
nondeterminisms seems to cover this simple case.

Here's my small test grammar:

=======================
grammar Test;

expr: '@' NAME '=' '\'' VALUE '\'';

NAME: ('a'..'z' | 'A'..'Z' | '0'..'9')+;

VALUE: ('a'..'z' | 'A'..'Z')+;
=======================

When I compile it on the command line, I get the following warning:

=======================
warning(208): Test.g:11:1: The following token definitions are unreachable:
VALUE
=======================

Then, when I try debugging it in ANTLRWorks v1.1.7 on this input:

=======================
@blah='hi'
=======================

I get the following error:

=======================
recoverFromMismatchedToken
BR.recoverFromMismatchedToken
line 1:7 mismatched input 'hi' expecting VALUE

=======================

Any help would be greatly appreciated.

Thanks,
-Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/3c4e8b42/attachment.html 

From nopik at data.pl  Sun Apr  6 01:06:29 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Sun, 06 Apr 2008 10:06:29 +0200
Subject: [antlr-interest] Can't figure out the ambiguity leading to this
 unreachable token def
In-Reply-To: <398064110804060031w1175d2fcta30c52c28b0fb629@mail.gmail.com>
References: <398064110804060031w1175d2fcta30c52c28b0fb629@mail.gmail.com>
Message-ID: <47F88485.7070407@data.pl>

Hello,

Dan wrote:
> NAME: ('a'..'z' | 'A'..'Z' | '0'..'9')+;
>
> VALUE: ('a'..'z' | 'A'..'Z')+;

If lexer will see 'hi' in the input, it should produce NAME or VALUE?
This is the ambiguity, so ANTLR disabled second alternative (VALUE), 
leaving only NAME. I think that if you would look into generated source 
code, you would confirm that.

--
Best regards from
Kamil Burzynski

From th30dan at gmail.com  Sun Apr  6 01:18:53 2008
From: th30dan at gmail.com (Dan)
Date: Sun, 6 Apr 2008 03:18:53 -0500
Subject: [antlr-interest] Can't figure out the ambiguity leading to this
	unreachable token def
In-Reply-To: <47F88485.7070407@data.pl>
References: <398064110804060031w1175d2fcta30c52c28b0fb629@mail.gmail.com>
	<47F88485.7070407@data.pl>
Message-ID: <398064110804060118w5a20ef82pe72cf68db6d251ee@mail.gmail.com>

Thanks Kamil.

But when you look at my grammar, doesn't the "expr" rule make it clear that
only the "VALUE" rule can match what's inside the single quotes?

Why do the lexer rules seem to ignore this obvious clarity provided by the
parser rule, and consider the grammar ambiguous?

-Dan


On Sun, Apr 6, 2008 at 3:06 AM, Kamil Burzynski <nopik at data.pl> wrote:

> Hello,
>
> Dan wrote:
>
> > NAME: ('a'..'z' | 'A'..'Z' | '0'..'9')+;
> >
> > VALUE: ('a'..'z' | 'A'..'Z')+;
> >
>
> If lexer will see 'hi' in the input, it should produce NAME or VALUE?
> This is the ambiguity, so ANTLR disabled second alternative (VALUE),
> leaving only NAME. I think that if you would look into generated source
> code, you would confirm that.
>
> --
> Best regards from
> Kamil Burzynski
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/16a7c658/attachment.html 

From nopik at data.pl  Sun Apr  6 01:33:44 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Sun, 06 Apr 2008 10:33:44 +0200
Subject: [antlr-interest] Can't figure out the ambiguity leading to this
 unreachable token def
In-Reply-To: <398064110804060117r4b5113f1u7179951c16fb368b@mail.gmail.com>
References: <398064110804060031w1175d2fcta30c52c28b0fb629@mail.gmail.com>	
	<47F88485.7070407@data.pl>
	<398064110804060117r4b5113f1u7179951c16fb368b@mail.gmail.com>
Message-ID: <47F88AE8.70604@data.pl>

Hello Dan,

Dan wrote:
> Thanks Kamil.
> But when you look at my grammar, doesn't the "expr" rule make it clear
> that only the "VALUE" rule can match what's inside the single quotes?

Lexer do not look at expr rule. expr is parser rule. In general it works 
like this:

- in case of parser/lexer combined grammar (like your) rule with name 
beginning with small letter is parser rule, while capital letter at 
beginning of rule name indicates lexer rule.

- so, you have expr parser rule and NAME/VALUE lexer rules

- the first thing your generated code does is just to split input 
characters into tokens, using lexer rules. Parser rules will be later 
used to process resulting token stream.

- lexer therefore is not aware of context - it just matches characters,
so such definition of NAME and VALUE is ambiguous for it.

I suggest rewriting VALUE to :

VALUE = '\'' ('a'..'z' | 'A'..'Z')+ '\''

and remove ' from expr.

--
Best regards from
Kamil Burzynski

From nopik at data.pl  Sun Apr  6 01:41:21 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Sun, 06 Apr 2008 10:41:21 +0200
Subject: [antlr-interest] Problem with C target output
In-Reply-To: <44f314c218b0374183c034d93f3990b3@temporal-wave.com>
References: <44f314c218b0374183c034d93f3990b3@temporal-wave.com>
Message-ID: <47F88CB1.50206@data.pl>

Jim,

  It seems, that start and stop fields in ANTLR3_COMMON_TOKEN_struct are 
not just plain offsets since beginning, but they are pointers?
Therefore if you need offset you need something like $foo.start - 
$foo.input.data ? Also, this influences error messages being produced by 
your target: while in Java the same error produces nice offset in the 
error message, C target does print some pointer value, which is 
unreadable.. Can we fix it in the next version?

Excuse me for no example (as I have none handy at the moment). If my 
description above is too messy and you will need example, I'll try to 
get one for you.

-- 
Best regards from
Kamil Burzynski

From christian.schladetsch at gmail.com  Sun Apr  6 02:44:32 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sun, 6 Apr 2008 21:44:32 +1200
Subject: [antlr-interest] Simple C++ Support
Message-ID: <6442c4ae0804060244m467ee0fdr82795b8805fc425b@mail.gmail.com>

Hello [Jim],

There is a very simple way to allow C++ support via your C target (for ANTLR
3.1b). All that has to happen is that the StringTemplate that generates the
FooParser.c from Foo.g3pl generates:

/* End of Header action.
 *
=============================================================================
 */
/* -----------------------------------------
 * Include the ANTLR3 generated header file.
 */
extern "C"
{
#include    "FooParser.h"
}

/* ----------------------------------------- */

That is, wrap the header include with extern "C", set the generated file to
build using C++ and away you go. I have tried this and it works, but I have
not changed the template as I only started using ANTLR today. Of course, it
would be nice if you could specify the generated file to have a .cpp
extension (or .cxx or .C).

Could this make it into a build soon? It is a trivial change and yet would
allow us to use C++ code in actions and predicates for parser and trees
which would be great for those of us that are writing C++ systems.

Regards,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/96b753ae/attachment-0001.html 

From nopik at data.pl  Sun Apr  6 02:50:51 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Sun, 06 Apr 2008 11:50:51 +0200
Subject: [antlr-interest] Simple C++ Support
In-Reply-To: <6442c4ae0804060244m467ee0fdr82795b8805fc425b@mail.gmail.com>
References: <6442c4ae0804060244m467ee0fdr82795b8805fc425b@mail.gmail.com>
Message-ID: <47F89CFB.5030407@data.pl>

Christian Schladetsch wrote:
> There is a very simple way to allow C++ support via your C target (for
> ANTLR 3.1b). All that has to happen is that the StringTemplate that
> generates the FooParser.c from Foo.g3pl generates:
>
> extern "C"
> {
> #include "FooParser.h"
> }

Well, I'm using C target as C++ without any problems. Also, extern 
clause is not necessary, as long you compile FooParser.c as C++. Under 
linux, simple g++ command does the trick. The syntax of C API is still 
very ugly, though ;p

-- 
Best regards from
Kamil Burzynski

From mortench2004 at yahoo.dk  Sun Apr  6 02:58:21 2008
From: mortench2004 at yahoo.dk (M C)
Date: Sun, 6 Apr 2008 09:58:21 +0000 (GMT)
Subject: [antlr-interest] Ruby code backend for antlr3  ?
In-Reply-To: <mailman.6671.1207475076.2535.antlr-interest@antlr.org>
Message-ID: <845625.5019.qm@web25603.mail.ukl.yahoo.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/25cdb6d3/attachment.html 

From chris at lambrou.net  Sun Apr  6 04:11:43 2008
From: chris at lambrou.net (Chris Lambrou)
Date: Sun, 6 Apr 2008 12:11:43 +0100
Subject: [antlr-interest] JavaScript grammar
In-Reply-To: <70bbae280804020944s609a6c9y4f29cfe0a3f368ff@mail.gmail.com>
References: <70bbae280803281313i70fb25d1hbd758ac5e1049ad2@mail.gmail.com>
	<BAYC1-PASMTP04A88DA32D362FF409C90DF5FB0@CEZ.ICE>
	<70bbae280803292243k2d575d3et4b67945a013e03dc@mail.gmail.com>
	<C3525AF49F7D374D8E4D3C46ED4BC6211685DD@srvxdcex.xebic.com>
	<70bbae280804010741m62f0bfdh41111ad913084d2@mail.gmail.com>
	<20080401152056.GA7213@badgers-in-foil.co.uk>
	<70bbae280804020944s609a6c9y4f29cfe0a3f368ff@mail.gmail.com>
Message-ID: <70bbae280804060411w642d3d4bub35b59cf0e74d356@mail.gmail.com>

The spec is aware of the ambiguity (start of section 7). Since compliant
parsers aren't required to deal with the problem, advice to script writers
is to avoid any confusion by enclosing any such problem literals in
parentheses. Unless anyone is looking to write a really water-tight script
parser, I think the regular expression literal problem can be ignored, for
the most part.

Chris

On 02/04/2008, Chris Lambrou <chris at lambrou.net> wrote:
>
> Ah, I see the problem now. Having re-read the spec, I think one implied
> solution is to incorporate the parsing of RE literals as part of the parsing
> of the entire script, rather than as tokens. On the other hand, it does also
> explicitly suggest enclosing RE literals in parentheses to avoid parsing
> ambiguities, though this isn't mandatory (i.e. a compliant parser needs to
> deal with ambiguities).
>
> I'm not sure where that leaves me... I'll probably have a stab at
> including rules to fully parse RE literals.
>
> Chris
>
>
> P.S. On a side note, I'm finding that every time I go back through the
> spec, lots of edge cases start to creep out of the woodwork. For example,
> /*...*/ style comments that contain line-terminators should be treated as
> line-terminator tokens, whilst those that don't should be treated like
> white-space. The further I delve into this, the more I think that allowing
> semicolon statement terminators to be optional was a poor choice on the part
> of the spec designers. It just leads to unnecessary complication.
>
>
>
> On 01/04/2008, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> >
> > On Tue, Apr 01, 2008 at 03:41:27PM +0100, Chris Lambrou wrote:
> >
> > > As for regular expression literals, I'm
> > > inclined to simply treat them as separate Regex tokens without any
> > further
> > > treatment, and leave their analysis to a separate grammar.
> > Interestingly
> > > enough, whilst the ECMAScript spec has a whole section on the
> > composition of
> > > regular expression literals, it doesn't appear to incorporate them
> > into the
> > > rest of the grammar - not that I could see, anyway. I think they can
> > be
> > > included as an alternative in the literal rule, which then becomes
> > >
> > > literal : 'null' | 'true' | 'false' | StringLiteral | NumericLiteral |
> > Regex
> >
> >
> > Regular expression literals are ambiguous with '/' (division) unless you
> > give ANTLR a hand to work out what's what.  Some discussion here,
> >
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control
> >
> >
> > ta,
> > dave
> >
> >
> > --
> > http://david.holroyd.me.uk/
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/3681d864/attachment.html 

From felix_do at web.de  Sun Apr  6 05:33:58 2008
From: felix_do at web.de (Felix Dorner)
Date: Sun, 06 Apr 2008 14:33:58 +0200
Subject: [antlr-interest] How much semantic info should I attach to an
	imaginary token
Message-ID: <47F8C336.70702@web.de>

Hey,

I do object oriented stuff based on an uml class input model + some 
operation specification given as text. During validation I have to 
resolve types that are defined in the UML model. Either the class type 
is given by a simple ID string, or by a qualified name which is 
something like abc::def::MyClass

Currently I am working on Object creation expressions:

primary : NEW ID ('::' ID)*
              ; 

I ask myself whether I should include all the ID tokens in the tree, or 
simply store their text in an imaginary QNAME token:

primary : NEW^ qname
qname: s=ID ('::' ID)* -> QNAME[s  $text];

The resolver would later handle something like resolveType(String id), 
and check if it's a local or a qualified type reference.

Another question: In the imaginary token constructor, I need to omit the 
comma between s and $text, otherwise I get an additional one in the 
generated parser. The book says there _has_ to be a comma. Is this a 
bug, an error in the book?

Felix


From ph_reader at faes.net  Sun Apr  6 05:45:10 2008
From: ph_reader at faes.net (Philippe Faes)
Date: Sun, 6 Apr 2008 14:45:10 +0200
Subject: [antlr-interest] error message while recovering from token.
Message-ID: <b4f9f36e0804060545j3890c4e2s3f0b7ab979fdca75@mail.gmail.com>

Dear ANTLR-hackers

I've noticed that the ANTLR runtime prints a lot of messages to the console.
Most of these messages can be avoided by properly overriding the methods of
a generated parser (methods such as displayRecognitionError).
The method recoverFromMismatchedToken, however prints an error message
("BR.recoverFromMismatchedToken") while also performing other operations,
hence it is inelegant to override this method just to get rid of the error
message.
Will this error message be gone in the next release?

kind regards
Philippe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/8d02abe8/attachment.html 

From espina.edgar at gmail.com  Sun Apr  6 08:10:26 2008
From: espina.edgar at gmail.com (Edgar Espina)
Date: Sun, 6 Apr 2008 12:10:26 -0300
Subject: [antlr-interest] Delegates grammar in ANTLR 3.1b1
Message-ID: <92b42db60804060810h2efc223di69177579c59f9fb2@mail.gmail.com>

Hi all

I'm parsing Java.g and it's ok. Now when i try to parse for example
JavaDecl.g it fails and I see an error like this:
       error(107): JavaDecl.g:4:4: literal has no associated lexer rule:
'package'
and it's because this:
       parser grammar JavaDecl;

It's right?  Can I parse JavaDecl alone?

Thanks in advance

Edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/33a7814a/attachment.html 

From jaluber at gmx.de  Sun Apr  6 09:10:12 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 06 Apr 2008 18:10:12 +0200
Subject: [antlr-interest] Delegates grammar in ANTLR 3.1b1
In-Reply-To: <92b42db60804060810h2efc223di69177579c59f9fb2@mail.gmail.com>
References: <92b42db60804060810h2efc223di69177579c59f9fb2@mail.gmail.com>
Message-ID: <47F8F5E4.3040904@gmx.de>

Edgar Espina schrieb:
> Hi all
> 
> I'm parsing Java.g and it's ok. Now when i try to parse for example 
> JavaDecl.g it fails and I see an error like this:
>        error(107): JavaDecl.g:4:4: literal has no associated lexer rule: 
> 'package'
> and it's because this:
>        parser grammar JavaDecl;
> 
> It's right?  Can I parse JavaDecl alone?

AFAIK, you don't have to parse the grammar snippets alone. Some of those 
files even reference other grammar parts, which are by definition 
unavailable. Just parse the importing grammar and all imported grammars 
are automatically included.

Johannes

From markobarko at gmail.com  Sun Apr  6 10:41:41 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Sun, 6 Apr 2008 13:41:41 -0400
Subject: [antlr-interest] Creating tokens on error
In-Reply-To: <47F8F5E4.3040904@gmx.de>
Message-ID: <47f90b59.33e9220a.0196.ffffefbd@mx.google.com>

If I have a parser rule for addition that looks like this:

sum	:	something (Plus^ something)*;

it works fine for input like:

a+b

however, if I have input such as:

a+

which is invalid syntax (and causes a NoViableAltException), I would like
the parser to generate a "placeholder" token for the missing operand. Is
this possible?

Thanks,
Marko


From rschulz at sonic.net  Sun Apr  6 11:20:23 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 6 Apr 2008 11:20:23 -0700
Subject: [antlr-interest] Creating tokens on error
In-Reply-To: <47f90b59.33e9220a.0196.ffffefbd@mx.google.com>
References: <47f90b59.33e9220a.0196.ffffefbd@mx.google.com>
Message-ID: <200804061120.24072.rschulz@sonic.net>

On Sunday 06 April 2008 10:41, Marko Simovic wrote:
> If I have a parser rule for addition that looks like this:
>
> sum	:	something (Plus^ something)*;
>
> it works fine for input like:
>
> a+b
>
> however, if I have input such as:
>
> a+
>
> which is invalid syntax (and causes a NoViableAltException), I would
> like the parser to generate a "placeholder" token for the missing
> operand. Is this possible?

I don't know if ANTLR has built-in support for this sort of thing, but 
what I do is write productions for common error cases and in their 
actions issue a diagnostic and then supply distinctive placeholders for 
the missing elements (or simply drop superfluous ones, as the case may 
be).


> Thanks,
> Marko


Randall Schulz

From parrt at cs.usfca.edu  Sun Apr  6 11:47:44 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Apr 2008 11:47:44 -0700
Subject: [antlr-interest] Delegates grammar in ANTLR 3.1b1
In-Reply-To: <92b42db60804060810h2efc223di69177579c59f9fb2@mail.gmail.com>
References: <92b42db60804060810h2efc223di69177579c59f9fb2@mail.gmail.com>
Message-ID: <D2E98EB8-9755-41D3-86C7-DED9DE6CB419@cs.usfca.edu>

Hi. just run antlr on Java.g...the delegates are not complete grammars.
ANTLR generates what it needs from the imports.
ter
On Apr 6, 2008, at 8:10 AM, Edgar Espina wrote:

> Hi all
>
> I'm parsing Java.g and it's ok. Now when i try to parse for example  
> JavaDecl.g it fails and I see an error like this:
>        error(107): JavaDecl.g:4:4: literal has no associated lexer  
> rule: 'package'
> and it's because this:
>        parser grammar JavaDecl;
>
> It's right?  Can I parse JavaDecl alone?
>
> Thanks in advance
>
> Edgar


From jimi at temporal-wave.com  Sun Apr  6 13:30:27 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 06 Apr 2008 13:30:27 -0700
Subject: [antlr-interest] Simple C++ Support
In-Reply-To: <6442c4ae0804060244m467ee0fdr82795b8805fc425b@mail.gmail.com>
Message-ID: <01f36525a1ed114486d394443e3dbfd6@temporal-wave.com>

Christian.

 

#.1b is already C++ compatible and the headers already support these constructs, just compiler the .c files as C++ (or reanme them).

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christian Schladetsch
Sent: Sunday, April 06, 2008 2:45 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Simple C++ Support

 

Hello [Jim],

There is a very simple way to allow C++ support via your C target (for ANTLR 3.1b). All that has to happen is that the StringTemplate that generates the FooParser.c from Foo.g3pl generates:

/* End of Header action.
 * =============================================================================
 */
/* -----------------------------------------
 * Include the ANTLR3 generated header file.
 */
extern "C" 
{
#include    "FooParser.h"
}

/* ----------------------------------------- */


That is, wrap the header include with extern "C", set the generated file to build using C++ and away you go. I have tried this and it works, but I have not changed the template as I only started using ANTLR today. Of course, it would be nice if you could specify the generated file to have a .cpp extension (or .cxx or .C).

Could this make it into a build soon? It is a trivial change and yet would allow us to use C++ code in actions and predicates for parser and trees which would be great for those of us that are writing C++ systems.

Regards,
Christian.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/1514fc84/attachment.html 

From jimi at temporal-wave.com  Sun Apr  6 13:32:21 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 06 Apr 2008 13:32:21 -0700
Subject: [antlr-interest] Delegates grammar in ANTLR 3.1b1
In-Reply-To: <92b42db60804060810h2efc223di69177579c59f9fb2@mail.gmail.com>
Message-ID: <eb83c049fdfc9045a4219ba9647ea447@temporal-wave.com>

Just parser java.g and it will include an crate all the other necessary files. You will need the very latest snapshot to be able to include a grammar in more than one other grammar though.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edgar Espina
Sent: Sunday, April 06, 2008 8:10 AM
To: Antlr List
Subject: [antlr-interest] Delegates grammar in ANTLR 3.1b1

 

Hi all

I'm parsing Java.g and it's ok. Now when i try to parse for example JavaDecl.g it fails and I see an error like this:
       error(107): JavaDecl.g:4:4: literal has no associated lexer rule: 'package'
and it's because this:
       parser grammar JavaDecl;

It's right?  Can I parse JavaDecl alone?

Thanks in advance

Edgar



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080406/f930f773/attachment.html 

From mobisuxsux at gmail.com  Sun Apr  6 14:22:13 2008
From: mobisuxsux at gmail.com (mobi sux)
Date: Sun, 6 Apr 2008 23:22:13 +0200
Subject: [antlr-interest] ANTLR parser
Message-ID: <9588fd9a0804061422g77e4c7abi4f13b722c17d7c9e@mail.gmail.com>

Hi.. i'm working on a parser in ANTLR. I ia have a little big problem.
If i give an input with errors, the parser will regognize the error so
i give out a message.. but i would like to skip the ouput ..line 3:1
null
recoverFromMismatchedToken
BR.recoverFromMismatchedToken.. and would just put out my mistake.

And one more thing.. if the input is correct.. which method can i use
to write on the output, a text such as"GOOD job =)"..


Help. please..

Thanks in advance.

From chris at lambrou.net  Sun Apr  6 16:33:24 2008
From: chris at lambrou.net (Chris Lambrou)
Date: Mon, 7 Apr 2008 00:33:24 +0100
Subject: [antlr-interest] Newbie question - imaginary nodes
Message-ID: <70bbae280804061633j60a5f4ccn6b9d20662923107c@mail.gmail.com>

Hello there,

I'm currently working through Ter's book and trying to understand how to
create imaginary nodes to represent pseudo-operations. I'm having trouble
with the relevant section from the book 'Adding imaginary nodes' (p.166), as
follows:

decl : type ID ';' -> ^(VARDEF type ID) ;

This represents the 'variable declaration' pseudo-operation, with two child
nodes representing the type and name of the variable. It's clear that 'type'
refers to another rule, and ID represents an identifier token, but where
does VARDEF come from? With reference to the imaginary VARDEF token, the
book states the following:

The imaginary token must be defined elsewhere in a grammar or in the
tokenssection.

Where can I define the VARDEF token elsewhere in the grammar? I can't define
like all of the 'concrete' tokens, as a VARDEF token can never exist as an
actual sequence of input characters. This leaves the alternative of defining
it in the tokens section, but I can't find any other reference to the
tokenssection in the book.

Regards,

Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080407/e2221c6f/attachment.html 

From lucian.grijincu at gmail.com  Sun Apr  6 16:40:40 2008
From: lucian.grijincu at gmail.com (Lucian Adrian Grijincu)
Date: Mon, 7 Apr 2008 02:40:40 +0300
Subject: [antlr-interest] Newbie question - imaginary nodes
In-Reply-To: <70bbae280804061633j60a5f4ccn6b9d20662923107c@mail.gmail.com>
References: <70bbae280804061633j60a5f4ccn6b9d20662923107c@mail.gmail.com>
Message-ID: <acf3f2e60804061640o1afb92e3i56465e2d2a374a6a@mail.gmail.com>

Use the "Contents" from the begging of the book :)

There's a "4.4 Tokens Specification" section in the book.

Anyways, here's a sniplet from my code:

grammar Yanl;

tokens {
   TYPETOKEN;
   ASSIGN;
   VARDEF;
}

On Mon, Apr 7, 2008 at 2:33 AM, Chris Lambrou <chris at lambrou.net> wrote:
> Hello there,
>
> I'm currently working through Ter's book and trying to understand how to
> create imaginary nodes to represent pseudo-operations. I'm having trouble
> with the relevant section from the book 'Adding imaginary nodes' (p.166), as
> follows:
>
> decl : type ID ';' -> ^(VARDEF type ID) ;
>
> This represents the 'variable declaration' pseudo-operation, with two child
> nodes representing the type and name of the variable. It's clear that 'type'
> refers to another rule, and ID represents an identifier token, but where
> does VARDEF come from? With reference to the imaginary VARDEF token, the
> book states the following:
>
> The imaginary token must be defined elsewhere in a grammar or in the tokens
> section.
>
> Where can I define the VARDEF token elsewhere in the grammar? I can't define
> like all of the 'concrete' tokens, as a VARDEF token can never exist as an
> actual sequence of input characters. This leaves the alternative of defining
> it in the tokens section, but I can't find any other reference to the tokens
> section in the book.
>


-- 
Lucian

From magnus at rubidium.dyndns.org  Sun Apr  6 16:54:52 2008
From: magnus at rubidium.dyndns.org (Magnus Danielson)
Date: Mon, 07 Apr 2008 01:54:52 +0200 (CEST)
Subject: [antlr-interest] Antlr3 in Debian
Message-ID: <20080407.015452.557070257795424823.cfmd@bredband.net>

Hi!

The good folks at Debian just closed my bugreport that they should package
antlr3. So they have, even thought very minimalistic. Let's check if there is
anything missing and bug them with reports until it is honkey-doorey.

antlrworks haven't hit the fan, but it should be next bug report. :)

Cheers,
Magnus

From ame01 at gmx.net  Sun Apr  6 17:32:49 2008
From: ame01 at gmx.net (Aurelian Melinte)
Date: Sun, 06 Apr 2008 20:32:49 -0400
Subject: [antlr-interest] invalid StringTemplate % shorthand syntax: '%s'
Message-ID: <1.1.1.20080406202023.01400260@127.0.0.1>

Hello,

I am getting the above mentioned error although I have escaped all the occurrences of % with \% but I still have a few of those errors.  The only unescaped '%' are in the lexer:

   MOD             : '%' ;
   MODEQUAL        : '%=' ;

If someone can answer these questions, I would be grateful: 

1. Why do I have to escape the % in C code? Are there any other characters that need to be escaped? 

2. How do I escape it in the lexer tokens? 

The grammar generating these errors can be found here: http://www.freeshells.ch/~amelinte/CPP_parser32m.g.  

It is an attempt to adapt the C++ grammar authored by Mr. Wigg to ANTLR3; it generates other errors too, but for now I would like to get rid of these %-related errors.

On another note, this grammar crashes ANTLR. 

Best regards,

Aurelian Melinte



From parrt at cs.usfca.edu  Sun Apr  6 18:15:56 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Apr 2008 18:15:56 -0700
Subject: [antlr-interest] invalid StringTemplate % shorthand syntax: '%s'
In-Reply-To: <1.1.1.20080406202023.01400260@127.0.0.1>
References: <1.1.1.20080406202023.01400260@127.0.0.1>
Message-ID: <8001EA94-A6DE-40C4-A09A-670ABAD9D177@cs.usfca.edu>

lexer *actions* and lexer::header stuff with % were recently  
discovered to require some kind of double escape ;)
Ter
On Apr 6, 2008, at 5:32 PM, Aurelian Melinte wrote:

> Hello,
>
> I am getting the above mentioned error although I have escaped all  
> the occurrences of % with \% but I still have a few of those  
> errors.  The only unescaped '%' are in the lexer:
>
>    MOD             : '%' ;
>    MODEQUAL        : '%=' ;
>
> If someone can answer these questions, I would be grateful:
>
> 1. Why do I have to escape the % in C code? Are there any other  
> characters that need to be escaped?
>
> 2. How do I escape it in the lexer tokens?
>
> The grammar generating these errors can be found here: http:// 
> www.freeshells.ch/~amelinte/CPP_parser32m.g.
>
> It is an attempt to adapt the C++ grammar authored by Mr. Wigg to  
> ANTLR3; it generates other errors too, but for now I would like to  
> get rid of these %-related errors.
>
> On another note, this grammar crashes ANTLR.
>
> Best regards,
>
> Aurelian Melinte
>
>


From Robert.Klaus at innovations.de  Mon Apr  7 00:40:14 2008
From: Robert.Klaus at innovations.de (Robert.Klaus at innovations.de)
Date: Mon, 7 Apr 2008 09:40:14 +0200
Subject: [antlr-interest] ANT Task Antlr2: expecting "Parser", found '('
Message-ID: <6F7F118281893140B2E80FA4F9331BC6397CAF@email.innoimm.local>

Hi,

I am having problems when using the ANT Task to inherit from a
supergrammer using the "glib" option. I am using a combinend grammar
(contains Lexer, Parser and TreeParser) and each of these components
inherit from an abstract class (e.g. the parser has the notation
'extends Parser("some.pack.age.AbstractParser")'. Now I wanted the Lexer
grammar to inherit from a supergrammar, so I changed the definition
accordingly.
The Parser is built using an ANT script, where I used the glib option to
point to the supergrammar.

Unfortunately ANTLR threw an error telling me >> expecting "Parser",
found '(' <<. I looked at the "expandedMyGrammar.g" file, which was
produced and found that my Parser definition was broken, it was changed
to 'extends ("some.pack.age.AbstractParser")' (note the missing
'Parser').

I considered this a bug, so I tried to enter it on www.antlr2.org but
the link to bugs is broken (the same for www.antlr.org).

As Antlr3 is out and this is an Antlr2 bug ... is this going to be
fixed?


Cheers,

Robert


-------------------------------------------------------------
Robert Klaus
Diplom Informatiker
Product Development
-------------------------------------------------------------
Innovations Softwaretechnologie GmbH
Ziegelei 7
88090 Immenstaad
Germany
Phone: +49(0)7545-202-339
robert.klaus at innovations.de
www.visual-rules.com
-------------------------------------------------------------
Executives: 
Achim Berger, Thomas Cotic, Walter Pitz
Register Court Ulm HRB 631622
-------------------------------------------------------------

From mail at martin-probst.com  Mon Apr  7 01:44:24 2008
From: mail at martin-probst.com (Martin Probst)
Date: Mon, 7 Apr 2008 10:44:24 +0200
Subject: [antlr-interest] Bug with number of Tokens in lexers? (was: XML
	QName Character Validation)
In-Reply-To: <Pine.NEB.4.64.0804041315490.10571@panix5.panix.com>
References: <315C9076-9A30-40FC-82A9-4DC92D5A0FAA@martin-probst.com>
	<Pine.NEB.4.64.0804041315490.10571@panix5.panix.com>
Message-ID: <4618E32F-2FD4-46ED-89EF-92833B757B58@martin-probst.com>

Hi,

> For NCName, I suggest you look only at the first character, then  
> accept anything which is not a delimiter (e.g. ":", space, angle  
> bracket, etc..  After the match, call a routine to check that the  
> match is a valid name This has two advantages:

The trouble is that only looking at the first character doesn't really  
help - I'm already in trouble with the first decision.

I think I'm running into either a undocumented (= unknown to me ;-))  
limitation of ANTLRs lexer generation, or a bug.

The attached lexer grammar is the lexical part of my XQuery grammar.  
I've commented out most of the tokens section, see the block comment  
starting at line 37.

The weird thing is that with those tokens up to line 36, everything  
works as expected. If I comment in one more token (e.g. include the  
EVERY token), ANTLR suddenly starts complaining about ambiguities in  
the file.

If I replace the complex letter rule with a simpler 'a'..'z' |  
'A'..'Z', everything works fine again and I can have (apparently) as  
much tokens as I want.

How does this happen? Is there a limit to the number of decisions in a  
lexer?

Thanks for your help,
Martin

From mail at martin-probst.com  Mon Apr  7 01:48:38 2008
From: mail at martin-probst.com (Martin Probst)
Date: Mon, 7 Apr 2008 10:48:38 +0200
Subject: [antlr-interest] Bug with number of Tokens in lexers? (was: XML
	QName Character Validation)
In-Reply-To: <4618E32F-2FD4-46ED-89EF-92833B757B58@martin-probst.com>
References: <315C9076-9A30-40FC-82A9-4DC92D5A0FAA@martin-probst.com>
	<Pine.NEB.4.64.0804041315490.10571@panix5.panix.com>
	<4618E32F-2FD4-46ED-89EF-92833B757B58@martin-probst.com>
Message-ID: <8B8C3842-C287-483B-AABF-E28D5C9DBB5B@martin-probst.com>

> The attached lexer grammar is the lexical part of my XQuery grammar.  
> I've commented out most of the tokens section, see the block comment  
> starting at line 37.


... and now (*drumroll*) the attached grammar ;-)

Regards,
Martin


-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.g
Type: application/octet-stream
Size: 8232 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080407/e910ccde/attachment.obj 
-------------- next part --------------


From PSheehan at decaresystems.ie  Mon Apr  7 09:21:28 2008
From: PSheehan at decaresystems.ie (PSheehan at decaresystems.ie)
Date: Mon, 7 Apr 2008 17:21:28 +0100
Subject: [antlr-interest] String template questions.
Message-ID: <OF1A7156D7.63511C7E-ON80257424.0056A025-80257424.0059DB42@decaresystems.ie>

I've got a simple grammar up and running which generates Java beans and 
Hibernate config files.  I have a few questions as I'm not really sure if 
I am going about things in the correctly way.  My solution uses a lexer 
and parser to create an AST which I then pass on to a tree walker for the 
generation of the output.

1.  How do people generally create multiple files from a single  tree 
output.  For example if the result of the tree needs to create Bean1.java 
and Bean2.java.  Currently I've created a streamer strategy which my tree 
walker calls when it needs be, passing the output of a template to it. The 
strategy then knows how to create java files in the correct package 
structure.  I can then easily change the strategy in order to write 
Hibernate config files.  Is this a valid approach or should I just get the 
tree walker to roll up all the template results and break them up after 
the walker has finished.

2.   I've created one entry point into my templates from my grammar like 
so '%modeltmp($namespace,$name,$fieldDefinations)'.  Only one rule in the 
tree walker invodes a grammar, the other rules just gather the information 
needed to pass to the template. The main reason I did this was so I could 
call different templates from within the main template to produce 
different output given the same input.  For example I could generate a 
constructor, bean properties and a 'toString' method all from 
$fieldDefinations.    Is there a better way of doing this?  Should I move 
some of this work back into my parser so it creates, in the AST, a 
constructor node with field definations as childern or a 'toString' node 
with field definations as childern etc.

Here is a snippet of what I'm doing in the tree grammar.

model 
scope{
    ArrayList fieldDefList;
}
@init{
    $model::fieldDefList=new ArrayList();
}
        :       ^(MODEL TYPE fs+=fielddef+) 
                    {
                        StringTemplate 
temp=%modeltmp(namespace={$stat::namespaceDef},name={$TYPE},fields={$model::fieldDefList});
 streamer.write($stat::namespaceDef,$TYPE.text,temp.toString());
                    }
        ;

fielddef
        :       ^(FIELD TYPE ID) {$model::fieldDefList.add(new 
SimpleFieldType($TYPE.text,$ID.text));}
        ;

namespace
        :       ^(NAMESPACE ^(NAMESPACEMETA (ids+=ID)+)) 
{$stat::namespaceDef=$ids;}
        ;

Thanks,
Paul

 


This e-mail and any files transmitted with it are intended solely for the individual or entity to whom they are addressed. This communication may contain material that is privileged, confidential and protected from disclosure under the law. If you are not the intended recipient, any disclosure, distribution, copying, or use of this information is strictly prohibited and may be unlawful. 

If you have received this e-mail in error, please reply immediately to the sender and delete it.

Registered Address:
DeCare Systems Ireland Ltd, 
Building 1, University Technology Centre, Curraheen Road, Cork, Ireland. 
Company Registration Number:  278462
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080407/358ea24a/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Apr  7 10:22:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 7 Apr 2008 10:22:08 -0700
Subject: [antlr-interest] String template questions.
In-Reply-To: <OF1A7156D7.63511C7E-ON80257424.0056A025-80257424.0059DB42@decaresystems.ie>
References: <OF1A7156D7.63511C7E-ON80257424.0056A025-80257424.0059DB42@decaresystems.ie>
Message-ID: <8A068472-0888-40B8-A756-B3F553E270DB@cs.usfca.edu>


On Apr 7, 2008, at 9:21 AM, PSheehan at decaresystems.ie wrote:

>
> I've got a simple grammar up and running which generates Java beans  
> and Hibernate config files.  I have a few questions as I'm not  
> really sure if I am going about things in the correctly way.  My  
> solution uses a lexer and parser to create an AST which I then pass  
> on to a tree walker for the generation of the output.
>
> 1.  How do people generally create multiple files from a single   
> tree output.  For example if the result of the tree needs to create  
> Bean1.java and Bean2.java.  Currently I've created a streamer  
> strategy which my tree walker calls when it needs be, passing the  
> output of a template to it.  The strategy then knows how to create  
> java files in the correct package structure.  I can then easily  
> change the strategy in order to write Hibernate config files.  Is  
> this a valid approach or should I just get the tree walker to roll  
> up all the template results and break them up after the walker has  
> finished.

You could create an ST "broadcaster" that emits same attributes to  
multiple templates or just set attr ofmultiple templates manually.

> 2.   I've created one entry point into my templates from my grammar  
> like so '%modeltmp($namespace,$name,$fieldDefinations)'.  Only one  
> rule in the tree walker invodes a grammar, the other rules just  
> gather the information needed to pass to the template. The main  
> reason I did this was so I could call different templates from  
> within the main template to produce different output given the same  
> input.  For example I could generate a constructor, bean properties  
> and a 'toString' method all from $fieldDefinations.    Is there a  
> better way of doing this?

That works great.

>  Should I move some of this work back into my parser so it creates,  
> in the AST, a constructor node with field definations as childern or  
> a 'toString' node with field definations as childern etc.

easier to emit multiple thigns than create multiple trees usually.

>
Ter

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080407/f46a849f/attachment.html 

From antlr at mirality.co.nz  Mon Apr  7 13:45:24 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 08 Apr 2008 08:45:24 +1200
Subject: [antlr-interest] Creating tokens on error
In-Reply-To: <47f90b59.33e9220a.0196.ffffefbd@mx.google.com>
References: <47F8F5E4.3040904@gmx.de>
	<47f90b59.33e9220a.0196.ffffefbd@mx.google.com>
Message-ID: <20080407204536.4EE9B11EAF1@www.antlr.org>

At 05:41 7/04/2008, Marko Simovic wrote:
 >If I have a parser rule for addition that looks like this:
 >
 >sum	:	something (Plus^ something)*;
 >
 >it works fine for input like:
 >
 >a+b
 >
 >however, if I have input such as:
 >
 >a+
 >
 >which is invalid syntax (and causes a NoViableAltException), I
 >would like the parser to generate a "placeholder" token for the
 >missing operand. Is this possible?

Untested, but something like this ought to do the trick:

sum
   : ( a=something -> $a )
     ( Plus
       ( b=something -> ^(Plus $sum $b)
       | -> ^(Plus $sum ERROR) )
     )*
   ;


From jimi at temporal-wave.com  Mon Apr  7 14:51:49 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 07 Apr 2008 14:51:49 -0700
Subject: [antlr-interest] Creating tokens on error
In-Reply-To: <20080407204536.4EE9B11EAF1@www.antlr.org>
Message-ID: <458c9690f09a3d4eb641b8aa7bbb4404@temporal-wave.com>


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
 
> At 05:41 7/04/2008, Marko Simovic wrote:
>  >If I have a parser rule for addition that looks like this:
>  >
>  >sum	:	something (Plus^ something)*;


>  >
>  >however, if I have input such as:
>  >
>  >a+
>  >
>  >which is invalid syntax (and causes a NoViableAltException), I
>  >would like the parser to generate a "placeholder" token for the
>  >missing operand. Is this possible?

ANTLR 3.1 will in fact add an error node to the AST. ANTLR 3.0 does not do that.

Jim




From cmsdew at googlemail.com  Tue Apr  8 00:03:17 2008
From: cmsdew at googlemail.com (Chris Dew)
Date: Tue, 8 Apr 2008 08:03:17 +0100
Subject: [antlr-interest] autocompletion based on grmmar
Message-ID: <e6a690760804080003s5681956fob773204d7db3f686@mail.gmail.com>

I'm looking at the possibility of creating an autocompleter.  I know I can
build this from scratch, but I was wondering if antlr would make this
easier.

Basically, I'll be building a function, which given an incomplete (or
correct, but extendable) sentence in a grammar, will return zero or more
suggestions as to how to complete the next token.  It could also return more
information, for example: the next possible token type(s).

Any pointers to examples of doing this with antlr (java, c or python) would
be a help.

I'm sure people have done similar things for IDEs.  They can't be magic.

Thanks,

Chris.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/01814325/attachment.html 

From nopik at data.pl  Tue Apr  8 00:20:31 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 08 Apr 2008 09:20:31 +0200
Subject: [antlr-interest] autocompletion based on grmmar
References: <e6a690760804080003s5681956fob773204d7db3f686@mail.gmail.com>
Message-ID: <e8afefa5a124fcf9a6118dec619c5a35.qmail@home.pl>

"Chris Dew" <cmsdew at googlemail.com> napisa?(a):
> I'm looking at the possibility of creating an autocompleter.  I know I
> can
> build this from scratch, but I was wondering if antlr would make this
> easier.

What an coincidence... I started doing the same ;) The idea was on my mind 
for many months now, but finally I've started to do something real.. I 
decided to create (from scratch) library for this purpose. The road is 
quite long, and I have made only first few steps, so I do not expect 
anything usable this year, but who knows ;) Some time ago I made some small 
mockup project using lex/yacc, but they turned out to be too limited, and 
my small 'project' stalled for a while. Finally, I started to evaluate 
Antlr, and it seems, that it is powerful enough to get this task done.. 
Yesterday I have finished reading Antlr book, so over next weeks I'll try 
to do some simple C parser and see how this is going.. 


-- 
Best regards from
Kamil Burzynski


From christian.schladetsch at gmail.com  Tue Apr  8 00:40:49 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Tue, 8 Apr 2008 19:40:49 +1200
Subject: [antlr-interest] Building 3.1 from source
Message-ID: <6442c4ae0804080040q5ca8ca72m228fc65c56713d5e@mail.gmail.com>

Hello,

I would greatly appreciate any help getting ANTLR 3.1 built. I am not a Java
developer, google isn't helping much, and I have failed to find any other
documentation on www.antlr.org.

Output follows:

*e:\Dev\Antlr\antlr-2008-03-13.12>echo %PATH%
*C:\Program Files\Autodesk\Maya2008\bin;C:\Program Files\Microsoft DirectX
SDK (F
ebruary
2007)\Utilities\Bin\x86;C:\Windows\system32;C:\Windows;C:\Windows\System
32\Wbem;C:\hp\bin\Python;c:\Program Files\Microsoft SQL
Server\90\Tools\binn\;"C
:\Program Files\Graphviz2.16\Bin";C:\Program Files\doxygen\bin;C:\Program
Files\
QuickTime\QTSystem\;E:\Dev\boost\boost_1_34_1\bin;C:\j2sdk1.4.2_17\bin;E:\Bin\an
t\apache-ant-1.7.0-bin\apache-ant-1.7.0\bin*

e:\Dev\Antlr\antlr-2008-03-13.12>echo %JAVA_HOME%
*c:\j2sdk1.4.2_17*

e:\Dev\Antlr\antlr-2008-03-13.12>echo %CLASSPATH%
*%CLASSPATH%*

e:\Dev\Antlr\antlr-2008-03-13.12>ant
*Buildfile: build.xml

generator-prepare:

generator:

compile-rt:
  [myjavac] Compiling 74 source files to
e:\Dev\Antlr\antlr-2008-03-13.12\build\
rtclasses
  [myjavac] javac: invalid target release: jsr14

I see that build.xml passes `source=1.5 target=jsr14` to javac, which is
complaining about the target.

Cheers,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/2d88a024/attachment.html 

From jaluber at gmx.de  Tue Apr  8 03:06:33 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 08 Apr 2008 12:06:33 +0200
Subject: [antlr-interest] Building 3.1 from source
In-Reply-To: <6442c4ae0804080040q5ca8ca72m228fc65c56713d5e@mail.gmail.com>
References: <6442c4ae0804080040q5ca8ca72m228fc65c56713d5e@mail.gmail.com>
Message-ID: <47FB43A9.6010005@gmx.de>

Christian Schladetsch schrieb:
...
> compile-rt:
>   [myjavac] Compiling 74 source files to 
> e:\Dev\Antlr\antlr-2008-03-13.12\build\
> rtclasses
>   [myjavac] javac: invalid target release: jsr14
> 
> I see that build.xml passes `source=1.5 target=jsr14` to javac, which is 
> complaining about the target.

My guess is that you use still the 1.4 Java runtime, which doesn't know 
about the parameter. ANTLR requires on the developer side at least Java 1.5.

Johannes

From jaluber at gmx.de  Tue Apr  8 03:12:49 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 08 Apr 2008 12:12:49 +0200
Subject: [antlr-interest] autocompletion based on grmmar
In-Reply-To: <e8afefa5a124fcf9a6118dec619c5a35.qmail@home.pl>
References: <e6a690760804080003s5681956fob773204d7db3f686@mail.gmail.com>
	<e8afefa5a124fcf9a6118dec619c5a35.qmail@home.pl>
Message-ID: <47FB4521.8090500@gmx.de>

Kamil Burzynski schrieb:
>  Finally, I started to evaluate
> Antlr, and it seems, that it is powerful enough to get this task done.. 
> Yesterday I have finished reading Antlr book, so over next weeks I'll try 
> to do some simple C parser and see how this is going.. 

AFAIK, ANTLR still lacks a few capabilities to be itself able to do 
autocompletion. These are already on the todo-list, but as these aren't 
the only items left it may take a later version than 3.2 to have them 
completed. Of course, nothing can stop you from providing the missing 
bits yourself.

Johannes

From markobarko at gmail.com  Tue Apr  8 03:24:39 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Tue, 08 Apr 2008 06:24:39 -0400
Subject: [antlr-interest] Lexical Filter Downside?
In-Reply-To: <458c9690f09a3d4eb641b8aa7bbb4404@temporal-wave.com>
References: <458c9690f09a3d4eb641b8aa7bbb4404@temporal-wave.com>
Message-ID: <1207650279.8753.2.camel@main>

I just discovered the lexical filter mode of antlr and it has solved
several of my problems as well as simplified a bunch of my rules. Seems
a bit too good to be true. What is the downside of using the mode? is it
computationally expensive?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/c3289f25/attachment.html 

From nopik at data.pl  Tue Apr  8 04:10:03 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 08 Apr 2008 13:10:03 +0200
Subject: [antlr-interest] autocompletion based on grmmar
References: <e6a690760804080003s5681956fob773204d7db3f686@mail.gmail.com>
	<e8afefa5a124fcf9a6118dec619c5a35.qmail@home.pl>
	<47FB4521.8090500@gmx.de>
Message-ID: <1fed7c36b67f6957fbcae9fa823924cc.qmail@home.pl>

Johannes Luber <jaluber at gmx.de> napisa?(a):
> AFAIK, ANTLR still lacks a few capabilities to be itself able to do
> autocompletion. These are already on the todo-list, but as these aren't
> the only items left it may take a later version than 3.2 to have them
> completed. Of course, nothing can stop you from providing the missing
> bits yourself.

Indeed, I wish for better support. I did not considered extension of the 
ANTLR itself (though it is very interesting idea! Terrence - if you are 
reading this: can I help you somehow in this area?). Rather, I thought that 
I will create regular parser, override its error recovery mechanism and try 
to figure out the possibilities for completion. I did not tried yet, so I 
am not sure if this is feasible at all ;)


-- 
Best regards from
Kamil Burzynski


From nopik at data.pl  Tue Apr  8 04:16:55 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 08 Apr 2008 13:16:55 +0200
Subject: [antlr-interest] Another problem in C grammar
Message-ID: <2c42701ae6bcc52f77a89de5acff1b25.qmail@home.pl>

Hello,

 I have just hit on the problem of example C grammar. It is using isTypedef 
boolean hack to build type list. While it is working quite good, it do 
define too much. Namely, I got such sample input:

typedef void (*a)( int b, int c );
typedef union _d d;
union _d
{
  int b;
};

Parser fails on it. Before failing, it outputs, that type 'b' and type 'c' 
were defined. Which is obviously wrong (they do not define types). And 
since 'b' is type, 'int b' cannot be inside of union declaration, so fail.
The isTypedef boolean is being read just after IDENTIFIER, which is 
unfortunately overkill - as in single typedef declaration there are many 
identifiers possible ;( I had not found solution yet, though it should be 
easy to find it (and problem is definitely solvable :D).


-- 
Best regards from
Kamil Burzynski


From nopik at data.pl  Tue Apr  8 06:03:04 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Tue, 08 Apr 2008 15:03:04 +0200
Subject: [antlr-interest] Another problem in C grammar
References: <2c42701ae6bcc52f77a89de5acff1b25.qmail@home.pl>
Message-ID: <78b940529d1b012318c63c721ed5891a.qmail@home.pl>

Hi,

 I have solved the problem in quite ugly (but working :)) way: just 
introduced
global variable parameter_list_nesting_level initialized to 0 and following 
operations on it:
a) increment at start of parameter_list
b) decrement at end of parameter_list
c) in declarator, modified if( $declaration.isTypedef ) to check also 
parameter_list_nesting_level == 0.

Now it seem to be working.

"Kamil Burzynski" <nopik at data.pl> napisa?(a):
> Hello,
>
>  I have just hit on the problem of example C grammar. It is using
> isTypedef
> boolean hack to build type list. While it is working quite good, it do
> define too much. Namely, I got such sample input:
>
> typedef void (*a)( int b, int c );
> typedef union _d d;
> union _d
> {
>   int b;
> };
>
> Parser fails on it. Before failing, it outputs, that type 'b' and type
> 'c'
> were defined. Which is obviously wrong (they do not define types). And
> since 'b' is type, 'int b' cannot be inside of union declaration, so
> fail.
> The isTypedef boolean is being read just after IDENTIFIER, which is
> unfortunately overkill - as in single typedef declaration there are many
>
> identifiers possible ;( I had not found solution yet, though it should be 

>
> easy to find it (and problem is definitely solvable :D).
>
> --
> Best regards from
> Kamil Burzynski




-- 
Best regards from
Kamil Burzynski


From pat at tireme.fr  Tue Apr  8 06:14:04 2008
From: pat at tireme.fr (Pierre Attar)
Date: Tue, 08 Apr 2008 15:14:04 +0200
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <6F7F118281893140B2E80FA4F9331BC6397CAF@email.innoimm.local>
References: <6F7F118281893140B2E80FA4F9331BC6397CAF@email.innoimm.local>
Message-ID: <47FB6F9C.2040304@tireme.fr>

Hi,

I want to catch recognition errors on my parsing. In order to achieve 
this, I've creating the following rulecatch:

@rulecatch {
    pANTLR3_EXCEPTION exe = EXCEPTION;
    if(NULL != exe) {
        char    buffer[100];
        sprintf(buffer, "\%s", exe->name);
        cout << "Got an exception in parsing recognition: " << buffer;;
    }
}

This works fine except that when nothing is provided, the generation is :
    if (HASEXCEPTION())
    {PREPORTERROR();
        PRECOVER(); }
    else
    {{resultTree= doc;}}

... where the line is an @after clause.


My problem ? As soon as I put my rulecatcher, the after clause is no 
more generated.

I would be very glad to understand what I've done wrong here and also, 
if someone have a sample I may clone, it would help me.

Thanks a lot, Pierre





From nkodidi at hotmail.com  Tue Apr  8 09:31:53 2008
From: nkodidi at hotmail.com (Diane Nkonyereza)
Date: Tue, 8 Apr 2008 16:31:53 +0000
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
Message-ID: <BAY142-W12EC659796660E083E672A5F20@phx.gbl>


Hi all,

I have a question on the latest Java grammar. The question is related to the typeDeclaration rule.

- What is the ';' in the typeDeclaration Rule? Can someone please gives me an example of when the ';' could be an option or is it possible to just have ';' in java file and compile it successfully?
   
typeDeclaration
    :   classOrInterfaceDeclaration
    |   ';'
    ;Regards,
Diane.


> To: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> Date: Wed, 19 Mar 2008 18:24:45 -0600
> Subject: [antlr-interest] Java 1.5 grammar updated
> 
> Hi, thanks to John Ridgway, we have a major set of fixes to Java.g
> 
> http://www.antlr.org/grammar/1152141644268/Java.g
> 
> Parses JDK 1.5 source he says.
> 
> Terence

_________________________________________________________________
The next generation of Windows Live is here
http://www.windowslive.co.uk/get-live
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/83120601/attachment.html 

From swatt at infobal.com  Tue Apr  8 09:43:30 2008
From: swatt at infobal.com (Stuart Watt)
Date: Tue, 08 Apr 2008 12:43:30 -0400
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <BAY142-W12EC659796660E083E672A5F20@phx.gbl>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
Message-ID: <47FBA0B2.9060009@infobal.com>

This is the same as the grammar rule in the Java spec at: 
http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html

I was surprised by this, and being curious, I just successfully compiled 
a Java source file containing only a single semicolon. It seems a bit  
pointless to me, but it is valid Java!

All the best
Stuart


Diane Nkonyereza wrote:
> Hi all,
>
> I have a question on the latest Java grammar. The question is related 
> to the typeDeclaration rule.
>
> - What is the ';' in the typeDeclaration Rule? Can someone please 
> gives me an example of when the ';' could be an option or is it 
> possible to just have ';' in java file and compile it successfully?
>   
> typeDeclaration
>     :   classOrInterfaceDeclaration
>     |   ';'
>     ;
> Regards,
> Diane.
>
>
> > To: antlr-interest at antlr.org
> > From: parrt at cs.usfca.edu
> > Date: Wed, 19 Mar 2008 18:24:45 -0600
> > Subject: [antlr-interest] Java 1.5 grammar updated
> >
> > Hi, thanks to John Ridgway, we have a major set of fixes to Java.g
> >
> > http://www.antlr.org/grammar/1152141644268/Java.g
> >
> > Parses JDK 1.5 source he says.
> >
> > Terence
>
> ------------------------------------------------------------------------
> Get fish-slapping on Messenger Play now! <http://www.fishticuffs.co.uk>
> -- 
> This message was scanned by ESVA and is believed to be clean.
> Click here to report this message as spam. 
> <http://antispam.infobal.com/cgi-bin/learn-msg.cgi?id=9CAC627F09.5B24E> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/5cba2322/attachment.html 

From nkodidi at hotmail.com  Tue Apr  8 09:54:12 2008
From: nkodidi at hotmail.com (Diane Nkonyereza)
Date: Tue, 8 Apr 2008 16:54:12 +0000
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <47FBA0B2.9060009@infobal.com>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
	<47FBA0B2.9060009@infobal.com>
Message-ID: <BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>


That's strange. I can't compile such a file, I get error : 'class' or 'interface' expected.

Diane.



Date: Tue, 8 Apr 2008 12:43:30 -0400
From: swatt at infobal.com
To: nkodidi at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Java 1.5 grammar updated






  


This is the same as the grammar rule in the Java spec at:
http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html



I was surprised by this, and being curious, I just successfully
compiled a Java source file containing only a single semicolon. It
seems a bit  pointless to me, but it is valid Java! 



All the best

Stuart





Diane Nkonyereza wrote:

  Hi all,

  

I have a question on the latest Java grammar. The question is related
to the typeDeclaration rule.

  

- What is the ';' in the typeDeclaration Rule? Can someone please gives
me an example of when the ';' could be an option or is it possible to
just have ';' in java file and compile it successfully?

   

  typeDeclaration
    :   classOrInterfaceDeclaration
    |   ';'
    ;
Regards,

Diane.

  

  

> To: antlr-interest at antlr.org

> From: parrt at cs.usfca.edu

> Date: Wed, 19 Mar 2008 18:24:45 -0600

> Subject: [antlr-interest] Java 1.5 grammar updated

> 

> Hi, thanks to John Ridgway, we have a major set of fixes to Java.g

> 

> http://www.antlr.org/grammar/1152141644268/Java.g

> 

> Parses JDK 1.5 source he says.

> 

> Terence

  

  Get fish-slapping on Messenger Play now!

--
  

This message was scanned by ESVA and is believed to be clean.
  

  Click
here to report this message as spam.




_________________________________________________________________
Get Hotmail on your mobile. Text MSN to 63463 now!
http://mobile.uk.msn.com/pc/mail.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/354d787c/attachment.html 

From swatt at infobal.com  Tue Apr  8 10:04:03 2008
From: swatt at infobal.com (Stuart Watt)
Date: Tue, 08 Apr 2008 13:04:03 -0400
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
	<47FBA0B2.9060009@infobal.com>
	<BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>
Message-ID: <47FBA583.5090905@infobal.com>

Curious! I just replicated this on a different version, so both Sun JDK 
Java 6 on Windows and Sun JDK Java 5 on Linux compiled this file OK; 
interestingly no class file seems to have been created.

I also tried gcj, and managed to break that:
> stuart at stuart-desktop:~$ gcj test.java
> /tmp/ccIIuwWz.jar:0: internal compiler error: in java_parse_file, at 
> java/jcf-parse.c:1951
> Please submit a full bug report,
> with preprocessed source if appropriate.
> See <URL:http://gcc.gnu.org/bugs.html> for instructions.
> For Debian GNU/Linux specific bug reporting instructions,
> see <URL:file:///usr/share/doc/gcc-4.2/README.Bugs>.
It looks like a good grammar should accept this, but clearly not all 
compilers comply.

It's been ages since my last "internal compiler error" - it's made my day!!!

--S


Diane Nkonyereza wrote:
> That's strange. I can't compile such a file, I get error : 'class' or 
> 'interface' expected.
>
> Diane.
>
>
>
>     ------------------------------------------------------------------------
>     Date: Tue, 8 Apr 2008 12:43:30 -0400
>     From: swatt at infobal.com
>     To: nkodidi at hotmail.com
>     CC: antlr-interest at antlr.org
>     Subject: Re: [antlr-interest] Java 1.5 grammar updated
>
>     This is the same as the grammar rule in the Java spec at:
>     http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html
>
>     I was surprised by this, and being curious, I just successfully
>     compiled a Java source file containing only a single semicolon. It
>     seems a bit  pointless to me, but it is valid Java!
>
>     All the best
>     Stuart
>
>
>     Diane Nkonyereza wrote:
>
>         Hi all,
>
>         I have a question on the latest Java grammar. The question is
>         related to the typeDeclaration rule.
>
>         - What is the ';' in the typeDeclaration Rule? Can someone
>         please gives me an example of when the ';' could be an option
>         or is it possible to just have ';' in java file and compile it
>         successfully?
>           
>
>         typeDeclaration
>             :   classOrInterfaceDeclaration
>             |   ';'
>             ;
>
>         Regards,
>         Diane.
>
>
>         > To: antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>         > From: parrt at cs.usfca.edu <mailto:parrt at cs.usfca.edu>
>         > Date: Wed, 19 Mar 2008 18:24:45 -0600
>         > Subject: [antlr-interest] Java 1.5 grammar updated
>         >
>         > Hi, thanks to John Ridgway, we have a major set of fixes to
>         Java.g
>         >
>         > http://www.antlr.org/grammar/1152141644268/Java.g
>         >
>         > Parses JDK 1.5 source he says.
>         >
>         > Terence
>
>         ------------------------------------------------------------------------
>         Get fish-slapping on Messenger Play now!
>         <http://www.fishticuffs.co.uk>
>         -- 
>         This message was scanned by ESVA and is believed to be clean.
>         Click here to report this message as spam.
>         <http://antispam.infobal.com/cgi-bin/learn-msg.cgi?id=9CAC627F09.5B24E>
>
>
>
> ------------------------------------------------------------------------
> A prize an hour, 24 hours a day. Try Big Snap now! 
> <http://www.bigsnapsearch.com%0A%20>
> -- 
> This message was scanned by ESVA and is believed to be clean.
> Click here to report this message as spam. 
> <http://antispam.infobal.com/cgi-bin/learn-msg.cgi?id=4440A27F08.1C2DD> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/ab14d60e/attachment-0001.html 

From jimi at temporal-wave.com  Tue Apr  8 11:32:03 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 08 Apr 2008 11:32:03 -0700
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <47FB6F9C.2040304@tireme.fr>
Message-ID: <a2dd0de5dc2ceb458c05adcf2df26182@temporal-wave.com>

We need to add better support so that targets can tell you whether the section you are using is supported. @after currently isn't officially supported though I have been playing around with it.

Rather than try to do this through things like rule catch, just override the displayRecognitionError routine, or routines tath are called before that is called if you find a need.

At that point you can find out everything you would normally need to know, including what rule/alt the parser was in and the expected token set (if this can be worked out) and so on.

>From the C API docs:

Unless you wish to create your own tree structures using the built in ANTLR AST rewriting
notation, you will rarely need to override the default implementation of runtime methods. The
exception to this will be the syntax err reporting method, which is essentially a stub function
that you will usually want to provide your own implementation for. You should consider the built in function
displayRecognitionError() as an example of where to start as there can be no really useful
generic error message display.


In your grammar you can do this:

@parser::apifuncs
{
	// Override the standard error display and install my own.
      // Look at the runtime library code to see what the default one
      // does to find things out, then do what I want in my version.
      ..
	ctx->displayrecognitionError = myDisplayrecognitionError;
}

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Pierre Attar
> Sent: Tuesday, April 08, 2008 6:14 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] @rulecatch in a C environment
> 
> Hi,
> 
> I want to catch recognition errors on my parsing. In order to achieve
> this, I've creating the following rulecatch:
> 
> @rulecatch {
>     pANTLR3_EXCEPTION exe = EXCEPTION;
>     if(NULL != exe) {
>         char    buffer[100];
>         sprintf(buffer, "\%s", exe->name);
>         cout << "Got an exception in parsing recognition: " << buffer;;
>     }
> }
> 
> This works fine except that when nothing is provided, the generation is
> :
>     if (HASEXCEPTION())
>     {PREPORTERROR();
>         PRECOVER(); }
>     else
>     {{resultTree= doc;}}
> 
> ... where the line is an @after clause.
> 
> 
> My problem ? As soon as I put my rulecatcher, the after clause is no
> more generated.
> 
> I would be very glad to understand what I've done wrong here and also,
> if someone have a sample I may clone, it would help me.
> 
> Thanks a lot, Pierre
> 
> 
> 





From john at jacelridge.com  Tue Apr  8 12:27:30 2008
From: john at jacelridge.com (John Ridgway)
Date: Tue, 8 Apr 2008 15:27:30 -0400
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <47FBA583.5090905@infobal.com>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
	<47FBA0B2.9060009@infobal.com>
	<BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>
	<47FBA583.5090905@infobal.com>
Message-ID: <381A5859-CBEA-41A6-9531-CA960D43D9F8@jacelridge.com>

I think that the reason for this is basically historical.  It comes  
from C++, where a class definition must be followed by a ";".  Java  
decided not to require that semicolon, but then needed some way to  
allow it.  If you read the Java Language Specification (3rd edition,  
2005) by James Gosling et al., section 7.6 specifically says that ";"  
is a valid type declaration; that is, a TypeDeclaration is defined as  
a ClassDeclaration or an InterfaceDeclaration or a ";".

Furthermore it is entirely reasonable to have a Java file with no  
types declared in it.  In fact the JLS suggests that package  
annotations occur in a file whose only other content is the package  
declaration.  The JLS suggests that "The sole annotated package  
declaration, if it exists, is placed in a source file called package- 
info.java in the directory containing the source files for the  
package.  ... Typically package-info.java contains only a package  
declaration, preceded immediately by the annotations on the package.   
While the file could technically contain the source code for one or  
more package-private classes, it would be very bad form." (ibid, pp.  
158-159).

Peace
- John


On Apr 8, 2008, at 1:04 PM, Stuart Watt wrote:

> Curious! I just replicated this on a different version, so both Sun  
> JDK Java 6 on Windows and Sun JDK Java 5 on Linux compiled this file  
> OK; interestingly no class file seems to have been created.
>
> I also tried gcj, and managed to break that:
>> stuart at stuart-desktop:~$ gcj test.java
>> /tmp/ccIIuwWz.jar:0: internal compiler error: in java_parse_file,  
>> at java/jcf-parse.c:1951
>> Please submit a full bug report,
>> with preprocessed source if appropriate.
>> See <URL:http://gcc.gnu.org/bugs.html> for instructions.
>> For Debian GNU/Linux specific bug reporting instructions,
>> see <URL:file:///usr/share/doc/gcc-4.2/README.Bugs>.
> It looks like a good grammar should accept this, but clearly not all  
> compilers comply.
>
> It's been ages since my last "internal compiler error" - it's made  
> my day!!!
>
> --S
>
>
> Diane Nkonyereza wrote:
>>
>> That's strange. I can't compile such a file, I get error : 'class'  
>> or 'interface' expected.
>>
>> Diane.
>>
>>
>>
>> Date: Tue, 8 Apr 2008 12:43:30 -0400
>> From: swatt at infobal.com
>> To: nkodidi at hotmail.com
>> CC: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Java 1.5 grammar updated
>>
>> This is the same as the grammar rule in the Java spec at: http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html
>>
>> I was surprised by this, and being curious, I just successfully  
>> compiled a Java source file containing only a single semicolon. It  
>> seems a bit  pointless to me, but it is valid Java!
>>
>> All the best
>> Stuart
>>
>>
>> Diane Nkonyereza wrote:
>> Hi all,
>>
>> I have a question on the latest Java grammar. The question is  
>> related to the typeDeclaration rule.
>>
>> - What is the ';' in the typeDeclaration Rule? Can someone please  
>> gives me an example of when the ';' could be an option or is it  
>> possible to just have ';' in java file and compile it successfully?
>>
>> typeDeclaration
>>     :   classOrInterfaceDeclaration
>>     |   ';'
>>     ;
>> Regards,
>> Diane.
>>
>>
>> > To: antlr-interest at antlr.org
>> > From: parrt at cs.usfca.edu
>> > Date: Wed, 19 Mar 2008 18:24:45 -0600
>> > Subject: [antlr-interest] Java 1.5 grammar updated
>> >
>> > Hi, thanks to John Ridgway, we have a major set of fixes to Java.g
>> >
>> > http://www.antlr.org/grammar/1152141644268/Java.g
>> >
>> > Parses JDK 1.5 source he says.
>> >
>> > Terence
>>
>> Get fish-slapping on Messenger Play now!
>> -- 
>> This message was scanned by ESVA and is believed to be clean.
>> Click here to report this message as spam.
>>
>> A prize an hour, 24 hours a day. Try Big Snap now!
>> -- 
>> This message was scanned by ESVA and is believed to be clean.
>> Click here to report this message as spam.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/69c04be2/attachment.html 

From vonolsson at gmail.com  Tue Apr  8 13:10:23 2008
From: vonolsson at gmail.com (David Olsson)
Date: Tue, 08 Apr 2008 22:10:23 +0200
Subject: [antlr-interest] Multiplication and pointers in C-style language
Message-ID: <47FBD12F.9070205@gmail.com>

I am a novice when it comes to language and compiler construction and is 
using ANTLR to create a C-style language which among other things will 
support pointers, using standard C syntax (*), and multiplication. The 
problem is that ANTLR may potentially be unable to differentiate between 
a pointer declaration and a multiplication statement. Consider the 
following statement;

    ID * ID;

where /ID /denotes a token corresponding to an identifier. The above 
statement can be either a declaration of a pointer to a user declared 
type (eg /Object *obj/) or a multiplication of two variables (eg /i * 
j/). Does anyone have any input on how to write good grammar to handle 
this type of situation?

Currently my parser grammar looks like the following (very simplified);

    block:                    '{' (variableDecl | statement)* '}';
    variableDecl:             'const'? type ('*'* 'const'?)? ID '='
    expression; ';';
    statement:                block | expression;
    expression:               additiveExpression ('=' expression)?;
    additiveExpression:       multiplicativeExpression (('+' | '-')
    multiplicativeExpression)*;
    multiplicativeExpression: primary (('*' | '/') primary)*;
    primary:                  literal | ID | '(' expression ')';
    literal:                  DECIMALLITERAL | REALLITERAL;

Thanks a lot for any input!

Best regards
David Olsson


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/da8462a5/attachment.html 

From jimi at temporal-wave.com  Tue Apr  8 13:14:29 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 08 Apr 2008 13:14:29 -0700
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FBD12F.9070205@gmail.com>
Message-ID: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>

Why not just download the examples tar from the download page and inspect the ANSI C grammar in there? In fact, you could just steal the rules if you want.

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Olsson
Sent: Tuesday, April 08, 2008 1:10 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Multiplication and pointers in C-style language

 

I am a novice when it comes to language and compiler construction and is using ANTLR to create a C-style language which among other things will support pointers, using standard C syntax (*), and multiplication. The problem is that ANTLR may potentially be unable to differentiate between a pointer declaration and a multiplication statement. Consider the following statement;

ID * ID;

where ID denotes a token corresponding to an identifier. The above statement can be either a declaration of a pointer to a user declared type (eg Object *obj) or a multiplication of two variables (eg i * j). Does anyone have any input on how to write good grammar to handle this type of situation?

Currently my parser grammar looks like the following (very simplified);

block:                    '{' (variableDecl | statement)* '}';
variableDecl:             'const'? type ('*'* 'const'?)? ID '=' expression; ';';
statement:                block | expression;
expression:               additiveExpression ('=' expression)?;
additiveExpression:       multiplicativeExpression (('+' | '-') multiplicativeExpression)*;
multiplicativeExpression: primary (('*' | '/') primary)*;
primary:                  literal | ID | '(' expression ')';
literal:                  DECIMALLITERAL | REALLITERAL;

Thanks a lot for any input!

Best regards
David Olsson





-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/1ccd9d18/attachment.html 

From nkodidi at hotmail.com  Tue Apr  8 13:18:57 2008
From: nkodidi at hotmail.com (Diane Nkonyereza)
Date: Tue, 8 Apr 2008 20:18:57 +0000
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <381A5859-CBEA-41A6-9531-CA960D43D9F8@jacelridge.com>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
	<47FBA0B2.9060009@infobal.com>
	<BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>
	<47FBA583.5090905@infobal.com>
	<381A5859-CBEA-41A6-9531-CA960D43D9F8@jacelridge.com>
Message-ID: <BAY142-W326D58F2027E769B22F896A5F20@phx.gbl>



Thanks for the replies.

But if it's valid, why wouldn't it work for me. Could be because of the java version I'm using (1.5)?

Diane.
CC: john at jacelridge.com; nkodidi at hotmail.com; antlr-interest at antlr.org
From: john at jacelridge.com
To: SWatt at infobal.com
Subject: Re: [antlr-interest] Java 1.5 grammar updated
Date: Tue, 8 Apr 2008 15:27:30 -0400

I think that the reason for this is basically historical.  It comes from C++, where a class definition must be followed by a ";".  Java decided not to require that semicolon, but then needed some way to allow it.  If you read the Java Language Specification (3rd edition, 2005) by James Gosling et al., section 7.6 specifically says that ";" is a valid type declaration; that is, a TypeDeclaration is defined as a ClassDeclaration or an InterfaceDeclaration or a ";".
Furthermore it is entirely reasonable to have a Java file with no types declared in it.  In fact the JLS suggests that package annotations occur in a file whose only other content is the package declaration.  The JLS suggests that "The sole annotated package declaration, if it exists, is placed in a source file called package-info.java in the directory containing the source files for the package.  ... Typically package-info.java contains only a package declaration, preceded immediately by the annotations on the package.  While the file could technically contain the source code for one or more package-private classes, it would be very bad form." (ibid, pp. 158-159).
Peace- John

On Apr 8, 2008, at 1:04 PM, Stuart Watt wrote:Curious! I just replicated this on a different version, so both Sun JDK Java 6 on Windows and Sun JDK Java 5 on Linux compiled this file OK; interestingly no class file seems to have been created. 

I also tried gcj, and managed to break that:
stuart at stuart-desktop:~$ gcj test.java 
/tmp/ccIIuwWz.jar:0: internal compiler error: in java_parse_file, at java/jcf-parse.c:1951
Please submit a full bug report,
with preprocessed source if appropriate.
See <URL:http://gcc.gnu.org/bugs.html> for instructions.
For Debian GNU/Linux specific bug reporting instructions,
see <URL:file:///usr/share/doc/gcc-4.2/README.Bugs>.
It looks like a good grammar should accept this, but clearly not all compilers comply. 

It's been ages since my last "internal compiler error" - it's made my day!!!

--S


Diane Nkonyereza wrote:That's strange. I can't compile such a file, I get error : 'class' or 'interface' expected.

Diane.



Date: Tue, 8 Apr 2008 12:43:30 -0400
From: swatt at infobal.com
To: nkodidi at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Java 1.5 grammar updated

This is the same as the grammar rule in the Java spec at: http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html

I was surprised by this, and being curious, I just successfully compiled a Java source file containing only a single semicolon. It seems a bit  pointless to me, but it is valid Java! 

All the best
Stuart


Diane Nkonyereza wrote:Hi all,

I have a question on the latest Java grammar. The question is related to the typeDeclaration rule.

- What is the ';' in the typeDeclaration Rule? Can someone please gives me an example of when the ';' could be an option or is it possible to just have ';' in java file and compile it successfully?
   
typeDeclaration
    :   classOrInterfaceDeclaration
    |   ';'
    ;Regards,
Diane.


> To: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> Date: Wed, 19 Mar 2008 18:24:45 -0600
> Subject: [antlr-interest] Java 1.5 grammar updated
> 
> Hi, thanks to John Ridgway, we have a major set of fixes to Java.g
> 
> http://www.antlr.org/grammar/1152141644268/Java.g
> 
> Parses JDK 1.5 source he says.
> 
> Terence

Get fish-slapping on Messenger Play now!
-- 
This message was scanned by ESVA and is believed to be clean. 
Click here to report this message as spam.
A prize an hour, 24 hours a day. Try Big Snap now!
-- 
This message was scanned by ESVA and is believed to be clean. 
Click here to report this message as spam.

_________________________________________________________________
Get Hotmail on your mobile. Text MSN to 63463 now!
http://mobile.uk.msn.com/pc/mail.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/18bed40e/attachment-0001.html 

From shro8822 at vandals.uidaho.edu  Tue Apr  8 14:45:03 2008
From: shro8822 at vandals.uidaho.edu (Benjamin Shropshire)
Date: Tue, 08 Apr 2008 14:45:03 -0700
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
Message-ID: <47FBE75F.7070802@vandals.uidaho.edu>

Jim Idle wrote:

> Why not just download the examples tar from the download page and 
> inspect the ANSI C grammar in there? In fact, you could just steal the 
> rules if you want.
>
> Jim
>
>  
>
That most likely won't work perfectly. I ran into this one a while ago 
and found that gcc (with C++) gets this one wrong in some cases. 
Admittedly I was putting a multiplication on the LHS so I really can't 
objects. The answer that gcc takes seems to assume that you will never 
have a multiplication as a statement or on the LHS of an assignment, but 
only as a sub expression or just a plain expression. If that assumption 
is valid then C would be a good place to start (IMHO) but keep in mind 
that the makers of gcc though they were ok there and for me they were 
wrong.

From john at jacelridge.com  Tue Apr  8 15:44:56 2008
From: john at jacelridge.com (John Ridgway)
Date: Tue, 8 Apr 2008 18:44:56 -0400
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <BAY142-W326D58F2027E769B22F896A5F20@phx.gbl>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
	<47FBA0B2.9060009@infobal.com>
	<BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>
	<47FBA583.5090905@infobal.com>
	<381A5859-CBEA-41A6-9531-CA960D43D9F8@jacelridge.com>
	<BAY142-W326D58F2027E769B22F896A5F20@phx.gbl>
Message-ID: <4B4396AD-35D9-4911-837E-CFB0F9B3F21D@jacelridge.com>

What compiler are you using?  It works for me with javac 1.5.0_13 on  
MacOS X 10.5.2.  I thought I noticed a message going by that said that  
gcj has a problem with it; but that may be my imagination.

Peace
- John


On Apr 8, 2008, at 4:18 PM, Diane Nkonyereza wrote:

>
> Thanks for the replies.
>
> But if it's valid, why wouldn't it work for me. Could be because of  
> the java version I'm using (1.5)?
>
> Diane.
> CC: john at jacelridge.com; nkodidi at hotmail.com; antlr-interest at antlr.org
> From: john at jacelridge.com
> To: SWatt at infobal.com
> Subject: Re: [antlr-interest] Java 1.5 grammar updated
> Date: Tue, 8 Apr 2008 15:27:30 -0400
>
> I think that the reason for this is basically historical.  It comes  
> from C++, where a class definition must be followed by a ";".  Java  
> decided not to require that semicolon, but then needed some way to  
> allow it.  If you read the Java Language Specification (3rd edition,  
> 2005) by James Gosling et al., section 7.6 specifically says that  
> ";" is a valid type declaration; that is, a TypeDeclaration is  
> defined as a ClassDeclaration or an InterfaceDeclaration or a ";".
>
> Furthermore it is entirely reasonable to have a Java file with no  
> types declared in it.  In fact the JLS suggests that package  
> annotations occur in a file whose only other content is the package  
> declaration.  The JLS suggests that "The sole annotated package  
> declaration, if it exists, is placed in a source file called package- 
> info.java in the directory containing the source files for the  
> package.  ... Typically package-info.java contains only a package  
> declaration, preceded immediately by the annotations on the  
> package.  While the file could technically contain the source code  
> for one or more package-private classes, it would be very bad  
> form." (ibid, pp. 158-159).
>
> Peace
> - John
>
>
> On Apr 8, 2008, at 1:04 PM, Stuart Watt wrote:
> Curious! I just replicated this on a different version, so both Sun  
> JDK Java 6 on Windows and Sun JDK Java 5 on Linux compiled this file  
> OK; interestingly no class file seems to have been created.
>
> I also tried gcj, and managed to break that:
> stuart at stuart-desktop:~$ gcj test.java
> /tmp/ccIIuwWz.jar:0: internal compiler error: in java_parse_file, at  
> java/jcf-parse.c:1951
> Please submit a full bug report,
> with preprocessed source if appropriate.
> See <URL:http://gcc.gnu.org/bugs.html> for instructions.
> For Debian GNU/Linux specific bug reporting instructions,
> see <URL:file:///usr/share/doc/gcc-4.2/README.Bugs>.
> It looks like a good grammar should accept this, but clearly not all  
> compilers comply.
>
> It's been ages since my last "internal compiler error" - it's made  
> my day!!!
>
> --S
>
>
> Diane Nkonyereza wrote:
> That's strange. I can't compile such a file, I get error : 'class'  
> or 'interface' expected.
>
> Diane.
>
>
>
> Date: Tue, 8 Apr 2008 12:43:30 -0400
> From: swatt at infobal.com
> To: nkodidi at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Java 1.5 grammar updated
>
> This is the same as the grammar rule in the Java spec at: http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html
>
> I was surprised by this, and being curious, I just successfully  
> compiled a Java source file containing only a single semicolon. It  
> seems a bit  pointless to me, but it is valid Java!
>
> All the best
> Stuart
>
>
> Diane Nkonyereza wrote:
> Hi all,
>
> I have a question on the latest Java grammar. The question is  
> related to the typeDeclaration rule.
>
> - What is the ';' in the typeDeclaration Rule? Can someone please  
> gives me an example of when the ';' could be an option or is it  
> possible to just have ';' in java file and compile it successfully?
>
> typeDeclaration
>     :   classOrInterfaceDeclaration
>     |   ';'
>     ;
> Regards,
> Diane.
>
>
> > To: antlr-interest at antlr.org
> > From: parrt at cs.usfca.edu
> > Date: Wed, 19 Mar 2008 18:24:45 -0600
> > Subject: [antlr-interest] Java 1.5 grammar updated
> >
> > Hi, thanks to John Ridgway, we have a major set of fixes to Java.g
> >
> > http://www.antlr.org/grammar/1152141644268/Java.g
> >
> > Parses JDK 1.5 source he says.
> >
> > Terence
>
> Get fish-slapping on Messenger Play now!
> -- 
> This message was scanned by ESVA and is believed to be clean.
> Click here to report this message as spam.
>
> A prize an hour, 24 hours a day. Try Big Snap now!
> -- 
> This message was scanned by ESVA and is believed to be clean.
> Click here to report this message as spam.
>
>
> A prize an hour, 24 hours a day. Try Big Snap now!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080408/68c0e1a9/attachment.html 

From jaluber at gmx.de  Tue Apr  8 17:46:07 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 09 Apr 2008 02:46:07 +0200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
Message-ID: <47FC11CF.5000909@gmx.de>

Hi!

It's time to give you all an update how the C# target will evolve to.

The general direction is that I will phase out support for C# 1.0 for 
ANTLR 3.3, if nothing major comes up (meaning that a user can't update 
to .NET 2). I want to split the runtime library into two, so I can use 
generics and other stuff.

Because of these major changes, I want to have at least one minor ANTLR 
version as a testbed. As I didn't find the time to do those changes for 
3.1, the testbed will be 3.2. The reason for this early announcement is 
that a bugfix requires the use of a C# 2.0 feature.

If you want to use a non-intrinsic value type then you have to use the 
new target CSharp2 or to change the template yourself (for all 
installations). While the runtime library will work for both targets, if 
you want to (and can) futureproof your application then change the 
target as soon as possible.

I'm also happy to release the beta 1 for the 3.1 C# target: It is 
synced with the latest Java changes and compiles all example grammars 
successfully. While the changes have been checked in, there may no 
intermediate build available yet which includes the changes. This 
depends on Ter.

Changes include:

- Following Java target evolution.

- Changed lowercase signatures into uppercase so the runtime conforms 
more to C# conventions. For example, $a.tree in grammar, but a.Tree in 
code. $-syntax is not affected although the exceptions compared to Java 
target will be probably removed (if I find the source that is). See for 
  further info on that issue the wiki. Changes in runtime library may 
have broken things beyond simply renaming and converting references.

- Broke the IToken dependency for Token, as this didn't make any sense 
compared to the Java target. If you derive your class from Token or use 
Token as Type, please change that into IToken.

- Bug fixes.

- No binaries for .Net 1.1 created yet. It is on my todo list.

Please send bug reports to this list. In case I've been notified of this 
bug already please refrain from reposting until beta 2. I am still 
working on those and if I've lost one you will find it out soon enough.

Johannes

From parrt at cs.usfca.edu  Tue Apr  8 20:14:48 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 8 Apr 2008 20:14:48 -0700
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <47FC11CF.5000909@gmx.de>
References: <47FC11CF.5000909@gmx.de>
Message-ID: <D4AC91A7-1309-4887-AF4A-0E9A2D5A54FD@cs.usfca.edu>

New build is http://www.antlr.org/download/build/ 
antlr-2008-04-08.17.tar.gz which includes Johannes' C# updates.
Ter
On Apr 8, 2008, at 5:46 PM, Johannes Luber wrote:

> Hi!
>
> It's time to give you all an update how the C# target will evolve to.
>
> The general direction is that I will phase out support for C# 1.0  
> for ANTLR 3.3, if nothing major comes up (meaning that a user can't  
> update to .NET 2). I want to split the runtime library into two, so  
> I can use generics and other stuff.
>
> Because of these major changes, I want to have at least one minor  
> ANTLR version as a testbed. As I didn't find the time to do those  
> changes for 3.1, the testbed will be 3.2. The reason for this early  
> announcement is that a bugfix requires the use of a C# 2.0 feature.
>
> If you want to use a non-intrinsic value type then you have to use  
> the new target CSharp2 or to change the template yourself (for all  
> installations). While the runtime library will work for both  
> targets, if you want to (and can) futureproof your application then  
> change the target as soon as possible.
>
> I'm also happy to release the beta 1 for the 3.1 C# target: It is  
> synced with the latest Java changes and compiles all example  
> grammars successfully. While the changes have been checked in,  
> there may no intermediate build available yet which includes the  
> changes. This depends on Ter.
>
> Changes include:
>
> - Following Java target evolution.
>
> - Changed lowercase signatures into uppercase so the runtime  
> conforms more to C# conventions. For example, $a.tree in grammar,  
> but a.Tree in code. $-syntax is not affected although the  
> exceptions compared to Java target will be probably removed (if I  
> find the source that is). See for  further info on that issue the  
> wiki. Changes in runtime library may have broken things beyond  
> simply renaming and converting references.
>
> - Broke the IToken dependency for Token, as this didn't make any  
> sense compared to the Java target. If you derive your class from  
> Token or use Token as Type, please change that into IToken.
>
> - Bug fixes.
>
> - No binaries for .Net 1.1 created yet. It is on my todo list.
>
> Please send bug reports to this list. In case I've been notified of  
> this bug already please refrain from reposting until beta 2. I am  
> still working on those and if I've lost one you will find it out  
> soon enough.
>
> Johannes


From elekis at gmail.com  Tue Apr  8 22:13:38 2008
From: elekis at gmail.com (julien)
Date: Wed, 09 Apr 2008 07:13:38 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
Message-ID: <47FC5082.7020101@gmail.com>

hi all, I try to make a plugin who can colorize some line like

FROM lkfsjdl IMPORT lskdfjl;
FROM lkfsjdl IMPORT lskdfjl;

Based on my own grammar created with ANTLR 3.0.

for that, I overrided ITokenScanner.

	public IToken nextToken() {

		antCurrentToken = lexer.nextToken();
		if (antCurrentToken.getType() == org.antlr.runtime.Token.EOF)
			return Token.EOF;
		switch (antCurrentToken.getType()) {
		case LyaflplugLexer.TAG_END:
		case LyaflplugLexer.TAG_DEFINITION_MODULE:
		case LyaflplugLexer.TAG_FROM:
		case LyaflplugLexer.TAG_IMPORT:
			return keyword;
		default:
			return ident;
		}
	}

The problem is : if the file is empty then I can create twho line

FROM lkfsjdl IMPORT lskdfjl;
FROM lkfsjdl IMPORT lskdfjl;

he color eatch word etc... everything is perfect but if I save and I 
reopen the file he bug cause theres are two line who are the same.  (if 
there is only one, no prob).

I ve tried to debug and he call every token. but after that there is a 
exception error Argument No valid.

is any body has a idea: I there is the class code
http://paste.ubuntu-nl.org/62601/

thanks

a++

PS: this message is sended on antlr-interest and eclipse.platform
-----------------------------------------------------------------------

PPS: there is the stack.


java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:3547)
	at org.eclipse.swt.SWT.error(SWT.java:3481)
	at org.eclipse.swt.SWT.error(SWT.java:3452)
	at org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7776)
	at org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7870)
	at 
org.eclipse.jface.text.TextViewer.applyTextPresentation(TextViewer.java:4429)
	at 
org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java:4481)
	at 
org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegionCollection(PresentationReconciler.java:580)
	at 
org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:569)
	at 
org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:565)
	at 
org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.inputDocumentChanged(PresentationReconciler.java:119)
	at 
org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2685)
	at org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2734)
	at 
org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:518)
	at 
org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:473)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3786)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3332)
	at 
org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53)
	at 
org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:378)
	at 
org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661)
	at 
org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426)
	at 
org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592)
	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)
	at 
org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:179)
	at 
org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268)
	at 
org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)
	at 
org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:400)
	at 
org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1256)
	at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
	at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1604)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:499)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
	at org.eclipse.ui.internal.PartStack.add(PartStack.java:485)
	at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
	at 
org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63)
	at 
org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:217)
	at 
org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:207)
	at 
org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:774)
	at 
org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:673)
	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)
	at 
org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2737)
	at 
org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2651)
	at org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
	at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at 
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590)
	at 
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574)
	at 
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)
	at 
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:286)
	at 
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:139)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
	at 
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268)
	at 
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:316)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(PackageExplorerPart.java:613)
	at 
org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.core.runtime.Platform.run(Platform.java:857)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
	at 
org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818)
	at 
org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079)
	at 
org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
	at 
org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)
	at 
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at 
org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)
	at 
org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
	at 
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
	at 
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
	at 
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
	at 
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1148)



From jhvdven at xs4all.nl  Tue Apr  8 23:07:22 2008
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Wed, 09 Apr 2008 08:07:22 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <47FC5082.7020101@gmail.com>
References: <47FC5082.7020101@gmail.com>
Message-ID: <47FC5D1A.8060406@xs4all.nl>

Dear Julien,

I remember having the same kind of problems. Please check the way we 
fixed it here:
http://quantum.cvs.sourceforge.net/quantum/quantum-plugin/src/com/quantum/editors/SQL2ScannerWithLexer.java?view=log
If I remember correctly, the setRange is sometimes called with illegal 
values for offset and/or length.

Happy coding,

Jan

julien wrote:
> hi all, I try to make a plugin who can colorize some line like
>
> FROM lkfsjdl IMPORT lskdfjl;
> FROM lkfsjdl IMPORT lskdfjl;
>
> Based on my own grammar created with ANTLR 3.0.
>
> for that, I overrided ITokenScanner.
>
>     public IToken nextToken() {
>
>         antCurrentToken = lexer.nextToken();
>         if (antCurrentToken.getType() == org.antlr.runtime.Token.EOF)
>             return Token.EOF;
>         switch (antCurrentToken.getType()) {
>         case LyaflplugLexer.TAG_END:
>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
>         case LyaflplugLexer.TAG_FROM:
>         case LyaflplugLexer.TAG_IMPORT:
>             return keyword;
>         default:
>             return ident;
>         }
>     }
>
> The problem is : if the file is empty then I can create twho line
>
> FROM lkfsjdl IMPORT lskdfjl;
> FROM lkfsjdl IMPORT lskdfjl;
>
> he color eatch word etc... everything is perfect but if I save and I 
> reopen the file he bug cause theres are two line who are the same.  
> (if there is only one, no prob).
>
> I ve tried to debug and he call every token. but after that there is a 
> exception error Argument No valid.
>
> is any body has a idea: I there is the class code
> http://paste.ubuntu-nl.org/62601/
>
> thanks
>
> a++
>
> PS: this message is sended on antlr-interest and eclipse.platform
> -----------------------------------------------------------------------
>
> PPS: there is the stack.
>
>
> java.lang.IllegalArgumentException: Argument not valid
>     at org.eclipse.swt.SWT.error(SWT.java:3547)
>     at org.eclipse.swt.SWT.error(SWT.java:3481)
>     at org.eclipse.swt.SWT.error(SWT.java:3452)
>     at 
> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7776)
>     at 
> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7870)
>     at 
> org.eclipse.jface.text.TextViewer.applyTextPresentation(TextViewer.java:4429) 
>
>     at 
> org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java:4481) 
>
>     at 
> org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegionCollection(PresentationReconciler.java:580) 
>
>     at 
> org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:569) 
>
>     at 
> org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:565) 
>
>     at 
> org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.inputDocumentChanged(PresentationReconciler.java:119) 
>
>     at 
> org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2685) 
>
>     at 
> org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2734)
>     at 
> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:518) 
>
>     at 
> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:473) 
>
>     at 
> org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3786) 
>
>     at 
> org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3332) 
>
>     at 
> org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53) 
>
>     at 
> org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:378) 
>
>     at 
> org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661) 
>
>     at 
> org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426) 
>
>     at 
> org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592) 
>
>     at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)
>     at 
> org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:179) 
>
>     at 
> org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268) 
>
>     at 
> org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65) 
>
>     at 
> org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:400) 
>
>     at 
> org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1256) 
>
>     at 
> org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
>     at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1604)
>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:499)
>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:485)
>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
>     at 
> org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63) 
>
>     at 
> org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:217) 
>
>     at 
> org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:207) 
>
>     at 
> org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:774) 
>
>     at 
> org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:673) 
>
>     at 
> org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)
>     at 
> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2737) 
>
>     at 
> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2651) 
>
>     at 
> org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
>     at 
> org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
>     at 
> org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
>     at 
> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590)
>     at 
> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574)
>     at 
> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565)
>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)
>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)
>     at 
> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:286) 
>
>     at 
> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:139) 
>
>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
>     at 
> org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268) 
>
>     at 
> org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244) 
>
>     at 
> org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:316) 
>
>     at 
> org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(PackageExplorerPart.java:613) 
>
>     at 
> org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820) 
>
>     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
>     at org.eclipse.core.runtime.Platform.run(Platform.java:857)
>     at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
>     at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
>     at 
> org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818) 
>
>     at 
> org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079) 
>
>     at 
> org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183) 
>
>     at 
> org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
>     at 
> org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
>     at 
> org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
>     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
>     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
>     at 
> org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
>     at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
>     at 
> org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
>     at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
>     at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
>     at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
>     at 
> org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289) 
>
>     at 
> org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461) 
>
>     at 
> org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
>     at 
> org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106) 
>
>     at 
> org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169) 
>
>     at 
> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106) 
>
>     at 
> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76) 
>
>     at 
> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363) 
>
>     at 
> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176) 
>
>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
>     at java.lang.reflect.Method.invoke(Unknown Source)
>     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
>     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
>     at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
>     at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
>
>
>
>


From elekis at gmail.com  Tue Apr  8 23:18:50 2008
From: elekis at gmail.com (elekis)
Date: Wed, 09 Apr 2008 08:18:50 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <47FC5D1A.8060406@xs4all.nl>
References: <47FC5082.7020101@gmail.com> <47FC5D1A.8060406@xs4all.nl>
Message-ID: <47FC5FCA.4080900@gmail.com>

Jan van der Ven a ?crit :
> Dear Julien,
>
> I remember having the same kind of problems. Please check the way we 
> fixed it here:
> http://quantum.cvs.sourceforge.net/quantum/quantum-plugin/src/com/quantum/editors/SQL2ScannerWithLexer.java?view=log 
>
> If I remember correctly, the setRange is sometimes called with illegal 
> values for offset and/or length.
>
In fact, I alwready use your code to understand  and I never understood 
why begin at the first of the document and make a while . mybe it's why.
I ll look.
thanks
    +++



> Happy coding,
>
> Jan
>
> julien wrote:
>> hi all, I try to make a plugin who can colorize some line like
>>
>> FROM lkfsjdl IMPORT lskdfjl;
>> FROM lkfsjdl IMPORT lskdfjl;
>>
>> Based on my own grammar created with ANTLR 3.0.
>>
>> for that, I overrided ITokenScanner.
>>
>>     public IToken nextToken() {
>>
>>         antCurrentToken = lexer.nextToken();
>>         if (antCurrentToken.getType() == org.antlr.runtime.Token.EOF)
>>             return Token.EOF;
>>         switch (antCurrentToken.getType()) {
>>         case LyaflplugLexer.TAG_END:
>>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
>>         case LyaflplugLexer.TAG_FROM:
>>         case LyaflplugLexer.TAG_IMPORT:
>>             return keyword;
>>         default:
>>             return ident;
>>         }
>>     }
>>
>> The problem is : if the file is empty then I can create twho line
>>
>> FROM lkfsjdl IMPORT lskdfjl;
>> FROM lkfsjdl IMPORT lskdfjl;
>>
>> he color eatch word etc... everything is perfect but if I save and I 
>> reopen the file he bug cause theres are two line who are the same.  
>> (if there is only one, no prob).
>>
>> I ve tried to debug and he call every token. but after that there is 
>> a exception error Argument No valid.
>>
>> is any body has a idea: I there is the class code
>> http://paste.ubuntu-nl.org/62601/
>>
>> thanks
>>
>> a++
>>
>> PS: this message is sended on antlr-interest and eclipse.platform
>> -----------------------------------------------------------------------
>>
>> PPS: there is the stack.
>>
>>
>> java.lang.IllegalArgumentException: Argument not valid
>>     at org.eclipse.swt.SWT.error(SWT.java:3547)
>>     at org.eclipse.swt.SWT.error(SWT.java:3481)
>>     at org.eclipse.swt.SWT.error(SWT.java:3452)
>>     at 
>> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7776)
>>     at 
>> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7870)
>>     at 
>> org.eclipse.jface.text.TextViewer.applyTextPresentation(TextViewer.java:4429) 
>>
>>     at 
>> org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java:4481) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegionCollection(PresentationReconciler.java:580) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:569) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:565) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.inputDocumentChanged(PresentationReconciler.java:119) 
>>
>>     at 
>> org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2685) 
>>
>>     at 
>> org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2734)
>>     at 
>> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:518) 
>>
>>     at 
>> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:473) 
>>
>>     at 
>> org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3786) 
>>
>>     at 
>> org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3332) 
>>
>>     at 
>> org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53) 
>>
>>     at 
>> org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:378) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592) 
>>
>>     at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)
>>     at 
>> org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:179) 
>>
>>     at 
>> org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268) 
>>
>>     at 
>> org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65) 
>>
>>     at 
>> org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:400) 
>>
>>     at 
>> org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1256) 
>>
>>     at 
>> org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
>>     at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1604)
>>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:499)
>>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
>>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:485)
>>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
>>     at 
>> org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:217) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:207) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:774) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:673) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2737) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2651) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
>>     at 
>> org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565) 
>>
>>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)
>>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)
>>     at 
>> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:286) 
>>
>>     at 
>> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:139) 
>>
>>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
>>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
>>     at 
>> org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268) 
>>
>>     at 
>> org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244) 
>>
>>     at 
>> org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:316) 
>>
>>     at 
>> org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(PackageExplorerPart.java:613) 
>>
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820) 
>>
>>     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
>>     at org.eclipse.core.runtime.Platform.run(Platform.java:857)
>>     at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
>>     at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818) 
>>
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079) 
>>
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183) 
>>
>>     at 
>> org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
>>     at 
>> org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
>>     at 
>> org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
>>     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
>>     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
>>     at 
>> org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
>>     at 
>> org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
>>     at 
>> org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
>>     at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
>>     at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
>>     at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
>>     at 
>> org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289) 
>>
>>     at 
>> org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461) 
>>
>>     at 
>> org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
>>     at 
>> org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106) 
>>
>>     at 
>> org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169) 
>>
>>     at 
>> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106) 
>>
>>     at 
>> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76) 
>>
>>     at 
>> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363) 
>>
>>     at 
>> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176) 
>>
>>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
>>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
>>     at java.lang.reflect.Method.invoke(Unknown Source)
>>     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
>>     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
>>     at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
>>     at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
>>
>>
>>
>>
>



From vonolsson at gmail.com  Wed Apr  9 00:01:27 2008
From: vonolsson at gmail.com (David Olsson)
Date: Wed, 09 Apr 2008 09:01:27 +0200
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
Message-ID: <47FC69C7.3020608@gmail.com>

Jim Idle wrote:
>
> Why not just download the examples tar from the download page and 
> inspect the ANSI C grammar in there? In fact, you could just steal the 
> rules if you want.
>
> Jim
>
Actually, I have been looking quite a lot at the C example but as a 
novice when it comes to ANTLR and constructing languages I don't really 
see how and why it works. Perhaps I should rephrase my question; can 
anyone explain how and why the ANSI C example grammar works with the 
multiplication and pointer situation described below? :-)

Best regards
David Olsson

>  
>
> *From:* antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *David Olsson
> *Sent:* Tuesday, April 08, 2008 1:10 PM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Multiplication and pointers in C-style 
> language
>
>  
>
> I am a novice when it comes to language and compiler construction and 
> is using ANTLR to create a C-style language which among other things 
> will support pointers, using standard C syntax (*), and 
> multiplication. The problem is that ANTLR may potentially be unable to 
> differentiate between a pointer declaration and a multiplication 
> statement. Consider the following statement;
>
> ID * ID;
>
> where /ID /denotes a token corresponding to an identifier. The above 
> statement can be either a declaration of a pointer to a user declared 
> type (eg /Object *obj/) or a multiplication of two variables (eg /i * 
> j/). Does anyone have any input on how to write good grammar to handle 
> this type of situation?
>
> Currently my parser grammar looks like the following (very simplified);
>
> block:                    '{' (variableDecl | statement)* '}';
> variableDecl:             'const'? type ('*'* 'const'?)? ID '=' 
> expression; ';';
> statement:                block | expression;
> expression:               additiveExpression ('=' expression)?;
> additiveExpression:       multiplicativeExpression (('+' | '-') 
> multiplicativeExpression)*;
> multiplicativeExpression: primary (('*' | '/') primary)*;
> primary:                  literal | ID | '(' expression ')';
> literal:                  DECIMALLITERAL | REALLITERAL;
>
> Thanks a lot for any input!
>
> Best regards
> David Olsson
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/a9befa40/attachment-0001.html 

From antlr at mirality.co.nz  Wed Apr  9 02:39:26 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 09 Apr 2008 21:39:26 +1200
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FC69C7.3020608@gmail.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com>
Message-ID: <20080409093938.13E8D11ECC4@www.antlr.org>

At 19:01 9/04/2008, David Olsson wrote:
>Actually, I have been looking quite a lot at the C example but as 
>a novice when it comes to ANTLR and constructing languages I 
>don't really see how and why it works. Perhaps I should rephrase 
>my question; can anyone explain how and why the ANSI C example 
>grammar works with the multiplication and pointer situation 
>described below? :-)

I'm not sure if the example shows it (I haven't looked at it in a 
while), but this sort of problem requires semantic 
disambiguation.  Specifically, you need to examine the first 
identifier token and figure out whether it's a type or a 
variable.  You should be able to do this since both types and 
variables are required to be declared before they are used.


From nkodidi at hotmail.com  Wed Apr  9 03:55:05 2008
From: nkodidi at hotmail.com (Diane Nkonyereza)
Date: Wed, 9 Apr 2008 10:55:05 +0000
Subject: [antlr-interest] Java 1.5 grammar updated
In-Reply-To: <4B4396AD-35D9-4911-837E-CFB0F9B3F21D@jacelridge.com>
References: <E74F46A9-2616-40C6-B79A-A674F3DB2FB1@cs.usfca.edu>
	<BAY142-W12EC659796660E083E672A5F20@phx.gbl>
	<47FBA0B2.9060009@infobal.com>
	<BAY142-W3083673A2C56E2815A9490A5F20@phx.gbl>
	<47FBA583.5090905@infobal.com>
	<381A5859-CBEA-41A6-9531-CA960D43D9F8@jacelridge.com>
	<BAY142-W326D58F2027E769B22F896A5F20@phx.gbl>
	<4B4396AD-35D9-4911-837E-CFB0F9B3F21D@jacelridge.com>
Message-ID: <BAY142-W20E2D03804A35DDC185980A5ED0@phx.gbl>


Ooops, it's compiling now. But not .class created like Stuart said.

I'm using SUN's compiler (i think).

Cheers,
Diane

CC: john at jacelridge.com; antlr-interest at antlr.org
From: john at jacelridge.com
To: nkodidi at hotmail.com
Subject: Re: [antlr-interest] Java 1.5 grammar updated
Date: Tue, 8 Apr 2008 18:44:56 -0400

What compiler are you using?  It works for me with javac 1.5.0_13 on MacOS X 10.5.2.  I thought I noticed a message going by that said that gcj has a problem with it; but that may be my imagination.
Peace- John

On Apr 8, 2008, at 4:18 PM, Diane Nkonyereza wrote:
Thanks for the replies.

But if it's valid, why wouldn't it work for me. Could be because of the java version I'm using (1.5)?

Diane.
CC: john at jacelridge.com; nkodidi at hotmail.com; antlr-interest at antlr.org
From: john at jacelridge.com
To: SWatt at infobal.com
Subject: Re: [antlr-interest] Java 1.5 grammar updated
Date: Tue, 8 Apr 2008 15:27:30 -0400

I think that the reason for this is basically historical.  It comes from C++, where a class definition must be followed by a ";".  Java decided not to require that semicolon, but then needed some way to allow it.  If you read the Java Language Specification (3rd edition, 2005) by James Gosling et al., section 7.6 specifically says that ";" is a valid type declaration; that is, a TypeDeclaration is defined as a ClassDeclaration or an InterfaceDeclaration or a ";".
Furthermore it is entirely reasonable to have a Java file with no types declared in it.  In fact the JLS suggests that package annotations occur in a file whose only other content is the package declaration.  The JLS suggests that "The sole annotated package declaration, if it exists, is placed in a source file called package-info.java in the directory containing the source files for the package.  ... Typically package-info.java contains only a package declaration, preceded immediately by the annotations on the package.  While the file could technically contain the source code for one or more package-private classes, it would be very bad form." (ibid, pp. 158-159).
Peace- John

On Apr 8, 2008, at 1:04 PM, Stuart Watt wrote:Curious! I just replicated this on a different version, so both Sun JDK Java 6 on Windows and Sun JDK Java 5 on Linux compiled this file OK; interestingly no class file seems to have been created. 

I also tried gcj, and managed to break that:
stuart at stuart-desktop:~$ gcj test.java 
/tmp/ccIIuwWz.jar:0: internal compiler error: in java_parse_file, at java/jcf-parse.c:1951
Please submit a full bug report,
with preprocessed source if appropriate.
See <URL:http://gcc.gnu.org/bugs.html> for instructions.
For Debian GNU/Linux specific bug reporting instructions,
see <URL:file:///usr/share/doc/gcc-4.2/README.Bugs>.
It looks like a good grammar should accept this, but clearly not all compilers comply. 

It's been ages since my last "internal compiler error" - it's made my day!!!

--S


Diane Nkonyereza wrote:That's strange. I can't compile such a file, I get error : 'class' or 'interface' expected.

Diane.



Date: Tue, 8 Apr 2008 12:43:30 -0400
From: swatt at infobal.com
To: nkodidi at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Java 1.5 grammar updated

This is the same as the grammar rule in the Java spec at: http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html

I was surprised by this, and being curious, I just successfully compiled a Java source file containing only a single semicolon. It seems a bit  pointless to me, but it is valid Java! 

All the best
Stuart


Diane Nkonyereza wrote:Hi all,

I have a question on the latest Java grammar. The question is related to the typeDeclaration rule.

- What is the ';' in the typeDeclaration Rule? Can someone please gives me an example of when the ';' could be an option or is it possible to just have ';' in java file and compile it successfully?
   
typeDeclaration
    :   classOrInterfaceDeclaration
    |   ';'
    ;Regards,
Diane.


> To: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> Date: Wed, 19 Mar 2008 18:24:45 -0600
> Subject: [antlr-interest] Java 1.5 grammar updated
> 
> Hi, thanks to John Ridgway, we have a major set of fixes to Java.g
> 
> http://www.antlr.org/grammar/1152141644268/Java.g
> 
> Parses JDK 1.5 source he says.
> 
> Terence

Get fish-slapping on Messenger Play now!
-- 
This message was scanned by ESVA and is believed to be clean. 
Click here to report this message as spam.
A prize an hour, 24 hours a day. Try Big Snap now!
-- 
This message was scanned by ESVA and is believed to be clean. 
Click here to report this message as spam.

A prize an hour, 24 hours a day. Try Big Snap now!

_________________________________________________________________
Get Hotmail on your mobile. Text MSN to 63463 now!
http://mobile.uk.msn.com/pc/mail.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/e0bb9d43/attachment.html 

From cieslewski at hcs.ufl.edu  Wed Apr  9 04:40:10 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Wed, 9 Apr 2008 07:40:10 -0400
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <20080409093938.13E8D11ECC4@www.antlr.org>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com>
	<20080409093938.13E8D11ECC4@www.antlr.org>
Message-ID: <7aa837f80804090440t327d7291v92842dc6c1d87a08@mail.gmail.com>

On Wed, Apr 9, 2008 at 5:39 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 19:01 9/04/2008, David Olsson wrote:
>
> > Actually, I have been looking quite a lot at the C example but as a novice
> when it comes to ANTLR and constructing languages I don't really see how and
> why it works. Perhaps I should rephrase my question; can anyone explain how
> and why the ANSI C example grammar works with the multiplication and pointer
> situation described below? :-)
> >
>
>  I'm not sure if the example shows it (I haven't looked at it in a while),
> but this sort of problem requires semantic disambiguation.  Specifically,
> you need to examine the first identifier token and figure out whether it's a
> type or a variable.  You should be able to do this since both types and
> variables are required to be declared before they are used.
>
>

David,

I think all you need to add to your grammar is a list of allowed types
as separate tokens like:
type_specifier
	: 'void'
	| 'char'
	| 'short'
	| 'int'
	| 'long'
	| 'float'
	| 'double'
	| 'signed'
	| 'unsigned';

This way there would be no ambiguity (I think)

Greg Cieslewski

From chris at sidwells.com  Wed Apr  9 05:28:25 2008
From: chris at sidwells.com (Chris Dew)
Date: Wed, 9 Apr 2008 13:28:25 +0100
Subject: [antlr-interest] Fwd:  autocompletion based on grmmar
In-Reply-To: <e6a690760804090526s429ed636v31b4cf70e59439f@mail.gmail.com>
References: <e6a690760804080003s5681956fob773204d7db3f686@mail.gmail.com>
	<e8afefa5a124fcf9a6118dec619c5a35.qmail@home.pl>
	<e6a690760804090526s429ed636v31b4cf70e59439f@mail.gmail.com>
Message-ID: <e6a690760804090528g66c924a6g2b88609e960d6796@mail.gmail.com>

One problem I've come across is that there can be multiple possible rules
which could be matched, dependent on how a sentence is completed.

An edge case is an empty sentence - the first character can be the first
character from any token which can be first in a rule, or any number of
subrules.  It looks like this could get exponential in its time requirements
- there can be no 'look ahead' when autocompleting :-(.

I think I may try some form of 'bitwise' token system.  e.g. In natural
language the word 'colour' is *either* a VERB token *or* a ADJECTIVE token.

I'll know more, when I've tinkered more.

Good luck in your project,

Chris.

On 08/04/2008, Kamil Burzynski <nopik at data.pl> wrote:
>
> "Chris Dew" <cmsdew at googlemail.com> napisa?(a):
>
> > I'm looking at the possibility of creating an autocompleter.  I know I
> > can
> > build this from scratch, but I was wondering if antlr would make this
> > easier.
>
>
> What an coincidence... I started doing the same ;) The idea was on my mind
> for many months now, but finally I've started to do something real.. I
> decided to create (from scratch) library for this purpose. The road is
> quite long, and I have made only first few steps, so I do not expect
> anything usable this year, but who knows ;) Some time ago I made some
> small
> mockup project using lex/yacc, but they turned out to be too limited, and
> my small 'project' stalled for a while. Finally, I started to evaluate
> Antlr, and it seems, that it is powerful enough to get this task done..
> Yesterday I have finished reading Antlr book, so over next weeks I'll try
> to do some simple C parser and see how this is going..
>
>
> --
> Best regards from
>
> Kamil Burzynski
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/13640bd0/attachment-0001.html 

From pat at tireme.fr  Wed Apr  9 05:53:25 2008
From: pat at tireme.fr (Pierre Attar)
Date: Wed, 09 Apr 2008 14:53:25 +0200
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <a2dd0de5dc2ceb458c05adcf2df26182@temporal-wave.com>
References: <a2dd0de5dc2ceb458c05adcf2df26182@temporal-wave.com>
Message-ID: <47FCBC45.1050408@tireme.fr>

Jim,

Thanks a lot for your answer. I've now remove all "after" clauses and 
try to work on the displayrecognitionError function.

As you should have notice, I'm not a C guru and trying to do your mind, 
I got the following error :

..FFormParser.c(326) : error C2039: 'displayrecognitionError' : is not a 
member of 'FFormParser_Ctx_struct'
2>        ..\antlrgen\FFormParser.h(317) : see declaration of 
'FFormParser_Ctx_struct'

Which means, I assume, that I also need somewhere to declare the my 
overwriting function? Can you explain me the way to do that ?

Pierre

Jim Idle a ?crit :
> We need to add better support so that targets can tell you whether the section you are using is supported. @after currently isn't officially supported though I have been playing around with it.
>
> Rather than try to do this through things like rule catch, just override the displayRecognitionError routine, or routines tath are called before that is called if you find a need.
>
> At that point you can find out everything you would normally need to know, including what rule/alt the parser was in and the expected token set (if this can be worked out) and so on.
>
> >From the C API docs:
>
> Unless you wish to create your own tree structures using the built in ANTLR AST rewriting
> notation, you will rarely need to override the default implementation of runtime methods. The
> exception to this will be the syntax err reporting method, which is essentially a stub function
> that you will usually want to provide your own implementation for. You should consider the built in function
> displayRecognitionError() as an example of where to start as there can be no really useful
> generic error message display.
>
>
> In your grammar you can do this:
>
> @parser::apifuncs
> {
> 	// Override the standard error display and install my own.
>       // Look at the runtime library code to see what the default one
>       // does to find things out, then do what I want in my version.
>       ..
> 	ctx->displayrecognitionError = myDisplayrecognitionError;
> }
>
> Jim
>
>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Pierre Attar
>> Sent: Tuesday, April 08, 2008 6:14 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] @rulecatch in a C environment
>>
>> Hi,
>>
>> I want to catch recognition errors on my parsing. In order to achieve
>> this, I've creating the following rulecatch:
>>
>> @rulecatch {
>>     pANTLR3_EXCEPTION exe = EXCEPTION;
>>     if(NULL != exe) {
>>         char    buffer[100];
>>         sprintf(buffer, "\%s", exe->name);
>>         cout << "Got an exception in parsing recognition: " << buffer;;
>>     }
>> }
>>
>> This works fine except that when nothing is provided, the generation is
>> :
>>     if (HASEXCEPTION())
>>     {PREPORTERROR();
>>         PRECOVER(); }
>>     else
>>     {{resultTree= doc;}}
>>
>> ... where the line is an @after clause.
>>
>>
>> My problem ? As soon as I put my rulecatcher, the after clause is no
>> more generated.
>>
>> I would be very glad to understand what I've done wrong here and also,
>> if someone have a sample I may clone, it would help me.
>>
>> Thanks a lot, Pierre
>>
>>
>>
>>     
>
>
>
>
>
>
>
>   


From swatt at infobal.com  Wed Apr  9 08:51:42 2008
From: swatt at infobal.com (Stuart Watt)
Date: Wed, 09 Apr 2008 11:51:42 -0400
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FC69C7.3020608@gmail.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com>
Message-ID: <47FCE60E.5030204@infobal.com>

I worked with the C grammar before using another approach. The C grammar 
in ANTLR typically builds a symbol type table, and parses stuff 
differently when it recognises a type identifier, compared to when it 
doesn't. This looks like one of those cases. C is not a clean grammar, 
and to parse properly requires semantic predicates to determine which 
path to follow. There is code in the example C parser in ANTLR to do all 
this. Even the ANSI grammar definitions in yacc/lex contain small 
references to using type information to disambiguate. In the end, I came 
to the conclusion that C is basically a nasty language to parse, 
although it has the one virtue that it is not quite as hard to parse as C++.

if you need pointers and multiplication, in C syntax, I suspect you're 
going to need to build a (scoped) type symbol table and semantic 
predicates. Then if the first identifier is a type, you can treat it is 
a pointer, if not, multiplication. As Jim said, the code to do this is 
in the C ANTLR example.

All the best
Stuart


David Olsson wrote:
> Jim Idle wrote:
>>
>> Why not just download the examples tar from the download page and 
>> inspect the ANSI C grammar in there? In fact, you could just steal 
>> the rules if you want.
>>
>> Jim
>>
> Actually, I have been looking quite a lot at the C example but as a 
> novice when it comes to ANTLR and constructing languages I don't 
> really see how and why it works. Perhaps I should rephrase my 
> question; can anyone explain how and why the ANSI C example grammar 
> works with the multiplication and pointer situation described below? :-)
>
> Best regards
> David Olsson
>
>>  
>>
>> *From:* antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *David Olsson
>> *Sent:* Tuesday, April 08, 2008 1:10 PM
>> *To:* antlr-interest at antlr.org
>> *Subject:* [antlr-interest] Multiplication and pointers in C-style 
>> language
>>
>>  
>>
>> I am a novice when it comes to language and compiler construction and 
>> is using ANTLR to create a C-style language which among other things 
>> will support pointers, using standard C syntax (*), and 
>> multiplication. The problem is that ANTLR may potentially be unable 
>> to differentiate between a pointer declaration and a multiplication 
>> statement. Consider the following statement;
>>
>> ID * ID;
>>
>> where /ID /denotes a token corresponding to an identifier. The above 
>> statement can be either a declaration of a pointer to a user declared 
>> type (eg /Object *obj/) or a multiplication of two variables (eg /i * 
>> j/). Does anyone have any input on how to write good grammar to 
>> handle this type of situation?
>>
>> Currently my parser grammar looks like the following (very simplified);
>>
>> block:                    '{' (variableDecl | statement)* '}';
>> variableDecl:             'const'? type ('*'* 'const'?)? ID '=' 
>> expression; ';';
>> statement:                block | expression;
>> expression:               additiveExpression ('=' expression)?;
>> additiveExpression:       multiplicativeExpression (('+' | '-') 
>> multiplicativeExpression)*;
>> multiplicativeExpression: primary (('*' | '/') primary)*;
>> primary:                  literal | ID | '(' expression ')';
>> literal:                  DECIMALLITERAL | REALLITERAL;
>>
>> Thanks a lot for any input!
>>
>> Best regards
>> David Olsson
>>
>
>
> -- 
> This message was scanned by ESVA and is believed to be clean.
> Click here to report this message as spam. 
> <http://antispam.infobal.com/cgi-bin/learn-msg.cgi?id=16AC727F08.A69CF> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/abe80fbd/attachment.html 

From jimi at temporal-wave.com  Wed Apr  9 08:55:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Apr 2008 08:55:50 -0700
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <47FCBC45.1050408@tireme.fr>
Message-ID: <76de28b5c7426d4ba0b4bef5d9e936eb@temporal-wave.com>

Pierre,

The capitalization is wrong, it is:

displayRecognitionError

Jim

> -----Original Message-----
> From: Pierre Attar [mailto:pat at tireme.fr]
> Sent: Wednesday, April 09, 2008 5:53 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] @rulecatch in a C environment
> 
> Jim,
> 
> Thanks a lot for your answer. I've now remove all "after" clauses and
> try to work on the displayrecognitionError function.
> 
> As you should have notice, I'm not a C guru and trying to do your mind,
> I got the following error :
> 
> ..FFormParser.c(326) : error C2039: 'displayrecognitionError' : is not
> a
> member of 'FFormParser_Ctx_struct'
> 2>        ..\antlrgen\FFormParser.h(317) : see declaration of
> 'FFormParser_Ctx_struct'
> 
> Which means, I assume, that I also need somewhere to declare the my
> overwriting function? Can you explain me the way to do that ?
> 
> Pierre
> 
> Jim Idle a ?crit :
> > We need to add better support so that targets can tell you whether
> the section you are using is supported. @after currently isn't
> officially supported though I have been playing around with it.
> >
> > Rather than try to do this through things like rule catch, just
> override the displayRecognitionError routine, or routines tath are
> called before that is called if you find a need.
> >
> > At that point you can find out everything you would normally need to
> know, including what rule/alt the parser was in and the expected token
> set (if this can be worked out) and so on.
> >
> > >From the C API docs:
> >
> > Unless you wish to create your own tree structures using the built in
> ANTLR AST rewriting
> > notation, you will rarely need to override the default implementation
> of runtime methods. The
> > exception to this will be the syntax err reporting method, which is
> essentially a stub function
> > that you will usually want to provide your own implementation for.
> You should consider the built in function
> > displayRecognitionError() as an example of where to start as there
> can be no really useful
> > generic error message display.
> >
> >
> > In your grammar you can do this:
> >
> > @parser::apifuncs
> > {
> > 	// Override the standard error display and install my own.
> >       // Look at the runtime library code to see what the default one
> >       // does to find things out, then do what I want in my version.
> >       ..
> > 	ctx->displayrecognitionError = myDisplayrecognitionError;
> > }
> >
> > Jim
> >
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Pierre Attar
> >> Sent: Tuesday, April 08, 2008 6:14 AM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] @rulecatch in a C environment
> >>
> >> Hi,
> >>
> >> I want to catch recognition errors on my parsing. In order to
> achieve
> >> this, I've creating the following rulecatch:
> >>
> >> @rulecatch {
> >>     pANTLR3_EXCEPTION exe = EXCEPTION;
> >>     if(NULL != exe) {
> >>         char    buffer[100];
> >>         sprintf(buffer, "\%s", exe->name);
> >>         cout << "Got an exception in parsing recognition: " <<
> buffer;;
> >>     }
> >> }
> >>
> >> This works fine except that when nothing is provided, the generation
> is
> >> :
> >>     if (HASEXCEPTION())
> >>     {PREPORTERROR();
> >>         PRECOVER(); }
> >>     else
> >>     {{resultTree= doc;}}
> >>
> >> ... where the line is an @after clause.
> >>
> >>
> >> My problem ? As soon as I put my rulecatcher, the after clause is no
> >> more generated.
> >>
> >> I would be very glad to understand what I've done wrong here and
> also,
> >> if someone have a sample I may clone, it would help me.
> >>
> >> Thanks a lot, Pierre
> >>
> >>
> >>
> >>
> >
> >
> >
> >
> >
> >
> >
> >





From yau at LGSInnovations.com  Wed Apr  9 08:57:36 2008
From: yau at LGSInnovations.com (Yau Kwong K (Tony))
Date: Wed, 9 Apr 2008 11:57:36 -0400
Subject: [antlr-interest] Parse data structure as input
In-Reply-To: <5CB5547C-7F55-4AD7-8A26-5BAF710CD177@cs.usfca.edu>
References: <8A2EB455D62ADA438CD446EDF41F2D0D023EF12F@BLTSXVS01.govsolutions.com>
	<5CB5547C-7F55-4AD7-8A26-5BAF710CD177@cs.usfca.edu>
Message-ID: <8A2EB455D62ADA438CD446EDF41F2D0D024F1706@BLTSXVS01.govsolutions.com>

Ter,

 

I would need more information and pointer of how to accomplish this
(sample code if there is any).  I've read the book and the generated
codes on tree and tree adaptor (especially on the C target) and I still
don't have a clear picture on how to extend Antlr to fit our
application.  The following pseudo code is what I'm trying to do. 

 

typedef struct StructA_struct {

            int intA1;

            int intA2;

} StructA;

 

typedef struct StructB_struct {

            int intB1;

            myStructA *structA_p;

} StructB;

 

StructB *myStruct = (StructB *) &alreadyDefinedStruct;

 

if (myStruct -> intB1 == 100) 

            action100 ();      // take action100 if intB1 has the value
of 100

if (myStruct -> structA_p -> intA1 == 200)

            action200();       // take action200 if intA1 has the value
of 200

if (myStruct -> structA_p -> intA2 == 300)

            action300();       // take action300 if intA2 has the value
of 300

 

Would appreciate if anyone can share some thoughts on this.

 

Regards,

Tony

 

 

 

 

 

            

 

________________________________

From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Tuesday, April 01, 2008 3:36 PM
To: Yau Kwong K (Tony)
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Parse data structure as input

 

Sure. a tree adaptor + tree grammar i what you want.

Ter

On Apr 1, 2008, at 11:03 AM, Yau Kwong K (Tony) wrote:





Hi all,

 

I'm new to antlr and I'm trying to find out if Antlr can parse C data
structure (instead of plain character stream) as input. My data
structures have struct containing

different data types and pointers to multiple different struct (like a
tree).  They are all in C target.

I would like to write a tree walker to walk the data structure and take
appropriate action when a particular value is set inside the input
structure.

 

Any suggestions would be appreciated.

 

Thanks,

Tony

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/40566216/attachment-0001.html 

From pat at tireme.fr  Wed Apr  9 09:03:29 2008
From: pat at tireme.fr (Pierre Attar)
Date: Wed, 09 Apr 2008 18:03:29 +0200
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <76de28b5c7426d4ba0b4bef5d9e936eb@temporal-wave.com>
References: <76de28b5c7426d4ba0b4bef5d9e936eb@temporal-wave.com>
Message-ID: <47FCE8D1.7060605@tireme.fr>

Jim,

I've tried this right capitalization before, this morning in France,  
and it does not works too :
.. FFormParser.c(326) : error C2039: 'displayRecognitionError' : is not 
a member of 'FFormParser_Ctx_struct'
    ..FFormParser.h(317) : see declaration of 'FFormParser_Ctx_struct'

Any other idea ?

Pierre

Jim Idle a ?crit :
> Pierre,
>
> The capitalization is wrong, it is:
>
> displayRecognitionError
>
> Jim
>
>   
>> -----Original Message-----
>> From: Pierre Attar [mailto:pat at tireme.fr]
>> Sent: Wednesday, April 09, 2008 5:53 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] @rulecatch in a C environment
>>
>> Jim,
>>
>> Thanks a lot for your answer. I've now remove all "after" clauses and
>> try to work on the displayrecognitionError function.
>>
>> As you should have notice, I'm not a C guru and trying to do your mind,
>> I got the following error :
>>
>> ..FFormParser.c(326) : error C2039: 'displayrecognitionError' : is not
>> a
>> member of 'FFormParser_Ctx_struct'
>> 2>        ..\antlrgen\FFormParser.h(317) : see declaration of
>> 'FFormParser_Ctx_struct'
>>
>> Which means, I assume, that I also need somewhere to declare the my
>> overwriting function? Can you explain me the way to do that ?
>>
>> Pierre
>>
>> Jim Idle a ?crit :
>>     
>>> We need to add better support so that targets can tell you whether
>>>       
>> the section you are using is supported. @after currently isn't
>> officially supported though I have been playing around with it.
>>     
>>> Rather than try to do this through things like rule catch, just
>>>       
>> override the displayRecognitionError routine, or routines tath are
>> called before that is called if you find a need.
>>     
>>> At that point you can find out everything you would normally need to
>>>       
>> know, including what rule/alt the parser was in and the expected token
>> set (if this can be worked out) and so on.
>>     
>>> >From the C API docs:
>>>
>>> Unless you wish to create your own tree structures using the built in
>>>       
>> ANTLR AST rewriting
>>     
>>> notation, you will rarely need to override the default implementation
>>>       
>> of runtime methods. The
>>     
>>> exception to this will be the syntax err reporting method, which is
>>>       
>> essentially a stub function
>>     
>>> that you will usually want to provide your own implementation for.
>>>       
>> You should consider the built in function
>>     
>>> displayRecognitionError() as an example of where to start as there
>>>       
>> can be no really useful
>>     
>>> generic error message display.
>>>
>>>
>>> In your grammar you can do this:
>>>
>>> @parser::apifuncs
>>> {
>>> 	// Override the standard error display and install my own.
>>>       // Look at the runtime library code to see what the default one
>>>       // does to find things out, then do what I want in my version.
>>>       ..
>>> 	ctx->displayrecognitionError = myDisplayrecognitionError;
>>> }
>>>
>>> Jim
>>>
>>>
>>>       
>>>> -----Original Message-----
>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>> bounces at antlr.org] On Behalf Of Pierre Attar
>>>> Sent: Tuesday, April 08, 2008 6:14 AM
>>>> To: antlr-interest at antlr.org
>>>> Subject: [antlr-interest] @rulecatch in a C environment
>>>>
>>>> Hi,
>>>>
>>>> I want to catch recognition errors on my parsing. In order to
>>>>         
>> achieve
>>     
>>>> this, I've creating the following rulecatch:
>>>>
>>>> @rulecatch {
>>>>     pANTLR3_EXCEPTION exe = EXCEPTION;
>>>>     if(NULL != exe) {
>>>>         char    buffer[100];
>>>>         sprintf(buffer, "\%s", exe->name);
>>>>         cout << "Got an exception in parsing recognition: " <<
>>>>         
>> buffer;;
>>     
>>>>     }
>>>> }
>>>>
>>>> This works fine except that when nothing is provided, the generation
>>>>         
>> is
>>     
>>>> :
>>>>     if (HASEXCEPTION())
>>>>     {PREPORTERROR();
>>>>         PRECOVER(); }
>>>>     else
>>>>     {{resultTree= doc;}}
>>>>
>>>> ... where the line is an @after clause.
>>>>
>>>>
>>>> My problem ? As soon as I put my rulecatcher, the after clause is no
>>>> more generated.
>>>>
>>>> I would be very glad to understand what I've done wrong here and
>>>>         
>> also,
>>     
>>>> if someone have a sample I may clone, it would help me.
>>>>
>>>> Thanks a lot, Pierre
>>>>
>>>>
>>>>
>>>>
>>>>         
>>>
>>>
>>>
>>>
>>>
>>>
>>>       
>
>
>
>
>
>
>
>   


From tirelli at post.com  Wed Apr  9 09:26:39 2008
From: tirelli at post.com (Edson Tirelli)
Date: Wed, 9 Apr 2008 13:26:39 -0300
Subject: [antlr-interest] Are ANTLR grammars space sensitive?
Message-ID: <e6dd5ba30804090926o7310528r1df15a5cb39da13a@mail.gmail.com>

   All,

   While playing with ANTLR during the weekend in my quest for learning
AST/Tree grammars I found an odd situation. The following rule generates
compilation errors:

key_sentence
@init {
        String text = "";
}
    : variable_definition
    | cb=key_chunk { text = $cb.text; }
    -> ^(VT_LITERAL[ $cb.start, text ] )
    ;

   Errors are:

[13:15:53] /tmp/antlrworks/DSLMapParser.java:1313: illegal start of
expression
[13:15:53]                         root_1 =
(Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL,  , ((Token)cb.start),
text ), root_1);
[13:15:53]
^
[13:15:53] /tmp/antlrworks/DSLMapParser.java:1313: ')' expected
[13:15:53]                         root_1 =
(Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL,  , ((Token)cb.start),
text ), root_1);
[13:15:53]
^
[13:15:53] 2 errors

   Removing the spaces from inside the [], fixes the problem:

    -> ^(VT_LITERAL[$cb.start, text] )

   Is this known behavior? bug? I found no reference about it.

   Also, on a related question, as you can see in the rule, I'm using a
dummy "text" variable to capture the text matched by the "key_chunk" rule.
That is because simply writing:

    -> ^(VT_LITERAL[$cb.start, $cb.text] )

   Also generate compilation errors:

[13:23:12] /tmp/antlrworks/DSLMapParser.java:1313: illegal start of
expression
[13:23:12]                         root_1 =
(Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL, ((Token)cb.start),  ,
input.toString(cb.start,cb.stop)), root_1);
[13:23:12]
^
[13:23:12] /tmp/antlrworks/DSLMapParser.java:1313: ')' expected
[13:23:12]                         root_1 =
(Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL, ((Token)cb.start),  ,
input.toString(cb.start,cb.stop)), root_1);
[13:23:12]
^
[13:23:12] 2 errors


    Any idea if it is possible to avoid creating the dummy variable? I just
prefer to keep the grammar as clean as possible...

    Thanks
           Edson

-- 
Edson Tirelli
JBoss Drools Core Development
Office: +55 11 3529-6000
Mobile: +55 11 9287-5646
JBoss, a division of Red Hat @ www.jboss.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/355f00f6/attachment.html 

From jimi at temporal-wave.com  Wed Apr  9 09:55:39 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Apr 2008 09:55:39 -0700
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <47FCE8D1.7060605@tireme.fr>
Message-ID: <ecee7e57104e544da3b7676ccfed88a4@temporal-wave.com>

Doh! we should pay attention the error! ;-)

This method is part of the recognizer interface, hence it is not in the parser context, but the parser context's recognizer pointer:

@parser::apifuncs
{
	RECOGNIZER->displayRecognitionError = xxxxx;
}

> -----Original Message-----
> From: Pierre Attar [mailto:pat at tireme.fr]
> Sent: Wednesday, April 09, 2008 9:03 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] @rulecatch in a C environment
> 
> Jim,
> 
> I've tried this right capitalization before, this morning in France,
> and it does not works too :
> .. FFormParser.c(326) : error C2039: 'displayRecognitionError' : is not
> a member of 'FFormParser_Ctx_struct'
>     ..FFormParser.h(317) : see declaration of 'FFormParser_Ctx_struct'
> 
> Any other idea ?
> 
> Pierre
> 
> Jim Idle a ?crit :
> > Pierre,
> >
> > The capitalization is wrong, it is:
> >
> > displayRecognitionError
> >
> > Jim
> >
> >
> >> -----Original Message-----
> >> From: Pierre Attar [mailto:pat at tireme.fr]
> >> Sent: Wednesday, April 09, 2008 5:53 AM
> >> To: Jim Idle
> >> Cc: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] @rulecatch in a C environment
> >>
> >> Jim,
> >>
> >> Thanks a lot for your answer. I've now remove all "after" clauses
> and
> >> try to work on the displayrecognitionError function.
> >>
> >> As you should have notice, I'm not a C guru and trying to do your
> mind,
> >> I got the following error :
> >>
> >> ..FFormParser.c(326) : error C2039: 'displayrecognitionError' : is
> not
> >> a
> >> member of 'FFormParser_Ctx_struct'
> >> 2>        ..\antlrgen\FFormParser.h(317) : see declaration of
> >> 'FFormParser_Ctx_struct'
> >>
> >> Which means, I assume, that I also need somewhere to declare the my
> >> overwriting function? Can you explain me the way to do that ?
> >>
> >> Pierre
> >>
> >> Jim Idle a ?crit :
> >>
> >>> We need to add better support so that targets can tell you whether
> >>>
> >> the section you are using is supported. @after currently isn't
> >> officially supported though I have been playing around with it.
> >>
> >>> Rather than try to do this through things like rule catch, just
> >>>
> >> override the displayRecognitionError routine, or routines tath are
> >> called before that is called if you find a need.
> >>
> >>> At that point you can find out everything you would normally need
> to
> >>>
> >> know, including what rule/alt the parser was in and the expected
> token
> >> set (if this can be worked out) and so on.
> >>
> >>> >From the C API docs:
> >>>
> >>> Unless you wish to create your own tree structures using the built
> in
> >>>
> >> ANTLR AST rewriting
> >>
> >>> notation, you will rarely need to override the default
> implementation
> >>>
> >> of runtime methods. The
> >>
> >>> exception to this will be the syntax err reporting method, which is
> >>>
> >> essentially a stub function
> >>
> >>> that you will usually want to provide your own implementation for.
> >>>
> >> You should consider the built in function
> >>
> >>> displayRecognitionError() as an example of where to start as there
> >>>
> >> can be no really useful
> >>
> >>> generic error message display.
> >>>
> >>>
> >>> In your grammar you can do this:
> >>>
> >>> @parser::apifuncs
> >>> {
> >>> 	// Override the standard error display and install my own.
> >>>       // Look at the runtime library code to see what the default
> one
> >>>       // does to find things out, then do what I want in my
> version.
> >>>       ..
> >>> 	ctx->displayrecognitionError = myDisplayrecognitionError;
> >>> }
> >>>
> >>> Jim
> >>>
> >>>
> >>>
> >>>> -----Original Message-----
> >>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>>> bounces at antlr.org] On Behalf Of Pierre Attar
> >>>> Sent: Tuesday, April 08, 2008 6:14 AM
> >>>> To: antlr-interest at antlr.org
> >>>> Subject: [antlr-interest] @rulecatch in a C environment
> >>>>
> >>>> Hi,
> >>>>
> >>>> I want to catch recognition errors on my parsing. In order to
> >>>>
> >> achieve
> >>
> >>>> this, I've creating the following rulecatch:
> >>>>
> >>>> @rulecatch {
> >>>>     pANTLR3_EXCEPTION exe = EXCEPTION;
> >>>>     if(NULL != exe) {
> >>>>         char    buffer[100];
> >>>>         sprintf(buffer, "\%s", exe->name);
> >>>>         cout << "Got an exception in parsing recognition: " <<
> >>>>
> >> buffer;;
> >>
> >>>>     }
> >>>> }
> >>>>
> >>>> This works fine except that when nothing is provided, the
> generation
> >>>>
> >> is
> >>
> >>>> :
> >>>>     if (HASEXCEPTION())
> >>>>     {PREPORTERROR();
> >>>>         PRECOVER(); }
> >>>>     else
> >>>>     {{resultTree= doc;}}
> >>>>
> >>>> ... where the line is an @after clause.
> >>>>
> >>>>
> >>>> My problem ? As soon as I put my rulecatcher, the after clause is
> no
> >>>> more generated.
> >>>>
> >>>> I would be very glad to understand what I've done wrong here and
> >>>>
> >> also,
> >>
> >>>> if someone have a sample I may clone, it would help me.
> >>>>
> >>>> Thanks a lot, Pierre
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >
> >
> >
> >
> >
> >
> >
> >





From parrt at cs.usfca.edu  Wed Apr  9 11:06:50 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 9 Apr 2008 11:06:50 -0700
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <D4AC91A7-1309-4887-AF4A-0E9A2D5A54FD@cs.usfca.edu>
References: <47FC11CF.5000909@gmx.de>
	<D4AC91A7-1309-4887-AF4A-0E9A2D5A54FD@cs.usfca.edu>
Message-ID: <2E2ABB7D-50B6-4B98-B140-8EDF409D93B7@cs.usfca.edu>

Please use:

http://www.antlr.org/download/build/antlr-2008-04-09.10.tar.gz

for C#. minor bug fix.
Ter
On Apr 8, 2008, at 8:14 PM, Terence Parr wrote:

> New build is http://www.antlr.org/download/build/antlr-2008-04-08.17.tar.gz 
>  which includes Johannes' C# updates.
> Ter
> On Apr 8, 2008, at 5:46 PM, Johannes Luber wrote:
>
>> Hi!
>>
>> It's time to give you all an update how the C# target will evolve to.
>>
>> The general direction is that I will phase out support for C# 1.0  
>> for ANTLR 3.3, if nothing major comes up (meaning that a user can't  
>> update to .NET 2). I want to split the runtime library into two, so  
>> I can use generics and other stuff.
>>
>> Because of these major changes, I want to have at least one minor  
>> ANTLR version as a testbed. As I didn't find the time to do those  
>> changes for 3.1, the testbed will be 3.2. The reason for this early  
>> announcement is that a bugfix requires the use of a C# 2.0 feature.
>>
>> If you want to use a non-intrinsic value type then you have to use  
>> the new target CSharp2 or to change the template yourself (for all  
>> installations). While the runtime library will work for both  
>> targets, if you want to (and can) futureproof your application then  
>> change the target as soon as possible.
>>
>> I'm also happy to release the beta 1 for the 3.1 C# target: It is  
>> synced with the latest Java changes and compiles all example  
>> grammars successfully. While the changes have been checked in,  
>> there may no intermediate build available yet which includes the  
>> changes. This depends on Ter.
>>
>> Changes include:
>>
>> - Following Java target evolution.
>>
>> - Changed lowercase signatures into uppercase so the runtime  
>> conforms more to C# conventions. For example, $a.tree in grammar,  
>> but a.Tree in code. $-syntax is not affected although the  
>> exceptions compared to Java target will be probably removed (if I  
>> find the source that is). See for  further info on that issue the  
>> wiki. Changes in runtime library may have broken things beyond  
>> simply renaming and converting references.
>>
>> - Broke the IToken dependency for Token, as this didn't make any  
>> sense compared to the Java target. If you derive your class from  
>> Token or use Token as Type, please change that into IToken.
>>
>> - Bug fixes.
>>
>> - No binaries for .Net 1.1 created yet. It is on my todo list.
>>
>> Please send bug reports to this list. In case I've been notified of  
>> this bug already please refrain from reposting until beta 2. I am  
>> still working on those and if I've lost one you will find it out  
>> soon enough.
>>
>> Johannes
>


From parrt at cs.usfca.edu  Wed Apr  9 11:59:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 9 Apr 2008 11:59:55 -0700
Subject: [antlr-interest] Are ANTLR grammars space sensitive?
In-Reply-To: <e6dd5ba30804090926o7310528r1df15a5cb39da13a@mail.gmail.com>
References: <e6dd5ba30804090926o7310528r1df15a5cb39da13a@mail.gmail.com>
Message-ID: <BAE46C2F-7468-4250-911E-6A8D07AB1C79@cs.usfca.edu>

Howdy...yeah, the action parser "sucks" at the moment...sorry. careful  
of spaces in args, actions.
Ter
On Apr 9, 2008, at 9:26 AM, Edson Tirelli wrote:

>
>    All,
>
>    While playing with ANTLR during the weekend in my quest for  
> learning AST/Tree grammars I found an odd situation. The following  
> rule generates compilation errors:
>
> key_sentence
> @init {
>         String text = "";
> }
>     : variable_definition
>     | cb=key_chunk { text = $cb.text; }
>     -> ^(VT_LITERAL[ $cb.start, text ] )
>     ;
>
>    Errors are:
>
> [13:15:53] /tmp/antlrworks/DSLMapParser.java:1313: illegal start of  
> expression
> [13:15:53]                         root_1 =  
> (Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL,  ,  
> ((Token)cb.start),  text ), root_1);
> [13 
> : 
> 15 
> : 
> 53 
> ]                                                                                         ^
> [13:15:53] /tmp/antlrworks/DSLMapParser.java:1313: ')' expected
> [13:15:53]                         root_1 =  
> (Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL,  ,  
> ((Token)cb.start),  text ), root_1);
> [13 
> : 
> 15 
> : 
> 53 
> ]                                                                                                                              ^
> [13:15:53] 2 errors
>
>    Removing the spaces from inside the [], fixes the problem:
>
>     -> ^(VT_LITERAL[$cb.start, text] )
>
>    Is this known behavior? bug? I found no reference about it.
>
>    Also, on a related question, as you can see in the rule, I'm  
> using a dummy "text" variable to capture the text matched by the  
> "key_chunk" rule. That is because simply writing:
>
>     -> ^(VT_LITERAL[$cb.start, $cb.text] )
>
>    Also generate compilation errors:
>
> [13:23:12] /tmp/antlrworks/DSLMapParser.java:1313: illegal start of  
> expression
> [13:23:12]                         root_1 =  
> (Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL,  
> ((Token)cb.start),  , input.toString(cb.start,cb.stop)), root_1);
> [13 
> : 
> 23 
> : 
> 12 
> ]                                                                                                            ^
> [13:23:12] /tmp/antlrworks/DSLMapParser.java:1313: ')' expected
> [13:23:12]                         root_1 =  
> (Object)adaptor.becomeRoot(adaptor.create(VT_LITERAL,  
> ((Token)cb.start),  , input.toString(cb.start,cb.stop)), root_1);
> [13 
> : 
> 23 
> : 
> 12 
> ]                                                                                                                                                        ^
> [13:23:12] 2 errors
>
>
>     Any idea if it is possible to avoid creating the dummy variable?  
> I just prefer to keep the grammar as clean as possible...
>
>     Thanks
>            Edson
>
> -- 
> Edson Tirelli
> JBoss Drools Core Development
> Office: +55 11 3529-6000
> Mobile: +55 11 9287-5646
> JBoss, a division of Red Hat @ www.jboss.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/00e4a49d/attachment.html 

From eamon at nerbonne.org  Wed Apr  9 12:42:43 2008
From: eamon at nerbonne.org (Eamon Nerbonne)
Date: Wed, 9 Apr 2008 21:42:43 +0200
Subject: [antlr-interest] tree grammar namespace option for CSharp target
Message-ID: <16b7b9ec0804091242j56573606o5d2ff9c950112794@mail.gmail.com>

Using C# + ANTLR 3.0.1 (antlrworks 1.1.7), I'd like to place the generated
tree grammar parser in a namespace.  The wiki-docs explain how to do this
for parsers and lexers, but these commands don't work in tree grammars.

The antlr wiki-docs are at
http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target#Antlr3CSharpTarget-Specifyingthenamespaceforyourrecognizer
The (simple) grammar which triggers this is attached, but the problematic
combination is simply:

*tree *grammar ModalFormulaTree;

options {
    language=CSharp;
    tokenVocab=ModalFormulaParser;
}

@parser::namespace { FormulaParser.Generated }

Notably, removing the "tree" from the first line still generates a tree
grammar and no longer complains about an "unknown or invalid action scope
for tree grammar: parser", but the resultant tree grammar is not placed in a
namespace tag.

Is there a different option for tree grammars - or is this a bug?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/64d078a0/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ModalFormulaTree.g
Type: application/octet-stream
Size: 811 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/64d078a0/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ModalFormulaParser.g
Type: application/octet-stream
Size: 939 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/64d078a0/attachment-0001.obj 

From jimi at temporal-wave.com  Wed Apr  9 13:03:33 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Apr 2008 13:03:33 -0700
Subject: [antlr-interest] tree grammar namespace option for CSharp target
In-Reply-To: <16b7b9ec0804091242j56573606o5d2ff9c950112794@mail.gmail.com>
Message-ID: <ff64fc84a813ca499887068f92954968@temporal-wave.com>

Don't remove the tree part, but do remove the @parser:: part and you should find that it works :-)

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Eamon Nerbonne
Sent: Wednesday, April 09, 2008 12:43 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] tree grammar namespace option for CSharp target

 

Using C# + ANTLR 3.0.1 (antlrworks 1.1.7), I'd like to place the generated tree grammar parser in a namespace.  The wiki-docs explain how to do this for parsers and lexers, but these commands don't work in tree grammars.

The antlr wiki-docs are at http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target#Antlr3CSharpTarget-Specifyingthenamespaceforyourrecognizer
The (simple) grammar which triggers this is attached, but the problematic combination is simply:

tree grammar ModalFormulaTree;

options { 
    language=CSharp;
    tokenVocab=ModalFormulaParser;
}

@parser::namespace { FormulaParser.Generated }
 
Notably, removing the "tree" from the first line still generates a tree grammar and no longer complains about an "unknown or invalid action scope for tree grammar: parser", but the resultant tree grammar is not placed in a namespace tag.

Is there a different option for tree grammars - or is this a bug?



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/a3d6b9d1/attachment.html 

From jimi at temporal-wave.com  Wed Apr  9 13:06:32 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 09 Apr 2008 13:06:32 -0700
Subject: [antlr-interest] tree grammar namespace option for CSharp target
In-Reply-To: <ff64fc84a813ca499887068f92954968@temporal-wave.com>
Message-ID: <a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>

I should clarify:

 

@namespace { } 

 

Is what it should be I think.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, April 09, 2008 1:04 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] tree grammar namespace option for CSharp target

 

Don't remove the tree part, but do remove the @parser:: part and you should find that it works :-)

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Eamon Nerbonne
Sent: Wednesday, April 09, 2008 12:43 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] tree grammar namespace option for CSharp target

 

Using C# + ANTLR 3.0.1 (antlrworks 1.1.7), I'd like to place the generated tree grammar parser in a namespace.  The wiki-docs explain how to do this for parsers and lexers, but these commands don't work in tree grammars.

The antlr wiki-docs are at http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target#Antlr3CSharpTarget-Specifyingthenamespaceforyourrecognizer
The (simple) grammar which triggers this is attached, but the problematic combination is simply:

tree grammar ModalFormulaTree;

options { 
    language=CSharp;
    tokenVocab=ModalFormulaParser;
}

@parser::namespace { FormulaParser.Generated }
 
Notably, removing the "tree" from the first line still generates a tree grammar and no longer complains about an "unknown or invalid action scope for tree grammar: parser", but the resultant tree grammar is not placed in a namespace tag.

Is there a different option for tree grammars - or is this a bug?



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/19f38e6a/attachment.html 

From ad_cooney at hotmail.com  Wed Apr  9 14:44:55 2008
From: ad_cooney at hotmail.com (Adam Cooney)
Date: Wed, 9 Apr 2008 22:44:55 +0100
Subject: [antlr-interest] runtime error running Java 1.5 Grammar on 3.1b1..
In-Reply-To: <a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>
References: <ff64fc84a813ca499887068f92954968@temporal-wave.com>
	<a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>
Message-ID: <BLU124-W29C4267BD0B7A65078F3CF84ED0@phx.gbl>


Hi, I've been trying to use John Ridgyway's Improved javaAST grammar and have come across an error when i use it. Just so everythings clear heres the console for everything I did (ie grammars,etc):
 
C:\antlr-3.0b7\lib\Java\project\Grammar>java org.antlr.Tool JavaAST.gANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
 
C:\antlr-3.0b7\lib\Java\project\Grammar>java org.antlr.Tool JavaPrinterTree.gANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
 
C:\antlr-3.0b7\lib\Java\project\Grammar>javac *.javaNote: Some input files use unchecked or unsafe operations.Note: Recompile with -Xlint:unchecked for details.
 
C:\antlr-3.0b7\lib\Java\project\Grammar>java Test Input1b.java!!!!!!!!! memo size is 2, but rule index is 92!!!!!!!!! memo size is 2, but rule index is 91!!!!!!!!! memo size is 2, but rule index is 90!!!!!!!!! memo size is 2, but rule index is 68!!!!!!!!! memo size is 2, but rule index is 41!!!!!!!!! memo size is 2, but rule index is 28!!!!!!!!! memo size is 2, but rule index is 27!!!!!!!!! memo size is 2, but rule index is 25!!!!!!!!! memo size is 2, but rule index is 10!!!!!!!!! memo size is 2, but rule index is 9!!!!!!!!! memo size is 2, but rule index is 5!!!!!!!!! memo size is 2, but rule index is 4Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 4        at org.antlr.runtime.BaseRecognizer.memoize(BaseRecognizer.java:806)        at JavaASTParser.typeDeclaration(JavaASTParser.java:1132)        at JavaASTParser.compilationUnit(JavaASTParser.java:674)        at Test.main(Test.java:35)
 
Heres my classpath(incase its useful):
.;C:\antlr-3.0b7\lib\antlr-3.1.jar;C:\antlr-3.0b7\lib\antlr-2.7.7.jar;C:\antlr-3.0b7\lib\stringtemplate-3.0.jar; C:\antlr-3.0b7\lib\stringtemplate-3.1b1.jar; C:\antlr-3.0b7\lib\runtime-3.1.jar;
 
When I upgrade I've kept the same folder since everytime I changed folder it gave errors (hence why the current version is 3.0b7 folder wise). When I upgraded this time to "antlr-2008-04-09.10" I extracted the whole thing, then I extracted each JAR, and copied the org/antlr.. folder that generated into source. Then I copied the new ANTLR over the old one (thats how I upgraded last time and it worked perfectly lol).
But yeah, any ideas at all? I'm assuming its something I've done since as far as I know it works fine for John.
_________________________________________________________________
The next generation of Windows Live is here
http://www.windowslive.co.uk/get-live
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/c61ea842/attachment-0001.html 

From john at jacelridge.com  Wed Apr  9 15:09:02 2008
From: john at jacelridge.com (John Ridgway)
Date: Wed, 9 Apr 2008 18:09:02 -0400
Subject: [antlr-interest] runtime error running Java 1.5 Grammar on
	3.1b1..
In-Reply-To: <BLU124-W29C4267BD0B7A65078F3CF84ED0@phx.gbl>
References: <ff64fc84a813ca499887068f92954968@temporal-wave.com>
	<a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>
	<BLU124-W29C4267BD0B7A65078F3CF84ED0@phx.gbl>
Message-ID: <A8FB3C72-7F5A-4EF4-8191-4762B8367C12@jacelridge.com>

Adam -
One thing you might try is running java -Xm256M org.antlr.tool JavaAST.g

On Apr 9, 2008, at 5:44 PM, Adam Cooney wrote:

> Hi, I've been trying to use John Ridgyway's Improved javaAST  
> grammar and have come across an error when i use it. Just so  
> everythings clear heres the console for everything I did (ie  
> grammars,etc):
>
> C:\antlr-3.0b7\lib\Java\project\Grammar>java org.antlr.Tool JavaAST.g
> ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
>
> C:\antlr-3.0b7\lib\Java\project\Grammar>java org.antlr.Tool  
> JavaPrinterTree.g
> ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
>
> C:\antlr-3.0b7\lib\Java\project\Grammar>javac *.java
> Note: Some input files use unchecked or unsafe operations.
> Note: Recompile with -Xlint:unchecked for details.
>
> C:\antlr-3.0b7\lib\Java\project\Grammar>java Test Input1b.java
> !!!!!!!!! memo size is 2, but rule index is 92
> !!!!!!!!! memo size is 2, but rule index is 91
> !!!!!!!!! memo size is 2, but rule index is 90
> !!!!!!!!! memo size is 2, but rule index is 68
> !!!!!!!!! memo size is 2, but rule index is 41
> !!!!!!!!! memo size is 2, but rule index is 28
> !!!!!!!!! memo size is 2, but rule index is 27
> !!!!!!!!! memo size is 2, but rule index is 25
> !!!!!!!!! memo size is 2, but rule index is 10
> !!!!!!!!! memo size is 2, but rule index is 9
> !!!!!!!!! memo size is 2, but rule index is 5
> !!!!!!!!! memo size is 2, but rule index is 4
> Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 4
>         at org.antlr.runtime.BaseRecognizer.memoize 
> (BaseRecognizer.java:806)
>         at JavaASTParser.typeDeclaration(JavaASTParser.java:1132)
>         at JavaASTParser.compilationUnit(JavaASTParser.java:674)
>         at Test.main(Test.java:35)
>
> Heres my classpath(incase its useful):
> .;C:\antlr-3.0b7\lib\antlr-3.1.jar;C:\antlr-3.0b7\lib 
> \antlr-2.7.7.jar;C:\antlr-3.0b7\lib\stringtemplate-3.0.jar; C: 
> \antlr-3.0b7\lib\stringtemplate-3.1b1.jar; C:\antlr-3.0b7\lib 
> \runtime-3.1.jar;
>
> When I upgrade I've kept the same folder since everytime I changed  
> folder it gave errors (hence why the current version is 3.0b7  
> folder wise). When I upgraded this time to "antlr-2008-04-09.10" I  
> extracted the whole thing, then I extracted each JAR, and copied  
> the org/antlr.. folder that generated into source. Then I copied  
> the new ANTLR over the old one (thats how I upgraded last time and  
> it worked perfectly lol).
>
> But yeah, any ideas at all? I'm assuming its something I've done  
> since as far as I know it works fine for John.
>
> Get fish-slapping on Messenger Play now!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080409/e39c4c12/attachment.html 

From alexander at gaengel.de  Wed Apr  9 16:27:36 2008
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Thu, 10 Apr 2008 01:27:36 +0200
Subject: [antlr-interest] rule returns
Message-ID: <47FD50E8.4050507@gaengel.de>

I am wonder in if it is possible to define a rule return with the name 
of an predefined rule attribute.

so I tested it an it is possible. And don't get an Warning. I don't 
think this behavior is intended.

here my test Grammar:

    rule    :
            subrule+ {System.out.println($subrule.text);} EOF
        ;

    subrule returns[String text] :Identifier;

    Identifier
        :   ('a'..'z'|'A'..'Z'|) ;

for the Input test I get the Output null

it I remove the return statement from subrule the input test generates 
the Output test

Alexander



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/1133df52/attachment.html 

From open.zone at virgin.net  Wed Apr  9 17:56:29 2008
From: open.zone at virgin.net (Micheal J)
Date: Thu, 10 Apr 2008 01:56:29 +0100
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <47FC11CF.5000909@gmx.de>
References: <47FC11CF.5000909@gmx.de>
Message-ID: <008701c89aa5$b7a7adc0$0200a8c0@marion>

Johannes, 

> Hi!
> 
> It's time to give you all an update how the C# target will evolve to.
> 
> The general direction is that I will phase out support for C# 
> 1.0 for ANTLR 3.3, if nothing major comes up (meaning that a 
> user can't update to .NET 2). I want to split the runtime 
> library into two, so I can use generics and other stuff.
>
> Because of these major changes, I want to have at least one 
> minor ANTLR version as a testbed. As I didn't find the time 
> to do those changes for 3.1, the testbed will be 3.2. The 
> reason for this early announcement is that a bugfix requires 
> the use of a C# 2.0 feature.

Is this fix and the C# 2.0 dependency indicated in the depot logs?

[UPDATE: can't see any notes to that effect in the logs. What change no.
should I look at?]

> If you want to use a non-intrinsic value type then you have 
> to use the new target CSharp2 or to change the template 
> yourself (for all installations). While the runtime library 
> will work for both targets, if you want to (and can) 
> futureproof your application then change the target as soon 
> as possible.

One can use any value type with the 'CSharp' target already AFAICT. Does the
new 'CSharp2' target remove the need to update the 'csharpTypeInitMap'
default value map in the templates for unspecified value types?

> I'm also happy to release the beta 1 for the 3.1 C# target: 
> It is synced with the latest Java changes and compiles all 
> example grammars successfully. While the changes have been 
> checked in, there may no intermediate build available yet 
> which includes the changes. This depends on Ter.
> 
> Changes include:
> 
> - Following Java target evolution.
> 
> - Changed lowercase signatures into uppercase so the runtime 
> conforms more to C# conventions. For example, $a.tree in 
> grammar, but a.Tree in code. $-syntax is not affected 
> although the exceptions compared to Java target will be 
> probably removed (if I find the source that is).

I don't understand what you mean here. What exceptions are these?. Exception
types?. Could you supply example(s) to illustrate perhaps?

> See for
>   further info on that issue the wiki. Changes in runtime 
> library may have broken things beyond simply renaming and 
> converting references.

Do you have a URL to the appropriate place in the wiki please?

> - Broke the IToken dependency for Token, as this didn't make 
> any sense compared to the Java target. If you derive your 
> class from Token or use Token as Type, please change that into IToken.

Interesting. What problem/issue was solved by removing Token as the abstract
base class for all the token types included with ANTLR? Had quick look at
the diffs and nothing jumped out.

> - Bug fixes.
> 
> - No binaries for .Net 1.1 created yet. It is on my todo list.

If you have .NET v1.1 and .NET v2 installed on your box (or in a VM), the
Nant script takes care of building both:
   nant release -t:net-1.1 
   nant release -t:net-2.0 


Nice to see C# up and running again. Good job.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From elekis at gmail.com  Wed Apr  9 23:06:32 2008
From: elekis at gmail.com (elekis)
Date: Thu, 10 Apr 2008 08:06:32 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <47FC5D1A.8060406@xs4all.nl>
References: <47FC5082.7020101@gmail.com> <47FC5D1A.8060406@xs4all.nl>
Message-ID: <47FDAE68.7030706@gmail.com>

re-hi,

I thing I found where is the prob, but I have no idea  how to patch it.
there is the code I wanna scan:

FROM fslkdfjsl IMPORT lskfjslk;
FROM fslkdfjl IMPORT ldsfkjdjkfl;

easy isnt -it

and there is what getNextToken, getoffset and getlength return.
TOKEN -->FROM<--
OFFSET: 0
SIZE: 4
--------------------------------
TOKEN --> <--
OFFSET: 4
SIZE: 1
--------------------------------
TOKEN -->fslkdfjsl<--
OFFSET: 5
SIZE: 9
--------------------------------
TOKEN --> <--
OFFSET: 14
SIZE: 1
--------------------------------
TOKEN -->IMPORT<--
OFFSET: 15
SIZE: 6
--------------------------------
TOKEN --> <--
OFFSET: 21
SIZE: 1
--------------------------------
TOKEN -->lskfjslk<--
OFFSET: 22
SIZE: 8
--------------------------------
TOKEN -->;<--
OFFSET: 30
SIZE: 1
--------------------------------
                                        PROBLEME HERE WHY SIZE  = 2
TOKEN -->
<--
SIZE: 2

 etc....etc...

there is my switch  and WS is define like that
WS                          :(' '|'\r'|'\t'|'\u000C'|'\n')+; 

switch (antCurrentToken.getType()) {
        case LyaflplugLexer.WS:
            return Token.WHITESPACE;
        case LyaflplugLexer.TAG_POINT_VIRGULE:
            return Token.UNDEFINED;
        case LyaflplugLexer.TAG_END:
        case LyaflplugLexer.TAG_DEFINITION_MODULE:
        case LyaflplugLexer.TAG_FROM:
        case LyaflplugLexer.TAG_IMPORT:
            return keyword;
        case LyaflplugLexer.Ident:
            return ident;
        default:
            return Token.UNDEFINED;
        }

What I don't understand is why the size is 2??? there only one \n. any 
idea??
thanks

a+++;



Jan van der Ven a ?crit :
> Dear Julien,
>
> I remember having the same kind of problems. Please check the way we 
> fixed it here:
> http://quantum.cvs.sourceforge.net/quantum/quantum-plugin/src/com/quantum/editors/SQL2ScannerWithLexer.java?view=log 
>
> If I remember correctly, the setRange is sometimes called with illegal 
> values for offset and/or length.
>
> Happy coding,
>
> Jan
>
> julien wrote:
>> hi all, I try to make a plugin who can colorize some line like
>>
>> FROM lkfsjdl IMPORT lskdfjl;
>> FROM lkfsjdl IMPORT lskdfjl;
>>
>> Based on my own grammar created with ANTLR 3.0.
>>
>> for that, I overrided ITokenScanner.
>>
>>     public IToken nextToken() {
>>
>>         antCurrentToken = lexer.nextToken();
>>         if (antCurrentToken.getType() == org.antlr.runtime.Token.EOF)
>>             return Token.EOF;
>>         switch (antCurrentToken.getType()) {
>>         case LyaflplugLexer.TAG_END:
>>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
>>         case LyaflplugLexer.TAG_FROM:
>>         case LyaflplugLexer.TAG_IMPORT:
>>             return keyword;
>>         default:
>>             return ident;
>>         }
>>     }
>>
>> The problem is : if the file is empty then I can create twho line
>>
>> FROM lkfsjdl IMPORT lskdfjl;
>> FROM lkfsjdl IMPORT lskdfjl;
>>
>> he color eatch word etc... everything is perfect but if I save and I 
>> reopen the file he bug cause theres are two line who are the same.  
>> (if there is only one, no prob).
>>
>> I ve tried to debug and he call every token. but after that there is 
>> a exception error Argument No valid.
>>
>> is any body has a idea: I there is the class code
>> http://paste.ubuntu-nl.org/62601/
>>
>> thanks
>>
>> a++
>>
>> PS: this message is sended on antlr-interest and eclipse.platform
>> -----------------------------------------------------------------------
>>
>> PPS: there is the stack.
>>
>>
>> java.lang.IllegalArgumentException: Argument not valid
>>     at org.eclipse.swt.SWT.error(SWT.java:3547)
>>     at org.eclipse.swt.SWT.error(SWT.java:3481)
>>     at org.eclipse.swt.SWT.error(SWT.java:3452)
>>     at 
>> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7776)
>>     at 
>> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7870)
>>     at 
>> org.eclipse.jface.text.TextViewer.applyTextPresentation(TextViewer.java:4429) 
>>
>>     at 
>> org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java:4481) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegionCollection(PresentationReconciler.java:580) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(PresentationReconciler.java:569) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler.access$3(PresentationReconciler.java:565) 
>>
>>     at 
>> org.eclipse.jface.text.presentation.PresentationReconciler$InternalListener.inputDocumentChanged(PresentationReconciler.java:119) 
>>
>>     at 
>> org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java:2685) 
>>
>>     at 
>> org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2734)
>>     at 
>> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:518) 
>>
>>     at 
>> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:473) 
>>
>>     at 
>> org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(AbstractTextEditor.java:3786) 
>>
>>     at 
>> org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:3332) 
>>
>>     at 
>> org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53) 
>>
>>     at 
>> org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:378) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:426) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:592) 
>>
>>     at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)
>>     at 
>> org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:179) 
>>
>>     at 
>> org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268) 
>>
>>     at 
>> org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65) 
>>
>>     at 
>> org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:400) 
>>
>>     at 
>> org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1256) 
>>
>>     at 
>> org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
>>     at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1604)
>>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:499)
>>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
>>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:485)
>>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
>>     at 
>> org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.java:63) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java:217) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:207) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:774) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:673) 
>>
>>     at 
>> org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2737) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2651) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
>>     at 
>> org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574) 
>>
>>     at 
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565) 
>>
>>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)
>>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)
>>     at 
>> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:286) 
>>
>>     at 
>> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:139) 
>>
>>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
>>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
>>     at 
>> org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268) 
>>
>>     at 
>> org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244) 
>>
>>     at 
>> org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:316) 
>>
>>     at 
>> org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(PackageExplorerPart.java:613) 
>>
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820) 
>>
>>     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
>>     at org.eclipse.core.runtime.Platform.run(Platform.java:857)
>>     at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
>>     at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:818) 
>>
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1079) 
>>
>>     at 
>> org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1183) 
>>
>>     at 
>> org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
>>     at 
>> org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
>>     at 
>> org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
>>     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
>>     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
>>     at 
>> org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
>>     at 
>> org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
>>     at 
>> org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
>>     at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
>>     at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
>>     at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
>>     at 
>> org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289) 
>>
>>     at 
>> org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461) 
>>
>>     at 
>> org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
>>     at 
>> org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106) 
>>
>>     at 
>> org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169) 
>>
>>     at 
>> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106) 
>>
>>     at 
>> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76) 
>>
>>     at 
>> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363) 
>>
>>     at 
>> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176) 
>>
>>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
>>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
>>     at java.lang.reflect.Method.invoke(Unknown Source)
>>     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
>>     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
>>     at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
>>     at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
>>
>>
>>
>>
>



From antlr at zavalon.com  Wed Apr  9 23:12:46 2008
From: antlr at zavalon.com (Nev)
Date: Thu, 10 Apr 2008 16:12:46 +1000
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <47FDAE68.7030706@gmail.com>
Message-ID: <6qobb0$2blcbm@ipmail01.adl6.internode.on.net>

Are you running on Windows. Likely to have \r\n at end of each line.
Nev

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of elekis
> Sent: Thursday, 10 April 2008 4:07 PM
> To: Jan van der Ven; ANTLRDev Interest
> Subject: Re: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
> 
> re-hi,
> 
> I thing I found where is the prob, but I have no idea  how to patch it.
> there is the code I wanna scan:
> 
> FROM fslkdfjsl IMPORT lskfjslk;
> FROM fslkdfjl IMPORT ldsfkjdjkfl;
> 
> easy isnt -it
> 
> and there is what getNextToken, getoffset and getlength return.
> TOKEN -->FROM<--
> OFFSET: 0
> SIZE: 4
> --------------------------------
> TOKEN --> <--
> OFFSET: 4
> SIZE: 1
> --------------------------------
> TOKEN -->fslkdfjsl<--
> OFFSET: 5
> SIZE: 9
> --------------------------------
> TOKEN --> <--
> OFFSET: 14
> SIZE: 1
> --------------------------------
> TOKEN -->IMPORT<--
> OFFSET: 15
> SIZE: 6
> --------------------------------
> TOKEN --> <--
> OFFSET: 21
> SIZE: 1
> --------------------------------
> TOKEN -->lskfjslk<--
> OFFSET: 22
> SIZE: 8
> --------------------------------
> TOKEN -->;<--
> OFFSET: 30
> SIZE: 1
> --------------------------------
>                                         PROBLEME HERE WHY SIZE  = 2
> TOKEN -->
> <--
> SIZE: 2
> 
>  etc....etc...
> 
> there is my switch  and WS is define like that
> WS                          :(' '|'\r'|'\t'|'\u000C'|'\n')+;
> 
> switch (antCurrentToken.getType()) {
>         case LyaflplugLexer.WS:
>             return Token.WHITESPACE;
>         case LyaflplugLexer.TAG_POINT_VIRGULE:
>             return Token.UNDEFINED;
>         case LyaflplugLexer.TAG_END:
>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
>         case LyaflplugLexer.TAG_FROM:
>         case LyaflplugLexer.TAG_IMPORT:
>             return keyword;
>         case LyaflplugLexer.Ident:
>             return ident;
>         default:
>             return Token.UNDEFINED;
>         }
> 
> What I don't understand is why the size is 2??? there only one \n. any
> idea??
> thanks
> 
> a+++;
> 
> 
> 
> Jan van der Ven a ?crit :
> > Dear Julien,
> >
> > I remember having the same kind of problems. Please check the way we
> > fixed it here:
> > http://quantum.cvs.sourceforge.net/quantum/quantum-
> plugin/src/com/quantum/editors/SQL2ScannerWithLexer.java?view=log
> >
> > If I remember correctly, the setRange is sometimes called with illegal
> > values for offset and/or length.
> >
> > Happy coding,
> >
> > Jan
> >
> > julien wrote:
> >> hi all, I try to make a plugin who can colorize some line like
> >>
> >> FROM lkfsjdl IMPORT lskdfjl;
> >> FROM lkfsjdl IMPORT lskdfjl;
> >>
> >> Based on my own grammar created with ANTLR 3.0.
> >>
> >> for that, I overrided ITokenScanner.
> >>
> >>     public IToken nextToken() {
> >>
> >>         antCurrentToken = lexer.nextToken();
> >>         if (antCurrentToken.getType() == org.antlr.runtime.Token.EOF)
> >>             return Token.EOF;
> >>         switch (antCurrentToken.getType()) {
> >>         case LyaflplugLexer.TAG_END:
> >>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
> >>         case LyaflplugLexer.TAG_FROM:
> >>         case LyaflplugLexer.TAG_IMPORT:
> >>             return keyword;
> >>         default:
> >>             return ident;
> >>         }
> >>     }
> >>
> >> The problem is : if the file is empty then I can create twho line
> >>
> >> FROM lkfsjdl IMPORT lskdfjl;
> >> FROM lkfsjdl IMPORT lskdfjl;
> >>
> >> he color eatch word etc... everything is perfect but if I save and I
> >> reopen the file he bug cause theres are two line who are the same.
> >> (if there is only one, no prob).
> >>
> >> I ve tried to debug and he call every token. but after that there is
> >> a exception error Argument No valid.
> >>
> >> is any body has a idea: I there is the class code
> >> http://paste.ubuntu-nl.org/62601/
> >>
> >> thanks
> >>
> >> a++
> >>
> >> PS: this message is sended on antlr-interest and eclipse.platform
> >> -----------------------------------------------------------------------
> >>
> >> PPS: there is the stack.
> >>
> >>
> >> java.lang.IllegalArgumentException: Argument not valid
> >>     at org.eclipse.swt.SWT.error(SWT.java:3547)
> >>     at org.eclipse.swt.SWT.error(SWT.java:3481)
> >>     at org.eclipse.swt.SWT.error(SWT.java:3452)
> >>     at
> >> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7776)
> >>     at
> >> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7870)
> >>     at
> >>
> org.eclipse.jface.text.TextViewer.applyTextPresentation(TextViewer.java:44
> 29)
> >>
> >>     at
> >>
> org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java:4
> 481)
> >>
> >>     at
> >>
> org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegion
> Collection(PresentationReconciler.java:580)
> >>
> >>     at
> >>
> org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(P
> resentationReconciler.java:569)
> >>
> >>     at
> >>
> org.eclipse.jface.text.presentation.PresentationReconciler.access$3(Presen
> tationReconciler.java:565)
> >>
> >>     at
> >>
> org.eclipse.jface.text.presentation.PresentationReconciler$InternalListene
> r.inputDocumentChanged(PresentationReconciler.java:119)
> >>
> >>     at
> >>
> org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java
> :2685)
> >>
> >>     at
> >> org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2734)
> >>     at
> >>
> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:5
> 18)
> >>
> >>     at
> >>
> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:4
> 73)
> >>
> >>     at
> >>
> org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(Abstra
> ctTextEditor.java:3786)
> >>
> >>     at
> >>
> org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTex
> tEditor.java:3332)
> >>
> >>     at
> >>
> org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEdi
> tor.java:53)
> >>
> >>     at
> >>
> org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(Ab
> stractDecoratedTextEditor.java:378)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.j
> ava:661)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:42
> 6)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartRefere
> nce.java:592)
> >>
> >>     at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)
> >>     at
> >>
> org.eclipse.ui.internal.presentations.PresentablePart.setVisible(Presentab
> lePart.java:179)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(Pr
> esentablePartFolder.java:268)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(Left
> ToRightTabOrder.java:65)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectP
> art(TabbedStackPresentation.java:400)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.j
> ava:1256)
> >>
> >>     at
> >> org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
> >>     at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1604)
> >>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:499)
> >>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
> >>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:485)
> >>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
> >>     at
> >>
> org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
> java:63)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java
> :217)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:2
> 07)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:7
> 74)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManag
> er.java:673)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.
> java:2737)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:26
> 51)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
> >>     at
> >> org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
> >>     at
> >> org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565)
> >>
> >>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)
> >>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)
> >>     at
> >>
> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUt
> ility.java:286)
> >>
> >>     at
> >>
> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUt
> ility.java:139)
> >>
> >>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
> >>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
> >>     at
> >>
> org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDi
> spatchAction.java:268)
> >>
> >>     at
> >>
> org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAc
> tion.java:244)
> >>
> >>     at
> >>
> org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleO
> pen(PackageExplorerActionGroup.java:316)
> >>
> >>     at
> >>
> org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(Package
> ExplorerPart.java:613)
> >>
> >>     at
> >>
> org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820
> )
> >>
> >>     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
> >>     at org.eclipse.core.runtime.Platform.run(Platform.java:857)
> >>     at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
> >>     at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
> >>     at
> >>
> org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:
> 818)
> >>
> >>     at
> >>
> org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.jav
> a:1079)
> >>
> >>     at
> >>
> org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.j
> ava:1183)
> >>
> >>     at
> >>
> org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
> >>     at
> >> org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
> >>     at
> >>
> org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
> >>     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
> >>     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
> >>     at
> >> org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
> >>     at
> >> org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
> >>     at
> >> org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
> >>     at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
> >>     at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
> >>     at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
> >>     at
> >>
> org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:28
> 9)
> >>
> >>     at
> >>
> org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461
> )
> >>
> >>     at
> >> org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
> >>     at
> >>
> org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplicatio
> n.java:106)
> >>
> >>     at
> >>
> org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.jav
> a:169)
> >>
> >>     at
> >>
> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplicatio
> n(EclipseAppLauncher.java:106)
> >>
> >>     at
> >>
> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(Eclipse
> AppLauncher.java:76)
> >>
> >>     at
> >>
> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:36
> 3)
> >>
> >>     at
> >>
> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:17
> 6)
> >>
> >>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> >>     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
> >>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
> >>     at java.lang.reflect.Method.invoke(Unknown Source)
> >>     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
> >>     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
> >>     at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
> >>     at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
> >>
> >>
> >>
> >>
> >



From christian.schladetsch at gmail.com  Wed Apr  9 23:29:00 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Thu, 10 Apr 2008 18:29:00 +1200
Subject: [antlr-interest] Build errors for ANTLR 3.13
Message-ID: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>

Hello,

When attempting to build ANTLR  3.13 from source, I get a set of 'duplicate
class' compile-time errors in generated code:

generator-prepare:
    [mkdir] Created dir: E:\Dev\Antlr\antlr-2008-03-13.12\codegen
     [copy] Copying 6 files to E:\Dev\Antlr\antlr-2008-03-13.12\codegen

generator:
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:904:
warning:nongreedy block may exit incorrectly due
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:904:         to
limitations of linear approximate lookahead (first k-1 sets
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:904:         in
lookahead not singleton).
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:1082:
warning:nongreedy block may exit incorrectly due
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:1082:
 to limitations of linear approximate lookahead (first k-1 sets
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:1082:
 in lookahead not singleton).
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\assign.types.g:387:18:
warning:Rule 'optionsSpec' returns a value
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\assign.types.g:467:13:
warning:Rule 'optionsSpec' returns a value
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\assign.types.g:490:14:
warning:Rule 'optionsSpec' returns a value
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\buildnfa.g:297:19:
warning:Rule 'atom' returns a value
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\buildnfa.g:297:32:
warning:Rule 'atom' returns a value
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\buildnfa.g:309:20:
warning:Rule 'block' returns a value
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005
    [antlr] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\define.g:252:24:
warning:Rule 'modifier' returns a value
    [antlr] ANTLR Parser Generator   Version 2.7.7 (20060906)   1989-2005

compile-rt:
    [mkdir] Created dir: E:\Dev\Antlr\antlr-2008-03-13.12\build\rtclasses
  [myjavac] Compiling 74 source files to
E:\Dev\Antlr\antlr-2008-03-13.12\build\rtclasses
  [myjavac] Note: Some input files use unchecked or unsafe operations.
  [myjavac] Note: Recompile with -Xlint:unchecked for details.

compile:
    [mkdir] Created dir: E:\Dev\Antlr\antlr-2008-03-13.12\build\classes
  [myjavac] Compiling 141 source files to
E:\Dev\Antlr\antlr-2008-03-13.12\build\classes
  [myjavac] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\ANTLRLexer.java:61:
duplicate class: org.antlr.tool.ANTLRLexer
  [myjavac] public class ANTLRLexer extends antlr.CharScanner implements
ANTLRTokenTypes, TokenStream
  [myjavac]        ^
  [myjavac] E:\Dev\Antlr\antlr-2008-03-13.12\codegen\ANTLRParser.java:72:
duplicate class: org.antlr.tool.ANTLRParser
  [myjavac] public class ANTLRParser extends antlr.LLkParser
implements ANTLRTokenTypes
  [myjavac]        ^
  [myjavac]
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\ANTLRTokenTypes.java:37: duplicate
class: org.antlr.tool.ANTLRTokenTypes
  [myjavac] public interface ANTLRTokenTypes {
  [myjavac]        ^

Any suggestions would be greatly appreciated.

Regards,
Chrisian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/72493039/attachment.html 

From mail at martin-probst.com  Thu Apr 10 00:53:05 2008
From: mail at martin-probst.com (Martin Probst)
Date: Thu, 10 Apr 2008 09:53:05 +0200
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>
References: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>
Message-ID: <87FB2728-A7A5-4462-8854-9E832AA4F5D6@martin-probst.com>

Hi,

> When attempting to build ANTLR  3.13 from source, I get a set of  
> 'duplicate
> class' compile-time errors in generated code:


I ran into this, too. The build.xml file is erroneous in some way. It  
generates the parsers used by ANTLR in (I think) ./generated, and  
includes that on the build path. But at the same time, these classes  
already come checked in with the source in ./src.

I fixed this by manually copying the generated java sources  
and .tokens files from ./generated to ./src and removing ./generated  
from build.path in build.xml.

It would be nice though to have a working build file. I have no idea  
why the generated files are checked in and included in ./src, I think  
this is rather bad practice.

Regards,
Martin

From elekis at gmail.com  Thu Apr 10 00:57:07 2008
From: elekis at gmail.com (elekis)
Date: Thu, 10 Apr 2008 09:57:07 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <6qobb0$2blcbm@ipmail01.adl6.internode.on.net>
References: <6qobb0$2blcbm@ipmail01.adl6.internode.on.net>
Message-ID: <47FDC853.2070603@gmail.com>

Nev a ?crit :
> Are you running on Windows. Likely to have \r\n at end of each line.
> Nev
>
>   
Yes I run under windows.  but is it in eclipse or in antlr that I have 
to patch??
thanks

a++


>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of elekis
>> Sent: Thursday, 10 April 2008 4:07 PM
>> To: Jan van der Ven; ANTLRDev Interest
>> Subject: Re: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
>>
>> re-hi,
>>
>> I thing I found where is the prob, but I have no idea  how to patch it.
>> there is the code I wanna scan:
>>
>> FROM fslkdfjsl IMPORT lskfjslk;
>> FROM fslkdfjl IMPORT ldsfkjdjkfl;
>>
>> easy isnt -it
>>
>> and there is what getNextToken, getoffset and getlength return.
>> TOKEN -->FROM<--
>> OFFSET: 0
>> SIZE: 4
>> --------------------------------
>> TOKEN --> <--
>> OFFSET: 4
>> SIZE: 1
>> --------------------------------
>> TOKEN -->fslkdfjsl<--
>> OFFSET: 5
>> SIZE: 9
>> --------------------------------
>> TOKEN --> <--
>> OFFSET: 14
>> SIZE: 1
>> --------------------------------
>> TOKEN -->IMPORT<--
>> OFFSET: 15
>> SIZE: 6
>> --------------------------------
>> TOKEN --> <--
>> OFFSET: 21
>> SIZE: 1
>> --------------------------------
>> TOKEN -->lskfjslk<--
>> OFFSET: 22
>> SIZE: 8
>> --------------------------------
>> TOKEN -->;<--
>> OFFSET: 30
>> SIZE: 1
>> --------------------------------
>>                                         PROBLEME HERE WHY SIZE  = 2
>> TOKEN -->
>> <--
>> SIZE: 2
>>
>>  etc....etc...
>>
>> there is my switch  and WS is define like that
>> WS                          :(' '|'\r'|'\t'|'\u000C'|'\n')+;
>>
>> switch (antCurrentToken.getType()) {
>>         case LyaflplugLexer.WS:
>>             return Token.WHITESPACE;
>>         case LyaflplugLexer.TAG_POINT_VIRGULE:
>>             return Token.UNDEFINED;
>>         case LyaflplugLexer.TAG_END:
>>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
>>         case LyaflplugLexer.TAG_FROM:
>>         case LyaflplugLexer.TAG_IMPORT:
>>             return keyword;
>>         case LyaflplugLexer.Ident:
>>             return ident;
>>         default:
>>             return Token.UNDEFINED;
>>         }
>>
>> What I don't understand is why the size is 2??? there only one \n. any
>> idea??
>> thanks
>>
>> a+++;
>>
>>
>>
>> Jan van der Ven a ?crit :
>>     
>>> Dear Julien,
>>>
>>> I remember having the same kind of problems. Please check the way we
>>> fixed it here:
>>> http://quantum.cvs.sourceforge.net/quantum/quantum-
>>>       
>> plugin/src/com/quantum/editors/SQL2ScannerWithLexer.java?view=log
>>     
>>> If I remember correctly, the setRange is sometimes called with illegal
>>> values for offset and/or length.
>>>
>>> Happy coding,
>>>
>>> Jan
>>>
>>> julien wrote:
>>>       
>>>> hi all, I try to make a plugin who can colorize some line like
>>>>
>>>> FROM lkfsjdl IMPORT lskdfjl;
>>>> FROM lkfsjdl IMPORT lskdfjl;
>>>>
>>>> Based on my own grammar created with ANTLR 3.0.
>>>>
>>>> for that, I overrided ITokenScanner.
>>>>
>>>>     public IToken nextToken() {
>>>>
>>>>         antCurrentToken = lexer.nextToken();
>>>>         if (antCurrentToken.getType() == org.antlr.runtime.Token.EOF)
>>>>             return Token.EOF;
>>>>         switch (antCurrentToken.getType()) {
>>>>         case LyaflplugLexer.TAG_END:
>>>>         case LyaflplugLexer.TAG_DEFINITION_MODULE:
>>>>         case LyaflplugLexer.TAG_FROM:
>>>>         case LyaflplugLexer.TAG_IMPORT:
>>>>             return keyword;
>>>>         default:
>>>>             return ident;
>>>>         }
>>>>     }
>>>>
>>>> The problem is : if the file is empty then I can create twho line
>>>>
>>>> FROM lkfsjdl IMPORT lskdfjl;
>>>> FROM lkfsjdl IMPORT lskdfjl;
>>>>
>>>> he color eatch word etc... everything is perfect but if I save and I
>>>> reopen the file he bug cause theres are two line who are the same.
>>>> (if there is only one, no prob).
>>>>
>>>> I ve tried to debug and he call every token. but after that there is
>>>> a exception error Argument No valid.
>>>>
>>>> is any body has a idea: I there is the class code
>>>> http://paste.ubuntu-nl.org/62601/
>>>>
>>>> thanks
>>>>
>>>> a++
>>>>
>>>> PS: this message is sended on antlr-interest and eclipse.platform
>>>> -----------------------------------------------------------------------
>>>>
>>>> PPS: there is the stack.
>>>>
>>>>
>>>> java.lang.IllegalArgumentException: Argument not valid
>>>>     at org.eclipse.swt.SWT.error(SWT.java:3547)
>>>>     at org.eclipse.swt.SWT.error(SWT.java:3481)
>>>>     at org.eclipse.swt.SWT.error(SWT.java:3452)
>>>>     at
>>>> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7776)
>>>>     at
>>>> org.eclipse.swt.custom.StyledText.setStyleRanges(StyledText.java:7870)
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.TextViewer.applyTextPresentation(TextViewer.java:44
>> 29)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.TextViewer.changeTextPresentation(TextViewer.java:4
>> 481)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.presentation.PresentationReconciler.applyTextRegion
>> Collection(PresentationReconciler.java:580)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.presentation.PresentationReconciler.processDamage(P
>> resentationReconciler.java:569)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.presentation.PresentationReconciler.access$3(Presen
>> tationReconciler.java:565)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.presentation.PresentationReconciler$InternalListene
>> r.inputDocumentChanged(PresentationReconciler.java:119)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.TextViewer.fireInputDocumentChanged(TextViewer.java
>> :2685)
>>     
>>>>     at
>>>> org.eclipse.jface.text.TextViewer.setDocument(TextViewer.java:2734)
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:5
>> 18)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:4
>> 73)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.texteditor.AbstractTextEditor.initializeSourceViewer(Abstra
>> ctTextEditor.java:3786)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTex
>> tEditor.java:3332)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEdi
>> tor.java:53)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(Ab
>> stractDecoratedTextEditor.java:378)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.j
>> ava:661)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:42
>> 6)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartRefere
>> nce.java:592)
>>     
>>>>     at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:299)
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.presentations.PresentablePart.setVisible(Presentab
>> lePart.java:179)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(Pr
>> esentablePartFolder.java:268)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(Left
>> ToRightTabOrder.java:65)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectP
>> art(TabbedStackPresentation.java:400)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.j
>> ava:1256)
>>     
>>>>     at
>>>> org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1209)
>>>>     at org.eclipse.ui.internal.PartStack.showPart(PartStack.java:1604)
>>>>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:499)
>>>>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:103)
>>>>     at org.eclipse.ui.internal.PartStack.add(PartStack.java:485)
>>>>     at org.eclipse.ui.internal.EditorStack.add(EditorStack.java:112)
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorSashContainer.addEditor(EditorSashContainer.
>> java:63)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorAreaHelper.addToLayout(EditorAreaHelper.java
>> :217)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorAreaHelper.addEditor(EditorAreaHelper.java:2
>> 07)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:7
>> 74)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManag
>> er.java:673)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:634)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.
>> java:2737)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:26
>> 51)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPage.access$13(WorkbenchPage.java:2643)
>>     
>>>>     at
>>>> org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2595)
>>>>     at
>>>> org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2590)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2574)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2565)
>>     
>>>>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:644)
>>>>     at org.eclipse.ui.ide.IDE.openEditor(IDE.java:603)
>>>>     at
>>>>
>>>>         
>> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUt
>> ility.java:286)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUt
>> ility.java:139)
>>     
>>>>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:194)
>>>>     at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:175)
>>>>     at
>>>>
>>>>         
>> org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDi
>> spatchAction.java:268)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAc
>> tion.java:244)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleO
>> pen(PackageExplorerActionGroup.java:316)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$5.open(Package
>> ExplorerPart.java:613)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:820
>> )
>>     
>>>>     at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
>>>>     at org.eclipse.core.runtime.Platform.run(Platform.java:857)
>>>>     at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:46)
>>>>     at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:199)
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:
>> 818)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.jav
>> a:1079)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.j
>> ava:1183)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:263)
>>     
>>>>     at
>>>> org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:257)
>>>>     at
>>>>
>>>>         
>> org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:297)
>>     
>>>>     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
>>>>     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)
>>>>     at
>>>> org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)
>>>>     at
>>>> org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)
>>>>     at
>>>> org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
>>>>     at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
>>>>     at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)
>>>>     at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)
>>>>     at
>>>>
>>>>         
>> org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:28
>> 9)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461
>> )
>>     
>>>>     at
>>>> org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
>>>>     at
>>>>
>>>>         
>> org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplicatio
>> n.java:106)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.jav
>> a:169)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplicatio
>> n(EclipseAppLauncher.java:106)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(Eclipse
>> AppLauncher.java:76)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:36
>> 3)
>>     
>>>>     at
>>>>
>>>>         
>> org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:17
>> 6)
>>     
>>>>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
>>>>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
>>>>     at java.lang.reflect.Method.invoke(Unknown Source)
>>>>     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
>>>>     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
>>>>     at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
>>>>     at org.eclipse.equinox.launcher.Main.main(Main.java:1148)
>>>>
>>>>
>>>>
>>>>
>>>>         
>
>
>   



From antlr at mirality.co.nz  Thu Apr 10 01:17:49 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 10 Apr 2008 20:17:49 +1200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT  BUG
In-Reply-To: <47FDC853.2070603@gmail.com>
References: <6qobb0$2blcbm@ipmail01.adl6.internode.on.net>
	<47FDC853.2070603@gmail.com>
Message-ID: <20080410081807.1A0A711E994@www.antlr.org>

At 19:57 10/04/2008, elekis wrote:
 >Yes I run under windows.  but is it in eclipse or in antlr that 
I
 >have to patch??

You don't have to patch anything.  Having CRLF line terminators is 
perfectly normal, and your lexer deals with it properly 
anyway.  So what's the problem?


From christian.schladetsch at gmail.com  Thu Apr 10 01:47:57 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Thu, 10 Apr 2008 20:47:57 +1200
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <87FB2728-A7A5-4462-8854-9E832AA4F5D6@martin-probst.com>
References: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>
	<87FB2728-A7A5-4462-8854-9E832AA4F5D6@martin-probst.com>
Message-ID: <6442c4ae0804100147y7bbdf8e4y7de6ce638744da4b@mail.gmail.com>

Hello,

To build antlr-2008-04-09.10, I deleted the following files:

src/org/antlr/tool/ANTLRLexer.java
src/org/antlr/tool/ANTLRLexer.smap
src/org/antlr/tool/ANTLRParser.java
src/org/antlr/tool/ANTLRParser.smap
src/org/antlr/tool/ANTLRTokenTypes.java
src/org/antlr/tool/ANTLRTokenTypes.txt
src/org/antlr/tool/ANTLRTreePrinter.java
src/org/antlr/tool/ANTLRTreePrinter.smap
src/org/antlr/tool/ANTLRTreePrinterTokenTypes.java
src/org/antlr/tool/ANTLRTreePrinterTokenTypes.txt
src/org/antlr/tool/AssignTokenTypesWalker.java
src/org/antlr/tool/AssignTokenTypesWalker.smap
src/org/antlr/tool/AssignTokenTypesWalkerTokenTypes.java
src/org/antlr/tool/AssignTokenTypesWalkerTokenTypes.txt
src/org/antlr/tool/DefineGrammarItemsWalker.java
src/org/antlr/tool/DefineGrammarItemsWalker.smap
src/org/antlr/tool/DefineGrammarItemsWalkerTokenTypes.java
src/org/antlr/tool/DefineGrammarItemsWalkerTokenTypes.txt
src/org/antlr/tool/TreeToNFAConverter.java
src/org/antlr/tool/TreeToNFAConverter.smap
src/org/antlr/tool/TreeToNFAConverterTokenTypes.java
src/org/antlr/tool/TreeToNFAConverterTokenTypes.txt
src/org/antlr/codegen/CodeGenTreeWalker.java
src/org/antlr/codegen/CodeGenTreeWalker.smap
src/org/antlr/codegen/CodeGenTreeWalkerTokenTypes.java
src/org/antlr/codegen/CodeGenTreeWalkerTokenTypes.txt

Executing 'ant' from the root of the archive then built correctly.

It would be stellar if these files were not in the release.

Regards,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/b310ecb5/attachment.html 

From elekis at gmail.com  Thu Apr 10 02:12:03 2008
From: elekis at gmail.com (elekis)
Date: Thu, 10 Apr 2008 11:12:03 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <47fdcd3c.1e06420a.143a.2176SMTPIN_ADDED@mx.google.com>
References: <6qobb0$2blcbm@ipmail01.adl6.internode.on.net>
	<47FDC853.2070603@gmail.com>
	<47fdcd3c.1e06420a.143a.2176SMTPIN_ADDED@mx.google.com>
Message-ID: <47FDD9E3.5000408@gmail.com>

Gavin Lambert a ?crit :
> At 19:57 10/04/2008, elekis wrote:
> >Yes I run under windows.  but is it in eclipse or in antlr that I
> >have to patch??
>
> You don't have to patch anything.  Having CRLF line terminators is 
> perfectly normal, and your lexer deals with it properly anyway.  So 
> what's the problem?
>
The prob is that I try to make a eclipse plugn based on antl and he bugs 
on this 2lines

FROM flksjdfl IMPORT lfskjdflk;
FROM lskfjlskj IMPORT lkdfjsl;

and I don't know why lexer see two \n at the end of the first line.
 But if I have

FROM flksjdfl IMPORT lfskjdflk;

FROM lskfjlskj IMPORT lkdfjsl;


he see Four backslash n . funny thing.

there is my code

the java code : http://paste.ubuntu-nl.org/62701/
the  lexer   http://paste.ubuntu-nl.org/62702/

thanks a lot

a++



From christian.schladetsch at gmail.com  Thu Apr 10 02:34:04 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Thu, 10 Apr 2008 21:34:04 +1200
Subject: [antlr-interest] 3.1 TokenSource
Message-ID: <6442c4ae0804100234v51dd06dfnf8d40c4857ca01e3@mail.gmail.com>

Hello [Jim],

First off, huge kudos to Jim for the C codegen for ANTLR. I've read 80% of
it, and it is a thing of beauty. I've not seen better C code in my 15 years
as a professional C/C++ developer.

Secondly, now that I finally have a build of 3.1 ANTLR, i get the followng
error:

    error C2039: 'tokSource' : is not a member of 'ANTLR3_LEXER_struct'

from C++ source:

    pPiLexer lxr = PiLexerNew(input);
    pANTLR3_COMMON_TOKEN_STREAM tstream =
antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, *lxr->pLexer->tokSource*
);

PiLexer is generated from Pi.g using custom build rules in VS2008:

1>ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
1>Generating PiParser.c
1>Generating PiParser.h
1>Generating PiLexer.c
1>Generating PiLexer.h
1>Compiling...
1>Main.cpp
1>[obscured]\rhocompiler\main.cpp(11) : error C2039: 'tokSource' : is not a
member of 'ANTLR3_LEXER_struct'
1>
e:\dev\antlr\antlr-2008-04-09.10\runtime\c\include\antlr3lexer.h(48) : see
declaration of 'ANTLR3_LEXER_struct'
1>Build Time 0:02
1>Build log was saved at
"file://c:\Users\user\Desktop\MabPrefix\Projects\RhoCompiler\Debug\BuildLog.htm"
1>RhoCompiler - 1 error(s), 0 warning(s)
========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========

I have spent some time investigating this. It is clear that that the lexer
should indeed supply a source of tokens. But I see no way for PiLexer (which
is auto-generated) to return a token source.

Regards,
Christian.

PS. What's with the Java thing. When will Terr move to C++ and make? ;)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/4951f71d/attachment.html 

From vonolsson at gmail.com  Thu Apr 10 06:06:56 2008
From: vonolsson at gmail.com (David Olsson)
Date: Thu, 10 Apr 2008 15:06:56 +0200
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FCE60E.5030204@infobal.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com> <47FCE60E.5030204@infobal.com>
Message-ID: <47FE10F0.1000008@gmail.com>

Stuart Watt wrote:
>
> if you need pointers and multiplication, in C syntax, I suspect you're 
> going to need to build a (scoped) type symbol table and semantic 
> predicates. Then if the first identifier is a type, you can treat it 
> is a pointer, if not, multiplication. As Jim said, the code to do this 
> is in the C ANTLR example.
>
Unfortunately, my language is not like C in all cases. Specifically, my 
language is a two pass language. In the first pass, all the parsing is 
done. In the second, type checks and such is done. This means that I 
don't need a preprocessor nor includes. This, however, also means that 
there is no easy way of telling if an identifier is a type or a variable 
during parsing; that information isn't available until the second pass.

I've looked at Terence Parr's example Java grammar but since there are 
no pointers in Java it is of little help. Maybe the only solution is to 
change the pointer syntax so that there are no conflicts with other 
operators (the benefit of inventing your own language ;-))... Or can 
anyone think of a better solution?

David Olsson

From pat at tireme.fr  Thu Apr 10 06:16:10 2008
From: pat at tireme.fr (Pierre Attar)
Date: Thu, 10 Apr 2008 15:16:10 +0200
Subject: [antlr-interest] @rulecatch in a C environment
In-Reply-To: <ecee7e57104e544da3b7676ccfed88a4@temporal-wave.com>
References: <ecee7e57104e544da3b7676ccfed88a4@temporal-wave.com>
Message-ID: <47FE131A.8050107@tireme.fr>

This works perfectly.

thanks a lot, Pierre

Jim Idle a ?crit :
> Doh! we should pay attention the error! ;-)
>
> This method is part of the recognizer interface, hence it is not in the parser context, but the parser context's recognizer pointer:
>
> @parser::apifuncs
> {
> 	RECOGNIZER->displayRecognitionError = xxxxx;
> }
>
>   
>> -----Original Message-----
>> From: Pierre Attar [mailto:pat at tireme.fr]
>> Sent: Wednesday, April 09, 2008 9:03 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] @rulecatch in a C environment
>>
>> Jim,
>>
>> I've tried this right capitalization before, this morning in France,
>> and it does not works too :
>> .. FFormParser.c(326) : error C2039: 'displayRecognitionError' : is not
>> a member of 'FFormParser_Ctx_struct'
>>     ..FFormParser.h(317) : see declaration of 'FFormParser_Ctx_struct'
>>
>> Any other idea ?
>>
>> Pierre
>>
>> Jim Idle a ?crit :
>>     
>>> Pierre,
>>>
>>> The capitalization is wrong, it is:
>>>
>>> displayRecognitionError
>>>
>>> Jim
>>>
>>>
>>>       
>>>> -----Original Message-----
>>>> From: Pierre Attar [mailto:pat at tireme.fr]
>>>> Sent: Wednesday, April 09, 2008 5:53 AM
>>>> To: Jim Idle
>>>> Cc: antlr-interest at antlr.org
>>>> Subject: Re: [antlr-interest] @rulecatch in a C environment
>>>>
>>>> Jim,
>>>>
>>>> Thanks a lot for your answer. I've now remove all "after" clauses
>>>>         
>> and
>>     
>>>> try to work on the displayrecognitionError function.
>>>>
>>>> As you should have notice, I'm not a C guru and trying to do your
>>>>         
>> mind,
>>     
>>>> I got the following error :
>>>>
>>>> ..FFormParser.c(326) : error C2039: 'displayrecognitionError' : is
>>>>         
>> not
>>     
>>>> a
>>>> member of 'FFormParser_Ctx_struct'
>>>> 2>        ..\antlrgen\FFormParser.h(317) : see declaration of
>>>> 'FFormParser_Ctx_struct'
>>>>
>>>> Which means, I assume, that I also need somewhere to declare the my
>>>> overwriting function? Can you explain me the way to do that ?
>>>>
>>>> Pierre
>>>>
>>>> Jim Idle a ?crit :
>>>>
>>>>         
>>>>> We need to add better support so that targets can tell you whether
>>>>>
>>>>>           
>>>> the section you are using is supported. @after currently isn't
>>>> officially supported though I have been playing around with it.
>>>>
>>>>         
>>>>> Rather than try to do this through things like rule catch, just
>>>>>
>>>>>           
>>>> override the displayRecognitionError routine, or routines tath are
>>>> called before that is called if you find a need.
>>>>
>>>>         
>>>>> At that point you can find out everything you would normally need
>>>>>           
>> to
>>     
>>>> know, including what rule/alt the parser was in and the expected
>>>>         
>> token
>>     
>>>> set (if this can be worked out) and so on.
>>>>
>>>>         
>>>>> >From the C API docs:
>>>>>
>>>>> Unless you wish to create your own tree structures using the built
>>>>>           
>> in
>>     
>>>> ANTLR AST rewriting
>>>>
>>>>         
>>>>> notation, you will rarely need to override the default
>>>>>           
>> implementation
>>     
>>>> of runtime methods. The
>>>>
>>>>         
>>>>> exception to this will be the syntax err reporting method, which is
>>>>>
>>>>>           
>>>> essentially a stub function
>>>>
>>>>         
>>>>> that you will usually want to provide your own implementation for.
>>>>>
>>>>>           
>>>> You should consider the built in function
>>>>
>>>>         
>>>>> displayRecognitionError() as an example of where to start as there
>>>>>
>>>>>           
>>>> can be no really useful
>>>>
>>>>         
>>>>> generic error message display.
>>>>>
>>>>>
>>>>> In your grammar you can do this:
>>>>>
>>>>> @parser::apifuncs
>>>>> {
>>>>> 	// Override the standard error display and install my own.
>>>>>       // Look at the runtime library code to see what the default
>>>>>           
>> one
>>     
>>>>>       // does to find things out, then do what I want in my
>>>>>           
>> version.
>>     
>>>>>       ..
>>>>> 	ctx->displayrecognitionError = myDisplayrecognitionError;
>>>>> }
>>>>>
>>>>> Jim
>>>>>
>>>>>
>>>>>
>>>>>           
>>>>>> -----Original Message-----
>>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>>>> bounces at antlr.org] On Behalf Of Pierre Attar
>>>>>> Sent: Tuesday, April 08, 2008 6:14 AM
>>>>>> To: antlr-interest at antlr.org
>>>>>> Subject: [antlr-interest] @rulecatch in a C environment
>>>>>>
>>>>>> Hi,
>>>>>>
>>>>>> I want to catch recognition errors on my parsing. In order to
>>>>>>
>>>>>>             
>>>> achieve
>>>>
>>>>         
>>>>>> this, I've creating the following rulecatch:
>>>>>>
>>>>>> @rulecatch {
>>>>>>     pANTLR3_EXCEPTION exe = EXCEPTION;
>>>>>>     if(NULL != exe) {
>>>>>>         char    buffer[100];
>>>>>>         sprintf(buffer, "\%s", exe->name);
>>>>>>         cout << "Got an exception in parsing recognition: " <<
>>>>>>
>>>>>>             
>>>> buffer;;
>>>>
>>>>         
>>>>>>     }
>>>>>> }
>>>>>>
>>>>>> This works fine except that when nothing is provided, the
>>>>>>             
>> generation
>>     
>>>> is
>>>>
>>>>         
>>>>>> :
>>>>>>     if (HASEXCEPTION())
>>>>>>     {PREPORTERROR();
>>>>>>         PRECOVER(); }
>>>>>>     else
>>>>>>     {{resultTree= doc;}}
>>>>>>
>>>>>> ... where the line is an @after clause.
>>>>>>
>>>>>>
>>>>>> My problem ? As soon as I put my rulecatcher, the after clause is
>>>>>>             
>> no
>>     
>>>>>> more generated.
>>>>>>
>>>>>> I would be very glad to understand what I've done wrong here and
>>>>>>
>>>>>>             
>>>> also,
>>>>
>>>>         
>>>>>> if someone have a sample I may clone, it would help me.
>>>>>>
>>>>>> Thanks a lot, Pierre
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>             
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>           
>>>
>>>
>>>
>>>
>>>
>>>
>>>       
>
>
>
>
>
>
>
>   


From PSheehan at decaresystems.ie  Thu Apr 10 06:46:54 2008
From: PSheehan at decaresystems.ie (PSheehan at decaresystems.ie)
Date: Thu, 10 Apr 2008 14:46:54 +0100
Subject: [antlr-interest] Unit testing Parsers
Message-ID: <OFFF61FBF4.07B558BB-ON80257427.0049A003-80257427.004BB4BC@decaresystems.ie>

I'm testing every rule in the parser individual and this all worked great 
until I started adding a dynamic scopes to build up a symbol table.  The 
problem I have now is that since these scopes are not initialized some of 
the individual rule calls through an EmptyStack exception in my unit 
tests.  I've ignored the problem for now with a nasty line in the grammar 
which checks if the a specific scope it empty before it uses a scope. 
Ideally I'll like a way to inject data into scopes for unit testing.  I 
was wondering how other people have got around this. 

This e-mail and any files transmitted with it are intended solely for the individual or entity to whom they are addressed. This communication may contain material that is privileged, confidential and protected from disclosure under the law. If you are not the intended recipient, any disclosure, distribution, copying, or use of this information is strictly prohibited and may be unlawful. 

If you have received this e-mail in error, please reply immediately to the sender and delete it.

Registered Address:
DeCare Systems Ireland Ltd, 
Building 1, University Technology Centre, Curraheen Road, Cork, Ireland. 
Company Registration Number:  278462
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/5d258463/attachment-0001.html 

From rstehwien at gmail.com  Thu Apr 10 08:06:08 2008
From: rstehwien at gmail.com (Robert Stehwien)
Date: Thu, 10 Apr 2008 09:06:08 -0600
Subject: [antlr-interest] Better Error Reporting in ANTLR
Message-ID: <7e7886e20804100806k52bd2167o64daa22de79f2cfb@mail.gmail.com>

I have a simple grammar where there can be semantic errors.  Right now
I'm using System.err.println() to report those errors.  What I'd like
to do is create and throw an exception that takes just an error string
and have the same line and character information reported that ANTLR
errors report.  Any good suggestions on how I can do that?

Here are examples of the errors in my grammar:
--------------------
ifStatement     : ^(IF expression s+=.+)
  {
    if (!($expression.value instanceof Boolean)) {
      System.err.println("if expression '" + $expression.text + "'
does not evaluate to a boolean");
      return;
    }
    if (((Boolean)$expression.value).booleanValue()) {
      runStatement((CommonTree)$s.get(0));
    }
    else if ($s.size() > 1) {
      runStatement((CommonTree)$s.get(1));
    }
  }
  ;
--------------------
@members {
    private Map<String, Object> variables = new HashMap<String, Object>();

    private void defineInt(String name) {
        if (variables.containsKey(name)) {
            System.err.println("variable '" + name + "' already defined");
        }
        variables.put(name, BigInteger.ZERO);
    }
}
--------------------

Thanks,
Robert

From jimi at temporal-wave.com  Thu Apr 10 08:23:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Apr 2008 08:23:43 -0700
Subject: [antlr-interest] 3.1 TokenSource
In-Reply-To: <6442c4ae0804100234v51dd06dfnf8d40c4857ca01e3@mail.gmail.com>
Message-ID: <d234f7eb6a4f3643bde7eec463ccdf19@temporal-wave.com>

Flattery will get you everywhere ;-)

 

I have documented this change in the examples for 3.1 but will document it in the changes from 3.0 section of the docs soon - apologies in the meantime. When the interface changed for 3.1, the token source pointer had to move down a few levels and it was already a bit awkward to find this (intuitively at least), so the C examples for 3.0 will not work with 3.1 generation.

 

To make this all a bit easier, there is now a new macro (I generally avoid these as debugging with them is a night mare but here it is justified). The macro is called TOKENSOURCE and basically it knows how to pull out the tokensource pointer from a lexer context pointer. The 3.1 C/C++ examples show how to use it, and here is a snippet:

 

tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));

 

That should be all you need :-)

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christian Schladetsch
Sent: Thursday, April 10, 2008 2:34 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] 3.1 TokenSource

 

Hello [Jim],

First off, huge kudos to Jim for the C codegen for ANTLR. I've read 80% of it, and it is a thing of beauty. I've not seen better C code in my 15 years as a professional C/C++ developer.

Secondly, now that I finally have a build of 3.1 ANTLR, i get the followng error:

    error C2039: 'tokSource' : is not a member of 'ANTLR3_LEXER_struct'

from C++ source:

    pPiLexer lxr = PiLexerNew(input);
    pANTLR3_COMMON_TOKEN_STREAM tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, lxr->pLexer->tokSource);

PiLexer is generated from Pi.g using custom build rules in VS2008:

1>ANTLR Parser Generator  Version 3.1b1 (??)  1989-2007
1>Generating PiParser.c
1>Generating PiParser.h
1>Generating PiLexer.c
1>Generating PiLexer.h
1>Compiling...
1>Main.cpp
1>[obscured]\rhocompiler\main.cpp(11) : error C2039: 'tokSource' : is not a member of 'ANTLR3_LEXER_struct'
1>        e:\dev\antlr\antlr-2008-04-09.10\runtime\c\include\antlr3lexer.h(48) : see declaration of 'ANTLR3_LEXER_struct'
1>Build Time 0:02
1>Build log was saved at "file://c:\Users\user\Desktop\MabPrefix\Projects\RhoCompiler\Debug\BuildLog.htm"
1>RhoCompiler - 1 error(s), 0 warning(s)
========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========

I have spent some time investigating this. It is clear that that the lexer should indeed supply a source of tokens. But I see no way for PiLexer (which is auto-generated) to return a token source. 

Regards,
Christian.

PS. What's with the Java thing. When will Terr move to C++ and make? ;)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/d8221f58/attachment.html 

From siemsen at ucar.edu  Thu Apr 10 09:15:38 2008
From: siemsen at ucar.edu (siemsen at ucar.edu)
Date: Thu, 10 Apr 2008 10:15:38 -0600
Subject: [antlr-interest] Better Error Reporting in ANTLR
In-Reply-To: <7e7886e20804100806k52bd2167o64daa22de79f2cfb@mail.gmail.com>
References: <7e7886e20804100806k52bd2167o64daa22de79f2cfb@mail.gmail.com>
Message-ID: <2CA03B32-781F-4E9D-B69F-27F2F370B14F@ucar.edu>

I also report semantic errors with System.err.println().  Line and  
character information is in the token.  In your ifStatement rule, try  
this:

if (!($expression.value instanceof Boolean)) {
     System.err.println("(" + $expression.token.getLine() + ":" +
                        $expression.token.getCharPositionInLine() +  
"): " +
                        "if expression '" + $expression.text + "'does  
not evaluate to a boolean");
     return;
}

I would also like to do this the "right" way, with an exception.   
When I tried, the exception logic made it harder to understand, so I  
stuck with System.err.println().  I hope someone can suggest a better  
way.

-- Pete


On Apr 10, 2008, at 9:06 AM, Robert Stehwien wrote:

> I have a simple grammar where there can be semantic errors.  Right now
> I'm using System.err.println() to report those errors.  What I'd like
> to do is create and throw an exception that takes just an error string
> and have the same line and character information reported that ANTLR
> errors report.  Any good suggestions on how I can do that?
>
> Here are examples of the errors in my grammar:
> --------------------
> ifStatement     : ^(IF expression s+=.+)
>   {
>     if (!($expression.value instanceof Boolean)) {
>       System.err.println("if expression '" + $expression.text + "'
> does not evaluate to a boolean");
>       return;
>     }
>     if (((Boolean)$expression.value).booleanValue()) {
>       runStatement((CommonTree)$s.get(0));
>     }
>     else if ($s.size() > 1) {
>       runStatement((CommonTree)$s.get(1));
>     }
>   }
>   ;
> --------------------
> @members {
>     private Map<String, Object> variables = new HashMap<String,  
> Object>();
>
>     private void defineInt(String name) {
>         if (variables.containsKey(name)) {
>             System.err.println("variable '" + name + "' already  
> defined");
>         }
>         variables.put(name, BigInteger.ZERO);
>     }
> }
> --------------------
>
> Thanks,
> Robert

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/0a169171/attachment.html 

From elekis at gmail.com  Thu Apr 10 09:46:44 2008
From: elekis at gmail.com (jabon)
Date: Thu, 10 Apr 2008 18:46:44 +0200
Subject: [antlr-interest] plugin, ITokenScanner, nextToken --> SWT BUG
In-Reply-To: <47fdcd3c.1e06420a.143a.2176SMTPIN_ADDED@mx.google.com>
References: <6qobb0$2blcbm@ipmail01.adl6.internode.on.net>
	<47FDC853.2070603@gmail.com>
	<47fdcd3c.1e06420a.143a.2176SMTPIN_ADDED@mx.google.com>
Message-ID: <47FE4474.2050806@gmail.com>

Gavin Lambert a ?crit :
> At 19:57 10/04/2008, elekis wrote:
> >Yes I run under windows.  but is it in eclipse or in antlr that I
> >have to patch??
>
> You don't have to patch anything.  Having CRLF line terminators is 
> perfectly normal, and your lexer deals with it properly anyway.  So 
> what's the problem?
>
I found a other thing.
I have my grammar like that

WS                          :(' '|'\r'|'\t'|'\u000C')+; 
RETURN                        :('\n')+;

(I separed the return and space).


on the code
FROM fslkdfjl  fsdlfkjflk IMPORT lfskjfd ;
FROM lfskjd IMPORT dlskjdq;

after the ; I have that

TOKEN -->
<--
14
SIZE: 1
--------------------------------
TOKEN -->
<--
15
******
SIZE: 1


this mean that the first return is considered by the WS lexer and the 
second with RETURN lexer. why I have two return and 2return differrent?????

thanks


a++

From gudnabrsam at yahoo.com  Thu Apr 10 09:55:17 2008
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu, 10 Apr 2008 09:55:17 -0700 (PDT)
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>
Message-ID: <979791.48476.qm@web55115.mail.re4.yahoo.com>

I sent the following updated build.xml to a couple of
folks the other day; give it a try and let us know
here.  A better fix would be for the ANTLR distro
_not_ to include the generated files in the src tree,
but until then...

HTH,
Matt

--- Christian Schladetsch
<christian.schladetsch at gmail.com> wrote:

> Hello,
> 
> When attempting to build ANTLR  3.13 from source, I
> get a set of 'duplicate
> class' compile-time errors in generated code:
> 
> generator-prepare:
>     [mkdir] Created dir:
> E:\Dev\Antlr\antlr-2008-03-13.12\codegen
>      [copy] Copying 6 files to
> E:\Dev\Antlr\antlr-2008-03-13.12\codegen
> 
> generator:
>     [antlr] ANTLR Parser Generator   Version 2.7.7
> (20060906)   1989-2005
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:904:
> warning:nongreedy block may exit incorrectly due
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:904:
>         to
> limitations of linear approximate lookahead (first
> k-1 sets
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:904:
>         in
> lookahead not singleton).
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:1082:
> warning:nongreedy block may exit incorrectly due
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:1082:
>  to limitations of linear approximate lookahead
> (first k-1 sets
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\antlr.g:1082:
>  in lookahead not singleton).
>     [antlr] ANTLR Parser Generator   Version 2.7.7
> (20060906)   1989-2005
>     [antlr] ANTLR Parser Generator   Version 2.7.7
> (20060906)   1989-2005
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\assign.types.g:387:18:
> warning:Rule 'optionsSpec' returns a value
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\assign.types.g:467:13:
> warning:Rule 'optionsSpec' returns a value
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\assign.types.g:490:14:
> warning:Rule 'optionsSpec' returns a value
>     [antlr] ANTLR Parser Generator   Version 2.7.7
> (20060906)   1989-2005
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\buildnfa.g:297:19:
> warning:Rule 'atom' returns a value
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\buildnfa.g:297:32:
> warning:Rule 'atom' returns a value
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\buildnfa.g:309:20:
> warning:Rule 'block' returns a value
>     [antlr] ANTLR Parser Generator   Version 2.7.7
> (20060906)   1989-2005
>     [antlr]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\define.g:252:24:
> warning:Rule 'modifier' returns a value
>     [antlr] ANTLR Parser Generator   Version 2.7.7
> (20060906)   1989-2005
> 
> compile-rt:
>     [mkdir] Created dir:
> E:\Dev\Antlr\antlr-2008-03-13.12\build\rtclasses
>   [myjavac] Compiling 74 source files to
> E:\Dev\Antlr\antlr-2008-03-13.12\build\rtclasses
>   [myjavac] Note: Some input files use unchecked or
> unsafe operations.
>   [myjavac] Note: Recompile with -Xlint:unchecked
> for details.
> 
> compile:
>     [mkdir] Created dir:
> E:\Dev\Antlr\antlr-2008-03-13.12\build\classes
>   [myjavac] Compiling 141 source files to
> E:\Dev\Antlr\antlr-2008-03-13.12\build\classes
>   [myjavac]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\ANTLRLexer.java:61:
> duplicate class: org.antlr.tool.ANTLRLexer
>   [myjavac] public class ANTLRLexer extends
> antlr.CharScanner implements
> ANTLRTokenTypes, TokenStream
>   [myjavac]        ^
>   [myjavac]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\ANTLRParser.java:72:
> duplicate class: org.antlr.tool.ANTLRParser
>   [myjavac] public class ANTLRParser extends
> antlr.LLkParser
> implements ANTLRTokenTypes
>   [myjavac]        ^
>   [myjavac]
>
E:\Dev\Antlr\antlr-2008-03-13.12\codegen\ANTLRTokenTypes.java:37:
> duplicate
> class: org.antlr.tool.ANTLRTokenTypes
>   [myjavac] public interface ANTLRTokenTypes {
>   [myjavac]        ^
> 
> Any suggestions would be greatly appreciated.
> 
> Regards,
> Chrisian.
> 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build.xml
Type: application/xml
Size: 10448 bytes
Desc: 3442728805-build.xml
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080410/fad1ba15/attachment.rdf 

From parrt at cs.usfca.edu  Thu Apr 10 11:04:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Apr 2008 11:04:24 -0700
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <979791.48476.qm@web55115.mail.re4.yahoo.com>
References: <979791.48476.qm@web55115.mail.re4.yahoo.com>
Message-ID: <011F462C-F448-4A1E-8455-368427723938@cs.usfca.edu>


On Apr 10, 2008, at 9:55 AM, Matt Benson wrote:

> I sent the following updated build.xml to a couple of
> folks the other day; give it a try and let us know
> here.  A better fix would be for the ANTLR distro
> _not_ to include the generated files in the src tree,
> but until then...

One or two files are v3 grammars; no way to bootstrap if I don't  
include, right?

Ter

From jaluber at gmx.de  Thu Apr 10 11:32:37 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 10 Apr 2008 20:32:37 +0200
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FE10F0.1000008@gmail.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>	<47FC69C7.3020608@gmail.com>
	<47FCE60E.5030204@infobal.com> <47FE10F0.1000008@gmail.com>
Message-ID: <47FE5D45.9060703@gmx.de>

David Olsson schrieb:
> Stuart Watt wrote:
>>
>> if you need pointers and multiplication, in C syntax, I suspect you're 
>> going to need to build a (scoped) type symbol table and semantic 
>> predicates. Then if the first identifier is a type, you can treat it 
>> is a pointer, if not, multiplication. As Jim said, the code to do this 
>> is in the C ANTLR example.
>>
> Unfortunately, my language is not like C in all cases. Specifically, my 
> language is a two pass language. In the first pass, all the parsing is 
> done. In the second, type checks and such is done. This means that I 
> don't need a preprocessor nor includes. This, however, also means that 
> there is no easy way of telling if an identifier is a type or a variable 
> during parsing; that information isn't available until the second pass.
> 
> I've looked at Terence Parr's example Java grammar but since there are 
> no pointers in Java it is of little help. Maybe the only solution is to 
> change the pointer syntax so that there are no conflicts with other 
> operators (the benefit of inventing your own language ;-))... Or can 
> anyone think of a better solution?

Changing the grammar to remove conflicts is of course the best variant, 
but may end with a different recognized language. A possibility is to us 
tree rewriting. Use semantic meaningless names like STAR and change in 
the the second pass the AST, once you have sufficiently knowledge about 
the context.

Johannes


From parrt at cs.usfca.edu  Thu Apr 10 11:58:07 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Apr 2008 11:58:07 -0700
Subject: [antlr-interest] ANTLR 3.1
In-Reply-To: <92b42db60803191329s3efdb7d1l480f3e41ec00a1cd@mail.gmail.com>
References: <92b42db60803191329s3efdb7d1l480f3e41ec00a1cd@mail.gmail.com>
Message-ID: <E48D75E5-FDFA-468C-878B-988B24DE2472@cs.usfca.edu>

Hi Edgar, just saw your v3 ANTLR eclipse plugin!
http://antlrv3ide.sourceforge.net/
cool!  Is it ready for people to start using?

Ter
On Mar 19, 2008, at 1:29 PM, Edgar Espina wrote:

> Hi all,
>
> Where can I read about the new features of ANTLR 3.1?
>
> Thx,
>
> Edgar


From parrt at cs.usfca.edu  Thu Apr 10 14:29:47 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Apr 2008 14:29:47 -0700
Subject: [antlr-interest] more on faster expression parsing
Message-ID: <0818BCAA-DFA0-4440-A418-78DB231C4795@cs.usfca.edu>

http://www.antlr.org/wiki/display/~admin/2008/04/10/Still+more+about 
+expression+parsing

I think that covers it.

Ter

From antlr at mirality.co.nz  Thu Apr 10 14:41:07 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 11 Apr 2008 09:41:07 +1200
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FE10F0.1000008@gmail.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com> <47FCE60E.5030204@infobal.com>
	<47FE10F0.1000008@gmail.com>
Message-ID: <20080410214119.17A7611EC74@www.antlr.org>

At 01:06 11/04/2008, David Olsson wrote:
 >Unfortunately, my language is not like C in all cases.
 >Specifically, my language is a two pass language. In the
 >first pass, all the parsing is done. In the second, type checks
 >and such is done. This means that I don't need a preprocessor
 >nor includes. This, however, also means that there is no easy 
way
 >of telling if an identifier is a type or a variable during
 >parsing; that information isn't available until the second pass.
 >
 >I've looked at Terence Parr's example Java grammar but since 
there
 >are no pointers in Java it is of little help.

You could possibly have a look at a C# grammar; I think there's a 
C# ANTLR grammar floating around somewhere, but failing that you 
could look at the official spec.

C# has pointers (though they're rarely used) and doesn't require 
pre-declaration of types (no header files), so that's probably the 
closest example to what you're trying to do.

I don't know offhand, but I think C# gets around the problem by 
declaring that expressions cannot be statements in their own 
right; combining this with the fixed signatures for operator 
overloading means that a * on the left of an assignment or on its 
own can only possibly be a pointer declaration, not a 
multiplication, since a multiplication cannot produce an 
lvalue.  (Unlike in C++, where you can overload it to return 
whatever you want.)

 >Maybe the only solution is to change the pointer syntax so that
 >there are no conflicts with other operators (the benefit of
 >inventing your own language ;-))...

That might be the easiest option, but it's not the only one :)


From antlr at mirality.co.nz  Thu Apr 10 14:52:46 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 11 Apr 2008 09:52:46 +1200
Subject: [antlr-interest] more on faster expression parsing
In-Reply-To: <0818BCAA-DFA0-4440-A418-78DB231C4795@cs.usfca.edu>
References: <0818BCAA-DFA0-4440-A418-78DB231C4795@cs.usfca.edu>
Message-ID: <20080410215300.A5FBA11EBB4@www.antlr.org>

At 09:29 11/04/2008, Terence Parr wrote:
 ><http://www.antlr.org/wiki/display/~admin/2008/04/10/Still+more+about+expression+parsing>
 >
 >I think that covers it.
[...]
 >It also looks one level deep into rules referenced from the 
special rule.

Is it feasible to look further than one level?  (Ideally, to any 
number of levels.)  Just in case someone wants to factor the 
grammar a bit more.  Probably not a biggie, but if it's not hard 
to look further then it might be a good idea.

 >Rule suffix is left alone except for the removal of the left
 >recursion so you can add whatever tree construction you want
 >but you must allow a $lhs parameter to come in.

This is a little unclear, since presumably in the source grammar 
there will still be an 'e' in the lhs position, so surely they 
will refer to that in the tree rewrite, not $lhs?  Perhaps it will 
get internally converted into using $lhs, but I don't think it'd 
be like that in the source rule, surely?


From jaluber at gmx.de  Thu Apr 10 15:44:30 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 11 Apr 2008 00:44:30 +0200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <008701c89aa5$b7a7adc0$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de> <008701c89aa5$b7a7adc0$0200a8c0@marion>
Message-ID: <47FE984E.3020106@gmx.de>

Micheal J schrieb:
> Johannes, 
> 
>> Hi!
>>
>> It's time to give you all an update how the C# target will evolve to.
>>
>> The general direction is that I will phase out support for C# 
>> 1.0 for ANTLR 3.3, if nothing major comes up (meaning that a 
>> user can't update to .NET 2). I want to split the runtime 
>> library into two, so I can use generics and other stuff.
>>
>> Because of these major changes, I want to have at least one 
>> minor ANTLR version as a testbed. As I didn't find the time 
>> to do those changes for 3.1, the testbed will be 3.2. The 
>> reason for this early announcement is that a bugfix requires 
>> the use of a C# 2.0 feature.
> 
> Is this fix and the C# 2.0 dependency indicated in the depot logs?
> 
> [UPDATE: can't see any notes to that effect in the logs. What change no.
> should I look at?]

Well, the latest changeset is 4759, but looking over the logs in 
perforce I see that I didn't mention it there. I assumed that once the 
wiki page is updated, people will know it in general. Otherwise I don't 
see any file in the source distribution, which mentions changes.

>> If you want to use a non-intrinsic value type then you have 
>> to use the new target CSharp2 or to change the template 
>> yourself (for all installations). While the runtime library 
>> will work for both targets, if you want to (and can) 
>> futureproof your application then change the target as soon 
>> as possible.
> 
> One can use any value type with the 'CSharp' target already AFAICT. Does the
> new 'CSharp2' target remove the need to update the 'csharpTypeInitMap'
> default value map in the templates for unspecified value types?

Actually, I meant this, even if it didn't came correctly over.

>> I'm also happy to release the beta 1 for the 3.1 C# target: 
>> It is synced with the latest Java changes and compiles all 
>> example grammars successfully. While the changes have been 
>> checked in, there may no intermediate build available yet 
>> which includes the changes. This depends on Ter.
>>
>> Changes include:
>>
>> - Following Java target evolution.
>>
>> - Changed lowercase signatures into uppercase so the runtime 
>> conforms more to C# conventions. For example, $a.tree in 
>> grammar, but a.Tree in code. $-syntax is not affected 
>> although the exceptions compared to Java target will be 
>> probably removed (if I find the source that is).
> 
> I don't understand what you mean here. What exceptions are these?. Exception
> types?. Could you supply example(s) to illustrate perhaps?

<http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target> Scroll 
down to "Syntactic differences from the Java target". I aim to remove 
them, but I have to look further into this issue.

>> - Broke the IToken dependency for Token, as this didn't make 
>> any sense compared to the Java target. If you derive your 
>> class from Token or use Token as Type, please change that into IToken.
> 
> Interesting. What problem/issue was solved by removing Token as the abstract
> base class for all the token types included with ANTLR? Had quick look at
> the diffs and nothing jumped out.

The simple reason is that Token as base class didn't add anything beyond 
an extra step in the hierarchy. Nearly all IToken properties were 
abstract and the one that wasn't was overridden anyway. Also the Java 
target operates on the interface itself, as does the rest of C#. Nothing 
but extra complexity for no benefits.

>> - Bug fixes.
>>
>> - No binaries for .Net 1.1 created yet. It is on my todo list.
> 
> If you have .NET v1.1 and .NET v2 installed on your box (or in a VM), the
> Nant script takes care of building both:
>    nant release -t:net-1.1 
>    nant release -t:net-2.0 

Well, it could be that I'm using Linux and Nant 0.86 Beta, but I get:

"...ANTLR/code/antlr/main/runtime/CSharp> nant release -t:mono-2.0
NAnt 0.86 (Build 0.86.2898.0; beta1; 08.12.2007)
Copyright (C) 2001-2007 Gerry Shaw
http://nant.sourceforge.net

Buildfile: 
file:///home/verequus/Arbeit/ANTLR/code/antlr/main/runtime/CSharp/all.antlr3.runtime.net.build
Target framework: Mono 2.0 Profile
Target(s) specified: release


BUILD FAILED

/home/verequus/Arbeit/ANTLR/code/antlr/main/runtime/CSharp/all.antlr3.runtime.net.build(11,3):
Could not include build file 
'/home/verequus/Arbeit/ANTLR/code/antlr/main/runtime/CSharp/antlr3.runtime.net.common.inc'.
     a name did not start with a legal character 34 (") 
file:///home/verequus/Arbeit/ANTLR/code/antlr/main/runtime/CSharp/antlr3.runtime.net.common.inc 
Line 28, position 114.

Total time: 0.1 seconds."

I suppose it doesn't matter because I will switch to Prebuild due to 
later reorgs in the code base. Then I can get easily uptodate project files.

> Nice to see C# up and running again. Good job.

Thanks!

From open.zone at virgin.net  Thu Apr 10 17:45:58 2008
From: open.zone at virgin.net (Micheal J)
Date: Fri, 11 Apr 2008 01:45:58 +0100
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <47FE984E.3020106@gmx.de>
References: <47FC11CF.5000909@gmx.de> <008701c89aa5$b7a7adc0$0200a8c0@marion>
	<47FE984E.3020106@gmx.de>
Message-ID: <002601c89b6d$698df270$0200a8c0@marion>

Johannes,

> Well, the latest changeset is 4759, but looking over the logs 
> in perforce I see that I didn't mention it there. I assumed 
> that once the wiki page is updated, people will know it in 
> general. Otherwise I don't see any file in the source 
> distribution, which mentions changes.

Thanks. The bug that required C# v2 to fix. I might have to backport that
specific fix. What was the fix for?

> > One can use any value type with the 'CSharp' target already AFAICT. 
> > Does the new 'CSharp2' target remove the need to update the 
> 'csharpTypeInitMap'
> > default value map in the templates for unspecified value types?
> 
> Actually, I meant this, even if it didn't came correctly over.

How is this achieved?. Using any value type without needing a template
change I mean... 

The use of Nullables to solve (the obvious solution) doesn't require a new
target AFAICT. Just C# v2+.

> > Interesting. What problem/issue was solved by removing Token as the 
> > abstract base class for all the token types included with 
> ANTLR? Had 
> > quick look at the diffs and nothing jumped out.
> 
> The simple reason is that Token as base class didn't add 
> anything beyond an extra step in the hierarchy. Nearly all 
> IToken properties were abstract and the one that wasn't was 
> overridden anyway. Also the Java target operates on the 
> interface itself, as does the rest of C#. Nothing but extra 
> complexity for no benefits.

YAGNI?. We can agree to differ about Token's utility. It's easy enough to
retain it locally here in any case.

> >> - No binaries for .Net 1.1 created yet. It is on my todo list.
> > 
> > If you have .NET v1.1 and .NET v2 installed on your box (or 
> in a VM), 
> > the Nant script takes care of building both:
> >    nant release -t:net-1.1 
> >    nant release -t:net-2.0
> 
> Well, it could be that I'm using Linux and Nant 0.86 Beta, but I get:

Most likely is. We didn't have time to do Mono build testing for obvious
reasons...

> I suppose it doesn't matter because I will switch to Prebuild 
> due to later reorgs in the code base. Then I can get easily 
> uptodate project files.

Prebuild has bugs in it's Nant build file generation and vs2005/vs2008
project file generation iirc. Related to resource files I think but can't
remember the specifics at the moment, sorry.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From parrt at cs.usfca.edu  Thu Apr 10 18:10:26 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 10 Apr 2008 18:10:26 -0700
Subject: [antlr-interest] more on faster expression parsing
In-Reply-To: <20080410215300.A5FBA11EBB4@www.antlr.org>
References: <0818BCAA-DFA0-4440-A418-78DB231C4795@cs.usfca.edu>
	<20080410215300.A5FBA11EBB4@www.antlr.org>
Message-ID: <4B664A23-9C3C-4A07-85DB-0C364FD0A05B@cs.usfca.edu>


On Apr 10, 2008, at 2:52 PM, Gavin Lambert wrote:

> At 09:29 11/04/2008, Terence Parr wrote:
> ><http://www.antlr.org/wiki/display/~admin/2008/04/10/Still+more+about+expression+parsing 
> >
> >
> >I think that covers it.
> [...]
> >It also looks one level deep into rules referenced from the special  
> rule.
>
> Is it feasible to look further than one level?  (Ideally, to any  
> number of levels.)  Just in case someone wants to factor the grammar  
> a bit more.  Probably not a biggie, but if it's not hard to look  
> further then it might be a good idea.

We can start with one level :)  It's a pattern i'm looking for.

> >Rule suffix is left alone except for the removal of the left
> >recursion so you can add whatever tree construction you want
> >but you must allow a $lhs parameter to come in.
>
> This is a little unclear, since presumably in the source grammar  
> there will still be an 'e' in the lhs position, so surely they will  
> refer to that in the tree rewrite, not $lhs?  Perhaps it will get  
> internally converted into using $lhs, but I don't think it'd be like  
> that in the source rule, surely?

Yeah, it's a special rule invoked from a special rule; I could change  
all $e to $lhs in actions / trees I guess.
Ter


From phulsmeijer at xebic.com  Fri Apr 11 02:35:49 2008
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Fri, 11 Apr 2008 11:35:49 +0200
Subject: [antlr-interest] A complete ECMAScript 3 grammar
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC62116875A@srvxdcex.xebic.com>

Hi all,

 

I've uploaded a complete grammar based on the ECMAScript 3 specification
to the grammars section on the antlr.org site under "A complete
ECMAScript 3 grammar". This grammar includes support for semicolon
insertion and regular expression literals. The direct link is:
http://research.xebic.com/es3.

 

Looking forward to reactions on this list.

 

Gr, patrick.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080411/3c7c0b4d/attachment.html 

From nkodidi at hotmail.com  Fri Apr 11 05:13:54 2008
From: nkodidi at hotmail.com (Diane Nkonyereza)
Date: Fri, 11 Apr 2008 12:13:54 +0000
Subject: [antlr-interest] Code too large error
Message-ID: <BAY142-W649F56240F24AC39D57C9A5EF0@phx.gbl>


Hi,
 
I'm getting several 'code too large' errors when I try to compile the files generated by antlr. I've actions in my grammar. Is there a way of overcoming this?
 
JavaParser.java:45670: code too large for try statement        catch (RecognitionException re) {        ^JavaParser.java:11527: code too large for try statement        try {            ^JavaParser.java:11525: code too large    public final void forControl() throws RecognitionException {                      ^Note: JavaParser.java uses unchecked or unsafe operations.Note: Recompile with -Xlint:unchecked for details.3 errors
 
Cheers,
Diane
_________________________________________________________________
Amazing prizes every hour with Live Search Big Snap
http://www.bigsnapsearch.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080411/0513e93e/attachment-0001.html 

From laguest at archeia.com  Fri Apr 11 06:10:52 2008
From: laguest at archeia.com (Luke A. Guest)
Date: Fri, 11 Apr 2008 14:10:52 +0100
Subject: [antlr-interest] ANTLR 3.1
In-Reply-To: <E48D75E5-FDFA-468C-878B-988B24DE2472@cs.usfca.edu>
References: <92b42db60803191329s3efdb7d1l480f3e41ec00a1cd@mail.gmail.com>
	<E48D75E5-FDFA-468C-878B-988B24DE2472@cs.usfca.edu>
Message-ID: <1207919452.6887.39.camel@rogue>


On Thu, 2008-04-10 at 11:58 -0700, Terence Parr wrote:
> Hi Edgar, just saw your v3 ANTLR eclipse plugin!
> http://antlrv3ide.sourceforge.net/
> cool!  Is it ready for people to start using?

It's being used by the Hibachi guys.

Luke.



From open.zone at virgin.net  Fri Apr 11 06:47:19 2008
From: open.zone at virgin.net (Micheal J)
Date: Fri, 11 Apr 2008 14:47:19 +0100
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <979791.48476.qm@web55115.mail.re4.yahoo.com>
References: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>
	<979791.48476.qm@web55115.mail.re4.yahoo.com>
Message-ID: <001501c89bda$90c4ede0$0200a8c0@marion>

Hi,

> I sent the following updated build.xml to a couple of folks 
> the other day; give it a try and let us know here.  A better 
> fix would be for the ANTLR distro _not_ to include the 
> generated files in the src tree, but until then...

...you could add a 'clean' target?

Much like in the Nant build for the C# v3.1 beta.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From peter.nann at vecommerce.com.au  Fri Apr 11 07:54:22 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Sat, 12 Apr 2008 00:54:22 +1000
Subject: [antlr-interest] Want to write a fairly simple syntax converter...
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3A92@vcmsydexh.vecommerce.com>


I am new to all this language parsing, and I am struggling to understand
'how much I need to understand' (to use a Rumsfeld'ism)

If I just want to write a fairly simple converter, and keep whitespace
fairly intact, how 'dirty' do I have to get my hands, language parsing
and code wise?

To clarify, I want to convert a proprietary format into equivalent XML.
Something like "x [ a b c ]"   ->  "<rule name=x> <one-of> a b c
</one-of> </rule>"
(But obviously, it gets a little more complicated than that)

My 2 biggest questions:
1) Do I need to worry about 'building trees', accessing the AST or
anything like that? Or are the 'snippets' of code you can put in the
grammar rules going to get me by?
2) Is maintaining whitespace easily do-able? It seems to get gobbled up
with little opportunity to keep it intact. It seems I could maybe
tokenize it explicitly as meaningful input, and then be able to simply
re-constitute it in the output, or is that just crazy talk and will
complicate my grammars too much (with 'WS?' sprinkled everywhere...)

... Just trying to get a good idea of what I am in for...

Thanks for any replies!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/c19ecf67/attachment.html 

From christian.schladetsch at gmail.com  Fri Apr 11 07:58:07 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sat, 12 Apr 2008 02:58:07 +1200
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <001501c89bda$90c4ede0$0200a8c0@marion>
References: <6442c4ae0804092329h78ea708cv778b275a7e53604e@mail.gmail.com>
	<979791.48476.qm@web55115.mail.re4.yahoo.com>
	<001501c89bda$90c4ede0$0200a8c0@marion>
Message-ID: <6442c4ae0804110758u2ac0750s48100c3c43090b20@mail.gmail.com>

There is a `clean` target for the ant script.

But the recursive nature of ANTLR makes this tricky. As Dr. Parr has pointed
out, the latest release is self-referential and needs `version 3 grammars`.
I guess that is from a previous version 3, as my belief system requires that
a thing cannot use itself to create itself. Of course, a thing can use an
older version of itself to make itself, that's fine, but the latest 'builds'
are something else.

Which makes it really hard for us grunts. I am a C++/C#/C/Asm guy trying to
meet deadlines. I am not a Java/Ant guy.

Sure, so it sucks to be me. Even so, I am not an idiot and it has been a
real pain to get a build up and running. Generated code from 3.1 is crashing
on VS2008 and I don't know if it's my grammar or because of the build
kludges I put in (like, *deleting* files from the release package).

It would be fine except I need a C++ target so I am using Jim's 3.1 C
runtime. But that means java -> C -> C++ burdened with build issues. I know
this is bleeding edge, and I am used to that (I am in game-dev) but at least
the builds should build?

I have utmost respect for Dr. Parr and his work, and for all the other
contributers. But if builds cannot be built out-of-the-box there is
something deeply wrong. Is there a build maintainter for this project? The
documentation is scant (yes I have bought the book), but my word if it has
to use java then `ant` from from the root has to Just Work.

Regards,
Christian.


On Sat, Apr 12, 2008 at 1:47 AM, Micheal J <open.zone at virgin.net> wrote:

> Hi,
>
> > I sent the following updated build.xml to a couple of folks
> > the other day; give it a try and let us know here.  A better
> > fix would be for the ANTLR distro _not_ to include the
> > generated files in the src tree, but until then...
>
> ...you could add a 'clean' target?
>
> Much like in the Nant build for the C# v3.1 beta.
>
> Micheal
>
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/24fa294e/attachment.html 

From peter.nann at vecommerce.com.au  Fri Apr 11 08:52:48 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Sat, 12 Apr 2008 01:52:48 +1000
Subject: [antlr-interest] Broken examples? (Re simple converter/translator)
References: <1080AEABD1979E42A15840F08084B67BFE3A92@vcmsydexh.vecommerce.com>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3A93@vcmsydexh.vecommerce.com>


Actually, I found filter/fuzzy-parsing/stream filter examples....

However, some of the details are a bit rough.

This example from:
http://www.antlr.org/wiki/display/ANTLR3/Lexical+filters :

lexer grammar FuzzyJava;
options {filter=true;}

FIELD
    :   TYPE WS name=ID '[]'? WS? (';'|'=')
        {System.out.println("found var "+$name.text);}
    ;

fragment
QID :   ID ('.' ID)*
        ;

fragment
ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
    ;

WS  :   (' '|'\t'|'\n')+
    ;


The above has a few problems:
* Missing 'TYPE' rule

* ANTLRWorks fails with this:
[01:44:57] \tmp\antlrworks\__Test__.java:12: <identifier> expected
[01:44:57]  g = new (tokens, 49153);
[01:44:57]         ^
[01:44:57] 1 error

Does ANTLRWorks not like 'lexer grammars' or filters or something?


Also getting stuff in console like:
[01:51:05] error(100):
C:\SAFE\svndev\vuitools\gsl2grxml\FilterTest.g:0:0: syntax error:
codegen: <AST>:0:0: unexpected end of subtree
[01:51:05] error(10):  internal error:
org.antlr.tool.Message.toString(Message.java:124): Assertion failed!
Message ID 100 created but is not present in errorMsgIDs or
warningMsgIDs. 
 - Have I installed wrong or something?



> _____________________________________________ 
> From: 	Peter Nann  
> Sent:	Saturday, 12 April 2008 12:54 AM
> To:	'antlr-interest at antlr.org'
> Subject:	Want to write a fairly simple syntax converter...
> 
> 
> I am new to all this language parsing, and I am struggling to
> understand 'how much I need to understand' (to use a Rumsfeld'ism)
> 
> If I just want to write a fairly simple converter, and keep whitespace
> fairly intact, how 'dirty' do I have to get my hands, language parsing
> and code wise?
> 
> To clarify, I want to convert a proprietary format into equivalent
> XML.
> Something like "x [ a b c ]"   ->  "<rule name=x> <one-of> a b c
> </one-of> </rule>"
> (But obviously, it gets a little more complicated than that)
> 
> My 2 biggest questions:
> 1) Do I need to worry about 'building trees', accessing the AST or
> anything like that? Or are the 'snippets' of code you can put in the
> grammar rules going to get me by?
> 2) Is maintaining whitespace easily do-able? It seems to get gobbled
> up with little opportunity to keep it intact. It seems I could maybe
> tokenize it explicitly as meaningful input, and then be able to simply
> re-constitute it in the output, or is that just crazy talk and will
> complicate my grammars too much (with 'WS?' sprinkled everywhere...)
> 
> ... Just trying to get a good idea of what I am in for...
> 
> Thanks for any replies!
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/0de37d3f/attachment.html 

From gudnabrsam at yahoo.com  Fri Apr 11 09:37:19 2008
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Fri, 11 Apr 2008 09:37:19 -0700 (PDT)
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <6442c4ae0804110758u2ac0750s48100c3c43090b20@mail.gmail.com>
Message-ID: <245964.89888.qm@web55114.mail.re4.yahoo.com>


--- Christian Schladetsch
<christian.schladetsch at gmail.com> wrote:

> There is a `clean` target for the ant script.
> 
> But the recursive nature of ANTLR makes this tricky.
> As Dr. Parr has pointed
> out, the latest release is self-referential and
> needs `version 3 grammars`.
> I guess that is from a previous version 3, as my
> belief system requires that
> a thing cannot use itself to create itself. Of
> course, a thing can use an
> older version of itself to make itself, that's fine,
> but the latest 'builds'
> are something else.
> 
> Which makes it really hard for us grunts. I am a
> C++/C#/C/Asm guy trying to
> meet deadlines. I am not a Java/Ant guy.
> 
> Sure, so it sucks to be me. Even so, I am not an
> idiot and it has been a
> real pain to get a build up and running. Generated
> code from 3.1 is crashing
> on VS2008 and I don't know if it's my grammar or
> because of the build
> kludges I put in (like, *deleting* files from the
> release package).
> 
> It would be fine except I need a C++ target so I am
> using Jim's 3.1 C
> runtime. But that means java -> C -> C++ burdened
> with build issues. I know
> this is bleeding edge, and I am used to that (I am
> in game-dev) but at least
> the builds should build?
> 
> I have utmost respect for Dr. Parr and his work, and
> for all the other
> contributers. But if builds cannot be built
> out-of-the-box there is
> something deeply wrong. Is there a build maintainter
> for this project? The

I am the de facto maintainer of the Ant build. 
Terence manages his own builds for himself, as he is
not a fan of Ant.  Unfortunately I haven't been as
able to keep abreast of everything as I'd like,
however.

So to get this back together... the only v3 grammar I
find in the 3.0.1 release tree that needs to be built
in ActionAnalysis.g.  Is that correct, Ter?

-Matt

> documentation is scant (yes I have bought the book),
> but my word if it has
> to use java then `ant` from from the root has to
> Just Work.
> 
> Regards,
> Christian.
> 
> 
> On Sat, Apr 12, 2008 at 1:47 AM, Micheal J
> <open.zone at virgin.net> wrote:
> 
> > Hi,
> >
> > > I sent the following updated build.xml to a
> couple of folks
> > > the other day; give it a try and let us know
> here.  A better
> > > fix would be for the ANTLR distro _not_ to
> include the
> > > generated files in the src tree, but until
> then...
> >
> > ...you could add a 'clean' target?
> >
> > Much like in the Nant build for the C# v3.1 beta.
> >
> > Micheal
> >
> > -----------------------
> > The best way to contact me is via the list/forum.
> My time is very limited.
> >
> >
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From parrt at cs.usfca.edu  Fri Apr 11 09:52:10 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 Apr 2008 09:52:10 -0700
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <245964.89888.qm@web55114.mail.re4.yahoo.com>
References: <245964.89888.qm@web55114.mail.re4.yahoo.com>
Message-ID: <DAB43220-B13F-430E-A224-5FE584BC59E7@cs.usfca.edu>


On Apr 11, 2008, at 9:37 AM, Matt Benson wrote:
> =I am the de facto maintainer of the Ant build.
> Terence manages his own builds for himself, as he is
> not a fan of Ant.  Unfortunately I haven't been as
> able to keep abreast of everything as I'd like,
> however.
>
> So to get this back together... the only v3 grammar I
> find in the 3.0.1 release tree that needs to be built
> in ActionAnalysis.g.  Is that correct, Ter?

Maybe ActionTranslator.g too?

Ter

From jimi at temporal-wave.com  Fri Apr 11 10:02:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Apr 2008 10:02:12 -0700
Subject: [antlr-interest] Build errors for ANTLR 3.13
In-Reply-To: <6442c4ae0804110758u2ac0750s48100c3c43090b20@mail.gmail.com>
Message-ID: <0d10f176ff754a428e95daad5f8bf5dc@temporal-wave.com>

I think that the build issue is compounded by the fact that the people (including Ter) who build ANTLR don't use ant to do it. This is because of a fundamental aversion to using something like XML to construct build scripts - a camp that I firmly belong to myself. How I get around this personally is that I use Netbeans to create a project with existing source, and just ignore the current ANT build.xml. This is no disrespect to the chap that kindly donated the effort to make the build.xml in any way. 

 

Ter doesn't use that ant script to build antlr and hence on occasions the build.xml gets out of whack with the 'real' build process. A much simpler bash script is used that just runs ANTLR  against ANTLR sources and jars it all up. The build really isn't very complicated and as it only takes about 20 seconds or so to build the lot from scratch, having ANT involved seems a bit overkill I think. 

 

Yes, you already have to have ANTLR before you can build ANTLR, and this is standard practice - at the end of the build you finally build the product with the current version of itself, and if you want to be sure then having done that you build it again with the version you just built and thus prove the huge requirement for regression tests :-). So, this is why people are tripping over the 'pre-existing sources" issue. If you want to bootstrap it, then these sources have to exist in the source tree. 

 

As quite a few people have a need to build the latest from source (there is always a jar in the snapshot by the way in case you haven't spotted this), then maybe I will spend a little time on either the ant script or just a publically available bash/.bat script that is easier to use directly with the source code as seen in a snapshot from perforce - that's basically the issue here and it might be a nice diversion on a sunny morning. As there's more chance of the Pope popping round for tea this afternoon than Ter using ant, then perhaps a script with a few comments might be the best bet as if it was really good, then Ter might even use it, though obviously the scripts he has now must work or we wouldn't be talking about this ;-0

 

If you can't get to the bottom of your crashes with C quickly, then feel free to tell me about them as it is entirely possible that there are bugs in the current beta. I know specifically that if you free the tree node stream after you have rewritten or otherwise manipulated it (such as in the polydiff example) then the runtime currently tries to release nodes twice. This will be fixed before release of course. Other than that I am not aware of any crashes and run boundschecker against lots of examples to try and keep it that way ;-)

 

Jim

 

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christian Schladetsch
Sent: Friday, April 11, 2008 7:58 AM
To: Micheal J
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Build errors for ANTLR 3.13

 

There is a `clean` target for the ant script.

But the recursive nature of ANTLR makes this tricky. As Dr. Parr has pointed out, the latest release is self-referential and needs `version 3 grammars`. I guess that is from a previous version 3, as my belief system requires that a thing cannot use itself to create itself. Of course, a thing can use an older version of itself to make itself, that's fine, but the latest 'builds' are something else.

Which makes it really hard for us grunts. I am a C++/C#/C/Asm guy trying to meet deadlines. I am not a Java/Ant guy. 

Sure, so it sucks to be me. Even so, I am not an idiot and it has been a real pain to get a build up and running. Generated code from 3.1 is crashing on VS2008 and I don't know if it's my grammar or because of the build kludges I put in (like, *deleting* files from the release package).

It would be fine except I need a C++ target so I am using Jim's 3.1 C runtime. But that means java -> C -> C++ burdened with build issues. I know this is bleeding edge, and I am used to that (I am in game-dev) but at least the builds should build?

I have utmost respect for Dr. Parr and his work, and for all the other contributers. But if builds cannot be built out-of-the-box there is something deeply wrong. Is there a build maintainter for this project? The documentation is scant (yes I have bought the book), but my word if it has to use java then `ant` from from the root has to Just Work.

Regards,
Christian.



On Sat, Apr 12, 2008 at 1:47 AM, Micheal J <open.zone at virgin.net> wrote:

Hi,


> I sent the following updated build.xml to a couple of folks
> the other day; give it a try and let us know here.  A better
> fix would be for the ANTLR distro _not_ to include the
> generated files in the src tree, but until then...

...you could add a 'clean' target?

Much like in the Nant build for the C# v3.1 beta.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080411/da3ac822/attachment.html 

From parrt at cs.usfca.edu  Fri Apr 11 10:58:21 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 Apr 2008 10:58:21 -0700
Subject: [antlr-interest] ANTLR v3.1 status
Message-ID: <3ABC2FF4-51DE-43F7-9CA4-97F564AB44DF@cs.usfca.edu>

Howdy. Looks like we'll go out with Java, C#, C, and Python targets  
ready for v3.1.  I have some important bug fixes to add but the latest  
builds will approach final within a matter of weeks.  I need to doc  
the new features too, which will take some time.  So, please try out  
latest build to see if it works for your grammars.  Almost there.

Thanks,
Ter

From jaluber at gmx.de  Fri Apr 11 11:20:24 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 11 Apr 2008 20:20:24 +0200
Subject: [antlr-interest] Want to write a fairly simple syntax
	converter...
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3A92@vcmsydexh.vecommerce.com>
References: <1080AEABD1979E42A15840F08084B67BFE3A92@vcmsydexh.vecommerce.com>
Message-ID: <47FFABE8.4090806@gmx.de>

Peter Nann schrieb:
> 
> I am new to all this language parsing, and I am struggling to understand 
> 'how much I need to understand' (to use a Rumsfeld'ism)
> 
> If I just want to write a fairly simple converter, and keep whitespace 
> fairly intact, how 'dirty' do I have to get my hands, language parsing 
> and code wise?
> 
> To clarify, I want to convert a proprietary format into equivalent XML.
> Something like "x [ a b c ]"   ->  "<rule name=x> <one-of> a b c 
> </one-of> </rule>"
> (But obviously, it gets a little more complicated than that)

Please don't use this kind of XML. It is possible to create a schema 
which says that an element includes a whitespace separated list, but 
everyone agrees that it is simpler to work with:

"<rule name=x> <one-of> <elem>a</elem> <elem>b</elem> <elem>c</elem> 
</one-of> </rule>"

More verbose yes, but XML wasn't designed with terseness in mind.

> My 2 biggest questions:
> 1) Do I need to worry about 'building trees', accessing the AST or 
> anything like that? Or are the 'snippets' of code you can put in the 
> grammar rules going to get me by?

If you want to put out the parse tree in the same shape as it is and 
with no extra computation, then I doubt that a tree grammar is necessary 
for you.

> 2) Is maintaining whitespace easily do-able? It seems to get gobbled up 
> with little opportunity to keep it intact. It seems I could maybe 
> tokenize it explicitly as meaningful input, and then be able to simply 
> re-constitute it in the output, or is that just crazy talk and will 
> complicate my grammars too much (with 'WS?' sprinkled everywhere?)

What do you need to retain th whitespace for? XML ignores big parts of 
it anyway and with a new file format you don't have to follow the 
conventions laid down by your predecessors. Better to ignore the 
original whitespace here.

Johannes

From parrt at cs.usfca.edu  Fri Apr 11 11:37:59 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 Apr 2008 11:37:59 -0700
Subject: [antlr-interest] Automatic template construction
Message-ID: <71712759-BF1E-4FA7-92A7-79D7AA8B6683@cs.usfca.edu>

Howdy,

  finished my entry on proposed solution for automatically  
constructing templates:

http://www.antlr.org/wiki/display/~admin/2008/04/11/Automatic 
+StringTemplate+construction+in+ANTLR+grammars

Ter

From jaluber at gmx.de  Fri Apr 11 14:16:05 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 11 Apr 2008 23:16:05 +0200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <002601c89b6d$698df270$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de>
	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>
	<002601c89b6d$698df270$0200a8c0@marion>
Message-ID: <47FFD515.5040702@gmx.de>

Micheal J schrieb:
> Johannes,
> 
>> Well, the latest changeset is 4759, but looking over the logs 
>> in perforce I see that I didn't mention it there. I assumed 
>> that once the wiki page is updated, people will know it in 
>> general. Otherwise I don't see any file in the source 
>> distribution, which mentions changes.
> 
> Thanks. The bug that required C# v2 to fix. I might have to backport that
> specific fix. What was the fix for?

I've replaced the reference to csharpTypeInitMap with 
"default(<typeName>)". If you "backport" this change, then you will only 
destroy C# 1.0 compatibility for CSharp - which is exactly that what I 
don't want.

>>> One can use any value type with the 'CSharp' target already AFAICT. 
>>> Does the new 'CSharp2' target remove the need to update the 
>> 'csharpTypeInitMap'
>>> default value map in the templates for unspecified value types?
>> Actually, I meant this, even if it didn't came correctly over.
> 
> How is this achieved?. Using any value type without needing a template
> change I mean... 
> 
> The use of Nullables to solve (the obvious solution) doesn't require a new
> target AFAICT. Just C# v2+.

The "default(type)" syntax initializes an object depending on type. For 
value types, their default constructor is invoked. For reference types, 
they are set to null. Nullables still leave a hole, which my solution 
doesn't.

Also it seems that I haven't been that clear why I've created a new 
target. I can't simply remove support for C# 1.0, as much as I'd prefer 
that. While I don't believe that someone is using ANTLR with C# 1.0, I 
can't stop supporting it instantly. So I've announced its end-of-life, 
which may take a year or more to come to full fruition.

In the meantime, I have to provide compatibility. There are two places 
to support: the templates and the runtime. The runtime is quite easy as 
one merely has to link to the appropriate assembly and as maintainer I 
can provide those, even if the sources will be split somewhat.

The templates are different. I can't include in templates C# 
2.0-specific stuff without ensuring that for C# 1.0 compilers the stuff 
isn't visibly. One possibility is to use preprocessor directives. The 
disadvantage is that people have to define the right symbol - something 
which doesn't seem right to me.

Another possibility is to tell somehow ANTLR via an option, that one is 
targeting a certain language version and let the templates check for 
this new attribute. But that would lead to two targets in one file and 
the doubling of code makes it more difficult to fix bugs. I've come to 
the conclusion that the simplest solution is to create a new template 
target and have done so.

> YAGNI?. We can agree to differ about Token's utility. It's easy enough to
> retain it locally here in any case.

I assume that you like Token as the abstract class which defines some 
standard behaviour which is likely needed by classes derived from it. In 
that role it failed miserably, as either no behaviour was defined or the 
defined behaviour was useless anyway for the deriving classes. IMO, the 
role is filled by CommonToken anyway (is that correct, Ter?), and 
whatever code has been removed from the Token class could be replaced 
easily if the need actually arises.

>> Well, it could be that I'm using Linux and Nant 0.86 Beta, but I get:
> 
> Most likely is. We didn't have time to do Mono build testing for obvious
> reasons...

Did you test it on your Windows machine? I'm sure that my first test to 
use that build script was on Windows and it has failed then, too.

>> I suppose it doesn't matter because I will switch to Prebuild 
>> due to later reorgs in the code base. Then I can get easily 
>> uptodate project files.
> 
> Prebuild has bugs in it's Nant build file generation and vs2005/vs2008
> project file generation iirc. Related to resource files I think but can't
> remember the specifics at the moment, sorry.

I will look into that. Maybe I'll fix the Nant build instead, although 
having a functional Prebuild setup would help for the VS project files.

Johannes

From parrt at cs.usfca.edu  Fri Apr 11 16:34:20 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 Apr 2008 16:34:20 -0700
Subject: [antlr-interest] Rewrite rules outside of grammars
Message-ID: <CA09939A-DE4F-43B7-B569-589B8508E29B@cs.usfca.edu>

Howdy. My thoughts on building a rewrite engine (such as how Andy  
Tripp builds things):

http://www.antlr.org/wiki/display/~admin/2008/04/11/Rewrite+rules

There are a number of impressive looking academic systems that do  
this, but sometime I'm going to spend a little bit of time to bring my  
particular brand of insanity to bear on the problem.

Ter

From scott at adrenaline.com  Fri Apr 11 16:55:44 2008
From: scott at adrenaline.com (Scott McLoughlin)
Date: Fri, 11 Apr 2008 19:55:44 -0400
Subject: [antlr-interest] Removing warning for optional token not working -
	need help
Message-ID: <47FFFA80.4030002@adrenaline.com>


I have the following function definition form. The docstring is 
optional, and clearly
would conflict with expr.  So based on the book and online examples, I added
the ((LITSTR)=>LITSTR)?  construct.

stmtDef
    | 'def' ID OPAREN formals CPAREN (COLON type)? ((LITSTR)=> LITSTR)? expr
    ;



The warning DID go away, but now if I give an input like

def foo(x) : Int "Test" { 1 + x; }

I get an error message in antlrWorks - FailedPredicateException(stmdDef, 
{synpred1}?)

I got the same problem with ((ELSE)=> ELSE expr)?  Warnings go away, but 
fails on input.

I'm trying to get a completely warning free grammar. Is this a pipe 
dream of a newbie? :-)

I'm using antlrWorks 1.1.7.


Much thanks for any help.

Scott

From guntiso at latnet.lv  Fri Apr 11 17:01:02 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Sat, 12 Apr 2008 03:01:02 +0300
Subject: [antlr-interest] 3.1b1 (??) 2008-04-09.18 issues
Message-ID: <1207958462.47fffbbeda200@clients.latnet.lv>

I've tried 2008-04-09.18 on my grammar.

1) I get the following warning

     [java] warning(200): .../Query.g:70:2: Decision can match input such as "S"
using multiple alternatives: 1, 2, 3
     [java] As a result, alternative(s) 2,3 were disabled for that input

for

absoluteLocationPath
	:	(S? '/' relativeLocationPath) => S!? '/' relativeLocationPath
	|	 S!? '/'
	|	 S? d='//' relativeLocationPath
		->	ROOT_DSLASH[$d] relativeLocationPath;

The same with 2008-01-10.16.
Compiles and works fine with antlrworks-1.1.5.

2)  [java] warning(149): Query__.g:0:0: rewrite syntax or operator with no
output option; setting output=AST

No such warning from 2008-01-10.16, works fine with antlrworks-1.1.5.
BTW, I have the following two options in my grammar:

options {
	output=AST;
	memoize=true;
}

3)   [java] error(10):  internal error: .../Query.g :
java.util.NoSuchElementException: no such attribute: ASTLabelType in template
context [outputFile lexer lexerRule ruleDeclarations]
     [java]
org.antlr.stringtemplate.StringTemplate.checkNullAttributeAgainstFormalArguments(StringTemplate.java:1290)
     [java] org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:814)
     [java] org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
     [java] org.antlr.stringtemplate.StringTemplate.get(StringTemplate.java:812)
     [java]
org.antlr.stringtemplate.StringTemplate.getAttribute(StringTemplate.java:696)
     ...

No such error from 2008-01-10.16, works fine with antlrworks-1.1.5.

Guntis


From fireonyoursleeve at hotmail.com  Fri Apr 11 18:17:31 2008
From: fireonyoursleeve at hotmail.com (Aaron Leiby)
Date: Fri, 11 Apr 2008 21:17:31 -0400
Subject: [antlr-interest] A complete ECMAScript 3 grammar
Message-ID: <BLU136-W146C5AA72EA667176EC10BCBEE0@phx.gbl>

Awesome work!  Very well commented and easy to read.  I like how you
documented the tradeoffs particularly in favor of performance.

What
are the usage rights for this?  I'm looking to build some scripting
support into some ad hoc projects I've been toying with, but I'm not
very happy with the direction ES4 is headed.  I was also thinking about
stripping out a lot of the blemishes found in Javascript at the same
time (like the automatic semicolon insertion, getting rid of 'with', no
automatic global scoping of vars, etc.).  I'm not much of a grammar
expert, so being able to use something like this as a springboard would
be a huge start.

> Hi all,
>
> 
>
> I've uploaded a complete grammar based on the ECMAScript 3 specification
> to the grammars section on the antlr.org site under "A complete
> ECMAScript 3 grammar". This grammar includes support for semicolon
> insertion and regular expression literals. The direct link is:
> http://research.xebic.com/es3.
>
> 
>
> Looking forward to reactions on this list.
>
> 
>
> Gr, patrick.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080411/7e3f76e9/attachment.html 

From open.zone at virgin.net  Fri Apr 11 19:27:04 2008
From: open.zone at virgin.net (Micheal J)
Date: Sat, 12 Apr 2008 03:27:04 +0100
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <47FFD515.5040702@gmx.de>
References: <47FC11CF.5000909@gmx.de>
	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>
	<002601c89b6d$698df270$0200a8c0@marion> <47FFD515.5040702@gmx.de>
Message-ID: <002a01c89c44$b36f3ca0$0200a8c0@marion>

Johannes,

> > Thanks. The bug that required C# v2 to fix. I might have to 
> backport 
> > that specific fix. What was the fix for?
> 
> I've replaced the reference to csharpTypeInitMap with 
> "default(<typeName>)". If you "backport" this change, then 
> you will only destroy C# 1.0 compatibility for CSharp - which 
> is exactly that what I don't want.

Understood. The bug was due to the type initialization system implemented in
ANTLR. Nothing to backport then.

> > How is this achieved?. Using any value type without needing 
> a template 
> > change I mean...
> > 
> > The use of Nullables to solve (the obvious solution) 
> doesn't require a 
> > new target AFAICT. Just C# v2+.
> 
> The "default(type)" syntax initializes an object depending on 
> type. For value types, their default constructor is invoked. 
> For reference types, they are set to null. Nullables still 
> leave a hole, which my solution doesn't.

Cool. This is the cleanest solution for C# v2+ (once C# v1.x compatibility
is no longer important). Didn't think the default ctor was invoked. Thought
default() just initialized value-types to 0 and ref-types to null.

Our working assumption was C# v1.x compatibility in same target so we kept
the ANTLR type init system. We investigated nullables as a means to support
both C# v1.x and v2.x+ in the same target (using preprocessor directives to
support differences in syntax) but didn't do any more in available time.

> > YAGNI?. We can agree to differ about Token's utility. It's 
> easy enough 
> > to retain it locally here in any case.
> 
> I assume that you like Token as the abstract class which 
> defines some standard behaviour which is likely needed by 
> classes derived from it. In that role it failed miserably, as 
> either no behaviour was defined or the defined behaviour was 
> useless anyway for the deriving classes. IMO, the role is 
> filled by CommonToken anyway (is that correct, Ter?), and 
> whatever code has been removed from the Token class could be 
> replaced easily if the need actually arises.

The standard java runtime has no equivalent to the old Token class in C#.
CommonToken and ClassicToken implement IToken but are otherwise unrelated
(nor should they be). Token is useful for injecting common behaviour when in
custom variants of the runtime.

> >> Well, it could be that I'm using Linux and Nant 0.86 Beta, 
> but I get:
> > 
> > Most likely is. We didn't have time to do Mono build testing for 
> > obvious reasons...
> 
> Did you test it on your Windows machine? I'm sure that my 
> first test to use that build script was on Windows and it has 
> failed then, too.

Yes. It was used to build everything incl. the runtime distros for .NET v1.x
and 2.x.

> > Prebuild has bugs in it's Nant build file generation and 
> vs2005/vs2008 
> > project file generation iirc. Related to resource files I think but 
> > can't remember the specifics at the moment, sorry.
> 
> I will look into that. Maybe I'll fix the Nant build instead, 
> although having a functional Prebuild setup would help for 
> the VS project files.

Might be worth checking if Prebuild be moulded to generate Nant files that
can build docs, the distro archives etc in addition to building the
assemblies...

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From mail at ghost23.de  Sat Apr 12 01:10:47 2008
From: mail at ghost23.de (Sven Busse)
Date: Sat, 12 Apr 2008 10:10:47 +0200
Subject: [antlr-interest] The NOT (~) Operator
Message-ID: <000801c89c74$c3a2b9a0$9231fea9@Werkbank>

Hi,

i have a problem with a grammar error message, i don't understand.
I have this grammar (reduced to the relevant bit):

grammar simpletest;

INDENTATION
	:	TAB* ~NEWLINE;

NEWLINE
	:	'\r'? '\n';

fragment
TAB	:	'\t';

Checking the grammar with ANTLRWorks gives me this error:

simpletest.g:0:0: syntax error: buildnfa: <AST>:6:11: unexpected AST node: ?

The problem seems to relate to the "~NEWLINE", because if i delete it, i
get no error. Also, if i change the "INDENTATION" to a parser rule
"indentation", i get no error, but that is not an option for me.

Can someone explain to me, what the reason behind this error is?

Thank you
Sven


From christian.schladetsch at gmail.com  Sat Apr 12 03:23:34 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sat, 12 Apr 2008 22:23:34 +1200
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
	after matching rule
Message-ID: <6442c4ae0804120323x642cc78bwb4a29c44d811e30@mail.gmail.com>

Hello,

The assertion fires on input "42" using antlr-2008-04-09.10:

grammar Fail;
options { language=C; }
@preincludes { #include <assert.h> }
sequence  : num += (NUMBER+) { assert($num != 0); } ;
NUMBER  :  ('0'..'9')+ ;

Is this correct behavior?

Regards,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/228bc8b5/attachment.html 

From chris at lambrou.net  Sat Apr 12 04:16:59 2008
From: chris at lambrou.net (Chris Lambrou)
Date: Sat, 12 Apr 2008 12:16:59 +0100
Subject: [antlr-interest] License clarification - ECMAScript grammer,
	JavaScript.g
Message-ID: <70bbae280804120416w68dbd2ame4de244cd7fef2c9@mail.gmail.com>

Hi all,

I've been asked by a couple of people off-list about the license terms for
my ECMAScript grammar, JavaScript.g. This message is simply to state that
the grammar may be used under the same BSD license terms as ANTLR itself,
shown below. Any future updates to the grammar will explicitly state the
license terms.

Chris



Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
    * Neither the name of the author nor the names of its contributors may
be used to endorse or promote products derived from this software without
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/c11ccd66/attachment-0001.html 

From antlr at mirality.co.nz  Sat Apr 12 06:03:49 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 01:03:49 +1200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <47FFD515.5040702@gmx.de>
References: <47FC11CF.5000909@gmx.de> <008701c89aa5$b7a7adc0$0200a8c0@marion>
	<47FE984E.3020106@gmx.de> <002601c89b6d$698df270$0200a8c0@marion>
	<47FFD515.5040702@gmx.de>
Message-ID: <20080412130401.7723B11EC50@www.antlr.org>

At 09:16 12/04/2008, Johannes Luber wrote:
 >The templates are different. I can't include in templates C#
 >2.0-specific stuff without ensuring that for C# 1.0 compilers
 >the stuff isn't visibly. One possibility is to use preprocessor
 >directives. The disadvantage is that people have to define the
 >right symbol - something which doesn't seem right to me.

I've occasionally lamented the fact that C# doesn't provide a full 
macro-based preprocessor like C++ -- it would be handy in 
situations like this to be able to use "#if __CSHARP__ >= 
0x00020000" or something.  (Other ones that I've particularly 
wanted include __FILE__ and __DATE__.)  There's also cases where 
code repetition could be reduced significantly if macros could be 
used.

On the other hand, it does make the language easier to read when 
you know that something can't be aliased weirdly to something 
unexpected.  So the C#-ish approach to dealing with the repeated 
code / multiple version issue tends to end up being the use of 
some sort of code generator -- which is basically what ANTLR is 
anyway :)


From antlr at mirality.co.nz  Sat Apr 12 06:06:50 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 01:06:50 +1200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <002a01c89c44$b36f3ca0$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de> <008701c89aa5$b7a7adc0$0200a8c0@marion>
	<47FE984E.3020106@gmx.de> <002601c89b6d$698df270$0200a8c0@marion>
	<47FFD515.5040702@gmx.de> <002a01c89c44$b36f3ca0$0200a8c0@marion>
Message-ID: <20080412130658.A8A1911EC51@www.antlr.org>

At 14:27 12/04/2008, Micheal J wrote:
 >Didn't think the default ctor was invoked.  Thought
 >default() just initialized value-types to 0 and ref-types to
 >null.

It's the same thing.  The default constructor of a value type 
simply invokes default(x) on all its member fields (ending up 
zero-or-null-initialising them).  And since you can't redefine the 
default constructor to do anything else, the functionality is 
always equivalent.


From antlr at mirality.co.nz  Sat Apr 12 06:14:38 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 01:14:38 +1200
Subject: [antlr-interest] The NOT (~) Operator
In-Reply-To: <000801c89c74$c3a2b9a0$9231fea9@Werkbank>
References: <000801c89c74$c3a2b9a0$9231fea9@Werkbank>
Message-ID: <20080412131447.33DD711EC3F@www.antlr.org>

At 20:10 12/04/2008, Sven Busse wrote:
 >INDENTATION
 >	:	TAB* ~NEWLINE;
 >
 >NEWLINE
 >	:	'\r'? '\n';
 >
 >fragment
 >TAB	:	'\t';
 >
 >Checking the grammar with ANTLRWorks gives me this error:
 >
 >simpletest.g:0:0: syntax error: buildnfa: <AST>:6:11: unexpected 

 >AST node: ?
 >
 >The problem seems to relate to the "~NEWLINE", because if i 
delete
 >it, i get no error. Also, if i change the "INDENTATION" to a 
parser
 >rule "indentation", i get no error, but that is not an option 
for me.
 >
 >Can someone explain to me, what the reason behind this error is?

In the lexer, "~" inverts a "set" of characters (a group of single 
character alternatives).  It cannot be used on a "sequence" (one 
or more characters following another character).

In the parser, "~" similarly operates on "sets", but this time 
they're sets of tokens.  Just like the lexer, though, it can't be 
used on a sequence of tokens.

Since NEWLINE is a single token, it's valid to invert it in the 
parser level (you're saying "any token except NEWLINE").  At the 
lexer level you can't invert it though -- that would be translated 
as "any single character except the sequence of '\n' optionally 
preceded by a '\r'", which doesn't really make sense.

In this case, your best bet is probably to spell it out 
explicitly:

INDENTATION
   : TAB ~('\r' | '\n')
   ;

... but bear in mind that this will consume whichever non-newline 
character follows the tab (making it part of the INDENTATION 
token), which may not be what you really want.


From antlr at mirality.co.nz  Sat Apr 12 06:17:48 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 01:17:48 +1200
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
 after matching rule
In-Reply-To: <6442c4ae0804120323x642cc78bwb4a29c44d811e30@mail.gmail.com
 >
References: <6442c4ae0804120323x642cc78bwb4a29c44d811e30@mail.gmail.com>
Message-ID: <20080412131756.70F5E11EC66@www.antlr.org>

At 22:23 12/04/2008, Christian Schladetsch wrote:
>The assertion fires on input "42" using antlr-2008-04-09.10:
>
>grammar Fail;
>options { language=C; }
>@preincludes { #include <assert.h> }
>sequence  : num += (NUMBER+) { assert($num != 0); } ;
>NUMBER  :  ('0'..'9')+ ;
>
>Is this correct behavior?

"Correct" is a little debatable, but you've used a syntax that's 
known to be invalid in the current version.  Try this instead:

sequence : (num += NUMBER)+ ...

(Basically, you can't assign a label to a block, only to a single 
token.)


From eamon at nerbonne.org  Sat Apr 12 09:48:08 2008
From: eamon at nerbonne.org (Eamon Nerbonne)
Date: Sat, 12 Apr 2008 18:48:08 +0200
Subject: [antlr-interest] tree grammar namespace option for CSharp target
In-Reply-To: <a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>
References: <ff64fc84a813ca499887068f92954968@temporal-wave.com>
	<a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>
Message-ID: <16b7b9ec0804120948i30088d81q9f6f901e1840ff2e@mail.gmail.com>

After some experimentation then:

@lexer::namespace specifies the namespace for lexers,
@parser::namespace specifies the namespace for non-tree parsers
@namespace specifies the namespace for both tree and non-tree parsers.

I've updated the wiki accordingly.  This particular naming scheme does not,
however, seem very consistent atm.  Will antlr 3.1 and beyond's C# target
merge tree and non-tree parsers and thus remove the current distinction?

On Wed, Apr 9, 2008 at 10:06 PM, Jim Idle <jimi at temporal-wave.com> wrote:

>  I should clarify:
>
>
>
> @namespace { }
>
>
>
> Is what it should be I think.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Jim Idle
> *Sent:* Wednesday, April 09, 2008 1:04 PM
> *To:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] tree grammar namespace option for CSharp
> target
>
>
>
> Don't remove the tree part, but do remove the @parser:: part and you
> should find that it works :-)
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Eamon Nerbonne
> *Sent:* Wednesday, April 09, 2008 12:43 PM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] tree grammar namespace option for CSharp
> target
>
>
>
> Using C# + ANTLR 3.0.1 (antlrworks 1.1.7), I'd like to place the generated
> tree grammar parser in a namespace.  The wiki-docs explain how to do this
> for parsers and lexers, but these commands don't work in tree grammars.
>
> The antlr wiki-docs are at
> http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target#Antlr3CSharpTarget-Specifyingthenamespaceforyourrecognizer
> The (simple) grammar which triggers this is attached, but the problematic
> combination is simply:
>
> *tree *grammar ModalFormulaTree;
>
> options {
>     language=CSharp;
>     tokenVocab=ModalFormulaParser;
> }
>
> @parser::namespace { FormulaParser.Generated }
>
> Notably, removing the "tree" from the first line still generates a tree
> grammar and no longer complains about an "unknown or invalid action scope
> for tree grammar: parser", but the resultant tree grammar is not placed in a
> namespace tag.
>
> Is there a different option for tree grammars - or is this a bug?
>



-- 
eamon at nerbonne.org - Tel#:+31-6-15142163
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/d65862e3/attachment.html 

From open.zone at virgin.net  Sat Apr 12 10:27:04 2008
From: open.zone at virgin.net (Micheal J)
Date: Sat, 12 Apr 2008 18:27:04 +0100
Subject: [antlr-interest] tree grammar namespace option for CSharp target
In-Reply-To: <16b7b9ec0804120948i30088d81q9f6f901e1840ff2e@mail.gmail.com>
References: <ff64fc84a813ca499887068f92954968@temporal-wave.com><a4e24e4f951eb947be5371aa3e1eb6c2@temporal-wave.com>
	<16b7b9ec0804120948i30088d81q9f6f901e1840ff2e@mail.gmail.com>
Message-ID: <000301c89cc2$6e3673f0$0200a8c0@marion>

Hi,
 
Not quite. The only distinction is between the "Combined" grammar type
(lexer + parser in same file) and other grammar types (lexer, parser or
treeparser only in file)
 
- In combined grammars the prefixed forms '@lexer::namespace' and
'@parser::namespace' <mailto:'@parser::'>  are used to distinguish between
blocks specific to either lexer or parser but, '@namespace' applies to the
parser part only [1*],
 
- In other grammars (i.e. non-combined grammars) no distinction is needed.
 
 
Micheal
 
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

 
[1*]   The counter-inuitive scheme survives due to Ter iirc. Others had
suggested that blocks without  '@lexer::' or '@parser::' prefixes in
combined grammars should apply to both lexers and parsers. Had that been the
case,  '@namespace' would have worked in all grammar types. I don't hold out
much hope that Ter would make this change (or indeed accept a patch that
did).  


  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Eamon Nerbonne
Sent: 12 April 2008 17:48
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] tree grammar namespace option for CSharp
target


After some experimentation then:

@lexer::namespace specifies the namespace for lexers,
@parser::namespace specifies the namespace for non-tree parsers
@namespace specifies the namespace for both tree and non-tree parsers.

I've updated the wiki accordingly.  This particular naming scheme does not,
however, seem very consistent atm.  Will antlr 3.1 and beyond's C# target
merge tree and non-tree parsers and thus remove the current distinction?


On Wed, Apr 9, 2008 at 10:06 PM, Jim Idle <jimi at temporal-wave.com> wrote:


I should clarify:

 

@namespace { } 

 

Is what it should be I think.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, April 09, 2008 1:04 PM 


To: antlr-interest at antlr.org

Subject: Re: [antlr-interest] tree grammar namespace option for CSharp
target 



 

Don't remove the tree part, but do remove the @parser:: part and you should
find that it works :-)

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Eamon Nerbonne
Sent: Wednesday, April 09, 2008 12:43 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] tree grammar namespace option for CSharp target

 

Using C# + ANTLR 3.0.1 (antlrworks 1.1.7), I'd like to place the generated
tree grammar parser in a namespace.  The wiki-docs explain how to do this
for parsers and lexers, but these commands don't work in tree grammars.

The antlr wiki-docs are at
http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target#Antlr3CSharpT
arget-Specifyingthenamespaceforyourrecognizer
The (simple) grammar which triggers this is attached, but the problematic
combination is simply:

tree grammar ModalFormulaTree;

options { 
    language=CSharp;
    tokenVocab=ModalFormulaParser;
}

@parser::namespace { FormulaParser.Generated }
 
Notably, removing the "tree" from the first line still generates a tree
grammar and no longer complains about an "unknown or invalid action scope
for tree grammar: parser", but the resultant tree grammar is not placed in a
namespace tag.

Is there a different option for tree grammars - or is this a bug?




-- 
eamon at nerbonne.org - Tel#:+31-6-15142163 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/a5f8b464/attachment-0001.html 

From enjoywm at cs.wm.edu  Sat Apr 12 12:35:17 2008
From: enjoywm at cs.wm.edu (Yixun Liu)
Date: Sat, 12 Apr 2008 15:35:17 -0400
Subject: [antlr-interest] make antlr support a new type
Message-ID: <48010EF5.2030204@cs.wm.edu>

Hi,
I am new to antlr. Now I want to make antlr support a new build-in type
such as Dim3, which make the declaration :Dim3 dim legal.
How to do it.

Thanks in advance!

Yixun

From th30dan at gmail.com  Sat Apr 12 13:00:54 2008
From: th30dan at gmail.com (Dan)
Date: Sat, 12 Apr 2008 15:00:54 -0500
Subject: [antlr-interest] Elusive rewrite rule
Message-ID: <398064110804121300k491dffe5k795ead9e9d0af67c@mail.gmail.com>

Hello everyone.

I'm trying to figure out how to write the rewrite rule for a parser rule
named "functionExpr".  I already have rewrite rules for my other parser
rules.  Here's a simplified version of my grammar:

=======================================================
tokens {
 FUNCTION;
 TAG;
}

functionExpr
 : NAME '(' pathExpr (',' ARG)* ')' -> ??????????
 ;

pathExpr
 : NAME ('/' pathExpr)? -> ^(TAG NAME pathExpr?)
 ;

NAME : (a-z)+ ;
ARG : '\'' (~'\'')* '\'' ;
=======================================================

My requirements dictate that for this input:
 foo(a/b/c, '1', '2')

I need to generate this AST:
 (TAG a (TAG b (TAG c (FUNCTION foo '1' '2'))))

Any ideas what should be the rewrite rule for "functionExpr" to satisfy this
requirement?



The basic problem I see is that I need to attach the FUNCTION subtree to the
'c' TAG subtree, but I haven't finished processing the entire functionExpr
input (i.e. the ARGs) at the time I parse the 'c' TAG subtree.

So is there some way to save a "reference" to the 'c' TAG subtree, so that
when I finish processing the functionExpr ARGs, I can create the FUNCTION
subtree and attach it to the 'c' TAG subtree via the reference, and have the
entire structure (starting with the 'a' TAG subtree at the top) become the
returned subtree of the entire functionExpr rule?

Many thanks,
-Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080412/ecfbe1fb/attachment.html 

From jaluber at gmx.de  Sat Apr 12 15:45:52 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 13 Apr 2008 00:45:52 +0200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <002a01c89c44$b36f3ca0$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de>	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>	<002601c89b6d$698df270$0200a8c0@marion>
	<47FFD515.5040702@gmx.de> <002a01c89c44$b36f3ca0$0200a8c0@marion>
Message-ID: <48013BA0.9070608@gmx.de>

Micheal J schrieb:
> Johannes,
> 
> The standard java runtime has no equivalent to the old Token class in C#.
> CommonToken and ClassicToken implement IToken but are otherwise unrelated
> (nor should they be). Token is useful for injecting common behaviour when in
> custom variants of the runtime.

Firstly, people can create an own Token base class when truly necessary. 
Secondly, if we don't need it (which is because ClassicToken implements 
ANTLR v2 behaviour and CommonToken implements ANTLR v3 behaviour) then 
it doesn't make sense to include it.

I really can't see why anyone would try to combine both classes or to 
create another variant, which doesn't follow the behaviour of 
ClassicToken or CommonToken. For the latter, I don't know if there is 
even a third possibility of semantics. It must be truly an oddball which 
we as runtime people for standard ANTLR shouldn't care about.

>>> Prebuild has bugs in it's Nant build file generation and 
>> vs2005/vs2008 
>>> project file generation iirc. Related to resource files I think but 
>>> can't remember the specifics at the moment, sorry.
>> I will look into that. Maybe I'll fix the Nant build instead, 
>> although having a functional Prebuild setup would help for 
>> the VS project files.
> 
> Might be worth checking if Prebuild be moulded to generate Nant files that
> can build docs, the distro archives etc in addition to building the
> assemblies...

The distro archives? You mean the daily builds? For that using the 
ant-build is sufficient. One could add to the ant-build the building of 
the runtime targets at least as an option, as this would simplify things 
further.

Johannes

From christian.schladetsch at gmail.com  Sat Apr 12 18:25:02 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sun, 13 Apr 2008 13:25:02 +1200
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
	after matching rule
In-Reply-To: <4800b686.120b420a.2d17.5c3eSMTPIN_ADDED@mx.google.com>
References: <6442c4ae0804120323x642cc78bwb4a29c44d811e30@mail.gmail.com>
	<4800b686.120b420a.2d17.5c3eSMTPIN_ADDED@mx.google.com>
Message-ID: <6442c4ae0804121825q2e63559am80efc74142102f69@mail.gmail.com>

I tried the more likely (num += NUMBER)+ syntax the first time. Then I got:

error C2039: 'vectors' : is not a member of 'FailParser_Ctx_struct'

When trying to compile the parser. I guess I'll just do something else....
like revert to my hand-written C++ parser :P


On Sun, Apr 13, 2008 at 1:17 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 22:23 12/04/2008, Christian Schladetsch wrote:
>
> > The assertion fires on input "42" using antlr-2008-04-09.10:
> >
> > grammar Fail;
> > options { language=C; }
> > @preincludes { #include <assert.h> }
> > sequence  : num += (NUMBER+) { assert($num != 0); } ;
> > NUMBER  :  ('0'..'9')+ ;
> >
> > Is this correct behavior?
> >
>
> "Correct" is a little debatable, but you've used a syntax that's known to
> be invalid in the current version.  Try this instead:
>
> sequence : (num += NUMBER)+ ...
>
> (Basically, you can't assign a label to a block, only to a single token.)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080413/7432226c/attachment.html 

From antlr at mirality.co.nz  Sat Apr 12 18:39:41 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 13:39:41 +1200
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
 after matching rule
In-Reply-To: <6442c4ae0804121825q2e63559am80efc74142102f69@mail.gmail.co
 m>
References: <6442c4ae0804120323x642cc78bwb4a29c44d811e30@mail.gmail.com>
	<4800b686.120b420a.2d17.5c3eSMTPIN_ADDED@mx.google.com>
	<6442c4ae0804121825q2e63559am80efc74142102f69@mail.gmail.com>
Message-ID: <20080413013954.CBF9211EAF5@www.antlr.org>

At 13:25 13/04/2008, Christian Schladetsch wrote:
>I tried the more likely (num += NUMBER)+ syntax the first time. 
>Then I got:
>
>error C2039: 'vectors' : is not a member of 
>'FailParser_Ctx_struct'
>
>When trying to compile the parser. I guess I'll just do something 
>else.... like revert to my hand-written C++ parser :P

Which means it's getting past the bit that it didn't like before 
and now it doesn't like a different part of your grammar -- some 
part you didn't post which contains the word "vectors".

We can only help you with problems when you give us enough 
information to help you with ;)

(Another possibility is that the version of C runtime you're 
including doesn't match the version of the C templates included 
with the version of ANTLR you were using to build your 
grammar.  You need to make sure you're using the right ones.)


From antlr at mirality.co.nz  Sat Apr 12 19:18:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 14:18:30 +1200
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
 after matching rule
In-Reply-To: <ba71e0e40804121848g4372bb29hbf7ba4cc77c5a5a7@mail.gmail.co
 m>
References: <6442c4ae0804120323x642cc78bwb4a29c44d811e30@mail.gmail.com>
	<4800b686.120b420a.2d17.5c3eSMTPIN_ADDED@mx.google.com>
	<6442c4ae0804121825q2e63559am80efc74142102f69@mail.gmail.com>
	<4801646c.17e7300a.7cbd.ffffd236SMTPIN_ADDED@mx.google.com>
	<ba71e0e40804121848g4372bb29hbf7ba4cc77c5a5a7@mail.gmail.com>
Message-ID: <20080413021841.7816011EC2D@www.antlr.org>

At 13:48 13/04/2008, Christian and Natalie Schladetsch wrote:
>grammar Fail;
>options { language=C; }
>@preincludes { #include <assert.h> }
>sequence  : num += (NUMBER+) { assert($num != 0); } ;
>NUMBER  :  ('0'..'9')+ ;

That other problem (with parentheses) has crept back in :)

>error C2039: 'vectors' : is not a member of 'PiParser_Ctx_struct'
>
>That is the complete parser. The line in question is 
>'list_num=ctx->vectors->newVector(ctx->vectors);'
>
>With regards of mismatched templates to runtime: I fear that the 
>work-around I used to get antlr built (by deleting files) results 
>in this. So my bad. I guess I need to go back to the drawing 
>board and make a new build of antlr 3.1 somehow.

Are you building your grammar with ANTLRworks or via the command 
line?  ANTLRworks contains embedded copies of all the ANTLR 
classes and templates, which you'll need to replace with the 3.1 
versions if you want to use the 3.1 runtime.

(I usually don't bother; if I need to use an intermediate build 
for some reason [and I've always used the prebuilt ones] then I'll 
just stop using ANTLRworks until it catches up.  Since I'm not 
targeting Java and it doesn't properly support Unicode input 
anyway, I've only found it of limited usefulness.)

Another thing to check is your include path; maybe it's finding 
one of the other versions of the C runtime before the one you 
actually want to use.


From open.zone at virgin.net  Sat Apr 12 19:27:36 2008
From: open.zone at virgin.net (Micheal J)
Date: Sun, 13 Apr 2008 03:27:36 +0100
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <48013BA0.9070608@gmx.de>
References: <47FC11CF.5000909@gmx.de>	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>	<002601c89b6d$698df270$0200a8c0@marion>
	<47FFD515.5040702@gmx.de> <002a01c89c44$b36f3ca0$0200a8c0@marion>
	<48013BA0.9070608@gmx.de>
Message-ID: <000f01c89d0d$f1dc9540$0200a8c0@marion>

Johannes,

> > The standard java runtime has no equivalent to the old 
> Token class in C#.
> > CommonToken and ClassicToken implement IToken but are otherwise 
> > unrelated (nor should they be). Token is useful for 
> injecting common 
> > behaviour when in custom variants of the runtime.
> 
> Firstly, people can create an own Token base class when truly 
> necessary. 
> Secondly, if we don't need it (which is because ClassicToken 
> implements ANTLR v2 behaviour and CommonToken implements 
> ANTLR v3 behaviour) then it doesn't make sense to include it.
> 
> I really can't see why anyone would try to combine both 
> classes or to create another variant, which doesn't follow 
> the behaviour of ClassicToken or CommonToken. For the latter, 
> I don't know if there is even a third possibility of 
> semantics. It must be truly an oddball which we as runtime 
> people for standard ANTLR shouldn't care about.

Not sure what to make of your opinions above.

I was just answering the question you asked about CommonToken (i.e. "does
CommonToken already fulfil the role of Token in the C# runtime?"). It
doesn't.

> > Might be worth checking if Prebuild be moulded to generate 
> Nant files 
> > that can build docs, the distro archives etc in addition to 
> building 
> > the assemblies...
> 
> The distro archives? You mean the daily builds? For that 
> using the ant-build is sufficient. One could add to the 
> ant-build the building of the runtime targets at least as an 
> option, as this would simplify things further.

No. Not the ANTLR tool builds. I was referring to the ANTLR C# runtime
distribution archives. For the downloads page.

I don't expect that C# devs would be happy to use Ant to build C# bits when
Nant exists. Conversely, I doubt that replacing the Ant build with a Nant
build would please Java devs wishing to build the java-based ANTLR tool
itself or indeed the java runtime. Same for C, Python....


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From antlr at mirality.co.nz  Sat Apr 12 20:09:54 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 13 Apr 2008 15:09:54 +1200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <000f01c89d0d$f1dc9540$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de> <008701c89aa5$b7a7adc0$0200a8c0@marion>
	<47FE984E.3020106@gmx.de> <002601c89b6d$698df270$0200a8c0@marion>
	<47FFD515.5040702@gmx.de> <002a01c89c44$b36f3ca0$0200a8c0@marion>
	<48013BA0.9070608@gmx.de> <000f01c89d0d$f1dc9540$0200a8c0@marion>
Message-ID: <20080413031003.4138D11EC48@www.antlr.org>

At 14:27 13/04/2008, Micheal J wrote:
 >I was just answering the question you asked about CommonToken
 >(i.e. "does CommonToken already fulfil the role of Token in
 >the C# runtime?"). It doesn't.

I think Johannes' point is that Token doesn't really have a role 
in the IToken hierarchy, since it doesn't actually implement 
anything, and the interface already specifies all the abstract 
methods.

What it does do is act as a container for handy constants related 
to tokens, but there's no particular benefit to having it be a 
base class as far as I can see.  (Probably it ought to be made a 
static class now, not just an abstract class.  Although that's a 
V2-only-ism.)

(Although on the subject of vestigial parts, what's with 
Lexer.TOKEN_dot_EOF?)


From open.zone at virgin.net  Sat Apr 12 20:52:42 2008
From: open.zone at virgin.net (Micheal J)
Date: Sun, 13 Apr 2008 04:52:42 +0100
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <476930C0002E3C6A@n001.sc1.he.tucows.com> (added by
	postmaster@bouncemessage.net)
References: <47FC11CF.5000909@gmx.de> <008701c89aa5$b7a7adc0$0200a8c0@marion>
	<47FE984E.3020106@gmx.de> <002601c89b6d$698df270$0200a8c0@marion>
	<47FFD515.5040702@gmx.de> <002a01c89c44$b36f3ca0$0200a8c0@marion>
	<48013BA0.9070608@gmx.de> <000f01c89d0d$f1dc9540$0200a8c0@marion>
	<476930C0002E3C6A@n001.sc1.he.tucows.com> (added by
	postmaster@bouncemessage.net)
Message-ID: <000001c89d19$d4f7c510$0200a8c0@marion>

Gavin,

>  >I was just answering the question you asked about 
> CommonToken  >(i.e. "does CommonToken already fulfil the role 
> of Token in  >the C# runtime?"). It doesn't.
> 
> I think Johannes' point is that Token doesn't really have a 
> role in the IToken hierarchy, since it doesn't actually 
> implement anything, and the interface already specifies all 
> the abstract methods.

Thanks, I understood his point - it's IToken-ness isn't used in the standard
library. It lives on in our libraries...

> (Although on the subject of vestigial parts, what's with
> Lexer.TOKEN_dot_EOF?)

A convenient alias for:

//case Token.EOF :

;-)

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From alexander at gaengel.de  Sun Apr 13 05:45:38 2008
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Sun, 13 Apr 2008 14:45:38 +0200
Subject: [antlr-interest] Visualisierung of the Parse Tree in Antlrworks
Message-ID: <48020072.5060508@gaengel.de>

Is it possible to include the Lexerrules in the Parse Tree?

Alexander

From jimi at temporal-wave.com  Sun Apr 13 08:44:16 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Apr 2008 08:44:16 -0700
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
	after matching rule
In-Reply-To: <6442c4ae0804121825q2e63559am80efc74142102f69@mail.gmail.com>
Message-ID: <59f0e782f3d14d44ac2a33844496ae14@temporal-wave.com>

You will need the output=AST option if you are wanting to use the += operator on something like NUMBER. This is why you are being told that vectors does not exist as it is created by code generation for AST creating parsers.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christian Schladetsch
Sent: Saturday, April 12, 2008 6:25 PM
To: Gavin Lambert
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action after matching rule

 

I tried the more likely (num += NUMBER)+ syntax the first time. Then I got:

error C2039: 'vectors' : is not a member of 'FailParser_Ctx_struct'


When trying to compile the parser. I guess I'll just do something else.... like revert to my hand-written C++ parser :P



On Sun, Apr 13, 2008 at 1:17 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

At 22:23 12/04/2008, Christian Schladetsch wrote:

The assertion fires on input "42" using antlr-2008-04-09.10:

grammar Fail;
options { language=C; }
@preincludes { #include <assert.h> }
sequence  : num += (NUMBER+) { assert($num != 0); } ;
NUMBER  :  ('0'..'9')+ ;

Is this correct behavior?

 

"Correct" is a little debatable, but you've used a syntax that's known to be invalid in the current version.  Try this instead:

sequence : (num += NUMBER)+ ...

(Basically, you can't assign a label to a block, only to a single token.)

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080413/9a8a85e0/attachment.html 

From jimi at temporal-wave.com  Sun Apr 13 08:45:18 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Apr 2008 08:45:18 -0700
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
	after matching rule
In-Reply-To: <20080413021841.7816011EC2D@www.antlr.org>
Message-ID: <5ecbebe7ec4083479a22e9b27a811ce3@temporal-wave.com>

No - it is just the lack of output=AST;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Saturday, April 12, 2008 7:19 PM
> To: Christian and Natalie Schladetsch
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in
> action after matching rule
> 
> At 13:48 13/04/2008, Christian and Natalie Schladetsch wrote:
> >grammar Fail;
> >options { language=C; }
> >@preincludes { #include <assert.h> }
> >sequence  : num += (NUMBER+) { assert($num != 0); } ;
> >NUMBER  :  ('0'..'9')+ ;
> 
> That other problem (with parentheses) has crept back in :)
> 
> >error C2039: 'vectors' : is not a member of 'PiParser_Ctx_struct'
> >
> >That is the complete parser. The line in question is
> >'list_num=ctx->vectors->newVector(ctx->vectors);'
> >
> >With regards of mismatched templates to runtime: I fear that the
> >work-around I used to get antlr built (by deleting files) results
> >in this. So my bad. I guess I need to go back to the drawing
> >board and make a new build of antlr 3.1 somehow.
> 
> Are you building your grammar with ANTLRworks or via the command
> line?  ANTLRworks contains embedded copies of all the ANTLR
> classes and templates, which you'll need to replace with the 3.1
> versions if you want to use the 3.1 runtime.
> 
> (I usually don't bother; if I need to use an intermediate build
> for some reason [and I've always used the prebuilt ones] then I'll
> just stop using ANTLRworks until it catches up.  Since I'm not
> targeting Java and it doesn't properly support Unicode input
> anyway, I've only found it of limited usefulness.)
> 
> Another thing to check is your include path; maybe it's finding
> one of the other versions of the C runtime before the one you
> actually want to use.





From th30dan at gmail.com  Sun Apr 13 09:41:55 2008
From: th30dan at gmail.com (Dan)
Date: Sun, 13 Apr 2008 11:41:55 -0500
Subject: [antlr-interest] The NOT (~) Operator
Message-ID: <398064110804130941i2fddc7aby6494f79230ad61b4@mail.gmail.com>

Sven,

I'm still fairly new to ANTLR but, based on what I've learned, lexer rules
are meant to be pretty dumb, and are not meant to handle alternatives based
on other lexer rules.  For that, it seems to be recommended to use parser
rules.

See pages 289-290 of "The Definitive ANTLR Reference" book, if you have
access to it.

Although I haven't yet seen a clear explanation of why this is.

Why is making "INDENTATION" a parser rule not an option for you?

-Dan



On Sat, Apr 12, 2008 at 1:10 AM, Sven Busse <mail at ghost23.de> wrote:

> Hi,
>
> i have a problem with a grammar error message, i don't understand.
> I have this grammar (reduced to the relevant bit):
>
> grammar simpletest;
>
> INDENTATION
> : TAB* ~NEWLINE;
>
> NEWLINE
> : '\r'? '\n';
>
> fragment
> TAB : '\t';
>
> Checking the grammar with ANTLRWorks gives me this error:
>
> simpletest.g:0:0: syntax error: buildnfa: <AST>:6:11: unexpected AST node:
> ?
>
> The problem seems to relate to the "~NEWLINE", because if i delete it, i
> get no error. Also, if i change the "INDENTATION" to a parser rule
> "indentation", i get no error, but that is not an option for me.
>
> Can someone explain to me, what the reason behind this error is?
>
> Thank you
> Sven
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080413/1a2034df/attachment.html 

From vonolsson at gmail.com  Sun Apr 13 12:29:09 2008
From: vonolsson at gmail.com (David Olsson)
Date: Sun, 13 Apr 2008 21:29:09 +0200
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47fe897e.120b420a.22ae.ffff8c16SMTPIN_ADDED@mx.google.com>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com> <47FCE60E.5030204@infobal.com>
	<47FE10F0.1000008@gmail.com>
	<47fe897e.120b420a.22ae.ffff8c16SMTPIN_ADDED@mx.google.com>
Message-ID: <48025F05.9010908@gmail.com>

Gavin Lambert wrote:
> I don't know offhand, but I think C# gets around the problem by 
> declaring that expressions cannot be statements in their own right; 
> combining this with the fixed signatures for operator overloading 
> means that a * on the left of an assignment or on its own can only 
> possibly be a pointer declaration, not a multiplication, since a 
> multiplication cannot produce an lvalue.  (Unlike in C++, where you 
> can overload it to return whatever you want.)
>
Thanks a lot! C# solves(?) the problem very nicely indeed. This is 
definitely the way to go for me (since I won't have operator 
overloading, at least not overloading as liberal as C++'s).

/David Olsson

From jaluber at gmx.de  Sun Apr 13 12:54:52 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 13 Apr 2008 21:54:52 +0200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <000f01c89d0d$f1dc9540$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de>	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>	<002601c89b6d$698df270$0200a8c0@marion>	<47FFD515.5040702@gmx.de>
	<002a01c89c44$b36f3ca0$0200a8c0@marion>	<48013BA0.9070608@gmx.de>
	<000f01c89d0d$f1dc9540$0200a8c0@marion>
Message-ID: <4802650C.2030004@gmx.de>

Micheal J schrieb:
>>> Might be worth checking if Prebuild be moulded to generate 
>> Nant files 
>>> that can build docs, the distro archives etc in addition to 
>> building 
>>> the assemblies...
>> The distro archives? You mean the daily builds? For that 
>> using the ant-build is sufficient. One could add to the 
>> ant-build the building of the runtime targets at least as an 
>> option, as this would simplify things further.
> 
> No. Not the ANTLR tool builds. I was referring to the ANTLR C# runtime
> distribution archives. For the downloads page.

You mean the runtime separately from the build?
> 
> I don't expect that C# devs would be happy to use Ant to build C# bits when
> Nant exists. Conversely, I doubt that replacing the Ant build with a Nant
> build would please Java devs wishing to build the java-based ANTLR tool
> itself or indeed the java runtime. Same for C, Python....

Actually I meant that one could add to the Ant-build an <exec>-task 
which executes the appropriate build for a runtime. Those could be linked.

Johannes

From antlr at mirality.co.nz  Sun Apr 13 14:24:13 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 14 Apr 2008 09:24:13 +1200
Subject: [antlr-interest] [3.1 C] Mulivalue Attribute is NULL in action
 after matching rule
In-Reply-To: <5ecbebe7ec4083479a22e9b27a811ce3@temporal-wave.com>
References: <20080413021841.7816011EC2D@www.antlr.org>
	<5ecbebe7ec4083479a22e9b27a811ce3@temporal-wave.com>
Message-ID: <20080413212424.9547511ECBC@www.antlr.org>

At 03:45 14/04/2008, Jim Idle wrote:
 >No - it is just the lack of output=AST;

M'kay.  We really really need better error messages then.  (I 
know, I know, it's waiting on ANTLR being self-hosted.  Can't come 
quickly enough.)


From jimi at temporal-wave.com  Sun Apr 13 16:03:24 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Apr 2008 16:03:24 -0700
Subject: [antlr-interest] The NOT (~) Operator
In-Reply-To: <398064110804130941i2fddc7aby6494f79230ad61b4@mail.gmail.com>
Message-ID: <0611ac0356b2a047b99c6d03a60987e0@temporal-wave.com>

There are a few things going on here:

 

1) You have TAB*, which means that the lexer rule could be empty and therefore match infinitely anything;

2) You can only use ~ on character sets, not rules that have sequences with optional elements;

3) You should be able to do this in the parser, but I don't think you have to;

4) Your INDENTATION rule will match a sequence of tabs then one character other than a newline - I can't think that this is what you want?

 

Try:

 

INDENTATION : '\t'+ ;

 

Or, I think that you are trying to say 'only match the tabs if they are not on a blank line' so'

 

fragment

WS : ' ' | '\t';

 

INDENTATION   

                : '\t'+ (

                                   ('\n'|'\r') { $type = WS; $channel = HIDDEN; }

                                |

                            )

                ;

 

Without knowing exactly what you are trying to do, it is difficult to advise exactly, but that should get you on the right path.

 

You can do this:

 

.... ~NLCHARS ;

 

fragment

NLCHARS : '\n' | '\r' ;

 

 

Jim 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dan
Sent: Sunday, April 13, 2008 9:42 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] The NOT (~) Operator

 

Sven,

 

I'm still fairly new to ANTLR but, based on what I've learned, lexer rules are meant to be pretty dumb, and are not meant to handle alternatives based on other lexer rules.  For that, it seems to be recommended to use parser rules.

 

See pages 289-290 of "The Definitive ANTLR Reference" book, if you have access to it.

 

Although I haven't yet seen a clear explanation of why this is.

 

Why is making "INDENTATION" a parser rule not an option for you?

 

-Dan



 

On Sat, Apr 12, 2008 at 1:10 AM, Sven Busse <mail at ghost23.de> wrote:

Hi,

i have a problem with a grammar error message, i don't understand.
I have this grammar (reduced to the relevant bit):

grammar simpletest;

INDENTATION
: TAB* ~NEWLINE;

NEWLINE
: '\r'? '\n';

fragment
TAB : '\t';

Checking the grammar with ANTLRWorks gives me this error:

simpletest.g:0:0: syntax error: buildnfa: <AST>:6:11: unexpected AST node: ?

The problem seems to relate to the "~NEWLINE", because if i delete it, i
get no error. Also, if i change the "INDENTATION" to a parser rule
"indentation", i get no error, but that is not an option for me.

Can someone explain to me, what the reason behind this error is?

Thank you
Sven



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080413/babdbae9/attachment.html 

From ame01 at gmx.net  Sun Apr 13 16:31:15 2008
From: ame01 at gmx.net (Aurelian Melinte)
Date: Mon, 14 Apr 2008 01:31:15 +0200
Subject: [antlr-interest] Different k for lexer and parser
Message-ID: <20080413233115.324610@gmx.net>

Hello,

I am trying to adapt the CPP grammar for version 3 of ANTLR. The grammar has a k=2 for the parser and k=3 for the lexer.  

Other than splitting the grammar in two files, is there any other way to have a different k for parser and lexer? 

Thanks,
a.


-- 
GMX startet ShortView.de. Hier findest Du Leute mit Deinen Interessen!
Jetzt dabei sein: http://www.shortview.de/?mc=sv_ext_mf at gmx

From sproctor at gmail.com  Sun Apr 13 19:49:50 2008
From: sproctor at gmail.com (Sean Proctor)
Date: Sun, 13 Apr 2008 22:49:50 -0400
Subject: [antlr-interest] string template bug?
Message-ID: <ca2a7adf0804131949x1803f209ge986d15f3b21f10b@mail.gmail.com>

This is the line in my lexer: | ('%%')=> '%%' { setText("%"); }

I get this message: WSL.g3:371:19: invalid StringTemplate % shorthand
syntax: '%")'

I'm not really sure what to do here. This is with 3.1b1 from 4/9.

Thanks,
Sean
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080413/b621d10a/attachment.html 

From open.zone at virgin.net  Sun Apr 13 21:08:31 2008
From: open.zone at virgin.net (Micheal J)
Date: Mon, 14 Apr 2008 05:08:31 +0100
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <4802650C.2030004@gmx.de>
References: <47FC11CF.5000909@gmx.de>	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>	<002601c89b6d$698df270$0200a8c0@marion>	<47FFD515.5040702@gmx.de>
	<002a01c89c44$b36f3ca0$0200a8c0@marion>	<48013BA0.9070608@gmx.de>
	<000f01c89d0d$f1dc9540$0200a8c0@marion> <4802650C.2030004@gmx.de>
Message-ID: <002401c89de5$34c49830$0200a8c0@marion>

Johannes,

> > No. Not the ANTLR tool builds. I was referring to the ANTLR 
> C# runtime 
> > distribution archives. For the downloads page.
> 
> You mean the runtime separately from the build?

If you meant to ask "Did you mean the C# runtime distribution as distinct
from the ANTLR tool or java runtime distribution?" then, yes.

> > I don't expect that C# devs would be happy to use Ant to 
> build C# bits 
> > when Nant exists. Conversely, I doubt that replacing the Ant build 
> > with a Nant build would please Java devs wishing to build the 
> > java-based ANTLR tool itself or indeed the java runtime. 
> Same for C, Python....
> 
> Actually I meant that one could add to the Ant-build an 
> <exec>-task which executes the appropriate build for a 
> runtime. Those could be linked.

*shrugs*  --  If you insist on a unified build, why use Ant?. NAnt is just
as capable.

Don't see the value personally. I expect that ANTLR users who wish to build
from source are able to build the java bits (i.e. ANTLR tool + java runtime)
using Ant - the java build tool and, the C# bits using the equivalent tool
Nant.


Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From alexander at gaengel.de  Mon Apr 14 00:23:27 2008
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Mon, 14 Apr 2008 09:23:27 +0200
Subject: [antlr-interest] Check the next token in Hidden Channel
Message-ID: <4803066F.5040703@gaengel.de>

I hace to check in my Parser once if the next Token is a Whitspace.

I tried the code from:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063

So is copied it to my Grammar:
@members{
    protected int skipOffTokenChannels(int i) {
        int n = tokens.size();
        while ( i<n && ((Token)tokens.get(i)).getChannel()!=channel ) {
            i++;
        }
        return i;
}
}

But the Code compains that tokens cannot be resolved?

I use 3.1 so I think there is something changed sice 3.0.

Can anybody give me an hint how to do this ?

Alexander


From jaluber at gmx.de  Mon Apr 14 04:11:22 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 14 Apr 2008 13:11:22 +0200
Subject: [antlr-interest] C# TARGET ANNOUNCEMENTS
In-Reply-To: <002401c89de5$34c49830$0200a8c0@marion>
References: <47FC11CF.5000909@gmx.de>	<008701c89aa5$b7a7adc0$0200a8c0@marion>	<47FE984E.3020106@gmx.de>	<002601c89b6d$698df270$0200a8c0@marion>	<47FFD515.5040702@gmx.de>	<002a01c89c44$b36f3ca0$0200a8c0@marion>	<48013BA0.9070608@gmx.de>	<000f01c89d0d$f1dc9540$0200a8c0@marion>
	<4802650C.2030004@gmx.de> <002401c89de5$34c49830$0200a8c0@marion>
Message-ID: <48033BDA.3060804@gmx.de>

Micheal J schrieb:
>>
>> Actually I meant that one could add to the Ant-build an 
>> <exec>-task which executes the appropriate build for a 
>> runtime. Those could be linked.
> 
> *shrugs*  --  If you insist on a unified build, why use Ant?. NAnt is just
> as capable.
> 
> Don't see the value personally. I expect that ANTLR users who wish to build
> from source are able to build the java bits (i.e. ANTLR tool + java runtime)
> using Ant - the java build tool and, the C# bits using the equivalent tool
> Nant.

The simple reason is that there is one ant build already, which can be 
simply modified. If I want to create a new private build, I have only to 
call one command and not two. Furthermore, one doesn't have to keep up 
with changes in the original ant build, too. It is also less work overall.

Johannes


From antlr at mirality.co.nz  Mon Apr 14 05:16:39 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 15 Apr 2008 00:16:39 +1200
Subject: [antlr-interest] string template bug?
In-Reply-To: <ca2a7adf0804131949x1803f209ge986d15f3b21f10b@mail.gmail.co
 m>
References: <ca2a7adf0804131949x1803f209ge986d15f3b21f10b@mail.gmail.com>
Message-ID: <20080414121655.C2BED11E9EE@www.antlr.org>

At 14:49 14/04/2008, Sean Proctor wrote:
>This is the line in my lexer: | ('%%')=> '%%' { setText("%"); }
>
>I get this message: WSL.g3:371:19: invalid StringTemplate % 
>shorthand syntax: '%")'
>
>I'm not really sure what to do here. This is with 3.1b1 from 4/9.

Try $setText("\%").

If that doesn't work, try two or three backslashes (sometimes 
things need to be double-escaped because they're being converted 
twice).

You shouldn't need to change the other references, it's only in 
code where the % is treated as significant.


From jaluber at gmx.de  Mon Apr 14 05:55:21 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 14 Apr 2008 14:55:21 +0200
Subject: [antlr-interest] Check the next token in Hidden Channel
In-Reply-To: <4803066F.5040703@gaengel.de>
References: <4803066F.5040703@gaengel.de>
Message-ID: <48035439.6090406@gmx.de>

Alexander G?ngel schrieb:
> I hace to check in my Parser once if the next Token is a Whitspace.
> 
> I tried the code from:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063
> 
> So is copied it to my Grammar:
> @members{
>    protected int skipOffTokenChannels(int i) {
>        int n = tokens.size();
>        while ( i<n && ((Token)tokens.get(i)).getChannel()!=channel ) {
>            i++;
>        }
>        return i;
> }
> }
> 
> But the Code compains that tokens cannot be resolved?
> 
> I use 3.1 so I think there is something changed sice 3.0.
> 
> Can anybody give me an hint how to do this ?

Looking at the wiki text, I believe you have to modify 
CommonTokenStream.java, not your grammar. Alternatively you could derive 
a class from CommonTokenStream which is the cleaner solution.

Johannes

From cieslewski at hcs.ufl.edu  Mon Apr 14 06:08:13 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Mon, 14 Apr 2008 09:08:13 -0400
Subject: [antlr-interest] Elusive rewrite rule
In-Reply-To: <398064110804121300k491dffe5k795ead9e9d0af67c@mail.gmail.com>
References: <398064110804121300k491dffe5k795ead9e9d0af67c@mail.gmail.com>
Message-ID: <7aa837f80804140608g6841443fw3d0c455e5a1ba0d3@mail.gmail.com>

Dan,

One way to achieve such effect is to pass the name of the function
token down to the pathExpr function as an input and move the
construction of the FUNCTION subtree into a pathExpr rule.  I
rewritten your grammar a little to yield the AST that you want.

grammar a;

options {
   backtrack=true;
   output=AST;
}

tokens {
 FUNCTION;
 TAG;
}

functionExpr
scope{
	CommonTree path;	
}
 : NAME '(' pathExpr[$NAME] ')' -> pathExpr
 ;

pathExpr[Token fname]
	:NAME ('/' pathExpr[fname]) -> ^(TAG NAME pathExpr?)
  	|NAME (',' args+=ARG)* -> ^(TAG NAME ^(FUNCTION NAME[fname] $args*))
 ;

NAME : ('a'..'z')+ ;

ARG : '\'' (~'\'')* '\'';
WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;};

There might be a cleaner way of rewriting the pathExpr rule but this
should get you started.

Greg


On Sat, Apr 12, 2008 at 4:00 PM, Dan <th30dan at gmail.com> wrote:
>
>
> Hello everyone.
>
> I'm trying to figure out how to write the rewrite rule for a parser rule
> named "functionExpr".  I already have rewrite rules for my other parser
> rules.  Here's a simplified version of my grammar:
>
> =======================================================
> tokens {
>  FUNCTION;
>  TAG;
> }
>
> functionExpr
>  : NAME '(' pathExpr (',' ARG)* ')' -> ??????????
>  ;
>
> pathExpr
>  : NAME ('/' pathExpr)? -> ^(TAG NAME pathExpr?)
>  ;
>
> NAME : (a-z)+ ;
> ARG : '\'' (~'\'')* '\'' ;
> =======================================================
>
> My requirements dictate that for this input:
>  foo(a/b/c, '1', '2')
>
> I need to generate this AST:
>  (TAG a (TAG b (TAG c (FUNCTION foo '1' '2'))))
>
> Any ideas what should be the rewrite rule for "functionExpr" to satisfy this
> requirement?
>
>
>
> The basic problem I see is that I need to attach the FUNCTION subtree to the
> 'c' TAG subtree, but I haven't finished processing the entire functionExpr
> input (i.e. the ARGs) at the time I parse the 'c' TAG subtree.
>
> So is there some way to save a "reference" to the 'c' TAG subtree, so that
> when I finish processing the functionExpr ARGs, I can create the FUNCTION
> subtree and attach it to the 'c' TAG subtree via the reference, and have the
> entire structure (starting with the 'a' TAG subtree at the top) become the
> returned subtree of the entire functionExpr rule?
>
> Many thanks,
> -Dan



-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From timo.dufour at thomson.com  Mon Apr 14 06:34:59 2008
From: timo.dufour at thomson.com (timo.dufour at thomson.com)
Date: Mon, 14 Apr 2008 15:34:59 +0200
Subject: [antlr-interest] gunit FAIL
Message-ID: <3D28EBDA36A6E6469582A86D3B5B639C01F524E7@tlrbeantmbx02.ERF.THOMSON.COM>

I encountered a problem using gUnit. When more then one of my tests is
expected to FAIL, only the first one will return FAIL, the others return
OK. Even if I just repeat the testcase twice. E.g.:

Treatment:

            "(TREATMENT NORMA)" FAIL

"(TREATMENT NORMA)" FAIL

 

first test:           passes

second test:      junit.framework.AssertionFailedError: testing rule
treatmentrule expected:<FAIL> but was:<OK>

 

I use gunit-1.0.1.jar with antlr-3.0.1.jar, so maybe this is already
fixed in gunit-1.0.2

 

Timo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080414/655728be/attachment.html 

From alexander at gaengel.de  Mon Apr 14 07:49:43 2008
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Mon, 14 Apr 2008 16:49:43 +0200
Subject: [antlr-interest] Check the next token in Hidden Channel
In-Reply-To: <48035439.6090406@gmx.de>
References: <4803066F.5040703@gaengel.de> <48035439.6090406@gmx.de>
Message-ID: <48036F07.7010604@gaengel.de>

OK I think you are right, maybe I was still asleep when I tried it this 
morning.

Alexander

Johannes Luber schrieb:
> Alexander G?ngel schrieb:
>> I hace to check in my Parser once if the next Token is a Whitspace.
>>
>> I tried the code from:
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063
>>
>> So is copied it to my Grammar:
>> @members{
>>    protected int skipOffTokenChannels(int i) {
>>        int n = tokens.size();
>>        while ( i<n && ((Token)tokens.get(i)).getChannel()!=channel ) {
>>            i++;
>>        }
>>        return i;
>> }
>> }
>>
>> But the Code compains that tokens cannot be resolved?
>>
>> I use 3.1 so I think there is something changed sice 3.0.
>>
>> Can anybody give me an hint how to do this ?
>
> Looking at the wiki text, I believe you have to modify 
> CommonTokenStream.java, not your grammar. Alternatively you could 
> derive a class from CommonTokenStream which is the cleaner solution.
>
> Johannes
>

From leon.antlr at mac.com  Mon Apr 14 10:36:05 2008
From: leon.antlr at mac.com (Leon Su)
Date: Mon, 14 Apr 2008 10:36:05 -0700
Subject: [antlr-interest] gunit FAIL
In-Reply-To: <3D28EBDA36A6E6469582A86D3B5B639C01F524E7@tlrbeantmbx02.ERF.THOMSON.COM>
References: <3D28EBDA36A6E6469582A86D3B5B639C01F524E7@tlrbeantmbx02.ERF.THOMSON.COM>
Message-ID: <85593599-435C-4E2C-9299-700EF02D481A@mac.com>

Hi Timo,

Thanks for the report. The bug should already be fixed in  
gunit-1.0.2, please let me know if you still have the same issue with  
it.

Leon

On Apr 14, 2008, at 6:34 AM, timo.dufour at thomson.com wrote:

> I encountered a problem using gUnit. When more then one of my tests  
> is expected to FAIL, only the first one will return FAIL, the  
> others return OK. Even if I just repeat the testcase twice. E.g.:
> Treatment:
>             "(TREATMENT NORMA)" FAIL
> "(TREATMENT NORMA)" FAIL
>
> first test:           passes
> second test:      junit.framework.AssertionFailedError: testing  
> rule treatmentrule expected:<FAIL> but was:<OK>
>
> I use gunit-1.0.1.jar with antlr-3.0.1.jar, so maybe this is  
> already fixed in gunit-1.0.2
>
> Timo

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080414/11535717/attachment-0001.html 

From enjoywm at cs.wm.edu  Mon Apr 14 11:39:31 2008
From: enjoywm at cs.wm.edu (Yixun Liu)
Date: Mon, 14 Apr 2008 14:39:31 -0400
Subject: [antlr-interest] How to support a new type
Message-ID: <4803A4E3.8030302@cs.wm.edu>

Hi,
I want to write a parser.g to support a new type, e.g, dim3. How to do it?

Best,
Yixun

From markobarko at gmail.com  Mon Apr 14 12:08:29 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Mon, 14 Apr 2008 15:08:29 -0400
Subject: [antlr-interest] Operator tree construction in rewrite syntax
Message-ID: <1208200109.6420.72.camel@main>

Hi all,

Quick question (i hope). What is the equivalent to the following using
the rewrite (->) syntax:

sum: something (Plus^ something);

Thanks,
Marko


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080414/3740ffb7/attachment.html 

From jaluber at gmx.de  Mon Apr 14 12:18:05 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 14 Apr 2008 21:18:05 +0200
Subject: [antlr-interest] How to support a new type
In-Reply-To: <4803A4E3.8030302@cs.wm.edu>
References: <4803A4E3.8030302@cs.wm.edu>
Message-ID: <4803ADED.8030601@gmx.de>

Yixun Liu schrieb:
> Hi,
> I want to write a parser.g to support a new type, e.g, dim3. How to do it?

What so you mean with a new type? Do you want to parse a new type in 
some sourcecode, or do you want to use dim3 as return type for some 
rule, or is it something else?

Johannes

From guntiso at latnet.lv  Mon Apr 14 13:00:45 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Mon, 14 Apr 2008 23:00:45 +0300
Subject: [antlr-interest] Operator tree construction in rewrite syntax
In-Reply-To: <1208200109.6420.72.camel@main>
References: <1208200109.6420.72.camel@main>
Message-ID: <1208203245.4803b7eddb312@clients.latnet.lv>

> Quick question (i hope). What is the equivalent to the following using
> the rewrite (->) syntax:
>
> sum: something (Plus^ something);
>
> Thanks,
> Marko

1. try: something (Plus something) -> ^(Plus something+);

2. how about '*', did you mean: something (Plus^ something)*; ?

3. do not use ^ on both sides

Guntis


From markobarko at gmail.com  Mon Apr 14 13:07:07 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Mon, 14 Apr 2008 16:07:07 -0400
Subject: [antlr-interest] Operator tree construction in rewrite syntax
In-Reply-To: <1208203245.4803b7eddb312@clients.latnet.lv>
References: <1208200109.6420.72.camel@main>
	<1208203245.4803b7eddb312@clients.latnet.lv>
Message-ID: <1208203627.6420.77.camel@main>

i apologize...i meant there to be a zero-or-more:

sum: something (Plus^ something)*;

Thanks

-----Original Message-----
From: Guntis Ozols <guntiso at latnet.lv>
To: Marko Simovic <markobarko at gmail.com>
Cc: antlr-interest <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Operator tree construction in rewrite
syntax
Date: Mon, 14 Apr 2008 23:00:45 +0300


> Quick question (i hope). What is the equivalent to the following using
> the rewrite (->) syntax:
>
> sum: something (Plus^ something);
>
> Thanks,
> Marko

1. try: something (Plus something) -> ^(Plus something+);

2. how about '*', did you mean: something (Plus^ something)*; ?

3. do not use ^ on both sides

Guntis

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080414/dea2be6c/attachment.html 

From guntiso at latnet.lv  Mon Apr 14 13:15:13 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Mon, 14 Apr 2008 23:15:13 +0300
Subject: [antlr-interest] Operator tree construction in rewrite syntax
In-Reply-To: <1208203627.6420.77.camel@main>
References: <1208200109.6420.72.camel@main>
	<1208203245.4803b7eddb312@clients.latnet.lv>
	<1208203627.6420.77.camel@main>
Message-ID: <1208204113.4803bb5196d24@clients.latnet.lv>

> i apologize...i meant there to be a zero-or-more:
>
> sum: something (Plus^ something)*;

Right side stays the same, i.e. with '+',
because smth smth* is the same as smth+.

>
> Thanks
>
> -----Original Message-----
> From: Guntis Ozols <guntiso at latnet.lv>
> To: Marko Simovic <markobarko at gmail.com>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Subject: Re: [antlr-interest] Operator tree construction in rewrite
> syntax
> Date: Mon, 14 Apr 2008 23:00:45 +0300
>
>
> > Quick question (i hope). What is the equivalent to the following using
> > the rewrite (->) syntax:
> >
> > sum: something (Plus^ something);
> >
> > Thanks,
> > Marko
>
> 1. try: something (Plus something) -> ^(Plus something+);
>
> 2. how about '*', did you mean: something (Plus^ something)*; ?
>
> 3. do not use ^ on both sides
>
> Guntis



From guntiso at latnet.lv  Mon Apr 14 13:33:51 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Mon, 14 Apr 2008 23:33:51 +0300
Subject: [antlr-interest] Operator tree construction in rewrite syntax
In-Reply-To: <1208204113.4803bb5196d24@clients.latnet.lv>
References: <1208200109.6420.72.camel@main>
	<1208203245.4803b7eddb312@clients.latnet.lv>
	<1208203627.6420.77.camel@main>
	<1208204113.4803bb5196d24@clients.latnet.lv>
Message-ID: <1208205231.4803bfafbd7fb@clients.latnet.lv>

Cit?ju Guntis Ozols <guntiso at latnet.lv>:

> > i apologize...i meant there to be a zero-or-more:
> >
> > sum: something (Plus^ something)*;
>
> Right side stays the same, i.e. with '+',
> because smth smth* is the same as smth+.

I apologize... :)
I just checked out with ANTLRWorks debugger,
and ASTs are not equivalent with more than two somethings.
Which means that I do not know the answer to your question,
maybe somebody else does. That said, both ASTs are quite usable anyway
(unless there is some backwards compatibility issue).

> > > Quick question (i hope). What is the equivalent to the following using
> > > the rewrite (->) syntax:
> > >
> > > sum: something (Plus^ something);
> > >
> > > Thanks,
> > > Marko
> >
> > 1. try: something (Plus something) -> ^(Plus something+);
> >
> > 2. how about '*', did you mean: something (Plus^ something)*; ?
> >
> > 3. do not use ^ on both sides
> >
> > Guntis



From enjoywm at cs.wm.edu  Mon Apr 14 13:45:34 2008
From: enjoywm at cs.wm.edu (Yixun Liu)
Date: Mon, 14 Apr 2008 16:45:34 -0400
Subject: [antlr-interest] How to make the rule return two or more values?
Message-ID: <4803C26E.6080609@cs.wm.edu>

Hi,
How to make the rule return two or more values? 
For example, the rule: atom returns [float weight] only return one value. How to return two variables and how to get them?


Best,
Yixun


From tbrandonau at gmail.com  Mon Apr 14 13:46:13 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 15 Apr 2008 06:46:13 +1000
Subject: [antlr-interest] Operator tree construction in rewrite syntax
In-Reply-To: <1208200109.6420.72.camel@main>
References: <1208200109.6420.72.camel@main>
Message-ID: <ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.com>

I think you can do something like (syntax not checked):
sum: s1=something -> $s1 (Plus s2=something -> ^(Plus $sum $s2) )*;
I'm not sure if you need the first rewrite or whether it will already
have it when you use $sum (the previously constructed tree for the
rule).

Tom.
On Tue, Apr 15, 2008 at 5:08 AM, Marko Simovic <markobarko at gmail.com> wrote:
>
> Hi all,
>
> Quick question (i hope). What is the equivalent to the following using the rewrite (->) syntax:
>
> sum: something (Plus^ something);
>
> Thanks,
> Marko
>
>
>

From nopik at data.pl  Mon Apr 14 13:49:23 2008
From: nopik at data.pl (Kamil Burzynski)
Date: Mon, 14 Apr 2008 22:49:23 +0200
Subject: [antlr-interest] How to make the rule return two or more values?
In-Reply-To: <4803C26E.6080609@cs.wm.edu>
References: <4803C26E.6080609@cs.wm.edu>
Message-ID: <4803C353.3090302@data.pl>

Yixun Liu wrote:
> Hi,
> How to make the rule return two or more values?
> For example, the rule: atom returns [float weight] only return one value. How to return two variables and how to get them?

Just [ int a, int b ]. Antlr will create structure containing them, so 
they will be accessible like $rule.a from calling rule.

-- 
Best regards from
Kamil Burzynski

From antlr at mirality.co.nz  Mon Apr 14 14:19:16 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 15 Apr 2008 09:19:16 +1200
Subject: [antlr-interest] Operator tree construction in rewrite  syntax
In-Reply-To: <ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.co
 m>
References: <1208200109.6420.72.camel@main>
	<ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.com>
Message-ID: <20080414212044.693EE11EAA6@www.antlr.org>

At 08:46 15/04/2008, Thomas Brandon wrote:
 >I think you can do something like (syntax not checked):
 >sum: s1=something -> $s1 (Plus s2=something -> ^(Plus $sum $s2)
 >)*;
 >I'm not sure if you need the first rewrite or whether it will
 >already have it when you use $sum (the previously constructed
 >tree for the rule).

You do need the first rewrite, and it needs to be in parentheses 
or ANTLR will complain.  So:

sum
   : (s1=something -> $s1)
     (Plus s2=something -> ^(Plus $sum $s2))*
   ;


From peter.nann at vecommerce.com.au  Mon Apr 14 15:52:17 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Tue, 15 Apr 2008 08:52:17 +1000
Subject: [antlr-interest] Want to write a fairly simple syntax
	converter...
References: <1080AEABD1979E42A15840F08084B67BFE3A92@vcmsydexh.vecommerce.com>
	<47FFABE8.4090806@gmx.de>
	<1080AEABD1979E42A15840F08084B67BFE3A96@vcmsydexh.vecommerce.com>
	<48033149.3060708@gmx.de>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AA2@vcmsydexh.vecommerce.com>

 
Thanks for the pointers. I think I have enough info to bury my head in
the manual for a while.

> > P.S. I am loving all the comments about "XML not being meant for
human 
> > consumption"...
> Not sure if all people here agree here, but at least Ter does.

I think I have come across at least 2 such comments.
Even that makes me feel better and more sane. ;-)
As sane as Ter maybe, anyway...  (Hello if you are reading Ter)
I very much like the cut of Ter's jib.
The single-mindedness behind ANTLR is impressive and inspiring.

ANTLRWorks is impressive too.

Cheers.


-----Original Message-----
From: Johannes Luber [mailto:jaluber at gmx.de] 
Sent: Monday, 14 April 2008 8:26 PM
To: Peter Nann
Subject: Re: [antlr-interest] Want to write a fairly simple syntax
converter...

Peter Nann schrieb:
> Thank Johannes:
>  You are right, my XML example was bad, sorry, I was working from 
> memory... (And I ain't no XML guru. Hate the stuff) The format that we

> are targetting (Which is already strictly defined by a third Party) 
> does use  <item>a</item>.
> 
> 
> I want to maintain output white-space as I still want the output to be

> human readable (as much as XML can be).
>  - At least so that I can detect bugs in my parsing/translation, but 
> also because the output XML will be used by another (proprietary) 
> compiler, and if I get error messages out of that I want to be able to

> identify the error location easily back in the original.
>  - Maintaining 1-to-1 line mappings between input and output will help

> a lot.

As the best bet is to correlate lines and not the characters in a
particular line, it seems to be easier to add the line information in an
extra XML element (even it is a comment <!-- -->). Thus you can simplify
the parser and are more flexible in the way, how you output the XML.

> P.S. I am loving all the comments about "XML not being meant for human

> consumption".
> I thought I must be crazy being the only person to think this amongst 
> my surrounding Java programmars... Hallelujah to have Found a group 
> that agrees...  ;-)

Not sure if all people here agree here, but at least Ter does.

Johannes

P.S.: Please make sure that your answer goes to the list via using the
"Reply to All" option.
> 
> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de]
> Sent: Saturday, 12 April 2008 4:20 AM
> To: Peter Nann
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Want to write a fairly simple syntax 
> converter...
> 
> Peter Nann schrieb:
>> I am new to all this language parsing, and I am struggling to 
>> understand 'how much I need to understand' (to use a Rumsfeld'ism)
>>
>> If I just want to write a fairly simple converter, and keep 
>> whitespace
> 
>> fairly intact, how 'dirty' do I have to get my hands, language 
>> parsing
> 
>> and code wise?
>>
>> To clarify, I want to convert a proprietary format into equivalent
> XML.
>> Something like "x [ a b c ]"   ->  "<rule name=x> <one-of> a b c 
>> </one-of> </rule>"
>> (But obviously, it gets a little more complicated than that)
> 
> Please don't use this kind of XML. It is possible to create a schema 
> which says that an element includes a whitespace separated list, but 
> everyone agrees that it is simpler to work with:
> 
> "<rule name=x> <one-of> <elem>a</elem> <elem>b</elem> <elem>c</elem> 
> </one-of> </rule>"
> 
> More verbose yes, but XML wasn't designed with terseness in mind.
> 
>> My 2 biggest questions:
>> 1) Do I need to worry about 'building trees', accessing the AST or 
>> anything like that? Or are the 'snippets' of code you can put in the 
>> grammar rules going to get me by?
> 
> If you want to put out the parse tree in the same shape as it is and 
> with no extra computation, then I doubt that a tree grammar is 
> necessary for you.
> 
>> 2) Is maintaining whitespace easily do-able? It seems to get gobbled 
>> up with little opportunity to keep it intact. It seems I could maybe 
>> tokenize it explicitly as meaningful input, and then be able to 
>> simply
> 
>> re-constitute it in the output, or is that just crazy talk and will 
>> complicate my grammars too much (with 'WS?' sprinkled everywhere...)
> 
> What do you need to retain th whitespace for? XML ignores big parts of

> it anyway and with a new file format you don't have to follow the 
> conventions laid down by your predecessors. Better to ignore the 
> original whitespace here.
> 
> Johannes
> 


From parrt at cs.usfca.edu  Mon Apr 14 15:55:09 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 14 Apr 2008 15:55:09 -0700
Subject: [antlr-interest] Want to write a fairly simple syntax
	converter...
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AA2@vcmsydexh.vecommerce.com>
References: <1080AEABD1979E42A15840F08084B67BFE3A92@vcmsydexh.vecommerce.com>
	<47FFABE8.4090806@gmx.de>
	<1080AEABD1979E42A15840F08084B67BFE3A96@vcmsydexh.vecommerce.com>
	<48033149.3060708@gmx.de>
	<1080AEABD1979E42A15840F08084B67BFE3AA2@vcmsydexh.vecommerce.com>
Message-ID: <C579D3EA-97AF-4036-8D03-E030358E5DE4@cs.usfca.edu>


On Apr 14, 2008, at 3:52 PM, Peter Nann wrote:

>
> Thanks for the pointers. I think I have enough info to bury my head in
> the manual for a while.
>
>>> P.S. I am loving all the comments about "XML not being meant for
> human
>>> consumption"...
>> Not sure if all people here agree here, but at least Ter does.
>
> I think I have come across at least 2 such comments.
> Even that makes me feel better and more sane. ;-)
> As sane as Ter maybe, anyway...  (Hello if you are reading Ter)
> I very much like the cut of Ter's jib.

Ha! I haven't heard that expression in a longtime...awesome. hah  
ahhahahaah

> The single-mindedness behind ANTLR is impressive and inspiring.

thanks... obsessive-compulsive disorder has its advantages ;)

> ANTLRWorks is impressive too.

Jean Bovet did an excellent job and continues to do a great job. He  
will be releasing a new version that works with the new grammar  
imports and so on.
Ter


From jaluber at gmx.de  Tue Apr 15 03:09:26 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 15 Apr 2008 12:09:26 +0200
Subject: [antlr-interest] How to support a new type
In-Reply-To: <4803AEF9.7020904@cs.wm.edu>
References: <4803A4E3.8030302@cs.wm.edu> <4803ADED.8030601@gmx.de>
	<4803AEF9.7020904@cs.wm.edu>
Message-ID: <48047ED6.6020200@gmx.de>

Yixun Liu schrieb:
> I have two compilers, let's say compiler1 and compiler2. The data type
> Dim is support by compiler2, but doesn't by compiler1. My source code
> should firstly be compiled by compiler1 and then compiled by compiler2.

Does compiler1 feed the its output to compiler2?

> However, the data type Dim cannot pass the compilation of compiler1.
> This is the reason I want to modify the grammar file to make compiler1
> support this kind of data type.
> In another word, I want the code "Dim d;" to pass the compilation of
> compiler1. The question is how to make Dim as a build-in type like int,
 > short etc.?

Somewhere in the grammar file there should be a rule, which defines the 
tokens 'int', 'short', etc. Add there the alternative 'Dim'. But that's 
only the easy part. You have to add code which handles the new type. As 
you didn't tell us, what Dim is supposed to be, I can't give you any 
further tips there. It would be also good to know what languages 
compiler1 and compiler2 understand.

Johannes

> Johannes Luber wrote:
>> Yixun Liu schrieb:
>>> Hi,
>>> I want to write a parser.g to support a new type, e.g, dim3. How to
>>> do it?
>> What so you mean with a new type? Do you want to parse a new type in
>> some sourcecode, or do you want to use dim3 as return type for some
>> rule, or is it something else?
>>
>> Johannes
> 


From phulsmeijer at xebic.com  Tue Apr 15 07:39:06 2008
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Tue, 15 Apr 2008 16:39:06 +0200
Subject: [antlr-interest] Updated ECMAScript 3 grammar
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC6211687DE@srvxdcex.xebic.com>

All,

 

I've updated the grammar uploaded under "A complete ECMAScript 3
grammar". The direct link is: http://research.xebic.com/es3.

A license statement was added and 2 reported bugs were fixed.

 

Still looking forward to reactions on this list.

 

Gr, patrick.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/a4f5a17f/attachment.html 

From dave at badgers-in-foil.co.uk  Tue Apr 15 07:51:24 2008
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 15 Apr 2008 14:51:24 +0000
Subject: [antlr-interest] Updated ECMAScript 3 grammar
In-Reply-To: <C3525AF49F7D374D8E4D3C46ED4BC6211687DE@srvxdcex.xebic.com>
References: <C3525AF49F7D374D8E4D3C46ED4BC6211687DE@srvxdcex.xebic.com>
Message-ID: <20080415145123.GA20908@badgers-in-foil.co.uk>

On Tue, Apr 15, 2008 at 04:39:06PM +0200, Patrick Hulsmeijer wrote:

> I've updated the grammar uploaded under "A complete ECMAScript 3
> grammar". The direct link is: http://research.xebic.com/es3.
> 
> A license statement was added and 2 reported bugs were fixed.
> 
>  
> 
> Still looking forward to reactions on this list.

For a similar grammar[1], I did the In/NoIn stuff using scopes rather
than duplicate rules.

I wonder if you found particular reasons not to do things that way?
Maybe the performance is better?  (Maybe I've actually implemented my
grammar incorrectly?)


ta,
dave


[1] http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/antlr/org/asdt/core/internal/antlr/AS3.g3

-- 
http://david.holroyd.me.uk/

From Ramon.Verbruggen at quintiq.com  Tue Apr 15 07:57:57 2008
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Tue, 15 Apr 2008 16:57:57 +0200
Subject: [antlr-interest] Optional keyword causes (correct) warnings in ANTLR
Message-ID: <4804DE94.BB97.0087.0@quintiq.com>

I am working on a grammar for a Delphi/Java like programming language.
In a statementbody the return statement can only be the last statement,
if it is present at all.

I have made a small grammar to illustrate the problem:

grammar ANTLRQuill;

statementBody:		statementList returnStatement? EOF;
	
returnStatement:		'return' expression ';'*; // <== return
keyword should be optional
	
statementList:		(statement ';'*)*;
	
statement:			addressableElement;

expression:			addressableElement ( '*'
addressableElement )*;

addressableElement:	Identifier ( '.' Identifier '()' )*;
	
Identifier:			('a'..'z')+;


Now, I would like to make the 'return' keyword optional, but when I
just insert the question mark after the return keyword, ANTLR rightfully
complains that it has several ways of matching Identifier, and that it
will always choose alternative one. I understand the warning, and I see
that ANTLR's right, but I don't see how else to solve this problem.

I've tried a lot of different possibilities already, and searched the
archives and the ANTLR book, but haven't been able to find a way to make
the return keyword optional. Obviously, the actual grammar is much
bigger and a bit more complex than the example above, so especially
rules statement, expression and addressableElement have more
alternatives, and the expression hierarchy has the usual 'ladder' of
expression types to obtain the correct levels of precedence.

Any help is appreciated.

Best regards,


Ramon Verbruggen


This message contains information that may be privileged or confidential
and is the property of Quintiq. It is only intended for the person to
whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute or use
this message or any part thereof. If you have received this message in
error, please notify the sender immediately and delete all copies of
this message. Please note that e-mails are susceptible to change,
therefore they are not binding.

From markobarko at gmail.com  Tue Apr 15 09:20:03 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Tue, 15 Apr 2008 12:20:03 -0400
Subject: [antlr-interest] Operator tree construction in rewrite syntax
In-Reply-To: <4803caad.01ac420a.7d0e.ffff9db9SMTPIN_ADDED@mx.google.com>
References: <1208200109.6420.72.camel@main>
	<ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.com>
	<4803caad.01ac420a.7d0e.ffff9db9SMTPIN_ADDED@mx.google.com>
Message-ID: <1208276403.6445.11.camel@main>

wow...crazy syntax. maybe the wiki section on tree generation should be
updated to note that this syntax is equivalent to the other one?

also, while we're on the subject, what about a rewrite syntax of this
one:

unary: (UnaryOp^)? something;

Thanks a bunch to everyone!,
Marko

-----Original Message-----
From: Gavin Lambert <antlr at mirality.co.nz>
To: Thomas Brandon <tbrandonau at gmail.com>, Marko Simovic
<markobarko at gmail.com>
Cc: antlr-interest <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Operator tree construction in rewrite
syntax
Date: Tue, 15 Apr 2008 09:19:16 +1200


At 08:46 15/04/2008, Thomas Brandon wrote:
 >I think you can do something like (syntax not checked):
 >sum: s1=something -> $s1 (Plus s2=something -> ^(Plus $sum $s2)
 >)*;
 >I'm not sure if you need the first rewrite or whether it will
 >already have it when you use $sum (the previously constructed
 >tree for the rule).

You do need the first rewrite, and it needs to be in parentheses 
or ANTLR will complain.  So:

sum
   : (s1=something -> $s1)
     (Plus s2=something -> ^(Plus $sum $s2))*
   ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/2565c8c1/attachment.html 

From cdoucette at vaultus.com  Tue Apr 15 11:28:32 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Tue, 15 Apr 2008 14:28:32 -0400
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr
	3.0.1
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB71E2@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

Our company's application development tool uses a scripting language which is very similar to Java (and ultimately generates Java).
I am writing a new editor for it - and the editor depends on a parser.
I am trying to use Antlr 3.0.1 to build a new parser for our language.
I was told to start with a Java 1.1 grammar - or perhaps 1.2, which I finally found in an old downloaded version of Antlr 2.7.
I manually performed the v2->v3 conversions necessary to get most of the grammar upgraded to v3.
Then I added a few of our language constructs.
Anyhow, I am getting the following errors, and I'm not sure how to resolve them.
Could someone please help me resolve the errors?

Thanks,
Chuck

[13:59:17] error(114): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: attribute is not a token, parameter, or return value: m
[13:59:17] error(117): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: missing attribute access on rule scope: t
[13:59:17] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1517)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1780)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/3a4f773b/attachment-0001.html 

From jimi at temporal-wave.com  Tue Apr 15 11:50:45 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Apr 2008 11:50:45 -0700
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for
	antlr 3.0.1
In-Reply-To: <A7746824D386F947BBC285F6EC4716B001E8DB71E2@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
Message-ID: <dbe144eb81f9fb4c9e2808122fa03c8d@temporal-wave.com>

It means that somewhere you are trying to use both rewrite rules '->' and auto tree building directives such as ! or ^ in a rule. Looks like this is in your atom: rule somewhere. This is an error that will be cleaned up in a future release.

 

However, you should download the 3.0/3.1 examples grammars and use the Java grammar there as this has been recently updated to be 1.5 compatible. 

 

Your other errors may be getting in the way too, regarding the m and t elements. Perhaps you still have m:rule instead of m=rule somewhere?

 

As I said though, abandoning what you have and using the 'official' java grammar for 3.1 (visit the downloads page and download the examples zip/tar)  would seem to be a better bet. You might also find the book a reasonable investment for your company: http://www.pragprog.com/titles/tpantlr

 

 

Jim

 

 

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Tuesday, April 15, 2008 11:29 AM
To: antlr-interest at antlr.org
Cc: Agranov, Gennady; George, Joseph
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

 

Our company's application development tool uses a scripting language which is very similar to Java (and ultimately generates Java).

I am writing a new editor for it - and the editor depends on a parser.

I am trying to use Antlr 3.0.1 to build a new parser for our language.

I was told to start with a Java 1.1 grammar - or perhaps 1.2, which I finally found in an old downloaded version of Antlr 2.7.

I manually performed the v2->v3 conversions necessary to get most of the grammar upgraded to v3.

Then I added a few of our language constructs. 

Anyhow, I am getting the following errors, and I'm not sure how to resolve them.

Could someone please help me resolve the errors?

 

Thanks,

Chuck

 

[13:59:17] error(114): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: attribute is not a token, parameter, or return value: m
[13:59:17] error(117): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: missing attribute access on rule scope: t
[13:59:17] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1517)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1780)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

 


  _____  


Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com <http://www.vaultus.com/>  

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/7139bec7/attachment.html 

From antlr at mirality.co.nz  Tue Apr 15 12:41:54 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 16 Apr 2008 07:41:54 +1200
Subject: [antlr-interest] Operator tree construction in rewrite  syntax
In-Reply-To: <1208276403.6445.11.camel@main>
References: <1208200109.6420.72.camel@main>
	<ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.com>
	<4803caad.01ac420a.7d0e.ffff9db9SMTPIN_ADDED@mx.google.com>
	<1208276403.6445.11.camel@main>
Message-ID: <20080415194206.F06FB11EAF5@www.antlr.org>

At 04:20 16/04/2008, Marko Simovic wrote:
>also, while we're on the subject, what about a rewrite syntax of 
>this one:
>
>unary: (UnaryOp^)? something;

That one's simpler, because there aren't any loops (so no need to 
generate multiple trees):

unary
   :  UnaryOp s1=something -> ^(UnaryOp $s1)
   |  s2=something -> $s2
   ;

The main thing you need to remember is that whenever you use -> 
you are setting the tree for the entire rule, and that if needed 
you can include a previously-generated tree for the rule within 
the new tree being constructed.


From parrt at cs.usfca.edu  Tue Apr 15 12:47:39 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Apr 2008 12:47:39 -0700
Subject: [antlr-interest] Operator tree construction in rewrite  syntax
In-Reply-To: <20080415194206.F06FB11EAF5@www.antlr.org>
References: <1208200109.6420.72.camel@main>
	<ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.com>
	<4803caad.01ac420a.7d0e.ffff9db9SMTPIN_ADDED@mx.google.com>
	<1208276403.6445.11.camel@main>
	<20080415194206.F06FB11EAF5@www.antlr.org>
Message-ID: <5746A908-3BC6-4848-A330-9D4CE397802C@cs.usfca.edu>


On Apr 15, 2008, at 12:41 PM, Gavin Lambert wrote:

> At 04:20 16/04/2008, Marko Simovic wrote:
>> also, while we're on the subject, what about a rewrite syntax of  
>> this one:
>>
>> unary: (UnaryOp^)? something;
>
> That one's simpler, because there aren't any loops (so no need to  
> generate multiple trees):
>
> unary
>  :  UnaryOp s1=something -> ^(UnaryOp $s1)
>  |  s2=something -> $s2
>  ;

or

unary
	: UnaryOp something -> ^(UnaryOp something)
	| something
	;

in 2nd alt, ANTLR just adds to tree.

Ter

From cdoucette at vaultus.com  Tue Apr 15 14:08:02 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Tue, 15 Apr 2008 17:08:02 -0400
Subject: [antlr-interest] new user adapting java.g from antlr 2.7
	for	antlr 3.0.1
References: <A7746824D386F947BBC285F6EC4716B001E8DB71E2@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
	<dbe144eb81f9fb4c9e2808122fa03c8d@temporal-wave.com> 
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB7269@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

When I added this:

output=AST;

to the options,

then everything builds fine.

Perhaps the error could be improved?

Thanks,
Chuck

________________________________
From: Doucette, Charles
Sent: Tuesday, April 15, 2008 5:06 PM
To: 'Jim Idle'; antlr-interest at antlr.org
Subject: RE: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

Using the java.g for 1.5, I could generate the parser just fine without any errors.
After I commented out most of it, and added the following extra rules:

vscript :
  // Next we have a series of zero or more import statements
//  ( importDefinition )*

  vscriptDeclaration*
  EOF!
  ;


vscriptDeclaration :
    actionDeclaration
  | newDeclaration
  ;

actionDeclaration :
 (/*actionType=*/Identifier ACTION /*actionName=*/Identifier? (FOR qualifiedName)?) /*actionBlock=*/block actionEpilogue?
// -> ^(ACTION $actionType $actionBlock $actionName? ^(FOR qualifiedName)? actionEpilogue?)
 ;

actionEpilogue :
   asBlock ifBlock?
 | ifBlock asBlock?
 ;

asBlock :
 AS^ block
 ;

ifBlock :
 IF^ block
 ;

newDeclaration :
 NEW^ type Identifier formalParameters? block
 ;

I got the following errors again:

[17:03:08] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript1_5.g : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1490)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)


________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 15, 2008 2:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

It means that somewhere you are trying to use both rewrite rules '->' and auto tree building directives such as ! or ^ in a rule. Looks like this is in your atom: rule somewhere. This is an error that will be cleaned up in a future release.

However, you should download the 3.0/3.1 examples grammars and use the Java grammar there as this has been recently updated to be 1.5 compatible.

Your other errors may be getting in the way too, regarding the m and t elements. Perhaps you still have m:rule instead of m=rule somewhere?

As I said though, abandoning what you have and using the 'official' java grammar for 3.1 (visit the downloads page and download the examples zip/tar)  would seem to be a better bet. You might also find the book a reasonable investment for your company: http://www.pragprog.com/titles/tpantlr


Jim




From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Tuesday, April 15, 2008 11:29 AM
To: antlr-interest at antlr.org
Cc: Agranov, Gennady; George, Joseph
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

Our company's application development tool uses a scripting language which is very similar to Java (and ultimately generates Java).
I am writing a new editor for it - and the editor depends on a parser.
I am trying to use Antlr 3.0.1 to build a new parser for our language.
I was told to start with a Java 1.1 grammar - or perhaps 1.2, which I finally found in an old downloaded version of Antlr 2.7.
I manually performed the v2->v3 conversions necessary to get most of the grammar upgraded to v3.
Then I added a few of our language constructs.
Anyhow, I am getting the following errors, and I'm not sure how to resolve them.
Could someone please help me resolve the errors?

Thanks,
Chuck

[13:59:17] error(114): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: attribute is not a token, parameter, or return value: m
[13:59:17] error(117): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: missing attribute access on rule scope: t
[13:59:17] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1517)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1780)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/21d28949/attachment-0001.html 

From cdoucette at vaultus.com  Tue Apr 15 14:05:54 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Tue, 15 Apr 2008 17:05:54 -0400
Subject: [antlr-interest] new user adapting java.g from antlr 2.7
	for	antlr 3.0.1
In-Reply-To: <dbe144eb81f9fb4c9e2808122fa03c8d@temporal-wave.com>
References: <A7746824D386F947BBC285F6EC4716B001E8DB71E2@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
	<dbe144eb81f9fb4c9e2808122fa03c8d@temporal-wave.com>
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

Using the java.g for 1.5, I could generate the parser just fine without any errors.
After I commented out most of it, and added the following extra rules:

vscript :
  // Next we have a series of zero or more import statements
//  ( importDefinition )*

  vscriptDeclaration*
  EOF!
  ;


vscriptDeclaration :
    actionDeclaration
  | newDeclaration
  ;

actionDeclaration :
 (/*actionType=*/Identifier ACTION /*actionName=*/Identifier? (FOR qualifiedName)?) /*actionBlock=*/block actionEpilogue?
// -> ^(ACTION $actionType $actionBlock $actionName? ^(FOR qualifiedName)? actionEpilogue?)
 ;

actionEpilogue :
   asBlock ifBlock?
 | ifBlock asBlock?
 ;

asBlock :
 AS^ block
 ;

ifBlock :
 IF^ block
 ;

newDeclaration :
 NEW^ type Identifier formalParameters? block
 ;

I got the following errors again:

[17:03:08] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript1_5.g : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1490)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)


________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 15, 2008 2:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

It means that somewhere you are trying to use both rewrite rules '->' and auto tree building directives such as ! or ^ in a rule. Looks like this is in your atom: rule somewhere. This is an error that will be cleaned up in a future release.

However, you should download the 3.0/3.1 examples grammars and use the Java grammar there as this has been recently updated to be 1.5 compatible.

Your other errors may be getting in the way too, regarding the m and t elements. Perhaps you still have m:rule instead of m=rule somewhere?

As I said though, abandoning what you have and using the 'official' java grammar for 3.1 (visit the downloads page and download the examples zip/tar)  would seem to be a better bet. You might also find the book a reasonable investment for your company: http://www.pragprog.com/titles/tpantlr


Jim




From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Tuesday, April 15, 2008 11:29 AM
To: antlr-interest at antlr.org
Cc: Agranov, Gennady; George, Joseph
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

Our company's application development tool uses a scripting language which is very similar to Java (and ultimately generates Java).
I am writing a new editor for it - and the editor depends on a parser.
I am trying to use Antlr 3.0.1 to build a new parser for our language.
I was told to start with a Java 1.1 grammar - or perhaps 1.2, which I finally found in an old downloaded version of Antlr 2.7.
I manually performed the v2->v3 conversions necessary to get most of the grammar upgraded to v3.
Then I added a few of our language constructs.
Anyhow, I am getting the following errors, and I'm not sure how to resolve them.
Could someone please help me resolve the errors?

Thanks,
Chuck

[13:59:17] error(114): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: attribute is not a token, parameter, or return value: m
[13:59:17] error(117): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: missing attribute access on rule scope: t
[13:59:17] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1517)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1780)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/d7e64d7a/attachment.html 

From jaluber at gmx.de  Tue Apr 15 14:27:55 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 15 Apr 2008 23:27:55 +0200
Subject: [antlr-interest] new user adapting java.g from antlr 2.7	for
 antlr 3.0.1
In-Reply-To: <A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
References: <A7746824D386F947BBC285F6EC4716B001E8DB71E2@vmtbosmail01.VMTBOSTON.VAULTUS.COM>	<dbe144eb81f9fb4c9e2808122fa03c8d@temporal-wave.com>
	<A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
Message-ID: <48051DDB.1080904@gmx.de>

Doucette, Charles schrieb:
> Using the java.g for 1.5, I could generate the parser just fine without 
> any errors.
> After I commented out most of it, and added the following extra rules:
>  
...
>  
> I got the following errors again:
>  
> [17:03:08] error(10):  internal error: 
> C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript1_5.g 
> : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
> org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
> org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1490)
> org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
> org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
> org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
> org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
> org.antlr.Tool.processGrammar(Tool.java:347)
> org.antlr.Tool.process(Tool.java:268)
> org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
> org.antlr.works.generate.CodeGenerate.run(Unknown Source)
> java.lang.Thread.run(Unknown Source)
> 
> 

This particular exception tells that somewhere you are mixing the ^ and 
! operators with the tree rewrite rules. Possibly ANTLR 3.1 has some 
better error handling in this case.

Johannes

From markobarko at gmail.com  Tue Apr 15 13:43:12 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Tue, 15 Apr 2008 16:43:12 -0400
Subject: [antlr-interest] Operator tree construction in rewrite  syntax
In-Reply-To: <5746A908-3BC6-4848-A330-9D4CE397802C@cs.usfca.edu>
References: <1208200109.6420.72.camel@main>
	<ebc876d70804141346q6937217foabc32583351a22f2@mail.gmail.com>
	<4803caad.01ac420a.7d0e.ffff9db9SMTPIN_ADDED@mx.google.com>
	<1208276403.6445.11.camel@main>
	<20080415194206.F06FB11EAF5@www.antlr.org>
	<5746A908-3BC6-4848-A330-9D4CE397802C@cs.usfca.edu>
Message-ID: <1208292192.6566.12.camel@main>

hmmm...that makes sense to me. however, i'm running into a problem.

given input:

abc+

which is incomplete input, the parser fails in two different ways
depending on the tree construction syntax i use.

if i use:
unary: (UnaryOp^)? something;
then i get a noalt exception and i get returned a tree with plus
operator and one operand (abc).

if i use:
unary
	: UnaryOp something -> ^(UnaryOp something)
	| something
	;
then i get a rewriteemptystreamexception and i get no tree (as the
parser doesn't catch the exception and it propagates up to my code).

strange? or perfectly logical?

-----Original Message-----
From: Terence Parr <parrt at cs.usfca.edu>
To: Gavin Lambert <antlr at mirality.co.nz>
Cc: Marko Simovic <markobarko at gmail.com>, antlr-interest
<antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Operator tree construction in rewrite
syntax
Date: Tue, 15 Apr 2008 12:47:39 -0700


On Apr 15, 2008, at 12:41 PM, Gavin Lambert wrote:

> At 04:20 16/04/2008, Marko Simovic wrote:
>> also, while we're on the subject, what about a rewrite syntax of  
>> this one:
>>
>> unary: (UnaryOp^)? something;
>
> That one's simpler, because there aren't any loops (so no need to  
> generate multiple trees):
>
> unary
>  :  UnaryOp s1=something -> ^(UnaryOp $s1)
>  |  s2=something -> $s2
>  ;

or

unary
	: UnaryOp something -> ^(UnaryOp something)
	| something
	;

in 2nd alt, ANTLR just adds to tree.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/8134876a/attachment.html 

From jimi at temporal-wave.com  Tue Apr 15 14:11:40 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 15 Apr 2008 14:11:40 -0700
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for
	antlr 3.0.1
In-Reply-To: <A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
Message-ID: <5a11114cce5d054b94323f8eda565667@temporal-wave.com>

I guess you didn't get my meaning last time, but basically if you are using the output=AST option (which you will be if generating a tree of course) then you cannot mix the ! and ^ operators with rewrite rules in the same rule, so something  like:

 

xx:

 i+= ID COMMA! i+=ID   ->^(IDSET $i+)

;

 

Will give you an error like that unless you remove the !. If you start adding -> instead of !^, then you must do it completely.

 

Jim

 

From: Doucette, Charles [mailto:cdoucette at vaultus.com] 
Sent: Tuesday, April 15, 2008 2:06 PM
To: Jim Idle; antlr-interest at antlr.org
Subject: RE: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

 

Using the java.g for 1.5, I could generate the parser just fine without any errors.

After I commented out most of it, and added the following extra rules:

 

vscript :
  // Next we have a series of zero or more import statements
//  ( importDefinition )*

 

  vscriptDeclaration*
  EOF!
  ;
  
  
vscriptDeclaration :
    actionDeclaration
  | newDeclaration
  ;
  
actionDeclaration :
 (/*actionType=*/Identifier ACTION /*actionName=*/Identifier? (FOR qualifiedName)?) /*actionBlock=*/block actionEpilogue?
// -> ^(ACTION $actionType $actionBlock $actionName? ^(FOR qualifiedName)? actionEpilogue?)
 ;
 
actionEpilogue :
   asBlock ifBlock?
 | ifBlock asBlock?
 ;
 
asBlock :
 AS^ block
 ;

 

ifBlock :
 IF^ block
 ;
 
newDeclaration :
 NEW^ type Identifier formalParameters? block
 ;

 

I got the following errors again:

 

[17:03:08] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript1_5.g : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1490)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

 

 

  _____  

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Tuesday, April 15, 2008 2:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

It means that somewhere you are trying to use both rewrite rules '->' and auto tree building directives such as ! or ^ in a rule. Looks like this is in your atom: rule somewhere. This is an error that will be cleaned up in a future release.

 

However, you should download the 3.0/3.1 examples grammars and use the Java grammar there as this has been recently updated to be 1.5 compatible. 

 

Your other errors may be getting in the way too, regarding the m and t elements. Perhaps you still have m:rule instead of m=rule somewhere?

 

As I said though, abandoning what you have and using the 'official' java grammar for 3.1 (visit the downloads page and download the examples zip/tar)  would seem to be a better bet. You might also find the book a reasonable investment for your company: http://www.pragprog.com/titles/tpantlr

 

 

Jim

 

 

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Tuesday, April 15, 2008 11:29 AM
To: antlr-interest at antlr.org
Cc: Agranov, Gennady; George, Joseph
Subject: [antlr-interest] new user adapting java.g from antlr 2.7 for antlr 3.0.1

 

Our company's application development tool uses a scripting language which is very similar to Java (and ultimately generates Java).

I am writing a new editor for it - and the editor depends on a parser.

I am trying to use Antlr 3.0.1 to build a new parser for our language.

I was told to start with a Java 1.1 grammar - or perhaps 1.2, which I finally found in an old downloaded version of Antlr 2.7.

I manually performed the v2->v3 conversions necessary to get most of the grammar upgraded to v3.

Then I added a few of our language constructs. 

Anyhow, I am getting the following errors, and I'm not sure how to resolve them.

Could someone please help me resolve the errors?

 

Thanks,

Chuck

 

[13:59:17] error(114): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: attribute is not a token, parameter, or return value: m
[13:59:17] error(117): C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g:0:0: missing attribute access on rule scope: t
[13:59:17] error(10):  internal error: C:\software\trunk\vsw\workspaces\eclipse\com.vaultus.studio.vscript.parser\src\com\vaultus\studio\vscript\parser\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRootTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1517)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1780)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

 


  _____  


Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com <http://www.vaultus.com/>  

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/707d8729/attachment-0001.html 

From enjoywm at cs.wm.edu  Tue Apr 15 15:33:21 2008
From: enjoywm at cs.wm.edu (Yixun Liu)
Date: Tue, 15 Apr 2008 18:33:21 -0400
Subject: [antlr-interest] re
In-Reply-To: <48051211.30701@gmx.de>
References: <4804F67C.80601@cs.wm.edu> <48051211.30701@gmx.de>
Message-ID: <48052D31.8030100@cs.wm.edu>

Johannes Luber wrote:
> Yixun Liu schrieb:
>> Hi,
>> Thanks for your help.
>> The Dim is a biuld-in type of CUDA(compiler2), but it doesn't support in
>> compiler1. I need to use compiler1 to do some preprocessing on the CUDA
>> program.
>> struct Dim{
>> int x,
>> inty
>> }
>>
>> The attachment is the grammar file, which I want to modify to support
>> this type.
>> Hope your help!
>>
>> Best,
>> Yixun
>
> I'm sorry, but looking into the file showed that your are still using
> ANTLR 2.7.7 and not ANTLR 3. The grammars have different syntax
> definitions and I'm not familiar with anything before ANTLR 3. Please
> repost your email to the mailing list.
>
> Johannes


From ad_cooney at hotmail.com  Tue Apr 15 15:54:14 2008
From: ad_cooney at hotmail.com (Adam Cooney)
Date: Tue, 15 Apr 2008 23:54:14 +0100
Subject: [antlr-interest] Runtime  BaseRecognizer error
In-Reply-To: <5a11114cce5d054b94323f8eda565667@temporal-wave.com>
References: <A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
	<5a11114cce5d054b94323f8eda565667@temporal-wave.com>
Message-ID: <BLU124-W10C321F1BCC62E70B2B3C784EB0@phx.gbl>


Hi, 
  when running my grammar file I can compiel the grammar and the parser/lexers produced but when I run it I get the following:
 
!!!!!!!!! memo size is 2, but rule index is 37!!!!!!!!! memo size is 2, but rule index is 25!!!!!!!!! memo size is 2, but rule index is 23!!!!!!!!! memo size is 2, but rule index is 7!!!!!!!!! memo size is 2, but rule index is 6!!!!!!!!! memo size is 2, but rule index is 3!!!!!!!!! memo size is 2, but rule index is 2Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 2        at org.antlr.runtime.BaseRecognizer.memoize(BaseRecognizer.java:806)        at JavaParser.compilationUnit(JavaParser.java:565)        at Test.main(Test.java:30)
 
Anyone know why?
ps it was previously suggested to change JavaHeapSpace. I changed it to 256/512/1024/2048 and it did nothing, I dont think its a processing problem .
_________________________________________________________________
Get Hotmail on your mobile. Text MSN to 63463 now!
http://mobile.uk.msn.com/pc/mail.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080415/3966b4f9/attachment.html 

From jaluber at gmx.de  Tue Apr 15 16:01:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 16 Apr 2008 01:01:58 +0200
Subject: [antlr-interest] Runtime  BaseRecognizer error
In-Reply-To: <BLU124-W10C321F1BCC62E70B2B3C784EB0@phx.gbl>
References: <A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>	<5a11114cce5d054b94323f8eda565667@temporal-wave.com>
	<BLU124-W10C321F1BCC62E70B2B3C784EB0@phx.gbl>
Message-ID: <480533E6.8070104@gmx.de>

Adam Cooney schrieb:
> Hi,
>   when running my grammar file I can compiel the grammar and the 
> parser/lexers produced but when I run it I get the following:
>  
> !!!!!!!!! memo size is 2, but rule index is 37
> !!!!!!!!! memo size is 2, but rule index is 25
> !!!!!!!!! memo size is 2, but rule index is 23
> !!!!!!!!! memo size is 2, but rule index is 7
> !!!!!!!!! memo size is 2, but rule index is 6
> !!!!!!!!! memo size is 2, but rule index is 3
> !!!!!!!!! memo size is 2, but rule index is 2
> Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 2
>         at org.antlr.runtime.BaseRecognizer.memoize(BaseRecognizer.java:806)
>         at JavaParser.compilationUnit(JavaParser.java:565)
>         at Test.main(Test.java:30)
> 
>  
> Anyone know why?
> ps it was previously suggested to change JavaHeapSpace. I changed it to 
> 256/512/1024/2048 and it did nothing, I dont think its a processing 
> problem .

Do you happen to use a different version of the runtime library than the 
ANTLR one you generated the code with?

Johannes

From ad_cooney at hotmail.com  Tue Apr 15 16:13:08 2008
From: ad_cooney at hotmail.com (Adam Cooney)
Date: Wed, 16 Apr 2008 00:13:08 +0100
Subject: [antlr-interest] Runtime  BaseRecognizer error
In-Reply-To: <480533E6.8070104@gmx.de>
References: <A7746824D386F947BBC285F6EC4716B001E8DB7268@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
	<5a11114cce5d054b94323f8eda565667@temporal-wave.com>
	<BLU124-W10C321F1BCC62E70B2B3C784EB0@phx.gbl> <480533E6.8070104@gmx.de>
Message-ID: <BLU124-W7A044B5F22866143DFFC384EB0@phx.gbl>









Shouldn't be. When I upgraded ANTLR all i did was save the tar into my /antlr/ dir, untared it, then went into the new antlr lib(antlr/newver/lib), changed the names of all the JAR files (so antlr and runtime to antlr-3.1b1.jar and antlr-runtime-3.1b1.jar) and overwrit my old folders. Then after doing that I compiled the grammar file. Unless as well as downloading this update I was meant to download something else or i've installed it incorrectly? Surprisingly the only problems ive had using ANTLR are installation ones but ive managed to upgrade it several times before withotu any trouble. :S
 
ps sorry i sent this to your personal email. Its late and it was an accident. Apologies.> Date: Wed, 16 Apr 2008 01:01:58 +0200> From: jaluber at gmx.de> To: ad_cooney at hotmail.com> CC: antlr-interest at antlr.org> Subject: Re: [antlr-interest] Runtime BaseRecognizer error> > Adam Cooney schrieb:> > Hi,> > when running my grammar file I can compiel the grammar and the > > parser/lexers produced but when I run it I get the following:> > > > !!!!!!!!! memo size is 2, but rule index is 37> > !!!!!!!!! memo size is 2, but rule index is 25> > !!!!!!!!! memo size is 2, but rule index is 23> > !!!!!!!!! memo size is 2, but rule index is 7> > !!!!!!!!! memo size is 2, but rule index is 6> > !!!!!!!!! memo size is 2, but rule index is 3> > !!!!!!!!! memo size is 2, but rule index is 2> > Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 2> > at org.antlr.runtime.BaseRecognizer.memoize(BaseRecognizer.java:806)> > at JavaParser.compilationUnit(JavaParser.java:565)> > at Test.main(Test.java:30)> > > > > > Anyone know why?> > ps it was previously suggested to change JavaHeapSpace. I changed it to > > 256/512/1024/2048 and it did nothing, I dont think its a processing > > problem .> > Do you happen to use a different version of the runtime library than the > ANTLR one you generated the code with?> > Johannes



News, Sports, Entertainment and Weather on your mobile. Text MSN to 63463 Now. 





Want to race through your inbox even faster? Try the full version of Windows Live Hotmail. (It's free, too.) 
_________________________________________________________________
Welcome to the next generation of Windows Live
http://www.windowslive.co.uk/get-live
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/c3daddcf/attachment.html 

From jqwoods at gmail.com  Tue Apr 15 20:19:58 2008
From: jqwoods at gmail.com (John Woods)
Date: Tue, 15 Apr 2008 20:19:58 -0700
Subject: [antlr-interest] Howto #include other files while parsing?
Message-ID: <4805705E.1000203@gmail.com>

I'm creating a parser for a file format which has a #include statement 
much like the C preprocessor. The solution I'm thinking of would involve 
creating an InputStream subclass that reads from one file, then when the 
parser parses a #include statement, the parser tells the InputStream to 
switch to reading the #included file, and when that file is exhausted, 
the InputStream pops back to the previous file, continuing reading where 
it left off -- immediately after the #include statement.

Is there any guarantee that the lexer won't read past the #include 
statement when it is parsed? Because if it did read ahead, then the 
#included file would essentially be "inserted" at the wrong position in 
the InputStream.

Is there a better way to approach this problem?

Thanks.

From gaochunguang at 163.com  Tue Apr 15 20:24:01 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Wed, 16 Apr 2008 11:24:01 +0800
Subject: [antlr-interest] printf in target C grammar
Message-ID: <000801c89f71$51196a00$0800a8c0@alien>


IMPORT : 'import' WS name=QIDStar WS? ';'
          {
          printf("%s",$name.Text);
          };
ANTLRWorks give me [invalid StringTemplate % shorthand syntax: '%s",'] errer message. how to write? thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/30691389/attachment.html 

From peter.nann at vecommerce.com.au  Tue Apr 15 20:46:37 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Wed, 16 Apr 2008 13:46:37 +1000
Subject: [antlr-interest] Howto #include other files while parsing?
References: <4805705E.1000203@gmail.com>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AB5@vcmsydexh.vecommerce.com>


Well, I was about to tackle that problem any day now, so look forward to
your solution!
(Or, surely there is a standard solution to this...)

Are you writing it in Java?
Any chance you could flick your code to me once it's working?
;-) I'd owe you one...

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of John Woods
Sent: Wednesday, 16 April 2008 1:20 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Howto #include other files while parsing?

I'm creating a parser for a file format which has a #include statement
much like the C preprocessor. The solution I'm thinking of would involve
creating an InputStream subclass that reads from one file, then when the
parser parses a #include statement, the parser tells the InputStream to
switch to reading the #included file, and when that file is exhausted,
the InputStream pops back to the previous file, continuing reading where
it left off -- immediately after the #include statement.

Is there any guarantee that the lexer won't read past the #include
statement when it is parsed? Because if it did read ahead, then the
#included file would essentially be "inserted" at the wrong position in
the InputStream.

Is there a better way to approach this problem?

Thanks.

From siemsen at ucar.edu  Tue Apr 15 22:16:44 2008
From: siemsen at ucar.edu (siemsen at ucar.edu)
Date: Tue, 15 Apr 2008 23:16:44 -0600
Subject: [antlr-interest] Howto #include other files while parsing?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AB5@vcmsydexh.vecommerce.com>
References: <4805705E.1000203@gmail.com>
	<1080AEABD1979E42A15840F08084B67BFE3AB5@vcmsydexh.vecommerce.com>
Message-ID: <63EF8C0B-48C3-48D1-B942-7839E4126CB3@ucar.edu>

I have a grammar that does this, using the method described on the  
ANTLR Wiki at

     http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

-- Pete


On Apr 15, 2008, at 9:46 PM, Peter Nann wrote:

>
> Well, I was about to tackle that problem any day now, so look  
> forward to
> your solution!
> (Or, surely there is a standard solution to this...)
>
> Are you writing it in Java?
> Any chance you could flick your code to me once it's working?
> ;-) I'd owe you one...
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of John Woods
> Sent: Wednesday, 16 April 2008 1:20 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Howto #include other files while parsing?
>
> I'm creating a parser for a file format which has a #include statement
> much like the C preprocessor. The solution I'm thinking of would  
> involve
> creating an InputStream subclass that reads from one file, then when  
> the
> parser parses a #include statement, the parser tells the InputStream  
> to
> switch to reading the #included file, and when that file is exhausted,
> the InputStream pops back to the previous file, continuing reading  
> where
> it left off -- immediately after the #include statement.
>
> Is there any guarantee that the lexer won't read past the #include
> statement when it is parsed? Because if it did read ahead, then the
> #included file would essentially be "inserted" at the wrong position  
> in
> the InputStream.
>
> Is there a better way to approach this problem?
>
> Thanks.


From pink at odahoda.de  Wed Apr 16 01:34:27 2008
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed, 16 Apr 2008 10:34:27 +0200
Subject: [antlr-interest] printf in target C grammar
In-Reply-To: <000801c89f71$51196a00$0800a8c0@alien>
References: <000801c89f71$51196a00$0800a8c0@alien>
Message-ID: <543531490804160134i2554d373o8d7ea186a6d9f966@mail.gmail.com>

Hi,

On Wed, Apr 16, 2008 at 5:24 AM, gaochunguang <gaochunguang at 163.com> wrote:
>
>
> IMPORT : 'import' WS name=QIDStar WS? ';'
>           {
>           printf("%s",$name.Text);
>           };
> ANTLRWorks give me [invalid StringTemplate % shorthand syntax: '%s",'] errer
> message. how to write? thanks.

You'll have to escape the '%': printf("\%s",$name.Text);

HTH

-Ben

From lmeyerov at gmail.com  Wed Apr 16 03:10:02 2008
From: lmeyerov at gmail.com (Leo Meyerovich)
Date: Wed, 16 Apr 2008 03:10:02 -0700
Subject: [antlr-interest] updating text dump when writing tree grammar ast
	transformers
Message-ID: <4805D07A.1060409@gmail.com>

Hiya,

I'm using Patrick Hulsmeijer's JavaScript grammar & tree walker. I 
running a 3 stage pipeline: a grammar to parse, a tree grammar walker to 
transform (output=ast), and then a tree grammar walker to pretty print. 
While I verified that the AST structure is being transformed, I can't 
reuse the existing top $text attribute to easily print - it dumps the 
untransformed AST! More specifically:

//1. parser: unmodified es3

//2. transformer: modified es3walker with the following change to flip 
assignments:
expr:
   ...
    | ^( ASSIGN a=expr b=expr )  -> ^(ASSIGN $b $a)       
  ...

//3. printer: modified to print at two locations, top, and @ point of 
transformation
   program : (statement {System.out.println($statement.text);})* ;
...
expr:
   ...
    | ^( ASSIGN a=expr b=expr )  {System.out.println("//=, " + $a.text + 
", " + $b.text);}
  ...

While the print out associated with the assignment rule prints out as 
expected (reversed assignment), the whole AST dump in the program rule 
shows the unmodified source. I tried playing a bit with token settings 
as described near the end of chapter 7 (albeit not really for the 
then-nonexistent tree rewrites) such as writing "-> ^(ASSIGN $b[$b, 
$b.text] ...)", but did not bump into anything that compiled.

Will I need to write an explicit pretty printer action for every rule, 
or is there a way to do tree transforms that will propagate associated text?

As a side note, has anybody had success with rewrite=true for tree 
grammar transformers? My AST gets butchered when I add a transform to 
the assignment arm of the expression rule (perhaps I just need to add 
explicit identity transforms to the rest of the arms of the expression 
rule?). I suspect inplace transforms would be best for my task so it'd 
be nice :)

This is all on build 2008-04-09.18.

Thanks!

- Leo

(ps: I'll post my transforms and a short explanation when/if I get this 
working, which hopefully will aid the coming release of this very useful 
feature)

From phulsmeijer at xebic.com  Wed Apr 16 04:47:33 2008
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Wed, 16 Apr 2008 13:47:33 +0200
Subject: [antlr-interest] Updated ECMAScript 3 grammar
In-Reply-To: <20080415145123.GA20908@badgers-in-foil.co.uk>
References: <C3525AF49F7D374D8E4D3C46ED4BC6211687DE@srvxdcex.xebic.com>
	<20080415145123.GA20908@badgers-in-foil.co.uk>
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC6211687FF@srvxdcex.xebic.com>

Excellent idea. I've played with parameters in the expression rules in
the past to actually accomplish the same as you did. But this was not
successful.

After reading your post I thought I give it a shot with global scopes.
But this gives me the same result: an enormous DFA generated in the
parser and a failing prediction. I will try to look into this more
closely and report this later.

Gr, patrick.


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Holroyd
Sent: dinsdag 15 april 2008 16:51
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Updated ECMAScript 3 grammar

On Tue, Apr 15, 2008 at 04:39:06PM +0200, Patrick Hulsmeijer wrote:

> I've updated the grammar uploaded under "A complete ECMAScript 3
> grammar". The direct link is: http://research.xebic.com/es3.
> 
> A license statement was added and 2 reported bugs were fixed.
> 
>  
> 
> Still looking forward to reactions on this list.

For a similar grammar[1], I did the In/NoIn stuff using scopes rather
than duplicate rules.

I wonder if you found particular reasons not to do things that way?
Maybe the performance is better?  (Maybe I've actually implemented my
grammar incorrectly?)


ta,
dave


[1]
http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/antlr/org/asdt/co
re/internal/antlr/AS3.g3

-- 
http://david.holroyd.me.uk/

From stephanie.gaillard at gmail.com  Wed Apr 16 06:12:38 2008
From: stephanie.gaillard at gmail.com (stephanie gaillard)
Date: Wed, 16 Apr 2008 15:12:38 +0200
Subject: [antlr-interest] Scanning extended ASCII characters in ANTLR v3
Message-ID: <90eb1dbe0804160612v3f23523bl7ab5b0d9d44d6fba@mail.gmail.com>

hello !

I have the same problem, have you found a solution ??? I didn't find an
equivalence to the charvocabulary with the v3.

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/7bccd73f/attachment.html 

From peter.nann at vecommerce.com.au  Wed Apr 16 06:40:44 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Wed, 16 Apr 2008 23:40:44 +1000
Subject: [antlr-interest] Can't get "\<" to work in inline template rule?
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AB8@vcmsydexh.vecommerce.com>


Just starting out with what I hope should be a simple translator...

For now, as a start, I am simply trying to turn:
	[ a ]
Into:
	<one-of> a </one-of>

But I can't get an angle bracket verbatim in the output!!!

In the code below, you will see I am only trying to produce the first
'<'.
Simply escaping the '<' does not seem to work as advertised...
I have tried double, triple escaping, to no avail.
 - Take the "\<" out of this grammar, and it works fine.

Please help, I am a little dissappointed to have run into trouble so
early...
Woe is me...


Here's my Test.g file:

---- Test.g ----
grammar Test;
options {output=template; rewrite=true;}

gslfile : orlist ;

orlist
	: '[' WORD ']'
		-> template(oi={$WORD.text}) "\<one-of <oi> /one-of"
	;
	
WORD : ('a'..'z'|'-'|'_'|'\'') ('a'..'z'|'-'|'_'|'\'')* ;
WS : ( ' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;
-----------------------------------------

And here's the error output:

ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007
error(10):  internal error: Test.g : Test.g:8:34: expecting '"', found
'<'
org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:1
61)
antlr.TokenBuffer.fill(TokenBuffer.java:69)
antlr.TokenBuffer.LT(TokenBuffer.java:86)
antlr.LLkParser.LT(LLkParser.java:56)
org.antlr.tool.ANTLRParser.rewrite_template(ANTLRParser.java:3306)
org.antlr.tool.ANTLRParser.rewrite_alternative(ANTLRParser.java:3177)
org.antlr.tool.ANTLRParser.rewrite(ANTLRParser.java:1885)
org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1451)
org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
org.antlr.tool.Grammar.<init>(Grammar.java:456)
org.antlr.Tool.getGrammar(Tool.java:331)
org.antlr.Tool.process(Tool.java:267)
org.antlr.Tool.main(Tool.java:70)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/85427260/attachment.html 

From peter.nann at vecommerce.com.au  Wed Apr 16 06:54:18 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Wed, 16 Apr 2008 23:54:18 +1000
Subject: [antlr-interest] Can't get "\<" to work in inline template rule?
References: <1080AEABD1979E42A15840F08084B67BFE3AB8@vcmsydexh.vecommerce.com>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AB9@vcmsydexh.vecommerce.com>

Oh, I have just got it to work using the "<<" and ">>" delimiters, which
seem to be directly replacable in place of double-quotes, even on a
single line.
 
But the lack of support in the double-quoted format is a bug, yes?
 
________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter Nann
Sent: Wednesday, 16 April 2008 11:41 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can't get "\<" to work in inline template
rule?




Just starting out with what I hope should be a simple translator... 

For now, as a start, I am simply trying to turn: 
        [ a ] 
Into: 
        <one-of> a </one-of> 

But I can't get an angle bracket verbatim in the output!!! 

In the code below, you will see I am only trying to produce the first
'<'. 
Simply escaping the '<' does not seem to work as advertised... 
I have tried double, triple escaping, to no avail. 
 - Take the "\<" out of this grammar, and it works fine. 

Please help, I am a little dissappointed to have run into trouble so
early... 
Woe is me... 


Here's my Test.g file: 

---- Test.g ---- 
grammar Test; 
options {output=template; rewrite=true;} 

gslfile : orlist ; 

orlist 
        : '[' WORD ']' 
                -> template(oi={$WORD.text}) "\<one-of <oi> /one-of" 
        ; 
        
WORD : ('a'..'z'|'-'|'_'|'\'') ('a'..'z'|'-'|'_'|'\'')* ; 
WS : ( ' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ; 
----------------------------------------- 

And here's the error output: 

ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007 
error(10):  internal error: Test.g : Test.g:8:34: expecting '"', found
'<' 
org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321) 
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:1
61) 
antlr.TokenBuffer.fill(TokenBuffer.java:69) 
antlr.TokenBuffer.LT(TokenBuffer.java:86) 
antlr.LLkParser.LT(LLkParser.java:56) 
org.antlr.tool.ANTLRParser.rewrite_template(ANTLRParser.java:3306) 
org.antlr.tool.ANTLRParser.rewrite_alternative(ANTLRParser.java:3177) 
org.antlr.tool.ANTLRParser.rewrite(ANTLRParser.java:1885) 
org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1451) 
org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236) 
org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655) 
org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389) 
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521) 
org.antlr.tool.Grammar.<init>(Grammar.java:456) 
org.antlr.Tool.getGrammar(Tool.java:331) 
org.antlr.Tool.process(Tool.java:267) 
org.antlr.Tool.main(Tool.java:70) 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/6923a664/attachment-0001.html 

From peter.nann at vecommerce.com.au  Wed Apr 16 07:47:42 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Thu, 17 Apr 2008 00:47:42 +1000
Subject: [antlr-interest] Problem #2: template lists expanding to weird
	stuff?
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3ABA@vcmsydexh.vecommerce.com>


Now, my grammar has a more serious template using Lists and the '+='
operator.

It is getting rather strange expanded output which looks like:

	<one-of> [@2,2:2='x',<4>,1:2] </one-of>


What the heck is going on there?
It looks like the List object has expanded itself using some strange
toString() method.

Any clues on this one?


Updated grammar:

----------------------
grammar Test;
options {output=template; rewrite=true;}

test
	: '[' ( items+=WORD )* ']'
		-> template(items={$items})
			<< \<one-of\> <items; separator=", ">
\</one-of\> >> ;
	
WORD : ('a'..'z'|'-'|'_'|'\'') ('a'..'z'|'-'|'_'|'\'')* ;
WS : ( ' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/e3940919/attachment.html 

From thkarcher at gmx.de  Wed Apr 16 08:00:08 2008
From: thkarcher at gmx.de (Thomas Karcher)
Date: Wed, 16 Apr 2008 17:00:08 +0200
Subject: [antlr-interest] Failing unit tests
Message-ID: <1208358009.11249.11.camel@localhost>

Hi,

I just rebuilt
http://antlr.org/download/build/antlr-2008-04-09.18.tar.gz - I intended
to include another unit test to prove a bug in ANTLR (since a grammar of
mine has strange behaviour). But the existing unit tests already
revealed 37 failures out of 724 tests - is that a number I should
expect? Or am I doing something wrong?

Java 1.6.0 on a 64-bit Linux machine with Apache ant 1.7.0.


Thomas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/1e9a244a/attachment.bin 

From parrt at cs.usfca.edu  Wed Apr 16 08:41:05 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Apr 2008 08:41:05 -0700
Subject: [antlr-interest] Can't get "\<" to work in inline template rule?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AB9@vcmsydexh.vecommerce.com>
References: <1080AEABD1979E42A15840F08084B67BFE3AB8@vcmsydexh.vecommerce.com>
	<1080AEABD1979E42A15840F08084B67BFE3AB9@vcmsydexh.vecommerce.com>
Message-ID: <42C488F2-B310-415E-8644-A245BEC4EF30@cs.usfca.edu>


On Apr 16, 2008, at 6:54 AM, Peter Nann wrote:

> Oh, I have just got it to work using the "<<" and ">>" delimiters,  
> which seem to be directly replacable in place of double-quotes,  
> even on a single line.
>
> But the lack of support in the double-quoted format is a bug, yes?

seems like it. yep.
Thanks,
Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/6a2cc70d/attachment.html 

From parrt at cs.usfca.edu  Wed Apr 16 08:42:02 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Apr 2008 08:42:02 -0700
Subject: [antlr-interest] Problem #2: template lists expanding to weird
	stuff?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3ABA@vcmsydexh.vecommerce.com>
References: <1080AEABD1979E42A15840F08084B67BFE3ABA@vcmsydexh.vecommerce.com>
Message-ID: <145BB1D3-7BC2-48B4-891F-B81308EDA239@cs.usfca.edu>

toString is called on all objects.  that is Token.toString().  use  
the .text property of each

<items:{<it.text>}; separator=", ">

Ter
On Apr 16, 2008, at 7:47 AM, Peter Nann wrote:

>
> Now, my grammar has a more serious template using Lists and the  
> '+=' operator.
>
> It is getting rather strange expanded output which looks like:
>
>         <one-of> [@2,2:2='x',<4>,1:2] </one-of>
>
>
> What the heck is going on there?
> It looks like the List object has expanded itself using some  
> strange toString() method.
>
> Any clues on this one?
>
>
> Updated grammar:
>
> ----------------------
> grammar Test;
> options {output=template; rewrite=true;}
>
> test
>         : '[' ( items+=WORD )* ']'
>                 -> template(items={$items})
>                         << \<one-of\> <items; separator=", "> \</ 
> one-of\> >> ;
>
> WORD : ('a'..'z'|'-'|'_'|'\'') ('a'..'z'|'-'|'_'|'\'')* ;
> WS : ( ' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/f614c244/attachment.html 

From parrt at cs.usfca.edu  Wed Apr 16 08:42:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Apr 2008 08:42:24 -0700
Subject: [antlr-interest] Failing unit tests
In-Reply-To: <1208358009.11249.11.camel@localhost>
References: <1208358009.11249.11.camel@localhost>
Message-ID: <D507C016-81B6-4FE3-A6DC-35FE40B1A574@cs.usfca.edu>

a number of tests fail.  getting to them. ;)
Ter
On Apr 16, 2008, at 8:00 AM, Thomas Karcher wrote:

> Hi,
>
> I just rebuilt
> http://antlr.org/download/build/antlr-2008-04-09.18.tar.gz - I  
> intended
> to include another unit test to prove a bug in ANTLR (since a  
> grammar of
> mine has strange behaviour). But the existing unit tests already
> revealed 37 failures out of 724 tests - is that a number I should
> expect? Or am I doing something wrong?
>
> Java 1.6.0 on a 64-bit Linux machine with Apache ant 1.7.0.
>
>
> Thomas
>


From jqwoods at gmail.com  Wed Apr 16 09:56:41 2008
From: jqwoods at gmail.com (John Woods)
Date: Wed, 16 Apr 2008 09:56:41 -0700
Subject: [antlr-interest] Howto #include other files while parsing?
In-Reply-To: <63EF8C0B-48C3-48D1-B942-7839E4126CB3@ucar.edu>
References: <4805705E.1000203@gmail.com>	<1080AEABD1979E42A15840F08084B67BFE3AB5@vcmsydexh.vecommerce.com>
	<63EF8C0B-48C3-48D1-B942-7839E4126CB3@ucar.edu>
Message-ID: <48062FC9.2000101@gmail.com>

Thanks! Exactly what I was looking for.

-----Original Message-----
From: siemsen at ucar.edu
Sent: 04/15/2008 10:16 PM
> I have a grammar that does this, using the method described on the ANTLR 
> Wiki at
> 
>     http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
> 
> -- Pete
> 
> 
> On Apr 15, 2008, at 9:46 PM, Peter Nann wrote:
> 
>>
>> Well, I was about to tackle that problem any day now, so look forward to
>> your solution!
>> (Or, surely there is a standard solution to this...)
>>
>> Are you writing it in Java?
>> Any chance you could flick your code to me once it's working?
>> ;-) I'd owe you one...
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of John Woods
>> Sent: Wednesday, 16 April 2008 1:20 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Howto #include other files while parsing?
>>
>> I'm creating a parser for a file format which has a #include statement
>> much like the C preprocessor. The solution I'm thinking of would involve
>> creating an InputStream subclass that reads from one file, then when the
>> parser parses a #include statement, the parser tells the InputStream to
>> switch to reading the #included file, and when that file is exhausted,
>> the InputStream pops back to the previous file, continuing reading where
>> it left off -- immediately after the #include statement.
>>
>> Is there any guarantee that the lexer won't read past the #include
>> statement when it is parsed? Because if it did read ahead, then the
>> #included file would essentially be "inserted" at the wrong position in
>> the InputStream.
>>
>> Is there a better way to approach this problem?
>>
>> Thanks.
> 
> 


From elekis at gmail.com  Wed Apr 16 09:57:20 2008
From: elekis at gmail.com (jabon)
Date: Wed, 16 Apr 2008 18:57:20 +0200
Subject: [antlr-interest] *  is a non-unique reference
Message-ID: <48062FF0.7030106@gmail.com>

hi all,

I begun to use a parser but I have problem to get the text of a token

there my rule 

document  : T_Implementation T_Module 
T_Ident{callback.ImplementationModule($T_Ident.text);} T_SemiColon 
importclause*  T_End T_Ident T_SemiColon;

and I would like to get the T_ident text but I have the follow error

error(127): Pyaflplug.g:19:46: T_Ident is a non-unique reference

and I don't understand (noob m I , sorry)

thanks


a+++


From jimi at temporal-wave.com  Wed Apr 16 09:59:23 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Apr 2008 09:59:23 -0700
Subject: [antlr-interest] *  is a non-unique reference
In-Reply-To: <48062FF0.7030106@gmail.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAJl04GZQRM0q
	XisxCHrucCAEAAAAA@temporal-wave.com>

Try:

t1=T_Ident{callback.ImplementationModule($t1.text);} ...

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of jabon
> Sent: Wednesday, April 16, 2008 9:57 AM
> To: ANTLRDev Interest
> Subject: [antlr-interest] * is a non-unique reference
> 
> hi all,
> 
> I begun to use a parser but I have problem to get the text of a token
> 
> there my rule
> 
> document  : T_Implementation T_Module
> T_Ident{callback.ImplementationModule($T_Ident.text);} T_SemiColon
> importclause*  T_End T_Ident T_SemiColon;
> 
> and I would like to get the T_ident text but I have the follow error
> 
> error(127): Pyaflplug.g:19:46: T_Ident is a non-unique reference
> 
> and I don't understand (noob m I , sorry)
> 
> thanks
> 
> 
> a+++
> 
> 
> No virus found in this incoming message.
> Checked by AVG.
> Version: 7.5.524 / Virus Database: 269.23.0/1379 - Release Date:
> 4/15/2008 6:10 PM
> 

No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.0/1379 - Release Date: 4/15/2008 6:10 PM
 




From chuck_1234567 at yahoo.com  Wed Apr 16 11:49:20 2008
From: chuck_1234567 at yahoo.com (Chuck)
Date: Wed, 16 Apr 2008 11:49:20 -0700 (PDT)
Subject: [antlr-interest] Use of $text within parser rule changes return
	type of the rule?
Message-ID: <727757.80425.qm@web54401.mail.yahoo.com>

The following parser rule 

  rule1 returns [String rStr] : ID ;

generates a rule with the following return type:

 public final String rule1() throws
RecognitionException {

But if I add an action that uses the predefined rule
attribute "$text" such as the following line:

  rule1 returns [String rStr] : ID
{System.out.println($text);} ;

it changes the return type of the rule to the
following:

 public final TgramParser.rule1_return rule1() throws
RecognitionException {
 
Is this behavior a bug or are there some restrictions
on using using prefined rule attributes 
in conjunction with return types?

thanks

Chuck



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ

From elekis at gmail.com  Wed Apr 16 12:47:38 2008
From: elekis at gmail.com (elekis)
Date: Wed, 16 Apr 2008 21:47:38 +0200
Subject: [antlr-interest] syntax error unexpected ast node
Message-ID: <78316ea80804161247u72547287v5731a9fada0ed49c@mail.gmail.com>

hi all,

I have the following error in the Lexer

syntax error unexpected ast

I try to parse, thing like that
% everything exept return
% sdjfldsjfdkf
%sfkldfjkslkfjlf
%fskldfjjslkfdj

My first Idea were

T_Return				:('\r'|'\n')+{token = Token.SKIP_TOKEN;};
T_InlineMod				:'%'.* T_Return;

but he doesnt like that cause the . take \n too.
so I ve tried

T_Return				:('\r'|'\n')+{token = Token.SKIP_TOKEN;};
T_InlineMod				:'%'(~T_Return)* T_Return;
but I have the followed error

syntax error unexpected ast +  of cause it's for the  +{...}
but I have no idea how to correct that.

thanks

a+++


I

-- 
http://deathboater.blogspot.com/

From antlr at mirality.co.nz  Wed Apr 16 13:46:47 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 17 Apr 2008 08:46:47 +1200
Subject: [antlr-interest] C# Error Recovery
Message-ID: <20080416204657.D30B311EC9E@www.antlr.org>

I have a rule like this in my grammar (C# target, latest interim 
build):

tag[String name]
	:	WS? t=TAG { $t.text.Equals("<" + $name + ">") }? NL
	;
catch [FailedPredicateException ex] { throw new 
RecognitionException("Expected <" + $name + "> but found " + 
$t.text, ex, Input); }

The intent should be clear -- I want to validate that I'm 
receiving the tag I'm expecting to get at that point in the input, 
but I want to give it a custom error message.

I want all the normal ANTLR backtracking and recovery mechanisms 
to take effect, which basically seems to mean that I need to be 
throwing a RecognitionException or derived class thereof.

The problem lies in BaseRecognizer.GetErrorMessage, which 
completely ignores the Message of the incoming exception and uses 
a series of type-specific tests to construct a new message; 
leaving it blank if a base RecognitionException is thrown.  I can 
work around this by deriving a new exception from 
RecognitionException and overriding GetErrorMessage to deal with 
that appropriately, but I shouldn't need to.

Proposed fixes:

1. At minimum, the first line of GetErrorMessage should be changed 
to assign "e.Message" as the default message, not null.

2. Preferably, *all* the type specific code in GetErrorMessage 
should be removed, and the exception Message should be set to the 
equivalent when the exception is thrown in the first place (in 
their constructors).  It just seems silly to try to "fix it up" 
after the fact.


From jaluber at gmx.de  Wed Apr 16 13:55:10 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 16 Apr 2008 22:55:10 +0200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <20080416204657.D30B311EC9E@www.antlr.org>
References: <20080416204657.D30B311EC9E@www.antlr.org>
Message-ID: <480667AE.5050803@gmx.de>

Gavin Lambert schrieb:
> I have a rule like this in my grammar (C# target, latest interim build):
> 
> tag[String name]
>     :    WS? t=TAG { $t.text.Equals("<" + $name + ">") }? NL
>     ;
> catch [FailedPredicateException ex] { throw new 
> RecognitionException("Expected <" + $name + "> but found " + $t.text, 
> ex, Input); }
> 
> The intent should be clear -- I want to validate that I'm receiving the 
> tag I'm expecting to get at that point in the input, but I want to give 
> it a custom error message.
> 
> I want all the normal ANTLR backtracking and recovery mechanisms to take 
> effect, which basically seems to mean that I need to be throwing a 
> RecognitionException or derived class thereof.
> 
> The problem lies in BaseRecognizer.GetErrorMessage, which completely 
> ignores the Message of the incoming exception and uses a series of 
> type-specific tests to construct a new message; leaving it blank if a 
> base RecognitionException is thrown.  I can work around this by deriving 
> a new exception from RecognitionException and overriding GetErrorMessage 
> to deal with that appropriately, but I shouldn't need to.
> 
> Proposed fixes:
> 
> 1. At minimum, the first line of GetErrorMessage should be changed to 
> assign "e.Message" as the default message, not null.
> 
> 2. Preferably, *all* the type specific code in GetErrorMessage should be 
> removed, and the exception Message should be set to the equivalent when 
> the exception is thrown in the first place (in their constructors).  It 
> just seems silly to try to "fix it up" after the fact.
> 
I'm not opposed against a fix, but the last paragraph isn't quite clear 
to me. Equivalent of what? Furthermore, Ter, why is that code, as it is? 
After all, it is like this in the Java target, too.

Johannes


From antlr at mirality.co.nz  Wed Apr 16 14:20:48 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 17 Apr 2008 09:20:48 +1200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <480667AE.5050803@gmx.de>
References: <20080416204657.D30B311EC9E@www.antlr.org>
	<480667AE.5050803@gmx.de>
Message-ID: <20080416212110.1C17611EC60@www.antlr.org>

At 08:55 17/04/2008, Johannes Luber wrote:
 >I'm not opposed against a fix, but the last paragraph isn't
 >quite clear to me. Equivalent of what?

Equivalent of what the current version is doing in 
GetErrorMessage.

For example, currently the FailedPredicateException constructors 
don't set the Message at all (though the base class will then 
implicitly set it to "An exception of type 
'FailedPredicateException' was thrown.").

In BaseRecognizer.GetErrorMessage, the returned error message for 
a FailedPredicateException is "rule "+ruleName+" failed predicate: 
{"+predicateText+"}?".

I can see absolutely no reason why that isn't simply done in the 
exception's constructor, simply returning the Message in 
GetErrorMessage.  (The function itself should probably still 
exist, in case people want to customise the message for eg. 
translation.)

 >Furthermore, Ter, why is that code, as it is?  After all, it
 >is like this in the Java target, too.

For some of the other exceptions it does seem to do a bit more 
work, such as looking things up in tokenNames and calling 
GetTokenErrorDisplay or GetCharErrorDisplay (the first of which 
requires access to the recogniser; the second two don't really 
unless the method is overridden).  But that information could 
simply be passed to the exception constructors as well, since 
they're always called within the scope of a recogniser.


(And while on the subject: why does TreeParser.GetErrorMessage 
open with "if (this is TreeParser)"?  This is an impossible 
condition to fail, given the location of the method.  In fact, the 
compiler realises this and actually converts it to "if (this != 
null)", which is still equally impossible to fail given that it's 
a virtual method.)


From lgcraymer at yahoo.com  Wed Apr 16 15:12:29 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 16 Apr 2008 15:12:29 -0700 (PDT)
Subject: [antlr-interest] C# Error Recovery
Message-ID: <582491.19346.qm@web55907.mail.re3.yahoo.com>

Most of the cases call "getTokenErrorDisplay() which cannot be pushed into the exceptions, and none of the error messages are localized (minimalist assumption:  StringTemplate is not available for the target language).  I suggest adding an "msg" field to RecognitionException so that Gavin's first suggestion can be implemented.  I would argue against implementing Gavin's second suggestion at this time:  the token error display adds clarity for the user (yeah, you can look at line 13, figure out that "message" is in column 2, and then try to understand what just happened; but it is easier to look for "message" on line 13), and the current approach does allow the user to override getErrorMessage() to support localization via StringTemplate.

--Loring


----- Original Message ----
From: Johannes Luber <jaluber at gmx.de>
To: Gavin Lambert <antlr at mirality.co.nz>
Cc: antlr-interest at antlr.org
Sent: Wednesday, April 16, 2008 1:55:10 PM
Subject: Re: [antlr-interest] C# Error Recovery

Gavin Lambert schrieb:
> I have a rule like this in my grammar (C# target, latest interim build):
> 
> tag[String name]
>     :    WS? t=TAG { $t.text.Equals("<" + $name + ">") }? NL
>     ;
> catch [FailedPredicateException ex] { throw new 
> RecognitionException("Expected <" + $name + "> but found " + $t.text, 
> ex, Input); }
> 
> The intent should be clear -- I want to validate that I'm receiving the 
> tag I'm expecting to get at that point in the input, but I want to give 
> it a custom error message.
> 
> I want all the normal ANTLR backtracking and recovery mechanisms to take 
> effect, which basically seems to mean that I need to be throwing a 
> RecognitionException or derived class thereof.
> 
> The problem lies in BaseRecognizer.GetErrorMessage, which completely 
> ignores the Message of the incoming exception and uses a series of 
> type-specific tests to construct a new message; leaving it blank if a 
> base RecognitionException is thrown.  I can work around this by deriving 
> a new exception from RecognitionException and overriding GetErrorMessage 
> to deal with that appropriately, but I shouldn't need to.
> 
> Proposed fixes:
> 
> 1. At minimum, the first line of GetErrorMessage should be changed to 
> assign "e.Message" as the default message, not null.
> 
> 2. Preferably, *all* the type specific code in GetErrorMessage should be 
> removed, and the exception Message should be set to the equivalent when 
> the exception is thrown in the first place (in their constructors).  It 
> just seems silly to try to "fix it up" after the fact.
> 
I'm not opposed against a fix, but the last paragraph isn't quite clear 
to me. Equivalent of what? Furthermore, Ter, why is that code, as it is? 
After all, it is like this in the Java target, too.

Johannes







      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080416/37eed68f/attachment.html 

From parrt at cs.usfca.edu  Wed Apr 16 15:32:44 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Apr 2008 15:32:44 -0700
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <480667AE.5050803@gmx.de>
References: <20080416204657.D30B311EC9E@www.antlr.org>
	<480667AE.5050803@gmx.de>
Message-ID: <80EA9011-DC82-4C1D-842C-0CC359E71725@cs.usfca.edu>


On Apr 16, 2008, at 1:55 PM, Johannes Luber wrote:

> Gavin Lambert schrieb:
>> I have a rule like this in my grammar (C# target, latest interim  
>> build):
>> tag[String name]
>>    :    WS? t=TAG { $t.text.Equals("<" + $name + ">") }? NL
>>    ;
>> catch [FailedPredicateException ex] { throw new  
>> RecognitionException("Expected <" + $name + "> but found " +  
>> $t.text, ex, Input); }
>> The intent should be clear -- I want to validate that I'm receiving  
>> the tag I'm expecting to get at that point in the input, but I want  
>> to give it a custom error message.
>> I want all the normal ANTLR backtracking and recovery mechanisms to  
>> take effect, which basically seems to mean that I need to be  
>> throwing a RecognitionException or derived class thereof.
>> The problem lies in BaseRecognizer.GetErrorMessage, which  
>> completely ignores the Message of the incoming exception and uses a  
>> series of type-specific tests to construct a new message; leaving  
>> it blank if a base RecognitionException is thrown.  I can work  
>> around this by deriving a new exception from RecognitionException  
>> and overriding GetErrorMessage to deal with that appropriately, but  
>> I shouldn't need to.
>> Proposed fixes:
>> 1. At minimum, the first line of GetErrorMessage should be changed  
>> to assign "e.Message" as the default message, not null.
>> 2. Preferably, *all* the type specific code in GetErrorMessage  
>> should be removed, and the exception Message should be set to the  
>> equivalent when the exception is thrown in the first place (in  
>> their constructors).  It just seems silly to try to "fix it up"  
>> after the fact.
> I'm not opposed against a fix, but the last paragraph isn't quite  
> clear to me. Equivalent of what? Furthermore, Ter, why is that code,  
> as it is? After all, it is like this in the Java target, too.

Here were my thoughts at the time:

	/** What error message should be generated for the various
	 *  exception types?
	 *
	 *  Not very object-oriented code, but I like having all error message
	 *  generation within one method rather than spread among all of the
	 *  exception classes. This also makes it much easier for the exception
	 *  handling because the exception classes do not have to have  
pointers back
	 *  to this object to access utility routines and so on. Also, changing
	 *  the message for an exception type would be difficult because you
	 *  would have to subclassing exception, but then somehow get ANTLR
	 *  to make those kinds of exception objects instead of the default.
	 *  This looks weird, but trust me--it makes the most sense in terms
	 *  of flexibility.
	 *
	 *  For grammar debugging, you will want to override this to add
	 *  more information such as the stack frame with
	 *  getRuleInvocationStack(e, this.getClass().getName()) and,
	 *  for no viable alts, the decision description and state etc...
	 *
	 *  Override this to change the message generated for one or more
	 *  exception types.
	 */

Still seems valid I guess.

Ter

From peter.nann at vecommerce.com.au  Wed Apr 16 17:54:26 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Thu, 17 Apr 2008 10:54:26 +1000
Subject: [antlr-interest] Problem #2: template lists expanding to weird
	stuff?
References: <1080AEABD1979E42A15840F08084B67BFE3ABA@vcmsydexh.vecommerce.com>
	<145BB1D3-7BC2-48B4-891F-B81308EDA239@cs.usfca.edu>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3ABD@vcmsydexh.vecommerce.com>

Thanks Terrence, that did the trick.
 
But I don't recall seeing that {<it.text>} construct in the examples I
copied from...
Can't remember the root example right now...
 
Anyway, figured out what that magic meant from StringTemplate
cheat-sheet...
 
Cheers.
 
________________________________

From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Thursday, 17 April 2008 1:42 AM
To: Peter Nann
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Problem #2: template lists expanding to
weird stuff?


toString is called on all objects.  that is Token.toString().  use the
.text property of each 

<items:{<it.text>}; separator=", ">

Ter

On Apr 16, 2008, at 7:47 AM, Peter Nann wrote:



	Now, my grammar has a more serious template using Lists and the
'+=' operator. 

	It is getting rather strange expanded output which looks like: 

	        <one-of> [@2,2:2='x',<4>,1:2] </one-of> 


	What the heck is going on there? 
	It looks like the List object has expanded itself using some
strange toString() method. 

	Any clues on this one? 


	Updated grammar: 

	---------------------- 
	grammar Test; 
	options {output=template; rewrite=true;} 

	test 
	        : '[' ( items+=WORD )* ']' 
	                -> template(items={$items}) 
	                        << \<one-of\> <items; separator=", ">
\</one-of\> >> ; 
	        
	WORD : ('a'..'z'|'-'|'_'|'\'') ('a'..'z'|'-'|'_'|'\'')* ; 
	WS : ( ' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ; 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/ac0f320d/attachment-0001.html 

From mikearace at hotmail.com  Wed Apr 16 23:39:29 2008
From: mikearace at hotmail.com (Mike Arace)
Date: Thu, 17 Apr 2008 02:39:29 -0400
Subject: [antlr-interest] Problem parsing double quotes
Message-ID: <BAY118-W3587699C39EDCCDA06B9B1B1E50@phx.gbl>


Hi Antlr List,

I am working on a grammar that seems to have run into a snag.  It seems as if the Antlr lexer or parser is eating my doulble quotes and adjacent characters.

I initialize the parser in the following manner:

WontonParser parser = new WontonParser(new CommonTokenStream(new WontonLexer(new CaseInsensitiveStringStream(command))));

where CaseInsensitiveStringStream is merely the Java version shown in the FAQ. (http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782)

When "command" is the following:

-- string below --

replace trigger on table addresses after insert as
rs = database.query("select id from addresses");
while (rs.next()) {
    database.execute("insert into times (address_id) values ('" + rs.getData(0) +"') ");   
}
endtrigger

-- string above --

the lexer seems to receive it correctly.  As the CommonTokenStream is initialized, however, it turns this into:

-- string below --

replace trigger on table addresses after insert as
rs = database.query(elect id from addresseswhile (rs.next()) database.execute(nsert into times (address_id) values ('" + rs.getData(0) +"')   
endtrigger 

-- string above --

Does anyone have any idea as to what can be happening?

Best Regards,
Mike

_________________________________________________________________
More immediate than e-mail? Get instant access with Windows Live Messenger.
http://www.windowslive.com/messenger/overview.html?ocid=TXT_TAGLM_WL_Refresh_instantaccess_042008
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/5911077c/attachment.html 

From antlr at mirality.co.nz  Thu Apr 17 02:07:29 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 17 Apr 2008 21:07:29 +1200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <582491.19346.qm@web55907.mail.re3.yahoo.com>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
Message-ID: <20080417091352.220DE11E9DD@www.antlr.org>

At 10:12 17/04/2008, Loring Craymer wrote:
>Most of the cases call "getTokenErrorDisplay() which cannot be 
>pushed into the exceptions, and none of the error messages are 
>localized (minimalist assumption:  StringTemplate is not 
>available for the target language).  I suggest adding an "msg" 
>field to RecognitionException so that Gavin's first suggestion 
>can be implemented.

There's definitely no need to go adding extra fields -- they're 
already there.  That was basically my point -- all C# exceptions 
already have a settable message, and RecognitionException is no 
different (and it even already includes constructors to set that 
message).  The only missing piece of the puzzle is that 
GetErrorMessage completely ignores the message set on the 
exception.

I would have thought that Java exceptions were the 
same?  (Googles.)  Yes, they are.

So for C#, changing the first line of 
BaseRecogniser.GetErrorMessage from:
   string msg = null;
to:
   string msg = e.Message;
is all that's required.  Similarly for Java's 
BaseRecogniser.getErrorMessage:
   String msg = e.getMessage();
(or even getLocalizedMessage(), if you prefer.)

It would most likely be similarly minor for any other target 
language that supports exceptions, and only slightly more complex 
for others.  (C++ actually falls halfway between the two.  The 
standard doesn't actually mandate that std::exception have a 
constructor which can take a string and store it, so some 
implementations do and some don't.  But there isn't a C++ target 
at the moment anyway, so the point is moot.)

But at the end of the day, having some way to raise user-specified 
errors which are treated similarly to "standard" errors (as far as 
error recovery and reporting go) seems like an essential thing to 
have.

What would be even cooler would be a way to link a 
target-code-block-that-returns-a-string to a validating predicate, 
basically cutting out the middle-man, since it seems to me like 
validating predicates are the most likely source of user-specified 
errors.  But that's a separate issue; being able to catch the 
FailedPredicateException and rethrow it as a custom one is 
sufficient.

>I would argue against implementing Gavin's second suggestion at 
>this time:  the token error display adds clarity for the user 
>(yeah, you can look at line 13, figure out that "message" is in 
>column 2, and then try to understand what just happened; but it 
>is easier to look for "message" on line 13), and the current 
>approach does allow the user to override getErrorMessage() to 
>support localization via StringTemplate.

The second suggestion was simply a logical follow-through from the 
first -- if you're using the text in the exceptions, and that text 
can usefully be constructed by the exception itself (as with 
FailedPredicateException), then why not do it?  Sure, still have 
the central method which can be used for localisation or whatever 
other overriding you want (Ter's right, it's a good idea), but why 
not make the exception classes self sufficient?

I'm not really sure what you're saying about the "token error 
display" though.  I never suggested removing that; I was 
suggesting that enough information be given to the exception 
constructors so that they can generate it themselves.

But, whatever.  The second idea isn't really all that important, 
it's just a stylistic thing.  The first, however, I think is 
vital.


From antlr at mirality.co.nz  Thu Apr 17 02:10:26 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 17 Apr 2008 21:10:26 +1200
Subject: [antlr-interest] Problem parsing double quotes
In-Reply-To: <BAY118-W3587699C39EDCCDA06B9B1B1E50@phx.gbl>
References: <BAY118-W3587699C39EDCCDA06B9B1B1E50@phx.gbl>
Message-ID: <20080417091723.055A911E9DD@www.antlr.org>

At 18:39 17/04/2008, Mike Arace wrote:
>I am working on a grammar that seems to have run into a snag.  It 
>seems as if the Antlr lexer or parser is eating my doulble quotes 
>and adjacent characters.
[...]
>Does anyone have any idea as to what can be happening?

Do you have any lexer rules that refer to quote marks?

Do you see any error output in the console when you run it?

Can you post a complete minimal-reproduction grammar?


From lmeyerov at gmail.com  Thu Apr 17 03:30:06 2008
From: lmeyerov at gmail.com (Leo Meyerovich)
Date: Thu, 17 Apr 2008 03:30:06 -0700
Subject: [antlr-interest] updating text dump when writing tree grammar
	ast transformers
In-Reply-To: <4805D07A.1060409@gmail.com>
References: <4805D07A.1060409@gmail.com>
Message-ID: <480726AE.1090209@gmail.com>

Maybe that was too verbose. How should I write the following? Special 
emphasis on having the $text attribute satisfying the equality for 
potential downstream tree grammars.

tree grammar ES3Simplifier ;

options
{
    ASTLabelType = CommonTree ;
    tokenVocab = ES3;
    output=AST;
}
...
expr
   : ^( ASSIGN a=expr b=expr )  {$text = $b.text + " = " + $a.text;} ->
        ^( ASSIGN {$b.tree} {$a.tree})

I'm starting to think ANTLR 3.1 cannot handle this. Is there at least a 
recommended way to do these AST transforms in Java such that printing is 
'for free'? Also, for trivial rewrites (like the above swap) into the 
same source language, StringTemplates will often suffice, but I need 
them to generate ASTs - is there a way to do this without needed to 
relex and parse the full input file after?

- Leo

Leo Meyerovich wrote:
> Hiya,
>
> I'm using Patrick Hulsmeijer's JavaScript grammar & tree walker. I 
> running a 3 stage pipeline: a grammar to parse, a tree grammar walker 
> to transform (output=ast), and then a tree grammar walker to pretty 
> print. While I verified that the AST structure is being transformed, I 
> can't reuse the existing top $text attribute to easily print - it 
> dumps the untransformed AST! More specifically:
>
> //1. parser: unmodified es3
>
> //2. transformer: modified es3walker with the following change to flip 
> assignments:
> expr:
>   ...
>    | ^( ASSIGN a=expr b=expr )  -> ^(ASSIGN $b $a)        ...
>
> //3. printer: modified to print at two locations, top, and @ point of 
> transformation
>   program : (statement {System.out.println($statement.text);})* ;
> ...
> expr:
>   ...
>    | ^( ASSIGN a=expr b=expr )  {System.out.println("//=, " + $a.text 
> + ", " + $b.text);}
>  ...
>
> While the print out associated with the assignment rule prints out as 
> expected (reversed assignment), the whole AST dump in the program rule 
> shows the unmodified source. I tried playing a bit with token settings 
> as described near the end of chapter 7 (albeit not really for the 
> then-nonexistent tree rewrites) such as writing "-> ^(ASSIGN $b[$b, 
> $b.text] ...)", but did not bump into anything that compiled.
>
> Will I need to write an explicit pretty printer action for every rule, 
> or is there a way to do tree transforms that will propagate associated 
> text?
>
> As a side note, has anybody had success with rewrite=true for tree 
> grammar transformers? My AST gets butchered when I add a transform to 
> the assignment arm of the expression rule (perhaps I just need to add 
> explicit identity transforms to the rest of the arms of the expression 
> rule?). I suspect inplace transforms would be best for my task so it'd 
> be nice :)
>
> This is all on build 2008-04-09.18.
>
> Thanks!
>
> - Leo
>
> (ps: I'll post my transforms and a short explanation when/if I get 
> this working, which hopefully will aid the coming release of this very 
> useful feature)


From felix_do at web.de  Thu Apr 17 04:33:37 2008
From: felix_do at web.de (Felix Dorner)
Date: Thu, 17 Apr 2008 13:33:37 +0200
Subject: [antlr-interest] return an array from a rule
Message-ID: <48073591.3060905@web.de>

Hey,

Antler gets confused when I write something like

aRule returns [Integer[] i]
:...

Is it possible to return an array?

Felix

From peter.nann at vecommerce.com.au  Thu Apr 17 05:18:39 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Thu, 17 Apr 2008 22:18:39 +1000
Subject: [antlr-interest] rewrite on List from rule - fails to expand List
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AD0@vcmsydexh.vecommerce.com>


OK, I am getting a bit confused about what I can and can't do with
rewrite rules...

When I build a List below (in 'orlist') using the token WORD, as show,
it works fine.

However, if I change WORD to 'w' in orlist, then I get no expanded list
in the output.
(Notice that 'w' is synonymous for WORD in my crafted example)

Is there something special I need to do if I am building a List from a
rule instead of a token?

Here is my grammar:
(Sorry for the confusing names, but I am writing a grammar to translate
another grammar format...)

---------------------- CUT HERE
grammar VeGSL2XML;
options {output=template; rewrite=true;}
gslfile : gramdef* ;
gramdef
	: GRAMNAME orlist
		-> template(gn={$GRAMNAME.text},gf={$orlist.text})
			<<\<rule id="<gn>"\> <gf> \</rule\> >>
	;
w : WORD ;
orlist
	: '[' ( list+=WORD )* ']'
		-> template(list={$list})
			<<\<one-of\>\<item\><list:{<it.text>};
separator="</item><item>">\</item\>\</one-of\> >>
	;
WORD : ('a'..'z'|'-'|'_'|'\'') ('a'..'z'|'-'|'_'|'\'')* ;
GRAMNAME : ('a'..'z'|'-'|'_'|'\'')* ('A'..'Z')
('a'..'z'|'A'..'Z'|'-'|'_'|'\'')* ;
CMT : '/*' (options {greedy=false;} : .)* '*/' {$channel = HIDDEN;} ;
WS : ( ' ' | '\t' | '\r' | '\n' )+ {$channel = HIDDEN;} ;
---------------------- CUT HERE
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/767dfc58/attachment.html 

From peter.nann at vecommerce.com.au  Thu Apr 17 05:30:18 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Thu, 17 Apr 2008 22:30:18 +1000
Subject: [antlr-interest] Rewrite rules - preserve internal whitespace?
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AD1@vcmsydexh.vecommerce.com>


Please correct me if I am wrong:

Rewrite rules don't maintain the whitespace (and probably not comments)
internal to the construct being re-written?

So, if I have a simple rewrite rule (with output=rewrite) to turn the
assign operator from "=" to ":=" and it looks like this:

expr : ID '=' INT -> template(id={$ID.text},n={$n.text}) "<id> := <n>" ;

Now, if the input is:
"x=1"
The output will have new spaces, per the template, like:
"x := 1"

Or perhaps more graphically:
"x
     =
           1"
Will still come out:
"x := 1"


Is this right?

Soooo, having rewrite rules for complex (lets say nested), multi-line
structures is going to output probably one gigantic line???


Hmmm, if this is right, I don't think output=rewrite is going to work
for me...

From antlr at mirality.co.nz  Thu Apr 17 05:39:08 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 00:39:08 +1200
Subject: [antlr-interest] Rewrite rules - preserve internal whitespace?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AD1@vcmsydexh.vecommerc e.com>
References: <1080AEABD1979E42A15840F08084B67BFE3AD1@vcmsydexh.vecommerce.com>
Message-ID: <20080417123928.8C73011E9DC@www.antlr.org>

At 00:30 18/04/2008, Peter Nann wrote:
 >Rewrite rules don't maintain the whitespace (and probably not
 >comments) internal to the construct being re-written?

They will if you include them.  Otherwise they won't.

 >Will still come out:
 >"x := 1"
 >
 >Is this right?

I believe so, yes.  You're throwing away the whitespace tokens in 
the input and including only those that you "care about".

 >Soooo, having rewrite rules for complex (lets say nested),
 >multi-line structures is going to output probably one gigantic
 >line???

Not necessarily.  It will output whatever you tell it to 
output.  If you put newlines in your template, you'll get newlines 
in your output.  If you include a token that contains a newline, 
you'll get newlines in your output.

If you want to maintain the newlines from the input, then you'll 
need to avoid filtering them out when doing the 
lexing/parsing.  So no hidden channels.  (Or at least, if you do 
still want to put them on the hidden channel you'll have to do 
something more complicated to pull them back into your template 
later on.)


From thkarcher at gmx.de  Thu Apr 17 07:36:12 2008
From: thkarcher at gmx.de (Thomas Karcher)
Date: Thu, 17 Apr 2008 16:36:12 +0200
Subject: [antlr-interest] AST rewrite: Deleting tokens
Message-ID: <1208442972.11047.13.camel@localhost>

Hi at all,

I have the feeling I'm just missing a little piece to get what I want: I
have a tree grammar like this:

options {output=template; rewrite=true;}
[...]

block	:	^(STARTBLOCK IDENTIFIER? statements)

This represents a part of the AST where in STARTBLOCK contains already
the whole block; the parser killed the ENDBLOCK since the representation
in the AST is enough.

When the tree parser is done, I write the token stream with
tokens.ToString() to a file.

I'd like print in the generated file now only the "statements" itself,
not the STARTBLOCK or IDENTIFIER text, so I need to delete these tokens
from the RewriteTokenStream I guess - how do I do that? I experimented
with rewriting by templates:

block: ... { $st = $statements.st; }
block: ... -> printstatements(stats={$statements.text})

Either the block is gone completely (case 1) or only lines inside
statements that are rewritten by other templates appear (case 2).

Thanks for any ideas.

Thomas


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/92b9b231/attachment.bin 

From cieslewski at hcs.ufl.edu  Thu Apr 17 07:48:58 2008
From: cieslewski at hcs.ufl.edu (Grzegorz Cieslewski)
Date: Thu, 17 Apr 2008 10:48:58 -0400
Subject: [antlr-interest] return an array from a rule
In-Reply-To: <48073591.3060905@web.de>
References: <48073591.3060905@web.de>
Message-ID: <7aa837f80804170748k721278a5n3b0a722bc4b54fbf@mail.gmail.com>

try adding an escape character like:
aRule returns [Integer[\] i]

Greg


On Thu, Apr 17, 2008 at 7:33 AM, Felix Dorner <felix_do at web.de> wrote:
> Hey,
>
>  Antler gets confused when I write something like
>
>  aRule returns [Integer[] i]
>  :...
>
>  Is it possible to return an array?
>
>  Felix
>



-- 
=====================================================
Grzegorz Cieslewski
Research Assistant
High-performance Computing & Simulation (HCS) Research Laboratory
University of Florida, Dept. of Electrical and Computer Engineering
330 Benton Hall, Gainesville, FL, 32611-6200
Phone: (352) 392-9041
Email: cieslewski at hcs.ufl.edu
Web: www.hcs.ufl.edu
=====================================================

From hharalambiev at gmail.com  Thu Apr 17 09:02:37 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Thu, 17 Apr 2008 19:02:37 +0300
Subject: [antlr-interest] Problems with semantic predicates
Message-ID: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>

Hello,

First of all, thanks for the magnificent tool. I
consider myself new to advanced stuff, as I have been working with it
for less than a month.

So, the problem that I currently cannot resolve is described by the
following test grammar:

----------
grammar test;

options {
output=AST;
ASTLabelType=CommonTree;
backtrack=true;
memoize=true;
}

tokens
{
NODE;
}

r : Token1^ Token2! r2[true]
| Token1^ r2[false]
;
r2[boolean flag]
: {flag}? Token1 -> ^(NODE Token1)
| Token1
;

Token1 : 'TOKEN1';
Token2 : 'TOKEN2';
----------

The general idea is that depending on how one rule matches, I would like a
subrule to generate the AST differently.

I decided to do this with some boolean flag, but
the problem is that the generated Java parser class cannot compile.
In the example above - the method *synpred2_fragment()* contains a statement
*if ( !(flag) )* but the variable flag cannot be resolved.

So, if you could please guide me how to resolve this problem. Maybe I have
missed something fundamental in my understandings for developing the
grammar.

Thank you in advance!

Best Regards,
Hari
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/a71fa77f/attachment.html 

From jaluber at gmx.de  Thu Apr 17 09:55:08 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 17 Apr 2008 18:55:08 +0200
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
Message-ID: <480780EC.6030908@gmx.de>

Haralambi Haralambiev schrieb:
> Hello,
> 
> First of all, thanks for the magnificent tool. I 
> consider myself new to advanced stuff, as I have been working with it for less than a month.
> 
> So, the problem that I currently cannot resolve is described by the 
> following test grammar:
> 
> ----------
> grammar test;
> 
> options {
> output=AST;
> ASTLabelType=CommonTree;
> backtrack=true;
> memoize=true;
> }
> 
> tokens
> {
> NODE;
> }
> 
> r : Token1^ Token2! r2[true]
> | Token1^ r2[false]
> ;
> r2[boolean flag]
> : {flag}? Token1 -> ^(NODE Token1)
> | Token1
> ;
> 
> Token1 : 'TOKEN1';
> Token2 : 'TOKEN2';
> ----------
> 
> The general idea is that depending on how one rule matches, I would like 
> a subrule to generate the AST differently.
> 
> I decided to do this with some boolean flag, but 
> the problem is that the generated Java parser class cannot compile.
> In the example above - the method *synpred2_fragment()* contains a 
> statement */if ( !(flag) )/* but the variable flag cannot be resolved.
> 
> So, if you could please guide me how to resolve this problem. Maybe I 
> have missed something fundamental in my understandings for developing 
> the grammar.

The problem is that flag is in a hoisted method which doesn't know about 
flag. You have to use either a member variable or a scope to workaround 
this problem.

Johannes

From jaluber at gmx.de  Thu Apr 17 10:02:17 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 17 Apr 2008 19:02:17 +0200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <80EA9011-DC82-4C1D-842C-0CC359E71725@cs.usfca.edu>
References: <20080416204657.D30B311EC9E@www.antlr.org>
	<480667AE.5050803@gmx.de>
	<80EA9011-DC82-4C1D-842C-0CC359E71725@cs.usfca.edu>
Message-ID: <48078299.90301@gmx.de>

Terence Parr schrieb:
> 
> On Apr 16, 2008, at 1:55 PM, Johannes Luber wrote:
> 
>> Gavin Lambert schrieb:
>>> I have a rule like this in my grammar (C# target, latest interim build):
>>> tag[String name]
>>>    :    WS? t=TAG { $t.text.Equals("<" + $name + ">") }? NL
>>>    ;
>>> catch [FailedPredicateException ex] { throw new 
>>> RecognitionException("Expected <" + $name + "> but found " + $t.text, 
>>> ex, Input); }
>>> The intent should be clear -- I want to validate that I'm receiving 
>>> the tag I'm expecting to get at that point in the input, but I want 
>>> to give it a custom error message.
>>> I want all the normal ANTLR backtracking and recovery mechanisms to 
>>> take effect, which basically seems to mean that I need to be throwing 
>>> a RecognitionException or derived class thereof.
>>> The problem lies in BaseRecognizer.GetErrorMessage, which completely 
>>> ignores the Message of the incoming exception and uses a series of 
>>> type-specific tests to construct a new message; leaving it blank if a 
>>> base RecognitionException is thrown.  I can work around this by 
>>> deriving a new exception from RecognitionException and overriding 
>>> GetErrorMessage to deal with that appropriately, but I shouldn't need 
>>> to.
>>> Proposed fixes:
>>> 1. At minimum, the first line of GetErrorMessage should be changed to 
>>> assign "e.Message" as the default message, not null.
>>> 2. Preferably, *all* the type specific code in GetErrorMessage should 
>>> be removed, and the exception Message should be set to the equivalent 
>>> when the exception is thrown in the first place (in their 
>>> constructors).  It just seems silly to try to "fix it up" after the 
>>> fact.
>> I'm not opposed against a fix, but the last paragraph isn't quite 
>> clear to me. Equivalent of what? Furthermore, Ter, why is that code, 
>> as it is? After all, it is like this in the Java target, too.
> 
> Here were my thoughts at the time:
> 
>     /** What error message should be generated for the various
>      *  exception types?
>      *
>      *  Not very object-oriented code, but I like having all error message
>      *  generation within one method rather than spread among all of the
>      *  exception classes. This also makes it much easier for the exception
>      *  handling because the exception classes do not have to have 
> pointers back
>      *  to this object to access utility routines and so on.

With object you mean BaseRecognizer?

> Also, changing
>      *  the message for an exception type would be difficult because you
>      *  would have to subclassing exception, but then somehow get ANTLR
>      *  to make those kinds of exception objects instead of the default.
>      *  This looks weird, but trust me--it makes the most sense in terms
>      *  of flexibility.

How about extracting the strings into an extra file? Or look for a such 
file and use defaults for not overwritten messages?

>      *
>      *  For grammar debugging, you will want to override this to add
>      *  more information such as the stack frame with
>      *  getRuleInvocationStack(e, this.getClass().getName()) and,
>      *  for no viable alts, the decision description and state etc...
>      *
>      *  Override this to change the message generated for one or more
>      *  exception types.
>      */
> 
> Still seems valid I guess.

I believe you only missed another alternative design.

Johannes

From hharalambiev at gmail.com  Thu Apr 17 10:03:01 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Thu, 17 Apr 2008 20:03:01 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <480780EC.6030908@gmx.de>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
	<480780EC.6030908@gmx.de>
Message-ID: <aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>

Hello Johannes,

So, if I understand correctly, you suggest to have the following (using a
scope):

r2
: {$r::flag}? Token1 -> ^(NODE Token1)
| Token1
;

If the above is a correct assumption, then how can I set the scope variable,
as I could only think of the following way:

r
scope {
  boolean flag;
}
: Token1^ Token2!
    {$r::flag = true;}
    r2
| Token1^
  {$r::flag = false;}
  r2
;

This solution, however, will fail, as the action for setting the scope
variable will not be executed until the backtracking is over. But I need
this variable set, as it will be used as a predicate for the parsing. Thus,
we have a catch-22 situation.

A solution I could think of is not to have two alternatives for r2, but
rather construct the CommonTree manually with java code and within to use
the knowledge of the boolean flag. But I dislike this solution and am open
to suggestions.

Hari



On 4/17/08, Johannes Luber <jaluber at gmx.de> wrote:
>
> Haralambi Haralambiev schrieb:
>
> > Hello,
> >
> > First of all, thanks for the magnificent tool. I consider myself new to
> > advanced stuff, as I have been working with it for less than a month.
> >
> > So, the problem that I currently cannot resolve is described by the
> > following test grammar:
> >
> > ----------
> > grammar test;
> >
> > options {
> > output=AST;
> > ASTLabelType=CommonTree;
> > backtrack=true;
> > memoize=true;
> > }
> >
> > tokens
> > {
> > NODE;
> > }
> >
> > r : Token1^ Token2! r2[true]
> > | Token1^ r2[false]
> > ;
> > r2[boolean flag]
> > : {flag}? Token1 -> ^(NODE Token1)
> > | Token1
> > ;
> >
> > Token1 : 'TOKEN1';
> > Token2 : 'TOKEN2';
> > ----------
> >
> > The general idea is that depending on how one rule matches, I would like
> > a subrule to generate the AST differently.
> >
> > I decided to do this with some boolean flag, but the problem is that the
> > generated Java parser class cannot compile.
> > In the example above - the method *synpred2_fragment()* contains a
> > statement */if ( !(flag) )/* but the variable flag cannot be resolved.
> >
> > So, if you could please guide me how to resolve this problem. Maybe I
> > have missed something fundamental in my understandings for developing the
> > grammar.
> >
>
> The problem is that flag is in a hoisted method which doesn't know about
> flag. You have to use either a member variable or a scope to workaround this
> problem.
>
> Johannes
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/c7312554/attachment.html 

From jaluber at gmx.de  Thu Apr 17 10:12:44 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 17 Apr 2008 19:12:44 +0200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <20080417091351.22437gmx1@mx082.gmx.net>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
	<20080417091351.22437gmx1@mx082.gmx.net>
Message-ID: <4807850C.9080001@gmx.de>

Gavin Lambert schrieb:
> At 10:12 17/04/2008, Loring Craymer wrote:
>> Most of the cases call "getTokenErrorDisplay() which cannot be pushed 
>> into the exceptions, and none of the error messages are localized 
>> (minimalist assumption:  StringTemplate is not available for the 
>> target language).  I suggest adding an "msg" field to 
>> RecognitionException so that Gavin's first suggestion can be implemented.
> 
> There's definitely no need to go adding extra fields -- they're already 
> there.  That was basically my point -- all C# exceptions already have a 
> settable message, and RecognitionException is no different (and it even 
> already includes constructors to set that message).  The only missing 
> piece of the puzzle is that GetErrorMessage completely ignores the 
> message set on the exception.
> 
> I would have thought that Java exceptions were the same?  (Googles.)  
> Yes, they are.
> 
> So for C#, changing the first line of BaseRecogniser.GetErrorMessage from:
>   string msg = null;
> to:
>   string msg = e.Message;
> is all that's required.  Similarly for Java's 
> BaseRecogniser.getErrorMessage:
>   String msg = e.getMessage();
> (or even getLocalizedMessage(), if you prefer.)

Unless Ter objects against this change, I will include it. I prefer the 
same behaviour over improved functionality, as Java is the role model 
for all targets.

> It would most likely be similarly minor for any other target language 
> that supports exceptions, and only slightly more complex for others.  
> (C++ actually falls halfway between the two.  The standard doesn't 
> actually mandate that std::exception have a constructor which can take a 
> string and store it, so some implementations do and some don't.  But 
> there isn't a C++ target at the moment anyway, so the point is moot.)
> 
> But at the end of the day, having some way to raise user-specified 
> errors which are treated similarly to "standard" errors (as far as error 
> recovery and reporting go) seems like an essential thing to have.
> 
> What would be even cooler would be a way to link a 
> target-code-block-that-returns-a-string to a validating predicate, 
> basically cutting out the middle-man, since it seems to me like 
> validating predicates are the most likely source of user-specified 
> errors.  But that's a separate issue; being able to catch the 
> FailedPredicateException and rethrow it as a custom one is sufficient.

I'm in favor of this, as this localizes more grammar issues into one file.

>> I would argue against implementing Gavin's second suggestion at this 
>> time:  the token error display adds clarity for the user (yeah, you 
>> can look at line 13, figure out that "message" is in column 2, and 
>> then try to understand what just happened; but it is easier to look 
>> for "message" on line 13), and the current approach does allow the 
>> user to override getErrorMessage() to support localization via 
>> StringTemplate.
> 
> The second suggestion was simply a logical follow-through from the first 
> -- if you're using the text in the exceptions, and that text can 
> usefully be constructed by the exception itself (as with 
> FailedPredicateException), then why not do it?  Sure, still have the 
> central method which can be used for localisation or whatever other 
> overriding you want (Ter's right, it's a good idea), but why not make 
> the exception classes self sufficient?
> 
> I'm not really sure what you're saying about the "token error display" 
> though.  I never suggested removing that; I was suggesting that enough 
> information be given to the exception constructors so that they can 
> generate it themselves.
> 
> But, whatever.  The second idea isn't really all that important, it's 
> just a stylistic thing.  The first, however, I think is vital.

Not entirely stylistic. After all, Ter used procedural programming in a 
place, which could benefit from polymorphism. Having a catch-all clause 
doesn't very well with me. Using the compiler to choose the right text 
message is easier and one might not have to override getErrorMessage().

Johannes


From jaluber at gmx.de  Thu Apr 17 10:15:41 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 17 Apr 2008 19:15:41 +0200
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>	
	<480780EC.6030908@gmx.de>
	<aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>
Message-ID: <480785BD.8040206@gmx.de>

Haralambi Haralambiev schrieb:
> Hello Johannes,
> 
> So, if I understand correctly, you suggest to have the following (using 
> a scope):
> 
> r2
> : {$r::flag}? Token1 -> ^(NODE Token1)
> | Token1
> ;
> 
> If the above is a correct assumption, then how can I set the scope 
> variable, as I could only think of the following way:
> 
> r
> scope {
>   boolean flag;
> }
> : Token1^ Token2!
>     {$r::flag = true;} 
>     r2
> | Token1^
>   {$r::flag = false;}
>   r2
> ;
> 
> This solution, however, will fail, as the action for setting the scope 
> variable will not be executed until the backtracking is over. But I need 
> this variable set, as it will be used as a predicate for the parsing. 
> Thus, we have a catch-22 situation.
> 
> A solution I could think of is not to have two alternatives for r2, but 
> rather construct the CommonTree manually with java code and within to 
> use the knowledge of the boolean flag. But I dislike this solution and 
> am open to suggestions.

Try using {{$r::flag = true;}}.

Johannes


From adam.rpconnelly at googlemail.com  Thu Apr 17 10:25:27 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 17 Apr 2008 18:25:27 +0100
Subject: [antlr-interest] Fwd:  C# Error Recovery
In-Reply-To: <b9a39b060804171023q12bc2d8at1d71885c4a72d504@mail.gmail.com>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
	<20080417091351.22437gmx1@mx082.gmx.net> <4807850C.9080001@gmx.de>
	<b9a39b060804171023q12bc2d8at1d71885c4a72d504@mail.gmail.com>
Message-ID: <b9a39b060804171025w21a46164qefebd82ec54a43b8@mail.gmail.com>

Sorry, I keep pressing reply instead of reply to all.

---------- Forwarded message ----------
From: Adam Connelly <adam.rpconnelly at googlemail.com>
Date: 17 Apr 2008 18:23
Subject: Re: [antlr-interest] C# Error Recovery
To: Johannes Luber <jaluber at gmx.de>

This is kind of related to what I was talking about in another thread
("Better Error Handling in ANRTL" or something like that).  Why not remove
the actual error reporting from the recogniser completely?  That way you'd
still have all the reporting (i.e. what to do with errors and not what to do
when one occurs which is slightly different) in the same place, and it would
also be easier (IMO anyway) to alter the way that errors are reported.

You could also then change the error reporter used by a parser at runtime.
But anyhow, I won't re-write the suggestion here.

Adam

On 17/04/2008, Johannes Luber <jaluber at gmx.de> wrote:
>
> Gavin Lambert schrieb:
>
> > At 10:12 17/04/2008, Loring Craymer wrote:
> >
> > > Most of the cases call "getTokenErrorDisplay() which cannot be pushed
> > > into the exceptions, and none of the error messages are localized
> > > (minimalist assumption:  StringTemplate is not available for the target
> > > language).  I suggest adding an "msg" field to RecognitionException so that
> > > Gavin's first suggestion can be implemented.
> > >
> >
> > There's definitely no need to go adding extra fields -- they're already
> > there.  That was basically my point -- all C# exceptions already have a
> > settable message, and RecognitionException is no different (and it even
> > already includes constructors to set that message).  The only missing piece
> > of the puzzle is that GetErrorMessage completely ignores the message set on
> > the exception.
> >
> > I would have thought that Java exceptions were the same?  (Googles.)
> >  Yes, they are.
> >
> > So for C#, changing the first line of BaseRecogniser.GetErrorMessage
> > from:
> >  string msg = null;
> > to:
> >  string msg = e.Message;
> > is all that's required.  Similarly for Java's
> > BaseRecogniser.getErrorMessage:
> >  String msg = e.getMessage();
> > (or even getLocalizedMessage(), if you prefer.)
> >
>
> Unless Ter objects against this change, I will include it. I prefer the
> same behaviour over improved functionality, as Java is the role model for
> all targets.
>
>  It would most likely be similarly minor for any other target language
> > that supports exceptions, and only slightly more complex for others.  (C++
> > actually falls halfway between the two.  The standard doesn't actually
> > mandate that std::exception have a constructor which can take a string and
> > store it, so some implementations do and some don't.  But there isn't a C++
> > target at the moment anyway, so the point is moot.)
> >
> > But at the end of the day, having some way to raise user-specified
> > errors which are treated similarly to "standard" errors (as far as error
> > recovery and reporting go) seems like an essential thing to have.
> >
> > What would be even cooler would be a way to link a
> > target-code-block-that-returns-a-string to a validating predicate, basically
> > cutting out the middle-man, since it seems to me like validating predicates
> > are the most likely source of user-specified errors.  But that's a separate
> > issue; being able to catch the FailedPredicateException and rethrow it as a
> > custom one is sufficient.
> >
>
> I'm in favor of this, as this localizes more grammar issues into one file.
>
>  I would argue against implementing Gavin's second suggestion at this
> > > time:  the token error display adds clarity for the user (yeah, you can look
> > > at line 13, figure out that "message" is in column 2, and then try to
> > > understand what just happened; but it is easier to look for "message" on
> > > line 13), and the current approach does allow the user to override
> > > getErrorMessage() to support localization via StringTemplate.
> > >
> >
> > The second suggestion was simply a logical follow-through from the first
> > -- if you're using the text in the exceptions, and that text can usefully be
> > constructed by the exception itself (as with FailedPredicateException), then
> > why not do it?  Sure, still have the central method which can be used for
> > localisation or whatever other overriding you want (Ter's right, it's a good
> > idea), but why not make the exception classes self sufficient?
> >
> > I'm not really sure what you're saying about the "token error display"
> > though.  I never suggested removing that; I was suggesting that enough
> > information be given to the exception constructors so that they can generate
> > it themselves.
> >
> > But, whatever.  The second idea isn't really all that important, it's
> > just a stylistic thing.  The first, however, I think is vital.
> >
>
> Not entirely stylistic. After all, Ter used procedural programming in a
> place, which could benefit from polymorphism. Having a catch-all clause
> doesn't very well with me. Using the compiler to choose the right text
> message is easier and one might not have to override getErrorMessage().
>
> Johannes
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/b07e0196/attachment.html 

From adam.rpconnelly at googlemail.com  Thu Apr 17 10:29:19 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 17 Apr 2008 18:29:19 +0100
Subject: [antlr-interest] Fwd:  Better Error Reporting in ANTLR
In-Reply-To: <b9a39b060804121922w25fce50dpace7c6a1a21f41ff@mail.gmail.com>
References: <7e7886e20804100806k52bd2167o64daa22de79f2cfb@mail.gmail.com>
	<2CA03B32-781F-4E9D-B69F-27F2F370B14F@ucar.edu>
	<b9a39b060804121922w25fce50dpace7c6a1a21f41ff@mail.gmail.com>
Message-ID: <b9a39b060804171029p3bc92479n410ea9077878cef1@mail.gmail.com>

Decided to forward this since I just realised I accidentally didn't send it
to the list.

Adam

---------- Forwarded message ----------
From: Adam Connelly <adam.rpconnelly at googlemail.com>
Date: 13 Apr 2008 03:22
Subject: Re: [antlr-interest] Better Error Reporting in ANTLR
To: siemsen at ucar.edu

I think I've got a better way to do the error handling in ANTLR, but I'm not
sure whether Terence would like it since I think there are reasons for the
way it's currently handled.

I came up with this with the help of a colleague after getting annoyed with
stuff like SEMI being output instead of ';' in the error text.  The main
idea is that you have an IErrorHandler interface that every parser has an
instance of and delegates any error handling to.  You also have a
ITokenInfoSource interface that lets the IErrorHandler retrieve information
about tokens.  This way it removes the reporting of errors from the parser
and allows you to mix and match parsers, error handlers and info sources.

The main parts of the system are:
Parser <- contains an instance of IErrorHandler and uses
IErrorHandler.ReportError() to report errors
IErrorhandler <- does the reporting of errors
ITokenInfoSource <- allows access to various pieces of information about a
token
ITokenInfo <- Information about a token
ErrorHandlerService <- singleton that allows handlers to be registered by
name

There are a few reasons that I think this system would be better than the
current one.  They include:

1. The ability to easily alter the mechanism of error handling without
altering the parser, and at run time (for example switching between
reporting errors to the console and some logging system)
2. Easier multilingual support (i.e. you could write different language
error handlers)
3. The use of ITokenInfo would allow more human understandable error
reporting and would support having multiple lexers for the same parser with
different error information for the different lexers (back to the
multilingual thing?)
4. A number of default error handlers could be packaged with ANTLR for stuff
like built in support for well known logging frameworks, etc.
5. You remove the exception logic for error reporting out of the parser and
make the grammar easier to understand.

Along with altering the parser class it would be good to alter the ANTLR
grammar to support some kind of description to be associated with lexer
rules (the "error text").  This would stop the token name being output in
situations where it would be more appropriate to have a textual description.

The TokenInfos would all be generated when the parser was being generated
using a slightly modified token file (that would just have more information
in it).

I've attached a png with a class diagram if anyone's interested - I wouldn't
take it too seriously since I think I altered some stuff since I made it,
but it'll help you understand what I'm proposing better than my jibberings
(since I don't think I've done it justice).

Any thoughts?

Cheers,
Adam


On 10/04/2008, siemsen at ucar.edu <siemsen at ucar.edu> wrote:
>
>  I also report semantic errors with System.err.println().  Line and
> character information is in the token.  In your ifStatement rule, try this:
> if (!($expression.value instanceof Boolean)) {
>     System.err.println("(" + $expression.token.getLine() + ":" +
>                        $expression.token.getCharPositionInLine() + "): " +
>                        "if expression '" + $expression.text + "'does not
> evaluate to a boolean");
>     return;
> }
>
> I would also like to do this the "right" way, with an exception.  When I
> tried, the exception logic made it harder to understand, so I stuck with
> System.err.println().  I hope someone can suggest a better way.
> -- Pete
>
>
> On Apr 10, 2008, at 9:06 AM, Robert Stehwien wrote:
>
> I have a simple grammar where there can be semantic errors.  Right now
> I'm using System.err.println() to report those errors.  What I'd like
> to do is create and throw an exception that takes just an error string
> and have the same line and character information reported that ANTLR
> errors report.  Any good suggestions on how I can do that?
>
> Here are examples of the errors in my grammar:
> --------------------
> ifStatement     : ^(IF expression s+=.+)
>   {
>     if (!($expression.value instanceof Boolean)) {
>       System.err.println("if expression '" + $expression.text + "'
> does not evaluate to a boolean");
>       return;
>     }
>     if (((Boolean)$expression.value).booleanValue()) {
>       runStatement((CommonTree)$s.get(0));
>     }
>     else if ($s.size() > 1) {
>       runStatement((CommonTree)$s.get(1));
>     }
>   }
>   ;
> --------------------
> @members {
>     private Map<String, Object> variables = new HashMap<String, Object>();
>
>     private void defineInt(String name) {
>         if (variables.containsKey(name)) {
>             System.err.println("variable '" + name + "' already defined");
>         }
>         variables.put(name, BigInteger.ZERO);
>     }
> }
> --------------------
>
> Thanks,
> Robert
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/e95bf579/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ErrorHandler.png
Type: image/png
Size: 6770 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/e95bf579/attachment-0001.png 

From parrt at cs.usfca.edu  Thu Apr 17 10:58:00 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Apr 2008 10:58:00 -0700
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <4807850C.9080001@gmx.de>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
	<20080417091351.22437gmx1@mx082.gmx.net> <4807850C.9080001@gmx.de>
Message-ID: <83BC83F8-3383-44E8-BBA1-597179A6025B@cs.usfca.edu>


On Apr 17, 2008, at 10:12 AM, Johannes Luber wrote:
> Not entirely stylistic. After all, Ter used procedural programming  
> in a place, which could benefit from polymorphism. Having a catch- 
> all clause doesn't very well with me. Using the compiler to choose  
> the right text message is easier and one might not have to override  
> getErrorMessage().

I disagree...Another example of people thinking objects of the answer  
to everything. Okay so subclass all of the exceptions in your  
application. Now, how are you going to get ANTLR to generate those  
exceptions instead of the standard ones? You will now have to go  
modify all the templates and runtime code to be able to deal with  
exception factories or something else. Having all error messages  
handled through one method is extremely appropriate because it groups  
everything into one location and makes it much easier to  
internationalize using templates and so on.

As you can tell for my comment on that function, I thought about it  
quite a bit. I even tried it the other way.

Ter

From parrt at cs.usfca.edu  Thu Apr 17 10:58:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Apr 2008 10:58:57 -0700
Subject: [antlr-interest] Fwd:  C# Error Recovery
In-Reply-To: <b9a39b060804171025w21a46164qefebd82ec54a43b8@mail.gmail.com>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
	<20080417091351.22437gmx1@mx082.gmx.net> <4807850C.9080001@gmx.de>
	<b9a39b060804171023q12bc2d8at1d71885c4a72d504@mail.gmail.com>
	<b9a39b060804171025w21a46164qefebd82ec54a43b8@mail.gmail.com>
Message-ID: <F2A1C464-DB4D-45E0-BB52-B8B1F19DBA98@cs.usfca.edu>


On Apr 17, 2008, at 10:25 AM, Adam Connelly wrote:

> Sorry, I keep pressing reply instead of reply to all.
>
> ---------- Forwarded message ----------
> From: Adam Connelly <adam.rpconnelly at googlemail.com>
> Date: 17 Apr 2008 18:23
> Subject: Re: [antlr-interest] C# Error Recovery
> To: Johannes Luber <jaluber at gmx.de>
>
> This is kind of related to what I was talking about in another  
> thread ("Better Error Handling in ANRTL" or something like that).   
> Why not remove the actual error reporting from the recogniser  
> completely?  That way you'd still have all the reporting (i.e. what  
> to do with errors and not what to do when one occurs which is  
> slightly different) in the same place, and it would also be easier  
> (IMO anyway) to alter the way that errors are reported.
>
> You could also then change the error reporter used by a parser at  
> runtime.  But anyhow, I won't re-write the suggestion here

You mean like the ErrorListeners in ST?  WhenI have time, that is a  
reasonable thing to consider...

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/b22d2d2d/attachment.html 

From parrt at cs.usfca.edu  Thu Apr 17 11:01:26 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Apr 2008 11:01:26 -0700
Subject: [antlr-interest] Fwd:  Better Error Reporting in ANTLR
In-Reply-To: <b9a39b060804171029p3bc92479n410ea9077878cef1@mail.gmail.com>
References: <7e7886e20804100806k52bd2167o64daa22de79f2cfb@mail.gmail.com>
	<2CA03B32-781F-4E9D-B69F-27F2F370B14F@ucar.edu>
	<b9a39b060804121922w25fce50dpace7c6a1a21f41ff@mail.gmail.com>
	<b9a39b060804171029p3bc92479n410ea9077878cef1@mail.gmail.com>
Message-ID: <5438F677-E8A4-4E18-BFBF-3E8A30086A53@cs.usfca.edu>

Adding "bug"So I can think about this later. Having ANTLR do Something  
like ST those for error listening is reasonable; I am not sure why I  
didn't duplicate that in ANTLR...perhaps habit from previous versions...

http://www.antlr.org:8888/browse/ANTLR-244

Ter


From markobarko at gmail.com  Thu Apr 17 11:22:13 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Thu, 17 Apr 2008 14:22:13 -0400
Subject: [antlr-interest] 3.1 Upgrade problem
Message-ID: <1208456533.6376.16.camel@main>

So, i've been using antlrworks-1.1.7.jar to create my grammar so far.
grammar produced a parser that ran fine. i then switched and started
using antlrworks-1.2b1.jar. Code generation for C# is the issue.

The following rule:

expression	
	:	statement | assignment | Comment;

generates this code (last line in this snippet references an unknown
member of the generated class above it):


> public class expression_return : ParserRuleReturnScope 
>     {
>         internal CommonTree tree;
>         override public object Tree
>         {
>         	get { return tree; }
>         }
>     };
>     
>     // $ANTLR start expression
>     // Test.g:31:1: expression : ( statement | assignment | Comment );
>     public expression_return expression() // throws RecognitionException [1]
>     {   
>         expression_return retval = new expression_return();
>         retval.start = input.LT(1);
>  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/e52e907b/attachment.html 

From cdoucette at vaultus.com  Thu Apr 17 11:44:10 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Thu, 17 Apr 2008 14:44:10 -0400
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB757C@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

I originally intended to use ANTLR AST support.
Thus, my options had:
    output=AST;
I have decided to build my own AST trees manually in actions instead.
So, I removed "output=AST" from my options.
Now I get this error:

[14:36:00] error(10):  internal error: C:\software\trunk\vsw\source\com\vaultus\studio\vscript\parser\antlr\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

Can someone please tell me what this error means and how to resolve it?

Earlier, I got this error:
[14:37:11] error(10):  internal error: C:\software\trunk\vsw\source\com\vaultus\studio\vscript\parser\antlr\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
and I was able to determine that it was because my top-level rule ended with "EOF!" instead of "EOF".
When I removed the trailing "!", that error was resolved.

Might I humbly suggest that:
a)    All ANTLR errors should include a line number in the grammar if at all possible.
b)    Could errors like ": java.lang.IllegalArgumentException: Can't find template tokenRefBang.st"
        be refactored to generate an error like "Can't use AST operator ! without options output=AST".

Thanks,
Chuck

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/ee9e46b3/attachment.html 

From cdoucette at vaultus.com  Thu Apr 17 11:51:12 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Thu, 17 Apr 2008 14:51:12 -0400
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <A7746824D386F947BBC285F6EC4716B001E8DB757C@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
References: <A7746824D386F947BBC285F6EC4716B001E8DB757C@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB7581@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

I googled it and found an earlier response on this list.
Thus, I have solved my own problem.
I was using other AST rewrite operators, i.e. "^".
Once I removed them, my parser was generated without errors.

So, as I requested below, could errors like:

java.lang.IllegalArgumentException: Can't find template tokenRefRuleRoot.st

be rewritten to something like:

Can't use AST operator "^" without using option output=AST

Thanks,
Chuck

________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Thursday, April 17, 2008 2:44 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st

I originally intended to use ANTLR AST support.
Thus, my options had:
    output=AST;
I have decided to build my own AST trees manually in actions instead.
So, I removed "output=AST" from my options.
Now I get this error:

[14:36:00] error(10):  internal error: C:\software\trunk\vsw\source\com\vaultus\studio\vscript\parser\antlr\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

Can someone please tell me what this error means and how to resolve it?

Earlier, I got this error:
[14:37:11] error(10):  internal error: C:\software\trunk\vsw\source\com\vaultus\studio\vscript\parser\antlr\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
and I was able to determine that it was because my top-level rule ended with "EOF!" instead of "EOF".
When I removed the trailing "!", that error was resolved.

Might I humbly suggest that:
a)    All ANTLR errors should include a line number in the grammar if at all possible.
b)    Could errors like ": java.lang.IllegalArgumentException: Can't find template tokenRefBang.st"
        be refactored to generate an error like "Can't use AST operator ! without options output=AST".

Thanks,
Chuck

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/1511050c/attachment-0001.html 

From tbrandonau at gmail.com  Thu Apr 17 11:52:35 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 18 Apr 2008 04:52:35 +1000
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <83BC83F8-3383-44E8-BBA1-597179A6025B@cs.usfca.edu>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
	<20080417091351.22437gmx1@mx082.gmx.net> <4807850C.9080001@gmx.de>
	<83BC83F8-3383-44E8-BBA1-597179A6025B@cs.usfca.edu>
Message-ID: <ebc876d70804171152o4878d529u2e0b9baa4eae4aa8@mail.gmail.com>

On Fri, Apr 18, 2008 at 3:58 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>  On Apr 17, 2008, at 10:12 AM, Johannes Luber wrote:
>
> > Not entirely stylistic. After all, Ter used procedural programming in a
> place, which could benefit from polymorphism. Having a catch-all clause
> doesn't very well with me. Using the compiler to choose the right text
> message is easier and one might not have to override getErrorMessage().
> >
>
>  I disagree...Another example of people thinking objects of the answer to
> everything. Okay so subclass all of the exceptions in your application. Now,
> how are you going to get ANTLR to generate those exceptions instead of the
> standard ones? You will now have to go modify all the templates and runtime
> code to be able to deal with exception factories or something else. Having
> all error messages handled through one method is extremely appropriate
> because it groups everything into one location and makes it much easier to
> internationalize using templates and so on.
>
>  As you can tell for my comment on that function, I thought about it quite a
> bit. I even tried it the other way.
>
>  Ter
>
Well I'm not sure it couldn't be implemented just as cleanly with a
single exception creation factory (where template code ould be added
easily in one place and a simpler message output function. But even if
that is possible that requires quite widespread changes to ANTLR and
doesn't seem to offer any advatage or be much cleaner. However I think
the seperate suggestion of having the getErrorMessage function use the
message of exceptions of an unkown type (rather than defaulting to
null in these cases currently) is reasonable and you don't seem to
have dealt with this.

Tom.

From lgcraymer at yahoo.com  Thu Apr 17 11:56:52 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 17 Apr 2008 11:56:52 -0700 (PDT)
Subject: [antlr-interest] Fwd:  Better Error Reporting in ANTLR
Message-ID: <801651.30261.qm@web55903.mail.re3.yahoo.com>

Ter--

While you are doing that, you might take a look at your ErrorManager class from the ANTLR 3 source; I believe that that can be reworked as a library class/interface without a horrendous amount of effort (although it is not a trivial task), and it provides useful functionality as well as StringTemplate support.  Adding external listener support to that sounds promising.

--Loring

----- Original Message ----
From: Terence Parr <parrt at cs.usfca.edu>
To: Adam Connelly <adam.rpconnelly at googlemail.com>
Cc: antlr-interest Interest <antlr-interest at antlr.org>
Sent: Thursday, April 17, 2008 11:01:26 AM
Subject: Re: [antlr-interest] Fwd:  Better Error Reporting in ANTLR

Adding "bug"So I can think about this later. Having ANTLR do Something  
like ST those for error listening is reasonable; I am not sure why I  
didn't duplicate that in ANTLR...perhaps habit from previous versions...

http://www.antlr.org:8888/browse/ANTLR-244

Ter







      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/2bb1db32/attachment.html 

From cdoucette at vaultus.com  Thu Apr 17 11:56:12 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Thu, 17 Apr 2008 14:56:12 -0400
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <A7746824D386F947BBC285F6EC4716B001E8DB7581@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
References: <A7746824D386F947BBC285F6EC4716B001E8DB757C@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
	<A7746824D386F947BBC285F6EC4716B001E8DB7581@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB7587@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

It appears that my wish for improved errors for these cases may have already been granted (in Antlr 3.1):

http://www.antlr.org:8888/browse/ANTLR-221

Chuck

________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Thursday, April 17, 2008 2:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can't find template tokenRefRuleRoot.st

I googled it and found an earlier response on this list.
Thus, I have solved my own problem.
I was using other AST rewrite operators, i.e. "^".
Once I removed them, my parser was generated without errors.

So, as I requested below, could errors like:

java.lang.IllegalArgumentException: Can't find template tokenRefRuleRoot.st

be rewritten to something like:

Can't use AST operator "^" without using option output=AST

Thanks,
Chuck

________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Doucette, Charles
Sent: Thursday, April 17, 2008 2:44 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st

I originally intended to use ANTLR AST support.
Thus, my options had:
    output=AST;
I have decided to build my own AST trees manually in actions instead.
So, I removed "output=AST" from my options.
Now I get this error:

[14:36:00] error(10):  internal error: C:\software\trunk\vsw\source\com\vaultus\studio\vscript\parser\antlr\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1965)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.works.generate.CodeGenerate.generate(Unknown Source)
org.antlr.works.generate.CodeGenerate.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

Can someone please tell me what this error means and how to resolve it?

Earlier, I got this error:
[14:37:11] error(10):  internal error: C:\software\trunk\vsw\source\com\vaultus\studio\vscript\parser\antlr\vscript.g : java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
and I was able to determine that it was because my top-level rule ended with "EOF!" instead of "EOF".
When I removed the trailing "!", that error was resolved.

Might I humbly suggest that:
a)    All ANTLR errors should include a line number in the grammar if at all possible.
b)    Could errors like ": java.lang.IllegalArgumentException: Can't find template tokenRefBang.st"
        be refactored to generate an error like "Can't use AST operator ! without options output=AST".

Thanks,
Chuck

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/414a8233/attachment.html 

From parrt at cs.usfca.edu  Thu Apr 17 12:02:58 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Apr 2008 12:02:58 -0700
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <ebc876d70804171152o4878d529u2e0b9baa4eae4aa8@mail.gmail.com>
References: <582491.19346.qm@web55907.mail.re3.yahoo.com>
	<20080417091351.22437gmx1@mx082.gmx.net> <4807850C.9080001@gmx.de>
	<83BC83F8-3383-44E8-BBA1-597179A6025B@cs.usfca.edu>
	<ebc876d70804171152o4878d529u2e0b9baa4eae4aa8@mail.gmail.com>
Message-ID: <D96F483A-AC9B-4BDF-B64B-AF8033A567F1@cs.usfca.edu>


On Apr 17, 2008, at 11:52 AM, Thomas Brandon wrote:
> doesn't seem to offer any advatage or be much cleaner. However I think
> the seperate suggestion of having the getErrorMessage function use the
> message of exceptions of an unkown type (rather than defaulting to
> null in these cases currently) is reasonable and you don't seem to
> have dealt with this.

Ah!  Quite right...adding Johannes' suggestion:

e.getMessage()

edit //depot/code/antlr/main/CHANGES.txt#51
edit //depot/code/antlr/main/runtime/Java/src/org/antlr/runtime/ 
BaseRecognizer.java#12
Change 4780 submitted.

Ter

From jaluber at gmx.de  Thu Apr 17 12:11:08 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 17 Apr 2008 21:11:08 +0200
Subject: [antlr-interest] 3.1 Upgrade problem
In-Reply-To: <1208456533.6376.16.camel@main>
References: <1208456533.6376.16.camel@main>
Message-ID: <4807A0CC.1030200@gmx.de>

Marko Simovic schrieb:
> So, i've been using antlrworks-1.1.7.jar to create my grammar so far. 
> grammar produced a parser that ran fine. i then switched and started 
> using antlrworks-1.2b1.jar. Code generation for C# is the issue.

Please use the latest daily build - ANTLRworks 1.2b1 may not be uptodate.

Johannes

> The following rule:
> 
> expression
> : statement | assignment | Comment;
> 
> generates this code (last line in this snippet references an unknown 
> member of the generated class above it):
> 
>> public class expression_return : ParserRuleReturnScope 
>>     {
>>         internal CommonTree tree;
>>         override public object Tree
>>         {
>>         	get { return tree; }
>>         }
>>     };
>>     
>>     // $ANTLR start expression
>>     // Test.g:31:1: expression : ( statement | assignment | Comment );
>>     public expression_return expression() // throws RecognitionException [1]
>>     {   
>>         expression_return retval = new expression_return();
>>         retval.start = input.LT(1);
>>  


From adam.rpconnelly at googlemail.com  Thu Apr 17 12:14:30 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 17 Apr 2008 20:14:30 +0100
Subject: [antlr-interest] Fwd: Better Error Reporting in ANTLR
In-Reply-To: <801651.30261.qm@web55903.mail.re3.yahoo.com>
References: <801651.30261.qm@web55903.mail.re3.yahoo.com>
Message-ID: <b9a39b060804171214l52c320c1hda8c4f72afbc28d6@mail.gmail.com>

Cool, sounds good.  I think for me the most useful part of it is
distinguishing between the token name, a description of the token and the
text matched on the input so you can do stuff like "expected ';'" instead of
"expected SEMI" without having to override error reporting methods.

Adam

On 17/04/2008, Loring Craymer <lgcraymer at yahoo.com> wrote:
>
> Ter--
>
> While you are doing that, you might take a look at your ErrorManager class
> from the ANTLR 3 source; I believe that that can be reworked as a library
> class/interface without a horrendous amount of effort (although it is not a
> trivial task), and it provides useful functionality as well as
> StringTemplate support.  Adding external listener support to that sounds
> promising.
>
> --Loring
>
> ----- Original Message ----
> From: Terence Parr <parrt at cs.usfca.edu>
> To: Adam Connelly <adam.rpconnelly at googlemail.com>
> Cc: antlr-interest Interest <antlr-interest at antlr.org>
> Sent: Thursday, April 17, 2008 11:01:26 AM
> Subject: Re: [antlr-interest] Fwd: Better Error Reporting in ANTLR
>
> Adding "bug"So I can think about this later. Having ANTLR do Something
> like ST those for error listening is reasonable; I am not sure why I
> didn't duplicate that in ANTLR...perhaps habit from previous versions...
>
> http://www.antlr.org:8888/browse/ANTLR-244
>
> Ter
>
>
>
> ------------------------------
> Be a better friend, newshound, and know-it-all with Yahoo! Mobile. Try it
> now.<http://us.rd.yahoo.com/evt=51733/*http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/662481d7/attachment.html 

From parrt at cs.usfca.edu  Thu Apr 17 12:16:34 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Apr 2008 12:16:34 -0700
Subject: [antlr-interest] Fwd: Better Error Reporting in ANTLR
In-Reply-To: <b9a39b060804171214l52c320c1hda8c4f72afbc28d6@mail.gmail.com>
References: <801651.30261.qm@web55903.mail.re3.yahoo.com>
	<b9a39b060804171214l52c320c1hda8c4f72afbc28d6@mail.gmail.com>
Message-ID: <5F31317F-C59F-447D-9BE6-68C9DB397FB3@cs.usfca.edu>


On Apr 17, 2008, at 12:14 PM, Adam Connelly wrote:

> Cool, sounds good.  I think for me the most useful part of it is  
> distinguishing between the token name, a description of the token  
> and the text matched on the input so you can do stuff like "expected  
> ';'" instead of "expected SEMI" without having to override error  
> reporting methods.

EManager thing  would only help antlr messages not generated parser  
msgs.
Ter

From siemsen at ucar.edu  Thu Apr 17 12:27:44 2008
From: siemsen at ucar.edu (siemsen at ucar.edu)
Date: Thu, 17 Apr 2008 13:27:44 -0600
Subject: [antlr-interest] Can I get automatic line wrapping when using ST
	from ANTLR?
Message-ID: <4651EAFC-2873-45CF-A986-6B72108FB050@ucar.edu>

I have a grammar that outputs Java, including javadoc.  I output  
javadoc-style paragraphs by breaking strings into lines and handing  
the resulting ArrayList to StringTemplate via rewrite rules.  In the  
ST template, I use separator="\n * ".  This works fine.

Today I stumbled across the description of automatic line wrapping  
built into ST at

     http://www.antlr.org/wiki/display/ST/Automatic+line+wrapping

It looks good, but to use it you feed the line width to toString().   
I'm using ANTLR's neat interface to ST with rewrite rules, hence I  
don't have access to the toString() method.

Is there a way to use access ST's automatic line wrapping via ANTLR's  
interface to ST?

-- Pete


From antlr at mirality.co.nz  Thu Apr 17 13:31:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 08:31:04 +1200
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
Message-ID: <20080417203125.0433E11EC24@www.antlr.org>

At 04:02 18/04/2008, Haralambi Haralambiev wrote:
>r2[boolean flag]
>:{flag}? Token1 -> ^(NODE Token1)
>|Token1
>;
[...]
>In the example above - the method synpred2_fragment() contains a 
>statement if ( !(flag) ) but the variable flag cannot be resolved.

As Johannes has already said, the problem is that the predicate is 
getting hoisted.  However, I think there's another way to get it 
to work -- rewrite the rule so that it doesn't *need* to hoist the 
predicate:

r2[boolean flag]
   :  Token1
      ( {$flag}? => -> ^(NODE Token1)
      | -> Token1
      )
   ;

(I haven't tested this, but it seems plausible.)


From markobarko at gmail.com  Thu Apr 17 13:47:13 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Thu, 17 Apr 2008 16:47:13 -0400
Subject: [antlr-interest] 3.1 Upgrade problem
In-Reply-To: <4807A0CC.1030200@gmx.de>
References: <1208456533.6376.16.camel@main>  <4807A0CC.1030200@gmx.de>
Message-ID: <1208465233.6376.30.camel@main>

i tried with the (latest i believe) daily (antlr-2008-04-09.18.tar.gz).
it solves the problem

thanks,
Marko


-----Original Message-----
From: Johannes Luber <jaluber at gmx.de>
To: Marko Simovic <markobarko at gmail.com>
Cc: antlr-interest <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] 3.1 Upgrade problem
Date: Thu, 17 Apr 2008 21:11:08 +0200


Marko Simovic schrieb:
> So, i've been using antlrworks-1.1.7.jar to create my grammar so far. 
> grammar produced a parser that ran fine. i then switched and started 
> using antlrworks-1.2b1.jar. Code generation for C# is the issue.

Please use the latest daily build - ANTLRworks 1.2b1 may not be uptodate.

Johannes

> The following rule:
> 
> expression
> : statement | assignment | Comment;
> 
> generates this code (last line in this snippet references an unknown 
> member of the generated class above it):
> 
>> public class expression_return : ParserRuleReturnScope 
>>     {
>>         internal CommonTree tree;
>>         override public object Tree
>>         {
>>         	get { return tree; }
>>         }
>>     };
>>     
>>     // $ANTLR start expression
>>     // Test.g:31:1: expression : ( statement | assignment | Comment );
>>     public expression_return expression() // throws RecognitionException [1]
>>     {   
>>         expression_return retval = new expression_return();
>>         retval.start = input.LT(1);
>>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/8a6446a0/attachment.html 

From lgcraymer at yahoo.com  Thu Apr 17 13:49:39 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 17 Apr 2008 13:49:39 -0700 (PDT)
Subject: [antlr-interest] C# Error Recovery
Message-ID: <926056.6140.qm@web55903.mail.re3.yahoo.com>



----- Original Message ----
From: Gavin Lambert <antlr at mirality.co.nz>
To: Loring Craymer <lgcraymer at yahoo.com>; Johannes Luber <jaluber at gmx.de>
Cc: antlr-interest at antlr.org
Sent: Thursday, April 17, 2008 2:07:29 AM
Subject: Re: [antlr-interest] C# Error Recovery

At 10:12 17/04/2008, Loring Craymer wrote:
>Most of the cases call "getTokenErrorDisplay() which cannot be 
>pushed into the exceptions, and none of the error messages are 
>localized (minimalist assumption:  StringTemplate is not 
>available for the target language).  I suggest adding an "msg" 
>field to RecognitionException so that Gavin's first suggestion 
>can be implemented.

There's definitely no need to go adding extra fields -- they're 
already there.  That was basically my point -- all C# exceptions 
already have a settable message, and RecognitionException is no 
different (and it even already includes constructors to set that 
message).  The only missing piece of the puzzle is that 
GetErrorMessage completely ignores the message set on the 
exception.

I would have thought that Java exceptions were the 
same?  (Googles.)  Yes, they are.

The Java RecognitionException does not have a msg field--most of its children do.

So for C#, changing the first line of 
BaseRecogniser.GetErrorMessage from:
   string msg = null;
to:
   string msg = e.Message;
is all that's required.  Similarly for Java's 
BaseRecogniser.getErrorMessage:
   String msg = e.getMessage();
(or even getLocalizedMessage(), if you prefer.)

It would most likely be similarly minor for any other target 
language that supports exceptions, and only slightly more complex 
for others.  (C++ actually falls halfway between the two.  The 
standard doesn't actually mandate that std::exception have a 
constructor which can take a string and store it, so some 
implementations do and some don't.  But there isn't a C++ target 
at the moment anyway, so the point is moot.)

But at the end of the day, having some way to raise user-specified 
errors which are treated similarly to "standard" errors (as far as 
error recovery and reporting go) seems like an essential thing to 
have.

What would be even cooler would be a way to link a 
target-code-block-that-returns-a-string to a validating predicate, 
basically cutting out the middle-man, since it seems to me like 
validating predicates are the most likely source of user-specified 
errors.  But that's a separate issue; being able to catch the 
FailedPredicateException and rethrow it as a custom one is 
sufficient.

>I would argue against implementing Gavin's second suggestion at 
>this time:  the token error display adds clarity for the user 
>(yeah, you can look at line 13, figure out that "message" is in 
>column 2, and then try to understand what just happened; but it 
>is easier to look for "message" on line 13), and the current 
>approach does allow the user to override getErrorMessage() to 
>support localization via StringTemplate.

The second suggestion was simply a logical follow-through from the 
first -- if you're using the text in the exceptions, and that text 
can usefully be constructed by the exception itself (as with 
FailedPredicateException), then why not do it?  Sure, still have 
the central method which can be used for localisation or whatever 
other overriding you want (Ter's right, it's a good idea), but why 
not make the exception classes self sufficient?

I'm not really sure what you're saying about the "token error 
display" though.  I never suggested removing that; I was 
suggesting that enough information be given to the exception 
constructors so that they can generate it themselves.

You can't do that, though--the token types and display formats (since ANTLR3 defaults to Objects for tokens) are defined at the application level, while the exception classes are library items and know nothing about the application.  The application's recognizer(s), though, are subclasses of BaseRecognizer and can know about application features.

But, whatever.  The second idea isn't really all that important, 
it's just a stylistic thing.  The first, however, I think is 
vital.

Actually, I thought that it was good that you raised the point--I just responded that it was not a good solution  at this time, since localization is an important factor for (commercial) apps.  The ANTLR 3 exception management (tool, not runtime) is pretty decent, but the runtime support is still in need of work, largely because the current implementation was designed for transportability across target language implementations and Ter could not assume the existence of StringTemplate support when he wrote it.

--Loring






      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/72a064f8/attachment-0001.html 

From adam.rpconnelly at googlemail.com  Thu Apr 17 14:48:47 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 17 Apr 2008 22:48:47 +0100
Subject: [antlr-interest] Fwd:  Fwd: Better Error Reporting in ANTLR
In-Reply-To: <b9a39b060804171448p19940b2cgd59c87c04d5d6248@mail.gmail.com>
References: <801651.30261.qm@web55903.mail.re3.yahoo.com>
	<b9a39b060804171214l52c320c1hda8c4f72afbc28d6@mail.gmail.com>
	<5F31317F-C59F-447D-9BE6-68C9DB397FB3@cs.usfca.edu>
	<b9a39b060804171448p19940b2cgd59c87c04d5d6248@mail.gmail.com>
Message-ID: <b9a39b060804171448s2a77b65bh8a427c5737e814b9@mail.gmail.com>

Bollocks, did it again.

---------- Forwarded message ----------
From: Adam Connelly <adam.rpconnelly at googlemail.com>
Date: 17 Apr 2008 22:48
Subject: Re: [antlr-interest] Fwd: Better Error Reporting in ANTLR
To: Terence Parr <parrt at cs.usfca.edu>

It could though, and I actually wrote it up and got it working by making a
subclass of the parser class that my grammars would extend from that just
delegated stuff to the handler.  I guess the idea I had was that you could
figure out all the different semantic errors that you could have, then write
an exception class for each of them.  That would form a sort of interface
for your language that any error handler written for it would have to be
able to cope with.  This would allow you to write different handlers for the
same language that would do different things.

The TokenInfo objects and TokenInfoSource that would allow handlers to
create more meaningful messages would be generated at the same time as the
grammar.

Or maybe I'm not understanding what you mean?

Cheers,
Adam

On 17/04/2008, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Apr 17, 2008, at 12:14 PM, Adam Connelly wrote:
>
>  Cool, sounds good.  I think for me the most useful part of it is
> > distinguishing between the token name, a description of the token and the
> > text matched on the input so you can do stuff like "expected ';'" instead of
> > "expected SEMI" without having to override error reporting methods.
> >
>
> EManager thing  would only help antlr messages not generated parser msgs.
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/4df9deca/attachment.html 

From antlr at mirality.co.nz  Thu Apr 17 14:34:47 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 09:34:47 +1200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <926056.6140.qm@web55903.mail.re3.yahoo.com>
References: <926056.6140.qm@web55903.mail.re3.yahoo.com>
Message-ID: <20080417220111.5D6392F4312@www.antlr.org>

[BTW, the quoting was messed up on your last post.  If I hadn't 
written it myself it would have been hard to tell which were the 
quotes and which were your responses.]

At 08:49 18/04/2008, Loring Craymer wrote:
>The Java RecognitionException does not have a msg field--most of 
>its children do.

They don't need separate fields; Throwable has the field.  That's 
my point.  They just need to pass it along to their base 
class.  (Which the C# runtime already does.)

>You can't do that, though--the token types and display formats 
>(since ANTLR3 defaults to Objects for tokens) are defined at the 
>application level, while the exception classes are library items 
>and know nothing about the application.  The application's 
>recognizer(s), though, are subclasses of BaseRecognizer and can 
>know about application features.

That doesn't follow.  The recogniser is what is throwing the 
exception in the first place.  It should be trivial for it to 
either pass in the token names directly (in addition to the token 
ids, which it already does), or to pass in some interface that the 
exception constructor can call to fetch the token names as 
needed.  (I prefer the former, but the latter is more extensible 
and will lead to less API fluctuation.)

>Actually, I thought that it was good that you raised the point--I 
>just responded that it was not a good solution  at this time, 
>since localization is an important factor for (commercial) apps.

I don't see that this hinders localisation much, especially since 
the GetErrorMessage overridable would still be there, permitting 
central overriding of all the messages.

I guess it does make finding the specific text that needs 
translating a little harder, but that's easily mitigated by making 
the exceptions use a string lookup table rather than hard-coding 
string constants.  Then the standard strings could be localised 
simply by updating that table.

>The ANTLR 3 exception management (tool, not runtime) is pretty 
>decent, but the runtime support is still in need of work, largely 
>because the current implementation was designed for 
>transportability across target language implementations and Ter 
>could not assume the existence of StringTemplate support when he 
>wrote it.

Fair enough.  That's a good assumption to hold, even now.  I still 
don't think that invalidates my point, though.


-- 
Gavin Lambert, Mirality Systems
<http://www.mirality.co.nz/>
<http://lambert.geek.nz/>
----
Anyone who goes to a psychiatrist ought to have their head 
examined.

Few women admit their age.  Few men act theirs.


From jimi at temporal-wave.com  Thu Apr 17 16:07:06 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 17 Apr 2008 16:07:06 -0700
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <20080417203125.0433E11EC24@www.antlr.org>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAkI+LCMLILU2
	jj9ucP3KslAEAAAAA@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gavin Lambert
> Sent: Thursday, April 17, 2008 1:31 PM
> To: Haralambi Haralambiev; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problems with semantic predicates
> 
> At 04:02 18/04/2008, Haralambi Haralambiev wrote:
> >r2[boolean flag]
> >:{flag}? Token1 -> ^(NODE Token1)
> >|Token1
> >;
> [...]
> >In the example above - the method synpred2_fragment() contains a
> >statement if ( !(flag) ) but the variable flag cannot be resolved.
> 
> As Johannes has already said, the problem is that the predicate is
> getting hoisted.  However, I think there's another way to get it
> to work -- rewrite the rule so that it doesn't *need* to hoist the
> predicate:

Right idea mate, slightly wrong syntax ;-) :

r2[boolean flag]
	:  Token1
	
		 {$flag}? 	-> ^(NODE Token1)
     				-> Token1
	;


> 
> r2[boolean flag]
>    :  Token1
>       ( {$flag}? => -> ^(NODE Token1)
>       | -> Token1
>       )
>    ;
> 

Jim
 

No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.0/1382 - Release Date: 4/16/2008 5:34 PM
 




From listbrownie at gmail.com  Thu Apr 17 16:15:15 2008
From: listbrownie at gmail.com (alan brown)
Date: Thu, 17 Apr 2008 16:15:15 -0700
Subject: [antlr-interest] C++ Parser
Message-ID: <2b5f47650804171615k49684758p64299ed0d86d5e91@mail.gmail.com>

Has anyone got a grammar/parser for c++ that is ANTLRv3 compatible?  David
Wigg wrote something for ANTLR 2.7.  Has this project been tackled for V3?

alan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/8aa73204/attachment.html 

From lgcraymer at yahoo.com  Thu Apr 17 16:26:04 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 17 Apr 2008 16:26:04 -0700 (PDT)
Subject: [antlr-interest] C# Error Recovery
Message-ID: <121217.36727.qm@web55907.mail.re3.yahoo.com>



----- Original Message ----
> From: Gavin Lambert <antlr at mirality.co.nz>
> To: Loring Craymer <lgcraymer at yahoo.com>; Johannes Luber <jaluber at gmx.de>
> Cc: antlr-interest at antlr.org
> Sent: Thursday, April 17, 2008 2:34:47 PM
> Subject: Re: [antlr-interest] C# Error Recovery
> 
> [BTW, the quoting was messed up on your last post.  If I hadn't 
> written it myself it would have been hard to tell which were the 
> quotes and which were your responses.]

That's yahoo mail--it defaults to html format.

> 
> At 08:49 18/04/2008, Loring Craymer wrote:
> >The Java RecognitionException does not have a msg field--most of 
> >its children do.
> 
> They don't need separate fields; Throwable has the field.  That's 
> my point.  They just need to pass it along to their base 
> class.  (Which the C# runtime already does.)

Yeah, you could propagate the message back to the Throwable constructor.

> 
> >You can't do that, though--the token types and display formats 
> >(since ANTLR3 defaults to Objects for tokens) are defined at the 
> >application level, while the exception classes are library items 
> >and know nothing about the application.  The application's 
> >recognizer(s), though, are subclasses of BaseRecognizer and can 
> >know about application features.
> 
> That doesn't follow.  The recogniser is what is throwing the 
> exception in the first place.  It should be trivial for it to 
> either pass in the token names directly (in addition to the token 
> ids, which it already does), or to pass in some interface that the 
> exception constructor can call to fetch the token names as 
> needed.  (I prefer the former, but the latter is more extensible 
> and will lead to less API fluctuation.)

The Java version passes the input stream when creating exceptions, not token information.  I suppose that the critical information could be passed in an object via a "getErrorInfo()" method from BaseRecognizer.  Of course, you would probably need a "getSetDisplay()", a "getRangeDisplay()" and maybe a few other new methods to add to BaseRecognizer.

> 
> >Actually, I thought that it was good that you raised the point--I 
> >just responded that it was not a good solution  at this time, 
> >since localization is an important factor for (commercial) apps.
> 
> I don't see that this hinders localisation much, especially since 
> the GetErrorMessage overridable would still be there, permitting 
> central overriding of all the messages.
> 
> I guess it does make finding the specific text that needs 
> translating a little harder, but that's easily mitigated by making 
> the exceptions use a string lookup table rather than hard-coding 
> string constants.  Then the standard strings could be localised 
> simply by updating that table.

ST is much cleaner for that purpose, just not universal.  Hard coding a set of substrings to be matched and replaced would be error-prone.

> 
> >The ANTLR 3 exception management (tool, not runtime) is pretty 
> >decent, but the runtime support is still in need of work, largely 
> >because the current implementation was designed for 
> >transportability across target language implementations and Ter 
> >could not assume the existence of StringTemplate support when he 
> >wrote it.
> 
> Fair enough.  That's a good assumption to hold, even now.  I still 
> don't think that invalidates my point, though.
> 

I never said that it did, just that pushing string construction into the exception classes affects localization and should not be done as a quick fix.  Ter's response of adding a bug report was the right response from my perspective--usability issues often require deliberation, and this is certainly a case where there is likely to be a better solution.

--Loring

> -- 
> Gavin Lambert, Mirality Systems
> 
> 
> ----
> Anyone who goes to a psychiatrist ought to have their head 
> examined.
> 
> Few women admit their age.  Few men act theirs.
> 
> 




      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080417/ba8dbd74/attachment.html 

From mikearace at hotmail.com  Fri Apr 18 00:05:59 2008
From: mikearace at hotmail.com (Mike Arace)
Date: Fri, 18 Apr 2008 03:05:59 -0400
Subject: [antlr-interest] Problem parsing double quotes
In-Reply-To: <BAY0-MC7-F7DjKvOJgB002a450c@bay0-mc7-f7.bay0.hotmail.com>
References: <BAY118-W3587699C39EDCCDA06B9B1B1E50@phx.gbl>
	<BAY0-MC7-F7DjKvOJgB002a450c@bay0-mc7-f7.bay0.hotmail.com>
Message-ID: <BAY118-W818733951204EA6B2D6CEB1E40@phx.gbl>


Hi Gavin,

Thanks for the response.  

I do not specify any lexer rules in my grammar.  When I reactivated the console (I had turned it off a while back... thanks for the reminder) I see the following output:

line 2:20 mismatched character '"' expecting '<EOF>'
line 2:45 mismatched character '"' expecting '<EOF>'
line 2:47 mismatched character ';' expecting '<EOF>'
line 3:18 mismatched character '{' expecting '<EOF>'
line 4:17 mismatched character '"' expecting '<EOF>'
line 4:81 mismatched character '"' expecting '<EOF>'
line 4:83 mismatched character ';' expecting '<EOF>'
line 5:0 mismatched character '}' expecting '<EOF>'

Given that those are the exact characters that seem to be missing, that is a positive development, although I still don't know why.

When I step through the program, the dropped tokens seem to occur after the Lexer has been initialized correctly, when the CommonTokenStream attempts to create its "tokens" ArrayLIst.

Here is the guts of the grammar to get the output:

-- Grammar below --

createTrigger 
    :   ('CREATE' | 'REPLACE' ) 'TRIGGER' 'ON'
            'TABLE' objectName ('BEFORE' | 'AFTER') tableOperation
            'AS' triggerBody 'ENDTRIGGER';

objectName
    :    ObjectName;

tableOperation
    :    'INSERT' | 'UPDATE' | 'DELETE';

triggerBody
    :    (~('ENDTRIGGER'))*

ObjectName
    :    ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' )*;

WS 
    :    ( ' ' | '\t' | '\n' | '\r' )+;

-- Grammar above --

Thanks for the assistance,
Mike

> Date: Thu, 17 Apr 2008 21:10:26 +1200
> To: mikearace at hotmail.com; antlr-interest at antlr.org
> From: antlr at mirality.co.nz
> Subject: Re: [antlr-interest] Problem parsing double quotes
> 
> At 18:39 17/04/2008, Mike Arace wrote:
> >I am working on a grammar that seems to have run into a snag.  It 
> >seems as if the Antlr lexer or parser is eating my doulble quotes 
> >and adjacent characters.
> [...]
> >Does anyone have any idea as to what can be happening?
> 
> Do you have any lexer rules that refer to quote marks?
> 
> Do you see any error output in the console when you run it?
> 
> Can you post a complete minimal-reproduction grammar?
> 

_________________________________________________________________
Pack up or back up?use SkyDrive to transfer files or keep extra copies. Learn how.
http://www.windowslive.com/skydrive/overview.html?ocid=TXT_TAGLM_WL_Refresh_skydrive_packup_042008
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/2110ff41/attachment-0001.html 

From hharalambiev at gmail.com  Fri Apr 18 00:10:19 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 10:10:19 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <480785BD.8040206@gmx.de>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
	<480780EC.6030908@gmx.de>
	<aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>
	<480785BD.8040206@gmx.de>
Message-ID: <aa71f710804180010g5f4c07bbvfdf9999e3c252cf@mail.gmail.com>

Hi Johannes,

I don't understand what's the benefit of the two brackets.

When I write {{$r::flag = false;}} the code that ANTLR produces is
"{((r_scope)r_stack.peek()).flag = false;}",
i.e. the brackets are added also, but they are still in "if
(backtracking == 0)" statement, which is the check I want to skip
somehow.

Hari

On 4/17/08, Johannes Luber <jaluber at gmx.de> wrote:
>
> Haralambi Haralambiev schrieb:
>
> > Hello Johannes,
> >
> > So, if I understand correctly, you suggest to have the following (using
> > a scope):
> >
> > r2
> > : {$r::flag}? Token1 -> ^(NODE Token1)
> > | Token1
> > ;
> >
> > If the above is a correct assumption, then how can I set the scope
> > variable, as I could only think of the following way:
> >
> > r
> > scope {
> >  boolean flag;
> > }
> > : Token1^ Token2!
> >    {$r::flag = true;}    r2
> > | Token1^
> >  {$r::flag = false;}
> >  r2
> > ;
> >
> > This solution, however, will fail, as the action for setting the scope
> > variable will not be executed until the backtracking is over. But I need
> > this variable set, as it will be used as a predicate for the parsing. Thus,
> > we have a catch-22 situation.
> >
> > A solution I could think of is not to have two alternatives for r2, but
> > rather construct the CommonTree manually with java code and within to use
> > the knowledge of the boolean flag. But I dislike this solution and am open
> > to suggestions.
> >
>
> Try using {{$r::flag = true;}}.
>
> Johannes
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/fba573e4/attachment.html 

From hharalambiev at gmail.com  Fri Apr 18 00:18:51 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 10:18:51 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <-1912081541706582629@unknownmsgid>
References: <20080417203125.0433E11EC24@www.antlr.org>
	<-1912081541706582629@unknownmsgid>
Message-ID: <aa71f710804180018q4c2871f6udbbe9551e643ccfd@mail.gmail.com>

Hello Jim and Gavin,

Thanks for the suggestions.

However, with the syntax suggested by Gavin, the problem still persists -
the synpred2_fragment method still contains the "if (!flag)" statement. By
the way - is there somewhere I could read regarding why is this check added
into this method?

And, Jim, your syntax fails to generate anything with the following
statement: "expecting SEMI, found '->'" - this is right before the "->
Token1" statement.

By the way, why do you refer the flag in the predicate with "$flag"? This
renders an error on my side ("attribute is not a token, parameter, or return
value: flag"), but with "{flag}?" it doesn't fail.

Thanks again for your feedback. I hope we could resolve the problem soon.

Hari

On 4/18/08, Jim Idle <jimi at temporal-wave.com> wrote:
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Gavin Lambert
> > Sent: Thursday, April 17, 2008 1:31 PM
> > To: Haralambi Haralambiev; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Problems with semantic predicates
> >
> > At 04:02 18/04/2008, Haralambi Haralambiev wrote:
> > >r2[boolean flag]
> > >:{flag}? Token1 -> ^(NODE Token1)
> > >|Token1
> > >;
> > [...]
> > >In the example above - the method synpred2_fragment() contains a
> > >statement if ( !(flag) ) but the variable flag cannot be resolved.
> >
> > As Johannes has already said, the problem is that the predicate is
> > getting hoisted.  However, I think there's another way to get it
> > to work -- rewrite the rule so that it doesn't *need* to hoist the
> > predicate:
>
>
> Right idea mate, slightly wrong syntax ;-) :
>
>
> r2[boolean flag]
>         :  Token1
>
>                  {$flag}?       -> ^(NODE Token1)
>                                 -> Token1
>         ;
>
>
> >
> > r2[boolean flag]
> >    :  Token1
> >       ( {$flag}? => -> ^(NODE Token1)
> >       | -> Token1
> >       )
> >    ;
> >
>
>
> Jim
>
>
> No virus found in this outgoing message.
> Checked by AVG.
> Version: 7.5.524 / Virus Database: 269.23.0/1382 - Release Date: 4/16/2008
> 5:34 PM
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/c13480cc/attachment.html 

From hharalambiev at gmail.com  Fri Apr 18 00:28:32 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 10:28:32 +0300
Subject: [antlr-interest] Problem parsing double quotes
In-Reply-To: <BAY118-W818733951204EA6B2D6CEB1E40@phx.gbl>
References: <BAY118-W3587699C39EDCCDA06B9B1B1E50@phx.gbl>
	<BAY0-MC7-F7DjKvOJgB002a450c@bay0-mc7-f7.bay0.hotmail.com>
	<BAY118-W818733951204EA6B2D6CEB1E40@phx.gbl>
Message-ID: <aa71f710804180028j6fb8fa6evfad79157e25793fb@mail.gmail.com>

Hi Mike,

If I have understood
correctly, the input text that you are giving to the lexer contains
the "'", ";" "{" and
"}"
characters, but does not know how to recognize them (as you do not
have a lexer rule for them).

If you do
not want the parser to take into account those tokens, you could add
the following lexer rule:
NotUsed : '\'' | ';' | '{' | '}' {$channel=HIDDEN;};

Another way is to add the tokens to the specific parser rules. For example
(adding the token ';'):

createTrigger
    :   ('CREATE' | 'REPLACE' ) 'TRIGGER' 'ON'
            'TABLE' objectName ('BEFORE' | 'AFTER') tableOperation
            'AS' triggerBody 'ENDTRIGGER' *';'*
    ;

Best Regards,
Hari

On 4/18/08, Mike Arace <mikearace at hotmail.com> wrote:
>
> Hi Gavin,
>
> Thanks for the response.
>
> I do not specify any lexer rules in my grammar.  When I reactivated the
> console (I had turned it off a while back... thanks for the reminder) I see
> the following output:
>
> line 2:20 mismatched character '"' expecting '<EOF>'
> line 2:45 mismatched character '"' expecting '<EOF>'
> line 2:47 mismatched character ';' expecting '<EOF>'
> line 3:18 mismatched character '{' expecting '<EOF>'
> line 4:17 mismatched character '"' expecting '<EOF>'
> line 4:81 mismatched character '"' expecting '<EOF>'
> line 4:83 mismatched character ';' expecting '<EOF>'
> line 5:0 mismatched character '}' expecting '<EOF>'
>
> Given that those are the exact characters that seem to be missing, that is
> a positive development, although I still don't know why.
>
> When I step through the program, the dropped tokens seem to occur after
> the Lexer has been initialized correctly, when the CommonTokenStream
> attempts to create its "tokens" ArrayLIst.
>
> Here is the guts of the grammar to get the output:
>
> -- Grammar below --
>
> createTrigger
>     :   ('CREATE' | 'REPLACE' ) 'TRIGGER' 'ON'
>             'TABLE' objectName ('BEFORE' | 'AFTER') tableOperation
>             'AS' triggerBody 'ENDTRIGGER';
>
> objectName
>     :    ObjectName;
>
> tableOperation
>     :    'INSERT' | 'UPDATE' | 'DELETE';
>
> triggerBody
>     :    (~('ENDTRIGGER'))*
>
> ObjectName
>     :    ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' )*;
>
> WS
>     :    ( ' ' | '\t' | '\n' | '\r' )+;
>
> -- Grammar above --
>
> Thanks for the assistance,
> Mike
>
> > Date: Thu, 17 Apr 2008 21:10:26 +1200
> > To: mikearace at hotmail.com; antlr-interest at antlr.org
> > From: antlr at mirality.co.nz
> > Subject: Re: [antlr-interest] Problem parsing double quotes
> >
> > At 18:39 17/04/2008, Mike Arace wrote:
> > >I am working on a grammar that seems to have run into a snag. It
> > >seems as if the Antlr lexer or parser is eating my doulble quotes
> > >and adjacent characters.
> > [...]
> > >Does anyone have any idea as to what can be happening?
> >
> > Do you have any lexer rules that refer to quote marks?
> >
> > Do you see any error output in the console when you run it?
> >
> > Can you post a complete minimal-reproduction grammar?
> >
>
> ------------------------------
> Pack up or back up?use SkyDrive to transfer files or keep extra copies. Learn
> how.<http://www.windowslive.com/skydrive/overview.html?ocid=TXT_TAGLM_WL_Refresh_skydrive_packup_042008>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/892ba9c6/attachment.html 

From peter.nann at vecommerce.com.au  Fri Apr 18 00:48:50 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Fri, 18 Apr 2008 17:48:50 +1000
Subject: [antlr-interest] Rewrite rules - preserve internal whitespace?
References: <1080AEABD1979E42A15840F08084B67BFE3AD1@vcmsydexh.vecommerce.com>
	<20080417123929.188787E89E@in07.sjc.mx.trendmicro.com>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3ADB@vcmsydexh.vecommerce.com>


Thanks Gavin.

You've clarified that at least I sort of know what's going on.  ;-)

Our resident Java Guru here has just whipped up a hand-written parser in
an afternoon that is close to doing what we want...

I think ANTLR was not quite suited to our purposes....
Maybe too many fancy features for our simple task at hand.

Or more likely, I just didn't manage to get a handle on it all quickly
enough and pare it down to just what we needed.

Cheers.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Thursday, 17 April 2008 10:39 PM
To: Peter Nann; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Rewrite rules - preserve internal
whitespace?

At 00:30 18/04/2008, Peter Nann wrote:
 >Rewrite rules don't maintain the whitespace (and probably not
 >comments) internal to the construct being re-written?

They will if you include them.  Otherwise they won't.

 >Will still come out:
 >"x := 1"
 >
 >Is this right?

I believe so, yes.  You're throwing away the whitespace tokens in the
input and including only those that you "care about".

 >Soooo, having rewrite rules for complex (lets say nested),
>multi-line structures is going to output probably one gigantic
>line???

Not necessarily.  It will output whatever you tell it to output.  If you
put newlines in your template, you'll get newlines in your output.  If
you include a token that contains a newline, you'll get newlines in your
output.

If you want to maintain the newlines from the input, then you'll need to
avoid filtering them out when doing the lexing/parsing.  So no hidden
channels.  (Or at least, if you do still want to put them on the hidden
channel you'll have to do something more complicated to pull them back
into your template later on.)


From antlr at mirality.co.nz  Fri Apr 18 02:01:53 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 21:01:53 +1200
Subject: [antlr-interest] C# Error Recovery
In-Reply-To: <121217.36727.qm@web55907.mail.re3.yahoo.com>
References: <121217.36727.qm@web55907.mail.re3.yahoo.com>
Message-ID: <20080418090205.43A7711EACF@www.antlr.org>

At 11:26 18/04/2008, Loring Craymer wrote:
>The Java version passes the input stream when creating 
>exceptions, not token information.  I suppose that the critical 
>information could be passed in an object via a "getErrorInfo()" 
>method from BaseRecognizer.  Of course, you would probably need a 
>"getSetDisplay()", a "getRangeDisplay()" and maybe a few other 
>new methods to add to BaseRecognizer.

Yes, that's basically what I was suggesting; pass enough 
information to the exception constructor so that it can construct 
the error message it needs to, whether directly as parameters or 
indirectly via passing the recogniser itself or an interface to 
get error information.

Also, wherever possible this information should be cached 
(separately) in the exception instance as well, so that the 
exception message can be rejiggered later without having to refer 
to anything else (except a string lookup table).

>ST is much cleaner for that purpose, just not universal.  Hard 
>coding a set of substrings to be matched and replaced would be 
>error-prone.

Well, you should never try to replace sub-strings when doing 
localisation anyway.  At minimum a whole sentence, but preferably 
an entire "unit" -- in this case, the whole error.

This is trivial in C#, you just use a different format string; eg. 
your code looks like this:
   string error = String.Format(Resources.SomeError, foo, bar, 
baz);
(where foo, bar, and baz are bits of interesting data that you 
might want to include in the error message)

The English resources might be:
   Error 14: "{0}" is not a valid value for "{1}" in "{2}".
And the French resources might be:
   Erreur 14: Dans "{2}", "{0}" est une valeur incorrecte pour 
"{1}".

The important point being that inserted components should be able 
to be reordered, duplicated, and even left out entirely, as 
appropriate.

(Also, I apologise to any French speakers if I've butchered the 
language; I don't actually speak French so I just used an online 
translator.)

I imagine StringTemplate can be used to do this sort of thing as 
well (I've never really looked at it too closely, so I don't 
know).  Still, even without StringTemplate, if there isn't 
anything built in to a given language to do this, it's pretty easy 
to write one.  (I've done it before.)

>I never said that it did, just that pushing string construction 
>into the exception classes affects localization and should not be 
>done as a quick fix.  Ter's response of adding a bug report was 
>the right response from my perspective--usability issues often 
>require deliberation, and this is certainly a case where there is 
>likely to be a better solution.

True.


From Ramon.Verbruggen at quintiq.com  Fri Apr 18 02:11:11 2008
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Fri, 18 Apr 2008 11:11:11 +0200
Subject: [antlr-interest] Optional keyword causes ambiguity in	parser
In-Reply-To: <4804DE94.BB97.0087.0@quintiq.com>
References: <4804DE94.BB97.0087.0@quintiq.com>
Message-ID: <480881CE.BB97.0087.0@quintiq.com>

OK, judging from the total lack of reactions, I either asked a really
stupid question (been there, done that, didn't get the t-shirt), or I
asked something that's been explained so often that no one could be
bothered to explain it again (in this case I suck at searching the
internet, which would kind of surprise me)

Generally, if I have a largish grammar in perfect working order, and I
want to make one keyword optional, but this causes ANTLR to have
ambiguity in the parser (Input such as 'Identifier' can be matched in
multiple ways), how would you solve this?

ANTLR hints at backtracking, left factoring and syntactic predicates.
Backtracking is not really an option for performance reasons (that, and
backtracking feels like a last resort for when nothing else really
works).

Left factoring could be an option. Unfortunately, the paths through the
grammar that ANTLR takes to arrive at the ambiguity (as visualized by
ANTLRWorks), are rather long, since they go through all the expressions
in the 'precedence ladder', so these paths involve 20+ parser rules. I
don't really see how to left factor that big a chunk of my grammar.

So, I guess this leaves predicates as an option. The grammar I'm trying
to change is rather clean, it just builds an AST and does not use any
predicates so far, which (partially) explains my lack of knowledge on
the predicates. 

After this longwinded prose, the real question would then be: How could
I use predicates to solve the ambiguity in my grammar?

Any input is appreciated!

Ramon Verbruggen



>>> "Ramon Verbruggen" <Ramon.Verbruggen at quintiq.com> wrote:
> I am working on a grammar for a Delphi/Java like programming
language.
> In a statementbody the return statement can only be the last
statement,
> if it is present at all.
> 
> I have made a small grammar to illustrate the problem:
> 
> grammar ANTLRQuill;
> 
> statementBody:	statementList returnStatement? EOF;
> returnStatement:	'return' expression ';'*; // <= 'return' should
be optional
> statementList:	(statement ';'*)*;
> statement:	addressable;
> expression:	addressable( '*' addressable)*;
> addressable:	Identifier ( '.' Identifier '()' )*;
> Identifier:	('a'..'z')+;
> 
> 
> Now, I would like to make the 'return' keyword optional, but when I
> just put " 'return' ?", ANTLR rightfully
> complains that it has several ways of matching Identifier, and that
it
> will always choose alternative one. I understand the warning, and I
see
> that ANTLR's right, but I don't see how else to solve this problem.
> 
> I've tried a lot of different possibilities already, and searched
the
> archives and the ANTLR book, but haven't been able to find a way to
make
> the return keyword optional. Obviously, the actual grammar is much
> bigger and a bit more complex than the example above, so especially
> rules statement, expression and addressableElement have more
> alternatives, and the expression hierarchy has the usual 'ladder' of
> expression types to obtain the correct levels of precedence.



This message contains information that may be privileged or confidential
and is the property of Quintiq. It is only intended for the person to
whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute or use
this message or any part thereof. If you have received this message in
error, please notify the sender immediately and delete all copies of
this message. Please note that e-mails are susceptible to change,
therefore they are not binding.

From antlr-interest at antlr.org  Fri Apr 18 02:20:01 2008
From: antlr-interest at antlr.org (antlr-interest at antlr.org)
Date: Fri, 18 Apr 2008 02:20:01 -0700 (PDT)
Subject: [antlr-interest] Dear antlr-interest@antlr.org April 87% 0FF
Message-ID: <20080418121347.4465.qmail@edunet-static-9.87-197-68.telecom.sk>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/8ddaac02/attachment.html 

From antlr at mirality.co.nz  Fri Apr 18 02:42:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 21:42:30 +1200
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804180018q4c2871f6udbbe9551e643ccfd@mail.gmail.com
 >
References: <20080417203125.0433E11EC24@www.antlr.org>
	<-1912081541706582629@unknownmsgid>
	<aa71f710804180018q4c2871f6udbbe9551e643ccfd@mail.gmail.com>
Message-ID: <20080418094243.19B7A11E9DD@www.antlr.org>

At 19:18 18/04/2008, Haralambi Haralambiev wrote:
>However, with the syntax suggested by Gavin, the problem still 
>persists - the synpred2_fragment method still contains the "if 
>(!flag)" statement. By the way - is there somewhere I could read 
>regarding why is this check added into this method?

The synpreds themselves are only being generated because you have 
backtrack=true, so it's trying to hoist the predicate far enough 
to figure out whether it should be going down that path before it 
bothers trying (and possibly throwing an exception, which is bad 
for performance).

>By the way, why do you refer the flag in the predicate with 
>"$flag"? This renders an error on my side ("attribute is not a 
>token, parameter, or return value: flag"), but with "{flag}?" it 
>doesn't fail.

That's because you're supposed to refer to parameters (and return 
values, and labels, etc) that way, because the code generator is 
free to rename it if it wants to.

This error is actually telling you that the predicate is being 
hoisted somewhere where it won't work -- if you turn off 
backtracking (so that it doesn't create a synpred to hoist your 
sempred into), then this error goes away as well.

Anyway, going back to your original grammar, there's another 
problem with it (which is presumably why you added backtracking in 
the first place).  In rule "r", you have a common left prefix, 
which hurts performance and sometimes causes incorrect behaviour 
(when ANTLR can't look ahead far enough to resolve the 
ambiguity).  Removing this (and disabling backtracking) yields a 
working grammar:

grammar test;

options {
   output=AST;
   ASTLabelType=CommonTree;
   //backtrack=true;
   //memoize=true;
}

tokens {
   NODE;
}

r : Token1^
     ( Token2! r2[true]
     | r2[false]
     )
   ;

r2[boolean flag]
   : Token1
     ( {$flag}? -> ^(NODE Token1)
     | -> Token1
     )
   ;

Token1 : 'TOKEN1';
Token2 : 'TOKEN2';


However even with this version, if backtracking is turned on then 
the parameter will get hoisted inappropriately again.  It looks 
like using scopes is the only answer after all, if you want to 
keep the backtracking and this particular rule structure.

I'm not really sure why it still wants to hoist it in this case, 
since it has no bearing on the actual decision tree.

Of course, another option is to remove the parameter altogether:

r : Token1^
     ( Token2! r2
     | Token1
     )
   ;

r2 : Token1 -> ^(NODE Token1) ;


From hharalambiev at gmail.com  Fri Apr 18 03:07:25 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 13:07:25 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <48086d13.07a6420a.3525.0d9fSMTPIN_ADDED@mx.google.com>
References: <20080417203125.0433E11EC24@www.antlr.org>
	<-1912081541706582629@unknownmsgid>
	<aa71f710804180018q4c2871f6udbbe9551e643ccfd@mail.gmail.com>
	<48086d13.07a6420a.3525.0d9fSMTPIN_ADDED@mx.google.com>
Message-ID: <aa71f710804180307t40c23417pbd98ac5d5caf8874@mail.gmail.com>

Hello Gavin,

The problem is that the grammar that I am working on is far more complex and
the backtracking option is actually needed. Thus, I need to find a solution
that will not require disabling that option.

Using scope variables would be a great solution, but as I have stated in
another reply - how can I execute actions regardless whether the parser is
in backtracking mode or not. I.e. I need to have a similar generation as
with the @init actions, but during parsing.

So, with my initial grammar I will have something like that:
r
scope {
boolean flag;
}
: Token1^ Token2!
{$r::flag = true;}
r2
| Token1^
{$r::flag = false;}
r2
;

r2
: {$r::flag}? Token1 -> ^(NODE Token1)
| Token1
;

which generates compilable classes. But during the execution the flag is
never set, as actions such as "{$r::flag = true;}" will only execute when
"backtracking = 0".

So, a simple question - can I execute arbitrary action when
backtracking, but not on @init?


Hari

On 4/18/08, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
> At 19:18 18/04/2008, Haralambi Haralambiev wrote:
>
> > However, with the syntax suggested by Gavin, the problem still persists
> > - the synpred2_fragment method still contains the "if (!flag)" statement. By
> > the way - is there somewhere I could read regarding why is this check added
> > into this method?
> >
>
> The synpreds themselves are only being generated because you have
> backtrack=true, so it's trying to hoist the predicate far enough to figure
> out whether it should be going down that path before it bothers trying (and
> possibly throwing an exception, which is bad for performance).
>
> By the way, why do you refer the flag in the predicate with "$flag"? This
> > renders an error on my side ("attribute is not a token, parameter, or return
> > value: flag"), but with "{flag}?" it doesn't fail.
> >
>
> That's because you're supposed to refer to parameters (and return values,
> and labels, etc) that way, because the code generator is free to rename it
> if it wants to.
>
> This error is actually telling you that the predicate is being hoisted
> somewhere where it won't work -- if you turn off backtracking (so that it
> doesn't create a synpred to hoist your sempred into), then this error goes
> away as well.
>
> Anyway, going back to your original grammar, there's another problem with
> it (which is presumably why you added backtracking in the first place).  In
> rule "r", you have a common left prefix, which hurts performance and
> sometimes causes incorrect behaviour (when ANTLR can't look ahead far enough
> to resolve the ambiguity).  Removing this (and disabling backtracking)
> yields a working grammar:
>
> grammar test;
>
> options {
>  output=AST;
>  ASTLabelType=CommonTree;
>  //backtrack=true;
>  //memoize=true;
> }
>
> tokens {
>  NODE;
> }
>
> r : Token1^
>    ( Token2! r2[true]
>    | r2[false]
>    )
>  ;
>
> r2[boolean flag]
>  : Token1
>    ( {$flag}? -> ^(NODE Token1)
>    | -> Token1
>    )
>  ;
>
> Token1 : 'TOKEN1';
> Token2 : 'TOKEN2';
>
>
> However even with this version, if backtracking is turned on then the
> parameter will get hoisted inappropriately again.  It looks like using
> scopes is the only answer after all, if you want to keep the backtracking
> and this particular rule structure.
>
> I'm not really sure why it still wants to hoist it in this case, since it
> has no bearing on the actual decision tree.
>
> Of course, another option is to remove the parameter altogether:
>
> r : Token1^
>    ( Token2! r2
>    | Token1
>    )
>  ;
>
> r2 : Token1 -> ^(NODE Token1) ;
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/17065a2d/attachment.html 

From phulsmeijer at xebic.com  Fri Apr 18 03:16:30 2008
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Fri, 18 Apr 2008 12:16:30 +0200
Subject: [antlr-interest] Forcing action into DFA
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC62116886B@srvxdcex.xebic.com>

All,

 

Is there a way to force an action into the prediction DFA although the
alternatives are not ambiguous? An semantic predicate wouldn't work
because it will not be hoisted into the DFA. I want to execute an action
before the alternatives of a rule get evaluated.

 

E.g.:

 

rule:

                : TOKEN

                | HIDDENTOKEN

                ;

 

The HIDDENTOKEN is on a channel that is not visible to the parser but
will be switched to a channel that is, by an action. To make this work
with DFA prediction I need to execute the action that will make
HIDDENTOKEN visible before the alternatives are looked at. How can I
make this happen?

 

Gr, patrick.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/a0aa4732/attachment.html 

From antlr at mirality.co.nz  Fri Apr 18 03:31:01 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 22:31:01 +1200
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804180307t40c23417pbd98ac5d5caf8874@mail.gmail.com
 >
References: <20080417203125.0433E11EC24@www.antlr.org>
	<-1912081541706582629@unknownmsgid>
	<aa71f710804180018q4c2871f6udbbe9551e643ccfd@mail.gmail.com>
	<48086d13.07a6420a.3525.0d9fSMTPIN_ADDED@mx.google.com>
	<aa71f710804180307t40c23417pbd98ac5d5caf8874@mail.gmail.com>
Message-ID: <20080418103125.DC2D111E9D4@www.antlr.org>

At 22:07 18/04/2008, Haralambi Haralambiev wrote:
>The problem is that the grammar that I am working on is far more 
>complex and the backtracking option is actually needed. Thus, I 
>need to find a solution that will not require disabling that 
>option.

The change I mentioned right at the end of the post (involving 
getting rid of the parameter) should do that.


From hharalambiev at gmail.com  Fri Apr 18 03:39:31 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 13:39:31 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <4808787e.1781420a.0b9e.314dSMTPIN_ADDED@mx.google.com>
References: <20080417203125.0433E11EC24@www.antlr.org>
	<-1912081541706582629@unknownmsgid>
	<aa71f710804180018q4c2871f6udbbe9551e643ccfd@mail.gmail.com>
	<48086d13.07a6420a.3525.0d9fSMTPIN_ADDED@mx.google.com>
	<aa71f710804180307t40c23417pbd98ac5d5caf8874@mail.gmail.com>
	<4808787e.1781420a.0b9e.314dSMTPIN_ADDED@mx.google.com>
Message-ID: <aa71f710804180339g2d856d87s7c1802560f6e96be@mail.gmail.com>

Sorry, but I should have been more clear.

The
example above is just a representation of the problem. In reality, in
the grammar I am working on, the r and r2 are not consequent rules. r2
will eventually be called by some rule that is in the chain initiated
by r.
However, reworking the rules will be tricky, to say the least.

I assume that instead of a rewriting rule, I could use Java code for bulding
the tree, taking into account the already set scope variable, but I was
looking for a solution that will not require such manual work.

That's why I was looking for a way to always execute some action, even in
backtracking mode.

Hari

On 4/18/08, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
> At 22:07 18/04/2008, Haralambi Haralambiev wrote:
>
> > The problem is that the grammar that I am working on is far more complex
> > and the backtracking option is actually needed. Thus, I need to find a
> > solution that will not require disabling that option.
> >
>
> The change I mentioned right at the end of the post (involving getting rid
> of the parameter) should do that.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/bb4328ce/attachment.html 

From antlr at mirality.co.nz  Fri Apr 18 03:45:40 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 18 Apr 2008 22:45:40 +1200
Subject: [antlr-interest] Optional keyword causes ambiguity  in	parser
In-Reply-To: <480881CE.BB97.0087.0@quintiq.com>
References: <4804DE94.BB97.0087.0@quintiq.com>
	<480881CE.BB97.0087.0@quintiq.com>
Message-ID: <20080418104551.C4A3911EC21@www.antlr.org>

At 21:11 18/04/2008, Ramon Verbruggen wrote:
 >Generally, if I have a largish grammar in perfect working order, 

 >and I want to make one keyword optional, but this causes ANTLR 
to
 >have ambiguity in the parser (Input such as 'Identifier' can be
 >matched in multiple ways), how would you solve this?
[...]
 >> statementBody:	statementList returnStatement? EOF;
 >> returnStatement:	'return' expression ';'*;
 >> // <= 'return' should be optional
 >> statementList:	(statement ';'*)*;
 >> statement:	addressable;
 >> expression:	addressable( '*' addressable)*;
 >> addressable:	Identifier ( '.' Identifier '()' )*;
 >> Identifier:	('a'..'z')+;

Think of what decisions ANTLR has to make (assuming you've made it 
optional), and you'll see why it thinks it's ambiguous.

Let's take as input "foo;", which is an Identifier followed by a 
';'.

We start out with a statementBody, which then has a statementList 
optionally followed by a returnStatement.

- statementList: statement followed by ';'s.  An addressable is a 
statement.  An Identifier is an addressable.  Valid path.
- returnStatement: can be just an expression if 'return' is 
optional.  An Identifier is an expression.  Valid path.

statementBody is allowed to have zero or more statements followed 
by zero or one returnStatement.  But how is it to know whether the 
Identifier it just saw is a statement or a 
returnStatement?  Answer: it can't.

Now, you've said that you want the "return" keyword to be 
optional.  One way you could do that would be to permit an 
expression as a valid statement:
   statementBody:	statementList returnStatement? EOF;
   returnStatement: 'return' expression;
   statementList:	(statement ';'*)*;
   statement:	expression;
   expression:	addressable( '*' addressable)*;
   addressable:	Identifier ( '.' Identifier '()' )*;
   Identifier:	('a'..'z')+;

There are two downsides to this, of course; the first is that 
you've widened the possible inputs (which may not be acceptable), 
and the second is that it isn't very easy to pick off the final 
expression statement to give it special handling, if you want to.

Another thing you could do is to remove 'addressable' from the 
list of possible statements.  So long as anything that can match 
'expression' cannot also match 'statement', the ambiguity is gone.

Yet another thing is to re-examine the parentheses in 
'addressable'.  Is 'Identifier' really supposed to be an 
addressable by itself?  Should the parentheses be outside the loop 
instead (so that 'foo' isn't an addressable, but 'foo()' is)?

If you can't change the input language in this way, then you'll 
have to resolve the ambiguity with sempreds.  The main one (since 
it's in a loop) is the 'addressable' in 'statement' -- you have to 
add a sempred telling it to fail any addressables that should be 
interpreted as return statements instead.  Presumably they're 
distinct enough that you can tell the difference.  (If you can't 
tell the difference, then you probably shouldn't be trying to 
remove that keyword.)

Beyond these suggestions, I'm not really sure.  I've usually been 
working with DSLs that I'm in full control of, so I've tended to 
designed languages that are easy to parse :)


From jaluber at gmx.de  Fri Apr 18 04:14:06 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 18 Apr 2008 13:14:06 +0200
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804180010g5f4c07bbvfdf9999e3c252cf@mail.gmail.com>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>	
	<480780EC.6030908@gmx.de>	
	<aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>	
	<480785BD.8040206@gmx.de>
	<aa71f710804180010g5f4c07bbvfdf9999e3c252cf@mail.gmail.com>
Message-ID: <4808827E.7000407@gmx.de>

Haralambi Haralambiev schrieb:
> Hi Johannes,
> 
> I don't understand what's the benefit of the two brackets.
> 
> When I write {{$r::flag = false;}} the code that ANTLR produces is 
> "{((r_scope)r_stack.peek()).flag = false;}", 
> i.e. the brackets are added also, but they are still in "if (backtracking == 0)" statement, which is the check I want to skip somehow.
> 
> Hari

The two braces (brackets are "[]") should be the syntax which enables an 
action to be executed always, even during backtracking. But either you 
are using an too old version of ANTLR or Ter didn't implement this 
variant after all.

Johannes
> 
> On 4/17/08, *Johannes Luber* <jaluber at gmx.de <mailto:jaluber at gmx.de>> wrote:
> 
>     Haralambi Haralambiev schrieb:
> 
>         Hello Johannes,
> 
>         So, if I understand correctly, you suggest to have the following
>         (using a scope):
> 
>         r2
>         : {$r::flag}? Token1 -> ^(NODE Token1)
>         | Token1
>         ;
> 
>         If the above is a correct assumption, then how can I set the
>         scope variable, as I could only think of the following way:
> 
>         r
>         scope {
>          boolean flag;
>         }
>         : Token1^ Token2!
>            {$r::flag = true;}    r2
>         | Token1^
>          {$r::flag = false;}
>          r2
>         ;
> 
>         This solution, however, will fail, as the action for setting the
>         scope variable will not be executed until the backtracking is
>         over. But I need this variable set, as it will be used as a
>         predicate for the parsing. Thus, we have a catch-22 situation.
> 
>         A solution I could think of is not to have two alternatives for
>         r2, but rather construct the CommonTree manually with java code
>         and within to use the knowledge of the boolean flag. But I
>         dislike this solution and am open to suggestions.
> 
> 
>     Try using {{$r::flag = true;}}.
> 
>     Johannes
> 
> 


From jaluber at gmx.de  Fri Apr 18 04:21:18 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 18 Apr 2008 13:21:18 +0200
Subject: [antlr-interest] C++ Parser
In-Reply-To: <2b5f47650804171615k49684758p64299ed0d86d5e91@mail.gmail.com>
References: <2b5f47650804171615k49684758p64299ed0d86d5e91@mail.gmail.com>
Message-ID: <4808842E.9030001@gmx.de>

alan brown schrieb:
> Has anyone got a grammar/parser for c++ that is ANTLRv3 compatible?  
> David Wigg wrote something for ANTLR 2.7.  Has this project been tackled 
> for V3?
> 
> alan

AFAIK, C++ requires capabilities of ANTLR 3.1. I don't believe that 
anyone tackled C++ yet, at least in an open source version.

Johannes

From hharalambiev at gmail.com  Fri Apr 18 05:12:10 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 15:12:10 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <4808827E.7000407@gmx.de>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
	<480780EC.6030908@gmx.de>
	<aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>
	<480785BD.8040206@gmx.de>
	<aa71f710804180010g5f4c07bbvfdf9999e3c252cf@mail.gmail.com>
	<4808827E.7000407@gmx.de>
Message-ID: <aa71f710804180512o7df08a1ayfa7c86544feee800@mail.gmail.com>

Hello,

Is there a way to lure Ter's interest to answer whether this braces (sorry
for the mistake ;-) ) functionality is in place?

I am using the latest version, 3.0.1, that is downloadable from the site, so
I guess it's not implemented :-(

Hari

On 4/18/08, Johannes Luber <jaluber at gmx.de> wrote:
>
> Haralambi Haralambiev schrieb:
>
> > Hi Johannes,
> >
> > I don't understand what's the benefit of the two brackets.
> >
> > When I write {{$r::flag = false;}} the code that ANTLR produces is
> > "{((r_scope)r_stack.peek()).flag = false;}", i.e. the brackets are added
> > also, but they are still in "if (backtracking == 0)" statement, which is the
> > check I want to skip somehow.
> >
> > Hari
> >
>
> The two braces (brackets are "[]") should be the syntax which enables an
> action to be executed always, even during backtracking. But either you are
> using an too old version of ANTLR or Ter didn't implement this variant after
> all.
>
> Johannes
>
> >
> > On 4/17/08, *Johannes Luber* <jaluber at gmx.de <mailto:jaluber at gmx.de>>
> > wrote:
> >
> >    Haralambi Haralambiev schrieb:
> >
> >        Hello Johannes,
> >
> >        So, if I understand correctly, you suggest to have the following
> >        (using a scope):
> >
> >        r2
> >        : {$r::flag}? Token1 -> ^(NODE Token1)
> >        | Token1
> >        ;
> >
> >        If the above is a correct assumption, then how can I set the
> >        scope variable, as I could only think of the following way:
> >
> >        r
> >        scope {
> >         boolean flag;
> >        }
> >        : Token1^ Token2!
> >           {$r::flag = true;}    r2
> >        | Token1^
> >         {$r::flag = false;}
> >         r2
> >        ;
> >
> >        This solution, however, will fail, as the action for setting the
> >        scope variable will not be executed until the backtracking is
> >        over. But I need this variable set, as it will be used as a
> >        predicate for the parsing. Thus, we have a catch-22 situation.
> >
> >        A solution I could think of is not to have two alternatives for
> >        r2, but rather construct the CommonTree manually with java code
> >        and within to use the knowledge of the boolean flag. But I
> >        dislike this solution and am open to suggestions.
> >
> >
> >    Try using {{$r::flag = true;}}.
> >
> >    Johannes
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/b428c75a/attachment.html 

From tbrandonau at gmail.com  Fri Apr 18 05:36:53 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 18 Apr 2008 22:36:53 +1000
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804180512o7df08a1ayfa7c86544feee800@mail.gmail.com>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
	<480780EC.6030908@gmx.de>
	<aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>
	<480785BD.8040206@gmx.de>
	<aa71f710804180010g5f4c07bbvfdf9999e3c252cf@mail.gmail.com>
	<4808827E.7000407@gmx.de>
	<aa71f710804180512o7df08a1ayfa7c86544feee800@mail.gmail.com>
Message-ID: <ebc876d70804180536g717abd34g33261435f90a85bc@mail.gmail.com>

http://fisheye2.cenqua.com/changelog/antlr?cs=4048 It's not in 3.0.1
but is in the latest 3.1 daily builds (I can only assume it is fully
implemented now, I haven't tried it).
But if as your example suggests you just want to alter the AST
construction not the actual parsing then I think you want predicated
rewrite rules not semantic predicates (as I believe Jim was suggesting
though I think he gave the wrong syntax). Like:
r2[boolean flag]
 : Token1
   -> {$flag}? ^(NODE Token1)
   -> Token1
 ;
I imagine these won't be hoisted and should only be run after any
backtracking so you shoudln't have any of your other troubles.

Tom.
On Fri, Apr 18, 2008 at 10:12 PM, Haralambi Haralambiev
<hharalambiev at gmail.com> wrote:
> Hello,
>
> Is there a way to lure Ter's interest to answer whether this braces (sorry
> for the mistake ;-) ) functionality is in place?
>
> I am using the latest version, 3.0.1, that is downloadable from the site, so
> I guess it's not implemented :-(
>
> Hari
>
>
>
> On 4/18/08, Johannes Luber <jaluber at gmx.de> wrote:
> > Haralambi Haralambiev schrieb:
> >
> > > Hi Johannes,
> > >
> > > I don't understand what's the benefit of the two brackets.
> > >
> > > When I write {{$r::flag = false;}} the code that ANTLR produces is
> "{((r_scope)r_stack.peek()).flag = false;}", i.e. the brackets are added
> also, but they are still in "if (backtracking == 0)" statement, which is the
> check I want to skip somehow.
> > >
> > > Hari
> > >
> >
> > The two braces (brackets are "[]") should be the syntax which enables an
> action to be executed always, even during backtracking. But either you are
> using an too old version of ANTLR or Ter didn't implement this variant after
> all.
> >
> > Johannes
> >
> >
> > >
> > > On 4/17/08, *Johannes Luber* <jaluber at gmx.de <mailto:jaluber at gmx.de>>
> wrote:
> > >
> > >    Haralambi Haralambiev schrieb:
> > >
> > >        Hello Johannes,
> > >
> > >        So, if I understand correctly, you suggest to have the following
> > >        (using a scope):
> > >
> > >        r2
> > >        : {$r::flag}? Token1 -> ^(NODE Token1)
> > >        | Token1
> > >        ;
> > >
> > >        If the above is a correct assumption, then how can I set the
> > >        scope variable, as I could only think of the following way:
> > >
> > >        r
> > >        scope {
> > >         boolean flag;
> > >        }
> > >        : Token1^ Token2!
> > >           {$r::flag = true;}    r2
> > >        | Token1^
> > >         {$r::flag = false;}
> > >         r2
> > >        ;
> > >
> > >        This solution, however, will fail, as the action for setting the
> > >        scope variable will not be executed until the backtracking is
> > >        over. But I need this variable set, as it will be used as a
> > >        predicate for the parsing. Thus, we have a catch-22 situation.
> > >
> > >        A solution I could think of is not to have two alternatives for
> > >        r2, but rather construct the CommonTree manually with java code
> > >        and within to use the knowledge of the boolean flag. But I
> > >        dislike this solution and am open to suggestions.
> > >
> > >
> > >    Try using {{$r::flag = true;}}.
> > >
> > >    Johannes
> > >
> > >
> > >
> >
> >
>
>

From hharalambiev at gmail.com  Fri Apr 18 07:21:03 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 17:21:03 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <ebc876d70804180536g717abd34g33261435f90a85bc@mail.gmail.com>
References: <aa71f710804170902wd81fb42s9777f32874b3652e@mail.gmail.com>
	<480780EC.6030908@gmx.de>
	<aa71f710804171003m6d78e36ena7db40ccf81df293@mail.gmail.com>
	<480785BD.8040206@gmx.de>
	<aa71f710804180010g5f4c07bbvfdf9999e3c252cf@mail.gmail.com>
	<4808827E.7000407@gmx.de>
	<aa71f710804180512o7df08a1ayfa7c86544feee800@mail.gmail.com>
	<ebc876d70804180536g717abd34g33261435f90a85bc@mail.gmail.com>
Message-ID: <aa71f710804180721j6c6fbaf5rdb4e64eb1dafa9c9@mail.gmail.com>

Hi Thomas,

Thanks a bunch!

That helped me solve my problem. I
feel like a total newbie. I didn't consider that rewrite rules could
have alternatives.

Best Regards,
Hari

On 4/18/08, Thomas Brandon <tbrandonau at gmail.com> wrote:
>
> http://fisheye2.cenqua.com/changelog/antlr?cs=4048 It's not in 3.0.1
> but is in the latest 3.1 daily builds (I can only assume it is fully
> implemented now, I haven't tried it).
> But if as your example suggests you just want to alter the AST
> construction not the actual parsing then I think you want predicated
> rewrite rules not semantic predicates (as I believe Jim was suggesting
> though I think he gave the wrong syntax). Like:
>
> r2[boolean flag]
>   : Token1
>    -> {$flag}? ^(NODE Token1)
>    -> Token1
>
> ;
> I imagine these won't be hoisted and should only be run after any
> backtracking so you shoudln't have any of your other troubles.
>
> Tom.
>
> On Fri, Apr 18, 2008 at 10:12 PM, Haralambi Haralambiev
> <hharalambiev at gmail.com> wrote:
> > Hello,
> >
> > Is there a way to lure Ter's interest to answer whether this braces
> (sorry
> > for the mistake ;-) ) functionality is in place?
> >
> > I am using the latest version, 3.0.1, that is downloadable from the
> site, so
> > I guess it's not implemented :-(
> >
> > Hari
> >
> >
> >
> > On 4/18/08, Johannes Luber <jaluber at gmx.de> wrote:
> > > Haralambi Haralambiev schrieb:
> > >
> > > > Hi Johannes,
> > > >
> > > > I don't understand what's the benefit of the two brackets.
> > > >
> > > > When I write {{$r::flag = false;}} the code that ANTLR produces is
> > "{((r_scope)r_stack.peek()).flag = false;}", i.e. the brackets are added
> > also, but they are still in "if (backtracking == 0)" statement, which is
> the
> > check I want to skip somehow.
> > > >
> > > > Hari
> > > >
> > >
> > > The two braces (brackets are "[]") should be the syntax which enables
> an
> > action to be executed always, even during backtracking. But either you
> are
> > using an too old version of ANTLR or Ter didn't implement this variant
> after
> > all.
> > >
> > > Johannes
> > >
> > >
> > > >
> > > > On 4/17/08, *Johannes Luber* <jaluber at gmx.de <mailto:jaluber at gmx.de
> >>
> > wrote:
> > > >
> > > >    Haralambi Haralambiev schrieb:
> > > >
> > > >        Hello Johannes,
> > > >
> > > >        So, if I understand correctly, you suggest to have the
> following
> > > >        (using a scope):
> > > >
> > > >        r2
> > > >        : {$r::flag}? Token1 -> ^(NODE Token1)
> > > >        | Token1
> > > >        ;
> > > >
> > > >        If the above is a correct assumption, then how can I set the
> > > >        scope variable, as I could only think of the following way:
> > > >
> > > >        r
> > > >        scope {
> > > >         boolean flag;
> > > >        }
> > > >        : Token1^ Token2!
> > > >           {$r::flag = true;}    r2
> > > >        | Token1^
> > > >         {$r::flag = false;}
> > > >         r2
> > > >        ;
> > > >
> > > >        This solution, however, will fail, as the action for setting
> the
> > > >        scope variable will not be executed until the backtracking is
> > > >        over. But I need this variable set, as it will be used as a
> > > >        predicate for the parsing. Thus, we have a catch-22
> situation.
> > > >
> > > >        A solution I could think of is not to have two alternatives
> for
> > > >        r2, but rather construct the CommonTree manually with java
> code
> > > >        and within to use the knowledge of the boolean flag. But I
> > > >        dislike this solution and am open to suggestions.
> > > >
> > > >
> > > >    Try using {{$r::flag = true;}}.
> > > >
> > > >    Johannes
> > > >
> > > >
> > > >
> > >
> > >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/252426c3/attachment.html 

From jimi at temporal-wave.com  Fri Apr 18 07:33:42 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Apr 2008 07:33:42 -0700
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <aa71f710804180512o7df08a1ayfa7c86544feee800@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAHFU88IT2ek2
	5SvFN7s23OQEAAAAA@temporal-wave.com>

Hari,

 

I think that you probably need to step back from the specific thing you are trying to do here and rework the grammar without backtracking. The backtracking option is a good thing for prototyping or when the thing you are going to parser doesn't particularly require speed, but if you use it without regard to the grammar construction you will usually end up in trouble. This is because it masks poor grammar construction, which, if you built up the grammar one 'rule' at a time would become more obvious.  

 

If you are getting syntax errors with conditional rewrites, then there must be something else wrong in there first I suspect. Additionally, I am having trouble seeing why you would 'need' to rewrite the same construct in two different tree shapes. Beware constructing a tree that 'looks' good, as though it isn't  bad way to think through your tree construction, it can make you forget that what you want is an efficient tree structure that has no ambiguities when parsing it. Perhaps you just always need ^(NODE xxx)?

 

You may be reluctant to restart your grammar as you feel you have put a lot of work in to it, but if you start with a blank slate and no backtracking, you will be able to borrow from your original grammar and get a cleaner, faster grammar that won't cause you maintenance headaches. Otherwise, it looks like you will be spending a lot of time on the 'last 10%' of this grammar. Once you forgo backtracking you will find that generally things like this will actually be easier, not more difficult.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Haralambi Haralambiev
Sent: Friday, April 18, 2008 5:12 AM
To: Johannes Luber
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Problems with semantic predicates

 

Hello,

Is there a way to lure Ter's interest to answer whether this braces (sorry for the mistake ;-) ) functionality is in place?

I am using the latest version, 3.0.1, that is downloadable from the site, so I guess it's not implemented :-(

Hari

On 4/18/08, Johannes Luber <HYPERLINK "mailto:jaluber at gmx.de"jaluber at gmx.de> wrote:

Haralambi Haralambiev schrieb:

Hi Johannes,

I don't understand what's the benefit of the two brackets.

When I write {{$r::flag = false;}} the code that ANTLR produces is "{((r_scope)r_stack.peek()).flag = false;}", i.e. the brackets are added also, but they are still in "if (backtracking == 0)" statement, which is the check I want to skip somehow.

Hari


The two braces (brackets are "[]") should be the syntax which enables an action to be executed always, even during backtracking. But either you are using an too old version of ANTLR or Ter didn't implement this variant after all.

Johannes

 


On 4/17/08, *Johannes Luber* <HYPERLINK "mailto:jaluber at gmx.de" \njaluber at gmx.de <mailto:HYPERLINK "mailto:jaluber at gmx.de" \njaluber at gmx.de>> wrote:

   Haralambi Haralambiev schrieb:

       Hello Johannes,

       So, if I understand correctly, you suggest to have the following
       (using a scope):

       r2
       : {$r::flag}? Token1 -> ^(NODE Token1)
       | Token1
       ;

       If the above is a correct assumption, then how can I set the
       scope variable, as I could only think of the following way:

       r
       scope {
        boolean flag;
       }
       : Token1^ Token2!
          {$r::flag = true;}    r2
       | Token1^
        {$r::flag = false;}
        r2
       ;

       This solution, however, will fail, as the action for setting the
       scope variable will not be executed until the backtracking is
       over. But I need this variable set, as it will be used as a
       predicate for the parsing. Thus, we have a catch-22 situation.

       A solution I could think of is not to have two alternatives for
       r2, but rather construct the CommonTree manually with java code
       and within to use the knowledge of the boolean flag. But I
       dislike this solution and am open to suggestions.


   Try using {{$r::flag = true;}}.

   Johannes



 

 

No virus found in this incoming message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1384 - Release Date: 4/17/2008 3:47 PM


No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.1/1384 - Release Date: 4/17/2008 3:47 PM
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/cd46530e/attachment.html 

From jimi at temporal-wave.com  Fri Apr 18 07:35:36 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Apr 2008 07:35:36 -0700
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <ebc876d70804180536g717abd34g33261435f90a85bc@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAABFrBWES9nkS
	MJTpGzpewpQEAAAAA@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Thomas Brandon


> But if as your example suggests you just want to alter the AST
> construction not the actual parsing then I think you want predicated
> rewrite rules not semantic predicates (as I believe Jim was suggesting
> though I think he gave the wrong syntax). Like:
> r2[boolean flag]
>  : Token1
>    -> {$flag}? ^(NODE Token1)
>    -> Token1
>  ;

Yep - I just copied Gavin's suggestion and forgot to correct the position of the -> even though that was what I was actually replying to the post for. Doh!

Jim
 

No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.1/1384 - Release Date: 4/17/2008 3:47 PM
 




From Ramon.Verbruggen at quintiq.com  Fri Apr 18 08:55:14 2008
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Fri, 18 Apr 2008 17:55:14 +0200
Subject: [antlr-interest] Optional keyword causes ambiguity 	in	parser
In-Reply-To: <52898084.915@mail.quintiq.nl>
References: <4804DE94.BB97.0087.0@quintiq.com>
	<480881CE.BB97.0087.0@quintiq.com> <52898084.915@mail.quintiq.nl>
Message-ID: <4808E081.BB97.0087.0@quintiq.com>

Gavin,

Thanks for your clear explanation!

> Think of what decisions ANTLR has to make (assuming you've made it 
> optional), and you'll see why it thinks it's ambiguous.
[...]
> But how is it to know whether the 
> Identifier it just saw is a statement or a 
> returnStatement?  Answer: it can't.
>
I did realise there was no way for ANTLR to determine whether an
Identifier was part of a (normal) statement or part of a return
statement, your explanation confirms my line of thought. 
I never meant to question the validity of the warning that was given.

> Now, you've said that you want the "return" keyword to be 
> optional.  One way you could do that would be to permit an 
> expression as a valid statement:
>    statementBody:	statementList returnStatement? EOF;
>    returnStatement: 'return' expression;
>    statementList:	(statement ';'*)*;
>    statement:	expression;
>    expression:	addressable( '*' addressable)*;
>    addressable:	Identifier ( '.' Identifier '()' )*;
>    Identifier:	('a'..'z')+;
> 
> There are two downsides to this, of course; the first is that 
> you've widened the possible inputs (which may not be acceptable), 
> and the second is that it isn't very easy to pick off the final 
> expression statement to give it special handling, if you want to.
>
Unfortunately, both downsides you mention are indeed going to cause
grief...the actual grammar in question is much bigger and we have a
rather big installed base.
 
> Another thing you could do is to remove 'addressable' from the 
> list of possible statements.  So long as anything that can match 
> 'expression' cannot also match 'statement', the ambiguity is gone.
> 
This would also break all our existing code, so unfortunately that one
is out too!

> Yet another thing is to re-examine the parentheses in 
> 'addressable'.  Is 'Identifier' really supposed to be an 
> addressable by itself?  Should the parentheses be outside the loop 
> instead (so that 'foo' isn't an addressable, but 'foo()' is)?
> 
You really looked at the grammar in depth! I agree that it looks silly,
but the point of the 'addressable' is that you can start with a variable
or argument, and use methods and attributes of this variable or argument
to chain them together (e.g.
myarg.SomeGetMethod().AnotherMethod().GetAttribute()) so yes, an
Identifier by itself is a valid addressable.

> If you can't change the input language in this way, then you'll 
> have to resolve the ambiguity with sempreds.  The main one (since 
> it's in a loop) is the 'addressable' in 'statement' -- you have to 
> add a sempred telling it to fail any addressables that should be 
> interpreted as return statements instead.  Presumably they're 
> distinct enough that you can tell the difference.  
> 
Unfortunately they are not distinct at all, the only distinction is
that the last statement in the method must be an expression, optionally
preceded by the 'return' keyword.

> (If you can't tell the difference, then you probably shouldn't be
trying to 
> remove that keyword.)
>
Point taken, I guess I just didn't realise that this relatively small
change to the language actually makes it very hard to parse.

> Beyond these suggestions, I'm not really sure.  I've usually been 
> working with DSLs that I'm in full control of, so I've tended to 
> designed languages that are easy to parse :)
>
Good point! This whole exercise would wreak havoc on a very workable
grammar for a (reasonably) well-defined language.

It may seem as though I've blown off all your suggestions, but you've
actually helped me a lot: I now feel comfortable saying that making the
'return' keyword optional requires some significant changes to the
grammar and (therefore) to our language, which is not at all what I had
in mind when I set out to make the 'return' keyword optional.

Thanks again for your useful input.

Ramon Verbruggen


This message contains information that may be privileged or confidential
and is the property of Quintiq. It is only intended for the person to
whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute or use
this message or any part thereof. If you have received this message in
error, please notify the sender immediately and delete all copies of
this message. Please note that e-mails are susceptible to change,
therefore they are not binding.

From hharalambiev at gmail.com  Fri Apr 18 09:09:37 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 18 Apr 2008 19:09:37 +0300
Subject: [antlr-interest] Problems with semantic predicates
In-Reply-To: <-5623031146050549849@unknownmsgid>
References: <aa71f710804180512o7df08a1ayfa7c86544feee800@mail.gmail.com>
	<-5623031146050549849@unknownmsgid>
Message-ID: <aa71f710804180909g3714f69ejad3eae7b6de25199@mail.gmail.com>

Jim,

Thanks a lot for the input.

I suppose I have not built the proper grammar, but as the project I am
currently working on was a "proof of concept", the backtracking option was a
reasonable one. Once the concept is accepted, I think either a great rework,
or a pure start from the beginning will be executed.

I have not dug that deep into ANTLR, but I am eager to do so; thus, I will
try to remove the backtracking option.

However, I think that I might not be able to do so, as the expressions in
the language I am working allows countless things, thus my "expression" rule
usually generates conflicts.

Regarding your comment for rewrite construct - in my case it's something
like this:

r2:
expr -> {hasArgExpr}? ^(EQ ($r::argExprTree) expr)
       -> expr

I.e. the construction
of rule r2 is deep within some rule r, which may or may not have an
argument expression. And I need that the rule r2 take into account
this and constructs the proper tree. Maybe it is a design flaw, I
don't know. I will review it, once I have time.

Once again, thanks, and have a nice weekend!

Hari

On 4/18/08, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Hari,
>
>
>
> I think that you probably need to step back from the specific thing you
> are trying to do here and rework the grammar without backtracking. The
> backtracking option is a good thing for prototyping or when the thing you
> are going to parser doesn't particularly require speed, but if you use it
> without regard to the grammar construction you will usually end up in
> trouble. This is because it masks poor grammar construction, which, if you
> built up the grammar one 'rule' at a time would become more obvious.
>
>
>
> If you are getting syntax errors with conditional rewrites, then there
> must be something else wrong in there first I suspect. Additionally, I am
> having trouble seeing why you would 'need' to rewrite the same construct in
> two different tree shapes. Beware constructing a tree that 'looks' good, as
> though it isn't  bad way to think through your tree construction, it can
> make you forget that what you want is an efficient tree structure that has
> no ambiguities when parsing it. Perhaps you just always need ^(NODE xxx)?
>
>
>
> You may be reluctant to restart your grammar as you feel you have put a
> lot of work in to it, but if you start with a blank slate and no
> backtracking, you will be able to borrow from your original grammar and get
> a cleaner, faster grammar that won't cause you maintenance headaches.
> Otherwise, it looks like you will be spending a lot of time on the 'last
> 10%' of this grammar. Once you forgo backtracking you will find that
> generally things like this will actually be easier, not more difficult.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Haralambi Haralambiev
> *Sent:* Friday, April 18, 2008 5:12 AM
> *To:* Johannes Luber
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Problems with semantic predicates
>
>
>
> Hello,
>
> Is there a way to lure Ter's interest to answer whether this braces (sorry
> for the mistake ;-) ) functionality is in place?
>
> I am using the latest version, 3.0.1, that is downloadable from the site,
> so I guess it's not implemented :-(
>
> Hari
>
> On 4/18/08, *Johannes Luber* <jaluber at gmx.de> wrote:
>
> Haralambi Haralambiev schrieb:
>
> Hi Johannes,
>
> I don't understand what's the benefit of the two brackets.
>
> When I write {{$r::flag = false;}} the code that ANTLR produces is
> "{((r_scope)r_stack.peek()).flag = false;}", i.e. the brackets are added
> also, but they are still in "if (backtracking == 0)" statement, which is the
> check I want to skip somehow.
>
> Hari
>
>
> The two braces (brackets are "[]") should be the syntax which enables an
> action to be executed always, even during backtracking. But either you are
> using an too old version of ANTLR or Ter didn't implement this variant after
> all.
>
> Johannes
>
>
>
>
> On 4/17/08, *Johannes Luber* <jaluber at gmx.de <mailto:jaluber at gmx.de>>
> wrote:
>
>    Haralambi Haralambiev schrieb:
>
>        Hello Johannes,
>
>        So, if I understand correctly, you suggest to have the following
>        (using a scope):
>
>        r2
>        : {$r::flag}? Token1 -> ^(NODE Token1)
>        | Token1
>        ;
>
>        If the above is a correct assumption, then how can I set the
>        scope variable, as I could only think of the following way:
>
>        r
>        scope {
>         boolean flag;
>        }
>        : Token1^ Token2!
>           {$r::flag = true;}    r2
>        | Token1^
>         {$r::flag = false;}
>         r2
>        ;
>
>        This solution, however, will fail, as the action for setting the
>        scope variable will not be executed until the backtracking is
>        over. But I need this variable set, as it will be used as a
>        predicate for the parsing. Thus, we have a catch-22 situation.
>
>        A solution I could think of is not to have two alternatives for
>        r2, but rather construct the CommonTree manually with java code
>        and within to use the knowledge of the boolean flag. But I
>        dislike this solution and am open to suggestions.
>
>
>    Try using {{$r::flag = true;}}.
>
>    Johannes
>
>
>
>
>
> No virus found in this incoming message.
> Checked by AVG.
> Version: 7.5.524 / Virus Database: 269.23.1/1384 - Release Date: 4/17/2008
> 3:47 PM
>
> No virus found in this outgoing message.
> Checked by AVG.
> Version: 7.5.524 / Virus Database: 269.23.1/1384 - Release Date: 4/17/2008
> 3:47 PM
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/1ee541ac/attachment.html 

From markobarko at gmail.com  Fri Apr 18 10:25:32 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Fri, 18 Apr 2008 13:25:32 -0400
Subject: [antlr-interest] Tree construction with loops,
	children at same level
Message-ID: <1208539532.9544.58.camel@main>

So, given a rule like this:

unionFunction
	:	(byFunction -> byFunction)
		(opNode=UnionOp b=byFunction -> ^(Function[$opNode] $unionFunction
$b) )*;

the following input:

a union b union c

creates a tree which consists of a union node with two children, one of
which is another union node (essentially "(a union b) union c").

what i want in such scenarios is to output a single union node with
three children. how is this done?

Thanks,
Marko
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/1a2f70cd/attachment.html 

From jimi at temporal-wave.com  Fri Apr 18 11:29:22 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Apr 2008 11:29:22 -0700
Subject: [antlr-interest] Tree construction with loops,
	children at same level
In-Reply-To: <1208539532.9544.58.camel@main>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAApmhzvwuKDUu
	+A8RdtapQSAEAAAAA@temporal-wave.com>

Are you sure you want that? ;-)

 

unionFunction

@init

{

     boolean  multi = false;

}

 : b+=byFunction 

     (    (op=UnionOp b+=byFunction )+

 

                     -> ^($op $b+)

 

           |         -> $b

     )

;

 

Assuming that UnionOp generates only one node, that should work for all of them. 

 

JIm

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marko Simovic
Sent: Friday, April 18, 2008 10:26 AM
To: antlr-interest
Subject: [antlr-interest] Tree construction with loops, children at same level

 

So, given a rule like this:

unionFunction
: (byFunction -> byFunction)
(opNode=UnionOp b=byFunction -> ^(Function[$opNode] $unionFunction $b) )*;

the following input:

a union b union c

creates a tree which consists of a union node with two children, one of which is another union node (essentially "(a union b) union c").

what i want in such scenarios is to output a single union node with three children. how is this done?

Thanks,
Marko 

 

No virus found in this incoming message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM


No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/968a22d3/attachment-0001.html 

From markobarko at gmail.com  Fri Apr 18 12:17:27 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Fri, 18 Apr 2008 15:17:27 -0400
Subject: [antlr-interest] Tree construction with loops,
	children at	same level
In-Reply-To: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAApmhzvwuKDUu
	+A8RdtapQSAEAAAAA@temporal-wave.com>
References: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAApmhzvwuKDUu
	+A8RdtapQSAEAAAAA@temporal-wave.com>
Message-ID: <1208546247.9544.96.camel@main>

heheh...not really. client preference. unless you have compelling
argument against?

thanks, that works. however, what does the @init block do?

-----Original Message-----
From: Jim Idle <jimi at temporal-wave.com>
To: antlr-interest <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Tree construction with loops, children at
same level
Date: Fri, 18 Apr 2008 11:29:22 -0700

Are you sure you want that? ;-)

 

unionFunction

@init

{

     boolean  multi = false;

}

 : b+=byFunction 

     (    (op=UnionOp b+=byFunction )+

 

                     -> ^($op $b+)

 

           |         -> $b

     )

;

 

Assuming that UnionOp generates only one node, that should work for all
of them. 

 

JIm

 

From:antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marko Simovic
Sent: Friday, April 18, 2008 10:26 AM
To: antlr-interest
Subject: [antlr-interest] Tree construction with loops, children at same
level


 

So, given a rule like this:

unionFunction
: (byFunction -> byFunction)
(opNode=UnionOp b=byFunction -> ^(Function[$opNode] $unionFunction
$b) )*;

the following input:

a union b union c

creates a tree which consists of a union node with two children, one of
which is another union node (essentially "(a union b) union c").

what i want in such scenarios is to output a single union node with
three children. how is this done?

Thanks,
Marko 

 

No virus found in this incoming message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date:
4/18/2008 9:30 AM





No virus found in this outgoing message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date:
4/18/2008 9:30 AM


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/3f8fc882/attachment.html 

From jimi at temporal-wave.com  Fri Apr 18 12:40:50 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Apr 2008 12:40:50 -0700
Subject: [antlr-interest] Tree construction with loops,
	children at same level
In-Reply-To: <1208546247.9544.96.camel@main>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAXdwC2yuKp0S
	89eC4iJhUlgEAAAAA@temporal-wave.com>

You can ignore the @init block. I was going to show that you could set that to true for more than one byFunction and use conditional rewrites, but I decided that that was not really a good way to do it when you didn't have to.

 

Jim

 

From: Marko Simovic [mailto:markobarko at gmail.com] 
Sent: Friday, April 18, 2008 12:17 PM
To: Jim Idle
Cc: antlr-interest
Subject: Re: [antlr-interest] Tree construction with loops, children at same level

 

heheh...not really. client preference. unless you have compelling argument against?

thanks, that works. however, what does the @init block do?

-----Original Message-----
From: Jim Idle <HYPERLINK "mailto:Jim%20Idle%20%3cjimi at temporal-wave.com%3e"jimi at temporal-wave.com>
To: antlr-interest <HYPERLINK "mailto:antlr-interest%20%3cantlr-interest at antlr.org%3e"antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Tree construction with loops, children at same level
Date: Fri, 18 Apr 2008 11:29:22 -0700

Are you sure you want that? ;-)

 

unionFunction

@init

{

     boolean  multi = false;

}

 : b+=byFunction 

     (    (op=UnionOp b+=byFunction )+

 

                     -> ^($op $b+)

 

           |         -> $b

     )

;

 

Assuming that UnionOp generates only one node, that should work for all of them. 

 

JIm

 

From:antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marko Simovic
Sent: Friday, April 18, 2008 10:26 AM
To: antlr-interest
Subject: [antlr-interest] Tree construction with loops, children at same level


 

So, given a rule like this:

unionFunction
: (byFunction -> byFunction)
(opNode=UnionOp b=byFunction -> ^(Function[$opNode] $unionFunction $b) )*;

the following input:

a union b union c

creates a tree which consists of a union node with two children, one of which is another union node (essentially "(a union b) union c").

what i want in such scenarios is to output a single union node with three children. how is this done?

Thanks,
Marko 

 

No virus found in this incoming message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM





No virus found in this outgoing message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM



 

No virus found in this incoming message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM


No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080418/f7bb5cc3/attachment.html 

From antlr at mirality.co.nz  Fri Apr 18 15:51:59 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 19 Apr 2008 10:51:59 +1200
Subject: [antlr-interest] Optional keyword causes ambiguity   in	parser
In-Reply-To: <4808E081.BB97.0087.0@quintiq.com>
References: <4804DE94.BB97.0087.0@quintiq.com>
	<480881CE.BB97.0087.0@quintiq.com> <52898084.915@mail.quintiq.nl>
	<4808E081.BB97.0087.0@quintiq.com>
Message-ID: <20080418225211.7FBD411E994@www.antlr.org>

At 03:55 19/04/2008, Ramon Verbruggen wrote:
 >You really looked at the grammar in depth! I agree that it looks 

 >silly, but the point of the 'addressable' is that you can start
 >with a variable or argument, and use methods and attributes of
 >this variable or argument to chain them together (e.g.
 >myarg.SomeGetMethod().AnotherMethod().GetAttribute()) so yes, an
 >Identifier by itself is a valid addressable.

I think you may have missed my point.  You've said that an 
"addressable" by itself is a valid statement.  Obviously a method 
call is a valid statement.  But is an object or field reference a 
valid statement?

To give examples (not all of these may actually be valid in your 
language, I'm just speculating on the language structure):
   "myarg.SomeGetMethod().AnotherMethod().GetAttribute()": method 
call, definitely a statement.
   "myarg.somefield.AnotherMethod()": also a method call, through 
a field this time, but still clearly a statement.
   "myarg.SomeMethod().somefield": method call but then a field 
reference.  This is a value, which may be a good expression but is 
it really a statement?
   "myarg()": method call; probably a good statement, although it 
depends if your language allows global functions or method 
pointers (like C/C++) or if you have to call through an instance 
object (like Java/C#)
   "myarg": variable reference, a value; again it's obviously an 
expression but is it really a statement?

C/C++ permit expressions to be statements in their own right, but 
C# (and I think Java too) don't.  From the looks of your grammar 
it sounded like you didn't want expressions to be statements 
normally, with the single exception of the final one in the 
function (acting as a return value).  (Although having said that, 
it does raise the question of why you want to break consistency 
just to permit leaving out one keyword ;))

(Of course, I also strongly dislike single-exit-point languages; 
they can lead to excessive nesting and temporary variable 
shenanigans, especially when simply trying to assert 
preconditions.  But hey, whatever makes you happy.) :)


From guntiso at latnet.lv  Fri Apr 18 17:18:59 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Sat, 19 Apr 2008 03:18:59 +0300
Subject: [antlr-interest] Clumsy rewrite syntax for expressions
Message-ID: <1208564339.48093a73155e8@clients.latnet.lv>

Hi,
It is strange that rewrite syntax for
  expr (op expr)*
is so complicated (unreadable).

IIUC, a + b + c can only mean one of the following trees:
  +(a, b, c)
  +(a, +(b, c))
  +(+(a, b), c)

How about adding some syntactic support for these 3 cases?
For example:
  ->  ^(op? expr+)
  ->  ^<(op? expr+)
  ->  >^(op? expr+)

Guntis


From parrt at cs.usfca.edu  Fri Apr 18 18:01:17 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 18 Apr 2008 18:01:17 -0700
Subject: [antlr-interest] Clumsy rewrite syntax for expressions
In-Reply-To: <1208564339.48093a73155e8@clients.latnet.lv>
References: <1208564339.48093a73155e8@clients.latnet.lv>
Message-ID: <D74385A1-DB84-42E3-A1A6-439BF76E42FE@cs.usfca.edu>


On Apr 18, 2008, at 5:18 PM, Guntis Ozols wrote:

> Hi,
> It is strange that rewrite syntax for
>  expr (op expr)*
> is so complicated (unreadable).

expr (op^ expr)*

is the preferred method.  Later i'm doing some cool expression stuff  
to make easier.

Ter

From christian.schladetsch at gmail.com  Fri Apr 18 21:45:03 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sat, 19 Apr 2008 16:45:03 +1200
Subject: [antlr-interest] Syntactic Predicate gating and @init
Message-ID: <6442c4ae0804182145n1cb5f8f5xf15b9b03f8284de2@mail.gmail.com>

Hello,

I have an RPN system that I've been using for some time. It's time to write
an infix parser which generates post-fix.

My basic approach, which seems wrong, is to do:

compound_statement
   @init { PushScope(); }
   : '{' statement* '}' { *statement list in rpn form* = PopScope();
Push(*continuation
created from statement list*); }
   ;

statement
    : ...*expression rules that resolve to various leaf_node matches*...
    ;

leaf_node:
    :  ..Q... { Push(Q); } // push new object onto current code stream scope
    ;

The problem is that various rules are explored by the look-ahead, which
pushes scope in the @init clause but does not execute the action which pops
the scope, so the scope stack gets broken.

If i use the @synpredgate { true } hack work-around, the output is wrong
because it injects code when it unwinds.

Clearly I am doing something wrong. I got basic expressions working quite
well, "a=3*(1+b)" --> "b 1 + 3* a =" no problem. This sort of thing is very
natural to do in ANTRLR. However, the problem of scoping is not so easy. I
do not want to have to pass context down through each rule as an argument?!
However my attempts to use a global scope stack have been thwarted by the
backtracking.

What I'd like is to only perform the @init if the rule has actually been
matched, rather than when looking forward.

Thanks for any advice.

Regards,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080419/bfa48ae4/attachment-0001.html 

From jimi at temporal-wave.com  Sat Apr 19 10:39:20 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 19 Apr 2008 10:39:20 -0700
Subject: [antlr-interest] Syntactic Predicate gating and @init
In-Reply-To: <6442c4ae0804182145n1cb5f8f5xf15b9b03f8284de2@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAc0/1IxJWBEG
	UlbGJBR/wWgEAAAAA@temporal-wave.com>

Rather than use the @init, why not just use an action:

 

Instead of

 

rule

@init

{

   dfdsdfdsfdsf

}

: stuff

;

 

Use:

 

rule

:

                { dfsfsfsfddfdsf }

 

                stuff

;

 

Presuming that you actually need to execute the action before elements are parsed. Think of @init more in terms of declaring local variables in other words. The actions will not be executed when backtracking etc.

 

Does that help you any?

 

However, I think that you consider using the parser just to generate an AST, then do your codegen/runtime from the AST (which is very quick to traverse and you can shape it how you want).

 

Jim

 

 

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christian Schladetsch
Sent: Friday, April 18, 2008 9:45 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Syntactic Predicate gating and @init

 

Hello,

I have an RPN system that I've been using for some time. It's time to write an infix parser which generates post-fix.

My basic approach, which seems wrong, is to do:

compound_statement
   @init { PushScope(); }
   : '{' statement* '}' { statement list in rpn form = PopScope(); Push(continuation created from statement list); }
   ;

statement
    : ...expression rules that resolve to various leaf_node matches... 
    ;

leaf_node:
    :  ..Q... { Push(Q); } // push new object onto current code stream scope
    ;

The problem is that various rules are explored by the look-ahead, which pushes scope in the @init clause but does not execute the action which pops the scope, so the scope stack gets broken.

If i use the @synpredgate { true } hack work-around, the output is wrong because it injects code when it unwinds.

Clearly I am doing something wrong. I got basic expressions working quite well, "a=3*(1+b)" --> "b 1 + 3* a =" no problem. This sort of thing is very natural to do in ANTRLR. However, the problem of scoping is not so easy. I do not want to have to pass context down through each rule as an argument?! However my attempts to use a global scope stack have been thwarted by the backtracking.

What I'd like is to only perform the @init if the rule has actually been matched, rather than when looking forward.

Thanks for any advice.

Regards,
Christian.




No virus found in this incoming message.
Checked by AVG.
Version: 7.5.524 / Virus Database: 269.23.1/1385 - Release Date: 4/18/2008 9:30 AM


No virus found in this outgoing message.
Checked by AVG. 
Version: 7.5.524 / Virus Database: 269.23.2/1386 - Release Date: 4/18/2008 5:24 PM
 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080419/e2a7faea/attachment.html 

From antlr at deloreyfamily.org  Sat Apr 19 11:41:28 2008
From: antlr at deloreyfamily.org (Dan Delorey)
Date: Sat, 19 Apr 2008 12:41:28 -0600
Subject: [antlr-interest] Building an AST for Java
Message-ID: <90d6c0620804191141o1a99ea57ib1da7ba260faf29@mail.gmail.com>

I've been having quite a bit of trouble generating an AST for Java. I
started by trying to modify the Java.g posted by Ter. I have also tried
using the one posted by Dieter Habelitz. In both cases I'm having the same
problem, though.

That is, I can't seem to modify the grammar so that it doesn't require
backtracking. With backtracking, however, critical (for my purposes) parts
of the AST are missing. For example, the branches that should be generated
by the following code:

f.getName().length()

Is incomplete. I can get either the f.getName() function call in the tree or
the length() function call, but not both.

So far I have tried using rule scopes, global scopes, parameters, return
values, and standard rewrite rules. I'm really confused that this is so hard
for me. Could anyone give me some guidance?

Thanks,
Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080419/8a878e85/attachment.html 

From john at jacelridge.com  Sat Apr 19 11:56:40 2008
From: john at jacelridge.com (John Ridgway)
Date: Sat, 19 Apr 2008 14:56:40 -0400
Subject: [antlr-interest] Building an AST for Java
In-Reply-To: <90d6c0620804191141o1a99ea57ib1da7ba260faf29@mail.gmail.com>
References: <90d6c0620804191141o1a99ea57ib1da7ba260faf29@mail.gmail.com>
Message-ID: <20D6CDC7-EA0F-457C-8E12-086E48CF37AF@jacelridge.com>

I have a version of the Java.g grammar that produces an AST.  It is  
going to go up on the Antlr web-site soon, but it's not there yet.   
You are welcome to use it, with the same licensing restrictions as  
Antlr itself.  I'll e-mail stuff directly to you in a separate e-mail  
if you would like.  Just e-mail me privately.  This goes for anyone  
else who might want such a thing.

I actually build the AST and have a tree grammar that outputs Java  
code.  The combination has successfully parsed and recreated the  
entire JDK 1.5 source tree.

Peace
- John


On Apr 19, 2008, at 2:41 PM, Dan Delorey wrote:

> I've been having quite a bit of trouble generating an AST for Java.  
> I started by trying to modify the Java.g posted by Ter. I have also  
> tried using the one posted by Dieter Habelitz. In both cases I'm  
> having the same problem, though.
>
> That is, I can't seem to modify the grammar so that it doesn't  
> require backtracking. With backtracking, however, critical (for my  
> purposes) parts of the AST are missing. For example, the branches  
> that should be generated by the following code:
>
> f.getName().length()
>
> Is incomplete. I can get either the f.getName() function call in the  
> tree or the length() function call, but not both.
>
> So far I have tried using rule scopes, global scopes, parameters,  
> return values, and standard rewrite rules. I'm really confused that  
> this is so hard for me. Could anyone give me some guidance?
>
> Thanks,
> Dan


From go2elango at gmail.com  Sat Apr 19 13:12:08 2008
From: go2elango at gmail.com (elango m)
Date: Sun, 20 Apr 2008 01:42:08 +0530
Subject: [antlr-interest] query regarding lexer
Message-ID: <154902370804191312t9f0f12bnb55346f3ac9a53b9@mail.gmail.com>

I need to neglect other lexer rules when I encounter a lexical token.

The following snippet works for me. But I am sure there should be a better
way of doing this.

commandline : CMD ' ' CMD_ARG;
CMD : 'command'
CMD_ARG : ('a'..'z' | 'A'..'Z' | '0'..'9' | ' ' | '/')* ;

Ex :
command blah blah blah blah..

should parse resulting two tokens 1) command and 2) rest of the string (blah
blah blah blah..). this can include any special character

Any help will be greatly appreciated.

-EM-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080420/41ea8ccb/attachment.html 

From john at jacelridge.com  Sat Apr 19 13:32:38 2008
From: john at jacelridge.com (John Ridgway)
Date: Sat, 19 Apr 2008 16:32:38 -0400
Subject: [antlr-interest] query regarding lexer
In-Reply-To: <154902370804191312t9f0f12bnb55346f3ac9a53b9@mail.gmail.com>
References: <154902370804191312t9f0f12bnb55346f3ac9a53b9@mail.gmail.com>
Message-ID: <2F427DFA-652E-4CC9-9AC6-57EA7C44F0CD@jacelridge.com>

Try

commandline : command Blank argument ;  // allows for other commands  
than just 'command'
command : CMD ;
arguments : (command | Blank | Anything)* ;

CMD : 'command'
Anything : ~NewLine ;
NewLine : '\r' '\n'? | '\n' ;

That might be what you need.

Peace
- John



On Apr 19, 2008, at 4:12 PM, elango m wrote:

> I need to neglect other lexer rules when I encounter a lexical token.
>
> The following snippet works for me. But I am sure there should be a  
> better way of doing this.
>
> commandline : CMD ' ' CMD_ARG;
> CMD : 'command'
> CMD_ARG : ('a'..'z' | 'A'..'Z' | '0'..'9' | ' ' | '/')* ;
>
> Ex :
> command blah blah blah blah..
>
> should parse resulting two tokens 1) command and 2) rest of the  
> string (blah blah blah blah..). this can include any special character
>
> Any help will be greatly appreciated.
>
> -EM-
>
>


From christian.schladetsch at gmail.com  Sat Apr 19 19:14:11 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sun, 20 Apr 2008 14:14:11 +1200
Subject: [antlr-interest] Syntactic Predicate gating and @init
In-Reply-To: <-719846856536712881@unknownmsgid>
References: <6442c4ae0804182145n1cb5f8f5xf15b9b03f8284de2@mail.gmail.com>
	<-719846856536712881@unknownmsgid>
Message-ID: <6442c4ae0804191914j331e6dfo5ed509c822c40988@mail.gmail.com>

Hi Jim,

On Sun, Apr 20, 2008 at 5:39 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  Rather than use the @init, why not just use an action:
>

No. Most of my work is done in actions, yes. But there are places (like
compound blocks, arg lists etc) that need to change the scope. That has to
be done in @init before the subrules are matched at all. Otherwise the
subrules write their code to the wrong scope. Maybe I'm DoingItWrong, but
the solution I found was:

compound_something:
   @init { if (BACKTRACKING == 0) PushScope(); }
   : '{' ..subrules that write to this scope... '}' { ...PopScope(); }

subrule : whatever { ...write code into current scope... };

Anyway, it works. Thanks everyone for your help and to Terr et al for a
great tool. I now have a language system that works:

> foo = int a, string s -> string,int { return s+s,a*3; }
> foo(2,"spam");
*[**"spamspam", **6]
*
Regards,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080420/e34d679a/attachment.html 

From christian.schladetsch at gmail.com  Sat Apr 19 19:28:39 2008
From: christian.schladetsch at gmail.com (Christian Schladetsch)
Date: Sun, 20 Apr 2008 14:28:39 +1200
Subject: [antlr-interest] Syntactic Predicate gating and @init
In-Reply-To: <-719846856536712881@unknownmsgid>
References: <6442c4ae0804182145n1cb5f8f5xf15b9b03f8284de2@mail.gmail.com>
	<-719846856536712881@unknownmsgid>
Message-ID: <6442c4ae0804191928t675a8f9ap3aa4096cbeac1bf7@mail.gmail.com>

Doh. Sorry, I just re-read what you posted and fixed my brain. I didn't know
about the pre-matching actions:

rule: { code(); } subules { morecode(); };

That is exactly what I needed and what my @init { if (BACKTRACKING == 0)
code(); } did.

Cheers,
Christian.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080420/d2869136/attachment.html 

From antlr at mirality.co.nz  Sat Apr 19 19:38:40 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 20 Apr 2008 14:38:40 +1200
Subject: [antlr-interest] Syntactic Predicate gating and @init
In-Reply-To: <6442c4ae0804191914j331e6dfo5ed509c822c40988@mail.gmail.com
 >
References: <6442c4ae0804182145n1cb5f8f5xf15b9b03f8284de2@mail.gmail.com>
	<-719846856536712881@unknownmsgid>
	<6442c4ae0804191914j331e6dfo5ed509c822c40988@mail.gmail.com>
Message-ID: <20080420023858.94E4F11EB7F@www.antlr.org>

At 14:14 20/04/2008, Christian Schladetsch wrote:
>No. Most of my work is done in actions, yes. But there are places 
>(like compound blocks, arg lists etc) that need to change the 
>scope. That has to be done in @init before the subrules are 
>matched at all. Otherwise the subrules write their code to the 
>wrong scope.

Action blocks can appear wherever you want -- if you put one 
before the subrules, then it executes before the subrules.

In fact, the main difference between this:

rule
@init { foo(); }
   : subrule { bar(); }
   ;

And this:

rule
   : { foo(); } subrule { bar(); }
   ;

is that in the former case foo() will always be called, while in 
the latter case foo() will only be called if not 
predicting/backtracking, which sounds like what you want.

The problem with this latter approach is that if you *don't* have 
global backtracking enabled (ie. if it's possible for "subrule" to 
throw a 'failed match' exception during main parsing, not 
prediction), then you'll end up with foo() being called and bar() 
not, which will break your stack -- as the former approach does 
regardless of backtracking.  (Though from what you've said earlier 
I'm assuming that you do have backtracking on, so this may not be 
an issue for you.)

There's also a @finally block you can use to execute code when 
leaving the rule, regardless of success or failure; so if you do 
want to keep using @init then you should probably use @finally as 
well.  (Although, I think I remember Jim saying something about 
that not being supported by all target languages...?)

>Maybe I'm DoingItWrong, but the solution I found was:

I'm curious: is there some reason why you don't want to use 
ANTLR's built in stacked scopes?


From antlr-interest at antlr.org  Sun Apr 20 07:45:44 2008
From: antlr-interest at antlr.org (antlr-interest at antlr.org)
Date: Sun, 20 Apr 2008 07:45:44 -0700 (PDT)
Subject: [antlr-interest] Dear antlr-interest@antlr.org April 80% 0FF
Message-ID: <20080420184545.14550.qmail@china-b6efd50af>

Canadian Doctor Kristina  Best Price On Net
http://www.google.com/pagead/iclk?sa=l&ai=rfvjc&num=425&adurl=http://xlpk.himlook.com?ygjn


From elekis at gmail.com  Sun Apr 20 08:15:28 2008
From: elekis at gmail.com (jabon)
Date: Sun, 20 Apr 2008 17:15:28 +0200
Subject: [antlr-interest] using parser in the unit test --> tray catch catch
	nothing
Message-ID: <480B5E10.3060609@gmail.com>

hi all,

I try to use the Junit (via eclipse) with a parser than I did.

I have to try a simple a simple test who parse a string and ... that all

there is my method

    public void testDocument(){
        try {
            parser.document();
        } catch (RecognitionException e) {
            fail(e.getMessage());
        }
       
    }

the prob is that method is correct BUT in the console I have an error

BR.recoverFromMismatchedToken
line 11:3 mismatched input ';' expecting T_Ident

how is  it possible?? the fact is, it is the first time I use JUNIT 
(that why I wanna use that)  and I have no idea if it is the test who is 
wrong or the antlr. thanks

a+++


From benjamin.han at gmail.com  Sun Apr 20 11:50:54 2008
From: benjamin.han at gmail.com (Benjamin Han)
Date: Sun, 20 Apr 2008 14:50:54 -0400
Subject: [antlr-interest] Repeatedly parsing strings without constructing
	new parser instances?
Message-ID: <3536c4e80804201150o3334bc3ckcc442dd84edbd4ec@mail.gmail.com>

Hi,

I just started using ANTLR (target language is JAVA) and I can't seem
to figure out how to parse different strings without constructing a
new parser instance every time.

The scenario is I have many different formulae to parse, at separate
times. I'm following this code:

private MyParser createParser(String formula) throws IOException {
    	CharStream stream = new ANTLRStringStream(formula);
    	MyLexer lexer = new MyLexer(stream);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        MyParser parser = new MyParser(tokens);
        return parser;
    }

But I don't want to create a new instance of MyParser each time I want
to parse a new formula. Can I just create a lexer/parser without
giving any input first, and then give the input to lexer later to
parse?

How is it usually done?

Thanks!


Ben

From youcef.belattaf at gmail.com  Sun Apr 20 16:18:04 2008
From: youcef.belattaf at gmail.com (youcef belattaf)
Date: Mon, 21 Apr 2008 01:18:04 +0200
Subject: [antlr-interest] ANTLR feedback
In-Reply-To: <04A63881-BC1C-413C-8967-00CB8DC80501@antlr.org>
References: <20080420220724.7EA3711EC39@www.antlr.org>
	<04A63881-BC1C-413C-8967-00CB8DC80501@antlr.org>
Message-ID: <906346170804201618t5b741a53i65ae173413911fa@mail.gmail.com>

Thank you for answers,

To make each command to be parsed, the parser must read an EOF after these
commands. The only way i find to realize that is to close the OutputStream
(PipedOutpuStream). So i've to create a new PipedOutputStream for each
command. In addition, the program is multi-threaded and it's diffucult to
recreate the streams (synchronization).

On Mon, Apr 21, 2008 at 1:00 AM, Terence Parr <parrt at antlr.org> wrote:

> antlr reads all input at the moment; not good for your application.
>  Trying passing complete, single commands to the parser.  Each command has
> EOF on it.  Read another command and pass to parser etc...
> Ter
> PS      please direct these questions to interest list.
> On Apr 20, 2008, at 3:07 PM, youcef.belattaf at gmail.com wrote:
>
>  timestamp=20080420_15.07.24
> > email=youcef.belattaf at gmail.com
> > name=Youcef BELATTAF
> > ANTLRVersion=3.0.1
> > ANTLRWorksVersion=
> > StringTemplateVersion=
> > OS=
> > JavaVersion=6
> > software=ANTLR
> > RemoteHost=sto93-4-88-162-214-37.fbx.proxad.net
> > uploadedFile=false
> > feedback=Hello,
> > I've a question, excuse me for my bad english. I've a thread which reads
> > commands from a socket. I would like these commands to be parsed by an ANTLR
> > parser. But to start parsing, the parser needs the EOF. How can I insert an
> > EOF in the stream.
> >
> > I've used a PipedInputStream/PipedOutputStream between the socket and
> > the parser in order to insert an EOF after each command, but i have to close
> > the stream after each command, I think there's a better solution.
> >
> > So i've realy 2 questions :
> >
> > 1. How can I make the ANTLR Parser start parsing without detecting the
> > EOF ?
> >
> > 2. How can I insert an EOF in a streal without closing it ?
> >
> > Thank you.
> >
> >
> >
>


-- 
--
Youcef BELATTAF
22, Rru Charles Garnier
93400, Saint Ouen.
Tel : 06 12 63 55 93
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080421/348842ff/attachment.html 

From rstehwien at gmail.com  Sun Apr 20 22:06:19 2008
From: rstehwien at gmail.com (Robert Stehwien)
Date: Sun, 20 Apr 2008 23:06:19 -0600
Subject: [antlr-interest] Excel Like Expression Parser in ANTLR
Message-ID: <7e7886e20804202206q4b35e6edp18efa173e334348f@mail.gmail.com>

I posted a blog entry about creating an Excel like expression parser
for Adobe Flex using ANTLR 3.1 and the new ActionScript target:
http://arcanearcade.blogspot.com/2008/04/using-antlr-to-create-excel-like.html

The flex application (linked off the blog post) has source code
enabled (just right click to see) and you can view or download the
source here:
http://www.arcanearcade.com/Flex/FlexFormula/srcview/index.html

I really wanted to reuse the existing FormulaTree object in
callFunction() but couldn't figure out how to get the right token
index to push/pop onto and off the stream so I ended up creating a new
FormulaTree to evaluate expressions inside functions.

Any comments or suggestions are appreciated and feel free to use the
grammar if it helps.

Many thanks to George Scott for fixing the ActionScript target as I
worked on this grammar.

--Robert

From Ramon.Verbruggen at quintiq.com  Mon Apr 21 00:18:53 2008
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Mon, 21 Apr 2008 09:18:53 +0200
Subject: [antlr-interest] Optional keyword causes ambiguity in	parser
In-Reply-To: <16249084.580@mail.quintiq.nl>
References: <4804DE94.BB97.0087.0@quintiq.com>
	<480881CE.BB97.0087.0@quintiq.com> <52898084.915@mail.quintiq.nl>
	<4808E081.BB97.0087.0@quintiq.com> <16249084.580@mail.quintiq.nl>
Message-ID: <480C5BFC.BB97.0087.0@quintiq.com>

>  >I agree that it looks 
>  >silly, but the point of the 'addressable' is that you can start
>  >with a variable or argument, and use methods and attributes of
>  >this variable or argument to chain them together (e.g.
>  >myarg.SomeGetMethod().AnotherMethod().GetAttribute()) so yes, an
>  >Identifier by itself is a valid addressable.
> 
> I think you may have missed my point.  You've said that an 
> "addressable" by itself is a valid statement.  Obviously a method 
> call is a valid statement.  But is an object or field reference a 
> valid statement?
>
You're right: I did miss your point. Unfortunately this is not a new language, and I didn't create it... So yes, an addressable by itself is a valid statement. :-(
 
> (Of course, I also strongly dislike single-exit-point languages; 
> they can lead to excessive nesting and temporary variable 
> shenanigans, especially when simply trying to assert 
> preconditions.  But hey, whatever makes you happy.) :)
>
I completely agree. It does however make a *huge* difference in implementation complexity in our case since we have a propagator that uses parse-time (meta) information to determine which code needs to be executed whenever a value changes. (It's a mixed functional/procedural language)

Thanks again,

Ramon


This message contains information that may be privileged or confidential and is the property of Quintiq. It is only intended for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to read, print, retain, copy, disseminate, distribute or use this message or any part thereof. If you have received this message in error, please notify the sender immediately and delete all copies of this message. Please note that e-mails are susceptible to change, therefore they are not binding.

From felix_do at web.de  Mon Apr 21 06:07:12 2008
From: felix_do at web.de (Felix Dorner)
Date: Mon, 21 Apr 2008 15:07:12 +0200
Subject: [antlr-interest] Template Rewrite Rule consumes one more Token than
	expected
Message-ID: <480C9180.9000102@web.de>

Hi,

I have a problem in a template grammar that's rewriting the tokenstream. 
I don't understand why the input:

a * b; \n

returns "where's the semicolon?", i.e. the trailing semicolon is eaten 
up too...

Thanks for your help. Felix.


Here's the test grammars:

grammar Test;

options{
output=AST;
ASTLabelType=CommonTree;
}

statement
    :    expression ';'!
    ;
expression
    :    ID '*'^ ID;
   
ID    :    'a'..'z';

WS
    : ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;



tree grammar TestTree;

options{
tokenVocab=Test;
output=template;
ASTLabelType=CommonTree;
rewrite=true;
}


statement
    :    expression;
   
expression
    :    ^('*' ID ID)
            -> template(text={"where's the semicolon?"}) "<text>"
    ;





From thkarcher at gmx.de  Mon Apr 21 06:18:47 2008
From: thkarcher at gmx.de (Thomas Karcher)
Date: Mon, 21 Apr 2008 15:18:47 +0200
Subject: [antlr-interest] Template Rewrite Rule consumes one more
	Token	than expected
In-Reply-To: <480C9180.9000102@web.de>
References: <480C9180.9000102@web.de>
Message-ID: <1208783927.5967.11.camel@localhost>

Hi Felix,

> a * b; \n
> returns "where's the semicolon?", i.e. the trailing semicolon is eaten 
> up too...

What do you expect?

> grammar Test;
> statement
>     :    expression ';'!

The "!" at the end prevents the construction of a ";" node in the
resulting AST, so ...

> tree grammar TestTree;
> expression
>     :    ^('*' ID ID)
>             -> template(text={"where's the semicolon?"}) "<text>"

... doesn't expect any ";" node in the AST ... your example does exactly
what I hope it should do :)
Where do you see the problem?


Thomas

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Dies ist ein digital signierter Nachrichtenteil
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20080421/6f39cb4e/attachment.bin 

From felix_do at web.de  Mon Apr 21 06:51:06 2008
From: felix_do at web.de (Felix Dorner)
Date: Mon, 21 Apr 2008 15:51:06 +0200
Subject: [antlr-interest] Template Rewrite Rule consumes one more Token
 than expected
In-Reply-To: <1208783927.5967.11.camel@localhost>
References: <480C9180.9000102@web.de> <1208783927.5967.11.camel@localhost>
Message-ID: <480C9BCA.5060807@web.de>

Thomas Karcher wrote:
>> a * b; \n
>> returns "where's the semicolon?", i.e. the trailing semicolon is eaten 
>> up too...
>>     
>
> What do you expect?
>   
I expect "where's the semicolon?;"
> The "!" at the end prevents the construction of a ";" node in the
> resulting AST, so ...
>   
Right, but it does not delete the ";" from the corresponding Token stream.
>> tree grammar TestTree;
>> expression
>>     :    ^('*' ID ID)
>>             -> template(text={"where's the semicolon?"}) "<text>"
>>     
>
> ... doesn't expect any ";" node in the AST ... your example does exactly
> what I hope it should do :)
> Where do you see the problem?
>   
I expect the "a*b" to be replaced by "where's the semicolon?",  but the 
semicolon should remain
in the token stream.

The template rewrite rule for an "expression" should only replace the 
tokens that were matched
for that expression.

Felix




From lukas at zapletalovi.com  Mon Apr 21 07:26:32 2008
From: lukas at zapletalovi.com (=?ISO-8859-2?Q?Luk=E1=B9_Zapletal?=)
Date: Mon, 21 Apr 2008 16:26:32 +0200
Subject: [antlr-interest] CORBA IDL grammar union switch problem
Message-ID: <6f1d4acc0804210726y3e0ea936l4d3f2539436a117e@mail.gmail.com>

Hello,

I am new to Antlr and I am having problem with the grammar. Lets
suppose the input:

union testUnion switch(char) {
  case 'a' :
  case 'b' :
  case 'c' : long x;
  default : long y;
};

When I parse this with Antlr the empty cases 'a' and 'b' are skipped.
There is no way to read constants 'a' and 'b' because when I call
getNextSibling() on the first "case" the constant 'c' is returned. I
need to read all 'a', 'b' and 'c' constants and do some actions.

I do not know how to traverse the AST tree to get these values. Is
something wrong in the grammar?  The most important grammar definition
follows (taken from corba.g). Thanks for your help.

union_type
	:   "union"^
	    identifier
	    "switch"! LPAREN! switch_type_spec RPAREN!
	    LCURLY! switch_body RCURLY!
	;

switch_type_spec
	:   integer_type
	|   char_type
	|   boolean_type
	|   enum_type
	|   scoped_name
	;

switch_body
	:   case_stmt_list
	;

case_stmt_list
	:  (case_stmt)+
	;

case_stmt
	:   // case_label_list
	    ( "case"^ const_exp COLON!
	    | "default"^ COLON!
	    )+
	    element_spec SEMI!
	;

// case_label_list
// 	:   (case_label)+
// 	;


// case_label
// 	:   "case"^ const_exp COLON!
// 	|   "default"^ COLON!
// 	;

element_spec
	:   type_spec declarator
	;


-- 
Lukas Zapletal
http://lukas.zapletalovi.com

From elekis at gmail.com  Mon Apr 21 09:51:06 2008
From: elekis at gmail.com (jabon)
Date: Mon, 21 Apr 2008 18:51:06 +0200
Subject: [antlr-interest] using parser in the unit test --> tray catch
	catch nothing
In-Reply-To: <480B5E10.3060609@gmail.com>
References: <480B5E10.3060609@gmail.com>
Message-ID: <480CC5FA.2000106@gmail.com>

jabon a ?crit :

I input the 

rulecatch  options, 
but that doesnt change anything.

any idea??

thanks

a++

> hi all,
>
> I try to use the Junit (via eclipse) with a parser than I did.
>
> I have to try a simple a simple test who parse a string and ... that all
>
> there is my method
>
>    public void testDocument(){
>        try {
>            parser.document();
>        } catch (RecognitionException e) {
>            fail(e.getMessage());
>        }
>          }
>
> the prob is that method is correct BUT in the console I have an error
>
> BR.recoverFromMismatchedToken
> line 11:3 mismatched input ';' expecting T_Ident
>
> how is  it possible?? the fact is, it is the first time I use JUNIT 
> (that why I wanna use that)  and I have no idea if it is the test who 
> is wrong or the antlr. thanks
>
> a+++
>


From scott at adrenaline.com  Mon Apr 21 11:37:12 2008
From: scott at adrenaline.com (Scott McLoughlin)
Date: Mon, 21 Apr 2008 14:37:12 -0400
Subject: [antlr-interest] Problem generating simple AST's
Message-ID: <480CDED8.6080308@adrenaline.com>

I have the Antlr book, so let me know if there's a page/section I should
check out that addresses this problem.

Here's the sample production from the grammar.

funFormals
    :    OPAREN! formals ('=>'! typeList)? CPAREN! -> ^(DEF formals)
    ;

Looks normal enough, but that -> ^(DEF formals) is the killer.  When I
compile the grammar, I get a long error message that starts out.

    Cannot generate the grammar because:
    error(10) internal ...more stuff.....
    java.lang.IllegalArgumentException: Can't find template 
tokenRefBangTrack.st
    ....more stuff....

Removing the -> clause, and everything compiles fine, but generates a pretty
useless AST :-(

Any work arounds?

Scott




From jaluber at gmx.de  Mon Apr 21 11:51:17 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 21 Apr 2008 20:51:17 +0200
Subject: [antlr-interest] Problem generating simple AST's
In-Reply-To: <480CDED8.6080308@adrenaline.com>
References: <480CDED8.6080308@adrenaline.com>
Message-ID: <480CE225.7090801@gmx.de>

Scott McLoughlin schrieb:
> I have the Antlr book, so let me know if there's a page/section I should
> check out that addresses this problem.
> 
> Here's the sample production from the grammar.
> 
> funFormals
>    :    OPAREN! formals ('=>'! typeList)? CPAREN! -> ^(DEF formals)
>    ;
> 
> Looks normal enough, but that -> ^(DEF formals) is the killer.  When I
> compile the grammar, I get a long error message that starts out.
> 
>    Cannot generate the grammar because:
>    error(10) internal ...more stuff.....
>    java.lang.IllegalArgumentException: Can't find template 
> tokenRefBangTrack.st
>    ....more stuff....
> 
> Removing the -> clause, and everything compiles fine, but generates a 
> pretty
> useless AST :-(
> 
> Any work arounds?

If you use '!' or '^', you can't use the rewrite rules, too. Just change 
"'=>'!" to "'=>'" when using the rewrite rule.

Johannes

From elekis at gmail.com  Mon Apr 21 13:21:44 2008
From: elekis at gmail.com (jabon)
Date: Mon, 21 Apr 2008 22:21:44 +0200
Subject: [antlr-interest] HOW To catch error (no exception is thown)
Message-ID: <480CF758.3020107@gmail.com>

hi all, 

it's been 2 days, I try to catch error from the parser.
I would like to try a simple m?thod  like that

public void testDocument(){
       
        try {
            parser.document();
        }
        catch (RecognitionException e) {
            System.err.println("SOMETHING HERE");
            System.exit(1);
        }
       
    }

but that only print
    BR.recoverFromMismatchedToken
    line 11:3 mismatched input ';' expecting T_Ident

nothing arrive in the catch block


I ve try the rulecatch option. but that doesent change anything

and I find no documentation on that

thnks


a++




From antlr at mirality.co.nz  Mon Apr 21 13:29:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 22 Apr 2008 08:29:04 +1200
Subject: [antlr-interest] Template Rewrite Rule consumes one more Token
 than expected
In-Reply-To: <480C9BCA.5060807@web.de>
References: <480C9180.9000102@web.de> <1208783927.5967.11.camel@localhost>
	<480C9BCA.5060807@web.de>
Message-ID: <20080421202923.8C41811EC5E@www.antlr.org>

At 01:51 22/04/2008, Felix Dorner wrote:
 >Right, but it does not delete the ";" from the corresponding 
Token
 >stream.

That's irrelevant.

 >I expect the "a*b" to be replaced by "where's the 
semicolon?",  but
 >the semicolon should remain in the token stream.
 >
 >The template rewrite rule for an "expression" should only 
replace
 >the tokens that were matched for that expression.

That's not how it works.  The parser outputs an AST, presumed to 
be a complete representation of the parsed content.  The tree 
parser takes the AST as input, and based on the nodes present in 
the tree either executes some actions or generates some output 
based on templates.  If there isn't a node for a token, it doesn't 
go and magically re-insert it into the output, it assumes you 
intentionally left it out of the AST because you don't want it in 
the output (eg. maybe you've replaced it by something more 
interesting, or maybe it's just structural and is irrelevant in 
the AST anyway).

If you want to get the semicolon in the output, then remove the ! 
from it so that it gets inserted into the AST.  The tree parser 
can only see what's in the AST.


From markobarko at gmail.com  Mon Apr 21 14:00:03 2008
From: markobarko at gmail.com (Marko Simovic)
Date: Mon, 21 Apr 2008 17:00:03 -0400
Subject: [antlr-interest] Using tree grammar for second pass to check
	function signatures
Message-ID: <1208811603.7519.15.camel@main>

hi all,

i was wondering about using the tree grammar to validate parameter
counts on some functions in my grammar. the rule in the parser is:

functionCall	:	functionName LParen parameterList RParen -> ^(Function
functionName parameterList)

in this case, functionName is any string token.

now, if i have a function called SUM that takes two parameters i'd like
to ensure that the params supplied are correct. to do this currently i
use (in parser):

functionCall	:	functionName LParen parameterList RParen -> ^(Function
functionName parameterList)
		| 
                    tfunc='sum' LParen parameter Comma parameter
RParen	-> ^(Function $tfunc parameter+);

is it possible to check this in a tree grammar instead?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080421/b8d2c9c7/attachment.html 

From guntiso at latnet.lv  Mon Apr 21 15:50:41 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Tue, 22 Apr 2008 01:50:41 +0300
Subject: [antlr-interest] HOW To catch error (no exception is thown)
In-Reply-To: <480CF758.3020107@gmail.com>
References: <480CF758.3020107@gmail.com>
Message-ID: <1208818241.480d1a4166ae4@clients.latnet.lv>

> it's been 2 days, I try to catch error from the parser.

To catch error, you need to throw it first.
For some reason still unclear to me,
antlr lexer does not throw error by default.

The answer you are looking for is in FAQ.
For some reason, not error handling FAQ but lexing FAQ instead.

!The code there is version specific!

It suggests you to override nextToken() with lots of code.

I am just overriding reportError() with one line to throw
RuntimeException from there, but then I can not use syntactic
predicates for lexer rules.

Perhaps there are other options, too.

http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217.


From felix_do at web.de  Mon Apr 21 15:21:45 2008
From: felix_do at web.de (Felix Dorner)
Date: Tue, 22 Apr 2008 00:21:45 +0200
Subject: [antlr-interest] Using tree grammar for second pass to check
 function signatures
In-Reply-To: <1208811603.7519.15.camel@main>
References: <1208811603.7519.15.camel@main>
Message-ID: <480D1379.2000507@web.de>

Marko Simovic wrote:
> hi all,
>
> i was wondering about using the tree grammar to validate parameter 
> counts on some functions in my grammar. the rule in the parser is:
>
> functionCall : functionName LParen parameterList RParen -> ^(Function 
> functionName parameterList)
>
> in this case, functionName is any string token.
>
> now, if i have a function called SUM that takes two parameters i'd 
> like to ensure that the params supplied are correct. to do this 
> currently i use (in parser):
>
> functionCall : functionName LParen parameterList RParen -> ^(Function 
> functionName parameterList)
> |
>                     tfunc='sum' LParen parameter Comma parameter 
> RParen -> ^(Function $tfunc parameter+);
>
> is it possible to check this in a tree grammar instead? 
If you just want to check if the number of arguments are correct, then 
you could do:

expr: ^(CALL name parameters*) {aMap.get(name)  ==  
$CALL.childrenCount() - 1}

where aMap would be a map from function names to the number of 
arguments. Syntax above might not be correct, but I hope the idea is 
clear. You'll probably not
want to list all your functions literally in your grammar, like you do 
above.

Felix



From jaluber at gmx.de  Mon Apr 21 16:14:57 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 22 Apr 2008 01:14:57 +0200
Subject: [antlr-interest] HOW To catch error (no exception is thown)
In-Reply-To: <1208818241.480d1a4166ae4@clients.latnet.lv>
References: <480CF758.3020107@gmail.com>
	<1208818241.480d1a4166ae4@clients.latnet.lv>
Message-ID: <480D1FF1.20704@gmx.de>

Guntis Ozols schrieb:
>> it's been 2 days, I try to catch error from the parser.
> 
> To catch error, you need to throw it first.
> For some reason still unclear to me,
> antlr lexer does not throw error by default.
> 
> The answer you are looking for is in FAQ.
> For some reason, not error handling FAQ but lexing FAQ instead.
> 
> !The code there is version specific!
> 
> It suggests you to override nextToken() with lots of code.
> 
> I am just overriding reportError() with one line to throw
> RuntimeException from there, but then I can not use syntactic
> predicates for lexer rules.
> 
> Perhaps there are other options, too.
> 
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217.
> 

ANTLR 3.1 does change its behaviour regarding this issue. Maybe Jabon 
should try out the latest build?

Johannes

From elekis at gmail.com  Mon Apr 21 21:56:58 2008
From: elekis at gmail.com (jabon)
Date: Tue, 22 Apr 2008 06:56:58 +0200
Subject: [antlr-interest] HOW To catch error (no exception is thown)
In-Reply-To: <1208818241.480d1a4166ae4@clients.latnet.lv>
References: <480CF758.3020107@gmail.com>
	<1208818241.480d1a4166ae4@clients.latnet.lv>
Message-ID: <480D701A.2010808@gmail.com>

Guntis Ozols a ?crit :
>> it's been 2 days, I try to catch error from the parser.
>>     
>
> To catch error, you need to throw it first.
> For some reason still unclear to me,
> antlr lexer does not throw error by default.
>
> The answer you are looking for is in FAQ.
> For some reason, not error handling FAQ but lexing FAQ instead.
>
> !The code there is version specific!
>
> It suggests you to override nextToken() with lots of code.
>
> I am just overriding reportError() with one line to throw
> RuntimeException from there, but then I can not use syntactic
> predicates for lexer rules.
>
> Perhaps there are other options, too.
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217.
>
>   
thanks a lot, that work .I ve just put

 public void reportError (RecognitionException re){
             throw new RuntimeException("Bailing out!");
        }

in member in parser.I have no information on the error  but i have an 
error (it still that).

PS: I use  antwork 1.1.7


a+++


From antlr at mirality.co.nz  Tue Apr 22 03:17:21 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 22 Apr 2008 22:17:21 +1200
Subject: [antlr-interest] Template Rewrite Rule consumes one more Token
 than expected
In-Reply-To: <480D0F76.1040708@web.de>
References: <480C9180.9000102@web.de> <1208783927.5967.11.camel@localhost>
	<480C9BCA.5060807@web.de> <E1Jo2da-0001m3-00@mx30.web.de>
	<480D0F76.1040708@web.de>
Message-ID: <20080422101806.3CD0811EC50@www.antlr.org>

At 10:04 22/04/2008, Felix Dorner wrote:
 >a) The tree parser does not have to re-insert anything in to the 

 >token stream, because not hooking a token into the tree does not 

 >imply that it's deleted from the input token stream.

No, but the token stream is only input to the parser, not the tree 
parser.  It's totally irrelevant to the tree parser, as far as I 
know.  (But maybe you're doing something I don't know about -- see 
below.)

 >b) In the book, there's an example where Terence rewrites a 
token
 >stream with a tree grammar, he  excludes semicolons from the 
AST,
 >but in the rewritten token stream, the tokens are still there
 >( I admit that I am not sure if he does some magic to make the
 >semicolons appear..)

I don't have the book, so I can't speak to that.

 >grammar Test;
 >options{output=AST;ASTLabelType=CommonTree;}
 >statement : (expression '!'!)* ;
 >expression : 'foo';
 >
 >tree grammar TestTree;
 >options{tokenVocab=Test;output=template;ASTLabelType=CommonTree;
 >rewrite=true;}
 >statement: expression*;
 >expression : 'foo' -> template(text={"bar"}) "<text>";
 >
 >Input "foo!foo!foo!" yields the output "bar!bar!bar!", the '!' 
are
 >still there... Contrary to the previous example.

Ok, I have no explanation for that, if true.  Unless that's 
something caused by the 'rewrite=true' option; I'm not familiar 
with that one.


From felix_do at web.de  Tue Apr 22 03:53:01 2008
From: felix_do at web.de (Felix Dorner)
Date: Tue, 22 Apr 2008 12:53:01 +0200
Subject: [antlr-interest] Template Rewrite Rule consumes one more Token
 than expected
In-Reply-To: <E1JoFag-0003eL-00@mx42.web.de>
References: <480C9180.9000102@web.de> <1208783927.5967.11.camel@localhost>
	<480C9BCA.5060807@web.de> <E1Jo2da-0001m3-00@mx30.web.de>
	<480D0F76.1040708@web.de> <E1JoFag-0003eL-00@mx42.web.de>
Message-ID: <480DC38D.1050508@web.de>

Gavin Lambert wrote:
> At 10:04 22/04/2008, Felix Dorner wrote:
> >a) The tree parser does not have to re-insert anything in to the
> >token stream, because not hooking a token into the tree does not
> >imply that it's deleted from the input token stream.
>
> No, but the token stream is only input to the parser, not the tree 
> parser.  It's totally irrelevant to the tree parser, as far as I 
> know.  (But maybe you're doing something I don't know about -- see 
> below.)
Yeah, I guess I do something different. Because the excluded tokens are 
not visible to the tree parser, I shouldn't be able to replace them in a 
rewriter that
only sees the AST.
> >grammar Test;
> >options{output=AST;ASTLabelType=CommonTree;}
> >statement : (expression '!'!)* ;
> >expression : 'foo';
> >
> >tree grammar TestTree;
> >options{tokenVocab=Test;output=template;ASTLabelType=CommonTree;
> >rewrite=true;}
> >statement: expression*;
> >expression : 'foo' -> template(text={"bar"}) "<text>";
> >
> >Input "foo!foo!foo!" yields the output "bar!bar!bar!", the '!' are
> >still there... Contrary to the previous example.
>
> Ok, I have no explanation for that, if true.  Unless that's something 
> caused by the 'rewrite=true' option; I'm not familiar with that one.
The "rewrite=true" says that I don't want to create a completely new 
output, but to indicate that I want to barely change _some_ of the 
original tokens in
the stream. If I do this in a  parser, the parser should of course only 
be able to access parts of the original token stream, namely those 
tokens that are hooked into the tree. It's like shooting a bunch of 
bullets through a wall. I can now spray some color at the wall behind, 
but only at where the holes are. My first example also sprayed "around 
the corner", which seems fishy to me.

Felix




From simon.woods at virgin.net  Tue Apr 22 06:56:26 2008
From: simon.woods at virgin.net (Simon Woods)
Date: Tue, 22 Apr 2008 14:56:26 +0100
Subject: [antlr-interest] Strategy for generating text pattern for a
	decrementing value
Message-ID: <480DEE8A.1040206@virgin.net>

Hi

I am translating a language into a new form, so I have a grammar, tree 
walker and several templates.

In the original language, there may be an occurance of a particular 
expression which contains a number, N. If this expression occurs, based 
on the value this number, I want to generate a text pattern something like

"mytextpattern-(N) OR mytextpattern-(N-1) OR mytextpattern-(N-2) OR 
mytextpattern-(N-3) ..." until N = 0

I am unsure of the way to approach this and am wondering if someone 
could give me some pointers. e.g. Should I be passing that number into a 
rule and then decrementing the value by passing it somehow into a method 
in the native language (C#) and then using that returned value.

Many thanks

Simon


From Dejan.Kecman at tdsecurities.com  Tue Apr 22 07:53:35 2008
From: Dejan.Kecman at tdsecurities.com (Kecman, Dejan)
Date: Tue, 22 Apr 2008 10:53:35 -0400
Subject: [antlr-interest] Porting ANTLR-Java-AST-Template based solution to
 ANTLR-C based solution
Message-ID: <953C58D2679A3B45892D37F06D7B579015C0F0EF@EX7T2-SV05.TDBFG.COM>

Hi,

I am new to ANTLR, so please be gentle and patient with me... I read book, I browsed through available examples, and after a while, I successfully created my grammar and Java version of parser/lexer that produces AST, and AST walker that uses templates for generating structured text.  It was not that difficult at all even for beginner in this area. But now, I want to port this to C/C++ world, and since templates are not supported in ANTLR-C runtime, I am stacked here.  So, my question is the following - what is the best approach to porting ANTLR-Java-AST-Template based solution to ANTLR-C based solution?  I was browsing through many examples, but most of them use "printf" for any output, and I need ANTLR based object to be part of bigger schema and used directly within my application code. In my templates I used mainly two forms:

templateOne( xxx ) ::=<<
Some text
<xxx>
Yet another text
>>

templateTwo( yyy ) ::=<<
Some text
<yyy:{yyy | More text <yyy>}>
Yet more text
>>

So, my question is - what is the best way to make this working in ANTLR-C based world?  I would appreciate any pointers and would really appreciate some example.

Thank you in advance and thanks for great tool


********************
NOTICE OF CONFIDENTIALITY
This communication including any information transmitted with it is 
intended only for the use of the addressees and is confidential. 
If you are not an intended recipient or responsible for delivering 
the message to an intended recipient, any review, disclosure, 
conversion to hard copy, dissemination, reproduction or other use 
of any part of this communication is strictly prohibited, as is the 
taking or omitting of any action in reliance upon this communication. 
If you receive this communication in error or without authorization 
please notify us immediately by return e-mail or otherwise and 
permanently delete the entire communication from any computer, 
disk drive, or other storage medium.

If the above disclaimer is not properly readable, it can be found at 
www.td.com/legal
                                                           
AVERTISSEMENT DE CONFIDENTIALITE                   
Ce courriel, ainsi que tout renseignement ci-inclus, destin? uniquement 
aux destinataires susmentionn?s,  est confidentiel.  Si vous 
n??tes pas le destinataire pr?vu ou un agent responsable de la 
livraison de ce courriel, tout examen, divulgation, copie, impression, 
reproduction, distribution, ou autre utilisation d?une partie de ce 
courriel est strictement interdit de m?me que toute intervention ou 
abstraction ? cet ?gard.  Si vous avez re?u ce message par erreur ou 
sans autorisation, veuillez en aviser imm?diatement l?exp?diteur par 
retour de courriel ou par un autre moyen et supprimer imm?diatement 
cette communication enti?re de tout syst?me ?lectronique.

Si l'avis de non-responsabilit? ci-dessus n'est pas lisible, vous 
pouvez le consulter ? www.td.com/francais/legale
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080422/9856d985/attachment.html 

From yau at LGSInnovations.com  Tue Apr 22 08:53:54 2008
From: yau at LGSInnovations.com (Yau Kwong K (Tony))
Date: Tue, 22 Apr 2008 11:53:54 -0400
Subject: [antlr-interest] Does ANTLR use Adaptor to walk the tree?
Message-ID: <8A2EB455D62ADA438CD446EDF41F2D0D025CE27F@BLTSXVS01.govsolutions.com>

Hi all,

 

I currently have a tree parser that builds the AST and a tree walker
which walks the AST (under C Target)

I also have a treeAdaptor which I would like to experiment to see how I
can use to talk to the tree walker. 

 

I've noticed when it builds the tree, the treeAdaptor is used heavily.
However, when I walk the tree (with tree grammar), the adaptor is not
used at all (only adaptorNew is called).  If this is true, how do I
extend the tree walker so that it knows how to walk my own tree with
custom process I would like to define?  In my application, I may not
have the tree builder to start with. 

 

Thanks

Tony

 

 

#include <ASTBuildParser.h>

#include <ASTBuildLexer.h>

#include <TreeWalk.h>

#include <Mytreeadaptor.h>

 

// Main entry point for this example

//

int ANTLR3_CDECL

main     (int argc, char *argv[])

{

            pANTLR3_UINT8
fName;

            pANTLR3_INPUT_STREAM                                input;

            pASTBuildLexer
lxr;

            pANTLR3_COMMON_TOKEN_STREAM             tstream;

            pASTBuildParser
psr;

            pANTLR3_BASE_TREE_ADAPTOR                    myAdaptor;

            ASTBuildParser_prog_return
parser_ast;

            pANTLR3_COMMON_TREE_NODE_STREAM nodes;

            pTreeWalk
tw;

 

printf("--- TREE BUILDING ---\n");

     

            if (argc < 2 || argv[1] == NULL)

                        fName = (pANTLR3_UINT8) "./input";

            else

                        fName  = (pANTLR3_UINT8)argv[1];

            

            input     = antlr3AsciiFileStreamNew(fName);

 

            if ( input == NULL )

            {

printf("Unable to open file %s due to malloc() failure1\n", (char
*)fName);

            }

 

            lxr             = ASTBuildLexerNew(input);       

 

            if ( lxr == NULL )

            {

                        printf("Unable to create the lexer due to
malloc() failure1\n");

                        exit(ANTLR3_ERR_NOMEM);

            }

 

            tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
lxr->pLexer->tokSource);

if (tstream == NULL)

{

printf("Out of memory trying to allocate token stream\n");

            exit(ANTLR3_ERR_NOMEM);

 }

 

            psr = ASTBuildParserNew(tstream);  

 

            if (psr == NULL)

            {

                        printf("Out of memory trying to allocate
parser\n");

                        exit(ANTLR3_ERR_NOMEM);

            }

            myAdaptor =
(pANTLR3_BASE_TREE_ADAPTOR)MY_TREE_ADAPTORNew(tstream->tstream->tokenSou
rce->strFactory);

            psr->adaptor = myAdaptor; 

            parser_ast = psr->prog(psr);

 

 

            // Tree Walker

 

            printf("\n--- TREE WALKINGING ---\n\n");

            nodes = antlr3CommonTreeNodeStreamNewTree(parser_ast.tree,
ANTLR3_SIZE_HINT);

            myAdaptor =
(pANTLR3_BASE_TREE_ADAPTOR)MY_TREE_ADAPTORNew(tstream->tstream->tokenSou
rce->strFactory);

            psr->adaptor = myAdaptor; 

            tw = TreeWalkNew(nodes);

            tw->twProg(tw);

}

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080422/38a35d53/attachment-0001.html 

From jqwoods at gmail.com  Tue Apr 22 09:00:14 2008
From: jqwoods at gmail.com (John Woods)
Date: Tue, 22 Apr 2008 09:00:14 -0700
Subject: [antlr-interest] Trouble using backtracking (I think)
Message-ID: <480E0B8E.5060002@gmail.com>


I'm having trouble figuring out why my grammar isn't working as 
expected, and would greatly appreciate any pointers on what I'm 
misunderstanding.

My generated parser behaves as if backtracking isn't working as I would 
expect. And further, when I modify the grammar in a way that I wouldn't 
expect to have an effect, backtracking appears to start working.

I've simplified the grammar as much as I could and still reproduce the 
problem. And the simplified input I'm trying to parse is "(a = b)" 
(without the quotes).

Here's the test grammar:

     grammar Test;

     options {
         language = Java;
         output = AST;
         backtrack = true;
     }

     input
         : expression
         | '(' input ')'
         ;

     expression
         // Swapping the following two lines makes it
         // work for input "(a = b)". But why won't it
         // work with backtracking the way it is?
         : lower_term
         | term '=' term
         ;

     term
         : lower_term
         | UPPER
         ;

     lower_term
         : LOWER
         // Removing "term*" from the following line, or
         // removing the line altogether makes it work.
         // Why is that? Seems unrelated to given input.
         | LOWER '(' term* ')'
         ;

     UPPER: 'A'..'Z';
     LOWER: 'a'..'z';

     WHITESPACE: (' '|'\t'|'\n'|'\r'|'\f') { skip(); };

When I try to parse the input "(a = b)", I get the following error:

     BR.recoverFromMismatchedToken
     line 1:3 mismatched input '=' expecting ')'

It appears that the parser attempts to parse the "expression" rule using 
the "lower_term" alternative only, and when that fails, it seems like 
backtracking isn't coming back and attempting the other alternative of 
"term '=' term".

I'm using ANTLR version 3.0.1 (August 13, 2007).

Finally, here's the test driver:

     import java.io.*;
     import org.antlr.runtime.*;
     import org.antlr.runtime.tree.*;

     public class Test {
         public static void main(String[] args) throws Exception {
             String string = "(a = b)";
             ByteArrayInputStream byteArrayInputStream =
                 new ByteArrayInputStream(string.getBytes());
             ANTLRInputStream antlrInputStream =
                 new ANTLRInputStream(byteArrayInputStream);
             TestLexer testLexer =
                 new TestLexer(antlrInputStream);
             CommonTokenStream commonTokenStream =
                 new CommonTokenStream(testLexer);
             TestParser testParser =
                 new TestParser(commonTokenStream);
             CommonTree commonTree =
                 (CommonTree)testParser.input().getTree();
             System.out.println(commonTree.toStringTree());
         }
     }

From antlr at jazillian.com  Tue Apr 22 09:10:49 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 22 Apr 2008 12:10:49 -0400
Subject: [antlr-interest] CORBA IDL grammar union switch problem
In-Reply-To: <6f1d4acc0804210726y3e0ea936l4d3f2539436a117e@mail.gmail.com>
References: <6f1d4acc0804210726y3e0ea936l4d3f2539436a117e@mail.gmail.com>
Message-ID: <480E0E09.6000008@jazillian.com>

I noticed that the java.g that comes with ANTLR2
has some special stuff to handle this "case" case
to avoid the problem you're seeing:

casesGroup
    :   (   // CONFLICT: to which case group do the statements bind?
            // ANTLR generates proper code: it groups the
            // many "case"/"default" labels together then
            // follows them with the statements
            options {
                greedy = true;
            }
            :
            aCase
        )+
        caseSList
        {#casesGroup = #([CASE_GROUP, "CASE_GROUP"], #casesGroup);}
    ;

aCase
    :   ("case"^ expression | "default") COLON!
    ;

caseSList
    :   (statement)*
        {#caseSList = #(#[SLIST,"SLIST"],#caseSList);}
    ;


Maybe someone else can explain exactly what's happening here.

Andy

 
Luk?? Zapletal wrote:
> Hello,
> 
> I am new to Antlr and I am having problem with the grammar. Lets
> suppose the input:
> 
> union testUnion switch(char) {
>   case 'a' :
>   case 'b' :
>   case 'c' : long x;
>   default : long y;
> };
> 
> When I parse this with Antlr the empty cases 'a' and 'b' are skipped.
> There is no way to read constants 'a' and 'b' because when I call
> getNextSibling() on the first "case" the constant 'c' is returned. I
> need to read all 'a', 'b' and 'c' constants and do some actions.
> 
> I do not know how to traverse the AST tree to get these values. Is
> something wrong in the grammar?  The most important grammar definition
> follows (taken from corba.g). Thanks for your help.
> 
> union_type
> 	:   "union"^
> 	    identifier
> 	    "switch"! LPAREN! switch_type_spec RPAREN!
> 	    LCURLY! switch_body RCURLY!
> 	;
> 
> switch_type_spec
> 	:   integer_type
> 	|   char_type
> 	|   boolean_type
> 	|   enum_type
> 	|   scoped_name
> 	;
> 
> switch_body
> 	:   case_stmt_list
> 	;
> 
> case_stmt_list
> 	:  (case_stmt)+
> 	;
> 
> case_stmt
> 	:   // case_label_list
> 	    ( "case"^ const_exp COLON!
> 	    | "default"^ COLON!
> 	    )+
> 	    element_spec SEMI!
> 	;
> 
> // case_label_list
> // 	:   (case_label)+
> // 	;
> 
> 
> // case_label
> // 	:   "case"^ const_exp COLON!
> // 	|   "default"^ COLON!
> // 	;
> 
> element_spec
> 	:   type_spec declarator
> 	;
> 
> 


From ron.hunter-duvar at oracle.com  Tue Apr 22 09:20:48 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Tue, 22 Apr 2008 10:20:48 -0600
Subject: [antlr-interest] Trouble using backtracking (I think)
In-Reply-To: <480E0B8E.5060002@gmail.com>
References: <480E0B8E.5060002@gmail.com>
Message-ID: <480E1060.5050402@oracle.com>

I haven't worked with backtracking yet, but in general, your longer 
alternatives should come first. I think if you swap the order of the 
alternatives in the expression and lower_term rules it will work.

I'm not sure how far back backtracking will go in order to try matching 
the input (backtracking all the way to the beginning and trying every 
possibility can lead to exponential parse times). In this case, 
expression successfully matches the first alternative, lower_term. Given 
this match, it's looking for the closing bracket back up in the input 
rule. I don't know at this point if it will then throw away the 
successful expression match and try the second alternative.

Is there a good reason why you want to try the shorter alternative 
first, and backtrack if that ends up causing a downstream failure?

Ron


John Woods wrote:
>
> I'm having trouble figuring out why my grammar isn't working as 
> expected, and would greatly appreciate any pointers on what I'm 
> misunderstanding.
>
> My generated parser behaves as if backtracking isn't working as I 
> would expect. And further, when I modify the grammar in a way that I 
> wouldn't expect to have an effect, backtracking appears to start working.
>
> I've simplified the grammar as much as I could and still reproduce the 
> problem. And the simplified input I'm trying to parse is "(a = b)" 
> (without the quotes).
>
> Here's the test grammar:
>
>     grammar Test;
>
>     options {
>         language = Java;
>         output = AST;
>         backtrack = true;
>     }
>
>     input
>         : expression
>         | '(' input ')'
>         ;
>
>     expression
>         // Swapping the following two lines makes it
>         // work for input "(a = b)". But why won't it
>         // work with backtracking the way it is?
>         : lower_term
>         | term '=' term
>         ;
>
>     term
>         : lower_term
>         | UPPER
>         ;
>
>     lower_term
>         : LOWER
>         // Removing "term*" from the following line, or
>         // removing the line altogether makes it work.
>         // Why is that? Seems unrelated to given input.
>         | LOWER '(' term* ')'
>         ;
>
>     UPPER: 'A'..'Z';
>     LOWER: 'a'..'z';
>
>     WHITESPACE: (' '|'\t'|'\n'|'\r'|'\f') { skip(); };
>
> When I try to parse the input "(a = b)", I get the following error:
>
>     BR.recoverFromMismatchedToken
>     line 1:3 mismatched input '=' expecting ')'
>
> It appears that the parser attempts to parse the "expression" rule 
> using the "lower_term" alternative only, and when that fails, it seems 
> like backtracking isn't coming back and attempting the other 
> alternative of "term '=' term".
>
> I'm using ANTLR version 3.0.1 (August 13, 2007).
>
> Finally, here's the test driver:
>
>     import java.io.*;
>     import org.antlr.runtime.*;
>     import org.antlr.runtime.tree.*;
>
>     public class Test {
>         public static void main(String[] args) throws Exception {
>             String string = "(a = b)";
>             ByteArrayInputStream byteArrayInputStream =
>                 new ByteArrayInputStream(string.getBytes());
>             ANTLRInputStream antlrInputStream =
>                 new ANTLRInputStream(byteArrayInputStream);
>             TestLexer testLexer =
>                 new TestLexer(antlrInputStream);
>             CommonTokenStream commonTokenStream =
>                 new CommonTokenStream(testLexer);
>             TestParser testParser =
>                 new TestParser(commonTokenStream);
>             CommonTree commonTree =
>                 (CommonTree)testParser.input().getTree();
>             System.out.println(commonTree.toStringTree());
>         }
>     }
>

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From john at jacelridge.com  Tue Apr 22 10:08:32 2008
From: john at jacelridge.com (John Ridgway)
Date: Tue, 22 Apr 2008 13:08:32 -0400
Subject: [antlr-interest] Strategy for generating text pattern for a
	decrementing value
In-Reply-To: <480DEE8A.1040206@virgin.net>
References: <480DEE8A.1040206@virgin.net>
Message-ID: <D94CDB73-4FC9-43BC-8ED6-BA6799BD3B14@jacelridge.com>

I think you'll find that StringTemplate has everything you need to do  
this.  Check the documentation pages at stringtemplate.org.

Peace
- John


On Apr 22, 2008, at 9:56 AM, Simon Woods wrote:

> Hi
>
> I am translating a language into a new form, so I have a grammar,  
> tree walker and several templates.
>
> In the original language, there may be an occurance of a particular  
> expression which contains a number, N. If this expression occurs,  
> based on the value this number, I want to generate a text pattern  
> something like
>
> "mytextpattern-(N) OR mytextpattern-(N-1) OR mytextpattern-(N-2) OR  
> mytextpattern-(N-3) ..." until N = 0
>
> I am unsure of the way to approach this and am wondering if someone  
> could give me some pointers. e.g. Should I be passing that number  
> into a rule and then decrementing the value by passing it somehow  
> into a method in the native language (C#) and then using that  
> returned value.
>
> Many thanks
>
> Simon
>


From antlr at deloreyfamily.org  Tue Apr 22 10:24:52 2008
From: antlr at deloreyfamily.org (Dan Delorey)
Date: Tue, 22 Apr 2008 11:24:52 -0600
Subject: [antlr-interest] Building an AST for Java
In-Reply-To: <20D6CDC7-EA0F-457C-8E12-086E48CF37AF@jacelridge.com>
References: <90d6c0620804191141o1a99ea57ib1da7ba260faf29@mail.gmail.com>
	<20D6CDC7-EA0F-457C-8E12-086E48CF37AF@jacelridge.com>
Message-ID: <90d6c0620804221024u117ad2c9s1ecbe508e351cca5@mail.gmail.com>

I just wanted to follow up back on the list to thank John and endorse the
grammar. This does successfully solve the problem I was encountering. I have
not yet had time to dig in deep enough to figure out why my grammar was
losing parts of the AST during back tracking and John's is not. I will reply
again if I figure that out.

I also wanted to make sure we got on the list that this grammar requires
ANTLR 3.1 beta. I have been able to use it in the bundled mac ANTLRWorks
version 1.2 beta (after changing to VMOptions in Info.plist to allow more
heap space...).

Thanks, John!

On Sat, Apr 19, 2008 at 12:56 PM, John Ridgway <john at jacelridge.com> wrote:

> I have a version of the Java.g grammar that produces an AST.  It is going
> to go up on the Antlr web-site soon, but it's not there yet.  You are
> welcome to use it, with the same licensing restrictions as Antlr itself.
>  I'll e-mail stuff directly to you in a separate e-mail if you would like.
>  Just e-mail me privately.  This goes for anyone else who might want such a
> thing.
>
> I actually build the AST and have a tree grammar that outputs Java code.
>  The combination has successfully parsed and recreated the entire JDK 1.5
> source tree.
>
> Peace
> - John
>
>
>
> On Apr 19, 2008, at 2:41 PM, Dan Delorey wrote:
>
>  I've been having quite a bit of trouble generating an AST for Java. I
> > started by trying to modify the Java.g posted by Ter. I have also tried
> > using the one posted by Dieter Habelitz. In both cases I'm having the same
> > problem, though.
> >
> > That is, I can't seem to modify the grammar so that it doesn't require
> > backtracking. With backtracking, however, critical (for my purposes) parts
> > of the AST are missing. For example, the branches that should be generated
> > by the following code:
> >
> > f.getName().length()
> >
> > Is incomplete. I can get either the f.getName() function call in the
> > tree or the length() function call, but not both.
> >
> > So far I have tried using rule scopes, global scopes, parameters, return
> > values, and standard rewrite rules. I'm really confused that this is so hard
> > for me. Could anyone give me some guidance?
> >
> > Thanks,
> > Dan
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080422/948ffb85/attachment.html 

From jqwoods at gmail.com  Tue Apr 22 10:25:28 2008
From: jqwoods at gmail.com (John Woods)
Date: Tue, 22 Apr 2008 10:25:28 -0700
Subject: [antlr-interest] Trouble using backtracking (I think)
In-Reply-To: <480E1060.5050402@oracle.com>
References: <480E0B8E.5060002@gmail.com> <480E1060.5050402@oracle.com>
Message-ID: <480E1F88.6090207@gmail.com>

Thanks Ron,

I see your point about preferring to place longer alternatives first for 
performance reasons. And making the rearrangements you suggest does make 
my parser work.

But I'm curious if anyone could explain why rearranging the order of 
alternatives would affect what input can be parsed when backtracking is 
enabled. I understand that the order of alternatives will affect which 
of several possible alternatives will be matched first. But in the case 
where the first alternative doesn't match, and the second does, I'm 
wondering why backtracking doesn't come back and try the second 
alternative. Perhaps, as you suggest, there's a limit to how much 
backtracking will back track.


-----Original Message-----
From: Ron Hunter-Duvar
Sent: 04/22/2008 09:20 AM
> I haven't worked with backtracking yet, but in general, your longer 
> alternatives should come first. I think if you swap the order of the 
> alternatives in the expression and lower_term rules it will work.
> 
> I'm not sure how far back backtracking will go in order to try matching 
> the input (backtracking all the way to the beginning and trying every 
> possibility can lead to exponential parse times). In this case, 
> expression successfully matches the first alternative, lower_term. Given 
> this match, it's looking for the closing bracket back up in the input 
> rule. I don't know at this point if it will then throw away the 
> successful expression match and try the second alternative.
> 
> Is there a good reason why you want to try the shorter alternative 
> first, and backtrack if that ends up causing a downstream failure?
> 
> Ron
> 
> 
> John Woods wrote:
>>
>> I'm having trouble figuring out why my grammar isn't working as 
>> expected, and would greatly appreciate any pointers on what I'm 
>> misunderstanding.
>>
>> My generated parser behaves as if backtracking isn't working as I 
>> would expect. And further, when I modify the grammar in a way that I 
>> wouldn't expect to have an effect, backtracking appears to start working.
>>
>> I've simplified the grammar as much as I could and still reproduce the 
>> problem. And the simplified input I'm trying to parse is "(a = b)" 
>> (without the quotes).
>>
>> Here's the test grammar:
>>
>>     grammar Test;
>>
>>     options {
>>         language = Java;
>>         output = AST;
>>         backtrack = true;
>>     }
>>
>>     input
>>         : expression
>>         | '(' input ')'
>>         ;
>>
>>     expression
>>         // Swapping the following two lines makes it
>>         // work for input "(a = b)". But why won't it
>>         // work with backtracking the way it is?
>>         : lower_term
>>         | term '=' term
>>         ;
>>
>>     term
>>         : lower_term
>>         | UPPER
>>         ;
>>
>>     lower_term
>>         : LOWER
>>         // Removing "term*" from the following line, or
>>         // removing the line altogether makes it work.
>>         // Why is that? Seems unrelated to given input.
>>         | LOWER '(' term* ')'
>>         ;
>>
>>     UPPER: 'A'..'Z';
>>     LOWER: 'a'..'z';
>>
>>     WHITESPACE: (' '|'\t'|'\n'|'\r'|'\f') { skip(); };
>>
>> When I try to parse the input "(a = b)", I get the following error:
>>
>>     BR.recoverFromMismatchedToken
>>     line 1:3 mismatched input '=' expecting ')'
>>
>> It appears that the parser attempts to parse the "expression" rule 
>> using the "lower_term" alternative only, and when that fails, it seems 
>> like backtracking isn't coming back and attempting the other 
>> alternative of "term '=' term".
>>
>> I'm using ANTLR version 3.0.1 (August 13, 2007).
>>
>> Finally, here's the test driver:
>>
>>     import java.io.*;
>>     import org.antlr.runtime.*;
>>     import org.antlr.runtime.tree.*;
>>
>>     public class Test {
>>         public static void main(String[] args) throws Exception {
>>             String string = "(a = b)";
>>             ByteArrayInputStream byteArrayInputStream =
>>                 new ByteArrayInputStream(string.getBytes());
>>             ANTLRInputStream antlrInputStream =
>>                 new ANTLRInputStream(byteArrayInputStream);
>>             TestLexer testLexer =
>>                 new TestLexer(antlrInputStream);
>>             CommonTokenStream commonTokenStream =
>>                 new CommonTokenStream(testLexer);
>>             TestParser testParser =
>>                 new TestParser(commonTokenStream);
>>             CommonTree commonTree =
>>                 (CommonTree)testParser.input().getTree();
>>             System.out.println(commonTree.toStringTree());
>>         }
>>     }
>>
> 


From felix_do at web.de  Tue Apr 22 10:59:52 2008
From: felix_do at web.de (Felix Dorner)
Date: Tue, 22 Apr 2008 19:59:52 +0200
Subject: [antlr-interest] Strategy for generating text pattern for
 a	decrementing value
In-Reply-To: <480DEE8A.1040206@virgin.net>
References: <480DEE8A.1040206@virgin.net>
Message-ID: <480E2798.7010305@web.de>

Simon Woods wrote:
> Hi
>
> I am translating a language into a new form, so I have a grammar, tree 
> walker and several templates.
>
> In the original language, there may be an occurance of a particular 
> expression which contains a number, N. If this expression occurs, 
> based on the value this number, I want to generate a text pattern 
> something like
>
> "mytextpattern-(N) OR mytextpattern-(N-1) OR mytextpattern-(N-2) OR 
> mytextpattern-(N-3) ..." until N = 0
Today I had my first amazing StringTemplate experience. I am amazed, 
although I don't know if thats the way to go, I find this really freaky

myNrule: NUMBER {

StringTemplate s = new StringTemplate("mytextpattern-($number; separator 
= )OR$)");
int i = Integer.parseInt($Number.text);
    for (; i >= 0; i--){
        s.setAttribute("number", new Integer(i)) // need to pass an object
    }
}

There may be syntax errors, I really dont get along with all those rule 
attributes.

From ron.hunter-duvar at oracle.com  Tue Apr 22 11:34:42 2008
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Tue, 22 Apr 2008 12:34:42 -0600
Subject: [antlr-interest] Trouble using backtracking (I think)
In-Reply-To: <480E1F88.6090207@gmail.com>
References: <480E0B8E.5060002@gmail.com> <480E1060.5050402@oracle.com>
	<480E1F88.6090207@gmail.com>
Message-ID: <480E2FC2.6080601@oracle.com>

Just a guess, but perhaps because the LL(*) look-ahead sees that it can 
resolve this, it never even tries backtracking. It may only backtrack 
when it encounters a situations where LL(*) fails. Hopefully someone 
more knowledgeable can jump in and settle this, though. I'm curious.

Ron


John Woods wrote:
> Thanks Ron,
>
> I see your point about preferring to place longer alternatives first 
> for performance reasons. And making the rearrangements you suggest 
> does make my parser work.
>
> But I'm curious if anyone could explain why rearranging the order of 
> alternatives would affect what input can be parsed when backtracking 
> is enabled. I understand that the order of alternatives will affect 
> which of several possible alternatives will be matched first. But in 
> the case where the first alternative doesn't match, and the second 
> does, I'm wondering why backtracking doesn't come back and try the 
> second alternative. Perhaps, as you suggest, there's a limit to how 
> much backtracking will back track.
>
>
> -----Original Message-----
> From: Ron Hunter-Duvar
> Sent: 04/22/2008 09:20 AM
>> I haven't worked with backtracking yet, but in general, your longer 
>> alternatives should come first. I think if you swap the order of the 
>> alternatives in the expression and lower_term rules it will work.
>>
>> I'm not sure how far back backtracking will go in order to try 
>> matching the input (backtracking all the way to the beginning and 
>> trying every possibility can lead to exponential parse times). In 
>> this case, expression successfully matches the first alternative, 
>> lower_term. Given this match, it's looking for the closing bracket 
>> back up in the input rule. I don't know at this point if it will then 
>> throw away the successful expression match and try the second 
>> alternative.
>>
>> Is there a good reason why you want to try the shorter alternative 
>> first, and backtrack if that ends up causing a downstream failure?
>>
>> Ron
>>
>>
>> John Woods wrote:
>>>
>>> I'm having trouble figuring out why my grammar isn't working as 
>>> expected, and would greatly appreciate any pointers on what I'm 
>>> misunderstanding.
>>>
>>> My generated parser behaves as if backtracking isn't working as I 
>>> would expect. And further, when I modify the grammar in a way that I 
>>> wouldn't expect to have an effect, backtracking appears to start 
>>> working.
>>>
>>> I've simplified the grammar as much as I could and still reproduce 
>>> the problem. And the simplified input I'm trying to parse is "(a = 
>>> b)" (without the quotes).
>>>
>>> Here's the test grammar:
>>>
>>>     grammar Test;
>>>
>>>     options {
>>>         language = Java;
>>>         output = AST;
>>>         backtrack = true;
>>>     }
>>>
>>>     input
>>>         : expression
>>>         | '(' input ')'
>>>         ;
>>>
>>>     expression
>>>         // Swapping the following two lines makes it
>>>         // work for input "(a = b)". But why won't it
>>>         // work with backtracking the way it is?
>>>         : lower_term
>>>         | term '=' term
>>>         ;
>>>
>>>     term
>>>         : lower_term
>>>         | UPPER
>>>         ;
>>>
>>>     lower_term
>>>         : LOWER
>>>         // Removing "term*" from the following line, or
>>>         // removing the line altogether makes it work.
>>>         // Why is that? Seems unrelated to given input.
>>>         | LOWER '(' term* ')'
>>>         ;
>>>
>>>     UPPER: 'A'..'Z';
>>>     LOWER: 'a'..'z';
>>>
>>>     WHITESPACE: (' '|'\t'|'\n'|'\r'|'\f') { skip(); };
>>>
>>> When I try to parse the input "(a = b)", I get the following error:
>>>
>>>     BR.recoverFromMismatchedToken
>>>     line 1:3 mismatched input '=' expecting ')'
>>>
>>> It appears that the parser attempts to parse the "expression" rule 
>>> using the "lower_term" alternative only, and when that fails, it 
>>> seems like backtracking isn't coming back and attempting the other 
>>> alternative of "term '=' term".
>>>
>>> I'm using ANTLR version 3.0.1 (August 13, 2007).
>>>
>>> Finally, here's the test driver:
>>>
>>>     import java.io.*;
>>>     import org.antlr.runtime.*;
>>>     import org.antlr.runtime.tree.*;
>>>
>>>     public class Test {
>>>         public static void main(String[] args) throws Exception {
>>>             String string = "(a = b)";
>>>             ByteArrayInputStream byteArrayInputStream =
>>>                 new ByteArrayInputStream(string.getBytes());
>>>             ANTLRInputStream antlrInputStream =
>>>                 new ANTLRInputStream(byteArrayInputStream);
>>>             TestLexer testLexer =
>>>                 new TestLexer(antlrInputStream);
>>>             CommonTokenStream commonTokenStream =
>>>                 new CommonTokenStream(testLexer);
>>>             TestParser testParser =
>>>                 new TestParser(commonTokenStream);
>>>             CommonTree commonTree =
>>>                 (CommonTree)testParser.input().getTree();
>>>             System.out.println(commonTree.toStringTree());
>>>         }
>>>     }
>>>
>>
>
>

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From lgcraymer at yahoo.com  Tue Apr 22 12:18:05 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 22 Apr 2008 12:18:05 -0700 (PDT)
Subject: [antlr-interest] Trouble using backtracking (I think)
Message-ID: <326355.77643.qm@web55902.mail.re3.yahoo.com>

Use of backtracking forces ANTLR into LL(1) mode; the inserted synpreds then do not help if a first alternative matches the second alternative completely;  thus

LOWER
| LOWER term
translates to

( LOWER )=> LOWER
| LOWER term

so the first alternative is always matched.  This could get fixed in a future version of ANTLR (heavier duty analysis with reordering of alternatives), but you are really better off with not using backtracking.  The current error messages should be good enough (or nearly so) to tell you where you need to either insert synpreds or left-factor your grammar if you forego use of the backtracking option.

--Loring

----- Original Message ----
> From: John Woods <jqwoods at gmail.com>
> To: antlr-interest at antlr.org
> Sent: Tuesday, April 22, 2008 9:00:14 AM
> Subject: [antlr-interest] Trouble using backtracking (I think)
> 
> 
> I'm having trouble figuring out why my grammar isn't working as 
> expected, and would greatly appreciate any pointers on what I'm 
> misunderstanding.
> 
> My generated parser behaves as if backtracking isn't working as I would 
> expect. And further, when I modify the grammar in a way that I wouldn't 
> expect to have an effect, backtracking appears to start working.
> 
> I've simplified the grammar as much as I could and still reproduce the 
> problem. And the simplified input I'm trying to parse is "(a = b)" 
> (without the quotes).
> 
> Here's the test grammar:
> 
>      grammar Test;
> 
>      options {
>          language = Java;
>          output = AST;
>          backtrack = true;
>      }
> 
>      input
>          : expression
>          | '(' input ')'
>          ;
> 
>      expression
>          // Swapping the following two lines makes it
>          // work for input "(a = b)". But why won't it
>          // work with backtracking the way it is?
>          : lower_term
>          | term '=' term
>          ;
> 
>      term
>          : lower_term
>          | UPPER
>          ;
> 
>      lower_term
>          : LOWER
>          // Removing "term*" from the following line, or
>          // removing the line altogether makes it work.
>          // Why is that? Seems unrelated to given input.
>          | LOWER '(' term* ')'
>          ;
> 
>      UPPER: 'A'..'Z';
>      LOWER: 'a'..'z';
> 
>      WHITESPACE: (' '|'\t'|'\n'|'\r'|'\f') { skip(); };
> 
> When I try to parse the input "(a = b)", I get the following error:
> 
>      BR.recoverFromMismatchedToken
>      line 1:3 mismatched input '=' expecting ')'
> 
> It appears that the parser attempts to parse the "expression" rule using 
> the "lower_term" alternative only, and when that fails, it seems like 
> backtracking isn't coming back and attempting the other alternative of 
> "term '=' term".
> 
> I'm using ANTLR version 3.0.1 (August 13, 2007).
> 
> Finally, here's the test driver:
> 
>      import java.io.*;
>      import org.antlr.runtime.*;
>      import org.antlr.runtime.tree.*;
> 
>      public class Test {
>          public static void main(String[] args) throws Exception {
>              String string = "(a = b)";
>              ByteArrayInputStream byteArrayInputStream =
>                  new ByteArrayInputStream(string.getBytes());
>              ANTLRInputStream antlrInputStream =
>                  new ANTLRInputStream(byteArrayInputStream);
>              TestLexer testLexer =
>                  new TestLexer(antlrInputStream);
>              CommonTokenStream commonTokenStream =
>                  new CommonTokenStream(testLexer);
>              TestParser testParser =
>                  new TestParser(commonTokenStream);
>              CommonTree commonTree =
>                  (CommonTree)testParser.input().getTree();
>              System.out.println(commonTree.toStringTree());
>          }
>      }



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ


From jesse.anderson at 4bright.com  Tue Apr 22 12:29:42 2008
From: jesse.anderson at 4bright.com (Jesse Anderson)
Date: Tue, 22 Apr 2008 12:29:42 -0700
Subject: [antlr-interest] Quoted Name Value Pairs
Message-ID: <480E3CA6.6060100@4bright.com>

I am trying to write a program that takes in commands with name value 
pairs.  Multiple commands can be entered by separating them with a ";".  
Here is an example input:
"add target="directory/name 123/" workspace="blah321";remove id="blah";"

When I try to run this with ANTLRWorks 1.1.7, the program doesn't parse 
the input correctly and no hits are generated.

Here is my file:

expr        : ( add | remove | set | list )* ;

add        : ADD addterms SEMICOLON ;

addterms     : ( WHITESPACE ( WORKSPACE | TARGET | PATTERN | USER | 
START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;

remove        : REMOVE removeterms SEMICOLON ;

removeterms    : WHITESPACE ID equalsvalue ;

set        : SET setterms SEMICOLON ;

setterms    : ( WHITESPACE ( ID | WORKSPACE | TARGET | PATTERN | USER | 
START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;

list        : LIST listterms SEMICOLON ;

listterms    : ( WHITESPACE WORKSPACE equalsvalue )? ;

equalsvalue     : EQUALS QUOTEDVALUE ;

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

QUOTEDVALUE : '"' (~'"')* '"';

WHITESPACE : WHITESPACECHAR+ ;

WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;

EQUALS : ( '=' ) ;

SEMICOLON : ( ';' )* ;

Thanks.

From parrt at cs.usfca.edu  Tue Apr 22 12:47:09 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 22 Apr 2008 12:47:09 -0700
Subject: [antlr-interest] Trouble using backtracking (I think)
In-Reply-To: <326355.77643.qm@web55902.mail.re3.yahoo.com>
References: <326355.77643.qm@web55902.mail.re3.yahoo.com>
Message-ID: <AD9969A9-3011-4671-A6B5-86211093B645@cs.usfca.edu>


On Apr 22, 2008, at 12:18 PM, Loring Craymer wrote:

> Use of backtracking forces ANTLR into LL(1) mode; the inserted  
> synpreds then do not help if a first alternative matches the second  
> alternative completely;  thus

Actually it only uses LL(1) if LL(*) fails even with backtracking. :)

Ter

From antlr at mirality.co.nz  Tue Apr 22 12:47:23 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 23 Apr 2008 07:47:23 +1200
Subject: [antlr-interest] Quoted Name Value Pairs
In-Reply-To: <480E3CA6.6060100@4bright.com>
References: <480E3CA6.6060100@4bright.com>
Message-ID: <20080422194740.E739911ED55@www.antlr.org>

At 07:29 23/04/2008, Jesse Anderson wrote:
 >Here is my file:

You've left some of the rules out, so it's hard to give a complete 
answer.  But for starters:

 >WHITESPACE : WHITESPACECHAR+ ;
 >
 >WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;

WHITESPACECHAR should be a fragment.

 >SEMICOLON : ( ';' )* ;

This permits SEMICOLON to match nothing, and lexer rules that can 
match nothing are a big no-no.  Either change the * to a + or 
remove it entirely and match multiple SEMICOLON tokens in the 
parser.

When you're starting out, it's useful to write a test harness for 
the lexer alone; feed it some sample input and print out the 
tokens it generates.  You'll often find that the parser isn't 
behaving the way you expect because it's getting different tokens 
than you expect.  ANTLRworks currently doesn't really show this 
very well.


From jesse.anderson at 4bright.com  Tue Apr 22 12:50:50 2008
From: jesse.anderson at 4bright.com (Jesse Anderson)
Date: Tue, 22 Apr 2008 12:50:50 -0700
Subject: [antlr-interest] Quoted Name Value Pairs
In-Reply-To: <480E3CA6.6060100@4bright.com> 
References: <480E3CA6.6060100@4bright.com> 
Message-ID: <480E419A.7050209@4bright.com>

Gavin Lambert wrote:
> At 07:29 23/04/2008, Jesse Anderson wrote:
> >Here is my file:
>
> You've left some of the rules out, so it's hard to give a complete 
> answer.  But for starters:
>
> >WHITESPACE : WHITESPACECHAR+ ;
> >
> >WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;
>
> WHITESPACECHAR should be a fragment.
>
> >SEMICOLON : ( ';' )* ;
>
> This permits SEMICOLON to match nothing, and lexer rules that can 
> match nothing are a big no-no.  Either change the * to a + or remove 
> it entirely and match multiple SEMICOLON tokens in the parser.
>
> When you're starting out, it's useful to write a test harness for the 
> lexer alone; feed it some sample input and print out the tokens it 
> generates.  You'll often find that the parser isn't behaving the way 
> you expect because it's getting different tokens than you expect.  
> ANTLRworks currently doesn't really show this very well.
>
I tried that.  Still no joy.  I changed it to:

SEMICOLON : ( ';' )+;

From troy.daniels at baesystems.com  Tue Apr 22 13:14:49 2008
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Tue, 22 Apr 2008 16:14:49 -0400
Subject: [antlr-interest] Trouble using backtracking (I think)
References: <480E0B8E.5060002@gmail.com>
Message-ID: <40CBD611A793EA438464B91E749DD8B00416BDFB@blums0017.bluelnk.net>

I think the problem is that antlr doesn't do backtracking over the full
tree, but only within a rule.  Given your input of (a=b), we start with
these rules:

input("(a=b)")
  input("a=b)")
    expression("a=b)")

where the arguments are the unparsed tokens, written as a text string.
If lower_term failed to match against "a=b)", it'd try the second
alternative.  However, it does match and control returns to the input
rule with "=b)" as unparsed tokens.  This fails to match the expected
")".  The backtracking that you want would at this point retry
expression and force it to follow a different path than it did the last
time.  Antlr has a simpler backtracking, which just tries the next
alternative at the input rule.  It's already on the last alternative, so
it must fails.

The case where antlr backtracking works is where you have a rule that
wants to match a method call or a variable reference of arbitrary depth:
a.b.c.d.e() or a.b.c.d.e.  Something like

rule: methodCall | variableReference ;

methodCall: ID (DOT ID)* "()" ;

variableReference: ID (DOT ID)* ;

If your input is "a.b.c.d.e = 3", methodCall will match "a.b.c.d.e" but
then fail trying to match "()" against "=3", at which point rule will
try to match it against variableReference (which will succeed).  Note
that even in this case, order is important, since if you use
"variableReference | methodCall", variableReference will always match
(if either one can), methodCall will never be called and any call to
rule will fail (even with backtracking) if the input is a method call.

Troy

> 
> I'm having trouble figuring out why my grammar isn't working as
> expected, and would greatly appreciate any pointers on what I'm
> misunderstanding.
> 
> My generated parser behaves as if backtracking isn't working as I
would
> expect. And further, when I modify the grammar in a way that I
wouldn't
> expect to have an effect, backtracking appears to start working.
> 
> I've simplified the grammar as much as I could and still reproduce the
> problem. And the simplified input I'm trying to parse is "(a = b)"
> (without the quotes).
> 
> Here's the test grammar:
> 
>      grammar Test;
> 
>      options {
>          language = Java;
>          output = AST;
>          backtrack = true;
>      }
> 
>      input
>          : expression
>          | '(' input ')'
>          ;
> 
>      expression
>          // Swapping the following two lines makes it
>          // work for input "(a = b)". But why won't it
>          // work with backtracking the way it is?
>          : lower_term
>          | term '=' term
>          ;
> 
>      term
>          : lower_term
>          | UPPER
>          ;
> 
>      lower_term
>          : LOWER
>          // Removing "term*" from the following line, or
>          // removing the line altogether makes it work.
>          // Why is that? Seems unrelated to given input.
>          | LOWER '(' term* ')'
>          ;
> 
>      UPPER: 'A'..'Z';
>      LOWER: 'a'..'z';
> 
>      WHITESPACE: (' '|'\t'|'\n'|'\r'|'\f') { skip(); };
> 
> When I try to parse the input "(a = b)", I get the following error:
> 
>      BR.recoverFromMismatchedToken
>      line 1:3 mismatched input '=' expecting ')'
> 
> It appears that the parser attempts to parse the "expression" rule
using
> the "lower_term" alternative only, and when that fails, it seems like
> backtracking isn't coming back and attempting the other alternative of
> "term '=' term".
> 
> I'm using ANTLR version 3.0.1 (August 13, 2007).
> 
> Finally, here's the test driver:
> 
>      import java.io.*;
>      import org.antlr.runtime.*;
>      import org.antlr.runtime.tree.*;
> 
>      public class Test {
>          public static void main(String[] args) throws Exception {
>              String string = "(a = b)";
>              ByteArrayInputStream byteArrayInputStream =
>                  new ByteArrayInputStream(string.getBytes());
>              ANTLRInputStream antlrInputStream =
>                  new ANTLRInputStream(byteArrayInputStream);
>              TestLexer testLexer =
>                  new TestLexer(antlrInputStream);
>              CommonTokenStream commonTokenStream =
>                  new CommonTokenStream(testLexer);
>              TestParser testParser =
>                  new TestParser(commonTokenStream);
>              CommonTree commonTree =
>                  (CommonTree)testParser.input().getTree();
>              System.out.println(commonTree.toStringTree());
>          }
>      }


From cdoucette at vaultus.com  Tue Apr 22 15:23:41 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Tue, 22 Apr 2008 18:23:41 -0400
Subject: [antlr-interest] inconsistent line endings in generated parser and
	lexer
Message-ID: <A7746824D386F947BBC285F6EC4716B001E8DB7A0A@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

I have a grammar file which I have been editing in Antlrworks on Windows.
Apparently, every one of those lines ends with CR-LF.
Every other line automatically generated by ANTLR ends with LF.
When you combine those two streams into the automatically generated parser and lexer, the line endings are inconsistent.
When I try to add those files to my source control tool (and perhaps I shouldn't try since it is generated), Subversion,
I get an error that the line endings are inconsistent.
It can handle all CRs (Mac?), all LFs (Unix) or all CR-LFs (Windows) - but it apparently doesn't like a mixture.
Is it possible to configure ANTLR to generate consistent line endings?
If not, I'd like to request that as a feature.
Today, perhaps I must just remove CRs from my grammar input file before processing it.

Thanks,
Chuck

________________________________

Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com<http://www.vaultus.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080422/471f7277/attachment-0001.html 

From jesse.anderson at 4bright.com  Tue Apr 22 15:49:28 2008
From: jesse.anderson at 4bright.com (Jesse Anderson)
Date: Tue, 22 Apr 2008 15:49:28 -0700
Subject: [antlr-interest] Quoted Name Value Pairs
In-Reply-To: <480E419A.7050209@4bright.com>
References: <480E3CA6.6060100@4bright.com> <480E419A.7050209@4bright.com>
Message-ID: <480E6B78.9060005@4bright.com>

Also, here is the complete file.

grammar bcadmin;

tokens {
    ADD    = 'add';
    REMOVE    = 'remove';
    SET     = 'set';
    LIST    = 'list';
   
    /* Possible tokens for values */
    ID    = 'id';
    WORKSPACE = 'workspace';
    TARGET    = 'target';
    PATTERN    = 'pattern';
    USER    = 'user';
    START    = 'start';
    FILESIZE = 'filesize';
    THROTTLE = 'throttle';
    STATUS    = 'status';
}

@members {
    public static void main(String[] args) throws Exception {
        bcadminLexer lex = new bcadminLexer(new ANTLRFileStream(args[0]));
           CommonTokenStream tokens = new CommonTokenStream(lex);

        bcadminParser parser = new bcadminParser(tokens);

        try {
            parser.expr();
        } catch (RecognitionException e)  {
            e.printStackTrace();
        }
    }
}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

expr        : ( add | remove | set | list )* ;

add        : ADD addterms SEMICOLON ;

addterms     : ( WHITESPACE ( WORKSPACE | TARGET | PATTERN | USER | 
START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;

remove        : REMOVE removeterms SEMICOLON ;

removeterms    : WHITESPACE ID equalsvalue ;

set        : SET setterms SEMICOLON ;

setterms    : ( WHITESPACE ( ID | WORKSPACE | TARGET | PATTERN | USER | 
START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;

list        : LIST listterms SEMICOLON ;

listterms    : ( WHITESPACE WORKSPACE equalsvalue )? ;

equalsvalue     : EQUALS QUOTEDVALUE ;

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

QUOTEDVALUE : '"' (~'"')* '"' ;

WHITESPACE : WHITESPACECHAR+ ;

WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;

EQUALS : ( '=' ) ;

SEMICOLON : ( ';' )+ ;


Jesse Anderson wrote:
> Gavin Lambert wrote:
>> At 07:29 23/04/2008, Jesse Anderson wrote:
>> >Here is my file:
>>
>> You've left some of the rules out, so it's hard to give a complete 
>> answer.  But for starters:
>>
>> >WHITESPACE : WHITESPACECHAR+ ;
>> >
>> >WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;
>>
>> WHITESPACECHAR should be a fragment.
>>
>> >SEMICOLON : ( ';' )* ;
>>
>> This permits SEMICOLON to match nothing, and lexer rules that can 
>> match nothing are a big no-no.  Either change the * to a + or remove 
>> it entirely and match multiple SEMICOLON tokens in the parser.
>>
>> When you're starting out, it's useful to write a test harness for the 
>> lexer alone; feed it some sample input and print out the tokens it 
>> generates.  You'll often find that the parser isn't behaving the way 
>> you expect because it's getting different tokens than you expect.  
>> ANTLRworks currently doesn't really show this very well.
>>
> I tried that.  Still no joy.  I changed it to:
>
> SEMICOLON : ( ';' )+;

From guntiso at latnet.lv  Tue Apr 22 15:54:11 2008
From: guntiso at latnet.lv (Guntis Ozols)
Date: Wed, 23 Apr 2008 01:54:11 +0300
Subject: [antlr-interest] HOW To catch error (no exception is thown)
In-Reply-To: <480D701A.2010808@gmail.com>
References: <480CF758.3020107@gmail.com>
	<1208818241.480d1a4166ae4@clients.latnet.lv>
	<480D701A.2010808@gmail.com>
Message-ID: <1208904851.480e6c9307f38@clients.latnet.lv>

> thanks a lot, that work .I ve just put
>
>  public void reportError (RecognitionException re){
>              throw new RuntimeException("Bailing out!");
>         }
>
> in member in parser.I have no information on the error  but i have an
> error (it still that).
>
> PS: I use  antwork 1.1.7
>
> a+++

Since java 1.4, the preferred way would be:
  throw new RuntimeException("Lexing problem!", re);

Then, with some effort, you can get line/char/token info
(another 'feature' of antlr is that getMessage() and
 getLocalizedMessage() does not work properly for exceptions.
 getMessage(ResourceBundle res) is missing, too).


From jesse.anderson at 4bright.com  Tue Apr 22 17:00:00 2008
From: jesse.anderson at 4bright.com (Jesse Anderson)
Date: Tue, 22 Apr 2008 17:00:00 -0700
Subject: [antlr-interest] Quoted Name Value Pairs
In-Reply-To: <480E6B78.9060005@4bright.com>
References: <480E3CA6.6060100@4bright.com> <480E419A.7050209@4bright.com>
	<480E6B78.9060005@4bright.com>
Message-ID: <480E7C00.7000609@4bright.com>

The file is parsing correctly now.  I had some extra code commented out 
that I removed from my previous E-mails.  I removed that extra code from 
my local copy and the parser started working.  Are there any known bugs 
that pertain to this?

Jesse

grammar bcadmin;

tokens {
    ADD    = 'add';
    REMOVE    = 'remove';
    SET     = 'set';
    LIST    = 'list';
   
    /* Possible tokens for values */
    ID    = 'id';
    WORKSPACE = 'workspace';
    TARGET    = 'target';
    PATTERN    = 'pattern';
    USER    = 'user';
    START    = 'start';
    FILESIZE = 'filesize';
    THROTTLE = 'throttle';
    STATUS    = 'status';
}

@members {
    public static void main(String[] args) throws Exception {
        bcadminLexer lex = new bcadminLexer(new ANTLRFileStream(args[0]));
           CommonTokenStream tokens = new CommonTokenStream(lex);

        bcadminParser parser = new bcadminParser(tokens);

        try {
            parser.expr();
        } catch (RecognitionException e)  {
            e.printStackTrace();
        }
    }
}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

expr        : ( add | remove | set | list )* ;

add        : ADD addterms SEMICOLON ;

addterms     : ( WHITESPACE ( WORKSPACE | TARGET | PATTERN | USER | 
START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;

remove        : REMOVE removeterms SEMICOLON ;

removeterms    : WHITESPACE ID equalsvalue ;

set        : SET setterms SEMICOLON ;

setterms    : ( WHITESPACE ( ID | WORKSPACE | TARGET | PATTERN | USER | 
START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;

list        : LIST listterms SEMICOLON ;

listterms    : ( WHITESPACE WORKSPACE equalsvalue )? ;

equalsvalue     : EQUALS QUOTEDVALUE ;

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

QUOTEDVALUE : '"' (~'"')* '"' ;

WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;

EQUALS : ( '=' ) ;

SEMICOLON : ( ';' )+ ;


Jesse Anderson wrote:
> Also, here is the complete file.
>
> grammar bcadmin;
>
> tokens {
>    ADD    = 'add';
>    REMOVE    = 'remove';
>    SET     = 'set';
>    LIST    = 'list';
>      /* Possible tokens for values */
>    ID    = 'id';
>    WORKSPACE = 'workspace';
>    TARGET    = 'target';
>    PATTERN    = 'pattern';
>    USER    = 'user';
>    START    = 'start';
>    FILESIZE = 'filesize';
>    THROTTLE = 'throttle';
>    STATUS    = 'status';
> }
>
> @members {
>    public static void main(String[] args) throws Exception {
>        bcadminLexer lex = new bcadminLexer(new ANTLRFileStream(args[0]));
>           CommonTokenStream tokens = new CommonTokenStream(lex);
>
>        bcadminParser parser = new bcadminParser(tokens);
>
>        try {
>            parser.expr();
>        } catch (RecognitionException e)  {
>            e.printStackTrace();
>        }
>    }
> }
>
> /*------------------------------------------------------------------
> * PARSER RULES
> *------------------------------------------------------------------*/
>
> expr        : ( add | remove | set | list )* ;
>
> add        : ADD addterms SEMICOLON ;
>
> addterms     : ( WHITESPACE ( WORKSPACE | TARGET | PATTERN | USER | 
> START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;
>
> remove        : REMOVE removeterms SEMICOLON ;
>
> removeterms    : WHITESPACE ID equalsvalue ;
>
> set        : SET setterms SEMICOLON ;
>
> setterms    : ( WHITESPACE ( ID | WORKSPACE | TARGET | PATTERN | USER 
> | START | FILESIZE | THROTTLE | STATUS ) equalsvalue )* ;
>
> list        : LIST listterms SEMICOLON ;
>
> listterms    : ( WHITESPACE WORKSPACE equalsvalue )? ;
>
> equalsvalue     : EQUALS QUOTEDVALUE ;
>
> /*------------------------------------------------------------------
> * LEXER RULES
> *------------------------------------------------------------------*/
>
> QUOTEDVALUE : '"' (~'"')* '"' ;
>
> WHITESPACE : WHITESPACECHAR+ ;
>
> WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;
>
> EQUALS : ( '=' ) ;
>
> SEMICOLON : ( ';' )+ ;
>
>
> Jesse Anderson wrote:
>> Gavin Lambert wrote:
>>> At 07:29 23/04/2008, Jesse Anderson wrote:
>>> >Here is my file:
>>>
>>> You've left some of the rules out, so it's hard to give a complete 
>>> answer.  But for starters:
>>>
>>> >WHITESPACE : WHITESPACECHAR+ ;
>>> >
>>> >WHITESPACECHAR : ( '\t' | ' ' | '\r' | '\n'| '\u000C' ) ;
>>>
>>> WHITESPACECHAR should be a fragment.
>>>
>>> >SEMICOLON : ( ';' )* ;
>>>
>>> This permits SEMICOLON to match nothing, and lexer rules that can 
>>> match nothing are a big no-no.  Either change the * to a + or remove 
>>> it entirely and match multiple SEMICOLON tokens in the parser.
>>>
>>> When you're starting out, it's useful to write a test harness for 
>>> the lexer alone; feed it some sample input and print out the tokens 
>>> it generates.  You'll often find that the parser isn't behaving the 
>>> way you expect because it's getting different tokens than you 
>>> expect.  ANTLRworks currently doesn't really show this very well.
>>>
>> I tried that.  Still no joy.  I changed it to:
>>
>> SEMICOLON : ( ';' )+;

From antlr5 at hannesschmidt.net  Tue Apr 22 19:16:16 2008
From: antlr5 at hannesschmidt.net (Hannes Schmidt)
Date: Tue, 22 Apr 2008 19:16:16 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
Message-ID: <480E9BF0.7060006@hannesschmidt.net>

Hi all,

I would like to use character ranges in a parser as illustrated in the 
following example (a very reduced version of my real-world grammar):

grammar test1;
foo : before '@' after;
before : 'a'..'z';
after : 'm'..'z';

ANTLR generates a parser that ignores the range as if the grammar were

grammar test2;
foo : before '@' after;
before : ;
after : ;

IOW, the grammar fails to parse the input "a at m". If I break the grammar 
up into a lexer and a parser as in

grammar test3;
foo : BEFORE '@' AFTER;
BEFORE : 'a'..'z';
AFTER : 'm'..'z';

the generated code fails to parse "a at m" with a MismatchedTokeException 
at the 'm'. This is because ANTLR silently prioritizes BEFORE even 
though its set of characters intersects that of AFTER. Swapping BEFORE 
and AFTER would generate a parser that fails to recognize "m at m".

So here are  my questions:

Why can't I use ranges in parsers?

Why doesn't ANTLR emit a warning when it ignores ranges in grammar rules?

How can I emulate the missing range feature without obfuscating my 
grammar too much? Semantic predicates?

Now let me put my tinfoil hat on and theorize a little bit: I think that 
the root cause of  my confusion is ANTLR's distinction between lexer and 
parser. I think this distinction is purely historical and ANTLR might be 
better of without it. When writing grammars, I often find myself in 
situations where I know that certain lexer rules make sense in a certain 
parser context only but that context is not available to the lexer 
because the state that defines it is maintained in the parser.

I fondly remember my CS101 classes when we wrote recursive descent 
parsers for LL(*) in Opal (a functional language similar to Haskell). We 
didn't have to distinguish between lexer and parser and it felt very 
liberating. ;-)

From peter.nann at vecommerce.com.au  Tue Apr 22 20:16:25 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Wed, 23 Apr 2008 13:16:25 +1000
Subject: [antlr-interest] Why don't parsers support character ranges?
References: <480E9BF0.7060006@hannesschmidt.net>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AEC@vcmsydexh.vecommerce.com>


I am quite new to parsing...

But I too don't yet get the reasoning behind using such a 'dumb'
(context un-aware) front-end lexer as seemingly standard practice in
parsing, considering the restrictions that seems to impose.

I assume there is a good reason for it, but this noobie can't see it.

In fact, this noobie tried to write (what I thought was) a fairly simple
'rewriting' parser, but ran into difficulties, and went back to exactly
using a hand-coded recursive descent parser which our resident Java guru
whipped up in an afternoon.
 - He DID use a standard design lexer front-end, HOWEVER, he quickly
found cases where he had to switch lexer/parser mid-stream to solve a
particular problem...

So, I'm sure it is my lack of knowledge in the area, but I hear where
you are coming from Hannes!
I too fondly remember my liberation in my similar CS 101 class...


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hannes Schmidt
Sent: Wednesday, 23 April 2008 12:16 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Why don't parsers support character ranges?

Hi all,

I would like to use character ranges in a parser as illustrated in the
following example (a very reduced version of my real-world grammar):

grammar test1;
foo : before '@' after;
before : 'a'..'z';
after : 'm'..'z';

ANTLR generates a parser that ignores the range as if the grammar were

grammar test2;
foo : before '@' after;
before : ;
after : ;

IOW, the grammar fails to parse the input "a at m". If I break the grammar
up into a lexer and a parser as in

grammar test3;
foo : BEFORE '@' AFTER;
BEFORE : 'a'..'z';
AFTER : 'm'..'z';

the generated code fails to parse "a at m" with a MismatchedTokeException
at the 'm'. This is because ANTLR silently prioritizes BEFORE even
though its set of characters intersects that of AFTER. Swapping BEFORE
and AFTER would generate a parser that fails to recognize "m at m".

So here are  my questions:

Why can't I use ranges in parsers?

Why doesn't ANTLR emit a warning when it ignores ranges in grammar
rules?

How can I emulate the missing range feature without obfuscating my
grammar too much? Semantic predicates?

Now let me put my tinfoil hat on and theorize a little bit: I think that
the root cause of  my confusion is ANTLR's distinction between lexer and
parser. I think this distinction is purely historical and ANTLR might be
better of without it. When writing grammars, I often find myself in
situations where I know that certain lexer rules make sense in a certain
parser context only but that context is not available to the lexer
because the state that defines it is maintained in the parser.

I fondly remember my CS101 classes when we wrote recursive descent
parsers for LL(*) in Opal (a functional language similar to Haskell). We
didn't have to distinguish between lexer and parser and it felt very
liberating. ;-)

From antlr at deloreyfamily.org  Tue Apr 22 22:08:03 2008
From: antlr at deloreyfamily.org (Dan Delorey)
Date: Tue, 22 Apr 2008 23:08:03 -0600
Subject: [antlr-interest] IDE Integration
Message-ID: <90d6c0620804222208udcf7972o443c4f696f65d975@mail.gmail.com>

Could anyone advise me on a good integrated build mechanism for projects
that include ANTLR grammars? I've looked into both Ant and Maven v2, but I'm
not sure which (if either) to use. I've tried Maven and found it to work
until I changed my grammar so that it requires ANTLR 3.1. The Maven plugin
seems to always use 3.0.1 and I have not been able to convince it otherwise.

Any help or suggested readings are appreciated.

Thanks,
Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080422/b9328052/attachment.html 

From aheller at gmx.at  Tue Apr 22 23:20:47 2008
From: aheller at gmx.at (Arnulf Heller)
Date: Wed, 23 Apr 2008 08:20:47 +0200
Subject: [antlr-interest] IDE Integration
In-Reply-To: <90d6c0620804222208udcf7972o443c4f696f65d975@mail.gmail.com
 >
References: <90d6c0620804222208udcf7972o443c4f696f65d975@mail.gmail.com>
Message-ID: <20080423062048.DGAH15647.viefep19-int.chello.at@schnuftikus.gmx.at>

Hi,

take a look at SCONS: http://www.scons.org/

I don't work with it right now but I intend to. It seems to be very 
powerful and provides a platform independent build system for C/C++, 
Java, ANTLR, ...
There are also plugins available for IDEs (al least VS.net and eclipse)

hth,
a

At 07:08 23.04.2008, Dan Delorey wrote:
>Could anyone advise me on a good integrated build mechanism for 
>projects that include ANTLR grammars? I've looked into both Ant and 
>Maven v2, but I'm not sure which (if either) to use. I've tried 
>Maven and found it to work until I changed my grammar so that it 
>requires ANTLR 3.1. The Maven plugin seems to always use 3.0.1 and I 
>have not been able to convince it otherwise.
>
>Any help or suggested readings are appreciated.
>
>Thanks,
>Dan


From antlr at mirality.co.nz  Wed Apr 23 01:16:49 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 23 Apr 2008 20:16:49 +1200
Subject: [antlr-interest] Why don't parsers support character  ranges?
In-Reply-To: <480E9BF0.7060006@hannesschmidt.net>
References: <480E9BF0.7060006@hannesschmidt.net>
Message-ID: <20080423081703.C962611ED13@www.antlr.org>

At 14:16 23/04/2008, Hannes Schmidt wrote:
 >Why can't I use ranges in parsers?

You can, they just don't mean what you think they mean.

 >Why doesn't ANTLR emit a warning when it ignores ranges in 
grammar
 >rules?

Because it's not ignoring them.  When you say "'a'..'z'" in a 
parser rule, the parser first automatically creates tokens for the 
quoted terms (because it's a combined grammar; if it were a 
standalone grammar you'd just get an error).  Now the rule says 
something like "T16..T17", which is a range of tokens.  If you're 
lucky, this will be the first time it's seen those tokens and 
they'll have contiguous values, so your range basically just means 
those two tokens and nothing else.  If you're not lucky, there may 
be other tokens in between those two, so you'll be referring to 
those as well.  Either way, it's probably not what you thought you 
were saying.

Given that there currently isn't any official way of controlling 
the token ids generated by rules, ranges in the parser probably 
*should* generate warnings, since (while valid) they're not 
especially useful.

(I also dislike the way that quoted constants are permitted in 
parser rules in the first place [since I think it leads to just 
this sort of confusion], but that's a different issue.)

 >How can I emulate the missing range feature without obfuscating
 >my grammar too much? Semantic predicates?

Probably.  Or move whatever construct you're trying to match that 
includes ranges into the lexer as a single token.

 >Now let me put my tinfoil hat on and theorize a little bit: I
 >think that the root cause of  my confusion is ANTLR's 
distinction
 >between lexer and parser. I think this distinction is purely
 >historical and ANTLR might be better of without it. When writing 

 >grammars, I often find myself in situations where I know that
 >certain lexer rules make sense in a certain parser context only
 >but that context is not available to the lexer because the state 

 >that defines it is maintained in the parser.

At times I agree with you, but it's usually not all that hard to 
get a decent set of lexer rules.  The tactic I usually follow is 
to write the lexer rules *first*, and unit test them by themselves 
to ensure the token stream is being generated as I expect.  *Then* 
I start writing parser rules to either transform the token stream 
into an AST or to directly do something more interesting.  If you 
think of it in layers then it's not hard to keep it all straight.


From jaluber at gmx.de  Wed Apr 23 05:21:06 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 23 Apr 2008 14:21:06 +0200
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <480E9BF0.7060006@hannesschmidt.net>
References: <480E9BF0.7060006@hannesschmidt.net>
Message-ID: <480F29B2.2000609@gmx.de>

Hannes Schmidt schrieb:
> Hi all,
> 
> I would like to use character ranges in a parser as illustrated in the 
> following example (a very reduced version of my real-world grammar):
> 
> grammar test1;
> foo : before '@' after;
> before : 'a'..'z';
> after : 'm'..'z';
> 
> ANTLR generates a parser that ignores the range as if the grammar were
> 
> grammar test2;
> foo : before '@' after;
> before : ;
> after : ;
> 
> IOW, the grammar fails to parse the input "a at m". If I break the grammar 
> up into a lexer and a parser as in
> 
> grammar test3;
> foo : BEFORE '@' AFTER;
> BEFORE : 'a'..'z';
> AFTER : 'm'..'z';
> 
> the generated code fails to parse "a at m" with a MismatchedTokeException 
> at the 'm'. This is because ANTLR silently prioritizes BEFORE even 
> though its set of characters intersects that of AFTER. Swapping BEFORE 
> and AFTER would generate a parser that fails to recognize "m at m".

You could alternatively use:

grammar test4;
foo : BEFORE '@' AFTER;
BEFORE : A_TO_L | M_TO_Z;
AFTER : M_TO_Z;
fragment A_TO_L: 'a'..'l';
fragment M_TO_Z: 'm'..'z';

But I suppose it is easier for error messages, if you leave A_TO_L in 
for AFTER and check it in a later stage for correctness.

grammar test5;
foo : ALPHA '@' ALPHA;
ALPHA: 'a'..'z';

Johannes

From jasonzhang2002 at gmail.com  Wed Apr 23 07:46:25 2008
From: jasonzhang2002 at gmail.com (jason zhang)
Date: Wed, 23 Apr 2008 22:46:25 +0800
Subject: [antlr-interest] simple grammar with wildcard
Message-ID: <480F4BC1.9050504@gmail.com>

Hi, All
I have a simple grammar. I can not get it work. Help is appreciated.
My input text is like this
name:"value". The value can span multiple line.
My grammar is like this
-------------------
grammar Test;
program : attribute*;
attribute : n=ID ':' '"' e=ATTRVALUE '"' LINEBREAK{ 
System.out.println("match attrname==============="+$n.text+" 
attrvalue="+$e.text);};


ATTRVALUE:NONQUOTE*;
ID :('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')+;
WS : ( '\t' | ' ' )+     { $channel = HIDDEN; } ;
LINEBREAK
    :    '\r'?'\n';
//printable ASCII character except ", including \r and \n.
fragment
NONQUOTE
    :' '..'!'|'#'..'~'|'\r'|'\n';
---------------------
When I check this grammar through antlrWorks, I got the error like " The 
following token definitions are unreachable: ID,LINEBREAK".

-jason







From lgcraymer at yahoo.com  Wed Apr 23 08:08:34 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 23 Apr 2008 08:08:34 -0700 (PDT)
Subject: [antlr-interest] Why don't parsers support character ranges?
Message-ID: <108051.95259.qm@web55909.mail.re3.yahoo.com>

I think that Gavin answered the range question pretty well.  As to the separation of lexer and parser, that is not an historical artifact.  Had you tried to use your CS 101 LL1 parser for production use, you would have been very disappointed with both its performance and memory footprint.  Lexers work with characters; parsers work with tokens.  If your characters are packaged as tokens, memory usage expands dramatically and it takes longer to dereference the token to look at the character.  That can easily cost you a factor of 10-100 in performance; ANTLR 2 just packaged characters into strings, and that cost a factor of 5 over more optimal approaches (ANTLR 3 does much better).  The impact of using a single stage of analysis on the parser is equally dramatic:  "foo is blue" goes from a 3 token analysis problem ("foo" "is" "blue") to an 11 token analysis problem (can you say 'combinatorial explosion') with a corresponding dramatic decrease in performance.

As to the  "before '@' after" example you give (assuming that you really do need to distinguish BEFORE and AFTER tokens), the best approach might be to support multiple token emission from lexer rules so  that you do something like

AT :  'a' .. 'l' { emit(BEFORE); } '@' { emit(AT); } 'm'..'z' {emit(AFTER); } ;

foo : BEFORE AT AFTER

but ANTLR 3 does not quite do that yet.

Note that the natural approach to reading text is in fact to lex characters into tokens which we call "words" (reading text without spaces requires some effort) and then to parse sentences made of words.  Spaces and punctuation make a big difference because they support hierarchical processing.

--Loring


----- Original Message ----
> From: Hannes Schmidt <antlr5 at hannesschmidt.net>
> To: antlr-interest at antlr.org
> Sent: Tuesday, April 22, 2008 7:16:16 PM
> Subject: [antlr-interest] Why don't parsers support character ranges?
> 
> Hi all,
> 
> I would like to use character ranges in a parser as illustrated in the 
> following example (a very reduced version of my real-world grammar):
> 
> grammar test1;
> foo : before '@' after;
> before : 'a'..'z';
> after : 'm'..'z';
> 
> ANTLR generates a parser that ignores the range as if the grammar were
> 
> grammar test2;
> foo : before '@' after;
> before : ;
> after : ;
> 
> IOW, the grammar fails to parse the input "a at m". If I break the grammar 
> up into a lexer and a parser as in
> 
> grammar test3;
> foo : BEFORE '@' AFTER;
> BEFORE : 'a'..'z';
> AFTER : 'm'..'z';
> 
> the generated code fails to parse "a at m" with a MismatchedTokeException 
> at the 'm'. This is because ANTLR silently prioritizes BEFORE even 
> though its set of characters intersects that of AFTER. Swapping BEFORE 
> and AFTER would generate a parser that fails to recognize "m at m".
> 
> So here are  my questions:
> 
> Why can't I use ranges in parsers?
> 
> Why doesn't ANTLR emit a warning when it ignores ranges in grammar rules?
> 
> How can I emulate the missing range feature without obfuscating my 
> grammar too much? Semantic predicates?
> 
> Now let me put my tinfoil hat on and theorize a little bit: I think that 
> the root cause of  my confusion is ANTLR's distinction between lexer and 
> parser. I think this distinction is purely historical and ANTLR might be 
> better of without it. When writing grammars, I often find myself in 
> situations where I know that certain lexer rules make sense in a certain 
> parser context only but that context is not available to the lexer 
> because the state that defines it is maintained in the parser.
> 
> I fondly remember my CS101 classes when we wrote recursive descent 
> parsers for LL(*) in Opal (a functional language similar to Haskell). We 
> didn't have to distinguish between lexer and parser and it felt very 
> liberating. ;-)



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ


From caishaoting at gmail.com  Wed Apr 23 08:30:13 2008
From: caishaoting at gmail.com (Shaoting Cai)
Date: Wed, 23 Apr 2008 08:30:13 -0700
Subject: [antlr-interest] simple grammar with wildcard
In-Reply-To: <480F4BC1.9050504@gmail.com>
References: <480F4BC1.9050504@gmail.com>
Message-ID: <9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>

Hi Jason,

The fragment rule NONQUOTE hides the ID rule.
# is 35, ~ is 126
'a'..'z' and 'A'..'Z' is within 35..126

>  fragment
>  NONQUOTE
>    :' '..'!'|'#'..'~'|'\r'|'\n';

-Shaoting



On Wed, Apr 23, 2008 at 7:46 AM, jason zhang <jasonzhang2002 at gmail.com> wrote:
> Hi, All
>  I have a simple grammar. I can not get it work. Help is appreciated.
>  My input text is like this
>  name:"value". The value can span multiple line.
>  My grammar is like this
>  -------------------
>  grammar Test;
>  program : attribute*;
>  attribute : n=ID ':' '"' e=ATTRVALUE '"' LINEBREAK{
> System.out.println("match attrname==============="+$n.text+"
> attrvalue="+$e.text);};
>
>
>  ATTRVALUE:NONQUOTE*;
>  ID :('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')+;
>  WS : ( '\t' | ' ' )+     { $channel = HIDDEN; } ;
>  LINEBREAK
>    :    '\r'?'\n';
>  //printable ASCII character except ", including \r and \n.
>  fragment
>  NONQUOTE
>    :' '..'!'|'#'..'~'|'\r'|'\n';
>  ---------------------
>  When I check this grammar through antlrWorks, I got the error like " The
> following token definitions are unreachable: ID,LINEBREAK".
>
>  -jason
>
>
>
>
>
>
>

From jasonzhang2002 at gmail.com  Wed Apr 23 09:35:50 2008
From: jasonzhang2002 at gmail.com (jason zhang)
Date: Thu, 24 Apr 2008 00:35:50 +0800
Subject: [antlr-interest] simple grammar with wildcard
In-Reply-To: <9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>
References: <480F4BC1.9050504@gmail.com>
	<9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>
Message-ID: <480F6566.7040103@gmail.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080424/31554bb5/attachment.html 

From jaluber at gmx.de  Wed Apr 23 09:53:39 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 23 Apr 2008 18:53:39 +0200
Subject: [antlr-interest] simple grammar with wildcard
In-Reply-To: <480F6566.7040103@gmail.com>
References: <480F4BC1.9050504@gmail.com>	<9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>
	<480F6566.7040103@gmail.com>
Message-ID: <480F6993.50403@gmx.de>

jason zhang schrieb:
> Hi, cai
> I removed the NONQUOTE definition and use wildcard.
> ------------------------------
> grammar Test;
> 
> program : attribute*;
> attribute : n=ID ':' '"' e=(.*)'"' LINEBREAK{ System.out.println("match 
> attrname==============="+$n.text+" attrvalue="+$e.text);};
> ID    :    ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')+;
> WS : ( '\t' | ' ' )+     { $channel=HIDDEN; } ;   
> LINEBREAK
>     :    '\r'?'\n';
> --------------------------------
> When I test this grammar by running generated java code. The e is not 
> set by the generated java code anywhere. I got a NullPointerException. 
> How can I capture the value (.*) ?
> 
> thanks
> 
> -jason

You have encountered a known bug. One can't use "e=(...)" yet. Either 
you can forgo the parentheses or you have to create a new subrule.

Johannes

From jimi at temporal-wave.com  Wed Apr 23 09:54:36 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 23 Apr 2008 09:54:36 -0700
Subject: [antlr-interest] IDE Integration
In-Reply-To: <20080423062048.DGAH15647.viefep19-int.chello.at@schnuftikus.gmx.at>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAS0R3Or4L/0m
	yjykAw8dhcAEAAAAA@temporal-wave.com>

Sounded good right up until the bit where it said:

"Configuration files are Python scripts--use the power of a real programming language to solve build problems."

Think I'll stick to gmake.

Jim Idle (Quietly petitioning Eric to withdraw permission for the use of the name).

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Arnulf Heller
> Sent: Tuesday, April 22, 2008 11:21 PM
> To: Dan Delorey; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] IDE Integration
> 
> Hi,
> 
> take a look at SCONS: http://www.scons.org/
> 
> I don't work with it right now but I intend to. It seems to be very
> powerful and provides a platform independent build system for C/C++,
> Java, ANTLR, ...
> There are also plugins available for IDEs (al least VS.net and eclipse)
> 
> hth,
> a
> 
> At 07:08 23.04.2008, Dan Delorey wrote:
> >Could anyone advise me on a good integrated build mechanism for
> >projects that include ANTLR grammars? I've looked into both Ant and
> >Maven v2, but I'm not sure which (if either) to use. I've tried
> >Maven and found it to work until I changed my grammar so that it
> >requires ANTLR 3.1. The Maven plugin seems to always use 3.0.1 and I
> >have not been able to convince it otherwise.
> >
> >Any help or suggested readings are appreciated.
> >
> >Thanks,
> >Dan





From felix_do at web.de  Wed Apr 23 10:04:38 2008
From: felix_do at web.de (Felix Dorner)
Date: Wed, 23 Apr 2008 19:04:38 +0200
Subject: [antlr-interest] IDE Integration
In-Reply-To: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAS0R3Or4L/0m	yjykAw8dhcAEAAAAA@temporal-wave.com>
References: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAS0R3Or4L/0m	yjykAw8dhcAEAAAAA@temporal-wave.com>
Message-ID: <480F6C26.4080503@web.de>

Jim Idle wrote:
> Sounded good right up until the bit where it said:
> 
> "Configuration files are Python scripts--use the power of a real programming language to solve build problems."

Hehe, I _always_ click hyperlinks, so I read that one too..

From tbrandonau at gmail.com  Wed Apr 23 10:12:17 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 24 Apr 2008 03:12:17 +1000
Subject: [antlr-interest] simple grammar with wildcard
In-Reply-To: <480F6993.50403@gmx.de>
References: <480F4BC1.9050504@gmail.com>
	<9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>
	<480F6566.7040103@gmail.com> <480F6993.50403@gmx.de>
Message-ID: <ebc876d70804231012y7808cdebqb69a7373a0f0488b@mail.gmail.com>

On Thu, Apr 24, 2008 at 2:53 AM, Johannes Luber <jaluber at gmx.de> wrote:
> jason zhang schrieb:
>
>
> > Hi, cai
> > I removed the NONQUOTE definition and use wildcard.
> > ------------------------------
> > grammar Test;
> >
> > program : attribute*;
> > attribute : n=ID ':' '"' e=(.*)'"' LINEBREAK{ System.out.println("match
> attrname==============="+$n.text+" attrvalue="+$e.text);};
> > ID    :    ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')+;
> > WS : ( '\t' | ' ' )+     { $channel=HIDDEN; } ;   LINEBREAK
> >    :    '\r'?'\n';
> > --------------------------------
> > When I test this grammar by running generated java code. The e is not set
> by the generated java code anywhere. I got a NullPointerException. How can I
> capture the value (.*) ?
> >
> > thanks
> >
> > -jason
> >
>
>  You have encountered a known bug. One can't use "e=(...)" yet. Either you
> can forgo the parentheses or you have to create a new subrule.
>
>  Johannes
>
Or you should be able to use "(e+=.)*". However this will generate a
list of tokens so I don't think e.text will work. I think it should
work with a subrule.
However that grammar won't do what you want. The wildcard in the
parser matches any token not any character so it won't match any
characters not matched by lexer rules. You could change the NONQUOTE
rule so it doesn't include ID or LINEBREAK. Or the first lexer rule
specified for a given character sequence will match, so if you go back
to the original grammar and change the ordering so that ATTRVALUE is
after ID and LINEBREAK then they should match first. Then in your
parser use (ID|ATTRVALUE|LINEBREAK).

Tom.

From jaluber at gmx.de  Wed Apr 23 10:40:37 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 23 Apr 2008 19:40:37 +0200
Subject: [antlr-interest] IDE Integration
In-Reply-To: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAS0R3Or4L/0m	yjykAw8dhcAEAAAAA@temporal-wave.com>
References: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAS0R3Or4L/0m	yjykAw8dhcAEAAAAA@temporal-wave.com>
Message-ID: <480F7495.10609@gmx.de>

Jim Idle schrieb:
> Sounded good right up until the bit where it said:
> 
> "Configuration files are Python scripts--use the power of a real programming language to solve build problems."
> 
> Think I'll stick to gmake.

What is so badregarding the use of Python? Besides that it is Python.

> 
> Jim Idle (Quietly petitioning Eric to withdraw permission for the use of the name).

Which Eric? And what name?

Johannes
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Arnulf Heller
>> Sent: Tuesday, April 22, 2008 11:21 PM
>> To: Dan Delorey; antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] IDE Integration
>>
>> Hi,
>>
>> take a look at SCONS: http://www.scons.org/
>>
>> I don't work with it right now but I intend to. It seems to be very
>> powerful and provides a platform independent build system for C/C++,
>> Java, ANTLR, ...
>> There are also plugins available for IDEs (al least VS.net and eclipse)
>>
>> hth,
>> a
>>
>> At 07:08 23.04.2008, Dan Delorey wrote:
>>> Could anyone advise me on a good integrated build mechanism for
>>> projects that include ANTLR grammars? I've looked into both Ant and
>>> Maven v2, but I'm not sure which (if either) to use. I've tried
>>> Maven and found it to work until I changed my grammar so that it
>>> requires ANTLR 3.1. The Maven plugin seems to always use 3.0.1 and I
>>> have not been able to convince it otherwise.
>>>
>>> Any help or suggested readings are appreciated.
>>>
>>> Thanks,
>>> Dan
> 
> 
> 
> 


From jimi at temporal-wave.com  Wed Apr 23 10:56:07 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 23 Apr 2008 10:56:07 -0700
Subject: [antlr-interest] IDE Integration
In-Reply-To: <480F7495.10609@gmx.de>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAAqgIrHDyt0K
	N4rRtNwtOWwEAAAAA@temporal-wave.com>



> -----Original Message-----
> From: Johannes Luber [mailto:jaluber at gmx.de]
> Sent: Wednesday, April 23, 2008 10:41 AM
> 
> Jim Idle schrieb:
>
> > Sounded good right up until the bit where it said:
> >
> > "Configuration files are Python scripts--use the power of a real
> programming language to solve build problems."
> >
> > Think I'll stick to gmake.
> 
> What is so bad regarding the use of Python? Besides that it is Python.

While I am not at all a fan of Python, that isn't the point here. As soon as you introduce a programming language into the build process, which can be coded to do anything, then you don't have a build configuration tool at all, but a program that builds your product. The description of the tool even seems to encourage this, though some of us might debate whether python is real programming language or not ;-)

This means that anyone can put in just about any undocumented code they like in the build process and it becomes unmanageable faster than you can say "whitespace/indent sensitive languages don't make sense". This is precisely because nobody will use configuration rules properly or perhaps at all if they can just hack in a piece of code instead. Ironically, the only justification for Python being indent sensitive is that programmers won't otherwise obey formatting 'rules'.

> >
> > Jim Idle (Quietly petitioning Eric to withdraw permission for the use
> of the name).
> 
> Which Eric? And what name?

Python refers to Monty Python, which is really an English language thing. Perhaps this is because it was really meant as a joke? I doubt that Eric has ever heard of it though, or that he would care if he had (unless there was any money in it.) So, that last line was all getting a bit too silly really and should be stopped right now.

Enough - this is a forum about parsing and stuff :-)

Jim




From troy.daniels at baesystems.com  Wed Apr 23 15:39:34 2008
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Wed, 23 Apr 2008 18:39:34 -0400
Subject: [antlr-interest] Why don't parsers support character ranges?
References: <480E9BF0.7060006@hannesschmidt.net> <480F29B2.2000609@gmx.de>
Message-ID: <40CBD611A793EA438464B91E749DD8B00416C299@blums0017.bluelnk.net>

 

> 
> 
> You could alternatively use:
> 
> grammar test4;
> foo : BEFORE '@' AFTER;
> BEFORE : A_TO_L | M_TO_Z;
> AFTER : M_TO_Z;
> fragment A_TO_L: 'a'..'l';
> fragment M_TO_Z: 'm'..'z';
> 

Actually, you can't.  Nothing will ever match AFTER, since BEFORE will
consume it.  If you make BEFORE and AFTER parser rules, that would work.

grammar test6;
 foo : before '@' after;
 before : A_TO_L | M_TO_Z;
 after : M_TO_Z;

A_TO_L: 'a'..'l';
M_TO_Z: 'm'..'z';


Troy


> But I suppose it is easier for error messages, if you leave 
> A_TO_L in for AFTER and check it in a later stage for correctness.
> 
> grammar test5;
> foo : ALPHA '@' ALPHA;
> ALPHA: 'a'..'z';
> 
> Johannes
> 

From peter.nann at vecommerce.com.au  Wed Apr 23 17:01:13 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Thu, 24 Apr 2008 10:01:13 +1000
Subject: [antlr-interest] Why don't parsers support character ranges?
References: <108051.95259.qm@web55909.mail.re3.yahoo.com>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AF5@vcmsydexh.vecommerce.com>


Hmmm, I was hoping for more than the 'efficiency' argument...
I am wondering if that argument is about 10 years past its use-by
date...
We are not in the days of single-digit-Megahertz and RAM measured in k
anymore... when lexx and yacc were written...

It would depend on the scale of parsing you need to do of course, but
for small-scale parsing I would question whether CPU and RAM matters any
more on that task...

I will have to take your word about 'combinatorial explosion' for some
problems, but I thought simple RDP's could pretty much break down to one
branch (as in: switch statement) per character (or token if you tokenize
it), which doesn't seem excessive, or combinatorial.
 - But, yes, that was just my CS101 project!


And using an analogy of how a human does it, versus how a computer
should do it, is not a valid technical argument at all in my book.


Sorry to be a sour-puss, but I was quite excited about ANTLR at first
look, but then got disappointed very quickly, so I'm a bit like a child
who just broke his favourite toy...  ;-)


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Loring Craymer
Sent: Thursday, 24 April 2008 1:09 AM
To: Hannes Schmidt; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Why don't parsers support character
ranges?

I think that Gavin answered the range question pretty well.  As to the
separation of lexer and parser, that is not an historical artifact.  Had
you tried to use your CS 101 LL1 parser for production use, you would
have been very disappointed with both its performance and memory
footprint.  Lexers work with characters; parsers work with tokens.  If
your characters are packaged as tokens, memory usage expands
dramatically and it takes longer to dereference the token to look at the
character.  That can easily cost you a factor of 10-100 in performance;
ANTLR 2 just packaged characters into strings, and that cost a factor of
5 over more optimal approaches (ANTLR 3 does much better).  The impact
of using a single stage of analysis on the parser is equally dramatic:
"foo is blue" goes from a 3 token analysis problem ("foo" "is" "blue")
to an 11 token analysis problem (can you say 'combinatorial explosion')
with a corresponding dramatic decrease in performance.

As to the  "before '@' after" example you give (assuming that you really
do need to distinguish BEFORE and AFTER tokens), the best approach might
be to support multiple token emission from lexer rules so  that you do
something like

AT :  'a' .. 'l' { emit(BEFORE); } '@' { emit(AT); } 'm'..'z'
{emit(AFTER); } ;

foo : BEFORE AT AFTER

but ANTLR 3 does not quite do that yet.

Note that the natural approach to reading text is in fact to lex
characters into tokens which we call "words" (reading text without
spaces requires some effort) and then to parse sentences made of words.
Spaces and punctuation make a big difference because they support
hierarchical processing.

--Loring


----- Original Message ----
> From: Hannes Schmidt <antlr5 at hannesschmidt.net>
> To: antlr-interest at antlr.org
> Sent: Tuesday, April 22, 2008 7:16:16 PM
> Subject: [antlr-interest] Why don't parsers support character ranges?
> 
> Hi all,
> 
> I would like to use character ranges in a parser as illustrated in the

> following example (a very reduced version of my real-world grammar):
> 
> grammar test1;
> foo : before '@' after;
> before : 'a'..'z';
> after : 'm'..'z';
> 
> ANTLR generates a parser that ignores the range as if the grammar were
> 
> grammar test2;
> foo : before '@' after;
> before : ;
> after : ;
> 
> IOW, the grammar fails to parse the input "a at m". If I break the 
> grammar up into a lexer and a parser as in
> 
> grammar test3;
> foo : BEFORE '@' AFTER;
> BEFORE : 'a'..'z';
> AFTER : 'm'..'z';
> 
> the generated code fails to parse "a at m" with a MismatchedTokeException

> at the 'm'. This is because ANTLR silently prioritizes BEFORE even 
> though its set of characters intersects that of AFTER. Swapping BEFORE

> and AFTER would generate a parser that fails to recognize "m at m".
> 
> So here are  my questions:
> 
> Why can't I use ranges in parsers?
> 
> Why doesn't ANTLR emit a warning when it ignores ranges in grammar
rules?
> 
> How can I emulate the missing range feature without obfuscating my 
> grammar too much? Semantic predicates?
> 
> Now let me put my tinfoil hat on and theorize a little bit: I think 
> that the root cause of  my confusion is ANTLR's distinction between 
> lexer and parser. I think this distinction is purely historical and 
> ANTLR might be better of without it. When writing grammars, I often 
> find myself in situations where I know that certain lexer rules make 
> sense in a certain parser context only but that context is not 
> available to the lexer because the state that defines it is maintained
in the parser.
> 
> I fondly remember my CS101 classes when we wrote recursive descent 
> parsers for LL(*) in Opal (a functional language similar to Haskell). 
> We didn't have to distinguish between lexer and parser and it felt 
> very liberating. ;-)



 
________________________________________________________________________
____________
Be a better friend, newshound, and
know-it-all with Yahoo! Mobile.  Try it now.
http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ


From rschulz at sonic.net  Wed Apr 23 17:55:34 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 23 Apr 2008 17:55:34 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AF5@vcmsydexh.vecommerce.com>
References: <108051.95259.qm@web55909.mail.re3.yahoo.com>
	<1080AEABD1979E42A15840F08084B67BFE3AF5@vcmsydexh.vecommerce.com>
Message-ID: <200804231755.34175.rschulz@sonic.net>

On Wednesday 23 April 2008 17:01, Peter Nann wrote:
> Hmmm, I was hoping for more than the 'efficiency' argument...
> I am wondering if that argument is about 10 years past its use-by
> date...
> We are not in the days of single-digit-Megahertz and RAM measured in
> k anymore... when lexx and yacc were written...

Well, ANTLR goes well beyond lex and yacc. However, if you believe that 
lexer / parser stratification is no longer justified, you could set out 
to prove that thesis by writing a unified lexer / parser generator 
tool. (That does everything current tools do!) Many good current parser 
generators are open source (including ANTLR, of course), so you can 
exploit the techniques they use and that you like and replace or 
improve the ones you don't.

Personally, I'm not sure stratifying the lexical and syntactic analysis 
is a bad thing. I've certainly never found it to be a problem, and I've 
written my share of parsers, using lex & yacc (or flex and bison, I 
guess), JavaCC, ANTLR 2.x and 3.x. The only thing I don't care for is 
the use of alphabetic case to distinguish lexical from syntactical 
rules.


> It would depend on the scale of parsing you need to do of course, but
> for small-scale parsing I would question whether CPU and RAM matters
> any more on that task...

You know, there's a reason we don't call them "little languages" any 
more. They are never little and they never were little! And while it's 
legitimate to make a considered choice about trading off, say, 
developer time and execution time, it's not really OK to do something 
slowly when you don't get something in turn for it.


> I will have to take your word about 'combinatorial explosion' for
> some problems, but I thought simple RDP's could pretty much break
> down to one branch (as in: switch statement) per character (or token
> if you tokenize it), which doesn't seem excessive, or combinatorial.

You may still want to produce a DFA, and that can in general yield and 
exponential increase in the number of states. Not stratifying the 
lexical and syntactic layers will exacerbate that problem (I think).

And I don't have any idea about the consequences of unifying lexical 
analysis with syntax analysis in the face of arbitrary or variable 
look-ahead or backtracking.

Lastly, I still think lexical states (as they exist in JavaCC, e.g.) 
would be a good thing. It seems that would be harder to do when the 
lexer is not separated from the parser.


>  - But, yes, that was just my CS101 project!

Interesting. If you got that stuff in CS101, you must have gotten one 
hell of a CS education.


> ...
>
> Sorry to be a sour-puss, but I was quite excited about ANTLR at first
> look, but then got disappointed very quickly, so I'm a bit like a
> child who just broke his favourite toy...  ;-)

Show the ANTLR principals wrong by besting them at their own game. If 
you drop the sour-puss act, they'll probably wish you well, even help 
you, and certainly congratulate you if you succeed.


Randall Schulz

From peter.nann at vecommerce.com.au  Wed Apr 23 18:06:42 2008
From: peter.nann at vecommerce.com.au (Peter Nann)
Date: Thu, 24 Apr 2008 11:06:42 +1000
Subject: [antlr-interest] Why don't parsers support character ranges?
References: <108051.95259.qm@web55909.mail.re3.yahoo.com><1080AEABD1979E42A15840F08084B67BFE3AF5@vcmsydexh.vecommerce.com>
	<200804231755.34175.rschulz@sonic.net>
Message-ID: <1080AEABD1979E42A15840F08084B67BFE3AF7@vcmsydexh.vecommerce.com>

 
Randall R Schulz wrote:
> If you got that stuff in CS101,

OK, Maybe it was CS201... But you know what I mean.

> Show the ANTLR principals wrong by besting them at their own game. If 
> you drop the sour-puss act, they'll probably wish you well, even help 
> you, and certainly congratulate you if you succeed.

I think the problem was that my task was quite simple.
I think ANTLR makes hard things easier (has many cool features for
that), but in my case my simple task didn't turn out to be a simple
solution in ANTLR.

No tool is perfect, and (almost?) to tool can maintain a linear
relationship between problem complexity and solution complexity, I get
that.

So, let's just put it down to bad luck for my specific requirements.
ANTLR does look like an awesome tool for a very broad range of more
complex problems, and I'll leave it at that!


Thanks for your well put response(s).


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Thursday, 24 April 2008 10:56 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Why don't parsers support character
ranges?

On Wednesday 23 April 2008 17:01, Peter Nann wrote:
> Hmmm, I was hoping for more than the 'efficiency' argument...
> I am wondering if that argument is about 10 years past its use-by 
> date...
> We are not in the days of single-digit-Megahertz and RAM measured in k

> anymore... when lexx and yacc were written...

Well, ANTLR goes well beyond lex and yacc. However, if you believe that
lexer / parser stratification is no longer justified, you could set out
to prove that thesis by writing a unified lexer / parser generator tool.
(That does everything current tools do!) Many good current parser
generators are open source (including ANTLR, of course), so you can
exploit the techniques they use and that you like and replace or improve
the ones you don't.

Personally, I'm not sure stratifying the lexical and syntactic analysis
is a bad thing. I've certainly never found it to be a problem, and I've
written my share of parsers, using lex & yacc (or flex and bison, I
guess), JavaCC, ANTLR 2.x and 3.x. The only thing I don't care for is
the use of alphabetic case to distinguish lexical from syntactical
rules.


> It would depend on the scale of parsing you need to do of course, but 
> for small-scale parsing I would question whether CPU and RAM matters 
> any more on that task...

You know, there's a reason we don't call them "little languages" any
more. They are never little and they never were little! And while it's
legitimate to make a considered choice about trading off, say, developer
time and execution time, it's not really OK to do something slowly when
you don't get something in turn for it.


> I will have to take your word about 'combinatorial explosion' for some

> problems, but I thought simple RDP's could pretty much break down to 
> one branch (as in: switch statement) per character (or token if you 
> tokenize it), which doesn't seem excessive, or combinatorial.

You may still want to produce a DFA, and that can in general yield and
exponential increase in the number of states. Not stratifying the
lexical and syntactic layers will exacerbate that problem (I think).

And I don't have any idea about the consequences of unifying lexical
analysis with syntax analysis in the face of arbitrary or variable
look-ahead or backtracking.

Lastly, I still think lexical states (as they exist in JavaCC, e.g.)
would be a good thing. It seems that would be harder to do when the
lexer is not separated from the parser.


>  - But, yes, that was just my CS101 project!

Interesting. If you got that stuff in CS101, you must have gotten one
hell of a CS education.


> ...
>
> Sorry to be a sour-puss, but I was quite excited about ANTLR at first
> look, but then got disappointed very quickly, so I'm a bit like a
> child who just broke his favourite toy...  ;-)

Show the ANTLR principals wrong by besting them at their own game. If 
you drop the sour-puss act, they'll probably wish you well, even help 
you, and certainly congratulate you if you succeed.


Randall Schulz

From antlr5 at hannesschmidt.net  Wed Apr 23 18:35:56 2008
From: antlr5 at hannesschmidt.net (Hannes Schmidt)
Date: Wed, 23 Apr 2008 18:35:56 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <108051.95259.qm@web55909.mail.re3.yahoo.com>
Message-ID: <C435320C.6C3E%antlr5@hannesschmidt.net>

Uh, oh, what have I started? I shouldn't have theorized ...

On 4/23/08 8:08 AM, "Loring Craymer" <lgcraymer at yahoo.com> wrote:

> I think that Gavin answered the range question pretty well.  As to the
> separation of lexer and parser, that is not an historical artifact.  Had you
> tried to use your CS 101 LL1 parser for production use, you would have been
> very disappointed with both its performance and memory footprint.

On the contrary, I was pleasantly surprised at how well they performed. I
guess it was due to the fact that even back then Opal did a good job
detecting and eliminating tail recursion. BTW, our parsers weren't LL(1)
because they did backtracking, more like LL(*).

> Lexers work 
> with characters; parsers work with tokens.

Says who? Just because it's been like this for 40 years doesn't mean it can
never change.

>  If your characters are packaged as
> tokens, memory usage expands dramatically and it takes longer to dereference
> the token to look at the character.  That can easily cost you a factor of
> 10-100 in performance; ANTLR 2 just packaged characters into strings, and that
> cost a factor of 5 over more optimal approaches (ANTLR 3 does much better).

In most cases I don't really care whether my recognizer finishes in 50 or
250 milliseconds, especially if I need to spend ten additional hours
understanding, debugging and maintaining a grammar that's more complex than
it needs to be. 

Don't get me wrong, for some languages the lexer/parser separation makes
sense and yields concise, straight-forward grammars. Unfortunately, those
are just some languages, most likely the ones that were designed with that
separation in mind. In other cases (like mine) that separation yields
awkward grammars, riddled with predicates and parser logic duplicated in the
lexer. The lexer/parser separation is a huge sacrifice to performance and I
am simply not convinced that it's necessary anymore.

> The impact of using a single stage of analysis on the parser is equally
> dramatic:  "foo is blue" goes from a 3 token analysis problem ("foo" "is"
> "blue") to an 11 token analysis problem (can you say 'combinatorial
> explosion') with a corresponding dramatic decrease in performance.

Assuming that the average length of a token is constant, there is no
'combinatorial explosion' as you put it simply because c * O(f) = O(f).
Whether a mere linear decline can be called dramatic is entirely subjective.
 
> As to the  "before '@' after" example you give (assuming that you really do
> need to distinguish BEFORE and AFTER tokens), the best approach might be to
> support multiple token emission from lexer rules so  that you do something
> like
> 
> AT :  'a' .. 'l' { emit(BEFORE); } '@' { emit(AT); } 'm'..'z' {emit(AFTER); }
> ;
> 
> foo : BEFORE AT AFTER
> 
> but ANTLR 3 does not quite do that yet.
>
> Note that the natural approach to reading text is in fact to lex characters
> into tokens which we call "words" (reading text without spaces requires some
> effort) and then to parse sentences made of words.  Spaces and punctuation
> make a big difference because they support hierarchical processing.

That's a false analogy. What's natural to a human might not be the best
strategy for a machine. For some languages, having to split the recognizer
into a DFA and a TM *does* feel unnatural to me.

> 
> --Loring
> 
> 
> ----- Original Message ----
>> From: Hannes Schmidt <antlr5 at hannesschmidt.net>
>> To: antlr-interest at antlr.org
>> Sent: Tuesday, April 22, 2008 7:16:16 PM
>> Subject: [antlr-interest] Why don't parsers support character ranges?
>> 
>> Hi all,
>> 
>> I would like to use character ranges in a parser as illustrated in the
>> following example (a very reduced version of my real-world grammar):
>> 
>> grammar test1;
>> foo : before '@' after;
>> before : 'a'..'z';
>> after : 'm'..'z';
>> 
>> ANTLR generates a parser that ignores the range as if the grammar were
>> 
>> grammar test2;
>> foo : before '@' after;
>> before : ;
>> after : ;
>> 
>> IOW, the grammar fails to parse the input "a at m". If I break the grammar
>> up into a lexer and a parser as in
>> 
>> grammar test3;
>> foo : BEFORE '@' AFTER;
>> BEFORE : 'a'..'z';
>> AFTER : 'm'..'z';
>> 
>> the generated code fails to parse "a at m" with a MismatchedTokeException
>> at the 'm'. This is because ANTLR silently prioritizes BEFORE even
>> though its set of characters intersects that of AFTER. Swapping BEFORE
>> and AFTER would generate a parser that fails to recognize "m at m".
>> 
>> So here are  my questions:
>> 
>> Why can't I use ranges in parsers?
>> 
>> Why doesn't ANTLR emit a warning when it ignores ranges in grammar rules?
>> 
>> How can I emulate the missing range feature without obfuscating my
>> grammar too much? Semantic predicates?
>> 
>> Now let me put my tinfoil hat on and theorize a little bit: I think that
>> the root cause of  my confusion is ANTLR's distinction between lexer and
>> parser. I think this distinction is purely historical and ANTLR might be
>> better of without it. When writing grammars, I often find myself in
>> situations where I know that certain lexer rules make sense in a certain
>> parser context only but that context is not available to the lexer
>> because the state that defines it is maintained in the parser.
>> 
>> I fondly remember my CS101 classes when we wrote recursive descent
>> parsers for LL(*) in Opal (a functional language similar to Haskell). We
>> didn't have to distinguish between lexer and parser and it felt very
>> liberating. ;-)
> 
> 
> 
>       
> ______________________________________________________________________________
> ______
> Be a better friend, newshound, and
> know-it-all with Yahoo! Mobile.  Try it now.
> http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ
> 



From antlr5 at hannesschmidt.net  Wed Apr 23 18:42:31 2008
From: antlr5 at hannesschmidt.net (Hannes Schmidt)
Date: Wed, 23 Apr 2008 18:42:31 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <40CBD611A793EA438464B91E749DD8B00416C299@blums0017.bluelnk.net>
Message-ID: <C4353397.6C41%antlr5@hannesschmidt.net>

Johannes and Troy,

Thanks, guys. I was afraid that this was my only option. My real-world
grammar has dozens of tokens with non-disjunctive sets of characters. I
guess, I'll have to play trained monkey ...

On 4/23/08 3:39 PM, "Daniels, Troy (US SSA)" <troy.daniels at baesystems.com>
wrote:

>  
> 
>> 
>> 
>> You could alternatively use:
>> 
>> grammar test4;
>> foo : BEFORE '@' AFTER;
>> BEFORE : A_TO_L | M_TO_Z;
>> AFTER : M_TO_Z;
>> fragment A_TO_L: 'a'..'l';
>> fragment M_TO_Z: 'm'..'z';
>> 
> 
> Actually, you can't.  Nothing will ever match AFTER, since BEFORE will
> consume it.  If you make BEFORE and AFTER parser rules, that would work.
> 
> grammar test6;
>  foo : before '@' after;
>  before : A_TO_L | M_TO_Z;
>  after : M_TO_Z;
> 
> A_TO_L: 'a'..'l';
> M_TO_Z: 'm'..'z';
> 
> 
> Troy
> 
> 
>> But I suppose it is easier for error messages, if you leave
>> A_TO_L in for AFTER and check it in a later stage for correctness.
>> 
>> grammar test5;
>> foo : ALPHA '@' ALPHA;
>> ALPHA: 'a'..'z';
>> 
>> Johannes
>> 



From jimi at temporal-wave.com  Wed Apr 23 19:57:06 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 23 Apr 2008 19:57:06 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AF5@vcmsydexh.vecommerce.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAA1ZovU5yyG0O
	626tZTq89UQEAAAAA@temporal-wave.com>

Like any other technical toy, it will give more 'hours of fun' if you work at it a little, but here are some things to avoid until you know what they are all 'mean':

1) Don't use 'ffff' in a parser rule, construct 'real' lexer rules;
2) Don't use the backtracking=true option, at least the global one, until you understand where it might be a good idea;
3) Remember to construct a lexer that tokenizes everything without knowing anything about context, it should [be able to] run through all the input and give out a set of tokens, then the parser will run against them. This is a common problem when people start out and start putting 'abc' in their parsers and is a lot easier to see by not using that in the parser until you have your head around what happens.
4) Don't invent languages that are indent sensitive and don't use terminals to surround blocks [that's isn;t a real rule ;-)]

On performance, the basic thing is that it ALWAYS matters. Not worrying about it as how things that were only going to be running once a week get run once every millisecond and kill systems. However, I think that you are underestimating the impact that Loring is referring to as while you might be able to have a lot of switch statements, you will need a really huge pile of them. There are some uses for non-lexing parsers, if you know where to use them, but they are not generally needed.

I think that if you persevere, perhaps starting with some of the examples to see if you can work out why they are constructed the way they are, then in a few weeks you will be very happy with it all; it is mostly a matter of gestalt.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter Nann
> Sent: Wednesday, April 23, 2008 5:01 PM
> To: Loring Craymer; Hannes Schmidt; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why don't parsers support character
> ranges?
> 
> 
> Hmmm, I was hoping for more than the 'efficiency' argument...
> I am wondering if that argument is about 10 years past its use-by
> date...
> We are not in the days of single-digit-Megahertz and RAM measured in k
> anymore... when lexx and yacc were written...
> 
> It would depend on the scale of parsing you need to do of course, but
> for small-scale parsing I would question whether CPU and RAM matters
> any
> more on that task...
> 
> I will have to take your word about 'combinatorial explosion' for some
> problems, but I thought simple RDP's could pretty much break down to
> one
> branch (as in: switch statement) per character (or token if you
> tokenize
> it), which doesn't seem excessive, or combinatorial.
>  - But, yes, that was just my CS101 project!
> 
> 
> And using an analogy of how a human does it, versus how a computer
> should do it, is not a valid technical argument at all in my book.
> 
> 
> Sorry to be a sour-puss, but I was quite excited about ANTLR at first
> look, but then got disappointed very quickly, so I'm a bit like a child
> who just broke his favourite toy...  ;-)
> 
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Loring Craymer
> Sent: Thursday, 24 April 2008 1:09 AM
> To: Hannes Schmidt; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why don't parsers support character
> ranges?
> 
> I think that Gavin answered the range question pretty well.  As to the
> separation of lexer and parser, that is not an historical artifact.
> Had
> you tried to use your CS 101 LL1 parser for production use, you would
> have been very disappointed with both its performance and memory
> footprint.  Lexers work with characters; parsers work with tokens.  If
> your characters are packaged as tokens, memory usage expands
> dramatically and it takes longer to dereference the token to look at
> the
> character.  That can easily cost you a factor of 10-100 in performance;
> ANTLR 2 just packaged characters into strings, and that cost a factor
> of
> 5 over more optimal approaches (ANTLR 3 does much better).  The impact
> of using a single stage of analysis on the parser is equally dramatic:
> "foo is blue" goes from a 3 token analysis problem ("foo" "is" "blue")
> to an 11 token analysis problem (can you say 'combinatorial explosion')
> with a corresponding dramatic decrease in performance.
> 
> As to the  "before '@' after" example you give (assuming that you
> really
> do need to distinguish BEFORE and AFTER tokens), the best approach
> might
> be to support multiple token emission from lexer rules so  that you do
> something like
> 
> AT :  'a' .. 'l' { emit(BEFORE); } '@' { emit(AT); } 'm'..'z'
> {emit(AFTER); } ;
> 
> foo : BEFORE AT AFTER
> 
> but ANTLR 3 does not quite do that yet.
> 
> Note that the natural approach to reading text is in fact to lex
> characters into tokens which we call "words" (reading text without
> spaces requires some effort) and then to parse sentences made of words.
> Spaces and punctuation make a big difference because they support
> hierarchical processing.
> 
> --Loring
> 
> 
> ----- Original Message ----
> > From: Hannes Schmidt <antlr5 at hannesschmidt.net>
> > To: antlr-interest at antlr.org
> > Sent: Tuesday, April 22, 2008 7:16:16 PM
> > Subject: [antlr-interest] Why don't parsers support character ranges?
> >
> > Hi all,
> >
> > I would like to use character ranges in a parser as illustrated in
> the
> 
> > following example (a very reduced version of my real-world grammar):
> >
> > grammar test1;
> > foo : before '@' after;
> > before : 'a'..'z';
> > after : 'm'..'z';
> >
> > ANTLR generates a parser that ignores the range as if the grammar
> were
> >
> > grammar test2;
> > foo : before '@' after;
> > before : ;
> > after : ;
> >
> > IOW, the grammar fails to parse the input "a at m". If I break the
> > grammar up into a lexer and a parser as in
> >
> > grammar test3;
> > foo : BEFORE '@' AFTER;
> > BEFORE : 'a'..'z';
> > AFTER : 'm'..'z';
> >
> > the generated code fails to parse "a at m" with a
> MismatchedTokeException
> 
> > at the 'm'. This is because ANTLR silently prioritizes BEFORE even
> > though its set of characters intersects that of AFTER. Swapping
> BEFORE
> 
> > and AFTER would generate a parser that fails to recognize "m at m".
> >
> > So here are  my questions:
> >
> > Why can't I use ranges in parsers?
> >
> > Why doesn't ANTLR emit a warning when it ignores ranges in grammar
> rules?
> >
> > How can I emulate the missing range feature without obfuscating my
> > grammar too much? Semantic predicates?
> >
> > Now let me put my tinfoil hat on and theorize a little bit: I think
> > that the root cause of  my confusion is ANTLR's distinction between
> > lexer and parser. I think this distinction is purely historical and
> > ANTLR might be better of without it. When writing grammars, I often
> > find myself in situations where I know that certain lexer rules make
> > sense in a certain parser context only but that context is not
> > available to the lexer because the state that defines it is
> maintained
> in the parser.
> >
> > I fondly remember my CS101 classes when we wrote recursive descent
> > parsers for LL(*) in Opal (a functional language similar to Haskell).
> > We didn't have to distinguish between lexer and parser and it felt
> > very liberating. ;-)
> 
> 
> 
> 
> _______________________________________________________________________
> _
> ____________
> Be a better friend, newshound, and
> know-it-all with Yahoo! Mobile.  Try it now.
> http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ





From jimi at temporal-wave.com  Wed Apr 23 20:03:08 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 23 Apr 2008 20:03:08 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <1080AEABD1979E42A15840F08084B67BFE3AF7@vcmsydexh.vecommerce.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAcDiBdUNsKka
	cYkAn0kgGqQEAAAAA@temporal-wave.com>

You may have already stated what it is you were trying to do, but scanning threads isn't making this obvious to me, so perhaps a paragraph on the requirement might help a bit here? It is the case that ANTLR isn't the best tool for all parsing jobs of course, for instance HTML isn't easy and XML is very awkward because it was designed to be 'simple to parse' - as in you can do it with a bit of hand crafted stuff that will be very fast and probably isn't difficult to maintain because it isn't that complicated a language - I dealt with it in the lexer for a VB.Net parser for instance. 

I am sure you can get a bit more help for your parsing, but if you already came up with something else that works, then that might be just fine for you. Mostly it is the fragility of hand-crafted parsers that makes generated recognizers so attractive.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter Nann
> Sent: Wednesday, April 23, 2008 6:07 PM
> To: Randall R Schulz; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why don't parsers support character
> ranges?
> 
> 
> Randall R Schulz wrote:
> > If you got that stuff in CS101,
> 
> OK, Maybe it was CS201... But you know what I mean.
> 
> > Show the ANTLR principals wrong by besting them at their own game. If
> > you drop the sour-puss act, they'll probably wish you well, even help
> > you, and certainly congratulate you if you succeed.
> 
> I think the problem was that my task was quite simple.
> I think ANTLR makes hard things easier (has many cool features for
> that), but in my case my simple task didn't turn out to be a simple
> solution in ANTLR.
> 
> No tool is perfect, and (almost?) to tool can maintain a linear
> relationship between problem complexity and solution complexity, I get
> that.
> 
> So, let's just put it down to bad luck for my specific requirements.
> ANTLR does look like an awesome tool for a very broad range of more
> complex problems, and I'll leave it at that!
> 
> 
> Thanks for your well put response(s).
> 
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
> Sent: Thursday, 24 April 2008 10:56 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why don't parsers support character
> ranges?
> 
> On Wednesday 23 April 2008 17:01, Peter Nann wrote:
> > Hmmm, I was hoping for more than the 'efficiency' argument...
> > I am wondering if that argument is about 10 years past its use-by
> > date...
> > We are not in the days of single-digit-Megahertz and RAM measured in
> k
> 
> > anymore... when lexx and yacc were written...
> 
> Well, ANTLR goes well beyond lex and yacc. However, if you believe that
> lexer / parser stratification is no longer justified, you could set out
> to prove that thesis by writing a unified lexer / parser generator
> tool.
> (That does everything current tools do!) Many good current parser
> generators are open source (including ANTLR, of course), so you can
> exploit the techniques they use and that you like and replace or
> improve
> the ones you don't.
> 
> Personally, I'm not sure stratifying the lexical and syntactic analysis
> is a bad thing. I've certainly never found it to be a problem, and I've
> written my share of parsers, using lex & yacc (or flex and bison, I
> guess), JavaCC, ANTLR 2.x and 3.x. The only thing I don't care for is
> the use of alphabetic case to distinguish lexical from syntactical
> rules.
> 
> 
> > It would depend on the scale of parsing you need to do of course, but
> > for small-scale parsing I would question whether CPU and RAM matters
> > any more on that task...
> 
> You know, there's a reason we don't call them "little languages" any
> more. They are never little and they never were little! And while it's
> legitimate to make a considered choice about trading off, say,
> developer
> time and execution time, it's not really OK to do something slowly when
> you don't get something in turn for it.
> 
> 
> > I will have to take your word about 'combinatorial explosion' for
> some
> 
> > problems, but I thought simple RDP's could pretty much break down to
> > one branch (as in: switch statement) per character (or token if you
> > tokenize it), which doesn't seem excessive, or combinatorial.
> 
> You may still want to produce a DFA, and that can in general yield and
> exponential increase in the number of states. Not stratifying the
> lexical and syntactic layers will exacerbate that problem (I think).
> 
> And I don't have any idea about the consequences of unifying lexical
> analysis with syntax analysis in the face of arbitrary or variable
> look-ahead or backtracking.
> 
> Lastly, I still think lexical states (as they exist in JavaCC, e.g.)
> would be a good thing. It seems that would be harder to do when the
> lexer is not separated from the parser.
> 
> 
> >  - But, yes, that was just my CS101 project!
> 
> Interesting. If you got that stuff in CS101, you must have gotten one
> hell of a CS education.
> 
> 
> > ...
> >
> > Sorry to be a sour-puss, but I was quite excited about ANTLR at first
> > look, but then got disappointed very quickly, so I'm a bit like a
> > child who just broke his favourite toy...  ;-)
> 
> Show the ANTLR principals wrong by besting them at their own game. If
> you drop the sour-puss act, they'll probably wish you well, even help
> you, and certainly congratulate you if you succeed.
> 
> 
> Randall Schulz




From jimi at temporal-wave.com  Wed Apr 23 20:17:00 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 23 Apr 2008 20:17:00 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <C4353397.6C41%antlr5@hannesschmidt.net>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAjEuQgt4A4km
	IVeIDIdH3wwEAAAAA@temporal-wave.com>

Maybe you are trying to do too much in the parser and lexer. Where you shouldn't be afraid to introduce what looks like overhead is to add the extra step of semantic verification. 

In such a case you would not distinguish BEFORE and AFTER, or any overlapping sequence that isn't 'obvious' but walk a syntactically sound tree that just has say a token called TEXT and report much better errors such as "The 'before' part of the expression xxxxxx cannot contain characters from the set ..." and so on. 

This kind of error is usually much more useful to the programmer/author as it has better context than "Syntax error at 'abcde'", which doesn't really give you that much useful information. Sure, you might be able to see that you got an AFTER token but wanted a BEFORE token, but then you will be trying to build semantics into your error message handler and walking a tree provides a structure where such things are much easier to pin down.

Perhaps an easier to see example might be keywords such as 'public' 'private' etc on say a property in a class of some language. You could try to construct a parser that threw syntax errors if the word public was used on something that can never be public, but the parser is much nicer if you just allow all the methods, then in your tree parser, trigger a semantic error that says "properties cannot be declared virtual" or whatever. Again, you might think you could work out such things in the parser, but you will either get "Syntax error at 'virtual'" which is no use to man nor beast, or you will try and track the virtual, public and so on and try to give semantic errors while parsing.

Without knowing what you are trying to parse, I would still suggest that you simplify what you are trying to lex into, which will simplify the parser and cut down on syntax errors that are often difficult to interpret and allow you much better context. Personally, I think that the C# analyzer/parser in Visual Studio 2005+ is an excellent example of what to strive for - there are almost no 'syntax' errors, which means the errors it gives you are really rather useful.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hannes Schmidt
> Sent: Wednesday, April 23, 2008 6:43 PM
> To: Daniels, Troy (US SSA); Johannes Luber
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why don't parsers support character
> ranges?
> 
> Johannes and Troy,
> 
> Thanks, guys. I was afraid that this was my only option. My real-world
> grammar has dozens of tokens with non-disjunctive sets of characters. I
> guess, I'll have to play trained monkey ...
> 
> On 4/23/08 3:39 PM, "Daniels, Troy (US SSA)"
> <troy.daniels at baesystems.com>
> wrote:
> 
> >
> >
> >>
> >>
> >> You could alternatively use:
> >>
> >> grammar test4;
> >> foo : BEFORE '@' AFTER;
> >> BEFORE : A_TO_L | M_TO_Z;
> >> AFTER : M_TO_Z;
> >> fragment A_TO_L: 'a'..'l';
> >> fragment M_TO_Z: 'm'..'z';
> >>
> >
> > Actually, you can't.  Nothing will ever match AFTER, since BEFORE
> will
> > consume it.  If you make BEFORE and AFTER parser rules, that would
> work.
> >
> > grammar test6;
> >  foo : before '@' after;
> >  before : A_TO_L | M_TO_Z;
> >  after : M_TO_Z;
> >
> > A_TO_L: 'a'..'l';
> > M_TO_Z: 'm'..'z';
> >
> >
> > Troy
> >
> >
> >> But I suppose it is easier for error messages, if you leave
> >> A_TO_L in for AFTER and check it in a later stage for correctness.
> >>
> >> grammar test5;
> >> foo : ALPHA '@' ALPHA;
> >> ALPHA: 'a'..'z';
> >>
> >> Johannes
> >>
> 





From jasonzhang2002 at gmail.com  Wed Apr 23 21:01:48 2008
From: jasonzhang2002 at gmail.com (jason zhang)
Date: Thu, 24 Apr 2008 12:01:48 +0800
Subject: [antlr-interest] simple grammar with wildcard
In-Reply-To: <ebc876d70804231012y7808cdebqb69a7373a0f0488b@mail.gmail.com>
References: <480F4BC1.9050504@gmail.com>	
	<9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>	
	<480F6566.7040103@gmail.com> <480F6993.50403@gmx.de>
	<ebc876d70804231012y7808cdebqb69a7373a0f0488b@mail.gmail.com>
Message-ID: <4810062C.8050303@gmail.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080424/6f9bda95/attachment.html 

From magnus at rubidium.dyndns.org  Wed Apr 23 18:45:57 2008
From: magnus at rubidium.dyndns.org (Magnus Danielson)
Date: Thu, 24 Apr 2008 03:45:57 +0200 (CEST)
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <480E9BF0.7060006@hannesschmidt.net>
References: <480E9BF0.7060006@hannesschmidt.net>
Message-ID: <20080424.034557.280423144696093165.cfmd@bredband.net>

From: Hannes Schmidt <antlr5 at hannesschmidt.net>
Subject: [antlr-interest] Why don't parsers support character ranges?
Date: Tue, 22 Apr 2008 19:16:16 -0700
Message-ID: <480E9BF0.7060006 at hannesschmidt.net>

> Hi all,
> 
> I would like to use character ranges in a parser as illustrated in the following example (a very reduced version of my real-world grammar):
> 
> grammar test1;
> foo : before '@' after;
> before : 'a'..'z';
> after : 'm'..'z';
> 
> ANTLR generates a parser that ignores the range as if the grammar were
> 
> grammar test2;
> foo : before '@' after;
> before : ;
> after : ;
> 
> IOW, the grammar fails to parse the input "a at m". If I break the grammar up into a lexer and a parser as in
> 
> grammar test3;
> foo : BEFORE '@' AFTER;
> BEFORE : 'a'..'z';
> AFTER : 'm'..'z';
> 
> the generated code fails to parse "a at m" with a MismatchedTokeException at the 'm'. This is because ANTLR silently prioritizes BEFORE even though its set of characters intersects that of AFTER. Swapping BEFORE and AFTER would generate a parser that fails to recognize "m at m".
> 
> So here are  my questions:
> 
> Why can't I use ranges in parsers?
> 
> Why doesn't ANTLR emit a warning when it ignores ranges in grammar rules?
> 
> How can I emulate the missing range feature without obfuscating my grammar too much? Semantic predicates?
> 
> Now let me put my tinfoil hat on and theorize a little bit: I think that the root cause of  my confusion is ANTLR's distinction between lexer and parser. I think this distinction is purely historical and ANTLR might be better of without it. When writing grammars, I often find myself in situations where I know that certain lexer rules make sense in a certain parser context only but that context is not available to the lexer because the state that defines it is maintained in the parser.

I have to disagree with you. As I have addressed this particular problem when
using PCCTS (don't ask and I won't tell why) I found that the best method to
handle these types of problems was to divide the lexer grammar into groups
(this isn't the correct term, but it is easy enought to dig it up).
By changing the active lexer group as I progress throught the grammar, I also
changes the set of token definitions which can be generated and any inclusion
problems as you indicate will be eliminated.

Why did this problem occur? Well, in the ideal case would each and every
decision point in the grammar has a unique subset of the lexer definition. That
would constitute a correct or at least near correct state compaction of a full
character-based DFA into a lexer/parser DFA pair. Infact, there would be many
very small lexer DFAs. This has traditionally not been done, but rather an
assumption have been made that a globally unique lexer definition can be
written and this is for many cases possible. As a feature, scoping have been
provided, to aid in solving the most accute cases.

What I found was that forming these subsets always resolved what I considered
"legal" constructs. So, backing out... what you could do is to actually form
all the subsets at each parser DFA decission point. You can now safely reduce
the subsets by combining subsets that never disagree on produced token for any
sequence of characters. From this basic rule, you can significantly reduce the
number of needed subsets. This reduction does infact not need to be based on
parser based subsets, but initial analysis can be done in the lexer analysis.

FOO: (a|b)b
BAR: bb
FOZ: bc

FOO and BAR does not mix well. For the string bb the lexer has no option but to
select either one of them if they are in the same lexer domain. FOZ can be in
either the same domain as FOO and BAR, infact it can be included in both
domains. A lexer driver approach would thus be that for each lexer rule to
include, it should be attempted to be included in all lexer domains, and if
not included into any of them, a new lexer domain is formed. Excess domains can
be tossed with parser knowledge when each decission point has selected amongst
the available domains.

One might however be fooled to beleive that all cases will be handled correctly
from a character-DFA world. This is not so. There might be cases where FOO and
BAR is both legal at the same decision point, but that only later information
in the grammar. This require lookahead processing, assuming that no character
difference prior to the conflict would separate the case, and this will always
require parser roll-back manuevers.

While some of the problems you address is valid, many cases can be resolved and
the can be resolved by means of automatic tools. The reduced complexity of each
DFA generation and ease of debugging is both arguments for why this division
is still a sound way of going about things.

So I end up thinking that your question is asked the wrong way around. Why is
it that the nifty tools does not solve this behind my back for the 95% of the
time that it is not too hard to spot it, if it was looking at it?
The exact methods discussed is most probably not ideal from any perspective,
but some good thinking about it should give some indications as to what type
of algorithms is bad and what is promessing.

> I fondly remember my CS101 classes when we wrote recursive descent parsers for LL(*) in Opal (a functional language similar to Haskell). We didn't have to distinguish between lexer and parser and it felt very liberating. ;-)
> 

Functional languages are liberating in mind, but hard to optimize. Just reading
a state of the art PhD on the topic can result in minor functional disorders.

Cheers,
Magnus

From eamon at nerbonne.org  Thu Apr 24 01:20:01 2008
From: eamon at nerbonne.org (Eamon Nerbonne)
Date: Thu, 24 Apr 2008 10:20:01 +0200
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <20080424.034557.280423144696093165.cfmd@bredband.net>
References: <480E9BF0.7060006@hannesschmidt.net>
	<20080424.034557.280423144696093165.cfmd@bredband.net>
Message-ID: <16b7b9ec0804240120x37451128t487e62ae0df1cab0@mail.gmail.com>

The suggestion has been made that parsers and lexers need to be separated,
or that combining them would be a subject for a thesis.  This isn't new
work, however: there exist such things, like say...

DParser - Scannerless GLR parser
With juicy bits like:
"[...]The grammar can be ambiguous, right or left recursive, have any number
of null productions, and because there is no seperate tokenizer, can include
whitespace in terminals and have terminals which are prefixes of other
terminals.[...]"
http://dparser.sourceforge.net/

GLR techniques can actually parse ambiguous constructs, which is a boon when
it comes to things like C's dangling else.  I'm not an expert, but IIRC
these parsers are all descendants of Tomito's GLR parser, which was (almost)
capable of parsing ambiguous constructs but contained a few errors (with
nullable items and hidden left recursion) and wasn't very efficient on
ambiguous grammars.  Newer algorithms have fixed both issues.

I believe scannerless parsing is possible with the a little more well known
Elkhound, and a bit of web-searching also revealed meta-environment
http://www.cwi.nl/htbin/sen1/twiki/bin/view/Meta-Environment, and there's
lots more out there.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080424/e7e42c15/attachment.html 

From adam.rpconnelly at googlemail.com  Thu Apr 24 07:32:37 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Thu, 24 Apr 2008 15:32:37 +0100
Subject: [antlr-interest] inconsistent line endings in generated parser
	and lexer
In-Reply-To: <A7746824D386F947BBC285F6EC4716B001E8DB7A0A@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
References: <A7746824D386F947BBC285F6EC4716B001E8DB7A0A@vmtbosmail01.VMTBOSTON.VAULTUS.COM>
Message-ID: <b9a39b060804240732i2b38f39v22747aa2d95e6c9e@mail.gmail.com>

I'm guessing this is a problem with the templates that are used to generate
the lexer and parser.  I've also noticed it when debugging grammars in
Visual Studio because any time you generate your parser it pops up a box
asking if you want to normalise the line endings - a bit annoying.  I'd
second that request.

Adam
2008/4/22 Doucette, Charles <cdoucette at vaultus.com>:

>  I have a grammar file which I have been editing in Antlrworks on Windows.
> Apparently, every one of those lines ends with CR-LF.
> Every other line automatically generated by ANTLR ends with LF.
> When you combine those two streams into the automatically generated parser
> and lexer, the line endings are inconsistent.
> When I try to add those files to my source control tool (and perhaps I
> shouldn't try since it is generated), Subversion,
> I get an error that the line endings are inconsistent.
> It can handle all CRs (Mac?), all LFs (Unix) or all CR-LFs (Windows) - but
> it apparently doesn't like a mixture.
> Is it possible to configure ANTLR to generate consistent line endings?
> If not, I'd like to request that as a feature.
>  Today, perhaps I must just remove CRs from my grammar input file before
> processing it.
>
> Thanks,
> Chuck
>
>   ------------------------------
>  Charles E. Doucette ?  617-399-1122 ?  Vaultus Mobile Technologies, 263
> Summer St., Boston, MA 02210 ?  http://www.vaultus.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080424/71c750e7/attachment.html 

From jimi at temporal-wave.com  Thu Apr 24 07:56:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 24 Apr 2008 07:56:12 -0700
Subject: [antlr-interest] inconsistent line endings in generated parser
	and lexer
In-Reply-To: <b9a39b060804240732i2b38f39v22747aa2d95e6c9e@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAIZWedDy02E2
	JIlvDtcKZ5wEAAAAA@temporal-wave.com>

We know about this, and know it needs to be fixed. What is probably needed is a custom writer for the templates used in the code generation.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Adam Connelly
Sent: Thursday, April 24, 2008 7:33 AM
To: Doucette, Charles
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] inconsistent line endings in generated parser and lexer

 

I'm guessing this is a problem with the templates that are used to generate the lexer and parser.  I've also noticed it when debugging grammars in Visual Studio because any time you generate your parser it pops up a box asking if you want to normalise the line endings - a bit annoying.  I'd second that request.

 

Adam

2008/4/22 Doucette, Charles <cdoucette at vaultus.com>:

I have a grammar file which I have been editing in Antlrworks on Windows.

Apparently, every one of those lines ends with CR-LF.

Every other line automatically generated by ANTLR ends with LF.

When you combine those two streams into the automatically generated parser and lexer, the line endings are inconsistent.

When I try to add those files to my source control tool (and perhaps I shouldn't try since it is generated), Subversion,

I get an error that the line endings are inconsistent.

It can handle all CRs (Mac?), all LFs (Unix) or all CR-LFs (Windows) - but it apparently doesn't like a mixture.

Is it possible to configure ANTLR to generate consistent line endings?

If not, I'd like to request that as a feature.

Today, perhaps I must just remove CRs from my grammar input file before processing it.

 

Thanks,

Chuck

 


  _____  


Charles E. Doucette *  617-399-1122 *  Vaultus Mobile Technologies, 263 Summer St., Boston, MA 02210 *  http://www.vaultus.com <http://www.vaultus.com/>  

 

 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080424/3c45d789/attachment.html 

From ahmedh at horizonssoftware.com  Thu Apr 24 07:48:49 2008
From: ahmedh at horizonssoftware.com (Ahmed Hamouda)
Date: Thu, 24 Apr 2008 16:48:49 +0200
Subject: [antlr-interest] How to add catch section to the lexer ?
Message-ID: <2E91F09A8F13BE4BACAA46759CA49915501641@hs-srv-01.horizonssoftware.com>

Hi all,

My ask today is how to add catch section to all lexer functions through
antlr ? My target language is C#.

I have added catch section to all parser function by adding this code in
antlr

 

@rulecatch {

catch (RecognitionException re) 

{

    throw new BusinessValidationException(13100101);

}

}

 

Now I want to make the same on the lexer.

 

Thank you all.

 

 

Best Regards

 

Ahmed Hamouda (MCTS)

Software Engineer

Horizons Software

Address: 93 Haroun Al Rasheed Street, Heliopolis, Cairo, Egypt. 11351. 

Tel:         +202-2644-3709

Mobile:    +2010-33-55-879

Fax:        +202-2632-0661

Website:   www.horizonssoftware.com <http://www.horizonssoftware.com/> 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080424/54b7c5f9/attachment-0001.html 

From antlr5 at hannesschmidt.net  Thu Apr 24 08:56:38 2008
From: antlr5 at hannesschmidt.net (Hannes Schmidt)
Date: Thu, 24 Apr 2008 08:56:38 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <20080424.034557.280423144696093165.cfmd@bredband.net>
References: <480E9BF0.7060006@hannesschmidt.net>
	<20080424.034557.280423144696093165.cfmd@bredband.net>
Message-ID: <4810ADB6.504@hannesschmidt.net>

Magnus Danielson wrote:
> From: Hannes Schmidt <antlr5 at hannesschmidt.net>
> Subject: [antlr-interest] Why don't parsers support character ranges?
> Date: Tue, 22 Apr 2008 19:16:16 -0700
> Message-ID: <480E9BF0.7060006 at hannesschmidt.net>
>
>   
>> Hi all,
>>
>> I would like to use character ranges in a parser as illustrated in the following example (a very reduced version of my real-world grammar):
>>
>> grammar test1;
>> foo : before '@' after;
>> before : 'a'..'z';
>> after : 'm'..'z';
>>
>> ANTLR generates a parser that ignores the range as if the grammar were
>>
>> grammar test2;
>> foo : before '@' after;
>> before : ;
>> after : ;
>>
>> IOW, the grammar fails to parse the input "a at m". If I break the grammar up into a lexer and a parser as in
>>
>> grammar test3;
>> foo : BEFORE '@' AFTER;
>> BEFORE : 'a'..'z';
>> AFTER : 'm'..'z';
>>
>> the generated code fails to parse "a at m" with a MismatchedTokeException at the 'm'. This is because ANTLR silently prioritizes BEFORE even though its set of characters intersects that of AFTER. Swapping BEFORE and AFTER would generate a parser that fails to recognize "m at m".
>>
>> So here are  my questions:
>>
>> Why can't I use ranges in parsers?
>>
>> Why doesn't ANTLR emit a warning when it ignores ranges in grammar rules?
>>
>> How can I emulate the missing range feature without obfuscating my grammar too much? Semantic predicates?
>>
>> Now let me put my tinfoil hat on and theorize a little bit: I think that the root cause of  my confusion is ANTLR's distinction between lexer and parser. I think this distinction is purely historical and ANTLR might be better of without it. When writing grammars, I often find myself in situations where I know that certain lexer rules make sense in a certain parser context only but that context is not available to the lexer because the state that defines it is maintained in the parser.
>>     
>
> I have to disagree with you. As I have addressed this particular problem when
> using PCCTS (don't ask and I won't tell why) I found that the best method to
> handle these types of problems was to divide the lexer grammar into groups
> (this isn't the correct term, but it is easy enought to dig it up).
> By changing the active lexer group as I progress throught the grammar, I also
> changes the set of token definitions which can be generated and any inclusion
> problems as you indicate will be eliminated.
>
>   
Agreed, this is a nifty solution and a viable alternative to what 
Johannes and Troy have suggested (manually making tokens disjunctive). 
It's just that this is too much overhead for 80% of all grammars and 80% 
of all ANTLR users. Eliminate the lexer concept and all of this goes 
away! For the performance-conscious there should be an option to  front  
the  parser with a token-generating  lexer, but that should be optional, 
not the default. I'm guessing that the majority of users would rather 
start with an intuitive grammar and see if it needs optimizing. The 
forced lexer/parser separation is a typical case of premature 
optimization. Don't get me wrong, I love ANTLR, it is far better than 
anything I have used before, especially because of it's power and 
flexibility. But that doesn't mean we can't improve it, right?
> Why did this problem occur? Well, in the ideal case would each and every
> decision point in the grammar has a unique subset of the lexer definition. That
> would constitute a correct or at least near correct state compaction of a full
> character-based DFA into a lexer/parser DFA pair. Infact, there would be many
> very small lexer DFAs. This has traditionally not been done, but rather an
> assumption have been made that a globally unique lexer definition can be
> written and this is for many cases possible. As a feature, scoping have been
> provided, to aid in solving the most accute cases.
>
> What I found was that forming these subsets always resolved what I considered
> "legal" constructs. So, backing out... what you could do is to actually form
> all the subsets at each parser DFA decission point. You can now safely reduce
> the subsets by combining subsets that never disagree on produced token for any
> sequence of characters. From this basic rule, you can significantly reduce the
> number of needed subsets. This reduction does infact not need to be based on
> parser based subsets, but initial analysis can be done in the lexer analysis.
>
> FOO: (a|b)b
> BAR: bb
> FOZ: bc
>
> FOO and BAR does not mix well. For the string bb the lexer has no option but to
> select either one of them if they are in the same lexer domain. FOZ can be in
> either the same domain as FOO and BAR, infact it can be included in both
> domains. A lexer driver approach would thus be that for each lexer rule to
> include, it should be attempted to be included in all lexer domains, and if
> not included into any of them, a new lexer domain is formed. Excess domains can
> be tossed with parser knowledge when each decission point has selected amongst
> the available domains.
>
> One might however be fooled to beleive that all cases will be handled correctly
> from a character-DFA world. This is not so. There might be cases where FOO and
> BAR is both legal at the same decision point, but that only later information
> in the grammar. This require lookahead processing, assuming that no character
> difference prior to the conflict would separate the case, and this will always
> require parser roll-back manuevers.
>   
If there was no lexer, the parser would handle this with disambiguating 
predicates.

> While some of the problems you address is valid, many cases can be resolved and
> the can be resolved by means of automatic tools. The reduced complexity of each
> DFA generation and ease of debugging is both arguments for why this division
> is still a sound way of going about things.
>   
AFAIK, no tools exist for generating grammar specs that switch lexer 
DFAs or disambiguate tokens.

> So I end up thinking that your question is asked the wrong way around. Why is
> it that the nifty tools does not solve this behind my back for the 95% of the
> time that it is not too hard to spot it, if it was looking at it?
> The exact methods discussed is most probably not ideal from any perspective,
> but some good thinking about it should give some indications as to what type
> of algorithms is bad and what is promessing.
>
>   
>> I fondly remember my CS101 classes when we wrote recursive descent parsers for LL(*) in Opal (a functional language similar to Haskell). We didn't have to distinguish between lexer and parser and it felt very liberating. ;-)
>>
>>     
>
> Functional languages are liberating in mind, but hard to optimize.
Not true. It's the lack of state that makes them difficult to use to 
solve real-world problems.
>  Just reading
> a state of the art PhD on the topic can result in minor functional disorders.
>   
Terence compares StringTemplate with a functional language and shows 
that in that similiarity lies it's strength. FLs have there use and 
understanding the paradigm them can be enlightening.
> Cheers,
> Magnus
>   


From harsha.nagesh at credit-suisse.com  Thu Apr 24 09:18:02 2008
From: harsha.nagesh at credit-suisse.com (Nagesh, Harsha)
Date: Thu, 24 Apr 2008 12:18:02 -0400
Subject: [antlr-interest] Lexer rule for number range matching ?
In-Reply-To: <40CBD611A793EA438464B91E749DD8B00416BDFB@blums0017.bluelnk.net>
References: <480E0B8E.5060002@gmail.com>
	<40CBD611A793EA438464B91E749DD8B00416BDFB@blums0017.bluelnk.net>
Message-ID: <4B941DE39A762B478F5265C7187361E37135CE@EPRI17P32003A.csfb.cs-group.com>

Hi,

How can specify a lexical rule to match a range of integers. For example
'0'...'9' is used for digits.

Lets say I want to match any integer from 1 to 12 for valid months, is
there a simple way to do this ? Similarly I want to match a range of
numbers. What is the best way to do this in antlr V3 ?

Thanks
Harsha

==============================================================================
Please access the attached hyperlink for an important electronic communications disclaimer: 

http://www.credit-suisse.com/legal/en/disclaimer_email_ib.html
==============================================================================


From jaluber at gmx.de  Thu Apr 24 09:55:24 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 24 Apr 2008 18:55:24 +0200
Subject: [antlr-interest] Lexer rule for number range matching ?
In-Reply-To: <4B941DE39A762B478F5265C7187361E37135CE@EPRI17P32003A.csfb.cs-group.com>
References: <480E0B8E.5060002@gmail.com>	<40CBD611A793EA438464B91E749DD8B00416BDFB@blums0017.bluelnk.net>
	<4B941DE39A762B478F5265C7187361E37135CE@EPRI17P32003A.csfb.cs-group.com>
Message-ID: <4810BB7C.9000605@gmx.de>

Nagesh, Harsha schrieb:
> Hi,
> 
> How can specify a lexical rule to match a range of integers. For example
> '0'...'9' is used for digits.
> 
> Lets say I want to match any integer from 1 to 12 for valid months, is
> there a simple way to do this ? Similarly I want to match a range of
> numbers. What is the best way to do this in antlr V3 ?

You can use something like that:

MONTH : '1'..'9' | '10' | '11' | '12';

The problem with that rule is, as it has been already pointed out, that 
error messages aren't really insightful to the user.

MONTH : '1'..'9' ('0'..'9')*;

This one allows easier error checking either in the parser or with a 
validating sempred in the lexer like "{IsValidMonth(MONTH.text)}?" 
before the semicolon.

Johannes

From harsha.nagesh at credit-suisse.com  Thu Apr 24 10:52:45 2008
From: harsha.nagesh at credit-suisse.com (Nagesh, Harsha)
Date: Thu, 24 Apr 2008 13:52:45 -0400
Subject: [antlr-interest] RE  Lexer rule for number range matching ?
In-Reply-To: <480E7C00.7000609@4bright.com>
References: <480E3CA6.6060100@4bright.com>
	<480E419A.7050209@4bright.com> <480E6B78.9060005@4bright.com>
	<480E7C00.7000609@4bright.com>
Message-ID: <4B941DE39A762B478F5265C7187361E37135CF@EPRI17P32003A.csfb.cs-group.com>


I tried these suggestions, but I am getting the following warning in
ANTLRWorks when I include this rule

"The following token definitions are unreachable:.."

not sure what is the issue here

Nagesh, Harsha schrieb:
> Hi,
> 
> How can specify a lexical rule to match a range of integers. For
example
> '0'...'9' is used for digits.
> 
> Lets say I want to match any integer from 1 to 12 for valid months, is
> there a simple way to do this ? Similarly I want to match a range of
> numbers. What is the best way to do this in antlr V3 ?

You can use something like that:

MONTH : '1'..'9' | '10' | '11' | '12';

The problem with that rule is, as it has been already pointed out, that 
error messages aren't really insightful to the user.

MONTH : '1'..'9' ('0'..'9')*;

This one allows easier error checking either in the parser or with a 
validating sempred in the lexer like "{IsValidMonth(MONTH.text)}?" 
before the semicolon.

Johannes

==============================================================================
Please access the attached hyperlink for an important electronic communications disclaimer: 

http://www.credit-suisse.com/legal/en/disclaimer_email_ib.html
==============================================================================


From lgcraymer at yahoo.com  Thu Apr 24 11:36:30 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 24 Apr 2008 11:36:30 -0700 (PDT)
Subject: [antlr-interest] Why don't parsers support character ranges?
Message-ID: <723285.89168.qm@web55908.mail.re3.yahoo.com>



----- Original Message ----
> From: Hannes Schmidt <antlr5 at hannesschmidt.net>
> To: Magnus Danielson <magnus at rubidium.dyndns.org>
> Cc: antlr-interest at antlr.org
> Sent: Thursday, April 24, 2008 8:56:38 AM
> Subject: Re: [antlr-interest] Why don't parsers support character ranges?
> 
....
> > I have to disagree with you. As I have addressed this particular problem when
> > using PCCTS (don't ask and I won't tell why) I found that the best method to
> > handle these types of problems was to divide the lexer grammar into groups
> > (this isn't the correct term, but it is easy enought to dig it up).
> > By changing the active lexer group as I progress throught the grammar, I also
> > changes the set of token definitions which can be generated and any inclusion
> > problems as you indicate will be eliminated.
> >
> >  
> Agreed, this is a nifty solution and a viable alternative to what 
> Johannes and Troy have suggested (manually making tokens disjunctive). 
> It's just that this is too much overhead for 80% of all grammars and 80% 
> of all ANTLR users. Eliminate the lexer concept and all of this goes 
> away! For the performance-conscious there should be an option to  front  
> the  parser with a token-generating  lexer, but that should be optional, 
> not the default. I'm guessing that the majority of users would rather 
> start with an intuitive grammar and see if it needs optimizing. The 
> forced lexer/parser separation is a typical case of premature 
> optimization. Don't get me wrong, I love ANTLR, it is far better than 
> anything I have used before, especially because of it's power and 
> flexibility. But that doesn't mean we can't improve it, right?

This is an implementation artifact; unifying parser and lexer cannot fix this.  Ter does not currently use FOLLOW sets in lexers (64K bits is a bit large for a bit set, especially when there might be 100 of them per lexer) but does in parsers.  As a result, lexers are currently less capable than  parsers.  This is fixable,  but it requires more analysis of lexer rules and character sets, and it makes sense to hold off on the additional analysis until after ANTLR 3 is implemented in ANTLR 3.

Once Ter fixes this particular problem, you will have your dream:  you will be able to do everything you wish to in the lexer without ever having to feed it to a parser.  Of course, that assumes that you can solve your problem with minimal additional analysis.  That is not a very good assumption, but experience should teach you that.

If you really want to do this now, I suggest that you use ANTLR 2.  All of the lexing capabilities were present there (excepting hoisting predicates and the need to specify maximum lookahead).  Oddly enough, these capabilities have rarely been exploited:  people learned to partition their problems across multiple translation passes.

--Loring


      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ


From elekis at gmail.com  Thu Apr 24 11:51:52 2008
From: elekis at gmail.com (elekis)
Date: Thu, 24 Apr 2008 20:51:52 +0200
Subject: [antlr-interest] Decision can match input such as ...using multiple
	alternatives: 1, 2
Message-ID: <78316ea80804241151o68fc2ap9251c54445960dda@mail.gmail.com>

hi,
I have a little problem with a rule (that I cleaned)

singlePragma: t1=T_Ident
			(  T_LParent 	( literal | desigElement (T_Comma desigElement)*)
			  	(T_Comma ( literal | desigElement (T_Comma desigElement)*))
			  T_RParent )? T_SemiColon;

I have the followed warning

warning(200): Pyaflplug.g:35:42: Decision can match input such as "T_Comma T_Com
ma" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

any idea to solve that.

thanks

a++
-- 
http://deathboater.blogspot.com/

From dcmailbag-antlr at yahoo.com  Thu Apr 24 15:01:08 2008
From: dcmailbag-antlr at yahoo.com (dcmailbag-antlr at yahoo.com)
Date: Thu, 24 Apr 2008 15:01:08 -0700 (PDT)
Subject: [antlr-interest] Building an interpreter
Message-ID: <302602.451.qm@web52807.mail.re2.yahoo.com>

This a fairly long item regarding using antlr for building interpreters.

I have a situation where I would like to use antlr to build interpeters.  The
examples found do not build interpreters as needed, and I'm hoping someone
can point me to how to do the job.

The problem with the interpreter examples seen is that they require the
ultimate
input stream to the interpreter being constructed be the same stream as the
input to the parser building the interpreter (the token and node streams are
derived from the input stream).

The "Simple tree-based interpreter" (STBI for short) can be used to show the
problem. It is located at

  http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter


The program is first entered followed by the input to that program.  For the
STBI example, the "program" source is

    fact(0) = 1
    fact(n) = fact(n-1)*n
    square(x)=x*x
    catalan(n)=fact(2*n)/square(fact(n))


followed, on the same stream, by the input to the program

    fact(10)
    catalan(10)



Considering a compiled program, the program source is run through the compiler
on one stream, then the compiled program is started and it receives its
input from a different stream. This same needs to be done with the interpreter
-
having to make a new instance of the interpreter for each input expression is
too expensive, and the general problem does not permit feeding all the data as
above with all the output generated at once.  The requirement is to evaluate
something and get a result back before the next item is evaluated.

The following illustrates the concept by modifying the Test2 code from STBI
(please overlook the "you can't do that" detail regarding nodes and go for
understanding the concept)


        ANTLRInputStream input = new ANTLRInputStream(System.in);
        Expr2Lexer lexer = new Expr2Lexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        Expr2Parser parser = new Expr2Parser(tokens);
        CommonTree t  = (CommonTree) parser.prog().getTree();

        CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
        Eval2 evaluator = new Eval2(nodes);

       while(!done) {
          evaluatorprog_ReturnType result;

   	  String evalme = getString();
          result = evaluator.prog(evalme);   /* HERE IS THE ISSUE */
          done = ... ;
       }


Down through "Eval2 evaluator ..." is directly from the STBI example.

While "evalme" is shown as String, it could be any desired appropriate
stream.  The point is that the data stream to the evaluator is different from
the "source code" stream of the evaluator itself.  It is not necessary to
reconstruct the evaluator each iteration - the first one built is reused.

Another case would be a special situation where the invocation is

    result = evaluator.prog();

where there is no input stream, but rather some form of lookup is done.  The
STBI shows this with

    $value = getValue($ID.text);

The while loop shown above would deal with ensuring new values would be
supplied by getValue().  Details of how are not important.

For those wanting a super simplified example of what is being done, the user
would enter a "formula" such as

     2*x*y     (this would be placed on the ANTLRInputStream)

which the interpreter can evaluate, and then the while() loop would iterate
across all values of x and y, with each (x,y) pair's result returned.  The
"done =" calculation would utilize the value of "result".  This example uses
"result = evaluator.prog();" input lookup.

Can anyone point me to an example that shows how to do this?

thanks!


From antlr5 at hannesschmidt.net  Thu Apr 24 16:38:26 2008
From: antlr5 at hannesschmidt.net (Hannes Schmidt)
Date: Thu, 24 Apr 2008 16:38:26 -0700
Subject: [antlr-interest] Why don't parsers support character ranges?
In-Reply-To: <16b7b9ec0804240120x37451128t487e62ae0df1cab0@mail.gmail.com>
References: <480E9BF0.7060006@hannesschmidt.net>	<20080424.034557.280423144696093165.cfmd@bredband.net>
	<16b7b9ec0804240120x37451128t487e62ae0df1cab0@mail.gmail.com>
Message-ID: <481119F2.20102@hannesschmidt.net>

Eamon Nerbonne wrote:
> The suggestion has been made that parsers and lexers need to be 
> separated, or that combining them would be a subject for a thesis.  
> This isn't new work, however: there exist such things, like say...
>
> DParser - Scannerless GLR parser
> With juicy bits like:
> "[...]The grammar can be ambiguous, right or left recursive, have any 
> number of null productions, and because there is no seperate 
> tokenizer, can include whitespace in terminals and have terminals 
> which are prefixes of other terminals.[...]"
> http://dparser.sourceforge.net/
>
> GLR techniques can actually parse ambiguous constructs, which is a 
> boon when it comes to things like C's dangling else.  I'm not an 
> expert, but IIRC these parsers are all descendants of Tomito's GLR 
> parser, which was (almost) capable of parsing ambiguous constructs but 
> contained a few errors (with nullable items and hidden left recursion) 
> and wasn't very efficient on ambiguous grammars.  Newer algorithms 
> have fixed both issues.
>
> I believe scannerless parsing is possible with the a little more well 
> known Elkhound, and a bit of web-searching also revealed meta-environment
> http://www.cwi.nl/htbin/sen1/twiki/bin/view/Meta-Environment, and 
> there's lots more out there.
This is great help, Eamon. I'll digg into these right away. I did some 
search, too, but it didn't lead anywhere. Thank you!

From antlr at mirality.co.nz  Thu Apr 24 19:56:02 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 25 Apr 2008 14:56:02 +1200
Subject: [antlr-interest] Decision can match input such as ...using
 multiple alternatives: 1, 2
In-Reply-To: <78316ea80804241151o68fc2ap9251c54445960dda@mail.gmail.com>
References: <78316ea80804241151o68fc2ap9251c54445960dda@mail.gmail.com>
Message-ID: <20080425025613.B594411ECB4@www.antlr.org>

At 06:51 25/04/2008, elekis wrote:
 >singlePragma: t1=T_Ident
 >			(  T_LParent 	( literal | desigElement (T_Comma 
desigElement)*)
 >			  	(T_Comma ( literal | desigElement (T_Comma 
desigElement)*))
 >			  T_RParent )? T_SemiColon;
 >
 >I have the followed warning
 >
 >warning(200): Pyaflplug.g:35:42: Decision can match input such 
as
 >"T_Comma T_Comma" using multiple alternatives: 1, 2
 >As a result, alternative(s) 2 were disabled for that input

At a guess, 'desigElement' contains a T_Comma, so ANTLR is warning 
you that it's ambiguous with its surroundings.  It's hard to say 
for sure without seeing more of the grammar.

(And you've got a common subexpression there; you probably ought 
to factor it out.)


From antlr at mirality.co.nz  Thu Apr 24 19:58:01 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 25 Apr 2008 14:58:01 +1200
Subject: [antlr-interest] RE  Lexer rule for number range matching ?
In-Reply-To: <4B941DE39A762B478F5265C7187361E37135CF@EPRI17P32003A.csfb.
	cs-group.com>
References: <480E3CA6.6060100@4bright.com> <480E419A.7050209@4bright.com>
	<480E6B78.9060005@4bright.com> <480E7C00.7000609@4bright.com>
	<4B941DE39A762B478F5265C7187361E37135CF@EPRI17P32003A.csfb.cs-group.com>
Message-ID: <20080425025818.E865811ED04@www.antlr.org>

At 05:52 25/04/2008, Nagesh, Harsha wrote:
 >
 >I tried these suggestions, but I am getting the following 
warning
 >in ANTLRWorks when I include this rule
 >
 >"The following token definitions are unreachable:.."

You've probably got another lexer rule that matches sequences of 
digits.  Remember, the lexer is contextless, so if you have other 
possibilities for digit groups you can't do the range-checking in 
the lexer.  You need to make a general-purpose NUMBER rule in the 
lexer and do your range checking in the parser instead.


From jasonzhang2002 at gmail.com  Thu Apr 24 20:26:36 2008
From: jasonzhang2002 at gmail.com (jason zhang)
Date: Fri, 25 Apr 2008 11:26:36 +0800
Subject: [antlr-interest] simple grammar with wildcard
In-Reply-To: <4810062C.8050303@gmail.com>
References: <480F4BC1.9050504@gmail.com>	
	<9b1ada6d0804230830n31d74fdq8667fe7f1c29c4a4@mail.gmail.com>	
	<480F6566.7040103@gmail.com> <480F6993.50403@gmx.de>
	<ebc876d70804231012y7808cdebqb69a7373a0f0488b@mail.gmail.com>
	<4810062C.8050303@gmail.com>
Message-ID: <48114F6C.5050507@gmail.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080425/7c867b54/attachment.html 

From elekis at gmail.com  Thu Apr 24 21:40:23 2008
From: elekis at gmail.com (jabon)
Date: Fri, 25 Apr 2008 06:40:23 +0200
Subject: [antlr-interest] Decision can match input such as ...using
 multiple alternatives: 1, 2
In-Reply-To: <4811484e.0216300a.4673.06d1SMTPIN_ADDED@mx.google.com>
References: <78316ea80804241151o68fc2ap9251c54445960dda@mail.gmail.com>
	<4811484e.0216300a.4673.06d1SMTPIN_ADDED@mx.google.com>
Message-ID: <481160B7.4090906@gmail.com>

hi,
the problem is there:

there is the real grammar:


singlePragma: t1=T_Ident{callback.IdentFromSinglePragma($t1.text);}
            (  T_LParent {callback.BeginLiteralOrDesignFromSinglePragma();}
                  
(t2=literal{callback.FirstLiteralFromSinglePragma($t2.text);}
                  |desig)
                  (T_Comma 
(t3=literal{callback.NextLiteralFromSinglePragma($t3.text);}
                  |desig)
              T_RParent{callback.EndLiteralOrDesignFromSinglePragma();}
            )? T_SemiColon;



desig    :  desigElement (T_Comma desigElement)*;   


desigElement
    : ;

and design element will looks like that  but not yet impl?mented
DesigElement ::= Ident <http://www.raincode.com/rcdoc/yaflrc/Ident.htm> 
[ *'('* { ActualParameter 
<http://www.raincode.com/rcdoc/yaflrc/ActualParameter.htm> } + by *','* 
*')'* ] { Subscript <http://www.raincode.com/rcdoc/yaflrc/Subscript.htm> } *

thanks

A+++


Gavin Lambert a ?crit :
> At 06:51 25/04/2008, elekis wrote:
> >singlePragma: t1=T_Ident
> >            (  T_LParent     ( literal | desigElement (T_Comma 
> desigElement)*)
> >                  (T_Comma ( literal | desigElement (T_Comma 
> desigElement)*))
> >              T_RParent )? T_SemiColon;
> >
> >I have the followed warning
> >
> >warning(200): Pyaflplug.g:35:42: Decision can match input such as
> >"T_Comma T_Comma" using multiple alternatives: 1, 2
> >As a result, alternative(s) 2 were disabled for that input
>
> At a guess, 'desigElement' contains a T_Comma, so ANTLR is warning you 
> that it's ambiguous with its surroundings.  It's hard to say for sure 
> without seeing more of the grammar.
>
> (And you've got a common subexpression there; you probably ought to 
> factor it out.)
>


From hharalambiev at gmail.com  Fri Apr 25 04:57:21 2008
From: hharalambiev at gmail.com (Haralambi Haralambiev)
Date: Fri, 25 Apr 2008 14:57:21 +0300
Subject: [antlr-interest] White spaces within token definition
Message-ID: <aa71f710804250457w6a25787elce1569ac3a3eba3e@mail.gmail.com>

Hello,

I have stumbled upon a problem, that although has some workarounds, has
puzzled me over why it is happening.
(I searched for a similar question, but was unable to find it. I am sorry if
this has been answered somewhere else. If so, please provide me the link.)

Consider the following lexer grammar:
---------------------------------------------------
lexer grammar test;

CMD_EXIT : 'COMMAND EXIT';
ID : ('A'..'Z'|'a'..'z')+;
WhiteSpaces : (' '|'\t')+ {$channel=HIDDEN;};
---------------------------------------------------

Consider that the language that is recognized has many commands with the
syntax "COMMAND <name of the command>", but I am interested only in the exit
command, so I consider "COMMAND EXIT" as a token.
However, I would like
"COMMAND <something else>" to be matched as the sequence of two ID tokens.

With the grammar above, the "COMMAND EXIT" is successfully matched as
a CMD_EXIT token, however "COMMAND XYZ" produces an error "line
1:8 mismatched character 'X' expecting
'E'" and what is left (only the character Z) is matched as ID.

In the generated lexer class, in the mTokes() method I noticed that
the lexer will consider everything that starts with "COMMAND " as the
CMD_EXIT
token.
It just doesn't consider the characters in the token definition, that
were after the white space (i.e. 'E', 'X', 'I' and 'T') during the
recognition.

So, if you could enlighten me on why is this happening, I will be very
grateful!

Best Regards,
Hari
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080425/7289f246/attachment-0001.html 

From jaluber at gmx.de  Fri Apr 25 07:02:28 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 25 Apr 2008 16:02:28 +0200
Subject: [antlr-interest] Basics Compiler Design Book
Message-ID: <4811E474.5010506@gmx.de>

Hi!

I just discovered this link: 
<http://www.diku.dk/hjemmesider/ansatte/torbenm/Basics/> and thought, it 
may be useful for at lest some of the list members.

Johannes

From antlr at deloreyfamily.org  Fri Apr 25 11:45:59 2008
From: antlr at deloreyfamily.org (Dan Delorey)
Date: Fri, 25 Apr 2008 12:45:59 -0600
Subject: [antlr-interest] Building an AST for Java
In-Reply-To: <90d6c0620804221024u117ad2c9s1ecbe508e351cca5@mail.gmail.com>
References: <90d6c0620804191141o1a99ea57ib1da7ba260faf29@mail.gmail.com>
	<20D6CDC7-EA0F-457C-8E12-086E48CF37AF@jacelridge.com>
	<90d6c0620804221024u117ad2c9s1ecbe508e351cca5@mail.gmail.com>
Message-ID: <90d6c0620804251145qd7c8b30x5a1687de3fec2f77@mail.gmail.com>

I just wanted to get one more follow-up on the list in case anyone is
searching on this in the future, then the issue can drop.

After going through John's grammar, I found that my problems were actually
being caused by using ANTLR 3.0.1 and not by anything I was doing. John's
grammar will compile under 3.0.1 with a couple minor tweaks (chaning one
rule that was using mixing rewrite operators and rewrite rules and remove
spaces on rule parameters), but it exhibits the same behavior mine had. That
is, parts of the AST are lost during backtracking without an error being
thrown and without any warning.

So, in summary, (and maybe everyone but me knew this...) if you are building
an AST and parts of the tree simply disappear, it might be because of
3.0.1.Try one of the incremental builds and it may solve your problem.

On Tue, Apr 22, 2008 at 11:24 AM, Dan Delorey <antlr at deloreyfamily.org>
wrote:

> I just wanted to follow up back on the list to thank John and endorse the
> grammar. This does successfully solve the problem I was encountering. I have
> not yet had time to dig in deep enough to figure out why my grammar was
> losing parts of the AST during back tracking and John's is not. I will reply
> again if I figure that out.
>
> I also wanted to make sure we got on the list that this grammar requires
> ANTLR 3.1 beta. I have been able to use it in the bundled mac ANTLRWorks
> version 1.2 beta (after changing to VMOptions in Info.plist to allow more
> heap space...).
>
> Thanks, John!
>
> On Sat, Apr 19, 2008 at 12:56 PM, John Ridgway <john at jacelridge.com>
> wrote:
>
>> I have a version of the Java.g grammar that produces an AST.  It is going
>> to go up on the Antlr web-site soon, but it's not there yet.  You are
>> welcome to use it, with the same licensing restrictions as Antlr itself.
>>  I'll e-mail stuff directly to you in a separate e-mail if you would like.
>>  Just e-mail me privately.  This goes for anyone else who might want such a
>> thing.
>>
>> I actually build the AST and have a tree grammar that outputs Java code.
>>  The combination has successfully parsed and recreated the entire JDK 1.5
>> source tree.
>>
>> Peace
>> - John
>>
>>
>>
>> On Apr 19, 2008, at 2:41 PM, Dan Delorey wrote:
>>
>>  I've been having quite a bit of trouble generating an AST for Java. I
>>> started by trying to modify the Java.g posted by Ter. I have also tried
>>> using the one posted by Dieter Habelitz. In both cases I'm having the same
>>> problem, though.
>>>
>>> That is, I can't seem to modify the grammar so that it doesn't require
>>> backtracking. With backtracking, however, critical (for my purposes) parts
>>> of the AST are missing. For example, the branches that should be generated
>>> by the following code:
>>>
>>> f.getName().length()
>>>
>>> Is incomplete. I can get either the f.getName() function call in the tree
>>> or the length() function call, but not both.
>>>
>>> So far I have tried using rule scopes, global scopes, parameters, return
>>> values, and standard rewrite rules. I'm really confused that this is so hard
>>> for me. Could anyone give me some guidance?
>>>
>>> Thanks,
>>> Dan
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080425/a529a150/attachment.html 

From Gobaan_Raveendran at amis.com  Fri Apr 25 13:37:54 2008
From: Gobaan_Raveendran at amis.com (Gobaan_Raveendran at amis.com)
Date: Fri, 25 Apr 2008 16:37:54 -0400
Subject: [antlr-interest] Python UnBufferedTreeNodeStream
In-Reply-To: <mailman.0.1209150002.8260.antlr-interest@antlr.org>
Message-ID: <OFB643F9BA.00AEEF07-ON85257436.007105E2-85257436.007155A4@amis.com>

Hello Factorial,

I was looking through tree.py in the antlr source and I realized
UnBufferedTreeNodeStream was missing. Is there any reason for this? I am
wondering as I will likely need to implement it in order to bring down the
memory footprint of my program.

Thanks
- Gobi


From siemsen at ucar.edu  Sat Apr 26 00:23:00 2008
From: siemsen at ucar.edu (siemsen at ucar.edu)
Date: Sat, 26 Apr 2008 01:23:00 -0600
Subject: [antlr-interest] passing an argument to a lexer
Message-ID: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B@ucar.edu>

I have a working translator that implements include files using the  
scheme described in the ANTLR Wiki page titled  "How do I implement  
include files?" at http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

It works, but only if the include files are located in the current  
directory.  To run the translator, I have to "cd" to the right  
directory first.  Not good.

I want the translator to look for include files relative to the  
current input file.  It's easy to get the base path of the current  
input file, but I don't know how to get the path into the lexer.  The  
relevant fragment of my "rig" looks like this

		<etc.>
		File inputFile = new File(inputFileName);
		String inputSubDirectory = inputFile.getParent();
		
		// Open an input file stream from the given file name
		CharStream input = new ANTLRFileStream(inputFileName);
		// Create a lexer that feeds from the input file stream
		TranslateCIMLexer lexer = new TranslateCIMLexer(input);
		// Create a stream of tokens fed by the lexer
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		<etc.>

How can I pass inputSubDirectory into TranslateCIMLexer so that it's  
available in lexer rule actions?

I hoped that calling input.getSourceName() from the relevant lexer  
rule action might give the full path to the file, but the compiler  
gave me

/Users/siemsen/TranslateCIM/target/generated-sources/antlr/ 
TranslateCIMLexer.java:[1449,82] cannot find symbol
symbol  : method getSourceName()
location: interface org.antlr.runtime.CharStream

-- Pete

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/f8b51285/attachment.html 

From jaluber at gmx.de  Sat Apr 26 03:26:51 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 26 Apr 2008 12:26:51 +0200
Subject: [antlr-interest] passing an argument to a lexer
In-Reply-To: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B@ucar.edu>
References: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B@ucar.edu>
Message-ID: <4813036B.10008@gmx.de>

siemsen at ucar.edu schrieb:
> I want the translator to look for include files relative to the current 
> input file.  It's easy to get the base path of the current input file, 
> but I don't know how to get the path into the lexer.  The relevant 
> fragment of my "rig" looks like this

It is pretty simple. Add in the lexer grammar

@members {

private String path;

public void setPath(String path) {
	this.path = path;
}
}

Then you have to change your driver to use this setter and you lexer to 
use the path member field.

Johannes

From antlr at mirality.co.nz  Sat Apr 26 03:33:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 26 Apr 2008 22:33:04 +1200
Subject: [antlr-interest] passing an argument to a lexer
In-Reply-To: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B@ucar.edu>
References: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B@ucar.edu>
Message-ID: <20080426103316.A107D11EAB2@www.antlr.org>

At 19:23 26/04/2008, siemsen at ucar.edu wrote:
>I hoped that calling input.getSourceName() from the relevant 
>lexer rule action might give the full path to the file, but the 
>compiler gave me
>
>/Users/siemsen/TranslateCIM/target/generated-sources/antlr/TranslateCIMLexer.java:[1449,82] 
>cannot find symbol
>symbol  : method getSourceName()
>location: interface org.antlr.runtime.CharStream

getSourceName isn't defined on CharStream, it's on 
ANTLRFileStream.  You can get to it with a cast, if you're 
absolutely certain you're only going to be giving file streams to 
the lexer:

... ((ANTLRFileStream)input).getSourceName() ...

(Actually, it appears to be *defined* on ANTLRStringStream, but I 
can't see how this would give it a useful value.)

Another (possibly better) option is to use a @members (or 
@lexer::members) section to create an additional field/property in 
your lexer class where you can store the base directory 
name.  This is potentially more flexible, since you can extend it 
later to search multiple folders (for example).  It also doesn't 
limit you to using file streams, which is useful when unit-testing 
the grammar.


From gaochunguang at 163.com  Sat Apr 26 06:26:37 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Sat, 26 Apr 2008 21:26:37 +0800
Subject: [antlr-interest] how to pronounce "antlr"?
Message-ID: <001801c8a7a1$27e6ceb0$6501a8c0@alien>

I have used antlr for one year. but how to pronounce "antlr"? :)

thank.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/c7978ad9/attachment.html 

From dmitry.gusev at gmail.com  Sat Apr 26 06:50:26 2008
From: dmitry.gusev at gmail.com (Dmitry Gusev)
Date: Sat, 26 Apr 2008 17:50:26 +0400
Subject: [antlr-interest] how to pronounce "antlr"?
In-Reply-To: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
References: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
Message-ID: <37a147f40804260650w3abc3ae4r2e020b6311419d1a@mail.gmail.com>

[antlr] ? :)

On Sat, Apr 26, 2008 at 5:26 PM, gaochunguang <gaochunguang at 163.com> wrote:

>  I have used antlr for one year. but how to pronounce "antlr"? :)
>
> thank.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/67a71b96/attachment.html 

From rschulz at sonic.net  Sat Apr 26 07:04:15 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 26 Apr 2008 07:04:15 -0700
Subject: [antlr-interest] how to pronounce "antlr"?
In-Reply-To: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
References: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
Message-ID: <200804260704.15302.rschulz@sonic.net>

On Saturday 26 April 2008 06:26, gaochunguang wrote:
> I have used antlr for one year. but how to pronounce "antlr"? :)

As if there were an 'e' between the 'l' and the 'r': "antler."

Or any way you want, since few of us ever run into each other to be 
heard pronouncing it wrong...

I have a colleague who prounounces UML "ooml" and XOR "zor."

Then there's URL, which goes both way, letters or "earl." Or GIF, which 
can be either "giff" or "jiff."

And just yesterday I heard a professor talking on the BBC pronouncing 
Linux with a hard 'i'. She said it several times, so wasn't a slip. I 
though we left that one behind years ago.


> thank.


RRS

From elekis at gmail.com  Sat Apr 26 12:59:42 2008
From: elekis at gmail.com (jabon)
Date: Sat, 26 Apr 2008 21:59:42 +0200
Subject: [antlr-interest] how to call the getErrorMessage  method
Message-ID: <481389AE.60003@gmail.com>

hi all,
always try to get error from the parser, I overided the reporterror like 
that


     public void reportError (RecognitionException re){
              throw new RuntimeException("Bailing out!",re);
         }

    
other way, I have the follow catch

 catch(RuntimeException e){
            System.err.println("runtimeException ERROR:\n");
            System.exit(1);
        }

after a little research, I found that I have to override the followed m?thod
but how to call this method , I havent the tokenName.

thanks

a++

         public String getErrorMessage(RecognitionException e,String[] 
tokenNames)
    {
        List stack = getRuleInvocationStack(e, this.getClass().getName());
        String msg = null;
        if ( e instanceof NoViableAltException ) {
            NoViableAltException nvae = (NoViableAltException)e;
            msg = " no viable alt; token="+e.token+
            " (decision="+nvae.decisionNumber+
            " state "+nvae.stateNumber+")"+
            " decision=<<"+nvae.grammarDecisionDescription+">>";
        }
        else     {
            msg = super.getErrorMessage(e, tokenNames);
            }
        return stack+" "+msg;
    }
    
    public String getTokenErrorDisplay(Token t) {
        return t.toString();
    }

From adam.rpconnelly at googlemail.com  Sat Apr 26 13:59:55 2008
From: adam.rpconnelly at googlemail.com (Adam Connelly)
Date: Sat, 26 Apr 2008 21:59:55 +0100
Subject: [antlr-interest] how to call the getErrorMessage method
In-Reply-To: <481389AE.60003@gmail.com>
References: <481389AE.60003@gmail.com>
Message-ID: <b9a39b060804261359p5a489ab0s3d62ef4a563c2f8@mail.gmail.com>

The tokenNames array is stored in your generated parser as
public static string[] tokenNames = ...;

So if your parser class is called MyParser, you can do

MyParser parser = new MyParser();
parser.getErrorMessage(e, MyParser.tokenNames);

Or something like that.

Adam

2008/4/26 jabon <elekis at gmail.com>:

> hi all,
> always try to get error from the parser, I overided the reporterror like
> that
>
>
>    public void reportError (RecognitionException re){
>             throw new RuntimeException("Bailing out!",re);
>        }
>
>   other way, I have the follow catch
>
> catch(RuntimeException e){
>           System.err.println("runtimeException ERROR:\n");
>           System.exit(1);
>       }
>
> after a little research, I found that I have to override the followed
> m?thod
> but how to call this method , I havent the tokenName.
>
> thanks
>
> a++
>
>        public String getErrorMessage(RecognitionException e,String[]
> tokenNames)
>   {
>       List stack = getRuleInvocationStack(e, this.getClass().getName());
>       String msg = null;
>       if ( e instanceof NoViableAltException ) {
>           NoViableAltException nvae = (NoViableAltException)e;
>           msg = " no viable alt; token="+e.token+
>           " (decision="+nvae.decisionNumber+
>           " state "+nvae.stateNumber+")"+
>           " decision=<<"+nvae.grammarDecisionDescription+">>";
>       }
>       else     {
>           msg = super.getErrorMessage(e, tokenNames);
>           }
>       return stack+" "+msg;
>   }
>     public String getTokenErrorDisplay(Token t) {
>       return t.toString();
>   }
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/b7bcf159/attachment.html 

From rdclark at gmail.com  Sat Apr 26 19:04:40 2008
From: rdclark at gmail.com (Richard Clark)
Date: Sat, 26 Apr 2008 19:04:40 -0700
Subject: [antlr-interest] Building an interpreter
In-Reply-To: <302602.451.qm@web52807.mail.re2.yahoo.com>
References: <302602.451.qm@web52807.mail.re2.yahoo.com>
Message-ID: <d3992d900804261904jf8b93a2o560a0b8d43400e3@mail.gmail.com>

On Thu, Apr 24, 2008 at 3:01 PM,  <dcmailbag-antlr at yahoo.com> wrote:

>  The problem with the interpreter examples seen is that they require the
>  input stream to the interpreter being constructed be the same stream as the
>  input to the parser building the interpreter (the token and node streams are
>  derived from the input stream).

I'd tackle this by writing an input adaptor that lets you switch its
input stream or works from multiple input streams in a row. You could
easily pick up the source for ANTLRInputStream and alter it.

The only tricky part is knowing when to signal EOF to the parser. If
you had a "definition" stream and a "execution" stream, EOF on the
first could tell the input adaptor to switch to the second and EOF on
the second would be passed through to the parser.

I hope this gives you enough to go on.

 ...Richard

From siemsen at ucar.edu  Sat Apr 26 23:00:54 2008
From: siemsen at ucar.edu (siemsen at ucar.edu)
Date: Sun, 27 Apr 2008 00:00:54 -0600
Subject: [antlr-interest] passing an argument to a lexer
In-Reply-To: <20080426103317.6A6EE309C005@nscan2.ucar.edu>
References: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B@ucar.edu>
	<20080426103317.6A6EE309C005@nscan2.ucar.edu>
Message-ID: <94525E2B-C6BA-43E5-B3CE-548E6C12E55B@ucar.edu>

Thanks, Gavin and Johannes.  The cast helped.  My lexer error messages  
now contain the current file name.  Very nice!

-- Pete


On Apr 26, 2008, at 4:33 AM, Gavin Lambert wrote:

> At 19:23 26/04/2008, siemsen at ucar.edu wrote:
>> I hoped that calling input.getSourceName() from the relevant lexer  
>> rule action might give the full path to the file, but the compiler  
>> gave me
>>
>> /Users/siemsen/TranslateCIM/target/generated-sources/antlr/ 
>> TranslateCIMLexer.java:[1449,82] cannot find symbol
>> symbol  : method getSourceName()
>> location: interface org.antlr.runtime.CharStream
>
> getSourceName isn't defined on CharStream, it's on ANTLRFileStream.   
> You can get to it with a cast, if you're absolutely certain you're  
> only going to be giving file streams to the lexer:
>
> ... ((ANTLRFileStream)input).getSourceName() ...
>
> (Actually, it appears to be *defined* on ANTLRStringStream, but I  
> can't see how this would give it a useful value.)
>
> Another (possibly better) option is to use a @members (or  
> @lexer::members) section to create an additional field/property in  
> your lexer class where you can store the base directory name.  This  
> is potentially more flexible, since you can extend it later to  
> search multiple folders (for example).  It also doesn't limit you to  
> using file streams, which is useful when unit-testing the grammar.
>


From gaochunguang at 163.com  Sun Apr 27 01:14:17 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Sun, 27 Apr 2008 16:14:17 +0800
Subject: [antlr-interest] antlr-interest Digest, Vol 41, Issue 98
References: <mailman.1.1209236401.8026.antlr-interest@antlr.org>
Message-ID: <000901c8a83e$b0834210$6501a8c0@alien>

understand. thank you.
----- Original Message ----- 
From: <antlr-interest-request at antlr.org>
To: <antlr-interest at antlr.org>
Sent: Sunday, April 27, 2008 3:00 AM
Subject: antlr-interest Digest, Vol 41, Issue 98


> Send antlr-interest mailing list submissions to
> antlr-interest at antlr.org
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> antlr-interest-request at antlr.org
> 
> You can reach the person managing the list at
> antlr-interest-owner at antlr.org
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
> 
> 
> Today's Topics:
> 
>   1. Python UnBufferedTreeNodeStream (Gobaan_Raveendran at amis.com)
>   2. passing an argument to a lexer (siemsen at ucar.edu)
>   3. Re: passing an argument to a lexer (Johannes Luber)
>   4. Re: passing an argument to a lexer (Gavin Lambert)
>   5. how to pronounce "antlr"? (gaochunguang)
>   6. Re: how to pronounce "antlr"? (Dmitry Gusev)
>   7. Re: how to pronounce "antlr"? (Randall R Schulz)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Fri, 25 Apr 2008 16:37:54 -0400
> From: Gobaan_Raveendran at amis.com
> Subject: [antlr-interest] Python UnBufferedTreeNodeStream
> To: antlr-interest at antlr.org
> Message-ID:
> <OFB643F9BA.00AEEF07-ON85257436.007105E2-85257436.007155A4 at amis.com>
> Content-Type: text/plain; charset=US-ASCII
> 
> Hello Factorial,
> 
> I was looking through tree.py in the antlr source and I realized
> UnBufferedTreeNodeStream was missing. Is there any reason for this? I am
> wondering as I will likely need to implement it in order to bring down the
> memory footprint of my program.
> 
> Thanks
> - Gobi
> 
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Sat, 26 Apr 2008 01:23:00 -0600
> From: siemsen at ucar.edu
> Subject: [antlr-interest] passing an argument to a lexer
> To: antlr-interest at antlr.org
> Message-ID: <4840B7B7-5FDB-49EC-8B09-BE9A82B8777B at ucar.edu>
> Content-Type: text/plain; charset="us-ascii"
> 
> I have a working translator that implements include files using the  
> scheme described in the ANTLR Wiki page titled  "How do I implement  
> include files?" at http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
> 
> It works, but only if the include files are located in the current  
> directory.  To run the translator, I have to "cd" to the right  
> directory first.  Not good.
> 
> I want the translator to look for include files relative to the  
> current input file.  It's easy to get the base path of the current  
> input file, but I don't know how to get the path into the lexer.  The  
> relevant fragment of my "rig" looks like this
> 
> <etc.>
> File inputFile = new File(inputFileName);
> String inputSubDirectory = inputFile.getParent();
> 
> // Open an input file stream from the given file name
> CharStream input = new ANTLRFileStream(inputFileName);
> // Create a lexer that feeds from the input file stream
> TranslateCIMLexer lexer = new TranslateCIMLexer(input);
> // Create a stream of tokens fed by the lexer
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> <etc.>
> 
> How can I pass inputSubDirectory into TranslateCIMLexer so that it's  
> available in lexer rule actions?
> 
> I hoped that calling input.getSourceName() from the relevant lexer  
> rule action might give the full path to the file, but the compiler  
> gave me
> 
> /Users/siemsen/TranslateCIM/target/generated-sources/antlr/ 
> TranslateCIMLexer.java:[1449,82] cannot find symbol
> symbol  : method getSourceName()
> location: interface org.antlr.runtime.CharStream
> 
> -- Pete
> 
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/f8b51285/attachment-0001.html 
> 
> ------------------------------
> 
> Message: 3
> Date: Sat, 26 Apr 2008 12:26:51 +0200
> From: Johannes Luber <jaluber at gmx.de>
> Subject: Re: [antlr-interest] passing an argument to a lexer
> To: siemsen at ucar.edu
> Cc: antlr-interest at antlr.org
> Message-ID: <4813036B.10008 at gmx.de>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> 
> siemsen at ucar.edu schrieb:
>> I want the translator to look for include files relative to the current 
>> input file.  It's easy to get the base path of the current input file, 
>> but I don't know how to get the path into the lexer.  The relevant 
>> fragment of my "rig" looks like this
> 
> It is pretty simple. Add in the lexer grammar
> 
> @members {
> 
> private String path;
> 
> public void setPath(String path) {
> this.path = path;
> }
> }
> 
> Then you have to change your driver to use this setter and you lexer to 
> use the path member field.
> 
> Johannes
> 
> 
> ------------------------------
> 
> Message: 4
> Date: Sat, 26 Apr 2008 22:33:04 +1200
> From: Gavin Lambert <antlr at mirality.co.nz>
> Subject: Re: [antlr-interest] passing an argument to a lexer
> To: siemsen at ucar.edu,antlr-interest at antlr.org
> Message-ID: <20080426103316.A107D11EAB2 at www.antlr.org>
> Content-Type: text/plain; charset="us-ascii"; format=flowed
> 
> At 19:23 26/04/2008, siemsen at ucar.edu wrote:
>>I hoped that calling input.getSourceName() from the relevant 
>>lexer rule action might give the full path to the file, but the 
>>compiler gave me
>>
>>/Users/siemsen/TranslateCIM/target/generated-sources/antlr/TranslateCIMLexer.java:[1449,82] 
>>cannot find symbol
>>symbol  : method getSourceName()
>>location: interface org.antlr.runtime.CharStream
> 
> getSourceName isn't defined on CharStream, it's on 
> ANTLRFileStream.  You can get to it with a cast, if you're 
> absolutely certain you're only going to be giving file streams to 
> the lexer:
> 
> ... ((ANTLRFileStream)input).getSourceName() ...
> 
> (Actually, it appears to be *defined* on ANTLRStringStream, but I 
> can't see how this would give it a useful value.)
> 
> Another (possibly better) option is to use a @members (or 
> @lexer::members) section to create an additional field/property in 
> your lexer class where you can store the base directory 
> name.  This is potentially more flexible, since you can extend it 
> later to search multiple folders (for example).  It also doesn't 
> limit you to using file streams, which is useful when unit-testing 
> the grammar.
> 
> 
> 
> ------------------------------
> 
> Message: 5
> Date: Sat, 26 Apr 2008 21:26:37 +0800
> From: "gaochunguang" <gaochunguang at 163.com>
> Subject: [antlr-interest] how to pronounce "antlr"?
> To: <antlr-interest at antlr.org>
> Message-ID: <001801c8a7a1$27e6ceb0$6501a8c0 at alien>
> Content-Type: text/plain; charset="gb2312"
> 
> I have used antlr for one year. but how to pronounce "antlr"? :)
> 
> thank.
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/c7978ad9/attachment-0001.html 
> 
> ------------------------------
> 
> Message: 6
> Date: Sat, 26 Apr 2008 17:50:26 +0400
> From: "Dmitry Gusev" <dmitry.gusev at gmail.com>
> Subject: Re: [antlr-interest] how to pronounce "antlr"?
> To: gaochunguang <gaochunguang at 163.com>
> Cc: antlr-interest at antlr.org
> Message-ID:
> <37a147f40804260650w3abc3ae4r2e020b6311419d1a at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> [antlr] ? :)
> 
> On Sat, Apr 26, 2008 at 5:26 PM, gaochunguang <gaochunguang at 163.com> wrote:
> 
>>  I have used antlr for one year. but how to pronounce "antlr"? :)
>>
>> thank.
>>
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080426/67a71b96/attachment-0001.html 
> 
> ------------------------------
> 
> Message: 7
> Date: Sat, 26 Apr 2008 07:04:15 -0700
> From: Randall R Schulz <rschulz at sonic.net>
> Subject: Re: [antlr-interest] how to pronounce "antlr"?
> To: antlr-interest at antlr.org
> Message-ID: <200804260704.15302.rschulz at sonic.net>
> Content-Type: text/plain;  charset="utf-8"
> 
> On Saturday 26 April 2008 06:26, gaochunguang wrote:
>> I have used antlr for one year. but how to pronounce "antlr"? :)
> 
> As if there were an 'e' between the 'l' and the 'r': "antler."
> 
> Or any way you want, since few of us ever run into each other to be 
> heard pronouncing it wrong...
> 
> I have a colleague who prounounces UML "ooml" and XOR "zor."
> 
> Then there's URL, which goes both way, letters or "earl." Or GIF, which 
> can be either "giff" or "jiff."
> 
> And just yesterday I heard a professor talking on the BBC pronouncing 
> Linux with a hard 'i'. She said it several times, so wasn't a slip. I 
> though we left that one behind years ago.
> 
> 
>> thank.
> 
> 
> RRS
> 
> 
> ------------------------------
> 
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
> 
> 
> End of antlr-interest Digest, Vol 41, Issue 98
> **********************************************

From jaluber at gmx.de  Sun Apr 27 06:51:21 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 27 Apr 2008 15:51:21 +0200
Subject: [antlr-interest] how to pronounce "antlr"?
In-Reply-To: <200804260704.15302.rschulz@sonic.net>
References: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
	<200804260704.15302.rschulz@sonic.net>
Message-ID: <481484D9.7060406@gmx.de>

Randall R Schulz schrieb:
  > And just yesterday I heard a professor talking on the BBC pronouncing
> Linux with a hard 'i'. She said it several times, so wasn't a slip. I 
> though we left that one behind years ago.

A hard 'i'? What is that? Like 'ea' in 'easy'? Or like 'eye'? And what 
is the correct way to pronounce Linux? In Germany people say "Leanoocks".

Johannes

From rschulz at sonic.net  Sun Apr 27 06:58:32 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 27 Apr 2008 06:58:32 -0700
Subject: [antlr-interest] how to pronounce "antlr"?
In-Reply-To: <481484D9.7060406@gmx.de>
References: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
	<200804260704.15302.rschulz@sonic.net> <481484D9.7060406@gmx.de>
Message-ID: <200804270658.33049.rschulz@sonic.net>

On Sunday 27 April 2008 06:51, Johannes Luber wrote:
> Randall R Schulz schrieb:
>   > And just yesterday I heard a professor talking on the BBC
>   > pronouncing
> >
> > Linux with a hard 'i'. She said it several times, so wasn't a slip.
> > I though we left that one behind years ago.
>
> A hard 'i'? What is that? Like 'ea' in 'easy'? Or like 'eye'? And
> what is the correct way to pronounce Linux? In Germany people say
> "Leanoocks".

A hard 'i' is like the one in "like" or "wipe" or "nice." (It is 
actually a diphthong?two distinct vowels merged into a single vowel 
sound.)

There used to be an audio file out on the Web with Linus himself 
pronouncing Linux.

Naturally, pronunciation will vary from place to place, but I think only 
the uninitiated will pronounce Linux with a hard 'i'.


> Johannes


Randall Schulz

From lefevrol at yahoo.com  Sun Apr 27 08:18:23 2008
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Sun, 27 Apr 2008 17:18:23 +0200
Subject: [antlr-interest] how to pronounce "antlr"?
In-Reply-To: <200804260704.15302.rschulz@sonic.net>
References: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
	<200804260704.15302.rschulz@sonic.net>
Message-ID: <fv25g6$saj$1@ger.gmane.org>

Randall R Schulz wrote:
> On Saturday 26 April 2008 06:26, gaochunguang wrote:
>> I have used antlr for one year. but how to pronounce "antlr"? :)
> 
> As if there were an 'e' between the 'l' and the 'r': "antler."

Indeed from the funny faces the two conspirators are making in their 
pictures on the ANTLR web site it is pretty clear that this must be the 
intended pronunciation. Most non-native speakers are probably missing the 
pun, though.

-- O.L.


From bryan.haber at gmail.com  Sun Apr 27 11:51:50 2008
From: bryan.haber at gmail.com (Bryan H. Haber)
Date: Sun, 27 Apr 2008 11:51:50 -0700
Subject: [antlr-interest] Creating a lexer that returns a token for bad
	characters
Message-ID: <4814cb4e.12da600a.561b.6f62@mx.google.com>

Hi,

 

I'm trying to create a lexer that will return a token for invalid
characters.  For example, if you have a this:

 

INT : 'int';

WHITESPACE : (' ')+;

 

And the input is 'int   iint'.  I would want a token stream of INT('int'),
WHITESPACE('   ') and BAD('iint').  I just got the ANTLR book, but is such a
thing possible?  It looks like I would have to create a new nextToken()
method that tracks the start of the bad character, keeps consuming until it
hits a valid token.  I would then rollback that valid token and create a bad
token for part recorded.  Is there a better way to do this?  Any help would
be appreciated, thanks.

 

-- bryan

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080427/9f2cdacf/attachment.html 

From Austin_Hastings at Yahoo.com  Sun Apr 27 12:43:02 2008
From: Austin_Hastings at Yahoo.com (Austin Hastings)
Date: Sun, 27 Apr 2008 15:43:02 -0400
Subject: [antlr-interest] how to pronounce "antlr"?
In-Reply-To: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
References: <001801c8a7a1$27e6ceb0$6501a8c0@alien>
Message-ID: <4814D746.1040001@Yahoo.com>

In a fit of over-achieving, I have emailed you (separately) a SWF file
with me reading aloud the first paragraph of the ANTLR.org website. Drag
and drop it into firefox, or do something appropriate in IE.

=Austin


gaochunguang wrote:
> I have used antlr for one year. but how to pronounce "antlr"? :)
> thank.


From antlr at mirality.co.nz  Sun Apr 27 12:54:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 28 Apr 2008 07:54:19 +1200
Subject: [antlr-interest] Creating a lexer that returns a token for bad
 characters
In-Reply-To: <4814cb4e.12da600a.561b.6f62@mx.google.com>
References: <4814cb4e.12da600a.561b.6f62@mx.google.com>
Message-ID: <20080427195438.5D9F911ECBC@www.antlr.org>

At 06:51 28/04/2008, Bryan H. Haber wrote:
>INT : 'int';
>WHITESPACE : (' ')+;
>
>And the input is 'int   iint'.  I would want a token stream of 
>INT('int'), WHITESPACE('   ') and BAD('iint').  I just got the 
>ANTLR book, but is such a thing possible?  It looks like I would 
>have to create a new nextToken() method that tracks the start of 
>the bad character, keeps consuming until it hits a valid 
>token.  I would then rollback that valid token and create a bad 
>token for part recorded.  Is there a better way to do this?  Any 
>help would be appreciated, thanks.

Try adding this as the last lexer rule:

   BAD: .+;

Though I *think* this won't do exactly what you want since it 
won't use whitespace as a delimiter; you should end up with 
INT('int'), WHITESPACE('   '), BAD('i'), INT('int').  I think.

Another option is just to add an ID rule for identifiers; then 
'iint' will match as an identifier and you can decide whether it's 
good or bad when it reaches the parser.  (This one will be 
whitespace delimited.)


From bryan.haber at gmail.com  Sun Apr 27 13:24:50 2008
From: bryan.haber at gmail.com (Bryan H. Haber)
Date: Sun, 27 Apr 2008 13:24:50 -0700
Subject: [antlr-interest] Creating a lexer that returns a token for bad
	characters
In-Reply-To: <4814d9ff.07eb300a.3993.5ec2SMTPIN_ADDED@mx.google.com>
References: <4814cb4e.12da600a.561b.6f62@mx.google.com>
	<4814d9ff.07eb300a.3993.5ec2SMTPIN_ADDED@mx.google.com>
Message-ID: <4814e115.1498600a.4b7a.ffff8ae2@mx.google.com>

Ah, I hadn't thought of that.  Since I do need to recognize identifiers,
'iint' isn't actually a bad token, it's just not a keyword.  Thanks Gavin,
I'll try this out.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Sunday, April 27, 2008 12:54 PM
To: Bryan H. Haber; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Creating a lexer that returns a token for bad
characters

At 06:51 28/04/2008, Bryan H. Haber wrote:
>INT : 'int';
>WHITESPACE : (' ')+;
>
>And the input is 'int   iint'.  I would want a token stream of 
>INT('int'), WHITESPACE('   ') and BAD('iint').  I just got the 
>ANTLR book, but is such a thing possible?  It looks like I would 
>have to create a new nextToken() method that tracks the start of 
>the bad character, keeps consuming until it hits a valid 
>token.  I would then rollback that valid token and create a bad 
>token for part recorded.  Is there a better way to do this?  Any 
>help would be appreciated, thanks.

Try adding this as the last lexer rule:

   BAD: .+;

Though I *think* this won't do exactly what you want since it 
won't use whitespace as a delimiter; you should end up with 
INT('int'), WHITESPACE('   '), BAD('i'), INT('int').  I think.

Another option is just to add an ID rule for identifiers; then 
'iint' will match as an identifier and you can decide whether it's 
good or bad when it reaches the parser.  (This one will be 
whitespace delimited.)


From lgcraymer at yahoo.com  Sun Apr 27 14:31:01 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 27 Apr 2008 14:31:01 -0700 (PDT)
Subject: [antlr-interest] how to pronounce "antlr"?
Message-ID: <869355.19791.qm@web55910.mail.re3.yahoo.com>

For Linux pronunciation, see
http://www.youtube.com/watch?v=5IfHm6R5le0

--Loring

----- Original Message ----
> From: Johannes Luber <jaluber at gmx.de>
> To: Randall R Schulz <rschulz at sonic.net>
> Cc: antlr-interest at antlr.org
> Sent: Sunday, April 27, 2008 6:51:21 AM
> Subject: Re: [antlr-interest] how to pronounce "antlr"?
> 
> Randall R Schulz schrieb:
>   > And just yesterday I heard a professor talking on the BBC pronouncing
> > Linux with a hard 'i'. She said it several times, so wasn't a slip. I 
> > though we left that one behind years ago.
> 
> A hard 'i'? What is that? Like 'ea' in 'easy'? Or like 'eye'? And what 
> is the correct way to pronounce Linux? In Germany people say "Leanoocks".
> 
> Johannes



      ____________________________________________________________________________________
Be a better friend, newshound, and 
know-it-all with Yahoo! Mobile.  Try it now.  http://mobile.yahoo.com/;_ylt=Ahu06i62sR8HDtDypao8Wcj9tAcJ


From belayda at gmail.com  Sun Apr 27 15:12:29 2008
From: belayda at gmail.com (Bernardo Elayda)
Date: Sun, 27 Apr 2008 15:12:29 -0700
Subject: [antlr-interest] Use of index attribute in tree gramar
Message-ID: <3e5ed32f0804271512n6eb57f88ia2a94556a77bbb9e@mail.gmail.com>

Hi!

Shouldn't this rule which uses the token attribute 'index' result in
compilable code in Java:

expression : ^(p='+' expression expression)
                { $statement::plus.add( $p.token.index); }
                | NUMBER
                | IDENTIFIER
                ;


When the above code is compiled with javac , javac complains that index
can't be found.  Technically, that's true since 'index' is protected in the
CommonToken class. The workaround to this problem is to use
$p.token.getTokenIndex().  Is that a feature?  To be consistant with other
places I've used token attributes, I expected $p.token.index to work.

thx in advance!
-Bernardo Elayda
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080427/a78f40eb/attachment.html 

From neil.bacon at gmail.com  Sun Apr 27 21:25:11 2008
From: neil.bacon at gmail.com (Neil Bacon)
Date: Mon, 28 Apr 2008 14:25:11 +1000
Subject: [antlr-interest] OutOfMemory parsing large input
In-Reply-To: <1cadba400804272117k744e2df3v323654ba8b0c95db@mail.gmail.com>
References: <1cadba400804272117k744e2df3v323654ba8b0c95db@mail.gmail.com>
Message-ID: <1cadba400804272125k5d82b839u5b37faabc2e3a957@mail.gmail.com>

Hi,
I've been attempting to parse a large repetitive data file with Antlr,
but have found a few areas where it seems to buffer up data way ahead
of what is necessary to do the job. I am about to break up the input
outside of antlr to work around this unless anyone can offer a better
idea.
Antlr v3 is great, but this is an issue I didn't have with Antlr v2.

Issues:
1. First the ANTLR*Stream classes load all the input at once.
2. Then, when the first parser rule needs a lexer token, the lexer
appears to be tokenizing all the input
   (certainly much more than is required to satisfy the current parser
rule) and running out of memory.

I guess I could make my own Stream implementation to address 1. Is
there any way to address 2?

Please see below for a very simple grammar to demonstrate the issue
and a stack trace.
The test data is 12Mb of lower case text.

Regards,
    Neil.

Simple test grammar:

list : head body*;
head : LINE NEWLINE;
body : LINE NEWLINE;
LINE : ('a'..'z'|' ')*;
NEWLINE : '\r'? '\n';

java.lang.OutOfMemoryError: Java heap space
    at org.antlr.runtime.Lexer.emit(Lexer.java:161)
    at org.antlr.runtime.Lexer.nextToken(Lexer.java:111)
    at org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:119)
    at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
    at org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
    at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:89)
    at org.cambia.sequence.st25.antlr.AParser.head(AParser.java:90)
    at org.cambia.sequence.st25.antlr.AParser.list(AParser.java:37)

From phulsmeijer at xebic.com  Sun Apr 27 23:37:56 2008
From: phulsmeijer at xebic.com (Patrick Hulsmeijer)
Date: Mon, 28 Apr 2008 08:37:56 +0200
Subject: [antlr-interest] OutOfMemory parsing large input
In-Reply-To: <1cadba400804272125k5d82b839u5b37faabc2e3a957@mail.gmail.com>
References: <1cadba400804272117k744e2df3v323654ba8b0c95db@mail.gmail.com>
	<1cadba400804272125k5d82b839u5b37faabc2e3a957@mail.gmail.com>
Message-ID: <C3525AF49F7D374D8E4D3C46ED4BC621168999@srvxdcex.xebic.com>

Neil,

The CommonTokenStream will tokenize the complete input stream and cache the tokens in a list when you ask it for the first token. So you will have to replace that one as well.

Gr, patrick.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Neil Bacon
Sent: maandag 28 april 2008 6:25
To: antlr-interest at antlr.org
Subject: [antlr-interest] OutOfMemory parsing large input

Hi,
I've been attempting to parse a large repetitive data file with Antlr,
but have found a few areas where it seems to buffer up data way ahead
of what is necessary to do the job. I am about to break up the input
outside of antlr to work around this unless anyone can offer a better
idea.
Antlr v3 is great, but this is an issue I didn't have with Antlr v2.

Issues:
1. First the ANTLR*Stream classes load all the input at once.
2. Then, when the first parser rule needs a lexer token, the lexer
appears to be tokenizing all the input
   (certainly much more than is required to satisfy the current parser
rule) and running out of memory.

I guess I could make my own Stream implementation to address 1. Is
there any way to address 2?

Please see below for a very simple grammar to demonstrate the issue
and a stack trace.
The test data is 12Mb of lower case text.

Regards,
    Neil.

Simple test grammar:

list : head body*;
head : LINE NEWLINE;
body : LINE NEWLINE;
LINE : ('a'..'z'|' ')*;
NEWLINE : '\r'? '\n';

java.lang.OutOfMemoryError: Java heap space
    at org.antlr.runtime.Lexer.emit(Lexer.java:161)
    at org.antlr.runtime.Lexer.nextToken(Lexer.java:111)
    at org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:119)
    at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
    at org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
    at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:89)
    at org.cambia.sequence.st25.antlr.AParser.head(AParser.java:90)
    at org.cambia.sequence.st25.antlr.AParser.list(AParser.java:37)

From felix_do at web.de  Mon Apr 28 01:13:39 2008
From: felix_do at web.de (Felix Dorner)
Date: Mon, 28 Apr 2008 10:13:39 +0200
Subject: [antlr-interest] 3.1: reference to undefined rule attribute in a
 comment is treated as an error
Message-ID: <48158733.30102@web.de>

Hey,

I don't know if this has been reported. I run Antlr3.1. Inside a comment 
I refer to an undefined attribute $rulename.attribute. It seems like 
Antlr doesn't like this, and fails to build the parser. But as it's 
inside a comment, antlr shouldn't put his fingers there..

Felix



From antlr at mirality.co.nz  Mon Apr 28 01:38:09 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 28 Apr 2008 20:38:09 +1200
Subject: [antlr-interest] Use of index attribute in tree gramar
In-Reply-To: <3e5ed32f0804271512n6eb57f88ia2a94556a77bbb9e@mail.gmail.co
 m>
References: <3e5ed32f0804271512n6eb57f88ia2a94556a77bbb9e@mail.gmail.com>
Message-ID: <20080428083819.55DD911ECA6@www.antlr.org>

At 10:12 28/04/2008, Bernardo Elayda wrote:
>                 { $statement::plus.add( $p.token.index); }
[...]
>When the above code is compiled with javac , javac complains that 
>index can't be found.  Technically, that's true since 'index' is 
>protected in the CommonToken class. The workaround to this 
>problem is to use $p.token.getTokenIndex().  Is that a 
>feature?  To be consistant with other places I've used token 
>attributes, I expected $p.token.index to work.

It's a known quirk, at least.  Basically the attribute replacement 
only works to one level at the moment.  It's not smart enough to 
notice that $p.token returns a token and thus it should try the 
token attribute replacements -- it just assumes you're trying to 
invoke some arbitrary target-language code (as in 
$foo.text.subString(...)).


From antlr at mirality.co.nz  Mon Apr 28 01:41:06 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 28 Apr 2008 20:41:06 +1200
Subject: [antlr-interest] 3.1: reference to undefined rule attribute in
 a comment is treated as an error
In-Reply-To: <48158733.30102@web.de>
References: <48158733.30102@web.de>
Message-ID: <20080428084116.6C17B11ECB3@www.antlr.org>

At 20:13 28/04/2008, Felix Dorner wrote:
 >I don't know if this has been reported. I run Antlr3.1. Inside a 

 >comment I refer to an undefined attribute $rulename.attribute. 
It
 >seems like Antlr doesn't like this, and fails to build the 
parser.
 >But as it's inside a comment, antlr shouldn't put his fingers 
there..

ANTLR only does very basic parsing within target language blocks, 
since it doesn't really understand the target language 
syntax.  Comments are part of the target language syntax, so ANTLR 
doesn't understand them either, and will try to do the translation 
regardless.

You could try writing \$ at the start instead of $.  I'm not sure, 
but that might make ANTLR forget about trying to translate that 
instance.


From gaochunguang at 163.com  Mon Apr 28 02:35:52 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Mon, 28 Apr 2008 17:35:52 +0800
Subject: [antlr-interest] how to pronounce "antlr"?
Message-ID: <000a01c8a913$4085c340$0800a8c0@alien>

understand. thank you very much.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080428/9710c57a/attachment.html 

From gaochunguang at 163.com  Mon Apr 28 02:45:00 2008
From: gaochunguang at 163.com (gaochunguang)
Date: Mon, 28 Apr 2008 17:45:00 +0800
Subject: [antlr-interest] how to pronounce "antlr"?
Message-ID: <002b01c8a914$8710bbc0$0800a8c0@alien>

I have heard antlr.swf 
thank you very much Austin.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080428/2fd45fb2/attachment.html 

From easjolly at ix.netcom.com  Mon Apr 28 06:42:16 2008
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Mon, 28 Apr 2008 07:42:16 -0600
Subject: [antlr-interest] Accessing lexer characters programmatically?
Message-ID: <E1JqTak-0000EF-KG@elasmtp-junco.atl.sa.earthlink.net>

The user of my application has to supply a table (used by the tree parser)
that specifies conversions for the characters in the document that is
processed.

It would be useful if I could determine prior to scanning whether or not the
supplied table is consistent with the lexer; i.e. whether it includes
conversions for the (non-ASCII) characters used in certain of the lexer
rules such as 

TYPE1: '\u20AC'|'\u00A5'|'\u2026';
TYPE2: '\u201D'|'\u2019';

Typically one can avoid an extra maintenance point in such a situation by
using parameters.  However, ANTLR lexer grammars don't allow such
indirection.

I could, of course, keep a separate list of the characters of concern but
that would create an extra maintenance point.   Is there a better way?
 



From antlr at mirality.co.nz  Mon Apr 28 06:54:12 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 29 Apr 2008 01:54:12 +1200
Subject: [antlr-interest] Accessing lexer characters  programmatically?
In-Reply-To: <E1JqTak-0000EF-KG@elasmtp-junco.atl.sa.earthlink.net>
References: <E1JqTak-0000EF-KG@elasmtp-junco.atl.sa.earthlink.net>
Message-ID: <20080428135423.3010811ECA6@www.antlr.org>

At 01:42 29/04/2008, Susan Jolly wrote:
 >It would be useful if I could determine prior to scanning 
whether
 >or not the supplied table is consistent with the lexer; i.e. 
whether
 >it includes conversions for the (non-ASCII) characters used in
 >certain of the lexer rules such as
 >
 >TYPE1: '\u20AC'|'\u00A5'|'\u2026';
 >TYPE2: '\u201D'|'\u2019';
[...]
 >I could, of course, keep a separate list of the characters of
 >concern but that would create an extra maintenance point.   Is
 >there a better way?

Maybe I'm just misunderstanding what you're asking here, but why 
does it need to be prior to scanning?

It seems to me that the simplest way of doing what you ask is to 
let the lexer run to completion, and as you encounter each 
extended character you add it to a list of "used" 
characters.  After that (either between lexer and parser or after 
the parser) you compare the used list against the supplied 
conversion table.

Of course, this will only report problems where the character is 
actually encountered in the input and not present in the 
conversion table; if you need to report mismatches for characters 
not actually in the input stream then it won't be sufficient.


From easjolly at ix.netcom.com  Mon Apr 28 07:27:17 2008
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Mon, 28 Apr 2008 08:27:17 -0600
Subject: [antlr-interest] Accessing lexer characters  programmatically?
In-Reply-To: <200804280954.1jQtOeP13Nl36s0@mx-canard.atl.sa.earthlink.net>
Message-ID: <E1JqUII-0005o0-JN@elasmtp-banded.atl.sa.earthlink.net>

Thanks Gavin.

Yes, you are correct from a practical point of view and I appreciate your
clear understanding the situation.  I'd thought of doing it the way you
suggested since, even though it is a bit inelegant, ANTLR scanning is so
fast it probably doesn't matter.

However, as you pointed out, "if you need to report mismatches for
characters not actually in the input stream then it won't be sufficient."

The standard use case is that the user would supply the same table when
processing a set of documents over time, possibly in a batch mode. It could
be that the table would be adequate for some documents and not for others.
So it would be nice if I could certify to the user that the table is
adequate in general.  (And, of course, I'd like to be able to do this for
the table I use for testing.)  




From jimi at temporal-wave.com  Mon Apr 28 08:47:46 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 28 Apr 2008 08:47:46 -0700
Subject: [antlr-interest] OutOfMemory parsing large input
In-Reply-To: <1cadba400804272125k5d82b839u5b37faabc2e3a957@mail.gmail.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAADQyhlIv/1Um
	nkhyz09di8gEAAAAA@temporal-wave.com>

Neil,

I suspect that the issue isn't so much  that, as with 12MB you should not really have any problems, but your line rule can match anything. Before looking any further, try changing you LINE rule to:

LINE: ('a'..'z')|' ')+ ;

And see if that helps at all.

It does tokenize everything, but that should not be causing you out of memory errors.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Neil Bacon
> Sent: Sunday, April 27, 2008 9:25 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] OutOfMemory parsing large input
> 
> Hi,
> I've been attempting to parse a large repetitive data file with Antlr,
> but have found a few areas where it seems to buffer up data way ahead
> of what is necessary to do the job. I am about to break up the input
> outside of antlr to work around this unless anyone can offer a better
> idea.
> Antlr v3 is great, but this is an issue I didn't have with Antlr v2.
> 
> Issues:
> 1. First the ANTLR*Stream classes load all the input at once.
> 2. Then, when the first parser rule needs a lexer token, the lexer
> appears to be tokenizing all the input
>    (certainly much more than is required to satisfy the current parser
> rule) and running out of memory.
> 
> I guess I could make my own Stream implementation to address 1. Is
> there any way to address 2?
> 
> Please see below for a very simple grammar to demonstrate the issue
> and a stack trace.
> The test data is 12Mb of lower case text.
> 
> Regards,
>     Neil.
> 
> Simple test grammar:
> 
> list : head body*;
> head : LINE NEWLINE;
> body : LINE NEWLINE;
> LINE : ('a'..'z'|' ')*;
> NEWLINE : '\r'? '\n';
> 
> java.lang.OutOfMemoryError: Java heap space
>     at org.antlr.runtime.Lexer.emit(Lexer.java:161)
>     at org.antlr.runtime.Lexer.nextToken(Lexer.java:111)
>     at
> org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:1
> 19)
>     at
> org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
>     at
> org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
>     at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:89)
>     at org.cambia.sequence.st25.antlr.AParser.head(AParser.java:90)
>     at org.cambia.sequence.st25.antlr.AParser.list(AParser.java:37)




From jimi at temporal-wave.com  Mon Apr 28 09:23:30 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 28 Apr 2008 09:23:30 -0700
Subject: [antlr-interest] Accessing lexer characters  programmatically?
In-Reply-To: <E1JqUII-0005o0-JN@elasmtp-banded.atl.sa.earthlink.net>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAABAD5mDlv30y
	Ac9FHtr0DnwEAAAAA@temporal-wave.com>

You could, I think, use a pre-initialized bitmap for all the code points (or some other structure), then knock out the used ones. This will tell you which characters were and which were not encountered.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Susan Jolly
> Sent: Monday, April 28, 2008 7:27 AM
> To: Gavin Lambert; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Accessing lexer characters
> programmatically?
> 
> Thanks Gavin.
> 
> Yes, you are correct from a practical point of view and I appreciate
> your
> clear understanding the situation.  I'd thought of doing it the way you
> suggested since, even though it is a bit inelegant, ANTLR scanning is
> so
> fast it probably doesn't matter.
> 
> However, as you pointed out, "if you need to report mismatches for
> characters not actually in the input stream then it won't be
> sufficient."
> 
> The standard use case is that the user would supply the same table when
> processing a set of documents over time, possibly in a batch mode. It
> could
> be that the table would be adequate for some documents and not for
> others.
> So it would be nice if I could certify to the user that the table is
> adequate in general.  (And, of course, I'd like to be able to do this
> for
> the table I use for testing.)
> 
> 





From davidann at gmail.com  Mon Apr 28 12:59:25 2008
From: davidann at gmail.com (David Weiser)
Date: Mon, 28 Apr 2008 12:59:25 -0700
Subject: [antlr-interest] online link to C# API broken
Message-ID: <c9ad109e0804281259t3ca794aeg42e3a38c352f464@mail.gmail.com>

Going to, http://www.antlr.org/api/CSharp/index.html gives me a 404 error.

Are there other places I can find the C# API reference?

thanks,
dave
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20080428/9840e137/attachment.html 

From easjolly at ix.netcom.com  Mon Apr 28 13:56:57 2008
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Mon, 28 Apr 2008 14:56:57 -0600
Subject: [antlr-interest] Accessing lexer characters  programmatically?
In-Reply-To: <200804280954.1jQtOeP13Nl36s0@mx-canard.atl.sa.earthlink.net>
Message-ID: <E1JqaNN-0008Ue-V5@elasmtp-junco.atl.sa.earthlink.net>

Let me make the question simpler.

Is there any way to obtain a list of all of the characters _explicitly_
referenced by all of the rules in a given lexer grammar?

(Please note that I'd prefer not to parse the lexer grammar file.)

 



From antlr at mirality.co.nz  Mon Apr 28 14:08:40 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 29 Apr 2008 09:08:40 +1200
Subject: [antlr-interest] Accessing lexer characters programmatically?
In-Reply-To: <E1JqaNN-0008Ue-V5@elasmtp-junco.atl.sa.earthlink.net>
References: <200804280954.1jQtOeP13Nl36s0@mx-canard.atl.sa.earthlink.net>
	<E1JqaNN-0008Ue-V5@elasmtp-junco.atl.sa.earthlink.net>
Message-ID: <20080428210854.8ECDE11ED02@www.antlr.org>

At 08:56 29/04/2008, Susan Jolly wrote:
 >Is there any way to obtain a list of all of the characters
 >_explicitly_ referenced by all of the rules in a given lexer
 >grammar?

I doubt it.  There's not really much call for that sort of thing.

 >(Please note that I'd prefer not to parse the lexer grammar 
file.)

You may have to.

Alternatively, you could always create a custom lexer which does 
keep track of this sort of thing.  No reason why you can't feed 
tokens from a non-ANTLR lexer into an ANTLR parser -- you just 
need to provide an ANTLR token stream and vocabulary.


From jaluber at gmx.de  Mon Apr 28 14:23:41 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 28 Apr 2008 23:23:41 +0200
Subject: [antlr-interest] online link to C# API broken
In-Reply-To: <c9ad109e0804281259t3ca794aeg42e3a38c352f464@mail.gmail.com>
References: <c9ad109e0804281259t3ca794aeg42e3a38c352f464@mail.gmail.com>
Message-ID: <4816405D.9050008@gmx.de>

David Weiser schrieb:
> Going to, http://www.antlr.org/api/CSharp/index.html gives me a 404 error.
>  
> Are there other places I can find the C# API reference?
>  
> thanks,
> dave

There is no online reference yet. The closest would be to take the 
sources, compile them with XML documents option and let Sandcastle 
create a MSDN-like index.

Johannes

From open.zone at virgin.net  Tue Apr 29 01:15:04 2008
From: open.zone at virgin.net (Micheal J)
Date: Tue, 29 Apr 2008 09:15:04 +0100
Subject: [antlr-interest] online link to C# API broken
In-Reply-To: <4816405D.9050008@gmx.de>
References: <c9ad109e0804281259t3ca794aeg42e3a38c352f464@mail.gmail.com>
	<4816405D.9050008@gmx.de>
Message-ID: <006e01c8a9d1$21f8ed80$0200a8c0@marion>

> >  
> > Are there other places I can find the C# API reference?
> >  
> > thanks,
> > dave
> 
> There is no online reference yet. The closest would be to 
> take the sources, compile them with XML documents option and 
> let Sandcastle create a MSDN-like index.

The Nant build files can build CHM docs of the API (or at least they used to
be able to). This relied on NDoc but support for Sandcastle (or indeed a
switch as NDoc might not support C# v2+) can be added easily enough....

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From barabucc at cs.unibo.it  Tue Apr 29 03:41:56 2008
From: barabucc at cs.unibo.it (Gioele Barabucci)
Date: Tue, 29 Apr 2008 12:41:56 +0200
Subject: [antlr-interest] Similar lexer rules
Message-ID: <fv6to3$agc$1@ger.gmane.org>

This simple grammar (a reduction of an actual grammar)

  grammar bug;
  
  quote: name S? '=' S? '<' text '>';
  name: ID;
  text: (LETTER|S)+;
  
  //RAW_TEXT: (LETTER|S)+;
  ID: LETTER+;
  fragment LETTER: ('a'..'z'|'A'..'Z');
  S: (' '|'\n'|'\t')+;

will not parse "xx=< yy >" because "yy" will be matched by token ID, so the
grammar rule 'text' will not be accepted. Is there a way to solve this?

I am working on an XML-related grammar where many tokens differs only for
the inclusion or exclusion of a certain range of characters. For example,
in the original grammar the RAW_TEXT rule shadowed the S rule so all the
chars that had to match "S?" ended up matching RAW_TEXT instead. This
forced me to turn RAW_TEXT into a parser rule. Is converting lexer rules
into parser rules the only feasible solution?

-- 
Gioele Barabucci <barabucc at cs.unibo.it>


From dcmailbag-antlr at yahoo.com  Tue Apr 29 03:50:58 2008
From: dcmailbag-antlr at yahoo.com (dcmailbag-antlr at yahoo.com)
Date: Tue, 29 Apr 2008 03:50:58 -0700 (PDT)
Subject: [antlr-interest] Building an interpreter
In-Reply-To: <d3992d900804261904jf8b93a2o560a0b8d43400e3@mail.gmail.com>
Message-ID: <522324.83278.qm@web52802.mail.re2.yahoo.com>

Thank you, Richard.

I understnad the concept of altering the input stream - I have done it many
times with lex.

My hope had been that antlr had this capability already built-in as I have
found the need to be (relatively) common when building interpreters.


--- Richard Clark <rdclark at gmail.com> wrote:

> On Thu, Apr 24, 2008 at 3:01 PM,  <dcmailbag-antlr at yahoo.com> wrote:
> 
> >  The problem with the interpreter examples seen is that they require the
> >  input stream to the interpreter being constructed be the same stream as
> the
> >  input to the parser building the interpreter (the token and node streams
> are
> >  derived from the input stream).
> 
> I'd tackle this by writing an input adaptor that lets you switch its
> input stream or works from multiple input streams in a row. You could
> easily pick up the source for ANTLRInputStream and alter it.
> 
> The only tricky part is knowing when to signal EOF to the parser. If
> you had a "definition" stream and a "execution" stream, EOF on the
> first could tell the input adaptor to switch to the second and EOF on
> the second would be passed through to the parser.
> 
> I hope this gives you enough to go on.
> 
>  ...Richard
> 


From antlr at mirality.co.nz  Tue Apr 29 04:54:12 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 29 Apr 2008 23:54:12 +1200
Subject: [antlr-interest] Similar lexer rules
In-Reply-To: <fv6to3$agc$1@ger.gmane.org>
References: <fv6to3$agc$1@ger.gmane.org>
Message-ID: <20080429115422.2D5DE11ED04@www.antlr.org>

At 22:41 29/04/2008, Gioele Barabucci wrote:
 >  quote: name S? '=' S? '<' text '>';
 >  name: ID;
 >  text: (LETTER|S)+;
 >
 >  //RAW_TEXT: (LETTER|S)+;
 >  ID: LETTER+;
 >  fragment LETTER: ('a'..'z'|'A'..'Z');
 >  S: (' '|'\n'|'\t')+;
 >
 >will not parse "xx=< yy >" because "yy" will be matched by token 

 >ID, so the grammar rule 'text' will not be accepted. Is there a
 >way to solve this?

Actually, the problem is that LETTER is a fragment rule.  Since 
(unless you do it manually) fragment tokens don't ever get emitted 
by the lexer, they're not viable in parser rules.

If you change LETTER to ID in the text rule then it should work.

Another option is that you could create a single token for 
"arbitrary stuff in angle brackets", eg. one of these two:
   TAG : '<' .* '>' ;
   TAG : '<' (LETTER | S)* '>' ;

This will only work properly if angle brackets aren't used 
differently in another context, however.


From andersen at ontologyworks.com  Tue Apr 29 09:20:38 2008
From: andersen at ontologyworks.com (Bill Andersen)
Date: Tue, 29 Apr 2008 12:20:38 -0400
Subject: [antlr-interest] Question
Message-ID: <1A793D73-CFAE-4952-8BFD-E830C46AFB4D@ontologyworks.com>

Folks,

I have a grammar (relevant snippet below) with which I'm having a  
parsing problem.  (I'm using ANTLR 3.1 in a beta release of ANTLRWorks  
FWIW)

term
	: NAME
	| LP term+ RP
	;

atom
	: LP term+ RP
	;

LP
	: '('
	;

RP
	: ')'
	;

NAME
	: ('a'..'z')+
	;

WS
	:  (' '|'\t'|'\n'|'\r') {$channel=HIDDEN;}
   ;

Attempts to parse "( foo )" in ANTLRWorks' interpreter as a 'term'  
fails. while parsing "( ( foo ) )" as an 'atom' succeeds (i.e. I'm  
seeing the correct parse trees).  Note that the former 'term' is  
embedded in the latter 'atom'.  Am I making an obvious mistake?  Any  
help appreciated.

	.bill

From jimi at temporal-wave.com  Tue Apr 29 09:23:03 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 29 Apr 2008 09:23:03 -0700
Subject: [antlr-interest] Question
In-Reply-To: <1A793D73-CFAE-4952-8BFD-E830C46AFB4D@ontologyworks.com>
Message-ID: <!&!AAAAAAAAAAAgAAAAAAAAABjTxn8agx9HoAwEBZw3asQAAAAAspsWAABwBgAQAAAAFzB18LgQR0O
	qY0KMl1wawwEAAAAA@temporal-wave.com>

When you debug are you selecting the start rule 'term' - I bet you are starting with atom. If interpretting, probaly th same things!

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bill Andersen
> Sent: Tuesday, April 29, 2008 9:21 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Question
> 
> Folks,
> 
> I have a grammar (relevant snippet below) with which I'm having a
> parsing problem.  (I'm using ANTLR 3.1 in a beta release of ANTLRWorks
> FWIW)
> 
> term
> 	: NAME
> 	| LP term+ RP
> 	;
> 
> atom
> 	: LP term+ RP
> 	;
> 
> LP
> 	: '('
> 	;
> 
> RP
> 	: ')'
> 	;
> 
> NAME
> 	: ('a'..'z')+
> 	;
> 
> WS
> 	:  (' '|'\t'|'\n'|'\r') {$channel=HIDDEN;}
>    ;
> 
> Attempts to parse "( foo )" in ANTLRWorks' interpreter as a 'term'
> fails. while parsing "( ( foo ) )" as an 'atom' succeeds (i.e. I'm
> seeing the correct parse trees).  Note that the former 'term' is
> embedded in the latter 'atom'.  Am I making an obvious mistake?  Any
> help appreciated.
> 
> 	.bill




From Gerz at fgan.de  Tue Apr 29 21:55:18 2008
From: Gerz at fgan.de (Gerz, Michael)
Date: Wed, 30 Apr 2008 06:55:18 +0200
Subject: [antlr-interest] Latest intermediate build (ANTLR 3.1b1) produces
	broken Java code
Message-ID: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de>

Hi,

I encountered a problem with the latest ANTLR snapshot. The problem does not occur with ANTLR 3.0.1.

The following (simplified) rule:


record 
??????????? :?????????? {
??????????????????????? ??? ??????? List<SyLTParameter> syltPars = classDoc.getConstructors().get(0).getParameters();
?????????????????????????????????? int parNo = 0;
?????????????????????????????????? boolean first = true;
??????????????????????? }
??????????? 
??????????????????????? '{' 

??????????????????????? (?????????? { parNo < syltPars.size() }? =>
??????????? ? 
??????????? ??????????? ??? ??????? ( ????????? { first? }? => { first = false; }
??????????? ??????????? ??? ??????? | ????????? { !first }? => ',' )

?????????????????????????????????? f = field[type, false] 
??????????????????????? )*
??????????? ??? 
??????????????????????? '}'
??????????? ;

leads to the following broken code:

??? public final void record() throws RecognitionException {
??????? try {
??????????? // Message.g:94:2: ( '{' ({...}? => ({...}? => | {...}? => ',' ) f= field[type, false] )* '}' )
??????????? // Message.g:94:4: '{' ({...}? => ({...}? => | {...}? => ',' ) f= field[type, false] )* '}'
??????????? {
??????????? ??????????? ????List<SyLTParameter> syltPars = classDoc.getConstructors().get(0).getParameters();
??????????? ???????????????? int parNo = 0;
??????????? ???????????????? boolean first = true;
       }
??????????? ??????????? 
??????????? match(input,25,FOLLOW_25_in_record212); 
??????????? // Message.g:112:3: ({...}? => ({...}? => | {...}? => ',' ) f= field[type, false] )*
??????????? loop2:
??????????? do {
??????????????? int alt2=2;
??????????????? alt2 = dfa2.predict(input);
??????????? ????? ... more code ...
??????????? } while (true);

??????????? match(input,27,FOLLOW_27_in_record306); 
??????? }
??????? catch (RecognitionException re) {
??????????? reportError(re);
??????????? recover(input,re);
??????? }
??????? finally {
??? ????}
??? }

??? class DFA2 extends DFA {

??????? public DFA2(BaseRecognizer recognizer) {
??????????? this.recognizer = recognizer;
??????????? this.decisionNumber = 2;
??????????? this.eot = DFA2_eot;
??????????? this.eof = DFA2_eof;
??????????? this.min = DFA2_min;
??????????? this.max = DFA2_max;
??????????? this.accept = DFA2_accept;
??????????? this.special = DFA2_special;
??????????? this.transition = DFA2_transition;
??????? }
??????? public String getDescription() {
??????????? return "()* loopback of 112:3: ({...}? => ({...}? => | {...}? => ',' ) f= field[type, false] )*";
??????? }
??????? public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
??????????? TokenStream input = (TokenStream)_input;
??????? ??? int _s = s;
??????????? switch ( s ) {
??????????????????? case 0 : 
??????????????????????? int LA2_0 = input.LA(1);

???????????????????????? 
??????????????????????? int index2_0 = input.index();
??????????????????????? input.rewind();
??????????????????????? s = -1;
??????????????????????? if ( (LA2_0==27) ) {s = 1;}
??????????????????????? else if ( (LA2_0==DECIMAL_LITERAL) && (( parNo < syltPars.size() && first? ))) {s = 2;}
??????????????????????? else if ( (LA2_0==FLOATING_POINT_LITERAL) && (( parNo < syltPars.size() && first? ))) {s = 3;}
??????????????????????? else if ( (LA2_0==CHARACTER_LITERAL) && (( parNo < syltPars.size() && first? ))) {s = 4;}
??????????????????????? else if ( (LA2_0==STRING_LITERAL) && (( parNo < syltPars.size() && first? ))) {s = 5;}
??????????????????????? else if ( (LA2_0==IDENTIFIER) && (( parNo < syltPars.size() && first? ))) {s = 6;}
??????????????????????? else if ( (LA2_0==TRUE) && (( parNo < syltPars.size() && first? ))) {s = 7;}
??????????????????????? else if ( (LA2_0==FALSE) && (( parNo < syltPars.size() && first? ))) {s = 8;}
??????????????????????? else if ( ((LA2_0>=NULL && LA2_0<=OMIT)) && (( parNo < syltPars.size() && first? ))) {s = 9;}
??????????????????????? else if ( (LA2_0==25) && (( parNo < syltPars.size() && first? ))) {s = 10;}
??????????????????????? else if ( (LA2_0==28) && (( parNo < syltPars.size() && first? ))) {s = 11;}
??????????????????????? else if ( (LA2_0==26) && (( parNo < syltPars.size() && !first ))) {s = 12;}
?????????????????????? 
??????????????????????? input.seek(index2_0);
??????????????????????? if ( s>=0 ) return s;
??????????????????????? break;
??????????? }
??????????? NoViableAltException nvae =
??????????????? new NoViableAltException(getDescription(), 2, _s, input);
??????????? error(nvae);
??????????? throw nvae;
??????? }
??? }



Obviously, DFA2.specialStateTransition refers to the local variables defined within record(), i.e. "parNo", "syltPars", and "first". 

Any idea on how to fix this issue? Or is this in fact a new "feature"?

Many thanks in advance!

Michael



************************************************************************
Dr. Michael Gerz 
FGAN e.V.?????????????????????????????????????? Phone:? +49 228 9435-414
Department FKIE/ITF???????????????????????????? Fax:??? +49 228 9435-685
Neuenahrer Stra?e 20??????????????????????????? E-Mail: gerz at fgan.de 
53343 Wachtberg-Werthhoven, Germany???????????? WWW:??? www.fgan.de 

Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN) 
Sitz der Gesellschaft: Bonn 
Registergericht: Amtsgericht Bonn VR 2530 
Vorstand: Dr.rer.nat. R. Dornhaus (Vorst.), Prof. Dr. J. Ender (Stellv.)


************************************************************************
Dr. Michael Gerz 
FGAN e.V.                                       Phone: +49 228 9435-414
Department FKIE/ITF                             Fax: +49 228 9435-685
Neuenahrer Stra?e 20                            E-Mail: gerz at fgan.de 
53343 Wachtberg-Werthhoven, Germany             WWW: www.fgan.de 
 
Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN) 
Sitz der Gesellschaft: Bonn 
Registergericht: Amtsgericht Bonn VR 2530 
Vorstand: Dr.rer.nat. R. Dornhaus (Vorst.), Prof. Dr. J. Ender (Stellv.)
 

From parrt at cs.usfca.edu  Tue Apr 29 22:40:40 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Apr 2008 22:40:40 -0700
Subject: [antlr-interest] Latest intermediate build (ANTLR 3.1b1)
	produces broken Java code
In-Reply-To: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de>
References: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de>
Message-ID: <B7A665DD-200E-4637-9E98-5AB35AF22D33@cs.usfca.edu>

hi. apparently 3.1 is forcing a DFA not simple LL(k) lookahead...you  
got "lucky" before...i recommend you avoid locals that can lead to  
them being hoisted outside...sorry. not sure how to improve this.
Ter
On Apr 29, 2008, at 9:55 PM, Gerz, Michael wrote:

> Hi,
>
> I encountered a problem with the latest ANTLR snapshot. The problem  
> does not occur with ANTLR 3.0.1.
>
> The following (simplified) rule:
>
>
> record
>             :           {
>                                     List<SyLTParameter> syltPars =  
> classDoc.getConstructors().get(0).getParameters();
>                                    int parNo = 0;
>                                    boolean first = true;
>                         }
>
>                         '{'
>
>                         (           { parNo < syltPars.size() }? =>
>
>                                     (           { first  }? =>  
> { first = false; }
>                                     |           { !first }? => ',' )
>
>                                    f = field[type, false]
>                         )*
>
>                         '}'
>             ;
>
> leads to the following broken code:
>
>     public final void record() throws RecognitionException {
>         try {
>             // Message.g:94:2: ( '{' ({...}? => ({...}? => | {...}?  
> => ',' ) f= field[type, false] )* '}' )
>             // Message.g:94:4: '{' ({...}? => ({...}? => | {...}?  
> => ',' ) f= field[type, false] )* '}'
>             {
>                             List<SyLTParameter> syltPars =  
> classDoc.getConstructors().get(0).getParameters();
>                              int parNo = 0;
>                              boolean first = true;
>        }
>
>             match(input,25,FOLLOW_25_in_record212);
>             // Message.g:112:3: ({...}? => ({...}? => | {...}? =>  
> ',' ) f= field[type, false] )*
>             loop2:
>             do {
>                 int alt2=2;
>                 alt2 = dfa2.predict(input);
>                   ... more code ...
>             } while (true);
>
>             match(input,27,FOLLOW_27_in_record306);
>         }
>         catch (RecognitionException re) {
>             reportError(re);
>             recover(input,re);
>         }
>         finally {
>         }
>     }
>
>     class DFA2 extends DFA {
>
>         public DFA2(BaseRecognizer recognizer) {
>             this.recognizer = recognizer;
>             this.decisionNumber = 2;
>             this.eot = DFA2_eot;
>             this.eof = DFA2_eof;
>             this.min = DFA2_min;
>             this.max = DFA2_max;
>             this.accept = DFA2_accept;
>             this.special = DFA2_special;
>             this.transition = DFA2_transition;
>         }
>         public String getDescription() {
>             return "()* loopback of 112:3: ({...}? => ({...}? => |  
> {...}? => ',' ) f= field[type, false] )*";
>         }
>         public int specialStateTransition(int s, IntStream _input)  
> throws NoViableAltException {
>             TokenStream input = (TokenStream)_input;
>             int _s = s;
>             switch ( s ) {
>                     case 0 :
>                         int LA2_0 = input.LA(1);
>
>
>                         int index2_0 = input.index();
>                         input.rewind();
>                         s = -1;
>                         if ( (LA2_0==27) ) {s = 1;}
>                         else if ( (LA2_0==DECIMAL_LITERAL) &&  
> (( parNo < syltPars.size() && first  ))) {s = 2;}
>                         else if ( (LA2_0==FLOATING_POINT_LITERAL)  
> && (( parNo < syltPars.size() && first  ))) {s = 3;}
>                         else if ( (LA2_0==CHARACTER_LITERAL) &&  
> (( parNo < syltPars.size() && first  ))) {s = 4;}
>                         else if ( (LA2_0==STRING_LITERAL) &&  
> (( parNo < syltPars.size() && first  ))) {s = 5;}
>                         else if ( (LA2_0==IDENTIFIER) && (( parNo <  
> syltPars.size() && first  ))) {s = 6;}
>                         else if ( (LA2_0==TRUE) && (( parNo <  
> syltPars.size() && first  ))) {s = 7;}
>                         else if ( (LA2_0==FALSE) && (( parNo <  
> syltPars.size() && first  ))) {s = 8;}
>                         else if ( ((LA2_0>=NULL && LA2_0<=OMIT)) &&  
> (( parNo < syltPars.size() && first  ))) {s = 9;}
>                         else if ( (LA2_0==25) && (( parNo <  
> syltPars.size() && first  ))) {s = 10;}
>                         else if ( (LA2_0==28) && (( parNo <  
> syltPars.size() && first  ))) {s = 11;}
>                         else if ( (LA2_0==26) && (( parNo <  
> syltPars.size() && !first ))) {s = 12;}
>
>                         input.seek(index2_0);
>                         if ( s>=0 ) return s;
>                         break;
>             }
>             NoViableAltException nvae =
>                 new NoViableAltException(getDescription(), 2, _s,  
> input);
>             error(nvae);
>             throw nvae;
>         }
>     }
>
>
>
> Obviously, DFA2.specialStateTransition refers to the local  
> variables defined within record(), i.e. "parNo", "syltPars", and  
> "first".
>
> Any idea on how to fix this issue? Or is this in fact a new "feature"?
>
> Many thanks in advance!
>
> Michael
>
>
>
> ********************************************************************** 
> **
> Dr. Michael Gerz
> FGAN e.V.                                       Phone:  +49 228  
> 9435-414
> Department FKIE/ITF                             Fax:    +49 228  
> 9435-685
> Neuenahrer Stra?e 20                            E-Mail: gerz at fgan.de
> 53343 Wachtberg-Werthhoven, Germany             WWW:    www.fgan.de
>
> Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN)
> Sitz der Gesellschaft: Bonn
> Registergericht: Amtsgericht Bonn VR 2530
> Vorstand: Dr.rer.nat. R. Dornhaus (Vorst.), Prof. Dr. J. Ender  
> (Stellv.)
>
>
> ********************************************************************** 
> **
> Dr. Michael Gerz
> FGAN e.V.                                       Phone: +49 228  
> 9435-414
> Department FKIE/ITF                             Fax: +49 228 9435-685
> Neuenahrer Stra?e 20                            E-Mail: gerz at fgan.de
> 53343 Wachtberg-Werthhoven, Germany             WWW: www.fgan.de
>
> Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN)
> Sitz der Gesellschaft: Bonn
> Registergericht: Amtsgericht Bonn VR 2530
> Vorstand: Dr.rer.nat. R. Dornhaus (Vorst.), Prof. Dr. J. Ender  
> (Stellv.)
>


From antlr at shmuelhome.mine.nu  Tue Apr 29 22:56:29 2008
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Wed, 30 Apr 2008 08:56:29 +0300
Subject: [antlr-interest] Latest intermediate build (ANTLR 3.1b1)
 produces broken Java code
In-Reply-To: <B7A665DD-200E-4637-9E98-5AB35AF22D33@cs.usfca.edu>
References: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de>
	<B7A665DD-200E-4637-9E98-5AB35AF22D33@cs.usfca.edu>
Message-ID: <48180A0D.2090409@shmuelhome.mine.nu>

Terence Parr wrote:
> hi. apparently 3.1 is forcing a DFA not simple LL(k) lookahead...you 
> got "lucky" before...i recommend you avoid locals that can lead to 
> them being hoisted outside...sorry. not sure how to improve this.
> Ter 
Is there a way to turn off the DFA for testing? One of the great things 
about Antlr is that I could figure out why my grammar was failing by 
reading the code. Unfortunately, I can't do that with the DFA predictor.

Shmuel


From felix_do at web.de  Wed Apr 30 00:00:20 2008
From: felix_do at web.de (Felix Dorner)
Date: Wed, 30 Apr 2008 09:00:20 +0200
Subject: [antlr-interest] Stringt. propagation in dispatcher rules
Message-ID: <48181904.5000707@web.de>

Hey,

I don't know if this can be handled more elegantly. I have a template 
grammar. The rule 'statement' is a mere dispatcher and doesn't really do 
anything to the output, so I simply need to propagate the template for 
every alternative. It would be great if this would happen by default 
(i.e. if there's no ->). But then it might be unclear which one to 
choose if an alternative invokes two or more subrules..

Thanks, Felix

statement
    : declaration -> {$declaration.st}
    | expression -> {$expression.st}
    | block -> {$block.st}
    | ifStatement -> {$ifStatement.st}
    ;

From felix_do at web.de  Wed Apr 30 00:27:18 2008
From: felix_do at web.de (Felix Dorner)
Date: Wed, 30 Apr 2008 09:27:18 +0200
Subject: [antlr-interest] Validating predicates in @after
Message-ID: <48181F56.6040906@web.de>

Hey again..

In expression rules you often have alternatives that consist of 
subexpressions, like:

expression :
   |  ^(binop expression expression)
   |  ^(unaryop expression)
   ...

my current validation grammar looks like this:
  | ..
     ^(binop e1=expression e2=expression)
     {$e1.start.evalsTo != null}?
     {$e2.start.evalsTo != null}?
   | ^(unaryop e1=expression)
      {$e1.start.evalsTo != null}?

so there's a lot of repetitive code here. Rather than doing that, I'd 
like to verify right befor expression returns that its "evalTo" isn't 
null (i.e. it's a valid expression). Is this the only way to do this:?

@after {
if ($start.evalType() == null){
    throw new FailedPredicateException(input, expression, 
"$start.evalType != null");
}
}

Thanks again,
Felix





From sohara at pivotal-solutions.co.uk  Wed Apr 30 07:38:06 2008
From: sohara at pivotal-solutions.co.uk (Steve O'Hara)
Date: Wed, 30 Apr 2008 15:38:06 +0100
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <47FE5D45.9060703@gmx.de>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>	<47FC69C7.3020608@gmail.com><47FCE60E.5030204@infobal.com>
	<47FE10F0.1000008@gmail.com> <47FE5D45.9060703@gmx.de>
Message-ID: <E51BD230BBA3A64B9C01EF1A20EF5AE61C4F98@pspub1.pivotal-solutions.co.uk>

Hello,

I must be missing something pretty basic but I don't know what it is.
The example grammar below produces the "missing attribute access on rule
scope: endClause"
The book (page 126) indicates that you can do this - any ideas what I'm
doing wrong?


@members {
    public Token EndClause=null;
}

statement
    :  FIND (tableList | statsClause) queryExpression? endClause?
{EndClause=$endClause;}
    ;

Thanks,

Steve


From parrt at cs.usfca.edu  Wed Apr 30 08:18:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 30 Apr 2008 08:18:57 -0700
Subject: [antlr-interest] Latest intermediate build (ANTLR 3.1b1)
	produces broken Java code
In-Reply-To: <48180A0D.2090409@shmuelhome.mine.nu>
References: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de>
	<B7A665DD-200E-4637-9E98-5AB35AF22D33@cs.usfca.edu>
	<48180A0D.2090409@shmuelhome.mine.nu>
Message-ID: <C3CAC7B7-F17F-4EC9-A315-A4B286A3A157@cs.usfca.edu>

Try -dfa option to look at DFAs. Verrrrry nice.  Better, use AW to  
ask for the DFA.
Ter
On Apr 29, 2008, at 10:56 PM, shmuel siegel wrote:

> Terence Parr wrote:
>> hi. apparently 3.1 is forcing a DFA not simple LL(k)  
>> lookahead...you got "lucky" before...i recommend you avoid locals  
>> that can lead to them being hoisted outside...sorry. not sure how  
>> to improve this.
>> Ter
> Is there a way to turn off the DFA for testing? One of the great  
> things about Antlr is that I could figure out why my grammar was  
> failing by reading the code. Unfortunately, I can't do that with  
> the DFA predictor.
>
> Shmuel
>


From parrt at cs.usfca.edu  Wed Apr 30 08:19:30 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 30 Apr 2008 08:19:30 -0700
Subject: [antlr-interest] Stringt. propagation in dispatcher rules
In-Reply-To: <48181904.5000707@web.de>
References: <48181904.5000707@web.de>
Message-ID: <899D8807-A275-4ABF-923A-DE33E79DDE75@cs.usfca.edu>

improvements in this area to arrive soon after 3.1 (which is imminent).
Ter
On Apr 30, 2008, at 12:00 AM, Felix Dorner wrote:

> Hey,
>
> I don't know if this can be handled more elegantly. I have a  
> template grammar. The rule 'statement' is a mere dispatcher and  
> doesn't really do anything to the output, so I simply need to  
> propagate the template for every alternative. It would be great if  
> this would happen by default (i.e. if there's no ->). But then it  
> might be unclear which one to choose if an alternative invokes two  
> or more subrules..
>
> Thanks, Felix
>
> statement
>    : declaration -> {$declaration.st}
>    | expression -> {$expression.st}
>    | block -> {$block.st}
>    | ifStatement -> {$ifStatement.st}
>    ;


From cdoucette at vaultus.com  Wed Apr 30 08:23:02 2008
From: cdoucette at vaultus.com (Doucette, Charles)
Date: Wed, 30 Apr 2008 11:23:02 -0400
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <E51BD230BBA3A64B9C01EF1A20EF5AE61C4F98@pspub1.pivotal-solutions.co.uk>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>
	<47FC69C7.3020608@gmail.com><47FCE60E.5030204@infobal.com>
	<47FE10F0.1000008@gmail.com> <47FE5D45.9060703@gmx.de>
	<E51BD230BBA3A64B9C01EF1A20EF5AE61C4F98@pspub1.pivotal-solutions.co.uk>
Message-ID: <A7746824D386F947BBC285F6EC4716B001E9017C14@vmtbosmail01.VMTBOSTON.VAULTUS.COM>

I believe you are supposed to drop the "$" which is not what the book says.

Chuck

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Steve O'Hara
> Sent: Wednesday, April 30, 2008 10:38 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Multiplication and pointers in
> C-style language
>
> Hello,
>
> I must be missing something pretty basic but I don't know what it is.
> The example grammar below produces the "missing attribute
> access on rule
> scope: endClause"
> The book (page 126) indicates that you can do this - any
> ideas what I'm doing wrong?
>
>
> @members {
>     public Token EndClause=null;
> }
>
> statement
>     :  FIND (tableList | statsClause) queryExpression? endClause?
> {EndClause=$endClause;}
>     ;
>
> Thanks,
>
> Steve
>
>

From parrt at cs.usfca.edu  Wed Apr 30 10:23:39 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 30 Apr 2008 10:23:39 -0700
Subject: [antlr-interest] Multiplication and pointers in C-style language
In-Reply-To: <E51BD230BBA3A64B9C01EF1A20EF5AE61C4F98@pspub1.pivotal-solutions.co.uk>
References: <9ffe819fa639c649a0676662f2fc57d6@temporal-wave.com>	<47FC69C7.3020608@gmail.com><47FCE60E.5030204@infobal.com>
	<47FE10F0.1000008@gmail.com> <47FE5D45.9060703@gmx.de>
	<E51BD230BBA3A64B9C01EF1A20EF5AE61C4F98@pspub1.pivotal-solutions.co.uk>
Message-ID: <560E83D7-1CBB-4079-A928-BBCDDF58D3E5@cs.usfca.edu>

youCan do that only one token references. are you sure it is on a rule  
reference and not a token reference in the book?
Ter
On Apr 30, 2008, at 7:38 AM, Steve O'Hara wrote:

> Hello,
>
> I must be missing something pretty basic but I don't know what it is.
> The example grammar below produces the "missing attribute access on  
> rule
> scope: endClause"
> The book (page 126) indicates that you can do this - any ideas what  
> I'm
> doing wrong?
>
>
> @members {
>    public Token EndClause=null;
> }
>
> statement
>    :  FIND (tableList | statsClause) queryExpression? endClause?
> {EndClause=$endClause;}
>    ;
>
> Thanks,
>
> Steve
>


From open.zone at virgin.net  Wed Apr 30 10:23:38 2008
From: open.zone at virgin.net (Micheal J)
Date: Wed, 30 Apr 2008 18:23:38 +0100
Subject: [antlr-interest] Latest intermediate build (ANTLR
	3.1b1)produces broken Java code
In-Reply-To: <C3CAC7B7-F17F-4EC9-A315-A4B286A3A157@cs.usfca.edu>
References: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de><B7A665DD-200E-4637-9E98-5AB35AF22D33@cs.usfca.edu><48180A0D.2090409@shmuelhome.mine.nu>
	<C3CAC7B7-F17F-4EC9-A315-A4B286A3A157@cs.usfca.edu>
Message-ID: <008601c8aae6$ee825ce0$c404a8c0@marion>

 
Hi,

> > Is there a way to turn off the DFA for testing? One of the great 
> > things about Antlr is that I could figure out why my grammar was 
> > failing by reading the code. Unfortunately, I can't do that 
> with the 
> > DFA predictor.
> >
> > Shmuel
> >


> Try -dfa option to look at DFAs. Verrrrry nice.  Better, use 
> AW to ask for the DFA.
> Ter

Is there no [combination of] option/switch that will turn off the DFAs and
'downgrade' to simple LL(k) analysis in v3.1?

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


From parrt at cs.usfca.edu  Wed Apr 30 10:50:29 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 30 Apr 2008 10:50:29 -0700
Subject: [antlr-interest] Latest intermediate build (ANTLR
	3.1b1)produces broken Java code
In-Reply-To: <008601c8aae6$ee825ce0$c404a8c0@marion>
References: <1FF0CFC89178B64DBD5CF6696750AC4306E97F@mailserv1.lorien.fkie.fgan.de><B7A665DD-200E-4637-9E98-5AB35AF22D33@cs.usfca.edu><48180A0D.2090409@shmuelhome.mine.nu>
	<C3CAC7B7-F17F-4EC9-A315-A4B286A3A157@cs.usfca.edu>
	<008601c8aae6$ee825ce0$c404a8c0@marion>
Message-ID: <2FC3AF1A-FF75-4D57-9C3C-6265B90B93EE@cs.usfca.edu>


On Apr 30, 2008, at 10:23 AM, Micheal J wrote:

>
> Hi,
>
>>> Is there a way to turn off the DFA for testing? One of the great
>>> things about Antlr is that I could figure out why my grammar was
>>> failing by reading the code. Unfortunately, I can't do that
>> with the
>>> DFA predictor.
>>>
>>> Shmuel
>>>
>
>
>> Try -dfa option to look at DFAs. Verrrrry nice.  Better, use
>> AW to ask for the DFA.
>> Ter
>
> Is there no [combination of] option/switch that will turn off the  
> DFAs and
> 'downgrade' to simple LL(k) analysis in v3.1?

sure.Put option k=... for that particular decision or entire grammar.  
Note that ANTLR would have done that already had it been okay. Most  
likely this person changed the grammar, which is forcing 3.1 to make  
DFA. Or, the fixes I made to the semantic predicate lookahead stuff  
may force it. I am about to look into that section of the code looking  
for a bug anyway. I will look.
Ter

