From ter at antlr.org  Fri Apr  1 04:05:48 2011
From: ter at antlr.org (ter at antlr.org)
Date: Fri,  1 Apr 2011 04:05:48 -0700 (PDT)
Subject: [antlr-interest] [SPAM] The easy way to make money
Message-ID: <20110401110549.15A6B3418414@www.antlr.org>


From researcher0x00 at gmail.com  Fri Apr  1 11:04:23 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 1 Apr 2011 14:04:23 -0400
Subject: [antlr-interest] Imaginary node modifies tree unexpectedly. Bug, Grrr,
 or not what I expected?
In-Reply-To: <AANLkTinWrmPh68WEdf4_8nNM28bHn1toPtiLE4T8XeQr@mail.gmail.com>
References: <AANLkTinWrmPh68WEdf4_8nNM28bHn1toPtiLE4T8XeQr@mail.gmail.com>
Message-ID: <AANLkTik-xyRictk+GPSL8oRzVr0kxri2=32acEABCJQu@mail.gmail.com>

As a work around, use dupTree().

Note: This is example code, change as necessary.

a
scope { CommonTree b1tree; }
@init { $a::b1tree = null; }
:
   b1 = b
   { $a::b1tree = (CommonTree)adaptor.DupTree((CommonTree)$b1.tree); }
   b2 = b
;

From peter at crispu.com  Sat Apr  2 09:42:05 2011
From: peter at crispu.com (Peter Kooiman)
Date: Sat, 2 Apr 2011 11:42:05 -0500 (CDT)
Subject: [antlr-interest] [CSharp3] TraceIn/TraceOut and ANTLR_TRACE
	conditional
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F95608EEC2@sun.epirion.local>
Message-ID: <29580184.16.1301762520850.JavaMail.pitsie@devleno>

After struggling a bit to get tracing working in my parser by defining ANTLR_TRACE and getting nowhere, I realized the following, which may or may not be intended: 

Both the Parser and Lexer classes inherit from BaseRecognizer and override (well, hide) the BaseRecognizer TraceIn and TraceOut methods. These overrides call base.Traceout / base.TraceIn, BUT, since during library compilation ANTLR_TRACE is not defined, these base method calls become no-ops. The result is, that while BaseRecognizer has usable TraceIn and TraceOut methods, the TraceIn and TraceOut methods of both Parser and Lexer become essentially no-ops. 

This is the MSIL for Parser::TraceIn in Antlr3.Runtime.dll: 

.method public hidebysig newslot virtual 
instance void TraceIn(string ruleName, 
int32 ruleIndex) cil managed 
{ 
.custom instance void [mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = ( 01 00 0B 41 4E 54 4C 52 5F 54 52 41 43 45 00 00 ) // ...ANTLR_TRACE.. 
// Code size 1 (0x1) 
.maxstack 8 
IL_0000: ret 
} // end of method Parser::TraceIn 

Fixed easily enough by overriding TraceIn/TraceOut in my parser, but a bit of a pain to figure out, so I thought I'd at least document it here. 

Regards 
Peter 

From parrt at cs.usfca.edu  Sat Apr  2 11:09:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Apr 2011 11:09:53 -0700
Subject: [antlr-interest] Release of StringTemplate 4.0
In-Reply-To: <13b9ca48afdb09b47ff372a5b85dd621@mail.gmail.com>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
	<13b9ca48afdb09b47ff372a5b85dd621@mail.gmail.com>
Message-ID: <3C4F59E8-519A-4BEE-A732-A271737AF073@cs.usfca.edu>

We can keep maven support for the tools, but that doesn't mean we have to use maven ourselves for building right? In other words we need to support plug-ins at the very least.

Ter
On Mar 31, 2011, at 6:49 AM, Jim Idle wrote:

> Shall I create the Maven build or are you throwing Maven out? ;-)
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Terence Parr
>> Sent: Sunday, March 27, 2011 12:55 PM
>> To: stringtemplate-interest List
>> Cc: antlr-interest Interest
>> Subject: [antlr-interest] Release of StringTemplate 4.0
>> 
>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode
>> interpreter. Is much cleaner and faster than 3.0. enjoy.
>> 
>> http://www.stringtemplate.org/download.html
>> 
>> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
>> 
>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>> 
>> The GUI Visualizer / inspector is very useful; check it out:
>> 
>> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
>> 
>> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,
>> Benjamin Niemann, and Alan Condit.
>> 
>> A big thanks to Udo Borkowski for his incredible bug catching abilities
>> and his suggestions!
>> 
>> Terence
>> ANTLR project supreme dictator for life
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Apr  2 11:13:59 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Apr 2011 11:13:59 -0700
Subject: [antlr-interest] [stringtemplate-interest] Release of
	StringTemplate 4.0
In-Reply-To: <AANLkTi=b6-yOzqrysNON93EajW_HWrgH_r1VYUC55NL7@mail.gmail.com>
References: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
	<8a78c052cb47c0dead2630d968163578@mail.gmail.com>
	<AANLkTi=b6-yOzqrysNON93EajW_HWrgH_r1VYUC55NL7@mail.gmail.com>
Message-ID: <7428D380-5C70-4A71-9273-C56DBD10EFCB@cs.usfca.edu>

Yep, weShould definitely keep a plug-in together. There's no need for mvn with STv4 since its library not a tool like ANTLR.

On Mar 31, 2011, at 4:13 PM, Michael Bedward wrote:

> Hello all,
> 
> I'm following this thread with interest and keeping my fingers crossed
> that this isn't the start of the end for Maven support.


From parrt at cs.usfca.edu  Sat Apr  2 11:16:23 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 2 Apr 2011 11:16:23 -0700
Subject: [antlr-interest] [stringtemplate-interest] Release of
	StringTemplate 4.0
In-Reply-To: <8a78c052cb47c0dead2630d968163578@mail.gmail.com>
References: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
	<8a78c052cb47c0dead2630d968163578@mail.gmail.com>
Message-ID: <69E63B4F-ACE6-4367-B68E-49CF5AB9446D@cs.usfca.edu>

Hi Jim,Yes that's an interesting point. If I reorganized source code, making the plug-in for mvn could be a serious hassle. Gr...I really hate the directory structure. it gives me gas every time I have to move around in the directory structure. I'll think about this.

As you say, however, we can simply create a artifacts from the jars. that way I can do whatever I want on the inside and simply provide to you the appropriate jar for packaging up as a maven plug-in. would that make everybody happy?

Ter

On Mar 31, 2011, at 8:44 AM, Jim Idle wrote:

> Cheers, it saves me configuring build helper. However, it isn't so much
> that, as whether we are supporting Maven philosophically or not. If Ter
> does not want to build with it, then I will be forever playing catch up
> and wrangling builds together. The build helper is fine but then we are
> already heading away from the structure etc. I like Maven a lot, but you
> have to buy in to it really.
> 
> So, I wonder if we don't just create the artifacts directly from the Jars
> the Ter builds and deploy them. We lose the jar with dependencies though,
> which is a shame.
> 
> So, if we could decide not to randomly change the build around and add
> weird scripts to ANT, then I can keep it going. But even keeping the
> plugin going is going to be a pain if I have to keep deploying the jars,
> and then because we are not eating our own dog food, we will keep breaking
> the plugin by changing the options without changing the plugin and so on
> etc...
> 
> However, we should move to maven 3 for version 4 of ST and ANTLR if we are
> going to keep going.
> 
> 
> Jim
> 
>> -----Original Message-----
>> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
>> Sent: Thursday, March 31, 2011 8:21 AM
>> To: 'Jim Idle'; 'stringtemplate-interest List'
>> Cc: 'antlr-interest Interest'
>> Subject: RE: [stringtemplate-interest] [antlr-interest] Release of
>> StringTemplate 4.0
>> 
>> I already created one (attached) if you want to use it as a start
>> point. :) It uses build-helper-maven-plugin to avoid having to
>> restructure the directories in P4.
>> 
>> Sam
>> 
>> -----Original Message-----
>> From: stringtemplate-interest-bounces at antlr.org
>> [mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Jim
>> Idle
>> Sent: Thursday, March 31, 2011 8:49 AM
>> To: stringtemplate-interest List
>> Cc: antlr-interest Interest
>> Subject: Re: [stringtemplate-interest] [antlr-interest] Release of
>> StringTemplate 4.0
>> 
>> Shall I create the Maven build or are you throwing Maven out? ;-)
>> 
>> Jim
>> 
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Terence Parr
>>> Sent: Sunday, March 27, 2011 12:55 PM
>>> To: stringtemplate-interest List
>>> Cc: antlr-interest Interest
>>> Subject: [antlr-interest] Release of StringTemplate 4.0
>>> 
>>> Get it while it's hot. 4.0 is a complete rewrite as a bytecode
>>> interpreter. Is much cleaner and faster than 3.0. enjoy.
>>> 
>>> http://www.stringtemplate.org/download.html
>>> 
>>> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
>>> 
>>> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
>>> 
>>> The GUI Visualizer / inspector is very useful; check it out:
>>> 
>>> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
>>> 
>>> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,
>>> Benjamin Niemann, and Alan Condit.
>>> 
>>> A big thanks to Udo Borkowski for his incredible bug catching
>>> abilities and his suggestions!
>>> 
>>> Terence
>>> ANTLR project supreme dictator for life
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>> interest/your-
>>> email-address
>> _______________________________________________
>> stringtemplate-interest mailing list
>> stringtemplate-interest at antlr.org
>> http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Sat Apr  2 12:01:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 2 Apr 2011 12:01:10 -0700
Subject: [antlr-interest] Release of StringTemplate 4.0
In-Reply-To: <3C4F59E8-519A-4BEE-A732-A271737AF073@cs.usfca.edu>
References: <7BEF6A0B-3D23-4D68-89B2-2C586E13A114@cs.usfca.edu>
	<13b9ca48afdb09b47ff372a5b85dd621@mail.gmail.com>
	<3C4F59E8-519A-4BEE-A732-A271737AF073@cs.usfca.edu>
Message-ID: <93b6d7bca90fd895d04c4ea947853ab8@mail.gmail.com>

Yeah but the problem is that you will add some option or other and not
realize you broke the Maven stuff, and then I will play catch up. I guess
that we can make it work though - I don't want to lose the Maven stuff.

Jim

> -----Original Message-----
> From: Terence Parr [mailto:parrt at cs.usfca.edu]
> Sent: Saturday, April 02, 2011 11:10 AM
> To: Jim Idle
> Cc: stringtemplate-interest List; antlr-interest Interest
> Subject: Re: [antlr-interest] Release of StringTemplate 4.0
>
> We can keep maven support for the tools, but that doesn't mean we have
> to use maven ourselves for building right? In other words we need to
> support plug-ins at the very least.
>
> Ter
> On Mar 31, 2011, at 6:49 AM, Jim Idle wrote:
>
> > Shall I create the Maven build or are you throwing Maven out? ;-)
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Terence Parr
> >> Sent: Sunday, March 27, 2011 12:55 PM
> >> To: stringtemplate-interest List
> >> Cc: antlr-interest Interest
> >> Subject: [antlr-interest] Release of StringTemplate 4.0
> >>
> >> Get it while it's hot. 4.0 is a complete rewrite as a bytecode
> >> interpreter. Is much cleaner and faster than 3.0. enjoy.
> >>
> >> http://www.stringtemplate.org/download.html
> >>
> >> http://www.antlr.org/wiki/display/ST4/StringTemplate+4+Documentation
> >>
> >> http://www.antlr.org/wiki/display/ST4/Differences+between+v3+and+v4
> >>
> >> The GUI Visualizer / inspector is very useful; check it out:
> >>
> >> http://www.antlr.org/wiki/display/ST4/StringTemplate+Inspector+GUI
> >>
> >> Ports to C#, Python, Objective-C on the way thanks to Sam Harwell,
> >> Benjamin Niemann, and Alan Condit.
> >>
> >> A big thanks to Udo Borkowski for his incredible bug catching
> >> abilities and his suggestions!
> >>
> >> Terence
> >> ANTLR project supreme dictator for life
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address

From michael.bedward at gmail.com  Sat Apr  2 18:14:21 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sun, 3 Apr 2011 11:14:21 +1000
Subject: [antlr-interest] [stringtemplate-interest] Release of
 StringTemplate 4.0
In-Reply-To: <7428D380-5C70-4A71-9273-C56DBD10EFCB@cs.usfca.edu>
References: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
	<8a78c052cb47c0dead2630d968163578@mail.gmail.com>
	<AANLkTi=b6-yOzqrysNON93EajW_HWrgH_r1VYUC55NL7@mail.gmail.com>
	<7428D380-5C70-4A71-9273-C56DBD10EFCB@cs.usfca.edu>
Message-ID: <BANLkTi=5SCB3A6vjDjat9r8vixQ2CFV5Vw@mail.gmail.com>

On 3 April 2011 04:13, Terence Parr <parrt at cs.usfca.edu> wrote:
> There's no need for mvn with STv4 since its library not a tool like ANTLR.

It has to be deployed to Maven Central though

Michael

From sharwell at pixelminegames.com  Sat Apr  2 19:48:06 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 2 Apr 2011 21:48:06 -0500
Subject: [antlr-interest] [CSharp3] TraceIn/TraceOut and
	ANTLR_TRACE	conditional
In-Reply-To: <29580184.16.1301762520850.JavaMail.pitsie@devleno>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608EEC2@sun.epirion.local>
	<29580184.16.1301762520850.JavaMail.pitsie@devleno>
Message-ID: <024101cbf1a9$904f8a50$b0ee9ef0$@pixelminegames.com>

Hi Peter,

The TraceIn/TraceOut methods in Parser and BaseRecognizer have different
signatures (2 parameters vs. 3). The code generator emits calls to the one
in Parser, which is supposed to forward the calls to BaseRecognizer. From
what I can tell from the code generation templates, the methods in
BaseRecognizer should not have the ConditionalAttribute applied to them.
I'll remove the attribute for the next build, which will restore the
expected behavior to the methods in Parser and Lexer.

Thanks for the report. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter Kooiman
Sent: Saturday, April 02, 2011 11:42 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [CSharp3] TraceIn/TraceOut and ANTLR_TRACE
conditional

After struggling a bit to get tracing working in my parser by defining
ANTLR_TRACE and getting nowhere, I realized the following, which may or may
not be intended: 

Both the Parser and Lexer classes inherit from BaseRecognizer and override
(well, hide) the BaseRecognizer TraceIn and TraceOut methods. These
overrides call base.Traceout / base.TraceIn, BUT, since during library
compilation ANTLR_TRACE is not defined, these base method calls become
no-ops. The result is, that while BaseRecognizer has usable TraceIn and
TraceOut methods, the TraceIn and TraceOut methods of both Parser and Lexer
become essentially no-ops. 

This is the MSIL for Parser::TraceIn in Antlr3.Runtime.dll: 

.method public hidebysig newslot virtual instance void TraceIn(string
ruleName,
int32 ruleIndex) cil managed
{
.custom instance void
[mscorlib]System.Diagnostics.ConditionalAttribute::.ctor(string) = ( 01 00
0B 41 4E 54 4C 52 5F 54 52 41 43 45 00 00 ) // ...ANTLR_TRACE.. 
// Code size 1 (0x1)
.maxstack 8
IL_0000: ret
} // end of method Parser::TraceIn 

Fixed easily enough by overriding TraceIn/TraceOut in my parser, but a bit
of a pain to figure out, so I thought I'd at least document it here. 

Regards
Peter 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From point14 at magma.ca  Sun Apr  3 19:27:47 2011
From: point14 at magma.ca (Martin d'Anjou)
Date: Sun, 03 Apr 2011 22:27:47 -0400
Subject: [antlr-interest] antlr API: two different URLs?
Message-ID: <4D992CA3.3080008@magma.ca>

Hi,

Which one is the correct one for the current ANTLR release?

1) http://www.antlr.org/api/ActionScript/class-summary.html

2) http://www.antlr.org/api/Java/annotated.html

Thanks,
Martin

From point14 at magma.ca  Sun Apr  3 19:51:31 2011
From: point14 at magma.ca (Martin d'Anjou)
Date: Sun, 03 Apr 2011 22:51:31 -0400
Subject: [antlr-interest] Q: how to incorporate a preprocessor in the flow?
Message-ID: <4D993233.90104@magma.ca>

Hello,

I am trying to find a way to incorporate a preprocessor in the ANTLR 
flow. I thought of doing this before the lexer, but I need to tokenize 
the incoming char stream for macro substitution to be easy. I thought of 
doing it between the lexer and the parser, and replace the preprocessor 
tokens with their expansion before feeding the token stream to the 
parser, so I guess I would end up using something like the 
TokenRewriteStream??? Can someone steer me in the right direction 
please? Or should I be using lexer rule actions? In which case, any 
example on how to access the token stream of the replacement token list 
of an identifier? Too many questions sorry.

The language I am hoping to tokenize is SystemVerilog and has C-like 
preprocessor macros (`include, `ifdef, `define NAME(params,...), token 
concatenation, etc.).

Regards,
Martin


From asicaddress at gmail.com  Sun Apr  3 22:13:14 2011
From: asicaddress at gmail.com (A Z)
Date: Mon, 4 Apr 2011 00:13:14 -0500
Subject: [antlr-interest] Q: how to incorporate a preprocessor in the
	flow?
In-Reply-To: <4D993233.90104@magma.ca>
References: <4D993233.90104@magma.ca>
Message-ID: <BANLkTi=VfZ2S+Kag4xb3Sx_G62+nhd7LmQ@mail.gmail.com>

Hi Martin,

  I just completed an SV preprocessor which can parse UVM 1.0 successfully.
After 2 revisions I settled on a completely separate preprocessor(lexer and
parser). As you saw, you need to tokenize the macro_text in order to easily
support macros with arguments and detect the three escaped tokens `", `\`"
and ``. I'm not sure how well a lexer only approach could handle cases where
a macro substitution can merge text with a previously lexed token. The
separate approach still has flaws, such as good error reporting. Of course I
could be missing an obvious easy solution.



On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou <point14 at magma.ca> wrote:

> Hello,
>
> I am trying to find a way to incorporate a preprocessor in the ANTLR
> flow. I thought of doing this before the lexer, but I need to tokenize
> the incoming char stream for macro substitution to be easy. I thought of
> doing it between the lexer and the parser, and replace the preprocessor
> tokens with their expansion before feeding the token stream to the
> parser, so I guess I would end up using something like the
> TokenRewriteStream??? Can someone steer me in the right direction
> please? Or should I be using lexer rule actions? In which case, any
> example on how to access the token stream of the replacement token list
> of an identifier? Too many questions sorry.
>
> The language I am hoping to tokenize is SystemVerilog and has C-like
> preprocessor macros (`include, `ifdef, `define NAME(params,...), token
> concatenation, etc.).
>
> Regards,
> Martin
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From agupta213 at csc.com  Mon Apr  4 03:10:59 2011
From: agupta213 at csc.com (Ankit A Gupta)
Date: Mon, 4 Apr 2011 15:40:59 +0530
Subject: [antlr-interest] Need pointers for tools which convert ANTLR v2 to
	v3
Message-ID: <OF820728A2.8AF6509C-ON65257868.002AAD03-65257868.00380D5D@csc.com>

Hi, I was using the tool mentioned at (
http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3
) for converting .g file from v2 to v3. However, the tool mentioned on it 
is not reliable and stable. 
If anybody can provide pointers to a more robust conversion tool which 
converts grammers from v2 to v3, that will be grateful.

Regards,
Ankit 

From sharwell at pixelminegames.com  Mon Apr  4 06:10:05 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 4 Apr 2011 08:10:05 -0500
Subject: [antlr-interest] Need pointers for tools which convert ANTLR v2
	to v3
Message-ID: <02c101cbf2c9$a02ad120$e0807360$@pixelminegames.com>

Considering the effort it took to migrate the ANTLR core grammars from v2 to
v3 over the past week, I'm pretty sure such a tool doesn't exist.

In many ways the conversion isn't too difficult, but converting anything
involving AST generation or manipulation can be quite challenging.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ankit A Gupta
Sent: Monday, April 04, 2011 5:11 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Need pointers for tools which convert ANTLR v2 to
v3

Hi, I was using the tool mentioned at (
http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+ANTLR+3
) for converting .g file from v2 to v3. However, the tool mentioned on it is
not reliable and stable. 
If anybody can provide pointers to a more robust conversion tool which
converts grammers from v2 to v3, that will be grateful.

Regards,
Ankit 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Mon Apr  4 06:25:03 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 4 Apr 2011 08:25:03 -0500
Subject: [antlr-interest] Q: how to incorporate a preprocessor in the
	flow?
Message-ID: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>

I used a hand-crafted implementation of TokenSource between the lexer and
parser. In the preprocessor, whenever I manipulated a token I used a new
token class derived from CommonToken (call it SubstitutedToken) which
contained a linked list leading from the effective position in the stream
(stored in CommonToken) all the way back to the original location (file and
position) of the token definition. When a CommonToken substitution occurs,
the linked list has one node containing the original source position where
defined. Whenever a SubstitutedToken substitution occurs, a new node for the
token's previous effective position is added to the linked list and that new
head pointer is stored in the new token.

`define x 3
`define y `x
`y

In this case, token `y is eventually replaced with a SubstitutedToken which
appears at (line 2, column 1, length 1, text "3") containing the following
linked list:

Line 3, column 1, length 2 (list head, the location where `y was substituted
with `x)
Line 2, column 11, length 2 (the location where `x was substituted with '3')
Line 1, column 11, length 1 (the actual source location where the token '3'
is defined)

This list allows true relative ordering of all tokens in the processed
source: when two tokens appear to be at the same location in the
preprocessed stream, you simply compare the positions of the first node in
the position list.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
Sent: Monday, April 04, 2011 12:13 AM
To: Martin d'Anjou
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in the
flow?

Hi Martin,

  I just completed an SV preprocessor which can parse UVM 1.0 successfully.
After 2 revisions I settled on a completely separate preprocessor(lexer and
parser). As you saw, you need to tokenize the macro_text in order to easily
support macros with arguments and detect the three escaped tokens `", `\`"
and ``. I'm not sure how well a lexer only approach could handle cases where
a macro substitution can merge text with a previously lexed token. The
separate approach still has flaws, such as good error reporting. Of course I
could be missing an obvious easy solution.



On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou <point14 at magma.ca> wrote:

> Hello,
>
> I am trying to find a way to incorporate a preprocessor in the ANTLR 
> flow. I thought of doing this before the lexer, but I need to tokenize 
> the incoming char stream for macro substitution to be easy. I thought 
> of doing it between the lexer and the parser, and replace the 
> preprocessor tokens with their expansion before feeding the token 
> stream to the parser, so I guess I would end up using something like 
> the TokenRewriteStream??? Can someone steer me in the right direction 
> please? Or should I be using lexer rule actions? In which case, any 
> example on how to access the token stream of the replacement token 
> list of an identifier? Too many questions sorry.
>
> The language I am hoping to tokenize is SystemVerilog and has C-like 
> preprocessor macros (`include, `ifdef, `define NAME(params,...), token 
> concatenation, etc.).
>
> Regards,
> Martin
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jdoege at gmail.com  Mon Apr  4 08:18:28 2011
From: jdoege at gmail.com (Jason Doege)
Date: Mon, 4 Apr 2011 10:18:28 -0500
Subject: [antlr-interest] Trouble with spaces
Message-ID: <BANLkTinPbKT4Mmmn07C5_tX0DyW-4OHsug@mail.gmail.com>

Hi All,

I am (we are) having a bit of trouble with spaces in a grammar.

What should be parseable is:

Alias b = in[4] {}

But what the generated parser seems to require to parse correctly is:

Alias b = in[4] { }

Here is the production that is supposed to parse it:

alias_def                : 'Alias' alias_name '=' concat_hier_data_signal (
                             ';' |
                             ('{' ('RefEnum' enum_name ';')* '}' )
                           ) ;

Do you have any idea why a space is required between the '{'  '}' ?

To the best of my knowledge, I have no token that specifies '{}' in the
grammar.

Any suggestions would be welcome.

We are using the latest and greatest ANTLR.

--Jason Doege
jdoege at gmail.com

From sharwell at pixelminegames.com  Mon Apr  4 09:58:15 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 4 Apr 2011 11:58:15 -0500
Subject: [antlr-interest] Examples of semantic predicates with extremely
	long generated code
Message-ID: <02e901cbf2e9$7e3f71e0$7abe55a0$@pixelminegames.com>

Hi everyone,

For certain cases of semantic predicates, ANTLR generates some *extremely*
long, complicated, and redundant conditionals in the output code. I've been
working on resolving this issue, and I'm looking for some examples of these
grammars to make sure my updates properly reduce these conditionals. Does
anyone have a sample they can send me?

Thanks!
Sam


From parrt at cs.usfca.edu  Mon Apr  4 10:01:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Apr 2011 10:01:36 -0700
Subject: [antlr-interest] Examples of semantic predicates with extremely
	long generated code
In-Reply-To: <02e901cbf2e9$7e3f71e0$7abe55a0$@pixelminegames.com>
References: <02e901cbf2e9$7e3f71e0$7abe55a0$@pixelminegames.com>
Message-ID: <59E4768D-00A8-49E3-9A27-2D499809784D@cs.usfca.edu>

Looks like I have three different bugs entered

http://www.antlr.org/jira/browse/ANTLR-393
http://www.antlr.org/jira/browse/ANTLR-430
http://www.antlr.org/jira/browse/ANTLR-245

 I recall that at least one of them had a small example.
T
On Apr 4, 2011, at 9:58 AM, Sam Harwell wrote:

> Hi everyone,
> 
> For certain cases of semantic predicates, ANTLR generates some *extremely*
> long, complicated, and redundant conditionals in the output code. I've been
> working on resolving this issue, and I'm looking for some examples of these
> grammars to make sure my updates properly reduce these conditionals. Does
> anyone have a sample they can send me?
> 
> Thanks!
> Sam
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Mon Apr  4 10:23:40 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 4 Apr 2011 12:23:40 -0500
Subject: [antlr-interest] Examples of semantic predicates with extremely
	long generated code
Message-ID: <02ea01cbf2ed$0aacf870$2006e950$@pixelminegames.com>

For the example at the bottom of ANTLR-245, I get the following condition in
args, element, and element2 (respectively):

!((((true)||(false))))

!((false))

!((true))

The tool doesn't have target language analysis, so true and false here might
as well be X and Y.

I'll work on getting this into the Java version after some more testing.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, April 04, 2011 12:02 PM
To: antlr-interest Interest
Subject: Re: [antlr-interest] Examples of semantic predicates with extremely
long generated code

Looks like I have three different bugs entered

http://www.antlr.org/jira/browse/ANTLR-393
http://www.antlr.org/jira/browse/ANTLR-430
http://www.antlr.org/jira/browse/ANTLR-245

 I recall that at least one of them had a small example.
T
On Apr 4, 2011, at 9:58 AM, Sam Harwell wrote:

> Hi everyone,
> 
> For certain cases of semantic predicates, ANTLR generates some 
> *extremely* long, complicated, and redundant conditionals in the 
> output code. I've been working on resolving this issue, and I'm 
> looking for some examples of these grammars to make sure my updates 
> properly reduce these conditionals. Does anyone have a sample they can
send me?
> 
> Thanks!
> Sam
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From cummings at kjchome.homeip.net  Mon Apr  4 10:23:52 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Mon, 04 Apr 2011 13:23:52 -0400
Subject: [antlr-interest] Trouble with spaces
In-Reply-To: <BANLkTinPbKT4Mmmn07C5_tX0DyW-4OHsug@mail.gmail.com>
References: <BANLkTinPbKT4Mmmn07C5_tX0DyW-4OHsug@mail.gmail.com>
Message-ID: <4D99FEA8.5070609@kjchome.homeip.net>

On 04/04/2011 11:18 AM, Jason Doege wrote:
> Hi All,
> 
> I am (we are) having a bit of trouble with spaces in a grammar.
> 
> What should be parseable is:
> 
> Alias b = in[4] {}
> 
> But what the generated parser seems to require to parse correctly is:
> 
> Alias b = in[4] { }
> 
> Here is the production that is supposed to parse it:
> 
> alias_def                : 'Alias' alias_name '=' concat_hier_data_signal (
>                              ';' |
>                              ('{' ('RefEnum' enum_name ';')* '}' )
>                            ) ;
> 
> Do you have any idea why a space is required between the '{'  '}' ?

Not without seeing *all* of your token rules....
(You *do* have rules for your tokens, right?  Either Lexer productions
or in a @tokens block?)

> To the best of my knowledge, I have no token that specifies '{}' in the
> grammar.

Please show us.

> Any suggestions would be welcome.
> 
> We are using the latest and greatest ANTLR.
> 
> --Jason Doege
> jdoege at gmail.com

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From lgcraymer at yahoo.com  Mon Apr  4 10:49:37 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 4 Apr 2011 10:49:37 -0700 (PDT)
Subject: [antlr-interest] Examples of semantic predicates with extremely
	long generated code
In-Reply-To: <02ea01cbf2ed$0aacf870$2006e950$@pixelminegames.com>
References: <02ea01cbf2ed$0aacf870$2006e950$@pixelminegames.com>
Message-ID: <153824.30060.qm@web55904.mail.re3.yahoo.com>

Sam--

Are you working on the SemanticContext classes for this?  That seems to be where 
the problem originates--no effort is made to refactor generated trees.

--Loring



----- Original Message ----
> From: Sam Harwell <sharwell at pixelminegames.com>
> To: Terence Parr <parrt at cs.usfca.edu>; antlr-interest Interest 
><antlr-interest at antlr.org>
> Sent: Mon, April 4, 2011 10:23:40 AM
> Subject: Re: [antlr-interest] Examples of semantic predicates with extremely 
>long generated code
> 
> For the example at the bottom of ANTLR-245, I get the following condition  in
> args, element, and element2  (respectively):
> 
> !((((true)||(false))))
> 
> !((false))
> 
> !((true))
> 
> The  tool doesn't have target language analysis, so true and false here might
> as  well be X and Y.
> 
> I'll work on getting this into the Java version after  some more testing.
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org]  On Behalf Of Terence Parr
> Sent: Monday, April 04, 2011 12:02 PM
> To:  antlr-interest Interest
> Subject: Re: [antlr-interest] Examples of semantic  predicates with extremely
> long generated code
> 
> Looks like I have three  different bugs entered
> 
> http://www.antlr.org/jira/browse/ANTLR-393
> http://www.antlr.org/jira/browse/ANTLR-430
> http://www.antlr.org/jira/browse/ANTLR-245
> 
>  I recall that at least  one of them had a small example.
> T
> On Apr 4, 2011, at 9:58 AM, Sam Harwell  wrote:
> 
> > Hi everyone,
> > 
> > For certain cases of semantic  predicates, ANTLR generates some 
> > *extremely* long, complicated, and  redundant conditionals in the 
> > output code. I've been working on  resolving this issue, and I'm 
> > looking for some examples of these  grammars to make sure my updates 
> > properly reduce these conditionals.  Does anyone have a sample they can
> send me?
> > 
> > Thanks!
> >  Sam
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: 
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From parrt at cs.usfca.edu  Mon Apr  4 11:11:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Apr 2011 11:11:26 -0700
Subject: [antlr-interest] [stringtemplate-interest] Release of
	StringTemplate 4.0
In-Reply-To: <BANLkTi=5SCB3A6vjDjat9r8vixQ2CFV5Vw@mail.gmail.com>
References: <011601cbefb7$4c601510$e5203f30$@pixelminegames.com>
	<8a78c052cb47c0dead2630d968163578@mail.gmail.com>
	<AANLkTi=b6-yOzqrysNON93EajW_HWrgH_r1VYUC55NL7@mail.gmail.com>
	<7428D380-5C70-4A71-9273-C56DBD10EFCB@cs.usfca.edu>
	<BANLkTi=5SCB3A6vjDjat9r8vixQ2CFV5Vw@mail.gmail.com>
Message-ID: <C21A24FC-4C34-437A-BA4E-D02668EF042C@cs.usfca.edu>

That should be okay.  after Jim creates the plug-in, he can deploy it.
Ter
On Apr 2, 2011, at 6:14 PM, Michael Bedward wrote:

> On 3 April 2011 04:13, Terence Parr <parrt at cs.usfca.edu> wrote:
>> There's no need for mvn with STv4 since its library not a tool like ANTLR.
> 
> It has to be deployed to Maven Central though
> 
> Michael


From sharwell at pixelminegames.com  Mon Apr  4 11:17:57 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 4 Apr 2011 13:17:57 -0500
Subject: [antlr-interest] Examples of semantic predicates with extremely
	long generated code
In-Reply-To: <153824.30060.qm@web55904.mail.re3.yahoo.com>
References: <02ea01cbf2ed$0aacf870$2006e950$@pixelminegames.com>
	<153824.30060.qm@web55904.mail.re3.yahoo.com>
Message-ID: <02f301cbf2f4$a08d7c00$e1a87400$@pixelminegames.com>

Hi Loring,

Yes, all my changes are in SemanticContext.cs (which will be
SemanticContext.java in the Java version).

Sam

-----Original Message-----
From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
Sent: Monday, April 04, 2011 12:50 PM
To: Sam Harwell; Terence Parr; antlr-interest Interest
Subject: Re: [antlr-interest] Examples of semantic predicates with extremely
long generated code

Sam--

Are you working on the SemanticContext classes for this?  That seems to be
where the problem originates--no effort is made to refactor generated trees.

--Loring



----- Original Message ----
> From: Sam Harwell <sharwell at pixelminegames.com>
> To: Terence Parr <parrt at cs.usfca.edu>; antlr-interest Interest 
><antlr-interest at antlr.org>
> Sent: Mon, April 4, 2011 10:23:40 AM
> Subject: Re: [antlr-interest] Examples of semantic predicates with 
>extremely long generated code
> 
> For the example at the bottom of ANTLR-245, I get the following 
> condition  in args, element, and element2  (respectively):
> 
> !((((true)||(false))))
> 
> !((false))
> 
> !((true))
> 
> The  tool doesn't have target language analysis, so true and false 
> here might as  well be X and Y.
> 
> I'll work on getting this into the Java version after  some more testing.
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org]  On Behalf Of Terence Parr
> Sent: Monday, April 04, 2011 12:02 PM
> To:  antlr-interest Interest
> Subject: Re: [antlr-interest] Examples of semantic  predicates with 
> extremely long generated code
> 
> Looks like I have three  different bugs entered
> 
> http://www.antlr.org/jira/browse/ANTLR-393
> http://www.antlr.org/jira/browse/ANTLR-430
> http://www.antlr.org/jira/browse/ANTLR-245
> 
>  I recall that at least  one of them had a small example.
> T
> On Apr 4, 2011, at 9:58 AM, Sam Harwell  wrote:
> 
> > Hi everyone,
> > 
> > For certain cases of semantic  predicates, ANTLR generates some
> > *extremely* long, complicated, and  redundant conditionals in the 
> > output code. I've been working on  resolving this issue, and I'm 
> > looking for some examples of these  grammars to make sure my updates 
> > properly reduce these conditionals.  Does anyone have a sample they 
> > can
> send me?
> > 
> > Thanks!
> >  Sam
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: 
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addre
> > ss
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From parrt at cs.usfca.edu  Mon Apr  4 11:18:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Apr 2011 11:18:08 -0700
Subject: [antlr-interest] Examples of semantic predicates with extremely
	long generated code
In-Reply-To: <153824.30060.qm@web55904.mail.re3.yahoo.com>
References: <02ea01cbf2ed$0aacf870$2006e950$@pixelminegames.com>
	<153824.30060.qm@web55904.mail.re3.yahoo.com>
Message-ID: <6B39CB22-2122-4641-A876-09CCADD23226@cs.usfca.edu>

If Click, it definitely tries to avoid or/and of known identity operations. They just don't work ;)
Ter
On Apr 4, 2011, at 10:49 AM, Loring Craymer wrote:

> Sam--
> 
> Are you working on the SemanticContext classes for this?  That seems to be where 
> the problem originates--no effort is made to refactor generated trees.
> 
> --Loring
> 
> 
> 
> ----- Original Message ----
>> From: Sam Harwell <sharwell at pixelminegames.com>
>> To: Terence Parr <parrt at cs.usfca.edu>; antlr-interest Interest 
>> <antlr-interest at antlr.org>
>> Sent: Mon, April 4, 2011 10:23:40 AM
>> Subject: Re: [antlr-interest] Examples of semantic predicates with extremely 
>> long generated code
>> 
>> For the example at the bottom of ANTLR-245, I get the following condition  in
>> args, element, and element2  (respectively):
>> 
>> !((((true)||(false))))
>> 
>> !((false))
>> 
>> !((true))
>> 
>> The  tool doesn't have target language analysis, so true and false here might
>> as  well be X and Y.
>> 
>> I'll work on getting this into the Java version after  some more testing.
>> 
>> Sam
>> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org]  On Behalf Of Terence Parr
>> Sent: Monday, April 04, 2011 12:02 PM
>> To:  antlr-interest Interest
>> Subject: Re: [antlr-interest] Examples of semantic  predicates with extremely
>> long generated code
>> 
>> Looks like I have three  different bugs entered
>> 
>> http://www.antlr.org/jira/browse/ANTLR-393
>> http://www.antlr.org/jira/browse/ANTLR-430
>> http://www.antlr.org/jira/browse/ANTLR-245
>> 
>> I recall that at least  one of them had a small example.
>> T
>> On Apr 4, 2011, at 9:58 AM, Sam Harwell  wrote:
>> 
>>> Hi everyone,
>>> 
>>> For certain cases of semantic  predicates, ANTLR generates some 
>>> *extremely* long, complicated, and  redundant conditionals in the 
>>> output code. I've been working on  resolving this issue, and I'm 
>>> looking for some examples of these  grammars to make sure my updates 
>>> properly reduce these conditionals.  Does anyone have a sample they can
>> send me?
>>> 
>>> Thanks!
>>> Sam
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 


From point14 at magma.ca  Mon Apr  4 18:59:40 2011
From: point14 at magma.ca (Martin d'Anjou)
Date: Mon, 04 Apr 2011 21:59:40 -0400
Subject: [antlr-interest] Q: how to incorporate a preprocessor in the
 flow?
In-Reply-To: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>
References: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>
Message-ID: <4D9A778C.8020100@magma.ca>

Hi,

Thanks to both of you for sharing your approaches. Right now I am 
pondering how to alter the sequence of tokens before they hit the 
parser. Intuitively I want to have three processing units (lexer, 
pre-processor, parser) connected together through io pipes of tokens 
(e.g. token fifos), but this is not how ANTLR was architected (it's how 
I would have done it in hardware though!).

Martin


On 11-04-04 09:25 AM, Sam Harwell wrote:
> I used a hand-crafted implementation of TokenSource between the lexer and
> parser. In the preprocessor, whenever I manipulated a token I used a new
> token class derived from CommonToken (call it SubstitutedToken) which
> contained a linked list leading from the effective position in the stream
> (stored in CommonToken) all the way back to the original location (file and
> position) of the token definition. When a CommonToken substitution occurs,
> the linked list has one node containing the original source position where
> defined. Whenever a SubstitutedToken substitution occurs, a new node for the
> token's previous effective position is added to the linked list and that new
> head pointer is stored in the new token.
>
> `define x 3
> `define y `x
> `y
>
> In this case, token `y is eventually replaced with a SubstitutedToken which
> appears at (line 2, column 1, length 1, text "3") containing the following
> linked list:
>
> Line 3, column 1, length 2 (list head, the location where `y was substituted
> with `x)
> Line 2, column 11, length 2 (the location where `x was substituted with '3')
> Line 1, column 11, length 1 (the actual source location where the token '3'
> is defined)
>
> This list allows true relative ordering of all tokens in the processed
> source: when two tokens appear to be at the same location in the
> preprocessed stream, you simply compare the positions of the first node in
> the position list.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
> Sent: Monday, April 04, 2011 12:13 AM
> To: Martin d'Anjou
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in the
> flow?
>
> Hi Martin,
>
>    I just completed an SV preprocessor which can parse UVM 1.0 successfully.
> After 2 revisions I settled on a completely separate preprocessor(lexer and
> parser). As you saw, you need to tokenize the macro_text in order to easily
> support macros with arguments and detect the three escaped tokens `", `\`"
> and ``. I'm not sure how well a lexer only approach could handle cases where
> a macro substitution can merge text with a previously lexed token. The
> separate approach still has flaws, such as good error reporting. Of course I
> could be missing an obvious easy solution.
>
>
>
> On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou<point14 at magma.ca>  wrote:
>
>> Hello,
>>
>> I am trying to find a way to incorporate a preprocessor in the ANTLR
>> flow. I thought of doing this before the lexer, but I need to tokenize
>> the incoming char stream for macro substitution to be easy. I thought
>> of doing it between the lexer and the parser, and replace the
>> preprocessor tokens with their expansion before feeding the token
>> stream to the parser, so I guess I would end up using something like
>> the TokenRewriteStream??? Can someone steer me in the right direction
>> please? Or should I be using lexer rule actions? In which case, any
>> example on how to access the token stream of the replacement token
>> list of an identifier? Too many questions sorry.
>>
>> The language I am hoping to tokenize is SystemVerilog and has C-like
>> preprocessor macros (`include, `ifdef, `define NAME(params,...), token
>> concatenation, etc.).
>>
>> Regards,
>> Martin
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From poroshpathor81 at yahoo.com  Mon Apr  4 19:30:06 2011
From: poroshpathor81 at yahoo.com (poroshpathor poroshpathor)
Date: Mon, 4 Apr 2011 19:30:06 -0700 (PDT)
Subject: [antlr-interest] to stop walking into a subtree
Message-ID: <635967.882.qm@web38505.mail.mud.yahoo.com>

Hi, 

I am having a problem with ANTLR. I will be grateful to you if you can help me 
in this regard.

Following is a  rule at my tree grammar:

booleanexpression returns[boolean result] 
:  ^(AND op1 = booleanexpression op2 = booleanexpression) {if(op1&&op2) result = 
true; else result =false;}
;

My question:
I want to stop walking once I found op1 as false. In that case, I don't need to 
evaluate op2 anymore, the result is false anyway.
 
Is there any way to implement this?

Thanks in advance.
Porosh


      

From james_ladd at hotmail.com  Mon Apr  4 22:09:26 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Tue, 5 Apr 2011 15:09:26 +1000
Subject: [antlr-interest]  Examples of semantic predicates with ...
In-Reply-To: <mailman.1.1301943601.27003.antlr-interest@antlr.org>
References: <mailman.1.1301943601.27003.antlr-interest@antlr.org>
Message-ID: <BAY149-w47D95E428C505182EE194DEDA20@phx.gbl>


Hi Sam,

When I dealt with semantic predicates I put the unique prefix part of the rule into a predicate.
I put the predicate on those rules that ANTLR said were ambiguous.

For example:

| (binarySelector) => binarySelector variableName
| (MINUS MINUS) => specialBinarySelector variableName

I found out most of the information on predicates by googling "ANTLR Semantic Predicates"

Rgs, James. 

 		 	   		  

From james_ladd at hotmail.com  Mon Apr  4 22:11:14 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Tue, 5 Apr 2011 15:11:14 +1000
Subject: [antlr-interest] Significant space ...
In-Reply-To: <mailman.1.1301943601.27003.antlr-interest@antlr.org>
References: <mailman.1.1301943601.27003.antlr-interest@antlr.org>
Message-ID: <BAY149-w62CFDE4098CCA33BC6CEECEDA20@phx.gbl>


I'm thinking of modifying a grammar to treat some whitespace as significant.
Are there any general tips or advice people can give me for doing this with ANTLR?

Rgs, James.
 		 	   		  

From asicaddress at gmail.com  Mon Apr  4 23:15:42 2011
From: asicaddress at gmail.com (A Z)
Date: Tue, 5 Apr 2011 01:15:42 -0500
Subject: [antlr-interest] Q: how to incorporate a preprocessor in the
	flow?
In-Reply-To: <4D9A778C.8020100@magma.ca>
References: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>
	<4D9A778C.8020100@magma.ca>
Message-ID: <BANLkTikBzMp-qi1nn2cYBU=M4Xcq6WG6aA@mail.gmail.com>

I tried that approach when I first started with ANTLR but had difficulty
handling arbitrary token rearrangement. Early on I couldn't figure out how
to backtrack in the token stream in order to detect identifier construction
using macros. Something like the following requires that 'prefix' be lexed
again after macro substitution in order to detect if the string from suffix
and 'prefix' will be merged into one identifier.

define suffix(name) name
prefix`suffix

We use this often in RTL for bus port lists. Even though the spec seems to
explicitly disallow this, Modelsim and DC will accept it. Lexing twice
solves this case easily but now the tokens point to a non-existent source.


On Mon, Apr 4, 2011 at 8:59 PM, Martin d'Anjou <point14 at magma.ca> wrote:

> Hi,
>
> Thanks to both of you for sharing your approaches. Right now I am pondering
> how to alter the sequence of tokens before they hit the parser. Intuitively
> I want to have three processing units (lexer, pre-processor, parser)
> connected together through io pipes of tokens (e.g. token fifos), but this
> is not how ANTLR was architected (it's how I would have done it in hardware
> though!).
>
> Martin
>
>
>
> On 11-04-04 09:25 AM, Sam Harwell wrote:
>
>> I used a hand-crafted implementation of TokenSource between the lexer and
>> parser. In the preprocessor, whenever I manipulated a token I used a new
>> token class derived from CommonToken (call it SubstitutedToken) which
>> contained a linked list leading from the effective position in the stream
>> (stored in CommonToken) all the way back to the original location (file
>> and
>> position) of the token definition. When a CommonToken substitution occurs,
>> the linked list has one node containing the original source position where
>> defined. Whenever a SubstitutedToken substitution occurs, a new node for
>> the
>> token's previous effective position is added to the linked list and that
>> new
>> head pointer is stored in the new token.
>>
>> `define x 3
>> `define y `x
>> `y
>>
>> In this case, token `y is eventually replaced with a SubstitutedToken
>> which
>> appears at (line 2, column 1, length 1, text "3") containing the following
>> linked list:
>>
>> Line 3, column 1, length 2 (list head, the location where `y was
>> substituted
>> with `x)
>> Line 2, column 11, length 2 (the location where `x was substituted with
>> '3')
>> Line 1, column 11, length 1 (the actual source location where the token
>> '3'
>> is defined)
>>
>> This list allows true relative ordering of all tokens in the processed
>> source: when two tokens appear to be at the same location in the
>> preprocessed stream, you simply compare the positions of the first node in
>> the position list.
>>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
>> Sent: Monday, April 04, 2011 12:13 AM
>> To: Martin d'Anjou
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in the
>> flow?
>>
>> Hi Martin,
>>
>>   I just completed an SV preprocessor which can parse UVM 1.0
>> successfully.
>> After 2 revisions I settled on a completely separate preprocessor(lexer
>> and
>> parser). As you saw, you need to tokenize the macro_text in order to
>> easily
>> support macros with arguments and detect the three escaped tokens `", `\`"
>> and ``. I'm not sure how well a lexer only approach could handle cases
>> where
>> a macro substitution can merge text with a previously lexed token. The
>> separate approach still has flaws, such as good error reporting. Of course
>> I
>> could be missing an obvious easy solution.
>>
>>
>>
>> On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou<point14 at magma.ca>  wrote:
>>
>>  Hello,
>>>
>>> I am trying to find a way to incorporate a preprocessor in the ANTLR
>>> flow. I thought of doing this before the lexer, but I need to tokenize
>>> the incoming char stream for macro substitution to be easy. I thought
>>> of doing it between the lexer and the parser, and replace the
>>> preprocessor tokens with their expansion before feeding the token
>>> stream to the parser, so I guess I would end up using something like
>>> the TokenRewriteStream??? Can someone steer me in the right direction
>>> please? Or should I be using lexer rule actions? In which case, any
>>> example on how to access the token stream of the replacement token
>>> list of an identifier? Too many questions sorry.
>>>
>>> The language I am hoping to tokenize is SystemVerilog and has C-like
>>> preprocessor macros (`include, `ifdef, `define NAME(params,...), token
>>> concatenation, etc.).
>>>
>>> Regards,
>>> Martin
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>  List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>

From alexander.herz at mytum.de  Tue Apr  5 01:42:40 2011
From: alexander.herz at mytum.de (Alexander Herz)
Date: Tue, 05 Apr 2011 10:42:40 +0200
Subject: [antlr-interest]  antlr v4 wish list
In-Reply-To: <005c01cbee8a$b1a3ca30$14eb5e90$@pixelminegames.com>
References: <4D929678.8080308@magma.ca>
	<005c01cbee8a$b1a3ca30$14eb5e90$@pixelminegames.com>
Message-ID: <4D9AD600.1080506@mytum.de>


From sharwell at pixelminegames.com  Tue Apr  5 04:04:43 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 5 Apr 2011 06:04:43 -0500
Subject: [antlr-interest] Examples of semantic predicates with ...
In-Reply-To: <BAY149-w47D95E428C505182EE194DEDA20@phx.gbl>
References: <mailman.1.1301943601.27003.antlr-interest@antlr.org>
	<BAY149-w47D95E428C505182EE194DEDA20@phx.gbl>
Message-ID: <036d01cbf381$45072ce0$cf1586a0$@pixelminegames.com>

Hi James,

In this case, I'm dealing with semantic predicates of the form {...}? and
gated semantic predicates of the form {...}?=>. The ones you're using in
this case are syntactic predicates, which aren't processed by the Boolean
logic algorithm I've been working on recently.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of James Ladd
Sent: Tuesday, April 05, 2011 12:09 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Examples of semantic predicates with ...


Hi Sam,

When I dealt with semantic predicates I put the unique prefix part of the
rule into a predicate.
I put the predicate on those rules that ANTLR said were ambiguous.

For example:

| (binarySelector) => binarySelector variableName (MINUS MINUS) => 
| specialBinarySelector variableName

I found out most of the information on predicates by googling "ANTLR
Semantic Predicates"

Rgs, James. 

 		 	   		  

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From researcher0x00 at gmail.com  Tue Apr  5 07:26:17 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 5 Apr 2011 10:26:17 -0400
Subject: [antlr-interest] Which to use StringTempates version 3 or 4?
Message-ID: <BANLkTimQ3cu_G6DEAUDTpm8qisFN2iqYxg@mail.gmail.com>

I have the lexing, parsing and tree rewriting completed and will now be
doing a proof of concept for the next phase to see if StringTemplates will
work as expected. This will be my first use of StringTemplates. Since ST4 is
so new and is not documented in the books, should I start with ST3 or jump
into ST4?

Thanks, Eric

From sharwell at pixelminegames.com  Tue Apr  5 08:01:55 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 5 Apr 2011 10:01:55 -0500
Subject: [antlr-interest] Which to use StringTempates version 3 or 4?
In-Reply-To: <BANLkTimQ3cu_G6DEAUDTpm8qisFN2iqYxg@mail.gmail.com>
References: <BANLkTimQ3cu_G6DEAUDTpm8qisFN2iqYxg@mail.gmail.com>
Message-ID: <038501cbf3a2$686b5ff0$39421fd0$@pixelminegames.com>

ST4 is *tremendously* faster than ST3 and includes the most useful debugger
for any template engine I've seen to date. For a new application, it's not
even a question IMO - definitely ST4.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of The Researcher
Sent: Tuesday, April 05, 2011 9:26 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Which to use StringTempates version 3 or 4?

I have the lexing, parsing and tree rewriting completed and will now be
doing a proof of concept for the next phase to see if StringTemplates will
work as expected. This will be my first use of StringTemplates. Since ST4 is
so new and is not documented in the books, should I start with ST3 or jump
into ST4?

Thanks, Eric

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From researcher0x00 at gmail.com  Tue Apr  5 08:04:40 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 5 Apr 2011 11:04:40 -0400
Subject: [antlr-interest] Which to use StringTempates version 3 or 4?
In-Reply-To: <038501cbf3a2$686b5ff0$39421fd0$@pixelminegames.com>
References: <BANLkTimQ3cu_G6DEAUDTpm8qisFN2iqYxg@mail.gmail.com>
	<038501cbf3a2$686b5ff0$39421fd0$@pixelminegames.com>
Message-ID: <BANLkTi=mXRpsgu3BC0K9G0RYU1E41zb_PA@mail.gmail.com>

On Tue, Apr 5, 2011 at 11:01 AM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> ST4 is *tremendously* faster than ST3 and includes the most useful debugger
> for any template engine I've seen to date. For a new application, it's not
> even a question IMO - definitely ST4.
>
> Sam
>
Thanks,

Eric

From david.daeschler at gmail.com  Tue Apr  5 11:27:08 2011
From: david.daeschler at gmail.com (David Daeschler)
Date: Tue, 5 Apr 2011 14:27:08 -0400
Subject: [antlr-interest] Grammar not detecting stray syntax after certain
	valid blocks
Message-ID: <BANLkTi=PENLd22wUe13E0LBL3-V3KACpTg@mail.gmail.com>

Hello list,

I currently have a grammar that looks something like this:

//this is the root
public prog
: globalStmt+
 ;

globalStmt: stateDef;

stateDef
 : 'state' ID stateBlock;

stateBlock
 : '{' stateBlockContent* '}'
 ;

stateBlockContent
 : NEWLINE!
 ;

This is enough to demonstrate the problem. When I create a program such as:

state hello
{

}
}

The trailing close bracket is not detected as an error. In fact, the grammar
only seems to trigger an error when the trailing content could be part of a
subrule farther down the chain such as an ID. What am I doing wrong and what
is the best way to resolve this?

Under antlrworks when the debugger gets to the errant bracket the
debug cusor moves to the semi at the end of prog and the closing bracket
stays greyed out like it's never consumed or evaluated.

Thank you for your time.
-- 
David Daeschler

From bkiers at gmail.com  Tue Apr  5 11:31:45 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 5 Apr 2011 20:31:45 +0200
Subject: [antlr-interest] Grammar not detecting stray syntax after
 certain valid blocks
In-Reply-To: <BANLkTi=PENLd22wUe13E0LBL3-V3KACpTg@mail.gmail.com>
References: <BANLkTi=PENLd22wUe13E0LBL3-V3KACpTg@mail.gmail.com>
Message-ID: <BANLkTiky3kNH=iR96=oyqUwOKCNQL+L3+Q@mail.gmail.com>

>
> This is enough to demonstrate the problem. When I create a program such as:
>
> state hello
> {
>
> }
> }
>
> The trailing close bracket is not detected as an error.
> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>


Try to "anchor" it by adding an EOF at the end of your entry-rule:

public prog
  :  globalStmt+ EOF
  ;


That way, you force the parser to go through the entire token stream, and
not stop prematurely.

Regards,

Bart.

From david.daeschler at gmail.com  Tue Apr  5 11:44:45 2011
From: david.daeschler at gmail.com (David Daeschler)
Date: Tue, 5 Apr 2011 14:44:45 -0400
Subject: [antlr-interest] Grammar not detecting stray syntax after
 certain valid blocks
In-Reply-To: <BANLkTiky3kNH=iR96=oyqUwOKCNQL+L3+Q@mail.gmail.com>
References: <BANLkTi=PENLd22wUe13E0LBL3-V3KACpTg@mail.gmail.com>
	<BANLkTiky3kNH=iR96=oyqUwOKCNQL+L3+Q@mail.gmail.com>
Message-ID: <BANLkTin4wgGQzb6d_Zw6-Z83OSMKMOEU5w@mail.gmail.com>

Thank you Bart!

That of course did the trick. I dont know why I didnt think of that.

I appreciate the quick response, have a nice week!
-- 
David Daeschler



On Tue, Apr 5, 2011 at 2:31 PM, Bart Kiers <bkiers at gmail.com> wrote:

> This is enough to demonstrate the problem. When I create a program such as:
>>
>> state hello
>> {
>>
>> }
>> }
>>
>> The trailing close bracket is not detected as an error.
>> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>
>
> Try to "anchor" it by adding an EOF at the end of your entry-rule:
>
> public prog
>   :  globalStmt+ EOF
>   ;
>
>
> That way, you force the parser to go through the entire token stream, and
> not stop prematurely.
>
> Regards,
>
> Bart.
>
>

From gd.antlr at gmail.com  Tue Apr  5 14:39:35 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Tue, 5 Apr 2011 14:39:35 -0700
Subject: [antlr-interest] AST cardinality from called rules
Message-ID: <BANLkTimfp_Uh5g1RZ32sQCGgL_NUvJ3=wA@mail.gmail.com>

Hello list,

The following rule generates the AST that I want:

localVariableDeclaration
    : LOCAL variableDcl ( ',' variableDcl )* -> ^(LOCAL variableDcl)+
    ;

But how do I generate an equivalent AST if the variableDcl list is not
in the localVariableDeclaration rule, as in the following fragment?

localVariableDeclaration
    : LOCAL variableDeclarationList
    ;

variableDeclarationList
    : variableDcl ( ',' variableDcl )*
    ;

I want to produce a set of ^(LOCAL variableDcl) subtrees, but I want
to reuse the variableDeclarationList from other rules, so I'd rather
not inline it.

Thanks!

From parrt at antlr.org  Tue Apr  5 15:43:12 2011
From: parrt at antlr.org (parrt at antlr.org)
Date: Tue, 5 Apr 2011 16:43:12 -0600
Subject: [antlr-interest] Why go to Dartmouth? Beat the system.
Message-ID: <0835498585.S5DCO0YQ203631@ebmutdyngq.varxclruhq.info>

Get a Degree in 4 to 6 Weeks with our program! 
~We offer a program that will help ANYONE with professional experience

get a 100% verified Degree:
Doctorate (PHD), Bachelors, Masters

- Think about it... 
Within a few weeks, you can become a college graduate!- Follow YOUR Dreams- Live a better life by earning or upgrading your degree
This is a rare chance for you to make a right move and receive your due
benefits... if you are qualified but are lacking that piece of paper, 
Get one from us in a fraction of the time.

~CALL FOR A FREE CONSULTATION~
1-248-213-1439

It is your move...
Make the right decision.
Due to time zone variations across the country, a representative may not be in the office at the time of your call.
If that is the case please leave us a message with your name and phone number and we will get back to you as soon as possible.

Do Not Reply to this Email.
We do not reply to text inquiries, and our server will reject all response traffic.
We apologize for any inconvenience this may have caused you.


From miller.garym at gmail.com  Tue Apr  5 18:13:19 2011
From: miller.garym at gmail.com (Gary Miller)
Date: Wed, 6 Apr 2011 11:13:19 +1000
Subject: [antlr-interest]  to stop walking into a subtree
Message-ID: <BANLkTinN=d1Axr7oBqVR54vx8L4HWOh1QQ@mail.gmail.com>

Hi Porosh,

One way to do this is to skip the walk of the second operand (op2) is
the tree grammar and call some java code to continue the walk if
necessary. See example (this is sample code and is not expected to
compile as is) below.

Question: Does anyone know and a way this can be done without needing
to create a new TreeNodeStream? Maybe using a predicate to acess the
op2 without changing the position in the TreeNodeStream?

Regards

Gary


Sample code.

@members {

  boolean continueBooleanexpression(TreeParser walker, Tree op) throws
RecognitionException {

    // Save the current TreeNodeStream

    TreeNodeStream tns = walker.getTreeNodeStream();

    boolean result =
    try {
      CommonTreeNodeStream nodes = new CommonTreeNodeStream(op);
      nodes.setTokenStream(walker.getTreeNodeStream().getTokenStream());

      // Use the same walker so state (scope, member etc.) is preserved.
      walker.setTreeNodeStream(nodes);

      // Continue the walk

      // Probably doesn't return a boolean,

      // might need to be something like walker.booleanexpression().result;
      result = walker.booleanexpression();
    } finally {

      // Resort original TreeNodeStream
      walker.setTreeNodeStream(tns);
    }
    return result;

  }

}

booleanexpression returns[boolean result]
:  ^(AND op1=booleanexpression op2=.)
    {
      if( $op1 ) {
        boolean op2Result = continueBooleanexpression(this, $op2);
        if( op2Result ) {
          result = true;
        } else {
          result =false;
        }
      } else {
        result = false;
      }
    }
;

> booleanexpression returns[boolean result]

> :*  ^(AND op1 = booleanexpression op2 = booleanexpression) {if(op1&&op2) result = *> true; else result =false;}
> ;
>
> My question:
> I want to stop walking once I found op1 as false. In that case, I don't need to
> evaluate op2 anymore, the result is false anyway.
>
> Is there any way to implement this?

From gary at sumwise.com  Tue Apr  5 18:21:54 2011
From: gary at sumwise.com (Gary Miller)
Date: Wed, 6 Apr 2011 11:21:54 +1000
Subject: [antlr-interest] Grammar not detecting stray syntax after
Message-ID: <BANLkTinmP7JZrUgjoabZEGwLUFU_=r-5bQ@mail.gmail.com>

This one also bit me a while back.

The other thing you can do is to turn off error recovery.
The trailing '}' is be swallowed.

Regards
Gary


> Date: Tue, 5 Apr 2011 14:44:45 -0400
> From: David Daeschler <david.daeschler at gmail.com>
> Subject: Re: [antlr-interest] Grammar not detecting stray syntax after
>        certain valid blocks
> To: Bart Kiers <bkiers at gmail.com>
> Cc: antlr-interest at antlr.org
> Message-ID: <BANLkTin4wgGQzb6d_Zw6-Z83OSMKMOEU5w at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Thank you Bart!
>
> That of course did the trick. I dont know why I didnt think of that.
>
> I appreciate the quick response, have a nice week!
> --
> David Daeschler
>
>
>
> On Tue, Apr 5, 2011 at 2:31 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
> > This is enough to demonstrate the problem. When I create a program such
> as:
> >>
> >> state hello
> >> {
> >>
> >> }
> >> }
> >>
> >> The trailing close bracket is not detected as an error.
> >> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> > Try to "anchor" it by adding an EOF at the end of your entry-rule:
> >
> > public prog
> >   :  globalStmt+ EOF
> >   ;
> >
> >
> > That way, you force the parser to go through the entire token stream, and
> > not stop prematurely.
> >
> > Regards,
> >
> > Bart.
> >
> >
>
>

From sharwell at pixelminegames.com  Tue Apr  5 18:42:51 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 5 Apr 2011 20:42:51 -0500
Subject: [antlr-interest] AST cardinality from called rules
In-Reply-To: <BANLkTimfp_Uh5g1RZ32sQCGgL_NUvJ3=wA@mail.gmail.com>
References: <BANLkTimfp_Uh5g1RZ32sQCGgL_NUvJ3=wA@mail.gmail.com>
Message-ID: <03ce01cbf3fb$f184bc60$d48e3520$@pixelminegames.com>

The AST operators are the most efficient manner:

localVariableDeclaration
    : LOCAL^ variableDeclarationList
    ;

variableDeclarationList
    : variableDcl ( ','! variableDcl )*
    ;

Or use rewrites:

localVariableDeclaration
    : LOCAL variableDeclarationList -> ^(LOCAL variableDeclarationList)
    ;

variableDeclarationList
    : variableDcl ( ',' variableDcl )* -> variableDcl+
    ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Graham Mer
Sent: Tuesday, April 05, 2011 4:40 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AST cardinality from called rules

Hello list,

The following rule generates the AST that I want:

localVariableDeclaration
    : LOCAL variableDcl ( ',' variableDcl )* -> ^(LOCAL variableDcl)+
    ;

But how do I generate an equivalent AST if the variableDcl list is not in
the localVariableDeclaration rule, as in the following fragment?

localVariableDeclaration
    : LOCAL variableDeclarationList
    ;

variableDeclarationList
    : variableDcl ( ',' variableDcl )*
    ;

I want to produce a set of ^(LOCAL variableDcl) subtrees, but I want to
reuse the variableDeclarationList from other rules, so I'd rather not inline
it.

Thanks!

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Tue Apr  5 19:09:24 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 6 Apr 2011 12:09:24 +1000
Subject: [antlr-interest] AST cardinality from called rules
In-Reply-To: <BANLkTimfp_Uh5g1RZ32sQCGgL_NUvJ3=wA@mail.gmail.com>
References: <BANLkTimfp_Uh5g1RZ32sQCGgL_NUvJ3=wA@mail.gmail.com>
Message-ID: <BANLkTimfTuJ4Gd-Z-uKBaA4LpfrNynBYYA@mail.gmail.com>

Hi Graham

Does this give you what you want ?

localVariableDeclaration
   : LOCAL! variableDeclarationList
   ;

variableDeclarationList
   : variableDcl ( ',' variableDcl )* -> ^(LOCAL variableDcl)+
   ;

If you also use the variableDeclarationList rule for non-local
declarations you could give it a parameter...

localVariableDeclaration
   : LOCAL! variableDeclarationList[LOCAL]
   ;

variableDeclarationList[int type]
   : variableDcl ( ',' variableDcl )*
   -> {type == LOCAL}? ^(LOCAL variableDcl)+
   -> ^(OTHER variableDcl)+
   ;


Michael


On 6 April 2011 07:39, Graham Mer <gd.antlr at gmail.com> wrote:
> Hello list,
>
> The following rule generates the AST that I want:
>
> localVariableDeclaration
> ? ?: LOCAL variableDcl ( ',' variableDcl )* -> ^(LOCAL variableDcl)+
> ? ?;
>
> But how do I generate an equivalent AST if the variableDcl list is not
> in the localVariableDeclaration rule, as in the following fragment?
>
> localVariableDeclaration
> ? ?: LOCAL variableDeclarationList
> ? ?;
>
> variableDeclarationList
> ? ?: variableDcl ( ',' variableDcl )*
> ? ?;
>
> I want to produce a set of ^(LOCAL variableDcl) subtrees, but I want
> to reuse the variableDeclarationList from other rules, so I'd rather
> not inline it.
>
> Thanks!
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gd.antlr at gmail.com  Tue Apr  5 19:58:57 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Tue, 5 Apr 2011 19:58:57 -0700
Subject: [antlr-interest] AST cardinality from called rules
In-Reply-To: <BANLkTimfTuJ4Gd-Z-uKBaA4LpfrNynBYYA@mail.gmail.com>
References: <BANLkTimfp_Uh5g1RZ32sQCGgL_NUvJ3=wA@mail.gmail.com>
	<BANLkTimfTuJ4Gd-Z-uKBaA4LpfrNynBYYA@mail.gmail.com>
Message-ID: <BANLkTikWYoAXXHBjX0ijixxN6fGN26PW=Q@mail.gmail.com>

Problem solved. Thanks for the replies, the parameterized version does
exactly what I need:


localVariableDeclaration:
  :  LOCAL! variableDeclarationList[LOCAL]
  ;

variableDeclarationList[int type]
  :  variableDcl ( ',' variableDcl )*
    -> {type == LOCAL}? ^(LOCAL variableDcl)+
    -> // others
  ;

From martijn.reuvers at gmail.com  Tue Apr  5 22:53:25 2011
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Wed, 6 Apr 2011 07:53:25 +0200
Subject: [antlr-interest] to stop walking into a subtree
In-Reply-To: <BANLkTinN=d1Axr7oBqVR54vx8L4HWOh1QQ@mail.gmail.com>
References: <BANLkTinN=d1Axr7oBqVR54vx8L4HWOh1QQ@mail.gmail.com>
Message-ID: <BANLkTimbcON9F14jUDaXiaL4GOwdFygSdg@mail.gmail.com>

Hello,

I personally prefer a manual tree-visitor (which walks the AST), that
way you can just evaluate a node and based on the result take
appropriate action, it also allows more control (e.g. multi-phases if
needed). The main reason I do it that way is I don't want any of my
grammars getting cluttered with hard to maintain code in between (Java
e.g..) Disadvantage is, if your grammar is large, your visitor may get
complex. So it both has its advantages and disadvantages.

Cheers!
Martijn

On Wed, Apr 6, 2011 at 3:13 AM, Gary Miller <miller.garym at gmail.com> wrote:
> Hi Porosh,
>
> One way to do this is to skip the walk of the second operand (op2) is
> the tree grammar and call some java code to continue the walk if
> necessary. See example (this is sample code and is not expected to
> compile as is) below.
>
> Question: Does anyone know and a way this can be done without needing
> to create a new TreeNodeStream? Maybe using a predicate to acess the
> op2 without changing the position in the TreeNodeStream?
>
> Regards
>
> Gary
>
>
> Sample code.
>
> @members {
>
> ?boolean continueBooleanexpression(TreeParser walker, Tree op) throws
> RecognitionException {
>
> ? ?// Save the current TreeNodeStream
>
> ? ?TreeNodeStream tns = walker.getTreeNodeStream();
>
> ? ?boolean result =
> ? ?try {
> ? ? ?CommonTreeNodeStream nodes = new CommonTreeNodeStream(op);
> ? ? ?nodes.setTokenStream(walker.getTreeNodeStream().getTokenStream());
>
> ? ? ?// Use the same walker so state (scope, member etc.) is preserved.
> ? ? ?walker.setTreeNodeStream(nodes);
>
> ? ? ?// Continue the walk
>
> ? ? ?// Probably doesn't return a boolean,
>
> ? ? ?// might need to be something like walker.booleanexpression().result;
> ? ? ?result = walker.booleanexpression();
> ? ?} finally {
>
> ? ? ?// Resort original TreeNodeStream
> ? ? ?walker.setTreeNodeStream(tns);
> ? ?}
> ? ?return result;
>
> ?}
>
> }
>
> booleanexpression returns[boolean result]
> : ?^(AND op1=booleanexpression op2=.)
> ? ?{
> ? ? ?if( $op1 ) {
> ? ? ? ?boolean op2Result = continueBooleanexpression(this, $op2);
> ? ? ? ?if( op2Result ) {
> ? ? ? ? ?result = true;
> ? ? ? ?} else {
> ? ? ? ? ?result =false;
> ? ? ? ?}
> ? ? ?} else {
> ? ? ? ?result = false;
> ? ? ?}
> ? ?}
> ;
>
>> booleanexpression returns[boolean result]
>
>> :* ?^(AND op1 = booleanexpression op2 = booleanexpression) {if(op1&&op2) result = *> true; else result =false;}
>> ;
>>
>> My question:
>> I want to stop walking once I found op1 as false. In that case, I don't need to
>> evaluate op2 anymore, the result is false anyway.
>>
>> Is there any way to implement this?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From akikax at gmail.com  Wed Apr  6 00:39:40 2011
From: akikax at gmail.com (Wilson Urdaneta)
Date: Wed, 6 Apr 2011 15:39:40 +0800
Subject: [antlr-interest] Changing root node lable
In-Reply-To: <BANLkTinma=VSka6WWmif6F7E_GoJDeLNDQ@mail.gmail.com>
References: <BANLkTinma=VSka6WWmif6F7E_GoJDeLNDQ@mail.gmail.com>
Message-ID: <BANLkTikHoVhvGC503w1sdXDjCWifFNMArA@mail.gmail.com>

On Wed, Apr 6, 2011 at 3:
> Hi everyone,
>
> This is my first question on this list and I have been using ANTLR for
> about two weeks.
>
> Lets say I want to parse a simple arithmetic expression. For that I
> create a simple grammar - as shown in many of the available examples -
> and I order ANTLR to generate the AST. Now, is there any simple way to
> change the label of each root node so it reflects the value of their
> children? That is, given
>
> (2+3)*4
>
> I would get the following AST
>
> *
> ?4
> ?+
> ? ?2
> ? ?3
>
> and I would like to get instead
>
> (2+3)*4
> ?4
> ?(2+3)
> ? ?2
> ? ?3
>
> Instead of only getting * or + On the root nodes I would like to get a
> label with the full content or information or the children at current
> depth.
>
> Currently, I am thinking doing this using the commontree class. Is
> there anyway of specifying this directly at the grammar? Also, I have
> not succeed in this using rewrite rules....
>
> Regards,
>

From martijn.reuvers at gmail.com  Wed Apr  6 00:46:16 2011
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Wed, 6 Apr 2011 09:46:16 +0200
Subject: [antlr-interest] Changing root node lable
In-Reply-To: <BANLkTikHoVhvGC503w1sdXDjCWifFNMArA@mail.gmail.com>
References: <BANLkTinma=VSka6WWmif6F7E_GoJDeLNDQ@mail.gmail.com>
	<BANLkTikHoVhvGC503w1sdXDjCWifFNMArA@mail.gmail.com>
Message-ID: <BANLkTimv8aR-AwWgvPZtvwsDTWZwz1ng3Q@mail.gmail.com>

Hello,

You could override toString() and do it yourself (rendering it and its
children the way you like) or add an additional method to CommonTree
to do what you want.

Martijn

On Wed, Apr 6, 2011 at 9:39 AM, Wilson Urdaneta <akikax at gmail.com> wrote:
> On Wed, Apr 6, 2011 at 3:
>> Hi everyone,
>>
>> This is my first question on this list and I have been using ANTLR for
>> about two weeks.
>>
>> Lets say I want to parse a simple arithmetic expression. For that I
>> create a simple grammar - as shown in many of the available examples -
>> and I order ANTLR to generate the AST. Now, is there any simple way to
>> change the label of each root node so it reflects the value of their
>> children? That is, given
>>
>> (2+3)*4
>>
>> I would get the following AST
>>
>> *
>> ?4
>> ?+
>> ? ?2
>> ? ?3
>>
>> and I would like to get instead
>>
>> (2+3)*4
>> ?4
>> ?(2+3)
>> ? ?2
>> ? ?3
>>
>> Instead of only getting * or + On the root nodes I would like to get a
>> label with the full content or information or the children at current
>> depth.
>>
>> Currently, I am thinking doing this using the commontree class. Is
>> there anyway of specifying this directly at the grammar? Also, I have
>> not succeed in this using rewrite rules....
>>
>> Regards,
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ben.corne at gmail.com  Wed Apr  6 04:31:05 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Wed, 6 Apr 2011 13:31:05 +0200
Subject: [antlr-interest] Illegal option output
Message-ID: <BANLkTi=wpfBr9CPxXXs4t65EJCpBcyRJbQ@mail.gmail.com>

Hello

Attached is my grammar file.
When running antlr over it (with antlridev3 eclipse plugin), it states the
following error:

ANTLR Parser Generator 3.3 Nov 30, 2010 12:50:56.
Using project classpath: Yes.
Grammar: /home/bcorne/ATDOC/Documenter/grammar/Documentation.g
warning(149): Documentation__.g:0:0: rewrite syntax or operator with no
output option; setting output=AST
error(133): Documentation__.g:0:0: illegal option output

Any thoughts besides "you're missing the options block"? (I do have the
options block as you can verify)
I also tested this with "java -jar antlr-3.3-complete.jar Documentation.g"
using the latest antlr binary from antlr.org, with the same result.

Regards
Ben
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Documentation.g
Type: application/octet-stream
Size: 1062 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110406/ccf1f61c/attachment.obj 

From ben.corne at gmail.com  Wed Apr  6 04:34:50 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Wed, 6 Apr 2011 13:34:50 +0200
Subject: [antlr-interest] Illegal option output
In-Reply-To: <BANLkTi=wpfBr9CPxXXs4t65EJCpBcyRJbQ@mail.gmail.com>
References: <BANLkTi=wpfBr9CPxXXs4t65EJCpBcyRJbQ@mail.gmail.com>
Message-ID: <BANLkTinT-zsnwc6wcwKQx+88Ln5a4uYb1Q@mail.gmail.com>

I just found out you cannot use ! within lexer rules. It works now.

2011/4/6 Ben Corne <ben.corne at gmail.com>

> Hello
>
> Attached is my grammar file.
> When running antlr over it (with antlridev3 eclipse plugin), it states the
> following error:
>
> ANTLR Parser Generator 3.3 Nov 30, 2010 12:50:56.
> Using project classpath: Yes.
> Grammar: /home/bcorne/ATDOC/Documenter/grammar/Documentation.g
> warning(149): Documentation__.g:0:0: rewrite syntax or operator with no
> output option; setting output=AST
> error(133): Documentation__.g:0:0: illegal option output
>
> Any thoughts besides "you're missing the options block"? (I do have the
> options block as you can verify)
> I also tested this with "java -jar antlr-3.3-complete.jar Documentation.g"
> using the latest antlr binary from antlr.org, with the same result.
>
> Regards
> Ben
>

From Phil.Ratzloff at sas.com  Wed Apr  6 06:32:56 2011
From: Phil.Ratzloff at sas.com (Phil Ratzloff)
Date: Wed, 6 Apr 2011 13:32:56 +0000
Subject: [antlr-interest] Q: how to incorporate a preprocessor in
	the	flow?
In-Reply-To: <BANLkTikBzMp-qi1nn2cYBU=M4Xcq6WG6aA@mail.gmail.com>
References: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>
	<4D9A778C.8020100@magma.ca>
	<BANLkTikBzMp-qi1nn2cYBU=M4Xcq6WG6aA@mail.gmail.com>
Message-ID: <A44766C0E5A90B4F93B9B2963C83ADEB1F0D007F@MERCMBX05D.na.SAS.com>

This seems like a useful feature to have. Is it reasonable to consider making this easier in antlr4?


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
Sent: Tuesday, April 05, 2011 2:16 AM
To: Martin d'Anjou
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in the flow?

I tried that approach when I first started with ANTLR but had difficulty
handling arbitrary token rearrangement. Early on I couldn't figure out how
to backtrack in the token stream in order to detect identifier construction
using macros. Something like the following requires that 'prefix' be lexed
again after macro substitution in order to detect if the string from suffix
and 'prefix' will be merged into one identifier.

define suffix(name) name
prefix`suffix

We use this often in RTL for bus port lists. Even though the spec seems to
explicitly disallow this, Modelsim and DC will accept it. Lexing twice
solves this case easily but now the tokens point to a non-existent source.


On Mon, Apr 4, 2011 at 8:59 PM, Martin d'Anjou <point14 at magma.ca> wrote:

> Hi,
>
> Thanks to both of you for sharing your approaches. Right now I am pondering
> how to alter the sequence of tokens before they hit the parser. Intuitively
> I want to have three processing units (lexer, pre-processor, parser)
> connected together through io pipes of tokens (e.g. token fifos), but this
> is not how ANTLR was architected (it's how I would have done it in hardware
> though!).
>
> Martin
>
>
>
> On 11-04-04 09:25 AM, Sam Harwell wrote:
>
>> I used a hand-crafted implementation of TokenSource between the lexer and
>> parser. In the preprocessor, whenever I manipulated a token I used a new
>> token class derived from CommonToken (call it SubstitutedToken) which
>> contained a linked list leading from the effective position in the stream
>> (stored in CommonToken) all the way back to the original location (file
>> and
>> position) of the token definition. When a CommonToken substitution occurs,
>> the linked list has one node containing the original source position where
>> defined. Whenever a SubstitutedToken substitution occurs, a new node for
>> the
>> token's previous effective position is added to the linked list and that
>> new
>> head pointer is stored in the new token.
>>
>> `define x 3
>> `define y `x
>> `y
>>
>> In this case, token `y is eventually replaced with a SubstitutedToken
>> which
>> appears at (line 2, column 1, length 1, text "3") containing the following
>> linked list:
>>
>> Line 3, column 1, length 2 (list head, the location where `y was
>> substituted
>> with `x)
>> Line 2, column 11, length 2 (the location where `x was substituted with
>> '3')
>> Line 1, column 11, length 1 (the actual source location where the token
>> '3'
>> is defined)
>>
>> This list allows true relative ordering of all tokens in the processed
>> source: when two tokens appear to be at the same location in the
>> preprocessed stream, you simply compare the positions of the first node in
>> the position list.
>>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
>> Sent: Monday, April 04, 2011 12:13 AM
>> To: Martin d'Anjou
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in the
>> flow?
>>
>> Hi Martin,
>>
>>   I just completed an SV preprocessor which can parse UVM 1.0
>> successfully.
>> After 2 revisions I settled on a completely separate preprocessor(lexer
>> and
>> parser). As you saw, you need to tokenize the macro_text in order to
>> easily
>> support macros with arguments and detect the three escaped tokens `", `\`"
>> and ``. I'm not sure how well a lexer only approach could handle cases
>> where
>> a macro substitution can merge text with a previously lexed token. The
>> separate approach still has flaws, such as good error reporting. Of course
>> I
>> could be missing an obvious easy solution.
>>
>>
>>
>> On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou<point14 at magma.ca>  wrote:
>>
>>  Hello,
>>>
>>> I am trying to find a way to incorporate a preprocessor in the ANTLR
>>> flow. I thought of doing this before the lexer, but I need to tokenize
>>> the incoming char stream for macro substitution to be easy. I thought
>>> of doing it between the lexer and the parser, and replace the
>>> preprocessor tokens with their expansion before feeding the token
>>> stream to the parser, so I guess I would end up using something like
>>> the TokenRewriteStream??? Can someone steer me in the right direction
>>> please? Or should I be using lexer rule actions? In which case, any
>>> example on how to access the token stream of the replacement token
>>> list of an identifier? Too many questions sorry.
>>>
>>> The language I am hoping to tokenize is SystemVerilog and has C-like
>>> preprocessor macros (`include, `ifdef, `define NAME(params,...), token
>>> concatenation, etc.).
>>>
>>> Regards,
>>> Martin
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>  List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From sharwell at pixelminegames.com  Wed Apr  6 06:45:59 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 6 Apr 2011 08:45:59 -0500
Subject: [antlr-interest] Q: how to incorporate a preprocessor in
	the	flow?
In-Reply-To: <BANLkTikBzMp-qi1nn2cYBU=M4Xcq6WG6aA@mail.gmail.com>
References: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>	<4D9A778C.8020100@magma.ca>
	<BANLkTikBzMp-qi1nn2cYBU=M4Xcq6WG6aA@mail.gmail.com>
Message-ID: <005601cbf460$f7311d60$e5935820$@pixelminegames.com>

This still works using the method I described. Whenever I encounter an
identifier, I process the next token using the mechanism I described
earlier, and if necessary substitute a new token when combines the two
identifiers. If the next token (or tokens if they are the result of another
preprocessor substitution) is not another identifier, then I push them to a
queue so I don't have to process them again.

Sam
 
-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
Sent: Tuesday, April 05, 2011 1:16 AM
To: Martin d'Anjou
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in the
flow?

I tried that approach when I first started with ANTLR but had difficulty
handling arbitrary token rearrangement. Early on I couldn't figure out how
to backtrack in the token stream in order to detect identifier construction
using macros. Something like the following requires that 'prefix' be lexed
again after macro substitution in order to detect if the string from suffix
and 'prefix' will be merged into one identifier.

define suffix(name) name
prefix`suffix

We use this often in RTL for bus port lists. Even though the spec seems to
explicitly disallow this, Modelsim and DC will accept it. Lexing twice
solves this case easily but now the tokens point to a non-existent source.


On Mon, Apr 4, 2011 at 8:59 PM, Martin d'Anjou <point14 at magma.ca> wrote:

> Hi,
>
> Thanks to both of you for sharing your approaches. Right now I am 
> pondering how to alter the sequence of tokens before they hit the 
> parser. Intuitively I want to have three processing units (lexer, 
> pre-processor, parser) connected together through io pipes of tokens 
> (e.g. token fifos), but this is not how ANTLR was architected (it's 
> how I would have done it in hardware though!).
>
> Martin
>
>
>
> On 11-04-04 09:25 AM, Sam Harwell wrote:
>
>> I used a hand-crafted implementation of TokenSource between the lexer 
>> and parser. In the preprocessor, whenever I manipulated a token I 
>> used a new token class derived from CommonToken (call it 
>> SubstitutedToken) which contained a linked list leading from the 
>> effective position in the stream (stored in CommonToken) all the way 
>> back to the original location (file and
>> position) of the token definition. When a CommonToken substitution 
>> occurs, the linked list has one node containing the original source 
>> position where defined. Whenever a SubstitutedToken substitution 
>> occurs, a new node for the token's previous effective position is 
>> added to the linked list and that new head pointer is stored in the 
>> new token.
>>
>> `define x 3
>> `define y `x
>> `y
>>
>> In this case, token `y is eventually replaced with a SubstitutedToken 
>> which appears at (line 2, column 1, length 1, text "3") containing 
>> the following linked list:
>>
>> Line 3, column 1, length 2 (list head, the location where `y was 
>> substituted with `x) Line 2, column 11, length 2 (the location where 
>> `x was substituted with
>> '3')
>> Line 1, column 11, length 1 (the actual source location where the 
>> token '3'
>> is defined)
>>
>> This list allows true relative ordering of all tokens in the 
>> processed
>> source: when two tokens appear to be at the same location in the 
>> preprocessed stream, you simply compare the positions of the first 
>> node in the position list.
>>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org 
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
>> Sent: Monday, April 04, 2011 12:13 AM
>> To: Martin d'Anjou
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in 
>> the flow?
>>
>> Hi Martin,
>>
>>   I just completed an SV preprocessor which can parse UVM 1.0 
>> successfully.
>> After 2 revisions I settled on a completely separate 
>> preprocessor(lexer and parser). As you saw, you need to tokenize the 
>> macro_text in order to easily support macros with arguments and 
>> detect the three escaped tokens `", `\`"
>> and ``. I'm not sure how well a lexer only approach could handle 
>> cases where a macro substitution can merge text with a previously 
>> lexed token. The separate approach still has flaws, such as good 
>> error reporting. Of course I could be missing an obvious easy 
>> solution.
>>
>>
>>
>> On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou<point14 at magma.ca>  wrote:
>>
>>  Hello,
>>>
>>> I am trying to find a way to incorporate a preprocessor in the ANTLR 
>>> flow. I thought of doing this before the lexer, but I need to 
>>> tokenize the incoming char stream for macro substitution to be easy. 
>>> I thought of doing it between the lexer and the parser, and replace 
>>> the preprocessor tokens with their expansion before feeding the 
>>> token stream to the parser, so I guess I would end up using 
>>> something like the TokenRewriteStream??? Can someone steer me in the 
>>> right direction please? Or should I be using lexer rule actions? In 
>>> which case, any example on how to access the token stream of the 
>>> replacement token list of an identifier? Too many questions sorry.
>>>
>>> The language I am hoping to tokenize is SystemVerilog and has C-like 
>>> preprocessor macros (`include, `ifdef, `define NAME(params,...), 
>>> token concatenation, etc.).
>>>
>>> Regards,
>>> Martin
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addre
>>> ss
>>>
>>>  List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>> s
>>
>>
>>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Apr  6 08:12:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Apr 2011 08:12:03 -0700
Subject: [antlr-interest] Q: how to incorporate a preprocessor in the
	flow?
In-Reply-To: <A44766C0E5A90B4F93B9B2963C83ADEB1F0D007F@MERCMBX05D.na.SAS.com>
References: <02c201cbf2cb$b5ada4d0$2108ee70$@pixelminegames.com>
	<4D9A778C.8020100@magma.ca>	<BANLkTikBzMp-qi1nn2cYBU=M4Xcq6WG6aA@mail.gmail.com>
	<A44766C0E5A90B4F93B9B2963C83ADEB1F0D007F@MERCMBX05D.na.SAS.com>
Message-ID: <fa50281ca40904f7c3fc218c4943f927@mail.gmail.com>

The usual way is to write a pre-processor that just sends the processed
source out to the parser with file and line number stamps that you store
in a table and cross reference with the tokens. Less complex
pre-processors such as C# are done within the lexer. Look at the way the C
pre-processor works for an example. When the pre-processor gets
complicated, then it is probably better as a separate phase in the tool
chain unless there is a sever performance penalty.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Phil Ratzloff
> Sent: Wednesday, April 06, 2011 6:33 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in
> the flow?
>
> This seems like a useful feature to have. Is it reasonable to consider
> making this easier in antlr4?
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Tuesday, April 05, 2011 2:16 AM
> To: Martin d'Anjou
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor in
> the flow?
>
> I tried that approach when I first started with ANTLR but had
> difficulty handling arbitrary token rearrangement. Early on I couldn't
> figure out how to backtrack in the token stream in order to detect
> identifier construction using macros. Something like the following
> requires that 'prefix' be lexed again after macro substitution in order
> to detect if the string from suffix and 'prefix' will be merged into
> one identifier.
>
> define suffix(name) name
> prefix`suffix
>
> We use this often in RTL for bus port lists. Even though the spec seems
> to explicitly disallow this, Modelsim and DC will accept it. Lexing
> twice solves this case easily but now the tokens point to a non-
> existent source.
>
>
> On Mon, Apr 4, 2011 at 8:59 PM, Martin d'Anjou <point14 at magma.ca>
> wrote:
>
> > Hi,
> >
> > Thanks to both of you for sharing your approaches. Right now I am
> > pondering how to alter the sequence of tokens before they hit the
> > parser. Intuitively I want to have three processing units (lexer,
> > pre-processor, parser) connected together through io pipes of tokens
> > (e.g. token fifos), but this is not how ANTLR was architected (it's
> > how I would have done it in hardware though!).
> >
> > Martin
> >
> >
> >
> > On 11-04-04 09:25 AM, Sam Harwell wrote:
> >
> >> I used a hand-crafted implementation of TokenSource between the
> lexer
> >> and parser. In the preprocessor, whenever I manipulated a token I
> >> used a new token class derived from CommonToken (call it
> >> SubstitutedToken) which contained a linked list leading from the
> >> effective position in the stream (stored in CommonToken) all the way
> >> back to the original location (file and
> >> position) of the token definition. When a CommonToken substitution
> >> occurs, the linked list has one node containing the original source
> >> position where defined. Whenever a SubstitutedToken substitution
> >> occurs, a new node for the token's previous effective position is
> >> added to the linked list and that new head pointer is stored in the
> >> new token.
> >>
> >> `define x 3
> >> `define y `x
> >> `y
> >>
> >> In this case, token `y is eventually replaced with a
> SubstitutedToken
> >> which appears at (line 2, column 1, length 1, text "3") containing
> >> the following linked list:
> >>
> >> Line 3, column 1, length 2 (list head, the location where `y was
> >> substituted with `x) Line 2, column 11, length 2 (the location where
> >> `x was substituted with
> >> '3')
> >> Line 1, column 11, length 1 (the actual source location where the
> >> token '3'
> >> is defined)
> >>
> >> This list allows true relative ordering of all tokens in the
> >> processed
> >> source: when two tokens appear to be at the same location in the
> >> preprocessed stream, you simply compare the positions of the first
> >> node in the position list.
> >>
> >> Sam
> >>
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org
> >> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of A Z
> >> Sent: Monday, April 04, 2011 12:13 AM
> >> To: Martin d'Anjou
> >> Cc: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Q: how to incorporate a preprocessor
> in
> >> the flow?
> >>
> >> Hi Martin,
> >>
> >>   I just completed an SV preprocessor which can parse UVM 1.0
> >> successfully.
> >> After 2 revisions I settled on a completely separate
> >> preprocessor(lexer and parser). As you saw, you need to tokenize the
> >> macro_text in order to easily support macros with arguments and
> >> detect the three escaped tokens `", `\`"
> >> and ``. I'm not sure how well a lexer only approach could handle
> >> cases where a macro substitution can merge text with a previously
> >> lexed token. The separate approach still has flaws, such as good
> >> error reporting. Of course I could be missing an obvious easy
> >> solution.
> >>
> >>
> >>
> >> On Sun, Apr 3, 2011 at 9:51 PM, Martin d'Anjou<point14 at magma.ca>
> wrote:
> >>
> >>  Hello,
> >>>
> >>> I am trying to find a way to incorporate a preprocessor in the
> ANTLR
> >>> flow. I thought of doing this before the lexer, but I need to
> >>> tokenize the incoming char stream for macro substitution to be
> easy.
> >>> I thought of doing it between the lexer and the parser, and replace
> >>> the preprocessor tokens with their expansion before feeding the
> >>> token stream to the parser, so I guess I would end up using
> >>> something like the TokenRewriteStream??? Can someone steer me in
> the
> >>> right direction please? Or should I be using lexer rule actions? In
> >>> which case, any example on how to access the token stream of the
> >>> replacement token list of an identifier? Too many questions sorry.
> >>>
> >>> The language I am hoping to tokenize is SystemVerilog and has C-
> like
> >>> preprocessor macros (`include, `ifdef, `define NAME(params,...),
> >>> token concatenation, etc.).
> >>>
> >>> Regards,
> >>> Martin
> >>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addre
> >>> ss
> >>>
> >>>  List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >>
> >>
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sharwell at pixelminegames.com  Wed Apr  6 08:20:02 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 6 Apr 2011 10:20:02 -0500
Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F95608DE64@sun.epirion.local>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608DE64@sun.epirion.local>
Message-ID: <001001cbf46e$1b490020$51db0060$@pixelminegames.com>

Hi Ranco,

I made the following changes so far:

* An imported grammar is always generated as an internal class instead of a
public class.
* Rules within the imported grammar are always declared public since they
are only called by the root grammar.

How does that sound?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
Sent: Wednesday, March 23, 2011 6:40 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars

Hi all/Sam,

While using the CSharp3 target on a composite grammar, I came across a few
issues regarding rule visibility.

If no modifier (private, protected, public, ...) is specified for a rule,
the Java target generates public methods (since it is not implemented IIRC)
and the CSharp3 target generates private methods.

I like the idea to explicitly specify which rules are callable (by making
them public). However, for composite grammars the generated parser contains
delegate rules for every rule of the imported grammar, even for rules in the
imported grammar that aren't public (causing compile errors). This can
solved this adding a public modifier to every rule of the imported grammar,
but I was wondering if there's a more convenient way of doing this.

Furthermore, the methods for the delegate rules in the composite grammars
are all public, regardless of the visibility of the rule in the imported
grammar. IMHO, it would be better to make them private and use the composite
grammar to explicitly specify the rules that are externally visible. What
are your thoughts on this?

Btw, the CSharp3 templates are also included in the original Java tool. Does
that mean that we don't need the .NET version of the tool anymore?


Best regards,

Ranco Marcus
Epirion Knowledge Solutions B.V.


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Wed Apr  6 08:30:08 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 6 Apr 2011 10:30:08 -0500
Subject: [antlr-interest] [CSharp3] @namespace and composite grammars
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F95608EEC2@sun.epirion.local>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608EEC2@sun.epirion.local>
Message-ID: <001101cbf46f$83f5eab0$8be1c010$@pixelminegames.com>

Hi Ranco,

I updated the CSharp3 target so imported grammars are always generated in
the same namespace as specified in the root grammar.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
Sent: Thursday, March 24, 2011 5:55 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [CSharp3] @namespace and composite grammars

To maximize reuse of our grammars we generally create separate lexer and
parser grammars which are target agnostic (i.e. contain no target specific
code). We then combine them into a composite grammar in which the target
language and other implementation specific details are specified
(header,members,namespace,etc.). This way, grammars can be used for multiple
targets and we have maximum freedom to combine multiple lexers/parsers into
larger ones.

If a composite grammar C imports a parser grammar P and a lexer grammar L,
the tool generates CParser, CLexer, C_P and C_L.

Adding @namespace { <X> } to the composite grammar should IMHO put all four
recognizers in namespace <X>. Currently, at least with the CSharp3 target,
only CParser is put into the specified namespace.

Specifying @lexer::namespace { <X> } to the composite grammar causes only
the outermost lexer CLexer to be added to the specified namespace, not the
imported lexer C_L. The same holds for @parser::namespace.

Btw, if I'm not mistaken, there's no way to put recognizers in packages with
the Java target. Is that correct?

Best regards,

Ranco Marcus
Epirion Knowledge Solutions B.V.


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From srinivasan.karthikeyan.pitchai at oracle.com  Wed Apr  6 09:27:01 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Wed, 06 Apr 2011 21:57:01 +0530
Subject: [antlr-interest] Debugging ANTLR tree grammar...
Message-ID: <4D9C9455.70704@oracle.com>

Hi All,

I am a newbie to antlr.  I am in the process of building a tree parser
using the AST rewrite rules that I've coded in the parser grammar file.
However I am running into RecognitionException  when I use the tree
grammar to parse the AST generated using the parser grammar.  I've used
the following code snippet to get more details about the recognition
exception.

==========

@members
{
public String getErrorMessage(RecognitionException e,
                                   String[] tokenNames)
     {
         List stack = getRuleInvocationStack(e, this.getClass().getName());
         String msg = null;
         String inputContext =
             input.LT(-3) == null ? "" : ((Tree)input.LT(-3)).getText()+" "+
             input.LT(-2) == null ? "" : ((Tree)input.LT(-2)).getText()+" "+
             input.LT(-1) == null ? "" :
((Tree)input.LT(-1)).getText()+">>>"+
             ((Tree)input.LT(1)).getText()+"<<<  "+
             ((Tree)input.LT(2)).getText()+" "+
             ((Tree)input.LT(3)).getText();
         if ( e instanceof NoViableAltException ) {
            NoViableAltException nvae = (NoViableAltException)e;
            msg = " no viable alt; token="+e.token+
               " (decision="+nvae.decisionNumber+
               " state "+nvae.stateNumber+")"+
               " decision=<<"+nvae.grammarDecisionDescription+">>";
         }
         else {
            msg = super.getErrorMessage(e, tokenNames);
         }
         return stack+" "+msg+" context=..."+inputContext+"...";
     }
     public String getTokenErrorDisplay(Token t) {
         return t.toString();
     }
}


===========
The above code produces error message like the following:-

==

Walker.g: node from line 3:0 [start, startStatement, dml, query_term,
query_expression, query, from_clause, from_list, from_term,
table_list_item] mismatched tree node: join expecting<UP>  context=...UP
>>>join<<<  DOWN TABLE_OR_VIEW_NAME...

==

However I am unable to understand this error message.

It will be great if you can guide me in understanding the basic approach
to tree grammar debugging.  Any tips, pointers in debugging the tree
grammar would be great.  FYI.  I am using antlr3.1.3 and I've
antlrworks1.3.1 installed.

Thanks,
Vasan


From parrt at cs.usfca.edu  Wed Apr  6 10:31:19 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Apr 2011 10:31:19 -0700
Subject: [antlr-interest] AW on Windows 7
Message-ID: <BCAF51FA-E42F-4F87-A243-AF93CD384EC6@cs.usfca.edu>

Yo, does Windows 7 show on aliased bitmaps fonts? If so, how do you get around it to show nice new aliased fonts? I could swear that there was a checkbox for this in AW preferences, but I don't see it.
Ter

From michael.bedward at gmail.com  Wed Apr  6 18:07:33 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 7 Apr 2011 11:07:33 +1000
Subject: [antlr-interest] Debugging ANTLR tree grammar...
In-Reply-To: <4D9C9455.70704@oracle.com>
References: <4D9C9455.70704@oracle.com>
Message-ID: <BANLkTikF+74s0wD5Nac6HMOUrJGT2_141A@mail.gmail.com>

Hi Vasan,

I find the most useful debugging methods are often the simplest ones.
Printing the AST with toStringTree() is always the first thing I do
because so often that helps to spot the problem straight away. In your
case the walker is looking for an UP node, ie. the end of a sub-tree,
and that sort of thing is usually obvious in the toStringTree()
output.

Michael

On 7 April 2011 02:27, srinivasan karthikeyan pitchai
<srinivasan.karthikeyan.pitchai at oracle.com> wrote:
> Hi All,
>
> I am a newbie to antlr. ?I am in the process of building a tree parser
> using the AST rewrite rules that I've coded in the parser grammar file.
> However I am running into RecognitionException ?when I use the tree
> grammar to parse the AST generated using the parser grammar. ?I've used
> the following code snippet to get more details about the recognition
> exception.
>
> ==========
>
> @members
> {
> public String getErrorMessage(RecognitionException e,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String[] tokenNames)
> ? ? {
> ? ? ? ? List stack = getRuleInvocationStack(e, this.getClass().getName());
> ? ? ? ? String msg = null;
> ? ? ? ? String inputContext =
> ? ? ? ? ? ? input.LT(-3) == null ? "" : ((Tree)input.LT(-3)).getText()+" "+
> ? ? ? ? ? ? input.LT(-2) == null ? "" : ((Tree)input.LT(-2)).getText()+" "+
> ? ? ? ? ? ? input.LT(-1) == null ? "" :
> ((Tree)input.LT(-1)).getText()+">>>"+
> ? ? ? ? ? ? ((Tree)input.LT(1)).getText()+"<<< ?"+
> ? ? ? ? ? ? ((Tree)input.LT(2)).getText()+" "+
> ? ? ? ? ? ? ((Tree)input.LT(3)).getText();
> ? ? ? ? if ( e instanceof NoViableAltException ) {
> ? ? ? ? ? ?NoViableAltException nvae = (NoViableAltException)e;
> ? ? ? ? ? ?msg = " no viable alt; token="+e.token+
> ? ? ? ? ? ? ? " (decision="+nvae.decisionNumber+
> ? ? ? ? ? ? ? " state "+nvae.stateNumber+")"+
> ? ? ? ? ? ? ? " decision=<<"+nvae.grammarDecisionDescription+">>";
> ? ? ? ? }
> ? ? ? ? else {
> ? ? ? ? ? ?msg = super.getErrorMessage(e, tokenNames);
> ? ? ? ? }
> ? ? ? ? return stack+" "+msg+" context=..."+inputContext+"...";
> ? ? }
> ? ? public String getTokenErrorDisplay(Token t) {
> ? ? ? ? return t.toString();
> ? ? }
> }
>
>
> ===========
> The above code produces error message like the following:-
>
> ==
>
> Walker.g: node from line 3:0 [start, startStatement, dml, query_term,
> query_expression, query, from_clause, from_list, from_term,
> table_list_item] mismatched tree node: join expecting<UP> ?context=...UP
>>>>join<<< ?DOWN TABLE_OR_VIEW_NAME...
>
> ==
>
> However I am unable to understand this error message.
>
> It will be great if you can guide me in understanding the basic approach
> to tree grammar debugging. ?Any tips, pointers in debugging the tree
> grammar would be great. ?FYI. ?I am using antlr3.1.3 and I've
> antlrworks1.3.1 installed.
>
> Thanks,
> Vasan
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Wed Apr  6 18:08:43 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Wed, 6 Apr 2011 21:08:43 -0400
Subject: [antlr-interest] Debugging ANTLR tree grammar...
In-Reply-To: <4D9C9455.70704@oracle.com>
References: <4D9C9455.70704@oracle.com>
Message-ID: <BANLkTimCp0JKopCa4cajfOSnSTbLT5d=9w@mail.gmail.com>

This is not an exact answer to your question, but a possible direction to
take for solving your problem.

I would suggest looking at the AST from the parser using ToTokenString() and
ToStringTree().

ToTokenString() will print the AST as a stream of tokens, with DOWN and UP
tokens noted in the error message.
ToStringTree() will print the AST using nested ( ), and is more human
readable.
Since these are two different perspectives of the same AST, by comparing
them you will soon notice that DOWN corresponds to ( and UP corresponds to
).

*pseudo code* for the conversions.

Parser parser = new Parser(nodes);
Paser.startrule_return  parseResult = parser.startrule();

CommonTree ast = ((CommonTree)parseResult.Tree);

CommonTreeNodeStream astTokens= new CommonTreeNodeStream (new
CommonTreeAdaptor(), ast);
Print(astTokens.ToTokenString());

Print( ((CommonTree)ast).ToStringTree() );

If you plan on spending more than a few days on this, I would strongly
recommend getting "The Definitive ANTLR Reference" and possibly "Language
Implementation Patterns" by Ter.

From poroshpathor81 at yahoo.com  Wed Apr  6 20:43:43 2011
From: poroshpathor81 at yahoo.com (poroshpathor poroshpathor)
Date: Wed, 6 Apr 2011 20:43:43 -0700 (PDT)
Subject: [antlr-interest] to stop walking into a subtree
In-Reply-To: <mailman.1.1302116401.15133.antlr-interest@antlr.org>
References: <mailman.1.1302116401.15133.antlr-interest@antlr.org>
Message-ID: <596617.82047.qm@web38505.mail.mud.yahoo.com>

Gary,
Your solution makes a lot of sense to me. I was absolutely looking for some 
solution like that.
Thank you very much.

Martijn
As I was new in the area, I didnt know that i could do the tree operation.
Now, I am fine with it. Thanks a lot.

Porosh
>Hello,

>I personally prefer a manual tree-visitor (which walks the AST), that
>way you can just evaluate a node and based on the result take
>appropriate action, it also allows more control (e.g. multi-phases if
>needed). The main reason I do it that way is I don't want any of my
>grammars getting cluttered with hard to maintain code in between (Java
>e.g..) Disadvantage is, if your grammar is large, your visitor may get
>complex. So it both has its advantages and disadvantages.

>Cheers!
>Martijn

On Wed, Apr 6, 2011 at 3:13 AM, Gary Miller <miller.garym at gmail.com> wrote:
> Hi Porosh,
>
> One way to do this is to skip the walk of the second operand (op2) is
> the tree grammar and call some java code to continue the walk if
> necessary. See example (this is sample code and is not expected to
> compile as is) below.
>
> Question: Does anyone know and a way this can be done without needing
> to create a new TreeNodeStream? Maybe using a predicate to acess the
> op2 without changing the position in the TreeNodeStream?
>
> Regards
>
> Gary
>
>
> Sample code.
>
> @members {
>
> ?boolean continueBooleanexpression(TreeParser walker, Tree op) throws
> RecognitionException {
>
> ? ?// Save the current TreeNodeStream
>
> ? ?TreeNodeStream tns = walker.getTreeNodeStream();
>
> ? ?boolean result =
> ? ?try {
> ? ? ?CommonTreeNodeStream nodes = new CommonTreeNodeStream(op);
> ? ? ?nodes.setTokenStream(walker.getTreeNodeStream().getTokenStream());
>
> ? ? ?// Use the same walker so state (scope, member etc.) is preserved.
> ? ? ?walker.setTreeNodeStream(nodes);
>
> ? ? ?// Continue the walk
>
> ? ? ?// Probably doesn't return a boolean,
>
> ? ? ?// might need to be something like walker.booleanexpression().result;
> ? ? ?result = walker.booleanexpression();
> ? ?} finally {
>
> ? ? ?// Resort original TreeNodeStream
> ? ? ?walker.setTreeNodeStream(tns);
> ? ?}
> ? ?return result;
>
> ?}
>
> }
>
> booleanexpression returns[boolean result]
> : ?^(AND op1=booleanexpression op2=.)
> ? ?{
> ? ? ?if( $op1 ) {
> ? ? ? ?boolean op2Result = continueBooleanexpression(this, $op2);
> ? ? ? ?if( op2Result ) {
> ? ? ? ? ?result = true;
> ? ? ? ?} else {
> ? ? ? ? ?result =false;
> ? ? ? ?}
> ? ? ?} else {
> ? ? ? ?result = false;
> ? ? ?}
> ? ?}
> ;
>
>> booleanexpression returns[boolean result]
>
>> :* ?^(AND op1 = booleanexpression op2 = booleanexpression) {if(op1&&op2) result 
>>= *> true; else result =false;}
>> ;
>>
>> My question:
>> I want to stop walking once I found op1 as false. In that case, I don't need 
>to
>> evaluate op2 anymore, the result is false anyway.
>>
>> Is there any way to implement this?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      

From researcher0x00 at gmail.com  Thu Apr  7 04:24:29 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 7 Apr 2011 07:24:29 -0400
Subject: [antlr-interest] Debugging ANTLR tree grammar...
In-Reply-To: <4D9D2936.8070701@oracle.com>
References: <4D9C9455.70704@oracle.com>
	<BANLkTimCp0JKopCa4cajfOSnSTbLT5d=9w@mail.gmail.com>
	<4D9D2936.8070701@oracle.com>
Message-ID: <BANLkTikEnCooPmySTc2rRVV2eEdrL9XU=w@mail.gmail.com>

Thanks to Michalel also, we just happen to  be writing our answers at the
same time.

Another great resource from and for this interest list is
http://antlr.markmail.org/


Eric

From ranco.marcus at epirion.nl  Thu Apr  7 04:32:38 2011
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Thu, 7 Apr 2011 11:32:38 +0000
Subject: [antlr-interest] [CSharp3] @namespace and composite grammars
In-Reply-To: <001101cbf46f$83f5eab0$8be1c010$@pixelminegames.com>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608EEC2@sun.epirion.local>
	<001101cbf46f$83f5eab0$8be1c010$@pixelminegames.com>
Message-ID: <2B65C901391C804DBB9CF9E6FE30C6F9610C9B5E@sun.epirion.local>

Hi Sam, that sounds sensible to me. Thanks, Ranco

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: woensdag 6 april 2011 17:30
> To: Ranco Marcus; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] @namespace and composite
> grammars
> 
> Hi Ranco,
> 
> I updated the CSharp3 target so imported grammars are always generated in
> the same namespace as specified in the root grammar.
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> Sent: Thursday, March 24, 2011 5:55 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [CSharp3] @namespace and composite grammars
> 
> To maximize reuse of our grammars we generally create separate lexer and
> parser grammars which are target agnostic (i.e. contain no target specific
> code). We then combine them into a composite grammar in which the target
> language and other implementation specific details are specified
> (header,members,namespace,etc.). This way, grammars can be used for
> multiple targets and we have maximum freedom to combine multiple
> lexers/parsers into larger ones.
> 
> If a composite grammar C imports a parser grammar P and a lexer grammar L,
> the tool generates CParser, CLexer, C_P and C_L.
> 
> Adding @namespace { <X> } to the composite grammar should IMHO put all
> four recognizers in namespace <X>. Currently, at least with the CSharp3
> target, only CParser is put into the specified namespace.
> 
> Specifying @lexer::namespace { <X> } to the composite grammar causes only
> the outermost lexer CLexer to be added to the specified namespace, not the
> imported lexer C_L. The same holds for @parser::namespace.
> 
> Btw, if I'm not mistaken, there's no way to put recognizers in packages with
> the Java target. Is that correct?
> 
> Best regards,
> 
> Ranco Marcus
> Epirion Knowledge Solutions B.V.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ranco.marcus at epirion.nl  Thu Apr  7 04:49:02 2011
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Thu, 7 Apr 2011 11:49:02 +0000
Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars
In-Reply-To: <001001cbf46e$1b490020$51db0060$@pixelminegames.com>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608DE64@sun.epirion.local>
	<001001cbf46e$1b490020$51db0060$@pixelminegames.com>
Message-ID: <2B65C901391C804DBB9CF9E6FE30C6F9610C9BAC@sun.epirion.local>

Sounds great, Sam! 

What will be the visibility of the methods in the 'Delegated rules' region now that the class of the imported grammar is internal? Private or internal?

Another small suggestion is to prefix variable names (at least those that are reserved in C#) with an at-sign. The generated class for the grammar below has a compile error since 'as' is not a valid variable name while '@as' is. 

name : as=firstName lastName;

Are you planning to release new binaries any time soon? 

Thanks again,

Ranco Marcus

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: woensdag 6 april 2011 17:20
> To: Ranco Marcus; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite grammars
> 
> Hi Ranco,
> 
> I made the following changes so far:
> 
> * An imported grammar is always generated as an internal class instead of a
> public class.
> * Rules within the imported grammar are always declared public since they
> are only called by the root grammar.
> 
> How does that sound?
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> Sent: Wednesday, March 23, 2011 6:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars
> 
> Hi all/Sam,
> 
> While using the CSharp3 target on a composite grammar, I came across a few
> issues regarding rule visibility.
> 
> If no modifier (private, protected, public, ...) is specified for a rule, the Java
> target generates public methods (since it is not implemented IIRC) and the
> CSharp3 target generates private methods.
> 
> I like the idea to explicitly specify which rules are callable (by making them
> public). However, for composite grammars the generated parser contains
> delegate rules for every rule of the imported grammar, even for rules in the
> imported grammar that aren't public (causing compile errors). This can solved
> this adding a public modifier to every rule of the imported grammar, but I
> was wondering if there's a more convenient way of doing this.
> 
> Furthermore, the methods for the delegate rules in the composite grammars
> are all public, regardless of the visibility of the rule in the imported grammar.
> IMHO, it would be better to make them private and use the composite
> grammar to explicitly specify the rules that are externally visible. What are
> your thoughts on this?
> 
> Btw, the CSharp3 templates are also included in the original Java tool. Does
> that mean that we don't need the .NET version of the tool anymore?
> 
> 
> Best regards,
> 
> Ranco Marcus
> Epirion Knowledge Solutions B.V.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From peter at crispu.com  Thu Apr  7 05:49:54 2011
From: peter at crispu.com (Peter Kooiman)
Date: Thu, 7 Apr 2011 07:49:54 -0500 (CDT)
Subject: [antlr-interest] Why is this ambiguous..
In-Reply-To: <596617.82047.qm@web38505.mail.mud.yahoo.com>
Message-ID: <20048689.17.1302180592281.JavaMail.pitsie@devleno>

Hello, 

While working on a grammar I had something that boils down to 

grammar T; 
start: (y | y C)+ EOF; 
y: B (A)? | A; 

A : 'a'; 
B : 'b'; 
C : 'c'; 

This gives an expected warning on rule y, that's fine, ANTLR does the right thing and matches A greedily. 
However it also gives a warning on rule start: 

T.g:2:19: Decision can match input such as "B {EOF, B..A}" using multiple alternatives: 1, 2 
As a result, alternative(s) 2 were disabled for that input 

I quite understand the need to left factor this, I was just wondering why ANTLR gives this warning. It must be staring me in the face but I don't see it... 
How is this non-deterministic on input B EOF? Is ANTLR unable to see past rule y for some reason? 

Thanks 
Peter 


From dpavlekovic at gmail.com  Thu Apr  7 06:23:25 2011
From: dpavlekovic at gmail.com (Dean Pavlekovic)
Date: Thu, 7 Apr 2011 15:23:25 +0200
Subject: [antlr-interest] AW on Windows 7
In-Reply-To: <BCAF51FA-E42F-4F87-A243-AF93CD384EC6@cs.usfca.edu>
References: <BCAF51FA-E42F-4F87-A243-AF93CD384EC6@cs.usfca.edu>
Message-ID: <BANLkTikWQRCLhd7jZ3U4TpBab3gmURTvSg@mail.gmail.com>

Hi,

I'm new to the list so first let me give a hello and big compliments
for ANTLR & Works. I started using ANTLRworks a month or so ago,
trying to learn a bit about parsing/translation/small interpreter
construction in my spare time. Also extra compliments for the Language
Implementation Patterns, I definitely wish I had it *before* I started
fiddling with my first grammar!

About the fonts on Win7... text seems to be rendered correctly
everywhere except for the main editor widget: it always renders
aliased/non-smoothed font. New MS fonts like Consolas look quite bad
at small sizes without smoothing so after I couldn't find any way to
configure it in UI I went on to try to fix it.

The attached patch fixes the issue for me on Win7, it should set the
system default antialiasing option for editor pane too. But please
take it with reserve since I have almost no experience with Java: I'm
not sure how this would affect other OSes, I just poked around a bit
following what I found on Google:

http://stackoverflow.com/questions/2266199/how-to-make-jtextpane-paint-anti-aliased-font
http://download.oracle.com/javase/6/docs/technotes/guides/2d/flags.html#aaFonts
   -> see:awt.useSystemAAFontSettings

Cheers,
Dean

On Wed, Apr 6, 2011 at 7:31 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Yo, does Windows 7 show on aliased bitmaps fonts? If so, how do you get around it to show nice new aliased fonts? I could swear that there was a checkbox for this in AW preferences, but I don't see it.
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antialias.diff
Type: application/octet-stream
Size: 1339 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110407/7b4d0af3/attachment.obj 

From scott at javadude.com  Thu Apr  7 06:31:30 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Thu, 7 Apr 2011 09:31:30 -0400
Subject: [antlr-interest] AW on Windows 7
In-Reply-To: <BANLkTikWQRCLhd7jZ3U4TpBab3gmURTvSg@mail.gmail.com>
References: <BCAF51FA-E42F-4F87-A243-AF93CD384EC6@cs.usfca.edu>
	<BANLkTikWQRCLhd7jZ3U4TpBab3gmURTvSg@mail.gmail.com>
Message-ID: <BANLkTimUEWivqytnVRr0Yw8wMeVuvUjB+A@mail.gmail.com>

Another thing to try - optimize your clear type fonts in Windows 7 as follows:

* open the start menu
* type "adjust cleartype"
* choose "adjust cleartype text"

This will present a dialog that lets you adjust the fonts for each
monitor you have. They give you a set of eye charts and you choose
which looks best to you. It's kinda like at the eye doctor with
"better 1, 2" and it makes an incredible difference.

Don't turn off anti-aliasing before you try this.

-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Thu, Apr 7, 2011 at 9:23 AM, Dean Pavlekovic <dpavlekovic at gmail.com> wrote:
> Hi,
>
> I'm new to the list so first let me give a hello and big compliments
> for ANTLR & Works. I started using ANTLRworks a month or so ago,
> trying to learn a bit about parsing/translation/small interpreter
> construction in my spare time. Also extra compliments for the Language
> Implementation Patterns, I definitely wish I had it *before* I started
> fiddling with my first grammar!
>
> About the fonts on Win7... text seems to be rendered correctly
> everywhere except for the main editor widget: it always renders
> aliased/non-smoothed font. New MS fonts like Consolas look quite bad
> at small sizes without smoothing so after I couldn't find any way to
> configure it in UI I went on to try to fix it.
>
> The attached patch fixes the issue for me on Win7, it should set the
> system default antialiasing option for editor pane too. But please
> take it with reserve since I have almost no experience with Java: I'm
> not sure how this would affect other OSes, I just poked around a bit
> following what I found on Google:
>
> http://stackoverflow.com/questions/2266199/how-to-make-jtextpane-paint-anti-aliased-font
> http://download.oracle.com/javase/6/docs/technotes/guides/2d/flags.html#aaFonts
> ? -> see:awt.useSystemAAFontSettings
>
> Cheers,
> Dean
>
> On Wed, Apr 6, 2011 at 7:31 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> Yo, does Windows 7 show on aliased bitmaps fonts? If so, how do you get around it to show nice new aliased fonts? I could swear that there was a checkbox for this in AW preferences, but I don't see it.
>> Ter
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From sharwell at pixelminegames.com  Thu Apr  7 06:40:49 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 7 Apr 2011 08:40:49 -0500
Subject: [antlr-interest] Why is this ambiguous..
In-Reply-To: <20048689.17.1302180592281.JavaMail.pitsie@devleno>
References: <596617.82047.qm@web38505.mail.mud.yahoo.com>
	<20048689.17.1302180592281.JavaMail.pitsie@devleno>
Message-ID: <00bc01cbf529$685b4fb0$3911ef10$@pixelminegames.com>

Edit: I misread the original email, but I'm still sending this because it
resolves the warning given on the rule y.

Consider the input 'ba', starting with the rule start. It could parse as (y
y EOF), with the first y matching B without the A, and the second matching
just A. It could also parse as (y EOF), with the first y matching B and the
optional A.

If you mean for y to always include the A when present, you can use a
syntactic predicate, which forces it to choose the second interpretation
above:

y : B ((A) => A)? | A;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter Kooiman
Sent: Thursday, April 07, 2011 7:50 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Why is this ambiguous..

Hello, 

While working on a grammar I had something that boils down to 

grammar T; 
start: (y | y C)+ EOF; 
y: B (A)? | A; 

A : 'a'; 
B : 'b'; 
C : 'c'; 

This gives an expected warning on rule y, that's fine, ANTLR does the right
thing and matches A greedily. 
However it also gives a warning on rule start: 

T.g:2:19: Decision can match input such as "B {EOF, B..A}" using multiple
alternatives: 1, 2 
As a result, alternative(s) 2 were disabled for that input 

I quite understand the need to left factor this, I was just wondering why
ANTLR gives this warning. It must be staring me in the face but I don't see
it... 
How is this non-deterministic on input B EOF? Is ANTLR unable to see past
rule y for some reason? 

Thanks 
Peter 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From peter at crispu.com  Thu Apr  7 06:52:20 2011
From: peter at crispu.com (Peter Kooiman)
Date: Thu, 7 Apr 2011 08:52:20 -0500 (CDT)
Subject: [antlr-interest] Why is this ambiguous..
In-Reply-To: <00bc01cbf529$685b4fb0$3911ef10$@pixelminegames.com>
Message-ID: <30341310.20.1302184334734.JavaMail.pitsie@devleno>

Hi Sam 

> Edit: I misread the original email, but I'm still sending this because 
> it resolves the warning given on the rule y. 

;-) Yeah that much is clear, I also fully understand the crazyness of not left-factoring rule "start" into (y C?)+ EOF; 

Just was wondering why the warning on rule "start" as it stands below, I was expecting ANTLR to "auto-left-factor" with the prediction dfa and don?t quite understand why it does not on this occasion. 

Thanks 
Peter 

> Consider the input 'ba', starting with the rule start. It could parse as 
> (y y EOF), with the first y matching B without the A, and the second 
> matching just A. It could also parse as (y EOF), with the first y 
> matching B and the optional A. 

> If you mean for y to always include the A when present, you can use 
> a syntactic predicate, which forces it to choose the second 
> interpretation above: 

> y : B ((A) => A)? | A; 

> Sam 

-----Original Message----- 
From: antlr-interest-bounces at antlr.org 
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter Kooiman 
Sent: Thursday, April 07, 2011 7:50 AM 
To: antlr-interest at antlr.org 
Subject: [antlr-interest] Why is this ambiguous.. 

Hello, 

While working on a grammar I had something that boils down to 

grammar T; 
start: (y | y C)+ EOF; 
y: B (A)? | A; 

A : 'a'; 
B : 'b'; 
C : 'c'; 

This gives an expected warning on rule y, that's fine, ANTLR does the right 
thing and matches A greedily. 
However it also gives a warning on rule start: 

T.g:2:19: Decision can match input such as "B {EOF, B..A}" using multiple 
alternatives: 1, 2 
As a result, alternative(s) 2 were disabled for that input 

I quite understand the need to left factor this, I was just wondering why 
ANTLR gives this warning. It must be staring me in the face but I don't see 
it... 
How is this non-deterministic on input B EOF? Is ANTLR unable to see past 
rule y for some reason? 

Thanks 
Peter 


List: http://www.antlr.org/mailman/listinfo/antlr-interest 
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address 


From sharwell at pixelminegames.com  Thu Apr  7 06:56:31 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 7 Apr 2011 08:56:31 -0500
Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F9610C9BAC@sun.epirion.local>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608DE64@sun.epirion.local>
	<001001cbf46e$1b490020$51db0060$@pixelminegames.com>
	<2B65C901391C804DBB9CF9E6FE30C6F9610C9BAC@sun.epirion.local>
Message-ID: <00cb01cbf52b$99eebd30$cdcc3790$@pixelminegames.com>

The visibility of delegated rules now matches the way they're declared in
the imported grammar. Since some of them return nested classes declared in
the delegate grammar, I had to make the delegate grammar 'public' and all
its rules 'internal'.

I fixed the reserved names issue right after releasing 3.3.1, so it'll be
included when I release 3.3.2. Note that rule parameters and return values
need to include an explicit '@' in their declarations in the grammar, as
follows. Labels and rule names do not need the '@'.

namespace[int @in] returns [int @out] : as=A B;

Sam

-----Original Message-----
From: Ranco Marcus [mailto:ranco.marcus at epirion.nl] 
Sent: Thursday, April 07, 2011 6:49 AM
To: Sam Harwell; antlr-interest at antlr.org
Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite
grammars

Sounds great, Sam! 

What will be the visibility of the methods in the 'Delegated rules' region
now that the class of the imported grammar is internal? Private or internal?

Another small suggestion is to prefix variable names (at least those that
are reserved in C#) with an at-sign. The generated class for the grammar
below has a compile error since 'as' is not a valid variable name while
'@as' is. 

name : as=firstName lastName;

Are you planning to release new binaries any time soon? 

Thanks again,

Ranco Marcus

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: woensdag 6 april 2011 17:20
> To: Ranco Marcus; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite 
> grammars
> 
> Hi Ranco,
> 
> I made the following changes so far:
> 
> * An imported grammar is always generated as an internal class instead 
> of a public class.
> * Rules within the imported grammar are always declared public since 
> they are only called by the root grammar.
> 
> How does that sound?
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> Sent: Wednesday, March 23, 2011 6:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [CSharp3] rule visibility in composite 
> grammars
> 
> Hi all/Sam,
> 
> While using the CSharp3 target on a composite grammar, I came across a 
> few issues regarding rule visibility.
> 
> If no modifier (private, protected, public, ...) is specified for a 
> rule, the Java target generates public methods (since it is not 
> implemented IIRC) and the
> CSharp3 target generates private methods.
> 
> I like the idea to explicitly specify which rules are callable (by 
> making them public). However, for composite grammars the generated 
> parser contains delegate rules for every rule of the imported grammar, 
> even for rules in the imported grammar that aren't public (causing 
> compile errors). This can solved this adding a public modifier to 
> every rule of the imported grammar, but I was wondering if there's a more
convenient way of doing this.
> 
> Furthermore, the methods for the delegate rules in the composite 
> grammars are all public, regardless of the visibility of the rule in the
imported grammar.
> IMHO, it would be better to make them private and use the composite 
> grammar to explicitly specify the rules that are externally visible. 
> What are your thoughts on this?
> 
> Btw, the CSharp3 templates are also included in the original Java 
> tool. Does that mean that we don't need the .NET version of the tool
anymore?
> 
> 
> Best regards,
> 
> Ranco Marcus
> Epirion Knowledge Solutions B.V.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From helderdavidms at gmail.com  Fri Apr  8 03:46:24 2011
From: helderdavidms at gmail.com (=?iso-8859-1?Q?H=E9lder_Silva?=)
Date: Fri, 8 Apr 2011 11:46:24 +0100
Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE and a
	test rig in both Java and C# versions
Message-ID: <002401cbf5da$36497310$a2dc5930$@gmail.com>

I?m getting different results when i run a certain input on the IDE in
comparison to a test rig in either Java or C# as well.

 

In the IDE, for a given input, I get a NoViableAltException, which is what I
want to happen.

 

When running the same input on Java test rig I get this:

line 1:3 mismatched character ' ' expecting '@'

line 1:4 required (...)+ loop did not match anything at input 'helium'

The ?expecting ?@?? i suppose the parser is looking for another token I have
in which it matches an email address, but no rule I have starts with an
email address either.

 

In the C# test rig, the parser complains there is no input with the message:

line 1:4 required (...)+ loop did not match anything at input 'helium'

can someone give me a hint on what?s happening here?

 


From jimi at temporal-wave.com  Fri Apr  8 09:14:19 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 8 Apr 2011 09:14:19 -0700
Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE
 and a test rig in both Java and C# versions
In-Reply-To: <002401cbf5da$36497310$a2dc5930$@gmail.com>
References: <002401cbf5da$36497310$a2dc5930$@gmail.com>
Message-ID: <e27f09ac137e5e92e10ddb60484bf455@mail.gmail.com>

Well the hint is that your grammar is wrong.

But you need to post your grammar to get more help :-). I think, from the
way you describe your problem, that perhaps you have ambiguous lexer rules
and think that the parser influences what lexer rule is run, which it does
not.

Also, make sure you run the debugger in AntrlWorks and check any warning
messages when you generate the code.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of H?lder Silva
> Sent: Friday, April 08, 2011 3:46 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE
> and a test rig in both Java and C# versions
>
> I?m getting different results when i run a certain input on the IDE in
> comparison to a test rig in either Java or C# as well.
>
>
>
> In the IDE, for a given input, I get a NoViableAltException, which is
> what I want to happen.
>
>
>
> When running the same input on Java test rig I get this:
>
> line 1:3 mismatched character ' ' expecting '@'
>
> line 1:4 required (...)+ loop did not match anything at input 'helium'
>
> The ?expecting ?@?? i suppose the parser is looking for another token I
> have in which it matches an email address, but no rule I have starts
> with an email address either.
>
>
>
> In the C# test rig, the parser complains there is no input with the
> message:
>
> line 1:4 required (...)+ loop did not match anything at input 'helium'
>
> can someone give me a hint on what?s happening here?
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From asicaddress at gmail.com  Fri Apr  8 11:52:44 2011
From: asicaddress at gmail.com (A Z)
Date: Fri, 8 Apr 2011 13:52:44 -0500
Subject: [antlr-interest] Preventing longest match in the lexer
Message-ID: <BANLkTin0np8AHfn_e3+PQ=B67bH2_TOeZg@mail.gmail.com>

Hello all,

Is there a way to force 'match first' among a group of tokens? In the code
below, if 'undef(' or 'undef ' is found, it matches DIR_MACRO regardless of
the predicate. I can see why it would do this, but I'm trying to find a way
to match the DIR_UNDEF rule without resorting to combining the two rules and
manually modify the token type.


DIR_UNDEF :
  '`undef'
  SLSpace+ var0=SimpleIdent;

DIR_MACRO :
  '`' var0=SimpleIdent
  (
    {cond1(var0) == true}? =>
  | {cond2(var0) == true}? => Args
  | //Both conditionals false
  );

fragment Args : ' '* '(' ;

From uucp at antlr.org  Fri Apr  8 16:49:31 2011
From: uucp at antlr.org (uucp at antlr.org)
Date: Fri, 8 Apr 2011 20:49:31 -0300
Subject: [antlr-interest] [SPAM] how u doing??
Message-ID: <8186402224.V989Q7XL141267@jhpnx.rwnlnkcyhvjhlh.info>

Hey babe.. long time no speak... how have you been?  I am FINALLY moving right near you this weekend! Please add me on IM asap.. heres my screen names below.. I am waiting there now! PS - dont email me back my email keeps freezing, use messenger

MSN -   madison20cupid at hotmail.com 



From cummings at kjchome.homeip.net  Fri Apr  8 17:29:18 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 08 Apr 2011 20:29:18 -0400
Subject: [antlr-interest] Preventing longest match in the lexer
In-Reply-To: <BANLkTin0np8AHfn_e3+PQ=B67bH2_TOeZg@mail.gmail.com>
References: <BANLkTin0np8AHfn_e3+PQ=B67bH2_TOeZg@mail.gmail.com>
Message-ID: <4D9FA85E.8090002@kjchome.homeip.net>

On 04/08/2011 02:52 PM, A Z wrote:
> Hello all,
> 
> Is there a way to force 'match first' among a group of tokens? In the code
> below, if 'undef(' or 'undef ' is found, it matches DIR_MACRO regardless of
> the predicate. I can see why it would do this, but I'm trying to find a way
> to match the DIR_UNDEF rule without resorting to combining the two rules and
> manually modify the token type.

Because both tokens begin with '`', you have few choices here.

Left Factor and combine the rules, or increase the "k" for those rules.
 I suspect your problem is that 'undef' will also match SimpleIdent?
You are looking for '`undef` as a single token.
I would combine the rules...  (I would also LEX as '`' 'undef', but that
is another matter.  Your DIR_UNDEF token contains an awful lot of text,
including whitespace?)

> 
> DIR_UNDEF :
>   '`undef'
>   SLSpace+ var0=SimpleIdent;
> 
> DIR_MACRO :
>   '`' var0=SimpleIdent
>   (
>     {cond1(var0) == true}? =>
>   | {cond2(var0) == true}? => Args
>   | //Both conditionals false
>   );
> 
> fragment Args : ' '* '(' ;

fragment DIR_UNDEF : ;

DIR_MACRO :
      ( '`undef` )=> '`undef' SLSpace+ var0=SimpleIdent
          { $type = DIR_UNDEF; }
   |  '`' var0=SimpleIdent
      ( {cond1(var0) == true}? =>
      | {cond2(var0) == true}? => Args
      | //Both conditionals false
      );

Now, it will try and lex `undef first, then look for ` followed by any
SimpleIdent second.  Order of lexing guarenteed.

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From uucp at antlr.org  Fri Apr  8 22:06:54 2011
From: uucp at antlr.org (uucp at antlr.org)
Date: Sat, 9 Apr 2011 06:06:54 +0100
Subject: [antlr-interest] [SPAM] HI :)
Message-ID: <8899997470.GDF3G3C7827655@ffkunbipou.fdnzim.va>

Hey babe.. long time no speak... how have you been?  I am FINALLY moving right near you this weekend! Please add me on IM asap.. heres my screen names below.. I am waiting there now! PS - dont email me back my email keeps freezing, use messenger

M S.N -   madison20gap at hotmail.com 



From betelgeuse at gentoo.org  Sat Apr  9 01:56:24 2011
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Sat, 09 Apr 2011 11:56:24 +0300
Subject: [antlr-interest] ANTLR wanting to consume weird characters when
	using negation
Message-ID: <inp70h$hdi$1@dough.gmane.org>

I am trying to get the attached grammar to match from one token to the
next. The generated code has this if which doesn't look correct to me:

if ( (input.LA(1)>='\u0000' &&
input.LA(1)<='\u0004')||(input.LA(1)>='\u0006' && input.LA(1)<='\uFFFF') ) {
            	        input.consume();

 }

I don't see why it should consume \u0005 which seems to be some kind of
a non printable character. I am using antlr 3.3. Is this a bug in ANTLR
or am I just doing something wrong?

Regards,
Petteri
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test_negation.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110409/dfa6b392/attachment.pl 

From ter at antlr.org  Sat Apr  9 08:36:08 2011
From: ter at antlr.org (ter at antlr.org)
Date: Sat, 9 Apr 2011 12:36:08 -0300
Subject: [antlr-interest] [SPAM] Having a higher credential gives you power
	to earn more
Message-ID: <0088455307.Y21Q6VGH890392@ofgcucl.zygmkb.ua>

Get a Degree in 4 to 6 Weeks with our program! 
~We offer a program that will help ANYONE with professional experience

get a 100% verified Degree:
Doctorate (PHD), Bachelors, Masters

- Think about it... 
Within a few weeks, you can become a college graduate!- Follow YOUR Dreams- Live a better life by earning or upgrading your degree
This is a rare chance for you to make a right move and receive your due
benefits... if you are qualified but are lacking that piece of paper, 
Get one from us in a fraction of the time.

~CALL FOR A FREE CONSULTATION~
1-248-213-1439

It is your move...
Make the right decision.
Due to time zone variations across the country, a representative may not be in the office at the time of your call.
If that is the case please leave us a message with your name and phone number and we will get back to you as soon as possible.

Do Not Reply to this Email.
We do not reply to text inquiries, and our server will reject all response traffic.
We apologize for any inconvenience this may have caused you.


From kazuki.rebirth at hotmail.fr  Sat Apr  9 13:56:49 2011
From: kazuki.rebirth at hotmail.fr (Kazuki)
Date: Sat, 9 Apr 2011 13:56:49 -0700 (PDT)
Subject: [antlr-interest] Problem with MismatchedTokenException
Message-ID: <1302382609683-6257670.post@n2.nabble.com>

Hi,

I have just started using ANTLR and I get stuck with this trivial grammar : 

grammar Test;

options {
       language = Java;
}

test  :       NAME '=' VALUE;

NAME    :       LETTER+;
VALUE   :       (LETTER | DIGIT)+;

fragment
LETTER
       :       'a'..'z'|'A'..'Z'
       ;

fragment
DIGIT
       :       '0'..'9'
       ;

With the input "test=toto" I have a MismatchedTokenException on the token
"toto" while I get a correct syntax with an input using a digit like
"test=toto0".
Can someone explain what is my mistake in the grammar ?

Thank you.

--
View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-MismatchedTokenException-tp6257670p6257670.html
Sent from the ANTLR mailing list archive at Nabble.com.

From kirby.bohling at gmail.com  Sat Apr  9 14:12:48 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Sat, 9 Apr 2011 16:12:48 -0500
Subject: [antlr-interest] Problem with MismatchedTokenException
In-Reply-To: <1302382609683-6257670.post@n2.nabble.com>
References: <1302382609683-6257670.post@n2.nabble.com>
Message-ID: <BANLkTi=_=c2fAhk63F1wyaxW9h8m9-XL=w@mail.gmail.com>

The problem is pretty simple there (but a sign you need to think
everything through more).
"test=toto" will generate the following Tokens:

NAME GENERATED_EQUALS NAME

Which your parser rules won't allow.

"test=toto0" will generate the following Tokens:

NAME GENERATED_EQUALS VALUE

Which your parser does allow.

Parroting the commonly given advice, stop doing this low level
validation in the lexer.  Let the 'bad' push through as long as
absolutely possible.  You can't generate a decent error beyond exactly
this type of thing.  If you let this percolate all the way to the end,
you could generate a nice error that had plenty of context.

In this case, one concept would be to use VALUE on both sides of the
equal sign.  When you get to the tree walking phase, you'd examine the
contents of the token on the left side of the token, if it included an
illegal character like "toto2=bar" at that point you could generate an
error like: 'toto2' is not a legal ${L-Name} on line 47 of the input
file.

Kirby



On Sat, Apr 9, 2011 at 3:56 PM, Kazuki <kazuki.rebirth at hotmail.fr> wrote:
> Hi,
>
> I have just started using ANTLR and I get stuck with this trivial grammar :
>
> grammar Test;
>
> options {
> ? ? ? language = Java;
> }
>
> test ?: ? ? ? NAME '=' VALUE;
>
> NAME ? ?: ? ? ? LETTER+;
> VALUE ? : ? ? ? (LETTER | DIGIT)+;
>
> fragment
> LETTER
> ? ? ? : ? ? ? 'a'..'z'|'A'..'Z'
> ? ? ? ;
>
> fragment
> DIGIT
> ? ? ? : ? ? ? '0'..'9'
> ? ? ? ;
>
> With the input "test=toto" I have a MismatchedTokenException on the token
> "toto" while I get a correct syntax with an input using a digit like
> "test=toto0".
> Can someone explain what is my mistake in the grammar ?
>
> Thank you.
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-MismatchedTokenException-tp6257670p6257670.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jtalafous at gmail.com  Sat Apr  9 16:04:08 2011
From: jtalafous at gmail.com (J. Talafous)
Date: Sat, 9 Apr 2011 18:04:08 -0500
Subject: [antlr-interest] NPE in Tree Grammar
Message-ID: <BANLkTikuZF9vOMfccvEnD6he8=1tkMnsNQ@mail.gmail.com>

What am I doing wrong... or have I found a new bug in ANTLR Parser
Generator  Version 3.3 Nov 30, 2010 12:45:30?  My grammars debug OK in
ANTLRWorks IDE, but I am still a novice at ANTLR grammars.

My goal is to parse in a series of (key,value) pairs such as in the
following input:

login where username='MyName'\n

Pretty straightforward.  Stacktrace below.

Here is my grammar:
--------------------------------------------------------------------

grammar Test1;

options {
	language=Java;
	output=AST;
}

tokens {
    LOGIN='login';
    USERNAME='username';
    PASSWORD='password';
	WHERE='where';
}

@header {
package test;
}

@lexer::header{
package test;
}

command
	: sentence (NEWLINE! sentence)* NEWLINE!? EOF!
	{
		System.out.println($command.text);
	};

sentence
	: WS!? verb^ WS! whereClause* WS!?
	{
		System.out.println($sentence.text);
	}
	;

whereClause
	: WHERE^ (WS! whereSubClause)+
	;
	
whereSubClause returns [String value1, String value2]
	: noun^ WS!? '='! WS!? (VALUE) {$value1 = $noun.text; $value2 = $VALUE.text;}
	;

verb
	: LOGIN
	;

noun
	:
	| USERNAME
	| PASSWORD
	;

NEWLINE
	: '\r'? '\n'
	;

WS
	: (' '|'\t'|'\n'|'\r')+
	;

VALUE:
	( '"' (~'"')* '"'
		| '\'' (~'\'')* '\''
	)
	;

Here is my Tree grammar
------------------------------------------------------------

tree grammar Test1Walker;
options {
	tokenVocab=Test1; // use tokens in Test1
	ASTLabelType=CommonTree; // use CommonTree nodes
}

@header {
package test;
}

command
	: ^(LOGIN whereOne)
	{
		System.out.println("MATCH: "+$whereOne.key + " " +$whereOne.value + " ");
	}
	;

whereOne returns [String key, String value]
	: ^(WHERE keyValue)
	{
		$key=$keyValue.key;
		$value=$keyValue.value;
	}
	;

keyValue returns [String key, String value]
	: ^(noun VALUE)
	{
		$key = $noun.text;
		$value = $VALUE.text;
	}
	;

noun
	:
	| USERNAME
	| PASSWORD
	;

Here is the Java method to run it
--------------------------------------------------------------

    public static void main(String[] args) throws
RecognitionException, IOException
    {
        test1();
    }

    private static void test1() throws RecognitionException, IOException
    {
        String s = "login where username='MyName'\n" ;
        byte[] testCases = s.getBytes();
        ANTLRInputStream input = new ANTLRInputStream(new
ByteArrayInputStream(testCases));
        Test1Lexer lexer = new Test1Lexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        Test1Parser parser = new Test1Parser(tokens);
        Test1Parser.command_return result = parser.command();
        CommonTree tree = (CommonTree) result.getTree();
        System.out.println("WALK RESULTING TREE");
        System.out.println(tree.toStringTree());
        CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
        Test1Walker walker = new Test1Walker(nodes);
        walker.command();
    }

Here is the console output complete with NPE
------------------------------------------

login where username='MyName'

WALK RESULTING TREE
(login (where (username 'MyName')))
Exception in thread "main" java.lang.NullPointerException
	at test.Test1Walker.keyValue(Test1Walker.java:156)
	at test.Test1Walker.whereOne(Test1Walker.java:102)
	at test.Test1Walker.command(Test1Walker.java:57)
	at test.Onyx.test1(Onyx.java:200)
	at test.Onyx.main(Onyx.java:183)


Here is the generated Test1Walker.java
------------------------------------------------
look for LINE 156 below
    // $ANTLR start "keyValue"
    // Test1Walker.g:26:1: keyValue returns [String key, String value]
: ^( noun VALUE ) ;
    public final Test1Walker.keyValue_return keyValue() throws
RecognitionException {
        Test1Walker.keyValue_return retval = new Test1Walker.keyValue_return();
        retval.start = input.LT(1);

        CommonTree VALUE4=null;
        Test1Walker.noun_return noun3 = null;


        try {
            // Test1Walker.g:27:2: ( ^( noun VALUE ) )
            // Test1Walker.g:27:4: ^( noun VALUE )
            {
            pushFollow(FOLLOW_noun_in_keyValue84);
            noun3=noun();

            state._fsp--;


            match(input, Token.DOWN, null);
            VALUE4=(CommonTree)match(input,VALUE,FOLLOW_VALUE_in_keyValue86);

            match(input, Token.UP, null);

 /*LINE 156: */	retval.key = (noun3!=null?(input.getTokenStream().toString(
              input.getTreeAdaptor().getTokenStartIndex(noun3.start),
              input.getTreeAdaptor().getTokenStopIndex(noun3.start))):null);
            		retval.value = (VALUE4!=null?VALUE4.getText():null);
            	

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }
    // $ANTLR end "keyValue"

The NPE comes from the input.getTokenStream().  The variable
input.toString() is giving me this message:
"com.sun.jdi.InvocationException occurred invoking method."

After many hours, I am still baffled.  Any help appreciated and thanks
for your time.

Joe

From kazuki.rebirth at hotmail.fr  Sat Apr  9 23:43:23 2011
From: kazuki.rebirth at hotmail.fr (Kazuki)
Date: Sat, 9 Apr 2011 23:43:23 -0700 (PDT)
Subject: [antlr-interest] Problem with MismatchedTokenException
In-Reply-To: <BANLkTi=_=c2fAhk63F1wyaxW9h8m9-XL=w@mail.gmail.com>
References: <1302382609683-6257670.post@n2.nabble.com>
	<BANLkTi=_=c2fAhk63F1wyaxW9h8m9-XL=w@mail.gmail.com>
Message-ID: <1302417803050-6258339.post@n2.nabble.com>

If I understood well, the lexer will check for all tokens (NAME and VALUE)
even if I tell him to look only for VALUE. That look like weird ^^'

I'm a little confused about tokens... Your answer is very clear : I have not
to do such low level validation because, with the context, I can tell
exactly where the error is in the tree parser.

At this point of view, I should make an only token that match all other
tokens :
TOKEN : ('a'..'z'|'A'..'Z'|'0'..'9')+

What can of tokens (expressions, conditions, etc...) I can use to correctly
distinguish them ? 

--
View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-MismatchedTokenException-tp6257670p6258339.html
Sent from the ANTLR mailing list archive at Nabble.com.

From kirby.bohling at gmail.com  Sun Apr 10 00:21:39 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Sun, 10 Apr 2011 02:21:39 -0500
Subject: [antlr-interest] Problem with MismatchedTokenException
In-Reply-To: <1302417803050-6258339.post@n2.nabble.com>
References: <1302382609683-6257670.post@n2.nabble.com>
	<BANLkTi=_=c2fAhk63F1wyaxW9h8m9-XL=w@mail.gmail.com>
	<1302417803050-6258339.post@n2.nabble.com>
Message-ID: <BANLkTi=xA+NS5VmEuZ=8Sx79OJJzigLbew@mail.gmail.com>

I'm not much of an expert, and I'm not really sure what you are
attempting to accomplish.  So it is really hard to advise you on how
to resolve the problem in the cleanest way.  Hence my comment about
parroting common advice.

One item about ANTLR to remember is that the lexer runs from start to
finish before the parser does anything.  Even if that isn't always
technically true, it is effectively true.  There is no backtracking
from the parser to get the lexer to "retry" and realize that the token
given is a NAME vs. a VALUE.  You can run the lexer without a parser,
I'd highly recommend you do so, and feed the lexer every kind of input
you can think of and make sure you know exactly what the lexer will
return before doing much of anything else.

My standard advice to everyone is that I got a lot more traction once
I ruthlessly enforced two rules:

1. Always separate the lexer from the parser rules.  It really helps
me keep in mind, that the lexer runs, then the parser runs.  The two
really aren't connected, and there is absolutely no feedback loop
between the two.

2. Never use an inline token.  The example in yours is the '=' sign
(that creates a token because it is part of a parse rule, that isn't
explicitly part of your lexer, so debugging problems can be harder,
because there is a rule you can't see while reading the lexer source).

While the book does this all the time, it really only works out in
trivial grammars from what I can tell.  So while it is great while
quickly hacking together a calculator where all the work is done in
the parser, it is harder to do if you are planning on writing a more
complex example that involves multiple passes.

I know why the ANTLR and the book always show the combined grammars
and why they use the inline tokens, but until you grok what is really
going on, they seem to cause more headaches than they solve.  If
you're the guy that wrote the tool, and can see the generated code,
I'm sure it's really handy.  For most mere mortals, it just screws you
up (at least it did me, I had to sent ANTLR down for a year and come
back to it before I could get over that mental hurdle).

Finally, every time you have a problem, run the lexer, and print out
the token stream.  Make really, really sure, you are getting exactly
the tokens you think you should be in exactly the order you think you
should be.  I've spent a ton of time tracking down a parser problem,
only to realize the lexer was not doing what I expected it to.  Once
you are sure the lexer is doing exactly what you expect, then move on
to validating the parser.

Anyways, those are my lessons I learned the hardway.  I'd recommend
reading the list archives, several folks post pretty sound advise.
Jim Idle especially so.  Read the FAQ entries, as they cover a lot of
useful ground.  Then go look at all the grammars that are out there,
and try and identify a grammar that is close the language you want to
parse.  So if you want to parse a C-like language, study the C parser,
and maybe the Java parsers.  Figuring out how to Lex C/C++ comments,
or Java strings yourself is reasonable difficult when you are first
starting out.  Go look at the grammars of languages you understand and
are similar to get clues about how to structure core pieces.  If you
screw up the core pieces, you'll find yourself patching up corner
cases everywhere.  When you are doing that it is generally a clue that
you've just used the wrong approach.

Best of luck,

Kirby

On Sun, Apr 10, 2011 at 1:43 AM, Kazuki <kazuki.rebirth at hotmail.fr> wrote:
> If I understood well, the lexer will check for all tokens (NAME and VALUE)
> even if I tell him to look only for VALUE. That look like weird ^^'
>
> I'm a little confused about tokens... Your answer is very clear : I have not
> to do such low level validation because, with the context, I can tell
> exactly where the error is in the tree parser.
>
> At this point of view, I should make an only token that match all other
> tokens :
> TOKEN : ('a'..'z'|'A'..'Z'|'0'..'9')+
>
> What can of tokens (expressions, conditions, etc...) I can use to correctly
> distinguish them ?
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-MismatchedTokenException-tp6257670p6258339.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kazuki.rebirth at hotmail.fr  Sun Apr 10 06:05:56 2011
From: kazuki.rebirth at hotmail.fr (Kazuki)
Date: Sun, 10 Apr 2011 06:05:56 -0700 (PDT)
Subject: [antlr-interest] Problem with MismatchedTokenException
In-Reply-To: <BANLkTi=xA+NS5VmEuZ=8Sx79OJJzigLbew@mail.gmail.com>
References: <1302382609683-6257670.post@n2.nabble.com>
	<BANLkTi=_=c2fAhk63F1wyaxW9h8m9-XL=w@mail.gmail.com>
	<1302417803050-6258339.post@n2.nabble.com>
	<BANLkTi=xA+NS5VmEuZ=8Sx79OJJzigLbew@mail.gmail.com>
Message-ID: <1302440756335-6258720.post@n2.nabble.com>

Thank you a lot Kirby for your amazing help =)

Now I understand my bad approach : it's now clear that first the lexer makes
its job, then the parser and there is no backtracking between them.

Your advices for making and debugging grammar will be an huge help too.

Best regards,
Kazuki.



--
View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-MismatchedTokenException-tp6257670p6258720.html
Sent from the ANTLR mailing list archive at Nabble.com.

From Gary.Anderson at frb.gov  Sun Apr 10 12:49:24 2011
From: Gary.Anderson at frb.gov (Gary.Anderson at frb.gov)
Date: Sun, 10 Apr 2011 15:49:24 -0400
Subject: [antlr-interest] MATLAB grammar for antlr v3
Message-ID: <20110410200117.4CC3F2C448E@ibastion.frb.gov>



Markus,
I am also interested in parsing matlab.  Actually, I have written a parser
for a language, dynare (http://www.dynare.org/),  that interacts with
matlab.  My problem is related to the one you mentioned about the use of
'\''.
I merely want to pass all non dynare code through untouched.
unfortunately, this conflicts with my use of quoted strings as tokens.

Have you worked on a matlab grammar?  How did you address the use of '\''?
Regards,

Gary



From parrt at cs.usfca.edu  Sun Apr 10 16:19:57 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 10 Apr 2011 16:19:57 -0700
Subject: [antlr-interest] major update to ANTLR 3 main line
Message-ID: <BC959C0F-CE9C-400B-B02E-5C4F684C925B@cs.usfca.edu>

Well, Sam Harwell updated all of the grammars in ANTLR v3 itself to use only v3. Previously, many of the grammars in v3 were written in v2 (bootstrapping). The v2 dependency cause trouble because of its unclean license.  To get ANTLR completely squeaky clean, however, I needed to upgrade its use of StringTemplate as well. It was using ST v3 to generate code, which in turn used a bunch of v2 grammars and its implementation. I have just removed this dependency on ST v3 and, hence, the indirect dependency on ANTLR v2.

It took me a while,  I have made all the changes to the source code. All of the unit tests (well, minus a couple) work as well as all of the examples in examples-v3 directories. If you care, I have enclosed the changed files below.

I have only changed the Java at target so far; now that I have it all working, I can apply all those changes to the other targets. I will try to coordinate with the target developers. If you sync to the antlr3-main branch, your target will fail until I can update the templates.

Once this is all done, we can release 3.4. Then, I need to integrate all these changes back in the main line, which is the branch holding the future v4 ANTLR.

Ter

edit //depot/code/antlr/antlr3-main/runtime/Java/src/main/java/org/antlr/runtime/tree/DOTTreeGenerator.java#2
edit //depot/code/antlr/antlr3-main/tool/CHANGES.txt#2
edit //depot/code/antlr/antlr3-main/tool/src/main/antlr3/org/antlr/grammar/v3/ActionTranslator.g#3
edit //depot/code/antlr/antlr3-main/tool/src/main/antlr3/org/antlr/grammar/v3/CodeGenTreeWalker.g#2
edit //depot/code/antlr/antlr3-main/tool/src/main/antlr3/org/antlr/grammar/v3/LeftRecursiveRuleWalker.g#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/Tool.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/analysis/DFA.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/analysis/SemanticContext.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/ACyclicDFACodeGenerator.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/ActionScriptTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/CPPTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/CSharp2Target.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/CTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/CodeGenerator.java#4
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/DelphiTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/JavaTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/ObjCTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/RubyTarget.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/codegen/Target.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/misc/Utils.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/BuildDependencyGenerator.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/DOTGenerator.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/ErrorManager.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/FASerializer.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/Grammar.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarAST.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarAnalysisAbortedMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarDanglingStateMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarInsufficientPredicatesMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarNonDeterminismMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarSemanticsMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarSyntaxMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/GrammarUnreachableAltsMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/LeftRecursionCyclesMessage.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/LeftRecursiveRuleAnalyzer.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/Message.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/NonRegularDecisionMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/RecursionOverflowMessage.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/Rule.java#3
edit //depot/code/antlr/antlr3-main/tool/src/main/java/org/antlr/tool/ToolMessage.java#2
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/AST.stg#2
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/ASTDbg.stg#2
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/ASTParser.stg#2
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/ASTTreeParser.stg#2
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/Dbg.stg#4
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/Java.stg#3
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/codegen/templates/Java/ST.stg#2
edit //depot/code/antlr/antlr3-main/tool/src/main/resources/org/antlr/tool/templates/messages/languages/en.stg#2
edit //depot/code/antlr/antlr3-main/tool/src/test/java/org/antlr/test/BaseTest.java#3
edit //depot/code/antlr/antlr3-main/tool/src/test/java/org/antlr/test/TestAttributes.java#3
edit //depot/code/antlr/antlr3-main/tool/src/test/java/org/antlr/test/TestLexer.java#2
edit //depot/code/antlr/antlr3-main/tool/src/test/java/org/antlr/test/TestNFAConstruction.java#3
edit //depot/code/antlr/antlr3-main/tool/src/test/java/org/antlr/test/TestSymbolDefinitions.java#3
edit //depot/code/antlr/antlr3-main/tool/src/test/java/org/antlr/test/TestTemplates.java#3
Change 8151 submitted.


From p4rst2 at gmail.com  Sun Apr 10 23:27:09 2011
From: p4rst2 at gmail.com (preitz sharma)
Date: Mon, 11 Apr 2011 11:57:09 +0530
Subject: [antlr-interest] Error handeling in antlr 3.2
In-Reply-To: <BANLkTimze9bHdDJfjm-8XC8u4HAjOhEzMw@mail.gmail.com>
References: <BANLkTimze9bHdDJfjm-8XC8u4HAjOhEzMw@mail.gmail.com>
Message-ID: <BANLkTi=y=3gyG9cCnR7CMpMGp1ZEcN0XDw@mail.gmail.com>

Hi,
I need to report  customized error when ever user input does not match
our defined rules.

Here is my code:

   grammar second1;

   @lexer::members {
   @Override
   public void reportError(RecognitionException e) {
       System.out.println("Throwing Exception: "+ e.getMessage());
       displayRecognitionError(getTokenNames(), e);
       throw new IllegalArgumentException(e);
     }
     @Override
     public void displayRecognitionError(String[] tokenNames,
RecognitionException e) {
           String hdr = getErrorHeader(e);
           String msg = getErrorMessage(e, tokenNames);
           System.out.println(hdr + " " + msg);
        }
   }

   @parser::members {
   public void reportError(RecognitionException e) {
       System.out.println("Throwing Exception: "+ e.getMessage());
       displayRecognitionError(getTokenNames(), e);
       throw new IllegalArgumentException(e);
     }
     @Override
     public void displayRecognitionError(String[] tokenNames,
RecognitionException e) {
           String hdr = getErrorHeader(e);
           String msg = getErrorMessage(e, tokenNames);
           System.out.println(hdr + " " + msg);
         }
    private boolean inbounds(Token t, int min, int max, String methodName) {
          int n = Integer.parseInt(t.getText());
          if(n >= min && n <= max) {
             return true;
          }
      else {
        System.out.println("The range for value accepted by " + methodName+"
is "+min +"-" + max );
        return false;
      }
    }
   }

   expr       :  SET attribute EOF;

   attribute  :  Value1 int1:integer1["Value1"]    {
System.out.println("Accepted");    }
                   |  Value2 integer2 ["Value2"]          {
System.out.println("Accepted");       }
          ;
          exception[int1]:
               catch[Exception e] {System.out.println("Error Reported for
int1");}
          exception:
               catch[Exception e] {System.out.println("General error
Reported");}

   integer1 [String methodName]   :  Int { inbounds($Int, 0,1000,methodName)
}? ;
   integer2 [String methodName]  :  Int { inbounds($Int, 0,10000,methodName)
}? ;
   Int        :  '0'..'9'+;

   SET        :  'set';
   Value1     :  'value';
   Value2     :  'value2';

   fragment WS
     : (' ' | '\t')
    ;

But while compiling this code I am getting the following errors:


   error(100): second1.g:26:22: syntax error: antlr: second1.g:26:22:
unexpected token: int1
   error(100): second1.g:29:17: syntax error: antlr: second1.g:29:17:
unexpected token: :
   error(100): second1.g:32:10: syntax error: antlr: second1.g:32:10:
unexpected token: catch
   error(100): second1.g:0:0: syntax error: assign.types: <AST>:0:0:
unexpected AST node: <end-of-block>
   error(100): second1.g:0:0: syntax error: assign.types: <AST>:0:0:
unexpected end of subtree
   error(100): second1.g:0:0: syntax error: define: <AST>:0:0: unexpected
AST node: <end-of-block>
   error(100): second1.g:0:0: syntax error: define: <AST>:0:0: unexpected
AST node: <end-of-block>
   error(100): second1.g:0:0: syntax error: define: <AST>:0:0: unexpected
end of subtree
   error(106): second1.g:26:27: reference to undefined rule: integer1
   error(106): second1.g:27:22: reference to undefined rule: integer2
   warning(105): second1.g:27:15: no lexer rule corresponding to token:
Value2
   warning(105): second1.g:26:15: no lexer rule corresponding to token:
Value1
   warning(105): second1.g:24:15: no lexer rule corresponding to token: SET

What should I do? :(
I checked on the link: http://www.antlr.org/blog/antlr3/error.handling.tml ,
this is how we handle exception in ANTLR 3.x
Why is it not working in my case then :(
Please help me out.



-- 
Regards
Preeti Sharma

From 20neophyte08 at gmail.com  Sun Apr 10 23:49:31 2011
From: 20neophyte08 at gmail.com (NeoPhyte)
Date: Sun, 10 Apr 2011 23:49:31 -0700 (PDT)
Subject: [antlr-interest] Interactive processing of input
Message-ID: <1302504571753-6260368.post@n2.nabble.com>

Does ANTLR give me an option for interactive processing of input.  ie
Processing every line of input one by one
>From whatever I know till now, it starts processing after it encounters an
EOF. 
Is there some way I can make it process my input by some other means, say
when it reads a "enter" etc.

Like my DSL(using ANTLR) should show the following:-

1+2
5

2+5+8
15


6/3
2

etc....


--
View this message in context: http://antlr.1301665.n2.nabble.com/Interactive-processing-of-input-tp6260368p6260368.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Mon Apr 11 00:24:02 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 11 Apr 2011 09:24:02 +0200
Subject: [antlr-interest] Interactive processing of input
In-Reply-To: <1302504571753-6260368.post@n2.nabble.com>
References: <1302504571753-6260368.post@n2.nabble.com>
Message-ID: <BANLkTi=t3i1gf3506XxAi22m4ddggJvVbA@mail.gmail.com>

On Mon, Apr 11, 2011 at 8:49 AM, NeoPhyte <20neophyte08 at gmail.com> wrote:

> Does ANTLR give me an option for interactive processing of input.  ie
> Processing every line of input one by one
> >From whatever I know till now, it starts processing after it encounters an
> EOF.
> Is there some way I can make it process my input by some other means, say
> when it reads a "enter" etc.


The parser can only get started after it receives the input, so the answer
is no: you can't let the parser "do things" if only part of the tokens are
known.

Why not line simply create a new lexer/parser for each line and process the
input (and evaluate it).

Regards,

Bart.

From 20neophyte08 at gmail.com  Mon Apr 11 02:19:48 2011
From: 20neophyte08 at gmail.com (NeoPhyte)
Date: Mon, 11 Apr 2011 02:19:48 -0700 (PDT)
Subject: [antlr-interest] Interactive processing of input
In-Reply-To: <BANLkTi=t3i1gf3506XxAi22m4ddggJvVbA@mail.gmail.com>
References: <1302504571753-6260368.post@n2.nabble.com>
	<BANLkTi=t3i1gf3506XxAi22m4ddggJvVbA@mail.gmail.com>
Message-ID: <1302513588133-6260754.post@n2.nabble.com>

Will this method allow me to process each line in an input file individually.
Like if my grammar has multiple rules and I want to process each of these
rules individually....
Something like...

say my grammar has following 3 individual parser rules

rule1 : ....
rule2 : ....
rule3: ...

final : (rule1|rule2|rule3)+;

//rest of the lexer and parser rules

and my i/o is

read input for rule1
show output for rule1

read input for rule3
show output for rule3

read input for rule1
show output for rule1

an so on, until I use something like an EOF(ctrl-z)....

with the method suggested by you, can I achieve this?...and if so can u plz
provide a sample code for the same....



--
View this message in context: http://antlr.1301665.n2.nabble.com/Interactive-processing-of-input-tp6260368p6260754.html
Sent from the ANTLR mailing list archive at Nabble.com.

From agupta213 at csc.com  Mon Apr 11 04:32:16 2011
From: agupta213 at csc.com (Ankit A Gupta)
Date: Mon, 11 Apr 2011 17:02:16 +0530
Subject: [antlr-interest] Need pointers for getting comment statements in
 trees produced by v3 grammer files
Message-ID: <OFDECF9CF8.09771EE7-ON6525786F.003B5E19-6525786F.003F7D8B@csc.com>

Hi, I am currently using .g file (v3) and working on modifying nodes for 
COMMENT statements for Java codes so that these statements are visible 
after parsing. I have noticed that the channel for comment statements is 
Hidden (something like $channel = HIDDEN;), because of which I can't see 
the COMMENTS of Java code being parsed. If anybody can provide pointers so 
that COMMENT statements can be seen in the tree generated after parsing, 
that will be grateful. 

Regards,
Ankit

From davidoliver.ramos at gmail.com  Mon Apr 11 08:35:04 2011
From: davidoliver.ramos at gmail.com (Oliver Ramos)
Date: Mon, 11 Apr 2011 17:35:04 +0200
Subject: [antlr-interest] help
Message-ID: <BANLkTi=XEei8K23maQarQxxKi9uZx2ccyg@mail.gmail.com>

Hello.

I'm using the latest grammar for PL / SQL.

He took her http://www.antlr.org/grammar/list.

The language I am using is C #. What changes should be made in this grammar to
work correctly with C #?


Thanks

From researcher0x00 at gmail.com  Mon Apr 11 09:31:37 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Apr 2011 12:31:37 -0400
Subject: [antlr-interest] Need pointers for getting comment statements
 in trees produced by v3 grammer files
In-Reply-To: <OFDECF9CF8.09771EE7-ON6525786F.003B5E19-6525786F.003F7D8B@csc.com>
References: <OFDECF9CF8.09771EE7-ON6525786F.003B5E19-6525786F.003F7D8B@csc.com>
Message-ID: <BANLkTinZQ9u13yQ0Z_pDr-+OsLXM5-5EfQ@mail.gmail.com>

> Hi Ankit,


If I understand the question correctly,
then have you tried removing {$channel=HIDDEN;} from the lexer rule?

i.e.
LINE_COMMENT
   :   '//' ~('\n' | '\r')* '\r'? '\n' {$channel=HIDDEN;}
   ;

should be

 LINE_COMMENT
   :   '//' ~('\n' | '\r')* '\r'? '\n'
   ;

Eric

From bkiers at gmail.com  Mon Apr 11 10:39:10 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 11 Apr 2011 19:39:10 +0200
Subject: [antlr-interest] Need pointers for getting comment statements
 in trees produced by v3 grammer files
In-Reply-To: <BANLkTinZQ9u13yQ0Z_pDr-+OsLXM5-5EfQ@mail.gmail.com>
References: <OFDECF9CF8.09771EE7-ON6525786F.003B5E19-6525786F.003F7D8B@csc.com>
	<BANLkTinZQ9u13yQ0Z_pDr-+OsLXM5-5EfQ@mail.gmail.com>
Message-ID: <BANLkTim8nL0p0CfaxNCPGhs2o_f+cPg6hw@mail.gmail.com>

On Mon, Apr 11, 2011 at 6:31 PM, The Researcher <researcher0x00 at gmail.com>wrote:

> > Hi Ankit,
>
>
> If I understand the question correctly,
> then have you tried removing {$channel=HIDDEN;} from the lexer rule?
>
> i.e.
> LINE_COMMENT
>   :   '//' ~('\n' | '\r')* '\r'? '\n' {$channel=HIDDEN;}
>   ;
>
> should be
>
>  LINE_COMMENT
>   :   '//' ~('\n' | '\r')* '\r'? '\n'
>   ;
>
> Eric
> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>

But then (one of) the parser rules should also include this LINE_COMMENT
somewhere, of course.

Regards,

Bart.

From bkiers at gmail.com  Mon Apr 11 10:44:23 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 11 Apr 2011 19:44:23 +0200
Subject: [antlr-interest] Interactive processing of input
In-Reply-To: <1302513588133-6260754.post@n2.nabble.com>
References: <1302504571753-6260368.post@n2.nabble.com>
	<BANLkTi=t3i1gf3506XxAi22m4ddggJvVbA@mail.gmail.com>
	<1302513588133-6260754.post@n2.nabble.com>
Message-ID: <BANLkTimoqo2rbBgaCdKnX-wwiCOk4d5+bA@mail.gmail.com>

On Mon, Apr 11, 2011 at 11:19 AM, NeoPhyte <20neophyte08 at gmail.com> wrote:

> Will this method allow me to process each line in an input file
> individually.
> Like if my grammar has multiple rules and I want to process each of these
> rules individually....
> Something like...
>
> say my grammar has following 3 individual parser rules
>
> rule1 : ....
> rule2 : ....
> rule3: ...
>
> final : (rule1|rule2|rule3)+;
>
> //rest of the lexer and parser rules
>
> and my i/o is
>
> read input for rule1
> show output for rule1
>
> read input for rule3
> show output for rule3
>
> read input for rule1
> show output for rule1
>
> an so on, until I use something like an EOF(ctrl-z)....
>
> with the method suggested by you, can I achieve this?...and if so can u plz
> provide a sample code for the same....



Hmm, I really don't know what you mean...

As long as you invoke the `final` method on your parser (which matches one
of: `rule1`, `rule2` or `rule3`), you're okay, AFAIK.

Regards,

Bart.

From parrt at cs.usfca.edu  Mon Apr 11 12:44:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Apr 2011 12:44:54 -0700
Subject: [antlr-interest] ST v4 2x faster than v3 in real world test
Message-ID: <B6164E25-0018-4695-B5A2-3208E7A267E3@cs.usfca.edu>

Hi. I just did speed tests with the new version of ANTLR that uses ST v4 not v3. results here:

http://bit.ly/htzS15

Ter

From parrt at cs.usfca.edu  Mon Apr 11 13:25:47 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Apr 2011 13:25:47 -0700
Subject: [antlr-interest] Context-sensitive lexing and ANTLR v4
Message-ID: <679960FB-79B1-49E7-9552-FC5D835B3036@cs.usfca.edu>

I see in an early 2004 workshop that I intended to handle Context-sensitive lexing:

http://www.antlr.org/workshop/ANTLR2004/proceedings/ANTLR-3.0-Features.pdf

? Each parser decision point generates special rule
in lexer with possible choices: e.g., (ID|INT)
? Difficulties
? ?for?, find ?fore?must say ?missing for, found ID?
? whitespace
? The C++ template vs ">>" token problem simply
disappears; i.e., when lexing
List<List<int>> a;
nested template has ">>" in it.  Lexer, without context,
cannot know which to pick.  Only the parser knows that
it expects ">" followed by ">" not ">>" token

Scott Stanchfield also has some thoughts along these lines

http://javadude.com/articles/antlr-context-sensitive-scanner.html

I'm glad I wrote that slide because I couldn't remember what the difficulties were with context-sensitive Lexing.   keywords are an issue as is white space.   If I remember correctly Rats has a predicate in its identifier rule that makes it fail if it finds the id is also a keyword (yep, just checked). For whitespace, it simply scarfs whitespace I think in between rule references maybe.

Instead of forcing context-sensitive entry points into the lexer, I think a scannerless parser is simpler to understand conceptually. Rats is very good at combining grammars and it might be fun to come up with a scannerless version of ANTLR. It can be done easily right now by simply passing in characters as tokens and turning on backtracking with memoization. Perhaps I'll try that out.

stat : 'return' e ';' | id '=' e ';' {String s = $id.text;} ;

id : 'a' | 'b' | 'c' | ... ;
e : int ;
int : '0' | '1' | '2' ... ;

yep, that should work even with that action. There is no notion of a token really. hhm...cool.

Ter
PS oh crap...I should be preparing to teach in 30 minutes!


From poroshpathor81 at yahoo.com  Mon Apr 11 15:47:30 2011
From: poroshpathor81 at yahoo.com (poroshpathor poroshpathor)
Date: Mon, 11 Apr 2011 15:47:30 -0700 (PDT)
Subject: [antlr-interest] grammar for boolean expressions
Message-ID: <759885.73835.qm@web38507.mail.mud.yahoo.com>

Hello,

I am trying to build  grammar rules for the following boolean expression.
E1 AND E2 AND E3 AND ... AND En
Here, E1, E2,...,En could consist boolean expressions of both OR and AND
I have started with this 


expression
: or_relationalExpression ( AND^ or_relationalExpression)*
;

or_relationalExpression
: relationalExpression (OR^ | AND^ relationalExpression )* 
;

But, as expected, it causes problems of following format
Any idea to solve or rewrite the grammar rules??

Thanks in advance.


[fatal] rule or_relationalExpression has non-LL(*) decision due to recursive 
rule invocations reachable from alts 2,3.  Resolve by left-factoring or using 
syntactic predicates or using backtrack=true option.
 |---> : relationalExpression (OR^ | AND^ relationalExpression )*

warning(200): /CarFast/src/ConditionsGrammar.g:55:58: Decision can match input 
*** using multiple alternatives: 2, 3 As a result, alternative(s) 3 were 
disabled for that input
 |---> : relationalExpression (OR^ | AND^ relationalExpression )*



      

From parrt at cs.usfca.edu  Mon Apr 11 17:45:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Apr 2011 17:45:35 -0700
Subject: [antlr-interest] Sample Context-sensitive Lexer in ANTLR v3
Message-ID: <D79CC1CE-DBD6-4ACF-A429-5E75BAA6D5DD@cs.usfca.edu>

wow. it works.

http://www.antlr.org/wiki/display/~admin/2011/04/11/Sample+Context-sensitive+Lexer+in+ANTLR+v3

Ter

From cummings at kjchome.homeip.net  Mon Apr 11 18:13:57 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Mon, 11 Apr 2011 21:13:57 -0400
Subject: [antlr-interest] grammar for boolean expressions
In-Reply-To: <759885.73835.qm@web38507.mail.mud.yahoo.com>
References: <759885.73835.qm@web38507.mail.mud.yahoo.com>
Message-ID: <4DA3A755.8010603@kjchome.homeip.net>

On 04/11/2011 06:47 PM, poroshpathor poroshpathor wrote:
> Hello,
> 
> I am trying to build  grammar rules for the following boolean expression.
> E1 AND E2 AND E3 AND ... AND En
> Here, E1, E2,...,En could consist boolean expressions of both OR and AND
> I have started with this 
> 
> 
> expression
> : or_relationalExpression ( AND^ or_relationalExpression)*
> ;
> 
> or_relationalExpression
> : relationalExpression (OR^ | AND^ relationalExpression )* 

I'm not sure about your intent here, did you mean to write:
  : relationExpression ((OR^ | AND^) relationalExpression )*
???

If so, you have a problem of the parser not knowing which rule to handle
when it sees an AND.  Is it a part of an or_relational expression?  Or
is it a part of an expression?  Your grammar is ambiguous.

If not, then your grammar allows an OR token with no rhs and a single
child (which doesn't seem useful to me).

Usually, the definition provides a precedence between AND and OR (with
AND bind more tightly than OR).  Most languages would parse:

	A AND B OR C AND D OR E

as
	(A AND B) OR (C AND D) OR E

Your definition (as I read it, and assuming no AND in the 2nd rule)
would parse as

	A AND (B OR C) AND (D OR E)

but the AND in your second rule is still your problem.  You have to
eliminate it if you want your parser to be deterministic.

> ;
> 
> But, as expected, it causes problems of following format
> Any idea to solve or rewrite the grammar rules??
> 
> Thanks in advance.
> 
> 
> [fatal] rule or_relationalExpression has non-LL(*) decision due to recursive 
> rule invocations reachable from alts 2,3.  Resolve by left-factoring or using 
> syntactic predicates or using backtrack=true option.
>  |---> : relationalExpression (OR^ | AND^ relationalExpression )*
> 
> warning(200): /CarFast/src/ConditionsGrammar.g:55:58: Decision can match input 
> *** using multiple alternatives: 2, 3 As a result, alternative(s) 3 were 
> disabled for that input
>  |---> : relationalExpression (OR^ | AND^ relationalExpression )*
> 
> 
> 
>       
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From gary at sumwise.com  Tue Apr 12 00:06:15 2011
From: gary at sumwise.com (Gary Miller)
Date: Tue, 12 Apr 2011 17:06:15 +1000
Subject: [antlr-interest] grammar for boolean expressions
In-Reply-To: <759885.73835.qm@web38507.mail.mud.yahoo.com>
References: <759885.73835.qm@web38507.mail.mud.yahoo.com>
Message-ID: <BANLkTi=ceiujoiOP=u7Kap-+OWxqpCsWxg@mail.gmail.com>

My two cents worth.
I prefer rewrites as I can create virtual tokens.

Regards
Gary

expr
    : or -> ^(EXPR or)
;

or : (and -> and)
    (
        OR b=and    -> ^( LOGICAL_OR $or $b )
    )*
;

and  : (atom -> atom)
    (
      AND b=atom -> ^(LOGICAL_AND $and $b)
    )*
;

atom
    : id
;

id        : ID;

ID : 'a'..'z';
AND : '&';
OR  : '|';

From joelemmer at hotmail.co.uk  Tue Apr 12 04:59:10 2011
From: joelemmer at hotmail.co.uk (Joe Lemmer)
Date: Tue, 12 Apr 2011 11:59:10 +0000
Subject: [antlr-interest] throwing non-antlr exceptions
Message-ID: <BLU145-W14A402786E68BE121AC4E2ECAB0@phx.gbl>


Hi there,

I'd like to throw a Non-Antlr exception from one of my rules in a Parser. I'm using ANTLR v3

I've tried to find some documentation and came across some stuff for ANTLR v2 that says the following:

"

To specify that your parser (or
tree parser rule) can throw a non-ANTLR specific exception, use the
exceptions clause.  For example, here is a simple parser specification
with a rule that throws MyException:

class P extends Parser;

a throws MyException
  : A
  ;

ANTLR generates the following for rule a:

    public final void a()
        throws RecognitionException,
               TokenStreamException,
               MyException
    {
        try {
            match(A);
        }
        catch (RecognitionException ex) {
            reportError(ex);
            consume();
            consumeUntil(_tokenSet_0);
        }
    }
"

I have implemented my rule as follows:

variable throws IdentifierIsKeywordException
@after {
    if($i.text.equals("repeat")) { throw new IdentifierIsKeywordException("\"repeat\"is a keyword, and may not be used as an identifier.");}
}
    :    i=IDENTIFIER -> IDENTIFIER
    ;

but in the java file that is created for my parser, the method relating to this rule still only throws the RecognitionException.

I really want to throw this exception and for it to be propagated right down to the class that calls my Parser. I'd be grateful for any hints as to where I'm going wrong and how I can get the method in the parser for my variable rule to thow my IdentifierIsKeywordException.

Many thanks in advance

Joe

 		 	   		  

From researcher0x00 at gmail.com  Tue Apr 12 05:32:17 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 12 Apr 2011 08:32:17 -0400
Subject: [antlr-interest] help
In-Reply-To: <BANLkTim4PnOJ0qBagJ8xti2BiWSTjWoMCw@mail.gmail.com>
References: <BANLkTi=XEei8K23maQarQxxKi9uZx2ccyg@mail.gmail.com>
	<BANLkTikFbZYa3F2x708D7ag80biesAkJpw@mail.gmail.com>
	<BANLkTim4PnOJ0qBagJ8xti2BiWSTjWoMCw@mail.gmail.com>
Message-ID: <BANLkTikvX-ZqRxdMF8=6rHV6y9ZexDLRFg@mail.gmail.com>

There is not enough info in the e-mail for me to determine the exact
problem.

If there is a problem with the grammar ANTLRWorks should catch it when
building. If ANTLRWorks correctly builds the lexer and parser, and then the
error appears when parsing, I would check the input against what the grammar
accepts.

Eric

From jschrod at acm.org  Tue Apr 12 05:32:32 2011
From: jschrod at acm.org (Joachim Schrod)
Date: Tue, 12 Apr 2011 14:32:32 +0200
Subject: [antlr-interest] throwing non-antlr exceptions
In-Reply-To: <BLU145-W14A402786E68BE121AC4E2ECAB0@phx.gbl>
References: <BLU145-W14A402786E68BE121AC4E2ECAB0@phx.gbl>
Message-ID: <io1gp1$v09$1@dough.gmane.org>

Joe Lemmer wrote:
> 
> I'd like to throw a Non-Antlr exception from one of my rules in a Parser. I'm using ANTLR v3
> I've tried to find some documentation and came across some stuff for ANTLR v2 that says the following:
> 
> To specify that your parser (or
> tree parser rule) can throw a non-ANTLR specific exception, use the
> exceptions clause.  For example, here is a simple parser specification
> with a rule that throws MyException:
> 
> class P extends Parser;
> 
> a throws MyException
>   : A
>   ;

The "throws" keyword in a grammar (currently) has no effect.
(I don't know if that worked in v2, it doesn't in v3.)

There is no possibility to add a checked exception to a rule.
You must use RuntimeExceptions.

	Joachim

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From sharwell at pixelminegames.com  Tue Apr 12 05:47:27 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 12 Apr 2011 07:47:27 -0500
Subject: [antlr-interest] throwing non-antlr exceptions
In-Reply-To: <BLU145-W14A402786E68BE121AC4E2ECAB0@phx.gbl>
References: <BLU145-W14A402786E68BE121AC4E2ECAB0@phx.gbl>
Message-ID: <02d901cbf90f$c84100c0$58c30240$@pixelminegames.com>

Hi Joe,

This feature is not yet implemented in v3. I may be able to get it
implemented for release 3.4, but there are some technical issues that
prevent it from working in a few cases that make it difficult.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Joe Lemmer
Sent: Tuesday, April 12, 2011 6:59 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] throwing non-antlr exceptions


Hi there,

I'd like to throw a Non-Antlr exception from one of my rules in a Parser.
I'm using ANTLR v3

I've tried to find some documentation and came across some stuff for ANTLR
v2 that says the following:

"

To specify that your parser (or
tree parser rule) can throw a non-ANTLR specific exception, use the
exceptions clause.  For example, here is a simple parser specification with
a rule that throws MyException:

class P extends Parser;

a throws MyException
  : A
  ;

ANTLR generates the following for rule a:

    public final void a()
        throws RecognitionException,
               TokenStreamException,
               MyException
    {
        try {
            match(A);
        }
        catch (RecognitionException ex) {
            reportError(ex);
            consume();
            consumeUntil(_tokenSet_0);
        }
    }
"

I have implemented my rule as follows:

variable throws IdentifierIsKeywordException @after {
    if($i.text.equals("repeat")) { throw new
IdentifierIsKeywordException("\"repeat\"is a keyword, and may not be used as
an identifier.");} }
    :    i=IDENTIFIER -> IDENTIFIER
    ;

but in the java file that is created for my parser, the method relating to
this rule still only throws the RecognitionException.

I really want to throw this exception and for it to be propagated right down
to the class that calls my Parser. I'd be grateful for any hints as to where
I'm going wrong and how I can get the method in the parser for my variable
rule to thow my IdentifierIsKeywordException.

Many thanks in advance

Joe

 		 	   		  

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From helderdavidms at gmail.com  Tue Apr 12 07:07:25 2011
From: helderdavidms at gmail.com (=?iso-8859-1?Q?H=E9lder_Silva?=)
Date: Tue, 12 Apr 2011 15:07:25 +0100
Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE
	and a test rig in both Java and C# versions
In-Reply-To: <e27f09ac137e5e92e10ddb60484bf455@mail.gmail.com>
References: <002401cbf5da$36497310$a2dc5930$@gmail.com>
	<e27f09ac137e5e92e10ddb60484bf455@mail.gmail.com>
Message-ID: <003c01cbf91a$f4a65b00$ddf31100$@gmail.com>

This is my current grammar:

grammar Oven;

options 
{
    language=CSharp2;
//    language=Java;
    output=AST;
    ASTLabelType=CommonTree; // Cria arvore para ser utilizada por outro
parser a executar fun??es
}

@lexer::members
{
	bool emailMode = false;
}
@members 
{
//to create more understandable error phrases for users
Stack paraphrases = new Stack();

public override string GetErrorMessage(RecognitionException e,
string[] tokenNames)
{
	IList stack = GetRuleInvocationStack(e, this.GetType().ToString());
	string msg = null;
	if ( e.GetType()==typeof(NoViableAltException) ) 
	{
		NoViableAltException nvae = (NoViableAltException)e;
		msg = " no viable alt; token="+e.Token+
		" (decision="+nvae.decisionNumber+
		" state "+nvae.stateNumber+")"+	
		" decision=<<"+nvae.grammarDecisionDescription+">>";
	}
	else 
	{
		msg = base.GetErrorMessage(e, tokenNames);
	}
//	return stack+" "+msg;
	for(int i=0;i<stack.Count;i++)
		msg = msg+" at "+stack[i];
	for(int i=0;i<paraphrases.Count;i++ ) 
	{
		String paraphrase = (String)paraphrases.Peek();
		msg = msg+" "+paraphrase;
	}
	return msg;
}

//To stop parsing after first error happens!!
protected override void Mismatch(IIntStream input, int ttype, BitSet follow)
//throws RecognitionException
{
	throw new MismatchedTokenException(ttype, input);
}

public override object RecoverFromMismatchedSet(IIntStream input,
RecognitionException e,
BitSet follow)
//throws RecognitionException
{
	throw e;
}

protected override object RecoverFromMismatchedToken(IIntStream input, int
ttype, BitSet follow)
{
    	throw new MismatchedTokenException(ttype,input);
}

}

// Alter code generation so catch-clauses get replace with
// this action.
@rulecatch
{
catch(RecognitionException e)
{
	throw e;
}
}

program:	command+;

command
@init { paraphrases.Push("in command"); }
@after { paraphrases.Pop(); }
	:	cmd_set
	|	cmd_turn
	|	cmd_wait
	|	cmd_sync
	|	cmd_email
	|	cmd_log
	;
cmd_set		
@init { paraphrases.Push("set"); }
@after { paraphrases.Pop(); }
	: SET VALVE TO? INT FLUX TERMINATOR -> ^(SET VALVE INT)
	| SET ZONE a=INT TO b=INT DEGREES? TEMPUNITS TERMINATOR -> ^(ZONE $a
$b TEMPUNITS)
	;
cmd_turn	
@init { paraphrases.Push("turn"); }
@after { paraphrases.Pop(); }
	: TURN VALVE STATE TERMINATOR -> ^(TURN VALVE STATE)
	| TURN ZONE INT STATE TERMINATOR -> ^(TURN ZONE INT STATE)
	;
cmd_wait
@init { paraphrases.Push("wait"); }
@after { paraphrases.Pop(); }
	: WAIT FOR INT TIMEUNITS TERMINATOR -> ^(WAIT INT TIMEUNITS)
	| WAIT UNTIL ZONE a=INT TEMPERATURE LESS_THAN b=INT DEGREES
TEMPUNITS TERMINATOR -> ^(WAIT ZONE $a LESS_THAN $b TEMPUNITS)
	| WAIT UNTIL ZONE a=INT TEMPERATURE GREATER_THAN b=INT DEGREES
TEMPUNITS TERMINATOR -> ^(WAIT ZONE $a GREATER_THAN $b TEMPUNITS)
	| WAIT UNTIL ZONE a=INT TEMPERATURE EQUAL b=INT DEGREES TEMPUNITS
TERMINATOR -> ^(WAIT ZONE $a EQUAL $b TEMPUNITS)
	;
cmd_sync
@init { paraphrases.Push("sync"); }
@after { paraphrases.Pop(); }
	: SYNC ZONES TERMINATOR -> ^(SYNC ZONES)
	;
cmd_email
@init { paraphrases.Push("email"); }
@after { paraphrases.Pop(); }
	: EMAIL MAILADDRESS MESSAGE TERMINATOR -> ^(EMAIL MAILADDRESS
MESSAGE) 
	;
cmd_log	
@init { paraphrases.Push("log"); }
@after { paraphrases.Pop(); }	
	: TURN LOG STATE TERMINATOR -> ^(TURN LOG STATE)
	;	

// START:tokens
SET 	:	'set';
TURN	:	'turn';
WAIT	:	'wait';
EMAIL	:	'email' {emailMode=true;};
SYNC	:	'sync';
TO	:	'to';
DEGREES	:	'deg'|'degrees';
FOR	:	'for';
UNTIL	:	'until';
ZONE	:	'zone';
ZONES	:	'zones';
TEMPERATURE
	:	'temperature';
LOG	:	'log';

STATE	:	'on'
	|	'off'
	;
FLUX	:	'sccm';
TIMEUNITS 
	:	('sec'|'seconds')
	|	('min'|'minutes')
	|	('hr'|'hours')
	;
TEMPUNITS
	:	('?C'|'C'|'?c'|'c')
	|	('?F'|'F'|'?f'|'f')
	;
LESS_THAN
	:	'<';
GREATER_THAN
	:	'>';
EQUAL	:	'=';

VALVE:'helium'|'ethylene'|'hydrogen';
MAILADDRESS:{emailMode}?=>('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')+ '@'
('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')+;
INT:   ('0'..'9')+ ;
MESSAGE	
@init{emailMode=false;}
	:	'"' ((options{greedy=false;}: .)*) '"';
WS  : (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;};
COMMENT	:	 '\'' ~('\'') '\'' {$channel=HIDDEN;};
LINE_COMMENT : '\'' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;};
TERMINATOR: ';';
// END:tokens


For input such as:

set helium to 220 sccm;
on off turn helium on;
turn helium off;

The C# parser doesn?t generate a NoViableAltException, which is what happens
in ANTLRWorks. All commands after first erroneous one are disregarded
also...
During C# code debug, I can see it fail to match any command after the first
one (because token stream is wrong), and just exit without exception,
apparently not consuming all of the tokens available.
Lexer seems to be doing its job correctly I think...
I've tried to comment some rules out so I could isolate the ambiguous lexer
rule, but I can't see why this is happening here...


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: sexta-feira, 8 de Abril de 2011 17:14
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Diferent output when running ANTLRWorks IDE
and a test rig in both Java and C# versions

Well the hint is that your grammar is wrong.

But you need to post your grammar to get more help :-). I think, from the
way you describe your problem, that perhaps you have ambiguous lexer rules
and think that the parser influences what lexer rule is run, which it does
not.

Also, make sure you run the debugger in AntrlWorks and check any warning
messages when you generate the code.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of H?lder Silva
> Sent: Friday, April 08, 2011 3:46 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE 
> and a test rig in both Java and C# versions
>
> I?m getting different results when i run a certain input on the IDE in 
> comparison to a test rig in either Java or C# as well.
>
>
>
> In the IDE, for a given input, I get a NoViableAltException, which is 
> what I want to happen.
>
>
>
> When running the same input on Java test rig I get this:
>
> line 1:3 mismatched character ' ' expecting '@'
>
> line 1:4 required (...)+ loop did not match anything at input 'helium'
>
> The ?expecting ?@?? i suppose the parser is looking for another token 
> I have in which it matches an email address, but no rule I have starts 
> with an email address either.
>
>
>
> In the C# test rig, the parser complains there is no input with the
> message:
>
> line 1:4 required (...)+ loop did not match anything at input 'helium'
>
> can someone give me a hint on what?s happening here?
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Tue Apr 12 07:15:51 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 12 Apr 2011 07:15:51 -0700
Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE
 and a test rig in both Java and C# versions
In-Reply-To: <003c01cbf91a$f4a65b00$ddf31100$@gmail.com>
References: <002401cbf5da$36497310$a2dc5930$@gmail.com>	<e27f09ac137e5e92e10ddb60484bf455@mail.gmail.com>
	<003c01cbf91a$f4a65b00$ddf31100$@gmail.com>
Message-ID: <8825c787a75dfc17f9f9b19c82f5da5a@mail.gmail.com>

program:	command+ EOF; // Force the parser to consume token stream

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of H?lder Silva
> Sent: Tuesday, April 12, 2011 7:07 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Diferent output when running ANTLRWorks
> IDE and a test rig in both Java and C# versions
>
> This is my current grammar:
>
> grammar Oven;
>
> options
> {
>     language=CSharp2;
> //    language=Java;
>     output=AST;
>     ASTLabelType=CommonTree; // Cria arvore para ser utilizada por
> outro parser a executar fun??es }
>
> @lexer::members
> {
> 	bool emailMode = false;
> }
> @members
> {
> //to create more understandable error phrases for users Stack
> paraphrases = new Stack();
>
> public override string GetErrorMessage(RecognitionException e, string[]
> tokenNames) {
> 	IList stack = GetRuleInvocationStack(e,
> this.GetType().ToString());
> 	string msg = null;
> 	if ( e.GetType()==typeof(NoViableAltException) )
> 	{
> 		NoViableAltException nvae = (NoViableAltException)e;
> 		msg = " no viable alt; token="+e.Token+
> 		" (decision="+nvae.decisionNumber+
> 		" state "+nvae.stateNumber+")"+
> 		" decision=<<"+nvae.grammarDecisionDescription+">>";
> 	}
> 	else
> 	{
> 		msg = base.GetErrorMessage(e, tokenNames);
> 	}
> //	return stack+" "+msg;
> 	for(int i=0;i<stack.Count;i++)
> 		msg = msg+" at "+stack[i];
> 	for(int i=0;i<paraphrases.Count;i++ )
> 	{
> 		String paraphrase = (String)paraphrases.Peek();
> 		msg = msg+" "+paraphrase;
> 	}
> 	return msg;
> }
>
> //To stop parsing after first error happens!!
> protected override void Mismatch(IIntStream input, int ttype, BitSet
> follow) //throws RecognitionException {
> 	throw new MismatchedTokenException(ttype, input); }
>
> public override object RecoverFromMismatchedSet(IIntStream input,
> RecognitionException e, BitSet follow) //throws RecognitionException {
> 	throw e;
> }
>
> protected override object RecoverFromMismatchedToken(IIntStream input,
> int ttype, BitSet follow) {
>     	throw new MismatchedTokenException(ttype,input);
> }
>
> }
>
> // Alter code generation so catch-clauses get replace with // this
> action.
> @rulecatch
> {
> catch(RecognitionException e)
> {
> 	throw e;
> }
> }
>
> program:	command+;
>
> command
> @init { paraphrases.Push("in command"); } @after { paraphrases.Pop(); }
> 	:	cmd_set
> 	|	cmd_turn
> 	|	cmd_wait
> 	|	cmd_sync
> 	|	cmd_email
> 	|	cmd_log
> 	;
> cmd_set
> @init { paraphrases.Push("set"); }
> @after { paraphrases.Pop(); }
> 	: SET VALVE TO? INT FLUX TERMINATOR -> ^(SET VALVE INT)
> 	| SET ZONE a=INT TO b=INT DEGREES? TEMPUNITS TERMINATOR -> ^(ZONE
> $a $b TEMPUNITS)
> 	;
> cmd_turn
> @init { paraphrases.Push("turn"); }
> @after { paraphrases.Pop(); }
> 	: TURN VALVE STATE TERMINATOR -> ^(TURN VALVE STATE)
> 	| TURN ZONE INT STATE TERMINATOR -> ^(TURN ZONE INT STATE)
> 	;
> cmd_wait
> @init { paraphrases.Push("wait"); }
> @after { paraphrases.Pop(); }
> 	: WAIT FOR INT TIMEUNITS TERMINATOR -> ^(WAIT INT TIMEUNITS)
> 	| WAIT UNTIL ZONE a=INT TEMPERATURE LESS_THAN b=INT DEGREES
> TEMPUNITS TERMINATOR -> ^(WAIT ZONE $a LESS_THAN $b TEMPUNITS)
> 	| WAIT UNTIL ZONE a=INT TEMPERATURE GREATER_THAN b=INT DEGREES
> TEMPUNITS TERMINATOR -> ^(WAIT ZONE $a GREATER_THAN $b TEMPUNITS)
> 	| WAIT UNTIL ZONE a=INT TEMPERATURE EQUAL b=INT DEGREES TEMPUNITS
> TERMINATOR -> ^(WAIT ZONE $a EQUAL $b TEMPUNITS)
> 	;
> cmd_sync
> @init { paraphrases.Push("sync"); }
> @after { paraphrases.Pop(); }
> 	: SYNC ZONES TERMINATOR -> ^(SYNC ZONES)
> 	;
> cmd_email
> @init { paraphrases.Push("email"); }
> @after { paraphrases.Pop(); }
> 	: EMAIL MAILADDRESS MESSAGE TERMINATOR -> ^(EMAIL MAILADDRESS
> MESSAGE)
> 	;
> cmd_log
> @init { paraphrases.Push("log"); }
> @after { paraphrases.Pop(); }
> 	: TURN LOG STATE TERMINATOR -> ^(TURN LOG STATE)
> 	;
>
> // START:tokens
> SET 	:	'set';
> TURN	:	'turn';
> WAIT	:	'wait';
> EMAIL	:	'email' {emailMode=true;};
> SYNC	:	'sync';
> TO	:	'to';
> DEGREES	:	'deg'|'degrees';
> FOR	:	'for';
> UNTIL	:	'until';
> ZONE	:	'zone';
> ZONES	:	'zones';
> TEMPERATURE
> 	:	'temperature';
> LOG	:	'log';
>
> STATE	:	'on'
> 	|	'off'
> 	;
> FLUX	:	'sccm';
> TIMEUNITS
> 	:	('sec'|'seconds')
> 	|	('min'|'minutes')
> 	|	('hr'|'hours')
> 	;
> TEMPUNITS
> 	:	('?C'|'C'|'?c'|'c')
> 	|	('?F'|'F'|'?f'|'f')
> 	;
> LESS_THAN
> 	:	'<';
> GREATER_THAN
> 	:	'>';
> EQUAL	:	'=';
>
> VALVE:'helium'|'ethylene'|'hydrogen';
> MAILADDRESS:{emailMode}?=>('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')+ '@'
> ('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')+;
> INT:   ('0'..'9')+ ;
> MESSAGE
> @init{emailMode=false;}
> 	:	'"' ((options{greedy=false;}: .)*) '"';
> WS  : (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;};
> COMMENT	:	 '\'' ~('\'') '\'' {$channel=HIDDEN;};
> LINE_COMMENT : '\'' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;};
> TERMINATOR: ';';
> // END:tokens
>
>
> For input such as:
>
> set helium to 220 sccm;
> on off turn helium on;
> turn helium off;
>
> The C# parser doesn?t generate a NoViableAltException, which is what
> happens in ANTLRWorks. All commands after first erroneous one are
> disregarded also...
> During C# code debug, I can see it fail to match any command after the
> first one (because token stream is wrong), and just exit without
> exception, apparently not consuming all of the tokens available.
> Lexer seems to be doing its job correctly I think...
> I've tried to comment some rules out so I could isolate the ambiguous
> lexer rule, but I can't see why this is happening here...
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: sexta-feira, 8 de Abril de 2011 17:14
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Diferent output when running ANTLRWorks
> IDE and a test rig in both Java and C# versions
>
> Well the hint is that your grammar is wrong.
>
> But you need to post your grammar to get more help :-). I think, from
> the way you describe your problem, that perhaps you have ambiguous
> lexer rules and think that the parser influences what lexer rule is
> run, which it does not.
>
> Also, make sure you run the debugger in AntrlWorks and check any
> warning messages when you generate the code.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of H?lder Silva
> > Sent: Friday, April 08, 2011 3:46 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Diferent output when running ANTLRWorks IDE
> > and a test rig in both Java and C# versions
> >
> > I?m getting different results when i run a certain input on the IDE
> in
> > comparison to a test rig in either Java or C# as well.
> >
> >
> >
> > In the IDE, for a given input, I get a NoViableAltException, which is
> > what I want to happen.
> >
> >
> >
> > When running the same input on Java test rig I get this:
> >
> > line 1:3 mismatched character ' ' expecting '@'
> >
> > line 1:4 required (...)+ loop did not match anything at input
> 'helium'
> >
> > The ?expecting ?@?? i suppose the parser is looking for another token
> > I have in which it matches an email address, but no rule I have
> starts
> > with an email address either.
> >
> >
> >
> > In the C# test rig, the parser complains there is no input with the
> > message:
> >
> > line 1:4 required (...)+ loop did not match anything at input
> 'helium'
> >
> > can someone give me a hint on what?s happening here?
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Tue Apr 12 12:38:12 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 12 Apr 2011 15:38:12 -0400
Subject: [antlr-interest] Validating AST
Message-ID: <BANLkTimv_s_hOKZYEV3fjW238+4H=bKQJg@mail.gmail.com>

For some AST transformations I have to resort to writing code. A recent bug
of mine was due to incorrectly building a AST. Is there any code to
validate the structure of an AST?

Thanks, Eric

From jimi at temporal-wave.com  Tue Apr 12 12:56:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 12 Apr 2011 12:56:36 -0700
Subject: [antlr-interest] Validating AST
In-Reply-To: <BANLkTimv_s_hOKZYEV3fjW238+4H=bKQJg@mail.gmail.com>
References: <BANLkTimv_s_hOKZYEV3fjW238+4H=bKQJg@mail.gmail.com>
Message-ID: <473342746fb17715c54f3734df3e711e@mail.gmail.com>

Use the built in code to produce the .dot file, then use Graphviz to
produce a .png and then you can see what is going wrong very easily. I
have posted the code to do this to the list lots of times so you should
find it on antlr.markmail.org

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of The Researcher
> Sent: Tuesday, April 12, 2011 12:38 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Validating AST
>
> For some AST transformations I have to resort to writing code. A recent
> bug of mine was due to incorrectly building a AST. Is there any code to
> validate the structure of an AST?
>
> Thanks, Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Tue Apr 12 15:51:23 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 12 Apr 2011 18:51:23 -0400
Subject: [antlr-interest] Validating AST
In-Reply-To: <473342746fb17715c54f3734df3e711e@mail.gmail.com>
References: <BANLkTimv_s_hOKZYEV3fjW238+4H=bKQJg@mail.gmail.com>
	<473342746fb17715c54f3734df3e711e@mail.gmail.com>
Message-ID: <BANLkTikt=xhJpnLzZheD2-O61kmRN20s0w@mail.gmail.com>

> Jim, thanks I may use that in the future. I am using C# on Windows and
> would have to do some work to get it working on my machine.


The specific problem I had was that I created a token in source code with
one token type and text implying  another token type. Using ToTreeString
only showed the text and the structure but not the token type, which caused
me to ponder quite a bit. Only when stepping through the code and matching
token types by hand and cross-referencing with the tokens file did it become
apparent. So I made a custom ToTreeString that includes the token types and
token type names, now life is better.

Again thanks, it is nice to get feedback knowing that one is on the right
track.

From passionist_81 at yahoo.co.uk  Tue Apr 12 19:03:30 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Wed, 13 Apr 2011 03:03:30 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <179562.99528.qm@web24805.mail.ird.yahoo.com>

You're about to discover the HCG Ultra weight loss diet secrets that will instantly empower you to 
quickly melt away all the unwanted body fat that you want, and effortlessly keep your beautiful healthy, 
slim, sexy body for the rest of your life. http://users5.nofeehost.com/qivurox/gumifiho.html


Embuedded witihn pearl sands H er heart is strong though,

From gd.antlr at gmail.com  Wed Apr 13 02:29:22 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Wed, 13 Apr 2011 02:29:22 -0700
Subject: [antlr-interest] Previous rule element reference in a scope
Message-ID: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>

Hello list,

I have a grammar that includes a "With" statement like the following:

With anObject
?.method1()
?.method2()

which is semantically equivalent to the following fragment:

anObject.method1()
anObject.method2()


During AST construction, I want to distribute 'anObject' to its
subordinate method calls, so that I get a tree like the following:

^(CALL anObject.method1)
^(CALL anObject.method2)

This is a natural fit for a scope, but I'm not sure how to capture the
'anObject' reference in a scope.

If I have a recognizer grammar with the following rules, how do I
capture the withStatement ?ID in a scope, and how do I insert that
reference into the AST generated by memberCallStatement?

withStatement
?scope{ // what do I store here to save my ID? }
?: ?'With' ID
?;

memberCallStatement
?: ?'.' ID '()' ?// how do i insert $scope::ID in my AST?
?;

Also, are there any special precautions I need to take to avoid
inserting loops in the AST, for example, do I need to make a new
instance of the with object every time I duplicate it in the AST, or
can I just re-use it? Is it best to use a String or my own Java
object, or can I capture the thing that the recognizer generates
directly?

I wish I could do essentially the following:

withStatement
?scope{ Object id; }
?: ?'With'! id=ID!
?;

memberCallStatement
?: ?'.' ID '()' ?-> ^(CALL $withStatement::id '.' $ID)
?;

I know that will give ANTLR a sad, but I hope it illustrates what I
want to produce.


Thanks.

From pratibha.kr87 at gmail.com  Wed Apr 13 02:31:17 2011
From: pratibha.kr87 at gmail.com (Pratibha .)
Date: Wed, 13 Apr 2011 15:01:17 +0530
Subject: [antlr-interest] Need help with ANTLR SQL grammar 3.0
Message-ID: <BANLkTikq+kDKPx6ge4Yv0v25KwMHTMagFg@mail.gmail.com>

Hi All,

I m trying to write a SQL parser using ANTLR 3.0.

  I am looking for a SQL grammar which is not vendor specific and supports
  DDL/DML constructs (select/insert/update/delete and also join and nested
  queries) and also if it could support SQL vendor specific dialects. I
looked
  online and on antlr website for suitable ANTLR 3.0 SQL grammars but did
not
  find any complete grammar.

  I tried modifying the existing ones but moving the grammars from 2.x to
3.0
  turned out to be very painful and time consuming.Most of the 3.0 grammars
  are oracle/MSSQL specific and support only select statements. I also tried
  to make these grammars generic but again m facing lot of issues.

  It would be of great help if someone could suggest or point me to some
ANTLR 3.0
  SQL grammar which cud meet the above criteria. Even if not the complete
  grammar, then something to start with would also help.

--Pratibha

From scott at javadude.com  Wed Apr 13 05:52:49 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Wed, 13 Apr 2011 08:52:49 -0400
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
References: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
Message-ID: <BANLkTikOaNAnZrZHpxxMW78cVTDRaNN6hw@mail.gmail.com>

I'd suggest parameter passing here. Something like

withStatement
  : 'With' id=ID
    memberCallStatement[id]+
  ;

memberCallStatement[Token id]
  : '.' ID '()' -> ^(CALL {$id} '.' ID)
  ;

-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Wed, Apr 13, 2011 at 5:29 AM, Graham Mer <gd.antlr at gmail.com> wrote:
> Hello list,
>
> I have a grammar that includes a "With" statement like the following:
>
> With anObject
> ?.method1()
> ?.method2()
>
> which is semantically equivalent to the following fragment:
>
> anObject.method1()
> anObject.method2()
>
>
> During AST construction, I want to distribute 'anObject' to its
> subordinate method calls, so that I get a tree like the following:
>
> ^(CALL anObject.method1)
> ^(CALL anObject.method2)
>
> This is a natural fit for a scope, but I'm not sure how to capture the
> 'anObject' reference in a scope.
>
> If I have a recognizer grammar with the following rules, how do I
> capture the withStatement ?ID in a scope, and how do I insert that
> reference into the AST generated by memberCallStatement?
>
> withStatement
> ?scope{ // what do I store here to save my ID? }
> ?: ?'With' ID
> ?;
>
> memberCallStatement
> ?: ?'.' ID '()' ?// how do i insert $scope::ID in my AST?
> ?;
>
> Also, are there any special precautions I need to take to avoid
> inserting loops in the AST, for example, do I need to make a new
> instance of the with object every time I duplicate it in the AST, or
> can I just re-use it? Is it best to use a String or my own Java
> object, or can I capture the thing that the recognizer generates
> directly?
>
> I wish I could do essentially the following:
>
> withStatement
> ?scope{ Object id; }
> ?: ?'With'! id=ID!
> ?;
>
> memberCallStatement
> ?: ?'.' ID '()' ?-> ^(CALL $withStatement::id '.' $ID)
> ?;
>
> I know that will give ANTLR a sad, but I hope it illustrates what I
> want to produce.
>
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From themightystephen at googlemail.com  Wed Apr 13 06:26:36 2011
From: themightystephen at googlemail.com (Stephen Tuttlebee)
Date: Wed, 13 Apr 2011 14:26:36 +0100
Subject: [antlr-interest] Tree rewriting -- adding subtrees
Message-ID: <4DA5A48C.8020701@googlemail.com>

Hello,

I'm working on a tree grammar that needs to perform some tree rewriting 
for a further tree parsing phase.

My question is, is it possible to do something like this (semi pseudo-code):

r : ^(SOME_NODE x y)
      -> ^(SOME_NODE x y
                 { // action
                 // for loop iterates over a data structure getting info 
and inserting it into a new subtree
                 for(every item in data structure) {
                     add new subtree ^(MY_NEW_SUBTREE item)
                 }
                 }
             ) // tree rewrite ends here
     ;

where the rewritten tree will have a new subtree created from each 
iteration of the loop. I suppose what I want is to dynamically build new 
subtrees of the resulting rewritten tree for the rule.

The above is invalid ANTLR syntax but I'm wondering whether this is 
possible somehow. I would rather use ANTLR's friendly tree building 
syntax as above (i.e. ^(MY_NEW_SUBTREE item) ); I don't want to have to 
'manually' build the tree inside the action (using ANTLR's tree building 
API) if I can help it. There might even be a simpler method of doing 
this that I've missed...

Thanks,
Stephen

From sharwell at pixelminegames.com  Wed Apr 13 06:39:18 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 13 Apr 2011 08:39:18 -0500
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
References: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
Message-ID: <034701cbf9e0$30982920$91c87b60$@pixelminegames.com>

I believe the following works, duplicating the CALL and ID nodes as it iterates in parallel over the tokens returned by '.' and trees returned by withRHS.

withStatement : 'With' ID (dot+='.' rhs+=withRHS)+ -> ^(CALL ID $dot $rhs)+;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Graham Mer
Sent: Wednesday, April 13, 2011 4:29 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Previous rule element reference in a scope

Hello list,

I have a grammar that includes a "With" statement like the following:

With anObject
 .method1()
 .method2()

which is semantically equivalent to the following fragment:

anObject.method1()
anObject.method2()


During AST construction, I want to distribute 'anObject' to its subordinate method calls, so that I get a tree like the following:

^(CALL anObject.method1)
^(CALL anObject.method2)

This is a natural fit for a scope, but I'm not sure how to capture the 'anObject' reference in a scope.

If I have a recognizer grammar with the following rules, how do I capture the withStatement  ID in a scope, and how do I insert that reference into the AST generated by memberCallStatement?

withStatement
 scope{ // what do I store here to save my ID? }
 :  'With' ID
 ;

memberCallStatement
 :  '.' ID '()'  // how do i insert $scope::ID in my AST?
 ;

Also, are there any special precautions I need to take to avoid inserting loops in the AST, for example, do I need to make a new instance of the with object every time I duplicate it in the AST, or can I just re-use it? Is it best to use a String or my own Java object, or can I capture the thing that the recognizer generates directly?

I wish I could do essentially the following:

withStatement
 scope{ Object id; }
 :  'With'! id=ID!
 ;

memberCallStatement
 :  '.' ID '()'  -> ^(CALL $withStatement::id '.' $ID)
 ;

I know that will give ANTLR a sad, but I hope it illustrates what I want to produce.


Thanks.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From peter at crispu.com  Wed Apr 13 07:04:13 2011
From: peter at crispu.com (Peter Kooiman)
Date: Wed, 13 Apr 2011 09:04:13 -0500 (CDT)
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
Message-ID: <4121504.14.1302703450077.JavaMail.pitsie@devleno>

Hi Graham, 

It's not clear from your question if only method calls are legal within a "with" statement, in which case the suggestions made should work, or if (as I suspect) any statement is legal within a "with", like in javascript. 

Peter 


From: "Graham Mer" <gd.antlr at gmail.com> 
To: antlr-interest at antlr.org 
Sent: Wednesday, April 13, 2011 11:29:22 AM 
Subject: [antlr-interest] Previous rule element reference in a scope 

Hello list, 

I have a grammar that includes a "With" statement like the following: 

With anObject 
.method1() 
.method2() 

which is semantically equivalent to the following fragment: 

anObject.method1() 
anObject.method2() 


During AST construction, I want to distribute 'anObject' to its 
subordinate method calls, so that I get a tree like the following: 

^(CALL anObject.method1) 
^(CALL anObject.method2) 

This is a natural fit for a scope, but I'm not sure how to capture the 
'anObject' reference in a scope. 

If I have a recognizer grammar with the following rules, how do I 
capture the withStatement ID in a scope, and how do I insert that 
reference into the AST generated by memberCallStatement? 

withStatement 
scope{ // what do I store here to save my ID? } 
: 'With' ID 
; 

memberCallStatement 
: '.' ID '()' // how do i insert $scope::ID in my AST? 
; 

Also, are there any special precautions I need to take to avoid 
inserting loops in the AST, for example, do I need to make a new 
instance of the with object every time I duplicate it in the AST, or 
can I just re-use it? Is it best to use a String or my own Java 
object, or can I capture the thing that the recognizer generates 
directly? 

I wish I could do essentially the following: 

withStatement 
scope{ Object id; } 
: 'With'! id=ID! 
; 

memberCallStatement 
: '.' ID '()' -> ^(CALL $withStatement::id '.' $ID) 
; 

I know that will give ANTLR a sad, but I hope it illustrates what I 
want to produce. 


Thanks. 

List: http://www.antlr.org/mailman/listinfo/antlr-interest 
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address 

From researcher0x00 at gmail.com  Wed Apr 13 07:25:05 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Wed, 13 Apr 2011 10:25:05 -0400
Subject: [antlr-interest] help
In-Reply-To: <BLU145-W16273FA07671E2C8F6516BECAB0@phx.gbl>
References: <BANLkTi=XEei8K23maQarQxxKi9uZx2ccyg@mail.gmail.com>
	<BANLkTikFbZYa3F2x708D7ag80biesAkJpw@mail.gmail.com>
	<BANLkTim4PnOJ0qBagJ8xti2BiWSTjWoMCw@mail.gmail.com>
	<BANLkTikvX-ZqRxdMF8=6rHV6y9ZexDLRFg@mail.gmail.com>
	<BLU145-W16273FA07671E2C8F6516BECAB0@phx.gbl>
Message-ID: <BANLkTimwNbpq-6kRNdPc8UN5Bc2ZHmdRDQ@mail.gmail.com>

I believe I found the cause of your problem.

CREATE  in CREATE OR REPLACE from the input is parsed as
--> sqlplus_file                    paser rule
--> create_object                paser rule
--> create_package_body   paser rule
--> CREATE                       paser rule
--> CREATE : 'create'  ;     lexer rule

So 'CREATE' in the input is being matched against 'create' in the lexer
rules which will always fail because upper case 'CREATE' is not lower case
'create'. Since the lexer has no other alternative, you get the error.

Since I have no experience with ANTLR and case sensitive grammars, the only
quick solution  I can offer is obviously to make the input match the lexer,
or make the lexer match the input.

If you plan to tackle case sensitive parsing with ANTLR you may find the
following helpful.
You can search the mail for help using http://antlr.markmail.org/ or try
Stack Overflow tags using ANTLR at http://stackoverflow.com/tags.

The grammar does try and support case sensitive keywords, but how successful
I can't say.

Eric

From jimi at temporal-wave.com  Wed Apr 13 07:36:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Apr 2011 07:36:03 -0700
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
References: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
Message-ID: <953b9c78bb4982e860cf79e079aabb72@mail.gmail.com>

You don't need to do that, just create a WITH node and then use a scope in
the tree walker - when you hit a DOT node with no LHS you know there will be
a WITH scope and just take the ID out of that. You will just make your tree
bigger otherwise and anyway what if the with is:

With (fred.y(45*j.callme()))
{
}

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Graham Mer
> Sent: Wednesday, April 13, 2011 2:29 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Previous rule element reference in a scope
>
> Hello list,
>
> I have a grammar that includes a "With" statement like the following:
>
> With anObject
>  .method1()
>  .method2()
>
> which is semantically equivalent to the following fragment:
>
> anObject.method1()
> anObject.method2()
>
>
> During AST construction, I want to distribute 'anObject' to its
> subordinate method calls, so that I get a tree like the following:
>
> ^(CALL anObject.method1)
> ^(CALL anObject.method2)
>
> This is a natural fit for a scope, but I'm not sure how to capture the
> 'anObject' reference in a scope.
>
> If I have a recognizer grammar with the following rules, how do I
> capture the withStatement  ID in a scope, and how do I insert that
> reference into the AST generated by memberCallStatement?
>
> withStatement
>  scope{ // what do I store here to save my ID? }
>  :  'With' ID
>  ;
>
> memberCallStatement
>  :  '.' ID '()'  // how do i insert $scope::ID in my AST?
>  ;
>
> Also, are there any special precautions I need to take to avoid
> inserting loops in the AST, for example, do I need to make a new
> instance of the with object every time I duplicate it in the AST, or
> can I just re-use it? Is it best to use a String or my own Java object,
> or can I capture the thing that the recognizer generates directly?
>
> I wish I could do essentially the following:
>
> withStatement
>  scope{ Object id; }
>  :  'With'! id=ID!
>  ;
>
> memberCallStatement
>  :  '.' ID '()'  -> ^(CALL $withStatement::id '.' $ID)
>  ;
>
> I know that will give ANTLR a sad, but I hope it illustrates what I
> want to produce.
>
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Wed Apr 13 07:49:37 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Wed, 13 Apr 2011 10:49:37 -0400
Subject: [antlr-interest] Tree rewriting -- adding subtrees
In-Reply-To: <4DA5A48C.8020701@googlemail.com>
References: <4DA5A48C.8020701@googlemail.com>
Message-ID: <BANLkTinxz7XDm31iJ8in=T-ZQRzDG5ebww@mail.gmail.com>

Stephen,

For what its worth, I too am spending a considerable amount of time
rewriting trees, and any time I get to something not in "The Definitive
ANTLR Reference", I immediately jump to using code.

At first it was a royal pain because I tried to write the code from scratch.
I then turned to writing each part of the tree in ANTLR, generating the
compiled code, and then cutting and pasting the compiled code back into what
I needed and stitching together. The rewrite comments are a big help here.

This also involved creating imaginary nodes, but be careful not to do what I
just did and create a token of one type and add text of a different type.

This is one area where I have considered converting the trees to PROLOG and
solving or using http://strategoxt.org/

Eric

From Gary.Anderson at frb.gov  Wed Apr 13 09:11:51 2011
From: Gary.Anderson at frb.gov (Gary.Anderson at frb.gov)
Date: Wed, 13 Apr 2011 12:11:51 -0400
Subject: [antlr-interest] parsing the matlab language
Message-ID: <20110413162318.1A1542C47CA@ibastion.frb.gov>


matlab uses the single quote to delimit strings and to denote matrix
transposition.

i am seeking advice on how to craft a parser that can handle

expressions like

aa' *  bb('option flag string')+ cc'

Regards,

Gary


From jdoege at gmail.com  Wed Apr 13 11:42:34 2011
From: jdoege at gmail.com (Jason Doege)
Date: Wed, 13 Apr 2011 13:42:34 -0500
Subject: [antlr-interest] Context-sensitive lexing and ANTLR v4
In-Reply-To: <679960FB-79B1-49E7-9552-FC5D835B3036@cs.usfca.edu>
References: <679960FB-79B1-49E7-9552-FC5D835B3036@cs.usfca.edu>
Message-ID: <BANLkTimGjUWoMjmNYojNN8Rjsti=RftX1A@mail.gmail.com>

One way to handle keywords is with a zero-width look-ahead assertion. You
append this construct to a keyword production with a test that passes if the
next character is a non-alpha-numeric but then leaves it on the input
stream.

Best regards,
Jason

On Mon, Apr 11, 2011 at 3:25 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> I see in an early 2004 workshop that I intended to handle Context-sensitive
> lexing:
>
> http://www.antlr.org/workshop/ANTLR2004/proceedings/ANTLR-3.0-Features.pdf
>
> ? Each parser decision point generates special rule
> in lexer with possible choices: e.g., (ID|INT)
> ? Difficulties
> ? ?for?, find ?fore?must say ?missing for, found ID?
> ? whitespace
> ? The C++ template vs ">>" token problem simply
> disappears; i.e., when lexing
> List<List<int>> a;
> nested template has ">>" in it.  Lexer, without context,
> cannot know which to pick.  Only the parser knows that
> it expects ">" followed by ">" not ">>" token
>
> Scott Stanchfield also has some thoughts along these lines
>
> http://javadude.com/articles/antlr-context-sensitive-scanner.html
>
> I'm glad I wrote that slide because I couldn't remember what the
> difficulties were with context-sensitive Lexing.   keywords are an issue as
> is white space.   If I remember correctly Rats has a predicate in its
> identifier rule that makes it fail if it finds the id is also a keyword
> (yep, just checked). For whitespace, it simply scarfs whitespace I think in
> between rule references maybe.
>
> Instead of forcing context-sensitive entry points into the lexer, I think a
> scannerless parser is simpler to understand conceptually. Rats is very good
> at combining grammars and it might be fun to come up with a scannerless
> version of ANTLR. It can be done easily right now by simply passing in
> characters as tokens and turning on backtracking with memoization. Perhaps
> I'll try that out.
>
> stat : 'return' e ';' | id '=' e ';' {String s = $id.text;} ;
>
> id : 'a' | 'b' | 'c' | ... ;
> e : int ;
> int : '0' | '1' | '2' ... ;
>
> yep, that should work even with that action. There is no notion of a token
> really. hhm...cool.
>
> Ter
> PS oh crap...I should be preparing to teach in 30 minutes!
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
--Jason Doege
jdoege at gmail.com

From gd.antlr at gmail.com  Wed Apr 13 17:36:59 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Wed, 13 Apr 2011 17:36:59 -0700
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <4121504.14.1302703450077.JavaMail.pitsie@devleno>
References: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
	<4121504.14.1302703450077.JavaMail.pitsie@devleno>
Message-ID: <BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>

> It's not clear from your question if only method calls are legal within a
> "with" statement, in which case the suggestions made should work, or if (as
> I suspect) any statement is legal within a "with", like in javascript.

Thanks for the replies, everyone.

You're correct, Peter, it is not limited to only method calls. I don't
think parameter passing will work, since the enclosed statement block
is not part of the withStatement rule. I (over-?) simplified my
example grammar fragment as an illustration; withStatement and the
stuff inside the With block are all "statements" in higher rules, so
I'd need to pass parameters among large numbers of rules, which is
doesn't seem very maintainable. Isn't this exactly what a scope was
intended for?

Assuming this is an appropriate place to use a scope, how do I get
that withStatement ID value into a scope instead of into a parameter?

Thanks again!

From jimi at temporal-wave.com  Wed Apr 13 17:51:09 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Apr 2011 17:51:09 -0700
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>
References: <BANLkTi=dH3qh82GukQw53N1hpbXa6_UM6Q@mail.gmail.com>
	<4121504.14.1302703450077.JavaMail.pitsie@devleno>
	<BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>
Message-ID: <e25d8dd01df64e99aa73a0c639db40ef@mail.gmail.com>

In the WITH node, when you walk the tree, you can have a scope and set the
node of the WITH subject in to the scope, then you refer to it in the
scope when you walk the tree and find a . node that has no LHS.

Don't try to rewrite it as that isn't the way to do it.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Graham Mer
> Sent: Wednesday, April 13, 2011 5:37 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Previous rule element reference in a
> scope
>
> > It's not clear from your question if only method calls are legal
> > within a "with" statement, in which case the suggestions made should
> > work, or if (as I suspect) any statement is legal within a "with",
> like in javascript.
>
> Thanks for the replies, everyone.
>
> You're correct, Peter, it is not limited to only method calls. I don't
> think parameter passing will work, since the enclosed statement block
> is not part of the withStatement rule. I (over-?) simplified my example
> grammar fragment as an illustration; withStatement and the stuff inside
> the With block are all "statements" in higher rules, so I'd need to
> pass parameters among large numbers of rules, which is doesn't seem
> very maintainable. Isn't this exactly what a scope was intended for?
>
> Assuming this is an appropriate place to use a scope, how do I get that
> withStatement ID value into a scope instead of into a parameter?
>
> Thanks again!
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From peter at crispu.com  Thu Apr 14 03:35:45 2011
From: peter at crispu.com (Peter Kooiman)
Date: Thu, 14 Apr 2011 05:35:45 -0500 (CDT)
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>
Message-ID: <13628909.9.1302777340801.JavaMail.pitsie@devleno>


> You're correct, Peter, it is not limited to only method calls. I don't
> think parameter passing will work, since the enclosed statement block
> is not part of the withStatement rule.

There's your problem..the enclosed block needs to be part of the withStatement rule I would say (how else would you decide when the object in the with statement goes out of scope?). Once you bring the enclosed block into the rule, you will be able to reference the enclosing withStatement rule scope.


From themightystephen at googlemail.com  Thu Apr 14 05:53:44 2011
From: themightystephen at googlemail.com (Stephen Tuttlebee)
Date: Thu, 14 Apr 2011 13:53:44 +0100
Subject: [antlr-interest] Tree rewriting -- adding subtrees
In-Reply-To: <BANLkTinxz7XDm31iJ8in=T-ZQRzDG5ebww@mail.gmail.com>
References: <BANLkTinxz7XDm31iJ8in=T-ZQRzDG5ebww@mail.gmail.com>
Message-ID: <4DA6EE58.3040700@googlemail.com>

hmm, well, looks like I'll have to take that approach -- thanks for the 
advice on looking at the code ANTLR generates. That's a good strategy.

Thanks for the help,
Stephen


From researcher0x00 at gmail.com  Thu Apr 14 06:59:07 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 14 Apr 2011 09:59:07 -0400
Subject: [antlr-interest] Tree rewriting -- adding subtrees
In-Reply-To: <4DA6EE58.3040700@googlemail.com>
References: <BANLkTinxz7XDm31iJ8in=T-ZQRzDG5ebww@mail.gmail.com>
	<4DA6EE58.3040700@googlemail.com>
Message-ID: <BANLkTikM_mLPQrmMQmKz5ACHmc=2x=WGqg@mail.gmail.com>

It's nice to know others have the same problems as me.

Since you are in this realm, other things to watch out for are

1. Don't rely on ToStringTree() alone. My current version is modified to
return the token type value and token type name. If you hit a bug an the
match does not work as expected, you will need to see the token type and
this is when the modified ToStringTree() will come in handy.

2. I am still teaching myself on this one so take with a grain of salt, but
the trees are not true trees, they are also tokens streams. When
constructing a new tree, not only do you have to build as a tree but also as
a list of tokens. Problems with xxx.HasNext() tipped me off to look at this.
I plan on spending this morning building a set of test grammars to build
tree items: empty, single item, list, and tree.

Basically don't fall into the what you believe or expect to be true vs what
is true trap.

If you learn something or something I stated is incorrect please update.

Thanks, Eric

From ben.corne at gmail.com  Thu Apr 14 07:22:28 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Thu, 14 Apr 2011 16:22:28 +0200
Subject: [antlr-interest] |! in antlr2
Message-ID: <BANLkTi=71yQyxW-2D35pZpG_akZu67Dg=w@mail.gmail.com>

I have an antlr2 gramatica which I'm converting to antlr3.

Multiple rules make use of the folowing construct:

someRule
   : ! otherexpressions
   | ! more
   | ...


What is the meaning of ! at the start of a branch? Scrape the entire branch
when building an AST?

Regards
Ben Corne

From researcher0x00 at gmail.com  Thu Apr 14 07:30:54 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 14 Apr 2011 10:30:54 -0400
Subject: [antlr-interest] |! in antlr2
In-Reply-To: <BANLkTi=71yQyxW-2D35pZpG_akZu67Dg=w@mail.gmail.com>
References: <BANLkTi=71yQyxW-2D35pZpG_akZu67Dg=w@mail.gmail.com>
Message-ID: <BANLkTintTSgv3NnB6NGY=RQNnN_LzsqUQQ@mail.gmail.com>

Hi Ben,

I don't do ANTLR 2 any more, but found this.

http://www.antlr2.org/doc/lexer.html#lexicalrules


As a shorthand notation, you may suffix an alternative or rule with '!' to
indicate the alternative or rule should not pass any text back to the
invoking rule or parser (if nonprotected):

// ! on rule: nothing is auto added to text of rule.
rule! : ... ;

// ! on alt: nothing is auto added to text for alt
rule : ... |! ...;

Hope this helps, Eric

From ronburk at gmail.com  Thu Apr 14 07:44:38 2011
From: ronburk at gmail.com (Ron Burk)
Date: Thu, 14 Apr 2011 07:44:38 -0700
Subject: [antlr-interest] parsing the matlab language
In-Reply-To: <20110413162318.1A1542C47CA@ibastion.frb.gov>
References: <20110413162318.1A1542C47CA@ibastion.frb.gov>
Message-ID: <BANLkTinLTr8YnzS8uD6hpTGeL9+qKS2d9w@mail.gmail.com>

Couldn't find a rigorous language spec for matlab,
but it kinda looks like the lexer can handle the distinction
by remember the previous token type returned. (e.g.,
if the previous token type was X, or X., or ), then the
single quote is an operator instead of a string -- the exact
rule depends on the exact language spec).

Obviously, you don't want the parser trying to piece
together a quoted string out of whatever (possibly illegal!)
tokens appeared inside it, so this is a job for the lexer.

From jimi at temporal-wave.com  Thu Apr 14 07:55:02 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Apr 2011 07:55:02 -0700
Subject: [antlr-interest] parsing the matlab language
In-Reply-To: <BANLkTinLTr8YnzS8uD6hpTGeL9+qKS2d9w@mail.gmail.com>
References: <20110413162318.1A1542C47CA@ibastion.frb.gov>
	<BANLkTinLTr8YnzS8uD6hpTGeL9+qKS2d9w@mail.gmail.com>
Message-ID: <a03606b68f3096c389cf40b13b83a399@mail.gmail.com>

Matlab parsing is more difficult than this because it is such an abysmally
specified language, made worse by the recent attempts to add objects to
it. For instance, one part of the syntax boils down to "include this file
if it is a file otherwise it is this syntax". Because Matlab is
interpreted, it is easy to hack something together to do that, but when it
is parsed, it means you will need the whole structure of source code
available or you will get it incorrect. I did not complete the whole
syntax but it is hairy. You may be better off with a custom lexer.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ron Burk
> Sent: Thursday, April 14, 2011 7:45 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] parsing the matlab language
>
> Couldn't find a rigorous language spec for matlab, but it kinda looks
> like the lexer can handle the distinction by remember the previous
> token type returned. (e.g., if the previous token type was X, or X., or
> ), then the single quote is an operator instead of a string -- the
> exact rule depends on the exact language spec).
>
> Obviously, you don't want the parser trying to piece together a quoted
> string out of whatever (possibly illegal!) tokens appeared inside it,
> so this is a job for the lexer.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From asicaddress at gmail.com  Thu Apr 14 08:03:02 2011
From: asicaddress at gmail.com (A Z)
Date: Thu, 14 Apr 2011 10:03:02 -0500
Subject: [antlr-interest] C target - Disabling lexer output for groups of
	tokens
Message-ID: <BANLkTimxdr=zywA4a_xhrp=vy2a6QrtckA@mail.gmail.com>

Is there way to persistantly switch the lexer output on or off? Channel
assignments only last for one token. I know I can use skip() but then I have
to add the same code to every lexer rule(I have hundreds) where it checks a
boolean and then executes skip(). I also looked at changing the default
channel but I don't how that can be done as the following isn't a function
pointer that can be reassigned:

ANTLR3_INLINE static pANTLR3_COMMON_TOKEN
nextTokenStr        (pANTLR3_TOKEN_SOURCE toksource)
{
...
            lexer->rec->state->channel                        =
ANTLR3_TOKEN_DEFAULT_CHANNEL;
...
}

Is there another way of doing this?

Thanks

From gd.antlr at gmail.com  Thu Apr 14 08:10:11 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Thu, 14 Apr 2011 08:10:11 -0700
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <13628909.9.1302777340801.JavaMail.pitsie@devleno>
References: <BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>
	<13628909.9.1302777340801.JavaMail.pitsie@devleno>
Message-ID: <BANLkTi=fVGKLVvSmKOhMGKMCkX5WG4grrA@mail.gmail.com>

> There's your problem..the enclosed block needs to be part of the withStatement rule I would say (how else would you decide when the object in the with statement goes out of scope?). Once you bring the enclosed block into the rule, you will be able to reference the enclosing withStatement rule scope.

Not a problem, there is an End With statement to terminate the block
(but even if there wasn't, the end of the block would suffice). I
really didn't think this was relevant to the original question - there
are independent statements, including With and method calls (among
others), and I want to distribute the object of the With into the
other statements in its block. I provided the two rules as an example
of the producer and one consumer of the token, but that is by no means
the complete grammar.

It doesn't seem practical to get the enclosed block into the
withStatement, since With and every other statement (there are many)
can be in the block, and you can nest With statements. This really
seems like a scope to me, so it is possible to get the reference into
the scope, and if so, what's the syntax, and what are the best
practices when doing so?

Another example:

With foo
  .method1()
  With .bar
    x = .property
  End With
End with

For that input, I want an AST like:

^(CALL foo.method1)
^(ASSIGN x foo.bar.property)

So, given that there are lots and lots of other statements that could
be in the With block, I think I really do want a scope rooted in the
With statement. I just need to know how to make it work. Specifically,
I cannot see how to get the With object token reference into the
scope, and how to retrieve it in the statements that can use it so
that I can construct the desired AST. Passing it as an argument would
require passing the argument to every single statement and expression
rule, which seems like a bad design, and seems to be what the scope
was designed to improve.

Do I completely misunderstand the purpose of scopes? Are they not
intended to be used during AST construction?

From researcher0x00 at gmail.com  Thu Apr 14 08:34:30 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 14 Apr 2011 11:34:30 -0400
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTi=fVGKLVvSmKOhMGKMCkX5WG4grrA@mail.gmail.com>
References: <BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>
	<13628909.9.1302777340801.JavaMail.pitsie@devleno>
	<BANLkTi=fVGKLVvSmKOhMGKMCkX5WG4grrA@mail.gmail.com>
Message-ID: <BANLkTi=16Zi82eN3EiFqPRLkgmT8gmLMMg@mail.gmail.com>

Graham,

I have a similar problem and scopes are working for me, but to do it I have
to build the trees with code and don't have the trees building correctly,
but do expect it to work.

My problem is that I have field definitions with names and also allow alias
names for my field definitions. So I have to duplicate the field defintion
less the name or alias names, then for each name or alias name build a new
field defintion with either the name or the alias name.

This is early development code, but hopefully this will give you some help.
If you can do it without creating the trees in code you will be better off.

fieldGroup
scope
{
 CommonTree info;
 CommonTree name;
 CommonTree alias;
}
@init
{
 $fieldGroup::info = null;
 $fieldGroup::name = null;
 $fieldGroup::alias = null;
}
//@after { Console.WriteLine("fieldGroup: " +
CommonTreeSuccour.ToStringTree((BaseTree)retval.Tree)); }
 : ^(FieldGroup fieldInfo fieldName generateFieldByName (fieldAlias
generateFieldByAlias)*)
  -> generateFieldByName generateFieldByAlias*
 ;

fieldInfo
@after
{ $fieldGroup::info = (CommonTree)retval.Tree; }
 : ^(FieldInfo fieldInfoItems*)
 ;

fieldName
@after
{ $fieldGroup::name = (CommonTree)retval.Tree; }
 : ^(FieldName Id)
 ;

generateFieldByName
scope
{
 CommonTree info;
}
@after
{
 retval.Tree = $generateFieldByName::info;
 //Console.WriteLine("generateFieldByName: " +
CommonTreeSuccour.ToStringTree((BaseTree)retval.Tree));
}
 :
 {
  $generateFieldByName::info =
(CommonTree)adaptor.DupTree($fieldGroup::info);
  $generateFieldByName::info.Children.Add($fieldGroup::name);
 }
 ;

fieldAlias
@after { $fieldGroup::alias = (CommonTree)retval.Tree; }
 :  ^(Alias qid)
  {
   $structDef::useLayoutOffset = true;
  }
 ;

generateFieldByAlias
scope
{
 CommonTree info;
}
@after
{
 retval.Tree = $generateFieldByAlias::info;
 //Console.WriteLine("generateFieldByAlias: " +
CommonTreeSuccour.ToStringTree((BaseTree)retval.Tree));
}
 :
 {
  $generateFieldByAlias::info =
(CommonTree)adaptor.DupTree($fieldGroup::info);
  $generateFieldByAlias::info.Children.Add($fieldGroup::alias);
 }
 ;


Eric

From jimi at temporal-wave.com  Thu Apr 14 08:41:26 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Apr 2011 08:41:26 -0700
Subject: [antlr-interest] C target - Disabling lexer output for groups
	of tokens
In-Reply-To: <BANLkTimxdr=zywA4a_xhrp=vy2a6QrtckA@mail.gmail.com>
References: <BANLkTimxdr=zywA4a_xhrp=vy2a6QrtckA@mail.gmail.com>
Message-ID: <a179101b91ad825c67cf6244a9e95b8c@mail.gmail.com>

Implement your own next token method. There are two functions, this one
and nextToken - copy them and make the change then install your pointer
before calling the lexer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Thursday, April 14, 2011 8:03 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target - Disabling lexer output for groups
> of tokens
>
> Is there way to persistantly switch the lexer output on or off? Channel
> assignments only last for one token. I know I can use skip() but then I
> have to add the same code to every lexer rule(I have hundreds) where it
> checks a boolean and then executes skip(). I also looked at changing
> the default channel but I don't how that can be done as the following
> isn't a function pointer that can be reassigned:
>
> ANTLR3_INLINE static pANTLR3_COMMON_TOKEN
> nextTokenStr        (pANTLR3_TOKEN_SOURCE toksource)
> {
> ...
>             lexer->rec->state->channel                        =
> ANTLR3_TOKEN_DEFAULT_CHANNEL;
> ...
> }
>
> Is there another way of doing this?
>
> Thanks
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Apr 14 08:48:14 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Apr 2011 08:48:14 -0700
Subject: [antlr-interest] Previous rule element reference in a scope
In-Reply-To: <BANLkTi=fVGKLVvSmKOhMGKMCkX5WG4grrA@mail.gmail.com>
References: <BANLkTimgFcjc5gNezHd4DLW7s-XFzE4u9Q@mail.gmail.com>
	<13628909.9.1302777340801.JavaMail.pitsie@devleno>
	<BANLkTi=fVGKLVvSmKOhMGKMCkX5WG4grrA@mail.gmail.com>
Message-ID: <7aa221e775a87c02893b723ea2750869@mail.gmail.com>

Perhaps my emails are not getting through one way or another.

The scope goes in your tree walker.
The scope contains a tree node
Push a scope in the WITH rule
Add the expression node to the scope
Use the scope when you see a . reference, it will automatically be the
correct scope
Done.

You say:
> For that input, I want an AST like:
>
> ^(CALL foo.method1)
> ^(ASSIGN x foo.bar.property)
>

No. You want:

^(CALL ^(DOT method1))
^(ASSIGN x ^(DOT ^(DOT bar property))

Then

with
scope
{
	CommonTreeNode withExpr;
}
: ^(WITH e=expression { $with::withExpr = $e; } block)
;

Then when you find a DOT node with just one child, you can reference the
expression to use via $with::withExpr

So, don't try to solve this with tree rewrites, just process it naturally
in the walker.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Graham Mer
> Sent: Thursday, April 14, 2011 8:10 AM
> To: Peter Kooiman
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Previous rule element reference in a
> scope
>
> > There's your problem..the enclosed block needs to be part of the
> withStatement rule I would say (how else would you decide when the
> object in the with statement goes out of scope?). Once you bring the
> enclosed block into the rule, you will be able to reference the
> enclosing withStatement rule scope.
>
> Not a problem, there is an End With statement to terminate the block
> (but even if there wasn't, the end of the block would suffice). I
> really didn't think this was relevant to the original question - there
> are independent statements, including With and method calls (among
> others), and I want to distribute the object of the With into the other
> statements in its block. I provided the two rules as an example of the
> producer and one consumer of the token, but that is by no means the
> complete grammar.
>
> It doesn't seem practical to get the enclosed block into the
> withStatement, since With and every other statement (there are many)
> can be in the block, and you can nest With statements. This really
> seems like a scope to me, so it is possible to get the reference into
> the scope, and if so, what's the syntax, and what are the best
> practices when doing so?
>
> Another example:
>
> With foo
>   .method1()
>   With .bar
>     x = .property
>   End With
> End with
>
> For that input, I want an AST like:
>
> ^(CALL foo.method1)
> ^(ASSIGN x foo.bar.property)
>
> So, given that there are lots and lots of other statements that could
> be in the With block, I think I really do want a scope rooted in the
> With statement. I just need to know how to make it work. Specifically,
> I cannot see how to get the With object token reference into the scope,
> and how to retrieve it in the statements that can use it so that I can
> construct the desired AST. Passing it as an argument would require
> passing the argument to every single statement and expression rule,
> which seems like a bad design, and seems to be what the scope was
> designed to improve.
>
> Do I completely misunderstand the purpose of scopes? Are they not
> intended to be used during AST construction?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Thu Apr 14 11:04:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 14 Apr 2011 11:04:36 -0700
Subject: [antlr-interest] Sample scannerless parser with AST construction in
	unmodified ANTLR
Message-ID: <88BD2674-8D7F-44FC-91B0-F4D3A7C0A7BC@cs.usfca.edu>

It turns out ANTLR *is* a scannerless tool. ;) Updated sample with proper whitespace, keyword handling, AST building

http://bit.ly/gT3Q1C

All done within existing framework; no update to ANTLR necessary, though I can auto-insert whitespace handling easily if I formally support in tool.

Ter

From researcher0x00 at gmail.com  Thu Apr 14 11:18:44 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 14 Apr 2011 14:18:44 -0400
Subject: [antlr-interest] Sample scannerless parser with AST
 construction in unmodified ANTLR
In-Reply-To: <88BD2674-8D7F-44FC-91B0-F4D3A7C0A7BC@cs.usfca.edu>
References: <88BD2674-8D7F-44FC-91B0-F4D3A7C0A7BC@cs.usfca.edu>
Message-ID: <BANLkTi=U-dCxP8pSzjckXAdnmaDBbwnOrw@mail.gmail.com>

Ter,

Nice

From asicaddress at gmail.com  Thu Apr 14 15:44:54 2011
From: asicaddress at gmail.com (A Z)
Date: Thu, 14 Apr 2011 17:44:54 -0500
Subject: [antlr-interest] C target - Disabling lexer output for groups
	of tokens
In-Reply-To: <a179101b91ad825c67cf6244a9e95b8c@mail.gmail.com>
References: <BANLkTimxdr=zywA4a_xhrp=vy2a6QrtckA@mail.gmail.com>
	<a179101b91ad825c67cf6244a9e95b8c@mail.gmail.com>
Message-ID: <BANLkTine6Kw3p06oySN_EC2Zp4ofUmvrSA@mail.gmail.com>

Thanks for the response.  I couldn't find where nextToken is set but I see
it now in antlr3lexer.c

antlr3LexerNew(ANTLR3_UINT32 sizeHint, pANTLR3_RECOGNIZER_SHARED_STATE
state)
{
...
        /* Install the default nextToken() method, which may be overridden
         * by generated code, or by anything else in fact.
         */
        lexer->rec->state->tokSource->nextToken        =  nextToken;
...
}

On Thu, Apr 14, 2011 at 10:41 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Implement your own next token method. There are two functions, this one
> and nextToken - copy them and make the change then install your pointer
> before calling the lexer.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of A Z
> > Sent: Thursday, April 14, 2011 8:03 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] C target - Disabling lexer output for groups
> > of tokens
> >
> > Is there way to persistantly switch the lexer output on or off? Channel
> > assignments only last for one token. I know I can use skip() but then I
> > have to add the same code to every lexer rule(I have hundreds) where it
> > checks a boolean and then executes skip(). I also looked at changing
> > the default channel but I don't how that can be done as the following
> > isn't a function pointer that can be reassigned:
> >
> > ANTLR3_INLINE static pANTLR3_COMMON_TOKEN
> > nextTokenStr        (pANTLR3_TOKEN_SOURCE toksource)
> > {
> > ...
> >             lexer->rec->state->channel                        =
> > ANTLR3_TOKEN_DEFAULT_CHANNEL;
> > ...
> > }
> >
> > Is there another way of doing this?
> >
> > Thanks
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gwlist at grahamwideman.com  Thu Apr 14 17:58:47 2011
From: gwlist at grahamwideman.com (Graham Wideman)
Date: Thu, 14 Apr 2011 17:58:47 -0700
Subject: [antlr-interest] parsing the matlab language
In-Reply-To: <a03606b68f3096c389cf40b13b83a399@mail.gmail.com>
References: <20110413162318.1A1542C47CA@ibastion.frb.gov>
	<BANLkTinLTr8YnzS8uD6hpTGeL9+qKS2d9w@mail.gmail.com>
	<a03606b68f3096c389cf40b13b83a399@mail.gmail.com>
Message-ID: <20110415005905.NYKW18463.fed1rmfepo102.cox.net@fed1rmimpo02.cox.net>

Gary:

For what version(s) of Matlab is the code you are hoping to digest?  I'm curious whether you have any comments on the degree to which the versions you want to process vary?

Jim:

Sounds like you've looked at Matlab from a syntax point-of-view in some depth.  I've wallowed in Matlab (R2010) for the many months as a user, and have noted its share of thing-on-a-thing aspects, such as two different object models, one or both of which apparently underwent a substantial revision as of R2008.

But I'm curious about your comment on the "maybe include this file" syntax. What version of Matlab does this pertain to?  What syntax is it that has this odd behavior, and what's an example of a syntax issue that depends on it downstream?

I'd like to know because it sounds like a part of Matlab I've not encountered, and is probably a hazard I want to avoid.   Alternatively, perhaps you are describing a feature set that pertains to a version of Matlab of some time back, and today's Matlab might be somewhat less unruly, which might aid Gary's cause?

-- Graham

At 4/14/2011 07:55 AM, Jim Idle wrote:
>Matlab parsing is more difficult than this because it is such an abysmally
>specified language, made worse by the recent attempts to add objects to
>it. For instance, one part of the syntax boils down to "include this file
>if it is a file otherwise it is this syntax". Because Matlab is
>interpreted, it is easy to hack something together to do that, but when it
>is parsed, it means you will need the whole structure of source code
>available or you will get it incorrect. I did not complete the whole
>syntax but it is hairy. You may be better off with a custom lexer.
>
>Jim
>
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Ron Burk
>> Sent: Thursday, April 14, 2011 7:45 AM
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] parsing the matlab language
>>
>> Couldn't find a rigorous language spec for matlab, but it kinda looks
>> like the lexer can handle the distinction by remember the previous
>> token type returned. (e.g., if the previous token type was X, or X., or
>> ), then the single quote is an operator instead of a string -- the
>> exact rule depends on the exact language spec).
>>
>> Obviously, you don't want the parser trying to piece together a quoted
>> string out of whatever (possibly illegal!) tokens appeared inside it,
>> so this is a job for the lexer.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From isabelle.perseil at enst.fr  Thu Apr 14 19:26:48 2011
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Fri, 15 Apr 2011 04:26:48 +0200
Subject: [antlr-interest]   EXTENDED DEADLINE : UML&FM'2011
Message-ID: <79dad998fb89f8e0d139f6aa3eee07c3.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                   CALL FOR PAPERS :  UML&FM?2011
            4th INTERNATIONAL WORKSHOP ON UML&FORMAL METHODS
          http://www.artist-embedded.org/artist/UML-FM-2011.html

               Workshop held in conjunction with FM 2011
                   The 17th International Symposium on
                            Formal Methods
                      http://sites.lero.ie/fm2011
                            june 20th, 2011
                            Limerick, Ireland
************************************************************************

                     Extended Submission deadline: April 30th, 2011
                     ----------------------------------------------


Many interest groups from a research perspective are in favour of the
creation of this workshop.

For more than a decade now, the two communities of UML and formal methods
have been working together to produce a simultaneously practical (via UML)
and rigorous (via formal methods) approach to software engineering.

UML is the de facto standard for modelling various aspects of software
systems in both industry and academia, despite the inconvenience that its
current specification is complex and its syntax imprecise.

The fact that the UML semantics is too informal have led many researchers
to formalize it with all kinds of existing formal languages, like OCL, Z,
B, CSP, VDM, Petri Nets, UPPAAL, HOL, Coq, PVS etc.

This fourth edition of the workshop will be open to various subjects as
the main objective is to encourage new initiatives of building bridges
between informal, semi-formal and formal notations.


Topics:
======

This workshop seeks contributions from researchers and practitioners
interested in all aspects of integrating UML and formal methods. To this
end, we solicit papers (no more than 8 pages long) related to, but not
limited to, the following principal topics:

?        Consistent specifications, model transformations (QVT technologies,
         transformation repositories). Transformations to make models more
         analyzable so as to make them executable.

?        Automation of traceability through transformations

?        Refinement techniques: developing detailed design from a UML
         abstract specification

?        Refinement of OCL specification as well

?        Formal reasoning on models for code generation

?        Technologies for compositional verification of models

?        Specification of a formal semantics for the UML.
         Giving an abstract syntax to UML diagrams

?        Formal validation and verification of software

?        Co-modeling methods formal/informal mapping techniques

?        End-to-end methodologies or software process
         engineering,correct-by-construction design providing and
         supporting tools for safety-critical embedded systems design


Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper at:

https://www.easychair.org/account/signin.cgi?conf=umlfm2011

Papers should not exceed 8 pages . Submitted manuscripts should be in
English and formatted in the style of the ISSE Format. Please, follow the
guidelines at the "For authors and editors" heading in the ISSE website

All accepted papers will be published in a special issue of ISSE NASA
journal (Innovations in Systems and Software Engineering).

Slides will be made available through the workshop website.



IMPORTANT DATES
===============
Submission deadline:              April 30th, 2011
All Notification of acceptance:   May 20th,   2011
Camera ready copy :               June 15th,  2011
Workshop date :                   June 20th,  2011
Final copy for ISSE proceedings : Sept 01st,  2011

Organizers
==========

Organizational sponsors :

OMG      (http://www.omg.org/)
ARTIST   (http://www.artist-embedded.org/artist/)


Organizers and Programme Steering committee:

- Jean-Michel Bruel (Liuppa, France)
- Robert de Simone (INRIA, France)
- S?bastien G?rard (CEA-LIST, France)
- Paul Gibson (Telecom SudParis, France)
- Isabelle Perseil (Inserm, France)

IEEE CS Coordinator:
Mike Hinchey (Lero and NASA GSFC , Ireland)

PC Chairs:
- Paul Gibson (Telecom SudParis, France)
- Isabelle Perseil (Inserm, France)

Program Committee:
- Lukman Ab Rahim (Lancaster University, United Kingdom)
- Nazareno Aguirre (Universidad Nacional de R?o Cuarto, Argentina)
- Marc Aiguier (Ecole Centrale Paris, France)
- Yamine Ait Ameur (LISI / ENSMA, France)
- Pascal Andr? (LINA, University of Nantes, France)
- Luciano Baresi (Politecnico di Milano, Italia)
- Kamel Barkaoui (CEDRIC-CNAM, France)
- Jean-Paul Bodeveix (IRIT, France)
- Jean-Michel Bruel (IRIT, France)
- Alexandre Cabral Mota (Universidade Federal de Pernambuco, Brazil)
- Agusti Canals (CS, France)
- David Clark(University College London, United Kingdom)
- Vincent Englebert (University of Namur, Belgium)
- Huascar Espinoza (Tecnalia, Spain)
- Mamoun Filali (IRIT, France)
- S?bastien G?rard (CEA-LIST, France)
- Frederic Gervais (Universit? Paris-Est, LACL, France)
- Paul Gibson (Telecom SudParis, France)
- Martin Gogolla (University of Bremen, Germany)
- J?r?me Hugues (ISAE, France)
- Stephen J.Mellor (Accelerated Technologies, Tucson AZ, USA)
- Paul Krause (University of Surrey, United Kingdom)
- Kevin Lano (King?s College London, United Kingdom)
- Manuel Mazzara (Newcastle University, United Kingdom)
- Sun Meng (Peking University, China)
- Dominique Mery (LORIA, France)
- Elie Najm (Telecom ParisTech, France)
- Kazuhiro Ogata (Japan Advanced Institute of Science and Technology, Japan)
- Isabelle Perseil (Inserm, France)
- Dorina Petriu (Carlton University, USA)
- Fiona Polack (University of York, United Kingdom)
- Shengchao Qin (Teesside University, United Kingdom)
- Arend Rensink (University of Twente, Netherlands)
- Thomas Robert (Telecom ParisTech, France)
- Douglas Schmidt (Vanderbilt University, USA)
- Pierre-Yves Schobbens (University of Namur, Belgium)
- Bran Selic (Malina Software Corp, Canada)
- Fran?oise Simonot Lion (LORIA, France)
- Volker Stolz (United Nations University, Norway)
- Jing Sun (University of Auckland, New Zealand)
- Jun Suzuki (University of Massachusetts, Boston, USA)
- Bedir Tekinerdogan (Bilkent University, Turkey)
- Tatsuhiro Tsuchiya (Osaka University, Japan)
- Naoyasu Ubayashi (Kyushu Institute of Technology, Japan)
- Stefan Van Baelen (Catholic University of Leuven, Belgium)
- Tullio Vardanega (University of Padua, Italia)
- Fran?ois Vernadat (CNRS-LAAS, France)
- Eugenio Villar (Universidad de Cantabria, Spain)
- Tim Weilkiens (OOSE Innovative Informatik, Germany)
- Sergio Yovine (Universidad de Buenos Aires, Argentina)




From ruslan_zasukhin at valentina-db.com  Sat Apr 16 03:06:43 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 16 Apr 2011 13:06:43 +0300
Subject: [antlr-interest] v2->v3   Skip chars in Lexer?
Message-ID: <C9CF44E3.E9AB5%ruslan_zasukhin@valentina-db.com>

Hi All,

In our old v2 grammar in Lexer we did have

DELIMITED        // delimited_identifier
    :
        (    DQUOTE!  ( ~(DQUOTE) | DQUOTE DQUOTE! )+ DQUOTE!
        |    BQUOTE!  ( ~(BQUOTE)  | BQUOTE BQUOTE! )+ BQUOTE!
        )        
        { $type = IDENT; }
    ;


I.e. We have skip quotes around IDENT, and  in case of ""  inside we have
skiped second.

I have spent few hours to try found analog for v3 and no success.


All v3 grammars I have check, DO NOT ignore any symbols.
Why?


How to remove that quotes in v3?  :-)


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From bkiers at gmail.com  Sat Apr 16 03:18:35 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 16 Apr 2011 12:18:35 +0200
Subject: [antlr-interest] v2->v3 Skip chars in Lexer?
In-Reply-To: <C9CF44E3.E9AB5%ruslan_zasukhin@valentina-db.com>
References: <C9CF44E3.E9AB5%ruslan_zasukhin@valentina-db.com>
Message-ID: <BANLkTikOFbRx4dUbz2Cu+98-p2_DL0kv0Q@mail.gmail.com>

On Sat, Apr 16, 2011 at 12:06 PM, Ruslan Zasukhin <
ruslan_zasukhin at valentina-db.com> wrote:

> ...
>
> How to remove that quotes in v3?  :-)
>
>
Here's a way:

DELIMITED
  @init {
    String q = null;
  }
  @after {
    String text = getText();
    // remove the first and last quote, replace all 2 quotes with a single
quote
    setText(text.substring(1, text.length()-1).replace(q+q, q));
  }
  :  ( DQUOTE (~DQUOTE | DQUOTE DQUOTE)+ DQUOTE {q = $DQUOTE.text;}
     | BQUOTE (~BQUOTE | BQUOTE BQUOTE)+ BQUOTE {q = $BQUOTE.text;}
     ) { $type = IDENT; }
  ;


or create your own token that handles the replacements internally:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844

Regards,

Bart.

From ruslan_zasukhin at valentina-db.com  Sat Apr 16 03:37:22 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 16 Apr 2011 13:37:22 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer?   Terrence?
In-Reply-To: <BANLkTikOFbRx4dUbz2Cu+98-p2_DL0kv0Q@mail.gmail.com>
Message-ID: <C9CF4C12.E9AC1%ruslan_zasukhin@valentina-db.com>

On 4/16/11 1:18 PM, "Bart Kiers" <bkiers at gmail.com> wrote:

Thank you, Bart.

And I have forget to mention that we using C-target.
So there is no nice string classes ...

And even with string classes, don't you think guys, that this NEW WAY
Of dealing of wrap-quotes do not looks  best of the best?

    We must now work with strings?
    remove first/last chars?
    remove inside chars?
        this means do not required copy pasts ...

I have hear that ANTLR3 LEXER going to be much faster of v2 Lexer.
We did use FLEX instead of v2 Lexer because of that.

And now ... We must do manual job with strings ??
    
Somehow not best of the best?
May be it is good idea RETURN BACK
that simple way to skip that chars right in lexer?


> On Sat, Apr 16, 2011 at 12:06 PM, Ruslan Zasukhin
> <ruslan_zasukhin at valentina-db.com> wrote:
> ...
> 
> How to remove that quotes in v3? ?:-)
> 
> 
> Here's a way:
> 
> DELIMITED
> ??@init {
> ?? ?String q = null;
> ??}
> ??@after {
> ?? ?String text = getText();
> ?? ?// remove the first and last quote, replace all 2 quotes with a single
> quote?
> ?? ?setText(text.substring(1, text.length()-1).replace(q+q, q));
> ??}
> ??: ?( DQUOTE (~DQUOTE | DQUOTE DQUOTE)+ DQUOTE {q = $DQUOTE.text;}
> ?? ? | BQUOTE (~BQUOTE | BQUOTE BQUOTE)+ BQUOTE {q = $BQUOTE.text;}
> ?? ? ) { $type = IDENT; }
> ??;
> 
> or create your own token that handles the replacements
> internally:?http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844
> 
> Regards,
> 
> Bart.?

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Sat Apr 16 04:51:42 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 16 Apr 2011 14:51:42 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? // FAQ only for
 Java. What about C? :-)
In-Reply-To: <BANLkTikOFbRx4dUbz2Cu+98-p2_DL0kv0Q@mail.gmail.com>
Message-ID: <C9CF5D7E.E9ACB%ruslan_zasukhin@valentina-db.com>

On 4/16/11 1:18 PM, "Bart Kiers" <bkiers at gmail.com> wrote:

I have found this FAQ
    http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461

But only Java here ...

        {setText(getText().substring(1, getText().length()-1));} ;


Now I struggling to find any API of C analogs of
getText() / setText() for LEXER.



> How to remove that quotes in v3? ?:-)
> 
> 
> Here's a way:
> 
> DELIMITED
> ??@init {
> ?? ?String q = null;
> ??}
> ??@after {
> ?? ?String text = getText();
> ?? ?// remove the first and last quote, replace all 2 quotes with a single
> quote?
> ?? ?setText(text.substring(1, text.length()-1).replace(q+q, q));
> ??}
> ??: ?( DQUOTE (~DQUOTE | DQUOTE DQUOTE)+ DQUOTE {q = $DQUOTE.text;}
> ?? ? | BQUOTE (~BQUOTE | BQUOTE BQUOTE)+ BQUOTE {q = $BQUOTE.text;}
> ?? ? ) { $type = IDENT; }
> ??;
> 
> or create your own token that handles the replacements
> internally:?http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Sat Apr 16 09:36:35 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 16 Apr 2011 19:36:35 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? For C-target
	[SOLVED]
In-Reply-To: <BANLkTikOFbRx4dUbz2Cu+98-p2_DL0kv0Q@mail.gmail.com>
Message-ID: <C9CFA043.E9AF9%ruslan_zasukhin@valentina-db.com>

On 4/16/11 1:18 PM, "Bart Kiers" <bkiers at gmail.com> wrote:

Hi All,

Just for archive  I will show solution I was able built so far for our
Valentina SQL  couple of LEXER rules.

The only not clear yet to me is:
    if I must destroy temporary strings to avoid leaks?

Also I still wonder, if exists more compact and elegant and effective
solution
>From point of view of C ? developer? :-)


//--------------------------------------------------------------------------
----
// an identifier. Note that testLiterals is set to true!  This means
// that after we match the rule, we look in the literals table to see
// if it's a literal or really an identifier
IDENT
    :    ( LETTER | '_' ) ( LETTER | '_' | DIGIT )*
    ;

DELIMITED       // delimited_identifier
    :
    (    DQUOTE ( ~(DQUOTE) | DQUOTE DQUOTE )+ DQUOTE
    |    BQUOTE ( ~(BQUOTE) | BQUOTE BQUOTE )+ BQUOTE
            
    |    LBRACK ( ~(']') )+ RBRACK     // valentina extension   [asasas '' "
sd "]    
    )    
        {
            // Remove the first and the last chars:
            pANTLR3_STRING pQuotedStr = GETTEXT();
            pANTLR3_STRING pStr = pQuotedStr->subString( pQuotedStr, 1,
pQuotedStr->len - 1 );
            
            SETTEXT( pStr );
        }
        { $type = IDENT; }
    ;


And this is the second rule, more complex, because can be quotes inside:

//--------------------------------------------------------------------------
----
STRING_LITERAL
@init
{
    int dquotes_count = 0;
}
    :    QUOTE 
        (    ESCAPE_SEQUENCE
        |    ~('\'' | '\\')
        |    QUOTE QUOTE            { ++dquotes_count; }
        )* 
        QUOTE 
        
        {
            // Remove the first and the last chars:
            pANTLR3_STRING pQuotedStr = GETTEXT();
            pANTLR3_STRING pStr = pQuotedStr->subString( pQuotedStr, 1,
pQuotedStr->len - 1 );
            
            char* pStart = (char*) pStr->chars;
            
            while( dquotes_count-- )
            {
                char* pFirstQuote = strchr( pStart, '\'' );
                
                if( *(pFirstQuote + 1) != '\'' ) // second quote?
                    continue;
                   
                // Example: 'aabbcc''def'
                int CharsOnLeft = pFirstQuote - pStart + 1;
                int CharsToMove = pStr->len - CharsOnLeft;
                   
                ANTLR3_MEMMOVE( pFirstQuote + 1, pFirstQuote + 2,
CharsToMove );

                // prepare for possible next loop:
                pStart = pFirstQuote + 1;
                pStr->len--;
            }
            
            SETTEXT( pStr );
        }
    ;



-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From jimi at temporal-wave.com  Sat Apr 16 11:27:39 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Apr 2011 11:27:39 -0700
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
In-Reply-To: <C9CF4C12.E9AC1%ruslan_zasukhin@valentina-db.com>
References: <BANLkTikOFbRx4dUbz2Cu+98-p2_DL0kv0Q@mail.gmail.com>
	<C9CF4C12.E9AC1%ruslan_zasukhin@valentina-db.com>
Message-ID: <2b849a050e7dc4c78d9de55f56844704@mail.gmail.com>

It is for performance and has been talked about for 4 years, so we don't
need to start it again. If we implement ! then you have to build the
string in to every token and copy it, but basically it is easy to strip
leading and trailing characters as the tokens carry pointers, so get the
start pointer, increment it, get the end point, decrement it, now

Do not use the built in $token.text->chars as this is slow and just for
convenience. The token holds a pointer to the start of the text in the
original input stream, which is greatly faster and you don?t do anything
at all to the token until and if you use it. You know the token type, so
can handle it appropriately. It is a trivial piece of code and you will
want a generic method/function for getting the string anyway. It takes
less time to implement it than to worry about ! not being there any more
:-)

Jim





> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruslan Zasukhin
> Sent: Saturday, April 16, 2011 3:37 AM
> To: antlr-interest at antlr.org; Paradigma Software Team List
> Subject: Re: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
>
> On 4/16/11 1:18 PM, "Bart Kiers" <bkiers at gmail.com> wrote:
>
> Thank you, Bart.
>
> And I have forget to mention that we using C-target.
> So there is no nice string classes ...
>
> And even with string classes, don't you think guys, that this NEW WAY
> Of dealing of wrap-quotes do not looks  best of the best?
>
>     We must now work with strings?
>     remove first/last chars?
>     remove inside chars?
>         this means do not required copy pasts ...
>
> I have hear that ANTLR3 LEXER going to be much faster of v2 Lexer.
> We did use FLEX instead of v2 Lexer because of that.
>
> And now ... We must do manual job with strings ??
>
> Somehow not best of the best?
> May be it is good idea RETURN BACK
> that simple way to skip that chars right in lexer?
>
>
> > On Sat, Apr 16, 2011 at 12:06 PM, Ruslan Zasukhin
> > <ruslan_zasukhin at valentina-db.com> wrote:
> > ...
> >
> > How to remove that quotes in v3? ?:-)
> >
> >
> > Here's a way:
> >
> > DELIMITED
> > ??@init {
> > ?? ?String q = null;
> > ??}
> > ??@after {
> > ?? ?String text = getText();
> > ?? ?// remove the first and last quote, replace all 2 quotes with a
> > single quote
> > ?? ?setText(text.substring(1, text.length()-1).replace(q+q, q));
> > ??}
> > ??: ?( DQUOTE (~DQUOTE | DQUOTE DQUOTE)+ DQUOTE {q = $DQUOTE.text;}
> > ?? ? | BQUOTE (~BQUOTE | BQUOTE BQUOTE)+ BQUOTE {q = $BQUOTE.text;}
> > ?? ? ) { $type = IDENT; }
> > ??;
> >
> > or create your own token that handles the replacements
> > internally:
> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844
> >
> > Regards,
> >
> > Bart.
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ruslan_zasukhin at valentina-db.com  Sun Apr 17 01:06:25 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 17 Apr 2011 11:06:25 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
In-Reply-To: <2b849a050e7dc4c78d9de55f56844704@mail.gmail.com>
Message-ID: <C9D07A31.E9B9E%ruslan_zasukhin@valentina-db.com>

On 4/16/11 9:27 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

> It is for performance and has been talked about for 4 years, so we don't
> need to start it again.

Okay, but may be it is good idea to add code-example into that FAQ page
about this quotes?

    http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461

There is no C Target example on this page.

>  If we implement ! then you have to build the
> string in to every token and copy it,

Not very clear but ok.

I have see in book it is possible to use labels in Lexer
    IDENT:  q1=DQUOTE  something  q2=DQUOTE

But how this helps? In book is shown useless example
Action with  all labels
        { $q1, something.text $q2 }

I did think we can do some "re-write" in lexer, but nope
So what use of that is not clear.


> but basically it is easy to strip
> leading and trailing characters as the tokens carry pointers, so get the
> start pointer, increment it, get the end point, decrement it, now
> 
> Do not use the built in $token.text->chars as this is slow and just for
> convenience. 

> The token holds a pointer to the start of the text in the
> original input stream, which is greatly faster and you don?t do anything
> at all to the token until and if you use it.

So I must check structure Token of C Target,
And I should find there two pointers start/end and correct them.

Ok clear, thank you, Jim.

> You know the token type, so can handle it appropriately.

Why I should care about type?

I should correct pointers at the end of lexer rule, right?

> It is a trivial piece of code and you will
> want a generic method/function for getting the string anyway. It takes
> less time to implement it than to worry about ! not being there any more
> :-)

Piece of code may be trivial, but it takes hours to lean your C code.
And this is where is problem IMO.

This is why again I ask you to add best of the best example into that FAQ
page. It should take 5 minutes only from you. And will help others.


Problem2:  
    you describe above effective solution only for skip FIRST/LAST quotes.
    Good.   But you could see that we need yet remove INTERNAL quote
    and this task require creation of COPY of string from original input.
    Right?
    
STRING_LITERAL
@init
{
    int dquotes_count = 0;
}
    :    QUOTE 
        (    ESCAPE_SEQUENCE
        |    ~('\'' | '\\')
        |    QUOTE QUOTE            { ++dquotes_count; }
        )* 
        QUOTE 
        
        {
            // Remove the first and the last chars:
            pANTLR3_STRING pQuotedStr = GETTEXT();
            pANTLR3_STRING pStr = pQuotedStr->subString( pQuotedStr, 1,
pQuotedStr->len - 1 );
            
            char* pStart = (char*) pStr->chars;
            
            while( dquotes_count-- )
            {
                char* pFirstQuote = strchr( pStart, '\'' );
                
                if( *(pFirstQuote + 1) != '\'' ) // second quote?
                    continue;
                   
                // Example: 'aabbcc''def'
                int CharsOnLeft = pFirstQuote - pStart + 1;
                int CharsToMove = pStr->len - CharsOnLeft;
                   
                ANTLR3_MEMMOVE( pFirstQuote + 1, pFirstQuote + 2,
CharsToMove );

                // prepare for possible next loop:
                pStart = pFirstQuote + 1;
                pStr->len--;
            }
            
            SETTEXT( pStr );
        }
    ;





-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From ruslan_zasukhin at valentina-db.com  Sun Apr 17 01:13:19 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 17 Apr 2011 11:13:19 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
In-Reply-To: <2b849a050e7dc4c78d9de55f56844704@mail.gmail.com>
Message-ID: <C9D07BCF.E9BA5%ruslan_zasukhin@valentina-db.com>

On 4/16/11 9:27 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> It is for performance and has been talked about for 4 years, so we don't
> need to start it again.

> You know the token type, so
> can handle it appropriately. It is a trivial piece of code and you will
> want a generic method/function for getting the string anyway. It takes
> less time to implement it than to worry about ! not being there any more
> :-)

And since Sunday, I'd like to add my vision.   :-)


*  how easy was solution in v2.
        IDENT:  DQUOTE!  something DQUOTE!

    What could be easier? :-)


* also best here is that !  Did as for Java so for C
Now in v3, for each target developers must provide different code.
Good?  Nope.


* I did very expect that in v3 I will be able specify some re-write rule
like in parser. But no it not works.  And btw, it seems there is no any
mention of this in docs and book.

    Attention: re-write syntax do not works in Lexer v3.


* yes, I understand I think, that main technical problem is that Token tend
to point  p1/p2  to input buffer string to avoid COPY.  Yes speed  is my own
favor feature of product :-)

But your Token already can  have COPY if needed, right?
Then for RARE case-sensitive , it will be great to automated way.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Sun Apr 17 01:23:54 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 17 Apr 2011 11:23:54 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
In-Reply-To: <C9D07A31.E9B9E%ruslan_zasukhin@valentina-db.com>
Message-ID: <C9D07E4A.E9BAC%ruslan_zasukhin@valentina-db.com>

On 4/17/11 11:06 AM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:

>> but basically it is easy to strip
>> leading and trailing characters as the tokens carry pointers, so get the
>> start pointer, increment it, get the end point, decrement it, now
>> 
>> Do not use the built in $token.text->chars as this is slow and just for
>> convenience. 
 
>> The token holds a pointer to the start of the text in the
>> original input stream, which is greatly faster and you don?t do anything
>> at all to the token until and if you use it.

>> You know the token type, so can handle it appropriately.

Hmmm,

I have take a look, and I do not see way in C-target access token in lexer
rule.

Do you mean that I should care about these pointers LATER, in parser?

Butt hen this again looks as not best solution...
    Java developers will remove them in lexer,
    C developers in parser?

Some kind of Zoo ...


Please help   :-)

And note, that I am C++ developer with 20 years of experience,
    do all my best reading ANTLR WIKI and book,and examples,
    and which did work with ANTLR v2 for 10 years ...
    cannot resolve this *trivial* task in *the best way*
    for v3 for about 14 hours now.

I wonder how other C developers was able resolve this problem?

And may be docs, faqs, examples can be improved in this direction?
Thank you, in advance :-)

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From peter at crispu.com  Sun Apr 17 03:35:44 2011
From: peter at crispu.com (Peter Kooiman)
Date: Sun, 17 Apr 2011 05:35:44 -0500 (CDT)
Subject: [antlr-interest] Sample scannerless parser with AST
 construction in	unmodified ANTLR
In-Reply-To: <88BD2674-8D7F-44FC-91B0-F4D3A7C0A7BC@cs.usfca.edu>
Message-ID: <14317424.25.1303036540193.JavaMail.pitsie@devleno>

Ter, 

First of all, let me explain that the only reason I'm being such a nuisance is that I really want this to work! However, I'm afraid that in the end, ANTLR falls just short of being a scannerless tool. 

The problem lies with distinguishing between keywords, and identifiers that happen to start with the same letters as a keyword. 
The sample at http://bit.ly/gT3Q1C cannot distinguish between "returnme;" and "return me;", because kreturn is expressed as: 

kreturn : 'r' 'e' 't' 'u' 'r' 'n' ws? ; 

My first thought was, just make the whitespace not optional. But, in C for example, we can have 
return; 
return me; 

whereas "returnme;" would be a syntax error. Now, making ws not optional is no longer possible; what is really needed is a way to express 
"'r' 'e' 't' 'u' 'r' 'n' followed by anything that can NOT be part of an identifier". Although you could re-write the return statement rule to something awful like 

retstat: kreturn ws? colon 
         | kreturn ws id colon 
         ; 

the underlying problem remains: there is no way to prevent ANTLR entering rule kreturn upon seeing an identifier like "returnme" that happens to start with the same letters as keyword "return". In Rats!, you would write

KRETURN = "return" !LetterOrDigit ws? ;
 
where the "!" operator denotes a syntactic predicate meaning "LetterOrDigit must not match, and corresponding input will not be consumed"

Without the ability to express "something followed by anything that is not a letter or digit", I don't see how to get it right in ANTLR. I very much hope I am wrong though!


From ruslan_zasukhin at valentina-db.com  Sun Apr 17 05:37:47 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 17 Apr 2011 15:37:47 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? For C-target
 [SOLVED 2.5]
In-Reply-To: <C9CFA043.E9AF9%ruslan_zasukhin@valentina-db.com>
Message-ID: <C9D0B9CB.E9BD2%ruslan_zasukhin@valentina-db.com>

Hi All,

After Jim points to more effective way skip wrapper-quotes,
And some more time, this is working solution for archive:

//--------------------------------------------------------------------
IDENT
    :    ( LETTER | '_' ) ( LETTER | '_' | DIGIT )*
    ;

// RZ 04/17/11: in ANTLR v3 there is no way skip chars in lexer. Oops.
//    Instead we do trick suggest by Jim Idle on ANTLR list:
//  skip first/last chras of token on the parser level.
// 
DELIMITED        // delimited_identifier
    :
    (    DQUOTE ( ~(DQUOTE) | DQUOTE DQUOTE )+ DQUOTE
    |    BQUOTE ( ~(BQUOTE) | BQUOTE BQUOTE )+ BQUOTE
    |    LBRACK ( ~(']') )+ RBRACK
    )    
    ;


And on the parser level, we use Token and its pointers to ++ / --
Also type of Token is changed to IDENT with help of re-write.


//--------------------------------------------------------------------
identifier
    :    IDENT            // regular_identifier
    
    |    d=DELIMITED     // delimited_identifier
        {
            ++$d->start;
            --$d->stop;
        }        
        -> ^( IDENT[$d.text->chars] )
    ;



================
Works... But ...
I am far not sure that this solution is really more effective, Jim.

Yes, on lexer level I have use   ->chars, and you say it is slower ...

But on parser level, except to fast ++ / -- operations, we need yet create
second token IDENT and copy all values from the first ...

Sizeof( ANTLR3_COMMON_TOKEN_struct)  is about 160-200 bytes.

So creation by new and copy about 150 bytes to skip TWO chars
not looks so cheap operation.  Also note that IDENTs usually 5-20 chars
only.  Much less of 200 bytes of that structure.


And may be my first solution with Lexer level was not so bad?

And I still have TODO:  skip chars inside of LITERAL on parser level ...
    here we cannot do just ++ \ --


================
I do not see yet the whole picture how works lexer on low level in C.

Also I do not see yet any clean information about UTF encodings in C-target.
I am going ask about this in future letters.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From sonapgr at gmail.com  Sun Apr 17 06:40:59 2011
From: sonapgr at gmail.com (Sibani Panigrahi)
Date: Sun, 17 Apr 2011 19:10:59 +0530
Subject: [antlr-interest] Implementing Symbol Table
Message-ID: <BANLkTimekEGZNNRe8Qpkuy+vEyfYVvVq5A@mail.gmail.com>

Hi Everyone,

I am designing a compiler for C using python as target language in ANTLR. I
have already written the grammar for parsing and AST generation.

I m unable to implement the symbol table now. I searched for some examples
but they are in Java.

How to do it ?

Thanks in advance
Sonali

From qiaomuf at gmail.com  Sun Apr 17 07:19:48 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Sun, 17 Apr 2011 22:19:48 +0800
Subject: [antlr-interest] How to match a tree without executing the actions
Message-ID: <BANLkTimRkkDk=rmCSu6yuS7OEjP2_Zzjrg@mail.gmail.com>

Hi,

I have an AST and a subtree that represents for function definition.
When I implement the tree walker, I don't want to executing the
actions in the function body when I match a function definition. I
know I can pass an argument down indicating whether to execute the
actions or not. Is there any way that doesn't require any modification
to other rules except the function definition rule?

I tried to skip the whole function body AST but didn't success because
it's hard for me to find the last node index of the body. If I can
have that, I guess SEEK(index + 1) could work for me if I'm right.

Could any one please give me a hand?

-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From jimi at temporal-wave.com  Sun Apr 17 08:32:59 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 17 Apr 2011 08:32:59 -0700
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
In-Reply-To: <C9D07E4A.E9BAC%ruslan_zasukhin@valentina-db.com>
References: <C9D07A31.E9B9E%ruslan_zasukhin@valentina-db.com>
	<C9D07E4A.E9BAC%ruslan_zasukhin@valentina-db.com>
Message-ID: <99a1efa7c2a7e64f570e548fe7f46e07@mail.gmail.com>

The lexer CREATES the token, so you do not access the token itself.


Don't forget antlr.markmail.org:

http://markmail.org/message/izyhuzbooerfw4tu


Don't deal with it in the parser, use a lexer rule for single quotes, then
either use the trick below or just set the text of the token. If you know
that you will access the token then setting the text is no problem, but
the code below is easier.


 STRING_LITERAL
 @init
 {
     int    theStart = $start;
 }
         : '\''
             {
                 // Start the token text here, when we don't want the
opening '
                 //
                 theStart = getCharIndex();

             }

              ~'\''*

             { $start = theStart; // There are other variants of this
			EMIT();
			}
             '\''
          ;


you could also look at the source code, or create your own token creation
method that just auto removed the quotes for some tokens and probably a
few other solutions.

If performance is your preference, do not use $XXX.text

Jim



> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Sunday, April 17, 2011 1:24 AM
> To: Ruslan Zasukhin; Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] v2->v3 Skip chars in Lexer? Terrence?
>
> On 4/17/11 11:06 AM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-
> db.com>
> wrote:
>
> >> but basically it is easy to strip
> >> leading and trailing characters as the tokens carry pointers, so get
> >> the start pointer, increment it, get the end point, decrement it,
> now
> >>
> >> Do not use the built in $token.text->chars as this is slow and just
> >> for convenience.
>
> >> The token holds a pointer to the start of the text in the original
> >> input stream, which is greatly faster and you don?t do anything at
> >> all to the token until and if you use it.
>
> >> You know the token type, so can handle it appropriately.
>
> Hmmm,
>
> I have take a look, and I do not see way in C-target access token in
> lexer rule.
>
> Do you mean that I should care about these pointers LATER, in parser?
>
> Butt hen this again looks as not best solution...
>     Java developers will remove them in lexer,
>     C developers in parser?
>
> Some kind of Zoo ...
>
>
> Please help   :-)
>
> And note, that I am C++ developer with 20 years of experience,
>     do all my best reading ANTLR WIKI and book,and examples,
>     and which did work with ANTLR v2 for 10 years ...
>     cannot resolve this *trivial* task in *the best way*
>     for v3 for about 14 hours now.
>
> I wonder how other C developers was able resolve this problem?
>
> And may be docs, faqs, examples can be improved in this direction?
> Thank you, in advance :-)
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From jimi at temporal-wave.com  Sun Apr 17 08:37:35 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 17 Apr 2011 08:37:35 -0700
Subject: [antlr-interest] v2->v3 Skip chars in Lexer? For C-target
	[SOLVED 2.5]
In-Reply-To: <C9D0B9CB.E9BD2%ruslan_zasukhin@valentina-db.com>
References: <C9CFA043.E9AF9%ruslan_zasukhin@valentina-db.com>
	<C9D0B9CB.E9BD2%ruslan_zasukhin@valentina-db.com>
Message-ID: <0fcfaa3d434843e86bfc993b2cdd0457@mail.gmail.com>

Why do you have to copy the token? You just pass a pointer to it, and when
you want the text, use the pointers in the token.

You solution is fine, but I don't think it works in all cases of
fragments, but cannot remember why just now. There are solutions in
antlr.markmail.org

Jim

> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Sunday, April 17, 2011 5:38 AM
> To: antlr-interest at antlr.org; Jim Idle
> Subject: Re: [antlr-interest] v2->v3 Skip chars in Lexer? For C-target
> [SOLVED 2.5]
>
> Hi All,
>
> After Jim points to more effective way skip wrapper-quotes, And some
> more time, this is working solution for archive:
>
> //--------------------------------------------------------------------
> IDENT
>     :    ( LETTER | '_' ) ( LETTER | '_' | DIGIT )*
>     ;
>
> // RZ 04/17/11: in ANTLR v3 there is no way skip chars in lexer. Oops.
> //    Instead we do trick suggest by Jim Idle on ANTLR list:
> //  skip first/last chras of token on the parser level.
> //
> DELIMITED        // delimited_identifier
>     :
>     (    DQUOTE ( ~(DQUOTE) | DQUOTE DQUOTE )+ DQUOTE
>     |    BQUOTE ( ~(BQUOTE) | BQUOTE BQUOTE )+ BQUOTE
>     |    LBRACK ( ~(']') )+ RBRACK
>     )
>     ;
>
>
> And on the parser level, we use Token and its pointers to ++ / -- Also
> type of Token is changed to IDENT with help of re-write.
>
>
> //--------------------------------------------------------------------
> identifier
>     :    IDENT            // regular_identifier
>
>     |    d=DELIMITED     // delimited_identifier
>         {
>             ++$d->start;
>             --$d->stop;
>         }
>         -> ^( IDENT[$d.text->chars] )
>     ;
>
>
>
> ================
> Works... But ...
> I am far not sure that this solution is really more effective, Jim.
>
> Yes, on lexer level I have use   ->chars, and you say it is slower ...
>
> But on parser level, except to fast ++ / -- operations, we need yet
> create second token IDENT and copy all values from the first ...
>
> Sizeof( ANTLR3_COMMON_TOKEN_struct)  is about 160-200 bytes.
>
> So creation by new and copy about 150 bytes to skip TWO chars not looks
> so cheap operation.  Also note that IDENTs usually 5-20 chars only.
> Much less of 200 bytes of that structure.
>
>
> And may be my first solution with Lexer level was not so bad?
>
> And I still have TODO:  skip chars inside of LITERAL on parser level
> ...
>     here we cannot do just ++ \ --
>
>
> ================
> I do not see yet the whole picture how works lexer on low level in C.
>
> Also I do not see yet any clean information about UTF encodings in C-
> target.
> I am going ask about this in future letters.
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From jason.doege at doege.com  Sun Apr 17 08:56:47 2011
From: jason.doege at doege.com (Jason Doege)
Date: Sun, 17 Apr 2011 10:56:47 -0500
Subject: [antlr-interest] Sample scannerless parser with AST
 construction in	unmodified ANTLR
In-Reply-To: <14317424.25.1303036540193.JavaMail.pitsie@devleno>
References: <14317424.25.1303036540193.JavaMail.pitsie@devleno>
Message-ID: <4DAB0DBF.4020400@doege.com>

I mentioned this idea in a prior message, calling it a "zero-width 
negative look-ahead assertion", mainly because I am unfamiliar with the 
term "syntactic predicate". I didn't say much about implementation, though.

Two suggestions for this would be to allow ANTLR to:

1) treat:

kreturn : 'return' ws? ;

as if it were:

kreturn : 'r' 'e' 't' 'u' 'r' 'n' ws? ;

2) permit the use of regular expressions instead of simple strings in 
such instances which would then make that production look like:

kreturn : 'return\s?' ;

and with the addition of dealing with the keyword problem:

kreturn : 'return(?!\W)' ;

where (?!\W) looks at but does not consume the next character on the 
stream and the test passes only if the character is a non-word ( \W 
matches anything that is not a-z, A-Z, 0-9 or _ ).

I apologize for my ignorance of ANTLR architecture. I have no idea if or 
how the architecture of ANTLR would support this.

On a related note, it looks to me that when you have something like:

kreturn : 'return' ws?;

that the lexer is automatically created with a lexical element 'return' 
whereas my initial expectation is that 'return' would only be tested for 
existence at that particular point in the parsing process. I think 
limiting the parser to only considering the rule at hand is crucial to 
obtaining the flexibility implied by a scanner-less parser generator.

Best regards,
Jason Doege

On 4/17/2011 5:35 AM, Peter Kooiman wrote:
> Ter,
>
> First of all, let me explain that the only reason I'm being such a nuisance is that I really want this to work! However, I'm afraid that in the end, ANTLR falls just short of being a scannerless tool.
>
> The problem lies with distinguishing between keywords, and identifiers that happen to start with the same letters as a keyword.
> The sample at http://bit.ly/gT3Q1C cannot distinguish between "returnme;" and "return me;", because kreturn is expressed as:
>
> kreturn : 'r' 'e' 't' 'u' 'r' 'n' ws? ;
>
> My first thought was, just make the whitespace not optional. But, in C for example, we can have
> return;
> return me;
>
> whereas "returnme;" would be a syntax error. Now, making ws not optional is no longer possible; what is really needed is a way to express
> "'r' 'e' 't' 'u' 'r' 'n' followed by anything that can NOT be part of an identifier". Although you could re-write the return statement rule to something awful like
>
> retstat: kreturn ws? colon
>           | kreturn ws id colon
>           ;
>
> the underlying problem remains: there is no way to prevent ANTLR entering rule kreturn upon seeing an identifier like "returnme" that happens to start with the same letters as keyword "return". In Rats!, you would write
>
> KRETURN = "return" !LetterOrDigit ws? ;
>
> where the "!" operator denotes a syntactic predicate meaning "LetterOrDigit must not match, and corresponding input will not be consumed"
>
> Without the ability to express "something followed by anything that is not a letter or digit", I don't see how to get it right in ANTLR. I very much hope I am wrong though!
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sun Apr 17 09:35:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Apr 2011 09:35:08 -0700
Subject: [antlr-interest] Sample scannerless parser with AST
	construction in	unmodified ANTLR
In-Reply-To: <14317424.25.1303036540193.JavaMail.pitsie@devleno>
References: <14317424.25.1303036540193.JavaMail.pitsie@devleno>
Message-ID: <E5DAA40F-A324-4A0F-903E-08FB9F2FCB11@cs.usfca.edu>

hi!  crap. ok,Added the following to your post on that webpage:

> Ok, looks like we need some kind of formal mechanism after all, or at least a predicate that tests the input without consuming. Problem is I already use ~ to mean "not element but consume" and '!' to mean don't include in the tree. Maybe -LetterOrDigit?

Still, we could easily do it with a simple {...}? so ANTLR can still do it without formalism, just as PEGs force you to manually say that as well. :)

Ter

On Apr 17, 2011, at 3:35 AM, Peter Kooiman wrote:

> Ter, 
> 
> First of all, let me explain that the only reason I'm being such a nuisance is that I really want this to work! However, I'm afraid that in the end, ANTLR falls just short of being a scannerless tool. 
> 
> The problem lies with distinguishing between keywords, and identifiers that happen to start with the same letters as a keyword. 
> The sample at http://bit.ly/gT3Q1C cannot distinguish between "returnme;" and "return me;", because kreturn is expressed as: 
> 
> kreturn : 'r' 'e' 't' 'u' 'r' 'n' ws? ; 
> 
> My first thought was, just make the whitespace not optional. But, in C for example, we can have 
> return; 
> return me; 
> 
> whereas "returnme;" would be a syntax error. Now, making ws not optional is no longer possible; what is really needed is a way to express 
> "'r' 'e' 't' 'u' 'r' 'n' followed by anything that can NOT be part of an identifier". Although you could re-write the return statement rule to something awful like 
> 
> retstat: kreturn ws? colon 
>         | kreturn ws id colon 
>         ; 
> 
> the underlying problem remains: there is no way to prevent ANTLR entering rule kreturn upon seeing an identifier like "returnme" that happens to start with the same letters as keyword "return". In Rats!, you would write
> 
> KRETURN = "return" !LetterOrDigit ws? ;
> 
> where the "!" operator denotes a syntactic predicate meaning "LetterOrDigit must not match, and corresponding input will not be consumed"
> 
> Without the ability to express "something followed by anything that is not a letter or digit", I don't see how to get it right in ANTLR. I very much hope I am wrong though!
> 


From parrt at cs.usfca.edu  Sun Apr 17 09:36:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Apr 2011 09:36:12 -0700
Subject: [antlr-interest] Sample scannerless parser with AST
	construction in	unmodified ANTLR
In-Reply-To: <4DAB0DBF.4020400@doege.com>
References: <14317424.25.1303036540193.JavaMail.pitsie@devleno>
	<4DAB0DBF.4020400@doege.com>
Message-ID: <19907AAD-5021-4397-A766-4D95D17ADCF8@cs.usfca.edu>


On Apr 17, 2011, at 8:56 AM, Jason Doege wrote:
> On a related note, it looks to me that when you have something like:
> 
> kreturn : 'return' ws?;
> 
> that the lexer is automatically created with a lexical element 'return' 
> whereas my initial expectation is that 'return' would only be tested for 
> existence at that particular point in the parsing process. I think 
> limiting the parser to only considering the rule at hand is crucial to 
> obtaining the flexibility implied by a scanner-less parser generator.

That's correct. when you see a reference to kreturn it goes off to parse it. The only tricky part comes in when you need to distinguish between keywords and identifiers.

Ter

From peter at crispu.com  Sun Apr 17 10:25:24 2011
From: peter at crispu.com (Peter Kooiman)
Date: Sun, 17 Apr 2011 12:25:24 -0500 (CDT)
Subject: [antlr-interest] Sample scannerless parser with
	AST	construction in	unmodified ANTLR
In-Reply-To: <E5DAA40F-A324-4A0F-903E-08FB9F2FCB11@cs.usfca.edu>
Message-ID: <23905375.34.1303061119199.JavaMail.pitsie@devleno>

> Still, we could easily do it with a simple {...}? so ANTLR can still do it without formalism, 
> just as PEGs force you to manually say that as well. :)

Are you thinking of a validating semantic predicate after matching the keyword? Not sure if that would work always, could that not give rise to a failed predicate error message when we really just want the parser to use the identifier rule instead? Or are you thinking of a semantic predicate checking look-ahead for keyword followed by not-letter not-digit?

Peter

From parrt at cs.usfca.edu  Sun Apr 17 11:02:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Apr 2011 11:02:08 -0700
Subject: [antlr-interest] Sample scannerless parser with AST
	construction in	unmodified ANTLR
In-Reply-To: <23905375.34.1303061119199.JavaMail.pitsie@devleno>
References: <23905375.34.1303061119199.JavaMail.pitsie@devleno>
Message-ID: <D8F93750-2A37-4611-8B7F-37CE3B5A8217@cs.usfca.edu>

You are correct that it would only work properly when it was backtracking. In fact, I was just thinking about this because I need to make some decisions about v4. Even if you turn on backtracking, there might be trouble. In the following case, the "and not" &! predicate inside kreturn is not needed:

foo	: kreturn semi 
	| id semi
	;
kreturn : 'r' 'e' 't' 'u' 'r' 'n' &!LetterOrDigit ws? ;

ANTLR detects the ambiguity and looks for the semi following id or kreturn. As you point out, though, this rule is a problem without the predicate

stat: kreturn e semi
    | id eq e semi
    | id colon
    ;
kreturn : 'r' 'e' 't' 'u' 'r' 'n' ws? ;

because it accepts "returnme;" (no space in between a keyword and the identifier following). ANTLR's DFA predicts the first alternative for "returnme" because it is the only thing that matches the input.  Because there is no ambiguity, turning on backtracking won't force it to backtrack across kreturn. The grammar clearly states that returnme; is legal. 

We would have to force backtracking if grammar analysis ever detected a & or &! predicate as it was creating the DFA. Actually, now that I think about it, perhaps it's time to consider hoisting predicates at look at depth greater than one. Errm, maybe not. Probably just these lookahead operators. For example,

a : 'a' &'x'
  | 'a' &'y'
  ;

ANTLR could create a DFA that tested lookahead

s0 -a-> s1
s1 -&x-> s2 (predict 1)
s1 -&y-> s2 (predict 2)

If the lookahead test  referred to a recursive rule or something, it would need to go off and test the syntactic predicate. This then causes problems for semantic predicates tested during that syntactic predicate because all of the lookahead indexes would be off. input.LA(1) used in the semantic predicate specified manually would not work anymore because the input would be shifted. grrr....

Maybe the simplest answer is to have a true PEG mode that always backtracks (perhaps with a simple LL(1) lookahead check to avoid always having to backtrack), then you can add in whatever predicates you want. If you want scannerless, maybe using pure PEG is the cost.

Ter

On Apr 17, 2011, at 10:25 AM, Peter Kooiman wrote:

>> Still, we could easily do it with a simple {...}? so ANTLR can still do it without formalism, 
>> just as PEGs force you to manually say that as well. :)
> 
> Are you thinking of a validating semantic predicate after matching the keyword? Not sure if that would work always, could that not give rise to a failed predicate error message when we really just want the parser to use the identifier rule instead? Or are you thinking of a semantic predicate checking look-ahead for keyword followed by not-letter not-digit?
> 
> Peter


From ruslan_zasukhin at valentina-db.com  Sun Apr 17 11:52:09 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 17 Apr 2011 21:52:09 +0300
Subject: [antlr-interest] v2->v3 Skip chars in Lexer. DELIMITED IDENT
 [SOLVED v3] :-)
In-Reply-To: <99a1efa7c2a7e64f570e548fe7f46e07@mail.gmail.com>
Message-ID: <C9D11189.E9C16%ruslan_zasukhin@valentina-db.com>

On 4/17/11 6:32 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

Thanks to your point on
    http://markmail.org/message/izyhuzbooerfw4tu


I was able resolve DELIMITED IDENT rule with (as I am sure now) maximal
effectiveness. Great.

30 min for me have take to correctly find C analogs of macros, and make them
compile. Then next 90 minutes I have search how to force IDENT type of token
instead of DELIMITED.

Now rule works correctly.  All on LEXER level.  All looks effective.

Again, if you like this code, maybe add it to FAQ page for future
developers.


//----------------------------------------------------------------------
Next task is LITERAL :-)
So I will yet send letters here. Please be patience.


//----------------------------------------------------------------------
IDENT
    :    ( LETTER | '_' ) ( LETTER | '_' | DIGIT )*
    ;

DELIMITED        // delimited_identifier
@init
{
    $type = IDENT;
    int theStart = $start;
}
    :
    (    DQUOTE    { theStart = GETCHARINDEX(); }
            ( ~(DQUOTE) | DQUOTE DQUOTE )+
                { $start = theStart; EMIT(); }
        DQUOTE
    
    |    BQUOTE    { theStart = GETCHARINDEX(); }
            ( ~(BQUOTE) | BQUOTE BQUOTE )+
                { $start = theStart; EMIT(); }
        BQUOTE
    
        // valentina/oracle extension: [asasas '' " sd "]
    |    LBRACK    { theStart = GETCHARINDEX(); }
            ( ~(']') )+
                { $start = theStart; EMIT(); }
        RBRACK
    )            
    ;


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From parrt at cs.usfca.edu  Sun Apr 17 16:22:40 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Apr 2011 16:22:40 -0700
Subject: [antlr-interest] thoughts on ANTLR v4's use of interpreters
Message-ID: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>

"These are some of my favorite things: PDA, RTN, ATN, DFA, NFA"

http://bit.ly/fUGLd0

Ter

From michael.bedward at gmail.com  Sun Apr 17 18:01:28 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 18 Apr 2011 11:01:28 +1000
Subject: [antlr-interest] thoughts on ANTLR v4's use of interpreters
In-Reply-To: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
References: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
Message-ID: <BANLkTikwPwRK5O-sR3CcmiWcZfYUtnqDWw@mail.gmail.com>

I really like the idea of being able to skip code generation for
modest tasks. It's reminiscent of the Spirit parser for C++ which I
used a little in a previous life.

Allowing explicit error cases with associated actions in a grammar is
an interesting idea. Would there also be some way of having a default
/ catch-all error case following, or instead of, explicit cases ?

Michael

On 18 April 2011 09:22, Terence Parr <parrt at cs.usfca.edu> wrote:
> "These are some of my favorite things: PDA, RTN, ATN, DFA, NFA"
>
> http://bit.ly/fUGLd0
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Sun Apr 17 20:38:04 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 18 Apr 2011 13:38:04 +1000
Subject: [antlr-interest] How to match a tree without executing the
	actions
In-Reply-To: <BANLkTimRkkDk=rmCSu6yuS7OEjP2_Zzjrg@mail.gmail.com>
References: <BANLkTimRkkDk=rmCSu6yuS7OEjP2_Zzjrg@mail.gmail.com>
Message-ID: <BANLkTik9qLFd91u7EviynGgR6xLRKiqJaA@mail.gmail.com>

Hello,

I'm not sure if I understand what you are trying to do properly, but
using a global scope with a boolean flag would let you control action
execution without the need pass a parameter down the rule chain.

Michael

On 18 April 2011 00:19, Mu Qiao <qiaomuf at gmail.com> wrote:
> Hi,
>
> I have an AST and a subtree that represents for function definition.
> When I implement the tree walker, I don't want to executing the
> actions in the function body when I match a function definition. I
> know I can pass an argument down indicating whether to execute the
> actions or not. Is there any way that doesn't require any modification
> to other rules except the function definition rule?
>
> I tried to skip the whole function body AST but didn't success because
> it's hard for me to find the last node index of the body. If I can
> have that, I guess SEEK(index + 1) could work for me if I'm right.
>
> Could any one please give me a hand?
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From qiaomuf at gmail.com  Sun Apr 17 23:13:31 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Mon, 18 Apr 2011 14:13:31 +0800
Subject: [antlr-interest] How to match a tree without executing the
	actions
In-Reply-To: <BANLkTik9qLFd91u7EviynGgR6xLRKiqJaA@mail.gmail.com>
References: <BANLkTimRkkDk=rmCSu6yuS7OEjP2_Zzjrg@mail.gmail.com>
	<BANLkTik9qLFd91u7EviynGgR6xLRKiqJaA@mail.gmail.com>
Message-ID: <BANLkTimN9OP=0ZUB7cNCOO98wAdJOu-L9A@mail.gmail.com>

Thanks for answering. I think a global scope with a boolean flag can
work, but it still needs to use if statement everywhere to control
action execution. Currently I write a method:
int count_nodes(pANTLR3_BASE_TREE_ADAPTOR adaptor, pANTLR3_BASE_TREE curr)
{
	int child_count = adaptor->getChildCount(adaptor, curr);
	if(child_count == 0)
	{
		// Leaf node
		return 1;
	}
	else
	{
		int result = 0;
		// Count every child
		for(int i = 0; i != child_count; ++i)
			result += count_nodes(adaptor,
(pANTLR3_BASE_TREE)(adaptor->getChild(adaptor, curr, i)));
		// Add itself, DOWN and UP
		return result + 3;
	}
}
This method will count the number of nodes in the function body. Then
I'll call SEEK(INDEX() + count_nodes(ADAPTOR, LT(1)) - 1) to skip the
function body. This works for me and I don't have to modify other
rules. But I'm not sure if this is the best approach.

On Mon, Apr 18, 2011 at 11:38 AM, Michael Bedward
<michael.bedward at gmail.com> wrote:
> Hello,
>
> I'm not sure if I understand what you are trying to do properly, but
> using a global scope with a boolean flag would let you control action
> execution without the need pass a parameter down the rule chain.
>
> Michael
>
> On 18 April 2011 00:19, Mu Qiao <qiaomuf at gmail.com> wrote:
>> Hi,
>>
>> I have an AST and a subtree that represents for function definition.
>> When I implement the tree walker, I don't want to executing the
>> actions in the function body when I match a function definition. I
>> know I can pass an argument down indicating whether to execute the
>> actions or not. Is there any way that doesn't require any modification
>> to other rules except the function definition rule?
>>
>> I tried to skip the whole function body AST but didn't success because
>> it's hard for me to find the last node index of the body. If I can
>> have that, I guess SEEK(index + 1) could work for me if I'm right.
>>
>> Could any one please give me a hand?
>>
>> --
>> Best wishes,
>> Mu Qiao
>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>



-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From michael.bedward at gmail.com  Sun Apr 17 23:27:40 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 18 Apr 2011 16:27:40 +1000
Subject: [antlr-interest] How to match a tree without executing the
	actions
In-Reply-To: <BANLkTimN9OP=0ZUB7cNCOO98wAdJOu-L9A@mail.gmail.com>
References: <BANLkTimRkkDk=rmCSu6yuS7OEjP2_Zzjrg@mail.gmail.com>
	<BANLkTik9qLFd91u7EviynGgR6xLRKiqJaA@mail.gmail.com>
	<BANLkTimN9OP=0ZUB7cNCOO98wAdJOu-L9A@mail.gmail.com>
Message-ID: <BANLkTinsssdDg-sEPxU1noS1ebhMtRBO+g@mail.gmail.com>

Perhaps an easier approach is just to use two separate grammars ?  I
commonly do this: one grammar for validation and a second, with more
or less identical rules but additional actions, for rewriting, code
generation or whatever.

Michael


On 18 April 2011 16:13, Mu Qiao <qiaomuf at gmail.com> wrote:
> Thanks for answering. I think a global scope with a boolean flag can
> work, but it still needs to use if statement everywhere to control
> action execution. Currently I write a method:
> int count_nodes(pANTLR3_BASE_TREE_ADAPTOR adaptor, pANTLR3_BASE_TREE curr)
> {
> ? ? ? ?int child_count = adaptor->getChildCount(adaptor, curr);
> ? ? ? ?if(child_count == 0)
> ? ? ? ?{
> ? ? ? ? ? ? ? ?// Leaf node
> ? ? ? ? ? ? ? ?return 1;
> ? ? ? ?}
> ? ? ? ?else
> ? ? ? ?{
> ? ? ? ? ? ? ? ?int result = 0;
> ? ? ? ? ? ? ? ?// Count every child
> ? ? ? ? ? ? ? ?for(int i = 0; i != child_count; ++i)
> ? ? ? ? ? ? ? ? ? ? ? ?result += count_nodes(adaptor,
> (pANTLR3_BASE_TREE)(adaptor->getChild(adaptor, curr, i)));
> ? ? ? ? ? ? ? ?// Add itself, DOWN and UP
> ? ? ? ? ? ? ? ?return result + 3;
> ? ? ? ?}
> }
> This method will count the number of nodes in the function body. Then
> I'll call SEEK(INDEX() + count_nodes(ADAPTOR, LT(1)) - 1) to skip the
> function body. This works for me and I don't have to modify other
> rules. But I'm not sure if this is the best approach.
>
> On Mon, Apr 18, 2011 at 11:38 AM, Michael Bedward
> <michael.bedward at gmail.com> wrote:
>> Hello,
>>
>> I'm not sure if I understand what you are trying to do properly, but
>> using a global scope with a boolean flag would let you control action
>> execution without the need pass a parameter down the rule chain.
>>
>> Michael
>>
>> On 18 April 2011 00:19, Mu Qiao <qiaomuf at gmail.com> wrote:
>>> Hi,
>>>
>>> I have an AST and a subtree that represents for function definition.
>>> When I implement the tree walker, I don't want to executing the
>>> actions in the function body when I match a function definition. I
>>> know I can pass an argument down indicating whether to execute the
>>> actions or not. Is there any way that doesn't require any modification
>>> to other rules except the function definition rule?
>>>
>>> I tried to skip the whole function body AST but didn't success because
>>> it's hard for me to find the last node index of the body. If I can
>>> have that, I guess SEEK(index + 1) could work for me if I'm right.
>>>
>>> Could any one please give me a hand?
>>>
>>> --
>>> Best wishes,
>>> Mu Qiao
>>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>
>
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>

From 20neophyte08 at gmail.com  Mon Apr 18 04:56:40 2011
From: 20neophyte08 at gmail.com (NeoPhyte)
Date: Mon, 18 Apr 2011 04:56:40 -0700 (PDT)
Subject: [antlr-interest] Disabling error recovery in antlr
Message-ID: <1303127800910-6283357.post@n2.nabble.com>

I need my ANTLR grammar to stop processing the current input(without an
exception), if it encounters an error. Under my current implementation the
grammar, instead of processing the next input(on encountering an error in
the current one) shows exception and stops the processing. 

For example

what I want is -

i/p-first_input(incorrect)
o/p-failed parsing

i/p-second_input(correct)
o/p-parsing succeeds

i/p-third input(incorrect)
o/p-failed parsing

...and so on

Currently what happens is-

i/p-first_input(incorrect)
o/p-failed parsing
exception occurs...stops further processing of inputs

How to achieve this in my grammar.??

--
View this message in context: http://antlr.1301665.n2.nabble.com/Disabling-error-recovery-in-antlr-tp6283357p6283357.html
Sent from the ANTLR mailing list archive at Nabble.com.

From simon at software-architects.at  Mon Apr 18 07:23:18 2011
From: simon at software-architects.at (Simon Opelt)
Date: Mon, 18 Apr 2011 07:23:18 -0700
Subject: [antlr-interest] antlr(cs) for Silverlight
Message-ID: <15C1253C55CEA349B379FCAC9BCC7D370CE6FFADD1@IE2RD2XVS031.red002.local>

Hello,

I am interested in running antlr/stringtemplate on Silverlight. I already had a look/stab at the changes required to do so (I looked at it a few weeks back and am currently looking at all the changes since then).
Looking at the archives I noticed that there seem to be a few other people interested in this issue. Because nobody ever came forward with a solution I would like to offer some help.

Who would I have to talk to in order to figure out a strategy and get things going?

As far as I can tell most of the implementation could stay identical/very close to the current CSharp3 implementation. We would have to decide what should be duplicated/linked/#if(SILVERLIGHT)-ed and how to resolve certain lacks of functionality (e.g. missing SerializationInfo type) in Silverlight.

Kind regards,

Simon

From ruslan_zasukhin at valentina-db.com  Mon Apr 18 10:09:10 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Mon, 18 Apr 2011 20:09:10 +0300
Subject: [antlr-interest] v2->v3 Skip wrapper and inside quotes in LITERAL
 of SQL // C-target [SOLVED v3]
Message-ID: <C9D24AE6.E9CF2%ruslan_zasukhin@valentina-db.com>

Hi Guys,

Below I copy paste my solution for LITERAL of our SQL grammar.

GOOD:

* all on LEXER level.
* uses effective way of GETCHARINDEX() +  EMIT() for most literals.
* only if was found QUOTE QUOTE  (rare case in life) then will be used
complex algorithm.

BAD:

    * I don?t know yet if it needs to free pTmpStr  manually.
    * I don?t know yet if this solution will work for UTF16 input of Lexer.
 
   * I have to use direct access to produced Token object to modify ITS text
copy. 

    * I still think that solution is much more NOT trivial comparing to !
Of ANTLR v2
    * solution is very target-oriented IMO.
         IMO: Ideal is ANTLR own syntax to control lexer?s output

Anybody can give hints for better solution? Before offer ideas, please
carefully check 
STRING_LITERAL rule below:
    **Inside** of STRING_LITERAL should be possible QUOTE QUOTE
    and we should skip one of them.

Example:
     'aa??bb??cc''dd'   =>   aa?bb?cc?dd


//-------------------------------------------------------------
// String literals:

fragment
LETTER               // caseSensitive = false, so we use only small chars.
    :    'a'..'z'
    |   '@'
    ;

fragment
ESCAPE_SEQUENCE                      // Escape for VSQL can be:  \'  \_  \%
    :    '\\' ( QUOTE | '_' | '%' )
    ;

STRING_LITERAL
@init
{
    int dquotes_count = 0;
    int theStart = $start;
}
    :    QUOTE    { theStart = GETCHARINDEX(); }
        (    ESCAPE_SEQUENCE
        |    ~('\'' | '\\')
        |    QUOTE QUOTE            { ++dquotes_count; }
        )* 
                { $start = theStart; EMIT(); }
        QUOTE 
        {
            if( dquotes_count > 0 ) // ONLY if was found ''
            {
                pANTLR3_COMMON_TOKEN pToken = LEXSTATE->token;
            
                pANTLR3_STRING pTmpStr = pToken->getText( pToken );
                char* pStart = (char*) pTmpStr->chars;
            
                while( dquotes_count-- ) // we make string smaller in the
same buffer.
                {
                    char* pFirstQuote = strchr( pStart, '\'' );
                   
                    if( *(pFirstQuote + 1) != '\'' ) // the second quote?
                        continue;
                   
                    // Example: 'aa??bb??cc''dd'   =>   aa?bb?cc?dd
                    int CharsOnLeft   = pFirstQuote - pStart + 1;
                    int CharsToMove = pTmpStr->len - CharsOnLeft;
                   
                    ANTLR3_MEMMOVE( pFirstQuote + 1, pFirstQuote + 2,
CharsToMove );

                    // prepare for possible next loop:
                    pStart = pFirstQuote + 1;
                    pTmpStr->len--;
                }
            
                pToken->setText( pToken, pTmpStr );
            }
        }
    ;



From jimi at temporal-wave.com  Mon Apr 18 10:25:46 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Apr 2011 10:25:46 -0700
Subject: [antlr-interest] v2->v3 Skip wrapper and inside quotes in
 LITERAL of SQL // C-target [SOLVED v3]
In-Reply-To: <C9D24AE6.E9CF2%ruslan_zasukhin@valentina-db.com>
References: <C9D24AE6.E9CF2%ruslan_zasukhin@valentina-db.com>
Message-ID: <696ff1928faccc8172fb882532b9a9ca@mail.gmail.com>

???

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruslan Zasukhin
> Sent: Monday, April 18, 2011 10:09 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] v2->v3 Skip wrapper and inside quotes in
> LITERAL of SQL // C-target [SOLVED v3]
>
> Hi Guys,
>
> Below I copy paste my solution for LITERAL of our SQL grammar.
>
> GOOD:
>
> * all on LEXER level.
> * uses effective way of GETCHARINDEX() +  EMIT() for most literals.
> * only if was found QUOTE QUOTE  (rare case in life) then will be used
> complex algorithm.
>
> BAD:
>
>     * I don?t know yet if it needs to free pTmpStr  manually.
>     * I don?t know yet if this solution will work for UTF16 input of
> Lexer.
>
>    * I have to use direct access to produced Token object to modify ITS
> text copy.
>
>     * I still think that solution is much more NOT trivial comparing to
> !
> Of ANTLR v2
>     * solution is very target-oriented IMO.
>          IMO: Ideal is ANTLR own syntax to control lexer?s output
>
> Anybody can give hints for better solution? Before offer ideas, please
> carefully check STRING_LITERAL rule below:
>     **Inside** of STRING_LITERAL should be possible QUOTE QUOTE
>     and we should skip one of them.
>
> Example:
>      'aa??bb??cc''dd'   =>   aa?bb?cc?dd
>
>
> //-------------------------------------------------------------
> // String literals:
>
> fragment
> LETTER               // caseSensitive = false, so we use only small
> chars.
>     :    'a'..'z'
>     |   '@'
>     ;
>
> fragment
> ESCAPE_SEQUENCE                      // Escape for VSQL can be:  \'  \_
> \%
>     :    '\\' ( QUOTE | '_' | '%' )
>     ;
>
> STRING_LITERAL
> @init
> {
>     int dquotes_count = 0;
>     int theStart = $start;
> }
>     :    QUOTE    { theStart = GETCHARINDEX(); }
>         (    ESCAPE_SEQUENCE
>         |    ~('\'' | '\\')
>         |    QUOTE QUOTE            { ++dquotes_count; }
>         )*
>                 { $start = theStart; EMIT(); }
>         QUOTE
>         {
>             if( dquotes_count > 0 ) // ONLY if was found ''
>             {
>                 pANTLR3_COMMON_TOKEN pToken = LEXSTATE->token;
>
>                 pANTLR3_STRING pTmpStr = pToken->getText( pToken );
>                 char* pStart = (char*) pTmpStr->chars;
>
>                 while( dquotes_count-- ) // we make string smaller in
> the same buffer.
>                 {
>                     char* pFirstQuote = strchr( pStart, '\'' );
>
>                     if( *(pFirstQuote + 1) != '\'' ) // the second
> quote?
>                         continue;
>
>                     // Example: 'aa??bb??cc''dd'   =>   aa?bb?cc?dd
>                     int CharsOnLeft   = pFirstQuote - pStart + 1;
>                     int CharsToMove = pTmpStr->len - CharsOnLeft;
>
>                     ANTLR3_MEMMOVE( pFirstQuote + 1, pFirstQuote + 2,
> CharsToMove );
>
>                     // prepare for possible next loop:
>                     pStart = pFirstQuote + 1;
>                     pTmpStr->len--;
>                 }
>
>                 pToken->setText( pToken, pTmpStr );
>             }
>         }
>     ;
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ruslan_zasukhin at valentina-db.com  Mon Apr 18 11:39:49 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Mon, 18 Apr 2011 21:39:49 +0300
Subject: [antlr-interest] v2->v3 Skip wrapper and inside quotes in
 LITERAL of SQL // description.
In-Reply-To: <696ff1928faccc8172fb882532b9a9ca@mail.gmail.com>
Message-ID: <C9D26025.E9D16%ruslan_zasukhin@valentina-db.com>

On 4/18/11 8:25 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> ???


Okay, let me copy paste here SQL standard   :-)

<character string literal> ::=
    <quote> [ <character representation>... ] <quote>

<character representation> ::=
     <nonquote character> | <quote symbol>

<nonquote character> ::= !! See the Syntax Rules.

<quote symbol> ::= <quote><quote>

so:

SQL standard escape in literal must looks as:
    literal:        'som''e literal'

Common escape with backslash \  (e.g. C++ Java)
    literal:        'som\'e literal'


================================
Problem (for me :-) is how  to skip one of quotes INSIDE of literal,
using ANTLR v3 ...

In ANTLR v2 this was veeeeeery easy:

STRING_LITERAL
    :    QUOTE!                        << WRAPPER quote... Easy enough in v3
        (    ESCAPE_SEQUENCE
        |    ~('\'' | '\\')
        |    QUOTE QUOTE!        << can be inside of LITERAL many times
        )* 
        QUOTE!                       << WRAPPER quote... Easy enough in v3


Just  three '!'  and task was solved in v2...

Yes, you (Jim) have to show effective solution for v3 (C) to remove
WRAPPER-quotes. 

But above rule for LITERAL is more hard. Because it can have quotes INSIDE.
You see problem?


================================
Also I have check few SQL grammars from ANTLR site.
E.g. This is mySQL lexer.

TEXT_STRING:
      ('\'' 
          ( 
                options{greedy=true;}: ~('\'' | '\r' | '\n' ) | '\'' '\''
          )* 
      '\'' )

Here author even do not care about QUOTE QUOTE.

So lexer will send to parser  Token ( 'aaa''bbb''ccc' )
But should sent   Token ( aaa'bbb'ccc )


Or I do smoke wrong staff???  :-)


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From chris at wensel.net  Mon Apr 18 12:25:07 2011
From: chris at wensel.net (Chris K Wensel)
Date: Mon, 18 Apr 2011 12:25:07 -0700
Subject: [antlr-interest] sql 2003 grammars
Message-ID: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>

Hi all

I'm playing around with the new SQL 2003 grammars on the website.

There are notes that the antlr tool needs 1024m for the jvm in the grammar, i've found i need 4 times that much to get the code generation to not die after 40 minutes.

so far the code gen tool has been running for a couple hours using default arguments, and I was wondering if anyone knew if this was out of the ordinary or not. and if not, how long I should expect it to run. 

thanks for any advice!

cheers,
chris

--
Chris K Wensel
chris at wensel.net
http://chris.wensel.net/


From parrt at cs.usfca.edu  Mon Apr 18 12:41:01 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Apr 2011 12:41:01 -0700
Subject: [antlr-interest] sql 2003 grammars
In-Reply-To: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
References: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
Message-ID: <19A52216-A97F-4802-9FEA-B6EA2CEA2E33@cs.usfca.edu>

With 3.3 I find that it terminates in 12s on my box with 220M ram.
Ter
On Apr 18, 2011, at 12:25 PM, Chris K Wensel wrote:

> Hi all
> 
> I'm playing around with the new SQL 2003 grammars on the website.
> 
> There are notes that the antlr tool needs 1024m for the jvm in the grammar, i've found i need 4 times that much to get the code generation to not die after 40 minutes.
> 
> so far the code gen tool has been running for a couple hours using default arguments, and I was wondering if anyone knew if this was out of the ordinary or not. and if not, how long I should expect it to run. 
> 
> thanks for any advice!
> 
> cheers,
> chris
> 
> --
> Chris K Wensel
> chris at wensel.net
> http://chris.wensel.net/
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From chris at wensel.net  Mon Apr 18 13:02:10 2011
From: chris at wensel.net (Chris K Wensel)
Date: Mon, 18 Apr 2011 13:02:10 -0700
Subject: [antlr-interest] sql 2003 grammars
In-Reply-To: <19A52216-A97F-4802-9FEA-B6EA2CEA2E33@cs.usfca.edu>
References: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
	<19A52216-A97F-4802-9FEA-B6EA2CEA2E33@cs.usfca.edu>
Message-ID: <75865E3F-61A9-49B1-860B-45F169DFEAC7@wensel.net>

interesting.

I'm running from ant using libs pulled down with ivy with this classpath:

antlr-3.3.jar:antlr-runtime-3.3.jar:stringtemplate-3.2.1.jar:antlr-2.7.7.jar

without 2.7.7 in the cp, i get a class not found exception.

ckw



On Apr 18, 2011, at 12:41 PM, Terence Parr wrote:

> With 3.3 I find that it terminates in 12s on my box with 220M ram.
> Ter
> On Apr 18, 2011, at 12:25 PM, Chris K Wensel wrote:
> 
>> Hi all
>> 
>> I'm playing around with the new SQL 2003 grammars on the website.
>> 
>> There are notes that the antlr tool needs 1024m for the jvm in the grammar, i've found i need 4 times that much to get the code generation to not die after 40 minutes.
>> 
>> so far the code gen tool has been running for a couple hours using default arguments, and I was wondering if anyone knew if this was out of the ordinary or not. and if not, how long I should expect it to run. 
>> 
>> thanks for any advice!
>> 
>> cheers,
>> chris
>> 
>> --
>> Chris K Wensel
>> chris at wensel.net
>> http://chris.wensel.net/
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

--
Chris K Wensel
chris at concurrentinc.com
http://www.concurrentinc.com

-- Concurrent, Inc. offers mentoring, support for Cascading


From chris at wensel.net  Mon Apr 18 13:04:41 2011
From: chris at wensel.net (Chris K Wensel)
Date: Mon, 18 Apr 2011 13:04:41 -0700
Subject: [antlr-interest] sql 2003 grammars
In-Reply-To: <75865E3F-61A9-49B1-860B-45F169DFEAC7@wensel.net>
References: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
	<19A52216-A97F-4802-9FEA-B6EA2CEA2E33@cs.usfca.edu>
	<75865E3F-61A9-49B1-860B-45F169DFEAC7@wensel.net>
Message-ID: <C640685F-6764-40D0-95A7-3C04577F9B72@wensel.net>


I should add the Lexer grammar returns rapidly, the Parser grammar seems to be the one stuck. when either running them together or separately.

ckw

On Apr 18, 2011, at 1:02 PM, Chris K Wensel wrote:

> interesting.
> 
> I'm running from ant using libs pulled down with ivy with this classpath:
> 
> antlr-3.3.jar:antlr-runtime-3.3.jar:stringtemplate-3.2.1.jar:antlr-2.7.7.jar
> 
> without 2.7.7 in the cp, i get a class not found exception.
> 
> ckw
> 
> 
> 
> On Apr 18, 2011, at 12:41 PM, Terence Parr wrote:
> 
>> With 3.3 I find that it terminates in 12s on my box with 220M ram.
>> Ter
>> On Apr 18, 2011, at 12:25 PM, Chris K Wensel wrote:
>> 
>>> Hi all
>>> 
>>> I'm playing around with the new SQL 2003 grammars on the website.
>>> 
>>> There are notes that the antlr tool needs 1024m for the jvm in the grammar, i've found i need 4 times that much to get the code generation to not die after 40 minutes.
>>> 
>>> so far the code gen tool has been running for a couple hours using default arguments, and I was wondering if anyone knew if this was out of the ordinary or not. and if not, how long I should expect it to run. 
>>> 
>>> thanks for any advice!
>>> 
>>> cheers,
>>> chris
>>> 
>>> --
>>> Chris K Wensel
>>> chris at wensel.net
>>> http://chris.wensel.net/
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> --
> Chris K Wensel
> chris at concurrentinc.com
> http://www.concurrentinc.com
> 
> -- Concurrent, Inc. offers mentoring, support for Cascading
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

--
Chris K Wensel
chris at concurrentinc.com
http://www.concurrentinc.com

-- Concurrent, Inc. offers mentoring, support for Cascading


From slattery.kim at gmail.com  Tue Apr 19 08:30:50 2011
From: slattery.kim at gmail.com (Kim Slattery)
Date: Tue, 19 Apr 2011 10:30:50 -0500
Subject: [antlr-interest] Help with null tree?
In-Reply-To: <BANLkTikGEi46LPTDYrUYcSvC3ZthmzVnYg@mail.gmail.com>
References: <BANLkTikGEi46LPTDYrUYcSvC3ZthmzVnYg@mail.gmail.com>
Message-ID: <BANLkTikCT2=MghNaz5J7Xtm21y29H60QZg@mail.gmail.com>

Hi, all.  I've been working on translating the language our lab has created
(Hop) to Java, and I keep hitting a wall. Has anyone had experience with the
StringTemplate returned by getTemplate() being null?  When I debug, st
inside the tree returned by the tree grammar is null, and I can't figure out
why.  Is this because there's something wrong with the template?  Any
guesses?

I'm referring to code that, from Dr. Parr's books, looks like:

Gen.prog_return r2 = walker.prog(parser.numOps, parser.locals);

Above, the st in the start_return (or prog_return, or what is returned by
the start rule) of r2 is null.  And:

StringTemplate output = (StringTemplate)r2.getTemplate();
System.out.println(output.toString());

Because st is null, the output is obviously null.  My rules all seem to be
syntactically correct.  I don't understand...  Any help, in certain or guess
form, is appreciated.

Kim

From jimi at temporal-wave.com  Tue Apr 19 08:42:52 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Apr 2011 08:42:52 -0700
Subject: [antlr-interest] Help with null tree?
In-Reply-To: <BANLkTikCT2=MghNaz5J7Xtm21y29H60QZg@mail.gmail.com>
References: <BANLkTikGEi46LPTDYrUYcSvC3ZthmzVnYg@mail.gmail.com>
	<BANLkTikCT2=MghNaz5J7Xtm21y29H60QZg@mail.gmail.com>
Message-ID: <f32ef73974c99a0d2ad18e19da8a89a6@mail.gmail.com>

You are probably not passing the templates up from one or more rules. You
have to set the $st that you are returning then combine the templates as
you get higher and higher up the tree until the root node.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kim Slattery
> Sent: Tuesday, April 19, 2011 8:31 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Help with null tree?
>
> Hi, all.  I've been working on translating the language our lab has
> created
> (Hop) to Java, and I keep hitting a wall. Has anyone had experience
> with the StringTemplate returned by getTemplate() being null?  When I
> debug, st inside the tree returned by the tree grammar is null, and I
> can't figure out why.  Is this because there's something wrong with the
> template?  Any guesses?
>
> I'm referring to code that, from Dr. Parr's books, looks like:
>
> Gen.prog_return r2 = walker.prog(parser.numOps, parser.locals);
>
> Above, the st in the start_return (or prog_return, or what is returned
> by the start rule) of r2 is null.  And:
>
> StringTemplate output = (StringTemplate)r2.getTemplate();
> System.out.println(output.toString());
>
> Because st is null, the output is obviously null.  My rules all seem to
> be syntactically correct.  I don't understand...  Any help, in certain
> or guess form, is appreciated.
>
> Kim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From justin.holewinski at gmail.com  Tue Apr 19 09:48:43 2011
From: justin.holewinski at gmail.com (Justin Holewinski)
Date: Tue, 19 Apr 2011 12:48:43 -0400
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
Message-ID: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>

I'm using the C# 3 port of Antlr (target and code generator) and I'm
experiencing a lack of lexer errors being generated.  As a concrete example,
consider the following grammar:

grammar CSTest;

public
compilation_unit
  : IDENTIFIER* EOF
  ;

IDENTIFIER
  : (ID_PART) (ID_PART_OR_NUMBER)*
  ;

fragment
ID_PART
  : ('a'..'z' | 'A'..'Z' | '_')
  ;

fragment
ID_PART_OR_NUMBER
  : ID_PART
  | '0'..'9'
  ;

WS
  :  (' '|'\r'|'\t'|'\n') { /*Skip();*/ $channel=Hidden; }
  ;

The only production in this grammar should allow for an arbitrary sequence
of identifiers, and it does.  However, it also accepts ALL input, including
binary files and anything else I pipe into it.  Is the default in the C#
target to silently ignore any lexing errors?  In my driver program, I am not
seeing any throw exceptions when I call the compilation_unit rule.

using System;
using System.IO;
using Antlr.Runtime;


namespace CSTest {
  public class Program {
    public static void Main(string[] args) {
      string filename;
      filename = args[0];
      if(!Path.IsPathRooted(filename)) {
        filename = Path.Combine(Environment.CurrentDirectory, filename);
      }
      ICharStream input = new ANTLRFileStream(filename);
      CSTestLexer lexer = new CSTestLexer(input);
      CommonTokenStream tokens = new CommonTokenStream(lexer);
      CSTestParser parser = new CSTestParser(tokens);
try {
parser.compilation_unit();
}
catch(RecognitionException re) {
  Console.Out.WriteLine("EXCEPTION");
Console.Out.WriteLine(re.StackTrace);
}

    }

  }

}

-- 

Thanks,

Justin Holewinski

From justin.holewinski at gmail.com  Tue Apr 19 09:49:48 2011
From: justin.holewinski at gmail.com (Justin Holewinski)
Date: Tue, 19 Apr 2011 12:49:48 -0400
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
In-Reply-To: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>
References: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>
Message-ID: <BANLkTim0jbnN=Q9bKfZdhu_dyzSP5j29yA@mail.gmail.com>

I forgot to add that if I instead use the Java target, I get lexer
exceptions thrown on invalid input.

On Tue, Apr 19, 2011 at 12:48 PM, Justin Holewinski <
justin.holewinski at gmail.com> wrote:

> I'm using the C# 3 port of Antlr (target and code generator) and I'm
> experiencing a lack of lexer errors being generated.  As a concrete example,
> consider the following grammar:
>
> grammar CSTest;
>
> public
> compilation_unit
>   : IDENTIFIER* EOF
>   ;
>
> IDENTIFIER
>   : (ID_PART) (ID_PART_OR_NUMBER)*
>   ;
>
> fragment
> ID_PART
>   : ('a'..'z' | 'A'..'Z' | '_')
>   ;
>
> fragment
> ID_PART_OR_NUMBER
>   : ID_PART
>   | '0'..'9'
>   ;
>
> WS
>   :  (' '|'\r'|'\t'|'\n') { /*Skip();*/ $channel=Hidden; }
>   ;
>
> The only production in this grammar should allow for an arbitrary sequence
> of identifiers, and it does.  However, it also accepts ALL input, including
> binary files and anything else I pipe into it.  Is the default in the C#
> target to silently ignore any lexing errors?  In my driver program, I am not
> seeing any throw exceptions when I call the compilation_unit rule.
>
> using System;
> using System.IO;
> using Antlr.Runtime;
>
>
> namespace CSTest {
>   public class Program {
>     public static void Main(string[] args) {
>       string filename;
>       filename = args[0];
>       if(!Path.IsPathRooted(filename)) {
>         filename = Path.Combine(Environment.CurrentDirectory, filename);
>       }
>       ICharStream input = new ANTLRFileStream(filename);
>       CSTestLexer lexer = new CSTestLexer(input);
>       CommonTokenStream tokens = new CommonTokenStream(lexer);
>       CSTestParser parser = new CSTestParser(tokens);
> try {
> parser.compilation_unit();
> }
> catch(RecognitionException re) {
>   Console.Out.WriteLine("EXCEPTION");
> Console.Out.WriteLine(re.StackTrace);
>  }
>
>     }
>
>   }
>
> }
>
> --
>
> Thanks,
>
> Justin Holewinski
>
>


-- 

Thanks,

Justin Holewinski

From xbranko at netscape.net  Tue Apr 19 13:59:59 2011
From: xbranko at netscape.net (xbranko)
Date: Tue, 19 Apr 2011 13:59:59 -0700 (PDT)
Subject: [antlr-interest] defining custom delimiters
Message-ID: <1303246799068-6288666.post@n2.nabble.com>

I've been using stringtemplate (3.2.1) for a while now, and have searched
around the internet to find out if and how one should go about defining
custom delimiters. I use $..$, but have a need for additional delimiter, and
can't really use <>, as the documents are html, i.e. full of < > symbols.

I tried building from source hoping the mvn build would reveal how .g files
are used to generate .java classes, but mvn build is broken (tried using mvn
2.0.9 and 3.0.3).

Any help/pointer/wiki is greatly appreciated!

Thanks,
Branko

--
View this message in context: http://antlr.1301665.n2.nabble.com/defining-custom-delimiters-tp6288666p6288666.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jimi at temporal-wave.com  Tue Apr 19 14:24:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Apr 2011 14:24:11 -0700
Subject: [antlr-interest] defining custom delimiters
In-Reply-To: <1303246799068-6288666.post@n2.nabble.com>
References: <1303246799068-6288666.post@n2.nabble.com>
Message-ID: <3534b303583d6ec6c29d75345b8bb17c@mail.gmail.com>

You need mvn 2.2.1 and look at the different lexers available.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of xbranko
> Sent: Tuesday, April 19, 2011 2:00 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] defining custom delimiters
>
> I've been using stringtemplate (3.2.1) for a while now, and have
> searched around the internet to find out if and how one should go about
> defining custom delimiters. I use $..$, but have a need for additional
> delimiter, and can't really use <>, as the documents are html, i.e.
> full of < > symbols.
>
> I tried building from source hoping the mvn build would reveal how .g
> files are used to generate .java classes, but mvn build is broken
> (tried using mvn
> 2.0.9 and 3.0.3).
>
> Any help/pointer/wiki is greatly appreciated!
>
> Thanks,
> Branko
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/defining-custom-delimiters-
> tp6288666p6288666.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From xbranko at netscape.net  Tue Apr 19 14:40:01 2011
From: xbranko at netscape.net (xbranko)
Date: Tue, 19 Apr 2011 14:40:01 -0700 (PDT)
Subject: [antlr-interest] defining custom delimiters
In-Reply-To: <3534b303583d6ec6c29d75345b8bb17c@mail.gmail.com>
References: <1303246799068-6288666.post@n2.nabble.com>
	<3534b303583d6ec6c29d75345b8bb17c@mail.gmail.com>
Message-ID: <1303249201375-6288769.post@n2.nabble.com>

Thanks for your help, but it mvn 2.2.1 doesn't work form either.

Output:
[INFO] [antlr:generate {execution: default}]
[INFO]
------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO]
------------------------------------------------------------------------
[INFO] Unable to build grammar metadata

Embedded error: Error attempting to access grammars within grammar file
[INFO]
------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Unable to build
grammar metadata
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:719)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
        at
org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at
org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at
org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Unable to build
grammar metadata
        at
org.codehaus.mojo.antlr.metadata.MetadataExtracter.processMetadata(MetadataExtracter.java:165)
        at
org.codehaus.mojo.antlr.AbstractAntlrMojo.executeAntlr(AbstractAntlrMojo.java:205)
        at org.codehaus.mojo.antlr.AntlrPlugin.execute(AntlrPlugin.java:48)
        at
org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
        at
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
        ... 17 more
Caused by: org.apache.maven.plugin.MojoExecutionException: Error attempting
to access grammars within grammar file
        at
org.codehaus.mojo.antlr.metadata.MetadataExtracter.intrepretMetadata(MetadataExtracter.java:211)
        at
org.codehaus.mojo.antlr.metadata.MetadataExtracter.processMetadata(MetadataExtracter.java:160)
        ... 21 more
Caused by: org.apache.maven.plugin.MojoExecutionException: Error accessing 
Antlr grammar metadata
        at
org.codehaus.mojo.antlr.metadata.MetadataExtracter.intrepret(MetadataExtracter.java:274)
        at
org.codehaus.mojo.antlr.metadata.MetadataExtracter.intrepretMetadata(MetadataExtracter.java:206)
        ... 22 more
Caused by: java.lang.NullPointerException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at
org.codehaus.mojo.antlr.metadata.MetadataExtracter.intrepret(MetadataExtracter.java:242)
        ... 23 more

--
View this message in context: http://antlr.1301665.n2.nabble.com/defining-custom-delimiters-tp6288666p6288769.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jonathan at claggett.org  Tue Apr 19 14:59:59 2011
From: jonathan at claggett.org (Jonathan Claggett)
Date: Tue, 19 Apr 2011 17:59:59 -0400
Subject: [antlr-interest] Problem compiling trivial Tree Pattern Matcher
	grammar
Message-ID: <BANLkTik611UW+vzeAwoyGX06c+DJpN=SDQ@mail.gmail.com>

Hello all,

Has anyone successfully used the filter=true option in a tree grammar file?
I'm running into the following pair of Java errors when I try to compile the
generated java:

topdown() in Test cannot override topdown() in
org.antlr.runtime.tree.TreeRewriter; attempting to use incompatible return
type
        found   : Test.topdown_return
        required: java.lang.Object
bottomup() in Test cannot override bottomup() in
org.antlr.runtime.tree.TreeRewriter; attempting to use incompatible return
type
        found   : Test.bottomup_return
        required: java.lang.Object


I'm using Antlr 3.3, my target language is Java (I guess that's obvious) and
my build tool is Maven. Finally, the full tree grammar is:

tree grammar Test;
options {
    ASTLabelType=CommonTree;
    output=AST;
    filter=true;
}
topdown : ;
bottomup: ;


I'm getting the same errors with my real, more complex tree grammar files
too but I'm obviously doing something wrong.

Thanks for the help,
Jonathan

From douglasgodfrey at gmail.com  Tue Apr 19 16:38:00 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 19 Apr 2011 19:38:00 -0400
Subject: [antlr-interest] sql 2003 grammars
In-Reply-To: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
References: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
Message-ID: <BANLkTik+qH=HLn+gwnCNA65yDZipx9V4hg@mail.gmail.com>

You need to specify the heap size separately for both AntlrWorks and for
Antlr [when it is run by AntlrWorks]

specify -Xms128m -Xmx1G on the Java command line for invoking AntlrWorks

specify -Xms128m -Xmx1G in AntlrWorks::Preferences::General::ANTLR_options

see http://www.antlr.org/jira/browse/ST-68

When AntlrWorks runs out of heap it becomes semi non-responsive [the only
thing that works is scrolling and quit].
Many GUI actions misbehave in odd ways. Typing a character can lock-up
AntlrWorks for 5-10 minutes.

On Mac OS X the maximum supported heap size is 1Gigabyte. On Unix/Linux or
Windows x64 it may be larger.

This SQL 2003 grammar has infinite look-ahead [according to Terrence] in
some of the rules relating to SQL expressions.
The grammar will not generate no matter how much memory you have until the
infinite look-ahead is resolved.

On Mon, Apr 18, 2011 at 3:25 PM, Chris K Wensel <chris at wensel.net> wrote:

> Hi all
>
> I'm playing around with the new SQL 2003 grammars on the website.
>
> There are notes that the antlr tool needs 1024m for the jvm in the grammar,
> i've found i need 4 times that much to get the code generation to not die
> after 40 minutes.
>
> so far the code gen tool has been running for a couple hours using default
> arguments, and I was wondering if anyone knew if this was out of the
> ordinary or not. and if not, how long I should expect it to run.
>
> thanks for any advice!
>
> cheers,
> chris
>
> --
> Chris K Wensel
> chris at wensel.net
> http://chris.wensel.net/
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From passionist_81 at yahoo.co.uk  Tue Apr 19 16:49:56 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Wed, 20 Apr 2011 00:49:56 +0100 (BST)
Subject: [antlr-interest] (no subject)
Message-ID: <565162.30232.qm@web24809.mail.ird.yahoo.com>

Are you results oriented?
http://users5.nofeehost.com/fohynyfox/zuvivyze.html

OurLo veFl owsB ackOutI ntoA llEt ernity . Dread any time we're apart.

From p4rst2 at gmail.com  Tue Apr 19 22:45:10 2011
From: p4rst2 at gmail.com (preitz sharma)
Date: Wed, 20 Apr 2011 11:15:10 +0530
Subject: [antlr-interest] Problem with String parsing
Message-ID: <BANLkTi=TuxvABU++sDE6CGbOTR=y4zceTA@mail.gmail.com>

Hi,
I am facing problem in parsing String value.
Here is my grammar:

grammar stringProblem;


expr           :  SET attribute EOF;

attribute      :  ARRAY (SIZE)? Int
                    |  OUT(PUTSTR)? str
                    ;

str               :  (CHAR | DOT  | Int)+ ;

Int                :  '0'..'9'+;

SET            :  'set';

ARRAY       :  'array';

SIZE            :  's'('i'('z'('e')?)?)?;

OUT             :  'out';

PUTSTR      :  'p'('u'('t'('s'('t'('r')?)?)?)?)?;

fragment CHAR    :  ('a'..'z');

Space          :  (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};

DOT           :  ('\U0000' .. '\UFFFF');



And the class to test it is:


import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;

public class Demo {

    public static void main(String[] args) throws RecognitionException {
        try {
            ANTLRStringStream in = new ANTLRStringStream("set outp 100z");
            stringProblemLexer lexer = new stringProblemLexer(in);
            CommonTokenStream tokens = new CommonTokenStream(lexer);
            stringProblemParser parser = new stringProblemParser(tokens);
            parser.expr();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
}

When I give the input sting as : "set outputstr 123zx3%", it is working
fine.
But when I am giving some input which matches any of the token, like "set
output 123arr5", then I am getting error like: "line 1:17 mismatched
character '5' expecting 'a'"

This is happening because other lexer rules like SET, ARRAY etc are
specified before CHAR. Hence it is giving more priority to them rather than
CHAR.
So whenever some character comes, it first tries to match to the tokens with
higher priority. But this should not be the expected behavior.

Please help me out. What should I do to make it work?

-- 
Regards
Preeti Sharma

From ruslan_zasukhin at valentina-db.com  Wed Apr 20 02:41:34 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 20 Apr 2011 12:41:34 +0300
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
 and PARSER objects on C target?
In-Reply-To: <8306db212753a248a2bbc32d80796e88@temporal-wave.com>
Message-ID: <C9D484FE.E9EE5%ruslan_zasukhin@valentina-db.com>

On 12/11/09 6:17 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

And I hope this is already fixed during last 1.5 year?   :-)

I bet that re-create lexer/parser objects is much slower.
In v2 we have very fast drop this idea.
And v2 ANTLR was able easy enough reuse  lexer/parser and treeparser.


> Ok - that is probably a bug. I guess nobody tried to do that before ;-). For
> now, you will have to recreate the parser each time until I can fix it.
> 
> Jim
> 
> From: Ronghui Yu [mailto:stoneyrh at gmail.com]
> Sent: Friday, December 11, 2009 5:01 AM
> To: Jim Idle
> Cc: antlr-interest
> Subject: Re: [antlr-interest] Is there a safe and easy way to reuse LEXER and
> PARSER objects on C target?
> 
> Here is my pseudo code:
> 
> pLexer->pLexer->rec->reset(pLexer->pLexer->rec);
> pInputStream->data = (pANTLR3_UINT8)GetText().c_str();
> pInputStream->sizeBuf = (ANTLR3_UINT32)GetText().length();
> pInputStream->reset(pInputStream);
> pLexer->pLexer->setCharStream(pLexer->pLexer,pInputStream);
> pTokenStream->free(pTokenStream);
> pTokenStream = antlr3CommonTokenStreamSourceNew(TOKEN_SIZE_HINT,
> TOKENSOURCE(pLexer));
> pTokenStream->discardOffChannelToks(pTokenStream,ANTLR3_FALSE);
> pParser->pParser->setTokenStream(pParser->pParser,pTokenStream->tstream);
> 
> 
> It works most of the time, but occasionally violation access occurs. It
> doesn't work if applied to a grammar file importing another grammar. For
> example, I have a a keywords.g file is imported to the main grammar. When
> setting the token stream on the main grammar, the token string of embedded
> parser does not get updated automatically.
> 
> On Fri, Dec 11, 2009 at 1:11 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> To be honest, I would think you can hardly measure the time taken to create
> them, but you have to call the reset() methods and set the character stream
> and the token stream. There were issues with that at one point but I think I
> have fixed them all now. You can see how to reuse the lexer by looking at the
> examples in the examples download. Specifically the Java parser example will
> help here.
> 
> Jim
> 
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ronghui Yu
> Sent: Thursday, December 10, 2009 8:21 AM
> To: antlr-interest
> Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER and
> PARSER objects on C target?
> 
> Hi, All,
> 
> On my project, I have a parser for parsing different statements again and
> again. In order to save a little time on initialization, I would like to reuse
> the LEXER and PARSER objects created the first time, something like this:
> 
> if (bInitialized)
> {
>     reinitialize();
> }
> else
> {
>    initialize();
>    bInitialized = true;
> }
> 
> The problem now is how to write reinitialize() safely. I have no idea on which
> fields of LEXER or PARSER objects must be reset to which status. Then my
> current code works most of the time, but it encounters NULL pointer
> occasionally(I am sure the grammar file is good because if I don't reuse the
> LEXER and PARSER objects, everything goes fine).
> 
> Anybody could give me some ideas?
> 
> Thanks in advance.
> 
> --
> ===========================
> Regards
> Ronghui Yu
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> --
> ===========================
> Regards
> Ronghui Yu
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From cummings at kjchome.homeip.net  Wed Apr 20 05:28:25 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 20 Apr 2011 08:28:25 -0400
Subject: [antlr-interest] Problem with String parsing
In-Reply-To: <BANLkTi=TuxvABU++sDE6CGbOTR=y4zceTA@mail.gmail.com>
References: <BANLkTi=TuxvABU++sDE6CGbOTR=y4zceTA@mail.gmail.com>
Message-ID: <4DAED169.4010402@kjchome.homeip.net>

On 04/20/2011 01:45 AM, preitz sharma wrote:
> Hi,
> I am facing problem in parsing String value.
> Here is my grammar:
> 
> grammar stringProblem;
> 
> 
> expr           :  SET attribute EOF;
> 
> attribute      :  ARRAY (SIZE)? Int
>                     |  OUT(PUTSTR)? str
>                     ;
> 
> str               :  (CHAR | DOT  | Int)+ ;

CHAR is a fragment.  You can't use fragments as a TOKEN (unless you
explicitly set then as a token type in some LEXER action)....  Notice
that both DOT and Int are not fragments below.

> 
> Int                :  '0'..'9'+;
> 
> SET            :  'set';
> 
> ARRAY       :  'array';
> 
> SIZE            :  's'('i'('z'('e')?)?)?;
> 
> OUT             :  'out';
> 
> PUTSTR      :  'p'('u'('t'('s'('t'('r')?)?)?)?)?;
> 
> fragment CHAR    :  ('a'..'z');
> 
> Space          :  (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
> 
> DOT           :  ('\U0000' .. '\UFFFF');
> 
> 
> 
> And the class to test it is:
> 
> 
> import org.antlr.runtime.ANTLRStringStream;
> import org.antlr.runtime.CommonTokenStream;
> import org.antlr.runtime.RecognitionException;
> 
> public class Demo {
> 
>     public static void main(String[] args) throws RecognitionException {
>         try {
>             ANTLRStringStream in = new ANTLRStringStream("set outp 100z");
>             stringProblemLexer lexer = new stringProblemLexer(in);
>             CommonTokenStream tokens = new CommonTokenStream(lexer);
>             stringProblemParser parser = new stringProblemParser(tokens);
>             parser.expr();
>         } catch (Exception e) {
>             System.out.println(e.getMessage());
>         }
>     }
> }
> 
> When I give the input sting as : "set outputstr 123zx3%", it is working
> fine.
> But when I am giving some input which matches any of the token, like "set
> output 123arr5", then I am getting error like: "line 1:17 mismatched
> character '5' expecting 'a'"
> 
> This is happening because other lexer rules like SET, ARRAY etc are
> specified before CHAR. Hence it is giving more priority to them rather than
> CHAR.
> So whenever some character comes, it first tries to match to the tokens with
> higher priority. But this should not be the expected behavior.
> 
> Please help me out. What should I do to make it work?
> 


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From sanchay.h at gmail.com  Wed Apr 20 05:47:42 2011
From: sanchay.h at gmail.com (Sanchay Harneja)
Date: Wed, 20 Apr 2011 18:17:42 +0530
Subject: [antlr-interest] How to communicate between rules in a tree grammar
Message-ID: <BANLkTikRad59M1yE=yOaFdkj68doW9cptQ@mail.gmail.com>

Hi,

I am new to ANTLR, using it to create a DSL. So far I've been able to write
a parser grammar, a tree grammar & string template file. Its all working as
I expect.

But I have a niggling feeling that I may not be using the tree grammar & stg
in an idiomatic manner. I'll ask my question using an example, suppose the
tree grammar has rules a, b, c:

options {
    ...
    output=template;
}

a :
    // ...
    -> template( .. )

b : returns [ int x, int y ]
    // only return no string template

c : b (as+=a)+
    -> c(x={$b.x}, y={$b.y}, as={$as})

This works fine, but is it an "correct" way? In the generated code the type
of $b is b_return while the type of $as is List(containing StringTemplate
objects).

Now suppose I have a rule like:

d : a (bs+=b)+
     -> d(a={$a}, bs={$bs})

This doesn't work, as the type of $bs is List containing StringTemplate
objects, but not b_return objects. Since I haven't defined a StringTemplate
for b, this doesn't work.

Maybe this is the right thing to do, i.e., in rule c type of $b is b_return,
whereas in rule d type of $bs is List(containing StringTemplates as opposed
to b_returns).  But then how I communicate the structure of b (i.e. x, y) to
d ? One way is maintaining a global memory for this. Is there any other way?
How would you guys tackle this issue.

Thanks!
Sanchay

From jimi at temporal-wave.com  Wed Apr 20 07:17:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Apr 2011 07:17:32 -0700
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
 and PARSER objects on C target?
In-Reply-To: <C9D484FE.E9EE5%ruslan_zasukhin@valentina-db.com>
References: <8306db212753a248a2bbc32d80796e88@temporal-wave.com>
	<C9D484FE.E9EE5%ruslan_zasukhin@valentina-db.com>
Message-ID: <16e6cea9a0a5544517ec427e0a85a717@mail.gmail.com>

This is available as the reuse() method on the input stream, lexer, and
parser. If used then the lexer will also reuse the tokens from the last
run and avoid any malloc.

However, you will need to use the snapshot in perforce to get that. Or
just wait a few weeks for the next release.

jim

> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Wednesday, April 20, 2011 2:42 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is there a safe and easy way to reuse
> LEXER and PARSER objects on C target?
>
> On 12/11/09 6:17 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>
> And I hope this is already fixed during last 1.5 year?   :-)
>
> I bet that re-create lexer/parser objects is much slower.
> In v2 we have very fast drop this idea.
> And v2 ANTLR was able easy enough reuse  lexer/parser and treeparser.
>
>
> > Ok - that is probably a bug. I guess nobody tried to do that before
> > ;-). For now, you will have to recreate the parser each time until I
> can fix it.
> >
> > Jim
> >
> > From: Ronghui Yu [mailto:stoneyrh at gmail.com]
> > Sent: Friday, December 11, 2009 5:01 AM
> > To: Jim Idle
> > Cc: antlr-interest
> > Subject: Re: [antlr-interest] Is there a safe and easy way to reuse
> > LEXER and PARSER objects on C target?
> >
> > Here is my pseudo code:
> >
> > pLexer->pLexer->rec->reset(pLexer->pLexer->rec);
> > pInputStream->data = (pANTLR3_UINT8)GetText().c_str(); sizeBuf =
> > pInputStream->(ANTLR3_UINT32)GetText().length();
> > pInputStream->reset(pInputStream);
> > pLexer->pLexer->setCharStream(pLexer->pLexer,pInputStream);
> > pTokenStream->free(pTokenStream);
> > pTokenStream = antlr3CommonTokenStreamSourceNew(TOKEN_SIZE_HINT,
> > TOKENSOURCE(pLexer));
> > pTokenStream->discardOffChannelToks(pTokenStream,ANTLR3_FALSE);
> > pParser->pParser->setTokenStream(pParser->pParser,pTokenStream-
> >tstrea
> > pParser->pParser->m);
> >
> >
> > It works most of the time, but occasionally violation access occurs.
> > It doesn't work if applied to a grammar file importing another
> > grammar. For example, I have a a keywords.g file is imported to the
> > main grammar. When setting the token stream on the main grammar, the
> > token string of embedded parser does not get updated automatically.
> >
> > On Fri, Dec 11, 2009 at 1:11 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> > To be honest, I would think you can hardly measure the time taken to
> > create them, but you have to call the reset() methods and set the
> > character stream and the token stream. There were issues with that at
> > one point but I think I have fixed them all now. You can see how to
> > reuse the lexer by looking at the examples in the examples download.
> > Specifically the Java parser example will help here.
> >
> > Jim
> >
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ronghui Yu
> > Sent: Thursday, December 10, 2009 8:21 AM
> > To: antlr-interest
> > Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
> > and PARSER objects on C target?
> >
> > Hi, All,
> >
> > On my project, I have a parser for parsing different statements again
> > and again. In order to save a little time on initialization, I would
> > like to reuse the LEXER and PARSER objects created the first time,
> something like this:
> >
> > if (bInitialized)
> > {
> >     reinitialize();
> > }
> > else
> > {
> >    initialize();
> >    bInitialized = true;
> > }
> >
> > The problem now is how to write reinitialize() safely. I have no idea
> > on which fields of LEXER or PARSER objects must be reset to which
> > status. Then my current code works most of the time, but it
> encounters
> > NULL pointer occasionally(I am sure the grammar file is good because
> > if I don't reuse the LEXER and PARSER objects, everything goes fine).
> >
> > Anybody could give me some ideas?
> >
> > Thanks in advance.
> >
> > --
> > ===========================
> > Regards
> > Ronghui Yu
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> >
> > --
> > ===========================
> > Regards
> > Ronghui Yu
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From jimi at temporal-wave.com  Wed Apr 20 07:22:31 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Apr 2011 07:22:31 -0700
Subject: [antlr-interest] How to communicate between rules in a tree
	grammar
In-Reply-To: <BANLkTikRad59M1yE=yOaFdkj68doW9cptQ@mail.gmail.com>
References: <BANLkTikRad59M1yE=yOaFdkj68doW9cptQ@mail.gmail.com>
Message-ID: <f3ed816705022f41fb4e1415d21f651c@mail.gmail.com>

Though you specify x and y as return, there is also still a $st. You can
either build the $dst in the b rule or use the results of the b rule in a
caller to build a template, but b won't build you anything by default
because you changed the return pattern. So use the bs return, create a
template using x and u, add that template to a list of template, pass that
list to the template constructor and not the raw $bs.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sanchay Harneja
> Sent: Wednesday, April 20, 2011 5:48 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to communicate between rules in a tree
> grammar
>
> Hi,
>
> I am new to ANTLR, using it to create a DSL. So far I've been able to
> write a parser grammar, a tree grammar & string template file. Its all
> working as I expect.
>
> But I have a niggling feeling that I may not be using the tree grammar
> & stg in an idiomatic manner. I'll ask my question using an example,
> suppose the tree grammar has rules a, b, c:
>
> options {
>     ...
>     output=template;
> }
>
> a :
>     // ...
>     -> template( .. )
>
> b : returns [ int x, int y ]
>     // only return no string template
>
> c : b (as+=a)+
>     -> c(x={$b.x}, y={$b.y}, as={$as})
>
> This works fine, but is it an "correct" way? In the generated code the
> type of $b is b_return while the type of $as is List(containing
> StringTemplate objects).
>
> Now suppose I have a rule like:
>
> d : a (bs+=b)+
>      -> d(a={$a}, bs={$bs})
>
> This doesn't work, as the type of $bs is List containing StringTemplate
> objects, but not b_return objects. Since I haven't defined a
> StringTemplate for b, this doesn't work.
>
> Maybe this is the right thing to do, i.e., in rule c type of $b is
> b_return, whereas in rule d type of $bs is List(containing
> StringTemplates as opposed to b_returns).  But then how I communicate
> the structure of b (i.e. x, y) to d ? One way is maintaining a global
> memory for this. Is there any other way?
> How would you guys tackle this issue.
>
> Thanks!
> Sanchay
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From rusinskystanislas at yahoo.fr  Wed Apr 20 12:43:44 2011
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Wed, 20 Apr 2011 20:43:44 +0100 (BST)
Subject: [antlr-interest] Re :  thoughts on ANTLR v4's use of interpreters
In-Reply-To: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
References: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
Message-ID: <962653.13397.qm@web26503.mail.ukl.yahoo.com>

This one made my day :)

How easy will it be to hook external code or reference a position in the 
PDA/DFA/NFA to observe passage and generate intellisense like functionality? 

Stan


----- Message d'origine ----
De : Terence Parr <parrt at cs.usfca.edu>
? : antlr-interest Interest <antlr-interest at antlr.org>
Envoy? le : Lun 18 avril 2011, 1h 22min 40s
Objet : [antlr-interest] thoughts on ANTLR v4's use of interpreters

"These are some of my favorite things: PDA, RTN, ATN, DFA, NFA"

http://bit.ly/fUGLd0

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Apr 20 13:23:33 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Apr 2011 13:23:33 -0700
Subject: [antlr-interest] Re : thoughts on ANTLR v4's use of interpreters
In-Reply-To: <962653.13397.qm@web26503.mail.ukl.yahoo.com>
References: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
	<962653.13397.qm@web26503.mail.ukl.yahoo.com>
Message-ID: <FC674876-E5FF-4DC2-93B6-FBDBDA978949@cs.usfca.edu>


On Apr 20, 2011, at 12:43 PM, Stanislas Rusinsky wrote:

> This one made my day :)
> 
> How easy will it be to hook external code or reference a position in the 
> PDA/DFA/NFA to observe passage and generate intellisense like functionality? 

That's a good question. I think it will be easy. I will have a pointer to an augmented transition network and memory with functions to return the next set of tokens etc.  Or, you can simply walk the graph to figure out what you would like to do yourself :)

I have tested, just yesterday, and interpreted lexer and parser for simple HTML. works really well, including calling out to some actions :) I'm having some evil thoughts about parsing at the moment. more later when I have time to formalize and try things out.

All indications are that this approach will yield lots of interesting things. You can expect such a beast to be in v4.

Ter

From rusinskystanislas at yahoo.fr  Wed Apr 20 14:03:57 2011
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Wed, 20 Apr 2011 22:03:57 +0100 (BST)
Subject: [antlr-interest] Re : Re : thoughts on ANTLR v4's use of
	interpreters
In-Reply-To: <FC674876-E5FF-4DC2-93B6-FBDBDA978949@cs.usfca.edu>
References: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
	<962653.13397.qm@web26503.mail.ukl.yahoo.com>
	<FC674876-E5FF-4DC2-93B6-FBDBDA978949@cs.usfca.edu>
Message-ID: <727575.72956.qm@web26502.mail.ukl.yahoo.com>

Indeed you can always take a few minutes to walk the graph, but there is always 
the option to spend weeks or even months to make that step automate-able :)

Will v4 interpreter-interpreter also generate a parse tree?


----- Message d'origine ----
De : Terence Parr <parrt at cs.usfca.edu>
? : antlr-interest Interest <antlr-interest at antlr.org>
Envoy? le : Mer 20 avril 2011, 22h 23min 33s
Objet : Re: [antlr-interest] Re : thoughts on ANTLR v4's use of interpreters


On Apr 20, 2011, at 12:43 PM, Stanislas Rusinsky wrote:

> This one made my day :)
> 
> How easy will it be to hook external code or reference a position in the 
> PDA/DFA/NFA to observe passage and generate intellisense like functionality? 

That's a good question. I think it will be easy. I will have a pointer to an 
augmented transition network and memory with functions to return the next set of 
tokens etc.  Or, you can simply walk the graph to figure out what you would like 
to do yourself :)

I have tested, just yesterday, and interpreted lexer and parser for simple HTML. 
works really well, including calling out to some actions :) I'm having some evil 
thoughts about parsing at the moment. more later when I have time to formalize 
and try things out.

All indications are that this approach will yield lots of interesting things. 
You can expect such a beast to be in v4.

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ruslan_zasukhin at valentina-db.com  Wed Apr 20 21:35:40 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Thu, 21 Apr 2011 07:35:40 +0300
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
 and PARSER objects on C target?
In-Reply-To: <16e6cea9a0a5544517ec427e0a85a717@mail.gmail.com>
Message-ID: <C9D58ECC.E9FB3%ruslan_zasukhin@valentina-db.com>

On 4/20/11 5:17 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> This is available as the reuse() method on the input stream, lexer, and
> parser. 

And tree parser?

> If used then the lexer will also reuse the tokens from the last
> run and avoid any malloc.
> 
> However, you will need to use the snapshot in perforce to get that.
> Or just wait a few weeks for the next release.

I see, thank you Jim.


One more question. After read book and C-target docs,
I did not see section, which describe how works c-target with memory.

In my memory seat words, that C-target have own mempool,
which allow you destroy all objects (tokens, ast) at once.

Reuse()  will destroy not needed objects?


Btw, this is great to have own mempool.
I believe in v2 I have see that tons of destructor calls for each item...
Profiles did show 5-10% for destructors...


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From hrennau at yahoo.de  Thu Apr 21 01:55:06 2011
From: hrennau at yahoo.de (Hans-Juergen Rennau)
Date: Thu, 21 Apr 2011 09:55:06 +0100 (BST)
Subject: [antlr-interest] EBNF - XML representations
Message-ID: <52191.59812.qm@web27104.mail.ukl.yahoo.com>

Hello People,

is there a translator which transforms an EBNF document into an XML 
representation? And... is there a standardized XML representation of EBNF 
grammers?

The reason for my question: such a representation might enable to write tools 
creating "grammer reports" with little effort and high precision, e.g. using 
XSLT 2.0 or XQuery. (Example for such reporting: "show for each rule the rules 
directly or indirectly referencing this rule".) And it might be a very 
appropriate source for generating configurable "standard" transformations into 
ANTLR grammers, or so I think at least.

Kind regards from
-- Hans-Juergen


From eugeny.yakimovitch at gmail.com  Thu Apr 21 02:22:02 2011
From: eugeny.yakimovitch at gmail.com (Yauhen Yakimovich)
Date: Thu, 21 Apr 2011 11:22:02 +0200
Subject: [antlr-interest] EBNF - XML representations
In-Reply-To: <52191.59812.qm@web27104.mail.ukl.yahoo.com>
References: <52191.59812.qm@web27104.mail.ukl.yahoo.com>
Message-ID: <BANLkTi=nrjP0=6y0_64LgNoDeNr_-Wo=nQ@mail.gmail.com>

Hi,

I had a similar thought myself that this could be very handy while
jumping into the markup realm.

XML itself is described using an adaptation of EBNF. There is also a
respective ISO standard for EBNF.
But I am unaware of any XML (markup) representation of ENBF syntax. I
believe it is not so complicated to produce a XSD for this and s.o.

I wonder if there is any primary task you are urgent to solve with
this besides satisfying own transformation joy?


On Thu, Apr 21, 2011 at 10:55 AM, Hans-Juergen Rennau <hrennau at yahoo.de> wrote:
> Hello People,
>
> is there a translator which transforms an EBNF document into an XML
> representation? And... is there a standardized XML representation of EBNF
> grammers?
>
> The reason for my question: such a representation might enable to write tools
> creating "grammer reports" with little effort and high precision, e.g. using
> XSLT 2.0 or XQuery. (Example for such reporting: "show for each rule the rules
> directly or indirectly referencing this rule".) And it might be a very
> appropriate source for generating configurable "standard" transformations into
> ANTLR grammers, or so I think at least.
>
> Kind regards from
> -- Hans-Juergen
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
With best regards,
Y.Y.

From ben at autonomic.net  Thu Apr 21 02:26:50 2011
From: ben at autonomic.net (Ben Senior)
Date: Thu, 21 Apr 2011 11:26:50 +0200
Subject: [antlr-interest] Am I right here? :-) Generating GUIs from a Grammar
Message-ID: <4DAFF85A.9050808@autonomic.net>

Hello, I really hope that some kind person can point me in the right 
direction, or warn me off my plans....

Is ANTLR/ANTLRWorks appropriate for automatically generating a GUI for 
sentence construction based on an arbitrary grammar?

I'm sick of generating "admin" GUI's by hand for new projects.  
Generating GUI's from models (like in Ruby on Rails) is ok, but not 
cross-platform or particularly powerful.

Recently, I had one of those "epiphanies" where it became clear that I 
can model most problems *much* more clearly using a Grammar.

The next logical step would be to help users visually construct valid 
sentences from the definition of that Grammar - but the tool that helps 
them do that should be generated as automatically as possible from the 
given grammar.

The basic outline would be to offer the user an empty tree starting with 
the root node.  It would be obvious from each node in the tree, which 
nodes the user can then "instanciate".  Each instantiated node then 
displays which further nodes/rules can be instanced, and when a rule is 
found for which (in another file) I have specified a "configuration 
class" the user can then set the various knobs and dials I provide in 
that configuration class (e.g. values, lists, and other primitives which 
become terminals).

Although I've been programming for decades, I've only really just 
started playing with LEX/YACC/ANTLR in the last few days - and been 
bitterly regretting that I haven't been using them for years!

Has this already been done?  Is it doable?  Am I pursuing the right path 
with ANTLR?  I prostrate myself before your superior collective wisdom! :-)

Tx Ben

From justin.holewinski at gmail.com  Thu Apr 21 09:50:51 2011
From: justin.holewinski at gmail.com (Justin Holewinski)
Date: Thu, 21 Apr 2011 12:50:51 -0400
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
In-Reply-To: <BANLkTim0jbnN=Q9bKfZdhu_dyzSP5j29yA@mail.gmail.com>
References: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>
	<BANLkTim0jbnN=Q9bKfZdhu_dyzSP5j29yA@mail.gmail.com>
Message-ID: <BANLkTi=wxSPnM_rYDk6X_kLnWH2cK1X_VQ@mail.gmail.com>

Just a quick follow-up:  an easy re-production is to use the Antlr-provided
examples-v3 archive.  In the csharp/LL-star directory, change the SimpleC.g
file to use the CSharp3 target instead of CSharp2, add "System." to the
WriteLine methods, and use either the Antlr jar archive or the C# tool to
generate the grammar files.  Upon testing, the provided "input" file works
as expected, but again, any other file is also parsed *without errors*.

Test run:

Good:
jholewinski at rapture [LL-star]$ mono Test.exe input
Processing file: /Volumes/Data/personal/examples-v3/csharp/LL-star/input
bar is a declaration
foo is a definition
Finished processing file:
/Volumes/Data/personal/examples-v3/csharp/LL-star/input

Bad:
jholewinski at rapture [LL-star]$ mono Test.exe output
Processing file: /Volumes/Data/personal/examples-v3/csharp/LL-star/output
Finished processing file:
/Volumes/Data/personal/examples-v3/csharp/LL-star/output
jholewinski at rapture [LL-star]$ mono Test.exe files
Processing file: /Volumes/Data/personal/examples-v3/csharp/LL-star/files
Finished processing file:
/Volumes/Data/personal/examples-v3/csharp/LL-star/files
jholewinski at rapture [LL-star]$ mono Test.exe Main.cs
Processing file: /Volumes/Data/personal/examples-v3/csharp/LL-star/Main.cs
Main is a definition
Finished processing file:
/Volumes/Data/personal/examples-v3/csharp/LL-star/Main.cs
jholewinski at rapture [LL-star]$

On Tue, Apr 19, 2011 at 12:49 PM, Justin Holewinski <
justin.holewinski at gmail.com> wrote:

> I forgot to add that if I instead use the Java target, I get lexer
> exceptions thrown on invalid input.
>
>
> On Tue, Apr 19, 2011 at 12:48 PM, Justin Holewinski <
> justin.holewinski at gmail.com> wrote:
>
>> I'm using the C# 3 port of Antlr (target and code generator) and I'm
>> experiencing a lack of lexer errors being generated.  As a concrete example,
>> consider the following grammar:
>>
>> grammar CSTest;
>>
>> public
>> compilation_unit
>>   : IDENTIFIER* EOF
>>   ;
>>
>> IDENTIFIER
>>   : (ID_PART) (ID_PART_OR_NUMBER)*
>>   ;
>>
>> fragment
>> ID_PART
>>   : ('a'..'z' | 'A'..'Z' | '_')
>>   ;
>>
>> fragment
>> ID_PART_OR_NUMBER
>>   : ID_PART
>>   | '0'..'9'
>>   ;
>>
>> WS
>>   :  (' '|'\r'|'\t'|'\n') { /*Skip();*/ $channel=Hidden; }
>>   ;
>>
>> The only production in this grammar should allow for an arbitrary sequence
>> of identifiers, and it does.  However, it also accepts ALL input, including
>> binary files and anything else I pipe into it.  Is the default in the C#
>> target to silently ignore any lexing errors?  In my driver program, I am not
>> seeing any throw exceptions when I call the compilation_unit rule.
>>
>> using System;
>> using System.IO;
>> using Antlr.Runtime;
>>
>>
>> namespace CSTest {
>>   public class Program {
>>     public static void Main(string[] args) {
>>       string filename;
>>       filename = args[0];
>>       if(!Path.IsPathRooted(filename)) {
>>         filename = Path.Combine(Environment.CurrentDirectory, filename);
>>       }
>>       ICharStream input = new ANTLRFileStream(filename);
>>       CSTestLexer lexer = new CSTestLexer(input);
>>       CommonTokenStream tokens = new CommonTokenStream(lexer);
>>       CSTestParser parser = new CSTestParser(tokens);
>> try {
>> parser.compilation_unit();
>> }
>> catch(RecognitionException re) {
>>   Console.Out.WriteLine("EXCEPTION");
>> Console.Out.WriteLine(re.StackTrace);
>>  }
>>
>>     }
>>
>>   }
>>
>> }
>>
>> --
>>
>> Thanks,
>>
>> Justin Holewinski
>>
>>
>
>
> --
>
> Thanks,
>
> Justin Holewinski
>
>


-- 

Thanks,

Justin Holewinski

From sharwell at pixelminegames.com  Thu Apr 21 10:06:52 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 21 Apr 2011 12:06:52 -0500
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
In-Reply-To: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>
References: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>
Message-ID: <00b801cc0046$830ab710$89202530$@pixelminegames.com>

Hi Justin,

The exception does get thrown, but is handled in Lexer.NextToken() by
tossing out a character and continuing. There are many ways to deal with
this situation ranging from overriding NextToken in your lexer to creating
an ANYCHAR rule at the very end that allows the incorrect input characters
to pass on to the parser for handling there.

ANYCHAR : . ;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Justin Holewinski
Sent: Tuesday, April 19, 2011 11:49 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors

I'm using the C# 3 port of Antlr (target and code generator) and I'm
experiencing a lack of lexer errors being generated.  As a concrete example,
consider the following grammar:

grammar CSTest;

public
compilation_unit
  : IDENTIFIER* EOF
  ;

IDENTIFIER
  : (ID_PART) (ID_PART_OR_NUMBER)*
  ;

fragment
ID_PART
  : ('a'..'z' | 'A'..'Z' | '_')
  ;

fragment
ID_PART_OR_NUMBER
  : ID_PART
  | '0'..'9'
  ;

WS
  :  (' '|'\r'|'\t'|'\n') { /*Skip();*/ $channel=Hidden; }
  ;

The only production in this grammar should allow for an arbitrary sequence
of identifiers, and it does.  However, it also accepts ALL input, including
binary files and anything else I pipe into it.  Is the default in the C#
target to silently ignore any lexing errors?  In my driver program, I am not
seeing any throw exceptions when I call the compilation_unit rule.

using System;
using System.IO;
using Antlr.Runtime;


namespace CSTest {
  public class Program {
    public static void Main(string[] args) {
      string filename;
      filename = args[0];
      if(!Path.IsPathRooted(filename)) {
        filename = Path.Combine(Environment.CurrentDirectory, filename);
      }
      ICharStream input = new ANTLRFileStream(filename);
      CSTestLexer lexer = new CSTestLexer(input);
      CommonTokenStream tokens = new CommonTokenStream(lexer);
      CSTestParser parser = new CSTestParser(tokens); try {
parser.compilation_unit(); } catch(RecognitionException re) {
  Console.Out.WriteLine("EXCEPTION");
Console.Out.WriteLine(re.StackTrace);
}

    }

  }

}

-- 

Thanks,

Justin Holewinski

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From justin.holewinski at gmail.com  Thu Apr 21 10:48:37 2011
From: justin.holewinski at gmail.com (Justin Holewinski)
Date: Thu, 21 Apr 2011 13:48:37 -0400
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
In-Reply-To: <00b801cc0046$830ab710$89202530$@pixelminegames.com>
References: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>
	<00b801cc0046$830ab710$89202530$@pixelminegames.com>
Message-ID: <BANLkTim+YfkLa6OsORgSOdTAihRBx3MbzQ@mail.gmail.com>

On Thu, Apr 21, 2011 at 1:06 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> Hi Justin,
>
> The exception does get thrown, but is handled in Lexer.NextToken() by
> tossing out a character and continuing. There are many ways to deal with
> this situation ranging from overriding NextToken in your lexer to creating
> an ANYCHAR rule at the very end that allows the incorrect input characters
> to pass on to the parser for handling there.
>
> ANYCHAR : . ;
>

I see.  Out of curiosity, any reason why this is different from the bahavior
of the Java target?


>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Justin Holewinski
> Sent: Tuesday, April 19, 2011 11:49 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
>
> I'm using the C# 3 port of Antlr (target and code generator) and I'm
> experiencing a lack of lexer errors being generated.  As a concrete
> example,
> consider the following grammar:
>
> grammar CSTest;
>
> public
> compilation_unit
>  : IDENTIFIER* EOF
>  ;
>
> IDENTIFIER
>  : (ID_PART) (ID_PART_OR_NUMBER)*
>  ;
>
> fragment
> ID_PART
>  : ('a'..'z' | 'A'..'Z' | '_')
>  ;
>
> fragment
> ID_PART_OR_NUMBER
>  : ID_PART
>  | '0'..'9'
>  ;
>
> WS
>  :  (' '|'\r'|'\t'|'\n') { /*Skip();*/ $channel=Hidden; }
>  ;
>
> The only production in this grammar should allow for an arbitrary sequence
> of identifiers, and it does.  However, it also accepts ALL input, including
> binary files and anything else I pipe into it.  Is the default in the C#
> target to silently ignore any lexing errors?  In my driver program, I am
> not
> seeing any throw exceptions when I call the compilation_unit rule.
>
> using System;
> using System.IO;
> using Antlr.Runtime;
>
>
> namespace CSTest {
>  public class Program {
>    public static void Main(string[] args) {
>      string filename;
>      filename = args[0];
>      if(!Path.IsPathRooted(filename)) {
>        filename = Path.Combine(Environment.CurrentDirectory, filename);
>      }
>      ICharStream input = new ANTLRFileStream(filename);
>      CSTestLexer lexer = new CSTestLexer(input);
>      CommonTokenStream tokens = new CommonTokenStream(lexer);
>      CSTestParser parser = new CSTestParser(tokens); try {
> parser.compilation_unit(); } catch(RecognitionException re) {
>  Console.Out.WriteLine("EXCEPTION");
> Console.Out.WriteLine(re.StackTrace);
> }
>
>    }
>
>  }
>
> }
>
> --
>
> Thanks,
>
> Justin Holewinski
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 

Thanks,

Justin Holewinski

From chrimc at microsoft.com  Thu Apr 21 11:22:39 2011
From: chrimc at microsoft.com (Chris McConnell)
Date: Thu, 21 Apr 2011 18:22:39 +0000
Subject: [antlr-interest] Really big generated C lexer?
In-Reply-To: <2151C9EAB83C8F4AB1ADD411C14639700E774A@TK5EX14MBXC122.redmond.corp.microsoft.com>
References: <2151C9EAB83C8F4AB1ADD411C14639700E774A@TK5EX14MBXC122.redmond.corp.microsoft.com>
Message-ID: <2151C9EAB83C8F4AB1ADD411C14639700EA697@TK5EX14MBXC122.redmond.corp.microsoft.com>

The attached grammar generates a C lexer file of 150,000 lines.  Is this typical or did I do something dumb in the grammar?  I'd attach the C lexer file, but it is 10mb...

-------------- next part --------------
A non-text attachment was scrubbed...
Name: QuerySyntax.g
Type: application/octet-stream
Size: 3796 bytes
Desc: QuerySyntax.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110421/69c26f0f/attachment.obj 

From jimi at temporal-wave.com  Thu Apr 21 11:36:20 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Apr 2011 11:36:20 -0700
Subject: [antlr-interest] Really big generated C lexer?
In-Reply-To: <2151C9EAB83C8F4AB1ADD411C14639700EA697@TK5EX14MBXC122.redmond.corp.microsoft.com>
References: <2151C9EAB83C8F4AB1ADD411C14639700E774A@TK5EX14MBXC122.redmond.corp.microsoft.com>
	<2151C9EAB83C8F4AB1ADD411C14639700EA697@TK5EX14MBXC122.redmond.corp.microsoft.com>
Message-ID: <84449b311026457b26439d3ce333a54c@mail.gmail.com>

You are just trying to do too much in the lexer really so it means you get
a lot of tables. Left factor and don't try to validate things in the
lexer. For instance you just need a very generic rule for matching a GUID
and then verify it semantically.

Use antlr.markmail.org for getting advice on pushing error messages as far
down the tool chain as you can and why these kinds of things happen.
Basically though you will get:

Unexpected character 'x'

vs:

Line 12, offset 33: "A GUID should be of the form XXXX-XXXXXXX- ...."

But, the C compiler will do a good job of dealing with the code you
generated.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Chris McConnell
> Sent: Thursday, April 21, 2011 11:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Really big generated C lexer?
>
> The attached grammar generates a C lexer file of 150,000 lines.  Is
> this typical or did I do something dumb in the grammar?  I'd attach the
> C lexer file, but it is 10mb...

From sharwell at pixelminegames.com  Thu Apr 21 11:59:48 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 21 Apr 2011 13:59:48 -0500
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors
In-Reply-To: <BANLkTim+YfkLa6OsORgSOdTAihRBx3MbzQ@mail.gmail.com>
References: <BANLkTi=K4WBoFTa5jmnBh_Tk=_V+S=jXsQ@mail.gmail.com>	<00b801cc0046$830ab710$89202530$@pixelminegames.com>
	<BANLkTim+YfkLa6OsORgSOdTAihRBx3MbzQ@mail.gmail.com>
Message-ID: <00d801cc0056$4a159e60$de40db20$@pixelminegames.com>

I'm not sure why it differs from the Java target. The nextToken()
implementation in the Java target appears to use the same exception handling
that the CSharp3 target uses.

 

Sam

 

From: Justin Holewinski [mailto:justin.holewinski at gmail.com] 
Sent: Thursday, April 21, 2011 12:49 PM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] [C#] Lexer Not Throwing Errors

 

On Thu, Apr 21, 2011 at 1:06 PM, Sam Harwell <sharwell at pixelminegames.com>
wrote:

Hi Justin,

The exception does get thrown, but is handled in Lexer.NextToken() by
tossing out a character and continuing. There are many ways to deal with
this situation ranging from overriding NextToken in your lexer to creating
an ANYCHAR rule at the very end that allows the incorrect input characters
to pass on to the parser for handling there.

ANYCHAR : . ;

 

I see.  Out of curiosity, any reason why this is different from the bahavior
of the Java target?

 


Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Justin Holewinski
Sent: Tuesday, April 19, 2011 11:49 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C#] Lexer Not Throwing Errors


I'm using the C# 3 port of Antlr (target and code generator) and I'm
experiencing a lack of lexer errors being generated.  As a concrete example,
consider the following grammar:

grammar CSTest;

public
compilation_unit
 : IDENTIFIER* EOF
 ;

IDENTIFIER
 : (ID_PART) (ID_PART_OR_NUMBER)*
 ;

fragment
ID_PART
 : ('a'..'z' | 'A'..'Z' | '_')
 ;

fragment
ID_PART_OR_NUMBER
 : ID_PART
 | '0'..'9'
 ;

WS
 :  (' '|'\r'|'\t'|'\n') { /*Skip();*/ $channel=Hidden; }
 ;

The only production in this grammar should allow for an arbitrary sequence
of identifiers, and it does.  However, it also accepts ALL input, including
binary files and anything else I pipe into it.  Is the default in the C#
target to silently ignore any lexing errors?  In my driver program, I am not
seeing any throw exceptions when I call the compilation_unit rule.

using System;
using System.IO;
using Antlr.Runtime;


namespace CSTest {
 public class Program {
   public static void Main(string[] args) {
     string filename;
     filename = args[0];
     if(!Path.IsPathRooted(filename)) {
       filename = Path.Combine(Environment.CurrentDirectory, filename);
     }
     ICharStream input = new ANTLRFileStream(filename);
     CSTestLexer lexer = new CSTestLexer(input);
     CommonTokenStream tokens = new CommonTokenStream(lexer);
     CSTestParser parser = new CSTestParser(tokens); try {
parser.compilation_unit(); } catch(RecognitionException re) {
 Console.Out.WriteLine("EXCEPTION");
Console.Out.WriteLine(re.StackTrace);
}

   }

 }

}

--

Thanks,

Justin Holewinski

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address




-- 

Thanks,

 

Justin Holewinski

 


From jmurray at aerotech.com  Thu Apr 21 12:27:07 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 21 Apr 2011 15:27:07 -0400
Subject: [antlr-interest] Really big generated C lexer?
In-Reply-To: <84449b311026457b26439d3ce333a54c@mail.gmail.com>
References: <2151C9EAB83C8F4AB1ADD411C14639700E774A@TK5EX14MBXC122.redmond.corp.microsoft.com>	<2151C9EAB83C8F4AB1ADD411C14639700EA697@TK5EX14MBXC122.redmond.corp.microsoft.com>
	<84449b311026457b26439d3ce333a54c@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393BED1964@EXCH-VIRTUAL.aerotechad.com>

Hi Jim,

Would you mind elaborating on this just a bit? You bring up this same 
concept quite frequently on this list, but there is something that I am 
missing. I understand how matching more generically in earlier stages 
will lead to better error message in later stages, but this seems to me 
to be very inefficient. Taking the GUID example, you could have a very 
simple lexer rule:

GUID: '{' (HEX_DIGIT|'-')+ '}';

This would match a valid GUID, as well as something close (including a 
lot of common mistaken forms I'm sure). This assumes that the parsing 
stage will validate this token further in its semantics. That's all well 
and good, but the problem is now you have to implement a GUID parser 
within the semantic actions of the original parser. A GUID is a rather 
simple example, so I could easily whip up some string manipulation code 
to validate the format, but this seems a bit odd to me. The whole reason 
we are using ANTLR in the first place is to avoid writing our own 
recognizers from scratch, so I feel like I shouldn't need to write one 
within the semantics of the ANTLR generated one. Would this be an 
appropriate use case for island grammars? This seems like a lot of added 
complexity (in both written code and execution time), seemingly only for 
the benefit of better error messages. The beauty of Chris's original 
implementation of GUID is that it does not require any validation in 
semantics - the lexer will only match a completely valid GUID. As you 
said, the error message may not seem all that helpful. The example that 
I gave above has nearly the same problem though. It will allow you to 
put the '-' anywhere in the GUID, but will give just as bad of an error 
if a '~' character is in the middle of the input. So perhaps a better 
lexer rule would be:

GUID: '{' ~('}')+ '}'

Which will accept all sorts of screwed up syntax, but allow you to 
produce an error like "A GUID cannot contain the character '~'. A GUID 
should be of the form ...". This makes the GUID recognizer within the 
semantics even more complex, because it has to handle even more invalid 
possibilities.

I realize that there is probably a good balance between the two 
extremes, but it is not clear to me where that would be. I guess my 
question is, is this purely a trade-off between speed/simplicity and 
error handling, or am I missing something that would allow one to get 
the best of both worlds?

Thanks,

- Justin

On 4/21/2011 2:36 PM, Jim Idle wrote:
> You are just trying to do too much in the lexer really so it means you get
> a lot of tables. Left factor and don't try to validate things in the
> lexer. For instance you just need a very generic rule for matching a GUID
> and then verify it semantically.
>
> Use antlr.markmail.org for getting advice on pushing error messages as far
> down the tool chain as you can and why these kinds of things happen.
> Basically though you will get:
>
> Unexpected character 'x'
>
> vs:
>
> Line 12, offset 33: "A GUID should be of the form XXXX-XXXXXXX- ...."
>
> But, the C compiler will do a good job of dealing with the code you
> generated.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Chris McConnell
>> Sent: Thursday, April 21, 2011 11:23 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Really big generated C lexer?
>>
>> The attached grammar generates a C lexer file of 150,000 lines.  Is
>> this typical or did I do something dumb in the grammar?  I'd attach the
>> C lexer file, but it is 10mb...
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From chrimc at microsoft.com  Thu Apr 21 17:01:28 2011
From: chrimc at microsoft.com (Chris McConnell)
Date: Fri, 22 Apr 2011 00:01:28 +0000
Subject: [antlr-interest] Really big generated C lexer?
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393BED1964@EXCH-VIRTUAL.aerotechad.com>
References: <2151C9EAB83C8F4AB1ADD411C14639700E774A@TK5EX14MBXC122.redmond.corp.microsoft.com>
	<2151C9EAB83C8F4AB1ADD411C14639700EA697@TK5EX14MBXC122.redmond.corp.microsoft.com>
	<84449b311026457b26439d3ce333a54c@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393BED1964@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <2151C9EAB83C8F4AB1ADD411C14639700EB32C@TK5EX14MBXC122.redmond.corp.microsoft.com>

The issue was with GUID, but not b/c of the precision of the Lexer rules.   It might make sense to make them more general, but the real issue is that GUID and BAG overlap.  If I simply change the '{' on GUID to '#{' the lexer file goes from 10mb to 145k.   What led me to this was that the DATETIME rule is actually more complex than the GUID one, but it didn't affect the size much.  Because of the overlap, there seemed to be some multiplicative effect in the DFA.  

GUID: '{' HEX_BYTE HEX_BYTE HEX_BYTE HEX_BYTE
      '-' HEX_BYTE HEX_BYTE
      '-' HEX_BYTE HEX_BYTE
      '-' HEX_BYTE HEX_BYTE
      '-' HEX_BYTE HEX_BYTE HEX_BYTE HEX_BYTE HEX_BYTE HEX_BYTE
      '}'
;

BAG : '{' ('\\}' | ~('}'))+ '}';


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Justin Murray
Sent: Thursday, April 21, 2011 12:27 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Really big generated C lexer?

Hi Jim,

Would you mind elaborating on this just a bit? You bring up this same concept quite frequently on this list, but there is something that I am missing. I understand how matching more generically in earlier stages will lead to better error message in later stages, but this seems to me to be very inefficient. Taking the GUID example, you could have a very simple lexer rule:

GUID: '{' (HEX_DIGIT|'-')+ '}';

This would match a valid GUID, as well as something close (including a lot of common mistaken forms I'm sure). This assumes that the parsing stage will validate this token further in its semantics. That's all well and good, but the problem is now you have to implement a GUID parser within the semantic actions of the original parser. A GUID is a rather simple example, so I could easily whip up some string manipulation code to validate the format, but this seems a bit odd to me. The whole reason we are using ANTLR in the first place is to avoid writing our own recognizers from scratch, so I feel like I shouldn't need to write one within the semantics of the ANTLR generated one. Would this be an appropriate use case for island grammars? This seems like a lot of added complexity (in both written code and execution time), seemingly only for the benefit of better error messages. The beauty of Chris's original implementation of GUID is that it does not require any validation in semantics - the lexer will only match a completely valid GUID. As you said, the error message may not seem all that helpful. The example that I gave above has nearly the same problem though. It will allow you to put the '-' anywhere in the GUID, but will give just as bad of an error if a '~' character is in the middle of the input. So perhaps a better lexer rule would be:

GUID: '{' ~('}')+ '}'

Which will accept all sorts of screwed up syntax, but allow you to produce an error like "A GUID cannot contain the character '~'. A GUID should be of the form ...". This makes the GUID recognizer within the semantics even more complex, because it has to handle even more invalid possibilities.

I realize that there is probably a good balance between the two extremes, but it is not clear to me where that would be. I guess my question is, is this purely a trade-off between speed/simplicity and error handling, or am I missing something that would allow one to get the best of both worlds?

Thanks,

- Justin

On 4/21/2011 2:36 PM, Jim Idle wrote:
> You are just trying to do too much in the lexer really so it means you 
> get a lot of tables. Left factor and don't try to validate things in 
> the lexer. For instance you just need a very generic rule for matching 
> a GUID and then verify it semantically.
>
> Use antlr.markmail.org for getting advice on pushing error messages as 
> far down the tool chain as you can and why these kinds of things happen.
> Basically though you will get:
>
> Unexpected character 'x'
>
> vs:
>
> Line 12, offset 33: "A GUID should be of the form XXXX-XXXXXXX- ...."
>
> But, the C compiler will do a good job of dealing with the code you 
> generated.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
>> bounces at antlr.org] On Behalf Of Chris McConnell
>> Sent: Thursday, April 21, 2011 11:23 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Really big generated C lexer?
>>
>> The attached grammar generates a C lexer file of 150,000 lines.  Is 
>> this typical or did I do something dumb in the grammar?  I'd attach 
>> the C lexer file, but it is 10mb...
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Fri Apr 22 12:00:18 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Apr 2011 12:00:18 -0700
Subject: [antlr-interest] Re : Re : thoughts on ANTLR v4's use of
	interpreters
In-Reply-To: <727575.72956.qm@web26502.mail.ukl.yahoo.com>
References: <7C8C126A-92E1-42D7-81C2-32ADBBAB8596@cs.usfca.edu>
	<962653.13397.qm@web26503.mail.ukl.yahoo.com>
	<FC674876-E5FF-4DC2-93B6-FBDBDA978949@cs.usfca.edu>
	<727575.72956.qm@web26502.mail.ukl.yahoo.com>
Message-ID: <F3CFAE97-EE74-44DF-92CA-FBF76A53CE69@cs.usfca.edu>


On Apr 20, 2011, at 2:03 PM, Stanislas Rusinsky wrote:

> Indeed you can always take a few minutes to walk the graph, but there is always 
> the option to spend weeks or even months to make that step automate-able :)

I meant automatically

> Will v4 interpreter-interpreter also generate a parse tree?

that should be easy enough and I'd also like it to trigger actions; these would be methods that you can override/ implement.

Ter

From ben at autonomic.net  Fri Apr 22 14:32:08 2011
From: ben at autonomic.net (Ben Senior)
Date: Fri, 22 Apr 2011 23:32:08 +0200
Subject: [antlr-interest] ANTLR4
Message-ID: <4DB1F3D8.1090501@autonomic.net>

Hi,

I've been looking on the wiki for some indication of how far ANTLR4 is, 
and whether it's compatible with ANTLRWorks... is there any information 
on this out there?  I have failed to find it.

Sorry if I've missed something obvious :-)

Regards,

Ben

From researcher0x00 at gmail.com  Sat Apr 23 05:40:28 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Sat, 23 Apr 2011 08:40:28 -0400
Subject: [antlr-interest] ANTLR4
In-Reply-To: <4DB1F3D8.1090501@autonomic.net>
References: <4DB1F3D8.1090501@autonomic.net>
Message-ID: <BANLkTinsv+94ZUbQOEEu-=b6fJoFdF=xmw@mail.gmail.com>

> Hi Ben,


ANTLR 4 is only in the initial concept and proof of concepts phase. From
info in the forum, it will be based on String Template 4 which was recently
released, will have all of the code from know developers so that it can
conform to the license agreement which the current code cannot, and will
redesign and enhance certain areas.

Ter recently posed
https://mail.google.com/mail/?shva=1#inbox/12f65c6434f860f3 which is latest
post I have seen on version 4.

Eric

From parrt at cs.usfca.edu  Sat Apr 23 11:32:37 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 23 Apr 2011 11:32:37 -0700
Subject: [antlr-interest] ANTLR4
In-Reply-To: <BANLkTinsv+94ZUbQOEEu-=b6fJoFdF=xmw@mail.gmail.com>
References: <4DB1F3D8.1090501@autonomic.net>
	<BANLkTinsv+94ZUbQOEEu-=b6fJoFdF=xmw@mail.gmail.com>
Message-ID: <9AE5CDAF-69CE-41B1-A5B6-C74E4B03CB5E@cs.usfca.edu>

I've recently changed gears a bit, but it parses and lexes in interp and code gen phase more or less. no tree construction. more here as I get there:

http://www.antlr.org/wiki/display/~admin/ANTLR+v4+plans

Ter
On Apr 23, 2011, at 5:40 AM, The Researcher wrote:

>> Hi Ben,
> 
> 
> ANTLR 4 is only in the initial concept and proof of concepts phase. From
> info in the forum, it will be based on String Template 4 which was recently
> released, will have all of the code from know developers so that it can
> conform to the license agreement which the current code cannot, and will
> redesign and enhance certain areas.
> 
> Ter recently posed
> https://mail.google.com/mail/?shva=1#inbox/12f65c6434f860f3 which is latest
> post I have seen on version 4.
> 
> Eric
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From hrennau at yahoo.de  Sat Apr 23 17:42:55 2011
From: hrennau at yahoo.de (Hans-Juergen Rennau)
Date: Sun, 24 Apr 2011 01:42:55 +0100 (BST)
Subject: [antlr-interest] EBNF - XML representations
Message-ID: <131207.4132.qm@web27105.mail.ukl.yahoo.com>

Hi YY,

to respond to your wondering: there is no primary task requiring an XML 
representation of grammars. It occurred to me when noticing that the official 
JPQL grammar references rules that do not exist, and that an XML representation 
would allow to detect such things with a simple XQuery expression, a one-liner, 
with mathematical precision.

It seems to me there is an irony in the fact that a grammar - artefact?meant to 
map syntax to logical structure - is so deeply steeped in syntax itself. This is 
no criticsm, just stirring my curiosity. The terseness and expressiveness of 
EBNF is indispensible, but perhaps we should have the possibility to switch back 
and forth between the terse and an XML representation? XML is a way to present 
logical structure in pure form (I am sure you agree - the angle brackets etc. 
are only the serialization format, not the thing "itself", which is a tree of 
information items), which enables operations on the information, operations 
whose precision, aggregative nature and conciseness are difficult to attain in 
any other way. I consider this example: let there be two grammars, which differ 
in respect to embedded actions, but not in respect to rule references. If we 
have?an XML representation of the grammar available, this relationship can be 
revealed with few lines of XSLT or XQuery code, but how else? I am really 
curious. An attempt to to it with a filtering parser which filters out actions 
is, in comparison, much more work to achieve and also less clear in its results, 
more in need of an interpretation ("yes, the equality of the two token streams 
(resulting from the filtering) implies that the two grammars are equal in 
respect to the rule - token reference - structure"). XML allows?to express such 
relationships rather explicitly and very?tersely. Another example would be the 
possibility to detect equivalence of rules in spite of different choices of rule 
names. I imagine that such relationships may be?important when trying to 
integrate work from different sources, or relating?own work to existing work. ?

Cheers,
-- Hans-Juergen

~~~

Hi,

I had a similar thought myself that this could be very handy while
jumping into the markup realm.

XML itself is described using an adaptation of EBNF. There is also a
respective ISO standard for EBNF.
But I am unaware of any XML (markup) representation of ENBF syntax. I
believe it is not so complicated to produce a XSD for this and s.o.

I wonder if there is any primary task you are urgent to solve with
this besides satisfying own transformation joy?


On Thu, Apr 21, 2011 at 10:55 AM, Hans-Juergen Rennau <hrennau at yahoo.de> wrote:
> Hello People,
>
> is there a translator which transforms an EBNF document into an XML
> representation? And... is there a standardized XML representation of EBNF
> grammers?
>
> The reason for my question: such a representation might enable to write tools
> creating "grammer reports" with little effort and high precision, e.g. using
> XSLT 2.0 or XQuery. (Example for such reporting: "show for each rule the rules
> directly or indirectly referencing this rule".) And it might be a very
> appropriate source for generating configurable "standard" transformations into
> ANTLR grammers, or so I think at least.
>
> Kind regards from
> -- Hans-Juergen
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
With best regards,
Y.Y.


From ben at autonomic.net  Sun Apr 24 04:57:14 2011
From: ben at autonomic.net (Ben Senior)
Date: Sun, 24 Apr 2011 13:57:14 +0200
Subject: [antlr-interest] EBNF - XML representations
In-Reply-To: <131207.4132.qm@web27105.mail.ukl.yahoo.com>
References: <131207.4132.qm@web27105.mail.ukl.yahoo.com>
Message-ID: <4DB4101A.1030601@autonomic.net>

I'm new to this, but a few days ago I was asking on a different list 
whether anybody had a YACC description for parsing YACC... which is 
essentially what you're looking for I think?

Your goal is to parse arbitrary grammars in order to be able to reflect 
upon their structure (that XML is your desired output format, enabling 
to use some of it's common 'tool chain' is more or less irrelevant in 
this case)?

I'm not sure it is difficult at all to build a grammar for parsing 
grammars, I am just less convinced as time goes by whether that's a 
really useful thing to do.

It's all very well knowing how rules are related (these are the kinds of 
things ANTLRWorks excels at showing anyway) but most of the time what 
would be really useful is to be able to get better access to the state 
of the living breathing compiler ( a beast whose only real description 
is the pushdown state machine, whose state is then intimately connected 
to where you happen to be in your inputs).  For that, somebody here 
recommended XTEXT.

I do, however, agree that the way grammars are described (and work) 
seems not to have been designed to make it easy for meta-grammars (I 
don't know how else to put it, I'm afraid I'm still too green to know 
the vocabulary here :-) )

B

On 24/04/2011 02:42, Hans-Juergen Rennau wrote:
> Hi YY,
>
> to respond to your wondering: there is no primary task requiring an XML
> representation of grammars. It occurred to me when noticing that the official
> JPQL grammar references rules that do not exist, and that an XML representation
> would allow to detect such things with a simple XQuery expression, a one-liner,
> with mathematical precision.
>
> It seems to me there is an irony in the fact that a grammar - artefact meant to
> map syntax to logical structure - is so deeply steeped in syntax itself. This is
> no criticsm, just stirring my curiosity. The terseness and expressiveness of
> EBNF is indispensible, but perhaps we should have the possibility to switch back
> and forth between the terse and an XML representation? XML is a way to present
> logical structure in pure form (I am sure you agree - the angle brackets etc.
> are only the serialization format, not the thing "itself", which is a tree of
> information items), which enables operations on the information, operations
> whose precision, aggregative nature and conciseness are difficult to attain in
> any other way. I consider this example: let there be two grammars, which differ
> in respect to embedded actions, but not in respect to rule references. If we
> have an XML representation of the grammar available, this relationship can be
> revealed with few lines of XSLT or XQuery code, but how else? I am really
> curious. An attempt to to it with a filtering parser which filters out actions
> is, in comparison, much more work to achieve and also less clear in its results,
> more in need of an interpretation ("yes, the equality of the two token streams
> (resulting from the filtering) implies that the two grammars are equal in
> respect to the rule - token reference - structure"). XML allows to express such
> relationships rather explicitly and very tersely. Another example would be the
> possibility to detect equivalence of rules in spite of different choices of rule
> names. I imagine that such relationships may be important when trying to
> integrate work from different sources, or relating own work to existing work.  
>
> Cheers,
> -- Hans-Juergen
>
> ~~~
>
> Hi,
>
> I had a similar thought myself that this could be very handy while
> jumping into the markup realm.
>
> XML itself is described using an adaptation of EBNF. There is also a
> respective ISO standard for EBNF.
> But I am unaware of any XML (markup) representation of ENBF syntax. I
> believe it is not so complicated to produce a XSD for this and s.o.
>
> I wonder if there is any primary task you are urgent to solve with
> this besides satisfying own transformation joy?
>
>
> On Thu, Apr 21, 2011 at 10:55 AM, Hans-Juergen Rennau<hrennau at yahoo.de>  wrote:
>> Hello People,
>>
>> is there a translator which transforms an EBNF document into an XML
>> representation? And... is there a standardized XML representation of EBNF
>> grammers?
>>
>> The reason for my question: such a representation might enable to write tools
>> creating "grammer reports" with little effort and high precision, e.g. using
>> XSLT 2.0 or XQuery. (Example for such reporting: "show for each rule the rules
>> directly or indirectly referencing this rule".) And it might be a very
>> appropriate source for generating configurable "standard" transformations into
>> ANTLR grammers, or so I think at least.
>>
>> Kind regards from
>> -- Hans-Juergen
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


From mark.farnell at gmail.com  Sun Apr 24 22:24:06 2011
From: mark.farnell at gmail.com (Mark Farnell)
Date: Mon, 25 Apr 2011 17:24:06 +1200
Subject: [antlr-interest] (third-party) Java 7 and C# 4+ compilers written
	in ANTLR
Message-ID: <BANLkTin50cPXEGTDDvW70fmYpzqmPq6o7A@mail.gmail.com>

Is it true that the OpenJDK 7 javac is hand-written using Java without
using high-level language such as ANTLR and JavaCC?

If this is the case, are you aware of any projects / attempt for
third-party Java compiler implementation using ANTLR?

I mean not only the parser, but also AST manipulation, tree walking,
semantic checking and code generation all implemented using ANTLR,
rather than manual Java code.

Also are you aware of any third-party C# compilers (that takes C# code
and spits CIL code) written in ANTLR?

Thanks!

Mark

From ter at antlr.org  Mon Apr 25 01:51:06 2011
From: ter at antlr.org (ter at antlr.org)
Date: Mon, 25 Apr 2011 09:51:06 +0100
Subject: [antlr-interest] [SPAM] from Cornelia
Message-ID: <1665042429.354P3SK5820641@visrmfntrbjepul.mwajinxjdmr.net>

I'm a hot brunette girl, and I wish to become a pen pal (by email or Skype) of a handsome and clever guy, interested in further real dates!

My home page: www.girls-rus.ru


From Hiran.Chaudhuri at web.de  Mon Apr 25 04:13:49 2011
From: Hiran.Chaudhuri at web.de (Hiran Chaudhuri)
Date: Mon, 25 Apr 2011 13:13:49 +0200 (CEST)
Subject: [antlr-interest] EBNF - XML representations
Message-ID: <753947418.1563258.1303730029361.JavaMail.fmail@mwmweb040>

A grammar for parsing grammars is what ANTLR has builtin. How else would you define a grammar and make ANTLR generate the code?
Once such a grammar is parsed an AST should be available.

And since an AST is a tree structure, a simple TreeWalker could serialize it to XML.

I do not see the big difficulty here. But as I have not followed the full discussion I may have missed a bit...

Hiran


-----Urspr?ngliche Nachricht-----
Von: "Ben Senior" <ben at autonomic.net>
Gesendet: 24.04.2011 13:57:14
An: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] EBNF - XML representations

[...]
>I'm not sure it is difficult at all to build a grammar for parsing
>grammars, I am just less convinced as time goes by whether that's a
>really useful thing to do.
[...]


___________________________________________________________
Schon geh?rt? WEB.DE hat einen genialen Phishing-Filter in die
Toolbar eingebaut! http://produkte.web.de/go/toolbar

From eugeny.yakimovitch at gmail.com  Mon Apr 25 12:37:47 2011
From: eugeny.yakimovitch at gmail.com (Yauhen Yakimovich)
Date: Mon, 25 Apr 2011 21:37:47 +0200
Subject: [antlr-interest] EBNF - XML representations
In-Reply-To: <753947418.1563258.1303730029361.JavaMail.fmail@mwmweb040>
References: <753947418.1563258.1303730029361.JavaMail.fmail@mwmweb040>
Message-ID: <BANLkTinu5MqHdpuySew+uMpnmyYCurLntg@mail.gmail.com>

No, you haven't missed anything at all. One just has to built such a
tree walker and define a respective XML document format.
But again that would be solely an AST translation of ANTLR ("BNF")
grammar to its XML representation. One can also produce a concrete
syntax tree of parsed input in form of XML with respective syntax
markup (AST tags).

What's to relevant applications - pure curiosity and research.

On Mon, Apr 25, 2011 at 1:13 PM, Hiran Chaudhuri <Hiran.Chaudhuri at web.de> wrote:
> A grammar for parsing grammars is what ANTLR has builtin. How else would you define a grammar and make ANTLR generate the code?
> Once such a grammar is parsed an AST should be available.
>
> And since an AST is a tree structure, a simple TreeWalker could serialize it to XML.
>
> I do not see the big difficulty here. But as I have not followed the full discussion I may have missed a bit...
>
> Hiran
>
>
> -----Urspr?ngliche Nachricht-----
> Von: "Ben Senior" <ben at autonomic.net>
> Gesendet: 24.04.2011 13:57:14
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] EBNF - XML representations
>
> [...]
>>I'm not sure it is difficult at all to build a grammar for parsing
>>grammars, I am just less convinced as time goes by whether that's a
>>really useful thing to do.
> [...]
>



-- 
With best regards,
Y.Y.

From mike at carns.com  Tue Apr 26 00:41:36 2011
From: mike at carns.com (Michael Carns)
Date: Tue, 26 Apr 2011 00:41:36 -0700
Subject: [antlr-interest] Possible bug in C runtime: Unable to override
	emit() in lexer
Message-ID: <4DB67730.9020407@carns.com>

In order to use a customized token type, I believe I need to override
emit() and emitNew() within my ANTLR3_LEXER instance.  However, my
function isn't getting called.  I'm using version 3.1.3 of the C runtime.

The culprit appears to be this call to emit() within nextTokenStr() in
antlr3lexer.c:

Line 268:
                if (lexer->rec->state->token == NULL)
                {
                    // Emit the real token, which adds it in to the
token stream basically
                    //
                    emit(lexer);
                }

Shouldn't it be "lexer->emit(lexer)"?  As written, the call to emit()
will bind to the local version of emit() within antlr3lexer.c and won't
call my customized version.  I've looked at more recent versions in the
source repository, and the code appears to be unchanged.  Is this a real
bug, or am I going down the wrong road in my attempt to customize the
generated tokens?

Thanks,
Mike Carns


From jimi at temporal-wave.com  Tue Apr 26 08:05:09 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Apr 2011 08:05:09 -0700
Subject: [antlr-interest] Possible bug in C runtime: Unable to override
 emit() in lexer
In-Reply-To: <4DB67730.9020407@carns.com>
References: <4DB67730.9020407@carns.com>
Message-ID: <40df50641aab18f2f8066e2abce6b354@mail.gmail.com>

No, you override both of these with your own function, and your own
function should call your own version of emit if the built in one is not
what you want.

However most people will not need to use a customized token type and emit
overrides and so on. There is a pointer and 3 integers in the token that
can be used to store any additional information that you need.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Michael Carns
> Sent: Tuesday, April 26, 2011 12:42 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Possible bug in C runtime: Unable to override
> emit() in lexer
>
> In order to use a customized token type, I believe I need to override
> emit() and emitNew() within my ANTLR3_LEXER instance.  However, my
> function isn't getting called.  I'm using version 3.1.3 of the C
> runtime.
>
> The culprit appears to be this call to emit() within nextTokenStr() in
> antlr3lexer.c:
>
> Line 268:
>                 if (lexer->rec->state->token == NULL)
>                 {
>                     // Emit the real token, which adds it in to the
> token stream basically
>                     //
>                     emit(lexer);
>                 }
>
> Shouldn't it be "lexer->emit(lexer)"?  As written, the call to emit()
> will bind to the local version of emit() within antlr3lexer.c and won't
> call my customized version.  I've looked at more recent versions in the
> source repository, and the code appears to be unchanged.  Is this a
> real bug, or am I going down the wrong road in my attempt to customize
> the generated tokens?
>
> Thanks,
> Mike Carns
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From mike at carns.com  Tue Apr 26 11:07:29 2011
From: mike at carns.com (Michael Carns)
Date: Tue, 26 Apr 2011 11:07:29 -0700
Subject: [antlr-interest] Possible bug in C runtime: Unable to override
 emit() in lexer
In-Reply-To: <40df50641aab18f2f8066e2abce6b354@mail.gmail.com>
References: <4DB67730.9020407@carns.com>
	<40df50641aab18f2f8066e2abce6b354@mail.gmail.com>
Message-ID: <4DB709E1.7010903@carns.com>

Jim,

I'm planning on using the custom pointer to stash my data.  When I first 
looked those fields, it looked to me like they are designed to be set by 
action blocks in the grammar.  I have some common metadata that needs to 
go along with every token, and I'd rather not have to insert and 
maintain an action block for every single lexer rule.  That's what 
started me down the path of overriding emit.  It provided a common point 
where I could adjust those values.  Is there a better place to insert my 
code?

Thanks,
Mike

On 4/26/2011 8:05 AM, Jim Idle wrote:
> No, you override both of these with your own function, and your own
> function should call your own version of emit if the built in one is not
> what you want.
>
> However most people will not need to use a customized token type and emit
> overrides and so on. There is a pointer and 3 integers in the token that
> can be used to store any additional information that you need.
>
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Michael Carns
>> Sent: Tuesday, April 26, 2011 12:42 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Possible bug in C runtime: Unable to override
>> emit() in lexer
>>
>> In order to use a customized token type, I believe I need to override
>> emit() and emitNew() within my ANTLR3_LEXER instance.  However, my
>> function isn't getting called.  I'm using version 3.1.3 of the C
>> runtime.
>>
>> The culprit appears to be this call to emit() within nextTokenStr() in
>> antlr3lexer.c:
>>
>> Line 268:
>>                  if (lexer->rec->state->token == NULL)
>>                  {
>>                      // Emit the real token, which adds it in to the
>> token stream basically
>>                      //
>>                      emit(lexer);
>>                  }
>>
>> Shouldn't it be "lexer->emit(lexer)"?  As written, the call to emit()
>> will bind to the local version of emit() within antlr3lexer.c and won't
>> call my customized version.  I've looked at more recent versions in the
>> source repository, and the code appears to be unchanged.  Is this a
>> real bug, or am I going down the wrong road in my attempt to customize
>> the generated tokens?
>>
>> Thanks,
>> Mike Carns
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Tue Apr 26 11:11:06 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Apr 2011 11:11:06 -0700
Subject: [antlr-interest] Possible bug in C runtime: Unable to override
 emit() in lexer
In-Reply-To: <4DB709E1.7010903@carns.com>
References: <4DB67730.9020407@carns.com>	<40df50641aab18f2f8066e2abce6b354@mail.gmail.com>
	<4DB709E1.7010903@carns.com>
Message-ID: <f5b8604ab29fc7fdbf5c1d12a8adf125@mail.gmail.com>

No. just copy the functions to your own code set, rename and install the
pointer to the custom method after you have created the lexer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Michael Carns
> Sent: Tuesday, April 26, 2011 11:07 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Possible bug in C runtime: Unable to
> override emit() in lexer
>
> Jim,
>
> I'm planning on using the custom pointer to stash my data.  When I
> first looked those fields, it looked to me like they are designed to be
> set by action blocks in the grammar.  I have some common metadata that
> needs to go along with every token, and I'd rather not have to insert
> and maintain an action block for every single lexer rule.  That's what
> started me down the path of overriding emit.  It provided a common
> point where I could adjust those values.  Is there a better place to
> insert my code?
>
> Thanks,
> Mike
>
> On 4/26/2011 8:05 AM, Jim Idle wrote:
> > No, you override both of these with your own function, and your own
> > function should call your own version of emit if the built in one is
> > not what you want.
> >
> > However most people will not need to use a customized token type and
> > emit overrides and so on. There is a pointer and 3 integers in the
> > token that can be used to store any additional information that you
> need.
> >
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Michael Carns
> >> Sent: Tuesday, April 26, 2011 12:42 AM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Possible bug in C runtime: Unable to
> >> override
> >> emit() in lexer
> >>
> >> In order to use a customized token type, I believe I need to
> override
> >> emit() and emitNew() within my ANTLR3_LEXER instance.  However, my
> >> function isn't getting called.  I'm using version 3.1.3 of the C
> >> runtime.
> >>
> >> The culprit appears to be this call to emit() within nextTokenStr()
> >> in
> >> antlr3lexer.c:
> >>
> >> Line 268:
> >>                  if (lexer->rec->state->token == NULL)
> >>                  {
> >>                      // Emit the real token, which adds it in to the
> >> token stream basically
> >>                      //
> >>                      emit(lexer);
> >>                  }
> >>
> >> Shouldn't it be "lexer->emit(lexer)"?  As written, the call to
> emit()
> >> will bind to the local version of emit() within antlr3lexer.c and
> >> won't call my customized version.  I've looked at more recent
> >> versions in the source repository, and the code appears to be
> >> unchanged.  Is this a real bug, or am I going down the wrong road in
> >> my attempt to customize the generated tokens?
> >>
> >> Thanks,
> >> Mike Carns
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Tue Apr 26 12:48:01 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 26 Apr 2011 15:48:01 -0400
Subject: [antlr-interest] (qid) Qualified Identifiers
Message-ID: <BANLkTimHd4x1cQsZ5C3b1Ts-ww9=dcCcdg@mail.gmail.com>

I am creating qualified identifiers and saw the message
http://markmail.org/message/to72c6jlem5zcrjk

parser grammar

  qid : ID (DOT^ ID)* ;

and tree grammar

qid : ^(DOT qid)
        | ID ;

but to get the AST parse to work for my tree grammar required

 qid : ^(DOT qid ID)      note ID added after quid
        | ID ;

Was the example a typo or is my code wrong?

Thanks

Eric

From jimi at temporal-wave.com  Tue Apr 26 12:54:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Apr 2011 12:54:10 -0700
Subject: [antlr-interest] (qid) Qualified Identifiers
In-Reply-To: <BANLkTimHd4x1cQsZ5C3b1Ts-ww9=dcCcdg@mail.gmail.com>
References: <BANLkTimHd4x1cQsZ5C3b1Ts-ww9=dcCcdg@mail.gmail.com>
Message-ID: <8ce72b4b39ce0111b05bc6718c3134d0@mail.gmail.com>

Your code is copying the wrong thing. That example was about parsing:

 with X
  .y
 end with

Your code is also wrong as it should really be:

qid : ^(DOT qid qid?) // Second is only optional if supporting with x { .y
}
    | ID
    ;

Finally, it is unlikely to just be ID that qualifies, usually any
expression can do it.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of The Researcher
> Sent: Tuesday, April 26, 2011 12:48 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] (qid) Qualified Identifiers
>
> I am creating qualified identifiers and saw the message
> http://markmail.org/message/to72c6jlem5zcrjk
>
> parser grammar
>
>   qid : ID (DOT^ ID)* ;
>
> and tree grammar
>
> qid : ^(DOT qid)
>         | ID ;
>
> but to get the AST parse to work for my tree grammar required
>
>  qid : ^(DOT qid ID)      note ID added after quid
>         | ID ;
>
> Was the example a typo or is my code wrong?
>
> Thanks
>
> Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Tue Apr 26 13:14:43 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 26 Apr 2011 16:14:43 -0400
Subject: [antlr-interest] (qid) Qualified Identifiers
In-Reply-To: <8ce72b4b39ce0111b05bc6718c3134d0@mail.gmail.com>
References: <BANLkTimHd4x1cQsZ5C3b1Ts-ww9=dcCcdg@mail.gmail.com>
	<8ce72b4b39ce0111b05bc6718c3134d0@mail.gmail.com>
Message-ID: <BANLkTikU+zvOT3qa9RGRGaM61yGLJed3rA@mail.gmail.com>

> Jim, Thanks. :)


Eric

From nasgaard at ca.ibm.com  Tue Apr 26 15:04:26 2011
From: nasgaard at ca.ibm.com (Howard Nasgaard)
Date: Tue, 26 Apr 2011 18:04:26 -0400
Subject: [antlr-interest] Need info on replacing the default tree adaptor
Message-ID: <OFD26B1070.8B068802-ON8525787E.0078CA54-8525787E.00794216@ca.ibm.com>

Hi,

I have a compiler built using antlr and the "C" language target.  I 
currently use the base tree adaptor created using ANTLR3_TREE_ADAPTORNew 
to create all the AST nodes.  Can someone point me to an example of how to 
replace, or customized, the adaptor so that I can allocate my own custom 
AST objects.  I have seen a lot of information on how to do this in Java, 
but I have not been able to find any for C (C++).

Howard W. Nasgaard
InfoSphere Streams Development
e-mail: nasgaard at ca.ibm.com
C2/YGH/8200/MKM
905-413-3683
Tie: 8 313-3683

From ben at autonomic.net  Wed Apr 27 02:27:33 2011
From: ben at autonomic.net (Ben Senior)
Date: Wed, 27 Apr 2011 11:27:33 +0200
Subject: [antlr-interest] Grammars for API description
In-Reply-To: <BANLkTimHd4x1cQsZ5C3b1Ts-ww9=dcCcdg@mail.gmail.com>
References: <BANLkTimHd4x1cQsZ5C3b1Ts-ww9=dcCcdg@mail.gmail.com>
Message-ID: <4DB7E185.1080900@autonomic.net>

Hi, sorry if this is too vague for the list... but I had an odd dream 
last night about using grammars to enforce API structure...

I remember there was an effort years ago when component based 
development hype was at its peak that one way to define components was 
in the way they interact with one another (which fell down because in 
describing that in detail, you're essentially implementing the 
internals)... but nevertheless... clients don't really "command/ask" 
servers simple questions... api calls follow patterns, individual calls 
make up sentences.

Just taking it from a security angle, given a particular authenticated 
role, wouldn't a grammar based description of how which api's can be 
called be a major improvement over the current situation (and quite a 
useful abstraction)?  The key of course is in the stateful/contextual 
nature of the state machine which would parse the api requests as tokens 
and validate whether the interaction patterns are valid.

Has anybody heard of anybody doing something like this? Was it a success?

Thanks,

Ben

From Philippe.Frankson at Frsglobal.com  Wed Apr 27 02:28:51 2011
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Wed, 27 Apr 2011 11:28:51 +0200
Subject: [antlr-interest] Handling errors using syntactic predicate
In-Reply-To: <29ef1268abb69845886c3e1edc1de4cf@temporal-wave.com>
References: <u2p9a93847b1004261340n7cdde79anda4d10f590d8f543@mail.gmail.com>
	<29ef1268abb69845886c3e1edc1de4cf@temporal-wave.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD015EC3065@BRU-EXCH01.frsglobal.internal>

Hi,

In my grammar, I can parse expression like this:
(A <= 1 or A >= 6) and (A not in (43,44))

Let's say, it is a kind of sql WHERE clause.

Here is a part of the grammar to understand the problem:

@rulecatch {
catch (RecognitionException re) {
	if (this.errorMessage.isEmpty())
		this.errorMessage = this.getErrorMessage(re,
this.getTokenNames()) +  " [pos: " + (re.charPositionInLine -
errorPosOffset) + "]";
	throw re;
}
}

...

arithexpr:		(arithterm ) (
				'+' arithterm  | 
				'-' arithterm  | 
				CONCAT arithterm)*;

arithterm:		(arithatom | '-' arithatom) 
				('*' arithatom 
				| '/' arithatom)*;

arithatom:		arithvar
			| ifthenelse
			| constantorparameter
			| floorexpr
			| floatexpr
			| leftexpr
			| rightexpr
			| replaceexpr
			| dayexpr
			| monthexpr
			| yearexpr
			| yearnoexpr
			| (arithexprparen)=> arithexprparen 
			;

arithexprparen:		'(' arithexpr ')';


You can notice that I'm using syntactic predicate to support nested
expression with parenthesis.

The problem is the following:
If I have a mistake in my expression like this:  (A <= 1 or A >= 6xx)
and (A not in (43,44))
Where 6xx is the mistake,
The error I have is: 'no viable alternative at input 'A' [pos:1]
This is because it doesn't reach the right parentheses while parsing
"(arithexprparen)=> arithexprparen", so the error is triggered for the
beginning of arithatom evaluation.
I would have liked it to tell me that the problem is 'x' and not 'A'.
Is there any way to deal with that ?


Thanks a lot for any help.
Philippe


From dmitry.m.ilyin at gmail.com  Wed Apr 27 03:52:50 2011
From: dmitry.m.ilyin at gmail.com (=?KOI8-R?B?5M3J1NLJyiDpzNjJzg==?=)
Date: Wed, 27 Apr 2011 17:52:50 +0700
Subject: [antlr-interest] [C-target] Child-parent relationship
In-Reply-To: <BANLkTi=qy8Wpve4kc50BxtD3kFP5j5CMDg@mail.gmail.com>
References: <BANLkTi=qy8Wpve4kc50BxtD3kFP5j5CMDg@mail.gmail.com>
Message-ID: <BANLkTinbSKZ6gFScKA=fw_Xf+wPJxD2SMQ@mail.gmail.com>

---------- ??????????? ????????? ----------
?? ????: ??????? ????? <dmitry.m.ilyin at gmail.com>
????: 27 ?????? 2011 ?. 17:49
????: [C-target] Child-parent relationship
????: antlr-interest at antlr.org


Hi!
Please correct me if I'm wrong. When constructing AST, child-parent
relationships are created by calling "freshenPACindixesAll" in function
"addChild"?
If so why "freshenPACindixesAll" is called only in one branch of
if-statement?
(antlr3basetree.c)

Why do we do selected action in function "setParent"? As a parent of "tree"
we set parent of "parent".

static void
setParent (pANTLR3_BASE_TREE tree, pANTLR3_BASE_TREE parent)
{
((pANTLR3_COMMON_TREE)(tree->super))->parent = parent == NULL ? NULL :
((pANTLR3_COMMON_TREE)(parent->super))->parent;
}

Dmitry Ilyin

From court at infiauto.com  Wed Apr 27 06:08:10 2011
From: court at infiauto.com (Courtney Falk)
Date: Wed, 27 Apr 2011 09:08:10 -0400
Subject: [antlr-interest] Mutlipass Design Dilemma
Message-ID: <4DB8153A.5070003@infiauto.com>

   All:

I've been banging my head against a design problem for over a week now, 
and I thought I'd finally ask for help.

I have a fuzzy parser in place that breaks a stream up into tokens based 
on whitespace and punctuation, preserving both.  All other characters 
are grouped together into tokens.  So: "Gratuitous reply?" might yield 
something like: "Gratuitous" WS "reply" QUESTION_MARK.

Here's my problem!  I want to then take all the secondary tokens (i.e. 
"Gratuitous" and "reply") and perform a second pass to see if these 
tokens match a second set of patterns.  I'm building additional parsing 
into these secondary rules.  They could look like:

secondary_pattern : numeral | ordinal;
numeral returns [int i] : 'two' { $i = 2; }
ordinal returns [int o] : 'second' { $i = 2; }

So the final result of "Second gratuitous reply?" could look like: 
NUMERAL WS "gratuitous" WS "reply" QUESTION_MARK.

Thoughts?  Suggestions?


Courtney Falk
court at infiauto.com

From jimi at temporal-wave.com  Wed Apr 27 06:58:12 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Apr 2011 06:58:12 -0700
Subject: [antlr-interest] Handling errors using syntactic predicate
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD015EC3065@BRU-EXCH01.frsglobal.internal>
References: <u2p9a93847b1004261340n7cdde79anda4d10f590d8f543@mail.gmail.com>
	<29ef1268abb69845886c3e1edc1de4cf@temporal-wave.com>
	<148D436D71E918499E8A71E1DAD38DD015EC3065@BRU-EXCH01.frsglobal.internal>
Message-ID: <32dae9da4a0348da30fbc983685f13ad@mail.gmail.com>

Go and look at the expression tree for say the Java.g example grammar. You
will probably see that your expression tree is not formed correctly and
that is one possibility for why you need the predicate (BTW, when you do
need a predicate, don't specify the whole rule, use the minimum set of
tokens that is required).

Specifically here, look at you unary operator and sort that out, then I
suspect that you are not showing the whole thing here and your paren
expression is clashing with something else higher up the chain, which is
the other reason you use the predicate.

Basically, you need to remove the predicate and fix the grammar problems
that ensue once you remove it.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Philippe Frankson
> Sent: Wednesday, April 27, 2011 2:29 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Handling errors using syntactic predicate
>
> Hi,
>
> In my grammar, I can parse expression like this:
> (A <= 1 or A >= 6) and (A not in (43,44))
>
> Let's say, it is a kind of sql WHERE clause.
>
> Here is a part of the grammar to understand the problem:
>
> @rulecatch {
> catch (RecognitionException re) {
> 	if (this.errorMessage.isEmpty())
> 		this.errorMessage = this.getErrorMessage(re,
> this.getTokenNames()) +  " [pos: " + (re.charPositionInLine -
> errorPosOffset) + "]";
> 	throw re;
> }
> }
>
> ...
>
> arithexpr:		(arithterm ) (
> 				'+' arithterm  |
> 				'-' arithterm  |
> 				CONCAT arithterm)*;
>
> arithterm:		(arithatom | '-' arithatom)
> 				('*' arithatom
> 				| '/' arithatom)*;
>
> arithatom:		arithvar
> 			| ifthenelse
> 			| constantorparameter
> 			| floorexpr
> 			| floatexpr
> 			| leftexpr
> 			| rightexpr
> 			| replaceexpr
> 			| dayexpr
> 			| monthexpr
> 			| yearexpr
> 			| yearnoexpr
> 			| (arithexprparen)=> arithexprparen
> 			;
>
> arithexprparen:		'(' arithexpr ')';
>
>
> You can notice that I'm using syntactic predicate to support nested
> expression with parenthesis.
>
> The problem is the following:
> If I have a mistake in my expression like this:  (A <= 1 or A >= 6xx)
> and (A not in (43,44)) Where 6xx is the mistake, The error I have is:
> 'no viable alternative at input 'A' [pos:1] This is because it doesn't
> reach the right parentheses while parsing "(arithexprparen)=>
> arithexprparen", so the error is triggered for the beginning of
> arithatom evaluation.
> I would have liked it to tell me that the problem is 'x' and not 'A'.
> Is there any way to deal with that ?
>
>
> Thanks a lot for any help.
> Philippe
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Apr 27 06:59:15 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Apr 2011 06:59:15 -0700
Subject: [antlr-interest] [C-target] Child-parent relationship
In-Reply-To: <BANLkTinbSKZ6gFScKA=fw_Xf+wPJxD2SMQ@mail.gmail.com>
References: <BANLkTi=qy8Wpve4kc50BxtD3kFP5j5CMDg@mail.gmail.com>
	<BANLkTinbSKZ6gFScKA=fw_Xf+wPJxD2SMQ@mail.gmail.com>
Message-ID: <d0f161d01db35859f33cf459aca13149@mail.gmail.com>

I think that you may looking too deep in to this matter. What problem are
you trying to solve?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ??????? ?????
> Sent: Wednesday, April 27, 2011 3:53 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C-target] Child-parent relationship
>
> ---------- ??????????? ????????? ---------- ?? ????: ??????? ?????
> <dmitry.m.ilyin at gmail.com>
> ????: 27 ?????? 2011 ?. 17:49
> ????: [C-target] Child-parent relationship
> ????: antlr-interest at antlr.org
>
>
> Hi!
> Please correct me if I'm wrong. When constructing AST, child-parent
> relationships are created by calling "freshenPACindixesAll" in function
> "addChild"?
> If so why "freshenPACindixesAll" is called only in one branch of if-
> statement?
> (antlr3basetree.c)
>
> Why do we do selected action in function "setParent"? As a parent of
> "tree"
> we set parent of "parent".
>
> static void
> setParent (pANTLR3_BASE_TREE tree, pANTLR3_BASE_TREE parent) {
> ((pANTLR3_COMMON_TREE)(tree->super))->parent = parent == NULL ? NULL :
> ((pANTLR3_COMMON_TREE)(parent->super))->parent;
> }
>
> Dmitry Ilyin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From cummings at kjchome.homeip.net  Wed Apr 27 07:14:56 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 27 Apr 2011 10:14:56 -0400
Subject: [antlr-interest] Mutlipass Design Dilemma
In-Reply-To: <4DB8153A.5070003@infiauto.com>
References: <4DB8153A.5070003@infiauto.com>
Message-ID: <4DB824E0.50809@kjchome.homeip.net>

On 04/27/2011 09:08 AM, Courtney Falk wrote:
>    All:
> 
> I've been banging my head against a design problem for over a week now, 
> and I thought I'd finally ask for help.
> 
> I have a fuzzy parser in place that breaks a stream up into tokens based 
> on whitespace and punctuation, preserving both.  All other characters 
> are grouped together into tokens.  So: "Gratuitous reply?" might yield 
> something like: "Gratuitous" WS "reply" QUESTION_MARK.
> 
> Here's my problem!  I want to then take all the secondary tokens (i.e. 
> "Gratuitous" and "reply") and perform a second pass to see if these 
> tokens match a second set of patterns.  I'm building additional parsing 
> into these secondary rules.  They could look like:
> 
> secondary_pattern : numeral | ordinal;
> numeral returns [int i] : 'two' { $i = 2; }
> ordinal returns [int o] : 'second' { $i = 2; }
> 
> So the final result of "Second gratuitous reply?" could look like: 
> NUMERAL WS "gratuitous" WS "reply" QUESTION_MARK.
> 
> Thoughts?  Suggestions?

Are you doing a second pass over the original input text?  Or are you
writing a tree grammar to walk your already parsed AST that you
generated from your first pass?  In which case your secondary stuff
should be matching trees, and not text.

> Courtney Falk
> court at infiauto.com
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From chris at wensel.net  Wed Apr 27 09:27:53 2011
From: chris at wensel.net (Chris K Wensel)
Date: Wed, 27 Apr 2011 09:27:53 -0700
Subject: [antlr-interest] sql 2003 grammars
In-Reply-To: <BANLkTik+qH=HLn+gwnCNA65yDZipx9V4hg@mail.gmail.com>
References: <8EA3EE22-7B0B-4B98-A945-2D864C3940AF@wensel.net>
	<BANLkTik+qH=HLn+gwnCNA65yDZipx9V4hg@mail.gmail.com>
Message-ID: <43F1261C-C661-4170-BD23-02443F672458@wensel.net>


> This SQL 2003 grammar has infinite look-ahead [according to Terrence] in some of the rules relating to SQL expressions.
> The grammar will not generate no matter how much memory you have until the infinite look-ahead is resolved.


Thanks. I've been running with a huge heap. but it still seems to run quite a while before failing.

for now i've been inserting backtrack=true and k=1 where I am getting the OOMEs. and that seems to alleviate things.

ckw

--
Chris K Wensel
chris at concurrentinc.com
http://www.concurrentinc.com

-- Concurrent, Inc. offers mentoring, support for Cascading


From dmitry.m.ilyin at gmail.com  Wed Apr 27 11:14:44 2011
From: dmitry.m.ilyin at gmail.com (=?KOI8-R?B?5M3J1NLJyiDpzNjJzg==?=)
Date: Thu, 28 Apr 2011 01:14:44 +0700
Subject: [antlr-interest] [C-target] Child-parent relationship
Message-ID: <BANLkTi=W7CR4UphxbUV_USDOuoQjWU7+yg@mail.gmail.com>

Sorry, I have no exp in using mailing lists, so I hope i'm doing right.
I'm trying to get parent of AST node, but "getParent" function returns
0x00000001c address. Because pointer to parent of the node's super is equal
to NULL. But when I've changed functions "addChild" and "setParent" all
child-parent relationships become correct.
Dmitry Ilyin

From jimi at temporal-wave.com  Wed Apr 27 11:38:58 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Apr 2011 11:38:58 -0700
Subject: [antlr-interest] [C-target] Child-parent relationship
In-Reply-To: <BANLkTi=W7CR4UphxbUV_USDOuoQjWU7+yg@mail.gmail.com>
References: <BANLkTi=W7CR4UphxbUV_USDOuoQjWU7+yg@mail.gmail.com>
Message-ID: <a289cf589fb494acf064477b5f5dcd93@mail.gmail.com>

Take a look at antlr.markmail.org for other examples but where are you
trying to get the parent, in the parser before you have built the AST (it
sounds like this) or in the tree walker? You should not need to change any
of the runtime functions; you are probably just making them do things that
are going to get done anyway at the end of the rule. Look at the generated
code for ways to traverse the tree. I suppose there could be a bug, but ut
seems a bit unlikely at this point.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ??????? ?????
> Sent: Wednesday, April 27, 2011 11:15 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C-target] Child-parent relationship
>
> Sorry, I have no exp in using mailing lists, so I hope i'm doing right.
> I'm trying to get parent of AST node, but "getParent" function returns
> 0x00000001c address. Because pointer to parent of the node's super is
> equal to NULL. But when I've changed functions "addChild" and
> "setParent" all child-parent relationships become correct.
> Dmitry Ilyin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ssawkar at aehr.com  Wed Apr 27 16:27:01 2011
From: ssawkar at aehr.com (Sunil Sawkar)
Date: Wed, 27 Apr 2011 16:27:01 -0700
Subject: [antlr-interest] Element labels & ANTLR Strip tool
Message-ID: <201104271627.01376.ssawkar@aehr.com>

Hi,

I have a grammar with element labels and action code in C++,  embedded.  When I use the Strip tool to remove the action code, it 
also removes the element labels. Perhaps that is intended. Any way that I can keep the element labels and just remove the action 
code that is typically enclosed within { } pair ?  The element labels are needed when working with the grammar in Eclipse / xtext.

Any help appreciated... .

Thanks,
 
Sunil Sawkar
Fremont, CA

From chris at wensel.net  Wed Apr 27 19:39:47 2011
From: chris at wensel.net (Chris K Wensel)
Date: Wed, 27 Apr 2011 19:39:47 -0700
Subject: [antlr-interest] Looking for experienced ANTLR folk
Message-ID: <72EB3CAC-3A03-4F5D-BBBC-D33C8CD4F66C@wensel.net>

Hi all

apologies if this isn't the correct forum for this query.

but I'm looking to hire or rent, if need be, an experienced ANTLR user for a project I'm on.

preferably in the Bay Area, but glad to consider somewhere remote if you are outside the bubble.

sorry to be so terse, but happy to share more information offline.

cheers,
chris

--
Chris K Wensel
chris at wensel.net
http://chris.wensel.net/


From dmitry.m.ilyin at gmail.com  Wed Apr 27 23:26:58 2011
From: dmitry.m.ilyin at gmail.com (=?KOI8-R?B?5M3J1NLJyiDpzNjJzg==?=)
Date: Thu, 28 Apr 2011 13:26:58 +0700
Subject: [antlr-interest] [C-target] Child-parent relationship
Message-ID: <BANLkTinDHjq72C-3n9KiHCEUD-HXc392Tg@mail.gmail.com>

I took "simplecTreeParser" example, antlr-3.2 and libantlr3c-3.2 ( + ms vs
2005). After generating AST (after "SimpleCAST = psr->program(psr);") and
after checking count of errors I inserted this code:

correctParent = SimpleCAST.tree;
child = (pANTLR3_BASE_TREE)(correctParent->getChild(correctParent, 0));
suggestedParent = (pANTLR3_BASE_TREE)(child->getParent(child));
if (correctParent == suggestedParent)
printf("\n\nCorrect\n\n");
 else
printf("\n\nIncorrect\n\n");

So after execution "Incorrect" was printed. Because
((pANTLR3_COMMON_TREE)child->super)->parent had NULL. It seems to me it
happens due to error in implementaion of "setParent" function in
antlr3commontree.c. I also used Python target and python's "setParent" has
diffrent logic.

Dmitry Ilyin


Take a look at antlr.markmail.org for other examples but where are you
>
trying to get the parent, in the parser before you have built the AST (it
>
sounds like this) or in the tree walker? You should not need to change any
>
of the runtime functions; you are probably just making them do things that
>
are going to get done anyway at the end of the rule. Look at the generated
>
code for ways to traverse the tree. I suppose there could be a bug, but ut
>
seems a bit unlikely at this point.
>

> Jim
>

> > -----Original Message-----
>
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>
> bounces at antlr.org] On Behalf Of ??????? ?????
>
> Sent: Wednesday, April 27, 2011 11:15 AM
>
> To: antlr-interest at antlr.org
>
> Subject: [antlr-interest] [C-target] Child-parent relationship
>
>
>
> Sorry, I have no exp in using mailing lists, so I hope i'm doing right.
>
> I'm trying to get parent of AST node, but "getParent" function returns
>
> 0x00000001c address. Because pointer to parent of the node's super is
>
> equal to NULL. But when I've changed functions "addChild" and
>
> "setParent" all child-parent relationships become correct.
>
> Dmitry Ilyin
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>
> email-address
>

From lukuilian at gmail.com  Thu Apr 28 02:53:14 2011
From: lukuilian at gmail.com (jie lu)
Date: Thu, 28 Apr 2011 17:53:14 +0800
Subject: [antlr-interest] gunit
Message-ID: <BANLkTik42iEqZzjxFRLuQnGfossbZ253pA@mail.gmail.com>

Hi, All,

when I test the case list in website, I found gunit can not output the
result list in gunit.
this test case is about the SimpleC.g in LL-star.

-- 
Best Regards.
Lu Jie

From lukuilian at gmail.com  Thu Apr 28 02:58:25 2011
From: lukuilian at gmail.com (jie lu)
Date: Thu, 28 Apr 2011 17:58:25 +0800
Subject: [antlr-interest] grammar test
Message-ID: <BANLkTik6fHPcLzOgc_HcoRnC2YLD9a=G6Q@mail.gmail.com>

Hi, all

is there any unit test for antlr grammar?
i write a long mysql grammar. it is parser ok but have some bugs. so i want
to test the grammar one by one.

thanks

-- 
Best Regards.
Lu Jie

From court at infiauto.com  Thu Apr 28 06:30:24 2011
From: court at infiauto.com (Courtney Falk)
Date: Thu, 28 Apr 2011 09:30:24 -0400
Subject: [antlr-interest] Multipass Design Dilemma
Message-ID: <4DB96BF0.5060904@infiauto.com>


> Are you doing a second pass over the original input text?  Or are you
> writing a tree grammar to walk your already parsed AST that you
> generated from your first pass?  In which case your secondary stuff
> should be matching trees, and not text.

I'm not sure what a second pass over the would entail.

Right now I'm pursuing the tree grammar route.  I only really have 
experience with lexers and parsers so far so this is a step outside my 
comfort area.  I worked up these examples yesterday:

grammar StepOne;

options { output=AST; }

tokens { MATCHED; UNMATCHED; }

many_parts : single_part+;

single_part
     : unspecified -> ^(UNMATCHED unspecified)
     | whitespace -> ^(MATCHED whitespace)
     | whitespace -> ^(MATCHED whitespace)
     | whitespace -> ^(MATCHED whitespace)
     ;

tree grammar StepTwo;

tokens { NOTHING; }

options {
     backtrack=true;
     tokenVocab=StepOne;
}

tree : (matched | unmatched)+;

matched : ^(MATCHED NOTHING);

unmatched : ^(UNMATCHED rematch);

rematch
     : 'one'
     | 'two'
     | 'three'
     | .*
     ;

The problem I hit is that the rematch rule always matches ".*" and none 
of the preceding literals.


Courtney Falk

From jimi at temporal-wave.com  Thu Apr 28 08:27:02 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 28 Apr 2011 08:27:02 -0700
Subject: [antlr-interest] [C-target] Child-parent relationship
In-Reply-To: <BANLkTinDHjq72C-3n9KiHCEUD-HXc392Tg@mail.gmail.com>
References: <BANLkTinDHjq72C-3n9KiHCEUD-HXc392Tg@mail.gmail.com>
Message-ID: <54de1eb3f96a89d450efb5585e8c11f6@mail.gmail.com>

What version of the runtime? What version of the ANTLR tool?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ??????? ?????
> Sent: Wednesday, April 27, 2011 11:27 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C-target] Child-parent relationship
>
> I took "simplecTreeParser" example, antlr-3.2 and libantlr3c-3.2 ( + ms
> vs 2005). After generating AST (after "SimpleCAST = psr-
> >program(psr);") and after checking count of errors I inserted this
> code:
>
> correctParent = SimpleCAST.tree;
> child = (pANTLR3_BASE_TREE)(correctParent->getChild(correctParent, 0));
> suggestedParent = (pANTLR3_BASE_TREE)(child->getParent(child));
> if (correctParent == suggestedParent)
> printf("\n\nCorrect\n\n");
>  else
> printf("\n\nIncorrect\n\n");
>
> So after execution "Incorrect" was printed. Because
> ((pANTLR3_COMMON_TREE)child->super)->parent had NULL. It seems to me it
> happens due to error in implementaion of "setParent" function in
> antlr3commontree.c. I also used Python target and python's "setParent"
> has diffrent logic.
>
> Dmitry Ilyin
>
>
> Take a look at antlr.markmail.org for other examples but where are you
> >
> trying to get the parent, in the parser before you have built the AST
> (it
> >
> sounds like this) or in the tree walker? You should not need to change
> any
> >
> of the runtime functions; you are probably just making them do things
> that
> >
> are going to get done anyway at the end of the rule. Look at the
> generated
> >
> code for ways to traverse the tree. I suppose there could be a bug, but
> ut
> >
> seems a bit unlikely at this point.
> >
>
> > Jim
> >
>
> > > -----Original Message-----
> >
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >
> > bounces at antlr.org] On Behalf Of ??????? ?????
> >
> > Sent: Wednesday, April 27, 2011 11:15 AM
> >
> > To: antlr-interest at antlr.org
> >
> > Subject: [antlr-interest] [C-target] Child-parent relationship
> >
> >
> >
> > Sorry, I have no exp in using mailing lists, so I hope i'm doing
> right.
> >
> > I'm trying to get parent of AST node, but "getParent" function
> returns
> >
> > 0x00000001c address. Because pointer to parent of the node's super is
> >
> > equal to NULL. But when I've changed functions "addChild" and
> >
> > "setParent" all child-parent relationships become correct.
> >
> > Dmitry Ilyin
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> >
> > email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From slattery.kim at gmail.com  Thu Apr 28 10:41:15 2011
From: slattery.kim at gmail.com (Kim Slattery)
Date: Thu, 28 Apr 2011 12:41:15 -0500
Subject: [antlr-interest] StringTemplate does not work as expected using a
 simple string template group
Message-ID: <BANLkTinyNG3dwBmh-y2y7U=PyYtqD8J1Lg@mail.gmail.com>

I have been trying to parse this and translate it using a .stg file, and it
does not work.  Every time, it parses  I have no idea what's going on.
Help!?

Hop.stg:

group Hop;
start(p) ::= "<pack>"
package(name) ::= "packagedafdjk <name>"
qualified_name(name) ::= "<name>"


HopSymbolTableWalker.g:

tree grammar HopSymbolTableWalker;

options {
tokenVocab=Hop;
 ASTLabelType=CommonTree;
output = template;
}
...
start
@after{$st = %start(p={$pack.text});}
: (pack = package_rule ref = reference+          // -> start(pack={$pack.st
})
 | ref = reference+ pack = package_rule
| pack = package_rule                                  // -> start(pack={$
pack.st})
 | ref = reference+
| )
 cl = class_declaration  EOF //Declaring a class name
;

package_rule
@after{$st = %package(name={$qn.text});}
: PACKAGE_NAME qn=qualified_name
 {
thisPackage = $qn.type;
}
 ;

qualified_name returns [QualifiedNameDescriptor type]
@after {$st = %{result};}
@init {
 String result = "";
}
: ^(QUALIFIED_NAME ids+= ID (PERIOD ids+=ID)*)
 {
QualifiedNameDescriptor t = new QualifiedNameDescriptor();
t.setLineBegin(((CommonTree)$ids.get(0)).token.getLine());
 t.setColumnBegin(((CommonTree)$ids.get(0)).token.getCharPositionInLine());
/*t.setNameFromList($ids);
 */
String name = "";
Iterator it = $ids.iterator();

         while(it.hasNext()) {
             name += ((CommonTree) it.next()).getText();

             if(it.hasNext()) {
                 name += $PERIOD.text;
           }

             }
             t.setName(name);

result = name;

t.setLineEnd(((CommonTree)$ids.get($ids.size() - 1)).token.getLine());
 t.setColumnEnd(((CommonTree)$ids.get($ids.size() -
1)).token.getCharPositionInLine());
$type = t;
 }                                                                //->
qualified_name(name={result})
;



Thanks for your ideas.  I'm absolutely stuck.

Kim

From slattery.kim at gmail.com  Thu Apr 28 10:42:48 2011
From: slattery.kim at gmail.com (Kim Slattery)
Date: Thu, 28 Apr 2011 12:42:48 -0500
Subject: [antlr-interest] StringTemplate does not work as expected using
 a simple string template group
In-Reply-To: <BANLkTinyNG3dwBmh-y2y7U=PyYtqD8J1Lg@mail.gmail.com>
References: <BANLkTinyNG3dwBmh-y2y7U=PyYtqD8J1Lg@mail.gmail.com>
Message-ID: <BANLkTikjzo664d7oPJzb0uz8zGUBiwYJ2Q@mail.gmail.com>

Sorry: incomplete thought. Every time, it translates it to simply:

<pack>

What am I not getting?

On Thu, Apr 28, 2011 at 12:41 PM, Kim Slattery <slattery.kim at gmail.com>wrote:

> I have been trying to parse this and translate it using a .stg file, and it
> does not work.  Every time, it parses  I have no idea what's going on.
> Help!?
>
> Hop.stg:
>
> group Hop;
> start(p) ::= "<pack>"
> package(name) ::= "packagedafdjk <name>"
> qualified_name(name) ::= "<name>"
>
>
> HopSymbolTableWalker.g:
>
> tree grammar HopSymbolTableWalker;
>
> options {
> tokenVocab=Hop;
>  ASTLabelType=CommonTree;
> output = template;
> }
> ...
> start
> @after{$st = %start(p={$pack.text});}
> : (pack = package_rule ref = reference+          // -> start(pack={$
> pack.st})
>  | ref = reference+ pack = package_rule
> | pack = package_rule                                  // -> start(pack={$
> pack.st})
>  | ref = reference+
> | )
>  cl = class_declaration  EOF //Declaring a class name
> ;
>
> package_rule
> @after{$st = %package(name={$qn.text});}
> : PACKAGE_NAME qn=qualified_name
>  {
> thisPackage = $qn.type;
> }
>  ;
>
> qualified_name returns [QualifiedNameDescriptor type]
> @after {$st = %{result};}
> @init {
>  String result = "";
> }
> : ^(QUALIFIED_NAME ids+= ID (PERIOD ids+=ID)*)
>  {
> QualifiedNameDescriptor t = new QualifiedNameDescriptor();
> t.setLineBegin(((CommonTree)$ids.get(0)).token.getLine());
>
> t.setColumnBegin(((CommonTree)$ids.get(0)).token.getCharPositionInLine());
> /*t.setNameFromList($ids);
>  */
> String name = "";
> Iterator it = $ids.iterator();
>
>          while(it.hasNext()) {
>              name += ((CommonTree) it.next()).getText();
>
>              if(it.hasNext()) {
>                  name += $PERIOD.text;
>            }
>
>              }
>              t.setName(name);
>
> result = name;
>
> t.setLineEnd(((CommonTree)$ids.get($ids.size() - 1)).token.getLine());
>  t.setColumnEnd(((CommonTree)$ids.get($ids.size() -
> 1)).token.getCharPositionInLine());
> $type = t;
>  }                                                                //->
> qualified_name(name={result})
> ;
>
>
>
> Thanks for your ideas.  I'm absolutely stuck.
>
> Kim
>

From david.smith at cc.gatech.edu  Thu Apr 28 10:49:27 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Thu, 28 Apr 2011 13:49:27 -0400
Subject: [antlr-interest] Adding java class in AntlrWorks debug mode
Message-ID: <E1QFVLE-0006sg-Sw@elasmtp-scoter.atl.sa.earthlink.net>

I am working with a team of students at Georgia Tech to develop a 
Java version of Matlab.  In particular, I want to integrate the 
grammar with our production system so that we can debug the grammar, 
generate the code and run our system without having to edit the lex 
and parser class files.  This requires (I think) that we change the 
actions in the grammar from something like:
{  memory.put($ID.gettext, $expr.value);
    System.out.println("store variable" + $ID.getText);
}
to something lie
{
    Interface.put($ID.gettext, $expr.value);
    Interface.display("store variable" + $ID.getText);
}
This works fine if I generate code and compile our system with the 
Antlr lex and parser classes and a version if the Interface class 
that uses memory and System.out as above.
However, I can't figure out how to include this Interface class with 
the AntlrWorks debugger.
Any help would be greatly appreciated.

                                 DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype  


From parrt at cs.usfca.edu  Thu Apr 28 10:54:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Apr 2011 10:54:06 -0700
Subject: [antlr-interest] StringTemplate does not work as expected using
	a simple string template group
In-Reply-To: <BANLkTikjzo664d7oPJzb0uz8zGUBiwYJ2Q@mail.gmail.com>
References: <BANLkTinyNG3dwBmh-y2y7U=PyYtqD8J1Lg@mail.gmail.com>
	<BANLkTikjzo664d7oPJzb0uz8zGUBiwYJ2Q@mail.gmail.com>
Message-ID: <C9AF59E9-E0E8-4502-8AB0-952827AA00B8@cs.usfca.edu>

if you get <...>That means that somehow ST is interpreting it using $...$ not <...> I think. not sure why that would be.
Ter
On Apr 28, 2011, at 10:42 AM, Kim Slattery wrote:

> Sorry: incomplete thought. Every time, it translates it to simply:
> 
> <pack>
> 
> What am I not getting?
> 
> On Thu, Apr 28, 2011 at 12:41 PM, Kim Slattery <slattery.kim at gmail.com>wrote:
> 
>> I have been trying to parse this and translate it using a .stg file, and it
>> does not work.  Every time, it parses  I have no idea what's going on.
>> Help!?
>> 
>> Hop.stg:
>> 
>> group Hop;
>> start(p) ::= "<pack>"
>> package(name) ::= "packagedafdjk <name>"
>> qualified_name(name) ::= "<name>"
>> 
>> 
>> HopSymbolTableWalker.g:
>> 
>> tree grammar HopSymbolTableWalker;
>> 
>> options {
>> tokenVocab=Hop;
>> ASTLabelType=CommonTree;
>> output = template;
>> }
>> ...
>> start
>> @after{$st = %start(p={$pack.text});}
>> : (pack = package_rule ref = reference+          // -> start(pack={$
>> pack.st})
>> | ref = reference+ pack = package_rule
>> | pack = package_rule                                  // -> start(pack={$
>> pack.st})
>> | ref = reference+
>> | )
>> cl = class_declaration  EOF //Declaring a class name
>> ;
>> 
>> package_rule
>> @after{$st = %package(name={$qn.text});}
>> : PACKAGE_NAME qn=qualified_name
>> {
>> thisPackage = $qn.type;
>> }
>> ;
>> 
>> qualified_name returns [QualifiedNameDescriptor type]
>> @after {$st = %{result};}
>> @init {
>> String result = "";
>> }
>> : ^(QUALIFIED_NAME ids+= ID (PERIOD ids+=ID)*)
>> {
>> QualifiedNameDescriptor t = new QualifiedNameDescriptor();
>> t.setLineBegin(((CommonTree)$ids.get(0)).token.getLine());
>> 
>> t.setColumnBegin(((CommonTree)$ids.get(0)).token.getCharPositionInLine());
>> /*t.setNameFromList($ids);
>> */
>> String name = "";
>> Iterator it = $ids.iterator();
>> 
>>         while(it.hasNext()) {
>>             name += ((CommonTree) it.next()).getText();
>> 
>>             if(it.hasNext()) {
>>                 name += $PERIOD.text;
>>           }
>> 
>>             }
>>             t.setName(name);
>> 
>> result = name;
>> 
>> t.setLineEnd(((CommonTree)$ids.get($ids.size() - 1)).token.getLine());
>> t.setColumnEnd(((CommonTree)$ids.get($ids.size() -
>> 1)).token.getCharPositionInLine());
>> $type = t;
>> }                                                                //->
>> qualified_name(name={result})
>> ;
>> 
>> 
>> 
>> Thanks for your ideas.  I'm absolutely stuck.
>> 
>> Kim
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Apr 28 10:55:00 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Apr 2011 10:55:00 -0700
Subject: [antlr-interest] Adding java class in AntlrWorks debug mode
In-Reply-To: <E1QFVLE-0006sg-Sw@elasmtp-scoter.atl.sa.earthlink.net>
References: <E1QFVLE-0006sg-Sw@elasmtp-scoter.atl.sa.earthlink.net>
Message-ID: <44A8CB43-B88B-4859-99EC-19785BE5337A@cs.usfca.edu>

Hi David, I suggest that you use remote debugging. Just say debug remote instead of debug from the drop-down menu. When you start up your parser from the command line, it will go into server mode. AW then asked the client and attached to that server to suck out debug events.
Ter
On Apr 28, 2011, at 10:49 AM, David Smith wrote:

> I am working with a team of students at Georgia Tech to develop a 
> Java version of Matlab.  In particular, I want to integrate the 
> grammar with our production system so that we can debug the grammar, 
> generate the code and run our system without having to edit the lex 
> and parser class files.  This requires (I think) that we change the 
> actions in the grammar from something like:
> {  memory.put($ID.gettext, $expr.value);
>    System.out.println("store variable" + $ID.getText);
> }
> to something lie
> {
>    Interface.put($ID.gettext, $expr.value);
>    Interface.display("store variable" + $ID.getText);
> }
> This works fine if I generate code and compile our system with the 
> Antlr lex and parser classes and a version if the Interface class 
> that uses memory and System.out as above.
> However, I can't figure out how to include this Interface class with 
> the AntlrWorks debugger.
> Any help would be greatly appreciated.
> 
>                                 DMS
> 
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype  
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From WeikEngOff at aol.com  Thu Apr 28 11:03:33 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Thu, 28 Apr 2011 20:03:33 +0200
Subject: [antlr-interest] "Balanced Matching" and ANTLR
Message-ID: <4DB9ABF5.2080802@aol.com>

Hello,

I'm just looking for common approaches for "Balanced Matching" with ANTLR,
e. g. the typical problem for extracting methods/functions/procedures
in source files. Any hints are highly appreciated.


Many thanks and greetings
Udo

From slattery.kim at gmail.com  Thu Apr 28 11:44:46 2011
From: slattery.kim at gmail.com (Kim Slattery)
Date: Thu, 28 Apr 2011 13:44:46 -0500
Subject: [antlr-interest] StringTemplate does not work as expected using
 a simple string template group
In-Reply-To: <C9AF59E9-E0E8-4502-8AB0-952827AA00B8@cs.usfca.edu>
References: <BANLkTinyNG3dwBmh-y2y7U=PyYtqD8J1Lg@mail.gmail.com>
	<BANLkTikjzo664d7oPJzb0uz8zGUBiwYJ2Q@mail.gmail.com>
	<C9AF59E9-E0E8-4502-8AB0-952827AA00B8@cs.usfca.edu>
Message-ID: <BANLkTi=VJFME6TdbeU6=-oAv02jHBs1AyQ@mail.gmail.com>

Glaring syntax error in the above--I forgot to change the string template
for start to <p> from <pack>.  This shouldn't be the problem, but I'll let
you know if it is.

On Thu, Apr 28, 2011 at 12:54 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> if you get <...>That means that somehow ST is interpreting it using $...$
> not <...> I think. not sure why that would be.
> Ter
> On Apr 28, 2011, at 10:42 AM, Kim Slattery wrote:
>
> > Sorry: incomplete thought. Every time, it translates it to simply:
> >
> > <pack>
> >
> > What am I not getting?
> >
> > On Thu, Apr 28, 2011 at 12:41 PM, Kim Slattery <slattery.kim at gmail.com
> >wrote:
> >
> >> I have been trying to parse this and translate it using a .stg file, and
> it
> >> does not work.  Every time, it parses  I have no idea what's going on.
> >> Help!?
> >>
> >> Hop.stg:
> >>
> >> group Hop;
> >> start(p) ::= "<pack>"
> >> package(name) ::= "packagedafdjk <name>"
> >> qualified_name(name) ::= "<name>"
> >>
> >>
> >> HopSymbolTableWalker.g:
> >>
> >> tree grammar HopSymbolTableWalker;
> >>
> >> options {
> >> tokenVocab=Hop;
> >> ASTLabelType=CommonTree;
> >> output = template;
> >> }
> >> ...
> >> start
> >> @after{$st = %start(p={$pack.text});}
> >> : (pack = package_rule ref = reference+          // -> start(pack={$
> >> pack.st})
> >> | ref = reference+ pack = package_rule
> >> | pack = package_rule                                  // ->
> start(pack={$
> >> pack.st})
> >> | ref = reference+
> >> | )
> >> cl = class_declaration  EOF //Declaring a class name
> >> ;
> >>
> >> package_rule
> >> @after{$st = %package(name={$qn.text});}
> >> : PACKAGE_NAME qn=qualified_name
> >> {
> >> thisPackage = $qn.type;
> >> }
> >> ;
> >>
> >> qualified_name returns [QualifiedNameDescriptor type]
> >> @after {$st = %{result};}
> >> @init {
> >> String result = "";
> >> }
> >> : ^(QUALIFIED_NAME ids+= ID (PERIOD ids+=ID)*)
> >> {
> >> QualifiedNameDescriptor t = new QualifiedNameDescriptor();
> >> t.setLineBegin(((CommonTree)$ids.get(0)).token.getLine());
> >>
> >>
> t.setColumnBegin(((CommonTree)$ids.get(0)).token.getCharPositionInLine());
> >> /*t.setNameFromList($ids);
> >> */
> >> String name = "";
> >> Iterator it = $ids.iterator();
> >>
> >>         while(it.hasNext()) {
> >>             name += ((CommonTree) it.next()).getText();
> >>
> >>             if(it.hasNext()) {
> >>                 name += $PERIOD.text;
> >>           }
> >>
> >>             }
> >>             t.setName(name);
> >>
> >> result = name;
> >>
> >> t.setLineEnd(((CommonTree)$ids.get($ids.size() - 1)).token.getLine());
> >> t.setColumnEnd(((CommonTree)$ids.get($ids.size() -
> >> 1)).token.getCharPositionInLine());
> >> $type = t;
> >> }                                                                //->
> >> qualified_name(name={result})
> >> ;
> >>
> >>
> >>
> >> Thanks for your ideas.  I'm absolutely stuck.
> >>
> >> Kim
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From dmitry.m.ilyin at gmail.com  Thu Apr 28 11:45:47 2011
From: dmitry.m.ilyin at gmail.com (=?KOI8-R?B?5M3J1NLJyiDpzNjJzg==?=)
Date: Fri, 29 Apr 2011 01:45:47 +0700
Subject: [antlr-interest] [C-target] Child-parent relationship
Message-ID: <BANLkTimktD4bbNwTOUHJtjh_ffs_d6i3Sg@mail.gmail.com>

*antlr-3.2 and libantlr3c-3.2*



> What version of the runtime? What version of the ANTLR tool?
>
> Jim
>
>
> >* -----Original Message-----
> *>* From: antlr-interest-bounces at antlr.org <http://www.antlr.org/mailman/listinfo/antlr-interest> [mailto:antlr-interest-
> *>* bounces at antlr.org <http://www.antlr.org/mailman/listinfo/antlr-interest>] On Behalf Of ??????? ?????
> *>* Sent: Wednesday, April 27, 2011 11:27 PM
> *>* To: antlr-interest at antlr.org <http://www.antlr.org/mailman/listinfo/antlr-interest>
> *>* Subject: [antlr-interest] [C-target] Child-parent relationship
> *>*
> *>* I took "simplecTreeParser" example, antlr-3.2 and libantlr3c-3.2 ( + ms
> *>* vs 2005). After generating AST (after "SimpleCAST = psr-
> *>* >program(psr);") and after checking count of errors I inserted this
> *>* code:
> *>*
> *>* correctParent = SimpleCAST.tree;
> *>* child = (pANTLR3_BASE_TREE)(correctParent->getChild(correctParent, 0));
> *>* suggestedParent = (pANTLR3_BASE_TREE)(child->getParent(child));
> *>* if (correctParent == suggestedParent)
> *>* printf("\n\nCorrect\n\n");
> *>*  else
> *>* printf("\n\nIncorrect\n\n");
> *>*
> *>* So after execution "Incorrect" was printed. Because
> *>* ((pANTLR3_COMMON_TREE)child->super)->parent had NULL. It seems to me it
> *>* happens due to error in implementaion of "setParent" function in
> *>* antlr3commontree.c. I also used Python target and python's "setParent"
> *>* has diffrent logic.
> *>*
> *>* Dmitry Ilyin
> *>*
> *>*
> *>* Take a look at antlr.markmail.org for other examples but where are you
> *>* >
> *>* trying to get the parent, in the parser before you have built the AST
> *>* (it
> *>* >
> *>* sounds like this) or in the tree walker? You should not need to change
> *>* any
> *>* >
> *>* of the runtime functions; you are probably just making them do things
> *>* that
> *>* >
> *>* are going to get done anyway at the end of the rule. Look at the
> *>* generated
> *>* >
> *>* code for ways to traverse the tree. I suppose there could be a bug, but
> *>* ut
> *>* >
> *>* seems a bit unlikely at this point.
> *>* >
> *>*
> *>* > Jim
> *>* >
> *>*
> *>* > > -----Original Message-----
> *>* >
> *>* > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> *>* >
> *>* > bounces at antlr.org] On Behalf Of ??????? ?????
> *>* >
> *>* > Sent: Wednesday, April 27, 2011 11:15 AM
> *>* >
> *>* > To: antlr-interest at antlr.org
> *>* >
> *>* > Subject: [antlr-interest] [C-target] Child-parent relationship
> *>* >
> *>* >
> *>* >
> *>* > Sorry, I have no exp in using mailing lists, so I hope i'm doing
> *>* right.
> *>* >
> *>* > I'm trying to get parent of AST node, but "getParent" function
> *>* returns
> *>* >
> *>* > 0x00000001c address. Because pointer to parent of the node's super is
> *>* >
> *>* > equal to NULL. But when I've changed functions "addChild" and
> *>* >
> *>* > "setParent" all child-parent relationships become correct.
> *>* >
> *>* > Dmitry Ilyin
> *>* >
> *>* >
> *>* >
> *>* > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> *>* >
> *>* > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> *>* interest/your-
> *>* >
> *>* > email-address
> *>* >
> *>*
> *>* List: http://www.antlr.org/mailman/listinfo/antlr-interest
> *>* Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> *>* email-address
> *
>
>

From jean-sebastien.vachon at wantedtech.com  Thu Apr 28 13:06:33 2011
From: jean-sebastien.vachon at wantedtech.com (Jean-Sebastien Vachon)
Date: Thu, 28 Apr 2011 16:06:33 -0400
Subject: [antlr-interest] Inserting missing nodes
Message-ID: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>

Hi All,

First, I'd like to make it clear that I'm new to ANTLR so please be kind with me ;)

Second, my main problem right now is that I'm currently building a grammar that will let
me validate and parse a Boolean query with some special features. I got 90% of my parser working but I'm stuck with the last
feature that is required. Basically, I need to be able to insert missing operators (AND/OR) where required.

Considering the following query: "software engineer java"
I need to build a tree representing the query as if it was "software AND engineer AND java" but I also need to be able to change the inserted operator 'AND' to something else.

My first thought was to push a new type of node (let's say DEFAULT_OP) into my tree using a rewrite rule that I could rewrite to the proper operator using a tree walker and/or translator.

I made a few tries and got it working in some situations but I can't get it to parse everything I'm throwing at it. My best try so far is shown in the listing below... I did not include the lexer as it is pretty straight forward...

All hints and comments are welcomed...

Thanks for your help
===============================
grammar MyGrammar;

options {
  language = Java;
  output = AST;
  ASTLabelType = CommonTree;
}

query
  : and_expr+ EOF!
  ;

and_expr
  : (expr expr+) => default_op
  | (u1=or_expr (AND^ u2=or_expr)*);

or_expr
  : u1=expr (OR^ u2=expr)*
  ;

default_op
  : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
  ;

expr
  : (NOT^)? (operand)
  ;

operand
  : (FIELD^)(operand)
  | PREFIX
  | WORD
  | SENTENCE
  | WORDLIST
  | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
  | MUST
  | LPAREN! expr RPAREN!
  ;


From Enrique.PradosValiente at reale.es  Fri Apr 29 02:06:53 2011
From: Enrique.PradosValiente at reale.es (Prados Valiente Enrique)
Date: Fri, 29 Apr 2011 11:06:53 +0200
Subject: [antlr-interest] Error Handling Advanced
Message-ID: <931DCC17C6D7A849AEE684BF5B13E199020DDD57@BLPOSTIN.reale.net>

Hi,

I'm newbie using Antlr3.Runtime.dll C# , VS 2008, CSharp2 target
(perhaps better use vs2010 and CSharp3 target)

I need advanced error handling for use spanish in my error messages, and
do more clearly the messages to show it to the users.

I have been this page:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=23232568


how is the code of getRuleInvocationStack ??? 

please, any another advanced samples for error handling ??

thanks.


public String getErrorMessage(RecognitionException e,
                                  String[] tokenNames)
    {
        List stack = getRuleInvocationStack(e,
this.getClass().getName());
        String msg = null;
        String inputContext =
            input.LT(-3) == null ? "" : ((Tree)input.LT(-3)).getText()+"
"+
            input.LT(-2) == null ? "" : ((Tree)input.LT(-2)).getText()+"
"+
            input.LT(-1) == null ? "" : ((Tree)input.LT(-1)).getText()+"
>>>"+
            ((Tree)input.LT(1)).getText()+"<<< "+
            ((Tree)input.LT(2)).getText()+" "+
            ((Tree)input.LT(3)).getText();
        if ( e instanceof NoViableAltException ) {
           NoViableAltException nvae = (NoViableAltException)e;
           msg = " no viable alt; token="+e.token+
              " (decision="+nvae.decisionNumber+
              " state "+nvae.stateNumber+")"+
              " decision=<<"+nvae.grammarDecisionDescription+">>";
        }
        else {
           msg = super.getErrorMessage(e, tokenNames);
        }
        return stack+" "+msg+" context=..."+inputContext+"...";
    }
    public String getTokenErrorDisplay(Token t) {
        return t.toString();
    }

From ruslan_zasukhin at valentina-db.com  Fri Apr 29 08:35:57 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Fri, 29 Apr 2011 18:35:57 +0300
Subject: [antlr-interest] Is there a safe and easy way to reuse LEXER
 and PARSER objects on C target?
In-Reply-To: <16e6cea9a0a5544517ec427e0a85a717@mail.gmail.com>
Message-ID: <C9E0B58D.EA5D0%ruslan_zasukhin@valentina-db.com>

On 4/20/11 5:17 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

> This is available as the reuse() method on the input stream, lexer, and
> parser. 

What about Tree Parser?

> If used then the lexer will also reuse the tokens from the last
> run and avoid any malloc.

Good.
 
> However, you will need to use the snapshot in perforce to get that. Or
> just wait a few weeks for the next release.

* does this means that last few years, all who use ANTLR3  are not able to
reuse 
            Input/Lexer/Parser/Tree_Parser

Hard to believe :-)


* where to get this snapshot? URL?

* does exists any special example/test of this in that snapshoot?

* does exists any special example/test of this in the official archive of
ANTLR3?

* how many weeks you think?  Worse case?


* any chance to get this working using official release 3.3?

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From jimi at temporal-wave.com  Fri Apr 29 09:41:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 29 Apr 2011 09:41:36 -0700
Subject: [antlr-interest] Error Handling Advanced
In-Reply-To: <931DCC17C6D7A849AEE684BF5B13E199020DDD57@BLPOSTIN.reale.net>
References: <931DCC17C6D7A849AEE684BF5B13E199020DDD57@BLPOSTIN.reale.net>
Message-ID: <0914485030fb9e5d3c539b0d04b16458@mail.gmail.com>

Download the source code for the JavaFX compiler. Though it is in Java,
the same techniques apply and you can easily adapt to both C# and Spanish.
Just do the same thing and use a superclass rather than trying to put
things in to the .g file.

http://kenai.com/projects/openjfx-compiler

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Prados Valiente Enrique
> Sent: Friday, April 29, 2011 2:07 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Error Handling Advanced
>
> Hi,
>
> I'm newbie using Antlr3.Runtime.dll C# , VS 2008, CSharp2 target
> (perhaps better use vs2010 and CSharp3 target)
>
> I need advanced error handling for use spanish in my error messages,
> and do more clearly the messages to show it to the users.
>
> I have been this page:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=23232568
>
>
> how is the code of getRuleInvocationStack ???
>
> please, any another advanced samples for error handling ??
>
> thanks.
>
>
> public String getErrorMessage(RecognitionException e,
>                                   String[] tokenNames)
>     {
>         List stack = getRuleInvocationStack(e,
> this.getClass().getName());
>         String msg = null;
>         String inputContext =
>             input.LT(-3) == null ? "" : ((Tree)input.LT(-
> 3)).getText()+"
> "+
>             input.LT(-2) == null ? "" : ((Tree)input.LT(-
> 2)).getText()+"
> "+
>             input.LT(-1) == null ? "" : ((Tree)input.LT(-
> 1)).getText()+"
> >>>"+
>             ((Tree)input.LT(1)).getText()+"<<< "+
>             ((Tree)input.LT(2)).getText()+" "+
>             ((Tree)input.LT(3)).getText();
>         if ( e instanceof NoViableAltException ) {
>            NoViableAltException nvae = (NoViableAltException)e;
>            msg = " no viable alt; token="+e.token+
>               " (decision="+nvae.decisionNumber+
>               " state "+nvae.stateNumber+")"+
>               " decision=<<"+nvae.grammarDecisionDescription+">>";
>         }
>         else {
>            msg = super.getErrorMessage(e, tokenNames);
>         }
>         return stack+" "+msg+" context=..."+inputContext+"...";
>     }
>     public String getTokenErrorDisplay(Token t) {
>         return t.toString();
>     }
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From david.smith at cc.gatech.edu  Fri Apr 29 12:56:21 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Fri, 29 Apr 2011 15:56:21 -0400
Subject: [antlr-interest] Using ANTLRFileStream
Message-ID: <E1QFtnb-0006o8-MM@elasmtp-banded.atl.sa.earthlink.net>

I'm sure there must be a way to append a string to an 
ANTLRFileStream; I just can't figure it out.

                                 DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From sharwell at pixelminegames.com  Fri Apr 29 13:11:57 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 29 Apr 2011 15:11:57 -0500
Subject: [antlr-interest] Using ANTLRFileStream
In-Reply-To: <E1QFtnb-0006o8-MM@elasmtp-banded.atl.sa.earthlink.net>
References: <E1QFtnb-0006o8-MM@elasmtp-banded.atl.sa.earthlink.net>
Message-ID: <00b201cc06a9$b1dd1ec0$15975c40$@pixelminegames.com>

My first try would be reading it to a string and using ANTLRStringStream.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Smith
Sent: Friday, April 29, 2011 2:56 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Using ANTLRFileStream

I'm sure there must be a way to append a string to an ANTLRFileStream; I
just can't figure it out.

                                 DMS



From kirby.bohling at gmail.com  Fri Apr 29 13:31:26 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Fri, 29 Apr 2011 15:31:26 -0500
Subject: [antlr-interest] Error Handling Advanced
In-Reply-To: <0914485030fb9e5d3c539b0d04b16458@mail.gmail.com>
References: <931DCC17C6D7A849AEE684BF5B13E199020DDD57@BLPOSTIN.reale.net>
	<0914485030fb9e5d3c539b0d04b16458@mail.gmail.com>
Message-ID: <BANLkTimMS5TEF=HZ79=d0q9w4hbwQgnSXQ@mail.gmail.com>

Maybe it is easier using C#, but it always annoys me that in Java if I
implement my own superclass, I have to implement two versions (and
duplicate a bunch of goop).   Hopefully addressing that is on the
ANTLRv4 list.  I thought Terrance said he had ideas for that in the
future when it was brought up in the past.

I'd recommending delegating to a helper class if possible and you're
doing this in Java.  At least if you ever want to use AntlrWorks.
Otherwise, you'll get errors about not having the Debug class not
existing.

Kirby


On Fri, Apr 29, 2011 at 11:41 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> Download the source code for the JavaFX compiler. Though it is in Java,
> the same techniques apply and you can easily adapt to both C# and Spanish.
> Just do the same thing and use a superclass rather than trying to put
> things in to the .g file.
>
> http://kenai.com/projects/openjfx-compiler
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Prados Valiente Enrique
>> Sent: Friday, April 29, 2011 2:07 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Error Handling Advanced
>>
>> Hi,
>>
>> I'm newbie using Antlr3.Runtime.dll C# , VS 2008, CSharp2 target
>> (perhaps better use vs2010 and CSharp3 target)
>>
>> I need advanced error handling for use spanish in my error messages,
>> and do more clearly the messages to show it to the users.
>>
>> I have been this page:
>>
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=23232568
>>
>>
>> how is the code of getRuleInvocationStack ???
>>
>> please, any another advanced samples for error handling ??
>>
>> thanks.
>>
>>
>> public String getErrorMessage(RecognitionException e,
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String[] tokenNames)
>> ? ? {
>> ? ? ? ? List stack = getRuleInvocationStack(e,
>> this.getClass().getName());
>> ? ? ? ? String msg = null;
>> ? ? ? ? String inputContext =
>> ? ? ? ? ? ? input.LT(-3) == null ? "" : ((Tree)input.LT(-
>> 3)).getText()+"
>> "+
>> ? ? ? ? ? ? input.LT(-2) == null ? "" : ((Tree)input.LT(-
>> 2)).getText()+"
>> "+
>> ? ? ? ? ? ? input.LT(-1) == null ? "" : ((Tree)input.LT(-
>> 1)).getText()+"
>> >>>"+
>> ? ? ? ? ? ? ((Tree)input.LT(1)).getText()+"<<< "+
>> ? ? ? ? ? ? ((Tree)input.LT(2)).getText()+" "+
>> ? ? ? ? ? ? ((Tree)input.LT(3)).getText();
>> ? ? ? ? if ( e instanceof NoViableAltException ) {
>> ? ? ? ? ? ?NoViableAltException nvae = (NoViableAltException)e;
>> ? ? ? ? ? ?msg = " no viable alt; token="+e.token+
>> ? ? ? ? ? ? ? " (decision="+nvae.decisionNumber+
>> ? ? ? ? ? ? ? " state "+nvae.stateNumber+")"+
>> ? ? ? ? ? ? ? " decision=<<"+nvae.grammarDecisionDescription+">>";
>> ? ? ? ? }
>> ? ? ? ? else {
>> ? ? ? ? ? ?msg = super.getErrorMessage(e, tokenNames);
>> ? ? ? ? }
>> ? ? ? ? return stack+" "+msg+" context=..."+inputContext+"...";
>> ? ? }
>> ? ? public String getTokenErrorDisplay(Token t) {
>> ? ? ? ? return t.toString();
>> ? ? }
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From asicaddress at gmail.com  Fri Apr 29 15:42:25 2011
From: asicaddress at gmail.com (A Z)
Date: Fri, 29 Apr 2011 17:42:25 -0500
Subject: [antlr-interest] "Balanced Matching" and ANTLR
In-Reply-To: <4DB9ABF5.2080802@aol.com>
References: <4DB9ABF5.2080802@aol.com>
Message-ID: <BANLkTi=P8TvGNDb2teqXhjZ=R+B1O7JbQQ@mail.gmail.com>

Is this what you mean?

module_body :
  (~(K_MODULE | K_ENDMODULE) | (K_MODULE module_body K_ENDMODULE))+;

module_declaration :
  key=K_MODULE lifetime? var=identifier module_body post=K_ENDMODULE (COLON
pident=identifier)?;

In the code below, the rule module_declaration will match only the outermost
module 'outside'.

module outside;

  module inside1;
  endmodule : inside1

  module inside2;
  endmodule

endmodule




On Thu, Apr 28, 2011 at 1:03 PM, Udo Weik <WeikEngOff at aol.com> wrote:

> Hello,
>
> I'm just looking for common approaches for "Balanced Matching" with ANTLR,
> e. g. the typical problem for extracting methods/functions/procedures
> in source files. Any hints are highly appreciated.
>
>
> Many thanks and greetings
> Udo
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From court at infiauto.com  Sat Apr 30 08:34:53 2011
From: court at infiauto.com (Courtney Falk)
Date: Sat, 30 Apr 2011 11:34:53 -0400
Subject: [antlr-interest] Rematching AST Nodes
Message-ID: <4DBC2C1D.6000409@infiauto.com>

  I'm not certain this is a feasible strategy.  Please let me know if 
I'm working on something that's not possible.

I have a grammar, Alpha, that generates an AST as the first processing 
stage.  What I'm trying to do is use a tree grammar, Beta, that looks at 
the AST nodes and attempts to match them against a second, different 
lexical pattern.

The grammars might look like:

//-----

grammar Alpha

options { ASTLabelType=CommonTree; output=AST; }

tokens { ROOT; MATCH; DONTMATCH; }

root : subnodes+ -> ^(ROOT subnodes+);

subnodes : numbers | characters;

numbers : NUMBERS -> ^(DONTMATCH NUMBERS);

characters : CHARACTERS -> ^(MATCH CHARACTERS);

WHITESPACE : (' ' | '\r' | '\n' | '\t')+ { $channel = HIDDEN; }

NUMBERS : ('0'..'9')+;

CHARACTERS : ('a'..'z')+;

//-----

tree grammar Beta;

options { filter=true; tokenVocab=Alpha; }

root : ^(ROOT subnodes+);

subnode : numbers | characters;

numbers : ^(DONTMATCH NUMBERS) { System.out.println("Don't match"); };

characters : ^(MATCH rematch);

rematch : 'aaa' { System.out.println("Triple A"); }

//-----

I can't seem to find of way of making the "rematch" rule work.


Courtney Falk
court at infiauto.com

From cummings at kjchome.homeip.net  Sat Apr 30 17:33:47 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sat, 30 Apr 2011 20:33:47 -0400
Subject: [antlr-interest] Rematching AST Nodes
In-Reply-To: <4DBC2C1D.6000409@infiauto.com>
References: <4DBC2C1D.6000409@infiauto.com>
Message-ID: <4DBCAA6B.10509@kjchome.homeip.net>

On 04/30/2011 11:34 AM, Courtney Falk wrote:
>   I'm not certain this is a feasible strategy.  Please let me know if 
> I'm working on something that's not possible.
> 
> I have a grammar, Alpha, that generates an AST as the first processing 
> stage.  What I'm trying to do is use a tree grammar, Beta, that looks at 
> the AST nodes and attempts to match them against a second, different 
> lexical pattern.
> 
> The grammars might look like:
> 
> //-----
> 
> grammar Alpha
> 
> options { ASTLabelType=CommonTree; output=AST; }
> 
> tokens { ROOT; MATCH; DONTMATCH; }
> 
> root : subnodes+ -> ^(ROOT subnodes+);
> 
> subnodes : numbers | characters;
> 
> numbers : NUMBERS -> ^(DONTMATCH NUMBERS);
> 
> characters : CHARACTERS -> ^(MATCH CHARACTERS);
> 
> WHITESPACE : (' ' | '\r' | '\n' | '\t')+ { $channel = HIDDEN; }
> 
> NUMBERS : ('0'..'9')+;
> 
> CHARACTERS : ('a'..'z')+;
> 
> //-----
> 
> tree grammar Beta;
> 
> options { filter=true; tokenVocab=Alpha; }
> 
> root : ^(ROOT subnodes+);
> 
> subnode : numbers | characters;
> 
> numbers : ^(DONTMATCH NUMBERS) { System.out.println("Don't match"); };
> 
> characters : ^(MATCH rematch);
> 
> rematch : 'aaa' { System.out.println("Triple A"); }
> 
> //-----
> 
> I can't seem to find of way of making the "rematch" rule work.

You grammar doesn't have an 'aaa' token.  It does have CHARACTERS
tokens.  If 'aaa' is special, then you need to match it in your grammar
like a keyword.  Then you can reference it in your tree grammar.
Otherwise you will need to match any CHARACTERS token in your rematch
rule and do what you need to when the value is 'aaa' and do something
else when it is not.

Your tree grammars can only work with the tokens your lexers produce
(and the same set that your parsers use as well).

> Courtney Falk
> court at infiauto.com

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From david.smith at cc.gatech.edu  Sat Apr 30 17:45:12 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Sat, 30 Apr 2011 20:45:12 -0400
Subject: [antlr-interest] Follow-up observation
Message-ID: <E1QGKmf-0007EC-Rh@elasmtp-banded.atl.sa.earthlink.net>

Not sure how to reference my previous post, but I have a simple 
suggestion.  I could achieve what i want (appending strings to 
ANTLRFileStream) by extending the ANTLRFileStream, but you can't 
extend the version currently in the jar file because it doesn't have 
a default constructor(public ANTLRFileStream(){...};

                                 DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From fernando at rti.com  Sat Apr 30 17:47:56 2011
From: fernando at rti.com (Fernando Sanchez)
Date: Sat, 30 Apr 2011 17:47:56 -0700
Subject: [antlr-interest] Change node content in AST tree generated with
	ANTLRWorks
Message-ID: <6218EBA14241FD40A4094C1C4F45E5CD327FEC1AF4@SYNC.rti.com>

Hi,

Is there a way to customize the text associated with the nodes of the AST tree generated with ANTLRWorks?. I tried to overwrite the toString method in my Tree node (inherit from CommonTree) without success.

Regards,
    Fernando

