From shalini.sh at gmail.com  Fri Apr  1 00:51:05 2005
From: shalini.sh at gmail.com (Shalini Sharma)
Date: Fri Apr  1 00:51:08 2005
Subject: [antlr-interest] YACC LEX
In-Reply-To: <16972.10141.461903.205133@despot.non.net>
References: <696675100503310018a86b7b5@mail.gmail.com>
	<16972.10141.461903.205133@despot.non.net>
Message-ID: <6966751005040100511692a89b@mail.gmail.com>

Hi

shift and reduce conflict's don't matter if we don't have precedence
in operators i suppose . but non determinism leads to more problems .
correct me if i am wrong .




On Mar 31, 2005 10:08 PM, John D. Mitchell <johnm-antlr@non.net> wrote:
> >>>>> "Shalini" == Shalini Sharma <shalini.sh@gmail.com> writes:
> > why there is no non determinism in YACC parser . what kind of look ahead
> > is used there. and why in lexer look ahead is required can't every NFA be
> > converted into DFA
> 
> There are non-determinisms possible in all parser/lexer generators. LR
> style parser generators like YACC suffer from shift-reduce and
> reduce-reduce conflicts.  There's a lot of information on this floating
> around.
> 
> Have fun,
>        John
>
From shalini.sh at gmail.com  Fri Apr  1 04:58:46 2005
From: shalini.sh at gmail.com (Shalini Sharma)
Date: Fri Apr  1 04:58:48 2005
Subject: [antlr-interest] AST OFF OPTION OF ANTLR
Message-ID: <6966751005040104585825ef1b@mail.gmail.com>

I am using AST off option of ANTLR .

name : 
         identifier 
  i want to extract identifier name here i want to know how 

 
;

identifier 
:IDENT
From shalini.sh at gmail.com  Fri Apr  1 06:08:27 2005
From: shalini.sh at gmail.com (Shalini Sharma)
Date: Fri Apr  1 06:08:31 2005
Subject: [antlr-interest] Block Returning Value in ANTLR
Message-ID: <6966751005040106081243abee@mail.gmail.com>

range_opt returns [pair<int,int> xy]
:
	(xy= range)?
	
	;

i want to specify xy= some deafult value in case range is empty
From endigitalmind at yahoo.co.uk  Fri Apr  1 06:29:15 2005
From: endigitalmind at yahoo.co.uk (Phil Ritchie)
Date: Fri Apr  1 06:29:19 2005
Subject: [antlr-interest] Help with lexical nondeterminism.
Message-ID: <20050401142915.58243.qmail@web25806.mail.ukl.yahoo.com>

I have a file format thus:
 
----- START -----
----- END -----
 
I have successfully created a grammar and application that can parse this format. But if my file format becomes:
 
----- START -----
any Unicode character - i.e. ('\u0000'..'\uffff')+
----- END -----
 
I enter all kinds of nondeterminism. Could someone point me at a way of handling this? I can understand that my problem lies in not having a unique sequence that differentiates general text and the END banner.

Send instant messages to your online friends http://uk.messenger.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050401/8f4774e2/attachment.html
From ewbank at gmail.com  Fri Apr  1 06:53:49 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Apr  1 06:53:51 2005
Subject: [antlr-interest] Block Returning Value in ANTLR
In-Reply-To: <6966751005040106081243abee@mail.gmail.com>
References: <6966751005040106081243abee@mail.gmail.com>
Message-ID: <dd3a065f05040106536fddba9d@mail.gmail.com>

There's several ways to specify a default for xy:

    /**
     * initialize in declaration
     */
    range_opt returns [pair<int,int> xy = ... ]
    :
        ( xy=range )?
    ;


    /**
     * initialize in preamble
     */
    range_opt returns [pair<int,int> xy]
    { xy = ... ; }
    :
        ( xy=range ) ?
    ;

    /**
     * initialize in alternative - note that
     * the ()? is replaced with ( | )
     */
    range_opt returns [pair<int,int> xy]
    :
        ( /* nothing here */
            { xy = ...; }
        | xy=range
        )
    ;

On Apr 1, 2005 9:08 AM, Shalini Sharma <shalini.sh@gmail.com> wrote:
> range_opt returns [pair<int,int> xy] : (xy=range)? ;
> 
> i want to specify xy= some deafult value in case range is empty
From ewbank at gmail.com  Fri Apr  1 07:14:55 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Apr  1 07:14:59 2005
Subject: [antlr-interest] AST OFF OPTION OF ANTLR
In-Reply-To: <6966751005040104585825ef1b@mail.gmail.com>
References: <6966751005040104585825ef1b@mail.gmail.com>
Message-ID: <dd3a065f050401071433221e8c@mail.gmail.com>

Here's a few choices (C++ mode "on" :-)

    /****************************************
     * Use a return value
     */
    name
    { string myName; }
    :
        myName=identifier { ...  = myName; }
    ;

    identifier
    returning [string s]
    : id:IDENT { s = id->getText(); }
    ;


    /****************************************
     * Use a reference'd argument
     */
    name
    { string myName; }
    : identifier[myName] { ...  = myName; }
    ;

    identifier [string & s]
    : id:IDENT { s = id->getText(); }
    ;

    /****************************************
     * Bleah ;-)
     * Use a class member - requires definition
     * of myName in the definitions block just
     * after the
     *      XX extends YY
     * statement.
     *
     * This does mean only one at a time, so you
     * need to be careful of something that has two
     * identifiers in one production.
     */
    name
    : identifier { ... = myName; }
    ;

    identifier
    : id:IDENT { myName = id->getText(); }
    ;


On Apr 1, 2005 7:58 AM, Shalini Sharma <shalini.sh@gmail.com> wrote:
> I am using AST off option of ANTLR .
> name : identifier ;
>   i want to extract identifier name here i want to know how
> identifier : IDENT ;
From johnm-antlr at non.net  Fri Apr  1 08:29:54 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Fri Apr  1 08:29:35 2005
Subject: [antlr-interest] YACC LEX
In-Reply-To: <6966751005040100511692a89b@mail.gmail.com>
References: <696675100503310018a86b7b5@mail.gmail.com>
	<16972.10141.461903.205133@despot.non.net>
	<6966751005040100511692a89b@mail.gmail.com>
Message-ID: <16973.30466.722074.635136@despot.non.net>

>>>>> "Shalini" == Shalini Sharma <shalini.sh@gmail.com> writes:
[...]

> shift and reduce conflict's don't matter if we don't have precedence in
> operators i suppose . but non determinism leads to more problems .
> correct me if i am wrong .

Those "conflicts" *are* non-determinisms.  YACC just has defaults to break
some of those indeterminancies that people rely on instead of e.g., fixing
the non-determinism.

Take care,
	John


From atripp at comcast.net  Fri Apr  1 08:30:37 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Apr  1 08:30:40 2005
Subject: [antlr-interest] Print the actual code after building AST.
Message-ID: <424D772D.3090706@comcast.net>

>
>
> hi,
> I have built a tree parser for a sample code.Thanks for your 
> suggestions Bryan ,I have corrected the mistakes.I want to print the 
> code after adding actions to it.
> As shown in my parser class ,I am indenting the 'map statements' .Now 
> I want to print the resultant code.
> How do i do it?I saw the java.g ...but it does not print the whole 
> inputstream after parsing.
>

Under the "file sharing" section on antlr.org, see the JavaEmitter by 
Terence for a treewalker that pretty-prints a Java AST.
Of, if you prefer, see my JavaEmitter which does the same thing, but 
walks the tree "by hand", rather than
using an ANTLR-generated treewalker.

Andy


From atripp at comcast.net  Fri Apr  1 08:31:29 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Apr  1 08:31:36 2005
Subject: [antlr-interest] wow; talk about premature optimization
Message-ID: <424D7761.2@comcast.net>

>
>
>> On Mar 30, 2005, at 8:22 PM, Scott Stanchfield wrote:
>> > Next time, remember -- write it for good design, then profile, then 
>> > tweak...
>> > You'll rarely outguess a compiler & optimizer
>> 
>> Without doing the bytecodes at some point, how could one 
>> compare?  
>
>History, my friend. People have been attempting to do this for years and the
>compilers always win (or at least they do after the compiler writers have
>had a year or two to optimize).
>

Yup. What's really sad is that often these people who are so clever that 
they think
they can out-optimize a compiler write all that code by hand and never 
go back to
do thorough benchmarking to see if they've accomplished anything. Then they
keep their hand-written code, and years later someone else is sick of 
maintaining
it, so takes out the optimization and...

Poof! It's just as fast any maybe faster!

Brian Kernighan once said "If you ever come across a section of your 
code that you find
particularly clever, strike it out and do it again". I'm not sure if 
that's the exact quote,
but it's pretty close.

Andy :)


From sunshine at public.kherson.ua  Fri Apr  1 09:00:41 2005
From: sunshine at public.kherson.ua (Ruslan Zasukhin)
Date: Fri Apr  1 09:00:47 2005
Subject: [antlr-interest] Any predictions on speed of ANTLR 3.0 
Message-ID: <BE7358E9.2D608%sunshine@public.kherson.ua>

Hi All,

I wonder if today somebody can give prediction what we can expect from ANTLR
3.0 ?

Will it be in 2 times faster of ANTLR 2.7 ?

Or 5 time?  Or 10 times ?

Approximately. 


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From ewbank at gmail.com  Fri Apr  1 12:04:49 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Apr  1 12:04:52 2005
Subject: [antlr-interest] wow; talk about premature optimization
In-Reply-To: <424D7761.2@comcast.net>
References: <424D7761.2@comcast.net>
Message-ID: <dd3a065f05040112041ac48aa2@mail.gmail.com>

Brian Kernighan's Programming Style Tips
   1. Say what you mean, simply and directly.
   2. Use the ``telephone test'' for readability.
   3. Write clearly - don't be too clever.
   4. Don't use conditional expressions as a substitute for a logical
expression.
   5. Parenthesize to avoid ambiguity.
   6. Each time you make a test, do something.
   7. Follow each decision as closely as possible with its associated action.
   8. Use the good features of a language; avoid the bad ones.
   9. Capture regularity in control flow, irregularity in data.
  10. Each module should do one thing well.
  11. Make sure comments and code agree.
  12. Don't just echo the code with comments - make every comment count.
  13. Don't comment bad code - rewrite it.
  14. Use symbolic constants for magic numbers.
  15. Watch out for side effects and order of evaluation.
  16. Macros are not functions.
  17. Watch out for off-by-one errors.
  18. Test programs at their boundaries.
  19. Program defensively.
  20. Make sure input cannot violate the limits of the program.
  21. Make it right before you make it faster.
  22. Keep it right when you make it faster.
  23. Don't sacrifice clarity for small gains in ``efficiency.''
  24. Don't stop with your first draft.

[From The Elements of Programming Style, Kernighan & Plauger, McGraw-Hill, 1978]

Rob Pike's Rules Regarding Complexity

Most programs are too complicated - that is, more complex than they
need to be to solve their problems efficiently. Why? Mostly it's
because of bad design, but I will skip that issue here because it's a
big one. But programs are often complicated at the microscopic level,
and that is something I can address here.

   1. You can't tell where a program is going to spend its time.
Bottlenecks occur in surprising places, so don't try to second guess
and put in a speed hack until you've proven that's where the
bottleneck is.
   2. Measure. Don't tune for speed until you've measured, and even
then don't unless one part of the code overwhelms the rest.
   3. Fancy algorithms are slow when n is small, and n is usually
small. Fancy algorithms have big constants. Until you know that n is
frequently going to be big, don't get fancy. (Even if n does get big,
use Rule 2 first.)
   4. Fancy algorithms are buggier than simple ones, and they're much
harder to implement. Use simple algorithms as well as simple data
structures.
   5. Data dominates. If you've chosen the right data structures and
organized things well, the algorithms will almost always be
self-evident. Data structures, not algorithms, are central to
programming.
From scott at javadude.com  Sat Apr  2 17:13:31 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Apr  2 17:13:38 2005
Subject: [antlr-interest] RE: ANTLR plugin
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B290613A5@webmail.starthis.com>
Message-ID: <20050403004813.377FF290F1E@new.knowspam.net>

Found and fixed. this will be in the next release of the antlr-eclipse
plugin (coming reaaaaaaally soon now! I'm trying to wrap it up this
weekend.)

-- Scott

> -----Original Message-----
> From: Bharath Sundararaman [mailto:Bharath.Sundararaman@starthis.com] 
> Sent: Saturday, March 19, 2005 2:58 PM
> To: Scott Stanchfield; 'antlr-interest' Interest
> Subject: ANTLR plugin
> 
> Hi Scott,
> 
> I use Eclipse 3.0.1 and ANTLR plug-in 3.0.5 on Windows XP. I 
> noticed after sending the e-mail that my parser grammar 
> worked fine while my tree parser grammar was not. I restored 
> my tree parser grammar to the previous version I had stored 
> in my repository and it worked. 
> 
> The issue however is this:
> 
> 1) The grammar which refused to compile and yield java code 
> was working the previous night and there were no 
> modifications to it that could have caused the problem.
>  
> 2) Even if I had made a mistake (For eg. If I had typed in an 
> extra letter while doing ctrl+s to save changes the previous 
> night), the grammar should have displayed the error. Au 
> contraire, it behaved just like a text file and did not show 
> any errors even when I deliberately changed the keyword 
> "return" to "retrn". 
> 
> 3) Unfortunately, I will not be able to send you the grammar 
> due to NDA.
> Please bear with me.
> 
> Thanks for the help. I will be looking forward to the next version -].
> 
> Bharath.




From denisignatovich at yahoo.com  Sun Apr  3 03:26:57 2005
From: denisignatovich at yahoo.com (denisignatovich)
Date: Sun Apr  3 10:43:12 2005
Subject: [antlr-interest] error
Message-ID: <d2ogdh+ctmt@eGroups.com>


Hi,
 
First of all, greatly admire Antlr and the work that went into it;
second, have a question:
 
Compiling (after writing it under Cygwin and successfully testing the
parser) under VC++ .NET 2003, with Antlr 2.7.4 (2.7.5 doesn't compile
because of something related to overwriting virtual functions,
searched all over and could not find anything, but does compile under
Cygwin). After running the debug version, it crashes on
newParser.script() command:
 
ifstream file ("C:\mySource\test.xml");

myLexer lexer (file);

myParser newParser (lexer);

try {

newParser.script();

....

A more specific call stack is:

> myProg.exe!antlr::RefCount<antlr::LexerInputState>::operator->() 
Line 62 + 0xd C++
  myProg.exe!antlr::CharScanner::resetText()  Line 308 + 0xb C++
  myProg.exe!myLexer::nextToken()  Line 42 C++
  myProg.exe!antlr::TokenBuffer::fill()  Line 50 + 0x19 
  myProg.exe!antlr::TokenBuffer::LA()  Line 58 
  myProg.exe!antlr::LLkParser::LA(unsigned int i=0x00000001)  Line 47 C++
  myProg.exe!antlr::Parser::match()  Line 101 + 0xf 
  myProg.exe!myParser::script()  Line 39 C++
 myProg.exe!myMainFunction()  Line 1362 C++  ------------->>>>>>>
parser declaration, code shown above


in refcount.hpp, it crashes on
 
 T* get() const
 {
>  return ref ? ref->ptr : 0;
 }


in charscanner.hpp

 virtual void resetText()
 {
  text = "";
>  inputState->tokenStartColumn = inputState->column;
  inputState->tokenStartLine = inputState->line;
 }

It tries to get "ptr" value, it's allocated, but memory location is
junk...

I would greatly appreciate any help/comments/suggestions.

Sincerely,

Denis A Ignatovich




From shalini.sh at gmail.com  Sun Apr  3 19:53:10 2005
From: shalini.sh at gmail.com (Shalini Sharma)
Date: Sun Apr  3 19:53:13 2005
Subject: [antlr-interest] antlr binaries for linux
Message-ID: <696675100504031953b379ab5@mail.gmail.com>

how can i create antlr binaries for solaris and linux
From shalini.sh at gmail.com  Sun Apr  3 20:38:56 2005
From: shalini.sh at gmail.com (Shalini Sharma)
Date: Sun Apr  3 20:38:59 2005
Subject: [antlr-interest] TokenStreamReWriteEngine
Message-ID: <69667510050403203815f7f707@mail.gmail.com>

while creating static libraries for windows and linux . 

antlr2-7.5
 i get error on TokenStreamReWriteEngine.cpp
so i excluded this file as i think that it may not be needed and
created static library for windows and my parser works fine (as far as
i have tested).  now i am going to do it for linux . as we have to
make sure that whatever we do compiles with gcc ,vc6.0
and solaris compiler .

i want to know what is the impact of removing this file. 

and i don't use automatic AST generation as it is too generic for my work .

what is the minimal set of files in ANTLR release i can take . 

regards

Shalini
From johnm-antlr at non.net  Sun Apr  3 21:03:36 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Sun Apr  3 21:03:16 2005
Subject: [antlr-interest] antlr binaries for linux
In-Reply-To: <696675100504031953b379ab5@mail.gmail.com>
References: <696675100504031953b379ab5@mail.gmail.com>
Message-ID: <16976.48280.626197.593152@despot.non.net>

>>>>> "Shalini" == Shalini Sharma <shalini.sh@gmail.com> writes:
> how can i create antlr binaries for solaris and linux

What do you mean?  Are you talking about binary executables of the Antlr
Tool itself or binaries of generated code (in what language?) or something
else?

For the first, you can try things like GCJ from GNU.
http://gcc.gnu.org/java/

Hope this helps,
		John
From rhjk37854 at ntlworld.com  Sun Apr  3 21:27:56 2005
From: rhjk37854 at ntlworld.com (BC)
Date: Sun Apr  3 21:28:11 2005
Subject: [antlr-interest] C++ Parser
Message-ID: <001101c538ce$b34f6330$6400a8c0@lkajsvuuqxq6ce>

Newbie question: with the C++ grammar, http://www.antlr.org/grammar/cpp do I have to go through it and add tree-building code if I want a parse tree?

Brett
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050404/d8616cd3/attachment.html
From petasisg at yahoo.gr  Mon Apr  4 01:25:01 2005
From: petasisg at yahoo.gr (Georgios Petasis)
Date: Mon Apr  4 01:25:09 2005
Subject: [antlr-interest] How to scan (or filter) with a CFG grammar?
Message-ID: <000d01c538ef$cc3aec40$0100a8c0@aias>

Dear list members,

I want to build a "filter" (like unix sed) but by using a grammar.
I have seen in the examples of the distribution, that there
are some "filter" examples, but they seem to only use
the lexer. (I have understood that the lexer is also
an LL(k) parser, but I don't know how to use it :-))

I have tried also to read the documentation, but I am still
confused. What I want to do is convert a parser into a
matcher. For example, if I take the grammar for
the "calc" example, how can I modify it to locate
expressions in free text, instead of giving expressions
to get whether they are grammatical or not?
Can this be done? Are only grammar changes needed,
or do I have to modify the code that calls the parser
accordingly? (I am using C++ as the target language).

Are there any examples of such a use I can see?

Kind regards,

George Petasis

From liigo at hotpop.com  Mon Apr  4 05:37:44 2005
From: liigo at hotpop.com (liigo)
Date: Mon Apr  4 05:37:51 2005
Subject: [antlr-interest] How to run/compile the example code of
	tinyc/tinybasic/pascal or other examples of antlr?
Message-ID: <op.sopj06iio3wyor@prog6>

Hi, all

I have found a lot of examples of antlr, such as tinyc/tinybasic/pascal...
and i find the simple programs writen by tinyc/tinybasic/pascal...
but i do not find the way to run or compile the programs.

please help me, thanks!

liigo

From PKronenberg at technicacorp.com  Mon Apr  4 07:48:18 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Mon Apr  4 07:50:15 2005
Subject: [antlr-interest] Antlr-eclipse plugin
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547AABAB@mail-hq1.Technica1.com>

I posted a message on the antlr plugin page on sourceforge, but that
doesn't seem to have too much activity.  I'm trying to get more info on
the plugin.  It's not really clear what pieces I need in order to
install it, especially on Eclipse 3.1.  I'm already running antlr 2.7.5

Thanks,
Peter


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050404/20aa0731/attachment.html
From jim.crafton at gmail.com  Mon Apr  4 08:17:12 2005
From: jim.crafton at gmail.com (Jim Crafton)
Date: Mon Apr  4 08:17:18 2005
Subject: [antlr-interest] standard C parser for C++
Message-ID: <e8813850050404081759b65d0e@mail.gmail.com>

Does anyone know of a decent C grammar built using Antlr for C++? I
have tried, for most of the weekend, to fiddle around with the C
grammar in the /grammar/cgram/grammars/StdCParser.g, but have failed
to get it to work. It either spins in an infinite loop, or, if i take
out ALL the user functions, it ends up not being able to parse the
following:

int foo( int v );

It will crap out with an error on the LPAREN. Has anyone else had any
success? Does it work well in it's native Java form?

I am asking because I would like to experiment with the following idea:

I would like to make a pre-proccessor, that takes a file written in a
strict C super set, and that adds the following features:
classes 
bounds checking on arrays
a UTF 16 string type with length
exceptions
There's more to it than this, but this is the basic idea.

The processor would then spit out standard C, which could then be fed
to the C compiler of your choice.

Thanks 

Jim
From liigo at hotpop.com  Mon Apr  4 08:19:20 2005
From: liigo at hotpop.com (liigo)
Date: Mon Apr  4 08:26:26 2005
Subject: [antlr-interest] How to make a new programme language?
Message-ID: <op.sopriiqco3wyor@prog6>

I want to make my simplest programme language, and use it to write a  
simplest program,
How I would do?

Can you give me a example?



From johnm-antlr at non.net  Mon Apr  4 09:04:49 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Apr  4 09:04:31 2005
Subject: [antlr-interest] standard C parser for C++
In-Reply-To: <e8813850050404081759b65d0e@mail.gmail.com>
References: <e8813850050404081759b65d0e@mail.gmail.com>
Message-ID: <16977.26017.197013.863442@despot.non.net>

>>>>> "Jim" == Jim Crafton <jim.crafton@gmail.com> writes:
[...]

> It will crap out with an error on the LPAREN. Has anyone else had any
> success? Does it work well in it's native Java form?

Yes, the Java version has been used on some real projects.


> I am asking because I would like to experiment with the following idea:

> I would like to make a pre-proccessor, that takes a file written in a
> strict C super set, and that adds the following features: classes bounds
> checking on arrays a UTF 16 string type with length exceptions There's
> more to it than this, but this is the basic idea.

> The processor would then spit out standard C, which could then be fed to
> the C compiler of your choice.

Yes, we've done that sort of thing for a couple of big clients.

Take care,
	John
From mail at martin-probst.com  Mon Apr  4 10:40:36 2005
From: mail at martin-probst.com (Martin Probst)
Date: Mon Apr  4 10:40:42 2005
Subject: [antlr-interest] Antlr-eclipse plugin
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547AABAB@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547AABAB@mail-hq1.Technica1.com>
Message-ID: <1112636436.23576.1.camel@narr.homeip.net>

Hi,

Am Montag, den 04.04.2005, 10:48 -0400 schrieb Peter Kronenberg:
> I posted a message on the antlr plugin page on sourceforge, but that
> doesn't seem to have too much activity.  I'm trying to get more info
> on the plugin.  It's not really clear what pieces I need in order to
> install it, especially on Eclipse 3.1.  I'm already running antlr
> 2.7.5

I just installed it today using the update site. I don't know about
support for antlr 2.7.5, at least 2.7.4 is included. I also didn't try
anything except the editor and the outline etc. (e.g., the UI) - but
that works well.

Regards,
Martin

From ric.klaren at gmail.com  Mon Apr  4 11:24:08 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Apr  4 11:24:11 2005
Subject: [antlr-interest] TokenStreamReWriteEngine
In-Reply-To: <69667510050403203815f7f707@mail.gmail.com>
References: <69667510050403203815f7f707@mail.gmail.com>
Message-ID: <42518648.8030509@gmail.com>

Shalini Sharma wrote:
> while creating static libraries for windows and linux . 
> 
> antlr2-7.5
>  i get error on TokenStreamReWriteEngine.cpp
> so i excluded this file as i think that it may not be needed and
> created static library for windows and my parser works fine (as far as
> i have tested).  now i am going to do it for linux . as we have to
> make sure that whatever we do compiles with gcc ,vc6.0
> and solaris compiler .

It was the first release for that file. Multiple problems have been 
reported with it.

> i want to know what is the impact of removing this file. 

If you don't know what it is you won't miss it ;)

> what is the minimal set of files in ANTLR release i can take . 

Anything needed to compile stuff I have no precise information. Depends 
on what you use.

Cheers,

Ric
From ric.klaren at gmail.com  Mon Apr  4 11:30:00 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Apr  4 11:30:02 2005
Subject: [antlr-interest] C++ Parser
In-Reply-To: <001101c538ce$b34f6330$6400a8c0@lkajsvuuqxq6ce>
References: <001101c538ce$b34f6330$6400a8c0@lkajsvuuqxq6ce>
Message-ID: <425187A8.1020808@gmail.com>

BC wrote:
> Newbie question: with the C++ grammar, http://www.antlr.org/grammar/cpp do I have to go through it and add tree-building code if I want a parse tree?

Yes.

Cheers,

Ric
From ric.klaren at gmail.com  Mon Apr  4 11:46:13 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Apr  4 11:46:17 2005
Subject: [antlr-interest] antlr binaries for linux
In-Reply-To: <696675100504031953b379ab5@mail.gmail.com>
References: <696675100504031953b379ab5@mail.gmail.com>
Message-ID: <42518B75.5070109@gmail.com>

Shalini Sharma wrote:
> how can i create antlr binaries for solaris and linux

The out of the box native binaries got lost in the new configuration 
stuff. But is easy enough to do by hand. You need to compile all the 
.java files except the ones refering to swing (some in the antlr.debug 
package)

Multiple recipes have been posted in the past. I'll attach one probably 
slightly modified from the original.

Cheers,

Ric
-------------- next part --------------
# Use this file to compile the antlr tool in a static executable using the
# GNU gcj compiler.
# Author:	Luca Di Gaspero (luca.digaspero@diegm.uniud.it)
#		http://www.diegm.uniud.it/digaspero/
# Usage:	make -f makefile.gcj
GCJ = gcj
COMPOPTS =
SOURCES=antlr/ANTLRError.java \
antlr/ANTLRException.java \
antlr/ANTLRGrammarParseBehavior.java \
antlr/ANTLRHashString.java \
antlr/ANTLRLexer.java \
antlr/ANTLRParser.java \
antlr/ANTLRStringBuffer.java \
antlr/ANTLRTokdefLexer.java \
antlr/ANTLRTokdefParser.java \
antlr/ANTLRTokdefParserTokenTypes.java \
antlr/ANTLRTokenTypes.java \
antlr/ASTFactory.java \
antlr/ASTIterator.java \
antlr/ASTNULLType.java \
antlr/ASTPair.java \
antlr/ASTVisitor.java \
antlr/ActionElement.java \
antlr/ActionTransInfo.java \
antlr/Alternative.java \
antlr/AlternativeBlock.java \
antlr/AlternativeElement.java \
antlr/BaseAST.java \
antlr/BlockContext.java \
antlr/BlockEndElement.java \
antlr/BlockWithImpliedExitPath.java \
antlr/ByteBuffer.java \
antlr/CSharpBlockFinishingInfo.java \
antlr/CSharpCharFormatter.java \
antlr/CSharpCodeGenerator.java \
antlr/CSharpNameSpace.java \
antlr/CharBuffer.java \
antlr/CharFormatter.java \
antlr/CharLiteralElement.java \
antlr/CharQueue.java \
antlr/CharRangeElement.java \
antlr/CharScanner.java \
antlr/CharStreamException.java \
antlr/CharStreamIOException.java \
antlr/CodeGenerator.java \
antlr/CommonAST.java \
antlr/CommonToken.java \
antlr/CppBlockFinishingInfo.java \
antlr/CppCharFormatter.java \
antlr/CppCodeGenerator.java \
antlr/DefaultFileLineFormatter.java \
antlr/DefaultToolErrorHandler.java \
antlr/DefineGrammarSymbols.java \
antlr/DiagnosticCodeGenerator.java \
antlr/DocBookCodeGenerator.java \
antlr/DumpASTVisitor.java \
antlr/ExceptionHandler.java \
antlr/ExceptionSpec.java \
antlr/FileCopyException.java \
antlr/FileLineFormatter.java \
antlr/Grammar.java \
antlr/GrammarAnalyzer.java \
antlr/GrammarAtom.java \
antlr/GrammarElement.java \
antlr/GrammarSymbol.java \
antlr/HTMLCodeGenerator.java \
antlr/ImportVocabTokenManager.java \
antlr/InputBuffer.java \
antlr/JavaBlockFinishingInfo.java \
antlr/JavaCharFormatter.java \
antlr/JavaCodeGenerator.java \
antlr/LLkAnalyzer.java \
antlr/LLkGrammarAnalyzer.java \
antlr/LLkParser.java \
antlr/LexerGrammar.java \
antlr/LexerSharedInputState.java \
antlr/Lookahead.java \
antlr/MakeGrammar.java \
antlr/MismatchedCharException.java \
antlr/MismatchedTokenException.java \
antlr/NameSpace.java \
antlr/NoViableAltException.java \
antlr/NoViableAltForCharException.java \
antlr/OneOrMoreBlock.java \
antlr/Parser.java \
antlr/ParserGrammar.java \
antlr/ParserSharedInputState.java \
antlr/PreservingFileWriter.java \
antlr/RecognitionException.java \
antlr/RuleBlock.java \
antlr/RuleEndElement.java \
antlr/RuleRefElement.java \
antlr/RuleSymbol.java \
antlr/SemanticException.java \
antlr/SimpleTokenManager.java \
antlr/StringLiteralElement.java \
antlr/StringLiteralSymbol.java \
antlr/StringUtils.java \
antlr/SynPredBlock.java \
antlr/Token.java \
antlr/TokenBuffer.java \
antlr/TokenManager.java \
antlr/TokenQueue.java \
antlr/TokenRangeElement.java \
antlr/TokenRefElement.java \
antlr/TokenStream.java \
antlr/TokenStreamBasicFilter.java \
antlr/TokenStreamException.java \
antlr/TokenStreamIOException.java \
antlr/TokenStreamRecognitionException.java \
antlr/TokenStreamRetryException.java \
antlr/TokenStreamSelector.java \
antlr/TokenSymbol.java \
antlr/TokenWithIndex.java \
antlr/Tool.java \
antlr/ToolErrorHandler.java \
antlr/TreeBlockContext.java \
antlr/TreeElement.java \
antlr/TreeParser.java \
antlr/TreeParserSharedInputState.java \
antlr/TreeSpecifierNode.java \
antlr/TreeWalkerGrammar.java \
antlr/WildcardElement.java \
antlr/ZeroOrMoreBlock.java \
antlr/actions/cpp/ActionLexer.java \
antlr/actions/cpp/ActionLexerTokenTypes.java \
antlr/actions/csharp/ActionLexer.java \
antlr/actions/csharp/ActionLexerTokenTypes.java \
antlr/actions/java/ActionLexer.java \
antlr/actions/java/ActionLexerTokenTypes.java \
antlr/actions/python/ActionLexerTokenTypes.java \
antlr/actions/python/ActionLexer.java \
antlr/actions/python/CodeLexer.java \
antlr/actions/python/CodeLexerTokenTypes.java \
antlr/collections/AST.java \
antlr/collections/ASTEnumeration.java \
antlr/collections/Enumerator.java \
antlr/collections/List.java \
antlr/collections/Stack.java \
antlr/collections/impl/ASTArray.java \
antlr/collections/impl/ASTEnumerator.java \
antlr/collections/impl/BitSet.java \
antlr/collections/impl/IndexedVector.java \
antlr/collections/impl/IntRange.java \
antlr/collections/impl/LLCell.java \
antlr/collections/impl/LLEnumeration.java \
antlr/collections/impl/LList.java \
antlr/collections/impl/Vector.java \
antlr/collections/impl/VectorEnumeration.java \
antlr/collections/impl/VectorEnumerator.java \
antlr/preprocessor/Grammar.java \
antlr/preprocessor/GrammarFile.java \
antlr/preprocessor/Hierarchy.java \
antlr/preprocessor/Option.java \
antlr/preprocessor/PreprocessorLexer.java \
antlr/preprocessor/Preprocessor.java \
antlr/preprocessor/Rule.java \
antlr/preprocessor/Tool.java \
antlr/preprocessor/PreprocessorTokenTypes.java \
antlr/Version.java \
antlr/PythonBlockFinishingInfo.java \
antlr/PythonCharFormatter.java \
antlr/PythonCodeGenerator.java

OBJFILES = $(SOURCES:%.java=%.o)

all: cantlr

cantlr: $(OBJFILES)
	$(GCJ) --main=antlr.Tool $(OBJFILES) -o $@

%.o: %.java
	$(GCJ) $(COMPOPTS) -c -o $@ $<

%.d:%.java
	$(GCJ) -MM -MG $< > $@

clean:
	rm -f $(OBJFILES)

-include $(SOURCES:.java=.d)
From ric.klaren at gmail.com  Mon Apr  4 11:56:49 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon Apr  4 11:56:49 2005
Subject: [antlr-interest] simplification of logic formula
In-Reply-To: <424C35E6.5050107@iro.umontreal.ca>
References: <424C35E6.5050107@iro.umontreal.ca>
Message-ID: <42518DF1.7040203@gmail.com>

Michel Metzger wrote:
> I have a logic formula: logic operators (&&, ||, !), atomic proposition 
> (a, b, c, d, ...), and litterals (true, false)
> What I want is to simplify those formulae : for instance translate (a && 
> !a) into false
> I also want to push the not operator in front of atomic propositions 
> only. ie, transform !(a && b) in !a || !b
> 
> To do that, I thought that using tree parser to transform my syntax tree 
> would be a good idea. I wrote the following tree transformation rules:
> 
>     |! (#(OP_NOT OP_OR)) => #(OP_NOT #(OP_OR leftNO:expr rightNO:expr))
>        {
>            #expr = #([OP_AND, "&&"], #([12, "!"], leftNO), #([12, "!"], 
> rightNO));
>        }
>     |!    (#(OP_NOT OP_AND)) => #(OP_NOT #(OP_AND leftNA:expr 
> rightNA:expr))
>        {
>            #expr = #([OP_OR, "||"], #([12, "!"], leftNA), #([12, "!"], 
> rightNA));
>        }
> 
> But I have a problem :
> take the formula !((a && b) || c). The result should be : ((!a || !b) && 
> !c). But with the rules I wrote, the result is :
> (!(a && b) && !c. I understand why, but is there a way to call again my 
> transformation rule on the subtree that I build in my action bloc ?

I guess you have to wrap the call to the treeparser and add a attribute 
to it that gets set when a modification gets done to the tree (e.g. when 
you rewrite a bit). Then keep on calling the treeparser on the new tree 
untill no change is done. Depends a bit on the the transformations you 
do and if they're 'stable' if this simple scheme will work.

Another approach could be to call your tree parser recursively from 
itself. Probably a bit more efficient but could get hairier, I have 
little experience with transforming treewalkers but in simple 
'walk-only' treewalkers this strategy works pretty well. Just see rules 
as method calls. Read the generated code to get a feel for it.

Hope this helps, cryptic as it may be :/

Ric
From PKronenberg at technicacorp.com  Mon Apr  4 12:05:52 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Mon Apr  4 12:05:17 2005
Subject: FW: [antlr-interest] Antlr-eclipse plugin
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547AAD4C@mail-hq1.Technica1.com>

Does this requires a modified version of antlr?  I see antlr 2.7.4 for
download.  Does this replace the one from the antlr.org site? And then
there is org.antlr.core and org.antlr.ui, with different release
numbers.  What parts do I need and how do I install?  Am I missing the
instructions somewhere?   

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Martin Probst
Sent: Monday, April 04, 2005 1:41 PM
To: Peter Kronenberg
Cc: ANTLR Interest
Subject: Re: [antlr-interest] Antlr-eclipse plugin

Hi,

Am Montag, den 04.04.2005, 10:48 -0400 schrieb Peter Kronenberg:
> I posted a message on the antlr plugin page on sourceforge, but that
> doesn't seem to have too much activity.  I'm trying to get more info
> on the plugin.  It's not really clear what pieces I need in order to
> install it, especially on Eclipse 3.1.  I'm already running antlr
> 2.7.5

I just installed it today using the update site. I don't know about
support for antlr 2.7.5, at least 2.7.4 is included. I also didn't try
anything except the editor and the outline etc. (e.g., the UI) - but
that works well.

Regards,
Martin

The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

From mail at martin-probst.com  Mon Apr  4 12:11:32 2005
From: mail at martin-probst.com (Martin Probst)
Date: Mon Apr  4 12:11:41 2005
Subject: FW: [antlr-interest] Antlr-eclipse plugin
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547AAD4C@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547AAD4C@mail-hq1.Technica1.com>
Message-ID: <1112641892.23576.7.camel@narr.homeip.net>

Hi,

> Does this requires a modified version of antlr?  I see antlr 2.7.4 for
> download.  Does this replace the one from the antlr.org site? And then
> there is org.antlr.core and org.antlr.ui, with different release
> numbers.  What parts do I need and how do I install?  Am I missing the
> instructions somewhere?   

installing a Plug-In for Eclipse that has an Update-Site is pretty easy.
First you have to finde the URL of the update site, in this case:
> http://antlreclipse.sourceforge.net/updates/
Then you go within Eclipse to Help -> Find and Install Updates. There
you can add a new Update-Site and search for updates from that site.
Afterwards you can select what to install (Make sure you pick the
package in version 3.xx for Eclipse 3!) and your done after the download
and some questions. 
Eclipse plugins come bundled with everything you need, and everything is
contained within Eclipse, so it won't replace your normal ANTLR
distribution.

Regards,
Martin

From lance at thinkingworks.com  Mon Apr  4 13:33:20 2005
From: lance at thinkingworks.com (Lance Gutteridge)
Date: Mon Apr  4 13:33:26 2005
Subject: [antlr-interest] error handling
Message-ID: <6.1.2.0.2.20050404133051.0304dba8@pop3.thinkingworks.com>

This is probably a simple question.  I want to report parse errors to the 
user.  The parser throws an exception.  Which one do I catch and what 
information about the position and nature of the error is there?  If 
someone could point me to some documentation on this subject I would be 
grateful.

Thanks
Lance

From bob.temp at gmail.com  Mon Apr  4 13:38:20 2005
From: bob.temp at gmail.com (Bob Temporary)
Date: Mon Apr  4 13:38:23 2005
Subject: [antlr-interest] Inheritance problem
Message-ID: <4edd121e05040413387f924ed3@mail.gmail.com>

Greetings,
I'm having a problem with the inheritance in ANTLR. I am working on a
series of parsers that are based off one another. In order to
implement some additional features, I created a subclass of
antlr.LLkParser that my first parser extends. The next parser must
also extend my subclass, but also inherit all of the grammar from the
first parser. So my setup basically looks like this:


GenericParser.java:
public abstract class GenericParser extends antlr.LLkParser ...
...


Parser1.g:
class Parser1 extends Parser( "com.myparser.GenericParser" );
...

Parser2.g:
class Parser2 extends Parser1( "com.myparser.GenericParser" );



Parser1 works fine, but the expandedParser2.g file that's generated is
wrong. The parser definition line looks like this:
class Parser2 extends ( "com.embarcadero.sqlparsers.GenericParser" );

Of course, I get an error because that's not valid syntax. If I try to
leave the ("com...") stuff off in parser2.g, then it's base class is
just antlr.LLkParser, which is wrong.

How do I accomplish this?
From Bharath.Sundararaman at starthis.com  Mon Apr  4 14:37:36 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Mon Apr  4 14:37:40 2005
Subject: [antlr-interest] Inheritance problem
Message-ID: <B1180416E5C44E49AE556D23DBB45B29061485@webmail.starthis.com>

Hi Bob,

I had a similar problem too, with grammar inheritance. I am using the
ANTLR plug-in for Eclipse and if you are using ANTLR on Eclipse, I
suggest that you right-click on your grammar file -> properties and
browse for the super grammar. It worked right away, for me.

Good luck.

Bharath.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bob Temporary
Sent: Monday, April 04, 2005 3:38 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Inheritance problem

Greetings,
I'm having a problem with the inheritance in ANTLR. I am working on a
series of parsers that are based off one another. In order to
implement some additional features, I created a subclass of
antlr.LLkParser that my first parser extends. The next parser must
also extend my subclass, but also inherit all of the grammar from the
first parser. So my setup basically looks like this:


GenericParser.java:
public abstract class GenericParser extends antlr.LLkParser ...
...


Parser1.g:
class Parser1 extends Parser( "com.myparser.GenericParser" );
...

Parser2.g:
class Parser2 extends Parser1( "com.myparser.GenericParser" );



Parser1 works fine, but the expandedParser2.g file that's generated is
wrong. The parser definition line looks like this:
class Parser2 extends ( "com.embarcadero.sqlparsers.GenericParser" );

Of course, I get an error because that's not valid syntax. If I try to
leave the ("com...") stuff off in parser2.g, then it's base class is
just antlr.LLkParser, which is wrong.

How do I accomplish this?
From Bharath.Sundararaman at starthis.com  Mon Apr  4 14:47:41 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Mon Apr  4 14:47:45 2005
Subject: [antlr-interest] error handling
Message-ID: <B1180416E5C44E49AE556D23DBB45B29061486@webmail.starthis.com>

Hi Lance,

Did you visit http://www.antlr.org/doc/err.html#_bb1 yet? That should be
your first stop.

I catch parser exceptions from my main java program (the code which
calls the lexer, parser, tree walker and prints the ast), extract
relevant information presented by each exception (API:
http://www.antlr.org/javadoc/antlr/ANTLRException.html) and create my
own exception based on my app needs. 

B.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Lance Gutteridge
Sent: Monday, April 04, 2005 3:33 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] error handling

This is probably a simple question.  I want to report parse errors to
the 
user.  The parser throws an exception.  Which one do I catch and what 
information about the position and nature of the error is there?  If 
someone could point me to some documentation on this subject I would be 
grateful.

Thanks
Lance

From scott at javadude.com  Mon Apr  4 17:48:06 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr  4 17:48:13 2005
Subject: [antlr-interest] Antlr-eclipse plugin
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547AABAB@mail-hq1.Technica1.com>
Message-ID: <20050405002212.162B629083A@new.knowspam.net>

If you can wait a few days, I should have a beta of the latest version (with
a candidate antlr 2.7.6) available.
 
The existing plugin doesn't work properly with 3.1 (\t doesn't expand in the
editor). You can only use it with eclipse 3.0.x.
 
The existing plugin includes antlr 2.7.4.
 
If you can't wait a few days, or would like to help me test the plugin,
gimme a yell and I'll tell you where I've got the alpha test at. (It's in
really good shape, but I'd like some folks to bang on it).
 
If anyone else wants to help test the new plugin and the 2.7.6 candidate
(with JSR-45 debugging) and the XML support, drop me an email and I'll point
you to the update site.
 
Later,
-- Scott
 
 
 
  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peter Kronenberg
Sent: Monday, April 04, 2005 10:48 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Antlr-eclipse plugin



I posted a message on the antlr plugin page on sourceforge, but that doesn't
seem to have too much activity.  I'm trying to get more info on the plugin.
It's not really clear what pieces I need in order to install it, especially
on Eclipse 3.1.  I'm already running antlr 2.7.5

Thanks, 
Peter 


Peter Kronenberg 
Software Engineer 
(703) 885-1222 
pkronenberg@technicacorp.com 


The information contained in this transmission may contain privileged and
confidential information. It is intended only for the use of the person(s)
named above. If you are not the intended recipient, you are hereby notified
that any review, dissemination, distribution or duplication of this
communication is strictly prohibited. If you are not the intended recipient,
please contact the sender by reply e-mail and destroy all copies of the
original message. Technica Corporation does not represent this e-mail to be
free from any virus, fault or defect and it is therefore the responsibility
of the recipient to first scan it for viruses, faults and defects. To reply
to our e-mail administrator directly, please send an e-mail to
postmaster@technicacorp.com. Thank you.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050404/4429d4fd/attachment.html
From kibab at icehouse.net  Mon Apr  4 22:10:44 2005
From: kibab at icehouse.net (Kaleb Pederson)
Date: Mon Apr  4 22:10:48 2005
Subject: [antlr-interest] Any updates on the Python version of
	=?iso-8859-1?q?String=09Template=3F?=
In-Reply-To: <20050331035605.42368.qmail@web90108.mail.scd.yahoo.com>
References: <20050331035605.42368.qmail@web90108.mail.scd.yahoo.com>
Message-ID: <200504042210.44942.kibab@icehouse.net>

Was somebody indeed working on a Python Version of String Template?  If so, 
I'm also very curious.....

Thanks.

--Kaleb

On Wednesday 30 March 2005 7:56 pm, Travis Caldwell wrote:
>  Being able to learn a template syntax once and use it for both Java
> and Python would be great. (Of course given a choice I'd always pick
> Python!)
>
>                 _Travis_Caldwell_
From ewbank at gmail.com  Tue Apr  5 02:05:52 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr  5 02:05:55 2005
Subject: [antlr-interest] error handling
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B29061486@webmail.starthis.com>
References: <B1180416E5C44E49AE556D23DBB45B29061486@webmail.starthis.com>
Message-ID: <dd3a065f05040502055d285f43@mail.gmail.com>

I use a different approach, because catching exceptions outside the
parser means your customer only get the first syntax error each time. 
I'd prefer to give them as many as possible...

I tell antlr to disable exceptions for most productions, then enable
exceptions for a few key production recovery points (statement,
expression, and a few others), then have my own reportError() method
that keeps a running count of errors seen:

   MyParser extends Parser;
   options {  defaultErrorHandler=false; }
   ...
   expression
   options {defaultErrorHandler=true;}
   :
      expr    { ## = #( #[EXPR,"EXPR"], ## ); }
   ;


The top level routine in my parser returns true/false based on the
number of errors:

     parseme
     returns [bool r = true]
     :
         realParseProduction
         { if (nerr > 0) r = false; }
     ;
From prashant.deva at gmail.com  Tue Apr  5 04:27:15 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Apr  5 04:27:19 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java version
Message-ID: <41fed8f805040504274aa12373@mail.gmail.com>

Currently we have just one jar file for antlr containing all the
codegen stuff and the code required to run the generated scanners.

So anyone who generates a parser using antlr has to incorporate that
single jar into his apps.

How about having a separate jar(for the java version) which contains
only the code required for running the lexer/parser without all the
codegen stuff. this will be lighter for everyone to distribute.

I believe all the other languages c++/c# already have a smaller lib
which contains only the required stuff. So i dont see why we don't do
the same for the java version.

PRASHANT
From Bharath.Sundararaman at starthis.com  Tue Apr  5 05:21:43 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Tue Apr  5 05:21:46 2005
Subject: [antlr-interest] error handling
Message-ID: <B1180416E5C44E49AE556D23DBB45B2906148B@webmail.starthis.com>

I actually don't throw any exceptions; I parse the entire file, collect
all the exceptions and return it to the user. This however induces a lot
of extra work because you have to decide which errors can be cascaded
and check the values returned by various rules to avoid any nullpointer
or classcast exceptions. (Since I don't throw them, I have to remember
that some values are illegal).

Do you print the trivial errors on the console and throw exceptions for
the serious ones?

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
Sent: Tuesday, April 05, 2005 4:06 AM
To: 'antlr-interest' Interest
Subject: Re: [antlr-interest] error handling

I use a different approach, because catching exceptions outside the
parser means your customer only get the first syntax error each time. 
I'd prefer to give them as many as possible...

I tell antlr to disable exceptions for most productions, then enable
exceptions for a few key production recovery points (statement,
expression, and a few others), then have my own reportError() method
that keeps a running count of errors seen:

   MyParser extends Parser;
   options {  defaultErrorHandler=false; }
   ...
   expression
   options {defaultErrorHandler=true;}
   :
      expr    { ## = #( #[EXPR,"EXPR"], ## ); }
   ;


The top level routine in my parser returns true/false based on the
number of errors:

     parseme
     returns [bool r = true]
     :
         realParseProduction
         { if (nerr > 0) r = false; }
     ;
From scott at javadude.com  Tue Apr  5 05:38:27 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr  5 05:38:34 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <41fed8f805040504274aa12373@mail.gmail.com>
Message-ID: <20050405121223.A617F290C51@new.knowspam.net>

I took a stab last week at separate jars for 2.7.6.

I separated them into

antlr.jar            - everything
antlr-no-debug.jar   - everything (without java debug symbols)
antlr-rt-all.jar     - all non-build-time classes
antlr-rt-parser.jar  - just the parts needed to run a parser (no ASTs)
antlr-rt-scanner.jar - just the parts needed to run a scanner+parser (no
ASTs) 

Size-wise they came out at:
464k  antlr.jar
325k  antlr-no-debug.jar
58k   antlr-rt-all.jar
36k   antlr-rt-parser.jar
45k   antlr-rt-scanner.jar

Any suggestions on what to keep? Is the 58k vs. 36k important enough to have
a separate parser-only jar? Or is 58k small enough?

Later,
-- Scott


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
> Sent: Tuesday, April 05, 2005 7:27 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Should there be 2 antlr jar files 
> for java version
> 
> Currently we have just one jar file for antlr containing all 
> the codegen stuff and the code required to run the generated scanners.
> 
> So anyone who generates a parser using antlr has to 
> incorporate that single jar into his apps.
> 
> How about having a separate jar(for the java version) which 
> contains only the code required for running the lexer/parser 
> without all the codegen stuff. this will be lighter for 
> everyone to distribute.
> 
> I believe all the other languages c++/c# already have a 
> smaller lib which contains only the required stuff. So i dont 
> see why we don't do the same for the java version.
> 
> PRASHANT
> 




From jeremy.rayner at gmail.com  Tue Apr  5 05:55:12 2005
From: jeremy.rayner at gmail.com (Jeremy Rayner)
Date: Tue Apr  5 05:55:14 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <20050405121223.A617F290C51@new.knowspam.net>
References: <41fed8f805040504274aa12373@mail.gmail.com>
	<20050405121223.A617F290C51@new.knowspam.net>
Message-ID: <90a60e760504050555148898fb@mail.gmail.com>

> antlr-rt-all.jar     - all non-build-time classes
We had a stab at this a while back and came up with
http://cvs.groovy.codehaus.org/viewrep/groovy/groovy/jsr/ideas/parsers/antlr/misc/make-antlr-runtime.sh?r=HEAD

and some discussion occured under this thread...
http://www.antlr.org/pipermail/antlr-interest/2005-February/011060.html

jez.
-- 
http://javanicus.com/blog2
From PKronenberg at technicacorp.com  Tue Apr  5 07:06:10 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Tue Apr  5 07:05:33 2005
Subject: [antlr-interest] Problem with literals
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547AAF48@mail-hq1.Technica1.com>

I'm obviously having a problem understanding how antlr handles literals.
Here is a small example.  This grammar accepts either
"abc = def" or "abc foo def"

If I uncomment the line at the end in the tree walker, it doesn't
compile because antlr puts 2 entries for LITERAL_foo in the token types
table.  How do I indicate the 'foo' token when walking the tree?

header {
}
class TestParser extends Parser;
	options { k=1; 
	          buildAST=true; 
	}
	
      	testExpr: IDENT (EQ^ | "foo"^) IDENT SEMI!;
        
class TestLexer extends Lexer;
	options { k=2;
     	      testLiterals=true;
     	      charVocabulary = '\3'..'\377';
	}

		EQ : '=';
        SEMI  : ';' ;
        
        IDENT : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' |
'_' | '$')*;

        WS    : (' ' | '\t' | '\n' | '\r') {$setType(Token.SKIP);} ;

class TestTreeWalker extends TreeParser;
	
	  expr returns [String result=""]
	  {String s1, s2;}
          : #(EQ  s1=expr s2=expr)   { result = s1 + " eq " + s2;
System.out.println(result); }
          /*
          | #(LITERAL_foo  s1=expr s2=expr)   { result = s1 + " foo " +
s2; System.out.println(result); }
          */
          | i:IDENT {result=i.getText();}
          ;     


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050405/89d73e13/attachment.html
From antlr at eduard-ralph.de  Tue Apr  5 08:15:07 2005
From: antlr at eduard-ralph.de (Eduard Ralph)
Date: Tue Apr  5 08:15:16 2005
Subject: [antlr-interest] status of the c# grammar
Message-ID: <20050405151513.8B4D4400AFE@p15166426.pureserver.info>

Hi,

I'm new to antlr, etc. and was thinking of building a c# compiler. I saw in
the code that there already is something going in that direction and was
wondering what the status on it is. Could somebody give me some pointers to
documentation, etc?

Thanks,

Eduard

From Bharath.Sundararaman at starthis.com  Tue Apr  5 08:48:56 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Tue Apr  5 08:49:01 2005
Subject: [antlr-interest] grammar guessing.
Message-ID: <B1180416E5C44E49AE556D23DBB45B29061492@webmail.starthis.com>

Hi all,

 

I have a rule of the form:

var: v:IDENT{Get type of "v" and store it in AST #v}(subscripts[#v])?;

 

Before the 'subscripts' rule is called, I have to store the type of 'v'.
However, the compiler is in GUESSING MODE because of (subscripts[#v])?.
This causes the execution of 'subscripts' rule without performing the
actions related to the IDENT.

 

How can I get around this? Any ideas?

 

Thanks,

 

Bharath.

 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Eduard Ralph
Sent: Tuesday, April 05, 2005 10:15 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] status of the c# grammar

 

Hi,

 

I'm new to antlr, etc. and was thinking of building a c# compiler. I saw
in

the code that there already is something going in that direction and was

wondering what the status on it is. Could somebody give me some pointers
to

documentation, etc?

 

Thanks,

 

Eduard

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050405/2f3aaa0e/attachment-0001.html
From lance at thinkingworks.com  Tue Apr  5 08:57:44 2005
From: lance at thinkingworks.com (Lance Gutteridge)
Date: Tue Apr  5 08:57:53 2005
Subject: [antlr-interest] error handling
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B29061486@webmail.starthis.co m>
References: <B1180416E5C44E49AE556D23DBB45B29061486@webmail.starthis.com>
Message-ID: <6.1.2.0.2.20050405084134.03534480@pop3.thinkingworks.com>

Bhareth,

Thanks for your help.  I read the documentation you suggested and realized 
I didn't have defaultErrorHandler=false  set in the parser.  So the parser 
was catching the exceptions and reporting them to System.err.  With the 
default handler turned off my exceptions are flowing out to my code and now 
I can use them to construct meaningful error reports to my users.

Thanks again.
Lance
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050405/6e0bdc52/attachment.html
From ric.klaren at gmail.com  Tue Apr  5 09:40:12 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Apr  5 09:40:29 2005
Subject: [antlr-interest] grammar guessing.
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B29061492@webmail.starthis.com>
References: <B1180416E5C44E49AE556D23DBB45B29061492@webmail.starthis.com>
Message-ID: <4252BF6C.6010009@gmail.com>

Bharath Sundararaman wrote:
> I have a rule of the form:
> 
> var: v:IDENT{Get type of "v" and store it in AST #v}(subscripts[#v])?;
> 
> Before the 'subscripts' rule is called, I have to store the type of 'v'.
> However, the compiler is in GUESSING MODE because of (subscripts[#v])?.
> This causes the execution of 'subscripts' rule without performing the
> actions related to the IDENT.

A rule like this cannot result in guessing mode. It must come from an 
encapsulating rule. Only a syntactic predicate ( foo ) => bar switches 
the parser to guessing mode.

If you *really* *really* want to do things during guessing mode you can 
do things in init actions.

var {
	Token v = LT(1);
	// do stuff for v regardless off guessing mode.
	// ...
}:
	IDENT (subscripts[v])?;

Check the antlr grammar/docs on where init actions are possible.

Most probable an extra pass over the AST would be nicer in the long run 
YMMV.

Cheers,

Ric
From alau at tirawireless.com  Tue Apr  5 09:46:13 2005
From: alau at tirawireless.com (Allen Lau)
Date: Tue Apr  5 09:46:18 2005
Subject: [antlr-interest] C++ grammer for Java output
Message-ID: <32FDE2934790A148B7760FDD7843C27903DB7764@exchange.bspark.com>

Hi all,

I am looking for a C++ grammar file for Java output.  I am aware of the existence of the work from David Wigg et all.  Unfortunately it can only produce C++ output.

If you have what I am looking for.  Please let me know.  Much appreciated!

Regards,
Allen
From ewbank at gmail.com  Tue Apr  5 11:05:30 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr  5 11:05:35 2005
Subject: [antlr-interest] error handling
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B2906148B@webmail.starthis.com>
References: <B1180416E5C44E49AE556D23DBB45B2906148B@webmail.starthis.com>
Message-ID: <dd3a065f050405110554ff4acd@mail.gmail.com>

I print most messages, but each tree parser does one thing (syntax,
type inference, semantics, etc), and I terminate /between/ passes if
there were any errors reported.

I don't worry too much about cascade errors because I've suppressed
exception handling on all but a few key tree node types (STMT, EXPR). 
This means when there's an unrecoverable error anywhere in an
expression, the tree for that expression is abandoned.  However, the
only unrecoverable errors are internal errors - for other errors, only
the first one or two are printed, then the rest are suppressed until I
pass through the STMT or EXPR node.

On Apr 5, 2005 8:21 AM, Bharath Sundararaman
<Bharath.Sundararaman@starthis.com> wrote:
> I actually don't throw any exceptions; I parse the entire file, collect
> all the exceptions and return it to the user. This however induces a lot
> of extra work because you have to decide which errors can be cascaded
> and check the values returned by various rules to avoid any nullpointer
> or classcast exceptions. (Since I don't throw them, I have to remember
> that some values are illegal).
> 
> Do you print the trivial errors on the console and throw exceptions for
> the serious ones?
> 
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Tuesday, April 05, 2005 4:06 AM
> To: 'antlr-interest' Interest
> Subject: Re: [antlr-interest] error handling
> 
> I use a different approach, because catching exceptions outside the
> parser means your customer only get the first syntax error each time.
> I'd prefer to give them as many as possible...
> 
> I tell antlr to disable exceptions for most productions, then enable
> exceptions for a few key production recovery points (statement,
> expression, and a few others), then have my own reportError() method
> that keeps a running count of errors seen:
> 
>    MyParser extends Parser;
>    options {  defaultErrorHandler=false; }
>    ...
>    expression
>    options {defaultErrorHandler=true;}
>    :
>       expr    { ## = #( #[EXPR,"EXPR"], ## ); }
>    ;
> 
> The top level routine in my parser returns true/false based on the
> number of errors:
> 
>      parseme
>      returns [bool r = true]
>      :
>          realParseProduction
>          { if (nerr > 0) r = false; }
>      ;
>
From luisl at scarab.co.za  Tue Apr  5 13:19:30 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Tue Apr  5 13:19:40 2005
Subject: [antlr-interest] ANTLR 2.7.5 Bug 
Message-ID: <MPEMLILMNEOKCPPBGEMKEEDLCGAA.luisl@scarab.co.za>

Hi,

I've found the following small bug in the 2.7.5 C# runtime for which I
couldn't find a report on the list. (I haven't checked the java or other
runtimes).

Lexers generated with defaultErrorHandler=true contain a reference to a
recover method which does not seem to be implemented.  Copying the recover
method from Parser.cs to CharScanner.cs resolves the problem.

:)

Regards

Luis


From Bharath.Sundararaman at starthis.com  Tue Apr  5 13:19:52 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Tue Apr  5 13:19:54 2005
Subject: [antlr-interest] grammar guessing.
Message-ID: <B1180416E5C44E49AE556D23DBB45B2906149A@webmail.starthis.com>

Hi Ric,

I retraced the rules all the way back to the top-most rule which had a
(foo)=>bar rule. I changed the rule to avoid the guessing and it works
now.

About your init action comment, it unfortunately doesn't help me because


var{...}: v:IDENT (subscripts[#v]); requires work to be performed on
'v', which is visible only after the initialization ends.

Thanks for your help

Bharath.

-----Original Message-----
From: Ric Klaren [mailto:ric.klaren@gmail.com] 
Sent: Tuesday, April 05, 2005 11:40 AM
To: Bharath Sundararaman
Cc: antlr-interest@antlr.org
Subject: Re: [antlr-interest] grammar guessing.

Bharath Sundararaman wrote:
> I have a rule of the form:
> 
> var: v:IDENT{Get type of "v" and store it in AST #v}(subscripts[#v])?;
> 
> Before the 'subscripts' rule is called, I have to store the type of
'v'.
> However, the compiler is in GUESSING MODE because of
(subscripts[#v])?.
> This causes the execution of 'subscripts' rule without performing the
> actions related to the IDENT.

A rule like this cannot result in guessing mode. It must come from an 
encapsulating rule. Only a syntactic predicate ( foo ) => bar switches 
the parser to guessing mode.

If you *really* *really* want to do things during guessing mode you can 
do things in init actions.

var {
	Token v = LT(1);
	// do stuff for v regardless off guessing mode.
	// ...
}:
	IDENT (subscripts[v])?;

Check the antlr grammar/docs on where init actions are possible.

Most probable an extra pass over the AST would be nicer in the long run 
YMMV.

Cheers,

Ric
From ewbank at gmail.com  Tue Apr  5 13:38:54 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr  5 13:38:57 2005
Subject: [antlr-interest] grammar guessing.
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B29061492@webmail.starthis.com>
References: <B1180416E5C44E49AE556D23DBB45B29061492@webmail.starthis.com>
Message-ID: <dd3a065f05040513385e279703@mail.gmail.com>

Related to guessing mode is scanner lookahead.  I was having trouble
with scanner lookahead until I learned about semantic predicates
(thanks to Ter for his help!).  It might be appropriate here as well.

For example, if you have k>2, you can't use one token to alter the
scanner results on the next token - the token has already been
processed.

Ideally, you should be able to scan the entire file into a token
stream; with semantic predicates, you can do this.

On Apr 5, 2005 11:48 AM, Bharath Sundararaman
<Bharath.Sundararaman@starthis.com> wrote:
> I have a rule of the form: 
> 
> var: v:IDENT{Get type of "v" and store it in AST #v}(subscripts[#v])?; 
> 
> Before the 'subscripts' rule is called, I have to store the type of 'v'.
> However, the compiler is in GUESSING MODE
From ewbank at gmail.com  Tue Apr  5 13:42:03 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr  5 13:42:06 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <90a60e760504050555148898fb@mail.gmail.com>
References: <41fed8f805040504274aa12373@mail.gmail.com>
	<20050405121223.A617F290C51@new.knowspam.net>
	<90a60e760504050555148898fb@mail.gmail.com>
Message-ID: <dd3a065f050405134261963e98@mail.gmail.com>

On a related note, is there any reason why there even needs to be a
runtime at all?  It seems that you could lay down all the code needed
and avoid quite a bit of complexity.

- B
From tangfc2001 at yahoo.com  Tue Apr  5 14:06:49 2005
From: tangfc2001 at yahoo.com (FC)
Date: Tue Apr  5 14:06:52 2005
Subject: [antlr-interest] Line number in AST
Message-ID: <20050405210649.15247.qmail@web53908.mail.yahoo.com>

Hi,

I want to get the line number of java code while
parsing the source code. How can I generate AST with
line number in the node? Because I am new to Antlr, I
expect to see some examples about this. 

Thanks a lot

Terry

  


		
__________________________________ 
Yahoo! Messenger 
Show us what our next emoticon should look like. Join the fun. 
http://www.advision.webevents.yahoo.com/emoticontest
From ric.klaren at gmail.com  Tue Apr  5 14:46:06 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Apr  5 14:46:10 2005
Subject: [antlr-interest] grammar guessing.
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B2906149A@webmail.starthis.com>
References: <B1180416E5C44E49AE556D23DBB45B2906149A@webmail.starthis.com>
Message-ID: <4253071E.4050000@gmail.com>

Bharath Sundararaman wrote:
> I retraced the rules all the way back to the top-most rule which had a
> (foo)=>bar rule. I changed the rule to avoid the guessing and it works
> now.
> 
> About your init action comment, it unfortunately doesn't help me because
> 
> var{...}: v:IDENT (subscripts[#v]); requires work to be performed on
> 'v', which is visible only after the initialization ends.

The Token v = LT(1) accesses the same token as v would have become in 
non guessing mode. Read the generated code and you'll see.

Cheers,

Ric
From parrt at cs.usfca.edu  Tue Apr  5 17:02:00 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr  5 17:02:00 2005
Subject: [antlr-interest] ANTLR 2.7.5 Bug 
In-Reply-To: <MPEMLILMNEOKCPPBGEMKEEDLCGAA.luisl@scarab.co.za>
References: <MPEMLILMNEOKCPPBGEMKEEDLCGAA.luisl@scarab.co.za>
Message-ID: <e8a3df20777c53fddea878c62bb55f4f@cs.usfca.edu>


On Apr 5, 2005, at 1:19 PM, Luis Leal wrote:

> Hi,
>
> I've found the following small bug in the 2.7.5 C# runtime for which I
> couldn't find a report on the list. (I haven't checked the java or 
> other
> runtimes).
>
> Lexers generated with defaultErrorHandler=true contain a reference to a
> recover method which does not seem to be implemented.  Copying the 
> recover
> method from Parser.cs to CharScanner.cs resolves the problem.

Hmm...Michael can correct me, but I thought we fixed that right before 
2.7.5 shipped...maybe it was just after.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From scott at javadude.com  Tue Apr  5 17:25:00 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr  5 17:25:05 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for javaversion
In-Reply-To: <dd3a065f050405134261963e98@mail.gmail.com>
Message-ID: <20050405235847.39AFD290B74@new.knowspam.net>

<stepping away from the impact area of that hand grenade>

<g>
-- Scott 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Tuesday, April 05, 2005 4:42 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Should there be 2 antlr jar 
> files for javaversion
> 
> On a related note, is there any reason why there even needs 
> to be a runtime at all?  It seems that you could lay down all 
> the code needed and avoid quite a bit of complexity.
> 
> - B
> 




From parrt at cs.usfca.edu  Tue Apr  5 17:31:58 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Apr  5 17:31:58 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <dd3a065f050405134261963e98@mail.gmail.com>
References: <41fed8f805040504274aa12373@mail.gmail.com>
	<20050405121223.A617F290C51@new.knowspam.net>
	<90a60e760504050555148898fb@mail.gmail.com>
	<dd3a065f050405134261963e98@mail.gmail.com>
Message-ID: <7a43bd8581de61bb5f73672407676e45@cs.usfca.edu>


On Apr 5, 2005, at 1:42 PM, Bryan Ewbank wrote:

> On a related note, is there any reason why there even needs to be a
> runtime at all?  It seems that you could lay down all the code needed
> and avoid quite a bit of complexity.

Hi Bryan,

One reason in favor is that you can have more than one parser in your 
code w/o duplicating code.  Further, fixes to the runtime can be hand 
w/o regenerating your parser and compiling. :)

JavaCC generates everything I think.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From ewbank at gmail.com  Tue Apr  5 17:43:40 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr  5 17:43:42 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <7a43bd8581de61bb5f73672407676e45@cs.usfca.edu>
References: <41fed8f805040504274aa12373@mail.gmail.com>
	<20050405121223.A617F290C51@new.knowspam.net>
	<90a60e760504050555148898fb@mail.gmail.com>
	<dd3a065f050405134261963e98@mail.gmail.com>
	<7a43bd8581de61bb5f73672407676e45@cs.usfca.edu>
Message-ID: <dd3a065f05040517436a1abe24@mail.gmail.com>

So that's your secret!  I still have to type.

On Apr 5, 2005 8:31 PM, Terence Parr <parrt@cs.usfca.edu> wrote:
> JavaCC generates everything I think.
> Ter
From robert.colquhoun at gmail.com  Tue Apr  5 18:10:21 2005
From: robert.colquhoun at gmail.com (Robert Colquhoun)
Date: Tue Apr  5 18:10:49 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <20050405121223.A617F290C51@new.knowspam.net>
References: <41fed8f805040504274aa12373@mail.gmail.com>
	<20050405121223.A617F290C51@new.knowspam.net>
Message-ID: <f0e23a090504051810919e9d6@mail.gmail.com>

Hello,

On Apr 5, 2005 10:38 PM, Scott Stanchfield <scott@javadude.com> wrote:
> I separated them into
> 
> antlr.jar            - everything
> antlr-no-debug.jar   - everything (without java debug symbols)
> antlr-rt-all.jar     - all non-build-time classes
> antlr-rt-parser.jar  - just the parts needed to run a parser (no ASTs)
> antlr-rt-scanner.jar - just the parts needed to run a scanner+parser (no
> ASTs)

If the above is done really need to separate the source as well into
separate packages rather than have pretty much everything directly in
the org.antlr package.

ie antlr-rt.jar is the antlr.rt package.

This can badly affect compatibility so it probably wont happen. Before
when antlr had a runtime jar it would only take some minor changes
before the dependency list for the runtime jar was out of date and the
runtime jar was broken.  Really to enforce at the source code level
with separate packages to be able to maintain working independent jar
files.

Another route to reducing jar file size is to look at all the utility
type classes included....the java runtime has so much more inbuilt now
than the 1.1 days when antlr was invented.

 - Robert
From PKronenberg at technicacorp.com  Mon Apr  4 07:25:06 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Tue Apr  5 18:49:50 2005
Subject: [antlr-interest] Antlr-eclipse plugin
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547AAB7C@mail-hq1.Technica1.com>

I posted a message on the antlr plugin page on sourceforge, but that
doesn't seem to have too much activity.  I'm trying to get more info on
the plugin.  It's not really clear what pieces I need in order to
install it, especially on Eclipse 3.1.  I'm already running antlr 2.7.5

Thanks,
Peter


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050404/e280beef/attachment-0001.html
From scott at javadude.com  Wed Apr  6 01:33:30 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr  6 01:33:36 2005
Subject: [antlr-interest] Antlr-eclipse plugin
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547AAB7C@mail-hq1.Technica1.com>
Message-ID: <20050406080710.079C3290389@new.knowspam.net>

I'm glad you said something. I had my old email address registered @
sourceforge and wasn't getting notifications b/c of it...
 
As for an answer...
 
The plugin uses the standard eclipse update mechanism. All you need to do is
go to Eclipse's Help->Software Updates dialog, enter the update site name,
and work through the dialog.
 
I'm going to try to make it more obvious to do this through the sourceforge
page. If you go to the "Home Page" for the plugin from sourceforge, the
instructions specify to use the install tool.
 
Later,
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peter Kronenberg
Sent: Monday, April 04, 2005 10:25 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Antlr-eclipse plugin



I posted a message on the antlr plugin page on sourceforge, but that doesn't
seem to have too much activity.  I'm trying to get more info on the plugin.
It's not really clear what pieces I need in order to install it, especially
on Eclipse 3.1.  I'm already running antlr 2.7.5

Thanks, 
Peter 


Peter Kronenberg 
Software Engineer 
(703) 885-1222 
pkronenberg@technicacorp.com 


The information contained in this transmission may contain privileged and
confidential information. It is intended only for the use of the person(s)
named above. If you are not the intended recipient, you are hereby notified
that any review, dissemination, distribution or duplication of this
communication is strictly prohibited. If you are not the intended recipient,
please contact the sender by reply e-mail and destroy all copies of the
original message. Technica Corporation does not represent this e-mail to be
free from any virus, fault or defect and it is therefore the responsibility
of the recipient to first scan it for viruses, faults and defects. To reply
to our e-mail administrator directly, please send an e-mail to
postmaster@technicacorp.com. Thank you.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050406/a6735636/attachment.html
From scott at javadude.com  Wed Apr  6 01:51:05 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr  6 01:51:12 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <f0e23a090504051810919e9d6@mail.gmail.com>
Message-ID: <20050406082445.9B665290539@new.knowspam.net>

I'd love to do that, but there are already lots of people using ANTLR 2 and
changing package names could break tools that people have written.

Ter -- can you make a distinction like this for the ANTLR 3 code? Something
like

org.antlr.core        = core pieces necessary to run anything gen'd w/ antlr
org.antlr.scanner     = pieces needed for antlr scanners
org.antlr.parser      = pieces needed for antlr parsers
org.antlr.tree.data   = antlr tree structures
org.antlr.tree.parser = pieces needed for antlr tree parsers
org.antlr.debug       = pieces needed for debugging
org.antlr.build       = build tools

or something like that...

Later,
-- Scott

> -----Original Message-----
> From: Robert Colquhoun [mailto:robert.colquhoun@gmail.com] 
> Sent: Tuesday, April 05, 2005 9:10 PM
> To: Scott Stanchfield
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Should there be 2 antlr jar 
> files for java version
> 
> Hello,
> 
> On Apr 5, 2005 10:38 PM, Scott Stanchfield <scott@javadude.com> wrote:
> > I separated them into
> > 
> > antlr.jar            - everything
> > antlr-no-debug.jar   - everything (without java debug symbols)
> > antlr-rt-all.jar     - all non-build-time classes
> > antlr-rt-parser.jar  - just the parts needed to run a 
> parser (no ASTs) 
> > antlr-rt-scanner.jar - just the parts needed to run a 
> scanner+parser 
> > (no
> > ASTs)
> 
> If the above is done really need to separate the source as 
> well into separate packages rather than have pretty much 
> everything directly in the org.antlr package.
> 
> ie antlr-rt.jar is the antlr.rt package.
> 
> This can badly affect compatibility so it probably wont 
> happen. Before when antlr had a runtime jar it would only 
> take some minor changes before the dependency list for the 
> runtime jar was out of date and the runtime jar was broken.  
> Really to enforce at the source code level with separate 
> packages to be able to maintain working independent jar files.
> 
> Another route to reducing jar file size is to look at all the 
> utility type classes included....the java runtime has so much 
> more inbuilt now than the 1.1 days when antlr was invented.
> 
>  - Robert
> 




From PKronenberg at technicacorp.com  Wed Apr  6 05:39:02 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Wed Apr  6 05:38:24 2005
Subject: [antlr-interest] Lexer lookahead problems
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA00C@mail-hq1.Technica1.com>

I'm trying to write a lexer for expressions which accepts both character
and symbol comparisons, e.g., =, >, <, as well as EQ, GT, LT.
But in the lexer reports nondeterminism between EQ and my IDENT rule,
naturally.  Increasing the lookahead doesn't seem to help.  Is there a
way to fix this?

	EQ : "=" | "EQ";

      IDENT: ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_'
| '$')*;


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050406/4e4e4d1e/attachment.html
From Bharath.Sundararaman at starthis.com  Wed Apr  6 06:16:40 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Wed Apr  6 06:16:46 2005
Subject: [antlr-interest] Lexer lookahead problems
Message-ID: <B1180416E5C44E49AE556D23DBB45B290614AA@webmail.starthis.com>

1) If EQ can be a keyword, define it in the tokens section: tokens{ EQ = "EQ";} and then have the IDENT rule as

IDENT options {testLiterals=true;}
: ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '$')*;

Finally, you could have a parser rule of form 
assign: IDENT EQ expression; 


2) If EQ has to be a lexer rule, you could do this..

protected EQ: "EQ"; // To avoid clash with IDENT
IDENT: 
(("EQ"){$setType(EQ);} 
| ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '$')*; 

NOTE: I used the above rule just to give you an example. With this rule, whenever "EQ" is matched, the type will automatically be set to EQ, which means you cannot have an IDENTIFIER like "EQU".

However, if EQ will always be followed by, let's say, the rule "HASH", though it doesn't make any sense, You could do this:

(("EQ") (HASH))=>"EQ"{$setType(EQ);}

In this case, only when "EQ" is followed by HASH, it will not be an IDENTIFIER.
 
Hope this helps.

Bharath.


________________________________________
From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peter Kronenberg
Sent: Wednesday, April 06, 2005 7:39 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Lexer lookahead problems

I'm trying to write a lexer for expressions which accepts both character and symbol comparisons, e.g., =, >, <, as well as EQ, GT, LT.
But in the lexer reports nondeterminism between EQ and my IDENT rule, naturally.? Increasing the lookahead doesn't seem to help.? Is there a way to fix this?
??????? EQ : "=" | "EQ"; 
????? IDENT: ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '$')*; 

Peter Kronenberg 
Software Engineer 
(703) 885-1222 
pkronenberg@technicacorp.com 
From fanyang_32 at yahoo.ca  Wed Apr  6 07:49:47 2005
From: fanyang_32 at yahoo.ca (Fan Yang)
Date: Wed Apr  6 07:49:51 2005
Subject: [antlr-interest] Is there a Cobol Grammar in Antlr?
Message-ID: <20050406144947.98637.qmail@web52802.mail.yahoo.com>

Hi,

I'm working on a project which need Cobol grammar.
After research on antlr website and antlr archives, I
didn't find it although long time ago several persons
talked about it. 

I know that the Gold Parser has a Cobol grammar(LALR),
is it possible to convert it to antlr? Is there a
Cobol grammar in Antlr? May I get a version in any
changes? Or Can somebody point me to somewhere I can
get useful information about it?


Thank you very much.

Fan

______________________________________________________________________ 
Post your free ad now! http://personals.yahoo.ca
From simon at icmethods.com  Wed Apr  6 09:37:51 2005
From: simon at icmethods.com (S M.C Butler)
Date: Wed Apr  6 09:37:58 2005
Subject: [antlr-interest] antlr help
Message-ID: <004301c53ac6$fa48d560$34ce7b42@columbia>

Hi, any San Francisco based antlr experts have time to help me get off the
ground with antlr? I'm in a crunch and would find a few hours with an expert
helpful

 

Rgds,

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050406/5ef6d820/attachment-0001.html
From PKronenberg at technicacorp.com  Wed Apr  6 10:27:34 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Wed Apr  6 10:26:55 2005
Subject: [antlr-interest] RE: antlr-interest Digest, Vol 5, Issue 11
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA203@mail-hq1.Technica1.com>

Well, I think it makes sense for it to be a lexer rule, since the parser
shouldn't care or need to know the exact for of the token, either EQ or
'='.
Remember that I already have a Lexer rule  EQ: '='.
So, I would need another token to represent EQ.  And then the parser
would have to test both alternatives.  That can get rather messy (if you
throw in gt, ge, lt, le, etc).

I thought that defining it as a token would also give a clue to the
lexer so when it parses "EQ" followed by whitespace, it would know to
stop and not assume it's an IDENT.  I thought something like this might
also work in the lexer:

EQ: '=' | ("EQ ")=>"EQ"

----------------


1) If EQ can be a keyword, define it in the tokens section: tokens{ EQ =
"EQ";} and then have the IDENT rule as

IDENT options {testLiterals=true;}
: ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '$')*;

Finally, you could have a parser rule of form 
assign: IDENT EQ expression; 


2) If EQ has to be a lexer rule, you could do this..

protected EQ: "EQ"; // To avoid clash with IDENT
IDENT: 
(("EQ"){$setType(EQ);} 
| ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9' | '_' | '$')*; 

NOTE: I used the above rule just to give you an example. With this rule,
whenever "EQ" is matched, the type will automatically be set to EQ,
which means you cannot have an IDENTIFIER like "EQU".

However, if EQ will always be followed by, let's say, the rule "HASH",
though it doesn't make any sense, You could do this:

(("EQ") (HASH))=>"EQ"{$setType(EQ);}

In this case, only when "EQ" is followed by HASH, it will not be an
IDENTIFIER.
 
Hope this helps.

Bharath.


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

From parrt at cs.usfca.edu  Wed Apr  6 10:42:37 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Apr  6 10:42:37 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <20050406082445.9B665290539@new.knowspam.net>
References: <20050406082445.9B665290539@new.knowspam.net>
Message-ID: <bddfab94ea773d30cb5dac38f5769c53@cs.usfca.edu>


On Apr 6, 2005, at 1:51 AM, Scott Stanchfield wrote:
> Ter -- can you make a distinction like this for the ANTLR 3 code?

I have done so.  The package structure is currently:

org/antlr/analysis
org/antlr/codegen
org/antlr/codegen/templates
org/antlr/misc
org/antlr/runtime
org/antlr/runtime/debug
org/antlr/runtime/tree
org/antlr/test
org/antlr/test/unit
org/antlr/tool
org/antlr/tool/templates
org/antlr/tool/templates/dot
org/antlr/tool/templates/messages

Howz dat? :)

runtime (minus debugging stuff) is about 2.5k lines and 23.6k in a jar. 
  Missing some tree stuff which will appear in the summer.

Ter
> --
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From mail at martin-probst.com  Wed Apr  6 11:24:23 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Apr  6 11:24:30 2005
Subject: [antlr-interest] Line number in AST
In-Reply-To: <20050405210649.15247.qmail@web53908.mail.yahoo.com>
References: <20050405210649.15247.qmail@web53908.mail.yahoo.com>
Message-ID: <1112811863.740.1.camel@narr.homeip.net>

Hi,

> I want to get the line number of java code while
> parsing the source code. How can I generate AST with
> line number in the node?

ASTs are generally generated with line numbers in them, BaseAST has a
method called "getLine()".

>  Because I am new to Antlr, I
> expect to see some examples about this. 

If you want to know how to get the full location (including column) read
the ANTLR manual.

Regards,
Martin

From Bharath.Sundararaman at starthis.com  Wed Apr  6 11:27:43 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Wed Apr  6 11:27:45 2005
Subject: [antlr-interest] Line number in AST
Message-ID: <B1180416E5C44E49AE556D23DBB45B290614B3@webmail.starthis.com>

Hi Martin,

This link might be useful to you:
http://www.milk.com/kodebase/antlr-tutorial/

Bharath.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Martin Probst
Sent: Wednesday, April 06, 2005 1:24 PM
To: FC
Cc: ANTLR Interest
Subject: Re: [antlr-interest] Line number in AST

Hi,

> I want to get the line number of java code while
> parsing the source code. How can I generate AST with
> line number in the node?

ASTs are generally generated with line numbers in them, BaseAST has a
method called "getLine()".

>  Because I am new to Antlr, I
> expect to see some examples about this. 

If you want to know how to get the full location (including column) read
the ANTLR manual.

Regards,
Martin

From petasis at iit.demokritos.gr  Wed Apr  6 11:04:16 2005
From: petasis at iit.demokritos.gr (Georgios Petasis)
Date: Wed Apr  6 11:28:46 2005
Subject: [antlr-interest] How to measure character distance from the file
	start?
Message-ID: <000a01c53ad3$0d73a3c0$0100a8c0@aias>

Dear list members,

I have written a grammar that "filters" free text, to locate
text fragments that obey the grammar. This works like
the "filter" example of ANTLR distribution.
However, I don't know how to get the distance of an
identifed text fragment from the text start.
Because I have the rule in the lexer to skip anything that
doesn't match in another lexer rule, I have no idea what is
the character offset of the first token that finally matched
my grammar. I have attached a tiny fraction of my grammar
& the code that uses it. The real grammar is quite complex
(in fact I have to set AST generation to off to get the generated 
files to compile), so please take this into consideration in
any possible suggestions. In general, what is the
"official" way of getting the character offsets of both
the start and the end of the matching text fragment?
I have looked into the sources, and AST elements do not
seem to hold this information. Do I have to provide
a modified AST tree implementation? And if I turn off AST
generation, where can I store this information?

I think that the only information I have to compute is
the offset of parse start, as the end is easy to get (I can just ask
the lexer about the current line/column).

Any ideas?
Kind regards,

George Petasis
-------------- next part --------------
A non-text attachment was scrubbed...
Name: out.g
Type: application/octet-stream
Size: 1381 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050406/aab21fe5/out.obj
-------------- next part --------------
/*
 * This file was automatically generated from grammar out.grm
 */
#include <iostream>
#include <sstream>
#include "antlr/AST.hpp"
#include "outLexer.hpp"
#include "outParser.hpp"

int main( int argc, char* argv[] ) {
  ANTLR_USING_NAMESPACE(std)
  ANTLR_USING_NAMESPACE(antlr)
  try {
    istream *input = &cin;
    const char *filename = "<cin>";

    outLexer lexer(*input);
    lexer.setFilename(filename);
    lexer.resetHasMoreTokens();
    outParser parser(lexer);
    parser.setFilename(filename);
    ASTFactory ast_factory;
    parser.initializeASTFactory(ast_factory);
    parser.setASTFactory(&ast_factory);
    // Parse the input expression
    while (lexer.hasMoreTokens()) {
      cout << "Lexer Start State: line=" << lexer.getLine()
           << ", col=" << lexer.getColumn() << endl;
      try {
        parser.p_S();
      } catch (ANTLR_USE_NAMESPACE(antlr)RecognitionException& ex) {
        // Parsing has failed.
        // parser.reportError(ex);
        parser.consume();
        continue;
      }
      cout << "Lexer State: line=" << lexer.getLine()
           << ", col=" << lexer.getColumn() << endl;
      RefAST t = parser.getAST();
      if (t) {
        // Print the resulting tree out in LISP notation
        cout << t->toStringTree() << endl;
      } else {
        cout << "No tree produced" << endl;
      }
    }; // while (lexer.hasMoreTokens())
  }
  catch(ANTLRException& e) {
    cerr << "Parse exception: " << e.toString() << endl;
    return -1;
  }
  catch(exception& e) {
    cerr << "exception: " << e.what() << endl;
    return -1;
  }
  return 0;
}; /* main */
From luisl at scarab.co.za  Wed Apr  6 12:57:09 2005
From: luisl at scarab.co.za (Luis Leal)
Date: Wed Apr  6 12:57:26 2005
Subject: [antlr-interest] ANTLR 2.7.5 Bug 
In-Reply-To: <e8a3df20777c53fddea878c62bb55f4f@cs.usfca.edu>
Message-ID: <MPEMLILMNEOKCPPBGEMKMEEBCGAA.luisl@scarab.co.za>

I forgot to mention I'm using the source distribution. I had a quick look
and the recover method is also missing from CharScanner.java in the source
distribution.

-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu]
Sent: 06 April 2005 02:02 AM
To: ''antlr-interest' Interest'
Subject: Re: [antlr-interest] ANTLR 2.7.5 Bug

On Apr 5, 2005, at 1:19 PM, Luis Leal wrote:

> Hi,
>
> I've found the following small bug in the 2.7.5 C# runtime for which I
> couldn't find a report on the list. (I haven't checked the java or
> other
> runtimes).
>
> Lexers generated with defaultErrorHandler=true contain a reference to a
> recover method which does not seem to be implemented.  Copying the
> recover
> method from Parser.cs to CharScanner.cs resolves the problem.

Hmm...Michael can correct me, but I thought we fixed that right before
2.7.5 shipped...maybe it was just after.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com






From ewbank at gmail.com  Wed Apr  6 13:07:11 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Apr  6 13:07:15 2005
Subject: [antlr-interest] Is there a Cobol Grammar in Antlr?
In-Reply-To: <20050406144947.98637.qmail@web52802.mail.yahoo.com>
References: <20050406144947.98637.qmail@web52802.mail.yahoo.com>
Message-ID: <dd3a065f05040613074f0fc4fe@mail.gmail.com>

COBOL has a grammar??  If you have an LALR, you can find information
on LALR->LL conversion on the web, here:
[1] http://www.google.com/search?q=LALR+LL+conversion

which leads to a few (strangely, ANTLR-centric :-) web pages:
[2] http://www.javadude.com/articles/lalrtoll.html
[3] http://www.zenspider.com/Languages/PCCTS/LR2LL.html

On Apr 6, 2005 10:49 AM, Fan Yang <fanyang_32@yahoo.ca> wrote:
> Hi,
> 
> I'm working on a project which need Cobol grammar.
> After research on antlr website and antlr archives, I
> didn't find it although long time ago several persons
> talked about it.
> 
> I know that the Gold Parser has a Cobol grammar(LALR),
> is it possible to convert it to antlr? Is there a
> Cobol grammar in Antlr? May I get a version in any
> changes? Or Can somebody point me to somewhere I can
> get useful information about it?
From PKronenberg at technicacorp.com  Wed Apr  6 13:09:55 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Wed Apr  6 13:09:21 2005
Subject: [antlr-interest] Parsing keyword vs symbol
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA303@mail-hq1.Technica1.com>

Bryan,
   thanks for your response.  I'm trying to understand the best way to
use the tool.  It's not always straight forward.

If I understand you correctly, I need two different tokens: one, defined
in the lexer, to represent the symbol (e.g., EQ1: '=') and another,
defined in the parser, to represent the keyword (tokens: EQ2="EQ".  And
then, in the parser, I would need to test for all posibilities, e.g.
  relationalExpr: term (EQ1 | EQ2 | LT1 | LT2 | GT1 | GT2 ...) term

Is this correct? 

Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com

-----Original Message-----
From: Bryan Ewbank [mailto:ewbank@gmail.com] 
Sent: Wednesday, April 06, 2005 4:00 PM
To: Peter Kronenberg
Subject: Re: [antlr-interest] RE: antlr-interest Digest, Vol 5, Issue 11

It /is/ a lexer rule.  Since "eq" looks like an /identifier/, it's
easiest to assume it's an identier and then correct that assumption
with a lookup table, as previously suggested.

You can certainly do what you like with the tools, but the facility
provided for keyword recognition (things like "for", "while",
"integer", etc) is exactly the facility that fits your needs here for
the keyword "eq":
   IDENT options {testLiterals=true;} ...
   // i.e., report the appropriate literal
   // if any is found (e.g., "eq" => EQ, "for" => FOR),
   // otherwise report that an IDENT was found

At another level, consider that error messages from the parser may
actually care whether it was "eq" or "=" - imagine the user's
confusion if you reported an error at a nonexistent token.

Another alternative, if you'd rather, is to run it thru cpp with:
   #define eq =
   #define ne !=
   ...

Hope this helps,
- Bryan

On Apr 6, 2005 1:27 PM, Peter Kronenberg <PKronenberg@technicacorp.com>
wrote:
> Well, I think it makes sense for it to be a lexer rule, since the
parser
> shouldn't care or need to know the exact for of the token, either EQ
or
> '='.

The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

From termim at charter.net  Tue Apr  5 22:13:17 2005
From: termim at charter.net (Mikhail Terekhov)
Date: Wed Apr  6 16:23:31 2005
Subject: [antlr-interest] ANTLR 2.7.5 Python runtime bug?
Message-ID: <d2vr1h$ig0$1@sea.gmane.org>

Hi,

In Python runtime the consumeUntil method is missing in the CharScanner 
class. Looks like a bug?

Thanks,
Mikhail

From hombre at gmail.com  Wed Apr  6 18:00:03 2005
From: hombre at gmail.com (Tom Verbeure)
Date: Wed Apr  6 18:00:09 2005
Subject: [antlr-interest] Cygwin and 2.7.5 of Antlr
In-Reply-To: <42543DBC.1060508@catalina-inter.net>
References: <424792B9.1020501@catalina-inter.net>
	<f7896340050329093460fcf22b@mail.gmail.com>
	<42543DBC.1060508@catalina-inter.net>
Message-ID: <f789634005040618002d962944@mail.gmail.com>

> >I haven't tried compling 2.7.5 yet, but I think that you forgot to do
> >step 4: the ./antrl/debug/misc directory tries to compile swing code,
> >but (as far as I can judge with my very limited understanding of Java
> >and GCJ) this library isn't supported very well for GCJ.
> >That why, in step 4, I simply deleted this directory which magically
> >seemed to solve the problem.
> >
> >Tom
> >
> Have you tried 2.7.5 yet?  I did step 4 and still had the above
> problem.  Please advise.

It seems that by un-jarring the antlr-2.7.5.jar file, .class files are
extracted into the ./antlr/debug/misc directory. Basically, the
instructions are wrong in that steps 4 & 5 should be done AFTER step
6.

I have just tried it this way and it seems to work at least until step
9. I didn't try the later steps.

Terrence, 

can you fix the instructions that posted on your website into:
...
4. Un-jar all the files in the antlr.jar, back into their original
position. jar xfv antlr.jar
5. Delete AWT dependent code: cd basedir/antlr/debug rm -fr misc
6. cd basedir
...

Tom
From tangfc2001 at yahoo.com  Wed Apr  6 22:32:00 2005
From: tangfc2001 at yahoo.com (Terry)
Date: Wed Apr  6 22:32:05 2005
Subject: [antlr-interest] Line number in AST
In-Reply-To: 6667
Message-ID: <20050407053200.99057.qmail@web53904.mail.yahoo.com>

Hi,

I am thinking to create my own AST which stores the
line number of parsing code. 

public class MyAST extends antlr.CommonAST {

    private int lineNumber;
    ...
    public void initialize( antlr.Token t )
    {
       	   super.initialize(t);
	   setLine(t.getLine() );
    }






--- Bharath Sundararaman
<Bharath.Sundararaman@starthis.com> wrote:
> Hi Martin,
> 
> This link might be useful to you:
> http://www.milk.com/kodebase/antlr-tutorial/
> 
> Bharath.
> 
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org
> [mailto:antlr-interest-bounces@antlr.org] On Behalf
> Of Martin Probst
> Sent: Wednesday, April 06, 2005 1:24 PM
> To: FC
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] Line number in AST
> 
> Hi,
> 
> > I want to get the line number of java code while
> > parsing the source code. How can I generate AST
> with
> > line number in the node?
> 
> ASTs are generally generated with line numbers in
> them, BaseAST has a
> method called "getLine()".
> 
> >  Because I am new to Antlr, I
> > expect to see some examples about this. 
> 
> If you want to know how to get the full location
> (including column) read
> the ANTLR manual.
> 
> Regards,
> Martin
> 
> 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From tangfc2001 at yahoo.com  Wed Apr  6 22:31:59 2005
From: tangfc2001 at yahoo.com (Terry)
Date: Wed Apr  6 22:32:08 2005
Subject: [antlr-interest] Line number in AST
In-Reply-To: 6667
Message-ID: <20050407053200.12122.qmail@web53907.mail.yahoo.com>

Hi,

I am thinking to create my own AST which stores the
line number of parsing code. 

public class MyAST extends antlr.CommonAST {

    private int lineNumber;
    ...
    public void initialize( antlr.Token t )
    {
       	   super.initialize(t);
	   setLine(t.getLine() );
    }






--- Bharath Sundararaman
<Bharath.Sundararaman@starthis.com> wrote:
> Hi Martin,
> 
> This link might be useful to you:
> http://www.milk.com/kodebase/antlr-tutorial/
> 
> Bharath.
> 
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org
> [mailto:antlr-interest-bounces@antlr.org] On Behalf
> Of Martin Probst
> Sent: Wednesday, April 06, 2005 1:24 PM
> To: FC
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] Line number in AST
> 
> Hi,
> 
> > I want to get the line number of java code while
> > parsing the source code. How can I generate AST
> with
> > line number in the node?
> 
> ASTs are generally generated with line numbers in
> them, BaseAST has a
> method called "getLine()".
> 
> >  Because I am new to Antlr, I
> > expect to see some examples about this. 
> 
> If you want to know how to get the full location
> (including column) read
> the ANTLR manual.
> 
> Regards,
> Martin
> 
> 


		
__________________________________ 
Yahoo! Messenger 
Show us what our next emoticon should look like. Join the fun. 
http://www.advision.webevents.yahoo.com/emoticontest
From tangfc2001 at yahoo.com  Wed Apr  6 22:53:42 2005
From: tangfc2001 at yahoo.com (Terry)
Date: Wed Apr  6 22:53:46 2005
Subject: [antlr-interest] Store Line Number in AST node 
Message-ID: <20050407055342.47555.qmail@web53909.mail.yahoo.com>

Hi,

I am thinking to create my own AST class which stores
line number of parsing code. 

public class MyAST extends antlr.CommonAST {

  private int lineNumber;
  ...
    public void initialize( antlr.Token t )
    {
       	   super.initialize(t);
	   setLine(t.getLine() );
    }

     ...

	// my extensions
	public void setLine(int l_)
	{
		lineNumber = l_;
	}

	public int getLine( )
	{
		  return lineNumber;

	}
}

And I add 
option{
...
ASTLabelType = "MyAST";
}
in grammar file which is borrowed from
antlr-2.7.3\examples\java\java\.

I use my new defined AST class as:

JavaLexer lexer = new JavaLexer(r);
JavaRecognizer parser = new JavaRecognizer(lexer);
parser.compilationUnit();
MyAST p= (MyAST)parser.getAST();

Then I have the run-time error:
java.lang.ClassCastException at
JavaRecognizer.modifer, the source code at that line
is: tmp34_AST = (MyAST)astFactory.create(LT(1)); I
wonder why I can't cast it into my new AST class.

Thanks

Terry


	
		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - You care about security. So do we. 
http://promotions.yahoo.com/new_mail
From mmoktali at bphx.dk  Thu Apr  7 00:21:02 2005
From: mmoktali at bphx.dk (Meena Moktali)
Date: Thu Apr  7 00:22:44 2005
Subject: [antlr-interest] measure line size.
Message-ID: <389DFA1991602B4DB5E5691B00929EB904FCDA@bpsdk910.bphx.dk>

hi all!
I want to know the length of a line.A sample text is as follows.

"map CURRENCY_SPACE in KSPS4_MSG to TEXT_CODE of STD_MSG_PARM_V of STD_MSG_CLIENT_SRV_I"

I want to divide the line into 2 if it increases more than 72 characters.And the line break should be at
an 'of' or 'to'.

any ideas?

Meena




-----Original Message-----
From: Bharath Sundararaman [mailto:Bharath.Sundararaman@starthis.com]
Sent: 6. april 2005 21:28
To: Martin Probst; FC
Cc: ANTLR Interest
Subject: RE: [antlr-interest] Line number in AST


Hi Martin,

This link might be useful to you:
http://www.milk.com/kodebase/antlr-tutorial/

Bharath.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Martin Probst
Sent: Wednesday, April 06, 2005 1:24 PM
To: FC
Cc: ANTLR Interest
Subject: Re: [antlr-interest] Line number in AST

Hi,

> I want to get the line number of java code while
> parsing the source code. How can I generate AST with
> line number in the node?

ASTs are generally generated with line numbers in them, BaseAST has a
method called "getLine()".

>  Because I am new to Antlr, I
> expect to see some examples about this. 

If you want to know how to get the full location (including column) read
the ANTLR manual.

Regards,
Martin

From ewbank at gmail.com  Thu Apr  7 04:31:05 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Apr  7 04:31:07 2005
Subject: [antlr-interest] Re: Parsing keyword vs symbol
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA303@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA303@mail-hq1.Technica1.com>
Message-ID: <dd3a065f050407043111708235@mail.gmail.com>

I think the key is that we are miscommunicating and I missed it. 
Sorry about that :-(

There is only one /token/ (EQ), and the lexer uses that /token/ to
tell the parser that it saw one of two strings: the string "=" or the
string "eq".

Here's a sketch of the lexer:

  class MyLex extends Lexer;
  options { testLiterals=false; }   // don't need to test everywhere
  tokens { EQ="eq"; }
  EQ: "=";
  IDENT { testLiterals=true; }: ...; // test for tokens here

What happens:

  if lexer sees "=", return EQ
  else if lexer sees whatever is an IDENT, then
    if the ident is "eq" return EQ
    else return IDENT
    endif
  endif

The parser need only deal with one /token/, but the generated nodes
(AST nodes) in the parser will contain the pair <EQ,"=">, or the pair
<EQ,"eq">.
  getType -> EQ
  getText -> "=" or "eq"

Hope this helps,
- B

On Apr 6, 2005 4:09 PM, Peter Kronenberg <PKronenberg@technicacorp.com> wrote:
> Bryan,
>    thanks for your response.  I'm trying to understand the best way to
> use the tool.  It's not always straight forward.
> 
> If I understand you correctly, I need two different tokens: one, defined
> in the lexer, to represent the symbol (e.g., EQ1: '=') and another,
> defined in the parser, to represent the keyword (tokens: EQ2="EQ".  And
> then, in the parser, I would need to test for all posibilities, e.g.
>   relationalExpr: term (EQ1 | EQ2 | LT1 | LT2 | GT1 | GT2 ...) term
> 
> Is this correct?
From mmoktali at bphx.dk  Thu Apr  7 05:07:10 2005
From: mmoktali at bphx.dk (Meena Moktali)
Date: Thu Apr  7 05:08:52 2005
Subject: [antlr-interest]  character scan
Message-ID: <389DFA1991602B4DB5E5691B00929EB9044ED3@bpsdk910.bphx.dk>

hi all!
I want to know the length of a line.A sample text is as follows.

"map CURRENCY_SPACE in KSPS4_MSG to TEXT_CODE of STD_MSG_PARM_V of STD_MSG_CLIENT_SRV_I"

I want to divide the line into 2 if it increases more than 72 characters.And the line break should be at
an 'of' or 'to'.

any ideas?

Meena




-
From Bharath.Sundararaman at starthis.com  Thu Apr  7 05:13:39 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Thu Apr  7 05:13:44 2005
Subject: [antlr-interest] Store Line Number in AST node 
Message-ID: <B1180416E5C44E49AE556D23DBB45B290614BB@webmail.starthis.com>

Hi Terry,

Add this line of code:
parser.setASTNodeClass("MyAST");

Then, call your top most parser rule as usual:
parser.CompilationUnit();

NOTE:
If you do not properly mention the package name, for eg,
Parser.setASTNodeClass("myproject.MYAST"); Or else you will get an error
saying Can't find/access AST Node type MyAST"

Hope this helps.

Bharath.


-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terry
Sent: Thursday, April 07, 2005 12:54 AM
To: ANTLR Interest
Subject: [antlr-interest] Store Line Number in AST node 

Hi,

I am thinking to create my own AST class which stores
line number of parsing code. 

public class MyAST extends antlr.CommonAST {

  private int lineNumber;
  ...
    public void initialize( antlr.Token t )
    {
       	   super.initialize(t);
	   setLine(t.getLine() );
    }

     ...

	// my extensions
	public void setLine(int l_)
	{
		lineNumber = l_;
	}

	public int getLine( )
	{
		  return lineNumber;

	}
}

And I add 
option{
...
ASTLabelType = "MyAST";
}
in grammar file which is borrowed from
antlr-2.7.3\examples\java\java\.

I use my new defined AST class as:

JavaLexer lexer = new JavaLexer(r);
JavaRecognizer parser = new JavaRecognizer(lexer);
parser.compilationUnit();
MyAST p= (MyAST)parser.getAST();

Then I have the run-time error:
java.lang.ClassCastException at
JavaRecognizer.modifer, the source code at that line
is: tmp34_AST = (MyAST)astFactory.create(LT(1)); I
wonder why I can't cast it into my new AST class.

Thanks

Terry


	
		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - You care about security. So do we. 
http://promotions.yahoo.com/new_mail
From Bharath.Sundararaman at starthis.com  Thu Apr  7 05:33:39 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Thu Apr  7 05:33:43 2005
Subject: [antlr-interest]  character scan
Message-ID: <B1180416E5C44E49AE556D23DBB45B290614BC@webmail.starthis.com>

Hi Meena,

Here's a suggestion for computing line length:

For each of your tokens, the getColumn() method already provides you
with the beginning column; If you know how to find the ending column
number of a token (for now, assume you do), endColumn() - getColumn()
gives you the length of a token. 

In the lexer, if you have a counter that keeps incrementing every time a
white space is encountered, you would cover the whitespaces.

Add up the lengths of the tokens that you encounter with the whitespaces
and you get the length of line.A

When the length increases 72, you could check if the next token fetched
is an "of" or "to" and then do the line break.

Two things you should definitely look at:

1) antlr-2.7.x\examples\java\preserveWhiteSpace is an example grammar
that comes with ANTLR installation and 

2) To compute the ENDING COLUMN of a token, refer to this tutorial:
http://www.milk.com/kodebase/antlr-tutorial/

Hope this helps.

Bharath.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Meena Moktali
Sent: Thursday, April 07, 2005 7:07 AM
To: atripp@comcast.net; Bryan Ewbank; Antlr-Interest (E-mail)
Subject: RE: [antlr-interest] character scan

hi all!
I want to know the length of a line.A sample text is as follows.

"map CURRENCY_SPACE in KSPS4_MSG to TEXT_CODE of STD_MSG_PARM_V of
STD_MSG_CLIENT_SRV_I"

I want to divide the line into 2 if it increases more than 72
characters.And the line break should be at
an 'of' or 'to'.

any ideas?

Meena




-
From fanyang_32 at yahoo.ca  Thu Apr  7 08:05:32 2005
From: fanyang_32 at yahoo.ca (Fan Yang)
Date: Thu Apr  7 08:05:34 2005
Subject: [antlr-interest] Is there a Cobol Grammar in Antlr?  
Message-ID: <20050407150532.73853.qmail@web52809.mail.yahoo.com>


Hi Bryan,

Thank you for your response.
>COBOL has a grammar??  If you have an LALR, you can find information
>on LALR->LL conversion on the web.
 
Yes,  Gold Parser has a LALR grammar and COBOL also has an EBNF grammar: http://www.cs.vu.nl/grammars/vs-cobol-ii/#gdef:data-description-entry 
 
I just wonder how hard to convert it to LL grammar because COBOL has so many rules and keywords. Anyway, I'll have a try. Thank you again.
 
Fan
 



---------------------------------
Post your free ad now! Yahoo! Canada Personals
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050407/14263cd0/attachment.html
From scott at javadude.com  Thu Apr  7 08:06:54 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Apr  7 08:06:59 2005
Subject: [antlr-interest] Is there a Cobol Grammar in Antlr?  
In-Reply-To: <20050407150532.73853.qmail@web52809.mail.yahoo.com>
Message-ID: <20050407144011.19A48290BF2@new.knowspam.net>

See http://www.javadude.com/articles/lalrtoll.html
 
Later,
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Fan Yang
Sent: Thursday, April 07, 2005 11:06 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Is there a Cobol Grammar in Antlr? 


Hi Bryan,
Thank you for your response.
>COBOL has a grammar??  If you have an LALR, you can find information
>on LALR->LL conversion on the web.
 
Yes,  Gold Parser has a LALR grammar and COBOL also has an EBNF grammar:
http://www.cs.vu.nl/grammars/vs-cobol-ii/#gdef:data-description-entry 
 
I just wonder how hard to convert it to LL grammar because COBOL has so many
rules and keywords. Anyway, I'll have a try. Thank you again.
 
Fan
 




  _____  

Post your free ad now!  <http://ca.personals.yahoo.com/> Yahoo! Canada
Personals


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050407/f1508346/attachment.html
From PKronenberg at technicacorp.com  Thu Apr  7 08:19:29 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Thu Apr  7 08:18:56 2005
Subject: [antlr-interest] Ways to specify tokens
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA508@mail-hq1.Technica1.com>

There appear to be 2 ways to specify tokens and I'm not sure of the
difference.  The manual says it's:

Tokenspec: tokens { token1; token2; token3;... }

But Tokenspec doesn't seem to be allowed.  It only allows the keyword
'tokens' followed by a list of tokens in curly braces.

But in some sample code, I've seen this: 

defTokenTypes
        :       ID INT ASSIGN PLUS         ;


This just looks like a parser rule to me, although the tokens haven't
been defined.

What does this mean and what is the difference between the two?

Peter


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050407/6a907da6/attachment.html
From parrt at cs.usfca.edu  Thu Apr  7 09:06:00 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Apr  7 09:06:03 2005
Subject: [antlr-interest] Is there a Cobol Grammar in Antlr?  
In-Reply-To: <20050407150532.73853.qmail@web52809.mail.yahoo.com>
References: <20050407150532.73853.qmail@web52809.mail.yahoo.com>
Message-ID: <c30ceef7f62f1c79dc087438ab8ee462@cs.usfca.edu>

Try the javacc cobol grammar.  That will be easier to convert!
Ter
On Apr 7, 2005, at 8:05 AM, Fan Yang wrote:

> Hi Bryan,
> Thank you for your response.
> >COBOL has a grammar??? If you have an LALR, you can find information
> >on LALR->LL conversion on the web.
> ?
> Yes, ?Gold Parser has a LALR grammar and COBOL?also has an EBNF 
> grammar: 
> http://www.cs.vu.nl/grammars/vs-cobol-ii/#gdef:data-description-entry?
> ?
> I just wonder how hard to convert it to LL grammar because COBOL has 
> so many rules and keywords.?Anyway, I'll have a try. Thank you again.
> ?
> Fan
> ?
>
>
> Post your free ad now! Yahoo! Canada Personals



From mail at martin-probst.com  Thu Apr  7 10:20:29 2005
From: mail at martin-probst.com (Martin Probst)
Date: Thu Apr  7 10:20:34 2005
Subject: [antlr-interest] Ways to specify tokens
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA508@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547EA508@mail-hq1.Technica1.com>
Message-ID: <1112894429.11941.10.camel@narr.homeip.net>

Hi,

> There appear to be 2 ways to specify tokens and I'm not sure of the
> difference.  The manual says it's:
> 
> Tokenspec: tokens { token1; token2; token3;? }

Actually I'm only aware of one type, and that is by writing "tokens
{ ... }". The case above is IMHO a badly written manual. The whole ANTLR
manual seems at least in part to be written a little bit too much from
the developers perspective. 
The above line is probably derived from the ANTLR internal parsing rule,
but definetly not what the user has to enter.

Apart from "tokens {}" you can of course also just write in your grammar
"EQ" and ANTLR will generate a LITERAL_EQ token. That's convenient but
especially if you want to do something with those tokens the former
method is better, I think.

Regards,
Martin

From mail at martin-probst.com  Thu Apr  7 10:35:53 2005
From: mail at martin-probst.com (Martin Probst)
Date: Thu Apr  7 10:35:59 2005
Subject: [antlr-interest] Store Line Number in AST node
In-Reply-To: <20050407055342.47555.qmail@web53909.mail.yahoo.com>
References: <20050407055342.47555.qmail@web53909.mail.yahoo.com>
Message-ID: <1112895353.11941.16.camel@narr.homeip.net>

Hi,
you have to set up an ASTFactory to use your AST node type. You will
find information about that in the manual.

Also, did you actually read my response to your original question? You
quoted it in your first two emails to this list. It contains an
explanation how to call .getLine() on AST nodes to retrieve the line
number.

regards,
Martin

Am Mittwoch, den 06.04.2005, 22:53 -0700 schrieb Terry:
> Hi,
> 
> I am thinking to create my own AST class which stores
> line number of parsing code. 
> 
> public class MyAST extends antlr.CommonAST {
> 
>   private int lineNumber;
>   ...
>     public void initialize( antlr.Token t )
>     {
>        	   super.initialize(t);
> 	   setLine(t.getLine() );
>     }
> 
>      ...
> 
> 	// my extensions
> 	public void setLine(int l_)
> 	{
> 		lineNumber = l_;
> 	}
> 
> 	public int getLine( )
> 	{
> 		  return lineNumber;
> 
> 	}
> }
> 
> And I add 
> option{
> ...
> ASTLabelType = "MyAST";
> }
> in grammar file which is borrowed from
> antlr-2.7.3\examples\java\java\.
> 
> I use my new defined AST class as:
> 
> JavaLexer lexer = new JavaLexer(r);
> JavaRecognizer parser = new JavaRecognizer(lexer);
> parser.compilationUnit();
> MyAST p= (MyAST)parser.getAST();
> 
> Then I have the run-time error:
> java.lang.ClassCastException at
> JavaRecognizer.modifer, the source code at that line
> is: tmp34_AST = (MyAST)astFactory.create(LT(1)); I
> wonder why I can't cast it into my new AST class.
> 
> Thanks
> 
> Terry
> 
> 
> 	
> 		
> __________________________________ 
> Do you Yahoo!? 
> Yahoo! Mail - You care about security. So do we. 
> http://promotions.yahoo.com/new_mail
> 

From tangfc2001 at yahoo.com  Thu Apr  7 12:15:18 2005
From: tangfc2001 at yahoo.com (Terry)
Date: Thu Apr  7 12:15:21 2005
Subject: [antlr-interest] Store Line Number in AST node
In-Reply-To: 6667
Message-ID: <20050407191519.82865.qmail@web53907.mail.yahoo.com>

Hi,
Firstly I consider your suggestion using getLine in
AST class directly, then I can call
trav_tree(parser.getAST()) to traverse the AST and
print the line number of node.

public static void trav_tree( AST top )
{
  if (top != null) {
          System.out.println(top.getLine()+" ");

    String  str;
    str = top.getText();
   System.out.println(str);
    if (top.getFirstChild() != null) {
      System.out.print("kid: ");
      trav_tree( top.getFirstChild());
    }
    if (top.getNextSibling()!=null) {
      System.out.print("sib: ");
      trav_tree( top.getNextSibling());
    }
  }
}

But since AST did not contain the line number of
token, therefore, the code prints line number always
0.

So I want to subclass AST to my own AST class which
stores linenumber as my last email.  I added
parser.setASTNodeClass("PNode"); to my code, but I
still have ClassCastException. 

Do you think own ASTFactory is required in creating
own AST class? Is there any example in creating own
ASTFactory?

thanks

Terry


--- Martin Probst <mail@martin-probst.com> wrote:
> Hi,
> you have to set up an ASTFactory to use your AST
> node type. You will
> find information about that in the manual.
> 
> Also, did you actually read my response to your
> original question? You
> quoted it in your first two emails to this list. It
> contains an
> explanation how to call .getLine() on AST nodes to
> retrieve the line
> number.
> 
> regards,
> Martin
> 
> Am Mittwoch, den 06.04.2005, 22:53 -0700 schrieb
> Terry:
> > Hi,
> > 
> > I am thinking to create my own AST class which
> stores
> > line number of parsing code. 
> > 
> > public class MyAST extends antlr.CommonAST {
> > 
> >   private int lineNumber;
> >   ...
> >     public void initialize( antlr.Token t )
> >     {
> >        	   super.initialize(t);
> > 	   setLine(t.getLine() );
> >     }
> > 
> >      ...
> > 
> > 	// my extensions
> > 	public void setLine(int l_)
> > 	{
> > 		lineNumber = l_;
> > 	}
> > 
> > 	public int getLine( )
> > 	{
> > 		  return lineNumber;
> > 
> > 	}
> > }
> > 
> > And I add 
> > option{
> > ...
> > ASTLabelType = "MyAST";
> > }
> > in grammar file which is borrowed from
> > antlr-2.7.3\examples\java\java\.
> > 
> > I use my new defined AST class as:
> > 
> > JavaLexer lexer = new JavaLexer(r);
> > JavaRecognizer parser = new JavaRecognizer(lexer);
> > parser.compilationUnit();
> > MyAST p= (MyAST)parser.getAST();
> > 
> > Then I have the run-time error:
> > java.lang.ClassCastException at
> > JavaRecognizer.modifer, the source code at that
> line
> > is: tmp34_AST = (MyAST)astFactory.create(LT(1)); I
> > wonder why I can't cast it into my new AST class.
> > 
> > Thanks
> > 
> > Terry
> > 
> > 
> > 	
> > 		
> > __________________________________ 
> > Do you Yahoo!? 
> > Yahoo! Mail - You care about security. So do we. 
> > http://promotions.yahoo.com/new_mail
> > 
> 
> 


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Personals - Better first dates. More second dates. 
http://personals.yahoo.com

From mmoktali at bphx.dk  Fri Apr  8 00:40:40 2005
From: mmoktali at bphx.dk (Meena Moktali)
Date: Fri Apr  8 00:42:23 2005
Subject: [antlr-interest]  character scan
Message-ID: <389DFA1991602B4DB5E5691B00929EB904FCDB@bpsdk910.bphx.dk>

hi Bharath,
Thanks a lot for the help.I am working on your suggestions.
The class ExtentToken will serve the purpose I guess.

Meena



-----Original Message-----
From: Bharath Sundararaman [mailto:Bharath.Sundararaman@starthis.com]
Sent: 7. april 2005 15:34
To: Meena Moktali; atripp@comcast.net; Bryan Ewbank; Antlr-Interest
(E-mail)
Subject: RE: [antlr-interest] character scan


Hi Meena,

Here's a suggestion for computing line length:

For each of your tokens, the getColumn() method already provides you
with the beginning column; If you know how to find the ending column
number of a token (for now, assume you do), endColumn() - getColumn()
gives you the length of a token. 

In the lexer, if you have a counter that keeps incrementing every time a
white space is encountered, you would cover the whitespaces.

Add up the lengths of the tokens that you encounter with the whitespaces
and you get the length of line.A

When the length increases 72, you could check if the next token fetched
is an "of" or "to" and then do the line break.

Two things you should definitely look at:

1) antlr-2.7.x\examples\java\preserveWhiteSpace is an example grammar
that comes with ANTLR installation and 

2) To compute the ENDING COLUMN of a token, refer to this tutorial:
http://www.milk.com/kodebase/antlr-tutorial/

Hope this helps.

Bharath.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Meena Moktali
Sent: Thursday, April 07, 2005 7:07 AM
To: atripp@comcast.net; Bryan Ewbank; Antlr-Interest (E-mail)
Subject: RE: [antlr-interest] character scan

hi all!
I want to know the length of a line.A sample text is as follows.

"map CURRENCY_SPACE in KSPS4_MSG to TEXT_CODE of STD_MSG_PARM_V of
STD_MSG_CLIENT_SRV_I"

I want to divide the line into 2 if it increases more than 72
characters.And the line break should be at
an 'of' or 'to'.

any ideas?

Meena




-
From riceyeh at gmail.com  Fri Apr  8 03:18:36 2005
From: riceyeh at gmail.com (Rice Yeh)
Date: Fri Apr  8 03:18:39 2005
Subject: [antlr-interest] Is there option or way to control the
	accessibility of generated methods or classes in Java?
Message-ID: <47f71d9405040803182e45f6ac@mail.gmail.com>

Hi,
  Antrl generat methods or classes from grammer files as public. Is
there option or way to control the accessibility of generated methods
or classes in Java? I want to encapsule the generated classes in my
case. Otherwise, the users of my compiler are intented to use the
wrong methods.

Regards,
Rice
From wiggjd at lsbu.ac.uk  Fri Apr  8 04:19:30 2005
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Fri Apr  8 04:13:23 2005
Subject: [antlr-interest] Re: C++ grammar for Java output
Message-ID: <425668C2.5090504@lsbu.ac.uk>

Hello Allen,

I believe Yolanda Jargudo (yjargudo@tiscali.es) may have 
converted our C++ parser from C++ output to Java output.

David,
Research Fellow
London South Bank University
UK.

Message: 3
Date: Tue, 5 Apr 2005 12:46:13 -0400
From: "Allen Lau" <alau@tirawireless.com>
Subject: [antlr-interest] C++ grammer for Java output
To: <antlr-interest@antlr.org>
Message-ID:
	<32FDE2934790A148B7760FDD7843C27903DB7764@exchange.bspark.com>
Content-Type: text/plain;	charset="iso-8859-1"

Hi all,

I am looking for a C++ grammar file for Java output.  I am aware 
of the existence of the work from David Wigg et all. 
Unfortunately it can only produce C++ output.

If you have what I am looking for.  Please let me know.  Much 
appreciated!

Regards,
Allen

From francis.andre at easynet.fr  Fri Apr  8 13:27:58 2005
From: francis.andre at easynet.fr (Francis ANDRE)
Date: Fri Apr  8 13:28:10 2005
Subject: [antlr-interest] Antlr-eclipse plugin
References: <20050406080710.079C3290389@new.knowspam.net>
Message-ID: <00e001c53c79$742b6ec0$0a02a8c0@asterix>

Antlr-eclipse pluginHi

Neither me, I was getting the notification from sourceforge...Scott, what should be updated on sourceforge to get  notified???

Cheers

Francis ANDRE
ICQ#99389956

A good friend will come bail you out of jail..........
but, a true friend....will be sitting next to you saying:
 "...that was fun."

  ----- Original Message ----- 
  From: Scott Stanchfield 
  To: 'Peter Kronenberg' ; antlr-interest@antlr.org 
  Sent: Wednesday, April 06, 2005 10:33 AM
  Subject: RE: [antlr-interest] Antlr-eclipse plugin


  I'm glad you said something. I had my old email address registered @ sourceforge and wasn't getting notifications b/c of it...

  As for an answer...

  The plugin uses the standard eclipse update mechanism. All you need to do is go to Eclipse's Help->Software Updates dialog, enter the update site name, and work through the dialog.

  I'm going to try to make it more obvious to do this through the sourceforge page. If you go to the "Home Page" for the plugin from sourceforge, the instructions specify to use the install tool.

  Later,
  -- Scott



----------------------------------------------------------------------------
    From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peter Kronenberg
    Sent: Monday, April 04, 2005 10:25 AM
    To: antlr-interest@antlr.org
    Subject: [antlr-interest] Antlr-eclipse plugin


    I posted a message on the antlr plugin page on sourceforge, but that doesn't seem to have too much activity.  I'm trying to get more info on the plugin.  It's not really clear what pieces I need in order to install it, especially on Eclipse 3.1.  I'm already running antlr 2.7.5

    Thanks, 
    Peter 



    Peter Kronenberg 
    Software Engineer 
    (703) 885-1222 
    pkronenberg@technicacorp.com 

          The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.
         

     
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050408/d21330b9/attachment.html
From parrt at cs.usfca.edu  Fri Apr  8 14:30:54 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Apr  8 14:30:52 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
Message-ID: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>

Howdy folks,

Jean Bovet has made some short videos of ANTLRWorks in action.  We gave 
a presentation to the smarties at BEA yesterday on ANTLR/StringTemplate 
and ANTLRWorks.  Went over well according to feedback. :)

Jean has made just insane progress in 2 months.  We expect an early 
access release with ANTLR v3 in May probably.

ANTLRWorks only works with v3 and is not yet integrated into any IDEs 
like Eclipse or Intellij.

http://www.antlr.org/works/index.html

Enjoy :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From monty at codetransform.com  Fri Apr  8 11:51:22 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Fri Apr  8 14:51:50 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
References: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
Message-ID: <4256D2AA.6060208@codetransform.com>

Terence Parr wrote:
> Howdy folks,
> 
> Jean Bovet has made some short videos of ANTLRWorks in action.  We gave 
> a presentation to the smarties at BEA yesterday on ANTLR/StringTemplate 
> and ANTLRWorks.  Went over well according to feedback. :)
> 
> Jean has made just insane progress in 2 months.  We expect an early 
> access release with ANTLR v3 in May probably.
> 
> ANTLRWorks only works with v3 and is not yet integrated into any IDEs 
> like Eclipse or Intellij.
> 
> http://www.antlr.org/works/index.html

Looks awesome!  When is the conference going to be this year?

Monty
From travis_caldwell2000 at yahoo.com  Fri Apr  8 14:53:28 2005
From: travis_caldwell2000 at yahoo.com (Travis Caldwell)
Date: Fri Apr  8 14:53:32 2005
Subject: [antlr-interest] Any updates on the Python version of String
	Template?
In-Reply-To: 6667
Message-ID: <20050408215328.71739.qmail@web90103.mail.scd.yahoo.com>


 I got this impression from the StringTemplate home page:
http://www.stringtemplate.org/ 

    "StringTemplate is a java template engine (with ports for C# and
Python) for generating source code, web pages, emails, or any other
formatted text output."

 Under Ports: "Python version coming early 2005!"

 I found nothing in the file sharing section:
http://www.antlr.org/share/list 

 And Google Searching for "stringtemplate python" ironically brings up
the StringTemplate home page.

 I did find http://www.cheetahtemplate.org/ as a Python templating
solution that does not seem to have the huge amount of baggage that
something like Zope/ZPT has.

 I also found some posts (
http://aspn.activestate.com/ASPN/Mail/Message/Jython-users/2040516 )
about people using Jython with the Java StringTemplate. 


                 -Travis_Caldwell_

--- Kaleb Pederson <kibab@icehouse.net> wrote:
> Was somebody indeed working on a Python Version of String Template? 
> If so, 
> I'm also very curious.....
> 
> Thanks.
> 
> --Kaleb
> 
> On Wednesday 30 March 2005 7:56 pm, Travis Caldwell wrote:
> >  Being able to learn a template syntax once and use it for both
> Java
> > and Python would be great. (Of course given a choice I'd always
> pick
> > Python!)
> >
> >                 _Travis_Caldwell_
> 



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Personals - Better first dates. More second dates. 
http://personals.yahoo.com

From parrt at cs.usfca.edu  Fri Apr  8 15:06:21 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Apr  8 15:06:17 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <4256D2AA.6060208@codetransform.com>
References: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
	<4256D2AA.6060208@codetransform.com>
Message-ID: <2a9ccdc29ee98292ba3d1e9f767194d6@cs.usfca.edu>


On Apr 8, 2005, at 11:51 AM, Monty Zukowski wrote:
> Looks awesome!  When is the conference going to be this year?

I'm thinking October again...I'm working with a company who thinks they 
can host it...should know for sure next week.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From parrt at cs.usfca.edu  Fri Apr  8 17:46:24 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Apr  8 17:46:19 2005
Subject: [antlr-interest] executing actions while recovering from syntax
	errors
Message-ID: <3662335d9f2de4db7d7e1af71b337335@cs.usfca.edu>

Hi,

Following Josef Grosch's nice error recovery work in CoCo, ANTLR v3 
goes into an "error recovery mode" upon syntax error.  It invokes 
reportError() and then recover() (with an exact FOLLOW set).  After 
recovery, it attempts to continue parsing.  Until a token is 
successfully matched, however, ANTLR is still in "recovery mode" 
meaning that no more messages will be spit out.

So, should I be executing actions during recovery mode?  Seems to me 
that until the next we match a token properly, actions may not be 
executing in the environment they expect.  For example,

decl : type ID '=' expr {action2} ';' ;
....
expr : ... {action1} ... ;

If an error occurs in expr, action1 may not be executed.  After 
recovery (consuming tokens to resync), expr returns to the invoker: 
decl.  At this point, action2 may fail (with an exception or just 
produce bad results) because action1 didn't execute.  ANTLR is back out 
of recovery mode when it sees the ';' probably.  At that point, it may 
be ok to execute actions.

'course once a syntax error occurs, one could argue no action is "safe".

Anyway, putting a guard around every action looks gross and takes 
time/space (oh, and I guess is no guarantee it's safe):

if ( !recoveryMode ) { action }

Anybody wanna comment?  For now, the actions are unguarded.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From oliver.zeigermann at gmail.com  Fri Apr  8 23:42:27 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Apr  8 23:42:29 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
References: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
Message-ID: <9da4f45205040823426234b046@mail.gmail.com>

This looks most promising. I am very impressed! Looking forward to v3
and the GUI!

Oliver

On Apr 8, 2005 11:30 PM, Terence Parr <parrt@cs.usfca.edu> wrote:
> Howdy folks,
> 
> Jean Bovet has made some short videos of ANTLRWorks in action.  We gave
> a presentation to the smarties at BEA yesterday on ANTLR/StringTemplate
> and ANTLRWorks.  Went over well according to feedback. :)
> 
> Jean has made just insane progress in 2 months.  We expect an early
> access release with ANTLR v3 in May probably.
> 
> ANTLRWorks only works with v3 and is not yet integrated into any IDEs
> like Eclipse or Intellij.
> 
> http://www.antlr.org/works/index.html
> 
> Enjoy :)
> 
> Ter
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> 
>
From torkildr at resheim.no  Sat Apr  9 01:33:20 2005
From: torkildr at resheim.no (Torkild =?iso-8859-1?q?Ulv=F8y_Resheim?=)
Date: Sat Apr  9 01:36:47 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
References: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
Message-ID: <200504091033.21349.torkildr@resheim.no>

On Friday 08 April 2005 23:30, Terence Parr wrote:
> Howdy folks,
>
> Jean Bovet has made some short videos of ANTLRWorks in action.  We gave
> a presentation to the smarties at BEA yesterday on ANTLR/StringTemplate
> and ANTLRWorks.  Went over well according to feedback. :)
>
> Jean has made just insane progress in 2 months.  We expect an early
> access release with ANTLR v3 in May probably.
>
> ANTLRWorks only works with v3 and is not yet integrated into any IDEs
> like Eclipse or Intellij.
[snip]

Looks like a great tool! I'm really looking forward to getting ANTLR v3 and 
ANTLRWorks into Eclipse :-) Keep up the good work!
-- 
Med vennlig hilsen / Kind regards                                  ((
Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
bug is indistinguishable from a feature."                         |____|'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050409/591fd832/attachment-0001.bin
From dcaton at shorelinesoftware.com  Sat Apr  9 07:52:55 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Sat Apr  9 07:53:08 2005
Subject: [antlr-interest] executing actions while recovering from
	syntaxerrors
In-Reply-To: <3662335d9f2de4db7d7e1af71b337335@cs.usfca.edu>
Message-ID: <1113058540.27611@mx9.mysite4now.com>

Ter:

I generally need to guard actions anyhow, to prevent null pointer exceptions
when a rule doesn't successfully match.  So automatic guarding would be
beneficial and simplify action code, at least for me.  I'd love to eliminate
the repetitious "if (#x != NULL )" tests I have all over the place.

However, there may be cases where you'd always want to run an action.
Perhaps an option to suppress guarding in that case:

  { options { guarded = false; } : <action code> }

This would also serve to self-document the fact that the action always runs,
even if the rule fails.  You could also have a global option to turn it on
or off for the whole grammar, to maintain compatibility with existing
grammar and satisfy everyone's personal preference.

Don
 
> Anyway, putting a guard around every action looks gross and 
> takes time/space (oh, and I guess is no guarantee it's safe):
> 
> if ( !recoveryMode ) { action }
> 
> Anybody wanna comment?  For now, the actions are unguarded.
> 
> Ter
> --
> CS Professor & Grad Director, University of San Francisco 
> Creator, ANTLR Parser Generator, http://www.antlr.org 
> Cofounder, http://www.jguru.com
> 
> 
> 
> 


From antlr at alxp.gr  Sat Apr  9 08:22:45 2005
From: antlr at alxp.gr (Alexandre)
Date: Sat Apr  9 08:22:49 2005
Subject: [antlr-interest] Beginer's question, not fitting in subject
Message-ID: <1113060165.4257f3451901f@imp1-q.free.fr>

Hello,

I have a classic, I guess, question. The language I am trying to define cannot
be represented by a grammar, as it is of the form (a)n(b)n. What my file must
do is something like defining tuples, that is series of elements. Suppose that
the syntax to define a serie of values a serie of variables can have is
something like :
(X1, X2, X3)
(1, 2, 3)
(4, 5, 6)

Of course the number of variables is totally arbitrary, but for a given number,
the number the values in each following tuple of values must be the same. How
can I make that with antlr ? I thought about not having antlr detecting it,
that is to accept any list of the form (..,..) for the values, and then treat
(in Java) the result of each, and throwing if necessary an exception. But that
isn't pretty beautiful.

Do you have any suggestion ?

Thank you,

Alexandre
From scott at javadude.com  Sat Apr  9 08:28:36 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Apr  9 08:28:41 2005
Subject: [antlr-interest] Beginer's question, not fitting in subject
In-Reply-To: <1113060165.4257f3451901f@imp1-q.free.fr>
Message-ID: <20050409150116.3CD4D290605@new.knowspam.net>

Seriously... I think ANTLR is overkill for items like this.

Whenever you have line-oriented input and all lines have the same format,
I'd recommend using good old BufferedReader to read the lines and
StringTokenizer to separate them.

If you want a little more checking to see if the parens and commas are
actually there, then you'll want to use a Java regular expression (Pattern +
Matcher) if you can use Java 1.4 or later.

Hope this helps!
-- Scott

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> Sent: Saturday, April 09, 2005 11:23 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Beginer's question, not fitting in subject
> 
> Hello,
> 
> I have a classic, I guess, question. The language I am trying 
> to define cannot be represented by a grammar, as it is of the 
> form (a)n(b)n. What my file must do is something like 
> defining tuples, that is series of elements. Suppose that the 
> syntax to define a serie of values a serie of variables can 
> have is something like :
> (X1, X2, X3)
> (1, 2, 3)
> (4, 5, 6)
> 
> Of course the number of variables is totally arbitrary, but 
> for a given number, the number the values in each following 
> tuple of values must be the same. How can I make that with 
> antlr ? I thought about not having antlr detecting it, that 
> is to accept any list of the form (..,..) for the values, and 
> then treat (in Java) the result of each, and throwing if 
> necessary an exception. But that isn't pretty beautiful.
> 
> Do you have any suggestion ?
> 
> Thank you,
> 
> Alexandre
> 




From scott at javadude.com  Sat Apr  9 08:30:48 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Apr  9 08:30:54 2005
Subject: [antlr-interest] Beginer's question, not fitting in subject
In-Reply-To: <20050409150116.3CD4D290605@new.knowspam.net>
Message-ID: <20050409150327.C9FE429074E@new.knowspam.net>

I should note that I meant to use the RegEx for each line after reading the
line using the BufferedReader.

Later,
- Scott 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott 
> Stanchfield
> Sent: Saturday, April 09, 2005 11:29 AM
> To: 'Alexandre'; antlr-interest@antlr.org
> Subject: RE: [antlr-interest] Beginer's question, not fitting 
> in subject
> 
> Seriously... I think ANTLR is overkill for items like this.
> 
> Whenever you have line-oriented input and all lines have the 
> same format, I'd recommend using good old BufferedReader to 
> read the lines and StringTokenizer to separate them.
> 
> If you want a little more checking to see if the parens and 
> commas are actually there, then you'll want to use a Java 
> regular expression (Pattern +
> Matcher) if you can use Java 1.4 or later.
> 
> Hope this helps!
> -- Scott
> 
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org 
> > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> > Sent: Saturday, April 09, 2005 11:23 AM
> > To: antlr-interest@antlr.org
> > Subject: [antlr-interest] Beginer's question, not fitting in subject
> > 
> > Hello,
> > 
> > I have a classic, I guess, question. The language I am trying to 
> > define cannot be represented by a grammar, as it is of the form 
> > (a)n(b)n. What my file must do is something like defining 
> tuples, that 
> > is series of elements. Suppose that the syntax to define a serie of 
> > values a serie of variables can have is something like :
> > (X1, X2, X3)
> > (1, 2, 3)
> > (4, 5, 6)
> > 
> > Of course the number of variables is totally arbitrary, but for a 
> > given number, the number the values in each following tuple 
> of values 
> > must be the same. How can I make that with antlr ? I 
> thought about not 
> > having antlr detecting it, that is to accept any list of the form 
> > (..,..) for the values, and then treat (in Java) the result 
> of each, 
> > and throwing if necessary an exception. But that isn't pretty 
> > beautiful.
> > 
> > Do you have any suggestion ?
> > 
> > Thank you,
> > 
> > Alexandre
> > 
> 
> 
> 
> 




From scott at javadude.com  Sat Apr  9 08:43:59 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Apr  9 08:44:05 2005
Subject: [antlr-interest] Antlr-eclipse plugin
In-Reply-To: <00e001c53c79$742b6ec0$0a02a8c0@asterix>
Message-ID: <20050409151639.12A182909F2@new.knowspam.net>

I changed my personal email address.
 
I don't know if you have "monitoing" turned on. If you log in at sourceforge
and go to the forum views, there's a "monitor this forum" link (or something
like that). Click on it and it'll send email to whatever email address you
registered w/ sourceforge.
 
I had an ancient email address in there, so I wasn't getting mail...
 
Later,
-- Scott


  _____  

From: Francis ANDRE [mailto:francis.andre@easynet.fr] 
Sent: Friday, April 08, 2005 4:28 PM
To: Scott Stanchfield; 'Peter Kronenberg'; antlr-interest@antlr.org
Subject: Re: [antlr-interest] Antlr-eclipse plugin


Hi
 
Neither me, I was getting the notification from sourceforge...Scott, what
should be updated on sourceforge to get  notified???
 
Cheers
 
Francis ANDRE
ICQ#99389956
 
A good friend will come bail you out of jail..........
but, a true friend....will be sitting next to you saying:
 "...that was fun."


----- Original Message ----- 
From: Scott  <mailto:scott@javadude.com> Stanchfield 
To: 'Peter Kronenberg' <mailto:PKronenberg@technicacorp.com>  ;
antlr-interest@antlr.org 
Sent: Wednesday, April 06, 2005 10:33 AM
Subject: RE: [antlr-interest] Antlr-eclipse plugin

I'm glad you said something. I had my old email address registered @
sourceforge and wasn't getting notifications b/c of it...
 
As for an answer...
 
The plugin uses the standard eclipse update mechanism. All you need to do is
go to Eclipse's Help->Software Updates dialog, enter the update site name,
and work through the dialog.
 
I'm going to try to make it more obvious to do this through the sourceforge
page. If you go to the "Home Page" for the plugin from sourceforge, the
instructions specify to use the install tool.
 
Later,
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peter Kronenberg
Sent: Monday, April 04, 2005 10:25 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Antlr-eclipse plugin



I posted a message on the antlr plugin page on sourceforge, but that doesn't
seem to have too much activity.  I'm trying to get more info on the plugin.
It's not really clear what pieces I need in order to install it, especially
on Eclipse 3.1.  I'm already running antlr 2.7.5

Thanks, 
Peter 


Peter Kronenberg 
Software Engineer 
(703) 885-1222 
pkronenberg@technicacorp.com 


The information contained in this transmission may contain privileged and
confidential information. It is intended only for the use of the person(s)
named above. If you are not the intended recipient, you are hereby notified
that any review, dissemination, distribution or duplication of this
communication is strictly prohibited. If you are not the intended recipient,
please contact the sender by reply e-mail and destroy all copies of the
original message. Technica Corporation does not represent this e-mail to be
free from any virus, fault or defect and it is therefore the responsibility
of the recipient to first scan it for viruses, faults and defects. To reply
to our e-mail administrator directly, please send an e-mail to
postmaster@technicacorp.com. Thank you.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050409/d8b868b6/attachment.html
From antlr at alxp.gr  Sat Apr  9 09:24:25 2005
From: antlr at alxp.gr (Alexandre)
Date: Sat Apr  9 09:26:07 2005
Subject: [antlr-interest] Beginer's question, not fitting in subject
In-Reply-To: <20050409150327.C9FE429074E@new.knowspam.net>
References: <20050409150327.C9FE429074E@new.knowspam.net>
Message-ID: <1113063865.425801b92a05f@imp4-q.free.fr>

Thank you for your answer.

So I suppose this means that my feeling was right, to let Java checking it...

But the problem is a litte bit more tricky. The syntax I have is imposed, and is
different of what I gave. It is precisely this :
V= [4,5,6]
sr1 ac1	T
sr1 ac1	NT
sr1 ac2	NT
sr2 ac1	T
sr2 ac1	NT
sr2 ac2	T
sr2 ac2	NT
(It represents a CSP constraint if it does mean something to you, V are the
variables, then follow the values that they are allowed to have, in the same
order). Of course lines do not have more importance than spaces or tabs. I
could have
V= [4,5,6] sr1 ac1 T sr1 ac1 NT
which is right, but
V= [4,5,6] sr1 ac1 T sr1 ac1
or
V= [4,5,6] sr1 ac1 T sr1 ac1 NT sr1
are wrong...

So I should have a rule only for each value (sr1, NT, ...), then put Java
instructions to build dynamically the (here) three elements collections, as
Tokens come, and throw an error if something is missing. In fact this syntax is
simpler, we don't need RegEx's (maybe that's why I've been given it). Do you
think that's good, or have other suggestion ?

Thank you again,

Alexandre

Selon Scott Stanchfield <scott@javadude.com>:

> I should note that I meant to use the RegEx for each line after reading the
> line using the BufferedReader.
>
> Later,
> - Scott
>
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org
> > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott
> > Stanchfield
> > Sent: Saturday, April 09, 2005 11:29 AM
> > To: 'Alexandre'; antlr-interest@antlr.org
> > Subject: RE: [antlr-interest] Beginer's question, not fitting
> > in subject
> >
> > Seriously... I think ANTLR is overkill for items like this.
> >
> > Whenever you have line-oriented input and all lines have the
> > same format, I'd recommend using good old BufferedReader to
> > read the lines and StringTokenizer to separate them.
> >
> > If you want a little more checking to see if the parens and
> > commas are actually there, then you'll want to use a Java
> > regular expression (Pattern +
> > Matcher) if you can use Java 1.4 or later.
> >
> > Hope this helps!
> > -- Scott
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces@antlr.org
> > > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> > > Sent: Saturday, April 09, 2005 11:23 AM
> > > To: antlr-interest@antlr.org
> > > Subject: [antlr-interest] Beginer's question, not fitting in subject
> > >
> > > Hello,
> > >
> > > I have a classic, I guess, question. The language I am trying to
> > > define cannot be represented by a grammar, as it is of the form
> > > (a)n(b)n. What my file must do is something like defining
> > tuples, that
> > > is series of elements. Suppose that the syntax to define a serie of
> > > values a serie of variables can have is something like :
> > > (X1, X2, X3)
> > > (1, 2, 3)
> > > (4, 5, 6)
> > >
> > > Of course the number of variables is totally arbitrary, but for a
> > > given number, the number the values in each following tuple
> > of values
> > > must be the same. How can I make that with antlr ? I
> > thought about not
> > > having antlr detecting it, that is to accept any list of the form
> > > (..,..) for the values, and then treat (in Java) the result
> > of each,
> > > and throwing if necessary an exception. But that isn't pretty
> > > beautiful.
> > >
> > > Do you have any suggestion ?
> > >
> > > Thank you,
> > >
> > > Alexandre
> > >
> >
> >
> >
> >
>
>
>
>
>


From antlr at alxp.gr  Sat Apr  9 09:28:24 2005
From: antlr at alxp.gr (Alexandre)
Date: Sat Apr  9 09:28:28 2005
Subject: Trans.: RE: [antlr-interest] Beginer's question,
	not fitting in subject
Message-ID: <1113064104.425802a88c777@imp4-q.free.fr>


Thank you for your answer.

So I suppose this means that my feeling was right, to let Java checking it...

But the problem is a litte bit more tricky. The syntax I have is imposed, and is
different of what I gave. It is precisely this :
V= [4,5,6]
sr1 ac1	T
sr1 ac1	NT
sr1 ac2	NT
sr2 ac1	T
sr2 ac1	NT
sr2 ac2	T
sr2 ac2	NT
(It represents a CSP constraint if it does mean something to you, V are the
variables, then follow the values that they are allowed to have, in the same
order). Of course lines do not have more importance than spaces or tabs. I
could have
V= [4,5,6] sr1 ac1 T sr1 ac1 NT
which is right, but
V= [4,5,6] sr1 ac1 T sr1 ac1
or
V= [4,5,6] sr1 ac1 T sr1 ac1 NT sr1
are wrong...

So I should have a rule only for each value (sr1, NT, ...), then put Java
instructions to build dynamically the (here) three elements collections, as
Tokens come, and throw an error if something is missing. In fact this syntax is
simpler, we don't need RegEx's (maybe that's why I've been given it). Do you
think that's good, or have other suggestion ?

Thank you again,

Alexandre

Selon Scott Stanchfield <scott@javadude.com>:

> I should note that I meant to use the RegEx for each line after reading the
> line using the BufferedReader.
>
> Later,
> - Scott
>
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org
> > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott
> > Stanchfield
> > Sent: Saturday, April 09, 2005 11:29 AM
> > To: 'Alexandre'; antlr-interest@antlr.org
> > Subject: RE: [antlr-interest] Beginer's question, not fitting
> > in subject
> >
> > Seriously... I think ANTLR is overkill for items like this.
> >
> > Whenever you have line-oriented input and all lines have the
> > same format, I'd recommend using good old BufferedReader to
> > read the lines and StringTokenizer to separate them.
> >
> > If you want a little more checking to see if the parens and
> > commas are actually there, then you'll want to use a Java
> > regular expression (Pattern +
> > Matcher) if you can use Java 1.4 or later.
> >
> > Hope this helps!
> > -- Scott
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces@antlr.org
> > > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> > > Sent: Saturday, April 09, 2005 11:23 AM
> > > To: antlr-interest@antlr.org
> > > Subject: [antlr-interest] Beginer's question, not fitting in subject
> > >
> > > Hello,
> > >
> > > I have a classic, I guess, question. The language I am trying to
> > > define cannot be represented by a grammar, as it is of the form
> > > (a)n(b)n. What my file must do is something like defining
> > tuples, that
> > > is series of elements. Suppose that the syntax to define a serie of
> > > values a serie of variables can have is something like :
> > > (X1, X2, X3)
> > > (1, 2, 3)
> > > (4, 5, 6)
> > >
> > > Of course the number of variables is totally arbitrary, but for a
> > > given number, the number the values in each following tuple
> > of values
> > > must be the same. How can I make that with antlr ? I
> > thought about not
> > > having antlr detecting it, that is to accept any list of the form
> > > (..,..) for the values, and then treat (in Java) the result
> > of each,
> > > and throwing if necessary an exception. But that isn't pretty
> > > beautiful.
> > >
> > > Do you have any suggestion ?
> > >
> > > Thank you,
> > >
> > > Alexandre
> > >
> >
> >
> >
> >
>
>
>
>
>



----- Fin du message transf?r? -----


From scott at javadude.com  Sat Apr  9 09:33:06 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Apr  9 09:33:12 2005
Subject: Trans.: RE: [antlr-interest] Beginer's question,
	not fitting in subject
In-Reply-To: <1113064104.425802a88c777@imp4-q.free.fr>
Message-ID: <20050409160545.AC31A290161@new.knowspam.net>

IBM's Cross-System Product?

Still looks like a space-delimited, line-oriented input. Is that's the case,
I wouldn't take the learning curve or overhead of a parser generator...

Later,
-- Scott 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> Sent: Saturday, April 09, 2005 12:28 PM
> To: antlr-interest@antlr.org
> Subject: Trans.: RE: [antlr-interest] Beginer's question,not 
> fitting in subject
> 
> 
> Thank you for your answer.
> 
> So I suppose this means that my feeling was right, to let 
> Java checking it...
> 
> But the problem is a litte bit more tricky. The syntax I have 
> is imposed, and is different of what I gave. It is precisely this :
> V= [4,5,6]
> sr1 ac1	T
> sr1 ac1	NT
> sr1 ac2	NT
> sr2 ac1	T
> sr2 ac1	NT
> sr2 ac2	T
> sr2 ac2	NT
> (It represents a CSP constraint if it does mean something to 
> you, V are the variables, then follow the values that they 
> are allowed to have, in the same order). Of course lines do 
> not have more importance than spaces or tabs. I could have V= 
> [4,5,6] sr1 ac1 T sr1 ac1 NT which is right, but V= [4,5,6] 
> sr1 ac1 T sr1 ac1 or V= [4,5,6] sr1 ac1 T sr1 ac1 NT sr1 are wrong...
> 
> So I should have a rule only for each value (sr1, NT, ...), 
> then put Java instructions to build dynamically the (here) 
> three elements collections, as Tokens come, and throw an 
> error if something is missing. In fact this syntax is 
> simpler, we don't need RegEx's (maybe that's why I've been 
> given it). Do you think that's good, or have other suggestion ?
> 
> Thank you again,
> 
> Alexandre
> 
> Selon Scott Stanchfield <scott@javadude.com>:
> 
> > I should note that I meant to use the RegEx for each line after 
> > reading the line using the BufferedReader.
> >
> > Later,
> > - Scott
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces@antlr.org 
> > > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott 
> > > Stanchfield
> > > Sent: Saturday, April 09, 2005 11:29 AM
> > > To: 'Alexandre'; antlr-interest@antlr.org
> > > Subject: RE: [antlr-interest] Beginer's question, not fitting in 
> > > subject
> > >
> > > Seriously... I think ANTLR is overkill for items like this.
> > >
> > > Whenever you have line-oriented input and all lines have the same 
> > > format, I'd recommend using good old BufferedReader to read the 
> > > lines and StringTokenizer to separate them.
> > >
> > > If you want a little more checking to see if the parens 
> and commas 
> > > are actually there, then you'll want to use a Java regular 
> > > expression (Pattern +
> > > Matcher) if you can use Java 1.4 or later.
> > >
> > > Hope this helps!
> > > -- Scott
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces@antlr.org 
> > > > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> > > > Sent: Saturday, April 09, 2005 11:23 AM
> > > > To: antlr-interest@antlr.org
> > > > Subject: [antlr-interest] Beginer's question, not fitting in 
> > > > subject
> > > >
> > > > Hello,
> > > >
> > > > I have a classic, I guess, question. The language I am 
> trying to 
> > > > define cannot be represented by a grammar, as it is of the form 
> > > > (a)n(b)n. What my file must do is something like defining
> > > tuples, that
> > > > is series of elements. Suppose that the syntax to 
> define a serie 
> > > > of values a serie of variables can have is something like :
> > > > (X1, X2, X3)
> > > > (1, 2, 3)
> > > > (4, 5, 6)
> > > >
> > > > Of course the number of variables is totally arbitrary, 
> but for a 
> > > > given number, the number the values in each following tuple
> > > of values
> > > > must be the same. How can I make that with antlr ? I
> > > thought about not
> > > > having antlr detecting it, that is to accept any list 
> of the form
> > > > (..,..) for the values, and then treat (in Java) the result
> > > of each,
> > > > and throwing if necessary an exception. But that isn't pretty 
> > > > beautiful.
> > > >
> > > > Do you have any suggestion ?
> > > >
> > > > Thank you,
> > > >
> > > > Alexandre
> > > >
> > >
> > >
> > >
> > >
> >
> >
> >
> >
> >
> 
> 
> 
> ----- Fin du message transf?r? -----
> 
> 




From parrt at cs.usfca.edu  Sat Apr  9 16:15:39 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Apr  9 16:15:36 2005
Subject: [antlr-interest] executing actions while recovering from
	syntaxerrors
In-Reply-To: <1113058540.27611@mx9.mysite4now.com>
References: <1113058540.27611@mx9.mysite4now.com>
Message-ID: <329921d45afce66014baf2af45793fbc@cs.usfca.edu>


On Apr 9, 2005, at 7:52 AM, Don Caton wrote:
> I generally need to guard actions anyhow, to prevent null pointer 
> exceptions
> when a rule doesn't successfully match.  So automatic guarding would be
> beneficial and simplify action code, at least for me.  I'd love to 
> eliminate
> the repetitious "if (#x != NULL )" tests I have all over the place.

Interesting...now that you mention it, it would be pretty groovy to 
have a guard around all actions so that you could dynamically turn them 
all off after any syntax error (if you wanted to).  Hmm...

> However, there may be cases where you'd always want to run an action.
> Perhaps an option to suppress guarding in that case:
>
>   { options { guarded = false; } : <action code> }

True.  Normally we use init actions for that.  I think my new syntax is:

( init {do me always} : ... )

in this case ... would be empty.

> This would also serve to self-document the fact that the action always 
> runs,
> even if the rule fails.  You could also have a global option to turn 
> it on
> or off for the whole grammar, to maintain compatibility with existing
> grammar and satisfy everyone's personal preference.

Thanks for the good thoughts Don :)

Ter
>
> Don
>
>> Anyway, putting a guard around every action looks gross and
>> takes time/space (oh, and I guess is no guarantee it's safe):
>>
>> if ( !recoveryMode ) { action }
>>
>> Anybody wanna comment?  For now, the actions are unguarded.
>>
>> Ter
>> --
>> CS Professor & Grad Director, University of San Francisco
>> Creator, ANTLR Parser Generator, http://www.antlr.org
>> Cofounder, http://www.jguru.com
>>
>>
>>
>>
>
>
>
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From parrt at cs.usfca.edu  Sat Apr  9 16:16:49 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Apr  9 16:16:44 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <200504091033.21349.torkildr@resheim.no>
References: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
	<200504091033.21349.torkildr@resheim.no>
Message-ID: <83cb588aa6457eeea0cba8874f0554ca@cs.usfca.edu>


On Apr 9, 2005, at 1:33 AM, Torkild Ulv?y Resheim wrote:
> Looks like a great tool! I'm really looking forward to getting ANTLR 
> v3 and
> ANTLRWorks into Eclipse :-) Keep up the good work!

Thanks!  We've been working hard on all this.  Developing the tool at 
the same time as the gui is proving beneficial as Jean can ask for 
changes w/o me having to worry about backward compatibility. :)

Coming soon to a theatre near you :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From parrt at cs.usfca.edu  Sat Apr  9 18:31:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Apr  9 18:31:18 2005
Subject: [antlr-interest] Lexer switching
In-Reply-To: <4246EFAE.2030600@e-dean.com>
References: <423E9580.5070400@web.de> <4246EFAE.2030600@e-dean.com>
Message-ID: <6f7b8541264d07810781e68c54e3f210@cs.usfca.edu>

Hi Dean, sorry for the delay.  Comments below.

On Mar 27, 2005, at 9:38 AM, Dean Tribble wrote:

> Summary: I'm rebuilding the E grammar in antlr 
> (http://www.erights.org/e-impls/e-on-e/egrammar/).  It contains a few 
> occurrences of *recursively* nesting grammars, for which the current 
> lexer switching is inadequate.  I finally figured out a different and 
> simpler way to manage switching lexers that addresses this problem.

So, I've been playing with shared input streams etc... with ANTLR v3.  
I looked at the javadoc problem again which is a non nested thing so 
simpler than your problem.  But my new idea is probably very similar to 
what you are doing.  What I do is simply consider every "island grammar 
input chunk" such as javadoc or quasi-literal as a separate "file".  
So, when I hit the last token that says to bail out, I just return EOF. 
:)  Then there is no explicit stack of input streams etc...  For 
example,

In my Java lexer I do this:

JAVADOC : "/**"
           {
             JavadocLexer j = new JavadocLexer(input);
             CommonTokenStream tokens = new CommonTokenStream(j);
             tokens.discardTokenType(JavadocLexer.WS);
             Javadoc p = new Javadoc(tokens);
             p.comment();
             channel = Simple.JAVADOC_CHANNEL;
           }
         ;

which creates a new javadoc lexer/parser duo that feeds off the same 
input stream.

Here is the complete combined javadoc spec (well sufficient for my 
braindead example app):

grammar Javadoc;

comment : ( author )* ;

author  : "@author" ID {System.out.println("author");} ;

ID      : ('a'..'z'|'A'..'Z')+ {System.out.println("id");};

END     : "*/" {token = Token.EOFToken;} ;

WS      : (' '|'\t'|'\n')+
         ;

Notice how when it sees "*/" it just says "I'm done", which consumes 
the tokens and forces the javadoc parser (feeding off the input stream 
currently) to exit.  It returns from method comment(), called from 
JAVADOC action and then finishes up with that

channel = Simple.JAVADOC_CHANNEL;

that returns a JAVADOC token to the java parser but on a different 
channel than the normal token stream so it doesn't get in the way.

All the lookahead in the Java token stream is cool as I create a *new* 
token stream to race off and do the javadoc island grammar.

Notes on my current runtime:

A Parser object is 9 bytes (well, at least my part): input stream ptr, 
following token stack, and error mode boolean.
A Lexer object is 8 bytes: input stream ptr and current token ptr

Any number of recognizers can point at the same input stream and, for 
stuff like includes, you can create new input streams on the fly and 
start reading from them.

The lexers and parsers have NO STATE other than where to get input.  
Pretty sweet.

> Context: E is an expression language, in which one of the expressions 
> is a "quasi-literal".  A quasi-literal is similar to (but more general 
> than) a Perl string (or a Lisp quasi-list) in that it can contain 
> $-escaped expressions in E.  Because these are arbitrary E 
> expressions, they can recursively contain further quasi-literals.  A 
> couple of examples:
>
>    print(`The value of X is $x`)
>
>    print(`Name: ${if (title.isEmpty()) { `${name}'s book` } else 
> {title}} date: $date`
>
> Backquote introduces a quasi-literal (and causes a switch to the 
> quasi-lexer).  Within a quasi-literal, '$' escapes a nested expression 
> (and switches to the E lexer).  If it is just an identifier, then no 
> braces are required.  If it is a more complex expression, then braces 
> are required.  Note, however, that since E also uses braces, simply 
> encountering a brace is not the right reason to switch back to the 
> quasi lexer from the E lexer (and thus the lexer by itself cannot 
> manage the transitions back).

Ack, this part is really nasty.  If we can't use the '}' as a signal to 
switch back (like the "*/" in javadoc), the main E lexer needs to know 
something like the nesting level, doesn't it?  If it sees a dangling 
'}', it needs to return EOF signaling the end of E parsing and a return 
to the quasi-literal.  Ok, I just made my simple Java-like grammar 
allow java inside javadoc comments like this:

/** @author foo {z=3;} {yy=33;}*/

Note that at the }*/ it must exit the Java component and reuse that 
char to terminate the javadoc comment.  I just needed to add this in my 
normal java-mode lexing:

LCURLY  : '{' {Simple.nesting++;}
         ;
RCURLY  : '}' {if ( Simple.nesting\<=0 ) token=Token.EOFToken;}
         ;

In my javadoc lexer I needed:

JAVA    :   '{'
             {
             System.out.println("enter java escape");
             SimpleLexer lex = new SimpleLexer(input);
             CommonTokenStream tokens = new CommonTokenStream(lex);
             //System.out.println("tokens="+tokens);
             Simple parser = new Simple(tokens);
             parser.statement();
             channel=EMBEDDED_JAVA_CHANNEL;
             }
         ;

Pretty slick, eh?  So the java lexer invokes the javadoc lexer which 
invokes the java lexer again.  The key seems to be returning an EOF 
token when you see the "final" token.  Then again, if you have an 
action that asks for LT(100) you might be in trouble.  In 3.0, the 
token stream sucks up all tokens before parsing so the EOF from the '}' 
will make it stop "sucking" tokens from the stream.  Any LT(100) action 
in the parser will simply return EOF.  The only weird thing is that the 
embedded java after the @author will be processed *before* the author 
is processed because the author is processed by the javadoc parser--the 
embedded java is handled during javadoc *lexing*.

Whew!  I think I've convinced myself that, at least v3, will handle 
this nicely (since I have an existence proof).

Does this sound like it will solve your problem?

Ter
PS	 It may be time to get you using the 3.0 version ;)  It's *almost* 
useful ;)
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From Loring.G.Craymer at jpl.nasa.gov  Sun Apr 10 01:27:27 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Sun Apr 10 01:27:30 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <fcc49e8eb7c5bd38a0a52c2d3e42da2f@cs.usfca.edu>
Message-ID: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>

Ter--

This looks like a very good start.  I've got a few feature requests:

REFACTORING SUPPORT
The basic refactorings for parser/lexer grammars (they also apply to tree
grammars, but I can identify a much richer set of tree refactorings) that
can be easily implemented include
1.)  Rule renaming (all references are renamed)
2.)  Extract rule (replaces "all" instances of a given token sequence with a
rule reference--user should get yes/no choices for each instance)
3.)  Inline rule (case-by-case or global)
4.)  Clone rule (Copies and renames a rule definition; user is given
opportunity to select which version applies for every reference to the
original rule).  Usually, the cloned rule will then be "specialized" to have
a different set of actions and/or attributes from the original rule.
5.)  Transform loop to recursion
6.)  Transform recursion to loop.

And, with only a little more effort
7.)  Left factor alternatives in rule.

One big advantage grammars have for refactoring is that you do not have much
semantic state to worry about; I'd be very surprised if it took more than a
few days to implement all of the above functionality--especially considering
that most of the underlying support routines are probably already present.

SOURCE-TO-SOURCE manipulations
There is quite a bit that can be done simply by regenerating grammars with
addition/subtraction of features with what should be minimal effort.  It
would be nice if some of these were supported at the editing level.
1.)  Extract/import target source:  This would be to enable refactoring of
action code.  Basically, the idea is to extract the usual block of action
code (methods) plus all actions (including semantic predicates).  The action
snippets would be extracted as methods, perhaps named <rule>action<n> (the
naming should make re-import easy).
2.) pre-Aspect ANTLR:  Insert actions after ':' or before ';', before/after
'(', ')', ')+', ')*', ')?' in cloned grammar.  This, coupled with
extract/inline rule, encompasses most of the functionality of an Aspect
ANTLR; additionally making the insertion dependent on finding a sequence of
token types would provide most of the remaining support needed.  (Note that
this provides a simple mechanism for the "traceIn/traceOut" feature of ANTLR
2 and PCCTS).  Monty might have some further suggestions.
3.)  Test rule generator:  clone the grammar, adding a top-level rule which
has each rule as an alternative, with a preamble.  (The preamble might
recognize "test" <rule> and then a sequence of tokens representing a test
case.

These require more effort than the refactoring support, but the added
capability would probably be more than worth the effort.

--Loring


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Friday, April 08, 2005 2:31 PM
> To: ANTLR Interest
> Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
> 
> Howdy folks,
> 
> Jean Bovet has made some short videos of ANTLRWorks in action.  We gave
> a presentation to the smarties at BEA yesterday on ANTLR/StringTemplate
> and ANTLRWorks.  Went over well according to feedback. :)
> 
> Jean has made just insane progress in 2 months.  We expect an early
> access release with ANTLR v3 in May probably.
> 
> ANTLRWorks only works with v3 and is not yet integrated into any IDEs
> like Eclipse or Intellij.
> 
> http://www.antlr.org/works/index.html
> 
> Enjoy :)
> 
> Ter
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> 


From antlr at alxp.gr  Sun Apr 10 01:48:04 2005
From: antlr at alxp.gr (Alexandre)
Date: Sun Apr 10 01:52:37 2005
Subject: Trans.: RE: [antlr-interest] Beginer's question,
	not fitting in subject
In-Reply-To: <20050409160545.AC31A290161@new.knowspam.net>
References: <20050409160545.AC31A290161@new.knowspam.net>
Message-ID: <1113122884.4258e844d4d6a@imp1-q.free.fr>

Hmm... no, CSP stands for Constraint Satisfaction Problem (you have a number of
constraints on variables, and must assign values to all the variables so that
all of the constraints are satisfied).

What I didn't precise is that this syntax is just part of a whole file with a
more complex syntax, but very easy to deal with by a parser generator. So
that's why I want to use antlr, mixing it with a classic treatment for this
specific part.

Anyway thank you for your proposals, at least they confirmed my ideas.

Have a good day (I'm in Europe),

Alexandre

Selon Scott Stanchfield <scott@javadude.com>:

> IBM's Cross-System Product?
>
> Still looks like a space-delimited, line-oriented input. Is that's the case,
> I wouldn't take the learning curve or overhead of a parser generator...
>
> Later,
> -- Scott
>
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org
> > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> > Sent: Saturday, April 09, 2005 12:28 PM
> > To: antlr-interest@antlr.org
> > Subject: Trans.: RE: [antlr-interest] Beginer's question,not
> > fitting in subject
> >
> >
> > Thank you for your answer.
> >
> > So I suppose this means that my feeling was right, to let
> > Java checking it...
> >
> > But the problem is a litte bit more tricky. The syntax I have
> > is imposed, and is different of what I gave. It is precisely this :
> > V= [4,5,6]
> > sr1 ac1	T
> > sr1 ac1	NT
> > sr1 ac2	NT
> > sr2 ac1	T
> > sr2 ac1	NT
> > sr2 ac2	T
> > sr2 ac2	NT
> > (It represents a CSP constraint if it does mean something to
> > you, V are the variables, then follow the values that they
> > are allowed to have, in the same order). Of course lines do
> > not have more importance than spaces or tabs. I could have V=
> > [4,5,6] sr1 ac1 T sr1 ac1 NT which is right, but V= [4,5,6]
> > sr1 ac1 T sr1 ac1 or V= [4,5,6] sr1 ac1 T sr1 ac1 NT sr1 are wrong...
> >
> > So I should have a rule only for each value (sr1, NT, ...),
> > then put Java instructions to build dynamically the (here)
> > three elements collections, as Tokens come, and throw an
> > error if something is missing. In fact this syntax is
> > simpler, we don't need RegEx's (maybe that's why I've been
> > given it). Do you think that's good, or have other suggestion ?
> >
> > Thank you again,
> >
> > Alexandre
> >
> > Selon Scott Stanchfield <scott@javadude.com>:
> >
> > > I should note that I meant to use the RegEx for each line after
> > > reading the line using the BufferedReader.
> > >
> > > Later,
> > > - Scott
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces@antlr.org
> > > > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott
> > > > Stanchfield
> > > > Sent: Saturday, April 09, 2005 11:29 AM
> > > > To: 'Alexandre'; antlr-interest@antlr.org
> > > > Subject: RE: [antlr-interest] Beginer's question, not fitting in
> > > > subject
> > > >
> > > > Seriously... I think ANTLR is overkill for items like this.
> > > >
> > > > Whenever you have line-oriented input and all lines have the same
> > > > format, I'd recommend using good old BufferedReader to read the
> > > > lines and StringTokenizer to separate them.
> > > >
> > > > If you want a little more checking to see if the parens
> > and commas
> > > > are actually there, then you'll want to use a Java regular
> > > > expression (Pattern +
> > > > Matcher) if you can use Java 1.4 or later.
> > > >
> > > > Hope this helps!
> > > > -- Scott
> > > >
> > > > > -----Original Message-----
> > > > > From: antlr-interest-bounces@antlr.org
> > > > > [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Alexandre
> > > > > Sent: Saturday, April 09, 2005 11:23 AM
> > > > > To: antlr-interest@antlr.org
> > > > > Subject: [antlr-interest] Beginer's question, not fitting in
> > > > > subject
> > > > >
> > > > > Hello,
> > > > >
> > > > > I have a classic, I guess, question. The language I am
> > trying to
> > > > > define cannot be represented by a grammar, as it is of the form
> > > > > (a)n(b)n. What my file must do is something like defining
> > > > tuples, that
> > > > > is series of elements. Suppose that the syntax to
> > define a serie
> > > > > of values a serie of variables can have is something like :
> > > > > (X1, X2, X3)
> > > > > (1, 2, 3)
> > > > > (4, 5, 6)
> > > > >
> > > > > Of course the number of variables is totally arbitrary,
> > but for a
> > > > > given number, the number the values in each following tuple
> > > > of values
> > > > > must be the same. How can I make that with antlr ? I
> > > > thought about not
> > > > > having antlr detecting it, that is to accept any list
> > of the form
> > > > > (..,..) for the values, and then treat (in Java) the result
> > > > of each,
> > > > > and throwing if necessary an exception. But that isn't pretty
> > > > > beautiful.
> > > > >
> > > > > Do you have any suggestion ?
> > > > >
> > > > > Thank you,
> > > > >
> > > > > Alexandre
> > > > >
From monty at codetransform.com  Sun Apr 10 08:48:14 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Sun Apr 10 08:46:34 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>
References: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>
Message-ID: <F2CA0885-A9D7-11D9-B0CD-000393B5606C@codetransform.com>

On Apr 10, 2005, at 1:27 AM, Loring Craymer wrote:

> 2.) pre-Aspect ANTLR:  Insert actions after ':' or before ';', 
> before/after
> '(', ')', ')+', ')*', ')?' in cloned grammar.  This, coupled with
> extract/inline rule, encompasses most of the functionality of an Aspect
> ANTLR; additionally making the insertion dependent on finding a 
> sequence of
> token types would provide most of the remaining support needed.  (Note 
> that
> this provides a simple mechanism for the "traceIn/traceOut" feature of 
> ANTLR
> 2 and PCCTS).  Monty might have some further suggestions.

Now that you mention it, many of my concerns are addressed by having 
access to the code generators.  I think there is a middle ground 
between the raw grammar handling and the action code.  That space is 
where things like tracing, tree node construction and exception 
handling strategies should be implemented.  These are the things that 
affect all the generated code, but which shouldn't have to be specified 
in each action.

Some way to isolate these global user specified behaviors from strictly 
grammar based code gen would be handy.  That's my goal for an 
aspect-oriented approach to ANTLR--simple, clear specification of that 
code which pervades all the actions.  It's like having control of the 
environment in which actions take place.

Really I'll just have to start hacking the code generator and see what 
falls in place.

Monty

From Loring.G.Craymer at jpl.nasa.gov  Sun Apr 10 13:27:11 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Sun Apr 10 13:27:15 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <F2CA0885-A9D7-11D9-B0CD-000393B5606C@codetransform.com>
Message-ID: <200504102027.j3AKRBgn001624@xmta2.jpl.nasa.gov>

Monty--

Yeah, the codegen access makes it easy, but I think that the capability
should be "at your fingertips" in the GUI.  Most of the use I see would be
to build tools centered around a single grammar and application, and it
would be helpful to be able to get such tools up quickly.  I don't see
myself getting much use out of the source-level debugging--my experience is
that when I go in with a debugger, it's to get at the action code--but for
any moderately complex problem, there is an application-specific tool that
would be useful but has a cost associated with building it.

--Loring 

> -----Original Message-----
> From: Monty Zukowski [mailto:monty@codetransform.com]
> Sent: Sunday, April 10, 2005 8:48 AM
> To: Loring Craymer
> Cc: 'Terence Parr'; 'ANTLR Interest'
> Subject: Re: [antlr-interest] ANTLRWorks GUI dev environment videos
> 
> On Apr 10, 2005, at 1:27 AM, Loring Craymer wrote:
> 
> > 2.) pre-Aspect ANTLR:  Insert actions after ':' or before ';',
> > before/after
> > '(', ')', ')+', ')*', ')?' in cloned grammar.  This, coupled with
> > extract/inline rule, encompasses most of the functionality of an Aspect
> > ANTLR; additionally making the insertion dependent on finding a
> > sequence of
> > token types would provide most of the remaining support needed.  (Note
> > that
> > this provides a simple mechanism for the "traceIn/traceOut" feature of
> > ANTLR
> > 2 and PCCTS).  Monty might have some further suggestions.
> 
> Now that you mention it, many of my concerns are addressed by having
> access to the code generators.  I think there is a middle ground
> between the raw grammar handling and the action code.  That space is
> where things like tracing, tree node construction and exception
> handling strategies should be implemented.  These are the things that
> affect all the generated code, but which shouldn't have to be specified
> in each action.
> 
> Some way to isolate these global user specified behaviors from strictly
> grammar based code gen would be handy.  That's my goal for an
> aspect-oriented approach to ANTLR--simple, clear specification of that
> code which pervades all the actions.  It's like having control of the
> environment in which actions take place.
> 
> Really I'll just have to start hacking the code generator and see what
> falls in place.
> 
> Monty

From parrt at cs.usfca.edu  Sun Apr 10 13:50:44 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr 10 13:50:39 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>
References: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>
Message-ID: <7431c40fce12bbb82b5b2ec6e1699902@cs.usfca.edu>

On Apr 10, 2005, at 1:27 AM, Loring Craymer wrote:

Hi Loring,

Yep, I definitely have been thinking about refactoring and such.  I am 
also thinking about exemplar-based grammar development; got some cool 
ideas.

Thanks for the list of stuff...need to add "remove left-recursion" i 
think.

As for the aspect stuff, I think Monty may be right that simply 
modifying the code gen template locally could be promising.  You might 
have some standard mods in a lib dir somewhere then use 
target=TraceJava instead of target=Java or something.

Ter

> REFACTORING SUPPORT
> The basic refactorings for parser/lexer grammars (they also apply to 
> tree
> grammars, but I can identify a much richer set of tree refactorings) 
> that
> can be easily implemented include
> 1.)  Rule renaming (all references are renamed)
> 2.)  Extract rule (replaces "all" instances of a given token sequence 
> with a
> rule reference--user should get yes/no choices for each instance)
> 3.)  Inline rule (case-by-case or global)
> 4.)  Clone rule (Copies and renames a rule definition; user is given
> opportunity to select which version applies for every reference to the
> original rule).  Usually, the cloned rule will then be "specialized" 
> to have
> a different set of actions and/or attributes from the original rule.
> 5.)  Transform loop to recursion
> 6.)  Transform recursion to loop.
>
> And, with only a little more effort
> 7.)  Left factor alternatives in rule.
>
> One big advantage grammars have for refactoring is that you do not 
> have much
> semantic state to worry about; I'd be very surprised if it took more 
> than a
> few days to implement all of the above functionality--especially 
> considering
> that most of the underlying support routines are probably already 
> present.
>
> SOURCE-TO-SOURCE manipulations
> There is quite a bit that can be done simply by regenerating grammars 
> with
> addition/subtraction of features with what should be minimal effort.  
> It
> would be nice if some of these were supported at the editing level.
> 1.)  Extract/import target source:  This would be to enable 
> refactoring of
> action code.  Basically, the idea is to extract the usual block of 
> action
> code (methods) plus all actions (including semantic predicates).  The 
> action
> snippets would be extracted as methods, perhaps named <rule>action<n> 
> (the
> naming should make re-import easy).
> 2.) pre-Aspect ANTLR:  Insert actions after ':' or before ';', 
> before/after
> '(', ')', ')+', ')*', ')?' in cloned grammar.  This, coupled with
> extract/inline rule, encompasses most of the functionality of an Aspect
> ANTLR; additionally making the insertion dependent on finding a 
> sequence of
> token types would provide most of the remaining support needed.  (Note 
> that
> this provides a simple mechanism for the "traceIn/traceOut" feature of 
> ANTLR
> 2 and PCCTS).  Monty might have some further suggestions.
> 3.)  Test rule generator:  clone the grammar, adding a top-level rule 
> which
> has each rule as an alternative, with a preamble.  (The preamble might
> recognize "test" <rule> and then a sequence of tokens representing a 
> test
> case.
>
> These require more effort than the refactoring support, but the added
> capability would probably be more than worth the effort.
>
> --Loring
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From monty at codetransform.com  Sun Apr 10 11:25:47 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Sun Apr 10 14:26:19 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <7431c40fce12bbb82b5b2ec6e1699902@cs.usfca.edu>
References: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>
	<7431c40fce12bbb82b5b2ec6e1699902@cs.usfca.edu>
Message-ID: <42596FAB.7090806@codetransform.com>

Terence Parr wrote:

> As for the aspect stuff, I think Monty may be right that simply 
> modifying the code gen template locally could be promising.  You might 
> have some standard mods in a lib dir somewhere then use target=TraceJava 
> instead of target=Java or something.
> 

I'm expecting there will be a better place to do it than the 
codegen--like Loring suggests it would be nice to have it in the IDE. 
I'm betting there will be a place for some templates within a code 
generator so I can edit, say, the exception handling template instead of 
the codegen.

But that will reveal itself with experimentation.  Something like the 
error handling template will first be checked to see if it is either 
attached to the grammar or in the same directory or something obvious. 
If it's not there, use the default one.

Monty
From parrt at cs.usfca.edu  Sun Apr 10 14:36:37 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr 10 14:36:32 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <42596FAB.7090806@codetransform.com>
References: <200504100827.j3A8RReR028540@xmta1.jpl.nasa.gov>
	<7431c40fce12bbb82b5b2ec6e1699902@cs.usfca.edu>
	<42596FAB.7090806@codetransform.com>
Message-ID: <41e4c3fbaed67bb843b5823c804ad453@cs.usfca.edu>


On Apr 10, 2005, at 11:25 AM, Monty Zukowski wrote:

> Terence Parr wrote:
>
>> As for the aspect stuff, I think Monty may be right that simply 
>> modifying the code gen template locally could be promising.  You 
>> might have some standard mods in a lib dir somewhere then use 
>> target=TraceJava instead of target=Java or something.
>
> I'm expecting there will be a better place to do it than the 
> codegen--like Loring suggests it would be nice to have it in the IDE. 
> I'm betting there will be a place for some templates within a code 
> generator so I can edit, say, the exception handling template instead 
> of the codegen.

Well, that is in the code gen templates ;)  Perhaps ANTLRWorks could 
just let people edit the common templates (nobody would have to know 
it's just using template inheritance to override some standard code gen 
templates). :)

> But that will reveal itself with experimentation.  Something like the 
> error handling template will first be checked to see if it is either 
> attached to the grammar or in the same directory or something obvious. 
> If it's not there, use the default one.

Groovy.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From Loring.G.Craymer at jpl.nasa.gov  Sun Apr 10 15:39:03 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Sun Apr 10 15:39:07 2005
Subject: [antlr-interest] ANTLRWorks GUI dev environment videos
In-Reply-To: <7431c40fce12bbb82b5b2ec6e1699902@cs.usfca.edu>
Message-ID: <200504102239.j3AMd3tG014199@xmta3.jpl.nasa.gov>

Ter--

I don't think that modifying the codegen template at the user level makes
sense for routine use, although that's an implementation approach.  I think
that the better implementation approach is to provide a facility for
regenerating the source grammar while adding annotations.  Leaving it at the
codegen level makes it a "for experts only" feature, and I think that the
feature set at the GUI level would end up being fairly minimal (EBNF is a
simple language, after all).  Bringing a generated grammar to the surface
(where the GUI is aware of it) makes it possible to use diff tools, insert
actions, and use the grammar refactoring support.

You're right on the "remove left recursion".  Also, the "left factor" should
probably be generalized to "consolidate factors" or some such.  Those,
however, are the features which have noticeable implementation cost--for the
others, I expect that most of the implementation is doing the dialog boxes.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Sunday, April 10, 2005 1:51 PM
> To: 'ANTLR Interest'
> Subject: Re: [antlr-interest] ANTLRWorks GUI dev environment videos
> 
> On Apr 10, 2005, at 1:27 AM, Loring Craymer wrote:
> 
> Hi Loring,
> 
> Yep, I definitely have been thinking about refactoring and such.  I am
> also thinking about exemplar-based grammar development; got some cool
> ideas.
> 
> Thanks for the list of stuff...need to add "remove left-recursion" i
> think.
> 
> As for the aspect stuff, I think Monty may be right that simply
> modifying the code gen template locally could be promising.  You might
> have some standard mods in a lib dir somewhere then use
> target=TraceJava instead of target=Java or something.
> 
> Ter
> 
> > REFACTORING SUPPORT
> > The basic refactorings for parser/lexer grammars (they also apply to
> > tree
> > grammars, but I can identify a much richer set of tree refactorings)
> > that
> > can be easily implemented include
> > 1.)  Rule renaming (all references are renamed)
> > 2.)  Extract rule (replaces "all" instances of a given token sequence
> > with a
> > rule reference--user should get yes/no choices for each instance)
> > 3.)  Inline rule (case-by-case or global)
> > 4.)  Clone rule (Copies and renames a rule definition; user is given
> > opportunity to select which version applies for every reference to the
> > original rule).  Usually, the cloned rule will then be "specialized"
> > to have
> > a different set of actions and/or attributes from the original rule.
> > 5.)  Transform loop to recursion
> > 6.)  Transform recursion to loop.
> >
> > And, with only a little more effort
> > 7.)  Left factor alternatives in rule.
> >
> > One big advantage grammars have for refactoring is that you do not
> > have much
> > semantic state to worry about; I'd be very surprised if it took more
> > than a
> > few days to implement all of the above functionality--especially
> > considering
> > that most of the underlying support routines are probably already
> > present.
> >
> > SOURCE-TO-SOURCE manipulations
> > There is quite a bit that can be done simply by regenerating grammars
> > with
> > addition/subtraction of features with what should be minimal effort.
> > It
> > would be nice if some of these were supported at the editing level.
> > 1.)  Extract/import target source:  This would be to enable
> > refactoring of
> > action code.  Basically, the idea is to extract the usual block of
> > action
> > code (methods) plus all actions (including semantic predicates).  The
> > action
> > snippets would be extracted as methods, perhaps named <rule>action<n>
> > (the
> > naming should make re-import easy).
> > 2.) pre-Aspect ANTLR:  Insert actions after ':' or before ';',
> > before/after
> > '(', ')', ')+', ')*', ')?' in cloned grammar.  This, coupled with
> > extract/inline rule, encompasses most of the functionality of an Aspect
> > ANTLR; additionally making the insertion dependent on finding a
> > sequence of
> > token types would provide most of the remaining support needed.  (Note
> > that
> > this provides a simple mechanism for the "traceIn/traceOut" feature of
> > ANTLR
> > 2 and PCCTS).  Monty might have some further suggestions.
> > 3.)  Test rule generator:  clone the grammar, adding a top-level rule
> > which
> > has each rule as an alternative, with a preamble.  (The preamble might
> > recognize "test" <rule> and then a sequence of tokens representing a
> > test
> > case.
> >
> > These require more effort than the refactoring support, but the added
> > capability would probably be more than worth the effort.
> >
> > --Loring
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> 


From scott at javadude.com  Mon Apr 11 04:22:09 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 11 04:22:04 2005
Subject: [antlr-interest] Eclipse plugin status
Message-ID: <20050411105405.68655290702@new.knowspam.net>

Just a quick note on the eclipse plugin status (and antlr 2.7.6).

Shmuel Siegel recommended running "organize imports" to clean up the
generated code. I've got that working, but then I started on a quest to get
rid of other warnings as well...

In many cases, it's just adding javadoc comments to the rules in the grammar
(this is up to the grammar writer), but antlr adds exceptions and sometimes
extra parameters to methods.

So I tweaked the code generator to add in javadoc tags for the generated
exceptions and parameters. SO far so good.

I've got some parsers coming up with no warnings! Woohoo! (I hate it when a
project shows warnings if I can avoid it). Lexers tend to have lots of empty
blocks, which gives a warning the way I have eclipse configured. I may try
to add a comment in each empty block in the gen'd code... Not sure how
tricky that will be to detect. Worst case, I turn off that warning in
eclipse ;)

I just ran a test of the debugging and oops! The organize imports threw the
line mapping off... Grrr! Arg!

So I'm going to try to have the plugin scan the gen'd code before and after
the org imports and find the offset, then re-write the smap file. Fun...

More soon...
-- Scott




From stefan at amiq.ro  Mon Apr 11 05:17:48 2005
From: stefan at amiq.ro (stefan)
Date: Mon Apr 11 05:23:35 2005
Subject: [antlr-interest] Should there be 2 antlr jar files for java
	version
In-Reply-To: <bddfab94ea773d30cb5dac38f5769c53@cs.usfca.edu>
References: <20050406082445.9B665290539@new.knowspam.net>
	<bddfab94ea773d30cb5dac38f5769c53@cs.usfca.edu>
Message-ID: <200504111517.48166.stefan@amiq.ro>

smashing antlr in few,smaller jars is also good for the case you want to 
deliver an application using java Web Start.
On Wednesday 06 April 2005 20:42, Terence Parr wrote:
> On Apr 6, 2005, at 1:51 AM, Scott Stanchfield wrote:
> > Ter -- can you make a distinction like this for the ANTLR 3 code?
>
> I have done so.  The package structure is currently:
>
> org/antlr/analysis
> org/antlr/codegen
> org/antlr/codegen/templates
> org/antlr/misc
> org/antlr/runtime
> org/antlr/runtime/debug
> org/antlr/runtime/tree
> org/antlr/test
> org/antlr/test/unit
> org/antlr/tool
> org/antlr/tool/templates
> org/antlr/tool/templates/dot
> org/antlr/tool/templates/messages
>
> Howz dat? :)
>
> runtime (minus debugging stuff) is about 2.5k lines and 23.6k in a jar.
>   Missing some tree stuff which will appear in the summer.
>
> Ter
>
> > --
>
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
From PKronenberg at technicacorp.com  Mon Apr 11 05:43:16 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Mon Apr 11 05:42:32 2005
Subject: [antlr-interest] Parsing optional component in Tree Walker
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>

I have a tree walker that needs to deal with an optional component C.

If tree is #(ROOT A B) then call handleAB(a.getText(), b.getText()).
If tree is #(ROOT A B C) then call handleAB(a.getText(), b.getText(),
true);

The handler for C has already set some stuff, but handleAB needs to know
about it.  Since there is likely to be recursion while walking the tree,
setting a variable isn't feasable.

What I've come up with is

(#(ROOT A B C)) => #(ROOT a:A b:B C) {
   handleAB(#a.getText(), #b.getText(), true);
}
| #(ROOT A B) {
   handleAB(#a.getText(), #b.getText());
}

It seems a bit kludgy and redundant.  Is there a better way?
I can adjust the parameters of handleAB, but I need some indication if
the optional C is there


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050411/4b3fa6eb/attachment-0001.html
From PKronenberg at technicacorp.com  Mon Apr 11 06:26:15 2005
From: PKronenberg at technicacorp.com (Peter Kronenberg)
Date: Mon Apr 11 06:25:29 2005
Subject: [antlr-interest] Bug handling Exception and predicate
Message-ID: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB9E@mail-hq1.Technica1.com>

I think I found a definite bug in the 2.7.6 plugin code.  It occurs if
you want to catch your own exception and there is also a predicate
involved.  Here is a sample:

class TestTreeWalker extends TreeParser;

options {classHeaderPrefix = "public abstract";
	}
	
	{ public class MyException extends Exception {};
	  abstract public void throwEx() throws MyException;	
	
	}
	
	expr
	: #(A evalB C) {throwEx();} ;
	exception
             catch [MyException ex] {
                reportError(ex.toString());
             }
             
    evalB
    : (#(D E F)) => #(D E F)
    | #(D E);
-------
The generated code includes the following

public final void expr(AST _t) throws RecognitionException {
...
try {
...
}
catch (MyException ex) {
			if (inputState.guessing==0) {
				
				reportError(ex.toString());
				
			} else {
				throw ex;
			}
		}
--------
Note that MyException is rethrown, but the method signature does not
contain 'throws MyException'.  This results in a compiler error.
If you remove the predicate from 'evalB', the problem goes away


Peter Kronenberg
Software Engineer
(703) 885-1222
pkronenberg@technicacorp.com


The information contained in this transmission may contain privileged and confidential information. It is intended only for the use of the person(s) named above. If you are not the intended recipient, you are hereby notified that any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender by reply e-mail and destroy all copies of the original message. Technica Corporation does not represent this e-mail to be free from any virus, fault or defect and it is therefore the responsibility of the recipient to first scan it for viruses, faults and defects. To reply to our e-mail administrator directly, please send an e-mail to postmaster@technicacorp.com. Thank you.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050411/b329f2fd/attachment.html
From monty at codetransform.com  Mon Apr 11 06:01:47 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Apr 11 09:02:18 2005
Subject: [antlr-interest] Parsing optional component in Tree Walker
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
Message-ID: <425A753B.6080003@codetransform.com>

Peter Kronenberg wrote:
> I have a tree walker that needs to deal with an optional component C.
> 
> If tree is #(ROOT A B) then call handleAB(a.getText(), b.getText()).
> If tree is #(ROOT A B C) then call handleAB(a.getText(), b.getText(), 
> true);
> 
> The handler for C has already set some stuff, but handleAB needs to know 
> about it.  Since there is likely to be recursion while walking the tree, 
> setting a variable isn't feasable.
> 
> What I've come up with is
> 
> (#(ROOT A B C)) => #(ROOT a:A b:B C) {
>    handleAB(#a.getText(), #b.getText(), true);
> }
> | #(ROOT A B) {
>    handleAB(#a.getText(), #b.getText());
> }
> 
> It seems a bit kludgy and redundant.  Is there a better way?
> I can adjust the parameters of handleAB, but I need some indication if 
> the optional C is there
> 

Consider building the tree differently.  For instance, when building the 
tree, if you see C then change the root node type to ROOTC.  Then when 
walking you can have the option at the root level.

Monty
From johnm-antlr at non.net  Mon Apr 11 09:19:58 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Apr 11 09:19:40 2005
Subject: [antlr-interest] Parsing optional component in Tree Walker
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
Message-ID: <16986.41902.579729.243298@despot.non.net>

>>>>> "Peter" == Peter Kronenberg <PKronenberg@technicacorp.com> writes:
[...]

> I have a tree walker that needs to deal with an optional component C.

Another alternative is to not make it optional.  I.e, when you build the
tree, if the real C isn't there, create an imaginary token/node for it.

Basically, this is the NullObject pattern.

Take care,
	John
From Kurt.E.McCall at nasa.gov  Mon Apr 11 10:01:36 2005
From: Kurt.E.McCall at nasa.gov (McCall, Kurt)
Date: Mon Apr 11 10:01:27 2005
Subject: [antlr-interest] Resetting the the input stream in a C++ lexer?
Message-ID: <EAFC0B8AFC4E3B42934CECA5232E45DD08633F@msecho2.msfc.nasa.gov>

This should be a simple question for someone out there.   I need to call my
C++ parser repeatedly, each time on a different character string.   Trouble
is, I don't know how to reset the lexer to point to each new string.  Here
is what I've tried:

char *text1 = "This is the first expression";
char *text2 = "This is the second expression";

istringstream *inlex = new istringstream(text1);
ExprLexer *lexer = new ExprLexer(*inlex);
ExprParser *parser = new ExprParser(*lexer);

// parse the first expression
parser->start_rule();

// reset the istringstream object and parse the second expression
inlex->str(text2);
parser->start_rule();


It keeps parsing the first string over and over.  What am I missing?

Thanks for any help,
Kurt

-------------------------------------
Kurt McCall
Modeling and Simulation Branch / EV43
NASA MSFC
(256) 961-4501




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050411/9d0417bb/attachment.html
From ewbank at gmail.com  Mon Apr 11 12:24:41 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Apr 11 12:24:44 2005
Subject: [antlr-interest] Parsing optional component in Tree Walker
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
Message-ID: <dd3a065f050411122468f7db56@mail.gmail.com>

What's wrong with doing what you said - an optional component:

   #(ROOT A B
      ( C
         { ... handleAB (...) }
      | /* empty */
         { ... handleAB (... true); }
      )
   )

On Apr 11, 2005 8:43 AM, Peter Kronenberg <PKronenberg@technicacorp.com> wrote:
>  
> 
> I have a tree walker that needs to deal with an optional component C. 
> 
> If tree is #(ROOT A B) then call handleAB(a.getText(), b.getText()). 
> If tree is #(ROOT A B C) then call handleAB(a.getText(), b.getText(), true);
> 
> The handler for C has already set some stuff, but handleAB needs to know
> about it.  Since there is likely to be recursion while walking the tree,
> setting a variable isn't feasable. 
> 
> What I've come up with is 
> 
> (#(ROOT A B C)) => #(ROOT a:A b:B C) { 
>    handleAB(#a.getText(), #b.getText(), true); 
> } 
> | #(ROOT A B) { 
>    handleAB(#a.getText(), #b.getText()); 
> } 
> 
> It seems a bit kludgy and redundant.  Is there a better way? 
> I can adjust the parameters of handleAB, but I need some indication if the
> optional C is there 
>  
> 
> Peter Kronenberg 
> Software Engineer 
> (703) 885-1222 
> pkronenberg@technicacorp.com 
>  
>  
> 
> The information contained in this transmission may contain privileged and
> confidential information. It is intended only for the use of the person(s)
> named above. If you are not the intended recipient, you are hereby notified
> that any review, dissemination, distribution or duplication of this
> communication is strictly prohibited. If you are not the intended recipient,
> please contact the sender by reply e-mail and destroy all copies of the
> original message. Technica Corporation does not represent this e-mail to be
> free from any virus, fault or defect and it is therefore the responsibility
> of the recipient to first scan it for viruses, faults and defects. To reply
> to our e-mail administrator directly, please send an e-mail to
> postmaster@technicacorp.com. Thank you. 
> 
>
From monty at codetransform.com  Mon Apr 11 12:29:33 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Apr 11 12:27:49 2005
Subject: [antlr-interest] Parsing optional component in Tree Walker
In-Reply-To: <dd3a065f050411122468f7db56@mail.gmail.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A9960547EAB34@mail-hq1.Technica1.com>
	<dd3a065f050411122468f7db56@mail.gmail.com>
Message-ID: <08296910-AAC0-11D9-852F-000393B5606C@codetransform.com>


On Apr 11, 2005, at 12:24 PM, Bryan Ewbank wrote:

> What's wrong with doing what you said - an optional component:
>
>    #(ROOT A B
>       ( C
>          { ... handleAB (...) }
>       | /* empty */
>          { ... handleAB (... true); }
>       )
>    )
>
That makes the most sense to me.

Monty

From tonyfox24 at hot.ee  Mon Apr 11 15:09:52 2005
From: tonyfox24 at hot.ee (Anton Arhipov)
Date: Mon Apr 11 14:58:10 2005
Subject: [antlr-interest] how to collect multiple AST under single root
Message-ID: <425AF5B0.8090001@hot.ee>

hi! could anyone suggest please how could I collect multiple ASTs under 
a single root :

rule1 :
      ( tmp:rule2 )*
      {
          #rule1 = #([RULE, "root"],tmp);
       }
    ;

rule2 :
 ...............
   ;


this creates only a root with a single child.

thx.
A.
From mcerveny at gmail.com  Tue Apr 12 02:13:41 2005
From: mcerveny at gmail.com (Marcel Cerveny)
Date: Tue Apr 12 02:13:44 2005
Subject: [antlr-interest] Lexer predicates
Message-ID: <83a0b5ae05041202134adfdb1b@mail.gmail.com>

Hi,
I need to parse output of a custom made program. It can produce
messages consisting of arbitrary ascii chars. Thus, I tried to make my
lexer rule:

protected LETTER : (('!'..'~')) => ('a'..'z'|'A'..'Z')
                                   | (':')   { $setType(COLON); }
                                   | ('\\')  { $setType(BSLASH); }
                                   | ('(')   { $setType(LPAREN); }
                                   | (')')   { $setType(RPAREN); }
                                   | ('!'..'~') { $setType(ASCIISYM); }
;

Now, I still get error message:
error: Lexer rule COLON is not defined

I really do not know why is that. Anny suggestions?
Thanx in advance.
From mmoktali at bphx.dk  Tue Apr 12 03:33:56 2005
From: mmoktali at bphx.dk (Meena Moktali)
Date: Tue Apr 12 03:35:50 2005
Subject: [antlr-interest] Lexer predicates
Message-ID: <389DFA1991602B4DB5E5691B00929EB9044EEE@bpsdk910.bphx.dk>

u have to define the character ':' for example as token COLON and then 
setType as COLON.Have u done that?
See the examples provided along with the ANTLR installations.There are many examples.

regs,
Meena

-----Original Message-----
From: Marcel Cerveny [mailto:mcerveny@gmail.com]
Sent: 12. april 2005 12:14
To: antlr-interest@antlr.org
Subject: [antlr-interest] Lexer predicates


Hi,
I need to parse output of a custom made program. It can produce
messages consisting of arbitrary ascii chars. Thus, I tried to make my
lexer rule:

protected LETTER : (('!'..'~')) => ('a'..'z'|'A'..'Z')
                                   | (':')   { $setType(COLON); }
                                   | ('\\')  { $setType(BSLASH); }
                                   | ('(')   { $setType(LPAREN); }
                                   | (')')   { $setType(RPAREN); }
                                   | ('!'..'~') { $setType(ASCIISYM); }
;

Now, I still get error message:
error: Lexer rule COLON is not defined

I really do not know why is that. Anny suggestions?
Thanx in advance.
From stefan at amiq.ro  Tue Apr 12 05:06:28 2005
From: stefan at amiq.ro (stefan)
Date: Tue Apr 12 05:12:14 2005
Subject: [antlr-interest] NEW : Fasper - Parser Testing Framework
Message-ID: <200504121506.28788.stefan@amiq.ro>

Hello All!

            Parser Testing Framework has been donated by AMIQ srl
to Open Source Community under BSD license.
            There were few discussions on ANTLR group about parser
verification, but none of them gave a complete sollution to the parser
verification problem.

1. For more info and downloads, please refer Fasper home page:
 - http://sourceforge.net/projects/fasper
or
 - www.amiq.ro/fasper.html

2. For instructions on how to use/integrate fasper with your environment,
please refer to the fasper manual (download it from the link above).

3. For info on how to integrate with antlrWorks please refer to the manual.

4. For more questions please mail to ANTLR group or to stefan@amiq.ro.

            We hope that by opening up a part of our current verification
flow, we help ANTLR community to release higher quality products.

Enjoy,
           Stefan.
From ewbank at gmail.com  Tue Apr 12 05:35:42 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 12 05:35:46 2005
Subject: [antlr-interest] how to collect multiple AST under single root
In-Reply-To: <425AF5B0.8090001@hot.ee>
References: <425AF5B0.8090001@hot.ee>
Message-ID: <dd3a065f05041205354d1e162d@mail.gmail.com>

The problem is that "tmp" refers to the last rule2 recognized, not the
list of same.  The default generated AST is a chain, so you need to
add a new root above it:

   rule1: ( rule2 )* { #rule1 = #( [RULE, "root"], ## ); };

Here, "##" means that tree already constructed.  Note that you can
also write this in a more general way

   rule1: ( rule2 )* { ## = #( [RULE, "root"], ## ); };

Hope this helps,
- B

On Apr 11, 2005 6:09 PM, Anton Arhipov <tonyfox24@hot.ee> wrote:
> hi! could anyone suggest please how could I collect multiple ASTs under
> a single root :
> 
> rule1 :
>       ( tmp:rule2 )*
>       {
>           #rule1 = #([RULE, "root"],tmp);
>        }
>     ;
> 
> rule2 :
>  ...............
>    ;
> 
> this creates only a root with a single child.
> 
> thx.
> A.
>
From ewbank at gmail.com  Tue Apr 12 07:12:24 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 12 07:12:27 2005
Subject: [antlr-interest] Parsing optional component in Tree Walker
In-Reply-To: <2AC4B3D9C33D8F49B5D9C3C53A99605483765A@mail-hq1.Technica1.com>
References: <2AC4B3D9C33D8F49B5D9C3C53A99605483765A@mail-hq1.Technica1.com>
Message-ID: <dd3a065f050412071237275716@mail.gmail.com>

Yes, it's quite flexible -- almost /too/ flexible for me.

I've found that I tend to avoid the ()* and ()? containers in ANTLR in
favor of explicit null alternatives simply because it forces me to
think about the alternatives:

  (a)? => (a | /*null*/ )
  (a)* => ( (a)+ | /*null*/ )

At the same time, the other advice (to make the tree regular or use a
different root node) is better in some senses because it keeps the
code simpler.  There's mention of this in the ANTLR manual regarding
unary minus versus binary minus - better to have UMINUS as a distinct
root to avoid having to do some hairy stuff each time you walk the
tree:
  /* easy and obvious */
  #(UMINUS e1) { ... unary_op(e1); }
  #(MINUS e1 e2) { ... binary_op(e1,e2); }

  /* huh? */
  #(MINUS e1
    ( /*null*/ { ... unary_op(e1); }
    | e2       { ... binary_op(e1,e2); }
    )?
  )

On Apr 12, 2005 8:39 AM, Peter Kronenberg <PKronenberg@technicacorp.com> wrote:
> Thanks.  That's perfect.  I didn't realize the syntax was so flexible
> 
> Peter Kronenberg
> Software Engineer
> (703) 885-1222
> pkronenberg@technicacorp.com
> 
> -----Original Message-----
> From: antlr-interest-bounces@antlr.org
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Monday, April 11, 2005 3:25 PM
> To: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Parsing optional component in Tree Walker
> 
> What's wrong with doing what you said - an optional component:
> 
>    #(ROOT A B
>       ( C
>          { ... handleAB (...) }
>       | /* empty */
>          { ... handleAB (... true); }
>       )
>    )
> 
> On Apr 11, 2005 8:43 AM, Peter Kronenberg <PKronenberg@technicacorp.com>
> wrote:
> >
> >
> > I have a tree walker that needs to deal with an optional component C.
> >
> > If tree is #(ROOT A B) then call handleAB(a.getText(), b.getText()).
> > If tree is #(ROOT A B C) then call handleAB(a.getText(), b.getText(),
> true);
> >
> > The handler for C has already set some stuff, but handleAB needs to
> know
> > about it.  Since there is likely to be recursion while walking the
> tree,
> > setting a variable isn't feasable.
> >
> > What I've come up with is
> >
> > (#(ROOT A B C)) => #(ROOT a:A b:B C) {
> >    handleAB(#a.getText(), #b.getText(), true);
> > }
> > | #(ROOT A B) {
> >    handleAB(#a.getText(), #b.getText());
> > }
> >
> > It seems a bit kludgy and redundant.  Is there a better way?
> > I can adjust the parameters of handleAB, but I need some indication if
> the
> > optional C is there
> >
> >
> > Peter Kronenberg
> > Software Engineer
> > (703) 885-1222
> > pkronenberg@technicacorp.com
> >
> >
> >
> > The information contained in this transmission may contain privileged
> and
> > confidential information. It is intended only for the use of the
> person(s)
> > named above. If you are not the intended recipient, you are hereby
> notified
> > that any review, dissemination, distribution or duplication of this
> > communication is strictly prohibited. If you are not the intended
> recipient,
> > please contact the sender by reply e-mail and destroy all copies of
> the
> > original message. Technica Corporation does not represent this e-mail
> to be
> > free from any virus, fault or defect and it is therefore the
> responsibility
> > of the recipient to first scan it for viruses, faults and defects. To
> reply
> > to our e-mail administrator directly, please send an e-mail to
> > postmaster@technicacorp.com. Thank you.
> >
> >
>
From suneel.chinchanikar at xecomit.com  Tue Apr 12 04:10:22 2005
From: suneel.chinchanikar at xecomit.com (Suneel Chinchanikar)
Date: Tue Apr 12 08:48:26 2005
Subject: [antlr-interest] Need antlr which generates code in vb.net
Message-ID: <HMEMJOBOMNDMHOOKINPPMEAKCAAA.suneel.chinchanikar@xecomit.com>

Hello everybody,

Is there any implemetation of ANTLR which generates VB.NET code and also
supports AST?

Thanks
Suneel

From tonyfox24 at hot.ee  Tue Apr 12 12:58:50 2005
From: tonyfox24 at hot.ee (Anton Arhipov)
Date: Tue Apr 12 12:47:06 2005
Subject: [antlr-interest] how to collect multiple AST under single root
In-Reply-To: <dd3a065f05041205354d1e162d@mail.gmail.com>
References: <425AF5B0.8090001@hot.ee>
	<dd3a065f05041205354d1e162d@mail.gmail.com>
Message-ID: <425C287A.7050806@hot.ee>

Thx!

Actually this one worked for me:

rule1: tmp:tmp_rule {#rule1 = #([RULE, "root"], #tmp); };
tmp_rule : (rule2)*;
rule2: ..... ;

Bryan Ewbank wrote:

>The problem is that "tmp" refers to the last rule2 recognized, not the
>list of same.  The default generated AST is a chain, so you need to
>add a new root above it:
>
>   rule1: ( rule2 )* { #rule1 = #( [RULE, "root"], ## ); };
>
>Here, "##" means that tree already constructed.  Note that you can
>also write this in a more general way
>
>   rule1: ( rule2 )* { ## = #( [RULE, "root"], ## ); };
>
>Hope this helps,
>- B
>
>On Apr 11, 2005 6:09 PM, Anton Arhipov <tonyfox24@hot.ee> wrote:
>  
>
>>hi! could anyone suggest please how could I collect multiple ASTs under
>>a single root :
>>
>>rule1 :
>>      ( tmp:rule2 )*
>>      {
>>          #rule1 = #([RULE, "root"],tmp);
>>       }
>>    ;
>>
>>rule2 :
>> ...............
>>   ;
>>
>>this creates only a root with a single child.
>>
>>thx.
>>A.
>>
>>    
>>
>
>  
>

From ewbank at gmail.com  Tue Apr 12 14:03:53 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 12 14:03:57 2005
Subject: [antlr-interest] how to collect multiple AST under single root
In-Reply-To: <425C287A.7050806@hot.ee>
References: <425AF5B0.8090001@hot.ee>
	<dd3a065f05041205354d1e162d@mail.gmail.com> <425C287A.7050806@hot.ee>
Message-ID: <dd3a065f0504121403c4d50c5@mail.gmail.com>

Yep, that's the same thing, written with a separate rule to give you a
handle.  It still relies on the fact of default AST construction being
a forest (i.e., trees per element, linked as /siblings/) in the
subordinate /tmp_rule/.

On Apr 12, 2005 3:58 PM, Anton Arhipov <tonyfox24@hot.ee> wrote:
> Thx!
> 
> Actually this one worked for me:
> 
> rule1: tmp:tmp_rule {#rule1 = #([RULE, "root"], #tmp); };
> tmp_rule : (rule2)*;
> rule2: ..... ;
> 
> Bryan Ewbank wrote:
> 
> >   rule1: ( rule2 )* { #rule1 = #( [RULE, "root"], ## ); };
> >
> >Here, "##" means that tree already constructed.  Note that you can
> >also write this in a more general way
> >
> >   rule1: ( rule2 )* { ## = #( [RULE, "root"], ## ); };
> >
> >Hope this helps,
> >- B
> >
> >On Apr 11, 2005 6:09 PM, Anton Arhipov <tonyfox24@hot.ee> wrote:
> >
> >
> >>hi! could anyone suggest please how could I collect multiple ASTs under
> >>a single root :
> >>
> >>rule1 :
> >>      ( tmp:rule2 )*
> >>      {
> >>          #rule1 = #([RULE, "root"],tmp);
> >>       }
> >>    ;
> >>
> >>rule2 :
> >> ...............
> >>   ;
> >>
> >>this creates only a root with a single child.
> >>
> >>thx.
> >>A.
> >>
> >>
> >>
> >
> >
> >
> 
>
From open.zone at virgin.net  Wed Apr 13 09:53:40 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 13 09:40:28 2005
Subject: [antlr-interest] ANTLR 2.7.5 Bug (affects lexers in C#,
	Java and C++)
In-Reply-To: <e8a3df20777c53fddea878c62bb55f4f@cs.usfca.edu>
Message-ID: <000201c54049$586a7810$6702a8c0@hercules>

> On Apr 5, 2005, at 1:19 PM, Luis Leal wrote:
> 
> > Hi,
> >
> > I've found the following small bug in the 2.7.5 C# runtime 
> for which I 
> > couldn't find a report on the list. (I haven't checked the java or 
> > other runtimes).
> >
> > Lexers generated with defaultErrorHandler=true contain a 
> reference to 
> > a recover method which does not seem to be implemented.  
> Copying the 
> > recover method from Parser.cs to CharScanner.cs resolves 
> the problem.
> 
> Hmm...Michael can correct me, but I thought we fixed that 
> right before 
> 2.7.5 shipped...maybe it was just after.
> 
> Ter

We fixed a related issue in Parsers Ter, not this one. ;-)

ANTLR lexers don't (shouldn't?) have the recover() method so, it could be
classed as a bug in the C# codegen since it shouldn't be generating calls to
recover() for lexers.

I've confirmed that this issue also affects the Java and C++ codegens
(Python doesn't yet generate the recover() method) so, should I:

1. Fix the C#, Java and C++ codegens so they don't generate recover() for
lexers (they will use the old consume()/consumeUntil() methods instead).

OR

2. Add recover() to the CharScanner class for C#, Java and C++ (as Luis did
for C# in his private copy of ANTLR).

The effort involved is about the same in either case.

Micheal
ANTLR/C#

From open.zone at virgin.net  Wed Apr 13 14:53:01 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 13 14:39:48 2005
Subject: [antlr-interest] Need antlr which generates code in vb.net
In-Reply-To: <HMEMJOBOMNDMHOOKINPPMEAKCAAA.suneel.chinchanikar@xecomit.com>
Message-ID: <000901c54073$29e8b360$6702a8c0@hercules>



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Suneel 
> Chinchanikar
> Sent: 12 April 2005 12:10
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Need antlr which generates code in vb.net
> 
> 
> Hello everybody,
> 
> Is there any implemetation of ANTLR which generates VB.NET 
> code and also supports AST?

This doesn't answer your question but, have you considered writing a VB.Net
code generator yourself. The exisitng .NET runtime library is fully
compatible with VB.NET so you wouldn't need to port/rewrite that.

Have a look at the C# codegen in CSharpCodeGenerator.java and see if you can
derive a version that generates VB.NET code instead. Once that is done, we
can add a VB_NET language target for you.

If you can wait a few months, this will be even easier to do with ANTLR v3.

Micheal
ANTLR/C#

From JCrozman at webplan.com  Wed Apr 13 16:05:48 2005
From: JCrozman at webplan.com (Jim Crozman)
Date: Wed Apr 13 16:05:19 2005
Subject: [antlr-interest] ANTLR 2.7.5 C# runtime in a multi-threaded
	environment hangs
Message-ID: <991353DEF8BEFA48829C931298129F8002A39434@wpkanex03.webplan.com>

We use ANTLR to parse our query language in our data server. This is a
multi user system so we service many simultaneous requests. It is a .NET
product so we use C# as the language. We have been using 2.7.2.1 for
quite a while and I finally got around to moving up to 2.7.5 a few weeks
ago.

Yesterday we were running a stress test and we got hung in an infinite
loop in ASTPair.advanceChildToEnd().
The problem was the NextSibling chain wrapped on itself. When exploring
how this happened we discovered that some code had been added to ASTPair
since the 2.7.2.1. There is a new static Queue in the class and two
static methods GetInstance and PutInstance. The parser generated code
now calls GetInstance to create and ASTPair and then calls PutInstance
when it is done with it. I am assuming this was done to recycle the
ASTPairs and avoid new and garbage collect.

The ASTPairs are kept in a System.Collections.Queue and reused. The
Queue class is only thread safe if it is "public static" and then only
if you are careful what you do with it. Thus the parser is not thread
safe. Our many threads all parsing at the same time must have gotten the
same node and got all messed up in the references.

Why not just new an ASTPair when required and let the garbage collector
clean it up? This is what 2.7.2.1 did. It costs just about nothing to do
a "new" in a garbage collected environment (just move the heap pointer)
and there is no delete. The only impact is the garbage collect. Rapidly
turning over objects get cleanned up very efficiently in the
generational .NET garbage collector. Probably less cycles than all the
code to enqueue and dequeue the nodes especially if you need critical
sections to make it thread safe. A thread static for the queue would
work but that is slow too.

We changed GetInstance to just always do a "new ASTPair" and stubbed the
PutInstance. Everything seems to work great then. We did a quick search
for other static variables and there didn't seem to be any other ones of
concern.

Another option that I tried was to eliminate the Get & Put Instance and
change the ASTPair from a class to a struct. This way there is no new on
the heap at all. It is a value class on the stack. There are a few other
chages required to make this work such as passing the currentAST nodes
(ASTPair objects) by ref to addASTChild and makeASTRoot in the
ASTFactory. There was also a virtual copy method that didn't seem to be
needed.

Can the next patch release can get rid of this problem? If not please
explain the rationale behind this change and what I can do to use ANTLR
in a multithreaded environment (many simultaneous parsers running). I
hate having a modified version.

Thanks, ANTLR is great!

Jim Crozman
Senior Software Architect
webPLAN inc.
From ewbank at gmail.com  Wed Apr 13 17:08:23 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Apr 13 17:08:26 2005
Subject: [antlr-interest] Turning TreeParsers on their ears(?)
Message-ID: <dd3a065f05041317088ef8ea6@mail.gmail.com>

I'm working thru a refactoring/reshaping of my AST, and am (of course)
hitting pretty much every pass.  It struck me that I'm making the same
ANTLR changes most everywhere, but the actions are different.

    //before
    expr_unary : #(ROOT lhs extra rhs ) { ... };

    //after
    expr_unary : #(ROOT id lhs rhs extra) { ... };

Has anyone explored turning ANTLR inside-out so that a tree parser
/production/ is the major object, with distinct actions on a per-pass
basis?

Not sure if this makes any sense to anyone else, but if it does, lemme
hear, okay.

Thanks,
- B
From open.zone at virgin.net  Wed Apr 13 18:03:58 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 13 17:50:48 2005
Subject: [antlr-interest] ANTLR 2.7.5 C# runtime in a
	multi-threadedenvironment hangs
In-Reply-To: <991353DEF8BEFA48829C931298129F8002A39434@wpkanex03.webplan.com>
Message-ID: <000801c5408d$d70c6f90$6702a8c0@hercules>

Hi Jim,

> Yesterday we were running a stress test and we got hung in an 
> infinite loop in ASTPair.advanceChildToEnd(). The problem was 
> the NextSibling chain wrapped on itself. When exploring how 
> this happened we discovered that some code had been added to 
> ASTPair since the 2.7.2.1. There is a new static Queue in the 
> class and two static methods GetInstance and PutInstance. The 
> parser generated code now calls GetInstance to create and 
> ASTPair and then calls PutInstance when it is done with it. I 
> am assuming this was done to recycle the ASTPairs and avoid 
> new and garbage collect.

The intent was to reduce the rate and magnitude of allocations thereby keep
the churn to a minimum.

> Why not just new an ASTPair when required and let the garbage 
> collector clean it up?

That was the old strategy. It had an often unpleasant cost in memory
usage/churn and overall performance. Especially for larger inputs and
grammars with deep[-ish] rule call depths.

> This is what 2.7.2.1 did. It costs 
> just about nothing to do a "new" in a garbage collected 
> environment (just move the heap pointer) and there is no 
> delete. The only impact is the garbage collect. Rapidly 
> turning over objects get cleanned up very efficiently in the 
> generational .NET garbage collector. Probably less cycles 
> than all the code to enqueue and dequeue the nodes especially 
> if you need critical sections to make it thread safe. A 
> thread static for the queue would work but that is slow too.

As the input size and rule call depth increases, the resource costs (and
hence performance costs) of those ASTPair instances becomes significant. I'm
thinking we need per-parser object pools. This would stll represent a
significant saving on the pre-2.7.5 unbounded scheme.

> Another option that I tried was to eliminate the Get & Put 
> Instance and change the ASTPair from a class to a struct. 
> This way there is no new on the heap at all. It is a value 
> class on the stack. There are a few other chages required to 
> make this work such as passing the currentAST nodes (ASTPair 
> objects) by ref to addASTChild and makeASTRoot in the 
> ASTFactory. There was also a virtual copy method that didn't 
> seem to be needed.

Sounds interesting. More detail on what you tried here would be appreciated.

> Can the next patch release can get rid of this problem?

2.7.6 certainly could have a per-parser object pool.


Micheal
ANTLR/C#

From open.zone at virgin.net  Wed Apr 13 18:07:40 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 13 17:54:26 2005
Subject: [antlr-interest] ANTLR 2.7.5 C# runtime in a
	multi-threadedenvironment hangs
In-Reply-To: <991353DEF8BEFA48829C931298129F8002A39434@wpkanex03.webplan.com>
Message-ID: <000f01c5408e$5b3d39c0$6702a8c0@hercules>

> We use ANTLR to parse our query language in our data server. 
> This is a multi user system so we service many simultaneous 
> requests. It is a .NET product so we use C# as the language. 
> We have been using 2.7.2.1 for quite a while and I finally 
> got around to moving up to 2.7.5 a few weeks ago.

Jim, can you comment on the relative performance of 2.7.2.1 and 2.7.5 in
your environment  please?

Cheers,

Micheal
ANTLR/C#

From prashant.deva at gmail.com  Wed Apr 13 22:15:05 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Wed Apr 13 22:15:55 2005
Subject: [antlr-interest] AntlrStudio testing - Need huge grammar file
Message-ID: <41fed8f805041322156fbbda85@mail.gmail.com>

Hi all,
   I am testing the AntlrStudio ide. I need a huge grammar file if
anyone has one.
Currently the biggest i have is the java 1.5 grammar which is approx 2k lines.

Anyone got a grammar bigger than that ?

PRASHANT
From open.zone at virgin.net  Wed Apr 13 23:19:53 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 13 23:06:39 2005
Subject: [antlr-interest] ANTLR 2.7.5 Bug (affects lexers in C#,
	Java and C++) - FIXED
In-Reply-To: <000201c54049$586a7810$6702a8c0@hercules>
Message-ID: <001801c540b9$f903f240$6702a8c0@hercules>


> ANTLR lexers don't (shouldn't?) have the recover() method so, 
> it could be classed as a bug in the C# codegen since it 
> shouldn't be generating calls to
> recover() for lexers.
> 
> I've confirmed that this issue also affects the Java and C++ 
> codegens (Python doesn't yet generate the recover() method) 

> 2. Add recover() to the CharScanner class for C#, Java and 
> C++ (as Luis did for C# in his private copy of ANTLR).
> 
> The effort involved is about the same in either case.

The CharScanner class now has a recover() method in the C#, Java and C++
runtime libraries.

Micheal
ANTLR/C#

From mail at martin-probst.com  Thu Apr 14 07:11:30 2005
From: mail at martin-probst.com (Martin Probst)
Date: Thu Apr 14 07:11:35 2005
Subject: [antlr-interest] Advanced matching in Tree Parsers
Message-ID: <20050414141132.924BBDC75C@www.antlr.org>

Hi all,
I have a problem with tree parsers. I'm trying to match tree fragments in a
tree parser. The problem is, we use a special AST node type which carries
lots of payload, and I have to match on that payload in many cases. I'd like
to use a semantic predicate within a syntactic predicate, but this doesn't
seem to work:

E.g.
expr:
	( #( ROOT f:FIRST { #f.myfield.equals(something) }? . ) ) => #( ROOT
FIRST . )
	| ...
	;

This does not give an error, but it also doesn't assign anything to #f and
consequently results in a null pointer exception. Is there a way to achieve
what I want?

Regards,
Martin

From ganelin at mail.com  Thu Apr 14 08:36:30 2005
From: ganelin at mail.com (pganelin)
Date: Thu Apr 14 08:34:22 2005
Subject: [antlr-interest] How to resolve ambiguous grammar of property file:
 example A = B C K = L 
Message-ID: <425E8DFE.9030201@mail.com>

I originally posted it to jguru forum but got no response. May be here I 
would have more luck :-)


I have ambiguous grammar (properties for some system). I attached 
grammar file below. Examples of the statements are

A = B ;
A = B C ;
A = B K = L ;
A = B C K = L ;
A -X = B C K  = L ;
A -X = B C K - M  = L ;


These statements should be grouped like this.

(A = B) ;
(A = B C) ;
(A = B ) (K = L) ;
(A = B C) (K = L) ;
(A - X = B C) (K - M  = L) ;


The human rule is simple. If equal sign follows identifier or identifier 
dash identifier than it is the name of the property. Otherwise it is 
part of the lsit
The ambiguous grammar would is attached.
I tried different lookaheads but so far was not able to solve the 
problem. I hope somebody else could propose ideas to try.

/Note 1./ If property name is ident only then lookahead = 2 would solve 
the problem.

/Note 2./ Something like this would solve the problem but unfortunately 
lookahead here is not supported by ANTLR.

statement:
      (( variable EQ  ) => variable EQ  value)* SEMI
;


/Note 3./ One possible solution would be create a different grammar and 
then rewire the tree. For such approach the interpretation would be like 
this (i.e create extra property names without value)

(A = B) ;
(A = B ) ( C) ;
(A = B ) (K = L) ;
(A = B ) (C) (K = L) ;
(A -X = B ) (C) (K - M  = L) ;

This would be my last choice if nothing else left, but may be there are 
better ways to do this.
=============================equ.g grammar file ===================

header{
package com.equ;
import java.util.*;
}

class EquParser extends Parser;
options {
    k = 1;
	buildAST = true;
}

program:
    (statement) *
;

statement:
      (variable EQ  value)* SEMI
;

variable:
   IDENT
   | IDENT MINUS IDENT
;

value:
   (IDENT)+
;



//----------------------------------------------------------------------------
class EquLexer extends Lexer;
//----------------------------------------------------------------------------
options {
	importVocab=EquParser;       // call the vocabulary "Equ"
	testLiterals=true;          // automatically test for literals
	caseSensitive=false;
	caseSensitiveLiterals = false;
}


IDENT		    :	('a' .. 'z' )+		;
EQ		        :	'=' ;
SEMI			:	';'		;
MINUS			:	'-'		;


// Whitespace -- ignored
WS	:	SPACE
		{ _ttype = Token.SKIP; }
	;

// Whitespace -- ignored
protected
SPACE	:	(	' '
		|	'\t'
		|	'\f'
			// handle newlines
		|	(	options {generateAmbigWarnings=false;}
			:	"\r\n"  // Evil DOS
			|	'\r'    // Macintosh
			|	'\n'    // Unix (the right way)
			)
			{ newline(); }
		)+
	;


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050414/d55ac033/attachment-0001.html
From jbb at acm.org  Thu Apr 14 09:57:42 2005
From: jbb at acm.org (John B. Brodie)
Date: Thu Apr 14 09:58:32 2005
Subject: [antlr-interest] How to resolve ambiguous grammar of property
	file: example A = B C K = L
In-Reply-To: <425E8DFE.9030201@mail.com> (message from pganelin on Thu, 14 Apr
	2005 11:36:30 -0400)
References: <425E8DFE.9030201@mail.com>
Message-ID: <E1DM7ew-0007KK-00@gecko>

Greetings!

You wrote (in part):
>I have ambiguous grammar (properties for some system). I attached 
>grammar file below. Examples of the statements are
>
>A = B ;
>A = B C ;
>A = B K = L ;
>A = B C K = L ;
>A -X = B C K  = L ;
>A -X = B C K - M  = L ;
>
>
>These statements should be grouped like this.
>
>(A = B) ;
>(A = B C) ;
>(A = B ) (K = L) ;
>(A = B C) (K = L) ;
>(A - X = B C) (K - M  = L) ;
>
>The human rule is simple. If equal sign follows identifier or identifier 
>dash identifier than it is the name of the property. Otherwise it is 
>part of the lsit
>The ambiguous grammar would is attached.
>I tried different lookaheads but so far was not able to solve the 
>problem. I hope somebody else could propose ideas to try.
>
>....snipped....

Attached please find a non-ambiguous (k=2) version of your grammar. I ran it
through antlr.Tool and got no complaints, but haven't actually tried to parse
any of your examples...

It probably isn't the really answer to your problem, tho.  It will produce a
rather different tree than the one you are looking for above.  I think it will
produce a tree something like the following (but again haven't actually tried
it):

(#s (#p A) = (#v B) ;)
(#s (#p A) = (#v B (#v C)) ;)
(#s (#p A) = (#v B (#s (#p K) = (#v L) ;)))
(#s (#p A) = (#v B (#v C (#s (#p K) = (#v L) ;))))
(#s (#p A - X) = (#v B (#v C (#s (#p K - M)  = (#v L) ;))))

where #s is the tree token for statement, #p is the tree token for variable
and #v is the tree token for value.

So that the next statement is actually at the tail of the current value
list. Rather than a flat list of statements.  (i think, but my knowledge of
tree construction/walking is rather weak, sorry).

Hope this helps...
   -jbb

-------------------------begin attachment-------------------------
header{
package com.equ;
import java.util.*;
}

class EquParser extends Parser;
options {
    k = 2;
	buildAST = true;
}

program:
    ( statement | SEMI )* EOF
;

statement:
     variable EQ value
;

variable:
   IDENT ( MINUS IDENT )?
;

value:
   IDENT ( value | statement | SEMI )
;



//----------------------------------------------------------------------------
class EquLexer extends Lexer;
//----------------------------------------------------------------------------
options {
	importVocab=EquParser;       // call the vocabulary "Equ"
	testLiterals=true;          // automatically test for literals
	caseSensitive=false;
	caseSensitiveLiterals = false;
}


IDENT		    :	('a' .. 'z' )+		;
EQ		        :	'=' ;
SEMI			:	';'		;
MINUS			:	'-'		;


// Whitespace -- ignored
WS	:	SPACE
		{ _ttype = Token.SKIP; }
	;

// Whitespace -- ignored
protected
SPACE	:	(	' '
		|	'\t'
		|	'\f'
			// handle newlines
		|	(	options {generateAmbigWarnings=false;}
			:	"\r\n"  // Evil DOS
			|	'\r'    // Macintosh
			|	'\n'    // Unix (the right way)
			)
			{ newline(); }
		)+
	;

-------------------------end attachment-------------------------
From ewbank at gmail.com  Thu Apr 14 10:26:43 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Apr 14 10:26:45 2005
Subject: [antlr-interest] Advanced matching in Tree Parsers
In-Reply-To: <20050414141132.924BBDC75C@www.antlr.org>
References: <20050414141132.924BBDC75C@www.antlr.org>
Message-ID: <dd3a065f05041410262f44928b@mail.gmail.com>

Can you rewrite it with cascading predicates, thus?

   #( ROOT f:FIRST
      ( { #f.myfield.equals(something) }? foundit:.
         {
            // foundit!  operate on it...
         }
      | missedit:.
         {
            // ROOT FIRST ..., but not what I wanted
         }
      )?
   )

Or perhaps with a prepass that does something like:
  #(ROOT f:FIRST
     { if (#f.myfield.equals(something)) f->setType(FIRST_MATCH); }
  );
And a postpass, if necessary to revert FIRST_MATCH to FIRST.

On 4/14/05, Martin Probst <mail@martin-probst.com> wrote:
> Hi all,
> I have a problem with tree parsers. I'm trying to match tree fragments in a
> tree parser. The problem is, we use a special AST node type which carries
> lots of payload, and I have to match on that payload in many cases. I'd like
> to use a semantic predicate within a syntactic predicate, but this doesn't
> seem to work:
> 
> E.g.
> expr:
>         ( #( ROOT f:FIRST { #f.myfield.equals(something) }? . ) ) => #( ROOT
> FIRST . )
>         | ...
>         ;
> 
> This does not give an error, but it also doesn't assign anything to #f and
> consequently results in a null pointer exception. Is there a way to achieve
> what I want?
> 
> Regards,
> Martin
> 
>
From prashant.deva at gmail.com  Thu Apr 14 11:32:51 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Apr 14 11:32:55 2005
Subject: [antlr-interest] AntlrStudio testing - Need huge grammar file
In-Reply-To: <dd3a065f05041403267f37d4c4@mail.gmail.com>
References: <41fed8f805041322156fbbda85@mail.gmail.com>
	<dd3a065f05041403267f37d4c4@mail.gmail.com>
Message-ID: <41fed8f805041411322b4800e9@mail.gmail.com>

Thanks georgios :)
Btw, 
does anyone here use 'real' grammar file which is bigger than the java grammar?
Of course, for testing i can use an auto - generated grammar worth 10
megs, but i want to know what's the max grammar size actually used by
anyone?

You don't need to send me the actual grammar file.
Just tell me how many lines is ur grammar file, if its bigger than the
java grammar.

PRASHANT

On 4/14/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> Sorry, no.
> 
> You could create one by copying the one you have and adding "a" before
> every nonterminal, "A" before every terminal?  You'd need to add a
> top-level rule to distinguish between them, too.
> 
> If you need it bigger still, use "b".."z" :-)
> 
> On 4/14/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > Hi all,
> >    I am testing the AntlrStudio ide. I need a huge grammar file if
> > anyone has one.
> > Currently the biggest i have is the java 1.5 grammar which is approx 2k lines.
> >
> > Anyone got a grammar bigger than that ?
> >
> > PRASHANT
> >
>
From rodrigobamboo at gmail.com  Thu Apr 14 11:36:40 2005
From: rodrigobamboo at gmail.com (Rodrigo B. de Oliveira)
Date: Thu Apr 14 11:36:44 2005
Subject: [antlr-interest] AntlrStudio testing - Need huge grammar file
In-Reply-To: <41fed8f805041322156fbbda85@mail.gmail.com>
References: <41fed8f805041322156fbbda85@mail.gmail.com>
Message-ID: <5917478b05041411368feb3ef@mail.gmail.com>

http://svn.boo.codehaus.org/trunk/src/Boo.Lang.Parser/boo.g

The boo grammar file above is currently at 2641 lines and 49K in size.

On 4/14/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Hi all,
>    I am testing the AntlrStudio ide. I need a huge grammar file if
> anyone has one.
> Currently the biggest i have is the java 1.5 grammar which is approx 2k lines.
> 
> Anyone got a grammar bigger than that ?
> 
> PRASHANT
> 


-- 
bamboo
http://blogs.codehaus.org/people/bamboo/
Got objects? http://www.db4o.com/
From Ari.Steinberg at EMBARCADERO.COM  Thu Apr 14 12:13:45 2005
From: Ari.Steinberg at EMBARCADERO.COM (Ari Steinberg)
Date: Thu Apr 14 12:13:57 2005
Subject: [antlr-interest] AntlrStudio testing - Need huge grammar file
Message-ID: <715057EB65FC7E47923FE408F290ADFDC01856@ettoma01.embarcadero.com>

I have a complete Oracle 8.1.6 grammar that's 9471 lines.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Thursday, April 14, 2005 2:33 PM
To: antlr-interest@antlr.org
Subject: Re: [antlr-interest] AntlrStudio testing - Need huge grammar
file

Thanks georgios :)
Btw, 
does anyone here use 'real' grammar file which is bigger than the java
grammar?
Of course, for testing i can use an auto - generated grammar worth 10
megs, but i want to know what's the max grammar size actually used by
anyone?

You don't need to send me the actual grammar file.
Just tell me how many lines is ur grammar file, if its bigger than the
java grammar.

PRASHANT

On 4/14/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> Sorry, no.
> 
> You could create one by copying the one you have and adding "a" before
> every nonterminal, "A" before every terminal?  You'd need to add a
> top-level rule to distinguish between them, too.
> 
> If you need it bigger still, use "b".."z" :-)
> 
> On 4/14/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > Hi all,
> >    I am testing the AntlrStudio ide. I need a huge grammar file if
> > anyone has one.
> > Currently the biggest i have is the java 1.5 grammar which is approx
2k lines.
> >
> > Anyone got a grammar bigger than that ?
> >
> > PRASHANT
> >
>
From monty at codetransform.com  Thu Apr 14 09:26:21 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Thu Apr 14 12:26:51 2005
Subject: [antlr-interest] AntlrStudio testing - Need huge grammar file
In-Reply-To: <41fed8f805041322156fbbda85@mail.gmail.com>
References: <41fed8f805041322156fbbda85@mail.gmail.com>
Message-ID: <425E99AD.5000401@codetransform.com>

Have a look at the SDL grammar on the antlr.org grammars page.

Monty

Prashant Deva wrote:
> Hi all,
>    I am testing the AntlrStudio ide. I need a huge grammar file if
> anyone has one.
> Currently the biggest i have is the java 1.5 grammar which is approx 2k lines.
> 
> Anyone got a grammar bigger than that ?
> 
> PRASHANT
> 
> 
> 

From ewbank at gmail.com  Thu Apr 14 13:47:25 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Apr 14 13:47:27 2005
Subject: [antlr-interest] How to resolve ambiguous grammar of property
	file: example A = B C K = L
In-Reply-To: <425E8DFE.9030201@mail.com>
References: <425E8DFE.9030201@mail.com>
Message-ID: <dd3a065f0504141347344e8@mail.gmail.com>

I think this works; there was a left-recursion problem in how variable
was defined - it's replaced with a ()? suffix instead.

The weird part is that the value production is recursive - if there
are two more IDENTs in the stream, then recurse to eat one and look
again.

Syntactic predicates, such as "(IDENT IDENT) =>", don't work if there
are single alternatives, which is why /value/ is written with ( ... |
) instead of ( ... )?

   class EquParser extends Parser;
   options { k = 1; buildAST = true; }
   program: ( statement )* ;
   statement: ( variable EQ value )* SEMI ;
   variable: IDENT ( MINUS IDENT )? ;
   value:
       IDENT
       ( ( IDENT IDENT ) => value
       | /* no match - next IDENT will be variable */
       )
   ;

Hope this helps,
- Bryan
From greenj at ix.netcom.com  Thu Apr 14 13:51:00 2005
From: greenj at ix.netcom.com (John Green)
Date: Thu Apr 14 13:52:07 2005
Subject: [antlr-interest] AntlrStudio testing - Need huge grammar file
In-Reply-To: <41fed8f805041411322b4800e9@mail.gmail.com>
References: <41fed8f805041322156fbbda85@mail.gmail.com>
	<dd3a065f05041403267f37d4c4@mail.gmail.com>
	<41fed8f805041411322b4800e9@mail.gmail.com>
Message-ID: <425ED7B4.4070603@ix.netcom.com>


http://www.joanju.com/dist/docs/tree_spec.html

3700 lines, 91K.

Enjoy.  ;-)

John



>>On 4/14/05, Prashant Deva <prashant.deva@gmail.com> wrote:
>>    
>>
>>>Hi all,
>>>   I am testing the AntlrStudio ide. I need a huge grammar file if
>>>anyone has one.
>>>Currently the biggest i have is the java 1.5 grammar which is approx 2k lines.
>>>
>>>Anyone got a grammar bigger than that ?
>>>
>>>PRASHANT
>>>
>>>      
>>>
>
>
>  
>


From JCrozman at webplan.com  Thu Apr 14 14:17:38 2005
From: JCrozman at webplan.com (Jim Crozman)
Date: Thu Apr 14 14:17:06 2005
Subject: [antlr-interest] ANTLR 2.7.5 C# runtime in
	amulti-threadedenvironment hangs
Message-ID: <991353DEF8BEFA48829C931298129F8002A39436@wpkanex03.webplan.com>

It would take a bit of work to reconfigure my environment to to go back
to 2.7.2.1. I didn't do any performance testing when I upgraded. I
haven't been concentrating too much on performance of parsing right now
since usually the execution of a query swamps the parsing. I did have
some bad performance when I was using syntactic predicates. But I was
able to refactor and get rid of any recursive ones.

If what your interested in is performance between queueing and reusing
the ASPPairs and just always "new"ing them I did a little experiment.

We are using the latest 2.0 release of .net so I recompiled the C#
runtime as shipped to be fair. Plus I compiled a version with
ASTPair.GetInstance() just returning new ASTPair(). And PutInstance just
doing nothing. I compiled optimized versions (you have to force it in
nant in 2.0).

I mad a performance bench mark that parsed 1000 queries. It took 10.38
seconds as shipped and 10.21 seconds letting the garbage collector do
its thing.

I also put it into a bigger loop and watched the performance counters
after 1 minute of execution.

The reuse version (as shipped) spent 0.497% of the cpu time in the
garbage collector and did 264 Generation 0 collections and 36 Generation
1

The "new" version spent 0.527% of the cpu time in the garbage collector
and did 338 Generation 0 collections and 41 Generation 1

So the garbage collector does have to work a little harder but it does
it more effeciently than doing the management and reuse manually using
the Queue. I am finding the more I use C# the more I love it and hate
going back to our unmanaged C++ code where you have to worry so much
about memory management. I also spent some time at the Microsoft lab
tracking how the JIT compiler generated code. Does it ever do a good job
inlining methods and minimizing stack frames.

The memory usage was about the same. ANTLR's usage is swamped by other
things allocated in our engine.

One disadvantage of keeping free nodes on the Queue is that when the
parsing is idle (between queries) the memory used by the "free" ASTPairs
is tied up and can not be reclaimed by the garbage collector. They can
only ever be reused as ASTPairs. Probably not that many of the in
practice. If there were the Queue implementation gets not very friendly
because it keeps growing a fixed size array (allocating a bigger one and
copying everything over). Big arrays are not very friendly to the memory
management and paging. I assume here you wouldn't expect the queue to
get much bigger than 100 entries even if there are pultiple parser
instances running.

The Multithreading bug is one of those hard to recreate ones. It will
just about never happen on a single CPU machine because you would need
to have a time slice in the middel of the critical code. And only on a
multi CPU machine under very heavy loading. The kind you hate to come
across in the field! I have had 20 years of working on multi-cpu
machines and it is always interesting the bugs and scaling issues that
come up. I have become very careful with static variables.


Jordan, have you done benchmarks with and without the queue? I notice
the Java implementation doesn't use one.

Jim

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Micheal J
Sent: Wednesday, April 13, 2005 9:08 PM
To: ''antlr-interest' Interest'
Subject: RE: [antlr-interest] ANTLR 2.7.5 C# runtime in
amulti-threadedenvironment hangs

> We use ANTLR to parse our query language in our data server. 
> This is a multi user system so we service many simultaneous requests. 
> It is a .NET product so we use C# as the language.
> We have been using 2.7.2.1 for quite a while and I finally got around 
> to moving up to 2.7.5 a few weeks ago.

Jim, can you comment on the relative performance of 2.7.2.1 and 2.7.5 in
your environment  please?

Cheers,

Micheal
ANTLR/C#

From prashant.deva at gmail.com  Thu Apr 14 15:12:03 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Apr 14 15:12:05 2005
Subject: [antlr-interest] Need help with nondeterminism warning
Message-ID: <41fed8f805041415124b7f9aa8@mail.gmail.com>

Here is the warning- 
nondeterminism between alts 1 and 2 of block upon k==1:ACTION
k==2:EOF,"lexclass","class","public","protected","private",DOC_COMMENT,ACTION,TOKEN_REF,RULE_REF

I got this warning after i modified the antlr grammar just a little.
I am pretty bad with parser generation stuff, so could someone pls
tell me what exactly does this warning mean, and is it a possible
sequence at all or not? so do i need to worry about it?

Here is part of the original grammar and a description of the change i made -


classDef : (ACTION)? (DOC_COMMENT)? grammarSpec rules;

grammarSpec :
            ("lexclass" id |
            "class" id "extends" ("Lexer"|"Parser"|"TreeParser")
(superClass)?) SEMI
            (optionsSpec)?
            (tokensSpec)?
            ( ACTION )?
	;

rules : (rule)+;


I just changed the 'rules' to accept 0 or more rules, thus-

rules : (rule)*;


So i do need to worry about this non determinism warning ?

PRASHANT
From serge.bogdanov at intel.com  Thu Apr 14 15:22:00 2005
From: serge.bogdanov at intel.com (Bogdanov, Serge)
Date: Thu Apr 14 15:22:10 2005
Subject: [antlr-interest] Need help with nondeterminism warning
Message-ID: <EFA13842B4FD55469C1A837C9C849644024B232D@hdsmsx401.amr.corp.intel.com>

By this small change you actually changed a lot and now antlr is not
sure when to enter/exit the 'rules' rule. If you want to keep it this
way, you need to add something like the following:

rules:
	(rule)=> (rule)+
	|
	;

Or maybe k = 3 would help.

>> Sergey Bogdanov
intel massachusetts
M/S HD2-246
77 Reed Road, 
Hudson, MA  01749
Tel: (978)553-2724

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
>bounces@antlr.org] On Behalf Of Prashant Deva
>Sent: Thursday, April 14, 2005 6:12 PM
>To: antlr-interest@antlr.org
>Subject: [antlr-interest] Need help with nondeterminism warning
>
>Here is the warning-
>nondeterminism between alts 1 and 2 of block upon k==1:ACTION
>k==2:EOF,"lexclass","class","public","protected","private",DOC_COMMENT,
ACTI
>ON,TOKEN_REF,RULE_REF
>
>I got this warning after i modified the antlr grammar just a little.
>I am pretty bad with parser generation stuff, so could someone pls
>tell me what exactly does this warning mean, and is it a possible
>sequence at all or not? so do i need to worry about it?
>
>Here is part of the original grammar and a description of the change i
made
>-
>
>
>classDef : (ACTION)? (DOC_COMMENT)? grammarSpec rules;
>
>grammarSpec :
>            ("lexclass" id |
>            "class" id "extends" ("Lexer"|"Parser"|"TreeParser")
>(superClass)?) SEMI
>            (optionsSpec)?
>            (tokensSpec)?
>            ( ACTION )?
>	;
>
>rules : (rule)+;
>
>
>I just changed the 'rules' to accept 0 or more rules, thus-
>
>rules : (rule)*;
>
>
>So i do need to worry about this non determinism warning ?
>
>PRASHANT
From shalini.sh at gmail.com  Fri Apr 15 03:19:21 2005
From: shalini.sh at gmail.com (Shalini Sharma)
Date: Fri Apr 15 03:19:26 2005
Subject: [antlr-interest] creating list in verilog
Message-ID: <6966751005041503197dc1a57b@mail.gmail.com>

temp : (x=a)+ 
       //i want to create a list of integers here 
       // what should i do as statements here will be 
       // executed only when the entire rule is matched 		


a returns [int z]: 

 //some rules here
From prashant.deva at gmail.com  Fri Apr 15 04:05:09 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Fri Apr 15 04:05:11 2005
Subject: [antlr-interest] Suggestion to improve the 'ParseTreeDebugParser'
	class in antlr
Message-ID: <41fed8f805041504057bcc9016@mail.gmail.com>

Here is a portion of the comment from the
'addCurrentTokenToParseTree()' method in the ParseTreeDebugParser
class-

/**This adds LT(1) to the current parse subtree.  Note that the match()	 
*  routines add the node before checking for correct match.  This means
*  that, upon mismatched token, there will a token node in the tree
*  corresponding to where that token was expected.
*  ....
*/

And this is how the current match method is declared - 
public void match(int i) 
{		
  addCurrentTokenToParseTree();
  super.match(i);
}



What i am suggesting is that instead of the above code, we have code like this- 

public void match(int i) 
{		
 Token t ;
 if ( LA(1)==Token.EOF_TYPE ) ;
        t = new antlr.CommonToken("EOF");
 else
   t = LT(1); 

  super.match(i);

 addTokenToParseTree(t);
}


This way the parse tree won't contain the mismtached token, as the
token won't be added to the tree if the exception is thrown.

PRASHANT
From scott at javadude.com  Fri Apr 15 06:37:00 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Apr 15 06:37:07 2005
Subject: [antlr-interest] Language-Neutral Actions
Message-ID: <20050415130752.6173E290334@new.knowspam.net>

I'd really like to see language-neutral actions in ANTLR 3.

The basic idea is that all action code is simply calls to behavior methods
in some other object.

Depending on what target language is specified, different "glue" code is
formed to contact that other object.

This would allow a grammar to be targeted to pretty much any language.

Some old parser generators I used did things like

  foo: fee fie fo @doSomething(fee,fie,fo);

which would allow you to target it to multiple languages. The parser
generator would change @doSomething(...) into whatever was appropriate for
the target language.

I don't know that we'd want to use the same syntax (I like the {...} for
actions), but we could have a grammar option that specifies language-netrual
actions and all {...} code is assumed neutral.

Thoughts?
-- Scott




From oliver.zeigermann at gmail.com  Fri Apr 15 06:40:19 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Apr 15 06:40:21 2005
Subject: [antlr-interest] Language-Neutral Actions
In-Reply-To: <20050415130752.6173E290334@new.knowspam.net>
References: <20050415130752.6173E290334@new.knowspam.net>
Message-ID: <9da4f45205041506407ea2fa32@mail.gmail.com>

Or maybe something like language neutral setting of properties with
data retrieved in parsing. In Java this could be filling of beans. I
think in C# there is a similar and even more complete mechanism.

Oliver

On 4/15/05, Scott Stanchfield <scott@javadude.com> wrote:
> I'd really like to see language-neutral actions in ANTLR 3.
> 
> The basic idea is that all action code is simply calls to behavior methods
> in some other object.
> 
> Depending on what target language is specified, different "glue" code is
> formed to contact that other object.
> 
> This would allow a grammar to be targeted to pretty much any language.
> 
> Some old parser generators I used did things like
> 
>   foo: fee fie fo @doSomething(fee,fie,fo);
> 
> which would allow you to target it to multiple languages. The parser
> generator would change @doSomething(...) into whatever was appropriate for
> the target language.
> 
> I don't know that we'd want to use the same syntax (I like the {...} for
> actions), but we could have a grammar option that specifies language-netrual
> actions and all {...} code is assumed neutral.
> 
> Thoughts?
> -- Scott
> 
>
From mail at martin-probst.com  Fri Apr 15 08:28:45 2005
From: mail at martin-probst.com (Martin Probst)
Date: Fri Apr 15 08:28:49 2005
Subject: [antlr-interest] Advanced matching in Tree Parsers
In-Reply-To: <dd3a065f05041410262f44928b@mail.gmail.com>
Message-ID: <20050415152847.64DB8DCC25@www.antlr.org>

Hi,
First of all, thanks for your help Bryan and Monty.

I think I missformulated my email a little bit in the first place, possibly
because I wasn't sure what I wanted myself. It seems I can achieve what I
want implementing your comments but this seems to be quite a hassle.

What I really want to do is match patterns agains the tree. The difference
to how ANTLR is handling this is that I just want to check if the pattern
fits, and if it fits execute some action (e.g. rewrite the tree). If the
pattern is not matched I want to continue recursively through the tree
(recursion, e.g. whole new expressions, can occur only in well defined
places, don't have to match everything). 

This is about optimizing expressions, e.g. some expressions match a specific
pattern and can be rewritten to execute faster, but general translation is
done somewhere else. I really don't want to mix these two phases because I
guess it will create quite a mess, though I'm not yet sure about the
performance implications.

So I got some kind of a mismatch, ANTLR TreeParsers seem to be targeted at
requiring trees to match. I see three approaches for me:

1) Do it yourself
   e.g. by writing java code to traverse and match the tree. Possible, but
creates a lot of ugly code. Could also create a little language to write the
tree patterns in, but this really seems like reinventing the ANTLR tree
parser wheel.
2) Use semantic and syntactic predicates in front of rules
   e.g. ( treespec ) => match, creates ugly syntax and is possibly very slow
as matching is done twice. Doesn't look good to me at the moment.
2) Write ANTLR rules and catch exceptions
   e.g. 
   tryOptimizeSteps: 
     #( tree spec ); 
     exception catch [RecognitionException ex] {
       // return or something like that, or catch the exception in the
calling rule
     }
   I'm still not sure about how to make sure that ANTLR continues at the
correct point in the AST with the next rule, have to look into the code for
that.

Has anyone done something like this before? Can anybody report on possible
problems with one of these approaches?

Regards,
Martin

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Thursday, April 14, 2005 7:27 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Advanced matching in Tree Parsers
> 
> Can you rewrite it with cascading predicates, thus?
> 
>    #( ROOT f:FIRST
>       ( { #f.myfield.equals(something) }? foundit:.
>          {
>             // foundit!  operate on it...
>          }
>       | missedit:.
>          {
>             // ROOT FIRST ..., but not what I wanted
>          }
>       )?
>    )
> 
> Or perhaps with a prepass that does something like:
>   #(ROOT f:FIRST
>      { if (#f.myfield.equals(something)) f->setType(FIRST_MATCH); }
>   );
> And a postpass, if necessary to revert FIRST_MATCH to FIRST.
> 
> On 4/14/05, Martin Probst <mail@martin-probst.com> wrote:
> > Hi all,
> > I have a problem with tree parsers. I'm trying to match 
> tree fragments 
> > in a tree parser. The problem is, we use a special AST node 
> type which 
> > carries lots of payload, and I have to match on that 
> payload in many 
> > cases. I'd like to use a semantic predicate within a syntactic 
> > predicate, but this doesn't seem to work:
> > 
> > E.g.
> > expr:
> >         ( #( ROOT f:FIRST { #f.myfield.equals(something) }? 
> . ) ) => 
> > #( ROOT FIRST . )
> >         | ...
> >         ;
> > 
> > This does not give an error, but it also doesn't assign 
> anything to #f 
> > and consequently results in a null pointer exception. Is 
> there a way 
> > to achieve what I want?
> > 
> > Regards,
> > Martin
> > 
> >
> 
> 

From mail at martin-probst.com  Fri Apr 15 08:29:01 2005
From: mail at martin-probst.com (Martin Probst)
Date: Fri Apr 15 08:29:03 2005
Subject: [antlr-interest] creating list in verilog
In-Reply-To: <6966751005041503197dc1a57b@mail.gmail.com>
Message-ID: <20050415152901.E90FEDCCF3@www.antlr.org>

> temp : (x=a)+ 
>        //i want to create a list of integers here 
>        // what should i do as statements here will be 
>        // executed only when the entire rule is matched

Embed the action in the "loop":

temp {
  ArrayList ints = new ArrayList();
}:
  (x=a { ints.add(x); } )+
  ;

Regards,
Martin

From monty at codetransform.com  Fri Apr 15 06:19:36 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Fri Apr 15 09:20:04 2005
Subject: [antlr-interest] Advanced matching in Tree Parsers
In-Reply-To: <20050415152847.64DB8DCC25@www.antlr.org>
References: <20050415152847.64DB8DCC25@www.antlr.org>
Message-ID: <425FBF68.2090901@codetransform.com>

Martin Probst wrote:

> 1) Do it yourself
>    e.g. by writing java code to traverse and match the tree. Possible, but
> creates a lot of ugly code. Could also create a little language to write the
> tree patterns in, but this really seems like reinventing the ANTLR tree
> parser wheel.

There are some methods in BaseAST like findAll(AST) and 
findAllPartial(AST) which will match trees and return you a list of 
trees matched.  You may want to change it so it only matches on type and 
ignores the text.  Once you have your list of trees that match, feed 
them to your translator.

Can you do your work with those methods?

Monty
From ewbank at gmail.com  Fri Apr 15 12:28:39 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Apr 15 12:28:43 2005
Subject: [antlr-interest] Advanced matching in Tree Parsers
In-Reply-To: <425FBF68.2090901@codetransform.com>
References: <20050415152847.64DB8DCC25@www.antlr.org>
	<425FBF68.2090901@codetransform.com>
Message-ID: <dd3a065f05041512283dd260c6@mail.gmail.com>

Another option is to use syntactic predicates and recursion...

   // this is the entry point
   root:
      ( (pattern) => takeaction
      |
         // first instance of root is "down"; second is "to the right"
         #(. (root)? ) (root)?
      );
   pattern:
      #(A B)
   ;
   take_action:
      #(A #(B .... ) )
      { ## = kaboommmmmm; }
   ;

> What I really want to do is match patterns against the tree. The difference
> to how ANTLR is handling this is that I just want to check if the pattern
> fits, and if it fits execute some action (e.g. rewrite the tree). If the
> pattern is not matched I want to continue recursively through the tree
> (recursion, e.g. whole new expressions, can occur only in well defined
> places, don't have to match everything).
From mail at martin-probst.com  Fri Apr 15 14:55:36 2005
From: mail at martin-probst.com (Martin Probst)
Date: Fri Apr 15 14:56:07 2005
Subject: [antlr-interest] Advanced matching in Tree Parsers
In-Reply-To: <dd3a065f05041512283dd260c6@mail.gmail.com>
References: <20050415152847.64DB8DCC25@www.antlr.org>
	<425FBF68.2090901@codetransform.com>
	<dd3a065f05041512283dd260c6@mail.gmail.com>
Message-ID: <1113602136.12139.32.camel@narr.homeip.net>

Hi,

> Another option is to use syntactic predicates and recursion...

That's actually what I meant to say with point two (actually the first
one of the two points I labeled two ... err, you'll know what I
mean ;-)).

> 
>    // this is the entry point
>    root:
>       ( (pattern) => takeaction
>       |
>          // first instance of root is "down"; second is "to the right"
>          #(. (root)? ) (root)?
>       );
>    pattern:
>       #(A B)
>    ;

I didn't know you could reference whole rules in syntactic predicates -
this beautifies that approach a lot.

It will still have to check for some conditions manually. It would be
really nice if it was possible to hand-code checks into syntactic
predicates, with accessing the so far matched tree parts, e.g. something
like:

pattern:
    #( A b:B { vartable.lookup(#b.var) == current }? )

So by writing
   ( pattern ) => ...
it would also be made sure that the expression meets these conditions.

I think that would be a sane feature, it's exactly what semantic
predicates are meant for, isn't it?

Regards,
Martin

From parrt at cs.usfca.edu  Sat Apr 16 16:09:09 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Apr 16 16:09:01 2005
Subject: [antlr-interest] Language-Neutral Actions
In-Reply-To: <20050415130752.6173E290334@new.knowspam.net>
References: <20050415130752.6173E290334@new.knowspam.net>
Message-ID: <e14a8a8f004000d57a0ee48e916c6434@cs.usfca.edu>

On Apr 15, 2005, at 6:37 AM, Scott Stanchfield wrote:
> I'd really like to see language-neutral actions in ANTLR 3.
>
> The basic idea is that all action code is simply calls to behavior 
> methods
> in some other object.
>
> Depending on what target language is specified, different "glue" code 
> is
> formed to contact that other object.

An attractive idea I have considered.  I even considered building a 
simple language people could use to directly code actions in the 
grammar.

> This would allow a grammar to be targeted to pretty much any language.

Well, in my experience you always need an action where you don't have 
one yet and you need local variables access and parameters etc...  How 
do you pass arguments around to different rules in a language 
independent way?

> Some old parser generators I used did things like
>
>   foo: fee fie fo @doSomething(fee,fie,fo);
>
> which would allow you to target it to multiple languages. The parser
> generator would change @doSomething(...) into whatever was appropriate 
> for
> the target language.

This is sort of a "SAX" model and works well for some stuff.

> I don't know that we'd want to use the same syntax (I like the {...} 
> for
> actions), but we could have a grammar option that specifies 
> language-netrual
> actions and all {...} code is assumed neutral.

I'm not sure language independence is achievable with this mechanism 
though it is attractive in many cases.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From scott at javadude.com  Sat Apr 16 19:45:13 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Apr 16 19:45:22 2005
Subject: [antlr-interest] Language-Neutral Actions
In-Reply-To: <e14a8a8f004000d57a0ee48e916c6434@cs.usfca.edu>
Message-ID: <20050417021538.855C8290361@new.knowspam.net>

> > This would allow a grammar to be targeted to pretty much 
> any language.
> 
> Well, in my experience you always need an action where you 
> don't have one yet and you need local variables access and 
> parameters etc...  How do you pass arguments around to 
> different rules in a language independent way?

I think the stuff you've done for accessing tokens and rules w/ implicit
variables covers this (possibly...) The param and return values could be
problematic, though.

I think what may work is to do untyped parameters and return values, and
when generating code we could specify a language mapping for the types.

Later,
-- Scott




From doug.holton at comcast.net  Sun Apr 17 00:59:14 2005
From: doug.holton at comcast.net (Doug Holton)
Date: Sun Apr 17 00:59:22 2005
Subject: [antlr-interest] Support for non-java special characters (\a)
Message-ID: <42621752.7010509@comcast.net>

I get an error trying to $setText("\a") using the C# antlr runtime.
"\a" is a special character for a console beep.
The error is "unexpected character: a".

Is there any way I can work around this in my grammar, or is this
something that could be added to the C# antlr version, so that
perhaps it could allow: $setText("\\a") and convert it to "\a".

I can manually change \\a to \a in the generated lexer source and the 
beep works.

Here's a list of all the special characters possible in C#, some of 
which are not supported in java:
\' \" \\ \0 \a \b \f \n \r \t \v

I imagine this would be an issue for the python antlr runtime, too.  You 
can print "\a" in python as well.
From ewbank at gmail.com  Sun Apr 17 03:57:04 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Apr 17 03:57:06 2005
Subject: [antlr-interest] Support for non-java special characters (\a)
In-Reply-To: <42621752.7010509@comcast.net>
References: <42621752.7010509@comcast.net>
Message-ID: <dd3a065f05041703571e22ce@mail.gmail.com>

This is an interesting problem in light of the current
"Language-Neutral Actions" discussion :-)

You might try using setText() function directly instead of the
$setText() directive.  Another option is to use the corresponding hex
escape sequence (\01, I think), since that is supported in C# as well:


    A regular string literal consists of zero or more characters enclosed
    in double quotes, as in "hello", and may include both simple escape
    sequences (such as \t for the tab character) and hexadecimal and
    Unicode escape sequences.

On 4/17/05, Doug Holton <doug.holton@comcast.net> wrote:
> I get an error trying to $setText("\a") using the C# antlr runtime.
> "\a" is a special character for a console beep.
> The error is "unexpected character: a".
> 
> Is there any way I can work around this in my grammar, or is this
> something that could be added to the C# antlr version, so that
> perhaps it could allow: $setText("\\a") and convert it to "\a".
> 
> I can manually change \\a to \a in the generated lexer source and the
> beep works.
> 
> Here's a list of all the special characters possible in C#, some of
> which are not supported in java:
> \' \" \\ \0 \a \b \f \n \r \t \v
> 
> I imagine this would be an issue for the python antlr runtime, too.  You
> can print "\a" in python as well.
>
From mortench2004 at yahoo.dk  Sun Apr 17 04:47:48 2005
From: mortench2004 at yahoo.dk (M C)
Date: Sun Apr 17 04:47:51 2005
Subject: [antlr-interest] Antlr ANT task: Seemless builds using the Antlr -
	Problems and solutions. Help appreciated!
Message-ID: <20050417114748.73391.qmail@web25110.mail.ukl.yahoo.com>

Hi all,

This mail is about my "hard time" integrating the
Antlr ANT task in a seemless build enviroment. It
detils some solutions, some unsolved problems and a
request for changes in the next Antlr version.

For seemless integration I wanted to use the ANTLR
task to:
1) Automatically pick up all *.g files in whatever
src\** directories and generate *.java files
and place them in corresponding build\generatedsrc\**
directories (this assumes that the *.g files are
placed in a sub directory under the main source
directory that corresponds to the package the
resulting java files will have when put in the
generatedsrc build directory. ).

2) Generate grammar doocumentation and place it in doc
directory.

3) Only generate *.java and documentation files if the
*.g files have changed (timestamp of *.g files are
newer than the generated *.java files).

Unfortunately, unlike the javac task the antlr ant
task has key limitations:
a) Does not allow for multiple *.g files.
b) Does not provide direct support for mapping source
to destination paths.
c) Does not check timestamps.
d) Needs to be invoked twice to generate both *.java
files and documentation.

Despite the above limitation, I tried to use various
ANT extensions and complicated techniques to
accomplish my goals. See code below. The code is VERY
complex but it does conform to goals 1 and 2. However,
I could not get the timestamps to work. Consequently,
every time I build, the ANT ANTLR task generate new
java code, resulting in a long cascade of subsequent
build actions that are uncessary when nothing has
changed.

It would be really nice if the next version of Antlr
would provide a better ANT task that would allow for
integration into a seemless build enviroment.
Meanwhile, I would welcome if anyone have ideas for
improving the ANT workarounds I have detailed below:

Cheers,
Morten Christensen

----

<target name="generateparsers" depends="init">
	 <echo message="Generating source code parser(s) for
${ant.project.name}"/>

	<!-- Need to generate parsers for ALL *.g files from
whatever 
	     location. Unfortunately, the ANTLR task does not
allow
	     for multiple *.g files so we need to iterate
though
	     all *.g files -->
	<foreach target="generateparsers-antlr-subtask"
param="antlrGrammarFile">
		<path>
			<fileset dir="${mainsrc}">
				<include name="**/*.g"/>	
			</fileset>		
		</path>
	</foreach>
</target>
	
<target name="generateparsers-antlr-subtask"
if="antlrGrammarFile" description="internal helper
target">
		
	<!-- Need to calculate location in generatedmainsrc
that correspond to
	     location in src. I.e. outputDir =
${antlrGrammarFile} 
	     with substring ${srcmain] replaced with
${generatedmainsrc}.
	     Tricky using ANT - wish it could be easier.
	--> 

	<dirname property="inputDir"
file="${antlrGrammarFile}"/>
	<path id="mainSrcDirPath"
location="${basedir}${file.separator}${mainsrc}"/>
	 <pathconvert dirSep="${file.separator}"
pathsep="${file.separator}"
property="normalizedMainSrcDir"
refid="mainSrcDirPath"/>
	<path id="inputDirPath" location="${inputDir}"/>
	 <pathconvert dirSep="${file.separator}"
pathsep="${file.separator}"
property="normalizedOutputDir" refid="inputDirPath"/>
	<path id="normalizedOutputDirPath"
location="${normalizedOutputDir}"/>
	 <pathconvert dirSep="${file.separator}"
pathsep="${file.separator}" property="outputDir"
refid="normalizedOutputDirPath">
	    <map from="${normalizedMainSrcDir}"
to="${basedir}${file.separator}${generatedmainsrc}"/>
	 </pathconvert>
		
	<!--
	Would like to only run antlr task on *.g files that
	are newer than the generated java files.
Unfortunately,
	I can't make the code update property initialize
	itself correctly.
		
            <uptodate
property="checkAntlrGrammarFileChanged">
	      <srcfiles dir= "/"
includes="${antlrGrammarFile}"/>
	      <mapper type="merge" to="${outputDir}"/>
	</uptodate>
		
	<echo message="Uptodate? :
${checkAntlrGrammarFileChanged}"/>
	-->
		
	<!-- Create output dir on the fly and invoke antlr
(need to invoke antlr twice. Once for code, once for
docs). -->
	<echo message="Invoking antlr on grammar
${antlrGrammarFile} with code output to directory
${outputDir} and documentation output to
${referencedocs}"/>
	<mkdir dir="${outputDir}" />
	<antlr dir="."
	    target="${antlrGrammarFile}"
	    outputdirectory="${outputDir}"/>
	<antlr dir="." html="true"
	    target="${antlrGrammarFile}"
	    outputdirectory="${referencedocs}"/>
</target>
	
From scott at javadude.com  Sun Apr 17 08:22:02 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Apr 17 08:22:11 2005
Subject: [antlr-interest] Antlr ANT task: Seemless builds using the Antlr
	-Problems and solutions. Help appreciated!
In-Reply-To: <20050417114748.73391.qmail@web25110.mail.ukl.yahoo.com>
Message-ID: <20050417145219.4AED5290527@new.knowspam.net>

I'm working on updating the ANTLR ANT task ;)

*However*, order of .g compilation can matter, as one grammar can output
token types that another grammar needs, or there could be grammar
inheritance.

javac doesn't have this problem b/c the compiler reads "all" the java files
and compiles them as a group. ANTLR only processes a single file at a time. 

I was planning on checking mod times and adding the new options (-smap and
-plugin [for xml support]).

For each of your requests:
* mutiple .g files -- ANTLR itself doesn't support it
  I could probably do this, with the cavaet that order can bite you

* mapping source->dest paths - hmm... the task could do that...
  ANTLR itself doesn't "know" the package; it's just part of the header spec
  I'll look into this... I'd really like this meself...

* timestamps -- I want to add this to the task

* invoking twice for docs/java -- ANTLR runs with separate
  generators for each. We should be able to write a combo generator
  that we delegate to both java and docbook or html generators...
  Hmmm... If I have time, I'll take a quick poke at this, but
  it's not likely I'll have time...

I'd also like to set up some way to make "clean" easy, so we'll know which
files were generated by antlr. I'm doing this in the eclipse plugin (I added
"clean" support), but to do it for an ant build would require tracking
generated files in another file, like .antlr-generated or something. We can
then have a <antlr clean="yes"> option that removes any generated files. (We
would have to always append to the .antlr-generated file to capture all
renames and such until a clean)
 
I'm working on the ant task today, btw, so good timing ;) Then I've got to
figure out how to contribute the changes... too much fun...

Thoughts?
-- Scott


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of M C
> Sent: Sunday, April 17, 2005 7:48 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Antlr ANT task: Seemless builds 
> using the Antlr -Problems and solutions. Help appreciated!
> 
> Hi all,
> 
> This mail is about my "hard time" integrating the Antlr ANT 
> task in a seemless build enviroment. It detils some 
> solutions, some unsolved problems and a request for changes 
> in the next Antlr version.
> 
> For seemless integration I wanted to use the ANTLR task to:
> 1) Automatically pick up all *.g files in whatever
> src\** directories and generate *.java files and place them 
> in corresponding build\generatedsrc\** directories (this 
> assumes that the *.g files are placed in a sub directory 
> under the main source directory that corresponds to the 
> package the resulting java files will have when put in the 
> generatedsrc build directory. ).
> 
> 2) Generate grammar doocumentation and place it in doc directory.
> 
> 3) Only generate *.java and documentation files if the *.g 
> files have changed (timestamp of *.g files are newer than the 
> generated *.java files).
> 
> Unfortunately, unlike the javac task the antlr ant task has 
> key limitations:
> a) Does not allow for multiple *.g files.
> b) Does not provide direct support for mapping source to 
> destination paths.
> c) Does not check timestamps.
> d) Needs to be invoked twice to generate both *.java files 
> and documentation.
> 
> Despite the above limitation, I tried to use various ANT 
> extensions and complicated techniques to accomplish my goals. 
> See code below. The code is VERY complex but it does conform 
> to goals 1 and 2. However, I could not get the timestamps to 
> work. Consequently, every time I build, the ANT ANTLR task 
> generate new java code, resulting in a long cascade of 
> subsequent build actions that are uncessary when nothing has changed.
> 
> It would be really nice if the next version of Antlr would 
> provide a better ANT task that would allow for integration 
> into a seemless build enviroment.
> Meanwhile, I would welcome if anyone have ideas for improving 
> the ANT workarounds I have detailed below:
> 
> Cheers,
> Morten Christensen
> 
> ----
> 
> <target name="generateparsers" depends="init">
> 	 <echo message="Generating source code parser(s) for 
> ${ant.project.name}"/>
> 
> 	<!-- Need to generate parsers for ALL *.g files from whatever 
> 	     location. Unfortunately, the ANTLR task does not allow
> 	     for multiple *.g files so we need to iterate though
> 	     all *.g files -->
> 	<foreach target="generateparsers-antlr-subtask"
> param="antlrGrammarFile">
> 		<path>
> 			<fileset dir="${mainsrc}">
> 				<include name="**/*.g"/>	
> 			</fileset>		
> 		</path>
> 	</foreach>
> </target>
> 	
> <target name="generateparsers-antlr-subtask"
> if="antlrGrammarFile" description="internal helper target">
> 		
> 	<!-- Need to calculate location in generatedmainsrc 
> that correspond to
> 	     location in src. I.e. outputDir =
> ${antlrGrammarFile} 
> 	     with substring ${srcmain] replaced with 
> ${generatedmainsrc}.
> 	     Tricky using ANT - wish it could be easier.
> 	--> 
> 
> 	<dirname property="inputDir"
> file="${antlrGrammarFile}"/>
> 	<path id="mainSrcDirPath"
> location="${basedir}${file.separator}${mainsrc}"/>
> 	 <pathconvert dirSep="${file.separator}"
> pathsep="${file.separator}"
> property="normalizedMainSrcDir"
> refid="mainSrcDirPath"/>
> 	<path id="inputDirPath" location="${inputDir}"/>
> 	 <pathconvert dirSep="${file.separator}"
> pathsep="${file.separator}"
> property="normalizedOutputDir" refid="inputDirPath"/>
> 	<path id="normalizedOutputDirPath"
> location="${normalizedOutputDir}"/>
> 	 <pathconvert dirSep="${file.separator}"
> pathsep="${file.separator}" property="outputDir"
> refid="normalizedOutputDirPath">
> 	    <map from="${normalizedMainSrcDir}"
> to="${basedir}${file.separator}${generatedmainsrc}"/>
> 	 </pathconvert>
> 		
> 	<!--
> 	Would like to only run antlr task on *.g files that
> 	are newer than the generated java files.
> Unfortunately,
> 	I can't make the code update property initialize
> 	itself correctly.
> 		
>             <uptodate
> property="checkAntlrGrammarFileChanged">
> 	      <srcfiles dir= "/"
> includes="${antlrGrammarFile}"/>
> 	      <mapper type="merge" to="${outputDir}"/>
> 	</uptodate>
> 		
> 	<echo message="Uptodate? :
> ${checkAntlrGrammarFileChanged}"/>
> 	-->
> 		
> 	<!-- Create output dir on the fly and invoke antlr 
> (need to invoke antlr twice. Once for code, once for docs). -->
> 	<echo message="Invoking antlr on grammar 
> ${antlrGrammarFile} with code output to directory 
> ${outputDir} and documentation output to ${referencedocs}"/>
> 	<mkdir dir="${outputDir}" />
> 	<antlr dir="."
> 	    target="${antlrGrammarFile}"
> 	    outputdirectory="${outputDir}"/>
> 	<antlr dir="." html="true"
> 	    target="${antlrGrammarFile}"
> 	    outputdirectory="${referencedocs}"/>
> </target>
> 	
> 




From mortench2004 at yahoo.dk  Sun Apr 17 09:33:56 2005
From: mortench2004 at yahoo.dk (M C)
Date: Sun Apr 17 09:34:00 2005
Subject: [antlr-interest] Antlr ANT task: Seemless builds using the Antlr
	-Problems and solutions. Help appreciated!
In-Reply-To: <20050417145219.4AED5290527@new.knowspam.net>
Message-ID: <20050417163357.2725.qmail@web25110.mail.ukl.yahoo.com>

Hi Scott,

Thanks for your quick and detailed response. First of
all kudos to you for working the ANT task and the cool
eclipse plugin. Good build and IDE support are very
necessary but sadly often overlooked in open source
projects. Great this is not the case for Antlr!

I have some comments to your mail below:

(*) Looking forward for the update. Was afraid the
plugin project was lost. I hope it will suport eclipse
3.1M6+

 --- Scott Stanchfield <scott@javadude.com> skrev: 
> I'm working on updating the ANTLR ANT task ;)
> 
> *However*, order of .g compilation can matter, as
> one grammar can output
> token types that another grammar needs, or there
> could be grammar
> inheritance.

Point taken. Maybe this would only be recommended in
case compilation order does NOT matter. (Unless antlr
is changed to process the *.g files in multiple passes
which is probably too much implementation work
compared to the benefit).

> javac doesn't have this problem b/c the compiler
> reads "all" the java files
> and compiles them as a group. ANTLR only processes a
> single file at a time. 

My ANT script does this be calling the ANTLR task
multiple times. However this is very complicated and
requires the exstra ant-contrib library. Would prefer
something that is simple and that I can use with a
standard ANT 1.6.2+ installlation.
 
> I was planning on checking mod times and adding the
> new options (-smap and
> -plugin [for xml support]).

Great!
 
> For each of your requests:
> * mutiple .g files -- ANTLR itself doesn't support
> it
>   I could probably do this, with the cavaet that
> order can bite you

That would be fine!

> * mapping source->dest paths - hmm... the task could
> do that...
>   ANTLR itself doesn't "know" the package; it's just
> part of the header spec
>   I'll look into this... I'd really like this
> meself...

Would be really nice. It was VERY hard to do this in
my ANT script and I am not sure it works on all
platforms.
 
> * timestamps -- I want to add this to the task

Again, super. I look forward to that. It will speed up
build times a lot (by removing all the unnecessary
cascade builds).
 
> * invoking twice for docs/java -- ANTLR runs with
> separate
>   generators for each. We should be able to write a
> combo generator
>   that we delegate to both java and docbook or html
> generators...
>   Hmmm... If I have time, I'll take a quick poke at
> this, but
>   it's not likely I'll have time...

Yea nice, but least important. I can invoke the task
twice.

> I'd also like to set up some way to make "clean"
> easy, so we'll know which
> files were generated by antlr. I'm doing this in the
> eclipse plugin (I added
> "clean" support), but to do it for an ant build
> would require tracking
> generated files in another file, like
> .antlr-generated or something. We can
> then have a <antlr clean="yes"> option that removes
> any generated files. (We
> would have to always append to the .antlr-generated
> file to capture all
> renames and such until a clean)

Not sure that I understand this. Can't the files that
was generated be derived by looking at the *.g files
and the arguments to the ANT task (assuming these do
not change)? I generate java files to a special
build\generatedsrc directory. I have no problem
cleaning that. As a matter of fact I am not sure I
like to have additional files generated to keep track
of things if it can be avoided.
  
> I'm working on the ant task today, btw, so good
> timing ;)

Luck I guess. I am very, very glad you are working on
this 

:-)

 Then I've got to
> figure out how to contribute the changes... too much
> fun...

> Thoughts?

Hope the comments are useful for you.

Cheers,
Morten
From scott at javadude.com  Sun Apr 17 11:02:42 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Apr 17 11:02:35 2005
Subject: [antlr-interest] Antlr ANT task: Seemless builds using the Antlr
	-Problems and solutions. Help appreciated!
In-Reply-To: <20050417163357.2725.qmail@web25110.mail.ukl.yahoo.com>
Message-ID: <20050417173240.295CF29022D@new.knowspam.net>

> (*) Looking forward for the update. Was afraid the plugin 
> project was lost. I hope it will suport eclipse 3.1M6+

It supports 3.1M5, 3.1M6 and 3.0.x right now. The 3.1 support is better
though, as it takes care of classpath setup automatically ;)

> > *However*, order of .g compilation can matter, as one grammar can 
> > output token types that another grammar needs, or there could be 
> > grammar inheritance.
> 
> Point taken. Maybe this would only be recommended in case 
> compilation order does NOT matter. (Unless antlr is changed 
> to process the *.g files in multiple passes which is probably 
> too much implementation work compared to the benefit).

I think most folks only have a few antlr files and probably not with cross
dependencies, so it could be done. Don't know that I'll have time for it,
though.


> > I'd also like to set up some way to make "clean"
> > easy, so we'll know which
> > files were generated by antlr. I'm doing this in the 
> eclipse plugin (I 
> > added "clean" support), but to do it for an ant build would require 
> > tracking generated files in another file, like .antlr-generated or 
> > something. We can then have a <antlr clean="yes"> option 
> that removes 
> > any generated files. (We would have to always append to the 
> > .antlr-generated file to capture all renames and such until a clean)
> 
> Not sure that I understand this. Can't the files that was 
> generated be derived by looking at the *.g files and the 
> arguments to the ANT task (assuming these do not change)? I 
> generate java files to a special build\generatedsrc 
> directory. I have no problem cleaning that. As a matter of 
> fact I am not sure I like to have additional files generated 
> to keep track of things if it can be avoided.

two problems
* the name of the grammar could change (I tend to do this a few times when I
first start a project)
  we would lose the names of the old generated files
* the generated files depend on the code generator and output options - we'd
have to rerun antlr to determine these

For eclipse, the plugin adds some persistent properties to the generated
files, and we use these to determine what to kill.

> Hope the comments are useful for you.

Definitely!

Later,
-- Scott





From prashant.deva at gmail.com  Sun Apr 17 11:40:48 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Apr 17 11:40:50 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
Message-ID: <41fed8f805041711404675ea6e@mail.gmail.com>

What exactly do you mean by a 'follow set'?

In the doc it says that, when antlr parsers encounter an error they
look up tokens until they find one in the 'follow set' of the rule.

So what exaclty does the parser look for when it encounters an error?

PRASHANT
From monty at codetransform.com  Sun Apr 17 09:00:33 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Sun Apr 17 12:01:05 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
In-Reply-To: <41fed8f805041711404675ea6e@mail.gmail.com>
References: <41fed8f805041711404675ea6e@mail.gmail.com>
Message-ID: <42628821.1030004@codetransform.com>

Prashant Deva wrote:
> What exactly do you mean by a 'follow set'?

Follow set is what tokens may follow this in the stream, i.e. the 
lookahead at that point of the production.

> In the doc it says that, when antlr parsers encounter an error they
> look up tokens until they find one in the 'follow set' of the rule.

So the idea is 'hey that doesn't belong here, so I'll just skip ahead in 
the token stream until I see a token that the calling rule might match.' 
  So that when the errorneous rule returns the calling rule might be 
able to continue where it left off.

Note that in ANTLR 2, the follow set for a rule is the union of the 
lookahead following every call to the rule.  ANTLR 2 doesn't distinguish 
follow sets based on the caller.

Hey Ter, this may be able to improve in ANTLR 3 since you actually know 
the follow set specific to the calling rule.  Or maybe you figured that 
out already?  Wouldn't suprise me ;)

> So what exaclty does the parser look for when it encounters an error?
> 

Hopefully I've answered that by now.

Monty
From atripp at comcast.net  Sun Apr 17 12:44:55 2005
From: atripp at comcast.net (Andy Tripp)
Date: Sun Apr 17 12:44:57 2005
Subject: [antlr-interest] Language-Neutral Actions
Message-ID: <4262BCB7.8000105@comcast.net>

>
>
>I think what may work is to do untyped parameters and return values, and
>when generating code we could specify a language mapping for the types.
>

IDL is a standard way to define a language-neutral interface.
To quote from this http://www.omg.org/gettingstarted/omg_idl.htm intro:

> IDL is not a programming language - it's great for defining 
> interfaces, but it doesn't have the constructs you'd need to write a 
> program.  To do this, OMG has defined mappings from IDL to just about 
> every major programming language: C, C++, Java, Smalltalk, COBOL, Ada, 
> Lisp, PL/1, Python, and IDLscript have standard mappings.

So you could have people embed IDL as their action code, and then ANTLR 
would generate whichever
target language the user wants. The advantages of using IDL are that IDL 
is already well defined and widely used,
the tools already exist for translating it to all the popular languages, 
and the mappings between the
IDL and what gets generated is very clear and well documented. One 
disadvantage (mentioned
in the quote above) is that IDL doesn't let you really write general 
code, just interfaces really.
But I think that's really what you are getting at when you talked about 
just calling functions to
do all the work, rather than embedding lots of code.

And of course, you can just use IDL for exactly what you want: 
generating language-specific
code from language-neutral code. You don't have to use CORBA or anything.

Say I want to have this action code in my ANTLR grammar:
     doSomething(token);
Somewhere, I'd need to write my language-neutral IDL definition of the 
method:

struct Token {
int type;
string text;
...
}
void doSomething(in Token token);

When generating my code, ANTLR would just run the IDL compiler for whatever
the target language is. That IDL compiler would generate the "glue" code 
that
allows the.....uh oh....wait a minute...never mind. The ANTLR-generated code
is already in the target language and on the same machine as the called 
code,
so you don't need that. I'm just rambling, and sometimes I end up at a 
dead end :)

What you need is the thing that IDL clearly is not: a simple 
language-neutral
programming language, not a simple language-neutral interface definition 
language.
Arg.

I suppose maybe the best solution is what you said 
originally...essentially limit
the action code to function calls, and gloss over the slight differences
in semantics between languages (e.g. in C, a pionter to a struct is 
passed, while in
Java, an Object reference is passed).

To summarize, I have nothing constructive to say on this subject :)

Andy


From rprememail at yahoo.com  Sun Apr 17 13:52:56 2005
From: rprememail at yahoo.com (Premkumar Rathanavelu)
Date: Sun Apr 17 13:52:58 2005
Subject: [antlr-interest] Using ANTLR : Parsing in an innoviative way - Need
	help 
Message-ID: <20050417205256.73573.qmail@web80903.mail.scd.yahoo.com>

Hello to Everyone.,
     A short intro- I am basically an Electronics and Communication
 engineer entered in to the world of softwares and more precisely
 few weeks back had finished my grammar file(ANTLR) for recognizing 
C/C++ preprocessor contained source codes as a part of my Master 
Thesis in which the theme is on parsing and measurement(metrics).
     To be little new i want to use ANTLR in the field of hardware/software
 oriented electronic devices by applying some parsing techniques
 to handle the product varieties/versions.
 
If anybody has some ideas and suggestions, please reply me and i'll 
be thankful to you.
 
Thanking you.,
Prem 

		
---------------------------------
Do you Yahoo!?
 Yahoo! Mail - You care about security. So do we.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050417/45f283ea/attachment.html
From parrt at cs.usfca.edu  Sun Apr 17 14:01:04 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr 17 14:00:54 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
In-Reply-To: <42628821.1030004@codetransform.com>
References: <41fed8f805041711404675ea6e@mail.gmail.com>
	<42628821.1030004@codetransform.com>
Message-ID: <2a3a36be38cf67dceddba4094a12db3a@cs.usfca.edu>


On Apr 17, 2005, at 9:00 AM, Monty Zukowski wrote:
>> In the doc it says that, when antlr parsers encounter an error they
>> look up tokens until they find one in the 'follow set' of the rule.
>
> So the idea is 'hey that doesn't belong here, so I'll just skip ahead 
> in the token stream until I see a token that the calling rule might 
> match.'  So that when the errorneous rule returns the calling rule 
> might be able to continue where it left off.
>
> Note that in ANTLR 2, the follow set for a rule is the union of the 
> lookahead following every call to the rule.  ANTLR 2 doesn't 
> distinguish follow sets based on the caller.
>
> Hey Ter, this may be able to improve in ANTLR 3 since you actually 
> know the follow set specific to the calling rule.  Or maybe you 
> figured that out already?  Wouldn't suprise me ;)

ANTLR v3 dynamically computes precise FOLLOW(r) for rule r when an 
error occurs in r. :)  It does this for excellent error recovery.  I 
use something like Josef Grosch's work in CoCo.

The FOLLOW set used in theory discussions is always the precise one: 
the set of all tokens that can follow references to a rule in all valid 
contexts; i.e., it's the FIRST of all viable suffixes of r.  er 
something like that...theory ain't my strong suit...just hacking :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



From antlr at shmuelhome.mine.nu  Sun Apr 17 14:11:45 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Sun Apr 17 14:12:06 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
In-Reply-To: <41fed8f805041711404675ea6e@mail.gmail.com>
References: <41fed8f805041711404675ea6e@mail.gmail.com>
Message-ID: <4262D111.9010200@shmuelhome.mine.nu>

Prashant Deva wrote:
> What exactly do you mean by a 'follow set'?
> 
> In the doc it says that, when antlr parsers encounter an error they
> look up tokens until they find one in the 'follow set' of the rule.
> 
> So what exaclty does the parser look for when it encounters an error?
> 
> PRASHANT
> 
> 
While we are on the subject of "follow set", is there a tool that will 
translate a follow set to the characters that it represents? One of the 
strong points of Antlr is that it is possible to understand the code it 
generates. This would be enhanced if the follow and match sets were 
easily translated into human terms.



-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.308 / Virus Database: 266.9.15 - Release Date: 4/16/2005



-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.308 / Virus Database: 266.9.15 - Release Date: 4/16/2005

From octavian_nita_2004 at yahoo.com  Sun Apr 17 12:49:54 2005
From: octavian_nita_2004 at yahoo.com (Octavian Nita)
Date: Sun Apr 17 14:37:49 2005
Subject: [antlr-interest] non-determinism... please help...
Message-ID: <20050417194954.49513.qmail@web54205.mail.yahoo.com>

Hello. My name is Tavi (from Romania) and I'm (kind of) new to ANTLR.
I'm currently trying to write a grammar for the Lua language and I'm facing some problems.
 
First, I'd like to know what's wrong with this slice:
 
var : ID
     | prefix ( ( '[' exp ']' ) | ( '.' ID ) )
     ;
 
prefix : ( ID | ( '(' exp ')' ) ) (prefix1)* /* (HERE I GET A NON-DETERMINISM WARNING
BETWEEN THE START CHARS OF prefix1) */
         ;
 
prefix1 : '[' exp ']'
          : '.' ID
          : args
          : ':' ID args
          ;
 
funCall : prefix ( args | (':' ID args) )
           ;
 
args : '(' (expList)? ')'
       : '{' (expList)? '}'
       : string
       ;
 
Somewhere along the way, I also get to use
var and funCall as alternatives and there is also a problem that I understand
but I don't know how to solve (they both begin with prefix) - maybe some
predicates...
 
Thanks a lot, anyway...
 


		
---------------------------------
Do you Yahoo!?
 Plan great trips with Yahoo! Travel: Now over 17,000 guides!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050417/2a11c908/attachment.html
From ewbank at gmail.com  Sun Apr 17 14:44:04 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Apr 17 14:44:06 2005
Subject: [antlr-interest] non-determinism... please help...
In-Reply-To: <20050417194954.49513.qmail@web54205.mail.yahoo.com>
References: <20050417194954.49513.qmail@web54205.mail.yahoo.com>
Message-ID: <dd3a065f05041714442356cd0f@mail.gmail.com>

Looking just at /prefix1/, the second and fourth alternatives need to
be collapsed - they are currently ambiguous - so that ANTLR can digest
them:

  prefix1 : '[' exp ']' 
            : '.' ID ( args )?
            : args 
            ; 

Once this is cleared, there are also problems in the interactions
between /var/ and /prefix1/...

Consider the input "ID[exp]"...  When the "[" is encountered; is it
the "[" in prefix1, or is it the "[" is the original var definition
(and collapse prefix1 to null).

Likewise for the input "ID . ID"... the ". ID" can be either a
prefix1, or the variable match.

Hope this helps,
- Bryan

> var : ID 
>      | prefix ( ( '[' exp ']' ) | ( '.' ID ) ) 
>      ; 
>   
> prefix : ( ID | ( '(' exp ')' ) ) (prefix1)*;
>
> prefix1 : '[' exp ']' 
>           : '.' ID 
>           : args 
>           : ':' ID args 
>           ;
From scott at javadude.com  Sun Apr 17 19:10:40 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Apr 17 19:10:32 2005
Subject: [antlr-interest] Antlr ANT task: Seemless builds using the
	Antlr-Problems and solutions. Help appreciated!
In-Reply-To: <20050417145219.4AED5290527@new.knowspam.net>
Message-ID: <20050418014030.B5DE8290860@new.knowspam.net>

After much messing with the ant task today...

It looks like the timestamps in the ant 1.6.2 version of the ant task work
fine. I'm not seeing any problems with it.

Which version of ant were you using? If it seems to build when the target
files weren't modified, please run ant with -verbose and check the output
for an explanation of why it's re-running.

I added the new options for smap and xml support, and they seem to work
pretty well.

Almost ready to release...

Later,
-- Scott




From scott at javadude.com  Sun Apr 17 19:15:56 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Apr 17 19:15:50 2005
Subject: [antlr-interest] Separate ANTLR jars
Message-ID: <20050418014546.27265290866@new.knowspam.net>

I've got an ant build script that generates separate jars for runtime and
build time.

If any of y'all would be willing to try running with these (a pre-2.7.6
release) to see if I've missed anything, I'd really appreciate it. Please
let me know and I'll send the rt jars to you. I'm just looking to see if
existing parsers/lexers will still work with the rt jars. I'm bound to have
missed something in the jars.

I've got the following jars:

* antlr.jar - the whole thing, with debug symbols on
* antlr-nodebug.jar - the whole thing, without debug symbols on
* antlr-rt.jar - all runtime classes (no debug)
* antlr-rt-parser.jar - runtime classes for parsers
  (no scanner/tree parser classes, no debug)

I'd like to know if these are set up properly, so any quick test anyone can
give would be greatly appreciated!

Thanks!
-- Scott




From monty at codetransform.com  Sun Apr 17 21:18:14 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Sun Apr 17 21:16:20 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
In-Reply-To: <4262D111.9010200@shmuelhome.mine.nu>
References: <41fed8f805041711404675ea6e@mail.gmail.com>
	<4262D111.9010200@shmuelhome.mine.nu>
Message-ID: <a640406c4466b229c0608101e12fcc83@codetransform.com>

On Apr 17, 2005, at 2:11 PM, shmuel siegel wrote:

> Prashant Deva wrote:
>> What exactly do you mean by a 'follow set'?
>> In the doc it says that, when antlr parsers encounter an error they
>> look up tokens until they find one in the 'follow set' of the rule.
>> So what exaclty does the parser look for when it encounters an error?
>> PRASHANT
> While we are on the subject of "follow set", is there a tool that will 
> translate a follow set to the characters that it represents? One of 
> the strong points of Antlr is that it is possible to understand the 
> code it generates. This would be enhanced if the follow and match sets 
> were easily translated into human terms.
>
>

Well, if you set the option codeGenBitsetThreshold very high, like 
999999, then you will see all the token names instead of the bitset 
objects.

Monty

From demakov at ispras.ru  Sun Apr 17 23:41:43 2005
From: demakov at ispras.ru (Alexey Demakov)
Date: Sun Apr 17 23:41:48 2005
Subject: [antlr-interest] Language-Neutral Actions
References: <20050415130752.6173E290334@new.knowspam.net>
Message-ID: <009701c543e1$af796bc0$8cc79553@marlboro>

From: "Scott Stanchfield" <scott@javadude.com>

> I'd really like to see language-neutral actions in ANTLR 3.
> 
> The basic idea is that all action code is simply calls to behavior methods
> in some other object.
>
> Depending on what target language is specified, different "glue" code is
> formed to contact that other object.
> 
> This would allow a grammar to be targeted to pretty much any language.
> 
> Some old parser generators I used did things like
> 
>   foo: fee fie fo @doSomething(fee,fie,fo);
> 
> which would allow you to target it to multiple languages. The parser
> generator would change @doSomething(...) into whatever was appropriate for
> the target language.
> 
> I don't know that we'd want to use the same syntax (I like the {...} for
> actions), but we could have a grammar option that specifies language-netrual
> actions and all {...} code is assumed neutral.

The main question is: how to bind action code to some place in grammar?
There are too many places to write @doSomething(fee,fie,fo) to provide
all possible callbacks - who knows what will be enough for all possible target languages?
Other way - to have aspect-like notation to specify certain place in grammar.
Not very easy to maintain...

What is the main purposes of action code in grammar? I think it is
1. Tree building.
2. Semantic predicates to handle difficult cases.
(If I not miss something important) All other code should be separated from grammar
for better decomposition and easer maintenance.
So, for the first case ANTLR already provides language-independed notation.
And I expect, that in ANTLR 3 will be improved interface to interact with tree factories
so I can use heterohenous trees :) We've discussed such interface here some months ago.
The second case, semantic predicates, in my opinion is (and should be) rare case,
the last way to use. And for them is possible to specify language-independed action
like @doSomething(...) or even as
options { language = java   } { /* java code   */ }
options { language = csharp } { /* csharp code */ }
The last way can be used and for all other places of action code,
but it can make grammar file to large and unreadable.

Regards,
Alexey

-----
Alexey Demakov
TreeDL: Tree Description Language: http://treedl.sourceforge.net
RedVerst Group: http://www.unitesk.com


From octavian_nita_2004 at yahoo.com  Mon Apr 18 01:04:12 2005
From: octavian_nita_2004 at yahoo.com (Octavian Nita)
Date: Mon Apr 18 01:04:15 2005
Subject: [antlr-interest] weird rule...
Message-ID: <20050418080412.21719.qmail@web54205.mail.yahoo.com>

Hello everyone, again. Thanks for the help so far, but I have restricted my problems (hopefully) to the following:
 
How can I write something like
 
suf : (x | y)* ( (x '=') | y ) ;
 
so that ANTLR will be ok with?
Thanks.

		
---------------------------------
Do you Yahoo!?
 Plan great trips with Yahoo! Travel: Now over 17,000 guides!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050418/3964ef1e/attachment.html
From ewbank at gmail.com  Mon Apr 18 02:32:19 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Apr 18 02:32:22 2005
Subject: [antlr-interest] non-determinism... please help...
In-Reply-To: <dd3a065f05041714442356cd0f@mail.gmail.com>
References: <20050417194954.49513.qmail@web54205.mail.yahoo.com>
	<dd3a065f05041714442356cd0f@mail.gmail.com>
Message-ID: <dd3a065f050418023238ad45ce@mail.gmail.com>

Tavi gently pointed out that I misread his grammer.  Seems my older
eyes could not tell the difference between /dot/ and /colon/ in single
quotes.  Please disregard the discussion of collapsing prefix1 in my
previous email.

Off to the eye doctor for new glasses ;-)

- Bryan

On 4/17/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> Looking just at /prefix1/, the second and fourth alternatives need to
> be collapsed - they are currently ambiguous - so that ANTLR can digest
> them:
> 
>   prefix1 : '[' exp ']'
>             : '.' ID ( args )?
>             : args
>             ;
> 
> > prefix1 : '[' exp ']'
> >           : '.' ID
> >           : args
> >           : ':' ID args
> >           ;
>
From scott at javadude.com  Mon Apr 18 04:10:50 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 04:10:36 2005
Subject: [antlr-interest] Language-Neutral Actions
In-Reply-To: <009701c543e1$af796bc0$8cc79553@marlboro>
Message-ID: <20050418104025.99CAB290587@new.knowspam.net>

(I wasn't recommending the "@" notation - just an example from some old
parser generator...)

> What is the main purposes of action code in grammar? I think 
> it is 1. Tree building.

Not everyone writes trees. (I have yet to write one other than for my
compiler class, and that was with PCCTS and I did my own custom trees...)
My main uses of ANTLR:
* small expression parsers that are part of bigger tools, using action code
to perform evaluations
* xml readers, building som data structure (not ANTLR trees)

I think trees are useful if there are intermediate steps to perform, like
optimization, or you're writing something that has multiple language specs
but a common IR that you want to process. For anything else, I think its an
unnecessary middle structure.

[Now if "trees" could be any old JavaBean structure, as opposed to a fixed
AST interface definition, I'd be very interested, as you should be able to
build any data structure you want... But that's another concept...]


I usually have a "behavior" interface (a strategy) that has methods that are
called in the action code.

The only other code I typically have in actions is something to "gather"
stuff in loops. For example:

functionCall
  {
      List args = new ArrayList();
      Object arg;
  }
  : id:IDENT LPAREN
    ( arg=value { args.add(arg); } )*
    RPAREN
    { behavior.doFunctionCall(id, args); }
  ;


I could use the behavior to gather args (making it stateful):

functionCall
  {
      Object arg;
  }
  : id:IDENT LPAREN
    ( arg=value { behavior.addArg(arg); } )*
    RPAREN
    { behavior.doFunctionCall(id); }
  ;

then with the new support for named rule calls (I might be off on the
syntax):

functionCall
  : IDENT LPAREN
    ( value { behavior.addArg($value); } )*
    RPAREN
    { behavior.doFunctionCall($IDENT); }
  ;


and we could abstract it to have "behavior" implied:

options {
  languageNeutral=true;
}
....

functionCall
  : IDENT LPAREN
    ( value { addArg($value); } )*
    RPAREN
    { doFunctionCall($IDENT); }
  ;


though I'd like to do something cleaner with the list of values. It would be
cool to be able to somehow label a (...)* to indicate that we want to
capture it as a "list":

options {
  languageNeutral=true;
}
....

functionCall
  : IDENT LPAREN args:( value )* RPAREN
    { doFunctionCall($IDENT, args); }
  ;

or something like that. Nice and clean and readable ;)


> 2. Semantic predicates to handle difficult cases.
> (If I not miss something important) All other code should be 
> separated from grammar for better decomposition and easer maintenance.

Definitely -- there shouldn't be logic in there...

Later,
-- Scott




From scott at javadude.com  Mon Apr 18 04:26:21 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 04:26:04 2005
Subject: [antlr-interest] On trees and JavaBeans part 1: the AST interface
Message-ID: <20050418105556.01B5A290251@new.knowspam.net>

That other note got me thinking about something I wanted to do...

The problem with ANTLR tree nodes (at least in ANTLR 2.x) is that each node
must implement an interface. To use non-ANTLR objects as tree nodes, you
must adapt every single object, which creates a lot of overhead.

For example, suppose I wanted to use an ANTLR tree parser to explore an
Eclipse-generated Java AST. I would have to write an AST adapter that I wrap
around each Eclipse node, and when the adapter is asked for first child, I'd
return a wrapped "first child", and when asked for "nextSibling" I'd return
a wrapped next child. Very inefficient...


Instead of doing trees as an AST interface per node, we should do them more
like Swing does its TreeModel.

Swing has a TreeModel interface that represents "an entire tree". It has
methods like

   Object getRoot();
   Object getChild(Object parent, int index);
   int getChildCount(Object parent);
   ...

The JTree component asks whatever implements this interface for the
relationships so it can determine what to render on the screen. Incredibly
flexible.

If the new tree parsers used something like this, *a tree parser could walk
**any** data structure*.

For the Eclipse AST example, I could write a single "ASTModel"
implementation that interprets Eclipse's AST nodes. The tree parser
implementation would ask

   model.getChild(parent, num)

instead of

   parent.getChild(num)


Swing has a default implementation that uses a TreeNode interface for each
node. The same could be done for ANTLR trees, and the default ast model
could work with AST nodes exactly as today. The default model basically does
things like

  public Object getChild(Object parent, int num) {
    return ((AST)parent).getChild(num);
  }


This would allow a very efficient adapter mechanism for existing data
structures, allowing ANTLR tree parsers to be used to easily explore DOMs,
non-ANTLR ASTs, and pretty much any other data structure.


More in part 2...

-- Scott




From scott at javadude.com  Mon Apr 18 04:51:55 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 04:52:01 2005
Subject: [antlr-interest] ANTLR 3.x license?
Message-ID: <20050418112152.A5B1A290344@new.knowspam.net>

What's the current thinking on the ANTLR 3.x license? Personally I really
like CPL (ala Eclipse)...

Let's avoid the viral stuff, shall we?
-- Scott




From antlr at eduard-ralph.de  Mon Apr 18 05:18:39 2005
From: antlr at eduard-ralph.de (Eduard Ralph)
Date: Mon Apr 18 05:18:47 2005
Subject: AW: [antlr-interest] ANTLR 3.x license?
In-Reply-To: <20050418112152.A5B1A290344@new.knowspam.net>
Message-ID: <20050418121841.F0FFD400AFE@p15166426.pureserver.info>

In principle anything that says "do what you like with it, everything is
your own fault" is fine with me (in case somebody cares for my opinion). Is
there any reason to change from the one used in the 2.x tree?

Eduard Ralph


-----Urspr?ngliche Nachricht-----
Von: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] Im Auftrag von Scott Stanchfield
Gesendet: Montag, 18. April 2005 13:52
An: antlr-interest@antlr.org
Betreff: [antlr-interest] ANTLR 3.x license?

What's the current thinking on the ANTLR 3.x license? Personally I really
like CPL (ala Eclipse)...

Let's avoid the viral stuff, shall we?
-- Scott





From scott at javadude.com  Mon Apr 18 05:21:55 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 05:22:00 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
Message-ID: <20050418115151.84B4A2905DA@new.knowspam.net>

(Please read the "part 1, interfaces, first)

[I forgot in part 1 to mention how we get "token" values: the ast model
would define
    int getTokenIdFor(Object node);
    String getTextFor(Object node);
 that would return the parts of a token for any given node. It could just
return a Token, but that would require the model to create Token objects for
each real object, which may not be necessary.]


Once we can use any data structure for tree parsing, for tree creation, it
would be useful to be able to create *any* data structure. Factories are the
right approach here, and are pretty close to being exactly what we need.

First, ASTFactory must be an interface. Then, abstract away "AST" from the
methods. For example:

  void addChild(Object parent, Object child)
  Object create(int type)
  Object create(int type, String text)
  Object create(int type, String text, String className)
  ...

Poof.

Using the existing ANTLR tree support and only a slight bit of abstraction,
we can now:
* create any data structure
* walk any data structure

ANTLR becomes the ultimate tool for everything ;)  [Not really of course,
but tree parsers become much easier to use and therefore more useful, and
parsing to build data structures becomes easy as well]


Next to JavaBeans, making it all even more powerful...


With a little syntactic sugar, we can have the grammar explicitly specify
which properties of a bean to set or read.


The trouble with what I've said so far is that things are positional. The
only way to determine what to parse or build is by the order of adds or the
index when asking for a child.


What if we used labels that were javabean property names and had a "bean
mode"? (Note: this would work for any language that we can create "get" and
"set" methods for, not just java!)


  options {
    beanMode = true;
  }

  person creates Person
    : name:IDENT phone:phoneNumber address:address
    ;

  address creates Address
    : street:IDENT city:IDENT COMMA! state:IDENT zip:INTEGER
    ;


While this needs a little syntactic help, the idea is that the "creates"
clause states what kind of object to create, and the labels specify which
properties to assign in the bean being created.
If the property is a token, we just set the token. If it's a string, we just
set the token text. We'd probably want some special cases for a few other
data types as well. Primitive conversions are simple string conversions.

Poof - no action code required to create a data structure based on set
methods and no-arg constructors!
(We don't really need the "!" in the above example; we could ignore any term
without a label)

We'd also need "add" support as well as get/set. (Note here we *need* the
parens for the * closure...)


  person creates Person
    : name:IDENT ... 
      ( child:child )*
    ;

Assuming there's an addChild method, it would be called each time through
the loop. If there were only a setChild, it would be overwritten each time
through the loop. We could add some sugar here to ensure an add:

  person creates Person
    : name:IDENT ... 
      ( add:child:child )*
    ;

(ewww)

But I don't think that's necessary.


This of course assumes that subrules all contribute to the rule's object
being built. To build other objects, a separate top-level rule must be
defined. (This is the way my XML parsing support works, and it seems peachy
so far).


[For "bean walking", this is an entirely new ballgame, and I haven't
finished thinking through it. Current tree parsers are positional. Instead,
the new type of tree parser could check properties instead of "next child".
I need to chew on this a bit more to get a good example before I propose
it...]



Thoughts?
-- Scott




From mail at martin-probst.com  Mon Apr 18 07:54:27 2005
From: mail at martin-probst.com (Martin Probst)
Date: Mon Apr 18 07:54:32 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <20050418115151.84B4A2905DA@new.knowspam.net>
Message-ID: <20050418145429.C8B04DC75F@www.antlr.org>

Hi,

Interesting posts.

> [For "bean walking", this is an entirely new ballgame, and I 
> haven't finished thinking through it. Current tree parsers 
> are positional. Instead, the new type of tree parser could 
> check properties instead of "next child".
> I need to chew on this a bit more to get a good example 
> before I propose it...]

Did you take a look at Apache JXPath? It uses an XPathy language to query
object graphs. Afaik it does this by using reflection, but this is of course
not necessary in ANTLR. 

E.g. "foo/bar" looks (from the current node) for a property named "foo", and
within that for a "bar". XPath is quite a nice language for
querying/traversing trees and its probably already quite familiar to many
people.

Regards,
Martin

From gudnabrsam at yahoo.com  Mon Apr 18 08:04:54 2005
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Apr 18 08:04:58 2005
Subject: [antlr-interest] Antlr ANT task: Seemless builds using the Antlr
	-Problems and solutions. Help appreciated!
In-Reply-To: <20050417145219.4AED5290527@new.knowspam.net>
Message-ID: <20050418150454.62348.qmail@web30910.mail.mud.yahoo.com>


--- Scott Stanchfield <scott@javadude.com> wrote:

> I'm working on updating the ANTLR ANT task ;)
> 
[SNIP]
> I'd also like to set up some way to make "clean"
> easy, so we'll know which
> files were generated by antlr. I'm doing this in the
> eclipse plugin (I added
> "clean" support), but to do it for an ant build
> would require tracking
> generated files in another file, like
> .antlr-generated or something. We can
> then have a <antlr clean="yes"> option that removes
> any generated files. (We
> would have to always append to the .antlr-generated
> file to capture all
> renames and such until a clean)

Why don't you create an antlr FileMapper?  This mapper
could parse a grammar file to determine the output
file.  So to do a clean you could use pathconvert with
a mapper (since Ant 1.6.2) to help you generate the
list of output files, convert those to a fileset, and
delete.

>  
> I'm working on the ant task today, btw, so good
> timing ;) Then I've got to
> figure out how to contribute the changes... too much
> fun...

Open an RFE in Ant's bugzilla and I will be watching
for it.

-Matt

> 
> Thoughts?
> -- Scott
> 



		
__________________________________ 
Do you Yahoo!? 
Plan great trips with Yahoo! Travel: Now over 17,000 guides!
http://travel.yahoo.com/p-travelguide
From parrt at cs.usfca.edu  Mon Apr 18 09:00:20 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 18 09:00:49 2005
Subject: [antlr-interest] ANTLR 3.x license?
In-Reply-To: <20050418112152.A5B1A290344@new.knowspam.net>
References: <20050418112152.A5B1A290344@new.knowspam.net>
Message-ID: <1b2d99d2fefcd20895c465aadf6a4702@cs.usfca.edu>


On Apr 18, 2005, at 4:51 AM, Scott Stanchfield wrote:

> What's the current thinking on the ANTLR 3.x license? Personally I 
> really
> like CPL (ala Eclipse)...
>
> Let's avoid the viral stuff, shall we?

Hi. :)  We went through this a while back.  BSD it will be. :)

Ter



From jbb at acm.org  Mon Apr 18 10:08:57 2005
From: jbb at acm.org (John B. Brodie)
Date: Mon Apr 18 10:09:43 2005
Subject: [antlr-interest] weird rule...
In-Reply-To: <20050418080412.21719.qmail@web54205.mail.yahoo.com> (message
	from Octavian Nita on Mon, 18 Apr 2005 01:04:12 -0700 (PDT))
References: <20050418080412.21719.qmail@web54205.mail.yahoo.com>
Message-ID: <E1DNZk1-00037D-00@gecko>

Greetings!

On Mon, 18 Apr 2005 01:04:12 -0700 (PDT), Octavian Nita wrote:
>
>How can I write something like
>
>suf : (x | y)* ( (x '=') | y ) ;
>
>so that ANTLR will be ok with?
>

The following seems to do the trick, but is probably way too
complex. Can't think of any other way off hand.

This does run through the antlr.Tool without complaint, but I did not
actually try parse any test sentences.

Hope this helps...

-----begin test.g-----cut here-----cut here-----cut here-----
class testParser extends Parser;

suf :
	( x ( must_end_with_x )? z ) 
    |   ( y ( must_end_with_y )? )
;

must_end_with_x : ( y )* x ( must_end_with_x )? ;

must_end_with_y : ( x )* y ( must_end_with_y )? ;

x : X ;
y : Y ;
z : Z ;
-----end test.g-----cut here-----cut here-----cut here-----

   -jbb
From jbb at acm.org  Mon Apr 18 10:27:42 2005
From: jbb at acm.org (John B. Brodie)
Date: Mon Apr 18 10:28:25 2005
Subject: [antlr-interest] weird rule...
In-Reply-To: <E1DNZk1-00037D-00@gecko> (jbb@acm.org)
References: <20050418080412.21719.qmail@web54205.mail.yahoo.com>
	<E1DNZk1-00037D-00@gecko>
Message-ID: <E1DNa29-00073O-00@gecko>

Greetings again!

My previous post on this subject was wrong. Sorry about that.

In my previous post, I wrote:
>On Mon, 18 Apr 2005 01:04:12 -0700 (PDT), Octavian Nita wrote:
>>
>>How can I write something like
>>
>>suf : (x | y)* ( (x '=') | y ) ;
>>
>>so that ANTLR will be ok with?
>>
>
>The following seems to do the trick, but is probably way too
>complex. Can't think of any other way off hand.
>
>This does run through the antlr.Tool without complaint, but I did not
>actually try parse any test sentences.
>
>Hope this helps...
>
>-----begin test.g-----cut here-----cut here-----cut here-----
>class testParser extends Parser;
>
>suf :
>	( x ( must_end_with_x )? z ) 
>    |   ( y ( must_end_with_y )? )
>;
>
>must_end_with_x : ( y )* x ( must_end_with_x )? ;
>
>must_end_with_y : ( x )* y ( must_end_with_y )? ;
>
>x : X ;
>y : Y ;
>z : Z ;
>-----end test.g-----cut here-----cut here-----cut here-----

My testParser does not handle the string: yx=
which is valid under your rule.

Again, sorry about that... (i hate it when this happens...)

   -jbb
From jbb at acm.org  Mon Apr 18 11:01:23 2005
From: jbb at acm.org (John B. Brodie)
Date: Mon Apr 18 11:02:00 2005
Subject: [antlr-interest] weird rule...
In-Reply-To: <E1DNa29-00073O-00@gecko> (jbb@acm.org)
References: <20050418080412.21719.qmail@web54205.mail.yahoo.com>
	<E1DNZk1-00037D-00@gecko> <E1DNa29-00073O-00@gecko>
Message-ID: <E1DNaYl-0007X2-00@gecko>

Sorry to keep bugging everyone.

I think this grammar solves the ambiguity issue...

----------
class testParser extends Parser;

// want to find an unambiguous version of:
// suf : ( x | y )* ( ( x z ) | y ) ;

suf :
	( x ( suf | z ) )
    |   ( y ( suf )? )
;

x : X ;
y : Y ;
z : Z ;
----------

(ran through the Tool okay, haven't tried to execute resultant parser)

From octavian_nita_2004 at yahoo.com  Mon Apr 18 12:53:42 2005
From: octavian_nita_2004 at yahoo.com (Octavian Nita)
Date: Mon Apr 18 12:53:46 2005
Subject: [antlr-interest] weird rule... (continued... :))
Message-ID: <20050418195342.18086.qmail@web54204.mail.yahoo.com>

Thanks a lot for the hints.
 
The one from Mr. John Brodie was not quite the one that I wanted because there is a more general problem: it doesn't accept strings starting with y and terminated in z (I used '='); I saw the new post and I'll try it; this one seems so OK...
 
The one from Mr. Eduard Ralph issued a warning on my ANTLR 2.7.5: something with ambiguity inside suf rule on the exit branch of the rule; I think that the problem lays with the Kleene closure ( (...)* ) although it seemed so correct...
 
Respectfully, Tavi

		
---------------------------------
Do you Yahoo!?
 Plan great trips with Yahoo! Travel: Now over 17,000 guides!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050418/0f47d0c1/attachment.html
From Loring.G.Craymer at jpl.nasa.gov  Mon Apr 18 14:16:09 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Mon Apr 18 14:16:14 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree
  creation
In-Reply-To: <20050418115151.84B4A2905DA@new.knowspam.net>
References: <20050418115151.84B4A2905DA@new.knowspam.net>
Message-ID: <6.1.1.1.2.20050418134508.01b7b240@mail.jpl.nasa.gov>

Scott--

I believe that Ter has adopted the Payload/Carrier model for ANTLR 
3--Carriers should implement an interface that contains navigation support 
(including token ids makes sense, but text belongs in the Payload), but all 
attribute data is in the Payloads.  If you look in the archives, you can 
find my posts and those of others involved in the discussion.  The 
separation of navigation from data goes a long way towards removing the 
awkwardnesses that you are trying to solve.

The Carrier interface should be simple enough to wrap most compatible 
navigation classes, and the base Payload interface would just define 
getText() and maybe getLine() and getColumn().  Carriers get created with a 
Payload and a type and are homogeneous (but a tree parser pass can be used 
to convert from one Carrier class to another); Payloads are carried along 
through transformations and are rarely replaced in tree walks.

Tree grammars cannot walk "any" data structure--the data structure needs to 
be either a digraph with no loops, or a digraph in which the navigation 
methods prevent looping.  Modal navigation (methods determine which field 
to dereference from a mode variable) is possible, but the core restriction 
is "no loops".

--Loring


At 05:21 AM 4/18/2005, Scott Stanchfield wrote:
>(Please read the "part 1, interfaces, first)
>
>[I forgot in part 1 to mention how we get "token" values: the ast model
>would define
>     int getTokenIdFor(Object node);
>     String getTextFor(Object node);
>  that would return the parts of a token for any given node. It could just
>return a Token, but that would require the model to create Token objects for
>each real object, which may not be necessary.]
>
>
>Once we can use any data structure for tree parsing, for tree creation, it
>would be useful to be able to create *any* data structure. Factories are the
>right approach here, and are pretty close to being exactly what we need.
>
>First, ASTFactory must be an interface. Then, abstract away "AST" from the
>methods. For example:
>
>   void addChild(Object parent, Object child)
>   Object create(int type)
>   Object create(int type, String text)
>   Object create(int type, String text, String className)
>   ...
>
>Poof.
>
>Using the existing ANTLR tree support and only a slight bit of abstraction,
>we can now:
>* create any data structure
>* walk any data structure
>
>ANTLR becomes the ultimate tool for everything ;)  [Not really of course,
>but tree parsers become much easier to use and therefore more useful, and
>parsing to build data structures becomes easy as well]
>
>
>Next to JavaBeans, making it all even more powerful...
>
>
>With a little syntactic sugar, we can have the grammar explicitly specify
>which properties of a bean to set or read.
>
>
>The trouble with what I've said so far is that things are positional. The
>only way to determine what to parse or build is by the order of adds or the
>index when asking for a child.
>
>
>What if we used labels that were javabean property names and had a "bean
>mode"? (Note: this would work for any language that we can create "get" and
>"set" methods for, not just java!)
>
>
>   options {
>     beanMode = true;
>   }
>
>   person creates Person
>     : name:IDENT phone:phoneNumber address:address
>     ;
>
>   address creates Address
>     : street:IDENT city:IDENT COMMA! state:IDENT zip:INTEGER
>     ;
>
>
>While this needs a little syntactic help, the idea is that the "creates"
>clause states what kind of object to create, and the labels specify which
>properties to assign in the bean being created.
>If the property is a token, we just set the token. If it's a string, we just
>set the token text. We'd probably want some special cases for a few other
>data types as well. Primitive conversions are simple string conversions.
>
>Poof - no action code required to create a data structure based on set
>methods and no-arg constructors!
>(We don't really need the "!" in the above example; we could ignore any term
>without a label)
>
>We'd also need "add" support as well as get/set. (Note here we *need* the
>parens for the * closure...)
>
>
>   person creates Person
>     : name:IDENT ...
>       ( child:child )*
>     ;
>
>Assuming there's an addChild method, it would be called each time through
>the loop. If there were only a setChild, it would be overwritten each time
>through the loop. We could add some sugar here to ensure an add:
>
>   person creates Person
>     : name:IDENT ...
>       ( add:child:child )*
>     ;
>
>(ewww)
>
>But I don't think that's necessary.
>
>
>This of course assumes that subrules all contribute to the rule's object
>being built. To build other objects, a separate top-level rule must be
>defined. (This is the way my XML parsing support works, and it seems peachy
>so far).
>
>
>[For "bean walking", this is an entirely new ballgame, and I haven't
>finished thinking through it. Current tree parsers are positional. Instead,
>the new type of tree parser could check properties instead of "next child".
>I need to chew on this a bit more to get a good example before I propose
>it...]
>
>
>
>Thoughts?
>-- Scott


From mortench2004 at yahoo.dk  Mon Apr 18 14:19:55 2005
From: mortench2004 at yahoo.dk (M C)
Date: Mon Apr 18 14:19:57 2005
Subject: [antlr-interest] RE: On trees and JavaBeans
Message-ID: <20050418211955.52452.qmail@web25102.mail.ukl.yahoo.com>

I really like Scott Stanchfields idea for a "tree
parser that could walk **any** data structure*". That
would very cool. I fact I could see how it could make
a serious impact on how people would do OO.

The current design where every node must implement a
complicated interface really hinders the use of the
tree paser.

Recently I had a interesting case where I needed to do
fast mathematical reductions on heterogeneous query
expression trees based on an immutable composite
pattern. Since all expression nodes were immutable
(only way to "change" an expresion was to create a new
one) there was NO way the expression classes could
(directly) implement the antlr interface even if I
wanted to (also the overhead and uglyness of the
solution was a prohibiting factor).

At the time I thought about using a tree parser for
the matematical reductions but discarded it as too
wishfull thinking. With Scott's proposal that would
not only be possible but probably also THE very best
way of doing such things (like doing reductions by
expression tree rewriting).

Great idea!

Cheers,
Morten Christensen


From scott at javadude.com  Mon Apr 18 18:54:50 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 18:54:59 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <6.1.1.1.2.20050418134508.01b7b240@mail.jpl.nasa.gov>
Message-ID: <20050419012436.66B1A290071@new.knowspam.net>

Payload/carrier won't do IMHO. Too many carriers... Having a generic I/F ala
Swing's TreeModel is really the right way to go, as it can work on any data
structure. (I chatted with him a few weeks ago about it and he explained it
to me)

I understand the concern about loops, but it depends on what the data in the
loops does and on semantic preds. Also, I'm thinking about an alternative
kind of walker, a "bean walker" as well, in addition to the normal tree
walker.

Later,
-- Scott 

> -----Original Message-----
> From: Loring Craymer [mailto:Loring.G.Craymer@jpl.nasa.gov] 
> Sent: Monday, April 18, 2005 5:16 PM
> To: Scott Stanchfield; antlr-interest@antlr.org
> Subject: Re: [antlr-interest] On trees and JavaBeans, part 2: 
> tree creation
> 
> Scott--
> 
> I believe that Ter has adopted the Payload/Carrier model for 
> ANTLR 3--Carriers should implement an interface that contains 
> navigation support (including token ids makes sense, but text 
> belongs in the Payload), but all attribute data is in the 
> Payloads.  If you look in the archives, you can find my posts 
> and those of others involved in the discussion.  The 
> separation of navigation from data goes a long way towards 
> removing the awkwardnesses that you are trying to solve.
> 
> The Carrier interface should be simple enough to wrap most 
> compatible navigation classes, and the base Payload interface 
> would just define
> getText() and maybe getLine() and getColumn().  Carriers get 
> created with a Payload and a type and are homogeneous (but a 
> tree parser pass can be used to convert from one Carrier 
> class to another); Payloads are carried along through 
> transformations and are rarely replaced in tree walks.
> 
> Tree grammars cannot walk "any" data structure--the data 
> structure needs to be either a digraph with no loops, or a 
> digraph in which the navigation methods prevent looping.  
> Modal navigation (methods determine which field to 
> dereference from a mode variable) is possible, but the core 
> restriction is "no loops".
> 
> --Loring
> 
> 
> At 05:21 AM 4/18/2005, Scott Stanchfield wrote:
> >(Please read the "part 1, interfaces, first)
> >
> >[I forgot in part 1 to mention how we get "token" values: 
> the ast model 
> >would define
> >     int getTokenIdFor(Object node);
> >     String getTextFor(Object node);
> >  that would return the parts of a token for any given node. 
> It could 
> >just return a Token, but that would require the model to 
> create Token 
> >objects for each real object, which may not be necessary.]
> >
> >
> >Once we can use any data structure for tree parsing, for 
> tree creation, 
> >it would be useful to be able to create *any* data 
> structure. Factories 
> >are the right approach here, and are pretty close to being 
> exactly what we need.
> >
> >First, ASTFactory must be an interface. Then, abstract away 
> "AST" from 
> >the methods. For example:
> >
> >   void addChild(Object parent, Object child)
> >   Object create(int type)
> >   Object create(int type, String text)
> >   Object create(int type, String text, String className)
> >   ...
> >
> >Poof.
> >
> >Using the existing ANTLR tree support and only a slight bit of 
> >abstraction, we can now:
> >* create any data structure
> >* walk any data structure
> >
> >ANTLR becomes the ultimate tool for everything ;)  [Not really of 
> >course, but tree parsers become much easier to use and 
> therefore more 
> >useful, and parsing to build data structures becomes easy as well]
> >
> >
> >Next to JavaBeans, making it all even more powerful...
> >
> >
> >With a little syntactic sugar, we can have the grammar explicitly 
> >specify which properties of a bean to set or read.
> >
> >
> >The trouble with what I've said so far is that things are 
> positional. 
> >The only way to determine what to parse or build is by the order of 
> >adds or the index when asking for a child.
> >
> >
> >What if we used labels that were javabean property names and had a 
> >"bean mode"? (Note: this would work for any language that we 
> can create 
> >"get" and "set" methods for, not just java!)
> >
> >
> >   options {
> >     beanMode = true;
> >   }
> >
> >   person creates Person
> >     : name:IDENT phone:phoneNumber address:address
> >     ;
> >
> >   address creates Address
> >     : street:IDENT city:IDENT COMMA! state:IDENT zip:INTEGER
> >     ;
> >
> >
> >While this needs a little syntactic help, the idea is that 
> the "creates"
> >clause states what kind of object to create, and the labels specify 
> >which properties to assign in the bean being created.
> >If the property is a token, we just set the token. If it's a 
> string, we 
> >just set the token text. We'd probably want some special cases for a 
> >few other data types as well. Primitive conversions are 
> simple string conversions.
> >
> >Poof - no action code required to create a data structure 
> based on set 
> >methods and no-arg constructors!
> >(We don't really need the "!" in the above example; we could 
> ignore any 
> >term without a label)
> >
> >We'd also need "add" support as well as get/set. (Note here 
> we *need* 
> >the parens for the * closure...)
> >
> >
> >   person creates Person
> >     : name:IDENT ...
> >       ( child:child )*
> >     ;
> >
> >Assuming there's an addChild method, it would be called each time 
> >through the loop. If there were only a setChild, it would be 
> >overwritten each time through the loop. We could add some 
> sugar here to ensure an add:
> >
> >   person creates Person
> >     : name:IDENT ...
> >       ( add:child:child )*
> >     ;
> >
> >(ewww)
> >
> >But I don't think that's necessary.
> >
> >
> >This of course assumes that subrules all contribute to the rule's 
> >object being built. To build other objects, a separate 
> top-level rule 
> >must be defined. (This is the way my XML parsing support 
> works, and it 
> >seems peachy so far).
> >
> >
> >[For "bean walking", this is an entirely new ballgame, and I haven't 
> >finished thinking through it. Current tree parsers are positional. 
> >Instead, the new type of tree parser could check properties 
> instead of "next child".
> >I need to chew on this a bit more to get a good example before I 
> >propose it...]
> >
> >
> >
> >Thoughts?
> >-- Scott
> 
> 




From parrt at cs.usfca.edu  Mon Apr 18 19:10:37 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 18 19:10:27 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <20050419012436.66B1A290071@new.knowspam.net>
References: <20050419012436.66B1A290071@new.knowspam.net>
Message-ID: <fcc50b4c7ed97137821dd7db0dc38636@cs.usfca.edu>

Hi Guys,

I like the flexibility of swing's tree interface, but I don't like the 
need to pass in the parent to get the child.

Tree t = tree.getChild(parent, i);

just seems less pleasant than

Tree t = parent.getChild(i);

Also, you still need a tree node of some kind to actually implement a 
tree.  Perhaps Tree and TreeNode?

I'm open to suggestions still because the payload model requires an 
extra node just to wrap the pointer (as an "adaptor") to another kind 
of tree node.  For example, if you have a DOM tree or something that 
doesn't directly satisfy the Tree interface, you must essentially make 
a duplicate, parallel tree that points node-for-node from the ANTLR 
tree into the DOM tree.

The main issue for me is: when do you really want to walk a "foreign" 
(non-ANTLR constructor) tree?  It happens sometimes, but usually 
because you're building your own trees with actions, which you could 
make implement the Tree interface easily.  It would be fairly rare 
don't you think to want to walk a totally unrelated data structure?

The payload thing works GREAT in most cases as it just points at the 
associated token :)

Ter

From scott at javadude.com  Mon Apr 18 20:26:53 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 20:27:00 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <fcc50b4c7ed97137821dd7db0dc38636@cs.usfca.edu>
Message-ID: <20050419025637.EDB49290198@new.knowspam.net>

> Hi Guys,
> 
> I like the flexibility of swing's tree interface, but I don't 
> like the need to pass in the parent to get the child.
> 
> Tree t = tree.getChild(parent, i);
> 
> just seems less pleasant than
> 
> Tree t = parent.getChild(i);

"Less pleasant"? Dude... (I find it more pleasant b/c I can turn anything
I'd like into a tree. Think of the <genie>PHENOMINAL COSMIC POWER... itty
bitty living space</genie>

Think about the flexibility. The code is generated, so it's no burden to the
grammar writers.

It still allows use of an AST node interface if you have the default
implementation just do things like:

  public Object getChild(Object parent, int num) {
    return ((AST)parent).getChild(num);
  }
  public Object getChildCount(Object parent) {
    return ((AST)parent).getChildCount();
  }
  public int getTokenType(Object parent) {
    return ((AST)parent).getToken().getType();
  }
  public int getTokenLine(Object parent) {
    return ((AST)parent).getToken().getLine();
  }  ...


So you get the best of both worlds. Anyone can still use AST as individual
nodes, but this approach opens it up the ability for any custom tree
implementation one may want w/o requiring node-level decorations (or
implementation of the AST interface)

> Also, you still need a tree node of some kind to actually 
> implement a tree.  Perhaps Tree and TreeNode?

Nope. All you need is Object. By referring to it indirectly through the
model, you have access to all of the same data you would as if it were a
specialized tree node.

For creation, the factory just returns Objects. So you make calls like

  Object node = factory.createNode(Token1);
  Object child = factory.createNode(Token2);
  factory.addChild(node, child);

The implementation of the factory decides how the data is stored, and gives
it back when asked through the model interface.

Pure, simple brilliance.

Can you imagine the types of tools people could create with this
<genie>PHENOMINAL COSMIC POWER... itty bitty living space</genie>

> I'm open to suggestions still because the payload model 
> requires an extra node just to wrap the pointer (as an 
> "adaptor") to another kind of tree node.  For example, if you 
> have a DOM tree or something that doesn't directly satisfy 
> the Tree interface, you must essentially make a duplicate, 
> parallel tree that points node-for-node from the ANTLR tree 
> into the DOM tree.
> 
> The main issue for me is: when do you really want to walk a "foreign" 
> (non-ANTLR constructor) tree?

When the tree already exists or is built by something else.

Prime example for me is the ASTs that eclipse generates. I'd love to use a
treewalker to work with them.

And you mentioned DOM... This would be so much nicer for DOM work... 

> It happens sometimes, but 
> usually because you're building your own trees with actions, 

I've only used trees once, and I doubt everyone uses them. Even those who
use them could benefit from the ability to have very flexible custom nodes.

> which you could make implement the Tree interface easily.  It 
> would be fairly rare don't you think to want to walk a 
> totally unrelated data structure?

Not at all. I've had at least three separate projects I've worked on this
year that I've tried to use the tree walker against existing data (Eclipse
ASTs, DOM parsing, and something else I cannot mention...)

You're thinking too close to your tool, with a single type of application in
mind. Head down to Haight-Ashbury and take a whiff into some mind expansion,
dude... ;)


> The payload thing works GREAT in most cases as it just points 
> at the associated token :)

Only if you use ANTLR ASTs, which I find lacking unfortunately. (I never
really liked the first/sib approach, and I'm not sure what's in 3.0). The
Swing folks hit the nail on the head with TreeModel. I've used it over and
over for doing some really cool things.

For example, I wrote a tool a while back that displays the components
comprise a GUI as a Jtree. See (http://javadude.com/misc/le1). Not released
yet b/c I was doing some things that the JRE license prohibits :( but I
recently figured out some alternatives and after the ANTLR plugin I'll try
to release it.

For this tool, I was able to just implement a single TreeModel, that
reinterpreted getChild, getChildCount, etc.  For example (from memory):

  private Object root;
  public Object getRoot() { return root; }
  Object getChild(Object node, int n) {
    if (node instanceof Container)
      return ((Container)node).getChildren()[n];
    return null;
  }

I could then set the root object in the tree model and the JTree walks the
tree model starting at the root and poof! Component list in a JTree. Very
easy.

If they hadn't implemented Swing this way, I would have had to have an
adapter for each component in the GUI, and each adapter would have to create
child adapters. Something like

  public class ComponentNode implements TreeNode {
    private Component comp;
    public ComponentNode(Component c) { comp = c; }
    public Object getChild(int n) {
      if (comp instanceof Container) {
        Component kid = ((Container)comp).getChildren().[n];
        return new ComponentNode(kid);
      }
      return null;
    }
    ...
  }


Much less elegant, and consumes a lot more RAM, requires extra garbage
collection.

Fortunately Swing lets us do this either way.

That's what I'm asking here.

1) Have an ASTModel interface that defines the node navigation and necessary
data access against Objects
2) Define an ASTFactory interface that creates and manipulates just Objects
3) Define AST interface that represents an ANTLR AST node
4) Define a default implementation of ASTModel that translates model calls
into AST node calls
5) Define default implementation(s) of AST as needed by ANTLR
6) Define default implementation(s) of ASTFactory as needed by ANTLR

After that, anyone can use any AST they would like, not just at the node
level.

Nifty, eh?

If you'd like me to take a pass at tweaking your existing AST setup into
this to give you a better idea of how well it works, let me know. It should
only take an hour methinks...

(I am the pattern master, after all ;) )

Later,
-- Scott




From scott at javadude.com  Mon Apr 18 20:33:18 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 18 20:33:25 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <200504181550.j3IFotar025462@s2.eroute.net>
Message-ID: <20050419030303.2EC6F2902F3@new.knowspam.net>

That looks cool -- I'll have to look harder at it!

Though I'd really like to be able to specify matches and actions to take on
the matches (I prefer declarative programming when possible...)

-- Scott 

> -----Original Message-----
> From: Martin Probst [mailto:mail@martin-probst.com] 
> Sent: Monday, April 18, 2005 10:54 AM
> To: 'Scott Stanchfield'; antlr-interest@antlr.org
> Subject: RE: [antlr-interest] On trees and JavaBeans, part 2: 
> tree creation
> [...]
> Did you take a look at Apache JXPath? It uses an XPathy 
> language to query object graphs. Afaik it does this by using 
> reflection, but this is of course not necessary in ANTLR. 




From open.zone at virgin.net  Tue Apr 19 01:18:53 2005
From: open.zone at virgin.net (Micheal J)
Date: Tue Apr 19 01:05:36 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <20050419025637.EDB49290198@new.knowspam.net>
Message-ID: <004101c544b8$6c74eac0$6702a8c0@hercules>

Assuming no ones chimes in with performance issues relating to the
TreeModel-style interface.

> 1) Have an ASTModel interface that defines the node 
> navigation and necessary data access against Objects

+1

> 2) Define an ASTFactory interface that creates and 
> manipulates just Objects

I suspect the ASTFactory interface also needs to accommodate the Payload
since this objects originate in (i.e. are created in) the lexer -
Token==Payload==TreeNode right?. The ASTModel only replaces Carriers.

+1

> 3) Define AST interface that represents an ANTLR AST node

Done.

> 4) Define a default implementation of ASTModel that 
> translates model calls into AST node calls

+1

> 5) Define default implementation(s) of AST as needed by ANTLR

Done.

> 6) Define default implementation(s) of ASTFactory as needed by ANTLR

+1

> After that, anyone can use any AST they would like, not just 
> at the node level.
> 
> Nifty, eh?

Barring performance issues, yes.

Cheers,

Micheal

From open.zone at virgin.net  Tue Apr 19 01:18:53 2005
From: open.zone at virgin.net (Micheal J)
Date: Tue Apr 19 01:05:38 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <fcc50b4c7ed97137821dd7db0dc38636@cs.usfca.edu>
Message-ID: <004201c544b8$6cbfd670$6702a8c0@hercules>

> Hi Guys,
> 
> I like the flexibility of swing's tree interface, but I don't 
> like the 
> need to pass in the parent to get the child.
> 
> Tree t = tree.getChild(parent, i);
> 
> just seems less pleasant than
> 
> Tree t = parent.getChild(i);

I'm sure you agree this is a minor point  ;-)

> Also, you still need a tree node of some kind to actually implement a 
> tree.  Perhaps Tree and TreeNode?

Perhaps but a TreeModel-style interface doesn't care or know about the
concrete types. That is encapsulated in implementation classes.

> I'm open to suggestions still because the payload model requires an 
> extra node just to wrap the pointer (as an "adaptor") to another kind 
> of tree node.  For example, if you have a DOM tree or something that 
> doesn't directly satisfy the Tree interface, you must 
> essentially make 
> a duplicate, parallel tree that points node-for-node from the ANTLR 
> tree into the DOM tree.

The Carrier/Payload model is no better or worse than the requirement to
implement AST currently w.r.t accomodating existing foreign tree/node
classes (that can't be modified to implement AST). It solves a different
problem.

> The main issue for me is: when do you really want to walk a "foreign" 
> (non-ANTLR constructor) tree?  It happens sometimes, but usually 
> because you're building your own trees with actions, which you could 
> make implement the Tree interface easily.  It would be fairly rare 
> don't you think to want to walk a totally unrelated data structure?

My main question is "does the use of a TreeModel-style interface have any
significant performance costs compared to the Carrier/Payload model?".

It's main benefit would be that ANTLR can work with [almost?] any
representation of trees. We would supply a CarrierTreeModel or
DefaultAstTreeModel implementation as default that works with the default
Carrier/Payload interfaces.

The ASTFactory would need to be extended as in Scott's 1st post to offer the
same flexibility in tree construction. Only the factory implementation
classes would know the true representation of the trees. We would once again
supply a DefaultAstFactory that creates Carrier/Payloads.

> The payload thing works GREAT in most cases as it just points at the 
> associated token :)

This wouldn't change if a TreeModel-style interface was adopted.

Cheers,

Micheal

From ewbank at gmail.com  Tue Apr 19 01:55:41 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 19 01:55:43 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <004201c544b8$6cbfd670$6702a8c0@hercules>
References: <fcc50b4c7ed97137821dd7db0dc38636@cs.usfca.edu>
	<004201c544b8$6cbfd670$6702a8c0@hercules>
Message-ID: <dd3a065f05041901556014b48e@mail.gmail.com>

The Tree isn't what is changing, but merely some position within it:

    TreeIterator itr = tree.getIterator();
    itr = itr.getChild(i);

We could even define standard TreeIterators for traversals so that a
traversal would look more like a standard loop:

   for (itr = tree.getPreOrderDepthFirstIter(); itr; itr++) ...

One less thing to reimplement each time.

On 4/19/05, Micheal J <open.zone@virgin.net> wrote:
> > Hi Guys,
> >
> > I like the flexibility of swing's tree interface, but I don't
> > like the
> > need to pass in the parent to get the child.
> >
> > Tree t = tree.getChild(parent, i);
> >
> > just seems less pleasant than
> >
> > Tree t = parent.getChild(i);
> 
> I'm sure you agree this is a minor point  ;-)
> 
> > Also, you still need a tree node of some kind to actually implement a
> > tree.  Perhaps Tree and TreeNode?
> 
> Perhaps but a TreeModel-style interface doesn't care or know about the
> concrete types. That is encapsulated in implementation classes.
From togolmach2 at lycos.com  Tue Apr 19 03:54:31 2005
From: togolmach2 at lycos.com (togol machillan)
Date: Tue Apr 19 03:53:50 2005
Subject: [antlr-interest] Selection between lexer rule and literal
Message-ID: <20050419105431.2EEB286B0F@ws7-1.us4.outblaze.com>

Hello,

I have a rule in the lexer which looks like the following.

VALUE  options {testLiterals = true; }
       :CAPITAL_LETTER (CAPITAL_LETTER|DIGIT|','|':'|'+'|'-')* 
       ;

In the parser, I have defined a list of literals like the following example rule

p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
			  :
			   (
			   {k = LT(1)->getText(); col = LT(1)->getColumn();} "COMPONENTS"
			   |{k = LT(1)->getText(); col = LT(1)->getColumn();} "DATABANKS"
			   |{k = LT(1)->getText(); col = LT(1)->getColumn();} "PROP-SOURCES"
			   )
                          ;

Now when some parser rule is looking for a VALUE token and it sees, for example, COMPONENTS, it returns an unexpected token error. It there some way of making the parser intelligent enough so that it considers COMPONENTS (defined as a literal) as a token of type VALUE. 

Best regards,

T. Mach   
-- 
_______________________________________________
NEW! Lycos Dating Search. The only place to search multiple dating sites at once.
http://datingsearch.lycos.com

From demakov at ispras.ru  Tue Apr 19 04:06:04 2005
From: demakov at ispras.ru (Alexey Demakov)
Date: Tue Apr 19 04:06:10 2005
Subject: [antlr-interest] Selection between lexer rule and literal
References: <20050419105431.2EEB286B0F@ws7-1.us4.outblaze.com>
Message-ID: <00ce01c544cf$c7746420$8cc79553@marlboro>

----- Original Message ----- 
From: "togol machillan" <togolmach2@lycos.com>
To: <antlr-interest@antlr.org>
Sent: Tuesday, April 19, 2005 2:54 PM
Subject: [antlr-interest] Selection between lexer rule and literal


> I have a rule in the lexer which looks like the following.
>
> VALUE  options {testLiterals = true; }
>        :CAPITAL_LETTER (CAPITAL_LETTER|DIGIT|','|':'|'+'|'-')*
>        ;
>
> In the parser, I have defined a list of literals like the following example rule
>
> p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
>   :
>    (
>    {k = LT(1)->getText(); col = LT(1)->getColumn();} "COMPONENTS"
>    |{k = LT(1)->getText(); col = LT(1)->getColumn();} "DATABANKS"
>    |{k = LT(1)->getText(); col = LT(1)->getColumn();} "PROP-SOURCES"
>    )
>                           ;
>
> Now when some parser rule is looking for a VALUE token and it sees, for example, COMPONENTS, it returns an unexpected token error.
It there some way of making the parser intelligent enough so that it considers COMPONENTS (defined as a literal) as a token of type
VALUE.

Try to define all tokens in lexer. For keywords there is "tokens" section
as described in http://marlboro/docs/cc/antlr-2.7.4/metalang.html#TokensSection
So, your grammar should look like:

In lexer:

tokens
{
    COMPONENTS = "COMPONENTS";
    DATABANKS = "DATABANKS";
    PROP_SOURCES = "PROP-SOURCES";
}

In parser:

p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
:
  {k = LT(1)->getText(); col = LT(1)->getColumn();}
  (  COMPONENTS
   | DATABANKS
   | PROP_SOURCES
  )
;

Regards,
Alexey

-----
Alexey Demakov
TreeDL: Tree Description Language: http://treedl.sourceforge.net
RedVerst Group: http://www.unitesk.com


From togolmach2 at lycos.com  Tue Apr 19 05:31:04 2005
From: togolmach2 at lycos.com (togol machillan)
Date: Tue Apr 19 05:29:49 2005
Subject: [antlr-interest] Selection between lexer rule and literal
Message-ID: <20050419123104.42F9DE5BC7@ws7-2.us4.outblaze.com>

Thanks for the prompt reply. But defining tokens section in the lexer does not solve the problem. I would like the parser to match the occurence of COMPONENTS, for example, in the input file with the VALUE rule if it does not find any reference to the p_keyword_list rule in the rule currently being matched. The parser never matches COMPONENTS with the VALUE rule, although it is a valid token of the VALUE type. 

Regards,

Mach  

----- Original Message -----
From: "Alexey Demakov" <demakov@ispras.ru>
To: antlr-interest@antlr.org
Subject: Re: [antlr-interest] Selection between lexer rule and literal
Date: Tue, 19 Apr 2005 15:06:04 +0400

> 
> ----- Original Message -----
> From: "togol machillan" <togolmach2@lycos.com>
> To: <antlr-interest@antlr.org>
> Sent: Tuesday, April 19, 2005 2:54 PM
> Subject: [antlr-interest] Selection between lexer rule and literal
> 
> 
> > I have a rule in the lexer which looks like the following.
> >
> > VALUE  options {testLiterals = true; }
> >        :CAPITAL_LETTER (CAPITAL_LETTER|DIGIT|','|':'|'+'|'-')*
> >        ;
> >
> > In the parser, I have defined a list of literals like the 
> > following example rule
> >
> > p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
> >   :
> >    (
> >    {k = LT(1)->getText(); col = LT(1)->getColumn();} "COMPONENTS"
> >    |{k = LT(1)->getText(); col = LT(1)->getColumn();} "DATABANKS"
> >    |{k = LT(1)->getText(); col = LT(1)->getColumn();} "PROP-SOURCES"
> >    )
> >                           ;
> >
> > Now when some parser rule is looking for a VALUE token and it 
> > sees, for example, COMPONENTS, it returns an unexpected token 
> > error.
> It there some way of making the parser intelligent enough so that 
> it considers COMPONENTS (defined as a literal) as a token of type
> VALUE.
> 
> Try to define all tokens in lexer. For keywords there is "tokens" section
> as described in 
> http://marlboro/docs/cc/antlr-2.7.4/metalang.html#TokensSection
> So, your grammar should look like:
> 
> In lexer:
> 
> tokens
> {
>      COMPONENTS = "COMPONENTS";
>      DATABANKS = "DATABANKS";
>      PROP_SOURCES = "PROP-SOURCES";
> }
> 
> In parser:
> 
> p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
> :
>    {k = LT(1)->getText(); col = LT(1)->getColumn();}
>    (  COMPONENTS
>     | DATABANKS
>     | PROP_SOURCES
>    )
> ;
> 
> Regards,
> Alexey
> 
> -----
> Alexey Demakov
> TreeDL: Tree Description Language: http://treedl.sourceforge.net
> RedVerst Group: http://www.unitesk.com

-- 
_______________________________________________
NEW! Lycos Dating Search. The only place to search multiple dating sites at once.
http://datingsearch.lycos.com

From scott at javadude.com  Tue Apr 19 05:38:01 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 19 05:38:08 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <004101c544b8$6c74eac0$6702a8c0@hercules>
Message-ID: <20050419120739.C6C642905A5@new.knowspam.net>

> Assuming no ones chimes in with performance issues relating 
> to the TreeModel-style interface.

It's one extra method call for access; negligible unless you're using
10-year old machines...

Glad you like the concept!
-- Scott





From scott at javadude.com  Tue Apr 19 05:43:19 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 19 05:43:28 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <dd3a065f05041901556014b48e@mail.gmail.com>
Message-ID: <20050419121258.B6B61290651@new.knowspam.net>

Hmmm... interesting, but we still need some way to get data from the nodes
(which would be part of the ASTModel interface)

I'd also like to expose the model as more of a tree so other tools (like
ANTLRWorks) can display the current state of a tree. ANTLRWorks would need
to use an adapter to display the content, similar to TreeCellRenderer in
Swing.

We also need to take into account tree re-writing and creation, which is
where the factory comes in.

Keep it all abstract and insane flexibility ;)

(Swing may have done a lot of things wrong, IMHO, but the model design
behind trees was really well thought out...)

Later,
-- Scott


> The Tree isn't what is changing, but merely some position within it:
> 
>     TreeIterator itr = tree.getIterator();
>     itr = itr.getChild(i);
> 
> We could even define standard TreeIterators for traversals so 
> that a traversal would look more like a standard loop:
> 
>    for (itr = tree.getPreOrderDepthFirstIter(); itr; itr++) ...
> 
> One less thing to reimplement each time.
> 




From scott at javadude.com  Tue Apr 19 05:43:19 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 19 05:43:32 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <004201c544b8$6cbfd670$6702a8c0@hercules>
Message-ID: <20050419121259.502C6290663@new.knowspam.net>

> > Also, you still need a tree node of some kind to actually 
> implement a 
> > tree.  Perhaps Tree and TreeNode?
> 
> Perhaps but a TreeModel-style interface doesn't care or know 
> about the concrete types. That is encapsulated in 
> implementation classes.

Exactly. All args/return types are Object, integer, or String.

> > The payload thing works GREAT in most cases as it just 
> points at the 
> > associated token :)
> 
> This wouldn't change if a TreeModel-style interface was adopted.

Yep ;)

Later,
-- Scott




From ewbank at gmail.com  Tue Apr 19 06:15:31 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 19 06:15:35 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <20050419121259.502C6290663@new.knowspam.net>
References: <004201c544b8$6cbfd670$6702a8c0@hercules>
	<20050419121259.502C6290663@new.knowspam.net>
Message-ID: <dd3a065f050419061572eae303@mail.gmail.com>

So, hows about other target languages that don't have some of the
stuff assumed by this discussion?

Lots of people have been talking about:
> > > Also, you still need a tree node of some kind to actually
> > > implement a tree.  Perhaps Tree and TreeNode?
> >
> > Perhaps but a TreeModel-style interface doesn't care or know
> > about the concrete types. That is encapsulated in
> > implementation classes.
> 
> Exactly. All args/return types are Object, integer, or String.
From antlr at shmuelhome.mine.nu  Tue Apr 19 06:57:28 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue Apr 19 07:50:02 2005
Subject: [antlr-interest] Javascript virtual semicolons
Message-ID: <42650E48.7090604@shmuelhome.mine.nu>

Javascript 1.5, or whatever you want to call it, has a very strange 
lexical rule:
If the parser ran out of alternative for the last token, back off, 
insert a virtual semicolon and try again. If this works, continue, else 
raise an error condition.
How do you do this in antlr?

Earlier versions of javascript have a more complicated definition of 
virtual semicolon but still do the same sort of thing.


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.308 / Virus Database: 266.9.17 - Release Date: 4/19/2005

From demakov at ispras.ru  Tue Apr 19 08:14:05 2005
From: demakov at ispras.ru (Alexey Demakov)
Date: Tue Apr 19 08:14:12 2005
Subject: [antlr-interest] Selection between lexer rule and literal
References: <20050419123104.42F9DE5BC7@ws7-2.us4.outblaze.com>
Message-ID: <006c01c544f2$6d044d20$8cc79553@marlboro>

>From abstract point of view, lexer works ahead of parser and doesn't know about parser rules.
If in lexer you have tokens section, VALUE rule with testLiterals = true, lexer will match "COMPONENTS" as VALUE
then look in literals table (that contains info from tokens section) and always requalify token type from VALUE to COMPONENTS.
As far as I understand, you are trying to parse the same text as different tokens depending on context?
I'm afraid it is not right and easy way. But you can add parser rule that matches VALUE and all keywords
and use it in appopriate places.

Regards,
Alexey

-----
Alexey Demakov
TreeDL: Tree Description Language: http://treedl.sourceforge.net
RedVerst Group: http://www.unitesk.com

----- Original Message ----- 
From: "togol machillan" <togolmach2@lycos.com>
To: <antlr-interest@antlr.org>
Sent: Tuesday, April 19, 2005 4:31 PM
Subject: Re: [antlr-interest] Selection between lexer rule and literal


> Thanks for the prompt reply. But defining tokens section in the lexer does not solve the problem. I would like the parser to match
the occurence of COMPONENTS, for example, in the input file with the VALUE rule if it does not find any reference to the
p_keyword_list rule in the rule currently being matched. The parser never matches COMPONENTS with the VALUE rule, although it is a
valid token of the VALUE type.
>
> Regards,
>
> Mach
>
> ----- Original Message -----
> From: "Alexey Demakov" <demakov@ispras.ru>
> To: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Selection between lexer rule and literal
> Date: Tue, 19 Apr 2005 15:06:04 +0400
>
> >
> > ----- Original Message -----
> > From: "togol machillan" <togolmach2@lycos.com>
> > To: <antlr-interest@antlr.org>
> > Sent: Tuesday, April 19, 2005 2:54 PM
> > Subject: [antlr-interest] Selection between lexer rule and literal
> >
> >
> > > I have a rule in the lexer which looks like the following.
> > >
> > > VALUE  options {testLiterals = true; }
> > >        :CAPITAL_LETTER (CAPITAL_LETTER|DIGIT|','|':'|'+'|'-')*
> > >        ;
> > >
> > > In the parser, I have defined a list of literals like the
> > > following example rule
> > >
> > > p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
> > >   :
> > >    (
> > >    {k = LT(1)->getText(); col = LT(1)->getColumn();} "COMPONENTS"
> > >    |{k = LT(1)->getText(); col = LT(1)->getColumn();} "DATABANKS"
> > >    |{k = LT(1)->getText(); col = LT(1)->getColumn();} "PROP-SOURCES"
> > >    )
> > >                           ;
> > >
> > > Now when some parser rule is looking for a VALUE token and it
> > > sees, for example, COMPONENTS, it returns an unexpected token
> > > error.
> > It there some way of making the parser intelligent enough so that
> > it considers COMPONENTS (defined as a literal) as a token of type
> > VALUE.
> >
> > Try to define all tokens in lexer. For keywords there is "tokens" section
> > as described in
> > http://marlboro/docs/cc/antlr-2.7.4/metalang.html#TokensSection
> > So, your grammar should look like:
> >
> > In lexer:
> >
> > tokens
> > {
> >      COMPONENTS = "COMPONENTS";
> >      DATABANKS = "DATABANKS";
> >      PROP_SOURCES = "PROP-SOURCES";
> > }
> >
> > In parser:
> >
> > p_keyword_list returns [ANTLR_USE_NAMESPACE(std)string k]
> > :
> >    {k = LT(1)->getText(); col = LT(1)->getColumn();}
> >    (  COMPONENTS
> >     | DATABANKS
> >     | PROP_SOURCES
> >    )
> > ;
> >
> > Regards,
> > Alexey
> >
> > -----
> > Alexey Demakov
> > TreeDL: Tree Description Language: http://treedl.sourceforge.net
> > RedVerst Group: http://www.unitesk.com


From antlr at shmuelhome.mine.nu  Tue Apr 19 08:21:06 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue Apr 19 08:22:01 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
In-Reply-To: <a640406c4466b229c0608101e12fcc83@codetransform.com>
References: <41fed8f805041711404675ea6e@mail.gmail.com>
	<4262D111.9010200@shmuelhome.mine.nu>
	<a640406c4466b229c0608101e12fcc83@codetransform.com>
Message-ID: <426521E2.2060405@shmuelhome.mine.nu>

Monty Zukowski wrote:

> On Apr 17, 2005, at 2:11 PM, shmuel siegel wrote:
>
>> While we are on the subject of "follow set", is there a tool that 
>> will translate a follow set to the characters that it represents? One 
>> of the strong points of Antlr is that it is possible to understand 
>> the code it generates. This would be enhanced if the follow and match 
>> sets were easily translated into human terms.
>>
> Well, if you set the option codeGenBitsetThreshold very high, like 
> 999999, then you will see all the token names instead of the bitset 
> objects.
>
> Monty

I assume that you mean codeGenBitsetTestThreshold as that is actually
accepted. It only solves one of my problems; it makes the normal parsing
readable. But it doesn't let me know what consume is doing during error
recovery. I would still like an option for expanding the bitset into
readable entities. Inline comments would be fine.




-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.308 / Virus Database: 266.9.17 - Release Date: 4/19/2005

From ewbank at gmail.com  Tue Apr 19 08:27:16 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 19 08:27:27 2005
Subject: [antlr-interest] Selection between lexer rule and literal
In-Reply-To: <20050419123104.42F9DE5BC7@ws7-2.us4.outblaze.com>
References: <20050419123104.42F9DE5BC7@ws7-2.us4.outblaze.com>
Message-ID: <dd3a065f0504190827561ac604@mail.gmail.com>

If you are attempting to match context-sensitive keywords (that is,
"components" is COMPONENTS sometimes, VALUE at other times), then you
need to use semantic predicates.

The lexer always reports "components" as VALUE, and the parser uses a
semantic predicate to conditionally match a VALUE for which something
is true.  The guts look like this:

   // predicate must be in an alternative to avoid parse errors.  Note that
   // ANTLR does not hoist predicates, therefore it cannot be in "component".
   rule1:
      ( { isComponent(LT(1)) }? component
      | value
      )
      ;

   component:
      v:VALUE { #v->setType(COMPONENT); }
      ;

You need to tie it into exactly what you need, but the semantic
predicate is, I think, the key.
On 4/19/05, togol machillan <togolmach2@lycos.com> wrote:
> I would like the parser to match the occurence of COMPONENTS, for
> example, in the input file with the VALUE rule if it does not find
> any reference to the p_keyword_list rule in the rule currently being
> matched. The parser never matches COMPONENTS with the VALUE rule,
> although it is a valid token of the VALUE type.
From ric.klaren at gmail.com  Tue Apr 19 11:39:20 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Apr 19 11:39:27 2005
Subject: [antlr-interest] What exactly does 'follow set' mean?
In-Reply-To: <426521E2.2060405@shmuelhome.mine.nu>
References: <41fed8f805041711404675ea6e@mail.gmail.com>	<4262D111.9010200@shmuelhome.mine.nu>	<a640406c4466b229c0608101e12fcc83@codetransform.com>
	<426521E2.2060405@shmuelhome.mine.nu>
Message-ID: <42655058.5070408@gmail.com>

shmuel siegel wrote:
> I assume that you mean codeGenBitsetTestThreshold as that is actually
> accepted. It only solves one of my problems; it makes the normal parsing
> readable. But it doesn't let me know what consume is doing during error
> recovery. I would still like an option for expanding the bitset into
> readable entities. Inline comments would be fine.

Turn on C++ mode for one run. C++ mode dumps the follow set contents in 
comments. Antlr's default error recovery does a consumeUntil the first 
token in the follow set (with defaultErrorHandler = true)

You can customize the error handling per rule. Doing inserts like you 
ask in a previous post is tricky though (it depends on the presence of 
syntactic predicates in you grammar wether this is doable or not).

Cheers,

Ric
From Loring.G.Craymer at jpl.nasa.gov  Tue Apr 19 15:30:22 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Tue Apr 19 15:30:27 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <20050419012436.66B1A290071@new.knowspam.net>
References: <6.1.1.1.2.20050418134508.01b7b240@mail.jpl.nasa.gov>
	<20050419012436.66B1A290071@new.knowspam.net>
Message-ID: <6.2.1.2.2.20050419133048.02994508@mail.jpl.nasa.gov>

Scott--

Separating data and navigation interfaces is key to supporting any sort of 
transformation--to transform, you need to rewrap a data package with 
navigation information.  Swing's JTree is mis-designed because the 
navigation class (JTree.DynamicUtilTreeNode) is referenced from the data 
container, not the other way around.  There are two navigation 
paradigms:  you can either use a Cursor object to navigate (in which case, 
the options are assigning an object to the cursor, moving the cursor to one 
of the siblings or children of the assigned object, returning a 
sibling/child of the assigned object, or adding a child/sibling) or a 
Carrier.  With the Carrier approach, you might have to create Carriers when 
navigating arbitrary data structures:

class NewCarrier implements Carrier {
...
public Carrier getChild() {
         Object o = payload.findFirstChild();
         return (Carrier) new NewCarrier(o);
}
...
}

That may look like a lot of overhead to create Carriers willy-nilly, but in 
practice it probably is not--the creation and destruction of Carriers is 
just a recycling which the garbage collector will do as efficiently as one 
can do manually or nearly so--when walking, Carriers are the only dynamic 
element.

And of course, there is no reason that an object cannot be both Carrier and 
Payload:

class AST implements Carrier, Payload {
         ...
}

in which case getPayload() returns this.

Really, it is all just a matter of which access pattern you are using, and 
the key abstraction is to separate out data from navigation.

--Loring


At 06:54 PM 4/18/2005, Scott Stanchfield wrote:
>Payload/carrier won't do IMHO. Too many carriers... Having a generic I/F ala
>Swing's TreeModel is really the right way to go, as it can work on any data
>structure. (I chatted with him a few weeks ago about it and he explained it
>to me)
>
>I understand the concern about loops, but it depends on what the data in the
>loops does and on semantic preds. Also, I'm thinking about an alternative
>kind of walker, a "bean walker" as well, in addition to the normal tree
>walker.
>
>Later,
>-- Scott
>
> > -----Original Message-----
> > From: Loring Craymer [mailto:Loring.G.Craymer@jpl.nasa.gov]
> > Sent: Monday, April 18, 2005 5:16 PM
> > To: Scott Stanchfield; antlr-interest@antlr.org
> > Subject: Re: [antlr-interest] On trees and JavaBeans, part 2:
> > tree creation
> >
> > Scott--
> >
> > I believe that Ter has adopted the Payload/Carrier model for
> > ANTLR 3--Carriers should implement an interface that contains
> > navigation support (including token ids makes sense, but text
> > belongs in the Payload), but all attribute data is in the
> > Payloads.  If you look in the archives, you can find my posts
> > and those of others involved in the discussion.  The
> > separation of navigation from data goes a long way towards
> > removing the awkwardnesses that you are trying to solve.
> >
> > The Carrier interface should be simple enough to wrap most
> > compatible navigation classes, and the base Payload interface
> > would just define
> > getText() and maybe getLine() and getColumn().  Carriers get
> > created with a Payload and a type and are homogeneous (but a
> > tree parser pass can be used to convert from one Carrier
> > class to another); Payloads are carried along through
> > transformations and are rarely replaced in tree walks.
> >
> > Tree grammars cannot walk "any" data structure--the data
> > structure needs to be either a digraph with no loops, or a
> > digraph in which the navigation methods prevent looping.
> > Modal navigation (methods determine which field to
> > dereference from a mode variable) is possible, but the core
> > restriction is "no loops".
> >
> > --Loring
> >
> >
> > At 05:21 AM 4/18/2005, Scott Stanchfield wrote:
> > >(Please read the "part 1, interfaces, first)
> > >
> > >[I forgot in part 1 to mention how we get "token" values:
> > the ast model
> > >would define
> > >     int getTokenIdFor(Object node);
> > >     String getTextFor(Object node);
> > >  that would return the parts of a token for any given node.
> > It could
> > >just return a Token, but that would require the model to
> > create Token
> > >objects for each real object, which may not be necessary.]
> > >
> > >
> > >Once we can use any data structure for tree parsing, for
> > tree creation,
> > >it would be useful to be able to create *any* data
> > structure. Factories
> > >are the right approach here, and are pretty close to being
> > exactly what we need.
> > >
> > >First, ASTFactory must be an interface. Then, abstract away
> > "AST" from
> > >the methods. For example:
> > >
> > >   void addChild(Object parent, Object child)
> > >   Object create(int type)
> > >   Object create(int type, String text)
> > >   Object create(int type, String text, String className)
> > >   ...
> > >
> > >Poof.
> > >
> > >Using the existing ANTLR tree support and only a slight bit of
> > >abstraction, we can now:
> > >* create any data structure
> > >* walk any data structure
> > >
> > >ANTLR becomes the ultimate tool for everything ;)  [Not really of
> > >course, but tree parsers become much easier to use and
> > therefore more
> > >useful, and parsing to build data structures becomes easy as well]
> > >
> > >
> > >Next to JavaBeans, making it all even more powerful...
> > >
> > >
> > >With a little syntactic sugar, we can have the grammar explicitly
> > >specify which properties of a bean to set or read.
> > >
> > >
> > >The trouble with what I've said so far is that things are
> > positional.
> > >The only way to determine what to parse or build is by the order of
> > >adds or the index when asking for a child.
> > >
> > >
> > >What if we used labels that were javabean property names and had a
> > >"bean mode"? (Note: this would work for any language that we
> > can create
> > >"get" and "set" methods for, not just java!)
> > >
> > >
> > >   options {
> > >     beanMode = true;
> > >   }
> > >
> > >   person creates Person
> > >     : name:IDENT phone:phoneNumber address:address
> > >     ;
> > >
> > >   address creates Address
> > >     : street:IDENT city:IDENT COMMA! state:IDENT zip:INTEGER
> > >     ;
> > >
> > >
> > >While this needs a little syntactic help, the idea is that
> > the "creates"
> > >clause states what kind of object to create, and the labels specify
> > >which properties to assign in the bean being created.
> > >If the property is a token, we just set the token. If it's a
> > string, we
> > >just set the token text. We'd probably want some special cases for a
> > >few other data types as well. Primitive conversions are
> > simple string conversions.
> > >
> > >Poof - no action code required to create a data structure
> > based on set
> > >methods and no-arg constructors!
> > >(We don't really need the "!" in the above example; we could
> > ignore any
> > >term without a label)
> > >
> > >We'd also need "add" support as well as get/set. (Note here
> > we *need*
> > >the parens for the * closure...)
> > >
> > >
> > >   person creates Person
> > >     : name:IDENT ...
> > >       ( child:child )*
> > >     ;
> > >
> > >Assuming there's an addChild method, it would be called each time
> > >through the loop. If there were only a setChild, it would be
> > >overwritten each time through the loop. We could add some
> > sugar here to ensure an add:
> > >
> > >   person creates Person
> > >     : name:IDENT ...
> > >       ( add:child:child )*
> > >     ;
> > >
> > >(ewww)
> > >
> > >But I don't think that's necessary.
> > >
> > >
> > >This of course assumes that subrules all contribute to the rule's
> > >object being built. To build other objects, a separate
> > top-level rule
> > >must be defined. (This is the way my XML parsing support
> > works, and it
> > >seems peachy so far).
> > >
> > >
> > >[For "bean walking", this is an entirely new ballgame, and I haven't
> > >finished thinking through it. Current tree parsers are positional.
> > >Instead, the new type of tree parser could check properties
> > instead of "next child".
> > >I need to chew on this a bit more to get a good example before I
> > >propose it...]
> > >
> > >
> > >
> > >Thoughts?
> > >-- Scott
> >
> >


From open.zone at virgin.net  Tue Apr 19 16:42:36 2005
From: open.zone at virgin.net (Micheal J)
Date: Tue Apr 19 16:29:21 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <dd3a065f050419061572eae303@mail.gmail.com>
Message-ID: <004401c54539$7764e300$6702a8c0@hercules>



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: 19 April 2005 14:16
> To: ANTLR Interest
> Subject: Re: [antlr-interest] On trees and JavaBeans, part 2: 
> tree creation
> 
> 
> So, hows about other target languages that don't have some of 
> the stuff assumed by this discussion?

Please give an example (or two) of the kind of languages to which you are
referring.

Micheal

From Richard.Ney at Aspect.com  Tue Apr 19 18:49:16 2005
From: Richard.Ney at Aspect.com (Ney, Richard)
Date: Tue Apr 19 18:49:26 2005
Subject: [antlr-interest] Issues with Tree Grammar
Message-ID: <B4D3CECB886F164AA5EC912A1D082BCED57A9B@sac1exch3.aspect.com>

I have an existing tree grammar that I have to modify to handle a slight
modification. Currently as shown in the listed grammer the
groupExpression is based off of the mathExpression.

 

selectColumn

      : #(SELECT_COLUMN (column = groupExpression a = objectAlias))

      | #(SELECT_STAR STAR)

      ;

      

objectAlias

      : a:ALIAS

      | /* empty */

      ;

      

distinct

      : "distinct"

      | /* empty */

      ;     

      

groupExpression

      : #("avg" column = mathExpression)

      | #("sum" column = mathExpression)

      | #("count" dist = distinct (column = fieldName | STAR))

      | #("max" column = mathExpression)

      | #("min" column = mathExpression)

      | column = mathExpression

      ;

 

mathExpression

      : #(PLUS left = mathExpression right = mathExpression)

      | #(MINUS left = mathExpression right = mathExpression)

      | #(STAR left = mathExpression right = mathExpression)

      | #(DIV left = mathExpression right = mathExpression)

      | #(MOD left = mathExpression right = mathExpression)

      | result = expression

      ;

 

expression

      :     result = fieldName

      |     node = unaryExpression

      ;     

 

Now based on a change in requirements I now need to be able to form a
mathExpression that has the left or right sides as a groupExpression
trees. Can someone recommend a simple way to modify the grammar to add
this support while avoiding the recursive grammar?

 

 

Richard Ney                                                         

Principal Software Engineer

Aspect Communications

1310 Ridder Park Drive

San Jose, CA 95131-2313

 

916.797.9602          Home Office

408.325.2464       SJ Office

www.aspect.com

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050419/58f157b4/attachment-0001.html
From ewbank at gmail.com  Tue Apr 19 19:02:38 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Apr 19 19:02:39 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <004401c54539$7764e300$6702a8c0@hercules>
References: <dd3a065f050419061572eae303@mail.gmail.com>
	<004401c54539$7764e300$6702a8c0@hercules>
Message-ID: <dd3a065f05041919023e7b8595@mail.gmail.com>

I can't give examples, because I don't know what half the words mean. 
What is "beans" in java?  What /exactly/ is an interface, and how is
it supported in other languages?  If this is a "for java we're gonna
..." discusion, then I guess it doesn't matter since I'm aiming at C++
and eventually C.

The is to make sure we don't bind ANTLR to java unintentionally. 
There are other targets, and we need to make sure the overall design
is sound before spinning off into implementation and target language
details.

On 4/19/05, Micheal J <open.zone@virgin.net> wrote:
> > So, hows about other target languages that don't have some of
> > the stuff assumed by this discussion?
> 
> Please give an example (or two) of the kind of languages to which you are
> referring.
> 
> Micheal
> 
>
From point14 at magma.ca  Tue Apr 19 19:23:44 2005
From: point14 at magma.ca (Martin d Anjou)
Date: Tue Apr 19 19:23:58 2005
Subject: [antlr-interest] java.g: setting CommonAST.text vs. adding a child
Message-ID: <Pine.LNX.4.61.0504192210100.26932@ordimartin.mda.zapto.org>

Hello,

I see that in the java.g grammar classDefinition production, the class 
name (an IDENT) is built as a child of the classDefinition tree.

Why isn't the text of the classDefinition AST node set to the class name 
IDENT instead? What is the advantage of adding a child with the class 
name instead of setting the text property to the value of IDENT?

Here is the snippet I am talking about with IDENT as the second child:

classDefinition![AST modifiers]
  : "class" IDENT
    // it _might_ have a superclass...
    sc:superClassClause
    // it might implement some interfaces...
    ic:implementsClause
    // now parse the body of the class
    cb:classBlock
    {#classDefinition = #(#[CLASS_DEF,"CLASS_DEF"],modifiers,IDENT,sc,ic,cb);}
  ;

Thanks!
Martin
From scott at javadude.com  Tue Apr 19 19:38:03 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 19 19:38:12 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <dd3a065f050419061572eae303@mail.gmail.com>
Message-ID: <20050420020733.C0FD2290266@new.knowspam.net>

I assume you mean no interfaces? Some have abstract classes, but others
don't have anything like it.

You're screwed...

<kidding> 

The existing approach (AST interface) would be a problem anyway, no?

-- Scott


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Tuesday, April 19, 2005 9:16 AM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] On trees and JavaBeans, part 2: 
> tree creation
> 
> So, hows about other target languages that don't have some of 
> the stuff assumed by this discussion?
> 
> Lots of people have been talking about:
> > > > Also, you still need a tree node of some kind to actually 
> > > > implement a tree.  Perhaps Tree and TreeNode?
> > >
> > > Perhaps but a TreeModel-style interface doesn't care or 
> know about 
> > > the concrete types. That is encapsulated in 
> implementation classes.
> > 
> > Exactly. All args/return types are Object, integer, or String.
> 




From scott at javadude.com  Tue Apr 19 20:09:17 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 19 20:09:25 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <6.2.1.2.2.20050419133048.02994508@mail.jpl.nasa.gov>
Message-ID: <20050420023845.52797290553@new.knowspam.net>

First, I don't know if you realize that the Carrier model you propose is
*exactly* what TreeNodes are in Swing.

Swing allows you to do exactly what you're saying, *but* gives the option of
replacing the entire tree model yourself. This is TreeModel.

As usual, *I'm asking for an option* and getting shot down because y'all
don't happen to need it in the little boxes you're living in. Think bigger!

(Give me the *option* of not having to type the damned parens for + and
*!!!!!!!!!!!)

I'll write up an example so you can really see it in a few mins...


> Separating data and navigation interfaces is key to 
> supporting any sort of transformation--to transform, you need 
> to rewrap a data package with navigation information. 

This is *exactly* what the ASTModel I'm proposing does.

Think about it this way

1) We have some "tree data". The data can be in *any* tree form you like,
but we'll assume there are no cycles to avoid that argument for now

2) We want to parse the data using an antlr tree parser

3) Antlr needs to determine
   a) the token type of a node
   b) the children of a node
   Note that Antlr really doesn't need to know the *class* of the
   node as long as it can get this data.

4) We provide a mapping layer between Antlr and the data that interprets
Antlr's requests by looking at the real tree data and returning it.

5) Suppose antlr needs to create or modify nodes

6) we provide another mapping layer that interprets antlrs requests (create,
add/remove kids) by manipulating the real data

Perfect separation. Only ONE extra object needed to do the job instead of n
extra objects.

With a big tree, the overhead of carriers is significant.


> Swing's JTree is mis-designed because the navigation class 
> (JTree.DynamicUtilTreeNode) is referenced from the data 
> container, not the other way around.

Huh? Which Swing are you talking about? What do you mean by "navigation
referenced from the data container"? It's not. The navigation data
(TreeModel) is separate from the data, and is only called from the Jtree
(the presentation). The real data doesn't call the tree model.


Swing has a brilliant design for the tree that gives great model separation
from the UI.

JTree
  |  calls
  |
  V
TreeModel
  |  calls
  |
  V
Your real data

Think of TreeModel as a controller for the actual data, which is the real
model. All access to the data from the UI goes through the tree model. The
real data doesn't (and shouldn't) even know the TreeModel exists.



> There are two navigation
> paradigms:  you can either use a Cursor object to navigate 
> (in which case, the options are assigning an object to the 
> cursor, moving the cursor to one of the siblings or children 
> of the assigned object, returning a sibling/child of the 
> assigned object, or adding a child/sibling) or a Carrier.  

You're thinking in a box and missing a better option. The ASTModel option is
a complete separation of cursor and navigation.

Take the Jtree example.

Jtree asks the TreeModel for the root node, and holds that root node. This
is the "current node", or cursor.

Jtree renders the current node

Jtree asks the TreeModel to tell it the # of children, and asks for each in
turn. As it asks for each, they are the cursor. It renders them.

This is a really flexible and less expensive solution.


> [example snipped]
> That may look like a lot of overhead to create Carriers 
> willy-nilly, but in practice it probably is not--the creation 
> and destruction of Carriers is just a recycling which the 
> garbage collector will do as efficiently as one can do 
> manually or nearly so--when walking, Carriers are the only 
> dynamic element.

The trouble is there are extra objects to collect. More objects == more
frequent/longer collection == slower app. In the ASTModel example, there is
*one* ASTModel.

> Really, it is all just a matter of which access pattern you 
> are using, and the key abstraction is to separate out data 
> from navigation.

Later,
-- Scott





From scott at javadude.com  Tue Apr 19 20:59:50 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 19 20:59:57 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <20050420023845.52797290553@new.knowspam.net>
Message-ID: <20050420032917.370EB290525@new.knowspam.net>

I should mention regarding performance, the Carrier/Payload approach has
exactly the same execution overhead as the ASTModel approach. Both involve
one added level of indirection from the real data, causing an extra method
call when asking for children, data, whatever...

See http://javadude.com/misc/treesample.zip for an example of how JTree was
really intended to be used.

The example has a gui (don't bother looking at its code -- it was a quick
hack converted from an old VAJ sample I had). The app simply looks at that
UI as "an existing tree data structure", and presents its data on the screen
in a Jtree. (It ends up showing the layout structure of the UI).

The examples adapt it in to ways:

1) Using a TreeModel to adapt the entire tree at once. This requires one
instance for adaptation, and if you look at the code, it's pretty simple.
Straight adapter.

2) Using a TreeNode to adapt every component in the UI. This doubles the
number of objects in play, and if you look at the code, it's slightly more
complex (though not much) than the TreeModel approach. Every time we ask for
children they must be wrapped in a new adapter. (We could cache the
instances to reuse them, but that adds significant complexity to the app,
taking it even further from the simple #1.)


These examples are *exactly* what I'm talking about. #2 is the current
Carrier approach. The payload is the component data (we don't copy it), and
the carriers are all of the ComponentTreeNode instances.


#1 is the approach I'm recommending. Just by having the TreeModel interface,
I can create one adapter that manages the entire tree.


Suppose I want to write a tree parser that analyzes a GUI like the one I'm
presenting. Perhaps it wants to look at all components to be sure they have
an assigned name, and that containers are all using layout managers. We can
use either of the above approaches to do so.

Ter -- this is an example where ANTLR isn't creating the tree, but I want to
walk it. It's slightly contrived, but it's the type of concept that I really
need ANTLR for. (The prime example for me is the eclipse-generated Java
ASTs...)

Thoughts?
-- Scott




From Loring.G.Craymer at jpl.nasa.gov  Tue Apr 19 23:27:11 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Tue Apr 19 23:27:18 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <20050420023845.52797290553@new.knowspam.net>
Message-ID: <200504200627.j3K6RAKj015551@xmta3.jpl.nasa.gov>

Scott--

Take a step back and do a closer analysis.  You're missing the point.

> -----Original Message-----
> From: Scott Stanchfield [mailto:scott@javadude.com]
> Sent: Tuesday, April 19, 2005 8:09 PM
> To: 'Loring Craymer'; antlr-interest@antlr.org
> Subject: RE: [antlr-interest] On trees and JavaBeans, part 2: tree
> creation
> 
> First, I don't know if you realize that the Carrier model you propose is
> *exactly* what TreeNodes are in Swing.

Not true.  Data objects are not accessible from TreeNodes; instead data
objects must implement the TreeNode interface.  You have to typecast a
TreeNode before you can get at the associated data.

It is because of this simple difference that all of the navigation
capabilities you want can be provided at essentially no cost.

> 
> Swing allows you to do exactly what you're saying, *but* gives the option
> of
> replacing the entire tree model yourself. This is TreeModel.
> 
> As usual, *I'm asking for an option* and getting shot down because y'all
> don't happen to need it in the little boxes you're living in. Think
> bigger!

Wrong!  You've got your blinders on and are chasing windmills as a result.
Complexity for complexity's sake is not good design.  The Carrier/Payload
model provides all of the capability that you are campaigning for.

> 
> (Give me the *option* of not having to type the damned parens for + and
> *!!!!!!!!!!!)
> 
> I'll write up an example so you can really see it in a few mins...
> 
> 
> > Separating data and navigation interfaces is key to
> > supporting any sort of transformation--to transform, you need
> > to rewrap a data package with navigation information.
> 
> This is *exactly* what the ASTModel I'm proposing does.
> 
> Think about it this way

Been there; done that.  You are worrying many of the right issues, but you
are arguing for an alternative access model, not improved capabilities.

> 1) We have some "tree data". The data can be in *any* tree form you like,
> but we'll assume there are no cycles to avoid that argument for now
> 
> 2) We want to parse the data using an antlr tree parser
> 
> 3) Antlr needs to determine
>    a) the token type of a node
>    b) the children of a node
>    Note that Antlr really doesn't need to know the *class* of the
>    node as long as it can get this data.
> 
> 4) We provide a mapping layer between Antlr and the data that interprets
> Antlr's requests by looking at the real tree data and returning it.
> 
> 5) Suppose antlr needs to create or modify nodes
> 
> 6) we provide another mapping layer that interprets antlrs requests
> (create,
> add/remove kids) by manipulating the real data
> 
> Perfect separation. Only ONE extra object needed to do the job instead of
> n
> extra objects.
> 
> With a big tree, the overhead of carriers is significant.


You are still missing the point of having a payload interface.  Payloads
will normally persist through a complete transformation sequence, and should
almost limit object creation/destruction to Carriers during transformation
passes.  That means that they save on garbage collection overhead for
heterogeneous trees, at least, and reduce the cost of copying data from one
pass to the next to setting a reference.  The only case where carriers add
overhead is where you have a single pass for tree construction.

 

> 
> > Swing's JTree is mis-designed because the navigation class
> > (JTree.DynamicUtilTreeNode) is referenced from the data
> > container, not the other way around.
> 
> Huh? Which Swing are you talking about? What do you mean by "navigation
> referenced from the data container"? It's not. The navigation data
> (TreeModel) is separate from the data, and is only called from the Jtree
> (the presentation). The real data doesn't call the tree model.

No.  The data container implements TreeNode; TreeModel just provides an
access model which hides that ugly fact.

> 
> 
> Swing has a brilliant design for the tree that gives great model
> separation
> from the UI.
> 
> JTree
>   |  calls
>   |
>   V
> TreeModel
>   |  calls
>   |
>   V
> Your real data

Which implements the TreeNode interface ...

> Think of TreeModel as a controller for the actual data, which is the real
> model. All access to the data from the UI goes through the tree model. The
> real data doesn't (and shouldn't) even know the TreeModel exists.
> 

Yes, there is a complex access structure just because the navigation
interface is bound to the data.  Despite that, there is a point for having
TreeModels--they provide a place to attach and detach listeners to the tree.

> 
> > There are two navigation
> > paradigms:  you can either use a Cursor object to navigate
> > (in which case, the options are assigning an object to the
> > cursor, moving the cursor to one of the siblings or children
> > of the assigned object, returning a sibling/child of the
> > assigned object, or adding a child/sibling) or a Carrier.
> 
> You're thinking in a box and missing a better option. The ASTModel option
> is
> a complete separation of cursor and navigation.
> Take the Jtree example.
> 
> Jtree asks the TreeModel for the root node, and holds that root node. This
> is the "current node", or cursor.
> 
> Jtree renders the current node
> 
> Jtree asks the TreeModel to tell it the # of children, and asks for each
> in
> turn. As it asks for each, they are the cursor. It renders them.
> 
> This is a really flexible and less expensive solution.

No--it is a solution that provides the required complexity for the problem
that it solves.  At the lowest level, TreeNodes are quite analogous to ASTs
and have all of the associated warts.  TreeNodes, however, tend to be
persistent, while AST nodes have to be copied during each transformation
pass.  ANTLR trees have different associated costs than Swing trees.

> 
> > [example snipped]
> > That may look like a lot of overhead to create Carriers
> > willy-nilly, but in practice it probably is not--the creation
> > and destruction of Carriers is just a recycling which the
> > garbage collector will do as efficiently as one can do
> > manually or nearly so--when walking, Carriers are the only
> > dynamic element.
> 
> The trouble is there are extra objects to collect. More objects == more

You miss the point.  There is less manipulation of data pointers with
Payloads implemented as objects distinct from Carriers when doing
significant manipulations.  Objects created and destroyed are homogeneous,
which places less stress on the garbage collector resulting in faster
creation times and fewer compactions.  And, for platforms that do not have
efficient garbage collectors, releasing Carriers back to a CarrierFactory is
possible.

> frequent/longer collection == slower app. In the ASTModel example, there

Not if the garbage collector is reasonably well optimized.  Take a look back
at the recent posts on ASTPair recycling in C# and you'll see what I mean.

> is
> *one* ASTModel.

... and many ASTNodes, which makes it necessary to copy data fields during
tree transformations, and that costs in terms of performance.  You cannot
avoid costs associated with navigation; however, you can minimize the cost
of maintaining AST data across transformation passes.

For that matter, you can allow ASTs which implement both the Carrier and
Payload interfaces for single pass language processors.  Don't confuse
interfaces with classes--logical and physical structures can be quite
different.

--Loring

> > Really, it is all just a matter of which access pattern you
> > are using, and the key abstraction is to separate out data
> > from navigation.
> 
> Later,
> -- Scott
> 
> 
> 


From open.zone at virgin.net  Wed Apr 20 02:35:10 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 20 02:21:54 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <dd3a065f05041919023e7b8595@mail.gmail.com>
Message-ID: <004d01c5458c$3ef5c7c0$6702a8c0@hercules>

Bryan,

> I can't give examples, because I don't know what half the words mean. 
> What is "beans" in java?  What /exactly/ is an interface, and 
> how is it supported in other languages?  If this is a "for 
> java we're gonna ..." discusion, then I guess it doesn't 
> matter since I'm aiming at C++ and eventually C.

Whilst Scott's posts included references to beans, I've only been interested
in the idea of introducing an abstract model of a tree to support the use of
custom tree representations. We use a similar model with a customized ANTLR
2.x for C# and C++.

For C++, an interface is synonymous with an abstract base class that has
only pure virtual functions (just like the existing AST "interface" in
AST.hpp). In C, it may be a struct that has only function pointer members.

> The is to make sure we don't bind ANTLR to java unintentionally. 
> There are other targets, and we need to make sure the overall 
> design is sound before spinning off into implementation and 
> target language details.

It seems this change might be doable at the codegen level only - i.e. by
supplying an alternative codegen template. However, it would be *much*
better if were supported by default in the standard ANTLR package for
supported languages.

I can't honestly thing of a language that would have problems with the extra
level of abstraction this proposal entails.

Cheers,

Micheal

From francis.andre at easynet.fr  Wed Apr 20 02:54:07 2005
From: francis.andre at easynet.fr (Francis ANDRE)
Date: Wed Apr 20 02:54:13 2005
Subject: [antlr-interest] [2.7.5/c++]: static TokenRef* getRef(const Token*
	p); Definition missing from source tree
Message-ID: <004301c5458e$e51701d0$0a02a8c0@asterix>

Hi

I am trying to rebuild a dll version of antlr 2.7.5 and got lots of 
undefined symbol for

static TokenRef* getRef(const Token* p);

and as a matter of fact, it is not defined elsewhere in the source tree.

Regards

FA


From open.zone at virgin.net  Wed Apr 20 03:07:56 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 20 02:54:41 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <200504200627.j3K6RAKj015551@xmta3.jpl.nasa.gov>
Message-ID: <004e01c54590$d3049ff0$6702a8c0@hercules>

Loring,

> > Swing allows you to do exactly what you're saying, *but* gives the 
> > option of replacing the entire tree model yourself. This is 
> TreeModel.
> > 
> > As usual, *I'm asking for an option* and getting shot down because 
> > y'all don't happen to need it in the little boxes you're living in. 
> > Think bigger!
> 
> Wrong!  You've got your blinders on and are chasing windmills 
> as a result. Complexity for complexity's sake is not good 
> design.  The Carrier/Payload model provides all of the 
> capability that you are campaigning for.

Not quite. Tree navigation classess must implement the Carrier interface.
Arbitary tree representations are therefore not supported. A TreeModel-style
abstraction would remove that restriction and, it would still wok perfectly
with the Carrier/Payload model.

> > > Swing's JTree is mis-designed because the navigation class
> > > (JTree.DynamicUtilTreeNode) is referenced from the data 
> container, 
> > > not the other way around.
> > 
> > Huh? Which Swing are you talking about? What do you mean by 
> > "navigation referenced from the data container"? It's not. The 
> > navigation data
> > (TreeModel) is separate from the data, and is only called 
> from the Jtree
> > (the presentation). The real data doesn't call the tree model.
> 
> No.  The data container implements TreeNode; TreeModel just 
> provides an access model which hides that ugly fact.

The data container doesn't *have* to implement TreeNode. You could have
separate TreeNode and Payload instances (the data container) and the
TreeModel abstraction would still work fine.

TreeModel isn't bound to (and doesn't know about) TreeNode.

> > > There are two navigation
> > > paradigms:  you can either use a Cursor object to 
> navigate (in which 
> > > case, the options are assigning an object to the cursor, 
> moving the 
> > > cursor to one of the siblings or children of the assigned object, 
> > > returning a sibling/child of the assigned object, or adding a 
> > > child/sibling) or a Carrier.
> > 
> > You're thinking in a box and missing a better option. The ASTModel 
> > option is a complete separation of cursor and navigation.
> > Take the Jtree example.
> > 
> > Jtree asks the TreeModel for the root node, and holds that 
> root node. 
> > This is the "current node", or cursor.
> > 
> > Jtree renders the current node
> > 
> > Jtree asks the TreeModel to tell it the # of children, and asks for 
> > each in turn. As it asks for each, they are the cursor. It renders 
> > them.
> > 
> > This is a really flexible and less expensive solution.
> 
> No--it is a solution that provides the required complexity 
> for the problem that it solves.  At the lowest level, 
> TreeNodes are quite analogous to ASTs and have all of the 
> associated warts.  TreeNodes, however, tend to be persistent, 
> while AST nodes have to be copied during each transformation 
> pass.  ANTLR trees have different associated costs than Swing trees.

In the context of the discussion about introducing a tree abstraction into
ANTLR, this comments about TreeNode and Swing trees are strawmen. A
TreeModel-style abstraction has no dependence on TreeNodes or Swing trees,
it could use Carriers/Payloads (or indeed our old-style ASTs) directly if
that is all one cared about.

> > The trouble is there are extra objects to collect. More objects == 
> > more
> 
> You miss the point.

Yes he does. A TreeModel-style abstraction isn't an alternative to the
Carrier/Payload model. It is a fa?ade that allows one to use Carrier/Payload
or any other model one cares to implement.

> There is less manipulation of data 
> pointers with Payloads implemented as objects distinct from 
> Carriers when doing significant manipulations.  Objects 
> created and destroyed are homogeneous, which places less 
> stress on the garbage collector resulting in faster creation 
> times and fewer compactions.  And, for platforms that do not 
> have efficient garbage collectors, releasing Carriers back to 
> a CarrierFactory is possible.

Indeed.

> > is
> > *one* ASTModel.
> 
> ... and many ASTNodes, which makes it necessary to copy data 
> fields during tree transformations, and that costs in terms 
> of performance.

Not quite. An ASTNode abstraction might mix navigation and data or, it might
separate them as the Carrier/Payload model does. It isn't accurate to claim
that it is *neccesary* to copy data. That obviously depends on the [tree]
node abstraction in use and the use of a TreeModel-style abstraction doesn't
change that fact.

>  You cannot avoid costs associated with 
> navigation; however, you can minimize the cost of maintaining 
> AST data across transformation passes.
> 
> For that matter, you can allow ASTs which implement both the 
> Carrier and Payload interfaces for single pass language 
> processors.  Don't confuse interfaces with classes--logical 
> and physical structures can be quite different.

I could offer the same advise to you Loring  ;-)

A TreeModel-style tree abstraction can be implemented to use the
Carrier/Payload model. Other tree navigation/data models can be
implemented/supported just as easily.

Cheers,

Micheal

From scott at javadude.com  Wed Apr 20 04:24:26 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 20 04:24:38 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <200504200627.j3K6RAKj015551@xmta3.jpl.nasa.gov>
Message-ID: <20050420105348.1D69B2901F9@new.knowspam.net>

To avoid folks whining about the length of digest posts, I'm going to
generically address your misunderstandings...

1) You need to examine the code I posted last night.

2) TreeNode and TreeModel SHOULD NOT be the *actual* data. The should just
be used to ADAPT existing data (again, see the example code -- the GUI I
create and whose components I display in the Jtree *Do not* implement
TreeNode...)

3) ANTLR ISN'T THE ONLY WAY TO CREATE TREES.

I don't want to have to force my data to "be" antlr objects, NOR do I want
to create an adapter PER NODE. Using my proposal, we would be able to
process ANY existing tree (without cycles)

4) You're thinking of a single-pass *program*, which seems to be the same
box Ter is thinking in.
(This is for all of your "the garbage collector is reasonably optimized"
lines. I'm talking about scenarios where the garbage collector will run
hundreds or more times while the program is running)

To make the problem clear:

I want to use this for processing an eclipse AST, as do many of the folks
I've chatted with on the eclipse mailing lists. ASTs will be generated
hundreds or thousands of times during an eclipse session.

Every time you pause during typing, an AST is created for syntax
highlighting and error analysis. I want to create ONE additional object to
interpret that AST with an antlr tree parser for some additional anaysis.
I've brought up on the eclipse mailing lists using ANTLR which was met with
great enthusiasm, but it's WAY too much overhead with the ANTLR 2.0 AST node
req or 3.0 carrier/payload design. It would require an adapter PER eclipse
AST node.

There's no way I'd propose making eclipse ASTs implement ANTLR's AST
interface. I'd be laughed out of the mailing list, because everyone there
knows adapters are the right approach, and that this is only feasible if
ANTLR trees work the same way Swing trees do.

5) As for Swing You TRULY do not get Swing's tree.

TreeNodes are **optional**. YOU DON'T NEED THEM TO DO JTREE. See the example
code I posted for how you SHOULD do adaptation of an existing structure.
(See the GoodExample.java)

You have a CHOICE in swing:

a) Use the existing DefaultTreeModel and adapt existing data using TreeNodes
   Cost: an extra tree node adapter PER real node

b) Use the existing DefaultTreeModel and change your existing data to
implement TreeNode
   Cost: modification of real data nodes, injecting a Swing dependency into
them
         * you may not have access to modify them
         * I think it's bad design to integrate the presentation model 
           (TreeModel/TreeNode) with the real model
         
c) Use your own TreeModel (without TreeNodes) to adapt the entire tree
  Cost: ONE new object. The data doesn't change

> > Jtree  --> TreeModel --> Your Real Data
> Which implements the TreeNode interface ...

NO!!!!! The data DOES NOT NEED TO. You obviously didn't look at my example
code.


Ter -- please look at the example I posted. I hope you "get it" and
implement this for 3.0. Otherwise I'll need to maintain a mod to ANTLR that
I'd really rather not.

This is no extra cost to ANTLR or use of ANTLR ASTs, but it opens up ANTLR a
whole new realm of application.

Frustrated,
-- Scott





From scott at javadude.com  Wed Apr 20 04:34:43 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 20 04:34:52 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <004e01c54590$d3049ff0$6702a8c0@hercules>
Message-ID: <20050420110405.0CB2229020B@new.knowspam.net>

> > > The trouble is there are extra objects to collect. More 
> objects == 
> > > more
> > 
> > You miss the point.
> 
> Yes he does. A TreeModel-style abstraction isn't an 
> alternative to the Carrier/Payload model. It is a fa?ade that 
> allows one to use Carrier/Payload or any other model one 
> cares to implement.

I assume you mean Loring missed the point? Sometimes the indentation is
weird...

This is exactly what I propose. Make the code that walks the carrier/payload
combo implement ASTModel as the DefaultASTModel in ANTLR.

That allows folks to use carrier/payload if they want, or completely replace
the carrier/payload system with their own tree navigation. 

> > There is less manipulation of data
> > pointers with Payloads implemented as objects distinct from 
> Carriers 
> > when doing significant manipulations.  Objects created and 
> destroyed 
> > are homogeneous, which places less stress on the garbage collector 
> > resulting in faster creation times and fewer compactions.  And, for 
> > platforms that do not have efficient garbage collectors, releasing 
> > Carriers back to a CarrierFactory is possible.
> 
> Indeed.

But not necessary.

Pooling is nice, but adds a *ton* of complexity and potential bugs
(especially b/c it's way too easy to forget to release loaned objects,
resulting in a leak...)

It?s much better to not have to create those extra unnecessary objects in
the first place.

Later,
-- Scott




From open.zone at virgin.net  Wed Apr 20 05:15:58 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 20 05:02:42 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <20050420105348.1D69B2901F9@new.knowspam.net>
Message-ID: <005301c545a2$b5db16e0$6702a8c0@hercules>

Scott,

> 4) You're thinking of a single-pass *program*, which seems to 
> be the same box Ter is thinking in. (This is for all of your 
> "the garbage collector is reasonably optimized" lines. I'm 
> talking about scenarios where the garbage collector will run 
> hundreds or more times while the program is running)

Regardless of how often the GC runs, Loring's statement regarding GC
performance (and the effect that having Carriers has on it) remains
relevant. 

The "overhead of carriers" as you put it is similar between the current
Carrier/Payload model and any other tree representation you propose that
also separates navigation and data. It's worth remembering that Carrier and
Payload are abstractions (i.e. interfaces).

> There's no way I'd propose making eclipse ASTs implement 
> ANTLR's AST interface. I'd be laughed out of the mailing 
> list, because everyone there knows adapters are the right 
> approach, and that this is only feasible if ANTLR trees work 
> the same way Swing trees do.

Adapters are NOT *always* the right approach as you seem to be suggesting
but, in the particular case of ANTLR trees, it can be argued that the use of
a TreeModel-like tree abstraction is a better option that 2.x's AST
interface (or 3.x's Carrier interface). This is because it allows ANTLR to
be used with [almost] any tree representation. And it supports ANTLR v3's
Carrier/Payload model very capably. And I've yet to see any performance
demons...

> Ter -- please look at the example I posted. I hope you "get 
> it" and implement this for 3.0. Otherwise I'll need to 
> maintain a mod to ANTLR that I'd really rather not.

As I mentioned in another message, this can probably be implemented as an
alternative codegen template in v3 but, ANTLR v3 would be much better if it
were a part of the standard package. We did something similar with a v2.x
fork and for our use cases there were no adverse performance issues.

> This is no extra cost to ANTLR or use of ANTLR ASTs, but it 
> opens up ANTLR a whole new realm of application.

Actually there is a cost as it involves at least an extra level of
indirection on each access. True, it's a minor cost in most cases but, it
exists nonetheless. I'd argue however that the benefits to ANTLR and it's
users of this flexibility outweigh the cost.

Cheers,

Micheal

From open.zone at virgin.net  Wed Apr 20 05:37:18 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Apr 20 05:24:02 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <20050420110405.0CB2229020B@new.knowspam.net>
Message-ID: <005601c545a5$b0baf510$6702a8c0@hercules>

Scott,

> > > > The trouble is there are extra objects to collect. More
> > objects ==
> > > > more
> > > 
> > > You miss the point.
> > 
> > Yes he does. A TreeModel-style abstraction isn't an
> > alternative to the Carrier/Payload model. It is a fa?ade that 
> > allows one to use Carrier/Payload or any other model one 
> > cares to implement.
> 
> I assume you mean Loring missed the point? Sometimes the 
> indentation is weird...

No, I meant you  ;-)

Your comment that there are extra/more objects to collect in the
Carrier/Payload model misses the point because:
(a) TreeModel-style abstraction is only an adapter - it doesn't remove the
need for an actual tree representation which may be a Carrier/Payload model.
(b) Carrier and Payload are interfaces - they may be implemented by the same
object instance hence no extraneous GC.

> > > There is less manipulation of data
> > > pointers with Payloads implemented as objects distinct from
> > Carriers
> > > when doing significant manipulations.  Objects created and
> > destroyed
> > > are homogeneous, which places less stress on the garbage collector
> > > resulting in faster creation times and fewer compactions. 
>  And, for 
> > > platforms that do not have efficient garbage collectors, 
> releasing 
> > > Carriers back to a CarrierFactory is possible.
> > 
> > Indeed.
> 
> But not necessary.
> 
> Pooling is nice, but adds a *ton* of complexity and potential 
> bugs (especially b/c it's way too easy to forget to release 
> loaned objects, resulting in a leak...)

I understand Loring to be recommending pooling (via a CarrierFactory) only
on platforms that do not have an efficient GC system. This is necessary and
once again, I'd argue that the benefits (in performance this time) outweighs
the [implementation and usage] cost of the pools.

> It?s much better to not have to create those extra 
> unnecessary objects in the first place.

If by "unnecessary objects" you meant CarrierFactory objects then see
comment above.

If however, you meant Carrier objects then please explain how you might
implement an structure that represents trees and separates navigation from
data. IOW, explain how you might design an alternative tree structure that a
TreeModel-style interface can adapt.

Even Eclipse's AST types follow the Carrier/Payload model in some sense. 

Cheers,

Micheal

From ewbank at gmail.com  Wed Apr 20 05:47:47 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Apr 20 05:47:51 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
In-Reply-To: <20050420020733.C0FD2290266@new.knowspam.net>
References: <dd3a065f050419061572eae303@mail.gmail.com>
	<20050420020733.C0FD2290266@new.knowspam.net>
Message-ID: <dd3a065f05042005474bdbaf9@mail.gmail.com>

I guess I misunderstood this thread; getting it entangled with the
other thread about generic ANTLR actions.   In the eternal words of
Roseanne Rosanadana...

#   # #### #   # #### ####        #   # # #   # ###
##  # #    #   # #    #  #        ## ## # ##  # #  #
# # # ###  #   # ###  ###         # # # # # # # #  #
#  ## #     # #  #    #  #        #   # # #  ## #  #
#   # ####   #   #### #   #       #   # # #   # ###

Thanks, Scott for the comment - it made me reread the thread :-)

On 4/19/05, Scott Stanchfield <scott@javadude.com> wrote:
> You're screwed...
From serafettin_sentuerk at intergral.com  Wed Apr 20 06:50:54 2005
From: serafettin_sentuerk at intergral.com (Serafettin Senturk)
Date: Wed Apr 20 08:34:59 2005
Subject: [antlr-interest] Java 1.5 Grammar
Message-ID: <ANEFKENHALPOILMBNJFGMEBLCAAA.serafettin_sentuerk@intergral.com>


 Hello,

 When i get some part of Java 1.5 grammar and compile it, i retrieve my
lexer and parser java source files. But there are the following problems in
my source files when i try to run them.

java.lang.Error: Unresolved compilation problems:

	Syntax error on token "internal", delete this token
	Char cannot be resolved
	Char cannot be resolved
	assertEnabled cannot be resolved
	LITERAL_assert cannot be resolved
	enumEnabled cannot be resolved
	LITERAL_enum cannot be resolved
	TRIPLE_DOT cannot be resolved

	at recognition.CfscriptLexer.<init>(CfscriptLexer.java:3)
	at recognition.CFScriptMain.main(CFScriptMain.java:31)
Exception in thread "main"


  Maybe, it is because of that built-in assertEnabled or enumEnabled
functions and things like that. What can i do to avoid this problems? how
can i make the system resolve this stuff?

  Regards,
 Serafettin




From mail at martin-probst.com  Wed Apr 20 09:02:18 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Apr 20 09:02:46 2005
Subject: [antlr-interest] Java 1.5 Grammar
In-Reply-To: <ANEFKENHALPOILMBNJFGMEBLCAAA.serafettin_sentuerk@intergral.com>
Message-ID: <20050420160244.8C051DCC66@www.antlr.org>

Hi,

> java.lang.Error: Unresolved compilation problems:
> 
> 	Syntax error on token "internal", delete this token
> 	Char cannot be resolved
> 	Char cannot be resolved
> 	assertEnabled cannot be resolved
> 	LITERAL_assert cannot be resolved
> 	enumEnabled cannot be resolved
> 	LITERAL_enum cannot be resolved
> 	TRIPLE_DOT cannot be resolved
> 
> 	at recognition.CfscriptLexer.<init>(CfscriptLexer.java:3)
> 	at recognition.CFScriptMain.main(CFScriptMain.java:31)
> Exception in thread "main"

These are errors resulting in compilation problems within Eclipse. E.g. if
Eclipse cannot compile a file because of an error within the java file, it
performs a partial compilation that will result in this error if the class
is executed.

It actually looks as if you have classpath problems, but that's a guess.

Try to find the errors within Eclipse (marked with a red sign) and fix them.

>   Maybe, it is because of that built-in assertEnabled or 
> enumEnabled functions and things like that. What can i do to 
> avoid this problems? how can i make the system resolve this stuff?

Probably not as it's a compilation problem.

Regards,
Martin

From eprice at vettro.com  Wed Apr 20 09:18:09 2005
From: eprice at vettro.com (eprice@vettro.com)
Date: Wed Apr 20 10:17:15 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <200504200627.j3K6RAKj015551@xmta3.jpl.nasa.gov> (Loring
	Craymer's message of "Tue, 19 Apr 2005 23:27:11 -0700")
References: <200504200627.j3K6RAKj015551@xmta3.jpl.nasa.gov>
Message-ID: <m364yhwhfi.fsf@volatile.vettro.com>

>> Swing has a brilliant design for the tree that gives great model
>> separation from the UI.
>> 
>> JTree
>>   |  calls
>>   |
>>   V
>> TreeModel
>>   |  calls
>>   |
>>   V
>> Your real data
> 
> Which implements the TreeNode interface ...

This seems like a misunderstanding.

If I understand Scott's proposal correctly, the "real data" does *not*
have to implement any particular interface.  Instead, the TreeModel
provides a single interface for the entire tree which adapts the "real
data" however it wants.

-Ed
From choudhari at gmail.com  Wed Apr 20 13:43:13 2005
From: choudhari at gmail.com (swaroop choudhari)
Date: Wed Apr 20 13:43:16 2005
Subject: [antlr-interest] HTML grammer
Message-ID: <e90dd7da05042013436c562b86@mail.gmail.com>

hello,


i was looking for a html grammer on the antlr sie.
looks like the grammer file there is incorrect...(/grammer/html/html.g)

can someone point me the correct link.

regards
Choudhari
From Bharath.Sundararaman at starthis.com  Wed Apr 20 14:56:02 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Wed Apr 20 14:56:09 2005
Subject: [antlr-interest] Grammar debugging.
Message-ID: <B1180416E5C44E49AE556D23DBB45B290615AF@webmail.starthis.com>

Antlers,

I tried to debug my grammar by following the instructions on this site:
http://www.antlr.org/article/parse.trees/index.tml but I got the
following exception:

*************
java.util.EmptyStackException	at java.util.Stack.peek(Unknown Source)
at
this line:	ParseTreeRule root =
(ParseTreeRule)currentParseTreeRoot.peek();
*************

Any ideas? I know that the new ANTLR plug-in and Parseview versions will
be out soon. Can't wait, I guess.

Thanks,

B.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of swaroop choudhari
Sent: Wednesday, April 20, 2005 3:43 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] HTML grammer

hello,


i was looking for a html grammer on the antlr sie.
looks like the grammer file there is incorrect...(/grammer/html/html.g)

can someone point me the correct link.

regards
Choudhari
From ttest at gmx.de  Wed Apr 20 14:59:38 2005
From: ttest at gmx.de (ttest)
Date: Wed Apr 20 14:59:45 2005
Subject: [antlr-interest] Wiki Markup
Message-ID: <20050420215942.E0E65DC75C@www.antlr.org>

Hi,

I'm trying to parse a wiki like markup language and to translate that to
HTML. At the moment I'm defining my grammar and therefore I'm trying to get
together my parser and lexer rules.
One point I don't understand is how to decide whether something is a lexer
rule or a parser rule.

Lets say my markup is something like:

blabla, bla blablabla. blabla [[bold:blablabla]] bla bal.

and I want to convert that to:

blabla, bla blablabla. blabla <b>blablabla</b> bla bal.

What would my rules look like?

Here's what I've got so far but somehow I'm stuck with this.

/*
 * Parser
 */
 
class MarkupParser extends Parser;

markup
	:	(	element
		|	Text
		)*
	;

element
	:	ElementBegin elementName ':' elementAttributes ElementEnd
	;

elementName
	:	"bold"
	|	"italic"
	|	"headline"
	;

elementAttributes
	:	elementAttributeValue ('|' elementAttributeValue)*
	;

elementAttributeValue
	:	('a'..'z'|'A'..'Z')+
	;


/*
 * Lexer
 */

class MarkupLexer extends Lexer;

ElementBegin
	:	"[["
	;

ElementEnd
	:	"]]"
	;

Text
	:	('a'..'z'|'A'..'Z'|' '|'\n'|'\r')+
	;

Any help or suggestions are appreciated:

Thanks!

	Christian

From scott at javadude.com  Wed Apr 20 20:15:51 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 20 20:16:00 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <005301c545a2$b5db16e0$6702a8c0@hercules>
Message-ID: <20050421024500.F2F2629042B@new.knowspam.net>

> The "overhead of carriers" as you put it is similar between 
> the current Carrier/Payload model and any other tree 
> representation you propose that also separates navigation and 
> data. It's worth remembering that Carrier and Payload are 
> abstractions (i.e. interfaces).

Nope. The thing I'm saying is that because we're regnerating the AST
hundreds of times per session, that means we'd have to generate the carrier
adapter implementations for those over and over again, which means they get
collected over and over again.

It's not the number of times the GC runs that's the problem; it's the number
of objects that the GC will have to collect.

> Adapters are NOT *always* the right approach as you seem to 
> be suggesting but,

I'd never suggest that one pattern is the best for all programming problems.
But for this example (eclipse asts) it's the obvious choice.


> > This is no extra cost to ANTLR or use of ANTLR ASTs, but it 
> opens up 
> > ANTLR a whole new realm of application.
> 
> Actually there is a cost as it involves at least an extra 
> level of indirection on each access. True, it's a minor cost 
> in most cases but, it exists nonetheless. I'd argue however 
> that the benefits to ANTLR and it's users of this flexibility 
> outweigh the cost.

Actually you're right (on all counts).

ANTLR -> DeafultASTModel -> Carrier -> data
ANTLR -> Custom ASTModel -> data

vs

ANTLR -> Carrier -> data

And as you say, the cost is negligible.

Later,
-- Scott




From scott at javadude.com  Wed Apr 20 20:26:06 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 20 20:26:16 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <m364yhwhfi.fsf@volatile.vettro.com>
Message-ID: <20050421025517.1C7152904EF@new.knowspam.net>

You understand correctly!
-- Scott

> >> Jtree -> TreeModel -> Real Data
> > [real data] implements the TreeNode interface ...
> 
> This seems like a misunderstanding.
> 
> If I understand Scott's proposal correctly, the "real data" 
> does *not* have to implement any particular interface.  
> Instead, the TreeModel provides a single interface for the 
> entire tree which adapts the "real data" however it wants.
> 
> -Ed
> 




From scott at javadude.com  Wed Apr 20 20:26:06 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 20 20:26:22 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <005601c545a5$b0baf510$6702a8c0@hercules>
Message-ID: <20050421025518.B71242904C3@new.knowspam.net>

> No, I meant you  ;-)
> 
> Your comment that there are extra/more objects to collect in 
> the Carrier/Payload model misses the point because:
> (a) TreeModel-style abstraction is only an adapter - it 
> doesn't remove the need for an actual tree representation 
> which may be a Carrier/Payload model.
> (b) Carrier and Payload are interfaces - they may be 
> implemented by the same object instance hence no extraneous GC.

Not what I'm talking about. My examples assume that you *don't* want to (or
can't) just implement the carrier interface in the actual tree data, like
the case of trying to walk an eclipse AST.

Thus, the carrier approach requires an adapter per actual tree node.

Every time I create a tree I pitch the previous ones (or go through the
risky pooling lease/return dance) which the GC needs to eat.


> I understand Loring to be recommending pooling (via a 
> CarrierFactory) only on platforms that do not have an 
> efficient GC system. This is necessary and once again, I'd 
> argue that the benefits (in performance this time) outweighs 
> the [implementation and usage] cost of the pools.

Again, nothing to do with GC efficiency; everything to do with # objects
created.

Let's take some guesses:

10 refreshes per minute while editing in eclipse
500 AST nodes generated for the class in the buffer
500 carrier nodes generated

Over a 4-hour session, that's 1.2 million AST nodes, and 1.2 million carrier
nodes.

I'd say that's significant work for the GC to collect... 

> If however, you meant Carrier objects then please explain how 
> you might implement an structure that represents trees and 
> separates navigation from data. IOW, explain how you might 
> design an alternative tree structure that a TreeModel-style 
> interface can adapt.

Look at the example code I posted that shows how I adapted a swing GUI into
a Jtree. The GUI components are the tree data, and the ComponentTreeModel
supplies navigation on top of it for the Jtree.

We can do the exact same thing for ASTs in ANTLR.

> Even Eclipse's AST types follow the Carrier/Payload model in 
> some sense. 

They're just a "simple" hetero tree structure.

Later,
-- Scott




From Loring.G.Craymer at jpl.nasa.gov  Thu Apr 21 01:05:41 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Thu Apr 21 01:05:44 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <20050420105348.1D69B2901F9@new.knowspam.net>
Message-ID: <200504210805.j3L85eET015535@xmta1.jpl.nasa.gov>

> -----Original Message-----
> From: Scott Stanchfield [mailto:scott@javadude.com]
> Sent: Wednesday, April 20, 2005 4:24 AM
> To: 'Loring Craymer'; antlr-interest@antlr.org
> Subject: RE: [antlr-interest] On trees and JavaBeans, part 2: tree
> creation
> 
> To avoid folks whining about the length of digest posts, I'm going to
> generically address your misunderstandings...
> 
> 1) You need to examine the code I posted last night.
> 
> 2) TreeNode and TreeModel SHOULD NOT be the *actual* data. The should just
> be used to ADAPT existing data (again, see the example code -- the GUI I
> create and whose components I display in the Jtree *Do not* implement
> TreeNode...)
> 
> 3) ANTLR ISN'T THE ONLY WAY TO CREATE TREES.

Of course not.  For arbitrary trees, such as we are discussing, there are
two logical models:
	1.)  Every node is a (possibly empty) vector of children.  This is
the logical model that Swing uses.
	2.)  Every node has siblings and children. This is the model that
ANTLR uses.

Each of these models has advantages and disadvantages.  Model 1 is optimized
for random access to children and static construction (have all children
known; then allocate the vector); model 2 is optimized for sequential access
of children, and freeform construction of trees (add a node whenever it
makes sense).  Imposing a model 1 view on ANTLR would impose a performance
penalty.   Adaptors can coerce either model into the other model view.

ANTLR sequentially accesses the children of a node and does freeform
construction.  Ter made the right design decision in the first place;
switching to a model which would force suboptimal implementation without
compelling justification is wrong.

> 
> I don't want to have to force my data to "be" antlr objects, NOR do I want
> to create an adapter PER NODE. Using my proposal, we would be able to
> process ANY existing tree (without cycles)
> 
> 4) You're thinking of a single-pass *program*, which seems to be the same
> box Ter is thinking in.
> (This is for all of your "the garbage collector is reasonably optimized"
> lines. I'm talking about scenarios where the garbage collector will run
> hundreds or more times while the program is running)

Sorry, I thought you were considering real world applications.  A Java-based
enterprise server will run thousands of transactions per second and hundreds
to thousands of object create/deletes per transaction.  Garbage collection
algorithms and implementations have gotten quite robust over the years.
J2EE works only because garbage collectors can handle an indefinite number
of create/deletes over the lifetime of a single application.

The GC is a critical part of any Java implementation; I would be surprised
if any vendor did not do exhaustive stress testing of the GC--at least
enough to reassure any big customers.

> To make the problem clear:
> 
> I want to use this for processing an eclipse AST, as do many of the folks
> I've chatted with on the eclipse mailing lists. ASTs will be generated
> hundreds or thousands of times during an eclipse session.
> 
> Every time you pause during typing, an AST is created for syntax
> highlighting and error analysis. I want to create ONE additional object to
> interpret that AST with an antlr tree parser for some additional anaysis.
> I've brought up on the eclipse mailing lists using ANTLR which was met
> with
> great enthusiasm, but it's WAY too much overhead with the ANTLR 2.0 AST
> node
> req or 3.0 carrier/payload design. It would require an adapter PER eclipse
> AST node.
> 
> There's no way I'd propose making eclipse ASTs implement ANTLR's AST
> interface. I'd be laughed out of the mailing list, because everyone there
> knows adapters are the right approach, and that this is only feasible if
> ANTLR trees work the same way Swing trees do.

As I pointed out above, Swing assumes a logical tree structure that differs
from ANTLR's.  Changing ANTLR's logical model to a structure that is less
optimal for tree walking does not make sense.  Incorporating an unneeded
adaptor into ANTLR makes even less sense.  It adds no new
functionality--since you can get adaptor functionality through an
implementation of the Carrier interface--and adds an extra object reference
and method call to getNextSibling() or getFirstChild().  Good design
practice is to optimize for the common cases first and to provide support
for the abnormal cases second.

Oddly enough, if you are going to be able to use ANTLR 3 for walking a
foreign tree, you should be able to write an AST class as an adaptor (per
node) for that foreign tree in ANTLR 2.  The only thing stopping you is fear
of the garbage collector.

> 5) As for Swing You TRULY do not get Swing's tree.
> 
> TreeNodes are **optional**. YOU DON'T NEED THEM TO DO JTREE. See the
> example
> code I posted for how you SHOULD do adaptation of an existing structure.
> (See the GoodExample.java)

You mean the line that reads
		f.getContentPane().add(new JScrollPane(new JTree(new
DefaultTreeModel(new ComponentTreeNode(ftp)))));

coupled with the definition of ComponentTreeNode which begins

public class ComponentTreeNode implements TreeNode {

or is there some other code that I should be looking for TreeNodes in?


> You have a CHOICE in swing:
> 
> a) Use the existing DefaultTreeModel and adapt existing data using
> TreeNodes
>    Cost: an extra tree node adapter PER real node
> 
> b) Use the existing DefaultTreeModel and change your existing data to
> implement TreeNode
>    Cost: modification of real data nodes, injecting a Swing dependency
> into
> them
>          * you may not have access to modify them
>          * I think it's bad design to integrate the presentation model
>            (TreeModel/TreeNode) with the real model
> 
> c) Use your own TreeModel (without TreeNodes) to adapt the entire tree
>   Cost: ONE new object. The data doesn't change
> 
> > > Jtree  --> TreeModel --> Your Real Data
> > Which implements the TreeNode interface ...
> 
> NO!!!!! The data DOES NOT NEED TO. You obviously didn't look at my example
> code.
> 

One of us didn't.

> 
> Ter -- please look at the example I posted. I hope you "get it" and
> implement this for 3.0. Otherwise I'll need to maintain a mod to ANTLR
> that
> I'd really rather not.
> 
> This is no extra cost to ANTLR or use of ANTLR ASTs, but it opens up ANTLR
> a
> whole new realm of application.

No it doesn't.  Arbitrary trees can be handled with ANTLR 2.  All you need
to do is to write an ASTWrapper class which implements the AST interface and
wraps nodes returned by getFirstChild() or getNextSibling(), wrap the tree
root with an ASTWrapper, and then invoke a method on the wrapper.  [Well,
you do have to set the default AST type in the tree walker also.]

--Loring

> 
> Frustrated,
> -- Scott
> 
> 
> 


From ewbank at gmail.com  Thu Apr 21 01:13:16 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Apr 21 01:13:19 2005
Subject: [antlr-interest] GC in C++?
Message-ID: <dd3a065f0504210113fb54eb@mail.gmail.com>

Can anyone recommend a good garbage collection package that will play
well with ANTLR's C++ generated code?

Thanks,
- Bryan Ewbank
From ewbank at gmail.com  Thu Apr 21 01:33:15 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Apr 21 01:33:19 2005
Subject: [antlr-interest] idioms for walking multiple trees
Message-ID: <dd3a065f05042101334eef7a5d@mail.gmail.com>

Hi Folks,

I'm doing some multi-tree walking, and am curious what ANTLR idioms
other people use to accomplish this.  The grammar fragment I'm using
looks something like this - can't share the true source code :-(.

It feels lisp'ish to me, but perhaps that's okay given what I'm doing.

anyone have something cleaner/neater?

      1 /**
      2  * Walks a simple name/value pair:
      3  *      (NAME_VALUE name value)
      4  *
      5  * Takes an additional dictionary argument
      6  *      ( (NAME_VALUE name value) (NAME_VALUE name value) ... )
      7  *
      8  * Resultant tree, ##, is:
      9  * - the walked tree if name is not in dictionary
     10  * - the dictionary entry, if name is in the dictionary.
     11  */
     12 replace [AST actual_arg]
     13 {
     14     bool foundIt = false;
     15     AST newval; 
     16 }
     17 :
     18     #(NAME_VALUE lhs:name
     19         { newval = lookup(actual_arg, #lhs->getText(), foundIt); }
     20         (
     21             {foundIt}?
     22             /* replace with dictionary entry */
     23             { ## = newval; }
     24         |
     25             /* no match; leave it alone */
     26             rhs:value
     27         )
     28     )
     29 ;
     30 
     31 lookup [const std::string &argname, bool & foundIt]
     32 returns [AST tree]
     33 {
     34     foundIt = false;
     35 }
     36 :
     37     (
     38         #(NAME_VALUE lhs:name rhs:value)
     39         {
     40             if (#lhs->getText() == argname)
     41             {
     42                 foundIt = true;
     43                 tree = ##;
     44             }
     45         }
     46         (
     47             {foundIt==true}?
     48             /* this one matched; terminate traversal */
     49         |   
     50             tree=lookup[argname, foundIt]
     51         )
     52     )?
     53 ;  )
From Loring.G.Craymer at jpl.nasa.gov  Thu Apr 21 01:41:36 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Thu Apr 21 01:41:38 2005
Subject: [antlr-interest] GC in C++?
In-Reply-To: <dd3a065f0504210113fb54eb@mail.gmail.com>
Message-ID: <200504210841.j3L8fZm8023287@xmta2.jpl.nasa.gov>

Boehm's garbage collector (http://www.hpl.hp.com/personal/Hans_Boehm/gc/)
has been around for a while and should have the kinks worked out of it.
Playing nice with ANTLR should be mostly a matter of adapting the library to
remove the reference counters and introduce custom allocators and maybe some
modification of the codegen.

BTW, this sounds like an excellent approach to make C++ generated code more
amenable to debugging--the RefAST and RefToken stuff is an annoyance in
debugging.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Thursday, April 21, 2005 1:13 AM
> To: ANTLR Interest
> Subject: [antlr-interest] GC in C++?
> 
> Can anyone recommend a good garbage collection package that will play
> well with ANTLR's C++ generated code?
> 
> Thanks,
> - Bryan Ewbank

From scott at javadude.com  Thu Apr 21 03:55:37 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Apr 21 03:55:42 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <200504210805.j3L85eET015535@xmta1.jpl.nasa.gov>
Message-ID: <20050421102438.978E9290633@new.knowspam.net>

> > TreeNodes are **optional**. YOU DON'T NEED THEM TO DO 
> JTREE. See the 
> > example code I posted for how you SHOULD do adaptation of 
> an existing 
> > structure.
> > (See the GoodExample.java)
> 
> You mean the line that reads
> 		f.getContentPane().add(new JScrollPane(new 
> JTree(new DefaultTreeModel(new ComponentTreeNode(ftp)))));
> 

YOU READ BadExample.java. READ GoodExample.java, like I said.

Sheesh.

-- Scott




From scott at javadude.com  Thu Apr 21 03:55:37 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Apr 21 03:55:46 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree   creation
In-Reply-To: <200504210805.j3L85eET015535@xmta1.jpl.nasa.gov>
Message-ID: <20050421102439.30FF82906BF@new.knowspam.net>

It's not worth my time arguing with you. You obviously don't get it and
won't. 

Hopefully Ter gets it and will implement it. If not, I'll make some mod so
those of us who do get it can have a more flexible tool.

-- Scott




From jpschewe at mtu.net  Thu Apr 21 05:16:52 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Thu Apr 21 05:16:58 2005
Subject: [antlr-interest] Dynamic Java compiler?
Message-ID: <1114085812.17037.11.camel@workstation.mn.mtu.net>

I have to believe that someone on this list has seen such a thing or
even written it.  I'm looking for a Java compiler that has the following
features:
      * Is written in pure Java
      * Uses a ClassLoader to find other classes to compile (so I can
        generate the source on the fly)

I'd also like it to handle Java 1.5 syntax, but this isn't a
requirement.

I've looked at DynamicJava and it doesn't handle circular class
references.

JavaAssist is close, but it can't be given a whole source file to just
compile, only method bodies.

Groovy works pretty nicely, but doesn't handle the final keyword or
interfaces.

BCEL is just too low level.  If someone took the Java 1.5 antlr grammar
and then used BCEL in teh actions, that would probably work.


________________________________________________________________________
Jon Schewe | http://mtu.net/~jpschewe
GPG signature at http://mtu.net/~jpschewe/gpg.sig.html
For I am convinced that neither death nor life, neither angels 
nor demons, neither the present nor the future, nor any 
powers, neither height nor depth, nor anything else in all 
creation, will be able to separate us from the love of God that 
is in Christ Jesus our Lord. - Romans 8:38-39



From hasan.mushtaq at gmail.com  Thu Apr 21 08:23:21 2005
From: hasan.mushtaq at gmail.com (Hasan Mushtaq)
Date: Thu Apr 21 08:23:25 2005
Subject: [antlr-interest] Natural language lexical analysis by ANTLR?
Message-ID: <3ac7dfd105042108235703dab3@mail.gmail.com>

Hi there, 
 
I have a very important question. I am required to do lexical anaysis
       of a text. That is i am provided with two files, one contains
large text(from an article)
       and the other contains the keywords that i need to find in the article.
       example: 
       if keyword = method // present in the keyword file
       then i have to find all varriants of this keyword that are
present in the text
       i.e.  
       i have to find methods, methodology, methodologies, method...
       that is all with the same roots. Also the other way around that is if the
       keyword is ionization then i need to find ionize, inonizing..etc
       
       I have gone through the tutorials getting an idea of how ANTLR
works but i could'nt
       find out if my purpose could be acheived by ANTLR or not.
Please let me know if this is
       possible by ANTLR. If it is where would i get all the grammer from. 
       
       2- Now let me make this a little more complex I have to also
find multiple words
       like basic set = basics settings etc
       
       3- a little more I have to also find the synonyms.. i.e.
       
       if keyword= road
       then find highway, street, etc
       
       parts 2 and 3 are not important right now. please let me know
if the first part is
       possible or not and if yes how ong would it take and where
should i start. Any help would be greatly apprecited. Please reply at
hasan_mushtaq@yahoo.com or hasan.mushtaq@gmail.com
 

       
       Best Regards
       Hasan Mushtaq
       Paris - France
From hasan_mushtaq at yahoo.com  Thu Apr 21 07:42:57 2005
From: hasan_mushtaq at yahoo.com (Hasan Mushtaq)
Date: Thu Apr 21 08:26:06 2005
Subject: [antlr-interest] True natural language lexical analysis by ANTLR?
Message-ID: <20050421144257.65388.qmail@web50804.mail.yahoo.com>

   Hi there, 
 
I have a very im^portant question. I am required to do lexical anaysis
       of a text. That is i am provided with two files, one contains large text(from an article)
       and the other contains the keywords that i need to find in the article.
       example: 
       if keyword = method // present in the keyword file
       then i have to find all varriants of this keyword that are present in the text
       i.e.  
       i have to find methods, methodology, methodologies, method...
       that is all with the same roots. Also the other way around that is if the
       keyword is ionization then i need to find ionize, inonizing..etc
       
       I have gone through the tutorials getting an idea of how ANTLR works but i could'nt
       find out if my purpose could be acheived by ANTLR or not. Please let me know if this is
       possible by ANTLR. If it is where would i get all the grammer from. 
       
       2- Now let me make this a little more complex I have to also find multiple words
       like basic set = basics settings etc
       
       3- a little more I have to also find the synonyms.. i.e.
       
       if keyword= road
       then find highway, street, etc
       
       parts 2 and 3 are not important right now. please let me know if the first part is 
       possible or not and if yes how ong would it take and where should i start. Any help would be greatly apprecited.

       
       Best Regards
       Hasan Mushtaq
       Paris - France 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050421/ae3e9cab/attachment.html
From hasan_mushtaq at yahoo.com  Thu Apr 21 07:48:37 2005
From: hasan_mushtaq at yahoo.com (Hasan Mushtaq)
Date: Thu Apr 21 08:26:09 2005
Subject: [antlr-interest] Natural language lexical analysis by ANTLR?
Message-ID: <20050421144837.14725.qmail@web50802.mail.yahoo.com>

 Hi there,  
I have a very important question. I am required to do lexical anaysis
       of a text. That is i am provided with two files, one contains large text(from an article)
       and the other contains the keywords that i need to find in the article.
       example: 
       if keyword = method // present in the keyword file
       then i have to find all varriants of this keyword that are present in the text
       i.e.  
       i have to find methods, methodology, methodologies, method...
       that is all with the same roots. Also the other way around that is if the
       keyword is ionization then i need to find ionize, inonizing..etc
       
       I have gone through the tutorials getting an idea of how ANTLR works but i could'nt
       find out if my purpose could be acheived by ANTLR or not. Please let me know if this is
       possible by ANTLR. If it is where would i get all the grammer from. 
       
       2- Now let me make this a little more complex I have to also find multiple words
       like basic set = basics settings etc
       
       3- a little more I have to also find the synonyms.. i.e.
       
       if keyword= road
       then find highway, street, etc
       
       parts 2 and 3 are not important right now. please let me know if the first part is 
       possible or not and if yes how ong would it take and where should i start. Any help would be greatly apprecited. Please reply at hasan_mushtaq@yahoo.com
 

       
       Best Regards
       Hasan Mushtaq
       Paris - France 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050421/c5dd25ca/attachment.html
From Loring.G.Craymer at jpl.nasa.gov  Thu Apr 21 11:26:10 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Thu Apr 21 11:26:16 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree  creation
In-Reply-To: <20050421102438.978E9290633@new.knowspam.net>
References: <200504210805.j3L85eET015535@xmta1.jpl.nasa.gov>
	<20050421102438.978E9290633@new.knowspam.net>
Message-ID: <6.2.1.2.2.20050421112502.029d2d70@mail.jpl.nasa.gov>

Scott--

BadExample.Java replaces DefaultTreeModel with ComponentTreeModel in the 
same fragment.  This fragment was from GoodExample.java.

--Loring


At 03:55 AM 4/21/2005, Scott Stanchfield wrote:
> > > TreeNodes are **optional**. YOU DON'T NEED THEM TO DO
> > JTREE. See the
> > > example code I posted for how you SHOULD do adaptation of
> > an existing
> > > structure.
> > > (See the GoodExample.java)
> >
> > You mean the line that reads
> >               f.getContentPane().add(new JScrollPane(new
> > JTree(new DefaultTreeModel(new ComponentTreeNode(ftp)))));
> >
>
>YOU READ BadExample.java. READ GoodExample.java, like I said.
>
>Sheesh.
>
>-- Scott


From prashant.deva at gmail.com  Thu Apr 21 14:03:43 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Apr 21 14:03:46 2005
Subject: [antlr-interest] AntlrStudio logo
Message-ID: <41fed8f805042114033bd0a35b@mail.gmail.com>

Take a look at the (cool) logo at -
www.antlrstudio.com

I will be putting up a few screenshots too in a few days.

PRASHANT
From tonyfox24 at hot.ee  Thu Apr 21 17:16:59 2005
From: tonyfox24 at hot.ee (Anton Arhipov)
Date: Thu Apr 21 17:04:58 2005
Subject: [antlr-interest] infinite loop in ASTFactory
Message-ID: <4268427B.9020905@hot.ee>

Hi!

I noticed a strange behaviour here.. perhaps i'm doing something wrong, 
but..

I have a rule like:

main: e:rule1 a:rule2;

.. and it works, but if i add some AST construction code:

main: e:rule1 a:rule2
{
     #main = #([MAIN,"main"], e, a);
}
;

.. then it hangs in infinite loop somewhere in ASTFactory

but then, if i do (without "a")

main: e:rule1 a:rule2
{
     #main = #([MAIN,"main"], e);
}
;

then it works again.

isn't it strange? any comments?


Ant.





From scott at javadude.com  Thu Apr 21 17:58:13 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Apr 21 17:58:46 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree    creation
In-Reply-To: <6.2.1.2.2.20050421112502.029d2d70@mail.jpl.nasa.gov>
Message-ID: <20050422002707.52E592903FA@new.knowspam.net>

I just downloaded the sample (http://javadude.com/misc/treesample.zip) and
extracted it again. You ARE looking at the BAD example. GoodExample is:


public class GoodExample {
	public static void main(String[] args) {
		Ftp ftp = new Ftp(); // a UI
		
		JFrame f = new JFrame();
		f.getContentPane().add(new JScrollPane(new JTree(new
ComponentTreeModel(ftp))));
		f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		f.pack();
		f.setVisible(true);
	}
}

Now look at ComponentTreeModel.java.

See any TreeNodes? (If you do, you're seeing things that aren't there.)


They're not necessary, and getting rid of them saves lots of memory and GC
time over time, whether it's on a server, or in eclipse.

Even for a single-run app, it can mean the difference between running out of
memory. Many people avoid DOM because it uses too much memory. What we we
added an extra node on top of each DOM node to parse it? Kaboom.

-- Scott




From open.zone at virgin.net  Thu Apr 21 20:22:36 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Apr 21 20:09:23 2005
Subject: [antlr-interest] infinite loop in ASTFactory
In-Reply-To: <4268427B.9020905@hot.ee>
Message-ID: <002c01c546ea$88881b40$6902a8c0@hercules>

> Hi!
> 
> I noticed a strange behaviour here.. perhaps i'm doing 
> something wrong, 
> but..
> 
> I have a rule like:
> 
> main: e:rule1 a:rule2;
> 
> .. and it works, but if i add some AST construction code:
> 
> main: e:rule1 a:rule2
> {
>      #main = #([MAIN,"main"], e, a);
> }
> ;
> 
> .. then it hangs in infinite loop somewhere in ASTFactory

You should turn off automatic tree construction if you're using building
manually.

Try the following:

1. Auto off (note the "!" after main)

	main!: e:rule1 a:rule2
	{
		#main = #([MAIN,"main"], e, a);
	}
	;

2. Using #main

	main: e:rule1 a:rule2
	{
		#main = #([MAIN,"main"], #main);
	}
	;

Cheers,

Micheal

From smigniot at hotmail.com  Fri Apr 22 05:34:51 2005
From: smigniot at hotmail.com (sebastien migniot)
Date: Fri Apr 22 05:34:54 2005
Subject: [antlr-interest] Javadoc in inherited grammars ?
Message-ID: <BAY24-F32D01B4F138A12CDF888DFC32D0@phx.gbl>

Hi,


I've produced 2 grammars :
- generic_csv.g
- my_grammar.g
Where my_grammar inherits generic_csv

Upon generation :
The methods javadoc in generic_csv.g DOES appear in GenericCSVParser.java
The methods javadoc in my_grammar does NOT appear in MyGrammarParser.java

The question is :
    How may I keep the javadoc of my_grammar.g
    in expandedmy_grammar.g ?

PS: I'm compiling the parser using :
java -cp %CP% antlr.Tool -glib generic_csv.g my_grammar.g


  Thx for any input,
    Seb.

_________________________________________________________________
Essayez le nouveau MSN Search : plus performant, plus pr?cis. 
http://search.msn.fr/

From atripp at comcast.net  Fri Apr 22 09:35:30 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Apr 22 09:35:35 2005
Subject: [antlr-interest] Dynamic Java compiler?
Message-ID: <426927D2.4010206@comcast.net>

Why not just use javac itself? It's written in Java,
it uses a ClassLoader (unless I'm misunderstanding what you're looking
for), and you can get the source from Sun.

>I have to believe that someone on this list has seen such a thing or
>even written it.  I'm looking for a Java compiler that has the following
>features:
>      * Is written in pure Java
>      * Uses a ClassLoader to find other classes to compile (so I can
>        generate the source on the fly)
>
>I'd also like it to handle Java 1.5 syntax, but this isn't a
>requirement.
>
>I've looked at DynamicJava and it doesn't handle circular class
>references.
>
>JavaAssist is close, but it can't be given a whole source file to just
>compile, only method bodies.
>
>Groovy works pretty nicely, but doesn't handle the final keyword or
>interfaces.
>
>BCEL is just too low level.  If someone took the Java 1.5 antlr grammar
>and then used BCEL in teh actions, that would probably work.
>


From jpschewe at mtu.net  Sat Apr 23 18:51:34 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Sat Apr 23 18:51:45 2005
Subject: [antlr-interest] Dynamic Java compiler?
In-Reply-To: <426927D2.4010206@comcast.net>
References: <426927D2.4010206@comcast.net>
Message-ID: <1114307494.2907.6.camel@workstation.mn.mtu.net>

You are misunderstanding.  javac does not use an instance of
java.lang.ClassLoader (at least not that I've been able to find).  I'm
generating classes inside a Java program that should then be executed
inside the same JVM.

On Fri, 2005-04-22 at 12:35 -0400, Andy Tripp wrote:
> Why not just use javac itself? It's written in Java,
> it uses a ClassLoader (unless I'm misunderstanding what you're looking
> for), and you can get the source from Sun.
> 
> >I have to believe that someone on this list has seen such a thing or
> >even written it.  I'm looking for a Java compiler that has the following
> >features:
> >      * Is written in pure Java
> >      * Uses a ClassLoader to find other classes to compile (so I can
> >        generate the source on the fly)
> >
> >I'd also like it to handle Java 1.5 syntax, but this isn't a
> >requirement.
> >
> >I've looked at DynamicJava and it doesn't handle circular class
> >references.
> >
> >JavaAssist is close, but it can't be given a whole source file to just
> >compile, only method bodies.
> >
> >Groovy works pretty nicely, but doesn't handle the final keyword or
> >interfaces.
> >
> >BCEL is just too low level.  If someone took the Java 1.5 antlr grammar
> >and then used BCEL in teh actions, that would probably work.
> >
> 

________________________________________________________________________
Jon Schewe | http://mtu.net/~jpschewe
GPG signature at http://mtu.net/~jpschewe/gpg.sig.html
For I am convinced that neither death nor life, neither angels 
nor demons, neither the present nor the future, nor any 
powers, neither height nor depth, nor anything else in all 
creation, will be able to separate us from the love of God that 
is in Christ Jesus our Lord. - Romans 8:38-39



From parrt at cs.usfca.edu  Sun Apr 24 13:56:17 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr 24 13:56:04 2005
Subject: [antlr-interest] Dynamic Java compiler?
In-Reply-To: <1114307494.2907.6.camel@workstation.mn.mtu.net>
References: <426927D2.4010206@comcast.net>
	<1114307494.2907.6.camel@workstation.mn.mtu.net>
Message-ID: <2b0fd8beaf2a57e369008670535b2e42@cs.usfca.edu>


On Apr 23, 2005, at 6:51 PM, Jon Schewe wrote:

> You are misunderstanding.  javac does not use an instance of
> java.lang.ClassLoader (at least not that I've been able to find).  I'm
> generating classes inside a Java program that should then be executed
> inside the same JVM.

You can generate .class files with javac and then ask the classloader 
to load them.  Or, use com.sun.compiler.* or whatever it is to do 
inline.  See any servlet/jsp engine for the sample code I think.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From prashant.deva at gmail.com  Sun Apr 24 14:52:15 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Sun Apr 24 14:52:18 2005
Subject: [antlr-interest] Serious doubts on usage of incremental parsing in
	ides
Message-ID: <41fed8f80504241452ece5faf@mail.gmail.com>

I am seriously begining to doubt the utility of having an incremental
parser in an ide.

Cause no matter how fast ur lexer/parser is, you still have to run
them in the background thread cause the amount of work done on each
'delta change' can be substantial, ie, updating the tree, semantic
highlighting, diagrams, search results, etc...

And if you are going to be running in a background thread means that
you are out of sync with the document that is currently being edited.
Thus all the current info you have pretty much amounts to zero. You
can't just query a tree and find out the context of say an offset,
cause the context might have changed from the last time the tree was
updated.

You obviously can't use it to do auto formatting wile typing cause
that would require a completly synced tree.

You try doing highlighting with it and you might find that the offsets
you got to update have already has their text changed by the time they
are updated.

Also it makes all your components 10 times more complex cause now they
have to deal with 'delta changes' instead of just a tree.

Also if you are doing parsing in background, the user won't feel at
all whether you are doing a full parse each time or just an
incremental parse.

I agree incremental parse is way faster than a full parse, but then we
are talking of times in milliseconds, which won't be noticed at all if
you are parsing in another thread.

So my question is that other than having a little more accuracy with
auto complete, ehat exaclty is the use of all this incremental stuff,
if you can't use the info at run time.

Don't say that we can run the parser at real short intervals , ie
every 50ms instead of 500ms, cause then again you are just playing
with luck and hoping the user types slow.

PRASHANT
From scott at javadude.com  Sun Apr 24 17:50:09 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Apr 24 17:50:20 2005
Subject: [antlr-interest] Serious doubts on usage of incremental parsing
	inides
In-Reply-To: <41fed8f80504241452ece5faf@mail.gmail.com>
Message-ID: <200504250147.j3P1lRBp006690@s2.eroute.net>

Ummm... that's what eclipse does, and it's amazingly fast.

First, there are two concepts here:

1) incremental compilation
2) editor parsing for decoration & "instant errors"

Have you tried running a full build of anything recently? Most large
projects take several minutes (3-5 at least) or more. The incremental
building in eclipse has probably saved me a good year of development time
since it came out... (And I'm not kidding... If I had to go back to
rebuilding by hand every once in a while, then figure out the context of
each error, I'd go nuts...)

Incremental compilation is not about syntax highlighting (though the java
editor updates an AST every time you pause). It's about:

1) shorter build times
2) instantly seeing what's wrong
3) keeping in the context of the problems when they appear (you know what
you just changed)
4) ensuring you only have a few errors to wrestle with at a time (instead of
compiling every hour or two to find several and not remember what you were
doing)

Worst case, the entire workspace is rebuilt, and that's incredibly rare. (If
you were able to edit the "Object" class in java it would cause it, but
there are very few classes that just about everything needs, though you can
cause a chain reaction. I've rarely seen a long incremental build in eclipse
unless the tools are messed up -- the web tools, for example, have some
problems that trigger massive recompilation.)

Incremental compilation is usually triggered on save (that's what eclipse
does), at which point all impacted classes in a workspace are recompiled.

Editor parsing only affects the file you're editing, not the potentially
impacted code outside that file. It usually triggers this when the user
pauses. (If you notice you can type several words and they'll stay black,
then when you pause they get highlighted). The editor parsing is
significantly faster b/c it only affects a single file.

Incremental compilation is a good thing, but yes, it's quite complex to
implement...

Later,
-- Scott


From jpschewe at mtu.net  Sun Apr 24 18:33:08 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Sun Apr 24 18:33:12 2005
Subject: [antlr-interest] Dynamic Java compiler?
In-Reply-To: <2b0fd8beaf2a57e369008670535b2e42@cs.usfca.edu>
References: <426927D2.4010206@comcast.net>
	<1114307494.2907.6.camel@workstation.mn.mtu.net>
	<2b0fd8beaf2a57e369008670535b2e42@cs.usfca.edu>
Message-ID: <1114392788.2907.23.camel@workstation.mn.mtu.net>

On Sun, 2005-04-24 at 13:56 -0700, Terence Parr wrote:
> <antlr-interest@antlr.org>
> You can generate .class files with javac and then ask the classloader 
> to load them.  Or, use com.sun.compiler.* or whatever it is to do 
> inline.  See any servlet/jsp engine for the sample code I think.

Unfortunately that requires the source for all of the files to be on the
filesystem when the compiler runs.  This is possible in a JSP engine
because it's static, not dynamic code.  However this is not the case in
my application, as I'm generating the source on the fly as the
classloader requests the classes.


________________________________________________________________________
Jon Schewe | http://mtu.net/~jpschewe
GPG signature at http://mtu.net/~jpschewe/gpg.sig.html
For I am convinced that neither death nor life, neither angels 
nor demons, neither the present nor the future, nor any 
powers, neither height nor depth, nor anything else in all 
creation, will be able to separate us from the love of God that 
is in Christ Jesus our Lord. - Romans 8:38-39



From parrt at cs.usfca.edu  Sun Apr 24 21:05:14 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Apr 24 21:05:18 2005
Subject: [antlr-interest] Dynamic Java compiler?
In-Reply-To: <1114392788.2907.23.camel@workstation.mn.mtu.net>
References: <426927D2.4010206@comcast.net>
	<1114307494.2907.6.camel@workstation.mn.mtu.net>
	<2b0fd8beaf2a57e369008670535b2e42@cs.usfca.edu>
	<1114392788.2907.23.camel@workstation.mn.mtu.net>
Message-ID: <4e9728a3acf91cf48a83bcab8c8555b1@cs.usfca.edu>


On Apr 24, 2005, at 6:33 PM, Jon Schewe wrote:

> On Sun, 2005-04-24 at 13:56 -0700, Terence Parr wrote:
>> <antlr-interest@antlr.org>
>> You can generate .class files with javac and then ask the classloader
>> to load them.  Or, use com.sun.compiler.* or whatever it is to do
>> inline.  See any servlet/jsp engine for the sample code I think.
>
> Unfortunately that requires the source for all of the files to be on 
> the
> filesystem when the compiler runs.  This is possible in a JSP engine
> because it's static, not dynamic code.  However this is not the case in
> my application, as I'm generating the source on the fly as the
> classloader requests the classes.

Can you write to a file?  JSPs change on the fly so they must be 
reloaded throwing out the old .class file.  :)

Ter

From torkildr at resheim.no  Mon Apr 25 01:06:18 2005
From: torkildr at resheim.no (Torkild =?iso-8859-1?q?Ulv=F8y_Resheim?=)
Date: Mon Apr 25 01:11:13 2005
Subject: [antlr-interest] Serious doubts on usage of incremental parsing in
	ides
In-Reply-To: <41fed8f80504241452ece5faf@mail.gmail.com>
References: <41fed8f80504241452ece5faf@mail.gmail.com>
Message-ID: <200504251006.22789.torkildr@resheim.no>

On Sunday 24 April 2005 23:52, Prashant Deva wrote:
> I am seriously begining to doubt the utility of having an incremental
> parser in an ide.
>
> Cause no matter how fast ur lexer/parser is, you still have to run
> them in the background thread cause the amount of work done on each
> 'delta change' can be substantial, ie, updating the tree, semantic
> highlighting, diagrams, search results, etc...
Well it depends I guess. But in my experience the delta is not very large,
a few lines of code at the most. Unless we have a copy, paste. However I only 
update the model, rarely the view that depend on it.
>
> And if you are going to be running in a background thread means that
> you are out of sync with the document that is currently being edited.
> Thus all the current info you have pretty much amounts to zero. You
> can't just query a tree and find out the context of say an offset,
> cause the context might have changed from the last time the tree was
> updated.
>
> You obviously can't use it to do auto formatting wile typing cause
> that would require a completly synced tree.
>
> You try doing highlighting with it and you might find that the offsets
> you got to update have already has their text changed by the time they
> are updated.
>
> Also it makes all your components 10 times more complex cause now they
> have to deal with 'delta changes' instead of just a tree.
>
> Also if you are doing parsing in background, the user won't feel at
> all whether you are doing a full parse each time or just an
> incremental parse.
>
> I agree incremental parse is way faster than a full parse, but then we
> are talking of times in milliseconds, which won't be noticed at all if
> you are parsing in another thread.
>
> So my question is that other than having a little more accuracy with
> auto complete, ehat exaclty is the use of all this incremental stuff,
> if you can't use the info at run time.
I'm currently implementing incremental parsing for my "Visual DataFlex plugin" 
for Eclipse. Since the grammar is fairly large and not very fast I see no 
other option because:

* The outline view should be accurate.
* The "highlight range indicator" should be accurate.
* Automatic indentation should be accurate.
* Content assist should be accurate.
* Templates should be accurate.
* Specialized search should be accurate.
* etc. etc.

>
> Don't say that we can run the parser at real short intervals , ie
> every 50ms instead of 500ms, cause then again you are just playing
> with luck and hoping the user types slow.
>
> PRASHANT

-- 
Med vennlig hilsen / Kind regards                                  ((
Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
bug is indistinguishable from a feature."                         |____|'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050425/6182283a/attachment.bin
From i.maier at gmx.de  Mon Apr 25 07:52:39 2005
From: i.maier at gmx.de (Ingo Maier)
Date: Mon Apr 25 01:52:55 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsing inides
In-Reply-To: <200504250147.j3P1lRBp006690@s2.eroute.net>
References: <200504250147.j3P1lRBp006690@s2.eroute.net>
Message-ID: <1114440758.2200.17.camel@beeblebox>

On Sun, 2005-04-24 at 20:50, Scott Stanchfield wrote:
> Ummm... that's what eclipse does, and it's amazingly fast.

Isn't Prashant talking about incremental parsing (as opposed to
incremental compilation)? I guess incremental parsing with all related
semantic checking and stuff is way more complex than eclipse/jdt is
doing incremental compilation. It has no "delta" ASTs/nodes but whole
delta compilation units as far as I know. When a compilation unit has
changed, it parses it from beginning to end and builds a whole new AST,
(not just the lines that changed modifying single nodes). The
synchronization happens on a level above Prashant's talking and should
be much simpler to manage. Please correct me if I am wrong. 

And yes, eclipse java copmpiler/parser is fast. I guess that comes from
it's jikes heritage, whose reputation isn't that bad in terms of
speed...

Regards,
Ingo

> 
> First, there are two concepts here:
> 
> 1) incremental compilation
> 2) editor parsing for decoration & "instant errors"
> 
> Have you tried running a full build of anything recently? Most large
> projects take several minutes (3-5 at least) or more. The incremental
> building in eclipse has probably saved me a good year of development time
> since it came out... (And I'm not kidding... If I had to go back to
> rebuilding by hand every once in a while, then figure out the context of
> each error, I'd go nuts...)
> 
> Incremental compilation is not about syntax highlighting (though the java
> editor updates an AST every time you pause). It's about:
> 
> 1) shorter build times
> 2) instantly seeing what's wrong
> 3) keeping in the context of the problems when they appear (you know what
> you just changed)
> 4) ensuring you only have a few errors to wrestle with at a time (instead of
> compiling every hour or two to find several and not remember what you were
> doing)
> 
> Worst case, the entire workspace is rebuilt, and that's incredibly rare. (If
> you were able to edit the "Object" class in java it would cause it, but
> there are very few classes that just about everything needs, though you can
> cause a chain reaction. I've rarely seen a long incremental build in eclipse
> unless the tools are messed up -- the web tools, for example, have some
> problems that trigger massive recompilation.)
> 
> Incremental compilation is usually triggered on save (that's what eclipse
> does), at which point all impacted classes in a workspace are recompiled.
> 
> Editor parsing only affects the file you're editing, not the potentially
> impacted code outside that file. It usually triggers this when the user
> pauses. (If you notice you can type several words and they'll stay black,
> then when you pause they get highlighted). The editor parsing is
> significantly faster b/c it only affects a single file.
> 
> Incremental compilation is a good thing, but yes, it's quite complex to
> implement...
> 
> Later,
> -- Scott
> 
> 

From antlr at shmuelhome.mine.nu  Mon Apr 25 02:45:24 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Mon Apr 25 02:45:32 2005
Subject: [antlr-interest] Serious doubts on usage of incremental	parsing
	inides
In-Reply-To: <1114440758.2200.17.camel@beeblebox>
References: <200504250147.j3P1lRBp006690@s2.eroute.net>
	<1114440758.2200.17.camel@beeblebox>
Message-ID: <426CBC34.70404@shmuelhome.mine.nu>

Ingo Maier wrote:
> Isn't Prashant talking about incremental parsing (as opposed to
> incremental compilation)? I guess incremental parsing with all related
> semantic checking and stuff is way more complex than eclipse/jdt is
> doing incremental compilation. It has no "delta" ASTs/nodes but whole
> delta compilation units as far as I know. When a compilation unit has
> changed, it parses it from beginning to end and builds a whole new AST,
> (not just the lines that changed modifying single nodes). The
> synchronization happens on a level above Prashant's talking and should
> be much simpler to manage. Please correct me if I am wrong. 
Word processors have dealt with this problem for years. They "must" 
layout the visible page at typing speed. The general way to do this is 
to break up the document into smaller objects; determine the first 
object that could have changed; do a foreground layout for anything that 
can change on the screen and a background layout for the rest. As an 
optimization, the layout can terminate anytime an object that is still 
valid has not been affected by the current change (for instance if a 
modified paragraph doesn't change its number of lines, further layout is 
unnecessary).
Parsing code is very similar. It can't do the foreground/background 
split but the other optimizations are very appropriate.


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.308 / Virus Database: 266.10.2 - Release Date: 4/21/2005



-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.308 / Virus Database: 266.10.2 - Release Date: 4/21/2005

From prashant.deva at gmail.com  Mon Apr 25 03:05:53 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Apr 25 03:05:56 2005
Subject: [antlr-interest] Serious doubts on usage of incremental parsing
	inides
In-Reply-To: <426CBC34.70404@shmuelhome.mine.nu>
References: <200504250147.j3P1lRBp006690@s2.eroute.net>
	<1114440758.2200.17.camel@beeblebox>
	<426CBC34.70404@shmuelhome.mine.nu>
Message-ID: <41fed8f805042503057f1a1f6b@mail.gmail.com>

Scott,
  You got me completly wrong. I am not talking about incremental
compilation, but incremental parsing in the editor which happens while
you are typing.

>Editor parsing only affects the file you're editing, not the
>potentially impacted code outside that file. It usually triggers this
>when the user pauses.

Thats cause if you give a time interval in which you wanna run ur
parser, say 500 ms, eclipse will collect all the consecutive additions
or removals and pass them as one block. It will be triggered at the
interval regardless of whether the user has paused or not.
Also note that additions and removals are collected separately.

Torkild,

>I'm currently implementing incremental parsing for my "Visual
>DataFlex plugin" for Eclipse. Since the grammar is fairly large and
>not very fast I see no other option because:
>
>* The outline view should be accurate.
>* The "highlight range indicator" should be accurate.
>* Automatic indentation should be accurate.
>* Content assist should be accurate.
>* Templates should be accurate.
>* Specialized search should be accurate.
>* etc. etc.

Thats what i wanna say. How are u gonna make all this stuff dead
accurate. See if you update all these components after say every 500
ms , then after every few keystrokes the user is gonna encounter a
short pause while all this stuff is updated, which will completly
screw the editing experience.

>Well it depends I guess. But in my experience the delta is not very large,
>a few lines of code at the most

Thats where you guys are not getting me. Its NOT the size of the delta
that worries me. Its the amount of components which will be updating
themselves using that delta. If i have 10 components that wil redraw
themselves, then there WILL be a pause in typing no matter how small
the delta is.
And you can't tell these components to update themselves in the
background, you HAVE to pause the editor, cause if u don't pause then
the editor and everything else is out of sync.

PRASHANT 


On 4/25/05, shmuel siegel <antlr@shmuelhome.mine.nu> wrote:
> Ingo Maier wrote:
> > Isn't Prashant talking about incremental parsing (as opposed to
> > incremental compilation)? I guess incremental parsing with all related
> > semantic checking and stuff is way more complex than eclipse/jdt is
> > doing incremental compilation. It has no "delta" ASTs/nodes but whole
> > delta compilation units as far as I know. When a compilation unit has
> > changed, it parses it from beginning to end and builds a whole new AST,
> > (not just the lines that changed modifying single nodes). The
> > synchronization happens on a level above Prashant's talking and should
> > be much simpler to manage. Please correct me if I am wrong.
> Word processors have dealt with this problem for years. They "must"
> layout the visible page at typing speed. The general way to do this is
> to break up the document into smaller objects; determine the first
> object that could have changed; do a foreground layout for anything that
> can change on the screen and a background layout for the rest. As an
> optimization, the layout can terminate anytime an object that is still
> valid has not been affected by the current change (for instance if a
> modified paragraph doesn't change its number of lines, further layout is
> unnecessary).
> Parsing code is very similar. It can't do the foreground/background
> split but the other optimizations are very appropriate.
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.308 / Virus Database: 266.10.2 - Release Date: 4/21/2005
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.308 / Virus Database: 266.10.2 - Release Date: 4/21/2005
> 
>
From scott at javadude.com  Mon Apr 25 03:30:23 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 25 03:30:45 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042503057f1a1f6b@mail.gmail.com>
Message-ID: <200504251127.j3PBReBs028791@s2.eroute.net>

Ahhh... I took "incremental parsing" for "incremental compilation".

Never mind ;)

AFAICS, the user can only be editing one thing at a time, so there's really
only one model to update (no matter how many views on that model). Unless
you have a very slow machine or very low RAM causing swapping, this should
be pretty much unnoticeable.

I guess I'll come back to eclipse anyway. I've never noticed it stopping me
just because it's updating its ast. Occasionally I'll have to wait a few
seconds for a large build (due to some validation weirdness in the
webtools), but even that's minimal.

I'm not sure if eclipse is totally rebuilding the ast each time or not (it
may be). I'm working on a plugin that filters trivial get/set methods and
displays an editable table of bean properties (which is why I want the ANTLR
tree support to be more flexible), and I had it rebuild the ast each time
and it wasn't noticeable to me. (In other words, the ast build was getting
called at least twice per refresh; once by eclipse, once by me. However,
eclipse may be caching it and detecting changes so it can simply return it).

Later,
-- Scott


From prashant.deva at gmail.com  Mon Apr 25 05:13:46 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Apr 25 05:13:48 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <200504251127.j3PBReBs028791@s2.eroute.net>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
Message-ID: <41fed8f805042505132d9a8ce7@mail.gmail.com>

Scott,
> 
> AFAICS, the user can only be editing one thing at a time, so there's really
> only one model to update (no matter how many views on that model). Unless
> you have a very slow machine or very low RAM causing swapping, this should
> be pretty much unnoticeable.

Again you are not getting me.
Lets say we have the following which needs to be updated on every keystroke- 
1.) Tree View
2.) Search results view
3.) 3d (hell, lets say OpenGL) dig 
4.) Editor highlighting
5.) Symbol table entries
6.) Auto indentation
7.) Folding structure 

Now if you are going to update all these things on every single
keystoke  ,then the editor is gonna seem real slow.

And mind you if you don't run the parser on every keystroke, then you
are limiting its power to as good as a batch parser.
Hell, a batch parser also takes jsut arnd 30 ms to parse a 10,0000
line file, and we are going to be updating after say 500ms anyway, so
what diff does it make whether we run a batch parser in between or an
incremental parser.

As you are talking so much about eclipse, well look at the source.
they run a FULL parse each time, and just get the deltas of the diff
between 2 asts.
They DONT have an incremental parser.

Take a look at 'JavaSourceViewerConfiguration', in the getReconciler()
method. Hell even the reconciler there is not incremental. There
stands no question of incremental parsing.

They just do incremental compilation, for which they anyway have to
parse the full file, and as its done only each time you save, the
little slowness does not get noticed.

So here is my problem stated once again -
You can't run an incremental parser on every keystroke cause no matter
how fast the parser is, the amount of 'other' stuff to update will
slow the editor.
If you can't run the parser on each keystroke, the incremental parser
is as good as a batch parser cause the time interval you are gonna run
it in, you can run the batch parser 10 times in it anyway.

So what's the use of an incremental parser.

Also i was looking at this blog of the guy who handles intellisense in
visual studio. even they don't run their parser on each keystroke,
cause it will be too slow.
And eclipse is not fast! its just that parsing is not that slow after all ;)

PRASHANT


On 4/25/05, Scott Stanchfield <scott@javadude.com> wrote:
> Ahhh... I took "incremental parsing" for "incremental compilation".
> 
> Never mind ;)
> 
> AFAICS, the user can only be editing one thing at a time, so there's really
> only one model to update (no matter how many views on that model). Unless
> you have a very slow machine or very low RAM causing swapping, this should
> be pretty much unnoticeable.
> 
> I guess I'll come back to eclipse anyway. I've never noticed it stopping me
> just because it's updating its ast. Occasionally I'll have to wait a few
> seconds for a large build (due to some validation weirdness in the
> webtools), but even that's minimal.
> 
> I'm not sure if eclipse is totally rebuilding the ast each time or not (it
> may be). I'm working on a plugin that filters trivial get/set methods and
> displays an editable table of bean properties (which is why I want the ANTLR
> tree support to be more flexible), and I had it rebuild the ast each time
> and it wasn't noticeable to me. (In other words, the ast build was getting
> called at least twice per refresh; once by eclipse, once by me. However,
> eclipse may be caching it and detecting changes so it can simply return it).
> 
> Later,
> -- Scott
> 
>
From prashant.deva at gmail.com  Mon Apr 25 05:23:37 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Apr 25 05:23:39 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042505132d9a8ce7@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
Message-ID: <41fed8f805042505237986731f@mail.gmail.com>

Part 2 of my reply .....

>Unless
> you have a very slow machine or very low RAM causing swapping, this should
 > be pretty much unnoticeable.

I have a 2.4 ghz processor and 512 mb ram and believe me my
incremental parser is FAST. all my tests are standalone swt apps so
they take like 6 mb in mem max. But still i notice sluggishness if i
run it on every keystroke.


Also eclipse has insanely complex code in ALL its ui elements to
handle those deltas.
Look at the outline view for example. They had to almost completly
reimplement that tree view to make it NOT work on domain objects.

Same goes for stuff like folding and semantic highlighting.
PRASHANT


On 4/25/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Scott,
> >
> > AFAICS, the user can only be editing one thing at a time, so there's really
> > only one model to update (no matter how many views on that model). Unless
> > you have a very slow machine or very low RAM causing swapping, this should
> > be pretty much unnoticeable.
> 
> Again you are not getting me.
> Lets say we have the following which needs to be updated on every keystroke-
> 1.) Tree View
> 2.) Search results view
> 3.) 3d (hell, lets say OpenGL) dig
> 4.) Editor highlighting
> 5.) Symbol table entries
> 6.) Auto indentation
> 7.) Folding structure
> 
> Now if you are going to update all these things on every single
> keystoke  ,then the editor is gonna seem real slow.
> 
> And mind you if you don't run the parser on every keystroke, then you
> are limiting its power to as good as a batch parser.
> Hell, a batch parser also takes jsut arnd 30 ms to parse a 10,0000
> line file, and we are going to be updating after say 500ms anyway, so
> what diff does it make whether we run a batch parser in between or an
> incremental parser.
> 
> As you are talking so much about eclipse, well look at the source.
> they run a FULL parse each time, and just get the deltas of the diff
> between 2 asts.
> They DONT have an incremental parser.
> 
> Take a look at 'JavaSourceViewerConfiguration', in the getReconciler()
> method. Hell even the reconciler there is not incremental. There
> stands no question of incremental parsing.
> 
> They just do incremental compilation, for which they anyway have to
> parse the full file, and as its done only each time you save, the
> little slowness does not get noticed.
> 
> So here is my problem stated once again -
> You can't run an incremental parser on every keystroke cause no matter
> how fast the parser is, the amount of 'other' stuff to update will
> slow the editor.
> If you can't run the parser on each keystroke, the incremental parser
> is as good as a batch parser cause the time interval you are gonna run
> it in, you can run the batch parser 10 times in it anyway.
> 
> So what's the use of an incremental parser.
> 
> Also i was looking at this blog of the guy who handles intellisense in
> visual studio. even they don't run their parser on each keystroke,
> cause it will be too slow.
> And eclipse is not fast! its just that parsing is not that slow after all ;)
> 
> PRASHANT
> 
> 
> On 4/25/05, Scott Stanchfield <scott@javadude.com> wrote:
> > Ahhh... I took "incremental parsing" for "incremental compilation".
> >
> > Never mind ;)
> >
> > AFAICS, the user can only be editing one thing at a time, so there's really
> > only one model to update (no matter how many views on that model). Unless
> > you have a very slow machine or very low RAM causing swapping, this should
> > be pretty much unnoticeable.
> >
> > I guess I'll come back to eclipse anyway. I've never noticed it stopping me
> > just because it's updating its ast. Occasionally I'll have to wait a few
> > seconds for a large build (due to some validation weirdness in the
> > webtools), but even that's minimal.
> >
> > I'm not sure if eclipse is totally rebuilding the ast each time or not (it
> > may be). I'm working on a plugin that filters trivial get/set methods and
> > displays an editable table of bean properties (which is why I want the ANTLR
> > tree support to be more flexible), and I had it rebuild the ast each time
> > and it wasn't noticeable to me. (In other words, the ast build was getting
> > called at least twice per refresh; once by eclipse, once by me. However,
> > eclipse may be caching it and detecting changes so it can simply return it).
> >
> > Later,
> > -- Scott
> >
> >
>
From prashant.deva at gmail.com  Mon Apr 25 05:35:54 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Apr 25 05:35:56 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042505237986731f@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
Message-ID: <41fed8f80504250535609bbf03@mail.gmail.com>

Part 3  of my reply ...

Also notice that i am not saying that the incremental parser slows the
stuff down.
No, its updating all the other stuff attached to the parser that slows
everything down.

Note that things like a tree view, if you are gonna update on every
keystroke, it will flash like hell.
Will be almost like a blinking tree ;)

PRASHANT

On 4/25/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Part 2 of my reply .....
> 
> >Unless
> > you have a very slow machine or very low RAM causing swapping, this should
>  > be pretty much unnoticeable.
> 
> I have a 2.4 ghz processor and 512 mb ram and believe me my
> incremental parser is FAST. all my tests are standalone swt apps so
> they take like 6 mb in mem max. But still i notice sluggishness if i
> run it on every keystroke.
> 
> Also eclipse has insanely complex code in ALL its ui elements to
> handle those deltas.
> Look at the outline view for example. They had to almost completly
> reimplement that tree view to make it NOT work on domain objects.
> 
> Same goes for stuff like folding and semantic highlighting.
> PRASHANT
> 
> 
> On 4/25/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > Scott,
> > >
> > > AFAICS, the user can only be editing one thing at a time, so there's really
> > > only one model to update (no matter how many views on that model). Unless
> > > you have a very slow machine or very low RAM causing swapping, this should
> > > be pretty much unnoticeable.
> >
> > Again you are not getting me.
> > Lets say we have the following which needs to be updated on every keystroke-
> > 1.) Tree View
> > 2.) Search results view
> > 3.) 3d (hell, lets say OpenGL) dig
> > 4.) Editor highlighting
> > 5.) Symbol table entries
> > 6.) Auto indentation
> > 7.) Folding structure
> >
> > Now if you are going to update all these things on every single
> > keystoke  ,then the editor is gonna seem real slow.
> >
> > And mind you if you don't run the parser on every keystroke, then you
> > are limiting its power to as good as a batch parser.
> > Hell, a batch parser also takes jsut arnd 30 ms to parse a 10,0000
> > line file, and we are going to be updating after say 500ms anyway, so
> > what diff does it make whether we run a batch parser in between or an
> > incremental parser.
> >
> > As you are talking so much about eclipse, well look at the source.
> > they run a FULL parse each time, and just get the deltas of the diff
> > between 2 asts.
> > They DONT have an incremental parser.
> >
> > Take a look at 'JavaSourceViewerConfiguration', in the getReconciler()
> > method. Hell even the reconciler there is not incremental. There
> > stands no question of incremental parsing.
> >
> > They just do incremental compilation, for which they anyway have to
> > parse the full file, and as its done only each time you save, the
> > little slowness does not get noticed.
> >
> > So here is my problem stated once again -
> > You can't run an incremental parser on every keystroke cause no matter
> > how fast the parser is, the amount of 'other' stuff to update will
> > slow the editor.
> > If you can't run the parser on each keystroke, the incremental parser
> > is as good as a batch parser cause the time interval you are gonna run
> > it in, you can run the batch parser 10 times in it anyway.
> >
> > So what's the use of an incremental parser.
> >
> > Also i was looking at this blog of the guy who handles intellisense in
> > visual studio. even they don't run their parser on each keystroke,
> > cause it will be too slow.
> > And eclipse is not fast! its just that parsing is not that slow after all ;)
> >
> > PRASHANT
> >
> >
> > On 4/25/05, Scott Stanchfield <scott@javadude.com> wrote:
> > > Ahhh... I took "incremental parsing" for "incremental compilation".
> > >
> > > Never mind ;)
> > >
> > > AFAICS, the user can only be editing one thing at a time, so there's really
> > > only one model to update (no matter how many views on that model). Unless
> > > you have a very slow machine or very low RAM causing swapping, this should
> > > be pretty much unnoticeable.
> > >
> > > I guess I'll come back to eclipse anyway. I've never noticed it stopping me
> > > just because it's updating its ast. Occasionally I'll have to wait a few
> > > seconds for a large build (due to some validation weirdness in the
> > > webtools), but even that's minimal.
> > >
> > > I'm not sure if eclipse is totally rebuilding the ast each time or not (it
> > > may be). I'm working on a plugin that filters trivial get/set methods and
> > > displays an editable table of bean properties (which is why I want the ANTLR
> > > tree support to be more flexible), and I had it rebuild the ast each time
> > > and it wasn't noticeable to me. (In other words, the ast build was getting
> > > called at least twice per refresh; once by eclipse, once by me. However,
> > > eclipse may be caching it and detecting changes so it can simply return it).
> > >
> > > Later,
> > > -- Scott
> > >
> > >
> >
>
From mail at martin-probst.com  Mon Apr 25 10:35:30 2005
From: mail at martin-probst.com (Martin Probst)
Date: Mon Apr 25 10:35:40 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f80504250535609bbf03@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
Message-ID: <1114450530.8537.10.camel@localhost.localdomain>

Hi,
why do you directly update your views? Shouldn't it be sufficient to
"invalidate" them and have them repaint themselves in the next UI
redraw? I'm not that familiar with SWT, but all GUI toolkits I've used
have such an invalidate flag (as it just makes sense performance wise).
If that still doesn't work you could also set a timeoff like e.g. 500ms
on the views to query if the parse tree has changed and redraw
themselves. Make updating the views asynchronous from actual editing,
noone needs an outline that is completly in synch with typing, as noone
uses both the editor and the outline in the very same second.

Also I'm not sure if you really need a parse tree for things like
auto-indent. I would guess it's sufficient to check that if you press
ENTER after a line that opens a new block (e.g. ending in "{",
containing an if etc.) you make sure the next line is indented. Lots of
editors (think vim) handle such stuff without a real parser. 

Also of course edit support (think indentation) controlled by a parser
would not work if there is an unrecoverable error before the statement,
e.g.
> String foo = "bar"
> if (true) ...
When I edit sourcefiles they are very often not valid until I finish.

Completly unrelated to this: my experience with a parser for a fairly
complex language to parse (about as complex as Java) was that parsing
took <20ms for average sourcefiles even on really old boxes. So you
might be right as there is no real need for incremental parsing, things
that take less than 20ms are not noticable for the user anyways. 

And you can do asynchronouse GUI updates with or without an incremental
parser ofcourse.

Regards,
Martin

On Mo, 2005-04-25 at 18:05 +0530, Prashant Deva wrote:
> Part 3  of my reply ...
> 
> Also notice that i am not saying that the incremental parser slows the
> stuff down.
> No, its updating all the other stuff attached to the parser that slows
> everything down.
> 
> Note that things like a tree view, if you are gonna update on every
> keystroke, it will flash like hell.
> Will be almost like a blinking tree ;)
> 
> PRASHANT
> 
> On 4/25/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > Part 2 of my reply .....
> > 
> > >Unless
> > > you have a very slow machine or very low RAM causing swapping, this should
> >  > be pretty much unnoticeable.
> > 
> > I have a 2.4 ghz processor and 512 mb ram and believe me my
> > incremental parser is FAST. all my tests are standalone swt apps so
> > they take like 6 mb in mem max. But still i notice sluggishness if i
> > run it on every keystroke.
> > 
> > Also eclipse has insanely complex code in ALL its ui elements to
> > handle those deltas.
> > Look at the outline view for example. They had to almost completly
> > reimplement that tree view to make it NOT work on domain objects.
> > 
> > Same goes for stuff like folding and semantic highlighting.
> > PRASHANT
> > 
> > 
> > On 4/25/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > > Scott,
> > > >
> > > > AFAICS, the user can only be editing one thing at a time, so there's really
> > > > only one model to update (no matter how many views on that model). Unless
> > > > you have a very slow machine or very low RAM causing swapping, this should
> > > > be pretty much unnoticeable.
> > >
> > > Again you are not getting me.
> > > Lets say we have the following which needs to be updated on every keystroke-
> > > 1.) Tree View
> > > 2.) Search results view
> > > 3.) 3d (hell, lets say OpenGL) dig
> > > 4.) Editor highlighting
> > > 5.) Symbol table entries
> > > 6.) Auto indentation
> > > 7.) Folding structure
> > >
> > > Now if you are going to update all these things on every single
> > > keystoke  ,then the editor is gonna seem real slow.
> > >
> > > And mind you if you don't run the parser on every keystroke, then you
> > > are limiting its power to as good as a batch parser.
> > > Hell, a batch parser also takes jsut arnd 30 ms to parse a 10,0000
> > > line file, and we are going to be updating after say 500ms anyway, so
> > > what diff does it make whether we run a batch parser in between or an
> > > incremental parser.
> > >
> > > As you are talking so much about eclipse, well look at the source.
> > > they run a FULL parse each time, and just get the deltas of the diff
> > > between 2 asts.
> > > They DONT have an incremental parser.
> > >
> > > Take a look at 'JavaSourceViewerConfiguration', in the getReconciler()
> > > method. Hell even the reconciler there is not incremental. There
> > > stands no question of incremental parsing.
> > >
> > > They just do incremental compilation, for which they anyway have to
> > > parse the full file, and as its done only each time you save, the
> > > little slowness does not get noticed.
> > >
> > > So here is my problem stated once again -
> > > You can't run an incremental parser on every keystroke cause no matter
> > > how fast the parser is, the amount of 'other' stuff to update will
> > > slow the editor.
> > > If you can't run the parser on each keystroke, the incremental parser
> > > is as good as a batch parser cause the time interval you are gonna run
> > > it in, you can run the batch parser 10 times in it anyway.
> > >
> > > So what's the use of an incremental parser.
> > >
> > > Also i was looking at this blog of the guy who handles intellisense in
> > > visual studio. even they don't run their parser on each keystroke,
> > > cause it will be too slow.
> > > And eclipse is not fast! its just that parsing is not that slow after all ;)
> > >
> > > PRASHANT
> > >
> > >
> > > On 4/25/05, Scott Stanchfield <scott@javadude.com> wrote:
> > > > Ahhh... I took "incremental parsing" for "incremental compilation".
> > > >
> > > > Never mind ;)
> > > >
> > > > AFAICS, the user can only be editing one thing at a time, so there's really
> > > > only one model to update (no matter how many views on that model). Unless
> > > > you have a very slow machine or very low RAM causing swapping, this should
> > > > be pretty much unnoticeable.
> > > >
> > > > I guess I'll come back to eclipse anyway. I've never noticed it stopping me
> > > > just because it's updating its ast. Occasionally I'll have to wait a few
> > > > seconds for a large build (due to some validation weirdness in the
> > > > webtools), but even that's minimal.
> > > >
> > > > I'm not sure if eclipse is totally rebuilding the ast each time or not (it
> > > > may be). I'm working on a plugin that filters trivial get/set methods and
> > > > displays an editable table of bean properties (which is why I want the ANTLR
> > > > tree support to be more flexible), and I had it rebuild the ast each time
> > > > and it wasn't noticeable to me. (In other words, the ast build was getting
> > > > called at least twice per refresh; once by eclipse, once by me. However,
> > > > eclipse may be caching it and detecting changes so it can simply return it).
> > > >
> > > > Later,
> > > > -- Scott
> > > >
> > > >
> > >
> >
> 

From parrt at cs.usfca.edu  Mon Apr 25 11:20:26 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 25 11:20:12 2005
Subject: [antlr-interest] Python StringTemplate port released!
Message-ID: <10c99fde5629864e2e3a947e1cb99f3e@cs.usfca.edu>

Howdy,

Marq Kole has worked very hard to produce the Python port of 
StringTemplate 2.1 including a rewrite of the documentation to describe 
the Python usage.  It looks *really* nice.  Please check it out and 
spread the word to python fans

http://www.stringtemplate.org/

StringTemplate now has Java, C# (by Steve Sarandos), and Python (Marq 
Kole) implementations!  [Next step: World domination!  Er...I was 
supposed to just mutter than under my breath...was that my outside 
voice?] ;)

Regards,
Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 675 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050425/456dc8c1/attachment.bin
From jpschewe at mtu.net  Mon Apr 25 11:37:59 2005
From: jpschewe at mtu.net (Jon Schewe)
Date: Mon Apr 25 11:38:04 2005
Subject: [antlr-interest] Dynamic Java compiler?
In-Reply-To: <4e9728a3acf91cf48a83bcab8c8555b1@cs.usfca.edu>
References: <426927D2.4010206@comcast.net>
	<1114307494.2907.6.camel@workstation.mn.mtu.net>
	<2b0fd8beaf2a57e369008670535b2e42@cs.usfca.edu>
	<1114392788.2907.23.camel@workstation.mn.mtu.net>
	<4e9728a3acf91cf48a83bcab8c8555b1@cs.usfca.edu>
Message-ID: <1114454279.9866.44.camel@mn65-eggplant.htc.honeywell.com>

On Sun, 2005-04-24 at 21:05 -0700, Terence Parr wrote:
> On Apr 24, 2005, at 6:33 PM, Jon Schewe wrote:
> 
> > On Sun, 2005-04-24 at 13:56 -0700, Terence Parr wrote:
> >> <antlr-interest@antlr.org>
> >> You can generate .class files with javac and then ask the classloader
> >> to load them.  Or, use com.sun.compiler.* or whatever it is to do
> >> inline.  See any servlet/jsp engine for the sample code I think.
> >
> > Unfortunately that requires the source for all of the files to be on 
> > the
> > filesystem when the compiler runs.  This is possible in a JSP engine
> > because it's static, not dynamic code.  However this is not the case in
> > my application, as I'm generating the source on the fly as the
> > classloader requests the classes.
> 
> Can you write to a file?  JSPs change on the fly so they must be 
> reloaded throwing out the old .class file.  :)
> 
Sure, but I don't know all of the dependencies ahead of time, so the
compile will fail and I'll have to parse the error messages to figure
out which class, then generate that and continue.  If the compiler used
a ClassLoader, like DynamicJava or Groovy do, then instead of looking
for the source on the filesystem the compiler would just ask the
ClassLoader for the Class and I can then generate the source and push it
back through the dynamic compiler.


________________________________________________________________________

Jon Schewe | http://mtu.net/~jpschewe
GPG signature at http://mtu.net/~jpschewe/gpg.sig.html
For I am convinced that neither death nor life, neither angels
nor demons, neither the present nor the future, nor any
powers, neither height nor depth, nor anything else in all
creation, will be able to separate us from the love of God that
is in Christ Jesus our Lord. - Romans 8:38-39



From parrt at cs.usfca.edu  Mon Apr 25 11:46:17 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Apr 25 11:46:05 2005
Subject: [antlr-interest] Dynamic Java compiler?
In-Reply-To: <1114454279.9866.44.camel@mn65-eggplant.htc.honeywell.com>
References: <426927D2.4010206@comcast.net>
	<1114307494.2907.6.camel@workstation.mn.mtu.net>
	<2b0fd8beaf2a57e369008670535b2e42@cs.usfca.edu>
	<1114392788.2907.23.camel@workstation.mn.mtu.net>
	<4e9728a3acf91cf48a83bcab8c8555b1@cs.usfca.edu>
	<1114454279.9866.44.camel@mn65-eggplant.htc.honeywell.com>
Message-ID: <fb869094b17e298feb4b61af502ceb82@cs.usfca.edu>


On Apr 25, 2005, at 11:37 AM, Jon Schewe wrote:
>> Can you write to a file?  JSPs change on the fly so they must be
>> reloaded throwing out the old .class file.  :)
>>
> Sure, but I don't know all of the dependencies ahead of time, so the
> compile will fail and I'll have to parse the error messages to figure
> out which class, then generate that and continue.  If the compiler used
> a ClassLoader, like DynamicJava or Groovy do, then instead of looking
> for the source on the filesystem the compiler would just ask the
> ClassLoader for the Class and I can then generate the source and push 
> it
> back through the dynamic compiler.

Ooooh!  I get it.  You have absolutely no idea what imports are 
required, eh?  Well, I'll bet you could look at the source for the 
javac compiler and then see whether it's possible to use your 
classloader.

Ter

--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: text/enriched
Size: 1052 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050425/be929c15/attachment.bin
From mtiller at ford.com  Mon Apr 25 12:42:42 2005
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Apr 25 12:43:03 2005
Subject: [antlr-interest] On trees and JavaBeans, part 2: tree creation
Message-ID: <FD35CB8B26F9534E86D1AC31F401AB340483FE8A@na1fcm52.dearborn.ford.com>

Scott,

  Sorry for the late comment on this but I was behind in reading the
mailing list traffic.

  You've done a good job of articulating something that has been bother
me for a while about ANTLR's AST approach but I just couldn't put my
finger on it.  In addition to JXPath, You might also want to look at
Jaxen.  I've used it for a couple of things that sound very similar to
what you are after.

  Keep in mind that using a tool like JAXEN or JXPath isn't specifically
about being able to support XPath or being able to create an XML
representation from any data structure (although both of them are nice
consequences).  It is about mapping to a standard data model.  As you
say, then you can write a tree parser to walk the tree and the input can
be anything (XML, my heterogenous tree structure, Java objects,
whatever).  To me this sounds like a really good approach (and something
I'd probably be doing anyway for other tools that use adaptors).

--
Mike

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Scott Stanchfield
> Sent: Monday, April 18, 2005 11:33 PM
> To: 'Martin Probst'; antlr-interest@antlr.org
> Subject: RE: [antlr-interest] On trees and JavaBeans, part 2: tree
> creation
> 
> That looks cool -- I'll have to look harder at it!
> 
> Though I'd really like to be able to specify matches and actions to
take
> on
> the matches (I prefer declarative programming when possible...)
> 
> -- Scott
> 
> > -----Original Message-----
> > From: Martin Probst [mailto:mail@martin-probst.com]
> > Sent: Monday, April 18, 2005 10:54 AM
> > To: 'Scott Stanchfield'; antlr-interest@antlr.org
> > Subject: RE: [antlr-interest] On trees and JavaBeans, part 2:
> > tree creation
> > [...]
> > Did you take a look at Apache JXPath? It uses an XPathy
> > language to query object graphs. Afaik it does this by using
> > reflection, but this is of course not necessary in ANTLR.
> 
> 
> 

From antlr-list at arizona-software.ch  Mon Apr 25 14:31:17 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon Apr 25 14:31:31 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <1114450530.8537.10.camel@localhost.localdomain>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
Message-ID: <07eb4950347095752868181618080eda@arizona-software.ch>

Hi,

I have been reading your last e-mails with great interest because I 
have similar problems in ANTLRWorks. I would like to share my comments 
about that and if you have any suggestions or comments, I would be 
delighted to read them!

Currently, I have to update the following things at each keystroke:

1) background parser (thread A)
2) syntax coloring (thread B)
3) list of all rules/tokens (thread C)
4) syntax diagram/NFA (thread D)
5) gutter information (thread E)

There is not as many elements as Prashant is talking about, but this is 
enough to slow down the editor depending on how you implement that. I 
am currently using the following methods which doesn't slow the editor 
(except when the syntax diagram is displayed - see my comments below) 
while trying to keep everything in sync as fast as possible:

1) At each keystroke, I awake my parsing thread (thread A) and, if the 
user doesn't press any key before a certain amount of time (let says a 
threshold of 100 ms), thread A runs. If the user presses a key before 
this threshold, thread A is put back to sleep again. Because the parser 
in thread A is running fast (full parsing, not incremental), the user 
won't notice any slow down.

2) When the parsing thread A is done, it notifies the other threads (B, 
C, D and E) so they starts to work. Again, if the user presses a key 
before a certain threshold in time, threads B, C, D and E are 
cancelled. If the user pauses long enough (let say more than 500 ms), 
threads B, C, D and E will have time to complete there work and the 
window will be updated.

3) On thread B (syntax coloring), I have the following problem: I need 
to lock the editor while the colorization is being made because 
otherwise the user can insert/delete a character and the color will not 
be applied at the right place. I currently cache the previous tokens 
list so when the new tokens list is available, I only colorize the 
modified tokens (using a fast diff comparaison). This is fast enough so 
the user doesn't notice anything. But this is maybe not the best 
solution - any idea ?

4) As Prashant wrote, the only time I notice a slowdown is when Swing 
updates the syntax diagram view. Because it is doing that in the events 
thread, if the display is taking too much time, the text zone will be 
"frozen" for a few ms and the user will notice that. I didn't find a 
nice way to solve that (is Swing able to update a view in another 
thread than the event thread?): I am currently caching the syntax 
diagram in a image (in thread C) so when Swing updates the view, only 
the image has to be drawn (and this is done only when the user pauses 
long enough).

In short, everything is fast and doesn't alter the edit experience of 
the user except when Swing is updating part of the window. How are 
other IDEs doing to update graphic elements without delaying the user 
input ? Are they updating them in another thread than the event thread 
or is it simply a matter of speed when rendering these elements ?

Best regards,

Jean

From prashant.deva at gmail.com  Mon Apr 25 17:03:46 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Apr 25 17:03:48 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f80504251702479ffe95@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
	<07eb4950347095752868181618080eda@arizona-software.ch>
	<41fed8f80504251702479ffe95@mail.gmail.com>
Message-ID: <41fed8f80504251703541f7470@mail.gmail.com>

Jean,
One little question. I have seen ur videos of the ide.
There was one in which the rules tree is updated while the user is typing.
Have u tried running that on windows. I don't have much experience
with a mac but  on windows if u are gonna update and draw that fast,
then the tree is gonna flash like crazy. It almost becomes a 'blinking
tree'.

Again i don't have much experience with swing. I am using swt which
renders native widgets.
In windows thus i am having this crazy problem that gui elements need
to be rendered at a slower rate than non-gui stuff, otherwise the
entire ide begins to 'blink'.

PRASHANT

On 4/26/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Jean,
>  One little question. I have seen ur videos of the ide.
> There was one in which the rules tree is updated while the user is typing.
> Have u tried running that on windows. I don't have much experience
> with a mac but  on windows if u are gonna update and draw that fast,
> then the tree is gonna flash like crazy. It almost becomes a 'blinking
> tree'.
> 
> Again i don't have much experience with swing. I am using swt which
> renders native widgets.
> In windows thus i am having this crazy problem that gui elements need
> to be rendered at a slower rate than non-gui stuff, otherwise the
> entire ide begins to 'blink'.
> 
> PRASHANT
> 
> On 4/26/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
> > Hi,
> >
> > I have been reading your last e-mails with great interest because I
> > have similar problems in ANTLRWorks. I would like to share my comments
> > about that and if you have any suggestions or comments, I would be
> > delighted to read them!
> >
> > Currently, I have to update the following things at each keystroke:
> >
> > 1) background parser (thread A)
> > 2) syntax coloring (thread B)
> > 3) list of all rules/tokens (thread C)
> > 4) syntax diagram/NFA (thread D)
> > 5) gutter information (thread E)
> >
> > There is not as many elements as Prashant is talking about, but this is
> > enough to slow down the editor depending on how you implement that. I
> > am currently using the following methods which doesn't slow the editor
> > (except when the syntax diagram is displayed - see my comments below)
> > while trying to keep everything in sync as fast as possible:
> >
> > 1) At each keystroke, I awake my parsing thread (thread A) and, if the
> > user doesn't press any key before a certain amount of time (let says a
> > threshold of 100 ms), thread A runs. If the user presses a key before
> > this threshold, thread A is put back to sleep again. Because the parser
> > in thread A is running fast (full parsing, not incremental), the user
> > won't notice any slow down.
> >
> > 2) When the parsing thread A is done, it notifies the other threads (B,
> > C, D and E) so they starts to work. Again, if the user presses a key
> > before a certain threshold in time, threads B, C, D and E are
> > cancelled. If the user pauses long enough (let say more than 500 ms),
> > threads B, C, D and E will have time to complete there work and the
> > window will be updated.
> >
> > 3) On thread B (syntax coloring), I have the following problem: I need
> > to lock the editor while the colorization is being made because
> > otherwise the user can insert/delete a character and the color will not
> > be applied at the right place. I currently cache the previous tokens
> > list so when the new tokens list is available, I only colorize the
> > modified tokens (using a fast diff comparaison). This is fast enough so
> > the user doesn't notice anything. But this is maybe not the best
> > solution - any idea ?
> >
> > 4) As Prashant wrote, the only time I notice a slowdown is when Swing
> > updates the syntax diagram view. Because it is doing that in the events
> > thread, if the display is taking too much time, the text zone will be
> > "frozen" for a few ms and the user will notice that. I didn't find a
> > nice way to solve that (is Swing able to update a view in another
> > thread than the event thread?): I am currently caching the syntax
> > diagram in a image (in thread C) so when Swing updates the view, only
> > the image has to be drawn (and this is done only when the user pauses
> > long enough).
> >
> > In short, everything is fast and doesn't alter the edit experience of
> > the user except when Swing is updating part of the window. How are
> > other IDEs doing to update graphic elements without delaying the user
> > input ? Are they updating them in another thread than the event thread
> > or is it simply a matter of speed when rendering these elements ?
> >
> > Best regards,
> >
> > Jean
> >
> >
>
From scott at javadude.com  Mon Apr 25 17:56:49 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Mon Apr 25 17:57:10 2005
Subject: [antlr-interest] Serious doubts on usage of
	incrementalparsinginides
In-Reply-To: <41fed8f80504251703541f7470@mail.gmail.com>
Message-ID: <200504260154.j3Q1ruBp014317@s2.eroute.net>

Double-buffering makes all the difference to avoid blinking... (I'm not sure
how to do it in SWT though)
-- Scott 

> Jean,
> One little question. I have seen ur videos of the ide.
> There was one in which the rules tree is updated while the 
> user is typing.
> Have u tried running that on windows. I don't have much 
> experience with a mac but  on windows if u are gonna update 
> and draw that fast, then the tree is gonna flash like crazy. 
> It almost becomes a 'blinking tree'.
> 
> Again i don't have much experience with swing. I am using swt 
> which renders native widgets.
> In windows thus i am having this crazy problem that gui 
> elements need to be rendered at a slower rate than non-gui 
> stuff, otherwise the entire ide begins to 'blink'.


From anton.safonov at refactorit.com  Tue Apr 26 03:27:08 2005
From: anton.safonov at refactorit.com (Anton Safonov)
Date: Tue Apr 26 03:27:09 2005
Subject: [antlr-interest] Conditionally parsing comments in Java language?
Message-ID: <426E177C.7020603@refactorit.com>

Hi, All!

Let's start with a slightly special Java example:

public void method() {
   int type = 0;

/*#SomeName#*///<editor-fold>
//-- type = 1;
//-- callOtherMethod();
/*$SomeName$*///</editor-fold>

/*#SomeName2#*///<editor-fold>
//-- type = 2;
/*$SomeName2$*///</editor-fold>

}

Now I try to change the original java.g (1.5) to detect such blocks, 
"uncomment" lines inside it on the fly, so that it builds the tree for 
the commented code as well.
The problem is that the lexer has rules SL_COMMENT/ML_COMMENT which 
detect that these are the comments and comment tokens are filtered and 
never reach the parser to be able to use any predicates or whatever.

I cannot let lexer to parse every comment, since the most of them are 
naturally not a Java code.
But at the same time some of the comments must be split into tokens to 
feed it to the parser.
So, the possible solution so fer: let comments pass to the parser, 
detect there that the comment can be parsed, kill leading "//--" and 
feed the block back to lexer etc.  Sounds weird, especially trying to 
keep the correct coordinates of the tokens/ASTs.

Any suggestions? May be there is a known canonical way to solve this?

Regards,
Anton

From noreply at googlegroups.com  Tue Apr 26 05:06:05 2005
From: noreply at googlegroups.com (noreply@googlegroups.com)
Date: Tue Apr 26 05:06:19 2005
Subject: [antlr-interest] Google Groups: You've been added to
	il-antlr-interest
Message-ID: <1114517165486577@googlegroups.com>

iloncar@gmail.com has invited you to join the il-antlr-interest with this 
message:



Here is the group's description:

Antlr interest mailing list.

----------------------- Google Groups Information ----------------------

The owner of the group has set your subscription type as "No Email", meaning 
that you'll need to visit the group's home page to view new messages. 

To view this group on the web, or edit your subscription, you will need to 
create a Google Account by going to:

http://www.google.com/accounts/NewAccount?service=groups2&dEM=antlr-interest@antlr.org&continue=http:%2F%2Fgroups-beta.google.com%2Fgroup%2Fil-antlr-interest%2F

Visit this group on the web by using this URL:

http://groups-beta.google.com/group/il-antlr-interest

You can unsubscribe from this group using the following URL:

http://groups-beta.google.com/group/il-antlr-interest/unsub?u=MjenlQgAAACf2NLI57h-Qv71WPIJBMtw

-------------------- Information About This Message --------------------

If you feel that this message is abuse, please inform the Google Groups staff 
by using the URL below. 
http://groups-beta.google.com/groups/abuse?direct=MQAAAFgpIgBSIlYAM%2FJNAA
From iloncar at gmail.com  Tue Apr 26 05:24:47 2005
From: iloncar at gmail.com (=?ISO-8859-2?Q?Ivica_Lon=E8ar?=)
Date: Tue Apr 26 05:24:50 2005
Subject: [antlr-interest] Google Groups: You've been added to
	il-antlr-interest
In-Reply-To: <1114517165486577@googlegroups.com>
References: <1114517165486577@googlegroups.com>
Message-ID: <70aed1c305042605245be3d032@mail.gmail.com>

On 4/26/05, noreply@googlegroups.com <noreply@googlegroups.com> wrote:
> iloncar@gmail.com has invited you to join the il-antlr-interest with this
> message:
> 
> Here is the group's description:
> 
> Antlr interest mailing list.

First: I'm sorry for this email. 

This is somewhat off topic.

Obviously I was trying to setup google group to handle antlr-interest
mailing list and I have failed. I need to subscribe google group to
antlr-interest mailing list.
Could someone help?


Thanks,

-- 
Ivica Loncar
From Anthony.Youngman at eca-international.com  Tue Apr 26 06:55:50 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Tue Apr 26 06:55:54 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FEE1@lnml1.eca-international.local>

Are ides even a good thing? :-)

Working in Visual Studio (iirc) it won't even let me make "mistakes",
which is real pain in the neck when I'm half-way through typing
something and then need to go off and check something. As soon as I take
focus away from the line, it is checked, and if there's an error the
line grabs focus again. BLOODY ARTIFICIAL STUPIDITY :-)

And, I think it was IBM's work, it has been shown that code that is
written and checked WITHOUT the aid of a computer tends to work better
than code that has been written interactively. I *much* prefer working
on paper - it's far easier to have an overview over the entire project -
and all these fancy tools get in the way.

I guess, actually, it's the visual/abstract dichotomy. I gather the
educational world got a bit of a shock "recently". It's always been
accepted that kids go through developmental stages. The last major
transition is from concrete to abstract thought, and it's always been
assumed that this happens about age 14, give or take a few years. Recent
research seems to show that maybe *half* of people never make this
transition.

It's my guess that people who do make this transition are far less
reliant on visuals or, like me, actually tend to positively *dislike*
visuals. It's my belief (and experience) that ides make life easier for
the average guy, but that the *good* programmer does even better without
one.

Not that I do much nowadays, but I'd typically do loads of work, then a
build/fix/build/fix cycle. An ide (such as emacs :-) doesn't gain me
much. But something (such as VS) that actively forces me to think in
"nuts and bolts" mode all the time is an active hindrance - and it does
it in the name of making me more productive!

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott Stanchfield
Sent: 25 April 2005 01:50
To: 'Prashant Deva'; antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious doubts on usage of incremental
parsinginides

Ummm... that's what eclipse does, and it's amazingly fast.

First, there are two concepts here:

1) incremental compilation
2) editor parsing for decoration & "instant errors"

Have you tried running a full build of anything recently? Most large
projects take several minutes (3-5 at least) or more. The incremental
building in eclipse has probably saved me a good year of development
time
since it came out... (And I'm not kidding... If I had to go back to
rebuilding by hand every once in a while, then figure out the context of
each error, I'd go nuts...)



****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From antlr at eduard-ralph.de  Tue Apr 26 07:29:56 2005
From: antlr at eduard-ralph.de (Eduard Ralph)
Date: Tue Apr 26 07:30:03 2005
Subject: [antlr-interest] are ides a good thing? (was: Serious doubts on
	usage of incrementalparsinginides)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE1@lnml1.eca-international.local>
Message-ID: <20050426142959.64867400B14@p15166426.pureserver.info>

Hi,

this is probably a bit off-topic, but here I go anyway.

> Are ides even a good thing? :-)

I would say yes.

> And, I think it was IBM's work, it has been shown that code that is
> written and checked WITHOUT the aid of a computer tends to work better
> than code that has been written interactively. 

I'm a bit sceptical about that sort of thing. What were the criteria for
good?

> I *much* prefer working
> on paper - it's far easier to have an overview over the entire project -
> and all these fancy tools get in the way.

Depends on what I'm trying to do. I'll agree that conceptualizing certain
things like my UML Diagrams work better for me doing it by hand, but when it
comes to actual coding I wouldn't want to miss my tools. Plus which, you end
up having to code the stuff from paper into the machine again anyway.

> It's my guess that people who do make this transition are far less
> reliant on visuals or, like me, actually tend to positively *dislike*
> visuals. 

I would be very careful on that tenant. I think you are equating visuals
with imagination. It is correct that often one needs to be able to draw on
ones imagination to make an abstraction - making the connection to
non-visual is a far more dangerous assumption to hold. Disliking tools could
easily be interpreted as inflexibility to adaptation and actually resisting
future trends. Following your argumentation I would have to disavow the
mouse and the GUI for a command line. Some of you might agree that the GUI
was the worst thing to do (I knew one Professor who would turn the mouse
over on its back as first action at a computer), but by in large it helps me
and just about anybody else I know get things done quicker more effective.

> It's my belief (and experience) that ides make life easier for
> the average guy, but that the *good* programmer does even better without
> one.

One I'm not willing to share with you. What I would agree on, is that all
the bells and whistles do not replace the most important feature in every
project: the developers brain. If you are willing to let your tools to take
over everything, then obviously the quality of the solution will be poor. So
sitting down and thinking about what you're doing is sometimes more
important then just hacking away.

> But something (such as VS) that actively forces me to think in
> "nuts and bolts" mode all the time is an active hindrance - and it does
> it in the name of making me more productive!

I have never experience VS to be that way. Nor emacs or any other software
tool I ever used. The fact is: you need to know the tool you're working
with. And that requires time. Nobody would expect a carpenter to be able to
use a totally new-fangled saw off the bat. It takes time and experience. And
every tool as complex as emacs or VS require time.
That of course leads to a more principle question: why are our user
interfaces so poor, that I have such a learning curve involved with learning
a tool like VS or emacs? But that is of course a horse of a different color.

Greets,

Eduard Ralph

From johnm-antlr at non.net  Tue Apr 26 09:01:21 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Tue Apr 26 09:01:01 2005
Subject: [antlr-interest] Conditionally parsing comments in Java language?
In-Reply-To: <426E177C.7020603@refactorit.com>
References: <426E177C.7020603@refactorit.com>
Message-ID: <17006.26065.83476.464929@despot.non.net>

>>>>> "Anton" == Anton Safonov <anton.safonov@refactorit.com> writes:
[...]

> I cannot let lexer to parse every comment, since the most of them are
> naturally not a Java code.  But at the same time some of the comments
> must be split into tokens to feed it to the parser.  So, the possible
> solution so fer: let comments pass to the parser, detect there that the
> comment can be parsed, kill leading "//--" and feed the block back to
> lexer etc.  Sounds weird, especially trying to keep the correct
> coordinates of the tokens/ASTs.

Seems like your case is very well structured so you could do a really
simple preprocessor to "uncomment" those lines.

Hope this helps,
		John

From johnm-antlr at non.net  Tue Apr 26 09:14:17 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Tue Apr 26 09:13:57 2005
Subject: [antlr-interest] Programmer modalities (was: Serious doubts on
	usage of incremental parsinginides)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE1@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE4040128FEE1@lnml1.eca-international.local>
Message-ID: <17006.26841.370588.623505@despot.non.net>

>>>>> "Anthony" == Anthony Youngman <Anthony.Youngman@eca-international.com> writes:
[...]

> Are ides even a good thing? :-)

Alas, that depends on way too many variables to have any definitive,
general answer.


> Working in Visual Studio (iirc) it won't even let me make "mistakes",
> which is real pain in the neck when I'm half-way through typing something
> and then need to go off and check something. As soon as I take focus away
> from the line, it is checked, and if there's an error the line grabs
> focus again. BLOODY ARTIFICIAL STUPIDITY :-)

I haven't played with VS recently but tools which heavily constrain the
developer so that they can only ever write valid constructs definitely
cause problems for serious programmers.  However, that approach can work
wonderfully for simple end-user level "programming" tasks.

> And, I think it was IBM's work, it has been shown that code that is
> written and checked WITHOUT the aid of a computer tends to work better
> than code that has been written interactively. I *much* prefer working on
> paper - it's far easier to have an overview over the entire project - and
> all these fancy tools get in the way.

Such "clean room" engineering approaches are quite expensive.

[...]
> It's my guess that people who do make this transition are far less
> reliant on visuals or, like me, actually tend to positively *dislike*
> visuals.

False.  Different people are wired differently in terms of the dominance
order of the various sense modalities in their thinking.  It sounds like
neither of the top two modalities are visual for you (where it is one of
them for the majority of people).  IMHO, the tools and approaches you use
should play to your strengths.

Take care,
	John
From johnm-antlr at non.net  Tue Apr 26 09:33:30 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Tue Apr 26 09:33:12 2005
Subject: [antlr-interest] View update management (was: Serious doubts on
	usage of incremental parsinginides)
In-Reply-To: <07eb4950347095752868181618080eda@arizona-software.ch>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
	<07eb4950347095752868181618080eda@arizona-software.ch>
Message-ID: <17006.27994.559127.333434@despot.non.net>

>>>>> "Jean" == Jean Bovet <antlr-list@arizona-software.ch> writes:
[...]

> 3) On thread B (syntax coloring), I have the following problem: I need to
> lock the editor while the colorization is being made because otherwise
> the user can insert/delete a character and the color will not be applied
> at the right place. I currently cache the previous tokens list so when
> the new tokens list is available, I only colorize the modified tokens
> (using a fast diff comparaison). This is fast enough so the user doesn't
> notice anything. But this is maybe not the best solution - any idea ?

Add a level of indirection in the input flow so that you disconnect the
source code snapshot as of when the parse started from any editing done
while the parse is happening.

While you're inserting the in-flight characters into the editing buffer,
use a neutral color.  That helps give the user some feedback as the typing
progresses that the system hasn't fully caught up with them yet.


That reminds me, another trick to help manage when to do updates is
immediately after separator and terminator tokens have been inserted.
I.e., it's less disruptive for the flow if these background threads are
invoked after a '}' or ';' or between "words" (i.e., after whitespace).

This can be nicer than using the timer approach because you can basically
always have at most a single update in progress (e.g., don't launch any
updates while an update is in progress).

Note that his approach also matches the bursty nature of how people
actually work.


> 4) As Prashant wrote, the only time I notice a slowdown is when Swing
> updates the syntax diagram view. Because it is doing that in the events
> thread, if the display is taking too much time, the text zone will be
> "frozen" for a few ms and the user will notice that. I didn't find a nice
> way to solve that (is Swing able to update a view in another thread than
> the event thread?): I am currently caching the syntax diagram in a image
> (in thread C) so when Swing updates the view, only the image has to be
> drawn (and this is done only when the user pauses long enough).

Check out Sun's JDC TechTips for J2SE.  Jaz (um, er, John Zukowski) has
written some tips on doing separating updates and mainline processing,
dealing with the Swing event queue, double-buffering, etc.

Hope this helps,
		John
From johnm-antlr at non.net  Tue Apr 26 09:40:32 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Tue Apr 26 09:40:13 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042505132d9a8ce7@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
Message-ID: <17006.28416.887582.24456@despot.non.net>

>>>>> "Prashant" == Prashant Deva <prashant.deva@gmail.com> writes:
[...]

> So here is my problem stated once again - You can't run an incremental
> parser on every keystroke cause no matter how fast the parser is, the
> amount of 'other' stuff to update will slow the editor.

Depends on how tightly you need/want to constrain the synchronization of
the various views.

[...]
> So what's the use of an incremental parser.

For some situations, people do really want the system to be extremely
strict.  Though, in most of those cases that come immediately to mind,
the interface is relatively simple.

Of course, in those really strict cases, I don't know that I'd call them
incremental parsers as much as I'd call them extremely constrained
editors.

Take care,
	John
From madcapmaggie at yahoo.com  Tue Apr 26 09:59:45 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Tue Apr 26 09:59:49 2005
Subject: [antlr-interest] Conditionally parsing comments in Java language?
In-Reply-To: 6667
Message-ID: <20050426165945.35298.qmail@web30214.mail.mud.yahoo.com>

When I had a similar problem, I ended up calling the
parser a second time.

If you have enough information up front, you might be
able to use protected rules and semantic predicates.


--- Anton Safonov <anton.safonov@refactorit.com>
wrote:
> Hi, All!
> 
> Let's start with a slightly special Java example:
> 
> public void method() {
>    int type = 0;
> 
> /*#SomeName#*///<editor-fold>
> //-- type = 1;
> //-- callOtherMethod();
> /*$SomeName$*///</editor-fold>
> 
> /*#SomeName2#*///<editor-fold>
> //-- type = 2;
> /*$SomeName2$*///</editor-fold>
> 
> }
> 
> Now I try to change the original java.g (1.5) to
> detect such blocks, 
> "uncomment" lines inside it on the fly, so that it
> builds the tree for 
> the commented code as well.
> The problem is that the lexer has rules
> SL_COMMENT/ML_COMMENT which 
> detect that these are the comments and comment
> tokens are filtered and 
> never reach the parser to be able to use any
> predicates or whatever.
> 
> I cannot let lexer to parse every comment, since the
> most of them are 
> naturally not a Java code.
> But at the same time some of the comments must be
> split into tokens to 
> feed it to the parser.
> So, the possible solution so fer: let comments pass
> to the parser, 
> detect there that the comment can be parsed, kill
> leading "//--" and 
> feed the block back to lexer etc.  Sounds weird,
> especially trying to 
> keep the correct coordinates of the tokens/ASTs.
> 
> Any suggestions? May be there is a known canonical
> way to solve this?
> 
> Regards,
> Anton
> 
> 
From prashant.deva at gmail.com  Tue Apr 26 10:00:39 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Apr 26 10:00:49 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <17006.28416.887582.24456@despot.non.net>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<17006.28416.887582.24456@despot.non.net>
Message-ID: <41fed8f805042610001c27e212@mail.gmail.com>

john,

> Depends on how tightly you need/want to constrain the synchronization of
> the various views.
> 
exactly, so if u have to update everything else so late only, then why
run an incremental parser. why not run a batch parser?


> For some situations, people do really want the system to be extremely
> strict.  Though, in most of those cases that come immediately to mind,
> the interface is relatively simple.
> 
> Of course, in those really strict cases, I don't know that I'd call them
> incremental parsers as much as I'd call them extremely constrained
> editors.
> 

You dont seem to get the meaning of an 'incremental parser'. an
incremental parser is one which will produce exactly the same output
as that of a batch parser but it parses just the modifications and
leaves the rest of the stuff as is.
Thus a good incremental parser (like mine ;) ) should allow an
unrestricted editing model and should recover from errors eaxctly as a
batch parser would.

Jean,

>Back to our discussion, have you any clue how IDE are handling >the
>drawing of UI element without "blocking" the user on the >event-thread ?

No idea. I am still looking at the source of eclipse. They have got a
custom implementation of almost every SWT widget, which is super
complex!

PRASHANT

On 4/26/05, John D. Mitchell <johnm-antlr@non.net> wrote:
> >>>>> "Prashant" == Prashant Deva <prashant.deva@gmail.com> writes:
> [...]
> 
> > So here is my problem stated once again - You can't run an incremental
> > parser on every keystroke cause no matter how fast the parser is, the
> > amount of 'other' stuff to update will slow the editor.
> 
> Depends on how tightly you need/want to constrain the synchronization of
> the various views.
> 
> [...]
> > So what's the use of an incremental parser.
> 
> For some situations, people do really want the system to be extremely
> strict.  Though, in most of those cases that come immediately to mind,
> the interface is relatively simple.
> 
> Of course, in those really strict cases, I don't know that I'd call them
> incremental parsers as much as I'd call them extremely constrained
> editors.
> 
> Take care,
>         John
>
From prashant.deva at gmail.com  Tue Apr 26 10:11:34 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Apr 26 10:11:37 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042610001c27e212@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<17006.28416.887582.24456@despot.non.net>
	<41fed8f805042610001c27e212@mail.gmail.com>
Message-ID: <41fed8f805042610111e948a1f@mail.gmail.com>

part 2 of my reply....

Jean,
  What is the config of the comps you ran ur antlrWorks under till now?

PRASHANT

On 4/26/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> john,
> 
> > Depends on how tightly you need/want to constrain the synchronization of
> > the various views.
> >
> exactly, so if u have to update everything else so late only, then why
> run an incremental parser. why not run a batch parser?
> 
> 
> > For some situations, people do really want the system to be extremely
> > strict.  Though, in most of those cases that come immediately to mind,
> > the interface is relatively simple.
> >
> > Of course, in those really strict cases, I don't know that I'd call them
> > incremental parsers as much as I'd call them extremely constrained
> > editors.
> >
> 
> You dont seem to get the meaning of an 'incremental parser'. an
> incremental parser is one which will produce exactly the same output
> as that of a batch parser but it parses just the modifications and
> leaves the rest of the stuff as is.
> Thus a good incremental parser (like mine ;) ) should allow an
> unrestricted editing model and should recover from errors eaxctly as a
> batch parser would.
> 
> Jean,
> 
> >Back to our discussion, have you any clue how IDE are handling >the
> >drawing of UI element without "blocking" the user on the >event-thread ?
> 
> No idea. I am still looking at the source of eclipse. They have got a
> custom implementation of almost every SWT widget, which is super
> complex!
> 
> PRASHANT
> 
> On 4/26/05, John D. Mitchell <johnm-antlr@non.net> wrote:
> > >>>>> "Prashant" == Prashant Deva <prashant.deva@gmail.com> writes:
> > [...]
> >
> > > So here is my problem stated once again - You can't run an incremental
> > > parser on every keystroke cause no matter how fast the parser is, the
> > > amount of 'other' stuff to update will slow the editor.
> >
> > Depends on how tightly you need/want to constrain the synchronization of
> > the various views.
> >
> > [...]
> > > So what's the use of an incremental parser.
> >
> > For some situations, people do really want the system to be extremely
> > strict.  Though, in most of those cases that come immediately to mind,
> > the interface is relatively simple.
> >
> > Of course, in those really strict cases, I don't know that I'd call them
> > incremental parsers as much as I'd call them extremely constrained
> > editors.
> >
> > Take care,
> >         John
> >
>
From prashant.deva at gmail.com  Tue Apr 26 10:22:05 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue Apr 26 10:22:07 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042610111e948a1f@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<17006.28416.887582.24456@despot.non.net>
	<41fed8f805042610001c27e212@mail.gmail.com>
	<41fed8f805042610111e948a1f@mail.gmail.com>
Message-ID: <41fed8f8050426102252c2995a@mail.gmail.com>

part 3..

Jean,
> 3) On thread B (syntax coloring), I have the following problem: I need
> to lock the editor while the colorization is being made because
> otherwise the user can insert/delete a character and the color will not
> be applied at the right place. I currently cache the previous tokens
> list so when the new tokens list is available, I only colorize the
> modified tokens (using a fast diff comparaison). This is fast enough so
> the user doesn't notice anything. But this is maybe not the best
> solution - any idea ?
> 

As there is an interval between the time u do the parsing and the
coloring, what if the text has  been changed by the user in that
interval?

PRASHANT


On 4/26/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> part 2 of my reply....
> 
> Jean,
>   What is the config of the comps you ran ur antlrWorks under till now?
> 
> PRASHANT
> 
> On 4/26/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > john,
> >
> > > Depends on how tightly you need/want to constrain the synchronization of
> > > the various views.
> > >
> > exactly, so if u have to update everything else so late only, then why
> > run an incremental parser. why not run a batch parser?
> >
> >
> > > For some situations, people do really want the system to be extremely
> > > strict.  Though, in most of those cases that come immediately to mind,
> > > the interface is relatively simple.
> > >
> > > Of course, in those really strict cases, I don't know that I'd call them
> > > incremental parsers as much as I'd call them extremely constrained
> > > editors.
> > >
> >
> > You dont seem to get the meaning of an 'incremental parser'. an
> > incremental parser is one which will produce exactly the same output
> > as that of a batch parser but it parses just the modifications and
> > leaves the rest of the stuff as is.
> > Thus a good incremental parser (like mine ;) ) should allow an
> > unrestricted editing model and should recover from errors eaxctly as a
> > batch parser would.
> >
> > Jean,
> >
> > >Back to our discussion, have you any clue how IDE are handling >the
> > >drawing of UI element without "blocking" the user on the >event-thread ?
> >
> > No idea. I am still looking at the source of eclipse. They have got a
> > custom implementation of almost every SWT widget, which is super
> > complex!
> >
> > PRASHANT
> >
> > On 4/26/05, John D. Mitchell <johnm-antlr@non.net> wrote:
> > > >>>>> "Prashant" == Prashant Deva <prashant.deva@gmail.com> writes:
> > > [...]
> > >
> > > > So here is my problem stated once again - You can't run an incremental
> > > > parser on every keystroke cause no matter how fast the parser is, the
> > > > amount of 'other' stuff to update will slow the editor.
> > >
> > > Depends on how tightly you need/want to constrain the synchronization of
> > > the various views.
> > >
> > > [...]
> > > > So what's the use of an incremental parser.
> > >
> > > For some situations, people do really want the system to be extremely
> > > strict.  Though, in most of those cases that come immediately to mind,
> > > the interface is relatively simple.
> > >
> > > Of course, in those really strict cases, I don't know that I'd call them
> > > incremental parsers as much as I'd call them extremely constrained
> > > editors.
> > >
> > > Take care,
> > >         John
> > >
> >
>
From antlr-list at arizona-software.ch  Tue Apr 26 10:25:32 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue Apr 26 10:25:41 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042610111e948a1f@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<17006.28416.887582.24456@despot.non.net>
	<41fed8f805042610001c27e212@mail.gmail.com>
	<41fed8f805042610111e948a1f@mail.gmail.com>
Message-ID: <6656f8e57971196085154ce523fcb699@arizona-software.ch>

> part 2 of my reply....
>
> Jean,
>   What is the config of the comps you ran ur antlrWorks under till now?
>

A PowerBook G4 1.5 Ghz with 1GB RAM. I will conduct some tests on my 
old 500 Mhz box and will let you know how it is doing.

Jean

From antlr-list at arizona-software.ch  Tue Apr 26 10:43:14 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue Apr 26 10:43:20 2005
Subject: [antlr-interest] Re: View update management (was: Serious doubts on
	usage of incremental parsinginides)
In-Reply-To: <17006.27994.559127.333434@despot.non.net>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
	<07eb4950347095752868181618080eda@arizona-software.ch>
	<17006.27994.559127.333434@despot.non.net>
Message-ID: <052b53edbf831fc892245318e3eed115@arizona-software.ch>

>
> Add a level of indirection in the input flow so that you disconnect the
> source code snapshot as of when the parse started from any editing done
> while the parse is happening.
>

I am not sure to understand exactly... Currently, the colorization 
happens only when the parser is done. And the parser is launched only 
when the user pauses. Where would you put another level of indirection 
?

> While you're inserting the in-flight characters into the editing 
> buffer,
> use a neutral color.  That helps give the user some feedback as the 
> typing
> progresses that the system hasn't fully caught up with them yet.
>

Yes, that's what I'm doing now.

>
> That reminds me, another trick to help manage when to do updates is
> immediately after separator and terminator tokens have been inserted.
> I.e., it's less disruptive for the flow if these background threads are
> invoked after a '}' or ';' or between "words" (i.e., after whitespace).
>

Interesting... I'll think about.

> This can be nicer than using the timer approach because you can 
> basically
> always have at most a single update in progress (e.g., don't launch any
> updates while an update is in progress).
>

What kind of single update ? At some point I can have multiple thread 
running to update different components: do you suggest that I launch 
each thread in serial rather than in parallel ?

I would probably combines both approach because if the user pauses in 
the middle of a string or a comment, he wants to see the correct color.

> Check out Sun's JDC TechTips for J2SE.  Jaz (um, er, John Zukowski) has
> written some tips on doing separating updates and mainline processing,
> dealing with the Swing event queue, double-buffering, etc.
>

Thanks a lot! I will have a look.

Jean

From antlr-list at arizona-software.ch  Tue Apr 26 10:47:56 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue Apr 26 10:48:02 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f8050426102252c2995a@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<17006.28416.887582.24456@despot.non.net>
	<41fed8f805042610001c27e212@mail.gmail.com>
	<41fed8f805042610111e948a1f@mail.gmail.com>
	<41fed8f8050426102252c2995a@mail.gmail.com>
Message-ID: <ae6f1f927437830e87bab25cb800f676@arizona-software.ch>

>
> As there is an interval between the time u do the parsing and the
> coloring, what if the text has  been changed by the user in that
> interval?
>

The colorization thread is cancelled if it already started and if it is 
not in the colorization process itself. The problem is that if the user 
makes a change when the colorization thread is actually colorizing the 
text... he will have to wait a few ms. Currently, the colorization is 
fast enough (and only colorize the modified part of the text) that I 
don't feel any delay. But I don't see how to modify the color of the 
text in the JTextPane without blocking the editing of this JTextPane to 
prevent concurrent modification... any idea ?

Jean

From ric.klaren at gmail.com  Tue Apr 26 10:49:32 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Apr 26 10:49:36 2005
Subject: [antlr-interest] [2.7.5/c++]: static TokenRef* getRef(const Token*
	p); Definition missing from source tree
In-Reply-To: <004301c5458e$e51701d0$0a02a8c0@asterix>
References: <004301c5458e$e51701d0$0a02a8c0@asterix>
Message-ID: <426E7F2C.6010001@gmail.com>

Hi,

Sorry for taking a long time to answer, was on a short holiday.

Francis ANDRE wrote:
> I am trying to rebuild a dll version of antlr 2.7.5 and got lots of 
> undefined symbol for
> 
> static TokenRef* getRef(const Token* p);
> 
> and as a matter of fact, it is not defined elsewhere in the source tree.

It should be defined in TokenRefCount.cpp (in lib/cpp/src) make sure 
it's included in the project.

Cheers,

Ric
From johnm-antlr at non.net  Tue Apr 26 11:31:27 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Tue Apr 26 11:31:08 2005
Subject: [antlr-interest] Re: View update management (was: Serious doubts on
	usage of incremental parsinginides)
In-Reply-To: <052b53edbf831fc892245318e3eed115@arizona-software.ch>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
	<07eb4950347095752868181618080eda@arizona-software.ch>
	<17006.27994.559127.333434@despot.non.net>
	<052b53edbf831fc892245318e3eed115@arizona-software.ch>
Message-ID: <17006.35071.806937.538767@despot.non.net>

>>>>> "Jean" == Jean Bovet <antlr-list@arizona-software.ch> writes:
[...]

>> Add a level of indirection in the input flow so that you disconnect the
>> source code snapshot as of when the parse started from any editing done
>> while the parse is happening.

> I am not sure to understand exactly... Currently, the colorization
> happens only when the parser is done. And the parser is launched only
> when the user pauses. Where would you put another level of indirection ?

Your question was about the views getting out of sync because of user
activity while all of the view processing was in-flight.  I'm saying to
disconnect the editing view from everything else so that all of the other
views can be safely updated while the user is still editing.  At worst, the
other views are a few seconds behind the editing view.


[...]
>> That reminds me, another trick to help manage when to do updates is
>> immediately after separator and terminator tokens have been inserted.
>> I.e., it's less disruptive for the flow if these background threads are
>> invoked after a '}' or ';' or between "words" (i.e., after whitespace).

> Interesting... I'll think about.

>> This can be nicer than using the timer approach because you can
>> basically always have at most a single update in progress (e.g., don't
>> launch any updates while an update is in progress).

> What kind of single update ? At some point I can have multiple thread
> running to update different components: do you suggest that I launch each
> thread in serial rather than in parallel ?

Ah, sorry for the confusion.  I'm talking about one launch of the parse
followed by all of the updating of the dependent views as a "single update"
bundle.

I'm basically agnostic about whether you do the view updates serially or in
parallel.

> I would probably combines both approach because if the user pauses in the
> middle of a string or a comment, he wants to see the correct color.

Actually, I'd want to see the last, unfinished token still in the neutral,
unfinished color as a clean bit of feedback that things are still in an
unfinished state.

Personally, I'd hook into the view refresh command (i.e., Ctrl-L in Emacs,
Ctrl-R in most browsers) to manually force a complete refresh at any
point.  I'd also hook the refresh into the auto-save feature.

Hope this helps,
		John
From johnm-antlr at non.net  Tue Apr 26 11:38:51 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Tue Apr 26 11:38:31 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <41fed8f805042610001c27e212@mail.gmail.com>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<17006.28416.887582.24456@despot.non.net>
	<41fed8f805042610001c27e212@mail.gmail.com>
Message-ID: <17006.35515.20480.361030@despot.non.net>

>>>>> "Prashant" == Prashant Deva <prashant.deva@gmail.com> writes:
[...]

>> Depends on how tightly you need/want to constrain the synchronization of
>> the various views.

> exactly, so if u have to update everything else so late only, then why
> run an incremental parser. why not run a batch parser?

Why do you keep asking the same question?  You tell me why you think you
should run an incremental parser in that case.  If you don't need the tight
constaints then there's no need for a true incremental parser.  If you do
need the constraints then you've got some issues to work out in terms of
e.g., the tradeoffs.


>> For some situations, people do really want the system to be extremely
>> strict.  Though, in most of those cases that come immediately to mind,
>> the interface is relatively simple.

>> Of course, in those really strict cases, I don't know that I'd call them
>> incremental parsers as much as I'd call them extremely constrained
>> editors.

> You dont seem to get the meaning of an 'incremental parser'. an
> incremental parser is one which will produce exactly the same output as
> that of a batch parser but it parses just the modifications and leaves
> the rest of the stuff as is.  Thus a good incremental parser (like mine
> ;) ) should allow an unrestricted editing model and should recover from
> errors eaxctly as a batch parser would.

No, I understand quite well what a true incremental parser is, that's why I
made that comment.  Most reasons that I've heard that people want a true
incremental parser is because they have some need/desire for very tightly
constrained limits on e.g., what the user can do any any given point.  In
all of the other cases, people yack endlessly about 'incrementalism' but
don't really want any constraints and run into the same connundrum that you
have.

Take care,
	John
From Loring.G.Craymer at jpl.nasa.gov  Tue Apr 26 13:55:28 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Tue Apr 26 13:55:31 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <07eb4950347095752868181618080eda@arizona-software.ch>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
	<07eb4950347095752868181618080eda@arizona-software.ch>
Message-ID: <6.2.1.2.2.20050426133126.029bd2a0@mail.jpl.nasa.gov>

At 02:31 PM 4/25/2005, Jean Bovet wrote:
>4) As Prashant wrote, the only time I notice a slowdown is when Swing 
>updates the syntax diagram view. Because it is doing that in the events 
>thread, if the display is taking too much time, the text zone will be 
>"frozen" for a few ms and the user will notice that. I didn't find a nice 
>way to solve that (is Swing able to update a view in another thread than 
>the event thread?): I am currently caching the syntax diagram in a image 
>(in thread C) so when Swing updates the view, only the image has to be 
>drawn (and this is done only when the user pauses long enough).
>
>In short, everything is fast and doesn't alter the edit experience of the 
>user except when Swing is updating part of the window. How are other IDEs 
>doing to update graphic elements without delaying the user input ? Are 
>they updating them in another thread than the event thread or is it simply 
>a matter of speed when rendering these elements ?

Jean--

The syntax diagram is an "analysis" pane rather than an editing pane, so it 
need not be updated as the user types--when I'm typing, I'm not concerned 
with analysis.  I'd suggest update on events which change the editing 
screen significantly--navigating to another part of the text, for example, 
or mouse events in general (one hand off of the keyboard).  John Mitchell's 
comment on separators is a good one--I like having the editor flash 
matching parentheses and braces if you pause after hitting a close 
parenthesis or brace.  Pause after semicolon is another good update 
point--when I do that, I have usually paused to think.

I also find it unsettling when an application decides to update the screen 
with a very slow update operation just because I've paused for a few 
seconds--all too often I have just gotten my hands back in a typing 
position when that happens.

--Loring


>Best regards,
>
>Jean


From antlr-list at arizona-software.ch  Tue Apr 26 16:12:54 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue Apr 26 16:13:01 2005
Subject: [antlr-interest] Serious doubts on usage of incremental
	parsinginides
In-Reply-To: <6.2.1.2.2.20050426133126.029bd2a0@mail.jpl.nasa.gov>
References: <41fed8f805042503057f1a1f6b@mail.gmail.com>
	<200504251127.j3PBReBs028791@s2.eroute.net>
	<41fed8f805042505132d9a8ce7@mail.gmail.com>
	<41fed8f805042505237986731f@mail.gmail.com>
	<41fed8f80504250535609bbf03@mail.gmail.com>
	<1114450530.8537.10.camel@localhost.localdomain>
	<07eb4950347095752868181618080eda@arizona-software.ch>
	<6.2.1.2.2.20050426133126.029bd2a0@mail.jpl.nasa.gov>
Message-ID: <88a023df4a6fdd1ae0ed465ea450bc73@arizona-software.ch>

Thanks for all you comments! I will improve ANTLRWorks in that way.

Jean

On 26 avr. 05, at 13:55, Loring Craymer wrote:

> At 02:31 PM 4/25/2005, Jean Bovet wrote:
>> 4) As Prashant wrote, the only time I notice a slowdown is when Swing 
>> updates the syntax diagram view. Because it is doing that in the 
>> events thread, if the display is taking too much time, the text zone 
>> will be "frozen" for a few ms and the user will notice that. I didn't 
>> find a nice way to solve that (is Swing able to update a view in 
>> another thread than the event thread?): I am currently caching the 
>> syntax diagram in a image (in thread C) so when Swing updates the 
>> view, only the image has to be drawn (and this is done only when the 
>> user pauses long enough).
>>
>> In short, everything is fast and doesn't alter the edit experience of 
>> the user except when Swing is updating part of the window. How are 
>> other IDEs doing to update graphic elements without delaying the user 
>> input ? Are they updating them in another thread than the event 
>> thread or is it simply a matter of speed when rendering these 
>> elements ?
>
> Jean--
>
> The syntax diagram is an "analysis" pane rather than an editing pane, 
> so it need not be updated as the user types--when I'm typing, I'm not 
> concerned with analysis.  I'd suggest update on events which change 
> the editing screen significantly--navigating to another part of the 
> text, for example, or mouse events in general (one hand off of the 
> keyboard).  John Mitchell's comment on separators is a good one--I 
> like having the editor flash matching parentheses and braces if you 
> pause after hitting a close parenthesis or brace.  Pause after 
> semicolon is another good update point--when I do that, I have usually 
> paused to think.
>
> I also find it unsettling when an application decides to update the 
> screen with a very slow update operation just because I've paused for 
> a few seconds--all too often I have just gotten my hands back in a 
> typing position when that happens.
>
> --Loring
>
>
>> Best regards,
>>
>> Jean
>
>

From scott at javadude.com  Tue Apr 26 17:17:42 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 26 17:18:44 2005
Subject: [antlr-interest] Serious doubts on usage of
	incrementalparsinginides
In-Reply-To: <6.2.1.2.2.20050426133126.029bd2a0@mail.jpl.nasa.gov>
Message-ID: <200504270114.j3R1EiBr023706@s2.eroute.net>

> The syntax diagram is an "analysis" pane rather than an 
> editing pane, so it need not be updated as the user 
> types--when I'm typing, I'm not concerned with analysis.

Many people are. As long as it can be updated w/o disruption, I'd say do it.
There will be points where you can't update (syntax is incomplete), but if
there are two views on a single model, the user shouldn't have to guess if
they're in sync...

If the diagram is meant as "once in a while analysis", it should be a
separate dialog, not a view. Views (as in model VIEW controller) are meant
to stay in sync with a model.

> I'd 
> suggest update on events which change the editing screen 
> significantly--navigating to another part of the text, for 
> example, or mouse events in general (one hand off of the 
> keyboard).

Those are a good start; I'd suggest adding rule completion (semicolon) as
well.

HOWEVER, what if someone removes a rule ref:

old:

    foo: fee fie fo;

new:

    foo: fee fo;

If they don't jump somewhere else, this should still update the diagram. The
question is, when.

Using a timeout is quite reasonable.

> John Mitchell's comment on separators is a good 
> one--I like having the editor flash matching parentheses and 
> braces if you pause after hitting a close parenthesis or 
> brace.  Pause after semicolon is another good update 
> point--when I do that, I have usually paused to think.

BTW: check out what Eclipse does with parens. It draws a little box around
matching parens, no flashing. Not distracting, but also the visualization is
right there if you need it.

> I also find it unsettling when an application decides to 
> update the screen with a very slow update operation just 
> because I've paused for a few seconds--all too often I have 
> just gotten my hands back in a typing position when that happens.

Agreed, but that's no reason not to do updates; that's reason to do highly
optimized or incremental updates, which of course leads us right back to the
initial question...

And my answer is they are useful. I and pretty much everyone I work with
really appreciate the instant feedback. (The one exception is a VI
dinosaur... If any of you are VI users, too bad. Nyah... ;)

Later,
-- Scott


From scott at javadude.com  Tue Apr 26 17:22:47 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 26 17:22:59 2005
Subject: [antlr-interest] Serious doubts on usage of
	incrementalparsinginides
In-Reply-To: <6656f8e57971196085154ce523fcb699@arizona-software.ch>
Message-ID: <200504270119.j3R1JlBp025399@s2.eroute.net>

Seriously -- don't remove features that are too slow on a 500MHz machine.
Please set a more recent standard. I had a 500MHz box when I worked at
MageLang in 1998 (and it's sitting to my right as a bookrest right now ;)

Maybe pick a reasonable speed from 3 years back? 1.8-2.0G? Or at least
1.5...

I've got a couple 3.2 boxes, but that's definitely not a reasonable
standard.

Or you could make some of the performance-intensive features optional.

Later,
-- Scott

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Jean Bovet
> Sent: Tuesday, April 26, 2005 1:26 PM
> To: Prashant Deva
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Serious doubts on usage of 
> incrementalparsinginides
> 
> > part 2 of my reply....
> >
> > Jean,
> >   What is the config of the comps you ran ur antlrWorks 
> under till now?
> >
> 
> A PowerBook G4 1.5 Ghz with 1GB RAM. I will conduct some 
> tests on my old 500 Mhz box and will let you know how it is doing.
> 
> Jean
> 


From scott at javadude.com  Tue Apr 26 17:33:02 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 26 17:34:40 2005
Subject: [antlr-interest] Serious doubts on usage of
	incrementalparsinginides
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE1@lnml1.eca-international.local>
Message-ID: <200504270131.j3R1UjBp028976@s2.eroute.net>

> It's my belief (and experience) 
> that ides make life easier for the average guy, but that the 
> *good* programmer does even better without one.

If you'd ever seen me with Eclipse, you'd know that that statement is 100%
false.

A good programmer with a good tool that he knows well can significantly
increase productivity.

Note that I said "knows well". This means that a tool like eclipse can
really slow folks down if they don't know it well. For example, switching
from emacs to eclipse can be a productivity drain for a while. However, once
you come up to speed and learn a lot of tricks, many can increase your
productivity. (I've seen this countless times with ex vi/emacs users moving
to eclipse.) But there are some folks who will always be better with vi or
emacs than eclipse. (IMHO, it's mostly stubborn folks who insist "IDE" == "I
Don't have Emacs" and just plain refuse to really learn the tool...)

Statements like you're making are just naiive. Just because you haven't
taken the time to really learn a good IDE (VAJ or Eclipse, for example),
doesn't mean they're toys. You have to give them more than a short (read 1-2
weeks) try. You have to really use them to find how productive they can be.

If you only use the basic editing support (which is what most people do at
first), of course it's less productive than some of the whiz-bang stuff you
can do with a few keystrokes in vi or an elisp macro. But when you really
open your eyes to the rest of the tool, it blows everything else away.

Of course YMMV.

Just don't spread totally unsubstantiated statements like that. For every
person you can bring up to spout those statements, I'm sure I can find
several to counter it (just from places I've worked ;)

Later,
-- Scott


From scott at javadude.com  Tue Apr 26 17:37:37 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Apr 26 17:37:51 2005
Subject: [antlr-interest] are ides a good thing? (was: Serious doubts
	onusage of incrementalparsinginides)
In-Reply-To: <20050426142959.64867400B14@p15166426.pureserver.info>
Message-ID: <200504270134.j3R1YeBp030431@s2.eroute.net>

> > And, I think it was IBM's work, it has been shown that code that is 
> > written and checked WITHOUT the aid of a computer tends to 
> work better 
> > than code that has been written interactively.

Copyright 1968 IBM Corporation All Rights Reserved



From Anthony.Youngman at eca-international.com  Wed Apr 27 01:30:59 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Apr 27 01:31:03 2005
Subject: [antlr-interest] Serious doubts on usage
	ofincrementalparsinginides
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FEE4@lnml1.eca-international.local>

Great :-(

I've JUST upgraded my box at home to a 1GHz Athlon ... and that chip was
salvaged from a pc that was about 3 years old iirc ...

By all means make cpu-intensive stuff optional, but don't forget those
users who use Antlr in their spare time on their personal machines, and
can't afford to buy bleeding edge every few years.

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott Stanchfield
Sent: 27 April 2005 01:23
To: 'Jean Bovet'; 'Prashant Deva'
Cc: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious doubts on usage
ofincrementalparsinginides

Seriously -- don't remove features that are too slow on a 500MHz
machine.
Please set a more recent standard. I had a 500MHz box when I worked at
MageLang in 1998 (and it's sitting to my right as a bookrest right now
;)

Maybe pick a reasonable speed from 3 years back? 1.8-2.0G? Or at least
1.5...

I've got a couple 3.2 boxes, but that's definitely not a reasonable
standard.

Or you could make some of the performance-intensive features optional.

Later,
-- Scott

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Jean Bovet
> Sent: Tuesday, April 26, 2005 1:26 PM
> To: Prashant Deva
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Serious doubts on usage of 
> incrementalparsinginides
> 
> > part 2 of my reply....
> >
> > Jean,
> >   What is the config of the comps you ran ur antlrWorks 
> under till now?
> >
> 
> A PowerBook G4 1.5 Ghz with 1GB RAM. I will conduct some 
> tests on my old 500 Mhz box and will let you know how it is doing.
> 
> Jean
> 




****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From Anthony.Youngman at eca-international.com  Wed Apr 27 01:45:09 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Apr 27 01:45:12 2005
Subject: [antlr-interest] Serious doubts on usage of
	incrementalparsinginides
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FEE5@lnml1.eca-international.local>

And what percentage of your time do spend actually *working* in your
IDE?

I don't know what a good answer should be, but it should certainly be
pretty low!

If I only spend 20% of my time in my IDE, then even an 80% improvement
in my productivity within the IDE is not going to make much difference
to my overall productivity, is it?

Your point about a good tool and a good programmer is well made.
However, in my (limited) experience, even with good programmers I find
that the more powerful the tool is, the more it is misused to the
detriment of the program... (hence my point about not using it much -
the more you use it (%age of time wise) the more certain it is that you
are misusing it).

Cheers,
Wol

-----Original Message-----
From: Scott Stanchfield [mailto:scott@javadude.com] 
Sent: 27 April 2005 01:33
To: Anthony Youngman; antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious doubts on usage of
incrementalparsinginides

> It's my belief (and experience) 
> that ides make life easier for the average guy, but that the 
> *good* programmer does even better without one.

If you'd ever seen me with Eclipse, you'd know that that statement is
100%
false.

A good programmer with a good tool that he knows well can significantly
increase productivity.

Note that I said "knows well". This means that a tool like eclipse can
really slow folks down if they don't know it well. For example,
switching
from emacs to eclipse can be a productivity drain for a while. However,
once
you come up to speed and learn a lot of tricks, many can increase your
productivity. (I've seen this countless times with ex vi/emacs users
moving
to eclipse.) But there are some folks who will always be better with vi
or
emacs than eclipse. (IMHO, it's mostly stubborn folks who insist "IDE"
== "I
Don't have Emacs" and just plain refuse to really learn the tool...)

Statements like you're making are just naiive. Just because you haven't
taken the time to really learn a good IDE (VAJ or Eclipse, for example),
doesn't mean they're toys. You have to give them more than a short (read
1-2
weeks) try. You have to really use them to find how productive they can
be.

If you only use the basic editing support (which is what most people do
at
first), of course it's less productive than some of the whiz-bang stuff
you
can do with a few keystrokes in vi or an elisp macro. But when you
really
open your eyes to the rest of the tool, it blows everything else away.

Of course YMMV.

Just don't spread totally unsubstantiated statements like that. For
every
person you can bring up to spout those statements, I'm sure I can find
several to counter it (just from places I've worked ;)

Later,
-- Scott




****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From antlr at eduard-ralph.de  Wed Apr 27 03:11:20 2005
From: antlr at eduard-ralph.de (Eduard Ralph)
Date: Wed Apr 27 03:11:26 2005
Subject: [antlr-interest] are ides a good thing? (was: Serious doubts
	onusage of incrementalparsinginides)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE5@lnml1.eca-international.local>
Message-ID: <20050427101123.4375D400B14@p15166426.pureserver.info>


> And what percentage of your time do spend actually *working* in your
> IDE?

Obviously more then you.

> I don't know what a good answer should be, but it should certainly be
> pretty low!

Do you actually *implement* what you think up? I mean unless you do academic
type of things, you end up spending a lot of time implementing. Most you do
in academic field is writing some sort of paper or the other and then making
a sort of prototype of proof of concept, which is a totally different kettle
of fish. And even then I spent 30% of my time coding.
I know every book on software engineering writes something to the effect
that you should spend at least 60% on planning. But unfortunately only very
few customers have had a course on software engineering and only limited
imagination concerning a finished software product. That does tend to skew
things.

> If I only spend 20% of my time in my IDE, then even an 80% improvement
> in my productivity within the IDE is not going to make much difference
> to my overall productivity, is it?

As a matter of calculation: If you increase your productivity around 80%,
you save 16% of your overall time you spend in an IDE. An improvement of
around 16% is a good thing, isn't it?

> Your point about a good tool and a good programmer is well made.
> However, in my (limited) experience, even with good programmers I find
> that the more powerful the tool is, the more it is misused to the
> detriment of the program... 

But that still is a very poor argument against an IDE. An analogy would be
something like: I don't use any electronic correction systems in my car,
because that makes me drive more reckless. The factor is still: use your
brain first.

You've recited a study from 1968 (which unfortunately I didn't have the
luxury of reading) which probably is a bad way to make your point, because
technology has changed markedly since then. You've also indicated that you
spend very little time doing implementation, so I would like to ask you:
have you ever implemented a piece of software that took 3 months or more to
complete? Even if you only spend 20% of your time on it? I think you would
find that your approach is slightly off synch with coding reality.

Greets,
Eddie

P.S.: I don't mean to get insulting, but your arguments to seem to imply
that you have a certain white tower syndrome. With that I mean that you
probably are very good at whatever abstract thing you do, but you seem to be
a bit high browed about those ones of us, who actually make *things*. As a
suggestion: try a project in the industry (best 4-10 people, 6-12 months of
coding), you might find it an interesting different way to software
development.

From Anthony.Youngman at eca-international.com  Wed Apr 27 03:39:29 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Apr 27 03:39:33 2005
Subject: [antlr-interest] are ides a good thing? (was: Serious
	doubtsonusage of incrementalparsinginides)
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FEE7@lnml1.eca-international.local>

I work for an end user. There's only about 4 coders all told, and we
tend to work somewhat individually.

And I find I spend most of my time talking to the users, including quite
often asking the question "are you sure what you're asking for is
sensible" (a lot of our work is statistics).

So I almost invariably find, once I actually sit down to code, that the
basic design is pretty much all there. I rarely design while coding. And
some of my biggest projects have been refactoring other peoples'
programs that clearly evolved and weren't designed. The end result is
usually a program that is smaller and more feature-full.

I take your point about academe, but I don't work there, and I'd still
try and implement a lot of their ideas (not all :-). Take oo for example
- not that I do any of it at the moment but coding a
state-transition-table on paper almost certainly beats coding it in an
IDE. It's a lot harder to miss things by accident :-)

John Mitchell said I was unusual, in that I don't tend to "see" things
visually (he didn't put it that way). So I almost certainly see things
differently from you. But what I find interesting is an article (url is
dead unfortunately), where the author said he noticed that much of Unix
history is very verbal. And it wouldn't surprise me in the slightest if
most of the top Linux hackers were verbal people...

(Oh - and yes I am a (very) abstract person. Didn't I say that
educational academics were surprised "recently" to discover that maybe
50% of people never make the cognitive leap from concrete to abstract
thought? :-)

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Eduard Ralph
Sent: 27 April 2005 11:11
To: antlr-interest@antlr.org
Subject: [antlr-interest] are ides a good thing? (was: Serious
doubtsonusage of incrementalparsinginides)



But that still is a very poor argument against an IDE. An analogy would
be
something like: I don't use any electronic correction systems in my car,
because that makes me drive more reckless. The factor is still: use your
brain first.

You've recited a study from 1968 (which unfortunately I didn't have the
luxury of reading) which probably is a bad way to make your point,
because
technology has changed markedly since then. You've also indicated that
you
spend very little time doing implementation, so I would like to ask you:
have you ever implemented a piece of software that took 3 months or more
to
complete? Even if you only spend 20% of your time on it? I think you
would
find that your approach is slightly off synch with coding reality.

Greets,
Eddie

P.S.: I don't mean to get insulting, but your arguments to seem to imply
that you have a certain white tower syndrome. With that I mean that you
probably are very good at whatever abstract thing you do, but you seem
to be
a bit high browed about those ones of us, who actually make *things*. As
a
suggestion: try a project in the industry (best 4-10 people, 6-12 months
of
coding), you might find it an interesting different way to software
development.



****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From scott at javadude.com  Wed Apr 27 03:46:22 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 27 03:45:38 2005
Subject: [antlr-interest] Serious doubts on usage
	ofincrementalparsinginides
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE5@lnml1.eca-international.local>
Message-ID: <200504271142.j3RBgLBp013093@s2.eroute.net>

> And what percentage of your time do spend actually *working* 
> in your IDE?

75% or so. The rest is spent in design meetings and such.

> I don't know what a good answer should be, but it should 
> certainly be pretty low!

Why? It's my coding environment.

> If I only spend 20% of my time in my IDE,

If you only spend 20% of your time coding, you aren't a programmer.

That's not a bad thing, but programmers write code, dude...

> then even an 80% 
> improvement in my productivity within the IDE is not going to 
> make much difference to my overall productivity, is it?

Are you trying to make the point that is you can do something much more
efficiently you shouldn't?

Do you have a dishwasher? A washing machine? A microwave? 

Sure, you only spend an hour or so a day on eating at home & cleaning up,
but do you really do it all manually? Do you wash your clothes in the
bathtub with a washboard?

> Your point about a good tool and a good programmer is well made.
> However, in my (limited) experience, 

RING RING RING! Those without appropriate experience in something shouldn't
be making such strong statements.

> even with good 
> programmers I find that the more powerful the tool is, the 
> more it is misused to the detriment of the program...

tools are only misused if:
* people don't know how to properly use them
* people use it as a golden hammer

Both of the above can be recognized and corrected pretty easily.

If you've seen tools misused, did you try to correct the behavior? Did you
mention *how* the tools were being misused to management? If not, you're
obstructing justice.

Such overly general statements without little experience and without knowing
all the facts are just trolling.

How much time have *you* actually spent *learning* a good tool? You sound to
me like the type who tries a new tool for an hour without reading the manual
and gives up because you don't how to use it.

Later,
-- Scott


From scott at javadude.com  Wed Apr 27 03:51:31 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 27 03:50:42 2005
Subject: [antlr-interest] are ides a good thing? (was: Serious
	doubtsonusage of incrementalparsinginides)
In-Reply-To: <20050427101123.4375D400B14@p15166426.pureserver.info>
Message-ID: <200504271147.j3RBlTBp015016@s2.eroute.net>

> You've recited a study from 1968 (which unfortunately I 

Dude -- that was a joke I made ;) I have no idea what supposed study that
was, but it sounds like it was either incredibly ill-informed or *really*
old (hence the 1968 crack ;)

> P.S.: I don't mean to get insulting, but your arguments to 
> seem to imply that you have a certain white tower syndrome. 

IMHO: A glass tower with dirty windows so he's not looking out much...

(The type of statements I hear often come from hardened vi/emacs users who
believe that the command line is the most efficient way to get things done
even though they've never really given any other tool (or GUI) a fair
chance. You know, the M$ basher types who have never really used windows but
"know" it sucks... Of course if all they do is try to run from a DOS prompt
it's gonna suck big time. They have to use the environment the way it was
intended to see the benefits.

Note: I don't want to start a win/*nix thread here, so please let this drop
-- I just wanted to point out that I've seen this nonsense many times
before...)

Later,
-- Scott


From scott at javadude.com  Wed Apr 27 03:58:22 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 27 03:57:48 2005
Subject: [antlr-interest] are ides a good thing? (was:
	Seriousdoubtsonusage of incrementalparsinginides)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE7@lnml1.eca-international.local>
Message-ID: <200504271154.j3RBsJBp017488@s2.eroute.net>

> I work for an end user. There's only about 4 coders all told, 
> and we tend to work somewhat individually.
> 
> And I find I spend most of my time talking to the users, 
> including quite often asking the question "are you sure what 
> you're asking for is sensible" (a lot of our work is statistics).

And what do your coders do? Sounds like you're not one of the main coders,
but more of a requirements person. NOTE: THIS IS A GOOD THING, but you're in
no position to make statements about "all coders"

> John Mitchell said I was unusual, in that I don't tend to 
> "see" things visually (he didn't put it that way).

I think John's point was that different people use different parts of their
brains in different ways. Some are more visual than others, and that says
nothing about the quality of their work.

> where the author said he noticed that much of Unix history is 
> very verbal. And it wouldn't surprise me in the slightest if 
> most of the top Linux hackers were verbal people...

"Hackers"... Enough said.

> (Oh - and yes I am a (very) abstract person. Didn't I say 
> that educational academics were surprised "recently" to 
> discover that maybe 50% of people never make the cognitive 
> leap from concrete to abstract thought? :-)

Do you have any sources for any studies you keep quoting?

I would tend to agree on that one, but you really need to back statements
like that up.

I could claim that a recent study showed that "90% of programmers are more
productive with IDEs". Of course that "study" would only be my personal
experience at the past couple of jobs I've been at, converting people to
using eclipse from vi/emacs, and with nothing but their remarks as defining
"more productive". Without knowing the source of such statements, they're
pretty useless.

Later,
-- Scott


From scott at javadude.com  Wed Apr 27 04:01:36 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 27 04:00:56 2005
Subject: [antlr-interest] are ides a good thing? (was:Seriousdoubtsonusage
	of incrementalparsinginides)
In-Reply-To: <200504271154.j3RBsJBp017488@s2.eroute.net>
Message-ID: <200504271157.j3RBvWBp018715@s2.eroute.net>

> And what do your coders do? Sounds like you're not one of the 
> main coders, but more of a requirements person. NOTE: THIS IS 
> A GOOD THING, but you're in no position to make statements 
> about "all coders"

I should clarify that I meant that it's a GOOD THING to have folks who spend
a lot of their time hardening requirements, and NOT that I'm saying it's a
good thing you don't spend much time coding (ie: I'm not implying that
you're a bad coder...)

Later,
-- Scott


From Anthony.Youngman at eca-international.com  Wed Apr 27 07:29:30 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Apr 27 07:29:34 2005
Subject: [antlr-interest] Serious doubts on usage
	ofincrementalparsinginides
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FEE8@lnml1.eca-international.local>

Oddly enough, I'm one of those unusual people who usually reads the
manual from cover to cover - that is, if it's got covers. If it's a
hypertext help tool I usually curse blue murder because you can never
find what you're looking for, and they're a pig to try and read from
start to finish - especially if you do most of your reading when you
don't have access to a computer :-)

Cheers,
Wol

-----Original Message-----
From: Scott Stanchfield [mailto:scott@javadude.com] 
Sent: 27 April 2005 11:46
To: Anthony Youngman; antlr-interest@antlr.org
Subject: RE: [antlr-interest] Serious doubts on usage
ofincrementalparsinginides


How much time have *you* actually spent *learning* a good tool? You
sound to
me like the type who tries a new tool for an hour without reading the
manual
and gives up because you don't how to use it.

Later,
-- Scott




****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From Anthony.Youngman at eca-international.com  Wed Apr 27 07:43:47 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Apr 27 07:43:50 2005
Subject: [antlr-interest] are ides a good thing? (was:
	Seriousdoubtsonusage of incrementalparsinginides)
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FEE9@lnml1.eca-international.local>

Well, I'm as much a coder as any of the others here - "can you write a
program to do X?" and I do.

As for 
> "Hackers"... Enough said.
What do you mean?

By definition, a hacker is one of the brightest of the bright (using the
original definition, not the media-mangled one). I'm inclined to think
that proves my point.

As for the studies, that one about working on paper is an old one, and
was probably the foundation behind peer review etc. And I have some
(second hand) experience of it - my first boss, when he joined the
company, had to work for six months without a computer before it turned
up. Okay, I'm going on his word, but he said when the program was
finally typed in and run, it ran perfectly first time.

The one about concrete/abstract thinking - that's from my Masters
studying from last year - something to do with "communication and
understanding your audience" (and "what is a 12-year-old capable of
understanding" :-) .

> I could claim that a recent study showed that "90% of programmers are
more
productive with IDEs".

Actually, that wouldn't surprise me if it were true :-) IDEs probably do
enhance the ability of the average programmer - with the emphasis on the
word *average*.

Cheers,
Wol

-----Original Message-----
From: Scott Stanchfield [mailto:scott@javadude.com] 
Sent: 27 April 2005 11:58
To: Anthony Youngman; antlr-interest@antlr.org
Subject: RE: [antlr-interest] are ides a good thing? (was:
Seriousdoubtsonusage of incrementalparsinginides)

> I work for an end user. There's only about 4 coders all told, 
> and we tend to work somewhat individually.
> 
> And I find I spend most of my time talking to the users, 
> including quite often asking the question "are you sure what 
> you're asking for is sensible" (a lot of our work is statistics).

And what do your coders do? Sounds like you're not one of the main
coders,
but more of a requirements person. NOTE: THIS IS A GOOD THING, but
you're in
no position to make statements about "all coders"

> John Mitchell said I was unusual, in that I don't tend to 
> "see" things visually (he didn't put it that way).

I think John's point was that different people use different parts of
their
brains in different ways. Some are more visual than others, and that
says
nothing about the quality of their work.

> where the author said he noticed that much of Unix history is 
> very verbal. And it wouldn't surprise me in the slightest if 
> most of the top Linux hackers were verbal people...

"Hackers"... Enough said.

> (Oh - and yes I am a (very) abstract person. Didn't I say 
> that educational academics were surprised "recently" to 
> discover that maybe 50% of people never make the cognitive 
> leap from concrete to abstract thought? :-)

Do you have any sources for any studies you keep quoting?

I would tend to agree on that one, but you really need to back
statements
like that up.

I could claim that a recent study showed that "90% of programmers are
more
productive with IDEs". Of course that "study" would only be my personal
experience at the past couple of jobs I've been at, converting people to
using eclipse from vi/emacs, and with nothing but their remarks as
defining
"more productive". Without knowing the source of such statements,
they're
pretty useless.

Later,
-- Scott




****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From parrt at cs.usfca.edu  Wed Apr 27 08:30:15 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Apr 27 08:30:18 2005
Subject: a bit too far off topic (was [antlr-interest] are ides a good
	thing?)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE7@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE4040128FEE7@lnml1.eca-international.local>
Message-ID: <e98ca60fdc43bd30cfecd42efe6c3920@cs.usfca.edu>

Hi Guys,

While I find all of this really interesting, may I gently suggest that 
it's a bit too far off topic now for too long?  Thanks!

Further, as the supreme dictator for life, may I also remind folks that 
it is my desire for this list to always be friendly.  I think some 
responses are getting a bit too "direct".  Some of these topics bring 
up many passionate feelings, but I'd prefer if we didn't always let 
people know exactly how we feel. ;)  I'm guilty of this too sometimes 
(just ask our IT department <snicker>), but I really want to avoid the 
slashdot syndrome (too much bashing).

Anyhoo, thanks for being members of the list and keep those good ideas 
flowing!

Ter

From pink at odahoda.de  Wed Apr 27 10:34:50 2005
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed Apr 27 10:57:11 2005
Subject: [antlr-interest] Bug in antlr.py (Python runtime module)
Message-ID: <d4oi4o$mt2$1@sea.gmane.org>

Hello,

I just started to use my favourite parser generator with my favourite
programming language ;)

Here's a small bug that a have found:
In antlr.py from 2.7.5, line 242-250

-----------------------------------------------------------------------
            sb.append("expecting char ")
            if self.mismatchType == MismatchedCharException.NOT_RANGE:
                sb.append("NOT ")
            sb.append("in range: ")
            appendCharName(sb, self.expecting)
            sb.append("..")
            appendCharName(sb, self.upper)
            sb.append(", found ")
            appendCharName(sb, self.foundChar)
-----------------------------------------------------------------------

This should be 3*'self.appendCharName' (as it is correctly done a few lines
above and below).

The FAQ says that I should post bug reports in the jGuru forum, but I'm not
in the mood today to register on just another website and I'm working on a
slow computer where browsing website with flash ads is quite a pain. I
could also directly mail to one of the 'antlr for python' maintainers.
What's the preferred way? (Only if I find more issues or course ;)

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://www.odahoda.de/

From r_bezpoyasko at tet.com.ua  Wed Apr 27 08:59:32 2005
From: r_bezpoyasko at tet.com.ua (Work)
Date: Wed Apr 27 14:03:22 2005
Subject: [antlr-interest] (no subject)
Message-ID: <001101c54b42$1a25d960$1d02a8c0@TeT.int>

Please advise what changes to be added to expr.g file that compile 
 programm which can recognize function syntax.

 I mean 'functionName(list of params)'
Idea - lexer recornize that this is any function and return name of function and list of params in literals or number
for example in C#,
I type function of calculating sum                     SUM(TextBox1.Text, 2)

taking TextBox1.Text = 2 lexer return me           SUM(2,2)

Realisation of function is my duty.

Is it possible or not ?

Thanks,
Roman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050427/211934cc/attachment.html
From s_mitra8 at yahoo.com  Mon Apr 25 21:37:34 2005
From: s_mitra8 at yahoo.com (sudip mitra)
Date: Wed Apr 27 14:03:57 2005
Subject: [antlr-interest] comparing stored procedures/Terence please help.
Message-ID: <20050426043734.74566.qmail@web51307.mail.yahoo.com>

Hi All,
I need to compare two stored procedures with the same grammar  sitting on two different servers .How can ANTLR help me on this ?
 
Regards,
Sudip.

		
---------------------------------
Do you Yahoo!?
 Yahoo! Mail - You care about security. So do we.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050425/cbc43deb/attachment.html
From scott at javadude.com  Wed Apr 27 20:22:36 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Apr 27 20:22:58 2005
Subject: [antlr-interest] are ides a good thing? (was:Seriousdoubtsonusage
	of incrementalparsinginides)
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FEE9@lnml1.eca-international.local>
Message-ID: <200504280419.j3S4JOBr017982@s2.eroute.net>

> Well, I'm as much a coder as any of the others here - "can 
> you write a program to do X?" and I do.

Not what I said. Read my note again.

You said you only spend 20% of your time coding, and my point was that you
have no business making such sweeping assertions under those circumstances.

I most definitely did not say nor imply anything about your coding
_ability_.

> As for 
> > "Hackers"... Enough said.
> What do you mean?
> 
> By definition, a hacker is one of the brightest of the bright [...]

Wrong definition. I'm talking about folks who just sit and randomly hack
code together, no design, and a "just get it to work" approach with no
consideration of maintenance.

They may be incredibly bright, but if you've ever tried to work on their
code, you know exactly what I'm talking about...

I'm not talking about people who break into systems...

Later,
-- Scott


From octavian_nita_2004 at yahoo.com  Thu Apr 28 04:03:23 2005
From: octavian_nita_2004 at yahoo.com (Octavian Nita)
Date: Thu Apr 28 04:03:27 2005
Subject: [antlr-interest] ANTLR service - just an ideea...
Message-ID: <20050428110323.49462.qmail@web54205.mail.yahoo.com>

Hello everyone! First I want to thank all those that helped me with that weird rule because I those posts helped me understand better ANTLR and I managed to obtain a warning-free grammar for my project (and until now, error-free too).
 
THANK YOU!
 
Second, I want to post an ideea I came up with while thinking at my grammar.
 
DISCLAIMER: if someone else had this ideea too and bothered to post it somewhere, I'm sorry but I didn't see/read it; if this is the case, I won't mention anything from my part anymore.
 
As I said, I was thinking about my grammar at my girlfriend's house and I wanted to try some small rules; now, she does have a computer and Internet connection but she is not a programmer (or anyone else in her family, for that matter) and of course she doen't have Java or ANTLR installed; I felt it was really stupid to download and install Java, then ANTLR (well, with the ANTLR part it would have not been so hard, really...) for just 4 "simple" grammar rules; then I was struck by the ideea ( :) ) :
"It would be nice to have a service on the ANTLR site so that I could write a small grammar with a simple editor, I could upload the file/text and I would receive the output of the generation (not necessarily the generated files, only the compilation/translation output)"
I guess it's really simple to realize this (no more complicated than sending a mail I guess...)
 
I could make this application but unfortunately, I have to finish my diploma paper/project and I'm currently running out of time; if anyone would be interested in such a thing, please say so; maybe somebody is less occupied or if not and if the ideea turns out to be good, after 1st of july, I could try it.
 
Thanks!

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050428/7336e149/attachment.html
From parrt at cs.usfca.edu  Thu Apr 28 11:38:35 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Apr 28 11:38:19 2005
Subject: [antlr-interest] no more insensitive or insulting posts please
In-Reply-To: <200504280419.j3S4JOBr017982@s2.eroute.net>
References: <200504280419.j3S4JOBr017982@s2.eroute.net>
Message-ID: <72c80d40a49eb0e6a007041e6a260069@cs.usfca.edu>

Folks,

I really don't like angry posts (though I'm not perfect either).  
Nonetheless, I will turn on list moderation if this thread does not 
stop or if future posts continue to be insensitive.  We thrive on 
diversity of ideas. :)

Thanks for your attention,
Ter

From serafettin_sentuerk at intergral.com  Fri Apr 29 00:36:26 2005
From: serafettin_sentuerk at intergral.com (Serafettin Senturk)
Date: Fri Apr 29 00:36:39 2005
Subject: [antlr-interest] Case sensitivity
Message-ID: <ANEFKENHALPOILMBNJFGOECNCAAA.serafettin_sentuerk@intergral.com>


 Hello everbody,

  Does anybody know if we can apply the case sensitivity to Parser grammar.
Actually, I write "caseSensitive=false" in my lexer grammar, then it works.
But when i do it in my parser, it does not work. Is there any one who knows
how to make it in another way in Parser grammar?

 Thanks,
 Serafettin



From open.zone at virgin.net  Fri Apr 29 01:02:59 2005
From: open.zone at virgin.net (Micheal J)
Date: Fri Apr 29 00:49:38 2005
Subject: [antlr-interest] Case sensitivity
In-Reply-To: <ANEFKENHALPOILMBNJFGOECNCAAA.serafettin_sentuerk@intergral.com>
Message-ID: <001601c54c91$dc534220$6402a8c0@hercules>

>  Hello everbody,
> 
>   Does anybody know if we can apply the case sensitivity to 
> Parser grammar. Actually, I write "caseSensitive=false" in my 
> lexer grammar, then it works. But when i do it in my parser, 
> it does not work. Is there any one who knows how to make it 
> in another way in Parser grammar?

Parsers deal with TokenStreams (not CharacterStreams). Tokens have no "case"
as such since there are essentially just codes (int codes). 

The lexemes attached to a token (e.g. the text of an IDENT token)would have
been dealt with - case-wise - in the lexer.

Cheers,

Micheal

From oliver.zeigermann at gmail.com  Fri Apr 29 00:55:56 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Apr 29 00:55:58 2005
Subject: [antlr-interest] Philosophical: How to collect data in AST traversal
Message-ID: <9da4f452050429005526427914@mail.gmail.com>

Folks!

I was just working with the Java grammar and had to add some action
data into the tree parser. I ended up passing data around between
several rules which caused quite some changes and also warnings
because of unsued return types. So I was wondering why not just
modifying class memebers from all rules that contain wanted data. I
know this may end up in the "global variables are evil" argument, but
I was just wondering how others are dealing with this.

Thanks for any comments 

  Oliver
From ewbank at gmail.com  Fri Apr 29 02:38:04 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Apr 29 02:38:06 2005
Subject: [antlr-interest] Philosophical: How to collect data in AST
	traversal
In-Reply-To: <9da4f452050429005526427914@mail.gmail.com>
References: <9da4f452050429005526427914@mail.gmail.com>
Message-ID: <dd3a065f05042902384954cc0d@mail.gmail.com>

Hi Oliver,

After some exploration, I ended up adding a hash table to my AST node
type; since I'm in C++, I used string as a key and return a "void*"
which I can cast to whatever I need.  This allows arbitrary
information anywhere in the tree.

Another way is - as you say:
- Return values for inherited attributes (up the tree), and
- Parameters for synthesized attributes (going down the tree)

I did this in some places where the information is more local.

There was a discussion on the list a while back about keeping track of
information - might be some good data there for you as well.

- B

On 4/29/05, Oliver Zeigermann <oliver.zeigermann@gmail.com> wrote:
> So I was wondering why not just
> modifying class memebers from all rules that contain wanted data. I
> know this may end up in the "global variables are evil" argument, but
> I was just wondering how others are dealing with this.
> 
> Thanks for any comments
> 
>   Oliver
>
From serafettin_sentuerk at intergral.com  Fri Apr 29 03:08:58 2005
From: serafettin_sentuerk at intergral.com (Serafettin Senturk)
Date: Fri Apr 29 03:09:04 2005
Subject: [antlr-interest] Filtering
Message-ID: <ANEFKENHALPOILMBNJFGOECPCAAA.serafettin_sentuerk@intergral.com>


  ok, thanks. then, how can i deal with filtering?

  Specifically, in my work, I have to distinguish between variable names and
statement names that look like each other.

  For example, i should make the distinguishment between "for" statement and
any variable starting with "for" like "foreign".

  For this reason, I get "for" with space(WS) or LPAREN by the help of the
lexer. Then, I pass it to the parser. The parser should take it and ignore
the LPAREN, a kind of filtering. Is this kind of filtering possible? If yes,
how can i realize it?

 Regards,
 Serafettin




From edelaney at sungardsct.com  Fri Apr 29 06:50:43 2005
From: edelaney at sungardsct.com (Ed Delaney)
Date: Fri Apr 29 06:50:53 2005
Subject: [antlr-interest] PLSQLGrammar.g - antlr
Message-ID: <OF72613F2B.DFFC6039-ON05256FF2.004B83F0-05256FF2.004C0C16@sungardsct.com>

Hey Michiel,
Are you still working on your PL/Sql project?

I finally got the PL/Sql grammar to generate and compile. I've created a 
simple main to test it, but I'm not sure what is happening. Have you made 
any more progress?
Remember, my experience with Java is pretty basic, though I know a zillion 
other languages.

All I want to do is feed it some Plsql and see if it parses or if it 
detects an error:


import java.io.DataInputStream;

class main {
    public static void main(String[] args) {
        try {
            PLSqlLexer lexer = new PLSqlLexer(new 
DataInputStream(System.in));
            PLSqlParser parser = new PLSqlParser(lexer);
            parser.start_rule();
        } catch(Exception e) {
            System.err.println("exception: "+e);
        }
    }
}

later on I want to generate an AST that I can start working with.  But as 
it stands, shouldn't this work as a syntax checker?

My test input is:
BEGIN
null;
END;

And when it runs I get

java main < t.sql
line 1:1: expecting EOF, found 'BEGIN'


Thanks,
Ed



---------------------------------------------------
Ed Delaney
SunGard SCT
Advisory Software Engineer
Phone Number (Office): 765-939-0533
Time Zone: US Indiana
edelaney@sungardsct.com
www.sungardsct.com

Leadership - Choices - Excellence
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050429/80d0544d/attachment.html
From Bharath.Sundararaman at starthis.com  Fri Apr 29 10:31:14 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Fri Apr 29 10:31:18 2005
Subject: [antlr-interest] charScanner panic.
Message-ID: <B1180416E5C44E49AE556D23DBB45B290EE62E@webmail.starthis.com>

Hi all,

 

I have an application that passes code to my ANTLR compiler. Recently,
when the code is passed, the CharScanner's panic() method is called
which causes a system exit. I over-rode the panic() method and prevented
the system from exiting which led to "can't find AST node type:
packageName.ASTName" exception. 

 

public void setASTNodeClass(String t) {

        theASTNodeType = t;

        try {

            theASTNodeTypeClass = Class.forName(t); // get class def

        }

        catch (Exception e) {

            // either class not found,

            // class is interface/abstract, or

            // class or initializer is not accessible.

            error("Can't find/access AST Node type" + t);

        }

    }

 

This method indicates to me that it's a class loader issue related to
Eclipse IDE and the way it deals with plugins. Has anybody faced this
problem before while using antlr.jar with their Eclipse plug-in? I know
one solution is to add antlr.jar to your system class path so that
parent CL will find it before the Eclipse CL does but I don't want to
follow that approach, even if it will work.

 

Any ideas?

________________________________

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Ed Delaney
Sent: Friday, April 29, 2005 8:51 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] PLSQLGrammar.g - antlr

 


Hey Michiel, 
Are you still working on your PL/Sql project? 

I finally got the PL/Sql grammar to generate and compile. I've created a
simple main to test it, but I'm not sure what is happening. Have you
made any more progress? 
Remember, my experience with Java is pretty basic, though I know a
zillion other languages. 

All I want to do is feed it some Plsql and see if it parses or if it
detects an error: 


import java.io.DataInputStream; 

class main { 
    public static void main(String[] args) { 
        try { 
            PLSqlLexer lexer = new PLSqlLexer(new
DataInputStream(System.in)); 
            PLSqlParser parser = new PLSqlParser(lexer); 
            parser.start_rule(); 
        } catch(Exception e) { 
            System.err.println("exception: "+e); 
        } 
    } 
} 

later on I want to generate an AST that I can start working with.  But
as it stands, shouldn't this work as a syntax checker? 

My test input is: 
BEGIN 
null; 
END; 

And when it runs I get 

java main < t.sql 
line 1:1: expecting EOF, found 'BEGIN' 


Thanks, 
Ed 



---------------------------------------------------
Ed Delaney
SunGard SCT
Advisory Software Engineer
Phone Number (Office): 765-939-0533
Time Zone: US Indiana
edelaney@sungardsct.com
www.sungardsct.com

Leadership - Choices - Excellence

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050429/a460e212/attachment-0001.html
From pink at odahoda.de  Fri Apr 29 10:33:11 2005
From: pink at odahoda.de (Benjamin Niemann)
Date: Fri Apr 29 10:33:21 2005
Subject: [antlr-interest] Re: Case sensitivity
References: <ANEFKENHALPOILMBNJFGOECNCAAA.serafettin_sentuerk@intergral.com>
Message-ID: <d4tqp1$9tl$1@sea.gmane.org>

Serafettin Senturk wrote:
>   Does anybody know if we can apply the case sensitivity to Parser
>   grammar.
> Actually, I write "caseSensitive=false" in my lexer grammar, then it
> works. But when i do it in my parser, it does not work. Is there any one
> who knows how to make it in another way in Parser grammar?

Do you refer to literals - double quoted strings in parser rules? To make
these case insensitive, you have to set the option
caseSensitiveLiterals=false for the lexer (As Micheal said, only the lexer
handles the 'raw' text. Literals in parser rules are automagically copied
into the lexer's literal table).

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://www.odahoda.de/

From parrt at cs.usfca.edu  Fri Apr 29 16:55:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Apr 29 16:55:04 2005
Subject: [antlr-interest] ANTLR service - just an ideea...
In-Reply-To: <20050428110323.49462.qmail@web54205.mail.yahoo.com>
References: <20050428110323.49462.qmail@web54205.mail.yahoo.com>
Message-ID: <91e58b64c7f6049e058ab1de11bb7798@cs.usfca.edu>


On Apr 28, 2005, at 4:03 AM, Octavian Nita wrote:
> "It would be nice to have a service on the ANTLR site so that I could 
> write a small grammar with a simple editor, I could upload the 
> file/text and I would receive the output of the generation (not 
> necessarily the generated files, only the compilation/translation 
> output)"
> I guess it's really simple to realize this (no more complicated than 
> sending a mail I guess...)

Hi Octavian,

Cool idea.  I built a language for generating VRML once and my 
colleague Tim Rohaly set up a page where you could type in IVL 
(pronounced "evil") and it spit back VRML like a service. :)

We're hoping to set up a "service" at antlr.org that ANTLRWorks can use 
to grab grammar fragments in order to help you get a new grammar 
together quickly.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From scott at javadude.com  Fri Apr 29 19:02:34 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Apr 29 19:02:48 2005
Subject: [antlr-interest] charScanner panic.
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B290EE62E@webmail.starthis.com>
Message-ID: <200504300300.j3U30ciR029765@s2.eroute.net>

When using antlr (or another 3rd party jar) in an eclipse plugin, you meed
to make sure that the jar is included in the runtime definition of the
plugin.xml. All you need to do is

1.	

	Add the jar in a dir in your plugin
2.	

	Edit your plugin.xml
3.	

	On the runtime tab pick "new" for a lib, and choose the jar you want
to add.

Alternatively, you could add a dependency on the org.antlr plugin that is
distributed with the antlr-eclipse plugin.
 
Later,
-- Scott
 


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bharath Sundararaman
Sent: Friday, April 29, 2005 1:31 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] charScanner panic.



Hi all,

 

I have an application that passes code to my ANTLR compiler. Recently, when
the code is passed, the CharScanner's panic() method is called which causes
a system exit. I over-rode the panic() method and prevented the system from
exiting which led to "can't find AST node type: packageName.ASTName"
exception. 

 

public void setASTNodeClass(String t) {

        theASTNodeType = t;

        try {

            theASTNodeTypeClass = Class.forName(t); // get class def

        }

        catch (Exception e) {

            // either class not found,

            // class is interface/abstract, or

            // class or initializer is not accessible.

            error("Can't find/access AST Node type" + t);

        }

    }

 

This method indicates to me that it's a class loader issue related to
Eclipse IDE and the way it deals with plugins. Has anybody faced this
problem before while using antlr.jar with their Eclipse plug-in? I know one
solution is to add antlr.jar to your system class path so that parent CL
will find it before the Eclipse CL does but I don't want to follow that
approach, even if it will work.

 

Any ideas?


  _____  


From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Ed Delaney
Sent: Friday, April 29, 2005 8:51 AM
To: antlr-interest@antlr.org
Subject: [antlr-interest] PLSQLGrammar.g - antlr

 


Hey Michiel, 
Are you still working on your PL/Sql project? 

I finally got the PL/Sql grammar to generate and compile. I've created a
simple main to test it, but I'm not sure what is happening. Have you made
any more progress? 
Remember, my experience with Java is pretty basic, though I know a zillion
other languages. 

All I want to do is feed it some Plsql and see if it parses or if it detects
an error: 


import java.io.DataInputStream; 

class main { 
    public static void main(String[] args) { 
        try { 
            PLSqlLexer lexer = new PLSqlLexer(new
DataInputStream(System.in)); 
            PLSqlParser parser = new PLSqlParser(lexer); 
            parser.start_rule(); 
        } catch(Exception e) { 
            System.err.println("exception: "+e); 
        } 
    } 
} 

later on I want to generate an AST that I can start working with.  But as it
stands, shouldn't this work as a syntax checker? 

My test input is: 
BEGIN 
null; 
END; 

And when it runs I get 

java main < t.sql 
line 1:1: expecting EOF, found 'BEGIN' 


Thanks, 
Ed 



---------------------------------------------------
Ed Delaney
SunGard SCT
Advisory Software Engineer
Phone Number (Office): 765-939-0533
Time Zone: US Indiana
edelaney@sungardsct.com
www.sungardsct.com

Leadership - Choices - Excellence

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050429/7429c80b/attachment.html
From scott at javadude.com  Fri Apr 29 19:07:46 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Apr 29 19:08:06 2005
Subject: [antlr-interest] charScanner panic.
In-Reply-To: <B1180416E5C44E49AE556D23DBB45B290EE62E@webmail.starthis.com>
Message-ID: <200504300305.j3U35riP031824@s2.eroute.net>

Btw: In the antlr 2.7.6 candidate I sent to Ter, I added a system property
that you can set to make antlr throw a RuntimeException for panic instead of
System.exit... The default is still System.exit, though.
 
Later,
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bharath Sundararaman
Sent: Friday, April 29, 2005 1:31 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] charScanner panic.



Hi all,

 

I have an application that passes code to my ANTLR compiler. Recently, when
the code is passed, the CharScanner's panic() method is called which causes
a system exit. I over-rode the panic() method and prevented the system from
exiting which led to "can't find AST node type: packageName.ASTName"
exception. 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050429/94bb867c/attachment-0001.html
From Loring.G.Craymer at jpl.nasa.gov  Fri Apr 29 22:44:19 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Fri Apr 29 22:44:21 2005
Subject: [antlr-interest] Philosophical: How to collect data in AST
	traversal
In-Reply-To: <9da4f452050429005526427914@mail.gmail.com>
Message-ID: <200504300544.j3U5iInG029498@xmta3.jpl.nasa.gov>

Oliver--

If a tree structure requires moving a lot of data around, that is an
indicator that you have the "wrong" tree.  Unless you are doing something
quick and dirty, it will probably pay off to transform the tree into a form
that is easy to process and captures the appropriate semantics.  The end
result will be more maintainable and can be reused for related problems.

Cheers!

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Oliver Zeigermann
> Sent: Friday, April 29, 2005 12:56 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Philosophical: How to collect data in AST
> traversal
> 
> Folks!
> 
> I was just working with the Java grammar and had to add some action
> data into the tree parser. I ended up passing data around between
> several rules which caused quite some changes and also warnings
> because of unsued return types. So I was wondering why not just
> modifying class memebers from all rules that contain wanted data. I
> know this may end up in the "global variables are evil" argument, but
> I was just wondering how others are dealing with this.
> 
> Thanks for any comments
> 
>   Oliver

From oliver.zeigermann at gmail.com  Fri Apr 29 23:35:16 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Apr 29 23:35:18 2005
Subject: [antlr-interest] Philosophical: How to collect data in AST
	traversal
In-Reply-To: <200504300544.j3U5iInG029498@xmta3.jpl.nasa.gov>
References: <9da4f452050429005526427914@mail.gmail.com>
	<200504300544.j3U5iInG029498@xmta3.jpl.nasa.gov>
Message-ID: <9da4f452050429233576a52f07@mail.gmail.com>

Thanks, good idea, really! However, I really do something
quick'n'dirty using an existing Java tree grammar. That's why I wanted
the impact on it to be as small as possible.

Oliver

On 4/30/05, Loring Craymer <Loring.G.Craymer@jpl.nasa.gov> wrote:
> Oliver--
> 
> If a tree structure requires moving a lot of data around, that is an
> indicator that you have the "wrong" tree.  Unless you are doing something
> quick and dirty, it will probably pay off to transform the tree into a form
> that is easy to process and captures the appropriate semantics.  The end
> result will be more maintainable and can be reused for related problems.
> 
> Cheers!
> 
> --Loring
> 
> > -----Original Message-----
> > From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> > bounces@antlr.org] On Behalf Of Oliver Zeigermann
> > Sent: Friday, April 29, 2005 12:56 AM
> > To: antlr-interest@antlr.org
> > Subject: [antlr-interest] Philosophical: How to collect data in AST
> > traversal
> >
> > Folks!
> >
> > I was just working with the Java grammar and had to add some action
> > data into the tree parser. I ended up passing data around between
> > several rules which caused quite some changes and also warnings
> > because of unsued return types. So I was wondering why not just
> > modifying class memebers from all rules that contain wanted data. I
> > know this may end up in the "global variables are evil" argument, but
> > I was just wondering how others are dealing with this.
> >
> > Thanks for any comments
> >
> >   Oliver
> 
>
From Loring.G.Craymer at jpl.nasa.gov  Sat Apr 30 01:06:23 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Sat Apr 30 01:06:23 2005
Subject: [antlr-interest] Philosophical: How to collect data in AST
	traversal
In-Reply-To: <9da4f452050429233576a52f07@mail.gmail.com>
Message-ID: <200504300806.j3U86LsW022515@xmta1.jpl.nasa.gov>

Oliver--

I should probably point out that 2.8 makes tree transformation and
transformation design easy.

Cheers!

--Loring

> -----Original Message-----
> From: Oliver Zeigermann [mailto:oliver.zeigermann@gmail.com]
> Sent: Friday, April 29, 2005 11:35 PM
> To: Loring Craymer
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Philosophical: How to collect data in AST
> traversal
> 
> Thanks, good idea, really! However, I really do something
> quick'n'dirty using an existing Java tree grammar. That's why I wanted
> the impact on it to be as small as possible.
> 
> Oliver
> 
> On 4/30/05, Loring Craymer <Loring.G.Craymer@jpl.nasa.gov> wrote:
> > Oliver--
> >
> > If a tree structure requires moving a lot of data around, that is an
> > indicator that you have the "wrong" tree.  Unless you are doing
> something
> > quick and dirty, it will probably pay off to transform the tree into a
> form
> > that is easy to process and captures the appropriate semantics.  The end
> > result will be more maintainable and can be reused for related problems.
> >
> > Cheers!
> >
> > --Loring
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> > > bounces@antlr.org] On Behalf Of Oliver Zeigermann
> > > Sent: Friday, April 29, 2005 12:56 AM
> > > To: antlr-interest@antlr.org
> > > Subject: [antlr-interest] Philosophical: How to collect data in AST
> > > traversal
> > >
> > > Folks!
> > >
> > > I was just working with the Java grammar and had to add some action
> > > data into the tree parser. I ended up passing data around between
> > > several rules which caused quite some changes and also warnings
> > > because of unsued return types. So I was wondering why not just
> > > modifying class memebers from all rules that contain wanted data. I
> > > know this may end up in the "global variables are evil" argument, but
> > > I was just wondering how others are dealing with this.
> > >
> > > Thanks for any comments
> > >
> > >   Oliver
> >
> >

From Bharath.Sundararaman at starthis.com  Sat Apr 30 17:39:14 2005
From: Bharath.Sundararaman at starthis.com (Bharath Sundararaman)
Date: Sat Apr 30 17:39:16 2005
Subject: [antlr-interest] ANTLR service - just an ideea...
Message-ID: <B1180416E5C44E49AE556D23DBB45B290486B6@webmail.starthis.com>

 
Hi Ter & Nita,
 
I've been thinking about having a website where users can input the language code which they can write in any text editor and get an output which might list the errors in the code or something of that order. This would enable a user to test the ability of my compiler without downloading and using any jar files etc. 
 
I would like to know if there is any recommended approach already to achieve this.
 
Bharath.

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Terence Parr
Sent: Fri 4/29/2005 6:55 PM
To: 'ANTLR Interest'
Subject: Re: [antlr-interest] ANTLR service - just an ideea...




On Apr 28, 2005, at 4:03 AM, Octavian Nita wrote:
> "It would be nice to have a service on the ANTLR site so that I could
> write a small grammar with a simple editor, I could upload the
> file/text and I would receive the output of the generation (not
> necessarily the generated files, only the compilation/translation
> output)"
> I guess it's really simple to realize this (no more complicated than
> sending a mail I guess...)

Hi Octavian,

Cool idea.  I built a language for generating VRML once and my
colleague Tim Rohaly set up a page where you could type in IVL
(pronounced "evil") and it spit back VRML like a service. :)

We're hoping to set up a "service" at antlr.org that ANTLRWorks can use
to grab grammar fragments in order to help you get a new grammar
together quickly.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050430/c25292ab/attachment.html
