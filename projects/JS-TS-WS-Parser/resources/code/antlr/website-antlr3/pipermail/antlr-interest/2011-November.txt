From anya at ii.uib.no  Tue Nov  1 01:14:17 2011
From: anya at ii.uib.no (Anya Helene Bagge)
Date: Tue, 01 Nov 2011 09:14:17 +0100
Subject: [antlr-interest] LDTA 2012: Call for papers
Message-ID: <4EAFAA59.2060503@ii.uib.no>

                       LDTA 2012 Call for Papers

                     12th International Workshop on
             Language Descriptions, Tools, and Applications

                              www.ldta.info

                             Tallinn, Estonia
                         March 31 & April 1, 2012
                            an ETAPS workshop

LDTA is an application and tool-oriented workshop focused on
grammarware - software based on grammars in some form. Grammarware
applications are typically language processing applications and
traditional examples include parsers, program analyzers, optimizers
and translators. A primary focus of LDTA is grammarware that is
generated from high-level grammar-centric specifications and thus
submissions on parser generation, attribute grammar systems,
term/graph rewriting systems, and other grammar-related
meta-programming tools, techniques, and formalisms are encouraged.

LDTA is also a forum in which theory is put to the test, in many cases
on real-world software engineering challenges. Thus, LDTA also
solicits papers on the application of grammarware to areas including,
but not limited to, the following:
- program analysis, transformation, generation, and verification,
- implementation of Domain-Specific Languages,
- reverse engineering and re-engineering,
- refactoring and other source-to-source transformations,
- language definition and language prototyping, and
- debugging, profiling, IDE support, and testing.

Note that LDTA is a well-established workshop similar to other
conferences on (programming) language engineering topics such as SLE
and GPCE, but is solely focused on grammarware.

Paper Submission
----------------
LDTA solicits papers in the following categories.

- research papers: original research results within the scope of LDTA
   with a clear motivation, description, analysis, and evaluation.

- short research papers: new innovative ideas that have not been
   completely fleshed out.  As a workshop, LDTA strongly encourages
   these types of submissions.

- experience report papers: description of the use of a grammarware
   tool or technique to solve a non-trivial applied problem with an
   emphasis on the advantages and disadvantages of the chosen approach
   to the problem.

- tool demo papers: discussion of a tool or technique that explains
   the contributions of the tool and what specifically will be
   demonstrated.

Each submission must clearly state in which of these categories it
falls, and must not be published or submitted elsewhere.  Papers are to use
the standard LaTeX article style and the authblk style for
affiliations; a sample of which is provided at www.ldta.info.
Research and experience papers are limited to 15 pages, tool
demonstration papers are limited to 10 pages, and short papers are
limited to 6 pages.  The final version of the accepted papers will,
pending approval, be published in the ACM Digital Library and will
also be made available during the workshop.

Please submit your abstract and paper using EasyChair at
http://www.easychair.org/conferences/?conf=ldta2012.

The authors of each submission are required to give a presentation at
LDTA 2011 and tool demonstration paper presentations are intended to
include a significant live, interactive demonstration.

The authors of the best papers will be invited to write a journal
version of their paper which will be separately reviewed and, assuming
acceptance, be published in journal form.  As in past years this will
be done in a special issue of the journal Science of Computer
Programming (Elsevier Science).

Invited Speaker
---------------
To be announced

Important Dates
---------------
Abstract submission: Nov. 28, 2011
Full paper submission: Dec. 5, 2011
Author notification: Jan. 20, 2012
Camera-ready papers: Feb. 05, 2012
LDTA Workshop: Mar. 31 - Apr. 1, 2012

LDTA Tool Challenge
-------------------
The 2011 Workshop pioneered the LDTA Tool Challenge where tool
developers were invited to develop solutions to a range of language
processing tasks over a simple but evolving set of imperative
programming languages. We expect a challenge to form part of LDTA
every two years. The 2012 workshop will feature presentations devoted
to a de-brief of the 2011 challenge, based on the paper currently
being prepared by challenge participants.

Program Committee
-----------------
Suzana Andova, Eindhoven University of Technology, The Netherlands 
(co-chair)
Anya Helene Bagge, University of Bergen, Norway
Kyung-Goo Doh, Hanyang University, Ansan, South Korea
Jeff Gray, University of Alabama, USA
G?rel Hedin, Lund Institute of Technology, Sweden
Zolt?n Horv?th, E?tv?s Lor?nd University, Budapest, Hungary
Zhenjiang Hu, National Institute of Informatics, Japan
Roberto Ierusalimschy, Pontif?cia Universidade Cat?lica do Rio de 
Janeiro, Brazil
Ivan Kurtev, University of Twente, The Netherlands
Marjan Mernik, University of Maribor, Slovenia
Nate Nystrom, University of Lugano, Switzerland
Jo?o Saraiva, Universidade do Minho, Braga, Portuga
Sylvain Schmitz, Ecole Normale Sup?rieure de Cachan, France
Anthony Sloane, Macquarie University, Australia (co-chair)
Robert Tairas, Inria, France
Laurence Tratt, King's College London, UK
Vadim Zaytsev, Centre for Mathematics & Computer Science, The Netherlands

Organizing Committee
--------------------
Anya Helene Bagge, University of Bergen, Norway
Emilie Balland, INRIA, France

Steering Committee
------------------
Mark van den Brand, Eindhoven University of Technology, The Netherlands
G?rel Hedin, Lund University, Sweden
Tony Sloane, Macquarie University, Australia
Eric Van Wyk, University of Minnesota, United States

From ibre5041 at ibrezina.net  Tue Nov  1 09:28:25 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Tue, 01 Nov 2011 17:28:25 +0100
Subject: [antlr-interest] Problem building custom error handlers	against
	C target 3.4
In-Reply-To: <4EAF45B0.2000506@gmail.com>
References: <4EAF45B0.2000506@gmail.com>
Message-ID: <20111101172825.bngnkrsuiscsgsc4@webmail.kamm.cz>

Hi,
look at the line 130.
Such a kind of error usually means, that you have collision between
#define macro and antlr internal identifier name.

For example QT declares macro "#define emit().." while antlr has it's  
own emit function.

Try to preprocess your source using "gcc -EPC" and you'll see.

Ivan


Quoting Kieran Simpson <kierans777 at gmail.com>:

> I'm using the 3.4 tarball (which when decompressed is really
> libantlr3c-3.4-beta4)
>
> I'm wanting to override the default error handlers so that they're more
> flexible in my application.  However trying to compile my (C++) code I get
>
> In file included from <my source>
> /usr/include/antlr3lexer.h:130: error: expected unqualified-id before
> ')' token
>
> $ g++ -v
> Using built-in specs.
> Target: x86_64-apple-darwin10
> Configured with: ../gcc-4.4.6/configure --prefix=/opt/local
> --build=x86_64-apple-darwin10
> --enable-languages=c,c++,objc,obj-c++,java,fortran
> --libdir=/opt/local/lib/gcc44 --includedir=/opt/local/include/gcc44
> --infodir=/opt/local/share/info --mandir=/opt/local/share/man
> --with-local-prefix=/opt/local --with-system-zlib --disable-nls
> --program-suffix=-mp-4.4
> --with-gxx-include-dir=/opt/local/include/gcc44/c++/
> --with-gmp=/opt/local --with-mpfr=/opt/local --enable-stage1-checking
> --disable-multilib --enable-fully-dynamic-string
> Thread model: posix
> gcc version 4.4.6 (GCC)
>
> Has anyone else had this problem on OSX Snow Leopard and the above g++
> version?
>
> Cheers,
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From roscoml at gmail.com  Wed Nov  2 05:18:08 2011
From: roscoml at gmail.com (Ross Bamford)
Date: Wed, 2 Nov 2011 12:18:08 +0000
Subject: [antlr-interest] Ambiguity between floating point literal and
 method call
In-Reply-To: <b1178be1c52c87b171d94a52d99f72d7@mail.gmail.com>
References: <CAMtjaCCzb4LjWpZUCCECogFarEbvaUgt40AkbRwDrThX59epoQ@mail.gmail.com>
	<b1178be1c52c87b171d94a52d99f72d7@mail.gmail.com>
Message-ID: <CAMtjaCDMKG8mQ+NJDaQMobDUy-br=wXoDEhr0-AxfXAF3H6SRg@mail.gmail.com>

Thanks, Jim. I'd seen that FAQ page before, and had played with integrating
that approach into my grammar, however I still don't seem to be able to get
it to work - parsing input such as: "1.foo()" results in the 1 and it's
period being matched together (outputting '1.'), meaning that my parser
never sees the INTEGER DOT ID production, and I get NoViableAlt exceptions.
Interestingly, after integrating the changes you suggested hex literal
method calls also no longer work, which they do with my "normal" literal
lexing.

I would very much like to look at the JavaFX source and see how it's done
over there. Unfortunately though I have very limited Internet service here
(I live in a very rural area) and I wonder if you know if it's browseable
online rather than having to download the source tree?

Thanks again,
Ross

On Thu, Oct 27, 2011 at 12:02 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Please see the FAQ:
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%
> 2C+dot%2C+range%2C+time+specs
>
> Which you can modify for your purpose, then you can add INTEGER DOT ID in
> your parser. If you were to download the source code for the JavaFX
> compiler, you will see that it supports that exact syntax.
>
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ross Bamford
> > Sent: Wednesday, October 26, 2011 3:37 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Ambiguity between floating point literal and
> > method call
> >
> > Hi all,
> >
> > Have posted here recently, and thanks again for all your help in
> > getting my various problems fixed. I'm implementing a basic scripting
> > language for use in embedded systems, and I've come across another
> > problem that, after much googling and tinkering I still can seem to
> > fix. In this language, numbers are first-class objects, and I need to
> > be able to call methods on them, in the standard way, e.g. 1.foo() .
> > However, I'm coming up against a problem whereby the parser can't
> > distinguish between this and floating point literals. I've tried
> > various combinations of predicates and the like, but just don't seem to
> > be able to get it working. Any help would be much appreciated!
> >
> > Thanks in advance,
> > Ross Bamford
> >
> > /* ** GRAMMAR FOLLOWS ** */
> > grammar BasicLang;
> >
> > options {
> >     output=AST;
> >     ASTLabelType=CommonTree;
> >     backtrack=true;
> >     memoize=true;
> > }
> >
> > tokens {
> >   ASSIGN;
> >   METHOD_CALL;
> >   ARGS;
> >   BLOCK;
> >   ORBLOCK;
> >   SELF;
> >   ASSIGN_RECEIVER;
> >   ASSIGN_LOCAL;
> >   FIELD_ACCESS;
> >   LVALUE;
> > }
> >
> > start_rule
> >   :   script
> >   ;
> >
> > script
> >   :   statement+
> >   |   EOF!
> >   ;
> >
> > statement
> >   :   expr terminator!
> >   ;
> >
> > expr
> >   :   assign_expr
> >   |   math_expr
> >   ;
> >
> > assign_expr
> > @init {boolean explicitReceiver=false;}
> >   :   (rec=IDENTIFIER DOT {explicitReceiver=true;})? id=IDENTIFIER
> > ASSIGN
> > expr -> {explicitReceiver}? ^(ASSIGN ASSIGN_RECEIVER[$rec.getText()]
> > LVALUE[$id.getText()] expr) -> ^(ASSIGN ASSIGN_LOCAL
> > LVALUE[$id.getText()]
> > expr)
> >   ;
> >
> > math_expr
> >   :   mult_expr ((ADD^|SUB^) mult_expr)*
> >   ;
> >
> > mult_expr
> >   :   pow_expr ((MUL^|DIV^|MOD^) pow_expr)*
> >   ;
> >
> > pow_expr
> >   :   unary_expr ((POW^) unary_expr)*
> >   ;
> >
> > unary_expr
> >   :   NOT? atom
> >   ;
> >
> > meth_call
> > @init {boolean explicitReceiver=false;}
> >   :   (IDENTIFIER DOT {explicitReceiver=true;})? func_call_expr ->
> > {explicitReceiver}? ^(METHOD_CALL IDENTIFIER func_call_expr) ->
> > ^(METHOD_CALL SELF func_call_expr)
> >   |   literal DOT func_call_expr -> ^(METHOD_CALL literal
> > func_call_expr)
> >   ;
> >
> > fragment
> > func_call_expr
> >   :   IDENTIFIER^ argument_list block? orblock?
> >   ;
> >
> > fragment
> > block
> >   :   LCURLY TERMINATOR? statement* RCURLY -> ^(BLOCK statement*)
> >   ;
> >
> > fragment
> > orblock
> >   :   OR LCURLY TERMINATOR? statement* RCURLY -> ^(ORBLOCK statement*)
> >   ;
> >
> > fragment
> > argument_list
> >   :   LPAREN (expr (COMMA expr)*)? RPAREN -> ^(ARGS expr expr*)?
> >   ;
> >
> > class_identifier
> >   :     rec=IDENTIFIER DOT id=IDENTIFIER -> ^(FIELD_ACCESS $rec $id)
> >   ;
> >
> > literal
> >   :     DECIMAL_LITERAL
> >   |     OCTAL_LITERAL
> >   |     HEX_LITERAL
> >   |     FLOATING_POINT_LITERAL
> >   |     STRING_LITERAL
> >   |     CHARACTER_LITERAL
> >   ;
> >
> > atom
> >   :     literal
> >   |     meth_call
> >   |     IDENTIFIER
> >   |     class_identifier
> >   |     LPAREN! expr RPAREN!
> >   ;
> >
> > terminator
> >   :     TERMINATOR
> >   |     EOF
> >   ;
> >
> > OR  :   'or';
> >
> > POW :   '^' ;
> > MOD :   '%' ;
> > ADD :   '+' ;
> > SUB :   '-' ;
> > DIV :   '/' ;
> > MUL :   '*' ;
> > NOT :   '!' ;
> >
> > ASSIGN
> >     :   '='
> >     ;
> >
> > LPAREN
> >     :   '('
> >     ;
> >
> > RPAREN
> >     :   ')'
> >     ;
> >
> > LCURLY
> >     :   '{'
> >     ;
> >
> > RCURLY
> >     :   '}'
> >     ;
> >
> > COMMA
> >     :   ','
> >     ;
> >
> > DOT :   '.' ;
> >
> > IDENTIFIER
> >   : ID_LETTER (ID_LETTER|'0'..'9')*
> >   ;
> >
> > fragment
> > ID_LETTER
> >   : '$'
> >   | 'A'..'Z'
> >   | 'a'..'z'
> >   | '_'
> >   ;
> >
> > CHARACTER_LITERAL
> >     :   '\'' ( EscapeSequence | ~('\''|'\\') ) '\''
> >     ;
> >
> > STRING_LITERAL
> >     :  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
> >     ;
> >
> > HEX_LITERAL : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;
> >
> > DECIMAL_LITERAL : ('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;
> >
> > OCTAL_LITERAL : '0' ('0'..'7')+ IntegerTypeSuffix? ;
> >
> > fragment
> > HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;
> >
> > fragment
> > IntegerTypeSuffix
> >   : ('l'|'L')
> >   | ('u'|'U')  ('l'|'L')?
> >   ;
> >
> > FLOATING_POINT_LITERAL
> >     :   ('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?
> >     |   '.' ('0'..'9')+ Exponent? FloatTypeSuffix?
> >     |   ('0'..'9')+ Exponent? FloatTypeSuffix?
> >   ;
> >
> > fragment
> > Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> >
> > fragment
> > FloatTypeSuffix : ('f'|'F'|'d'|'D') ;
> >
> > fragment
> > EscapeSequence
> >     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\'|'/')
> >     |   OctalEscape
> >     |   UnicodeEscape
> >     ;
> >
> > fragment
> > OctalEscape
> >     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
> >     |   '\\' ('0'..'7') ('0'..'7')
> >     |   '\\' ('0'..'7')
> >     ;
> >
> > fragment
> > UnicodeEscape
> >     :   '\\' 'u' HexDigit HexDigit HexDigit HexDigit
> >     ;
> > COMMENT
> >     :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
> >     ;
> >
> > LINE_COMMENT
> >     : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
> >     ;
> >
> > TERMINATOR
> >   : '\r'? '\n'
> >   | ';'
> >   ;
> >
> > WS  :  (' '|'\r'|'\t'|'\u000C') {$channel=HIDDEN;}
> >     |  '...' '\r'? '\n'  {$channel=HIDDEN;}
> >     ;
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Nov  2 09:48:57 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 2 Nov 2011 09:48:57 -0700
Subject: [antlr-interest] Ambiguity between floating point literal and
 method call
In-Reply-To: <CAMtjaCDMKG8mQ+NJDaQMobDUy-br=wXoDEhr0-AxfXAF3H6SRg@mail.gmail.com>
References: <CAMtjaCCzb4LjWpZUCCECogFarEbvaUgt40AkbRwDrThX59epoQ@mail.gmail.com>
	<b1178be1c52c87b171d94a52d99f72d7@mail.gmail.com>
	<CAMtjaCDMKG8mQ+NJDaQMobDUy-br=wXoDEhr0-AxfXAF3H6SRg@mail.gmail.com>
Message-ID: <d23a7c1eba8198bf0bef950838dbab40@mail.gmail.com>

You can browse it here. Try not to depart from the lexer until you have
this working.



http://kenai.com/projects/openjfx-compiler/sources/jfx-debug/show/src/share/classes/com/sun/tools/javafx/antlr?rev=6727



Jim



*From:* Ross Bamford [mailto:roscoml at gmail.com]
*Sent:* Wednesday, November 02, 2011 5:18 AM
*To:* Jim Idle
*Cc:* antlr-interest at antlr.org
*Subject:* Re: [antlr-interest] Ambiguity between floating point literal
and method call



Thanks, Jim. I'd seen that FAQ page before, and had played with integrating
that approach into my grammar, however I still don't seem to be able to get
it to work - parsing input such as: "1.foo()" results in the 1 and it's
period being matched together (outputting '1.'), meaning that my parser
never sees the INTEGER DOT ID production, and I get NoViableAlt exceptions.
Interestingly, after integrating the changes you suggested hex literal
method calls also no longer work, which they do with my "normal" literal
lexing.



I would very much like to look at the JavaFX source and see how it's done
over there. Unfortunately though I have very limited Internet service here
(I live in a very rural area) and I wonder if you know if it's browseable
online rather than having to download the source tree?



Thanks again,

Ross

On Thu, Oct 27, 2011 at 12:02 AM, Jim Idle <jimi at temporal-wave.com> wrote:

Please see the FAQ:

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%
2C+dot%2C+range%2C+time+specs<http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%25%0d%0a2C+dot%2C+range%2C+time+specs>

Which you can modify for your purpose, then you can add INTEGER DOT ID in
your parser. If you were to download the source code for the JavaFX
compiler, you will see that it supports that exact syntax.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ross Bamford
> Sent: Wednesday, October 26, 2011 3:37 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Ambiguity between floating point literal and
> method call

>
> Hi all,
>
> Have posted here recently, and thanks again for all your help in
> getting my various problems fixed. I'm implementing a basic scripting
> language for use in embedded systems, and I've come across another
> problem that, after much googling and tinkering I still can seem to
> fix. In this language, numbers are first-class objects, and I need to
> be able to call methods on them, in the standard way, e.g. 1.foo() .
> However, I'm coming up against a problem whereby the parser can't
> distinguish between this and floating point literals. I've tried
> various combinations of predicates and the like, but just don't seem to
> be able to get it working. Any help would be much appreciated!
>
> Thanks in advance,
> Ross Bamford
>
> /* ** GRAMMAR FOLLOWS ** */
> grammar BasicLang;
>
> options {
>     output=AST;
>     ASTLabelType=CommonTree;
>     backtrack=true;
>     memoize=true;
> }
>
> tokens {
>   ASSIGN;
>   METHOD_CALL;
>   ARGS;
>   BLOCK;
>   ORBLOCK;
>   SELF;
>   ASSIGN_RECEIVER;
>   ASSIGN_LOCAL;
>   FIELD_ACCESS;
>   LVALUE;
> }
>
> start_rule
>   :   script
>   ;
>
> script
>   :   statement+
>   |   EOF!
>   ;
>
> statement
>   :   expr terminator!
>   ;
>
> expr
>   :   assign_expr
>   |   math_expr
>   ;
>
> assign_expr
> @init {boolean explicitReceiver=false;}
>   :   (rec=IDENTIFIER DOT {explicitReceiver=true;})? id=IDENTIFIER
> ASSIGN
> expr -> {explicitReceiver}? ^(ASSIGN ASSIGN_RECEIVER[$rec.getText()]
> LVALUE[$id.getText()] expr) -> ^(ASSIGN ASSIGN_LOCAL
> LVALUE[$id.getText()]
> expr)
>   ;
>
> math_expr
>   :   mult_expr ((ADD^|SUB^) mult_expr)*
>   ;
>
> mult_expr
>   :   pow_expr ((MUL^|DIV^|MOD^) pow_expr)*
>   ;
>
> pow_expr
>   :   unary_expr ((POW^) unary_expr)*
>   ;
>
> unary_expr
>   :   NOT? atom
>   ;
>
> meth_call
> @init {boolean explicitReceiver=false;}
>   :   (IDENTIFIER DOT {explicitReceiver=true;})? func_call_expr ->
> {explicitReceiver}? ^(METHOD_CALL IDENTIFIER func_call_expr) ->
> ^(METHOD_CALL SELF func_call_expr)
>   |   literal DOT func_call_expr -> ^(METHOD_CALL literal
> func_call_expr)
>   ;
>
> fragment
> func_call_expr
>   :   IDENTIFIER^ argument_list block? orblock?
>   ;
>
> fragment
> block
>   :   LCURLY TERMINATOR? statement* RCURLY -> ^(BLOCK statement*)
>   ;
>
> fragment
> orblock
>   :   OR LCURLY TERMINATOR? statement* RCURLY -> ^(ORBLOCK statement*)
>   ;
>
> fragment
> argument_list
>   :   LPAREN (expr (COMMA expr)*)? RPAREN -> ^(ARGS expr expr*)?
>   ;
>
> class_identifier
>   :     rec=IDENTIFIER DOT id=IDENTIFIER -> ^(FIELD_ACCESS $rec $id)
>   ;
>
> literal
>   :     DECIMAL_LITERAL
>   |     OCTAL_LITERAL
>   |     HEX_LITERAL
>   |     FLOATING_POINT_LITERAL
>   |     STRING_LITERAL
>   |     CHARACTER_LITERAL
>   ;
>
> atom
>   :     literal
>   |     meth_call
>   |     IDENTIFIER
>   |     class_identifier
>   |     LPAREN! expr RPAREN!
>   ;
>
> terminator
>   :     TERMINATOR
>   |     EOF
>   ;
>
> OR  :   'or';
>
> POW :   '^' ;
> MOD :   '%' ;
> ADD :   '+' ;
> SUB :   '-' ;
> DIV :   '/' ;
> MUL :   '*' ;
> NOT :   '!' ;
>
> ASSIGN
>     :   '='
>     ;
>
> LPAREN
>     :   '('
>     ;
>
> RPAREN
>     :   ')'
>     ;
>
> LCURLY
>     :   '{'
>     ;
>
> RCURLY
>     :   '}'
>     ;
>
> COMMA
>     :   ','
>     ;
>
> DOT :   '.' ;
>
> IDENTIFIER
>   : ID_LETTER (ID_LETTER|'0'..'9')*
>   ;
>
> fragment
> ID_LETTER
>   : '$'
>   | 'A'..'Z'
>   | 'a'..'z'
>   | '_'
>   ;
>
> CHARACTER_LITERAL
>     :   '\'' ( EscapeSequence | ~('\''|'\\') ) '\''
>     ;
>
> STRING_LITERAL
>     :  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
>     ;
>
> HEX_LITERAL : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;
>
> DECIMAL_LITERAL : ('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;
>
> OCTAL_LITERAL : '0' ('0'..'7')+ IntegerTypeSuffix? ;
>
> fragment
> HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;
>
> fragment
> IntegerTypeSuffix
>   : ('l'|'L')
>   | ('u'|'U')  ('l'|'L')?
>   ;
>
> FLOATING_POINT_LITERAL
>     :   ('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?
>     |   '.' ('0'..'9')+ Exponent? FloatTypeSuffix?
>     |   ('0'..'9')+ Exponent? FloatTypeSuffix?
>   ;
>
> fragment
> Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>
> fragment
> FloatTypeSuffix : ('f'|'F'|'d'|'D') ;
>
> fragment
> EscapeSequence
>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\'|'/')
>     |   OctalEscape
>     |   UnicodeEscape
>     ;
>
> fragment
> OctalEscape
>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7')
>     ;
>
> fragment
> UnicodeEscape
>     :   '\\' 'u' HexDigit HexDigit HexDigit HexDigit
>     ;
> COMMENT
>     :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>     ;
>
> LINE_COMMENT
>     : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>     ;
>
> TERMINATOR
>   : '\r'? '\n'
>   | ';'
>   ;
>
> WS  :  (' '|'\r'|'\t'|'\u000C') {$channel=HIDDEN;}
>     |  '...' '\r'? '\n'  {$channel=HIDDEN;}
>     ;
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From andy.voelkel at plantronics.com  Wed Nov  2 15:54:05 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Wed, 2 Nov 2011 22:54:05 +0000
Subject: [antlr-interest] backtracking and forward references
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EA7DE@USSCMB03.plt.plantronics.com>

Hi,
Maybe I haven't got to this in "The Definitive Guide to ANTLR" yet, but is there a standard idiom for backpatching or other methods of dealing with forward references?
Thanks for any help!

-          Andy

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From kierans777 at gmail.com  Thu Nov  3 04:59:45 2011
From: kierans777 at gmail.com (Kieran Simpson)
Date: Thu, 03 Nov 2011 22:59:45 +1100
Subject: [antlr-interest] Problem building custom error handlers against
	C target 3.4
In-Reply-To: <20111101172825.bngnkrsuiscsgsc4@webmail.kamm.cz>
References: <4EAF45B0.2000506@gmail.com>
	<20111101172825.bngnkrsuiscsgsc4@webmail.kamm.cz>
Message-ID: <4EB28231.9040106@gmail.com>

Ivan,
   You were spot on the money.  I'm using Qt with Antlr so the macros 
were colliding.

Thanks.

On 23/07/64 5:59 AM, Ivan Brezina wrote:
> Hi,
> look at the line 130.
> Such a kind of error usually means, that you have collision between
> #define macro and antlr internal identifier name.
>
> For example QT declares macro "#define emit().." while antlr has it's
> own emit function.
>
> Try to preprocess your source using "gcc -EPC" and you'll see.
>
> Ivan
>
>
> Quoting Kieran Simpson <kierans777 at gmail.com>:
>
>> I'm using the 3.4 tarball (which when decompressed is really
>> libantlr3c-3.4-beta4)
>>
>> I'm wanting to override the default error handlers so that they're more
>> flexible in my application. However trying to compile my (C++) code I get
>>
>> In file included from <my source>
>> /usr/include/antlr3lexer.h:130: error: expected unqualified-id before
>> ')' token
>>
>> $ g++ -v
>> Using built-in specs.
>> Target: x86_64-apple-darwin10
>> Configured with: ../gcc-4.4.6/configure --prefix=pt/local
>> --build=6_64-apple-darwin10
>> --enable-languages=c++,objc,obj-c++,java,fortran
>> --libdir=pt/local/lib/gcc44 --includedir=/opt/local/include/gcc44
>> --infodir=pt/local/share/info --mandir=/opt/local/share/man
>> --with-local-prefix=pt/local --with-system-zlib --disable-nls
>> --program-suffix=p-4.4
>> --with-gxx-include-dir=pt/local/include/gcc44/c++/
>> --with-gmp=pt/local --with-mpfr=/opt/local --enable-stage1-checking
>> --disable-multilib --enable-fully-dynamic-string
>> Thread model: posix
>> gcc version 4.4.6 (GCC)
>>
>> Has anyone else had this problem on OSX Snow Leopard and the above g++
>> version?
>>
>> Cheers,
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>

From sharwell at pixelminegames.com  Thu Nov  3 08:00:38 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 3 Nov 2011 10:00:38 -0500
Subject: [antlr-interest] C#3 questions
In-Reply-To: <CAN45N119yJj8WT5TXZBXw-pWvZkesx2qcEyLmvPbGBjtTTBfdg@mail.gmail.com>
References: <CAN45N119yJj8WT5TXZBXw-pWvZkesx2qcEyLmvPbGBjtTTBfdg@mail.gmail.com>
Message-ID: <027d01cc9a39$59d29c90$0d77d5b0$@pixelminegames.com>

Hi Eric & Andy,

 

The C# 3 target was created due to a license incompatibility with the C# 2
target. As such, it was created completely from scratch (working from the
Java code only). The C# 3 target uses the same 3-clause BSD license as the
Java version.

 

As of the latest release, the C# 3 and C# 2 targets use the same runtime
(the one previously used by just the C# 3 port).

 

I've tested the following options.

 

.         -o

.         -lib

.         -dfa

.         -nfa

.         -XdbgST (now launches the TemplateVisualizer)

.         -language

.         -message-format

.         REMOVED: -Xconversiontimeout (also removed from the Java version,
so it's a bug if it still prints in the help text)

 

The C# targets do not support the -debug or -profile options. These days I
debug my grammars in Visual Studio. Since nearly all of my grammars are used
for creating Visual Studio extensions, I use a custom debugger for ASTs
that's integrated into Visual Studio. When I was working on standalone
grammars, the visualizers in Antlr3.Runtime.Visualizer worked great. At this
point our emphasis is on the debugging support in ANTLR 4 and ANTLRWorks 2,
and it's going to make all the existing ones look primitive at best. Right
now I'm leading the AW2 development with full intention to provide the same
experience and feature set in a Visual Studio 2010 extension sometime after
an ANTLR 4 beta is released.

 

I have used the generated DOT files. To display them I used to use
standalone ZGRViewer, but now I use a custom (experimental) NetBeans
extension that displays the zvtm/ZGRViewer UI in NetBeans. I'm developing
this with the latest NetBeans 7.1 built from source. It may work with
NetBeans 7.0 or 7.1 beta, but I'm not 100% sure. After installing all of the
modules in the following archive (via Tools > Plugins > Downloaded > Add
Plugins. and then Install), you'll need to open up (Tools > Options >
Miscellaneous > GraphViz) and configure your options and the path to dot.exe
(other paths are optional and currently unused). I have antialiasing enabled
but the other options disabled.

http://www.tunnelvisionlabs.com/downloads/netbeans/ZGRNBViewer.zip

 

The documentation on the wiki only goes into the basics. Most of what I've
learned over the years isn't features so much as best practices for using
ANTLR in general.

 

I'm working with Ter to clean up the API especially for ANTLR 4. At this
point ANTLR 3 has gone into maintenance mode - new features will be used in
ANTLR 4. There are a handful of bugs we've fixed since the 3.4 release, so
those should eventually appear in a patch release (3.4.1 for Java?).

 

I haven't talked with Johannes in some time. Everything we do for ANTLR is
volunteer, and typically only happens because we're using ANTLR ourselves
and need something (fix or feature) not already offered by the existing
ports.

 

Antlr3.exe includes a number of unique optimizations in the generated code
when used with the C# 2 or C# 3 target. Antlr3.exe should work with any of
the targets, but I only test it on the C# targets.

 

Ter and I talk almost on a daily basis. We don't always talk before making
changes in our own builds (C# for me, Java for him), but we always do when
one of our changes impacts the other.

 

Sam

 

From: Eric [mailto:researcher0x00 at gmail.com] 
Sent: Thursday, November 03, 2011 7:32 AM
To: Sam Harwell
Cc: Andy Voelkel
Subject: C#3 questions

 

Hi Sam,

 

I am starting to regularly use your ANTLR C#3 target and need to get some
things nailed down for my sanity.

 

If you could give feed back on the following it would be appreciated.

 

How was the C#3 target created? Was it copied from C#2 and then modified or
was it a clean start? What was the philosophy and reason to create another
C# target?

 

For the C#3 ANTLR3 executable what is the status of each option? i.e. which
options works, which options are accepted but don't work, which options are
known not to work?

 

-o outputDir specify output directory where all output is generated

-fo outputDir same as -o but force even files with relative paths to dir

-lib dir specify location of token files

-depend generate file dependencies

-report print out a report about the grammar(s) processed

-print print out the grammar without actions

-debug generate a parser that emits debugging events

-profile generate a parser that computes profiling information

-trace generate a recognizer that traces rule entry/exit

-nfa generate an NFA for each rule

-dfa generate a DFA for each decision point

-message-format name specify output style for messages

-verbose generate ANTLR version and other information

-make only build if generated files older than grammar

-version print the version of ANTLR and exit.

-language L override language grammar option; generate L

-X display extended argument list

-Xgrtree print the grammar AST

-Xdfa print DFA as text 

-Xnoprune test lookahead against EBNF block exit branches

-Xnocollapse collapse incident edges into DFA states

-Xdbgconversion dump lots of info during NFA conversion

-Xconversiontimeout use to restrict NFA conversion exponentiality (This is a
org.antlr.Tool option but is not an Antlr3.exe option)

-Xmultithreaded run the analysis in 2 threads

-Xnomergestopstates do not merge stop states

-Xdfaverbose generate DFA states in DOT with NFA configs

-Xwatchconversion print a message for each NFA before converting

-XdbgST put tags at start/stop of all templates in output

-Xnfastates for nondeterminisms, list NFA states for each path

-Xm m max number of rule invocations during conversion [4]

-Xmaxdfaedges m max "comfortable" number of edges for single DFA state
[65534]

-Xmaxinlinedfastates m max DFA states before table used rather than inlining
[60]

-Xmaxswitchcaselabels m don't generate switch() statements for dfas bigger
than m [300]

-Xminswitchalts m don't generate switch() statements for dfas smaller than m
[3]

-Xsavelexer don't delete temporary lexers generated from combined grammars

 

The Antlr3.Runtime.Visualizer code exist but you no longer use or support
it? Note, I haven't used Antlr4.StringTemplate.Visualizer yet.

Are there any parts of the C#3 release that we should not use?

ANTLR C#3 will not work with ANTLRWorks debugger?

How do you debug an Antlr C#3 target lexer and parser? i.e. Do you only use
Visual Studio and step through the code because you understand how the lexer
are parser work in great detail. I can do that, but for Andy it will be a
learning curve.

ANTLR C#3 can generage DOT files. Do you use them? If so, what do you use to
display them in Windows? 

Is there any thing about C#3 we should be aware of outside of the document
at
http://www.tunnelvisionlabs.com/downloads/antlr/ANTLRCSharpDocumentation-900
4.xps ?

It appears that Ter likes some of the coding methodologies you use for C#3
and is back porting them into future versions of the Java target, is this
true? I ask because then I will know what Ter has bolted onto the Java
version as opposed to it being built in?

It also appears that the C# and C#2 targets are no longer supported by
Johannes Luber? Do you stay in touch with him regarding the C# targets?

Even though the Java version can target C#3 code, the C#3 target in the Java
version is not maintained by you and should not be used? One should only use
your Antlr3.exe to generate C#3 code?

Even though Antlr3.exe can target C#2 and other languages, only the C#3
target is kept current?

Do you and Ter talk about bug fixes before implementing the fixes?

 

Thanks, Eric

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 


From cfriedline at vcu.edu  Thu Nov  3 09:00:00 2011
From: cfriedline at vcu.edu (Chris Friedline)
Date: Thu, 3 Nov 2011 12:00:00 -0400
Subject: [antlr-interest] Newick tree grammar help: file has no rules
Message-ID: <C6D29784-CEA3-4BFD-8DBE-0C9AF9096BA7@vcu.edu>

Hello,

I'm trying to build a grammar file for parsing newick trees, and am having some issues generating the code from AntlrWorks.  I get an error message like this:

[11:58:47] error(150):  grammar file NewickGrammar.g has no rules 

I've posted my grammar file here: http://pastie.org/2805144

Can anyone help with what might be doing on?

Thanks.


From parrt at cs.usfca.edu  Thu Nov  3 09:34:11 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 3 Nov 2011 09:34:11 -0700
Subject: [antlr-interest] compiler job announcement
Message-ID: <5077DE58-F95D-4ED9-B970-983EBD786C04@cs.usfca.edu>

hi all. Found this on the web;, passing along in case anyone is interested.
Ter
-------------- next part --------------
A non-text attachment was scrubbed...
Name: CompilerEngineer.PDF
Type: application/pdf
Size: 97288 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111103/f30869ca/attachment.pdf 

From Norman at dunbar-it.co.uk  Thu Nov  3 09:46:20 2011
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Thu, 03 Nov 2011 16:46:20 +0000
Subject: [antlr-interest] Newick tree grammar help: file has no rules
In-Reply-To: <C6D29784-CEA3-4BFD-8DBE-0C9AF9096BA7@vcu.edu>
References: <C6D29784-CEA3-4BFD-8DBE-0C9AF9096BA7@vcu.edu>
Message-ID: <4EB2C55C.6080504@dunbar-it.co.uk>


On 03/11/11 16:00, Chris Friedline wrote:
> I'm trying to build a grammar file for parsing newick trees, and am having some issues generating the code from AntlrWorks.  I get an error message like this:

Change "tree" to "xtree" and all appears well. I'm assuming that "tree" 
is some sort of reserved word somewhere in the system?

Cheers,
Norm.

Disclaimer: I'm not a compiler writer, nor do I play one on TV.

-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767

From cfriedline at vcu.edu  Thu Nov  3 09:50:12 2011
From: cfriedline at vcu.edu (Chris Friedline)
Date: Thu, 3 Nov 2011 12:50:12 -0400
Subject: [antlr-interest] Newick tree grammar help: file has no rules
In-Reply-To: <4EB2C55C.6080504@dunbar-it.co.uk>
References: <C6D29784-CEA3-4BFD-8DBE-0C9AF9096BA7@vcu.edu>
	<4EB2C55C.6080504@dunbar-it.co.uk>
Message-ID: <B65DAA36-3E43-4C46-A4A8-4CA212563A6B@vcu.edu>

Perfect.  Thanks of both Norman and John!

On Nov 3, 2011, at 12:46 PM, Norman Dunbar wrote:

> 
> On 03/11/11 16:00, Chris Friedline wrote:
>> I'm trying to build a grammar file for parsing newick trees, and am having some issues generating the code from AntlrWorks.  I get an error message like this:
> 
> Change "tree" to "xtree" and all appears well. I'm assuming that "tree" 
> is some sort of reserved word somewhere in the system?
> 
> Cheers,
> Norm.
> 
> Disclaimer: I'm not a compiler writer, nor do I play one on TV.
> 
> -- 
> Norman Dunbar
> Dunbar IT Consultants Ltd
> 
> Registered address:
> Thorpe House
> 61 Richardshaw Lane
> Pudsey
> West Yorkshire
> United Kingdom
> LS28 7EL
> 
> Company Number: 05132767
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From Norman at dunbar-it.co.uk  Thu Nov  3 09:51:31 2011
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Thu, 03 Nov 2011 16:51:31 +0000
Subject: [antlr-interest] Newick tree grammar help: file has no rules
In-Reply-To: <4EB2C55C.6080504@dunbar-it.co.uk>
References: <C6D29784-CEA3-4BFD-8DBE-0C9AF9096BA7@vcu.edu>
	<4EB2C55C.6080504@dunbar-it.co.uk>
Message-ID: <4EB2C693.4060905@dunbar-it.co.uk>

On 03/11/11 16:46, Norman Dunbar wrote:
> Change "tree" to "xtree" and all appears well. I'm assuming that "tree"
> is some sort of reserved word somewhere in the system?

Although, having done this, Altrworks does complain about the tree and 
subtree rules:

[16:49:06] warning(200): NewickGrammar.g:12:28:
Decision can match input such as "EOF" using multiple alternatives: 1, 2

As a result, alternative(s) 2 were disabled for that input
[16:49:06] error(201): NewickGrammar.g:12:28: The following alternatives 
can never be matched: 2

Check out the syntax diagram for these two rules.


Cheers,
Norm.

Disclaimer: I'm not a compiler writer, nor do I play one on TV.

-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767

From WeikEngOff at aol.com  Thu Nov  3 10:25:11 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Thu, 03 Nov 2011 18:25:11 +0100
Subject: [antlr-interest] ANTLR code generation target: modifying the
	C-Runtime I
Message-ID: <4EB2CE77.7010709@aol.com>

Hello,

yep, I startet to modify the C-Runtime and have a first bunch of
questions. Be sure, more will follow - "Eeek, what a pain!"...

1. Header-file not created
    I just added a new directory \Cmod to \org\antlr\codegen\templates
    and copied the entire content of \C in that directory. Then I
    renamed C.stg in Cmod.stg. The *Lexer.c/*Parser.c-files are created,
    but no header (*.h)-files. Why?

2. <token> in <action>
    I need the token of an rule in the <action>-section
    /** How to execute an action (when not backtracking) */
    execAction(action) ::= <<
    <if(backtracking)>
    <if(actions.(actionScope).synpredgate)>
    if ( <actions.(actionScope).synpredgate> )
    ...
    <ruleDescriptor.name> and <ruleName> are replaced (what is the
    difference?) but <token> not. Why?

3. Blank lines
    The C-Parser-file of my grammar consits of ~150.000 lines, ~20.000
    lines are blank. As mentioned in another email from me, I can't debug
    more than 65535 lines. The only solution is to reorder the (parser) rules.
    But apart from that severe problem, I looked for a solution to get
    a much more compact code. Some examples, section...
    1. // Forward declare the locally static matching functions we have generated.
       //
       static
         XYZParser_RULE_return
           RULE (pXYZParser ctx);

       3 lines - the result of
       <rules:{r | static <headerReturnType(ruleDescriptor=r.ruleDescriptor)>  <r.ruleDescriptor.name>    (p<name> ctx<if(r.ruleDescriptor.parameterScope)>, <endif>
       <r.ruleDescriptor.parameterScope:parameterScope()>);}; separator="\n">
       How can I avoid 2 lines?
    2. /* ==============================================
        * Parsing rules
        */
       ...
       static XYZParser_RULE_return
       port_RULE(pXYZParser ctx)

       2 lines - the result of
       <rules; separator="\n\n">
       How can I avoid 1 line?

4. I added a comment to section
    ruleReturnValue() ::= <%
    //! UW Test ruleReturnValue

    <if(!ruleDescriptor.isSynPred)>
    <if(ruleDescriptor.hasReturnValue)>
    <if(ruleDescriptor.hasSingleReturnValue)>
    <ruleDescriptor.singleValueReturnName>
    <else>
    retval
    <endif>
    <endif>
    <endif>
    %>

    The result looks like
    return //! UW Test ruleReturnValueretval;
    1. The problem of the missing blank between "ruleReturnValue" and "retval"
       can be solved by adding a blank after the comment "//! UW Test ruleReturnValue ".
    2. But how can I add an additional line before the "retval"? I tried
       <else>

       retval
       <endif>
       without success.


Many thanks and greetings
Udo

From chwchw at gmx.de  Thu Nov  3 13:01:02 2011
From: chwchw at gmx.de (Christian)
Date: Thu, 03 Nov 2011 21:01:02 +0100
Subject: [antlr-interest] Check if rule returns empty result
Message-ID: <4EB2F2FE.6020007@gmx.de>

Hi at all,

I have the following rules:

method_declaration
    : method_header method_body  -> ^(METHOD_HEADER method_header)
^(METHOD_BODY method_body)
    ;

method_body:
    ';'!
    | '{'!   statement_list?   '}'!;
    ;

Of course, method_body is executed because it has no question mark.
However, introducing rewrite rules and operators cause a problem. By
using ^(METHOD_BODY method_body), method_body must return a non-empty
value. However, statement_list? is optional and thus may not match at
all. In this case, method_body returns nothing anymore and I get an
RewriteEmpty exception.

How can I solve this problem by only changing rewrite rules?

Regards,
Christian

From roscoml at gmail.com  Thu Nov  3 13:18:15 2011
From: roscoml at gmail.com (Ross Bamford)
Date: Thu, 3 Nov 2011 20:18:15 +0000
Subject: [antlr-interest] Ambiguity between floating point literal and
 method call
In-Reply-To: <d23a7c1eba8198bf0bef950838dbab40@mail.gmail.com>
References: <CAMtjaCCzb4LjWpZUCCECogFarEbvaUgt40AkbRwDrThX59epoQ@mail.gmail.com>
	<b1178be1c52c87b171d94a52d99f72d7@mail.gmail.com>
	<CAMtjaCDMKG8mQ+NJDaQMobDUy-br=wXoDEhr0-AxfXAF3H6SRg@mail.gmail.com>
	<d23a7c1eba8198bf0bef950838dbab40@mail.gmail.com>
Message-ID: <CAMtjaCByrHt2tR2dhn9Zxf4rnUE+UQ=5rqmvf-ASo0VRPG=pNw@mail.gmail.com>

Thanks again Jim - got it integrated today and it's all working well now. I
just stubbed out an error collector and grabbed a few methods from the
JavaFX tree to get it working. I had to take out the logic that guards
against floating point hex and octal literals as I found they were stopping
me parsing method calls on those literals (which ideally I do want to be
able to do). I'm thinking that I'll probably check for any such invalid
floats either in the parser or the compiler.

Anyway, it's working like a charm now, so thanks again!

Ross

On Wed, Nov 2, 2011 at 4:48 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> You can browse it here. Try not to depart from the lexer until you have
> this working.
>
>
>
>
> http://kenai.com/projects/openjfx-compiler/sources/jfx-debug/show/src/share/classes/com/sun/tools/javafx/antlr?rev=6727
>
>
>
> Jim
>
>
>
> *From:* Ross Bamford [mailto:roscoml at gmail.com]
> *Sent:* Wednesday, November 02, 2011 5:18 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Ambiguity between floating point literal
> and method call
>
>
>
> Thanks, Jim. I'd seen that FAQ page before, and had played with integrating
> that approach into my grammar, however I still don't seem to be able to get
> it to work - parsing input such as: "1.foo()" results in the 1 and it's
> period being matched together (outputting '1.'), meaning that my parser
> never sees the INTEGER DOT ID production, and I get NoViableAlt exceptions.
> Interestingly, after integrating the changes you suggested hex literal
> method calls also no longer work, which they do with my "normal" literal
> lexing.
>
>
>
> I would very much like to look at the JavaFX source and see how it's done
> over there. Unfortunately though I have very limited Internet service here
> (I live in a very rural area) and I wonder if you know if it's browseable
> online rather than having to download the source tree?
>
>
>
> Thanks again,
>
> Ross
>
> On Thu, Oct 27, 2011 at 12:02 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Please see the FAQ:
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%
> 2C+dot%2C+range%2C+time+specs<
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%25%0d%0a2C+dot%2C+range%2C+time+specs
> >
>
> Which you can modify for your purpose, then you can add INTEGER DOT ID in
> your parser. If you were to download the source code for the JavaFX
> compiler, you will see that it supports that exact syntax.
>
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ross Bamford
> > Sent: Wednesday, October 26, 2011 3:37 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Ambiguity between floating point literal and
> > method call
>
> >
> > Hi all,
> >
> > Have posted here recently, and thanks again for all your help in
> > getting my various problems fixed. I'm implementing a basic scripting
> > language for use in embedded systems, and I've come across another
> > problem that, after much googling and tinkering I still can seem to
> > fix. In this language, numbers are first-class objects, and I need to
> > be able to call methods on them, in the standard way, e.g. 1.foo() .
> > However, I'm coming up against a problem whereby the parser can't
> > distinguish between this and floating point literals. I've tried
> > various combinations of predicates and the like, but just don't seem to
> > be able to get it working. Any help would be much appreciated!
> >
> > Thanks in advance,
> > Ross Bamford
> >
> > /* ** GRAMMAR FOLLOWS ** */
> > grammar BasicLang;
> >
> > options {
> >     output=AST;
> >     ASTLabelType=CommonTree;
> >     backtrack=true;
> >     memoize=true;
> > }
> >
> > tokens {
> >   ASSIGN;
> >   METHOD_CALL;
> >   ARGS;
> >   BLOCK;
> >   ORBLOCK;
> >   SELF;
> >   ASSIGN_RECEIVER;
> >   ASSIGN_LOCAL;
> >   FIELD_ACCESS;
> >   LVALUE;
> > }
> >
> > start_rule
> >   :   script
> >   ;
> >
> > script
> >   :   statement+
> >   |   EOF!
> >   ;
> >
> > statement
> >   :   expr terminator!
> >   ;
> >
> > expr
> >   :   assign_expr
> >   |   math_expr
> >   ;
> >
> > assign_expr
> > @init {boolean explicitReceiver=false;}
> >   :   (rec=IDENTIFIER DOT {explicitReceiver=true;})? id=IDENTIFIER
> > ASSIGN
> > expr -> {explicitReceiver}? ^(ASSIGN ASSIGN_RECEIVER[$rec.getText()]
> > LVALUE[$id.getText()] expr) -> ^(ASSIGN ASSIGN_LOCAL
> > LVALUE[$id.getText()]
> > expr)
> >   ;
> >
> > math_expr
> >   :   mult_expr ((ADD^|SUB^) mult_expr)*
> >   ;
> >
> > mult_expr
> >   :   pow_expr ((MUL^|DIV^|MOD^) pow_expr)*
> >   ;
> >
> > pow_expr
> >   :   unary_expr ((POW^) unary_expr)*
> >   ;
> >
> > unary_expr
> >   :   NOT? atom
> >   ;
> >
> > meth_call
> > @init {boolean explicitReceiver=false;}
> >   :   (IDENTIFIER DOT {explicitReceiver=true;})? func_call_expr ->
> > {explicitReceiver}? ^(METHOD_CALL IDENTIFIER func_call_expr) ->
> > ^(METHOD_CALL SELF func_call_expr)
> >   |   literal DOT func_call_expr -> ^(METHOD_CALL literal
> > func_call_expr)
> >   ;
> >
> > fragment
> > func_call_expr
> >   :   IDENTIFIER^ argument_list block? orblock?
> >   ;
> >
> > fragment
> > block
> >   :   LCURLY TERMINATOR? statement* RCURLY -> ^(BLOCK statement*)
> >   ;
> >
> > fragment
> > orblock
> >   :   OR LCURLY TERMINATOR? statement* RCURLY -> ^(ORBLOCK statement*)
> >   ;
> >
> > fragment
> > argument_list
> >   :   LPAREN (expr (COMMA expr)*)? RPAREN -> ^(ARGS expr expr*)?
> >   ;
> >
> > class_identifier
> >   :     rec=IDENTIFIER DOT id=IDENTIFIER -> ^(FIELD_ACCESS $rec $id)
> >   ;
> >
> > literal
> >   :     DECIMAL_LITERAL
> >   |     OCTAL_LITERAL
> >   |     HEX_LITERAL
> >   |     FLOATING_POINT_LITERAL
> >   |     STRING_LITERAL
> >   |     CHARACTER_LITERAL
> >   ;
> >
> > atom
> >   :     literal
> >   |     meth_call
> >   |     IDENTIFIER
> >   |     class_identifier
> >   |     LPAREN! expr RPAREN!
> >   ;
> >
> > terminator
> >   :     TERMINATOR
> >   |     EOF
> >   ;
> >
> > OR  :   'or';
> >
> > POW :   '^' ;
> > MOD :   '%' ;
> > ADD :   '+' ;
> > SUB :   '-' ;
> > DIV :   '/' ;
> > MUL :   '*' ;
> > NOT :   '!' ;
> >
> > ASSIGN
> >     :   '='
> >     ;
> >
> > LPAREN
> >     :   '('
> >     ;
> >
> > RPAREN
> >     :   ')'
> >     ;
> >
> > LCURLY
> >     :   '{'
> >     ;
> >
> > RCURLY
> >     :   '}'
> >     ;
> >
> > COMMA
> >     :   ','
> >     ;
> >
> > DOT :   '.' ;
> >
> > IDENTIFIER
> >   : ID_LETTER (ID_LETTER|'0'..'9')*
> >   ;
> >
> > fragment
> > ID_LETTER
> >   : '$'
> >   | 'A'..'Z'
> >   | 'a'..'z'
> >   | '_'
> >   ;
> >
> > CHARACTER_LITERAL
> >     :   '\'' ( EscapeSequence | ~('\''|'\\') ) '\''
> >     ;
> >
> > STRING_LITERAL
> >     :  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
> >     ;
> >
> > HEX_LITERAL : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;
> >
> > DECIMAL_LITERAL : ('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;
> >
> > OCTAL_LITERAL : '0' ('0'..'7')+ IntegerTypeSuffix? ;
> >
> > fragment
> > HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;
> >
> > fragment
> > IntegerTypeSuffix
> >   : ('l'|'L')
> >   | ('u'|'U')  ('l'|'L')?
> >   ;
> >
> > FLOATING_POINT_LITERAL
> >     :   ('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?
> >     |   '.' ('0'..'9')+ Exponent? FloatTypeSuffix?
> >     |   ('0'..'9')+ Exponent? FloatTypeSuffix?
> >   ;
> >
> > fragment
> > Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> >
> > fragment
> > FloatTypeSuffix : ('f'|'F'|'d'|'D') ;
> >
> > fragment
> > EscapeSequence
> >     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\'|'/')
> >     |   OctalEscape
> >     |   UnicodeEscape
> >     ;
> >
> > fragment
> > OctalEscape
> >     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
> >     |   '\\' ('0'..'7') ('0'..'7')
> >     |   '\\' ('0'..'7')
> >     ;
> >
> > fragment
> > UnicodeEscape
> >     :   '\\' 'u' HexDigit HexDigit HexDigit HexDigit
> >     ;
> > COMMENT
> >     :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
> >     ;
> >
> > LINE_COMMENT
> >     : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
> >     ;
> >
> > TERMINATOR
> >   : '\r'? '\n'
> >   | ';'
> >   ;
> >
> > WS  :  (' '|'\r'|'\t'|'\u000C') {$channel=HIDDEN;}
> >     |  '...' '\r'? '\n'  {$channel=HIDDEN;}
> >     ;
> >
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu Nov  3 13:31:02 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Nov 2011 13:31:02 -0700
Subject: [antlr-interest] Check if rule returns empty result
In-Reply-To: <4EB2F2FE.6020007@gmx.de>
References: <4EB2F2FE.6020007@gmx.de>
Message-ID: <2e5ff9d8600104aa60af9a6f2fb689eb@mail.gmail.com>

You don't want that anyway as your nodes will not have token start and
stop information and you might need that.

method_declaration
     : method_header method_body
     ;

method_body
	: (
		  ';'!	
     	| '{'!   statement_list?   '}'!
       )
		-> ^(METHOD_BODY statement_list?)
     ;

method_header
	:  attributes ID etc

		->^(METHOD_HEADER attributes ID )
	;


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian
> Sent: Thursday, November 03, 2011 1:01 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Check if rule returns empty result
>
> Hi at all,
>
> I have the following rules:
>
> method_declaration
>     : method_header method_body  -> ^(METHOD_HEADER method_header)
> ^(METHOD_BODY method_body)
>     ;
>
> method_body:
>     ';'!
>     | '{'!   statement_list?   '}'!;
>     ;
>
> Of course, method_body is executed because it has no question mark.
> However, introducing rewrite rules and operators cause a problem. By
> using ^(METHOD_BODY method_body), method_body must return a non-empty
> value. However, statement_list? is optional and thus may not match at
> all. In this case, method_body returns nothing anymore and I get an
> RewriteEmpty exception.
>
> How can I solve this problem by only changing rewrite rules?
>
> Regards,
> Christian
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From chwchw at gmx.de  Thu Nov  3 14:36:42 2011
From: chwchw at gmx.de (Christian)
Date: Thu, 03 Nov 2011 22:36:42 +0100
Subject: [antlr-interest] Check if rule returns empty result
In-Reply-To: <2e5ff9d8600104aa60af9a6f2fb689eb@mail.gmail.com>
References: <4EB2F2FE.6020007@gmx.de>
	<2e5ff9d8600104aa60af9a6f2fb689eb@mail.gmail.com>
Message-ID: <4EB3096A.6050209@gmx.de>

Thank you for your explanation. And your solution works great, too.

Christian

Am 03.11.2011 21:31, schrieb Jim Idle:
> You don't want that anyway as your nodes will not have token start and
> stop information and you might need that.
>
> method_declaration
>      : method_header method_body
>      ;
>
> method_body
> 	: (
> 		  ';'!	
>      	| '{'!   statement_list?   '}'!
>        )
> 		-> ^(METHOD_BODY statement_list?)
>      ;
>
> method_header
> 	:  attributes ID etc
>
> 		->^(METHOD_HEADER attributes ID )
> 	;
>
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Christian
>> Sent: Thursday, November 03, 2011 1:01 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Check if rule returns empty result
>>
>> Hi at all,
>>
>> I have the following rules:
>>
>> method_declaration
>>     : method_header method_body  -> ^(METHOD_HEADER method_header)
>> ^(METHOD_BODY method_body)
>>     ;
>>
>> method_body:
>>     ';'!
>>     | '{'!   statement_list?   '}'!;
>>     ;
>>
>> Of course, method_body is executed because it has no question mark.
>> However, introducing rewrite rules and operators cause a problem. By
>> using ^(METHOD_BODY method_body), method_body must return a non-empty
>> value. However, statement_list? is optional and thus may not match at
>> all. In this case, method_body returns nothing anymore and I get an
>> RewriteEmpty exception.
>>
>> How can I solve this problem by only changing rewrite rules?
>>
>> Regards,
>> Christian
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Thu Nov  3 16:22:35 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Nov 2011 16:22:35 -0700
Subject: [antlr-interest] Check if rule returns empty result
In-Reply-To: <4EB3096A.6050209@gmx.de>
References: <4EB2F2FE.6020007@gmx.de>	<2e5ff9d8600104aa60af9a6f2fb689eb@mail.gmail.com>
	<4EB3096A.6050209@gmx.de>
Message-ID: <c1d42cd216ecb84ef8882aa674d69698@mail.gmail.com>

Remember that your tree parser rule for the body should be:

method_body
    : ^(METHOD_BODY statement_list)
    | METHOD_BODY  // Empty body
    ;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian
> Sent: Thursday, November 03, 2011 2:37 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Check if rule returns empty result
>
> Thank you for your explanation. And your solution works great, too.
>
> Christian
>
> Am 03.11.2011 21:31, schrieb Jim Idle:
> > You don't want that anyway as your nodes will not have token start
> and
> > stop information and you might need that.
> >
> > method_declaration
> >      : method_header method_body
> >      ;
> >
> > method_body
> > 	: (
> > 		  ';'!
> >      	| '{'!   statement_list?   '}'!
> >        )
> > 		-> ^(METHOD_BODY statement_list?)
> >      ;
> >
> > method_header
> > 	:  attributes ID etc
> >
> > 		->^(METHOD_HEADER attributes ID )
> > 	;
> >
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Christian
> >> Sent: Thursday, November 03, 2011 1:01 PM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Check if rule returns empty result
> >>
> >> Hi at all,
> >>
> >> I have the following rules:
> >>
> >> method_declaration
> >>     : method_header method_body  -> ^(METHOD_HEADER method_header)
> >> ^(METHOD_BODY method_body)
> >>     ;
> >>
> >> method_body:
> >>     ';'!
> >>     | '{'!   statement_list?   '}'!;
> >>     ;
> >>
> >> Of course, method_body is executed because it has no question mark.
> >> However, introducing rewrite rules and operators cause a problem. By
> >> using ^(METHOD_BODY method_body), method_body must return a non-
> empty
> >> value. However, statement_list? is optional and thus may not match
> at
> >> all. In this case, method_body returns nothing anymore and I get an
> >> RewriteEmpty exception.
> >>
> >> How can I solve this problem by only changing rewrite rules?
> >>
> >> Regards,
> >> Christian
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From andy.voelkel at plantronics.com  Thu Nov  3 17:59:03 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Fri, 4 Nov 2011 00:59:03 +0000
Subject: [antlr-interest] This should be simple,
 but I can't find the right syntax (or is it a bug?)
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EAEF7@USSCMB03.plt.plantronics.com>

Hi,

I'm trying to collect all the StringTemplates created by all instances of one rule (borg) into a StringTemplate for a containing rule (prog). But I can't seem to find the right syntax:

options {
        output = template;
        language = CSharp3;
      tokenVocab=Tree1;
        ASTLabelType = CommonTree;
}

public prog
: (b+=borg)+ -> template(vals = {$b})
<<
{ // prog
  <vals; separator = ",">
}
>> ;

The syntax I tried above is one many approaches I've tried - none seem to work. Antlr3 runs without error but the code won't compile. I hope the intent is clear, as it is a pretty simple example. I've looked back and forth in Terence's book trying to find something like this, and in the examples, but so far I've struck out. It seems like a very common thing to try to do!

One strange thing is that when I look at the generated code, the list for b (list_b) is declared as List<CommonTree>. But Terence's books says is should be List<StringTemplate> when the output type is template. Later in the generated code, when it tries to add to the list, it tries to create a List<StringTemplate>, which seems right, but causes a compiler error. It almost seems like a bug, but I probably just don't understand.

Can anyone help me with this?

- Andy

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From chwchw at gmx.de  Thu Nov  3 22:51:22 2011
From: chwchw at gmx.de (Christian)
Date: Fri, 04 Nov 2011 06:51:22 +0100
Subject: [antlr-interest] Check if rule returns empty result
In-Reply-To: <c1d42cd216ecb84ef8882aa674d69698@mail.gmail.com>
References: <4EB2F2FE.6020007@gmx.de>	<2e5ff9d8600104aa60af9a6f2fb689eb@mail.gmail.com>
	<4EB3096A.6050209@gmx.de>
	<c1d42cd216ecb84ef8882aa674d69698@mail.gmail.com>
Message-ID: <4EB37D5A.4000109@gmx.de>

Thank you for your hint, but I do not use tree grammars mainly because
of Andy Tripp's article:
http://www.antlr.org/article/1170602723163/treewalkers.html

I walk through the tree by means of the visitor pattern instead. Main
reasons for me to be against tree grammars:

  * Code/rule duplications, especially I have to know how the AST looks
    like.
  * No syntax check, code highlight, and code assistant in actions,
    especially the programming language is mixed with the tree grammar
    syntax.


Christian

Am 04.11.2011 00:22, schrieb Jim Idle:
> Remember that your tree parser rule for the body should be:
>
> method_body
>     : ^(METHOD_BODY statement_list)
>     | METHOD_BODY  // Empty body
>     ;
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Christian
>> Sent: Thursday, November 03, 2011 2:37 PM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Check if rule returns empty result
>>
>> Thank you for your explanation. And your solution works great, too.
>>
>> Christian
>>
>> Am 03.11.2011 21:31, schrieb Jim Idle:
>>> You don't want that anyway as your nodes will not have token start
>> and
>>> stop information and you might need that.
>>>
>>> method_declaration
>>>      : method_header method_body
>>>      ;
>>>
>>> method_body
>>> 	: (
>>> 		  ';'!
>>>      	| '{'!   statement_list?   '}'!
>>>        )
>>> 		-> ^(METHOD_BODY statement_list?)
>>>      ;
>>>
>>> method_header
>>> 	:  attributes ID etc
>>>
>>> 		->^(METHOD_HEADER attributes ID )
>>> 	;
>>>
>>>
>>> Jim
>>>
>>>> -----Original Message-----
>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>> bounces at antlr.org] On Behalf Of Christian
>>>> Sent: Thursday, November 03, 2011 1:01 PM
>>>> To: antlr-interest at antlr.org
>>>> Subject: [antlr-interest] Check if rule returns empty result
>>>>
>>>> Hi at all,
>>>>
>>>> I have the following rules:
>>>>
>>>> method_declaration
>>>>     : method_header method_body  -> ^(METHOD_HEADER method_header)
>>>> ^(METHOD_BODY method_body)
>>>>     ;
>>>>
>>>> method_body:
>>>>     ';'!
>>>>     | '{'!   statement_list?   '}'!;
>>>>     ;
>>>>
>>>> Of course, method_body is executed because it has no question mark.
>>>> However, introducing rewrite rules and operators cause a problem. By
>>>> using ^(METHOD_BODY method_body), method_body must return a non-
>> empty
>>>> value. However, statement_list? is optional and thus may not match
>> at
>>>> all. In this case, method_body returns nothing anymore and I get an
>>>> RewriteEmpty exception.
>>>>
>>>> How can I solve this problem by only changing rewrite rules?
>>>>
>>>> Regards,
>>>> Christian
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>>> email-address
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From hermenierfabien at gmail.com  Thu Nov  3 23:28:40 2011
From: hermenierfabien at gmail.com (Fabien Hermenier)
Date: Fri, 04 Nov 2011 00:28:40 -0600
Subject: [antlr-interest] about range float and stuff
Message-ID: <4EB38618.40106@gmail.com>

Hi

In an earlier version of my language, I had to parse range of integers 
in various base. Now I want to include float. I have read
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
but I've still got some questions.

All the work seems to be done at the lexer level so the type of the 
following tokens will be as example:
5 : DECIMAL_LITTERAL
07 : OCTAL_LITTERAL
7.5: FLOATING_POINT_LITTERAL
5..7 : DOTDOT

In the last example, the result is not very convenient because I will 
still have to extract the bounds
and compute their type by myself which seems quite redundant with the 
job performed by the lexer.
May be I am missing something ?

I would rather be able to express the range at the parser level which 
seems much more convenient to me:
range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
In this way, I will also be able to manage the possible spaces between 
the bounds and the DOTDOT.

So, am I right to try to parse range at the parser level ? Or is there a 
solution to extract easily the bounds with their type if I am doing the 
job at the lexer level ?

Thanks in advance,
Fabien.




From contact at maik-schmidt.de  Fri Nov  4 00:42:45 2011
From: contact at maik-schmidt.de (pragmaik)
Date: Fri, 4 Nov 2011 00:42:45 -0700 (PDT)
Subject: [antlr-interest] delimiters directive does not work with C# version
 of StringTemplate
Message-ID: <1320392565866-6961898.post@n2.nabble.com>

I'd like to generate some XML documents using StringTemplate and C#, so I've
used

delimiters "$", "$"

to change the default delimiters.

Unfortunately, it didn't work and I've got the following error:

System.ArgumentException: Can't find template arg.st

I get the same error when I set the default delimiters explicitly:

delimiters "<", ">"

Cheers,

Maik


--
View this message in context: http://antlr.1301665.n2.nabble.com/delimiters-directive-does-not-work-with-C-version-of-StringTemplate-tp6961898p6961898.html
Sent from the ANTLR mailing list archive at Nabble.com.

From mmatinlassi at icinetic.com  Fri Nov  4 01:30:23 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Fri, 4 Nov 2011 09:30:23 +0100
Subject: [antlr-interest] Treeparser with custom nodes?
Message-ID: <000001cc9acc$00951d40$01bf57c0$@icinetic.com>

Hi,

 

I am making a tree parser with custom nodes (C# target).

 

I get error message "The non-generic type 'Antlr.Runtime.Tree.TreeRewriter'
cannot be used with type arguments".

 

That error is in Antlr generated tree parser class. I copy the code snippet
below.

 

public partial class DslDefinitionTree :
Antlr.Runtime.Tree.TreeRewriter<CustomTree>

{

 

CustomTree is my specific node that is inherited from CommonTree. Works fine
with normal parser.

 

If I remove the type argument, it compiles and runs but, tree parser returns
null.

 

Any idea what is wrong?

 

Thanks for help,

 

mari


From bkiers at gmail.com  Fri Nov  4 01:48:00 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 09:48:00 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <4EB38618.40106@gmail.com>
References: <4EB38618.40106@gmail.com>
Message-ID: <CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>

Hi Fabien,

Handling this in the parser will make your life much harder than it has to.
Doing it in the lexer, you will need a bit of custom code, but I'd go for
something similar to this (something like it is on the WIki somewhere, but
can't find it...):

grammar RangeDemo;

@lexer::members {

  java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();

  public void offer(int ttype, String ttext) {
    emit(new CommonToken(ttype, ttext));
  }

  @Override
  public void emit(Token t) {
    state.token = t;
    tokens.offer(t);
  }

  @Override
  public Token nextToken() {
    super.nextToken();
    return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
  }
}

parse
  :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
$t.text);})* EOF
  ;

FLOAT
  :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
  |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
  |  '.' DIGITS
  |  DIGITS '.' DIGITS?
  ;

RANGE
  :  '..'
  ;

INT
  :  '1'..'9' DIGIT*
  |  '0'
  ;

OCTAL
  :  '0' ('0'..'7')+
  ;

fragment DIGITS : DIGIT+;
fragment DIGIT  : '0'..'9';

SPACE
  :  (' ' | '\t' | '\r' | '\n') {skip();}
  ;

And if you run the class:

import org.antlr.runtime.*;

public class Main {
  public static void main(String[] args) throws Exception {
    String src = "..07..8.5 1.9..02 1..3.4";
    RangeDemoLexer lexer = new RangeDemoLexer(new ANTLRStringStream(src));
    RangeDemoParser parser = new RangeDemoParser(new
CommonTokenStream(lexer));
    System.out.println("Parsing: '" + src + "'");
    parser.parse();
  }
}

You'll see the following being printed to the console:

Parsing: '..07..8.5 1.9..02 1..3.4'
RANGE      ..
OCTAL      07
RANGE      ..
FLOAT      8.5
FLOAT      1.9
RANGE      ..
OCTAL      02
INT        1
RANGE      ..
FLOAT      3.4


Regards,

Bart.



On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier
<hermenierfabien at gmail.com>wrote:

> Hi
>
> In an earlier version of my language, I had to parse range of integers
> in various base. Now I want to include float. I have read
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
> but I've still got some questions.
>
> All the work seems to be done at the lexer level so the type of the
> following tokens will be as example:
> 5 : DECIMAL_LITTERAL
> 07 : OCTAL_LITTERAL
> 7.5: FLOATING_POINT_LITTERAL
> 5..7 : DOTDOT
>
> In the last example, the result is not very convenient because I will
> still have to extract the bounds
> and compute their type by myself which seems quite redundant with the
> job performed by the lexer.
> May be I am missing something ?
>
> I would rather be able to express the range at the parser level which
> seems much more convenient to me:
> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> In this way, I will also be able to manage the possible spaces between
> the bounds and the DOTDOT.
>
> So, am I right to try to parse range at the parser level ? Or is there a
> solution to extract easily the bounds with their type if I am doing the
> job at the lexer level ?
>
> Thanks in advance,
> Fabien.
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Stefan.Maetje at esd-electronics.com  Fri Nov  4 03:49:09 2011
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Fri, 04 Nov 2011 11:49:09 +0100
Subject: [antlr-interest] This should be simple,
 but I can't find the right syntax (or is it a bug?)
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE070EAEF7@USSCMB03.plt.plantronics.com>
	(from andy.voelkel@plantronics.com on Fri Nov  4 01:59:03 2011)
Message-ID: <1320403749.1620.1@pc-stefanm>

Hi,

I'm having a similar rule in my tree grammar that is simply collecting the 
output of other rules into a common StringTemplate. Therefore I think your
rule is correct so far. (The "problem" template is in a *.stg file.)

problem:
    ^('PROBLEM'	(decls+=mod_dcl|decls+=specification)*)
    -> problem(mDcl={$decls})
    ;

/** Declarations allowed on MODULE level */
mod_dcl
	:	v=var_dcl	{ $st = $v.st; }
	|	f=func_dcl	{ $st = $f.st; }
	|	p=proc_dcl	{ $st = $p.st; }
	;

But I'm using the Java output language and this compiles well. Being curious 
I've set my output language to CSharp3 and I've seen the same behaviour in the
C# source as you describe. Maybe indeed a bug in the C# code generation stuff.

Perhaps you could try to set your output language to Java to see if the 
generated source fits your expectations.

Regards,
	Stefan

Am 04.11.2011 01:59:03 schrieb(en) Voelkel, Andy:
> Hi,
> 
> I'm trying to collect all the StringTemplates created by all instances of 
> one
> rule (borg) into a StringTemplate for a containing rule (prog). But I can't
> seem to find the right syntax:
> 
> options {
>         output = template;
>         language = CSharp3;
>       tokenVocab=Tree1;
>         ASTLabelType = CommonTree;
> }
> 
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>   <vals; separator = ",">
> }
> >> ;
> 
> The syntax I tried above is one many approaches I've tried - none seem to
> work. Antlr3 runs without error but the code won't compile. I hope the 
> intent
> is clear, as it is a pretty simple example. I've looked back and forth in
> Terence's book trying to find something like this, and in the examples, but
> so far I've struck out. It seems like a very common thing to try to do!
> 
> One strange thing is that when I look at the generated code, the list for b
> (list_b) is declared as List<CommonTree>. But Terence's books says is should
> be List<StringTemplate> when the output type is template. Later in the
> generated code, when it tries to add to the list, it tries to create a
> List<StringTemplate>, which seems right, but causes a compiler error. It
> almost seems like a bug, but I probably just don't understand.
> 
> Can anyone help me with this?
> 
> - Andy
> 


From sharwell at pixelminegames.com  Fri Nov  4 06:50:18 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 4 Nov 2011 08:50:18 -0500
Subject: [antlr-interest] delimiters directive does not work with C#
	version of StringTemplate
In-Reply-To: <1320392565866-6961898.post@n2.nabble.com>
References: <1320392565866-6961898.post@n2.nabble.com>
Message-ID: <02f701cc9af8$b0b01b40$121051c0$@pixelminegames.com>

Hi Maik,

Currently the delimiters syntax only works with group files
(TemplateGroupFile, *.stg), not standalone template files
(TemplateGroupDirectory, *.st).

Based on the error message you listed, I'm guessing this is the problem?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of pragmaik
Sent: Friday, November 04, 2011 2:43 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] delimiters directive does not work with C# version
of StringTemplate

I'd like to generate some XML documents using StringTemplate and C#, so I've
used

delimiters "$", "$"

to change the default delimiters.

Unfortunately, it didn't work and I've got the following error:

System.ArgumentException: Can't find template arg.st

I get the same error when I set the default delimiters explicitly:

delimiters "<", ">"

Cheers,

Maik


--
View this message in context:
http://antlr.1301665.n2.nabble.com/delimiters-directive-does-not-work-with-C
-version-of-StringTemplate-tp6961898p6961898.html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From hermenierfabien at gmail.com  Fri Nov  4 07:04:49 2011
From: hermenierfabien at gmail.com (Fabien Hermenier)
Date: Fri, 04 Nov 2011 08:04:49 -0600
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
Message-ID: <4EB3F101.7090505@gmail.com>

Thanks Bart, I think I have understand your approach and indeed, it 
seems beautiful and simple.
I will try your solution during the week-end.

Fabien.

Le 04/11/11 02:48, Bart Kiers a ?crit :
> Hi Fabien,
>
> Handling this in the parser will make your life much harder than it 
> has to. Doing it in the lexer, you will need a bit of custom code, but 
> I'd go for something similar to this (something like it is on the WIki 
> somewhere, but can't find it...):
>
> grammar RangeDemo;
>
> @lexer::members {
>
>   java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
>
>   public void offer(int ttype, String ttext) {
>     emit(new CommonToken(ttype, ttext));
>   }
>   @Override
>   public void emit(Token t) {
>     state.token = t;
>     tokens.offer(t);
>   }
>   @Override
>   public Token nextToken() {
>     super.nextToken();
>     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
>   }
> }
>
> parse
>   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type], 
> $t.text);})* EOF
>   ;
>
> FLOAT
>   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
>   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
>   |  '.' DIGITS
>   |  DIGITS '.' DIGITS?
>   ;
>
> RANGE
>   :  '..'
>   ;
>
> INT
>   :  '1'..'9' DIGIT*
>   |  '0'
>   ;
>
> OCTAL
>   :  '0' ('0'..'7')+
>   ;
>
> fragment DIGITS : DIGIT+;
> fragment DIGIT  : '0'..'9';
>
> SPACE
>   :  (' ' | '\t' | '\r' | '\n') {skip();}
>   ;
>
> And if you run the class:
>
> import org.antlr.runtime.*;
>
> public class Main {
>   public static void main(String[] args) throws Exception {
>     String src = "..07..8.5 1.9..02 1..3.4";
>     RangeDemoLexer lexer = new RangeDemoLexer(new ANTLRStringStream(src));
>     RangeDemoParser parser = new RangeDemoParser(new 
> CommonTokenStream(lexer));
>     System.out.println("Parsing: '" + src + "'");
>     parser.parse();
>   }
> }
>
> You'll see the following being printed to the console:
>
> Parsing: '..07..8.5 1.9..02 1..3.4'
> RANGE      ..
> OCTAL      07
> RANGE      ..
> FLOAT      8.5
> FLOAT      1.9
> RANGE      ..
> OCTAL      02
> INT        1
> RANGE      ..
> FLOAT      3.4
>
>
> Regards,
>
> Bart.
>
>
>
> On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier 
> <hermenierfabien at gmail.com <mailto:hermenierfabien at gmail.com>> wrote:
>
>     Hi
>
>     In an earlier version of my language, I had to parse range of integers
>     in various base. Now I want to include float. I have read
>     http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>     but I've still got some questions.
>
>     All the work seems to be done at the lexer level so the type of the
>     following tokens will be as example:
>     5 : DECIMAL_LITTERAL
>     07 : OCTAL_LITTERAL
>     7.5: FLOATING_POINT_LITTERAL
>     5..7 : DOTDOT
>
>     In the last example, the result is not very convenient because I will
>     still have to extract the bounds
>     and compute their type by myself which seems quite redundant with the
>     job performed by the lexer.
>     May be I am missing something ?
>
>     I would rather be able to express the range at the parser level which
>     seems much more convenient to me:
>     range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
>     In this way, I will also be able to manage the possible spaces between
>     the bounds and the DOTDOT.
>
>     So, am I right to try to parse range at the parser level ? Or is
>     there a
>     solution to extract easily the bounds with their type if I am
>     doing the
>     job at the lexer level ?
>
>     Thanks in advance,
>     Fabien.
>
>
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From bkiers at gmail.com  Fri Nov  4 07:11:35 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 15:11:35 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <4EB3F101.7090505@gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
Message-ID: <CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>

You're welcome Fabien, but note that it most likely looks a lot like
something I found on the ANTLR Wiki: so I can't claim credit for it
(perhaps a small part! :)).
I'll have a look later on and see if I can dig up the Wiki page.

Regards,

Bart.


On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
<hermenierfabien at gmail.com>wrote:

>  Thanks Bart, I think I have understand your approach and indeed, it seems
> beautiful and simple.
> I will try your solution during the week-end.
>
> Fabien.
>
> Le 04/11/11 02:48, Bart Kiers a ?crit :
>
> Hi Fabien,
>
>  Handling this in the parser will make your life much harder than it has
> to. Doing it in the lexer, you will need a bit of custom code, but I'd go
> for something similar to this (something like it is on the WIki somewhere,
> but can't find it...):
>
>  grammar RangeDemo;
>
>  @lexer::members {
>
>    java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
>
>    public void offer(int ttype, String ttext) {
>     emit(new CommonToken(ttype, ttext));
>   }
>
>   @Override
>   public void emit(Token t) {
>     state.token = t;
>     tokens.offer(t);
>   }
>
>   @Override
>   public Token nextToken() {
>     super.nextToken();
>     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
>   }
> }
>
>  parse
>   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
> $t.text);})* EOF
>   ;
>
>  FLOAT
>   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
>   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
>   |  '.' DIGITS
>   |  DIGITS '.' DIGITS?
>   ;
>
>  RANGE
>   :  '..'
>   ;
>
>  INT
>   :  '1'..'9' DIGIT*
>   |  '0'
>   ;
>
>  OCTAL
>   :  '0' ('0'..'7')+
>    ;
>
>  fragment DIGITS : DIGIT+;
> fragment DIGIT  : '0'..'9';
>
>  SPACE
>   :  (' ' | '\t' | '\r' | '\n') {skip();}
>   ;
>
>  And if you run the class:
>
>  import org.antlr.runtime.*;
>
>  public class Main {
>   public static void main(String[] args) throws Exception {
>     String src = "..07..8.5 1.9..02 1..3.4";
>     RangeDemoLexer lexer = new RangeDemoLexer(new ANTLRStringStream(src));
>     RangeDemoParser parser = new RangeDemoParser(new
> CommonTokenStream(lexer));
>     System.out.println("Parsing: '" + src + "'");
>     parser.parse();
>   }
> }
>
>  You'll see the following being printed to the console:
>
>  Parsing: '..07..8.5 1.9..02 1..3.4'
> RANGE      ..
> OCTAL      07
> RANGE      ..
> FLOAT      8.5
> FLOAT      1.9
> RANGE      ..
>  OCTAL      02
> INT        1
> RANGE      ..
> FLOAT      3.4
>
>
>  Regards,
>
>  Bart.
>
>
>
>  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> hermenierfabien at gmail.com> wrote:
>
>> Hi
>>
>> In an earlier version of my language, I had to parse range of integers
>> in various base. Now I want to include float. I have read
>>
>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>> but I've still got some questions.
>>
>> All the work seems to be done at the lexer level so the type of the
>> following tokens will be as example:
>> 5 : DECIMAL_LITTERAL
>> 07 : OCTAL_LITTERAL
>> 7.5: FLOATING_POINT_LITTERAL
>> 5..7 : DOTDOT
>>
>> In the last example, the result is not very convenient because I will
>> still have to extract the bounds
>> and compute their type by myself which seems quite redundant with the
>> job performed by the lexer.
>> May be I am missing something ?
>>
>> I would rather be able to express the range at the parser level which
>> seems much more convenient to me:
>> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
>> In this way, I will also be able to manage the possible spaces between
>> the bounds and the DOTDOT.
>>
>> So, am I right to try to parse range at the parser level ? Or is there a
>> solution to extract easily the bounds with their type if I am doing the
>> job at the lexer level ?
>>
>> Thanks in advance,
>> Fabien.
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>

From dave.thorn at gmail.com  Fri Nov  4 07:41:06 2011
From: dave.thorn at gmail.com (Dave Thorn)
Date: Fri, 4 Nov 2011 14:41:06 +0000
Subject: [antlr-interest] accessing input tokens while parsing the tree
Message-ID: <CAHSDwckKx28ANzbg1UHGU7GjM45-g_W2w=4_jsrnDaKUOnv7ig@mail.gmail.com>

Hi,

The Book has this in chapter 7:

> Also as part of the final rule tree processing, the parser automatically
> computes and stores the range of tokens associated with the subtree
> created for that rule. This information is extremely useful later when
> generating code. Sometimes you want to replace sections of the input
> with a translation computed from the tree. To do that, you need to know
> the corresponding input tokens to replace. For example, consider the
> expression x + y (including the spaces). The root plus node will store
> token boundaries 0..4, assuming that the expression is the only input
...
> The AST nodes will have start and stop token index boundaries...

So assuming I am matching a tree like that:

expr
    :   ^('+' a=expr b=expr) {  System.out.println("???"); }
    ;

How do I access the original source tokens that went into producing this
tree?

It seems, to my reading, that I should be able to access
$<something>.index.  $a.index, $b.index.
$somethingMagical[$a.index..$b.index] == "4 + 5"

Perhaps I missed it, but after saying it's possible, the book doesn't seem
to say how to do it.

Thanks,

Dave

From jimi at temporal-wave.com  Fri Nov  4 09:15:48 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 09:15:48 -0700
Subject: [antlr-interest] This should be simple,
 but I can't find the right syntax (or is it a bug?)
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE070EAEF7@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE070EAEF7@USSCMB03.plt.plantronics.com>
Message-ID: <c301277c3d4140f1337ee7f424319620@mail.gmail.com>

Try this and see if it makes any difference.

<vals: {<it>}; separator="\n">


Also, is the rule borg definitely returning a template?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Voelkel, Andy
> Sent: Thursday, November 03, 2011 5:59 PM
> To: 'ANTLR interest'
> Subject: [antlr-interest] This should be simple, but I can't find the
> right syntax (or is it a bug?)
>
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances
> of one rule (borg) into a StringTemplate for a containing rule (prog).
> But I can't seem to find the right syntax:
>
> options {
>         output = template;
>         language = CSharp3;
>       tokenVocab=Tree1;
>         ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>   <vals; separator = ",">
> }
> >> ;
>
> The syntax I tried above is one many approaches I've tried - none seem
> to work. Antlr3 runs without error but the code won't compile. I hope
> the intent is clear, as it is a pretty simple example. I've looked back
> and forth in Terence's book trying to find something like this, and in
> the examples, but so far I've struck out. It seems like a very common
> thing to try to do!
>
> One strange thing is that when I look at the generated code, the list
> for b (list_b) is declared as List<CommonTree>. But Terence's books
> says is should be List<StringTemplate> when the output type is
> template. Later in the generated code, when it tries to add to the
> list, it tries to create a List<StringTemplate>, which seems right, but
> causes a compiler error. It almost seems like a bug, but I probably
> just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
> files or previous e-mail messages attached to it, may contain
> information that is confidential and/or legally privileged. If you are
> not the intended recipient, or a person responsible for delivering it
> to the intended recipient, please DO NOT disclose the contents to
> another person, store or copy the information in any medium, or use any
> of the information contained in or attached to this transmission for
> any purpose. If you have received this transmission in error, please
> immediately notify the sender by reply email or at
> privacy at plantronics.com, and destroy the original transmission and its
> attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Nov  4 09:30:05 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 09:30:05 -0700
Subject: [antlr-interest] Check if rule returns empty result
In-Reply-To: <4EB37D5A.4000109@gmx.de>
References: <4EB2F2FE.6020007@gmx.de>	<2e5ff9d8600104aa60af9a6f2fb689eb@mail.gmail.com>
	<4EB3096A.6050209@gmx.de>	<c1d42cd216ecb84ef8882aa674d69698@mail.gmail.com>
	<4EB37D5A.4000109@gmx.de>
Message-ID: <8120f5c76f1ba4b361f71e4e3f799250@mail.gmail.com>

The information I gave you still applies though as it concerns the
structure of the tree.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian
> Sent: Thursday, November 03, 2011 10:51 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Check if rule returns empty result
>
> Thank you for your hint, but I do not use tree grammars mainly because
> of Andy Tripp's article:
> http://www.antlr.org/article/1170602723163/treewalkers.html
>
> I walk through the tree by means of the visitor pattern instead. Main
> reasons for me to be against tree grammars:
>
>   * Code/rule duplications, especially I have to know how the AST looks
>     like.
>   * No syntax check, code highlight, and code assistant in actions,
>     especially the programming language is mixed with the tree grammar
>     syntax.
>
>
> Christian
>
> Am 04.11.2011 00:22, schrieb Jim Idle:
> > Remember that your tree parser rule for the body should be:
> >
> > method_body
> >     : ^(METHOD_BODY statement_list)
> >     | METHOD_BODY  // Empty body
> >     ;
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Christian
> >> Sent: Thursday, November 03, 2011 2:37 PM
> >> To: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Check if rule returns empty result
> >>
> >> Thank you for your explanation. And your solution works great, too.
> >>
> >> Christian
> >>
> >> Am 03.11.2011 21:31, schrieb Jim Idle:
> >>> You don't want that anyway as your nodes will not have token start
> >> and
> >>> stop information and you might need that.
> >>>
> >>> method_declaration
> >>>      : method_header method_body
> >>>      ;
> >>>
> >>> method_body
> >>> 	: (
> >>> 		  ';'!
> >>>      	| '{'!   statement_list?   '}'!
> >>>        )
> >>> 		-> ^(METHOD_BODY statement_list?)
> >>>      ;
> >>>
> >>> method_header
> >>> 	:  attributes ID etc
> >>>
> >>> 		->^(METHOD_HEADER attributes ID )
> >>> 	;
> >>>
> >>>
> >>> Jim
> >>>
> >>>> -----Original Message-----
> >>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>>> bounces at antlr.org] On Behalf Of Christian
> >>>> Sent: Thursday, November 03, 2011 1:01 PM
> >>>> To: antlr-interest at antlr.org
> >>>> Subject: [antlr-interest] Check if rule returns empty result
> >>>>
> >>>> Hi at all,
> >>>>
> >>>> I have the following rules:
> >>>>
> >>>> method_declaration
> >>>>     : method_header method_body  -> ^(METHOD_HEADER method_header)
> >>>> ^(METHOD_BODY method_body)
> >>>>     ;
> >>>>
> >>>> method_body:
> >>>>     ';'!
> >>>>     | '{'!   statement_list?   '}'!;
> >>>>     ;
> >>>>
> >>>> Of course, method_body is executed because it has no question
> mark.
> >>>> However, introducing rewrite rules and operators cause a problem.
> >>>> By using ^(METHOD_BODY method_body), method_body must return a
> non-
> >> empty
> >>>> value. However, statement_list? is optional and thus may not match
> >> at
> >>>> all. In this case, method_body returns nothing anymore and I get
> an
> >>>> RewriteEmpty exception.
> >>>>
> >>>> How can I solve this problem by only changing rewrite rules?
> >>>>
> >>>> Regards,
> >>>> Christian
> >>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >>>> http://www.antlr.org/mailman/options/antlr-interest/your-
> >>>> email-address
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Nov  4 09:32:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 09:32:21 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <4EB38618.40106@gmail.com>
References: <4EB38618.40106@gmail.com>
Message-ID: <8cbd8ba4e70398c96283787d6e948f7f@mail.gmail.com>

Please re-read the lexer rules, or better still run them. The DOTDOT lexer
token type just returns the '..' and not the numbers to either side.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Fabien Hermenier
> Sent: Thursday, November 03, 2011 11:29 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] about range float and stuff
>
> Hi
>
> In an earlier version of my language, I had to parse range of integers
> in various base. Now I want to include float. I have read
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poi
> nt,+dot,+range,+time+specs
> but I've still got some questions.
>
> All the work seems to be done at the lexer level so the type of the
> following tokens will be as example:
> 5 : DECIMAL_LITTERAL
> 07 : OCTAL_LITTERAL
> 7.5: FLOATING_POINT_LITTERAL
> 5..7 : DOTDOT
>
> In the last example, the result is not very convenient because I will
> still have to extract the bounds and compute their type by myself which
> seems quite redundant with the job performed by the lexer.
> May be I am missing something ?
>
> I would rather be able to express the range at the parser level which
> seems much more convenient to me:
> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> In this way, I will also be able to manage the possible spaces between
> the bounds and the DOTDOT.
>
> So, am I right to try to parse range at the parser level ? Or is there
> a solution to extract easily the bounds with their type if I am doing
> the job at the lexer level ?
>
> Thanks in advance,
> Fabien.
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Nov  4 09:33:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 09:33:32 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
Message-ID: <bf141ac94849333ba8c977ca17e07cd0@mail.gmail.com>

It won't make it more difficult, and the lexer already does what Fabien
asks.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Friday, November 04, 2011 1:48 AM
> To: Fabien Hermenier
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] about range float and stuff
>
> Hi Fabien,
>
> Handling this in the parser will make your life much harder than it has
> to.
> Doing it in the lexer, you will need a bit of custom code, but I'd go
> for something similar to this (something like it is on the WIki
> somewhere, but can't find it...):
>
> grammar RangeDemo;
>
> @lexer::members {
>
>   java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
>
>   public void offer(int ttype, String ttext) {
>     emit(new CommonToken(ttype, ttext));
>   }
>
>   @Override
>   public void emit(Token t) {
>     state.token = t;
>     tokens.offer(t);
>   }
>
>   @Override
>   public Token nextToken() {
>     super.nextToken();
>     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
>   }
> }
>
> parse
>   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
> $t.text);})* EOF
>   ;
>
> FLOAT
>   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
>   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
>   |  '.' DIGITS
>   |  DIGITS '.' DIGITS?
>   ;
>
> RANGE
>   :  '..'
>   ;
>
> INT
>   :  '1'..'9' DIGIT*
>   |  '0'
>   ;
>
> OCTAL
>   :  '0' ('0'..'7')+
>   ;
>
> fragment DIGITS : DIGIT+;
> fragment DIGIT  : '0'..'9';
>
> SPACE
>   :  (' ' | '\t' | '\r' | '\n') {skip();}
>   ;
>
> And if you run the class:
>
> import org.antlr.runtime.*;
>
> public class Main {
>   public static void main(String[] args) throws Exception {
>     String src = "..07..8.5 1.9..02 1..3.4";
>     RangeDemoLexer lexer = new RangeDemoLexer(new
> ANTLRStringStream(src));
>     RangeDemoParser parser = new RangeDemoParser(new
> CommonTokenStream(lexer));
>     System.out.println("Parsing: '" + src + "'");
>     parser.parse();
>   }
> }
>
> You'll see the following being printed to the console:
>
> Parsing: '..07..8.5 1.9..02 1..3.4'
> RANGE      ..
> OCTAL      07
> RANGE      ..
> FLOAT      8.5
> FLOAT      1.9
> RANGE      ..
> OCTAL      02
> INT        1
> RANGE      ..
> FLOAT      3.4
>
>
> Regards,
>
> Bart.
>
>
>
> On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier
> <hermenierfabien at gmail.com>wrote:
>
> > Hi
> >
> > In an earlier version of my language, I had to parse range of
> integers
> > in various base. Now I want to include float. I have read
> >
> >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+po
> > int,+dot,+range,+time+specs
> > but I've still got some questions.
> >
> > All the work seems to be done at the lexer level so the type of the
> > following tokens will be as example:
> > 5 : DECIMAL_LITTERAL
> > 07 : OCTAL_LITTERAL
> > 7.5: FLOATING_POINT_LITTERAL
> > 5..7 : DOTDOT
> >
> > In the last example, the result is not very convenient because I will
> > still have to extract the bounds and compute their type by myself
> > which seems quite redundant with the job performed by the lexer.
> > May be I am missing something ?
> >
> > I would rather be able to express the range at the parser level which
> > seems much more convenient to me:
> > range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> > In this way, I will also be able to manage the possible spaces
> between
> > the bounds and the DOTDOT.
> >
> > So, am I right to try to parse range at the parser level ? Or is
> there
> > a solution to extract easily the bounds with their type if I am doing
> > the job at the lexer level ?
> >
> > Thanks in advance,
> > Fabien.
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Nov  4 09:47:19 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 09:47:19 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
References: <4EB38618.40106@gmail.com>	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
Message-ID: <169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>

The example on the Wiki already does all of this in the lexer, but without
any code.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Friday, November 04, 2011 7:12 AM
> To: Fabien Hermenier
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] about range float and stuff
>
> You're welcome Fabien, but note that it most likely looks a lot like
> something I found on the ANTLR Wiki: so I can't claim credit for it
> (perhaps a small part! :)).
> I'll have a look later on and see if I can dig up the Wiki page.
>
> Regards,
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> <hermenierfabien at gmail.com>wrote:
>
> >  Thanks Bart, I think I have understand your approach and indeed, it
> > seems beautiful and simple.
> > I will try your solution during the week-end.
> >
> > Fabien.
> >
> > Le 04/11/11 02:48, Bart Kiers a ?crit :
> >
> > Hi Fabien,
> >
> >  Handling this in the parser will make your life much harder than it
> > has to. Doing it in the lexer, you will need a bit of custom code,
> but
> > I'd go for something similar to this (something like it is on the
> WIki
> > somewhere, but can't find it...):
> >
> >  grammar RangeDemo;
> >
> >  @lexer::members {
> >
> >    java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
> >
> >    public void offer(int ttype, String ttext) {
> >     emit(new CommonToken(ttype, ttext));
> >   }
> >
> >   @Override
> >   public void emit(Token t) {
> >     state.token = t;
> >     tokens.offer(t);
> >   }
> >
> >   @Override
> >   public Token nextToken() {
> >     super.nextToken();
> >     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
> >   }
> > }
> >
> >  parse
> >   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
> > $t.text);})* EOF
> >   ;
> >
> >  FLOAT
> >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
> >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
> >   |  '.' DIGITS
> >   |  DIGITS '.' DIGITS?
> >   ;
> >
> >  RANGE
> >   :  '..'
> >   ;
> >
> >  INT
> >   :  '1'..'9' DIGIT*
> >   |  '0'
> >   ;
> >
> >  OCTAL
> >   :  '0' ('0'..'7')+
> >    ;
> >
> >  fragment DIGITS : DIGIT+;
> > fragment DIGIT  : '0'..'9';
> >
> >  SPACE
> >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> >   ;
> >
> >  And if you run the class:
> >
> >  import org.antlr.runtime.*;
> >
> >  public class Main {
> >   public static void main(String[] args) throws Exception {
> >     String src = "..07..8.5 1.9..02 1..3.4";
> >     RangeDemoLexer lexer = new RangeDemoLexer(new
> ANTLRStringStream(src));
> >     RangeDemoParser parser = new RangeDemoParser(new
> > CommonTokenStream(lexer));
> >     System.out.println("Parsing: '" + src + "'");
> >     parser.parse();
> >   }
> > }
> >
> >  You'll see the following being printed to the console:
> >
> >  Parsing: '..07..8.5 1.9..02 1..3.4'
> > RANGE      ..
> > OCTAL      07
> > RANGE      ..
> > FLOAT      8.5
> > FLOAT      1.9
> > RANGE      ..
> >  OCTAL      02
> > INT        1
> > RANGE      ..
> > FLOAT      3.4
> >
> >
> >  Regards,
> >
> >  Bart.
> >
> >
> >
> >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> > hermenierfabien at gmail.com> wrote:
> >
> >> Hi
> >>
> >> In an earlier version of my language, I had to parse range of
> >> integers in various base. Now I want to include float. I have read
> >>
> >>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+p
> >> oint,+dot,+range,+time+specs
> >> but I've still got some questions.
> >>
> >> All the work seems to be done at the lexer level so the type of the
> >> following tokens will be as example:
> >> 5 : DECIMAL_LITTERAL
> >> 07 : OCTAL_LITTERAL
> >> 7.5: FLOATING_POINT_LITTERAL
> >> 5..7 : DOTDOT
> >>
> >> In the last example, the result is not very convenient because I
> will
> >> still have to extract the bounds and compute their type by myself
> >> which seems quite redundant with the job performed by the lexer.
> >> May be I am missing something ?
> >>
> >> I would rather be able to express the range at the parser level
> which
> >> seems much more convenient to me:
> >> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> >> In this way, I will also be able to manage the possible spaces
> >> between the bounds and the DOTDOT.
> >>
> >> So, am I right to try to parse range at the parser level ? Or is
> >> there a solution to extract easily the bounds with their type if I
> am
> >> doing the job at the lexer level ?
> >>
> >> Thanks in advance,
> >> Fabien.
> >>
> >>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From andy.voelkel at plantronics.com  Fri Nov  4 09:54:07 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Fri, 4 Nov 2011 16:54:07 +0000
Subject: [antlr-interest] This should be simple,
 but I can't find the right syntax (or is it a bug?)
In-Reply-To: <c301277c3d4140f1337ee7f424319620@mail.gmail.com>
References: <92E9AB4D42199B4793CE24E094BAEE070EAEF7@USSCMB03.plt.plantronics.com>
	<c301277c3d4140f1337ee7f424319620@mail.gmail.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EB2E6@USSCMB03.plt.plantronics.com>

It turns out that it was a known bug. Thanks to Maik Schmidt for pointing me to the fix. It worked.

- Andy

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Friday, November 04, 2011 9:16 AM
To: ANTLR interest
Subject: Re: [antlr-interest] This should be simple, but I can't find the right syntax (or is it a bug?)

Try this and see if it makes any difference.

<vals: {<it>}; separator="\n">


Also, is the rule borg definitely returning a template?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Voelkel, Andy
> Sent: Thursday, November 03, 2011 5:59 PM
> To: 'ANTLR interest'
> Subject: [antlr-interest] This should be simple, but I can't find the
> right syntax (or is it a bug?)
>
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances
> of one rule (borg) into a StringTemplate for a containing rule (prog).
> But I can't seem to find the right syntax:
>
> options {
>         output = template;
>         language = CSharp3;
>       tokenVocab=Tree1;
>         ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>   <vals; separator = ",">
> }
> >> ;
>
> The syntax I tried above is one many approaches I've tried - none seem
> to work. Antlr3 runs without error but the code won't compile. I hope
> the intent is clear, as it is a pretty simple example. I've looked
> back and forth in Terence's book trying to find something like this,
> and in the examples, but so far I've struck out. It seems like a very
> common thing to try to do!
>
> One strange thing is that when I look at the generated code, the list
> for b (list_b) is declared as List<CommonTree>. But Terence's books
> says is should be List<StringTemplate> when the output type is
> template. Later in the generated code, when it tries to add to the
> list, it tries to create a List<StringTemplate>, which seems right,
> but causes a compiler error. It almost seems like a bug, but I
> probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
> files or previous e-mail messages attached to it, may contain
> information that is confidential and/or legally privileged. If you are
> not the intended recipient, or a person responsible for delivering it
> to the intended recipient, please DO NOT disclose the contents to
> another person, store or copy the information in any medium, or use
> any of the information contained in or attached to this transmission
> for any purpose. If you have received this transmission in error,
> please immediately notify the sender by reply email or at
> privacy at plantronics.com, and destroy the original transmission and its
> attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From bkiers at gmail.com  Fri Nov  4 09:56:31 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 17:56:31 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <bf141ac94849333ba8c977ca17e07cd0@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<bf141ac94849333ba8c977ca17e07cd0@mail.gmail.com>
Message-ID: <CAOrgODZPO032YF7-JZpDZeTLQ3tb1dERWsTcWBOEkR3aORRFGA@mail.gmail.com>

I don't understand what you mean.

Bart.


On Fri, Nov 4, 2011 at 5:33 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> It won't make it more difficult, and the lexer already does what Fabien
> asks.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bart Kiers
> > Sent: Friday, November 04, 2011 1:48 AM
> > To: Fabien Hermenier
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] about range float and stuff
> >
> > Hi Fabien,
> >
> > Handling this in the parser will make your life much harder than it has
> > to.
> > Doing it in the lexer, you will need a bit of custom code, but I'd go
> > for something similar to this (something like it is on the WIki
> > somewhere, but can't find it...):
> >
> > grammar RangeDemo;
> >
> > @lexer::members {
> >
> >   java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
> >
> >   public void offer(int ttype, String ttext) {
> >     emit(new CommonToken(ttype, ttext));
> >   }
> >
> >   @Override
> >   public void emit(Token t) {
> >     state.token = t;
> >     tokens.offer(t);
> >   }
> >
> >   @Override
> >   public Token nextToken() {
> >     super.nextToken();
> >     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
> >   }
> > }
> >
> > parse
> >   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
> > $t.text);})* EOF
> >   ;
> >
> > FLOAT
> >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
> >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
> >   |  '.' DIGITS
> >   |  DIGITS '.' DIGITS?
> >   ;
> >
> > RANGE
> >   :  '..'
> >   ;
> >
> > INT
> >   :  '1'..'9' DIGIT*
> >   |  '0'
> >   ;
> >
> > OCTAL
> >   :  '0' ('0'..'7')+
> >   ;
> >
> > fragment DIGITS : DIGIT+;
> > fragment DIGIT  : '0'..'9';
> >
> > SPACE
> >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> >   ;
> >
> > And if you run the class:
> >
> > import org.antlr.runtime.*;
> >
> > public class Main {
> >   public static void main(String[] args) throws Exception {
> >     String src = "..07..8.5 1.9..02 1..3.4";
> >     RangeDemoLexer lexer = new RangeDemoLexer(new
> > ANTLRStringStream(src));
> >     RangeDemoParser parser = new RangeDemoParser(new
> > CommonTokenStream(lexer));
> >     System.out.println("Parsing: '" + src + "'");
> >     parser.parse();
> >   }
> > }
> >
> > You'll see the following being printed to the console:
> >
> > Parsing: '..07..8.5 1.9..02 1..3.4'
> > RANGE      ..
> > OCTAL      07
> > RANGE      ..
> > FLOAT      8.5
> > FLOAT      1.9
> > RANGE      ..
> > OCTAL      02
> > INT        1
> > RANGE      ..
> > FLOAT      3.4
> >
> >
> > Regards,
> >
> > Bart.
> >
> >
> >
> > On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier
> > <hermenierfabien at gmail.com>wrote:
> >
> > > Hi
> > >
> > > In an earlier version of my language, I had to parse range of
> > integers
> > > in various base. Now I want to include float. I have read
> > >
> > >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+po
> > > int,+dot,+range,+time+specs
> > > but I've still got some questions.
> > >
> > > All the work seems to be done at the lexer level so the type of the
> > > following tokens will be as example:
> > > 5 : DECIMAL_LITTERAL
> > > 07 : OCTAL_LITTERAL
> > > 7.5: FLOATING_POINT_LITTERAL
> > > 5..7 : DOTDOT
> > >
> > > In the last example, the result is not very convenient because I will
> > > still have to extract the bounds and compute their type by myself
> > > which seems quite redundant with the job performed by the lexer.
> > > May be I am missing something ?
> > >
> > > I would rather be able to express the range at the parser level which
> > > seems much more convenient to me:
> > > range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> > > In this way, I will also be able to manage the possible spaces
> > between
> > > the bounds and the DOTDOT.
> > >
> > > So, am I right to try to parse range at the parser level ? Or is
> > there
> > > a solution to extract easily the bounds with their type if I am doing
> > > the job at the lexer level ?
> > >
> > > Thanks in advance,
> > > Fabien.
> > >
> > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Fri Nov  4 10:03:13 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 18:03:13 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
Message-ID: <CAOrgODag8m+_E+9YZRB70v-iumAAGsV-r_RRcc316QHus-Ni3A@mail.gmail.com>

For what it's worth, I found the Wiki entry I based my suggestion on:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497

Regards,

Bart.


On Fri, Nov 4, 2011 at 3:11 PM, Bart Kiers <bkiers at gmail.com> wrote:

> You're welcome Fabien, but note that it most likely looks a lot like
> something I found on the ANTLR Wiki: so I can't claim credit for it
> (perhaps a small part! :)).
> I'll have a look later on and see if I can dig up the Wiki page.
>
> Regards,
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier <
> hermenierfabien at gmail.com> wrote:
>
>>  Thanks Bart, I think I have understand your approach and indeed, it
>> seems beautiful and simple.
>> I will try your solution during the week-end.
>>
>> Fabien.
>>
>> Le 04/11/11 02:48, Bart Kiers a ?crit :
>>
>> Hi Fabien,
>>
>>  Handling this in the parser will make your life much harder than it has
>> to. Doing it in the lexer, you will need a bit of custom code, but I'd go
>> for something similar to this (something like it is on the WIki somewhere,
>> but can't find it...):
>>
>>  grammar RangeDemo;
>>
>>  @lexer::members {
>>
>>    java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
>>
>>    public void offer(int ttype, String ttext) {
>>     emit(new CommonToken(ttype, ttext));
>>   }
>>
>>   @Override
>>   public void emit(Token t) {
>>     state.token = t;
>>     tokens.offer(t);
>>   }
>>
>>   @Override
>>   public Token nextToken() {
>>     super.nextToken();
>>     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
>>   }
>> }
>>
>>  parse
>>   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
>> $t.text);})* EOF
>>   ;
>>
>>  FLOAT
>>   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
>>   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
>>   |  '.' DIGITS
>>   |  DIGITS '.' DIGITS?
>>   ;
>>
>>  RANGE
>>   :  '..'
>>   ;
>>
>>  INT
>>   :  '1'..'9' DIGIT*
>>   |  '0'
>>   ;
>>
>>  OCTAL
>>   :  '0' ('0'..'7')+
>>    ;
>>
>>  fragment DIGITS : DIGIT+;
>> fragment DIGIT  : '0'..'9';
>>
>>  SPACE
>>   :  (' ' | '\t' | '\r' | '\n') {skip();}
>>   ;
>>
>>  And if you run the class:
>>
>>  import org.antlr.runtime.*;
>>
>>  public class Main {
>>   public static void main(String[] args) throws Exception {
>>     String src = "..07..8.5 1.9..02 1..3.4";
>>     RangeDemoLexer lexer = new RangeDemoLexer(new ANTLRStringStream(src));
>>     RangeDemoParser parser = new RangeDemoParser(new
>> CommonTokenStream(lexer));
>>     System.out.println("Parsing: '" + src + "'");
>>     parser.parse();
>>   }
>> }
>>
>>  You'll see the following being printed to the console:
>>
>>  Parsing: '..07..8.5 1.9..02 1..3.4'
>> RANGE      ..
>> OCTAL      07
>> RANGE      ..
>> FLOAT      8.5
>> FLOAT      1.9
>> RANGE      ..
>>  OCTAL      02
>> INT        1
>> RANGE      ..
>> FLOAT      3.4
>>
>>
>>  Regards,
>>
>>  Bart.
>>
>>
>>
>>  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
>> hermenierfabien at gmail.com> wrote:
>>
>>> Hi
>>>
>>> In an earlier version of my language, I had to parse range of integers
>>> in various base. Now I want to include float. I have read
>>>
>>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>>> but I've still got some questions.
>>>
>>> All the work seems to be done at the lexer level so the type of the
>>> following tokens will be as example:
>>> 5 : DECIMAL_LITTERAL
>>> 07 : OCTAL_LITTERAL
>>> 7.5: FLOATING_POINT_LITTERAL
>>> 5..7 : DOTDOT
>>>
>>> In the last example, the result is not very convenient because I will
>>> still have to extract the bounds
>>> and compute their type by myself which seems quite redundant with the
>>> job performed by the lexer.
>>> May be I am missing something ?
>>>
>>> I would rather be able to express the range at the parser level which
>>> seems much more convenient to me:
>>> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
>>> In this way, I will also be able to manage the possible spaces between
>>> the bounds and the DOTDOT.
>>>
>>> So, am I right to try to parse range at the parser level ? Or is there a
>>> solution to extract easily the bounds with their type if I am doing the
>>> job at the lexer level ?
>>>
>>> Thanks in advance,
>>> Fabien.
>>>
>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>

From bkiers at gmail.com  Fri Nov  4 10:12:33 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 18:12:33 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>
	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
Message-ID: <CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>

If your (Jim) definition of "without code" means no @members section, then
I find it a bit of an odd definition since the lexer rules from
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
are
littered with `{ ... }` code blocks: not what I'd call "without code". I
much prefer the solution proposed by Terence in
http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497 (which I
based my suggestion on): far less verbose than the first option, IMO.

Bart.


On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com> wrote:

> The only wiki-link posted in this thread is
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs which
> contains Java code, so you must mean something else (of which, I have no
> idea of)...
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> The example on the Wiki already does all of this in the lexer, but without
>> any code.
>>
>> Jim
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Bart Kiers
>> > Sent: Friday, November 04, 2011 7:12 AM
>> > To: Fabien Hermenier
>> > Cc: antlr-interest at antlr.org
>> > Subject: Re: [antlr-interest] about range float and stuff
>> >
>> > You're welcome Fabien, but note that it most likely looks a lot like
>> > something I found on the ANTLR Wiki: so I can't claim credit for it
>> > (perhaps a small part! :)).
>> > I'll have a look later on and see if I can dig up the Wiki page.
>> >
>> > Regards,
>> >
>> > Bart.
>> >
>> >
>> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
>> > <hermenierfabien at gmail.com>wrote:
>> >
>> > >  Thanks Bart, I think I have understand your approach and indeed, it
>> > > seems beautiful and simple.
>> > > I will try your solution during the week-end.
>> > >
>> > > Fabien.
>> > >
>> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
>> > >
>> > > Hi Fabien,
>> > >
>> > >  Handling this in the parser will make your life much harder than it
>> > > has to. Doing it in the lexer, you will need a bit of custom code,
>> > but
>> > > I'd go for something similar to this (something like it is on the
>> > WIki
>> > > somewhere, but can't find it...):
>> > >
>> > >  grammar RangeDemo;
>> > >
>> > >  @lexer::members {
>> > >
>> > >    java.util.Queue<Token> tokens = new java.util.LinkedList<Token>();
>> > >
>> > >    public void offer(int ttype, String ttext) {
>> > >     emit(new CommonToken(ttype, ttext));
>> > >   }
>> > >
>> > >   @Override
>> > >   public void emit(Token t) {
>> > >     state.token = t;
>> > >     tokens.offer(t);
>> > >   }
>> > >
>> > >   @Override
>> > >   public Token nextToken() {
>> > >     super.nextToken();
>> > >     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
>> > >   }
>> > > }
>> > >
>> > >  parse
>> > >   :  (t=. {System.out.printf("\%-10s \%s\n", tokenNames[$t.type],
>> > > $t.text);})* EOF
>> > >   ;
>> > >
>> > >  FLOAT
>> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
>> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
>> > >   |  '.' DIGITS
>> > >   |  DIGITS '.' DIGITS?
>> > >   ;
>> > >
>> > >  RANGE
>> > >   :  '..'
>> > >   ;
>> > >
>> > >  INT
>> > >   :  '1'..'9' DIGIT*
>> > >   |  '0'
>> > >   ;
>> > >
>> > >  OCTAL
>> > >   :  '0' ('0'..'7')+
>> > >    ;
>> > >
>> > >  fragment DIGITS : DIGIT+;
>> > > fragment DIGIT  : '0'..'9';
>> > >
>> > >  SPACE
>> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
>> > >   ;
>> > >
>> > >  And if you run the class:
>> > >
>> > >  import org.antlr.runtime.*;
>> > >
>> > >  public class Main {
>> > >   public static void main(String[] args) throws Exception {
>> > >     String src = "..07..8.5 1.9..02 1..3.4";
>> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
>> > ANTLRStringStream(src));
>> > >     RangeDemoParser parser = new RangeDemoParser(new
>> > > CommonTokenStream(lexer));
>> > >     System.out.println("Parsing: '" + src + "'");
>> > >     parser.parse();
>> > >   }
>> > > }
>> > >
>> > >  You'll see the following being printed to the console:
>> > >
>> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
>> > > RANGE      ..
>> > > OCTAL      07
>> > > RANGE      ..
>> > > FLOAT      8.5
>> > > FLOAT      1.9
>> > > RANGE      ..
>> > >  OCTAL      02
>> > > INT        1
>> > > RANGE      ..
>> > > FLOAT      3.4
>> > >
>> > >
>> > >  Regards,
>> > >
>> > >  Bart.
>> > >
>> > >
>> > >
>> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
>> > > hermenierfabien at gmail.com> wrote:
>> > >
>> > >> Hi
>> > >>
>> > >> In an earlier version of my language, I had to parse range of
>> > >> integers in various base. Now I want to include float. I have read
>> > >>
>> > >>
>> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+p
>> > >> oint,+dot,+range,+time+specs
>> > >> but I've still got some questions.
>> > >>
>> > >> All the work seems to be done at the lexer level so the type of the
>> > >> following tokens will be as example:
>> > >> 5 : DECIMAL_LITTERAL
>> > >> 07 : OCTAL_LITTERAL
>> > >> 7.5: FLOATING_POINT_LITTERAL
>> > >> 5..7 : DOTDOT
>> > >>
>> > >> In the last example, the result is not very convenient because I
>> > will
>> > >> still have to extract the bounds and compute their type by myself
>> > >> which seems quite redundant with the job performed by the lexer.
>> > >> May be I am missing something ?
>> > >>
>> > >> I would rather be able to express the range at the parser level
>> > which
>> > >> seems much more convenient to me:
>> > >> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
>> > >> In this way, I will also be able to manage the possible spaces
>> > >> between the bounds and the DOTDOT.
>> > >>
>> > >> So, am I right to try to parse range at the parser level ? Or is
>> > >> there a solution to extract easily the bounds with their type if I
>> > am
>> > >> doing the job at the lexer level ?
>> > >>
>> > >> Thanks in advance,
>> > >> Fabien.
>> > >>
>> > >>
>> > >>
>> > >>
>> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > >> Unsubscribe:
>> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> > addres
>> > >> s
>> > >>
>> > >
>> > >
>> > >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> > email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From andy.voelkel at plantronics.com  Fri Nov  4 10:13:50 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Fri, 4 Nov 2011 17:13:50 +0000
Subject: [antlr-interest] Dealing with known bug - not out of the woods!
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EB351@USSCMB03.plt.plantronics.com>

I thought I had things working based on the fix below. I ran Antlr, and compiled a project based on its output without error. However, when I try to run the project, I get:

An unhandled exception of type 'System.IO.FileLoadException' occurred in Tree1.exe

Additional information: Could not load file or assembly 'Antlr3.Runtime, Version=3.3.0.7239, Culture=neutral, PublicKeyToken=eb42632606e9261f' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)

Do I need to somehow rebuild/update the DLL so I can run it? Is it a .NET security thing that refuses to use the modified .stg files? And somehow when Antlr3.exe runs, it get around this?

- Andy


-----Original Message-----
From: Maik Schmidt [mailto:contact at maik-schmidt.de]
Sent: Friday, November 04, 2011 12:21 AM
To: Voelkel, Andy
Subject: Re: [antlr-interest] This should be simple, but I can't find the right syntax (or is it a bug?)

Hi Andy!

This is a know bug. Read
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Templates-in-C-td6724828.html
to find the solution.

Cheers,
Maik

On Fri, Nov 4, 2011 at 1:59 AM, Voelkel, Andy <andy.voelkel at plantronics.com> wrote:
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances of one rule (borg) into a StringTemplate for a containing rule (prog). But I can't seem to find the right syntax:
>
> options {
>        output = template;
>        language = CSharp3;
>      tokenVocab=Tree1;
>        ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>  <vals; separator = ",">
> }
>>> ;
>
> The syntax I tried above is one many approaches I've tried - none seem to work. Antlr3 runs without error but the code won't compile. I hope the intent is clear, as it is a pretty simple example. I've looked back and forth in Terence's book trying to find something like this, and in the examples, but so far I've struck out. It seems like a very common thing to try to do!
>
> One strange thing is that when I look at the generated code, the list for b (list_b) is declared as List<CommonTree>. But Terence's books says is should be List<StringTemplate> when the output type is template. Later in the generated code, when it tries to add to the list, it tries to create a List<StringTemplate>, which seems right, but causes a compiler error. It almost seems like a bug, but I probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From jimi at temporal-wave.com  Fri Nov  4 10:18:38 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 10:18:38 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
References: <4EB38618.40106@gmail.com>	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
Message-ID: <65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>

You may prefer whatever solution you like of course (though these are not
the same solution), but you should be accurate about the other solutions
and take the time to read through them.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Friday, November 04, 2011 10:13 AM
> To: antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] about range float and stuff
>
> If your (Jim) definition of "without code" means no @members section,
> then I find it a bit of an odd definition since the lexer rules from
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poi
> nt,+dot,+range,+time+specs
> are
> littered with `{ ... }` code blocks: not what I'd call "without code".
> I much prefer the solution proposed by Terence in
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497 (which I
> based my suggestion on): far less verbose than the first option, IMO.
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
> > The only wiki-link posted in this thread is
> >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+po
> > int,+dot,+range,+time+specs which contains Java code, so you must
> mean
> > something else (of which, I have no idea of)...
> >
> > Bart.
> >
> >
> > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >
> >> The example on the Wiki already does all of this in the lexer, but
> >> without any code.
> >>
> >> Jim
> >>
> >> > -----Original Message-----
> >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> > bounces at antlr.org] On Behalf Of Bart Kiers
> >> > Sent: Friday, November 04, 2011 7:12 AM
> >> > To: Fabien Hermenier
> >> > Cc: antlr-interest at antlr.org
> >> > Subject: Re: [antlr-interest] about range float and stuff
> >> >
> >> > You're welcome Fabien, but note that it most likely looks a lot
> >> > like something I found on the ANTLR Wiki: so I can't claim credit
> >> > for it (perhaps a small part! :)).
> >> > I'll have a look later on and see if I can dig up the Wiki page.
> >> >
> >> > Regards,
> >> >
> >> > Bart.
> >> >
> >> >
> >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> >> > <hermenierfabien at gmail.com>wrote:
> >> >
> >> > >  Thanks Bart, I think I have understand your approach and
> indeed,
> >> > > it seems beautiful and simple.
> >> > > I will try your solution during the week-end.
> >> > >
> >> > > Fabien.
> >> > >
> >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
> >> > >
> >> > > Hi Fabien,
> >> > >
> >> > >  Handling this in the parser will make your life much harder
> than
> >> > > it has to. Doing it in the lexer, you will need a bit of custom
> >> > > code,
> >> > but
> >> > > I'd go for something similar to this (something like it is on
> the
> >> > WIki
> >> > > somewhere, but can't find it...):
> >> > >
> >> > >  grammar RangeDemo;
> >> > >
> >> > >  @lexer::members {
> >> > >
> >> > >    java.util.Queue<Token> tokens = new
> >> > > java.util.LinkedList<Token>();
> >> > >
> >> > >    public void offer(int ttype, String ttext) {
> >> > >     emit(new CommonToken(ttype, ttext));
> >> > >   }
> >> > >
> >> > >   @Override
> >> > >   public void emit(Token t) {
> >> > >     state.token = t;
> >> > >     tokens.offer(t);
> >> > >   }
> >> > >
> >> > >   @Override
> >> > >   public Token nextToken() {
> >> > >     super.nextToken();
> >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
> >> > >   }
> >> > > }
> >> > >
> >> > >  parse
> >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
> tokenNames[$t.type],
> >> > > $t.text);})* EOF
> >> > >   ;
> >> > >
> >> > >  FLOAT
> >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
> >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
> >> > >   |  '.' DIGITS
> >> > >   |  DIGITS '.' DIGITS?
> >> > >   ;
> >> > >
> >> > >  RANGE
> >> > >   :  '..'
> >> > >   ;
> >> > >
> >> > >  INT
> >> > >   :  '1'..'9' DIGIT*
> >> > >   |  '0'
> >> > >   ;
> >> > >
> >> > >  OCTAL
> >> > >   :  '0' ('0'..'7')+
> >> > >    ;
> >> > >
> >> > >  fragment DIGITS : DIGIT+;
> >> > > fragment DIGIT  : '0'..'9';
> >> > >
> >> > >  SPACE
> >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> >> > >   ;
> >> > >
> >> > >  And if you run the class:
> >> > >
> >> > >  import org.antlr.runtime.*;
> >> > >
> >> > >  public class Main {
> >> > >   public static void main(String[] args) throws Exception {
> >> > >     String src = "..07..8.5 1.9..02 1..3.4";
> >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
> >> > ANTLRStringStream(src));
> >> > >     RangeDemoParser parser = new RangeDemoParser(new
> >> > > CommonTokenStream(lexer));
> >> > >     System.out.println("Parsing: '" + src + "'");
> >> > >     parser.parse();
> >> > >   }
> >> > > }
> >> > >
> >> > >  You'll see the following being printed to the console:
> >> > >
> >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
> >> > > RANGE      ..
> >> > > OCTAL      07
> >> > > RANGE      ..
> >> > > FLOAT      8.5
> >> > > FLOAT      1.9
> >> > > RANGE      ..
> >> > >  OCTAL      02
> >> > > INT        1
> >> > > RANGE      ..
> >> > > FLOAT      3.4
> >> > >
> >> > >
> >> > >  Regards,
> >> > >
> >> > >  Bart.
> >> > >
> >> > >
> >> > >
> >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> >> > > hermenierfabien at gmail.com> wrote:
> >> > >
> >> > >> Hi
> >> > >>
> >> > >> In an earlier version of my language, I had to parse range of
> >> > >> integers in various base. Now I want to include float. I have
> >> > >> read
> >> > >>
> >> > >>
> >> >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> >> > +p
> >> > >> oint,+dot,+range,+time+specs
> >> > >> but I've still got some questions.
> >> > >>
> >> > >> All the work seems to be done at the lexer level so the type of
> >> > >> the following tokens will be as example:
> >> > >> 5 : DECIMAL_LITTERAL
> >> > >> 07 : OCTAL_LITTERAL
> >> > >> 7.5: FLOATING_POINT_LITTERAL
> >> > >> 5..7 : DOTDOT
> >> > >>
> >> > >> In the last example, the result is not very convenient because
> I
> >> > will
> >> > >> still have to extract the bounds and compute their type by
> >> > >> myself which seems quite redundant with the job performed by
> the lexer.
> >> > >> May be I am missing something ?
> >> > >>
> >> > >> I would rather be able to express the range at the parser level
> >> > which
> >> > >> seems much more convenient to me:
> >> > >> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> >> > >> In this way, I will also be able to manage the possible spaces
> >> > >> between the bounds and the DOTDOT.
> >> > >>
> >> > >> So, am I right to try to parse range at the parser level ? Or
> is
> >> > >> there a solution to extract easily the bounds with their type
> if
> >> > >> I
> >> > am
> >> > >> doing the job at the lexer level ?
> >> > >>
> >> > >> Thanks in advance,
> >> > >> Fabien.
> >> > >>
> >> > >>
> >> > >>
> >> > >>
> >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > >> Unsubscribe:
> >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> > addres
> >> > >> s
> >> > >>
> >> > >
> >> > >
> >> > >
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> >> > email-address
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From bkiers at gmail.com  Fri Nov  4 10:30:15 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 18:30:15 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>
	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>
Message-ID: <CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>

I only know that Terence's solution solves the OP's problem AFAIK, whereas
yours I am not sure of: I simply find it too verbose to fully grasp by only
reading through it. Sorry.

Bart.


On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> You may prefer whatever solution you like of course (though these are not
> the same solution), but you should be accurate about the other solutions
> and take the time to read through them.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bart Kiers
> > Sent: Friday, November 04, 2011 10:13 AM
> > To: antlr-interest at antlr.org interest
> > Subject: Re: [antlr-interest] about range float and stuff
> >
> > If your (Jim) definition of "without code" means no @members section,
> > then I find it a bit of an odd definition since the lexer rules from
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poi
> > nt,+dot,+range,+time+specs
> > are
> > littered with `{ ... }` code blocks: not what I'd call "without code".
> > I much prefer the solution proposed by Terence in
> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497 (which I
> > based my suggestion on): far less verbose than the first option, IMO.
> >
> > Bart.
> >
> >
> > On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com> wrote:
> >
> > > The only wiki-link posted in this thread is
> > >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+po
> > > int,+dot,+range,+time+specs which contains Java code, so you must
> > mean
> > > something else (of which, I have no idea of)...
> > >
> > > Bart.
> > >
> > >
> > > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-wave.com>
> > wrote:
> > >
> > >> The example on the Wiki already does all of this in the lexer, but
> > >> without any code.
> > >>
> > >> Jim
> > >>
> > >> > -----Original Message-----
> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > >> > Sent: Friday, November 04, 2011 7:12 AM
> > >> > To: Fabien Hermenier
> > >> > Cc: antlr-interest at antlr.org
> > >> > Subject: Re: [antlr-interest] about range float and stuff
> > >> >
> > >> > You're welcome Fabien, but note that it most likely looks a lot
> > >> > like something I found on the ANTLR Wiki: so I can't claim credit
> > >> > for it (perhaps a small part! :)).
> > >> > I'll have a look later on and see if I can dig up the Wiki page.
> > >> >
> > >> > Regards,
> > >> >
> > >> > Bart.
> > >> >
> > >> >
> > >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> > >> > <hermenierfabien at gmail.com>wrote:
> > >> >
> > >> > >  Thanks Bart, I think I have understand your approach and
> > indeed,
> > >> > > it seems beautiful and simple.
> > >> > > I will try your solution during the week-end.
> > >> > >
> > >> > > Fabien.
> > >> > >
> > >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
> > >> > >
> > >> > > Hi Fabien,
> > >> > >
> > >> > >  Handling this in the parser will make your life much harder
> > than
> > >> > > it has to. Doing it in the lexer, you will need a bit of custom
> > >> > > code,
> > >> > but
> > >> > > I'd go for something similar to this (something like it is on
> > the
> > >> > WIki
> > >> > > somewhere, but can't find it...):
> > >> > >
> > >> > >  grammar RangeDemo;
> > >> > >
> > >> > >  @lexer::members {
> > >> > >
> > >> > >    java.util.Queue<Token> tokens = new
> > >> > > java.util.LinkedList<Token>();
> > >> > >
> > >> > >    public void offer(int ttype, String ttext) {
> > >> > >     emit(new CommonToken(ttype, ttext));
> > >> > >   }
> > >> > >
> > >> > >   @Override
> > >> > >   public void emit(Token t) {
> > >> > >     state.token = t;
> > >> > >     tokens.offer(t);
> > >> > >   }
> > >> > >
> > >> > >   @Override
> > >> > >   public Token nextToken() {
> > >> > >     super.nextToken();
> > >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
> > >> > >   }
> > >> > > }
> > >> > >
> > >> > >  parse
> > >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
> > tokenNames[$t.type],
> > >> > > $t.text);})* EOF
> > >> > >   ;
> > >> > >
> > >> > >  FLOAT
> > >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
> > >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
> > >> > >   |  '.' DIGITS
> > >> > >   |  DIGITS '.' DIGITS?
> > >> > >   ;
> > >> > >
> > >> > >  RANGE
> > >> > >   :  '..'
> > >> > >   ;
> > >> > >
> > >> > >  INT
> > >> > >   :  '1'..'9' DIGIT*
> > >> > >   |  '0'
> > >> > >   ;
> > >> > >
> > >> > >  OCTAL
> > >> > >   :  '0' ('0'..'7')+
> > >> > >    ;
> > >> > >
> > >> > >  fragment DIGITS : DIGIT+;
> > >> > > fragment DIGIT  : '0'..'9';
> > >> > >
> > >> > >  SPACE
> > >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> > >> > >   ;
> > >> > >
> > >> > >  And if you run the class:
> > >> > >
> > >> > >  import org.antlr.runtime.*;
> > >> > >
> > >> > >  public class Main {
> > >> > >   public static void main(String[] args) throws Exception {
> > >> > >     String src = "..07..8.5 1.9..02 1..3.4";
> > >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
> > >> > ANTLRStringStream(src));
> > >> > >     RangeDemoParser parser = new RangeDemoParser(new
> > >> > > CommonTokenStream(lexer));
> > >> > >     System.out.println("Parsing: '" + src + "'");
> > >> > >     parser.parse();
> > >> > >   }
> > >> > > }
> > >> > >
> > >> > >  You'll see the following being printed to the console:
> > >> > >
> > >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
> > >> > > RANGE      ..
> > >> > > OCTAL      07
> > >> > > RANGE      ..
> > >> > > FLOAT      8.5
> > >> > > FLOAT      1.9
> > >> > > RANGE      ..
> > >> > >  OCTAL      02
> > >> > > INT        1
> > >> > > RANGE      ..
> > >> > > FLOAT      3.4
> > >> > >
> > >> > >
> > >> > >  Regards,
> > >> > >
> > >> > >  Bart.
> > >> > >
> > >> > >
> > >> > >
> > >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> > >> > > hermenierfabien at gmail.com> wrote:
> > >> > >
> > >> > >> Hi
> > >> > >>
> > >> > >> In an earlier version of my language, I had to parse range of
> > >> > >> integers in various base. Now I want to include float. I have
> > >> > >> read
> > >> > >>
> > >> > >>
> > >> >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > >> > +p
> > >> > >> oint,+dot,+range,+time+specs
> > >> > >> but I've still got some questions.
> > >> > >>
> > >> > >> All the work seems to be done at the lexer level so the type of
> > >> > >> the following tokens will be as example:
> > >> > >> 5 : DECIMAL_LITTERAL
> > >> > >> 07 : OCTAL_LITTERAL
> > >> > >> 7.5: FLOATING_POINT_LITTERAL
> > >> > >> 5..7 : DOTDOT
> > >> > >>
> > >> > >> In the last example, the result is not very convenient because
> > I
> > >> > will
> > >> > >> still have to extract the bounds and compute their type by
> > >> > >> myself which seems quite redundant with the job performed by
> > the lexer.
> > >> > >> May be I am missing something ?
> > >> > >>
> > >> > >> I would rather be able to express the range at the parser level
> > >> > which
> > >> > >> seems much more convenient to me:
> > >> > >> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
> > >> > >> In this way, I will also be able to manage the possible spaces
> > >> > >> between the bounds and the DOTDOT.
> > >> > >>
> > >> > >> So, am I right to try to parse range at the parser level ? Or
> > is
> > >> > >> there a solution to extract easily the bounds with their type
> > if
> > >> > >> I
> > >> > am
> > >> > >> doing the job at the lexer level ?
> > >> > >>
> > >> > >> Thanks in advance,
> > >> > >> Fabien.
> > >> > >>
> > >> > >>
> > >> > >>
> > >> > >>
> > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> > >> Unsubscribe:
> > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > >> > addres
> > >> > >> s
> > >> > >>
> > >> > >
> > >> > >
> > >> > >
> > >> >
> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> > Unsubscribe:
> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > >> > email-address
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >>
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Fri Nov  4 10:33:31 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 18:33:31 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>
	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>
	<CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
Message-ID: <CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>

And if you really meant that the code on
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
is
"without any code", then I disagree with that definition. Since you didn't
comment on that anymore, I presume that _is_ what you were talking about.

Bart.


On Fri, Nov 4, 2011 at 6:30 PM, Bart Kiers <bkiers at gmail.com> wrote:

> I only know that Terence's solution solves the OP's problem AFAIK, whereas
> yours I am not sure of: I simply find it too verbose to fully grasp by only
> reading through it. Sorry.
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> You may prefer whatever solution you like of course (though these are not
>> the same solution), but you should be accurate about the other solutions
>> and take the time to read through them.
>>
>> Jim
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Bart Kiers
>> > Sent: Friday, November 04, 2011 10:13 AM
>> > To: antlr-interest at antlr.org interest
>> > Subject: Re: [antlr-interest] about range float and stuff
>> >
>> > If your (Jim) definition of "without code" means no @members section,
>> > then I find it a bit of an odd definition since the lexer rules from
>> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poi
>> > nt,+dot,+range,+time+specs
>> > are
>> > littered with `{ ... }` code blocks: not what I'd call "without code".
>> > I much prefer the solution proposed by Terence in
>> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497 (which I
>> > based my suggestion on): far less verbose than the first option, IMO.
>> >
>> > Bart.
>> >
>> >
>> > On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com> wrote:
>> >
>> > > The only wiki-link posted in this thread is
>> > >
>> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+po
>> > > int,+dot,+range,+time+specs which contains Java code, so you must
>> > mean
>> > > something else (of which, I have no idea of)...
>> > >
>> > > Bart.
>> > >
>> > >
>> > > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-wave.com>
>> > wrote:
>> > >
>> > >> The example on the Wiki already does all of this in the lexer, but
>> > >> without any code.
>> > >>
>> > >> Jim
>> > >>
>> > >> > -----Original Message-----
>> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
>> > >> > Sent: Friday, November 04, 2011 7:12 AM
>> > >> > To: Fabien Hermenier
>> > >> > Cc: antlr-interest at antlr.org
>> > >> > Subject: Re: [antlr-interest] about range float and stuff
>> > >> >
>> > >> > You're welcome Fabien, but note that it most likely looks a lot
>> > >> > like something I found on the ANTLR Wiki: so I can't claim credit
>> > >> > for it (perhaps a small part! :)).
>> > >> > I'll have a look later on and see if I can dig up the Wiki page.
>> > >> >
>> > >> > Regards,
>> > >> >
>> > >> > Bart.
>> > >> >
>> > >> >
>> > >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
>> > >> > <hermenierfabien at gmail.com>wrote:
>> > >> >
>> > >> > >  Thanks Bart, I think I have understand your approach and
>> > indeed,
>> > >> > > it seems beautiful and simple.
>> > >> > > I will try your solution during the week-end.
>> > >> > >
>> > >> > > Fabien.
>> > >> > >
>> > >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
>> > >> > >
>> > >> > > Hi Fabien,
>> > >> > >
>> > >> > >  Handling this in the parser will make your life much harder
>> > than
>> > >> > > it has to. Doing it in the lexer, you will need a bit of custom
>> > >> > > code,
>> > >> > but
>> > >> > > I'd go for something similar to this (something like it is on
>> > the
>> > >> > WIki
>> > >> > > somewhere, but can't find it...):
>> > >> > >
>> > >> > >  grammar RangeDemo;
>> > >> > >
>> > >> > >  @lexer::members {
>> > >> > >
>> > >> > >    java.util.Queue<Token> tokens = new
>> > >> > > java.util.LinkedList<Token>();
>> > >> > >
>> > >> > >    public void offer(int ttype, String ttext) {
>> > >> > >     emit(new CommonToken(ttype, ttext));
>> > >> > >   }
>> > >> > >
>> > >> > >   @Override
>> > >> > >   public void emit(Token t) {
>> > >> > >     state.token = t;
>> > >> > >     tokens.offer(t);
>> > >> > >   }
>> > >> > >
>> > >> > >   @Override
>> > >> > >   public Token nextToken() {
>> > >> > >     super.nextToken();
>> > >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN : tokens.poll();
>> > >> > >   }
>> > >> > > }
>> > >> > >
>> > >> > >  parse
>> > >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
>> > tokenNames[$t.type],
>> > >> > > $t.text);})* EOF
>> > >> > >   ;
>> > >> > >
>> > >> > >  FLOAT
>> > >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE, "..");}
>> > >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE, "..");}
>> > >> > >   |  '.' DIGITS
>> > >> > >   |  DIGITS '.' DIGITS?
>> > >> > >   ;
>> > >> > >
>> > >> > >  RANGE
>> > >> > >   :  '..'
>> > >> > >   ;
>> > >> > >
>> > >> > >  INT
>> > >> > >   :  '1'..'9' DIGIT*
>> > >> > >   |  '0'
>> > >> > >   ;
>> > >> > >
>> > >> > >  OCTAL
>> > >> > >   :  '0' ('0'..'7')+
>> > >> > >    ;
>> > >> > >
>> > >> > >  fragment DIGITS : DIGIT+;
>> > >> > > fragment DIGIT  : '0'..'9';
>> > >> > >
>> > >> > >  SPACE
>> > >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
>> > >> > >   ;
>> > >> > >
>> > >> > >  And if you run the class:
>> > >> > >
>> > >> > >  import org.antlr.runtime.*;
>> > >> > >
>> > >> > >  public class Main {
>> > >> > >   public static void main(String[] args) throws Exception {
>> > >> > >     String src = "..07..8.5 1.9..02 1..3.4";
>> > >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
>> > >> > ANTLRStringStream(src));
>> > >> > >     RangeDemoParser parser = new RangeDemoParser(new
>> > >> > > CommonTokenStream(lexer));
>> > >> > >     System.out.println("Parsing: '" + src + "'");
>> > >> > >     parser.parse();
>> > >> > >   }
>> > >> > > }
>> > >> > >
>> > >> > >  You'll see the following being printed to the console:
>> > >> > >
>> > >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
>> > >> > > RANGE      ..
>> > >> > > OCTAL      07
>> > >> > > RANGE      ..
>> > >> > > FLOAT      8.5
>> > >> > > FLOAT      1.9
>> > >> > > RANGE      ..
>> > >> > >  OCTAL      02
>> > >> > > INT        1
>> > >> > > RANGE      ..
>> > >> > > FLOAT      3.4
>> > >> > >
>> > >> > >
>> > >> > >  Regards,
>> > >> > >
>> > >> > >  Bart.
>> > >> > >
>> > >> > >
>> > >> > >
>> > >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
>> > >> > > hermenierfabien at gmail.com> wrote:
>> > >> > >
>> > >> > >> Hi
>> > >> > >>
>> > >> > >> In an earlier version of my language, I had to parse range of
>> > >> > >> integers in various base. Now I want to include float. I have
>> > >> > >> read
>> > >> > >>
>> > >> > >>
>> > >> >
>> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
>> > >> > +p
>> > >> > >> oint,+dot,+range,+time+specs
>> > >> > >> but I've still got some questions.
>> > >> > >>
>> > >> > >> All the work seems to be done at the lexer level so the type of
>> > >> > >> the following tokens will be as example:
>> > >> > >> 5 : DECIMAL_LITTERAL
>> > >> > >> 07 : OCTAL_LITTERAL
>> > >> > >> 7.5: FLOATING_POINT_LITTERAL
>> > >> > >> 5..7 : DOTDOT
>> > >> > >>
>> > >> > >> In the last example, the result is not very convenient because
>> > I
>> > >> > will
>> > >> > >> still have to extract the bounds and compute their type by
>> > >> > >> myself which seems quite redundant with the job performed by
>> > the lexer.
>> > >> > >> May be I am missing something ?
>> > >> > >>
>> > >> > >> I would rather be able to express the range at the parser level
>> > >> > which
>> > >> > >> seems much more convenient to me:
>> > >> > >> range: FLOATING_POINT_LITTERAL DOTDOT FLOATING_POINT_LITTERAL.
>> > >> > >> In this way, I will also be able to manage the possible spaces
>> > >> > >> between the bounds and the DOTDOT.
>> > >> > >>
>> > >> > >> So, am I right to try to parse range at the parser level ? Or
>> > is
>> > >> > >> there a solution to extract easily the bounds with their type
>> > if
>> > >> > >> I
>> > >> > am
>> > >> > >> doing the job at the lexer level ?
>> > >> > >>
>> > >> > >> Thanks in advance,
>> > >> > >> Fabien.
>> > >> > >>
>> > >> > >>
>> > >> > >>
>> > >> > >>
>> > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > >> > >> Unsubscribe:
>> > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> > >> > addres
>> > >> > >> s
>> > >> > >>
>> > >> > >
>> > >> > >
>> > >> > >
>> > >> >
>> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > >> > Unsubscribe:
>> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
>> > >> > email-address
>> > >>
>> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > >> Unsubscribe:
>> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> > addres
>> > >> s
>> > >>
>> > >
>> > >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> > email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Fri Nov  4 10:50:38 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 10:50:38 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>
References: <4EB38618.40106@gmail.com>	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>	<CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
	<CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>
Message-ID: <f381edbd6d2d9157f40ef5b3d46bac7a@mail.gmail.com>

I meant that the code it uses is only for predicates. There are no methods
called to do the parse (though I never personally object to that) or emit
the tokens.

The other code that is there is as examples on how you might handle errors
or range checks and so on. As you said you did not grasp it by reading it,
then you clearly cannot "win" by trying to make pedantic arguments about
whether there is any code or not.

Anyway, my original point was that:

a) The OP quoted the example I commented on;
b) He asked it do something that it already did;
c) The example originally quoted, covers all combinations of the use of
'.' including 1.method(), range and lots more, which is why it seems
verbose.


So, I don't know where you are going with the pedantry, but it is not
worth my time to follow it any more.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Friday, November 04, 2011 10:34 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] about range float and stuff
>
> And if you really meant that the code on
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poi
> nt,+dot,+range,+time+specs
> is
> "without any code", then I disagree with that definition. Since you
> didn't comment on that anymore, I presume that _is_ what you were
> talking about.
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 6:30 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
> > I only know that Terence's solution solves the OP's problem AFAIK,
> > whereas yours I am not sure of: I simply find it too verbose to fully
> > grasp by only reading through it. Sorry.
> >
> > Bart.
> >
> >
> > On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >
> >> You may prefer whatever solution you like of course (though these
> are
> >> not the same solution), but you should be accurate about the other
> >> solutions and take the time to read through them.
> >>
> >> Jim
> >>
> >> > -----Original Message-----
> >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> > bounces at antlr.org] On Behalf Of Bart Kiers
> >> > Sent: Friday, November 04, 2011 10:13 AM
> >> > To: antlr-interest at antlr.org interest
> >> > Subject: Re: [antlr-interest] about range float and stuff
> >> >
> >> > If your (Jim) definition of "without code" means no @members
> >> > section, then I find it a bit of an odd definition since the lexer
> >> > rules from
> >> >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> >> > +poi
> >> > nt,+dot,+range,+time+specs
> >> > are
> >> > littered with `{ ... }` code blocks: not what I'd call "without
> code".
> >> > I much prefer the solution proposed by Terence in
> >> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
> >> > (which I based my suggestion on): far less verbose than the first
> option, IMO.
> >> >
> >> > Bart.
> >> >
> >> >
> >> > On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com>
> wrote:
> >> >
> >> > > The only wiki-link posted in this thread is
> >> > >
> >> >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> >> > +po
> >> > > int,+dot,+range,+time+specs which contains Java code, so you
> must
> >> > mean
> >> > > something else (of which, I have no idea of)...
> >> > >
> >> > > Bart.
> >> > >
> >> > >
> >> > > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-
> wave.com>
> >> > wrote:
> >> > >
> >> > >> The example on the Wiki already does all of this in the lexer,
> >> > >> but without any code.
> >> > >>
> >> > >> Jim
> >> > >>
> >> > >> > -----Original Message-----
> >> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-
> interest-
> >> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> >> > >> > Sent: Friday, November 04, 2011 7:12 AM
> >> > >> > To: Fabien Hermenier
> >> > >> > Cc: antlr-interest at antlr.org
> >> > >> > Subject: Re: [antlr-interest] about range float and stuff
> >> > >> >
> >> > >> > You're welcome Fabien, but note that it most likely looks a
> >> > >> > lot like something I found on the ANTLR Wiki: so I can't
> claim
> >> > >> > credit for it (perhaps a small part! :)).
> >> > >> > I'll have a look later on and see if I can dig up the Wiki
> page.
> >> > >> >
> >> > >> > Regards,
> >> > >> >
> >> > >> > Bart.
> >> > >> >
> >> > >> >
> >> > >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> >> > >> > <hermenierfabien at gmail.com>wrote:
> >> > >> >
> >> > >> > >  Thanks Bart, I think I have understand your approach and
> >> > indeed,
> >> > >> > > it seems beautiful and simple.
> >> > >> > > I will try your solution during the week-end.
> >> > >> > >
> >> > >> > > Fabien.
> >> > >> > >
> >> > >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
> >> > >> > >
> >> > >> > > Hi Fabien,
> >> > >> > >
> >> > >> > >  Handling this in the parser will make your life much
> harder
> >> > than
> >> > >> > > it has to. Doing it in the lexer, you will need a bit of
> >> > >> > > custom code,
> >> > >> > but
> >> > >> > > I'd go for something similar to this (something like it is
> >> > >> > > on
> >> > the
> >> > >> > WIki
> >> > >> > > somewhere, but can't find it...):
> >> > >> > >
> >> > >> > >  grammar RangeDemo;
> >> > >> > >
> >> > >> > >  @lexer::members {
> >> > >> > >
> >> > >> > >    java.util.Queue<Token> tokens = new
> >> > >> > > java.util.LinkedList<Token>();
> >> > >> > >
> >> > >> > >    public void offer(int ttype, String ttext) {
> >> > >> > >     emit(new CommonToken(ttype, ttext));
> >> > >> > >   }
> >> > >> > >
> >> > >> > >   @Override
> >> > >> > >   public void emit(Token t) {
> >> > >> > >     state.token = t;
> >> > >> > >     tokens.offer(t);
> >> > >> > >   }
> >> > >> > >
> >> > >> > >   @Override
> >> > >> > >   public Token nextToken() {
> >> > >> > >     super.nextToken();
> >> > >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN :
> tokens.poll();
> >> > >> > >   }
> >> > >> > > }
> >> > >> > >
> >> > >> > >  parse
> >> > >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
> >> > tokenNames[$t.type],
> >> > >> > > $t.text);})* EOF
> >> > >> > >   ;
> >> > >> > >
> >> > >> > >  FLOAT
> >> > >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE,
> "..");}
> >> > >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE,
> "..");}
> >> > >> > >   |  '.' DIGITS
> >> > >> > >   |  DIGITS '.' DIGITS?
> >> > >> > >   ;
> >> > >> > >
> >> > >> > >  RANGE
> >> > >> > >   :  '..'
> >> > >> > >   ;
> >> > >> > >
> >> > >> > >  INT
> >> > >> > >   :  '1'..'9' DIGIT*
> >> > >> > >   |  '0'
> >> > >> > >   ;
> >> > >> > >
> >> > >> > >  OCTAL
> >> > >> > >   :  '0' ('0'..'7')+
> >> > >> > >    ;
> >> > >> > >
> >> > >> > >  fragment DIGITS : DIGIT+;
> >> > >> > > fragment DIGIT  : '0'..'9';
> >> > >> > >
> >> > >> > >  SPACE
> >> > >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> >> > >> > >   ;
> >> > >> > >
> >> > >> > >  And if you run the class:
> >> > >> > >
> >> > >> > >  import org.antlr.runtime.*;
> >> > >> > >
> >> > >> > >  public class Main {
> >> > >> > >   public static void main(String[] args) throws Exception {
> >> > >> > >     String src = "..07..8.5 1.9..02 1..3.4";
> >> > >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
> >> > >> > ANTLRStringStream(src));
> >> > >> > >     RangeDemoParser parser = new RangeDemoParser(new
> >> > >> > > CommonTokenStream(lexer));
> >> > >> > >     System.out.println("Parsing: '" + src + "'");
> >> > >> > >     parser.parse();
> >> > >> > >   }
> >> > >> > > }
> >> > >> > >
> >> > >> > >  You'll see the following being printed to the console:
> >> > >> > >
> >> > >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
> >> > >> > > RANGE      ..
> >> > >> > > OCTAL      07
> >> > >> > > RANGE      ..
> >> > >> > > FLOAT      8.5
> >> > >> > > FLOAT      1.9
> >> > >> > > RANGE      ..
> >> > >> > >  OCTAL      02
> >> > >> > > INT        1
> >> > >> > > RANGE      ..
> >> > >> > > FLOAT      3.4
> >> > >> > >
> >> > >> > >
> >> > >> > >  Regards,
> >> > >> > >
> >> > >> > >  Bart.
> >> > >> > >
> >> > >> > >
> >> > >> > >
> >> > >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> >> > >> > > hermenierfabien at gmail.com> wrote:
> >> > >> > >
> >> > >> > >> Hi
> >> > >> > >>
> >> > >> > >> In an earlier version of my language, I had to parse range
> >> > >> > >> of integers in various base. Now I want to include float.
> I
> >> > >> > >> have read
> >> > >> > >>
> >> > >> > >>
> >> > >> >
> >> >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> >> > >> > +p
> >> > >> > >> oint,+dot,+range,+time+specs but I've still got some
> >> > >> > >> questions.
> >> > >> > >>
> >> > >> > >> All the work seems to be done at the lexer level so the
> >> > >> > >> type of the following tokens will be as example:
> >> > >> > >> 5 : DECIMAL_LITTERAL
> >> > >> > >> 07 : OCTAL_LITTERAL
> >> > >> > >> 7.5: FLOATING_POINT_LITTERAL
> >> > >> > >> 5..7 : DOTDOT
> >> > >> > >>
> >> > >> > >> In the last example, the result is not very convenient
> >> > >> > >> because
> >> > I
> >> > >> > will
> >> > >> > >> still have to extract the bounds and compute their type by
> >> > >> > >> myself which seems quite redundant with the job performed
> >> > >> > >> by
> >> > the lexer.
> >> > >> > >> May be I am missing something ?
> >> > >> > >>
> >> > >> > >> I would rather be able to express the range at the parser
> >> > >> > >> level
> >> > >> > which
> >> > >> > >> seems much more convenient to me:
> >> > >> > >> range: FLOATING_POINT_LITTERAL DOTDOT
> FLOATING_POINT_LITTERAL.
> >> > >> > >> In this way, I will also be able to manage the possible
> >> > >> > >> spaces between the bounds and the DOTDOT.
> >> > >> > >>
> >> > >> > >> So, am I right to try to parse range at the parser level ?
> >> > >> > >> Or
> >> > is
> >> > >> > >> there a solution to extract easily the bounds with their
> >> > >> > >> type
> >> > if
> >> > >> > >> I
> >> > >> > am
> >> > >> > >> doing the job at the lexer level ?
> >> > >> > >>
> >> > >> > >> Thanks in advance,
> >> > >> > >> Fabien.
> >> > >> > >>
> >> > >> > >>
> >> > >> > >>
> >> > >> > >>
> >> > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > >> > >> Unsubscribe:
> >> > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-
> em
> >> > >> > >> ail-
> >> > >> > addres
> >> > >> > >> s
> >> > >> > >>
> >> > >> > >
> >> > >> > >
> >> > >> > >
> >> > >> >
> >> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > >> > Unsubscribe:
> >> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> >> > >> > email-address
> >> > >>
> >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > >> Unsubscribe:
> >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> > addres
> >> > >> s
> >> > >>
> >> > >
> >> > >
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> >> > email-address
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From Stefan.Maetje at esd-electronics.com  Fri Nov  4 11:22:17 2011
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Fri, 04 Nov 2011 19:22:17 +0100
Subject: [antlr-interest] gUnitEditor does not handle *.gunit files with
 "@header {package my.pack.there; }" gracefully
Message-ID: <1320430937.5410.0@pc-stefanm>

Hi,

the gUnitEditor seems to be a nice tool but it doesn't handle *.gunit files 
with an included "@header {package my.pack.there;}" gracefully.

It is able to read such a file but when writing the "@header" line is 
discarded. I unpacked the antlr-3.4-complete.jar and patched the 
StringTemplate group file /org/antlr/gunit/swingui/gunit.stg to contain my 
needed header line like this:

------------------------------------------------------------
group gunit;

gUnitFile(testSuite) ::= <<gunit <testSuite.grammarName>;

@header { package my.pack.there.antlr; }
<testSuite.rulesForStringTemplate:testGroup()>
>>

testGroup() ::= <<
<if(it.notEmpty)>

//------------------- <it.name>
<it.name>:

<it.testCases: testCase(); separator="\n\n">

<endif>
>>

testCase() ::= "<it.input> <it.output>"
-------------------------------------------------------------

This way I can use this tool at least as a sophisticated editor for *.gunit 
files without destroying the package line over and over again.

But unfortunately the gUnitEditor is not able to run the unit tests because it 
doesn't find the lexer. I assume gUnitEditor needs to evaluate the @header 
line itself.

Running the tests on the command line from the same directory works.

Anybody out there keen on fixing this? I'm not doing it myself because I'm a 
Java newbie and I suspect I would more break than fix.

Greets,
	Stefan


From bkiers at gmail.com  Fri Nov  4 11:29:54 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 19:29:54 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <f381edbd6d2d9157f40ef5b3d46bac7a@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>
	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>
	<CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
	<CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>
	<f381edbd6d2d9157f40ef5b3d46bac7a@mail.gmail.com>
Message-ID: <CAOrgODZMWZqr12N=ojBzZQhMGKMm2zSfHzUA_x1uk4P_BCrEGw@mail.gmail.com>

Jim, this reply is far different than the clipped 1-liners you have
contributed in this discussion so far.

You can call my responses pedantic, but IMO you yourself are a part of the
problem: by giving answers that are hard to interpret because of the lack
of details you poor into it, I find it hard to comprehend what you mean.

You must see the difference in this last reply of yours and the ones before
it, no? Thank you for this last one, btw.

Bart.


On Fri, Nov 4, 2011 at 6:50 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> I meant that the code it uses is only for predicates. There are no methods
> called to do the parse (though I never personally object to that) or emit
> the tokens.
>
> The other code that is there is as examples on how you might handle errors
> or range checks and so on. As you said you did not grasp it by reading it,
> then you clearly cannot "win" by trying to make pedantic arguments about
> whether there is any code or not.
>
> Anyway, my original point was that:
>
> a) The OP quoted the example I commented on;
> b) He asked it do something that it already did;
> c) The example originally quoted, covers all combinations of the use of
> '.' including 1.method(), range and lots more, which is why it seems
> verbose.
>
>
> So, I don't know where you are going with the pedantry, but it is not
> worth my time to follow it any more.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bart Kiers
> > Sent: Friday, November 04, 2011 10:34 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] about range float and stuff
> >
> > And if you really meant that the code on
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poi
> > nt,+dot,+range,+time+specs
> > is
> > "without any code", then I disagree with that definition. Since you
> > didn't comment on that anymore, I presume that _is_ what you were
> > talking about.
> >
> > Bart.
> >
> >
> > On Fri, Nov 4, 2011 at 6:30 PM, Bart Kiers <bkiers at gmail.com> wrote:
> >
> > > I only know that Terence's solution solves the OP's problem AFAIK,
> > > whereas yours I am not sure of: I simply find it too verbose to fully
> > > grasp by only reading through it. Sorry.
> > >
> > > Bart.
> > >
> > >
> > > On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle <jimi at temporal-wave.com>
> > wrote:
> > >
> > >> You may prefer whatever solution you like of course (though these
> > are
> > >> not the same solution), but you should be accurate about the other
> > >> solutions and take the time to read through them.
> > >>
> > >> Jim
> > >>
> > >> > -----Original Message-----
> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > >> > Sent: Friday, November 04, 2011 10:13 AM
> > >> > To: antlr-interest at antlr.org interest
> > >> > Subject: Re: [antlr-interest] about range float and stuff
> > >> >
> > >> > If your (Jim) definition of "without code" means no @members
> > >> > section, then I find it a bit of an odd definition since the lexer
> > >> > rules from
> > >> >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > >> > +poi
> > >> > nt,+dot,+range,+time+specs
> > >> > are
> > >> > littered with `{ ... }` code blocks: not what I'd call "without
> > code".
> > >> > I much prefer the solution proposed by Terence in
> > >> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
> > >> > (which I based my suggestion on): far less verbose than the first
> > option, IMO.
> > >> >
> > >> > Bart.
> > >> >
> > >> >
> > >> > On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com>
> > wrote:
> > >> >
> > >> > > The only wiki-link posted in this thread is
> > >> > >
> > >> >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > >> > +po
> > >> > > int,+dot,+range,+time+specs which contains Java code, so you
> > must
> > >> > mean
> > >> > > something else (of which, I have no idea of)...
> > >> > >
> > >> > > Bart.
> > >> > >
> > >> > >
> > >> > > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-
> > wave.com>
> > >> > wrote:
> > >> > >
> > >> > >> The example on the Wiki already does all of this in the lexer,
> > >> > >> but without any code.
> > >> > >>
> > >> > >> Jim
> > >> > >>
> > >> > >> > -----Original Message-----
> > >> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-
> > interest-
> > >> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > >> > >> > Sent: Friday, November 04, 2011 7:12 AM
> > >> > >> > To: Fabien Hermenier
> > >> > >> > Cc: antlr-interest at antlr.org
> > >> > >> > Subject: Re: [antlr-interest] about range float and stuff
> > >> > >> >
> > >> > >> > You're welcome Fabien, but note that it most likely looks a
> > >> > >> > lot like something I found on the ANTLR Wiki: so I can't
> > claim
> > >> > >> > credit for it (perhaps a small part! :)).
> > >> > >> > I'll have a look later on and see if I can dig up the Wiki
> > page.
> > >> > >> >
> > >> > >> > Regards,
> > >> > >> >
> > >> > >> > Bart.
> > >> > >> >
> > >> > >> >
> > >> > >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> > >> > >> > <hermenierfabien at gmail.com>wrote:
> > >> > >> >
> > >> > >> > >  Thanks Bart, I think I have understand your approach and
> > >> > indeed,
> > >> > >> > > it seems beautiful and simple.
> > >> > >> > > I will try your solution during the week-end.
> > >> > >> > >
> > >> > >> > > Fabien.
> > >> > >> > >
> > >> > >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
> > >> > >> > >
> > >> > >> > > Hi Fabien,
> > >> > >> > >
> > >> > >> > >  Handling this in the parser will make your life much
> > harder
> > >> > than
> > >> > >> > > it has to. Doing it in the lexer, you will need a bit of
> > >> > >> > > custom code,
> > >> > >> > but
> > >> > >> > > I'd go for something similar to this (something like it is
> > >> > >> > > on
> > >> > the
> > >> > >> > WIki
> > >> > >> > > somewhere, but can't find it...):
> > >> > >> > >
> > >> > >> > >  grammar RangeDemo;
> > >> > >> > >
> > >> > >> > >  @lexer::members {
> > >> > >> > >
> > >> > >> > >    java.util.Queue<Token> tokens = new
> > >> > >> > > java.util.LinkedList<Token>();
> > >> > >> > >
> > >> > >> > >    public void offer(int ttype, String ttext) {
> > >> > >> > >     emit(new CommonToken(ttype, ttext));
> > >> > >> > >   }
> > >> > >> > >
> > >> > >> > >   @Override
> > >> > >> > >   public void emit(Token t) {
> > >> > >> > >     state.token = t;
> > >> > >> > >     tokens.offer(t);
> > >> > >> > >   }
> > >> > >> > >
> > >> > >> > >   @Override
> > >> > >> > >   public Token nextToken() {
> > >> > >> > >     super.nextToken();
> > >> > >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN :
> > tokens.poll();
> > >> > >> > >   }
> > >> > >> > > }
> > >> > >> > >
> > >> > >> > >  parse
> > >> > >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
> > >> > tokenNames[$t.type],
> > >> > >> > > $t.text);})* EOF
> > >> > >> > >   ;
> > >> > >> > >
> > >> > >> > >  FLOAT
> > >> > >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE,
> > "..");}
> > >> > >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text); offer(RANGE,
> > "..");}
> > >> > >> > >   |  '.' DIGITS
> > >> > >> > >   |  DIGITS '.' DIGITS?
> > >> > >> > >   ;
> > >> > >> > >
> > >> > >> > >  RANGE
> > >> > >> > >   :  '..'
> > >> > >> > >   ;
> > >> > >> > >
> > >> > >> > >  INT
> > >> > >> > >   :  '1'..'9' DIGIT*
> > >> > >> > >   |  '0'
> > >> > >> > >   ;
> > >> > >> > >
> > >> > >> > >  OCTAL
> > >> > >> > >   :  '0' ('0'..'7')+
> > >> > >> > >    ;
> > >> > >> > >
> > >> > >> > >  fragment DIGITS : DIGIT+;
> > >> > >> > > fragment DIGIT  : '0'..'9';
> > >> > >> > >
> > >> > >> > >  SPACE
> > >> > >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> > >> > >> > >   ;
> > >> > >> > >
> > >> > >> > >  And if you run the class:
> > >> > >> > >
> > >> > >> > >  import org.antlr.runtime.*;
> > >> > >> > >
> > >> > >> > >  public class Main {
> > >> > >> > >   public static void main(String[] args) throws Exception {
> > >> > >> > >     String src = "..07..8.5 1.9..02 1..3.4";
> > >> > >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
> > >> > >> > ANTLRStringStream(src));
> > >> > >> > >     RangeDemoParser parser = new RangeDemoParser(new
> > >> > >> > > CommonTokenStream(lexer));
> > >> > >> > >     System.out.println("Parsing: '" + src + "'");
> > >> > >> > >     parser.parse();
> > >> > >> > >   }
> > >> > >> > > }
> > >> > >> > >
> > >> > >> > >  You'll see the following being printed to the console:
> > >> > >> > >
> > >> > >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
> > >> > >> > > RANGE      ..
> > >> > >> > > OCTAL      07
> > >> > >> > > RANGE      ..
> > >> > >> > > FLOAT      8.5
> > >> > >> > > FLOAT      1.9
> > >> > >> > > RANGE      ..
> > >> > >> > >  OCTAL      02
> > >> > >> > > INT        1
> > >> > >> > > RANGE      ..
> > >> > >> > > FLOAT      3.4
> > >> > >> > >
> > >> > >> > >
> > >> > >> > >  Regards,
> > >> > >> > >
> > >> > >> > >  Bart.
> > >> > >> > >
> > >> > >> > >
> > >> > >> > >
> > >> > >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> > >> > >> > > hermenierfabien at gmail.com> wrote:
> > >> > >> > >
> > >> > >> > >> Hi
> > >> > >> > >>
> > >> > >> > >> In an earlier version of my language, I had to parse range
> > >> > >> > >> of integers in various base. Now I want to include float.
> > I
> > >> > >> > >> have read
> > >> > >> > >>
> > >> > >> > >>
> > >> > >> >
> > >> >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > >> > >> > +p
> > >> > >> > >> oint,+dot,+range,+time+specs but I've still got some
> > >> > >> > >> questions.
> > >> > >> > >>
> > >> > >> > >> All the work seems to be done at the lexer level so the
> > >> > >> > >> type of the following tokens will be as example:
> > >> > >> > >> 5 : DECIMAL_LITTERAL
> > >> > >> > >> 07 : OCTAL_LITTERAL
> > >> > >> > >> 7.5: FLOATING_POINT_LITTERAL
> > >> > >> > >> 5..7 : DOTDOT
> > >> > >> > >>
> > >> > >> > >> In the last example, the result is not very convenient
> > >> > >> > >> because
> > >> > I
> > >> > >> > will
> > >> > >> > >> still have to extract the bounds and compute their type by
> > >> > >> > >> myself which seems quite redundant with the job performed
> > >> > >> > >> by
> > >> > the lexer.
> > >> > >> > >> May be I am missing something ?
> > >> > >> > >>
> > >> > >> > >> I would rather be able to express the range at the parser
> > >> > >> > >> level
> > >> > >> > which
> > >> > >> > >> seems much more convenient to me:
> > >> > >> > >> range: FLOATING_POINT_LITTERAL DOTDOT
> > FLOATING_POINT_LITTERAL.
> > >> > >> > >> In this way, I will also be able to manage the possible
> > >> > >> > >> spaces between the bounds and the DOTDOT.
> > >> > >> > >>
> > >> > >> > >> So, am I right to try to parse range at the parser level ?
> > >> > >> > >> Or
> > >> > is
> > >> > >> > >> there a solution to extract easily the bounds with their
> > >> > >> > >> type
> > >> > if
> > >> > >> > >> I
> > >> > >> > am
> > >> > >> > >> doing the job at the lexer level ?
> > >> > >> > >>
> > >> > >> > >> Thanks in advance,
> > >> > >> > >> Fabien.
> > >> > >> > >>
> > >> > >> > >>
> > >> > >> > >>
> > >> > >> > >>
> > >> > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> > >> > >> Unsubscribe:
> > >> > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-
> > em
> > >> > >> > >> ail-
> > >> > >> > addres
> > >> > >> > >> s
> > >> > >> > >>
> > >> > >> > >
> > >> > >> > >
> > >> > >> > >
> > >> > >> >
> > >> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> > >> > Unsubscribe:
> > >> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > >> > >> > email-address
> > >> > >>
> > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> > >> Unsubscribe:
> > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > >> > addres
> > >> > >> s
> > >> > >>
> > >> > >
> > >> > >
> > >> >
> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> > Unsubscribe:
> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > >> > email-address
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >>
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Nov  4 11:40:44 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 4 Nov 2011 11:40:44 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODZMWZqr12N=ojBzZQhMGKMm2zSfHzUA_x1uk4P_BCrEGw@mail.gmail.com>
References: <4EB38618.40106@gmail.com>	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>	<CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
	<CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>
	<f381edbd6d2d9157f40ef5b3d46bac7a@mail.gmail.com>
	<CAOrgODZMWZqr12N=ojBzZQhMGKMm2zSfHzUA_x1uk4P_BCrEGw@mail.gmail.com>
Message-ID: <d54b27b1291e4925d7f59092552f06b0@mail.gmail.com>

I am generally very verbose, but am currently very busy. A quick search
will back me up on that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Friday, November 04, 2011 11:30 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] about range float and stuff
>
> Jim, this reply is far different than the clipped 1-liners you have
> contributed in this discussion so far.
>
> You can call my responses pedantic, but IMO you yourself are a part of
> the
> problem: by giving answers that are hard to interpret because of the
> lack of details you poor into it, I find it hard to comprehend what you
> mean.
>
> You must see the difference in this last reply of yours and the ones
> before it, no? Thank you for this last one, btw.
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 6:50 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> > I meant that the code it uses is only for predicates. There are no
> > methods called to do the parse (though I never personally object to
> > that) or emit the tokens.
> >
> > The other code that is there is as examples on how you might handle
> > errors or range checks and so on. As you said you did not grasp it by
> > reading it, then you clearly cannot "win" by trying to make pedantic
> > arguments about whether there is any code or not.
> >
> > Anyway, my original point was that:
> >
> > a) The OP quoted the example I commented on;
> > b) He asked it do something that it already did;
> > c) The example originally quoted, covers all combinations of the use
> > of '.' including 1.method(), range and lots more, which is why it
> > seems verbose.
> >
> >
> > So, I don't know where you are going with the pedantry, but it is not
> > worth my time to follow it any more.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Bart Kiers
> > > Sent: Friday, November 04, 2011 10:34 AM
> > > To: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] about range float and stuff
> > >
> > > And if you really meant that the code on
> > >
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+
> > > poi
> > > nt,+dot,+range,+time+specs
> > > is
> > > "without any code", then I disagree with that definition. Since you
> > > didn't comment on that anymore, I presume that _is_ what you were
> > > talking about.
> > >
> > > Bart.
> > >
> > >
> > > On Fri, Nov 4, 2011 at 6:30 PM, Bart Kiers <bkiers at gmail.com>
> wrote:
> > >
> > > > I only know that Terence's solution solves the OP's problem
> AFAIK,
> > > > whereas yours I am not sure of: I simply find it too verbose to
> > > > fully grasp by only reading through it. Sorry.
> > > >
> > > > Bart.
> > > >
> > > >
> > > > On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle <jimi at temporal-wave.com>
> > > wrote:
> > > >
> > > >> You may prefer whatever solution you like of course (though
> these
> > > are
> > > >> not the same solution), but you should be accurate about the
> > > >> other solutions and take the time to read through them.
> > > >>
> > > >> Jim
> > > >>
> > > >> > -----Original Message-----
> > > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > > >> > Sent: Friday, November 04, 2011 10:13 AM
> > > >> > To: antlr-interest at antlr.org interest
> > > >> > Subject: Re: [antlr-interest] about range float and stuff
> > > >> >
> > > >> > If your (Jim) definition of "without code" means no @members
> > > >> > section, then I find it a bit of an odd definition since the
> > > >> > lexer rules from
> > > >> >
> > > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > > >> > +poi
> > > >> > nt,+dot,+range,+time+specs
> > > >> > are
> > > >> > littered with `{ ... }` code blocks: not what I'd call
> "without
> > > code".
> > > >> > I much prefer the solution proposed by Terence in
> > > >> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
> > > >> > (which I based my suggestion on): far less verbose than the
> > > >> > first
> > > option, IMO.
> > > >> >
> > > >> > Bart.
> > > >> >
> > > >> >
> > > >> > On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com>
> > > wrote:
> > > >> >
> > > >> > > The only wiki-link posted in this thread is
> > > >> > >
> > > >> >
> > > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > > >> > +po
> > > >> > > int,+dot,+range,+time+specs which contains Java code, so you
> > > must
> > > >> > mean
> > > >> > > something else (of which, I have no idea of)...
> > > >> > >
> > > >> > > Bart.
> > > >> > >
> > > >> > >
> > > >> > > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-
> > > wave.com>
> > > >> > wrote:
> > > >> > >
> > > >> > >> The example on the Wiki already does all of this in the
> > > >> > >> lexer, but without any code.
> > > >> > >>
> > > >> > >> Jim
> > > >> > >>
> > > >> > >> > -----Original Message-----
> > > >> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-
> > > interest-
> > > >> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > > >> > >> > Sent: Friday, November 04, 2011 7:12 AM
> > > >> > >> > To: Fabien Hermenier
> > > >> > >> > Cc: antlr-interest at antlr.org
> > > >> > >> > Subject: Re: [antlr-interest] about range float and stuff
> > > >> > >> >
> > > >> > >> > You're welcome Fabien, but note that it most likely looks
> > > >> > >> > a lot like something I found on the ANTLR Wiki: so I
> can't
> > > claim
> > > >> > >> > credit for it (perhaps a small part! :)).
> > > >> > >> > I'll have a look later on and see if I can dig up the
> Wiki
> > > page.
> > > >> > >> >
> > > >> > >> > Regards,
> > > >> > >> >
> > > >> > >> > Bart.
> > > >> > >> >
> > > >> > >> >
> > > >> > >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> > > >> > >> > <hermenierfabien at gmail.com>wrote:
> > > >> > >> >
> > > >> > >> > >  Thanks Bart, I think I have understand your approach
> > > >> > >> > > and
> > > >> > indeed,
> > > >> > >> > > it seems beautiful and simple.
> > > >> > >> > > I will try your solution during the week-end.
> > > >> > >> > >
> > > >> > >> > > Fabien.
> > > >> > >> > >
> > > >> > >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
> > > >> > >> > >
> > > >> > >> > > Hi Fabien,
> > > >> > >> > >
> > > >> > >> > >  Handling this in the parser will make your life much
> > > harder
> > > >> > than
> > > >> > >> > > it has to. Doing it in the lexer, you will need a bit
> of
> > > >> > >> > > custom code,
> > > >> > >> > but
> > > >> > >> > > I'd go for something similar to this (something like it
> > > >> > >> > > is on
> > > >> > the
> > > >> > >> > WIki
> > > >> > >> > > somewhere, but can't find it...):
> > > >> > >> > >
> > > >> > >> > >  grammar RangeDemo;
> > > >> > >> > >
> > > >> > >> > >  @lexer::members {
> > > >> > >> > >
> > > >> > >> > >    java.util.Queue<Token> tokens = new
> > > >> > >> > > java.util.LinkedList<Token>();
> > > >> > >> > >
> > > >> > >> > >    public void offer(int ttype, String ttext) {
> > > >> > >> > >     emit(new CommonToken(ttype, ttext));
> > > >> > >> > >   }
> > > >> > >> > >
> > > >> > >> > >   @Override
> > > >> > >> > >   public void emit(Token t) {
> > > >> > >> > >     state.token = t;
> > > >> > >> > >     tokens.offer(t);
> > > >> > >> > >   }
> > > >> > >> > >
> > > >> > >> > >   @Override
> > > >> > >> > >   public Token nextToken() {
> > > >> > >> > >     super.nextToken();
> > > >> > >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN :
> > > tokens.poll();
> > > >> > >> > >   }
> > > >> > >> > > }
> > > >> > >> > >
> > > >> > >> > >  parse
> > > >> > >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
> > > >> > tokenNames[$t.type],
> > > >> > >> > > $t.text);})* EOF
> > > >> > >> > >   ;
> > > >> > >> > >
> > > >> > >> > >  FLOAT
> > > >> > >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE,
> > > "..");}
> > > >> > >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text);
> offer(RANGE,
> > > "..");}
> > > >> > >> > >   |  '.' DIGITS
> > > >> > >> > >   |  DIGITS '.' DIGITS?
> > > >> > >> > >   ;
> > > >> > >> > >
> > > >> > >> > >  RANGE
> > > >> > >> > >   :  '..'
> > > >> > >> > >   ;
> > > >> > >> > >
> > > >> > >> > >  INT
> > > >> > >> > >   :  '1'..'9' DIGIT*
> > > >> > >> > >   |  '0'
> > > >> > >> > >   ;
> > > >> > >> > >
> > > >> > >> > >  OCTAL
> > > >> > >> > >   :  '0' ('0'..'7')+
> > > >> > >> > >    ;
> > > >> > >> > >
> > > >> > >> > >  fragment DIGITS : DIGIT+; fragment DIGIT  : '0'..'9';
> > > >> > >> > >
> > > >> > >> > >  SPACE
> > > >> > >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> > > >> > >> > >   ;
> > > >> > >> > >
> > > >> > >> > >  And if you run the class:
> > > >> > >> > >
> > > >> > >> > >  import org.antlr.runtime.*;
> > > >> > >> > >
> > > >> > >> > >  public class Main {
> > > >> > >> > >   public static void main(String[] args) throws
> Exception {
> > > >> > >> > >     String src = "..07..8.5 1.9..02 1..3.4";
> > > >> > >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
> > > >> > >> > ANTLRStringStream(src));
> > > >> > >> > >     RangeDemoParser parser = new RangeDemoParser(new
> > > >> > >> > > CommonTokenStream(lexer));
> > > >> > >> > >     System.out.println("Parsing: '" + src + "'");
> > > >> > >> > >     parser.parse();
> > > >> > >> > >   }
> > > >> > >> > > }
> > > >> > >> > >
> > > >> > >> > >  You'll see the following being printed to the console:
> > > >> > >> > >
> > > >> > >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
> > > >> > >> > > RANGE      ..
> > > >> > >> > > OCTAL      07
> > > >> > >> > > RANGE      ..
> > > >> > >> > > FLOAT      8.5
> > > >> > >> > > FLOAT      1.9
> > > >> > >> > > RANGE      ..
> > > >> > >> > >  OCTAL      02
> > > >> > >> > > INT        1
> > > >> > >> > > RANGE      ..
> > > >> > >> > > FLOAT      3.4
> > > >> > >> > >
> > > >> > >> > >
> > > >> > >> > >  Regards,
> > > >> > >> > >
> > > >> > >> > >  Bart.
> > > >> > >> > >
> > > >> > >> > >
> > > >> > >> > >
> > > >> > >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> > > >> > >> > > hermenierfabien at gmail.com> wrote:
> > > >> > >> > >
> > > >> > >> > >> Hi
> > > >> > >> > >>
> > > >> > >> > >> In an earlier version of my language, I had to parse
> > > >> > >> > >> range of integers in various base. Now I want to
> include float.
> > > I
> > > >> > >> > >> have read
> > > >> > >> > >>
> > > >> > >> > >>
> > > >> > >> >
> > > >> >
> > > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > > >> > >> > +p
> > > >> > >> > >> oint,+dot,+range,+time+specs but I've still got some
> > > >> > >> > >> questions.
> > > >> > >> > >>
> > > >> > >> > >> All the work seems to be done at the lexer level so
> the
> > > >> > >> > >> type of the following tokens will be as example:
> > > >> > >> > >> 5 : DECIMAL_LITTERAL
> > > >> > >> > >> 07 : OCTAL_LITTERAL
> > > >> > >> > >> 7.5: FLOATING_POINT_LITTERAL
> > > >> > >> > >> 5..7 : DOTDOT
> > > >> > >> > >>
> > > >> > >> > >> In the last example, the result is not very convenient
> > > >> > >> > >> because
> > > >> > I
> > > >> > >> > will
> > > >> > >> > >> still have to extract the bounds and compute their
> type
> > > >> > >> > >> by myself which seems quite redundant with the job
> > > >> > >> > >> performed by
> > > >> > the lexer.
> > > >> > >> > >> May be I am missing something ?
> > > >> > >> > >>
> > > >> > >> > >> I would rather be able to express the range at the
> > > >> > >> > >> parser level
> > > >> > >> > which
> > > >> > >> > >> seems much more convenient to me:
> > > >> > >> > >> range: FLOATING_POINT_LITTERAL DOTDOT
> > > FLOATING_POINT_LITTERAL.
> > > >> > >> > >> In this way, I will also be able to manage the
> possible
> > > >> > >> > >> spaces between the bounds and the DOTDOT.
> > > >> > >> > >>
> > > >> > >> > >> So, am I right to try to parse range at the parser
> level ?
> > > >> > >> > >> Or
> > > >> > is
> > > >> > >> > >> there a solution to extract easily the bounds with
> > > >> > >> > >> their type
> > > >> > if
> > > >> > >> > >> I
> > > >> > >> > am
> > > >> > >> > >> doing the job at the lexer level ?
> > > >> > >> > >>
> > > >> > >> > >> Thanks in advance,
> > > >> > >> > >> Fabien.
> > > >> > >> > >>
> > > >> > >> > >>
> > > >> > >> > >>
> > > >> > >> > >>
> > > >> > >> > >> List:
> > > >> > >> > >> http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> > >> > >> Unsubscribe:
> > > >> > >> > >> http://www.antlr.org/mailman/options/antlr-
> interest/you
> > > >> > >> > >> r-
> > > em
> > > >> > >> > >> ail-
> > > >> > >> > addres
> > > >> > >> > >> s
> > > >> > >> > >>
> > > >> > >> > >
> > > >> > >> > >
> > > >> > >> > >
> > > >> > >> >
> > > >> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-
> interest
> > > >> > >> > Unsubscribe:
> > > >> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > >> > >> > email-address
> > > >> > >>
> > > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> > >> Unsubscribe:
> > > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-
> ema
> > > >> > >> il-
> > > >> > addres
> > > >> > >> s
> > > >> > >>
> > > >> > >
> > > >> > >
> > > >> >
> > > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> > Unsubscribe:
> > > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > >> > email-address
> > > >>
> > > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> Unsubscribe:
> > > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > addres
> > > >> s
> > > >>
> > > >
> > > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From bkiers at gmail.com  Fri Nov  4 11:50:29 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 4 Nov 2011 19:50:29 +0100
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <d54b27b1291e4925d7f59092552f06b0@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>
	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>
	<CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
	<CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>
	<f381edbd6d2d9157f40ef5b3d46bac7a@mail.gmail.com>
	<CAOrgODZMWZqr12N=ojBzZQhMGKMm2zSfHzUA_x1uk4P_BCrEGw@mail.gmail.com>
	<d54b27b1291e4925d7f59092552f06b0@mail.gmail.com>
Message-ID: <CAOrgODY-ND0ny=abfBA4to4UuSfmEkdbCHhiEDGkg1V33Uo7QQ@mail.gmail.com>

I wasn't talking "generally", but about this discussion.
And I am subscribed to the ANTLR-interest list for a couple of years, so I
know you contribute much to the list, of which I am grateful as well: I
have learned a lot of your (verbose) contributions :)

Bart.


On Fri, Nov 4, 2011 at 7:40 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> I am generally very verbose, but am currently very busy. A quick search
> will back me up on that.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bart Kiers
> > Sent: Friday, November 04, 2011 11:30 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] about range float and stuff
> >
> > Jim, this reply is far different than the clipped 1-liners you have
> > contributed in this discussion so far.
> >
> > You can call my responses pedantic, but IMO you yourself are a part of
> > the
> > problem: by giving answers that are hard to interpret because of the
> > lack of details you poor into it, I find it hard to comprehend what you
> > mean.
> >
> > You must see the difference in this last reply of yours and the ones
> > before it, no? Thank you for this last one, btw.
> >
> > Bart.
> >
> >
> > On Fri, Nov 4, 2011 at 6:50 PM, Jim Idle <jimi at temporal-wave.com>
> > wrote:
> >
> > > I meant that the code it uses is only for predicates. There are no
> > > methods called to do the parse (though I never personally object to
> > > that) or emit the tokens.
> > >
> > > The other code that is there is as examples on how you might handle
> > > errors or range checks and so on. As you said you did not grasp it by
> > > reading it, then you clearly cannot "win" by trying to make pedantic
> > > arguments about whether there is any code or not.
> > >
> > > Anyway, my original point was that:
> > >
> > > a) The OP quoted the example I commented on;
> > > b) He asked it do something that it already did;
> > > c) The example originally quoted, covers all combinations of the use
> > > of '.' including 1.method(), range and lots more, which is why it
> > > seems verbose.
> > >
> > >
> > > So, I don't know where you are going with the pedantry, but it is not
> > > worth my time to follow it any more.
> > >
> > > Jim
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Bart Kiers
> > > > Sent: Friday, November 04, 2011 10:34 AM
> > > > To: antlr-interest at antlr.org
> > > > Subject: Re: [antlr-interest] about range float and stuff
> > > >
> > > > And if you really meant that the code on
> > > >
> > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+
> > > > poi
> > > > nt,+dot,+range,+time+specs
> > > > is
> > > > "without any code", then I disagree with that definition. Since you
> > > > didn't comment on that anymore, I presume that _is_ what you were
> > > > talking about.
> > > >
> > > > Bart.
> > > >
> > > >
> > > > On Fri, Nov 4, 2011 at 6:30 PM, Bart Kiers <bkiers at gmail.com>
> > wrote:
> > > >
> > > > > I only know that Terence's solution solves the OP's problem
> > AFAIK,
> > > > > whereas yours I am not sure of: I simply find it too verbose to
> > > > > fully grasp by only reading through it. Sorry.
> > > > >
> > > > > Bart.
> > > > >
> > > > >
> > > > > On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle <jimi at temporal-wave.com>
> > > > wrote:
> > > > >
> > > > >> You may prefer whatever solution you like of course (though
> > these
> > > > are
> > > > >> not the same solution), but you should be accurate about the
> > > > >> other solutions and take the time to read through them.
> > > > >>
> > > > >> Jim
> > > > >>
> > > > >> > -----Original Message-----
> > > > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > > > >> > Sent: Friday, November 04, 2011 10:13 AM
> > > > >> > To: antlr-interest at antlr.org interest
> > > > >> > Subject: Re: [antlr-interest] about range float and stuff
> > > > >> >
> > > > >> > If your (Jim) definition of "without code" means no @members
> > > > >> > section, then I find it a bit of an odd definition since the
> > > > >> > lexer rules from
> > > > >> >
> > > > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > > > >> > +poi
> > > > >> > nt,+dot,+range,+time+specs
> > > > >> > are
> > > > >> > littered with `{ ... }` code blocks: not what I'd call
> > "without
> > > > code".
> > > > >> > I much prefer the solution proposed by Terence in
> > > > >> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
> > > > >> > (which I based my suggestion on): far less verbose than the
> > > > >> > first
> > > > option, IMO.
> > > > >> >
> > > > >> > Bart.
> > > > >> >
> > > > >> >
> > > > >> > On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers <bkiers at gmail.com>
> > > > wrote:
> > > > >> >
> > > > >> > > The only wiki-link posted in this thread is
> > > > >> > >
> > > > >> >
> > > > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > > > >> > +po
> > > > >> > > int,+dot,+range,+time+specs which contains Java code, so you
> > > > must
> > > > >> > mean
> > > > >> > > something else (of which, I have no idea of)...
> > > > >> > >
> > > > >> > > Bart.
> > > > >> > >
> > > > >> > >
> > > > >> > > On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle <jimi at temporal-
> > > > wave.com>
> > > > >> > wrote:
> > > > >> > >
> > > > >> > >> The example on the Wiki already does all of this in the
> > > > >> > >> lexer, but without any code.
> > > > >> > >>
> > > > >> > >> Jim
> > > > >> > >>
> > > > >> > >> > -----Original Message-----
> > > > >> > >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-
> > > > interest-
> > > > >> > >> > bounces at antlr.org] On Behalf Of Bart Kiers
> > > > >> > >> > Sent: Friday, November 04, 2011 7:12 AM
> > > > >> > >> > To: Fabien Hermenier
> > > > >> > >> > Cc: antlr-interest at antlr.org
> > > > >> > >> > Subject: Re: [antlr-interest] about range float and stuff
> > > > >> > >> >
> > > > >> > >> > You're welcome Fabien, but note that it most likely looks
> > > > >> > >> > a lot like something I found on the ANTLR Wiki: so I
> > can't
> > > > claim
> > > > >> > >> > credit for it (perhaps a small part! :)).
> > > > >> > >> > I'll have a look later on and see if I can dig up the
> > Wiki
> > > > page.
> > > > >> > >> >
> > > > >> > >> > Regards,
> > > > >> > >> >
> > > > >> > >> > Bart.
> > > > >> > >> >
> > > > >> > >> >
> > > > >> > >> > On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
> > > > >> > >> > <hermenierfabien at gmail.com>wrote:
> > > > >> > >> >
> > > > >> > >> > >  Thanks Bart, I think I have understand your approach
> > > > >> > >> > > and
> > > > >> > indeed,
> > > > >> > >> > > it seems beautiful and simple.
> > > > >> > >> > > I will try your solution during the week-end.
> > > > >> > >> > >
> > > > >> > >> > > Fabien.
> > > > >> > >> > >
> > > > >> > >> > > Le 04/11/11 02:48, Bart Kiers a ?crit :
> > > > >> > >> > >
> > > > >> > >> > > Hi Fabien,
> > > > >> > >> > >
> > > > >> > >> > >  Handling this in the parser will make your life much
> > > > harder
> > > > >> > than
> > > > >> > >> > > it has to. Doing it in the lexer, you will need a bit
> > of
> > > > >> > >> > > custom code,
> > > > >> > >> > but
> > > > >> > >> > > I'd go for something similar to this (something like it
> > > > >> > >> > > is on
> > > > >> > the
> > > > >> > >> > WIki
> > > > >> > >> > > somewhere, but can't find it...):
> > > > >> > >> > >
> > > > >> > >> > >  grammar RangeDemo;
> > > > >> > >> > >
> > > > >> > >> > >  @lexer::members {
> > > > >> > >> > >
> > > > >> > >> > >    java.util.Queue<Token> tokens = new
> > > > >> > >> > > java.util.LinkedList<Token>();
> > > > >> > >> > >
> > > > >> > >> > >    public void offer(int ttype, String ttext) {
> > > > >> > >> > >     emit(new CommonToken(ttype, ttext));
> > > > >> > >> > >   }
> > > > >> > >> > >
> > > > >> > >> > >   @Override
> > > > >> > >> > >   public void emit(Token t) {
> > > > >> > >> > >     state.token = t;
> > > > >> > >> > >     tokens.offer(t);
> > > > >> > >> > >   }
> > > > >> > >> > >
> > > > >> > >> > >   @Override
> > > > >> > >> > >   public Token nextToken() {
> > > > >> > >> > >     super.nextToken();
> > > > >> > >> > >     return tokens.isEmpty() ? Token.EOF_TOKEN :
> > > > tokens.poll();
> > > > >> > >> > >   }
> > > > >> > >> > > }
> > > > >> > >> > >
> > > > >> > >> > >  parse
> > > > >> > >> > >   :  (t=. {System.out.printf("\%-10s \%s\n",
> > > > >> > tokenNames[$t.type],
> > > > >> > >> > > $t.text);})* EOF
> > > > >> > >> > >   ;
> > > > >> > >> > >
> > > > >> > >> > >  FLOAT
> > > > >> > >> > >   :  INT '..'   {offer(INT, $INT.text); offer(RANGE,
> > > > "..");}
> > > > >> > >> > >   |  OCTAL '..' {offer(OCTAL, $OCTAL.text);
> > offer(RANGE,
> > > > "..");}
> > > > >> > >> > >   |  '.' DIGITS
> > > > >> > >> > >   |  DIGITS '.' DIGITS?
> > > > >> > >> > >   ;
> > > > >> > >> > >
> > > > >> > >> > >  RANGE
> > > > >> > >> > >   :  '..'
> > > > >> > >> > >   ;
> > > > >> > >> > >
> > > > >> > >> > >  INT
> > > > >> > >> > >   :  '1'..'9' DIGIT*
> > > > >> > >> > >   |  '0'
> > > > >> > >> > >   ;
> > > > >> > >> > >
> > > > >> > >> > >  OCTAL
> > > > >> > >> > >   :  '0' ('0'..'7')+
> > > > >> > >> > >    ;
> > > > >> > >> > >
> > > > >> > >> > >  fragment DIGITS : DIGIT+; fragment DIGIT  : '0'..'9';
> > > > >> > >> > >
> > > > >> > >> > >  SPACE
> > > > >> > >> > >   :  (' ' | '\t' | '\r' | '\n') {skip();}
> > > > >> > >> > >   ;
> > > > >> > >> > >
> > > > >> > >> > >  And if you run the class:
> > > > >> > >> > >
> > > > >> > >> > >  import org.antlr.runtime.*;
> > > > >> > >> > >
> > > > >> > >> > >  public class Main {
> > > > >> > >> > >   public static void main(String[] args) throws
> > Exception {
> > > > >> > >> > >     String src = "..07..8.5 1.9..02 1..3.4";
> > > > >> > >> > >     RangeDemoLexer lexer = new RangeDemoLexer(new
> > > > >> > >> > ANTLRStringStream(src));
> > > > >> > >> > >     RangeDemoParser parser = new RangeDemoParser(new
> > > > >> > >> > > CommonTokenStream(lexer));
> > > > >> > >> > >     System.out.println("Parsing: '" + src + "'");
> > > > >> > >> > >     parser.parse();
> > > > >> > >> > >   }
> > > > >> > >> > > }
> > > > >> > >> > >
> > > > >> > >> > >  You'll see the following being printed to the console:
> > > > >> > >> > >
> > > > >> > >> > >  Parsing: '..07..8.5 1.9..02 1..3.4'
> > > > >> > >> > > RANGE      ..
> > > > >> > >> > > OCTAL      07
> > > > >> > >> > > RANGE      ..
> > > > >> > >> > > FLOAT      8.5
> > > > >> > >> > > FLOAT      1.9
> > > > >> > >> > > RANGE      ..
> > > > >> > >> > >  OCTAL      02
> > > > >> > >> > > INT        1
> > > > >> > >> > > RANGE      ..
> > > > >> > >> > > FLOAT      3.4
> > > > >> > >> > >
> > > > >> > >> > >
> > > > >> > >> > >  Regards,
> > > > >> > >> > >
> > > > >> > >> > >  Bart.
> > > > >> > >> > >
> > > > >> > >> > >
> > > > >> > >> > >
> > > > >> > >> > >  On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier <
> > > > >> > >> > > hermenierfabien at gmail.com> wrote:
> > > > >> > >> > >
> > > > >> > >> > >> Hi
> > > > >> > >> > >>
> > > > >> > >> > >> In an earlier version of my language, I had to parse
> > > > >> > >> > >> range of integers in various base. Now I want to
> > include float.
> > > > I
> > > > >> > >> > >> have read
> > > > >> > >> > >>
> > > > >> > >> > >>
> > > > >> > >> >
> > > > >> >
> > > > http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
> > > > >> > >> > +p
> > > > >> > >> > >> oint,+dot,+range,+time+specs but I've still got some
> > > > >> > >> > >> questions.
> > > > >> > >> > >>
> > > > >> > >> > >> All the work seems to be done at the lexer level so
> > the
> > > > >> > >> > >> type of the following tokens will be as example:
> > > > >> > >> > >> 5 : DECIMAL_LITTERAL
> > > > >> > >> > >> 07 : OCTAL_LITTERAL
> > > > >> > >> > >> 7.5: FLOATING_POINT_LITTERAL
> > > > >> > >> > >> 5..7 : DOTDOT
> > > > >> > >> > >>
> > > > >> > >> > >> In the last example, the result is not very convenient
> > > > >> > >> > >> because
> > > > >> > I
> > > > >> > >> > will
> > > > >> > >> > >> still have to extract the bounds and compute their
> > type
> > > > >> > >> > >> by myself which seems quite redundant with the job
> > > > >> > >> > >> performed by
> > > > >> > the lexer.
> > > > >> > >> > >> May be I am missing something ?
> > > > >> > >> > >>
> > > > >> > >> > >> I would rather be able to express the range at the
> > > > >> > >> > >> parser level
> > > > >> > >> > which
> > > > >> > >> > >> seems much more convenient to me:
> > > > >> > >> > >> range: FLOATING_POINT_LITTERAL DOTDOT
> > > > FLOATING_POINT_LITTERAL.
> > > > >> > >> > >> In this way, I will also be able to manage the
> > possible
> > > > >> > >> > >> spaces between the bounds and the DOTDOT.
> > > > >> > >> > >>
> > > > >> > >> > >> So, am I right to try to parse range at the parser
> > level ?
> > > > >> > >> > >> Or
> > > > >> > is
> > > > >> > >> > >> there a solution to extract easily the bounds with
> > > > >> > >> > >> their type
> > > > >> > if
> > > > >> > >> > >> I
> > > > >> > >> > am
> > > > >> > >> > >> doing the job at the lexer level ?
> > > > >> > >> > >>
> > > > >> > >> > >> Thanks in advance,
> > > > >> > >> > >> Fabien.
> > > > >> > >> > >>
> > > > >> > >> > >>
> > > > >> > >> > >>
> > > > >> > >> > >>
> > > > >> > >> > >> List:
> > > > >> > >> > >> http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > >> > >> > >> Unsubscribe:
> > > > >> > >> > >> http://www.antlr.org/mailman/options/antlr-
> > interest/you
> > > > >> > >> > >> r-
> > > > em
> > > > >> > >> > >> ail-
> > > > >> > >> > addres
> > > > >> > >> > >> s
> > > > >> > >> > >>
> > > > >> > >> > >
> > > > >> > >> > >
> > > > >> > >> > >
> > > > >> > >> >
> > > > >> > >> > List: http://www.antlr.org/mailman/listinfo/antlr-
> > interest
> > > > >> > >> > Unsubscribe:
> > > > >> > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > > >> > >> > email-address
> > > > >> > >>
> > > > >> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > >> > >> Unsubscribe:
> > > > >> > >> http://www.antlr.org/mailman/options/antlr-interest/your-
> > ema
> > > > >> > >> il-
> > > > >> > addres
> > > > >> > >> s
> > > > >> > >>
> > > > >> > >
> > > > >> > >
> > > > >> >
> > > > >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > >> > Unsubscribe:
> > > > >> > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > > >> > email-address
> > > > >>
> > > > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > >> Unsubscribe:
> > > > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > > addres
> > > > >> s
> > > > >>
> > > > >
> > > > >
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe:
> > > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > > email-address
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From andy.voelkel at plantronics.com  Fri Nov  4 11:50:45 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Fri, 4 Nov 2011 18:50:45 +0000
Subject: [antlr-interest] StringTemplate and Antrl3.runtime version mess on
	C# target
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EB4D5@USSCMB03.plt.plantronics.com>

I've done some further investigation on this problem, and it seems that it wasn't quite what I thought it was. As I suspected, it was connected to my recent efforts to use Antlr generated StringTemplate code. I hadn't done this previously because Antlr3.4 uses StringTemplate 4 for its own purposes, but generates code that expects to use StringTemplate 3 if you use Antlr to StringTemplate integration.
The problem is that I apparently need a different version of Antlr3.Runtime.dll to run the C# code generated by Antlr3.exe than I need to run StringTemplate 3, which that same generated code expects to use.
I got the version of Antlr3.Runtime.dll that StringTemplate3 expects from the StringTemplate site, and tried to add that to my project along with the version of Antlr.Runtime.dll that the generated C# code expects, but Visual Studio doesn't like it.
What a mess! How do I resolve this? And I'm mystified, since it seems that anyone who tries to use the latest version of the C# target and also wants to have Antlr generate StringTemplate code will run into this problem.

-       Andy

On Fri, Nov 4, 2011 at 1:13 PM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
I thought I had things working based on the fix below. I ran Antlr, and compiled a project based on its output without error. However, when I try to run the project, I get:

An unhandled exception of type 'System.IO.FileLoadException' occurred in Tree1.exe

Additional information: Could not load file or assembly 'Antlr3.Runtime, Version=3.3.0.7239, Culture=neutral, PublicKeyToken=eb42632606e9261f' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)

Do I need to somehow rebuild/update the DLL so I can run it? Is it a .NET security thing that refuses to use the modified .stg files? And somehow when Antlr3.exe runs, it get around this?

- Andy


-----Original Message-----
From: Maik Schmidt [mailto:contact at maik-schmidt.de<mailto:contact at maik-schmidt.de>]
Sent: Friday, November 04, 2011 12:21 AM
To: Voelkel, Andy
Subject: Re: [antlr-interest] This should be simple, but I can't find the right syntax (or is it a bug?)

Hi Andy!

This is a know bug. Read
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Templates-in-C-td6724828.html
to find the solution.

Cheers,
Maik

On Fri, Nov 4, 2011 at 1:59 AM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances of one rule (borg) into a StringTemplate for a containing rule (prog). But I can't seem to find the right syntax:
>
> options {
>        output = template;
>        language = CSharp3;
>      tokenVocab=Tree1;
>        ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>  <vals; separator = ",">
> }
>>> ;
>
> The syntax I tried above is one many approaches I've tried - none seem to work. Antlr3 runs without error but the code won't compile. I hope the intent is clear, as it is a pretty simple example. I've looked back and forth in Terence's book trying to find something like this, and in the examples, but so far I've struck out. It seems like a very common thing to try to do!
>
> One strange thing is that when I look at the generated code, the list for b (list_b) is declared as List<CommonTree>. But Terence's books says is should be List<StringTemplate> when the output type is template. Later in the generated code, when it tries to add to the list, it tries to create a List<StringTemplate>, which seems right, but causes a compiler error. It almost seems like a bug, but I probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From sharwell at pixelminegames.com  Fri Nov  4 12:14:12 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 4 Nov 2011 14:14:12 -0500
Subject: [antlr-interest] StringTemplate and Antrl3.runtime version mess
	on C# target
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE070EB4D5@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE070EB4D5@USSCMB03.plt.plantronics.com>
Message-ID: <031601cc9b25$f0c43ef0$d24cbcd0$@pixelminegames.com>

Hi Andy,

 

The Antlr3.Runtime.dll included in all of the packages is exactly the same.
It's used by ST3, ST4, the Tool, and the generated grammars for both the
CSharp2 and CSharp3 targets.

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

 

Sam

 

From: Voelkel, Andy [mailto:andy.voelkel at plantronics.com] 
Sent: Friday, November 04, 2011 1:51 PM
To: antlr-interest at antlr.org
Cc: Eric; Sam Harwell (sharwell at pixelminegames.com)
Subject: StringTemplate and Antrl3.runtime version mess on C# target

 

I've done some further investigation on this problem, and it seems that it
wasn't quite what I thought it was. As I suspected, it was connected to my
recent efforts to use Antlr generated StringTemplate code. I hadn't done
this previously because Antlr3.4 uses StringTemplate 4 for its own purposes,
but generates code that expects to use StringTemplate 3 if you use Antlr to
StringTemplate integration.

The problem is that I apparently need a different version of
Antlr3.Runtime.dll to run the C# code generated by Antlr3.exe than I need to
run StringTemplate 3, which that same generated code expects to use.

I got the version of Antlr3.Runtime.dll that StringTemplate3 expects from
the StringTemplate site, and tried to add that to my project along with the
version of Antlr.Runtime.dll that the generated C# code expects, but Visual
Studio doesn't like it.

What a mess! How do I resolve this? And I'm mystified, since it seems that
anyone who tries to use the latest version of the C# target and also wants
to have Antlr generate StringTemplate code will run into this problem.

-       Andy

 

On Fri, Nov 4, 2011 at 1:13 PM, Voelkel, Andy <andy.voelkel at plantronics.com>
wrote:

I thought I had things working based on the fix below. I ran Antlr, and
compiled a project based on its output without error. However, when I try to
run the project, I get:

An unhandled exception of type 'System.IO.FileLoadException' occurred in
Tree1.exe

Additional information: Could not load file or assembly 'Antlr3.Runtime,
Version=3.3.0.7239, Culture=neutral, PublicKeyToken=eb42632606e9261f' or one
of its dependencies. The located assembly's manifest definition does not
match the assembly reference. (Exception from HRESULT: 0x80131040)

Do I need to somehow rebuild/update the DLL so I can run it? Is it a .NET
security thing that refuses to use the modified .stg files? And somehow when
Antlr3.exe runs, it get around this?

- Andy


-----Original Message-----
From: Maik Schmidt [mailto:contact at maik-schmidt.de]
Sent: Friday, November 04, 2011 12:21 AM
To: Voelkel, Andy
Subject: Re: [antlr-interest] This should be simple, but I can't find the
right syntax (or is it a bug?)

Hi Andy!

This is a know bug. Read
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Te
mplates-in-C-td6724828.html
to find the solution.

Cheers,
Maik

On Fri, Nov 4, 2011 at 1:59 AM, Voelkel, Andy <andy.voelkel at plantronics.com>
wrote:
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances of
one rule (borg) into a StringTemplate for a containing rule (prog). But I
can't seem to find the right syntax:
>
> options {
>        output = template;
>        language = CSharp3;
>      tokenVocab=Tree1;
>        ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>  <vals; separator = ",">
> }
>>> ;
>
> The syntax I tried above is one many approaches I've tried - none seem to
work. Antlr3 runs without error but the code won't compile. I hope the
intent is clear, as it is a pretty simple example. I've looked back and
forth in Terence's book trying to find something like this, and in the
examples, but so far I've struck out. It seems like a very common thing to
try to do!
>
> One strange thing is that when I look at the generated code, the list for
b (list_b) is declared as List<CommonTree>. But Terence's books says is
should be List<StringTemplate> when the output type is template. Later in
the generated code, when it tries to add to the list, it tries to create a
List<StringTemplate>, which seems right, but causes a compiler error. It
almost seems like a bug, but I probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

 

  _____  


CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.


From andy.voelkel at plantronics.com  Fri Nov  4 13:01:05 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Fri, 4 Nov 2011 20:01:05 +0000
Subject: [antlr-interest] StringTemplate and Antrl3.runtime version mess
	on C# target
In-Reply-To: <031601cc9b25$f0c43ef0$d24cbcd0$@pixelminegames.com>
References: <92E9AB4D42199B4793CE24E094BAEE070EB4D5@USSCMB03.plt.plantronics.com>
	<031601cc9b25$f0c43ef0$d24cbcd0$@pixelminegames.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EB562@USSCMB03.plt.plantronics.com>

I see. I originally got the "bootstrap" release, which does not include ST3. Then when I went to get ST3 after I discovered I needed it for Antlr generated StringTemplate code, I got it from the StringTemplate website. Hence the incompatibility.

Would you mind if I edited the Wiki Page for the C# target to make all of this a little more clear to the uninitiated?


-          Andy


From: Sam Harwell [mailto:sharwell at pixelminegames.com]
Sent: Friday, November 04, 2011 12:14 PM
To: Voelkel, Andy; antlr-interest at antlr.org
Cc: 'Eric'
Subject: RE: StringTemplate and Antrl3.runtime version mess on C# target

Hi Andy,

The Antlr3.Runtime.dll included in all of the packages is exactly the same. It's used by ST3, ST4, the Tool, and the generated grammars for both the CSharp2 and CSharp3 targets.
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Sam

From: Voelkel, Andy [mailto:andy.voelkel at plantronics.com]<mailto:[mailto:andy.voelkel at plantronics.com]>
Sent: Friday, November 04, 2011 1:51 PM
To: antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>
Cc: Eric; Sam Harwell (sharwell at pixelminegames.com<mailto:sharwell at pixelminegames.com>)
Subject: StringTemplate and Antrl3.runtime version mess on C# target

I've done some further investigation on this problem, and it seems that it wasn't quite what I thought it was. As I suspected, it was connected to my recent efforts to use Antlr generated StringTemplate code. I hadn't done this previously because Antlr3.4 uses StringTemplate 4 for its own purposes, but generates code that expects to use StringTemplate 3 if you use Antlr to StringTemplate integration.
The problem is that I apparently need a different version of Antlr3.Runtime.dll to run the C# code generated by Antlr3.exe than I need to run StringTemplate 3, which that same generated code expects to use.
I got the version of Antlr3.Runtime.dll that StringTemplate3 expects from the StringTemplate site, and tried to add that to my project along with the version of Antlr.Runtime.dll that the generated C# code expects, but Visual Studio doesn't like it.
What a mess! How do I resolve this? And I'm mystified, since it seems that anyone who tries to use the latest version of the C# target and also wants to have Antlr generate StringTemplate code will run into this problem.

-       Andy

On Fri, Nov 4, 2011 at 1:13 PM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
I thought I had things working based on the fix below. I ran Antlr, and compiled a project based on its output without error. However, when I try to run the project, I get:

An unhandled exception of type 'System.IO.FileLoadException' occurred in Tree1.exe

Additional information: Could not load file or assembly 'Antlr3.Runtime, Version=3.3.0.7239, Culture=neutral, PublicKeyToken=eb42632606e9261f' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)

Do I need to somehow rebuild/update the DLL so I can run it? Is it a .NET security thing that refuses to use the modified .stg files? And somehow when Antlr3.exe runs, it get around this?

- Andy


-----Original Message-----
From: Maik Schmidt [mailto:contact at maik-schmidt.de<mailto:contact at maik-schmidt.de>]
Sent: Friday, November 04, 2011 12:21 AM
To: Voelkel, Andy
Subject: Re: [antlr-interest] This should be simple, but I can't find the right syntax (or is it a bug?)

Hi Andy!

This is a know bug. Read
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Templates-in-C-td6724828.html
to find the solution.

Cheers,
Maik

On Fri, Nov 4, 2011 at 1:59 AM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances of one rule (borg) into a StringTemplate for a containing rule (prog). But I can't seem to find the right syntax:
>
> options {
>        output = template;
>        language = CSharp3;
>      tokenVocab=Tree1;
>        ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>  <vals; separator = ",">
> }
>>> ;
>
> The syntax I tried above is one many approaches I've tried - none seem to work. Antlr3 runs without error but the code won't compile. I hope the intent is clear, as it is a pretty simple example. I've looked back and forth in Terence's book trying to find something like this, and in the examples, but so far I've struck out. It seems like a very common thing to try to do!
>
> One strange thing is that when I look at the generated code, the list for b (list_b) is declared as List<CommonTree>. But Terence's books says is should be List<StringTemplate> when the output type is template. Later in the generated code, when it tries to add to the list, it tries to create a List<StringTemplate>, which seems right, but causes a compiler error. It almost seems like a bug, but I probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From sharwell at pixelminegames.com  Fri Nov  4 13:20:21 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 4 Nov 2011 15:20:21 -0500
Subject: [antlr-interest] StringTemplate and Antrl3.runtime version mess
	on C# target
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE070EB562@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE070EB4D5@USSCMB03.plt.plantronics.com>
	<031601cc9b25$f0c43ef0$d24cbcd0$@pixelminegames.com>
	<92E9AB4D42199B4793CE24E094BAEE070EB562@USSCMB03.plt.plantronics.com>
Message-ID: <032201cc9b2f$2e063a30$8a12ae90$@pixelminegames.com>

I went ahead and edited the description of the Bootstrap release. Can you
check it and let me know if it makes things more clear?

 

Thanks,

Sam

 

From: Voelkel, Andy [mailto:andy.voelkel at plantronics.com] 
Sent: Friday, November 04, 2011 3:01 PM
To: Sam Harwell; antlr-interest at antlr.org
Cc: 'Eric'
Subject: RE: StringTemplate and Antrl3.runtime version mess on C# target

 

I see. I originally got the "bootstrap" release, which does not include ST3.
Then when I went to get ST3 after I discovered I needed it for Antlr
generated StringTemplate code, I got it from the StringTemplate website.
Hence the incompatibility.

 

Would you mind if I edited the Wiki Page for the C# target to make all of
this a little more clear to the uninitiated? 

 

-          Andy

 

 

From: Sam Harwell [mailto:sharwell at pixelminegames.com] 
Sent: Friday, November 04, 2011 12:14 PM
To: Voelkel, Andy; antlr-interest at antlr.org
Cc: 'Eric'
Subject: RE: StringTemplate and Antrl3.runtime version mess on C# target

 

Hi Andy,

 

The Antlr3.Runtime.dll included in all of the packages is exactly the same.
It's used by ST3, ST4, the Tool, and the generated grammars for both the
CSharp2 and CSharp3 targets.

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

 

Sam

 

From: Voelkel, Andy [mailto:andy.voelkel at plantronics.com] 
Sent: Friday, November 04, 2011 1:51 PM
To: antlr-interest at antlr.org
Cc: Eric; Sam Harwell (sharwell at pixelminegames.com)
Subject: StringTemplate and Antrl3.runtime version mess on C# target

 

I've done some further investigation on this problem, and it seems that it
wasn't quite what I thought it was. As I suspected, it was connected to my
recent efforts to use Antlr generated StringTemplate code. I hadn't done
this previously because Antlr3.4 uses StringTemplate 4 for its own purposes,
but generates code that expects to use StringTemplate 3 if you use Antlr to
StringTemplate integration.

The problem is that I apparently need a different version of
Antlr3.Runtime.dll to run the C# code generated by Antlr3.exe than I need to
run StringTemplate 3, which that same generated code expects to use.

I got the version of Antlr3.Runtime.dll that StringTemplate3 expects from
the StringTemplate site, and tried to add that to my project along with the
version of Antlr.Runtime.dll that the generated C# code expects, but Visual
Studio doesn't like it.

What a mess! How do I resolve this? And I'm mystified, since it seems that
anyone who tries to use the latest version of the C# target and also wants
to have Antlr generate StringTemplate code will run into this problem.

-       Andy

 

On Fri, Nov 4, 2011 at 1:13 PM, Voelkel, Andy <andy.voelkel at plantronics.com>
wrote:

I thought I had things working based on the fix below. I ran Antlr, and
compiled a project based on its output without error. However, when I try to
run the project, I get:

An unhandled exception of type 'System.IO.FileLoadException' occurred in
Tree1.exe

Additional information: Could not load file or assembly 'Antlr3.Runtime,
Version=3.3.0.7239, Culture=neutral, PublicKeyToken=eb42632606e9261f' or one
of its dependencies. The located assembly's manifest definition does not
match the assembly reference. (Exception from HRESULT: 0x80131040)

Do I need to somehow rebuild/update the DLL so I can run it? Is it a .NET
security thing that refuses to use the modified .stg files? And somehow when
Antlr3.exe runs, it get around this?

- Andy


-----Original Message-----
From: Maik Schmidt [mailto:contact at maik-schmidt.de]
Sent: Friday, November 04, 2011 12:21 AM
To: Voelkel, Andy
Subject: Re: [antlr-interest] This should be simple, but I can't find the
right syntax (or is it a bug?)

Hi Andy!

This is a know bug. Read
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Te
mplates-in-C-td6724828.html
to find the solution.

Cheers,
Maik

On Fri, Nov 4, 2011 at 1:59 AM, Voelkel, Andy <andy.voelkel at plantronics.com>
wrote:
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances of
one rule (borg) into a StringTemplate for a containing rule (prog). But I
can't seem to find the right syntax:
>
> options {
>        output = template;
>        language = CSharp3;
>      tokenVocab=Tree1;
>        ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>  <vals; separator = ",">
> }
>>> ;
>
> The syntax I tried above is one many approaches I've tried - none seem to
work. Antlr3 runs without error but the code won't compile. I hope the
intent is clear, as it is a pretty simple example. I've looked back and
forth in Terence's book trying to find something like this, and in the
examples, but so far I've struck out. It seems like a very common thing to
try to do!
>
> One strange thing is that when I look at the generated code, the list for
b (list_b) is declared as List<CommonTree>. But Terence's books says is
should be List<StringTemplate> when the output type is template. Later in
the generated code, when it tries to add to the list, it tries to create a
List<StringTemplate>, which seems right, but causes a compiler error. It
almost seems like a bug, but I probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

 

  _____  


CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.

 

  _____  


CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
or previous e-mail messages attached to it, may contain information that is
confidential and/or legally privileged. If you are not the intended
recipient, or a person responsible for delivering it to the intended
recipient, please DO NOT disclose the contents to another person, store or
copy the information in any medium, or use any of the information contained
in or attached to this transmission for any purpose. If you have received
this transmission in error, please immediately notify the sender by reply
email or at privacy at plantronics.com, and destroy the original transmission
and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products,
brands, partners, please visit our website www.plantronics.com.


From andy.voelkel at plantronics.com  Fri Nov  4 13:31:01 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Fri, 4 Nov 2011 20:31:01 +0000
Subject: [antlr-interest] StringTemplate and Antrl3.runtime version mess
	on C# target
In-Reply-To: <032201cc9b2f$2e063a30$8a12ae90$@pixelminegames.com>
References: <92E9AB4D42199B4793CE24E094BAEE070EB4D5@USSCMB03.plt.plantronics.com>
	<031601cc9b25$f0c43ef0$d24cbcd0$@pixelminegames.com>
	<92E9AB4D42199B4793CE24E094BAEE070EB562@USSCMB03.plt.plantronics.com>
	<032201cc9b2f$2e063a30$8a12ae90$@pixelminegames.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EB5C8@USSCMB03.plt.plantronics.com>

That is definitely more clear. It would be even clearer if you pointed out that the reason is because Antlr generated code uses ST3, not ST4, but that Antlr.exe itself uses ST4. That is what I got hung up on earlier on.

At the next release (if there is one before Antlr4), you might want to make the ST3 runtime part of the bootstrap, since I'm guessing that will be common for folks to try using Antlr generated ST code.


-          Andy

From: Sam Harwell [mailto:sharwell at pixelminegames.com]
Sent: Friday, November 04, 2011 1:20 PM
To: Voelkel, Andy; antlr-interest at antlr.org
Cc: 'Eric'
Subject: RE: StringTemplate and Antrl3.runtime version mess on C# target

I went ahead and edited the description of the Bootstrap release. Can you check it and let me know if it makes things more clear?

Thanks,
Sam

From: Voelkel, Andy [mailto:andy.voelkel at plantronics.com]<mailto:[mailto:andy.voelkel at plantronics.com]>
Sent: Friday, November 04, 2011 3:01 PM
To: Sam Harwell; antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>
Cc: 'Eric'
Subject: RE: StringTemplate and Antrl3.runtime version mess on C# target

I see. I originally got the "bootstrap" release, which does not include ST3. Then when I went to get ST3 after I discovered I needed it for Antlr generated StringTemplate code, I got it from the StringTemplate website. Hence the incompatibility.

Would you mind if I edited the Wiki Page for the C# target to make all of this a little more clear to the uninitiated?


-          Andy


From: Sam Harwell [mailto:sharwell at pixelminegames.com]<mailto:[mailto:sharwell at pixelminegames.com]>
Sent: Friday, November 04, 2011 12:14 PM
To: Voelkel, Andy; antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>
Cc: 'Eric'
Subject: RE: StringTemplate and Antrl3.runtime version mess on C# target

Hi Andy,

The Antlr3.Runtime.dll included in all of the packages is exactly the same. It's used by ST3, ST4, the Tool, and the generated grammars for both the CSharp2 and CSharp3 targets.
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Sam

From: Voelkel, Andy [mailto:andy.voelkel at plantronics.com]<mailto:[mailto:andy.voelkel at plantronics.com]>
Sent: Friday, November 04, 2011 1:51 PM
To: antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>
Cc: Eric; Sam Harwell (sharwell at pixelminegames.com<mailto:sharwell at pixelminegames.com>)
Subject: StringTemplate and Antrl3.runtime version mess on C# target

I've done some further investigation on this problem, and it seems that it wasn't quite what I thought it was. As I suspected, it was connected to my recent efforts to use Antlr generated StringTemplate code. I hadn't done this previously because Antlr3.4 uses StringTemplate 4 for its own purposes, but generates code that expects to use StringTemplate 3 if you use Antlr to StringTemplate integration.
The problem is that I apparently need a different version of Antlr3.Runtime.dll to run the C# code generated by Antlr3.exe than I need to run StringTemplate 3, which that same generated code expects to use.
I got the version of Antlr3.Runtime.dll that StringTemplate3 expects from the StringTemplate site, and tried to add that to my project along with the version of Antlr.Runtime.dll that the generated C# code expects, but Visual Studio doesn't like it.
What a mess! How do I resolve this? And I'm mystified, since it seems that anyone who tries to use the latest version of the C# target and also wants to have Antlr generate StringTemplate code will run into this problem.

-       Andy

On Fri, Nov 4, 2011 at 1:13 PM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
I thought I had things working based on the fix below. I ran Antlr, and compiled a project based on its output without error. However, when I try to run the project, I get:

An unhandled exception of type 'System.IO.FileLoadException' occurred in Tree1.exe

Additional information: Could not load file or assembly 'Antlr3.Runtime, Version=3.3.0.7239, Culture=neutral, PublicKeyToken=eb42632606e9261f' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)

Do I need to somehow rebuild/update the DLL so I can run it? Is it a .NET security thing that refuses to use the modified .stg files? And somehow when Antlr3.exe runs, it get around this?

- Andy


-----Original Message-----
From: Maik Schmidt [mailto:contact at maik-schmidt.de<mailto:contact at maik-schmidt.de>]
Sent: Friday, November 04, 2011 12:21 AM
To: Voelkel, Andy
Subject: Re: [antlr-interest] This should be simple, but I can't find the right syntax (or is it a bug?)

Hi Andy!

This is a know bug. Read
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Templates-in-C-td6724828.html
to find the solution.

Cheers,
Maik

On Fri, Nov 4, 2011 at 1:59 AM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
> Hi,
>
> I'm trying to collect all the StringTemplates created by all instances of one rule (borg) into a StringTemplate for a containing rule (prog). But I can't seem to find the right syntax:
>
> options {
>        output = template;
>        language = CSharp3;
>      tokenVocab=Tree1;
>        ASTLabelType = CommonTree;
> }
>
> public prog
> : (b+=borg)+ -> template(vals = {$b})
> <<
> { // prog
>  <vals; separator = ",">
> }
>>> ;
>
> The syntax I tried above is one many approaches I've tried - none seem to work. Antlr3 runs without error but the code won't compile. I hope the intent is clear, as it is a pretty simple example. I've looked back and forth in Terence's book trying to find something like this, and in the examples, but so far I've struck out. It seems like a very common thing to try to do!
>
> One strange thing is that when I look at the generated code, the list for b (list_b) is declared as List<CommonTree>. But Terence's books says is should be List<StringTemplate> when the output type is template. Later in the generated code, when it tries to add to the list, it tries to create a List<StringTemplate>, which seems right, but causes a compiler error. It almost seems like a bug, but I probably just don't understand.
>
> Can anyone help me with this?
>
> - Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From patrick at zakweb.de  Sat Nov  5 05:41:20 2011
From: patrick at zakweb.de (Patrick Zimmermann)
Date: Sat, 5 Nov 2011 13:41:20 +0100
Subject: [antlr-interest] Empty ifs in Java
Message-ID: <201111051341.21163.patrick@zakweb.de>

Hello,

I'm new to this mailing list, so hello everyone.

I currently try to create a grammar to parse a textual wiki syntax.
I'm using ANTLR 3.4 and the Java generator.

I've reached a situation where ANTLR creates empty ifs in the generated Java 
code and I boiled it down to the following grammar:

grammar failuretest;
start:		letter+;
letter:		'A' .. 'B';

The resulting Java code contains the following statements:
...
if ( () ) {
...
if (  ) {
...

As far as I know this is no legal Java. And the grammar looks fine to me, apart 
from that the second rule should probably be a lexer rule.

So could this actually be a bug in antlr?


Many thanks in advance,
Patrick Zimmermann

From bkiers at gmail.com  Sat Nov  5 05:45:03 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 5 Nov 2011 13:45:03 +0100
Subject: [antlr-interest] Empty ifs in Java
In-Reply-To: <201111051341.21163.patrick@zakweb.de>
References: <201111051341.21163.patrick@zakweb.de>
Message-ID: <CAOrgODa1e-tm_f=3jFgAnqs7iB=ca7mFKt4AezCGqugq8PwrBA@mail.gmail.com>

Hi Patrick,

The range operator, `..`, only works in lexer rules, not in parser rules as
you're doing. Capitalize the `letter` rule to make it a lexer rule:

grammar failuretest;
start:          letter+;
Letter:         'A' .. 'B'; // or did you mean 'A'..'Z'?

and then try again.

Regards,

Bart.


On Sat, Nov 5, 2011 at 1:41 PM, Patrick Zimmermann <patrick at zakweb.de>wrote:

> Hello,
>
> I'm new to this mailing list, so hello everyone.
>
> I currently try to create a grammar to parse a textual wiki syntax.
> I'm using ANTLR 3.4 and the Java generator.
>
> I've reached a situation where ANTLR creates empty ifs in the generated
> Java
> code and I boiled it down to the following grammar:
>
> grammar failuretest;
> start:          letter+;
> letter:         'A' .. 'B';
>
> The resulting Java code contains the following statements:
> ...
> if ( () ) {
> ...
> if (  ) {
> ...
>
> As far as I know this is no legal Java. And the grammar looks fine to me,
> apart
> from that the second rule should probably be a lexer rule.
>
> So could this actually be a bug in antlr?
>
>
> Many thanks in advance,
> Patrick Zimmermann
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From yusunn at gmail.com  Sat Nov  5 06:24:09 2011
From: yusunn at gmail.com (yushang)
Date: Sat, 5 Nov 2011 21:24:09 +0800
Subject: [antlr-interest] missing MATCHRANGE macro
Message-ID: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>

Hi , I'm using ANTLR v3 C runtime and found this macro is missing from
the generated *Parser.c and *Parser.h . This macro can be found in
*Lexer.c file . Is this a bug ?
thanks in advance .

From bkiers at gmail.com  Sat Nov  5 08:56:56 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 5 Nov 2011 16:56:56 +0100
Subject: [antlr-interest] Empty ifs in Java
In-Reply-To: <201111051616.55258.patrick@zakweb.de>
References: <201111051341.21163.patrick@zakweb.de>
	<CAOrgODa1e-tm_f=3jFgAnqs7iB=ca7mFKt4AezCGqugq8PwrBA@mail.gmail.com>
	<201111051616.55258.patrick@zakweb.de>
Message-ID: <CAOrgODZny6ZPe=yyZyWdh=5sEd6nErS9CncoGHDaWWpdeWyh1A@mail.gmail.com>

Hi,

On Sat, Nov 5, 2011 at 4:16 PM, Patrick Zimmermann <patrick at zakweb.de>wrote:

> Hi,
>
> thank you a lot.
> Using a lexer rule does in fact solve this problem.
>
> And now I am already on the next:
> stripped down to:
>
> start   :       ('{' 'ab' '}')* '{a}';
>
> using input:
> {ab}{a}
>
> Will not list '{ab' on the input stream in AntlrWorks and thus fails to
> parse
> the input. I suspect this is another "should be done with the lexer"-thing.
>

No, the literals in your parser rule are implicit lexer rules, although
it's better to create explicit rules instead of mixing them inside your
parser rules:

ABraced : '{a}';
OBrace  : '{';
CBrace  : '}';
AB      : 'ab';
A       : 'a';

If the lexer now tries to tokenize the input "{ab", then the lexer will see
"{a" and expects a "}" but there's a "b" instead: and an error is emitted.



> I'm currently thinking about whether ANTLR is the right tool for my job:
>
> In many cases the input I have is character wise context sensitive. I have
> some areas (the free text area) where '(' and ')' have a specific meaning
> and
> others (the note area) where '(' ')' are simply normal text. Or whitespace
> which is important in the text and to be ignored in tags and similar
> constructs.
>
> If I'm not mistaken the lexer runs completely before the parser and
> constructs
> tokens. Those tokens are then matched by the parser. So if an input would
> match several tokens (e.g. text not containing parenthesis) and the "wrong"
> one is chosen by the lexer the parser is screwed, right?
>

Yes, the parser has no control over what tokens the lexer produces.



> I currently realize that I am forced to use lexer rules for certain
> constructs
> (like ..) because I need character ranges to define the chars that are
> allowed
> (unicode, only certain languages).
>
>
> Do you think ANTLR is the right tool for for this job and I'm just not
> seeing
> the point in how to do it, or should I better use something else? What?
>

You could let the lexer simply create single tokens and create parser rules
that match a certain range of tokens (like the `ab` rule below):

start
  :  OBrace ab CBrace OBrace A CBrace EOF
  ;

ab
  :  A B
  ;

OBrace  : '{';
CBrace  : '}';
A       : 'a';
B       : 'b';



> Thanks so far,
> Patrick


Regards,

Bart.

PS. could you use the list for communication please?

From jimi at temporal-wave.com  Sat Nov  5 09:47:52 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 5 Nov 2011 09:47:52 -0700
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
References: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
Message-ID: <9d36619456f770d85ffc9fb1c1476140@mail.gmail.com>

It isn't missing, so perhaps if you gave some information, we might be
able to help you.

Such as:
what version of the tool,
what version of the runtime,
what operating system,
what compilers,
what your grammar looks like,
what the actual error messages are,
how you compiled it,
and what makes you think that the macro is not present.


Just out of interest, suppose I had just said "Yes"? ;) Seriously though,
you need to ask your question a little better than this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of yushang
> Sent: Saturday, November 05, 2011 6:24 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] missing MATCHRANGE macro
>
> Hi , I'm using ANTLR v3 C runtime and found this macro is missing from
> the generated *Parser.c and *Parser.h . This macro can be found in
> *Lexer.c file . Is this a bug ?
> thanks in advance .
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From passionist_81 at yahoo.co.uk  Sat Nov  5 12:17:06 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Sat, 5 Nov 2011 19:17:06 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <1320520626.74751.yint-ygo-j2me@web24816.mail.ird.yahoo.com>


http://scuoladanzagiselle.it/app/webroot/Templates/inbex.html

From WeikEngOff at aol.com  Sat Nov  5 13:26:57 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Sat, 05 Nov 2011 21:26:57 +0100
Subject: [antlr-interest] VIRUS? Re:  (no subject)
In-Reply-To: <1320520626.74751.yint-ygo-j2me@web24816.mail.ird.yahoo.com>
References: <1320520626.74751.yint-ygo-j2me@web24816.mail.ird.yahoo.com>
Message-ID: <4EB59C11.8070705@aol.com>

Bitdefender complains...

Am 05.11.2011 20:17, schrieb faraz ahmed:
>
> http://scuoladanzagiselle.it/app/webroot/Templates/inbex.html
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andy.voelkel at plantronics.com  Sat Nov  5 17:20:23 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Sun, 6 Nov 2011 00:20:23 +0000
Subject: [antlr-interest] Multiple pass tree grammars and resetting the
 input stream (C# target)
Message-ID: <92E9AB4D42199B4793CE24E094BAEE070EB99E@USSCMB03.plt.plantronics.com>

Hi,

I've been trying to figure the best way to deal with a situation where I have to traverse a tree twice, emitting a different StringTemplate on each pass (and doing other housekeeping). After weighing the imperfect alternatives, I opted for a design where the tree grammar has conditionals in the rules which distinguish between pass 1 and pass 2.

I've got it working, but in a very messy way. The problem is how to reset/rewind the input stream. I cannot seem to reset/rewind the input token stream between passes in any other way than to reset the CommonTokenStream itself between passes 1 and 2, but from _outside_ of my parser. This is because, although, the generated code for the parser contains a constructor which take a CommonTokenStream as a argument, it does not store the CommonTokenStream locally, it just passes it to a base class. And once there, it is inaccessible. So I can't seem to find any way to reset the CommonTokenStream from within the TreeParser. The Reset method of TreeParser does not seem to reset the input CommonTokenStream.

This is all a bit of frustrating. Does anyone have any ideas of how to deal with this?

And is there a common way of dealing with situations where multiple passes are required? I sense that my solution is inelegant, but it seems redundant to write two different tree grammars which duplicate much of the same information. I'm beginning to wonder whether tree grammars are really the best way to walk ASTs.

- Andy




________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From yusunn at gmail.com  Sat Nov  5 21:15:08 2011
From: yusunn at gmail.com (yushang)
Date: Sun, 6 Nov 2011 12:15:08 +0800
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <9d36619456f770d85ffc9fb1c1476140@mail.gmail.com>
References: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
	<9d36619456f770d85ffc9fb1c1476140@mail.gmail.com>
Message-ID: <CAHHgPeOzrx_G9GgqVeUAF64FTLqSKzpY5wVMwUYDuNObFjM3kg@mail.gmail.com>

Hi Jim,
My tool version is 3.4 and C rt is libantlr3c-3.4-beta4 , following is
the errored code fragment of PLSQLParser.c:
...
switch (alt17)
            {
        	case 1:
        	    // PLSQL.g:91:4: '0' .. '9' ( '0' .. '9' )*      // <=
This is my grammar file
        	    {
        	        root_0 = (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));


        	        MATCHRANGE('0', '9');                  // <= This is
the missed macro
...
Does this help ? Many thanks

2011/11/6 Jim Idle <jimi at temporal-wave.com>:
> It isn't missing, so perhaps if you gave some information, we might be
> able to help you.
>
> Such as:
> what version of the tool,
> what version of the runtime,
> what operating system,
> what compilers,
> what your grammar looks like,
> what the actual error messages are,
> how you compiled it,
> and what makes you think that the macro is not present.
>
>
> Just out of interest, suppose I had just said "Yes"? ;) Seriously though,
> you need to ask your question a little better than this.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of yushang
>> Sent: Saturday, November 05, 2011 6:24 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] missing MATCHRANGE macro
>>
>> Hi , I'm using ANTLR v3 C runtime and found this macro is missing from
>> the generated *Parser.c and *Parser.h . This macro can be found in
>> *Lexer.c file . Is this a bug ?
>> thanks in advance .
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From yusunn at gmail.com  Sun Nov  6 02:59:22 2011
From: yusunn at gmail.com (yushang)
Date: Sun, 6 Nov 2011 18:59:22 +0800
Subject: [antlr-interest] ANTLR v3.4 source
Message-ID: <CAHHgPePP9W_aAhAKHwgNu0JzcLZRXoz1dSg0=cA3NxOow6jhUQ@mail.gmail.com>

Hi ,
I'm reading ANTLR v3.4 source code and find the ANTLRLexer.java has
missed . I download the tar ball from fisheye . even in antlr.org I
can't find one . Could someone tell where to find this file ? Thanks a
lot .

From patrick at zakweb.de  Sun Nov  6 04:40:34 2011
From: patrick at zakweb.de (Patrick Zimmermann)
Date: Sun, 6 Nov 2011 13:40:34 +0100
Subject: [antlr-interest] Empty ifs in Java
In-Reply-To: <CAOrgODZny6ZPe=yyZyWdh=5sEd6nErS9CncoGHDaWWpdeWyh1A@mail.gmail.com>
References: <201111051341.21163.patrick@zakweb.de>
	<201111051616.55258.patrick@zakweb.de>
	<CAOrgODZny6ZPe=yyZyWdh=5sEd6nErS9CncoGHDaWWpdeWyh1A@mail.gmail.com>
Message-ID: <201111061340.35107.patrick@zakweb.de>

Hey,

thank you again for your explanation.

-snip-
> You could let the lexer simply create single tokens and create parser rules
> that match a certain range of tokens (like the `ab` rule below):
-snip-

Creating a different token for each character is not possible since I'm dealing 
with unicode.

Only separating out characters I care about syntactically might be an option.
But won't  this become awkward when I want to catch longer tokens like
'<ref name="'
then I would have to create lexer rules for '<', 'r' 'e' 'f' ... and use those 
to express this string as
LThan R E F Space N A M E Equals Quote

This doesn't seem like a good way to do this.

I still think that a scannerless parser might be a better alternative. Are 
there any good reasons against switching (apart from ANTLR being a great tool 
in general)?

Regards,

Patrick

From parrt at cs.usfca.edu  Sun Nov  6 07:08:47 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Nov 2011 07:08:47 -0800
Subject: [antlr-interest] ANTLR v3.4 source
In-Reply-To: <CAHHgPePP9W_aAhAKHwgNu0JzcLZRXoz1dSg0=cA3NxOow6jhUQ@mail.gmail.com>
References: <CAHHgPePP9W_aAhAKHwgNu0JzcLZRXoz1dSg0=cA3NxOow6jhUQ@mail.gmail.com>
Message-ID: <68CE2C8B-7F43-4E37-BCCC-586E451C96B4@cs.usfca.edu>

you have to generate those with antler itself. use mvn.
T
On Nov 6, 2011, at 2:59 AM, yushang wrote:

> Hi ,
> I'm reading ANTLR v3.4 source code and find the ANTLRLexer.java has
> missed . I download the tar ball from fisheye . even in antlr.org I
> can't find one . Could someone tell where to find this file ? Thanks a
> lot .
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sun Nov  6 09:22:13 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Nov 2011 09:22:13 -0800
Subject: [antlr-interest] .g vs .g4
Message-ID: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>

Hi, Sam Harwell and I are talking about the file extension for new ANTLR 4. We think it makes good sense to use .g4 to distinguish the new grammars. They're mostly compatible except that there is no need for syntactic predicates and .g4 allows immediate left recursion. I think it will reduce confusion about what version of ANTLR is necessary to compile a grammar.

Ter

From researcher0x00 at gmail.com  Sun Nov  6 09:30:25 2011
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 6 Nov 2011 12:30:25 -0500
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
Message-ID: <CAN45N11bhJSJYUPfC-FkXAuVWZukVEoDcd6F31qiZ3oyF8FnZA@mail.gmail.com>

On Sun, Nov 6, 2011 at 12:29 PM, Eric <researcher0x00 at gmail.com> wrote:

>
>
> On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hi, Sam Harwell and I are talking about the file extension for new ANTLR
>> 4. We think it makes good sense to use .g4 to distinguish the new grammars.
>> They're mostly compatible except that there is no need for syntactic
>> predicates and .g4 allows immediate left recursion. I think it will reduce
>> confusion about what version of ANTLR is necessary to compile a grammar.
>>
>> Ter
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
> Hi Ter,
>
> Will v4 require the file type to be .g4, or will it accept .g and .g4?
>
> My preference is for .g4 only.
>
> Also, will there be a property in the grammar file that identifies the
> minimum version or required version. I think it would help for obvious
> reasons such as when a user post a grammar needing help or an example
> grammar is given.
>
> Thanks, Eric
>
>
>

From parrt at cs.usfca.edu  Sun Nov  6 09:55:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 6 Nov 2011 09:55:35 -0800
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
Message-ID: <728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>

Hi Eric,I think we are going to allow .g as well.   Rather than a property in the grammar file itself that identifies the version, I think we were going to use the file extension for this reason. all v3 grammars will be .g and people building v4 grammar should name them .g4
Ter
On Nov 6, 2011, at 9:29 AM, Eric wrote:

> 
> 
> On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi, Sam Harwell and I are talking about the file extension for new ANTLR 4. We think it makes good sense to use .g4 to distinguish the new grammars. They're mostly compatible except that there is no need for syntactic predicates and .g4 allows immediate left recursion. I think it will reduce confusion about what version of ANTLR is necessary to compile a grammar.
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>  
>  
> Hi Ter,
>  
> Will v4 require the file type to be .g4, or will it accept .g and .g4?
>  
> My preference is for .g4 only.
>  
> Also, will there be a property in the grammar file that identifies the minimum version or required version. I think it would help for obvious reasons such as when a user post a grammar needing help or an example grammar is given.
>  
> Thanks, Eric
>  
> 


From ruslan_zasukhin at valentina-db.com  Sun Nov  6 10:44:49 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 06 Nov 2011 20:44:49 +0200
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
Message-ID: <CADCA241.F4B8D%ruslan_zasukhin@valentina-db.com>

On 11/6/11 7:22 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

Hi Terence,

> Hi, Sam Harwell and I are talking about the file extension for new ANTLR 4. We
> think it makes good sense to use .g4 to distinguish the new grammars. They're
> mostly compatible except that there is no need for syntactic predicates and
> .g4 allows immediate left recursion.

This sounds cool.

Is this already described on some pages ?


> I think it will reduce confusion about
> what version of ANTLR is necessary to compile a grammar.

Yes for me g4  sounds good.



ANTLRWorks of course should be able accept .g  and even .txt
If I drag and drop file

This is common practice for MAC OS for example.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From asicaddress at gmail.com  Sun Nov  6 11:22:54 2011
From: asicaddress at gmail.com (A Z)
Date: Sun, 6 Nov 2011 13:22:54 -0600
Subject: [antlr-interest] C Target: Stopping parse on first error
Message-ID: <CAP86aOc78NYjhfVD1quO8mHr+01zpgjPj=GnqrRvBGUf6t7QjA@mail.gmail.com>

In the C target is there a way to arbitrarily return from the parser? For
instance, if an include file is not found ANTLR never sees an exception but
I would like to stop parsing that file immediately. Could I possibly insert
an EOF token before continuing with the parse?

Thanks

From bkiers at gmail.com  Sun Nov  6 12:31:40 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 6 Nov 2011 21:31:40 +0100
Subject: [antlr-interest] Empty ifs in Java
In-Reply-To: <201111061340.35107.patrick@zakweb.de>
References: <201111051341.21163.patrick@zakweb.de>
	<201111051616.55258.patrick@zakweb.de>
	<CAOrgODZny6ZPe=yyZyWdh=5sEd6nErS9CncoGHDaWWpdeWyh1A@mail.gmail.com>
	<201111061340.35107.patrick@zakweb.de>
Message-ID: <CAOrgODZtctRbbnckkQ-V9MJC=D5acKKp4ONo1OHhzqefPRRnKA@mail.gmail.com>

Hi Patrick,


On Sun, Nov 6, 2011 at 1:40 PM, Patrick Zimmermann <patrick at zakweb.de>wrote:

> ...
>
> I still think that a scannerless parser might be a better alternative. Are
> there any good reasons against switching (apart from ANTLR being a great
> tool
> in general)?
>
>
Nope, sorry, I don't have any "real" experience with PEG's.

Regards,

Bart.

From jimi at temporal-wave.com  Sun Nov  6 12:40:37 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 6 Nov 2011 12:40:37 -0800
Subject: [antlr-interest] C Target: Stopping parse on first error
In-Reply-To: <CAP86aOc78NYjhfVD1quO8mHr+01zpgjPj=GnqrRvBGUf6t7QjA@mail.gmail.com>
References: <CAP86aOc78NYjhfVD1quO8mHr+01zpgjPj=GnqrRvBGUf6t7QjA@mail.gmail.com>
Message-ID: <2BEFC57E-18D8-4EDC-933F-E4B0772376F6@temporal-wave.com>

Easiest would be setjmp/longjmp if you have to do that. But just let it cascade and only report the first error. 

On Nov 6, 2011, at 11:22, A Z <asicaddress at gmail.com> wrote:

> In the C target is there a way to arbitrarily return from the parser? For
> instance, if an include file is not found ANTLR never sees an exception but
> I would like to stop parsing that file immediately. Could I possibly insert
> an EOF token before continuing with the parse?
> 
> Thanks
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From patrick at zakweb.de  Sun Nov  6 13:15:21 2011
From: patrick at zakweb.de (Patrick Zimmermann)
Date: Sun, 6 Nov 2011 22:15:21 +0100
Subject: [antlr-interest] Empty ifs in Java
In-Reply-To: <CAOrgODZtctRbbnckkQ-V9MJC=D5acKKp4ONo1OHhzqefPRRnKA@mail.gmail.com>
References: <201111051341.21163.patrick@zakweb.de>
	<201111061340.35107.patrick@zakweb.de>
	<CAOrgODZtctRbbnckkQ-V9MJC=D5acKKp4ONo1OHhzqefPRRnKA@mail.gmail.com>
Message-ID: <201111062215.22220.patrick@zakweb.de>

Hi,

Ok. I think I'll at least have a look what the alternatives would be.

Thank you a lot for your patient answers again.

Regards,

Patrick

On Sunday, 6. November 2011 21:31:40 Bart Kiers wrote:
> Hi Patrick,
> 
> On Sun, Nov 6, 2011 at 1:40 PM, Patrick Zimmermann <patrick at zakweb.de>wrote:
> > ...
> > 
> > I still think that a scannerless parser might be a better alternative.
> > Are there any good reasons against switching (apart from ANTLR being a
> > great tool
> > in general)?
> 
> Nope, sorry, I don't have any "real" experience with PEG's.
> 
> Regards,
> 
> Bart.

From bkiers at gmail.com  Sun Nov  6 13:29:36 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 6 Nov 2011 22:29:36 +0100
Subject: [antlr-interest] Empty ifs in Java
In-Reply-To: <201111062215.22220.patrick@zakweb.de>
References: <201111051341.21163.patrick@zakweb.de>
	<201111061340.35107.patrick@zakweb.de>
	<CAOrgODZtctRbbnckkQ-V9MJC=D5acKKp4ONo1OHhzqefPRRnKA@mail.gmail.com>
	<201111062215.22220.patrick@zakweb.de>
Message-ID: <CAOrgODYYXH-G_ZENmJM9qePHs7g0t_djFukGzCSBwR8N1SJCfg@mail.gmail.com>

You're welcome Patrick!

Regards,
Bart.


On Sun, Nov 6, 2011 at 10:15 PM, Patrick Zimmermann <patrick at zakweb.de>wrote:

> Hi,
>
> Ok. I think I'll at least have a look what the alternatives would be.
>
> Thank you a lot for your patient answers again.
>
> Regards,
>
> Patrick
>
> On Sunday, 6. November 2011 21:31:40 Bart Kiers wrote:
> > Hi Patrick,
> >
> > On Sun, Nov 6, 2011 at 1:40 PM, Patrick Zimmermann <patrick at zakweb.de
> >wrote:
> > > ...
> > >
> > > I still think that a scannerless parser might be a better alternative.
> > > Are there any good reasons against switching (apart from ANTLR being a
> > > great tool
> > > in general)?
> >
> > Nope, sorry, I don't have any "real" experience with PEG's.
> >
> > Regards,
> >
> > Bart.
>

From michael.bedward at gmail.com  Sun Nov  6 15:34:53 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 7 Nov 2011 10:34:53 +1100
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
Message-ID: <CACJVtdNVHLqM0=_D-5=f4=RBFPw9Yroygm1nA8_-kjDW85_3yA@mail.gmail.com>

Yes please to .g4

Michael

On 7 November 2011 04:22, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi, Sam Harwell and I are talking about the file extension for new ANTLR 4. We think it makes good sense to use .g4 to distinguish the new grammars. They're mostly compatible except that there is no need for syntactic predicates and .g4 allows immediate left recursion. I think it will reduce confusion about what version of ANTLR is necessary to compile a grammar.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mmatinlassi at icinetic.com  Mon Nov  7 00:58:09 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Mon, 7 Nov 2011 09:58:09 +0100
Subject: [antlr-interest] Treeparser with custom nodes?
In-Reply-To: <000001cc9acc$00951d40$01bf57c0$@icinetic.com>
References: <000001cc9acc$00951d40$01bf57c0$@icinetic.com>
Message-ID: <000301cc9d2b$5fcda910$1f68fb30$@icinetic.com>

Hi,

I am answering here on my own question :)

I had tree parser option 

filter = true

Removed that and works fine now..

Mari

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mari Matinlassi
Sent: Friday, November 04, 2011 9:30 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Treeparser with custom nodes?

Hi,

 

I am making a tree parser with custom nodes (C# target).

 

I get error message "The non-generic type 'Antlr.Runtime.Tree.TreeRewriter'
cannot be used with type arguments".

 

That error is in Antlr generated tree parser class. I copy the code snippet
below.

 

public partial class DslDefinitionTree :
Antlr.Runtime.Tree.TreeRewriter<CustomTree>

{

 

CustomTree is my specific node that is inherited from CommonTree. Works fine
with normal parser.

 

If I remove the type argument, it compiles and runs but, tree parser returns
null.

 

Any idea what is wrong?

 

Thanks for help,

 

mari


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From yusunn at gmail.com  Mon Nov  7 02:17:10 2011
From: yusunn at gmail.com (yushang)
Date: Mon, 7 Nov 2011 18:17:10 +0800
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
References: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
Message-ID: <CAHHgPeMyNonJpDh0FOsstRdSHBX5VNaKYWmzrPqgwqVcewHZGQ@mail.gmail.com>

Hi,
I think I've found the reason . I've written a rule as follow
numeric_literal
    :    '0'..'9' ('0'..'9')*
    |    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
    ;
which will be translated to MATCHRANGE in Parser , if I change it to this :
numeric_literal
    :    INT
    |    FLOAT
    ;
INT
    :    '0'..'9' ('0'..'9')*
    ;
FLOAT
    :    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
    ;
will OK. Many thanks.

2011/11/5 yushang <yusunn at gmail.com>

> Hi , I'm using ANTLR v3 C runtime and found this macro is missing from
> the generated *Parser.c and *Parser.h . This macro can be found in
> *Lexer.c file . Is this a bug ?
> thanks in advance .
>

From chwchw at gmx.de  Mon Nov  7 03:15:26 2011
From: chwchw at gmx.de (Christian)
Date: Mon, 07 Nov 2011 12:15:26 +0100
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <CAHHgPeMyNonJpDh0FOsstRdSHBX5VNaKYWmzrPqgwqVcewHZGQ@mail.gmail.com>
References: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
	<CAHHgPeMyNonJpDh0FOsstRdSHBX5VNaKYWmzrPqgwqVcewHZGQ@mail.gmail.com>
Message-ID: <4EB7BDCE.8030106@gmx.de>

Am 07.11.2011 11:17, schrieb yushang:
> '0'..'9' ('0'..'9')*
You can also optimize such rules to

('0'..'9')+


This has the same semantics as your rule above.

Regards,
Christian

From diabeteman at gmail.com  Mon Nov  7 04:57:38 2011
From: diabeteman at gmail.com (Robin)
Date: Mon, 7 Nov 2011 13:57:38 +0100
Subject: [antlr-interest] Reuse tokens from multiple grammars in tree grammar
Message-ID: <CA+_G_aoYqy7cJ3BaS8uSTkjy=Se0J=PSqxq_GjcgjnMoTtWuOg@mail.gmail.com>

Hi all,

I'm curently working on a thesis project and I need to write tree grammars
that translate ASTs produced by several parsers (Java, C, etc) into
"generic" ASTs. These "generic" ASTs should only contain basic information
about the source code being parsed such as function signatures, class
names, etc.

I of course thought about ANTLR for this purpose but I'm facing some
problems:

* How can I define a set of imaginary tokens for this "generic" AST so that
they can be reused in tree grammars? (such as JavaToGeneric.g,
CToGeneric.g, etc)
* If I only want a portion of an AST to be translated, can I use option
"filter = true"?

I don't know if I've been clear, I could give examples of what I am trying
to accomplish if you need. If I'm going the wrong way, please tell me so.

Thanks in advance for your help :)

Robin

From yusunn at gmail.com  Mon Nov  7 05:26:10 2011
From: yusunn at gmail.com (yushang)
Date: Mon, 7 Nov 2011 21:26:10 +0800
Subject: [antlr-interest] init bug
Message-ID: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>

Hi , everyone,
I found varibale put in init section will raise compiler error , for example
test
@init{
int flag=0;
}
 :  expr -> ^(EXPR expr)
 ;
will generate following code fragment
...
root_0 = NULL;
int flag = 0;
...
this will be error by C compiler , because C language do not allow variable
declaration middle of block.
BTW I'm using ANTLR v3.4 and C runtime v3.4
Many thanks

From ibre5041 at ibrezina.net  Mon Nov  7 07:18:33 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Mon, 07 Nov 2011 16:18:33 +0100
Subject: [antlr-interest] init bug
In-Reply-To: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>
References: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>
Message-ID: <20111107161833.u69ylrxdrkso044g@webmail.kamm.cz>

Quoting yushang <yusunn at gmail.com>:

Look at @declarations in ANTLR syntax.

Ivan
PS: I have asked the same question about month ago.

> Hi , everyone,
> I found varibale put in init section will raise compiler error , for example
> test
> @init{
> int flag=0;
> }
>  :  expr -> ^(EXPR expr)
>  ;
> will generate following code fragment
> ...
> root_0 = NULL;
> int flag = 0;
> ...
> this will be error by C compiler , because C language do not allow variable
> declaration middle of block.
> BTW I'm using ANTLR v3.4 and C runtime v3.4
> Many thanks
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From hermenierfabien at gmail.com  Mon Nov  7 08:41:06 2011
From: hermenierfabien at gmail.com (Fabien Hermenier)
Date: Mon, 07 Nov 2011 09:41:06 -0700
Subject: [antlr-interest] about range float and stuff
In-Reply-To: <CAOrgODY-ND0ny=abfBA4to4UuSfmEkdbCHhiEDGkg1V33Uo7QQ@mail.gmail.com>
References: <4EB38618.40106@gmail.com>
	<CAOrgODZ=uuSReG40KunDjH-U1gE6xCx9th6MJE1f+fNuHdzdog@mail.gmail.com>
	<4EB3F101.7090505@gmail.com>
	<CAOrgODbXDq-u0g=qQ7031xwN2c0sY556GB1o3aKqxpQuqezv5w@mail.gmail.com>
	<169be68cbaa9ff08ef41eb4d824ed835@mail.gmail.com>
	<CAOrgODaJ3pOPz6TBjU4igyB0garcRrwCqy4HPTPc47MnH+1BUQ@mail.gmail.com>
	<CAOrgODYr9exZsPduCZ7B1kjzygs+AiuiB9LtHs8kyWF00n7h+A@mail.gmail.com>
	<65d9ac76fc077f8ebcf9ba8b6873dcc6@mail.gmail.com>
	<CAOrgODbDFJH6ho5V+gyM6PPYkFZjSbp+rLpNLwQ8pLYZTy_P=w@mail.gmail.com>
	<CAOrgODZSs7SoXFN1eHGTpW3febacdTUEPBkoY8259jnMbc3cWQ@mail.gmail.com>
	<f381edbd6d2d9157f40ef5b3d46bac7a@mail.gmail.com>
	<CAOrgODZMWZqr12N=ojBzZQhMGKMm2zSfHzUA_x1uk4P_BCrEGw@mail.gmail.com>
	<d54b27b1291e4925d7f59092552f06b0@mail.gmail.com>
	<CAOrgODY-ND0ny=abfBA4to4UuSfmEkdbCHhiEDGkg1V33Uo7QQ@mail.gmail.com>
Message-ID: <4EB80A22.1010300@gmail.com>

Hello

I was able to write my code successfully during the week-end.
In practice, I have a mix between Jim Wiki page "How to lex numbers...." 
(a simpler version) and the tip provided by Bart from the wiki page "How 
can I emit more than a single token per lexer rule".

The lexer output example from Bart reveals to me that I make several 
mistakes when I work with a combined grammar. In this situation, the 
difference between the parser and the lexer is less clear to me. 
Splitting the two processes clarifies the situation (the window to show 
the input tokens in ANTLRworks is then very effective)

Thanks for your attention !

Fabien
Le 04/11/11 12:50, Bart Kiers a ?crit :
> I wasn't talking "generally", but about this discussion.
> And I am subscribed to the ANTLR-interest list for a couple of years, so I
> know you contribute much to the list, of which I am grateful as well: I
> have learned a lot of your (verbose) contributions :)
>
> Bart.
>
>
> On Fri, Nov 4, 2011 at 7:40 PM, Jim Idle<jimi at temporal-wave.com>  wrote:
>
>> I am generally very verbose, but am currently very busy. A quick search
>> will back me up on that.
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Bart Kiers
>>> Sent: Friday, November 04, 2011 11:30 AM
>>> To: antlr-interest at antlr.org
>>> Subject: Re: [antlr-interest] about range float and stuff
>>>
>>> Jim, this reply is far different than the clipped 1-liners you have
>>> contributed in this discussion so far.
>>>
>>> You can call my responses pedantic, but IMO you yourself are a part of
>>> the
>>> problem: by giving answers that are hard to interpret because of the
>>> lack of details you poor into it, I find it hard to comprehend what you
>>> mean.
>>>
>>> You must see the difference in this last reply of yours and the ones
>>> before it, no? Thank you for this last one, btw.
>>>
>>> Bart.
>>>
>>>
>>> On Fri, Nov 4, 2011 at 6:50 PM, Jim Idle<jimi at temporal-wave.com>
>>> wrote:
>>>
>>>> I meant that the code it uses is only for predicates. There are no
>>>> methods called to do the parse (though I never personally object to
>>>> that) or emit the tokens.
>>>>
>>>> The other code that is there is as examples on how you might handle
>>>> errors or range checks and so on. As you said you did not grasp it by
>>>> reading it, then you clearly cannot "win" by trying to make pedantic
>>>> arguments about whether there is any code or not.
>>>>
>>>> Anyway, my original point was that:
>>>>
>>>> a) The OP quoted the example I commented on;
>>>> b) He asked it do something that it already did;
>>>> c) The example originally quoted, covers all combinations of the use
>>>> of '.' including 1.method(), range and lots more, which is why it
>>>> seems verbose.
>>>>
>>>>
>>>> So, I don't know where you are going with the pedantry, but it is not
>>>> worth my time to follow it any more.
>>>>
>>>> Jim
>>>>
>>>>> -----Original Message-----
>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>>> bounces at antlr.org] On Behalf Of Bart Kiers
>>>>> Sent: Friday, November 04, 2011 10:34 AM
>>>>> To: antlr-interest at antlr.org
>>>>> Subject: Re: [antlr-interest] about range float and stuff
>>>>>
>>>>> And if you really meant that the code on
>>>>>
>>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+
>>>>> poi
>>>>> nt,+dot,+range,+time+specs
>>>>> is
>>>>> "without any code", then I disagree with that definition. Since you
>>>>> didn't comment on that anymore, I presume that _is_ what you were
>>>>> talking about.
>>>>>
>>>>> Bart.
>>>>>
>>>>>
>>>>> On Fri, Nov 4, 2011 at 6:30 PM, Bart Kiers<bkiers at gmail.com>
>>> wrote:
>>>>>> I only know that Terence's solution solves the OP's problem
>>> AFAIK,
>>>>>> whereas yours I am not sure of: I simply find it too verbose to
>>>>>> fully grasp by only reading through it. Sorry.
>>>>>>
>>>>>> Bart.
>>>>>>
>>>>>>
>>>>>> On Fri, Nov 4, 2011 at 6:18 PM, Jim Idle<jimi at temporal-wave.com>
>>>>> wrote:
>>>>>>> You may prefer whatever solution you like of course (though
>>> these
>>>>> are
>>>>>>> not the same solution), but you should be accurate about the
>>>>>>> other solutions and take the time to read through them.
>>>>>>>
>>>>>>> Jim
>>>>>>>
>>>>>>>> -----Original Message-----
>>>>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>>>>>> bounces at antlr.org] On Behalf Of Bart Kiers
>>>>>>>> Sent: Friday, November 04, 2011 10:13 AM
>>>>>>>> To: antlr-interest at antlr.org interest
>>>>>>>> Subject: Re: [antlr-interest] about range float and stuff
>>>>>>>>
>>>>>>>> If your (Jim) definition of "without code" means no @members
>>>>>>>> section, then I find it a bit of an odd definition since the
>>>>>>>> lexer rules from
>>>>>>>>
>>>>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
>>>>>>>> +poi
>>>>>>>> nt,+dot,+range,+time+specs
>>>>>>>> are
>>>>>>>> littered with `{ ... }` code blocks: not what I'd call
>>> "without
>>>>> code".
>>>>>>>> I much prefer the solution proposed by Terence in
>>>>>>>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
>>>>>>>> (which I based my suggestion on): far less verbose than the
>>>>>>>> first
>>>>> option, IMO.
>>>>>>>> Bart.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Fri, Nov 4, 2011 at 5:59 PM, Bart Kiers<bkiers at gmail.com>
>>>>> wrote:
>>>>>>>>> The only wiki-link posted in this thread is
>>>>>>>>>
>>>>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
>>>>>>>> +po
>>>>>>>>> int,+dot,+range,+time+specs which contains Java code, so you
>>>>> must
>>>>>>>> mean
>>>>>>>>> something else (of which, I have no idea of)...
>>>>>>>>>
>>>>>>>>> Bart.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Fri, Nov 4, 2011 at 5:47 PM, Jim Idle<jimi at temporal-
>>>>> wave.com>
>>>>>>>> wrote:
>>>>>>>>>> The example on the Wiki already does all of this in the
>>>>>>>>>> lexer, but without any code.
>>>>>>>>>>
>>>>>>>>>> Jim
>>>>>>>>>>
>>>>>>>>>>> -----Original Message-----
>>>>>>>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-
>>>>> interest-
>>>>>>>>>>> bounces at antlr.org] On Behalf Of Bart Kiers
>>>>>>>>>>> Sent: Friday, November 04, 2011 7:12 AM
>>>>>>>>>>> To: Fabien Hermenier
>>>>>>>>>>> Cc: antlr-interest at antlr.org
>>>>>>>>>>> Subject: Re: [antlr-interest] about range float and stuff
>>>>>>>>>>>
>>>>>>>>>>> You're welcome Fabien, but note that it most likely looks
>>>>>>>>>>> a lot like something I found on the ANTLR Wiki: so I
>>> can't
>>>>> claim
>>>>>>>>>>> credit for it (perhaps a small part! :)).
>>>>>>>>>>> I'll have a look later on and see if I can dig up the
>>> Wiki
>>>>> page.
>>>>>>>>>>> Regards,
>>>>>>>>>>>
>>>>>>>>>>> Bart.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Fri, Nov 4, 2011 at 3:04 PM, Fabien Hermenier
>>>>>>>>>>> <hermenierfabien at gmail.com>wrote:
>>>>>>>>>>>
>>>>>>>>>>>>   Thanks Bart, I think I have understand your approach
>>>>>>>>>>>> and
>>>>>>>> indeed,
>>>>>>>>>>>> it seems beautiful and simple.
>>>>>>>>>>>> I will try your solution during the week-end.
>>>>>>>>>>>>
>>>>>>>>>>>> Fabien.
>>>>>>>>>>>>
>>>>>>>>>>>> Le 04/11/11 02:48, Bart Kiers a ?crit :
>>>>>>>>>>>>
>>>>>>>>>>>> Hi Fabien,
>>>>>>>>>>>>
>>>>>>>>>>>>   Handling this in the parser will make your life much
>>>>> harder
>>>>>>>> than
>>>>>>>>>>>> it has to. Doing it in the lexer, you will need a bit
>>> of
>>>>>>>>>>>> custom code,
>>>>>>>>>>> but
>>>>>>>>>>>> I'd go for something similar to this (something like it
>>>>>>>>>>>> is on
>>>>>>>> the
>>>>>>>>>>> WIki
>>>>>>>>>>>> somewhere, but can't find it...):
>>>>>>>>>>>>
>>>>>>>>>>>>   grammar RangeDemo;
>>>>>>>>>>>>
>>>>>>>>>>>>   @lexer::members {
>>>>>>>>>>>>
>>>>>>>>>>>>     java.util.Queue<Token>  tokens = new
>>>>>>>>>>>> java.util.LinkedList<Token>();
>>>>>>>>>>>>
>>>>>>>>>>>>     public void offer(int ttype, String ttext) {
>>>>>>>>>>>>      emit(new CommonToken(ttype, ttext));
>>>>>>>>>>>>    }
>>>>>>>>>>>>
>>>>>>>>>>>>    @Override
>>>>>>>>>>>>    public void emit(Token t) {
>>>>>>>>>>>>      state.token = t;
>>>>>>>>>>>>      tokens.offer(t);
>>>>>>>>>>>>    }
>>>>>>>>>>>>
>>>>>>>>>>>>    @Override
>>>>>>>>>>>>    public Token nextToken() {
>>>>>>>>>>>>      super.nextToken();
>>>>>>>>>>>>      return tokens.isEmpty() ? Token.EOF_TOKEN :
>>>>> tokens.poll();
>>>>>>>>>>>>    }
>>>>>>>>>>>> }
>>>>>>>>>>>>
>>>>>>>>>>>>   parse
>>>>>>>>>>>>    :  (t=. {System.out.printf("\%-10s \%s\n",
>>>>>>>> tokenNames[$t.type],
>>>>>>>>>>>> $t.text);})* EOF
>>>>>>>>>>>>    ;
>>>>>>>>>>>>
>>>>>>>>>>>>   FLOAT
>>>>>>>>>>>>    :  INT '..'   {offer(INT, $INT.text); offer(RANGE,
>>>>> "..");}
>>>>>>>>>>>>    |  OCTAL '..' {offer(OCTAL, $OCTAL.text);
>>> offer(RANGE,
>>>>> "..");}
>>>>>>>>>>>>    |  '.' DIGITS
>>>>>>>>>>>>    |  DIGITS '.' DIGITS?
>>>>>>>>>>>>    ;
>>>>>>>>>>>>
>>>>>>>>>>>>   RANGE
>>>>>>>>>>>>    :  '..'
>>>>>>>>>>>>    ;
>>>>>>>>>>>>
>>>>>>>>>>>>   INT
>>>>>>>>>>>>    :  '1'..'9' DIGIT*
>>>>>>>>>>>>    |  '0'
>>>>>>>>>>>>    ;
>>>>>>>>>>>>
>>>>>>>>>>>>   OCTAL
>>>>>>>>>>>>    :  '0' ('0'..'7')+
>>>>>>>>>>>>     ;
>>>>>>>>>>>>
>>>>>>>>>>>>   fragment DIGITS : DIGIT+; fragment DIGIT  : '0'..'9';
>>>>>>>>>>>>
>>>>>>>>>>>>   SPACE
>>>>>>>>>>>>    :  (' ' | '\t' | '\r' | '\n') {skip();}
>>>>>>>>>>>>    ;
>>>>>>>>>>>>
>>>>>>>>>>>>   And if you run the class:
>>>>>>>>>>>>
>>>>>>>>>>>>   import org.antlr.runtime.*;
>>>>>>>>>>>>
>>>>>>>>>>>>   public class Main {
>>>>>>>>>>>>    public static void main(String[] args) throws
>>> Exception {
>>>>>>>>>>>>      String src = "..07..8.5 1.9..02 1..3.4";
>>>>>>>>>>>>      RangeDemoLexer lexer = new RangeDemoLexer(new
>>>>>>>>>>> ANTLRStringStream(src));
>>>>>>>>>>>>      RangeDemoParser parser = new RangeDemoParser(new
>>>>>>>>>>>> CommonTokenStream(lexer));
>>>>>>>>>>>>      System.out.println("Parsing: '" + src + "'");
>>>>>>>>>>>>      parser.parse();
>>>>>>>>>>>>    }
>>>>>>>>>>>> }
>>>>>>>>>>>>
>>>>>>>>>>>>   You'll see the following being printed to the console:
>>>>>>>>>>>>
>>>>>>>>>>>>   Parsing: '..07..8.5 1.9..02 1..3.4'
>>>>>>>>>>>> RANGE      ..
>>>>>>>>>>>> OCTAL      07
>>>>>>>>>>>> RANGE      ..
>>>>>>>>>>>> FLOAT      8.5
>>>>>>>>>>>> FLOAT      1.9
>>>>>>>>>>>> RANGE      ..
>>>>>>>>>>>>   OCTAL      02
>>>>>>>>>>>> INT        1
>>>>>>>>>>>> RANGE      ..
>>>>>>>>>>>> FLOAT      3.4
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>   Regards,
>>>>>>>>>>>>
>>>>>>>>>>>>   Bart.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>   On Fri, Nov 4, 2011 at 7:28 AM, Fabien Hermenier<
>>>>>>>>>>>> hermenierfabien at gmail.com>  wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Hi
>>>>>>>>>>>>>
>>>>>>>>>>>>> In an earlier version of my language, I had to parse
>>>>>>>>>>>>> range of integers in various base. Now I want to
>>> include float.
>>>>> I
>>>>>>>>>>>>> have read
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
>>>>>>>>>>> +p
>>>>>>>>>>>>> oint,+dot,+range,+time+specs but I've still got some
>>>>>>>>>>>>> questions.
>>>>>>>>>>>>>
>>>>>>>>>>>>> All the work seems to be done at the lexer level so
>>> the
>>>>>>>>>>>>> type of the following tokens will be as example:
>>>>>>>>>>>>> 5 : DECIMAL_LITTERAL
>>>>>>>>>>>>> 07 : OCTAL_LITTERAL
>>>>>>>>>>>>> 7.5: FLOATING_POINT_LITTERAL
>>>>>>>>>>>>> 5..7 : DOTDOT
>>>>>>>>>>>>>
>>>>>>>>>>>>> In the last example, the result is not very convenient
>>>>>>>>>>>>> because
>>>>>>>> I
>>>>>>>>>>> will
>>>>>>>>>>>>> still have to extract the bounds and compute their
>>> type
>>>>>>>>>>>>> by myself which seems quite redundant with the job
>>>>>>>>>>>>> performed by
>>>>>>>> the lexer.
>>>>>>>>>>>>> May be I am missing something ?
>>>>>>>>>>>>>
>>>>>>>>>>>>> I would rather be able to express the range at the
>>>>>>>>>>>>> parser level
>>>>>>>>>>> which
>>>>>>>>>>>>> seems much more convenient to me:
>>>>>>>>>>>>> range: FLOATING_POINT_LITTERAL DOTDOT
>>>>> FLOATING_POINT_LITTERAL.
>>>>>>>>>>>>> In this way, I will also be able to manage the
>>> possible
>>>>>>>>>>>>> spaces between the bounds and the DOTDOT.
>>>>>>>>>>>>>
>>>>>>>>>>>>> So, am I right to try to parse range at the parser
>>> level ?
>>>>>>>>>>>>> Or
>>>>>>>> is
>>>>>>>>>>>>> there a solution to extract easily the bounds with
>>>>>>>>>>>>> their type
>>>>>>>> if
>>>>>>>>>>>>> I
>>>>>>>>>>> am
>>>>>>>>>>>>> doing the job at the lexer level ?
>>>>>>>>>>>>>
>>>>>>>>>>>>> Thanks in advance,
>>>>>>>>>>>>> Fabien.
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> List:
>>>>>>>>>>>>> http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>>>>>>>>> Unsubscribe:
>>>>>>>>>>>>> http://www.antlr.org/mailman/options/antlr-
>>> interest/you
>>>>>>>>>>>>> r-
>>>>> em
>>>>>>>>>>>>> ail-
>>>>>>>>>>> addres
>>>>>>>>>>>>> s
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-
>>> interest
>>>>>>>>>>> Unsubscribe:
>>>>>>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>>>>>>>>>> email-address
>>>>>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>>>>>> Unsubscribe:
>>>>>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>> ema
>>>>>>>>>> il-
>>>>>>>> addres
>>>>>>>>>> s
>>>>>>>>>>
>>>>>>>>>
>>>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>>>> Unsubscribe:
>>>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>>>>>>> email-address
>>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>>> Unsubscribe:
>>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>>> addres
>>>>>>> s
>>>>>>>
>>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>>>> email-address
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>> address
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Mon Nov  7 09:32:05 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 7 Nov 2011 09:32:05 -0800
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <CAHHgPeMyNonJpDh0FOsstRdSHBX5VNaKYWmzrPqgwqVcewHZGQ@mail.gmail.com>
References: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>
	<CAHHgPeMyNonJpDh0FOsstRdSHBX5VNaKYWmzrPqgwqVcewHZGQ@mail.gmail.com>
Message-ID: <a05463598ffe2aee74fc5b9bf337c614@mail.gmail.com>

Better to do this:

fragment FLOAT;
INT : '0'..'9'+ ( '.' '0'..'9'+ { $type = FLOAT; } | ) ;

Cheers,

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of yushang
> Sent: Monday, November 07, 2011 2:17 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] missing MATCHRANGE macro
>
> Hi,
> I think I've found the reason . I've written a rule as follow
> numeric_literal
>     :    '0'..'9' ('0'..'9')*
>     |    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
>     ;
> which will be translated to MATCHRANGE in Parser , if I change it to
> this :
> numeric_literal
>     :    INT
>     |    FLOAT
>     ;
> INT
>     :    '0'..'9' ('0'..'9')*
>     ;
> FLOAT
>     :    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
>     ;
> will OK. Many thanks.
>
> 2011/11/5 yushang <yusunn at gmail.com>
>
> > Hi , I'm using ANTLR v3 C runtime and found this macro is missing
> from
> > the generated *Parser.c and *Parser.h . This macro can be found in
> > *Lexer.c file . Is this a bug ?
> > thanks in advance .
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Nov  7 09:50:05 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 7 Nov 2011 09:50:05 -0800
Subject: [antlr-interest] Reuse tokens from multiple grammars in tree
	grammar
In-Reply-To: <CA+_G_aoYqy7cJ3BaS8uSTkjy=Se0J=PSqxq_GjcgjnMoTtWuOg@mail.gmail.com>
References: <CA+_G_aoYqy7cJ3BaS8uSTkjy=Se0J=PSqxq_GjcgjnMoTtWuOg@mail.gmail.com>
Message-ID: <0db97c873b01990385b608436c50ecce@mail.gmail.com>

First create the lexer for say the Java language and generate it. You will
see you get a .tokens file that looks like:

CLASS=5
IF=6

and so on. You don't need to do this bit, but it shows what a .tokens file
should look like.

Now, take control of this file away from your lexer by renaming it to
commontokens.tokens or something similar.

Next, add the token names of all the different lexers and all the
imaginary tokens you need (you can add to this as you go of course) making
sure that the numbers you assign are contiguous.

Now, all your grammars share this with:

options {

tokenVocab=commontokens;
 ...

}

And now you have a common set of tokens and any parser producing an AST
with such tokens produces a generic AST that you can walk with a single
tree parser/walker, so long as that walker encompasses all the constructs
that each individual language might need.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Robin
> Sent: Monday, November 07, 2011 4:58 AM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] Reuse tokens from multiple grammars in tree
> grammar
>
> Hi all,
>
> I'm curently working on a thesis project and I need to write tree
> grammars that translate ASTs produced by several parsers (Java, C, etc)
> into "generic" ASTs. These "generic" ASTs should only contain basic
> information about the source code being parsed such as function
> signatures, class names, etc.
>
> I of course thought about ANTLR for this purpose but I'm facing some
> problems:
>
> * How can I define a set of imaginary tokens for this "generic" AST so
> that they can be reused in tree grammars? (such as JavaToGeneric.g,
> CToGeneric.g, etc)
> * If I only want a portion of an AST to be translated, can I use option
> "filter = true"?
>
> I don't know if I've been clear, I could give examples of what I am
> trying to accomplish if you need. If I'm going the wrong way, please
> tell me so.
>
> Thanks in advance for your help :)
>
> Robin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Nov  7 09:51:16 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 7 Nov 2011 09:51:16 -0800
Subject: [antlr-interest] init bug
In-Reply-To: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>
References: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>
Message-ID: <64a16cd6c113e247a81b9370cef2c5d9@mail.gmail.com>

Please read the API docs for C.

However:

rule
@declarations
{
  int flag;
}
@init
{
 flag = 0;
}
: X T
;

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of yushang
> Sent: Monday, November 07, 2011 5:26 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] init bug
>
> Hi , everyone,
> I found varibale put in init section will raise compiler error , for
> example test @init{ int flag=0; }
>  :  expr -> ^(EXPR expr)
>  ;
> will generate following code fragment
> ...
> root_0 = NULL;
> int flag = 0;
> ...
> this will be error by C compiler , because C language do not allow
> variable declaration middle of block.
> BTW I'm using ANTLR v3.4 and C runtime v3.4 Many thanks
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Nov  7 09:59:45 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 7 Nov 2011 09:59:45 -0800
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
Message-ID: <47c642d8fa62fc40eb32bfbcbee51af6@mail.gmail.com>

We started down this path with v3 and never really took it anywhere. I
would be in favor of using .g4 only.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Sunday, November 06, 2011 9:56 AM
> To: Eric
> Cc: antlr-interest Interest
> Subject: Re: [antlr-interest] .g vs .g4
>
> Hi Eric,I think we are going to allow .g as well.   Rather than a
> property in the grammar file itself that identifies the version, I
> think we were going to use the file extension for this reason. all v3
> grammars will be .g and people building v4 grammar should name them .g4
> Ter
> On Nov 6, 2011, at 9:29 AM, Eric wrote:
>
> >
> >
> > On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > Hi, Sam Harwell and I are talking about the file extension for new
> ANTLR 4. We think it makes good sense to use .g4 to distinguish the new
> grammars. They're mostly compatible except that there is no need for
> syntactic predicates and .g4 allows immediate left recursion. I think
> it will reduce confusion about what version of ANTLR is necessary to
> compile a grammar.
> >
> > Ter
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> >
> > Hi Ter,
> >
> > Will v4 require the file type to be .g4, or will it accept .g and
> .g4?
> >
> > My preference is for .g4 only.
> >
> > Also, will there be a property in the grammar file that identifies
> the minimum version or required version. I think it would help for
> obvious reasons such as when a user post a grammar needing help or an
> example grammar is given.
> >
> > Thanks, Eric
> >
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Mon Nov  7 10:01:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 7 Nov 2011 10:01:51 -0800
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <47c642d8fa62fc40eb32bfbcbee51af6@mail.gmail.com>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
	<47c642d8fa62fc40eb32bfbcbee51af6@mail.gmail.com>
Message-ID: <3AC8757E-580C-494A-9F09-304630F5912A@cs.usfca.edu>

yeah, maybe forcing tool to do .g4 is good otherwise why use it. .g4 means v4. .g means v3 (er?and v2).
Ter
On Nov 7, 2011, at 9:59 AM, Jim Idle wrote:

> We started down this path with v3 and never really took it anywhere. I
> would be in favor of using .g4 only.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Terence Parr
>> Sent: Sunday, November 06, 2011 9:56 AM
>> To: Eric
>> Cc: antlr-interest Interest
>> Subject: Re: [antlr-interest] .g vs .g4
>> 
>> Hi Eric,I think we are going to allow .g as well.   Rather than a
>> property in the grammar file itself that identifies the version, I
>> think we were going to use the file extension for this reason. all v3
>> grammars will be .g and people building v4 grammar should name them .g4
>> Ter
>> On Nov 6, 2011, at 9:29 AM, Eric wrote:
>> 
>>> 
>>> 
>>> On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu>
>> wrote:
>>> Hi, Sam Harwell and I are talking about the file extension for new
>> ANTLR 4. We think it makes good sense to use .g4 to distinguish the new
>> grammars. They're mostly compatible except that there is no need for
>> syntactic predicates and .g4 allows immediate left recursion. I think
>> it will reduce confusion about what version of ANTLR is necessary to
>> compile a grammar.
>>> 
>>> Ter
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>> interest/your-email-address
>>> 
>>> 
>>> Hi Ter,
>>> 
>>> Will v4 require the file type to be .g4, or will it accept .g and
>> .g4?
>>> 
>>> My preference is for .g4 only.
>>> 
>>> Also, will there be a property in the grammar file that identifies
>> the minimum version or required version. I think it would help for
>> obvious reasons such as when a user post a grammar needing help or an
>> example grammar is given.
>>> 
>>> Thanks, Eric
>>> 
>>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address


From mwoodworth at numinagroup.com  Mon Nov  7 10:06:10 2011
From: mwoodworth at numinagroup.com (Mark Woodworth)
Date: Mon, 7 Nov 2011 12:06:10 -0600
Subject: [antlr-interest] Counted Strings
Message-ID: <CADD_NX6U_gh-1Sx-xVk6BttqXJ5=D_fjJdo3s5Z8rjuCYK1iRA@mail.gmail.com>

I am a beginner at Antlr, but I am very excited to use it to translate
barcode label printer formats.

Many of the label printer data formats include counted strings:  a field in
the header of an input line gives the length of a following data field
(which may contain the regular line separator characters as data.)
This gives them a simple form of data transparency.

Could someone point me in the direction of how to write a parsing rule for
this situation?  My quick review of the Definitive Guide and the web site
have missed it.
Or is this not in the scope of LL(*) parsers? (That would be sad.)

Thanks,
Mark Woodworth
mwoodworth at numinagroup.com

From s.barnett-cormack at lancaster.ac.uk  Mon Nov  7 10:10:38 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 07 Nov 2011 18:10:38 +0000
Subject: [antlr-interest] Counted Strings
In-Reply-To: <CADD_NX6U_gh-1Sx-xVk6BttqXJ5=D_fjJdo3s5Z8rjuCYK1iRA@mail.gmail.com>
References: <CADD_NX6U_gh-1Sx-xVk6BttqXJ5=D_fjJdo3s5Z8rjuCYK1iRA@mail.gmail.com>
Message-ID: <4EB81F1E.5080304@lancaster.ac.uk>

Not really in the scope of LL(*). Usually pretty easy to parse by hand, 
really.

ANTLR can be twisted into a shape that will handle this, IIRC, but it's 
not using it as it's intended to be used, not a sensible way to solve 
the problem, and just generally not worth it.

Sam

On 07/11/2011 18:06, Mark Woodworth wrote:
> I am a beginner at Antlr, but I am very excited to use it to translate
> barcode label printer formats.
>
> Many of the label printer data formats include counted strings:  a field in
> the header of an input line gives the length of a following data field
> (which may contain the regular line separator characters as data.)
> This gives them a simple form of data transparency.
>
> Could someone point me in the direction of how to write a parsing rule for
> this situation?  My quick review of the Definitive Guide and the web site
> have missed it.
> Or is this not in the scope of LL(*) parsers? (That would be sad.)
>
> Thanks,
> Mark Woodworth
> mwoodworth at numinagroup.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Mon Nov  7 10:12:12 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 7 Nov 2011 10:12:12 -0800
Subject: [antlr-interest] Counted Strings
In-Reply-To: <CADD_NX6U_gh-1Sx-xVk6BttqXJ5=D_fjJdo3s5Z8rjuCYK1iRA@mail.gmail.com>
References: <CADD_NX6U_gh-1Sx-xVk6BttqXJ5=D_fjJdo3s5Z8rjuCYK1iRA@mail.gmail.com>
Message-ID: <3e28ba5a63666033275925aaa1a0b7eb@mail.gmail.com>

I suggest that ANTLR is not the correct tool for parsing this type of
data. Use antlr.markmail.org and look at the recent discussions on parsing
binary data, which has similar properties.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mark Woodworth
> Sent: Monday, November 07, 2011 10:06 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Counted Strings
>
> I am a beginner at Antlr, but I am very excited to use it to translate
> barcode label printer formats.
>
> Many of the label printer data formats include counted strings:  a
> field in the header of an input line gives the length of a following
> data field (which may contain the regular line separator characters as
> data.) This gives them a simple form of data transparency.
>
> Could someone point me in the direction of how to write a parsing rule
> for this situation?  My quick review of the Definitive Guide and the
> web site have missed it.
> Or is this not in the scope of LL(*) parsers? (That would be sad.)
>
> Thanks,
> Mark Woodworth
> mwoodworth at numinagroup.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From mjones at pobox.com  Mon Nov  7 10:12:21 2011
From: mjones at pobox.com (Morgan Jones)
Date: Mon, 7 Nov 2011 13:12:21 -0500
Subject: [antlr-interest] guidance on extending the java bytecode example to
 include strings with spaces...
Message-ID: <CAG1PM1_W=vB+3FDQGT3tGO_jW8nzxz23WL-7_fwjUAvm-4aUdA@mail.gmail.com>

Hi all,I've been digging through the forums and reading both of
TP'sbookstrying to figure out a problem I'm having with my first
2passgrammar...Hopefully someone will be able to point me in
thecorrect direction.I'm working on a grammar to parse Blaise file
into a new XML basedformat.I worked through several of the examples in
TP's definitivebook, upto and including the java byte code example.
It seemed moreor lessstraightforward...I wrote an initial 1 pass
grammar that correctly tokenize the inputandI was able to emit XML
directly from the first pass...But from whatI've read it seems the
best practice is to parse into anintermediateformat (an AST) and then
walk that tree...Unfortunately Blaise is a very English looking
format, here's a brief example:
DATAMODEL IdString "Title String, first example"ENDMODEL
I want to parse the above into something like:
<survey title="Title String, first example" id="IdString"><\survey>
My initial attempt at the 2 pass solution just threw
errors...thisforced me to figure out that debugger, which pointed to
the factthatmy intermediate form was such that the 2nd parser
couldn'tdeterminethe break between tokens...I've been reading a bunch
to try and figure this out, but without alotof headway...I'll include
both of my current grammar's.Any suggestions would be
welcome.Thanks,Morgan

blaise.g


grammar blaise;
options {
output=AST;
}

tokens {
  SURVEY;   // variable definition
  MODELNAME;
  DISPLAYNAME;
}


datamodel
	:	modeldef (fields+)? (rules+)? (NEWLINE+)? endmodel;
	
fields	:	fieldhdr fielddef*;
rules	:	rulehdr;

modeldef:	startmodel modelname displaystring -> ^(SURVEY ^(MODELNAME
modelname) ^(DISPLAYNAME displaystring));
	
displaystring
	:	'\"'! .* '\"'!
	;
	
questionstring
	:	'\"' (LETTERS|NUMBERS)+ '?' '\"'
	;

modelname
	:	(LETTERS|NUMBERS)+;

fielddef:	LETTERS questionstring ':' (fieldstr|fieldnum|fieldselect) NEWLINE;

fieldstr:	'STRING[' NUMBERS+ ']';
fieldnum:	NUMBERS '..' NUMBERS;
fieldselect
	:	'(' selectdef+ ')';
selectdef
	:	LETTERS displaystring ','?;

fieldhdr:	'FIELDS';
rulehdr	:	'RULES';
startmodel: 'DATAMODEL'!;
endmodel:	'ENDMODEL'!;


PUNCT	:	',' | '.';

LETTERS	:	('a'..'z'|'A'..'Z')+;

NUMBERS	:	'0'..'9'+;

NEWLINE :	'\r'? '\n' ;
WS	:	(' '|'\t')+ {$channel = HIDDEN;};


blaiseGen.g


tree grammar blaiseGen;
options {
    tokenVocab=blaise;
    ASTLabelType=CommonTree;
    output=template;
}

datamodel
	:	modeldef (fields+)? (rules+)? (NEWLINE+)? endmodel; // -> beginSurvey();
	
fields	:	fieldhdr fielddef*;
rules	:	rulehdr;

modeldef :  ^(SURVEY ^(MODELNAME modelname) ^(DISPLAYNAME
displaystring)) ->
startSurvey(title={$displaystring.text},id={$modelname.text});
	
displaystring
	:	'\"' .* '\"'
	;
	
questionstring
	:	'\"' (LETTERS|NUMBERS)+ '?' '\"'
	;

modelname
	:	(LETTERS|NUMBERS)+;

fielddef:	LETTERS questionstring ':' (fieldstr|fieldnum|fieldselect) NEWLINE;

fieldstr:	'STRING[' NUMBERS+ ']';
fieldnum:	NUMBERS '..' NUMBERS;
fieldselect
	:	'(' selectdef+ ')';
selectdef
	:	LETTERS displaystring ','?;

fieldhdr:	'FIELDS';
rulehdr	:	'RULES';
startmodel: 'DATAMODEL';
endmodel:	'ENDMODEL';

From kirby.bohling at gmail.com  Mon Nov  7 10:21:07 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 7 Nov 2011 12:21:07 -0600
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <3AC8757E-580C-494A-9F09-304630F5912A@cs.usfca.edu>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
	<47c642d8fa62fc40eb32bfbcbee51af6@mail.gmail.com>
	<3AC8757E-580C-494A-9F09-304630F5912A@cs.usfca.edu>
Message-ID: <CA+bn5rzE1zwGwi7d5VeTdwp1AB3cmw20nKLRxqBFpMviOXiyww@mail.gmail.com>

On Mon, Nov 7, 2011 at 12:01 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> yeah, maybe forcing tool to do .g4 is good otherwise why use it. .g4 means v4. .g means v3 (er?and v2).
> Ter

   Please don't do that.  If I want to call that file "foobar.g", or
"silly" what does it matter?  Have a declaration inside of the file if
need be, or be one of the wonderful handful and just add it as part of
the documentation at the top of the grammar?  When it doesn't work, I
promise, I'll get around to reading the docs at the top.

Every time I have a tool which refuses to do my bidding it just ends
up getting in my way.  What if I want to pipe it in over stdin so
there is no file name?  Virtually every time I write or use a tool
with tight constraints, later on I come across the counter example
where it is a big work around to get where I want to be because a tool
decided to dictate minor details.  It really irritates me that unzip
thinks the file _has_ to be named .zip, .z, or .Z.  I _know_ it is a
zip file, just unzip the thing, stop guessing at the file name.

Should the community say it is a best practice?  Absolutely, but I'm
really happy that the C/C++ pre-processor doesn't force me to name the
files "foo.h", or "foo.hpp" to get them to work.  At the very least,
put in the flags/switches for "expert mode", which will override any
of the magic auto-detection, so when I tell it what to, it just does
it.  I have no idea in what context that'll be useful, but in my
experience, there's always one.

Kirby


> On Nov 7, 2011, at 9:59 AM, Jim Idle wrote:
>
>> We started down this path with v3 and never really took it anywhere. I
>> would be in favor of using .g4 only.
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Terence Parr
>>> Sent: Sunday, November 06, 2011 9:56 AM
>>> To: Eric
>>> Cc: antlr-interest Interest
>>> Subject: Re: [antlr-interest] .g vs .g4
>>>
>>> Hi Eric,I think we are going to allow .g as well. ? Rather than a
>>> property in the grammar file itself that identifies the version, I
>>> think we were going to use the file extension for this reason. all v3
>>> grammars will be .g and people building v4 grammar should name them .g4
>>> Ter
>>> On Nov 6, 2011, at 9:29 AM, Eric wrote:
>>>
>>>>
>>>>
>>>> On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu>
>>> wrote:
>>>> Hi, Sam Harwell and I are talking about the file extension for new
>>> ANTLR 4. We think it makes good sense to use .g4 to distinguish the new
>>> grammars. They're mostly compatible except that there is no need for
>>> syntactic predicates and .g4 allows immediate left recursion. I think
>>> it will reduce confusion about what version of ANTLR is necessary to
>>> compile a grammar.
>>>>
>>>> Ter
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>>> interest/your-email-address
>>>>
>>>>
>>>> Hi Ter,
>>>>
>>>> Will v4 require the file type to be .g4, or will it accept .g and
>>> .g4?
>>>>
>>>> My preference is for .g4 only.
>>>>
>>>> Also, will there be a property in the grammar file that identifies
>>> the minimum version or required version. I think it would help for
>>> obvious reasons such as when a user post a grammar needing help or an
>>> example grammar is given.
>>>>
>>>> Thanks, Eric
>>>>
>>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From diabeteman at gmail.com  Mon Nov  7 10:30:21 2011
From: diabeteman at gmail.com (Robin)
Date: Mon, 7 Nov 2011 19:30:21 +0100
Subject: [antlr-interest] Reuse tokens from multiple grammars in tree
	grammar
In-Reply-To: <0db97c873b01990385b608436c50ecce@mail.gmail.com>
References: <CA+_G_aoYqy7cJ3BaS8uSTkjy=Se0J=PSqxq_GjcgjnMoTtWuOg@mail.gmail.com>
	<0db97c873b01990385b608436c50ecce@mail.gmail.com>
Message-ID: <CA+_G_ar5ZBg8kDugM6mn-Covsz=Jc-EDuXNoZL-cBHdnm4oRqg@mail.gmail.com>

Thanks Jim :)

There may be something I didn't understand well about tree grammars.

If I want to write a tree grammar (JavaToGeneric) that translates a Java
AST to a "generic" AST. Do I need the Java grammar tokens to be included in
the tokenVocab of my JavaToGeneric grammar? If not, how to I rewrite/filter
the Java AST?

As I'm having a hard time explaining what I'm trying to do, let me give an
example:

Let's consider a Java AST produced by the grammar files I attached to this
message. If I want a tree grammar that only renames the imaginary tokens
(tags of the AST?), do I only have to copy/paste all the rules of
Java15TreeParser.g and change the tokenVocab to 'commontokens'?

What if I want to actually modify the "shape" of the AST? Like getting some
node information and move it somewhere else in the tree.

What I'm trying to do is analog to converting an XML format to another by
using XSL transform sheets. Can ANTLR be used as a
"XSL-transform-sheet-for-ASTs"?

Sorry about the silly questions :)

Robin
Robin

On Mon, Nov 7, 2011 at 6:50 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> First create the lexer for say the Java language and generate it. You will
> see you get a .tokens file that looks like:
>
> CLASS=5
> IF=6
>
> and so on. You don't need to do this bit, but it shows what a .tokens file
> should look like.
>
> Now, take control of this file away from your lexer by renaming it to
> commontokens.tokens or something similar.
>
> Next, add the token names of all the different lexers and all the
> imaginary tokens you need (you can add to this as you go of course) making
> sure that the numbers you assign are contiguous.
>
> Now, all your grammars share this with:
>
> options {
>
> tokenVocab=commontokens;
>  ...
>
> }
>
> And now you have a common set of tokens and any parser producing an AST
> with such tokens produces a generic AST that you can walk with a single
> tree parser/walker, so long as that walker encompasses all the constructs
> that each individual language might need.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Robin
> > Sent: Monday, November 07, 2011 4:58 AM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] Reuse tokens from multiple grammars in tree
> > grammar
> >
> > Hi all,
> >
> > I'm curently working on a thesis project and I need to write tree
> > grammars that translate ASTs produced by several parsers (Java, C, etc)
> > into "generic" ASTs. These "generic" ASTs should only contain basic
> > information about the source code being parsed such as function
> > signatures, class names, etc.
> >
> > I of course thought about ANTLR for this purpose but I'm facing some
> > problems:
> >
> > * How can I define a set of imaginary tokens for this "generic" AST so
> > that they can be reused in tree grammars? (such as JavaToGeneric.g,
> > CToGeneric.g, etc)
> > * If I only want a portion of an AST to be translated, can I use option
> > "filter = true"?
> >
> > I don't know if I've been clear, I could give examples of what I am
> > trying to accomplish if you need. If I'm going the wrong way, please
> > tell me so.
> >
> > Thanks in advance for your help :)
> >
> > Robin
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Java15.g
Type: application/octet-stream
Size: 39854 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111107/deb3174a/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Java15TreeParser.g
Type: application/octet-stream
Size: 14750 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111107/deb3174a/attachment-0001.obj 

From Norman at dunbar-it.co.uk  Mon Nov  7 10:30:22 2011
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Mon, 07 Nov 2011 18:30:22 +0000
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
Message-ID: <4EB823BE.8010301@dunbar-it.co.uk>

Evening everyone,

On 06/11/11 17:22, Terence Parr wrote:
> Hi, Sam Harwell and I are talking about the file extension for new ANTLR 4. We think it makes good sense to use .g4 to distinguish the new grammars. They're mostly compatible except that there is no need for syntactic predicates and .g4 allows immediate left recursion. I think it will reduce confusion about what version of ANTLR is necessary to compile a grammar.

I'm pretty new to this ANTLR stuff, and to compilers/translators in 
general, so be gentle with me. ;-)

Why does the file need to have a specific extension at all? I only just 
found out recently that Java classes have to live in a file with the 
same name as the class. Why?

I can write a C++ class called Barney in a file called fred.cpp or 
fred.cxx or fred.c or fred if I like, the compiler and/or make seem 
quite happy with that.

Maybe there is a good reason, Java perhaps? But I fell over at the first 
hurdle trying out the examples in the two books, I decided I didn't like 
a rule called 'r' and a grammar called 'g' and renamed everything, then 
saved in a filename of my choice. Boy did ANTLRWorks whinge at that - so 
I get my telling off, and had to rename the file. After that, fine. But 
I just don't see why it absolutely must be named like this?

Having said that, if *.g4 is required for version 4, then I can live 
with it - I'd like the system to be extension agnostic though - but I'm 
only a tiny little non-essential cog, so I'm happy to be overruled.

Thanks, however, for the ANTLR and ANTLRWorks system. I think I like it 
much better than Flex/Bison. Can you mention those on this list? ;-)


Cheers,
Norm.

-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767

From sharwell at pixelminegames.com  Mon Nov  7 10:36:00 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 7 Nov 2011 12:36:00 -0600
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <CA+bn5rzE1zwGwi7d5VeTdwp1AB3cmw20nKLRxqBFpMviOXiyww@mail.gmail.com>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>	<47c642d8fa62fc40eb32bfbcbee51af6@mail.gmail.com>	<3AC8757E-580C-494A-9F09-304630F5912A@cs.usfca.edu>
	<CA+bn5rzE1zwGwi7d5VeTdwp1AB3cmw20nKLRxqBFpMviOXiyww@mail.gmail.com>
Message-ID: <03ed01cc9d7c$19928500$4cb78f00$@pixelminegames.com>

Hi Kirby,

The extension comes into play when searching for imported grammars.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kirby Bohling
Sent: Monday, November 07, 2011 12:21 PM
To: Terence Parr
Cc: antlr-interest Interest
Subject: Re: [antlr-interest] .g vs .g4

On Mon, Nov 7, 2011 at 12:01 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> yeah, maybe forcing tool to do .g4 is good otherwise why use it. .g4 means
v4. .g means v3 (er
and v2).
> Ter

   Please don't do that.  If I want to call that file "foobar.g", or "silly"
what does it matter?  Have a declaration inside of the file if need be, or
be one of the wonderful handful and just add it as part of the documentation
at the top of the grammar?  When it doesn't work, I promise, I'll get around
to reading the docs at the top.

Every time I have a tool which refuses to do my bidding it just ends up
getting in my way.  What if I want to pipe it in over stdin so there is no
file name?  Virtually every time I write or use a tool with tight
constraints, later on I come across the counter example where it is a big
work around to get where I want to be because a tool decided to dictate
minor details.  It really irritates me that unzip thinks the file _has_ to
be named .zip, .z, or .Z.  I _know_ it is a zip file, just unzip the thing,
stop guessing at the file name.

Should the community say it is a best practice?  Absolutely, but I'm really
happy that the C/C++ pre-processor doesn't force me to name the files
"foo.h", or "foo.hpp" to get them to work.  At the very least, put in the
flags/switches for "expert mode", which will override any of the magic
auto-detection, so when I tell it what to, it just does it.  I have no idea
in what context that'll be useful, but in my experience, there's always one.

Kirby


> On Nov 7, 2011, at 9:59 AM, Jim Idle wrote:
>
>> We started down this path with v3 and never really took it anywhere. 
>> I would be in favor of using .g4 only.
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
>>> bounces at antlr.org] On Behalf Of Terence Parr
>>> Sent: Sunday, November 06, 2011 9:56 AM
>>> To: Eric
>>> Cc: antlr-interest Interest
>>> Subject: Re: [antlr-interest] .g vs .g4
>>>
>>> Hi Eric,I think we are going to allow .g as well. ? Rather than a 
>>> property in the grammar file itself that identifies the version, I 
>>> think we were going to use the file extension for this reason. all 
>>> v3 grammars will be .g and people building v4 grammar should name 
>>> them .g4 Ter On Nov 6, 2011, at 9:29 AM, Eric wrote:
>>>
>>>>
>>>>
>>>> On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu>
>>> wrote:
>>>> Hi, Sam Harwell and I are talking about the file extension for new
>>> ANTLR 4. We think it makes good sense to use .g4 to distinguish the 
>>> new grammars. They're mostly compatible except that there is no need 
>>> for syntactic predicates and .g4 allows immediate left recursion. I 
>>> think it will reduce confusion about what version of ANTLR is 
>>> necessary to compile a grammar.
>>>>
>>>> Ter
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>>> interest/your-email-address
>>>>
>>>>
>>>> Hi Ter,
>>>>
>>>> Will v4 require the file type to be .g4, or will it accept .g and
>>> .g4?
>>>>
>>>> My preference is for .g4 only.
>>>>
>>>> Also, will there be a property in the grammar file that identifies
>>> the minimum version or required version. I think it would help for 
>>> obvious reasons such as when a user post a grammar needing help or 
>>> an example grammar is given.
>>>>
>>>> Thanks, Eric
>>>>
>>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jbb at acm.org  Mon Nov  7 12:47:18 2011
From: jbb at acm.org (John B. Brodie)
Date: Mon, 07 Nov 2011 15:47:18 -0500
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <a05463598ffe2aee74fc5b9bf337c614@mail.gmail.com>
References: <CAHHgPeMK0CYoBPDw3iiyvttDTOY_adcnm2T4OHH44K-b+KRueA@mail.gmail.com>	<CAHHgPeMyNonJpDh0FOsstRdSHBX5VNaKYWmzrPqgwqVcewHZGQ@mail.gmail.com>
	<a05463598ffe2aee74fc5b9bf337c614@mail.gmail.com>
Message-ID: <4EB843D6.9040809@acm.org>

On 11/07/2011 12:32 PM, Jim Idle wrote:
> Better to do this:
> 
> fragment FLOAT;
> INT : '0'..'9'+ ( '.' '0'..'9'+ { $type = FLOAT; } | ) ;

and of course the above REQUIRES at least one digit to the left of the
decimal place on FLOAT. which is not what the OP had. but is easily
fixed, i believe, as:

FLOAT : '.' '0'..'9'+ ;
INT : '0'..'9'+ ( '.' '0'..'9'+ { $type = FLOAT; } )? ;

(note that i also replaced the empty alternative with use of the `?`
meta-operator. i think the meta-operator is stylistically clearer, but
maybe there is some other reason not to use it?)

> 
> Cheers,
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of yushang
>> Sent: Monday, November 07, 2011 2:17 AM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] missing MATCHRANGE macro
>>
>> Hi,
>> I think I've found the reason . I've written a rule as follow
>> numeric_literal
>>     :    '0'..'9' ('0'..'9')*
>>     |    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
>>     ;
>> which will be translated to MATCHRANGE in Parser , if I change it to
>> this :
>> numeric_literal
>>     :    INT
>>     |    FLOAT
>>     ;
>> INT
>>     :    '0'..'9' ('0'..'9')*
>>     ;
>> FLOAT
>>     :    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
>>     ;
>> will OK. Many thanks.
>>
>> 2011/11/5 yushang <yusunn at gmail.com>
>>
>>> Hi , I'm using ANTLR v3 C runtime and found this macro is missing
>> from
>>> the generated *Parser.c and *Parser.h . This macro can be found in
>>> *Lexer.c file . Is this a bug ?
>>> thanks in advance .
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From alexander.g.kaiser at gmail.com  Mon Nov  7 12:56:01 2011
From: alexander.g.kaiser at gmail.com (Alexander Kaiser)
Date: Mon, 7 Nov 2011 21:56:01 +0100
Subject: [antlr-interest] Common Prefix question
Message-ID: <CAN5S7Z5QV5UBHV9NhRzbPdRkDbs+nCqr1xD77jfV24Z_v3PyhQ@mail.gmail.com>

Hi,

I am new to antlr (antlr3) and struggling with lexing common prefixes.
My simple grammar:

grammar simple;


R : 'R';
E : 'e';
D : '1';
RESULT : 'Result';


expr : ( RESULT | R E D )  EOF;


On input 'Result' I expect token RESULT, and on input Re1 I expect tokens R
E D but input 'Re1' only throws NoViableAltException.
I searched for info 'antlr common prefixes' on the web and tried increasing
k, lookahead predicates ..., things like

RESULT options{filter=true;} : 'Result';



, but to no avail. I would be very much obliged if anyone could give me a
hint.



-- 
Alexander

From passionist_81 at yahoo.co.uk  Mon Nov  7 13:09:20 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Mon, 7 Nov 2011 21:09:20 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <1320700160.23256.yint-ygo-j2me@web24805.mail.ird.yahoo.com>

free trial
http://strongerbetterandbigger.ru/trial2/

From chwchw at gmx.de  Mon Nov  7 14:22:22 2011
From: chwchw at gmx.de (Christian)
Date: Mon, 07 Nov 2011 23:22:22 +0100
Subject: [antlr-interest] Token as rule argument
Message-ID: <4EB85A1E.9070100@gmx.de>

Hello,

is it possible to give a rule a token as parameter and duplicate it in
the rule's rewrite rule? To illustrate my purpose:

    t=type     typed_class_member_decl[$t]

where

    typed_class_member_decl[Token t]
      : variable_declarator (','   variable_declarator)* -> ($t
variable_declarator)+
      ;

For me, it is important that the type Token is programming
language-independent, i.e., ANTLR should be able to generate every
target language code without errors and adaptions.

Best Regards,
Christian

From chwchw at gmx.de  Mon Nov  7 16:54:55 2011
From: chwchw at gmx.de (Christian)
Date: Tue, 08 Nov 2011 01:54:55 +0100
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
Message-ID: <4EB87DDF.3090007@gmx.de>

Hi community,

it seems that ANTLR cannot generate the lexer and parser if output=AST
is removed, but the operators and rewrite rules are still left in the
grammar. Am I right? If yes, that's really regrettable...and unflexible.
You could just ignore rewrite rules and operators, if output != AST,
couldn't you?

Regards,
Christian

From michael.bedward at gmail.com  Mon Nov  7 18:56:30 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 8 Nov 2011 13:56:30 +1100
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <03ed01cc9d7c$19928500$4cb78f00$@pixelminegames.com>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
	<47c642d8fa62fc40eb32bfbcbee51af6@mail.gmail.com>
	<3AC8757E-580C-494A-9F09-304630F5912A@cs.usfca.edu>
	<CA+bn5rzE1zwGwi7d5VeTdwp1AB3cmw20nKLRxqBFpMviOXiyww@mail.gmail.com>
	<03ed01cc9d7c$19928500$4cb78f00$@pixelminegames.com>
Message-ID: <CACJVtdPQW2YePRUvo6RRpsSbY0NZn6tivNkVor+jHrKNWPLAow@mail.gmail.com>

I feel your pain Kirby and while I remain unconvinced about the evil
of file extensions in a general sense (I'd hate to have to rewrite all
my file gathering scripts to grep contents) I guess ANTLR 4 grammar
files could be identified by a header element. However, I'd still vote
for a g4 suffix on the grounds that it is simple and obvious to users
and applications.

That said, in my previous life as a C++ grafter I would have felt very
uncomfortable using anything other than .h or .hpp for header files :)

Michael

From yusunn at gmail.com  Mon Nov  7 18:58:15 2011
From: yusunn at gmail.com (yushang)
Date: Tue, 8 Nov 2011 10:58:15 +0800
Subject: [antlr-interest] init bug
In-Reply-To: <64a16cd6c113e247a81b9370cef2c5d9@mail.gmail.com>
References: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>
	<64a16cd6c113e247a81b9370cef2c5d9@mail.gmail.com>
Message-ID: <CAHHgPeMZGwCXKKe-mZa1akYFs4HWO8+CQLGp4H=kGJjDMCH6uQ@mail.gmail.com>

Thanks Jim . I'll check the doc .

2011/11/8 Jim Idle <jimi at temporal-wave.com>

> rule
> @declarations
> {
>  int flag;
> }
>

From stuart.dootson at gmail.com  Tue Nov  8 02:20:50 2011
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Tue, 8 Nov 2011 10:20:50 +0000
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
Message-ID: <CA+L+JkuL=1-LZRRJGv4LWac5fquDc6=VYwNcjw_KMGTp6mh+oA@mail.gmail.com>

How about doing what GCC does, and provide a flag to allow hte user to
specify the language being processed?

In gcc, I could do:

gcc -x c++ test.c

To compile test.c as with the C++ compiler. I could also do

gcc -x f77 test.c

to compile test.c using the Forrtan 77 compiler...

The default, however, is '-x none', which means 'look at the filename
extension to determine the compiler to use'...

Just a suggestion...

Stuart Dootson

On 6 November 2011 17:55, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi Eric,I think we are going to allow .g as well.   Rather than a property
> in the grammar file itself that identifies the version, I think we were
> going to use the file extension for this reason. all v3 grammars will be .g
> and people building v4 grammar should name them .g4
> Ter
> On Nov 6, 2011, at 9:29 AM, Eric wrote:
>
> >
> >
> > On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > Hi, Sam Harwell and I are talking about the file extension for new ANTLR
> 4. We think it makes good sense to use .g4 to distinguish the new grammars.
> They're mostly compatible except that there is no need for syntactic
> predicates and .g4 allows immediate left recursion. I think it will reduce
> confusion about what version of ANTLR is necessary to compile a grammar.
> >
> > Ter
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > Hi Ter,
> >
> > Will v4 require the file type to be .g4, or will it accept .g and .g4?
> >
> > My preference is for .g4 only.
> >
> > Also, will there be a property in the grammar file that identifies the
> minimum version or required version. I think it would help for obvious
> reasons such as when a user post a grammar needing help or an example
> grammar is given.
> >
> > Thanks, Eric
> >
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From andreas.seibert at fkie.fraunhofer.de  Tue Nov  8 02:38:16 2011
From: andreas.seibert at fkie.fraunhofer.de (Seibert, Andreas)
Date: Tue, 8 Nov 2011 11:38:16 +0100
Subject: [antlr-interest] ANTLR-Parser to deliver the lookahead
Message-ID: <3E0B6A4161994C48A247C7652C79EBDF36AC00@mailserv1.lorien.fkie.fgan.de>

Dear Prof. Dr. Parr,

 

my name is Andreas Seibert, I am working for the Fraunhofer Institute for Communication, Information Processing and Ergonomics (FKIE) near Bonn (Germany).

At the moment we are developing a graphical user interface for smartphones which are supposed to be used with an existing platform for crises management.

This GUI should support crises forces to communicate and to cooperate.

For a better understanding: In Germany there are several forces involved in crises management,

e.g., forces for search and rescue, forces for technical support, fire department, police and guidance.

 

Our system works with an ANTLR-grammar and we are having some difficulties solving the following problem so that we would be very grateful for your help.

 

The mobile GUI communicates with the base system. For that reason it is necessary for our ANTLR-Parser to deliver always the lookahead for the next input possible to the GUI.

In order for us to do something similar to auto-completion (i.e. showing all possible next tokens for an incomplete input sentence), we need to have the lookahead for an erroneous input.

 

At now, we see two options:

 

First, we might modify the ANTLR-Parser. That, however, would be a One-Way-Ticket because when we modify the grammar we would need to do this also for the Parser.

 

Second, we might modify the Compiler so that it compiles the Parser to always provide the lookahead. 

 

My questions are

1.     Is it possible to modify the Compiler as indicated in the second option?

2.     Has anyone already done such a modification so that we can use his or her results?

3.       Can you give us some advice where to do these modifications?

 

It would be very kind if you can give us some hints or answers about those questions 

and we would highly appreciate that.

 

Sincerely yours,

 

 

Andreas Seibert

 

Informationstechnik f?r F?hrungssysteme (ITF)

Fraunhofer-Institut f?r Kommunikation, Informationsverarbeitung und Ergonomie (FKIE)

 

Information Technology for Command and Control

Fraunhofer Institute for Communication, Information Processing and Ergonomics

 

Neuenahrer Stra?e 20 | 53343 Wachtberg | Germany

Tel.: +49 (0)228 9435-0

andreas.seibert at fkie.fraunhofer.de

http://www.fkie.fraunhofer.de <http://www.fkie.fraunhofer.de/> 

 

 


From kirby.bohling at gmail.com  Tue Nov  8 06:08:42 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Tue, 8 Nov 2011 08:08:42 -0600
Subject: [antlr-interest] .g vs .g4
In-Reply-To: <CA+L+JkuL=1-LZRRJGv4LWac5fquDc6=VYwNcjw_KMGTp6mh+oA@mail.gmail.com>
References: <9C70C2AF-2E5D-4582-A73C-B072062428F6@cs.usfca.edu>
	<CAN45N12W7H08dCV04vLTnM_X=wZf=t1sy-4p7cXR0kh1mPktAg@mail.gmail.com>
	<728D05BE-B710-4712-A252-2EAEA78F40B1@cs.usfca.edu>
	<CA+L+JkuL=1-LZRRJGv4LWac5fquDc6=VYwNcjw_KMGTp6mh+oA@mail.gmail.com>
Message-ID: <CA+bn5rw02qqNcOgvbwSHsgqBZob1GV4oE16VzJ3LNdpvzZbX-w@mail.gmail.com>

If Sam is saying it is only for the searching on imported grammers, it
sounds like the tooling won't care about the main one.  Imported
grammars already have a bunch of clunky aspects about their placement
and naming (at least IMHO, when building them inside Maven).  I've
used them, and they have great value once you figure out the secret
handshake.  Adding one more constraint there doesn't bother me nearly
as much as having one on the top most grammar file.

Kirby


On Tue, Nov 8, 2011 at 4:20 AM, Stuart Dootson <stuart.dootson at gmail.com> wrote:
> How about doing what GCC does, and provide a flag to allow hte user to
> specify the language being processed?
>
> In gcc, I could do:
>
> gcc -x c++ test.c
>
> To compile test.c as with the C++ compiler. I could also do
>
> gcc -x f77 test.c
>
> to compile test.c using the Forrtan 77 compiler...
>
> The default, however, is '-x none', which means 'look at the filename
> extension to determine the compiler to use'...
>
> Just a suggestion...
>
> Stuart Dootson
>
> On 6 November 2011 17:55, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hi Eric,I think we are going to allow .g as well. ? Rather than a property
>> in the grammar file itself that identifies the version, I think we were
>> going to use the file extension for this reason. all v3 grammars will be .g
>> and people building v4 grammar should name them .g4
>> Ter
>> On Nov 6, 2011, at 9:29 AM, Eric wrote:
>>
>> >
>> >
>> > On Sun, Nov 6, 2011 at 12:22 PM, Terence Parr <parrt at cs.usfca.edu>
>> wrote:
>> > Hi, Sam Harwell and I are talking about the file extension for new ANTLR
>> 4. We think it makes good sense to use .g4 to distinguish the new grammars.
>> They're mostly compatible except that there is no need for syntactic
>> predicates and .g4 allows immediate left recursion. I think it will reduce
>> confusion about what version of ANTLR is necessary to compile a grammar.
>> >
>> > Ter
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
>> > Hi Ter,
>> >
>> > Will v4 require the file type to be .g4, or will it accept .g and .g4?
>> >
>> > My preference is for .g4 only.
>> >
>> > Also, will there be a property in the grammar file that identifies the
>> minimum version or required version. I think it would help for obvious
>> reasons such as when a user post a grammar needing help or an example
>> grammar is given.
>> >
>> > Thanks, Eric
>> >
>> >
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From yusunn at gmail.com  Tue Nov  8 10:22:00 2011
From: yusunn at gmail.com (yushang)
Date: Wed, 9 Nov 2011 02:22:00 +0800
Subject: [antlr-interest] file size
Message-ID: <CAHHgPeMW26BX0rbQ0Kt20M6=tfnpkV-ffjpKRgNhZxDestV65g@mail.gmail.com>

Hi everyone,
Do you think a parser file(C file) with 408284 lines a little big ?
What is the biggest parser you've ever seen ? Maybe I need to optimize my
grammar ?
Many thanks

From jmurray at aerotech.com  Tue Nov  8 10:27:26 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Tue, 8 Nov 2011 13:27:26 -0500
Subject: [antlr-interest] file size
In-Reply-To: <CAHHgPeMW26BX0rbQ0Kt20M6=tfnpkV-ffjpKRgNhZxDestV65g@mail.gmail.com>
References: <CAHHgPeMW26BX0rbQ0Kt20M6=tfnpkV-ffjpKRgNhZxDestV65g@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFE7D@EXCH-VIRTUAL.aerotechad.com>

That sounds very large to me. I have a parser that generates 97940 lines 
of C, and this is for a terribly ambiguous language with lots of 
backtracking. I would recommend doing some left-factoring and maybe add 
some predicates to trim that down a bit.

On 11/8/2011 1:22 PM, yushang wrote:
> Hi everyone,
> Do you think a parser file(C file) with 408284 lines a little big ?
> What is the biggest parser you've ever seen ? Maybe I need to optimize my
> grammar ?
> Many thanks
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From yusunn at gmail.com  Tue Nov  8 10:38:59 2011
From: yusunn at gmail.com (yushang)
Date: Wed, 9 Nov 2011 02:38:59 +0800
Subject: [antlr-interest] file size
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFE7D@EXCH-VIRTUAL.aerotechad.com>
References: <CAHHgPeMW26BX0rbQ0Kt20M6=tfnpkV-ffjpKRgNhZxDestV65g@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFE7D@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <CAHHgPeMhyDdfMvEwLpRDjYa=F1g8VSqN78YG947uX6CJtQvZ7Q@mail.gmail.com>

Sounds sad :( it seems there are lots of work to do .

2011/11/9 Justin Murray <jmurray at aerotech.com>

> That sounds very large to me. I have a parser that generates 97940 lines
> of C, and this is for a terribly ambiguous language with lots of
> backtracking. I would recommend doing some left-factoring and maybe add
> some predicates to trim that down a bit.
>
> On 11/8/2011 1:22 PM, yushang wrote:
> > Hi everyone,
> > Do you think a parser file(C file) with 408284 lines a little big ?
> > What is the biggest parser you've ever seen ? Maybe I need to optimize my
> > grammar ?
> > Many thanks
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From passionist_81 at yahoo.co.uk  Tue Nov  8 10:54:30 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Tue, 8 Nov 2011 18:54:30 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <1320778470.70655.yint-ygo-j2me@web24805.mail.ird.yahoo.com>

http://jeremymitchellpelt.com/wp-content/themes/twentyeleven/indeex.html

From asicaddress at gmail.com  Tue Nov  8 18:13:06 2011
From: asicaddress at gmail.com (A Z)
Date: Tue, 8 Nov 2011 20:13:06 -0600
Subject: [antlr-interest] file size
In-Reply-To: <CAHHgPeMhyDdfMvEwLpRDjYa=F1g8VSqN78YG947uX6CJtQvZ7Q@mail.gmail.com>
References: <CAHHgPeMW26BX0rbQ0Kt20M6=tfnpkV-ffjpKRgNhZxDestV65g@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFE7D@EXCH-VIRTUAL.aerotechad.com>
	<CAHHgPeMhyDdfMvEwLpRDjYa=F1g8VSqN78YG947uX6CJtQvZ7Q@mail.gmail.com>
Message-ID: <CAP86aOf=vKGBzKR7=cE9FSW8OnLhFmfcG+5Q+XFPSwVPryqAYA@mail.gmail.com>

  It depends on the grammar. The combined count for all my ANTLR-generated
C code is >300000 lines.



On Tue, Nov 8, 2011 at 12:38 PM, yushang <yusunn at gmail.com> wrote:

> Sounds sad :( it seems there are lots of work to do .
>
> 2011/11/9 Justin Murray <jmurray at aerotech.com>
>
> > That sounds very large to me. I have a parser that generates 97940 lines
> > of C, and this is for a terribly ambiguous language with lots of
> > backtracking. I would recommend doing some left-factoring and maybe add
> > some predicates to trim that down a bit.
> >
> > On 11/8/2011 1:22 PM, yushang wrote:
> > > Hi everyone,
> > > Do you think a parser file(C file) with 408284 lines a little big ?
> > > What is the biggest parser you've ever seen ? Maybe I need to optimize
> my
> > > grammar ?
> > > Many thanks
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mmatinlassi at icinetic.com  Wed Nov  9 08:18:56 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Wed, 9 Nov 2011 17:18:56 +0100
Subject: [antlr-interest] Fundamental question
Message-ID: <001f01cc9efb$48621870$d9264950$@icinetic.com>

Hi,

There is something fundamental and important that I have not understood with
ANTLR grammars.

If I need to parse something like...

	int test;
	strig another; 
	int variable;
	string here;

You notice there is a typing error on the second line ('strig' instead of
'string').

How do I make a grammar that will not stop parsing but, continues after an
error??

Below is an example how I CANNOT make it work the right way (created AST
contains only 'int test ;')..

grammar List;

options {
	language = CSharp3;
	TokenLabelType = CommonToken;
	output=AST;
	ASTLabelType = CommonTree; 
}

@lexer::namespace{ConsoleApplication4}
@parser::namespace{ConsoleApplication4}


public r 
	: variables*
	;

variables
	: type ID ';'
	;

type
	: 'int'
	| 'string'
	;

ID : 'a'..'z' + ;

WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;


Many thanks for your time and help,

Mari



From iank at bearcave.com  Wed Nov  9 09:08:53 2011
From: iank at bearcave.com (Ian Kaplan)
Date: Wed, 9 Nov 2011 09:08:53 -0800
Subject: [antlr-interest] Fundamental question
In-Reply-To: <001f01cc9efb$48621870$d9264950$@icinetic.com>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>
	<001f01cc9efb$48621870$d9264950$@icinetic.com>
Message-ID: <CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>

  There is nothing wrong as far as the syntax goes with this.  There could,
for example, be a user defined type called strig (strings for trigonometry
:).  So this is grammatically correct.  What is not correct is the
semantics.  In fact, there probably is no user defined type strig.  So this
is an error may be issued after the syntax tree is built, when a semantic
phase makes a pass over the tree.  The semantic phase would discover that
there was no type strig and report an error ("No type 'strig' on line 42").


On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi <mmatinlassi at icinetic.com>wrote:

> Hi,
>
> There is something fundamental and important that I have not understood
> with
> ANTLR grammars.
>
> If I need to parse something like...
>
>        int test;
>        strig another;
>        int variable;
>        string here;
>
> You notice there is a typing error on the second line ('strig' instead of
> 'string').
>
> How do I make a grammar that will not stop parsing but, continues after an
> error??
>
> Below is an example how I CANNOT make it work the right way (created AST
> contains only 'int test ;')..
>
> grammar List;
>
> options {
>        language = CSharp3;
>        TokenLabelType = CommonToken;
>        output=AST;
>        ASTLabelType = CommonTree;
> }
>
> @lexer::namespace{ConsoleApplication4}
> @parser::namespace{ConsoleApplication4}
>
>
> public r
>        : variables*
>        ;
>
> variables
>        : type ID ';'
>        ;
>
> type
>        : 'int'
>        | 'string'
>        ;
>
> ID : 'a'..'z' + ;
>
> WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
>
>
> Many thanks for your time and help,
>
> Mari
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From dawood at us.ibm.com  Wed Nov  9 09:11:26 2011
From: dawood at us.ibm.com (David Wood)
Date: Wed, 9 Nov 2011 12:11:26 -0500
Subject: [antlr-interest] gunit bug in parsing expected string values?
Message-ID: <OF8CCC33F6.9852B593-ON85257943.005E086C-85257943.005E6EB8@us.ibm.com>

I'm trying to use gunit on my AST-generating grammar.  I'm new to this so 
started small. 

literal:
<<
123
>> -> (LITERAL 123)
<<
"123"
>> -> (LITERAL "123")

The first test passes, but the 2nd fails with the message  ' testing rule 
literal expected:<(LITERAL 123)> but was:<(LITERAL "123")>'.  This looks 
like a bug in gunit's parsing of the expected string value.  Am I doing 
something wrong, or is there a workaround?  Thanks.


David Wood 
Computing Systems for Wireless Networks
IBM TJ Watson Research Center
dawood at us.ibm.com
914-784-5123 (office), 914-396-6515 (mobile)

From jimi at temporal-wave.com  Wed Nov  9 09:15:06 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 9 Nov 2011 09:15:06 -0800
Subject: [antlr-interest] Fundamental question
In-Reply-To: <001f01cc9efb$48621870$d9264950$@icinetic.com>
References: <001f01cc9efb$48621870$d9264950$@icinetic.com>
Message-ID: <c70131730713052aad4752e3523986f5@mail.gmail.com>

First, you need to change the start rule:

public r
 	: variables* EOF
 	;

Otherwise it just stops a strig because that is not predicted.

Next though, you have to decide what it means to have something in the AST
that us put there by a syntax error. In almost all cases it is meaningless
and you have to stop processing after the parsing. However, it can
sometimes be useful to have some kind of error node, which ANTLR will
attempt to do for you, but generally you have to do this manually.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mari Matinlassi
> Sent: Wednesday, November 09, 2011 8:19 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Fundamental question
>
> Hi,
>
> There is something fundamental and important that I have not understood
> with ANTLR grammars.
>
> If I need to parse something like...
>
> 	int test;
> 	strig another;
> 	int variable;
> 	string here;
>
> You notice there is a typing error on the second line ('strig' instead
> of 'string').
>
> How do I make a grammar that will not stop parsing but, continues after
> an error??
>
> Below is an example how I CANNOT make it work the right way (created
> AST contains only 'int test ;')..
>
> grammar List;
>
> options {
> 	language = CSharp3;
> 	TokenLabelType = CommonToken;
> 	output=AST;
> 	ASTLabelType = CommonTree;
> }
>
> @lexer::namespace{ConsoleApplication4}
> @parser::namespace{ConsoleApplication4}
>
>
> public r
> 	: variables*
> 	;
>
> variables
> 	: type ID ';'
> 	;
>
> type
> 	: 'int'
> 	| 'string'
> 	;
>
> ID : 'a'..'z' + ;
>
> WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
>
>
> Many thanks for your time and help,
>
> Mari
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Nov  9 09:17:56 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 9 Nov 2011 09:17:56 -0800
Subject: [antlr-interest] Fundamental question
In-Reply-To: <CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>	<001f01cc9efb$48621870$d9264950$@icinetic.com>
	<CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>
Message-ID: <56842705629e8772319ac3da5a97dfc6@mail.gmail.com>

Except that the rule "type" does not allow an ID as the type, and so this
is a plain syntax error that is not picked up because of the lack of EOF
at the end of the start rule.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ian Kaplan
> Sent: Wednesday, November 09, 2011 9:09 AM
> To: Mari Matinlassi
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fundamental question
>
>   There is nothing wrong as far as the syntax goes with this.  There
> could, for example, be a user defined type called strig (strings for
> trigonometry :).  So this is grammatically correct.  What is not
> correct is the semantics.  In fact, there probably is no user defined
> type strig.  So this is an error may be issued after the syntax tree is
> built, when a semantic phase makes a pass over the tree.  The semantic
> phase would discover that there was no type strig and report an error
> ("No type 'strig' on line 42").
>
>
> On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi
> <mmatinlassi at icinetic.com>wrote:
>
> > Hi,
> >
> > There is something fundamental and important that I have not
> > understood with ANTLR grammars.
> >
> > If I need to parse something like...
> >
> >        int test;
> >        strig another;
> >        int variable;
> >        string here;
> >
> > You notice there is a typing error on the second line ('strig'
> instead
> > of 'string').
> >
> > How do I make a grammar that will not stop parsing but, continues
> > after an error??
> >
> > Below is an example how I CANNOT make it work the right way (created
> > AST contains only 'int test ;')..
> >
> > grammar List;
> >
> > options {
> >        language = CSharp3;
> >        TokenLabelType = CommonToken;
> >        output=AST;
> >        ASTLabelType = CommonTree;
> > }
> >
> > @lexer::namespace{ConsoleApplication4}
> > @parser::namespace{ConsoleApplication4}
> >
> >
> > public r
> >        : variables*
> >        ;
> >
> > variables
> >        : type ID ';'
> >        ;
> >
> > type
> >        : 'int'
> >        | 'string'
> >        ;
> >
> > ID : 'a'..'z' + ;
> >
> > WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
> >
> >
> > Many thanks for your time and help,
> >
> > Mari
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From diabeteman at gmail.com  Wed Nov  9 09:30:18 2011
From: diabeteman at gmail.com (Robin)
Date: Wed, 9 Nov 2011 18:30:18 +0100
Subject: [antlr-interest] Reuse tokens from multiple grammars in tree
	grammar
In-Reply-To: <CA+_G_arJmUFFe_KKZf=Fj4PuscCFmBLTXxTKdh4A2thTP39K3A@mail.gmail.com>
References: <CA+_G_aoYqy7cJ3BaS8uSTkjy=Se0J=PSqxq_GjcgjnMoTtWuOg@mail.gmail.com>
	<0db97c873b01990385b608436c50ecce@mail.gmail.com>
	<CA+_G_ar5ZBg8kDugM6mn-Covsz=Jc-EDuXNoZL-cBHdnm4oRqg@mail.gmail.com>
	<CA+_G_arJmUFFe_KKZf=Fj4PuscCFmBLTXxTKdh4A2thTP39K3A@mail.gmail.com>
Message-ID: <CA+_G_aow1FbTWTSHgWKU-pf8_w4VZ4o0KZEVx7akvvQEvO-0qg@mail.gmail.com>

Can anyone help me ?

I've read this: http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

but it does not cover exactly what I'm looking for. Nothing about rewriting
an AST from one tree grammar into another one with different tokens.

Sorry about the harassment :D

Robin
Le 7 nov. 2011 19:30, "Robin" <diabeteman at gmail.com> a ?crit :

From a.moderacja at gmail.com  Wed Nov  9 10:49:09 2011
From: a.moderacja at gmail.com (Borneq)
Date: Wed, 9 Nov 2011 19:49:09 +0100
Subject: [antlr-interest] Delphi Target
Message-ID: <CANyn1kGnjjD5cfv2a4VGeM48MJZpxU_+uFBNE8WpA+MXoO_BPA@mail.gmail.com>

Whats new in Delphi Target?
I found http://www.antlr.org/depot/antlr3/release-3.1.3/runtime/Delphi/
and Delphi.stg in
http://www.antlr.org/depot/antlr3/release-3.2/tool/src/main/resources/org/antlr/codegen/templates/Delphi/
I test on file XMLLexer.g from
http://www.antlr.org/wiki/display/ANTLR3/Parsing+XML
I write changes:
lexer grammar XMLLexer;

options {
	language=Delphi;
}
I run antlr-3.4-complete.jar i are errors:
Delphi.stg 118:6: required parameters (filterMode) must appear before
optional parameters
Delphi.stg 137:126: invalid character '}'

Can't generate Delphi target?

From WeikEngOff at aol.com  Wed Nov  9 13:36:49 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 09 Nov 2011 22:36:49 +0100
Subject: [antlr-interest] Delphi Target
In-Reply-To: <CANyn1kGnjjD5cfv2a4VGeM48MJZpxU_+uFBNE8WpA+MXoO_BPA@mail.gmail.com>
References: <CANyn1kGnjjD5cfv2a4VGeM48MJZpxU_+uFBNE8WpA+MXoO_BPA@mail.gmail.com>
Message-ID: <4EBAF271.2030703@aol.com>

Hello Borneq,

> Whats new in Delphi Target?
> I found http://www.antlr.org/depot/antlr3/release-3.1.3/runtime/Delphi/
> and Delphi.stg in
> http://www.antlr.org/depot/antlr3/release-3.2/tool/src/main/resources/org/antlr/codegen/templates/Delphi/
> I test on file XMLLexer.g from
> http://www.antlr.org/wiki/display/ANTLR3/Parsing+XML
> I write changes:
> lexer grammar XMLLexer;
>
> options {
> 	language=Delphi;
> }
> I run antlr-3.4-complete.jar i are errors:
> Delphi.stg 118:6: required parameters (filterMode) must appear before
> optional parameters
> Delphi.stg 137:126: invalid character '}'
>
> Can't generate Delphi target?

I checked the Delphi-target some days ago, too. There is a lot to do
to get it working. Alone I don't have the time, but when you help me
we can get it working. I'm using the C-target since some weeks and
try to modify the templates for my needs, so I have "some" experiences.


Greetings
Udo






From WeikEngOff at aol.com  Wed Nov  9 13:39:39 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 09 Nov 2011 22:39:39 +0100
Subject: [antlr-interest] 2. Attempt: ANTLR code generation target:
 modifying the C-Runtime I
Message-ID: <4EBAF31B.5080106@aol.com>

I would be really happy to get an answer...


Hello,

yep, I startet to modify the C-Runtime and have a first bunch of
questions. Be sure, more will follow - "Eeek, what a pain!"...

1. Header-file not created
    I just added a new directory \Cmod to \org\antlr\codegen\templates
    and copied the entire content of \C in that directory. Then I
    renamed C.stg in Cmod.stg. The *Lexer.c/*Parser.c-files are created,
    but no header (*.h)-files. Why?

2. <token> in <action>
    I need the token of an rule in the <action>-section
    /** How to execute an action (when not backtracking) */
    execAction(action) ::= <<
    <if(backtracking)>
    <if(actions.(actionScope).synpredgate)>
    if ( <actions.(actionScope).synpredgate> )
    ...
    <ruleDescriptor.name> and <ruleName> are replaced (what is the
    difference?) but <token> not. Why?

3. Blank lines
    The C-Parser-file of my grammar consits of ~150.000 lines, ~20.000
    lines are blank. As mentioned in another email from me, I can't debug
    more than 65535 lines. The only solution is to reorder the (parser) rules.
    But apart from that severe problem, I looked for a solution to get
    a much more compact code. Some examples, section...
    1. // Forward declare the locally static matching functions we have generated.
       //
       static
         XYZParser_RULE_return
           RULE (pXYZParser ctx);

       3 lines - the result of
       <rules:{r | static <headerReturnType(ruleDescriptor=r.ruleDescriptor)>  <r.ruleDescriptor.name>    (p<name> ctx<if(r.ruleDescriptor.parameterScope)>, <endif>
       <r.ruleDescriptor.parameterScope:parameterScope()>);}; separator="\n">
       How can I avoid 2 lines?
    2. /* ==============================================
        * Parsing rules
        */
       ...
       static XYZParser_RULE_return
       port_RULE(pXYZParser ctx)

       2 lines - the result of
       <rules; separator="\n\n">
       How can I avoid 1 line?

4. I added a comment to section
    ruleReturnValue() ::= <%
    //! UW Test ruleReturnValue

    <if(!ruleDescriptor.isSynPred)>
    <if(ruleDescriptor.hasReturnValue)>
    <if(ruleDescriptor.hasSingleReturnValue)>
    <ruleDescriptor.singleValueReturnName>
    <else>
    retval
    <endif>
    <endif>
    <endif>
    %>

    The result looks like
    return //! UW Test ruleReturnValueretval;
    1. The problem of the missing blank between "ruleReturnValue" and "retval"
       can be solved by adding a blank after the comment "//! UW Test ruleReturnValue ".
    2. But how can I add an additional line before the "retval"? I tried
       <else>

       retval
       <endif>
       without success.


Many thanks and greetings
Udo

From jimi at temporal-wave.com  Wed Nov  9 13:55:35 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 9 Nov 2011 13:55:35 -0800
Subject: [antlr-interest] 2. Attempt: ANTLR code generation target:
 modifying the C-Runtime I
In-Reply-To: <4EBAF31B.5080106@aol.com>
References: <4EBAF31B.5080106@aol.com>
Message-ID: <40c1e8c0f32b15ec3b8babfaefa753b9@mail.gmail.com>

These are all questions about stringtemplate, so you should post them
there.

Note that <\n?> forces a newline.
You created new templates, but did you create a new java class to process
it? Did you change the group names of the templates and so on?

Sorry, but to create a target, you basically just have to work it out as
you go along by trial and error, but you might find it easier to change
the embedded code than to remove blank lines. Also don't change more than
a single line of template at once.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Wednesday, November 09, 2011 1:40 PM
> To: Antlr-Interest Antlr.Org
> Subject: [antlr-interest] 2. Attempt: ANTLR code generation target:
> modifying the C-Runtime I
>
> I would be really happy to get an answer...
>
>
> Hello,
>
> yep, I startet to modify the C-Runtime and have a first bunch of
> questions. Be sure, more will follow - "Eeek, what a pain!"...
>
> 1. Header-file not created
>     I just added a new directory \Cmod to \org\antlr\codegen\templates
>     and copied the entire content of \C in that directory. Then I
>     renamed C.stg in Cmod.stg. The *Lexer.c/*Parser.c-files are
> created,
>     but no header (*.h)-files. Why?
>
> 2. <token> in <action>
>     I need the token of an rule in the <action>-section
>     /** How to execute an action (when not backtracking) */
>     execAction(action) ::= <<
>     <if(backtracking)>
>     <if(actions.(actionScope).synpredgate)>
>     if ( <actions.(actionScope).synpredgate> )
>     ...
>     <ruleDescriptor.name> and <ruleName> are replaced (what is the
>     difference?) but <token> not. Why?
>
> 3. Blank lines
>     The C-Parser-file of my grammar consits of ~150.000 lines, ~20.000
>     lines are blank. As mentioned in another email from me, I can't
> debug
>     more than 65535 lines. The only solution is to reorder the (parser)
> rules.
>     But apart from that severe problem, I looked for a solution to get
>     a much more compact code. Some examples, section...
>     1. // Forward declare the locally static matching functions we have
> generated.
>        //
>        static
>          XYZParser_RULE_return
>            RULE (pXYZParser ctx);
>
>        3 lines - the result of
>        <rules:{r | static
> <headerReturnType(ruleDescriptor=r.ruleDescriptor)>
> <r.ruleDescriptor.name>    (p<name>
> ctx<if(r.ruleDescriptor.parameterScope)>, <endif>
>        <r.ruleDescriptor.parameterScope:parameterScope()>);};
> separator="\n">
>        How can I avoid 2 lines?
>     2. /* ==============================================
>         * Parsing rules
>         */
>        ...
>        static XYZParser_RULE_return
>        port_RULE(pXYZParser ctx)
>
>        2 lines - the result of
>        <rules; separator="\n\n">
>        How can I avoid 1 line?
>
> 4. I added a comment to section
>     ruleReturnValue() ::= <%
>     //! UW Test ruleReturnValue
>
>     <if(!ruleDescriptor.isSynPred)>
>     <if(ruleDescriptor.hasReturnValue)>
>     <if(ruleDescriptor.hasSingleReturnValue)>
>     <ruleDescriptor.singleValueReturnName>
>     <else>
>     retval
>     <endif>
>     <endif>
>     <endif>
>     %>
>
>     The result looks like
>     return //! UW Test ruleReturnValueretval;
>     1. The problem of the missing blank between "ruleReturnValue" and
> "retval"
>        can be solved by adding a blank after the comment "//! UW Test
> ruleReturnValue ".
>     2. But how can I add an additional line before the "retval"? I
> tried
>        <else>
>
>        retval
>        <endif>
>        without success.
>
>
> Many thanks and greetings
> Udo
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Wed Nov  9 14:12:36 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 09 Nov 2011 23:12:36 +0100
Subject: [antlr-interest] 2. Attempt: ANTLR code generation target:
 modifying the C-Runtime I
In-Reply-To: <40c1e8c0f32b15ec3b8babfaefa753b9@mail.gmail.com>
References: <4EBAF31B.5080106@aol.com>
	<40c1e8c0f32b15ec3b8babfaefa753b9@mail.gmail.com>
Message-ID: <4EBAFAD4.2050104@aol.com>

Hello Jim,

I know/have read you are very busy at the moment, so a special thank
for your answer.

> These are all questions about stringtemplate, so you should post them
> there.

O. k.!

> Note that<\n?>  forces a newline.

O. k.!

> You created new templates, but did you create a new java class to process
> it? Did you change the group names of the templates and so on?

I'm using your template, just renamed it (\Cmod). No, no new java class
(I think/hope I don't need one at the moment). But where/how is the header-
file created? All is working well, but I don't get a header-file.

> Sorry, but to create a target, you basically just have to work it out as
> you go along by trial and error, but you might find it easier to change
> the embedded code than to remove blank lines. Also don't change more than
> a single line of template at once.

Yep, I change only one line at once. In summary, I have already found the
places where I must add my code. So my main problem at the moment is only
the missing header-file.

Greetings
Udo


>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Udo Weik
>> Sent: Wednesday, November 09, 2011 1:40 PM
>> To: Antlr-Interest Antlr.Org
>> Subject: [antlr-interest] 2. Attempt: ANTLR code generation target:
>> modifying the C-Runtime I
>>
>> I would be really happy to get an answer...
>>
>>
>> Hello,
>>
>> yep, I startet to modify the C-Runtime and have a first bunch of
>> questions. Be sure, more will follow - "Eeek, what a pain!"...
>>
>> 1. Header-file not created
>>      I just added a new directory \Cmod to \org\antlr\codegen\templates
>>      and copied the entire content of \C in that directory. Then I
>>      renamed C.stg in Cmod.stg. The *Lexer.c/*Parser.c-files are
>> created,
>>      but no header (*.h)-files. Why?
>>
>> 2.<token>  in<action>
>>      I need the token of an rule in the<action>-section
>>      /** How to execute an action (when not backtracking) */
>>      execAction(action) ::=<<
>>      <if(backtracking)>
>>      <if(actions.(actionScope).synpredgate)>
>>      if (<actions.(actionScope).synpredgate>  )
>>      ...
>>      <ruleDescriptor.name>  and<ruleName>  are replaced (what is the
>>      difference?) but<token>  not. Why?
>>
>> 3. Blank lines
>>      The C-Parser-file of my grammar consits of ~150.000 lines, ~20.000
>>      lines are blank. As mentioned in another email from me, I can't
>> debug
>>      more than 65535 lines. The only solution is to reorder the (parser)
>> rules.
>>      But apart from that severe problem, I looked for a solution to get
>>      a much more compact code. Some examples, section...
>>      1. // Forward declare the locally static matching functions we have
>> generated.
>>         //
>>         static
>>           XYZParser_RULE_return
>>             RULE (pXYZParser ctx);
>>
>>         3 lines - the result of
>>         <rules:{r | static
>> <headerReturnType(ruleDescriptor=r.ruleDescriptor)>
>> <r.ruleDescriptor.name>     (p<name>
>> ctx<if(r.ruleDescriptor.parameterScope)>,<endif>
>>         <r.ruleDescriptor.parameterScope:parameterScope()>);};
>> separator="\n">
>>         How can I avoid 2 lines?
>>      2. /* ==============================================
>>          * Parsing rules
>>          */
>>         ...
>>         static XYZParser_RULE_return
>>         port_RULE(pXYZParser ctx)
>>
>>         2 lines - the result of
>>         <rules; separator="\n\n">
>>         How can I avoid 1 line?
>>
>> 4. I added a comment to section
>>      ruleReturnValue() ::=<%
>>      //! UW Test ruleReturnValue
>>
>>      <if(!ruleDescriptor.isSynPred)>
>>      <if(ruleDescriptor.hasReturnValue)>
>>      <if(ruleDescriptor.hasSingleReturnValue)>
>>      <ruleDescriptor.singleValueReturnName>
>>      <else>
>>      retval
>>      <endif>
>>      <endif>
>>      <endif>
>>      %>
>>
>>      The result looks like
>>      return //! UW Test ruleReturnValueretval;
>>      1. The problem of the missing blank between "ruleReturnValue" and
>> "retval"
>>         can be solved by adding a blank after the comment "//! UW Test
>> ruleReturnValue ".
>>      2. But how can I add an additional line before the "retval"? I
>> tried
>>         <else>
>>
>>         retval
>>         <endif>
>>         without success.
>>
>>
>> Many thanks and greetings
>> Udo
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From hans-georg.winkler at hotmail.com  Thu Nov 10 00:51:20 2011
From: hans-georg.winkler at hotmail.com (Hans-Georg Winkler)
Date: Thu, 10 Nov 2011 09:51:20 +0100
Subject: [antlr-interest] Accepting Erroneus Code in AST construction
Message-ID: <SNT132-W277CAF0F7673B054E73642C0DC0@phx.gbl>


Hello,


i'm currently writing a Pascal like language grammar for an editor with intellisense like features.
It is important that the tree is constructed roughly correct despite possible errors in the code.
Thats the point where i'm facing some issues with my ANTLR parser.
I already solved some cases but the main problems is that ANTLR collapses my AST completely to a single error token if some kinds of mismatches happen.


Exapmle:

while_statement
      :	WHILE^ expression DO
 	      statement_section
 	      END_WHILE
      ;


if i have any kind of correct surrounding code (or none) and simply start typing a new while statement in my editor the parser reduces my complete AST to a single error token as long as this single statement is incomplete:


<mismatched token: [@11,48:48='<EOF>',<-1>,9:0], resync=...correctcode...while...correctcode...>


As those mismatches happen in various other szenarios i would like to know if theres a way to make antlr simply put the error token at the point where the first mismatch happend instead of making the whole code a mismatch.
I was thinking of changing the recovery but as i'm still new to antlr i don't really know what should/could be done there.


I hope someone can help me
Georg
 		 	   		  

From mmatinlassi at icinetic.com  Thu Nov 10 01:01:12 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Thu, 10 Nov 2011 10:01:12 +0100
Subject: [antlr-interest] Fundamental question
In-Reply-To: <56842705629e8772319ac3da5a97dfc6@mail.gmail.com>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>	<001f01cc9efb$48621870$d9264950$@icinetic.com>
	<CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>
	<56842705629e8772319ac3da5a97dfc6@mail.gmail.com>
Message-ID: <000301cc9f87$4bc980c0$e35c8240$@icinetic.com>

Jim, Ian,

Thanks for pointing me to missing EOF.

However, it did not .. kind of.. solve my problem.

Resulting tree will now (after adding EOF and with same input) be

int test ;
<missing EOF>

Whereas, I would _like to have_ a tree something like below:

int test;
<error>
int variable;
string here;

How to refactor my grammar to make a tree like above?

Thanks in advance,

mari


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, November 09, 2011 6:18 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Fundamental question

Except that the rule "type" does not allow an ID as the type, and so this is
a plain syntax error that is not picked up because of the lack of EOF at the
end of the start rule.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Ian Kaplan
> Sent: Wednesday, November 09, 2011 9:09 AM
> To: Mari Matinlassi
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fundamental question
>
>   There is nothing wrong as far as the syntax goes with this.  There 
> could, for example, be a user defined type called strig (strings for 
> trigonometry :).  So this is grammatically correct.  What is not 
> correct is the semantics.  In fact, there probably is no user defined 
> type strig.  So this is an error may be issued after the syntax tree 
> is built, when a semantic phase makes a pass over the tree.  The 
> semantic phase would discover that there was no type strig and report 
> an error ("No type 'strig' on line 42").
>
>
> On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi
> <mmatinlassi at icinetic.com>wrote:
>
> > Hi,
> >
> > There is something fundamental and important that I have not 
> > understood with ANTLR grammars.
> >
> > If I need to parse something like...
> >
> >        int test;
> >        strig another;
> >        int variable;
> >        string here;
> >
> > You notice there is a typing error on the second line ('strig'
> instead
> > of 'string').
> >
> > How do I make a grammar that will not stop parsing but, continues 
> > after an error??
> >
> > Below is an example how I CANNOT make it work the right way (created 
> > AST contains only 'int test ;')..
> >
> > grammar List;
> >
> > options {
> >        language = CSharp3;
> >        TokenLabelType = CommonToken;
> >        output=AST;
> >        ASTLabelType = CommonTree;
> > }
> >
> > @lexer::namespace{ConsoleApplication4}
> > @parser::namespace{ConsoleApplication4}
> >
> >
> > public r
> >        : variables*
> >        ;
> >
> > variables
> >        : type ID ';'
> >        ;
> >
> > type
> >        : 'int'
> >        | 'string'
> >        ;
> >
> > ID : 'a'..'z' + ;
> >
> > WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
> >
> >
> > Many thanks for your time and help,
> >
> > Mari
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From mmatinlassi at icinetic.com  Thu Nov 10 01:13:11 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Thu, 10 Nov 2011 10:13:11 +0100
Subject: [antlr-interest] Accepting Erroneus Code in AST construction
In-Reply-To: <SNT132-W277CAF0F7673B054E73642C0DC0@phx.gbl>
References: <SNT132-W277CAF0F7673B054E73642C0DC0@phx.gbl>
Message-ID: <000501cc9f88$f8517b80$e8f47280$@icinetic.com>

Hans-Georg,

A very relevant problem. 
"ANTLR collapses my AST completely to a single error token if some kinds of
mismatches happen."

I would also like to know if a solution is found..

-mari

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hans-Georg Winkler
Sent: Thursday, November 10, 2011 9:51 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Accepting Erroneus Code in AST construction


Hello,


i'm currently writing a Pascal like language grammar for an editor with
intellisense like features.
It is important that the tree is constructed roughly correct despite
possible errors in the code.
Thats the point where i'm facing some issues with my ANTLR parser.
I already solved some cases but the main problems is that ANTLR collapses my
AST completely to a single error token if some kinds of mismatches happen.


Exapmle:

while_statement
      :	WHILE^ expression DO
 	      statement_section
 	      END_WHILE
      ;


if i have any kind of correct surrounding code (or none) and simply start
typing a new while statement in my editor the parser reduces my complete AST
to a single error token as long as this single statement is incomplete:


<mismatched token: [@11,48:48='<EOF>',<-1>,9:0],
resync=...correctcode...while...correctcode...>


As those mismatches happen in various other szenarios i would like to know
if theres a way to make antlr simply put the error token at the point where
the first mismatch happend instead of making the whole code a mismatch.
I was thinking of changing the recovery but as i'm still new to antlr i
don't really know what should/could be done there.


I hope someone can help me
Georg
 		 	   		  

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From dieter_frej at gmx.net  Thu Nov 10 02:04:46 2011
From: dieter_frej at gmx.net (D. Frej)
Date: Thu, 10 Nov 2011 11:04:46 +0100
Subject: [antlr-interest] grammar works in antlrworks debug mode but not
	eclipse
Message-ID: <4EBBA1BE.6030805@gmx.net>

Hi,

I created a grammar with the latest antlrworks. With antlrworks' debug 
functionality I "tested" the grammar. For proper throughout testing I 
copied the generated Lexer and Parser code to my eclipse project. The 
only change I made to the code was to add a package declaration.

However, when I ran the code in eclipse only some rules works but not 
all. An input that works perfectly in antlrworks debug functionality is 
not working in eclipse. Any suggestions? I tried it with antlr-3.4 as 
well as an older version (3.1.1).

This behaviour happens to me for the first time, even though I am using 
antlr for quite some time and in different versions.

Thanks,

- Didi

From jimi at temporal-wave.com  Thu Nov 10 07:15:45 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Nov 2011 07:15:45 -0800
Subject: [antlr-interest] Fundamental question
In-Reply-To: <000301cc9f87$4bc980c0$e35c8240$@icinetic.com>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>	<001f01cc9efb$48621870$d9264950$@icinetic.com>
	<CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>
	<56842705629e8772319ac3da5a97dfc6@mail.gmail.com>
	<000301cc9f87$4bc980c0$e35c8240$@icinetic.com>
Message-ID: <be2597d699877652bf5b9b5d375c63c2@mail.gmail.com>

Take a look at:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

as it may help. This is also useful for the other person asking about AST
construction on errors, though in the end that probably comes down to
custom coding.


Jim


> -----Original Message-----
> From: Mari Matinlassi [mailto:mmatinlassi at icinetic.com]
> Sent: Thursday, November 10, 2011 1:01 AM
> To: 'Jim Idle'; 'Ian Kaplan'
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Fundamental question
>
> Jim, Ian,
>
> Thanks for pointing me to missing EOF.
>
> However, it did not .. kind of.. solve my problem.
>
> Resulting tree will now (after adding EOF and with same input) be
>
> int test ;
> <missing EOF>
>
> Whereas, I would _like to have_ a tree something like below:
>
> int test;
> <error>
> int variable;
> string here;
>
> How to refactor my grammar to make a tree like above?
>
> Thanks in advance,
>
> mari
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, November 09, 2011 6:18 PM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fundamental question
>
> Except that the rule "type" does not allow an ID as the type, and so
> this is a plain syntax error that is not picked up because of the lack
> of EOF at the end of the start rule.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ian Kaplan
> > Sent: Wednesday, November 09, 2011 9:09 AM
> > To: Mari Matinlassi
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Fundamental question
> >
> >   There is nothing wrong as far as the syntax goes with this.  There
> > could, for example, be a user defined type called strig (strings for
> > trigonometry :).  So this is grammatically correct.  What is not
> > correct is the semantics.  In fact, there probably is no user defined
> > type strig.  So this is an error may be issued after the syntax tree
> > is built, when a semantic phase makes a pass over the tree.  The
> > semantic phase would discover that there was no type strig and report
> > an error ("No type 'strig' on line 42").
> >
> >
> > On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi
> > <mmatinlassi at icinetic.com>wrote:
> >
> > > Hi,
> > >
> > > There is something fundamental and important that I have not
> > > understood with ANTLR grammars.
> > >
> > > If I need to parse something like...
> > >
> > >        int test;
> > >        strig another;
> > >        int variable;
> > >        string here;
> > >
> > > You notice there is a typing error on the second line ('strig'
> > instead
> > > of 'string').
> > >
> > > How do I make a grammar that will not stop parsing but, continues
> > > after an error??
> > >
> > > Below is an example how I CANNOT make it work the right way
> (created
> > > AST contains only 'int test ;')..
> > >
> > > grammar List;
> > >
> > > options {
> > >        language = CSharp3;
> > >        TokenLabelType = CommonToken;
> > >        output=AST;
> > >        ASTLabelType = CommonTree;
> > > }
> > >
> > > @lexer::namespace{ConsoleApplication4}
> > > @parser::namespace{ConsoleApplication4}
> > >
> > >
> > > public r
> > >        : variables*
> > >        ;
> > >
> > > variables
> > >        : type ID ';'
> > >        ;
> > >
> > > type
> > >        : 'int'
> > >        | 'string'
> > >        ;
> > >
> > > ID : 'a'..'z' + ;
> > >
> > > WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
> > >
> > >
> > > Many thanks for your time and help,
> > >
> > > Mari
> > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu Nov 10 07:46:25 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 10 Nov 2011 07:46:25 -0800
Subject: [antlr-interest] grammar works in antlrworks debug mode but not
	eclipse
In-Reply-To: <4EBBA1BE.6030805@gmx.net>
References: <4EBBA1BE.6030805@gmx.net>
Message-ID: <5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>

There is not enough information here for anyone to help. What do you mean
by " only some rules works but not all"? They give syntax errors? Lexer?
Parser? Exception? etc.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of D. Frej
> Sent: Thursday, November 10, 2011 2:05 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] grammar works in antlrworks debug mode but
> not eclipse
>
> Hi,
>
> I created a grammar with the latest antlrworks. With antlrworks' debug
> functionality I "tested" the grammar. For proper throughout testing I
> copied the generated Lexer and Parser code to my eclipse project. The
> only change I made to the code was to add a package declaration.
>
> However, when I ran the code in eclipse only some rules works but not
> all. An input that works perfectly in antlrworks debug functionality is
> not working in eclipse. Any suggestions? I tried it with antlr-3.4 as
> well as an older version (3.1.1).
>
> This behaviour happens to me for the first time, even though I am using
> antlr for quite some time and in different versions.
>
> Thanks,
>
> - Didi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From chwchw at gmx.de  Thu Nov 10 08:33:44 2011
From: chwchw at gmx.de (Christian)
Date: Thu, 10 Nov 2011 17:33:44 +0100
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
Message-ID: <4EBBFCE8.5020801@gmx.de>

Well, can anyone (of the developers) answer please?

> Hi community,
>
> it seems that ANTLR cannot generate the lexer and parser if output=AST
> is removed, but the operators and rewrite rules are still left in the
> grammar. Am I right? If yes, that's really regrettable...and unflexible.
> You could just ignore rewrite rules and operators, if output != AST,
> couldn't you?
>
> Regards,
> Christian

From dawood at us.ibm.com  Thu Nov 10 09:07:54 2011
From: dawood at us.ibm.com (David Wood)
Date: Thu, 10 Nov 2011 12:07:54 -0500
Subject: [antlr-interest] grammar works in antlrworks debug mode but
	not	eclipse
In-Reply-To: <5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>
References: <4EBBA1BE.6030805@gmx.net>
	<5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>
Message-ID: <OF7D0175A2.F52D69DD-ON85257944.005E011C-85257944.005E1C4C@us.ibm.com>

Do you have multiple JVMs installed and are you sure the one used by 
Eclipse is the same as that used at the command line?


David Wood 
Computing Systems for Wireless Networks
IBM TJ Watson Research Center
dawood at us.ibm.com
914-784-5123 (office), 914-396-6515 (mobile)




From:   Jim Idle <jimi at temporal-wave.com>
To:     antlr-interest at antlr.org
Date:   11/10/2011 10:48 AM
Subject:        Re: [antlr-interest] grammar works in antlrworks debug 
mode but not    eclipse
Sent by:        antlr-interest-bounces at antlr.org



There is not enough information here for anyone to help. What do you mean
by " only some rules works but not all"? They give syntax errors? Lexer?
Parser? Exception? etc.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of D. Frej
> Sent: Thursday, November 10, 2011 2:05 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] grammar works in antlrworks debug mode but
> not eclipse
>
> Hi,
>
> I created a grammar with the latest antlrworks. With antlrworks' debug
> functionality I "tested" the grammar. For proper throughout testing I
> copied the generated Lexer and Parser code to my eclipse project. The
> only change I made to the code was to add a package declaration.
>
> However, when I ran the code in eclipse only some rules works but not
> all. An input that works perfectly in antlrworks debug functionality is
> not working in eclipse. Any suggestions? I tried it with antlr-3.4 as
> well as an older version (3.1.1).
>
> This behaviour happens to me for the first time, even though I am using
> antlr for quite some time and in different versions.
>
> Thanks,
>
> - Didi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From yusunn at gmail.com  Thu Nov 10 09:50:19 2011
From: yusunn at gmail.com (yushang)
Date: Fri, 11 Nov 2011 01:50:19 +0800
Subject: [antlr-interest] How to interpret the text DFA
Message-ID: <CAHHgPePsKnomiXjjvW+NCj9neZpxJw6=43F0N3O_fEk2n-b+DQ@mail.gmail.com>

Hi , everyone,
I'm testing the following grammar

INT
    :    ('0'..'9')+
    ;
FLOAT
    :    ('0'..'9')* '.' INT
    ;
and get the follwing DFAs
DFA d=1
.s0-'0'..'9'->:s2=>1
.s0-<EOT>->:s1=>2

DFA d=2
.s0-'.'->:s2=>2
.s0-'0'..'9'->:s1=>1

DFA d=3
.s0-'.'->:s3=>2
.s0-'0'..'9'->.s1
.s1-'.'->:s3=>2
.s1-'0'..'9'->.s1
.s1-<EOT>->:s2=>1
from the lexer code , I can just assemble the last one (d=3) what's purpose
of the former 2? Many thanks.

From chwchw at gmx.de  Thu Nov 10 09:50:29 2011
From: chwchw at gmx.de (Christian)
Date: Thu, 10 Nov 2011 18:50:29 +0100
Subject: [antlr-interest] Line number on error is not displayed
Message-ID: <4EBC0EE5.1040008@gmx.de>

Due to the rule in line 734

field_declaration
  : variable_declarators[$t]   ';'
      -> ^(FIELD_DECL variable_declarators)
  ;

the ANTLR compiler generates the error

/C#ToKDM/grammars/CsRewriteRules.g:0:: attribute is not a token,
parameter, or return value: t
1 error

with a wrong line number. (The error itself is detected correctly as $t
is not declared in the rule's scope.)

I cannot post this bug on Jira due to limited rights. Perhaps, someone
could forward this report.

Regards,
Christian

From researcher0x00 at gmail.com  Thu Nov 10 11:08:24 2011
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 10 Nov 2011 14:08:24 -0500
Subject: [antlr-interest] Fwd:  How to interpret the text DFA
In-Reply-To: <CAN45N13Jtdhfzv1hnc=EN3M3zX=FnsS6AX+W9qM31E55XrpUwA@mail.gmail.com>
References: <CAHHgPePsKnomiXjjvW+NCj9neZpxJw6=43F0N3O_fEk2n-b+DQ@mail.gmail.com>
	<CAN45N13Jtdhfzv1hnc=EN3M3zX=FnsS6AX+W9qM31E55XrpUwA@mail.gmail.com>
Message-ID: <CAN45N13M=_KGaw0WX0aFpavp11bqZEK-c6jJ16pYLg1MC1rTkQ@mail.gmail.com>

---------- Forwarded message ----------
From: Eric <researcher0x00 at gmail.com>
Date: Thu, Nov 10, 2011 at 2:04 PM
Subject: Re: [antlr-interest] How to interpret the text DFA
To: yushang <yusunn at gmail.com>




On Thu, Nov 10, 2011 at 12:50 PM, yushang <yusunn at gmail.com> wrote:

> Hi , everyone,
> I'm testing the following grammar
>
> INT
>    :    ('0'..'9')+
>    ;
> FLOAT
>    :    ('0'..'9')* '.' INT
>    ;
> and get the follwing DFAs
> DFA d=1
> .s0-'0'..'9'->:s2=>1
> .s0-<EOT>->:s1=>2
>
> DFA d=2
> .s0-'.'->:s2=>2
> .s0-'0'..'9'->:s1=>1
>
> DFA d=3
> .s0-'.'->:s3=>2
> .s0-'0'..'9'->.s1
> .s1-'.'->:s3=>2
> .s1-'0'..'9'->.s1
> .s1-<EOT>->:s2=>1
> from the lexer code , I can just assemble the last one (d=3) what's purpose
> of the former 2? Many thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

If you use ANTLRWorks on your grammar you will see that by using menu
Grammar -> Show Show Tokens DFA you will get DFA d=3.

Then using the menu Grammar -> Highlight Decision DFA you will see two
boxes in the grammar.
If you then click on one of the boxes you should get a triangle icon, click
on the triangle icon, and select Show Decision DFA.
You should now see the one of the other diagrams.

Your unknown DFAs are decision points a.k.a. prediction DFAs.

Eric








See:
http://www.antlr.org/wiki/display/CS652/LL+Parsing+and+recursive+descent+design+pattern

From researcher0x00 at gmail.com  Thu Nov 10 19:05:51 2011
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 10 Nov 2011 22:05:51 -0500
Subject: [antlr-interest] Fwd:  Common Prefix question
In-Reply-To: <CAN45N13X=BwkE_gE+8OxBLNePqbVFK22wEzQfCoJPVOAEASO2A@mail.gmail.com>
References: <CAN5S7Z5QV5UBHV9NhRzbPdRkDbs+nCqr1xD77jfV24Z_v3PyhQ@mail.gmail.com>
	<CAN45N13X=BwkE_gE+8OxBLNePqbVFK22wEzQfCoJPVOAEASO2A@mail.gmail.com>
Message-ID: <CAN45N10VsApYD+QTqX2tj_1e-DrJCB2+5D=gV1Fe+dhsqQ9PXA@mail.gmail.com>

---------- Forwarded message ----------
From: Eric <researcher0x00 at gmail.com>
Date: Thu, Nov 10, 2011 at 9:55 PM
Subject: Re: [antlr-interest] Common Prefix question
To: Alexander Kaiser <alexander.g.kaiser at gmail.com>




On Mon, Nov 7, 2011 at 3:56 PM, Alexander Kaiser <
alexander.g.kaiser at gmail.com> wrote:

> Hi,
>
> I am new to antlr (antlr3) and struggling with lexing common prefixes.
> My simple grammar:
>
> grammar simple;
>
>
> R : 'R';
> E : 'e';
> D : '1';
> RESULT : 'Result';
>
>
> expr : ( RESULT | R E D )  EOF;
>
>
> On input 'Result' I expect token RESULT, and on input Re1 I expect tokens R
> E D but input 'Re1' only throws NoViableAltException.
> I searched for info 'antlr common prefixes' on the web and tried increasing
> k, lookahead predicates ..., things like
>
> RESULT options{filter=true;} : 'Result';
>
>
>
> , but to no avail. I would be very much obliged if anyone could give me a
> hint.
>

Hi Alexander,

Usually you want to convert yoru input into an AST and make the lexer and
parser as simple as possible. A common mistake of beginners is to try and
modify the lexer or parser into doing work that should be done with the
AST. In this case, the goal is to end of with one of two tokens, either RED
or RESULT. While it may be possible to contrive the lexer and parser into
doing this, it is much easier to do with AST rewrites.

Here is an example.

grammar mail_004;
options
{
 output=AST;
}
tokens
{
 RESULT;
 RED;
}
s : prefix suffix
 EOF;
prefix  : R E
 ;

suffix : D  -> RED
 | SULT  -> RESULT
 ;
R : 'R';
E : 'e';
D : 'd';
SULT : 'sult';

If AST and rewrites are new concepts to you, then you should get a copy of
"The Definitive ANTLR Reference" and read it. You can find some info on the
website, but there is no substitute for the book.


Eric





>
>
>
> --
> Alexander
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jokeserver at gmail.com  Thu Nov 10 21:04:03 2011
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Thu, 10 Nov 2011 21:04:03 -0800
Subject: [antlr-interest] Antlr3.4 Python bugs, workarounds
In-Reply-To: <CAN51Nt4+ALumb+_9zt-Bk9vRQFcTkdwrm1abjcv-b+DSybXVnw@mail.gmail.com>
References: <CAN51Nt60R=9DF1+BWvsnMQShLE7GRpXmm5o30DnZ+KLZq8duUA@mail.gmail.com>
	<CAN51Nt4Dp7yMUSkNqYnrkMvthRB2p0UA4g4TB5DZhi-ywn0THA@mail.gmail.com>
	<CAE33G67XoyDyGcdL2YmsptmU0S_NyPfTHrb1zanA3Y0t8miDjA@mail.gmail.com>
	<CAN51Nt7pQOLgNAfb-NnFEXskGS-zq_mBD7isLq8pSyKJtBaW_A@mail.gmail.com>
	<CAN51Nt4+ALumb+_9zt-Bk9vRQFcTkdwrm1abjcv-b+DSybXVnw@mail.gmail.com>
Message-ID: <CAN51Nt4g_SE9CB4D4=eVYGXpzTse8VPsdj6bDYGczf-W8_uW1w@mail.gmail.com>

On Thu, Nov 10, 2011 at 10:05 AM, Rampon Jerome <ramponjerome at yahoo.fr> wrote:
>
> Hi Ben,
>
> I have seen this message below on the web.
> I add similar issues with python target on 3.4 (I did not try with 3.3 for
> ex) for an HDL grammar
> (pretty large)
>
> The elif keyword was split as you mentionned.
> Did you get any final answer ? Could be reproduced ? Fixed ?
> Thanks
> Jerome

Hi Jerome,

I was told this was a known bug but not reproducible, so I provided
the smallest test case I could generate later in the thread. I haven't
received any confirmation yet, so I don't believe it's been fixed.

I can suggest the workaround I provided earlier. If that is too much
to do, note that this only arises when k is set. I managed to refactor
my rules to the point where it was not necessary to lex with the k and
backtrack options set, so I no longer need to do this myself.

--Ben

On Sun, Oct 30, 2011 at 9:48 PM, Benjamin S Wolf <jokeserver at gmail.com> wrote:
> On Fri, Oct 28, 2011 at 11:56 AM, Benjamin Niemann <pink at odahoda.de> wrote:
>> On Fri, Oct 7, 2011 at 11:17 PM, Benjamin S Wolf <jokeserver at gmail.com> wrote:
>>> I've discovered two bugs in working with the Python target to generate lexers.
>>>
>>> The first is in that when supplying k, the generated code for special
>>> state transitions is invalid: the "elif" keyword is split across lines
>>> as "el\nif", so the python interpreter crashes upon reading "el".
>>
>> That's been reported before, but I have problem reproducing it. Are
>> you using antlr-3.4-complete.jar (I can only see this problem with
>> that build) or did you build it yourself from antlr-3.4.tar.gz (or
>> something else completely)?
>
> Using antlr-3.4-complete.jar, yes.
>
> I tried reducing my test case as far as I could, but it won't generate
> the DFA with the special state transitions if I use fewer than 57
> rules. Eventually I tried generating 57 rules to trigger it, and here
> is the (excruciatingly ugly) result. (Note that I have rules that
> start with 'a' and rules that start with 'b'. This triggers the
> "el\nif" case. If I only used 'a' rules, the special state transition
> would only need to check "if s == 0" since no other character is
> valid.)
>

From dieter_frej at gmx.net  Fri Nov 11 00:00:18 2011
From: dieter_frej at gmx.net (D. Frej)
Date: Fri, 11 Nov 2011 09:00:18 +0100
Subject: [antlr-interest] grammar works in antlrworks debug mode but not
 eclipse
In-Reply-To: <5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>
References: <4EBBA1BE.6030805@gmx.net>
	<5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>
Message-ID: <4EBCD612.4000004@gmx.net>

The grammar is rather stupid and simple

grammar Expression;

// memoize=true;
options {output=AST;backtrack=true;}

tokens {
PLUS='+';
MINUS='-';
MULT='*';
DIV='/';
}

content
     :    atom ((PLUS|MINUS|MULT|DIV) atom)*
     ;

atom
     :    INT
     |    FLT
     ;

INT :    '0'..'9'+
     ;

FLT
     :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
     |   '.' ('0'..'9')+ EXPONENT?
     |   ('0'..'9')+ EXPONENT
     ;

WS  :   ( ' '
         | '\t'
         | '\r'
         | '\n'
         ) {$channel=HIDDEN;}
     ;

fragment
EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;


It is executed with the following Java code

ANTLRStringStream input = new ANTLRStringStream("15 / 7.25 +4");
ExpressionLexer lex = new ExpressionLexer(input);
CommonTokenStream tokens = new CommonTokenStream(lex);

ExpressionParser g = new ExpressionParser(tokens); //, 49100, null);
try {
     ExpressionParser.content_return r = g.content();

     CommonTree ctree = (CommonTree) r.getTree();
     System.out.println("ctree.type|" + ctree.getType() + "|" + 
ExpressionParser.tokenNames[ctree.getType()] + "|");
} catch (RecognitionException e) {
     e.printStackTrace();
}

Yet here the input of "15 / 7.25 +4" does not work. Eclipse outputs 
"ctree.type|0|<invalid>|". When I use simply "15" as input, I get the - 
correct - output "ctree.type|7|INT|".

Thanks,

Didi



Am 10.11.2011 16:46, schrieb Jim Idle:
> There is not enough information here for anyone to help. What do you mean
> by " only some rules works but not all"? They give syntax errors? Lexer?
> Parser? Exception? etc.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of D. Frej
>> Sent: Thursday, November 10, 2011 2:05 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] grammar works in antlrworks debug mode but
>> not eclipse
>>
>> Hi,
>>
>> I created a grammar with the latest antlrworks. With antlrworks' debug
>> functionality I "tested" the grammar. For proper throughout testing I
>> copied the generated Lexer and Parser code to my eclipse project. The
>> only change I made to the code was to add a package declaration.
>>
>> However, when I ran the code in eclipse only some rules works but not
>> all. An input that works perfectly in antlrworks debug functionality is
>> not working in eclipse. Any suggestions? I tried it with antlr-3.4 as
>> well as an older version (3.1.1).
>>
>> This behaviour happens to me for the first time, even though I am using
>> antlr for quite some time and in different versions.
>>
>> Thanks,
>>
>> - Didi
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From dieter_frej at gmx.net  Fri Nov 11 00:03:56 2011
From: dieter_frej at gmx.net (D. Frej)
Date: Fri, 11 Nov 2011 09:03:56 +0100
Subject: [antlr-interest] grammar works in antlrworks debug mode but not
 eclipse
In-Reply-To: <OF7D0175A2.F52D69DD-ON85257944.005E011C-85257944.005E1C4C@us.ibm.com>
References: <4EBBA1BE.6030805@gmx.net>
	<5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>
	<OF7D0175A2.F52D69DD-ON85257944.005E011C-85257944.005E1C4C@us.ibm.com>
Message-ID: <4EBCD6EC.8050202@gmx.net>

 >java -version
java version "1.6.0_25"
Java(TM) SE Runtime Environment (build 1.6.0_25-b06)
Java HotSpot(TM) Client VM (build 20.0-b11, mixed mode, sharing)

exactly what is stated in my %PATH%. And I have only one JDK/JRE 
installed. And that is what eclipse shows (at least from what I figured 
in eclipse ... so thinking about it, I do not even exactly know 
how/where to check that in eclipse).

So, answering your question: yes, I am sure that the same JVM is used

Cheers,

Didi



Am 10.11.2011 18:07, schrieb David Wood:
> Do you have multiple JVMs installed and are you sure the one used by
> Eclipse is the same as that used at the command line?
>
>
> David Wood
> Computing Systems for Wireless Networks
> IBM TJ Watson Research Center
> dawood at us.ibm.com
> 914-784-5123 (office), 914-396-6515 (mobile)
>
>
>
>
> From:   Jim Idle<jimi at temporal-wave.com>
> To:     antlr-interest at antlr.org
> Date:   11/10/2011 10:48 AM
> Subject:        Re: [antlr-interest] grammar works in antlrworks debug
> mode but not    eclipse
> Sent by:        antlr-interest-bounces at antlr.org
>
>
>
> There is not enough information here for anyone to help. What do you mean
> by " only some rules works but not all"? They give syntax errors? Lexer?
> Parser? Exception? etc.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of D. Frej
>> Sent: Thursday, November 10, 2011 2:05 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] grammar works in antlrworks debug mode but
>> not eclipse
>>
>> Hi,
>>
>> I created a grammar with the latest antlrworks. With antlrworks' debug
>> functionality I "tested" the grammar. For proper throughout testing I
>> copied the generated Lexer and Parser code to my eclipse project. The
>> only change I made to the code was to add a package declaration.
>>
>> However, when I ran the code in eclipse only some rules works but not
>> all. An input that works perfectly in antlrworks debug functionality is
>> not working in eclipse. Any suggestions? I tried it with antlr-3.4 as
>> well as an older version (3.1.1).
>>
>> This behaviour happens to me for the first time, even though I am using
>> antlr for quite some time and in different versions.
>>
>> Thanks,
>>
>> - Didi
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From hans-georg.winkler at hotmail.com  Fri Nov 11 00:07:16 2011
From: hans-georg.winkler at hotmail.com (Hans-Georg Winkler)
Date: Fri, 11 Nov 2011 09:07:16 +0100
Subject: [antlr-interest] Fundamental question
In-Reply-To: <be2597d699877652bf5b9b5d375c63c2@mail.gmail.com>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>
	<001f01cc9efb$48621870$d9264950$@icinetic.com>,
	<CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>,
	<56842705629e8772319ac3da5a97dfc6@mail.gmail.com>,
	<000301cc9f87$4bc980c0$e35c8240$@icinetic.com>,
	<be2597d699877652bf5b9b5d375c63c2@mail.gmail.com>
Message-ID: <SNT132-W229AD3034EE9306201FEF4C0DD0@phx.gbl>


Hello,


i already read this article and even did some custom recovery by changing the order of recovery (->first insertion, then deletion) for one specific problem.

But again thats just a fix for a small group of error cases. What i want to do is change how an error is passed up to the top node of my tree.
If that is possible of course, but i've already tried several different approaches to make my parser error resistant, i tried adding rules for wrong code for example, but it doesnt seem like the way it should be done.
There's incredibly little information about this on the web (or i'm just to dumb to find it) though.


I don't know if i'm going in the right direction, but if someone knows a good way to make a parser error resistant i would be willing to learn.


Georg




> From: jimi at temporal-wave.com
> Date: Thu, 10 Nov 2011 07:15:45 -0800
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fundamental question
> 
> Take a look at:
> 
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> 
> as it may help. This is also useful for the other person asking about AST
> construction on errors, though in the end that probably comes down to
> custom coding.
> 
> 
> Jim
> 
> 
> > -----Original Message-----
> > From: Mari Matinlassi [mailto:mmatinlassi at icinetic.com]
> > Sent: Thursday, November 10, 2011 1:01 AM
> > To: 'Jim Idle'; 'Ian Kaplan'
> > Cc: antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Fundamental question
> >
> > Jim, Ian,
> >
> > Thanks for pointing me to missing EOF.
> >
> > However, it did not .. kind of.. solve my problem.
> >
> > Resulting tree will now (after adding EOF and with same input) be
> >
> > int test ;
> > <missing EOF>
> >
> > Whereas, I would _like to have_ a tree something like below:
> >
> > int test;
> > <error>
> > int variable;
> > string here;
> >
> > How to refactor my grammar to make a tree like above?
> >
> > Thanks in advance,
> >
> > mari
> >
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> > Sent: Wednesday, November 09, 2011 6:18 PM
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Fundamental question
> >
> > Except that the rule "type" does not allow an ID as the type, and so
> > this is a plain syntax error that is not picked up because of the lack
> > of EOF at the end of the start rule.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Ian Kaplan
> > > Sent: Wednesday, November 09, 2011 9:09 AM
> > > To: Mari Matinlassi
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Fundamental question
> > >
> > >   There is nothing wrong as far as the syntax goes with this.  There
> > > could, for example, be a user defined type called strig (strings for
> > > trigonometry :).  So this is grammatically correct.  What is not
> > > correct is the semantics.  In fact, there probably is no user defined
> > > type strig.  So this is an error may be issued after the syntax tree
> > > is built, when a semantic phase makes a pass over the tree.  The
> > > semantic phase would discover that there was no type strig and report
> > > an error ("No type 'strig' on line 42").
> > >
> > >
> > > On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi
> > > <mmatinlassi at icinetic.com>wrote:
> > >
> > > > Hi,
> > > >
> > > > There is something fundamental and important that I have not
> > > > understood with ANTLR grammars.
> > > >
> > > > If I need to parse something like...
> > > >
> > > >        int test;
> > > >        strig another;
> > > >        int variable;
> > > >        string here;
> > > >
> > > > You notice there is a typing error on the second line ('strig'
> > > instead
> > > > of 'string').
> > > >
> > > > How do I make a grammar that will not stop parsing but, continues
> > > > after an error??
> > > >
> > > > Below is an example how I CANNOT make it work the right way
> > (created
> > > > AST contains only 'int test ;')..
> > > >
> > > > grammar List;
> > > >
> > > > options {
> > > >        language = CSharp3;
> > > >        TokenLabelType = CommonToken;
> > > >        output=AST;
> > > >        ASTLabelType = CommonTree;
> > > > }
> > > >
> > > > @lexer::namespace{ConsoleApplication4}
> > > > @parser::namespace{ConsoleApplication4}
> > > >
> > > >
> > > > public r
> > > >        : variables*
> > > >        ;
> > > >
> > > > variables
> > > >        : type ID ';'
> > > >        ;
> > > >
> > > > type
> > > >        : 'int'
> > > >        | 'string'
> > > >        ;
> > > >
> > > > ID : 'a'..'z' + ;
> > > >
> > > > WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
> > > >
> > > >
> > > > Many thanks for your time and help,
> > > >
> > > > Mari
> > > >
> > > >
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe:
> > > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > address
> > > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 		 	   		  

From chwchw at gmx.de  Fri Nov 11 00:14:33 2011
From: chwchw at gmx.de (Christian)
Date: Fri, 11 Nov 2011 09:14:33 +0100
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
References: <4EBBFCE8.5020801@gmx.de>
	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
Message-ID: <4EBCD969.4000301@gmx.de>

> As I understand it, you are creating a grammar and then remove output=AST
I created a combined grammar that contains operators and rewrite rules.
When I then remove the option "output=AST", the grammar is not generated
due to syntax errors. These syntax errors result from the operators and
rewrite rules. You can reproduce it with any corresponding grammar you like.

Christian

Am 10.11.2011 18:33, schrieb Eric:
> I don't believe that anyone here is avoiding your question. I my self
> am unable to directly answer your question because it does not make
> sense to me. As I understand it, you are creating a grammar and then
> remove output=AST. Since you are expecting a lexer and parser as
> output, I must take it that you  are using a combined grammar. Based
> on the limited info given I see no reason why you are not getting an
> lexer and parser. If you were to post your grammar and the steps you
> take, someone here might spot something needing advise.
>  
> Eric
>  
>  
>  
>  
>  
>
>
>     > Hi community,
>     >
>     > it seems that ANTLR cannot generate the lexer and parser if
>     output=AST
>     > is removed, but the operators and rewrite rules are still left
>     in the
>     > grammar. Am I right? If yes, that's really regrettable...and
>     unflexible.
>     > You could just ignore rewrite rules and operators, if output != AST,
>     > couldn't you?
>     >
>     > Regards,
>     > Christian
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From mmatinlassi at icinetic.com  Fri Nov 11 02:41:09 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Fri, 11 Nov 2011 11:41:09 +0100
Subject: [antlr-interest] Fundamental question
In-Reply-To: <be2597d699877652bf5b9b5d375c63c2@mail.gmail.com>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>	<001f01cc9efb$48621870$d9264950$@icinetic.com>
	<CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>
	<56842705629e8772319ac3da5a97dfc6@mail.gmail.com>
	<000301cc9f87$4bc980c0$e35c8240$@icinetic.com>
	<be2597d699877652bf5b9b5d375c63c2@mail.gmail.com>
Message-ID: <000001cca05e$6d4dd890$47e989b0$@icinetic.com>

Jim,

Thanks for the link. 

I see my problem was 'too early exit' and I was able to translate the
example to C sharp and make my parser to ignore erroneous input and continue
after that. That is, for input
	int test;
	strig another;
	int variable;
	string here;

Parser makes AST as follows
	int test;
	int variable;
	string here;

It is what I needed.

I include the C sharp example below if anyone would like to reuse that.

Mari

***********************************
grammar List;

options {
	language = CSharp3;
	TokenLabelType = CommonToken;
	output=AST;
	ASTLabelType = CommonTree; 
}

@lexer::namespace{ConsoleApplication4}
@parser::namespace{ConsoleApplication4}
@parser::header{using System;}

@members
{
	
    protected void syncToSet()
    {
       
         BitSet follow = state.following[state._fsp]; 

         syncToSet(follow);
    }

    protected void syncToSet(BitSet follow)
    {
        int mark = -1;

        try {

            mark = input.Mark();

          
            while (! follow.Member(input.LA(1)) ) {

                if  (input.LA(1) == EOF) {

                    input.Rewind();
                    mark = -1;
                    return;
                }
                input.Consume();

                // Now here, because you are consuming some tokens, yu will
probably want
                // to raise an error message such as "Spurious elements
after the class member were discarded"
                // using whatever your override of displayRecognitionError()
routine does to record
                // error messages. The exact error my depend on context etc.
                //
            }
        } catch (Exception e) {

          // Just ignore any errors here, we will just let the recognizer
          // try to resync as normal - something must be very screwed.
          //
        }
        finally {

            // Always release the mark we took
            //
            if  (mark != -1) {
                input.Release(mark);
            }
        }
    }
}

public r
    : syncClass( variables syncClass)* EOF
    ;

variables
    : presuffix ID ';'
    ;

presuffix
    : 'int'
    | 'string'
    ;

syncClass//[ListBuffer<JFXTree> mems]
@init
{ syncToSet();}
    :   
    ;

ID : 'a'..'z' + ;

WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
********************************************
-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, November 10, 2011 4:16 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Fundamental question

Take a look at:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

as it may help. This is also useful for the other person asking about AST
construction on errors, though in the end that probably comes down to custom
coding.


Jim


> -----Original Message-----
> From: Mari Matinlassi [mailto:mmatinlassi at icinetic.com]
> Sent: Thursday, November 10, 2011 1:01 AM
> To: 'Jim Idle'; 'Ian Kaplan'
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Fundamental question
>
> Jim, Ian,
>
> Thanks for pointing me to missing EOF.
>
> However, it did not .. kind of.. solve my problem.
>
> Resulting tree will now (after adding EOF and with same input) be
>
> int test ;
> <missing EOF>
>
> Whereas, I would _like to have_ a tree something like below:
>
> int test;
> <error>
> int variable;
> string here;
>
> How to refactor my grammar to make a tree like above?
>
> Thanks in advance,
>
> mari
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, November 09, 2011 6:18 PM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fundamental question
>
> Except that the rule "type" does not allow an ID as the type, and so 
> this is a plain syntax error that is not picked up because of the lack 
> of EOF at the end of the start rule.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> > bounces at antlr.org] On Behalf Of Ian Kaplan
> > Sent: Wednesday, November 09, 2011 9:09 AM
> > To: Mari Matinlassi
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Fundamental question
> >
> >   There is nothing wrong as far as the syntax goes with this.  There 
> > could, for example, be a user defined type called strig (strings for 
> > trigonometry :).  So this is grammatically correct.  What is not 
> > correct is the semantics.  In fact, there probably is no user 
> > defined type strig.  So this is an error may be issued after the 
> > syntax tree is built, when a semantic phase makes a pass over the 
> > tree.  The semantic phase would discover that there was no type 
> > strig and report an error ("No type 'strig' on line 42").
> >
> >
> > On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi
> > <mmatinlassi at icinetic.com>wrote:
> >
> > > Hi,
> > >
> > > There is something fundamental and important that I have not 
> > > understood with ANTLR grammars.
> > >
> > > If I need to parse something like...
> > >
> > >        int test;
> > >        strig another;
> > >        int variable;
> > >        string here;
> > >
> > > You notice there is a typing error on the second line ('strig'
> > instead
> > > of 'string').
> > >
> > > How do I make a grammar that will not stop parsing but, continues 
> > > after an error??
> > >
> > > Below is an example how I CANNOT make it work the right way
> (created
> > > AST contains only 'int test ;')..
> > >
> > > grammar List;
> > >
> > > options {
> > >        language = CSharp3;
> > >        TokenLabelType = CommonToken;
> > >        output=AST;
> > >        ASTLabelType = CommonTree;
> > > }
> > >
> > > @lexer::namespace{ConsoleApplication4}
> > > @parser::namespace{ConsoleApplication4}
> > >
> > >
> > > public r
> > >        : variables*
> > >        ;
> > >
> > > variables
> > >        : type ID ';'
> > >        ;
> > >
> > > type
> > >        : 'int'
> > >        | 'string'
> > >        ;
> > >
> > > ID : 'a'..'z' + ;
> > >
> > > WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
> > >
> > >
> > > Many thanks for your time and help,
> > >
> > > Mari
> > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From sobczyk.peter at gmail.com  Fri Nov 11 03:47:59 2011
From: sobczyk.peter at gmail.com (piotr.sobczyk)
Date: Fri, 11 Nov 2011 03:47:59 -0800 (PST)
Subject: [antlr-interest] Is it possible to debug tree rewriters (grammars
 translating AST to AST)?
Message-ID: <1321012079430-6985126.post@n2.nabble.com>

This post has NOT been accepted by the mailing list yet.
This is a very minimal example of something called TreeRewriter in Antlr: 

tree grammar Test; 

options { 
    ASTLabelType = CommonTree; 
    output = AST; 
    filter = true; 
} 

tokens { 
TEST; 
} 

test 
    : 
    ^(TEST .) -> ^(TEST) 
    ; 

The important chunks are options: output = AST and filter = true. These two
combined together make a TreeRewriter (this is a class name that generated
parser extends). 

Now please compile it with -debug flag like that: 

java -cp antlr-3.3-complete.jar org.antlr.Tool -debug Test.g 

What is generated in my case is a class defined like this: 

public class MyTreeRewriter extends DebugTreeRewriter{ 

And here the problems start. There is no class DebugTreeRewriter defined in
Antlr jar so I'm getting a compilation error. Moreover when I googled
DebugTreeRewriter I didn't found any single trace of such class existence! 

I'm getting a lot more compilation errors because it seems generated class
assumes that it inherited a lot of members from DebugTreeRewriter and they
obviously can't be found. 

I'm starting to be suspicious that there is not support for debugging tree
rewriters at all so far. Can someone confirm/deny this? Did anyone succeeded
to debug a tree rewriter?

--
View this message in context: http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6985126.html
Sent from the ANTLR mailing list archive at Nabble.com.

From yusunn at gmail.com  Fri Nov 11 06:02:54 2011
From: yusunn at gmail.com (yushang)
Date: Fri, 11 Nov 2011 22:02:54 +0800
Subject: [antlr-interest] v3 grammar
Message-ID: <CAHHgPeMBogvgDXoUWm-Dbq7ydHFe+SbErK_PGs2w8VbT0V7ZFw@mail.gmail.com>

Hi everyone,
If I want learn ANTLR grammar from a g file , which one should I go , is
this one ?
org\antlr\grammar\v3\ANTLR.g
but I also find another one
org\antlr\grammar\v3\ANTLRv3.g
I'm a little confused , could you please clarify this for me ? Many thanks.

From jbb at acm.org  Fri Nov 11 06:21:59 2011
From: jbb at acm.org (John B. Brodie)
Date: Fri, 11 Nov 2011 09:21:59 -0500
Subject: [antlr-interest] grammar works in antlrworks debug mode but not
 eclipse
In-Reply-To: <4EBCD612.4000004@gmx.net>
References: <4EBBA1BE.6030805@gmx.net>	<5a38b539f9d48aa5f79d977f6fc0f7a5@mail.gmail.com>
	<4EBCD612.4000004@gmx.net>
Message-ID: <4EBD2F87.60406@acm.org>

Greetings!

On 11/11/2011 03:00 AM, D. Frej wrote:
> The grammar is rather stupid and simple
... snipped ...

> It is executed with the following Java code
> 
> ANTLRStringStream input = new ANTLRStringStream("15 / 7.25 +4");
> ExpressionLexer lex = new ExpressionLexer(input);
> CommonTokenStream tokens = new CommonTokenStream(lex);
> 
> ExpressionParser g = new ExpressionParser(tokens); //, 49100, null);
> try {
>      ExpressionParser.content_return r = g.content();
> 
>      CommonTree ctree = (CommonTree) r.getTree();
>      System.out.println("ctree.type|" + ctree.getType() + "|" + 
> ExpressionParser.tokenNames[ctree.getType()] + "|");
> } catch (RecognitionException e) {
>      e.printStackTrace();
> }
> 
> Yet here the input of "15 / 7.25 +4" does not work. Eclipse outputs 
> "ctree.type|0|<invalid>|". 

it actually does parse correctly. you are not printing the result
properly. the result of the parse is a tree and yet you try to print it
as if it were a token.

use ctree.toStringTree() in your println instead.

> When I use simply "15" as input, I get the - 
> correct - output "ctree.type|7|INT|".
> 

because the tree in this case is simply a single token.




i do not use ANTLRWorks so can not speak to your experiences with that tool.

hope this helps...
   -jbb


From jimi at temporal-wave.com  Fri Nov 11 07:27:51 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Nov 2011 07:27:51 -0800
Subject: [antlr-interest] Fundamental question
In-Reply-To: <SNT132-W229AD3034EE9306201FEF4C0DD0@phx.gbl>
References: <Acye+hnTNbLcO4wFSi2pZCmqWlufKQ==>	<001f01cc9efb$48621870$d9264950$@icinetic.com>,
	<CAOtGR-o5ewP8TBxk_vOAL4+2VgDfJy0Tuxz93S9RDCY1kLkLWg@mail.gmail.com>,
	<56842705629e8772319ac3da5a97dfc6@mail.gmail.com>,
	<000301cc9f87$4bc980c0$e35c8240$@icinetic.com>, 
	<be2597d699877652bf5b9b5d375c63c2@mail.gmail.com>
	<SNT132-W229AD3034EE9306201FEF4C0DD0@phx.gbl>
Message-ID: <e94925cf740f827f3dd634e0f387f5bf@mail.gmail.com>

You need to write quite a but of custom code. However, for some pointers
on how to do this, get the source code for the JavaFX compiler, or at
least the front end. there you can see that I am building the standard
Java AST as per the Java compiler and not an ANTLR AST, but the techniques
are the same. Basically you need to add exception actions to your rules
that build the AST in whatever fashion you need.

Here:

http://kenai.com/projects/openjfx-compiler/sources/jfx-debug/show/src/shar
e/classes/com/sun/tools/javafx/antlr?rev=6727

You will find grammar files and a few super classes that do what you are
trying to do for this particular language because the netbeans source code
analyzers requires as complete a tree as can be formed. However, for your
own particular language, you may need further customizations. There is no
universal answer/solution to this I am afraid.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hans-Georg Winkler
> Sent: Friday, November 11, 2011 12:07 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Fundamental question
>
>
> Hello,
>
>
> i already read this article and even did some custom recovery by
> changing the order of recovery (->first insertion, then deletion) for
> one specific problem.
>
> But again thats just a fix for a small group of error cases. What i
> want to do is change how an error is passed up to the top node of my
> tree.
> If that is possible of course, but i've already tried several different
> approaches to make my parser error resistant, i tried adding rules for
> wrong code for example, but it doesnt seem like the way it should be
> done.
> There's incredibly little information about this on the web (or i'm
> just to dumb to find it) though.
>
>
> I don't know if i'm going in the right direction, but if someone knows
> a good way to make a parser error resistant i would be willing to
> learn.
>
>
> Georg
>
>
>
>
> > From: jimi at temporal-wave.com
> > Date: Thu, 10 Nov 2011 07:15:45 -0800
> > CC: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Fundamental question
> >
> > Take a look at:
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
> >
> > as it may help. This is also useful for the other person asking about
> > AST construction on errors, though in the end that probably comes
> down
> > to custom coding.
> >
> >
> > Jim
> >
> >
> > > -----Original Message-----
> > > From: Mari Matinlassi [mailto:mmatinlassi at icinetic.com]
> > > Sent: Thursday, November 10, 2011 1:01 AM
> > > To: 'Jim Idle'; 'Ian Kaplan'
> > > Cc: antlr-interest at antlr.org
> > > Subject: RE: [antlr-interest] Fundamental question
> > >
> > > Jim, Ian,
> > >
> > > Thanks for pointing me to missing EOF.
> > >
> > > However, it did not .. kind of.. solve my problem.
> > >
> > > Resulting tree will now (after adding EOF and with same input) be
> > >
> > > int test ;
> > > <missing EOF>
> > >
> > > Whereas, I would _like to have_ a tree something like below:
> > >
> > > int test;
> > > <error>
> > > int variable;
> > > string here;
> > >
> > > How to refactor my grammar to make a tree like above?
> > >
> > > Thanks in advance,
> > >
> > > mari
> > >
> > >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org
> > > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> > > Sent: Wednesday, November 09, 2011 6:18 PM
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Fundamental question
> > >
> > > Except that the rule "type" does not allow an ID as the type, and
> so
> > > this is a plain syntax error that is not picked up because of the
> > > lack of EOF at the end of the start rule.
> > >
> > > Jim
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Ian Kaplan
> > > > Sent: Wednesday, November 09, 2011 9:09 AM
> > > > To: Mari Matinlassi
> > > > Cc: antlr-interest at antlr.org
> > > > Subject: Re: [antlr-interest] Fundamental question
> > > >
> > > >   There is nothing wrong as far as the syntax goes with this.
> > > > There could, for example, be a user defined type called strig
> > > > (strings for trigonometry :).  So this is grammatically correct.
> > > > What is not correct is the semantics.  In fact, there probably is
> > > > no user defined type strig.  So this is an error may be issued
> > > > after the syntax tree is built, when a semantic phase makes a
> pass
> > > > over the tree.  The semantic phase would discover that there was
> > > > no type strig and report an error ("No type 'strig' on line 42").
> > > >
> > > >
> > > > On Wed, Nov 9, 2011 at 8:18 AM, Mari Matinlassi
> > > > <mmatinlassi at icinetic.com>wrote:
> > > >
> > > > > Hi,
> > > > >
> > > > > There is something fundamental and important that I have not
> > > > > understood with ANTLR grammars.
> > > > >
> > > > > If I need to parse something like...
> > > > >
> > > > >        int test;
> > > > >        strig another;
> > > > >        int variable;
> > > > >        string here;
> > > > >
> > > > > You notice there is a typing error on the second line ('strig'
> > > > instead
> > > > > of 'string').
> > > > >
> > > > > How do I make a grammar that will not stop parsing but,
> > > > > continues after an error??
> > > > >
> > > > > Below is an example how I CANNOT make it work the right way
> > > (created
> > > > > AST contains only 'int test ;')..
> > > > >
> > > > > grammar List;
> > > > >
> > > > > options {
> > > > >        language = CSharp3;
> > > > >        TokenLabelType = CommonToken;
> > > > >        output=AST;
> > > > >        ASTLabelType = CommonTree; }
> > > > >
> > > > > @lexer::namespace{ConsoleApplication4}
> > > > > @parser::namespace{ConsoleApplication4}
> > > > >
> > > > >
> > > > > public r
> > > > >        : variables*
> > > > >        ;
> > > > >
> > > > > variables
> > > > >        : type ID ';'
> > > > >        ;
> > > > >
> > > > > type
> > > > >        : 'int'
> > > > >        | 'string'
> > > > >        ;
> > > > >
> > > > > ID : 'a'..'z' + ;
> > > > >
> > > > > WS : (' ' |'\n' |'\r' ) {$channel=Hidden;} ;
> > > > >
> > > > >
> > > > > Many thanks for your time and help,
> > > > >
> > > > > Mari
> > > > >
> > > > >
> > > > >
> > > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > > Unsubscribe:
> > > > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > > address
> > > > >
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > > interest/your-
> > > > email-address
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addre
> > > ss
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Nov 11 07:33:12 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 11 Nov 2011 07:33:12 -0800
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <4EBCD969.4000301@gmx.de>
References: <4EBBFCE8.5020801@gmx.de>	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
	<4EBCD969.4000301@gmx.de>
Message-ID: <57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>

I think it might be the phrasing of your question. It may be a language
barrier issue, but it sounds like "You stupid ANTLR asshats, why can't you
do it this way, which is the way I expect it to work and so it must be the
correct way; you are all stupid!"

But...

Clearly, as you get an error telling you that you have AST shaping code in
there, then you cannot remove that option without removing the AST shaping
directives. Whether or not that can be improved is not very relevant as
3.x is now in  maintenance mode while ANTLR 4 is being thrashed in to
shape. So, perhaps you can rephrase your statement in to a feature request
for ANTLR v4. It is a reasonable request if a little care is taken over
the phrasing.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian
> Sent: Friday, November 11, 2011 12:15 AM
> To: Eric; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Removing output=AST lets ANTLR fail to
> generate
>
> > As I understand it, you are creating a grammar and then remove
> > output=AST
> I created a combined grammar that contains operators and rewrite rules.
> When I then remove the option "output=AST", the grammar is not
> generated due to syntax errors. These syntax errors result from the
> operators and rewrite rules. You can reproduce it with any
> corresponding grammar you like.
>
> Christian
>
> Am 10.11.2011 18:33, schrieb Eric:
> > I don't believe that anyone here is avoiding your question. I my self
> > am unable to directly answer your question because it does not make
> > sense to me. As I understand it, you are creating a grammar and then
> > remove output=AST. Since you are expecting a lexer and parser as
> > output, I must take it that you  are using a combined grammar. Based
> > on the limited info given I see no reason why you are not getting an
> > lexer and parser. If you were to post your grammar and the steps you
> > take, someone here might spot something needing advise.
> >
> > Eric
> >
> >
> >
> >
> >
> >
> >
> >     > Hi community,
> >     >
> >     > it seems that ANTLR cannot generate the lexer and parser if
> >     output=AST
> >     > is removed, but the operators and rewrite rules are still left
> >     in the
> >     > grammar. Am I right? If yes, that's really regrettable...and
> >     unflexible.
> >     > You could just ignore rewrite rules and operators, if output !=
> AST,
> >     > couldn't you?
> >     >
> >     > Regards,
> >     > Christian
> >
> >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >     Unsubscribe:
> >
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From researcher0x00 at gmail.com  Fri Nov 11 09:25:30 2011
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 11 Nov 2011 12:25:30 -0500
Subject: [antlr-interest] Is it possible to debug tree rewriters
 (grammars translating AST to AST)?
In-Reply-To: <CAN45N1160dhJk5Comr0PawwAX20gaJG3EUF8uQ4k0GGpUK9-sA@mail.gmail.com>
References: <1321012079430-6985126.post@n2.nabble.com>
	<CAN45N10rx=0Q5XMmPrHBV_e+xbyvE-Kn3xK6hOZsmpYVSoCWmw@mail.gmail.com>
	<CAJP2aX26y__QHdbEiw0=HLzmcqMcBG5N-OMYz93ydLPbucB3Aw@mail.gmail.com>
	<CAN45N1160dhJk5Comr0PawwAX20gaJG3EUF8uQ4k0GGpUK9-sA@mail.gmail.com>
Message-ID: <CAN45N10e1vgxBLzT0wPFfcReSwrbDp_Yro4KA9MUg=4aDFHGNA@mail.gmail.com>

On Fri, Nov 11, 2011 at 12:24 PM, Eric <researcher0x00 at gmail.com> wrote:

>
>
> On Fri, Nov 11, 2011 at 12:12 PM, Piotr Sobczyk <sobczyk.peter at gmail.com>wrote:
>
>> Thanks, Eric but did you read my question carefully? I have no
>> problems with debugging a plain TreeGrammar and I know how to do it.
>> My problems occur when I add output = AST and filter = true options to
>> that grammar. Then the generated parser can't be even compiled by
>> javac. You can copy-paste my minimal example, generate a parser from
>> it and then try to compile the parser to see exactly what the problem
>> is.
>>
>> 2011/11/11 Eric <researcher0x00 at gmail.com>:
>>
>
> Thanks for pointing that out. My mistake.
>
> I don't have an answer to that as I have never tryied that. If I find a
> way to do it or can verify that it can't be done I will post something.
>
> Thanks, Eric
>
>
>
>
>> >
>> >
>> > On Fri, Nov 11, 2011 at 6:47 AM, piotr.sobczyk <sobczyk.peter at gmail.com
>> >
>> > wrote:
>> >>
>> >> This is a very minimal example of something called TreeRewriter in
>> Antlr:
>> >>
>> >> tree grammar Test;
>> >>
>> >> options {
>> >>    ASTLabelType = CommonTree;
>> >>    output = AST;
>> >>    filter = true;
>> >> }
>> >>
>> >> tokens {
>> >> TEST;
>> >> }
>> >>
>> >> test
>> >>    :
>> >>    ^(TEST .) -> ^(TEST)
>> >>    ;
>> >>
>> >> The important chunks are options: output = AST and filter = true. These
>> >> two
>> >> combined together make a TreeRewriter (this is a class name that
>> generated
>> >> parser extends).
>> >>
>> >> Now please compile it with -debug flag like that:
>> >>
>> >> java -cp antlr-3.3-complete.jar org.antlr.Tool -debug Test.g
>> >>
>> >> What is generated in my case is a class defined like this:
>> >>
>> >> public class MyTreeRewriter extends DebugTreeRewriter{
>> >>
>> >> And here the problems start. There is no class DebugTreeRewriter
>> defined
>> >> in
>> >> Antlr jar so I'm getting a compilation error. Moreover when I googled
>> >> DebugTreeRewriter I didn't found any single trace of such class
>> existence!
>> >>
>> >> I'm getting a lot more compilation errors because it seems generated
>> class
>> >> assumes that it inherited a lot of members from DebugTreeRewriter and
>> they
>> >> obviously can't be found.
>> >>
>> >> I'm starting to be suspicious that there is not support for debugging
>> tree
>> >> rewriters at all so far. Can someone confirm/deny this? Did anyone
>> >> succeeded
>> >> to debug a tree rewriter?
>> >
>> >
>> > Yes.
>> >
>> > See http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554901
>> >
>> >
>> >>
>> >> --
>> >> View this message in context:
>> >>
>> http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6985126.html
>> >> Sent from the ANTLR mailing list archive at Nabble.com.
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
>>
>
>

From chwchw at gmx.de  Fri Nov 11 09:51:04 2011
From: chwchw at gmx.de (Christian)
Date: Fri, 11 Nov 2011 18:51:04 +0100
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>
References: <4EBBFCE8.5020801@gmx.de>	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
	<4EBCD969.4000301@gmx.de>
	<57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>
Message-ID: <4EBD6088.2020909@gmx.de>

Waoh, your interpretation of my words really shocked me ;)

I just asked if ANTLR could generate the lexer and parser without
AST-code if the option output=AST is removed. Apparently, it is not
possible so far. And please believe me, I was at no moment angry. But
back to the topic:

Feature request for ANTLR v4:
*Context:*
If you add AST shaping code to a given grammar and later change the
grammar itself, too, you cannot directly generate a pure lexer and
parser without AST shaping code anymore. You have to remove the AST
shaping code from the grammar to do it.
*Solution:*
If a combined grammar contains AST shaping code, it would be more
flexible if ANTLR is still able to generate non-AST target language code
when, e.g., the option output=AST is not defined.

I hope, my phrasing is better now ;)

Best regards,
Christian

Am 11.11.2011 16:33, schrieb Jim Idle:
> I think it might be the phrasing of your question. It may be a language
> barrier issue, but it sounds like "You stupid ANTLR asshats, why can't you
> do it this way, which is the way I expect it to work and so it must be the
> correct way; you are all stupid!"
>
> But...
>
> Clearly, as you get an error telling you that you have AST shaping code in
> there, then you cannot remove that option without removing the AST shaping
> directives. Whether or not that can be improved is not very relevant as
> 3.x is now in  maintenance mode while ANTLR 4 is being thrashed in to
> shape. So, perhaps you can rephrase your statement in to a feature request
> for ANTLR v4. It is a reasonable request if a little care is taken over
> the phrasing.
>
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Christian
>> Sent: Friday, November 11, 2011 12:15 AM
>> To: Eric; antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Removing output=AST lets ANTLR fail to
>> generate
>>
>>> As I understand it, you are creating a grammar and then remove
>>> output=AST
>> I created a combined grammar that contains operators and rewrite rules.
>> When I then remove the option "output=AST", the grammar is not
>> generated due to syntax errors. These syntax errors result from the
>> operators and rewrite rules. You can reproduce it with any
>> corresponding grammar you like.
>>
>> Christian
>>
>> Am 10.11.2011 18:33, schrieb Eric:
>>> I don't believe that anyone here is avoiding your question. I my self
>>> am unable to directly answer your question because it does not make
>>> sense to me. As I understand it, you are creating a grammar and then
>>> remove output=AST. Since you are expecting a lexer and parser as
>>> output, I must take it that you  are using a combined grammar. Based
>>> on the limited info given I see no reason why you are not getting an
>>> lexer and parser. If you were to post your grammar and the steps you
>>> take, someone here might spot something needing advise.
>>>
>>> Eric
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>     > Hi community,
>>>     >
>>>     > it seems that ANTLR cannot generate the lexer and parser if
>>>     output=AST
>>>     > is removed, but the operators and rewrite rules are still left
>>>     in the
>>>     > grammar. Am I right? If yes, that's really regrettable...and
>>>     unflexible.
>>>     > You could just ignore rewrite rules and operators, if output !=
>> AST,
>>>     > couldn't you?
>>>     >
>>>     > Regards,
>>>     > Christian
>>>
>>>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>     Unsubscribe:
>>>
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From s.barnett-cormack at lancaster.ac.uk  Fri Nov 11 10:55:04 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 11 Nov 2011 18:55:04 +0000
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <4EBD6088.2020909@gmx.de>
References: <4EBBFCE8.5020801@gmx.de>	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
	<4EBCD969.4000301@gmx.de>
	<57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>
	<4EBD6088.2020909@gmx.de>
Message-ID: <4EBD6F88.5070600@lancaster.ac.uk>

So, in other words, the feature request is that AST-related syntax be 
ignored if output!=AST?

Yeah, I could go for that, though I don't know if there would be 
complications deeper in implementation. Any tree-related action code, 
for instance, would be broken horribly. However, it would be a useful 
thing for very clean, pure lexing and parsing. The only thing I wonder 
is, for that not-generating-an-AST-any-more parser, wouldn't it need 
some different actions from the original AST-generating version in order 
to be any use whatsoever?

Sam

On 11/11/2011 17:51, Christian wrote:
> Waoh, your interpretation of my words really shocked me ;)
>
> I just asked if ANTLR could generate the lexer and parser without
> AST-code if the option output=AST is removed. Apparently, it is not
> possible so far. And please believe me, I was at no moment angry. But
> back to the topic:
>
> Feature request for ANTLR v4:
> *Context:*
> If you add AST shaping code to a given grammar and later change the
> grammar itself, too, you cannot directly generate a pure lexer and
> parser without AST shaping code anymore. You have to remove the AST
> shaping code from the grammar to do it.
> *Solution:*
> If a combined grammar contains AST shaping code, it would be more
> flexible if ANTLR is still able to generate non-AST target language code
> when, e.g., the option output=AST is not defined.
>
> I hope, my phrasing is better now ;)
>
> Best regards,
> Christian
>
> Am 11.11.2011 16:33, schrieb Jim Idle:
>> I think it might be the phrasing of your question. It may be a language
>> barrier issue, but it sounds like "You stupid ANTLR asshats, why can't you
>> do it this way, which is the way I expect it to work and so it must be the
>> correct way; you are all stupid!"
>>
>> But...
>>
>> Clearly, as you get an error telling you that you have AST shaping code in
>> there, then you cannot remove that option without removing the AST shaping
>> directives. Whether or not that can be improved is not very relevant as
>> 3.x is now in  maintenance mode while ANTLR 4 is being thrashed in to
>> shape. So, perhaps you can rephrase your statement in to a feature request
>> for ANTLR v4. It is a reasonable request if a little care is taken over
>> the phrasing.
>>
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Christian
>>> Sent: Friday, November 11, 2011 12:15 AM
>>> To: Eric; antlr-interest at antlr.org
>>> Subject: Re: [antlr-interest] Removing output=AST lets ANTLR fail to
>>> generate
>>>
>>>> As I understand it, you are creating a grammar and then remove
>>>> output=AST
>>> I created a combined grammar that contains operators and rewrite rules.
>>> When I then remove the option "output=AST", the grammar is not
>>> generated due to syntax errors. These syntax errors result from the
>>> operators and rewrite rules. You can reproduce it with any
>>> corresponding grammar you like.
>>>
>>> Christian
>>>
>>> Am 10.11.2011 18:33, schrieb Eric:
>>>> I don't believe that anyone here is avoiding your question. I my self
>>>> am unable to directly answer your question because it does not make
>>>> sense to me. As I understand it, you are creating a grammar and then
>>>> remove output=AST. Since you are expecting a lexer and parser as
>>>> output, I must take it that you  are using a combined grammar. Based
>>>> on the limited info given I see no reason why you are not getting an
>>>> lexer and parser. If you were to post your grammar and the steps you
>>>> take, someone here might spot something needing advise.
>>>>
>>>> Eric
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>      >  Hi community,
>>>>      >
>>>>      >  it seems that ANTLR cannot generate the lexer and parser if
>>>>      output=AST
>>>>      >  is removed, but the operators and rewrite rules are still left
>>>>      in the
>>>>      >  grammar. Am I right? If yes, that's really regrettable...and
>>>>      unflexible.
>>>>      >  You could just ignore rewrite rules and operators, if output !=
>>> AST,
>>>>      >  couldn't you?
>>>>      >
>>>>      >  Regards,
>>>>      >  Christian
>>>>
>>>>      List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>      Unsubscribe:
>>>>
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>> address
>>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From researcher0x00 at gmail.com  Fri Nov 11 12:42:48 2011
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 11 Nov 2011 15:42:48 -0500
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <4EBD6F88.5070600@lancaster.ac.uk>
References: <4EBBFCE8.5020801@gmx.de>
	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
	<4EBCD969.4000301@gmx.de>
	<57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>
	<4EBD6088.2020909@gmx.de> <4EBD6F88.5070600@lancaster.ac.uk>
Message-ID: <CAN45N10RGEXr750k++37T+cofmpdCz5mmvTpEWnmYVjQhSYKCA@mail.gmail.com>

On Fri, Nov 11, 2011 at 1:55 PM, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

> So, in other words, the feature request is that AST-related syntax be
> ignored if output!=AST?
>
> Yeah, I could go for that, though I don't know if there would be
> complications deeper in implementation. Any tree-related action code,
> for instance, would be broken horribly. However, it would be a useful
> thing for very clean, pure lexing and parsing. The only thing I wonder
> is, for that not-generating-an-AST-any-more parser, wouldn't it need
> some different actions from the original AST-generating version in order
> to be any use whatsoever?
>
> Sam
>
> On 11/11/2011 17:51, Christian wrote:
> > Waoh, your interpretation of my words really shocked me ;)
> >
> > I just asked if ANTLR could generate the lexer and parser without
> > AST-code if the option output=AST is removed. Apparently, it is not
> > possible so far. And please believe me, I was at no moment angry. But
> > back to the topic:
> >
> > Feature request for ANTLR v4:
> > *Context:*
> > If you add AST shaping code to a given grammar and later change the
> > grammar itself, too, you cannot directly generate a pure lexer and
> > parser without AST shaping code anymore. You have to remove the AST
> > shaping code from the grammar to do it.
> > *Solution:*
> > If a combined grammar contains AST shaping code, it would be more
> > flexible if ANTLR is still able to generate non-AST target language code
> > when, e.g., the option output=AST is not defined.
> >
> > I hope, my phrasing is better now ;)
> >
> > Best regards,
> > Christian
> >
> > Am 11.11.2011 16:33, schrieb Jim Idle:
> >> I think it might be the phrasing of your question. It may be a language
> >> barrier issue, but it sounds like "You stupid ANTLR asshats, why can't
> you
> >> do it this way, which is the way I expect it to work and so it must be
> the
> >> correct way; you are all stupid!"
> >>
> >> But...
> >>
> >> Clearly, as you get an error telling you that you have AST shaping code
> in
> >> there, then you cannot remove that option without removing the AST
> shaping
> >> directives. Whether or not that can be improved is not very relevant as
> >> 3.x is now in  maintenance mode while ANTLR 4 is being thrashed in to
> >> shape. So, perhaps you can rephrase your statement in to a feature
> request
> >> for ANTLR v4. It is a reasonable request if a little care is taken over
> >> the phrasing.
> >>
> >>
> >> Jim
> >>
> >>> -----Original Message-----
> >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>> bounces at antlr.org] On Behalf Of Christian
> >>> Sent: Friday, November 11, 2011 12:15 AM
> >>> To: Eric; antlr-interest at antlr.org
> >>> Subject: Re: [antlr-interest] Removing output=AST lets ANTLR fail to
> >>> generate
> >>>
> >>>> As I understand it, you are creating a grammar and then remove
> >>>> output=AST
> >>> I created a combined grammar that contains operators and rewrite rules.
> >>> When I then remove the option "output=AST", the grammar is not
> >>> generated due to syntax errors. These syntax errors result from the
> >>> operators and rewrite rules. You can reproduce it with any
> >>> corresponding grammar you like.
> >>>
> >>> Christian
> >>>
> >>> Am 10.11.2011 18:33, schrieb Eric:
> >>>> I don't believe that anyone here is avoiding your question. I my self
> >>>> am unable to directly answer your question because it does not make
> >>>> sense to me. As I understand it, you are creating a grammar and then
> >>>> remove output=AST. Since you are expecting a lexer and parser as
> >>>> output, I must take it that you  are using a combined grammar. Based
> >>>> on the limited info given I see no reason why you are not getting an
> >>>> lexer and parser. If you were to post your grammar and the steps you
> >>>> take, someone here might spot something needing advise.
> >>>>
> >>>> Eric
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>
> >>>>      >  Hi community,
> >>>>      >
> >>>>      >  it seems that ANTLR cannot generate the lexer and parser if
> >>>>      output=AST
> >>>>      >  is removed, but the operators and rewrite rules are still left
> >>>>      in the
> >>>>      >  grammar. Am I right? If yes, that's really regrettable...and
> >>>>      unflexible.
> >>>>      >  You could just ignore rewrite rules and operators, if output
> !=
> >>> AST,
> >>>>      >  couldn't you?
> >>>>      >
> >>>>      >  Regards,
> >>>>      >  Christian
> >>>>
> >>>>      List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>      Unsubscribe:
> >>>>
> >>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >>> address
> >>>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> >>> email-address
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

After thinking about it, how I would like to see it implemented would be in
ANTLRWorks.

If you create a combined grammar that has lexer, parser, and AST rules, you
could select an option to refactor the grammar into three separate grammar
files.


Eric

From chwchw at gmx.de  Fri Nov 11 14:00:00 2011
From: chwchw at gmx.de (Christian)
Date: Fri, 11 Nov 2011 23:00:00 +0100
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <CAN45N10RGEXr750k++37T+cofmpdCz5mmvTpEWnmYVjQhSYKCA@mail.gmail.com>
References: <4EBBFCE8.5020801@gmx.de>
	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
	<4EBCD969.4000301@gmx.de>
	<57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>
	<4EBD6088.2020909@gmx.de> <4EBD6F88.5070600@lancaster.ac.uk>
	<CAN45N10RGEXr750k++37T+cofmpdCz5mmvTpEWnmYVjQhSYKCA@mail.gmail.com>
Message-ID: <4EBD9AE0.3010705@gmx.de>

> So, in other words, the feature request is that AST-related syntax be
> ignored if output!=AST? 
Very well summarized! Yes.

> The only thing I wonder is, for that not-generating-an-AST-any-more
> parser, wouldn't it need some different actions from the original
> AST-generating version in order to be any use whatsoever? 
Sure, that will be problematic. However, I personally do not use action
code because I do not like to mix languages. So, for such scenarios, it
should be relatively easy to implement the feature. For the first
release, you could perhaps show a warning or even a compiler-error if
the grammar also contains action code.

> If you create a combined grammar that has lexer, parser, and AST rules, you
> could select an option to refactor the grammar into three separate grammar
> files.
Nice idea, but how could rewrite rules/operators be separated from a
parser grammar? As I understand and use the formers, they are integrated
and bound to specific rules. Spontaneously, I have no idea how you could
separate them cleverly. Somehow, you must define and maintain a mapping.

Regards,
Christian

From researcher0x00 at gmail.com  Fri Nov 11 16:03:41 2011
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 11 Nov 2011 19:03:41 -0500
Subject: [antlr-interest] Removing output=AST lets ANTLR fail to generate
In-Reply-To: <CAN45N109UeZRdtYocz7BRXSTo2mkXfmY9ZY4XRaLUqaz5pE5-Q@mail.gmail.com>
References: <4EBBFCE8.5020801@gmx.de>
	<CAN45N11TAweo+D3TFO+vefQM4B7bMzSqMXFfR6AAJqMjb-FYqQ@mail.gmail.com>
	<4EBCD969.4000301@gmx.de>
	<57dd376d9e59f5323be895a0fc49f82b@mail.gmail.com>
	<4EBD6088.2020909@gmx.de> <4EBD6F88.5070600@lancaster.ac.uk>
	<CAN45N10RGEXr750k++37T+cofmpdCz5mmvTpEWnmYVjQhSYKCA@mail.gmail.com>
	<4EBD9AE0.3010705@gmx.de>
	<CAN45N109UeZRdtYocz7BRXSTo2mkXfmY9ZY4XRaLUqaz5pE5-Q@mail.gmail.com>
Message-ID: <CAN45N10hdxnSfK_HoANZQHu7zAigkx3nFBO1ZnZvsL2fm0pgaw@mail.gmail.com>

On Fri, Nov 11, 2011 at 7:03 PM, Eric <researcher0x00 at gmail.com> wrote:

>
>
> On Fri, Nov 11, 2011 at 5:00 PM, Christian <chwchw at gmx.de> wrote:
>
>> > So, in other words, the feature request is that AST-related syntax be
>> > ignored if output!=AST?
>> Very well summarized! Yes.
>>
>> > The only thing I wonder is, for that not-generating-an-AST-any-more
>> > parser, wouldn't it need some different actions from the original
>> > AST-generating version in order to be any use whatsoever?
>> Sure, that will be problematic. However, I personally do not use action
>> code because I do not like to mix languages. So, for such scenarios, it
>> should be relatively easy to implement the feature. For the first
>> release, you could perhaps show a warning or even a compiler-error if
>> the grammar also contains action code.
>>
>> > If you create a combined grammar that has lexer, parser, and AST rules,
>> you
>> > could select an option to refactor the grammar into three separate
>> grammar
>> > files.
>> Nice idea, but how could rewrite rules/operators be separated from a
>> parser grammar? As I understand and use the formers, they are integrated
>> and bound to specific rules. Spontaneously, I have no idea how you could
>> separate them cleverly. Somehow, you must define and maintain a mapping.
>>
>
> Remember the pipeline is
>
> Text -> Lexer -> Lexer Tokens
> Lexer Tokens -> Parser -> Tree Tokens i.e. AST
> AST -> Tree rewrite -> AST (You can have more than one of these steps)
> AST ->  String Template -> Text
>
> So each step communicates with the next step using an array of
> tokens.  The AST is also tokens, with special UP and DOWN tokens that are
> used to define the tree.
>
> You don't see it that way because ANTLR hides it behind the ANTLR rules,
> which is code that hides another layer as lexer methods, parser methods,
> tree methods and string template methods. If you bring all of this up under
> a source code debugger you will see it.
>
> However with ANTLR v4, the AST and rewrites will probably change as I
> understand it. Instead of rewrite rules we will now use tree visitor
> patterns. See:
> http://www.antlr.org/wiki/display/~admin/2011/08/28/Squirrel+away+the+trees,+call+on+the+visitors
>
>  Eric
>
>
>
>
>
>>
>> Regards,
>> Christian
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From parrt at cs.usfca.edu  Fri Nov 11 16:59:49 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 11 Nov 2011 16:59:49 -0800
Subject: [antlr-interest] ANTLR-Parser to deliver the lookahead
In-Reply-To: <3E0B6A4161994C48A247C7652C79EBDF36AC00@mailserv1.lorien.fkie.fgan.de>
References: <3E0B6A4161994C48A247C7652C79EBDF36AC00@mailserv1.lorien.fkie.fgan.de>
Message-ID: <21F94134-461F-403D-8CEA-D68048695D97@cs.usfca.edu>

Hi. I believe there is some limited support for asking for FIRST or FOLLOW sets. there is no easy way to do this, but if you want to do it on a rule-based granularity, you can always look at the follow sets that are passed into each rule. the sets contain the tokens that can follow the rule reference in the invoking rule but without falling off the end of that rule.  Hmm? even that is not perfect.  Well, if you can wait for v4, there is a function that simply gives you the right answer at any moment.
Ter
On Nov 8, 2011, at 2:38 AM, Seibert, Andreas wrote:

> Dear Prof. Dr. Parr,
>  
> my name is Andreas Seibert, I am working for the Fraunhofer Institute for Communication, Information Processing and Ergonomics (FKIE) near Bonn (Germany).
> At the moment we are developing a graphical user interface for smartphones which are supposed to be used with an existing platform for crises management.
> This GUI should support crises forces to communicate and to cooperate.
> For a better understanding: In Germany there are several forces involved in crises management,
> e.g., forces for search and rescue, forces for technical support, fire department, police and guidance.
>  
> Our system works with an ANTLR-grammar and we are having some difficulties solving the following problem so that we would be very grateful for your help.
>  
> The mobile GUI communicates with the base system. For that reason it is necessary for our ANTLR-Parser to deliver always the lookahead for the next input possible to the GUI.
> In order for us to do something similar to auto-completion (i.e. showing all possible next tokens for an incomplete input sentence), we need to have the lookahead for an erroneous input.
>  
> At now, we see two options:
>  
> First, we might modify the ANTLR-Parser. That, however, would be a One-Way-Ticket because when we modify the grammar we would need to do this also for the Parser.
>  
> Second, we might modify the Compiler so that it compiles the Parser to always provide the lookahead. 
>  
> My questions are
> 1.     Is it possible to modify the Compiler as indicated in the second option?
> 2.     Has anyone already done such a modification so that we can use his or her results?
> 3.       Can you give us some advice where to do these modifications?
>  
> It would be very kind if you can give us some hints or answers about those questions 
> and we would highly appreciate that.
>  
> Sincerely yours,
>  
>  
> Andreas Seibert
>  
> Informationstechnik f?r F?hrungssysteme (ITF)
> Fraunhofer-Institut f?r Kommunikation, Informationsverarbeitung und Ergonomie (FKIE)
>  
> Information Technology for Command and Control
> Fraunhofer Institute for Communication, Information Processing and Ergonomics
>  
> Neuenahrer Stra?e 20 | 53343 Wachtberg | Germany
> Tel.: +49 (0)228 9435-0
> andreas.seibert at fkie.fraunhofer.de
> http://www.fkie.fraunhofer.de
>  
>  


From yusunn at gmail.com  Fri Nov 11 21:45:18 2011
From: yusunn at gmail.com (yushang)
Date: Sat, 12 Nov 2011 13:45:18 +0800
Subject: [antlr-interest] unbalanced parenthesis
Message-ID: <CAHHgPeMSBZzjT+d5gQgER1C4r3rf0xizvJ_Zcx5fesp+sWBuxw@mail.gmail.com>

Hi everyone,
I'm writing following code to test the ANTLRParser AST

import java.util.List;
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.grammar.v3.*;
import org.antlr.tool.*;

//javac -classpath E:\SRC\ANTLR\antlr-3.4-complete.jar;. ANTLRTest.java
//java -classpath E:\SRC\ANTLR\antlr-3.4-complete.jar;. ANTLRTest
public class ANTLRTest
{
    public static void main(String args[])
    {
        testANTLRParser();
    }
    public static void testANTLRParser()
    {
        try
        {
            ANTLRParser.grammar__return rt;
            ANTLRFileStream fs = new ANTLRFileStream("ANTLR.g");
            ANTLRLexer lex = new ANTLRLexer(fs);
            CommonTokenStream token = new CommonTokenStream(lex);
            ANTLRParser par = ANTLRParser.createParser(token);

            Grammar gmr = new Grammar();
            gmr.setFileName("ANTLR.g");
            rt = par.grammar_(gmr);

            GrammarAST t =(GrammarAST)rt.getTree();
            System.out.println( t.toStringTree());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
}

when I'm trying to indent the tree I find the parenthesis unbalanced in
following text
...
(rule
    grammar_ public (ARG Grammar g) RET scope
    (@ init this.grammar = g; Map<String, Object> opts;)
    (@ after cleanup( $tree );)
    (BLOCK
        (ALT
            (? (BLOCK (ALT ACTION <end-of-alt>) <end-of-block>))
            (? (BLOCK (ALT (= cmt DOC_COMMENT) <end-of-alt>)
<end-of-block>))
            (= gr grammarType)
            (= gid id) grammar.setName($gid.text); SEMI
            (? (BLOCK (ALT optionsSpec opts = $optionsSpec.opts;
grammar.setOptions(opts, $optionsSpec.start); <end-of-alt>)
<end-of-block>))
            (? (BLOCK (ALT (= ig delegateGrammars) <end-of-alt>)
<end-of-block>))
            (? (BLOCK (ALT (= ts tokensSpec) <end-of-alt>) <end-of-block>))
            (= scopes attrScopes)
            (? (BLOCK (ALT (= a actions) <end-of-alt>) <end-of-block>))
            (= r rules)
            EOF
            <end-of-alt>)
        (REWRITES
            (-> (ALT (^( gr gid
                            (? (BLOCK (ALT cmt <end-of-alt>)
<end-of-block>))
                            (? (BLOCK (ALT optionsSpec <end-of-alt>)
<end-of-block>))
                            (? (BLOCK (ALT ig <end-of-alt>)
<end-of-block>))
                            (? (BLOCK (ALT ts <end-of-alt>)
<end-of-block>))
                            (? (BLOCK (ALT scopes <end-of-alt>)
<end-of-block>))
                            (? (BLOCK (ALT a <end-of-alt>) <end-of-block>))
r) <end-of-alt>)))
                <end-of-block>) <end-of-rule>)
...
the last parenthesis does not match with the first one but the parenthesis
before the first BLOCK . Could someone verify this for me ? Many thanks.

From yusunn at gmail.com  Sat Nov 12 04:09:43 2011
From: yusunn at gmail.com (yushang)
Date: Sat, 12 Nov 2011 20:09:43 +0800
Subject: [antlr-interest] unbalanced parenthesis
In-Reply-To: <CAHHgPeMSBZzjT+d5gQgER1C4r3rf0xizvJ_Zcx5fesp+sWBuxw@mail.gmail.com>
References: <CAHHgPeMSBZzjT+d5gQgER1C4r3rf0xizvJ_Zcx5fesp+sWBuxw@mail.gmail.com>
Message-ID: <CAHHgPePXq6+TaGakzFm+4j5s9sZje1W=69RsE2Ku7owo57HpUA@mail.gmail.com>

Sorry , the parenthesis are balanced? , ^( should be count out . many thanks.

2011/11/12 yushang <yusunn at gmail.com>
>
> ^(

From seojiwon at gmail.com  Sun Nov 13 01:31:26 2011
From: seojiwon at gmail.com (Jiwon Seo)
Date: Sun, 13 Nov 2011 01:31:26 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
Message-ID: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>

I'm trying to add range operator in my language, and I'm having a
problem with it.

The range operator is defined as following:

range: INT '..' INT ;

where INT is '0'..'9'+

I do have FLOAT, but it is defined such that it does not have conflict
with the range operator:

FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
            | ('0'..'9')+ EXPONENT
          ;

The thing is, if I use the range operator with white spaces before &
after the dots(such as 10 .. 100), it parses fine
But without the white spaces(such as 10..100), it says
'MismatchedTokenException' .

Can anyone see why it's acting like that? I do not use dot ('.') in
any other places.

I'm using antlrworks 1.4.3 for writing grammar and testing it
(interpreter & debugger)

Thanks.

From dieter_frej at gmx.net  Sun Nov 13 01:54:14 2011
From: dieter_frej at gmx.net (D. Frej)
Date: Sun, 13 Nov 2011 10:54:14 +0100
Subject: [antlr-interest] grammar option to disable recovery?
Message-ID: <4EBF93C6.1020801@gmx.net>

Hi,

from what I read in the mailing list and in the wiki error handling and 
recovery is complex. Is there an easy way to disable recovery? Maybe 
another flag in the options{} part of a grammar? Or a method called on 
the Lexer/Parser to set the recovery mode?

I am looking for the least invasive method to change the generated code 
or to subclass it.

Thanks,

Didi

From chwchw at gmx.de  Sun Nov 13 03:09:55 2011
From: chwchw at gmx.de (Christian)
Date: Sun, 13 Nov 2011 12:09:55 +0100
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
Message-ID: <4EBFA583.30603@gmx.de>

Hello Jiwon,

first, try to write a simple minimal grammar that represents your
usecase because I do not see anything that explains the behavior you
described. Maybe there are some other rules that influence the parsing.

Tell us afterwards.

Regards,
Christian

Am 13.11.2011 10:31, schrieb Jiwon Seo:
> I'm trying to add range operator in my language, and I'm having a
> problem with it.
>
> The range operator is defined as following:
>
> range: INT '..' INT ;
>
> where INT is '0'..'9'+
>
> I do have FLOAT, but it is defined such that it does not have conflict
> with the range operator:
>
> FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
>             | ('0'..'9')+ EXPONENT
>           ;
>
> The thing is, if I use the range operator with white spaces before &
> after the dots(such as 10 .. 100), it parses fine
> But without the white spaces(such as 10..100), it says
> 'MismatchedTokenException' .
>
> Can anyone see why it's acting like that? I do not use dot ('.') in
> any other places.
>
> I'm using antlrworks 1.4.3 for writing grammar and testing it
> (interpreter & debugger)
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From bkiers at gmail.com  Sun Nov 13 03:27:38 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 13 Nov 2011 12:27:38 +0100
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
Message-ID: <CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>

On Sun, Nov 13, 2011 at 10:31 AM, Jiwon Seo <seojiwon at gmail.com> wrote:

> I'm trying to add range operator in my language, and I'm having a
> problem with it.
>
> The range operator is defined as following:
>
> range: INT '..' INT ;
>
> where INT is '0'..'9'+
>
> I do have FLOAT, but it is defined such that it does not have conflict
> with the range operator:


Hi Jiwon,

See these documents:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs

Regards,

Bart.

From lizhipeng at gmail.com  Sun Nov 13 06:37:27 2011
From: lizhipeng at gmail.com (=?UTF-8?B?5p2O5b+X6bmP?=)
Date: Sun, 13 Nov 2011 22:37:27 +0800
Subject: [antlr-interest] [C# target]about efficiency of the code
Message-ID: <CACTOmx_ZKqAVeEW+2=nogxXW2cZAV=cAqdtSUBNMZZxh-iuBXg@mail.gmail.com>

Hello all

I write a very small script language in C#. I have to use box and unbox
again and again in C# code to walk through the AST tree, and a lot of
method use reflection, so i worry about the code efficiency.

anyone have experience walk through tree in C#? how to do more effectively?
can give me some hints?

From jiwon at stanford.edu  Sun Nov 13 09:58:01 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Sun, 13 Nov 2011 09:58:01 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <4EBFA583.30603@gmx.de>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<4EBFA583.30603@gmx.de>
Message-ID: <CAGWbJj9+fxeMbB74seRqHKzqQOsUOmCRH1WVK6AmBwt9=bqQdg@mail.gmail.com>

I attached a simplified grammar file with the problem.
If you run the interpreter in antlrworks 1.4.3 the following will give an error

int n:0..10

But the following won't give an error:

int n:0 .. 10    // white space before and after ..


Note that my definition of FLOAT does not conflict with the range operator:

FLOAT
    :   ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
    |   ('0'..'9')+ EXPONENT
    ;


Thanks.

On Sun, Nov 13, 2011 at 3:09 AM, Christian <chwchw at gmx.de> wrote:
> Hello Jiwon,
>
> first, try to write a simple minimal grammar that represents your
> usecase because I do not see anything that explains the behavior you
> described. Maybe there are some other rules that influence the parsing.
>
> Tell us afterwards.
>
> Regards,
> Christian
>
> Am 13.11.2011 10:31, schrieb Jiwon Seo:
>> I'm trying to add range operator in my language, and I'm having a
>> problem with it.
>>
>> The range operator is defined as following:
>>
>> range: INT '..' INT ;
>>
>> where INT is '0'..'9'+
>>
>> I do have FLOAT, but it is defined such that it does not have conflict
>> with the range operator:
>>
>> FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
>> ? ? ? ? ? ? | ('0'..'9')+ EXPONENT
>> ? ? ? ? ? ;
>>
>> The thing is, if I use the range operator with white spaces before &
>> after the dots(such as 10 .. 100), it parses fine
>> But without the white spaces(such as 10..100), it says
>> 'MismatchedTokenException' .
>>
>> Can anyone see why it's acting like that? I do not use dot ('.') in
>> any other places.
>>
>> I'm using antlrworks 1.4.3 for writing grammar and testing it
>> (interpreter & debugger)
>>
>> Thanks.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simple.g
Type: application/octet-stream
Size: 1342 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111113/ad587ed4/attachment.obj 

From bkiers at gmail.com  Sun Nov 13 10:14:51 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 13 Nov 2011 19:14:51 +0100
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
Message-ID: <CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>

On Sun, Nov 13, 2011 at 6:59 PM, Jiwon Seo <seojiwon at gmail.com> wrote:

> Thanks for the reply!
>
> I'm trying to do it without extending lexer since I think my
> definition of FLOAT should not be a problem with the range operator.


But it _is_  a problem if the `..` is preceded by an INT: the ('0'..'9')+
'.' is consumed by FLOAT and can then not match ('0'..'9')+ EXPONENT?,
resulting in the MismatchedTokenException.

Regards,

Bart.

From parrt at cs.usfca.edu  Sun Nov 13 13:26:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 13 Nov 2011 13:26:36 -0800
Subject: [antlr-interest] update on v4
Message-ID: <4E452CC8-B1AC-4523-A3C1-001C18D10A3E@cs.usfca.edu>

Hi, A quick update on v4. I hope to have an early access release sometime late December.  Sam Harwell has been hard at work building the new ANTLRWorks and it looks great. He has also been invaluable, helping with general architecture and API discussions as I move forward with the tool itself.  Shaoting Cai is working on gunit  integration for ANTLRWorks. Udo Borkowski is helping with graphics for various tools and built the awesome tree layout implementation.

One of the things that I'm using the tree layout for is to help with tree parser debugging in v4. In version 3, when you get an error in the tree parser, it prints out some obscure message. Now, it's going to pop up a little window and show you where in the tree and got confused. E.g.,



sorry for my general silence on the lists?I'm super busy until the end of the semester in early December.

Ter

From parrt at cs.usfca.edu  Sun Nov 13 13:29:02 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 13 Nov 2011 13:29:02 -0800
Subject: [antlr-interest] update on v4
In-Reply-To: <4E452CC8-B1AC-4523-A3C1-001C18D10A3E@cs.usfca.edu>
References: <4E452CC8-B1AC-4523-A3C1-001C18D10A3E@cs.usfca.edu>
Message-ID: <CDFC03A7-E384-4896-A213-D648E797C804@cs.usfca.edu>

heh! it stripped my window shot. damn! trying with png:

 
On Nov 13, 2011, at 1:26 PM, Terence Parr wrote:

> Hi, A quick update on v4. I hope to have an early access release sometime late December.  Sam Harwell has been hard at work building the new ANTLRWorks and it looks great. He has also been invaluable, helping with general architecture and API discussions as I move forward with the tool itself.  Shaoting Cai is working on gunit  integration for ANTLRWorks. Udo Borkowski is helping with graphics for various tools and built the awesome tree layout implementation.
> 
> One of the things that I'm using the tree layout for is to help with tree parser debugging in v4. In version 3, when you get an error in the tree parser, it prints out some obscure message. Now, it's going to pop up a little window and show you where in the tree and got confused. E.g.,
> 
> 
> 
> sorry for my general silence on the lists?I'm super busy until the end of the semester in early December.
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jiwon at stanford.edu  Sun Nov 13 15:30:32 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Sun, 13 Nov 2011 15:30:32 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
	<CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
Message-ID: <CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>

Hmm I see.

Then do I have to extend the lexer like following?

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs

Cause it seems like very complicated for what I want to achieve...
In my language FLOAT does not have a conflict with the range because I
do not allow a float number such as .123
(dot has to be preceded by number like 0.123)

Is there easier way which uses the fact that I'm now allowing .123
style floating point number?

Thanks.

On Sun, Nov 13, 2011 at 10:14 AM, Bart Kiers <bkiers at gmail.com> wrote:
> On Sun, Nov 13, 2011 at 6:59 PM, Jiwon Seo <seojiwon at gmail.com> wrote:
>
>> Thanks for the reply!
>>
>> I'm trying to do it without extending lexer since I think my
>> definition of FLOAT should not be a problem with the range operator.
>
>
> But it _is_ ?a problem if the `..` is preceded by an INT: the ('0'..'9')+
> '.' is consumed by FLOAT and can then not match ('0'..'9')+ EXPONENT?,
> resulting in the MismatchedTokenException.
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From hermenierfabien at gmail.com  Sun Nov 13 15:40:46 2011
From: hermenierfabien at gmail.com (Fabien Hermenier)
Date: Sun, 13 Nov 2011 16:40:46 -0700
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
	<CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
	<CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>
Message-ID: <4EC0557E.4060603@gmail.com>

Hi

This situation occurred to me recently. Bart, correct me if I am wrong.
It seems like, similar to me, you do not see parsing and lexing as two 
different steps.
Your parser does not allow floats in a range. But prior to the parsing, 
your lexer has to detect if the
the current token it is trying to recognize is a float or a part of an 
integer followed by the range token.
This is why you have to help the lexer recognizing the good tokens using 
a solution
similar to the one explained in the wiki.


Fabien.

Le 13/11/11 16:30, Jiwon Seo a ?crit :
> Hmm I see.
>
> Then do I have to extend the lexer like following?
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>
> Cause it seems like very complicated for what I want to achieve...
> In my language FLOAT does not have a conflict with the range because I
> do not allow a float number such as .123
> (dot has to be preceded by number like 0.123)
>
> Is there easier way which uses the fact that I'm now allowing .123
> style floating point number?
>
> Thanks.
>
> On Sun, Nov 13, 2011 at 10:14 AM, Bart Kiers<bkiers at gmail.com>  wrote:
>> On Sun, Nov 13, 2011 at 6:59 PM, Jiwon Seo<seojiwon at gmail.com>  wrote:
>>
>>> Thanks for the reply!
>>>
>>> I'm trying to do it without extending lexer since I think my
>>> definition of FLOAT should not be a problem with the range operator.
>>
>> But it _is_  a problem if the `..` is preceded by an INT: the ('0'..'9')+
>> '.' is consumed by FLOAT and can then not match ('0'..'9')+ EXPONENT?,
>> resulting in the MismatchedTokenException.
>>
>> Regards,
>>
>> Bart.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Sun Nov 13 16:36:13 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 14 Nov 2011 11:36:13 +1100
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <4EC0557E.4060603@gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
	<CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
	<CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>
	<4EC0557E.4060603@gmail.com>
Message-ID: <CACJVtdPj=VpvOf=3pYvK9V8uXbWbUYPBn6hfeHefHZ0E4gptvw@mail.gmail.com>

When dealing with the same issue a while ago I decided it was so much
easier to cheat and use ":" rather than ".." to indicate a range :)

Michael

From jimi at temporal-wave.com  Sun Nov 13 17:10:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Nov 2011 17:10:36 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj9+fxeMbB74seRqHKzqQOsUOmCRH1WVK6AmBwt9=bqQdg@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<4EBFA583.30603@gmx.de>
	<CAGWbJj9+fxeMbB74seRqHKzqQOsUOmCRH1WVK6AmBwt9=bqQdg@mail.gmail.com>
Message-ID: <4f4c67ce991b465c44e1deedddf5f04f@mail.gmail.com>

Please read the wiki articles - your rules conflict and there are simple
ways around this :)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jiwon Seo
> Sent: Sunday, November 13, 2011 9:58 AM
> To: Christian
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>
> I attached a simplified grammar file with the problem.
> If you run the interpreter in antlrworks 1.4.3 the following will give
> an error
>
> int n:0..10
>
> But the following won't give an error:
>
> int n:0 .. 10    // white space before and after ..
>
>
> Note that my definition of FLOAT does not conflict with the range
> operator:
>
> FLOAT
>     :   ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
>     |   ('0'..'9')+ EXPONENT
>     ;
>
>
> Thanks.
>
> On Sun, Nov 13, 2011 at 3:09 AM, Christian <chwchw at gmx.de> wrote:
> > Hello Jiwon,
> >
> > first, try to write a simple minimal grammar that represents your
> > usecase because I do not see anything that explains the behavior you
> > described. Maybe there are some other rules that influence the
> parsing.
> >
> > Tell us afterwards.
> >
> > Regards,
> > Christian
> >
> > Am 13.11.2011 10:31, schrieb Jiwon Seo:
> >> I'm trying to add range operator in my language, and I'm having a
> >> problem with it.
> >>
> >> The range operator is defined as following:
> >>
> >> range: INT '..' INT ;
> >>
> >> where INT is '0'..'9'+
> >>
> >> I do have FLOAT, but it is defined such that it does not have
> >> conflict with the range operator:
> >>
> >> FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
> >> ? ? ? ? ? ? | ('0'..'9')+ EXPONENT
> >> ? ? ? ? ? ;
> >>
> >> The thing is, if I use the range operator with white spaces before &
> >> after the dots(such as 10 .. 100), it parses fine But without the
> >> white spaces(such as 10..100), it says 'MismatchedTokenException' .
> >>
> >> Can anyone see why it's acting like that? I do not use dot ('.') in
> >> any other places.
> >>
> >> I'm using antlrworks 1.4.3 for writing grammar and testing it
> >> (interpreter & debugger)
> >>
> >> Thanks.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >

From jimi at temporal-wave.com  Sun Nov 13 17:19:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 13 Nov 2011 17:19:03 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CACJVtdPj=VpvOf=3pYvK9V8uXbWbUYPBn6hfeHefHZ0E4gptvw@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
	<CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
	<CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>
	<4EC0557E.4060603@gmail.com>
	<CACJVtdPj=VpvOf=3pYvK9V8uXbWbUYPBn6hfeHefHZ0E4gptvw@mail.gmail.com>
Message-ID: <5e2cdf03e2d6eedc808939dbcb20ab86@mail.gmail.com>

I am never sure why this causes so many people so much confusion.
Especially when I published a cut and paste answer to it. Care to say why
you thought it easier to abandon the idea? I am genuinely interested in
the answer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Michael Bedward
> Sent: Sunday, November 13, 2011 4:36 PM
> To: Jiwon Seo; antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>
> When dealing with the same issue a while ago I decided it was so much
> easier to cheat and use ":" rather than ".." to indicate a range :)
>
> Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From michael.bedward at gmail.com  Sun Nov 13 19:31:26 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 14 Nov 2011 14:31:26 +1100
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <5e2cdf03e2d6eedc808939dbcb20ab86@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
	<CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
	<CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>
	<4EC0557E.4060603@gmail.com>
	<CACJVtdPj=VpvOf=3pYvK9V8uXbWbUYPBn6hfeHefHZ0E4gptvw@mail.gmail.com>
	<5e2cdf03e2d6eedc808939dbcb20ab86@mail.gmail.com>
Message-ID: <CACJVtdO82Xrr8+D1zJ08KqMj8R5C45QjanuGRkEECRf5YszOPg@mail.gmail.com>

Ah, I wouldn't trouble yourself Jim. I don't remember clearly but it
was most likely a combination of laziness and ignorance on my part.

As post-hoc rationalization, I note that the colon is used as the
sequence operator in the R stats system, in which I do a lot of
scripting, so the syntax seemed natural to me. Whether it does to
anyone using my language (jiffle image scripting) I've no idea.

Michael

On 14 November 2011 12:19, Jim Idle <jimi at temporal-wave.com> wrote:
> I am never sure why this causes so many people so much confusion.
> Especially when I published a cut and paste answer to it. Care to say why
> you thought it easier to abandon the idea? I am genuinely interested in
> the answer.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Michael Bedward
>> Sent: Sunday, November 13, 2011 4:36 PM
>> To: Jiwon Seo; antlr-interest at antlr.org interest
>> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>>
>> When dealing with the same issue a while ago I decided it was so much
>> easier to cheat and use ":" rather than ".." to indicate a range :)
>>
>> Michael
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jiwon at stanford.edu  Sun Nov 13 23:06:18 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Sun, 13 Nov 2011 23:06:18 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <4f4c67ce991b465c44e1deedddf5f04f@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<4EBFA583.30603@gmx.de>
	<CAGWbJj9+fxeMbB74seRqHKzqQOsUOmCRH1WVK6AmBwt9=bqQdg@mail.gmail.com>
	<4f4c67ce991b465c44e1deedddf5f04f@mail.gmail.com>
Message-ID: <CAGWbJj8AWiC9qNx_wTWF3izjEXioE-VUhB91ry=yROh0Tq1V3A@mail.gmail.com>

I did the following change:

FLOAT
    : ('0'..'9')+
    (
        {input.LA(2) != '.'}? => '.' ('0'..'9')+ EXPONENT? {$type = FLOAT;}
        |  {$type = INT;}
    )
    |  ('0'..'9')+ EXPONENT
    ;

I tested it inside antlrworks, and very strangely, it works fine with
the debugger(generates the right parse tree),
but raises Mismatched token exception with the interpreter.

Is the above right way to do this?


On Sun, Nov 13, 2011 at 5:10 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> Please read the wiki articles - your rules conflict and there are simple
> ways around this :)
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Jiwon Seo
>> Sent: Sunday, November 13, 2011 9:58 AM
>> To: Christian
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>>
>> I attached a simplified grammar file with the problem.
>> If you run the interpreter in antlrworks 1.4.3 the following will give
>> an error
>>
>> int n:0..10
>>
>> But the following won't give an error:
>>
>> int n:0 .. 10 ? ?// white space before and after ..
>>
>>
>> Note that my definition of FLOAT does not conflict with the range
>> operator:
>>
>> FLOAT
>> ? ? : ? ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
>> ? ? | ? ('0'..'9')+ EXPONENT
>> ? ? ;
>>
>>
>> Thanks.
>>
>> On Sun, Nov 13, 2011 at 3:09 AM, Christian <chwchw at gmx.de> wrote:
>> > Hello Jiwon,
>> >
>> > first, try to write a simple minimal grammar that represents your
>> > usecase because I do not see anything that explains the behavior you
>> > described. Maybe there are some other rules that influence the
>> parsing.
>> >
>> > Tell us afterwards.
>> >
>> > Regards,
>> > Christian
>> >
>> > Am 13.11.2011 10:31, schrieb Jiwon Seo:
>> >> I'm trying to add range operator in my language, and I'm having a
>> >> problem with it.
>> >>
>> >> The range operator is defined as following:
>> >>
>> >> range: INT '..' INT ;
>> >>
>> >> where INT is '0'..'9'+
>> >>
>> >> I do have FLOAT, but it is defined such that it does not have
>> >> conflict with the range operator:
>> >>
>> >> FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
>> >> ? ? ? ? ? ? | ('0'..'9')+ EXPONENT
>> >> ? ? ? ? ? ;
>> >>
>> >> The thing is, if I use the range operator with white spaces before &
>> >> after the dots(such as 10 .. 100), it parses fine But without the
>> >> white spaces(such as 10..100), it says 'MismatchedTokenException' .
>> >>
>> >> Can anyone see why it's acting like that? I do not use dot ('.') in
>> >> any other places.
>> >>
>> >> I'm using antlrworks 1.4.3 for writing grammar and testing it
>> >> (interpreter & debugger)
>> >>
>> >> Thanks.
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> addres
>> >> s
>> >>
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jiwon at stanford.edu  Sun Nov 13 23:14:02 2011
From: jiwon at stanford.edu (Jiwon Seo)
Date: Sun, 13 Nov 2011 23:14:02 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj8AWiC9qNx_wTWF3izjEXioE-VUhB91ry=yROh0Tq1V3A@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<4EBFA583.30603@gmx.de>
	<CAGWbJj9+fxeMbB74seRqHKzqQOsUOmCRH1WVK6AmBwt9=bqQdg@mail.gmail.com>
	<4f4c67ce991b465c44e1deedddf5f04f@mail.gmail.com>
	<CAGWbJj8AWiC9qNx_wTWF3izjEXioE-VUhB91ry=yROh0Tq1V3A@mail.gmail.com>
Message-ID: <CAGWbJj8LNonZU53qLR8ajBL76OUk_d8STfjV4aLTxesfGztqPg@mail.gmail.com>

I'm attaching the complete grammar file.

I'd really appreciate if you take a look at it.
As is mentioned in the previous email, the following is the main change I made.

FLOAT
    : ('0'..'9')+
    (
        {input.LA(2) != '.'}? => '.' ('0'..'9')+ EXPONENT? {$type = FLOAT;}
        |  {$type = INT;}
    )
    |  ('0'..'9')+ EXPONENT
    ;

Thanks.


On Sun, Nov 13, 2011 at 11:06 PM, Jiwon Seo <jiwon at stanford.edu> wrote:
> I did the following change:
>
> FLOAT
> ? ?: ('0'..'9')+
> ? ?(
> ? ? ? ?{input.LA(2) != '.'}? => '.' ('0'..'9')+ EXPONENT? {$type = FLOAT;}
> ? ? ? ?| ?{$type = INT;}
> ? ?)
> ? ?| ?('0'..'9')+ EXPONENT
> ? ?;
>
> I tested it inside antlrworks, and very strangely, it works fine with
> the debugger(generates the right parse tree),
> but raises Mismatched token exception with the interpreter.
>
> Is the above right way to do this?
>
>
> On Sun, Nov 13, 2011 at 5:10 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> Please read the wiki articles - your rules conflict and there are simple
>> ways around this :)
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Jiwon Seo
>>> Sent: Sunday, November 13, 2011 9:58 AM
>>> To: Christian
>>> Cc: antlr-interest at antlr.org
>>> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>>>
>>> I attached a simplified grammar file with the problem.
>>> If you run the interpreter in antlrworks 1.4.3 the following will give
>>> an error
>>>
>>> int n:0..10
>>>
>>> But the following won't give an error:
>>>
>>> int n:0 .. 10 ? ?// white space before and after ..
>>>
>>>
>>> Note that my definition of FLOAT does not conflict with the range
>>> operator:
>>>
>>> FLOAT
>>> ? ? : ? ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
>>> ? ? | ? ('0'..'9')+ EXPONENT
>>> ? ? ;
>>>
>>>
>>> Thanks.
>>>
>>> On Sun, Nov 13, 2011 at 3:09 AM, Christian <chwchw at gmx.de> wrote:
>>> > Hello Jiwon,
>>> >
>>> > first, try to write a simple minimal grammar that represents your
>>> > usecase because I do not see anything that explains the behavior you
>>> > described. Maybe there are some other rules that influence the
>>> parsing.
>>> >
>>> > Tell us afterwards.
>>> >
>>> > Regards,
>>> > Christian
>>> >
>>> > Am 13.11.2011 10:31, schrieb Jiwon Seo:
>>> >> I'm trying to add range operator in my language, and I'm having a
>>> >> problem with it.
>>> >>
>>> >> The range operator is defined as following:
>>> >>
>>> >> range: INT '..' INT ;
>>> >>
>>> >> where INT is '0'..'9'+
>>> >>
>>> >> I do have FLOAT, but it is defined such that it does not have
>>> >> conflict with the range operator:
>>> >>
>>> >> FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
>>> >> ? ? ? ? ? ? | ('0'..'9')+ EXPONENT
>>> >> ? ? ? ? ? ;
>>> >>
>>> >> The thing is, if I use the range operator with white spaces before &
>>> >> after the dots(such as 10 .. 100), it parses fine But without the
>>> >> white spaces(such as 10..100), it says 'MismatchedTokenException' .
>>> >>
>>> >> Can anyone see why it's acting like that? I do not use dot ('.') in
>>> >> any other places.
>>> >>
>>> >> I'm using antlrworks 1.4.3 for writing grammar and testing it
>>> >> (interpreter & debugger)
>>> >>
>>> >> Thanks.
>>> >>
>>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> >> Unsubscribe:
>>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>> addres
>>> >> s
>>> >>
>>> >
>>> >
>>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> > Unsubscribe:
>>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>> address
>>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: simple.g
Type: application/octet-stream
Size: 1564 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111113/516fc660/attachment.obj 

From tu219717 at gmail.com  Mon Nov 14 00:17:42 2011
From: tu219717 at gmail.com (=?ISO-8859-2?Q?Tomasz_Uli=F1ski?=)
Date: Mon, 14 Nov 2011 09:17:42 +0100
Subject: [antlr-interest] All source codes which antlr-3.4-complete.jar is
	built from
Message-ID: <CAGBpm8ii8bjfQWcnxkYAAQJc5SpVFaPNcMuXbqSRbf6FeKUchA@mail.gmail.com>

Hi,
Could you give me links to sources which were used to build
antlr-3.4-complete.jar (available to download here:
http://www.antlr.org/download/antlr-3.4-complete.jar)
i.e.
Java runtime,
ST 3.2.1,
ANTLR v2,
ST 4.0.4.
I would like to import all sources to Eclipse and work with them.

Best,
Tomek

From mmatinlassi at icinetic.com  Mon Nov 14 00:31:00 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Mon, 14 Nov 2011 09:31:00 +0100
Subject: [antlr-interest] [C# target]about efficiency of the code
In-Reply-To: <CACTOmx_ZKqAVeEW+2=nogxXW2cZAV=cAqdtSUBNMZZxh-iuBXg@mail.gmail.com>
References: <CACTOmx_ZKqAVeEW+2=nogxXW2cZAV=cAqdtSUBNMZZxh-iuBXg@mail.gmail.com>
Message-ID: <000c01cca2a7$bdbed4a0$393c7de0$@icinetic.com>

Hi,

Maybe you can take a look how a walker is done in this example (download the
code and look at the methods in MessageContractAssembler.cs):
http://abdullin.com/journal/2010/10/12/teach-visual-studio-your-own-language
-easy.html

In addition, it is a good idea to simplify your AST before walking through
it. I have used rewrite rules. You might find this tutorial useful:
http://floris.briolas.nl/floris/2008/08/antlr-ast-and-rewriting-rules/

-mari

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.
org] On Behalf Of ???
Sent: Sunday, November 13, 2011 3:37 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C# target]about efficiency of the code

Hello all

I write a very small script language in C#. I have to use box and unbox
again and again in C# code to walk through the AST tree, and a lot of method
use reflection, so i worry about the code efficiency.

anyone have experience walk through tree in C#? how to do more effectively?
can give me some hints?

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From sobczyk.peter at gmail.com  Mon Nov 14 01:04:16 2011
From: sobczyk.peter at gmail.com (piotr.sobczyk)
Date: Mon, 14 Nov 2011 01:04:16 -0800 (PST)
Subject: [antlr-interest] Is it possible to debug tree rewriters
 (grammars translating AST to AST)?
In-Reply-To: <CAN45N10e1vgxBLzT0wPFfcReSwrbDp_Yro4KA9MUg=4aDFHGNA@mail.gmail.com>
References: <1321012079430-6985126.post@n2.nabble.com>
	<CAN45N10e1vgxBLzT0wPFfcReSwrbDp_Yro4KA9MUg=4aDFHGNA@mail.gmail.com>
Message-ID: <CAJP2aX2f0MDiWYgi85-VSAt2GhnYi_5hrr=DT0zB3dK4mcMAPg@mail.gmail.com>

Should I file this issue as a bug? I think antlr should rather display
error message in this case (when -debug is used) that debugging
TreeRewriters is not yet supported instead of generating parser
extending non existing class DebugTreeRewriter?!

2011/11/11 Eric [via ANTLR] <ml-node+s1301665n6986144h0 at n2.nabble.com>:
> On Fri, Nov 11, 2011 at 12:24 PM, Eric <[hidden email]> wrote:
>
>>
>>
>> On Fri, Nov 11, 2011 at 12:12 PM, Piotr Sobczyk <[hidden email]>wrote:
>>
>>> Thanks, Eric but did you read my question carefully? I have no
>>> problems with debugging a plain TreeGrammar and I know how to do it.
>>> My problems occur when I add output = AST and filter = true options to
>>> that grammar. Then the generated parser can't be even compiled by
>>> javac. You can copy-paste my minimal example, generate a parser from
>>> it and then try to compile the parser to see exactly what the problem
>>> is.
>>>
>>> 2011/11/11 Eric <[hidden email]>:
>>>
>>
>> Thanks for pointing that out. My mistake.
>>
>> I don't have an answer to that as I have never tryied that. If I find a
>> way to do it or can verify that it can't be done I will post something.
>>
>> Thanks, Eric
>>
>>
>>
>>
>>> >
>>> >
>>> > On Fri, Nov 11, 2011 at 6:47 AM, piotr.sobczyk <[hidden email]
>>> >
>>> > wrote:
>>> >>
>>> >> This is a very minimal example of something called TreeRewriter in
>>> Antlr:
>>> >>
>>> >> tree grammar Test;
>>> >>
>>> >> options {
>>> >> ? ?ASTLabelType = CommonTree;
>>> >> ? ?output = AST;
>>> >> ? ?filter = true;
>>> >> }
>>> >>
>>> >> tokens {
>>> >> TEST;
>>> >> }
>>> >>
>>> >> test
>>> >> ? ?:
>>> >> ? ?^(TEST .) -> ^(TEST)
>>> >> ? ?;
>>> >>
>>> >> The important chunks are options: output = AST and filter = true.
>>> >> These
>>> >> two
>>> >> combined together make a TreeRewriter (this is a class name that
>>> generated
>>> >> parser extends).
>>> >>
>>> >> Now please compile it with -debug flag like that:
>>> >>
>>> >> java -cp antlr-3.3-complete.jar org.antlr.Tool -debug Test.g
>>> >>
>>> >> What is generated in my case is a class defined like this:
>>> >>
>>> >> public class MyTreeRewriter extends DebugTreeRewriter{
>>> >>
>>> >> And here the problems start. There is no class DebugTreeRewriter
>>> defined
>>> >> in
>>> >> Antlr jar so I'm getting a compilation error. Moreover when I googled
>>> >> DebugTreeRewriter I didn't found any single trace of such class
>>> existence!
>>> >>
>>> >> I'm getting a lot more compilation errors because it seems generated
>>> class
>>> >> assumes that it inherited a lot of members from DebugTreeRewriter and
>>> they
>>> >> obviously can't be found.
>>> >>
>>> >> I'm starting to be suspicious that there is not support for debugging
>>> tree
>>> >> rewriters at all so far. Can someone confirm/deny this? Did anyone
>>> >> succeeded
>>> >> to debug a tree rewriter?
>>> >
>>> >
>>> > Yes.
>>> >
>>> > See http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554901
>>> >
>>> >
>>> >>
>>> >> --
>>> >> View this message in context:
>>> >>
>>>
>>> http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6985126.html
>>> >> Sent from the ANTLR mailing list archive at Nabble.com.
>>> >>
>>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> >> Unsubscribe:
>>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> >
>>> >
>>>
>>
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
> If you reply to this email, your message will be added to the discussion
> below:
> http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6986144.html
> To unsubscribe from Is it possible to debug tree rewriters (grammars
> translating AST to AST)?, click here.
> See how NAML generates this email


--
View this message in context: http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6991792.html
Sent from the ANTLR mailing list archive at Nabble.com.

From lizhipeng at gmail.com  Mon Nov 14 01:14:12 2011
From: lizhipeng at gmail.com (=?GB2312?B?wO7WvsX0?=)
Date: Mon, 14 Nov 2011 17:14:12 +0800
Subject: [antlr-interest] [C# target]about efficiency of the code
In-Reply-To: <000c01cca2a7$bdbed4a0$393c7de0$@icinetic.com>
References: <CACTOmx_ZKqAVeEW+2=nogxXW2cZAV=cAqdtSUBNMZZxh-iuBXg@mail.gmail.com>
	<000c01cca2a7$bdbed4a0$393c7de0$@icinetic.com>
Message-ID: <CACTOmx9jqkxiym-kwyfBr6Y42ANT07jAOhFPGbjGFQxtYKENMQ@mail.gmail.com>

thanks for your information!
thank you

? 2011-11-14 ??4:30?"Mari Matinlassi" <mmatinlassi at icinetic.com>???

Hi,

Maybe you can take a look how a walker is done in this example (download the
code and look at the methods in MessageContractAssembler.cs):
http://abdullin.com/journal/2010/10/12/teach-visual-studio-your-own-language
-easy.html

In addition, it is a good idea to simplify your AST before walking through
it. I have used rewrite rules. You might find this tutorial useful:
http://floris.briolas.nl/floris/2008/08/antlr-ast-and-rewriting-rules/

-mari

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.
org] On Behalf Of ???
Sent: Sunday, November 13, 2011 3:37 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C# target]about efficiency of the code


Hello all

I write a very small script language in C#. I have to use box and unbox
again and again ...
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From researcher0x00 at gmail.com  Mon Nov 14 04:46:38 2011
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 14 Nov 2011 07:46:38 -0500
Subject: [antlr-interest] All source codes which antlr-3.4-complete.jar
 is built from
In-Reply-To: <CAGBpm8ii8bjfQWcnxkYAAQJc5SpVFaPNcMuXbqSRbf6FeKUchA@mail.gmail.com>
References: <CAGBpm8ii8bjfQWcnxkYAAQJc5SpVFaPNcMuXbqSRbf6FeKUchA@mail.gmail.com>
Message-ID: <CAN45N10iKKRjzkVw9mjPjN95xKhVeJMzPxbOG3ukO1ubcGCJ3g@mail.gmail.com>

Hi Tomasz,

See http://antlr.org/download  Note: This is not the same as the link to
the downloads page, you have to enter this URL by hand.

You want *antlr-3.4.tar.gz* <http://antlr.org/download/antlr-3.4.tar.gz>

FYI, if you need STLexer.tokens, I only found  it at
https://gitbub.com/antlr/stringtemplate4/

Eric
On Mon, Nov 14, 2011 at 3:17 AM, Tomasz Uli?ski <tu219717 at gmail.com> wrote:

> Hi,
> Could you give me links to sources which were used to build
> antlr-3.4-complete.jar (available to download here:
> http://www.antlr.org/download/antlr-3.4-complete.jar)
> i.e.
> Java runtime,
> ST 3.2.1,
> ANTLR v2,
> ST 4.0.4.
> I would like to import all sources to Eclipse and work with them.
>
> Best,
> Tomek
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Mon Nov 14 04:56:07 2011
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 14 Nov 2011 07:56:07 -0500
Subject: [antlr-interest] Is it possible to debug tree rewriters
 (grammars translating AST to AST)?
In-Reply-To: <CAJP2aX2f0MDiWYgi85-VSAt2GhnYi_5hrr=DT0zB3dK4mcMAPg@mail.gmail.com>
References: <1321012079430-6985126.post@n2.nabble.com>
	<CAN45N10e1vgxBLzT0wPFfcReSwrbDp_Yro4KA9MUg=4aDFHGNA@mail.gmail.com>
	<CAJP2aX2f0MDiWYgi85-VSAt2GhnYi_5hrr=DT0zB3dK4mcMAPg@mail.gmail.com>
Message-ID: <CAN45N118D=VSvD4R7XkiRjzdvKoWK8uWfB-E=AuUcPEQj=zHrQ@mail.gmail.com>

Hi,

Only a few people can update the ANTLR bug list at
http://www.antlr.org/jira/browse/ANTLR

I am not one of them.

Currently the best way to submit a bug report is to submit it here. I try
to put the word "bug", the name of the software, i.e org.antlr.Tool,
ANTLRWorks, String Template, and the version in the title of the e-mail so
it is know to be a bug report.

However, ANTLR 3.x is now in maintenance mode and this probably will not
get fixed for ANTLR 3.x. ANTLR 4.x should be out in a month or so, and if
the problem exist for v4, then I would definitely report it here with a
minimal reproducible example if possible.

Eric

On Mon, Nov 14, 2011 at 4:04 AM, piotr.sobczyk <sobczyk.peter at gmail.com>wrote:

> Should I file this issue as a bug? I think antlr should rather display
> error message in this case (when -debug is used) that debugging
> TreeRewriters is not yet supported instead of generating parser
> extending non existing class DebugTreeRewriter?!
>
> 2011/11/11 Eric [via ANTLR] <ml-node+s1301665n6986144h0 at n2.nabble.com>:
> > On Fri, Nov 11, 2011 at 12:24 PM, Eric <[hidden email]> wrote:
> >
> >>
> >>
> >> On Fri, Nov 11, 2011 at 12:12 PM, Piotr Sobczyk <[hidden email]>wrote:
> >>
> >>> Thanks, Eric but did you read my question carefully? I have no
> >>> problems with debugging a plain TreeGrammar and I know how to do it.
> >>> My problems occur when I add output = AST and filter = true options to
> >>> that grammar. Then the generated parser can't be even compiled by
> >>> javac. You can copy-paste my minimal example, generate a parser from
> >>> it and then try to compile the parser to see exactly what the problem
> >>> is.
> >>>
> >>> 2011/11/11 Eric <[hidden email]>:
> >>>
> >>
> >> Thanks for pointing that out. My mistake.
> >>
> >> I don't have an answer to that as I have never tryied that. If I find a
> >> way to do it or can verify that it can't be done I will post something.
> >>
> >> Thanks, Eric
> >>
> >>
> >>
> >>
> >>> >
> >>> >
> >>> > On Fri, Nov 11, 2011 at 6:47 AM, piotr.sobczyk <[hidden email]
> >>> >
> >>> > wrote:
> >>> >>
> >>> >> This is a very minimal example of something called TreeRewriter in
> >>> Antlr:
> >>> >>
> >>> >> tree grammar Test;
> >>> >>
> >>> >> options {
> >>> >>    ASTLabelType = CommonTree;
> >>> >>    output = AST;
> >>> >>    filter = true;
> >>> >> }
> >>> >>
> >>> >> tokens {
> >>> >> TEST;
> >>> >> }
> >>> >>
> >>> >> test
> >>> >>    :
> >>> >>    ^(TEST .) -> ^(TEST)
> >>> >>    ;
> >>> >>
> >>> >> The important chunks are options: output = AST and filter = true.
> >>> >> These
> >>> >> two
> >>> >> combined together make a TreeRewriter (this is a class name that
> >>> generated
> >>> >> parser extends).
> >>> >>
> >>> >> Now please compile it with -debug flag like that:
> >>> >>
> >>> >> java -cp antlr-3.3-complete.jar org.antlr.Tool -debug Test.g
> >>> >>
> >>> >> What is generated in my case is a class defined like this:
> >>> >>
> >>> >> public class MyTreeRewriter extends DebugTreeRewriter{
> >>> >>
> >>> >> And here the problems start. There is no class DebugTreeRewriter
> >>> defined
> >>> >> in
> >>> >> Antlr jar so I'm getting a compilation error. Moreover when I
> googled
> >>> >> DebugTreeRewriter I didn't found any single trace of such class
> >>> existence!
> >>> >>
> >>> >> I'm getting a lot more compilation errors because it seems generated
> >>> class
> >>> >> assumes that it inherited a lot of members from DebugTreeRewriter
> and
> >>> they
> >>> >> obviously can't be found.
> >>> >>
> >>> >> I'm starting to be suspicious that there is not support for
> debugging
> >>> tree
> >>> >> rewriters at all so far. Can someone confirm/deny this? Did anyone
> >>> >> succeeded
> >>> >> to debug a tree rewriter?
> >>> >
> >>> >
> >>> > Yes.
> >>> >
> >>> > See http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554901
> >>> >
> >>> >
> >>> >>
> >>> >> --
> >>> >> View this message in context:
> >>> >>
> >>>
> >>>
> http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6985126.html
> >>> >> Sent from the ANTLR mailing list archive at Nabble.com.
> >>> >>
> >>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> >> Unsubscribe:
> >>> >>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>> >
> >>> >
> >>>
> >>
> >>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > ________________________________
> > If you reply to this email, your message will be added to the discussion
> > below:
> >
> http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6986144.html
> > To unsubscribe from Is it possible to debug tree rewriters (grammars
> > translating AST to AST)?, click here.
> > See how NAML generates this email
>
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Is-it-possible-to-debug-tree-rewriters-grammars-translating-AST-to-AST-tp6985126p6991792.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sobczyk.peter at gmail.com  Mon Nov 14 06:21:01 2011
From: sobczyk.peter at gmail.com (piotr.sobczyk)
Date: Mon, 14 Nov 2011 06:21:01 -0800 (PST)
Subject: [antlr-interest] ANTLR Java Bytecode Generator Example
In-Reply-To: <4D1BD09D.7000409@cse.msu.edu>
References: <AANLkTikKBgjOFiy9iXoonBzznA9e0qHtt7D4dyA0_Q6w@mail.gmail.com>
	<AANLkTinqA1zqixKtLmAznMgzg_UZC2q6Rq+3gPB-eow1@mail.gmail.com>
	<4D1BD09D.7000409@cse.msu.edu>
Message-ID: <1321280461733-6992632.post@n2.nabble.com>

The downloadable code is still not fixed a year later :-(.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-Java-Bytecode-Generator-Example-tp5874293p6992632.html
Sent from the ANTLR mailing list archive at Nabble.com.

From a.moderacja at gmail.com  Mon Nov 14 06:49:35 2011
From: a.moderacja at gmail.com (Borneq)
Date: Mon, 14 Nov 2011 15:49:35 +0100
Subject: [antlr-interest] Efficient Strong LOOK1k Algorithm on GLA.
Message-ID: <CANyn1kFjO-gg5RMxt6y5M+nU7OOCiRdRxNEQ3rFUzxfS7X8r7g@mail.gmail.com>

I am reading parr.phd.thesis.pdf. On page 88(pdf:99) is this
algorithm. I don't know about some things:
var cycle: nonterminal; nonterminal like S,T,F? but is cycle1 = not-a-cycle
is-cycle-to-current-node is a flag?
In function retrieve-from-cache:
is called functions:
imaginary-terminal-to-nonterminal,only_element_off,is-entry-node,entry-node-of
etc also in store-into-cache.
To analyse this functions I need implementation in source. Where in
ANTLR source are this functions? This functions are implemented? I
search in LookaheadSet.java but not found.

From jimi at temporal-wave.com  Mon Nov 14 08:37:29 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 14 Nov 2011 08:37:29 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CACJVtdO82Xrr8+D1zJ08KqMj8R5C45QjanuGRkEECRf5YszOPg@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<CAOrgODbdZX3Xp2u-2HWdgUrujHbi9gAFyx63TRsbT+wD7y8NDQ@mail.gmail.com>
	<CAGWbJj9g5Q5SFCBPnaai=QZuOt_PK4eFcbAT-237Vdh-XfjyVg@mail.gmail.com>
	<CAOrgODaYRqY3BM22gND_VxunOAJEfa_yF84N8B0q04QsEAUifg@mail.gmail.com>
	<CAGWbJj8kMj9_m2giJHwMCwPy_3hAtMjn8ZMvgTAGF91yQ6tH6w@mail.gmail.com>
	<4EC0557E.4060603@gmail.com>	<CACJVtdPj=VpvOf=3pYvK9V8uXbWbUYPBn6hfeHefHZ0E4gptvw@mail.gmail.com>
	<5e2cdf03e2d6eedc808939dbcb20ab86@mail.gmail.com>
	<CACJVtdO82Xrr8+D1zJ08KqMj8R5C45QjanuGRkEECRf5YszOPg@mail.gmail.com>
Message-ID: <ec6ca8f263754fa77229fa0e0ecfef18@mail.gmail.com>

Fair enough ;)

Jim

> -----Original Message-----
> From: Michael Bedward [mailto:michael.bedward at gmail.com]
> Sent: Sunday, November 13, 2011 7:31 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>
> Ah, I wouldn't trouble yourself Jim. I don't remember clearly but it
> was most likely a combination of laziness and ignorance on my part.
>
> As post-hoc rationalization, I note that the colon is used as the
> sequence operator in the R stats system, in which I do a lot of
> scripting, so the syntax seemed natural to me. Whether it does to
> anyone using my language (jiffle image scripting) I've no idea.
>
> Michael
>
> On 14 November 2011 12:19, Jim Idle <jimi at temporal-wave.com> wrote:
> > I am never sure why this causes so many people so much confusion.
> > Especially when I published a cut and paste answer to it. Care to say
> > why you thought it easier to abandon the idea? I am genuinely
> > interested in the answer.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Michael Bedward
> >> Sent: Sunday, November 13, 2011 4:36 PM
> >> To: Jiwon Seo; antlr-interest at antlr.org interest
> >> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
> >>
> >> When dealing with the same issue a while ago I decided it was so
> much
> >> easier to cheat and use ":" rather than ".." to indicate a range :)
> >>
> >> Michael
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >

From jimi at temporal-wave.com  Mon Nov 14 08:38:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 14 Nov 2011 08:38:32 -0800
Subject: [antlr-interest] Using range operator (INT .. INT)
In-Reply-To: <CAGWbJj8AWiC9qNx_wTWF3izjEXioE-VUhB91ry=yROh0Tq1V3A@mail.gmail.com>
References: <CAGWbJj80fxxbi5hep--UouMYGmNmWRqaHJ-7TDi7NpcwHaFVYg@mail.gmail.com>
	<4EBFA583.30603@gmx.de>
	<CAGWbJj9+fxeMbB74seRqHKzqQOsUOmCRH1WVK6AmBwt9=bqQdg@mail.gmail.com>
	<4f4c67ce991b465c44e1deedddf5f04f@mail.gmail.com>
	<CAGWbJj8AWiC9qNx_wTWF3izjEXioE-VUhB91ry=yROh0Tq1V3A@mail.gmail.com>
Message-ID: <cb8b217ebd0663273d0f02d33744de78@mail.gmail.com>

Yes - that is fine. The interpreter is not able to deal with the predicate
is all :)

Jim

> -----Original Message-----
> From: seojiwon at gmail.com [mailto:seojiwon at gmail.com] On Behalf Of Jiwon
> Seo
> Sent: Sunday, November 13, 2011 11:06 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
>
> I did the following change:
>
> FLOAT
>     : ('0'..'9')+
>     (
>         {input.LA(2) != '.'}? => '.' ('0'..'9')+ EXPONENT? {$type =
> FLOAT;}
>         |  {$type = INT;}
>     )
>     |  ('0'..'9')+ EXPONENT
>     ;
>
> I tested it inside antlrworks, and very strangely, it works fine with
> the debugger(generates the right parse tree), but raises Mismatched
> token exception with the interpreter.
>
> Is the above right way to do this?
>
>
> On Sun, Nov 13, 2011 at 5:10 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> > Please read the wiki articles - your rules conflict and there are
> > simple ways around this :)
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Jiwon Seo
> >> Sent: Sunday, November 13, 2011 9:58 AM
> >> To: Christian
> >> Cc: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Using range operator (INT .. INT)
> >>
> >> I attached a simplified grammar file with the problem.
> >> If you run the interpreter in antlrworks 1.4.3 the following will
> >> give an error
> >>
> >> int n:0..10
> >>
> >> But the following won't give an error:
> >>
> >> int n:0 .. 10 ? ?// white space before and after ..
> >>
> >>
> >> Note that my definition of FLOAT does not conflict with the range
> >> operator:
> >>
> >> FLOAT
> >> ? ? : ? ('0'..'9')+ '.' ('0'..'9')+ EXPONENT?
> >> ? ? | ? ('0'..'9')+ EXPONENT
> >> ? ? ;
> >>
> >>
> >> Thanks.
> >>
> >> On Sun, Nov 13, 2011 at 3:09 AM, Christian <chwchw at gmx.de> wrote:
> >> > Hello Jiwon,
> >> >
> >> > first, try to write a simple minimal grammar that represents your
> >> > usecase because I do not see anything that explains the behavior
> >> > you described. Maybe there are some other rules that influence the
> >> parsing.
> >> >
> >> > Tell us afterwards.
> >> >
> >> > Regards,
> >> > Christian
> >> >
> >> > Am 13.11.2011 10:31, schrieb Jiwon Seo:
> >> >> I'm trying to add range operator in my language, and I'm having a
> >> >> problem with it.
> >> >>
> >> >> The range operator is defined as following:
> >> >>
> >> >> range: INT '..' INT ;
> >> >>
> >> >> where INT is '0'..'9'+
> >> >>
> >> >> I do have FLOAT, but it is defined such that it does not have
> >> >> conflict with the range operator:
> >> >>
> >> >> FLOAT: ('0'..'9')+'.'('0'..'9')+ EXPONENT?
> >> >> ? ? ? ? ? ? | ('0'..'9')+ EXPONENT
> >> >> ? ? ? ? ? ;
> >> >>
> >> >> The thing is, if I use the range operator with white spaces
> before
> >> >> & after the dots(such as 10 .. 100), it parses fine But without
> >> >> the white spaces(such as 10..100), it says
> 'MismatchedTokenException' .
> >> >>
> >> >> Can anyone see why it's acting like that? I do not use dot ('.')
> >> >> in any other places.
> >> >>
> >> >> I'm using antlrworks 1.4.3 for writing grammar and testing it
> >> >> (interpreter & debugger)
> >> >>
> >> >> Thanks.
> >> >>
> >> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> >> Unsubscribe:
> >> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> addres
> >> >> s
> >> >>
> >> >
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >

From jimi at temporal-wave.com  Mon Nov 14 08:41:50 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 14 Nov 2011 08:41:50 -0800
Subject: [antlr-interest] All source codes which antlr-3.4-complete.jar
 is built from
In-Reply-To: <CAGBpm8ii8bjfQWcnxkYAAQJc5SpVFaPNcMuXbqSRbf6FeKUchA@mail.gmail.com>
References: <CAGBpm8ii8bjfQWcnxkYAAQJc5SpVFaPNcMuXbqSRbf6FeKUchA@mail.gmail.com>
Message-ID: <d1d88e62761b45613dc0367bdca6c74b@mail.gmail.com>

Open the main ANTLR project as a Maven project in Eclipse (it has good
integration now) and then it can download the source code for you.
Otherwise the complete source jar is available in the downloads section of
the web site.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Tomasz Ulinski
> Sent: Monday, November 14, 2011 12:18 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] All source codes which antlr-3.4-complete.jar
> is built from
>
> Hi,
> Could you give me links to sources which were used to build antlr-3.4-
> complete.jar (available to download here:
> http://www.antlr.org/download/antlr-3.4-complete.jar)
> i.e.
> Java runtime,
> ST 3.2.1,
> ANTLR v2,
> ST 4.0.4.
> I would like to import all sources to Eclipse and work with them.
>
> Best,
> Tomek
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jarrod at vertigrated.com  Mon Nov 14 20:47:10 2011
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Mon, 14 Nov 2011 23:47:10 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
Message-ID: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>

I am trying to write a parser for the following syntax

hypotenuse(a,b) ->
  sqr(x) -> x * x,
  sqr(sqr(b) + sqr(b)).

print(hypotenuse(2,3)).

Where , and . are my statement separator and statement eol respectively.

I am having an impossible time trying to figure out how to specify the
function rule to allow me to nest functions inside of other functions
without running afoul of ambiguities warnings.

23:37:47] warning(200): funcy.g:10:11: Decision can match input such as
"ID" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[23:37:47] error(201): funcy.g:10:11: The following alternatives can never
be matched: 2


I really want to be able to use the above syntax without having to pepper
the code with keywords like `func` or `var` etc.

Here is my grammar, are there any ways to resolve these ambiguities with
predicates of some sort that I haven't been able to figure out?

I have read up on Google about them, but I can't get them to work with the
parser rules to remove the ambiguities.

grammar funcy;

options {
    output = AST;
    language = Java;
}
program : (statement'.')* ;

statement : expression
          | assignment
          ;

assignment : ID '->' expression
           | ATOM '->' ( string | number )
           | function '->' statement ((','statement)=> ',' statement)* ;

args : expression (',' expression)*;

function : ID '(' args ')' ;

string : UNICODE_STRING;
number : HEX_NUMBER
       | (INTEGER '.' INTEGER)=> INTEGER '.' INTEGER
       | INTEGER;

// expressions

term : '(' expression ')'
     | number
     | string
     | function
     | ID
     | ATOM
     ;

negation : '!'* term;

unary : ('+'|'-')* negation;

mult : unary (('*' | '/' | ('%'|'mod') ) unary)*;

add : mult (('+' | '-') mult)*;

relation : add (('=' | '!=' | '<' | '<=' | '>=' | '>') add)*;
expression : relation (('&&' | '||') relation)*;

// LEXER ================================================================

HEX_NUMBER : '0x' HEX_DIGIT+;

INTEGER : DIGIT+;

UNICODE_STRING : '"' ( ESC | ~('\u0000'..'\u001f' | '\\' | '\"' ) )* '"'
                ;

WS : (' '|'\n'|'\r'|'\t')+ {$channel = HIDDEN;} ; // ignore whitespace

fragment
ESC : '\\' ( UNI_ESC |'b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\' );

fragment
UNI_ESC : 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT;

fragment
HEX_DIGIT : (DIGIT|'a'..'f'|'A'..'F') ;

fragment
DIGIT : ('0'..'9');

ATOM : (('A'..'Z'|'_')+)=> ('A'..'Z'|'0'..'9'|'_')+;

ID : ('a'..'z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

COMMENT : '/*' .* '*/' {$channel = HIDDEN;};

From zwqcn2002 at gmail.com  Mon Nov 14 20:47:31 2011
From: zwqcn2002 at gmail.com (weiquan zhou)
Date: Tue, 15 Nov 2011 12:47:31 +0800
Subject: [antlr-interest] does ANTLR csharp support 64bit?
Message-ID: <CADt30XovEumQBa2BFdRgmczf49putTNHWSYdJarn_=mMGTddXg@mail.gmail.com>

Hi,
   I am tring to use ANTLR in one of our tools, our tools is 64bit
application(not 32bit app running under WOW64 on Windows OS).  I am
wondering where i could download ANTLR csharp which is 64bit or anyCPU
platform? or should i build by myself? anyone ever successfully did this? i
noticed that several .jar files needed even in ANTLR Csharp

many thanks,
watson

From bkiers at gmail.com  Mon Nov 14 22:35:58 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 15 Nov 2011 07:35:58 +0100
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
Message-ID: <CAOrgODZFfPnaUivP=EV25J9y1SmY8M4QEZTR7yACyyDTPEJwvQ@mail.gmail.com>

For reference, also asked here:
http://stackoverflow.com/questions/8125141/how-to-get-rid-of-the-following-multiple-alternatives-warnings-in-my-antlr3-gram
http://stackoverflow.com/questions/8127492/decision-can-match-input-such-as-id-using-multiple-alternatives-1-2


On Tue, Nov 15, 2011 at 5:47 AM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

> I am trying to write a parser for the following syntax
>
> hypotenuse(a,b) ->
>  sqr(x) -> x * x,
>  sqr(sqr(b) + sqr(b)).
>
> print(hypotenuse(2,3)).
>
> Where , and . are my statement separator and statement eol respectively.
>
> I am having an impossible time trying to figure out how to specify the
> function rule to allow me to nest functions inside of other functions
> without running afoul of ambiguities warnings.
>
> 23:37:47] warning(200): funcy.g:10:11: Decision can match input such as
> "ID" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [23:37:47] error(201): funcy.g:10:11: The following alternatives can never
> be matched: 2
>
>
> I really want to be able to use the above syntax without having to pepper
> the code with keywords like `func` or `var` etc.
>
> Here is my grammar, are there any ways to resolve these ambiguities with
> predicates of some sort that I haven't been able to figure out?
>
> I have read up on Google about them, but I can't get them to work with the
> parser rules to remove the ambiguities.
>
> grammar funcy;
>
> options {
>    output = AST;
>    language = Java;
> }
> program : (statement'.')* ;
>
> statement : expression
>          | assignment
>          ;
>
> assignment : ID '->' expression
>           | ATOM '->' ( string | number )
>           | function '->' statement ((','statement)=> ',' statement)* ;
>
> args : expression (',' expression)*;
>
> function : ID '(' args ')' ;
>
> string : UNICODE_STRING;
> number : HEX_NUMBER
>       | (INTEGER '.' INTEGER)=> INTEGER '.' INTEGER
>       | INTEGER;
>
> // expressions
>
> term : '(' expression ')'
>     | number
>     | string
>     | function
>     | ID
>     | ATOM
>     ;
>
> negation : '!'* term;
>
> unary : ('+'|'-')* negation;
>
> mult : unary (('*' | '/' | ('%'|'mod') ) unary)*;
>
> add : mult (('+' | '-') mult)*;
>
> relation : add (('=' | '!=' | '<' | '<=' | '>=' | '>') add)*;
> expression : relation (('&&' | '||') relation)*;
>
> // LEXER ================================================================
>
> HEX_NUMBER : '0x' HEX_DIGIT+;
>
> INTEGER : DIGIT+;
>
> UNICODE_STRING : '"' ( ESC | ~('\u0000'..'\u001f' | '\\' | '\"' ) )* '"'
>                ;
>
> WS : (' '|'\n'|'\r'|'\t')+ {$channel = HIDDEN;} ; // ignore whitespace
>
> fragment
> ESC : '\\' ( UNI_ESC |'b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\' );
>
> fragment
> UNI_ESC : 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT;
>
> fragment
> HEX_DIGIT : (DIGIT|'a'..'f'|'A'..'F') ;
>
> fragment
> DIGIT : ('0'..'9');
>
> ATOM : (('A'..'Z'|'_')+)=> ('A'..'Z'|'0'..'9'|'_')+;
>
> ID : ('a'..'z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>
> COMMENT : '/*' .* '*/' {$channel = HIDDEN;};
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From yusunn at gmail.com  Tue Nov 15 03:06:05 2011
From: yusunn at gmail.com (yushang)
Date: Tue, 15 Nov 2011 19:06:05 +0800
Subject: [antlr-interest] ANTLRWorks supporting of import
Message-ID: <CAHHgPePQm4nd4-om759VoCYnFebUQMqw8gb79zjBpk5MP6t99w@mail.gmail.com>

Hi everyone,
Does ANTLRWorks support the import command? When I open a grammar with
import command ANTLRWorks complain something like "Undefined import
..."
Thanks in advance

From sharwell at pixelminegames.com  Tue Nov 15 06:44:40 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 15 Nov 2011 08:44:40 -0600
Subject: [antlr-interest] does ANTLR csharp support 64bit?
In-Reply-To: <CADt30XovEumQBa2BFdRgmczf49putTNHWSYdJarn_=mMGTddXg@mail.gmail.com>
References: <CADt30XovEumQBa2BFdRgmczf49putTNHWSYdJarn_=mMGTddXg@mail.gmail.com>
Message-ID: <027801cca3a5$1bbc5340$5334f9c0$@pixelminegames.com>

Hi Watson,

All of the current C# releases are AnyCPU builds.

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of weiquan zhou
Sent: Monday, November 14, 2011 10:48 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] does ANTLR csharp support 64bit?

Hi,
   I am tring to use ANTLR in one of our tools, our tools is 64bit
application(not 32bit app running under WOW64 on Windows OS).  I am
wondering where i could download ANTLR csharp which is 64bit or anyCPU
platform? or should i build by myself? anyone ever successfully did this? i
noticed that several .jar files needed even in ANTLR Csharp

many thanks,
watson

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From douglasgodfrey at gmail.com  Tue Nov 15 07:49:25 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 15 Nov 2011 11:49:25 -0400
Subject: [antlr-interest] Fwd:  Common Prefix question
In-Reply-To: <CAN45N10VsApYD+QTqX2tj_1e-DrJCB2+5D=gV1Fe+dhsqQ9PXA@mail.gmail.com>
Message-ID: <CAE801AB.7A8D%douglasgodfrey@gmail.com>

the lexer rule RESULT must come before the rule R.
the way you specify them, RESULT will never be matched and Result in the
input text will give an error.

Lexer rules must be ordered so that all rules with a common prefix are
ordered longest first.

On 11/10/11 11:05 PM, "Eric" <researcher0x00 at gmail.com> wrote:

>---------- Forwarded message ----------
>From: Eric <researcher0x00 at gmail.com>
>Date: Thu, Nov 10, 2011 at 9:55 PM
>Subject: Re: [antlr-interest] Common Prefix question
>To: Alexander Kaiser <alexander.g.kaiser at gmail.com>
>
>
>
>
>On Mon, Nov 7, 2011 at 3:56 PM, Alexander Kaiser <
>alexander.g.kaiser at gmail.com> wrote:
>
>> Hi,
>>
>> I am new to antlr (antlr3) and struggling with lexing common prefixes.
>> My simple grammar:
>>
>> grammar simple;
>>
>>
>> R : 'R';
>> E : 'e';
>> D : '1';
>> RESULT : 'Result';
>>
>>
>> expr : ( RESULT | R E D )  EOF;
>>
>>
>> On input 'Result' I expect token RESULT, and on input Re1 I expect
>>tokens R
>> E D but input 'Re1' only throws NoViableAltException.
>> I searched for info 'antlr common prefixes' on the web and tried
>>increasing
>> k, lookahead predicates ..., things like
>>
>> RESULT options{filter=true;} : 'Result';
>>
>>
>>
>> , but to no avail. I would be very much obliged if anyone could give me
>>a
>> hint.
>>
>
>Hi Alexander,
>
>Usually you want to convert yoru input into an AST and make the lexer and
>parser as simple as possible. A common mistake of beginners is to try and
>modify the lexer or parser into doing work that should be done with the
>AST. In this case, the goal is to end of with one of two tokens, either
>RED
>or RESULT. While it may be possible to contrive the lexer and parser into
>doing this, it is much easier to do with AST rewrites.
>
>Here is an example.
>
>grammar mail_004;
>options
>{
> output=AST;
>}
>tokens
>{
> RESULT;
> RED;
>}
>s : prefix suffix
> EOF;
>prefix  : R E
> ;
>
>suffix : D  -> RED
> | SULT  -> RESULT
> ;
>R : 'R';
>E : 'e';
>D : 'd';
>SULT : 'sult';
>
>If AST and rewrites are new concepts to you, then you should get a copy of
>"The Definitive ANTLR Reference" and read it. You can find some info on
>the
>website, but there is no substitute for the book.
>
>
>Eric
>
>
>
>
>
>>
>>
>>
>> --
>> Alexander
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From douglasgodfrey at gmail.com  Tue Nov 15 08:44:49 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 15 Nov 2011 12:44:49 -0400
Subject: [antlr-interest] init bug
In-Reply-To: <CAHHgPeP-i2KOVnQdky7UR9xko=yDRRP_0CwsornoHE1annKgmw@mail.gmail.com>
Message-ID: <CAE80E5B.7A95%douglasgodfrey@gmail.com>

create a testParser.cpp file which consists of 1 line
#include "testParser.c"

When your project compiles testParser.cpp the generated code for declaring
flag will work.

NOTE: you cannot use the variable flag in any predicate or production
before the first token is consumed.
      code before the first token may be "hoisted" into the parent rule
and the local variable flag will
      not be defined in the parent rule context.

On 11/7/11 9:26 AM, "yushang" <yusunn at gmail.com> wrote:

>Hi , everyone,
>I found varibale put in init section will raise compiler error , for
>example
>test
>@init{
>int flag=0;
>}
> :  expr -> ^(EXPR expr)
> ;
>will generate following code fragment
>...
>root_0 = NULL;
>int flag = 0;
>...
>this will be error by C compiler , because C language do not allow
>variable
>declaration middle of block.
>BTW I'm using ANTLR v3.4 and C runtime v3.4
>Many thanks
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From douglasgodfrey at gmail.com  Tue Nov 15 08:49:45 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 15 Nov 2011 12:49:45 -0400
Subject: [antlr-interest] missing MATCHRANGE macro
In-Reply-To: <4EB843D6.9040809@acm.org>
Message-ID: <CAE80FCD.7A9D%douglasgodfrey@gmail.com>

try using the Number lexer rule from the Sun Java lexer posted on the
Antlr site.

The Number rule handles Float and Int as well as hex and octal values.

The resulting tokens are Float or Int.




On 11/7/11 4:47 PM, "John B. Brodie" <jbb at acm.org> wrote:

>On 11/07/2011 12:32 PM, Jim Idle wrote:
>> Better to do this:
>> 
>> fragment FLOAT;
>> INT : '0'..'9'+ ( '.' '0'..'9'+ { $type = FLOAT; } | ) ;
>
>and of course the above REQUIRES at least one digit to the left of the
>decimal place on FLOAT. which is not what the OP had. but is easily
>fixed, i believe, as:
>
>FLOAT : '.' '0'..'9'+ ;
>INT : '0'..'9'+ ( '.' '0'..'9'+ { $type = FLOAT; } )? ;
>
>(note that i also replaced the empty alternative with use of the `?`
>meta-operator. i think the meta-operator is stylistically clearer, but
>maybe there is some other reason not to use it?)
>
>> 
>> Cheers,
>> 
>> Jim
>> 
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of yushang
>>> Sent: Monday, November 07, 2011 2:17 AM
>>> To: antlr-interest at antlr.org
>>> Subject: Re: [antlr-interest] missing MATCHRANGE macro
>>>
>>> Hi,
>>> I think I've found the reason . I've written a rule as follow
>>> numeric_literal
>>>     :    '0'..'9' ('0'..'9')*
>>>     |    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
>>>     ;
>>> which will be translated to MATCHRANGE in Parser , if I change it to
>>> this :
>>> numeric_literal
>>>     :    INT
>>>     |    FLOAT
>>>     ;
>>> INT
>>>     :    '0'..'9' ('0'..'9')*
>>>     ;
>>> FLOAT
>>>     :    ('0'..'9')* '.' '0'..'9' ('0'..'9')*
>>>     ;
>>> will OK. Many thanks.
>>>
>>> 2011/11/5 yushang <yusunn at gmail.com>
>>>
>>>> Hi , I'm using ANTLR v3 C runtime and found this macro is missing
>>> from
>>>> the generated *Parser.c and *Parser.h . This macro can be found in
>>>> *Lexer.c file . Is this a bug ?
>>>> thanks in advance .
>>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From jarrod at vertigrated.com  Tue Nov 15 14:08:58 2011
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Tue, 15 Nov 2011 17:08:58 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CAOrgODZFfPnaUivP=EV25J9y1SmY8M4QEZTR7yACyyDTPEJwvQ@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<CAOrgODZFfPnaUivP=EV25J9y1SmY8M4QEZTR7yACyyDTPEJwvQ@mail.gmail.com>
Message-ID: <CANV=aGC4+axNb6r2tNVD1PbnKsHMe8piLU57awpqX+mY--9TGg@mail.gmail.com>

Thanks to Bart's persistence in explaining where I was going astray, I
understand where my logic error was with my ambiguity being at the end of
the my `function` definition.

My question now is, how do I define a nested function without introducing a
bunch of cruft, like braces or other block identifiers to the function
definition.

I am looking at other languages for guidance. Any suggestions would be
greatly appreciated.
-- 
Jarrod Roberson

From jbb at acm.org  Tue Nov 15 14:46:45 2011
From: jbb at acm.org (John B. Brodie)
Date: Tue, 15 Nov 2011 17:46:45 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
Message-ID: <4EC2EBD5.3030307@acm.org>

Greetings!

I think you have issues with your function, number, and ATOM rules. see
below...

I have attached my complete, modified, grammar that successfully parses
your input sample.

On 11/14/2011 11:47 PM, Jarrod Roberson wrote:
> I am trying to write a parser for the following syntax
> 
> hypotenuse(a,b) ->
>   sqr(x) -> x * x,
>   sqr(sqr(b) + sqr(b)).
> 
> print(hypotenuse(2,3)).
> 
> Where , and . are my statement separator and statement eol respectively.
> 
> I am having an impossible time trying to figure out how to specify the
> function rule to allow me to nest functions inside of other functions
> without running afoul of ambiguities warnings.
> 
> 23:37:47] warning(200): funcy.g:10:11: Decision can match input such as
> "ID" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [23:37:47] error(201): funcy.g:10:11: The following alternatives can never
> be matched: 2
> 
> 
> I really want to be able to use the above syntax without having to pepper
> the code with keywords like `func` or `var` etc.
> 
> Here is my grammar, are there any ways to resolve these ambiguities with
> predicates of some sort that I haven't been able to figure out?
> 
> I have read up on Google about them, but I can't get them to work with the
> parser rules to remove the ambiguities.
> 
> grammar funcy;
> 
> options {
>     output = AST;
>     language = Java;
> }
> program : (statement'.')* ;

just a nit pick here - you really should include EOF in your topmost rule.

> 
> statement : expression
>           | assignment
>           ;
> 
> assignment : ID '->' expression
>            | ATOM '->' ( string | number )
>            | function '->' statement ((','statement)=> ',' statement)* ;

I think you are being too liberal here with your function signatures.
you permit any expression to be a formal argument. are you intending to
have patterns akin to either ML or Haskell? if not, change the
definition of function in your assignment rule.

I also think that this permits multi-expression body, something like:

foo(a,b)-> a, b.

e.g. a function body consisting of two (or more) expressions. do you
really want that -- you do if your expressions can have side-effects.

maybe the third alt of assignment rule should be something like
(assuming you do not have side effects and watch out for i/o!):

| ID '(' ID (',' ID)* ')' '->' (assignment ',')* expression ;

this eliminates the need for a predicate.

> 
> args : expression (',' expression)*;
> 
> function : ID '(' args ')' ;
> 
> string : UNICODE_STRING;
> number : HEX_NUMBER
>        | (INTEGER '.' INTEGER)=> INTEGER '.' INTEGER

I do not think you want to recognize floating point values in the
parser. any tokens you send to the HIDDEN $channel (or skip();) will be
silently accepted before and after the '.' of the float. change your
INTEGER rule to this:

fragment FLOAT: ;
INTEGER : DIGIT+ ('.' DIGIT+ {$type=FLOAT;} )? ;

and use FLOAT in the number rule.

>        | INTEGER;
> 
> // expressions
> 
> term : '(' expression ')'
>      | number
>      | string
>      | function
>      | ID
>      | ATOM
>      ;
> 
> negation : '!'* term;
> 
> unary : ('+'|'-')* negation;
> 
> mult : unary (('*' | '/' | ('%'|'mod') ) unary)*;
> 
> add : mult (('+' | '-') mult)*;
> 
> relation : add (('=' | '!=' | '<' | '<=' | '>=' | '>') add)*;
> expression : relation (('&&' | '||') relation)*;
> 
> // LEXER ================================================================
> 
> HEX_NUMBER : '0x' HEX_DIGIT+;
> 
> INTEGER : DIGIT+;
> 
> UNICODE_STRING : '"' ( ESC | ~('\u0000'..'\u001f' | '\\' | '\"' ) )* '"'
>                 ;
> 
> WS : (' '|'\n'|'\r'|'\t')+ {$channel = HIDDEN;} ; // ignore whitespace
> 
> fragment
> ESC : '\\' ( UNI_ESC |'b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\' );
> 
> fragment
> UNI_ESC : 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT;
> 
> fragment
> HEX_DIGIT : (DIGIT|'a'..'f'|'A'..'F') ;
> 
> fragment
> DIGIT : ('0'..'9');
> 
> ATOM : (('A'..'Z'|'_')+)=> ('A'..'Z'|'0'..'9'|'_')+;

no need for a predicate

ATOM : ('A'..'Z')('A'..'Z'|'0'..'9'|'_')*;

note that this also removes the ambiguity as to whether the string "_"
is an ATOM or an ID.

> 
> ID : ('a'..'z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
> 
> COMMENT : '/*' .* '*/' {$channel = HIDDEN;};
> 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Test.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20111115/cd86aeaf/attachment.pl 

From jarrod at vertigrated.com  Tue Nov 15 15:00:16 2011
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Tue, 15 Nov 2011 18:00:16 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <4EC2EBD5.3030307@acm.org>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
Message-ID: <CANV=aGDku4GYERLKEMiMapQuj77g+bdww+Tt_h7M6Zi5T76QWA@mail.gmail.com>

thanks for the indepth review and comments, I really appreciate the help ...

-- 
Jarrod Roberson

From andy.voelkel at plantronics.com  Tue Nov 15 16:43:54 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Wed, 16 Nov 2011 00:43:54 +0000
Subject: [antlr-interest] This should be easy - but I can't figure it out
Message-ID: <92E9AB4D42199B4793CE24E094BAEE07134B1A@USSCMB03.plt.plantronics.com>

Hi,

I keep running into questions like this, and don't know how to answer them. Could anyone look at this simple example and tell me how I would accomplish my goal? I think I've got a central concept mixed up in my head.

What I'm trying to do is under the "array" rule below, where I'm trying to create a rewrite rule which collects elements which are within a grouping construct. This seems to come up a lot for me, and I don't get how to do it.

While we're at it, what is the easiest way to strip the " " characters from the strings?

Thanks for any help! Here's the grammar excerpt:

tokens { ARRAY; }

@header { using System; }

public prog:   ( stat {Console.WriteLine(
                $stat.tree==null?"null":$stat.tree.ToStringTree());} )+ ;

stat:   assign | block | ';'! ;
block:  ID^ ID '{'! (assign)+ '}'! ;
assign: ID '='^ (atom | array) ';'! ;
atom:   FLOAT | ID | STRING ;
array:  '[' ((FLOAT)+ | (STRING)+) ']' -> ^(ARRAY _FLOATS_OR_STRINGS_ ) ;

fragment LETTER : '$'| 'A'..'Z' | 'a'..'z' | '_' ;
fragment DIGITS : ('0'..'9')+;
fragment EXP : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
STRING : '"' ( ~('"') )* '"' ;
ID  :   LETTER (LETTER|DIGITS)*;
FLOAT :  (DIGITS? '.' DIGITS EXP?) | (DIGITS EXP?) ;
WS  :   (' '|'\t'|'\n'|'\r')+ {Skip();} ;


- Andy

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From jbb at acm.org  Tue Nov 15 18:25:13 2011
From: jbb at acm.org (John B. Brodie)
Date: Tue, 15 Nov 2011 21:25:13 -0500
Subject: [antlr-interest] This should be easy - but I can't figure it out
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE07134B1A@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE07134B1A@USSCMB03.plt.plantronics.com>
Message-ID: <4EC31F09.4090902@acm.org>

Greetings!

First 2 caveats then see discussion below:

1) I do not know C#. all of my suggestions are based on the Java target.

2) My suggestions are from memory. I have not actually tested them (or
rather I have tested them in the past on other problems and hope memory
works).


On 11/15/2011 07:43 PM, Voelkel, Andy wrote:
> Hi,
> 
> I keep running into questions like this, and don't know how to answer them. Could anyone look at this simple example and tell me how I would accomplish my goal? I think I've got a central concept mixed up in my head.
> 
> What I'm trying to do is under the "array" rule below, where I'm trying to create a rewrite rule which collects elements which are within a grouping construct. This seems to come up a lot for me, and I don't get how to do it.
> 
> While we're at it, what is the easiest way to strip the " " characters from the strings?

use whatever sub-string functionality is available in C# to remove the
first and last characters from the string. but do so at the last
possible moment.

> 
> Thanks for any help! Here's the grammar excerpt:
> 
> tokens { ARRAY; }
> 
> @header { using System; }
> 
> public prog:   ( stat {Console.WriteLine(
>                 $stat.tree==null?"null":$stat.tree.ToStringTree());} )+ ;
> 
> stat:   assign | block | ';'! ;
> block:  ID^ ID '{'! (assign)+ '}'! ;
> assign: ID '='^ (atom | array) ';'! ;
> atom:   FLOAT | ID | STRING ;
> array:  '[' ((FLOAT)+ | (STRING)+) ']' -> ^(ARRAY _FLOATS_OR_STRINGS_ ) ;

generally, any time you have a cardinality meta-operator (the ? * or +)
in the syntax portion of a rule, you will want a similar cardinality
operator in the re-write portion of that rule.

thus a first try at a re-write rule is:

array: '[' FLOAT+ | STRING+ ']' -> ^(ARRAY FLOAT+ STRING+) ;

the separate lists on the right of the -> work because your syntax
specifies separate lists.

and i guess this first try really reduces to this rule:

array : '['^ FLOAT+ | STRING+ ']'! ;



note that you can use the += operator to accumulate lists of things. but
these lists are homogeneous (e.g. all of the elements in the list must
be of the same type).

and in this specific case both of your lists are lists of Tokens, so a
second try at a re-write rule is:

array: '[' (t+=FLOAT)+ | (t+=STRING)+ ']' -> ^(ARRAY $t+) ;


to me both of the above are not good choices because information that
the parser immediately has about the type of the elements in the array
is not explicitly placed into the tree.

so i would have 2 imaginary tokens ARRAY_FLOAT and ARRAY_STRING and use
this rule:

array
    : ( l='[' (f+=FLOAT)+  ']' -> ^(ARRAY_FLOAT ["FLT ARY",$l] $f+) )
    | ( l='[' (s+=STRING)+ ']' -> ^(ARRAY_STRING["STR ARY",$l] $s+) )
  ;

i think this last form will simplify subsequent processing of the tree.
note also the proper initialization of the imaginary tokens.

> 
> fragment LETTER : '$'| 'A'..'Z' | 'a'..'z' | '_' ;
> fragment DIGITS : ('0'..'9')+;
> fragment EXP : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> STRING : '"' ( ~('"') )* '"' ;
> ID  :   LETTER (LETTER|DIGITS)*;
> FLOAT :  (DIGITS? '.' DIGITS EXP?) | (DIGITS EXP?) ;
> WS  :   (' '|'\t'|'\n'|'\r')+ {Skip();} ;
> 

Hope this helps...
   -jbb


From andy.voelkel at plantronics.com  Tue Nov 15 21:02:56 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Wed, 16 Nov 2011 05:02:56 +0000
Subject: [antlr-interest] This should be easy - but I can't figure it out
In-Reply-To: <4EC31F09.4090902@acm.org>
References: <92E9AB4D42199B4793CE24E094BAEE07134B1A@USSCMB03.plt.plantronics.com>
	<4EC31F09.4090902@acm.org>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE07134C2C@USSCMB03.plt.plantronics.com>

See replies below starting with [Andy - ...

- Andy


> Hi,
>
> I keep running into questions like this, and don't know how to answer them. Could anyone look at this simple example and tell me how I would accomplish my goal? I think I've got a central concept mixed up in my head.
>
> What I'm trying to do is under the "array" rule below, where I'm trying to create a rewrite rule which collects elements which are within a grouping construct. This seems to come up a lot for me, and I don't get how to do it.
>
>
> Thanks for any help! Here's the grammar excerpt:
>
> tokens { ARRAY; }
>
> @header { using System; }
>
> public prog:   ( stat {Console.WriteLine(
>                 $stat.tree==null?"null":$stat.tree.ToStringTree());} )+ ;
>
> stat:   assign | block | ';'! ;
> block:  ID^ ID '{'! (assign)+ '}'! ;
> assign: ID '='^ (atom | array) ';'! ;
> atom:   FLOAT | ID | STRING ;
> array:  '[' ((FLOAT)+ | (STRING)+) ']' -> ^(ARRAY _FLOATS_OR_STRINGS_ ) ;

generally, any time you have a cardinality meta-operator (the ? * or +)
in the syntax portion of a rule, you will want a similar cardinality
operator in the re-write portion of that rule.

thus a first try at a re-write rule is:

array: '[' FLOAT+ | STRING+ ']' -> ^(ARRAY FLOAT+ STRING+) ;

the separate lists on the right of the -> work because your syntax
specifies separate lists.

[Andy - this approach doesn't work - I get exceptions thrown. I haven't debugged that yet.]

and i guess this first try really reduces to this rule:

array : '['^ FLOAT+ | STRING+ ']'! ;

[Andy - Not really. I did that first and it works. What I was trying to do in my example
Was use a new token type called ARRAY as the node type, not '[', which seems ugly]


note that you can use the += operator to accumulate lists of things. but
these lists are homogeneous (e.g. all of the elements in the list must
be of the same type).

and in this specific case both of your lists are lists of Tokens, so a
second try at a re-write rule is:

array: '[' (t+=FLOAT)+ | (t+=STRING)+ ']' -> ^(ARRAY $t+) ;

[Andy - that doesn't work either. I don't get exceptions, but I get errors and non-sensical output]


to me both of the above are not good choices because information that
the parser immediately has about the type of the elements in the array
is not explicitly placed into the tree.

so i would have 2 imaginary tokens ARRAY_FLOAT and ARRAY_STRING and use
this rule:

array
    : ( l='[' (f+=FLOAT)+  ']' -> ^(ARRAY_FLOAT ["FLT ARY",$l] $f+) )
    | ( l='[' (s+=STRING)+ ']' -> ^(ARRAY_STRING["STR ARY",$l] $s+) )
  ;

[Andy - This causes compiler errors, and I'm really not sure what you are getting at. But
I can adapt your basic idea to this, which is simpler and works:

array
    : ( '[' (FLOAT)+  ']' -> ^(ARRAY_FLOAT FLOAT+) )
    | ( '[' (STRING)+ ']' -> ^(ARRAY_STRING STRING+) )

It is similar to an example in Terence's book. It isn't really what I wanted to do. Maybe it is a
better idea, I'll need to think about that. But it still doesn't answer the question as to
how to get the result I originally wanted. I'm still curious about that.]

i think this last form will simplify subsequent processing of the tree.
note also the proper initialization of the imaginary tokens.

[Andy - what do you mean "proper initialization of the imaginary tokens"]



________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From bkiers at gmail.com  Wed Nov 16 00:24:20 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 16 Nov 2011 09:24:20 +0100
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <4EC2EBD5.3030307@acm.org>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
Message-ID: <CAOrgODayXDxcbWUUywZv4S2sG3e1Mc=NSWndAxULr5mT+YqoYg@mail.gmail.com>

Hi John,


On Tue, Nov 15, 2011 at 11:46 PM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
> ...
> I do not think you want to recognize floating point values in the
> parser. any tokens you send to the HIDDEN $channel (or skip();) will be
> silently accepted before and after the '.' of the float. change your
> INTEGER rule to this:
>

I fully agree...



> fragment FLOAT: ;
> INTEGER : DIGIT+ ('.' DIGIT+ {$type=FLOAT;} )? ;
>
> and use FLOAT in the number rule.
>

.. however, Jarrod's grammar allows for input to end with `expression '.'`,
which could be "123." (an INTEGER followed by a DOT). This would be input
the lexer would trip over.

A possible fix could look like:

INTEGER
  :  DIGIT+ ({input.LA(1)=='.' && input.LA(2)>='0' && input.LA(2)>='9'}?=>
'.' DIGIT+ {$type=FLOAT;})?
  ;

I.e., only match a '.' if the character after the '.' is a digit.

Regards,

Bart.

From ruslan_zasukhin at valentina-db.com  Wed Nov 16 02:46:23 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 16 Nov 2011 12:46:23 +0200
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than v2.
 With reuse() 2GB leaks, oops.
Message-ID: <CAE9611F.F5831%ruslan_zasukhin@valentina-db.com>

Hi Jim,

I have spent 2 days running around this, and now I am ready describe what I
see, to get your help, and it seems exists bug/leaks in reuse() area. Or I
not correctly use it, but I do as you described in single letter 3 months
ago.

So ... Long story :-)

* I have simple bench that do 100K INSERT commands.

    v2 parser do this in 19 seconds.
    v3 parser no reuse do this in 24 seconds.

OF COURSE we must expect speedup if to reuse lexer/parser.

So I have design code to be able easy switch between these 2 ways.
And when I try go with reuse I get comparable speed by 2GB of RAM eaten.

=====================================
* Using Apple XCODE 4.2 Instruments, I see what is going on.

   this is not leaks actually, just parser always allocate and allocate
    ANTLR_STRING objects, in parser and tree-parser rules which use

            $c.text


=====================================
FOR EXAMPLE:

* I did have in the parser rule:

    hex_string_literal
        :    s = HEX_NUMBER     -> CONST_STR_HEX[$s.text->chars]
        ;

ZERO my own code here. Right?
And I see that $s.text    in C code expanded to getText() allocates and
allocates ... 
So it is never reused as I understand.



=====================================
BTW

When I have to see that get_Text() is used, and I remember you told avoid
this, 
I have jump to sources and have come to  idea:

    why here to create new token, I need getText() ??
    May be I can just change token type as the following:

hex_string_literal
    :    s = HEX_NUMBER  { $s->setType( $s, CONST_STR_HEX ); }
    ;

And it seems this works fine....

I have correct few rules in such way in the parser....
But Tree Parser  still have for example this:

general_literal returns [ENode_Const_Ptr res]
    : cd=CONST_DATE {res=make_enode_date ( GET_FBL_STRING( $cd.text) );}
    | ct=CONST_TIME {res=make_enode_time ( GET_FBL_STRING( $ct.text) );}
    | s=const_str   {res=make_enode_str  ( GET_FBL_STRING( $s.text ) );}
    ;

All these  $c.text  calls getText() -- this makes COPY of string buffer,
Then I convert into our own FBL_String...

PROBLEM 1:  this ANTLR STRINGs produced by get_Text()  never are reused as I
see.

PROBLEM 2:  related to speed also ? how we can avoid here make copy of
string?
     in sources I see that exists code as

    return ((pANTLR3_COMMON_TREE)(tree->super))->token->getText(
                           ((pANTLR3_COMMON_TREE)(tree->super))->token);


May be something can be optimized/hacked here?
For example may be I can write own func, which check what token have
  char* or ANTLR_String, and choose way ...

But what syntax come to token in the .g?
I can do own macro of course ...
Just I want get some feedback if this can be a good idea for all?


=====================================
And this is how I try reuse Lexer/Parser and NOT TreeParser.
All follow to your letter Jim:

void SqlParser_v3::ResuseParserObjects(
    const char*        inTextToParse,
    vuint32            inLength )
{
    // -------------------------------
    // TREE PARSER cannot be reused. Destroy it.
    //
    if( mpTreeParser )
    {
        mpTreeParser->free( mpTreeParser );
        mpTreeParser = NULL;
    }
    
    if( mpNodes )
    {
        mpNodes->free( mpNodes );
        mpNodes = NULL;
    }    


    // -------------------------------
    // Reuse other objects
    //
    mpInput->reuse(
        mpInput, 
        (pANTLR3_UINT8) inTextToParse,
        (ANTLR3_UINT32) inLength,
        (pANTLR3_UINT8) "VSQL" );

    mpTokenStream->reset( mpTokenStream );
    mpLexer         ->reset( mpLexer );
    mpParser     ->reset( mpParser );

    ResetOwnData( mpParser );
}





-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From jeremy.long at gmail.com  Wed Nov 16 07:08:24 2011
From: jeremy.long at gmail.com (Jeremy Long)
Date: Wed, 16 Nov 2011 10:08:24 -0500
Subject: [antlr-interest] question on java.g 1.6
Message-ID: <CAKAumBESMw4WkeqdJ-ZU2raDNturbbObfgnsmTOK6VQ5UMrH3g@mail.gmail.com>

I am still fairly new to antlr and when looking at the 1.6 Java grammar I
noticed the following statement rule:

statement
    :   block

    |   ('assert'
        )
        expression (':' expression)? ';'
    |   'assert'  expression (':' expression)? ';'
    |   'if' parExpression statement ('else' statement)?
    |   forstatement
    |   'while' parExpression statement
    |   'do' statement 'while' parExpression ';'
    |   trystatement
    |   'switch' parExpression '{' switchBlockStatementGroups '}'
    |   'synchronized' parExpression block
    |   'return' (expression )? ';'
    |   'throw' expression ';'
    |   'break'
            (IDENTIFIER
            )? ';'
    |   'continue'
            (IDENTIFIER
            )? ';'
    |   expression  ';'
    |   IDENTIFIER ':' statement
    |   ';'
    ;


My question is about the two lines for assert:
    |   ('assert'
        )
        expression (':' expression)? ';'
    |   'assert'  expression (':' expression)? ';'
To me those look identicle - am I missing something? Is there some nuance
to the parens that I don't understand?

Thanks,

jeremy

From jimi at temporal-wave.com  Wed Nov 16 08:00:25 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Nov 2011 08:00:25 -0800
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <CAE9611F.F5831%ruslan_zasukhin@valentina-db.com>
References: <CAE9611F.F5831%ruslan_zasukhin@valentina-db.com>
Message-ID: <79bfbf735339a1006cb5ed69c62b816d@mail.gmail.com>

[C] my v3 Parser no reuse() slower 20% than v2. With reuse() 2GB leaks,
oops.

Do not use the $text annotations if you want performance, they are purely
for convenience ? I must have said this 5000 times and I wish I had never
added that bit ;) I also told you 3 or 4 times in various emails not to use
it. I think that that is in the API docs somewhere, but I should make sure
that it is, if it is not.


There is no memory leak, but the auto string stuff does not release until
you free the string factory, which only happens when you free the parser,
not when you reuse it. Because it allocates small strings all the time, it
kills performance, and then you will page.



xxx: s=HEX_NUMBER { $s.type = CONST_STR_HEX; } ;



I think that the field name is type but you get the idea. Don?t use the
fake object oriented stuff when you want performance, use the structs
directly ? you will find that it is many times faster than the v2 C++, not
slower ? this is C and you should get as close to the metal as you can.



I think that I will make some time for performance in v3, but moving the
token interface out of each individual token and so on ? originally I could
not predict what people wanted to do, but I don?t see anyone overriding
anything to do with tokens on an individual basis for instance and that
eats memory and so on.



Jim



*From:* Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
*Sent:* Wednesday, November 16, 2011 2:46 AM
*To:* antlr-interest at antlr.org; Jim Idle
*Subject:* [C] my v3 Parser no reuse() slower 20% than v2. With reuse() 2GB
leaks, oops.



Hi Jim,

I have spent 2 days running around this, and now I am ready describe what I
see, to get your help, and it seems exists bug/leaks in reuse() area. Or I
not correctly use it, but I do as you described in single letter 3 months
ago.

So ... Long story :-)

* I have simple bench that do 100K INSERT commands.

    v2 parser do this in 19 seconds.
    v3 parser no reuse do this in 24 seconds.

OF COURSE we must expect speedup if to reuse lexer/parser.

So I have design code to be able easy switch between these 2 ways.
And when I try go with reuse I get comparable speed by 2GB of RAM eaten.

=====================================
* Using Apple XCODE 4.2 Instruments, I see what is going on.

   this is not leaks actually, just parser always allocate and allocate
    ANTLR_STRING objects, in parser and tree-parser rules which use

            $c.text


=====================================
FOR EXAMPLE:

* I did have in the parser rule:

    hex_string_literal
        :    s = HEX_NUMBER     -> CONST_STR_HEX[$s.text->chars]
        ;

ZERO my own code here. Right?
And I see that $s.text    in C code expanded to getText() allocates and
allocates ...
So it is never reused as I understand.



=====================================
BTW

When I have to see that get_Text() is used, and I remember you told avoid
this,
I have jump to sources and have come to  idea:

    why here to create new token, I need getText() ??
    May be I can just change token type as the following:

hex_string_literal
    :    s = HEX_NUMBER  { $s->setType( $s, CONST_STR_HEX ); }
    ;

And it seems this works fine....

I have correct few rules in such way in the parser....
But Tree Parser  still have for example this:

general_literal returns [ENode_Const_Ptr res]
    : cd=CONST_DATE {res=make_enode_date ( GET_FBL_STRING( $cd.text) );}
    | ct=CONST_TIME {res=make_enode_time ( GET_FBL_STRING( $ct.text) );}
    | s=const_str   {res=make_enode_str  ( GET_FBL_STRING( $s.text ) );}
    ;

All these  $c.text  calls getText() -- this makes COPY of string buffer,
Then I convert into our own FBL_String...

PROBLEM 1:  this ANTLR STRINGs produced by get_Text()  never are reused as
I see.

PROBLEM 2:  related to speed also ? how we can avoid here make copy of
string?
     in sources I see that exists code as

    return ((pANTLR3_COMMON_TREE)(tree->super))->token->getText(
                           ((pANTLR3_COMMON_TREE)(tree->super))->token);


May be something can be optimized/hacked here?
For example may be I can write own func, which check what token have
  char* or ANTLR_String, and choose way ...

But what syntax come to token in the .g?
I can do own macro of course ...
Just I want get some feedback if this can be a good idea for all?


=====================================
And this is how I try reuse Lexer/Parser and NOT TreeParser.
All follow to your letter Jim:

void SqlParser_v3::ResuseParserObjects(
    const char*        inTextToParse,
    vuint32            inLength )
{
    // -------------------------------
   // TREE PARSER cannot be reused. Destroy it.
   //
   if( mpTreeParser )
    {
        mpTreeParser->free( mpTreeParser );
        mpTreeParser = NULL;
    }

    if( mpNodes )
    {
        mpNodes->free( mpNodes );
        mpNodes = NULL;
    }


    // -------------------------------
   // Reuse other objects
   //
   mpInput->reuse(
        mpInput,
        (pANTLR3_UINT8) inTextToParse,
        (ANTLR3_UINT32) inLength,
        (pANTLR3_UINT8) "VSQL" );

    mpTokenStream->reset( mpTokenStream );
    mpLexer         ->reset( mpLexer );
    mpParser     ->reset( mpParser );

    ResetOwnData( mpParser );
}





-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]

From ruslan_zasukhin at valentina-db.com  Wed Nov 16 08:35:44 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 16 Nov 2011 18:35:44 +0200
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <79bfbf735339a1006cb5ed69c62b816d@mail.gmail.com>
Message-ID: <CAE9B300.F586D%ruslan_zasukhin@valentina-db.com>

On 11/16/11 6:00 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> [C] my v3 Parser no reuse() slower 20% than v2. With reuse() 2GB leaks,
> oops.
> 
> Do not use the $text annotations if you want performance, they are purely
> for convenience ? I must have said this 5000 times and I wish I had never
> added that bit ;) I also told you 3 or 4 times in various emails not to use
> it. I think that that is in the API docs somewhere, but I should make sure
> that it is, if it is not.

Right you told ...

But in docs, ANTLR books, examples, everywhere present this

    hex_string_literal

    :    s = HEX_NUMBER  -> CONST_STR_HEX[$s.text->chars]

Yes, I have checked C API docs even today, but have found any special page,
which says

    Java guys do this
    C guys do this.


> There is no memory leak, but the auto string stuff does not release until
> you free the string factory, which only happens when you free the parser,
> not when you reuse it. Because it allocates small strings all the time, it
> kills performance, and then you will page.

Clear.

So when I "fix" all places with .text usage problem with memory should
disappear self.


> xxx: s=HEX_NUMBER { $s.type = CONST_STR_HEX; } ;

> I think that the field name is type but you get the idea.

Yes, I will try this asap and give feedback.
I have 40 such places in parser. And some number in the tree parser.


>  Don?t use the
> fake object oriented stuff when you want performance, use the structs
> directly ? you will find that it is many times faster than the v2 C++, not
> slower ? this is C and you should get as close to the metal as you can.

I very hope :-)

If with PARSER I think I see how I can use this $s.type
I will check right now other 39 places in parser :)

=====================================
It is not clear to me what we can do with Tree Parser ??

So I have some token, e.g. Date or time or other literal.
I make label, now I need get TEXT.

general_literal returns [ENode_Const_Ptr res]

    : cd=CONST_DATE
            { res=make_enode_date ( GET_FBL_STRING($cd.text) );  }



So far I have found, that I can do something as

general_literal returns [ENode_Const_Ptr res]

    : cd=CONST_DATE
      {
              pANTLR3_COMMON_TOKEN pToken = $cd->getToken( $cd );
              ANTLR3_MARKER pStart = pToken ->getStartIndex( pToken );
              ANTLR3_MARKER pEnd  = pToken->getStopIndex( pToken );
             .... Do some job ...
      }


Does such code in TreeParser looks correct for you?

Is it really safe and  getStartIndex / getStopIndex always return us correct
pointers?

Of course this can be extracted into special func to be used in many places
in one line of code ...

Just I believe there is no any example in C and any docs pages which discuss
this for TreeParser and C. If exists please point me by finger :-)


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From jimi at temporal-wave.com  Wed Nov 16 08:50:20 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Nov 2011 08:50:20 -0800
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <CAE9B300.F586D%ruslan_zasukhin@valentina-db.com>
References: <79bfbf735339a1006cb5ed69c62b816d@mail.gmail.com>
	<CAE9B300.F586D%ruslan_zasukhin@valentina-db.com>
Message-ID: <0457df6a3d3b43961425a418023a3472@mail.gmail.com>

All your assumptions below are correct - the methods you are calling there
are public to grammar programmers for this reason. Just lose the $text and
have your own helper methods - for instance you only want the text when it
is time to actually do something with it, and not just to create a new
token that is the same text and position and so on. Your helper methods
can take a token, a start and stop token, a tree node with a payload, and
a tree node with a start and stop span. Even in Java you find that you
need these for good error reporting.

Sorry that the C runtime takes a lot more groking, but there isn't all
that object infrastructure to help you. I am still inclined to make a very
streamlined C runtime, that does not allow overrides of much at all, but
is very fast.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruslan Zasukhin
> Sent: Wednesday, November 16, 2011 8:36 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [C] my v3 Parser no reuse() slower 20%
> than v2. With reuse() 2GB leaks, oops.
>
> On 11/16/11 6:00 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>
> > [C] my v3 Parser no reuse() slower 20% than v2. With reuse() 2GB
> > leaks, oops.
> >
> > Do not use the $text annotations if you want performance, they are
> > purely for convenience ? I must have said this 5000 times and I wish
> I
> > had never added that bit ;) I also told you 3 or 4 times in various
> > emails not to use it. I think that that is in the API docs somewhere,
> > but I should make sure that it is, if it is not.
>
> Right you told ...
>
> But in docs, ANTLR books, examples, everywhere present this
>
>     hex_string_literal
>
>     :    s = HEX_NUMBER  -> CONST_STR_HEX[$s.text->chars]
>
> Yes, I have checked C API docs even today, but have found any special
> page, which says
>
>     Java guys do this
>     C guys do this.
>
>
> > There is no memory leak, but the auto string stuff does not release
> > until you free the string factory, which only happens when you free
> > the parser, not when you reuse it. Because it allocates small strings
> > all the time, it kills performance, and then you will page.
>
> Clear.
>
> So when I "fix" all places with .text usage problem with memory should
> disappear self.
>
>
> > xxx: s=HEX_NUMBER { $s.type = CONST_STR_HEX; } ;
>
> > I think that the field name is type but you get the idea.
>
> Yes, I will try this asap and give feedback.
> I have 40 such places in parser. And some number in the tree parser.
>
>
> >  Don?t use the
> > fake object oriented stuff when you want performance, use the structs
> > directly ? you will find that it is many times faster than the v2
> C++,
> > not slower ? this is C and you should get as close to the metal as
> you can.
>
> I very hope :-)
>
> If with PARSER I think I see how I can use this $s.type I will check
> right now other 39 places in parser :)
>
> =====================================
> It is not clear to me what we can do with Tree Parser ??
>
> So I have some token, e.g. Date or time or other literal.
> I make label, now I need get TEXT.
>
> general_literal returns [ENode_Const_Ptr res]
>
>     : cd=CONST_DATE
>             { res=make_enode_date ( GET_FBL_STRING($cd.text) );  }
>
>
>
> So far I have found, that I can do something as
>
> general_literal returns [ENode_Const_Ptr res]
>
>     : cd=CONST_DATE
>       {
>               pANTLR3_COMMON_TOKEN pToken = $cd->getToken( $cd );
>               ANTLR3_MARKER pStart = pToken ->getStartIndex( pToken );
>               ANTLR3_MARKER pEnd  = pToken->getStopIndex( pToken );
>              .... Do some job ...
>       }
>
>
> Does such code in TreeParser looks correct for you?
>
> Is it really safe and  getStartIndex / getStopIndex always return us
> correct pointers?
>
> Of course this can be extracted into special func to be used in many
> places in one line of code ...
>
> Just I believe there is no any example in C and any docs pages which
> discuss this for TreeParser and C. If exists please point me by finger
> :-)
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ruslan_zasukhin at valentina-db.com  Wed Nov 16 10:39:48 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 16 Nov 2011 20:39:48 +0200
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <79bfbf735339a1006cb5ed69c62b816d@mail.gmail.com>
Message-ID: <CAE9D014.F5893%ruslan_zasukhin@valentina-db.com>

On 11/16/11 6:00 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> xxx: s=HEX_NUMBER { $s.type = CONST_STR_HEX; } ;

Jim,

This gives error as
    SqlParser_v3.g:879:21: cannot write to read only attribute: $u.type


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From jimi at temporal-wave.com  Wed Nov 16 10:44:13 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Nov 2011 10:44:13 -0800
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <CAE9D014.F5893%ruslan_zasukhin@valentina-db.com>
References: <79bfbf735339a1006cb5ed69c62b816d@mail.gmail.com>
	<CAE9D014.F5893%ruslan_zasukhin@valentina-db.com>
Message-ID: <5862f5b5ad3d15ecc5d78935e5cc646d@mail.gmail.com>

Do it without the .type then, just use C code directly. Don't forget that
you can do things like:

{
  pANTLR3_BASE_TOKEN t;
  t = LT(-1);
  t->type = XXCX;
}

Or perhaps
 myHelper($s, MYTYPE);

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruslan Zasukhin
> Sent: Wednesday, November 16, 2011 10:40 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [C] my v3 Parser no reuse() slower 20%
> than v2. With reuse() 2GB leaks, oops.
>
> On 11/16/11 6:00 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>
> > xxx: s=HEX_NUMBER { $s.type = CONST_STR_HEX; } ;
>
> Jim,
>
> This gives error as
>     SqlParser_v3.g:879:21: cannot write to read only attribute: $u.type
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jarrod at vertigrated.com  Wed Nov 16 11:21:22 2011
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 16 Nov 2011 14:21:22 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <4EC2EBD5.3030307@acm.org>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
Message-ID: <CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>

On Tue, Nov 15, 2011 at 5:46 PM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
>
> I think you have issues with your function, number, and ATOM rules. see
> below...
>
>
apparently I did


> I have attached my complete, modified, grammar that successfully parses
> your input sample.
>
>
thanks for taking the time to fix up my problems, you figured out what I
intended when I couldn't!


> just a nit pick here - you really should include EOF in your topmost rule.
>
>
thanks I was not aware this was something I should do


> >
> > statement : expression
> >           | assignment
> >           ;
> >
> > assignment : ID '->' expression
> >            | ATOM '->' ( string | number )
> >            | function '->' statement ((','statement)=> ',' statement)* ;
>
> I think you are being too liberal here with your function signatures.
> you permit any expression to be a formal argument. are you intending to
> have patterns akin to either ML or Haskell? if not, change the
> definition of function in your assignment rule.
>
>
I am patterning my syntax off what I like about Erlang and Python with some
hopefully streamlining


> I also think that this permits multi-expression body, something like:
>
> foo(a,b)-> a, b.
>
>
I didn't realize it until you said it, but yes I only need to allow a
single expression as the LAST statement because I am having
the LAST statement result be the return value without need a "return"
keyword.


> e.g. a function body consisting of two (or more) expressions. do you
> really want that -- you do if your expressions can have side-effects.
>
>
nope single assignment variables and no side effects if I can help it


> maybe the third alt of assignment rule should be something like
> (assuming you do not have side effects and watch out for i/o!):
>
> | ID '(' ID (',' ID)* ')' '->' (assignment ',')* expression ;
>
> this eliminates the need for a predicate.
>
> >
> > args : expression (',' expression)*;
> >
> > function : ID '(' args ')' ;
> >
> > string : UNICODE_STRING;
> > number : HEX_NUMBER
> >        | (INTEGER '.' INTEGER)=> INTEGER '.' INTEGER
>
> I do not think you want to recognize floating point values in the
> parser. any tokens you send to the HIDDEN $channel (or skip();) will be
> silently accepted before and after the '.' of the float. change your
> INTEGER rule to this:
>
> fragment FLOAT: ;
> INTEGER : DIGIT+ ('.' DIGIT+ {$type=FLOAT;} )? ;
>

actually thanks to Bart I need the FLOAT rule as a parser rule with the
predicate because I want to be able to match

a = 1.
b = 100.1101.


> >
> > ATOM : (('A'..'Z'|'_')+)=> ('A'..'Z'|'0'..'9'|'_')+;
>
> no need for a predicate
>
> ATOM : ('A'..'Z')('A'..'Z'|'0'..'9'|'_')*;
>
> note that this also removes the ambiguity as to whether the string "_"
> is an ATOM or an ID.
>
>
this is what I actually intended, thanks


> >
> > ID : ('a'..'z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
> >
> > COMMENT : '/*' .* '*/' {$channel = HIDDEN;};
> >
>



-- 
Jarrod Roberson
678.551.2852

From bkiers at gmail.com  Wed Nov 16 11:38:20 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 16 Nov 2011 20:38:20 +0100
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
	<CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>
Message-ID: <CAOrgODaCMxu8F-LkJrBv1p_WccNCPsgcc4KmUyr+Tb4w4Q_xjA@mail.gmail.com>

Hi,

On Wed, Nov 16, 2011 at 8:21 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

>
> actually thanks to Bart I need the FLOAT rule as a parser rule with the
> predicate because I want to be able to match


But John raises a valid point that I didn't mention: by "promoting" such a
rule to a parser rule, you run the risk that the parser matches a `number`
rule for the input source: "123   .   5" (spaces around the '.') because
the parser ignores the white spaces.

Regards,

Bart.

From bkiers at gmail.com  Wed Nov 16 11:39:29 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 16 Nov 2011 20:39:29 +0100
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CAOrgODaCMxu8F-LkJrBv1p_WccNCPsgcc4KmUyr+Tb4w4Q_xjA@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
	<CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>
	<CAOrgODaCMxu8F-LkJrBv1p_WccNCPsgcc4KmUyr+Tb4w4Q_xjA@mail.gmail.com>
Message-ID: <CAOrgODYnHCBOaUeQT3=Ped+eNscX=7CGYcHmH7nC4wkBpG4RJg@mail.gmail.com>

On Wed, Nov 16, 2011 at 8:38 PM, Bart Kiers <bkiers at gmail.com> wrote:

> Hi,
>
> On Wed, Nov 16, 2011 at 8:21 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:
>
>>
>> actually thanks to Bart I need the FLOAT rule as a parser rule with the
>> predicate because I want to be able to match
>
>
> But John raises a valid point that I didn't mention: by "promoting" such a
> rule to a parser rule, you run the risk that the parser matches a `number`
> rule for the input source: "123   .   5" (spaces around the '.') because
> the parser ignores the white spaces.
>

Or even the input: "123 /* some comments */ . /* more comments */ 5" would
be a valid `number`... :)

From jarrod at vertigrated.com  Wed Nov 16 11:45:47 2011
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 16 Nov 2011 14:45:47 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CAOrgODYnHCBOaUeQT3=Ped+eNscX=7CGYcHmH7nC4wkBpG4RJg@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
	<CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>
	<CAOrgODaCMxu8F-LkJrBv1p_WccNCPsgcc4KmUyr+Tb4w4Q_xjA@mail.gmail.com>
	<CAOrgODYnHCBOaUeQT3=Ped+eNscX=7CGYcHmH7nC4wkBpG4RJg@mail.gmail.com>
Message-ID: <CANV=aGCS8SQBvBn7XzV6=iEW7+DFFKizjxfYt8Vk02Wud43Tnw@mail.gmail.com>

On Wed, Nov 16, 2011 at 2:39 PM, Bart Kiers <bkiers at gmail.com> wrote:

> On Wed, Nov 16, 2011 at 8:38 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Hi,
>>
>> On Wed, Nov 16, 2011 at 8:21 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:
>>
>>>
>>> actually thanks to Bart I need the FLOAT rule as a parser rule with the
>>> predicate because I want to be able to match
>>
>>
>> But John raises a valid point that I didn't mention: by "promoting" such
>> a rule to a parser rule, you run the risk that the parser matches a
>> `number` rule for the input source: "123   .   5" (spaces around the '.')
>> because the parser ignores the white spaces.
>>
>
> Or even the input: "123 /* some comments */ . /* more comments */ 5" would
> be a valid `number`... :)
>

Is there a way to support both

a -> 1.
b -> 1.1.

in a pure lexer rule then, I didn't think there was?

-- 
Jarrod Roberson
678.551.2852

From bkiers at gmail.com  Wed Nov 16 11:55:59 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 16 Nov 2011 20:55:59 +0100
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CANV=aGCS8SQBvBn7XzV6=iEW7+DFFKizjxfYt8Vk02Wud43Tnw@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
	<CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>
	<CAOrgODaCMxu8F-LkJrBv1p_WccNCPsgcc4KmUyr+Tb4w4Q_xjA@mail.gmail.com>
	<CAOrgODYnHCBOaUeQT3=Ped+eNscX=7CGYcHmH7nC4wkBpG4RJg@mail.gmail.com>
	<CANV=aGCS8SQBvBn7XzV6=iEW7+DFFKizjxfYt8Vk02Wud43Tnw@mail.gmail.com>
Message-ID: <CAOrgODYfEV2TuKGfsobXtDcyqj=fqdTNU-u4Bn6KBRjZqHBSRQ@mail.gmail.com>

On Wed, Nov 16, 2011 at 8:45 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:

>
> > Or even the input: "123 /* some comments */ . /* more comments */ 5"
> would
> > be a valid `number`... :)
> >
>
> Is there a way to support both
>
> a -> 1.
> b -> 1.1.
>
> in a pure lexer rule then, I didn't think there was?
>
>
See my earlier reply: http://antlr.markmail.org/message/wtwq2vbmhedek2cn in
this thread.

"1." would become: INTEGER, DOT
"1.1." would become: FLOAT, DOT
"1 . 1" would become: INTEGER SPACE DOT SPACE INTEGER

Regards,

Bart.

From jarrod at vertigrated.com  Wed Nov 16 12:01:26 2011
From: jarrod at vertigrated.com (Jarrod Roberson)
Date: Wed, 16 Nov 2011 15:01:26 -0500
Subject: [antlr-interest] Having trouble with creating a parser for my
 desired grammar. Running afoul of multiple alternatives warnings
In-Reply-To: <CAOrgODYfEV2TuKGfsobXtDcyqj=fqdTNU-u4Bn6KBRjZqHBSRQ@mail.gmail.com>
References: <CANV=aGBxrKKfQXQN5+65fS+58A+N-fK+GRUtRe30DVyeUMMz3g@mail.gmail.com>
	<4EC2EBD5.3030307@acm.org>
	<CANV=aGBbdfEi=o7iLBW91LUpLa=dmGEDxNRHVGpcqxfZ0XY3mA@mail.gmail.com>
	<CAOrgODaCMxu8F-LkJrBv1p_WccNCPsgcc4KmUyr+Tb4w4Q_xjA@mail.gmail.com>
	<CAOrgODYnHCBOaUeQT3=Ped+eNscX=7CGYcHmH7nC4wkBpG4RJg@mail.gmail.com>
	<CANV=aGCS8SQBvBn7XzV6=iEW7+DFFKizjxfYt8Vk02Wud43Tnw@mail.gmail.com>
	<CAOrgODYfEV2TuKGfsobXtDcyqj=fqdTNU-u4Bn6KBRjZqHBSRQ@mail.gmail.com>
Message-ID: <CANV=aGB3hy8qdVMjFBJv_n=87fsxqSoGsbGMswjB_gzXuORM8g@mail.gmail.com>

On Wed, Nov 16, 2011 at 2:55 PM, Bart Kiers <bkiers at gmail.com> wrote:

> On Wed, Nov 16, 2011 at 8:45 PM, Jarrod Roberson <jarrod at vertigrated.com>wrote:
>
>>
>> > Or even the input: "123 /* some comments */ . /* more comments */ 5"
>> would
>> > be a valid `number`... :)
>> >
>>
>> Is there a way to support both
>>
>> a -> 1.
>> b -> 1.1.
>>
>> in a pure lexer rule then, I didn't think there was?
>>
>>
> See my earlier reply: http://antlr.markmail.org/message/wtwq2vbmhedek2cn in
> this thread.
>

That message hadn't made it into my inbox yet.

Thanks that works after I fixed  the input.LA(2)<='9'

You guys help is dragging me along into the world of ANTLR!
-- 
Jarrod Roberson

From researcher0x00 at gmail.com  Wed Nov 16 14:04:37 2011
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 16 Nov 2011 17:04:37 -0500
Subject: [antlr-interest] question on java.g 1.6
In-Reply-To: <CAKAumBESMw4WkeqdJ-ZU2raDNturbbObfgnsmTOK6VQ5UMrH3g@mail.gmail.com>
References: <CAKAumBESMw4WkeqdJ-ZU2raDNturbbObfgnsmTOK6VQ5UMrH3g@mail.gmail.com>
Message-ID: <CAN45N10h=gPE_DmcYA9bKJ9FxTEEZ-c_OAOLbTCdMa9m8a=fmQ@mail.gmail.com>

Hi Jeremy,

This is not an answer but my thoughts after reading it.

It looks like the first option originally had some other text with it that
was removed and the second option was valid as originally written.

If it was me, I would try and find earlier versions from either antlr 2.x
or something or see if something turns up at ANTLR repository on github.

Eric

On Wed, Nov 16, 2011 at 10:08 AM, Jeremy Long <jeremy.long at gmail.com> wrote:

> I am still fairly new to antlr and when looking at the 1.6 Java grammar I
> noticed the following statement rule:
>
> statement
>    :   block
>
>    |   ('assert'
>        )
>        expression (':' expression)? ';'
>    |   'assert'  expression (':' expression)? ';'
>    |   'if' parExpression statement ('else' statement)?
>    |   forstatement
>    |   'while' parExpression statement
>    |   'do' statement 'while' parExpression ';'
>    |   trystatement
>    |   'switch' parExpression '{' switchBlockStatementGroups '}'
>    |   'synchronized' parExpression block
>    |   'return' (expression )? ';'
>    |   'throw' expression ';'
>    |   'break'
>            (IDENTIFIER
>            )? ';'
>    |   'continue'
>            (IDENTIFIER
>            )? ';'
>    |   expression  ';'
>    |   IDENTIFIER ':' statement
>    |   ';'
>    ;
>
>
> My question is about the two lines for assert:
>    |   ('assert'
>        )
>        expression (':' expression)? ';'
>    |   'assert'  expression (':' expression)? ';'
> To me those look identicle - am I missing something? Is there some nuance
> to the parens that I don't understand?
>
> Thanks,
>
> jeremy
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jbb at acm.org  Wed Nov 16 17:39:05 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 16 Nov 2011 20:39:05 -0500
Subject: [antlr-interest] This should be easy - but I can't figure it out
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE07134C2C@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE07134B1A@USSCMB03.plt.plantronics.com>
	<4EC31F09.4090902@acm.org>
	<92E9AB4D42199B4793CE24E094BAEE07134C2C@USSCMB03.plt.plantronics.com>
Message-ID: <4EC465B9.8050805@acm.org>

On 11/16/2011 12:02 AM, Voelkel, Andy wrote:
> 
> array: '[' FLOAT+ | STRING+ ']' -> ^(ARRAY FLOAT+ STRING+) ;
> 
> the separate lists on the right of the -> work because your syntax
> specifies separate lists.
> 
> [Andy - this approach doesn't work - I get exceptions thrown. I haven't debugged that yet.]

yes. sorry. I got the cardinality on the right of the -> wrong. it
should be (i think):

array: '[' FLOAT+ | STRING+ ']' -> ^(ARRAY FLOAT* STRING* ) ;

because when specifying an array of floats, the list of FLOATs is full
the list of STRINGs is empty and so we must have STRING* on the right
hand side. similar reasoning for FLOAT*.

> 
> array: '[' (t+=FLOAT)+ | (t+=STRING)+ ']' -> ^(ARRAY $t+) ;
> 
> [Andy - that doesn't work either. I don't get exceptions, but I get errors and non-sensical output]

not enough information here for me to be of any help to you, sorry. as
far as i recall this works in the Java target, maybe something is
different with the C# target. or more likely i have mis-remembered it...

> 
> array
>     : ( l='[' (f+=FLOAT)+  ']' -> ^(ARRAY_FLOAT ["FLT ARY",$l] $f+) )
>     | ( l='[' (s+=STRING)+ ']' -> ^(ARRAY_STRING["STR ARY",$l] $s+) )
>   ;
> 
> [Andy - This causes compiler errors, and I'm really not sure what you are getting at.

compiler errors are odd here, maybe the C# target does not support the [
] notation for initializing an imaginary token?

> i think this last form will simplify subsequent processing of the tree.
> note also the proper initialization of the imaginary tokens.
> 
> [Andy - what do you mean "proper initialization of the imaginary tokens"]

the stuff between the [ ] on the right hand side of the -> is
information used to initialize the imaginary token. in Java, they get
translated into parameters to its constructor. i refer you to Dr. Parr's
book to find out more about this feature.



seems like i probably wasn't very helpful to you after all, sorry about
that...
   -jbb


From dieter_frej at gmx.net  Thu Nov 17 00:14:57 2011
From: dieter_frej at gmx.net (D. Frej)
Date: Thu, 17 Nov 2011 09:14:57 +0100
Subject: [antlr-interest] valid grammar does not compile
Message-ID: <20111117081457.35080@gmx.net>

Hi,

I build the following grammar with antlrworks:

grammar questionmark;

horef
??? :??? '\?' ('a'..'z')
??? ;

antlrworks tells me "check grammar succeeded". However, debugging does not 
works because the generated code does not compile !?

My question: how does the rule have to look like so that the code compile? 
I want to parse text of the form ?a which should be a trivial task for 
antlr.

Thanks,

Didi    
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From bkiers at gmail.com  Thu Nov 17 00:34:45 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 17 Nov 2011 09:34:45 +0100
Subject: [antlr-interest] valid grammar does not compile
In-Reply-To: <20111117081457.35080@gmx.net>
References: <20111117081457.35080@gmx.net>
Message-ID: <CAOrgODaGwqmSNaVaMNqjfDLgx0XOxvG8S7b1N3SaL5HWxgztsQ@mail.gmail.com>

On Thu, Nov 17, 2011 at 9:14 AM, D. Frej <dieter_frej at gmx.net> wrote:

> Hi,
>
> I build the following grammar with antlrworks:
>
> grammar questionmark;
>
> horef
>     :    '\?' ('a'..'z')
>     ;
>
> antlrworks tells me "check grammar succeeded". However, debugging does not
> works because the generated code does not compile !?
>
>
You should not escape the question mark.

Regards,

Bart.

From dieter_frej at gmx.net  Thu Nov 17 01:14:12 2011
From: dieter_frej at gmx.net (D. Frej)
Date: Thu, 17 Nov 2011 10:14:12 +0100
Subject: [antlr-interest] valid grammar does not compile
In-Reply-To: <CAOrgODaGwqmSNaVaMNqjfDLgx0XOxvG8S7b1N3SaL5HWxgztsQ@mail.gmail.com>
References: <20111117081457.35080@gmx.net>
	<CAOrgODaGwqmSNaVaMNqjfDLgx0XOxvG8S7b1N3SaL5HWxgztsQ@mail.gmail.com>
Message-ID: <20111117091412.35070@gmx.net>

and still: the compilation error stays even if I do not quote the question 
mark


 
>             
> -------- Original-Nachricht --------
> Datum: Thu, 17 Nov 2011 09:34:45 +0100
> Von: Bart Kiers <bkiers at gmail.com>
> An: "D. Frej" <dieter_frej at gmx.net>
> CC: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] valid grammar does not compile
> 
>             On Thu, Nov 17, 2011 at 9:14 AM, D. Frej 
> <dieter_frej at gmx.net> wrote:
> 
> >  Hi,
> > 
> >  I build the following grammar with antlrworks:
> > 
> >  grammar questionmark;
> > 
> >  horef
> >  ??? :??? '\?' ('a'..'z')
> >  ??? ;
> > 
> >  antlrworks tells me "check grammar succeeded". However, debugging does 
> > not
> >  works because the generated code does not compile !?
> > 
> >  
>             
>             You should not escape the question mark.            
>             Regards,            
>             Bart.?                        
>  
        
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From bkiers at gmail.com  Thu Nov 17 01:22:10 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 17 Nov 2011 10:22:10 +0100
Subject: [antlr-interest] valid grammar does not compile
In-Reply-To: <20111117091412.35070@gmx.net>
References: <20111117081457.35080@gmx.net>
	<CAOrgODaGwqmSNaVaMNqjfDLgx0XOxvG8S7b1N3SaL5HWxgztsQ@mail.gmail.com>
	<20111117091412.35070@gmx.net>
Message-ID: <CAOrgODaOWf2QXRNGfdBC3D6ERdGEW+jtZ1wX9-a298f6oJ_jMA@mail.gmail.com>

On Thu, Nov 17, 2011 at 10:14 AM, D. Frej <dieter_frej at gmx.net> wrote:

>  and still: the compilation error stays even if I do not quote the
> question mark
>

Ah, hold on, you're using the `..` (range) operator inside a parser rule
(horef). Either create a lexer rule matching '?'  'a'..'z':

Horef
    :    '?' 'a'..'z'
    ;

, or move  'a'..'z' to a lexer rule:

horef
    :    '?' Letter
    ;

Letter
  :  'a'..'z'
  ;


But still, the question mark should not be escaped.

Regards,

Bart.

From karen.sug at gmail.com  Thu Nov 17 04:25:13 2011
From: karen.sug at gmail.com (karen)
Date: Thu, 17 Nov 2011 04:25:13 -0800 (PST)
Subject: [antlr-interest] C# problem with the gettext()
Message-ID: <1321532713835-7003942.post@n2.nabble.com>

Hi,

I am new at ANTLR and I am having a problem trying to use the C# code
generated with the Kuka KRL Grammar...
I am using antlrworks version 1.4.3 , Visual Studio 2010. 
While compiling the C# code, Visual Studio claims that it doesn't recognize
the getText() that appears like this: input.LT(1).getText(). 
I have tried to use different Dotnet libraries but it is still not working. 
Can anyone please help me?


--
View this message in context: http://antlr.1301665.n2.nabble.com/C-problem-with-the-gettext-tp7003942p7003942.html
Sent from the ANTLR mailing list archive at Nabble.com.

From Stefan.Maetje at esd-electronics.com  Thu Nov 17 04:53:27 2011
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Thu, 17 Nov 2011 13:53:27 +0100
Subject: [antlr-interest] Copyright question concerning the code
 accompanying the "Language Implementation Patterns" book
Message-ID: <1321534407.3216.0@pc-stefanm>

Hi,

I'm trying to build a language to language translator using ANTLR. I'm also 
using the "Language Implementation Patterns" book to find my way through this 
task.

For building my symbol tables I would like to use some parts of the source 
code that accompanies this book.

Could anybody clarify if I may use this code or what limitations apply. The 
code carries always a header like this:

/***
 * Excerpted from "Language Implementation Patterns",
 * published by The Pragmatic Bookshelf.
 * Copyrights apply to this code. It may not be used to create training 
material, 
 * courses, books, articles, and the like. Contact us if you are in doubt.
 * We make no guarantees that this code is fit for any purpose. 
 * Visit http://www.pragmaticprogrammer.com/titles/tpdsl for more book 
information.
***/

The program I build is a commercial program (a contract work) for one of our 
customers. But it is not something what is mentioned above. You may call it a 
compiler.

Unfortunately the antlr.markmail.org server is not servicing anything for me 
and a Google search didn't reveal anything specific to this topic.

Thanks,
	Stefan


From Stefan.Maetje at esd-electronics.com  Thu Nov 17 05:11:50 2011
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Thu, 17 Nov 2011 14:11:50 +0100
Subject: [antlr-interest] This should be easy - but I can't figure it out
In-Reply-To: <4EC465B9.8050805@acm.org> (from jbb@acm.org on Thu Nov 17
	02:39:05 2011)
Message-ID: <1321535510.3216.1@pc-stefanm>

Am 17.11.2011 02:39:05 schrieb(en) John B. Brodie:
> On 11/16/2011 12:02 AM, Voelkel, Andy wrote:
> > 
:
: 
:
> > array
> >     : ( l='[' (f+=FLOAT)+  ']' -> ^(ARRAY_FLOAT ["FLT ARY",$l] $f+) )
> >     | ( l='[' (s+=STRING)+ ']' -> ^(ARRAY_STRING["STR ARY",$l] $s+) )
> >   ;
> > 
> > [Andy - This causes compiler errors, and I'm really not sure what you are
> getting at.
> 
> compiler errors are odd here, maybe the C# target does not support the [
> ] notation for initializing an imaginary token?

To be specific on this example only: I believe the order of the parameters (in 
[]) in the rewrite section is wrong. First comes the token reference then 
follows the text for the imaginary node.

array
    : ( l='[' (f+=FLOAT)+  ']' -> ^(ARRAY_FLOAT [$l,"FLT ARY"] $f+) )
    | ( l='[' (s+=STRING)+ ']' -> ^(ARRAY_STRING[$l,"STR ARY"] $s+) )
  ;


See  Chapter 7, p. 176 "Deriving Imaginary Nodes from Real Tokens" in the 
ANTLR Reference Book (print 02).

> 
> > i think this last form will simplify subsequent processing of the tree.
> > note also the proper initialization of the imaginary tokens.
> > 
> > [Andy - what do you mean "proper initialization of the imaginary tokens"]
> 
> the stuff between the [ ] on the right hand side of the -> is
> information used to initialize the imaginary token. in Java, they get
> translated into parameters to its constructor. i refer you to Dr. Parr's
> book to find out more about this feature.

Regards,
	Stefan


From sharwell at pixelminegames.com  Thu Nov 17 06:08:36 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 17 Nov 2011 08:08:36 -0600
Subject: [antlr-interest] C# problem with the gettext()
In-Reply-To: <1321532713835-7003942.post@n2.nabble.com>
References: <1321532713835-7003942.post@n2.nabble.com>
Message-ID: <033801cca532$66a99780$33fcc680$@pixelminegames.com>

The C# code uses C# conventions in many (hopefully most) places.

input.LT(1).Text

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of karen
Sent: Thursday, November 17, 2011 6:25 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# problem with the gettext()

Hi,

I am new at ANTLR and I am having a problem trying to use the C# code
generated with the Kuka KRL Grammar...
I am using antlrworks version 1.4.3 , Visual Studio 2010. 
While compiling the C# code, Visual Studio claims that it doesn't recognize
the getText() that appears like this: input.LT(1).getText(). 
I have tried to use different Dotnet libraries but it is still not working. 
Can anyone please help me?


--
View this message in context:
http://antlr.1301665.n2.nabble.com/C-problem-with-the-gettext-tp7003942p7003
942.html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Thu Nov 17 07:25:44 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 17 Nov 2011 07:25:44 -0800
Subject: [antlr-interest] valid grammar does not compile
In-Reply-To: <20111117081457.35080@gmx.net>
References: <20111117081457.35080@gmx.net>
Message-ID: <b9c32acabd3b800d3ed0521c31da4348@mail.gmail.com>

The range 'a'..'z' does not mean the letters a to z but the token numbers
assigned by ANTLR - you need to read the 5 minute getting started articles
in the WIKI or use the search on the support page.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of D. Frej
> Sent: Thursday, November 17, 2011 12:15 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] valid grammar does not compile
>
> Hi,
>
> I build the following grammar with antlrworks:
>
> grammar questionmark;
>
> horef
>     :    '\?' ('a'..'z')
>     ;
>
> antlrworks tells me "check grammar succeeded". However, debugging does
> not works because the generated code does not compile !?
>
> My question: how does the rule have to look like so that the code
> compile?
> I want to parse text of the form ?a which should be a trivial task for
> antlr.
>
> Thanks,
>
> Didi
> --
> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir belohnen Sie
> mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From mjones at pobox.com  Thu Nov 17 08:39:17 2011
From: mjones at pobox.com (Morgan Jones)
Date: Thu, 17 Nov 2011 11:39:17 -0500
Subject: [antlr-interest] confused about rendering all String Templates...
Message-ID: <CAG1PM18ZEqXJa8Knh6urrojWpB7c9kcyanurO0djpTr5gLtbVw@mail.gmail.com>

I've gotten a lexer, parser (that outputs AST) and a tree parser work.

Currently the tree parser contain little code snippets that include
System.out.println to print my translated file.

Not very pretty, but it works.

My next step was to switch to StringTemplates, because I thought it
would help me clean up the tree parser.
So far my initial efforts haven't yielded much.

After reading TP's books and (this morning) about 40 pages of interest
messages about templates I'm beginning to think I might be
misunderstanding the use of String Templates...

I thought I could include a template and after walking my tree I could
call getTemplate on my return object and then toString to have it dump
out the results of ALL my templates, but as far as I can tell it only
prints out the template of the rule  I called.

I've debugged the resulting .java file and I can step into the results
from each rule and see that a correct template is created.
But I can't figure out how to "walk" all the templates and have them
dump out my results.

>From the reading I've done this morning I'm beginning to believe that
the templates aren't expected to do this...

Can someone clear this up for me?
Point me in the direction of a template example that demonstrates this
if it is suppose to work.

Any help is appreciated.

Morgan

From andy.voelkel at plantronics.com  Thu Nov 17 09:14:47 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Thu, 17 Nov 2011 17:14:47 +0000
Subject: [antlr-interest] confused about rendering all String
 Templates...
In-Reply-To: <CAG1PM18ZEqXJa8Knh6urrojWpB7c9kcyanurO0djpTr5gLtbVw@mail.gmail.com>
References: <CAG1PM18ZEqXJa8Knh6urrojWpB7c9kcyanurO0djpTr5gLtbVw@mail.gmail.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE07135592@USSCMB03.plt.plantronics.com>

Hi Morgan,

Well, I'm a newbie too, but I can tell you how I understand and use StringTemplates. For me, the end result of walking a tree that produces StringTemplates is a StringTemplate which contains elements which are themselves StringTemplates (or lists of String Templates), which contains elements which are themselves StringTemplates (or lists of String Templates), and so on. At this point no "rendering" to actual strings has been done. After the giant StringTemplate amalgam is created, rendering the top level StringTemplate will render all the sub-StringTemplate in turn, all the way down the tree.

In a way you have created a different sort of StringTemplate tree during the tree walk, but it is not the AST itself.

So as you are walking a tree, you are taking the StringTemplates returned by rules and putting them into StringTemplates of the containing rules, and the top level rule returns the top level StringTemplate.

I hope this is clear, and the experts can correct my misunderstandings,

- Andy

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Morgan Jones
Sent: Thursday, November 17, 2011 8:39 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] confused about rendering all String Templates...

I've gotten a lexer, parser (that outputs AST) and a tree parser work.

Currently the tree parser contain little code snippets that include System.out.println to print my translated file.

Not very pretty, but it works.

My next step was to switch to StringTemplates, because I thought it would help me clean up the tree parser.
So far my initial efforts haven't yielded much.

After reading TP's books and (this morning) about 40 pages of interest messages about templates I'm beginning to think I might be misunderstanding the use of String Templates...

I thought I could include a template and after walking my tree I could call getTemplate on my return object and then toString to have it dump out the results of ALL my templates, but as far as I can tell it only prints out the template of the rule  I called.

I've debugged the resulting .java file and I can step into the results from each rule and see that a correct template is created.
But I can't figure out how to "walk" all the templates and have them dump out my results.

>From the reading I've done this morning I'm beginning to believe that
the templates aren't expected to do this...

Can someone clear this up for me?
Point me in the direction of a template example that demonstrates this if it is suppose to work.

Any help is appreciated.

Morgan

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From mjones at pobox.com  Thu Nov 17 09:43:00 2011
From: mjones at pobox.com (Morgan Jones)
Date: Thu, 17 Nov 2011 12:43:00 -0500
Subject: [antlr-interest] confused about rendering all String
	Templates...
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE07135592@USSCMB03.plt.plantronics.com>
References: <CAG1PM18ZEqXJa8Knh6urrojWpB7c9kcyanurO0djpTr5gLtbVw@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE07135592@USSCMB03.plt.plantronics.com>
Message-ID: <CAG1PM18KepuR3Jju8uW6mpN1aHqzbO=LW=BtTnaZyKCLCULaYQ@mail.gmail.com>

Andy, that does help... thanks for replying.
as I read about StringTemplates today I gathered they were capable of
much more than I had initially realized...
I'll go back and try to track down some examples of the nested String
Templates you spoke of.

Maybe I'll luck out and someone will point me to a concrete example. ;)

Morgan

On Thu, Nov 17, 2011 at 12:14 PM, Voelkel, Andy
<andy.voelkel at plantronics.com> wrote:
> Hi Morgan,
>
> Well, I'm a newbie too, but I can tell you how I understand and use StringTemplates. For me, the end result of walking a tree that produces StringTemplates is a StringTemplate which contains elements which are themselves StringTemplates (or lists of String Templates), which contains elements which are themselves StringTemplates (or lists of String Templates), and so on. At this point no "rendering" to actual strings has been done. After the giant StringTemplate amalgam is created, rendering the top level StringTemplate will render all the sub-StringTemplate in turn, all the way down the tree.
>
> In a way you have created a different sort of StringTemplate tree during the tree walk, but it is not the AST itself.
>
> So as you are walking a tree, you are taking the StringTemplates returned by rules and putting them into StringTemplates of the containing rules, and the top level rule returns the top level StringTemplate.
>
> I hope this is clear, and the experts can correct my misunderstandings,
>
> - Andy
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Morgan Jones
> Sent: Thursday, November 17, 2011 8:39 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] confused about rendering all String Templates...
>
> I've gotten a lexer, parser (that outputs AST) and a tree parser work.
>
> Currently the tree parser contain little code snippets that include System.out.println to print my translated file.
>
> Not very pretty, but it works.
>
> My next step was to switch to StringTemplates, because I thought it would help me clean up the tree parser.
> So far my initial efforts haven't yielded much.
>
> After reading TP's books and (this morning) about 40 pages of interest messages about templates I'm beginning to think I might be misunderstanding the use of String Templates...
>
> I thought I could include a template and after walking my tree I could call getTemplate on my return object and then toString to have it dump out the results of ALL my templates, but as far as I can tell it only prints out the template of the rule ?I called.
>
> I've debugged the resulting .java file and I can step into the results from each rule and see that a correct template is created.
> But I can't figure out how to "walk" all the templates and have them dump out my results.
>
> >From the reading I've done this morning I'm beginning to believe that
> the templates aren't expected to do this...
>
> Can someone clear this up for me?
> Point me in the direction of a template example that demonstrates this if it is suppose to work.
>
> Any help is appreciated.
>
> Morgan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.
>

From andy.voelkel at plantronics.com  Thu Nov 17 09:50:24 2011
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Thu, 17 Nov 2011 17:50:24 +0000
Subject: [antlr-interest] confused about rendering all String
 Templates...
In-Reply-To: <CAG1PM18KepuR3Jju8uW6mpN1aHqzbO=LW=BtTnaZyKCLCULaYQ@mail.gmail.com>
References: <CAG1PM18ZEqXJa8Knh6urrojWpB7c9kcyanurO0djpTr5gLtbVw@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE07135592@USSCMB03.plt.plantronics.com>
	<CAG1PM18KepuR3Jju8uW6mpN1aHqzbO=LW=BtTnaZyKCLCULaYQ@mail.gmail.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE07135648@USSCMB03.plt.plantronics.com>

It's very confusing trying to read the detailed documentation on the StringTemplate site until you get the basic idea, but keep at it. A key thing for me was realizing that the objects embedded as "parameters" in a string template can be just about anything that can be rendered to a string, or collections of things that can be rendered to a string, or StringTemplates themselves. That is what makes the recursion possible, and makes them so powerful. Do you have "The Definitive Guide to Antlr"? That's handy, although it is still a leap from his examples to understanding the terse online documentation.

- Andy

-----Original Message-----
From: morgman at gmail.com [mailto:morgman at gmail.com] On Behalf Of Morgan Jones
Sent: Thursday, November 17, 2011 9:43 AM
To: Voelkel, Andy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] confused about rendering all String Templates...

Andy, that does help... thanks for replying.
as I read about StringTemplates today I gathered they were capable of much more than I had initially realized...
I'll go back and try to track down some examples of the nested String Templates you spoke of.

Maybe I'll luck out and someone will point me to a concrete example. ;)

Morgan

On Thu, Nov 17, 2011 at 12:14 PM, Voelkel, Andy <andy.voelkel at plantronics.com> wrote:
> Hi Morgan,
>
> Well, I'm a newbie too, but I can tell you how I understand and use StringTemplates. For me, the end result of walking a tree that produces StringTemplates is a StringTemplate which contains elements which are themselves StringTemplates (or lists of String Templates), which contains elements which are themselves StringTemplates (or lists of String Templates), and so on. At this point no "rendering" to actual strings has been done. After the giant StringTemplate amalgam is created, rendering the top level StringTemplate will render all the sub-StringTemplate in turn, all the way down the tree.
>
> In a way you have created a different sort of StringTemplate tree during the tree walk, but it is not the AST itself.
>
> So as you are walking a tree, you are taking the StringTemplates returned by rules and putting them into StringTemplates of the containing rules, and the top level rule returns the top level StringTemplate.
>
> I hope this is clear, and the experts can correct my
> misunderstandings,
>
> - Andy
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Morgan Jones
> Sent: Thursday, November 17, 2011 8:39 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] confused about rendering all String Templates...
>
> I've gotten a lexer, parser (that outputs AST) and a tree parser work.
>
> Currently the tree parser contain little code snippets that include System.out.println to print my translated file.
>
> Not very pretty, but it works.
>
> My next step was to switch to StringTemplates, because I thought it would help me clean up the tree parser.
> So far my initial efforts haven't yielded much.
>
> After reading TP's books and (this morning) about 40 pages of interest messages about templates I'm beginning to think I might be misunderstanding the use of String Templates...
>
> I thought I could include a template and after walking my tree I could call getTemplate on my return object and then toString to have it dump out the results of ALL my templates, but as far as I can tell it only prints out the template of the rule  I called.
>
> I've debugged the resulting .java file and I can step into the results from each rule and see that a correct template is created.
> But I can't figure out how to "walk" all the templates and have them dump out my results.
>
> >From the reading I've done this morning I'm beginning to believe that
> the templates aren't expected to do this...
>
> Can someone clear this up for me?
> Point me in the direction of a template example that demonstrates this if it is suppose to work.
>
> Any help is appreciated.
>
> Morgan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.
>


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From ruslan_zasukhin at valentina-db.com  Thu Nov 17 12:21:00 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Thu, 17 Nov 2011 22:21:00 +0200
Subject: [antlr-interest] reuse() methos in 3.4 C runtime
In-Reply-To: <7c0bbbf0ff9affa15bf236fadbb6bd26@mail.gmail.com>
Message-ID: <CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>

On 6/24/11 7:49 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

I will send few letters now, but I will start with simple question to this
your letter.

Am I right, that we also in this loop should kill and create again
TreeParser?  

Yes?


> Because the documentation is not yet up to date, here is an example of
> reusing the allocated memory in input streams and token streams:
> 
> 
> 
>     for (i=0; i<iterations; i++)
>    {
>         // Run the parser.
>         //
>         psr->start(psr);
> 
>         // --------------------------------------
>         // Now reset everything for the next run.
>         // Order of calls is important.
> 
>         // Input stream can now be reused
>         //
>         input->reuse(input, sourceCode, sourceLen, sourceName);
> 
>         // Reset the common token stream so that it will reuse its resources
>         //
>         tstream->reset(tstream);
> 
>         // Reset the lexer (new function generated by antlr now)
>         //
>         lxr->reset(lxr);
> 
>         // Reset the parser (new function generated by antlr now)
>         //
>         psr->reset(psr);
>     }




-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Thu Nov 17 12:43:11 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Thu, 17 Nov 2011 22:43:11 +0200
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <5862f5b5ad3d15ecc5d78935e5cc646d@mail.gmail.com>
Message-ID: <CAEB3E7F.F59BD%ruslan_zasukhin@valentina-db.com>

Hi Jim,

Thank you  for your feedback, and I have update now...

1) I was able remove all  .text  usage in both Parser and TreeParser. GOOD.

2) BAD ... This have save 500MB,
   but I still have 1.5GB of allocations in my bench ...

And now I see (using Apple Instruments) that all this is eaten by PARSER.
Not by Lexer, and not by TreeParser.

I just see endless 
                    newPool
                    newPool
                    newPool
                    newPool
                    newPool
                    newPool

I will send you snapshoot off list so you can see that.

And now there is ZERO my code, which affect this.
Only ANTLR own logic...

This makes me think, that reuse() do not work as expected.

As I understand, when we do
        parser( reset )

It must mark all existed allocations as free in your pool,
So next run should reuse all that. Yes?

And note, that all my calls to parser, are very similar by size.
This is just 
    INSERT INTO( f1, f,2 ... f9 ) VALUES ( v1, v2, ... )

I.e. Pool really should not grow much after first / second iteration of
loop. But it grows like crazy.


I think you have own test app where you did test this ...
May be just increase loop count to million or such
To see that RAM on your computer go away ...


I very hope you will be able find issue and show how fix it
in sources of ANTLR 3.4 ...  Please?  May be some kind of objects is not
marked as free ?


======
Also interesting fact.

v3 without reuse                                 22.4 sec
v3 with reuse and 1.5GB allocation     20.4 sec

v2 with reuse                                      19.7


So if we will be able resolve this 1.5GB "leaks", there is yet hope to be at
least not slower of v2 ...


=======================
About your hope that V3 C should be much faster of v2 C++
So far I do not see this.

I see in profiles,
    parser                           36%    RAM only
    tree parser                    24%    RAM only
    execute of vdb engine  13%     insert recs into disk (!!) db

And when I am starting go deep by parser calls ... I just see that deep is
big  
        sql -> sql_single -> ....

And each step down just reduce 0.5-0.8%  ...

This is BODY of each rule of parser ...

And nothing really to optimize :(
Just a lots of small calls  ... NilNodes,  LT(), ...


=======================
My vision is that this is Nature of ANTLR ... We get many calls of parser
funcs ... Deep stack ... Although they are light they eat milliseconds ...


And fact that in C you need create structures with huge number of pointers
sometimes, then e.g NULL them,  in C++ virtual table of methods is created
once per class, not once per instances ... This fact can be one of hidden
bottleneck IMO. You can workaround this, if also will extract pointers into
single separate structure, so instances will have just a single pointer.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Thu Nov 17 13:24:26 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Thu, 17 Nov 2011 23:24:26 +0200
Subject: [antlr-interest] reuse() methos in 3.4 C runtime
In-Reply-To: <CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>
Message-ID: <CAEB482A.F59D1%ruslan_zasukhin@valentina-db.com>

Hi Jim,

Below are copy-pastes of my class-wrapper around ANTLR3
Lexer/Parser/TreeParser.
So you can see if I made some stupid mistake...


>> On 6/24/11 7:49 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>>
>> Because the documentation is not yet up to date, here is an example of
>> reusing the allocated memory in input streams and token streams:
>> 
>>     for (i=0; i<iterations; i++)
>>    {
>>         // Run the parser.
>>         psr->start(psr);
>> 
>>         // --------------------------------------
>>         // Now reset everything for the next run.
>>         // Order of calls is important.
>> 
>>         // Input stream can now be reused
>>         input->reuse(input, sourceCode, sourceLen, sourceName);
>> 
>>         // Reset the common token stream so that it will reuse its resources
>>         tstream->reset(tstream);
>> 
>>         // Reset the lexer (new function generated by antlr now)
>>         lxr->reset(lxr);
>> 
>>         // Reset the parser (new function generated by antlr now)
>>         psr->reset(psr);
>>     }


/**************************************************************************
void SqlParser_v3::ResuseParserObjects(
    const char*        inTextToParse,
    vuint32            inLength )
{
    // -------------------------------
    // TREE PARSER cannot be reused. Destroy it.
    //
    if( mpTreeParser )
    {
        mpTreeParser->free( mpTreeParser );
        mpTreeParser = NULL;
    }
    
    if( mpNodes )
    {
        mpNodes->free( mpNodes );
        mpNodes = NULL;
    }    


    // -------------------------------
    // Reuse other objects
    //
    mpInput->reuse(
        mpInput, 
        (pANTLR3_UINT8) inTextToParse,
        (ANTLR3_UINT32) inLength,
        (pANTLR3_UINT8) "VSQL" );

    mpTokenStream->reset( mpTokenStream );
    mpLexer         ->reset( mpLexer );
    mpParser     ->reset( mpParser );

    ResetOwnData( mpParser );
}



And few other related methods ...


/**************************************************************************
void SqlParser_v3::Parse_UTF8(
    I_SqlDatabaseEx*           inDatabase,
    const char*                inCommand,
    const char*                inCommandEnd )
{
    argused1(inDatabase);

//    COMMENT this line to force  REUSE() mode ...
//    DestroyParserObjects();

    if( mpInput ) 
        ResuseParserObjects( inCommand, (inCommandEnd - inCommand) );
    else
        CreateParserObjects( inCommand, (inCommandEnd - inCommand) );


    // -------------------------
    // Parse the input expression
    mAST = mpParser->sql( mpParser );


    // IF PARSER have generate some errors,
    // then we throw them as VSQL exception.
    if( mpParser->pParser->rec->state->errorCount )
    {    
        StToUTF16 cnv( ResultStringBuffer, pErrEnd, GetConverter_UTF8() );
        throw VSQL::xVSQLException( ERR_SQL_PARSER_ERROR, cnv.c_str() );
    }    
}


/**************************************************************************
void SqlParser_v3::CreateParserObjects(
    const char*        inTextToParse,
    vuint32            inLength )
{
    if( inTextToParse == NULL )
        return; // all objects will be still NULLs also.

    // ------------------------------
    // Create INPUT object:

    // NOTE: SQL strings do not have BOM - first few bytes, which define
endian of UTF16.
    //         So for UTF16, we must here self specify BE or LE.
    mpInput = antlr3StringStreamNew(
        (pANTLR3_UINT8) inTextToParse, mEncoding, (ANTLR3_UINT32) inLength,
(pANTLR3_UINT8) "VSQL" );

    mpInput->setUcaseLA( mpInput, ANTLR3_TRUE );


    // ------------------------------
    // Create LEXER v3 object:

    mpLexer = SqlParser_v3LexerNew( mpInput );
    mpTokenStream = antlr3CommonTokenStreamSourceNew( ANTLR3_SIZE_HINT,
TOKENSOURCE( mpLexer ) );


    // ------------------------------
    // Create PARSER v3 object:

    mpParser = SqlParser_v3ParserNew( mpTokenStream );  // is generated by
ANTLR3
    mpParser->mDoAllCommands = mDoAllCommandsInitial;

    ResetOwnData( mpParser );


/**************************************************************************
void SqlParser_v3::DestroyParserObjects( void )
{
    // REVERSE ORDER to construction:

    if( mpTreeParser )
    {
        mpTreeParser->free( mpTreeParser );
        mpTreeParser = NULL;
    }
    
    if( mpNodes )
    {
        mpNodes->free( mpNodes );
        mpNodes = NULL;
    }

    if( mpParser )
    {
        mpParser->mpStartPositions = NULL;
    
        mpParser->free( mpParser );
        mpParser = NULL;
    }
   
    if( mpTokenStream )
    {
        mpTokenStream->free( mpTokenStream );
        mpTokenStream = NULL;
    }    
    
    if( mpLexer )
    {
        mpLexer->free( mpLexer );
        mpLexer = NULL;
    }
    
    if( mpInput )
    {
        mpInput->close( mpInput );
        mpInput = NULL;
    }
}






-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From jimi at temporal-wave.com  Thu Nov 17 15:19:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 17 Nov 2011 15:19:10 -0800
Subject: [antlr-interest] reuse() methos in 3.4 C runtime
In-Reply-To: <CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>
References: <7c0bbbf0ff9affa15bf236fadbb6bd26@mail.gmail.com>
	<CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>
Message-ID: <0fdd047872bf3265effe289a6f5d6aa4@mail.gmail.com>

yes

> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Thursday, November 17, 2011 12:21 PM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] reuse() methos in 3.4 C runtime
>
> On 6/24/11 7:49 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>
> Hi Jim,
>
> I will send few letters now, but I will start with simple question to
> this your letter.
>
> Am I right, that we also in this loop should kill and create again
> TreeParser?
>
> Yes?
>
>
> > Because the documentation is not yet up to date, here is an example
> of
> > reusing the allocated memory in input streams and token streams:
> >
> >
> >
> >     for (i=0; i<iterations; i++)
> >    {
> >         // Run the parser.
> >         //
> >         psr->start(psr);
> >
> >         // --------------------------------------
> >         // Now reset everything for the next run.
> >         // Order of calls is important.
> >
> >         // Input stream can now be reused
> >         //
> >         input->reuse(input, sourceCode, sourceLen, sourceName);
> >
> >         // Reset the common token stream so that it will reuse its
> resources
> >         //
> >         tstream->reset(tstream);
> >
> >         // Reset the lexer (new function generated by antlr now)
> >         //
> >         lxr->reset(lxr);
> >
> >         // Reset the parser (new function generated by antlr now)
> >         //
> >         psr->reset(psr);
> >     }
>
>
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From jimi at temporal-wave.com  Thu Nov 17 15:24:01 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 17 Nov 2011 15:24:01 -0800
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <CAEB3E7F.F59BD%ruslan_zasukhin@valentina-db.com>
References: <5862f5b5ad3d15ecc5d78935e5cc646d@mail.gmail.com>
	<CAEB3E7F.F59BD%ruslan_zasukhin@valentina-db.com>
Message-ID: <58279657a0b384b13e416a9eba22042c@mail.gmail.com>

You should not be seeing more than a few newPool calls, however, if you
are building a tree then this may be affecting it. The reuse stuff was not
built for trees, so you may have to debug this because I won't have time
to look at new use cases for some time.

I will take out the myriad duplication of function pointers over the new
year all being well.

Jim

> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Thursday, November 17, 2011 12:43 PM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [C] my v3 Parser no reuse() slower 20%
> than v2. With reuse() 2GB leaks, oops.
>
> Hi Jim,
>
> Thank you  for your feedback, and I have update now...
>
> 1) I was able remove all  .text  usage in both Parser and TreeParser.
> GOOD.
>
> 2) BAD ... This have save 500MB,
>    but I still have 1.5GB of allocations in my bench ...
>
> And now I see (using Apple Instruments) that all this is eaten by
> PARSER.
> Not by Lexer, and not by TreeParser.
>
> I just see endless
>                     newPool
>                     newPool
>                     newPool
>                     newPool
>                     newPool
>                     newPool
>
> I will send you snapshoot off list so you can see that.
>
> And now there is ZERO my code, which affect this.
> Only ANTLR own logic...
>
> This makes me think, that reuse() do not work as expected.
>
> As I understand, when we do
>         parser( reset )
>
> It must mark all existed allocations as free in your pool, So next run
> should reuse all that. Yes?
>
> And note, that all my calls to parser, are very similar by size.
> This is just
>     INSERT INTO( f1, f,2 ... f9 ) VALUES ( v1, v2, ... )
>
> I.e. Pool really should not grow much after first / second iteration of
> loop. But it grows like crazy.
>
>
> I think you have own test app where you did test this ...
> May be just increase loop count to million or such To see that RAM on
> your computer go away ...
>
>
> I very hope you will be able find issue and show how fix it in sources
> of ANTLR 3.4 ...  Please?  May be some kind of objects is not marked as
> free ?
>
>
> ======
> Also interesting fact.
>
> v3 without reuse                                 22.4 sec
> v3 with reuse and 1.5GB allocation     20.4 sec
>
> v2 with reuse                                      19.7
>
>
> So if we will be able resolve this 1.5GB "leaks", there is yet hope to
> be at least not slower of v2 ...
>
>
> =======================
> About your hope that V3 C should be much faster of v2 C++ So far I do
> not see this.
>
> I see in profiles,
>     parser                           36%    RAM only
>     tree parser                    24%    RAM only
>     execute of vdb engine  13%     insert recs into disk (!!) db
>
> And when I am starting go deep by parser calls ... I just see that deep
> is big
>         sql -> sql_single -> ....
>
> And each step down just reduce 0.5-0.8%  ...
>
> This is BODY of each rule of parser ...
>
> And nothing really to optimize :(
> Just a lots of small calls  ... NilNodes,  LT(), ...
>
>
> =======================
> My vision is that this is Nature of ANTLR ... We get many calls of
> parser funcs ... Deep stack ... Although they are light they eat
> milliseconds ...
>
>
> And fact that in C you need create structures with huge number of
> pointers sometimes, then e.g NULL them,  in C++ virtual table of
> methods is created once per class, not once per instances ... This fact
> can be one of hidden bottleneck IMO. You can workaround this, if also
> will extract pointers into single separate structure, so instances will
> have just a single pointer.
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From ruslan_zasukhin at valentina-db.com  Thu Nov 17 22:09:33 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Fri, 18 Nov 2011 08:09:33 +0200
Subject: [antlr-interest] [C] my v3 Parser no reuse() slower 20% than
 v2. With reuse() 2GB leaks, oops.
In-Reply-To: <58279657a0b384b13e416a9eba22042c@mail.gmail.com>
Message-ID: <CAEBC33D.F5A0E%ruslan_zasukhin@valentina-db.com>

On 11/18/11 1:24 AM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

> You should not be seeing more than a few newPool calls, however, if you
> are building a tree then this may be affecting it.

You mean 

A) my own tree in the parser ?
      no, I do not build. Work ANTLR itself to build AST

B) tree parser?
      but how this affect?
      and everybody need tree parser ...


> The reuse stuff was not built for trees,

Right.  This is why in my Reuse() func you can see that I destroy tree
parser, then it is created again later ...

**************************************************
void SqlParser_v3::ResuseParserObjects(
    const char*        inTextToParse,
    vuint32            inLength )
{
    // -------------------------------
    // TREE PARSER cannot be reused. Destroy it.
    //
    if( mpTreeParser )
    {
        mpTreeParser->free( mpTreeParser );
        mpTreeParser = NULL;
    }
    
    if( mpNodes )
    {
        mpNodes->free( mpNodes );
        mpNodes = NULL;
    }    


    // -------------------------------
    // Reuse other objects
    //
    mpInput->reuse(
        mpInput, 
        (pANTLR3_UINT8) inTextToParse,
        (ANTLR3_UINT32) inLength,
        (pANTLR3_UINT8) "VSQL" );

    mpTokenStream->reset( mpTokenStream );
    mpLexer         ->reset( mpLexer );
    mpParser     ->reset( mpParser );

    ResetOwnData( mpParser );
}


> so you may have to debug this because I won't have time
> to look at new use cases for some time.

Yes, I am going now spend time to see how work  parser->reset() and others
here.

But can you at least give me points, what I should see ?
You set some flags for objects of parser?
 
> I will take out the myriad duplication of function pointers over the new
> year all being well.

This is speed ok. But memory ...


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From david at mcgilly.com  Thu Nov 17 22:55:59 2011
From: david at mcgilly.com (David Riddle)
Date: Thu, 17 Nov 2011 22:55:59 -0800
Subject: [antlr-interest] Failure to ignore newline
Message-ID: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>

Hi -

This should be a very simple thing - I'm attempting to have my grammar hide
newline, carriage returns, etc. However, every concievable form of a
grammar that attempts to skip over these things or send them to the hidden
channel seems to fail for me. Here's a very basic example:

grammar Test;

prog: ID+;

ID: 'a'..'z'+;

WS: '\n'+ {$channel=HIDDEN;};

// Input: a \n b
// Output: a n b


-- 
David Riddle
Servoy Developer
(510) 854-6221
www.mcgilly.com

From Norman at dunbar-it.co.uk  Thu Nov 17 23:16:23 2011
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Fri, 18 Nov 2011 07:16:23 +0000
Subject: [antlr-interest] Failure to ignore newline
In-Reply-To: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>
References: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>
Message-ID: <4EC60647.8050903@dunbar-it.co.uk>

Morning David,

On 18/11/11 06:55, David Riddle wrote:
> grammar Test;
>
> prog: ID+;
>
> ID: 'a'..'z'+;
>
> WS: '\n'+ {$channel=HIDDEN;};

I just pasted your grammer into ANTLRWorks and it seemed happy. In the 
interpreter I entered the following:

a
b

With a real newline between them, it gave the correct output. See 
attached - if this list allows attachments, failing that I got:

<grammar Test>
       |
      prog
       |
      ---
     |   |
     a   b

Are you sure you used a real newline as opposed to the two characters "/n"?


Cheers,
Norm.

Disclaimer: I'm not a compiler writer nor do I play one on TV.

-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestGrammar.jpg
Type: image/jpeg
Size: 3971 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111118/30c7712a/attachment.jpg 

From bkiers at gmail.com  Fri Nov 18 00:21:27 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 18 Nov 2011 09:21:27 +0100
Subject: [antlr-interest] Failure to ignore newline
In-Reply-To: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>
References: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>
Message-ID: <CAOrgODYtNfjF8VON-9QdqZ=LbFVXGTChGsYfyBCmc1dWOFBa-Q@mail.gmail.com>

On Fri, Nov 18, 2011 at 7:55 AM, David Riddle <david at mcgilly.com> wrote:

> Hi -
>
> This should be a very simple thing - I'm attempting to have my grammar hide
> newline, carriage returns, etc. However, every concievable form of a
> grammar that attempts to skip over these things or send them to the hidden
> channel seems to fail for me. Here's a very basic example:
>
> grammar Test;
>
> prog: ID+;
>
> ID: 'a'..'z'+;
>
> WS: '\n'+ {$channel=HIDDEN;};
>
> // Input: a \n b
> // Output: a n b
>

I'm guessing that's no 0xA (new line char) in your input, but a backslash
followed by a 'n'.

Regards,

Bart.

From franck102 at yahoo.com  Fri Nov 18 03:39:52 2011
From: franck102 at yahoo.com (franck102)
Date: Fri, 18 Nov 2011 03:39:52 -0800 (PST)
Subject: [antlr-interest] String concatenation expression rule
Message-ID: <1321616392857-7007921.post@n2.nabble.com>

I am writing a grammar for a fairly complex expression language, and in
particular I need to support string concatenation which is performed simply
by separating string literals with a space; and which automatically converts
other expressions to a string if needed to concatenate:
"a" "b" -> "ab"
2+3 "mm" -> "5mm"

I suspect I could use predicates to write a rule like this:

concatExpression
        :        ( expression | STRING_LITERAL )+ { apply only if at least
one of the elements is a string literal }?

Is there a way to achieve this? The alternative formulations I can think of
are pretty messy...
Thanks!

--
View this message in context: http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7007921.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Fri Nov 18 04:11:24 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 18 Nov 2011 13:11:24 +0100
Subject: [antlr-interest] String concatenation expression rule
In-Reply-To: <1321616392857-7007921.post@n2.nabble.com>
References: <1321616392857-7007921.post@n2.nabble.com>
Message-ID: <CAOrgODb-E0B3tgUOD-Br7XZy6E2PN+fq0Ut7yZCxs85bG-R4CQ@mail.gmail.com>

On Fri, Nov 18, 2011 at 12:39 PM, franck102 <franck102 at yahoo.com> wrote:

> I am writing a grammar for a fairly complex expression language, and in
> particular I need to support string concatenation which is performed simply
> by separating string literals with a space; and which automatically
> converts
> other expressions to a string if needed to concatenate:
> "a" "b" -> "ab"
> 2+3 "mm" -> "5mm"
>
> I suspect I could use predicates to write a rule like this:
>
> concatExpression
>        :        ( expression | STRING_LITERAL )+ { apply only if at least
> one of the elements is a string literal }?
>
> Is there a way to achieve this? The alternative formulations I can think of
> are pretty messy...
>
>
As far as I understand it, you don't need any predicate. I see a
concat-expression has a lower precedence than addition, in which case this
could do the trick:

grammar T;

options {
  output=AST;
}

tokens {
  ROOT;
  CONCAT;
}

parse
  :  (expression ';')* EOF -> ^(ROOT expression*)
  ;

expression
  :  (add -> add) (add+ -> ^(CONCAT add+))?
  ;

add
  :  atom (('+' | '-')^ atom)*
  ;

atom
  :  Number
  |  String
  |  '(' expression ')' -> expression
  ;

Number : '0'..'9'+ ('.' '0'..'9'+)?;
String : '"' ~'"'* '"';
Space  : ' ' {skip();};

You can test it with the following class:

import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {
  public static void main(String[] args) throws Exception {
    String src = "42 - 2; 2 + 3 \"mm\"; \"a\" \"b\" 4-3-2 \"c\"; \"pi = \"
3.14159;";
    TLexer lexer = new TLexer(new ANTLRStringStream(src));
    TParser parser = new TParser(new CommonTokenStream(lexer));
    CommonTree root = (CommonTree)parser.parse().getTree(); ;
    System.out.println(new DOTTreeGenerator().toDOT(root));
  }
}

Regards,

Bart.

From mjones at pobox.com  Fri Nov 18 06:05:09 2011
From: mjones at pobox.com (Morgan Jones)
Date: Fri, 18 Nov 2011 09:05:09 -0500
Subject: [antlr-interest] confused about rendering all String
	Templates...
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE07135648@USSCMB03.plt.plantronics.com>
References: <CAG1PM18ZEqXJa8Knh6urrojWpB7c9kcyanurO0djpTr5gLtbVw@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE07135592@USSCMB03.plt.plantronics.com>
	<CAG1PM18KepuR3Jju8uW6mpN1aHqzbO=LW=BtTnaZyKCLCULaYQ@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE07135648@USSCMB03.plt.plantronics.com>
Message-ID: <CAG1PM1_sRsJUfkeRopD4m4X0-nLcsy2mZxgNSvJkna78AX7wSQ@mail.gmail.com>

ahhh... just updated my grammar to output templates...
you're right, once you explained it I knew what to look for in other
examples I had worked through.

Now when I'm calling toString on the template that was returned I'm
getting everything that I accumulated while walking my AST.

Now currently I'm not saving much in the way of cleaning up my tree
parser, but now that I know what to expect wrt templates I can look
for ways to refactor it and hopefully improve it!

thanks again for the insight, left to my own devices I may have never
stumbled across that =D

Morgan

On Thu, Nov 17, 2011 at 12:50 PM, Voelkel, Andy
<andy.voelkel at plantronics.com> wrote:
> It's very confusing trying to read the detailed documentation on the StringTemplate site until you get the basic idea, but keep at it. A key thing for me was realizing that the objects embedded as "parameters" in a string template can be just about anything that can be rendered to a string, or collections of things that can be rendered to a string, or StringTemplates themselves. That is what makes the recursion possible, and makes them so powerful. Do you have "The Definitive Guide to Antlr"? That's handy, although it is still a leap from his examples to understanding the terse online documentation.
>
> - Andy
>
> -----Original Message-----
> From: morgman at gmail.com [mailto:morgman at gmail.com] On Behalf Of Morgan Jones
> Sent: Thursday, November 17, 2011 9:43 AM
> To: Voelkel, Andy
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] confused about rendering all String Templates...
>
> Andy, that does help... thanks for replying.
> as I read about StringTemplates today I gathered they were capable of much more than I had initially realized...
> I'll go back and try to track down some examples of the nested String Templates you spoke of.
>
> Maybe I'll luck out and someone will point me to a concrete example. ;)
>
> Morgan
>
> On Thu, Nov 17, 2011 at 12:14 PM, Voelkel, Andy <andy.voelkel at plantronics.com> wrote:
>> Hi Morgan,
>>
>> Well, I'm a newbie too, but I can tell you how I understand and use StringTemplates. For me, the end result of walking a tree that produces StringTemplates is a StringTemplate which contains elements which are themselves StringTemplates (or lists of String Templates), which contains elements which are themselves StringTemplates (or lists of String Templates), and so on. At this point no "rendering" to actual strings has been done. After the giant StringTemplate amalgam is created, rendering the top level StringTemplate will render all the sub-StringTemplate in turn, all the way down the tree.
>>
>> In a way you have created a different sort of StringTemplate tree during the tree walk, but it is not the AST itself.
>>
>> So as you are walking a tree, you are taking the StringTemplates returned by rules and putting them into StringTemplates of the containing rules, and the top level rule returns the top level StringTemplate.
>>
>> I hope this is clear, and the experts can correct my
>> misunderstandings,
>>
>> - Andy
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Morgan Jones
>> Sent: Thursday, November 17, 2011 8:39 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] confused about rendering all String Templates...
>>
>> I've gotten a lexer, parser (that outputs AST) and a tree parser work.
>>
>> Currently the tree parser contain little code snippets that include System.out.println to print my translated file.
>>
>> Not very pretty, but it works.
>>
>> My next step was to switch to StringTemplates, because I thought it would help me clean up the tree parser.
>> So far my initial efforts haven't yielded much.
>>
>> After reading TP's books and (this morning) about 40 pages of interest messages about templates I'm beginning to think I might be misunderstanding the use of String Templates...
>>
>> I thought I could include a template and after walking my tree I could call getTemplate on my return object and then toString to have it dump out the results of ALL my templates, but as far as I can tell it only prints out the template of the rule ?I called.
>>
>> I've debugged the resulting .java file and I can step into the results from each rule and see that a correct template is created.
>> But I can't figure out how to "walk" all the templates and have them dump out my results.
>>
>> >From the reading I've done this morning I'm beginning to believe that
>> the templates aren't expected to do this...
>>
>> Can someone clear this up for me?
>> Point me in the direction of a template example that demonstrates this if it is suppose to work.
>>
>> Any help is appreciated.
>>
>> Morgan
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> ________________________________
>>
>> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.
>>
>> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.
>>
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.
>

From david at mcgilly.com  Fri Nov 18 07:01:36 2011
From: david at mcgilly.com (David Riddle)
Date: Fri, 18 Nov 2011 07:01:36 -0800
Subject: [antlr-interest] Failure to ignore newline
In-Reply-To: <CAOrgODYtNfjF8VON-9QdqZ=LbFVXGTChGsYfyBCmc1dWOFBa-Q@mail.gmail.com>
References: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>
	<CAOrgODYtNfjF8VON-9QdqZ=LbFVXGTChGsYfyBCmc1dWOFBa-Q@mail.gmail.com>
Message-ID: <CADZkTtV64oyfo95mYT4noCPWC3GOnrfN01wzEeXrLKcs6XsUOA@mail.gmail.com>

Hi Bart -

Yes, it's a \n, and I thought I told the grammar to set '\n' to a hidden
channel.  So, why is it not hidden?

~ Dave

On Fri, Nov 18, 2011 at 12:21 AM, Bart Kiers <bkiers at gmail.com> wrote:

> On Fri, Nov 18, 2011 at 7:55 AM, David Riddle <david at mcgilly.com> wrote:
>
>> Hi -
>>
>> This should be a very simple thing - I'm attempting to have my grammar
>> hide
>> newline, carriage returns, etc. However, every concievable form of a
>> grammar that attempts to skip over these things or send them to the hidden
>> channel seems to fail for me. Here's a very basic example:
>>
>> grammar Test;
>>
>> prog: ID+;
>>
>> ID: 'a'..'z'+;
>>
>> WS: '\n'+ {$channel=HIDDEN;};
>>
>> // Input: a \n b
>> // Output: a n b
>>
>
> I'm guessing that's no 0xA (new line char) in your input, but a backslash
> followed by a 'n'.
>
> Regards,
>
>  Bart.
>
>


-- 
David Riddle
Servoy Developer
(510) 854-6221
www.mcgilly.com

From bkiers at gmail.com  Fri Nov 18 07:12:47 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 18 Nov 2011 16:12:47 +0100
Subject: [antlr-interest] Failure to ignore newline
In-Reply-To: <CADZkTtV64oyfo95mYT4noCPWC3GOnrfN01wzEeXrLKcs6XsUOA@mail.gmail.com>
References: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>
	<CAOrgODYtNfjF8VON-9QdqZ=LbFVXGTChGsYfyBCmc1dWOFBa-Q@mail.gmail.com>
	<CADZkTtV64oyfo95mYT4noCPWC3GOnrfN01wzEeXrLKcs6XsUOA@mail.gmail.com>
Message-ID: <CAOrgODbSc_Vz9L=rWixppNqe5GXEkRuRp3TyyrmakkrPacs+Yg@mail.gmail.com>

On Fri, Nov 18, 2011 at 4:01 PM, David Riddle <david at mcgilly.com> wrote:

> Hi Bart -
>
> Yes, it's a \n, and I thought I told the grammar to set '\n' to a hidden
> channel.  So, why is it not hidden?
>
>

Assuming you mean a new line char, then it _is_ being sent to the HIDDEN
channel as Norman already mentioned.

Regards,

Bart.

From ruslan_zasukhin at valentina-db.com  Fri Nov 18 07:12:01 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Fri, 18 Nov 2011 17:12:01 +0200
Subject: [antlr-interest] [C] reuse()   bug here?
Message-ID: <CAEC4261.F5A68%ruslan_zasukhin@valentina-db.com>

Hi Jim,

I think bug is here ... Just only have found this place during debug,
And need run away for few hours.


static pANTLR3_COMMON_TOKEN
newPoolToken(pANTLR3_TOKEN_FACTORY factory)
{
    pANTLR3_COMMON_TOKEN token;

    /* See if we need a new token pool before allocating a new
     * one
     */
    if (factory->nextToken >= ANTLR3_FACTORY_POOL_SIZE)
<<<<<<<<<<<<<< 1 !! If we have FEW pools then this is wrong.
    {
        /* We ran out of tokens in the current pool, so we need a new pool
         */
        newPool(factory);
    }

    /* Assuming everything went well (we are trying for performance here so
doing minimal
     * error checking. Then we can work out what the pointer is to the next
token.
     */

    token = factory->pools[factory->thisPool] + factory->nextToken;
                                           ^^^^^^^^^^^^^^^^^^^^^^
                                      // RZ: nextToken was 1024, we have
allocate above new pool
                                      // and we should use its ZERO item

    factory->nextToken++;             // and we get 1025 ...


It seems to me ... We must nextToken counter drop to zero when we allocate
next pool.

And may be correct other places ...


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From Norman at dunbar-it.co.uk  Fri Nov 18 07:20:15 2011
From: Norman at dunbar-it.co.uk (Norman Dunbar)
Date: Fri, 18 Nov 2011 15:20:15 +0000
Subject: [antlr-interest] Failure to ignore newline
In-Reply-To: <CADZkTtV64oyfo95mYT4noCPWC3GOnrfN01wzEeXrLKcs6XsUOA@mail.gmail.com>
References: <CADZkTtWVNT6AifTWKyCCsx_xu1DEbgF4X9GpNFVqqtufXRjrmA@mail.gmail.com>	<CAOrgODYtNfjF8VON-9QdqZ=LbFVXGTChGsYfyBCmc1dWOFBa-Q@mail.gmail.com>
	<CADZkTtV64oyfo95mYT4noCPWC3GOnrfN01wzEeXrLKcs6XsUOA@mail.gmail.com>
Message-ID: <4EC677AF.1080107@dunbar-it.co.uk>

Afternoon David,

On 18/11/11 15:01, David Riddle wrote:
> Yes, it's a \n, and I thought I told the grammar to set '\n' to a hidden
> channel.  So, why is it not hidden?


Think in C, where a newline character is represented in code as '\n'. 
There are two physical characters between the quotes, but the result is 
a single character 0x0a if you like - a unix new line.


 >>> WS: '\n'+ {$channel=HIDDEN;};

WS  is defining a single character of whitespace, the newline, not the 
two characters backslash and n.


 >>> // Input: a \n b

You have passed in a string of characters "a \n b" which is 6 characters 
long. You need to pass in "a<press return key>b" which will be 3 characters.


>>> // Output: a n b
When I ran it, I actually got a /n b as output using your input.

I think you are trying to get the input reader to convert '\n' to a 
single newline, and it obviously doesn't. Just press the return key when 
you want a new line.


HTH

Cheers,
Norm.

Disclaimer: I'm not a compiler writer nor do I play one on TV.

-- 
Norman Dunbar
Dunbar IT Consultants Ltd

Registered address:
Thorpe House
61 Richardshaw Lane
Pudsey
West Yorkshire
United Kingdom
LS28 7EL

Company Number: 05132767

From franck102 at yahoo.com  Fri Nov 18 08:53:00 2011
From: franck102 at yahoo.com (franck102)
Date: Fri, 18 Nov 2011 08:53:00 -0800 (PST)
Subject: [antlr-interest] String concatenation expression rule
In-Reply-To: <CAOrgODb-E0B3tgUOD-Br7XZy6E2PN+fq0Ut7yZCxs85bG-R4CQ@mail.gmail.com>
References: <1321616392857-7007921.post@n2.nabble.com>
	<CAOrgODb-E0B3tgUOD-Br7XZy6E2PN+fq0Ut7yZCxs85bG-R4CQ@mail.gmail.com>
Message-ID: <1321635172.12007.YahooMailNeo@web161305.mail.bf1.yahoo.com>

Hi Bart, thanks very for the quick reply.

I should have made it clear that concatenating is only legal if at least one of the operands is a string literal - that is where I am having an issue. In other terms the input

3 3<EOF>
should cause a syntax error, while
3 "" 3<EOF>
should not (and evaluates to the string "33")


Franck



________________________________
 From: Bart Kiers [via ANTLR] <ml-node+s1301665n7008016h67 at n2.nabble.com>
To: franck102 <franck102 at yahoo.com> 
Sent: Friday, November 18, 2011 1:11 PM
Subject: Re: String concatenation expression rule
 

On Fri, Nov 18, 2011 at 12:39 PM, franck102 <[hidden email]> wrote: 


> I am writing a grammar for a fairly complex expression language, and in 
> particular I need to support string concatenation which is performed simply 
> by separating string literals with a space; and which automatically 
> converts 
> other expressions to a string if needed to concatenate: 
> "a" "b" -> "ab" 
> 2+3 "mm" -> "5mm" 
> 
> I suspect I could use predicates to write a rule like this: 
> 
> concatExpression 
> ? ? ? ?: ? ? ? ?( expression | STRING_LITERAL )+ { apply only if at least 
> one of the elements is a string literal }? 
> 
> Is there a way to achieve this? The alternative formulations I can think of 
> are pretty messy... 
> 
> As far as I understand it, you don't need any predicate. I see a 
concat-expression has a lower precedence than addition, in which case this 
could do the trick: 

grammar T; 

options { 
? output=AST; 
} 

tokens { 
? ROOT; 
? CONCAT; 
} 

parse 
? : ?(expression ';')* EOF -> ^(ROOT expression*) 
? ; 

expression 
? : ?(add -> add) (add+ -> ^(CONCAT add+))? 
? ; 

add 
? : ?atom (('+' | '-')^ atom)* 
? ; 

atom 
? : ?Number 
? | ?String 
? | ?'(' expression ')' -> expression 
? ; 

Number : '0'..'9'+ ('.' '0'..'9'+)?; 
String : '"' ~'"'* '"'; 
Space ?: ' ' {skip();}; 

You can test it with the following class: 

import org.antlr.runtime.*; 
import org.antlr.runtime.tree.*; 
import org.antlr.stringtemplate.*; 

public class Main { 
? public static void main(String[] args) throws Exception { 
? ? String src = "42 - 2; 2 + 3 \"mm\"; \"a\" \"b\" 4-3-2 \"c\"; \"pi = \" 
3.14159;"; 
? ? TLexer lexer = new TLexer(new ANTLRStringStream(src)); 
? ? TParser parser = new TParser(new CommonTokenStream(lexer)); 
? ? CommonTree root = (CommonTree)parser.parse().getTree(); ; 
? ? System.out.println(new DOTTreeGenerator().toDOT(root)); 
? } 
} 

Regards, 

Bart. 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________
 
If you reply to this email, your message will be added to the discussion below:
http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7008016.html 
To unsubscribe from String concatenation expression rule, click here.
NAML

--
View this message in context: http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7008934.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jimi at temporal-wave.com  Fri Nov 18 09:47:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Nov 2011 09:47:11 -0800
Subject: [antlr-interest] String concatenation expression rule
In-Reply-To: <1321635172.12007.YahooMailNeo@web161305.mail.bf1.yahoo.com>
References: <1321616392857-7007921.post@n2.nabble.com>	<CAOrgODb-E0B3tgUOD-Br7XZy6E2PN+fq0Ut7yZCxs85bG-R4CQ@mail.gmail.com>
	<1321635172.12007.YahooMailNeo@web161305.mail.bf1.yahoo.com>
Message-ID: <5b929e8b33bb9a83b66a5ba5692f9870@mail.gmail.com>

Don't make the parser trap that error as a syntax error. It is a semantic
error and so you should parser any operand type, then reject the incorrect
types with code.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of franck102
> Sent: Friday, November 18, 2011 8:53 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] String concatenation expression rule
>
> Hi Bart, thanks very for the quick reply.
>
> I should have made it clear that concatenating is only legal if at
> least one of the operands is a string literal - that is where I am
> having an issue. In other terms the input
>
> 3 3<EOF>
> should cause a syntax error, while
> 3 "" 3<EOF>
> should not (and evaluates to the string "33")
>
>
> Franck
>
>
>
> ________________________________
>  From: Bart Kiers [via ANTLR] <ml-
> node+s1301665n7008016h67 at n2.nabble.com>
> To: franck102 <franck102 at yahoo.com>
> Sent: Friday, November 18, 2011 1:11 PM
> Subject: Re: String concatenation expression rule
>
>
> On Fri, Nov 18, 2011 at 12:39 PM, franck102 <[hidden email]> wrote:
>
>
> > I am writing a grammar for a fairly complex expression language, and
> in
> > particular I need to support string concatenation which is performed
> simply
> > by separating string literals with a space; and which automatically
> > converts
> > other expressions to a string if needed to concatenate:
> > "a" "b" -> "ab"
> > 2+3 "mm" -> "5mm"
> >
> > I suspect I could use predicates to write a rule like this:
> >
> > concatExpression
> >        :        ( expression | STRING_LITERAL )+ { apply only if at
> least
> > one of the elements is a string literal }?
> >
> > Is there a way to achieve this? The alternative formulations I can
> think of
> > are pretty messy...
> >
> > As far as I understand it, you don't need any predicate. I see a
> concat-expression has a lower precedence than addition, in which case
> this
> could do the trick:
>
> grammar T;
>
> options {
>   output=AST;
> }
>
> tokens {
>   ROOT;
>   CONCAT;
> }
>
> parse
>   :  (expression ';')* EOF -> ^(ROOT expression*)
>   ;
>
> expression
>   :  (add -> add) (add+ -> ^(CONCAT add+))?
>   ;
>
> add
>   :  atom (('+' | '-')^ atom)*
>   ;
>
> atom
>   :  Number
>   |  String
>   |  '(' expression ')' -> expression
>   ;
>
> Number : '0'..'9'+ ('.' '0'..'9'+)?;
> String : '"' ~'"'* '"';
> Space  : ' ' {skip();};
>
> You can test it with the following class:
>
> import org.antlr.runtime.*;
> import org.antlr.runtime.tree.*;
> import org.antlr.stringtemplate.*;
>
> public class Main {
>   public static void main(String[] args) throws Exception {
>     String src = "42 - 2; 2 + 3 \"mm\"; \"a\" \"b\" 4-3-2 \"c\"; \"pi =
> \"
> 3.14159;";
>     TLexer lexer = new TLexer(new ANTLRStringStream(src));
>     TParser parser = new TParser(new CommonTokenStream(lexer));
>     CommonTree root = (CommonTree)parser.parse().getTree(); ;
>     System.out.println(new DOTTreeGenerator().toDOT(root));
>   }
> }
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
>
> ________________________________
>
> If you reply to this email, your message will be added to the
> discussion below:
> http://antlr.1301665.n2.nabble.com/String-concatenation-expression-
> rule-tp7007921p7008016.html
> To unsubscribe from String concatenation expression rule, click here.
> NAML
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/String-concatenation-expression-
> rule-tp7007921p7008934.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From franck102 at yahoo.com  Fri Nov 18 10:50:21 2011
From: franck102 at yahoo.com (franck102)
Date: Fri, 18 Nov 2011 10:50:21 -0800 (PST)
Subject: [antlr-interest] String concatenation expression rule
In-Reply-To: <5b929e8b33bb9a83b66a5ba5692f9870@mail.gmail.com>
References: <1321616392857-7007921.post@n2.nabble.com>
	<CAOrgODb-E0B3tgUOD-Br7XZy6E2PN+fq0Ut7yZCxs85bG-R4CQ@mail.gmail.com>
	<1321635172.12007.YahooMailNeo@web161305.mail.bf1.yahoo.com>
	<5b929e8b33bb9a83b66a5ba5692f9870@mail.gmail.com>
Message-ID: <1321642210.23570.YahooMailNeo@web161303.mail.bf1.yahoo.com>

I guess I will try that if I have to, although this is an existing language (with a custom, unmaintainable parser) that is already very ambiguous, and I am concerned that parsing any sequence of pretty much anything as a string concatenation is going to make things much worse in that respect.

Franck



________________________________
 From: Jim Idle [via ANTLR] <ml-node+s1301665n7009129h70 at n2.nabble.com>
To: franck102 <franck102 at yahoo.com> 
Sent: Friday, November 18, 2011 6:47 PM
Subject: Re: String concatenation expression rule
 

Don't make the parser trap that error as a syntax error. It is a semantic 
error and so you should parser any operand type, then reject the incorrect 
types with code. 

jim 


> -----Original Message----- 
> From: [hidden email] [mailto:antlr-interest- 
> [hidden email]] On Behalf Of franck102 
> Sent: Friday, November 18, 2011 8:53 AM 
> To: [hidden email] 
> Subject: Re: [antlr-interest] String concatenation expression rule 
> 
> Hi Bart, thanks very for the quick reply. 
> 
> I should have made it clear that concatenating is only legal if at 
> least one of the operands is a string literal - that is where I am 
> having an issue. In other terms the input 
> 
> 3 3<EOF> 
> should cause a syntax error, while 
> 3 "" 3<EOF> 
> should not (and evaluates to the string "33") 
> 
> 
> Franck 
> 
> 
> 
> ________________________________ 
> ?From: Bart Kiers [via ANTLR] <ml- 
> [hidden email]> 
> To: franck102 <[hidden email]> 
> Sent: Friday, November 18, 2011 1:11 PM 
> Subject: Re: String concatenation expression rule 
> 
> 
> On Fri, Nov 18, 2011 at 12:39 PM, franck102 <[hidden email]> wrote: 
> 
> 
> > I am writing a grammar for a fairly complex expression language, and 
> in 
> > particular I need to support string concatenation which is performed 
> simply 
> > by separating string literals with a space; and which automatically 
> > converts 
> > other expressions to a string if needed to concatenate: 
> > "a" "b" -> "ab" 
> > 2+3 "mm" -> "5mm" 
> > 
> > I suspect I could use predicates to write a rule like this: 
> > 
> > concatExpression 
> > ? ? ? ?: ? ? ? ?( expression | STRING_LITERAL )+ { apply only if at 
> least 
> > one of the elements is a string literal }? 
> > 
> > Is there a way to achieve this? The alternative formulations I can 
> think of 
> > are pretty messy... 
> > 
> > As far as I understand it, you don't need any predicate. I see a 
> concat-expression has a lower precedence than addition, in which case 
> this 
> could do the trick: 
> 
> grammar T; 
> 
> options { 
> ? output=AST; 
> } 
> 
> tokens { 
> ? ROOT; 
> ? CONCAT; 
> } 
> 
> parse 
> ? : ?(expression ';')* EOF -> ^(ROOT expression*) 
> ? ; 
> 
> expression 
> ? : ?(add -> add) (add+ -> ^(CONCAT add+))? 
> ? ; 
> 
> add 
> ? : ?atom (('+' | '-')^ atom)* 
> ? ; 
> 
> atom 
> ? : ?Number 
> ? | ?String 
> ? | ?'(' expression ')' -> expression 
> ? ; 
> 
> Number : '0'..'9'+ ('.' '0'..'9'+)?; 
> String : '"' ~'"'* '"'; 
> Space ?: ' ' {skip();}; 
> 
> You can test it with the following class: 
> 
> import org.antlr.runtime.*; 
> import org.antlr.runtime.tree.*; 
> import org.antlr.stringtemplate.*; 
> 
> public class Main { 
> ? public static void main(String[] args) throws Exception { 
> ? ? String src = "42 - 2; 2 + 3 \"mm\"; \"a\" \"b\" 4-3-2 \"c\"; \"pi = 
> \" 
> 3.14159;"; 
> ? ? TLexer lexer = new TLexer(new ANTLRStringStream(src)); 
> ? ? TParser parser = new TParser(new CommonTokenStream(lexer)); 
> ? ? CommonTree root = (CommonTree)parser.parse().getTree(); ; 
> ? ? System.out.println(new DOTTreeGenerator().toDOT(root)); 
> ? } 
> } 
> 
> Regards, 
> 
> Bart. 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address 
> 
> 
> ________________________________ 
> 
> If you reply to this email, your message will be added to the 
> discussion below: 
> http://antlr.1301665.n2.nabble.com/String-concatenation-expression-
> rule-tp7007921p7008016.html 
> To unsubscribe from String concatenation expression rule, click here. 
> NAML 
> 
> -- 
> View this message in context: 
> http://antlr.1301665.n2.nabble.com/String-concatenation-expression-
> rule-tp7007921p7008934.html 
> Sent from the ANTLR mailing list archive at Nabble.com. 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________
 
If you reply to this email, your message will be added to the discussion below:
http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7009129.html 
To unsubscribe from String concatenation expression rule, click here.
NAML

--
View this message in context: http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7009337.html
Sent from the ANTLR mailing list archive at Nabble.com.

From ruslan_zasukhin at valentina-db.com  Fri Nov 18 12:21:18 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Fri, 18 Nov 2011 22:21:18 +0200
Subject: [antlr-interest] [C] reuse() bug here? -- IGNORE it ... Not
 here :)
In-Reply-To: <CAEC4261.F5A68%ruslan_zasukhin@valentina-db.com>
Message-ID: <CAEC8ADE.F5AF3%ruslan_zasukhin@valentina-db.com>

On 11/18/11 5:12 PM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Fri Nov 18 14:36:03 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 19 Nov 2011 00:36:03 +0200
Subject: [antlr-interest] [C] reuse() - grow of RAM -- attempt #2.
Message-ID: <CAECAA73.F5B1D%ruslan_zasukhin@valentina-db.com>

Hi Jim,

So I have debug debug and have found that

=================
1) Generated Parser contains ctx->adaptor, which contains one more
tokenFactory. And for this factory NEVER is called reset().

I have add call reset() for now in the method of generated parser.
This have made things better, but still I see at least two players...

So next player is:

=================
2) This adaptor also has more deeply hidden factory of trees.
And it is called a lots for nilNode().

And this factory 
    typedef    struct ANTLR3_ARBORETUM_struct

Although is very similar to
    typedef    struct ANTLR3_TOKEN_FACTORY_struct

In work with pools, it do NOT have reset() function.

So I think I will try add reset() method to this struct,
And call it from generated parser reset() method as following


static void
SqlParser_v3ParserReset (pSqlParser_v3Parser ctx)
{
    RECOGNIZER->reset(RECOGNIZER);
    
    // RZ added this to see if this fixes grow of RAM.
    
    ADAPTOR->tokenFactory->reset( ADAPTOR->tokenFactory );
    
    ((pANTLR3_COMMON_TREE_ADAPTOR)(ADAPTOR->super))->arboretum->reset(
        (ADAPTOR->super))->arboretum);
}



-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Sat Nov 19 10:38:10 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 19 Nov 2011 20:38:10 +0200
Subject: [antlr-interest] [C] reuse() - FIXED ... :-)
In-Reply-To: <CAECAA73.F5B1D%ruslan_zasukhin@valentina-db.com>
Message-ID: <CAEDC432.F5BB4%ruslan_zasukhin@valentina-db.com>

On 11/19/11 12:36 AM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:

Hi Jim,
Hi All,

Now I am happy :))))))))

Everything below from my prev letter is right.
I have fix this couple places, and have discover yet couple required to be
improved for correct reuse():
   adaptor  -- factory of nillObjects
   factory of vectors

Now RAM do not grows absolutely and speed is
    v3 no reuse()       24 sec
    v3 with reused    19.4 sec
    v3 with reuse      19.7

And I believe I see yet few moments to improve for better speed.
I will try in nearest days ... Then inform here.

For example, it seems to me, we can perfectly reset also nodes from
treeparser. It have also pool. Everything is very similar ... So why to kill
pool and create it each time ...


Of course I have not get my dream x2 speedup using v3 :)
But at least not worse ...


> So I have debug debug and have found that
> 
> =================
> 1) Generated Parser contains ctx->adaptor, which contains one more
> tokenFactory. And for this factory NEVER is called reset().
> 
> I have add call reset() for now in the method of generated parser.
> This have made things better, but still I see at least two players...
> 
> So next player is:
> 
> =================
> 2) This adaptor also has more deeply hidden factory of trees.
> And it is called a lots for nilNode().
> 
> And this factory 
>     typedef    struct ANTLR3_ARBORETUM_struct
> 
> Although is very similar to
>     typedef    struct ANTLR3_TOKEN_FACTORY_struct
> 
> In work with pools, it do NOT have reset() function.
> 
> So I think I will try add reset() method to this struct,
> And call it from generated parser reset() method as following
> 
> 
> static void
> SqlParser_v3ParserReset (pSqlParser_v3Parser ctx)
> {
>     RECOGNIZER->reset(RECOGNIZER);
>     
>     // RZ added this to see if this fixes grow of RAM.
>     
>     ADAPTOR->tokenFactory->reset( ADAPTOR->tokenFactory );
>     
>     ((pANTLR3_COMMON_TREE_ADAPTOR)(ADAPTOR->super))->arboretum->reset(
>         (ADAPTOR->super))->arboretum);
> }
> 
> 

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From franck102 at yahoo.com  Sun Nov 20 02:48:29 2011
From: franck102 at yahoo.com (franck102)
Date: Sun, 20 Nov 2011 02:48:29 -0800 (PST)
Subject: [antlr-interest] String concatenation expression rule
In-Reply-To: <5b929e8b33bb9a83b66a5ba5692f9870@mail.gmail.com>
References: <1321616392857-7007921.post@n2.nabble.com>
	<CAOrgODb-E0B3tgUOD-Br7XZy6E2PN+fq0Ut7yZCxs85bG-R4CQ@mail.gmail.com>
	<1321635172.12007.YahooMailNeo@web161305.mail.bf1.yahoo.com>
	<5b929e8b33bb9a83b66a5ba5692f9870@mail.gmail.com>
Message-ID: <1321786095.72256.YahooMailNeo@web161301.mail.bf1.yahoo.com>

Here is the kind of practical example I need to handle (again, this is an existing, very ambiguous language, nothing I can do about that):
I need

call myFunc on 2 3???????? to parse as Concatenate(myFunc(2), 3)

call myFunc on 2 "3"????? to parse as myFunc("23)

Concat has higher precedence than "call", but it must not trigger in the first case because neither 2 or 3 are string literals...

Franck



________________________________
 From: Jim Idle [via ANTLR] <ml-node+s1301665n7009129h70 at n2.nabble.com>
To: franck102 <franck102 at yahoo.com> 
Sent: Friday, November 18, 2011 6:47 PM
Subject: Re: String concatenation expression rule
 

Don't make the parser trap that error as a syntax error. It is a semantic 
error and so you should parser any operand type, then reject the incorrect 
types with code. 

jim 


> -----Original Message----- 
> From: [hidden email] [mailto:antlr-interest- 
> [hidden email]] On Behalf Of franck102 
> Sent: Friday, November 18, 2011 8:53 AM 
> To: [hidden email] 
> Subject: Re: [antlr-interest] String concatenation expression rule 
> 
> Hi Bart, thanks very for the quick reply. 
> 
> I should have made it clear that concatenating is only legal if at 
> least one of the operands is a string literal - that is where I am 
> having an issue. In other terms the input 
> 
> 3 3<EOF> 
> should cause a syntax error, while 
> 3 "" 3<EOF> 
> should not (and evaluates to the string "33") 
> 
> 
> Franck 
> 
> 
> 
> ________________________________ 
> ?From: Bart Kiers [via ANTLR] <ml- 
> [hidden email]> 
> To: franck102 <[hidden email]> 
> Sent: Friday, November 18, 2011 1:11 PM 
> Subject: Re: String concatenation expression rule 
> 
> 
> On Fri, Nov 18, 2011 at 12:39 PM, franck102 <[hidden email]> wrote: 
> 
> 
> > I am writing a grammar for a fairly complex expression language, and 
> in 
> > particular I need to support string concatenation which is performed 
> simply 
> > by separating string literals with a space; and which automatically 
> > converts 
> > other expressions to a string if needed to concatenate: 
> > "a" "b" -> "ab" 
> > 2+3 "mm" -> "5mm" 
> > 
> > I suspect I could use predicates to write a rule like this: 
> > 
> > concatExpression 
> > ? ? ? ?: ? ? ? ?( expression | STRING_LITERAL )+ { apply only if at 
> least 
> > one of the elements is a string literal }? 
> > 
> > Is there a way to achieve this? The alternative formulations I can 
> think of 
> > are pretty messy... 
> > 
> > As far as I understand it, you don't need any predicate. I see a 
> concat-expression has a lower precedence than addition, in which case 
> this 
> could do the trick: 
> 
> grammar T; 
> 
> options { 
> ? output=AST; 
> } 
> 
> tokens { 
> ? ROOT; 
> ? CONCAT; 
> } 
> 
> parse 
> ? : ?(expression ';')* EOF -> ^(ROOT expression*) 
> ? ; 
> 
> expression 
> ? : ?(add -> add) (add+ -> ^(CONCAT add+))? 
> ? ; 
> 
> add 
> ? : ?atom (('+' | '-')^ atom)* 
> ? ; 
> 
> atom 
> ? : ?Number 
> ? | ?String 
> ? | ?'(' expression ')' -> expression 
> ? ; 
> 
> Number : '0'..'9'+ ('.' '0'..'9'+)?; 
> String : '"' ~'"'* '"'; 
> Space ?: ' ' {skip();}; 
> 
> You can test it with the following class: 
> 
> import org.antlr.runtime.*; 
> import org.antlr.runtime.tree.*; 
> import org.antlr.stringtemplate.*; 
> 
> public class Main { 
> ? public static void main(String[] args) throws Exception { 
> ? ? String src = "42 - 2; 2 + 3 \"mm\"; \"a\" \"b\" 4-3-2 \"c\"; \"pi = 
> \" 
> 3.14159;"; 
> ? ? TLexer lexer = new TLexer(new ANTLRStringStream(src)); 
> ? ? TParser parser = new TParser(new CommonTokenStream(lexer)); 
> ? ? CommonTree root = (CommonTree)parser.parse().getTree(); ; 
> ? ? System.out.println(new DOTTreeGenerator().toDOT(root)); 
> ? } 
> } 
> 
> Regards, 
> 
> Bart. 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address 
> 
> 
> ________________________________ 
> 
> If you reply to this email, your message will be added to the 
> discussion below: 
> http://antlr.1301665.n2.nabble.com/String-concatenation-expression-
> rule-tp7007921p7008016.html 
> To unsubscribe from String concatenation expression rule, click here. 
> NAML 
> 
> -- 
> View this message in context: 
> http://antlr.1301665.n2.nabble.com/String-concatenation-expression-
> rule-tp7007921p7008934.html 
> Sent from the ANTLR mailing list archive at Nabble.com. 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________
 
If you reply to this email, your message will be added to the discussion below:
http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7009129.html 
To unsubscribe from String concatenation expression rule, click here.
NAML

--
View this message in context: http://antlr.1301665.n2.nabble.com/String-concatenation-expression-rule-tp7007921p7013416.html
Sent from the ANTLR mailing list archive at Nabble.com.

From rprememail at yahoo.com  Sun Nov 20 07:49:13 2011
From: rprememail at yahoo.com (Premkumar)
Date: Sun, 20 Nov 2011 07:49:13 -0800 (PST)
Subject: [antlr-interest] Fwd: hello...
Message-ID: <1321804153.16171.androidMobile@web124701.mail.ne1.yahoo.com>

<p>Hey, hey!<br>despite the circumstances I never lost hope I knew I had to take advantage of this this is proof that miracles do exist youll get the hang of it<br><a href="http://bigasia.pl/profile/78NeilCarter/">http://bigasia.pl/profile/78NeilCarter/</a><br>c ya.</p>

From gonzague.reydet at gmail.com  Sun Nov 20 23:28:55 2011
From: gonzague.reydet at gmail.com (Gonzague Reydet)
Date: Mon, 21 Nov 2011 08:28:55 +0100
Subject: [antlr-interest] [C Runtime] Redefinition issue in
	antlr3convertutf.h
Message-ID: <CAHHXKCYZy-O-JtSJGq7czoNHbXCH0=a+H9Nj_xMOmDK_GkXLEw@mail.gmail.com>

Hi all,

Using the ANLTR C runtime v3.4, I encounter a redefinition error of "false"
and "true" values in antlr3convertutf.h at compile time when including the
antlr3.h file in my code.

IMO we should have a verification to check if those flags are already
defined or not before defining them in the antlr3convertutf.h file.
Something like the following code should fix my compiling issue :

#ifndef    true
#define true ANTLR3_TRUE
#endif

#ifndef    false
#define false ANTLR3_FALSE
#endif

Is there any reason for not doing this check here? Is this a known issue?
Moreover I not sure this is the right place to define such generic flags...
Why do you need to define them here?

Regards,
Gonzague

From ramponjerome at yahoo.fr  Mon Nov 21 07:13:19 2011
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Mon, 21 Nov 2011 15:13:19 +0000 (GMT)
Subject: [antlr-interest] Re : reuse() methos in 3.4 C runtime/exception
	report
In-Reply-To: <CAEB482A.F59D1%ruslan_zasukhin@valentina-db.com>
References: <CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>
	<CAEB482A.F59D1%ruslan_zasukhin@valentina-db.com>
Message-ID: <1321888399.6968.YahooMailNeo@web24716.mail.ird.yahoo.com>



Hi Jim, Ruslan,


I experimented some issue in a similar kind of usage (iteration of multiple inputstream with same lexer & parser)

I reset the tokenstream, lexer and parser in order specified in Jim's answer ...

Unfortunately, for second iteration and up, some tokens in factory do not see their 

input field properly set (until pools is reallocated). 

Reset of the lexer calls the factory reset but do not
clean up the input field of tokens already in the pool.

Later on when generating new tokens, their are picked up first in the pool but setCharIndex is not NULL
and input not modified.

In case of exception (tokenstream) in 2nd or upper files, filename reported is retrieved from token->input->filename
resulting in a confusing reporting.

if not clear, let me know and I 'll try to give you more details.
If anything wrong in my analysis, feedbacks are welcome.

I did not find any simple and clean way with antlr3 API? to reset those input files fields for already-in-the-pool tokens


Thanks.
Jerome
PS: Anyway, in term of runtime, this approach in C is not significantly reducing time but it 

makes huge differences in Java. For my grammar, with a suite of 1800 input files,
it takes around 6 mns for a JAVA 1 file at a time call vs seconds
for a serialisation of input files 



________________________________
 De?: Ruslan Zasukhin <ruslan_zasukhin at valentina-db.com>
??: "antlr-interest at antlr.org" <antlr-interest at antlr.org> 
Envoy? le : Jeudi 17 Novembre 2011 22h24
Objet?: Re: [antlr-interest] reuse() methos in 3.4 C runtime
 
Hi Jim,

Below are copy-pastes of my class-wrapper around ANTLR3
Lexer/Parser/TreeParser.
So you can see if I made some stupid mistake...


>> On 6/24/11 7:49 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>>
>> Because the documentation is not yet up to date, here is an example of
>> reusing the allocated memory in input streams and token streams:
>> 
>>? ?  for (i=0; i<iterations; i++)
>>? ? {
>>? ? ? ?  // Run the parser.
>>? ? ? ?  psr->start(psr);
>> 
>>? ? ? ?  // --------------------------------------
>>? ? ? ?  // Now reset everything for the next run.
>>? ? ? ?  // Order of calls is important.
>> 
>>? ? ? ?  // Input stream can now be reused
>>? ? ? ?  input->reuse(input, sourceCode, sourceLen, sourceName);
>> 
>>? ? ? ?  // Reset the common token stream so that it will reuse its resources
>>? ? ? ?  tstream->reset(tstream);
>> 
>>? ? ? ?  // Reset the lexer (new function generated by antlr now)
>>? ? ? ?  lxr->reset(lxr);
>> 
>>? ? ? ?  // Reset the parser (new function generated by antlr now)
>>? ? ? ?  psr->reset(psr);
>>? ?  }


/**************************************************************************
void SqlParser_v3::ResuseParserObjects(
? ? const char*? ? ? ? inTextToParse,
? ? vuint32? ? ? ? ? ? inLength )
{
? ? // -------------------------------
? ? // TREE PARSER cannot be reused. Destroy it.
? ? //
? ? if( mpTreeParser )
? ? {
? ? ? ? mpTreeParser->free( mpTreeParser );
? ? ? ? mpTreeParser = NULL;
? ? }
? ? 
? ? if( mpNodes )
? ? {
? ? ? ? mpNodes->free( mpNodes );
? ? ? ? mpNodes = NULL;
? ? }? ? 


? ? // -------------------------------
? ? // Reuse other objects
? ? //
? ? mpInput->reuse(
? ? ? ? mpInput, 
? ? ? ? (pANTLR3_UINT8) inTextToParse,
? ? ? ? (ANTLR3_UINT32) inLength,
? ? ? ? (pANTLR3_UINT8) "VSQL" );

? ? mpTokenStream->reset( mpTokenStream );
? ? mpLexer? ? ? ?  ->reset( mpLexer );
? ? mpParser? ?  ->reset( mpParser );

? ? ResetOwnData( mpParser );
}



And few other related methods ...


/**************************************************************************
void SqlParser_v3::Parse_UTF8(
? ? I_SqlDatabaseEx*? ? ? ? ?  inDatabase,
? ? const char*? ? ? ? ? ? ? ? inCommand,
? ? const char*? ? ? ? ? ? ? ? inCommandEnd )
{
? ? argused1(inDatabase);

//? ? COMMENT this line to force? REUSE() mode ...
//? ? DestroyParserObjects();

? ? if( mpInput ) 
? ? ? ? ResuseParserObjects( inCommand, (inCommandEnd - inCommand) );
? ? else
? ? ? ? CreateParserObjects( inCommand, (inCommandEnd - inCommand) );


? ? // -------------------------
? ? // Parse the input expression
? ? mAST = mpParser->sql( mpParser );


? ? // IF PARSER have generate some errors,
? ? // then we throw them as VSQL exception.
? ? if( mpParser->pParser->rec->state->errorCount )
? ? {? ? 
? ? ? ? StToUTF16 cnv( ResultStringBuffer, pErrEnd, GetConverter_UTF8() );
? ? ? ? throw VSQL::xVSQLException( ERR_SQL_PARSER_ERROR, cnv.c_str() );
? ? }? ? 
}


/**************************************************************************
void SqlParser_v3::CreateParserObjects(
? ? const char*? ? ? ? inTextToParse,
? ? vuint32? ? ? ? ? ? inLength )
{
? ? if( inTextToParse == NULL )
? ? ? ? return; // all objects will be still NULLs also.

? ? // ------------------------------
? ? // Create INPUT object:

? ? // NOTE: SQL strings do not have BOM - first few bytes, which define
endian of UTF16.
? ? //? ? ? ?  So for UTF16, we must here self specify BE or LE.
? ? mpInput = antlr3StringStreamNew(
? ? ? ? (pANTLR3_UINT8) inTextToParse, mEncoding, (ANTLR3_UINT32) inLength,
(pANTLR3_UINT8) "VSQL" );

? ? mpInput->setUcaseLA( mpInput, ANTLR3_TRUE );


? ? // ------------------------------
? ? // Create LEXER v3 object:

? ? mpLexer = SqlParser_v3LexerNew( mpInput );
? ? mpTokenStream = antlr3CommonTokenStreamSourceNew( ANTLR3_SIZE_HINT,
TOKENSOURCE( mpLexer ) );


? ? // ------------------------------
? ? // Create PARSER v3 object:

? ? mpParser = SqlParser_v3ParserNew( mpTokenStream );? // is generated by
ANTLR3
? ? mpParser->mDoAllCommands = mDoAllCommandsInitial;

? ? ResetOwnData( mpParser );


/**************************************************************************
void SqlParser_v3::DestroyParserObjects( void )
{
? ? // REVERSE ORDER to construction:

? ? if( mpTreeParser )
? ? {
? ? ? ? mpTreeParser->free( mpTreeParser );
? ? ? ? mpTreeParser = NULL;
? ? }
? ? 
? ? if( mpNodes )
? ? {
? ? ? ? mpNodes->free( mpNodes );
? ? ? ? mpNodes = NULL;
? ? }

? ? if( mpParser )
? ? {
? ? ? ? mpParser->mpStartPositions = NULL;
? ? 
? ? ? ? mpParser->free( mpParser );
? ? ? ? mpParser = NULL;
? ? }
? 
? ? if( mpTokenStream )
? ? {
? ? ? ? mpTokenStream->free( mpTokenStream );
? ? ? ? mpTokenStream = NULL;
? ? }? ? 
? ? 
? ? if( mpLexer )
? ? {
? ? ? ? mpLexer->free( mpLexer );
? ? ? ? mpLexer = NULL;
? ? }
? ? 
? ? if( mpInput )
? ? {
? ? ? ? mpInput->close( mpInput );
? ? ? ? mpInput = NULL;
? ? }
}






-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Mon Nov 21 09:28:52 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 21 Nov 2011 09:28:52 -0800
Subject: [antlr-interest] [C Runtime] Redefinition issue in
	antlr3convertutf.h
In-Reply-To: <CAHHXKCYZy-O-JtSJGq7czoNHbXCH0=a+H9Nj_xMOmDK_GkXLEw@mail.gmail.com>
References: <CAHHXKCYZy-O-JtSJGq7czoNHbXCH0=a+H9Nj_xMOmDK_GkXLEw@mail.gmail.com>
Message-ID: <922a2eb62a3e29508473c9088f032aca@mail.gmail.com>

It is more likely that you need to reorder your includes as some other
non-antlr header has defined true and false.

It is not likely that those interfering headers have used the same types
and so on, even though it is likely that they end up being the same values
in the end (assuming you are not trying to compile the runtime as C++).
But if I just use whatever you give me, it could generate strange errors
that are harder to resolve. Also, if I undef them in the header, I can't
predict what I have done to your other code. Hence, it is better to leave
it; though I think that there is an argument not to use such obvious names
in the library code (but I reused the standard Unicode.org supplied code).

If you read through the API docs, you will see that there are various
@directives that you can use to influence the order of includes. You can
also look at the examples, which talk about this and how to relocate code
outside the space so you don't get these interferences.

Finally, this possibly indicates a more fundamental issue if you are
trying to embed code that refers to things outside ANTLR, within grammar
actions. Ideally you just call external helper methods that know how to
talk to your other components. If however you are just including antlr.h
in files outside the grammar, then you should just include antlr first, or
undef the definitions after including the other headers, assuming that you
do not use them after that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gonzague Reydet
> Sent: Sunday, November 20, 2011 11:29 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C Runtime] Redefinition issue in
> antlr3convertutf.h
>
> Hi all,
>
> Using the ANLTR C runtime v3.4, I encounter a redefinition error of
> "false"
> and "true" values in antlr3convertutf.h at compile time when including
> the antlr3.h file in my code.
>
> IMO we should have a verification to check if those flags are already
> defined or not before defining them in the antlr3convertutf.h file.
> Something like the following code should fix my compiling issue :
>
> #ifndef    true
> #define true ANTLR3_TRUE
> #endif
>
> #ifndef    false
> #define false ANTLR3_FALSE
> #endif
>
> Is there any reason for not doing this check here? Is this a known
> issue?
> Moreover I not sure this is the right place to define such generic
> flags...
> Why do you need to define them here?
>
> Regards,
> Gonzague
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Nov 21 09:30:37 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 21 Nov 2011 09:30:37 -0800
Subject: [antlr-interest] Re : reuse() methos in 3.4 C runtime/exception
	report
In-Reply-To: <1321888399.6968.YahooMailNeo@web24716.mail.ird.yahoo.com>
References: <CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>
	<CAEB482A.F59D1%ruslan_zasukhin@valentina-db.com>
	<1321888399.6968.YahooMailNeo@web24716.mail.ird.yahoo.com>
Message-ID: <dfac66a9d70f4ca3e7f6d33f75b71aaa@mail.gmail.com>

I believe that is fixed in the latest source.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Rampon Jerome
> Sent: Monday, November 21, 2011 7:13 AM
> To: Ruslan Zasukhin; antlr-interest at antlr.org
> Subject: [antlr-interest] Re : reuse() methos in 3.4 C
> runtime/exception report
>
>
>
> Hi Jim, Ruslan,
>
>
> I experimented some issue in a similar kind of usage (iteration of
> multiple inputstream with same lexer & parser)
>
> I reset the tokenstream, lexer and parser in order specified in Jim's
> answer ...
>
> Unfortunately, for second iteration and up, some tokens in factory do
> not see their
>
> input field properly set (until pools is reallocated).
>
> Reset of the lexer calls the factory reset but do not clean up the
> input field of tokens already in the pool.
>
> Later on when generating new tokens, their are picked up first in the
> pool but setCharIndex is not NULL and input not modified.
>
> In case of exception (tokenstream) in 2nd or upper files, filename
> reported is retrieved from token->input->filename resulting in a
> confusing reporting.
>
> if not clear, let me know and I 'll try to give you more details.
> If anything wrong in my analysis, feedbacks are welcome.
>
> I did not find any simple and clean way with antlr3 API? to reset those
> input files fields for already-in-the-pool tokens
>
>
> Thanks.
> Jerome
> PS: Anyway, in term of runtime, this approach in C is not significantly
> reducing time but it
>
> makes huge differences in Java. For my grammar, with a suite of 1800
> input files, it takes around 6 mns for a JAVA 1 file at a time call vs
> seconds for a serialisation of input files
>
>
>
> ________________________________
>  De?: Ruslan Zasukhin <ruslan_zasukhin at valentina-db.com>
> ??: "antlr-interest at antlr.org" <antlr-interest at antlr.org> Envoy? le :
> Jeudi 17 Novembre 2011 22h24 Objet?: Re: [antlr-interest] reuse()
> methos in 3.4 C runtime
>
> Hi Jim,
>
> Below are copy-pastes of my class-wrapper around ANTLR3
> Lexer/Parser/TreeParser.
> So you can see if I made some stupid mistake...
>
>
> >> On 6/24/11 7:49 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> >>
> >> Because the documentation is not yet up to date, here is an example
> >> of reusing the allocated memory in input streams and token streams:
> >>
> >>? ?  for (i=0; i<iterations; i++)
> >>? ? {
> >>? ? ? ?  // Run the parser.
> >>? ? ? ?  psr->start(psr);
> >>
> >>? ? ? ?  // --------------------------------------
> >>? ? ? ?  // Now reset everything for the next run.
> >>? ? ? ?  // Order of calls is important.
> >>
> >>? ? ? ?  // Input stream can now be reused
> >>? ? ? ?  input->reuse(input, sourceCode, sourceLen, sourceName);
> >>
> >>? ? ? ?  // Reset the common token stream so that it will reuse its
> >>resources
> >>? ? ? ?  tstream->reset(tstream);
> >>
> >>? ? ? ?  // Reset the lexer (new function generated by antlr now)
> >>? ? ? ?  lxr->reset(lxr);
> >>
> >>? ? ? ?  // Reset the parser (new function generated by antlr now)
> >>? ? ? ?  psr->reset(psr);
> >>? ?  }
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::ResuseParserObjects(
> ? ? const char*? ? ? ? inTextToParse,
> ? ? vuint32? ? ? ? ? ? inLength )
> {
> ? ? // -------------------------------
> ? ? // TREE PARSER cannot be reused. Destroy it.
> ? ? //
> ? ? if( mpTreeParser )
> ? ? {
> ? ? ? ? mpTreeParser->free( mpTreeParser );
> ? ? ? ? mpTreeParser = NULL;
> ? ? }
>
> ? ? if( mpNodes )
> ? ? {
> ? ? ? ? mpNodes->free( mpNodes );
> ? ? ? ? mpNodes = NULL;
> ? ? }
>
>
> ? ? // -------------------------------
> ? ? // Reuse other objects
> ? ? //
> ? ? mpInput->reuse(
> ? ? ? ? mpInput,
> ? ? ? ? (pANTLR3_UINT8) inTextToParse,
> ? ? ? ? (ANTLR3_UINT32) inLength,
> ? ? ? ? (pANTLR3_UINT8) "VSQL" );
>
> ? ? mpTokenStream->reset( mpTokenStream );
> ? ? mpLexer? ? ? ?  ->reset( mpLexer );
> ? ? mpParser? ?  ->reset( mpParser );
>
> ? ? ResetOwnData( mpParser );
> }
>
>
>
> And few other related methods ...
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::Parse_UTF8(
> ? ? I_SqlDatabaseEx*? ? ? ? ?  inDatabase,
> ? ? const char*? ? ? ? ? ? ? ? inCommand,
> ? ? const char*? ? ? ? ? ? ? ? inCommandEnd ) {
> ? ? argused1(inDatabase);
>
> //? ? COMMENT this line to force? REUSE() mode ...
> //? ? DestroyParserObjects();
>
> ? ? if( mpInput )
> ? ? ? ? ResuseParserObjects( inCommand, (inCommandEnd - inCommand) );
> ? ? else
> ? ? ? ? CreateParserObjects( inCommand, (inCommandEnd - inCommand) );
>
>
> ? ? // -------------------------
> ? ? // Parse the input expression
> ? ? mAST = mpParser->sql( mpParser );
>
>
> ? ? // IF PARSER have generate some errors,
> ? ? // then we throw them as VSQL exception.
> ? ? if( mpParser->pParser->rec->state->errorCount )
> ? ? {
> ? ? ? ? StToUTF16 cnv( ResultStringBuffer, pErrEnd, GetConverter_UTF8()
> );
> ? ? ? ? throw VSQL::xVSQLException( ERR_SQL_PARSER_ERROR, cnv.c_str()
> );
> ? ? }
> }
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::CreateParserObjects(
> ? ? const char*? ? ? ? inTextToParse,
> ? ? vuint32? ? ? ? ? ? inLength )
> {
> ? ? if( inTextToParse == NULL )
> ? ? ? ? return; // all objects will be still NULLs also.
>
> ? ? // ------------------------------
> ? ? // Create INPUT object:
>
> ? ? // NOTE: SQL strings do not have BOM - first few bytes, which
> define
> endian of UTF16.
> ? ? //? ? ? ?  So for UTF16, we must here self specify BE or LE.
> ? ? mpInput = antlr3StringStreamNew(
> ? ? ? ? (pANTLR3_UINT8) inTextToParse, mEncoding, (ANTLR3_UINT32)
> inLength,
> (pANTLR3_UINT8) "VSQL" );
>
> ? ? mpInput->setUcaseLA( mpInput, ANTLR3_TRUE );
>
>
> ? ? // ------------------------------
> ? ? // Create LEXER v3 object:
>
> ? ? mpLexer = SqlParser_v3LexerNew( mpInput );
> ? ? mpTokenStream = antlr3CommonTokenStreamSourceNew( ANTLR3_SIZE_HINT,
> TOKENSOURCE( mpLexer ) );
>
>
> ? ? // ------------------------------
> ? ? // Create PARSER v3 object:
>
> ? ? mpParser = SqlParser_v3ParserNew( mpTokenStream );? // is generated
> by
> ANTLR3
> ? ? mpParser->mDoAllCommands = mDoAllCommandsInitial;
>
> ? ? ResetOwnData( mpParser );
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::DestroyParserObjects( void )
> {
> ? ? // REVERSE ORDER to construction:
>
> ? ? if( mpTreeParser )
> ? ? {
> ? ? ? ? mpTreeParser->free( mpTreeParser );
> ? ? ? ? mpTreeParser = NULL;
> ? ? }
>
> ? ? if( mpNodes )
> ? ? {
> ? ? ? ? mpNodes->free( mpNodes );
> ? ? ? ? mpNodes = NULL;
> ? ? }
>
> ? ? if( mpParser )
> ? ? {
> ? ? ? ? mpParser->mpStartPositions = NULL;
>
> ? ? ? ? mpParser->free( mpParser );
> ? ? ? ? mpParser = NULL;
> ? ? }
>
> ? ? if( mpTokenStream )
> ? ? {
> ? ? ? ? mpTokenStream->free( mpTokenStream );
> ? ? ? ? mpTokenStream = NULL;
> ? ? }
>
> ? ? if( mpLexer )
> ? ? {
> ? ? ? ? mpLexer->free( mpLexer );
> ? ? ? ? mpLexer = NULL;
> ? ? }
>
> ? ? if( mpInput )
> ? ? {
> ? ? ? ? mpInput->close( mpInput );
> ? ? ? ? mpInput = NULL;
> ? ? }
> }
>
>
>
>
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information
> http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ramponjerome at yahoo.fr  Mon Nov 21 12:41:26 2011
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Mon, 21 Nov 2011 20:41:26 +0000 (GMT)
Subject: [antlr-interest] Re : Re : reuse() methos in 3.4 C
	runtime/exception report
In-Reply-To: <dfac66a9d70f4ca3e7f6d33f75b71aaa@mail.gmail.com>
References: <CAEB394C.F59B1%ruslan_zasukhin@valentina-db.com>
	<CAEB482A.F59D1%ruslan_zasukhin@valentina-db.com>
	<1321888399.6968.YahooMailNeo@web24716.mail.ird.yahoo.com>
	<dfac66a9d70f4ca3e7f6d33f75b71aaa@mail.gmail.com>
Message-ID: <1321908086.80081.YahooMailNeo@web24703.mail.ird.yahoo.com>



Thanks Jim for feedback.
Original run was with a full 3.4 distribution (I do not know precisely what is C library distributed in it)


I made a try with latest C runtime library I know (3c-3.4) and
this problem clearly persists. I checked compilation ok and settings properly modified in 

script to point properly on new library.

I use a 3.4 antlr version and 3c-3.4 for C library on 64bits.

If you need more details, let me know.

Jerome



________________________________
 De?: Jim Idle <jimi at temporal-wave.com>
??: antlr-interest at antlr.org 
Envoy? le : Lundi 21 Novembre 2011 18h30
Objet?: Re: [antlr-interest] Re : reuse() methos in 3.4 C runtime/exception report
 
I believe that is fixed in the latest source.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Rampon Jerome
> Sent: Monday, November 21, 2011 7:13 AM
> To: Ruslan Zasukhin; antlr-interest at antlr.org
> Subject: [antlr-interest] Re : reuse() methos in 3.4 C
> runtime/exception report
>
>
>
> Hi Jim, Ruslan,
>
>
> I experimented some issue in a similar kind of usage (iteration of
> multiple inputstream with same lexer & parser)
>
> I reset the tokenstream, lexer and parser in order specified in Jim's
> answer ...
>
> Unfortunately, for second iteration and up, some tokens in factory do
> not see their
>
> input field properly set (until pools is reallocated).
>
> Reset of the lexer calls the factory reset but do not clean up the
> input field of tokens already in the pool.
>
> Later on when generating new tokens, their are picked up first in the
> pool but setCharIndex is not NULL and input not modified.
>
> In case of exception (tokenstream) in 2nd or upper files, filename
> reported is retrieved from token->input->filename resulting in a
> confusing reporting.
>
> if not clear, let me know and I 'll try to give you more details.
> If anything wrong in my analysis, feedbacks are welcome.
>
> I did not find any simple and clean way with antlr3 API? to reset those
> input files fields for already-in-the-pool tokens
>
>
> Thanks.
> Jerome
> PS: Anyway, in term of runtime, this approach in C is not significantly
> reducing time but it
>
> makes huge differences in Java. For my grammar, with a suite of 1800
> input files, it takes around 6 mns for a JAVA 1 file at a time call vs
> seconds for a serialisation of input files
>
>
>
> ________________________________
>? De?: Ruslan Zasukhin <ruslan_zasukhin at valentina-db.com>
> ??: "antlr-interest at antlr.org" <antlr-interest at antlr.org> Envoy? le :
> Jeudi 17 Novembre 2011 22h24 Objet?: Re: [antlr-interest] reuse()
> methos in 3.4 C runtime
>
> Hi Jim,
>
> Below are copy-pastes of my class-wrapper around ANTLR3
> Lexer/Parser/TreeParser.
> So you can see if I made some stupid mistake...
>
>
> >> On 6/24/11 7:49 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> >>
> >> Because the documentation is not yet up to date, here is an example
> >> of reusing the allocated memory in input streams and token streams:
> >>
> >>? ?? for (i=0; i<iterations; i++)
> >>? ? {
> >>? ? ? ?? // Run the parser.
> >>? ? ? ?? psr->start(psr);
> >>
> >>? ? ? ?? // --------------------------------------
> >>? ? ? ?? // Now reset everything for the next run.
> >>? ? ? ?? // Order of calls is important.
> >>
> >>? ? ? ?? // Input stream can now be reused
> >>? ? ? ?? input->reuse(input, sourceCode, sourceLen, sourceName);
> >>
> >>? ? ? ?? // Reset the common token stream so that it will reuse its
> >>resources
> >>? ? ? ?? tstream->reset(tstream);
> >>
> >>? ? ? ?? // Reset the lexer (new function generated by antlr now)
> >>? ? ? ?? lxr->reset(lxr);
> >>
> >>? ? ? ?? // Reset the parser (new function generated by antlr now)
> >>? ? ? ?? psr->reset(psr);
> >>? ?? }
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::ResuseParserObjects(
> ? ? const char*? ? ? ? inTextToParse,
> ? ? vuint32? ? ? ? ? ? inLength )
> {
> ? ? // -------------------------------
> ? ? // TREE PARSER cannot be reused. Destroy it.
> ? ? //
> ? ? if( mpTreeParser )
> ? ? {
> ? ? ? ? mpTreeParser->free( mpTreeParser );
> ? ? ? ? mpTreeParser = NULL;
> ? ? }
>
> ? ? if( mpNodes )
> ? ? {
> ? ? ? ? mpNodes->free( mpNodes );
> ? ? ? ? mpNodes = NULL;
> ? ? }
>
>
> ? ? // -------------------------------
> ? ? // Reuse other objects
> ? ? //
> ? ? mpInput->reuse(
> ? ? ? ? mpInput,
> ? ? ? ? (pANTLR3_UINT8) inTextToParse,
> ? ? ? ? (ANTLR3_UINT32) inLength,
> ? ? ? ? (pANTLR3_UINT8) "VSQL" );
>
> ? ? mpTokenStream->reset( mpTokenStream );
> ? ? mpLexer? ? ? ?? ->reset( mpLexer );
> ? ? mpParser? ?? ->reset( mpParser );
>
> ? ? ResetOwnData( mpParser );
> }
>
>
>
> And few other related methods ...
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::Parse_UTF8(
> ? ? I_SqlDatabaseEx*? ? ? ? ?? inDatabase,
> ? ? const char*? ? ? ? ? ? ? ? inCommand,
> ? ? const char*? ? ? ? ? ? ? ? inCommandEnd ) {
> ? ? argused1(inDatabase);
>
> //? ? COMMENT this line to force? REUSE() mode ...
> //? ? DestroyParserObjects();
>
> ? ? if( mpInput )
> ? ? ? ? ResuseParserObjects( inCommand, (inCommandEnd - inCommand) );
> ? ? else
> ? ? ? ? CreateParserObjects( inCommand, (inCommandEnd - inCommand) );
>
>
> ? ? // -------------------------
> ? ? // Parse the input expression
> ? ? mAST = mpParser->sql( mpParser );
>
>
> ? ? // IF PARSER have generate some errors,
> ? ? // then we throw them as VSQL exception.
> ? ? if( mpParser->pParser->rec->state->errorCount )
> ? ? {
> ? ? ? ? StToUTF16 cnv( ResultStringBuffer, pErrEnd, GetConverter_UTF8()
> );
> ? ? ? ? throw VSQL::xVSQLException( ERR_SQL_PARSER_ERROR, cnv.c_str()
> );
> ? ? }
> }
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::CreateParserObjects(
> ? ? const char*? ? ? ? inTextToParse,
> ? ? vuint32? ? ? ? ? ? inLength )
> {
> ? ? if( inTextToParse == NULL )
> ? ? ? ? return; // all objects will be still NULLs also.
>
> ? ? // ------------------------------
> ? ? // Create INPUT object:
>
> ? ? // NOTE: SQL strings do not have BOM - first few bytes, which
> define
> endian of UTF16.
> ? ? //? ? ? ?? So for UTF16, we must here self specify BE or LE.
> ? ? mpInput = antlr3StringStreamNew(
> ? ? ? ? (pANTLR3_UINT8) inTextToParse, mEncoding, (ANTLR3_UINT32)
> inLength,
> (pANTLR3_UINT8) "VSQL" );
>
> ? ? mpInput->setUcaseLA( mpInput, ANTLR3_TRUE );
>
>
> ? ? // ------------------------------
> ? ? // Create LEXER v3 object:
>
> ? ? mpLexer = SqlParser_v3LexerNew( mpInput );
> ? ? mpTokenStream = antlr3CommonTokenStreamSourceNew( ANTLR3_SIZE_HINT,
> TOKENSOURCE( mpLexer ) );
>
>
> ? ? // ------------------------------
> ? ? // Create PARSER v3 object:
>
> ? ? mpParser = SqlParser_v3ParserNew( mpTokenStream );? // is generated
> by
> ANTLR3
> ? ? mpParser->mDoAllCommands = mDoAllCommandsInitial;
>
> ? ? ResetOwnData( mpParser );
>
>
> /**********************************************************************
> ****
> void SqlParser_v3::DestroyParserObjects( void )
> {
> ? ? // REVERSE ORDER to construction:
>
> ? ? if( mpTreeParser )
> ? ? {
> ? ? ? ? mpTreeParser->free( mpTreeParser );
> ? ? ? ? mpTreeParser = NULL;
> ? ? }
>
> ? ? if( mpNodes )
> ? ? {
> ? ? ? ? mpNodes->free( mpNodes );
> ? ? ? ? mpNodes = NULL;
> ? ? }
>
> ? ? if( mpParser )
> ? ? {
> ? ? ? ? mpParser->mpStartPositions = NULL;
>
> ? ? ? ? mpParser->free( mpParser );
> ? ? ? ? mpParser = NULL;
> ? ? }
>
> ? ? if( mpTokenStream )
> ? ? {
> ? ? ? ? mpTokenStream->free( mpTokenStream );
> ? ? ? ? mpTokenStream = NULL;
> ? ? }
>
> ? ? if( mpLexer )
> ? ? {
> ? ? ? ? mpLexer->free( mpLexer );
> ? ? ? ? mpLexer = NULL;
> ? ? }
>
> ? ? if( mpInput )
> ? ? {
> ? ? ? ? mpInput->close( mpInput );
> ? ? ? ? mpInput = NULL;
> ? ? }
> }
>
>
>
>
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information
> http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ruslan_zasukhin at valentina-db.com  Mon Nov 21 12:55:59 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Mon, 21 Nov 2011 22:55:59 +0200
Subject: [antlr-interest] Re : reuse() methos in 3.4 C runtime/exception
 report
In-Reply-To: <dfac66a9d70f4ca3e7f6d33f75b71aaa@mail.gmail.com>
Message-ID: <CAF0877F.F5D3B%ruslan_zasukhin@valentina-db.com>

On 11/21/11 7:30 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> I believe that is fixed in the latest source.

What exactly is fixed ?
    This was answer to Jeromi?


As I have told, I was need self  copy your reset() method,
Into few others factories, 4-5 major fixes in sources of 3.4

I will be happy of course send to you corrected sources.
Or you mean that you self already have found and fix that 4-5 places?


=====
Thanks to A Z <asicaddress at gmail.com>

Which have sent me corrected sources of ANTLR3/C,
Where I have show as he ujst removed in CommonToken few func pointers, and
replaced func calls to direct access to few members of this structure.

Well, this trick have give yet 0.5 second ...
Not many but still good to know exists such way ...

I have add these changes under define, so I can easy enable/disable them ..
    

============
I am spending now time in profiles ,,,already few days trying to learn
things as deeply as possible ...



-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From gonzague.reydet at gmail.com  Mon Nov 21 13:14:36 2011
From: gonzague.reydet at gmail.com (Gonzague Reydet)
Date: Mon, 21 Nov 2011 22:14:36 +0100
Subject: [antlr-interest] [C Runtime] Redefinition issue in
	antlr3convertutf.h
In-Reply-To: <922a2eb62a3e29508473c9088f032aca@mail.gmail.com>
References: <CAHHXKCYZy-O-JtSJGq7czoNHbXCH0=a+H9Nj_xMOmDK_GkXLEw@mail.gmail.com>
	<922a2eb62a3e29508473c9088f032aca@mail.gmail.com>
Message-ID: <CAHHXKCYd8S_QvznF4gZq9NhHgMbyB1LuWjjwHvNKfbY=vSOwqg@mail.gmail.com>

Jim,

Thanks for your reply!

Actually I encounter this issue in code that calls the parser by including
the generated header files.
I agree with you that those values should not be defined elsewhere. But
they are in some piece of old legacy code that can't be changed easily.
IMO such generic naming should never be used without a more descriptive
prefix to avoid such conflicts.
I still don't understand why they are defined in the ANTLR public API. If
they are needed by ANTLR sources, why not defining them in an internal
ANTLR header that will not be published when installing the library? I
don't see any reason for using those generic definitions from the ANTLR API
point of view, we could easily use the ANTLR3_TRUE and ANTLR3_FALSE
definitions instead.

Moreover I encountered other warnings using an old version of GCC compiling
my code that include the system string.h file and the generated parser
headers. GCC complained about shadowed redefinition of the string.h index()
function by some of the ANTLR function pointer parameters like
"void (*setStartIndex) (struct ANTLR3_COMMON_TOKEN_struct * token,
ANTLR3_MARKER index);" in antlr3commontoken.h. Note that I don't get those
warnings using a newer version of GCC on a more recent system. Is there a
minimal version of GCC supported to use ANTLR C runtime?

Some other unrelated questions:
- Why is the ANTLR3 C runtime archive root folder labelled as "beta4"?
- Why does the ANTLR C API documentation have not been regenerated since
the runtime version 3.4 release?

Thanks for the help
Gonzague

2011/11/21 Jim Idle <jimi at temporal-wave.com>

> It is more likely that you need to reorder your includes as some other
> non-antlr header has defined true and false.
>
> It is not likely that those interfering headers have used the same types
> and so on, even though it is likely that they end up being the same values
> in the end (assuming you are not trying to compile the runtime as C++).
> But if I just use whatever you give me, it could generate strange errors
> that are harder to resolve. Also, if I undef them in the header, I can't
> predict what I have done to your other code. Hence, it is better to leave
> it; though I think that there is an argument not to use such obvious names
> in the library code (but I reused the standard Unicode.org supplied code).
>
> If you read through the API docs, you will see that there are various
> @directives that you can use to influence the order of includes. You can
> also look at the examples, which talk about this and how to relocate code
> outside the space so you don't get these interferences.
>
> Finally, this possibly indicates a more fundamental issue if you are
> trying to embed code that refers to things outside ANTLR, within grammar
> actions. Ideally you just call external helper methods that know how to
> talk to your other components. If however you are just including antlr.h
> in files outside the grammar, then you should just include antlr first, or
> undef the definitions after including the other headers, assuming that you
> do not use them after that.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Gonzague Reydet
> > Sent: Sunday, November 20, 2011 11:29 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] [C Runtime] Redefinition issue in
> > antlr3convertutf.h
> >
> > Hi all,
> >
> > Using the ANLTR C runtime v3.4, I encounter a redefinition error of
> > "false"
> > and "true" values in antlr3convertutf.h at compile time when including
> > the antlr3.h file in my code.
> >
> > IMO we should have a verification to check if those flags are already
> > defined or not before defining them in the antlr3convertutf.h file.
> > Something like the following code should fix my compiling issue :
> >
> > #ifndef    true
> > #define true ANTLR3_TRUE
> > #endif
> >
> > #ifndef    false
> > #define false ANTLR3_FALSE
> > #endif
> >
> > Is there any reason for not doing this check here? Is this a known
> > issue?
> > Moreover I not sure this is the right place to define such generic
> > flags...
> > Why do you need to define them here?
> >
> > Regards,
> > Gonzague
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
T?l : +33 (0)6 21 02 90 48

From wijanarto.nagan at yahoo.com  Mon Nov 21 19:23:40 2011
From: wijanarto.nagan at yahoo.com (wijanarto wijanarto)
Date: Tue, 22 Nov 2011 11:23:40 +0800 (SGT)
Subject: [antlr-interest] notation algorithm translation
Message-ID: <1321932220.38729.YahooMailNeo@web190006.mail.sg3.yahoo.com>

Hi, I am totally newbie in DSL with antlr. It it posibble to create translation from algorithm notation (natural language) to generate specific source code (formal language) (eg. C/java)

From chwchw at gmx.de  Tue Nov 22 02:30:19 2011
From: chwchw at gmx.de (Christian)
Date: Tue, 22 Nov 2011 11:30:19 +0100
Subject: [antlr-interest] notation algorithm translation
In-Reply-To: <1321932220.38729.YahooMailNeo@web190006.mail.sg3.yahoo.com>
References: <1321932220.38729.YahooMailNeo@web190006.mail.sg3.yahoo.com>
Message-ID: <4ECB79BB.4060902@gmx.de>

Hi and Wellcome!

First of all, ANTLR is a parser generator. Thus, ANTLR generates a
parser in several programming languages, such as Java and C#, from an
ANTLR-grammar. In order to read/parse your algorithm notation, you need
to have or define an ANTLR grammar for this language. Then, ANTLR can
generate a parser that is able to read your algorithm notation.

If you further want to translate it your notation into source code, you
have to write a mapping between your notation and the resulting source
code. But you unfortunately gave less information about what you exactly
want to do.

For language translation, you should also have a look at this article,
especially at chapter "Walking the AST":
http://www.antlr.org/article/1136917339929/stringTemplate.html

Regards,
Christian

Am 22.11.2011 04:23, schrieb wijanarto wijanarto:
> Hi, I am totally newbie in DSL with antlr. It it posibble to create translation from algorithm notation (natural language) to generate specific source code (formal language) (eg. C/java)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From opensource at peoplemerge.com  Tue Nov 22 18:07:30 2011
From: opensource at peoplemerge.com (Dave Thomas)
Date: Tue, 22 Nov 2011 21:07:30 -0500
Subject: [antlr-interest] Redefinition of header action - in composite
	grammars for 3.4
Message-ID: <CANSf4X5yB4S=VorCXJ5PBwHC3OTybdPiyUDBubs36xbp77tVVA@mail.gmail.com>

Hi all,

I'm using ANTLR for my masters thesis, which includes letting user extend
the lex and parser grammars I supply with their own jargon in the form of a
combined grammar.  I wouldn't have dreamed it possible before ANTLR, and
I'm a big fan!

The problem I'm having is:
error(144): JavaDecl.g:3:2: redefinition of header action

The reason this is making me scratch my head is that I see this issue has
been reported, and AFAICT addressed:
http://www.antlr.org/jira/browse/ANTLR-301
http://www.antlr.org/jira/browse/ANTLR-370
http://www.antlr.org/jira/browse/ANTLR-375
http://www.antlr.org/pipermail/antlr-interest/2011-January/040487.html
http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars (basis for the
examples; sorry for the cross-post)

Am I specifying the antlr release wrong in the maven plugin?

Should I be concerned that my dependency hierarchy includes antlr 2.7.7?
 Per http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.4+Release+Notes the
dependency on v2 should be removed, but I still see it when I do `mvn clean
antlr3:antlr compile -X`:

[DEBUG]    org.antlr:antlr:jar:3.4:compile
[DEBUG]       org.antlr:antlr-runtime:jar:3.4:compile
[DEBUG]          org.antlr:stringtemplate:jar:3.2.1:compile
[DEBUG]          antlr:antlr:jar:2.7.7:compile


src/main/antlr3/test/JLex.g

lexer grammar JLex;
@lexer::header { package test; }

INT : 'int';
SEMICOLON : ';';
EQUALS : '=';
ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;


src/main/antlr3/test/JavaDecl.g

parser grammar JavaDecl;
@header { package test; }
type : INT ;
decl : type ID SEMICOLON
     | type ID init SEMICOLON
     ;
init : EQUALS INT ;


src/main/antlr3/test/Java.g:

grammar Java;
import JavaDecl, JLex;
@header { package test; }
prog : decl ;
type : 'int' | 'float' ;

pom.xml:

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>
<groupId>test</groupId>
 <artifactId>test</artifactId>
<packaging>jar</packaging>
 <version>1.0-SNAPSHOT</version>
<name>test</name>
 <build>
<plugins>
<plugin>
 <groupId>org.antlr</groupId>
<artifactId>antlr3-maven-plugin</artifactId>
 <version>3.4</version>
<executions>
<execution>
 <configuration>
<goals>
<goal>antlr</goal>
 </goals>
</configuration>
</execution>
 </executions>
</plugin>
</plugins>
 </build>
</project>

From a.moderacja at gmail.com  Tue Nov 22 23:20:33 2011
From: a.moderacja at gmail.com (Borneq)
Date: Wed, 23 Nov 2011 08:20:33 +0100
Subject: [antlr-interest] Token and EOL
Message-ID: <CANyn1kG68pu=q0S5=ikyRanA11LcjjbbMVf3e+g+CPxv3L6mwQ@mail.gmail.com>

End of Line not ends mutiline comments but in Pascal string literal
must end at line end. How do it? Strings and \n are in other channel.
How define in grammar that string must ends at EOL?

From a.moderacja at gmail.com  Tue Nov 22 23:22:51 2011
From: a.moderacja at gmail.com (Borneq)
Date: Wed, 23 Nov 2011 08:22:51 +0100
Subject: [antlr-interest] Semi-reserved words
Message-ID: <CANyn1kEp+BfPW66TFi0VeB8GppLioRpfcvXaT-qc6CbZiapa2A@mail.gmail.com>

In Pascal to properties has words "index", "read" and "write" which
can be used a identifiers. Is possible define such in ANTLR?

From ramponjerome at yahoo.fr  Wed Nov 23 01:54:40 2011
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Wed, 23 Nov 2011 09:54:40 +0000 (GMT)
Subject: [antlr-interest] Eliminate characters in TOKEN
Message-ID: <1322042080.20360.YahooMailNeo@web24701.mail.ird.yahoo.com>



Hi,


I tried to eliminate some space character in some complex tokens

but got issues with v3 (I think was ok with v2)


Following reduced rules are ok to retrieve my token ID

start
:????? id=ID EOF
?????? { System.out.println("text is: " + $id.text); }
;

ID
:????? ('a'..'z'|'A'..'Z')((' ')?('a'..'z'|'A'..'Z'|'0'..'1'))
;
but if I try to add ! after ' ' to eliminate it from returned token text

ID
:????? ('a'..'z'|'A'..'Z')((' '!)?('a'..'z'|'A'..'Z'|'0'..'1'))
;
it complained on output option to be AST.
If I add it in my grammar options if complains and still return error
It seems it automatically adds if not there but later on still return error ???

Is that normal ?
Any simple way to bypass rather than a later replaceAll. I would prefer to keep
it target independent 


Thanks

Jerome

From bkiers at gmail.com  Wed Nov 23 01:59:01 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 23 Nov 2011 10:59:01 +0100
Subject: [antlr-interest] Eliminate characters in TOKEN
In-Reply-To: <1322042080.20360.YahooMailNeo@web24701.mail.ird.yahoo.com>
References: <1322042080.20360.YahooMailNeo@web24701.mail.ird.yahoo.com>
Message-ID: <CAOrgODa8CKd1APpjb8mEiTYV4P7=P9_awqbmzAJqc_MhRRE3Ag@mail.gmail.com>

Hi Rampon,


On Wed, Nov 23, 2011 at 10:54 AM, Rampon Jerome <ramponjerome at yahoo.fr>wrote:

> ...
> it complained on output option to be AST.
> If I add it in my grammar options if complains and still return error
> It seems it automatically adds if not there but later on still return
> error ???
>
> Is that normal ?
>

Yes, the `!` to exclude characters from lexer rules (as was possible in v2)
is no longer valid in v3 grammars.



> Any simple way to bypass rather than a later replaceAll. I would prefer to
> keep
> it target independent
>

No, that's not possible.

Regards,

Bart.

From s.barnett-cormack at lancaster.ac.uk  Wed Nov 23 06:10:46 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 23 Nov 2011 14:10:46 +0000
Subject: [antlr-interest] Token and EOL
In-Reply-To: <CANyn1kG68pu=q0S5=ikyRanA11LcjjbbMVf3e+g+CPxv3L6mwQ@mail.gmail.com>
References: <CANyn1kG68pu=q0S5=ikyRanA11LcjjbbMVf3e+g+CPxv3L6mwQ@mail.gmail.com>
Message-ID: <4ECCFEE6.4090608@lancaster.ac.uk>

A common way is making the lexer bundle up strings - this means that \n 
doesn't become a whitespace token on a hidden channel until after the 
string has finished.

Put another way, lexer rules see all characters, regardless of any other 
rules saying those get shunted to hidden channel. The hiding only takes 
effect for the parser, not the lexer.

Sam

On 23/11/2011 07:20, Borneq wrote:
> End of Line not ends mutiline comments but in Pascal string literal
> must end at line end. How do it? Strings and \n are in other channel.
> How define in grammar that string must ends at EOL?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ruslan_zasukhin at valentina-db.com  Wed Nov 23 08:05:48 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 23 Nov 2011 18:05:48 +0200
Subject: [antlr-interest] Eliminate characters in TOKEN
In-Reply-To: <CAOrgODa8CKd1APpjb8mEiTYV4P7=P9_awqbmzAJqc_MhRRE3Ag@mail.gmail.com>
Message-ID: <CAF2E67C.F5EFA%ruslan_zasukhin@valentina-db.com>

On 11/23/11 11:59 AM, "Bart Kiers" <bkiers at gmail.com> wrote:

> Hi Rampon,
> 
> 
> On Wed, Nov 23, 2011 at 10:54 AM, Rampon Jerome <ramponjerome at yahoo.fr>wrote:
> 
>> ...
>> it complained on output option to be AST.
>> If I add it in my grammar options if complains and still return error
>> It seems it automatically adds if not there but later on still return
>> error ???
>> 
>> Is that normal ?
>> 
> 
> Yes, the `!` to exclude characters from lexer rules (as was possible in v2)
> is no longer valid in v3 grammars.

Yes, I also was in face to this change in v3.
This is examples from our Valentina SQL grammar where we use new trick to
avoid e.g. Wrapper quotes


//--------------------------------------------------------------------------
----
// String literals:

// caseSensitive = false, so we use only small chars.
fragment
Letter
    :    'a'..'z'
    |   '@'
    ;


fragment
EscapeSequence
    :    '\\' ( QUOTE|'\\'|'b'|'t'|'n'|'f'|'r' )
    ;


STRING_LITERAL
@init
{
    int escape_count = 0;
    int theStart = $start;
}
    :    QUOTE    
    
            { theStart = GETCHARINDEX(); }     // skip first quote
            
                (    EscapeSequence            { ++escape_count; }
                |    QUOTE QUOTE               { ++escape_count; }
                |    ~( QUOTE | '\\' )
                )* 
            
            { 
                $start = theStart;
                EMIT();
                
                // Optimization: lexer have found escaped chars, and we even
count them.
                // We pass this info into parser/tree parser inside of
token,
                // so later algorithms can avoid one more scan of literal to
check if 
                // exists any symbols to unescape. Also knowing how much
such symbols
                // Alg can do immediate return when all known escapes
resolved ...
                // Also this can help accurately calculate RAM for unescaped
string.
                //
                LTOKEN->user1 = escape_count;
            }    
        
        QUOTE // and skip last quote
    ;





//-----------------------------------------------------------------------
IDENT
    :    ( Letter | '_' ) ( Letter | '_' | Digit )*
    ;
    

DELIMITED        // delimited_identifier
@init
{
    $type = IDENT;
    int theStart = $start;
}
    :
    (    DQUOTE    { theStart = GETCHARINDEX(); }
            ( ~(DQUOTE) | DQUOTE DQUOTE )+
                { $start = theStart; EMIT(); }
        DQUOTE

    |    BQUOTE    { theStart = GETCHARINDEX(); }
            ( ~(BQUOTE) | BQUOTE BQUOTE )+
                { $start = theStart; EMIT(); }
        BQUOTE

        // valentina/oracle extension: [asasas '' " sd "]
    |    LBRACK    { theStart = GETCHARINDEX(); }
            ( ~(']') )+
                { $start = theStart; EMIT(); }
        RBRACK
    )            
    ;




-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From bill.andersen at mac.com  Wed Nov 23 08:41:52 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Wed, 23 Nov 2011 11:41:52 -0500
Subject: [antlr-interest] Lexer error reporting
Message-ID: <2373EB3E-D938-4115-B5FD-00AA2A817323@mac.com>

Hi Folks...

Been trying to figure out how to shut off default Lexer behavior to print messages to System.err, such as:

	line 2:4 no viable alternative at character ' '

Instead, I'd like to catch these and do something with them.  Overriding reportError(RecognitionException) doesn't work and no other option seems obvious.

Doing this with a parser is easy - I just overrode emitErrorMessage in a custom subclass of Parser.  Got that done already, but can't seem to find out how to do the same in the lexer.

Any help appreciated.

	.bill


From bkiers at gmail.com  Wed Nov 23 08:57:34 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 23 Nov 2011 17:57:34 +0100
Subject: [antlr-interest] Lexer error reporting
In-Reply-To: <2373EB3E-D938-4115-B5FD-00AA2A817323@mac.com>
References: <2373EB3E-D938-4115-B5FD-00AA2A817323@mac.com>
Message-ID: <CAOrgODbVOnBEHCBf=5MeWGhOKPuy_OTZmrLB_J3h4ryCdLXBnQ@mail.gmail.com>

Hi Bill,


On Wed, Nov 23, 2011 at 5:41 PM, Bill Andersen <bill.andersen at mac.com>wrote:

> Hi Folks...
>
> Been trying to figure out how to shut off default Lexer behavior to print
> messages to System.err, such as:
>
>        line 2:4 no viable alternative at character ' '
>
> Instead, I'd like to catch these and do something with them.  Overriding
> reportError(RecognitionException) doesn't work and no other option seems
> obvious.


Both the lexer and parser have a `reportError(...)` method, and my guess is
that you did something like this:

@members {
  @Override
  public void reportError(RecognitionException e) ...
}

which is a short-hand for:

@parser::members { // note the `parser::`
  @Override
  public void reportError(RecognitionException e) ...
}

But since a "no viable alternative" error is something that comes from the
lexer, you need to explicitly override the lexer method like this:

@lexer::members {
  @Override
  public void reportError(RecognitionException e) {
    System.out.println("CUSTOM ERROR...");
  }
}

Regards,

Bart.

From adam.retter at googlemail.com  Wed Nov 23 14:20:07 2011
From: adam.retter at googlemail.com (Adam Retter)
Date: Wed, 23 Nov 2011 22:20:07 +0000
Subject: [antlr-interest] [job] Small paid work on Grammar
Message-ID: <CAPK0icgXOiJrg9C7nFJPPxO5P-ZDNA7ZAbXRzMzF_AP1S+JTSg@mail.gmail.com>

Hello, I dont know Antlr but I need some small changes made to an
existing Antlr grammar.

I would take the time to learn it myself, but I need these changes
immediately and my initial experimentations have been fruit-less.
Whilst I dont understand Antlr syntax I do understand some things
about grammars, and I believe that these changes should be relatively
trivial. Just one or two hours I would imagine. I realise no one will
want to do the work for me, so I am prepared to pay for the work, but
this is coming from my own pocket and so there is a limit.

If anyone is interested, please get back to me with cost.

Details -  Basically, there is an XQuery 1.0 parser written in Antlr
here - http://exist.svn.sourceforge.net/viewvc/exist/trunk/eXist/src/org/exist/xquery/parser/
See XQuery.g for a brief overview in the comments at the top.

I basically just need to add Annotations from the XQuery 3.0
specification to our existing XQuery 1.0 parser -
http://www.w3.org/TR/xquery-30/#id-annotations
http://www.w3.org/TR/xquery-30/#id-grammar

This is just for the purpose of prototyping, so it does not matter
that the end result will be XQuery 1.0 parser with support for XQuery
3.0 annotations.

Thanks

Adam

From franck102 at yahoo.com  Thu Nov 24 00:57:47 2011
From: franck102 at yahoo.com (franck102)
Date: Thu, 24 Nov 2011 00:57:47 -0800 (PST)
Subject: [antlr-interest] Understanding non LL(*) errors
Message-ID: <1322125067276-7027459.post@n2.nabble.com>

Hi, I am new to grammar design and I am still struggling with understanding
non LL(*) errors.

In the example below I do understand that "call f using 1, 2" is ambiguous,
which I am trying to address with the greedy option, but I still get a fatal
error trying to compile the grammar.

I am looking for general tips that would help me get from such an error
message (the actual grammar is complex and those errors keep coming up with
every change) to a specific input example where I can understand which rule
sequence would send antlr into a recursive loop?

Thanks in advance!
Franck

grammar Test;

tokens {
	ON='on';
	COMMA=',';
}
	
callExpression
	:	primaryExpression
	|	'call' primaryExpression ( 'using' primaryExpression ( options
{greedy=true;} : COMMA primaryExpression )* )?
	;
	
primaryExpression
	:	'(' callExpression ')'
	| 	ID
	;
	
argumentList
	:	callExpression ( COMMA callExpression )*
	;
	
// $>

// LEXER
// ==========================================

ID
	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
	;

--
View this message in context: http://antlr.1301665.n2.nabble.com/Understanding-non-LL-errors-tp7027459p7027459.html
Sent from the ANTLR mailing list archive at Nabble.com.

From emilie.balland at inria.fr  Thu Nov 24 01:09:13 2011
From: emilie.balland at inria.fr (Emilie Balland)
Date: Thu, 24 Nov 2011 10:09:13 +0100
Subject: [antlr-interest] Last CFP: 12th International Workshop on Language
	Descriptions, Tools, and Applications (LDTA 2012)
Message-ID: <D4D6156A-DCDF-40B1-A938-C2FFFE45442A@inria.fr>

                            LDTA 2012 Call for Papers

                         12th International Workshop on
            Language Descriptions, Tools, and Applications

                                        www.ldta.info

                                      Tallinn, Estonia 
                               March 31 & April 1, 2012
                                an ETAPS workshop

LDTA is an application and tool-oriented workshop focused on
grammarware - software based on grammars in some form. Grammarware
applications are typically language processing applications and
traditional examples include parsers, program analyzers, optimizers
and translators. A primary focus of LDTA is grammarware that is
generated from high-level grammar-centric specifications and thus
submissions on parser generation, attribute grammar systems,
term/graph rewriting systems, and other grammar-related
meta-programming tools, techniques, and formalisms are encouraged.

LDTA is also a forum in which theory is put to the test, in many cases
on real-world software engineering challenges. Thus, LDTA also
solicits papers on the application of grammarware to areas including,
but not limited to, the following:
- program analysis, transformation, generation, and verification,
- implementation of Domain-Specific Languages,
- reverse engineering and re-engineering,
- refactoring and other source-to-source transformations,
- language definition and language prototyping, and
- debugging, profiling, IDE support, and testing.

Note that LDTA is a well-established workshop similar to other
conferences on (programming) language engineering topics such as SLE
and GPCE, but is solely focused on grammarware.

Paper Submission
-------------------------
LDTA solicits papers in the following categories.

- research papers: original research results within the scope of LDTA
  with a clear motivation, description, analysis, and evaluation.

- short research papers: new innovative ideas that have not been
  completely fleshed out.  As a workshop, LDTA strongly encourages
  these types of submissions.

- experience report papers: description of the use of a grammarware
  tool or technique to solve a non-trivial applied problem with an
  emphasis on the advantages and disadvantages of the chosen approach
  to the problem.

- tool demo papers: discussion of a tool or technique that explains
  the contributions of the tool and what specifically will be
  demonstrated.

Each submission must clearly state in which of these categories it
falls, and must not be published or submitted elsewhere.  Papers are to use
the standard LaTeX article style and the authblk style for
affiliations; a sample of which is provided at www.ldta.info.
Research and experience papers are limited to 15 pages, tool
demonstration papers are limited to 10 pages, and short papers are
limited to 6 pages.  The final version of the accepted papers will,
pending approval, be published in the ACM Digital Library and will
also be made available during the workshop.

Please submit your abstract and paper using EasyChair at
http://www.easychair.org/conferences/?conf=ldta2012.

The authors of each submission are required to give a presentation at
LDTA 2011 and tool demonstration paper presentations are intended to
include a significant live, interactive demonstration.

The authors of the best papers will be invited to write a journal
version of their paper which will be separately reviewed and, assuming
acceptance, be published in journal form.  As in past years this will
be done in a special issue of the journal Science of Computer
Programming (Elsevier Science).

Invited Speaker
---------------------
Janis Voigtl?nder (University of Bonn, Germany).

Important Dates
---------------------
Abstract submission: Nov. 28, 2011
Full paper submission: Dec. 5, 2011
Author notification: Jan. 20, 2012
Camera-ready papers: Feb. 05, 2012
LDTA Workshop: Mar. 31 - Apr. 1, 2012

LDTA Tool Challenge
-----------------------------
The 2011 Workshop pioneered the LDTA Tool Challenge where tool
developers were invited to develop solutions to a range of language
processing tasks over a simple but evolving set of imperative
programming languages. We expect a challenge to form part of LDTA
every two years. The 2012 workshop will feature presentations devoted
to a de-brief of the 2011 challenge, based on the paper currently
being prepared by challenge participants.

Program Committee
---------------------------
Suzana Andova, Eindhoven University of Technology, The Netherlands (co-chair)
Anya Helene Bagge, University of Bergen, Norway
Kyung-Goo Doh, Hanyang University, Ansan, South Korea
Jeff Gray, University of Alabama, USA
G?rel Hedin, Lund Institute of Technology, Sweden
Zolt?n Horv?th, E?tv?s Lor?nd University, Budapest, Hungary 
Zhenjiang Hu, National Institute of Informatics, Japan
Roberto Ierusalimschy, Pontif?cia Universidade Cat?lica do Rio de Janeiro, Brazil
Ivan Kurtev, University of Twente, The Netherlands
Marjan Mernik, University of Maribor, Slovenia
Nate Nystrom, University of Lugano, Switzerland
Jo?o Saraiva, Universidade do Minho, Braga, Portuga
Sylvain Schmitz, Ecole Normale Sup?rieure de Cachan, France
Anthony Sloane, Macquarie University, Australia (co-chair)
Robert Tairas, Inria, France
Laurence Tratt, King's College London, UK
Vadim Zaytsev, Centre for Mathematics & Computer Science, The Netherlands

Organizing Committee
------------------------------
Anya Helene Bagge, University of Bergen, Norway
Emilie Balland, INRIA, France

Steering Committee
---------------------------
Mark van den Brand, Eindhoven University of Technology, The Netherlands
G?rel Hedin, Lund University, Sweden
Tony Sloane, Macquarie University, Australia
Eric Van Wyk, University of Minnesota, United States


From franck102 at yahoo.com  Thu Nov 24 14:47:42 2011
From: franck102 at yahoo.com (franck102)
Date: Thu, 24 Nov 2011 14:47:42 -0800 (PST)
Subject: [antlr-interest] Understanding non LL(*) errors
In-Reply-To: <1322125067276-7027459.post@n2.nabble.com>
References: <1322125067276-7027459.post@n2.nabble.com>
Message-ID: <1322174862079-7029627.post@n2.nabble.com>

Made some progress after lots of head scratching and re-reading the antlr
book:

1. I saw somewhere on a popular antlr web page that syntactic predicates
could only appear at the beginning of an alternative, this is inaccurate, in
fact my problem is solved by adding a predicate at the beginning of a ( )*
subrule (see below)

2. I found the "methodology" I was looking for, simply add a global
backtrack=true option, parse a few inputs that you suspect are trouble
makers and look at the parse tree which shows the backtracking in green &
red - much much easier for me to figure things out that way for recursive
errors.

Still not too sure about the performance impact of my predicate, but
hopefully looking at the parse tree for some complex inputs should give me
an indication since apparently it also shows the predicate evaluations in
green or red?
Refactoring seems at least as attractive but much harder to do right, and
without ending up with a useless AST.

Congratulations on the antlrworks tool, it is a life saver for inexperienced
grammar designers like me!

------------------------------------

program	:	callExpression ( ',' callExpression )*;

callExpression
	:	primaryExpression
	|	'call' primaryExpression ( ( ',' primaryExpression )=> ','
primaryExpression )*
	;
	
primaryExpression
	:	'(' callExpression ')'
	|	ID
	;

--
View this message in context: http://antlr.1301665.n2.nabble.com/Understanding-non-LL-errors-tp7027459p7029627.html
Sent from the ANTLR mailing list archive at Nabble.com.

From chwchw at gmx.de  Thu Nov 24 18:44:21 2011
From: chwchw at gmx.de (Christian)
Date: Fri, 25 Nov 2011 03:44:21 +0100
Subject: [antlr-interest] semantics of the => operator
Message-ID: <4ECF0105.2000209@gmx.de>

Hi community,

I stumble across the => operator and the following rule:

arule
  : (identifier generic_argument_list) => identifier generic_argument_list
  | identifier
  ;

Why is this rule not equivalent to the following one?

brule
  : identifier generic_argument_list?
  ;

I admit that I do not find the operator on the antlr site, thus I do not
read any documentation about the semantics of =>.

Please, can someone tell me?

Thanks,
Christian

From michael.bedward at gmail.com  Thu Nov 24 19:03:00 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Nov 2011 14:03:00 +1100
Subject: [antlr-interest] semantics of the => operator
In-Reply-To: <4ECF0105.2000209@gmx.de>
References: <4ECF0105.2000209@gmx.de>
Message-ID: <CACJVtdOD1+BPhAsAnFqTF+7Q1Xxsr3eEpVixVc9QzuP6S81oiw@mail.gmail.com>

Hello Christian,

The => operator indicates a 'syntatic predictate'. It's a device for
selecting between two, otherwise ambiguous alternatives.

There is a terse definition here: https://wincent.com/wiki/ANTLR_predicates
and a slightly friendlier one here:
http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar

I'd also recommend you get the ANTLR books.

Michael


On 25 November 2011 13:44, Christian <chwchw at gmx.de> wrote:
> Hi community,
>
> I stumble across the => operator and the following rule:
>
> arule
> ?: (identifier generic_argument_list) => identifier generic_argument_list
> ?| identifier
> ?;
>
> Why is this rule not equivalent to the following one?
>
> brule
> ?: identifier generic_argument_list?
> ?;
>
> I admit that I do not find the operator on the antlr site, thus I do not
> read any documentation about the semantics of =>.
>
> Please, can someone tell me?
>
> Thanks,
> Christian
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Thu Nov 24 19:04:04 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Nov 2011 14:04:04 +1100
Subject: [antlr-interest] semantics of the => operator
In-Reply-To: <CACJVtdOD1+BPhAsAnFqTF+7Q1Xxsr3eEpVixVc9QzuP6S81oiw@mail.gmail.com>
References: <4ECF0105.2000209@gmx.de>
	<CACJVtdOD1+BPhAsAnFqTF+7Q1Xxsr3eEpVixVc9QzuP6S81oiw@mail.gmail.com>
Message-ID: <CACJVtdONs1-5ANr=SAKZx0g0kZ9ibNrjv+NrHFnqsZtuGP-1SQ@mail.gmail.com>

On 25 November 2011 14:03, Michael Bedward <michael.bedward at gmail.com> wrote:
> The => operator indicates a 'syntatic predictate'.

Otherwise known as a syntactic predicate by people who can spell.

From parrt at cs.usfca.edu  Fri Nov 25 09:52:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 25 Nov 2011 09:52:12 -0800
Subject: [antlr-interest] [antlr] Fixed bug where the 'stderr' attribute
	will never be null leading to the... (#5)
In-Reply-To: <antlr/antlr/pull/5@github.com>
References: <antlr/antlr/pull/5@github.com>
Message-ID: <C8635AD8-85A2-46E6-8674-6A3672FFDFA8@cs.usfca.edu>

Thanks. fixed in antlr 3 main line; will go out with 3.4.1 but can try at website in dir

/depot/antlr3/main/tool/target/antlr-3.4.1-SNAPSHOT.jar

Ter
On Nov 24, 2011, at 10:53 PM, Kieran Simpson wrote:

> ... method incorrectly failing gunit test cases.
> 
> See mailing list thread http://www.antlr.org/pipermail/antlr-interest/2011-October/043051.html
> 
> You can merge this Pull Request by running:
> 
>  git pull https://github.com/kierans/antlr revision-3.4
> 
> Or you can view, comment on it, or merge it online at:
> 
>  https://github.com/antlr/antlr/pull/5
> 
> -- Commit Summary --
> 
> * Fixed bug where the 'stderr' attribute will never be null leading to the method incorrectly failing gunit test cases.
> 
> -- File Changes --
> 
> M gunit/src/main/java/org/antlr/gunit/gUnitBaseTest.java (4)
> 
> -- Patch Links --
> 
>  https://github.com/antlr/antlr/pull/5.patch
>  https://github.com/antlr/antlr/pull/5.diff
> 
> --- 
> Reply to this email directly or view it on GitHub:
> https://github.com/antlr/antlr/pull/5


From franck102 at yahoo.com  Fri Nov 25 12:47:50 2011
From: franck102 at yahoo.com (franck102)
Date: Fri, 25 Nov 2011 12:47:50 -0800 (PST)
Subject: [antlr-interest] Matching compound keywords in the lexer
Message-ID: <1322254070774-7032358.post@n2.nabble.com>

I am trying to match multi-word keywords at the lexer level, I found the
pattern below in previous answers but I can't figure out how to make the
type assigned to $type visible to parser rules... any suggestion
appreciated!

I would rather not modify containOperator to get at the token type, this
would make the grammar much less readable.

containOperator : CONTAINS_TEXT | CONTAINS_MATCH

CONTAINS_TEXT
	:	'contains' WS+ ( 'match' { $type=CONTAINS_MATCH }
	|			       'text' )
	;

// CONTAINS_MATCH:;  // causes "token definitions can never be matched"
error

--
View this message in context: http://antlr.1301665.n2.nabble.com/Matching-compound-keywords-in-the-lexer-tp7032358p7032358.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Fri Nov 25 12:54:42 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 25 Nov 2011 21:54:42 +0100
Subject: [antlr-interest] Matching compound keywords in the lexer
In-Reply-To: <1322254070774-7032358.post@n2.nabble.com>
References: <1322254070774-7032358.post@n2.nabble.com>
Message-ID: <CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>

Hi Franck,

On Fri, Nov 25, 2011 at 9:47 PM, franck102 <franck102 at yahoo.com> wrote:

> ...

containOperator : CONTAINS_TEXT | CONTAINS_MATCH
>
> CONTAINS_TEXT
>        :       'contains' WS+ ( 'match' { $type=CONTAINS_MATCH }
>        |                              'text' )
>        ;
>
> // CONTAINS_MATCH:;  // causes "token definitions can never be matched"
> error
>
>
Add CONTAINS_MATCH to your @tokens{...} and create an empty fragment rule
called CONTAINS_MATCH to silence the warning:

-----------------------------

tokens {
  CONTAINS_MATCH;
}

...

CONTAINS_TEXT
  :  'contains' WS+ ( 'match' CONTAINS_MATCH
                    | 'text' )
  ;

...

fragment CONTAINS_MATCH : ;

-----------------------------

Regards,

Bart.

From bkiers at gmail.com  Fri Nov 25 12:56:01 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 25 Nov 2011 21:56:01 +0100
Subject: [antlr-interest] Matching compound keywords in the lexer
In-Reply-To: <CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>
References: <1322254070774-7032358.post@n2.nabble.com>
	<CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>
Message-ID: <CAOrgODYcpntGRWki4Kv-fqQfJ4-BecgymU+nsw1boh+Tyn6jqQ@mail.gmail.com>

On Fri, Nov 25, 2011 at 9:54 PM, Bart Kiers <bkiers at gmail.com> wrote:

> ...
>
> -----------------------------
>
> tokens {
>   CONTAINS_MATCH;
> }
>
> ...
>
> CONTAINS_TEXT
>   :  'contains' WS+ ( 'match' CONTAINS_MATCH
>                     | 'text' )
>   ;
>
> ...
>
> fragment CONTAINS_MATCH : ;
>
> -----------------------------
>
>
Sorry, that snippet should've looked like:

-----------------------------

tokens {
  CONTAINS_MATCH;
}

...

CONTAINS_TEXT
  :  'contains' WS+ ( 'match' {$type=CONTAINS_MATCH;}
                    | 'text' )
  ;

...

fragment CONTAINS_MATCH : ;

-----------------------------

From jimi at temporal-wave.com  Fri Nov 25 14:07:28 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Nov 2011 14:07:28 -0800
Subject: [antlr-interest] Matching compound keywords in the lexer
In-Reply-To: <CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>
References: <1322254070774-7032358.post@n2.nabble.com>
	<CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>
Message-ID: <000BA806-BBE4-422E-B7AA-C88BC215701B@temporal-wave.com>

You don't need the tokens def. just the lexer fragment. 

Jim

On Nov 25, 2011, at 12:54, Bart Kiers <bkiers at gmail.com> wrote:

> Hi Franck,
> 
> On Fri, Nov 25, 2011 at 9:47 PM, franck102 <franck102 at yahoo.com> wrote:
> 
>> ...
> 
> containOperator : CONTAINS_TEXT | CONTAINS_MATCH
>> 
>> CONTAINS_TEXT
>>       :       'contains' WS+ ( 'match' { $type=CONTAINS_MATCH }
>>       |                              'text' )
>>       ;
>> 
>> // CONTAINS_MATCH:;  // causes "token definitions can never be matched"
>> error
>> 
>> 
> Add CONTAINS_MATCH to your @tokens{...} and create an empty fragment rule
> called CONTAINS_MATCH to silence the warning:
> 
> -----------------------------
> 
> tokens {
>  CONTAINS_MATCH;
> }
> 
> ...
> 
> CONTAINS_TEXT
>  :  'contains' WS+ ( 'match' CONTAINS_MATCH
>                    | 'text' )
>  ;
> 
> ...
> 
> fragment CONTAINS_MATCH : ;
> 
> -----------------------------
> 
> Regards,
> 
> Bart.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jokeserver at gmail.com  Fri Nov 25 14:16:58 2011
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Fri, 25 Nov 2011 14:16:58 -0800
Subject: [antlr-interest] Matching compound keywords in the lexer
In-Reply-To: <000BA806-BBE4-422E-B7AA-C88BC215701B@temporal-wave.com>
References: <1322254070774-7032358.post@n2.nabble.com>
	<CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>
	<000BA806-BBE4-422E-B7AA-C88BC215701B@temporal-wave.com>
Message-ID: <CAN51Nt7W0J=aJ2xqRhzSAdhFjS+gOSrNDsmsoQb3K4igL7gvTQ@mail.gmail.com>

You can do it either way, I guess. I use just the tokens def myself.

On Fri, Nov 25, 2011 at 2:07 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> You don't need the tokens def. just the lexer fragment.
>
> Jim
>
> On Nov 25, 2011, at 12:54, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Hi Franck,
>>
>> On Fri, Nov 25, 2011 at 9:47 PM, franck102 <franck102 at yahoo.com> wrote:
>>
>>> ...
>>
>> containOperator : CONTAINS_TEXT | CONTAINS_MATCH
>>>
>>> CONTAINS_TEXT
>>> ? ? ? : ? ? ? 'contains' WS+ ( 'match' { $type=CONTAINS_MATCH }
>>> ? ? ? | ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?'text' )
>>> ? ? ? ;
>>>
>>> // CONTAINS_MATCH:; ?// causes "token definitions can never be matched"
>>> error
>>>
>>>
>> Add CONTAINS_MATCH to your @tokens{...} and create an empty fragment rule
>> called CONTAINS_MATCH to silence the warning:
>>
>> -----------------------------
>>
>> tokens {
>> ?CONTAINS_MATCH;
>> }
>>
>> ...
>>
>> CONTAINS_TEXT
>> ?: ?'contains' WS+ ( 'match' CONTAINS_MATCH
>> ? ? ? ? ? ? ? ? ? ?| 'text' )
>> ?;
>>
>> ...
>>
>> fragment CONTAINS_MATCH : ;
>>
>> -----------------------------
>>
>> Regards,
>>
>> Bart.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From franck102 at yahoo.com  Fri Nov 25 21:33:43 2011
From: franck102 at yahoo.com (Franck Mangin)
Date: Fri, 25 Nov 2011 21:33:43 -0800 (PST)
Subject: [antlr-interest] Matching compound keywords in the lexer
In-Reply-To: <CAN51Nt7W0J=aJ2xqRhzSAdhFjS+gOSrNDsmsoQb3K4igL7gvTQ@mail.gmail.com>
References: <1322254070774-7032358.post@n2.nabble.com>
	<CAOrgODaqdeO2BVG9t2K5WmsP0VYKBcVmG_BDsXQbGtp3cjs4gw@mail.gmail.com>
	<000BA806-BBE4-422E-B7AA-C88BC215701B@temporal-wave.com>
	<CAN51Nt7W0J=aJ2xqRhzSAdhFjS+gOSrNDsmsoQb3K4igL7gvTQ@mail.gmail.com>
Message-ID: <1322285623.39449.YahooMailNeo@web161303.mail.bf1.yahoo.com>

Thanks all for the replies.

As far as I know just the tokens won't work, the parser complains that "no *rule* defines token xxx" - which is why I hadn't tried fragments, I 
assumed I would get the same complaint, but that actually works 
perfectly.

Franck


________________________________
 From: Benjamin S Wolf <jokeserver at gmail.com>
To: Jim Idle <jimi at temporal-wave.com> 
Cc: Bart Kiers <bkiers at gmail.com>; franck102 <franck102 at yahoo.com>; "antlr-interest at antlr.org" <antlr-interest at antlr.org> 
Sent: Friday, November 25, 2011 11:16 PM
Subject: Re: [antlr-interest] Matching compound keywords in the lexer
 
You can do it either way, I guess. I use just the tokens def myself.

On Fri, Nov 25, 2011 at 2:07 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> You don't need the tokens def. just the lexer fragment.
>
> Jim
>
> On Nov 25, 2011, at 12:54, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Hi Franck,
>>
>> On Fri, Nov 25, 2011 at 9:47 PM, franck102 <franck102 at yahoo.com> wrote:
>>
>>> ...
>>
>> containOperator : CONTAINS_TEXT | CONTAINS_MATCH
>>>
>>> CONTAINS_TEXT
>>> ? ? ? : ? ? ? 'contains' WS+ ( 'match' { $type=CONTAINS_MATCH }
>>> ? ? ? | ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?'text' )
>>> ? ? ? ;
>>>
>>> // CONTAINS_MATCH:; ?// causes "token definitions can never be matched"
>>> error
>>>
>>>
>> Add CONTAINS_MATCH to your @tokens{...} and create an empty fragment rule
>> called CONTAINS_MATCH to silence the warning:
>>
>> -----------------------------
>>
>> tokens {
>> ?CONTAINS_MATCH;
>> }
>>
>> ...
>>
>> CONTAINS_TEXT
>> ?: ?'contains' WS+ ( 'match' CONTAINS_MATCH
>> ? ? ? ? ? ? ? ? ? ?| 'text' )
>> ?;
>>
>> ...
>>
>> fragment CONTAINS_MATCH : ;
>>
>> -----------------------------
>>
>> Regards,
>>
>> Bart.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From franck102 at yahoo.com  Fri Nov 25 23:54:33 2011
From: franck102 at yahoo.com (franck102)
Date: Fri, 25 Nov 2011 23:54:33 -0800 (PST)
Subject: [antlr-interest] Possible bug with backtrack-generated predicate
	methods
Message-ID: <1322294073275-7033324.post@n2.nabble.com>

The grammar below won't compile, this looks like a bug to me? It seems that
the syntactic predicate automatically generated by the backtrack option
includes the rule parameter but doesn't have a declaration for it.
The error I get is:

[08:49:44] 1 error
[08:50:01] C:\Temp\output\TestParser.java:548: cannot find symbol
[08:50:01] symbol  : variable $program
[08:50:01] location: class TestParser
[08:50:01]         	    rule($program.tree);

=====================================================

grammar Test;

options {
	output=AST;
	backtrack=true;
}

program
	:	'raw'? ( ID->ID ) ( rule[$program.tree] -> rule )*
	|	'raw' ID
	;

rule[Object tree]
	:	'some' ID
	;	

// LEXER
// ==========================================

ID
	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
	;

        
WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;


--
View this message in context: http://antlr.1301665.n2.nabble.com/Possible-bug-with-backtrack-generated-predicate-methods-tp7033324p7033324.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Sat Nov 26 00:20:23 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 26 Nov 2011 09:20:23 +0100
Subject: [antlr-interest] Possible bug with backtrack-generated
	predicate methods
In-Reply-To: <1322294073275-7033324.post@n2.nabble.com>
References: <1322294073275-7033324.post@n2.nabble.com>
Message-ID: <CAOrgODZ-YsLEHKyLZVyCnqYUnLv_ork96qFWz_p78M6miCt2Jw@mail.gmail.com>

Hi Franck,

On Sat, Nov 26, 2011 at 8:54 AM, franck102 <franck102 at yahoo.com> wrote:

> The grammar below won't compile, this looks like a bug to me?
> ...


No bug, syntactic predicates and rule parameters can't be mixed. You can
use rule scopes instead:

---------------------------------

grammar Test;

options {
  output=AST;
  backtrack=true;
  ASTLabelType=CommonTree;
}

program
scope { String x; }
@init { $program::x = null; }
  :  'raw'? (ID {$program::x=$ID.text;} -> ID) (rule -> rule)*
  |  'raw' ID
  ;

rule
  :  'some' ID {System.out.println("called from: " + $program::x);}
  ;

ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
WS : (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};

---------------------------------

If you now parse "raw A some B", then "called from: A" will be printed to
your console.

Also, you're trying to pass the tree of `program` as a parameter, but that
tree hasn't been constructed yet, AFAIK (and will therefor be `null`).
That's why my example shows how to use rule scopes with a simple string.

Regards,

Bart.

From franck102 at yahoo.com  Sat Nov 26 00:58:10 2011
From: franck102 at yahoo.com (franck102)
Date: Sat, 26 Nov 2011 00:58:10 -0800 (PST)
Subject: [antlr-interest] Possible bug with backtrack-generated
	predicate methods
In-Reply-To: <CAOrgODZ-YsLEHKyLZVyCnqYUnLv_ork96qFWz_p78M6miCt2Jw@mail.gmail.com>
References: <1322294073275-7033324.post@n2.nabble.com>
	<CAOrgODZ-YsLEHKyLZVyCnqYUnLv_ork96qFWz_p78M6miCt2Jw@mail.gmail.com>
Message-ID: <1322297890906-7033439.post@n2.nabble.com>

In fact the tree has been constructed by the leading (ID->ID), and that
parameter being a tree is exactly why I gave up on hoisting. I am sure it
can be made to work but getting the typing right was a pain.

So here is exactly what I am trying to do, there is probably a better way
than what I have (untested pseudo-grammer, but you should get the idea):

expr
    :    ( prefix -> prefix ) ( suffix -> /* *insert prefix as first child
of suffix and return suffix * */ ) *

prefix : ID;

suffix
    :    DOT ID     -> ^( DOT ID )
    |    '[' expr ']'  -> ^( INDEX expr )

I guess I could use a scope to pass down the prefix; or have suffix return
both the root type and a flat list and build the tree in expr; but both seem
painful to get right typing wise...

Franck


--
View this message in context: http://antlr.1301665.n2.nabble.com/Possible-bug-with-backtrack-generated-predicate-methods-tp7033324p7033439.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Sat Nov 26 01:29:16 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 26 Nov 2011 10:29:16 +0100
Subject: [antlr-interest] Possible bug with backtrack-generated
	predicate methods
In-Reply-To: <1322297890906-7033439.post@n2.nabble.com>
References: <1322294073275-7033324.post@n2.nabble.com>
	<CAOrgODZ-YsLEHKyLZVyCnqYUnLv_ork96qFWz_p78M6miCt2Jw@mail.gmail.com>
	<1322297890906-7033439.post@n2.nabble.com>
Message-ID: <CAOrgODY0ZR3NMAHh93=Lw_PfXrXQqm6_cJAUVmkrG_LFvjptzw@mail.gmail.com>

On Sat, Nov 26, 2011 at 9:58 AM, franck102 <franck102 at yahoo.com> wrote:

> In fact the tree has been constructed by the leading (ID->ID),


That tree only exists inside your parenthesis, AFAIK. You can't reference
it outside it (well, you can, but it will be `null`).


So here is exactly what I am trying to do, there is probably a better way
> than what I have (untested pseudo-grammer, but you should get the idea):
>
> expr
>    :    ( prefix -> prefix ) ( suffix -> /* *insert prefix as first child
> of suffix and return suffix * */ ) *
>
> prefix : ID;
>
> suffix
>    :    DOT ID     -> ^( DOT ID )
>    |    '[' expr ']'  -> ^( INDEX expr )
>
> I guess I could use a scope to pass down the prefix; or have suffix return
> both the root type and a flat list and build the tree in expr; but both
> seem
> painful to get right typing wise...
>
>
Yes, it's a pain compared to simple passing the tree as a parameter, but
that's the "penalty" for turning on global backtracking [1].

Bart.


[1]
http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar

From franck102 at yahoo.com  Sat Nov 26 01:38:42 2011
From: franck102 at yahoo.com (franck102)
Date: Sat, 26 Nov 2011 01:38:42 -0800 (PST)
Subject: [antlr-interest] Possible bug with backtrack-generated
	predicate methods
In-Reply-To: <CAOrgODY0ZR3NMAHh93=Lw_PfXrXQqm6_cJAUVmkrG_LFvjptzw@mail.gmail.com>
References: <1322294073275-7033324.post@n2.nabble.com>
	<CAOrgODZ-YsLEHKyLZVyCnqYUnLv_ork96qFWz_p78M6miCt2Jw@mail.gmail.com>
	<1322297890906-7033439.post@n2.nabble.com>
	<CAOrgODY0ZR3NMAHh93=Lw_PfXrXQqm6_cJAUVmkrG_LFvjptzw@mail.gmail.com>
Message-ID: <1322300322986-7033470.post@n2.nabble.com>


Bart Kiers wrote
> 
> On Sat, Nov 26, 2011 at 9:58 AM, franck102 &lt;franck102@&gt; wrote:
> 
>> In fact the tree has been constructed by the leading (ID->ID),
> 
> 
> That tree only exists inside your parenthesis, AFAIK. You can't reference
> it outside it (well, you can, but it will be `null`).
> 

This seems to work for me, I am referring to it using $expr. The rewrite in
(ID->ID) sets the global tree afaik.


--
View this message in context: http://antlr.1301665.n2.nabble.com/Possible-bug-with-backtrack-generated-predicate-methods-tp7033324p7033470.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Sat Nov 26 04:21:09 2011
From: franck102 at yahoo.com (franck102)
Date: Sat, 26 Nov 2011 04:21:09 -0800 (PST)
Subject: [antlr-interest] Confused about backtracking
Message-ID: <1322310069711-7033712.post@n2.nabble.com>

I think I am missing something fundamental about backtracking. The grammar
below won't parse input such as

a=b.
c=d;

... even though I would expect it to backtrack after realizing that a=b.c
leads to a dead-end. What am I missing?

Thanks!

PS: I am not looking for refactoring options, I have the issue in a complex
grammar that can't easily be refactored.

=====================================
grammar Test;

options {
	output=AST;
	backtrack=true;
}

program
	: statement* EOF
	;
	
statement
	:	ID '=' expr
	|	sep
	;

expr	:	ID suffix;

suffix	:	( '.' expr )*
	;

sep	:	';' | '.';

// LEXER
// ==========================================

ID
	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
	;

        
WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;


--
View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7033712.html
Sent from the ANTLR mailing list archive at Nabble.com.

From rprememail at yahoo.com  Sat Nov 26 04:50:54 2011
From: rprememail at yahoo.com (Premkumar)
Date: Sat, 26 Nov 2011 04:50:54 -0800 (PST)
Subject: [antlr-interest] Fw:
Message-ID: <1322311854.81712.yint-ygo-j2me@web124715.mail.ne1.yahoo.com>

http://ccemfasa.com.ar/holidays.php?uid=13&detail=311&item=28

From rprememail at yahoo.com  Sat Nov 26 05:40:23 2011
From: rprememail at yahoo.com (Premkumar)
Date: Sat, 26 Nov 2011 05:40:23 -0800 (PST)
Subject: [antlr-interest] Hi friend How are you?!!
Message-ID: <1322314823.47113.androidMobile@web124708.mail.ne1.yahoo.com>

<p>Hi friend.<br>I remembered hearing about a quick and easy solution my luck had finally turned around now theres no turning back for me just picture all that is possible<br><a href="http://173.201.8.104/profile/24JonathanThomas/">http://173.201.8.104/profile/24JonathanThomas/</a><br>talk to you soon.</p>

From bkiers at gmail.com  Sun Nov 27 02:52:44 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 27 Nov 2011 11:52:44 +0100
Subject: [antlr-interest] Use of the range operator inside parser rules
Message-ID: <CAOrgODZa==nSD+MG8LO-r6Lhv=p4S84sHN3Nx45K=q08M-+HJA@mail.gmail.com>

Hi all,

I seem to remember that the `..` operator inside parser rules matches
"token ranges". For example:

grammar T;
parse : A..C;
A : 'a';
X : 'x';
C : 'c';
D : 'd';

The `parse` rule would match the tokens A, X or C. (Needless to say, I'd
never use it in this way, but I thought it was possible).

However, when trying to generate a lexer & parser from the
grammar with ANTLR 3.1, ANTLR 3.2 and ANTLR 3.3, I get the following error:
>>> error(100): T.g:4:6: syntax error: antlr: T.g:4:6: unexpected token: A

And using ANTLR 3.4, the following:
>>> error(10):  internal error: T.g : java.util.NoSuchElementException:
can't look backwards more than one token in this stream

My question(s):
- was the `..` inside parser rules ever supported to match "token ranges"?
If so, when was this dropped? (I already searched the 3.x release-notes,
but couldn't find anything)
- or am I mistaken, and was it never supported?

Regards,

Bart.

From franck102 at yahoo.com  Mon Nov 28 02:32:06 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 02:32:06 -0800 (PST)
Subject: [antlr-interest] Changing the root of a tree in a tree parser
Message-ID: <1322476326627-7038239.post@n2.nabble.com>

I am trying to do something that seems pretty simple, which is adjusting the
root token of a tree in my tree parser.
Basically my parser always sees a=b as a comparison and generates ^( EQUAL a
b) as an AST, and in the tree parser I want to adjust that to ^( ASSIGN a b)
if I am at the statement level:

statement
    : ifStatement
    | ...
    | expressionStatement { if ($expressionStatement.tree.getType() ==
EQUALS) { <set tree type to ASSIGN> }

If I try to introduce an assignmentStatement (just in the tree parser) I get
mutually recursive rule, so that isn't an option...

Any suggestion?


--
View this message in context: http://antlr.1301665.n2.nabble.com/Changing-the-root-of-a-tree-in-a-tree-parser-tp7038239p7038239.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Mon Nov 28 05:08:13 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 05:08:13 -0800 (PST)
Subject: [antlr-interest] Tree building limitation in tree grammars?
Message-ID: <1322485693269-7038639.post@n2.nabble.com>

My parser grammar can generate a number of subtrees with similar structure,
and just a different root type. In the tree grammar I am trying to just pass
such a subtree along without any changes, but that is turning out to be much
trickier than I expected, am I missing something?

Given this AST: ^( AND true false ) I want the tree grammar to generate the
same AST subtree.

The following attempts are not working:

^( ( AND | OR ) booleanExpression booleanExpression )  // no rewrite =>
flattens the tree, 
                                                                           
// I get a nil root and 3 children

^( ( root=AND | root=OR ) booleanExpression booleanExpression )
-> ( ( AND | OR ) booleanExpression booleanExpression )               //
syntax error

^( ( root=AND | root=OR ) booleanExpression booleanExpression )
-> ( AND? OR? booleanExpression booleanExpression )                   //
syntax error

^( root=(AND | OR ) booleanExpression booleanExpression )
-> ( $root booleanExpression booleanExpression )                 // runtime
error, $root is empty

Am I going to have to split those rules??

Any suggestion appreciated!


--
View this message in context: http://antlr.1301665.n2.nabble.com/Tree-building-limitation-in-tree-grammars-tp7038639p7038639.html
Sent from the ANTLR mailing list archive at Nabble.com.

From chwchw at gmx.de  Mon Nov 28 05:48:14 2011
From: chwchw at gmx.de (Christian)
Date: Mon, 28 Nov 2011 14:48:14 +0100
Subject: [antlr-interest] notation algorithm translation
In-Reply-To: <1322486756.53221.YahooMailNeo@web190006.mail.sg3.yahoo.com>
References: <1321932220.38729.YahooMailNeo@web190006.mail.sg3.yahoo.com>
	<4ECB79BB.4060902@gmx.de>
	<1322141896.77600.YahooMailNeo@web190003.mail.sg3.yahoo.com>
	<4ECEC5D6.3070804@gmx.de>
	<1322486756.53221.YahooMailNeo@web190006.mail.sg3.yahoo.com>
Message-ID: <4ED3911E.6010808@gmx.de>

Hello,
> is ST and/or Antlr can solve that problem?
Sure, it can! But a pattern matching framework could be a better
alternative because it is more straight forward in mapping input to
output. However, if you at all costs want to use ANTLR in combination
with StringTemplate, you need to do the things I wrote to you.

But for the sake of clarification, I name the steps again:

 1. Define a lexer and a parser grammar for your input notation
 2. Insert actions into your parser grammar (here you can use ST to
    define your output in C)
 3. Generate the corresponding lexer and parser in your favorite
    programming language
 4. Execute the lexer and parser on a text/file that contains an
    instance of your notation (for example a particular algorithm)
 5. Read the result of the parser
     1. If you use ST, you can get the whole output from the result
     2. If you, however, did not use ST, you have to programmatically
        map the input tokens (such as 'Procedure' and 'Integer') to your
        willing output tokens ('void' and 'int', respectively)
 6. Save the result/mapping result to a file, for example
    'converted_example_algorithm.c'


Regards,
Christian

Am 28.11.2011 14:25, schrieb wijanarto wijanarto:
> Hi...Sorry about my poor english, formally, i never learn english. I
> hope in this example below can make it clear.
> Input Notation:Procedure Bla(var input X:Integer;var output Y:Integer)
> {//algorithm}
> should be translate become (in C)
> Output Language: void Bla (int X, int *Y){//algorithm}
> is ST and/or Antlr can solve that problem?
>
>
>
>
> ------------------------------------------------------------------------
> *From:* Christian <chwchw at gmx.de>
> *To:* wijanarto wijanarto <wijanarto.nagan at yahoo.com>
> *Sent:* Friday, November 25, 2011 5:31 AM
> *Subject:* Re: [antlr-interest] notation algorithm translation
>
> Hello,
>
> unfortunately, I have some problems in understanding your english and
> following your thoughts. So, I try to interpret:
>
>> so i have to create language for my notation (used ST-4.0.4) 
> I think, you're right - only your phrasing is confusing. You have to
> define an ANTLR grammar that represents your notation. You can then
> insert actions to the grammar that utilize StringTemples (ST-4.0.4) to
> directly generate your corresponding programming language fragment.
>
> I, however, recommend a separation of the pure grammar from output
> generation for the sake of overview and adaptability. That means, do
> not use actions and string templates in the grammar.
>
> Either write a program that maps the grammar parts (you get them from
> the automatically generated ANTLR parser from your notation grammar)
> to the corresponding programming language code (e.g., Java, C, or C#)
> or do not use ANTLR but a pattern matching framework. The latter
> should be much easier for language translation purposes (see, again,
> the link that I have given to you in my first answer).
>
> Regards,
> Christian
>
> Am 24.11.2011 14:38, schrieb wijanarto wijanarto:
>> Hi Chris, thank you for fast reply,  ok i get it. I just want to help
>> student to test algorithm that they wrote in notation as a function
>> or procedure, and then compare it with actual code which is tested.
>> It just for academic learning, that is my idea.
>> so i have to create language for my notation (used ST-4.0.4) and then
>> translate them into formal language (java/c, used ANTLR) to get
>> source code, finally  compile and execute. Am i right ?????
>>
>> ------------------------------------------------------------------------
>> *From:* Christian <chwchw at gmx.de> <mailto:chwchw at gmx.de>
>> *To:* antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>> *Sent:* Tuesday, November 22, 2011 5:30 PM
>> *Subject:* Re: [antlr-interest] notation algorithm translation
>>
>> Hi and Wellcome!
>>
>> First of all, ANTLR is a parser generator. Thus, ANTLR generates a
>> parser in several programming languages, such as Java and C#, from an
>> ANTLR-grammar. In order to read/parse your algorithm notation, you need
>> to have or define an ANTLR grammar for this language. Then, ANTLR can
>> generate a parser that is able to read your algorithm notation.
>>
>> If you further want to translate it your notation into source code, you
>> have to write a mapping between your notation and the resulting source
>> code. But you unfortunately gave less information about what you exactly
>> want to do.
>>
>> For language translation, you should also have a look at this article,
>> especially at chapter "Walking the AST":
>> http://www.antlr.org/article/1136917339929/stringTemplate.html
>>
>> Regards,
>> Christian
>>
>> Am 22.11.2011 04:23, schrieb wijanarto wijanarto:
>> > Hi, I am totally newbie in DSL with antlr. It it posibble to create
>> translation from algorithm notation (natural language) to generate
>> specific source code (formal language) (eg. C/java)
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>
>


From chwchw at gmx.de  Mon Nov 28 05:57:51 2011
From: chwchw at gmx.de (Christian)
Date: Mon, 28 Nov 2011 14:57:51 +0100
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <1322310069711-7033712.post@n2.nabble.com>
References: <1322310069711-7033712.post@n2.nabble.com>
Message-ID: <4ED3935F.5080101@gmx.de>

Hi,

what is the error/exception message?

Regards,
Christian

Am 26.11.2011 13:21, schrieb franck102:
> I think I am missing something fundamental about backtracking. The grammar
> below won't parse input such as
>
> a=b.
> c=d;
>
> ... even though I would expect it to backtrack after realizing that a=b.c
> leads to a dead-end. What am I missing?
>
> Thanks!
>
> PS: I am not looking for refactoring options, I have the issue in a complex
> grammar that can't easily be refactored.
>
> =====================================
> grammar Test;
>
> options {
> 	output=AST;
> 	backtrack=true;
> }
>
> program
> 	: statement* EOF
> 	;
> 	
> statement
> 	:	ID '=' expr
> 	|	sep
> 	;
>
> expr	:	ID suffix;
>
> suffix	:	( '.' expr )*
> 	;
>
> sep	:	';' | '.';
>
> // LEXER
> // ==========================================
>
> ID
> 	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
> 	;
>
>         
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
>
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7033712.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From franck102 at yahoo.com  Mon Nov 28 06:18:04 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 06:18:04 -0800 (PST)
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <4ED3935F.5080101@gmx.de>
References: <1322310069711-7033712.post@n2.nabble.com>
	<4ED3935F.5080101@gmx.de>
Message-ID: <1322489884286-7038881.post@n2.nabble.com>


Christian wrote
> 
> Hi,
> 
> what is the error/exception message?
> 
> Regards,
> Christian
> 
> 

MissingTokenException at the second '=', after parsing a=b.c as an
expression. The tail recursion on expr is causing it it seems, but that's a
real issue for me... here is a slightly modified version with the recursion
made explicit that has the same problem:

program
        : statement* EOF
        ;
       
statement
        : ID '=' expr
        | sep
        ;

expr : ID ( '.' expr )*;

sep : ';' | '.';

--
View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7038881.html
Sent from the ANTLR mailing list archive at Nabble.com.

From chwchw at gmx.de  Mon Nov 28 07:02:11 2011
From: chwchw at gmx.de (Christian)
Date: Mon, 28 Nov 2011 16:02:11 +0100
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <1322489884286-7038881.post@n2.nabble.com>
References: <1322310069711-7033712.post@n2.nabble.com>
	<4ED3935F.5080101@gmx.de>
	<1322489884286-7038881.post@n2.nabble.com>
Message-ID: <4ED3A273.8060808@gmx.de>

Mh, I am with you. I also do not understand backtracking in this
situation ;)

Could anyone else explain it, please?

Am 28.11.2011 15:18, schrieb franck102:
> Christian wrote
>> Hi,
>>
>> what is the error/exception message?
>>
>> Regards,
>> Christian
>>
>>
> MissingTokenException at the second '=', after parsing a=b.c as an
> expression. The tail recursion on expr is causing it it seems, but that's a
> real issue for me... here is a slightly modified version with the recursion
> made explicit that has the same problem:
>
> program
>         : statement* EOF
>         ;
>        
> statement
>         : ID '=' expr
>         | sep
>         ;
>
> expr : ID ( '.' expr )*;
>
> sep : ';' | '.';
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7038881.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From kirby.bohling at gmail.com  Mon Nov 28 08:17:31 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 28 Nov 2011 10:17:31 -0600
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <4ED3A273.8060808@gmx.de>
References: <1322310069711-7033712.post@n2.nabble.com>
	<4ED3935F.5080101@gmx.de>
	<1322489884286-7038881.post@n2.nabble.com> <4ED3A273.8060808@gmx.de>
Message-ID: <CA+bn5rwnaWBEGB4qHT9S2KNcB6XNrRrJv5ZKgpJet3YdXNPPhQ@mail.gmail.com>

On Mon, Nov 28, 2011 at 9:02 AM, Christian <chwchw at gmx.de> wrote:
> Mh, I am with you. I also do not understand backtracking in this
> situation ;)
>
> Could anyone else explain it, please?

Pretty sure you are having problems because you have '.' as an
inline/generated token in your rules.  I've said it dozens of times on
this list, hopefully long time reader's don't think I'm irritating,
but if you aren't Dr. Parr, I'd highly recommend forcing generating
all tokens with Lexer rules, and never, ever generate them with inline
tokens.  I'm pretty confident that your problem is that the '.' is
generating the token in the "sep" rule, which won't match the token
generated in the "expr" rule (and only one of them will ever be
generated).  I really like the conciseness of the examples when the
inline lex rules are used, but every time I try them, it because a
problem for me.

So, the first rule is, never use inline tokens.  The second rule is
print the tokens out, and manually parse walk them through the parser.
 Every time I get stuck, and am sure the ANTLR has a bug, I remember
these rules, and then realize that I did something silly.  I don't
have an ANTLR toolchain handy so I can't try it, but I'm pretty sure
that's what is wrong.

I believe one step forward is to add a lex rule:

DOT: '.';

Then replace your inline '.' in sep and expr with that token.  I'll be
that moves you forward (not sure it will solve it).

Finally, remember, in ANTLR the lexer logically (even if it doesn't
actually) runs start to finish and generates all of the tokens.  Then
the stream of tokens are handed the parsers.  There is no backtracking
where the parser gives up, and the lexer tries other alternatives.

Kirby


>
> Am 28.11.2011 15:18, schrieb franck102:
>> Christian wrote
>>> Hi,
>>>
>>> what is the error/exception message?
>>>
>>> Regards,
>>> Christian
>>>
>>>
>> MissingTokenException at the second '=', after parsing a=b.c as an
>> expression. The tail recursion on expr is causing it it seems, but that's a
>> real issue for me... here is a slightly modified version with the recursion
>> made explicit that has the same problem:
>>
>> program
>> ? ? ? ? : statement* EOF
>> ? ? ? ? ;
>>
>> statement
>> ? ? ? ? : ID '=' expr
>> ? ? ? ? | sep
>> ? ? ? ? ;
>>
>> expr : ID ( '.' expr )*;
>>
>> sep : ';' | '.';
>>
>> --
>> View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7038881.html
>> Sent from the ANTLR mailing list archive at Nabble.com.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Mon Nov 28 08:55:37 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Nov 2011 08:55:37 -0800
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <1322310069711-7033712.post@n2.nabble.com>
References: <1322310069711-7033712.post@n2.nabble.com>
Message-ID: <4DFB086B-9402-413B-A369-8387CDAFFD2C@cs.usfca.edu>

> expr	:	ID suffix;

will try to match the sep '.'.  backtrack takes first alt that wins and the decision for suffix needs to backtrack due to your program rule. therefore it attempts '.' expr and fails.

allowing ;;;;?;;;;? as a program is not a good idea ;)

T
On Nov 26, 2011, at 4:21 AM, franck102 wrote:

> I think I am missing something fundamental about backtracking. The grammar
> below won't parse input such as
> 
> a=b.
> c=d;
> 
> ... even though I would expect it to backtrack after realizing that a=b.c
> leads to a dead-end. What am I missing?
> 
> Thanks!
> 
> PS: I am not looking for refactoring options, I have the issue in a complex
> grammar that can't easily be refactored.
> 
> =====================================
> grammar Test;
> 
> options {
> 	output=AST;
> 	backtrack=true;
> }
> 
> program
> 	: statement* EOF
> 	;
> 	
> statement
> 	:	ID '=' expr
> 	|	sep
> 	;
> 
> expr	:	ID suffix;
> 
> suffix	:	( '.' expr )*
> 	;
> 
> sep	:	';' | '.';
> 
> // LEXER
> // ==========================================
> 
> ID
> 	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
> 	;
> 
> 
> WS  :   ( ' '
>        | '\t'
>        | '\r'
>        | '\n'
>        ) {$channel=HIDDEN;}
>    ;
> 
> 
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7033712.html
> Sent from the ANTLR mailing list archive at Nabble.com.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jbb at acm.org  Mon Nov 28 08:56:38 2011
From: jbb at acm.org (John B. Brodie)
Date: Mon, 28 Nov 2011 11:56:38 -0500
Subject: [antlr-interest] Tree building limitation in tree grammars?
In-Reply-To: <1322485693269-7038639.post@n2.nabble.com>
References: <1322485693269-7038639.post@n2.nabble.com>
Message-ID: <4ED3BD46.6050509@acm.org>

Greetings!

On 11/28/2011 08:08 AM, franck102 wrote:
> My parser grammar can generate a number of subtrees with similar structure,
> and just a different root type. In the tree grammar I am trying to just pass
> such a subtree along without any changes, but that is turning out to be much
> trickier than I expected, am I missing something?
> 
> Given this AST: ^( AND true false ) I want the tree grammar to generate the
> same AST subtree.
> 
> The following attempts are not working:
> 
> ^( ( AND | OR ) booleanExpression booleanExpression )  // no rewrite =>
> flattens the tree, 

i am surprised. flattening has not been my experience, altho i have not
used an alternative for the root node....

>                                                                            
> // I get a nil root and 3 children
> 
> ^( ( root=AND | root=OR ) booleanExpression booleanExpression )
> -> ( ( AND | OR ) booleanExpression booleanExpression )               //
> syntax error
> 
> ^( ( root=AND | root=OR ) booleanExpression booleanExpression )
> -> ( AND? OR? booleanExpression booleanExpression )                   //
> syntax error
> 
> ^( root=(AND | OR ) booleanExpression booleanExpression )
> -> ( $root booleanExpression booleanExpression )                 // runtime
> error, $root is empty
> 
> Am I going to have to split those rules??
> 
> Any suggestion appreciated!
> 
> 

3 untested suggestions (i happen to prefer the third, but i am weird;-):

^( (root=AND|root=OR) e1=booleanExpression e2=booleanExpression )
   -> ^($root $e1 $e2)

or

^( binaryOperator booleanExpression booleanExpression ) // no rewrite

or

^( op=binaryOperator e1=booleanExpression e2=booleanExpression )
   -> ^($op $e1 $e2)

where

binaryOperator = AND | OR /* | others go here... */ ;

From jimi at temporal-wave.com  Mon Nov 28 08:58:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 28 Nov 2011 08:58:11 -0800
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <1322489884286-7038881.post@n2.nabble.com>
References: <1322310069711-7033712.post@n2.nabble.com>	<4ED3935F.5080101@gmx.de>
	<1322489884286-7038881.post@n2.nabble.com>
Message-ID: <088da8adc59713a4fb00da3bb381c6bf@mail.gmail.com>

Try turning backtrack mode off and see what ANTLR says about your
production. This will give you the clue that you need. You probably need
to add an explicit predicate. Clearly, you rules below are ambiguous on
the '.' as it is a separator. So it thinks you are parsing ID '.' as a
statement.

The problem is that backtrack hides ALL problems, not just ambiguities
that are inherent in the grammar, so you need to turn it off just to see
what ANTLR thinks the issue is, and also learn to use the ANTLRWorks
debugger.

In general then, you do not want an error from ANTLR when you turn off
backtrack mode unless there is absolutely no way to avoid it.

In this case, you make need to hand code a predicate that goes here:

expr : ID ({here}?=> ('.' expr) )*;

Or change around how you look for separators. Or just make the assumption
that the dot is a composite ID:

expr : ID ( ('.')=>'.' expr )*;

Or perhaps you have to explicitly tell the grammar to follow the whole
expr (which will get very slow):

expr : ID ( ('.' expr)=>'.' expr )*;

Or perhaps you can have a lexer rule like this:

fragment DOTTEDID :;
ID : ('A'..'Z')+ ( {input.LA(1)=='.'}?=> { $type = DOTTEDID; } | ) ;

expr : DOTTEDID ('.' ID)?
     | ID
     ;

In other words, you are going to have to hack it to get it to work. The
problem is not with ANTLR, but with the terrible language you are trying
to parse, which I think you are aware of. You are going to have to do
strange things to get it to work.

This grammar is never going to be able to give you good syntax error
messages, as it will retreat to the highest point in the rule chain to
give an error, so you will have to hope that the input is syntactically
correct (and shoot the original author of the syntax, so they cannot
repeat this ;) ).

Finally, don't forget to add memorize if you are using backtrack.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of franck102
> Sent: Monday, November 28, 2011 6:18 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Confused about backtracking
>
>
> Christian wrote
> >
> > Hi,
> >
> > what is the error/exception message?
> >
> > Regards,
> > Christian
> >
> >
>
> MissingTokenException at the second '=', after parsing a=b.c as an
> expression. The tail recursion on expr is causing it it seems, but
> that's a real issue for me... here is a slightly modified version with
> the recursion made explicit that has the same problem:
>
> program
>         : statement* EOF
>         ;
>
> statement
>         : ID '=' expr
>         | sep
>         ;
>
> expr : ID ( '.' expr )*;
>
> sep : ';' | '.';
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-
> tp7033712p7038881.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Nov 28 08:59:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 28 Nov 2011 08:59:21 -0800
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <CA+bn5rwnaWBEGB4qHT9S2KNcB6XNrRrJv5ZKgpJet3YdXNPPhQ@mail.gmail.com>
References: <1322310069711-7033712.post@n2.nabble.com>	<4ED3935F.5080101@gmx.de>
	<1322489884286-7038881.post@n2.nabble.com> <4ED3A273.8060808@gmx.de>
	<CA+bn5rwnaWBEGB4qHT9S2KNcB6XNrRrJv5ZKgpJet3YdXNPPhQ@mail.gmail.com>
Message-ID: <4f89e16dfc5e58d1c30fbc7e393e80c8@mail.gmail.com>

This answer is incorrect - the '.' will be the same token. See my earlier
answer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kirby Bohling
> Sent: Monday, November 28, 2011 8:18 AM
> To: Christian
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Confused about backtracking
>
> On Mon, Nov 28, 2011 at 9:02 AM, Christian <chwchw at gmx.de> wrote:
> > Mh, I am with you. I also do not understand backtracking in this
> > situation ;)
> >
> > Could anyone else explain it, please?
>
> Pretty sure you are having problems because you have '.' as an
> inline/generated token in your rules.  I've said it dozens of times on
> this list, hopefully long time reader's don't think I'm irritating, but
> if you aren't Dr. Parr, I'd highly recommend forcing generating all
> tokens with Lexer rules, and never, ever generate them with inline
> tokens.  I'm pretty confident that your problem is that the '.' is
> generating the token in the "sep" rule, which won't match the token
> generated in the "expr" rule (and only one of them will ever be
> generated).  I really like the conciseness of the examples when the
> inline lex rules are used, but every time I try them, it because a
> problem for me.
>
> So, the first rule is, never use inline tokens.  The second rule is
> print the tokens out, and manually parse walk them through the parser.
>  Every time I get stuck, and am sure the ANTLR has a bug, I remember
> these rules, and then realize that I did something silly.  I don't have
> an ANTLR toolchain handy so I can't try it, but I'm pretty sure that's
> what is wrong.
>
> I believe one step forward is to add a lex rule:
>
> DOT: '.';
>
> Then replace your inline '.' in sep and expr with that token.  I'll be
> that moves you forward (not sure it will solve it).
>
> Finally, remember, in ANTLR the lexer logically (even if it doesn't
> actually) runs start to finish and generates all of the tokens.  Then
> the stream of tokens are handed the parsers.  There is no backtracking
> where the parser gives up, and the lexer tries other alternatives.
>
> Kirby
>
>
> >
> > Am 28.11.2011 15:18, schrieb franck102:
> >> Christian wrote
> >>> Hi,
> >>>
> >>> what is the error/exception message?
> >>>
> >>> Regards,
> >>> Christian
> >>>
> >>>
> >> MissingTokenException at the second '=', after parsing a=b.c as an
> >> expression. The tail recursion on expr is causing it it seems, but
> >> that's a real issue for me... here is a slightly modified version
> >> with the recursion made explicit that has the same problem:
> >>
> >> program
> >> ? ? ? ? : statement* EOF
> >> ? ? ? ? ;
> >>
> >> statement
> >> ? ? ? ? : ID '=' expr
> >> ? ? ? ? | sep
> >> ? ? ? ? ;
> >>
> >> expr : ID ( '.' expr )*;
> >>
> >> sep : ';' | '.';
> >>
> >> --
> >> View this message in context:
> >> http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-
> tp7033
> >> 712p7038881.html Sent from the ANTLR mailing list archive at
> >> Nabble.com.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From franck102 at yahoo.com  Mon Nov 28 10:11:43 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 10:11:43 -0800 (PST)
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <088da8adc59713a4fb00da3bb381c6bf@mail.gmail.com>
References: <1322310069711-7033712.post@n2.nabble.com>
	<4ED3935F.5080101@gmx.de>
	<1322489884286-7038881.post@n2.nabble.com>
	<088da8adc59713a4fb00da3bb381c6bf@mail.gmail.com>
Message-ID: <1322503903364-7039721.post@n2.nabble.com>

None of those suggestion will help with the actual grammar unfortunately. It
is indeed ambiguous, that is the warning I get if I turn backtracking off,
but I can't refactor the rules (or the actual, large grammar) w/o ending
with a completely meaningless AST.

I still don't understand why antlr won't backtrack there, I suspect this is
a limitation of the implementation strategy that uses predicates; or maybe I
am expecting too much and the kind of backtracking required here would be
too hard or expensive to implement?
Basically I have an ambiguous but valid non left-recursive grammar, and I
don't see why antlr after failing on one branch doesn't backtrack to try the
other branch of the ambiguity.

I do use the debugger, and it shows that the (automatically generated)
syntactic predicate for expr passed ( DOT ^( EXPR "c" ) ) and that b.c was
accepted as an expr, and the next node in the parse tree is the
MissingTokenExpression at = (the parser expects a separator at that point).

Replacing the '.' literal by an explicit DOT token doesn't make any
difference.

--
View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7039721.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Mon Nov 28 10:26:58 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 10:26:58 -0800 (PST)
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <4DFB086B-9402-413B-A369-8387CDAFFD2C@cs.usfca.edu>
References: <1322310069711-7033712.post@n2.nabble.com>
	<4DFB086B-9402-413B-A369-8387CDAFFD2C@cs.usfca.edu>
Message-ID: <1322504818574-7039813.post@n2.nabble.com>

This is a 20 years old language with zillions of existing lines of code. If I
can get the parser to work even with an awful lot of backtracking then I can
use it to write a translator that cleans up those kind of stupid idioms...

I think your answer gave me the clue I needed though, apparently
backtracking works between alternatives but consuming or not consuming one
instance of a ( )* construct is not considered an alternative. If I replace
the * construct with tail recursion in my example things work fine - I need
to see if that is something I can do in the real grammar.

So my grammar works fine in this form (rest unchanged):

program
        : statement* EOF
        ;
       
statement
        : ID '=' expr
        | sep
        ;

expr	: ID suffix;
	
suffix	: DOT expr
        | /* nothing */
        ;

--
View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7039813.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Mon Nov 28 10:31:19 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 10:31:19 -0800 (PST)
Subject: [antlr-interest] Tree building limitation in tree grammars?
In-Reply-To: <4ED3BD46.6050509@acm.org>
References: <1322485693269-7038639.post@n2.nabble.com>
	<4ED3BD46.6050509@acm.org>
Message-ID: <1322505079880-7039835.post@n2.nabble.com>

Thanks John,

I had tried the first one (using a label assigned in each branch of the
alternative), I just posted it wrong.
Your 2nd & 3rd suggestions should work I expect, thanks!
Too bad the most natural one ^( ( AND | OR ) ... w/o rewrite doesn't work...

--
View this message in context: http://antlr.1301665.n2.nabble.com/Tree-building-limitation-in-tree-grammars-tp7038639p7039835.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jbb at acm.org  Mon Nov 28 10:40:55 2011
From: jbb at acm.org (John B. Brodie)
Date: Mon, 28 Nov 2011 13:40:55 -0500
Subject: [antlr-interest] Changing the root of a tree in a tree parser
In-Reply-To: <1322476326627-7038239.post@n2.nabble.com>
References: <1322476326627-7038239.post@n2.nabble.com>
Message-ID: <4ED3D5B7.6060602@acm.org>

On 11/28/2011 05:32 AM, franck102 wrote:
> I am trying to do something that seems pretty simple, which is adjusting the
> root token of a tree in my tree parser.
> Basically my parser always sees a=b as a comparison and generates ^( EQUAL a
> b) as an AST, and in the tree parser I want to adjust that to ^( ASSIGN a b)
> if I am at the statement level:
> 
> statement
>     : ifStatement
>     | ...
>     | expressionStatement { if ($expressionStatement.tree.getType() ==
> EQUALS) { <set tree type to ASSIGN> }
> 
> If I try to introduce an assignmentStatement (just in the tree parser) I get
> mutually recursive rule, so that isn't an option...
> 
> Any suggestion?
> 
> 
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/Changing-the-root-of-a-tree-in-a-tree-parser-tp7038239p7038239.html
> Sent from the ANTLR mailing list archive at Nabble.com.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

pass a flag as a parameter to expressionStatement that tells it whether
or not to rewrite itself as an assignment.


From franck102 at yahoo.com  Mon Nov 28 11:37:32 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 11:37:32 -0800 (PST)
Subject: [antlr-interest] Changing the root of a tree in a tree parser
In-Reply-To: <4ED3D5B7.6060602@acm.org>
References: <1322476326627-7038239.post@n2.nabble.com>
	<4ED3D5B7.6060602@acm.org>
Message-ID: <1322509052944-7040090.post@n2.nabble.com>


John B. Brodie wrote
> 
> pass a flag as a parameter to expressionStatement that tells it whether
> or not to rewrite itself as an assignment.
> 

Great suggestion, thanks!

Franck

--
View this message in context: http://antlr.1301665.n2.nabble.com/Changing-the-root-of-a-tree-in-a-tree-parser-tp7038239p7040090.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Mon Nov 28 11:59:27 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 11:59:27 -0800 (PST)
Subject: [antlr-interest] Changing the root of a tree in a tree parser
In-Reply-To: <1322509052944-7040090.post@n2.nabble.com>
References: <1322476326627-7038239.post@n2.nabble.com>
	<4ED3D5B7.6060602@acm.org>
	<1322509052944-7040090.post@n2.nabble.com>
Message-ID: <1322510367416-7040178.post@n2.nabble.com>

Well... almost great :) The rule that generates the EQUAL to be adjusted in
really deep in the hierarchy, and whether the rule should use EQUALS or
ASSIGN depends on rules on the call path (like addExpression below) so that
would be a lot of parameter passing & setting.

Even with a scope, I would have to properly turn off the flag anytime an
intermediate rule inserts a level in the tree, maybe something like
addExpression : compareExpression ( { $rewriteEqual = false; } '+'
compareExpression ) 
... which is a bit error prone.

Basically the rule that generates EQUAL should instead generate ASSIGN iff
its parent node root is of type STATEMENT... and that information is only
readily available after the AST has been built.

Franck

--
View this message in context: http://antlr.1301665.n2.nabble.com/Changing-the-root-of-a-tree-in-a-tree-parser-tp7038239p7040178.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Mon Nov 28 14:15:53 2011
From: franck102 at yahoo.com (franck102)
Date: Mon, 28 Nov 2011 14:15:53 -0800 (PST)
Subject: [antlr-interest] Changing the root of a tree in a tree parser
In-Reply-To: <1322476326627-7038239.post@n2.nabble.com>
References: <1322476326627-7038239.post@n2.nabble.com>
Message-ID: <1322518553407-7040599.post@n2.nabble.com>

And a similar question: I am trying to "collapse" the children that have the
same type as the parent, e.g. transform ^( DOT foo ^( DOT bar qwe ) ) into
^( DOT foo bar qwe ).

I wrote the method below, which seems to kind of work but generates the
warnings below.
Is there some subtle issue with calling 
          adaptor.addChild(newTree, adaptor.getChild(oldTree, i));

Franck

---------------------------------------------------
[org.antlr.works.debugger.tree.DBASTModel - event 24735] Warning: [addChild]
Child node 2569 not found, ignoring
No token info for token index 1454
[org.antlr.works.debugger.tree.DBASTModel - event 25470] Warning: [addChild]
Root node 2652 not found, ignoring.
----------------------------------------------------
private CommonTree collapse(CommonTree tree)
    	{
    			boolean needCollapse = false;
    			int count = adaptor.getChildCount(tree);
    			int treeType = adaptor.getType(tree);
    			for (int i = 0; ! needCollapse && i < count; i++) {
    				Object child = adaptor.getChild(tree, i);
    				if (child instanceof CommonTree && adaptor.getType(child) ==
treeType) {
    					needCollapse = true;
    				}
    			}
    			if ( ! needCollapse ) {
    				return tree;
    			}
    			Object newTree = adaptor.create(adaptor.getToken(tree));
    			for (int i = 0; i < count; i++) {
    				Object child = adaptor.getChild(tree, i);
    				if (child instanceof CommonTree && adaptor.getType(child) ==
treeType) {
    					for (int j = 0; j < adaptor.getChildCount(child); j++) {
    						adaptor.addChild(newTree, adaptor.getChild(child, j));
    					}
    				}
    				else {
    					adaptor.addChild(newTree, child);
    				}
    			}
    			return (CommonTree)newTree;
        	}

--
View this message in context: http://antlr.1301665.n2.nabble.com/Changing-the-root-of-a-tree-in-a-tree-parser-tp7038239p7040599.html
Sent from the ANTLR mailing list archive at Nabble.com.

From list at toolazydogs.com  Tue Nov 29 05:26:07 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 29 Nov 2011 05:26:07 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
Message-ID: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>

I'm running ANTLR on my tree walker ANTLR file and get this error message and don't understand what I'm doing wrong:

error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
java.util.Vector.set(Vector.java:712)
org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
org.antlr.analysis.DFA.createStateTables(DFA.java:439)
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:645)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1441)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:493)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
java.lang.reflect.Method.invoke(Method.java:597)
org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)


/**
* Copyright 2010-2011 (C) Alan D. Cabrera
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
tree grammar LuaWalker;
options
{
   tokenVocab=Lua;
   ASTLabelType=CommonTree;
   filter = true;
}
@header
{
package com.toolazydogs.lua4j;
import org.objectweb.asm.*;
import com.toolazydogs.lua4j.compiler.*;
}
@members
{
   void print(String s) { System.out.print(s); }
   void println(String s) { System.out.println(s); }
}

chunk
   : ^(CHUNK c=.)
   ;

stat
   : ^(ASSIGN varlist explist)
   | functioncall
   | chunk
   | ^(WHILE exp chunk)
   | ^(REPEAT chunk exp)
   | ^(IF exp chunk)
   | ^(IF exp chunk chunk)
   | ^(IF exp chunk elseif+ chunk?)
   | ^(FOR NAME exp exp exp chunk)
   | ^(FOR NAME exp exp chunk)
   | ^(FORIN namelist explist chunk)
   | ^(FUNCTION funcname funcbody)
   | ^(LOCAL namelist explist?)
   ;

elseif
   : ^(ELSEIF exp chunk)
   ;

laststat
   : RETURN
   | ^(RETURN explist)
   | BREAK
   ;

funcname
   : ^(FNAMETHIS NAME NAME+)
   | ^(FNAME NAME+)
   ;

varlist
   : ^(VARLIST var+)
   ;

var
   : ^(INDEX varPrefix exp)
   | ^(VAR NAME)
   ;

varPrefix
   : ^(FUNCALL vp=. nameAndArgs)
   | ^(SINGLE exp)
   | ^(VAR NAME)
   ;

prefixexp
   : ^(FUNCALL p=. nameAndArgs)
   | varOrExp
   ;

functioncall
   : ^(FUNCALL p=. nameAndArgs)
   ;

varOrExp
   : var
   | ^(SINGLE exp)
   ;

nameAndArgs
   : ^(ARGS args)
   | ^(ARGSWITHSELF NAME args)
   ;

args
   : EXPLIST
   | explist
   | tableconstructor
   | string
   ;

namelist
   : ^(NAMELIST NAME+)
   ;

explist
   : ^(EXPLIST exp+)
   ;

exp
   : ^('or' or or+)
   | or
   ;

or
   : ^('and' and and+)
   | and
   ;

and
   : ^('<' compare compare)
   | ^('<=' compare compare)
   | ^('>' compare compare)
   | ^('>=' compare compare)
   | ^('==' compare compare)
   | ^('~=' compare compare)
   | compare
   ;

compare
   : ^('..' concatenation concatenation+)
   | concatenation
   ;

concatenation
   : ^('+' add_sub add_sub)
   | ^('-' add_sub add_sub)
   | add_sub
   ;

add_sub
   : ^('*' b b)
   | ^('/' b b)
   | ^('%' b b)
   | b
   ;

b
   : ^(NEGATE unary)
   | unary
   ;

unary
   : ^('^' atom atom)
   | atom
   ;

atom    : 'nil'
       | 'false'
       | 'true'
       | number
       | string
       | ^(FUNCBODY parlist? chunk)
       | prefixexp
       | tableconstructor
       | '...'
    ;

funcbody
   : ^(FUNCBODY parlist? chunk)
   ;

parlist
   : ^(PARAMETERS namelist)
   | ^(PARAMETERS namelist '...')
   | ^(PARAMETERS '...')
   ;

tableconstructor
   : ^(TBLCTOR field+)
   | TBLCTOR
   ;

field
   : ^(TBLFIELD exp exp)
   | ^(TBLFIELD NAME exp)
   | ^(TBLFIELD exp)
   ;

number
   : INTEGER
   | FLOAT
   | EXPONENT
   | HEX
   ;

string
   : ^(STRING s=.)
   ;



From list at toolazydogs.com  Tue Nov 29 06:35:33 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 29 Nov 2011 06:35:33 -0800
Subject: [antlr-interest] Is there an easier way?
Message-ID: <A1863C48-0159-4893-9E3D-11714E7CD7EB@toolazydogs.com>

I'm using a tree walker that does topdown/bottom up tree pattern matching to generate code from my tree.  I'm having problems wrapping with code expressions that depend on the immediate parent.  For example, I have a nodes

^(VARLIST .+)
^(EXPLIST .+)

where EXPLIST  and VARLIST contains a list of expressions.  Some examples are:

(VARLIST (INDEX (FUNCALL (VAR g) (ARGS (VAR x) (VAR y) (VAR z))) (VAR i)) (VAR i) (INDEX (VAR a) (STRING b))) 
(EXPLIST (VAR i) 2 (FUNCALL (VAR f) (ARGS (VAR x) (VAR y) (VAR z)))

I want to wrap expressions in VARLIST differently than how they would get wrapped in EXPLIST.  I end up with something like:

downVarListExp
@init {CommonTree t = (CommonTree)input.LT(1);}
    : {t.getParent().getType() == VARLIST}? VAR {
        // generate code
    }
    ;

upVarListExp
@init {CommonTree t = (CommonTree)input.LT(1);}
    : {t.getParent().getType() == VARLIST}? VAR {
        // generate code
    }
    ;

The reason that I don't use hasAncestor() is that expressions can be nested and I don't want these to be executed inside of an expression; I'm just trying to individually wrap expressions at the "outermost" level.  Is there an easier/cleaner way to wrap the expressions that are nested in ^(VARLIST .+) and ^(EXPLIST .+) using topdown/bottom up tree walking pattern matching?


Regards,
Alan



From parrt at cs.usfca.edu  Tue Nov 29 11:37:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Nov 2011 11:37:28 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
Message-ID: <2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>

interesting. i get:

/tmp $ a3.4 LuaWalker.g 
error(10):  internal error: LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
java.util.Vector.set(Vector.java:712)
org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
org.antlr.analysis.DFA.createStateTables(DFA.java:439)
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:645)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1792)
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:1413)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:999)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:910)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:490)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)

but had to take out import token vocab. can you send me that?
Ter
On Nov 29, 2011, at 5:26 AM, Alan D. Cabrera wrote:

> I'm running ANTLR on my tree walker ANTLR file and get this error message and don't understand what I'm doing wrong:
> 
> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:645)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1441)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:493)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
> org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
> org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
> org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
> org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
> org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
> org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> java.lang.reflect.Method.invoke(Method.java:597)
> org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
> org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
> org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
> org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
> 
> 
> /**
> * Copyright 2010-2011 (C) Alan D. Cabrera
> *
> * Licensed under the Apache License, Version 2.0 (the "License");
> * you may not use this file except in compliance with the License.
> * You may obtain a copy of the License at
> *
> *    http://www.apache.org/licenses/LICENSE-2.0
> *
> * Unless required by applicable law or agreed to in writing, software
> * distributed under the License is distributed on an "AS IS" BASIS,
> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
> * See the License for the specific language governing permissions and
> * limitations under the License.
> */
> tree grammar LuaWalker;
> options
> {
>   tokenVocab=Lua;
>   ASTLabelType=CommonTree;
>   filter = true;
> }
> @header
> {
> package com.toolazydogs.lua4j;
> import org.objectweb.asm.*;
> import com.toolazydogs.lua4j.compiler.*;
> }
> @members
> {
>   void print(String s) { System.out.print(s); }
>   void println(String s) { System.out.println(s); }
> }
> 
> chunk
>   : ^(CHUNK c=.)
>   ;
> 
> stat
>   : ^(ASSIGN varlist explist)
>   | functioncall
>   | chunk
>   | ^(WHILE exp chunk)
>   | ^(REPEAT chunk exp)
>   | ^(IF exp chunk)
>   | ^(IF exp chunk chunk)
>   | ^(IF exp chunk elseif+ chunk?)
>   | ^(FOR NAME exp exp exp chunk)
>   | ^(FOR NAME exp exp chunk)
>   | ^(FORIN namelist explist chunk)
>   | ^(FUNCTION funcname funcbody)
>   | ^(LOCAL namelist explist?)
>   ;
> 
> elseif
>   : ^(ELSEIF exp chunk)
>   ;
> 
> laststat
>   : RETURN
>   | ^(RETURN explist)
>   | BREAK
>   ;
> 
> funcname
>   : ^(FNAMETHIS NAME NAME+)
>   | ^(FNAME NAME+)
>   ;
> 
> varlist
>   : ^(VARLIST var+)
>   ;
> 
> var
>   : ^(INDEX varPrefix exp)
>   | ^(VAR NAME)
>   ;
> 
> varPrefix
>   : ^(FUNCALL vp=. nameAndArgs)
>   | ^(SINGLE exp)
>   | ^(VAR NAME)
>   ;
> 
> prefixexp
>   : ^(FUNCALL p=. nameAndArgs)
>   | varOrExp
>   ;
> 
> functioncall
>   : ^(FUNCALL p=. nameAndArgs)
>   ;
> 
> varOrExp
>   : var
>   | ^(SINGLE exp)
>   ;
> 
> nameAndArgs
>   : ^(ARGS args)
>   | ^(ARGSWITHSELF NAME args)
>   ;
> 
> args
>   : EXPLIST
>   | explist
>   | tableconstructor
>   | string
>   ;
> 
> namelist
>   : ^(NAMELIST NAME+)
>   ;
> 
> explist
>   : ^(EXPLIST exp+)
>   ;
> 
> exp
>   : ^('or' or or+)
>   | or
>   ;
> 
> or
>   : ^('and' and and+)
>   | and
>   ;
> 
> and
>   : ^('<' compare compare)
>   | ^('<=' compare compare)
>   | ^('>' compare compare)
>   | ^('>=' compare compare)
>   | ^('==' compare compare)
>   | ^('~=' compare compare)
>   | compare
>   ;
> 
> compare
>   : ^('..' concatenation concatenation+)
>   | concatenation
>   ;
> 
> concatenation
>   : ^('+' add_sub add_sub)
>   | ^('-' add_sub add_sub)
>   | add_sub
>   ;
> 
> add_sub
>   : ^('*' b b)
>   | ^('/' b b)
>   | ^('%' b b)
>   | b
>   ;
> 
> b
>   : ^(NEGATE unary)
>   | unary
>   ;
> 
> unary
>   : ^('^' atom atom)
>   | atom
>   ;
> 
> atom    : 'nil'
>       | 'false'
>       | 'true'
>       | number
>       | string
>       | ^(FUNCBODY parlist? chunk)
>       | prefixexp
>       | tableconstructor
>       | '...'
>    ;
> 
> funcbody
>   : ^(FUNCBODY parlist? chunk)
>   ;
> 
> parlist
>   : ^(PARAMETERS namelist)
>   | ^(PARAMETERS namelist '...')
>   | ^(PARAMETERS '...')
>   ;
> 
> tableconstructor
>   : ^(TBLCTOR field+)
>   | TBLCTOR
>   ;
> 
> field
>   : ^(TBLFIELD exp exp)
>   | ^(TBLFIELD NAME exp)
>   | ^(TBLFIELD exp)
>   ;
> 
> number
>   : INTEGER
>   | FLOAT
>   | EXPONENT
>   | HEX
>   ;
> 
> string
>   : ^(STRING s=.)
>   ;
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From list at toolazydogs.com  Tue Nov 29 12:12:21 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 29 Nov 2011 12:12:21 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
Message-ID: <6F9E57B1-9DB2-4DDA-A2E5-8319F8FC686F@toolazydogs.com>

Lua.g:

/**
 * Copyright 2009-2011 (C) Alan D. Cabrera
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
grammar Lua;
options
{
    output=AST;
    backtrack=true;
}

tokens {
    ARGS;
    ARGSWITHSELF;
    ASSIGN;
    BLOCK;
    BREAK;
    CHUNK;
    ELSEIF;
    EXPLIST;
    DEREF;
    FOR;
    FORIN;
    FNAME;
    FNAMETHIS;
    FUNCALL;
    FUNCTION;
    FUNCBODY;
    IF;
    LOCAL;
    NAMELIST;
    NEGATE;
    NUMBER;
    PARAMETERS;
    PATH;
    REPEAT;
    RETURN;
    SINGLE;
    STRING;
    TBLCTOR;
    TBLFIELD;
    VAR;
    VARLIST;
    WHILE;
}

@header
{
package com.toolazydogs.lua4j;
}
@lexer::header
{
/**
 * Copyright 2009-2011 (C) Alan D. Cabrera
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.toolazydogs.lua4j;

import java.io.UnsupportedEncodingException;
}
@lexer::members
{
protected boolean isLongBracketOpen(int length)
{
    if (input.LA(1) != ']') return true;

    for (int i = 0; i != length; ++i)
    {
        if (input.LA(i + 2) != '=') return true;
    }

    return (input.LA(length + 2) != ']');
}

protected void matchLongBracketClose(int length) throws MismatchedTokenException
{
    StringBuilder builder = new StringBuilder();

    builder.append(']');
    for (int i = 0; i != length; ++i) builder.append('=');
    builder.append(']');

    match(builder.toString());
}

protected String toAscii(String... d) throws RecognitionException
{
    StringBuilder sb = new StringBuilder(d[0]);
    for (int i=1; i<d.length; i++) sb.append(d[i]);
        
    byte[] b = new byte[1];

    b[0] = (byte)Integer.parseInt(sb.toString());

    try
    {
        return new String(b, "ASCII");
    }
    catch (UnsupportedEncodingException e)
    {
        throw new RecognitionException();
    }
}
}

chunk
    : (stat ';'?)* (laststat ';'?)? -> ^(CHUNK stat* laststat?)
    ;

block
    : chunk
    ;

stat
    : varlist '=' explist -> ^(ASSIGN varlist explist)
    | functioncall
    | 'do' block 'end' -> block
    | 'while' exp 'do' block 'end' -> ^(WHILE exp block)
    | lc='repeat' block 'until' exp -> ^(REPEAT[$lc,"REPEAT"] block exp)
    | 'if' exp 'then' block 'end' -> ^(IF exp block)
    | 'if' exp 'then' ifblock=block 'else' elseblock=block 'end' -> ^(IF exp $ifblock $elseblock)
    | 'if' exp 'then' ifblock=block elseif+ 'end' -> ^(IF exp $ifblock elseif+)
    | 'if' exp 'then' ifblock=block elseif+ 'else' elseblock=block 'end' -> ^(IF exp $ifblock elseif+ $elseblock)
    | 'for' NAME '=' exp1=exp ',' exp2=exp ',' exp3=exp 'do' block 'end' -> ^(FOR NAME $exp1 $exp2 $exp3 block)
    | 'for' NAME '=' exp1=exp ',' exp2=exp 'do' block 'end' -> ^(FOR NAME $exp1 $exp2 block)
    | 'for' namelist 'in' explist 'do' block 'end' -> ^(FORIN namelist explist block)
    | 'function' funcname funcbody -> ^(FUNCTION funcname funcbody)
    | 'local' namelist ('=' explist)? -> ^(LOCAL namelist explist?)
    | 'local' 'function' NAME funcbody -> ^(LOCAL  ^(NAMELIST NAME) ^(EXPLIST funcbody))
    ;

elseif
    : ('elseif' exp 'then' block)+ -> ^(ELSEIF exp block)+
    ;

laststat
    : 'return' -> ^(RETURN)
    | 'return' explist -> ^(RETURN explist)
    | 'break' -> BREAK
    ;

funcname
@init{boolean hasThis = false;}
    : f=NAME ('.' p+=NAME)* (':' t=NAME {hasThis = true;})?
        -> {hasThis}? ^(FNAMETHIS $f $p* $t)
        -> ^(FNAME $f $p*)
    ;

varlist
    : var (',' var)* -> ^(VARLIST var+)
    ;

var
    : (varPrefix varDeref -> ^(DEREF varPrefix varDeref)) (vd=varDeref -> ^(DEREF $var $vd))*
    | NAME -> ^(VAR NAME)
    ;

varDeref
    : '[' exp ']' -> exp
    | '.' NAME -> ^(STRING NAME)
    ;

varPrefix
    : (NAME nameAndArgs-> ^(FUNCALL NAME nameAndArgs)) (naa=nameAndArgs -> ^(FUNCALL $varPrefix $naa))+
    | NAME nameAndArgs-> ^(FUNCALL NAME nameAndArgs)
    | '(' exp ')' -> ^(SINGLE exp)
    | NAME -> ^(VAR NAME)
    ;
    
prefixexp
    : (varOrExp nameAndArgs -> ^(FUNCALL varOrExp nameAndArgs)) (naa=nameAndArgs ->  ^(FUNCALL $prefixexp $naa))*
    | varOrExp
    ;

functioncall
    : (varOrExp nameAndArgs -> ^(FUNCALL varOrExp nameAndArgs)) (naa=nameAndArgs ->  ^(FUNCALL $functioncall $naa))*
    ;

varOrExp
    : var
    | '(' exp ')' -> ^(SINGLE exp)
    ;

nameAndArgs
    : args -> ^(ARGS args)
    | ':' NAME args -> ^(ARGSWITHSELF NAME args)
    ;

args
    : '(' ')' -> ^(EXPLIST)
    | '(' explist ')' -> explist
    | tableconstructor
    | string
    ;

namelist
    : NAME (',' NAME)* -> ^(NAMELIST NAME+)
    ;

explist
    : exp (',' exp)* -> ^(EXPLIST exp+)
    ;

exp
    : or ('or' or)+ -> ^('or' or+)
    | or
    ;

or
    : and ('and' and)+ -> ^('and' and+)
    | and
    ;

and
    : compare (compare_op^ compare)*
    ;

compare
    : concatenation ('..' concatenation)+ -> ^('..' concatenation+)
    | concatenation
    ;

concatenation
    : add_sub (add_sub_op^ add_sub)*
    ;

add_sub
    : b (b_op^ b)*
    ;

b
    : unary_op^ unary
    | unary
    ;

unary : atom ('^'^ atom)* ;

atom 	: 'nil'
        | 'false'
        | 'true'
        | number
        | string
        | function
        | prefixexp
        | tableconstructor
        | '...'
	;

unary_op : 'not' | '#' | '-' -> NEGATE ;

b_op : '*' | '/' | '%' ;

compare_op : '<' | '<=' | '>' | '>=' | '==' | '~=' ;

add_sub_op : '+' | '-' ;

function
    : 'function' funcbody -> funcbody
    ;

funcbody
    : '(' parlist? ')' block 'end' -> ^(FUNCBODY parlist? block)
	;

parlist
    : namelist -> ^(PARAMETERS namelist)
    | namelist ',' '...' -> ^(PARAMETERS namelist '...')
    | '...' -> ^(PARAMETERS '...')
    ;

tableconstructor
    : '{' fieldlist? '}' -> ^(TBLCTOR fieldlist?)
    ;

fieldlist
    : field (fieldsep! field)* fieldsep!?
    ;

field
    : '[' exp ']' '=' exp -> ^(TBLFIELD exp exp)
    | NAME '=' exp -> ^(TBLFIELD NAME exp)
    | exp -> ^(TBLFIELD exp)
    ;

fieldsep
    : ','
    | ';'
    ;

NAME
	: ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*
	;

number
    : INTEGER<IntNode>
    | FLOAT<FloatNode>
    | EXPONENT<FloatNode>
    | HEX<IntNode>
    ;

INTEGER
    : DIGIT+
    ;

FLOAT
    : DIGIT+ '.' DIGIT+
    ;

EXPONENT
    : (INTEGER | FLOAT) ('e' | 'E') '-'? INTEGER
    ;

HEX
    : '0x' ('0'..'9' | 'a'..'f')+
    ;

fragment
DIGIT : ('0'..'9') ;

string
    : s=NORMAL_STRING -> ^(STRING $s)
    | s=CHAR_STRING -> ^(STRING $s)
    | s=LONG_STRING -> ^(STRING $s)
    ;

NORMAL_STRING         
@init{StringBuilder sb = new StringBuilder();}
    :   
        '"' 
        ( escaped=ESCAPE_SEQUENCE { sb.append(getText()); } | 
          normal=~('"' | '\\')    { sb.appendCodePoint(normal); } )* 
        '"'     
        { setText(sb.toString()); }
    ;

CHAR_STRING         
@init{ StringBuilder sb = new StringBuilder(); }
    :   
        '\'' 
        ( escaped=ESCAPE_SEQUENCE { sb.append(getText()); } | 
             normal=~('\'' | '\\')    { sb.appendCodePoint(normal); } )* 
        '\''     
        { setText(sb.toString()); }
    ;

LONG_STRING
    : LONG_BRACKET
    ;

fragment
ESCAPE_SEQUENCE
    : '\\' 
    	( 'a'  { setText("\0007"); }
    	| 'b'  { setText("\b"); }
    	| 'f'  { setText("\f"); }
    	| 'n'  { setText("\n"); }
    	| 'r'  { setText("\r"); }
    	| 't'  { setText("\t"); }
    	| 'v'  { setText("\013"); }
    	| '"'  { setText("\""); }
    	| '\'' { setText("\'"); }
    	| '\\' { setText("\\"); }
    	)
    | ASCII_ESCAPE
    ;

fragment
ASCII_ESCAPE
    : '\\' d1=DIGIT d2=DIGIT d3=DIGIT { setText(toAscii(d1.getText(), d2.getText(), d3.getText())); }
    | '\\' d1=DIGIT d2=DIGIT { setText(toAscii(d1.getText(), d2.getText())); }
    | '\\' d1=DIGIT { setText(toAscii(d1.getText())); }
    ;

LONG_COMMENT
    : '--' LONG_BRACKET { skip(); }
    ;

fragment
LONG_BRACKET
@init { int n = 0; }
    : ('['('=' {++n;})*'[') ({isLongBracketOpen(n)}? => .)* 
    { 
        matchLongBracketClose(n);
        String text = getText().substring(n+2, getText().length()-(n+2));
        if (text.charAt(0) == '\n') text = text.substring(1, text.length());
        setText(text);
    }
    ;

LINE_COMMENT
    : '--' ~('\n' | '\r')* '\r'? '\n' { skip(); }
    ;

WS :  (' ' | '\t' | '\u000C') { skip(); } ;

NEWLINE : ('\r')? '\n' { skip(); } ;


From franck102 at yahoo.com  Tue Nov 29 12:55:44 2011
From: franck102 at yahoo.com (franck102)
Date: Tue, 29 Nov 2011 12:55:44 -0800 (PST)
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <1322310069711-7033712.post@n2.nabble.com>
References: <1322310069711-7033712.post@n2.nabble.com>
Message-ID: <1322600144110-7044541.post@n2.nabble.com>

I could really use any ideas on this, what I am beginning to understand is
that backtracking can give up on an alternative to try the next alternative
in the same rule, but if a rule at the bottom of the call chain picks an
alternative, and the invoking rule at the top subsequently can't find a
continuation, backtracking won't be able to question the earlier choice of
the bottom-most rule.

Refactoring would basically imply rewriting the entire grammar and doing two
complete passes to end up with a meaningful AST, I am hoping this is a
common problem and maybe there are patterns that can help (e.g. using
context, scopes, ...)?

Here is a toy grammar that exhibits the problem, it is unable to parse input
such as a=b. c=d;

I would like the parser, after matching a=b.c as an expr, to realize that
"=d;" can't be matched and to go back to match a=b instead...

Any suggestion greatly appreciated!
================================
grammar Test;

options {
        output=AST;
        backtrack=true;
}

program
        : statement* EOF
        ;
       
statement
        : objectExpr '=' objectExpr
        | sep
        ;
        
varDeclaration
	:	ident 'is' 'a' ident;
	
objectExpr
	:	indexExpr
	|	objectExpr DOT indexExpr
	;
	
indexExpr
	:	ident ( '[' objectExpr ']' | '(' objectExpr ')' )*
	;
	
sep : ';' | DOT;

ident	:	ID | UNIT;

// LEXER
// ==========================================

UNIT	:	'second' 's'?
	|	'minute' 's'?
	;
	
DOT	:	'.';

ID
        : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
        ;

       
WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ; 

--
View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7044541.html
Sent from the ANTLR mailing list archive at Nabble.com.

From franck102 at yahoo.com  Tue Nov 29 14:00:30 2011
From: franck102 at yahoo.com (franck102)
Date: Tue, 29 Nov 2011 14:00:30 -0800 (PST)
Subject: [antlr-interest] Confused about backtracking
In-Reply-To: <1322600144110-7044541.post@n2.nabble.com>
References: <1322310069711-7033712.post@n2.nabble.com>
	<1322600144110-7044541.post@n2.nabble.com>
Message-ID: <1322604030955-7044771.post@n2.nabble.com>

Ok, I am really new to parsing technology but isn't there room for
improvement here? The grammar below successfully parses "a=b. c=d;", but it
fails if the first two alternatives of objectExpr are swapped. And it also
fails if the rule is written naturally as objectExpr : indexExpr ( DOT
indexExpr )*.

Those changes look like syntactic details that shouldn't affect the result
of the parse (I do understand that the first alternative is attempted first,
but with backtrack=true one would expect that to have nothing but a
performance impact).
Is it theoretically hard to backtrack across rules? And to consider the
option to grab one instance of a ()* construct as an alternative that can be
backtracked?

Franck

-----------------------------------

grammar Test;

options {
        output=AST;
        backtrack=true;
}

program
        : ( objectExpr '=' objectExpr sep )* EOF
        ;
   
objectExpr
	:	indexExpr
	|	indexExpr DOT indexExpr
	|	indexExpr DOT indexExpr DOT indexExpr
	;
	
indexExpr
	:	ident ( '[' objectExpr ']' | '(' objectExpr ')' )*
	;
	
sep : ';' | DOT;

ident	:	ID | UNIT;

// LEXER
// ==========================================

UNIT	:	'second' 's'?
	|	'minute' 's'?
	;
	
DOT	:	'.';

ID
        : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
        ;

       
WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ; 

--
View this message in context: http://antlr.1301665.n2.nabble.com/Confused-about-backtracking-tp7033712p7044771.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jrk1987 at yahoo.co.in  Tue Nov 29 15:04:53 2011
From: jrk1987 at yahoo.co.in (J.R Karthikeyan)
Date: Wed, 30 Nov 2011 04:34:53 +0530 (IST)
Subject: [antlr-interest] hide particular character in a token?
Message-ID: <1322607893.49415.YahooMailNeo@web94614.mail.in2.yahoo.com>

HI,

?I have a STRING token?definition?as below

STRING:QUOTE (options {greedy=false;} : ('\\' ( 'b' |'t'| '\r\n' | 'n' | 'f' | '\" '| '\'' | '\\' ) | ~('\r' | '\n' |'\\'|'\"')))* QUOTE

;

? Which will parse the string like

"H\
W"?

successfully. The above string has 'H', '\','\r'. '\n' and 'W'.?


But where as in C++

s = "H\
W";

s has the following character'H', ?'\' and 'W'.?

C++ remove the '\r\n' in the above string. I would like to do the same in parser and I wonder how to enable in ANTLR C parser. I am using version Antlrworks-1.4 and antlr v3.2 libraries

Thanks in advance.

From parrt at cs.usfca.edu  Tue Nov 29 15:54:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 29 Nov 2011 15:54:12 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <6F9E57B1-9DB2-4DDA-A2E5-8319F8FC686F@toolazydogs.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
	<6F9E57B1-9DB2-4DDA-A2E5-8319F8FC686F@toolazydogs.com>
Message-ID: <182EDD5D-8EDA-42B7-B3FD-A7FE201E4C98@cs.usfca.edu>

Ok, i see it now too:

/tmp $ a3.4 LuaWalker.g 
error(10):  internal error: LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
java.util.Vector.set(Vector.java:712)
org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)

damn.

Alan: did you modify the grammars in any way? that might give me a clue. added to the list.

http://www.antlr.org/jira/browse/ANTLR-457

 is this something you can workaround for now?

Ter

From list at toolazydogs.com  Tue Nov 29 17:00:57 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 29 Nov 2011 17:00:57 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <182EDD5D-8EDA-42B7-B3FD-A7FE201E4C98@cs.usfca.edu>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
	<6F9E57B1-9DB2-4DDA-A2E5-8319F8FC686F@toolazydogs.com>
	<182EDD5D-8EDA-42B7-B3FD-A7FE201E4C98@cs.usfca.edu>
Message-ID: <FB6F0D71-7A98-4818-96A3-35C912364881@toolazydogs.com>


On Nov 29, 2011, at 3:54 PM, Terence Parr wrote:

> Ok, i see it now too:
> 
> /tmp $ a3.4 LuaWalker.g 
> error(10):  internal error: LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> 
> damn.
> 
> Alan: did you modify the grammars in any way? that might give me a clue. added to the list.
> 
> http://www.antlr.org/jira/browse/ANTLR-457
> 
> is this something you can workaround for now?

I just created this tree walker so I never had a working version.  I did have a topdown/bottom up walker to generate code but it started to become difficult to generate code in certain situations so I decided to give this tree walker a try.

I'll start removing stuff from this tree until if generates and compiles a walker and let you know what I find.


Regards,
Alan


From jason at jasonosgood.com  Tue Nov 29 17:18:20 2011
From: jason at jasonosgood.com (Jason Osgood)
Date: Tue, 29 Nov 2011 17:18:20 -0800
Subject: [antlr-interest] fado's & DebugEventListener
Message-ID: <CAHcxkY-4yu53UmmXmknGqDGKzoZhjYOoRejmy71wP7siB_V=5A@mail.gmail.com>

Hi Terr, Everyone.

Long time.

I'm loving ANTLR 3.2. I'm rejoined this list to share some of my
recent work and ask a question.


My fado project reads (native) SQL and code generates JDBC
PreparedStatement wrappers.

Very small example. Imagine your app uses this query:

  SELECT name FROM People WHERE age = 40;

Your PreparedStatement query text would look like this:

  SELECT name FROM People WHERE age = ?;

And your ResultSet wrapper (sometimes called a DAO) would have methods
getName() and setAgeParam( int age ).

Pretty straight forward.

What fado does is generate those instrumented JDBC wrappers for you.

Pretty awesome.

Over the years, I tried all sorts of strategies. Builders, subclassing
a special Building parser, trying to use ASTs and tree writing, etc.

Long story short, I'm now using my own DebugEventListener to build a
tree of my ParseNodes. Then I use a lightweight XPath-like expression
evaluator to drill down that parse tree to identify just the bits I
care about, ignoring the rest.

For example, the expression to find all the table references looks
kinda like rootNode.findNodes(
"statement/select/from/fromItem/tableRef/tableName" ). Note the
components of the xpath are my grammar's rule names. So this
xpath-like drill down strategy could work for any grammar.

When I find a literal used in a SQL WHERE condition, I replace the
token's text with a JDBC '?' parameter placeholder.

Fado uses normal SQL source code as a template, but without any
template syntax. Inspired by your talks about using ANTLR to do source
code translation.

Any way. I need to find a better hook than DebugEventListener. Its API
changed 3.2->3.4. And ANTLR requires a command line option to generate
parsers with debug events.

Ideas?



Cheers, Jason


PS- Fado is at http://code.google.com/p/fado/, it's not quite ready
for prime time yet, people can look it over.

From list at toolazydogs.com  Tue Nov 29 17:43:01 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 29 Nov 2011 17:43:01 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <182EDD5D-8EDA-42B7-B3FD-A7FE201E4C98@cs.usfca.edu>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
	<6F9E57B1-9DB2-4DDA-A2E5-8319F8FC686F@toolazydogs.com>
	<182EDD5D-8EDA-42B7-B3FD-A7FE201E4C98@cs.usfca.edu>
Message-ID: <286002F6-4168-4403-90F9-07C2BB4B1319@toolazydogs.com>


On Nov 29, 2011, at 3:54 PM, Terence Parr wrote:

> Ok, i see it now too:
> 
> /tmp $ a3.4 LuaWalker.g 
> error(10):  internal error: LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> 
> damn.
> 
> Alan: did you modify the grammars in any way? that might give me a clue. added to the list.
> 
> http://www.antlr.org/jira/browse/ANTLR-457
> 
> is this something you can workaround for now?
> 
> Ter

Ok, I removed some lines, file attached, and it generates fine but now I get errors for the following code

        String chunk = "g()[i], i, a.b = 1, 2, f()\ndo\nlocal line, foo = \"Hello world!\", 2\nprint(line)\nend\nreturn nil";
        System.out.println(chunk);
        LuaParser p = generateParser(chunk);

        RuleReturnScope r = print(p.chunk());

        CommonTree tree = (CommonTree)r.getTree();

        CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
        LuaWalker tp = new LuaWalker(nodes);
        tp.chunk();



g()[i], i, a.b = 1, 2, f()
do
local line, foo = "Hello world!", 2
print(line)
end
return nil
(CHUNK (ASSIGN (VARLIST (INDEX (FUNCALL (VAR g) (ARGS EXPLIST)) (VAR i)) (VAR i) (INDEX (VAR a) (STRING b))) (EXPLIST 1 2 (FUNCALL (VAR f) (ARGS EXPLIST)))) (CHUNK (LOCAL (NAMELIST line foo) (EXPLIST (STRING Hello world!) 2)) (FUNCALL (VAR print) (ARGS (EXPLIST (VAR line))))) (RETURN (EXPLIST nil)))

java.util.NoSuchElementException: can't look backwards more than one token in this stream
	at org.antlr.runtime.misc.LookaheadStream.LB(LookaheadStream.java:159)
	at org.antlr.runtime.misc.LookaheadStream.LT(LookaheadStream.java:120)
	at org.antlr.runtime.RecognitionException.extractInformationFromTreeNodeStream(RecognitionException.java:144)
	at org.antlr.runtime.RecognitionException.<init>(RecognitionException.java:111)
	at org.antlr.runtime.MismatchedTreeNodeException.<init>(MismatchedTreeNodeException.java:42)
	at org.antlr.runtime.tree.TreeParser.recoverFromMismatchedToken(TreeParser.java:135)
	at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
	at com.toolazydogs.lua4j.LuaWalker.chunk(LuaWalker.java:178)
	at com.toolazydogs.lua4j.LuaWalkerTest.odd(LuaWalkerTest.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at com.toolazydogs.aunit.internal.RunBefores.evaluate(RunBefores.java:43)
	at com.toolazydogs.aunit.internal.RunAfters.evaluate(RunAfters.java:47)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:71)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:199)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)




-------------- next part --------------
A non-text attachment was scrubbed...
Name: LuaWalkerGenerates.g
Type: application/octet-stream
Size: 3643 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111129/15e9b2b2/attachment.obj 

From gonzague.reydet at gmail.com  Wed Nov 30 07:25:04 2011
From: gonzague.reydet at gmail.com (Gonzague Reydet)
Date: Wed, 30 Nov 2011 16:25:04 +0100
Subject: [antlr-interest] [C] scope pop function
Message-ID: <CAHHXKCZweYajyHTd63=43nJ8D9aYnqOHGuY_wA5_ZowMWwO15A@mail.gmail.com>

Hi all,

When I try to use a scope in my tree parser, I encounter an error in the
generated code.
The scope pop function is generated as follow (I removed the generated
comments to make it more readable) :

void pmyparser_tree_myScopePop(pmyparser_tree ctx)
{
    if    (SCOPE_TOP(myScope)->free != NULL)
    {
        SCOPE_TOP(myScope)->free(SCOPE_TOP(myScope));
    }

    ctx->pmyparser_tree_myScopeStack_limit--;
    SCOPE_TOP(myScope) =
(pmyparser_tree_myScope_SCOPE)(ctx->pmyparser_tree_myScopeStack->get(ctx->,
ctx->pmyparser_tree_myScopeStack_limit - 1));
}

As you can see in the last function line, the first parameter of the get
function call is missing a field descriptor: "get(ctx->, ...)".
Is there something wrong in my parser to provoque this issue? Is this a
known issue of ANTLR 3.4?

The tree parser generator outputs the following messages that I don't
really understand :

ASTTreeParser.stg 321:25: anonymous template has 0 arg(s) but mapped across
1 value(s)
ASTTreeParser.stg 323:25: anonymous template has 0 arg(s) but mapped across
1 value(s)
context [/outputFile /treeParser /genericParser /_sub50
/globalAttributeScopeFuncMacro] 24:112 no such template: /bscopeStack
context [/outputFile /treeParser /genericParser /_sub50
/globalAttributeScopeFuncMacro] 24:113 passed 1 arg(s) to template null
with 0 declared arg(s)
context [/outputFile /treeParser /genericParser /_sub50
/globalAttributeScopeFuncMacro] 24:113 attribute sname isn't defined
context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 13:5
passed 1 arg(s) to template /_sub16 with 0 declared arg(s)
context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 15:5
passed 1 arg(s) to template /_sub17 with 0 declared arg(s)
...
context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 13:5
passed 1 arg(s) to template /_sub16 with 0 declared arg(s)
context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 15:5
passed 1 arg(s) to template /_sub17 with 0 declared arg(s)


Regards,
Gonzague

From gonzague.reydet at gmail.com  Wed Nov 30 08:41:13 2011
From: gonzague.reydet at gmail.com (Gonzague Reydet)
Date: Wed, 30 Nov 2011 17:41:13 +0100
Subject: [antlr-interest] [C] scope pop function
In-Reply-To: <CAHHXKCZweYajyHTd63=43nJ8D9aYnqOHGuY_wA5_ZowMWwO15A@mail.gmail.com>
References: <CAHHXKCZweYajyHTd63=43nJ8D9aYnqOHGuY_wA5_ZowMWwO15A@mail.gmail.com>
Message-ID: <CAHHXKCZpitvYeydHf5-vvWjSTCPWcDxv8jj7ZBxuDh=PP5Rr_w@mail.gmail.com>

After a more deeper look into the ANTLR codegen template, I suspect this is
a bug in the C.stg file.
There is a typo error in the globalAttributeScopeFuncMacro. The template
call a "bscopeStack" subtemplate instead of "scopeStack" subtemplate.
Do you want me to fill a bug for this issue in jira?

Is it possible to get this bug quickly fixed somehow in a nightly build?
I did not find any nightly build download nor public access to the ANTLR
SCM.

Is there a workaround on this issue appart from modifying generated code
manually?

2011/11/30 Gonzague Reydet <gonzague.reydet at gmail.com>

> Hi all,
>
> When I try to use a scope in my tree parser, I encounter an error in the
> generated code.
> The scope pop function is generated as follow (I removed the generated
> comments to make it more readable) :
>
> void pmyparser_tree_myScopePop(pmyparser_tree ctx)
> {
>     if    (SCOPE_TOP(myScope)->free != NULL)
>     {
>         SCOPE_TOP(myScope)->free(SCOPE_TOP(myScope));
>     }
>
>     ctx->pmyparser_tree_myScopeStack_limit--;
>     SCOPE_TOP(myScope) =
> (pmyparser_tree_myScope_SCOPE)(ctx->pmyparser_tree_myScopeStack->get(ctx->,
> ctx->pmyparser_tree_myScopeStack_limit - 1));
> }
>
> As you can see in the last function line, the first parameter of the get
> function call is missing a field descriptor: "get(ctx->, ...)".
> Is there something wrong in my parser to provoque this issue? Is this a
> known issue of ANTLR 3.4?
>
> The tree parser generator outputs the following messages that I don't
> really understand :
>
> ASTTreeParser.stg 321:25: anonymous template has 0 arg(s) but mapped
> across 1 value(s)
> ASTTreeParser.stg 323:25: anonymous template has 0 arg(s) but mapped
> across 1 value(s)
> context [/outputFile /treeParser /genericParser /_sub50
> /globalAttributeScopeFuncMacro] 24:112 no such template: /bscopeStack
> context [/outputFile /treeParser /genericParser /_sub50
> /globalAttributeScopeFuncMacro] 24:113 passed 1 arg(s) to template null
> with 0 declared arg(s)
> context [/outputFile /treeParser /genericParser /_sub50
> /globalAttributeScopeFuncMacro] 24:113 attribute sname isn't defined
> context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 13:5
> passed 1 arg(s) to template /_sub16 with 0 declared arg(s)
> context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 15:5
> passed 1 arg(s) to template /_sub17 with 0 declared arg(s)
> ...
> context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 13:5
> passed 1 arg(s) to template /_sub16 with 0 declared arg(s)
> context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 15:5
> passed 1 arg(s) to template /_sub17 with 0 declared arg(s)
>
>
> Regards,
> Gonzague
>



-- 
T?l : +33 (0)6 21 02 90 48

From spolitov at gmail.com  Wed Nov 30 08:46:31 2011
From: spolitov at gmail.com (Sergei Politov)
Date: Wed, 30 Nov 2011 20:46:31 +0400
Subject: [antlr-interest] Decision can match input such as "'*'" using
 multiple alternatives: 1, 2
Message-ID: <CAFc_dnobnc6K_zuMCtuRUz4vM0=5LetUcqYFNiYF1ycB5ztkRQ@mail.gmail.com>

Hello,

  I'm new to ANTLR. I tried to port my grammar from Boost.Spirit to ANTLR
and faced the following warning:
Decision can match input such as "'*'" using multiple alternatives: 1, 2

  I made a minimal grammar to reproduce it (also in attach):
======================
grammar X ;

s : e EOF ;
e : t ;
t : f ('*' f)* ;
f : NUM | '-' e ;

NUM : '0'..'9'+ ;
======================

  Really I don't understand the described issue.
  I don't know input that could match in multiple ways.

  Please clarify the situation.

Best Regards,
  Sergey
-------------- next part --------------
A non-text attachment was scrubbed...
Name: X.g
Type: application/octet-stream
Size: 90 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20111130/da943e9f/attachment.obj 

From jbb at acm.org  Wed Nov 30 15:40:31 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 30 Nov 2011 18:40:31 -0500
Subject: [antlr-interest] Decision can match input such as "'*'" using
 multiple alternatives: 1, 2
In-Reply-To: <CAFc_dnobnc6K_zuMCtuRUz4vM0=5LetUcqYFNiYF1ycB5ztkRQ@mail.gmail.com>
References: <CAFc_dnobnc6K_zuMCtuRUz4vM0=5LetUcqYFNiYF1ycB5ztkRQ@mail.gmail.com>
Message-ID: <4ED6BEEF.5070100@acm.org>

Greetings!

On 11/30/2011 11:46 AM, Sergei Politov wrote:
> Hello,
> 
>   I'm new to ANTLR. I tried to port my grammar from Boost.Spirit to ANTLR
> and faced the following warning:
> Decision can match input such as "'*'" using multiple alternatives: 1, 2
> 
>   I made a minimal grammar to reproduce it (also in attach):
> ======================
> grammar X ;
> 
> s : e EOF ;
> e : t ;
> t : f ('*' f)* ;
> f : NUM | '-' e ;
> 
> NUM : '0'..'9'+ ;
> ======================
> 
>   Really I don't understand the described issue.

each use of the Kleene-Closure meta-operator (e.g. the (...)* stuff)
introduces an alternative into the parse. recall that the *
meta-operator is pronounced as "zero or more", so clearly there is a
choice in there somewhere.

your t rule recognizes the same sentential forms as these 2 rules:

t : f t_tail ;
t_tail : /*empty*/ | '*' f t_tail ;

the above are the usual transformation of the * meta-operator into
grammar productions.

and here you can clearly see the alternative.

>   I don't know input that could match in multiple ways.

consider the sentence: -1 * -2 * -3

now where does the "* -3" phrase belong? it is part of the e that begins
with -1? or is it part of the e that begins with -2? your grammar
provides no way to resolve this question and so it is ambiguous.

kinda like should the above be parsed as either
(-1 * -2) * -3
or as
-1 * (-2 * -3)

you might assert that multiplication is associative so it doesn't
matter. but the ANTLR tool doesn't (and in general can't) know that.

> 
>   Please clarify the situation.

To me this is identical to the traditional if-then-else ambiguity, you
might find more information in the usual compiler books about that
topic. (e.g. given "if b1 then if b2 then e1 else e2" where does the
else belong?)

Hope this helps...
   -jbb


From franck102 at yahoo.com  Wed Nov 30 16:00:22 2011
From: franck102 at yahoo.com (franck102)
Date: Wed, 30 Nov 2011 16:00:22 -0800 (PST)
Subject: [antlr-interest] Decision can match input such as "'*'" using
 multiple alternatives: 1, 2
In-Reply-To: <CAFc_dnobnc6K_zuMCtuRUz4vM0=5LetUcqYFNiYF1ycB5ztkRQ@mail.gmail.com>
References: <CAFc_dnobnc6K_zuMCtuRUz4vM0=5LetUcqYFNiYF1ycB5ztkRQ@mail.gmail.com>
Message-ID: <1322697622931-7048937.post@n2.nabble.com>

You could also use antlrworks and look at the syntax diagram for the
ambiguous rule, you will be able to visualize the two possible alternatives.
It takes a bit getting used to but it is really useful.

--
View this message in context: http://antlr.1301665.n2.nabble.com/Decision-can-match-input-such-as-using-multiple-alternatives-1-2-tp7047516p7048937.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jimi at temporal-wave.com  Wed Nov 30 17:12:00 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Dec 2011 09:12:00 +0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
Message-ID: <dea25c23c11eb34265910077f528c52c@mail.gmail.com>

Your tree, parser, lexer are out of sync and the token numbers have
therefore changed. Regen lexer, parser, then walker. If you use Maven then
this will be avoided.

Jim


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
Sent: Tuesday, November 29, 2011 9:26 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Has anyone seen this kind of stack trace?

I'm running ANTLR on my tree walker ANTLR file and get this error message
and don't understand what I'm doing wrong:

error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
java.util.Vector.set(Vector.java:712)
org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
org.antlr.analysis.DFA.createStateTables(DFA.java:439)
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:64
5)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:
1441)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:493
)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuild
PluginManager.java:101)
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
:209)
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
:153)
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
:145)
org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
fecycleModuleBuilder.java:84)
org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
fecycleModuleBuilder.java:59)
org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(L
ifecycleStarter.java:183)
org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStar
ter.java:161)
org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
39)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorIm
pl.java:25)
java.lang.reflect.Method.invoke(Method.java:597)
org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.
java:290)
org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230
)
org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launche
r.java:409)
org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)


/**
* Copyright 2010-2011 (C) Alan D. Cabrera
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
tree grammar LuaWalker;
options
{
   tokenVocab=Lua;
   ASTLabelType=CommonTree;
   filter = true;
}
@header
{
package com.toolazydogs.lua4j;
import org.objectweb.asm.*;
import com.toolazydogs.lua4j.compiler.*; } @members {
   void print(String s) { System.out.print(s); }
   void println(String s) { System.out.println(s); } }

chunk
   : ^(CHUNK c=.)
   ;

stat
   : ^(ASSIGN varlist explist)
   | functioncall
   | chunk
   | ^(WHILE exp chunk)
   | ^(REPEAT chunk exp)
   | ^(IF exp chunk)
   | ^(IF exp chunk chunk)
   | ^(IF exp chunk elseif+ chunk?)
   | ^(FOR NAME exp exp exp chunk)
   | ^(FOR NAME exp exp chunk)
   | ^(FORIN namelist explist chunk)
   | ^(FUNCTION funcname funcbody)
   | ^(LOCAL namelist explist?)
   ;

elseif
   : ^(ELSEIF exp chunk)
   ;

laststat
   : RETURN
   | ^(RETURN explist)
   | BREAK
   ;

funcname
   : ^(FNAMETHIS NAME NAME+)
   | ^(FNAME NAME+)
   ;

varlist
   : ^(VARLIST var+)
   ;

var
   : ^(INDEX varPrefix exp)
   | ^(VAR NAME)
   ;

varPrefix
   : ^(FUNCALL vp=. nameAndArgs)
   | ^(SINGLE exp)
   | ^(VAR NAME)
   ;

prefixexp
   : ^(FUNCALL p=. nameAndArgs)
   | varOrExp
   ;

functioncall
   : ^(FUNCALL p=. nameAndArgs)
   ;

varOrExp
   : var
   | ^(SINGLE exp)
   ;

nameAndArgs
   : ^(ARGS args)
   | ^(ARGSWITHSELF NAME args)
   ;

args
   : EXPLIST
   | explist
   | tableconstructor
   | string
   ;

namelist
   : ^(NAMELIST NAME+)
   ;

explist
   : ^(EXPLIST exp+)
   ;

exp
   : ^('or' or or+)
   | or
   ;

or
   : ^('and' and and+)
   | and
   ;

and
   : ^('<' compare compare)
   | ^('<=' compare compare)
   | ^('>' compare compare)
   | ^('>=' compare compare)
   | ^('==' compare compare)
   | ^('~=' compare compare)
   | compare
   ;

compare
   : ^('..' concatenation concatenation+)
   | concatenation
   ;

concatenation
   : ^('+' add_sub add_sub)
   | ^('-' add_sub add_sub)
   | add_sub
   ;

add_sub
   : ^('*' b b)
   | ^('/' b b)
   | ^('%' b b)
   | b
   ;

b
   : ^(NEGATE unary)
   | unary
   ;

unary
   : ^('^' atom atom)
   | atom
   ;

atom    : 'nil'
       | 'false'
       | 'true'
       | number
       | string
       | ^(FUNCBODY parlist? chunk)
       | prefixexp
       | tableconstructor
       | '...'
    ;

funcbody
   : ^(FUNCBODY parlist? chunk)
   ;

parlist
   : ^(PARAMETERS namelist)
   | ^(PARAMETERS namelist '...')
   | ^(PARAMETERS '...')
   ;

tableconstructor
   : ^(TBLCTOR field+)
   | TBLCTOR
   ;

field
   : ^(TBLFIELD exp exp)
   | ^(TBLFIELD NAME exp)
   | ^(TBLFIELD exp)
   ;

number
   : INTEGER
   | FLOAT
   | EXPONENT
   | HEX
   ;

string
   : ^(STRING s=.)
   ;



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Nov 30 17:15:18 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Dec 2011 09:15:18 +0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
Message-ID: <21a0976674b5e2f62c23c1bd0f5dbf25@mail.gmail.com>

Ah, sorry, it is that import buig I reported to you 2 years ago ;-) When
there is no definition of a token, but it is used in an import, then it is
assigned a number that does not exist because it thinks it is coming from
the options section, but then it  all goes haywire. It needs to know where
the tokens are coming from (roughly)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, November 30, 2011 3:37 AM
To: Alan D. Cabrera
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Has anyone seen this kind of stack trace?

interesting. i get:

/tmp $ a3.4 LuaWalker.g
error(10):  internal error: LuaWalker.g :
java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
java.util.Vector.set(Vector.java:712)
org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
org.antlr.analysis.DFA.createStateTables(DFA.java:439)
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:64
5)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1792)
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:1413)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:999)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:
910)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:490
)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)

but had to take out import token vocab. can you send me that?
Ter
On Nov 29, 2011, at 5:26 AM, Alan D. Cabrera wrote:

> I'm running ANTLR on my tree walker ANTLR file and get this error
message and don't understand what I'm doing wrong:
>
> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.jav
> a:645)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:28
> 76)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:238
> 2)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:15
> 37)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.j
> ava:1441)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java
> :493)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
> org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultB
> uildPluginManager.java:101)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.
> java:209)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.
> java:153)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.
> java:145)
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProjec
> t(LifecycleModuleBuilder.java:84)
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProjec
> t(LifecycleModuleBuilder.java:59)
> org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBui
> ld(LifecycleStarter.java:183)
> org.apache.maven.lifecycle.internal.LifecycleStarter.execute(Lifecycle
> Starter.java:161)
> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
> org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
> org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
> org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.j
> ava:39)
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccess
> orImpl.java:25)
> java.lang.reflect.Method.invoke(Method.java:597)
> org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launc
> her.java:290)
> org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java
> :230)
> org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Lau
> ncher.java:409)
> org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:3
> 52)
>
>
> /**
> * Copyright 2010-2011 (C) Alan D. Cabrera
> *
> * Licensed under the Apache License, Version 2.0 (the "License");
> * you may not use this file except in compliance with the License.
> * You may obtain a copy of the License at
> *
> *    http://www.apache.org/licenses/LICENSE-2.0
> *
> * Unless required by applicable law or agreed to in writing, software
> * distributed under the License is distributed on an "AS IS" BASIS,
> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied.
> * See the License for the specific language governing permissions and
> * limitations under the License.
> */
> tree grammar LuaWalker;
> options
> {
>   tokenVocab=Lua;
>   ASTLabelType=CommonTree;
>   filter = true;
> }
> @header
> {
> package com.toolazydogs.lua4j;
> import org.objectweb.asm.*;
> import com.toolazydogs.lua4j.compiler.*; } @members {
>   void print(String s) { System.out.print(s); }
>   void println(String s) { System.out.println(s); } }
>
> chunk
>   : ^(CHUNK c=.)
>   ;
>
> stat
>   : ^(ASSIGN varlist explist)
>   | functioncall
>   | chunk
>   | ^(WHILE exp chunk)
>   | ^(REPEAT chunk exp)
>   | ^(IF exp chunk)
>   | ^(IF exp chunk chunk)
>   | ^(IF exp chunk elseif+ chunk?)
>   | ^(FOR NAME exp exp exp chunk)
>   | ^(FOR NAME exp exp chunk)
>   | ^(FORIN namelist explist chunk)
>   | ^(FUNCTION funcname funcbody)
>   | ^(LOCAL namelist explist?)
>   ;
>
> elseif
>   : ^(ELSEIF exp chunk)
>   ;
>
> laststat
>   : RETURN
>   | ^(RETURN explist)
>   | BREAK
>   ;
>
> funcname
>   : ^(FNAMETHIS NAME NAME+)
>   | ^(FNAME NAME+)
>   ;
>
> varlist
>   : ^(VARLIST var+)
>   ;
>
> var
>   : ^(INDEX varPrefix exp)
>   | ^(VAR NAME)
>   ;
>
> varPrefix
>   : ^(FUNCALL vp=. nameAndArgs)
>   | ^(SINGLE exp)
>   | ^(VAR NAME)
>   ;
>
> prefixexp
>   : ^(FUNCALL p=. nameAndArgs)
>   | varOrExp
>   ;
>
> functioncall
>   : ^(FUNCALL p=. nameAndArgs)
>   ;
>
> varOrExp
>   : var
>   | ^(SINGLE exp)
>   ;
>
> nameAndArgs
>   : ^(ARGS args)
>   | ^(ARGSWITHSELF NAME args)
>   ;
>
> args
>   : EXPLIST
>   | explist
>   | tableconstructor
>   | string
>   ;
>
> namelist
>   : ^(NAMELIST NAME+)
>   ;
>
> explist
>   : ^(EXPLIST exp+)
>   ;
>
> exp
>   : ^('or' or or+)
>   | or
>   ;
>
> or
>   : ^('and' and and+)
>   | and
>   ;
>
> and
>   : ^('<' compare compare)
>   | ^('<=' compare compare)
>   | ^('>' compare compare)
>   | ^('>=' compare compare)
>   | ^('==' compare compare)
>   | ^('~=' compare compare)
>   | compare
>   ;
>
> compare
>   : ^('..' concatenation concatenation+)
>   | concatenation
>   ;
>
> concatenation
>   : ^('+' add_sub add_sub)
>   | ^('-' add_sub add_sub)
>   | add_sub
>   ;
>
> add_sub
>   : ^('*' b b)
>   | ^('/' b b)
>   | ^('%' b b)
>   | b
>   ;
>
> b
>   : ^(NEGATE unary)
>   | unary
>   ;
>
> unary
>   : ^('^' atom atom)
>   | atom
>   ;
>
> atom    : 'nil'
>       | 'false'
>       | 'true'
>       | number
>       | string
>       | ^(FUNCBODY parlist? chunk)
>       | prefixexp
>       | tableconstructor
>       | '...'
>    ;
>
> funcbody
>   : ^(FUNCBODY parlist? chunk)
>   ;
>
> parlist
>   : ^(PARAMETERS namelist)
>   | ^(PARAMETERS namelist '...')
>   | ^(PARAMETERS '...')
>   ;
>
> tableconstructor
>   : ^(TBLCTOR field+)
>   | TBLCTOR
>   ;
>
> field
>   : ^(TBLFIELD exp exp)
>   | ^(TBLFIELD NAME exp)
>   | ^(TBLFIELD exp)
>   ;
>
> number
>   : INTEGER
>   | FLOAT
>   | EXPONENT
>   | HEX
>   ;
>
> string
>   : ^(STRING s=.)
>   ;
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From list at toolazydogs.com  Wed Nov 30 17:25:05 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 30 Nov 2011 17:25:05 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <dea25c23c11eb34265910077f528c52c@mail.gmail.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<dea25c23c11eb34265910077f528c52c@mail.gmail.com>
Message-ID: <7C0AFC37-AC63-41E6-98CD-AAF7E51FC34A@toolazydogs.com>

I am using maven and both *.g files get compiled by antlr:

[INFO] 
[INFO] --- antlr3-maven-plugin:3.3:antlr (default) @ lua4j ---
[INFO] ANTLR: Processing source directory /Users/adc/dev/lua4j/src/main/antlr3
ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
com/toolazydogs/lua4j/Lua.g
com/toolazydogs/lua4j/LuaWalker.g
error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g : java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64



Regards,
Alan

On Nov 30, 2011, at 5:12 PM, Jim Idle wrote:

> Your tree, parser, lexer are out of sync and the token numbers have
> therefore changed. Regen lexer, parser, then walker. If you use Maven then
> this will be avoided.
> 
> Jim
> 
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
> Sent: Tuesday, November 29, 2011 9:26 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Has anyone seen this kind of stack trace?
> 
> I'm running ANTLR on my tree walker ANTLR file and get this error message
> and don't understand what I'm doing wrong:
> 
> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:64
> 5)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:
> 1441)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:493
> )
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
> org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuild
> PluginManager.java:101)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
> :209)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
> :153)
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
> :145)
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
> fecycleModuleBuilder.java:84)
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
> fecycleModuleBuilder.java:59)
> org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(L
> ifecycleStarter.java:183)
> org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStar
> ter.java:161)
> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
> org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
> org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
> org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
> 39)
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorIm
> pl.java:25)
> java.lang.reflect.Method.invoke(Method.java:597)
> org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.
> java:290)
> org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230
> )
> org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launche
> r.java:409)
> org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
> 
> 
> /**
> * Copyright 2010-2011 (C) Alan D. Cabrera
> *
> * Licensed under the Apache License, Version 2.0 (the "License");
> * you may not use this file except in compliance with the License.
> * You may obtain a copy of the License at
> *
> *    http://www.apache.org/licenses/LICENSE-2.0
> *
> * Unless required by applicable law or agreed to in writing, software
> * distributed under the License is distributed on an "AS IS" BASIS,
> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
> * See the License for the specific language governing permissions and
> * limitations under the License.
> */
> tree grammar LuaWalker;
> options
> {
>   tokenVocab=Lua;
>   ASTLabelType=CommonTree;
>   filter = true;
> }
> @header
> {
> package com.toolazydogs.lua4j;
> import org.objectweb.asm.*;
> import com.toolazydogs.lua4j.compiler.*; } @members {
>   void print(String s) { System.out.print(s); }
>   void println(String s) { System.out.println(s); } }
> 
> chunk
>   : ^(CHUNK c=.)
>   ;
> 
> stat
>   : ^(ASSIGN varlist explist)
>   | functioncall
>   | chunk
>   | ^(WHILE exp chunk)
>   | ^(REPEAT chunk exp)
>   | ^(IF exp chunk)
>   | ^(IF exp chunk chunk)
>   | ^(IF exp chunk elseif+ chunk?)
>   | ^(FOR NAME exp exp exp chunk)
>   | ^(FOR NAME exp exp chunk)
>   | ^(FORIN namelist explist chunk)
>   | ^(FUNCTION funcname funcbody)
>   | ^(LOCAL namelist explist?)
>   ;
> 
> elseif
>   : ^(ELSEIF exp chunk)
>   ;
> 
> laststat
>   : RETURN
>   | ^(RETURN explist)
>   | BREAK
>   ;
> 
> funcname
>   : ^(FNAMETHIS NAME NAME+)
>   | ^(FNAME NAME+)
>   ;
> 
> varlist
>   : ^(VARLIST var+)
>   ;
> 
> var
>   : ^(INDEX varPrefix exp)
>   | ^(VAR NAME)
>   ;
> 
> varPrefix
>   : ^(FUNCALL vp=. nameAndArgs)
>   | ^(SINGLE exp)
>   | ^(VAR NAME)
>   ;
> 
> prefixexp
>   : ^(FUNCALL p=. nameAndArgs)
>   | varOrExp
>   ;
> 
> functioncall
>   : ^(FUNCALL p=. nameAndArgs)
>   ;
> 
> varOrExp
>   : var
>   | ^(SINGLE exp)
>   ;
> 
> nameAndArgs
>   : ^(ARGS args)
>   | ^(ARGSWITHSELF NAME args)
>   ;
> 
> args
>   : EXPLIST
>   | explist
>   | tableconstructor
>   | string
>   ;
> 
> namelist
>   : ^(NAMELIST NAME+)
>   ;
> 
> explist
>   : ^(EXPLIST exp+)
>   ;
> 
> exp
>   : ^('or' or or+)
>   | or
>   ;
> 
> or
>   : ^('and' and and+)
>   | and
>   ;
> 
> and
>   : ^('<' compare compare)
>   | ^('<=' compare compare)
>   | ^('>' compare compare)
>   | ^('>=' compare compare)
>   | ^('==' compare compare)
>   | ^('~=' compare compare)
>   | compare
>   ;
> 
> compare
>   : ^('..' concatenation concatenation+)
>   | concatenation
>   ;
> 
> concatenation
>   : ^('+' add_sub add_sub)
>   | ^('-' add_sub add_sub)
>   | add_sub
>   ;
> 
> add_sub
>   : ^('*' b b)
>   | ^('/' b b)
>   | ^('%' b b)
>   | b
>   ;
> 
> b
>   : ^(NEGATE unary)
>   | unary
>   ;
> 
> unary
>   : ^('^' atom atom)
>   | atom
>   ;
> 
> atom    : 'nil'
>       | 'false'
>       | 'true'
>       | number
>       | string
>       | ^(FUNCBODY parlist? chunk)
>       | prefixexp
>       | tableconstructor
>       | '...'
>    ;
> 
> funcbody
>   : ^(FUNCBODY parlist? chunk)
>   ;
> 
> parlist
>   : ^(PARAMETERS namelist)
>   | ^(PARAMETERS namelist '...')
>   | ^(PARAMETERS '...')
>   ;
> 
> tableconstructor
>   : ^(TBLCTOR field+)
>   | TBLCTOR
>   ;
> 
> field
>   : ^(TBLFIELD exp exp)
>   | ^(TBLFIELD NAME exp)
>   | ^(TBLFIELD exp)
>   ;
> 
> number
>   : INTEGER
>   | FLOAT
>   | EXPONENT
>   | HEX
>   ;
> 
> string
>   : ^(STRING s=.)
>   ;
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Nov 30 17:26:35 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Dec 2011 09:26:35 +0800
Subject: [antlr-interest] [C] scope pop function
In-Reply-To: <CAHHXKCZweYajyHTd63=43nJ8D9aYnqOHGuY_wA5_ZowMWwO15A@mail.gmail.com>
References: <CAHHXKCZweYajyHTd63=43nJ8D9aYnqOHGuY_wA5_ZowMWwO15A@mail.gmail.com>
Message-ID: <d8fd03173c7695c65f2149198832a772@mail.gmail.com>

Looks like a bug in the stringtemplates that were changed for ST4 in this
version of ANTLR. You might want to try 4.2 until I can fix this.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gonzague Reydet
Sent: Wednesday, November 30, 2011 11:25 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] [C] scope pop function

Hi all,

When I try to use a scope in my tree parser, I encounter an error in the
generated code.
The scope pop function is generated as follow (I removed the generated
comments to make it more readable) :

void pmyparser_tree_myScopePop(pmyparser_tree ctx) {
    if    (SCOPE_TOP(myScope)->free != NULL)
    {
        SCOPE_TOP(myScope)->free(SCOPE_TOP(myScope));
    }

    ctx->pmyparser_tree_myScopeStack_limit--;
    SCOPE_TOP(myScope) =
(pmyparser_tree_myScope_SCOPE)(ctx->pmyparser_tree_myScopeStack->get(ctx->
,
ctx->pmyparser_tree_myScopeStack_limit - 1));
}

As you can see in the last function line, the first parameter of the get
function call is missing a field descriptor: "get(ctx->, ...)".
Is there something wrong in my parser to provoque this issue? Is this a
known issue of ANTLR 3.4?

The tree parser generator outputs the following messages that I don't
really understand :

ASTTreeParser.stg 321:25: anonymous template has 0 arg(s) but mapped
across
1 value(s)
ASTTreeParser.stg 323:25: anonymous template has 0 arg(s) but mapped
across
1 value(s)
context [/outputFile /treeParser /genericParser /_sub50
/globalAttributeScopeFuncMacro] 24:112 no such template: /bscopeStack
context [/outputFile /treeParser /genericParser /_sub50
/globalAttributeScopeFuncMacro] 24:113 passed 1 arg(s) to template null
with 0 declared arg(s) context [/outputFile /treeParser /genericParser
/_sub50 /globalAttributeScopeFuncMacro] 24:113 attribute sname isn't
defined context [/outputFile /treeParser /genericParser /rule
/ruleCleanUp] 13:5 passed 1 arg(s) to template /_sub16 with 0 declared
arg(s) context [/outputFile /treeParser /genericParser /rule /ruleCleanUp]
15:5 passed 1 arg(s) to template /_sub17 with 0 declared arg(s) ...
context [/outputFile /treeParser /genericParser /rule /ruleCleanUp] 13:5
passed 1 arg(s) to template /_sub16 with 0 declared arg(s) context
[/outputFile /treeParser /genericParser /rule /ruleCleanUp] 15:5 passed 1
arg(s) to template /_sub17 with 0 declared arg(s)


Regards,
Gonzague

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Nov 30 17:28:16 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Dec 2011 09:28:16 +0800
Subject: [antlr-interest] [C] scope pop function
In-Reply-To: <CAHHXKCZpitvYeydHf5-vvWjSTCPWcDxv8jj7ZBxuDh=PP5Rr_w@mail.gmail.com>
References: <CAHHXKCZweYajyHTd63=43nJ8D9aYnqOHGuY_wA5_ZowMWwO15A@mail.gmail.com>
	<CAHHXKCZpitvYeydHf5-vvWjSTCPWcDxv8jj7ZBxuDh=PP5Rr_w@mail.gmail.com>
Message-ID: <ffdcf3492ae283a0c3c07cd508af8eec@mail.gmail.com>

You can just download the source code, change the template, then build it
(Maven), or you can extract the jar, change the template and rebuild the
jar. Or you can place the new template in a file on the system and include
it in the classpath and it should be loaded before the one in the jar.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gonzague Reydet
Sent: Thursday, December 01, 2011 12:41 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] [C] scope pop function

After a more deeper look into the ANTLR codegen template, I suspect this
is a bug in the C.stg file.
There is a typo error in the globalAttributeScopeFuncMacro. The template
call a "bscopeStack" subtemplate instead of "scopeStack" subtemplate.
Do you want me to fill a bug for this issue in jira?

Is it possible to get this bug quickly fixed somehow in a nightly build?
I did not find any nightly build download nor public access to the ANTLR
SCM.

Is there a workaround on this issue appart from modifying generated code
manually?

2011/11/30 Gonzague Reydet <gonzague.reydet at gmail.com>

> Hi all,
>
> When I try to use a scope in my tree parser, I encounter an error in
> the generated code.
> The scope pop function is generated as follow (I removed the generated
> comments to make it more readable) :
>
> void pmyparser_tree_myScopePop(pmyparser_tree ctx) {
>     if    (SCOPE_TOP(myScope)->free != NULL)
>     {
>         SCOPE_TOP(myScope)->free(SCOPE_TOP(myScope));
>     }
>
>     ctx->pmyparser_tree_myScopeStack_limit--;
>     SCOPE_TOP(myScope) =
> (pmyparser_tree_myScope_SCOPE)(ctx->pmyparser_tree_myScopeStack->get(c
> tx->,
> ctx->pmyparser_tree_myScopeStack_limit - 1));
> }
>
> As you can see in the last function line, the first parameter of the
> get function call is missing a field descriptor: "get(ctx->, ...)".
> Is there something wrong in my parser to provoque this issue? Is this
> a known issue of ANTLR 3.4?
>
> The tree parser generator outputs the following messages that I don't
> really understand :
>
> ASTTreeParser.stg 321:25: anonymous template has 0 arg(s) but mapped
> across 1 value(s) ASTTreeParser.stg 323:25: anonymous template has 0
> arg(s) but mapped across 1 value(s) context [/outputFile /treeParser
> /genericParser /_sub50 /globalAttributeScopeFuncMacro] 24:112 no such
> template: /bscopeStack context [/outputFile /treeParser /genericParser
> /_sub50 /globalAttributeScopeFuncMacro] 24:113 passed 1 arg(s) to
> template null with 0 declared arg(s) context [/outputFile /treeParser
> /genericParser /_sub50 /globalAttributeScopeFuncMacro] 24:113
> attribute sname isn't defined context [/outputFile /treeParser
> /genericParser /rule /ruleCleanUp] 13:5 passed 1 arg(s) to template
> /_sub16 with 0 declared arg(s) context [/outputFile /treeParser
> /genericParser /rule /ruleCleanUp] 15:5 passed 1 arg(s) to template
> /_sub17 with 0 declared arg(s) ...
> context [/outputFile /treeParser /genericParser /rule /ruleCleanUp]
> 13:5 passed 1 arg(s) to template /_sub16 with 0 declared arg(s)
> context [/outputFile /treeParser /genericParser /rule /ruleCleanUp]
> 15:5 passed 1 arg(s) to template /_sub17 with 0 declared arg(s)
>
>
> Regards,
> Gonzague
>



--
T?l : +33 (0)6 21 02 90 48

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Nov 30 17:31:22 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Dec 2011 09:31:22 +0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <7C0AFC37-AC63-41E6-98CD-AAF7E51FC34A@toolazydogs.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<dea25c23c11eb34265910077f528c52c@mail.gmail.com>
	<7C0AFC37-AC63-41E6-98CD-AAF7E51FC34A@toolazydogs.com>
Message-ID: <62e14411e61ebaaf8c759108839daa96@mail.gmail.com>

Yes - did you see my next email? You have a token that is being used but
it does not have a lexer definition. When you use import, this is not
detected. It is a bug but for some reason, it was not easy to fix and it
has been left. So, it is being given the last token number plus one, but
that does not exist and so it exceeds the bounds.

Jim

-----Original Message-----
From: Alan D. Cabrera [mailto:list at toolazydogs.com]
Sent: Thursday, December 01, 2011 9:25 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Has anyone seen this kind of stack trace?

I am using maven and both *.g files get compiled by antlr:

[INFO]
[INFO] --- antlr3-maven-plugin:3.3:antlr (default) @ lua4j --- [INFO]
ANTLR: Processing source directory /Users/adc/dev/lua4j/src/main/antlr3
ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
com/toolazydogs/lua4j/Lua.g com/toolazydogs/lua4j/LuaWalker.g
error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64



Regards,
Alan

On Nov 30, 2011, at 5:12 PM, Jim Idle wrote:

> Your tree, parser, lexer are out of sync and the token numbers have
> therefore changed. Regen lexer, parser, then walker. If you use Maven
then
> this will be avoided.
>
> Jim
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
> Sent: Tuesday, November 29, 2011 9:26 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Has anyone seen this kind of stack trace?
>
> I'm running ANTLR on my tree walker ANTLR file and get this error
message
> and don't understand what I'm doing wrong:
>
> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
>
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:64
> 5)
>
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)
>
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)
>
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:
> 1441)
>
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:493
> )
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
>
org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuild
> PluginManager.java:101)
>
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
> :209)
>
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
> :153)
>
org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
> :145)
>
org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
> fecycleModuleBuilder.java:84)
>
org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
> fecycleModuleBuilder.java:59)
>
org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(L
> ifecycleStarter.java:183)
>
org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStar
> ter.java:161)
> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
> org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
> org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
> org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
> 39)
>
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorIm
> pl.java:25)
> java.lang.reflect.Method.invoke(Method.java:597)
>
org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.
> java:290)
>
org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230
> )
>
org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launche
> r.java:409)
>
org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
>
>
> /**
> * Copyright 2010-2011 (C) Alan D. Cabrera
> *
> * Licensed under the Apache License, Version 2.0 (the "License");
> * you may not use this file except in compliance with the License.
> * You may obtain a copy of the License at
> *
> *    http://www.apache.org/licenses/LICENSE-2.0
> *
> * Unless required by applicable law or agreed to in writing, software
> * distributed under the License is distributed on an "AS IS" BASIS,
> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied.
> * See the License for the specific language governing permissions and
> * limitations under the License.
> */
> tree grammar LuaWalker;
> options
> {
>   tokenVocab=Lua;
>   ASTLabelType=CommonTree;
>   filter = true;
> }
> @header
> {
> package com.toolazydogs.lua4j;
> import org.objectweb.asm.*;
> import com.toolazydogs.lua4j.compiler.*; } @members {
>   void print(String s) { System.out.print(s); }
>   void println(String s) { System.out.println(s); } }
>
> chunk
>   : ^(CHUNK c=.)
>   ;
>
> stat
>   : ^(ASSIGN varlist explist)
>   | functioncall
>   | chunk
>   | ^(WHILE exp chunk)
>   | ^(REPEAT chunk exp)
>   | ^(IF exp chunk)
>   | ^(IF exp chunk chunk)
>   | ^(IF exp chunk elseif+ chunk?)
>   | ^(FOR NAME exp exp exp chunk)
>   | ^(FOR NAME exp exp chunk)
>   | ^(FORIN namelist explist chunk)
>   | ^(FUNCTION funcname funcbody)
>   | ^(LOCAL namelist explist?)
>   ;
>
> elseif
>   : ^(ELSEIF exp chunk)
>   ;
>
> laststat
>   : RETURN
>   | ^(RETURN explist)
>   | BREAK
>   ;
>
> funcname
>   : ^(FNAMETHIS NAME NAME+)
>   | ^(FNAME NAME+)
>   ;
>
> varlist
>   : ^(VARLIST var+)
>   ;
>
> var
>   : ^(INDEX varPrefix exp)
>   | ^(VAR NAME)
>   ;
>
> varPrefix
>   : ^(FUNCALL vp=. nameAndArgs)
>   | ^(SINGLE exp)
>   | ^(VAR NAME)
>   ;
>
> prefixexp
>   : ^(FUNCALL p=. nameAndArgs)
>   | varOrExp
>   ;
>
> functioncall
>   : ^(FUNCALL p=. nameAndArgs)
>   ;
>
> varOrExp
>   : var
>   | ^(SINGLE exp)
>   ;
>
> nameAndArgs
>   : ^(ARGS args)
>   | ^(ARGSWITHSELF NAME args)
>   ;
>
> args
>   : EXPLIST
>   | explist
>   | tableconstructor
>   | string
>   ;
>
> namelist
>   : ^(NAMELIST NAME+)
>   ;
>
> explist
>   : ^(EXPLIST exp+)
>   ;
>
> exp
>   : ^('or' or or+)
>   | or
>   ;
>
> or
>   : ^('and' and and+)
>   | and
>   ;
>
> and
>   : ^('<' compare compare)
>   | ^('<=' compare compare)
>   | ^('>' compare compare)
>   | ^('>=' compare compare)
>   | ^('==' compare compare)
>   | ^('~=' compare compare)
>   | compare
>   ;
>
> compare
>   : ^('..' concatenation concatenation+)
>   | concatenation
>   ;
>
> concatenation
>   : ^('+' add_sub add_sub)
>   | ^('-' add_sub add_sub)
>   | add_sub
>   ;
>
> add_sub
>   : ^('*' b b)
>   | ^('/' b b)
>   | ^('%' b b)
>   | b
>   ;
>
> b
>   : ^(NEGATE unary)
>   | unary
>   ;
>
> unary
>   : ^('^' atom atom)
>   | atom
>   ;
>
> atom    : 'nil'
>       | 'false'
>       | 'true'
>       | number
>       | string
>       | ^(FUNCBODY parlist? chunk)
>       | prefixexp
>       | tableconstructor
>       | '...'
>    ;
>
> funcbody
>   : ^(FUNCBODY parlist? chunk)
>   ;
>
> parlist
>   : ^(PARAMETERS namelist)
>   | ^(PARAMETERS namelist '...')
>   | ^(PARAMETERS '...')
>   ;
>
> tableconstructor
>   : ^(TBLCTOR field+)
>   | TBLCTOR
>   ;
>
> field
>   : ^(TBLFIELD exp exp)
>   | ^(TBLFIELD NAME exp)
>   | ^(TBLFIELD exp)
>   ;
>
> number
>   : INTEGER
>   | FLOAT
>   | EXPONENT
>   | HEX
>   ;
>
> string
>   : ^(STRING s=.)
>   ;
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From list at toolazydogs.com  Wed Nov 30 17:31:41 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 30 Nov 2011 17:31:41 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <21a0976674b5e2f62c23c1bd0f5dbf25@mail.gmail.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<2ACDBF4A-2B37-4CEF-90A8-E01F4EF6B0CB@cs.usfca.edu>
	<21a0976674b5e2f62c23c1bd0f5dbf25@mail.gmail.com>
Message-ID: <D7BCC13F-AD1B-4D8A-A225-C2DFDF8B1A2F@toolazydogs.com>

I'm not so sure that this is the problem since all the tokens in the walker are in the parser/lexer.


Regards,
Alan

On Nov 30, 2011, at 5:15 PM, Jim Idle wrote:

> Ah, sorry, it is that import buig I reported to you 2 years ago ;-) When
> there is no definition of a token, but it is used in an import, then it is
> assigned a number that does not exist because it thinks it is coming from
> the options section, but then it  all goes haywire. It needs to know where
> the tokens are coming from (roughly)
> 
> Jim
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, November 30, 2011 3:37 AM
> To: Alan D. Cabrera
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Has anyone seen this kind of stack trace?
> 
> interesting. i get:
> 
> /tmp $ a3.4 LuaWalker.g
> error(10):  internal error: LuaWalker.g :
> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> java.util.Vector.set(Vector.java:712)
> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:64
> 5)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1792)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:1413)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:999)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:
> 910)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:490
> )
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.Tool.main(Tool.java:93)
> 
> but had to take out import token vocab. can you send me that?
> Ter
> On Nov 29, 2011, at 5:26 AM, Alan D. Cabrera wrote:
> 
>> I'm running ANTLR on my tree walker ANTLR file and get this error
> message and don't understand what I'm doing wrong:
>> 
>> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
>> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
>> java.util.Vector.set(Vector.java:712)
>> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
>> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
>> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.jav
>> a:645)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:28
>> 76)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:238
>> 2)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:15
>> 37)
>> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.j
>> ava:1441)
>> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java
>> :493)
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>> org.antlr.Tool.process(Tool.java:468)
>> org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
>> org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultB
>> uildPluginManager.java:101)
>> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.
>> java:209)
>> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.
>> java:153)
>> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.
>> java:145)
>> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProjec
>> t(LifecycleModuleBuilder.java:84)
>> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProjec
>> t(LifecycleModuleBuilder.java:59)
>> org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBui
>> ld(LifecycleStarter.java:183)
>> org.apache.maven.lifecycle.internal.LifecycleStarter.execute(Lifecycle
>> Starter.java:161)
>> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
>> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
>> org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
>> org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
>> org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
>> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.j
>> ava:39)
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccess
>> orImpl.java:25)
>> java.lang.reflect.Method.invoke(Method.java:597)
>> org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launc
>> her.java:290)
>> org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java
>> :230)
>> org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Lau
>> ncher.java:409)
>> org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:3
>> 52)
>> 
>> 
>> /**
>> * Copyright 2010-2011 (C) Alan D. Cabrera
>> *
>> * Licensed under the Apache License, Version 2.0 (the "License");
>> * you may not use this file except in compliance with the License.
>> * You may obtain a copy of the License at
>> *
>> *    http://www.apache.org/licenses/LICENSE-2.0
>> *
>> * Unless required by applicable law or agreed to in writing, software
>> * distributed under the License is distributed on an "AS IS" BASIS,
>> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
> implied.
>> * See the License for the specific language governing permissions and
>> * limitations under the License.
>> */
>> tree grammar LuaWalker;
>> options
>> {
>>  tokenVocab=Lua;
>>  ASTLabelType=CommonTree;
>>  filter = true;
>> }
>> @header
>> {
>> package com.toolazydogs.lua4j;
>> import org.objectweb.asm.*;
>> import com.toolazydogs.lua4j.compiler.*; } @members {
>>  void print(String s) { System.out.print(s); }
>>  void println(String s) { System.out.println(s); } }
>> 
>> chunk
>>  : ^(CHUNK c=.)
>>  ;
>> 
>> stat
>>  : ^(ASSIGN varlist explist)
>>  | functioncall
>>  | chunk
>>  | ^(WHILE exp chunk)
>>  | ^(REPEAT chunk exp)
>>  | ^(IF exp chunk)
>>  | ^(IF exp chunk chunk)
>>  | ^(IF exp chunk elseif+ chunk?)
>>  | ^(FOR NAME exp exp exp chunk)
>>  | ^(FOR NAME exp exp chunk)
>>  | ^(FORIN namelist explist chunk)
>>  | ^(FUNCTION funcname funcbody)
>>  | ^(LOCAL namelist explist?)
>>  ;
>> 
>> elseif
>>  : ^(ELSEIF exp chunk)
>>  ;
>> 
>> laststat
>>  : RETURN
>>  | ^(RETURN explist)
>>  | BREAK
>>  ;
>> 
>> funcname
>>  : ^(FNAMETHIS NAME NAME+)
>>  | ^(FNAME NAME+)
>>  ;
>> 
>> varlist
>>  : ^(VARLIST var+)
>>  ;
>> 
>> var
>>  : ^(INDEX varPrefix exp)
>>  | ^(VAR NAME)
>>  ;
>> 
>> varPrefix
>>  : ^(FUNCALL vp=. nameAndArgs)
>>  | ^(SINGLE exp)
>>  | ^(VAR NAME)
>>  ;
>> 
>> prefixexp
>>  : ^(FUNCALL p=. nameAndArgs)
>>  | varOrExp
>>  ;
>> 
>> functioncall
>>  : ^(FUNCALL p=. nameAndArgs)
>>  ;
>> 
>> varOrExp
>>  : var
>>  | ^(SINGLE exp)
>>  ;
>> 
>> nameAndArgs
>>  : ^(ARGS args)
>>  | ^(ARGSWITHSELF NAME args)
>>  ;
>> 
>> args
>>  : EXPLIST
>>  | explist
>>  | tableconstructor
>>  | string
>>  ;
>> 
>> namelist
>>  : ^(NAMELIST NAME+)
>>  ;
>> 
>> explist
>>  : ^(EXPLIST exp+)
>>  ;
>> 
>> exp
>>  : ^('or' or or+)
>>  | or
>>  ;
>> 
>> or
>>  : ^('and' and and+)
>>  | and
>>  ;
>> 
>> and
>>  : ^('<' compare compare)
>>  | ^('<=' compare compare)
>>  | ^('>' compare compare)
>>  | ^('>=' compare compare)
>>  | ^('==' compare compare)
>>  | ^('~=' compare compare)
>>  | compare
>>  ;
>> 
>> compare
>>  : ^('..' concatenation concatenation+)
>>  | concatenation
>>  ;
>> 
>> concatenation
>>  : ^('+' add_sub add_sub)
>>  | ^('-' add_sub add_sub)
>>  | add_sub
>>  ;
>> 
>> add_sub
>>  : ^('*' b b)
>>  | ^('/' b b)
>>  | ^('%' b b)
>>  | b
>>  ;
>> 
>> b
>>  : ^(NEGATE unary)
>>  | unary
>>  ;
>> 
>> unary
>>  : ^('^' atom atom)
>>  | atom
>>  ;
>> 
>> atom    : 'nil'
>>      | 'false'
>>      | 'true'
>>      | number
>>      | string
>>      | ^(FUNCBODY parlist? chunk)
>>      | prefixexp
>>      | tableconstructor
>>      | '...'
>>   ;
>> 
>> funcbody
>>  : ^(FUNCBODY parlist? chunk)
>>  ;
>> 
>> parlist
>>  : ^(PARAMETERS namelist)
>>  | ^(PARAMETERS namelist '...')
>>  | ^(PARAMETERS '...')
>>  ;
>> 
>> tableconstructor
>>  : ^(TBLCTOR field+)
>>  | TBLCTOR
>>  ;
>> 
>> field
>>  : ^(TBLFIELD exp exp)
>>  | ^(TBLFIELD NAME exp)
>>  | ^(TBLFIELD exp)
>>  ;
>> 
>> number
>>  : INTEGER
>>  | FLOAT
>>  | EXPONENT
>>  | HEX
>>  ;
>> 
>> string
>>  : ^(STRING s=.)
>>  ;
>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From list at toolazydogs.com  Wed Nov 30 17:47:45 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 30 Nov 2011 17:47:45 -0800
Subject: [antlr-interest] Has anyone seen this kind of stack trace?
In-Reply-To: <62e14411e61ebaaf8c759108839daa96@mail.gmail.com>
References: <6B502859-A720-47B0-8B24-53410CDCD3BC@toolazydogs.com>
	<dea25c23c11eb34265910077f528c52c@mail.gmail.com>
	<7C0AFC37-AC63-41E6-98CD-AAF7E51FC34A@toolazydogs.com>
	<62e14411e61ebaaf8c759108839daa96@mail.gmail.com>
Message-ID: <51807544-8F1C-4085-9A7D-6399CDB06565@toolazydogs.com>

Yep.  Just replied to that one too.  All tokens are accounted for.  This is a different bug.  :)


Regards,
Alan

On Nov 30, 2011, at 5:31 PM, Jim Idle wrote:

> Yes - did you see my next email? You have a token that is being used but
> it does not have a lexer definition. When you use import, this is not
> detected. It is a bug but for some reason, it was not easy to fix and it
> has been left. So, it is being given the last token number plus one, but
> that does not exist and so it exceeds the bounds.
> 
> Jim
> 
> -----Original Message-----
> From: Alan D. Cabrera [mailto:list at toolazydogs.com]
> Sent: Thursday, December 01, 2011 9:25 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Has anyone seen this kind of stack trace?
> 
> I am using maven and both *.g files get compiled by antlr:
> 
> [INFO]
> [INFO] --- antlr3-maven-plugin:3.3:antlr (default) @ lua4j --- [INFO]
> ANTLR: Processing source directory /Users/adc/dev/lua4j/src/main/antlr3
> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
> com/toolazydogs/lua4j/Lua.g com/toolazydogs/lua4j/LuaWalker.g
> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
> 
> 
> 
> Regards,
> Alan
> 
> On Nov 30, 2011, at 5:12 PM, Jim Idle wrote:
> 
>> Your tree, parser, lexer are out of sync and the token numbers have
>> therefore changed. Regen lexer, parser, then walker. If you use Maven
> then
>> this will be avoided.
>> 
>> Jim
>> 
>> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
>> Sent: Tuesday, November 29, 2011 9:26 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Has anyone seen this kind of stack trace?
>> 
>> I'm running ANTLR on my tree walker ANTLR file and get this error
> message
>> and don't understand what I'm doing wrong:
>> 
>> error(10):  internal error: com/toolazydogs/lua4j/LuaWalker.g :
>> java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 64
>> java.util.Vector.set(Vector.java:712)
>> org.antlr.analysis.DFA.createMinMaxTables(DFA.java:535)
>> org.antlr.analysis.DFA.createStateTables(DFA.java:439)
>> 
> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:64
>> 5)
>> 
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:2876)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2382)
>> 
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1537)
>> 
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:
>> 1441)
>> 
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:493
>> )
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>> org.antlr.Tool.process(Tool.java:468)
>> org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:378)
>> 
> org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuild
>> PluginManager.java:101)
>> 
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
>> :209)
>> 
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
>> :153)
>> 
> org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java
>> :145)
>> 
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
>> fecycleModuleBuilder.java:84)
>> 
> org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Li
>> fecycleModuleBuilder.java:59)
>> 
> org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(L
>> ifecycleStarter.java:183)
>> 
> org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStar
>> ter.java:161)
>> org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
>> org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
>> org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
>> org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
>> org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
>> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:
>> 39)
>> 
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorIm
>> pl.java:25)
>> java.lang.reflect.Method.invoke(Method.java:597)
>> 
> org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.
>> java:290)
>> 
> org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230
>> )
>> 
> org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launche
>> r.java:409)
>> 
> org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
>> 
>> 
>> /**
>> * Copyright 2010-2011 (C) Alan D. Cabrera
>> *
>> * Licensed under the Apache License, Version 2.0 (the "License");
>> * you may not use this file except in compliance with the License.
>> * You may obtain a copy of the License at
>> *
>> *    http://www.apache.org/licenses/LICENSE-2.0
>> *
>> * Unless required by applicable law or agreed to in writing, software
>> * distributed under the License is distributed on an "AS IS" BASIS,
>> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
> implied.
>> * See the License for the specific language governing permissions and
>> * limitations under the License.
>> */
>> tree grammar LuaWalker;
>> options
>> {
>>  tokenVocab=Lua;
>>  ASTLabelType=CommonTree;
>>  filter = true;
>> }
>> @header
>> {
>> package com.toolazydogs.lua4j;
>> import org.objectweb.asm.*;
>> import com.toolazydogs.lua4j.compiler.*; } @members {
>>  void print(String s) { System.out.print(s); }
>>  void println(String s) { System.out.println(s); } }
>> 
>> chunk
>>  : ^(CHUNK c=.)
>>  ;
>> 
>> stat
>>  : ^(ASSIGN varlist explist)
>>  | functioncall
>>  | chunk
>>  | ^(WHILE exp chunk)
>>  | ^(REPEAT chunk exp)
>>  | ^(IF exp chunk)
>>  | ^(IF exp chunk chunk)
>>  | ^(IF exp chunk elseif+ chunk?)
>>  | ^(FOR NAME exp exp exp chunk)
>>  | ^(FOR NAME exp exp chunk)
>>  | ^(FORIN namelist explist chunk)
>>  | ^(FUNCTION funcname funcbody)
>>  | ^(LOCAL namelist explist?)
>>  ;
>> 
>> elseif
>>  : ^(ELSEIF exp chunk)
>>  ;
>> 
>> laststat
>>  : RETURN
>>  | ^(RETURN explist)
>>  | BREAK
>>  ;
>> 
>> funcname
>>  : ^(FNAMETHIS NAME NAME+)
>>  | ^(FNAME NAME+)
>>  ;
>> 
>> varlist
>>  : ^(VARLIST var+)
>>  ;
>> 
>> var
>>  : ^(INDEX varPrefix exp)
>>  | ^(VAR NAME)
>>  ;
>> 
>> varPrefix
>>  : ^(FUNCALL vp=. nameAndArgs)
>>  | ^(SINGLE exp)
>>  | ^(VAR NAME)
>>  ;
>> 
>> prefixexp
>>  : ^(FUNCALL p=. nameAndArgs)
>>  | varOrExp
>>  ;
>> 
>> functioncall
>>  : ^(FUNCALL p=. nameAndArgs)
>>  ;
>> 
>> varOrExp
>>  : var
>>  | ^(SINGLE exp)
>>  ;
>> 
>> nameAndArgs
>>  : ^(ARGS args)
>>  | ^(ARGSWITHSELF NAME args)
>>  ;
>> 
>> args
>>  : EXPLIST
>>  | explist
>>  | tableconstructor
>>  | string
>>  ;
>> 
>> namelist
>>  : ^(NAMELIST NAME+)
>>  ;
>> 
>> explist
>>  : ^(EXPLIST exp+)
>>  ;
>> 
>> exp
>>  : ^('or' or or+)
>>  | or
>>  ;
>> 
>> or
>>  : ^('and' and and+)
>>  | and
>>  ;
>> 
>> and
>>  : ^('<' compare compare)
>>  | ^('<=' compare compare)
>>  | ^('>' compare compare)
>>  | ^('>=' compare compare)
>>  | ^('==' compare compare)
>>  | ^('~=' compare compare)
>>  | compare
>>  ;
>> 
>> compare
>>  : ^('..' concatenation concatenation+)
>>  | concatenation
>>  ;
>> 
>> concatenation
>>  : ^('+' add_sub add_sub)
>>  | ^('-' add_sub add_sub)
>>  | add_sub
>>  ;
>> 
>> add_sub
>>  : ^('*' b b)
>>  | ^('/' b b)
>>  | ^('%' b b)
>>  | b
>>  ;
>> 
>> b
>>  : ^(NEGATE unary)
>>  | unary
>>  ;
>> 
>> unary
>>  : ^('^' atom atom)
>>  | atom
>>  ;
>> 
>> atom    : 'nil'
>>      | 'false'
>>      | 'true'
>>      | number
>>      | string
>>      | ^(FUNCBODY parlist? chunk)
>>      | prefixexp
>>      | tableconstructor
>>      | '...'
>>   ;
>> 
>> funcbody
>>  : ^(FUNCBODY parlist? chunk)
>>  ;
>> 
>> parlist
>>  : ^(PARAMETERS namelist)
>>  | ^(PARAMETERS namelist '...')
>>  | ^(PARAMETERS '...')
>>  ;
>> 
>> tableconstructor
>>  : ^(TBLCTOR field+)
>>  | TBLCTOR
>>  ;
>> 
>> field
>>  : ^(TBLFIELD exp exp)
>>  | ^(TBLFIELD NAME exp)
>>  | ^(TBLFIELD exp)
>>  ;
>> 
>> number
>>  : INTEGER
>>  | FLOAT
>>  | EXPONENT
>>  | HEX
>>  ;
>> 
>> string
>>  : ^(STRING s=.)
>>  ;
>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


