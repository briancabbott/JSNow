From open.zone at virgin.net  Wed Jun  1 06:28:59 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  1 06:15:17 2005
Subject: [antlr-interest] almost there!
In-Reply-To: <429D5B70.70200@shmuelhome.mine.nu>
Message-ID: <004e01c566ad$dedae530$6502a8c0@hercules>

> Terence Parr wrote:
> > then rewrite v3 in v3 (it's in 2.7.5  at
> > the moment)
> 
> Is it a compatability issue (the language has changed), or an 
> optimization issue (v3 lets you do it better), or both?

All of the above plus it would be nice not to need the ANTLR 2.7.5 runtime
to build ANTLR v3. And any decent parser toolkit really needs to be
self-boostrapping.

Micheal

From Anthony.Youngman at eca-international.com  Wed Jun  1 06:42:17 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Jun  1 06:42:23 2005
Subject: [antlr-interest] submission of patches, fixes, other contributions
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF1D@lnml1.eca-international.local>

I have to add, though, that just because it hasn't been tested in court
doesn't mean that it hasn't been tested. The GPL has a long history of
even big companies throwing in the towel without a fight when
threatened.
 
And the GPL has been tested in court. On several occasions.
 
But yes, I do know that it's not the licence being used for Antlr ...
 
Cheers,
Wol

________________________________

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Loring Craymer
Sent: 31 May 2005 03:52
To: 'Scott Stanchfield'; 'Lloyd Dupont'; 'John D. Mitchell'; 'ANTLR
Interest'
Subject: RE: [antlr-interest] submission of patches, fixes, other
contributions



If lawsuits could not be used as an element of corporate warfare, length
would not matter.  As it is, one goal of an Open Source license is to
make lawsuits untenable, whether by secondary (and primary) developers
against users or by users against developers or by third parties (as in
the SCO/IBM case).  With lawyers involved, clauses get added to
eliminate sources of lawsuits (and it doesn't matter if the sources
would be spurious or not:  lawsuits can tie up day-to-day operations of
a business) and the license grows.

 

For some perspective on how Open Source lawsuits can be used in
corporate warfare, see

http://informationweek.com/story/showArticle.jhtml?articleID=160902263

http://news.com.com/2010-1071_3-1020184.html

and other articles relating to the SCO/IBM Linux lawsuit.  Also, take a
look at

http://www.cioinsight.com/article2/0,1397,1779913,00.asp

for an example of copyright abuse in other arenas.

 

Fortunately, Open Source software usually benefits all parties involved
so lawsuits are uncommon.  Unfortunately, that also means that Open
Source licenses have not adequately been tested in court.

 

--Loring

 

> -----Original Message-----

> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-

> bounces@antlr.org] On Behalf Of Scott Stanchfield

> Sent: Monday, May 30, 2005 6:15 PM

> To: 'Lloyd Dupont'; 'John D. Mitchell'; 'ANTLR Interest'

> Subject: RE: [antlr-interest] submission of patches, fixes, other

> contributions

> 

> > Is it important to have long licence document to make it valid?

> 

> The name of the game is "Cover Thy Ass"

> 

> -- Scott

> 

 



****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050601/8767a2d0/attachment.html
From Anthony.Youngman at eca-international.com  Wed Jun  1 06:48:39 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Jun  1 06:48:43 2005
Subject: [antlr-interest] submission of patches, fixes, other contributions
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF1E@lnml1.eca-international.local>

Why is it hypocritical?

If *I* drive recklessly, you are arguing that it's fair to blame the
occupants of the car I hit for the accident (equally with me, of course
:-)

The *contributor* is placing the project at risk by virtue of his
contribution, therefore he has a duty to certify that he has behaved
properly in making that contribution. You cannot ask the USER to certify
that the CONTRIBUTOR has behaved himself. Therefore you (have to) place
a higher duty on the contributor.

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of John D. Mitchell
Sent: 31 May 2005 16:58
To: Gerald B. Rosenberg
Cc: ANTLR Interest
Subject: Re: [antlr-interest] submission of patches, fixes, other
contributions

>>>>> "Gerald" == Gerald B Rosenberg <gbr@newtechlaw.com> writes:
[...]

> Now to your point.  What I suggest is not hypocritical, but you are
> correct that the protections are asymmetric.  The free software market
> place is not zero sum gain, but zero sum.  Wish the economic model was
> different, but without monetization, there is no rational way to
transfer
> risk in any direction.  In such situations, the only way to remain
viable
> is to minimize as much as possible risk from the outset.

It's both asymmetric and hypocritical.  One of the big points about the
intent of the F/OSS world is the removal of hypocrisy.  I.e. the point
of
all of this is *more* than just the legal minimums.

[...]

> As a practical matter, regardless of any technically legal asymmetry
in
> the license wording (and to a certainty if the risk is equally
shared),
> the contributor, the project and the community will all likely loose
> everything in defense of even a minimally credible legal challenge.

Yes, indeed, transaction costs in the current legal climate are utterly
ridiculous.

As to the "likely to loose everything", that's still a very open
question.

Take care,
	John


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From johnm-antlr at non.net  Wed Jun  1 06:53:11 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Wed Jun  1 06:52:53 2005
Subject: [antlr-interest] submission of patches, fixes, other contributions
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FF1E@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE4040128FF1E@lnml1.eca-international.local>
Message-ID: <17053.48583.344543.365726@despot.non.net>

>>>>> "Anthony" == Anthony Youngman <Anthony.Youngman@eca-international.com> writes:
[...]

> Why is it hypocritical?

> If *I* drive recklessly, you are arguing that it's fair to blame the
> occupants of the car I hit for the accident (equally with me, of course
> :-)

> The *contributor* is placing the project at risk by virtue of his
> contribution, therefore he has a duty to certify that he has behaved
> properly in making that contribution. You cannot ask the USER to certify
> that the CONTRIBUTOR has behaved himself. Therefore you (have to) place a
> higher duty on the contributor.

Please read this thread again.  The hypocrisy that I've talked about is the
difference between (the draft of) what's required *of* the contributor and
what's being offered/warranted by Ter *to* the users.

Take care,
	John

From Anthony.Youngman at eca-international.com  Wed Jun  1 07:03:22 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Jun  1 07:03:25 2005
Subject: [antlr-interest] submission of patches, fixes, other contributions
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF1F@lnml1.eca-international.local>

Given that the "two-clause BSD" without the advertising clause, and the
MIT/X11 licence are pretty much identical, it would be better to say
"MIT/X11" and leave BSD out of it entirely...

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Brian Smith
Sent: 29 May 2005 23:59
To: antlr-interest@antlr.org
Subject: Re: [antlr-interest] submission of patches, fixes, other
contributions


I think that you should just remove the second sentence. Also, *which*
version of the BSD license are you referring to? I think it would be
better to include the license right there on the page, so the
contributor knows what he is agreeing to.



****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From Anthony.Youngman at eca-international.com  Wed Jun  1 07:22:24 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Jun  1 07:22:27 2005
Subject: [antlr-interest] a request about "reply-all" to list
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF20@lnml1.eca-international.local>

Okay, I'm top-posting, which I actually think is naff, but unfortunately
(a) I don't have any choice about mail-client, and (b) I don't have any
choice about how it's configured. (Oh, and bottom posting is just as bad
- they both indicate a lack of concern about other people.)

The fact is, nettiquette was thrashed out as a very workable setup by
people who knew what they were doing. Things only got screwed up when a
couple of big corporations let hordes of clueless lusers onto the net.

Oh - by the way - which server are you going to "fix"? Because as far as
I'm concerned, Ter's server has nothing to fix, and I don't know what
other server has anything to do with this list.

Actually, there might be something to fix. I *think* list servers aren't
supposed to muck about with message ids, and any sensible mail client
should handle duplicate messages. But I guess that's too much to ask for
a lot of programmers ...

At the end of the day, the list is designed to "fail safe". I'm on
plenty of others that don't, and it gets embarrassing the amount of
private mail that ends up where it shouldn't be ... or the lists that
WON'T let you "reply sender" so you *have* to reply to the list even
when it ought to be taken to private mail :-(

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Scott Stanchfield
Sent: 01 June 2005 02:12
To: 'Maurice van der Pot'; antlr-interest@antlr.org
Subject: RE: [antlr-interest] a request about "reply-all" to list

Ahem. 

One server. Many users.

Where does it make sense to fix the problem. Hmmmm...

Oh, I know, let's blame the many different clients that the many
different
users like and use.

If you find top-posting annoying, the server should allow you to
reformat
messages (like this one)that are only top posts. Some folks like
top-posting, esp if reading individual mails. I realize it's harder for
digest-readers, but the constant page-forward requirement of bottom
posting
makes it hard for single-mail readers. In short, the server should be
smart
enough to have a reformatting option.

Later,
-- Scott

> Maybe you should be blaming your mail client instead. The 
> client I'm using allows me to define lists I am subscribed to 
> and has 3 options for
> replying: reply (to author only, which should be the 
> reply-to), list reply (to the list address that I defined) 
> and group reply (to all recipients).
> 
> And while we're talking about things that irritate, I find 
> top-posting and quoting entire messages without using them as 
> context to be quite annoying as well.




****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From open.zone at virgin.net  Wed Jun  1 07:47:10 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  1 07:33:27 2005
Subject: [antlr-interest] submission of patches, fixes, other contributions
In-Reply-To: <17053.48583.344543.365726@despot.non.net>
Message-ID: <000201c566b8$cbdad8e0$6502a8c0@hercules>

> >>>>> "Anthony" == Anthony Youngman 
> >>>>> <Anthony.Youngman@eca-international.com> writes:
> [...]
> 
> > Why is it hypocritical?
> 
> > If *I* drive recklessly, you are arguing that it's fair to 
> blame the 
> > occupants of the car I hit for the accident (equally with me, of 
> > course
> > :-)
> 
> > The *contributor* is placing the project at risk by virtue of his 
> > contribution, therefore he has a duty to certify that he 
> has behaved 
> > properly in making that contribution. You cannot ask the USER to 
> > certify that the CONTRIBUTOR has behaved himself. Therefore 
> you (have 
> > to) place a higher duty on the contributor.
> 
> Please read this thread again.  The hypocrisy that I've 
> talked about is the difference between (the draft of) what's 
> required *of* the contributor and what's being 
> offered/warranted by Ter *to* the users.

Ter's primary concern is the minimizing risks to the ANTLR project (and by
extension it's users in some cases) from third party contributions. Wording
the license agreement to transfer risk from users to the project jeopardizes
that goal (and is somewhat na?ve from a legal stance). 

Best he can do is to ensure that he has a record of contributor
agreements/declarations that the users can access if they ever find
themselves embroiled in any ANTLR-related action related to third party
contributions.

Cheers,

Micheal
ANTLR/C#

From sk at z.pl  Wed Jun  1 08:20:09 2005
From: sk at z.pl (Sebastian Kaliszewski)
Date: Wed Jun  1 08:15:49 2005
Subject: [antlr-interest] a request about "reply-all" to list
Message-ID: <429DD229.7000009@z.pl>

Gennerally I agree that reply-to: should point to the list. I allmost never 
want to reply directly to the mail autor, 99.99% of the time I want my reply 
to go to the list (and as in all cases of usenet newsgroups an personal 
email I hit standard reply-to: button, my list mails accidentially go to 
sender instead of to the group).


Scott Stanchfield wrote:

 > If you find top-posting annoying, the server should allow you to reformat
 > messages (like this one)that are only top posts.


It's virtually imposible. Quite often people precede reply with few short 
sentences then quote and post propely. Then people use varius ways for 
quotation, then many mail clients break quotations (quotations+lines get too 
long and get splitted). You're proposing something designed like MS-Word -- 
it does something but God help you, if you want to grok the circumstasnces 
when it does that something.

 > Some folks like
 > top-posting, esp if reading individual mails.


Try this:

 > Because it messes up the order in which people normally read text.
 >> Why is it such a bad thing?
 >>> Top-posting.
 >>>> What is the most annoying thing on usenet and in e-mail?


rgds
-- 
Sebastian Kaliszewski
-------------- next part --------------
An embedded message was scrubbed...
From: Sebastian Kaliszewski <Sebastian.Kaliszewski@softax.com.pl>
Subject: Re: [antlr-interest] a request about "reply-all" to list
Date: Wed, 01 Jun 2005 16:36:04 +0200
Size: 1800
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20050601/5ed104bf/antlr-interestarequestaboutreply-alltolist.mht
From parrt at cs.usfca.edu  Wed Jun  1 09:39:45 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  1 09:39:47 2005
Subject: [antlr-interest] Stumped!  Nondeterminism between...
In-Reply-To: <429D043D.2040903@conformative.com>
References: <429D043D.2040903@conformative.com>
Message-ID: <8F271953-D05C-4F2D-AD2B-5C74F1F98623@cs.usfca.edu>


On May 31, 2005, at 5:41 PM, Paul Snow wrote:

> I don't see this nondeterminism...

I don't either!  How can '#' be matched by COLUMN I ask.  Weird.  Can  
you try to reduce this to a the bare minimum so we can expose the  
problem?

Thanks!
Ter

From teddemc at yahoo.com  Wed Jun  1 09:54:03 2005
From: teddemc at yahoo.com (Matthew Tedder)
Date: Wed Jun  1 09:54:08 2005
Subject: [antlr-interest] Advice on C++ output
Message-ID: <20050601165404.78732.qmail@web52905.mail.yahoo.com>


ok.. I have a nice little lexer/grammar going in java,
so I think it's time to get serious with an
implementation in C++.  But I am lost among the
documentation for the C++ glue code and such.

Can someone just quickly point me to a complete
example or tutorial on this?  All I am seeing so far
are partial snippets and clues here and there.

Matthew


		
__________________________________ 
Yahoo! Mail 
Stay connected, organized, and protected. Take the tour: 
http://tour.mail.yahoo.com/mailtour.html 

From gbr at newtechlaw.com  Wed Jun  1 10:18:26 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed Jun  1 10:14:36 2005
Subject: [antlr-interest] Any way to introduce a base class for
	TreeParser/Lexer/Parser?
In-Reply-To: <8F271953-D05C-4F2D-AD2B-5C74F1F98623@cs.usfca.edu>
References: <429D043D.2040903@conformative.com>
	<429D043D.2040903@conformative.com>
Message-ID: <4.3.2.7.2.20050601094533.06a3de38@morpho.newtechlaw.com>

I would like to remove as much as possible the action code from the grammar 
file.

This could be easily done if, in the grammar file, I could specify that the 
TreeParser (or Parser or Lexer) extends from my own custom action library 
class that otherwise maintains the necessary class hierarchy, i.e., 
inherits from antlr.TreeParser.  Seems that the "extends" clauses are 
referencing keywords rather than actual class names.

Is there some alternate notation for specifying a base class that I am 
missing?  Or, is there a better pattern for implementing externalized 
action code?  Does 3.0 provide any additional features?

Thanks,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From paul.snow at conformative.com  Wed Jun  1 10:38:41 2005
From: paul.snow at conformative.com (Paul Snow)
Date: Wed Jun  1 10:38:46 2005
Subject: [antlr-interest] Stumped!  Nondeterminism between...
In-Reply-To: <429D043D.2040903@conformative.com>
References: <429D043D.2040903@conformative.com>
Message-ID: <429DF2A1.3070307@conformative.com>

Sorry!  The code I sent was only getting *one* nondeterminism, the one 
between
COLUMN and COMMENT with the origional version I sent, i.e. with the line

             *   COLUMN:  COLUMN_CHARS ;*

I get both error messages with the line:

*                COLUMN:  ~'/' COLUMN_CHARS ;

*And I am working to reduce the grammer as well.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050601/22812d67/attachment.html
From open.zone at virgin.net  Wed Jun  1 10:59:49 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  1 10:46:06 2005
Subject: [antlr-interest] Any way to introduce a base class
	forTreeParser/Lexer/Parser?
In-Reply-To: <4.3.2.7.2.20050601094533.06a3de38@morpho.newtechlaw.com>
Message-ID: <000e01c566d3$b5206960$6502a8c0@hercules>

> Is there some alternate notation for specifying a base class 
> that I am 
> missing?

Check out the ParseTreeDebug example.

  class TinyCParser extends Parser("ParseTreeDebugParser");


From paul at esnow.us  Wed Jun  1 11:19:16 2005
From: paul at esnow.us (Paul Snow)
Date: Wed Jun  1 11:19:23 2005
Subject: [antlr-interest] Stumped!  Nondeterminism between...
In-Reply-To: <429D043D.2040903@conformative.com>
References: <429D043D.2040903@conformative.com>
Message-ID: <429DFC24.7020101@esnow.us>


A new day dawns and all becomes clear... Here is what I needed for
the definition of COLUMN:

*COLUMN : (~('#' | '\'' | '"' | '/' | '\t'| ' ') | ('/' ~('*' | ' ' | 
'\t'| '/' | '\n' | '\r' | '\'' | '#'))) (COLUMN_CHAR)+ ;

*I had to prohibit COLUMN from starting out like either a STRING or a 
COMMENT.

Thanks for your help!  Just trying to phrase the question led to the answer!

Paul Snow
Policy Smart Applications
512 627 8841

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050601/a34033e6/attachment-0001.html
From parrt at cs.usfca.edu  Wed Jun  1 11:39:12 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  1 11:38:43 2005
Subject: [antlr-interest] Any way to introduce a base class for
	TreeParser/Lexer/Parser?
In-Reply-To: <4.3.2.7.2.20050601094533.06a3de38@morpho.newtechlaw.com>
References: <429D043D.2040903@conformative.com>
	<429D043D.2040903@conformative.com>
	<4.3.2.7.2.20050601094533.06a3de38@morpho.newtechlaw.com>
Message-ID: <0CB4E96A-5067-4C69-A8D3-635970BA5627@cs.usfca.edu>


On Jun 1, 2005, at 10:18 AM, Gerald B. Rosenberg wrote:

> I would like to remove as much as possible the action code from the  
> grammar file.

A worthy goal :)

> This could be easily done if, in the grammar file, I could specify  
> that the TreeParser (or Parser or Lexer) extends from my own custom  
> action library class that otherwise maintains the necessary class  
> hierarchy, i.e., inherits from antlr.TreeParser.  Seems that the  
> "extends" clauses are referencing keywords rather than actual class  
> names.

I believe

class Foo extends Parser(GeraldsCoolSuperClass);

will work.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From gbr at newtechlaw.com  Wed Jun  1 11:54:03 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed Jun  1 11:50:21 2005
Subject: [antlr-interest] Any way to introduce a base class
	forTreeParser/Lexer/Parser?
Message-ID: <4.3.2.7.2.20050601115338.06f3ef00@morpho.certiv.net>

At 06:59 PM 6/1/2005, Micheal J wrote:

> > Is there some alternate notation for specifying a base class
> > that I am
> > missing?
>
>Check out the ParseTreeDebug example.
>
>   class TinyCParser extends Parser("ParseTreeDebugParser");

Exactly what I was looking for.  Thanks much!
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net


From ewbank at gmail.com  Wed Jun  1 12:54:42 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Jun  1 12:54:45 2005
Subject: [antlr-interest] Any way to introduce a base class
	forTreeParser/Lexer/Parser?
In-Reply-To: <4.3.2.7.2.20050601115338.06f3ef00@morpho.certiv.net>
References: <4.3.2.7.2.20050601115338.06f3ef00@morpho.certiv.net>
Message-ID: <dd3a065f05060112547e3e4354@mail.gmail.com>

Gerald,

> > > Is there some alternate notation for specifying a base class
> >   class TinyCParser extends Parser("ParseTreeDebugParser");
> Exactly what I was looking for.  Thanks much!

Thank you for starting this thread; I'd missed that in the manual and
was doing some hideous #include stuff for my C++ grammars.

Now I know the "better way" ? - in ANTLR

- Bryan
From ewbank at gmail.com  Wed Jun  1 12:57:56 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Jun  1 12:57:58 2005
Subject: [antlr-interest] Advice on C++ output
In-Reply-To: <20050601165404.78732.qmail@web52905.mail.yahoo.com>
References: <20050601165404.78732.qmail@web52905.mail.yahoo.com>
Message-ID: <dd3a065f050601125756c2b894@mail.gmail.com>

On 6/1/05, Matthew Tedder <teddemc@yahoo.com> wrote:
> Can someone just quickly point me to a complete [C++]
> example or tutorial on this?

There's several examples in the distro, in antlr-2.7.x/examples/cpp. 
The flexLexer in particular was useful for me.

In general, if you replace "." with "->" in the action code, you are
very close to correct ;-).
From scott at javadude.com  Wed Jun  1 18:04:50 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Jun  1 18:05:26 2005
Subject: [antlr-interest] a request about "reply-all" to list
In-Reply-To: <429DD229.7000009@z.pl>
Message-ID: <200506020158.j521wCT3011055@s2.eroute.net>

>  > If you find top-posting annoying, the server should allow 
> you to reformat  > messages (like this one)that are only top posts.
> 
> 
> It's virtually imposible. 

Not at all. There are three classes of posts:

1) reply is only at top
2) reply is only at bottom
3) reply is embedded

For #1 and #2, reformatting is easy. For #2, reformatting is never
necessary.

> Try this:
> 
>  > Because it messes up the order in which people normally read text.
>  >> Why is it such a bad thing?
>  >>> Top-posting.
>  >>>> What is the most annoying thing on usenet and in e-mail?

Utterly contrived example. And moreso, people concentrate on the top-level
text and only use nested stuff for context.

As Anthony posted, top or bottom posting ignores the concerns of those who
prefer the opposite. I prefer top posts so I can see most of the reply when
previewing messages, as do many other folks. That way I can quickly skip
tangents.

Later,
-- Scott


From scott at javadude.com  Wed Jun  1 18:08:40 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Wed Jun  1 18:08:47 2005
Subject: [antlr-interest] a request about "reply-all" to list
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FF20@lnml1.eca-international.local>
Message-ID: <200506020202.j52223T1013972@s2.eroute.net>

> The fact is, nettiquette was thrashed out as a very workable 
> setup by people who knew what they were doing.

No no no! Netiquette was thrashed out by a small group of know-it-alls who
*think* they knew what's best.

The Simpson's episode where the "smart people" take charge of Springfield
comes to mind...

> Things only 
> got screwed up when a couple of big corporations let hordes 
> of clueless lusers onto the net.

I was on long before then, and have evolved since then. Netiquette needs to
adapt.

What if we still killed people for arguing that the world is not flat or the
center of the universe?

> Oh - by the way - which server are you going to "fix"? 

The mailing list server.


Sheesh! This is the only mailing list I've EVER been on that acts this way.
Every other list sets the proper headers.

-- Scott


From parrt at cs.usfca.edu  Wed Jun  1 20:18:51 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  1 20:18:20 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
Message-ID: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>

Howdy!

I can't believe it!  Finally, I have something that people can look  
at for ANTLR v3:

http://www.antlr.org/download/antlr-3.0ea1.tar.gz
http://www.antlr.org/download/examples-v3.tar.gz

and Jean Bovet has created a 1.0ea1 release of his excellent ANTLRWorks:

http://www.antlr.org/works/index.html

The ANTLRWorks jar has everything you need including ANTLR 3.0ea1.

Per the license in LICENSE.txt, this software is not guaranteed to  
work and might even destroy all life on this planet.

ANTLR and ANTLRWorks are released under the BSD license, though  
ANTLRWorks has no source with it at the moment.

Feel free to send comments to the antlr-interest list or if you want  
to send patches:

http://www.antlr.org/misc/feedback

(minor tweak to the contribution license coming tomorrow AM; had even  
more lawyers look at it <snicker>)

Expect this software to change over the summer (syntax+libraries  
possibly) with hopefully a number of early access releases.  Expect  
more language targets.  Ric Klaren is working on the C templates and  
the C# folks are reportedly working on the C# templates (should be  
easy given it's similarity to Java).

The only thing I can tell you is that it seems to work for the  
examples-v3.tar.gz examples.

Just so you know, you will be asked to "register" when you first  
bring up ANTLRWorks.

Terence
PS    Looks like Europe and Asia get it first, given the timing. :)
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From jimi at temporal-wave.com  Wed Jun  1 19:43:43 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed Jun  1 20:20:26 2005
Subject: [antlr-interest] a request about "reply-all" to
	lizzzzzzzzzzzzZZZZT!
Message-ID: <B36CCC332A32904F8FA3DE134A23533608A3FC@wavemachine.temporal-wave.com>

Blah blah reply-to blah blah bloody blah...
 
Personally, I would rather see some discussions about ANTLR, grammar, parsing and so on than the same old BS about reply-to that I have seen in every list I have ever owned, joined or browsed ever ever ever.
 
How about:

*	
	To all intent and purpose, this is Terence's list;
*	
	He says he ain't changin' it;
*	
	Let's move on and top post, bottom post, interleave as you see fit;
*	
	If you want to keep going on about it, take it to alt.mail.headers.nonterminating.rule.boring.repeat.die.die.die;

<breath> ;-) ... just trying to somewhat lightly ask that we stop cluttering the list with this thing now. Please? Pretty please?
 
Now, when can I get my hands on ANTLR 3?  I have been sitting here for years using ANTLR, doing nothing for it, paying nothing for it and generally whinging about minor bugs and problems in the previous releases that I paid nothing for either. I am bored with that and it's about time I started moaning about getting ANTLR 3.
 
Actually, I did contribute some C++ generation bug fixes, but a fellow programmer submitted them and claimed the credit. Therefore I shall be suing the pants off Terrence (and everyone within 2 degrees of separation) immediately for the irreparable harm that he/they has/may have caused me by giving away [under certain license conditions] tools [without warranty] and code [and the odd comment on occasion] on the internet. That is if the company that I owned at the time does not sue Terrence, myself and my goldfish for contributing code to something that helped them to make a pile of cash.
 
Right, now, seriously, when CAN I have ANTLR 3? Amongst other things, I want to, sorry, have to, generate C for various reasons and it seems that this template thingy will do the trick. (I don't mind if it sends Terrence the telephone numbers of all my girlfirends and stats on how many times I press backspace.)
 
Jim Idle
 
 
 
 
 
This just here to annoy the bottom posters or something.

________________________________

From: antlr-interest-bounces@antlr.org on behalf of Scott Stanchfield
Sent: Wed 6/1/2005 6:04 PM
To: 'Sebastian Kaliszewski'; antlr-interest@antlr.org
Subject: RE: [antlr-interest] a request about "reply-all" to list



>  > If you find top-posting annoying, the server should allow





From parrt at cs.usfca.edu  Wed Jun  1 20:24:29 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  1 20:23:59 2005
Subject: [antlr-interest] a request about "reply-all" to
	lizzzzzzzzzzzzZZZZT!
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A3FC@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A23533608A3FC@wavemachine.temporal-wave.com>
Message-ID: <1FE90272-5FFC-4E90-B1D3-2D7CC1B78705@cs.usfca.edu>

On Jun 1, 2005, at 7:43 PM, Jim Idle wrote:
> Blah blah reply-to blah blah bloody blah...
>
> Personally, I would rather see some discussions about ANTLR,  
> grammar, parsing and so on than the same old BS about reply-to that  
> I have seen in every list I have ever owned, joined or browsed ever  
> ever ever.

Yeah, it's getting old.

> How about:
>
> *
>     To all intent and purpose, this is Terence's list;
> *
>     He says he ain't changin' it;
> *
>     Let's move on and top post, bottom post, interleave as you see  
> fit;

Hooray!

> <breath> ;-) ... just trying to somewhat lightly ask that we stop  
> cluttering the list with this thing now. Please? Pretty please?

Hooray!

> Now, when can I get my hands on ANTLR 3?

RIGHT NOW!

> I have been sitting here for years using ANTLR, doing nothing for  
> it, paying nothing for it and generally whinging about minor bugs  
> and problems in the previous releases that I paid nothing for  
> either. I am bored with that and it's about time I started moaning  
> about getting ANTLR 3.

begin moaning!

> Actually, I did contribute some C++ generation bug fixes, but a  
> fellow programmer submitted them and claimed the credit. Therefore  
> I shall be suing the pants off Terrence (and everyone within 2  
> degrees of separation) immediately for the irreparable harm that he/ 
> they has/may have caused me by giving away [under certain license  
> conditions] tools [without warranty] and code [and the odd comment  
> on occasion] on the internet. That is if the company that I owned  
> at the time does not sue Terrence, myself and my goldfish for  
> contributing code to something that helped them to make a pile of  
> cash.

<ha hah hahahahahaha>  Uh, you're kidding right? ;)

> Right, now, seriously, when CAN I have ANTLR 3? Amongst other  
> things, I want to, sorry, have to, generate C for various reasons  
> and it seems that this template thingy will do the trick. (I don't  
> mind if it sends Terrence the telephone numbers of all my  
> girlfirends and stats on how many times I press backspace.)


> This just here to annoy the bottom posters or something.

I am deeply offended and shall put something in the software to wipe  
your drive if I see your username. ;)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From gbr at newtechlaw.com  Wed Jun  1 21:28:25 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed Jun  1 21:24:36 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1
  released!
In-Reply-To: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>
Message-ID: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>

Very nice!

Are there any differences in the recognized grammar syntax?  Is there a 
list of the differences/enhancements?

Also, ANTLRWorks runs under Eclipse just fine as an external Ant task 
(attached file) -- quick and dirty, but could be improved if there were 
command line options to specify an initial grammar file or a starting 
directory containing grammar files.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: AntlrWorks.xml
Type: application/xml
Size: 644 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050601/9f70f630/AntlrWorks.rdf
-------------- next part --------------
----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net
From prashant.deva at gmail.com  Wed Jun  1 23:45:18 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Wed Jun  1 23:45:21 2005
Subject: [antlr-interest] Antlr Studio screenshot
Message-ID: <41fed8f80506012345215939c@mail.gmail.com>

Antlr Studio for Eclipse screenshot at-
http://antlrstudio.com/screenshot.png

Please comment.

PRASHANT
From antlr-list at arizona-software.ch  Thu Jun  2 00:40:54 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun  2 00:41:03 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
Message-ID: <1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>

> Also, ANTLRWorks runs under Eclipse just fine as an external Ant task
> (attached file) -- quick and dirty, but could be improved if there  
> were
> command line options to specify an initial grammar file or a starting
> directory containing grammar files.
>

Great to hear that! I will had some command line parameters to let  
you specify the initial file(s) ;-)

Jean

From ric.klaren at gmail.com  Thu Jun  2 01:24:25 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Jun  2 01:24:27 2005
Subject: [antlr-interest] a request about "reply-all" to
	lizzzzzzzzzzzzZZZZT!
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533608A3FC@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A23533608A3FC@wavemachine.temporal-wave.com>
Message-ID: <bc607a4e0506020124dfb9306@mail.gmail.com>

On 6/2/05, Jim Idle <jimi@temporal-wave.com> wrote:
> Personally, I would rather see some discussions about ANTLR, grammar, parsing and so 
> on than the same old BS about reply-to that I have seen in every list I have ever owned, 
> joined or browsed ever ever ever.

Some sanity seems to prevail in the world ;)

> Right, now, seriously, when CAN I have ANTLR 3? Amongst other things, I want to, sorry, 
> have to, generate C for various reasons and it seems that this template thingy will do the 
> trick. (I don't mind if it sends Terrence the telephone numbers of all my girlfirends and
> stats on how many times I press backspace.)

The C stuff is unfinished atm there's some templates included (unless
Terence left them out for distribution) but those are mid development
things. Did not get to updating them to the latests changes. Somewhere
next week I hope to continue on them. I did have a more or less
working parser/lexer running at one point, so there's hope ;)

Cheers,

Ric
From prashant.deva at gmail.com  Thu Jun  2 02:43:00 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 02:43:02 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f805060202405347b838@mail.gmail.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>
	<41fed8f805060202405347b838@mail.gmail.com>
Message-ID: <41fed8f805060202432a305241@mail.gmail.com>

It seems to be pretty buggy.
Thrice i got an out of memory msg. I got 512 mb ram.

I tried to open a loarge 10,000 line file. It never opened. went out of memory.

Start typing something and a java console pops up printing the stack
trace of all the exceptions.

Hide all actions , needs to check whether its inside a comment

PRASHANT

On 6/2/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
> > Also, ANTLRWorks runs under Eclipse just fine as an external Ant task
> > (attached file) -- quick and dirty, but could be improved if there
> > were
> > command line options to specify an initial grammar file or a starting
> > directory containing grammar files.
> >
>
> Great to hear that! I will had some command line parameters to let
> you specify the initial file(s) ;-)
>
> Jean
>
>
From prashant.deva at gmail.com  Thu Jun  2 02:43:57 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 02:43:58 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f805060202432a305241@mail.gmail.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>
	<41fed8f805060202405347b838@mail.gmail.com>
	<41fed8f805060202432a305241@mail.gmail.com>
Message-ID: <41fed8f805060202434cc81a44@mail.gmail.com>

Also highlighting seems to just plain wrong, comments are half
highlighted, they extend into the rules.

PRASHANT

On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> It seems to be pretty buggy.
> Thrice i got an out of memory msg. I got 512 mb ram.
> 
> I tried to open a loarge 10,000 line file. It never opened. went out of memory.
> 
> Start typing something and a java console pops up printing the stack
> trace of all the exceptions.
> 
> Hide all actions , needs to check whether its inside a comment
> 
> PRASHANT
> 
> On 6/2/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
> > > Also, ANTLRWorks runs under Eclipse just fine as an external Ant task
> > > (attached file) -- quick and dirty, but could be improved if there
> > > were
> > > command line options to specify an initial grammar file or a starting
> > > directory containing grammar files.
> > >
> >
> > Great to hear that! I will had some command line parameters to let
> > you specify the initial file(s) ;-)
> >
> > Jean
> >
> >
>
From antlr at shmuelhome.mine.nu  Thu Jun  2 02:50:02 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Thu Jun  2 02:51:53 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f805060202432a305241@mail.gmail.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>	<41fed8f805060202405347b838@mail.gmail.com>
	<41fed8f805060202432a305241@mail.gmail.com>
Message-ID: <429ED64A.4000907@shmuelhome.mine.nu>

Prashant Deva wrote:

>It seems to be pretty buggy.
>Thrice i got an out of memory msg. I got 512 mb ram.
>
>I tried to open a loarge 10,000 line file. It never opened. went out of memory.
>
>Start typing something and a java console pops up printing the stack
>trace of all the exceptions.
>
>Hide all actions , needs to check whether its inside a comment
>
>PRASHANT
>  
>
Also, generate will declare success on an invalid grammar, but generate 
nothing.


-- 
No virus found in this outgoing message.
Checked by AVG Anti-Virus.
Version: 7.0.322 / Virus Database: 267.4.1 - Release Date: 6/2/2005

From prashant.deva at gmail.com  Thu Jun  2 03:11:24 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 03:12:20 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <429ED64A.4000907@shmuelhome.mine.nu>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>
	<41fed8f805060202405347b838@mail.gmail.com>
	<41fed8f805060202432a305241@mail.gmail.com>
	<429ED64A.4000907@shmuelhome.mine.nu>
Message-ID: <41fed8f805060203115cdfcfe@mail.gmail.com>

Also the diagrams don't show all the elements.

PRASHANT

On 6/2/05, shmuel siegel <antlr@shmuelhome.mine.nu> wrote:
> Prashant Deva wrote:
> 
> >It seems to be pretty buggy.
> >Thrice i got an out of memory msg. I got 512 mb ram.
> >
> >I tried to open a loarge 10,000 line file. It never opened. went out of memory.
> >
> >Start typing something and a java console pops up printing the stack
> >trace of all the exceptions.
> >
> >Hide all actions , needs to check whether its inside a comment
> >
> >PRASHANT
> >
> >
> Also, generate will declare success on an invalid grammar, but generate
> nothing.
> 
> 
> --
> No virus found in this outgoing message.
> Checked by AVG Anti-Virus.
> Version: 7.0.322 / Virus Database: 267.4.1 - Release Date: 6/2/2005
> 
>
From rvjansen at xs4all.nl  Thu Jun  2 03:46:53 2005
From: rvjansen at xs4all.nl (rvjansen@xs4all.nl)
Date: Thu Jun  2 03:46:56 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f805060202432a305241@mail.gmail.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>
	<41fed8f805060202405347b838@mail.gmail.com>
	<41fed8f805060202432a305241@mail.gmail.com>
Message-ID: <15687.167.202.196.71.1117709213.squirrel@167.202.196.71>

Prashant,

having 512 M does not mean it is used. Did you give the VM more than the
standard 64M? You could try java -Xms256M -Xmx256M


> It seems to be pretty buggy.
> Thrice i got an out of memory msg. I got 512 mb ram.
>
> I tried to open a loarge 10,000 line file. It never opened. went out of
> memory.
>
> Start typing something and a java console pops up printing the stack
> trace of all the exceptions.
>
> Hide all actions , needs to check whether its inside a comment
>


From prashant.deva at gmail.com  Thu Jun  2 04:25:41 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 04:25:44 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <15687.167.202.196.71.1117709213.squirrel@167.202.196.71>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>
	<41fed8f805060202405347b838@mail.gmail.com>
	<41fed8f805060202432a305241@mail.gmail.com>
	<15687.167.202.196.71.1117709213.squirrel@167.202.196.71>
Message-ID: <41fed8f8050602042522d7bdb1@mail.gmail.com>

well 64 mb is a LOT of mem to occupy for opening a 184kb file.

PRASHANT

On 6/2/05, rvjansen@xs4all.nl <rvjansen@xs4all.nl> wrote:
> Prashant,
> 
> having 512 M does not mean it is used. Did you give the VM more than the
> standard 64M? You could try java -Xms256M -Xmx256M
> 
> 
> > It seems to be pretty buggy.
> > Thrice i got an out of memory msg. I got 512 mb ram.
> >
> > I tried to open a loarge 10,000 line file. It never opened. went out of
> > memory.
> >
> > Start typing something and a java console pops up printing the stack
> > trace of all the exceptions.
> >
> > Hide all actions , needs to check whether its inside a comment
> >
> 
> 
>
From rvjansen at xs4all.nl  Thu Jun  2 04:42:32 2005
From: rvjansen at xs4all.nl (rvjansen@xs4all.nl)
Date: Thu Jun  2 04:42:35 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f8050602042522d7bdb1@mail.gmail.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com> 
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch> 
	<41fed8f805060202405347b838@mail.gmail.com> 
	<41fed8f805060202432a305241@mail.gmail.com> 
	<15687.167.202.196.71.1117709213.squirrel@167.202.196.71>
	<41fed8f8050602042522d7bdb1@mail.gmail.com>
Message-ID: <7573.167.202.196.71.1117712552.squirrel@167.202.196.71>

> well 64 mb is a LOT of mem to occupy for opening a 184kb file.
>
Trust me, for any reasonable Swing program it is next to nothing. I have
come to accept this, although that was hard for someone who's large
Assembler-XF programs counted 3-4K instructions and then was shocked at
the median size of a COBOL program at a whopping 32K.

From stefan at amiq.ro  Thu Jun  2 05:20:31 2005
From: stefan at amiq.ro (stefan)
Date: Thu Jun  2 05:18:50 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <7573.167.202.196.71.1117712552.squirrel@167.202.196.71>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<41fed8f8050602042522d7bdb1@mail.gmail.com>
	<7573.167.202.196.71.1117712552.squirrel@167.202.196.71>
Message-ID: <200506021520.31844.stefan@amiq.ro>

On Thursday 02 June 2005 14:42, rvjansen@xs4all.nl wrote:
> > well 64 mb is a LOT of mem to occupy for opening a 184kb file.
>
> Trust me, for any reasonable Swing program it is next to nothing. I have
> come to accept this, although that was hard for someone who's large
> Assembler-XF programs counted 3-4K instructions and then was shocked at
> the median size of a COBOL program at a whopping 32K.

   I've build few swing applications and I can say swing it's quite slow and 
consumes a lot of resources.
   I consider this is not the most important part as long as:
  - the application is reliable from a functional point of view
  - small response time for simple operations
  - it offers me information of the ongoing long operations
  - presents exceptions in a understandable way (I prefer a simple message 
like "Oooops! Bad click!" to a stack trace)
  - I have the resources (I think these days 256M of RAM is affordable)

Stefan.
From csnyder at alumni.ncsu.edu  Thu Jun  2 06:24:45 2005
From: csnyder at alumni.ncsu.edu (Chris Snyder)
Date: Thu Jun  2 06:24:54 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f805060202434cc81a44@mail.gmail.com>
Message-ID: <20050602132448.DB0252A8CE@bilbo.mebtel.net>

I noticed this also. Parts of words highlighted in mine.

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
Sent: Thursday, June 02, 2005 5:44 AM
To: antlr-interest@antlr.org
Subject: Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!

Also highlighting seems to just plain wrong, comments are half
highlighted, they extend into the rules.

PRASHANT

On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> It seems to be pretty buggy.
> Thrice i got an out of memory msg. I got 512 mb ram.
> 
> I tried to open a loarge 10,000 line file. It never opened. went out of
memory.
> 
> Start typing something and a java console pops up printing the stack
> trace of all the exceptions.
> 
> Hide all actions , needs to check whether its inside a comment
> 
> PRASHANT
> 
> On 6/2/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
> > > Also, ANTLRWorks runs under Eclipse just fine as an external Ant task
> > > (attached file) -- quick and dirty, but could be improved if there
> > > were
> > > command line options to specify an initial grammar file or a starting
> > > directory containing grammar files.
> > >
> >
> > Great to hear that! I will had some command line parameters to let
> > you specify the initial file(s) ;-)
> >
> > Jean
> >
> >
>



From open.zone at virgin.net  Thu Jun  2 06:54:15 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 06:40:32 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f8050602042522d7bdb1@mail.gmail.com>
Message-ID: <002901c5677a$9147f3d0$6502a8c0@hercules>

> well 64 mb is a LOT of mem to occupy for opening a 184kb file.
> 
> PRASHANT

Where did you get that 184kb ANTLR v3 grammar (ANTLR v2.x grammars aren't
directly usable AFAICT). 

Can you share it?. I'd like to see the errors you mention. So far, I only
get entries like this in the console:

-------- BEGIN ----------
14:38:22] internal error: Exception
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
nown Source): can't write stats to C:\Documents and
Settings\MichealJ\antlrworks\grammar.stats 

[14:38:22] internal error: Exception
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
nown Source): can't write stats to C:\Documents and
Settings\MichealJ\antlrworks\grammar.stats 

[14:38:34] Launcher>Parser launched
[14:40:19] Launcher>bar is a declaration
[14:40:20] Launcher>foo is a definition
[14:41:29] internal error: Exception
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
nown Source): can't write stats to C:\Documents and
Settings\MichealJ\antlrworks\grammar.stats 

[14:41:29] internal error: Exception
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
nown Source): can't write stats to C:\Documents and
Settings\MichealJ\antlrworks\grammar.stats 
--------  END  ----------


From open.zone at virgin.net  Thu Jun  2 07:31:42 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 07:17:56 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>
Message-ID: <002a01c5677f$cc32b570$6502a8c0@hercules>


> and Jean Bovet has created a 1.0ea1 release of his excellent 
> ANTLRWorks:

> http://www.antlr.org/works/index.html

> The ANTLRWorks jar has everything you need including ANTLR 3.0ea1.

ANTLRWorks early comments:

1. Build & Debug should provide a sensible default for the location of
working/generated files.  I suggest a "debug" sub-dir below the location of
the grammar file. The tool should indicate if the dir needs to be created.

2. From the Build & Debug dialog, clicking browse to change the current
setting doesn't start browsing from the current setting's location, it
always starts at the user's "home directory" (the "My Documents" dir on my
Windows box).

3. As per my previous message, I get a lot of entries in the console about
it's inability to write to a grammar.stats file. The dir/folder does exist
but the file doesn't.

<error>
[14:41:29] internal error: Exception
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
nown Source): can't write stats to C:\Documents and
Settings\MichealJ\antlrworks\grammar.stats 
</error>

4. Can this support cross-language debugging?. Is there some TCP protocol
that needs to be supported by geberated parsers/lexers to support this
scenario?.

5. The syntax diagram is a useful addition. I was expecting to be able to
navigate and perhaps refactor visually. Perhaps in time... ;-)

6. Perhaps the tool should keep track of generated status internally and
disable the items on the "Generate" menu accordingly. Got tired of being
told I couldn't show code until something had being generated.

On a different note, the java.g grammar in the examples archive doesn't have
a "comilationUnit" start rule equivalent.

Micheal
ANTLR/C#

From mpearce at digitas.com  Thu Jun  2 08:19:45 2005
From: mpearce at digitas.com (Matthew Pearce)
Date: Thu Jun  2 08:19:49 2005
Subject: [antlr-interest] Newbie! how can I convert a list of bullets to an
	HTML list
Message-ID: <6C74F0D7F53FBD4782435D1FB8FEF06D10B028@LONEXVS1.modemmedia.com>

I'd like to convert a list of bullets to an HTML list, i.e.:

 

From:

-          bullet

-          bullet

-          bullet

 

To:

<ul><li>bullet</li><li>bullet</li><li>bullet</li></ul>

 

I thought over a few different options:

 

1. Have the lexer produce a LIST token when it matches:

 - bullet

But I don't know how to get the parser to find the <ul> tags, because I
cannot add a special case

 

2. Have the lexer produce a LIST token when it matches:

-          bullet

-          bullet

-          bullet

But I don't know how to get the parser to insert the <li> tags, because
it hasn't tokenized each bullet

 

3. Have the parser match a rule for list that matches like:

 

list:       LIST^  PARA (LIST! PARA)+

 

Which would give me an AST node like, that could support nested lists.

 

                        LIST ----+----PARA

                                    +----PARA

                                    +----LIST--------+-PARA

                                     +---PARA         

 

But this gives me non-determinisim, between match a straight paragraph
(PARA), and a bulleted line LIST PARA.

 

 

Can anyone suggest an approach?  

 

 

class CourseTreeWalker extends TreeParser;

 

tree2html returns [String s]

{ s = ""; }

    :

      (#(t:TTL (p:PARA | l:list)+ { 

            s+="<h4>" +t+ "</h4>\n";

            s+= "<p>" +p+ "</p>\n";

            s+= "<ul>"+l+"</ul>"; } ))+   // this doesn't do what I want

      

    ;

 

list        // this doesn't do what I want

{ String l = ""; }

 :

      (#(LIST (p2:PARA) { 

            l+="<ul><li>" +p2+ "</li></ul>\n";

             } ))

;

 

class CourseParser extends Parser;

 

options {

    buildAST = true;

}

 

file :  (section)+ EOF! ;

 

section : TTL^ (listexpr)+;

 

listexpr : (LIST^)? paraexpr;   // this just matches each bullet,
instead of treating bullets as a group

 

paraexpr: (PARA);

 

 

class CourseLexer extends Lexer;

 

options {

    k = 3; 

    charVocabulary = '\3'..'\377';

}

 

 

PARA  : ("LZU") =>

        ("LZU" (LETTER | DIGIT | ' ' | '/')+)  { $setType(TTL); }

        |

        ("Des") =>

        ("Description:")   { $setType(TTL); }

        |

        ("Lea") =>

        ("Learning objectives:")   { $setType(TTL); }

        |

        ("Tar") =>

        ("Target audience:")   { $setType(TTL); }

        |

        ("Pre") =>

        ("Prerequisites:")   { $setType(TTL); }

        |

         (CHAR | ' ' )+ 

      ;

 

 

LIST   : ('-' | '*') ;

 

 

 

NEWLINE : (

                  ('\r''\n')=> '\r''\n' //DOS

                  

                  | '\r' //MAC 

                  

                  | '\n' //UNIX

                  )

                  { $setType(Token.SKIP); newline();  }

            ;

protected

DIGIT

      : '0'..'9'

      ;

 

protected

LETTER

      : ('a'..'z' | 'A'..'Z')

      ;

 

            

protected

CHAR

      : ~( '\n' | '\r' | ' ' | '\t' | '\f' | '-' | '*' )

      ;

      

    

    

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050602/2dccd7e0/attachment-0001.html
From prashant.deva at gmail.com  Thu Jun  2 08:36:19 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 08:36:22 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <002901c5677a$9147f3d0$6502a8c0@hercules>
References: <41fed8f8050602042522d7bdb1@mail.gmail.com>
	<002901c5677a$9147f3d0$6502a8c0@hercules>
Message-ID: <41fed8f8050602083671501fb2@mail.gmail.com>

> Where did you get that 184kb ANTLR v3 grammar (ANTLR v2.x grammars aren't

Its not , but the ide shouldn't crash on opening a 184 kb of 'any' text.

> I'd like to see the errors you mention. So far, I only
> get entries like this in the console:
You open a new file in the ide, type 'grammar a' , wait for a second,
and a console window pops up right in front of the editor with the msg
-
"[21:02:41] 1:9: syntax error: antlr: line 1:9: unexpected token: null
[21:02:41] 1:9: syntax error: antlr: line 1:9: expecting SEMI, found 'null'
[21:02:41] 0:0: syntax error: assign.types: <AST>:0:0: unexpected end of subtree
[21:02:41] 0:0: syntax error: define: <AST>:0:0: unexpected end of subtree
[21:02:41] 0:0: syntax error: buildnfa: <AST>:0:0: unexpected end of subtree"

And the problem regarding syntax highlighting and stuff occcurs with
'valid' antlr 3 grammars too.

PRASHANT


On 6/2/05, Micheal J <open.zone@virgin.net> wrote:
> > well 64 mb is a LOT of mem to occupy for opening a 184kb file.
> >
> > PRASHANT
> 
> Where did you get that 184kb ANTLR v3 grammar (ANTLR v2.x grammars aren't
> directly usable AFAICT).
> 
> Can you share it?. I'd like to see the errors you mention. So far, I only
> get entries like this in the console:
> 
> -------- BEGIN ----------
> 14:38:22] internal error: Exception
> java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> nown Source): can't write stats to C:\Documents and
> Settings\MichealJ\antlrworks\grammar.stats
> 
> [14:38:22] internal error: Exception
> java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> nown Source): can't write stats to C:\Documents and
> Settings\MichealJ\antlrworks\grammar.stats
> 
> [14:38:34] Launcher>Parser launched
> [14:40:19] Launcher>bar is a declaration
> [14:40:20] Launcher>foo is a definition
> [14:41:29] internal error: Exception
> java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> nown Source): can't write stats to C:\Documents and
> Settings\MichealJ\antlrworks\grammar.stats
> 
> [14:41:29] internal error: Exception
> java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> nown Source): can't write stats to C:\Documents and
> Settings\MichealJ\antlrworks\grammar.stats
> --------  END  ----------
> 
> 
>
From torkildr at resheim.no  Thu Jun  2 08:33:25 2005
From: torkildr at resheim.no (Torkild =?iso-8859-1?q?Ulv=F8y_Resheim?=)
Date: Thu Jun  2 08:40:49 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f80506012345215939c@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
Message-ID: <200506021733.25940.torkildr@resheim.no>

On Thursday 02 June 2005 08:45, Prashant Deva wrote:
> Antlr Studio for Eclipse screenshot at-
> http://antlrstudio.com/screenshot.png
>
> Please comment.
>
> PRASHANT
Lovely :-) I can't wait to get my hands on it!
-- 
Med vennlig hilsen / Kind regards                                  ((
Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
bug is indistinguishable from a feature."                         |____|'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050602/99bcbf07/attachment.bin
From parrt at cs.usfca.edu  Thu Jun  2 09:08:52 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 09:08:55 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <002901c5677a$9147f3d0$6502a8c0@hercules>
References: <002901c5677a$9147f3d0$6502a8c0@hercules>
Message-ID: <8B1BA9A4-5DB9-4133-ABE3-76209C9F9968@cs.usfca.edu>

Thanks for all the feedback folks!!

Note that it's early access (meaning it's nowhere near what we'd call  
an alpha release) so we are expecting lots of problems.  Also, a wide  
variety of different platforms/environments will definitely cause us  
trouble at first since we couldn't test it everywhere.  Java has  
truly shown it's "write once, debug everywhere" nature for Swing so far.

Perhaps we messed up the jar.  I have been using ANTLRWorks to do my  
examples.  Works great for me.  Strange.  Yes, the console is full of  
"noise", but I asked Jean to put that in there so we can see any  
errors that pop up.  Naturally when you're typing a grammar, it's  
invalid until you finish the rule or whatever so you'll get lots of  
errors.

Keep the comments coming!

Ter
From parrt at cs.usfca.edu  Thu Jun  2 09:11:04 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 09:11:06 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f80506012345215939c@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
Message-ID: <6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>

Heh, wow!  Looks great, Prashant.  Did you build the syntax diagrams  
yourself?  Very pretty.  What else will it be able to do?

As Jean says, the (...)* should probably have an optional path.  At  
the moment, you have it built like it's a (...)+ loop.

Cool!  With this and ANTLRWorks, we'll have ANTLR 2 and 3 covered!   
Hooray!

Ter

From parrt at cs.usfca.edu  Thu Jun  2 09:13:23 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 09:13:25 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <20050602132448.DB0252A8CE@bilbo.mebtel.net>
References: <20050602132448.DB0252A8CE@bilbo.mebtel.net>
Message-ID: <0F4E494C-8711-4D1D-A9E3-34631A7F1763@cs.usfca.edu>


On Jun 2, 2005, at 6:24 AM, Chris Snyder wrote:

> I noticed this also. Parts of words highlighted in mine.

Hi.  can we start hearing about the platforms?  I.e., PC/Mac/Atari,  
WinXP/Dos/... Java version etc...?  When it works on our box and not  
on yours we'll need to track which platforms have trouble.

Thanks!

Ter

From magne.andreassen at bluezone.no  Thu Jun  2 09:48:29 2005
From: magne.andreassen at bluezone.no (Magne Andreassen)
Date: Thu Jun  2 09:48:55 2005
Subject: [antlr-interest] litterals and semantic or syntactic predicates?
Message-ID: <20050602164851.0F90C1634E6@s-smtp-osl-01.bluecom.no>

hi,

having two parser rules like:

ruleone : "say" ( "hello-world" | subrule ) ;

ruletwo : "hello" ( subrule )+ ;

subrule : INT ;

trying to parse:
say hello-world
hello 42

i get an error message saying:
line 1:1: unexpected token: hello

the first "hello-world" is counted as two tokens?

any suggestions?

Magne


From prashant.deva at gmail.com  Thu Jun  2 10:11:32 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 10:11:35 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
Message-ID: <41fed8f8050602101160afe93@mail.gmail.com>

> Heh, wow!  Looks great, Prashant.  Did you build the syntax diagrams
> yourself?

Yeah. thanks, took an entire day to make that :)

The black and white diagrams becomes colored when you pass the cursor
over the relevant parts of the grammar.

I got that idea from (you won't believe) watching the SinCity trailer ;)


> As Jean says, the (...)* should probably have an optional path.  At
> the moment, you have it built like it's a (...)+ loop.

The notations are a little different from the one used in antlr works.

Optional elements have a dotted box around them as can be seen, the yellow box.

You can see the 'smart' syntax highlighting.
All java code is highlighted differently from the rest, so you can
recognize it easily.

There are a lot more super cool features, which i will demonstrate in
the days to come.

PRASHANT

On 6/2/05, Terence Parr <parrt@cs.usfca.edu> wrote:
> Heh, wow!  Looks great, Prashant.  Did you build the syntax diagrams
> yourself?  Very pretty.  What else will it be able to do?
> 
> As Jean says, the (...)* should probably have an optional path.  At
> the moment, you have it built like it's a (...)+ loop.
> 
> Cool!  With this and ANTLRWorks, we'll have ANTLR 2 and 3 covered!
> Hooray!
> 
> Ter
> 
>
From prashant.deva at gmail.com  Thu Jun  2 10:15:11 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 10:15:13 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f8050602101160afe93@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
Message-ID: <41fed8f8050602101536817144@mail.gmail.com>

>At
> the moment, you have it built like it's a (...)+ loop.
The + loop just has a backward arrow on it.

I got the notation from looking at the Newton Script Ref Manual.
They used a pretty similar notation in that.

PRASHANT

On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > Heh, wow!  Looks great, Prashant.  Did you build the syntax diagrams
> > yourself?
> 
> Yeah. thanks, took an entire day to make that :)
> 
> The black and white diagrams becomes colored when you pass the cursor
> over the relevant parts of the grammar.
> 
> I got that idea from (you won't believe) watching the SinCity trailer ;)
> 
> 
> > As Jean says, the (...)* should probably have an optional path.  At
> > the moment, you have it built like it's a (...)+ loop.
> 
> The notations are a little different from the one used in antlr works.
> 
> Optional elements have a dotted box around them as can be seen, the yellow box.
> 
> You can see the 'smart' syntax highlighting.
> All java code is highlighted differently from the rest, so you can
> recognize it easily.
> 
> There are a lot more super cool features, which i will demonstrate in
> the days to come.
> 
> PRASHANT
> 
> On 6/2/05, Terence Parr <parrt@cs.usfca.edu> wrote:
> > Heh, wow!  Looks great, Prashant.  Did you build the syntax diagrams
> > yourself?  Very pretty.  What else will it be able to do?
> >
> > As Jean says, the (...)* should probably have an optional path.  At
> > the moment, you have it built like it's a (...)+ loop.
> >
> > Cool!  With this and ANTLRWorks, we'll have ANTLR 2 and 3 covered!
> > Hooray!
> >
> > Ter
> >
> >
>
From parrt at cs.usfca.edu  Thu Jun  2 10:16:43 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 10:16:45 2005
Subject: [antlr-interest] litterals and semantic or syntactic predicates?
In-Reply-To: <20050602164851.0F90C1634E6@s-smtp-osl-01.bluecom.no>
References: <20050602164851.0F90C1634E6@s-smtp-osl-01.bluecom.no>
Message-ID: <3AC63C3C-4B44-43B6-B46F-3FD5CA5CC16B@cs.usfca.edu>


On Jun 2, 2005, at 9:48 AM, Magne Andreassen wrote:

> hi,
>
> having two parser rules like:
>
> ruleone : "say" ( "hello-world" | subrule ) ;
>
> ruletwo : "hello" ( subrule )+ ;
>
> subrule : INT ;
>
> trying to parse:
> say hello-world
> hello 42
>
> i get an error message saying:
> line 1:1: unexpected token: hello
>
> the first "hello-world" is counted as two tokens?

Yes, well 3 probably.  Most likely you don't have a token rule that  
matches '-' in a word.

Ter
From parrt at cs.usfca.edu  Thu Jun  2 10:19:54 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 10:19:55 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f8050602101536817144@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
Message-ID: <EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>


On Jun 2, 2005, at 10:15 AM, Prashant Deva wrote:

>> At
>> the moment, you have it built like it's a (...)+ loop.
>>
> The + loop just has a backward arrow on it.
>
> I got the notation from looking at the Newton Script Ref Manual.
> They used a pretty similar notation in that.

Right but the grammar says * right?

If it's true you're using color to signify that it's also optional,  
you might want to rethink that as it will surprise just about  
everybody.  Syntax diagrams are essential control flow graphs and  
people will expect the arrows to be the complete flow.

When can we have this? :)  I thought I remember you saying a few days  
a while back.

Ter
From antlr-list at arizona-software.ch  Thu Jun  2 10:44:16 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun  2 10:44:29 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <41fed8f805060202432a305241@mail.gmail.com>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<1C540D30-4095-4EB4-AF62-E1D65369A772@arizona-software.ch>
	<41fed8f805060202405347b838@mail.gmail.com>
	<41fed8f805060202432a305241@mail.gmail.com>
Message-ID: <9DB17204-6FB8-472A-82DB-86B2DCC5C560@arizona-software.ch>

> It seems to be pretty buggy.
> Thrice i got an out of memory msg. I got 512 mb ram.
>
> I tried to open a loarge 10,000 line file. It never opened. went  
> out of memory.
>

It would be great if you can send me this grammar file so I can test  
it and fix the bugs ;-)

> Start typing something and a java console pops up printing the stack
> trace of all the exceptions.
>

Is it a v3 grammar ? Otherwise, good chance that ANTLR will complain  
(and ANTLRWorks also)...

> Hide all actions , needs to check whether its inside a comment
>

It should not hide actions inside comments, but again I would love to  
have the grammar file to test that.

Thanks for your comments!

Jean

From antlr-list at arizona-software.ch  Thu Jun  2 10:49:59 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun  2 10:50:08 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <200506021520.31844.stefan@amiq.ro>
References: <4.3.2.7.2.20050601210337.0756fc10@morpho.newtechlaw.com>
	<41fed8f8050602042522d7bdb1@mail.gmail.com>
	<7573.167.202.196.71.1117712552.squirrel@167.202.196.71>
	<200506021520.31844.stefan@amiq.ro>
Message-ID: <2133A1C3-8593-45AC-831E-44973DDEF45B@arizona-software.ch>

It's true that Swing eats a lot of memory, but it should work well  
with a 184Kb file. The problem is that if the grammar file is a v2  
grammar, I can easily imagine that memory gets short because of the  
analysis error that ANTLRWorks and ANTLR will generate.

As usual with early access release, I cannot guarantee that it will  
open *any* grammar file. However, I would love to receive a few  
grammar file that causes trouble to ANTLRWorks so the next early  
access version will be better ;-)

Jean

Le 2 juin 05 ? 05:20, stefan a ?crit :

> On Thursday 02 June 2005 14:42, rvjansen@xs4all.nl wrote:
>
>>> well 64 mb is a LOT of mem to occupy for opening a 184kb file.
>>>
>>
>> Trust me, for any reasonable Swing program it is next to nothing.  
>> I have
>> come to accept this, although that was hard for someone who's large
>> Assembler-XF programs counted 3-4K instructions and then was  
>> shocked at
>> the median size of a COBOL program at a whopping 32K.
>>
>
>    I've build few swing applications and I can say swing it's quite  
> slow and
> consumes a lot of resources.
>    I consider this is not the most important part as long as:
>   - the application is reliable from a functional point of view
>   - small response time for simple operations
>   - it offers me information of the ongoing long operations
>   - presents exceptions in a understandable way (I prefer a simple  
> message
> like "Oooops! Bad click!" to a stack trace)
>   - I have the resources (I think these days 256M of RAM is  
> affordable)
>
> Stefan.
>

From antlr-list at arizona-software.ch  Thu Jun  2 11:04:44 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun  2 11:04:53 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <002a01c5677f$cc32b570$6502a8c0@hercules>
References: <002a01c5677f$cc32b570$6502a8c0@hercules>
Message-ID: <59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>

>
> 1. Build & Debug should provide a sensible default for the location of
> working/generated files.  I suggest a "debug" sub-dir below the  
> location of
> the grammar file. The tool should indicate if the dir needs to be  
> created.
>

Yep ;-)

> 2. From the Build & Debug dialog, clicking browse to change the  
> current
> setting doesn't start browsing from the current setting's location, it
> always starts at the user's "home directory" (the "My Documents"  
> dir on my
> Windows box).
>

Oops, you are right. Will be fixed.

> 3. As per my previous message, I get a lot of entries in the  
> console about
> it's inability to write to a grammar.stats file. The dir/folder  
> does exist
> but the file doesn't.
>
> <error>
> [14:41:29] internal error: Exception
> java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.relea 
> se(Unk
> nown Source): can't write stats to C:\Documents and
> Settings\MichealJ\antlrworks\grammar.stats
> </error>
>

Yes, this is apparently a Java problem when using locks on file. It  
works smoothly on Mac OS and the Linux version I have used.
Will see with Terence what we can do about that (because it is used  
on both ANTLRWorks and ANTLR side).

> 4. Can this support cross-language debugging?. Is there some TCP  
> protocol
> that needs to be supported by geberated parsers/lexers to support this
> scenario?.
>

Yes, you can. When generating a parser from the command line, use the  
"-debug" option. Launch the parser and then use the "Debug Remote"  
item in ANTLRWorks to connect to this running parser. Of course, the  
running parser can be in any language.

Oh, and make sure you have opened the corresponding grammar file in  
ANTLRWorks ;-)

> 5. The syntax diagram is a useful addition. I was expecting to be  
> able to
> navigate and perhaps refactor visually. Perhaps in time... ;-)
>

The future will talk ;-)

> 6. Perhaps the tool should keep track of generated status  
> internally and
> disable the items on the "Generate" menu accordingly. Got tired of  
> being
> told I couldn't show code until something had being generated.
>

Will fix that.

Thanks for all your comments!

Jean
From prashant.deva at gmail.com  Thu Jun  2 11:13:14 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 11:13:17 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
Message-ID: <41fed8f8050602111375616986@mail.gmail.com>

> If it's true you're using color to signify that it's also optional,
> you might want to rethink that as it will surprise just about
> everybody.  Syntax diagrams are essential control flow graphs and
> people will expect the arrows to be the complete flow.

I will be putting a 'help' button right on the diagram view, just
click on it and it will show you the notation. Within 10 secs of usign
the ide u will be so used to it you won't like the normal diagrams.
The boxes look much prettier and convey much more info than a bunch of
arrows. Once you have looked at a few of them, you are totally usd to
them.

> When can we have this? :)  I thought I remember you saying a few days
> a while back.

Yeah, but i am getting delayed cause of the craziest of reasons.

The city where i live , here in India, is having some major power
problems, and we are having power cuts *everyday* for (hold your
breath) upto *16 hours*!!!  yes,  16 hours! And this has been going on
for the last 10 days!!

Although power cuts are a common phenomenon here in India, it has
never happened like this. and no power backup systems here can provide
electricity for that much time.

I can finish in 1 week, provided that i get the power to switch on my
computer ;-)

PRASHANT




On 6/2/05, Terence Parr <parrt@cs.usfca.edu> wrote:
> 
> On Jun 2, 2005, at 10:15 AM, Prashant Deva wrote:
> 
> >> At
> >> the moment, you have it built like it's a (...)+ loop.
> >>
> > The + loop just has a backward arrow on it.
> >
> > I got the notation from looking at the Newton Script Ref Manual.
> > They used a pretty similar notation in that.
> 
> Right but the grammar says * right?
> 
> If it's true you're using color to signify that it's also optional,
> you might want to rethink that as it will surprise just about
> everybody.  Syntax diagrams are essential control flow graphs and
> people will expect the arrows to be the complete flow.
> 
> When can we have this? :)  I thought I remember you saying a few days
> a while back.
> 
> Ter
>
From open.zone at virgin.net  Thu Jun  2 11:27:39 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 11:13:55 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 refuses to start if last
	opened file is not found
Message-ID: <003f01c567a0$c34c1a20$6502a8c0@hercules>

ENVIRONMENT

OS:   Microsoft Windows 2000 [Version 5.00.2195]
Java: build 1.5.0_02-b09


PROBLEM

On startup, if ANTLRWorks cannot find the last opened file from the previous
session, it prints an error dialog (with just an OK button) and exits
immediately. There seems to be no way to bypass this "open last used file or
exit" behaviour.

WORKAROUND

Note the file name and create dummy file.

From open.zone at virgin.net  Thu Jun  2 11:33:57 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 11:20:11 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks console window not automatically
	closed on exit
Message-ID: <004001c567a1$a3f2c880$6502a8c0@hercules>

ENVIRONMENT

OS:   Microsoft Windows 2000 [Version 5.00.2195]
Java: build 1.5.0_02-b09


PROBLEM

If the ANTLRWorks console is visible, closing all grammar windows does not
close the console window. It has to be closed manually.

From antlr-list at arizona-software.ch  Thu Jun  2 11:23:29 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun  2 11:23:37 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 refuses to start if
	last opened file is not found
In-Reply-To: <003f01c567a0$c34c1a20$6502a8c0@hercules>
References: <003f01c567a0$c34c1a20$6502a8c0@hercules>
Message-ID: <66C3581B-177C-43F6-AD99-5622B6905103@arizona-software.ch>

Thank for the report. I don't know were is located the preferences in  
Windows, but on the Mac, you can open the "org.antlr.works.plist"  
file and change the value of the key "PREF_STARTUP_ACTION" to 0  
(which means no action at startup). If you find a similar file on  
Windows (or perhaps it is located in the registry ?), you should be  
able to change the value of this key too.

Jean

Le 2 juin 05 ? 11:27, Micheal J a ?crit :

> ENVIRONMENT
>
> OS:   Microsoft Windows 2000 [Version 5.00.2195]
> Java: build 1.5.0_02-b09
>
>
> PROBLEM
>
> On startup, if ANTLRWorks cannot find the last opened file from the  
> previous
> session, it prints an error dialog (with just an OK button) and exits
> immediately. There seems to be no way to bypass this "open last  
> used file or
> exit" behaviour.
>
> WORKAROUND
>
> Note the file name and create dummy file.
>
>

From prashant.deva at gmail.com  Thu Jun  2 11:29:41 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 11:29:44 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 refuses to start if
	last opened file is not found
In-Reply-To: <66C3581B-177C-43F6-AD99-5622B6905103@arizona-software.ch>
References: <003f01c567a0$c34c1a20$6502a8c0@hercules>
	<66C3581B-177C-43F6-AD99-5622B6905103@arizona-software.ch>
Message-ID: <41fed8f805060211291bbac3ba@mail.gmail.com>

Jean,
Why don't you put up a bugzilla style system online, where people can
report bugs.

PRASHANT

On 6/2/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
> Thank for the report. I don't know were is located the preferences in
> Windows, but on the Mac, you can open the "org.antlr.works.plist"
> file and change the value of the key "PREF_STARTUP_ACTION" to 0
> (which means no action at startup). If you find a similar file on
> Windows (or perhaps it is located in the registry ?), you should be
> able to change the value of this key too.
> 
> Jean
> 
> Le 2 juin 05 ? 11:27, Micheal J a ?crit :
> 
> > ENVIRONMENT
> >
> > OS:   Microsoft Windows 2000 [Version 5.00.2195]
> > Java: build 1.5.0_02-b09
> >
> >
> > PROBLEM
> >
> > On startup, if ANTLRWorks cannot find the last opened file from the
> > previous
> > session, it prints an error dialog (with just an OK button) and exits
> > immediately. There seems to be no way to bypass this "open last
> > used file or
> > exit" behaviour.
> >
> > WORKAROUND
> >
> > Note the file name and create dummy file.
> >
> >
> 
>
From open.zone at virgin.net  Thu Jun  2 11:44:38 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 11:30:57 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 can't change to Metal
	look and feel without restart
Message-ID: <004101c567a3$235880a0$6502a8c0@hercules>

ENVIRONMENT

OS:   Microsoft Windows 2000 [Version 5.00.2195]
Java: build 1.5.0_02-b09


PROBLEM

If the look and feel option on the "General" tab of the preferences dialog
"File-->Preferences" is set to "Metal", clicking the Apply button has no
effect. It doesn't close the dialog and it doesn't change the look-and-feel
(at least not until the app is restarted).

The Apply button works as expected if the selected look and feel is
CDE/Motif or Windows.


WORKAROUND

After selecting the Metal look and feel, close the dialog box using the [X]
(or [#]) icon and restart the application.

From antlr-list at arizona-software.ch  Thu Jun  2 11:34:29 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Thu Jun  2 11:34:44 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 refuses to start if
	last opened file is not found
In-Reply-To: <41fed8f805060211291bbac3ba@mail.gmail.com>
References: <003f01c567a0$c34c1a20$6502a8c0@hercules>
	<66C3581B-177C-43F6-AD99-5622B6905103@arizona-software.ch>
	<41fed8f805060211291bbac3ba@mail.gmail.com>
Message-ID: <913D5FD7-D953-4C27-A746-0FAE632128E3@arizona-software.ch>

Currently, the best thing is to use the feedback page on antlr.org.  
We are storing all the feedback in DB.

I will see with Terence what we will be doing in the future ;-)

Jean

Le 2 juin 05 ? 11:29, Prashant Deva a ?crit :

> Jean,
> Why don't you put up a bugzilla style system online, where people can
> report bugs.
>
> PRASHANT
>
> On 6/2/05, Jean Bovet <antlr-list@arizona-software.ch> wrote:
>
>> Thank for the report. I don't know were is located the preferences in
>> Windows, but on the Mac, you can open the "org.antlr.works.plist"
>> file and change the value of the key "PREF_STARTUP_ACTION" to 0
>> (which means no action at startup). If you find a similar file on
>> Windows (or perhaps it is located in the registry ?), you should be
>> able to change the value of this key too.
>>
>> Jean
>>
>> Le 2 juin 05 ? 11:27, Micheal J a ?crit :
>>
>>
>>> ENVIRONMENT
>>>
>>> OS:   Microsoft Windows 2000 [Version 5.00.2195]
>>> Java: build 1.5.0_02-b09
>>>
>>>
>>> PROBLEM
>>>
>>> On startup, if ANTLRWorks cannot find the last opened file from the
>>> previous
>>> session, it prints an error dialog (with just an OK button) and  
>>> exits
>>> immediately. There seems to be no way to bypass this "open last
>>> used file or
>>> exit" behaviour.
>>>
>>> WORKAROUND
>>>
>>> Note the file name and create dummy file.
>>>
>>>
>>>
>>
>>
>

From open.zone at virgin.net  Thu Jun  2 11:51:48 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 11:38:07 2005
Subject: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 refuses to start if
	last opened file is not found
In-Reply-To: <66C3581B-177C-43F6-AD99-5622B6905103@arizona-software.ch>
Message-ID: <004201c567a4$23a090b0$6502a8c0@hercules>

Jean,

> Thank for the report. I don't know were is located the 
> preferences in  
> Windows, but on the Mac, you can open the "org.antlr.works.plist"  
> file and change the value of the key "PREF_STARTUP_ACTION" to 0  
> (which means no action at startup). If you find a similar file on  
> Windows (or perhaps it is located in the registry ?), you should be  
> able to change the value of this key too.

It is stored in the registry at:
	HKEY_CURRENT_USER\Software\JavaSoft\Prefs\org\antlr\works\

My PREF_STARTUP_ACTION was "1", I verified that setting it to "0" bypasses
the loading of the last used file.

From ewbank at gmail.com  Thu Jun  2 12:00:45 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Jun  2 12:01:42 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f8050602111375616986@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
	<41fed8f8050602111375616986@mail.gmail.com>
Message-ID: <dd3a065f05060212005fbc98ce@mail.gmail.com>

Don't discount "a bunch of arrows" so quickly; just because you can
throw away a convention doesn't mean you should.

Color is great, if you can see it.  Some of us don't see colors well,
so the diagrams really need to be useable without the colors.  In
addition, most (?) folks don't have color printers and/or copiers,
which means that any hard-copy will lose information.

That said, if the colors stay, please make sure that any text on top
of colors is high-contrast (think black on white, rather than red on
green).

On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> click on it and it will show you the notation. Within 10 secs of usign
> the ide u will be so used to it you won't like the normal diagrams.
> The boxes look much prettier and convey much more info than a bunch of
> arrows. Once you have looked at a few of them, you are totally usd to
> them.
From open.zone at virgin.net  Thu Jun  2 12:16:01 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 12:02:19 2005
Subject: [antlr-interest] ISSUE: Submitting ANTLRWorks 1.0ea1
	issue/comments
In-Reply-To: <913D5FD7-D953-4C27-A746-0FAE632128E3@arizona-software.ch>
Message-ID: <004301c567a7$85684650$6502a8c0@hercules>

 
> Currently, the best thing is to use the feedback page on antlr.org.  
> We are storing all the feedback in DB.
> 
> I will see with Terence what we will be doing in the future ;-)

We need to provide separate pages for issues/comments and source
contributions. The need to agree to the conditions on that page doesn't seem
appropriate for submitting issue reports or comments.

Micheal

From parrt at cs.usfca.edu  Thu Jun  2 12:13:37 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 12:13:05 2005
Subject: [antlr-interest] ISSUE: Submitting ANTLRWorks 1.0ea1
	issue/comments
In-Reply-To: <004301c567a7$85684650$6502a8c0@hercules>
References: <004301c567a7$85684650$6502a8c0@hercules>
Message-ID: <F28258F9-9AB8-4BCB-9D9A-F66E8E653A96@cs.usfca.edu>

On Jun 2, 2005, at 12:16 PM, Micheal J wrote:
>> Currently, the best thing is to use the feedback page on antlr.org.
>> We are storing all the feedback in DB.
>>
>> I will see with Terence what we will be doing in the future ;-)
>>
>
> We need to provide separate pages for issues/comments and source
> contributions. The need to agree to the conditions on that page  
> doesn't seem
> appropriate for submitting issue reports or comments.

Agreed, though, without fail some people will send code in their  
feedback/comments so i decided that just having one page covered with  
the license is better; the license thingy just doesn't apply if no  
code appears.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From i.maier at gmx.de  Thu Jun  2 18:16:30 2005
From: i.maier at gmx.de (Ingo Maier)
Date: Thu Jun  2 12:16:44 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f8050602111375616986@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
	<41fed8f8050602111375616986@mail.gmail.com>
Message-ID: <1117761389.3561.14.camel@beeblebox>

On Thu, 2005-06-02 at 14:13, Prashant Deva wrote:
> > If it's true you're using color to signify that it's also optional,
> > you might want to rethink that as it will surprise just about
> > everybody.  Syntax diagrams are essential control flow graphs and
> > people will expect the arrows to be the complete flow.
> 
> I will be putting a 'help' button right on the diagram view, just
> click on it and it will show you the notation. Within 10 secs of usign
> the ide u will be so used to it you won't like the normal diagrams.
> The boxes look much prettier and convey much more info than a bunch of
> arrows. Once you have looked at a few of them, you are totally usd to
> them.

I find this box a bit strange, too, but given one gets used to it... at
least for accessibility reasons, you should, well, place more emphasis
on it. The line stroke is a bit thin/the color too bright for a white
background. It is also no good using color only to distinguish important
things like + and * for the same reason, IMO.

Ingo

> > When can we have this? :)  I thought I remember you saying a few days
> > a while back.
> 
> Yeah, but i am getting delayed cause of the craziest of reasons.
> 
> The city where i live , here in India, is having some major power
> problems, and we are having power cuts *everyday* for (hold your
> breath) upto *16 hours*!!!  yes,  16 hours! And this has been going on
> for the last 10 days!!
> 
> Although power cuts are a common phenomenon here in India, it has
> never happened like this. and no power backup systems here can provide
> electricity for that much time.
> 
> I can finish in 1 week, provided that i get the power to switch on my
> computer ;-)
> 
> PRASHANT
> 
> 
> 
> 
> On 6/2/05, Terence Parr <parrt@cs.usfca.edu> wrote:
> > 
> > On Jun 2, 2005, at 10:15 AM, Prashant Deva wrote:
> > 
> > >> At
> > >> the moment, you have it built like it's a (...)+ loop.
> > >>
> > > The + loop just has a backward arrow on it.
> > >
> > > I got the notation from looking at the Newton Script Ref Manual.
> > > They used a pretty similar notation in that.
> > 
> > Right but the grammar says * right?
> > 
> > If it's true you're using color to signify that it's also optional,
> > you might want to rethink that as it will surprise just about
> > everybody.  Syntax diagrams are essential control flow graphs and
> > people will expect the arrows to be the complete flow.
> > 
> > When can we have this? :)  I thought I remember you saying a few days
> > a while back.
> > 
> > Ter
> >
> 

From open.zone at virgin.net  Thu Jun  2 12:33:00 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 12:19:17 2005
Subject: [antlr-interest] ISSUE: Submitting ANTLRWorks 1.0ea1issue/comments
In-Reply-To: <F28258F9-9AB8-4BCB-9D9A-F66E8E653A96@cs.usfca.edu>
Message-ID: <004401c567a9$e472a620$6502a8c0@hercules>

> > We need to provide separate pages for issues/comments and source 
> > contributions. The need to agree to the conditions on that page
> > doesn't seem
> > appropriate for submitting issue reports or comments.
> 
> Agreed, though, without fail some people will send code in their  
> feedback/comments so i decided that just having one page 
> covered with  
> the license is better; the license thingy just doesn't apply if no  
> code appears.

Well, OK.

Is there a way to view the submissions?. I think a bugzilla/issuezilla-style
tool is still needed.

Micheal

From prashant.deva at gmail.com  Thu Jun  2 12:31:49 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 12:31:50 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <1117761389.3561.14.camel@beeblebox>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
	<41fed8f8050602111375616986@mail.gmail.com>
	<1117761389.3561.14.camel@beeblebox>
Message-ID: <41fed8f805060212315edd1ab0@mail.gmail.com>

Guys,
All of you are making your assumptions based on just one screenshot. 

The diagram view is 'dynamic' and its functionality has not (can not)
been demonstrated fully in the screenshot, which is static.

I will release a video and you will see how easily you get used to it
and whether you would still like to go back to the previous diagrams.

PRASHANT

On 6/3/05, Ingo Maier <i.maier@gmx.de> wrote:
> On Thu, 2005-06-02 at 14:13, Prashant Deva wrote:
> > > If it's true you're using color to signify that it's also optional,
> > > you might want to rethink that as it will surprise just about
> > > everybody.  Syntax diagrams are essential control flow graphs and
> > > people will expect the arrows to be the complete flow.
> >
> > I will be putting a 'help' button right on the diagram view, just
> > click on it and it will show you the notation. Within 10 secs of usign
> > the ide u will be so used to it you won't like the normal diagrams.
> > The boxes look much prettier and convey much more info than a bunch of
> > arrows. Once you have looked at a few of them, you are totally usd to
> > them.
> 
> I find this box a bit strange, too, but given one gets used to it... at
> least for accessibility reasons, you should, well, place more emphasis
> on it. The line stroke is a bit thin/the color too bright for a white
> background. It is also no good using color only to distinguish important
> things like + and * for the same reason, IMO.
> 
> Ingo
> 
> > > When can we have this? :)  I thought I remember you saying a few days
> > > a while back.
> >
> > Yeah, but i am getting delayed cause of the craziest of reasons.
> >
> > The city where i live , here in India, is having some major power
> > problems, and we are having power cuts *everyday* for (hold your
> > breath) upto *16 hours*!!!  yes,  16 hours! And this has been going on
> > for the last 10 days!!
> >
> > Although power cuts are a common phenomenon here in India, it has
> > never happened like this. and no power backup systems here can provide
> > electricity for that much time.
> >
> > I can finish in 1 week, provided that i get the power to switch on my
> > computer ;-)
> >
> > PRASHANT
> >
> >
> >
> >
> > On 6/2/05, Terence Parr <parrt@cs.usfca.edu> wrote:
> > >
> > > On Jun 2, 2005, at 10:15 AM, Prashant Deva wrote:
> > >
> > > >> At
> > > >> the moment, you have it built like it's a (...)+ loop.
> > > >>
> > > > The + loop just has a backward arrow on it.
> > > >
> > > > I got the notation from looking at the Newton Script Ref Manual.
> > > > They used a pretty similar notation in that.
> > >
> > > Right but the grammar says * right?
> > >
> > > If it's true you're using color to signify that it's also optional,
> > > you might want to rethink that as it will surprise just about
> > > everybody.  Syntax diagrams are essential control flow graphs and
> > > people will expect the arrows to be the complete flow.
> > >
> > > When can we have this? :)  I thought I remember you saying a few days
> > > a while back.
> > >
> > > Ter
> > >
> >
> 
>
From johnm-antlr at non.net  Thu Jun  2 12:44:48 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Thu Jun  2 12:44:30 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>
References: <002a01c5677f$cc32b570$6502a8c0@hercules>
	<59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>
Message-ID: <17055.25008.158815.681589@despot.non.net>

>>>>> "Jean" == Jean Bovet <antlr-list@arizona-software.ch> writes:
[...]

>> 3. As per my previous message, I get a lot of entries in the console
>> about it's inability to write to a grammar.stats file. The dir/folder
>> does exist but the file doesn't.

>> <error> [14:41:29] internal error: Exception
>> java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.relea
>> se(Unk nown Source): can't write stats to C:\Documents and
>> Settings\MichealJ\antlrworks\grammar.stats </error>

> Yes, this is apparently a Java problem when using locks on file. It works
> smoothly on Mac OS and the Linux version I have used.  Will see with
> Terence what we can do about that (because it is used on both ANTLRWorks
> and ANTLR side).

Historically, file locks in Java have pretty much been completely worthless
from a portability perspective.  Lots of bug reports, etc.  I haven't
bothered to look to see if this is any better with Java v5.0.

Is there some reason that you really need to use them?

Thanks,
	John
From johnm-antlr at non.net  Thu Jun  2 12:47:04 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Thu Jun  2 12:46:45 2005
Subject: Wiki (was: [antlr-interest] ISSUE: ANTLRWorks 1.0ea1 refuses to start
	if last opened file is not found)
In-Reply-To: <913D5FD7-D953-4C27-A746-0FAE632128E3@arizona-software.ch>
References: <003f01c567a0$c34c1a20$6502a8c0@hercules>
	<66C3581B-177C-43F6-AD99-5622B6905103@arizona-software.ch>
	<41fed8f805060211291bbac3ba@mail.gmail.com>
	<913D5FD7-D953-4C27-A746-0FAE632128E3@arizona-software.ch>
Message-ID: <17055.25144.586949.322539@despot.non.net>

>>>>> "Jean" == Jean Bovet <antlr-list@arizona-software.ch> writes:
[...]

> Currently, the best thing is to use the feedback page on antlr.org.  We
> are storing all the feedback in DB.

> I will see with Terence what we will be doing in the future ;-)

I don't remember if I've suggested this awhile back but it would be nice to
create an ANTLR wiki.

Go wild,
	John
From parrt at cs.usfca.edu  Thu Jun  2 12:47:30 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 12:46:59 2005
Subject: [antlr-interest] ISSUE: Submitting ANTLRWorks 1.0ea1issue/comments
In-Reply-To: <004401c567a9$e472a620$6502a8c0@hercules>
References: <004401c567a9$e472a620$6502a8c0@hercules>
Message-ID: <C7197DB2-AC8C-41AC-91A5-2D48E87B10E7@cs.usfca.edu>


On Jun 2, 2005, at 12:33 PM, Micheal J wrote:

>>> We need to provide separate pages for issues/comments and source
>>> contributions. The need to agree to the conditions on that page
>>> doesn't seem
>>> appropriate for submitting issue reports or comments.
>>>
>>
>> Agreed, though, without fail some people will send code in their
>> feedback/comments so i decided that just having one page
>> covered with
>> the license is better; the license thingy just doesn't apply if no
>> code appears.
>>
>
> Well, OK.
>
> Is there a way to view the submissions?. I think a bugzilla/ 
> issuezilla-style
> tool is still needed.

Thought of that too...decided we had privacy issues.... :(

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Thu Jun  2 12:48:52 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 12:48:19 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <17055.25008.158815.681589@despot.non.net>
References: <002a01c5677f$cc32b570$6502a8c0@hercules>
	<59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>
	<17055.25008.158815.681589@despot.non.net>
Message-ID: <0C84DF42-F215-4881-903F-B70B77F5FD14@cs.usfca.edu>


On Jun 2, 2005, at 12:44 PM, John D. Mitchell wrote:
> Historically, file locks in Java have pretty much been completely  
> worthless
> from a portability perspective.  Lots of bug reports, etc.  I haven't
> bothered to look to see if this is any better with Java v5.0.
>
> Is there some reason that you really need to use them?

Well, not really I guess.  Just trying to be safe as there may be  
many many parsers / antlr instances running all trying to write stats.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From johnm-antlr at non.net  Thu Jun  2 12:51:53 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Thu Jun  2 12:51:35 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <41fed8f805060212315edd1ab0@mail.gmail.com>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<6075AEAD-D7A6-4CA9-8E53-E625279AAE9C@cs.usfca.edu>
	<41fed8f8050602101160afe93@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
	<41fed8f8050602111375616986@mail.gmail.com>
	<1117761389.3561.14.camel@beeblebox>
	<41fed8f805060212315edd1ab0@mail.gmail.com>
Message-ID: <17055.25433.973785.76129@despot.non.net>

>>>>> "Prashant" == Prashant Deva <prashant.deva@gmail.com> writes:
[...]

> I will release a video and you will see how easily you get used to it and
> whether you would still like to go back to the previous diagrams.

I think you're missing a critical point: people need to see the information
that they expect to see.  I.e., the boxes are a help but they should be in
addition to the regular, linguistic markers rather than instead of them.

Also, as someone else noted, contrast and non-color-based distinctiveness
are critically important human usability issues.

Have fun,
	John
From johnm-antlr at non.net  Thu Jun  2 12:55:12 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Thu Jun  2 12:54:53 2005
Subject: Lock files (was: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1
	released!)
In-Reply-To: <0C84DF42-F215-4881-903F-B70B77F5FD14@cs.usfca.edu>
References: <002a01c5677f$cc32b570$6502a8c0@hercules>
	<59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>
	<17055.25008.158815.681589@despot.non.net>
	<0C84DF42-F215-4881-903F-B70B77F5FD14@cs.usfca.edu>
Message-ID: <17055.25632.108798.457811@despot.non.net>

>>>>> "Terence" == Terence Parr <parrt@cs.usfca.edu> writes:
>>>>>> On Jun 2, 2005, at 12:44 PM, John D. Mitchell wrote:
[...]

>> Historically, file locks in Java have pretty much been completely
>> worthless from a portability perspective.  Lots of bug reports, etc.  I
>> haven't bothered to look to see if this is any better with Java v5.0.

>> Is there some reason that you really need to use them?

> Well, not really I guess.  Just trying to be safe as there may be many
> many parsers / antlr instances running all trying to write stats.

So, why are the stats of all of the separate things being written to a
single, contentious file?  Don't you want the information cleanly separated
anyways?

Hope this helps,
		John
From torkildr at resheim.no  Thu Jun  2 12:54:35 2005
From: torkildr at resheim.no (Torkild =?iso-8859-1?q?Ulv=F8y_Resheim?=)
Date: Thu Jun  2 13:02:02 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
Message-ID: <200506022154.36040.torkildr@resheim.no>

On Thursday 02 June 2005 19:19, Terence Parr wrote:
[snip]
> If it's true you're using color to signify that it's also optional,
> you might want to rethink that as it will surprise just about
> everybody.  Syntax diagrams are essential control flow graphs and
> people will expect the arrows to be the complete flow.
>
> When can we have this? :)  I thought I remember you saying a few days
> a while back.
>
> Ter
Why not add arrows and let the user decide what he/she likes using the plugin 
preferences. It is pretty straightforward if you just can get the electricity 
to stay on long enough ;-) 

Seriously, I'm very interested in this tool for Eclipse. If you need a helping 
hand I'll be happy to provide it. I code for (and in) Eclipse daily so I 
consider myself fairly proficient.
-- 
Med vennlig hilsen / Kind regards                                  ((
Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
bug is indistinguishable from a feature."                         |____|'
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050602/b261ffe9/attachment.bin
From prashant.deva at gmail.com  Thu Jun  2 13:21:08 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 13:21:10 2005
Subject: [antlr-interest] Antlr Studio Video
Message-ID: <41fed8f805060213213f98a6e@mail.gmail.com>

Ok, i have put up a video showing a proper demo of the syntax diagram view.
Get it at -
http://antlrstudio.com/demo1.wmv

PRASHANT
From prashant.deva at gmail.com  Thu Jun  2 13:24:43 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 13:25:11 2005
Subject: [antlr-interest] Antlr Studio screenshot
In-Reply-To: <200506022154.36040.torkildr@resheim.no>
References: <41fed8f80506012345215939c@mail.gmail.com>
	<41fed8f8050602101536817144@mail.gmail.com>
	<EEF4E052-6295-4AB2-9812-8A7C0DC07FB0@cs.usfca.edu>
	<200506022154.36040.torkildr@resheim.no>
Message-ID: <41fed8f805060213242bd27e79@mail.gmail.com>

> Why not add arrows and let the user decide what he/she likes using the plugin
> preferences. It is pretty straightforward if you just can get the electricity
> to stay on long enough ;-)

The diagram code is probably the most messy part of entire antlr
studio. I absolutely dread to go back to it.

> Seriously, I'm very interested in this tool for Eclipse. If you need a helping
> hand I'll be happy to provide it. I code for (and in) Eclipse daily so I
> consider myself fairly proficient.
Thanks a lot for your generous offer. But i am pretty much done with
the tough part on this release.

PRASHANT

On 6/3/05, Torkild Ulv?y Resheim <torkildr@resheim.no> wrote:
> On Thursday 02 June 2005 19:19, Terence Parr wrote:
> [snip]
> > If it's true you're using color to signify that it's also optional,
> > you might want to rethink that as it will surprise just about
> > everybody.  Syntax diagrams are essential control flow graphs and
> > people will expect the arrows to be the complete flow.
> >
> > When can we have this? :)  I thought I remember you saying a few days
> > a while back.
> >
> > Ter
> Why not add arrows and let the user decide what he/she likes using the plugin
> preferences. It is pretty straightforward if you just can get the electricity
> to stay on long enough ;-)
> 
> Seriously, I'm very interested in this tool for Eclipse. If you need a helping
> hand I'll be happy to provide it. I code for (and in) Eclipse daily so I
> consider myself fairly proficient.
> --
> Med vennlig hilsen / Kind regards                                  ((
> Torkild Ulv?y Resheim, Senior Systemutvikler / Software Engineer    ))
> Emma EDB AS, Trondheim, Norway. http://www.emmaedb.no             |----|_
> Private pages: http://resheim.no - "Any sufficiently advanced     |    | )
> bug is indistinguishable from a feature."                         |____|'
> 
> 
>
From prashant.deva at gmail.com  Thu Jun  2 14:31:43 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 14:31:45 2005
Subject: [antlr-interest] Re: Antlr Studio Video
In-Reply-To: <41fed8f805060213213f98a6e@mail.gmail.com>
References: <41fed8f805060213213f98a6e@mail.gmail.com>
Message-ID: <41fed8f805060214313e6e9867@mail.gmail.com>

So after watching the video, are you guys satisfied with the Diagram view ;-)

PRASHANT

On 6/3/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Ok, i have put up a video showing a proper demo of the syntax diagram view.
> Get it at -
> http://antlrstudio.com/demo1.wmv
> 
> PRASHANT
>
From prashant.deva at gmail.com  Thu Jun  2 14:57:25 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 14:57:28 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
Message-ID: <41fed8f805060214571db61642@mail.gmail.com>

Just reply a 'yay' or a 'nay'.

Supporting this feature in Antlr Studio real nicely would be a *major*
pain in the ass.
And i will do it only if i get a *lot* of 'yays'.
Otherwise it will just be some sort of a workaround or 'just somehow
supported' feature.

I personally think the grammar inheritance portion of Antlr's
documentation should be marked 'Evil - Dont Touch' ;-)

PRASHANT
From monty at codetransform.com  Thu Jun  2 12:43:50 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Thu Jun  2 15:44:18 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>
References: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>
Message-ID: <429F6176.3030009@codetransform.com>

Terence Parr wrote:
> Howdy!
> 
> I can't believe it!  Finally, I have something that people can look  at 
> for ANTLR v3:

Woohoo!  I know you've been working on this real hard for a long time 
now.  I'm glad it is finally seeing the light of day.

This year's conference is really going to rock!  Consider having a 
"codefest" the day before or after so people can get some collective 
wisdom about porting existing grammars over to 3.0 and also about making 
code generators.

Three cheers for Ter!

Monty
From lloyd at nova-mind.com  Thu Jun  2 15:51:49 2005
From: lloyd at nova-mind.com (Lloyd Dupont)
Date: Thu Jun  2 15:52:03 2005
Subject: [antlr-interest] Re: Antlr Studio Video
References: <41fed8f805060213213f98a6e@mail.gmail.com>
	<41fed8f805060214313e6e9867@mail.gmail.com>
Message-ID: <020c01c567c5$a9c20450$9800a8c0@gideone14f6c02>

Very nice!

is it possible to move the syntax panel (on the side and make it bigger)?

Also, why does it annoy you so much to put this additional arrow which 
bypass optional rule?
is it such a big deal?

----- Original Message ----- 
From: "Prashant Deva" <prashant.deva@gmail.com>
To: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 7:31 AM
Subject: [antlr-interest] Re: Antlr Studio Video


So after watching the video, are you guys satisfied with the Diagram view 
;-)

PRASHANT

On 6/3/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Ok, i have put up a video showing a proper demo of the syntax diagram 
> view.
> Get it at -
> http://antlrstudio.com/demo1.wmv
>
> PRASHANT
> 

From open.zone at virgin.net  Thu Jun  2 16:22:25 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 16:08:40 2005
Subject: [antlr-interest] Re: Antlr Studio Video
In-Reply-To: <41fed8f805060214313e6e9867@mail.gmail.com>
Message-ID: <004f01c567c9$f087b480$6502a8c0@hercules>

> So after watching the video, are you guys satisfied with the 
> Diagram view ;-)

No. It looks like a nice feature of a very useful tool but, your [arbitary]
choice of notation is a little bizarre. You really should fix the notation.

Cheers,

Micheal


From ewbank at gmail.com  Thu Jun  2 16:14:07 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Jun  2 16:14:10 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <41fed8f805060214571db61642@mail.gmail.com>
References: <41fed8f805060214571db61642@mail.gmail.com>
Message-ID: <dd3a065f05060216146fff1b2d@mail.gmail.com>

Yay; I would use it more if it were a bit more robust and/or it were
more of a "true" inheritance rather than a syntactic substituting.

On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Just reply a 'yay' or a 'nay'.
> 
> Supporting this feature in Antlr Studio real nicely would be a *major*
> pain in the ass.
> And i will do it only if i get a *lot* of 'yays'.
> Otherwise it will just be some sort of a workaround or 'just somehow
> supported' feature.
> 
> I personally think the grammar inheritance portion of Antlr's
> documentation should be marked 'Evil - Dont Touch' ;-)
> 
> PRASHANT
>
From ewbank at gmail.com  Thu Jun  2 16:17:09 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Jun  2 16:17:14 2005
Subject: [antlr-interest] Re: Antlr Studio Video
In-Reply-To: <004f01c567c9$f087b480$6502a8c0@hercules>
References: <41fed8f805060214313e6e9867@mail.gmail.com>
	<004f01c567c9$f087b480$6502a8c0@hercules>
Message-ID: <dd3a065f0506021617193caf3e@mail.gmail.com>

No.  I will probably not use the diagram view as it is.  It just
doesn't look compelling.

> So after watching the video, are you guys satisfied with the
> Diagram view ;-)
From parrt at cs.usfca.edu  Thu Jun  2 16:18:19 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  2 16:18:21 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
In-Reply-To: <429F6176.3030009@codetransform.com>
References: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>
	<429F6176.3030009@codetransform.com>
Message-ID: <AC96A814-04D0-46B0-898A-A4331377B81F@cs.usfca.edu>


On Jun 2, 2005, at 12:43 PM, Monty Zukowski wrote:

> Terence Parr wrote:
>
>> Howdy!
>> I can't believe it!  Finally, I have something that people can  
>> look  at for ANTLR v3:
>>
>
> Woohoo!  I know you've been working on this real hard for a long  
> time now.  I'm glad it is finally seeing the light of day.
>
> This year's conference is really going to rock!  Consider having a  
> "codefest" the day before or after so people can get some  
> collective wisdom about porting existing grammars over to 3.0 and  
> also about making code generators.
>
> Three cheers for Ter!

Thanks...it has definitely been a long road.  The LL(*) parsing  
strategy and the other goodies + Jean's ANTLRWorks should definitely  
make ANTLR the clear choice for most practical recognition/ 
translation tasks. :)

Has anybody checked out the LL-star example in the examples-v3  
tarball?  It's totally non-LL(k) for any fixed k but ANTLR v3 munches  
it and generates a nice little parser for it.  At least on my box,  
ANTLRWorks does a nice job to highlighting the variable-length  
lookahead in blue as it moves through the simple C input.  :)  The LL 
(*) decision is this one:

decl  :    functionHeader ';' // declaration
          |    functionHeader body // definition
         |    variable
         ;

or something like that.  Anyway, note the arbitrarily long left- 
common prefix on the first two alts. :)

Ter
From scott at javadude.com  Thu Jun  2 17:58:54 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Jun  2 17:58:59 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <41fed8f805060214571db61642@mail.gmail.com>
Message-ID: <200506030152.j531q6T1032330@s2.eroute.net>

My previous employer used it.

- Scott

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Prashant Deva
> Sent: Thursday, June 02, 2005 5:57 PM
> To: ANTLR Interest
> Subject: [antlr-interest] Do u use Grammar Inheritance?
> 
> Just reply a 'yay' or a 'nay'.
> 
> Supporting this feature in Antlr Studio real nicely would be 
> a *major* pain in the ass.
> And i will do it only if i get a *lot* of 'yays'.
> Otherwise it will just be some sort of a workaround or 'just 
> somehow supported' feature.
> 
> I personally think the grammar inheritance portion of Antlr's 
> documentation should be marked 'Evil - Dont Touch' ;-)
> 
> PRASHANT
> 


From open.zone at virgin.net  Thu Jun  2 18:28:34 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun  2 18:14:49 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <41fed8f805060214571db61642@mail.gmail.com>
Message-ID: <005501c567db$8fcaf9b0$6502a8c0@hercules>

> Just reply a 'yay' or a 'nay'.
> 
> Supporting this feature in Antlr Studio real nicely would be 
> a *major* pain in the ass. And i will do it only if i get a 
> *lot* of 'yays'. Otherwise it will just be some sort of a 
> workaround or 'just somehow supported' feature.

What does "real nice support" entail?. What would ANTLRStudio do and how
would I use it or interface with this support.

Ditto for the "workaround support".

> I personally think the grammar inheritance portion of Antlr's 
> documentation should be marked 'Evil - Dont Touch' ;-)

I actually used it heavily on a few projects where I was dealing with
language families.

Micheal

From lloyd at nova-mind.com  Thu Jun  2 18:25:05 2005
From: lloyd at nova-mind.com (Lloyd Dupont)
Date: Thu Jun  2 18:25:12 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
References: <005501c567db$8fcaf9b0$6502a8c0@hercules>
Message-ID: <025201c567db$142624b0$9800a8c0@gideone14f6c02>

I have 3 answer to that:

1. Terence itself said it was evil (Amen ;-) so....
and it would be culled out of 3.x!

2. ANTLR 2.x silently generate an expandedGrammar.g with all the grammar 
alltogether. adding the new rule and replacing the overriden one, doesn't 
seem a big deal to me to duplicate....

I could point out that this expandedGrammar is a good starting point when 
porting inherited grammar to 3.x, as all the adding/including/overriding has 
already be done for you by ANTLR in this file!

3 Anyway it's easy to complain, but thanks for your good works! (yet to come 
(real) soon)

----- Original Message ----- 
From: "Micheal J" <open.zone@virgin.net>
To: "'ANTLR Interest'" <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 11:28 AM
Subject: RE: [antlr-interest] Do u use Grammar Inheritance?


>> Just reply a 'yay' or a 'nay'.
>>
>> Supporting this feature in Antlr Studio real nicely would be
>> a *major* pain in the ass. And i will do it only if i get a
>> *lot* of 'yays'. Otherwise it will just be some sort of a
>> workaround or 'just somehow supported' feature.
>
> What does "real nice support" entail?. What would ANTLRStudio do and how
> would I use it or interface with this support.
>
> Ditto for the "workaround support".
>
>> I personally think the grammar inheritance portion of Antlr's
>> documentation should be marked 'Evil - Dont Touch' ;-)
>
> I actually used it heavily on a few projects where I was dealing with
> language families.
>
> Micheal
> 

From brianlsmith at gmail.com  Thu Jun  2 19:59:51 2005
From: brianlsmith at gmail.com (Brian Smith)
Date: Thu Jun  2 19:59:53 2005
Subject: [antlr-interest] Antlr Studio Video
In-Reply-To: <41fed8f805060213213f98a6e@mail.gmail.com>
References: <41fed8f805060213213f98a6e@mail.gmail.com>
Message-ID: <b0aab04e05060219593cb12997@mail.gmail.com>

Prashant,

I think that your demo is really interesting and I wouldn't let the
people complaining about the dashed boxes get to you. If you change
the color of the dashed lines to black or something else that is dark
then I think you will solve the sole technical issue that was raised
about your decision. Syntax diagramming is not even the make-or-break
feature for an IDE for tools like ANTLR anyway. If I had to make a
wishlist of IDE features for ANTLR, in order of importance, it would
look like this:

* Support for disambiguating ambiguous grammars. In particular, the
tool should show me which parts of the grammar are ambiguous, WHY they
are ambiguous, and offer ways to fix the ambiguities.
* Ability to (semi-)automatically convert grammars written using other
systems (e.g. JavaCC, Flex/Bison, SDF, BNF converter) to ANTLR. Most
computer languages already have a grammar of some kind, but the set of
computer languages with ANTLR grammars is much smaller.
* Support for testing grammars. E.g., generating test cases, run test
cases automatically, provide testing coverage reports. In particular,
the tool should be able to generate a bunch of strings that are
matched by the grammar, and let you selectively add those strings as
test cases.
* Support for interactive development of grammars. I.e., making the
code-compile-test cycle as fast as possible.
* Ability to keep grammars and tests in sync. For example, if you have
seperate a seperate parser and tree parser(s), when you change the
parser, the IDE should help remind you to change the tree parser(s)
and the test cases.
* Syntax highlighting and code folding.
* Code completion, both inside the ANTLR productions and inside the
(Java/C#/etc.) actions.

I think that if your tool provides even half of the above features,
then your users are going to be a lot more productive than they were
without the tool. And productivity, not diagram prettiness, is what
matters. And, anyway, unless the dashed boxes start causing users of
your software to die off or something, it is something that can be
changed in the future at your discretion.

- Brian


On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> Ok, i have put up a video showing a proper demo of the syntax diagram view.
> Get it at -
> http://antlrstudio.com/demo1.wmv
> 
> PRASHANT
>
From lloyd at nova-mind.com  Thu Jun  2 21:40:11 2005
From: lloyd at nova-mind.com (Lloyd Dupont)
Date: Thu Jun  2 21:40:17 2005
Subject: [antlr-interest] question about tree parsing (2.x)
Message-ID: <028f01c567f6$54681450$9800a8c0@gideone14f6c02>

if I have a tree which is matched by

topNode
    :
        ID1
        ( bottomNode ID2 ) *
        LAST_ID
    ;
bottomNode
    :    #(
            ID3
            (
                    ID4
                |   ID5
                |   ID6
            ) +
        )
    ;

is it ok to match it against?
topNode
    :
        ID1
        ( bottomNode ID2 ) *
        LAST_ID
    ;
bottomNode
    :    #(
            ID3
            (
                    ID4
                |   . // catch all for ID5 | ID6
            ) // '+' volontary removed, exit should get 1 level up, no?
        )
    ;

I do something like that but I have the feeling (caused by error message) that ANTLR get sometime lost in the tree
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050603/c58813bd/attachment.html
From prashant.deva at gmail.com  Thu Jun  2 22:44:37 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 22:44:39 2005
Subject: [antlr-interest] Antlr Studio Video
In-Reply-To: <b0aab04e05060219593cb12997@mail.gmail.com>
References: <41fed8f805060213213f98a6e@mail.gmail.com>
	<b0aab04e05060219593cb12997@mail.gmail.com>
Message-ID: <41fed8f805060222443860e3c3@mail.gmail.com>

Brian,
> If you change
> the color of the dashed lines to black or something else that is dark
> then I think you will solve the sole technical issue that was raised
> about your decision. 

Actually , the dashed line ARE black! That was the whole point of
showing the video. The entire diagram is black and white, it just
becomes colored when you move you mouse over it.

Your comments are excellent. I will see how much of that i can support
in my ide.


Lloyd,

>is it possible to move the syntax panel (on the side and make it >bigger)?

Yes, of course. Its a normal eclispe view, you can resize it, move it
,throw it in the trash can or gobble it up ;-)

Michael,
>It looks like a nice feature of a very useful tool but, your [arbitary]
>choice of notation is a little bizarre. 

Actually the notation is not arbitrary. I saw this notation used in a
doc titled ' The Newton Script Programmaing language', from apple
computers. It looked real pretty there, so i thought of using it here.

Will be demonstrating a LOT of other real cool features soon.

PRASHANT


On 6/3/05, Brian Smith <brianlsmith@gmail.com> wrote:
> Prashant,
> 
> I think that your demo is really interesting and I wouldn't let the
> people complaining about the dashed boxes get to you. If you change
> the color of the dashed lines to black or something else that is dark
> then I think you will solve the sole technical issue that was raised
> about your decision. Syntax diagramming is not even the make-or-break
> feature for an IDE for tools like ANTLR anyway. If I had to make a
> wishlist of IDE features for ANTLR, in order of importance, it would
> look like this:
> 
> * Support for disambiguating ambiguous grammars. In particular, the
> tool should show me which parts of the grammar are ambiguous, WHY they
> are ambiguous, and offer ways to fix the ambiguities.
> * Ability to (semi-)automatically convert grammars written using other
> systems (e.g. JavaCC, Flex/Bison, SDF, BNF converter) to ANTLR. Most
> computer languages already have a grammar of some kind, but the set of
> computer languages with ANTLR grammars is much smaller.
> * Support for testing grammars. E.g., generating test cases, run test
> cases automatically, provide testing coverage reports. In particular,
> the tool should be able to generate a bunch of strings that are
> matched by the grammar, and let you selectively add those strings as
> test cases.
> * Support for interactive development of grammars. I.e., making the
> code-compile-test cycle as fast as possible.
> * Ability to keep grammars and tests in sync. For example, if you have
> seperate a seperate parser and tree parser(s), when you change the
> parser, the IDE should help remind you to change the tree parser(s)
> and the test cases.
> * Syntax highlighting and code folding.
> * Code completion, both inside the ANTLR productions and inside the
> (Java/C#/etc.) actions.
> 
> I think that if your tool provides even half of the above features,
> then your users are going to be a lot more productive than they were
> without the tool. And productivity, not diagram prettiness, is what
> matters. And, anyway, unless the dashed boxes start causing users of
> your software to die off or something, it is something that can be
> changed in the future at your discretion.
> 
> - Brian
> 
> 
> On 6/2/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> > Ok, i have put up a video showing a proper demo of the syntax diagram view.
> > Get it at -
> > http://antlrstudio.com/demo1.wmv
> >
> > PRASHANT
> >
>
From stefan at amiq.ro  Thu Jun  2 23:03:14 2005
From: stefan at amiq.ro (stefan)
Date: Thu Jun  2 23:01:33 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <41fed8f805060214571db61642@mail.gmail.com>
References: <41fed8f805060214571db61642@mail.gmail.com>
Message-ID: <200506030903.14841.stefan@amiq.ro>

On Friday 03 June 2005 00:57, Prashant Deva wrote:
> Just reply a 'yay' or a 'nay'.
nay.
> Supporting this feature in Antlr Studio real nicely would be a *major*
> pain in the ass.
> And i will do it only if i get a *lot* of 'yays'.
> Otherwise it will just be some sort of a workaround or 'just somehow
> supported' feature.
>
> I personally think the grammar inheritance portion of Antlr's
> documentation should be marked 'Evil - Dont Touch' ;-)

or just clean it out of documentation v3.0.

> PRASHANT
From lists at lischke-online.de  Thu Jun  2 23:41:39 2005
From: lists at lischke-online.de (Mike Lischke)
Date: Thu Jun  2 23:42:31 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <41fed8f805060214571db61642@mail.gmail.com>
Message-ID: <20050603063444.B193A8E15EA@h118184.serverkompetenz.net>

Prashant, 

> Just reply a 'yay' or a 'nay'.

Yay!
 
> Supporting this feature in Antlr Studio real nicely would be 
> a *major* pain in the ass.

I believe you, but think of cases like a compiler and its associated GUI front end. The compiler needs a strict syntax
while the GUI (e.g. for context sensitive help) needs to be much more flexible. So I would inherit the grammer from the
compiler to be as compliant as possible but would modify those rules that I need to be more tolerant.

Mike
--
www.soft-gems.net 

From prashant.deva at gmail.com  Thu Jun  2 23:44:47 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun  2 23:44:50 2005
Subject: [antlr-interest] Diagram notation for Antlr Studio
Message-ID: <41fed8f8050602234466474e8d@mail.gmail.com>

I have put up a page explaining the notation of diagrams in antlr studio.

http://antlrstudio.com/notation.png

PRASHANT
From geiroves at online.no  Fri Jun  3 00:53:46 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Fri Jun  3 00:53:46 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <72C67F92-CAEC-4242-99CD-11E7224E0107@cs.usfca.edu>
Message-ID: <001c01c56811$5f5d9b30$0100a8c0@rexii>



Maybe its me, but I cannot find anything about the new relese on
www.antlr.org, nor can I find anythign about the licensing policy of
this new release? Why is this so??

I am currently using 2.7.5, but find it hard to track what is going on
in the ANTLR community.

Yes, we have this news group, but a news group is a very inefficient
when it comes to finding information you (I, we) need in a hurry:
Searching for a keyword more often than not gives matched to another
person who asks the same question or someone who thinks they know the
answer.

Speaking in general terms, most of the ANTLR site seems to be for the
"inner circle" only: It is very hard to find information about ANTLR.
The getting started examples are too basic to do any real stuff, and the
provided examples are also either to simple, or way over a beginners
head. 

I am over the beginner level know (I think and hope), but getting there
was very time-consuming: And, isn't a tool like this about saving time?

I have learned the tool the hard way, but is the way "we" want this to
be?


By the way: ANTLR IS great, but I wish it could be more "approachable"
:-)


Geir Ove
Norway


-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
Sent: 2. juni 2005 05:19
To: ANTLR Interest
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!


Howdy!

I can't believe it!  Finally, I have something that people can look  
at for ANTLR v3:

http://www.antlr.org/download/antlr-3.0ea1.tar.gz
http://www.antlr.org/download/examples-v3.tar.gz

and Jean Bovet has created a 1.0ea1 release of his excellent ANTLRWorks:

http://www.antlr.org/works/index.html

The ANTLRWorks jar has everything you need including ANTLR 3.0ea1.

Per the license in LICENSE.txt, this software is not guaranteed to  
work and might even destroy all life on this planet.

ANTLR and ANTLRWorks are released under the BSD license, though  
ANTLRWorks has no source with it at the moment.

Feel free to send comments to the antlr-interest list or if you want  
to send patches:

http://www.antlr.org/misc/feedback

(minor tweak to the contribution license coming tomorrow AM; had even  
more lawyers look at it <snicker>)

Expect this software to change over the summer (syntax+libraries  
possibly) with hopefully a number of early access releases.  Expect  
more language targets.  Ric Klaren is working on the C templates and  
the C# folks are reportedly working on the C# templates (should be  
easy given it's similarity to Java).

The only thing I can tell you is that it seems to work for the  
examples-v3.tar.gz examples.

Just so you know, you will be asked to "register" when you first  
bring up ANTLRWorks.

Terence
PS    Looks like Europe and Asia get it first, given the timing. :)
--
CS Professor & Grad Director, University of San Francisco Creator, ANTLR
Parser Generator, http://www.antlr.org Cofounder, http://www.jguru.com



From ewbank at gmail.com  Fri Jun  3 02:17:12 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Jun  3 02:17:15 2005
Subject: [antlr-interest] question about tree parsing (2.x)
In-Reply-To: <028f01c567f6$54681450$9800a8c0@gideone14f6c02>
References: <028f01c567f6$54681450$9800a8c0@gideone14f6c02>
Message-ID: <dd3a065f0506030217f418565@mail.gmail.com>

Yes; you can do this; you are probably seeing ambiguity warnings about
the loop because both "ID4" and "." will match an ID4 node.  The trick
is a syntactic predicate.  Change this:

> bottomNode 
>     :    #( 
>             ID3 
>             ( 
>                     ID4 
>                 |   . // catch all for ID5 | ID6 
>             ) // '+' volontary removed, exit should get 1 level up, no? 
>         ) 
>     ; 

To this:

> bottomNode 
>     :    #( 
>             ID3 
>             ( 
>                 (ID4) =>  ID4 
>                 |   . // catch all for ID5 | ID6 
>             )+
>         ) 
>     ; 

The "(ID4) => ID4" tells ANTLR to use that selection if an ID4 is seen.

I don't see why you removed the "+" unless you only want to match the
first child of ID3.  To match all ID4 children of ID3, you need the
"+".
From scott at javadude.com  Fri Jun  3 04:55:27 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Jun  3 04:55:36 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <20050603063444.B193A8E15EA@h118184.serverkompetenz.net>
Message-ID: <200506031248.j53CmaT1002889@s2.eroute.net>

Personally, I'd rather think of it as "Grammar Rule Delegation", and I think
there are enough instances of common structures that it's a useful feature.

(I loathe implementation inheritance in general; delegation is a clear
winner both at compile and runtime...)

Perhaps we're just looking at things the wrong way. Maybe all we really need
is an include mechanism, where common rules can be included, and those which
we would override are only in the separate grammars?

Later,
-- Scott



From matthew.ford at forward.com.au  Thu Jun  2 14:31:26 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Fri Jun  3 05:42:22 2005
Subject: Locks was Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1
	released!
References: <002a01c5677f$cc32b570$6502a8c0@hercules>
	<59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>
Message-ID: <000001c56839$ad2d0300$0200a8c0@notebook>

A basic problem with Java file locks is that you cannot lock a file before
it exists and has been opened.
I gave up on Java locks and wrote my own lock table (hash table on the
cononical filename)
Works well on Windows and Linux provided only multiple threads one java
application are
contending for the locks.
matthew
P.S. code is available if you want it.

----- Original Message ----- 
From: "Jean Bovet" <antlr-list@arizona-software.ch>
To: "Micheal J" <open.zone@virgin.net>
Cc: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 4:04 AM
Subject: Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!


> >
> > 1. Build & Debug should provide a sensible default for the location of
> > working/generated files.  I suggest a "debug" sub-dir below the
> > location of
> > the grammar file. The tool should indicate if the dir needs to be
> > created.
> >
>
> Yep ;-)
>
> > 2. From the Build & Debug dialog, clicking browse to change the
> > current
> > setting doesn't start browsing from the current setting's location, it
> > always starts at the user's "home directory" (the "My Documents"
> > dir on my
> > Windows box).
> >
>
> Oops, you are right. Will be fixed.
>
> > 3. As per my previous message, I get a lot of entries in the
> > console about
> > it's inability to write to a grammar.stats file. The dir/folder
> > does exist
> > but the file doesn't.
> >
> > <error>
> > [14:41:29] internal error: Exception
> > java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.relea
> > se(Unk
> > nown Source): can't write stats to C:\Documents and
> > Settings\MichealJ\antlrworks\grammar.stats
> > </error>
> >
>
> Yes, this is apparently a Java problem when using locks on file. It
> works smoothly on Mac OS and the Linux version I have used.
> Will see with Terence what we can do about that (because it is used
> on both ANTLRWorks and ANTLR side).
>
> > 4. Can this support cross-language debugging?. Is there some TCP
> > protocol
> > that needs to be supported by geberated parsers/lexers to support this
> > scenario?.
> >
>
> Yes, you can. When generating a parser from the command line, use the
> "-debug" option. Launch the parser and then use the "Debug Remote"
> item in ANTLRWorks to connect to this running parser. Of course, the
> running parser can be in any language.
>
> Oh, and make sure you have opened the corresponding grammar file in
> ANTLRWorks ;-)
>
> > 5. The syntax diagram is a useful addition. I was expecting to be
> > able to
> > navigate and perhaps refactor visually. Perhaps in time... ;-)
> >
>
> The future will talk ;-)
>
> > 6. Perhaps the tool should keep track of generated status
> > internally and
> > disable the items on the "Generate" menu accordingly. Got tired of
> > being
> > told I couldn't show code until something had being generated.
> >
>
> Will fix that.
>
> Thanks for all your comments!
>
> Jean
>

From matthew.ford at forward.com.au  Thu Jun  2 14:34:41 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Fri Jun  3 05:42:28 2005
Subject: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!
References: <20050602132448.DB0252A8CE@bilbo.mebtel.net>
	<0F4E494C-8711-4D1D-A9E3-34631A7F1763@cs.usfca.edu>
Message-ID: <000101c56839$af37a010$0200a8c0@notebook>

Java is not as cross platform independent as people think.
I had a lot of focus problems and Inet address problems moving a working
program from Windows to Linux
matthew

----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>
To: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 2:13 AM
Subject: Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!


>
> On Jun 2, 2005, at 6:24 AM, Chris Snyder wrote:
>
> > I noticed this also. Parts of words highlighted in mine.
>
> Hi.  can we start hearing about the platforms?  I.e., PC/Mac/Atari,
> WinXP/Dos/... Java version etc...?  When it works on our box and not
> on yours we'll need to track which platforms have trouble.
>
> Thanks!
>
> Ter
>

From matthew.ford at forward.com.au  Thu Jun  2 14:39:04 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Fri Jun  3 05:42:34 2005
Subject: Separate list was Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks
	1.0ea1 released!
References: <002901c5677a$9147f3d0$6502a8c0@hercules>
	<8B1BA9A4-5DB9-4133-ABE3-76209C9F9968@cs.usfca.edu>
Message-ID: <000201c56839$b0663500$0200a8c0@notebook>

Can we please have a separate list for ANTLRWorks so the main list is free
for the usual Antlr grammar problems.
matthew
----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>
To: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 2:08 AM
Subject: Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!


> Thanks for all the feedback folks!!
>
> Note that it's early access (meaning it's nowhere near what we'd call
> an alpha release) so we are expecting lots of problems.  Also, a wide
> variety of different platforms/environments will definitely cause us
> trouble at first since we couldn't test it everywhere.  Java has
> truly shown it's "write once, debug everywhere" nature for Swing so far.
>
> Perhaps we messed up the jar.  I have been using ANTLRWorks to do my
> examples.  Works great for me.  Strange.  Yes, the console is full of
> "noise", but I asked Jean to put that in there so we can see any
> errors that pop up.  Naturally when you're typing a grammar, it's
> invalid until you finish the rule or whatever so you'll get lots of
> errors.
>
> Keep the comments coming!
>
> Ter
>

From matthew.ford at forward.com.au  Thu Jun  2 14:42:25 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Fri Jun  3 05:42:42 2005
Subject: Current Linenumber was Re: [antlr-interest] ANTLR 3.0ea1 and
	ANTLRWorks 1.0ea1 released!
References: <41fed8f8050602042522d7bdb1@mail.gmail.com><002901c5677a$9147f3d0$6502a8c0@hercules>
	<41fed8f8050602083671501fb2@mail.gmail.com>
Message-ID: <000301c56839$b1b34e70$0200a8c0@notebook>

Could we have the current cursor line number display in the status bar
please?
matthew

----- Original Message ----- 
From: "Prashant Deva" <prashant.deva@gmail.com>
To: "Micheal J" <open.zone@virgin.net>
Cc: <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 1:36 AM
Subject: Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1 released!


> > Where did you get that 184kb ANTLR v3 grammar (ANTLR v2.x grammars
aren't
>
> Its not , but the ide shouldn't crash on opening a 184 kb of 'any' text.
>
> > I'd like to see the errors you mention. So far, I only
> > get entries like this in the console:
> You open a new file in the ide, type 'grammar a' , wait for a second,
> and a console window pops up right in front of the editor with the msg
> -
> "[21:02:41] 1:9: syntax error: antlr: line 1:9: unexpected token: null
> [21:02:41] 1:9: syntax error: antlr: line 1:9: expecting SEMI, found
'null'
> [21:02:41] 0:0: syntax error: assign.types: <AST>:0:0: unexpected end of
subtree
> [21:02:41] 0:0: syntax error: define: <AST>:0:0: unexpected end of subtree
> [21:02:41] 0:0: syntax error: buildnfa: <AST>:0:0: unexpected end of
subtree"
>
> And the problem regarding syntax highlighting and stuff occcurs with
> 'valid' antlr 3 grammars too.
>
> PRASHANT
>
>
> On 6/2/05, Micheal J <open.zone@virgin.net> wrote:
> > > well 64 mb is a LOT of mem to occupy for opening a 184kb file.
> > >
> > > PRASHANT
> >
> > Where did you get that 184kb ANTLR v3 grammar (ANTLR v2.x grammars
aren't
> > directly usable AFAICT).
> >
> > Can you share it?. I'd like to see the errors you mention. So far, I
only
> > get entries like this in the console:
> >
> > -------- BEGIN ----------
> > 14:38:22] internal error: Exception
> >
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> > nown Source): can't write stats to C:\Documents and
> > Settings\MichealJ\antlrworks\grammar.stats
> >
> > [14:38:22] internal error: Exception
> >
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> > nown Source): can't write stats to C:\Documents and
> > Settings\MichealJ\antlrworks\grammar.stats
> >
> > [14:38:34] Launcher>Parser launched
> > [14:40:19] Launcher>bar is a declaration
> > [14:40:20] Launcher>foo is a definition
> > [14:41:29] internal error: Exception
> >
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> > nown Source): can't write stats to C:\Documents and
> > Settings\MichealJ\antlrworks\grammar.stats
> >
> > [14:41:29] internal error: Exception
> >
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Unk
> > nown Source): can't write stats to C:\Documents and
> > Settings\MichealJ\antlrworks\grammar.stats
> > --------  END  ----------
> >
> >
> >
>

From matthew.ford at forward.com.au  Thu Jun  2 15:02:05 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Fri Jun  3 05:42:43 2005
Subject: [antlr-interest] Newbie! how can I convert a list of bullets to
	anHTML list
References: <6C74F0D7F53FBD4782435D1FB8FEF06D10B028@LONEXVS1.modemmedia.com>
Message-ID: <000401c56839$b30faa20$0200a8c0@notebook>

Is the list actually the character sequence
/n
/t-/tbullet/n
/t-/tbullet/n
/t-/tbullet/n
/t-/tbullet/n

What makes a list different from other text like /t-/t
matthew

You may need to do infinite lookahead to decided you are processing a list
 like 
(list) => list
see Syntactic Predicates in the docs
matthew
  ----- Original Message ----- 
  From: Matthew Pearce 
  To: antlr-interest@antlr.org 
  Sent: Friday, June 03, 2005 1:19 AM
  Subject: [antlr-interest] Newbie! how can I convert a list of bullets to anHTML list


  I'd like to convert a list of bullets to an HTML list, i.e.:



  From:

  -          bullet

  -          bullet

  -          bullet



  To:

  <ul><li>bullet</li><li>bullet</li><li>bullet</li></ul>



  I thought over a few different options:



  1. Have the lexer produce a LIST token when it matches:

   - bullet

  But I don't know how to get the parser to find the <ul> tags, because I cannot add a special case



  2. Have the lexer produce a LIST token when it matches:

  -          bullet

  -          bullet

  -          bullet

  But I don't know how to get the parser to insert the <li> tags, because it hasn't tokenized each bullet



  3. Have the parser match a rule for list that matches like:



  list:       LIST^  PARA (LIST! PARA)+



  Which would give me an AST node like, that could support nested lists.



                          LIST ----+----PARA

                                      +----PARA

                                      +----LIST--------+-PARA

                                       +---PARA         



  But this gives me non-determinisim, between match a straight paragraph (PARA), and a bulleted line LIST PARA.





  Can anyone suggest an approach?  





  class CourseTreeWalker extends TreeParser;



  tree2html returns [String s]

  { s = ""; }

      :

        (#(t:TTL (p:PARA | l:list)+ { 

              s+="<h4>" +t+ "</h4>\n";

              s+= "<p>" +p+ "</p>\n";

              s+= "<ul>"+l+"</ul>"; } ))+   // this doesn't do what I want

        

      ;



  list        // this doesn't do what I want

  { String l = ""; }

   :

        (#(LIST (p2:PARA) { 

              l+="<ul><li>" +p2+ "</li></ul>\n";

               } ))

  ;



  class CourseParser extends Parser;



  options {

      buildAST = true;

  }



  file :  (section)+ EOF! ;



  section : TTL^ (listexpr)+;



  listexpr : (LIST^)? paraexpr;   // this just matches each bullet, instead of treating bullets as a group



  paraexpr: (PARA);





  class CourseLexer extends Lexer;



  options {

      k = 3; 

      charVocabulary = '\3'..'\377';

  }





  PARA  : ("LZU") =>

          ("LZU" (LETTER | DIGIT | ' ' | '/')+)  { $setType(TTL); }

          |

          ("Des") =>

          ("Description:")   { $setType(TTL); }

          |

          ("Lea") =>

          ("Learning objectives:")   { $setType(TTL); }

          |

          ("Tar") =>

          ("Target audience:")   { $setType(TTL); }

          |

          ("Pre") =>

          ("Prerequisites:")   { $setType(TTL); }

          |

           (CHAR | ' ' )+ 

        ;





  LIST   : ('-' | '?') ;







  NEWLINE : (

                    ('\r''\n')=> '\r''\n' //DOS

                    

                    | '\r' //MAC 

                    

                    | '\n' //UNIX

                    )

                    { $setType(Token.SKIP); newline();  }

              ;

  protected

  DIGIT

        : '0'..'9'

        ;



  protected

  LETTER

        : ('a'..'z' | 'A'..'Z')

        ;



              

  protected

  CHAR

        : ~( '\n' | '\r' | ' ' | '\t' | '\f' | '-' | '?' )

        ;

        

      

      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050603/41aaa71c/attachment-0001.html
From mpearce at digitas.com  Fri Jun  3 06:54:04 2005
From: mpearce at digitas.com (Matthew Pearce)
Date: Fri Jun  3 06:54:09 2005
Subject: [antlr-interest] Newbie! how can I convert a list of bullets to
	anHTML list
Message-ID: <6C74F0D7F53FBD4782435D1FB8FEF06D10B036@LONEXVS1.modemmedia.com>

Matthew,

 

Thanks for your reply. I'll try adding a predicate, as you suggest. I
actually don't have any problem finding a list in the lexer. But, I
guess, in the parser, I somehow have to know that one list token is the
first or last of a sequence, which, from the docs, sounded like a
context-sensitive grammar, like:

 

para list -> list_begin list_item

list list -> list_item

list para -> list_item list_end

 

Does that make sense to you?

 

A list is actually the character sequence:

 

\n

-\tLorem ipsum\n

-\tDolor sit\n

-\tAmet\n

 

\n

-\sFoo bar\n

-\sBar foo\n

-\sFoo\n

 

I haven't attempted it yet, but I also need to support a char sequence
like

 

\n

1.\tLorem ipsum\n

2.\tDolor sit\n

2.1.\tAmet\n

2.2.\tConsectetuer Amet\n

 

making a nested HTML ordered list <ol><li><ol>Consectetuer
Amet</ol></li></ol>.

 

Hence my earlier point about nested lists.

 

 

________________________________

From: Matthew Ford [mailto:matthew.ford@forward.com.au] 
Sent: 02 June 2005 23:02
To: Matthew Pearce; antlr-interest@antlr.org
Subject: Re: [antlr-interest] Newbie! how can I convert a list of
bullets to anHTML list

 

Is the list actually the character sequence

/n

/t-/tbullet/n

/t-/tbullet/n

/t-/tbullet/n

/t-/tbullet/n

 

What makes a list different from other text like /t-/t

matthew

 

You may need to do infinite lookahead to decided you are processing a
list

 like 

(list) => list

see Syntactic Predicates in the docs

matthew

	----- Original Message ----- 

	From: Matthew Pearce <mailto:mpearce@digitas.com>  

	To: antlr-interest@antlr.org 

	Sent: Friday, June 03, 2005 1:19 AM

	Subject: [antlr-interest] Newbie! how can I convert a list of
bullets to anHTML list

	 

	I'd like to convert a list of bullets to an HTML list, i.e.:

	 

	From:

	-          bullet

	-          bullet

	-          bullet

	 

	To:

	<ul><li>bullet</li><li>bullet</li><li>bullet</li></ul>

	 

	I thought over a few different options:

	 

	1. Have the lexer produce a LIST token when it matches:

	 - bullet

	But I don't know how to get the parser to find the <ul> tags,
because I cannot add a special case

	 

	2. Have the lexer produce a LIST token when it matches:

	-          bullet

	-          bullet

	-          bullet

	But I don't know how to get the parser to insert the <li> tags,
because it hasn't tokenized each bullet

	 

	3. Have the parser match a rule for list that matches like:

	 

	list:       LIST^  PARA (LIST! PARA)+

	 

	Which would give me an AST node like, that could support nested
lists.

	 

	                        LIST ----+----PARA

	                                    +----PARA

	                                    +----LIST--------+-PARA

	                                     +---PARA         

	 

	But this gives me non-determinisim, between match a straight
paragraph (PARA), and a bulleted line LIST PARA.

	 

	 

	Can anyone suggest an approach?  

	 

	 

	class CourseTreeWalker extends TreeParser;

	 

	tree2html returns [String s]

	{ s = ""; }

	    :

	      (#(t:TTL (p:PARA | l:list)+ { 

	            s+="<h4>" +t+ "</h4>\n";

	            s+= "<p>" +p+ "</p>\n";

	            s+= "<ul>"+l+"</ul>"; } ))+   // this doesn't do
what I want

	      

	    ;

	 

	list        // this doesn't do what I want

	{ String l = ""; }

	 :

	      (#(LIST (p2:PARA) { 

	            l+="<ul><li>" +p2+ "</li></ul>\n";

	             } ))

	;

	 

	class CourseParser extends Parser;

	 

	options {

	    buildAST = true;

	}

	 

	file :  (section)+ EOF! ;

	 

	section : TTL^ (listexpr)+;

	 

	listexpr : (LIST^)? paraexpr;   // this just matches each
bullet, instead of treating bullets as a group

	 

	paraexpr: (PARA);

	 

	 

	class CourseLexer extends Lexer;

	 

	options {

	    k = 3; 

	    charVocabulary = '\3'..'\377';

	}

	 

	 

	PARA  : ("LZU") =>

	        ("LZU" (LETTER | DIGIT | ' ' | '/')+)  { $setType(TTL);
}

	        |

	        ("Des") =>

	        ("Description:")   { $setType(TTL); }

	        |

	        ("Lea") =>

	        ("Learning objectives:")   { $setType(TTL); }

	        |

	        ("Tar") =>

	        ("Target audience:")   { $setType(TTL); }

	        |

	        ("Pre") =>

	        ("Prerequisites:")   { $setType(TTL); }

	        |

	         (CHAR | ' ' )+ 

	      ;

	 

	 

	LIST   : ('-' | '*') ;

	 

	 

	 

	NEWLINE : (

	                  ('\r''\n')=> '\r''\n' //DOS

	                  

	                  | '\r' //MAC 

	                  

	                  | '\n' //UNIX

	                  )

	                  { $setType(Token.SKIP); newline();  }

	            ;

	protected

	DIGIT

	      : '0'..'9'

	      ;

	 

	protected

	LETTER

	      : ('a'..'z' | 'A'..'Z')

	      ;

	 

	            

	protected

	CHAR

	      : ~( '\n' | '\r' | ' ' | '\t' | '\f' | '-' | '*' )

	      ;

	      

	    

	    

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050603/a2c99202/attachment-0001.html
From markm at cs.jhu.edu  Fri Jun  3 08:26:28 2005
From: markm at cs.jhu.edu (Mark Miller)
Date: Fri Jun  3 08:26:51 2005
Subject: [antlr-interest] Diagram notation for Antlr Studio
In-Reply-To: <41fed8f8050602234466474e8d@mail.gmail.com>
References: <41fed8f8050602234466474e8d@mail.gmail.com>
Message-ID: <42A076A4.5090909@cs.jhu.edu>

Prashant Deva wrote:
> I have put up a page explaining the notation of diagrams in antlr studio.
> 
> http://antlrstudio.com/notation.png

Your screenshot at http://antlrstudio.com/screenshot.png doesn't quite follow 
this notation. If it did, the back-pointing loop arrow would be outside the 
dashed-box, not inside it.

-- 
Text by me above is hereby placed in the public domain

     Cheers,
     --MarkM

From prashant.deva at gmail.com  Fri Jun  3 08:44:09 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Fri Jun  3 08:44:12 2005
Subject: [antlr-interest] Antlr Studio blog
Message-ID: <41fed8f80506030844793ad59c@mail.gmail.com>

Ok, i have decided to create a separate blog for discussing and
announcing features of antlr studio.

http://antlrstudio.com/blog/blog.html

Henceforth , I will be publishing all antlr studio related news there only.

This is the first time i have created a blog. so if you have problems
posting comments or would like me to change some settings, just let me
know.

PRASHANT
From johnm-antlr at non.net  Fri Jun  3 08:48:18 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Fri Jun  3 08:47:59 2005
Subject: [antlr-interest] Do u use Grammar Inheritance?
In-Reply-To: <dd3a065f05060216146fff1b2d@mail.gmail.com>
References: <41fed8f805060214571db61642@mail.gmail.com>
	<dd3a065f05060216146fff1b2d@mail.gmail.com>
Message-ID: <17056.31682.359832.148031@despot.non.net>

>>>>> "Bryan" == Bryan Ewbank <ewbank@gmail.com> writes:
[...]

> Yay;

++

I've used it a fair bit. :-)


> I would use it more if it were a bit more robust and/or it were more of a
> "true" inheritance rather than a syntactic substituting.

We've talked about how to do it a good bit better, IMHO, for the
future. Especially for some of the common cases.  We'll see how that plays
out when Ter releases the first draft that supports it later this year
(hopefully :-).

Take care,
	John
From monty at codetransform.com  Fri Jun  3 06:32:07 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Fri Jun  3 09:32:30 2005
Subject: [antlr-interest] question about tree parsing (2.x)
In-Reply-To: <dd3a065f0506030217f418565@mail.gmail.com>
References: <028f01c567f6$54681450$9800a8c0@gideone14f6c02>
	<dd3a065f0506030217f418565@mail.gmail.com>
Message-ID: <42A05BD7.9090005@codetransform.com>

Bryan Ewbank wrote:
> Yes; you can do this; you are probably seeing ambiguity warnings about
> the loop because both "ID4" and "." will match an ID4 node.  The trick
> is a syntactic predicate.  Change this:
> 
> 
>>bottomNode 
>>    :    #( 
>>            ID3 
>>            ( 
>>                    ID4 
>>                |   . // catch all for ID5 | ID6 
>>            ) // '+' volontary removed, exit should get 1 level up, no? 
>>        ) 
>>    ; 
> 
> 
> To this:
> 
> 
>>bottomNode 
>>    :    #( 
>>            ID3 
>>            ( 
>>                (ID4) =>  ID4 
>>                |   . // catch all for ID5 | ID6 
>>            )+
>>        ) 
>>    ; 
> 
> 
> The "(ID4) => ID4" tells ANTLR to use that selection if an ID4 is seen.
> 
> I don't see why you removed the "+" unless you only want to match the
> first child of ID3.  To match all ID4 children of ID3, you need the
> "+".

Instead of a syntactic predicate you could replace '.' with ~(ID4)

Monty
From parrt at cs.usfca.edu  Fri Jun  3 12:14:28 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  3 12:13:57 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <001c01c56811$5f5d9b30$0100a8c0@rexii>
References: <001c01c56811$5f5d9b30$0100a8c0@rexii>
Message-ID: <A17E9473-4E6E-43AC-ACC9-410C60E7BB9C@cs.usfca.edu>


On Jun 3, 2005, at 12:53 AM, Geir Ove Skjaervik wrote:

>
>
> Maybe its me, but I cannot find anything about the new relese on
> www.antlr.org, nor can I find anythign about the licensing policy of
> this new release? Why is this so??

Hi.  Thanks for the feedback.  The not-yet-released ANTLR v3 will be  
under the BSD license.  An early access release was announced on the  
mailing list, but very specifically not announced on the home page  
because only experience ANTLR developers should play with it.  I  
decided it was best only to announce on the mailing list.

> I am currently using 2.7.5, but find it hard to track what is going on
> in the ANTLR community.
>
> Yes, we have this news group, but a news group is a very inefficient
> when it comes to finding information you (I, we) need in a hurry:
> Searching for a keyword more often than not gives matched to another
> person who asks the same question or someone who thinks they know the
> answer.

This is true.  Normally I announce things on the news list, but as  
you see from the above, I decided against it this time.

> Speaking in general terms, most of the ANTLR site seems to be for the
> "inner circle" only: It is very hard to find information about ANTLR.

It was designed very carefully.  The top is for people deciding about  
ANTLR: what is it?  What do people say about it?  Who uses it?

Below that is for people using it: doc, news, grammars, file sharing,  
articles.

> The getting started examples are too basic to do any real stuff,  
> and the
> provided examples are also either to simple, or way over a beginners
> head.

That is probably true.  Have you seen my course materials?  They may  
go into more detail.

I suspect that my upcoming "Using ANTLR in the wild" book (starting  
on it this Fall) will serve you nicely.

> I am over the beginner level know (I think and hope), but getting  
> there
> was very time-consuming: And, isn't a tool like this about saving  
> time?

Why was it time consuming to get through the beginning level?  I'll  
need this info when I write the book.  Is it because language tools  
are just different from normal programming or does the tool suck?   
Does the intro doc suck?

> I have learned the tool the hard way, but is the way "we" want this to
> be?

No.  I want it to be easy.  I"ll be doing the book and ANTLRWorks  
will help a lot.  Actually 3.0 itself will make life much easier.   
Part of the problem with ANTLR 2 is that it is quirky as hell!

> By the way: ANTLR IS great, but I wish it could be more "approachable"
> :-)

Me too!  Hopefully with more feedback from people, it will get easier  
and easier.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Fri Jun  3 12:15:20 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  3 12:14:47 2005
Subject: Locks was Re: [antlr-interest] ANTLR 3.0ea1 and ANTLRWorks 1.0ea1
	released!
In-Reply-To: <000001c56839$ad2d0300$0200a8c0@notebook>
References: <002a01c5677f$cc32b570$6502a8c0@hercules>
	<59566DB6-3C7F-4808-AB2D-68927A8C8C14@arizona-software.ch>
	<000001c56839$ad2d0300$0200a8c0@notebook>
Message-ID: <B62D448A-A4F7-40C0-BF19-49B4DE92F515@cs.usfca.edu>


On Jun 2, 2005, at 2:31 PM, Matthew Ford wrote:

> A basic problem with Java file locks is that you cannot lock a file  
> before
> it exists and has been opened.
> I gave up on Java locks and wrote my own lock table (hash table on the
> cononical filename)

Hi Matthew, yep, I could do it for one VM with one word:  
synchronized, but I needed it to work across multiple VMs on the same  
machine.

Thanks
Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From matthew.ford at forward.com.au  Fri Jun  3 17:46:31 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Fri Jun  3 17:46:37 2005
Subject: [antlr-interest] White space handling in V3.0
Message-ID: <003401c5689e$d9d9d3a0$0200a8c0@notebook>

Hi Ter,

channel=99 appears to consume white space
is there a way to get it back when processing

(WORD)+  

so the words have the whitespace between them?

matthew
From parrt at cs.usfca.edu  Fri Jun  3 20:43:34 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun  3 20:43:37 2005
Subject: [antlr-interest] White space handling in V3.0
In-Reply-To: <003401c5689e$d9d9d3a0$0200a8c0@notebook>
References: <003401c5689e$d9d9d3a0$0200a8c0@notebook>
Message-ID: <8D6F23F3-F8A7-4E6D-9A30-1FEEEE901456@cs.usfca.edu>


On Jun 3, 2005, at 5:46 PM, Matthew Ford wrote:

> Hi Ter,
>
> channel=99 appears to consume white space
> is there a way to get it back when processing
>
> (WORD)+
>
> so the words have the whitespace between them?

You bet.  The parser simply tunes to a particular channel and 99 is  
definitely off channel.  All tokens are kept in v3 so you can always  
as for the tokens to the left or right of you.  Further, do a toString 
() on the token stream and all tokens come back out. :)

You can easily tweak the input stream as well; see the tweak example  
in the examples-v3 stuff. :)

Ter
From gbr at newtechlaw.com  Sat Jun  4 01:47:31 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat Jun  4 01:43:32 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on
  www.antlr.org??
In-Reply-To: <A17E9473-4E6E-43AC-ACC9-410C60E7BB9C@cs.usfca.edu>
References: <001c01c56811$5f5d9b30$0100a8c0@rexii>
	<001c01c56811$5f5d9b30$0100a8c0@rexii>
Message-ID: <4.3.2.7.2.20050604003937.06f66ea0@morpho.newtechlaw.com>

At 12:14 PM 6/3/2005, Terence Parr wrote:

>>I am over the beginner level know (I think and hope), but getting
>>there
>>was very time-consuming: And, isn't a tool like this about saving
>>time?
>
>Why was it time consuming to get through the beginning level?  I'll
>need this info when I write the book.  Is it because language tools
>are just different from normal programming or does the tool suck?
>Does the intro doc suck?

I will try to take a constructive stab at this.  Given that the problem 
space and tool are respectively very complex and capable of very complex 
operation, the documentation is just too eager.  It presents something 
basic and then jets off mixing a bunch of fairly complex potential uses 
together which makes following and understanding any one very difficult.

For example, under http://www.antlr.org/doc/trees.html#_bb4, there is brief 
introduction to marking lexer tokens as roots.  Ok.  Then some stuff about 
building trees.  Nothing there about parser tokens as roots.  I think that 
is what I need for my problem -- I need to understand better how ANTLR 
wants to mark and construct parser trees.  So, is marking a new parser 
token as a root even possible?  Well, keep looking down.  Token 
translation.  Ok.  Token factories.  Ok, I guess.  Heterogeneous ASTs.  Ok, 
real advanced.  Fairly certain that is not applicable to my initial needs.

Finally! An first example ("An Expression Tree Example").  Maybe that will 
walk me through enough to understand how ANTLR wants  me to solve my problem.

Problem statement: a simple value accumulator implemented using a simple 
tree.  Ok, not really close to my case I think, but sounds like it has a 
similar level of complexity so I should be able to learn bunches from it.

OH, NO: Third paragraph, the "formal statement of the explanation of the 
solution to follow":

"The AST operator nodes must combine the results of computing the value of 
their two subtrees.  They must perform a depth-first walk of the tree below 
them.  For fun and to make the operations more obvious, the operator nodes 
define left() and right() instead, making them appear even more different 
than the normal child-sibling tree representation.  Consequently, these 
expression trees can be treated as both homogeneous child-sibling trees and 
heterogeneous expression trees."


??? Fun and obvious???  Make them appear more different???  A straight 
first example?  No.  More accurately an advanced transvestite example.

There are so many issues working in this example, I challenge anyone not 
already an expert to readily tell what design features pertain to what -- 
what is there for fun and what select parts are essential for the 
particular purposes relevant to a relative new-comer's basic issues of 
understanding.  The question is, would someone not capable of authoring 
this example in the first place, now understand matters well enough to go 
back and author the simple, straight-forward version?

Now, don't get me wrong: I am not advocating plodding 
documentation.  Enthusiasm is a great tool for maintaining interest in the 
narrative, particularly on paper.  There just needs to be something of a 
middle ground (at least for us middle of the road programmers).

HTHs,
Gerald


----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net


From ewbank at gmail.com  Sat Jun  4 05:17:52 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sat Jun  4 05:19:00 2005
Subject: [antlr-interest] Reasonable performance expectations (v2.7.5)
Message-ID: <dd3a065f050604051726716756@mail.gmail.com>

So, I've got a compiler that takes a C-like language (around 25
tree-parsing passes) and does basic semantic analysis and some
optimizations (function inlining, constant propogation, etc).  I'm
using flex for the scanner, and C++ as my target language.

What does your gut tell you the expected execution time on a 10000
line input file would be?

I know this is a "shot in the dark" question, but I don't have much
intuition about how ANTLR performs.

Thanks,
- Bryan
From matthew.ford at forward.com.au  Sat Jun  4 13:55:28 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Sat Jun  4 13:55:34 2005
Subject: [antlr-interest] Running antlr Tool V3.0 from ant  (in netbeans)
Message-ID: <001c01c56947$bd80b350$0200a8c0@notebook>

hi all,

This is the target I am trying to run

    <target name="-pre-compile" description="antlrGeneration">
      <echo message="Generating Antlr files"/>
    <java classname="org.antlr.Tool"
        fork="yes" dir="C:\antlr-3.0ea1\outputs\list"
        classpath="${javac.classpath}">
        <arg value="C:\antlr-3.0ea1\outputs\list\list.g"/>
    </java>
   </target>
where javac.classpath contains the V3.0 antlr libs jars
The the error is shown below
any suggestions??
matthew

Generating Antlr files
ANTLR Parser Generator   Early Access Version 3.0ea1 (June 1, 2005)
1989-2005
internal error: C:\antlr-3.0ea1\outputs\list\list.g :
java.util.NoSuchElementException: no such attribute: stackTrace in template
context [CANNOT_WRITE_FILE]
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.java:
620)
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java:518
)
org.antlr.tool.ToolMessage.toString(ToolMessage.java:71)
java.lang.String.valueOf(String.java:2577)
java.io.PrintStream.print(PrintStream.java:616)
java.io.PrintStream.println(PrintStream.java:753)
org.antlr.tool.ErrorManager$1.error(ErrorManager.java:199)
org.antlr.tool.ErrorManager.error(ErrorManager.java:371)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:308)
org.antlr.Tool.processGrammar(Tool.java:233)
org.antlr.Tool.process(Tool.java:173)
org.antlr.Tool.main(Tool.java:65)

From matthew.ford at forward.com.au  Sat Jun  4 13:59:20 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Sat Jun  4 13:59:24 2005
Subject: [antlr-interest] Recovering white space in V3.0
Message-ID: <002201c56948$47604360$0200a8c0@notebook>

This is what I have so far.
WS is ignored  => channel 99
but between WORDs I want to get it back
So I have used
    (
    w=WORD
      { if (wordsStarted) {
        // output all ignored tokens between lastIndex and this index
         for (int i=lastIndex+1; i<w.getTokenIndex(); i++) {
          System.out.print(input.get(i).getText());
         }
        } else {
          wordsStarted = true;
        }
        System.out.print(w.getText());
        lastIndex = w.getTokenIndex();
      }
  )*


Is there a better way?
matthew

========================================================

grammar Lists;

start
  : (paraOrList)*
  ;

paraOrList
  : para
  | para {System.out.println("<ol>");} (list)+
{System.out.println("</ol>");}
  ;

list
init {
 boolean wordsStarted = false;
 int lastIndex = 0;
 }
 :
   {System.out.print("<li>");}
   MINUS
    (
    w=WORD
      { if (wordsStarted) {
        // output all ignored tokens between lastIndex and this index
         for (int i=lastIndex+1; i<w.getTokenIndex(); i++) {
          System.out.print(input.get(i).getText());
         }
        } else {
          wordsStarted = true;
        }
        System.out.print(w.getText());
        lastIndex = w.getTokenIndex();
      }
  )*
    {System.out.println("</li>");}
  NL
  ;

para
  : NL NL
  ;


WORD  :   ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;


MINUS :
    '-'
    ;

NL  : '\n'
    ;

WS  :   (   ' '
        |   '\t'
        |   '\r'
        )+
        { channel=99; }
    ;


Input ================================================


- Lorem ipsum
- Dolor sit
- Amet


- Foo bar
- Bar foo
- Foo


output =====================================
<ol>
<li>Lorem ipsum</li>
<li>Dolor sit</li>
<li>Amet</li>
</ol>
<ol>
<li>Foo bar</li>
<li>Bar foo</li>
<li>Foo</li>
</ol>

From parrt at cs.usfca.edu  Sat Jun  4 13:59:45 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 13:59:47 2005
Subject: [antlr-interest] Running antlr Tool V3.0 from ant  (in netbeans)
In-Reply-To: <001c01c56947$bd80b350$0200a8c0@notebook>
References: <001c01c56947$bd80b350$0200a8c0@notebook>
Message-ID: <47C58541-C7F7-4D35-ADB0-A06AC5054CE3@cs.usfca.edu>


On Jun 4, 2005, at 1:55 PM, Matthew Ford wrote:

> hi all,
>
> This is the target I am trying to run
>
>     <target name="-pre-compile" description="antlrGeneration">
>       <echo message="Generating Antlr files"/>
>     <java classname="org.antlr.Tool"
>         fork="yes" dir="C:\antlr-3.0ea1\outputs\list"
>         classpath="${javac.classpath}">
>         <arg value="C:\antlr-3.0ea1\outputs\list\list.g"/>
>     </java>
>    </target>
> where javac.classpath contains the V3.0 antlr libs jars
> The the error is shown below
> any suggestions??
> matthew

Hi Matthew,

Seems that I messed up an error message template.  The  
CANNOT_WRITE_FILE message indicates that ANTLR couldn't write  
something...must be permissions issue where you are writing output or  
the files themselves are protected...

Sorry about that...  BTW, Matthew, you'll note the improved error  
message from StringTemplate, which is handling the error messages.   
It gives you the context (which template(s)) of the error now. :)

Ter

>
> Generating Antlr files
> ANTLR Parser Generator   Early Access Version 3.0ea1 (June 1, 2005)
> 1989-2005
> internal error: C:\antlr-3.0ea1\outputs\list\list.g :
> java.util.NoSuchElementException: no such attribute: stackTrace in  
> template
> context [CANNOT_WRITE_FILE]
> org.antlr.stringtemplate.StringTemplate.rawSetAttribute 
> (StringTemplate.java:
> 620)
> org.antlr.stringtemplate.StringTemplate.setAttribute 
> (StringTemplate.java:518
> )
> org.antlr.tool.ToolMessage.toString(ToolMessage.java:71)
> java.lang.String.valueOf(String.java:2577)
> java.io.PrintStream.print(PrintStream.java:616)
> java.io.PrintStream.println(PrintStream.java:753)
> org.antlr.tool.ErrorManager$1.error(ErrorManager.java:199)
> org.antlr.tool.ErrorManager.error(ErrorManager.java:371)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:308)
> org.antlr.Tool.processGrammar(Tool.java:233)
> org.antlr.Tool.process(Tool.java:173)
> org.antlr.Tool.main(Tool.java:65)
>
>

From parrt at cs.usfca.edu  Sat Jun  4 14:05:16 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 14:05:19 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <002201c56948$47604360$0200a8c0@notebook>
References: <002201c56948$47604360$0200a8c0@notebook>
Message-ID: <E6FFBAB4-E666-41BD-B240-753E9BC9A2CE@cs.usfca.edu>


On Jun 4, 2005, at 1:59 PM, Matthew Ford wrote:

> This is what I have so far.
> WS is ignored  => channel 99
> but between WORDs I want to get it back
> So I have used
>     (
>     w=WORD
>       { if (wordsStarted) {
>         // output all ignored tokens between lastIndex and this index
>          for (int i=lastIndex+1; i<w.getTokenIndex(); i++) {
>           System.out.print(input.get(i).getText());
>          }
>         } else {
>           wordsStarted = true;
>         }
>         System.out.print(w.getText());
>         lastIndex = w.getTokenIndex();
>       }
>   )*
>
>
> Is there a better way?

Hmm...well, having never actually tried it, you might simply walk  
backwards from w.getTokenIndex() instead of remembering where you  
were last time.  The edge case might need something like the token  
index when you start the rule so you don't go too far back, over WS  
not associated with the rule.  Actually looks like your list rule  
starts with a MINUS, so you could just avoid going back past that.

Another way to handle this is to use the start/stop attributes of any  
rule reference to track the boundaries of a rule and then just print  
anything between it.  For example,

( list {print between $list.start and $list.stop;} )+

:)

Also note that $WORD will work as the attribute reference if it's  
unique in the alternative.

Terence
From scott at javadude.com  Sat Jun  4 14:24:47 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Jun  4 14:25:14 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <E6FFBAB4-E666-41BD-B240-753E9BC9A2CE@cs.usfca.edu>
Message-ID: <200506042217.j54MHhT3002549@s2.eroute.net>

(I'll be nice and trim the "to" line for ya) 

Am I reading correctly that all tokens are held on to for the duration of
the parse? If so, this could cause problems for parsing very long files (esp
XML) that don't need remembered state...

Later,
- Scott


From parrt at cs.usfca.edu  Sat Jun  4 14:50:57 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 14:50:58 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <200506042217.j54MHhT3002549@s2.eroute.net>
References: <200506042217.j54MHhT3002549@s2.eroute.net>
Message-ID: <C1052BDD-6213-48D8-9B93-9B609DB2A802@cs.usfca.edu>


On Jun 4, 2005, at 2:24 PM, Scott Stanchfield wrote:

> (I'll be nice and trim the "to" line for ya)
>
> Am I reading correctly that all tokens are held on to for the  
> duration of
> the parse? If so, this could cause problems for parsing very long  
> files (esp
> XML) that don't need remembered state...

My default CommonTokenStream does buffer everything...for parsing 20G  
files, you would use a simple one that didn't buffer.  I am building  
stuff in general to work for the common case not the extremes,  
leaving the ability to handle the extremes.

Ter

From gbr at newtechlaw.com  Sat Jun  4 15:37:33 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat Jun  4 15:33:24 2005
Subject: [antlr-interest] Tree walking Q
Message-ID: <4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>

The basic question: Is there a way to set a default token rule for use 
during tree parsing?  The objective is to skip tokens that are not within a 
select subset that are to be processed by a particular tree-parser run.

My AST is rather large and complex, to the point where I cannot, as a 
practical matter, define tree-parser rules for all potential tokens.  The 
ANTLR generated tree-walker quits if it encounters an unknown token.

Is there a default rule identifier?  Or, is there another mechanism to 
enable the tree-parser to simply walk past those tokens not otherwise 
identified to the parser?

Thanks,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From parrt at cs.usfca.edu  Sat Jun  4 16:06:58 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 16:07:02 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
Message-ID: <FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>


On Jun 4, 2005, at 3:37 PM, Gerald B. Rosenberg wrote:

> The basic question: Is there a way to set a default token rule for  
> use during tree parsing?  The objective is to skip tokens that are  
> not within a select subset that are to be processed by a particular  
> tree-parser run.
>
> My AST is rather large and complex, to the point where I cannot, as  
> a practical matter, define tree-parser rules for all potential  
> tokens.  The ANTLR generated tree-walker quits if it encounters an  
> unknown token.
>
> Is there a default rule identifier?  Or, is there another mechanism  
> to enable the tree-parser to simply walk past those tokens not  
> otherwise identified to the parser?

Hi.  In the lexer, we such a filtering mechanism, but there isn't  
such a beast for tree parsing unless than the brute force "find this  
subtree" kind of thing.  Syntactic predicates like this might work ok:

filterRule : (alt1)=>alt1
     | (alt2) => alt2
     ...
     | .
     ;

where the last alt matches any node.  The only problem is that it  
would look only for matching root nodes and then descend.  this would  
work fine if the list were flat, but then you'd not be needing a tree  
walker ;)

I suggest you look at JBurg, which is technically used for generating  
machine instructions but it does a great job of finding subtrees in a  
large tree.  You can even assign costs to each subtree match and it  
will find the best match.  Now that I say it, it is exactly what you  
want.  JBurg should merge nicely with ANTLR :)

Ter
From ewbank at gmail.com  Sat Jun  4 16:12:35 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sat Jun  4 16:12:38 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <C1052BDD-6213-48D8-9B93-9B609DB2A802@cs.usfca.edu>
References: <200506042217.j54MHhT3002549@s2.eroute.net>
	<C1052BDD-6213-48D8-9B93-9B609DB2A802@cs.usfca.edu>
Message-ID: <dd3a065f050604161225eef9d@mail.gmail.com>

Ter,

Can you define "common" and "extreme" in this context?

On 6/4/05, Terence Parr <parrt@cs.usfca.edu> wrote:
> I am building stuff in general to work for the common
> case not the extremes, leaving the ability to handle
> the extremes.
From ewbank at gmail.com  Sat Jun  4 16:27:51 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sat Jun  4 16:27:54 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
References: <4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
Message-ID: <dd3a065f0506041627597b42fb@mail.gmail.com>

Using predicates has worked well for me; it greatly simplifies
maintenance of intermediate tree parser that want to do just a few
things in specific contexts.  For example, to replace id++ with
id=id+1...

   walker :
      ( (POSTINCR) => process_postincr
      | #( . ( walker )* )
      );

Another option, perhaps, that may not work as well in general, is:

   walker :
      #( op:.
         { preorder(#op); }
         (walker)*
         { postorder(#op); }
      );

At the same time, I'm a bit surprised that you say you can't define
explicit rules for the tree-parser.  The thing that has saved my bacon
more than once is an "AuditAST.g" I've written that defines the
correct shape of the tree.

If you can't define it, can you be sure it's correct?

> On Jun 4, 2005, at 3:37 PM, Gerald B. Rosenberg wrote: 
> > The basic question: Is there a way to set a default token rule for
> > use during tree parsing?  The objective is to skip tokens that are
> > not within a select subset that are to be processed by a particular
> > tree-parser run.
> >
> > My AST is rather large and complex, to the point where I cannot, as
> > a practical matter, define tree-parser rules for all potential
> > tokens.  The ANTLR generated tree-walker quits if it encounters an
> > unknown token.
From parrt at cs.usfca.edu  Sat Jun  4 17:07:01 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 17:07:03 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <dd3a065f050604161225eef9d@mail.gmail.com>
References: <200506042217.j54MHhT3002549@s2.eroute.net>
	<C1052BDD-6213-48D8-9B93-9B609DB2A802@cs.usfca.edu>
	<dd3a065f050604161225eef9d@mail.gmail.com>
Message-ID: <A32246C6-1205-415B-8BB8-EFDA3172FBC8@cs.usfca.edu>


On Jun 4, 2005, at 4:12 PM, Bryan Ewbank wrote:

> Ter,
>
> Can you define "common" and "extreme" in this context?

Sure.  Common: buffer up all tokens (Note that in the early 90's  
PCCTS did this for syntactic predicates).  Make tweaking the input  
stream and spitting it back out mostly verbatim easy.  Extreme:  
parsing something bigger than the 2G RAM I have in my box ;)

Some of the stuff is more heavyweight than you'd want in a really  
speed-critical app.  For example, my common tokens store the token  
index because it's damn useful.  They also track indexes into the  
char buffer (start/stop of the token string) rather than build  
strings...requires the chars be buffered too.  The tokens store the  
char position in the line (column) as well as the line.  All this  
takes memory to store and time in the lexer to set.

I experimented returning the same exact token object for all  
whitespace and comments just to see if it saved much in speed.   
Didn't notice much but it's hard to measure as you know.  Point is,  
you can do anything you want.  I'm just making it really easy to whip  
together some cool translators.  If you need to handle extremely  
large files or need extreme speed, you can do it--you just have to do  
a wee bit of work for it.

For example, you can copy the Java.stg template file and tweak it for  
speed (very easily done) and then just keep that around forever so  
you can use it.  Say language=MyJava in the grammar options and boom-- 
it uses your faster code generator :)

Does that help?  More details?

Ter

>
> On 6/4/05, Terence Parr <parrt@cs.usfca.edu> wrote:
>
>> I am building stuff in general to work for the common
>> case not the extremes, leaving the ability to handle
>> the extremes.
>

From parrt at cs.usfca.edu  Sat Jun  4 17:11:55 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 17:11:58 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <4.3.2.7.2.20050604003937.06f66ea0@morpho.newtechlaw.com>
References: <001c01c56811$5f5d9b30$0100a8c0@rexii>
	<001c01c56811$5f5d9b30$0100a8c0@rexii>
	<4.3.2.7.2.20050604003937.06f66ea0@morpho.newtechlaw.com>
Message-ID: <F13B7376-B5CA-4ABE-942F-5C8379A3D593@cs.usfca.edu>

On Jun 4, 2005, at 1:47 AM, Gerald B. Rosenberg wrote:
> I will try to take a constructive stab at this.  Given that the  
> problem space and tool are respectively very complex and capable of  
> very complex operation, the documentation is just too eager.

I assume you meant "meager" ;)

>   It presents something basic and then jets off mixing a bunch of  
> fairly complex potential uses together which makes following and  
> understanding any one very difficult.

Damn!

> For example, under http://www.antlr.org/doc/trees.html#_bb4, there  
> is brief introduction to marking lexer tokens as roots.  Ok.  Then  
> some stuff about building trees.  Nothing there about parser tokens  
> as roots.

Apparently the doc is worst than that!  What do you mean by parser  
tokens?  Do you mean imaginary tokens inserted by the parser for  
which no actual input lexeme exists?

>   I think that is what I need for my problem -- I need to  
> understand better how ANTLR wants to mark and construct parser  
> trees.  So, is marking a new parser token as a root even possible?   
> Well, keep looking down.  Token translation.  Ok.  Token  
> factories.  Ok, I guess.  Heterogeneous ASTs.  Ok, real advanced.   
> Fairly certain that is not applicable to my initial needs.

Interesting...define parser token for me and I'll try to help.

> Finally! An first example ("An Expression Tree Example").  Maybe  
> that will walk me through enough to understand how ANTLR wants  me  
> to solve my problem.
>
> Problem statement: a simple value accumulator implemented using a  
> simple tree.  Ok, not really close to my case I think, but sounds  
> like it has a similar level of complexity so I should be able to  
> learn bunches from it.
>
> OH, NO: Third paragraph, the "formal statement of the explanation  
> of the solution to follow":
>
> "The AST operator nodes must combine the results of computing the  
> value of their two subtrees.  They must perform a depth-first walk  
> of the tree below them.  For fun and to make the operations more  
> obvious, the operator nodes define left() and right() instead,  
> making them appear even more different than the normal child- 
> sibling tree representation.  Consequently, these expression trees  
> can be treated as both homogeneous child-sibling trees and  
> heterogeneous expression trees."
>
>
> ??? Fun and obvious???  Make them appear more different???  A  
> straight first example?  No.  More accurately an advanced  
> transvestite example.

Did any of the examples or tutorials help?  The doc is not  
particularly friendly.

> There are so many issues working in this example, I challenge  
> anyone not already an expert to readily tell what design features  
> pertain to what -- what is there for fun and what select parts are  
> essential for the particular purposes relevant to a relative new- 
> comer's basic issues of understanding.  The question is, would  
> someone not capable of authoring this example in the first place,  
> now understand matters well enough to go back and author the  
> simple, straight-forward version?

Sounds like we have a navigation issue not doc issue (though I plan  
on fixing the doc).  Did you see my course notes and all that jazz?

> Now, don't get me wrong: I am not advocating plodding  
> documentation.  Enthusiasm is a great tool for maintaining interest  
> in the narrative, particularly on paper.  There just needs to be  
> something of a middle ground (at least for us middle of the road  
> programmers).

Can you lay out precisely what you've read / looked at what you  
haven't?  That will tell me a lot!  As I say, it may be simply that  
the information is not available in the proper order or even defined  
in what order you should look.

Ter
From matthew.ford at forward.com.au  Sat Jun  4 17:25:46 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Sat Jun  4 17:25:50 2005
Subject: [antlr-interest] Recovering white space in V3.0
References: <002201c56948$47604360$0200a8c0@notebook>
	<E6FFBAB4-E666-41BD-B240-753E9BC9A2CE@cs.usfca.edu>
Message-ID: <002a01c56965$1e61dab0$0200a8c0@notebook>

Hi Ter,

> Hmm...well, having never actually tried it, you might simply walk
> backwards from w.getTokenIndex() instead of remembering where you
> were last time.  The edge case might need something like the token

I don't think walking backwards from the end will do it.
i) the WS come out in the wrong order
ii) in need to display WORD  ws ws ws WORD
not WORD WORD ws ws ws

> starts with a MINUS, so you could just avoid going back past that.
How do you avoid going back pass minus?
Do you use  something like
for ( int i = ...  ;  i> $MINUS.getTokenIndex(); i--)
ie. do I understand you that $MINUS is the minus token (assuming MINUS in
unique in the rule otherwise it is just the last MINUS seen/parsed?)

matthew

----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>
To: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Sunday, June 05, 2005 7:05 AM
Subject: Re: [antlr-interest] Recovering white space in V3.0


>
> On Jun 4, 2005, at 1:59 PM, Matthew Ford wrote:
>
> > This is what I have so far.
> > WS is ignored  => channel 99
> > but between WORDs I want to get it back
> > So I have used
> >     (
> >     w=WORD
> >       { if (wordsStarted) {
> >         // output all ignored tokens between lastIndex and this index
> >          for (int i=lastIndex+1; i<w.getTokenIndex(); i++) {
> >           System.out.print(input.get(i).getText());
> >          }
> >         } else {
> >           wordsStarted = true;
> >         }
> >         System.out.print(w.getText());
> >         lastIndex = w.getTokenIndex();
> >       }
> >   )*
> >
> >
> > Is there a better way?
>
> Hmm...well, having never actually tried it, you might simply walk
> backwards from w.getTokenIndex() instead of remembering where you
> were last time.  The edge case might need something like the token
> index when you start the rule so you don't go too far back, over WS
> not associated with the rule.  Actually looks like your list rule
> starts with a MINUS, so you could just avoid going back past that.
>
> Another way to handle this is to use the start/stop attributes of any
> rule reference to track the boundaries of a rule and then just print
> anything between it.  For example,
>
> ( list {print between $list.start and $list.stop;} )+
>
> :)
>
> Also note that $WORD will work as the attribute reference if it's
> unique in the alternative.
>
> Terence
>

From parrt at cs.usfca.edu  Sat Jun  4 17:36:56 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 17:37:00 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <002a01c56965$1e61dab0$0200a8c0@notebook>
References: <002201c56948$47604360$0200a8c0@notebook>
	<E6FFBAB4-E666-41BD-B240-753E9BC9A2CE@cs.usfca.edu>
	<002a01c56965$1e61dab0$0200a8c0@notebook>
Message-ID: <96E2156B-8EBA-41BB-82B8-0BF5389F2617@cs.usfca.edu>

On Jun 4, 2005, at 5:25 PM, Matthew Ford wrote:

> Hi Ter,
>
>> Hmm...well, having never actually tried it, you might simply walk
>> backwards from w.getTokenIndex() instead of remembering where you
>> were last time.  The edge case might need something like the token
>>
>
> I don't think walking backwards from the end will do it.
> i) the WS come out in the wrong order
> ii) in need to display WORD  ws ws ws WORD
> not WORD WORD ws ws ws

Oh, right...yeah, I was thinking about buffering, but you're  
right...my thing won't work so easily...I'll have to poke around. :)

>> starts with a MINUS, so you could just avoid going back past that.
>>
> How do you avoid going back pass minus?
> Do you use  something like
> for ( int i = ...  ;  i> $MINUS.getTokenIndex(); i--)

Yep.

> ie. do I understand you that $MINUS is the minus token (assuming  
> MINUS in
> unique in the rule otherwise it is just the last MINUS seen/parsed?)

Yes, you can refer to the toke by $TOKEN_NAME as long as it's unique  
in the alt.  It will always be the last matched, but it must be unique.

Ter


From scott at javadude.com  Sat Jun  4 18:08:10 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sat Jun  4 18:08:39 2005
Subject: [antlr-interest] Keeping all the data in RAM...
In-Reply-To: <A32246C6-1205-415B-8BB8-EFDA3172FBC8@cs.usfca.edu>
Message-ID: <200506050201.j5521CT3030854@s2.eroute.net>

> > Can you define "common" and "extreme" in this context?

No offense guys, but from my experience, I think Ter, John and Loring's
definition of "common" is quite limited. This is based on many of the
discussions we've had on this list over the past few months as well as
previous experience.

I believe they feel that ANTLR is used mostly for single-run (possibly
multipass) translators, such as compilers.

This is most definitely not the case. While there are some tools like this,
ANTLR is very heavily used in applications that have a much longer lifespan,
and therefore can have a much higher performance impact. (Apps such as
server-side apps parsing expressions/translating things like JSP;
development apps like checkstyle which are run automatically everytime I
save in eclipse, and so forth)

[Note: My usage is for xml parsing and parsing small expressions that appear
several times in a *very* memory sensitive application, esp under embedded
constraints. Basically next-gen TiVo-like stuff. We're trying to trim
everything we can...]

Thinking of "common" in terms of the size of the input being parsed for this
question, I think the "common" input size is reasonably-sized (such as
expression strings [I think JSTL uses ANTLR] and java source files).

For "extreme", I don't think 2G files are the issue. Keep in mind that
people don't run their java apps at 2G (most leave it at 64M and don't even
realize they can change it!). Heck, most folks don't have that much RAM (I'd
wager most computer users are 256M and under, with developers at perhaps
512M or 1G. I *just* got a 2G machine, and that was still a bit pricey.)

Considering that parsing is "simply" data input for an application, and that
the application is probably using a lot of memory itself, this could become
a huge issue.


What's the #1 reason folks don't use DOM to parse XML? It reads the entire
tree into RAM...


Face it, large files are becoming more and more commonplace.

I am happy to hear that this behavior can be avoided. Simple expressions or
java source code, won't be an issue, but I think many people will need to
special-case the behavior.


Bottom line: This needs to be a documented "gotcha" with a well-explained
work-around.

Better: A simple switch to toggle the behavior.

Note that I do like that all of that data is kept, as for compilers and such
that extra info is really handy... But be careful of the assumptions you're
making about the types of applications being written. I'd wager that 80+% of
the apps won't care about preserving whitespace or delimeter chars (like
parens) and thus you're wasting valuable RAM.

Later,
-- Scott



From gbr at newtechlaw.com  Sat Jun  4 18:19:29 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat Jun  4 18:23:52 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
References: <4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050604175126.07173f90@morpho.newtechlaw.com>

At 04:06 PM 6/4/2005, Terence Parr wrote:
>On Jun 4, 2005, at 3:37 PM, Gerald B. Rosenberg wrote:
>
>>Is there a default rule identifier?  Or, is there another mechanism
>>to enable the tree-parser to simply walk past those tokens not
>>otherwise identified to the parser?
>
>Hi.  In the lexer, we such a filtering mechanism, but there isn't
>such a beast for tree parsing unless than the brute force "find this
>subtree" kind of thing.

Looks like that is where I am headed.

>I suggest you look at JBurg, which is technically used for generating
>machine instructions but it does a great job of finding subtrees in a
>large tree.  You can even assign costs to each subtree match and it
>will find the best match.  Now that I say it, it is exactly what you
>want.  JBurg should merge nicely with ANTLR :)

Interesting, but I am just not sure it will meet my needs.  Looks like it 
would take quite a bit of work to coerce it into functioning as just a 
selective tree-walker.  BTW, it does have explicit ANTLR integration.

Rather than putting the work into generating my own dedicated  tree-walker 
or fudging around JBurg, is there any interest in my adding the feature to 
ANTLR?  Obviously not a widely needed feature, but it would make ANTLR just 
a bit more generalized.

Thanks again,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From parrt at cs.usfca.edu  Sat Jun  4 18:35:12 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat Jun  4 18:35:17 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <4.3.2.7.2.20050604175126.07173f90@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<4.3.2.7.2.20050604175126.07173f90@morpho.newtechlaw.com>
Message-ID: <B163704B-8089-4302-B156-0C7B8DF2CA3A@cs.usfca.edu>


On Jun 4, 2005, at 6:19 PM, Gerald B. Rosenberg wrote:
> Rather than putting the work into generating my own dedicated  tree- 
> walker or fudging around JBurg, is there any interest in my adding  
> the feature to ANTLR?  Obviously not a widely needed feature, but  
> it would make ANTLR just a bit more generalized.

It would probably have to be a function that took a tree and a list  
of subtrees.  it would do a brute force approach, but it would work. :)

Ter
From gbr at newtechlaw.com  Sat Jun  4 18:48:44 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat Jun  4 18:53:50 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <dd3a065f0506041627597b42fb@mail.gmail.com>
References: <FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
Message-ID: <4.3.2.7.2.20050604181943.071c7620@morpho.newtechlaw.com>

At 07:27 PM 6/4/2005, Bryan Ewbank wrote:

>Another option, perhaps, that may not work as well in general, is:
>
>    walker :
>       #( op:.
>          { preorder(#op); }
>          (walker)*
>          { postorder(#op); }
>       );

Thanks for this suggestion.  It is really close -- maybe if I can combine 
it with syntactic predicates ...

>At the same time, I'm a bit surprised that you say you can't define
>explicit rules for the tree-parser.

Yes...

>If you can't define it, can you be sure it's correct?

Because by definition, the rule set is open-ended.  I am attempting to 
apply ANTLR to a natural language processing problem where instances of 
structured text are embedded in blocks of ordinary text.  The structured 
text is sufficiently regular for ANTLR, with a fair bit of care in 
constructing the grammar, to be happy recognizing bits and pieces of the 
structured text.  Now I need to collect and assemble the parts, hence 
tree-walking while ignoring the unstructured stuff.  Cannot throw the 
unstructured text away, because for example there are proximity factors 
that influence assembly of the structured text.

So, just need the tree-walker to quietly skip over the unstructured stuff.

Thanks very much for the help,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From matthew.ford at forward.com.au  Sat Jun  4 19:18:02 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Sat Jun  4 19:18:06 2005
Subject: [antlr-interest] Running Antlr V3.0 from netbeans
Message-ID: <006201c56974$ccf2e380$0200a8c0@notebook>

To run Antlr V3.0 from netbeans
(assuming the netbeans project is called  list  and list.g is the antlr
grammar in the top source dir)

to build.xml add

    <target name="antlrGeneration" depends="init">
      <echo message="Generating Antlr files"/>
    <java classname="org.antlr.Tool"
        fork="yes" dir="${list.dir}"   <!-- need to change this line to suit
.g path from top of source ->>
        classpath="${javac.classpath}" >
        <arg line="list.g"/>  <!-- need to change this line to suit .g path
from top of source ->>
    </java>
   </target>

  <target name="-pre-compile" depends="antlrGeneration">
   </target>

You will have already added the antlr jars to the project library jar so
they will be in the
${javac.classpath}

still get
internal error: Exception
java.nio.channels.ClosedChannelException@sun.nio.ch.FileLockImpl.release(Fil
eLockImpl.java:36): can't write stats to ... \antlrworks\grammar.stats
but fork="yes" means this does not stop the build.

matthew

From gbr at newtechlaw.com  Sat Jun  4 21:05:14 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat Jun  4 21:03:54 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <4.3.2.7.2.20050604181943.071c7620@morpho.newtechlaw.com>
References: <dd3a065f0506041627597b42fb@mail.gmail.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
Message-ID: <4.3.2.7.2.20050604205208.071d1450@morpho.newtechlaw.com>

At 06:48 PM 6/4/2005, Gerald B. Rosenberg wrote:

>At 07:27 PM 6/4/2005, Bryan Ewbank wrote:
>
>>Another option, perhaps, that may not work as well in general, is:
>>
>>    walker :
>>       #( op:.
>>          { preorder(#op); }
>>          (walker)*
>>          { postorder(#op); }
>>       );
>
>Thanks for this suggestion.  It is really close -- maybe if I can combine 
>it with syntactic predicates ...

walker:
    #(a1:FirstToken p1:walker)   { processFirstToken(AST a1, AST p1); }
    #(a2:SecondToken p2:walker)  { processSecondToken(AST a2, AST p2); }
    #(a3:ThirdToken p3:walker)   { processThirdToken(AST a3, AST p3); }
    #(a4:FourthToken p4:walker)  { processFourthToken(AST a4, AST p4); }
    #(uk:.  (p5:walker)*)        { System.out.println("Skipping all 
others..."); }
;

The trick is the "." and the "()*" together.

Seems like it is working perfectly.

Thanks again,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050604/69abf6a9/attachment-0001.html
From leviathan at mchsi.com  Sat Jun  4 21:32:26 2005
From: leviathan at mchsi.com (leviathan@mchsi.com)
Date: Sat Jun  4 21:32:28 2005
Subject: [antlr-interest] Odd troubles with AST generation (C++)
Message-ID: <060520050432.6457.42A2805A0009BFA4000019392197913329020E089B0E07900A04@mchsi.com>

I must have missed something big in the ANTLR tutorial on AST generation. When 
I use the minip or tinyc code it will compile and work fine, but when I make 
any modifications it won't. I ended up reducing my huge grammar to just this:

options {
	language="Cpp";
}

class TetraParser extends Parser;

options {
	buildAST=true;
	importVocab=TETRA;	// use vocab generated by lexer
}

program:
   ID
;

to isolate the problem, but it still occurs and I have no clue why. The error 
stems from this line when I debug:

tmp1_AST = astFactory->create(LT(1));

in TetraParser::program().

"Unhandled exception at 0x0046c741 in tc.exe: 0xC0000005: Access violation 
reading location 0x00000010."

The complete grammar works without AST construction. Can someone help me? It's 
been driving me crazy, I feel like i've missed some insignifigant error.

From Loring.G.Craymer at jpl.nasa.gov  Sat Jun  4 21:41:24 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Sat Jun  4 21:41:27 2005
Subject: [antlr-interest] Odd troubles with AST generation (C++)
In-Reply-To: <060520050432.6457.42A2805A0009BFA4000019392197913329020E089B0E07900A04@mchsi.com>
Message-ID: <200506050441.j554fNVF017325@xmta1.jpl.nasa.gov>

Check the manual--Ric has a write up on ASTFactory initialization in the C++
runtime section.

--Loring

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of leviathan@mchsi.com
> Sent: Saturday, June 04, 2005 9:32 PM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Odd troubles with AST generation (C++)
> 
> I must have missed something big in the ANTLR tutorial on AST generation.
> When
> I use the minip or tinyc code it will compile and work fine, but when I
> make
> any modifications it won't. I ended up reducing my huge grammar to just
> this:
> 
> options {
> 	language="Cpp";
> }
> 
> class TetraParser extends Parser;
> 
> options {
> 	buildAST=true;
> 	importVocab=TETRA;	// use vocab generated by lexer
> }
> 
> program:
>    ID
> ;
> 
> to isolate the problem, but it still occurs and I have no clue why. The
> error
> stems from this line when I debug:
> 
> tmp1_AST = astFactory->create(LT(1));
> 
> in TetraParser::program().
> 
> "Unhandled exception at 0x0046c741 in tc.exe: 0xC0000005: Access violation
> reading location 0x00000010."
> 
> The complete grammar works without AST construction. Can someone help me?
> It's
> been driving me crazy, I feel like i've missed some insignifigant error.

From ewbank at gmail.com  Sun Jun  5 07:11:35 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Jun  5 07:11:39 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <4.3.2.7.2.20050604205208.071d1450@morpho.newtechlaw.com>
References: <dd3a065f0506041627597b42fb@mail.gmail.com>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
	<4.3.2.7.2.20050604181943.071c7620@morpho.newtechlaw.com>
	<4.3.2.7.2.20050604205208.071d1450@morpho.newtechlaw.com>
Message-ID: <dd3a065f050605071171d222e@mail.gmail.com>

Are you missing the "|"'s in your example, or do you intend that it
match a list of groups of five trees at each node?  After your
discussion of the complexity with your tree, this shows all node to be
identical and of the form:

   #( . ( FirstToken SecondToken ThirdToken FourthToken .)* )

On 6/5/05, Gerald B. Rosenberg <gbr@newtechlaw.com> wrote:
>  walker:
>     #(a1:FirstToken p1:walker)   { processFirstToken(AST a1, AST p1); }
>     #(a2:SecondToken p2:walker)  { processSecondToken(AST a2, AST p2); }
>     #(a3:ThirdToken p3:walker)   { processThirdToken(AST a3, AST p3); }
>     #(a4:FourthToken p4:walker)  { processFourthToken(AST a4, AST p4); }
>     #(uk:.  (p5:walker)*)        { System.out.println("Skipping all
> others..."); }
>  ;
From gbr at newtechlaw.com  Sun Jun  5 07:51:36 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sun Jun  5 07:52:31 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <dd3a065f050605071171d222e@mail.gmail.com>
References: <4.3.2.7.2.20050604205208.071d1450@morpho.newtechlaw.com>
	<dd3a065f0506041627597b42fb@mail.gmail.com>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
	<4.3.2.7.2.20050604181943.071c7620@morpho.newtechlaw.com>
	<4.3.2.7.2.20050604205208.071d1450@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050605074817.071c6ef8@morpho.newtechlaw.com>

At 10:11 AM 6/5/2005, Bryan Ewbank wrote:

>Are you missing the "|"'s in your example, or do you intend that it
>match a list of groups of five trees at each node?  After your
>discussion of the complexity with your tree, this shows all node to be
>identical and of the form:
>
>    #( . ( FirstToken SecondToken ThirdToken FourthToken .)* )
>
>On 6/5/05, Gerald B. Rosenberg <gbr@newtechlaw.com> wrote:
> >  walker:
> >     #(a1:FirstToken p1:walker)   { processFirstToken(AST a1, AST p1); }
> >     #(a2:SecondToken p2:walker)  { processSecondToken(AST a2, AST p2); }
> >     #(a3:ThirdToken p3:walker)   { processThirdToken(AST a3, AST p3); }
> >     #(a4:FourthToken p4:walker)  { processFourthToken(AST a4, AST p4); }
> >     #(uk:.  (p5:walker)*)        { System.out.println("Skipping all
> > others..."); }
> >  ;

Should have been:

walker:
       #(a1:FirstToken p1:walker) { processFirstToken(AST a1, AST p1); }
     | #(a2:SecondToken p2:walker) { processSecondToken(AST a2, AST p2); }
     | #(a3:ThirdToken p3:walker) { processThirdToken(AST a3, AST p3); }
     | #(a4:FourthToken p4:walker) { processFourthToken(AST a4, AST p4); }
     | #(uk:. (p5:walker)*) { System.out.println("Skipping all others..."); }
;



----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050605/507bb228/attachment.html
From gbr at newtechlaw.com  Sun Jun  5 13:25:40 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sun Jun  5 13:21:30 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <dd3a065f05060512595874423f@mail.gmail.com>
References: <4.3.2.7.2.20050605074817.071c6ef8@morpho.newtechlaw.com>
	<dd3a065f0506041627597b42fb@mail.gmail.com>
	<4.3.2.7.2.20050604151618.07181d20@morpho.newtechlaw.com>
	<FE855285-30E6-4985-85A0-152747C4B642@cs.usfca.edu>
	<4.3.2.7.2.20050604181943.071c7620@morpho.newtechlaw.com>
	<4.3.2.7.2.20050604205208.071d1450@morpho.newtechlaw.com>
	<dd3a065f050605071171d222e@mail.gmail.com>
	<4.3.2.7.2.20050605074817.071c6ef8@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050605131202.071ab8d0@morpho.newtechlaw.com>

At 03:59 PM 6/5/2005, Bryan Ewbank wrote:

>Thanks for the clarification.  Are you getting a warning from ANTLR
>that matching FirstToken is ambiguous? (e.g., matches both
>"FirstToken" and ".").

No, provided the wildcard "." appears at the end of the list.

----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From e9725431 at student.tuwien.ac.at  Sun Jun  5 13:53:51 2005
From: e9725431 at student.tuwien.ac.at (Stefan Rank)
Date: Sun Jun  5 13:53:48 2005
Subject: [antlr-interest] what does noConstructors do?
Message-ID: <42A3665F.5090401@student.tuwien.ac.at>

Hi you, helpful list,

I just wanted to use the option
noConstructors = true;
for my parser to tailor, e.g., visibility of the parser.

But it did not have any effect.
Is this a feature?

best,
stefan
From ewbank at gmail.com  Sun Jun  5 14:00:04 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Jun  5 14:00:07 2005
Subject: [antlr-interest] what does noConstructors do?
In-Reply-To: <42A3665F.5090401@student.tuwien.ac.at>
References: <42A3665F.5090401@student.tuwien.ac.at>
Message-ID: <dd3a065f05060514004e45a281@mail.gmail.com>

"noConstructor=true" in the options section of the parser (not the
options section of the file) suppresses generation of the default
constructor for the parser, at least in C++.  It works for me, and
allows me to pass the required factory object to the (hand-written)
constructor.

Try diffing the generated files with and without - it's a small
difference, (A #ifdef/#endif pair in C++).

On 6/5/05, Stefan Rank <e9725431@student.tuwien.ac.at> wrote:
> Hi you, helpful list,
> 
> I just wanted to use the option
> noConstructors = true;
> for my parser to tailor, e.g., visibility of the parser.

> best,
> stefan
>
From parrt at cs.usfca.edu  Sun Jun  5 15:42:07 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun Jun  5 15:41:38 2005
Subject: [antlr-interest] mailing list messages on home page now
Message-ID: <9B4B7136-7895-47CB-8EC5-E0B86AF9C85E@cs.usfca.edu>

Hi,

I have altered the home page of http://www.antlr.org so that it shows  
the most recent 4 email list messages with a link to the archives.  I  
believe this was Loring's idea.  It is a good enticement for people  
to join the list and shows more activity on the site. :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From lloyd at nova-mind.com  Sun Jun  5 15:52:31 2005
From: lloyd at nova-mind.com (Lloyd Dupont)
Date: Sun Jun  5 15:52:38 2005
Subject: [antlr-interest] question about tree parsing (2.x)
References: <028f01c567f6$54681450$9800a8c0@gideone14f6c02>
	<dd3a065f0506030217f418565@mail.gmail.com>
Message-ID: <03f401c56a21$42412dc0$9800a8c0@gideone14f6c02>

Hi Thanks Brian (and Mounty for his good idea as well)
I do that because I used the a customized GNU-C parser to analyse ObjectiveC 
header
but then, in the tree parsing phase, only a limited subset of the produced 
tree interest me (my ObjectiveC class + typename & # of STAR in cast), so I 
have to parse part of existing tree and ignore the rest.

And I was wondering if these syntax of mine were ok to visit part of big 
tree.
But I'm not sure, I still have a few bug when I do that...

----- Original Message ----- 
From: "Bryan Ewbank" <ewbank@gmail.com>
To: <antlr-interest@antlr.org>
Sent: Friday, June 03, 2005 7:17 PM
Subject: Re: [antlr-interest] question about tree parsing (2.x)


Yes; you can do this; you are probably seeing ambiguity warnings about
the loop because both "ID4" and "." will match an ID4 node.  The trick
is a syntactic predicate.  Change this:

> bottomNode
>     :    #(
>             ID3
>             (
>                     ID4
>                 |   . // catch all for ID5 | ID6
>             ) // '+' volontary removed, exit should get 1 level up, no?
>         )
>     ;

To this:

> bottomNode
>     :    #(
>             ID3
>             (
>                 (ID4) =>  ID4
>                 |   . // catch all for ID5 | ID6
>             )+
>         )
>     ;

The "(ID4) => ID4" tells ANTLR to use that selection if an ID4 is seen.

I don't see why you removed the "+" unless you only want to match the
first child of ID3.  To match all ID4 children of ID3, you need the
"+". 

From andrew at adersoftware.com  Sun Jun  5 20:54:53 2005
From: andrew at adersoftware.com (Andrew Deren)
Date: Sun Jun  5 20:57:00 2005
Subject: [antlr-interest] Grammar Question
In-Reply-To: <03f401c56a21$42412dc0$9800a8c0@gideone14f6c02>
Message-ID: <200506052053200.SM00372@ANDREW>

I'm working on a small language with syntax similar to basic. 
One of the expression types is array access, where you can use parenthesis
for accessing the array member:
x = somearray(3)

the problem I'm having is that this somearray(3) could also be function
call. Currently I'm creating FunctionCall for those and converting those to
ArrayAccess at type checking stage. 
I don't like doing that, so are there any ways around it? I'm constructing
heterogeneous immutable AST, so just for this little thing as a hack I allow
modification of the expression tree. The tree is constructed by the parser. 
The future problem could be that someone could define array with name
somearray and function somearray(int), so which expression should be used?
The language spec allows function and variable names to be the same (I
didn't write it and can't change it).
If anyone has experience with basic, how do they handle it?
Thanks,
Andrew


From demakov at ispras.ru  Sun Jun  5 22:52:39 2005
From: demakov at ispras.ru (Alexey Demakov)
Date: Sun Jun  5 22:52:44 2005
Subject: [antlr-interest] Grammar Question
References: <200506052053200.SM00372@ANDREW>
Message-ID: <006601c56a5b$f2aa9180$8cc79553@marlboro>

Hi Andrew,

----- Original Message ----- 
From: "Andrew Deren" <andrew@adersoftware.com>
To: <antlr-interest@antlr.org>
Sent: Monday, June 06, 2005 7:54 AM
Subject: [antlr-interest] Grammar Question


> I'm working on a small language with syntax similar to basic. 
> One of the expression types is array access, where you can use parenthesis
> for accessing the array member:
> x = somearray(3)
> 
> the problem I'm having is that this somearray(3) could also be function
> call. Currently I'm creating FunctionCall for those and converting those to
> ArrayAccess at type checking stage. 
> I don't like doing that, so are there any ways around it? I'm constructing
> heterogeneous immutable AST, so just for this little thing as a hack I allow
> modification of the expression tree. The tree is constructed by the parser. 

Why not have single node for both cases? It is responsibility
of semantic checker and code generator (or interpreter) to process
them correctly.

> The future problem could be that someone could define array with name
> somearray and function somearray(int), so which expression should be used?
> The language spec allows function and variable names to be the same (I
> didn't write it and can't change it).
> If anyone has experience with basic, how do they handle it?

Language specification must describe this case. If not, you have
ambiguity and have to resolve it. There are two ways:
1. Prefer one case to other. So, if there are function somearray(int) 
and array named somearrray, somearray(1) will always be the sunction call.
Or array access if you like :)
2. Report about semantic error. So, user have to rename function or array.

Regards,
Alexey

P.S. How your AST is described? May be you will be interested in
my work on special language (TreeDL) for description 
of heterohenous tree structure. See link below.

-----
Alexey Demakov
TreeDL: Tree Description Language: http://treedl.sourceforge.net
RedVerst Group: http://www.unitesk.com


From e9725431 at student.tuwien.ac.at  Sun Jun  5 23:06:26 2005
From: e9725431 at student.tuwien.ac.at (Stefan Rank)
Date: Sun Jun  5 23:06:19 2005
Subject: [antlr-interest] what does noConstructors do?
In-Reply-To: <dd3a065f05060514004e45a281@mail.gmail.com>
References: <42A3665F.5090401@student.tuwien.ac.at>
	<dd3a065f05060514004e45a281@mail.gmail.com>
Message-ID: <42A3E7E2.10506@student.tuwien.ac.at>

on 05.06.2005 23:00 Bryan Ewbank said the following:
> "noConstructor=true" in the options section of the parser (not the
> options section of the file) suppresses generation of the default
> constructor for the parser, at least in C++.  It works for me, and
> allows me to pass the required factory object to the (hand-written)
> constructor.
> 
> Try diffing the generated files with and without - it's a small
> difference, (A #ifdef/#endif pair in C++).
> 

Yes thanks, I just verified that. Cpp generation disables the 
constructors via the preprocessor.

and I forgot to include my details in my question :) :
I would like to do that for Java (and later on for Python).
I am using ANTLR 2.7.5 (on winxp at the moment).

There seems to be no effect of "noConstructors" for Java.
Is this unimplemented?

If so, will it be possible in the all new and powerful ANTLR 3 ?
(then I would happily shut up now ;-)

stefan


> On 6/5/05, Stefan Rank <e9725431@student.tuwien.ac.at> wrote:
> 
>>Hi you, helpful list,
>>
>>I just wanted to use the option
>>noConstructors = true;
>>for my parser to tailor, e.g., visibility of the parser.
> 
> 
>>best,
>>stefan
>>
From gbr at newtechlaw.com  Mon Jun  6 00:21:41 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon Jun  6 00:22:00 2005
Subject: [antlr-interest] Q re use of Semantic Predicates
Message-ID: <4.3.2.7.2.20050605234222.071f4df0@morpho.newtechlaw.com>

I need to have two different but overlapping definitions of a WORD, one 
valid only within an xml tag and one valid everywhere else.  Am I correct 
in thinking the solution lies with semantic predicates?  If so, what is the 
right way to define the WORD rule?  My effort below results in the 
predicate equivalently qualifying both alternatives.

XMLTAG:
     '<'  { this.inXmlTag = true; }
     WORD  WS  ATTR  ('/')?
     '>'  { this.inXmlTag = false; }
;

WORD:
       ( {this.inXmlTag}? ( LETTERS | PUNCT1 ) )
     | ( LETTERS | NUMBERS | PUNCT2 )
;


Thanks,
Gerald

----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050606/ae0543a1/attachment.html
From johnm-antlr at non.net  Mon Jun  6 08:54:06 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Jun  6 08:53:49 2005
Subject: [antlr-interest] Q re use of Semantic Predicates
In-Reply-To: <4.3.2.7.2.20050605234222.071f4df0@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050605234222.071f4df0@morpho.newtechlaw.com>
Message-ID: <17060.29086.587457.179851@despot.non.net>

>>>>> "Gerald" == Gerald B Rosenberg <gbr@newtechlaw.com> writes:
[...]

> XMLTAG: '<' { this.inXmlTag = true; } WORD WS ATTR ('/')?  '>' {
> this.inXmlTag = false; }
> ;

> WORD: ( {this.inXmlTag}? ( LETTERS | PUNCT1 ) ) | ( LETTERS | NUMBERS |
> PUNCT2 )
> ;

Is there some reason why you can just have two different rules?  I.e.,
WORD and TAGWORD, or somesuch?

Have fun,
	John
From gbr at newtechlaw.com  Mon Jun  6 10:32:18 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon Jun  6 10:32:28 2005
Subject: [antlr-interest] Q re use of Semantic Predicates
In-Reply-To: <17060.29086.587457.179851@despot.non.net>
References: <4.3.2.7.2.20050605234222.071f4df0@morpho.newtechlaw.com>
	<4.3.2.7.2.20050605234222.071f4df0@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050606094835.06fbd310@morpho.newtechlaw.com>

At 08:54 AM 6/6/2005, John D. Mitchell wrote:

> >>>>> "Gerald" == Gerald B Rosenberg <gbr@newtechlaw.com> writes:
>[...]
>
> > XMLTAG: '<' { this.inXmlTag = true; } WORD WS ATTR ('/')?  '>' {
> > this.inXmlTag = false; }
> > ;
>
> > WORD: ( {this.inXmlTag}? ( LETTERS | PUNCT1 ) ) | ( LETTERS | NUMBERS |
> > PUNCT2 )
> > ;
>
>Is there some reason why you can just have two different rules?  I.e.,
>WORD and TAGWORD, or somesuch?
>
>Have fun,
>         John

The problem is that the lexer gets confused as to whether a string of 
characters is a WORD or a TAGWORD; there are character streams that validly 
fit both definitions.  WORD is not, however, a true superset of 
TAGWORD.  The result is that the parser gets both WORD and TAGWORD 
tokens.  Accepting both in the parser as alternatives is not correct.

For example, both include the upper and lower alphabet.  A double back 
quote character is valid in WORD but not in TAGWORD.  A colon is valid in 
TAGWORD but not in WORD.  However, TAGWORDs will only occur within XMLTAGs.

Need to distinguish WORD from TAGWORD in the character stream: <Paragraph 
num="3">Turning now to paragraph 3 of the text ...

Ideally, I need the lexer to recognize and completely absorb the XMLTAG 
tokens relative to the parser -- just need to capture attribute values, 
akin to line and column numbers, for subsequent use in the tree-walker.

Have I missed something in how to set it up using two different rules?  How 
best to do what I am trying to do?

Appreciate the help,
Gerald


----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From voytechs at yahoo.com  Mon Jun  6 14:32:52 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Mon Jun  6 14:31:01 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
Message-ID: <PLENJLPIEOPEDJJNCHDHEECFFIAA.voytechs@yahoo.com>

I'm re writing my custom language NPL to ANTLR. I've inherited
all of the Java 1.3 grammar (java.g) and added my own custom
statements. All the grammar is Java compatible so this was
wonderful. Now I'm adding some special low level LITERALs and
constant data types and adding those to the existing grammar is
no trivial task.

I'm currently adding IP address and I keep getting the following
warning, although it works. Just can't get the definition clean
enough to get rid of the warning. Any ideas?

    [antlr] ANTLR Parser Generator   Version 2.7.5 (20050128)
1989-2005 jGuru.com
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:861:
warning:lexical nondeterminism between alts 2 and 3 of block
upon
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:861:
k==1:'1'..'9'
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:861:
k==2:'.','0'..'9'
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:861:
k==3:'.','0'..'9'
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:861:
k==4:'.','0'..'9'

I used a semantic predicate to differentiate the fact that IP
address will have a prefix of NUM . NUM . meaning more than one
period as opposed to some float or double, but its not doing the
job I expect it to.

Here is the grammar excerpt. The top portion of NUM_INT rule is
exact copy of the one in java.g I downloaded form antlr.org
website. The bottom block that starts with NUM_3DIGITS (a little
rule to to help out since IP can only have 3 digit number
between periods) is what I added to the overall rule:

// a numeric literal
NUM_INT
    {boolean isDecimal=false; Token t=null;}
    :   '.' {_ttype = DOT;}
            (   ('0'..'9')+ (EXPONENT)? (f1:FLOAT_SUFFIX
{t=f1;})?
                {
                if (t != null &&
t.getText().toUpperCase().indexOf('F')>=0) {
                    _ttype = NUM_FLOAT;
                }
                else {
                    _ttype = NUM_DOUBLE; // assume double
                }
                }
            )?


    |   (   '0' {isDecimal = true;} // special case for just '0'
            (   ('x'|'X')
                (                                           //
hex
                    // the 'e'|'E' and float suffix stuff look
                    // like hex digits, hence the (...)+ doesn't
                    // know when to stop: ambig.  ANTLR resolves
                    // it correctly by matching immediately.  It
                    // is therefor ok to hush warning.
                    options {
                        warnWhenFollowAmbig=false;
                    }
                :   HEX_DIGIT
                )+

            |   //float or double with leading zero
                (('0'..'9')+ ('.'|EXPONENT|FLOAT_SUFFIX)) =>
('0'..'9')+

            |   ('0'..'7')+                                 //
octal
            )?
        |   ('1'..'9') ('0'..'9')*  {isDecimal=true;}       //
non-zero decimal
        )
        (   ('l'|'L') { _ttype = NUM_LONG; }

        // only check to see if it's a float if looks like
decimal so far
        |   {isDecimal}?
            (   '.' ('0'..'9')* (EXPONENT)? (f2:FLOAT_SUFFIX
{t=f2;})?
            |   EXPONENT (f3:FLOAT_SUFFIX {t=f3;})?
            |   f4:FLOAT_SUFFIX {t=f4;}
            )
            {
            if (t != null && t.getText().toUpperCase()
.indexOf('F') >= 0) {
                _ttype = NUM_FLOAT;
            }
            else {
                _ttype = NUM_DOUBLE; // assume double
            }
            }
        )?
    |   (NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT)=>
        (
            NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT
            { _ttype = IP_V4; }
        )
    ;

protected NUM_3DIGIT: ('0'..'9') (('0'..'9') ('0'..'9')?)?
    ;


Any ideas from more experienced ANTLR user?



From parrt at cs.usfca.edu  Mon Jun  6 15:32:04 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  6 15:31:34 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <PLENJLPIEOPEDJJNCHDHEECFFIAA.voytechs@yahoo.com>
References: <PLENJLPIEOPEDJJNCHDHEECFFIAA.voytechs@yahoo.com>
Message-ID: <84706A25-F0EA-4CA0-A9D5-9696AB132082@cs.usfca.edu>

Hi Mark,

In general, you should put the syntactic predicates before the other  
alts with which they conflict.  So, just move up your IP alt above  
alt 2. :)

Ter
From voytechs at yahoo.com  Mon Jun  6 15:53:50 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Mon Jun  6 15:51:58 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <84706A25-F0EA-4CA0-A9D5-9696AB132082@cs.usfca.edu>
Message-ID: <PLENJLPIEOPEDJJNCHDHIECHFIAA.voytechs@yahoo.com>

Well, that was just too easy, he he he.

No more warnings. What an awesome platform ANTLR is.

Thank you,
mark...

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of
>Terence Parr
>Sent: Monday, June 06, 2005 6:32 PM
>To: ANTLR Interest
>Subject: Re: [antlr-interest] Help with pesky Lexer determinism
>
>
>Hi Mark,
>
>In general, you should put the syntactic predicates
>before the other
>alts with which they conflict.  So, just move up your
>IP alt above
>alt 2. :)
>
>Ter
>


From parrt at cs.usfca.edu  Mon Jun  6 15:53:36 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  6 15:53:05 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <PLENJLPIEOPEDJJNCHDHIECHFIAA.voytechs@yahoo.com>
References: <PLENJLPIEOPEDJJNCHDHIECHFIAA.voytechs@yahoo.com>
Message-ID: <4574EA09-034D-4E28-8DFC-3AFB8AC48120@cs.usfca.edu>


On Jun 6, 2005, at 3:53 PM, Mark Bednarczyk wrote:

> Well, that was just too easy, he he he.
>
> No more warnings. What an awesome platform ANTLR is.

Hooray!

But wait...there's MORE!  The v3 version wouldn't even need the  
predicates and any order would be ok. ;)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From lloyd at nova-mind.com  Mon Jun  6 16:31:41 2005
From: lloyd at nova-mind.com (Lloyd Dupont)
Date: Mon Jun  6 16:31:53 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
References: <PLENJLPIEOPEDJJNCHDHIECHFIAA.voytechs@yahoo.com>
	<4574EA09-034D-4E28-8DFC-3AFB8AC48120@cs.usfca.edu>
Message-ID: <009e01c56aef$e57d2880$9800a8c0@gideone14f6c02>

> On Jun 6, 2005, at 3:53 PM, Mark Bednarczyk wrote:
>> Well, that was just too easy, he he he.
>> No more warnings. What an awesome platform ANTLR is.
>
> Hooray!
> 
> But wait...there's MORE!  The v3 version wouldn't even need the  
> predicates and any order would be ok. ;)
> 
WoW, Awesome!
Is there Any Such Thing as a Limit to the Power of ANTLR v3?!?!

sorry, just looking for some distraction while working...
From parrt at cs.usfca.edu  Mon Jun  6 16:44:10 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  6 16:43:39 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <009e01c56aef$e57d2880$9800a8c0@gideone14f6c02>
References: <PLENJLPIEOPEDJJNCHDHIECHFIAA.voytechs@yahoo.com>
	<4574EA09-034D-4E28-8DFC-3AFB8AC48120@cs.usfca.edu>
	<009e01c56aef$e57d2880$9800a8c0@gideone14f6c02>
Message-ID: <B50A8517-33C2-4E43-9BE8-7172A4F81C69@cs.usfca.edu>


On Jun 6, 2005, at 4:31 PM, Lloyd Dupont wrote:
>> Hooray!
>> But wait...there's MORE!  The v3 version wouldn't even need the   
>> predicates and any order would be ok. ;)
>>
> WoW, Awesome!
> Is there Any Such Thing as a Limit to the Power of ANTLR v3?!?!

Well, to be honest, that is something that any old lex/flex lookalike  
(or even JavaCC) could do.  The trick is that now you can do it in  
ANTLR without losing the ability to do recursion in the lexer.

LL(k) parsers are basically using DFAs of fixed depth, k, to decide  
which among n alternatives will succeed in matching.  LL(*) allows  
cyclic DFA, hence, arbitrarily deep lookahead to make parsing  
decisions.   The same algorithm will be used for lexers, parsers, and  
tree parsers.

The really cool thing is that hoisted semantic predicates come  
essentially for free, piggybacking on the LL(*) algorithm.  Oh, the  
academic papers I shall write...not that anybody gives a damn about  
parsing anymore in the US.  Have to start going to European  
conferences I guess.

:)

> sorry, just looking for some distraction while working...

Me too...i've been stuck in administration hell all day. :(  I did  
just get my visa to go to India this summer though!  A nice distraction.

Terence
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From voytechs at yahoo.com  Mon Jun  6 17:15:50 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Mon Jun  6 17:13:57 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <B50A8517-33C2-4E43-9BE8-7172A4F81C69@cs.usfca.edu>
Message-ID: <PLENJLPIEOPEDJJNCHDHCECJFIAA.voytechs@yahoo.com>

Well I have another problem that is a little more involved so
maybe I can just get a couple of quick pointers. Same issue but
now with IPv6 address that actually steps of the toes on the
IDENT rule since IPv6 address is comprised of HEX digits so
'a'..'f' overlap with IDENT rule of 'a'..'z'.

BTW: here is the format of IPv6 for those not familiar, (HEX HEX
COLON (COLON HEX HEX)+) in simple case.

This is what I'm trying to do, but not really sure how to code
it.

1) Add the IPv6 block to NUM_INT rule with appropriate predicate
of (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON) and I do not get
any warning from NUM_INT rule.

2) Add propriate predicate to IDENT rele for IPv6 format (same
as #1) and provide an empty condition block or tell some how
based on the predicate to fail the IDENT rule so it will move on
and try NUM_INT which should succeed.

Somehow I need the IDENT rule to fail on IPv6 address while
matching on NUM_INT. Almost looks like I need to move both rules
into a bigger common rule and manually set the token type.

Errors I'm getting now:
    [antlr] ANTLR Parser Generator   Version 2.7.5 (20050128)
1989-2005 jGuru.com
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
warning:lexical nondeterminism between rules IDENT and NUM_INT
upon
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
k==1:'A'..'F','a'..'f'
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
k==2:<end-of-token>,'0'..'9','A'..'F','L','X','a'..'f','l','x'
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
k==3:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
    [antlr]
/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
k==4:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
    [antlr] warning: public lexical rule IDENT is optional (can
match "nothing")


And relative portion of the NUM_INT skipping the bottom since
its not the problem and exactly the same as in java.g

IDENT
options {
    testLiterals=true;
}
    :   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
        // EMPTY match
    |   ('a'..'z'|'A'..'Z'|'_'|'$')
('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
    ;


// a numeric literal
NUM_INT
    {boolean isDecimal=false; Token t=null;}
    :   (NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT)=>
        (
            NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT
            { _ttype = IP_V4; }
        )
    |   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
        (
            NUM_HEX_2DIGIT (COLON NUM_HEX_2DIGIT)+
            { _ttype = IP_V6; }
        )
 < T R U N K A T E D>

protected NUM_HEX_2DIGIT: HEX_DIGIT (HEX_DIGIT)?



From voytechs at yahoo.com  Mon Jun  6 17:24:45 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Mon Jun  6 17:22:53 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <PLENJLPIEOPEDJJNCHDHCECJFIAA.voytechs@yahoo.com>
Message-ID: <PLENJLPIEOPEDJJNCHDHIECJFIAA.voytechs@yahoo.com>

BTW: while writting the previous email and suggesting to myself
of combining the rules, I did combine them and it worked
perfectly.

So my previous question still stands, as I'd hate deviate from
the more general inherited java.g rule set. Can this be done
more intuitive way?

// a numeric literal
NUM_INT
    {boolean isDecimal=false; Token t=null;}
    :   (NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT)=>
        (
            NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT
            { _ttype = IP_V4; }
        )
    |   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
        (
            NUM_HEX_2DIGIT (COLON NUM_HEX_2DIGIT)+
            { _ttype = IP_V6; }
        )
    |   ('a'..'z'|'A'..'Z'|'_'|'$')
('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
        { _ttype = IDENT; }

Works great.

Cheers,

mark...


>-----Original Message-----
>From: Mark Bednarczyk [mailto:voytechs@yahoo.com]
>Sent: Monday, June 06, 2005 8:16 PM
>To: ANTLR Interest
>Subject: RE: [antlr-interest] Help with pesky Lexer determinism
>
>
>Well I have another problem that is a little more
>involved so maybe I can just get a couple of quick
>pointers. Same issue but now with IPv6 address that
>actually steps of the toes on the IDENT rule since
>IPv6 address is comprised of HEX digits so 'a'..'f'
>overlap with IDENT rule of 'a'..'z'.
>
>BTW: here is the format of IPv6 for those not
>familiar, (HEX HEX COLON (COLON HEX HEX)+) in simple case.
>
>This is what I'm trying to do, but not really sure how
>to code it.
>
>1) Add the IPv6 block to NUM_INT rule with appropriate
>predicate of (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT
>COLON) and I do not get any warning from NUM_INT rule.
>
>2) Add propriate predicate to IDENT rele for IPv6
>format (same as #1) and provide an empty condition
>block or tell some how based on the predicate to fail
>the IDENT rule so it will move on and try NUM_INT
>which should succeed.
>
>Somehow I need the IDENT rule to fail on IPv6 address
>while matching on NUM_INT. Almost looks like I need to
>move both rules into a bigger common rule and manually
>set the token type.
>
>Errors I'm getting now:
>    [antlr] ANTLR Parser Generator   Version 2.7.5
>(20050128)   1989-2005 jGuru.com
>    [antlr]
>/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>warning:lexical nondeterminism between rules IDENT and
>NUM_INT upon
>    [antlr]
>/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>    k==1:'A'..'F','a'..'f'
>    [antlr]
>/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>
>k==2:<end-of-token>,'0'..'9','A'..'F','L','X','a'..'f','l','x'
>    [antlr]
>/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>    k==3:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
>    [antlr]
>/home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>    k==4:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
>    [antlr] warning: public lexical rule IDENT is
>optional (can match "nothing")
>
>
>And relative portion of the NUM_INT skipping the
>bottom since its not the problem and exactly the same
>as in java.g
>
>IDENT
>options {
>    testLiterals=true;
>}
>    :   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
>        // EMPTY match
>    |   ('a'..'z'|'A'..'Z'|'_'|'$')
>('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
>    ;
>
>
>// a numeric literal
>NUM_INT
>    {boolean isDecimal=false; Token t=null;}
>    :   (NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
>NUM_3DIGIT)=>
>        (
>            NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT
>'.' NUM_3DIGIT
>            { _ttype = IP_V4; }
>        )
>    |   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
>        (
>            NUM_HEX_2DIGIT (COLON NUM_HEX_2DIGIT)+
>            { _ttype = IP_V6; }
>        )
> < T R U N K A T E D>
>
>protected NUM_HEX_2DIGIT: HEX_DIGIT (HEX_DIGIT)?
>
>


From voytechs at yahoo.com  Mon Jun  6 17:59:42 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Mon Jun  6 17:57:48 2005
Subject: [antlr-interest] Found an error with UNARY_MINUS and typecast in
	java.g
Message-ID: <PLENJLPIEOPEDJJNCHDHCECKFIAA.voytechs@yahoo.com>

I found an error in the logic of java.g when it comes to parsing
UNARY_MINUS and UNARY_PLUS after a typecast. Who do I report the
problem to?

Here is an example:
-(int)2 != (int)-2;

Generates this AST tree:
( [AST ROOT,<<0>>] ( EXPR ( [!=,<NOT_EQUAL>] ( [-,<UNARY_MINUS>]
( [(,<TYPECAST] ( TYPE [int,<IDENT>] ) [2,<NUM_INT>] ) ) (
[-,<MINUS>] [int,<IDENT>] [2,<NUM_NT>] ) ) ) )

You can see that on the lefthand side of the expression it
generates the correct tree, UNARY_MINUS, TYPECAST , IDENT and
the NUM_INT. Then on the right things go wrong, I get a MINUS
instead of UNARY_MINUS, a IDENT instead of a TYPECAST with
IDENT.

I don't mind creating a patch for this and submitting it, as I
would like this problem fixed in the java.g grammar instead of
in my NPL.g file as I'm just inheriting and would like to be
upgradable to new versions of java.g and keep number of
overrides of underlying java grammar in my NPL grammar to a
minimum.


Cheers,
mark...


From parrt at cs.usfca.edu  Mon Jun  6 18:13:56 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  6 18:13:26 2005
Subject: [antlr-interest] Found an error with UNARY_MINUS and typecast in
	java.g
In-Reply-To: <PLENJLPIEOPEDJJNCHDHCECKFIAA.voytechs@yahoo.com>
References: <PLENJLPIEOPEDJJNCHDHCECKFIAA.voytechs@yahoo.com>
Message-ID: <5ED832D9-B8A0-4645-BBFF-676770C65445@cs.usfca.edu>


On Jun 6, 2005, at 5:59 PM, Mark Bednarczyk wrote:

> I found an error in the logic of java.g when it comes to parsing
> UNARY_MINUS and UNARY_PLUS after a typecast. Who do I report the
> problem to?
>
> Here is an example:
> -(int)2 != (int)-2;
>
> Generates this AST tree:
> ( [AST ROOT,<<0>>] ( EXPR ( [!=,<NOT_EQUAL>] ( [-,<UNARY_MINUS>]
> ( [(,<TYPECAST] ( TYPE [int,<IDENT>] ) [2,<NUM_INT>] ) ) (
> [-,<MINUS>] [int,<IDENT>] [2,<NUM_NT>] ) ) ) )
>
> You can see that on the lefthand side of the expression it
> generates the correct tree, UNARY_MINUS, TYPECAST , IDENT and
> the NUM_INT. Then on the right things go wrong, I get a MINUS
> instead of UNARY_MINUS, a IDENT instead of a TYPECAST with
> IDENT.
>
> I don't mind creating a patch for this and submitting it, as I
> would like this problem fixed in the java.g grammar instead of
> in my NPL.g file as I'm just inheriting and would like to be
> upgradable to new versions of java.g and keep number of
> overrides of underlying java grammar in my NPL grammar to a
> minimum.

Hi Mark,

Send me the tweak to the rule and I'll update the grammar.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From kibab at icehouse.net  Mon Jun  6 21:20:25 2005
From: kibab at icehouse.net (Kaleb Pederson)
Date: Mon Jun  6 21:20:28 2005
Subject: [antlr-interest] ECMA Script (Javascript) grammar
Message-ID: <200506062120.25835.kibab@icehouse.net>

I just posted an old ECMA Script (Javascript) grammar to the grammar area that 
I had started work on but never had time to finish, but apparently I was 
supposed to create a relative link to the grammar in the index.html file 
(which didn't seem to be documented?), so Terrance would you fix that?

The grammar compiles against ANTLR with a lot of unverified warnings but has 
much of the work done.  Hopefully it will be useful to somebody.

Thanks.

--Kaleb

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050606/787666b7/attachment.bin
From parrt at cs.usfca.edu  Mon Jun  6 22:02:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun  6 22:02:26 2005
Subject: [antlr-interest] ECMA Script (Javascript) grammar
In-Reply-To: <200506062120.25835.kibab@icehouse.net>
References: <200506062120.25835.kibab@icehouse.net>
Message-ID: <264335F6-BCC3-42B3-ADC5-FD99221D3248@cs.usfca.edu>

Hi.  Not sure what I need to do.  Did you upload a file?  Either  
upload or post a link to where it lives elsewhere.  Actually post  
again and I'll remove the old one.  Thanks so much for the grammar!

ter
On Jun 6, 2005, at 9:20 PM, Kaleb Pederson wrote:

> I just posted an old ECMA Script (Javascript) grammar to the  
> grammar area that
> I had started work on but never had time to finish, but apparently  
> I was
> supposed to create a relative link to the grammar in the index.html  
> file
> (which didn't seem to be documented?), so Terrance would you fix that?
>
> The grammar compiles against ANTLR with a lot of unverified  
> warnings but has
> much of the work done.  Hopefully it will be useful to somebody.
>
> Thanks.
>
> --Kaleb
>
>

From antlr at shmuelhome.mine.nu  Tue Jun  7 01:59:54 2005
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue Jun  7 02:01:34 2005
Subject: [antlr-interest] ECMA Script (Javascript) grammar
In-Reply-To: <200506062120.25835.kibab@icehouse.net>
References: <200506062120.25835.kibab@icehouse.net>
Message-ID: <42A5620A.8050308@shmuelhome.mine.nu>

Kaleb Pederson wrote:

>I just posted an old ECMA Script (Javascript) grammar to the grammar area that 
>I had started work on but never had time to finish
>
I am very interested in the grammar, but have three questions in advance 
of seeing the grammar.
1) Does it fully handle virtual semicolons? I see that the base code 
(scriptonite) has a special lexer to handle some of the more quirky 
issues of javascript dealing with new lines.
2) Does it produce a tree?
3)  How does it recover from badly structured input?

alternatively, just provide the grammar and supporting files. The 
answers should jump out.
 
From mpearce at digitas.com  Tue Jun  7 02:25:04 2005
From: mpearce at digitas.com (Matthew Pearce)
Date: Tue Jun  7 02:25:13 2005
Subject: [antlr-interest] Newbie! how can I convert a list of bullets
	to anHTML list
Message-ID: <6C74F0D7F53FBD4782435D1FB8FEF06D10B045@LONEXVS1.modemmedia.com>

Thanks very much, Matthew (Ford). 

This Antlr is dangerously addictive, isn't it? I also spent too much
time at the weekend, trying out different ideas. I got something working
using synctatic predicates, as you suggested before, in the parser, and
by reorganizing the lexer token rules. 

The lexer rules are somewhat simpler, now that I realise I can use a
newline as a delimiter while still consuming superfluous newlines. 

My parser rules are still a little complex, with the synctatic
predicates. (I also tried semantic predicates, but it seems they only
raise exceptions, but don't help determine the next match). 

Thank you for your example. It was an epiphany for me to see how you can
repeat a subrule (para)*, while still optionally match a list (para
(list)+), without getting non-determinism. That was what I was aiming
for at first, with para (list)?, but I hadn't thought about using the |.

I will go over my grammar again, and see if applying this pattern
simplifies my parser.

I wonder whether you have any suggestion about how to nest the list
items, input in the following manner:

1. 	Lorem ipsum
1.1. 	ipsum dolor
1.2.	sit consectetuer
2.	Ipsum sit dolor
3.	Dolr sit ipsum

At the moment, I only have 1 level of nesting allowed, because I have to
explicitly define in the lexer:

NESTED_NUMBERED_LIST
	:
	(('1'..'9'!) ('0'..'9'!)? ('.'!|'\t'!|' '!)) (('1'..'9'!)
('0'..'9'!)? ('.'!|'\t'!|' '!)) LINE
	;
NUMBERED_LIST
	:
	(('1'..'9'!) ('0'..'9'!)? ('.'!|'\t'!|' '!)) LINE
	;
LINE
	:
	(~('\r' | '\n'))+ ('\r' '\n')? { newline(); }  // DOS FILE
 	;

The associated parser rules are rather complicated, although they do
work.

But, I would like to have something that handles arbitrary levels of
nesting. Here is one idea I had, of incrementing a counter in the token,
but then, not entirely sure how to handle this in the parser. 

NUMBERED_LIST
{ ListToken = new ListToken(); /*overrides Common Token */ }
	:
	NUMBERED_LIST_START   LINE | NUMBERED_LIST_START
(NUMBERED_LIST_START { token.increment(); )+  LINE { $setToken(t); }
	;


NUMBERED_LIST_START
	:
	(('1'..'9'!) ('0'..'9'!)? ('.'!|'\t'!|' '!))
	;

Can you perhaps suggest an alternative approach?

Regards,
Matthew

-----Original Message-----
From: Matthew Ford <matthew.ford@forward.com.au>
To: Matthew Pearce <mpearce@digitas.com>; antlr-interest@antlr.org
<antlr-interest@antlr.org>
Sent: Sat Jun 04 01:31:18 2005
Subject: Re: [antlr-interest] Newbie! how can I convert a list of
bullets to anHTML list

Hi Matthew  (Pearce)
here is a first pass using Antlr V3.0
Note: Antlr V3.0 is different (and better) than V2.0 so perhaps this is
not actually of much use to you.
 
Also not whitespace has been lost in the list items.
(Ter is there a simple way around this commom problem?)
matthew
 
Input
 
- Lorem ipsum
- Dolor sit
- Amet
 

- Foo bar
- Bar foo
- Foo
 
Output
 
<ol>
<li>Loremipsum</li>
<li>Dolorsit</li>
<li>Amet</li>
</ol>
<ol>
<li>Foobar</li>
<li>Barfoo</li>
<li>Foo</li>
</ol>
 
 
GRAMMAR ==============
grammar Lists;
 
start
  : (paraOrList)*
  ;
 
paraOrList
  : para
  | para {System.out.println("<ol>");} (list)+
{System.out.println("</ol>");}
  ;
 
list
  : {System.out.print("<li>");} MINUS (w=WORD
{System.out.print(w.getText());} )* 
    {System.out.println("</li>");} NL
  ;
 
para
  : NL NL
  ;
 

WORD  :   ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;
 

MINUS :
    '-'
    ;
 
NL  : '\n'
    ;
 
WS  :   (   ' '
        |   '\t'
        |   '\r'
        )+
        { channel=99; }
    ;    
 
----- Original Message ----- 

	From: Matthew Pearce <mailto:mpearce@digitas.com>  
	To: Matthew Ford <mailto:matthew.ford@forward.com.au>  ;
antlr-interest@antlr.org 
	Sent: Friday, June 03, 2005 11:54 PM
	Subject: RE: [antlr-interest] Newbie! how can I convert a list
of bullets to anHTML list


	Matthew,

	 

	Thanks for your reply. I'll try adding a predicate, as you
suggest. I actually don't have any problem finding a list in the lexer.
But, I guess, in the parser, I somehow have to know that one list token
is the first or last of a sequence, which, from the docs, sounded like a
context-sensitive grammar, like:

	 

	para list -> list_begin list_item

	list list -> list_item

	list para -> list_item list_end

	 

	Does that make sense to you?

	 

	A list is actually the character sequence:

	 

	\n

	-\tLorem ipsum\n

	-\tDolor sit\n

	-\tAmet\n

	 

	\n

	-\sFoo bar\n

	-\sBar foo\n

	-\sFoo\n

	 

	I haven't attempted it yet, but I also need to support a char
sequence like

	 

	\n

	1.\tLorem ipsum\n

	2.\tDolor sit\n

	2.1.\tAmet\n

	2.2.\tConsectetuer Amet\n

	 

	making a nested HTML ordered list <ol><li><ol>Consectetuer
Amet</ol></li></ol>.

	 

	Hence my earlier point about nested lists.

	 

	 

	________________________________

		From: Matthew Ford [mailto:matthew.ford@forward.com.au] 
	Sent: 02 June 2005 23:02
	To: Matthew Pearce; antlr-interest@antlr.org
	Subject: Re: [antlr-interest] Newbie! how can I convert a list
of bullets to anHTML list

	 

	Is the list actually the character sequence

	/n

	/t-/tbullet/n

	/t-/tbullet/n

	/t-/tbullet/n

	/t-/tbullet/n

	 

	What makes a list different from other text like /t-/t

	matthew

	 

	You may need to do infinite lookahead to decided you are
processing a list

	 like 

	(list) => list

	see Syntactic Predicates in the docs

	matthew

		----- Original Message ----- 

		From: Matthew Pearce <mailto:mpearce@digitas.com>  

		To: antlr-interest@antlr.org 

		Sent: Friday, June 03, 2005 1:19 AM

		Subject: [antlr-interest] Newbie! how can I convert a
list of bullets to anHTML list

		 

		I'd like to convert a list of bullets to an HTML list,
i.e.:

		 

		From:

		-          bullet

		-          bullet

		-          bullet

		 

		To:

		<ul><li>bullet</li><li>bullet</li><li>bullet</li></ul>

		 

		I thought over a few different options:

		 

		1. Have the lexer produce a LIST token when it matches:

		 - bullet

		But I don't know how to get the parser to find the <ul>
tags, because I cannot add a special case

		 

		2. Have the lexer produce a LIST token when it matches:

		-          bullet

		-          bullet

		-          bullet

		But I don't know how to get the parser to insert the
<li> tags, because it hasn't tokenized each bullet

		 

		3. Have the parser match a rule for list that matches
like:

		 

		list:       LIST^  PARA (LIST! PARA)+

		 

		Which would give me an AST node like, that could support
nested lists.

		 

		                        LIST ----+----PARA

		                                    +----PARA

	
+----LIST--------+-PARA

		                                     +---PARA         

		 

		But this gives me non-determinisim, between match a
straight paragraph (PARA), and a bulleted line LIST PARA.

		 

		 

		Can anyone suggest an approach?  

		 

		 

		class CourseTreeWalker extends TreeParser;

		 

		tree2html returns [String s]

		{ s = ""; }

		    :

		      (#(t:TTL (p:PARA | l:list)+ { 

		            s+="<h4>" +t+ "</h4>\n";

		            s+= "<p>" +p+ "</p>\n";

		            s+= "<ul>"+l+"</ul>"; } ))+   // this
doesn't do what I want

		      

		    ;

		 

		list        // this doesn't do what I want

		{ String l = ""; }

		 :

		      (#(LIST (p2:PARA) { 

		            l+="<ul><li>" +p2+ "</li></ul>\n";

		             } ))

		;

		 

		class CourseParser extends Parser;

		 

		options {

		    buildAST = true;

		}

		 

		file :  (section)+ EOF! ;

		 

		section : TTL^ (listexpr)+;

		 

		listexpr : (LIST^)? paraexpr;   // this just matches
each bullet, instead of treating bullets as a group

		 

		paraexpr: (PARA);

		 

		 

		class CourseLexer extends Lexer;

		 

		options {

		    k = 3; 

		    charVocabulary = '\3'..'\377';

		}

		 

		 

		PARA  : ("LZU") =>

		        ("LZU" (LETTER | DIGIT | ' ' | '/')+)  {
$setType(TTL); }

		        |

		        ("Des") =>

		        ("Description:")   { $setType(TTL); }

		        |

		        ("Lea") =>

		        ("Learning objectives:")   { $setType(TTL); }

		        |

		        ("Tar") =>

		        ("Target audience:")   { $setType(TTL); }

		        |

		        ("Pre") =>

		        ("Prerequisites:")   { $setType(TTL); }

		        |

		         (CHAR | ' ' )+ 

		      ;

		 

		 

		LIST   : ('-' | '*') ;

		 

		 

		 

		NEWLINE : (

		                  ('\r''\n')=> '\r''\n' //DOS

		                  

		                  | '\r' //MAC 

		                  

		                  | '\n' //UNIX

		                  )

		                  { $setType(Token.SKIP); newline();  }

		            ;

		protected

		DIGIT

		      : '0'..'9'

		      ;

		 

		protected

		LETTER

		      : ('a'..'z' | 'A'..'Z')

		      ;

		 

		            

		protected

		CHAR

		      : ~( '\n' | '\r' | ' ' | '\t' | '\f' | '-' | '*' )

		      ;

		      

		    

		    

From e9725431 at student.tuwien.ac.at  Tue Jun  7 03:11:26 2005
From: e9725431 at student.tuwien.ac.at (Stefan Rank)
Date: Tue Jun  7 03:11:31 2005
Subject: [antlr-interest] control of whitespace in generated code
Message-ID: <42A572CE.8050003@student.tuwien.ac.at>

hi

is there a way to change antlr's generation of whitespace?

- how does it decide what line ending character(s) to use in the 
generated files?

- can it be told to use spaces for indentation instead of tabs?

of course that's easy to do by post-processing, but it would be nice to 
have these simple 'personal-taste' options.

thanks for a great tool


From nbsherid at secsme.org.au  Tue Jun  7 03:52:55 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Tue Jun  7 03:52:43 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <PLENJLPIEOPEDJJNCHDHCECJFIAA.voytechs@yahoo.com>
Message-ID: <001201c56b4f$10601d50$0500a8c0@nigel>


Hey Mark,

Something to be aware of: IPv6 addressing rules are very flexible... I came
across this a few months ago...

>From RFC 2373 (http://www.ietf.org/rfc/rfc2373.txt), the following are all
valid addresses:

         1080:0:0:0:8:800:200C:417A  a unicast address
         FF01:0:0:0:0:0:0:101        a multicast address
         0:0:0:0:0:0:0:1             the loopback address
         0:0:0:0:0:0:0:0             the unspecified addresses

shortened versions:
        1080::8:800:200C:417A       a unicast address
         FF01::101                   a multicast address
         ::1                         the loopback address
         ::                          the unspecified addresses

And IPv4 equivalence:

	   0:0:0:0:0:0:13.1.68.3

         0:0:0:0:0:FFFF:129.144.52.38

      or in compressed form:

         ::13.1.68.3

         ::FFFF:129.144.52.38


and then there are prefixes and things to contend with as well, depending on
your language.

Currently, my language supports IPv4/v6 addressing to some degree, but its
not finished and I've chosen to use '#' delimiters to avoid conflicts with
numerical types. To deal with this issue, I just used a generic token
matcher (that disambiguates IPv4, IPv6, dates and 'hashed' or binary data,
which all use the '#' delimiters), and then I'll add some more semantic
checks further down the chain. However, you may not be at the same liberty
in having such delimiters (depending on your requirements handed to you),
and so you will hit non-determinisms pretty quickly!

The best way to deal with this sort of thing is start with a protected lexer
definitions, and combine them into one rule:

   IPADDRHASHDATE: (IPV4) => IPV4
{$setType(IPV4);}
                 | (IPV6HASH) => IPV6HASH
{$setType(IPV6HASH);}
                 | (DATEVALUE) => DATEVALUE
{$setType(DATEVALUE);};

   protected DATEVALUE: '#'! ( ( (DIGIT)+ FSLASH ) => (DIGIT)+ FSLASH
(DIGIT)+ 
								( FSLASH
(DIGIT)+ )? WS )? 
							 (DIGIT)+ COLON
(DIGIT)+ 
								(COLON
(DIGIT)+ (DOT (DIGIT)+ )? )?
						'#'!;
         
   protected IPV4: '#'! (DIGIT)+ DOT (DIGIT)+ DOT (DIGIT)+ DOT (DIGIT)+ 
						(FSLASH (DIGIT)+ )? '#'!;
   /* Too messy to do IPv6 addresses any other way */
   protected IPV6HASH: '#'! (':' | '.' | HEX | "#\\"! WS! "#"! )+ 
						(FSLASH (DIGIT)+ )? '#'!;


I'm going to add action code then, which checks the tokens to ensure that
they are 'valid'. 

Of course, you might hit performance difficulties if a large number of
tokens pass through your syntatic predicate, but if you put the most common
token type first you will not be so severely affected.

I'll try and get back to you shortly with a more thorough answer/solution...
maybe someone else here has some ideas? Some of the grammars on the ANTLR
site have very long lexer definitions to deal with these sorts of issues. Of
course, that makes them very difficult to understand for everyone but the
author ;)

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435
 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Mark Bednarczyk
> Sent: Tuesday, 7 June 2005 10:16 AM
> To: ANTLR Interest
> Subject: RE: [antlr-interest] Help with pesky Lexer determinism
> 
> Well I have another problem that is a little more involved so
> maybe I can just get a couple of quick pointers. Same issue but
> now with IPv6 address that actually steps of the toes on the
> IDENT rule since IPv6 address is comprised of HEX digits so
> 'a'..'f' overlap with IDENT rule of 'a'..'z'.
> 
> BTW: here is the format of IPv6 for those not familiar, (HEX HEX
> COLON (COLON HEX HEX)+) in simple case.
> 
> This is what I'm trying to do, but not really sure how to code
> it.
> 
> 1) Add the IPv6 block to NUM_INT rule with appropriate predicate
> of (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON) and I do not get
> any warning from NUM_INT rule.
> 
> 2) Add propriate predicate to IDENT rele for IPv6 format (same
> as #1) and provide an empty condition block or tell some how
> based on the predicate to fail the IDENT rule so it will move on
> and try NUM_INT which should succeed.
> 
> Somehow I need the IDENT rule to fail on IPv6 address while
> matching on NUM_INT. Almost looks like I need to move both rules
> into a bigger common rule and manually set the token type.
> 
> Errors I'm getting now:
>     [antlr] ANTLR Parser Generator   Version 2.7.5 (20050128)
> 1989-2005 jGuru.com
>     [antlr]
> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
> warning:lexical nondeterminism between rules IDENT and NUM_INT
> upon
>     [antlr]
> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
> k==1:'A'..'F','a'..'f'
>     [antlr]
> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
> k==2:<end-of-token>,'0'..'9','A'..'F','L','X','a'..'f','l','x'
>     [antlr]
> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
> k==3:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
>     [antlr]
> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
> k==4:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
>     [antlr] warning: public lexical rule IDENT is optional (can
> match "nothing")
> 
> 
> And relative portion of the NUM_INT skipping the bottom since
> its not the problem and exactly the same as in java.g
> 
> IDENT
> options {
>     testLiterals=true;
> }
>     :   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
>         // EMPTY match
>     |   ('a'..'z'|'A'..'Z'|'_'|'$')
> ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
>     ;
> 
> 
> // a numeric literal
> NUM_INT
>     {boolean isDecimalulse; Token t=null;}
>     :   (NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
> NUM_3DIGIT)=>
>         (
>             NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
> NUM_3DIGIT
>             { _ttype = IP_V4; }
>         )
>     |   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
>         (
>             NUM_HEX_2DIGIT (COLON NUM_HEX_2DIGIT)+
>             { _ttype = IP_V6; }
>         )
>  < T R U N K A T E D>
> 
> protected NUM_HEX_2DIGIT: HEX_DIGIT (HEX_DIGIT)?
> 
> 
> 


From ric.klaren at gmail.com  Tue Jun  7 04:02:59 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun  7 04:03:01 2005
Subject: [antlr-interest] control of whitespace in generated code
In-Reply-To: <42A572CE.8050003@student.tuwien.ac.at>
References: <42A572CE.8050003@student.tuwien.ac.at>
Message-ID: <bc607a4e05060704021ff1c737@mail.gmail.com>

On 6/7/05, Stefan Rank <e9725431@student.tuwien.ac.at> wrote:
> is there a way to change antlr's generation of whitespace?

Change the codegenerator ;)

> - how does it decide what line ending character(s) to use in the
> generated files?

Not 100% sure but think it depends on java's behaviour for the
platform for that.

> - can it be told to use spaces for indentation instead of tabs?

Nope, not without code changes.

In antlr3 you could probably tinker with some of the codegeneration
templates to get something more to your liking. With antlr2 you'd
probably be better of sticking to a postprocessor.

Cheers,

Ric
From gregbedwell at gmail.com  Tue Jun  7 04:06:40 2005
From: gregbedwell at gmail.com (Greg Bedwell)
Date: Tue Jun  7 04:06:44 2005
Subject: [antlr-interest] Re: Exiting on parser errors
In-Reply-To: <4c3df4d305052604523811312b@mail.gmail.com>
References: <4c3df4d305052604523811312b@mail.gmail.com>
Message-ID: <4c3df4d305060704064896dca@mail.gmail.com>

(This is a rpely to a fairly old topic... I only just came back to the
antlr section of my program and it is still bugging me :))

>>In simple terms, I just want to call exit(1) as soon as the first
>>syntax error is detected by ANTLR and the error message is displayed.
>>
>>
>Try putting "defaultErrorHandler=false;" in the >options block of your
>grammar file. This will prevent ANTLR from catching the
>ReconitionExceptions and other Exceptions itself and just allow the
>exception to propagate back up to the method that is actually calling
>the parsers.

I hate sounding thick here.  This is what I read in the documentation
and it does exit on errors which is what I wanted but I just get an
"Aborted" message rather than the lovely "error on line 14:5
(expecting '{')" messages that I was getting before.

I'm calling my antlr generated files from here:

try
{
    CodegenLexer lexer(ss1);
    CodegenParser parser(lexer);

    parser.program();
}
catch(exception& e)
{
    std::cerr << "exception: " << e.what() << std::endl;
    exit(1);
}

so if I was understanding correctly, at the very least I would expect
it to say "exception: Aborted" with the exception being thrown upwards
and caught by my catch block rather than caught by ANTLR.

What am I doing wrong that it is just saying "Aborted" rather than
"Error on line 14:5: Expecting '{'" before it exits.

Thanks
From voytechs at yahoo.com  Tue Jun  7 05:09:14 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Tue Jun  7 05:09:17 2005
Subject: [antlr-interest] Found an error with UNARY_MINUS and typecast
	injava.g
In-Reply-To: <5ED832D9-B8A0-4645-BBFF-676770C65445@cs.usfca.edu>
Message-ID: <PLENJLPIEOPEDJJNCHDHIECOFIAA.voytechs@yahoo.com>

I will then. I first want to do some more checks and run npl.g
with inherited java.g against my existing NPL programs to see if
there are any other problems I can find and I'll submit patches
for everything at the same time, that is if I find anything
else.

Here is a link to my protocols.npl definition file:

http://tinyurl.com/7up6x

http://cvs.sourceforge.net/viewcvs.py/jnetstream/jnetstream/conf
ig/protocols.npl?rev=1.9.4.5&view=markup


Cheers,
mark...

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of
>Terence Parr
>Sent: Monday, June 06, 2005 9:14 PM
>To: ANTLR Interest
>Subject: Re: [antlr-interest] Found an error with
>UNARY_MINUS and
>typecast injava.g
>
>
>
>On Jun 6, 2005, at 5:59 PM, Mark Bednarczyk wrote:
>
>> I found an error in the logic of java.g when it
>comes to parsing
>> UNARY_MINUS and UNARY_PLUS after a typecast. Who do
>I report the
>> problem to?
>>
>> Here is an example:
>> -(int)2 != (int)-2;
>>
>> Generates this AST tree:
>> ( [AST ROOT,<<0>>] ( EXPR ( [!=,<NOT_EQUAL>] (
>[-,<UNARY_MINUS>]
>> ( [(,<TYPECAST] ( TYPE [int,<IDENT>] ) [2,<NUM_INT>] ) ) (
>> [-,<MINUS>] [int,<IDENT>] [2,<NUM_NT>] ) ) ) )
>>
>> You can see that on the lefthand side of the expression it
>> generates the correct tree, UNARY_MINUS, TYPECAST , IDENT and
>> the NUM_INT. Then on the right things go wrong, I get a MINUS
>> instead of UNARY_MINUS, a IDENT instead of a TYPECAST with
>> IDENT.
>>
>> I don't mind creating a patch for this and
>submitting it, as I
>> would like this problem fixed in the java.g grammar
>instead of
>> in my NPL.g file as I'm just inheriting and would like to be
>> upgradable to new versions of java.g and keep number of
>> overrides of underlying java grammar in my NPL grammar to a
>> minimum.
>
>Hi Mark,
>
>Send me the tweak to the rule and I'll update the grammar.
>
>Ter
>--
>CS Professor & Grad Director, University of San Francisco
>Creator, ANTLR Parser Generator, http://www.antlr.org
>Cofounder, http://www.jguru.com
>
>


From serafettin_sentuerk at intergral.com  Tue Jun  7 05:32:08 2005
From: serafettin_sentuerk at intergral.com (Serafettin Senturk)
Date: Tue Jun  7 05:32:19 2005
Subject: [antlr-interest] Semantical problem with Antlr
Message-ID: <ANEFKENHALPOILMBNJFGOEFPCCAA.serafettin_sentuerk@intergral.com>


 Hello,

 I am trying to convert from typeless language to a typeful language like
the following:

 from  (a = 3+5;)  to  ==>   (int a = 3+5;)

 I know we can get the result of such an expression. But is it possible with
Antlr to evaluate the result semantically and according to the result put
the appropriate data type for declaration? Does anybody have an idea about
this semantical problem of Antlr?

 Best Regards,
 Serafettin




From demakov at ispras.ru  Tue Jun  7 05:43:19 2005
From: demakov at ispras.ru (Alexey Demakov)
Date: Tue Jun  7 05:43:26 2005
Subject: [antlr-interest] Semantical problem with Antlr
References: <ANEFKENHALPOILMBNJFGOEFPCCAA.serafettin_sentuerk@intergral.com>
Message-ID: <014401c56b5e$7bff8b90$8cc79553@marlboro>

Hello,

----- Original Message ----- 
From: "Serafettin Senturk" <serafettin_sentuerk@intergral.com>
To: <antlr-interest@antlr.org>
Sent: Tuesday, June 07, 2005 4:32 PM
Subject: [antlr-interest] Semantical problem with Antlr


>  I am trying to convert from typeless language to a typeful language like
> the following:
> 
>  from  (a = 3+5;)  to  ==>   (int a = 3+5;)
> 
>  I know we can get the result of such an expression. But is it possible with
> Antlr to evaluate the result semantically and according to the result put
> the appropriate data type for declaration? Does anybody have an idea about
> this semantical problem of Antlr?

You need to write additional semantic checker that analyse AST
and set variable types.

And it is not always possible to choose type 
for variable if language allows to reuse variable for value of
different type. For example:

a = 3 + 5;
a = "a" + a;

It is not easy to choose a type for 'a' variable.

Regards,
Alexey

-----
Alexey Demakov
TreeDL: Tree Description Language: http://treedl.sourceforge.net
RedVerst Group: http://www.unitesk.com


From mail at martin-probst.com  Tue Jun  7 06:06:17 2005
From: mail at martin-probst.com (Martin Probst)
Date: Tue Jun  7 06:06:26 2005
Subject: [antlr-interest] Semantical problem with Antlr
In-Reply-To: <ANEFKENHALPOILMBNJFGOEFPCCAA.serafettin_sentuerk@intergral.com>
References: <ANEFKENHALPOILMBNJFGOEFPCCAA.serafettin_sentuerk@intergral.com>
Message-ID: <42A59BC9.6070808@martin-probst.com>

If you're looking for an implementation hint, what about implementing a 
.getDataType() method in your AST nodes and by that inferring the type 
of your nodes? E.g. the type of "a" in your example is the type of the 
assignment content below "=", which is the type of the "+" operation 
which is in turn the type of the two arguments, somehow combined if not 
equal. I.e. you just have to call down within the tree.

Serafettin Senturk wrote:
>  Hello,
> 
>  I am trying to convert from typeless language to a typeful language like
> the following:
> 
>  from  (a = 3+5;)  to  ==>   (int a = 3+5;)
> 
>  I know we can get the result of such an expression. But is it possible with
> Antlr to evaluate the result semantically and according to the result put
> the appropriate data type for declaration? Does anybody have an idea about
> this semantical problem of Antlr?
> 
>  Best Regards,
>  Serafettin
> 
> 
> 
> 
> 

From kibab at icehouse.net  Tue Jun  7 06:48:35 2005
From: kibab at icehouse.net (Kaleb Pederson)
Date: Tue Jun  7 06:48:51 2005
Subject: [antlr-interest] ECMA Script (Javascript) grammar
In-Reply-To: <264335F6-BCC3-42B3-ADC5-FD99221D3248@cs.usfca.edu>
References: <200506062120.25835.kibab@icehouse.net>
	<264335F6-BCC3-42B3-ADC5-FD99221D3248@cs.usfca.edu>
Message-ID: <200506070648.47594.kibab@icehouse.net>

Ok, I reposted it.  I used the "unzip at antlr.org" option the first time, 
which didn't clearly define what the desired format was.  To make matters 
worse, I incorrectly assumed that it meant the zip file should contain the 
file and some html description, etc. etc.

Ter, would you remove the first one posted?

Thanks.

--Kaleb


On Monday 06 June 2005 10:02 pm, Terence Parr wrote:
> Hi.  Not sure what I need to do.  Did you upload a file?  Either
> upload or post a link to where it lives elsewhere.  Actually post
> again and I'll remove the old one.  Thanks so much for the grammar!
>
> ter
>
> On Jun 6, 2005, at 9:20 PM, Kaleb Pederson wrote:
> > I just posted an old ECMA Script (Javascript) grammar to the
> > grammar area that
> > I had started work on but never had time to finish, but apparently
> > I was
> > supposed to create a relative link to the grammar in the index.html
> > file
> > (which didn't seem to be documented?), so Terrance would you fix that?
> >
> > The grammar compiles against ANTLR with a lot of unverified
> > warnings but has
> > much of the work done.  Hopefully it will be useful to somebody.
> >
> > Thanks.
> >
> > --Kaleb

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050607/bb3ec613/attachment.bin
From kibab at icehouse.net  Tue Jun  7 06:54:35 2005
From: kibab at icehouse.net (Kaleb Pederson)
Date: Tue Jun  7 06:54:39 2005
Subject: [antlr-interest] ECMA Script (Javascript) grammar
In-Reply-To: <42A5620A.8050308@shmuelhome.mine.nu>
References: <200506062120.25835.kibab@icehouse.net>
	<42A5620A.8050308@shmuelhome.mine.nu>
Message-ID: <200506070654.35929.kibab@icehouse.net>

On Tuesday 07 June 2005 1:59 am, shmuel siegel wrote:
> 1) Does it fully handle virtual semicolons? I see that the base code
> (scriptonite) has a special lexer to handle some of the more quirky

1) I'm not sure and don't remember....

> issues of javascript dealing with new lines.
> 2) Does it produce a tree?

2) No :(... I didn't make it that far

> 3)  How does it recover from badly structured input?

3) As well as antlr's default handling.

I tried to document where it varied from the spec, and tried to leave in 
comments where I still had to use the lookahead to verify that I was in the 
right spec.  It should be pretty clean, just not finished.

Actually, come to think about it, I might only have used the scriptonite 
grammar for some of the unicode characters so that I didn't have to start 
from scratch on that note.

I also seem to remember that I left out the regex portion, but I don't 
remember for sure.

I just hope it will be useful.  I would still like to use it, but it will be a 
while (another year or so) before I would get back to this, and it's already 
sat for over a year.

--Kaleb

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050607/bf25114c/attachment.bin
From voytechs at yahoo.com  Tue Jun  7 07:18:54 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Tue Jun  7 07:18:55 2005
Subject: [antlr-interest] Semantical problem with Antlr
In-Reply-To: <ANEFKENHALPOILMBNJFGOEFPCCAA.serafettin_sentuerk@intergral.com>
Message-ID: <PLENJLPIEOPEDJJNCHDHCEDBFIAA.voytechs@yahoo.com>

I'm working on exactly same feature. I already have a pretty
good typecasting mechanism working, but its using a hand-coded
lexer and parser. I'm converting it to ANTLR now.

Here is a link to my examples:
http://netrepository.org/jnetstream/releases/0.3.0/index.htm#typ
ecasting_example

And here is a link of how it actually works:
http://jnetstream.sourceforge.net/docs/Typecasting_Mechanism_fil
es/v3_document.htm

Hope it helps.

Cheers,
mark....

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of
>Serafettin Senturk
>Sent: Tuesday, June 07, 2005 8:32 AM
>To: antlr-interest@antlr.org
>Subject: [antlr-interest] Semantical problem with Antlr
>
>
>
> Hello,
>
> I am trying to convert from typeless language to a
>typeful language like
>the following:
>
> from  (a = 3+5;)  to  ==>   (int a = 3+5;)
>
> I know we can get the result of such an expression.
>But is it possible with
>Antlr to evaluate the result semantically and
>according to the result put
>the appropriate data type for declaration? Does
>anybody have an idea about
>this semantical problem of Antlr?
>
> Best Regards,
> Serafettin
>
>
>
>
>


From liigo at hotpop.com  Tue Jun  7 08:15:49 2005
From: liigo at hotpop.com (liigo)
Date: Tue Jun  7 08:16:11 2005
Subject: [antlr-interest] Is there a LOGO(a programing language) grammar
	file?
Message-ID: <op.srz90nvzo3wyor@prog6>

Hi, everyone

Is there a LOGO(a programing language) grammar file?

thanks

From liigo at hotpop.com  Tue Jun  7 08:21:30 2005
From: liigo at hotpop.com (liigo)
Date: Tue Jun  7 08:22:12 2005
Subject: [antlr-interest] antlr3.0's documents is available?
Message-ID: <op.srz994nqo3wyor@prog6>

Hi, is antlr3.0's documents available?

From jean-claude.meilland at experian-scorex.com  Tue Jun  7 09:57:24 2005
From: jean-claude.meilland at experian-scorex.com (Jean-Claude Meilland)
Date: Tue Jun  7 09:55:59 2005
Subject: [antlr-interest] Solaris - Antlr 274 - GCC link error while
	compiling static (C++ generated code)
Message-ID: <DD2C1373CF5BAE47B4AA0BBF629E8D00D89634@EXCHANGE1.experian-scorex.com>

Hey guys,

I'm trying to compile the C++ code generated by ANTLR 2.7.4 from my
grammar in static mode. I'm working on Solaris using GCC compiler and
linker.

I'm getting a weird link error:
Undefined			first referenced
 symbol  			    in file
_Unwind_Resume                      ./app/release/fmblex.o  (symbol
belongs to implicit dependency /usr/local/lib/libgcc_s.so.1)

So here are my questions:
1) Is there anything to do to with the antrl tool or in a header file to
specify we want to generate c++ code that links in static?

2) Is there a specific option to use with GCC for antrl generated source
code to link in static lib mode? 

Thanks for your help.

Cheers,

J.Claude.


 

From ric.klaren at gmail.com  Tue Jun  7 10:28:39 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun  7 10:29:17 2005
Subject: [antlr-interest] Solaris - Antlr 274 - GCC link error
	while	compiling static (C++ generated code)
In-Reply-To: <DD2C1373CF5BAE47B4AA0BBF629E8D00D89634@EXCHANGE1.experian-scorex.com>
References: <DD2C1373CF5BAE47B4AA0BBF629E8D00D89634@EXCHANGE1.experian-scorex.com>
Message-ID: <42A5D947.5040903@gmail.com>

Jean-Claude Meilland wrote:
> I'm trying to compile the C++ code generated by ANTLR 2.7.4 from my
> grammar in static mode. I'm working on Solaris using GCC compiler and
> linker.
> 
> I'm getting a weird link error:
> Undefined			first referenced
>  symbol  			    in file
> _Unwind_Resume                      ./app/release/fmblex.o  (symbol
> belongs to implicit dependency /usr/local/lib/libgcc_s.so.1)
> 
> So here are my questions:
> 1) Is there anything to do to with the antrl tool or in a header file to
> specify we want to generate c++ code that links in static?
> 
> 2) Is there a specific option to use with GCC for antrl generated source
> code to link in static lib mode? 

Antlr 2.7.4 should function without a glitch on solaris. _Unwind_Resume 
is a symbol unrelated to antlr's support library and generated code.

Information on how you build/link your project (and how you built antlr) 
could be helpfull.

Cheers,

Ric
From parrt at cs.usfca.edu  Tue Jun  7 11:11:17 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun  7 11:10:48 2005
Subject: [antlr-interest] antlr3.0's documents is available?
In-Reply-To: <op.srz994nqo3wyor@prog6>
References: <op.srz994nqo3wyor@prog6>
Message-ID: <4A67E40A-DD69-46F4-8F47-8C867D54C25D@cs.usfca.edu>


On Jun 7, 2005, at 8:21 AM, liigo wrote:

> Hi, is antlr3.0's documents available?

Hi.  There is no documentation for this early access release, just  
the code and some examples.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Tue Jun  7 11:13:31 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun  7 11:12:59 2005
Subject: [antlr-interest] ECMA Script (Javascript) grammar
In-Reply-To: <200506070648.47594.kibab@icehouse.net>
References: <200506062120.25835.kibab@icehouse.net>
	<264335F6-BCC3-42B3-ADC5-FD99221D3248@cs.usfca.edu>
	<200506070648.47594.kibab@icehouse.net>
Message-ID: <35D21682-6516-4DEA-A73F-CFA8A683F80D@cs.usfca.edu>


On Jun 7, 2005, at 6:48 AM, Kaleb Pederson wrote:

> Ok, I reposted it.  I used the "unzip at antlr.org" option the  
> first time,
> which didn't clearly define what the desired format was.  To make  
> matters
> worse, I incorrectly assumed that it meant the zip file should  
> contain the
> file and some html description, etc. etc.
>
> Ter, would you remove the first one posted?

Removed.
Thanks,
Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From rob.hill at blueyonder.co.uk  Tue Jun  7 14:27:22 2005
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Tue Jun  7 14:27:17 2005
Subject: [antlr-interest] intro..& questions
In-Reply-To: <42A5D947.5040903@gmail.com>
Message-ID: <ECOWS05Miqxwf1wrSVc000edced@smtp-out5.blueyonder.co.uk>

Hi all, been lurking for a while, so I thought I'd introduce myself before
asking lots of stupid questions.. :)

Im Rob, Programmer, 20yrs experience, mainly games, but now moved to <ahem>
sensible software (where the companies don't seem to go bankrupt at the rate
of 1 a week...)
I originally used PCCTS a long time ago, and had a problem that I thought I
could solve with it, and hence, I ended up here with antlr instead! :)

I have to say, a stunningly useful bit of software Terrence, Nice one.

Environment : WinXP, antlr 2.7.5, Devstudio, and C#

So on with the daft questions, they're just usage questions really - I'll
probably have more questions as the app I'm writing becomes less trivial :)
hehe

Ok, heres the first one 

Q1. How do I get the current line number in a parser rule? 
	Im in the middle of the rule, checking the semantics and if there's
a 	problem I want to throw an exception with a new error format that's
DevStudio friendly ie 
	
	"Filename.v(25) : error blah blah blah" type of thing.

	I can see there's a line number variable in the lexers inputState,
but how do you get at it from the Parser? I know I could make them into
singletons (there will only ever be one of each anyway) and get at the lexer
that way but it just seems .. well, wrong. I cant see any other way at
getting at the lexers inputstate to fetch the line the current token was
found on..

Q2:
	Im using the string template to output the transformed source, and
im getting spurious newlines after braces ie...

structDecl(name,variables) ::=<<
struct $name${
	$variables:{$it.decl:(it.format)()$}$
}; 
>>
Outputs

Struct aName
{

Line;
Line;
}

Where is the first newline coming from after the brace? It doesn't seem to
make any difference where I place the $variables$ stuff, I always get a
newline after the brace. Its just a formatting problem, but I thought that's
what the stringtemplate was for.. to help me format stuff how I want ;)

Any help much appreciated! 
(and I bet you thought they were going to be difficult questions hehe)

Thanks.


Ps how do I get hold of Antlr V3? Sounds like a monster!


From open.zone at virgin.net  Tue Jun  7 17:37:25 2005
From: open.zone at virgin.net (Micheal J)
Date: Tue Jun  7 17:23:39 2005
Subject: [antlr-interest] intro..& questions
In-Reply-To: <ECOWS05Miqxwf1wrSVc000edced@smtp-out5.blueyonder.co.uk>
Message-ID: <000d01c56bc2$3f960170$6602a8c0@hercules>

> Im Rob, Programmer, 20yrs experience, mainly games, but now 
> moved to <ahem> sensible software (where the companies don't 
> seem to go bankrupt at the rate of 1 a week...)

Oh, the excitement...

[...]

> Q1. How do I get the current line number in a parser rule? 
> 	Im in the middle of the rule, checking the semantics 
> and if there's
> a 	problem I want to throw an exception with a new error 
> format that's
> DevStudio friendly ie 
> 	
> 	"Filename.v(25) : error blah blah blah" type of thing.
> 
> 	I can see there's a line number variable in the lexers 
> inputState, but how do you get at it from the Parser? I know 
> I could make them into singletons (there will only ever be 
> one of each anyway) and get at the lexer that way but it just 
> seems .. well, wrong. I cant see any other way at getting at 
> the lexers inputstate to fetch the line the current token was 
> found on..

IToken instances support a  getLine() [and getColumn()] accessor.

[...]

> Ps how do I get hold of Antlr V3? Sounds like a monster!

See announcement post to the list from the last [coupla] weeks. It has a
link to the v3 EA release. It doesn't include a C# codegen yet but that
should be in a future release.

Micheal
ANTLR/C#

From parrt at cs.usfca.edu  Tue Jun  7 17:36:04 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun  7 17:35:33 2005
Subject: [antlr-interest] intro..& questions
In-Reply-To: <000d01c56bc2$3f960170$6602a8c0@hercules>
References: <000d01c56bc2$3f960170$6602a8c0@hercules>
Message-ID: <7D9E4AE8-2BBB-4000-99A5-CA44F4DDB124@cs.usfca.edu>


On Jun 7, 2005, at 5:37 PM, Micheal J wrote:
>> Ps how do I get hold of Antlr V3? Sounds like a monster!
>>
>
> See announcement post to the list from the last [coupla] weeks. It  
> has a
> link to the v3 EA release. It doesn't include a C# codegen yet but  
> that
> should be in a future release.

Jean Bovet and I plan on another release, 3.0ea2 this coming Sunday.   
Fixes a number of things but most importantly removes that  
nonportable FileLock thing.  Jean is fixing ANTLRWorks stuff,  
particularly the syntax highlighting.

I'm in a refactoring mode now before I move on to trees.  Slugging  
through it today...ugh.  Thank god for unit / functional tests to  
ensure I don't break everything!

see http://www.antlr.org/works/index.html and http://www.antlr.org/ 
download for the latest stuff.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From lloyd at nova-mind.com  Tue Jun  7 17:52:31 2005
From: lloyd at nova-mind.com (Lloyd Dupont)
Date: Tue Jun  7 17:52:43 2005
Subject: [antlr-interest] intro..& questions
References: <000d01c56bc2$3f960170$6602a8c0@hercules>
	<7D9E4AE8-2BBB-4000-99A5-CA44F4DDB124@cs.usfca.edu>
Message-ID: <008b01c56bc4$5af365f0$9800a8c0@gideone14f6c02>

> I'm in a refactoring mode now before I move on to trees.  

I think I missed something.
What is these tree thing you keep speaking about? 
Do you mean ANTRLv3 doesn't have tree parser yet? (as opposed to v2.xxx!)

From parrt at cs.usfca.edu  Tue Jun  7 18:00:23 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun  7 17:59:53 2005
Subject: [antlr-interest] intro..& questions
In-Reply-To: <008b01c56bc4$5af365f0$9800a8c0@gideone14f6c02>
References: <000d01c56bc2$3f960170$6602a8c0@hercules>
	<7D9E4AE8-2BBB-4000-99A5-CA44F4DDB124@cs.usfca.edu>
	<008b01c56bc4$5af365f0$9800a8c0@gideone14f6c02>
Message-ID: <32803A6B-93EA-481F-AA33-F4500DDFBA26@cs.usfca.edu>


On Jun 7, 2005, at 5:52 PM, Lloyd Dupont wrote:

>> I'm in a refactoring mode now before I move on to trees.
>>
>
> I think I missed something.
> What is these tree thing you keep speaking about? Do you mean  
> ANTRLv3 doesn't have tree parser yet? (as opposed to v2.xxx!)

Correct.  ANTLR v3 only parses/lexes at the moment...that was my  
milestone for first early access release.

I know what I will do with trees, I just haven't gotten to them yet.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From rprememail at yahoo.com  Tue Jun  7 18:27:16 2005
From: rprememail at yahoo.com (Premkumar Rathanavelu)
Date: Tue Jun  7 18:27:19 2005
Subject: [antlr-interest] Problem in getting the Identifiers
Message-ID: <20050608012716.28121.qmail@web80901.mail.scd.yahoo.com>

Hi to all.,
 
I'm writing a preprocessor grammar and need to get only 
ID's from the below eg:
 
eg: #if (A + B | C+D)  
 
here A,B,C,D are Identifiers.
 
I want to get only the ID's that is A,B,C,D.
 
Please help me to frame a rule(lexer/parser) for this.
 
Thanks.,
Prem
 

		
---------------------------------
Yahoo! Mail Mobile
 Take Yahoo! Mail with you! Check email on your mobile phone.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050607/48ffd361/attachment.html
From hwk at cortex-brainware.de  Tue Jun  7 23:17:49 2005
From: hwk at cortex-brainware.de (Dr. Hartmut Kocher)
Date: Tue Jun  7 23:18:01 2005
Subject: [antlr-interest] Reporting bugs
Message-ID: <1Dftsw-1kgzZY0@fwd29.sul.t-online.de>

Two weeks ago I reported a problem with the CharSanner implementation in the
C# version of ANTLR. Since no one seems to notice it I just wanted to know
if this is the right place to post bugs or if there is another mechanism in
place to report bugs to the development team.

 

Thanks

 

Dr. Hartmut Kocher

Cortex Brainware GmbH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050608/e5fd0d7c/attachment.html
From ric.klaren at gmail.com  Wed Jun  8 00:20:30 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Jun  8 00:20:32 2005
Subject: [antlr-interest] Reporting bugs
In-Reply-To: <1Dftsw-1kgzZY0@fwd29.sul.t-online.de>
References: <1Dftsw-1kgzZY0@fwd29.sul.t-online.de>
Message-ID: <bc607a4e05060800202b27eed7@mail.gmail.com>

On 6/8/05, Dr. Hartmut Kocher <hwk@cortex-brainware.de> wrote:
> Two weeks ago I reported a problem with the CharSanner implementation in the
> C# version of ANTLR. Since no one seems to notice it I just wanted to know
> if this is the right place to post bugs or if there is another mechanism in
> place to report bugs to the development team. 

I noticed the post but expected Michael to jump on it. It looked to me
as a bug specific to C# since the java/C++ runtimes do not use any
caching.

This is about the best place to report bugs other than mailing the
maintainers directly.

Anycase I'll CC Michael to be sure.

Thanks for your report!

Ric
From open.zone at virgin.net  Wed Jun  8 02:33:57 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun  8 02:20:09 2005
Subject: [antlr-interest] C# Bug in CharScanner
In-Reply-To: <1DdEjV-0s9X9s0@fwd24.sul.t-online.de>
Message-ID: <001201c56c0d$325df440$6602a8c0@hercules>

Thanks Dr. Kocker. My apologies for the dealy in repsonding to your report.
 
This is indeed an issue with ANTLR/C# and will be fixed in the next 2.x
release.
 
Cheers,
 
Micheal

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Dr. Hartmut Kocher
Sent: 31 May 2005 22:57
To: antlr-interest@antlr.org
Subject: [antlr-interest] C# Bug in CharScanner



I think I found a bug in the C# CharScanner:

 

The rewind() method does not take into account the case insensitive flag.
Therefore, if the scanner is rewound after a wrong prediction, it throws an
exception if the case of a case insensitive token does not match.

 

I think the correct implementation should be:

 

          public virtual void  rewind(int pos)

          {

                inputState.input.rewind(pos);

                //setColumn(inputState.tokenStartColumn);

                if (caseSensitive)

                {

                     cached_LA2 = inputState.input.LA(2);

                     cached_LA1 = inputState.input.LA(1);

                }

                else

                {

                     cached_LA2 = toLower(inputState.input.LA(2));

                     cached_LA1 = toLower(inputState.input.LA(1));

                }

          }

 

Kind regards

 

Dr. Hartmut Kocher

Cortex Brainware GmbH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050608/4cf612e7/attachment-0001.html
From jean-claude.meilland at experian-scorex.com  Wed Jun  8 07:30:51 2005
From: jean-claude.meilland at experian-scorex.com (Jean-Claude Meilland)
Date: Wed Jun  8 07:29:26 2005
Subject: [antlr-interest] Solaris - Antlr 274 - GCC link error
	while	compiling static (C++ generated code)
Message-ID: <DD2C1373CF5BAE47B4AA0BBF629E8D00DB6D79@EXCHANGE1.experian-scorex.com>


Hey,

Thanks for the answer.

Sorry for bothering I found my error I was missing
/usr/local/lib/gcc/../libgcc_eh.a.

Cheers,

J.Claude.
 

> -----Original Message-----
> From: Ric Klaren [mailto:ric.klaren@gmail.com]
> Sent: Tuesday, June 07, 2005 7:29 PM
> To: Jean-Claude Meilland
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Solaris - Antlr 274 - GCC link error
while
> compiling static (C++ generated code)
> 
> Jean-Claude Meilland wrote:
> > I'm trying to compile the C++ code generated by ANTLR 2.7.4 from my
> > grammar in static mode. I'm working on Solaris using GCC compiler
and
> > linker.
> >
> > I'm getting a weird link error:
> > Undefined			first referenced
> >  symbol  			    in file
> > _Unwind_Resume                      ./app/release/fmblex.o  (symbol
> > belongs to implicit dependency /usr/local/lib/libgcc_s.so.1)
> >
> > So here are my questions:
> > 1) Is there anything to do to with the antrl tool or in a header
file to
> > specify we want to generate c++ code that links in static?
> >
> > 2) Is there a specific option to use with GCC for antrl generated
source
> > code to link in static lib mode?
> 
> Antlr 2.7.4 should function without a glitch on solaris.
_Unwind_Resume
> is a symbol unrelated to antlr's support library and generated code.
> 
> Information on how you build/link your project (and how you built
antlr)
> could be helpfull.
> 
> Cheers,
> 
> Ric
From serafettin_sentuerk at intergral.com  Wed Jun  8 08:34:12 2005
From: serafettin_sentuerk at intergral.com (Serafettin Senturk)
Date: Wed Jun  8 08:34:23 2005
Subject: [antlr-interest] Again semantical problem
Message-ID: <ANEFKENHALPOILMBNJFGOEHNCCAA.serafettin_sentuerk@intergral.com>


 Hello,

 I have again a question about semantical analysis in Antlr. How far is it
possible to solve semantical problems with Antlr?

 For example, If I have a statement like the following:

 a = b + method() - 4 / d;

 Is it possible to find the value of the right side and according to the
data type of the result to put the appropriate type before the variable
named a ? like:

 float a =  b + method() - 4 / d;

 Again the transformation from typeless language to typeful one.

 How far is it possible to solve such a problem in Antlr? or is Antlr only
for syntactical transformations?

 Regards,
 Serafettin





From lilincutzy at yahoo.com  Wed Jun  8 06:22:52 2005
From: lilincutzy at yahoo.com (Ilinca Denisa FRECUS)
Date: Wed Jun  8 10:05:37 2005
Subject: [antlr-interest] throwing exception with antlr
Message-ID: <20050608132252.12370.qmail@web30403.mail.mud.yahoo.com>

Hello,

I have the following problem when trying to make a
lexer that recognizes only characters or digits: when
it encounters something else, it exits of the code but
doesn't say anything. I would like, for example, to
print a message each time that this protocole is not
matched. Here is my code. Do you have any ideas why it
does't do what I want?
Thank you very much.

Ilinca FRECUS

class SimpleLexer extends Lexer;

options {k=1; filter=false; }

ALPHA : ('a'..'z'|'A'..'Z')+
{System.out.println("Found alpha: "+getText()); }
;

NUMERIC : ('0'..'9')+
{System.out.println("Found numeric: "+getText()); }
;


NEWLINE : ("\r\n")
	{newline();
	$setType(Token.SKIP);
	};

EXIT: {System.exit(0); };



import java.io.*;

public class Main{
	public static void main(String []args){
		SimpleLexer simpleLexer=new SimpleLexer(System.in);
		while(true)  {
			try{
			   simpleLexer.nextToken();
			}catch (Exception e){System.out.println("not
existant token");}
		}
	}
}


		
__________________________________ 
Discover Yahoo! 
Use Yahoo! to plan a weekend, have fun online and more. Check it out! 
http://discover.yahoo.com/
From ewbank at gmail.com  Wed Jun  8 11:20:20 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Jun  8 11:20:22 2005
Subject: [antlr-interest] Again semantical problem
In-Reply-To: <ANEFKENHALPOILMBNJFGOEHNCCAA.serafettin_sentuerk@intergral.com>
References: <ANEFKENHALPOILMBNJFGOEHNCCAA.serafettin_sentuerk@intergral.com>
Message-ID: <dd3a065f05060811207006aeda@mail.gmail.com>

I think it's more *you* that must do this *using* ANTLR.  ANTLR allows
you to walk the tree using a concise notation, but you have to decide
what needs to be done.

For example...

The following walker assigns MyLocalType to PLUS numeric operators.

   #( PLUS INT INT ) { ##->MyLocalType(IntegerType); }
   | #( PLUS FLOAT INT ) { ##->MyLocalType(FloatType); }
   | #( PLUS INT FLOAT ) { ##->MyLocalType(FloatType); }
   | #( PLUS FLOAT FLOAT ) { ##->MyLocalType(FloatType); }

Then, at ASSIGN:

   #(ASSIGN lhs rhs) { ##->MyLocalType(#rhs->MyLocalType(); }

Now, printing an ASSIGN requires that you emit the syntax to make it
into a declaration by looking at MyLocalType of the ASSIGN node.

This is of course oversimplified, and there are other ways to do this,
but it should help to distinguish what ANTLR does (allow you a way to
generate an AST, and to walk that AST) from what it does not (define
the shape of the AST, any semantic information, etc).

On 6/8/05, Serafettin Senturk <serafettin_sentuerk@intergral.com> wrote:
> I have again a question about semantical analysis in Antlr. How far is it
> possible to solve semantical problems with Antlr?
> ...
> How far is it possible to solve such a problem in Antlr? or is Antlr only
> for syntactical transformations?
From ewbank at gmail.com  Wed Jun  8 11:24:07 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Jun  8 11:24:10 2005
Subject: [antlr-interest] Changing from buildAST=false to buildAST=true
Message-ID: <dd3a065f050608112420b82e8f@mail.gmail.com>

Okay, so I'm changing one of my passes from exploration/annotation to
tree surgery, and therefore need to change it from buildAST=false to
buildAST=true.

The problem I'm encoutering is that this seems to mean I need to
change all references to subrule names from simply "subrule" to
"#subrule" in my actions.

E.g., given this:
     a: #(A b c d)   { b->setValue(foo); }
It appears I need to change this to:
     a: #(A b c d)   { #b->setValue(foo); }

Is this true, or do I misunderstand?

Thanks,
- B
From parrt at cs.usfca.edu  Wed Jun  8 11:32:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  8 11:31:50 2005
Subject: [antlr-interest] Changing from buildAST=false to buildAST=true
In-Reply-To: <dd3a065f050608112420b82e8f@mail.gmail.com>
References: <dd3a065f050608112420b82e8f@mail.gmail.com>
Message-ID: <2F067F4A-A98D-4FD0-84D2-747FBDC53735@cs.usfca.edu>


On Jun 8, 2005, at 11:24 AM, Bryan Ewbank wrote:

> Okay, so I'm changing one of my passes from exploration/annotation to
> tree surgery, and therefore need to change it from buildAST=false to
> buildAST=true.
>
> The problem I'm encoutering is that this seems to mean I need to
> change all references to subrule names from simply "subrule" to
> "#subrule" in my actions.
>
> E.g., given this:
>      a: #(A b c d)   { b->setValue(foo); }
> It appears I need to change this to:
>      a: #(A b c d)   { #b->setValue(foo); }
>
> Is this true, or do I misunderstand?

Hi Bryan,

It probably is...

Unfortunately, I allowed label to work just like #label.  Technically  
it should be #label, but by virtue of the implementation plain label  
also worked...i'm going to disallow that in this new version.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From Loring.G.Craymer at jpl.nasa.gov  Wed Jun  8 14:42:13 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Wed Jun  8 14:42:16 2005
Subject: [antlr-interest] Changing from buildAST=false to
  buildAST=true
In-Reply-To: <2F067F4A-A98D-4FD0-84D2-747FBDC53735@cs.usfca.edu>
References: <dd3a065f050608112420b82e8f@mail.gmail.com>
	<2F067F4A-A98D-4FD0-84D2-747FBDC53735@cs.usfca.edu>
Message-ID: <6.2.1.2.2.20050608140333.02ab7070@mail.jpl.nasa.gov>

As I recall, the translation is

#tok in the parser is translated to "tok", and #tok_in to tok_in
In tree parsers, #tok_in becomes tok and #tok becomes tokAST (or tok, if 
there is no output AST)

There is also an inconsistency (I can't recall when this occurs) that 
requires you to use tok in some circumstance where #tok should be correct, 
but does not work.

--Loring


At 11:32 AM 6/8/2005, Terence Parr wrote:

>On Jun 8, 2005, at 11:24 AM, Bryan Ewbank wrote:
>
>>Okay, so I'm changing one of my passes from exploration/annotation to
>>tree surgery, and therefore need to change it from buildAST=false to
>>buildAST=true.
>>
>>The problem I'm encoutering is that this seems to mean I need to
>>change all references to subrule names from simply "subrule" to
>>"#subrule" in my actions.
>>
>>E.g., given this:
>>      a: #(A b c d)   { b->setValue(foo); }
>>It appears I need to change this to:
>>      a: #(A b c d)   { #b->setValue(foo); }
>>
>>Is this true, or do I misunderstand?
>
>Hi Bryan,
>
>It probably is...
>
>Unfortunately, I allowed label to work just like #label.  Technically
>it should be #label, but by virtue of the implementation plain label
>also worked...i'm going to disallow that in this new version.
>
>Ter
>--
>CS Professor & Grad Director, University of San Francisco
>Creator, ANTLR Parser Generator, http://www.antlr.org
>Cofounder, http://www.jguru.com


From parrt at cs.usfca.edu  Wed Jun  8 16:11:30 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun  8 16:10:59 2005
Subject: [antlr-interest] blog entry to new tree stuff
Message-ID: <04F3D287-3FAB-4F92-93DF-B15BCB181C5B@cs.usfca.edu>

Howdy folks,

I'm starting to think about how to build trees, do rewrites, parse  
trees, etc...

http://www.antlr.org/blog/antlr3/trees.tml

More work tomorrow on it.

As always, remember that this stuff will be changing a lot for a  
while...for example, I might not use this TreeAdaptor thing.

I thank everyone for their suggestions and ideas from which I have  
derived a lot of this stuff (with some twists of my own, naturally).

Thanks,
Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From matthew.ford at forward.com.au  Wed Jun  8 17:00:12 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Wed Jun  8 17:00:16 2005
Subject: [antlr-interest] blog entry to new tree stuff
References: <04F3D287-3FAB-4F92-93DF-B15BCB181C5B@cs.usfca.edu>
Message-ID: <000a01c56c86$353fac70$0200a8c0@notebook>

Hi Ter,
What about creating trees/nodes programmatically after a tree branch is
matched?
In a rewrite project I am creating derivatives for equations and need to add
extra trees, nodes ect.
In V2 I had to copy/clone almost everything to prevent tree loops.
I have sent you notes on this in the past.  What are you current ideas?
matthew

p.s.

I think you ment
e : ^(PLUS a=INT b=INT) -> {$a.getValue()==0}? $b
                        -> ^(PLUS $a $b)
  ;----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>
To: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Thursday, June 09, 2005 9:11 AM
Subject: [antlr-interest] blog entry to new tree stuff


> Howdy folks,
>
> I'm starting to think about how to build trees, do rewrites, parse
> trees, etc...
>
> http://www.antlr.org/blog/antlr3/trees.tml
>
> More work tomorrow on it.
>
> As always, remember that this stuff will be changing a lot for a
> while...for example, I might not use this TreeAdaptor thing.
>
> I thank everyone for their suggestions and ideas from which I have
> derived a lot of this stuff (with some twists of my own, naturally).
>
> Thanks,
> Ter
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
>

From rob.hill at blueyonder.co.uk  Wed Jun  8 17:01:38 2005
From: rob.hill at blueyonder.co.uk (Robert Hill)
Date: Wed Jun  8 17:01:34 2005
Subject: [antlr-interest] intro..& questions
In-Reply-To: <33F64386-7360-4F4E-B7CD-076D7472E45C@cs.usfca.edu>
Message-ID: <ECOWS06MoutizykHnia000f11cc@smtp-out6.blueyonder.co.uk>

Lol, of course you can hehehe!
...But only if you answer another daft question...

I've split my grammar out into 3 separate files, lexer,parser and
treewalker. I export the vocab from the lexer, and import into the parser
and the treewalker.
Now, I need to create some imaginary tokens to insert into the tree as place
holders for certain constructs to make the walking easier,but must I define
them in the lexers tokens{} block, since they'll never be used by the lexer?
It just seems more sensible that they should be in the parser (but how would
the token values be in sync if I could define them in both grammars......
er.....)
I've tried adding them to a tokens{} block parser just to see what happens,
but when walking the tree I get mismatched tokens because they end up with
different values in the parser and the tree walker.

(BTW...I just love being able to single step into the generated code & see
what its doing. The value of human readable code shouldn't be
underestimated)*

Cheers,

Rob


(*) another testimony for you Ter. :)


-----Original Message-----
From: Terence Parr [mailto:parrt@cs.usfca.edu] 
Sent: 08 June 2005 01:37
To: Robert Hill
Subject: Re: [antlr-interest] intro..& questions


On Jun 7, 2005, at 2:27 PM, Robert Hill wrote:
> I have to say, a stunningly useful bit of software Terrence, Nice one.

Wow!  Can I add that to the testimonials?

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com



__________ NOD32 1.1100 (20050518) Information __________

This message was checked by NOD32 antivirus system.
http://www.eset.com


From Loring.G.Craymer at jpl.nasa.gov  Wed Jun  8 18:40:13 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Wed Jun  8 18:40:18 2005
Subject: [antlr-interest] blog entry to new tree stuff
In-Reply-To: <04F3D287-3FAB-4F92-93DF-B15BCB181C5B@cs.usfca.edu>
References: <04F3D287-3FAB-4F92-93DF-B15BCB181C5B@cs.usfca.edu>
Message-ID: <6.2.1.2.2.20050608173137.02b6be40@mail.jpl.nasa.gov>

At 04:11 PM 6/8/2005, Terence Parr wrote:
>Howdy folks,
>
>I'm starting to think about how to build trees, do rewrites, parse
>trees, etc...

I'm about 70-90% through an implementation that incorporates the lessons 
learned from the 2.8 implementation and integrates a very clean attribute 
syntax (simplified from my attributes proposal 
--http://www.antlr.org/article/1116319813550/AttributeUnification.pdf -- so 
that attributes and tree constructors are truly first class syntactic 
elements).  The tree construction engine should be very fast (it is 
surprisingly simple) and the tree rewrite capability will be awesome, with 
both full translocation support and node relabeling supported by the 
attribute syntax.  [I should be able to release it without the hassles I 
had for 2.8--none of the work was done on JPL time nor with JPL equipment.]

I still have to put in some more thought on semantic predicates and 
integrating the StringTemplate output stuff with the attribute syntax, but 
what I have so far goes a long ways towards removing any target-language 
dependence from grammars.


>http://www.antlr.org/blog/antlr3/trees.tml

Curiously, the adaptor looks like an integrated ASTPair/ASTFactory in terms 
of construction capability, and a visitor for tree walking.  As currently 
proposed, this will be slower than ANTLR 2 both for construction and for 
tree walking, and add no new capabilities.  However, things will certainly 
change when you add in support for the rewrite syntax--either the analysis 
engine behind the code generator will be beefed up or a different 
construction approach adopted.

The one advantage of a tree implementation using vectors of children is for 
lookahead tests (you can, say, just look at the fifth element of a vector 
to see if this is the "right" alternative to walk down rather than 
navigating the first four to get to the fifth).  However, k=1 is a good 
goal to meet when designing a tree structure, so I do not see the 
shortcircuited lookahead as being a particular advantage.  Considering that 
access to a vector element is slower (due to the index computation) than 
navigating a sibling pointer, I see this as a retrograde design 
choice.  Vectors are also likely to be a nuisance for languages other than 
Java--in C, for example, one would prefer to allocate a fixed-length 
array--but I expect that you will move to an implementation that allows you 
to calculate array length before populating the array.


>More work tomorrow on it.
>
>As always, remember that this stuff will be changing a lot for a
>while...for example, I might not use this TreeAdaptor thing.

In conjunction with the vectors of children, it only adds about 100% 
overhead for tree navigation (three fetches instead of two to access 
"nextSibling" for the vector element access plus the extra fetch through 
the adaptor; could be less if Java is able to keep the index value in a 
register).  As I pointed out to Scott, the benefits of an adaptor are 
illusory:  wrapping the root node of a tree before the walk gives 
equivalent or better capability (single adaptor has to know about all tree 
node navigation structures) at minimal cost--perhaps as many as 100 wrapper 
nodes active versus the single adaptor--and that overhead is only incurred 
in the exceptional case where you wrap a tree before walking it.

--Loring


>I thank everyone for their suggestions and ideas from which I have
>derived a lot of this stuff (with some twists of my own, naturally).
>
>Thanks,
>Ter
>--
>CS Professor & Grad Director, University of San Francisco
>Creator, ANTLR Parser Generator, http://www.antlr.org
>Cofounder, http://www.jguru.com


From ric.klaren at gmail.com  Thu Jun  9 00:34:56 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Jun  9 00:34:59 2005
Subject: [antlr-interest] intro..& questions
In-Reply-To: <ECOWS06MoutizykHnia000f11cc@smtp-out6.blueyonder.co.uk>
References: <33F64386-7360-4F4E-B7CD-076D7472E45C@cs.usfca.edu>
	<ECOWS06MoutizykHnia000f11cc@smtp-out6.blueyonder.co.uk>
Message-ID: <bc607a4e050609003431de0011@mail.gmail.com>

On 6/9/05, Robert Hill <rob.hill@blueyonder.co.uk> wrote:
> I've split my grammar out into 3 separate files, lexer,parser and
> treewalker. I export the vocab from the lexer, and import into the parser
> and the treewalker.
> Now, I need to create some imaginary tokens to insert into the tree as place
> holders for certain constructs to make the walking easier,but must I define
> them in the lexers tokens{} block, since they'll never be used by the lexer?

No you can just define them in the tokens section of the parser and
change the import chain to lexer -> parser -> treeparser. Also be
aware of the build order this implies when building your project.

> I've tried adding them to a tokens{} block parser just to see what happens,
> but when walking the tree I get mismatched tokens because they end up with
> different values in the parser and the tree walker.

Probably because you a) did not build in the right order or b) created
a wrong import/exportVocab chain.

so in short:

lexer : exportVocab L
parser: importVocab L, exportVocab P
treeparser: importVocab P

Then always build in the order lexer, parser, treeparser.

> (BTW...I just love being able to single step into the generated code & see
> what its doing. The value of human readable code shouldn't be
> underestimated)*

Couldn't agree more =)

Cheers,

Ric
From rhill03 at eds.com  Thu Jun  9 00:58:52 2005
From: rhill03 at eds.com (Hill, Robert)
Date: Thu Jun  9 01:02:08 2005
Subject: [antlr-interest] intro..& questions
Message-ID: <2E909902FD3A03419E3A905908AE3DD4D1ED77@UKNSM201.emea.corp.eds.com>

Ahh, I see now, I never thought about exporting a *different* vocab from
the parser to the tree walker! D'Oh!
My build order is already set out as you describe, it just seemed
logical that way.
Anyway that was exactly the answer I was looking for , Thanks Ric!

Cheers,
/2ob


Rob Hill
EDS UKNMSC			+44 (0) 114 291 1928
Innovation Centre		+44 (0) 114 291 2000
217 Portobello		+44 (0) 791 732 1227
Sheffield			rhill03@eds.com
S1 4DP



-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Ric Klaren
Sent: 09 June 2005 08:35
To: Robert Hill
Cc: antlr-interest@antlr.org
Subject: Re: [antlr-interest] intro..& questions

On 6/9/05, Robert Hill <rob.hill@blueyonder.co.uk> wrote:
> I've split my grammar out into 3 separate files, lexer,parser and 
> treewalker. I export the vocab from the lexer, and import into the 
> parser and the treewalker.
> Now, I need to create some imaginary tokens to insert into the tree as

> place holders for certain constructs to make the walking easier,but 
> must I define them in the lexers tokens{} block, since they'll never
be used by the lexer?

No you can just define them in the tokens section of the parser and
change the import chain to lexer -> parser -> treeparser. Also be aware
of the build order this implies when building your project.

> I've tried adding them to a tokens{} block parser just to see what 
> happens, but when walking the tree I get mismatched tokens because 
> they end up with different values in the parser and the tree walker.

Probably because you a) did not build in the right order or b) created a
wrong import/exportVocab chain.

so in short:

lexer : exportVocab L
parser: importVocab L, exportVocab P
treeparser: importVocab P

Then always build in the order lexer, parser, treeparser.

> (BTW...I just love being able to single step into the generated code &

> see what its doing. The value of human readable code shouldn't be
> underestimated)*

Couldn't agree more =)

Cheers,

Ric
From rhill03 at eds.com  Thu Jun  9 01:12:44 2005
From: rhill03 at eds.com (Hill, Robert)
Date: Thu Jun  9 01:16:07 2005
Subject: [antlr-interest] Another question......
Message-ID: <2E909902FD3A03419E3A905908AE3DD4D1ED80@UKNSM201.emea.corp.eds.com>

Hi all,,
	<gasp> another question... :)

Im using the stringtemplate as the final code formatting phase of my tool trying to follow the separation of model/view etc, and was wondering if there was anyway of formating the strings in the template, kind of like you would  with sprintf?.. What I'd like to do would be something along the lines of

$name; separator = "\n"; format = "%.10s"$

At the moment I have a switch {} that checks which destination style im outputting in, and then formats the string before the 

xxx.setAttribute("name",myformattedstring);

If there isn't already a way of doing this (I don't see it in the string template docs) then is there any reason why this wouldn't be a good idea since it makes the view deal with any formatting, taking more output specifics away from the model?

If so I might have a bash at modding (read: messing up) stringtemplate :)

Cheers,
/2ob

Ps..If this isn't the list for stringtemplate discussion, could someone point me in the right direction? 



Rob Hill
EDS UKNMSC				+44 (0) 114 291 1928
Innovation Centre			+44 (0) 114 291 2000
217 Portobello			+44 (0) 791 732 1227
Sheffield				rhill03@eds.com
S1 4DP





Rob Hill
F UKNMSC
Innovation Centre
217 Portobello
Sheffield	
S1 4DP
*	+44 (0) 114 291 1928
6	+44 (0) 114 291 2000
* +44 (0) 791 732 1227
*	rhill03@eds.com


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050609/01bbe9bd/attachment-0001.html
From geiroves at online.no  Thu Jun  9 01:28:53 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Thu Jun  9 01:28:55 2005
Subject: [antlr-interest] You nailed the ANTLR docs problem there (Was:
	Why no links to ANTLR 3.0 on www.antlr.org??)
In-Reply-To: <4.3.2.7.2.20050604003937.06f66ea0@morpho.newtechlaw.com>
Message-ID: <000101c56ccd$4871f310$0100a8c0@rexii>



-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Gerald B.
Rosenberg
Sent: 4. juni 2005 10:48
To: Terence Parr; ANTLR Interest
Subject: Re: [antlr-interest] Why no links to ANTLR 3.0 on
www.antlr.org??


At 12:14 PM 6/3/2005, Terence Parr wrote:

>>I am over the beginner level know (I think and hope), but getting 
>>there was very time-consuming: And, isn't a tool like this about 
>>saving time?
>
>Why was it time consuming to get through the beginning level?  I'll 
>need this info when I write the book.  Is it because language tools are

>just different from normal programming or does the tool suck? Does the 
>intro doc suck?

I will try to take a constructive stab at this.  Given that the problem 
space and tool are respectively very complex and capable of very complex

operation, the documentation is just too eager.  It presents something 
basic and then jets off mixing a bunch of fairly complex potential uses 
together which makes following and understanding any one very difficult.

For example, under http://www.antlr.org/doc/trees.html#_bb4, there is
brief 
introduction to marking lexer tokens as roots.  Ok.  Then some stuff
about 
building trees.  Nothing there about parser tokens as roots.  I think
that 
is what I need for my problem -- I need to understand better how ANTLR 
wants to mark and construct parser trees.  So, is marking a new parser 
token as a root even possible?  Well, keep looking down.  Token 
translation.  Ok.  Token factories.  Ok, I guess.  Heterogeneous ASTs.
Ok, 
real advanced.  Fairly certain that is not applicable to my initial
needs.

Finally! An first example ("An Expression Tree Example").  Maybe that
will 
walk me through enough to understand how ANTLR wants  me to solve my
problem.

Problem statement: a simple value accumulator implemented using a simple

tree.  Ok, not really close to my case I think, but sounds like it has a

similar level of complexity so I should be able to learn bunches from
it.

OH, NO: Third paragraph, the "formal statement of the explanation of the

solution to follow":

"The AST operator nodes must combine the results of computing the value
of 
their two subtrees.  They must perform a depth-first walk of the tree
below 
them.  For fun and to make the operations more obvious, the operator
nodes 
define left() and right() instead, making them appear even more
different 
than the normal child-sibling tree representation.  Consequently, these 
expression trees can be treated as both homogeneous child-sibling trees
and 
heterogeneous expression trees."


??? Fun and obvious???  Make them appear more different???  A straight 
first example?  No.  More accurately an advanced transvestite example.

There are so many issues working in this example, I challenge anyone not

already an expert to readily tell what design features pertain to what
-- 
what is there for fun and what select parts are essential for the 
particular purposes relevant to a relative new-comer's basic issues of 
understanding.  The question is, would someone not capable of authoring 
this example in the first place, now understand matters well enough to
go 
back and author the simple, straight-forward version?

Now, don't get me wrong: I am not advocating plodding 
documentation.  Enthusiasm is a great tool for maintaining interest in
the 
narrative, particularly on paper.  There just needs to be something of a

middle ground (at least for us middle of the road programmers).

HTHs,
Gerald


----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net




From stefan at amiq.ro  Thu Jun  9 02:01:50 2005
From: stefan at amiq.ro (stefan)
Date: Thu Jun  9 02:00:13 2005
Subject: [antlr-interest] Another question......
In-Reply-To: <2E909902FD3A03419E3A905908AE3DD4D1ED80@UKNSM201.emea.corp.eds.com>
References: <2E909902FD3A03419E3A905908AE3DD4D1ED80@UKNSM201.emea.corp.eds.com>
Message-ID: <200506091201.51228.stefan@amiq.ro>

On Thursday 09 June 2005 11:12, Hill, Robert wrote:
> Hi all,,
> 	<gasp> another question... :)
>
> Im using the stringtemplate as the final code formatting phase of my tool
> trying to follow the separation of model/view etc, and was wondering if
> there was anyway of formating the strings in the template, kind of like you
> would  with sprintf?.. What I'd like to do would be something along the
> lines of
>
> $name; separator = "\n"; format = "%.10s"$

At this moment you must format before stick values into the above template.
Something similar with this is on the requests list; please see 
"StringTemplate Bugs, Requests, Changes" section on 
www.stringtemplate.org/bugs.html.

> At the moment I have a switch {} that checks which destination style im
> outputting in, and then formats the string before the
>
> xxx.setAttribute("name",myformattedstring);
>
> If there isn't already a way of doing this (I don't see it in the string
> template docs) then is there any reason why this wouldn't be a good idea
> since it makes the view deal with any formatting, taking more output
> specifics away from the model?
>
> If so I might have a bash at modding (read: messing up) stringtemplate :)
>
> Cheers,
> /2ob
>
> Ps..If this isn't the list for stringtemplate discussion, could someone
> point me in the right direction?

yes, you can subscribe to stringtemplate-interest@antlr.org.

>
>
> Rob Hill
> EDS UKNMSC				+44 (0) 114 291 1928
> Innovation Centre			+44 (0) 114 291 2000
> 217 Portobello			+44 (0) 791 732 1227
> Sheffield				rhill03@eds.com
> S1 4DP
>
>
>
>
>
> Rob Hill
> F UKNMSC
> Innovation Centre
> 217 Portobello
> Sheffield
> S1 4DP
> *	+44 (0) 114 291 1928
> 6	+44 (0) 114 291 2000
> * +44 (0) 791 732 1227
> *	rhill03@eds.com
From sebastian.mies at gmx.net  Thu Jun  9 02:03:09 2005
From: sebastian.mies at gmx.net (Sebastian Mies)
Date: Thu Jun  9 02:03:23 2005
Subject: [antlr-interest] ANTLR 3.0 Templates
In-Reply-To: <000101c56ccd$4871f310$0100a8c0@rexii>
References: <4.3.2.7.2.20050604003937.06f66ea0@morpho.newtechlaw.com>
	<000101c56ccd$4871f310$0100a8c0@rexii>
Message-ID: <695440276.20050609110309@gmx.net>

Hi!

Does anybody know if ANTLR 3.0 supports templates?
Maybe I did not read Ter's blog right.

I would like to have something like that:

expr<Op,Next> : <Next> (<Op> <Next>)* { /* doing lots of changes here
*/ };

plusMinus: expr<PLUS|MINUS,mulDiv>;
mulDiv: expr<MUL|DIV,literal>;
literal: INT | id;

Sebastian.








From ric.klaren at gmail.com  Thu Jun  9 04:53:10 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Jun  9 04:53:12 2005
Subject: [antlr-interest] Re: Exiting on parser errors
In-Reply-To: <4c3df4d305060704064896dca@mail.gmail.com>
References: <4c3df4d305052604523811312b@mail.gmail.com>
	<4c3df4d305060704064896dca@mail.gmail.com>
Message-ID: <bc607a4e050609045311272438@mail.gmail.com>

On 6/7/05, Greg Bedwell <gregbedwell@gmail.com> wrote:
> >>In simple terms, I just want to call exit(1) as soon as the first
> >>syntax error is detected by ANTLR and the error message is displayed.
> >>
> >>
> >Try putting "defaultErrorHandler=false;" in the >options block of your
> >grammar file. This will prevent ANTLR from catching the
> >ReconitionExceptions and other Exceptions itself and just allow the
> >exception to propagate back up to the method that is actually calling
> >the parsers.
> 
> I hate sounding thick here.  This is what I read in the documentation
> and it does exit on errors which is what I wanted but I just get an
> "Aborted" message rather than the lovely "error on line 14:5
> (expecting '{')" messages that I was getting before.

Aborted usually means that an exception was not caught.

> I'm calling my antlr generated files from here:
> 
> try
> {
>     CodegenLexer lexer(ss1);
>     CodegenParser parser(lexer);
> 
>     parser.program();
> }
> catch(exception& e)
> {
>     std::cerr << "exception: " << e.what() << std::endl;
>     exit(1);
> }

Add this one:

catch(ANTLRException& e)
{
    std::cerr << "exception: " << e.getMessage() << std::endl;
    exit(1);
}

ANTLR's exceptions do not derive from std::exception so stuff gets
thrown but is not caught. (this behaviour changed somewhere in the
past years. It might be that you ran into a doc mistake) (I don't have
sources/docs handy so I may have messed up some names here and there)

Cheers,

Ric
From geiroves at online.no  Thu Jun  9 05:12:14 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Thu Jun  9 05:12:16 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
Message-ID: <000001c56cec$7c710330$0100a8c0@rexii>

Hello Terrnce,

The way you respond to mr. Blomberg tells me that at your level of
knowlegde of Parsing and Parser technology you do not any longer
comprehend the problems beginners are struggling with: You ask questions
the novice / beginner does NOT know how to answer because (he / she /
we) are trying to grasp the concept.

Please do take this as constructive feedback as better documentation is
indeed needed to get the beginners going.

I have completed my first small Programming Language in ANTLR that
exeuctes by Tree Walking, and I still do not fully understand what you
ask Mr. Blomberg... Maybe again it's me...

E.g. You asked: 

<<What do you mean by parser  tokens?  Do you mean imaginary tokens
inserted by the parser for  which no actual input lexeme exists?>> Well,
why doesn't the docs explain more of this stuff? I still do not
understand this fully, I have simply followed some examples and followed
that pattern without fully understanding what is going on: Hard to admit
maybe, but it's the truth: I have a schedule to try to keep, and I need
to show some progress in the project: Facts of life.



Any programming tool has its own set of programming Idioms, this is also
the case with ANTLR: When I first started off with ANTLR, there where
two problems that kept me occupied:

1) How to parse my language
2) How to execute it

So what docs where available to help with this: All over the net there
are examples on how to execute Expressins ( 2+ 3 etc) using Tree
walking. But how to execute an IF statement, or a LOOP ?

The more advanced examples like TINY Basic is for a beginner mind
boggling. Why not make a minimalistic example that shows BOTH how to
parse and execute:

a) Expressions 
b) statements
c) loops
d) conditionals
e) execute simple function calls

One of the "Patterns" I have found is to create what I call "Holders":
They are ANTLR Tree Walker subtrees created duing Parsing that do not
immediately execute when the tree is walked, but can be called to do so
conditionally by calling another Tree Walker Rule that executes the
Holders. This is at least how I managed conditionals and loops.

Then the docs need explain how to make the language case sensitive or
not (I still haven't got ANTLR to accept my camel-case grammar with
keywords like "myKeyword").  Also the concept of 

For the Lexer we need to understand how to parse more complex numbers
like 1e10 etc. How to define a charVocabulary is also important and not
trivial to the beginner.

Then it is the issue of reporting Errors and thus to get hold of Source
Code positions. I may have forgotten some details here, but I think I
had to implement my own ASTFactory to get hold of the source position
(getColumn() getLine()) for my Tokens (here we go again: What Tokens?).

I also discovered that the concept of Line and Column is NOT very
usefull. I will try to explain why: At least Java Editors want the
OFFSET in the text to highlight a position (like we want to do to
highlight a parsing error).  Now, in my case I wanted to hide parts of
the source to the user: Call it Headers and Footers of my language, so I
parsed out the part I wanted to show to the user, and wanted to report
error positions releative to this: It then turns out that the concept of
Line and Column breaks down, and that indeed OFFSET is the only sensible
positioning system. So I changed my lexer to only uppdate column and
never increment line: Thus getColumn() is now the offset!

There are more problems I have been struggling with, but this is what I
remember right now.

Finally, there is the issue of licensing: Can you PLEASE put up a link
to the licensing policies that exists for version 3.0? 
I know it will be under the BSD license:  Where do I find it? 

And, as reading foreign language license polices is not the simplest
thing in the world, can someone in plain english explain whether the BSD
license still gives me the right to use ANTLR 3.x and onwards for
commercial usel, or am I know stuck with 2.x


Regards 

Geir Ove
Norway

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
Sent: 5. juni 2005 02:12
To: ANTLR Interest
Subject: Re: [antlr-interest] Why no links to ANTLR 3.0 on
www.antlr.org??


On Jun 4, 2005, at 1:47 AM, Gerald B. Rosenberg wrote:
> I will try to take a constructive stab at this.  Given that the 
> problem space and tool are respectively very complex and capable of
> very complex operation, the documentation is just too eager.

I assume you meant "meager" ;)

>   It presents something basic and then jets off mixing a bunch of 
> fairly complex potential uses together which makes following and
> understanding any one very difficult.

Damn!

> For example, under http://www.antlr.org/doc/trees.html#_bb4, there is 
> brief introduction to marking lexer tokens as roots.  Ok.  Then
> some stuff about building trees.  Nothing there about parser tokens  
> as roots.

Apparently the doc is worst than that!  What do you mean by parser  
tokens?  Do you mean imaginary tokens inserted by the parser for  
which no actual input lexeme exists?

>   I think that is what I need for my problem -- I need to understand 
> better how ANTLR wants to mark and construct parser
> trees.  So, is marking a new parser token as a root even possible?   
> Well, keep looking down.  Token translation.  Ok.  Token  
> factories.  Ok, I guess.  Heterogeneous ASTs.  Ok, real advanced.   
> Fairly certain that is not applicable to my initial needs.

Interesting...define parser token for me and I'll try to help.

> Finally! An first example ("An Expression Tree Example").  Maybe that 
> will walk me through enough to understand how ANTLR wants  me
> to solve my problem.
>
> Problem statement: a simple value accumulator implemented using a 
> simple tree.  Ok, not really close to my case I think, but sounds
> like it has a similar level of complexity so I should be able to  
> learn bunches from it.
>
> OH, NO: Third paragraph, the "formal statement of the explanation of 
> the solution to follow":
>
> "The AST operator nodes must combine the results of computing the 
> value of their two subtrees.  They must perform a depth-first walk
> of the tree below them.  For fun and to make the operations more  
> obvious, the operator nodes define left() and right() instead,  
> making them appear even more different than the normal child- 
> sibling tree representation.  Consequently, these expression trees  
> can be treated as both homogeneous child-sibling trees and  
> heterogeneous expression trees."
>
>
> ??? Fun and obvious???  Make them appear more different???  A
> straight first example?  No.  More accurately an advanced  
> transvestite example.

Did any of the examples or tutorials help?  The doc is not  
particularly friendly.

> There are so many issues working in this example, I challenge
> anyone not already an expert to readily tell what design features  
> pertain to what -- what is there for fun and what select parts are  
> essential for the particular purposes relevant to a relative new- 
> comer's basic issues of understanding.  The question is, would  
> someone not capable of authoring this example in the first place,  
> now understand matters well enough to go back and author the  
> simple, straight-forward version?

Sounds like we have a navigation issue not doc issue (though I plan  
on fixing the doc).  Did you see my course notes and all that jazz?

> Now, don't get me wrong: I am not advocating plodding
> documentation.  Enthusiasm is a great tool for maintaining interest  
> in the narrative, particularly on paper.  There just needs to be  
> something of a middle ground (at least for us middle of the road  
> programmers).

Can you lay out precisely what you've read / looked at what you  
haven't?  That will tell me a lot!  As I say, it may be simply that  
the information is not available in the proper order or even defined  
in what order you should look.

Ter



From antlr at klaashofstra.com  Thu Jun  9 05:57:43 2005
From: antlr at klaashofstra.com (Klaas Hofstra)
Date: Thu Jun  9 05:57:27 2005
Subject: [antlr-interest] some questions about the "antlr-way" of doing
	things
Message-ID: <200506091457.43680.antlr@klaashofstra.com>

Hi,

I'm working on a custom language to C and VHDL translator. I'm a parsing 
newbie and have some questions about the "antrl-way" of solving things.

The parser generates an AST which can then be used to check the validity of 
the input. One of the things that need to be checked is whether there are 
'undefined symbols'. My custom language does not have global symbols so I can 
do this check on the subtree rooted in a function node.  Currently I've 
implemented this check in Python with a heterogeneous AST. This way I can ask 
each function AST if the check is passed. However, after reading about 
Terence's dislike of heterogeneous trees I started wondering if there are 
better ways of doing this.

What is the "antlr-way" (or maybe "Terence-way") of doing this check on the 
AST? Is it using a Walker or is it coding the check in Python with 
homogeneous trees? 

I have a rough idea about how to write a walker for this. The information 
about which variables are defined is localized in a variable definition node 
(which is a child of the function node) but the check needs to be performed 
at the function node level. In order to bring this information together I can 
imagine using stacks and pushing variables on the stack in a variable 
definition node and checking this stack at the function node. Is this the way 
to do it?

When using walkers, I imagine that you should write a walker for each pass 
(undefined symbol check, type check, etc.). Is it possible to define multiple 
walkers? A drawback of this approach would be the duplication of walker 
grammar.

Another question is about the functions getLine() and getColumn(). When I find 
an unknown symbol I would like to print the line and column numbers of the 
corresponding identifier. I tried to do this but both functions always return 
0. What is the reason for this?

Tanks in advance,

Klaas
From Sebastian.Kaliszewski at softax.com.pl  Thu Jun  9 02:08:22 2005
From: Sebastian.Kaliszewski at softax.com.pl (Sebastian Kaliszewski)
Date: Thu Jun  9 08:28:34 2005
Subject: [antlr-interest] blog entry to new tree stuff
In-Reply-To: <6.2.1.2.2.20050608173137.02b6be40@mail.jpl.nasa.gov>
References: <04F3D287-3FAB-4F92-93DF-B15BCB181C5B@cs.usfca.edu>
	<6.2.1.2.2.20050608173137.02b6be40@mail.jpl.nasa.gov>
Message-ID: <42A80706.5040104@softax.com.pl>

Loring Craymer wrote:
> As I pointed out to Scott, the benefits of an adaptor are 
> illusory:  wrapping the root node of a tree before the walk gives 
> equivalent or better capability (single adaptor has to know about all 
> tree node navigation structures) at minimal cost--perhaps as many as 100 
> wrapper nodes active versus the single adaptor--and that overhead is 
> only incurred in the exceptional case where you wrap a tree before 
> walking it.

As it was pointed already, an GCed language number of active nodes is not 
important, number of *created* nodes is!

OTOH, that adaptor call overhead is illusory in fact as any good optimising 
compiler will inline adaptor method calls! (You can make adaprot final and 
then unless your java compiler is a crap it will surely inline adaptor's 
methods).

rgds
-- 
Sebastian Kaliszewski
From roger_callisto at hotmail.com  Thu Jun  9 09:49:04 2005
From: roger_callisto at hotmail.com (Peter Yu)
Date: Thu Jun  9 09:49:08 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <20050609152836.3F55FDCDCB@www.antlr.org>
Message-ID: <BAY101-F36D6FD62D386E75CE55612FEFC0@phx.gbl>

"Geir Ove Skjaervik" <geiroves@online.no> wrote:

>The way you respond to mr. Blomberg tells me that at your level of
>knowlegde of Parsing and Parser technology you do not any longer
>comprehend the problems beginners are struggling with: You ask questions
>the novice / beginner does NOT know how to answer because (he / she /
>we) are trying to grasp the concept.

That may not be entirely fair; In the United States, at least, those who
majored in Computer Science in the universities have , at the very least,
been introduced to the various terminologies already.

Though, from the way the feedback about beginners' difficulty in
comprehending how some of the things ought to be done, it seems
like ANTLR is now popular enough that those who aren't from a pure
CS background are using the tools as well, so it might be helpful to
at least have a list of references to common practices and such
in the documentation.

Granted, a list of common patterns that people uses during parsing and
interpreting/compiling would be helpful, but entire textbooks are devoted
to such endeavors -- thus, it might not be practical to actually include it 
in
the base set of ANTLR documentation.

My experiences with the documentation was -- short as it was, after I took
about 2-3 hours reading the entire thing, I understood how to do what I
wanted to accomplish with it.  After that, it was mainly fighting with the
"quirks" in the ANTLR syntax and/or code generators that required the
most time, learning-curve wise.

I do have a CS background, though, and have already learned the basics
of parsing and lexing from the classes I took.  So, perhaps I would be an
"intermediate" in the eyes of the "beginners." =)


From parrt at cs.usfca.edu  Thu Jun  9 10:21:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  9 10:20:48 2005
Subject: [antlr-interest] blog entry to new tree stuff
In-Reply-To: <000a01c56c86$353fac70$0200a8c0@notebook>
References: <04F3D287-3FAB-4F92-93DF-B15BCB181C5B@cs.usfca.edu>
	<000a01c56c86$353fac70$0200a8c0@notebook>
Message-ID: <3DE51908-7280-49D9-AA26-EFC9D0507D95@cs.usfca.edu>


On Jun 8, 2005, at 5:00 PM, Matthew Ford wrote:

> Hi Ter,
> What about creating trees/nodes programmatically after a tree  
> branch is
> matched?

The operators are probably best done on the fly rather than queueing  
up the instructions, but I'm not positive of that.  For example, to  
debug tree construction i may have to compute the set of tree  
building primitives anyway to send to the gui.  Can you give me an  
example that you need to do again?

> In a rewrite project I am creating derivatives for equations and  
> need to add
> extra trees, nodes ect.
> In V2 I had to copy/clone almost everything to prevent tree loops.
> I have sent you notes on this in the past.  What are you current  
> ideas?

Well, for building stuff after the fact, the -> rewrite stuff will  
probably work, right?

> matthew
>
> p.s.
>
> I think you ment
> e : ^(PLUS a=INT b=INT) -> {$a.getValue()==0}? $b
>                         -> ^(PLUS $a $b)

Right!

Thanks,
Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Thu Jun  9 10:25:09 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  9 10:24:37 2005
Subject: [antlr-interest] Another question......
In-Reply-To: <200506091201.51228.stefan@amiq.ro>
References: <2E909902FD3A03419E3A905908AE3DD4D1ED80@UKNSM201.emea.corp.eds.com>
	<200506091201.51228.stefan@amiq.ro>
Message-ID: <5C3453DF-ADA9-47AB-BC69-3F5794D60E6C@cs.usfca.edu>


On Jun 9, 2005, at 2:01 AM, stefan wrote:

> On Thursday 09 June 2005 11:12, Hill, Robert wrote:
>
>> Hi all,,
>>     <gasp> another question... :)
>>
>> Im using the stringtemplate as the final code formatting phase of  
>> my tool
>> trying to follow the separation of model/view etc, and was  
>> wondering if
>> there was anyway of formating the strings in the template, kind of  
>> like you
>> would  with sprintf?.. What I'd like to do would be something  
>> along the
>> lines of
>>
>> $name; separator = "\n"; format = "%.10s"$
>>
>
> At this moment you must format before stick values into the above  
> template.
> Something similar with this is on the requests list; please see
> "StringTemplate Bugs, Requests, Changes" section on
> www.stringtemplate.org/bugs.html.

Yup, i plan on adding this very soon.  I have a 2.2b2 version; that  
feature will make into 2.2b3 locally...i should have something in  
early July.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From johnm-antlr at non.net  Thu Jun  9 10:26:35 2005
From: johnm-antlr at non.net (John D. Mitchell)
Date: Thu Jun  9 10:26:18 2005
Subject: [antlr-interest] Q re use of Semantic Predicates
In-Reply-To: <4.3.2.7.2.20050606094835.06fbd310@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050605234222.071f4df0@morpho.newtechlaw.com>
	<4.3.2.7.2.20050606094835.06fbd310@morpho.newtechlaw.com>
Message-ID: <17064.31691.929875.455658@despot.non.net>

>>>>> "Gerald" == Gerald B Rosenberg <gbr@newtechlaw.com> writes:
[...]

>> Is there some reason why you can just have two different rules?  I.e.,
>> WORD and TAGWORD, or somesuch?

> The problem is that the lexer gets confused as to whether a string of
> characters is a WORD or a TAGWORD; there are character streams that
> validly fit both definitions.  WORD is not, however, a true superset of
> TAGWORD.  The result is that the parser gets both WORD and TAGWORD
> tokens.  Accepting both in the parser as alternatives is not correct.

Ah, I missed the fact that it's not a super-/sub-set relationship.

Okay, so, it looks like you need a bit more complexity that I'd originaly
thought.

In the lexer, use the approach exemplified by the dealing of "." in e.g.,
the Java lexer.  I.e., figure out the three different forms that a "word"
can take: only word, only xmlword, or could be either.  Set the type
appropriately to one of those three (or more if there are more forms).

Then, in the parser, create two rules.  One that is the conjunction of
e.g., 'only word' | 'could be either' and the other that is 'only xmlword'
| 'could be either'.

Hope this helps,
		John

From parrt at cs.usfca.edu  Thu Jun  9 10:27:54 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  9 10:27:23 2005
Subject: [antlr-interest] ANTLR 3.0 Templates
In-Reply-To: <695440276.20050609110309@gmx.net>
References: <4.3.2.7.2.20050604003937.06f66ea0@morpho.newtechlaw.com>
	<000101c56ccd$4871f310$0100a8c0@rexii>
	<695440276.20050609110309@gmx.net>
Message-ID: <FFC60F26-6938-49C7-A0A5-9A09AC444687@cs.usfca.edu>


On Jun 9, 2005, at 2:03 AM, Sebastian Mies wrote:

> Hi!
>
> Does anybody know if ANTLR 3.0 supports templates?
> Maybe I did not read Ter's blog right.
>
> I would like to have something like that:
>
> expr<Op,Next> : <Next> (<Op> <Next>)* { /* doing lots of changes here
> */ };
>
> plusMinus: expr<PLUS|MINUS,mulDiv>;
> mulDiv: expr<MUL|DIV,literal>;
> literal: INT | id;

Hi. :)  I don't plan on doing templates; a /lib/cpp preprocessor  
could probably do that.

For expressions, I want something a little more direct to solve the  
problem.  What I want is to allow the user to simply specify the  
operators and there associativity / precedence and let me take care  
of it.  How?  I'm not sure, but I'm not ruling out an opaque state  
machine sort of like building an LR machine inside an LL machine...   
For expressions, this may make sense.

As for "templates", the GUI will have a wizard that will allow some  
basic code generation stuff.  One of them could in fact be this  
expression generator since it's so common.

My goal is to keep antlr itself as simple as possible since it's  
already devilishly complicated on the inside to do the analysis etc...

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Thu Jun  9 10:35:59 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  9 10:35:27 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <000001c56cec$7c710330$0100a8c0@rexii>
References: <000001c56cec$7c710330$0100a8c0@rexii>
Message-ID: <FDAC7B24-C415-404C-99DA-3BA4D12EB873@cs.usfca.edu>


On Jun 9, 2005, at 5:12 AM, Geir Ove Skjaervik wrote:

> Hello Terrnce,

Hi !

> The way you respond to mr. Blomberg tells me that at your level of
> knowlegde of Parsing and Parser technology you do not any longer
> comprehend the problems beginners are struggling with: You ask  
> questions
> the novice / beginner does NOT know how to answer because (he / she /
> we) are trying to grasp the concept.

Well, I do have to teach students this stuff on a regular  
basis...seems I succeed sometimes...

> Please do take this as constructive feedback as better  
> documentation is
> indeed needed to get the beginners going.

I appreciate all feedback!  I want my doc to be as helpful as  
possible.  I plan on an O'Reilly style ANTLR book first then a  
"language translation" book next.

> I have completed my first small Programming Language in ANTLR that
> exeuctes by Tree Walking,

Good for you!

> and I still do not fully understand what you
> ask Mr. Blomberg... Maybe again it's me...
>
> E.g. You asked:
>
> <<What do you mean by parser  tokens?  Do you mean imaginary tokens
> inserted by the parser for  which no actual input lexeme exists?>>  
> Well,
> why doesn't the docs explain more of this stuff? I still do not

I was actually just wondering what a "parser token" was as *I* hadn't  
heard the term and didn't know what he was asking. ;)

> Any programming tool has its own set of programming Idioms, this is  
> also
> the case with ANTLR: When I first started off with ANTLR, there where
> two problems that kept me occupied:
>
> 1) How to parse my language
> 2) How to execute it
>
> So what docs where available to help with this: All over the net there
> are examples on how to execute Expressins ( 2+ 3 etc) using Tree
> walking. But how to execute an IF statement, or a LOOP ?

True, the examples are more complicated.  The problem you have though  
is a general "how do I build an interpreter" problem, which has  
nothing to do with ANTLR really.  ANTLR is just the structure  
recognizer.  You need to learn about symbol tables, exec  
environments, and a bunch of other stuff.  Perhaps my grad course  
notes can help you out there.

> The more advanced examples like TINY Basic is for a beginner mind
> boggling. Why not make a minimalistic example that shows BOTH how to
> parse and execute:
>
> a) Expressions
> b) statements
> c) loops
> d) conditionals
> e) execute simple function calls

Sounds great!  When you finish with yours, can you post it or some of  
it?

> One of the "Patterns" I have found is to create what I call "Holders":
> They are ANTLR Tree Walker subtrees created duing Parsing that do not
> immediately execute when the tree is walked, but can be called to  
> do so
> conditionally by calling another Tree Walker Rule that executes the
> Holders. This is at least how I managed conditionals and loops.
>
> Then the docs need explain how to make the language case sensitive or
> not (I still haven't got ANTLR to accept my camel-case grammar with
> keywords like "myKeyword").  Also the concept of
>
> For the Lexer we need to understand how to parse more complex numbers
> like 1e10 etc. How to define a charVocabulary is also important and  
> not
> trivial to the beginner.

Yes, this I hope is much easier in 3.0...

> Then it is the issue of reporting Errors and thus to get hold of  
> Source
> Code positions. I may have forgotten some details here, but I think I
> had to implement my own ASTFactory to get hold of the source position
> (getColumn() getLine()) for my Tokens (here we go again: What  
> Tokens?).

Yes, this was a big mistake in 2.x and the tree parsers essentially  
suck at error reporting.

> I also discovered that the concept of Line and Column is NOT very
> usefull. I will try to explain why: At least Java Editors want the
> OFFSET in the text to highlight a position (like we want to do to
> highlight a parsing error).  Now, in my case I wanted to hide parts of
> the source to the user: Call it Headers and Footers of my language,  
> so I
> parsed out the part I wanted to show to the user, and wanted to report
> error positions releative to this: It then turns out that the  
> concept of
> Line and Column breaks down, and that indeed OFFSET is the only  
> sensible
> positioning system. So I changed my lexer to only uppdate column and
> never increment line: Thus getColumn() is now the offset!

In 3.0, the column is now char position in line and the token doesn't  
have a string--it has indexes into the text buffer start/stop for  
that token :)

> There are more problems I have been struggling with, but this is  
> what I
> remember right now.
>
> Finally, there is the issue of licensing: Can you PLEASE put up a link
> to the licensing policies that exists for version 3.0?

I give my students a demerit when they ask a quesiton that is on the  
first page of google.  In this case, "antlr  license" reveals the  
first entry as your answer:

http://www.antlr.org/license.html

> I know it will be under the BSD license:  Where do I find it?

Try google again and the first entry is what you want.

> And, as reading foreign language license polices is not the simplest
> thing in the world, can someone in plain english explain whether  
> the BSD
> license still gives me the right to use ANTLR 3.x and onwards for
> commercial usel, or am I know stuck with 2.x

BSD says you can do what you want, but don't sue me.  Also, i make no  
guarantee that the code won't destroy all life on this planet. ;)  It  
means you can do anything you want commercially with it. :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From atripp at comcast.net  Thu Jun  9 11:12:04 2005
From: atripp at comcast.net (Andy Tripp)
Date: Thu Jun  9 11:14:17 2005
Subject: [antlr-interest] control of whitespace in generated code
Message-ID: <42A88674.2020509@comcast.net>

>
>
>hi
>
>is there a way to change antlr's generation of whitespace?
>
>- how does it decide what line ending character(s) to use in the 
>generated files?
>
>- can it be told to use spaces for indentation instead of tabs?
>
>of course that's easy to do by post-processing, but it would be nice to 
>have these simple 'personal-taste' options.
>  
>

My JavaEmitter class takes a Java AST and prints it as normal-looking, 
properly-indented code.
It includes a IndentingPrintStream class, where you can call 
setIndentString(String s) to specify
whatever indenting string you want (one tab, four spaces, or whatever).
It's under the File Sharing section of antlr.org

>thanks for a great tool
>

From gudnabrsam at yahoo.com  Thu Jun  9 11:24:37 2005
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu Jun  9 11:24:40 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <FDAC7B24-C415-404C-99DA-3BA4D12EB873@cs.usfca.edu>
Message-ID: <20050609182437.25506.qmail@web30910.mail.mud.yahoo.com>

</lurk>
--- Terence Parr <parrt@cs.usfca.edu> wrote:

> 
> On Jun 9, 2005, at 5:12 AM, Geir Ove Skjaervik
> wrote:
> 
> > Hello Terrnce,
> 
> Hi !
> 
> > The way you respond to mr. Blomberg tells me that
> at your level of
> > knowlegde of Parsing and Parser technology you do
> not any longer
> > comprehend the problems beginners are struggling
> with: You ask  
> > questions
> > the novice / beginner does NOT know how to answer
> because (he / she /
> > we) are trying to grasp the concept.
> 
> Well, I do have to teach students this stuff on a
> regular  
> basis...seems I succeed sometimes...

I knew that was coming... ;)

[SNIP]
> > So what docs where available to help with this:
> All over the net there
> > are examples on how to execute Expressins ( 2+ 3
> etc) using Tree
> > walking. But how to execute an IF statement, or a
> LOOP ?
> 
> True, the examples are more complicated.  The
> problem you have though  
> is a general "how do I build an interpreter"
> problem, which has  
> nothing to do with ANTLR really.  ANTLR is just the
> structure  
> recognizer.  You need to learn about symbol tables,
> exec  
> environments, and a bunch of other stuff.  Perhaps
> my grad course  
> notes can help you out there.

I had intended to point him toward these if noone else
did.  Coming from a "get a minimal degree ASAP to put
food on the table" background, I didn't have the
"luxuries" of interesting classes like how to build
parsers, etc.  I found Ter's course notes extremely
illuminating (if a tad ANTLR-biased :).  To make sure
anyone interested can't miss them, there is a link
under "Documentation" at www.antlr.org .

-Matt

<lurk>


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From geiroves at online.no  Thu Jun  9 11:42:05 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Thu Jun  9 11:42:07 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <FDAC7B24-C415-404C-99DA-3BA4D12EB873@cs.usfca.edu>
Message-ID: <000001c56d22$efaa2cb0$0100a8c0@rexii>

Hello Terence,

(got your name right this time I hope !)

<<the problem you have though is a general "how do I build an
interpreter" problem, which has nothing to do with ANTLR really.  ANTLR
is just the structure recognizer.  You need to learn about symbol
tables, exec   environments, and a bunch of other stuff.  Perhaps my
grad course  notes can help you out there.>>

Well, I do understand symbol tables et. Al: I designed my own language
& wrote the Parser and Stack machine for it 10 years ago in 6 weeks, and
the current ANTLR version is also running fine. However, I had the
impression that ANTLR was indeed built to build interpreters: Why else
all these Tree Walking examples that adds numbers?

Anway, it is quite possible to build Interpreters with ANTLR, and even
though I see places where ANTLR code can be improved, the current
version I have runs 5 times faster (in Java) than the C++ Stack Machine
version that was written 10 years ago on the **same** computer!

The problems is that after a while technical terms will be forgotten:
Literals, Tokens, String literals etc. It would be nice if ANTLR did a
short **practical** recap: I do know the current docs explains Tokens
and Virtual Tokens, and today when I read it, I think I understand it:
However, I did not the first times I read it!

I do really look forward to your book(s) on ANTLR: If I have the time, I
will be happy to comment on the contents.

Hope my feedback has not been too negatively biased: I was not meant to
be; but I admit to some frustration over getting stuck in the docs :-) 

Finally a resounding THANKS to you for bringing this great tool to the
Parsing Community :-) Hope that you don't forget that ANTLR can indeed
be used to interpret code; That is at least my main goal using ANTLR! 

I will also write a debugger for the same Tree Walker Interpreter, any
hints there?

Regards

Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Terence Parr
Sent: 9. juni 2005 19:36
To: ANTLR Interest
Subject: Re: [antlr-interest] Why no links to ANTLR 3.0 on
www.antlr.org??



On Jun 9, 2005, at 5:12 AM, Geir Ove Skjaervik wrote:

> Hello Terrnce,

Hi !

> The way you respond to mr. Blomberg tells me that at your level of 
> knowlegde of Parsing and Parser technology you do not any longer 
> comprehend the problems beginners are struggling with: You ask
> questions
> the novice / beginner does NOT know how to answer because (he / she /
> we) are trying to grasp the concept.

Well, I do have to teach students this stuff on a regular  
basis...seems I succeed sometimes...

> Please do take this as constructive feedback as better
> documentation is
> indeed needed to get the beginners going.

I appreciate all feedback!  I want my doc to be as helpful as  
possible.  I plan on an O'Reilly style ANTLR book first then a  
"language translation" book next.

> I have completed my first small Programming Language in ANTLR that 
> exeuctes by Tree Walking,

Good for you!

> and I still do not fully understand what you
> ask Mr. Blomberg... Maybe again it's me...
>
> E.g. You asked:
>
> <<What do you mean by parser  tokens?  Do you mean imaginary tokens 
> inserted by the parser for  which no actual input lexeme exists?>>
> Well,
> why doesn't the docs explain more of this stuff? I still do not

I was actually just wondering what a "parser token" was as *I* hadn't  
heard the term and didn't know what he was asking. ;)

> Any programming tool has its own set of programming Idioms, this is
> also
> the case with ANTLR: When I first started off with ANTLR, there where
> two problems that kept me occupied:
>
> 1) How to parse my language
> 2) How to execute it
>
> So what docs where available to help with this: All over the net there

> are examples on how to execute Expressins ( 2+ 3 etc) using Tree 
> walking. But how to execute an IF statement, or a LOOP ?

True, the examples are more complicated.  The problem you have though  
is a general "how do I build an interpreter" problem, which has  
nothing to do with ANTLR really.  ANTLR is just the structure  
recognizer.  You need to learn about symbol tables, exec  
environments, and a bunch of other stuff.  Perhaps my grad course  
notes can help you out there.

> The more advanced examples like TINY Basic is for a beginner mind 
> boggling. Why not make a minimalistic example that shows BOTH how to 
> parse and execute:
>
> a) Expressions
> b) statements
> c) loops
> d) conditionals
> e) execute simple function calls

Sounds great!  When you finish with yours, can you post it or some of  
it?

> One of the "Patterns" I have found is to create what I call "Holders":

> They are ANTLR Tree Walker subtrees created duing Parsing that do not 
> immediately execute when the tree is walked, but can be called to
> do so
> conditionally by calling another Tree Walker Rule that executes the
> Holders. This is at least how I managed conditionals and loops.
>
> Then the docs need explain how to make the language case sensitive or 
> not (I still haven't got ANTLR to accept my camel-case grammar with 
> keywords like "myKeyword").  Also the concept of
>
> For the Lexer we need to understand how to parse more complex numbers 
> like 1e10 etc. How to define a charVocabulary is also important and
> not
> trivial to the beginner.

Yes, this I hope is much easier in 3.0...

> Then it is the issue of reporting Errors and thus to get hold of
> Source
> Code positions. I may have forgotten some details here, but I think I
> had to implement my own ASTFactory to get hold of the source position
> (getColumn() getLine()) for my Tokens (here we go again: What  
> Tokens?).

Yes, this was a big mistake in 2.x and the tree parsers essentially  
suck at error reporting.

> I also discovered that the concept of Line and Column is NOT very 
> usefull. I will try to explain why: At least Java Editors want the 
> OFFSET in the text to highlight a position (like we want to do to 
> highlight a parsing error).  Now, in my case I wanted to hide parts of

> the source to the user: Call it Headers and Footers of my language,
> so I
> parsed out the part I wanted to show to the user, and wanted to report
> error positions releative to this: It then turns out that the  
> concept of
> Line and Column breaks down, and that indeed OFFSET is the only  
> sensible
> positioning system. So I changed my lexer to only uppdate column and
> never increment line: Thus getColumn() is now the offset!

In 3.0, the column is now char position in line and the token doesn't  
have a string--it has indexes into the text buffer start/stop for  
that token :)

> There are more problems I have been struggling with, but this is
> what I
> remember right now.
>
> Finally, there is the issue of licensing: Can you PLEASE put up a link

> to the licensing policies that exists for version 3.0?

I give my students a demerit when they ask a quesiton that is on the  
first page of google.  In this case, "antlr  license" reveals the  
first entry as your answer:

http://www.antlr.org/license.html

> I know it will be under the BSD license:  Where do I find it?

Try google again and the first entry is what you want.

> And, as reading foreign language license polices is not the simplest 
> thing in the world, can someone in plain english explain whether
> the BSD
> license still gives me the right to use ANTLR 3.x and onwards for
> commercial usel, or am I know stuck with 2.x

BSD says you can do what you want, but don't sue me.  Also, i make no  
guarantee that the code won't destroy all life on this planet. ;)  It  
means you can do anything you want commercially with it. :)

Ter
--
CS Professor & Grad Director, University of San Francisco Creator, ANTLR
Parser Generator, http://www.antlr.org Cofounder, http://www.jguru.com




From atripp at comcast.net  Thu Jun  9 11:44:36 2005
From: atripp at comcast.net (Andy Tripp)
Date: Thu Jun  9 11:46:43 2005
Subject: [antlr-interest] Recovering white space in V3.0
Message-ID: <42A88E14.3060808@comcast.net>

On this issue of "common" vs. "extreme" and whether to buffer all tokens 
or not...

I think the main thing is that you want ANTLR to provide all the 
functionality that
most people might want, and let people override (or turn off) stuff they 
don't want.
Some people may want tokens buffered  and others won't. Better to 
provide the buffering
code and let people turn it off, rather than not buffering everything 
and having people who need
it have to write code to do it.

In other words, have CommonTokenStream do buffering and then maybe provide a
alternative LeanTokenStream that doesn't. But don't just provide 
LeanTokenStream,
because then people will have to write their own buffering code.

Andy
From kevin at bantamtech.com  Thu Jun  9 11:58:40 2005
From: kevin at bantamtech.com (Kevin Williams)
Date: Thu Jun  9 11:58:47 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <BAY101-F36D6FD62D386E75CE55612FEFC0@phx.gbl>
References: <BAY101-F36D6FD62D386E75CE55612FEFC0@phx.gbl>
Message-ID: <42A89160.5070005@bantamtech.com>

Peter Yu wrote:
> Though, from the way the feedback about beginners' difficulty in
> comprehending how some of the things ought to be done, it seems
> like ANTLR is now popular enough that those who aren't from a pure
> CS background are using the tools as well, so it might be helpful to
> at least have a list of references to common practices and such
> in the documentation.

I would appreciate any beginner-focused documentation, whether it's just 
book titles, online articles, more in-depth documentation, anything. 
I've tried Googling around, but I don't even know quite what to look 
for. I'm struggling with ANTLR, to say the least. ( I'd say I'm 
"self-educated" rather than "un-educated" - it makes me feel better, at 
least! :) )
From parrt at cs.usfca.edu  Thu Jun  9 12:22:42 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun  9 12:22:10 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <42A88E14.3060808@comcast.net>
References: <42A88E14.3060808@comcast.net>
Message-ID: <02F6481B-5B56-408F-9039-2D971AAEAE5A@cs.usfca.edu>


On Jun 9, 2005, at 11:44 AM, Andy Tripp wrote:

> On this issue of "common" vs. "extreme" and whether to buffer all  
> tokens or not...
>
> I think the main thing is that you want ANTLR to provide all the  
> functionality that
> most people might want, and let people override (or turn off) stuff  
> they don't want.
> Some people may want tokens buffered  and others won't. Better to  
> provide the buffering
> code and let people turn it off, rather than not buffering  
> everything and having people who need
> it have to write code to do it.
>
> In other words, have CommonTokenStream do buffering and then maybe  
> provide a
> alternative LeanTokenStream that doesn't. But don't just provide  
> LeanTokenStream,
> because then people will have to write their own buffering code.

Exactly my plan, Andy! :)

As I noted privately this morning to Bryan Ewbank, I parsed 90,000  
line C++ header files with my 90Mhz 64M RAM NeXT box 10 years ago  
with no ill effect (PCCTS buffered it all up to do syntactic  
predicates).  I estimate for Bryan's 100,000 line files, you might  
consume 30M in Java to buffer all text and all tokens.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From rupigill0 at yahoo.com  Thu Jun  9 12:37:25 2005
From: rupigill0 at yahoo.com (Rupinder S. Gill)
Date: Thu Jun  9 12:37:26 2005
Subject: [antlr-interest] Need to generate C# and Java code from same grammar
Message-ID: <20050609193723.CF30EDCDFB@www.antlr.org>

Hi,
>From the exact same grammar, I need to create a parser in C# and another in
Java.  Is this something I can accomplish using the "importVocab" option?
It says there that "Finally, you may find it more convenient to place your
grammars in separate files, especially if you have multiple tree-walkers
that do not add any literals to the token set."

Thanks,
R.G.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050609/8aa8c6a9/attachment.html
From stefan at amiq.ro  Thu Jun  9 13:29:57 2005
From: stefan at amiq.ro (stefan)
Date: Thu Jun  9 13:28:22 2005
Subject: [antlr-interest] Need to generate C# and Java code from same
	grammar
In-Reply-To: <20050609193723.CF30EDCDFB@www.antlr.org>
References: <20050609193723.CF30EDCDFB@www.antlr.org>
Message-ID: <200506092329.58010.stefan@amiq.ro>

On Thursday 09 June 2005 22:37, Rupinder S. Gill wrote:
> Finally, you may find it more convenient to place your grammars in separate
> files, especially if you have multiple tree-walkers that do not add any
> literals to the token set."

     From the above paragraph I understand that you can copy&paste your 
grammar in two files, eg. CSharpGen.g & JavaGen.g, including in their options 
section a line with `importVocab="nameOfTheVocab"`. As long as the grammars 
do not add a new token to the already imported set, that should be enough. 
     

      Stefan.
From nbsherid at secsme.org.au  Thu Jun  9 16:25:43 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Thu Jun  9 16:25:50 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <42A89160.5070005@bantamtech.com>
Message-ID: <000201c56d4a$8e41c690$9829198a@nigelnote>


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Kevin Williams
> Sent: Friday, 10 June 2005 4:59 AM
> Cc: antlr-interest@antlr.org
> Subject: Re: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
> 
> Peter Yu wrote:
> > Though, from the way the feedback about beginners' difficulty in
> > comprehending how some of the things ought to be done, it seems
> > like ANTLR is now popular enough that those who aren't from a pure
> > CS background are using the tools as well, so it might be helpful to
> > at least have a list of references to common practices and such
> > in the documentation.
> 
> I would appreciate any beginner-focused documentation, whether it's just
> book titles, online articles, more in-depth documentation, anything.
> I've tried Googling around, but I don't even know quite what to look
> for. I'm struggling with ANTLR, to say the least. ( I'd say I'm
> "self-educated" rather than "un-educated" - it makes me feel better, at
> least! :) )



Is this the course notes, Ter?

http://www.cs.usfca.edu/~parrt/course/652/

I don't know that it *is* actually directly linked from the site. Only the
following (as a "tutorial" for beginners):

http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html

Perhaps it would be a good idea to add the first link (if it's not already
there, maybe I am blind!) and state that its got good "general compiler
theory" background material.

I haven't looked at the material in depth yet, but it would have been handy
for me when I started out last year.

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435

From voytechs at yahoo.com  Thu Jun  9 19:43:39 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Thu Jun  9 19:43:41 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
Message-ID: <PLENJLPIEOPEDJJNCHDHIEFHFIAA.voytechs@yahoo.com>

I need to disable a lexer rule in the subclass grammar file.
That is B inherits from 1.

Base class (A) contains:

IDENT: blah blah blah...

sub grammar file (B) overrides:

IDENT: /* empty */

What I really need to disable the IDENT rule since the token
type IDENT is assigned manually in a different way.

Any hints how I can do this?

Cheers,
mark...


From nbsherid at secsme.org.au  Thu Jun  9 22:31:14 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Thu Jun  9 22:31:20 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <PLENJLPIEOPEDJJNCHDHCECJFIAA.voytechs@yahoo.com>
Message-ID: <000001c56d7d$9e70f670$9829198a@nigelnote>


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Mark Bednarczyk
> Sent: Tuesday, 7 June 2005 10:16 AM
> To: ANTLR Interest
> Subject: RE: [antlr-interest] Help with pesky Lexer determinism
> 
> Well I have another problem that is a little more involved so
> maybe I can just get a couple of quick pointers. Same issue but
> now with IPv6 address that actually steps of the toes on the
> IDENT rule since IPv6 address is comprised of HEX digits so
> 'a'..'f' overlap with IDENT rule of 'a'..'z'.
> 


Here's a first cut attempt at solving these issues (attached)... obviously
you still need some more checks inserted to guarantee that the tokens are
valid.

Also, it doesn't deal with negative numbers (mantissa or exponent).
Furthermore, I have an inkling that IPv4 numbers can be in different forms
(decimal, hexadecimal, dotted and non-dotted forms, etc).

Not sure how much time I will have to finish this for you...

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435



-------------- next part --------------
A non-text attachment was scrubbed...
Name: IPv6Test.java
Type: text/java
Size: 424 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050610/29c57cd4/IPv6Test.bin
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ipv6test.g
Type: application/octet-stream
Size: 2567 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050610/29c57cd4/ipv6test.obj
From ric.klaren at gmail.com  Fri Jun 10 01:29:20 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri Jun 10 01:29:23 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <PLENJLPIEOPEDJJNCHDHIEFHFIAA.voytechs@yahoo.com>
References: <PLENJLPIEOPEDJJNCHDHIEFHFIAA.voytechs@yahoo.com>
Message-ID: <bc607a4e0506100129765a7a8c@mail.gmail.com>

On 6/10/05, Mark Bednarczyk <voytechs@yahoo.com> wrote:
> I need to disable a lexer rule in the subclass grammar file.
> That is B inherits from 1.
> 
> Base class (A) contains:
> 
> IDENT: blah blah blah...
> 
> sub grammar file (B) overrides:
> 
> IDENT: /* empty */
> 
> What I really need to disable the IDENT rule since the token
> type IDENT is assigned manually in a different way.

If I understand you correctly: In grammar A you have a IDENT rule that
deals with the IDENT. In grammar B you deal with IDENT in another rule
and do a $setType or something with the IDENT tokentype?

I'm no expert on grammar inheritance but you might try make the IDENT
rule protected in the B grammar (don't know if antlr allows that, but
there's no mechanism to leave rules out anycase) if it works then the
IDENT rule should not be folded into the nextToken method of the
lexer, which should be sufficient I think. (try it on a small example
grammar where you can see if the lookahead calculations make sense)

Cheers,

Ric
From ewbank at gmail.com  Fri Jun 10 02:02:46 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Jun 10 02:02:49 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <bc607a4e0506100129765a7a8c@mail.gmail.com>
References: <PLENJLPIEOPEDJJNCHDHIEFHFIAA.voytechs@yahoo.com>
	<bc607a4e0506100129765a7a8c@mail.gmail.com>
Message-ID: <dd3a065f05061002027d82bcea@mail.gmail.com>

Another option is to remove IDENT from the base grammr, then create a
second derived grammar defining IDENT as required.

On 6/10/05, Ric Klaren <ric.klaren@gmail.com> wrote:
> On 6/10/05, Mark Bednarczyk <voytechs@yahoo.com> wrote:
> > I need to disable a lexer rule in the subclass grammar file.
> > That is B inherits from 1.
> >
> > Base class (A) contains:
> >
> > IDENT: blah blah blah...
> >
> > sub grammar file (B) overrides:
> >
> > IDENT: /* empty */
> >
> > What I really need to disable the IDENT rule since the token
> > type IDENT is assigned manually in a different way.
From ric.klaren at gmail.com  Fri Jun 10 02:36:29 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri Jun 10 02:36:32 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <dd3a065f05061002027d82bcea@mail.gmail.com>
References: <PLENJLPIEOPEDJJNCHDHIEFHFIAA.voytechs@yahoo.com>
	<bc607a4e0506100129765a7a8c@mail.gmail.com>
	<dd3a065f05061002027d82bcea@mail.gmail.com>
Message-ID: <bc607a4e05061002362e9dfec8@mail.gmail.com>

On 6/10/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> Another option is to remove IDENT from the base grammr, then create a
> second derived grammar defining IDENT as required.

Good point, that's a better solution than going with a hazy method
like the one I suggested... now where was that coffee machine....

Cheers,

Ric
From voytechs at yahoo.com  Fri Jun 10 04:07:31 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 04:07:29 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <bc607a4e05061002362e9dfec8@mail.gmail.com>
Message-ID: <PLENJLPIEOPEDJJNCHDHIEFLFIAA.voytechs@yahoo.com>

I'd rather not touch the underlying grammar file as its not
mine. I'm using the java.g from the antlr's "grammar" webwape.
This way I would have to manually make modifications to any
updates that are made to it by Ter and other maintainers.

I actually had to merge IDENT from the java.g into the NUM_INT
rule and assign IDENT token type manually since there were a
number of conflicts with my extended data types such as IPv6
which uses hex digites and thus overlaps with IDENT on 'a'..'f'
alpha characters. I don't know of any way to do predicates on
seperate rules so I had to merge them. It works fine.

One thing I'm trying right now is simply make an empty IDENT
rule in my overriding Lexer "protected":

protected IDENT: ;

Got rid of the warning but I'm getting strange errors in other
places now:

td  : "header"^ SEMI!
    ;

parser exception: a.npl:1:1: expecting "header", found 'header'
a.npl:1:1: expecting "header", found 'header'

If found what it was expecting and still threw an error. Doesn't
seem to be Lexer related, I must have messed up on options or
something like "testLiterals=true" or something although I think
that's a Lexer only option.

Cheers,
mark...


>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of
>Ric Klaren
>Sent: Friday, June 10, 2005 5:36 AM
>To: ANTLR Interest
>Subject: Re: [antlr-interest] Disabling overriden rule during
>iheritance.
>
>
>On 6/10/05, Bryan Ewbank <ewbank@gmail.com> wrote:
>> Another option is to remove IDENT from the base
>grammr, then create a
>> second derived grammar defining IDENT as required.
>
>Good point, that's a better solution than going with a
>hazy method
>like the one I suggested... now where was that coffee
>machine....
>
>Cheers,
>
>Ric
>


From voytechs at yahoo.com  Fri Jun 10 04:11:04 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 05:59:58 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <bc607a4e0506100129765a7a8c@mail.gmail.com>
Message-ID: <PLENJLPIEOPEDJJNCHDHMEFLFIAA.voytechs@yahoo.com>

Yes, I tried that and it seems to work. Excellent suggestion.

(I have funny way of answering my own questions when I type up
an email message about a question.)

Cheers,
mark...

>-----Original Message-----
>From: Ric Klaren [mailto:ric.klaren@gmail.com]
>Sent: Friday, June 10, 2005 4:29 AM
>To: Mark Bednarczyk
>Cc: antlr-interest@antlr.org
>Subject: Re: [antlr-interest] Disabling overriden rule during
>iheritance.
>
>
>On 6/10/05, Mark Bednarczyk <voytechs@yahoo.com> wrote:
>> I need to disable a lexer rule in the subclass grammar file.
>> That is B inherits from 1.
>>
>> Base class (A) contains:
>>
>> IDENT: blah blah blah...
>>
>> sub grammar file (B) overrides:
>>
>> IDENT: /* empty */
>>
>> What I really need to disable the IDENT rule since the token
>> type IDENT is assigned manually in a different way.
>
>If I understand you correctly: In grammar A you have a
>IDENT rule that
>deals with the IDENT. In grammar B you deal with IDENT
>in another rule
>and do a $setType or something with the IDENT tokentype?
>
>I'm no expert on grammar inheritance but you might try
>make the IDENT
>rule protected in the B grammar (don't know if antlr
>allows that, but
>there's no mechanism to leave rules out anycase) if it
>works then the
>IDENT rule should not be folded into the nextToken
>method of the
>lexer, which should be sufficient I think. (try it on
>a small example
>grammar where you can see if the lookahead
>calculations make sense)
>
>Cheers,
>
>Ric
>


From voytechs at yahoo.com  Fri Jun 10 07:09:57 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 07:09:53 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <001201c56b4f$10601d50$0500a8c0@nigel>
Message-ID: <PLENJLPIEOPEDJJNCHDHMEFNFIAA.voytechs@yahoo.com>

Nigel thanks for the reply,
	Yes I am aware of the various formatting possibilities for IPv6
and I've worked out how to support all the forms except the IPv4
equivelency.

I merged the IPv4, IPv6 and IDENT rules into NUM_INT rule and
thus using predicates am able to differentiated without
warnings. The symantical part will be left for higher level
object to check and throw invalid IPv4 or IPv6 formats which is
probably a better place to do throw an error message anyway
since you can specifically say what type of address is
incorrectly formatted.

I don't want to go overboard with all the various forms and this
should be good enough:

protected NUM_3DIGIT: ('1'..'9') (('0'..'9') ('0'..'9')?)?
    ;

protected NUM_HEX_4DIGIT: HEX_DIGIT ((HEX_DIGIT) ((HEX_DIGIT)
(HEX_DIGIT)?)?)?
    ;

NUM_IPADDR_IDENT_COLON
options {
    testLiterals = true;
}
    {boolean isDecimal=false; Token t=null; }

    /* IPv4 RULE */
    :   (NUM_3DIGIT '.' NUM_3DIGIT '.')=>
        (
            NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT
            { _ttype = IP_V4; }
        )

    /* IPv6 RULE */
    |
        (NUM_HEX_4DIGIT ':')=>
        (options { greedy = true; } :

            ((NUM_HEX_4DIGIT ':')+ ':')=>
            (NUM_HEX_4DIGIT ':')+ ':'
            (NUM_HEX_4DIGIT (':' NUM_HEX_4DIGIT)*)?

        |   NUM_HEX_4DIGIT (':' NUM_HEX_4DIGIT)+
        )
            { _ttype = IP_V6; }

        |   (':' ':' NUM_HEX_4DIGIT)=>
            (options { greedy = true; } :
            ':' ':'
            NUM_HEX_4DIGIT (':' NUM_HEX_4DIGIT)*
            { _ttype = IP_V6; }
            )

        |   ':' ':'
            { _ttype = IP_V6; }

        |   ':'
            { _ttype = COLON; }
        /* IDENT rule */
        |   ('a'..'z'|'A'..'Z'|'_'|'$')
('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
            { _ttype = IDENT; }

    /* Number beginning with '.' rule */
    |   '.' {_ttype = DOT;}
            (   ('0'..'9')+ (EXPONENT)? (f1:FLOAT_SUFFIX
{t=f1;})?
                {
                if (t != null &&
t.getText().toUpperCase().indexOf('F')>=0) {
                    _ttype = NUM_FLOAT;
                }
                else {
                    _ttype = NUM_DOUBLE; // assume double
                }
                }
            )?

    /* Number beginning with a 0 rule */
    |   (   '0' {isDecimal = true;} // special case for just '0'
            (   ('x'|'X')
                (                                           //
hex
                    // the 'e'|'E' and float suffix stuff look
                    // like hex digits, hence the (...)+ doesn't
                    // know when to stop: ambig.  ANTLR resolves
                    // it correctly by matching immediately.  It
                    // is therefor ok to hush warning.
                    options {
                        warnWhenFollowAmbig=false;
                    }
                :   HEX_DIGIT
                )+

            |   //float or double with leading zero
                (('0'..'9')+ ('.'|EXPONENT|FLOAT_SUFFIX)) =>
('0'..'9')+

            |   ('0'..'7')+                                 //
octal
            )?

        /* A regular number non-zero starting rule */
        |   ('1'..'9') ('0'..'9')*  {isDecimal=true;}       //
non-zero decimal
        )
        (   ('l'|'L') { _ttype = NUM_LONG; }
        // only check to see if it's a float if looks like
decimal so far
        |   {isDecimal}?
            (   '.' ('0'..'9')* (EXPONENT)? (f2:FLOAT_SUFFIX
{t=f2;})?
            |   EXPONENT (f3:FLOAT_SUFFIX {t=f3;})?
            |   f4:FLOAT_SUFFIX {t=f4;}
            )
            {
            if (t != null && t.getText().toUpperCase()
.indexOf('F') >= 0) {
                _ttype = NUM_FLOAT;
            }
            else {
                _ttype = NUM_DOUBLE; // assume double
            }
            }
        )?
    ;

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of Nigel
>Sheridan-Smith
>Sent: Tuesday, June 07, 2005 6:53 AM
>To: 'ANTLR Interest'
>Subject: RE: [antlr-interest] Help with pesky Lexer determinism
>
>
>
>Hey Mark,
>
>Something to be aware of: IPv6 addressing rules are
>very flexible... I came
>across this a few months ago...
>
>>From RFC 2373 (http://www.ietf.org/rfc/rfc2373.txt),
>the following are all
>valid addresses:
>
>         1080:0:0:0:8:800:200C:417A  a unicast address
>         FF01:0:0:0:0:0:0:101        a multicast address
>         0:0:0:0:0:0:0:1             the loopback address
>         0:0:0:0:0:0:0:0             the unspecified addresses
>
>shortened versions:
>        1080::8:800:200C:417A       a unicast address
>         FF01::101                   a multicast address
>         ::1                         the loopback address
>         ::                          the unspecified addresses
>
>And IPv4 equivalence:
>
>	   0:0:0:0:0:0:13.1.68.3
>
>         0:0:0:0:0:FFFF:129.144.52.38
>
>      or in compressed form:
>
>         ::13.1.68.3
>
>         ::FFFF:129.144.52.38
>
>
>and then there are prefixes and things to contend with
>as well, depending on
>your language.
>
>Currently, my language supports IPv4/v6 addressing to
>some degree, but its
>not finished and I've chosen to use '#' delimiters to
>avoid conflicts with
>numerical types. To deal with this issue, I just used
>a generic token
>matcher (that disambiguates IPv4, IPv6, dates and
>'hashed' or binary data,
>which all use the '#' delimiters), and then I'll add
>some more semantic
>checks further down the chain. However, you may not be
>at the same liberty
>in having such delimiters (depending on your
>requirements handed to you),
>and so you will hit non-determinisms pretty quickly!
>
>The best way to deal with this sort of thing is start
>with a protected lexer
>definitions, and combine them into one rule:
>
>   IPADDRHASHDATE: (IPV4) => IPV4
>{$setType(IPV4);}
>                 | (IPV6HASH) => IPV6HASH
>{$setType(IPV6HASH);}
>                 | (DATEVALUE) => DATEVALUE
>{$setType(DATEVALUE);};
>
>   protected DATEVALUE: '#'! ( ( (DIGIT)+ FSLASH ) =>
>(DIGIT)+ FSLASH
>(DIGIT)+
>
>	( FSLASH
>(DIGIT)+ )? WS )?
>
> (DIGIT)+ COLON
>(DIGIT)+
>
>	(COLON
>(DIGIT)+ (DOT (DIGIT)+ )? )?
>						'#'!;
>
>   protected IPV4: '#'! (DIGIT)+ DOT (DIGIT)+ DOT
>(DIGIT)+ DOT (DIGIT)+
>						(FSLASH
>(DIGIT)+ )? '#'!;
>   /* Too messy to do IPv6 addresses any other way */
>   protected IPV6HASH: '#'! (':' | '.' | HEX | "#\\"!
>WS! "#"! )+
>						(FSLASH
>(DIGIT)+ )? '#'!;
>
>
>I'm going to add action code then, which checks the
>tokens to ensure that
>they are 'valid'.
>
>Of course, you might hit performance difficulties if a
>large number of
>tokens pass through your syntatic predicate, but if
>you put the most common
>token type first you will not be so severely affected.
>
>I'll try and get back to you shortly with a more
>thorough answer/solution...
>maybe someone else here has some ideas? Some of the
>grammars on the ANTLR
>site have very long lexer definitions to deal with
>these sorts of issues. Of
>course, that makes them very difficult to understand
>for everyone but the
>author ;)
>
>Nigel
>
>--
>Nigel Sheridan-Smith
>PhD research student
>
>Faculty of Engineering
>University of Technology, Sydney
>Phone: 02 9514 7946
>Fax: 02 9514 2435
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-
>> bounces@antlr.org] On Behalf Of Mark Bednarczyk
>> Sent: Tuesday, 7 June 2005 10:16 AM
>> To: ANTLR Interest
>> Subject: RE: [antlr-interest] Help with pesky Lexer
>determinism
>>
>> Well I have another problem that is a little more involved so
>> maybe I can just get a couple of quick pointers.
>Same issue but
>> now with IPv6 address that actually steps of the toes on the
>> IDENT rule since IPv6 address is comprised of HEX digits so
>> 'a'..'f' overlap with IDENT rule of 'a'..'z'.
>>
>> BTW: here is the format of IPv6 for those not
>familiar, (HEX HEX
>> COLON (COLON HEX HEX)+) in simple case.
>>
>> This is what I'm trying to do, but not really sure
>how to code
>> it.
>>
>> 1) Add the IPv6 block to NUM_INT rule with
>appropriate predicate
>> of (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON) and I
>do not get
>> any warning from NUM_INT rule.
>>
>> 2) Add propriate predicate to IDENT rele for IPv6
>format (same
>> as #1) and provide an empty condition block or tell some how
>> based on the predicate to fail the IDENT rule so it
>will move on
>> and try NUM_INT which should succeed.
>>
>> Somehow I need the IDENT rule to fail on IPv6 address while
>> matching on NUM_INT. Almost looks like I need to
>move both rules
>> into a bigger common rule and manually set the token type.
>>
>> Errors I'm getting now:
>>     [antlr] ANTLR Parser Generator   Version 2.7.5 (20050128)
>> 1989-2005 jGuru.com
>>     [antlr]
>> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>> warning:lexical nondeterminism between rules IDENT
>and NUM_INT
>> upon
>>     [antlr]
>> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>> k==1:'A'..'F','a'..'f'
>>     [antlr]
>> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>>
>k==2:<end-of-token>,'0'..'9','A'..'F','L','X','a'..'f','l','x'
>>     [antlr]
>> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>> k==3:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
>>     [antlr]
>> /home/markbe/prjs/jnetutils-0.1.0/src/antlr/npl/npl.g:
>> k==4:<end-of-token>,'0'..'9','A'..'F','L','a'..'f','l'
>>     [antlr] warning: public lexical rule IDENT is
>optional (can
>> match "nothing")
>>
>>
>> And relative portion of the NUM_INT skipping the bottom since
>> its not the problem and exactly the same as in java.g
>>
>> IDENT
>> options {
>>     testLiterals=true;
>> }
>>     :   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
>>         // EMPTY match
>>     |   ('a'..'z'|'A'..'Z'|'_'|'$')
>> ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
>>     ;
>>
>>
>> // a numeric literal
>> NUM_INT
>>     {boolean isDecimalulse; Token t=null;}
>>     :   (NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
>> NUM_3DIGIT)=>
>>         (
>>             NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
>> NUM_3DIGIT
>>             { _ttype = IP_V4; }
>>         )
>>     |   (NUM_HEX_2DIGIT COLON NUM_HEX_2DIGIT COLON)=>
>>         (
>>             NUM_HEX_2DIGIT (COLON NUM_HEX_2DIGIT)+
>>             { _ttype = IP_V6; }
>>         )
>>  < T R U N K A T E D>
>>
>> protected NUM_HEX_2DIGIT: HEX_DIGIT (HEX_DIGIT)?
>>
>>
>>
>
>
>


From ric.klaren at gmail.com  Fri Jun 10 07:18:34 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Fri Jun 10 07:18:36 2005
Subject: [antlr-interest] throwing exception with antlr
In-Reply-To: <20050608132252.12370.qmail@web30403.mail.mud.yahoo.com>
References: <20050608132252.12370.qmail@web30403.mail.mud.yahoo.com>
Message-ID: <bc607a4e05061007181aa57459@mail.gmail.com>

On 6/8/05, Ilinca Denisa FRECUS <lilincutzy@yahoo.com> wrote:
> I have the following problem when trying to make a
> lexer that recognizes only characters or digits: when
> it encounters something else, it exits of the code but
> doesn't say anything. I would like, for example, to
> print a message each time that this protocole is not
> matched. Here is my code. Do you have any ideas why it
> does't do what I want?
> Thank you very much.
> 
> Ilinca FRECUS
> 
> class SimpleLexer extends Lexer;
> 
> options {k=1; filter=false; }
> 
> ALPHA : ('a'..'z'|'A'..'Z')+
> {System.out.println("Found alpha: "+getText()); }
> ;
> 
> NUMERIC : ('0'..'9')+
> {System.out.println("Found numeric: "+getText()); }
> ;
> 
> 
> NEWLINE : ("\r\n")
>         {newline();
>         $setType(Token.SKIP);
>         };

The above rules look ok....

> EXIT: {System.exit(0); };

But this one looks very fishy. 
a) it recognizes nothing (e.g. it matches 'empty' input which is
always fishy for a parser using recursive descent like antlr).
b) it calls system exit. 

What do you want to accomplish with this rule?

> import java.io.*;
> 
> public class Main{
>         public static void main(String []args){
>                 SimpleLexer simpleLexer=new SimpleLexer(System.in);
>                 while(true)  {
>                         try{
>                            simpleLexer.nextToken();
>                         }catch (Exception e){System.out.println("not
> existant token");}
>                 }
>         }
> }

This looks ok too.

Cheers,

Ric
From voytechs at yahoo.com  Fri Jun 10 07:19:23 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 07:19:18 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <000001c56d7d$9e70f670$9829198a@nigelnote>
Message-ID: <PLENJLPIEOPEDJJNCHDHGEFOFIAA.voytechs@yahoo.com>

Interesting code, thank you.

One thing I would suggest, and this comes from experience is
that I wouldn't let the lexer tokenize the '/' as a NETRANGE
part and return the whole thing as a single token. The reason
for this is that this totally takes out all flexibility out of a
IP knowledgable language. In my NPL language I overload '/'
operator in an expression and if the left part is of type
ipaddress (or in my case IP_V4 or IP_V6 token types) then the
right part must evaluate to a netmask in form of another
IP_V4/IP_v6 or integer.

Checkout examples of this I had working using a manual
lexer/parser I build. If I let the lexer build the IP address
with a range, I wouldn't have this flexibility:

http://netrepository.org/jnetstream/releases/0.3.0/index.htm#typ
ecasting_example

Cheers,
mark...



>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of Nigel
>Sheridan-Smith
>Sent: Friday, June 10, 2005 1:31 AM
>To: 'ANTLR Interest'
>Subject: RE: [antlr-interest] Help with pesky Lexer determinism
>
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-
>> bounces@antlr.org] On Behalf Of Mark Bednarczyk
>> Sent: Tuesday, 7 June 2005 10:16 AM
>> To: ANTLR Interest
>> Subject: RE: [antlr-interest] Help with pesky Lexer
>determinism
>>
>> Well I have another problem that is a little more involved so
>> maybe I can just get a couple of quick pointers.
>Same issue but
>> now with IPv6 address that actually steps of the toes on the
>> IDENT rule since IPv6 address is comprised of HEX digits so
>> 'a'..'f' overlap with IDENT rule of 'a'..'z'.
>>
>
>
>Here's a first cut attempt at solving these issues
>(attached)... obviously
>you still need some more checks inserted to guarantee
>that the tokens are
>valid.
>
>Also, it doesn't deal with negative numbers (mantissa
>or exponent).
>Furthermore, I have an inkling that IPv4 numbers can
>be in different forms
>(decimal, hexadecimal, dotted and non-dotted forms, etc).
>
>Not sure how much time I will have to finish this for you...
>
>Nigel
>
>--
>Nigel Sheridan-Smith
>PhD research student
>
>Faculty of Engineering
>University of Technology, Sydney
>Phone: 02 9514 7946
>Fax: 02 9514 2435
>
>
>
>


From mail at martin-probst.com  Fri Jun 10 07:42:57 2005
From: mail at martin-probst.com (Martin Probst)
Date: Fri Jun 10 07:43:04 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <PLENJLPIEOPEDJJNCHDHIEFLFIAA.voytechs@yahoo.com>
References: <PLENJLPIEOPEDJJNCHDHIEFLFIAA.voytechs@yahoo.com>
Message-ID: <1118414577.9951.10.camel@localhost.localdomain>

Hi,

> parser exception: a.npl:1:1: expecting "header", found 'header'
> a.npl:1:1: expecting "header", found 'header'

The problem is most likely a token with the wrong id. ANTLR expects the
token that corresponds to the literal "header" (probably LITERAL_header
or sth similar) and get's a different token, that has the same text
("header") but a different ID. The error message is not very helpful - I
usually override it and provide the token number together with the text.

So the odds are indeed that you're lacking a "testLiterals=true" in some
identifier rule.

Regards,
Martin

From Anthony.Youngman at eca-international.com  Fri Jun 10 07:46:18 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Fri Jun 10 07:46:23 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF2F@lnml1.eca-international.local>

Well, take me for example. I did NOT study CS at Uni (I didn't even go
to Uni ...), getting started in programming immediately I left school
(with very good 'A'-levels). My then boss had a maths degree. And the US
is unusual - it has a relatively very high proportion of kids going to
Uni of one sort or another ...

And as for my attitude to CS degrees? There's no way I would want one!
No disrespect to the kids at Uni nowadays, but a far higher proportion
of kids nowadays go to Uni than did in my day (I think it's doubled if
not more) and simple logic says either the quality of kids has gone up,
or the quality of students has gone down. I doubt it's the former, and
experience tells me its the latter - a candidate with a computer degree
wouldn't find it easy to get on any shortlist I was drawing up... That
said, I suspect many allegedly CS degrees are more like IT degrees - how
to USE a computer, not how to understand it ...

Don't expect everyone to have a CS degree. I've got mine now - got a
postgrad from a top Uni last year :-)

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peter Yu
Sent: 09 June 2005 17:49
To: antlr-interest@antlr.org
Subject: Re: [antlr-interest] Why no links to ANTLR 3.0 on
www.antlr.org??

"Geir Ove Skjaervik" <geiroves@online.no> wrote:

>The way you respond to mr. Blomberg tells me that at your level of
>knowlegde of Parsing and Parser technology you do not any longer
>comprehend the problems beginners are struggling with: You ask
questions
>the novice / beginner does NOT know how to answer because (he / she /
>we) are trying to grasp the concept.

That may not be entirely fair; In the United States, at least, those who
majored in Computer Science in the universities have , at the very
least,
been introduced to the various terminologies already.

Though, from the way the feedback about beginners' difficulty in
comprehending how some of the things ought to be done, it seems
like ANTLR is now popular enough that those who aren't from a pure
CS background are using the tools as well, so it might be helpful to
at least have a list of references to common practices and such
in the documentation.


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From atripp at comcast.net  Fri Jun 10 08:08:26 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Jun 10 08:10:31 2005
Subject: [antlr-interest] Tree walking Q
Message-ID: <42A9ACEA.1070107@comcast.net>

Sorry for trolling, but...
Why not just walk the tree "by hand"? Just have a method that takes an 
AST parameter,
and checks its type. If it's a type you want to handle, do your thing. 
If not, make recursive calls
for each of the children. That seems like the cleanest and easiest 
solution to me.

Andy


From voytechs at yahoo.com  Fri Jun 10 08:43:37 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 08:43:32 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <42A9ACEA.1070107@comcast.net>
Message-ID: <PLENJLPIEOPEDJJNCHDHKEGAFIAA.voytechs@yahoo.com>

I'm no expert, but the following article from a real expert
addresses your question:

http://www.antlr.org/article/1100569809276/use.tree.grammars.tml

Cheers,
mark...

>-----Original Message-----
>From: antlr-interest-bounces@antlr.org
>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of
>Andy Tripp
>Sent: Friday, June 10, 2005 11:08 AM
>To: antlr-interest@antlr.org
>Subject: [antlr-interest] Tree walking Q
>
>
>Sorry for trolling, but...
>Why not just walk the tree "by hand"? Just have a
>method that takes an
>AST parameter,
>and checks its type. If it's a type you want to
>handle, do your thing.
>If not, make recursive calls
>for each of the children. That seems like the cleanest
>and easiest
>solution to me.
>
>Andy
>
>
>


From atripp at comcast.net  Fri Jun 10 09:14:45 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Jun 10 09:16:50 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <PLENJLPIEOPEDJJNCHDHKEGAFIAA.voytechs@yahoo.com>
References: <PLENJLPIEOPEDJJNCHDHKEGAFIAA.voytechs@yahoo.com>
Message-ID: <42A9BC75.4070700@comcast.net>

Yes, we had a lengthy discussion on this list about whether translators 
should use treewalkers
when Terence wrote that article. I wasn't convinced that treewalkers 
were always better,
and I think this is probably a good example of such a case. If you want 
to walk a tree and only
do actions at a few nodes, I think hand-written Java code is cleaner and 
simpler than
creating an ANTLR treewalker. And even when you have to do an action at 
every node,
I prefer "hand-written" code.

See my JavaEmitter vs. Terence's JavaEmitter in the File Sharing section 
for a good example of
the two approaches to doing the same thing.

Andy


Mark Bednarczyk wrote:

>I'm no expert, but the following article from a real expert
>addresses your question:
>
>http://www.antlr.org/article/1100569809276/use.tree.grammars.tml
>
>Cheers,
>mark...
>
>  
>
>>-----Original Message-----
>>From: antlr-interest-bounces@antlr.org
>>[mailto:antlr-interest-bounces@antlr.org]On Behalf Of
>>Andy Tripp
>>Sent: Friday, June 10, 2005 11:08 AM
>>To: antlr-interest@antlr.org
>>Subject: [antlr-interest] Tree walking Q
>>
>>
>>Sorry for trolling, but...
>>Why not just walk the tree "by hand"? Just have a
>>method that takes an
>>AST parameter,
>>and checks its type. If it's a type you want to
>>handle, do your thing.
>>If not, make recursive calls
>>for each of the children. That seems like the cleanest
>>and easiest
>>solution to me.
>>
>>Andy
>>
>>
>>
>>    
>>
>
>
>
>  
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050610/aff447c2/attachment.html
From voytechs at yahoo.com  Fri Jun 10 09:44:50 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 09:44:46 2005
Subject: [antlr-interest] Help with pesky Lexer determinism
In-Reply-To: <PLENJLPIEOPEDJJNCHDHGEFOFIAA.voytechs@yahoo.com>
Message-ID: <PLENJLPIEOPEDJJNCHDHGEGCFIAA.voytechs@yahoo.com>

While I'm on a roll, I added the Ethernet address matching code
in forms:

XX:XX:XX:XX:XX:XX
dec:dec:dec:dec:dec
XX-XX-XX-XX-XX-XX
dec-dec-dec-dec-dec-dec


And the code if anyone is interested:



/* Disable some rules inherited from java.g */
protected COLON :;
protected IDENT :;

protected NUM_3DIGIT: ('0'..'9') (('0'..'9') ('0'..'9')?)?
    ;

protected NUM_HEX_4DIGIT: HEX_DIGIT ((HEX_DIGIT) ((HEX_DIGIT)
(HEX_DIGIT)?)?)?

NUM_INT
options {
    testLiterals = true;
}
    {boolean isDecimal=false; Token t=null; }

    // IPv4 RULE
    :   (NUM_3DIGIT '.' NUM_3DIGIT '.')=>
        (
            NUM_3DIGIT '.' NUM_3DIGIT '.' NUM_3DIGIT '.'
NUM_3DIGIT
            { $setType(IP_V4); }
        )

        //
        // MAC ADRESS RULE - exactly 6 COLON/DASH separated ints
        //
    |   (NUM_HEX_4DIGIT (':'|'-') NUM_HEX_4DIGIT (':'|'-')
         NUM_HEX_4DIGIT (':'|'-') NUM_HEX_4DIGIT (':'|'-')
         NUM_HEX_4DIGIT (':'|'-') NUM_HEX_4DIGIT ~(':'))=>
        (
            NUM_HEX_4DIGIT (':'|'-') NUM_HEX_4DIGIT (':'|'-')
            NUM_HEX_4DIGIT (':'|'-') NUM_HEX_4DIGIT (':'|'-')
            NUM_HEX_4DIGIT (':'|'-') NUM_HEX_4DIGIT
        ) { $setType(MAC_ADDRESS); }

    // IPv6 RULE
    |   (NUM_HEX_4DIGIT ':')=>
        (

            ((NUM_HEX_4DIGIT ':')+ ':')=>
            (
                (NUM_HEX_4DIGIT ':')+ ':'
                (NUM_HEX_4DIGIT (':' NUM_HEX_4DIGIT)*)?
            )   { $setType(IP_V6); }

            |   NUM_HEX_4DIGIT (':' NUM_HEX_4DIGIT)+
                { $setType(IP_V6); }

        )   { $setType(IP_V6); }

    |   (':' ':' NUM_HEX_4DIGIT)=>
        ':' ':' NUM_HEX_4DIGIT (':' NUM_HEX_4DIGIT)*
        { $setType(IP_V6); }

    |   ':' ':'
        { $setType(IP_V6); }

    |   ':'
        { $setType(COLON); }


    // IDENT rule
    |   ('a'..'z'|'A'..'Z'|'_'|'$')
('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$')*
            { $setType(IDENT); }
    // Number beginning with '.' rule
    |   '.' { $setType(DOT);}
            (   ('0'..'9')+ (EXPONENT)? (f1:FLOAT_SUFFIX
{t=f1;})?
                {
                if (t != null &&
t.getText().toUpperCase().indexOf('F')>=0) {
                    _ttype = NUM_FLOAT;
                }
                else {
                    _ttype = NUM_DOUBLE; // assume double
                }
                }
            )?



    // Number beginning with a 0 rule
    |   (   '0' {isDecimal = true;} // special case for just '0'
            (   ('x'|'X')
                (                                           //
hex
                    // the 'e'|'E' and float suffix stuff look
                    // like hex digits, hence the (...)+ doesn't
                    // know when to stop: ambig.  ANTLR resolves
                    // it correctly by matching immediately.  It
                    // is therefor ok to hush warning.
                    options {
                        warnWhenFollowAmbig=false;
                    }
                :   HEX_DIGIT
                )+

            |   //float or double with leading zero
                (('0'..'9')+ ('.'|EXPONENT|FLOAT_SUFFIX)) =>
('0'..'9')+

            |   ('0'..'7')+                                 //
octal
            )?

        // A regular number non-zero starting rule
        |   ('1'..'9') ('0'..'9')*  {isDecimal=true;}       //
non-zero decimal
        )
        (   ('l'|'L') { _ttype = NUM_LONG; }

        // only check to see if it's a float if looks like
decimal so far
        |   {isDecimal}?
            (   '.' ('0'..'9')* (EXPONENT)? (f2:FLOAT_SUFFIX
{t=f2;})?
            |   EXPONENT (f3:FLOAT_SUFFIX {t=f3;})?
            |   f4:FLOAT_SUFFIX {t=f4;}
            )
            {
            if (t != null && t.getText().toUpperCase()
.indexOf('F') >= 0) {
                _ttype = NUM_FLOAT;
            }
            else {
                _ttype = NUM_DOUBLE; // assume double
            }
            }
        )?
    ;


From gbr at newtechlaw.com  Fri Jun 10 09:47:20 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Fri Jun 10 09:48:57 2005
Subject: [antlr-interest] Simple (should be) lexer Q
Message-ID: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>

Should be simple, but I cannot see the problem.

Input is:

name is John zero.
name is John A. Smith one.
name is John Smith two.
name is John three.
name is John A. Smith, Inc. four.
name is John Smith, Inc. five.
name is John, Inc. six.
the Acme Corp. Universal is seven.
the Acme Corp. is eight.
the Acme Corporation is nine.
the Acme System, Ltd. is ten.

The goal is for all of the obvious person and company names to come out as 
single NAME tokens.  Works for names that have a comma, otherwise each 
capitalized word comes out as a separate NAME token.  Obviously (I think) 
the middle element of the NAME rule is not working, but why?  Or, better, 
how to fix?

(Making the COMMA WS CAPWORD phrase optional and removing the middle 
element produces the same results.)

Thanks,
Gerald


NAME:
       ( CAPWORD (WS CAPWORD)* COMMA WS CAPWORD ) => CAPWORD (WS CAPWORD)* 
COMMA WS CAPWORD
     | ( CAPWORD (WS CAPWORD)+ ) => CAPWORD (WS CAPWORD)+
     |   CAPWORD
;


protected
CAPWORD:
     UPPERLETTER (LETTER)* (PERIOD)?
;

protected
LETTER:
     UPPERLETTER | LOWERLETTER
;

protected
UPPERLETTER:
     'A'..'Z'
;

protected
LOWERLETTER:
     'a'..'z'
;

protected
PERIOD  '.';

----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050610/67c5adb2/attachment.html
From gbr at newtechlaw.com  Fri Jun 10 10:00:17 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Fri Jun 10 10:08:58 2005
Subject: [antlr-interest] Tree walking Q
In-Reply-To: <42A9BC75.4070700@comcast.net>
References: <PLENJLPIEOPEDJJNCHDHKEGAFIAA.voytechs@yahoo.com>
	<PLENJLPIEOPEDJJNCHDHKEGAFIAA.voytechs@yahoo.com>
Message-ID: <4.3.2.7.2.20050610095015.06fb23d0@morpho.newtechlaw.com>

At 12:14 PM 6/10/2005, Andy Tripp wrote:

>  If you want to walk a tree and only
>do actions at a few nodes, I think hand-written Java code is cleaner and 
>simpler than
>creating an ANTLR treewalker.

Of course, this is a question of tradeoffs.  Turns out that ANTLR does 
provide a defaulting mechanism, as previously posted, that is far simpler 
and clearer than anything I could write.

>And even when you have to do an action at every node,
>I prefer "hand-written" code.

We have a philosophical difference, since I prefer using tools as much as 
reasonably possible.  Given that I am doing natural language processing 
with ANTLR, I admit to possibly having a bent idea of what is reasonable.

Best,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From ewbank at gmail.com  Fri Jun 10 11:02:15 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Jun 10 11:02:18 2005
Subject: [antlr-interest] Disabling overriden rule during iheritance.
In-Reply-To: <PLENJLPIEOPEDJJNCHDHMEFLFIAA.voytechs@yahoo.com>
References: <bc607a4e0506100129765a7a8c@mail.gmail.com>
	<PLENJLPIEOPEDJJNCHDHMEFLFIAA.voytechs@yahoo.com>
Message-ID: <dd3a065f0506101102664d6cff@mail.gmail.com>

That's really not that uncommon.  I have a few stuffed animals around
the office, and it's okay to talk your questions over with the monkey
(or squirrel, or pelican) because it quite often works.

It feels awkward/weird the first few times, but once you get a few
solutions it's hard to argue about the results.

On 6/10/05, Mark Bednarczyk <voytechs@yahoo.com> wrote:
> Yes, I tried that and it seems to work. Excellent suggestion.
> 
> (I have funny way of answering my own questions when I type up
> an email message about a question.)
From parrt at cs.usfca.edu  Fri Jun 10 11:14:49 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 10 11:14:16 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <000201c56d4a$8e41c690$9829198a@nigelnote>
References: <000201c56d4a$8e41c690$9829198a@nigelnote>
Message-ID: <45FA404F-5501-4799-8C9A-12697FF9AFD8@cs.usfca.edu>


On Jun 9, 2005, at 4:25 PM, Nigel Sheridan-Smith wrote:
> Is this the course notes, Ter?
>
> http://www.cs.usfca.edu/~parrt/course/652/
>
> I don't know that it *is* actually directly linked from the site.  
> Only the
> following (as a "tutorial" for beginners):
>
> http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html

Well, it's the first thing in the list of tutorials in the getting  
started doc.  Should I move to the front page?  perhaps it's more  
useful than the glossary?

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Fri Jun 10 11:17:30 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 10 11:16:57 2005
Subject: [antlr-interest] Simple (should be) lexer Q
In-Reply-To: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
Message-ID: <FCAC18B2-70DE-4FDF-A877-BD960DA30741@cs.usfca.edu>


On Jun 10, 2005, at 9:47 AM, Gerald B. Rosenberg wrote:

Hi.  What does the -traceLexer option tell you?  I guess you're  
saying that it never chooses the 2nd alternative.  What is your k  
level?  Is WS a single char or can it be multiple?

Ter

> NAME:
>       ( CAPWORD (WS CAPWORD)* COMMA WS CAPWORD ) => CAPWORD (WS  
> CAPWORD)* COMMA WS CAPWORD
>     | ( CAPWORD (WS CAPWORD)+ ) => CAPWORD (WS CAPWORD)+
>     |   CAPWORD
> ;
>
>
> protected
> CAPWORD:
>     UPPERLETTER (LETTER)* (PERIOD)?
> ;
>
> protected
> LETTER:
>     UPPERLETTER | LOWERLETTER
> ;
>
> protected
> UPPERLETTER:
>     'A'..'Z'
> ;
>
> protected
> LOWERLETTER:
>     'a'..'z'
> ;
>
> protected
> PERIOD  '.';
>
> ----
> Gerald B. Rosenberg, Esq.
> NewTechLaw
> 285 Hamilton Avenue, Suite 520
> Palo Alto, CA  94301-2576
>
> 650.325.2100  (office)  /  650.703.1724  (cell)
> 650.325.2107  (fax)
>
> www.newtechlaw.com

--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From gbr at newtechlaw.com  Fri Jun 10 11:51:59 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Fri Jun 10 11:58:40 2005
Subject: [antlr-interest] Simple (should be) lexer Q
In-Reply-To: <FCAC18B2-70DE-4FDF-A877-BD960DA30741@cs.usfca.edu>
References: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
	<4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050610114102.0ab89680@pop3.newtechlaw.com>

At 11:17 AM 6/10/2005, Terence Parr wrote:


>On Jun 10, 2005, at 9:47 AM, Gerald B. Rosenberg wrote:
>
>Hi.  What does the -traceLexer option tell you?

At the office at the moment.  Will try it tonight.  (Can this be set as an 
option in the grammar file?  Also, just discovered that the Eclipse plugins 
are using 2.7.4.  Will that make any meaningful difference?)

>  I guess you're
>saying that it never chooses the 2nd alternative.

That is what appears to be happening.  Removing the first alternative 
results in every NAME token containing a single word.

>What is your k
>level?

10

>Is WS a single char or can it be multiple?

Effectively single.  For testing purposes, the source text is known to have 
only a single space between words.


WS:
     ( ' '
     | '\t'
     | ( "\r\n" | '\r' | '\n' )
       { newline (); }
     )
     { $setType(Token.SKIP); }
;


>Ter
>
>>NAME:
>>       ( CAPWORD (WS CAPWORD)* COMMA WS CAPWORD ) => CAPWORD (WS
>>CAPWORD)* COMMA WS CAPWORD
>>     | ( CAPWORD (WS CAPWORD)+ ) => CAPWORD (WS CAPWORD)+
>>     |   CAPWORD
>>;
>>
>>
>>protected
>>CAPWORD:
>>     UPPERLETTER (LETTER)* (PERIOD)?
>>;
>>
>>protected
>>LETTER:
>>     UPPERLETTER | LOWERLETTER
>>;
>>
>>protected
>>UPPERLETTER:
>>     'A'..'Z'
>>;
>>
>>protected
>>LOWERLETTER:
>>     'a'..'z'
>>;
>>
>>protected
>>PERIOD  '.';
>>
>>----
>>Gerald B. Rosenberg, Esq.
>>NewTechLaw
>>285 Hamilton Avenue, Suite 520
>>Palo Alto, CA  94301-2576
>>
>>650.325.2100  (office)  /  650.703.1724  (cell)
>>650.325.2107  (fax)
>>
>>www.newtechlaw.com
>
>--
>CS Professor & Grad Director, University of San Francisco
>Creator, ANTLR Parser Generator, http://www.antlr.org
>Cofounder, http://www.jguru.com

----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any attachments) is 
being sent by an attorney, is for the sole use of the intended recipient, 
and may contain confidential and privileged information.  Any unauthorized 
review, use, disclosure or distribution is prohibited.  If you are not the 
intended recipient, please contact the sender immediately by reply e-mail 
and delete all copies of this message and any attachments without retaining 
a copy. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050610/36546272/attachment.html
From parrt at cs.usfca.edu  Fri Jun 10 12:08:20 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 10 12:07:46 2005
Subject: [antlr-interest] Simple (should be) lexer Q
In-Reply-To: <4.3.2.7.2.20050610114102.0ab89680@pop3.newtechlaw.com>
References: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
	<4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
	<4.3.2.7.2.20050610114102.0ab89680@pop3.newtechlaw.com>
Message-ID: <A74C95BC-7B67-413A-97F9-500195B54C18@cs.usfca.edu>

>> Hi.  What does the -traceLexer option tell you?
>
> At the office at the moment.  Will try it tonight.  (Can this be  
> set as an option in the grammar file?  Also, just discovered that  
> the Eclipse plugins are using 2.7.4.  Will that make any meaningful  
> difference?)

Probably not make a difference.

-traceLexer is a command line option.

>>  I guess you're
>> saying that it never chooses the 2nd alternative.
>
> That is what appears to be happening.  Removing the first  
> alternative results in every NAME token containing a single word.
>
>> What is your k
>> level?
>
> 10
>
>> Is WS a single char or can it be multiple?
>
> Effectively single.  For testing purposes, the source text is known  
> to have only a single space between words.
>
>
> WS:
>     ( ' '
>     | '\t'
>     | ( "\r\n" | '\r' | '\n' )
>       { newline (); }
>     )
>     { $setType(Token.SKIP); }
> ;

Curiouser and curiouser.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From ewbank at gmail.com  Fri Jun 10 17:57:59 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Fri Jun 10 17:58:01 2005
Subject: [antlr-interest] Simple (should be) lexer Q
In-Reply-To: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
References: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
Message-ID: <dd3a065f05061017572d40adf6@mail.gmail.com>

A shot in the dark: remove the third alternative and replace the "+"
with "*" in the second one.  This results in:

NAME:
     ( CAPWORD (WS CAPWORD)* COMMA WS CAPWORD )
            => CAPWORD (WS CAPWORD)* COMMA WS CAPWORD
     | ( CAPWORD (WS CAPWORD)* )
            => CAPWORD (WS CAPWORD)*
;

Or perhaps, simply :-)

NAME:
    CAPWORD ( WS CAPWORD )* ( COMMA WS CAPWORD )?
;

You might need to make the loops greedy, but this should work.

On 6/10/05, Gerald B. Rosenberg <gbr@newtechlaw.com> wrote:
>  NAME:
>     ( CAPWORD (WS CAPWORD)* COMMA WS CAPWORD )
>            => CAPWORD (WS CAPWORD)* COMMA WS CAPWORD
>     | ( CAPWORD (WS CAPWORD)+ )
>            => CAPWORD (WS CAPWORD)+
>     |   CAPWORD
>  ;
From nbsherid at secsme.org.au  Fri Jun 10 19:10:51 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Fri Jun 10 19:10:48 2005
Subject: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
In-Reply-To: <45FA404F-5501-4799-8C9A-12697FF9AFD8@cs.usfca.edu>
Message-ID: <000e01c56e2a$cadcffd0$0500a8c0@nigel>



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Saturday, 11 June 2005 4:15 AM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Why no links to ANTLR 3.0 on www.antlr.org??
> 
> 
> On Jun 9, 2005, at 4:25 PM, Nigel Sheridan-Smith wrote:
> > Is this the course notes, Ter?
> >
> > http://www.cs.usfca.edu/~parrt/course/652/
> >
> > I don't know that it *is* actually directly linked from the site.
> > Only the
> > following (as a "tutorial" for beginners):
> >
> > http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html
> 
> Well, it's the first thing in the list of tutorials in the getting
> started doc.  Should I move to the front page?  perhaps it's more
> useful than the glossary?
> 

No not exactly... 

My suggestion is to have both links - keep the existing one (as the
"tutorial") and add another that refers to the whole set of course notes.
Add a title to this one to say "General theory of compilers and interpreters
(Ter's course notes)" or something like that and make it distinctly
separate. It can be on the same "getting started" page. 

It just wasn't obvious that the "Intro to ANTLR" was part of a broader set
of course notes, with more examples and information about the principles of
compilers/interpreters.

Personally, I agree (to some degree) with the other remarks made. The
documents and web links that are available tend to have a big chasm leap
from the very simple (walkthrough tutorials) to the very difficult (the
reference manual). Not that it prevents people learning if they sit down and
try it out, but I would like to see something a bit more in the middle.

If I ever finish this PhD (this year hopefully!), then I will sit down and
try to build a few more examples of AST usage, for others to use and learn
from. I still personally opt to build my own heterogenous ASTs using the
parser (not tree parser), but that might change with ANTLR 3.0's dynamic
attributes. 

In particular I would like to see more examples of how to use ANTLR tree
walking to carry out particular things (interpreters and execution,
byte-code/native compilers, JIT compilers, pre- and post- code
optimisations, ?) so that we can build a bit of a knowledge-base about
common ways of dealing with these issues. Igor's little C-to-asm compiler
looks a good place to start, or perhaps someone should finish off Scott
Stanchfield's tutorial (for his "complete compiler"). I'm thinking about
starting a Wiki for this sort of stuff, but it's on the backburner for the
time being. 

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435


From voytechs at yahoo.com  Fri Jun 10 19:14:38 2005
From: voytechs at yahoo.com (Mark Bednarczyk)
Date: Fri Jun 10 19:14:31 2005
Subject: [antlr-interest] Parsing Success with ANTLR!!!!
Message-ID: <PLENJLPIEOPEDJJNCHDHEEGGFIAA.voytechs@yahoo.com>

I can parse any of my NPL files with ANTLR grammar. The amazing thing is,
the portion I added to the parser is only:

 wc -l npl.g
    423 npl.g

423 lines of code - wow! For a language that contains all of Java syntax +
extra network related statements like (header, field) IPv4, IPv6 and MAC
address data types, arrays on fields and headers, property statement, print
statement, link statement, assert, enum and even I forget what else.

Ofcourse this isn't finished yet, I will be tweaking things for a while and
I still have to build the tree walkers, the linker and interpreter. But a
major milestone reached.

As a comparison the manual parser and lexer were (~12,515 lines of code):

     90 AndOpNode.java
    235 ArrayDimensionNode.java
    107 ArrayReferenceNode.java
    102 AssertFailure.java
    147 AssertStatement.java
     81 AssignMinusOpNode.java
    138 AssignOpNode.java
     81 AssignPlusOpNode.java
     43 BooleanNode.java
     72 BreakLoopSignal.java
    112 BreakStatement.java
    229 BufferStatement.java
    108 CommaOpNode.java
     88 ConstReferenceNode.java
    171 Context.java
     61 ContinueLoopSignal.java
     87 ContinueStatement.java
     69 DivideOpNode.java
     96 EnumReferenceNode.java
    119 EnumStatement.java
     69 ExpException.java
     63 ExpInternalException.java
    332 ExpressionParser.java
    124 ExpStringTokenizer.java
    404 ExpTokenizer.java
     91 ExpToken.java
    143 FamilyStatement.java
    423 FieldStatement.java
    190 FilterStatement.java
    177 FlowentryStatement.java
    164 FlowkeyStatement.java
    153 FlowpairStatement.java
    175 ForStatement.java
     84 GreaterEqualsThanOpNode.java
     84 GreaterThanOpNode.java
    208 HeaderStatement.java
     63 IdentifierSyntaxError.java
    125 IfStatement.java
     99 IntNodeImpl.java
     43 IntNode.java
    106 InverseOpNode.java
     84 LessEqualsThanOpNode.java
     84 LessThanOpNode.java
    211 LinkAssertion.java
    166 LinkStatement.java
    211 LocalStatement.java
     93 LogicalAndOpNode.java
    108 LogicalEqualOpNode.java
     93 LogicalNotEqualOpNode.java
    112 LogicalNotOpNode.java
     84 LogicalOrOpNode.java
     87 MinusOpNode.java
     81 ModOpNode.java
     85 MultiplyOpNode.java
     83 MutableArrayReferenceNode.java
     43 MutableIntNode.java
     41 MutableNode.java
    127 MutableReferenceNode.java
     43 MutableStringNode.java
    116 NodeException.java
     69 Node.java
    104 NodeList.java
     61 NoMoreTokensException.java
     48 NoOpNode.java
     60 OperandException.java
    450 OpNode.java
     90 OrOpNode.java
    125 PlusOpNode.java
     81 PowOpNode.java
    166 PrintStatement.java
    154 ProcessStatement.java
     69 PropertyResizeSignal.java
    166 PropertyStatement.java
    195 ReferenceNode.java
     61 SnaplenLimitException.java
    142 StatementContainer.java
    280 StatementNode.java
    583 StatementParser.java
     98 StringNodeImpl.java
     43 StringNode.java
    495 SymTable.java
    129 SyntaxError.java
    471 Token.java
    309 TokenList.java
    274 VariableStatement.java
     43 Visitable.java
    133 Visitor.java
    108 WhileStatement.java
  12515 total

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050610/aff2f6be/attachment.html
From gbr at newtechlaw.com  Sat Jun 11 00:19:02 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sat Jun 11 00:27:41 2005
Subject: [antlr-interest] Simple (should be) lexer Q
In-Reply-To: <4.3.2.7.2.20050610090742.06fb0480@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050610235835.0703ce90@morpho.newtechlaw.com>

At 09:47 AM 6/10/2005, Gerald B. Rosenberg wrote:

>Should be simple, but I cannot see the problem.

Full test case.

The problem is with sub-rule 4.  As is, it will fail if (what should be) a 
NAME not containing a COMMA is the very last text in the input stream.  The 
commented out version of sub-rule 4 fails to match on multiple CAPWORDs -- 
the subrule 4 is never used unless something like the (SPACE)? qualifier is 
added.

Any idea what is going on?  Suggested fixes?

Thanks,
Gerald
-------------- next part --------------
package net.certiv.text.citation;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;

import antlr.Token;

public class TestMain {

	/**
	 * The main method. See the header comment for more details.
	 * 
	 * @param args
	 *            the commandline arguments
	 */
	static public void main(String[] args) throws Exception {
		// the name of the file to read
		String fileName = "D:\\DevFiles\\EclipseWorkSpace31M6\\MainDocXmlProcessProject\\src"
				+ "\\net\\certiv\\text\\citation\\";

		fileName += "caseName.txt";

		File file = new File(fileName);
		BufferedInputStream in = new BufferedInputStream(new FileInputStream(file));

		TestLexer lex = new TestLexer(in);

		System.out.println("Run lexer");
		int i = 0;
		boolean done = false;
		while (!done) {
			Token t = (Token) lex.nextToken();
			if (t.getType() == Token.EOF_TYPE) {
				done = true;
			}
			String type = TestParser._tokenNames[t.getType()];
			System.out.println("Token " + i + " (type: " + type + "): " + t.getText());
			i++;
		}
	}
}
-------------- next part --------------
name is John A. Smith one.
name is John Smith, two.
name is John three.
name is John A. Smith, Inc. four.
name is John Smith, Inc. five.
name is John, Inc. six.
the Acme Corp. Universal Machinery is seven.
the Acme Corp. is eight.
the Acme Corporation is nine.
the Mojo Acme System, Ltd. is ten.
Terrible Widget Company. is eleven.
Wimpy Widget Co.

-------------- next part --------------
// Test Grammar file for Name identification
// ----------------------------------------
header {
    package net.certiv.text.citation;
}

// ==========================================================
// Parser

class TestParser extends Parser;

options
{ 
    exportVocab = Test;
    k = 2; 
    buildAST = true;
}

text:
    (textSegment)+ EOF!
;

// must be in preferential order: most specific to catchall
textSegment:
    ( NAME
    | OPAREN
    | CPAREN
    | SEMI
    | COMMA
    | PERIOD
    | SPACE!
    | (options {greedy = true;} : WORD )+  
    )  
; 

// ==========================================================
// Lexer

class TestLexer extends Lexer;

options 
{
    k = 10;
    exportVocab = Test;
    testLiterals = true;
    charVocabulary = '\3'..'\377' | '\u1000'..'\u2fff';
    caseSensitive=true;
    filter = false;
}


EQUAL:     '=';
SEMI:      ';';
COMMA:     ',';
DASH:      '-';
OPAREN:    '(';
CPAREN:    ')';
LANGLE:    '<';
RANGLE:    '>';
SLASH:     '/';
PERIOD:    '.';
SPACE:     ' ';


NAME:
    ( CAPWORDS COMMA WS CAPWORD ) => CAPWORDS COMMA WS CAPWORD { System.out.print("6 "); }
    | CAPWORDS { System.out.print("7 "); }
;

CAPWORDS:
//  ( CAPWORD (WS CAPWORD)+ ) => CAPWORD (WS CAPWORD)+  { System.out.print("4 "); }
    ( CAPWORD (WS CAPWORD)+ (SPACE)? ) => CAPWORD (WS CAPWORD)+ (SPACE)?!  { System.out.print("4 "); }
    | CAPWORD { System.out.print("5 "); }
;

protected
CAPWORD:
    (  UPPERLETTER LETTERS PERIOD) => UPPERLETTER LETTERS PERIOD { System.out.print("1 "); }
    | (UPPERLETTER PERIOD) => UPPERLETTER PERIOD { System.out.print("2 "); }
    | (UPPERLETTER LETTERS) => UPPERLETTER LETTERS  { System.out.print("3 "); }
;

WORD:
   (ALPHA)+ { System.out.print("0 "); }
;

protected
LWRWORD:
    LOWERLETTER (LETTER)* (PERIOD)?
;

protected
LETTERS:
   (LETTER)+
;

protected 
UNQUOTED_STRING:
    	'"'! (~'"')* '"'! 	|	'\''! (~'\'')* '\''!
	;

protected
ALPHA: 
     DIGIT | LETTER | EXTENDEDCHARS | PUNCT 
;

protected
PUNCTEXT:
   '(' | ')' | ';' | '=' | '-'  | ',' | '<' | '>'  
;

protected
PUNCT:
    '!' | '\"' | '#' | '$' | '%'  | '&' | '\'' | '*' | '+' | ',' | '-' | '.' |
    ':' | '?'  | '@' | '[' | '\\' | ']' | '^'  | '_' | '`' | '{' | '|' | '}' | '~'
;


protected
EXTENDEDCHARS:
    '\200'..'\377' | '\u1000'..'\u2fff' 
;

protected
LETTER:
    UPPERLETTER | LOWERLETTER
    // '\101'..'\132' | '\141'..'\172'
;

protected
UPPERLETTER:
    'A'..'Z'
;

protected
LOWERLETTER:
    'a'..'z'
;

protected
DIGIT:
    '0'..'9'
;

WS: 
    ( SPACE
    | '\t'
    | '\r' 
    | '\n' { newline (); }
    )+ { $setType(Token.SKIP); }
;
-------------- next part --------------
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com
From atripp at comcast.net  Sat Jun 11 07:58:33 2005
From: atripp at comcast.net (Andy Tripp)
Date: Sat Jun 11 07:58:43 2005
Subject: [antlr-interest] Recovering white space in V3.0
Message-ID: <42AAFC19.4080206@comcast.net>

>> In other words, have CommonTokenStream do buffering and then maybe  
>> provide a
>> alternative LeanTokenStream that doesn't. But don't just provide  
>> LeanTokenStream,
>> because then people will have to write their own buffering code.
>
>Exactly my plan, Andy! :)
>
>As I noted privately this morning to Bryan Ewbank, I parsed 90,000  
>line C++ header files with my 90Mhz 64M RAM NeXT box 10 years ago  
>with no ill effect (PCCTS buffered it all up to do syntactic  
>predicates).  I estimate for Bryan's 100,000 line files, you might  
>consume 30M in Java to buffer all text and all tokens.

Terence,
I'm currently testing my Jazillian translator
on gcc's libc. It's about 800,000 lines, and I 
keep all that as token streams in memory. It's
not a pretty sight, and I'm off to buy more memory 
because my 1GB is no longer enough :( I'll be doing lots
of memory profiling - I'm sure it's my fault, not yours :)

...speaking of things being your fault...
I spent the past week doing CPU profiling. One bottleneck
for me was that makeToken() uses reflection (calling newInstance()) -
I now have a setTokenFactory() method so that I provide my own
makeToken() method. 

And now after fixing my own bottlenecks, nextToken() and LA() are
right near the top in my list of CPU hogs :) That's when I know
I must be done, when I can say "I've done about all I can do, and
the rest must be Terence's fault" ;) 

Obviously, I'm just kidding, and I love ANTLR, even if I don't
believe in treewalkers (or even believe in AST-generating
parsers much, now that I think about it - guess I'm a lexer man).

Andy



From antlr-list at arizona-software.ch  Sun Jun 12 17:15:37 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun Jun 12 17:15:44 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
Message-ID: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch>

Hello!

Terence has just released version 3.0ea2 of ANTLR:

http://www.antlr.org/download/antlr-3.0ea2.tar.gz
http://www.antlr.org/download/examples-v3.tar.gz

I have updated also ANTLRWorks to version 1.0ea2 (mainly bug fixes -  
more info in the readme file):

http://www.antlr.org/works/index.html

The ANTLRWorks jar has everything you need including ANTLR 3.0ea2.

Per the license in LICENSE.txt, this software is not guaranteed to  
work and might even destroy all life on this planet.

ANTLR and ANTLRWorks are released under the BSD license, though  
ANTLRWorks has no source with it at the moment.

Feel free to send comments to the antlr-interest list or if you want  
to send patches:

http://www.antlr.org/misc/feedback


Enjoy these new releases!

Jean Bovet
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050612/4d529719/attachment.html
From wincrt at yahoo.com  Mon Jun 13 00:37:03 2005
From: wincrt at yahoo.com (Ramon V. del Rosario)
Date: Mon Jun 13 00:37:07 2005
Subject: [antlr-interest] newbie: how to use parse rule and nested curly
Message-ID: <20050613073703.53106.qmail@web31004.mail.mud.yahoo.com>

Hi, am trying to parse bind config file but is
struggling to understand how antlr parse rule work.
right now i'm just using antlr to tokenise the
file....
using a counter to parse nested { {}; }; sort of
structure but has been reading the ref manual and it 
seen the parse rule should be able to parse such a
thing easily. but can't find much notes on how to
create
the parser except the calculator.

can we create a our own object when a parse rule is
confirm? eg when acl block is found then i can

ACL a = new ACL($getText());
while ($hasNext()
	a.addElement($getText());

thanks for reading

----- sample bind config ------
acl xyz-slaves {
160.9.201.3;
};

options {
directory "/etc";
allow-transfer { xyz-slaves; localhost; };
};

--------- t.g ------------
class P extends Parser;

// how do we use the parse rule ???
document : (acl | WORDSTRING) + EOF;

acl : ACL named_block ;
opt : OPT named_block ;

named_block : WORDSTRING LPAREN (named_block |
WORDSTRING)* RPAREN SEMICOLON ;
	
class L extends Lexer;

options {
caseSensitive=false;
caseSensitiveLiterals=false;
k=7;
}

LPAREN : '{' ;

RPAREN : '}' ;

SEMICOLON : ';' ;

ACL : "acl";

OPT : "options";

WORDSTRING : (WORD | STRING)+ ;
						
protected	
STRING : '"'! (~'"')+ '"'! 	
		| '\''! (~'\'')+ '\''! ;
		
protected
WORD : ( ALPHA | INT | SYM )+ ;

protected
ALPHA : ('a'..'z')+ ;

protected
INT : ('0'..'9')+;

protected
SYM : ('.' | '!' | '=' | '_' | '/')+;

WS	:	(	' '
		|	'\t'
		|	'\r' '\n' { newline(); }
		|	'\n' { newline(); }
		)
		{$setType(Token.SKIP);}	
	;


		
__________________________________ 
Discover Yahoo! 
Find restaurants, movies, travel and more fun for the weekend. Check it out! 
http://discover.yahoo.com/weekend.html 

From matthew.ford at forward.com.au  Mon Jun 13 02:23:27 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Mon Jun 13 02:23:41 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
References: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch>
Message-ID: <000d01c56ff9$92d04630$0200a8c0@notebook>

http://www.antlr.org/download/antlr-3.0ea2.tar.gz
points to  ea1 not ea2

  ----- Original Message ----- 
  From: Jean Bovet 
  To: ANTLR Interest 
  Sent: Monday, June 13, 2005 10:15 AM
  Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!


  Hello!


  Terence has just released version 3.0ea2 of ANTLR:


  http://www.antlr.org/download/antlr-3.0ea2.tar.gz
  http://www.antlr.org/download/examples-v3.tar.gz


  I have updated also ANTLRWorks to version 1.0ea2 (mainly bug fixes - more info in the readme file):


  http://www.antlr.org/works/index.html


  The ANTLRWorks jar has everything you need including ANTLR 3.0ea2.


  Per the license in LICENSE.txt, this software is not guaranteed to work and might even destroy all life on this planet.


  ANTLR and ANTLRWorks are released under the BSD license, though ANTLRWorks has no source with it at the moment.


  Feel free to send comments to the antlr-interest list or if you want to send patches:


  http://www.antlr.org/misc/feedback




  Enjoy these new releases!


  Jean Bovet
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/971719d5/attachment.html
From matthew.ford at forward.com.au  Mon Jun 13 02:32:38 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Mon Jun 13 02:32:44 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
References: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch>
Message-ID: <001e01c56ffa$d7243a70$0200a8c0@notebook>

Just downloaded ANTLRWorks to version 1.0ea2
colour coding and highlight still up the creek.
There is an annoying "I have finish sending the stats  OK"
Why not just close the stats window when you are finished and only annoy me if there are errors
(even then I probably don't want to know about stats errors)

matthew
  ----- Original Message ----- 
  From: Jean Bovet 
  To: ANTLR Interest 
  Sent: Monday, June 13, 2005 10:15 AM
  Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!


  Hello!


  Terence has just released version 3.0ea2 of ANTLR:


  http://www.antlr.org/download/antlr-3.0ea2.tar.gz
  http://www.antlr.org/download/examples-v3.tar.gz


  I have updated also ANTLRWorks to version 1.0ea2 (mainly bug fixes - more info in the readme file):


  http://www.antlr.org/works/index.html


  The ANTLRWorks jar has everything you need including ANTLR 3.0ea2.


  Per the license in LICENSE.txt, this software is not guaranteed to work and might even destroy all life on this planet.


  ANTLR and ANTLRWorks are released under the BSD license, though ANTLRWorks has no source with it at the moment.


  Feel free to send comments to the antlr-interest list or if you want to send patches:


  http://www.antlr.org/misc/feedback




  Enjoy these new releases!


  Jean Bovet
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/6b9dd460/attachment.html
From gt54-antlr at cyconix.com  Mon Jun 13 03:18:59 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Jun 13 03:19:06 2005
Subject: [antlr-interest] Using ANTLR with manually-built ASTs
Message-ID: <42AD5D93.4010101@cyconix.com>

I'd like to implement an ANTLR tree parser for an existing compiler, 
with the recogniser in lex/yacc. Is this is a sensible thing to do? 
However, there doesn't seem to be any documentation on manually 
constructing ASTs to input to ANTLR - any pointers (preferably C++)?

Thanks -

Paul

Supplementary question: is this list moderated? Some of my posts seem to 
take an age to appear.

From geiroves at online.no  Mon Jun 13 03:35:27 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Mon Jun 13 03:35:30 2005
Subject: [antlr-interest] newbie: how to use parse rule and nested curly
In-Reply-To: <20050613073703.53106.qmail@web31004.mail.mud.yahoo.com>
Message-ID: <000701c57003$a0dd2ef0$0100a8c0@rexii>

Hello,

Hard to answer your question in a few words. I am somewhat short of time
right now, but let me try to answer you:

I assume you have your lexer configured: It gives you a stream of Tokens
to process in the Parser.

The parser is built up from rules: Each rule translates into a method in
the underlying language (Java or C#). Rules refers to other rules. Each
rule processes the structure of your grammar until the final rule
processes the very atoms (leaves) for your grammar: 

A rule has the form:

start
	: PROGRAM^ statementList END
	;


I will assume a trivial grammar of expressions to try to give you an
idea of how nested paranthesis "(" and ")" are handled for you: The same
of course applies to nested curlys.

The clue below is that makes this parser accept expressions with nested
paranthesis, is tha that ultimately, the rule factor has a subrule that
accepts LPAREN expression RPAREN. The parser will recursievly call your
factor and expression rules until all nested paranthesis has been
parsed.

NOTE: LPAREN PLUS and so on are defined in your lexer:

LPAREN : '(' ;




Start
	// NOTE: Importan to have a Start Rule that creates a Tree Root
(the ^ after PROGRM creates a Tree Node: )
	// in this case the Root where the complete parse tree will be
built under.

	: PROGRAM^ statementList END
	;

statmentList
	: (expression SEMI!)*
	;

expression
	: simpleExpression ((GT^ | LT^ | EQUALS^) expression)?  
	;	

simpleExpression throws GeosCalculatorParsingException
	:  term ((PLUS^ | MINUS^) simpleExpression)?
	;

term
	: power ((MUL^ | DIV^) term)?
	;


power
	: factor (POW^ power)? 
	;


factor 
	: NUMBER
		{
			// Insert some action to interpret the number
		}
	| LPAREN^ expression RPAREN! 
	;



Hope there aren't to many errors in the above. And hope it helps,
allthough I feel with you: The ANTLR docs are not for beginners ....


Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Ramon V. del
Rosario
Sent: 13. juni 2005 09:37
To: antlr-interest@antlr.org
Subject: [antlr-interest] newbie: how to use parse rule and nested curly


Hi, am trying to parse bind config file but is
struggling to understand how antlr parse rule work.
right now i'm just using antlr to tokenise the
file....
using a counter to parse nested { {}; }; sort of
structure but has been reading the ref manual and it 
seen the parse rule should be able to parse such a
thing easily. but can't find much notes on how to
create
the parser except the calculator.

can we create a our own object when a parse rule is
confirm? eg when acl block is found then i can

ACL a = new ACL($getText());
while ($hasNext()
	a.addElement($getText());

thanks for reading

----- sample bind config ------
acl xyz-slaves {
160.9.201.3;
};

options {
directory "/etc";
allow-transfer { xyz-slaves; localhost; };
};

--------- t.g ------------
class P extends Parser;

// how do we use the parse rule ???
document : (acl | WORDSTRING) + EOF;

acl : ACL named_block ;
opt : OPT named_block ;

named_block : WORDSTRING LPAREN (named_block |
WORDSTRING)* RPAREN SEMICOLON ;
	
class L extends Lexer;

options {
caseSensitive=false;
caseSensitiveLiterals=false;
k=7;
}

LPAREN : '{' ;

RPAREN : '}' ;

SEMICOLON : ';' ;

ACL : "acl";

OPT : "options";

WORDSTRING : (WORD | STRING)+ ;
						
protected	
STRING : '"'! (~'"')+ '"'! 	
		| '\''! (~'\'')+ '\''! ;
		
protected
WORD : ( ALPHA | INT | SYM )+ ;

protected
ALPHA : ('a'..'z')+ ;

protected
INT : ('0'..'9')+;

protected
SYM : ('.' | '!' | '=' | '_' | '/')+;

WS	:	(	' '
		|	'\t'
		|	'\r' '\n' { newline(); }
		|	'\n' { newline(); }
		)
		{$setType(Token.SKIP);}	
	;


		
__________________________________ 
Discover Yahoo! 
Find restaurants, movies, travel and more fun for the weekend. Check it
out! 
http://discover.yahoo.com/weekend.html 




From matthew.ford at forward.com.au  Mon Jun 13 05:27:55 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Mon Jun 13 05:28:03 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
Message-ID: <000c01c57013$53a9be90$0200a8c0@notebook>

Hi Jean,
Please excuse the abruptness of my previous two postings.
AntlrWorks is a great concept and I am looking forward to its first full release.

I have another two suggestions

i) Pressing the 'Submit Stats'  button locks up the GUI.
This action should be passed to a background thread for processing and the panel should close immediately.
My website has code and details on spawning background threads and handling their results for both Java V1.4 and V1.5
http://www.forward.com.au/javaProgramming/index.html#programming_with_java_threads

ii) I recommend you avoid error message (and confirmation) dialog boxes alltogther.  This like article says why and suggests some alternatives 
http://www.forward.com.au/javaProgramming/javaGuiTips/dialogBoxes.html#dialog_boxes  
I am sure you can think of others or more pleasing designs.

As an adjunct to removing confirmation dialog boxes you need to provide a comprehensive undo/redo function (not just for edits) so the user can change their mind.

all the best
matthew

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/f2b00e28/attachment.html
From ewbank at gmail.com  Mon Jun 13 06:04:25 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 13 06:04:27 2005
Subject: [antlr-interest] Using ANTLR with manually-built ASTs
In-Reply-To: <42AD5D93.4010101@cyconix.com>
References: <42AD5D93.4010101@cyconix.com>
Message-ID: <dd3a065f0506130604abf17a0@mail.gmail.com>

I think the key requirements are in the ANTLR manual (pdf, located on
the website).

There's several function required of a class for it to be walkable...
- getType(), to report the type of the current node
- getFirstChild(), to return the first child (i.e., LHS branch)
- getNextSibling(), to return next sibling (i.e., RHS branch)

I'm sure there's (a bit?) more, but this is the start.  I've also
found it useful to define standard begin and end methods so that your
nodes can be used by C++'s STL algorithms.

Hope this helps,
- Bryan Ewbank

On 6/13/05, Paul Johnson <gt54-antlr@cyconix.com> wrote:
> I'd like to implement an ANTLR tree parser for an existing compiler,
> with the recogniser in lex/yacc. Is this is a sensible thing to do?
> However, there doesn't seem to be any documentation on manually
> constructing ASTs to input to ANTLR - any pointers (preferably C++)?
From jimi at temporal-wave.com  Mon Jun 13 09:00:35 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon Jun 13 09:00:42 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
Message-ID: <B36CCC332A32904F8FA3DE134A23533615BAEA@wavemachine.temporal-wave.com>

Matthew (et al.),

 

I have worked out why the color coding seems to be broken: a careful
examination of how it breaks, and a sip of Bridgeport IPA, showed that
it is out by 1 character position for each line. This is because it is
only parsing correctly when the newline sequence is the UNIX \n only
(and, I imagine, the MAC \r). Files that came from some Windows editor
will usually have \r\n and the syntax highlighting (and the editor pane
in general) are not dealing with this. 

 

You will find it all magically works if you use gvim to rewrite the file
with \n as new line only. You could use any number of ways to change the
end of line character of course. 

 

Personally, I found my use of the tool to be greatly enhanced once this
worked properly. The only thing I could do with now is a bit more
documentation on what is syntactically different in this pre-release.
Once I found the 3.0 demo stuff I made strides forward. Though it is
pretty reasonable to expect that if you are using the pre-release you
will have to wing it a bit.

 

My only fear (hoping not to start a religious war) is that graphical
tools built in Java always seem to crash, hang, have slow GUIs and so on
(at least on windows, and though it would be easy to blame Windows, I
don't think that is the issue). At the moment this tool suffers form the
same issues - though I am loathe to offer any judgment at this stage in
the game - I would prefer to contribute to its betterment.

 

I very much like the syntax diagrams, though I have not decided if they
are just a cool gimmick for the programmer or not yet. They certainly
will aid in documentation enormously. Perhaps we could have a mode that
could export all the syntax diagrams at once (sorry if it is there and I
missed it)?

 

Some suggestions (not criticisms):

 

*	I would suggest that errors from parsing the grammar appear by
"check grammar", or "Build", in their own pane, instead of the Java
console, and be able to double click them to locate the error in the
source code.

 

*	Don't prompt for output locations all the time, but allow a
change of 'properties' if the programmer wants to change the output
location after the first run. 

 

*	In light of the above, perhaps have a project file that hold
such things. Borrowing from some of the good things in like Visual
Studio .Net 2003 (err, I mean the freeware tools such as Eclipse), is
not a bad idea. I realize of course that there was quite an effort to
get to this point first and such things tend to get filled in
afterwards.

 

Share and enjoy,

 

Jim

 

 

________________________________

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Matthew Ford
Sent: Monday, June 13, 2005 2:33 AM
To: ANTLR Interest; Jean Bovet
Subject: Re: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2
released!

 

Just downloaded ANTLRWorks to version 1.0ea2

colour coding and highlight still up the creek.

There is an annoying "I have finish sending the stats  OK"

Why not just close the stats window when you are finished and only annoy
me if there are errors

(even then I probably don't want to know about stats errors)

 

matthew

	----- Original Message ----- 

	From: Jean Bovet <mailto:antlr-list@arizona-software.ch>  

	To: ANTLR Interest <mailto:antlr-interest@antlr.org>  

	Sent: Monday, June 13, 2005 10:15 AM

	Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2
released!

	 

	Hello!

	 

	Terence has just released version 3.0ea2 of ANTLR:

	 

	http://www.antlr.org/download/antlr-3.0ea2.tar.gz

	http://www.antlr.org/download/examples-v3.tar.gz

	 

	I have updated also ANTLRWorks to version 1.0ea2 (mainly bug
fixes - more info in the readme file):

	 

	http://www.antlr.org/works/index.html

	 

	The ANTLRWorks jar has everything you need including ANTLR
3.0ea2.

	 

	Per the license in LICENSE.txt, this software is not guaranteed
to work and might even destroy all life on this planet.

	 

	ANTLR and ANTLRWorks are released under the BSD license, though
ANTLRWorks has no source with it at the moment.

	 

	Feel free to send comments to the antlr-interest list or if you
want to send patches:

	 

	http://www.antlr.org/misc/feedback

	 

	 

	Enjoy these new releases!

	 

	Jean Bovet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/b8a035b9/attachment-0001.html
From parrt at cs.usfca.edu  Mon Jun 13 09:20:29 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 09:20:31 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <000d01c56ff9$92d04630$0200a8c0@notebook>
References: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch>
	<000d01c56ff9$92d04630$0200a8c0@notebook>
Message-ID: <CE3B95ED-C4BA-4D00-8E81-999C16D1C02B@cs.usfca.edu>

Hi.  Do you mean I tar'd it up improperly or copied the wrong file?   
or is that link in some html somewhere?
Ter
On Jun 13, 2005, at 2:23 AM, Matthew Ford wrote:

> http://www.antlr.org/download/antlr-3.0ea2.tar.gz
> points to  ea1 not ea2
From parrt at cs.usfca.edu  Mon Jun 13 09:22:25 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 09:22:29 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <001e01c56ffa$d7243a70$0200a8c0@notebook>
References: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch>
	<001e01c56ffa$d7243a70$0200a8c0@notebook>
Message-ID: <83EC9418-F894-41D2-9C5C-5D6FAB982A58@cs.usfca.edu>


On Jun 13, 2005, at 2:32 AM, Matthew Ford wrote:

> Just downloaded ANTLRWorks to version 1.0ea2
> colour coding and highlight still up the creek.
> There is an annoying "I have finish sending the stats  OK"
> Why not just close the stats window when you are finished and only  
> annoy me if there are errors
> (even then I probably don't want to know about stats errors)

Hi Matthew,

Apple does it, which is a pretty good reason to me ;)  Further,  
anything dealing with the net I think it's reasonable to give a  
success message.  Clearly it's possible to disagree with this  
philosophy :)

Thanks for submitting stats!

Ter
From parrt at cs.usfca.edu  Mon Jun 13 11:28:31 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 11:27:57 2005
Subject: [antlr-interest] Recovering white space in V3.0
In-Reply-To: <42AAFC19.4080206@comcast.net>
References: <42AAFC19.4080206@comcast.net>
Message-ID: <DA520BE8-BE55-4576-AF26-D8E2DE4162CB@cs.usfca.edu>


On Jun 11, 2005, at 7:58 AM, Andy Tripp wrote:
> Terence,
> I'm currently testing my Jazillian translator
> on gcc's libc. It's about 800,000 lines, and I keep all that as  
> token streams in memory.

Hi :)

For all files all at once or one file at a time?

> It's
> not a pretty sight, and I'm off to buy more memory because my 1GB  
> is no longer enough :( I'll be doing lots
> of memory profiling - I'm sure it's my fault, not yours :)

Hmm...i wonder if it's my fault!

> ...speaking of things being your fault...
> I spent the past week doing CPU profiling. One bottleneck
> for me was that makeToken() uses reflection (calling newInstance()) -
> I now have a setTokenFactory() method so that I provide my own
> makeToken() method.

I wondered how slow the reflection was...good to know.  I'm avoiding  
it 3.0

> And now after fixing my own bottlenecks, nextToken() and LA() are
> right near the top in my list of CPU hogs :)

Well, the lexer is slow, whence, the nextToken speed.  LA is called a  
HUGE amount in 2.x, repeatedly even in the same decision.  3.0  
decisions are optimal in that they call input.LT(i) for token i at  
most once during a single decision.

> That's when I know
> I must be done, when I can say "I've done about all I can do, and
> the rest must be Terence's fault" ;)

Sounds like a South Park episode..."Blame Terence!"  Though, they  
misspell "terrence and phillip".

> Obviously, I'm just kidding, and I love ANTLR, even if I don't

hooray!

> believe in treewalkers (or even believe in AST-generating
> parsers much, now that I think about it - guess I'm a lexer man).

:)  "To thine own self be true!" :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From dragonoe at mcmaster.ca  Mon Jun 13 11:34:25 2005
From: dragonoe at mcmaster.ca (Olivier Dragon)
Date: Mon Jun 13 11:31:09 2005
Subject: [antlr-interest] Fortran grammars
Message-ID: <20050613183425.GA17749@dragon.homelinux.org>

Greetings,

I'm new to ANTLR and I was wondering if anyone here has a FORTRAN 77
(actually any grammar for FORTRAN I, II, III, IV, 66 and/or 77). I'm
looking at building ASTs in Java from legacy FORTRAN applications. I've
looked into other alternatives like Eli and Sage++ but I would really
prefer to stick with Java, hence use ANTLR.

After spending a couple of days searching on google and following links
into oblivion I could not find anything ANTLR related for FORTRAN. The
ANTLR grammar list [http://www.antlr.org/grammar/list] does not include
anything about FORTRAN.

My current solution would be to translate the grammar from an open
source project like Eli, g77, f2c or Waite's into something ANTLR can
understand. Before I jump into this possible nightmare I simply wanted
to know if it's already been done or if there's an easier/better way to
do this. Also if you know of better resources on the matter I would be
most delighted to hear about them.

I very much appreciate your time and feedback.

-Olivier

-- 
          __-/|    ? ?     |\-__
     __--/  /  \   (^^)   /  \  \--__
  _-/   /   /  /\ / ( )  /\  \   \   \-_
 /  /   /  /  /  (   ^^ ~  \  \  \   \  \
 / Oli Dragon    ( dragonoe@mcmaster.ca \
/  B.Eng. Sfwr   (     )    \    \  \    \
/  /  /    /__--_ (   ) __--__\    \  \  \
|  /  /  _/        \_ \_       \_  \  \  |
 \/  / _/            \_ \_       \_ \  \/
  \_/ /                -\_\        \ \_/
    \/                    )         \/
                        *~
        ___--<***************>--___
       [http://dragon.homelinux.org]
        ~~~--<***************>--~~~
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/628f47cd/attachment.bin
From parrt at cs.usfca.edu  Mon Jun 13 11:34:51 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 11:34:18 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533615BAEA@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A23533615BAEA@wavemachine.temporal-wave.com>
Message-ID: <5DBA8304-0D9E-48A8-8F4E-AC8BC55C6C16@cs.usfca.edu>


On Jun 13, 2005, at 9:00 AM, Jim Idle wrote:
> I have worked out why the color coding seems to be broken: a  
> careful examination of how it breaks, and a sip of Bridgeport IPA,  
> showed that it is out by 1 character position for each line. This  
> is because it is only parsing correctly when the newline sequence  
> is the UNIX \n only (and, I imagine, the MAC \r). Files that came  
> from some Windows editor will usually have \r\n and the syntax  
> highlighting (and the editor pane in general) are not dealing with  
> this.

Good catch!!!  yeah :)
>  Personally, I found my use of the tool to be greatly enhanced once  
> this worked properly. The only thing I could do with now is a bit  
> more documentation on what is syntactically different in this pre- 
> release. Once I found the 3.0 demo stuff I made strides forward.  
> Though it is pretty reasonable to expect that if you are using the  
> pre-release you will have to wing it a bit.

Yeah, sorry about that...i'm scrambling to finish up the damn thing.   
The examples do help, right?
>  My only fear (hoping not to start a religious war) is that  
> graphical tools built in Java always seem to crash, hang, have slow  
> GUIs and so on (at least on windows, and though it would be easy to  
> blame Windows, I don?t think that is the issue). At the moment this  
> tool suffers form the same issues ? though I am loathe to offer any  
> judgment at this stage in the game ? I would prefer to contribute  
> to its betterment.

Java guis are indeed slow, but portable...sort of. ;)  As for  
crashing and hanging, I find this tool not too bad for early access  
release :)
>  I very much like the syntax diagrams, though I have not decided if  
> they are just a cool gimmick for the programmer or not yet.
They are like the "dashboard" on Mac OS X Tiger...cool, but not  
always useful to experienced developers.  OTOH, they are REALLY great  
for tracking down ambiguities...for this, they are really spectacular :)
> They certainly will aid in documentation enormously. Perhaps we  
> could have a mode that could export all the syntax diagrams at once  
> (sorry if it is there and I missed it)?

Use -nfa or -dfa to get something like that from antlr itself.  I  
think Jean will have something to print / generate PDF for these  
puppies out later.
>  Some suggestions (not criticisms):
>
>  I would suggest that errors from parsing the grammar appear by  
> ?check grammar?, or ?Build?, in their own pane, instead of the Java  
> console, and be able to double click them to locate the error in  
> the source code.
> Don?t prompt for output locations all the time, but allow a change  
> of ?properties? if the programmer wants to change the output  
> location after the first run.
>
>
> In light of the above, perhaps have a project file that hold such  
> things. Borrowing from some of the good things in like Visual  
> Studio .Net 2003 (err, I mean the freeware tools such as Eclipse),  
> is not a bad idea. I realize of course that there was quite an  
> effort to get to this point first and such things tend to get  
> filled in afterwards.

Thanks a lot for the feedback!  Good stuff.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Mon Jun 13 11:36:57 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 11:36:25 2005
Subject: [antlr-interest] Fortran grammars
In-Reply-To: <20050613183425.GA17749@dragon.homelinux.org>
References: <20050613183425.GA17749@dragon.homelinux.org>
Message-ID: <961C2C35-4D15-41BE-868C-89EAC21CE940@cs.usfca.edu>

Hi.  I *know* I have f77.g around...but I think it's PCCTS.  OH, here  
it is in share area.  Heh, even the antlr.org search found it!  I  
gotta fix that thing soon to be better...

http://www.antlr.org/share/1077305245771/fort.g

Ter
On Jun 13, 2005, at 11:34 AM, Olivier Dragon wrote:

> Greetings,
>
> I'm new to ANTLR and I was wondering if anyone here has a FORTRAN 77
> (actually any grammar for FORTRAN I, II, III, IV, 66 and/or 77). I'm
> looking at building ASTs in Java from legacy FORTRAN applications.  
> I've
> looked into other alternatives like Eli and Sage++ but I would really
> prefer to stick with Java, hence use ANTLR.
>
> After spending a couple of days searching on google and following  
> links
> into oblivion I could not find anything ANTLR related for FORTRAN. The
> ANTLR grammar list [http://www.antlr.org/grammar/list] does not  
> include
> anything about FORTRAN.
>
> My current solution would be to translate the grammar from an open
> source project like Eli, g77, f2c or Waite's into something ANTLR can
> understand. Before I jump into this possible nightmare I simply wanted
> to know if it's already been done or if there's an easier/better  
> way to
> do this. Also if you know of better resources on the matter I would be
> most delighted to hear about them.
>
> I very much appreciate your time and feedback.
>
> -Olivier
>
> -- 
>           __-/|    ? ?     |\-__
>      __--/  /  \   (^^)   /  \  \--__
>   _-/   /   /  /\ / ( )  /\  \   \   \-_
>  /  /   /  /  /  (   ^^ ~  \  \  \   \  \
>  / Oli Dragon    ( dragonoe@mcmaster.ca \
> /  B.Eng. Sfwr   (     )    \    \  \    \
> /  /  /    /__--_ (   ) __--__\    \  \  \
> |  /  /  _/        \_ \_       \_  \  \  |
>  \/  / _/            \_ \_       \_ \  \/
>   \_/ /                -\_\        \ \_/
>     \/                    )         \/
>                         *~
>         ___--<***************>--___
>        [http://dragon.homelinux.org]
>         ~~~--<***************>--~~~
>

--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Mon Jun 13 11:48:11 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 11:47:36 2005
Subject: [antlr-interest] ANTLR 3.0 status report
Message-ID: <6D2CF6A5-840A-441E-A669-FB117E91515D@cs.usfca.edu>

Howdy,

In my development branch, I'm madly cranking away on:

1. tree construction via operators
2. tree construction via -> rewrite declarations
3. tree parsing
4. text generation via integration of StringTemplate

At this point, I have a number of basic tests that indicate (1)  
automatic tree construction appears to work.  I'm going to build a  
nice functional testing rig and then move on to the rewrite  
mechanism.  Proceeding quickly.

My (overly optimistic) goal is to finish all this tree / rewrite  
stuff by end of June.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com
From jimi at temporal-wave.com  Mon Jun 13 12:08:56 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon Jun 13 12:09:00 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
Message-ID: <B36CCC332A32904F8FA3DE134A23533615BAEB@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Terence Parr
> Sent: Monday, June 13, 2005 11:35 AM
> On Jun 13, 2005, at 9:00 AM, Jim Idle wrote:
> >Files that came
> > from some Windows editor will usually have \r\n and the syntax
> > highlighting (and the editor pane in general) are not dealing with
> > this.
> 
> Good catch!!!  yeah :)

No problem - glad to offer any help that I can, even a simple one like
that.

> > Once I found the 3.0 demo stuff I made strides forward.
> > Though it is pretty reasonable to expect that if you are using the
> > pre-release you will have to wing it a bit.
> 
> Yeah, sorry about that...i'm scrambling to finish up the damn thing.
> The examples do help, right?

Yes, indeed they do. There is nothing for you to apologies for though -
I am happier to have a version to play with, warts and all, than to have
to wait until there is some documentation to speak of. I would just
suggest that you put a pointer to the examples for downloading in the
README - I didn't spot the examples for a while and was working it out
by osmosis (though it makes you remember it better that way!)

> >  My only fear (hoping not to start a religious war) is that
> > graphical tools built in Java always seem to crash, hang, have slow
> > GUIs and so on (at least on windows, and though it would be easy to
> > blame Windows, I don't think that is the issue). At the moment this
> > tool suffers form the same issues - though I am loathe to offer any
> > judgment at this stage in the game - I would prefer to contribute
> > to its betterment.
> 
> Java guis are indeed slow, but portable...sort of. ;)  As for
> crashing and hanging, I find this tool not too bad for early access
> release :)

Yes - that's why I won't offer any criticism for things like that just
yet. It is a work in progress and I will submit any bugs/things that
crash and anything else that may help improve it.

> >  I very much like the syntax diagrams, though I have not decided if
> > they are just a cool gimmick for the programmer or not yet.

> They are like the "dashboard" on Mac OS X Tiger...cool, but not
> always useful to experienced developers.  OTOH, they are REALLY great
> for tracking down ambiguities...for this, they are really spectacular
:)

Yes - I suspect that though they are definitely cool, and I like cool
;-), that they will prove to actually be useful time savers as well in
certain instances. In the meantime, I will settle for cool - it makes
you look smart when people look over your shoulder ;-)

I am very much looking forward to the release of 3.0. One question to
clarify things though. I think I may have misled myself into thinking
that 3.0 would be able to use a C runtime (as in the code for the
parser, not ANTLR). I think that what I saw was that the stringtemplate
was a good thing for producing C code translations of input streams
(which it certainly looks like it is) and jumped to conclusions. I have
tried to make time to read through all the blog/notes/ideas and remember
reading about language independence. However it would seem that 3.0 will
be Java only at parser runtime?

Jim
From parrt at cs.usfca.edu  Mon Jun 13 12:20:17 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 12:19:46 2005
Subject: [antlr-interest] ANTLR 3.0 template files
Message-ID: <368060A3-83EF-47BE-A056-A50927B6FDC7@cs.usfca.edu>

Guys,

I'm wondering if it's a bad time for you folks to be trying to build  
C/C++/C# targets... To do the tree stuff, I'm changing a lot of stuff.

I was hoping to avoid this, but I may need to do a good bit of  
refactoring of the templates themselves.  Ric you may remember from  
the ANTLR2004 workshop that I'm thinking of a "template composition"  
thing to encapsulate different concerns.  So we'd have a basic code  
generator template file and then a group of templates that get  
applied to alter that for debugging then a set of templates to alter  
even that for tree construction.  At this point there are a million  
IF statements in the templates depending on debug etc... and *lots*  
of duplication (as I build the trees now) in order to avoid even more  
IFs.

I may need to add a concept to StringTemplate like aspects or  
composition.  Essentially I need to have a simple template like

tokenRef(label,token) ::= <<
<if(label)>
<label> = input.LT(1);
<endif>
match(token);
 >>

and then in another file (almost like a subclass) create the  
differences needed for trees.  But, how does the tree template stuff  
know where to stick stuff (front and back is easy, but what about in  
the middle)?  I figured we could leave holes:

tokenRef(label,token) ::= <<
<if(label)>
<label> = input.LT(1);
<else>
<treeLabel>
<endif>
match(token);
<treeBuild>
 >>

then have

tokenRef.treeLabel ::= "Token tk = input.LT(1);"

tokenRef.treeBuild ::= "Tree t = adaptor.create(tk);"

in another file.  The funny thing is that we could *almost* use  
subclassing for this.

tokenRef(label,token) ::= <<
super.tokenRef(treeLabel="...", treeBuild="...")
 >>

But the arguments can be many lines long and you lose the sense that  
it's a super group template instantiation.

For some reason, I'm gravitating towards the "composition" idea.

I hate having to leave holes in the main tokenRef even as that will  
get more and more complicated as I add debugging and all that.  I  
need a way to specify locations in a template after-the-fact--w/o  
having to actually alter the original template.  I read some aspect- 
oriented programming stuff but it seems pretty complicated how they  
specify where to add function calls etc...  Hmm... anybody have some  
suggestions?

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Mon Jun 13 12:31:29 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 13 12:30:54 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533615BAEB@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A23533615BAEB@wavemachine.temporal-wave.com>
Message-ID: <19A3B80E-1786-4BE2-BAB7-A985480B41BA@cs.usfca.edu>


On Jun 13, 2005, at 12:08 PM, Jim Idle wrote:
> I am very much looking forward to the release of 3.0. One question to
> clarify things though. I think I may have misled myself into thinking
> that 3.0 would be able to use a C runtime (as in the code for the
> parser, not ANTLR). I think that what I saw was that the  
> stringtemplate
> was a good thing for producing C code translations of input streams
> (which it certainly looks like it is) and jumped to conclusions. I  
> have
> tried to make time to read through all the blog/notes/ideas and  
> remember
> reading about language independence. However it would seem that 3.0  
> will
> be Java only at parser runtime?

We had a C runtime working thanks to Ric months ago, but he can't  
keep up with my constant changes to the templates as I race to the  
finish line.  Poor guy has to work for a living! ;)  I hope that he  
will catch up when I finish the tree stuff :)

The C.stg file provided doesn't actually work anymore, but it does  
give you the idea.  The various targets will literally be a simple  
change of template file...no code!  The dream was verified by Ric  
back at the ANTLR2004 workshop when he cranked out C.stg :)   
CSharp.stg should be pretty easy.

The only target code needed is of course the support library, which  
this time is clearly identified. ;)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From ganelin at mail.com  Mon Jun 13 12:50:12 2005
From: ganelin at mail.com (pganelin)
Date: Mon Jun 13 12:48:33 2005
Subject: [antlr-interest] Code bloat for mulitple passes with point changes.
Message-ID: <42ADE374.40501@mail.com>

Problem Summary: multiple transformations passes with small changes 
results in code bloat.  Nodes to be changed are located deeply within tree.
Description:
In ANTLR documentation (Tree Parser Chapter) there is an example of tree 
transformation (optimizing identity operations) and I will use this 
example for illustration.
X+0 -> X
X*1 -> X

I have multiphase transformation. During stage number N I want to do 
"identity optimization".  I can easily implement the transformation 
using visitor pattern without TreeWalker with a few lines of code. If I 
want to use TreeWalker instead I will need to duplicate (really inherit) 
the whole tree grammar file for phase N with most rules without any 
action. Only two rules (plus and multiply) have the explicit 
transformation action. The generated file would be huge, because it 
creates duplicate tree for all these grammar rules without action. As a 
result the code would be bloated and very ineffective compare with 
visitor pattern.

Do I miss something or Tree Walker is not appropriate tool for such job?
Sincerely,
 Pavel

From monty at codetransform.com  Mon Jun 13 10:06:36 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Mon Jun 13 13:07:18 2005
Subject: [antlr-interest] ANTLR 3.0 template files
In-Reply-To: <368060A3-83EF-47BE-A056-A50927B6FDC7@cs.usfca.edu>
References: <368060A3-83EF-47BE-A056-A50927B6FDC7@cs.usfca.edu>
Message-ID: <42ADBD1C.70901@codetransform.com>

Terence Parr wrote:


> I hate having to leave holes in the main tokenRef even as that will  get 
> more and more complicated as I add debugging and all that.  I  need a 
> way to specify locations in a template after-the-fact--w/o  having to 
> actually alter the original template.  I read some aspect- oriented 
> programming stuff but it seems pretty complicated how they  specify 
> where to add function calls etc...  Hmm... anybody have some  suggestions?
> 

Perfect fit for tree rewriting!

AOP, as I understand if from a few years ago, let you say thing like 
"wrap this method with this code" or "wrap all invocations of this 
method with this code" or "add these variables and methods to all 
classes matching this pattern", etc.  And what's underneath?  A grammar 
that can find all the appropriate spots and merge in the code.

If you don't have holes, you need some way to specify a pattern to match 
against--how to find the holes.  You can predefine them a la AOP, or you 
can do it with a grammar.  Doing it the AOP style also brings up a 
problem of ordering -- if you have two aspects modifying the same spot 
which gets to go first?  It has to be specificed somewhere.

In fact, I'd be curious to see what "language" underlies ANTLR 3.  Your 
primitives are things like "change state" and "match" and "call rule" 
and "action" and "variable assignment".  I think you need an 
intermediate language which is more refined than text yet not as 
specific as a programming language.  StringTemplate might just be a 
little to stringy...just a little more structure than chunks of code and 
chunk references could allow you to write a grammar.

before chunk "match" add chunk "label"
after chunk "match" add chunk "build tree"

or, with ST translating chunk names to rule names and some predefined 
rules like chunk, text, and chunk_reference:

match:
	{label}
	chunk
	{build tree}

which doesn't look much different than what you have except that it is 
completely separate--the match template gets to stay simple.  The groovy 
thing is that now you can push and pop attributes so that the actual 
"match invocation" can know if it happening in a lexer, parser or tree 
parser.  I know there's an elegant way to make this happen--I need some 
more difficult examples though.  Or give me a call.

Monty
From ewbank at gmail.com  Mon Jun 13 14:32:15 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 13 14:32:18 2005
Subject: [antlr-interest] Re: Code bloat for mulitple passes with point
	changes.
In-Reply-To: <dd3a065f05061314314dc3d466@mail.gmail.com>
References: <42ADE374.40501@mail.com>
	<dd3a065f05061314314dc3d466@mail.gmail.com>
Message-ID: <dd3a065f05061314321eabe1f4@mail.gmail.com>

And now, for the list, ...

I've observed the same problem, and ended up avoiding the code
duplication by using an alternate construct that I think is the
"visitor" implemented in ANTLR.  It especially saves me pain when I
want to add a new operator or other node type.

doIdentityTransform
:
    ( (PLUS) => #(PLUS lhs:doIdentityTransform rhs:doIdentityTransform)
             { ... bleah ... }   /* lhs and rhs are already processed */
    | (MULT) => #(MULT lhs:doIdentityTransform rhs:doIdentityTransform)
             { ... bleah ... }   /* lhs and rhs are already processed */
    | #( . ( doIdentityTransform )* )
                                 /* no action; just drill down */
    )
;

Note that I define "high level" and "low level" tree audit passes that
have the whole structure of the tree defined, and I use these between
the other passes to catch broken operations (in debug mode, of course
;-).  For the audit passes, the rules would look something like this:

    #( op:PLUS expr expr noKids[op] )
    #( op:MULT expr expr noKids[op] )

and "noKids" throws an exception if it matches anything, thus:
    noKids[RefTreeNode op]
    : ( badnode:. { diediedie(badnode, op); } )?
    ;

Note that the skeleton for the above is:

     walker : #( . ( walker )* );    // one function call per node

I think that it might be better, because it replaces recursion with a
while loop, to do this:

     walker : ( #( . walker ) )* ;   // one function call per group-of-kids

It avoids some of the stack thrash from the "(walker)*" in the first
production as it bangs into the terminal nodes in the AST; however, it
requires a bit more explicit actions because the children are not
named.

On 6/13/05, pganelin <ganelin@mail.com> wrote:
> Problem Summary: multiple transformations passes with small changes
> results in code bloat.  Nodes to be changed are located deeply within tree.
> Description:
> In ANTLR documentation (Tree Parser Chapter) there is an example of tree
> transformation (optimizing identity operations) and I will use this
> example for illustration.
> X+0 -> X
> X*1 -> X
>
> I have multiphase transformation. During stage number N I want to do
> "identity optimization".  I can easily implement the transformation
> using visitor pattern without TreeWalker with a few lines of code. If I
> want to use TreeWalker instead I will need to duplicate (really inherit)
> the whole tree grammar file for phase N with most rules without any
> action. Only two rules (plus and multiply) have the explicit
> transformation action. The generated file would be huge, because it
> creates duplicate tree for all these grammar rules without action. As a
> result the code would be bloated and very ineffective compare with
> visitor pattern.
>
> Do I miss something or Tree Walker is not appropriate tool for such job?
> Sincerely,
>  Pavel
>
>
From prashant.deva at gmail.com  Mon Jun 13 15:13:15 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Mon Jun 13 15:13:21 2005
Subject: [antlr-interest] What does the 'interactive' option mean?
Message-ID: <41fed8f8050613151372add31e@mail.gmail.com>

The definition for the 'interactive' option in the antlr doc is this- 

'interactive' -  Both the lexer and the parser have an interactive
option, which defaults to "false". See the parser speed section above.

There is no 'parser speed' section, above on that page.

So what exactly does this option do?
From atripp at comcast.net  Mon Jun 13 15:44:48 2005
From: atripp at comcast.net (Andy Tripp)
Date: Mon Jun 13 15:44:58 2005
Subject: [antlr-interest] Fortran grammars
Message-ID: <42AE0C60.9030400@comcast.net>

I had started a F77 ANTLR grammar, but never finished.
This might make a decent starting point. I was going from the
HP F77 manual that came with their RTE-A operating system.
Andy

--------------------------------------------------------------

/** Fortran Recognizer
 *
 * Run 'java Main [-showtree] directory-full-of-java-files'
 *
 * [The -showtree option pops up a Swing frame that shows
 *  the AST constructed from the parser.]
 *
 * Run 'java Main <directory full of java files>'
 *
 * Contributing authors:
 *        Andy Tripp          atripp@comcast.net
 */

class FortranRecognizer extends Parser;
options {
    k = 2;                           // two token lookahead
    exportVocab=Fortran;                // Call its vocabulary "Fortran"
    codeGenMakeSwitchThreshold = 2;  // Some optimizations
    codeGenBitsetTestThreshold = 3;
    defaultErrorHandler = false;     // Don't generate parser error handlers
    buildAST = true;
}

tokens { DOT; MIL_STD_OCTAL; MIL_STD_HEX; NUM_REAL; NUM_BINARY;
ARRAY_ELEMENT_NAME; SUBSTRING_NAME;
}

executableProgram
    : topStatement
      NEWLINE
      statementList
      "END"
    ;

topStatement
    : programStatement
    | functionStatement
    | subroutineStatement
    | blockDataStatement
    ;

statementList
    :    statement
        (NEWLINE CONTINUATION statement )*
    ;

/* 6 and 7 */
statement
    : includeStatement
    | formatStatement
    | entryStatement
    | parameterStatement
    | implicitStatement
    | dataStatement
    | statementFunctionStatement

    | dimensionStatement
    | equivalenceStatement
    | commonStatement
    | typeStatement
    | externalStatement
    | intrinsicStatement
    | saveStatement
    | emaStatement

    | assignmentStatement
    | gotoStatement
    | ifStatement
    | elseStatement
    | endIfStatement
    | doStatement
    | endDoStatement
    | continueStatement
    | stopStatement
    | pauseStatement
    | writeStatement
    | printStatement
    | decodeStatement
    | encodeStatement
    | rewindStatement
    | backspaceStatement
    | endFileStatement
    | openStatement
    | closeStatement
    | inquireStatement
    | callStatement
    | returnStatement
    ;


/* not in syntax chart */
includeStatement
    : "INCLUDE" STRING_CONSTANT
    ;

/* 8 */
programStatement
    : "PROGRAM" SNAME
        ( LPAREN
          ( INTEGER_CONSTANT (COMMA! INTEGER_CONSTANT)* )?
          RPAREN )?
        ( COMMA PROCESSOR_STRING )*
    ;

/* 9, 11, and 14 */
entryStatement
    : "ENTRY" SNAME
      ( options { generateAmbigWarnings=false; }:
       (functionArgumentList)*
      | subroutineArgumentList
      )
    ;

/* 10 */
functionStatement
    :    (
          "INTEGER"
        | "REAL"
        | "DOUBLE PRECISION"
        | "COMPLEX"
        | "DOUBLE COMPLEX"
        | "LOGICAL"
        | "CHARACTER"
        )
        ( STAR lenSpecification )?
        "FUNCTION"
        ( COMMA PROCESSOR_STRING )?
    ;


/* 12 */
functionArgumentList
    : LPAREN
      ( SNAME ( COMMA SNAME)* )?
      RPAREN
    ;

/* 13 */
subroutineStatement
    :    "SUBROUTINE" SNAME
        (subroutineArgumentList)?
        ( COMMA PROCESSOR_STRING )?
    ;

/* 15 */
subroutineArgumentList
    : LPAREN
      ( (SNAME | STAR) ( COMMA (SNAME | STAR))* )?
      RPAREN
    ;

/* 16 */
blockDataStatement
    :    "BLOCK DATA" ( SNAME ) ?
    ;

/* 17 */
dimensionStatement
    :    "DIMENSION" arrayDeclarator ( COMMA arrayDeclarator )*
    ;

/* 18 */
arrayDeclarator
    : SNAME
      LPAREN
      arrayDeclarator2 (COMMA arrayDeclarator2)*
      (STAR)?
      RPAREN
    ;

arrayDeclarator2
    : (dimBoundExpression (COLON dimBoundExpression)? )?
    ;

/* 19,20 */
equivalenceStatement
    : "EQUIVALENCE"
      equivalenceStatement2 (COMMA equivalenceStatement2)*
    ;

equivalenceStatement2
    : LPAREN
      name (COMMA name)*
      RPAREN
    ;

/* 21 */
commonStatement
    : "COMMON"
      common2 (COMMA common2)*
    ;

common2
options { generateAmbigWarnings=false; }
    : (DIV SNAME DIV)?
      ( arrayDeclarator | SNAME)
      ( options { generateAmbigWarnings=false; }:
        COMMA (arrayDeclarator | SNAME) )*
    ;


/* 22 */
typeStatement
    :    ( "INTEGER"
        | "REAL"
        | "DOUBLE PRECISION"
        | "COMPLEX"
        | "DOUBLE COMPLEX"
        | "LOGICAL"
        )
        (STAR lenSpecification (COMMA)? )?
        type2 (COMMA type2)*

    | "CHARACTER" (STAR lenSpecification (COMMA)? )?
      type2 (STAR lenSpecification)?
      (COMMA type2 (STAR lenSpecification))?
    ;

type2
    : SNAME
    | arrayDeclarator
    ;

/* 23 */
implicitStatement
    : "IMPLICIT" ( "NONE" | implicit2 (COMMA implicit2)* )
    ;

implicit2
    : ( "INTEGER"
            | "REAL"
            | "DOUBLE PRECISION"
            | "COMPLEX"
            | "DOUBLE COMPLEX"
            | "LOGICAL"
            | "CHARACTER"
        )
        (STAR lenSpecification)?
        LPAREN
        // DASH_STRING (COMMA DASH_STRING)*
        SNAME (COMMA SNAME)*
        PAREN
    ;


/* 24 */
lenSpecification
    : ( LPAREN STAR RPAREN)
    | INTEGER_CONSTANT
    | ( LPAREN INTEGER_CONSTANT RPAREN)
    ;

/* 25 */
parameterStatement
    : "PARAMETER"
      LPAREN
      ( SNAME EQUALS constantExpression )
      ( COMMA SNAME EQUALS constantExpression )*
      RPAREN
    ;

/* 26 */
externalStatement
    : "EXTERNAL"
      SNAME         // procedure_name or block_data_subprogram_name
      (COMMA SNAME)*
    ;

/* 27 */
intrinsicStatement
    : "INTRINSIC"
      SNAME            // functionName
      (COMMA SNAME)*
    ;

/* 28 */
saveStatement
    : "SAVE"
      (SNAME | DIV SNAME DIV)
      ( COMMA (SNAME | DIV SNAME DIV) )*
    ;


/* 29 */
emaStatement
    : "EMA" SNAME (COMMA SNAME)*
    ;

/* 30 */
dataStatement
    : "DATA" data1 (COMMA data1)*
    ;

data1
    : data2 (COMMA data2)*
      DIV
      data3 (COMMA data3)*
      DIV
    ;

data2
    : name
    | dataImpliedDoList
    ;

data3
    : ( ( INTEGER_CONSTANT | SNAME) STAR )?
      ( constant | SNAME )
    ;

/* 31 */
dataImpliedDoList
    : LPAREN
      dataImplied2 (COMMA dataImplied2)*
      SNAME EQUALS
      arithmeticExpression (COMMA arithmeticExpression)*
      RPAREN
    ;

dataImplied2
    : name (COMMA dataImpliedDoList)*
    ;

/* 34 */
assignmentStatement
    : name EQUALS expression
    | "ASSIGN" label "TO" SNAME
    ;

/* 35 */
gotoStatement
    : "GO TO"
      (unconditionalGoto | computedGoto | assignedGoto)
    ;

/* 36 */
unconditionalGoto
    : INTEGER_CONSTANT
    ;

/* 37 */
computedGoto
    : LPAREN
      label (COMMA label)*
      RPAREN
      (COMMA)?
      arithmeticExpression
    ;

/* 38 */
assignedGoto
    : SNAME
      ((COMMA)? LPAREN label (COMMA label)* RPAREN)?
    ;

/* 39, 40, 42 */
ifStatement
    : "IF" LPAREN arithmeticExpression RPAREN
      (
          (label COMMA label COMMA label)
// TMP        | (statement | "THEN")
      )
    ;

/* 42, 43 */
elseStatement
    : "ELSE" (ifStatement)?
    ;

/* 44 */
endIfStatement
    : "END IF"
    ;

/* 45, 46, 47 */
doStatement
    : "DO" (label (COMMA)?)?
        (
            (SNAME EQUALS arithmeticExpression (COMMA 
arithmeticExpression)*)
            | ("WHILE" LPAREN arithmeticExpression RPAREN)
        )
    ;


/* 48 */
endDoStatement
    : "END DO"
    ;

/* 49 */
continueStatement
    : "CONTINUE"
    ;

/* 50 */
stopStatement
    : "STOP" (INTEGER_CONSTANT | characterExpression)?
    ;

/* 51 */
pauseStatement
    : "PAUSE" (INTEGER_CONSTANT | characterExpression)?
    ;

/* 52 */
writeStatement
    : "WRITE" LPAREN controlInfoList RPAREN (ioList)?
    ;

/* 53 */
readStatement
    : "READ"
        (
          options { generateAmbigWarnings=false; }:
          LPAREN controlInfoList RPAREN (ioList)?
        | (formatIdentifier (COMMA ioList)?)
        )
    ;

/* 54 */
printStatement
    : "PRINT" formatIdentifier (COMMA ioList)?
    ;

/* 55 */
decodeStatement
    : "DECODE" encodeDecode1
    ;
   
/* 56 */
encodeStatement
    : "ENCODE" encodeDecode1
    ;
   
encodeDecode1
    : LPAREN
      arithmeticExpression COMMA formatIdentifier COMMA SNAME      
      (encodeDecode2)*
      RPAREN
      (ioList)?
    ;
     
encodeDecode2
    : COMMA
        (
          ("ERR" EQUALS LABEL)
        | ("IOSTAT" EQUALS name)
        )
    ;


/* 57 */
controlInfoList
    : unitIdentifier (COMMA controlInfoList2)*
    ;

controlInfoList2
    : "FMT" EQUALS formatIdentifier
    | "UNIT" EQUALS unitIdentifier
    | "REC" EQUALS arithmeticExpression
    | "ZBUF" EQUALS name
    | "ZLEN" EQUALS arithmeticExpression
    | "END" EQUALS label
    | "ERR" EQUALS label
    | "IOSTAT" EQUALS name
    | formatIdentifier
    ;

/* 58 */
unitIdentifier
    : arithmeticExpression
        (
            // TMP: dont support for now: (APOSTROPHE arithmeticExpression)
          (COLON arithmeticExpression) (COLON arithmeticExpression)?
        )
    | STAR
    ;

/* 59 */
ioList
//    : ioList2 (COMMA ioList2)*
    : expression (COMMA expression)*
    ;

/* don't support for now:
ioList2
    : expression
    | ioImpliedDoList
    ;
*/

/* 60 */
/* don't support for now:
ioImpliedDoList
    : LPAREN ioList COMMA SNAME EQUALS arithmeticExpression
      (COMMA arithmeticExpression)+
      RPAREN
    ;
*/

/* 61 */
openStatement
    : "OPEN" LPAREN open2 (COMMA open2)* RPAREN
    ;

open2
    : "UNIT" EQUALS arithmeticExpression
    | "ERR" EQUALS characterExpression
    | "FILE" EQUALS characterExpression
    | "STATUS" EQUALS characterExpression
    | "ACCESS" EQUALS characterExpression
    | "FORM" EQUALS characterExpression
    | "RECL" EQUALS arithmeticExpression
    | "BLANK" EQUALS characterExpression
    | "MAXREC" EQUALS arithmeticExpression
    | "USE" EQUALS characterExpression
    | "NODE" EQUALS arithmeticExpression
    | "BUFSIZ" EQUALS arithmeticExpression
    | "IOSTAT" EQUALS name
    | arithmeticExpression
    ;

/* 62 */
closeStatement
    : "CLOSE" LPAREN close2 (COMMA close2)* RPAREN
    ;

close2
    : "UNIT" EQUALS arithmeticExpression
    | "ERR" EQUALS label
    | "STATUS" EQUALS characterExpression
    | "IOSTAT" EQUALS name
    | arithmeticExpression
    ;


/* 63 */
inquireStatement
    : "INQUIRE" LPAREN inquire2 (COMMA inquire2)* RPAREN
    ;

inquire2
    : "UNIT" EQUALS arithmeticExpression
    | "FILE" EQUALS characterExpression
    | "ERR" EQUALS label
    | (
        "IOSTAT" | "EXIST" | "OPENED" | "NUMBER" | "NAMED" | "NAME" |
        "ACCESS" | "SEQUENTIAL" | "DIRECT" | "FORM" | "FORMATTED" |
        "UNFORMATTED" | "RECL" | "NEXTREC" | "BLANK" | "MAXREC" |
        "USE" | "NODE"
      )  name
    ;

/* 64 */
backspaceStatement
    : "BACKSPACE"
    ;

/* 65 */
endFileStatement
    : "ENDFILE"
    ;

/* 66 */
rewindStatement
    : "REWIND"
        (
          // when we see LPAREN then arithmeticExpression, it's ok
          // to just match rewind2
          options { generateAmbigWarnings=false; }:
          ( LPAREN rewind2 (COMMA rewind2)* RPAREN )
          | arithmeticExpression
        )
    ;

rewind2
    : "UNIT" EQUALS arithmeticExpression
    | "ERR" EQUALS label
    | "IOSTAT" EQUALS name
    | arithmeticExpression
    ;


/* 67 */
formatIdentifier
    : label
    | characterExpression
    | STAR
    ;

/* 68, 69, 70, 71-79 */
formatStatement
    : FORMAT_STATEMENT
    ;

/* 80 */
statementFunctionStatement
    : LPAREN (SNAME (COMMA SNAME)* )? RPAREN EQUALS expression
    ;

/* 81 */
callStatement
    : "CALL" SNAME ( LPAREN (call2 (COMMA call2)*)? )? RPAREN
    ;

call2
    : expression
    | PROCESSOR_STRING  // longHollerithConst
    | STAR label
    ;

/* 82 */
returnStatement
    : "RETURN" arithmeticExpression
    ;

/* 83 */
functionReference
    : SNAME LPAREN (functionRef2 (COMMA functionRef2)*)? RPAREN
    ;

functionRef2
    : expression
    | PROCESSOR_STRING  // longHollerithConst
    ;

/* 84 */
expression
    : characterExpression (relOp characterExpression)*
    ;

/* 85 */
constantExpression
    : expression
    ;

/* 86, 87, 88 */
// integerExpression, logicalExpression, combined into arithmeticExpression
// combined into just expression

characterExpression
    : arithmeticExpression ( (SLASH_SLASH) arithmeticExpression )*
    ;

arithmeticExpression
    : additiveExpression ( (AND|OR|EQV|NEQV|XOR|EOR) additiveExpression )*
    ;

additiveExpression
    : multiplicativeExpression ( (PLUS | MINUS) multiplicativeExpression )*
    ;

multiplicativeExpression
    : exponentiationExpression ( (STAR | DIV) exponentiationExpression )*
    ;

exponentiationExpression
    : unaryExpression ( (EXPONENT) unaryExpression )*
    ;


unaryExpression
    options { generateAmbigWarnings=false; }// functionReference before name
    : PLUS unaryExpression
    | MINUS unaryExpression
    | NOT unaryExpression
    | functionReference
    | name
    | LPAREN arithmeticExpression RPAREN
    | logicalConstant
    | CHARACTER_CONSTANT
    ;

/* 91 */
dimBoundExpression
    : unaryExpression ((PLUS|MINUS|DIV|EXPONENT) unaryExpression )*
    ;

/* 92 */
// characterExpression moved above arithmeticExpression

/* No need for 93: characterConstExpression */

/* 96 */
// relationalExpression combined with expression

/* 97 */
relOp
    : LT
    | LE
    | EQ
    | NE
    | GT
    | GE
    ;


/* 98, 99 */
name
    : sname:SNAME
      (LPAREN (arithmeticExpression)?
              (
              (COMMA arithmeticExpression)+
                {#sname.setType(ARRAY_ELEMENT_NAME);}

              | COLON (arithmeticExpression)?
                {#sname.setType(SUBSTRING_NAME);}
            )
      RPAREN {#sname.setType(SUBSTRING_NAME);}
      )
    ;

/* 110 */
constant
    : logicalConstant
    | CHARACTER_CONSTANT
    | INTEGER_CONSTANT
    | NUM_REAL
    | MIL_STD_OCTAL
    | MIL_STD_HEX
    | NUM_BINARY
    ;

/* 121 */
logicalConstant
    : ".TRUE."
    | ".FALSE."
    ;


/* 123 */
label
    : INTEGER_CONSTANT
    ;

     
    
//----------------------------------------------------------------------------
    // The Fortran scanner
    
//----------------------------------------------------------------------------
class FortranLexer extends Lexer;

options {
    exportVocab=Fortran;      // call the vocabulary "Fortran"
    testLiterals=false;    // don't automatically test for literals
    k=4;                   // four characters of lookahead
    charVocabulary='\u0003'..'\u7FFE';
}



EQUALS            :    '='        ;
LPAREN            :    '('        ;
RPAREN            :    ')'        ;
COLON            :    ':'        ;
COMMA            :    ','        ;
DIV                :    '/'        ;
STAR            :    {getColumn() != 1}? '*'        ;
PLUS            :    '+'        ;
MINUS            :    '-'        ;
LNOT            :    ".NOT."        ;
LAND            :    ".AND."        ;
LOR                :    ".OR."    ;
EQV                :    ".EQV."    ;
NEQV            :    ".NEQV."    ;
XOR                :    ".XOR."    ;
EOR                :    ".EOR."    ;
EXP                :    {getColumn() != 1}? "**"        ;
SLASH_SLASH        :    "//"        ;
LT                :    ".LT."        ;
LE                :    ".LE."        ;
GT                :    ".GT."        ;
GE                :    ".GE."        ;
NE                :    ".NE."        ;
EQ                :    ".EQ."        ;
CONTINUATION    :    "&"        ;


// Whitespace -- ignored
WS    :    (    ' '
        |    '\t'
        |    '\f'
            // handle newlines
        |    (    options {generateAmbigWarnings=false;}
            :    "\r\n"  // Evil DOS
            |    '\r'    // Macintosh
            |    '\n'    // Unix (the right way)
            )
            { newline(); }
        )+
        { _ttype = Token.SKIP; }
    ;

// Single-line comments
END_COMMENT
    :    "!"
        (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
        {$setType(Token.SKIP); newline();}
    ;

SL_COMMENT
    :    {getColumn() == 1}? ('C' | '*')
        (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
        {$setType(Token.SKIP); newline();}
    ;

/* 122 */
CHARACTER_CONSTANT
    :    '\'' ( ~('\'') )* '\''
    ;

// string literals
STRING_LITERAL
    :    '"' (~('"'|'\\'|'\n'|'\r'))* '"'
    ;


LOGICAL_CONSTANT
    : ".TRUE." | ".FALSE."
    ;


// hexadecimal digit (again, note it's protected!)
protected
OCTAL_DIGIT
    :    ('0'..'7')
    ;

// hexadecimal digit (again, note it's protected!)
protected
HEX_DIGIT
    :    ('0'..'9'|'A'..'F'|'a'..'f')
    ;

// an identifier.  Note that testLiterals is set to true!  This means
// that after we match the rule, we look in the literals table to see
// if it's a literal or really an identifer
SNAME
    options {testLiterals=true;}
    :    {getColumn() != 1 && LA(2) != '\''}? 
('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$'|'-')*
    ;


// a numeric literal
INTEGER_CONSTANT
    :   '.' {_ttype = DOT;}
            (    ('0'..'9')+ (EXPONENT)?
                {
                    _ttype = NUM_REAL;
                }
            )?

/* 32 */
    |    ( 'O' '\'' (OCTAL_DIGIT)+ '\'' ) { _ttype = MIL_STD_OCTAL; }
/* 33 */
    |    ( 'Z' '\'' (HEX_DIGIT)+ '\'' ) { _ttype = MIL_STD_HEX; }
    |    ('0'..'9')+
        (
            '.' ('0'..'9')* (EXPONENT)? { _ttype = NUM_REAL; }
        |    ('I'|'J')? { _ttype = INTEGER_CONSTANT; }
        |    ('B') { _ttype = NUM_BINARY; }
        )
    ;


// a couple protected methods to assist in matching floating point numbers
protected
EXPONENT
    :    ('e'|'E') ('+'|'-')? ('0'..'9')+
    |    ('d'|'D') ('+'|'-')? ('0'..'9')+
    ;

// for now, accept anything within parens:
FORMAT_STATEMENT
    : "FORMAT" '(' (~')')* '('
    ;

protected
NEWLINE
    : ('\r' | '\n' | '\r' '\n')
    ;



From antlr-list at arizona-software.ch  Mon Jun 13 16:08:18 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon Jun 13 16:08:25 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <CE3B95ED-C4BA-4D00-8E81-999C16D1C02B@cs.usfca.edu>
References: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch>
	<000d01c56ff9$92d04630$0200a8c0@notebook>
	<CE3B95ED-C4BA-4D00-8E81-999C16D1C02B@cs.usfca.edu>
Message-ID: <128196C3-9C43-4ABE-8BAA-65DADFBB33B3@arizona-software.ch>

I think it's my fault. The underlying link was not updated correctly.  
So, the correct URL is:

http://www.antlr.org/download/antlr-3.0ea2.tar.gz

Jean

Le 13 juin 05 ? 09:20, Terence Parr a ?crit :

> Hi.  Do you mean I tar'd it up improperly or copied the wrong  
> file?  or is that link in some html somewhere?
> Ter
> On Jun 13, 2005, at 2:23 AM, Matthew Ford wrote:
>
>
>> http://www.antlr.org/download/antlr-3.0ea2.tar.gz
>> points to  ea1 not ea2
>

From antlr-list at arizona-software.ch  Mon Jun 13 16:24:20 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon Jun 13 16:24:30 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <000c01c57013$53a9be90$0200a8c0@notebook>
References: <000c01c57013$53a9be90$0200a8c0@notebook>
Message-ID: <68EF14A3-5A37-4017-B2B0-A01C5B568D14@arizona-software.ch>

> Hi Jean,
> Please excuse the abruptness of my previous two postings.
> AntlrWorks is a great concept and I am looking forward to its first  
> full release.
>

I don't expect positive comments, but I prefer when negative ones  
come with constructive comments ;-)

Concerning the coloring, I have no problem on my laptop (and Terence  
on his box) with many grammar files. I would be really happy if you  
could send me the grammar file which is causing these problems - it  
will help me to reproduce them (I have received some complains about  
the syntax coloring, but when I ask for an concrete example, I never  
get back an answer).

>
> I have another two suggestions
>
> i) Pressing the 'Submit Stats'  button locks up the GUI.
> This action should be passed to a background thread for processing  
> and the panel should close immediately.
> My website has code and details on spawning background threads and  
> handling their results for both Java V1.4 and V1.5
> http://www.forward.com.au/javaProgramming/ 
> index.html#programming_with_java_threads
>

I am already doing a lot of background threads ;-) But you are right  
that the submission should be done in the background: I have added  
this to my ToDo list!

> ii) I recommend you avoid error message (and confirmation) dialog  
> boxes alltogther.  This like article says why and suggests some  
> alternatives
> http://www.forward.com.au/javaProgramming/javaGuiTips/ 
> dialogBoxes.html#dialog_boxes
> I am sure you can think of others or more pleasing designs.
>

This is a delicate subject. I don't agree completely with your  
philosophy, but it is interesting. I am currently following (but  
there is some lack I recognize) the Apple Design Guidelines.

> As an adjunct to removing confirmation dialog boxes you need to  
> provide a comprehensive undo/redo function (not just for edits) so  
> the user can change their mind.
>

For what feature do you want a undo/redo aside from editing text ?  
Depending on the feature, I can add that in a future release.

Thanks a lot for your comments!

Jean

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/f198efe6/attachment.html
From teddemc at yahoo.com  Mon Jun 13 16:32:19 2005
From: teddemc at yahoo.com (Matthew Tedder)
Date: Mon Jun 13 16:32:21 2005
Subject: [antlr-interest] Can multi-lined string literals be done?
Message-ID: <20050613233219.80068.qmail@web52906.mail.yahoo.com>


As in php or perl, can multi-lined, long string
literals be lexed with antlr? If so, how exactly?

php just allows pressing enter between quotes where
ever desired.  Perl does it by specified a keyword to
stop on like this (probably truelly not possible for
antlr):

print << "StopText";
one line
two line
three line
etc..
StopText

Matthew

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From antlr-list at arizona-software.ch  Mon Jun 13 16:33:42 2005
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon Jun 13 16:33:49 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533615BAEA@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A23533615BAEA@wavemachine.temporal-wave.com>
Message-ID: <242DAFE1-BB89-4A6B-BBC1-838AFCE9FB36@arizona-software.ch>

> I have worked out why the color coding seems to be broken: a  
> careful examination of how it breaks, and a sip of Bridgeport IPA,  
> showed that it is out by 1 character position for each line. This  
> is because it is only parsing correctly when the newline sequence  
> is the UNIX \n only (and, I imagine, the MAC \r). Files that came  
> from some Windows editor will usually have \r\n and the syntax  
> highlighting (and the editor pane in general) are not dealing with  
> this.
>
>
>
> You will find it all magically works if you use gvim to rewrite the  
> file with \n as new line only. You could use any number of ways to  
> change the end of line character of course.
>
>
Whow! I think you are right! Great job!

That's why I have difficulty to reproduce that because even on Linux/ 
Windows, I am using files coming from the Mac OS X box.

I have read a long time agon in the JTextPane API description that  
"...while the document is in memory, the "\n" character is used to  
define a newline...". Apparently, this is not always the case....
>
>
> Personally, I found my use of the tool to be greatly enhanced once  
> this worked properly. The only thing I could do with now is a bit  
> more documentation on what is syntactically different in this pre- 
> release. Once I found the 3.0 demo stuff I made strides forward.  
> Though it is pretty reasonable to expect that if you are using the  
> pre-release you will have to wing it a bit.
>
>

Great!

> My only fear (hoping not to start a religious war) is that  
> graphical tools built in Java always seem to crash, hang, have slow  
> GUIs and so on (at least on windows, and though it would be easy to  
> blame Windows, I don?t think that is the issue). At the moment this  
> tool suffers form the same issues ? though I am loathe to offer any  
> judgment at this stage in the game ? I would prefer to contribute  
> to its betterment.
>
>

It would be very handy to have a report of what kind of crash did  
occur and after what serie of commands.

> I very much like the syntax diagrams, though I have not decided if  
> they are just a cool gimmick for the programmer or not yet. They  
> certainly will aid in documentation enormously. Perhaps we could  
> have a mode that could export all the syntax diagrams at once  
> (sorry if it is there and I missed it)?
>
>

I will think about that. Currently, you can export only one diagram  
at a time in an image file. I will see what I can do for PDF ;-)

> I would suggest that errors from parsing the grammar appear by  
> ?check grammar?, or ?Build?, in their own pane, instead of the Java  
> console, and be able to double click them to locate the error in  
> the source code.
>

I will think more about that ;-) Note that the errors appearing by  
"check grammar" are indicated by a yellow icon in the rules/tokens list.

>
>
> Don?t prompt for output locations all the time, but allow a change  
> of ?properties? if the programmer wants to change the output  
> location after the first run.
>

I can set a preferences for that, sure.

>
>
> In light of the above, perhaps have a project file that hold such  
> things. Borrowing from some of the good things in like Visual  
> Studio .Net 2003 (err, I mean the freeware tools such as Eclipse),  
> is not a bad idea. I realize of course that there was quite an  
> effort to get to this point first and such things tend to get  
> filled in afterwards.
>

Well, that's may be interesting!


Thanks for these comments and for your help about the syntax coloring  
behavior!

Jean


>

From gbr at newtechlaw.com  Mon Jun 13 16:58:30 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon Jun 13 17:02:30 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <68EF14A3-5A37-4017-B2B0-A01C5B568D14@arizona-software.ch>
References: <000c01c57013$53a9be90$0200a8c0@notebook>
	<000c01c57013$53a9be90$0200a8c0@notebook>
Message-ID: <4.3.2.7.2.20050613164708.0abf9b90@pop3.newtechlaw.com>


>>ii) I recommend you avoid error message (and confirmation) dialog boxes 
>>alltogther.  This like article says why and suggests some alternatives
>><http://www.forward.com.au/javaProgramming/javaGuiTips/dialogBoxes.html#dialog_boxes>http://www.forward.com.au/javaProgramming/javaGuiTips/dialogBoxes.html#dialog_boxes 
>>
>>I am sure you can think of others or more pleasing designs.
>>
>
>This is a delicate subject. I don't agree completely with your philosophy, 
>but it is interesting. I am currently following (but there is some lack I 
>recognize) the Apple Design Guidelines.

"Add a preference option and even those that vehemently disagree with the 
guidelines will be just as happy as those who knowingly never think to 
change the default."  Gandhi, as quoted with approval by the Dalai Lama.


----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any attachments) is 
being sent by an attorney, is for the sole use of the intended recipient, 
and may contain confidential and privileged information.  Any unauthorized 
review, use, disclosure or distribution is prohibited.  If you are not the 
intended recipient, please contact the sender immediately by reply e-mail 
and delete all copies of this message and any attachments without retaining 
a copy. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/bb5554f3/attachment.html
From gbr at newtechlaw.com  Mon Jun 13 17:29:43 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon Jun 13 17:33:12 2005
Subject: [antlr-interest] Can multi-lined string literals be done?
In-Reply-To: <20050613233219.80068.qmail@web52906.mail.yahoo.com>
Message-ID: <4.3.2.7.2.20050613170655.0aae8878@pop3.newtechlaw.com>

At 04:32 PM 6/13/2005, Matthew Tedder wrote:
>php just allows pressing enter between quotes where
>ever desired.

protected
QT:  '\"';

ALONGLINE1:   QT! (~QT)* QT!;

>Perl does it by specified a keyword to
>stop on

protected
WORD:  ('A'..'Z'|'a'..'z')+;
protected
WS:       ( ' ' | '\r' | '\n' { $setToken.SKIP; } )+;
protected
STOP:  (QT)? "StopText" (QT)? ;

ALONGLINE2:  "print <<"! WS! STOP! WS! (WORD (WS)?)+ STOP!;

>like this (probably truelly not possible for
>antlr):

Although sometimes a bit devilish in the details, this is all quite 
possible with ANTLR.

----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any attachments) is 
being sent by an attorney, is for the sole use of the intended recipient, 
and may contain confidential and privileged information.  Any unauthorized 
review, use, disclosure or distribution is prohibited.  If you are not the 
intended recipient, please contact the sender immediately by reply e-mail 
and delete all copies of this message and any attachments without retaining 
a copy. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050613/051643f4/attachment-0001.html
From ewbank at gmail.com  Mon Jun 13 18:13:38 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 13 18:13:41 2005
Subject: [antlr-interest] Code bloat for mulitple passes with point
	changes.
In-Reply-To: <42AE0C0C.8030006@mail.com>
References: <42ADE374.40501@mail.com>
	<dd3a065f05061314314dc3d466@mail.gmail.com>
	<42AE0C0C.8030006@mail.com>
Message-ID: <dd3a065f05061318131b5b0612@mail.gmail.com>

True; you should be able to do something about that by coding the
actions carefully.  It's not something I've been worrying about (yet)
- Bryan

On 6/13/05, pganelin <ganelin@mail.com> wrote:
>  Thanks. The solution avoids code bloat, so it still generates duplicate
>  tree.
From atripp at comcast.net  Mon Jun 13 19:53:14 2005
From: atripp at comcast.net (Andy Tripp)
Date: Mon Jun 13 19:53:22 2005
Subject: [antlr-interest] Recovering white space in V3.0
Message-ID: <42AE469A.3000108@comcast.net>

>
>
>On Jun 11, 2005, at 7:58 AM, Andy Tripp wrote:
>> Terence,
>> I'm currently testing my Jazillian translator
>> on gcc's libc. It's about 800,000 lines, and I keep all that as  
>> token streams in memory.
>
>Hi :)
>
>For all files all at once or one file at a time?
>
All at once. Plus a few symbol tables.

>
>> It's
>> not a pretty sight, and I'm off to buy more memory because my 1GB  
>> is no longer enough :( I'll be doing lots
>> of memory profiling - I'm sure it's my fault, not yours :)
>
>Hmm...i wonder if it's my fault!
>
>> ...speaking of things being your fault...
>> I spent the past week doing CPU profiling. One bottleneck
>> for me was that makeToken() uses reflection (calling newInstance()) -
>> I now have a setTokenFactory() method so that I provide my own
>> makeToken() method.
>
>I wondered how slow the reflection was...good to know.  I'm avoiding  
>it 3.0
>
I think the setTokenFactory() way is cleaner anyway.

>
>> And now after fixing my own bottlenecks, nextToken() and LA() are
>> right near the top in my list of CPU hogs :)
>
>Well, the lexer is slow, whence, the nextToken speed.  LA is called a  
>HUGE amount in 2.x, repeatedly even in the same decision.  3.0  
>decisions are optimal in that they call input.LT(i) for token i at  
>most once during a single decision.
>
Nice. Not only am I lexing the input, but I have hundreds of
pattern-matching-and-replacement rules, and each time I do a 
replacement, that
replacement text must be lexed.

>
>> That's when I know
>> I must be done, when I can say "I've done about all I can do, and
>> the rest must be Terence's fault" ;)
>
>Sounds like a South Park episode..."Blame Terence!"  Though, they  
>misspell "terrence and phillip".
>
>> Obviously, I'm just kidding, and I love ANTLR, even if I don't
>
>hooray!
>
>> believe in treewalkers (or even believe in AST-generating
>> parsers much, now that I think about it - guess I'm a lexer man).
>
>:)  "To thine own self be true!" :)
>
>Ter
>

Keep up the good work.
Andy - the perpetual ANTLR newbie ;)


From ric.klaren at gmail.com  Tue Jun 14 01:05:46 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun 14 01:05:48 2005
Subject: [antlr-interest] What does the 'interactive' option mean?
In-Reply-To: <41fed8f8050613151372add31e@mail.gmail.com>
References: <41fed8f8050613151372add31e@mail.gmail.com>
Message-ID: <bc607a4e05061401054f3a945f@mail.gmail.com>

On 6/14/05, Prashant Deva <prashant.deva@gmail.com> wrote:
> The definition for the 'interactive' option in the antlr doc is this-
> 
> 'interactive' -  Both the lexer and the parser have an interactive
> option, which defaults to "false". See the parser speed section above.
> 
> There is no 'parser speed' section, above on that page.
> 
> So what exactly does this option do?

It's an old artifact afaik. Don't think any of the backends use/implement it.

Cheers,

Ric
From wincrt at yahoo.com  Tue Jun 14 01:56:49 2005
From: wincrt at yahoo.com (Ramon V. del Rosario)
Date: Tue Jun 14 01:56:51 2005
Subject: [antlr-interest] RE: newbie: how to use parse rule and nested curly
Message-ID: <20050614085649.89172.qmail@web31006.mail.mud.yahoo.com>

Thanks Geir Ove! 

just 1 more problem how do we create dummy root? right
now i'm adding a dummy token 
to the config file for it to work.

startRule : 
	document : DROOT^ (acl | log | opt | WORDSTRING^)*
;
--- sample.conf ---
droot #my dummy token

acl xyz-slaves {
160.9.201.3;
};
options {
directory "/etc";
allow-transfer { xyz-slaves; localhost; };
};


		
__________________________________ 
Discover Yahoo! 
Get on-the-go sports scores, stock quotes, news and more. Check it out! 
http://discover.yahoo.com/mobile.html
From matthew.ford at forward.com.au  Mon Jun 13 14:15:57 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Tue Jun 14 03:33:33 2005
Subject: Sucess Dialog boxes was Re: [antlr-interest] ANTLR 3.0ea2 and
	ANTLRWorks 1.0ea2 released!
References: <91380520-CE4A-4DF6-8526-9A55A0ABCFF9@arizona-software.ch><001e01c56ffa$d7243a70$0200a8c0@notebook>
	<83EC9418-F894-41D2-9C5C-5D6FAB982A58@cs.usfca.edu>
Message-ID: <000201c570cc$80efddd0$0200a8c0@notebook>

Hi Ter,
These sort of  'sucess' dialog boxes are indicative of un-reliability.

In the early days of the net they were appropiate, but these days my email
package does not gleefully pop up
a dialog box every time it manages to send an email.  It shows me its sucess
in more subtel ways.

If you are of the school that 'this is the way we always did it' then you
could still add
a "do not show this dialog box againg" tick box.

For a somewhat humorous take on these annoying dialog boxes and alternatives
see
http://www.forward.com.au/javaProgramming/javaGuiTips/dialogBoxes.html#dialog_boxes

matthew

----- Original Message ----- 
From: "Terence Parr" <parrt@cs.usfca.edu>
To: "ANTLR Interest" <antlr-interest@antlr.org>
Sent: Tuesday, June 14, 2005 2:22 AM
Subject: Re: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!


>
> On Jun 13, 2005, at 2:32 AM, Matthew Ford wrote:
>
> > Just downloaded ANTLRWorks to version 1.0ea2
> > colour coding and highlight still up the creek.
> > There is an annoying "I have finish sending the stats  OK"
> > Why not just close the stats window when you are finished and only
> > annoy me if there are errors
> > (even then I probably don't want to know about stats errors)
>
> Hi Matthew,
>
> Apple does it, which is a pretty good reason to me ;)  Further,
> anything dealing with the net I think it's reasonable to give a
> success message.  Clearly it's possible to disagree with this
> philosophy :)
>
> Thanks for submitting stats!
>
> Ter
>

From matthew.ford at forward.com.au  Mon Jun 13 14:22:21 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Tue Jun 14 03:33:37 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
References: <B36CCC332A32904F8FA3DE134A23533615BAEA@wavemachine.temporal-wave.com>
Message-ID: <000301c570cc$82a1faa0$0200a8c0@notebook>

 Hi Jim, 
Java is not that slow, it only appears to be if the GUI trys to do all the work on the main thread.
Liberal use of background threads improves the user's perception of speed.
That's why I developed my Threads package
http://www.forward.com.au/javaProgramming/index.html#programming_with_java_threads 
matthew 


  My only fear (hoping not to start a religious war) is that graphical tools built in Java always seem to crash, hang, have slow GUIs and so on (at least on windows, and though it would be easy to blame Windows, I don't think that is the issue). At the moment this tool suffers form the same issues - though I am loathe to offer any judgment at this stage in the game - I would prefer to contribute to its betterment.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/36d8257d/attachment.html
From gregbedwell at gmail.com  Tue Jun 14 03:52:44 2005
From: gregbedwell at gmail.com (Greg Bedwell)
Date: Tue Jun 14 03:52:52 2005
Subject: [antlr-interest] "Ignore until" in the Parser
Message-ID: <4c3df4d305061403525f560004@mail.gmail.com>

Hi,

I've scoured the documentation for an answer to this but I find it
quite hard to work out where a potential answer may lie.

I'm using ANTLR to strip some information from the headers of verilog
modules (inputs, outputs, associated widths, parameters, etc) which
ALMOST works fine, except for one tiny little problem.

I'm only interested in parsing the first few lines of each module.  I
don't care at all about the contents of the body of the module at all
really.  Currently it works perfectly if I manually delete the
contents of the body from the verilog module but that is not a
feasable solution once this program leaves my hands :).

I need a way to define a rule in the parser that says: skip everything
until the word "endmodule" appears.  Here's an example of the code I
am parsing.  There will be potentially hundreds of modules in each
file I parse:

module myModule (out, in1, sel);

parameter size1 = 8;
parameter size2 = 4;

output [size1-1:0] out;
input [size1*size2-1:0] in1;
input [size2-1:0] sel;

// Everything from here I want to ignore

reg [size1-1:0] out;
integer i,j,temp;

always @ (in1 or sel)
begin
    // Lots of verilog code.
end

// Ignore until here

endmodule


I want to stay away from having to use an entire verilog grammar if
possible because it seems a massive overkill and will complicate my
solution which at the moment is relatively few lines long :)

Thanks
From matthew.ford at forward.com.au  Tue Jun 14 04:18:22 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Tue Jun 14 04:18:30 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
References: <000c01c57013$53a9be90$0200a8c0@notebook>
	<68EF14A3-5A37-4017-B2B0-A01C5B568D14@arizona-software.ch>
Message-ID: <002f01c570d2$c6bf8350$0200a8c0@notebook>

Hi Jean,

>>For what feature do you want a undo/redo aside from editing text ? Depending on the feature, I can add that in a future release.

In a word "everything"

I am in the throws of completing the code of an enhanced undo manager (a drop in replacement for the standard Java one)
This manager holds a main trunk of undos (a linear progression from start to where you are now ordered by time) and branches for 'every' other trial that got backtracked out of.

For grammar creation I would see each code generation as a step (save a copy of the whole grammar file at that point, or a diff if you wish)
Then when an approach to a set of rules does not work you can easly back out, but without ever loosing the option of going some or all of  the way back down that branch at a later time.


Just select the node in the tree and press enter to recover to that point (either incrementally or by jumping to that point).
Have a simple demo to show off the tree.
Three things left to do 
i) sort out rollback of the tree if a server update fails in client server mode where operations are stacked waiting for the server (optional)
ii) add extended descriptions (optional)
iii) and then a brief article.

Let me know if you think this would be of use
all the best
matthew

P.S
I would also like to see undo's for all non-trivial operations ,such as save when it overwrites an existing file

P.P.S.
I don' believe in having a File Save option.  If I have taken the effort do some edit I expect the default operation of the program will be save my endevours (with the option ofcouse to undo the save if I change my mind)   I have implemented this in my Parallel program (a Java interface for GAUSS)  http://www.forward.com.au/products/parallel/index.html
 You only need to have a SaveAs function which allows you to save under another name (again keeping a copy of any overwritten file for undo).  If you close the application you work should just be quietly saved and re-opened (if the file still exists) next time.  A missing file on open just gives a discrete message and allows you to continue.   Note the error messages always say 'Continue'  not OK.  Errors are never OK,  but good programs can recover from them (even OutOfMemory) and continue to provide service as best they can.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/7ec46410/attachment-0001.html
From ewbank at gmail.com  Tue Jun 14 05:04:38 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 14 05:04:42 2005
Subject: [antlr-interest] "Ignore until" in the Parser
In-Reply-To: <4c3df4d305061403525f560004@mail.gmail.com>
References: <4c3df4d305061403525f560004@mail.gmail.com>
Message-ID: <dd3a065f05061405047b6b0eb@mail.gmail.com>

How do you know when to stop parsing the "first few lines" of a
module?  If you can define the first token to be ignored, then you can
write a token filter that works like sed:
   nextToken()
   {
      t = nextToken(); // i.e., from input stream
      if (t == __token_from_which_to_scan__)
      {
           while (t != ENDMODULE) { t = nextToken(); }
      }
      return t;
   }

Another option, if you prefer to keep it in the parser, is to write a
parser rule that is "match all tokens until ENDMODULE" - something
like this:
   skipModule : (options{greedy=false;} . )* ENDMODULE ;

Or perhaps this
   skipModule : ( {LT(1) != ENDMODULE}? . )* ENDMODULE ;

I leave error recovery as an exercise (what if you hit EOF before ENDMODULE?)

On 6/14/05, Greg Bedwell <gregbedwell@gmail.com> wrote:
> Hi,
> 
> I've scoured the documentation for an answer to this but I find it
> quite hard to work out where a potential answer may lie.
> 
> I'm using ANTLR to strip some information from the headers of verilog
> modules (inputs, outputs, associated widths, parameters, etc) which
> ALMOST works fine, except for one tiny little problem.
> 
> I'm only interested in parsing the first few lines of each module.  I
> don't care at all about the contents of the body of the module at all
> really.  Currently it works perfectly if I manually delete the
> contents of the body from the verilog module but that is not a
> feasable solution once this program leaves my hands :).
> 
> I need a way to define a rule in the parser that says: skip everything
> until the word "endmodule" appears.  Here's an example of the code I
> am parsing.  There will be potentially hundreds of modules in each
> file I parse:
> 
> module myModule (out, in1, sel);
> 
> parameter size1 = 8;
> parameter size2 = 4;
> 
> output [size1-1:0] out;
> input [size1*size2-1:0] in1;
> input [size2-1:0] sel;
> 
> // Everything from here I want to ignore
> 
> reg [size1-1:0] out;
> integer i,j,temp;
> 
> always @ (in1 or sel)
> begin
>     // Lots of verilog code.
> end
> 
> // Ignore until here
> 
> endmodule
> 
> 
> I want to stay away from having to use an entire verilog grammar if
> possible because it seems a massive overkill and will complicate my
> solution which at the moment is relatively few lines long :)
> 
> Thanks
>
From ewbank at gmail.com  Tue Jun 14 05:09:28 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 14 05:09:30 2005
Subject: [antlr-interest] RE: newbie: how to use parse rule and nested
	curly
In-Reply-To: <20050614085649.89172.qmail@web31006.mail.mud.yahoo.com>
References: <20050614085649.89172.qmail@web31006.mail.mud.yahoo.com>
Message-ID: <dd3a065f050614050955289c5f@mail.gmail.com>

You add any extra nodes required in the tree in your actions.  For
example, to add a parent node "DUMMY" to your grammar, do this:

    startRule :
         ( acl | log | opt | WORDSTRING^ )*
         {
             // push everything down one level.
             ## = #( #[DUMMY,"DUMMY"], ## );
         }
    ;

This will take everything consumed and place it under one "dummy" root
node; I use this (at least) at the top level to ensure that I'm
passing around a tree rather than a list.

On 6/14/05, Ramon V. del Rosario <wincrt@yahoo.com> wrote:
> just 1 more problem how do we create dummy root? right
> now i'm adding a dummy token to the config file for it to work.
> 
> startRule :
>         document : DROOT^ (acl | log | opt | WORDSTRING^)*
> ;
From dragonoe at mcmaster.ca  Tue Jun 14 05:17:58 2005
From: dragonoe at mcmaster.ca (Olivier Dragon)
Date: Tue Jun 14 05:14:44 2005
Subject: [antlr-interest] Fortran grammars
In-Reply-To: <42AE0C60.9030400@comcast.net>
References: <42AE0C60.9030400@comcast.net>
Message-ID: <20050614121758.GB16604@dragon.homelinux.org>

On Mon, Jun 13, 2005 at 06:44:48PM -0400, Andy Tripp wrote:
> I had started a F77 ANTLR grammar, but never finished.
> This might make a decent starting point. I was going from the
> HP F77 manual that came with their RTE-A operating system.
> Andy

Thank you very much. I'll be sure to post my final result(s) here for
everyone to use. I don't know if many people are in need of a FORTRAN
grammar, mainly because of the observed scarcity of them, but hopefully
it will benefit someone at some point.

-Olivier

-- 
          __-/|    ? ?     |\-__
     __--/  /  \   (^^)   /  \  \--__
  _-/   /   /  /\ / ( )  /\  \   \   \-_
 /  /   /  /  /  (   ^^ ~  \  \  \   \  \
 / Oli Dragon    ( dragonoe@mcmaster.ca \
/  B.Eng. Sfwr   (     )    \    \  \    \
/  /  /    /__--_ (   ) __--__\    \  \  \
|  /  /  _/        \_ \_       \_  \  \  |
 \/  / _/            \_ \_       \_ \  \/
  \_/ /                -\_\        \ \_/
    \/                    )         \/
                        *~
        ___--<***************>--___
       [http://dragon.homelinux.org]
        ~~~--<***************>--~~~
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/a4751be0/attachment.bin
From eml at riverside-machines.co.uk  Tue Jun 14 10:13:39 2005
From: eml at riverside-machines.co.uk (Evan Lavelle)
Date: Tue Jun 14 11:31:20 2005
Subject: [antlr-interest] Files required for cantlr?
Message-ID: <42AF1043.2020508@riverside-machines.co.uk>

Can we have a ruling on exactly which files are required to build cantlr 
with gcj, and/or a makefile? Is it just everything in antlr-2.7.5/antlr?

Luca Di Gaspero's makefile from 2003 omits TokenWithIndex.java, and the 
csharp/python files, but includes most of the files in antlr/debug. A 
cantlr generated from this makefile seems to work Ok.

The makefile that Ric Klaren posted recently 
(http://www.antlr.org/pipermail/antlr-interest/2005-April/011723.html) 
is basically identical, with the addition of the csharp and python 
files, but it omits CommonASTWithHiddenTokens, CommonHiddenStreamToken, 
TokenStreamHiddenTokenFilter, and everything in antlr/debug.

Evan


From jimi at temporal-wave.com  Tue Jun 14 11:43:19 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue Jun 14 11:43:24 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
Message-ID: <B36CCC332A32904F8FA3DE134A23533615BAF4@wavemachine.temporal-wave.com>

Yes, I am not a Java basher, but surely you should not need to develop
such a thing. This is more a reflection of Swing and the way it does
things than Java itself of course.

 

Jim

 

________________________________

From: Matthew Ford [mailto:matthew.ford@forward.com.au] 
Sent: Monday, June 13, 2005 2:22 PM
To: Jim Idle; ANTLR Interest
Subject: Re: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2
released!

 

Hi Jim, 

Java is not that slow, it only appears to be if the GUI trys to do all
the work on the main thread.

Liberal use of background threadsimproves the user's perception of
speed.

That's why I developed my Threadspackage

http://www.forward.com.au/javaProgramming/index.html#programming_with_ja
va_threads

matthew

 

 

	My only fear (hoping not to start a religious war) is that
graphical tools built in Java always seem to crash, hang, have slow GUIs
and so on (at least on windows, and though it would be easy to blame
Windows, I don't think that is the issue). At the moment this tool
suffers form the same issues - though I am loathe to offer any judgment
at this stage in the game - I would prefer to contribute to its
betterment.

	 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/c498b86e/attachment.html
From jimi at temporal-wave.com  Tue Jun 14 12:47:25 2005
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue Jun 14 12:47:28 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
Message-ID: <B36CCC332A32904F8FA3DE134A23533615BAF8@wavemachine.temporal-wave.com>

 

 

________________________________

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Jean Bovet
Sent: Monday, June 13, 2005 4:24 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2
released!

 

	Hi Jean,

	Please excuse the abruptness of my previous two postings.

	AntlrWorks is a great concept and I am looking forward to its
first full release.

	 

 

I don't expect positive comments, but I prefer when negative ones come
with constructive comments ;-)

 

Concerning the coloring, I have no problem on my laptop (and Terence on
his box) with many grammar files. I would be really happy if you could
send me the grammar file which is causing these problems - it will help
me to reproduce them (I have received some complains about the syntax
coloring, but when I ask for an concrete example, I never get back an
answer).

 

Jean,

 

As I posted earlier, the syntax highlighting and the editor (such as
goto line) are incorrect when the source files is from a Windows editor
and has \r\n for the end of line marker. The syntax highlighting is out
by one character position for each line in the file for what should be
obvious reasons ;-). It no doubt works fine on Unix and MAC :-)

 

Jim

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/edfb9c74/attachment.html
From ewbank at gmail.com  Tue Jun 14 13:33:12 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 14 13:33:16 2005
Subject: [antlr-interest] c++ antlr profiling question
Message-ID: <dd3a065f0506141333475597ad@mail.gmail.com>

Hi Folks,

We've been collecting some performance numbers, and I need help
understanding them in the context of antlr.

Any idea what these functions are (linux g++ compiler):

      %       function name
    -----    ------------------------------
    19.50    read_encoded_value_with_base(u
    18.74    read_uleb128(unsigned char con
     9.85    __gxx_personality_v0
     6.75    base_of_encoded_value(unsigned
     4.23    execute_cfa_program
     4.03    _Unwind_IteratePhdrCallback

Any information, especially on read_encoded_value_with_base, would be
great.  I see a few hits on the web, but nothing substantial.  Having
20% of our execution time go into something that we don't grok
concerns me a bit ;-)
From brianlsmith at gmail.com  Tue Jun 14 14:53:25 2005
From: brianlsmith at gmail.com (Brian Smith)
Date: Tue Jun 14 15:00:08 2005
Subject: [antlr-interest] c++ antlr profiling question
In-Reply-To: <dd3a065f0506141333475597ad@mail.gmail.com>
References: <dd3a065f0506141333475597ad@mail.gmail.com>
Message-ID: <b0aab04e0506141453100cfbc8@mail.gmail.com>

Those look like internal exception handling functions from GCC to me.
Perhaps you have some predicates that cause backtracking very often? I
believe that backtracking is implemented via ANTLR 2.x via exceptions,
and exceptions handling in GCC is designed to be fast when exceptions
_are not_ thrown, at the expense of being very expensive when they
_are_ through.

- Brian

On 6/14/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> Hi Folks,
> 
> We've been collecting some performance numbers, and I need help
> understanding them in the context of antlr.
> 
> Any idea what these functions are (linux g++ compiler):
> 
>       %       function name
>     -----    ------------------------------
>     19.50    read_encoded_value_with_base(u
>     18.74    read_uleb128(unsigned char con
>      9.85    __gxx_personality_v0
>      6.75    base_of_encoded_value(unsigned
>      4.23    execute_cfa_program
>      4.03    _Unwind_IteratePhdrCallback
> 
> Any information, especially on read_encoded_value_with_base, would be
> great.  I see a few hits on the web, but nothing substantial.  Having
> 20% of our execution time go into something that we don't grok
> concerns me a bit ;-)
>
From ric.klaren at gmail.com  Tue Jun 14 15:49:51 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun 14 15:50:58 2005
Subject: [antlr-interest] Files required for cantlr?
In-Reply-To: <42AF1043.2020508@riverside-machines.co.uk>
References: <42AF1043.2020508@riverside-machines.co.uk>
Message-ID: <42AF5F0F.9090008@gmail.com>

Evan Lavelle wrote:
> Can we have a ruling on exactly which files are required to build cantlr 
> with gcj, and/or a makefile? Is it just everything in antlr-2.7.5/antlr?
> 
> Luca Di Gaspero's makefile from 2003 omits TokenWithIndex.java, and the 
> csharp/python files, but includes most of the files in antlr/debug. A 
> cantlr generated from this makefile seems to work Ok.
> 
> The makefile that Ric Klaren posted recently 
> (http://www.antlr.org/pipermail/antlr-interest/2005-April/011723.html) 
> is basically identical, with the addition of the csharp and python 
> files, but it omits CommonASTWithHiddenTokens, CommonHiddenStreamToken, 
> TokenStreamHiddenTokenFilter, and everything in antlr/debug.

Those are not necessary for building antlr itself. (at least not 
necessary to build the native executable) So you can just go with mine 
which is based on Luca's. I've used it multiple times to build a native 
binary.

Cheers,

Ric
From ric.klaren at gmail.com  Tue Jun 14 16:14:07 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun 14 16:15:17 2005
Subject: [antlr-interest] Return of the development snapshots
Message-ID: <42AF64BF.7070906@gmail.com>

Hi,

I patched up some rudimentary webpages this weekend. As a result the 
ANTLR 2.7.x development snapshots are available once more at a new url:

http://pts14043.pts.nl/antlr/

I also cut a snapshot of the 2.7.5 as per last weekend. Not 100% sure 
what fixes are all in it.

Changelogs of the old snapshots got mostly lost due to a bad sector on 
my backup cd :( Of all the files it had to be in.......

Cheers,

Ric
From scott at javadude.com  Tue Jun 14 16:48:06 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Tue Jun 14 16:50:25 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
In-Reply-To: <002f01c570d2$c6bf8350$0200a8c0@notebook>
Message-ID: <200506150042.j5F0enbK010377@s2.eroute.net>

Sounds kinda like the local history in eclipse.
 
While it's save-based, each change is tracked and you can at any point
"replace (or compare) with local history" to see your changes. Of course at
a higher level there are SCM tools...
 
You could take this to a slightly higher level and save the undo stack from
an editor (like eclipse). I don't think that would be hard to do (just tweak
the undo manager).
 
However, you also need to be careful of timing with relation to refactoring
operations that can affect multiple files, so consistency could be kept
between files. But, the trick here is that other changes could be
interspersed between refactorings. In other words, the changes between
inter-related files could get in the way.
 
I kinda like the idea, but I don't think it provides enough beyond what we
already have (like local history and SCM) to really justify the extra work.
 
Also keep in mind that many commands tracked in an undo manager assume a
specific program state. For example, typing text often assumes insertion of
characters at a specific position, which is relative to previous commands
(so commands usually cannot be undone/redone out of their original context).
 
My kinda random 2c...
 
Later,
-- Scott


  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Matthew Ford
Sent: Tuesday, June 14, 2005 7:18 AM
To: Jean Bovet; ANTLR Interest
Subject: Re: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2
released!


I am in the throws of completing the code of an enhanced undo manager (a
drop in replacement for the standard Java one)
This manager holds a main trunk of undos (a linear progression from start to
where you are now ordered by time) and branches for 'every' other trial that
got backtracked out of.
[...]
 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/02de4014/attachment-0001.html
From matthew.ford at forward.com.au  Tue Jun 14 17:38:25 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Tue Jun 14 17:38:33 2005
Subject: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
References: <B36CCC332A32904F8FA3DE134A23533615BAF4@wavemachine.temporal-wave.com>
Message-ID: <002f01c57142$8ad285c0$0200a8c0@notebook>

Hi Jim,

Java V1.5 has almost caught up with my Thread improvements but not quite (see 
http://www.forward.com.au/javaProgramming/futureTalker.html for details)

My article http://www.forward.com.au/javaProgramming/threadReturnsPackage/ToCatchAThread.html
details the problem with Java threads.  It is not just the design of Swing that gives the problems.

matthew
  ----- Original Message ----- 
  From: Jim Idle 
  To: ANTLR Interest 
  Sent: Wednesday, June 15, 2005 4:43 AM
  Subject: RE: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!


  Yes, I am not a Java basher, but surely you should not need to develop such a thing. This is more a reflection of Swing and the way it does things than Java itself of course.

   

  Jim

   


------------------------------------------------------------------------------

  From: Matthew Ford [mailto:matthew.ford@forward.com.au] 
  Sent: Monday, June 13, 2005 2:22 PM
  To: Jim Idle; ANTLR Interest
  Subject: Re: [antlr-interest] ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!

   

  Hi Jim, 

  Java is not that slow, it only appears to be if the GUI trys to do all the work on the main thread.

  Liberal use of background threadsimproves the user's perception of speed.

  That's why I developed my Threadspackage

  http://www.forward.com.au/javaProgramming/index.html#programming_with_java_threads

  matthew

   

   

    My only fear (hoping not to start a religious war) is that graphical tools built in Java always seem to crash, hang, have slow GUIs and so on (at least on windows, and though it would be easy to blame Windows, I don't think that is the issue). At the moment this tool suffers form the same issues - though I am loathe to offer any judgment at this stage in the game - I would prefer to contribute to its betterment.

     
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050615/54a0a32d/attachment.html
From matthew.ford at forward.com.au  Tue Jun 14 17:50:11 2005
From: matthew.ford at forward.com.au (Matthew Ford)
Date: Tue Jun 14 17:50:23 2005
Subject: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!
References: <200506150042.j5F0enbK010377@s2.eroute.net>
Message-ID: <003801c57144$2f962110$0200a8c0@notebook>

HI Scott,
I use Netbeans rather then Eclipse.  Haven't used local history, sounds similar, may only differ in the tree representation of undo's redo's.  I assume the local history has no concept of undo, it just saves each change so you cannot easly see you development deadends (backtracked branches)

I have not considered multiple files in particular  but as I mentioned the undo should save everything significant then when you backtrack to a previous state you are restored to exactly that state.  Because the main trunk is linear in time it can cope with working on multiple files add a method here .. call it there,  undo removes the call first and then removes the method later.

Also (unlike the existing Java UndoManager) if you backtrack  to some state and do some more changes, you do not loose any of the history and it is easy to go back to where you were (or anywhere else)

matthew
  ----- Original Message ----- 
  From: Scott Stanchfield 
  To: 'ANTLR Interest' 
  Sent: Wednesday, June 15, 2005 9:48 AM
  Subject: RE: [antlr-interest] Re: ANTLR 3.0ea2 and ANTLRWorks 1.0ea2 released!


  Sounds kinda like the local history in eclipse.
  ......................

  However, you also need to be careful of timing with relation to refactoring operations that can affect multiple files, so consistency could be kept between files. But, the trick here is that other changes could be interspersed between refactorings. In other words, the changes between inter-related files could get in the way.

  ........................
  Also keep in mind that many commands tracked in an undo manager assume a specific program state. For example, typing text often assumes insertion of characters at a specific position, which is relative to previous commands (so commands usually cannot be undone/redone out of their original context).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050615/dfa2b53a/attachment.html
From rupigill0 at yahoo.com  Tue Jun 14 20:56:18 2005
From: rupigill0 at yahoo.com (Rupinder S. Gill)
Date: Tue Jun 14 20:56:22 2005
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in a
	separate file 
Message-ID: <20050615035620.17DACDC75C@www.antlr.org>

(I posted a query a week ago but didn't receive a satisfactory response.)
I have a grammar for logical-expressions from which I need to build the
following:
- Java lexer and parser
- C# lexer and parser
- Two java tree-walkers
- One C# tree-walkers

The two java tree-walkers are in independent projects; both projects do
depend on the project that defines the grammar (and contains lexer and
parser).  C# lexer, parser and tree-walker can be in the same project.  I
want to keep only one copy of the common.g file (one containing parser and
lexer sections).  How do I this?

Grammar inheritance nor importVocab seem to be up to the task.  Or am I
missing something?

Thanks,
R.G.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050614/dca98f16/attachment.html
From ric.klaren at gmail.com  Wed Jun 15 00:46:09 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Jun 15 00:46:14 2005
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in a
	separate file
In-Reply-To: <20050615035620.17DACDC75C@www.antlr.org>
References: <20050615035620.17DACDC75C@www.antlr.org>
Message-ID: <bc607a4e05061500465c26f0d4@mail.gmail.com>

On 6/15/05, Rupinder S. Gill <rupigill0@yahoo.com> wrote:
> (I posted a query a week ago but didn't receive a satisfactory response.) 
> I have a grammar for logical-expressions from which I need to build the
> following: 
> - Java lexer and parser 
> - C# lexer and parser 
> - Two java tree-walkers 
> - One C# tree-walkers 
> 
> The two java tree-walkers are in independent projects; both projects do
> depend on the project that defines the grammar (and contains lexer and
> parser).  C# lexer, parser and tree-walker can be in the same project.  I
> want to keep only one copy of the common.g file (one containing parser and
> lexer sections).  How do I this? 
> 
> Grammar inheritance nor importVocab seem to be up to the task.  Or am I
> missing something?

I have no idea what you exactly want from this description. Is your
problem that you want a language independent .g file and then mix in
C# or java code? In that case look in the archive for the terms
'literate programming'  you should be able to turn up some posts by
Monty on how he set stuff like that up in the past.

Or is it more that you have trouble structuring the importVocab
exportVocab directives across all .g files?

Anycase antlr has no #include like directives. Grammar inheritance is
something I personally stay clear from (although some people seem to
like it). You could use the C preprocessor, m4, TCL/perl or other
scripting to achieve include file style setups.

Cheers,

Ric
From open.zone at virgin.net  Wed Jun 15 06:05:54 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun 15 05:52:02 2005
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in a
	separate file 
In-Reply-To: <20050615035620.17DACDC75C@www.antlr.org>
Message-ID: <001401c571aa$f7c21d40$6402a8c0@hercules>

Rupinder,
 
Have a look here at the ANTLR project here and especially the annotation
tool. The author uses it to maintain a single tree parser grammar for
multiple walks. You can adapt it for single grammar and multiple languages
too. You would probably want to move to a one-grammar-per-*.g-file
arrangement for this to work smoothly.
 
http://storm.cs.unipi.gr/~anakreon/aspa.html
 
Incidentally, there is no guarantee that you will receive a response (let
alone a "satisfactory response") from any mailing list staffed by
volunteers. ;-)
 
 
Cheers,
 
Micheal
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Rupinder S. Gill
Sent: 15 June 2005 04:56
To: antlr-interest@antlr.org
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in
aseparate file 



(I posted a query a week ago but didn't receive a satisfactory response.) 
I have a grammar for logical-expressions from which I need to build the
following: 
- Java lexer and parser 
- C# lexer and parser 
- Two java tree-walkers 
- One C# tree-walkers 

The two java tree-walkers are in independent projects; both projects do
depend on the project that defines the grammar (and contains lexer and
parser).  C# lexer, parser and tree-walker can be in the same project.  I
want to keep only one copy of the common.g file (one containing parser and
lexer sections).  How do I this?

Grammar inheritance nor importVocab seem to be up to the task.  Or am I
missing something? 

Thanks, 
R.G. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050615/368a6ac6/attachment.html
From rupigill0 at yahoo.com  Wed Jun 15 07:48:21 2005
From: rupigill0 at yahoo.com (Rupinder S. Gill)
Date: Wed Jun 15 07:48:24 2005
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in
	aseparate file 
In-Reply-To: <001401c571aa$f7c21d40$6402a8c0@hercules>
Message-ID: <20050615144821.388D3DCC25@www.antlr.org>

Thanks folks,
 
I figured out how to do the two independent tree-walkers and one common
lexer+parser .g file for java using exportVocab/importVocab (I just didn't
understand these options before).  Still need to se how to build C#
parser/lexer from the same grammar used by java tools.  As suggested by Ric,
a pre-processor might be the best way.
 
Thanks again,
R.G. 
 



  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Micheal J
Sent: Wednesday, June 15, 2005 8:06 AM
To: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Urgent: how to "include" a grammar defined in
aseparate file 


Rupinder,
 
Have a look here at the ANTLR project here and especially the annotation
tool. The author uses it to maintain a single tree parser grammar for
multiple walks. You can adapt it for single grammar and multiple languages
too. You would probably want to move to a one-grammar-per-*.g-file
arrangement for this to work smoothly.
 
http://storm.cs.unipi.gr/~anakreon/aspa.html
 
Incidentally, there is no guarantee that you will receive a response (let
alone a "satisfactory response") from any mailing list staffed by
volunteers. ;-)
 
 
Cheers,
 
Micheal
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Rupinder S. Gill
Sent: 15 June 2005 04:56
To: antlr-interest@antlr.org
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in
aseparate file 



(I posted a query a week ago but didn't receive a satisfactory response.) 
I have a grammar for logical-expressions from which I need to build the
following: 
- Java lexer and parser 
- C# lexer and parser 
- Two java tree-walkers 
- One C# tree-walkers 

The two java tree-walkers are in independent projects; both projects do
depend on the project that defines the grammar (and contains lexer and
parser).  C# lexer, parser and tree-walker can be in the same project.  I
want to keep only one copy of the common.g file (one containing parser and
lexer sections).  How do I this?

Grammar inheritance nor importVocab seem to be up to the task.  Or am I
missing something? 

Thanks, 
R.G. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050615/d6a62f0e/attachment.html
From open.zone at virgin.net  Wed Jun 15 08:11:50 2005
From: open.zone at virgin.net (Micheal J)
Date: Wed Jun 15 07:57:57 2005
Subject: [antlr-interest] Urgent: how to "include" a grammar defined
	inaseparate file 
In-Reply-To: <20050615144821.388D3DCC25@www.antlr.org>
Message-ID: <002401c571bc$8f385070$6402a8c0@hercules>

The annotation tool is a basic preprocessor.
 
Cheers,
 
Micheal

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Rupinder S. Gill
Sent: 15 June 2005 15:48
To: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Urgent: how to "include" a grammar defined
inaseparate file 


Thanks folks,
 
I figured out how to do the two independent tree-walkers and one common
lexer+parser .g file for java using exportVocab/importVocab (I just didn't
understand these options before).  Still need to se how to build C#
parser/lexer from the same grammar used by java tools.  As suggested by Ric,
a pre-processor might be the best way.
 
Thanks again,
R.G. 
 



  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Micheal J
Sent: Wednesday, June 15, 2005 8:06 AM
To: antlr-interest@antlr.org
Subject: RE: [antlr-interest] Urgent: how to "include" a grammar defined in
aseparate file 


Rupinder,
 
Have a look here at the ANTLR project here and especially the annotation
tool. The author uses it to maintain a single tree parser grammar for
multiple walks. You can adapt it for single grammar and multiple languages
too. You would probably want to move to a one-grammar-per-*.g-file
arrangement for this to work smoothly.
 
http://storm.cs.unipi.gr/~anakreon/aspa.html
 
Incidentally, there is no guarantee that you will receive a response (let
alone a "satisfactory response") from any mailing list staffed by
volunteers. ;-)
 
 
Cheers,
 
Micheal
 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Rupinder S. Gill
Sent: 15 June 2005 04:56
To: antlr-interest@antlr.org
Subject: [antlr-interest] Urgent: how to "include" a grammar defined in
aseparate file 



(I posted a query a week ago but didn't receive a satisfactory response.) 
I have a grammar for logical-expressions from which I need to build the
following: 
- Java lexer and parser 
- C# lexer and parser 
- Two java tree-walkers 
- One C# tree-walkers 

The two java tree-walkers are in independent projects; both projects do
depend on the project that defines the grammar (and contains lexer and
parser).  C# lexer, parser and tree-walker can be in the same project.  I
want to keep only one copy of the common.g file (one containing parser and
lexer sections).  How do I this?

Grammar inheritance nor importVocab seem to be up to the task.  Or am I
missing something? 

Thanks, 
R.G. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050615/f30756b4/attachment-0001.html
From gt54-antlr at cyconix.com  Wed Jun 15 08:08:27 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Wed Jun 15 08:08:34 2005
Subject: [antlr-interest] Using ANTLR with manually-built ASTs
In-Reply-To: <dd3a065f0506130604abf17a0@mail.gmail.com>
References: <42AD5D93.4010101@cyconix.com>
	<dd3a065f0506130604abf17a0@mail.gmail.com>
Message-ID: <42B0446B.4080205@cyconix.com>

Bryan Ewbank wrote:
> I think the key requirements are in the ANTLR manual (pdf, located on
> the website).

Thanks - there does seem to be enough to cover this. It became a lot 
more obvious when I ran the tool and read some code. The pdf manual is 
well hidden - I had to generate my own from the HTML.

Cheers

Paul

From ric.klaren at gmail.com  Wed Jun 15 09:23:48 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Jun 15 09:25:54 2005
Subject: [antlr-interest] Return of the development snapshots (including one
	for 2.7.5)
Message-ID: <42B05614.4010702@gmail.com>

Hi,

I patched up some rudimentary webpages this weekend. As a result the 
ANTLR 2.7.x development snapshots are available once more at a new url:

http://pts14043.pts.nl/antlr/

I also cut a snapshot of the 2.7.5 as per last weekend. Not 100% sure 
what fixes are all in it.

Changelogs of the old snapshots got mostly lost due to a bad sector on 
my backup cd :( Of all the files it had to be in.......

Cheers,

Ric

PS links on antlr.org still need updating
From lilincutzy at yahoo.com  Tue Jun 14 06:26:26 2005
From: lilincutzy at yahoo.com (Ilinca Denisa FRECUS)
Date: Wed Jun 15 13:34:02 2005
Subject: [antlr-interest] (no subject)
Message-ID: <20050614132626.69861.qmail@web30407.mail.mud.yahoo.com>

Hello,

I am trying to parse the following text with antlr:

ComponentA a;
a.methodA();

and I don't know how to check that the declared
variable is the one on which I call the operation (for
example something like:

ComponentA a;
b.methodA();

is not acceptable. )

How can I make a symbol table with antlr? Do I have to
traverse the CommonAST? How do I do this? (I don't
have acces to its children)

Thank you very much!

Ilinca Frecus


		
__________________________________ 
Discover Yahoo! 
Have fun online with music videos, cool games, IM and more. Check it out! 
http://discover.yahoo.com/online.html
From ewbank at gmail.com  Thu Jun 16 03:34:16 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Thu Jun 16 03:34:19 2005
Subject: [antlr-interest] (no subject)
In-Reply-To: <20050614132626.69861.qmail@web30407.mail.mud.yahoo.com>
References: <20050614132626.69861.qmail@web30407.mail.mud.yahoo.com>
Message-ID: <dd3a065f0506160334107f7e61@mail.gmail.com>

To be precise, you could make a symbol table using ANTLR's data
structures, but I don't think you want to.

ANTLR provides the tools to build and process trees based (almost)
exclusively on the syntax of the language; what you need is to build
an extra data structure - a symbol table - to contain the additional
information so you can detect and reject references to undefined
symbols (and, conversely, detect and reject redefinitions).

I say "almost" because you can use semantic predicates to drive
recognition, meaning that you can use your symbol table to have ANTLR
reject illegal symbols.  You still require a symbol table as an extra
data structure, managed by your action code, to track defined symbols.

On 6/14/05, Ilinca Denisa FRECUS <lilincutzy@yahoo.com> wrote:
> Hello,
> 
> I am trying to parse the following text with antlr:
> 
> ComponentA a;
> a.methodA();
> 
> and I don't know how to check that the declared
> variable is the one on which I call the operation (for
> example something like:
> 
> ComponentA a;
> b.methodA();
> 
> is not acceptable. )
> 
> How can I make a symbol table with antlr? Do I have to
> traverse the CommonAST? How do I do this? (I don't
> have acces to its children)
> 
> Thank you very much!
> 
> Ilinca Frecus
> 
> 
> 
> __________________________________
> Discover Yahoo!
> Have fun online with music videos, cool games, IM and more. Check it out!
> http://discover.yahoo.com/online.html
>
From gt54-antlr at cyconix.com  Thu Jun 16 04:49:35 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Jun 16 06:07:14 2005
Subject: [antlr-interest] Summary/Cheat Sheet?
In-Reply-To: <4.3.2.7.2.20050531153354.0b5cfef8@pop3.newtechlaw.com>
References: <4.3.2.7.2.20050531153354.0b5cfef8@pop3.newtechlaw.com>
Message-ID: <42B1674F.8050708@cyconix.com>

Gerald B. Rosenberg wrote:
> Found this all-to-brief syntax summary in an old non-Antlr mailing 
> list.  Anyone have something similar that is more complete?  In 
> particular, including summary descriptions of the LT, LA, $, #, ##, 
> n:TOKEN (variable reference) constructs. 

Did you manage to find anything? This would be really useful.

Paul

From gt54-antlr at cyconix.com  Fri Jun 17 04:20:23 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Fri Jun 17 04:20:35 2005
Subject: [antlr-interest] How much use is ANTLR for manipulating ASTs?
Message-ID: <42B2B1F7.8090900@cyconix.com>

I'm using ANTLR to process an AST (currently, just semantic checking for 
a simple C-like language, with scanning and tree construction in 
lex/yacc). Writing this code has got me thinking about what exactly 
ANTLR is buying me.

My grammar basically calls various methods at the nodes of the tree, 
storing results in the node, and passing information up the tree. However:

1) The tree structure itself is known to be correct because I wrote it 
myself from the front-end code. If the tree structure is known to be 
correct, is there any point in using ANTLR? I could just as easily (more 
easily, in fact) traverse the tree manually, and the required checking 
code is too complex to put in the grammar file.

2) I don't actually need to know what the tree structure is to do 
semantic checking. Having to specify the structure in ANTLR syntax then 
just becomes another potential failure point.

At some point I also need to do some simple transformations on the tree. 
Ok, I could do this with ANTLR, but it'll also be pretty simple just to 
do manual in-situ transformations of the tree, rather than generating an 
entire new tree.

Any thoughts?

Paul

From ganelin at mail.com  Fri Jun 17 08:16:47 2005
From: ganelin at mail.com (pganelin)
Date: Fri Jun 17 08:14:40 2005
Subject: [antlr-interest] BUG? lookahed and exception handler do not mix well
Message-ID: <42B2E95F.5070306@mail.com>

Summary:  

I was trying to wrap my own exception from semantic action into  
RecognitionException and I found the following problem. I do not 
understand how to resolve it properly. An example of
grammar file showing the issue is attached. For me it looks like a 
design bug for lookahead exception handling.

Description:

ANTLT generates the following exception handler for lookahead and the 
resulting code does not compile.


        catch ( IOException ex ) {
            if (inputState.guessing==0) {
                throw new RecognitionException ("IO exception");
            } else {
                throw ex ;
            }
        }

Without lookahead it would be just

        catch ( IOException ex ) {
                throw new RecognitionException ("IO exception");
        }
and it is exactly what I need.

I understand that idea of lookahead it to propagate exception and deal 
with them later, but it should propagate only ANTLR exception. While 
ANTLR is doing lookahead it does not call actions and so it cannot 
generate user defined exception. As a result catch clause is not 
required to propagate it because the exception can not be raised in the 
first place.

The ugly  solution I could see is attached as the second file. I do not 
like it because it circumvent  out of ANTLR provided mechanism. In case 
you have ten semantic actions in the rule you will need to write 10 
catch clause instead on single one.

BTW. I would propose in ANTLR 3.0 to add cause field to ANTLR exception  
constructors  to allow chained exception. (May be it is laready done. I 
only heard about 3.0 and never saw one)

PS. This is not an actual rule. I understand that I do not need 
lookahead here :-). It is used just for illustration.


================================example=================
header{
package com.equ;
import java.io.IOException;
}

class EquParser extends Parser;
options {
}


program
:
 |
    (IDENT) => IDENT { throw new IOException ("no file") ;}

;
exception
catch [ IOException ex ] { throw new RecognitionException ("IO exception");}

//----------------------------------------------------------------------------
class EquLexer extends Lexer;
//----------------------------------------------------------------------------

IDENT            :    ('a' .. 'z' )+        ;

 

===how to solve the problem =================
header{
package com.equ;
import java.io.IOException;
}

class EquParser extends Parser;
options {
}


program
:
 |
    (IDENT) => IDENT

{ try{throw new IOException ("no file") ;{ throw new 
RecognitionException ("IO exception");} }

;
 
//----------------------------------------------------------------------------
class EquLexer extends Lexer;
//----------------------------------------------------------------------------

IDENT            :    ('a' .. 'z' )+        ;

 

From ganelin at mail.com  Fri Jun 17 08:26:39 2005
From: ganelin at mail.com (pganelin)
Date: Fri Jun 17 08:24:22 2005
Subject: [antlr-interest] BUG? lookahed and exception handler do not mix well
Message-ID: <42B2EBAF.1010802@mail.com>

Summary:

I was trying to wrap my own exception from semantic action into
RecognitionException and I found the following problem. I do not
understand how to resolve it properly. An example of
grammar file showing the issue is attached. For me it looks like a
design bug for lookahead exception handling.

Description:

ANTLT generates the following exception handler for lookahead and the
resulting code does not compile.


        catch ( IOException ex ) {
            if (inputState.guessing==0) {
                throw new RecognitionException ("IO exception");
            } else {
                throw ex ;
            }
        }

Without lookahead it would be just

        catch ( IOException ex ) {
                throw new RecognitionException ("IO exception");
        }
and it is exactly what I need.

I understand that idea of lookahead it to propagate exception and deal
with them later, but it should propagate only ANTLR exception. While
ANTLR is doing lookahead it does not call actions and so it cannot
generate user defined exception. As a result catch clause is not
required to propagate it because the exception can not be raised in the
first place.

The ugly  solution I could see is attached as the second file. I do not
like it because it circumvent  out of ANTLR provided mechanism. In case
you have ten semantic actions in the rule you will need to write 10
catch clause instead on single one.

BTW. I would propose in ANTLR 3.0 to add cause field to ANTLR exception
constructors  to allow chained exception. (May be it is laready done. I
only heard about 3.0 and never saw one)

PS. This is not an actual rule. I understand that I do not need
lookahead here :-). It is used just for illustration.


================================example=================
header{
package com.equ;
import java.io.IOException;
}

class EquParser extends Parser;
options {
}


program
:
|
    (IDENT) => IDENT { throw new IOException ("no file") ;}

;
exception
catch [ IOException ex ] { throw new RecognitionException ("IO exception");}

//----------------------------------------------------------------------------
class EquLexer extends Lexer;
//----------------------------------------------------------------------------

IDENT            :    ('a' .. 'z' )+        ;



===how to solve the problem =================
header{
package com.equ;
import java.io.IOException;
}

class EquParser extends Parser;
options {
}


program
:
|
    (IDENT) => IDENT

{ try{throw new IOException ("no file") ;{ throw new
RecognitionException ("IO exception");} }

;

//----------------------------------------------------------------------------
class EquLexer extends Lexer;
//----------------------------------------------------------------------------

IDENT            :    ('a' .. 'z' )+        ;




From atripp at comcast.net  Fri Jun 17 17:55:14 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Jun 17 17:55:17 2005
Subject: [antlr-interest] C/C++ instrumentation tool
Message-ID: <42B370F2.6090800@comcast.net>

I'm looking for a C/C++ code instrumentation tool that will cause my 
program to watch for
every variable assignment and print out the variable and value whenever 
any variable is assigned
a value.  I don't see any gcc options to do that kind of code 
instrumentation, and I don't see a way
to have gdb do that.

Does anyone know of such a tool? Preferably something simple and free.

Or am I going to have to whip one up with ANTLR?

Andy
From Loring.G.Craymer at jpl.nasa.gov  Fri Jun 17 18:13:13 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Fri Jun 17 18:13:38 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <42B370F2.6090800@comcast.net>
References: <42B370F2.6090800@comcast.net>
Message-ID: <6.2.1.2.2.20050617180922.02b833f8@mail.jpl.nasa.gov>

http://www.aspectc.org/

This is exactly the type of problem for which program slicing 
(aspect-oriented programming) can provide solutions.  I've not used Aspect 
C++, but it should solve your problem.

--Loring


At 05:55 PM 6/17/2005, Andy Tripp wrote:
>I'm looking for a C/C++ code instrumentation tool that will cause my 
>program to watch for
>every variable assignment and print out the variable and value whenever 
>any variable is assigned
>a value.  I don't see any gcc options to do that kind of code 
>instrumentation, and I don't see a way
>to have gdb do that.
>
>Does anyone know of such a tool? Preferably something simple and free.
>
>Or am I going to have to whip one up with ANTLR?
>
>Andy


From atripp at comcast.net  Fri Jun 17 18:19:44 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Jun 17 18:19:46 2005
Subject: [antlr-interest] simple C code instrumentor?
Message-ID: <42B376B0.2000205@comcast.net>

I'm looking for a C/C++ code instrumentation tool that will cause my 
program to watch for
every variable assignment and print out the variable and value whenever 
any variable is assigned
a value.  I don't see any gcc options to do that kind of code 
instrumentation, and I don't see a way
to have gdb do that.

Does anyone know of such a tool? Preferably something simple and free.

Or am I going to have to whip one up with ANTLR?

Andy
From nbsherid at secsme.org.au  Fri Jun 17 20:04:33 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Fri Jun 17 20:04:35 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <42B370F2.6090800@comcast.net>
Message-ID: <000001c573b2$740ed830$0500a8c0@nigel>

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Andy Tripp
> Sent: Saturday, 18 June 2005 10:55 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] C/C++ instrumentation tool
> 
> I'm looking for a C/C++ code instrumentation tool that will cause my
> program to watch for
> every variable assignment and print out the variable and value whenever
> any variable is assigned
> a value.  I don't see any gcc options to do that kind of code
> instrumentation, and I don't see a way
> to have gdb do that.
> 
> Does anyone know of such a tool? Preferably something simple and free.
> 
> Or am I going to have to whip one up with ANTLR?
> 

Is this a special purpose instrumentation, or is it a one-off debugging
problem? Can you just wait for the value to change?

http://www.delorie.com/gnu/docs/gdb/gdb_30.html

How big is the scale of this instrumentation? Can you just manually
instrument with #ifdef/#enddef wrappers?

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435
 


From nbsherid at secsme.org.au  Fri Jun 17 22:32:08 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Fri Jun 17 22:32:06 2005
Subject: [antlr-interest] FW: Posting error: il-antlr-interest
Message-ID: <000801c573c7$120a53c0$0500a8c0@nigel>


Hey if someone has setup a google group as a sink for this list, can they at
least enable "Posting by anyone" so that all the list members do not get
this message every time they post!!?!

I get sick of vacation messages enough as it is!

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435
 

> -----Original Message-----
> From: noreply@googlegroups.com [mailto:noreply@googlegroups.com]
> Sent: Saturday, 18 June 2005 1:05 PM
> To: nbsherid@secsme.org.au
> Subject: Posting error: il-antlr-interest
> 
> You do not have permission to post to group il-antlr-interest. You may
> need to
> join the group before being allowed to post, or this group may not be open
> to
> posting.
> 
> Visit http://groups-beta.google.com/group/il-antlr-interest/about to join
> or learn more
> about who is allowed to post to the group.
> 
> Help on using Google Groups is also available at:
> http://groups-beta.google.com/support
-------------- next part --------------
An embedded message was scrubbed...
From: "Nigel Sheridan-Smith" <nbsherid@secsme.org.au>
Subject: RE: [antlr-interest] C/C++ instrumentation tool
Date: Sat, 18 Jun 2005 13:04:33 +1000
Size: 5311
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20050618/a50a9f17/attachment-0001.mht
From oscar_j_simpson at yahoo.com  Fri Jun 17 23:41:12 2005
From: oscar_j_simpson at yahoo.com (Oscar Simpson)
Date: Fri Jun 17 23:41:15 2005
Subject: [antlr-interest] Help getting familiar with ANTLR
Message-ID: <20050618064112.33895.qmail@web30807.mail.mud.yahoo.com>

Quickie background: My current project incorporates the SpiderMonkey
javascript engine to allow users to extend and enhance the functionality of
my app. While javascript is certainly capable for extending certain
functionality it is not suitable as a long term solution. In order to provide
a long term solution I have worked out a design for a language based on
ECMA-334 (C#) with significant extensions to delegates, exception handling,
switch/case statements with support for expressions and ranges, state
mechanisms, and several items specific to my application.

Over the years I've written several compilers with most having the lexer
based on an earlier compiler and the rest either generated from Bison (or
Bison++) or hand coded. Having hand coded a K&R compiler with extensions by
hand and dealing with using the Bison output in C++ I'm not looking forward
to doing either ever again. I've looked at several of the LALR, LL, and LR
parser generators and finally settled on ANTLR as it fits perfectly with
everything I'm looking for.

During my initial evaluation I used the 2.7.5 distro and used both the Java
1.3 and TinyC grammars. Between the FAQ, docs, and tutorials I'm slowly
coming up to speed in using ANTLR (as opposed to Bison) and so far I've
managed to be successful in modifying the Java 1.3 grammar to produce
expected results in the AST (and handle errors and very strict syntax
changes). I do however have a few questions concerning results I would like
to see.


1. Has anyone come up with a good approach for supporting #if/#else/#endif to
eliminate the need for a preprocessor?

2. Have the problems with using C++ and large grammars been fixed (i.e.
grammar size = 65536)? While not a problem at the moment I expect my grammar
to come close in size to the one for Java 1.5.

3. Is there an example dealing with parameterized classes? I know that both
the C++ and Java 1.5 grammars include this but with the entire grammar there
it's a little difficult isolating the innards that handle it.

4. In ANTLR is the operator precedence explicit or implied? I noticed that
the Java 1.3 grammar included the precedence level in the comments but there
didn't appear to an explicit declaration. If they are implicit by the order
of declaration is there a way to explicitly set the precedence?

***Note: From what I can tell the operator precedence in the AST is implicit
by order of inclusion - just want to make sure that's the case.



Most of these questions certainly come from the fact that I'm not up to speed
on ANTLR yet but I'm definitely getting the hang of it. I do have a few other
questions but I'm going to wait until I'm more familiar with ANTLR before I
post them.


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From nbsherid at secsme.org.au  Sat Jun 18 05:27:00 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Sat Jun 18 05:26:56 2005
Subject: [antlr-interest] Help getting familiar with ANTLR
In-Reply-To: <20050618064112.33895.qmail@web30807.mail.mud.yahoo.com>
Message-ID: <000301c57401$06e72c90$0500a8c0@nigel>


Hi Oscar, 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Oscar Simpson
> Sent: Saturday, 18 June 2005 4:41 PM
> To: ANTLRInterest
> Subject: [antlr-interest] Help getting familiar with ANTLR
> 
> 
> 4. In ANTLR is the operator precedence explicit or implied? I noticed that
> the Java 1.3 grammar included the precedence level in the comments but
> there
> didn't appear to an explicit declaration. If they are implicit by the
> order
> of declaration is there a way to explicitly set the precedence?
> 
> ***Note: From what I can tell the operator precedence in the AST is
> implicit
> by order of inclusion - just want to make sure that's the case.
> 

LL(k) works by descending into sub-rules, so generally speaking you do
precedence by which order the rules refer to each other. E.g.

expr: and_expr (OR and_expr)* ;
and_expr: literal (AND literal)* ;
literal: LIT;

...

OR: "|";
AND: "&";
LIT: ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9');


Ensures that '&' has higher precedence compared to '|'. This is because the
parser is forced to match any '&' before any '|'. If you put some precedence
operators in the same rule, then they will match together. 

I picture it in my head as if I am traversing through the branches of a
tree. "expr" must match non-terminal "and_expr" first, and thus, it attempts
to match non-terminal "literal" (and consequently, terminal "LIT"), and then
optionally terminal "AND" (followed by another literal, followed by "AND",
etc) before returning to the "expr" rule and matching terminal "OR". 

As for left-to-right and right-to-left associativeness, have a look thru the
list archive (2-3 months ago?) to see how people have handled that with tree
parsers and normal parsers (with automatic AST construction). The way you
structure your rules (with ^ markers in normal parser) alters the way the
tree is constructed.

expr: and_expr (^OR and_expr)* ;
and_expr: literal (^AND literal)* ;
literal: LIT;


... will construct (I think?) :


a&b&c|d&e&f|g&h  

              |
            /   \
          /       \
        /           \
       |             & 
     /   \          / \
   /       \        g h
   &        & 
 /   \     ...
 &    c 
/ \
a b


Because the root keeps on getting promoted each time the optional part
matches... 

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435


From atripp at comcast.net  Sat Jun 18 07:19:15 2005
From: atripp at comcast.net (Andy Tripp)
Date: Sat Jun 18 07:19:19 2005
Subject: [antlr-interest] C/C++ instrumentation tool
Message-ID: <42B42D63.8000107@comcast.net>

>
>
>Is this a special purpose instrumentation, or is it a one-off debugging
>problem? Can you just wait for the value to change?
>
>http://www.delorie.com/gnu/docs/gdb/gdb_30.html
>
>How big is the scale of this instrumentation? Can you just manually
>instrument with #ifdef/#enddef wrappers?
>

I've got Java and C++ versions of the same program, and when they 
differ, I need to track down the problem..
It's complex image recognition stuff which I don't fully understand, so 
it takes me forever even
to figure out what function and variable are causing the problem. So I 
really do need an automated way
to print out a variable/value every time some value is assigned. I'll do 
that for both the Java and
C++ versions and I'll be able to compare the two and see where they 
start to differ.

I looked briefly at the aspect-oriented stuff, and it looks to me like 
it's probably easier
to just do it with ANTLR. It should be easy, right?

Andy


From atripp at jazillian.com  Fri Jun 17 17:49:57 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Sat Jun 18 09:09:02 2005
Subject: [antlr-interest] How much use is ANTLR for manipulating ASTs?
Message-ID: <42B36FB5.2080202@jazillian.com>

>
>
>I'm using ANTLR to process an AST (currently, just semantic checking for 
>a simple C-like language, with scanning and tree construction in 
>lex/yacc). Writing this code has got me thinking about what exactly 
>ANTLR is buying me.
>
>My grammar basically calls various methods at the nodes of the tree, 
>storing results in the node, and passing information up the tree. However:
>
>1) The tree structure itself is known to be correct because I wrote it 
>myself from the front-end code. If the tree structure is known to be 
>correct, is there any point in using ANTLR? I could just as easily (more 
>easily, in fact) traverse the tree manually, and the required checking 
>code is too complex to put in the grammar file.
>
>2) I don't actually need to know what the tree structure is to do 
>semantic checking. Having to specify the structure in ANTLR syntax then 
>just becomes another potential failure point.
>
>At some point I also need to do some simple transformations on the tree. 
>Ok, I could do this with ANTLR, but it'll also be pretty simple just to 
>do manual in-situ transformations of the tree, rather than generating an 
>entire new tree.
>
>Any thoughts?
>
>Paul
>

See Terence's "Translators should use Tree Grammars" article:
http://www.antlr.org/article/1100569809276/use.tree.grammars.tml
for all the reasons why using ANTLR to walk your AST is the best thing 
since sliced bread.

See my lttle thing titled "The Problem with Tree Walkers":
http://jazillian.com/antlr/trees.html for my reasons for prefering to 
just walk ASTs by hand,
rather than using ANTLR treewalkers.

See a long thread titled "Translators should use tree walkers" back in 
November...
http://www.antlr.org/pipermail/antlr-interest/2004-November/thread.html
where I take a brutal beating for refusing to see why ANTLR treewalkers 
are better
than walking an AST "by hand".

After all that, you know my opinion: if you've already got an AST, just 
write a little code
to walk it. Embedding your actions in an ANTLR treewalker won't buy you 
anything, IMO.

Andy
From craigmain at worldonline.co.za  Sat Jun 18 02:35:39 2005
From: craigmain at worldonline.co.za (Craig Main)
Date: Sat Jun 18 09:09:03 2005
Subject: [antlr-interest] Repeating Group of Statements (Weird)
Message-ID: <20050618092705.71A9B63B3@ctb-mesg6.saix.net>

Hi,

I was hoping for a little assistance with my AST.
In the past I have always used antlr without the AST trees, and am now
trying to incorporate a tree in my expression parser.

The attached grammar is a simple expression parser.
My problem with the simple example is that the AST refuses to recognise more
than one line of input, and I cannot figure out why.

When I parse 'statement' I get the following.

For the following input:
const R = 1900;
BOB = (45+900);

I get the following tree. I cannot work out why the next line (BOB = ...) is
ignored.
( = const R 1900 )


The following grammar is a simple calculator

options {
	language = "CSharp";
}

class CalcLexer extends Lexer;


WS      : ( ' ' | '\t' | '\n' { newline(); }
        | '\r' ) { $setType(Token.SKIP); }
        ;

LPAREN  : '(' ;
RPAREN  : ')' ;
STAR    : '*' ;
SLASH   : '/' ;
DASH    : '^' ;
PLUS    : '+' ;
MINUS   : '-' ;
SEMI    : ';' ;
ASSIGN  : '=' ;

protected
DIGIT   : '0'..'9'|'.' ;

NUM     
options {
   paraphrase = "a numeric value";
}
        : (DIGIT)+ ;

ID
options {
  testLiterals = true;
  paraphrase = "an identifer";
}
        :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;

class CalcParser extends Parser;
options { buildAST = true; }

statement      : (assignment SEMI! | const_decl SEMI!)* ;
assignment     : ID ASSIGN^ expression ;
const_decl     : "const" ID ASSIGN^ NUM;

expression     : mexpr ((PLUS^|MINUS^) mexpr)* ;
mexpr          : dexpr ((STAR^|SLASH^) dexpr)* ;
dexpr          : atom (DASH^ atom)* ;
atom           : NUM
               | LPAREN! expression RPAREN!
               | ID
               ;

class CalcTreeParser extends TreeParser;

statement
        : (assignment | const_decl)*
        ;

assignment : #(ASSIGN expression) ;
const_decl : #("const" ID ASSIGN NUM) ;

expression returns [double r] { double a, b; r = 0; }
        : #(PLUS a=expression b=expression ) {r=a+b;}
        | #(MINUS a=expression b=expression ) {r=a-b;}
        | #(DASH a=expression b=expression ) {r=System.Math.Pow(a,b);}
        | #(STAR a=expression b=expression ) {r=a*b;}
        | #(SLASH a=expression b=expression ) {r=a/b;}
        | n:NUM {r=(double)double.Parse(n.getText());}
        | i:ID {r = 0;}
        ;



From new_open_close at yahoo.com  Fri Jun 17 08:48:59 2005
From: new_open_close at yahoo.com (None None)
Date: Sat Jun 18 09:09:19 2005
Subject: [antlr-interest] warning:lexical nondeterminism question
Message-ID: <20050617154859.17055.qmail@web32613.mail.mud.yahoo.com>

Hello,

I'm new to antlr and was trying to figure out why a
particular pattern was generating a nondeterminism
warning.  The grammar is:


options {
          k=4;
        }

protected LATLON : DMS "," DMS | FLOAT "," FLOAT;
protected DMS    : (DIGIT)? DIGIT DIGIT ":" DIGIT
DIGIT ":" DIGIT DIGIT "." DIGIT;
protected FLOAT  : (SIGN)? (DIGIT)+ ( "." (DIGIT)* )?
;
protected SIGN   : "+" | "-";
protected DIGIT  : '0'..'9';


And this generates a warning:


ANTLR Parser Generator   Version 2.7.5 (20050615)  
1989-2005 jGuru.com
test.g:7: warning:lexical nondeterminism between alts
1 and 2 of block upon
test.g:7:     k==1:'0'..'9'
test.g:7:     k==2:'0'..'9'
test.g:7:     k==3:'0'..'9'
test.g:7:     k==4:'0'..'9'


I think the problem is the DMS rule, which starts
with:

      (DIGIT)? DIGIT DIGIT ":"

If it's changed to:

      DIGIT DIGIT DIGIT ":"

that stops the warning.  Why would making the first
token optional be a problem? I would think it would be
unique by the fourth token? Thanks.


		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From nbsherid at secsme.org.au  Sat Jun 18 13:31:04 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Sat Jun 18 13:31:02 2005
Subject: [antlr-interest] warning:lexical nondeterminism question
In-Reply-To: <20050617154859.17055.qmail@web32613.mail.mud.yahoo.com>
Message-ID: <000001c57444$a6abeb10$0500a8c0@nigel>


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of None None
> Sent: Saturday, 18 June 2005 1:49 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] warning:lexical nondeterminism question
> 
> ANTLR Parser Generator   Version 2.7.5 (20050615)
> 1989-2005 jGuru.com
> test.g:7: warning:lexical nondeterminism between alts
> 1 and 2 of block upon
> test.g:7:     k==1:'0'..'9'
> test.g:7:     k==2:'0'..'9'
> test.g:7:     k==3:'0'..'9'
> test.g:7:     k==4:'0'..'9'
> 
> 
> I think the problem is the DMS rule, which starts
> with:
> 
>       (DIGIT)? DIGIT DIGIT ":"
> 
> If it's changed to:
> 
>       DIGIT DIGIT DIGIT ":"
> 
> that stops the warning.  Why would making the first
> token optional be a problem? I would think it would be
> unique by the fourth token? Thanks.
> 

Are all your lexer rules protected? Try switching some out as there may be a
conflict between DMS and FLOAT. 

Alternatively try k=5... I think you need at least one more look-ahead to
distinguish, because of the way ANTLR grabs the characters in the lexer.

Another option is to make "(DIGIT)? DIGIT DIGIT" into "DIGIT DIGIT
(DIGIT)?". I suspect that will also make a difference, helping to reduce 'k'
as well (for performance).

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435
 


From craig at palantir.co.za  Sat Jun 18 23:48:20 2005
From: craig at palantir.co.za (Craig Main)
Date: Sat Jun 18 23:39:53 2005
Subject: [antlr-interest] FW: Repeating Group of Statements
Message-ID: <20050619063950.B0455DC75E@www.antlr.org>


Hi,

I was hoping for a little assistance with my AST.
In the past I have always used antlr without the AST trees, and am now
trying to incorporate a tree in my expression parser.

The attached grammar is a simple expression parser.
My problem with the simple example is that the AST refuses to recognise more
than one line of input, and I cannot figure out why.

When I parse 'statement' I get the following.

For the following input:
const R = 1900;
BOB = (45+900);

I get the following tree. I cannot work out why the next line (BOB = ...) is
ignored.
( = const R 1900 )


The following grammar is a simple calculator

options {
	language = "CSharp";
}

class CalcLexer extends Lexer;


WS      : ( ' ' | '\t' | '\n' { newline(); }
        | '\r' ) { $setType(Token.SKIP); }
        ;

LPAREN  : '(' ;
RPAREN  : ')' ;
STAR    : '*' ;
SLASH   : '/' ;
DASH    : '^' ;
PLUS    : '+' ;
MINUS   : '-' ;
SEMI    : ';' ;
ASSIGN  : '=' ;

protected
DIGIT   : '0'..'9'|'.' ;

NUM     
options {
   paraphrase = "a numeric value";
}
        : (DIGIT)+ ;

ID
options {
  testLiterals = true;
  paraphrase = "an identifer";
}
        :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;

class CalcParser extends Parser;
options { buildAST = true; }

statement      : (assignment SEMI! | const_decl SEMI!)* ;
assignment     : ID ASSIGN^ expression ;
const_decl     : "const" ID ASSIGN^ NUM;

expression     : mexpr ((PLUS^|MINUS^) mexpr)* ;
mexpr          : dexpr ((STAR^|SLASH^) dexpr)* ;
dexpr          : atom (DASH^ atom)* ;
atom           : NUM
               | LPAREN! expression RPAREN!
               | ID
               ;

class CalcTreeParser extends TreeParser;

statement
        : (assignment | const_decl)*
        ;

assignment : #(ASSIGN expression) ;
const_decl : #("const" ID ASSIGN NUM) ;

expression returns [double r] { double a, b; r = 0; }
        : #(PLUS a=expression b=expression ) {r=a+b;}
        | #(MINUS a=expression b=expression ) {r=a-b;}
        | #(DASH a=expression b=expression ) {r=System.Math.Pow(a,b);}
        | #(STAR a=expression b=expression ) {r=a*b;}
        | #(SLASH a=expression b=expression ) {r=a/b;}
        | n:NUM {r=(double)double.Parse(n.getText());}
        | i:ID {r = 0;}
        ;




From craig at palantir.co.za  Sun Jun 19 00:43:31 2005
From: craig at palantir.co.za (Craig Main)
Date: Sun Jun 19 00:35:03 2005
Subject: [antlr-interest] FW: Expression Parser with functions,
Message-ID: <20050619073500.DE78CDC75E@www.antlr.org>

 

Hi,

 

I have a simple grammar that I am struggling with.

I am trying to figure out how to parse (obtain values for) the expression
arguments in the function call.

 

The rule: | m:FUNC arguments  {r = 0; // get the arguments somehow}

I am trying to work out how I can use the tree to put the list of resulting
arguments into an array of some kind.

 

I am struggling to get to terms with the tree. 

It is easier to do this without making use of the tree at all. Is that a
better approach? 

Maybe I should leave out the tree altogether.

 

 

options {

       language = "CSharp";

}

 

class CalcLexer extends Lexer;

 

 

WS      : ( ' ' | '\t' | '\n' { newline(); }

        | '\r' ) { $setType(Token.SKIP); }

        ;

 

LPAREN  : '(' ;

RPAREN  : ')' ;

STAR    : '*' ;

SLASH   : '/' ;

DASH    : '^' ;

PLUS    : '+' ;

MINUS   : '-' ;

SEMI    : ';' ;

ASSIGN  : '=' ;

COMMA   : ',' ;

 

protected

DIGIT   : '0'..'9'|'.' ;

 

NUM     

options {

   paraphrase = "a numeric value";

}

        : (DIGIT)+ ;

 

ID

options {

  testLiterals = true;

  paraphrase = "an identifer";

}

        :     ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*

;

 

class CalcParser extends Parser;

options { 

   k = 2;

   buildAST = true; 

}

tokens {

   BLOCK;

   FUNC;

   DECL;

}

statement      : (stmt)* 

                 {#statement = #([BLOCK, "BLOCK"], #statement);}

               ;

               

stmt           : assignment SEMI! | const_decl SEMI! ;

assignment     : ID ASSIGN^ expression ;

const_decl     : "const" ID ASSIGN^ NUM;

 

expression     : mexpr ((PLUS^|MINUS^) mexpr)* ;

mexpr          : dexpr ((STAR^|SLASH^) dexpr)* ;

dexpr          : atom (DASH^ atom)* ;

atom           : NUM

               | LPAREN! expression RPAREN!

               | n:ID^ {#n.setType(DECL);}

               | m:ID^ LPAREN! (expression)? (COMMA expression)* RPAREN!
{#m.setType(FUNC);}

               ;

 

class CalcTreeParser extends TreeParser;

 

statement

        : #(BLOCK (assignment | const_decl)*)

        ;

 

assignment : #(ASSIGN expression) ;

const_decl : #("const" ID ASSIGN NUM) ;

 

expression returns [double r] { double a, b; r = 0; }

        : #(PLUS a=expression b=expression ) {r=a+b;}

        | #(MINUS a=expression b=expression ) {r=a-b;}

        | #(DASH a=expression b=expression ) {r=System.Math.Pow(a,b);}

        | #(STAR a=expression b=expression ) {r=a*b;}

        | #(SLASH a=expression b=expression ) {r=a/b;}

        | n:NUM {r=(double)double.Parse(n.getText());}

        | i:DECL {r = 0;}

        | m:FUNC arguments  {r = 0;}

        ;

 

arguments :

        LPAREN (expression)? (COMMA expression)* RPAREN

         ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050619/2e07e1d6/attachment-0001.html
From octavian_nita_2004 at yahoo.com  Sun Jun 19 01:26:49 2005
From: octavian_nita_2004 at yahoo.com (Octavian Nita)
Date: Sun Jun 19 01:26:53 2005
Subject: [antlr-interest] warning:lexical nondeterminism question
In-Reply-To: <20050617154859.17055.qmail@web32613.mail.mud.yahoo.com>
Message-ID: <20050619082650.49281.qmail@web54209.mail.yahoo.com>

Hello everyone!

I've read Nigel's answer to the question, and I
totally agree with it.

My first thought was indeed to try to change

    (DIGIT)? DIGIT DIGIT
to
    DIGIT DIGIT (DIGIT)?

because this is mere syntax, and not semantics; you
actually need 'at least 2 digits, but 3 is also ok, I
have something else'; the parser is not the place to
worry about 'the meaning of things' (semantics).

What I am trying to say is that I think you had in
mind what that rule (sentence) means and now how to
recognize it, while parsing is just that: how to
recognize at least 2 and at most 3 digits. Later I
think is the time to ask yourself whether you have 2
or 3 digits...

Of course, my thoughts may be wrong and also my
explanation, so I do apologise if I am mumbling
without a sense...

Anyway, I think Nigel's answer is more complete and
better than mine (it actually brings out solutions,
and not theory); these were just thoughts...

With respect,
Tavi



		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From scott at javadude.com  Sun Jun 19 07:39:34 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Jun 19 07:39:56 2005
Subject: [antlr-interest] FW: Expression Parser with functions,
In-Reply-To: <20050619073500.DE78CDC75E@www.antlr.org>
Message-ID: <200506191531.j5JFVZ78018192@s2.eroute.net>

Personally, I don't use trees for expression parsers. Trees are useful if
there's some transformation you want to do on the result or you have some
forward references to resolve, but if the expression language is
straightforward, I'd just do it in the parser.
 
Later,
-- Scott


I am struggling to get to terms with the tree. 

It is easier to do this without making use of the tree at all. Is that a
better approach? 

Maybe I should leave out the tree altogether.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050619/3ffb395a/attachment.html
From scott at javadude.com  Sun Jun 19 16:33:00 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Jun 19 16:33:09 2005
Subject: [antlr-interest] antlreclipse 4.0.0.b1
In-Reply-To: <81EFB02B4F41C34192AD7BEFE55007501D2F08@mail-x.ad.life.unsw.edu.au>
Message-ID: <200506200025.j5K0Ow78014788@s2.eroute.net>

I just posted the 4.0.0.b1 release of the ANTLR Eclipse plugin.

See http://antlreclipse.sourceforge.net for details on installation

Enjoy!
-- Scott Stanchfield

Note the big changes are:
* grammar level debugging
* bug fix for tab char in Eclipse 3.1
* all antlr command-line options are available via grammar property page
* "Antlers" icon on project
* Auto-add of antlr.jar ref to antlr projects

Unfortunately a late change in Eclipse 3.1 broke the breakpoint setting via
the eclipse editor ruler. I'm looking into it. You can still set breakpoints
via the Run menu. This does not affect Eclipse 3.02 operation.

NOTE: The antlr included with this is an unofficial pre-release of ANTLR
2.7.6. Ter hasn't integrated this yet (3.0 is keeping him busy). The only
changes for 2.7.6 are:

* addition of JSR-45 SMAP generation for grammar-level debugging
* fixed classloading for application servers
* added system property to prevent System.exit calls from antlr

(The XML support I've mentioned is not in ANTLR; I've created an ANTLR
offshoot called ANTXR that will be strictly for XML processing with some
modified grammar syntax that's more XML-like.)

Let me know if there are any questions or problems!
-- Scott


From jeric10 at hotmail.com  Sun Jun 19 21:34:08 2005
From: jeric10 at hotmail.com (Eric Nelson)
Date: Sun Jun 19 21:34:12 2005
Subject: [antlr-interest] same grammar?  advanced tree manipulation?
Message-ID: <BAY104-F33BF662FF338129BC0A49AB9E90@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050619/a815b24a/attachment.html
From suneel.chinchanikar at xecomit.com  Mon Jun 20 00:23:07 2005
From: suneel.chinchanikar at xecomit.com (Suneel Chinchanikar)
Date: Mon Jun 20 00:33:24 2005
Subject: [antlr-interest] Boolean and Arithmetic expression difficulty
Message-ID: <EIEDJHFDIIPCDFJFFGAGOEJGCAAA.suneel.chinchanikar@xecomit.com>

Hello all,

I am building a simple expression parser, which needs to understand general
boolean expressions similar to the following:

( ( ( 3 + 5 ) == (6 + 2) ) OR ( (5 - 3) == ( 1 + 1) ) ) AND ( ( 1 + 9 ) ==
( 3 + 7 ) )

My main difficulty is that an arithmetic expression can be surrounded by
brackets and a boolean expression can also be surrounded by brackets.

I have tried the following grammar.

I am getting nondeterminism error on the LB token.

Can somebody help?

Thanks
Suneel

=====================

options {
	language = "CSharp";
}

class reqdFields extends Parser;
options {
	buildAST = true;	// uses CommonAST by default
}

rule: logical_or_exp SEMI!;

logical_or_exp: logical_and_exp (OR^ logical_and_exp)*
		;

logical_and_exp: bool_term (AND^ bool_term)*
	         ;

bool_term: LB! logical_or_exp RB!
  |	plus_minus_exp cond_operator plus_minus_exp
  |	bool_field
  ;

plus_minus_exp: mult_div_exp (PLUS_MINUS^ mult_div_exp)*
			  ;

mult_div_exp : arith_term (MULT_DIV^ arith_term)*
	         ;

arith_term	: LB! plus_minus_exp RB!
	  	|	REAL
  		;

bool_field : TRUE | FALSE ;

cond_operator : EQUALS ;

class reqdFieldsLexer extends Lexer;

WS	:	(' '
	|	'\t'
	|	'\n'
	|	'\r')
		{ _ttype = Token.SKIP; }
	;

PLUS_MINUS :'+'|'-';

MULT_DIV :'*'|'/';

TRUE : "TRUE" ;
FALSE : "FALSE" ;

REAL: INT(DOT! INT!)?;

protected
DIGIT
	:	'0'..'9'
	;

protected
INT	:	(DIGIT)+
	;

DOT : "." ;

AND: "AND"
	;
OR : "OR" ;

LB : '(' ;
RB : ')';

EQUALS: "==" ;

SEMI : 	';' ;

=======================



This message was checked by MailScan for WorkgroupMail.
www.workgroupmail.com 

From geiroves at online.no  Mon Jun 20 01:30:36 2005
From: geiroves at online.no (Geir Ove Skjaervik)
Date: Mon Jun 20 01:30:36 2005
Subject: [antlr-interest] Boolean and Arithmetic expression difficulty
In-Reply-To: <EIEDJHFDIIPCDFJFFGAGOEJGCAAA.suneel.chinchanikar@xecomit.com>
Message-ID: <000001c57572$58863880$0100a8c0@rexii>

Hello,

This is the answer I posted a few days ago to another user: I think this
grammar example will help you understand how to parse the nested
paranthesis you need to process in your grammar.

Geir Ove

Earlier posting:

The parser is built up from rules: Each rule translates into a method in
the underlying language (Java or C#). Rules refers to other rules. Each
rule processes the structure of your grammar until the final rule
processes the very atoms (leaves) for your grammar: 

A rule has the form:

start
	: PROGRAM^ statementList END
	;


I will assume a trivial grammar of expressions to try to give you an
idea of how nested paranthesis "(" and ")" are handled for you: The same
of course applies to nested curlys.

The clue below is that makes this parser accept expressions with nested
paranthesis, is tha that ultimately, the rule factor has a subrule that
accepts LPAREN expression RPAREN. The parser will recursievly call your
factor and expression rules until all nested paranthesis has been
parsed.

NOTE: LPAREN PLUS and so on are defined in your lexer:

LPAREN : '(' ;




Start
	// NOTE: Importan to have a Start Rule that creates a Tree Root
(the ^ after PROGRM creates a Tree Node: )
	// in this case the Root where the complete parse tree will be
built under.

	: PROGRAM^ statementList END
	;

statmentList
	: (expression SEMI!)*
	;

expression
	: simpleExpression ((GT^ | LT^ | EQUALS^) expression)?  
	;	

simpleExpression throws GeosCalculatorParsingException
	:  term ((PLUS^ | MINUS^) simpleExpression)?
	;

term
	: power ((MUL^ | DIV^) term)?
	;


power
	: factor (POW^ power)? 
	;


factor 
	: NUMBER
		{
			// Insert some action to interpret the number
		}
	| LPAREN^ expression RPAREN! 
	;



Hope there aren't to many errors in the above. And hope it helps,
allthough I feel with you: The ANTLR docs are not for beginners ....


Geir Ove

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Ramon V. del
Rosario
Sent: 13. juni 2005 09:37
To: antlr-interest@antlr.org
Subject: [antlr-interest] newbie: how to use parse rule and nested curly


Hi, am trying to parse bind config file but is
struggling to understand how antlr parse rule work.
right now i'm just using antlr to tokenise the
file....
using a counter to parse nested { {}; }; sort of
structure but has been reading the ref manual and it 
seen the parse rule should be able to parse such a
thing easily. but can't find much notes on how to
create
the parser except the calculator.

can we create a our own object when a parse rule is
confirm? eg when acl block is found then i can

ACL a = new ACL($getText());
while ($hasNext()
	a.addElement($getText());

thanks for reading

----- sample bind config ------
acl xyz-slaves {
160.9.201.3;
};

options {
directory "/etc";
allow-transfer { xyz-slaves; localhost; };
};

--------- t.g ------------
class P extends Parser;

// how do we use the parse rule ???
document : (acl | WORDSTRING) + EOF;

acl : ACL named_block ;
opt : OPT named_block ;

named_block : WORDSTRING LPAREN (named_block |
WORDSTRING)* RPAREN SEMICOLON ;
	
class L extends Lexer;

options {
caseSensitive=false;
caseSensitiveLiterals=false;
k=7;
}

LPAREN : '{' ;

RPAREN : '}' ;

SEMICOLON : ';' ;

ACL : "acl";

OPT : "options";

WORDSTRING : (WORD | STRING)+ ;
						
protected	
STRING : '"'! (~'"')+ '"'! 	
		| '\''! (~'\'')+ '\''! ;
		
protected
WORD : ( ALPHA | INT | SYM )+ ;

protected
ALPHA : ('a'..'z')+ ;

protected
INT : ('0'..'9')+;

protected
SYM : ('.' | '!' | '=' | '_' | '/')+;

WS	:	(	' '
		|	'\t'
		|	'\r' '\n' { newline(); }
		|	'\n' { newline(); }
		)
		{$setType(Token.SKIP);}	
	;


		
__________________________________ 
Discover Yahoo! 
Find restaurants, movies, travel and more fun for the weekend. Check it
out! 
http://discover.yahoo.com/weekend.html 



From gt54-antlr at cyconix.com  Mon Jun 20 02:32:24 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Jun 20 02:32:33 2005
Subject: [antlr-interest] Help getting familiar with ANTLR
In-Reply-To: <000301c57401$06e72c90$0500a8c0@nigel>
References: <000301c57401$06e72c90$0500a8c0@nigel>
Message-ID: <42B68D28.3040804@cyconix.com>

Nigel Sheridan-Smith wrote:

>>4. In ANTLR is the operator precedence explicit or implied? I noticed that
>>the Java 1.3 grammar included the precedence level in the comments but
>>there
>>didn't appear to an explicit declaration. If they are implicit by the
>>order
>>of declaration is there a way to explicitly set the precedence?
>>
>>***Note: From what I can tell the operator precedence in the AST is
>>implicit
>>by order of inclusion - just want to make sure that's the case.

In addition to Nigel's comments - for the AST, presumably you're 
referring to java.tree.g? There's no precedence specified in this file 
because the AST is already presumed to be correct: the precedence is 
specified within the structure of the input tree itself. You're not 
cheking the AST for 'correctness'; you're just giving the tree walker 
enough information to walk the tree.

Paul

From gt54-antlr at cyconix.com  Mon Jun 20 02:46:46 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Jun 20 02:46:53 2005
Subject: [antlr-interest] How much use is ANTLR for manipulating ASTs?
In-Reply-To: <42B36FB5.2080202@jazillian.com>
References: <42B36FB5.2080202@jazillian.com>
Message-ID: <42B69086.3080505@cyconix.com>

Thanks. I've already read Ter's article (several times), and I'm slowly 
working my way through the rest of it...

Cheers

Paul

From ewbank at gmail.com  Mon Jun 20 02:48:17 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 02:48:21 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <42B42D63.8000107@comcast.net>
References: <42B42D63.8000107@comcast.net>
Message-ID: <dd3a065f05062002481ed6c3f2@mail.gmail.com>

> I've got Java and C++ versions of the same program, and when they
> differ, I need to track down the problem.

Do you want to instrument every assignment so that
file/line/value/variable is displayed?  That sounds a bit invasive if
you instrumenet the objects - really the only way to get at the
post-assignment values.  On the other hand, hijacking assignment and
just value assigned might be much simpler.

Using ANTLR to instrument all "=" assignments should work, and allow a
diff of the output streams to show you where the programs diverge
(assuming they are *identical* implementations, rather than the same
algorithm).  I've done this kind of instrumentation before (with sed,
or with vi) and it is quite helpful.

Using ANTLR to instrument all setter methods so they they report the
value of an object member after modification is probably fairly
difficult, as just recognizing setter functions is hard.

As a third option, using ANTLR to transform either C++ or java into a
gdb input script that watches the variables might be easy - I've never
thought about doing that, but it might be useful for what you are
describing.

Sorry to wander a bit, but I don't understand how you are considering
using ANTLR to address the problem you raise.
From gt54-antlr at cyconix.com  Mon Jun 20 02:51:14 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Jun 20 02:51:20 2005
Subject: [antlr-interest] Example code with multiple AST passes?
Message-ID: <42B69192.9050500@cyconix.com>

Anyone know if there's a code example which does multiple passes through 
a single AST?

Thanks -

Paul

From ewbank at gmail.com  Mon Jun 20 03:09:20 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 03:09:22 2005
Subject: [antlr-interest] Repeating Group of Statements (Weird)
In-Reply-To: <20050618092705.71A9B63B3@ctb-mesg6.saix.net>
References: <20050618092705.71A9B63B3@ctb-mesg6.saix.net>
Message-ID: <dd3a065f05062003094e7582a8@mail.gmail.com>

There is a mismatch in the parser and the tree parser for const_decl nodes...

Parser generates const_decl with ASSIGN as the root node here:
        const_decl : "const" ID ASSIGN^ NUM;

Tree parser expects "const" as the root node here: 
        const_decl : #("const" ID ASSIGN NUM) ;

This means that the tree parser will "correctly" match a sequence of
zero statements, due to the "*" in the topmost production for the tree
parser.

I think you also need to have "EOF" at the end of the top-most parser
rule, but that may not be required, here:
    class CalcParser extends Parser;
    options { buildAST = true; }
    statement : (assignment SEMI! | const_decl SEMI!)* EOF; // <-- here
From craig at palantir.co.za  Mon Jun 20 03:07:14 2005
From: craig at palantir.co.za (Craig Main)
Date: Mon Jun 20 03:13:26 2005
Subject: [antlr-interest] Basic Grammar (Literal / Lexer)
Message-ID: <20050620101322.ACD45DCC21@www.antlr.org>

Hi,

 

I have a basic grammar with conditional statements specified as follows.

Hopefully I am on the right track here.

I am creating a simple expression and rule parser.

 

I have specified the logicalOr as LogicalAnd ("or" LogicalAnd)*

 

When I try and put the literal "or" in the lexer (where one assumes it
should be) I get a non determinism between or and an identifier (which is a
c style identifier). What is the correct way to specify the literal "or"
without interfering with the other lexer elements, or should the "or" remain
in the parser?

 

Regards

Craig.

 

 

rules                   : (statement STATEMENT_SEP)* EOF

                        ;

statement               : assignment_statement 

                        | constant_declaration

                        | condition

                        ;

assignment_statement    : ID ASSIGN expression 

                        ;

constant_declaration    : "const" ID ASSIGN atom

                        ;

condition               : "if" LPAREN! conditional_expression RPAREN!
statement

                                  (// CONFLICT: the old "dangling-else"
problem...

                                       //           ANTLR generates proper
code matching

                                       //              as soon as possible.
Hush warning.

                                       options {

                                             warnWhenFollowAmbig = false;

                                       }

                                   : (STATEMENT_SEP)? "else"! statement

                                  )?

                        ;

conditional_expression  : logicalOr

                        ;

logicalOr               : logicalAnd ("or" logicalAnd)*

                        ;

logicalAnd              : equality ("and" equality)*

                        ;

equality                : relational ((EQUAL | NOT_EQUAL) relational)*

                        ;

relational              : expression

                          (( LTHAN

                          |  GTHAN

                          |  LTE

                          |  GTE) expression)*

                        ;

expression              : term ((PLUS|MINUS) term)*

                        ;

term                    : factor ((MULTIPLY|DIVIDE) factor)*

                        ;

factor                  : atom (DASH atom)*

                        ;

atom                    : FLOAT

                        | ID

                        ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/97210cd6/attachment-0001.html
From mail at martin-probst.com  Mon Jun 20 03:23:15 2005
From: mail at martin-probst.com (Martin Probst)
Date: Mon Jun 20 03:23:21 2005
Subject: [antlr-interest] Exceptional question...:)
In-Reply-To: <ECOWS02MaR6xE2XKc8100023c91@smtp-out2.blueyonder.co.uk>
References: <ECOWS02MaR6xE2XKc8100023c91@smtp-out2.blueyonder.co.uk>
Message-ID: <1119262995.9019.13.camel@localhost.localdomain>

Hi,

just match the characters and throw the exception afterwards:
> 
> Element
> 
> Options { defaultErrorHandler = false; }
> 
> :
> 
>       ty:type nn:ID (ID! | HYPHEN!) cnt:element_count (INT | HYPHEN)
> string_size[#ty.getText()] 
> 
>             (INT | HYPHEN)  ({bIgnoreExtraneousEOLChars}? (options
> {greedy=false;}:~CR!)* CR! 
            (INT | HYPHEN)  ( (options {greedy=false;}:~CR!
	{ if (!bIngoreExtraneouseEOLChars) throw ...; } )* CR!

>                   ## = #([TOK_COMMENT,t]);
> 
>                   #comment = #([TOK_COMMENT,t]);
> 
>                   #comment = #(#[TOK_COMMENT,t]);

You can also write ## = #(#[TOK_COMMENT],#t); ;-)

I think it's just some liberation from the syntax, the idea is that you
don't have to write all those # chars if you're in an AST construction
statement anyways. About the ##/#comment: most people seem to prefer ##
as it's shorter and also doesn't break if you move the code or rename
the parser rule.

Regards,
Martin

From rhill03 at eds.com  Mon Jun 20 05:18:27 2005
From: rhill03 at eds.com (Hill, Robert)
Date: Mon Jun 20 05:22:17 2005
Subject: [antlr-interest] Basic Grammar (Literal / Lexer)
Message-ID: <2E909902FD3A03419E3A905908AE3DD4D1F423@UKNSM201.emea.corp.eds.com>

in the Lexer, create a token block which contains all your tokens. then
in the lexer rule for your identifier
turn on the option to test literals
 
so , below your lexers options (or the lexer class declaration) do
 
tokens {
    TOK_or = "or"
    TOK_const = "const"
}
.... etc
and in your lexer rule for the indentifiers do
 
ID
options { testLiterals = true; }
    :('a'..'z')*
    ;
 
this will cause the lexer to pass your literals as tokens and not ID's
 
me being a relative antlr n00b someone please feel free to correct me!
:)
 
cheers,
 
/2ob
 

Rob Hill

EDS  UKNMSC                '       +44 (0) 114 291 1928 
Innovation Centre               6       +44 (0) 114 291 2000 
217 Portobello          *       +44 (0) 791 732 1227 
Sheffield                       *       rhill03@eds.com
<mailto:rhill03@eds.com>  
S1 4DP 


 


________________________________

	From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] 
	Sent: 20 June 2005 11:07
	To: antlr-interest@antlr.org
	Subject: [antlr-interest] Basic Grammar (Literal / Lexer)
	
	

	Hi,

	 

	I have a basic grammar with conditional statements specified as
follows.

	Hopefully I am on the right track here.

	I am creating a simple expression and rule parser.

	 

	I have specified the logicalOr as LogicalAnd ("or" LogicalAnd)*

	 

	When I try and put the literal "or" in the lexer (where one
assumes it should be) I get a non determinism between or and an
identifier (which is a c style identifier). What is the correct way to
specify the literal "or" without interfering with the other lexer
elements, or should the "or" remain in the parser?

	 

	Regards

	Craig.

	 

	 

	rules                   : (statement STATEMENT_SEP)* EOF

	                        ;

	statement               : assignment_statement 

	                        | constant_declaration

	                        | condition

	                        ;

	assignment_statement    : ID ASSIGN expression 

	                        ;

	constant_declaration    : "const" ID ASSIGN atom

	                        ;

	condition               : "if" LPAREN! conditional_expression
RPAREN! statement

	                                  (// CONFLICT: the old
"dangling-else" problem...

	                                       //           ANTLR
generates proper code matching

	                                       //              as soon
as possible.  Hush warning.

	                                       options {

	                                             warnWhenFollowAmbig
= false;

	                                       }

	                                   : (STATEMENT_SEP)? "else"!
statement

	                                  )?

	                        ;

	conditional_expression  : logicalOr

	                        ;

	logicalOr               : logicalAnd ("or" logicalAnd)*

	                        ;

	logicalAnd              : equality ("and" equality)*

	                        ;

	equality                : relational ((EQUAL | NOT_EQUAL)
relational)*

	                        ;

	relational              : expression

	                          (( LTHAN

	                          |  GTHAN

	                          |  LTE

	                          |  GTE) expression)*

	                        ;

	expression              : term ((PLUS|MINUS) term)*

	                        ;

	term                    : factor ((MULTIPLY|DIVIDE) factor)*

	                        ;

	factor                  : atom (DASH atom)*

	                        ;

	atom                    : FLOAT

	                        | ID

	                        ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/84f62935/attachment-0001.html
From madcapmaggie at yahoo.com  Mon Jun 20 05:37:19 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Mon Jun 20 05:37:22 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <dd3a065f05062002481ed6c3f2@mail.gmail.com>
Message-ID: <20050620123719.68538.qmail@web30206.mail.mud.yahoo.com>


Andy,

You might want to consider watching the inputs and
outputs of your functions and the flow of control
rather than variable values per-se.

It's fairly easy to do with GDM:

  info functions 
to find all the functions (or interrogate the program
symbol table using another tool).

the break on any/all functions of interest and try:
  finish
which will do just that, plus report the result if
it's a function.

It should be fairly easy to write a tool to do this.

However, you might want to consider, especially if one
program is a rewrite of the other, a tool that
compares the sources of all of the functions.  I've
done this in the past where one version was a rewrite
of another and it was very productive -- by an order
of magnitude at least in finding bugs.

It sounds like you've been working with these two
versions for a while -- have the bugs been mostly
coding errors, due to language differences,
differences in the execution environments or what? 
Categorizing them and then looking for these kinds of
problems might be very productive.

Peggy
--- Bryan Ewbank <ewbank@gmail.com> wrote:

> > I've got Java and C++ versions of the same
> program, and when they
> > differ, I need to track down the problem.
> 
> Do you want to instrument every assignment so that
> file/line/value/variable is displayed?  That sounds
> a bit invasive if
> you instrumenet the objects - really the only way to
> get at the
> post-assignment values.  On the other hand,
> hijacking assignment and
> just value assigned might be much simpler.
> 
> Using ANTLR to instrument all "=" assignments should
> work, and allow a
> diff of the output streams to show you where the
> programs diverge
> (assuming they are *identical* implementations,
> rather than the same
> algorithm).  I've done this kind of instrumentation
> before (with sed,
> or with vi) and it is quite helpful.
> 
> Using ANTLR to instrument all setter methods so they
> they report the
> value of an object member after modification is
> probably fairly
> difficult, as just recognizing setter functions is
> hard.
> 
> As a third option, using ANTLR to transform either
> C++ or java into a
> gdb input script that watches the variables might be
> easy - I've never
> thought about doing that, but it might be useful for
> what you are
> describing.
> 
> Sorry to wander a bit, but I don't understand how
> you are considering
> using ANTLR to address the problem you raise.
> 

From rhill03 at eds.com  Mon Jun 20 05:58:47 2005
From: rhill03 at eds.com (Hill, Robert)
Date: Mon Jun 20 06:02:11 2005
Subject: [antlr-interest] Exceptional question...:)
Message-ID: <2E909902FD3A03419E3A905908AE3DD4D1F42F@UKNSM201.emea.corp.eds.com>

That's the ticket Martin, cheers.
I think having the predicate in there narrowed my vision, and I didn't
want to remove it for some unknown reason.!
I've added the test after the match, and it works just fine.

Also about the ##, I didn't think about the cut and pasting of code, I
guess that depends on how many AST type statements you have in the rule
:)

Cheers anyway :)

/2ob
 
-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] 
Sent: 20 June 2005 11:23
To: Robert Hill
Cc: antlr-interest@antlr.org
Subject: Re: [antlr-interest] Exceptional question...:)

Hi,

just match the characters and throw the exception afterwards:
> 
> Element
> 
> Options { defaultErrorHandler = false; }
> 
> :
> 
>       ty:type nn:ID (ID! | HYPHEN!) cnt:element_count (INT | HYPHEN) 
> string_size[#ty.getText()]
> 
>             (INT | HYPHEN)  ({bIgnoreExtraneousEOLChars}? (options
> {greedy=false;}:~CR!)* CR! 
            (INT | HYPHEN)  ( (options {greedy=false;}:~CR!
	{ if (!bIngoreExtraneouseEOLChars) throw ...; } )* CR!

>                   ## = #([TOK_COMMENT,t]);
> 
>                   #comment = #([TOK_COMMENT,t]);
> 
>                   #comment = #(#[TOK_COMMENT,t]);

You can also write ## = #(#[TOK_COMMENT],#t); ;-)

I think it's just some liberation from the syntax, the idea is that you
don't have to write all those # chars if you're in an AST construction
statement anyways. About the ##/#comment: most people seem to prefer ##
as it's shorter and also doesn't break if you move the code or rename
the parser rule.

Regards,
Martin

From ewbank at gmail.com  Mon Jun 20 06:23:04 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 06:23:08 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <20050620123719.68538.qmail@web30206.mail.mud.yahoo.com>
References: <dd3a065f05062002481ed6c3f2@mail.gmail.com>
	<20050620123719.68538.qmail@web30206.mail.mud.yahoo.com>
Message-ID: <dd3a065f05062006237be6db8a@mail.gmail.com>

Okay, now with caffine (and without ANTLR ;-)

I think the right answer is to replace one of the implementations with
an interface to the remaining "one true implementation".  This seems,
in the long run, to be the best possible solution, and eliminates the
need for dual maintenance.

Or is there something that didn't make it into your email (prototype
versus production versions)??

Hope this helps,
- B
From dcaton at shorelinesoftware.com  Mon Jun 20 07:15:38 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Mon Jun 20 07:15:38 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <42B69192.9050500@cyconix.com>
Message-ID: <1119277244.32498@mx9.mysite4now.com>

-----Original Message-----
From: antlr-interest-bounces@antlr.org [
<mailto:antlr-interest-bounces@antlr.org>
mailto:antlr-interest-bounces@antlr.org] On Behalf Of Paul Johnson
Sent: Monday, June 20, 2005 5:51 AM
To: ANTLR Interest
Subject: [antlr-interest] Example code with multiple AST passes?

> Anyone know if there's a code example which does multiple passes through a
single AST?

I just maintain a pass count so the actions know what pass is current.  In
the .g file:

class MyTreeParser;

{
public:

   MyTreeParser( void )
   {
      m_pass = 0;
   }
  
private:

   int m_pass;
  
   const bool pass( const int passNum ) const
   {
      return m_pass == passNum;
   }
}

And in your top level rule:

topLevelRule : { m_pass++; } ( secondLevelRules )*;

If you don't have a simple top-level rule in your tree parser, just create
one that does nothing but increment the pass count, then calls your existing
top-level rule.

Now, in all of your actions you'll have to do something like this:

foo : bar
{
  if ( pass( 1 ) )
  {
     ...
  }
  else if ( pass ( 2 ) )
  {
     ...
  }
}

and so on.  The only alternative I could come up with is to create multiple
tree parsers that inherit from a single .g file, but that results in
excessive code bloat for any non-trivial tree walker.

--
Don


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/245f3986/attachment.html
From craig at palantir.co.za  Mon Jun 20 07:40:29 2005
From: craig at palantir.co.za (Craig Main)
Date: Mon Jun 20 07:46:40 2005
Subject: [antlr-interest] Lazy Else,
Message-ID: <20050620144635.04FE7DCC21@www.antlr.org>

Hi,

 

Given the following (working) if / else statement.

(The console will output True if the condition is met, False otherwise)

 

How can I get the parser to jump over the else if the conditional expression
is true, and only evaluate the statement_set if the condition is true.

Is that possible in the context of the parser, or not really.

 

Maybe I can specify a dummy statement_set if the condition is met, and the
real attributed statement_set if the condition is true?

That way it will get parsed, but the attributes will do nothing.

 

Regards

Craig

 

condition

[Context context]       {

                           object result = null;

                        }

                        : TOK_IF LPAREN! result =
conditional_expression[context] RPAREN! 

                          {

                             Console.WriteLine(result.ToString());

                          }

                          statement_set[context]

                                  (// CONFLICT: the old "dangling-else"
problem...

                                       //           ANTLR generates proper
code matching

                                       //              as soon as possible.
Hush warning.

                                       options {

                                             warnWhenFollowAmbig = false;

                                       }

                                   : (STATEMENT_SEP)? TOK_ELSE!
statement_set[context]

                                  )?

                        ;

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/a0647a41/attachment.html
From atripp at jazillian.com  Mon Jun 20 07:21:41 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Mon Jun 20 08:44:45 2005
Subject: [antlr-interest] C/C++ instrumentation tool
Message-ID: <42B6D0F5.7000603@jazillian.com>

>
>
>Okay, now with caffine (and without ANTLR ;-)
>
>I think the right answer is to replace one of the implementations with
>an interface to the remaining "one true implementation".  This seems,
>in the long run, to be the best possible solution, and eliminates the
>need for dual maintenance.
>
>Or is there something that didn't make it into your email (prototype
>versus production versions)??
>
>Hope this helps,
>- B
>
Can't do that.
One version is C++, one is Java. The apps run on cell phones, some of 
which support
C++ (BREW) while other support Java (J2ME).

From atripp at jazillian.com  Mon Jun 20 07:25:08 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Mon Jun 20 08:44:47 2005
Subject: [antlr-interest] C/C++ instrumentation tool
Message-ID: <42B6D1C4.6030107@jazillian.com>

>
>
>Do you want to instrument every assignment so that
>file/line/value/variable is displayed?  That sounds a bit invasive if
>you instrumenet the objects - really the only way to get at the
>post-assignment values.  On the other hand, hijacking assignment and
>just value assigned might be much simpler.
>  
>
The code I'm looking at is really C - no OO or C++ features whatsoever.

>Using ANTLR to instrument all "=" assignments should work, and allow a
>diff of the output streams to show you where the programs diverge
>(assuming they are *identical* implementations, rather than the same
>algorithm).  I've done this kind of instrumentation before (with sed,
>or with vi) and it is quite helpful.
>
>Using ANTLR to instrument all setter methods so they they report the
>value of an object member after modification is probably fairly
>difficult, as just recognizing setter functions is hard.
>
>As a third option, using ANTLR to transform either C++ or java into a
>gdb input script that watches the variables might be easy - I've never
>thought about doing that, but it might be useful for what you are
>describing.
>  
>
But is there a way to tell gdb to "keep running but print out every 
variable assignment"?
I didn't see any way to do that.

>Sorry to wander a bit, but I don't understand how you are considering
>using ANTLR to address the problem you raise.
>

From atripp at jazillian.com  Mon Jun 20 07:31:22 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Mon Jun 20 08:44:51 2005
Subject: [antlr-interest] C/C++ instrumentation tool
Message-ID: <42B6D33A.8000205@jazillian.com>

>
>
>Andy,
>
>You might want to consider watching the inputs and
>outputs of your functions and the flow of control
>rather than variable values per-se.
>
>It's fairly easy to do with GDM:
>
>  info functions 
>to find all the functions (or interrogate the program
>symbol table using another tool).
>
>the break on any/all functions of interest and try:
>  finish
>which will do just that, plus report the result if
>it's a function.
>
>It should be fairly easy to write a tool to do this.
>
>However, you might want to consider, especially if one
>program is a rewrite of the other, a tool that
>compares the sources of all of the functions.  I've
>done this in the past where one version was a rewrite
>of another and it was very productive -- by an order
>of magnitude at least in finding bugs.
>  
>
One's C++ and one's Java. I know exactly where they differ...I wrote the 
Java
one from the C++ one. They differ only "syntactically" - no logic changes.

>It sounds like you've been working with these two
>versions for a while -- have the bugs been mostly
>coding errors, due to language differences,
>differences in the execution environments or what? 
>Categorizing them and then looking for these kinds of
>problems might be very productive.
>  
>
Yea, welcome to my world :) A few coding errors (gotta stop doing this
by hand...if only there were a C to Java translator out there :). A few 
language
differences (Java object pointers vs. copying of C structs). And a few 
language
differences (sizes of primitives).

Thanks for the help.

>Peggy
>

From lisa.buatti at ngc.com  Mon Jun 20 07:32:22 2005
From: lisa.buatti at ngc.com (Buatti, Lisa)
Date: Mon Jun 20 08:45:01 2005
Subject: [antlr-interest] Problem installing antlr-2.7.5
Message-ID: <5A174997C3E90043A805B2B669614D3E3C701F@xcgny105.northgrum.com>

Hi,

I am trying to install antlr-2.7.5 on a Linux system, and am getting the following errors when I do the "make install":

Type "JTree" not found in declaration of field 'tree'.

I intend to use this on a Linux server with C++ code.  Do I have the correct ANTLR for this?

Thanks.

Lisa
From parrt at cs.usfca.edu  Mon Jun 20 08:46:42 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 20 08:46:47 2005
Subject: [antlr-interest] Problem installing antlr-2.7.5
In-Reply-To: <5A174997C3E90043A805B2B669614D3E3C701F@xcgny105.northgrum.com>
References: <5A174997C3E90043A805B2B669614D3E3C701F@xcgny105.northgrum.com>
Message-ID: <250704DE-4800-452A-873B-0E31BF8F274F@cs.usfca.edu>


On Jun 20, 2005, at 7:32 AM, Buatti, Lisa wrote:

> Hi,
>
> I am trying to install antlr-2.7.5 on a Linux system, and am  
> getting the following errors when I do the "make install":
>
> Type "JTree" not found in declaration of field 'tree'.
>
> I intend to use this on a Linux server with C++ code.  Do I have  
> the correct ANTLR for this?

Hi.  That's a Swing (graphics) API class I believe.  Do you have Java  
installed properly?

Terence
From madcapmaggie at yahoo.com  Mon Jun 20 09:30:25 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Mon Jun 20 09:30:30 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <42B6D1C4.6030107@jazillian.com>
Message-ID: <20050620163025.47584.qmail@web30206.mail.mud.yahoo.com>

You can attach a command macro to any breakpoint:

Break foo
commands (hit enter)
GDB will reply to enter the list of commands, ending
with a line with END (see below for my example)

print foo
continue
end

There are also lots of other neat things you can do:

info locals
info args

etc.

You can also create your own command macros and add
them to your session.  You can save any/all of this in
a file. 

GDB reads file .gdbinit, which can contain commands
that GDB processes before you start your interactive
session, stuff like:

set prompt CPP
set print elements 0
set height 0

etc.

You can also pass it a file containing commands to
execute:

break main
run
info locals
step

gdb will return control to you after it has executed
all the commands in the file.

Peggy


 

--- Andy Tripp <atripp@jazillian.com> wrote:

> >
> >
> >Do you want to instrument every assignment so that
> >file/line/value/variable is displayed?  That sounds
> a bit invasive if
> >you instrumenet the objects - really the only way
> to get at the
> >post-assignment values.  On the other hand,
> hijacking assignment and
> >just value assigned might be much simpler.
> >  
> >
> The code I'm looking at is really C - no OO or C++
> features whatsoever.
> 
> >Using ANTLR to instrument all "=" assignments
> should work, and allow a
> >diff of the output streams to show you where the
> programs diverge
> >(assuming they are *identical* implementations,
> rather than the same
> >algorithm).  I've done this kind of instrumentation
> before (with sed,
> >or with vi) and it is quite helpful.
> >
> >Using ANTLR to instrument all setter methods so
> they they report the
> >value of an object member after modification is
> probably fairly
> >difficult, as just recognizing setter functions is
> hard.
> >
> >As a third option, using ANTLR to transform either
> C++ or java into a
> >gdb input script that watches the variables might
> be easy - I've never
> >thought about doing that, but it might be useful
> for what you are
> >describing.
> >  
> >
> But is there a way to tell gdb to "keep running but
> print out every 
> variable assignment"?
> I didn't see any way to do that.
> 
> >Sorry to wander a bit, but I don't understand how
> you are considering
> >using ANTLR to address the problem you raise.
> >
> 
> 

From ewbank at gmail.com  Mon Jun 20 09:57:00 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 09:57:05 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <1119277244.32498@mx9.mysite4now.com>
References: <42B69192.9050500@cyconix.com>
	<1119277244.32498@mx9.mysite4now.com>
Message-ID: <dd3a065f05062009577a01508f@mail.gmail.com>

Thank you, Don.  That's a very interesting solution to a problem that
I've been encountering as I have more and more passes, especially when
I need to add a new token to *every* pass.  *Groan*.

I think I see construction of an actions object that is passed to the
grammar, but that starts to smell more and more like visitor pattern
(turned inside out, perhaps).

Using an "action object" per pass, rather than a complete *.g, would
allow that object to be passed to the constructor for the more generic
tree parser.
Hmm.  Sounds like quite a bit less duplicate code, as well as
splitting "tree goo" from "action foo".

> I just maintain a pass count so the actions know what pass is current.  In
> the .g file:
> 
> class MyTreeParser;
> 
> {
> public:
> 
>    MyTreeParser( void )
>    {
>       m_pass = 0;
>    }
>   
> private:
> 
>    int m_pass;
>   
>    const bool pass( const int passNum ) const
>    {
>       return m_pass == passNum;
>    }
> }
> 
> And in your top level rule:
> 
> topLevelRule : { m_pass++; } ( secondLevelRules )*;
> 
> If you don't have a simple top-level rule in your tree parser, just create
> one that does nothing but increment the pass count, then calls your existing
> top-level rule.
> 
> Now, in all of your actions you'll have to do something like this:
> 
> foo : bar
> {
>   if ( pass( 1 ) )
>   {
>      ...
>   }
>   else if ( pass ( 2 ) )
>   {
>      ...
>   }
> }
From rodrigobamboo at gmail.com  Mon Jun 20 10:04:36 2005
From: rodrigobamboo at gmail.com (Rodrigo B. de Oliveira)
Date: Mon Jun 20 10:04:38 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <dd3a065f05062009577a01508f@mail.gmail.com>
References: <42B69192.9050500@cyconix.com>
	<1119277244.32498@mx9.mysite4now.com>
	<dd3a065f05062009577a01508f@mail.gmail.com>
Message-ID: <5917478b05062010043cdfb780@mail.gmail.com>

On 6/20/05, Bryan Ewbank <ewbank@gmail.com> wrote:
> Thank you, Don.  That's a very interesting solution to a problem that
> I've been encountering as I have more and more passes, especially when
> I need to add a new token to *every* pass.  *Groan*.
> 
> I think I see construction of an actions object that is passed to the
> grammar, but that starts to smell more and more like visitor pattern
> (turned inside out, perhaps).
> 
> Using an "action object" per pass, rather than a complete *.g, would
> allow that object to be passed to the constructor for the more generic
> tree parser.
> Hmm.  Sounds like quite a bit less duplicate code, as well as
> splitting "tree goo" from "action foo".
> 

Yes. That's what I've been using for the boo compiler. The compilation
process is described  by a CompilerPipeline object which is basically
a list of CompilerStep objects (the actions, mostly implemented as
visitors). The first step is generally the parser which constructs the
AST from the input files. The intermediate steps apply transformations
and annotations to the tree. The last step generally outputs
something.

It works great but it's based on a automatically generated hetero AST.

Rodrigo
From gt54-antlr at cyconix.com  Mon Jun 20 10:05:09 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Jun 20 10:05:15 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <20050620163025.47584.qmail@web30206.mail.mud.yahoo.com>
References: <20050620163025.47584.qmail@web30206.mail.mud.yahoo.com>
Message-ID: <42B6F745.1080103@cyconix.com>

Peggy Fieland wrote:
> You can attach a command macro to any breakpoint:
> 
> Break foo
> commands (hit enter)
> GDB will reply to enter the list of commands, ending
> with a line with END (see below for my example)

I'm not a gdb expert, but I think you could waste a lot of time and get 
nowhere here. In principle, you can create watchpoints for all your 
variables. You could then add all your variables to the auto display 
list ('display'). You could then define 'hook-stop' to automatically 
restart (put a 'continue' in there) every time gdb stops. This would 
automate collection and display, but you then have the problem that you 
have to set new watchpoints for every new scope, and they're 
automatically deleted when they go out of scope.

This should be handled with tracepoints, but I don't think you'll do any 
better with them; they don't seem to be completely implemented yet.

Paul

From ewbank at gmail.com  Mon Jun 20 10:08:36 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 10:08:39 2005
Subject: [antlr-interest] Lazy Else,
In-Reply-To: <20050620144635.04FE7DCC21@www.antlr.org>
References: <20050620144635.04FE7DCC21@www.antlr.org>
Message-ID: <dd3a065f050620100845e472d2@mail.gmail.com>

For me, I'd split "parse" from "evaluate", making the parser just
parse the input, and then build a tree-walker that evaluates only what
is required.

Otherwise, I think you will end up with parallel productions in your
grammar that support (1) parse and evaluate and (2) just parse.  You
could most easily fold this into your Context object, or add another
parameter to *every* production telling it whether to evaluate or not.

For a tree parser, it's relatively easy:
condition [Context context]
: { bool r; }
   #(TOK_IF r=expr[context]
      ( {r}? s1:stmt_then[context] (.)?
      |      .                     (s2:stmt_else[context])? )
   )

In other words, based on the result of "r", either process the "then"
or the "else" and ignore the other branch of the tree.

I would also suggest (as I'm lazy) that you move the Context object
out of the parameter stack and into the parser/treeparser object
itself so there's no need to pass it around - but perhaps that's not
practical here...
From madcapmaggie at yahoo.com  Mon Jun 20 10:15:54 2005
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Mon Jun 20 10:15:59 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <42B6F745.1080103@cyconix.com>
Message-ID: <20050620171554.11435.qmail@web30215.mail.mud.yahoo.com>


You're right about the watchpoints -- but for Andy's
purposes a simpler solution might suffice. 
Personally, I wouldn't trace all changes to variables
in any case -- I've found in general the amount of
data is too overwelming.

Peggy
--- Paul Johnson <gt54-antlr@cyconix.com> wrote:

> Peggy Fieland wrote:
> > You can attach a command macro to any breakpoint:
> > 
> > Break foo
> > commands (hit enter)
> > GDB will reply to enter the list of commands,
> ending
> > with a line with END (see below for my example)
> 
> I'm not a gdb expert, but I think you could waste a
> lot of time and get 
> nowhere here. In principle, you can create
> watchpoints for all your 
> variables. You could then add all your variables to
> the auto display 
> list ('display'). You could then define 'hook-stop'
> to automatically 
> restart (put a 'continue' in there) every time gdb
> stops. This would 
> automate collection and display, but you then have
> the problem that you 
> have to set new watchpoints for every new scope, and
> they're 
> automatically deleted when they go out of scope.
> 
> This should be handled with tracepoints, but I don't
> think you'll do any 
> better with them; they don't seem to be completely
> implemented yet.
> 
> Paul
> 
> 

From dcaton at shorelinesoftware.com  Mon Jun 20 11:21:23 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Mon Jun 20 11:21:23 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <dd3a065f05062009577a01508f@mail.gmail.com>
Message-ID: <1119291990.4852@mx9.mysite4now.com>

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
> Sent: Monday, June 20, 2005 12:57 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Example code with multiple AST passes?
> 
> Thank you, Don.  That's a very interesting solution to a 
> problem that I've been encountering as I have more and more 
> passes, especially when I need to add a new token to *every* 
> pass.  *Groan*.

Brian:

It works, but it's not what I'd call an elegant solution.  You need code in
each action to make sure that the action only occurs in the desired pass,
and if the rule has default tree construction turned off, you can't forget
to return a tree in an action, even if you don't have anything else to do,
Ex:

  foo! : bar
  {
     if ( pass(1) )
     {
         ## = ...;
     }
  }

This will crash very nicely during an pass other than #1 because no tree is
returned.  It's a pain when adding new passes.

I wish Antlr implemented true parser inheritance when inheriting from a
grammar.  Ideally, Antlr should generate a tree parser class that subclasses
the parser created by the superclass grammar, which just overrides the
action code.  Otherwise, you have huge amounts of code duplication, which is
what led me to seek an alternate solution.  It works well enough but I
really wish we could override antlr-generated parsers with classes that just
implemented actions.  I really, really hate mixing rules and executable code
in the same file.

I hope Antlr 3 addresses this somehow; it's my only real complaint with
Antlr 2.

Don


From dcaton at shorelinesoftware.com  Mon Jun 20 11:25:28 2005
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Mon Jun 20 11:25:28 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <5917478b05062010043cdfb780@mail.gmail.com>
Message-ID: <1119292235.15590@mx9.mysite4now.com>

 

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of 
> Rodrigo B. de Oliveira
> Sent: Monday, June 20, 2005 1:05 PM
> To: Bryan Ewbank
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] Example code with multiple AST passes?
> 
> Yes. That's what I've been using for the boo compiler. The 
> compilation process is described  by a CompilerPipeline 
> object which is basically a list of CompilerStep objects (the 
> actions, mostly implemented as visitors). The first step is 
> generally the parser which constructs the AST from the input 
> files. The intermediate steps apply transformations and 
> annotations to the tree. The last step generally outputs something.
> 
> It works great but it's based on a automatically generated hetero AST.

You're doing this with Antlr?  Sounds like an interesting approach.  If I
understand correctly, you're passing some sort of object to the tree parser
constructor that contains the action code for that pass?  If so, how do you
associate the methods in the class with the rules in the parser?

> 
> Rodrigo
> 


From jddahl at micron.com  Mon Jun 20 11:54:53 2005
From: jddahl at micron.com (Jeff Dahl)
Date: Mon Jun 20 11:54:58 2005
Subject: [antlr-interest] Root node transformation
Message-ID: <42B710FD.6020301@micron.com>

Is it possible to transform the tree:

    #( A #( B C D ) E ... )

to

    #( B C D E ... )

How do you replace the root node with the first child and all the other 
children of the root node?

Thanks,
Jeff Dahl
From ewbank at gmail.com  Mon Jun 20 12:18:40 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 12:18:43 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <42B710FD.6020301@micron.com>
References: <42B710FD.6020301@micron.com>
Message-ID: <dd3a065f050620121839fd3a33@mail.gmail.com>

// #(A (# B C D ) (.)* ) ==>  #(B C D ... )
levelizer:
  #( A
       #( B C D )
       { ## = #B; }
       (
           extra:. { ##->addChild(#extra); }
       )*
   )


On 6/20/05, Jeff Dahl <jddahl@micron.com> wrote:
> Is it possible to transform the tree:
>     #( A #( B C D ) E ... )
> to
>     #( B C D E ... )
From ewbank at gmail.com  Mon Jun 20 12:25:09 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 12:25:11 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <1119291990.4852@mx9.mysite4now.com>
References: <dd3a065f05062009577a01508f@mail.gmail.com>
	<1119291990.4852@mx9.mysite4now.com>
Message-ID: <dd3a065f05062012256cbfb53@mail.gmail.com>

True, it's not elegant, but I can *always* define actions for each
production (using the same name), and have them do the same thing.

Thank you for the warning about disabling default tree construction;
hadn't thought about that yet and it's always better to learn from the
mistakes, er, experience of others.

I too would like to see true inheritance - even restricted to just
"redefine tail actions" to avoid lookahead set weirdness - so that I
don't have to do the same thing over and over.

On 6/20/05, Don Caton <dcaton@shorelinesoftware.com> wrote:
> It works, but it's not what I'd call an elegant solution.  You need code in
> each action to make sure that the action only occurs in the desired pass,
> and if the rule has default tree construction turned off, you can't forget
> to return a tree in an action, even if you don't have anything else to do,
> ...
> This will crash very nicely during an pass other than #1 because no tree is
> returned.  It's a pain when adding new passes.
From parrt at cs.usfca.edu  Mon Jun 20 12:33:30 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 20 12:32:50 2005
Subject: [antlr-interest] Example code with multiple AST passes?
In-Reply-To: <dd3a065f05062012256cbfb53@mail.gmail.com>
References: <dd3a065f05062009577a01508f@mail.gmail.com>
	<1119291990.4852@mx9.mysite4now.com>
	<dd3a065f05062012256cbfb53@mail.gmail.com>
Message-ID: <EBF9EA2F-E964-4E07-9651-C895E086A68E@cs.usfca.edu>


On Jun 20, 2005, at 12:25 PM, Bryan Ewbank wrote:

> True, it's not elegant, but I can *always* define actions for each
> production (using the same name), and have them do the same thing.
>
> Thank you for the warning about disabling default tree construction;
> hadn't thought about that yet and it's always better to learn from the
> mistakes, er, experience of others.
>
> I too would like to see true inheritance - even restricted to just
> "redefine tail actions" to avoid lookahead set weirdness - so that I
> don't have to do the same thing over and over.

Hi.  The only thing that doesn't do inheritance as you expect is the  
lookahead computaiton; that has to be done statically--hence, the  
"include" like inheritance.  Actions inherit as you expect, but you  
have to put in the hooks yourself:

class T extends Parser;

{
public abstract void action();
}

a : blort {action();}

Then in a subclass of T, define action.

:)

I have also done this:

class T extends Parser;

{
MyBehavior behavior;
public void setBehavior(MyBehavior behavior) {
   this.behavior = behavior;
}
}

a : blort {behavior.action();}

This works great in some circumstances, but not others...

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From jddahl at micron.com  Mon Jun 20 13:21:04 2005
From: jddahl at micron.com (Jeff Dahl)
Date: Mon Jun 20 13:21:10 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <dd3a065f050620121839fd3a33@mail.gmail.com>
References: <42B710FD.6020301@micron.com>
	<dd3a065f050620121839fd3a33@mail.gmail.com>
Message-ID: <42B72530.9050701@micron.com>

Bryan Ewbank wrote:

>// #(A (# B C D ) (.)* ) ==>  #(B C D ... )
>levelizer:
>  #( A
>       #( B C D )
>       { ## = #B; }
>       (
>           extra:. { ##->addChild(#extra); }
>       )*
>   )
>  
>
Thanks for the quick response.  Can you point me to where the ## is 
documented further?

Jeff Dahl
From ewbank at gmail.com  Mon Jun 20 13:41:09 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 20 13:41:11 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <42B72530.9050701@micron.com>
References: <42B710FD.6020301@micron.com>
	<dd3a065f050620121839fd3a33@mail.gmail.com>
	<42B72530.9050701@micron.com>
Message-ID: <dd3a065f0506201341f91f603@mail.gmail.com>

Hmm; that's funny.  There's reference in antlr.pdf on pg 122, but it's
only "#id"; rather than "##".  I think I picked that up from the
examples, or from the newsgroup... "##" means the same thing as
"#rulename" for any rule, and eliminates some cut-n-paste errors for
me.

On 6/20/05, Jeff Dahl <jddahl@micron.com> wrote:
> Bryan Ewbank wrote:
> 
> >// #(A (# B C D ) (.)* ) ==>  #(B C D ... )
> >levelizer:
> >  #( A
> >       #( B C D )
> >       { ## = #B; }
> >       (
> >           extra:. { ##->addChild(#extra); }
> >       )*
> >   )
> >
> Thanks for the quick response.  Can you point me to where the ## is
> documented further?
> 
> Jeff Dahl
From gt54-antlr at cyconix.com  Mon Jun 20 14:14:27 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Mon Jun 20 14:14:34 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <dd3a065f050620121839fd3a33@mail.gmail.com>
References: <42B710FD.6020301@micron.com>
	<dd3a065f050620121839fd3a33@mail.gmail.com>
Message-ID: <42B731B3.8050805@cyconix.com>

Bryan Ewbank wrote:
> // #(A (# B C D ) (.)* ) ==>  #(B C D ... )
> levelizer:
>   #( A
>        #( B C D )
>        { ## = #B; }
>        (
>            extra:. { ##->addChild(#extra); }
>        )*
>    )

Should this be ## = #(B,C,D), rather than ## = #B?

And can you use labels here:
#(A
   b:#(B,C,D) {## = #b; }
   ...
?

Thanks -

Paul

From Loring.G.Craymer at jpl.nasa.gov  Mon Jun 20 15:14:00 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Mon Jun 20 15:14:06 2005
Subject: [antlr-interest] same grammar?  advanced tree manipulation?
In-Reply-To: <BAY104-F33BF662FF338129BC0A49AB9E90@phx.gbl>
References: <BAY104-F33BF662FF338129BC0A49AB9E90@phx.gbl>
Message-ID: <6.2.1.2.2.20050620143550.02b80b58@mail.jpl.nasa.gov>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/c4413edc/attachment.html
From jddahl at micron.com  Mon Jun 20 15:30:28 2005
From: jddahl at micron.com (Jeff Dahl)
Date: Mon Jun 20 15:30:34 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <dd3a065f0506201341f91f603@mail.gmail.com>
References: <42B710FD.6020301@micron.com>	
	<dd3a065f050620121839fd3a33@mail.gmail.com>	
	<42B72530.9050701@micron.com>
	<dd3a065f0506201341f91f603@mail.gmail.com>
Message-ID: <42B74384.5000304@micron.com>

Bryan Ewbank wrote:

>Hmm; that's funny.  There's reference in antlr.pdf on pg 122, but it's
>only "#id"; rather than "##".
>
Which antlr.pdf?  Three come up with Google-- none with pg. 122.

Thanks,
Jeff Dahl
From jeric10 at hotmail.com  Mon Jun 20 18:56:49 2005
From: jeric10 at hotmail.com (Eric Nelson)
Date: Mon Jun 20 18:56:54 2005
Subject: [antlr-interest] same grammar? advanced tree manipulation?
In-Reply-To: <6.2.1.2.2.20050620143550.02b80b58@mail.jpl.nasa.gov>
Message-ID: <BAY104-F35216C1A033E5B102C7A9B9E80@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/f28b1b31/attachment-0001.html
-------------- next part --------------
An embedded message was scrubbed...
From: Loring Craymer <Loring.G.Craymer@jpl.nasa.gov>
Subject: Re: [antlr-interest] same grammar?  advanced tree manipulation?
Date: Mon, 20 Jun 2005 15:14:00 -0700
Size: 4979
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20050620/f28b1b31/attachment-0001.mht
From nbsherid at secsme.org.au  Mon Jun 20 19:21:58 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Mon Jun 20 19:21:49 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <42B74384.5000304@micron.com>
Message-ID: <000201c57608$00c7d7c0$0500a8c0@nigel>


> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Jeff Dahl
> Sent: Tuesday, 21 June 2005 8:30 AM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Root node transformation
> 
> Bryan Ewbank wrote:
> 
> >Hmm; that's funny.  There's reference in antlr.pdf on pg 122, but it's
> >only "#id"; rather than "##".
> >
> Which antlr.pdf?  Three come up with Google-- none with pg. 122.
> 


http://www.antlr.org/share/1084743321127/ANTLR_Reference_Manual.pdf

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435


From craig at palantir.co.za  Tue Jun 21 00:05:38 2005
From: craig at palantir.co.za (Craig Main)
Date: Tue Jun 21 00:11:48 2005
Subject: [antlr-interest] Expression Parser,
Message-ID: <20050621071145.EADF6DC75F@www.antlr.org>

Hi,

 

I was wondering, since I have been struggling (read learning.) how to build
an expression parser for expressions, constant declarations and function
calls. I came across the exprAST sample in the antlr distribution tree.

 

That particular sample goes a reasonable distance in showing how one would
construct such a parser using an AST. I find using the AST much more
difficult than just writing a simple parser.

 

Does anyone know if there is a sample out there that shows a TreeParser
derivative for such a grammar? The included sample contains the parser, but
no TreeParser. I am sure it would be very instructive to obtain such a
sample.

 

Regards

Craig

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050621/a48a88e3/attachment.html
From craig at palantir.co.za  Tue Jun 21 03:30:46 2005
From: craig at palantir.co.za (Craig Main)
Date: Tue Jun 21 03:36:55 2005
Subject: [antlr-interest] Trouble with statement block,
Message-ID: <20050621103652.300F2DC75C@www.antlr.org>

Hi,

 

I am struggling to get the statement block to work with extra separators.

I have to be very careful where I place the statement separators in the
input text.

I need to try and make this more lenient.

 

The following does not work.

If (cond) {

} else {

            A = 10; <separator not allowed here>

} ; <separator required here>

 

What is a good way to make this more lenient in terms of the input string? I
am struggling to get it correct without invalid grammar rules.

 

rules                   : (statement STATEMENT_SEP)* EOF

                        ;

 

statement_set           : statement

                        | statement_block

                        ;

 

statement               : assignment_statement

                        | constant_declaration

                        | condition

                        ;

 

statement_block         : LCURL (statement)? (STATEMENT_SEP statement)*
RCURL

 

condition               

                        : TOK_IF LPAREN! result = conditional_expression
RPAREN! 

                          statement_set

                                  (// CONFLICT: the old "dangling-else"
problem...

                                       //           ANTLR generates proper
code matching

                                       //              as soon as possible.
Hush warning.

                                       options {

                                             warnWhenFollowAmbig = false;

                                       }

                                   : (STATEMENT_SEP)? TOK_ELSE! 

                              statement_set

                                  )?

                        ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050621/e81e7c75/attachment.html
From serafettin_sentuerk at intergral.com  Tue Jun 21 03:51:02 2005
From: serafettin_sentuerk at intergral.com (Serafettin Senturk)
Date: Tue Jun 21 03:51:11 2005
Subject: [antlr-interest] Multiple Lexers
Message-ID: <ANEFKENHALPOILMBNJFGGEEHCDAA.serafettin_sentuerk@intergral.com>


 Hello,

 Does anybody know how I can associate multiple lexers with multiple parsers
in different contexts? I mean, If I have P1 and P2 parsers, L1 and L2
lexers, how can I say that P1 will use the tokens coming from L1 and
separately P2 will use the tokens coming from L2 in the same application?
 I could not succeed with the "TokenStreamSelector" mechanism. Is there
another solution to this problem?


 Ragards,
 Serafettin



From mortench2004 at yahoo.dk  Tue Jun 21 04:08:43 2005
From: mortench2004 at yahoo.dk (M C)
Date: Tue Jun 21 04:08:47 2005
Subject: [antlr-interest] SV: antlr-interest Digest, Vol 7, Issue 53
In-Reply-To: <20050620101330.B64FCDCD15@www.antlr.org>
Message-ID: <20050621110843.42323.qmail@web25802.mail.ukl.yahoo.com>

Scott Stanchfield wrote:
> I just posted the 4.0.0.b1 release of the ANTLR
> Eclipse plugin.
> 
> See http://antlreclipse.sourceforge.net for details
> on installation
> 
> Enjoy!
> -- Scott Stanchfield
> 
> Note the big changes are:
> * grammar level debugging
> * bug fix for tab char in Eclipse 3.1
> * all antlr command-line options are available via
> grammar property page
> * "Antlers" icon on project
> * Auto-add of antlr.jar ref to antlr projects

Just tried it in Eclipse 3.1RC3. Very nice! I think
this will become my preferred enviroment for ANTLR
projects. I did not try the debug option yet but I
look forward to the next grammar bug so that I can
exercise it :-) I am impressed that it was possible
for you to support grammar debugging. Must have been
hard.

Thanks for a great contribution!

Suggestions
1) I often write "//TODO:" in java and *.g files to
signify things that need to be completed. For java
files these shown up on the left ruler. Would it be
possible for todos to shown up in *.g files also?
2) Right now there is some code-completion for grammar
elements. Would it be possible to make this more
complete and support code-completion for java actions
also ?

Cheers,
Morten Ch.

From ewbank at gmail.com  Tue Jun 21 05:19:04 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 21 05:19:09 2005
Subject: [antlr-interest] Root node transformation
In-Reply-To: <42B731B3.8050805@cyconix.com>
References: <42B710FD.6020301@micron.com>
	<dd3a065f050620121839fd3a33@mail.gmail.com>
	<42B731B3.8050805@cyconix.com>
Message-ID: <dd3a065f0506210519114c564f@mail.gmail.com>

On 6/20/05, Paul Johnson <gt54-antlr@cyconix.com> asked:
> Should this be ## = #(B,C,D), rather than ## = #B?

There's only need for "## = #B;" because the default construction of
#B is to replicate what's already there - i.e., #(B, C, D).  If you
have default construction disabled for this rule, then yes, you need
to build it explicitly.

On 6/20/05, Paul Johnson <gt54-antlr@cyconix.com> again asked:
> And can you use labels here:
> #(A
>    b:#(B,C,D) {## = #b; }
>    ...
> ?

Yes, you can use labels, but they need to be associated with tokens or
productions, not #() blocks -- at least, I've never tried that.

So, instead of:
   #(A b:#(B C D) ) { ## = #b; }  // doesn't compile, AFAIK

Use this:
   #(A #(b:B C D) ) { ## = #b; }  // here, #b is #(B C D) by construction
From gt54-antlr at cyconix.com  Tue Jun 21 07:17:11 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Tue Jun 21 07:17:21 2005
Subject: [antlr-interest] Heterogeneous AST support?
Message-ID: <42B82167.4030408@cyconix.com>

Following on from the 'Example code with multiple AST passes' thread, my 
feeling is that I should use a single class-per-token in my AST, and 
have virtual over-ridden pass processing code in each token class (the 
homogeneous alternative being a large 2-way switch on the token type and 
current pass).

However, the comments (from Ric?) in the ASTFactory.cpp source are 
making me think twice about this (the comments at the end give the 
impression that the hetero code may not work). Does anyone have any 
experience of building and manipulating heterogeneous ASTs? Any 
potential problems/pitfalls?

Thanks -

Paul

From gt54-antlr at cyconix.com  Tue Jun 21 07:43:09 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Tue Jun 21 07:43:16 2005
Subject: [antlr-interest] Heterogeneous AST support?
In-Reply-To: <42B82167.4030408@cyconix.com>
References: <42B82167.4030408@cyconix.com>
Message-ID: <42B8277D.1090504@cyconix.com>

just noticed that the build procedure doesn't build the cpp version of 
the heteroAST example, which isn't a good sign. configure.in builds all 
the C++ examples except this one. Anyone happen to know why?

Paul

From ric.klaren at gmail.com  Tue Jun 21 07:51:06 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun 21 07:51:09 2005
Subject: [antlr-interest] Heterogeneous AST support?
In-Reply-To: <42B82167.4030408@cyconix.com>
References: <42B82167.4030408@cyconix.com>
Message-ID: <bc607a4e0506210751533cce5e@mail.gmail.com>

On 6/21/05, Paul Johnson <gt54-antlr@cyconix.com> wrote:
> Following on from the 'Example code with multiple AST passes' thread, my
> feeling is that I should use a single class-per-token in my AST, and
> have virtual over-ridden pass processing code in each token class (the
> homogeneous alternative being a large 2-way switch on the token type and
> current pass).
> 
> However, the comments (from Ric?) in the ASTFactory.cpp source are
> making me think twice about this (the comments at the end give the
> impression that the hetero code may not work). Does anyone have any
> experience of building and manipulating heterogeneous ASTs? Any
> potential problems/pitfalls?

Well the heterogeneous AST stuff for C++ is not the prettiest. Theres
a few ugly hacks in the codegen to make it work most of the time. But
not *all* the time (you may confuse the codegenerator with some AST
construction constructs). Also the support library may have some
pitfalls. It's gotten better over time. I know there's people who have
used it succesfully. But don't be surprised if you run into strange
things. Also some syntax used to override the AST types to be created
does not work 100%.

I may be representing things gloomier than they are.. yet..
YMMV. If you feel young and gung-ho go for it ;) If you never want to
look at the generated code then don't. As usual I'll assist in
bugfixing as much as I can spare time (but that resource has gotten a
bit scarcer nowadays).

> (the
> homogeneous alternative being a large 2-way switch on the token type and
> current pass).

Keep your tokens as dumb as possible is my advice. Heck the only good
token is a number ;) Don't go shove algorithm in your tokens (if you
intended to do that).

In stead of switches on passes you can also have multiple tree walkers
that you call sequentially (pass around some shared data (may get ugly
though..)). Or call treewalkers inside treewalkers to collect
information about a subtree (a more recursive approach). It depends on
what you want to do (didn't follow the other thread) but some things
work better with a treewalker while others work better with a visitor.

Cheers,

Ric
From ewbank at gmail.com  Tue Jun 21 09:45:58 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 21 09:46:42 2005
Subject: [antlr-interest] Trouble with statement block,
In-Reply-To: <20050621103652.300F2DC75C@www.antlr.org>
References: <20050621103652.300F2DC75C@www.antlr.org>
Message-ID: <dd3a065f050621094559661980@mail.gmail.com>

If I understand, you want to relax this rule:

> statement_block : LCURL (statement)? (STATEMENT_SEP statement)* RCURL

I use the following, more or less:

  statement_block : LCURL^ ( statement_list )? RCURL! ;
  statement_list : statement ( STATEMENT_SEP ( statement_list )? )? ;

It's also handy for allowing a trailing comma in an enum list.

The recursive definition of statement_list is the key to avoiding some
really weird problems and ambiguity.  It also allows the trailing
STATEMENT_SEP, but does not require it, and requires one STATEMENT_SEP
between statements.

Note that since ";" is a statement SEPARATOR, as shown by the token
name and by construction of the grammar, you will need to have ";"
between any pair of statements - even statement blocks.

If you want to make the ";" optional after a statement_block, then you
will need to change your view of ";" from SEPARATOR to TERMINATOR for
those statements that require it - expressions, return, and the like.


On 6/21/05, Craig Main <craig@palantir.co.za> wrote:
> I am struggling to get the statement block to work with extra separators. 
> I need to try and make this more lenient. 
>
> If (cond) { 
> } else { 
>             A = 10; <separator not allowed here> 
> } ; <separator required here> 
> What is a good way to make this more lenient in terms of the input string? I
> am struggling to get it correct without invalid grammar rules.
From ric.klaren at gmail.com  Tue Jun 21 10:11:20 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Tue Jun 21 10:12:05 2005
Subject: [antlr-interest] Heterogeneous AST support?
In-Reply-To: <42B8277D.1090504@cyconix.com>
References: <42B82167.4030408@cyconix.com> <42B8277D.1090504@cyconix.com>
Message-ID: <42B84A38.3000306@gmail.com>

Paul Johnson wrote:
> just noticed that the build procedure doesn't build the cpp version of 
> the heteroAST example, which isn't a good sign. configure.in builds all 
> the C++ examples except this one. Anyone happen to know why?

Seems like it got lost in the transition to the new Makefiles. In 
configure.in is a bunch of lines for all the cpp examples. Copy one and 
change it for heteroAST. Rerun autoconf in the toplevel directory. And 
add the attached Makefile.in to cpp/examples/heteroAST rerun configure 
and you should be going...

Cheers,

Ric


-------------- next part --------------
##############################################################################
# $Id:$
###############################################################################

##xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
@stdvars@
##xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

## do not change this value 
subdir=examples/cpp/heteroAST


srcdir = @abs_top_srcdir@/examples/cpp/heteroAST
objdir = @abs_this_builddir@/examples/cpp/heteroAST

this : test
test : test1 

all: heteroAST test

g_FILES = \
	$(srcdir)/calc.g \
	$(eol)

g_cxx_FILES = \
  $(objdir)/CalcLexer.cpp \
	$(objdir)/CalcParser.cpp \
  $(eol)

g_hpp_FILES = \
	$(objdir)/CalcLexer.hpp \
  $(objdir)/CalcParser.hpp \
  $(objdir)/CalcParserTokenTypes.hpp \
  $(eol)

g_txt_FILES = \
	$(objdir)/CalcParserTokenTypes.txt \
	$(eol)

g_gen_FILES = \
	$(g_cxx_FILES) \
	$(g_hpp_FILES) \
	$(g_txt_FILES) \
	$(eol)

g_obj_FILES = \
	$(objdir)/CalcLexer@OBJEXT@ \
	$(objdir)/CalcParser@OBJEXT@ \
  $(eol)

## Source files
heteroAST_cxx_FILES = \
	$(g_cxx_FILES) \
	$(srcdir)/Main.cpp  \
	$(eol)

## Object files
heteroAST_obj_FILES = \
	$(g_obj_FILES) \
	$(objdir)/Main@OBJEXT@  \
	$(eol)

## Test commands ..
test1_cmd = $(objdir)/heteroAST < $(srcdir)/test.in

## Tests to be executed
test1 : heteroAST
	@ v="$(verbose)"; \
    if test $$v -gt 0 ; then \
      echo "$(test1_cmd)" ; \
    else \
      echo "exec test1 .."; \
    fi
	@ $(test1_cmd)

## How to make binaries
heteroAST : $(heteroAST_obj_FILES) @ANTLR_LIB@
	@ @CXX_LINK_CMD@ $@ $(heteroAST_obj_FILES)

## How to compile ANTLR grammar files
$(g_gen_FILES) : $(g_FILES) @ANTLR_JAR@
	@ANTLR_COMPILE_CMD@  $(g_FILES)

## GNU make - how to make object file
$(objdir)/%@OBJEXT@ : $(srcdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## GNU make - how to make object file
$(objdir)/%@OBJEXT@ : $(objdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## GNU make - how to make object file
%@OBJEXT@ : $(srcdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## GNU make - how to make object file
%@OBJEXT@ : $(objdir)/%.cpp
	@ @CXX_COMPILE_CMD@ $<

## Housecleaning
clean:
	rm -rf *.o *.obj *.exe heteroAST  $(g_gen_FILES) test 

distclean: clean
	$(RM) Makefile

# Dependencies
$(objdir)/CalcLexer@OBJEXT@ :      \
 $(objdir)/CalcLexer.hpp           \
 $(srcdir)/PLUSNode.hpp            \
 $(srcdir)/BinaryOperatorAST.hpp   \
 $(srcdir)/CalcAST.hpp             \
 $(srcdir)/MULTNode.hpp            \
 $(srcdir)/INTNode.hpp             \
 $(objdir)/CalcParserTokenTypes.hpp

$(objdir)/CalcParser@OBJEXT@     :  \
 $(objdir)/CalcParser.hpp           \
 $(srcdir)/PLUSNode.hpp             \
 $(srcdir)/BinaryOperatorAST.hpp    \
 $(srcdir)/CalcAST.hpp              \
 $(srcdir)/MULTNode.hpp             \
 $(srcdir)/INTNode.hpp              \
 $(objdir)/CalcParserTokenTypes.hpp

$(objdir)/Main@OBJEXT@           :  \
 $(objdir)/CalcLexer.hpp            \
 $(objdir)/CalcParserTokenTypes.hpp \
 $(objdir)/CalcParser.hpp           \
 $(srcdir)/PLUSNode.hpp             \
 $(srcdir)/BinaryOperatorAST.hpp    \
 $(srcdir)/CalcAST.hpp              \
 $(srcdir)/MULTNode.hpp             \
 $(srcdir)/INTNode.hpp              

## If cxx.sh script changed ..
$(heteroAST_obj_FILES) : @abs_this_builddir@/scripts/cxx.sh

## If link.sh script changed ..
$(heteroAST_obj_FILES) : @abs_this_builddir@/scripts/link.sh

### get configured dependencies - for example, just list
### autoconf variable ANTLR_JAR as reference and it will
### be  done  automatically  as stddeps contains appropr.
### rule. For details, checkout scripts/config.vars[.in] 
@stddeps@


From virtualaspirin at yahoo.com  Tue Jun 21 12:25:43 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Tue Jun 21 12:25:46 2005
Subject: [antlr-interest] Calling a tree parser rule manually (a number of
	times)
Message-ID: <20050621192543.55814.qmail@web30811.mail.mud.yahoo.com>

Hi folks

Here is a small problem. I'm processing a language
that  has compile time macros for generating code. My
parser builds AST and then I have a tree parser to
process the uber-macros macros look like this

// loop variable can only be an 'integer'
for(i = 0; i < 3; i++)
 blah(a[i]);

This should generate:

blah(a[0]);
blah(a[1]);
blah(a[2]);

So the input tree looks like something like this:
#(MAIN
  #(FOR #(FOR_BODY ...ast of (i = 0....) ...)
    #(MACRO_FOR_ITEM
     #(FUNCTION_CALL
      #(IDENTIFIER "blah:)
      ....))))

my processor should convert it to 3 instances of
FUNCTION_CALL as a list. My treeparser rule looks like
this:


macro_for:
 // n is number of iterations computed through an
 // involving code, which is omitted
 #(FOR  n=macro_for_body mi:MACRO_FOR_ITEM)
 {
   for(int i = 0; i < n; i++)
   {
     // Looks disgusting, no ?
     // manually call the rule
     macro_for_item(#mi, i);

     // black magic
     ## = #(null, ##, returnAST);
   }
 }
;

macro_for_item[int valueOfLoopVariable]:
 FUNCTION_CALL
 blah
 {
   search_and_replace loop variable with value
 }
;

To summarise: I want to tree-parse the same subtree a
number of times and add the resulting ast to
constructed tree.

Is there a better way to accomplish this task than
outlined above ? I don't like using 'currentAST'
variable!

- Akhilesh



		
__________________________________ 
Yahoo! Mail 
Stay connected, organized, and protected. Take the tour: 
http://tour.mail.yahoo.com/mailtour.html 

From antlr at klaashofstra.com  Tue Jun 21 13:31:39 2005
From: antlr at klaashofstra.com (Klaas Hofstra)
Date: Tue Jun 21 13:30:51 2005
Subject: [antlr-interest] ANTLR Python and SemanticException
Message-ID: <200506212231.39382.antlr@klaashofstra.com>

I think I have found a bug in ANTLR Python.

This rule:

type
  : t:ID { isTypeName(#t.getText()) }?
  ;

generates this python code for the parser:

if not  isTypeName(t_AST.getText()) :
    raise SemanticException(" isTypeName(t_AST.getText()) ")

This code does not run correctly because the global name 'SemanticException' 
is not defined. It needs to be replaced by antlr.SemanticException in order 
to work correctly.

I also came across a typo in the file examples/python/tinybasic/basic.g:

global numericUnaryExpression
:
        (
            p:PLUS^ {#p.setType(UNARY_PLUS);}
        |   m:MINUS^    {#m.setType(UNARY_PLUS);}
        )?  numericPrimaryExpression
    ;

I think the second UNARY_PLUS should be a UNARY_MINUS.

Cheers,
Klaas



From jeric10 at hotmail.com  Tue Jun 21 21:11:42 2005
From: jeric10 at hotmail.com (Eric Nelson)
Date: Tue Jun 21 21:11:44 2005
Subject: [antlr-interest] same grammar? advanced tree manipulation?
In-Reply-To: <6.2.1.2.2.20050620143550.02b80b58@mail.jpl.nasa.gov>
Message-ID: <BAY104-F25EBF7ABF31E4511AFF715B9EB0@phx.gbl>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050621/00ca0036/attachment.html
-------------- next part --------------
An embedded message was scrubbed...
From: Loring Craymer <Loring.G.Craymer@jpl.nasa.gov>
Subject: Re: [antlr-interest] same grammar?  advanced tree manipulation?
Date: Mon, 20 Jun 2005 15:14:00 -0700
Size: 4979
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20050621/00ca0036/attachment.mht
From ric.klaren at gmail.com  Wed Jun 22 01:57:43 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Jun 22 01:57:46 2005
Subject: [antlr-interest] Calling a tree parser rule manually (a number of
	times)
In-Reply-To: <20050621192543.55814.qmail@web30811.mail.mud.yahoo.com>
References: <20050621192543.55814.qmail@web30811.mail.mud.yahoo.com>
Message-ID: <bc607a4e05062201571e1a0a15@mail.gmail.com>

On 6/21/05, Akhilesh Mritunjai <virtualaspirin@yahoo.com> wrote:
> Here is a small problem. I'm processing a language
> that  has compile time macros for generating code. My
> parser builds AST and then I have a tree parser to
> process the uber-macros macros look like this
> 
> // loop variable can only be an 'integer'
> for(i = 0; i < 3; i++)
>  blah(a[i]);
> 
> This should generate:
> 
> blah(a[0]);
> blah(a[1]);
> blah(a[2]);
> 
> So the input tree looks like something like this:
> #(MAIN
>   #(FOR #(FOR_BODY ...ast of (i = 0....) ...)
>     #(MACRO_FOR_ITEM
>      #(FUNCTION_CALL
>       #(IDENTIFIER "blah:)
>       ....))))
> 
> my processor should convert it to 3 instances of
> FUNCTION_CALL as a list. My treeparser rule looks like
> this:
> 
> macro_for:
>  // n is number of iterations computed through an
>  // involving code, which is omitted
>  #(FOR  n=macro_for_body mi:MACRO_FOR_ITEM)
>  {
>    for(int i = 0; i < n; i++)
>    {
>      // Looks disgusting, no ?
>      // manually call the rule
>      macro_for_item(#mi, i);
> 
>      // black magic
>      ## = #(null, ##, returnAST);
>    }
>  }
> ;

Not sure without antlr at hand but.... If you have automatic tree
construction turned on I would disable tree construction for the
macro_for rule ( ! suffix)

> macro_for_item[int valueOfLoopVariable]:
>  FUNCTION_CALL
>  blah
>  {
>    search_and_replace loop variable with value
>  }
> ;

Return the modified copy of the original tree by returning it from the
macro_for_item rule:

macro_for_item[int valueOfLoopVariable] returns AST:
 FUNCTION_CALL
 blah
  {
   search_and_replace loop variable with value
   return ##;
 }
;

Then the for contents in macro_for:
..
     AST modified_tree = macro_for_item(#mi, i);
     // black magic
     ## = #(null, ##, modified_tree);
..

> To summarise: I want to tree-parse the same subtree a
> number of times and add the resulting ast to
> constructed tree.
> 
> Is there a better way to accomplish this task than
> outlined above ? I don't like using 'currentAST'
> variable!

The above approach should be cleaner than touching
returnAST/currentAST. Actually it's a quite powerfull thing that you
can call rules directly it's sometimes *very* convenient.

Hope this helps,

Ric
From Loring.G.Craymer at jpl.nasa.gov  Wed Jun 22 02:07:15 2005
From: Loring.G.Craymer at jpl.nasa.gov (Loring Craymer)
Date: Wed Jun 22 02:07:19 2005
Subject: [antlr-interest] same grammar? advanced tree manipulation?
In-Reply-To: <BAY104-F25EBF7ABF31E4511AFF715B9EB0@phx.gbl>
Message-ID: <200506220907.j5M97FWj007797@xmta2.jpl.nasa.gov>

Since everything in mpiJava is static (eww, gross---FORTRAN disguised as
Java), all of the MPI references will be through fully qualified
names-MPI.Init, etc.  So you want to build a HashMap in which the keys are
the fully qualified method names-"MPI.Init", "Comm.Rank", and so forth.
Object values contain whatever information you find that you need to process
the specific MPI function identified by the key value.

 

It would probably also help to have a HashSet of the MPI class names-you can
check for membership in the HashSet as a first step in seeing if you have
found one of the MPI functions/constants.

 

[The easy way to generate the code for constructing the table is to write a
little translator to convert a text specification of the classes and their
methods/fields into code that builds the HashSet and HashMap that you
need-or you can extract the information from the .java mpiJava files with a
simple one-pass translator built from the Java parser/lexer grammar.  You
should be able to do this in a day or so-this is probably a good first step
in understanding the java grammars, anyway.]

 

Once you have this bit of infrastructure, you annotate a tree grammar to
recognize fully qualified names in method calls (and access of constants,
but I don't think that you need that).  Semantic predicates then can be used
to distinguish whether you want to replace a method call or can output it
unchanged.

 

I hope that this helps.  As to your question as to whether this is a good
problem for ANTLR:  this sort of translation is fairly easy to do with
ANTLR.  The issue is really one of whether you have a sufficient volume of
MPI calls to process or not.

 

--Loring

 

  _____  

From: Eric Nelson [mailto:jeric10@hotmail.com] 
Sent: Tuesday, June 21, 2005 9:12 PM
To: Loring.G.Craymer@jpl.nasa.gov; antlr-interest@antlr.org
Subject: Re: [antlr-interest] same grammar? advanced tree manipulation?

 

So I do have to ask though, how would I follow your suggestion of building
the symbol table, etc?  Thanks again,

 - e




>From: Loring Craymer <Loring.G.Craymer@jpl.nasa.gov>
>To: Eric Nelson <jeric10@hotmail.com>, antlr-interest@antlr.org
>Subject: Re: [antlr-interest] same grammar?  advanced tree manipulation?
>Date: Mon, 20 Jun 2005 15:14:00 -0700
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050622/11130cc1/attachment.html
From Anthony.Youngman at eca-international.com  Wed Jun 22 08:13:03 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Wed Jun 22 08:13:09 2005
Subject: [antlr-interest] C/C++ instrumentation tool
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF4E@lnml1.eca-international.local>

And yet for me, such a "trace all assignments" facility is the feature I
most regret losing when I moved away from FORTRAN. (Mind you, that
FORTRAN compiler had a source-level switch, so you could control where
and which assignments it traced.)

If you want to trace what the hell a program is doing, it is the ONLY
tool of any real use - especially if you've got loads of loops.

If you're using ANY interactive tool, such as a debugger, how on earth
do trace back to where a problem STARTED, if it's not obvious straight
away? Yep - the amount of data produced by such a dump can be
overwhelming, but it's far less hassle than having to repeatedly run the
debugger thirty, forty times to try and work back from where you noticed
the problem to where the problem really is. I'd much rather try and
track back in a trace than work backwards in the debugger...

Cheers,
Wol 

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Peggy Fieland
Sent: 20 June 2005 18:16
To: gt54-antlr@cyconix.com; antlr-interest@antlr.org
Subject: Re: [antlr-interest] C/C++ instrumentation tool


You're right about the watchpoints -- but for Andy's
purposes a simpler solution might suffice. 
Personally, I wouldn't trace all changes to variables
in any case -- I've found in general the amount of
data is too overwelming.

Peggy


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From tmoog at polhode.com  Wed Jun 22 08:25:35 2005
From: tmoog at polhode.com (Tom Moog)
Date: Wed Jun 22 08:25:37 2005
Subject: [antlr-interest] C/C++ instrumentation tool
In-Reply-To: <C7FE35004D40FD45AA342991B88CE4040128FF4E@lnml1.eca-international.local>
References: <C7FE35004D40FD45AA342991B88CE4040128FF4E@lnml1.eca-international.local>
Message-ID: <Pine.NEB.4.63.0506221121210.21273@panix5.panix.com>


There is a commercial tool for x86 (I haven't used it myself) 
which simulates the CPU in a manner similar to valgrind. It takes 
checkpoints every M instructions.  To go backwards to 
instruction N it restores the CPU state using the nearest 
preceding checkpooint and then simulates forward until it reach 
instruction N.


On Wed, 22 Jun 2005, Anthony Youngman wrote:

> And yet for me, such a "trace all assignments" facility is the feature I
> most regret losing when I moved away from FORTRAN. (Mind you, that
> FORTRAN compiler had a source-level switch, so you could control where
> and which assignments it traced.)
>
> If you want to trace what the hell a program is doing, it is the ONLY
> tool of any real use - especially if you've got loads of loops.
>
> If you're using ANY interactive tool, such as a debugger, how on earth
> do trace back to where a problem STARTED, if it's not obvious straight
> away? Yep - the amount of data produced by such a dump can be
> overwhelming, but it's far less hassle than having to repeatedly run the
> debugger thirty, forty times to try and work back from where you noticed
> the problem to where the problem really is. I'd much rather try and
> track back in a trace than work backwards in the debugger...
>
> Cheers,
> Wol
From joerg at domaschka.org  Wed Jun 22 11:35:40 2005
From: joerg at domaschka.org (=?iso-8859-1?Q?J=F6rg_Domaschka?=)
Date: Wed Jun 22 11:38:01 2005
Subject: [antlr-interest] AST=type inheritance
Message-ID: <003b01c57759$3159f1a0$9c01a8c0@fry>

Hi everybody,

I have some problems with antlr's grammar inheritance. have a look at the
following:

----------------------------------------------------------------------------
----
class IDLParser extends Parser;
options{
/* some options */
}

tokens {
INTERF="interface"<AST=InterfNode>;
/* more tokens */
}

interf
: (l:"local"! | a:"abstract"!)? INTERF^
name:identifier!
(i:opt_inheritance_spec b:LCURLY! (export)* RCURLY!)?
{
#INTERF.setText(#name.getText());
if(#i != null) {
#INTERF.setInherit();
}
/* and so on... */
----------------------------------------------------------------------------
----
this results in the java-code:

public final void interf() throws RecognitionException, TokenStreamException
{
/* ... */
    InterfNode tmp15_AST = null;
    tmp15_AST = (InterfNode)astFactory.create(LT(1),"InterfNode");
################################################################
further I have something like:

class EIDLParser extends IDLParser;
/* tokens and options */
/* labels */
----------------------------------------------------------------------------
----
now the above code looks different, though the definition of "interf" is not
changed, nor is INTERF

public final void interf() throws RecognitionException, TokenStreamException
{
/* ... */
AST tmp16_AST = null;
tmp16_AST = astFactory.create(LT(1));
################################################################

all type information is lost. I think the reason is, the implicit
exportVocab and importVocab done by the inheritance mechanism doesn't keep
the types, since the format is like
INTERF="interface"=5
now my question:
is there any way to force antlr ex- and importing also class names? I'm
thankful for every reply, even if it's just a hack or a hint which source
code files are responsible for exporting and importing.

thanks a lot,
sincerely

Joerg

From parrt at cs.usfca.edu  Wed Jun 22 11:40:37 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 22 11:39:59 2005
Subject: [antlr-interest] Reminder: USF's ANTLR2005 Workshop at BEA this Fall
Message-ID: <18D88E5E-7D9D-4AFD-884B-9147192897A4@cs.usfca.edu>

Hi :)

Just a reminder that the ANTLR2005 workshop will happen this Oct  
20-21, 2005 at BEA Systems' downtown San Francisco office, co- 
sponsored by BEA/USF.

http://www.cs.usfca.edu/ANTLR2005.shtml

We have 9 registrations so far and only 35 spots so make sure you  
register at

http://www.antlr.org/misc/register2005

if you plan on attending.  Cost is only $89, which will include food  
and printed materials and hopefully some "schwag" if we can manage it.

This is a practitioners workshop rather than an academic workshop.   
You will hear presentations from your fellow language developers and  
will have plenty of time to discuss difficult translation problems  
etc...  Last year was a blast!

Last year we talked a lot about ANTLR v3 and the ANTLRWorks GUI dev  
environment; this year you will get a tutorial on how to use them. :)  
Bring a laptop so we can all hack!

Regards,
Terence
Project lead and supreme dictator
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From prashant.deva at gmail.com  Wed Jun 22 17:12:29 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Wed Jun 22 17:12:32 2005
Subject: [antlr-interest] Antlr Studio begins ...
Message-ID: <41fed8f8050622171256aa24c4@mail.gmail.com>

Warning: The material on this site may result in extreme drooling and
cause you jump up and down wih joy. ;-)

http://www.antlrstudio.com

Please do comment (preferably on the blog).

PRASHANT
From parrt at cs.usfca.edu  Wed Jun 22 17:23:59 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 22 17:23:20 2005
Subject: [antlr-interest] Antlr Studio begins ...
In-Reply-To: <41fed8f8050622171256aa24c4@mail.gmail.com>
References: <41fed8f8050622171256aa24c4@mail.gmail.com>
Message-ID: <9D03E048-36C7-4A85-9927-263C867E5532@cs.usfca.edu>


On Jun 22, 2005, at 5:12 PM, Prashant Deva wrote:

> Warning: The material on this site may result in extreme drooling and
> cause you jump up and down wih joy. ;-)
>
> http://www.antlrstudio.com
>
> Please do comment (preferably on the blog).

Wow!  Very very impressive...the movies are stunning!  Great work. :)

Where's the download button?

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From prashant.deva at gmail.com  Wed Jun 22 17:32:29 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Wed Jun 22 17:32:31 2005
Subject: [antlr-interest] Antlr Studio begins ...
In-Reply-To: <9D03E048-36C7-4A85-9927-263C867E5532@cs.usfca.edu>
References: <41fed8f8050622171256aa24c4@mail.gmail.com>
	<9D03E048-36C7-4A85-9927-263C867E5532@cs.usfca.edu>
Message-ID: <41fed8f805062217326ac97889@mail.gmail.com>

On 6/23/05, Terence Parr <parrt@cs.usfca.edu> wrote:

> On Jun 22, 2005, at 5:12 PM, Prashant Deva wrote:
> 
> > Warning: The material on this site may result in extreme drooling and
> > cause you jump up and down wih joy. ;-)
> >
> > http://www.antlrstudio.com
> >
> > Please do comment (preferably on the blog).
> 
> Wow!  Very very impressive...the movies are stunning!  Great work. :)
> 
> Where's the download button?
> 
Not there yet...

PRASHANT


> Ter
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> 
>
From parrt at cs.usfca.edu  Wed Jun 22 18:56:17 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 22 18:55:36 2005
Subject: [antlr-interest] ANTLR v3 tree construction :)
Message-ID: <728CB134-42FE-4398-B002-54AA4D8CAE0A@cs.usfca.edu>

Howdy,

Well, I've had a productive week or two.  Got ANTLR building ASTs  
automatically and also via the rewrite rules, which I've described  
below.  This email is a dup of the blog entry I just added.

http://www.antlr.org/blog/antlr3/trees.tml

Ter
PS    If I've been ignoring your email, it's been because I have been  
singularly focused on this stuff!

------------------------

#### REWRITE RULES

The new rewrite stuff is a grammar to grammar mapping where you  
specify how to match something and then how to generate the resulting  
tree.  Note that you can generate a token stream by simply generating  
a flat list like:

a : A B -> B A ; // reverse the input

The goal is to avoid arbitrary actions and the key insight to get  
pure rewrites was that the right side of the -> should be a tree  
grammar complete with (...)+ loops etc...  Monty, Loring, and I  
discussed the rewrite rules extensively at the Oregon cabal 2 years  
ago but we couldn't figure out what to do with repeated elements like:

list : ID (',' ID)* ;

How can you generate just the list of IDs, for example.  Easy after  
you look at the right side like a grammar.  Just list the tree  
grammar fragment that would match what you would like to generate and  
ANTLR will figure out how to do the transformation.  The elements on  
the left are queued up and then used as input streams to the  
"unparser" grammar on the right.  Here is the rewrite to get the list  
of IDs:

list : ID (',' ID)* -> ID+ ;

Nice, eh?  What if I want an imaginary token node, VAR, above the list?

list : ID (',' ID)* -> ^(VAR ID+) ;

What if I want a VAR for *each* ID?  Move the VAR inside the plus loop:

list : ID (',' ID)* -> ^(VAR ID)+ ;

I think that is pretty slick.  Note that to get your tree parser  
grammar, ANTLR should be able to copy these rules for you into a tree  
grammar similar to what Loring does, although his 2.8e tree grammar  
creator is more sophisticated than what I have in mind.

I have not done the tree parsers yet, but I think it will be really  
easy.  The details may kill me though. ;)  I should push an  
ANTLR-3.0ea3 release shortly.

#### SOME NOTES

My brief comments in the README.txt file:

* Automatic tree construction operators are in: ! ^ ^^

* Tree construction rewrite rules are in
     -> {pred1}? rewrite1
     -> {pred2}? rewrite2
     ...
     -> rewriteN

   The rewrite rules may be elements like ID, expr, $label, {node expr}
   and trees ^( <root> <children> ).  You have have (...)?, (...)*,  
(...)+
   subrules as well.

   You may have rewrites in subrules not just at outer level of rule,  
but
   any -> rewrite forces auto AST construction off for that alternative
   of that rule.

   To avoid cycles, copy semantics are used:

   r : INT -> INT INT ;

   means make two new nodes from the same INT token.

   Repeated references to a rule element implies a copy for at least one
   tree:

   a : atom -> ^(atom atom) ; // NOT CYCLE! (dup atom tree)

* $ruleLabel.tree refers to tree created by matching the labeled  
element.

#### EXAMPLES

Here are some example rewrites.  I have about 40 functional tests for  
rewrites and about the same for automatic tree construction.

a : ID INT -> ; // don't generate anything

a : b b -> b+;  // generate a list of two b's

a : ID INT -> ^(ID INT) ;

a : ID INT -> {false}? ^(ID INT)
            -> {true}? ^(INT ID)
            -> ID
   ;

a : op INT -> ^(op INT);
op : '+'|'-' ;

a : "var" (ID ':' type ';')+ -> ^("var" ^(':' ID type)+) ;

a : ID (',' ID)*-> ^(VAR ID)+ ; // create imaginary VAR node above  
each ID

a : lc='{' ID+ '}' -> ^(BLOCK[$lc] ID+) ; // derive BLOCK imaginary  
token node from $lc

a : first=ID (',' others+=ID)* -> $first $others+ ; // use of += labels
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From prashant.deva at gmail.com  Thu Jun 23 11:26:12 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun 23 11:26:15 2005
Subject: [antlr-interest] Places where Antlr can be used ....
Message-ID: <41fed8f805062311265cf25358@mail.gmail.com>

What situations other than the normal compiler and translator
construction can you come up with where Antlr can be used?

If you can provide a nice list maybe I can specialize some parts of
Antlr Studio for them.

For example - I already have some completly mind boggling feature
planned for support xml parsing through antlr !!

So if you can come up with any ideas, please start throwing ...

PRASHANT
From parrt at cs.usfca.edu  Thu Jun 23 11:47:46 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 23 11:47:05 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
Message-ID: <CB76D16A-2E2B-4223-8DFF-D33F491B4188@cs.usfca.edu>

Howdy,

If you would like to check out the auto tree construction and the  
rewite rule stuff, you can try out 3.0ea3:

http://www.antlr.org/download/antlr-3.0ea3.tar.gz

Unfortunately I haven't built any examples in

http://www.antlr.org/download/examples-v3.tar.gz

yet.  Please see:

org/antlr/test/TestAutoAST.java
org/antlr/test/TestRewriteAST.java

for a bunch of unit tests that illustrate what is going on.

Set option output=AST and away you go!

For now, I'm using CommonTree as my trees that have a payload  
(normally a Token object).  The type of a tree in the parser is  
Object as I don't care what the type is.  I use an adaptor object  
CommonTreeAdaptor to implement construction functionality and act as  
a bridge to whatever tree you want to use.  It doubles as a factory  
naturally.  I rather like the adaptor concept for a number of reasons.

Note that the ANTLRWorks jar has not been updated...you'll have to  
unjar it and then set up your classpath properly to use older  
ANTLRWorks and newer ANTLR.  I'm not sure what ANTLRWorks will do  
with the -> notation so I'd wait until Jean is back from vacation and  
can update ANTLRWorks before trying it out.

I'm off and running on the tree parser stuff, but wanted to cut this  
early access release so people could play with the tree stuff.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From chris at lotuscat.com  Thu Jun 23 12:08:28 2005
From: chris at lotuscat.com (Chris Black)
Date: Thu Jun 23 12:08:35 2005
Subject: [antlr-interest] Places where Antlr can be used ....
In-Reply-To: <41fed8f805062311265cf25358@mail.gmail.com>
References: <41fed8f805062311265cf25358@mail.gmail.com>
Message-ID: <42BB08AC.4030306@lotuscat.com>

Prashant Deva wrote:

>What situations other than the normal compiler and translator
>construction can you come up with where Antlr can be used?
>  
>
I use ANTLR almost exclusively for parsing data output by scientific 
instruments. Many instruments generate the same data (such as a curve of 
some value over time for example) but they all export it in their own 
non-standard, usually undocumented format. Some file formats group by 
sample, some by type of data, some by time, etc. I use antlr to get the 
information I actually want to look at into my own standardized data 
structures so the analysis can work the same on any instrument. 
Instrument output files tend to be of the form:
Some: foo
Header: bar
Fields: baz

Stanza Header wibble
column,headers,here
datavalue,datavalue,datavalue
.
.
.

Stanza Header pootie
column,headers
datavalue,datavalue

And are almost always field-based with a delimiter of a comma or a tab 
(sometimes it is column based or uses spaces).

Complications are that often different versions of the instrument 
software slightly change the format, but I want to be able to use the 
same parser for all versions. So I have alternatives in the parser that 
build the same type of AST, then the AST walker doesn't need to change 
for slight variations in input file (such as changing the names of 
header fields, etc). I use generic CSV and Tab separated value lexers 
that are shared across all parsers, these lexers generate a stream of 
FIELDs, DELIMs, and NEWLINEs and also handle double-quoted values. All 
real complexity is handled in the parser and treeparser.

If anyone has any advice or insight on this type of ANTLR grammer let me 
know :)

Chris
From gbr at newtechlaw.com  Thu Jun 23 12:18:02 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Thu Jun 23 12:23:20 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <CB76D16A-2E2B-4223-8DFF-D33F491B4188@cs.usfca.edu>
Message-ID: <4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>

ANTLR 2.7.5/2.7.6

One thing that I continue to have problems with is the need to walk up 
trees.  Cannot seem to find a getParent() method or a working example of 
how (best) to add this functionality to an ASTNode override?  Without an 
existing getParent, I cannot see a clean way to provide backlinks in newly 
created ASTNodes overrides.  Have I missed something?

Also, are the auto-trees in 3.0 doubly linked?

Thanks,
Gerald



At 11:47 AM 6/23/2005, Terence Parr wrote:

>Howdy,
>
>If you would like to check out the auto tree construction and the
>rewite rule stuff, you can try out 3.0ea3:

----
Gerald B. Rosenberg
Certiv Analytics

www.certiv.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050623/bdb29fec/attachment.html
From parrt at cs.usfca.edu  Thu Jun 23 13:28:14 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 23 13:27:36 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
References: <4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
Message-ID: <42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>


On Jun 23, 2005, at 12:18 PM, Gerald B. Rosenberg wrote:

> ANTLR 2.7.5/2.7.6
>
> One thing that I continue to have problems with is the need to walk  
> up trees.  Cannot seem to find a getParent() method or a working  
> example of how (best) to add this functionality to an ASTNode  
> override?  Without an existing getParent, I cannot see a clean way  
> to provide backlinks in newly created ASTNodes overrides.  Have I  
> missed something?

One way to handle this (at least I've tried it years ago) is to call  
a method to link everything up doubly *after* the tree has been  
built.  I found that the integrity/validity of double-linked trees is  
very complicated to keep together. :(

I also found that the need to "look up" is the same as needing to  
obtain context information, which usually can be provided via the  
grammar and a few variables.

> Also, are the auto-trees in 3.0 doubly linked?

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From prashant.deva at gmail.com  Thu Jun 23 13:35:15 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun 23 13:35:19 2005
Subject: [antlr-interest] antlreclipse 4.0.0.b1
In-Reply-To: <200506200025.j5K0Ow78014788@s2.eroute.net>
References: <81EFB02B4F41C34192AD7BEFE55007501D2F08@mail-x.ad.life.unsw.edu.au>
	<200506200025.j5K0Ow78014788@s2.eroute.net>
Message-ID: <41fed8f8050623133545b3ec4d@mail.gmail.com>

Well, i just tried it on 3.1RC2 and i am unable to set any breakpoints
in the grammar file.
I click the 'toggle breakpoint' option, but nothing happens.

And this is a clean installation of RC2.

PRASHANT

On 6/20/05, Scott Stanchfield <scott@javadude.com> wrote:
> I just posted the 4.0.0.b1 release of the ANTLR Eclipse plugin.
> 
> See http://antlreclipse.sourceforge.net for details on installation
> 
> Enjoy!
> -- Scott Stanchfield
> 
> Note the big changes are:
> * grammar level debugging
> * bug fix for tab char in Eclipse 3.1
> * all antlr command-line options are available via grammar property page
> * "Antlers" icon on project
> * Auto-add of antlr.jar ref to antlr projects
> 
> Unfortunately a late change in Eclipse 3.1 broke the breakpoint setting via
> the eclipse editor ruler. I'm looking into it. You can still set breakpoints
> via the Run menu. This does not affect Eclipse 3.02 operation.
> 
> NOTE: The antlr included with this is an unofficial pre-release of ANTLR
> 2.7.6. Ter hasn't integrated this yet (3.0 is keeping him busy). The only
> changes for 2.7.6 are:
> 
> * addition of JSR-45 SMAP generation for grammar-level debugging
> * fixed classloading for application servers
> * added system property to prevent System.exit calls from antlr
> 
> (The XML support I've mentioned is not in ANTLR; I've created an ANTLR
> offshoot called ANTXR that will be strictly for XML processing with some
> modified grammar syntax that's more XML-like.)
> 
> Let me know if there are any questions or problems!
> -- Scott
> 
> 
>
From virtualaspirin at yahoo.com  Thu Jun 23 13:54:43 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Thu Jun 23 13:54:47 2005
Subject: [antlr-interest] Peel-off Tree Parser patch
Message-ID: <20050623205443.29348.qmail@web30802.mail.mud.yahoo.com>

Hi folks

Completed a small work last night on antlr.

I have a fairly involved grammar for a poorly designed
language. My parser builds AST from it and then I have
an army of tree-parsers to do transformation on it. (I
said language is poorly designed... multiple passes
are non-avoidable). Each tree parser does its job on
small subsections of tree, so writing a complete
grammar is useless and additional effort on small
manpower we have.

Some tree-parsers are lucky enought to be able to work
"in-place". The not so fortunate ones have to build a
new tree from scratch because of huge number of
changes to input tree, though localized.

So, I want my whole tree copy back after applying
transformations and no way I'm gonna write complete
grammar. So I've added a boolean option "dupTree" that
when used along with "buildAST = true", will 'dupTree'
the non-terminals in grammar, so any children beneath
it will also be present in output tree.

I've tested the fix, it works well and doesn't break
anything else. Please let me know if its interesting
enough... I'm attaching diffs against antlr-2.7.6b1.

Thanks
- Akhilesh

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlr.diff
Type: application/octet-stream
Size: 5170 bytes
Desc: 645793284-antlr.diff
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050623/04ce77dc/antlr.obj
From anders.jacobsson at gmail.com  Thu Jun 23 15:25:33 2005
From: anders.jacobsson at gmail.com (Anders Jacobsson)
Date: Thu Jun 23 15:25:35 2005
Subject: [antlr-interest] Infinite lookahead/syntactic predicates
Message-ID: <146055d005062315256f8ea013@mail.gmail.com>

Hi!

I'm really sorry if I'm asking about something obvious or something
that is clearly stated in the documentation but I would really
appreciate in one or two hints that can guide me in my first attempts
of using ANTLR.

Anyway, I need to process things like the following:

'12345'D
'13AEF'H
'1A4'T
'1010101'B
'17853'

The first one should be matched to be a decimal constant, the second
one a hexadecimal constant, the third one a TBCD constant, the fourth
one a binary constant and the last to be a constant of unknown type.

It would have been nice to have the type indicator in front of the
constant but I guess I'm not that lucky... :) I have been trying to
use looping and syntactic predicates but so far no luck.

Has anyone any tips?

Cheers,
Anders
From parrt at cs.usfca.edu  Thu Jun 23 15:29:55 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 23 15:29:15 2005
Subject: [antlr-interest] Infinite lookahead/syntactic predicates
In-Reply-To: <146055d005062315256f8ea013@mail.gmail.com>
References: <146055d005062315256f8ea013@mail.gmail.com>
Message-ID: <579E83F9-7196-40E2-B07F-9C9BD08F6573@cs.usfca.edu>


On Jun 23, 2005, at 3:25 PM, Anders Jacobsson wrote:

> Hi!
>
> I'm really sorry if I'm asking about something obvious or something
> that is clearly stated in the documentation but I would really
> appreciate in one or two hints that can guide me in my first attempts
> of using ANTLR.
>
> Anyway, I need to process things like the following:
>
> '12345'D
> '13AEF'H
> '1A4'T
> '1010101'B
> '17853'
>
> The first one should be matched to be a decimal constant, the second
> one a hexadecimal constant, the third one a TBCD constant, the fourth
> one a binary constant and the last to be a constant of unknown type.

Can you do something simple like

CONST : '\'' ('0'..'9')+ '\'' ('D'|'H'|'T'|'B'| ) ;

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From chris at lotuscat.com  Thu Jun 23 15:32:55 2005
From: chris at lotuscat.com (Chris Black)
Date: Thu Jun 23 15:33:03 2005
Subject: [antlr-interest] Infinite lookahead/syntactic predicates
In-Reply-To: <146055d005062315256f8ea013@mail.gmail.com>
References: <146055d005062315256f8ea013@mail.gmail.com>
Message-ID: <42BB3897.9080503@lotuscat.com>

Anders Jacobsson wrote:

>Hi!
>
>I'm really sorry if I'm asking about something obvious or something
>that is clearly stated in the documentation but I would really
>appreciate in one or two hints that can guide me in my first attempts
>of using ANTLR.
>
>Anyway, I need to process things like the following:
>
>'12345'D
>'13AEF'H
>'1A4'T
>'1010101'B
>'17853'
>
>The first one should be matched to be a decimal constant, the second
>one a hexadecimal constant, the third one a TBCD constant, the fourth
>one a binary constant and the last to be a constant of unknown type.
>
>It would have been nice to have the type indicator in front of the
>constant but I guess I'm not that lucky... :) I have been trying to
>use looping and syntactic predicates but so far no luck.
>
>Has anyone any tips?
>
>Cheers,
>Anders
>  
>
Just off the top of my head, make a rule that matches any/all of them 
(like Ter's suggestion) and separates the single-quoted chars from the 
trailing type. Then within the action part of the rule do a bunch of 
if/else's on the trailing type (or lack thereof) to determine how to 
process the quoted chars. Then either set an appropriate variable, 
return something appropriate, or create an AST node by hand using some 
imaginary tokens using types you define yourself.

Hope this helps,
Chris
From virtualaspirin at yahoo.com  Thu Jun 23 15:43:48 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Thu Jun 23 15:43:50 2005
Subject: [antlr-interest] ANTLR v3 tree construction :)
In-Reply-To: <92E7C912-0BB1-4151-B9E2-AD9D2D21955B@cs.usfca.edu>
Message-ID: <20050623224348.74066.qmail@web30805.mail.mud.yahoo.com>

Hi Terence

Yup, in tree parser, and I vote for default in-line.
As for creating a new tree, thats what 'buildAST=true'
is there for. Am I right ? Coupled together with a
'dupTree=true' option (patch/standard), it will parser
and either build a new tree of just the traversed
nodes or 'peel-off' the whole traversed tree, if user
doesn't want to write whole grammar for un-interesting
sub-trees. 

The reason for asking this is to remove an assumption
that trees would be small enough to fit in memory! (My
trees can have around 10M nodes... and I have to scale
to ~half a billion nodes very shortly... and no I'm
not making this up, our tool will process chip
descriptions that will routinely have 10-100M gates)

Basically, what I'm looking for is a full blown ANTLR
tree-parsing stuff that whould make writing native
code (visitors etc) as un-necessary as can be... Tree
parser should be a full blown declarative language to
process and manipulate trees in a language agnostic
way.

Next thing on wish list would be a XQuery/XPath like
declarative query language to query and manipulate
tree.

Thanks for all this stuff Terence

Oh, sure you may forward my earlier response to
antlr-interest... I pressed 'reply' :-(

- Akhilesh


--- Terence Parr <parrt@cs.usfca.edu> wrote:
> So you mean in the tree parser, right?  Yes, I've
> been thinking a lot  
> about whether to copy tree to tree when output=AST
> in a tree parser  
> or to do inline modification.  Are you voting then
> for inline rewrites
> 
> top : ^(IDENT TYPE VALUE BLAH)
>          -> {removeValue(id)}? ^(IDENT ^(FOO BAR)
> ^(VALUE INT["5"])  
> BLAH)
>          -> ^(IDENT TYPE ^(FOO BAR) ^(VALUE
> INT["5"]) BLAH)
>      ;
> 
> Would this give you want you want?  I guess I still
> have the question  
> in my mind of whether the above creates a *new* tree
> or tries to  
> rewrite the existing.  Do you have a preference?
> 
> The new -> rewrite syntax is nice, right?  No
> code...portable. :)
> 
> Ter
> PS    May I send this to the antlr-interest list?
> --
> CS Professor & Grad Director, University of San
> Francisco
> Creator, ANTLR Parser Generator,
> http://www.antlr.org
> Cofounder, http://www.jguru.com
> 
> 



		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From virtualaspirin at yahoo.com  Thu Jun 23 15:57:36 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Thu Jun 23 15:57:38 2005
Subject: [antlr-interest] Infinite lookahead/syntactic predicates
In-Reply-To: <146055d005062315256f8ea013@mail.gmail.com>
Message-ID: <20050623225736.51497.qmail@web30804.mail.mud.yahoo.com>

Hi

Its fairly simple using syntactic lookahead, let the
lexer do all grunt work:

protected HEX_CONST: ('0'..'9'|'A'..'F'|'a'..'f')+;
protected DEC_CONST: ('0'..'9')+
protected BIN_CONST: ('0'|'1')+
protected FOO_CONST: ....

CONST:
 QUOTE
 (
  (HEX_CONST QUOTE 'H') => HEX_CONST QUOTE 'H' {
$setType(HEX_CONSTANT); }
 |(BIN_CONST QUOTE 'B') => BIN_CONST QUOTE 'B' {
$setType(BIN_CONSTANT); }
 |(DEC_CONST QUOTE 'D') => DEC_CONST QUOTE 'D' {
$setType(DEC_CONSTANT); }
 ....
  
 );

declare 'BIN_CONSTANT', 'DEC_CONSTANT' etc in tokens
section. That way you get nice tagged constants to use
in your parser grammar, or skip the $setType stuff if
you don't care about type of constant in parser.

HTH
- Akhilesh

--- Anders Jacobsson <anders.jacobsson@gmail.com> 
> 
> '12345'D
> '13AEF'H
> '1A4'T
> '1010101'B
> '17853'
> 
> The first one should be matched to be a decimal
> constant, the second
> one a hexadecimal constant, the third one a TBCD
> constant, the fourth
> one a binary constant and the last to be a constant
> of unknown type.
> 
> It would have been nice to have the type indicator
> in front of the
> constant but I guess I'm not that lucky... :) I have
> been trying to
> use looping and syntactic predicates but so far no
> luck.



		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - Find what you need with new enhanced search. 
http://info.mail.yahoo.com/mail_250
From parrt at cs.usfca.edu  Thu Jun 23 16:39:05 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 23 16:38:23 2005
Subject: [antlr-interest] ANTLR v3 tree construction :)
In-Reply-To: <20050623224348.74066.qmail@web30805.mail.mud.yahoo.com>
References: <20050623224348.74066.qmail@web30805.mail.mud.yahoo.com>
Message-ID: <2FE100F3-7C90-4709-8FDF-6CE44A78A8CD@cs.usfca.edu>


On Jun 23, 2005, at 3:43 PM, Akhilesh Mritunjai wrote:

> Hi Terence

Hi.  I've started a new blog today and decided to add my reply to it  
(dup of this email at the bottom of today's blog entry):

http://www.antlr.org/blog/antlr3/treegrammar.tml

> Yup, in tree parser, and I vote for default in-line.
> As for creating a new tree, thats what 'buildAST=true'
> is there for. Am I right ? Coupled together with a

Ok, so output=AST (in 3.0 parlance) would construct a tree from  
whatever the input was: tokens or trees.  A tree parser with rewrite  
rules, however, would do a rewrite.  Let's see an example:

parser grammar langParser;
options {output=AST;}
program : decl+ -> ^(DECL decl+) ;
decl : FLOAT_TYPE ID ';' -> ^(FLOAT_TYPE ID) ;

which creates trees like this:

        DECL
       /    \
"float"  "float"
    |        |
   var1     var2

(ain't that easy using the new notation?!!)

then we'd have a tree grammar that created a new tree from the old:

tree grammar langTreeParser;
options {output=AST;}
program : ^(DECL decl+) ;
decl : ^(FLOAT_TYPE ID) -> ^(FLOAT_TYPE ID FLOAT["0.0"]) ; // add "=  
0.0" initialization

(note how the tree grammar is the collection of right-hand-sides from  
the -> rewrites).  heh, somebody ought to write this down as doc ;)

Now, to do rewrites, one would leave off the output option:

tree grammar langTreeParser;
program : ^(DECL decl+) ;
decl : ^(FLOAT_TYPE ID) -> ^(FLOAT_TYPE ID FLOAT["0.0"]) ; // add "=  
0.0" initialization

Yes...I guess that makes sense.  The method generated for rule  
"program" would have to replace the children list of DECL with the  
*new* subtrees created by rule decl.  I guess like this:

program() {
   match(DECL);
   match(DOWN);
   while ( input.LA(1)==FLOAT_TYPE ) {
     result = decl();
     // replace child i with result tree
   }
   match(UP);
}

I am not sure how to do that easily, though I of course see the need  
(particularly given the tree sizes you refer to below...yikes!).  The  
TreeNodeStream that serializes the trees for two-dimensional parsing  
could be asked to replace the node I suppose...sort of like asking an  
iterator to do a delete.  Hmm...that is an interesting approach.  It  
would only allow replacement of a node under the "cursor" at input.LT 
(1) I guess.  It would have to make sure not to try to parse the new  
node.  You might have a  single node replaced with two nodes:

tree grammar t;
a : b+ ;
b : B -> X Y ; // replace B with X Y (2 nodes)

If the input were say B B then after the first call to b the "X Y"  
would replace the first B, yielding X Y B, but the TreeNodeStream  
would have to do a "replace and jump over new nodes" so the current  
pointer was on the 2nd B not the Y.

Regardless, the approach would invisibly allow a completely new tree  
to be created or to have a tree modified inline.  Wow.

> 'dupTree=true' option (patch/standard), it will parser
> and either build a new tree of just the traversed
> nodes or 'peel-off' the whole traversed tree, if user
> doesn't want to write whole grammar for un-interesting
> sub-trees.

I'm not sure I follow.  I normally use dot (wildcard) to jump over  
uninteresting nodes/trees, though I'm not sure how well that will  
work in 3.0 as the parsing algorithm is a little different.  I might  
have to add another element other than dot to mean ignore tree  
instead of just ignore node.

> The reason for asking this is to remove an assumption
> that trees would be small enough to fit in memory! (My
> trees can have around 10M nodes... and I have to scale
> to ~half a billion nodes very shortly... and no I'm
> not making this up, our tool will process chip
> descriptions that will routinely have 10-100M gates)

Seems like you'll have a hard time fitting 500M nodes in memory.  1  
32 bit word per node would already be 4G of RAM. ;)  Are you going to  
marshall these into/out of memory like virtual memory?

> Basically, what I'm looking for is a full blown ANTLR
> tree-parsing stuff that whould make writing native
> code (visitors etc) as un-necessary as can be... Tree
> parser should be a full blown declarative language to
> process and manipulate trees in a language agnostic
> way.

That is my goal.  How much RAM does each node take for you?

>
> Next thing on wish list would be a XQuery/XPath like
> declarative query language to query and manipulate
> tree.

eeewwww! ;)  Down with anything specified in XML that a human has to  
touch. ;)

> Thanks for all this stuff Terence

My pleasure :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From scott at javadude.com  Thu Jun 23 17:01:28 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Jun 23 17:02:26 2005
Subject: [antlr-interest] antlreclipse 4.0.0.b1
In-Reply-To: <41fed8f8050623133545b3ec4d@mail.gmail.com>
Message-ID: <200506240052.j5O0qm7k012588@s2.eroute.net>

As I said in the note, breakpoints cannot be set in the ruler (double-click
or right click) in the later eclipse builds. They changed something that
killed it.

You should be able to use the Run->Toggle Line Breakpoint option if your
cursor is on a grammar line (and the editor has focus). The shortcut key is
control-shift-B I believe.

I'll be looking at it again this weekend to try and fix that...

Later,
-- Scott

> -----Original Message-----
> From: Prashant Deva [mailto:prashant.deva@gmail.com] 
> Sent: Thursday, June 23, 2005 4:35 PM
> To: Scott Stanchfield
> Cc: antlr-interest
> Subject: Re: [antlr-interest] antlreclipse 4.0.0.b1
> 
> Well, i just tried it on 3.1RC2 and i am unable to set any 
> breakpoints in the grammar file.
> I click the 'toggle breakpoint' option, but nothing happens.
> 
> And this is a clean installation of RC2.
> 
> PRASHANT
> 
> On 6/20/05, Scott Stanchfield <scott@javadude.com> wrote:
> > I just posted the 4.0.0.b1 release of the ANTLR Eclipse plugin.
> > 
> > See http://antlreclipse.sourceforge.net for details on installation
> > 
> > Enjoy!
> > -- Scott Stanchfield
> > 
> > Note the big changes are:
> > * grammar level debugging
> > * bug fix for tab char in Eclipse 3.1
> > * all antlr command-line options are available via grammar property 
> > page
> > * "Antlers" icon on project
> > * Auto-add of antlr.jar ref to antlr projects
> > 
> > Unfortunately a late change in Eclipse 3.1 broke the breakpoint 
> > setting via the eclipse editor ruler. I'm looking into it. You can 
> > still set breakpoints via the Run menu. This does not 
> affect Eclipse 3.02 operation.
> > 
> > NOTE: The antlr included with this is an unofficial pre-release of 
> > ANTLR 2.7.6. Ter hasn't integrated this yet (3.0 is keeping 
> him busy). 
> > The only changes for 2.7.6 are:
> > 
> > * addition of JSR-45 SMAP generation for grammar-level debugging
> > * fixed classloading for application servers
> > * added system property to prevent System.exit calls from antlr
> > 
> > (The XML support I've mentioned is not in ANTLR; I've 
> created an ANTLR 
> > offshoot called ANTXR that will be strictly for XML processing with 
> > some modified grammar syntax that's more XML-like.)
> > 
> > Let me know if there are any questions or problems!
> > -- Scott
> > 
> > 
> >
> 


From scott at javadude.com  Thu Jun 23 18:38:49 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Thu Jun 23 18:39:21 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can be used
	....)
In-Reply-To: <41fed8f805062311265cf25358@mail.gmail.com>
Message-ID: <200506240230.j5O2UC78012152@s2.eroute.net>

> For example - I already have some completly mind boggling 
> feature planned for support xml parsing through antlr !!
> 
> PRASHANT

FYI - I'll be releasing a beta of my XML parsing this weekend (if all goes
as planned). It's an offshoot of ANTLR called ANTXR (ANother Tool for Xml
Recognition), pronounced "Ant-zer". (I've copied & modified the antlreclipse
plugin to support this as well.)

(Perhaps we should chat about what you plan and see if it makes more sense
to integrate with ANTXR or pursue what you're planning)


Basically I've modified the ANTLR syntax slightly so you can parse

<?xml version="1.0"?>
<people>
	<person ssn="111-11-1111">
		<first-name>Terence</first-name>
		<last-name>Parr</last-name>
	</person>
	<person ssn="222-22-2222">
		<first-name>Scott</first-name>
		<last-name>Stanchfield</last-name>
	</person>
	<person ssn="333-33-3333">
		<first-name>James</first-name>
		<last-name>Stewart</last-name>
		<sponge>Haha</sponge>
		<p>This is a <i>nested</i> other tag data</p>
	</person>
</people>

using the following grammar. (Note: I'm still working on the "any" tag --
I'm trying to come up with a nice shortcut syntax, but the listed syntax is
the verbose way of doing it.

The rules with <ruleName> automatically match the begin and end tag with
their name. I'm still working on getting tags with dots in their names to
work this way.

Attributes are referenced using "@attributeName" in an action.

----------
header {
package com.javadude.antlr.xml.sample;

import java.util.List;
import java.util.ArrayList;
}

class PeopleParser extends Parser;

document returns [List results = null]
	: results=people EOF
	;

<people> returns [List results = new ArrayList() ]
	{ Person p; }
	:	(p=<person>  {results.add(p);} )*
	;

<person> returns [Person p = new Person() ]
	{
		String first, last;
		p.setSsn(@ssn);
	}
	:	(	
			first=<first-name>
			{ p.setFirstName(first); }
		|	
			last=<last-name>
			{ p.setLastName(last);   }
		|	
			otherTag
		)*
	;
	
<first-name> returns [String value=null]
	:	pcdata:PCDATA { value = pcdata.getText(); }
	;
	
<last-name> returns [String value=null]
	:	pcdata:PCDATA { value = pcdata.getText(); }
	;
	
otherTag
	:	other:OTHER_TAG
		(	otherTag
		|	pcData:PCDATA
		)*
		XML_END_TAG
	;
----------

This example didn't use namespaces, but you can add something like

options {
	xmlns="http://www.somedomain.com";
	xmlns:stuff="http://www.crunchyfrog.com/plah/foo";
}

and then use

  <someTag>       ("somedomain" namespace)
  <stuff:someTag> ("crunchyfrog" namespace)

in the grammar rules.

I've been using an earlier version of this for several months with huge
success. I plan to convert my work code to use this new grammar syntax soon
(it uses the same constructs under the covers).

I used to have the rules look like

person options {xmlTag="person";}
  : ...
  ;

but I thought that was redundant.

Anyway, more when I release it.

Later,
-- Scott


From virtualaspirin at yahoo.com  Thu Jun 23 20:11:29 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Thu Jun 23 20:11:33 2005
Subject: [antlr-interest] ANTLR v3 tree construction :)
In-Reply-To: <2FE100F3-7C90-4709-8FDF-6CE44A78A8CD@cs.usfca.edu>
Message-ID: <20050624031129.41652.qmail@web30805.mail.mud.yahoo.com>

Hi Terence

Replies inline-

--- Terence Parr <parrt@cs.usfca.edu> wrote:
> I am not sure how to do that easily, though I of
> course see the need  
> (particularly given the tree sizes you refer to
> below...yikes!).  The  
> TreeNodeStream that serializes the trees for
> two-dimensional parsing  
> could be asked to replace the node I suppose...sort
> of like asking an  
> iterator to do a delete.  Hmm...that is an

Its not so simple given singly linked list approach.
Thats why right now it takes a fair amount of kludgy
code (need to keep track of previous sibling)....
however, it also has an indispensable advantage that
trivial amount book-keeping needs to be done. Any more
pointers and it will lead to a mess.

I feel that given the way (at least of 2.x) how tree
parser works, it can sure handle this.  Basically it
would amount to a LA(1) kinda thing inserted at proper
place-

 if(_delete(LA(1))
 {
   _t.setNextSibling(LA(1).getNextSibling());
   _t = _t.getNextSibling(); // Advance
   consume(LA(1)); // discard the deleted node
 }

> interesting approach.  It  
> would only allow replacement of a node under the
> "cursor" at input.LT(1) I guess.

Umm, actually it can decide one step ahead... LA is
always >= 1. So the current element is always
'previous' and always available and 'cursor' is always
one step ahead. In LA(k) situation, it can do it as
far as k-1 (depending upon actual available tokens).

>  It would have to make sure not to try
> to parse the new  
> node.

For additions, yes. Deletions should skip deleted
nodes.

>  You might have a  single node replaced with
> two nodes:
> 
> tree grammar t;
> a : b+ ;
> b : B -> X Y ; // replace B with X Y (2 nodes)
> 
> If the input were say B B then after the first call
> to b the "X Y"  
> would replace the first B, yielding X Y B, but the
> TreeNodeStream  
> would have to do a "replace and jump over new nodes"
> so the current  
> pointer was on the 2nd B not the Y.

Fairly easy... this is what my current code does:
(Using Java5 syntax)

Vector<AST> additions = new Vector<AST>();
additions.add(X);
additions.add(Y);

for(AST node : additions)
{
  node.setNextSibling(_t.getNextSibling());
  _t.setNextSibling(node);
  _t = node; // Advance
}

> Regardless, the approach would invisibly allow a
> completely new tree  
> to be created or to have a tree modified inline. 
> Wow.

And potentially killing off some arguments advocating
writing native code visitors etc. :-) It will make
compiler writing a bit more easy as primary code
transforms can be done in *much* easier fashion, eg.
making SSA trees and removing common sub-expressions.

> > 'dupTree=true' option (patch/standard), it will
> parser
> > and either build a new tree of just the traversed
> > nodes or 'peel-off' the whole traversed tree, if
> user
> > doesn't want to write whole grammar for
> un-interesting
> > sub-trees.
> 
> I'm not sure I follow.  I normally use dot
> (wildcard) to jump over  
> uninteresting nodes/trees, though I'm not sure how
> well that will  
> work in 3.0 as the parsing algorithm is a little
> different.  I might  
> have to add another element other than dot to mean
> ignore tree  
> instead of just ignore node.

The difference is that "." will duplicate only the
subtree root node, not the whole subtree present at
"." so, if the user wants to rewrite the tree by
duplicating it (perhaps wanting to preserve the handed
tree, as in my case), he gets a 'chopped-off' tree
with subtrees missing here and there. The subtrees are
not interesting for transformations, but that might
not mean that he wanted them to be chopped off... (the
'!' (antlr 2.x) notation is there for that). 

What the 'dupTree' option does is it considers
terminals as potential root elements of uninteresting
subtrees and instead of calling 'create()' it calls
'dupTree' on them... cloning the whole
'processing-wise-uninteresting' subtree.

Practical application I'm dealing with is creating a
concrete tree from a code template that given values
of some constants at runtime, generates different code
(like an uber macro): eg

@VAR i; // Compile time loop variable
@CONST N; // User specifies value at compile time

@IF(N == 0)
int a;
a = 0;
@ELSE
int a[N];

@FOR(i = 0; i < N; i = i + 1)
   a[i] = 0;
@ENDFOR

@ENDIF

given value N=3, it will generate:

int a[3];
a[0] = 0;
a[1] = 0;
a[2] = 0;

and given N=0, it will generate:
int a;
a = 0;


So a number of nodes in parse AST get deleted (the
macro nodes) and a number of nodes get added.

> Seems like you'll have a hard time fitting 500M
> nodes in memory.  1  
> 32 bit word per node would already be 4G of RAM. ;) 
> Are you going to  
> marshall these into/out of memory like virtual
> memory?

One of our product is already hitting 3G roof (upper
1G is reserved for kernel, so unavailable on 32bit
systems). My nodes are light-weight (payload in text
field) and I plan to write/use a small objectDB for
it. However, the pain is that most DBs' performance is
a function of # of records and throwing 50M recodrs at
them is not pretty! However, after some sort of
packing and stuff, I expect to transparently implement
on-demand loading and storing of nodes thanks to
excellent architecture of ANTLR. (I have a small
prototype working)

> > Basically, what I'm looking for is a full blown
> ANTLR
> > tree-parsing stuff that whould make writing native
> > code (visitors etc) as un-necessary as can be...
> Tree
> > parser should be a full blown declarative language
> to
> > process and manipulate trees in a language
> agnostic
> > way.
> 
> That is my goal.  How much RAM does each node take
> for you?

~32 bytes, But I have kept min RAM requirements fairly
low.  Due to factories, I can change node types from
CommonAST to DBAST on the fly :-) And a nice node
creation algorithm makes caching/purging really
work... no issues on that front. 

> eeewwww! ;)  Down with anything specified in XML
> that a human has to  
> touch. ;)

Ouch. The goal is to provide a declarative query/path
language... on second thoughts, I guess existing ANTLR
syntax is powerful enough to get the job done... I'll
have to research more to come up with convinving
arguments for/against the idea.

Akhilesh



		
__________________________________ 
Discover Yahoo! 
Stay in touch with email, IM, photo sharing and more. Check it out! 
http://discover.yahoo.com/stayintouch.html
From prashant.deva at gmail.com  Thu Jun 23 20:40:12 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun 23 20:40:15 2005
Subject: [antlr-interest] Places where Antlr can be used ....
In-Reply-To: <42BB08AC.4030306@lotuscat.com>
References: <41fed8f805062311265cf25358@mail.gmail.com>
	<42BB08AC.4030306@lotuscat.com>
Message-ID: <41fed8f8050623204062a62aff@mail.gmail.com>

Terrence,
I heard you are about to write a book 'Using Antlr in the wild'.. Does
it in anyway concern using antlr for 'other' stuff than the usual?
Have you any good ideas?

PRASHANT

On 6/24/05, Chris Black <chris@lotuscat.com> wrote:
> Prashant Deva wrote:
> 
> >What situations other than the normal compiler and translator
> >construction can you come up with where Antlr can be used?
> >
> >
> I use ANTLR almost exclusively for parsing data output by scientific
> instruments. Many instruments generate the same data (such as a curve of
> some value over time for example) but they all export it in their own
> non-standard, usually undocumented format. Some file formats group by
> sample, some by type of data, some by time, etc. I use antlr to get the
> information I actually want to look at into my own standardized data
> structures so the analysis can work the same on any instrument.
> Instrument output files tend to be of the form:
> Some: foo
> Header: bar
> Fields: baz
> 
> Stanza Header wibble
> column,headers,here
> datavalue,datavalue,datavalue
> .
> .
> .
> 
> Stanza Header pootie
> column,headers
> datavalue,datavalue
> 
> And are almost always field-based with a delimiter of a comma or a tab
> (sometimes it is column based or uses spaces).
> 
> Complications are that often different versions of the instrument
> software slightly change the format, but I want to be able to use the
> same parser for all versions. So I have alternatives in the parser that
> build the same type of AST, then the AST walker doesn't need to change
> for slight variations in input file (such as changing the names of
> header fields, etc). I use generic CSV and Tab separated value lexers
> that are shared across all parsers, these lexers generate a stream of
> FIELDs, DELIMs, and NEWLINEs and also handle double-quoted values. All
> real complexity is handled in the parser and treeparser.
> 
> If anyone has any advice or insight on this type of ANTLR grammer let me
> know :)
> 
> Chris
>
From prashant.deva at gmail.com  Thu Jun 23 22:22:43 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu Jun 23 22:22:46 2005
Subject: [antlr-interest] antlreclipse 4.0.0.b1
In-Reply-To: <200506240052.j5O0qm7k012588@s2.eroute.net>
References: <41fed8f8050623133545b3ec4d@mail.gmail.com>
	<200506240052.j5O0qm7k012588@s2.eroute.net>
Message-ID: <41fed8f80506232222872fcd1@mail.gmail.com>

On 6/24/05, Scott Stanchfield <scott@javadude.com> wrote:
> As I said in the note, breakpoints cannot be set in the ruler (double-click
> or right click) in the later eclipse builds. They changed something that
> killed it.
> 
> You should be able to use the Run->Toggle Line Breakpoint option if your
> cursor is on a grammar line (and the editor has focus). The shortcut key is
> control-shift-B I believe.

Actually the toggle Line breakpoint doesnt work either. But it seems
the keyboard shortcut does :)

Also it seems you don't build the generated files rightaway anymore.
Thus if the generated file is alredy open in an editor and i update my
antlr grmmar file and save it, i have to close the java file and open
it again to see the changes.

Why did you do this?

PRASHANT

> 
> I'll be looking at it again this weekend to try and fix that...
> 
> Later,
> -- Scott
> 
> > -----Original Message-----
> > From: Prashant Deva [mailto:prashant.deva@gmail.com]
> > Sent: Thursday, June 23, 2005 4:35 PM
> > To: Scott Stanchfield
> > Cc: antlr-interest
> > Subject: Re: [antlr-interest] antlreclipse 4.0.0.b1
> >
> > Well, i just tried it on 3.1RC2 and i am unable to set any
> > breakpoints in the grammar file.
> > I click the 'toggle breakpoint' option, but nothing happens.
> >
> > And this is a clean installation of RC2.
> >
> > PRASHANT
> >
> > On 6/20/05, Scott Stanchfield <scott@javadude.com> wrote:
> > > I just posted the 4.0.0.b1 release of the ANTLR Eclipse plugin.
> > >
> > > See http://antlreclipse.sourceforge.net for details on installation
> > >
> > > Enjoy!
> > > -- Scott Stanchfield
> > >
> > > Note the big changes are:
> > > * grammar level debugging
> > > * bug fix for tab char in Eclipse 3.1
> > > * all antlr command-line options are available via grammar property
> > > page
> > > * "Antlers" icon on project
> > > * Auto-add of antlr.jar ref to antlr projects
> > >
> > > Unfortunately a late change in Eclipse 3.1 broke the breakpoint
> > > setting via the eclipse editor ruler. I'm looking into it. You can
> > > still set breakpoints via the Run menu. This does not
> > affect Eclipse 3.02 operation.
> > >
> > > NOTE: The antlr included with this is an unofficial pre-release of
> > > ANTLR 2.7.6. Ter hasn't integrated this yet (3.0 is keeping
> > him busy).
> > > The only changes for 2.7.6 are:
> > >
> > > * addition of JSR-45 SMAP generation for grammar-level debugging
> > > * fixed classloading for application servers
> > > * added system property to prevent System.exit calls from antlr
> > >
> > > (The XML support I've mentioned is not in ANTLR; I've
> > created an ANTLR
> > > offshoot called ANTXR that will be strictly for XML processing with
> > > some modified grammar syntax that's more XML-like.)
> > >
> > > Let me know if there are any questions or problems!
> > > -- Scott
> > >
> > >
> > >
> >
> 
> 
>
From alex at csharpparser.com  Thu Jun 23 22:05:17 2005
From: alex at csharpparser.com (Alex Sedow)
Date: Thu Jun 23 22:52:44 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
References: <4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>
Message-ID: <000a01c5787a$53e1fe30$07060b0a@home>

>> ANTLR 2.7.5/2.7.6
>>
>> One thing that I continue to have problems with is the need to walk  up 
>> trees.  Cannot seem to find a getParent() method or a working  example of 
>> how (best) to add this functionality to an ASTNode  override?  Without an 
>> existing getParent, I cannot see a clean way  to provide backlinks in 
>> newly created ASTNodes overrides.  Have I  missed something?
>
> One way to handle this (at least I've tried it years ago) is to call  a 
> method to link everything up doubly *after* the tree has been  built.  I 
> found that the integrity/validity of double-linked trees is  very 
> complicated to keep together. :(
>
> I also found that the need to "look up" is the same as needing to  obtain 
> context information, which usually can be provided via the  grammar and a 
> few variables.

Yes, but what do if you need multiple context informations?
For C# partial types is needed use mutiple AST-contexts depend on placement 
of part declarations in source files. Example:

// file1
using I = I1;
partial class C : I {} // point1
// file2
using I = I2;
partial class C : I {} // point2

Note: all parts of partial type (on type-lookup) must be processed together 
in point1 or in point2.
I think for this case the best way is generate and use pointer to 
AST-parent.

--
Alex

From oscar_j_simpson at yahoo.com  Thu Jun 23 23:18:48 2005
From: oscar_j_simpson at yahoo.com (Oscar Simpson)
Date: Thu Jun 23 23:18:51 2005
Subject: [antlr-interest] Learning quickly....need recommendations
Message-ID: <20050624061848.48673.qmail@web30802.mail.mud.yahoo.com>


Well I made it through the first week without any major headaches. So far
I've been able to create a fairly robust grammar with only a few references
to the online documentation. I did cannibalize the lexer from the Java 1.3
grammar but that doesn't count :D


For the most part I've been following the common styling in the example
grammars in regards to using quoted strings rather than token id's. Now that
I've started doing more validation and cleanup on various parts of the
grammar I've been adding a lot more statements for calling setType() and
#([a,"a"], ##). I was wondering if anyone had a few suggestions on usage of
those types of statements. I'm particularly interested in situations where an
alternate approach is more beneficial, optimal, or preferred.

(yes I know I can assign a token to the quoted string in the tokens{} block I
decided not to go that route for a while)


		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From octavian_nita_2004 at yahoo.com  Fri Jun 24 00:32:40 2005
From: octavian_nita_2004 at yahoo.com (Octavian Nita)
Date: Fri Jun 24 00:32:43 2005
Subject: [antlr-interest] Places where Antlr can be used ....
In-Reply-To: <41fed8f805062311265cf25358@mail.gmail.com>
Message-ID: <20050624073240.70651.qmail@web54207.mail.yahoo.com>

Hello everyone!

This is still an ideea for translators/compilers area:

While I was trying to finish a preliminary version of
a translator from Lua to Java (about 2 weeks ago),
because Lua is a fairly simple procedural language
(most of it, excluding closures...) I had an ideea
about how to make a lexer and a parser for what I've
called Common Procedural Language Subset; basically,
this is comprised (in my mind, for now :)) in 2
grammars, one for the lexer and one for the parser for
some basic/common constructions used is most
programming languages, that can be inherited and hence
extended.... I mean, all languages (or most of them)
have some form of assignment (whether it is plain '=',
or set-q, or something else, anyway I'd go with '=',
because I thought the susbset for procedural
languages...); also most of the languages have a long
form of comment and a short one, and the mechanism for
matching them is the same, only the delimiters differ
(maybe it would be nice a way to set them and to get
the grammar as output... :)) (I guess you all know
what I'm talking about); also most identifiers start
with _ or letter and continue with _, letter and
digit... AND SO ON....

The ideea is to catch all these patterns in procedural
languages and to make something to start upon...

I didn't read the other replies on this topic and if I
had the same idea as anyone else, but later, I do
appologise for repeating...

Anyway, I don't claim this ideea :))
Respect, Tavi.


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From gt54-antlr at cyconix.com  Fri Jun 24 01:18:38 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Fri Jun 24 01:18:47 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <000a01c5787a$53e1fe30$07060b0a@home>
References: <4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>
	<000a01c5787a$53e1fe30$07060b0a@home>
Message-ID: <42BBC1DE.9050908@cyconix.com>

Alex Sedow wrote:

> Yes, but what do if you need multiple context informations?
> For C# partial types is needed use mutiple AST-contexts depend on 
> placement of part declarations in source files. Example:
> 
> // file1
> using I = I1;
> partial class C : I {} // point1
> // file2
> using I = I2;
> partial class C : I {} // point2
> 
> Note: all parts of partial type (on type-lookup) must be processed 
> together in point1 or in point2.
> I think for this case the best way is generate and use pointer to 
> AST-parent.

I'm having a problem seeing when it would be necessary to look back up a 
tree. At first sight, it seems to me that this is only necessary when 
you're carrying out processing during tree construction. If you defer 
processing till after tree completion, then surely you can always pass 
the required information down, rather than up.

Or have I missed the point?

From gt54-antlr at cyconix.com  Fri Jun 24 01:38:32 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Fri Jun 24 01:38:39 2005
Subject: [antlr-interest] Infinite lookahead/syntactic predicates
In-Reply-To: <20050623225736.51497.qmail@web30804.mail.mud.yahoo.com>
References: <20050623225736.51497.qmail@web30804.mail.mud.yahoo.com>
Message-ID: <42BBC688.90008@cyconix.com>

Akhilesh Mritunjai wrote:
> Hi
> 
> Its fairly simple using syntactic lookahead, let the
> lexer do all grunt work:
> 
> protected HEX_CONST: ('0'..'9'|'A'..'F'|'a'..'f')+;
> protected DEC_CONST: ('0'..'9')+
> protected BIN_CONST: ('0'|'1')+
> protected FOO_CONST: ....

The only advantage of this approach is that you can detect errors during 
lexing, rather than slightly later; the disadvantage is that the lexer 
has to do lookahead. You also end up having to call different integer 
conversion functions (one for binary, one for hex, etc) to reduce your 
constants to a common base, which reduces your flexibility.

I personally prefer the universal approach - parse the bit between 
quotes as an arbitrary string (not '0..9'!), get the base specifier, 
call 'strtol(..., base)' or equivalent to try to make sense of the answer.

Paul

From ArnarB at oddi.is  Fri Jun 24 01:53:59 2005
From: ArnarB at oddi.is (Arnar Birgisson)
Date: Fri Jun 24 01:54:18 2005
Subject: [antlr-interest] Places where Antlr can be used ....
Message-ID: <s2bbca38.006@Lime.oddi.is>

Network and other I/O protocols..

Arnar

>>> Prashant Deva <prashant.deva@gmail.com> 23.6.2005 18:26:12 >>>
What situations other than the normal compiler and translator
construction can you come up with where Antlr can be used?

If you can provide a nice list maybe I can specialize some parts of
Antlr Studio for them.

For example - I already have some completly mind boggling feature
planned for support xml parsing through antlr !!

So if you can come up with any ideas, please start throwing ...

PRASHANT

From scott at javadude.com  Fri Jun 24 03:43:30 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Jun 24 03:44:15 2005
Subject: [antlr-interest] antlreclipse 4.0.0.b1
In-Reply-To: <41fed8f80506232222872fcd1@mail.gmail.com>
Message-ID: <200506241135.j5OBYl7Y020109@s2.eroute.net>

I'll have to look into the generated files thing. I thought I had fixed that
so it would automatically close the generated file if open in the editor.

Hmmm... Thanks for pointing it out.

Later,
-- Scott


From oliver.zeigermann at gmail.com  Fri Jun 24 04:12:16 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Jun 24 04:12:19 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can be
	used ....)
In-Reply-To: <200506240230.j5O2UC78012152@s2.eroute.net>
References: <41fed8f805062311265cf25358@mail.gmail.com>
	<200506240230.j5O2UC78012152@s2.eroute.net>
Message-ID: <9da4f452050624041256214c79@mail.gmail.com>

I like this and think it is superior to the parsing part of XPA. But
where is the tree transformation part?

Oliver

On 6/24/05, Scott Stanchfield <scott@javadude.com> wrote:
> > For example - I already have some completly mind boggling
> > feature planned for support xml parsing through antlr !!
> >
> > PRASHANT
> 
> FYI - I'll be releasing a beta of my XML parsing this weekend (if all goes
> as planned). It's an offshoot of ANTLR called ANTXR (ANother Tool for Xml
> Recognition), pronounced "Ant-zer". (I've copied & modified the antlreclipse
> plugin to support this as well.)
> 
> (Perhaps we should chat about what you plan and see if it makes more sense
> to integrate with ANTXR or pursue what you're planning)
> 
> 
> Basically I've modified the ANTLR syntax slightly so you can parse
> 
> <?xml version="1.0"?>
> <people>
>         <person ssn="111-11-1111">
>                 <first-name>Terence</first-name>
>                 <last-name>Parr</last-name>
>         </person>
>         <person ssn="222-22-2222">
>                 <first-name>Scott</first-name>
>                 <last-name>Stanchfield</last-name>
>         </person>
>         <person ssn="333-33-3333">
>                 <first-name>James</first-name>
>                 <last-name>Stewart</last-name>
>                 <sponge>Haha</sponge>
>                 <p>This is a <i>nested</i> other tag data</p>
>         </person>
> </people>
> 
> using the following grammar. (Note: I'm still working on the "any" tag --
> I'm trying to come up with a nice shortcut syntax, but the listed syntax is
> the verbose way of doing it.
> 
> The rules with <ruleName> automatically match the begin and end tag with
> their name. I'm still working on getting tags with dots in their names to
> work this way.
> 
> Attributes are referenced using "@attributeName" in an action.
> 
> ----------
> header {
> package com.javadude.antlr.xml.sample;
> 
> import java.util.List;
> import java.util.ArrayList;
> }
> 
> class PeopleParser extends Parser;
> 
> document returns [List results = null]
>         : results=people EOF
>         ;
> 
> <people> returns [List results = new ArrayList() ]
>         { Person p; }
>         :       (p=<person>  {results.add(p);} )*
>         ;
> 
> <person> returns [Person p = new Person() ]
>         {
>                 String first, last;
>                 p.setSsn(@ssn);
>         }
>         :       (
>                         first=<first-name>
>                         { p.setFirstName(first); }
>                 |
>                         last=<last-name>
>                         { p.setLastName(last);   }
>                 |
>                         otherTag
>                 )*
>         ;
> 
> <first-name> returns [String value=null]
>         :       pcdata:PCDATA { value = pcdata.getText(); }
>         ;
> 
> <last-name> returns [String value=null]
>         :       pcdata:PCDATA { value = pcdata.getText(); }
>         ;
> 
> otherTag
>         :       other:OTHER_TAG
>                 (       otherTag
>                 |       pcData:PCDATA
>                 )*
>                 XML_END_TAG
>         ;
> ----------
> 
> This example didn't use namespaces, but you can add something like
> 
> options {
>         xmlns="http://www.somedomain.com";
>         xmlns:stuff="http://www.crunchyfrog.com/plah/foo";
> }
> 
> and then use
> 
>   <someTag>       ("somedomain" namespace)
>   <stuff:someTag> ("crunchyfrog" namespace)
> 
> in the grammar rules.
> 
> I've been using an earlier version of this for several months with huge
> success. I plan to convert my work code to use this new grammar syntax soon
> (it uses the same constructs under the covers).
> 
> I used to have the rules look like
> 
> person options {xmlTag="person";}
>   : ...
>   ;
> 
> but I thought that was redundant.
> 
> Anyway, more when I release it.
> 
> Later,
> -- Scott
> 
> 
>
From scott at javadude.com  Fri Jun 24 04:52:15 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Jun 24 04:52:29 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can be
	used ....)
In-Reply-To: <9da4f452050624041256214c79@mail.gmail.com>
Message-ID: <200506241243.j5OChV7A014579@s2.eroute.net>

> I like this and think it is superior to the parsing part of 
> XPA. But where is the tree transformation part?
> 
> Oliver

I'm not doing any tree transformation. I'm planning on keeping this separate
from XPA, though if you're interested we could work on putting tree
transformation in ANTXR, or set up XPA as a separate tree transformer that
could be integrated with ANTXR output. I must admit I haven't look at the
XPA tree transformation support very closely, so I don't know how easy this
would be. If we found the right place for hooks, XPA and ANTXR could work
together quite nicely.

The ANTLR AST support still exists in ANTXR, and ANTXR should be able to
create trees. I haven't tried it yet, though, so I may have inadvertently
broken something. I don't think that was hit though. Standard ANTLR tree
parsers should work on ANTXR output, though again, I haven't tried it.

About 6 weeks ago I realized things would be a lot more user friendly if I
split from ANTLR. Ter wasn't enthusiastic about it, but understood that it
could be better served that way.

I now have it working with XMLPULL parsers as well (sooooo much easier than
the wonderful thread synch we did for SAX, but the validation support is
weak in most of the XMLPULL parsers I looked at). I've got simple token
stream versions for Xerces, Crimson and kxml so users don't need to
configure them for basic XML parsing. They can still use the more complex
sax and xmlpull streams if full control is desired.

(I pulled out the non-Java code generators. Eventually I may add them back
in if I get the chance to learn XML parsing on those languages.)

What I *really* need to do is an XML Schema->ANTXR grammar generator...

Later,
-- Scott


From oliver.zeigermann at gmail.com  Fri Jun 24 07:14:41 2005
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri Jun 24 07:14:46 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can be
	used ....)
In-Reply-To: <200506241243.j5OChV7A014579@s2.eroute.net>
References: <9da4f452050624041256214c79@mail.gmail.com>
	<200506241243.j5OChV7A014579@s2.eroute.net>
Message-ID: <9da4f452050624071447ef8a4a@mail.gmail.com>

On 6/24/05, Scott Stanchfield <scott@javadude.com> wrote:
> > I like this and think it is superior to the parsing part of
> > XPA. But where is the tree transformation part?
> >
> > Oliver
> 
> I'm not doing any tree transformation. I'm planning on keeping this separate
> from XPA, though if you're interested we could work on putting tree
> transformation in ANTXR, or set up XPA as a separate tree transformer that
> could be integrated with ANTXR output. I must admit I haven't look at the
> XPA tree transformation support very closely, so I don't know how easy this
> would be. If we found the right place for hooks, XPA and ANTXR could work
> together quite nicely.
> 
> The ANTLR AST support still exists in ANTXR, and ANTXR should be able to
> create trees. I haven't tried it yet, though, so I may have inadvertently
> broken something. I don't think that was hit though. Standard ANTLR tree
> parsers should work on ANTXR output, though again, I haven't tried it.

XPA tree transformation works by simply bringing XML into an AST and
do the processing using ordinary tree transformation rules. Mapping of
XML element to AST type is done using the TokenTypes.txt file which is
needed to parse the XML into an AST.
 
> About 6 weeks ago I realized things would be a lot more user friendly if I
> split from ANTLR. Ter wasn't enthusiastic about it, but understood that it
> could be better served that way.

Have you evaluated bringing this to 3.0? XPA simply works with ANTLR
without modifications, but the ANTLR grammar syntax is less than
optimal for XML parsing. As I said your solution seems superion in
that respect.

> I now have it working with XMLPULL parsers as well (sooooo much easier than
> the wonderful thread synch we did for SAX, but the validation support is
> weak in most of the XMLPULL parsers I looked at). I've got simple token
> stream versions for Xerces, Crimson and kxml so users don't need to
> configure them for basic XML parsing. They can still use the more complex
> sax and xmlpull streams if full control is desired.

Sounds cool.

> (I pulled out the non-Java code generators. Eventually I may add them back
> in if I get the chance to learn XML parsing on those languages.)
> 
> What I *really* need to do is an XML Schema->ANTXR grammar generator...

That would be cool and very useful to consume XML into Java, yes. Cool
idea. Might be fun as well. Even though I think DTD still is much more
common than Schema. What about an ANTLR DTD parser? (Maybe even antlr
3.0?)


Oliver
From prashant.deva at gmail.com  Fri Jun 24 07:55:01 2005
From: prashant.deva at gmail.com (Prashant Deva)
Date: Fri Jun 24 07:55:03 2005
Subject: [antlr-interest] Places where Antlr can be used ....
In-Reply-To: <20050624073240.70651.qmail@web54207.mail.yahoo.com>
References: <41fed8f805062311265cf25358@mail.gmail.com>
	<20050624073240.70651.qmail@web54207.mail.yahoo.com>
Message-ID: <41fed8f805062407551e9fdd76@mail.gmail.com>

On 6/24/05, Octavian Nita <octavian_nita_2004@yahoo.com> wrote:
> Hello everyone!
> 
> This is still an ideea for translators/compilers area:
> 
> While I was trying to finish a preliminary version of
> a translator from Lua to Java (about 2 weeks ago),
> because Lua is a fairly simple procedural language
> (most of it, excluding closures...) I had an ideea
> about how to make a lexer and a parser for what I've
> called Common Procedural Language Subset; basically,
> this is comprised (in my mind, for now :)) in 2
> grammars, one for the lexer and one for the parser for
> some basic/common constructions used is most
> programming languages, that can be inherited and hence
> extended.... I mean, all languages (or most of them)
> have some form of assignment (whether it is plain '=',
> or set-q, or something else, anyway I'd go with '=',
> because I thought the susbset for procedural
> languages...); also most of the languages have a long
> form of comment and a short one, and the mechanism for
> matching them is the same, only the delimiters differ
> (maybe it would be nice a way to set them and to get
> the grammar as output... :)) (I guess you all know
> what I'm talking about); also most identifiers start
> with _ or letter and continue with _, letter and
> digit... AND SO ON....
> 

I already have something in Antlr Studio somewhere alogn the lines of
what you are saying.
Look at the vide of lexer wizard. It is entirely based on that idea
that almost all languages have single and multi lien comments,
identifiers of a common type ,and string literals.
You just have to specify the delimeters and token names for these in
the wizard and the lexer is created for you.

Thus a lexer which would usually take hours and be riddled with bugs,
can be built in under a minute.

PRASHANT
http://antlrstudio.com


> The ideea is to catch all these patterns in procedural
> languages and to make something to start upon...
> 
> I didn't read the other replies on this topic and if I
> had the same idea as anyone else, but later, I do
> appologise for repeating...
> 
> Anyway, I don't claim this ideea :))
> Respect, Tavi.
> 
> 
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com
>
From gbr at newtechlaw.com  Fri Jun 24 08:18:51 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Fri Jun 24 08:20:01 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <42BBC1DE.9050908@cyconix.com>
References: <000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>
	<000a01c5787a$53e1fe30$07060b0a@home>
Message-ID: <4.3.2.7.2.20050624070544.07608a08@morpho.newtechlaw.com>

At 09:18 AM 6/24/2005, Paul Johnson wrote:

>Alex Sedow wrote:
>
>>Yes, but what do if you need multiple context informations?
>>For C# partial types is needed use mutiple AST-contexts depend on 
>>placement of part declarations in source files. Example:
>>// file1
>>using I = I1;
>>partial class C : I {} // point1
>>// file2
>>using I = I2;
>>partial class C : I {} // point2
>>Note: all parts of partial type (on type-lookup) must be processed 
>>together in point1 or in point2.
>>I think for this case the best way is generate and use pointer to AST-parent.
>
>I'm having a problem seeing when it would be necessary to look back up a 
>tree. At first sight, it seems to me that this is only necessary when 
>you're carrying out processing during tree construction. If you defer 
>processing till after tree completion, then surely you can always pass the 
>required information down, rather than up.

True for well defined, highly constrained source data.  But where the 
source contains context that is determinable only from some progression of 
nodes, the amount and complexity of carry forward can quickly outweigh the 
effort of doing a look-back.

In my case, the source data contains multiple overlapping contexts.  At a 
given node, carry forward would require sorting through an expansive set of 
of only potentially relevant data in a proprietary data structure with only 
a limited ability to know what may be pruned for subsequent nodes.  But the 
tree neatly carries all of this information and a reverse tree-walk gives 
an immediately narrowing identification of the applicable context.

Even where carry forward would work, look-back may simply be a cleaner 
conceptual model in some situations.
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From parrt at cs.usfca.edu  Fri Jun 24 09:27:04 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 24 09:26:23 2005
Subject: [antlr-interest] Places where Antlr can be used ....
In-Reply-To: <41fed8f8050623204062a62aff@mail.gmail.com>
References: <41fed8f805062311265cf25358@mail.gmail.com>
	<42BB08AC.4030306@lotuscat.com>
	<41fed8f8050623204062a62aff@mail.gmail.com>
Message-ID: <E0A05B84-740F-48B0-A5AD-7DD8F4A4ACC5@cs.usfca.edu>


On Jun 23, 2005, at 8:40 PM, Prashant Deva wrote:

> Terrence,
> I heard you are about to write a book 'Using Antlr in the wild'.. Does
> it in anyway concern using antlr for 'other' stuff than the usual?

Sure does. ;)

> Have you any good ideas?

Sure do. ;)

For example, I'm going to try doing an SMTP protocol grammar on the  
fly during a lexer in India and Thailand this July/August.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Fri Jun 24 09:33:15 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 24 09:32:34 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <4.3.2.7.2.20050624070544.07608a08@morpho.newtechlaw.com>
References: <000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>
	<000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050624070544.07608a08@morpho.newtechlaw.com>
Message-ID: <F9C5509E-E9C9-4F07-A6DD-2FE03E9F31A2@cs.usfca.edu>


On Jun 24, 2005, at 8:18 AM, Gerald B. Rosenberg wrote:
> Even where carry forward would work, look-back may simply be a  
> cleaner conceptual model in some situations.

hi.  My experience is that if you need to look back, it's just as  
easy to keep a ptr in each rule of interest you enter so you can  
simply ask for the tree location for the rule above you.  Remember  
that when you want to look up, you mean you want to know your  
context.  To me context means what rules led to this rule and what  
input did they start with.  For recursive stuff, you need a stack of  
these pointers...ANTLR v3 should make this easier:

tree grammar t;

decl
scope {
     Tree root;
}
init {
     root = input.LT(1);  // point at input tree node for this rule
}
     :   type declarator ';'
     ;

declarator
     :    ID {$decl.root}  // can refer to whole decl tree no  
sweat...even recursively
     ;

So if decl calls decl eventually then you get another copy of the  
declRoot pointer :)  It refers to the most recent always. :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From gudnabrsam at yahoo.com  Fri Jun 24 09:35:41 2005
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Fri Jun 24 09:35:43 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can be
	used ....)
In-Reply-To: <200506240230.j5O2UC78012152@s2.eroute.net>
Message-ID: <20050624163541.58500.qmail@web30913.mail.mud.yahoo.com>

--- Scott Stanchfield <scott@javadude.com> wrote:
[SNIP]
> Basically I've modified the ANTLR syntax slightly so
> you can parse
> 
> <?xml version="1.0"?>
> <people>
> 	<person ssn="111-11-1111">
> 		<first-name>Terence</first-name>
> 		<last-name>Parr</last-name>
> 	</person>

etc... 

Scott: I see that you are a developer on XPA.  How
does your current ANTLR/XML work compare?

-Matt


		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From gbr at newtechlaw.com  Fri Jun 24 11:12:28 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Fri Jun 24 11:13:31 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <F9C5509E-E9C9-4F07-A6DD-2FE03E9F31A2@cs.usfca.edu>
References: <4.3.2.7.2.20050624070544.07608a08@morpho.newtechlaw.com>
	<000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>
	<000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050624070544.07608a08@morpho.newtechlaw.com>
Message-ID: <4.3.2.7.2.20050624100809.076311b8@morpho.newtechlaw.com>

At 09:33 AM 6/24/2005, Terence Parr wrote:


>On Jun 24, 2005, at 8:18 AM, Gerald B. Rosenberg wrote:
>>Even where carry forward would work, look-back may simply be a
>>cleaner conceptual model in some situations.
>
>hi.  My experience is that if you need to look back, it's just as
>easy to keep a ptr in each rule of interest you enter so you can
>simply ask for the tree location for the rule above you.

Interesting.  That is effectively a getParent.

>Remember
>that when you want to look up, you mean you want to know your
>context.  To me context means what rules led to this rule and what
>input did they start with.

Yes, and in most nicely structured cases just the one above.

>For recursive stuff, you need a stack of
>these pointers...

Now we are back to custom data structures to hold what the tree already 
holds.  Further, context may need to be determined not by the entire set of 
prior rules/nodes -- some could be irrelevant or, worse, misleading as to 
the correct context.  So, either I work through this custom stack and with 
a bunch of custom code to worry out the details of the context or I define 
a tree-walker that automatically recognizes the relevant nodes and, in a 
nicely structured manner, identifies context.  Seems like the latter would 
be the best use of the strengths of ANTLR.

Your node pointer idea may provide a workable alternative.  If, from a 
current node, I can adequately guess which is the applicable context 
defining start node, I can just start the context-recognition tree-walker 
there, terminating on the current node.  Still, the only certainty as to 
current context logically requires starting the context-recognition 
tree-walker in reverse from the current node.
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From parrt at cs.usfca.edu  Fri Jun 24 12:29:10 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 24 12:28:30 2005
Subject: [antlr-interest] Bug in  ANTLR 3.0ea3 code generator
In-Reply-To: <1636153289.20050624211340@gmx.net>
References: <000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>
	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu>
	<000a01c5787a$53e1fe30$07060b0a@home>
	<4.3.2.7.2.20050624070544.07608a08@morpho.newtechlaw.com>
	<F9C5509E-E9C9-4F07-A6DD-2FE03E9F31A2@cs.usfca.edu>
	<1636153289.20050624211340@gmx.net>
Message-ID: <C5DF0617-F56D-4621-B5B8-08B453926BB0@cs.usfca.edu>

Weird.  You mean the extra ))?  DAMN!  I tried all my units tests but  
not the examples!  ARgh!

I thought I removed actions from my descriptions...i'm adding  
comments to the output code to tell you where you are in the  
grammar.  Actions naturally screw this up if I don't shut them off.   
Hmm...

I meant to do

         // Javadoc.lexer.g:18:6: ( ( (' '|'\t'|'\n'))+ )

etc...

Ok, I've put CodeGenTreeWalker.* in

http://www.antlr.org/download/CodeGenTreeWalker.*

Drop it in and you'll be ok. :)  Sorry!

Ter
On Jun 24, 2005, at 12:13 PM, Sebastian Mies wrote:

> Hi Terence,
>
> hmm... tried to compile simple.g and javadoc.g (from examples v3)  
> with ANTLR 3.0ea3.
> I've got syntax errors in the generated lexers (see pic).
>
> My fault?
>
> Sebastian.
>
>
>
>
> <SimpleLexer.jpg>
>

--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From mathieu.clabaut at gmail.com  Fri Jun 24 12:37:19 2005
From: mathieu.clabaut at gmail.com (Mathieu Clabaut)
Date: Fri Jun 24 12:37:23 2005
Subject: [antlr-interest] [Slightly OT] About dynamic parser
Message-ID: <db9360ca0506241237301419d0@mail.gmail.com>

 Hello,

 Just for information, I've stumbled on openZZ (
http://openzz.sourceforge.net/ ) which is a dynamic parser (Had some
difficulties to find it with google... Had the wrong phrasing for my
request)...

 I like it very much... Seems very powerfull... In two words, it
allows to change/evolve the grammar during the language recognition...

 Of course, I does not fullfill the same requirement than ANTLR, but
it seems to me very interesting (at least intelectually speaking), and
I thought some of you would lik ethe idea...

Happy parsing..

 -mat
-- 
____________http://www.gnu.org/philosophy/no-word-attachments.fr.html
Mathieu CLABAUT                         mailto:mathieu.clabaut@gmail.com
           F2F5 442F F2AC E1D5 9D31  3EFC 842A BC4A 123B 9A65
From atripp at jazillian.com  Fri Jun 24 13:47:27 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Fri Jun 24 13:47:29 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
Message-ID: <42BC715F.5060903@jazillian.com>

>
>
>On Jun 23, 2005, at 12:18 PM, Gerald B. Rosenberg wrote:
>
>> ANTLR 2.7.5/2.7.6
>>
>> One thing that I continue to have problems with is the need to walk  
>> up trees.  Cannot seem to find a getParent() method or a working  
>> example of how (best) to add this functionality to an ASTNode  
>> override?  Without an existing getParent, I cannot see a clean way  
>> to provide backlinks in newly created ASTNodes overrides.  Have I  
>> missed something?
>

I wrote my own FancyAST class which extends CommonAST and provides 
getParent()
(and a few other goodies). It's pretty simple, just overriding 
addChild(), setFirstSibling() and
setNextSibling(). You can contact me directly if you want it. Maybe I'll 
try to add it to
the official ANTLR (with Ter's permission) or in the File Sharing area.

>One way to handle this (at least I've tried it years ago) is to call  
>a method to link everything up doubly *after* the tree has been  
>built.  I found that the integrity/validity of double-linked trees is  
>very complicated to keep together. :(
>  
>
Mine's been so maintenance free, I forgot that BaseAST/CommonAST didn't 
have this built-in
until I saw this post :)

>I also found that the need to "look up" is the same as needing to  
>obtain context information, which usually can be provided via the  
>grammar and a few variables.
>  
>
I had lots of cases where I needed to search up an AST where keeping 
context info would have
been messy:
"Is the current node inside a 'for loop'? - search up for ASTs of a 
given type
"Get me all the other references  of this variable" - search up the tree 
for the declaration,
    then back down for references
"Find all other variables that are ever assigned a expression/value 
involving this variable"
...and so on...

>> Also, are the auto-trees in 3.0 doubly linked?
>
I assume it will be something like today, with several levels to choose 
from:
BaseAST for just about everybody,
subclass CommonAST for most people,
maybe subclass FancyAST for those who want getParent(),
your own subclass.

>Ter
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050624/1dd88598/attachment.html
From atripp at jazillian.com  Fri Jun 24 14:01:55 2005
From: atripp at jazillian.com (Andy Tripp)
Date: Fri Jun 24 14:01:57 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
Message-ID: <42BC74C3.3040409@jazillian.com>

>
>
>On Jun 24, 2005, at 8:18 AM, Gerald B. Rosenberg wrote:
>> Even where carry forward would work, look-back may simply be a  
>> cleaner conceptual model in some situations.
>
>hi.  My experience is that if you need to look back, it's just as  
>easy to keep a ptr in each rule of interest you enter so you can  
>simply ask for the tree location for the rule above you. 
>
Doesn't that mean that in general, you have to keep a ptr for 
essentially all rules?
In other words, if I want to know if the current statement is somewhere 
within a
"for" block, I need to keep a ptr at each rule in which I might end up 
with an AST
that has a "statement" somewhere under a "for".

That seems a lot more difficult than just overriding CommonAST to 
provide a parent and
being done with it.

> Remember  
>that when you want to look up, you mean you want to know your  
>context.  
>
Not always. I often had to look at other places in the AST, and a stack 
with the current
context wouldn't have done it. For example, when manipulating C code, I 
see a "%d"
somewhere, look up the tree for the "printf" node, and then look down 
for the appropriate
child to get the "printf" argument that matches my "%d". Context is not 
enough.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050624/9f3d712d/attachment.html
From parrt at cs.usfca.edu  Fri Jun 24 14:32:42 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri Jun 24 14:32:00 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
In-Reply-To: <42BC74C3.3040409@jazillian.com>
References: <42BC74C3.3040409@jazillian.com>
Message-ID: <82E2049D-7418-4362-9D96-640D8EF5292C@cs.usfca.edu>


On Jun 24, 2005, at 2:01 PM, Andy Tripp wrote:

>> On Jun 24, 2005, at 8:18 AM, Gerald B. Rosenberg wrote: > Even  
>> where carry forward would work, look-back may simply be a >  
>> cleaner conceptual model in some situations. hi. My experience is  
>> that if you need to look back, it's just as easy to keep a ptr in  
>> each rule of interest you enter so you can simply ask for the tree  
>> location for the rule above you.
> Doesn't that mean that in general, you have to keep a ptr for  
> essentially all rules?
> In other words, if I want to know if the current statement is  
> somewhere within a
> "for" block, I need to keep a ptr at each rule in which I might end  
> up with an AST
> that has a "statement" somewhere under a "for".

Hi.  Actually you just need a single pointer: currentStatement and  
define it once in stat rule I think.

> That seems a lot more difficult than just overriding CommonAST to  
> provide a parent and
> being done with it.

A lot slower to do the walk though... ;)

>> Remember that when you want to look up, you mean you want to know  
>> your context.
> Not always. I often had to look at other places in the AST, and a  
> stack with the current
> context wouldn't have done it. For example, when manipulating C  
> code, I see a "%d"
> somewhere, look up the tree for the "printf" node, and then look  
> down for the appropriate
> child to get the "printf" argument that matches my "%d". Context is  
> not enough.

currentExpression will get that for you. ;)  Walk down from  
currentExpression.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From atripp at comcast.net  Fri Jun 24 18:58:14 2005
From: atripp at comcast.net (Andy Tripp)
Date: Fri Jun 24 18:58:19 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
Message-ID: <42BCBA36.3040900@comcast.net>

>
>
>>> On Jun 24, 2005, at 8:18 AM, Gerald B. Rosenberg wrote: > Even  
>>> where carry forward would work, look-back may simply be a >  
>>> cleaner conceptual model in some situations. hi. My experience is  
>>> that if you need to look back, it's just as easy to keep a ptr in  
>>> each rule of interest you enter so you can simply ask for the tree  
>>> location for the rule above you.
>> Doesn't that mean that in general, you have to keep a ptr for  
>> essentially all rules?
>> In other words, if I want to know if the current statement is  
>> somewhere within a
>> "for" block, I need to keep a ptr at each rule in which I might end  
>> up with an AST
>> that has a "statement" somewhere under a "for".
>
>Hi.  Actually you just need a single pointer: currentStatement and  
>define it once in stat rule I think.
>
I mean anywhere under the "for", as in:
for (;;) {
    statement;
    { 
         while(true) {
                if (false) {
                     your_statement_here_is_somewhere_under_a_for;
                }
          }
      }
}

>
>> That seems a lot more difficult than just overriding CommonAST to  
>> provide a parent and
>> being done with it.
>
>A lot slower to do the walk though... ;)
>
Just a few steps to the top of the tree. Almost always less than, say, 
10 or so.
Compare that to storing data (ok, we're in a "for loop now").
I think the walking's going to be faster, especially when parsing lots 
of code but
only walking up the tree rarely.

>
>>> Remember that when you want to look up, you mean you want to know  
>>> your context.
>> Not always. I often had to look at other places in the AST, and a  
>> stack with the current
>> context wouldn't have done it. For example, when manipulating C  
>> code, I see a "%d"
>> somewhere, look up the tree for the "printf" node, and then look  
>> down for the appropriate
>> child to get the "printf" argument that matches my "%d". Context is  
>> not enough.
>
>currentExpression will get that for you. ;)  Walk down from  
>currentExpression.
>
The place where you are ("%d") and the thing you're looking for ("i") 
are not in the same
expression:
printf("%d\n", i);


From scott at javadude.com  Fri Jun 24 20:32:27 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Jun 24 20:32:50 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can be
	used ....)
In-Reply-To: <9da4f452050624071447ef8a4a@mail.gmail.com>
Message-ID: <200506250423.j5P4Nb79031839@s2.eroute.net>

> XPA tree transformation works by simply bringing XML into an 
> AST and do the processing using ordinary tree transformation 
> rules. Mapping of XML element to AST type is done using the 
> TokenTypes.txt file which is needed to parse the XML into an AST.

Ah. I think that should work pretty much as is in ANTXR though I haven't
tried it.


> Have you evaluated bringing this to 3.0?

Not yet. I want to get this out first before I even look at 3.0.

> > What I *really* need to do is an XML Schema->ANTXR grammar 
> generator...
> 
> That would be cool and very useful to consume XML into Java, 
> yes. Cool idea. Might be fun as well. Even though I think DTD 
> still is much more common than Schema. What about an ANTLR 
> DTD parser? (Maybe even antlr 3.0?)

I want to be able to generate a grammar from either a schema or DTD.

Later,
-- Scott


From scott at javadude.com  Fri Jun 24 20:32:27 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Fri Jun 24 20:32:54 2005
Subject: XML parsing (was RE: [antlr-interest] Places where Antlr can
	beused ....)
In-Reply-To: <20050624163541.58500.qmail@web30913.mail.mud.yahoo.com>
Message-ID: <200506250423.j5P4Nb7A031839@s2.eroute.net>

I'm actually doing this separately. I was thinking of merging with XPA, but
decided to keep this separate.

The SAX-based scanner is actually pretty similar. (We both arrived at the
same approach independently). I also have an XMLPULL based scanner. I only
have a single XML_END_TAG token that is passed for all end tags.

The parser is different. I added syntax to ANTLR to automatically generate
the start/end tag matches, as well as attribute syntax to make action code
simpler.

I hope to have the beta out this weekend. I did a ton of work on it today (I
converted a project at work to use it and it works great now).

Later,
--- Scott

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org 
> [mailto:antlr-interest-bounces@antlr.org] On Behalf Of Matt Benson
> Sent: Friday, June 24, 2005 12:36 PM
> To: Antlr List
> Subject: Re: XML parsing (was RE: [antlr-interest] Places 
> where Antlr can beused ....)
> 
> --- Scott Stanchfield <scott@javadude.com> wrote:
> [SNIP]
> > Basically I've modified the ANTLR syntax slightly so you can parse
> > 
> > <?xml version="1.0"?>
> > <people>
> > 	<person ssn="111-11-1111">
> > 		<first-name>Terence</first-name>
> > 		<last-name>Parr</last-name>
> > 	</person>
> 
> etc... 
> 
> Scott: I see that you are a developer on XPA.  How does your 
> current ANTLR/XML work compare?
> 
> -Matt
> 
> 
> 		
> ____________________________________________________
> Yahoo! Sports
> Rekindle the Rivalries. Sign up for Fantasy Football 
> http://football.fantasysports.yahoo.com
> 


From amohombe at yahoo.com  Sat Jun 25 03:29:18 2005
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Sat Jun 25 03:29:14 2005
Subject: [antlr-interest] Re: [Slightly OT] About dynamic parser
In-Reply-To: <db9360ca0506241237301419d0@mail.gmail.com>
References: <db9360ca0506241237301419d0@mail.gmail.com>
Message-ID: <d9jb82$k7a$1@sea.gmane.org>

>  Just for information, I've stumbled on openZZ (
> http://openzz.sourceforge.net/ ) which is a dynamic parser (Had some
> difficulties to find it with google... Had the wrong phrasing for my
> request)...
> 
>  I like it very much... Seems very powerfull... In two words, it
> allows to change/evolve the grammar during the language recognition...
> 
>  Of course, I does not fullfill the same requirement than ANTLR, but
> it seems to me very interesting (at least intelectually speaking), and
> I thought some of you would lik ethe idea...
Nice, but I can't find a Java version of it :).

Ahmed.

From subhobrotosinha at rediffmail.com  Sat Jun 25 11:24:58 2005
From: subhobrotosinha at rediffmail.com (Subhobroto  Sinha)
Date: Sat Jun 25 11:23:32 2005
Subject: [antlr-interest] Walking AST, and rule dilemma
Message-ID: <20050625182458.2115.qmail@webmail35.rediffmail.com>

 ?
I want to walk exprs. like "a = 5 + b" [AST : ( = a ( + 5 b ) )], using something like :

		#(PLUS in2:INT statement)
		{
			show(";add to it '" + in2->getText() + "'");
		}

but I have a rule #(PLUS id2:ID statement) is already defined [ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*; INT : ('0'..'9')+]

The later rule matches exprs. like "a = b + 5" - but it's obvious that this rule will not match the first expression. If I would have tried to incorporate both rules, it would be a non-deterministic rule

What do I do ?

Also, how do I handle exprs. like "a = b" ?
For example, if such exprs. are encountered, I would like to print "'b' is assigned to 'a'"

The complete ANTLR grammar containing these rules is available at http://www.geocities.com/subhobrotosinha/novel.txt
The driver (C++) is available at http://www.geocities.com/subhobrotosinha/noveldriver.txt

It should be obvious that I have been using ANTLR seriously for the last 6 hours, so PLEASE make comments regarding my approach and code, even if you cannot help me out re. this topic.

Subhobroto Sinha

http://www.geocities.com/subhobrotosinha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050625/28757a70/attachment.html
From ewbank at gmail.com  Sat Jun 25 18:15:05 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sat Jun 25 18:15:07 2005
Subject: [antlr-interest] Re: [Slightly OT] About dynamic parser
In-Reply-To: <d9jb82$k7a$1@sea.gmane.org>
References: <db9360ca0506241237301419d0@mail.gmail.com>
	<d9jb82$k7a$1@sea.gmane.org>
Message-ID: <dd3a065f05062518157cb097c8@mail.gmail.com>

On 6/25/05, Ahmed Mohombe <amohombe@yahoo.com> wrote:
> >  Just for information, I've stumbled on openZZ (
> > http://openzz.sourceforge.net/ ) which is a dynamic parser (Had some
> > difficulties to find it with google... Had the wrong phrasing for my
> > request)...
>
> Nice, but I can't find a Java version of it :).
> Ahmed.


And that's bad how, exactly?  :-) :-)
From craig at palantir.co.za  Sun Jun 26 03:13:44 2005
From: craig at palantir.co.za (Craig Main)
Date: Sun Jun 26 03:04:20 2005
Subject: [antlr-interest] Walking AST, and rule dilemma
In-Reply-To: <20050625182458.2115.qmail@webmail35.rediffmail.com>
Message-ID: <20050626100417.1960BDCC8D@www.antlr.org>

Hi Subhobroto,

 

I have been trying to achieve the same thing for some time now.

I was advised a week or two ago to drop the TreeParser and just parse the
expressions using a standard grammar parser without the tree.

 

I think using trees is a better approach, because you are able to walk the
parsed tree using several different tree parsers that process the grammar in
different ways. This is often quite useful.

 

I have been struggling for a while to get the tree correct.

I will send you my whole grammar, although it does not use a tree.

 

Regards

Craig.

 

  _____  

From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Subhobroto Sinha
Sent: 25 June 2005 08:25 PM
To: antlr-interest@antlr.org
Subject: [antlr-interest] Walking AST, and rule dilemma

 

  
I want to walk exprs. like "a = 5 + b" [AST : ( = a ( + 5 b ) )], using
something like :

          #(PLUS in2:INT statement)
          {
               show(";add to it '" + in2->getText() + "'");
          }

but I have a rule #(PLUS id2:ID statement) is already defined [ID :
('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*; INT :
('0'..'9')+]

The later rule matches exprs. like "a = b + 5" - but it's obvious that this
rule will not match the first expression. If I would have tried to
incorporate both rules, it would be a non-deterministic rule

What do I do ?

Also, how do I handle exprs. like "a = b" ?
For example, if such exprs. are encountered, I would like to print "'b' is
assigned to 'a'"

The complete ANTLR grammar containing these rules is available at
http://www.geocities.com/subhobrotosinha/novel.txt
The driver (C++) is available at
http://www.geocities.com/subhobrotosinha/noveldriver.txt

It should be obvious that I have been using ANTLR seriously for the last 6
hours, so PLEASE make comments regarding my approach and code, even if you
cannot help me out re. this topic.

Subhobroto Sinha

http://www.geocities.com/subhobrotosinha 



 <http://clients.rediff.com/signature/track_sig.asp> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050626/913e4661/attachment.html
From joerg.rech at gmail.com  Sun Jun 26 06:16:40 2005
From: joerg.rech at gmail.com (=?ISO-8859-1?Q?J=F6rg_Rech?=)
Date: Sun Jun 26 06:16:45 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and not as
	a keyword
Message-ID: <42BEAAB8.6040001@gmail.com>

Hi,
  I have a problem parsing the java libraries using the java1.5.g 
grammar updated by Scott Wisniewski. Several statements use the 
java1.5-keyword "enum" as a name for a variable.

For example, for the statment:
Enumeration enum = db.serverTable.elements();

The parser throws the following error:
RepositoryImpl.java:110:13: unexpected token: Enumeration
RepositoryImpl.java:110:30: expecting IDENT, found '='

As far as I understand it the parser tries to match an enum-rule and 
does not recognize the previous IDENT ("Enumeration")

Has anyone a solution to this problem?

Thanks in advance,
Joerg.

-- 
Joerg Rech
Computer Scientist        Web:   http://www.joerg-rech.de
Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com

From virtualaspirin at yahoo.com  Sun Jun 26 11:47:07 2005
From: virtualaspirin at yahoo.com (Akhilesh Mritunjai)
Date: Sun Jun 26 11:47:12 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and not
	as a keyword
In-Reply-To: <42BEAAB8.6040001@gmail.com>
Message-ID: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>

Hi

I encountered similar problem, and since we were
transitioning to 1.5, we decided to clean up the code.
Fortunately, for java 1.4, it can be done using a
simple find/replace. sed -i 's/\<enum\>/_enum/' takes
care of it :-)

--- J?rg Rech <joerg.rech@gmail.com> wrote:
>   I have a problem parsing the java libraries using
> the java1.5.g 
> grammar updated by Scott Wisniewski. Several
> statements use the 
> java1.5-keyword "enum" as a name for a variable.



		
__________________________________ 
Yahoo! Mail 
Stay connected, organized, and protected. Take the tour: 
http://tour.mail.yahoo.com/mailtour.html 

From scott at javadude.com  Sun Jun 26 12:25:24 2005
From: scott at javadude.com (Scott Stanchfield)
Date: Sun Jun 26 12:26:00 2005
Subject: [antlr-interest] Supercool new Antlr Eclipse beta!
Message-ID: <200506262016.j5QKGI7A012822@s2.eroute.net>

(Sometimes I even impress myself. Ok, most times, but seriously...)

I just released 4.0.0.b2 of the ANTLR eclipse plugin. See
http://antlreclipse.sourceforge.net/.

I now have it copying Java compiler error messages back to the grammar file.
Woohoo!
Most error messages should appear in just the right spot. There may be a few
(like bad package name in header) that don't quite hit the right line (they
usually appear at the very top of the grammar), but I think it's in good
enough shape to let others have ago at it.

This plugin works in Eclipse 3.02 and 3.1.0(RC4)

Unfortunately I still don't have the breakpoint setter working quite right
for eclipse 3.1. It looks like the only way to enable breakpoints is to
place your cursor on the line you want to break on and it control-shift-B.
BP setting works fine under eclipse 3.02.

Enjoy!
-- Scott


From joerg.rech at gmail.com  Sun Jun 26 13:22:00 2005
From: joerg.rech at gmail.com (=?ISO-8859-1?Q?J=F6rg_Rech?=)
Date: Sun Jun 26 13:22:05 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and not
	as a keyword
In-Reply-To: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
Message-ID: <42BF0E68.5000700@gmail.com>

Akhilesh Mritunjai schrieb:

>Hi
>
>I encountered similar problem, and since we were
>transitioning to 1.5, we decided to clean up the code.
>Fortunately, for java 1.4, it can be done using a
>simple find/replace. sed -i 's/\<enum\>/_enum/' takes
>care of it :-)
>  
>
Hi,
  thank you for your suggestion but sadly this will not solve my 
problem. As I am parsing external/open source code (like the java 
standard libraries) it is not possible to substitute every occurance of 
"enum" with "_enum". While I can substitute the keyword before calling 
the parser it could cause semantical errors if "_enum" is already used. 
Furthermore, it is also very likely that the external code is already in 
Java 1.5 and using enum constructs.

But nonetheless many thanks for your help,
Joerg.

>--- J?rg Rech <joerg.rech@gmail.com> wrote:
>  
>
>>  I have a problem parsing the java libraries using
>>the java1.5.g 
>>grammar updated by Scott Wisniewski. Several
>>statements use the 
>>java1.5-keyword "enum" as a name for a variable.
>>    
>>

-- 
Joerg Rech
Computer Scientist        Web:   http://www.joerg-rech.de
Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com

From mstudman at gmx.net  Sun Jun 26 13:22:06 2005
From: mstudman at gmx.net (Michael Studman)
Date: Sun Jun 26 13:22:14 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and not
	as a keyword
In-Reply-To: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
Message-ID: <42BF0E6E.4000908@gmx.net>

If you're not in a position to be able to change the source code you're 
parsing and you can guarantee "enum" is not used as a keyword  then you 
can call JavaLexer.enableEnum(false) on the lexer before you pass it 
into the recogniser.

Akhilesh Mritunjai wrote:

>Hi
>
>I encountered similar problem, and since we were
>transitioning to 1.5, we decided to clean up the code.
>Fortunately, for java 1.4, it can be done using a
>simple find/replace. sed -i 's/\<enum\>/_enum/' takes
>care of it :-)
>
>--- J?rg Rech <joerg.rech@gmail.com> wrote:
>  
>
>>  I have a problem parsing the java libraries using
>>the java1.5.g 
>>grammar updated by Scott Wisniewski. Several
>>statements use the 
>>java1.5-keyword "enum" as a name for a variable.
>>    
>>
>
>
>
>		
>__________________________________ 
>Yahoo! Mail 
>Stay connected, organized, and protected. Take the tour: 
>http://tour.mail.yahoo.com/mailtour.html 
>
>
>  
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050626/01e76ea3/attachment.html
From joerg.rech at gmail.com  Sun Jun 26 13:58:41 2005
From: joerg.rech at gmail.com (=?ISO-8859-1?Q?J=F6rg_Rech?=)
Date: Sun Jun 26 13:58:46 2005
Subject: [antlr-interest] Switching Java and JavaDoc with HiddenTokens
Message-ID: <42BF1701.40407@gmail.com>

Hi,
  I'm looking for a convienient way to parse Java source code and 
accociate comments and JavaDoc to the proper element in the resulting 
datastructures (e.g. ASTTree). If I use the example from the tutorial 
and hide JavaDoc comments in a second stream I can only access them if I 
have the linked Tokens from the Java-Stream. Now if I want to collect 
every comment or javadoc before a class-definition some of them are 
hidden before the class-token in import or package declarations. As the 
standard Tokens do not have a "father"-link (only child and sibling) I 
have no way of collecting comments by traversing the AST up to the root.

Package
|
Import -> getHiddenBefore() = Comment1
|
Class -> getHiddenBefore() = null (e.g. I cannot access Comment1 nor 
Import)

Now I think that I either need a Token that stores father-elements or I 
would have to store evere hidden element from every element from the 
grammar (statements, declarations, etc.) in a external data structure 
and collect the relevant one by myself. But the last solution would 
require to rewrite either the JavaParser or the JavaTreeWalker heavily.

And here a short example:

PACKAGE abc;
// Comment 1
IMPORT xyz;
/** javadoc1 for class */
public class X {
  Field1;
  /* Comment2 */
  Field2;
  /** javadoc2 for method */
  public void doSomethin() {
    // Comment3 in method
    Statement1;
  }
}

And I want to extract the following elements (e.g., CLASS) with 
associated comment in braces:
CLASS(comment1, javadoc1, comment2)
METHOD(javaDoc2, comment3)

So every javadoc should be associated this the following class or method 
and comments should be associated with the enclosing body

I hope someone had a similar problem and knows a convienient solution.
Many thanks in advance,
Joerg.

-- 
Joerg Rech
Computer Scientist        Web:   http://www.joerg-rech.de
Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com

From joerg.rech at gmail.com  Sun Jun 26 14:13:28 2005
From: joerg.rech at gmail.com (=?ISO-8859-1?Q?J=F6rg_Rech?=)
Date: Sun Jun 26 14:13:35 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and not
	as a keyword
In-Reply-To: <42BF0E6E.4000908@gmx.net>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
	<42BF0E6E.4000908@gmx.net>
Message-ID: <42BF1A78.2080609@gmail.com>

Michael Studman schrieb:

> If you're not in a position to be able to change the source code 
> you're parsing and you can guarantee "enum" is not used as a keyword  
> then you can call JavaLexer.enableEnum(false) on the lexer before you 
> pass it into the recogniser.

If you mean by "guarantee enum is not used" that I can decide wether the 
class is either 1.4 or 1.5 I fear that this is not possible. The only 
way I currently see is to have two different pipelines with lexer, 
filter, and parser for 1.4 and 1.5 and then parse the class first with 
1.5 and if errors occur use the 1.4 pipeline.
I haven't tried it yet but it seems feasible (and ugly :-( )

Thanks for your idea,
Joerg.

> Akhilesh Mritunjai wrote:
>
>>Hi
>>
>>I encountered similar problem, and since we were
>>transitioning to 1.5, we decided to clean up the code.
>>Fortunately, for java 1.4, it can be done using a
>>simple find/replace. sed -i 's/\<enum\>/_enum/' takes
>>care of it :-)
>>    
>>

-- 
Joerg Rech
Computer Scientist        Web:   http://www.joerg-rech.de
Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com

From hbabai at sbcglobal.net  Sun Jun 26 14:57:12 2005
From: hbabai at sbcglobal.net (houman babai)
Date: Sun Jun 26 14:57:14 2005
Subject: [antlr-interest] Code-Completion & Code-Highlighting with ANTLR
Message-ID: <20050626215712.31716.qmail@web81007.mail.yahoo.com>

Hello everyone,

About 2 years ago I used ANTLR in a java project to
help me evaluate sql like queries stored in a file. 
It was a great experience.

Now I need to write a live-parser for a very simple
language.  I have a feeling that antlr will be of
great help.  I just don't have a good idea of how I
can leverage antlr to process incomplete statements...

So I have a few questions:
1. Is there an example out there that demonstrates how
to use antlr to do live-parsing (for the purposes of
code-completion & code-highlighting).
2. How would one go abuot parsing statements as they
are being entered without the parser generating an
error?  In other words, how will the parser know that
the statement is not yet complete, but as far as it
can see, it is still valid.

Any help/input would be greatly appreciated.

Regards,
Houman
P.S. I tried looking at the archives but it was zipped
and I couldn't search it.
From ewbank at gmail.com  Sun Jun 26 17:12:30 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Sun Jun 26 17:12:32 2005
Subject: [antlr-interest] Walking AST, and rule dilemma
In-Reply-To: <20050626100417.1960BDCC8D@www.antlr.org>
References: <20050625182458.2115.qmail@webmail35.rediffmail.com>
	<20050626100417.1960BDCC8D@www.antlr.org>
Message-ID: <dd3a065f050626171274ef9cc5@mail.gmail.com>

There's a big difference between *processing* trees, and doing
*precedence* in the tree world.  If you want to do precedence in the
tree world, your parser just slurps expressions something like

   expr: ((operator)+ atom )* ;

Which gives you something that looks like a sequence of tokens under
an EXPR node; you are now left with the question of how to parse the
treenode chain that you didn't parse as tokens - it's the same
problem, but in the tree world.  You still need to write the
precedence rules, and rebuild the tree for later processing.

In either case, you will end up with something like
    add_expression : mult_expression ( ( PLUS^ | MINUS^ ) mult_expression )* ;
    mult_expression : atom ( ( MULT^ | DIV^ | MOD^ ) atom )* ;
that rebuilds the trees.  The only question is whether you build the
tree to reflect expression precedence as you process the input (rules
in parser) or defer that until your first tree pass (rules in tree
parser).  It's the same problem, just in a difference context.

Once you have the order of evaluation built into the tree (said
another way, the expression is fully parenthesized), then you simple
walk the trees and process them - no more need to remember precedence,
as it's irrelevant.

- Bryan
From gbr at newtechlaw.com  Sun Jun 26 20:39:04 2005
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Sun Jun 26 20:45:55 2005
Subject: [antlr-interest] Switching Java and JavaDoc with
  HiddenTokens
In-Reply-To: <42BF1701.40407@gmail.com>
Message-ID: <4.3.2.7.2.20050626203306.07069e30@morpho.newtechlaw.com>

At 10:58 PM 6/26/2005, you wrote:

>Hi,
>  I'm looking for a convienient way to parse Java source code and 
> accociate comments and JavaDoc to the proper element

If this is *all* you want to do with the parse, you might want to look at 
QDox -- qdox.codehaus.org -- which is a read-only solution.
----
Gerald B. Rosenberg, Esq.
NewTechLaw
285 Hamilton Avenue, Suite 520
Palo Alto, CA  94301-2576

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (fax)

www.newtechlaw.com


From rhill03 at eds.com  Mon Jun 27 02:57:37 2005
From: rhill03 at eds.com (Hill, Robert)
Date: Mon Jun 27 03:01:09 2005
Subject: [antlr-interest] Parsing problem...
Message-ID: <2E909902FD3A03419E3A905908AE3DD4D1F966@UKNSM201.emea.corp.eds.com>

I have a text file that contains headings, under some headings there are
wordy declarations with parameter , but under one header there is
program code which could conceivably contain the definitions thus:

Heading One
------------------
Some decl: 	and a parameter
Another decl with more words : 5565 & some txt
Decl2 : "blah blah"

Heading two
-----------------
	#include <stdio.h>
	
	int main()
	{
		return 0;
	}

Heading three with a bit more text in the heading
----------------------------------------------------------------------
Some decl: 	and a parameter
Another decl with more words : 5565 & some txt
Decl2 : "blah blah"

... etc ..etc

One saving grace is the declarations are followed by a colon, but how do
I collect all the code with one rule?
The next heading will always be "Heading three", so I need a rule which
goes something like
Match "heading" "two" "-------" code:get_everything_until_heading_three 

Is this a task for manual look-ahead with predicates, again, I haven't
been able to find any examples, and they're still a bit confusing to me!
I've read in the manual that multiple Lexer/parser streams are suitable
for this kind of script-within-document kind of file, but I'd rather not
over complicate things just yet.
I'd like to split out the code so I can pass that onto a separate parse
phase later, as the embedded code isn't really part of the overall
document structure, it's a report that's collected into one file really.

Any ideas?

Cheers!
/2ob


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050627/795a1681/attachment-0001.html
From Anthony.Youngman at eca-international.com  Mon Jun 27 08:18:42 2005
From: Anthony.Youngman at eca-international.com (Anthony Youngman)
Date: Mon Jun 27 08:18:47 2005
Subject: [antlr-interest] ANTLR v3 tree construction :)
Message-ID: <C7FE35004D40FD45AA342991B88CE4040128FF67@lnml1.eca-international.local>

Talk to Rob Colquhoun, myself or Jim Idle if you want a query language -
we've been working on that sort of thing for forty years (not
personally, but the technology's that old). Monty might have some ideas
too.

If you want a manipulation language, you might be out of luck. SQL tried
that sort of thing, Pick decided it was too complicated to be worth
trying.

Cheers,
Wol

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Akhilesh
Mritunjai
Sent: 24 June 2005 04:11
To: ANTLR Interest
Subject: Re: [antlr-interest] ANTLR v3 tree construction :)


> eeewwww! ;)  Down with anything specified in XML
> that a human has to  
> touch. ;)

Ouch. The goal is to provide a declarative query/path
language... on second thoughts, I guess existing ANTLR
syntax is powerful enough to get the job done... I'll
have to research more to come up with convinving
arguments for/against the idea.

Akhilesh



		
__________________________________ 
Discover Yahoo! 
Stay in touch with email, IM, photo sharing and more. Check it out! 
http://discover.yahoo.com/stayintouch.html


****************************************************************************

This transmission is intended for the named recipient only. It may contain private and confidential information. If this has come to you in error you must not act on anything disclosed in it, nor must you copy it, modify it, disseminate it in any way, or show it to anyone. Please e-mail the sender to inform us of the transmission error or telephone ECA International immediately and delete the e-mail from your information system.

Telephone numbers for ECA International offices are: Sydney +61 (0)2 8272 5300, Hong Kong + 852 2121 2388, London +44 (0)20 7351 5000 and New York +1 212 582 2333.

****************************************************************************

From dewing at apple.com  Mon Jun 27 10:16:13 2005
From: dewing at apple.com (David Ewing)
Date: Mon Jun 27 10:16:21 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and
	not	as a keyword
In-Reply-To: <42BF1A78.2080609@gmail.com>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
	<42BF0E6E.4000908@gmx.net> <42BF1A78.2080609@gmail.com>
Message-ID: <C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>

You might be able to call JavaLexer.enableEnum(false) from an action  
when you enter the recognition of a method, and call  
JavaLexer.enableEnum(true) when leaving. A hack, but perhaps a useful  
one. :)

Dave

On Jun 26, 2005, at 3:13 PM, J?rg Rech wrote:

> Michael Studman schrieb:
>
>
>> If you're not in a position to be able to change the source code  
>> you're parsing and you can guarantee "enum" is not used as a  
>> keyword  then you can call JavaLexer.enableEnum(false) on the  
>> lexer before you pass it into the recogniser.
>>
>
> If you mean by "guarantee enum is not used" that I can decide  
> wether the class is either 1.4 or 1.5 I fear that this is not  
> possible. The only way I currently see is to have two different  
> pipelines with lexer, filter, and parser for 1.4 and 1.5 and then  
> parse the class first with 1.5 and if errors occur use the 1.4  
> pipeline.
> I haven't tried it yet but it seems feasible (and ugly :-( )
>
> Thanks for your idea,
> Joerg.
>
>
>> Akhilesh Mritunjai wrote:
>>
>>
>>> Hi
>>>
>>> I encountered similar problem, and since we were
>>> transitioning to 1.5, we decided to clean up the code.
>>> Fortunately, for java 1.4, it can be done using a
>>> simple find/replace. sed -i 's/\<enum\>/_enum/' takes
>>> care of it :-)
>>>
>>>
>
> -- 
> Joerg Rech
> Computer Scientist        Web:   http://www.joerg-rech.de
> Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com
>
>

From dewing at apple.com  Mon Jun 27 10:25:19 2005
From: dewing at apple.com (David Ewing)
Date: Mon Jun 27 10:25:27 2005
Subject: [antlr-interest] Code-Completion & Code-Highlighting with ANTLR
In-Reply-To: <20050626215712.31716.qmail@web81007.mail.yahoo.com>
References: <20050626215712.31716.qmail@web81007.mail.yahoo.com>
Message-ID: <0652422C-E3E8-47CE-950B-7B61C338F2D8@apple.com>


On Jun 26, 2005, at 3:57 PM, houman babai wrote:

> Hello everyone,
>
> About 2 years ago I used ANTLR in a java project to
> help me evaluate sql like queries stored in a file.
> It was a great experience.
>
> Now I need to write a live-parser for a very simple
> language.  I have a feeling that antlr will be of
> great help.  I just don't have a good idea of how I
> can leverage antlr to process incomplete statements...
>
> So I have a few questions:
> 1. Is there an example out there that demonstrates how
> to use antlr to do live-parsing (for the purposes of
> code-completion & code-highlighting).

I haven't seen any, but I haven't looked.

> 2. How would one go abuot parsing statements as they
> are being entered without the parser generating an
> error?  In other words, how will the parser know that
> the statement is not yet complete, but as far as it
> can see, it is still valid.

Xcode (Apple's Mac OS X IDE) does this by being particularly sneaky.  
We have all of the statement/expression rules return values that  
amount to the current type of the expression (the devil is in the  
details here). We pass the current statement/expression to the parser  
(after already determining all the relevant context), let the types  
fall through, and in places where we're willing to do completion,  
like after a '.' in the grammar, we have the action remember the  
type. The parse will normally end on an error, but the last type  
that's remembered is the one we want to complete on. There is a lot  
of infrastructure outside the grammar that's necessary for all this,  
but I hope that points you in a useful direction.

Dave


From parrt at cs.usfca.edu  Mon Jun 27 11:39:56 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 27 11:39:12 2005
Subject: [antlr-interest] tree to tree rewrites
Message-ID: <83AF7FD4-CCAF-4D46-84F5-518FE61AC020@cs.usfca.edu>

Howdy,

Ok, so it looks like I have tree parsing working nicely. :)  The code  
generation templates are essentially identical so it was fairly  
straightforward--I tricked the LL(*) analyzer into seeing A B as  
different from ^(A B) by adding imaginary navigation nodes DOWN and  
UP.  Works great.

Now I've got to make a decision about rewrites in a tree parser.   
I.e., given a tree and option output=AST, should the tree parser  
build a completely new tree or should it just rewrite the current  
one?  I'm trying to think of a situation where you want to keep a  
tree intact during a multiple phase translation.  I suppose debugging  
is one reason, but then if you want to keep that tree you can easily  
just do a dupTree on it before you pass it to the rewrite phase.   
Further, that dup will be faster than having the parser dup nodes.

So, imagine you have

tree parser t;
options {output=AST;}
decl : ^(DECL type declarator) ;
type : "int" | "float" ;
declarator
      : ID -> ^(ASSIGN ID INT["0"])
      ;

This parses trees like

   DECL
   / \
int  a

and rewrites them to

   DECL
   /  \
int  ASSIGN
        / \
       a   0

The DECL and type nodes should stay intact; only the declarator  
result has changed.  The ID node will be *reused* but merged into a  
new ^(ASSIGN ID INT["0"]) subtree that has two imaginary nodes.  The  
result becomes the new declarator tree up in decl.

Anybody see a reason why this "rewrite rather than completely new  
copy" concept should not be the functionality for tree parsers?

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Mon Jun 27 12:48:27 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon Jun 27 12:47:43 2005
Subject: [antlr-interest] uh oh, thought of a good reason not to rewrite
Message-ID: <94A89156-2F56-452D-844F-50FA3BB711EA@cs.usfca.edu>

The problem with rewriting a tree is that you are modifying the tree  
you are trying to parse.  This is ok, if you do only local rewrites  
but what if you use an action to alter nodes in the tree that will be  
parsed later?  You could easily create an infinite loop where a rule  
creates nodes that are parsed later via that same rule which creates  
more nodes in the future ad naseum.  Ugh.

One easy way to solve this is of course with memory.  The  
TreeNodeStream object could build up an entire list of the nodes a  
priori, before the parse begins.  In this way, the parse will proceed  
exactly as you expect even if you unlink / rewrite every node in the  
tree.  But the cost is 4 bytes ptr per node and with 500,000 nodes as  
the example somebody gave, that's already 2G of RAM. :(  This could  
be mapped to the disk like virtual memory, but...

Of course, creating a new tree of 500k nodes is even more expensive.

This "alter the future" is more common than you think.  What if  
you're generating code for a translator to C from Java and you create  
memory in some statement of a block.  As you do that you may want to  
generate a free() call at the end of the block.  When the parser  
finishes the last "real" statement, it will start to parse your free 
() calls!  The problem is that those are C statements not Java!  The  
parser will puke.

The choice appears:

1. don't build a tree and you can use the efficient TreeNodeStream  
that doesn't buffer
2. DUP: build a new tree from the old tree; you can use the efficient  
TreeNodeStream that doesn't buffer
3. REWRITE: TreeNodeStream buffers the entire sequence of nodes to  
visit in the tree before parsing begins and nodes are rewritten not  
dup'd.

Come to think of it, there could be some really strange bugs  
introduced if you rewrite a subtree that is later parsed using it's  
original structure (but it no longer has that stronger and some of  
your actions will fail!).  Argh!

Anybody wanna comment?  This sounds complicated enough that I should  
release the tree parser component and worry about tree->tree  
manipulation for the next early access release.

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From gudnabrsam at yahoo.com  Mon Jun 27 13:32:31 2005
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Mon Jun 27 13:32:32 2005
Subject: [antlr-interest] Code-Completion & Code-Highlighting with ANTLR
In-Reply-To: <0652422C-E3E8-47CE-950B-7B61C338F2D8@apple.com>
Message-ID: <20050627203231.61697.qmail@web30908.mail.mud.yahoo.com>

--- David Ewing <dewing@apple.com> wrote:
> 
> On Jun 26, 2005, at 3:57 PM, houman babai wrote:
[SNIP]
> > So I have a few questions:
> > 1. Is there an example out there that demonstrates
> how
> > to use antlr to do live-parsing (for the purposes
> of
> > code-completion & code-highlighting).
> 
> I haven't seen any, but I haven't looked.

Bogdan Mitu's SATC framework is available from the
File Sharing section at ANTLR.org

-Matt

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
From tkhanna at redhat.com  Mon Jun 27 14:16:17 2005
From: tkhanna at redhat.com (Tarun Khanna)
Date: Mon Jun 27 14:23:45 2005
Subject: [antlr-interest] symbol table in antlr
Message-ID: <1119906977.1415.3.camel@dhcp83-116.boston.redhat.com>

I am trying to write a lexer/parser for a language similar to C++. Does
ANTLR provide an inbuilt way to handle symbol tables or do we have to
initialize our own symbol tables and populate them using actions.

In other words what would be the best way to incorporate symbol tables
when using ANTLR with JAVA.

Thanks
Tarun

From ewbank at gmail.com  Mon Jun 27 16:16:15 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon Jun 27 16:16:19 2005
Subject: [antlr-interest] symbol table in antlr
In-Reply-To: <1119906977.1415.3.camel@dhcp83-116.boston.redhat.com>
References: <1119906977.1415.3.camel@dhcp83-116.boston.redhat.com>
Message-ID: <dd3a065f0506271616b1bac64@mail.gmail.com>

There's no built in symbol table available; ANTLR provides a mechanism
for defining your lex/parse/transform pipeline.  It is your
application code that will have to manage a symbol table (push, pop,
find) as defined by the semantics of your input language.

Without making it sounds trite, the way to incorporate symbol tables
is to write them.

I see you're at redhat; are you by chance located in RTP?  It's a long
shot, I know, but I'm curious if there's other ANTLRites around here.

On 6/27/05, Tarun Khanna <tkhanna@redhat.com> wrote:
> I am trying to write a lexer/parser for a language similar to C++. Does
> ANTLR provide an inbuilt way to handle symbol tables or do we have to
> initialize our own symbol tables and populate them using actions.
> 
> In other words what would be the best way to incorporate symbol tables
> when using ANTLR with JAVA.
From oscar_j_simpson at yahoo.com  Tue Jun 28 03:03:29 2005
From: oscar_j_simpson at yahoo.com (Oscar Simpson)
Date: Tue Jun 28 03:03:32 2005
Subject: [antlr-interest] Antlr 2.7.5 bug or works as designed?
Message-ID: <20050628100330.82608.qmail@web30803.mail.mud.yahoo.com>

I am using Antlr 2.7.5 which is launched via a custom build action in
VisualStudio.NET 2003. Since moving the build into VS.NET I've noticed that
antlr is launched regardless of whether the grammar file has changed or not.
After going through the normal routine of making sure that all the manually
added dependencies and list of generated files were correct I noticed that
the modified date (on generated files) never changed.

After updating the custom build action to delete the generated files before
antlr is launched everything works as it should. I get the same results on XP
Pro and XP Home Both systems are running different versions of the Sun JRE
(1.3 and 1.5 version of the compiler).


Is this a problem with ANTLR, the JRE, or this the intended behavior?


		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From canton at indra.es  Tue Jun 28 03:34:49 2005
From: canton at indra.es (=?iso-8859-1?Q?Ant=F3n_Garc=EDa=2C_Carolina?=)
Date: Tue Jun 28 03:34:56 2005
Subject: [antlr-interest] Error reading importVocab file
Message-ID: <17B525E69E376B4A8B99B25170B4A0B7013B6233@MADARRMAIL1.indra.es>

    Hi all, 
 
    I have a problem importing a vocabulary file in a TreeParser definition. I have two files: one with the Lexer and Parser definition and another one with the TreeParser definition. In the Parser and Lexer I have this option setted:
 
    exportVocab=Reglas;
 
which creates ReglasTokenTypes.txt and ReglasTokenTypes.java. 
 
When I try to export this in the TreeParser (with the option "importVocab=Reglas") and try to generate the classes, I obtain the following error:
 
    [antlr] ANTLR Parser Generator Version 2.7.5 (20050128) 1989-2005 jGuru.com 

    [antlr] panic: Error reading importVocab file 'ReglasTokenTypes.txt'

    BUILD FAILED: build.xml:79: ANTLR returned: 1

Any idea? I havent found info about this problem before.... I use antlr-2.7.5, Eclipse 3.0.1,  and Windows2k.
 
Thanks in advance.
 
Carolina Anton
canton@indra.es
    
 
 "Knowledge is of two kinds. We know a subject ourselves, or we know where we can find information on it."
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050628/d6da851b/attachment.html
From gt54-antlr at cyconix.com  Tue Jun 28 03:45:04 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Tue Jun 28 03:45:14 2005
Subject: [antlr-interest] Antlr 2.7.5 bug or works as designed?
In-Reply-To: <20050628100330.82608.qmail@web30803.mail.mud.yahoo.com>
References: <20050628100330.82608.qmail@web30803.mail.mud.yahoo.com>
Message-ID: <42C12A30.7070701@cyconix.com>

Oscar Simpson wrote:

> Is this a problem with ANTLR, the JRE, or this the intended behavior?

(a) and (c), I suspect ('suspect' because I don't know how your build 
works).

I run cantlr on Linux with a makefile. cantlr is intelligent enough not 
to rebuild any targets which don't change. This can cause problems if 
your makefile dependencies look like this (as they must):

target <- cantlr output (eg. 'x.hpp') <- grammar file

Assume that you change the grammar file, and cantlr runs, but doesn't 
change x.hpp. You regenerate 'target', as required, but now x.hpp is 
*older* than the grammar file. Next time around, make notices this, so 
it reruns cantlr to regenerate x.hpp, even though the grammar hasn't 
changed.

I fix this in my makefiles by manually touching all cantr's (supposed) 
outputs each time cantlr is run. This functionality should probably be 
in cantlr itself.

HTH

Paul

From tomdzk at gmail.com  Tue Jun 28 04:25:52 2005
From: tomdzk at gmail.com (Thomas Dudziak)
Date: Tue Jun 28 04:25:55 2005
Subject: [antlr-interest] uh oh, thought of a good reason not to rewrite
In-Reply-To: <94A89156-2F56-452D-844F-50FA3BB711EA@cs.usfca.edu>
References: <94A89156-2F56-452D-844F-50FA3BB711EA@cs.usfca.edu>
Message-ID: <224f323405062804252515f545@mail.gmail.com>

> The choice appears:
> 
> 1. don't build a tree and you can use the efficient TreeNodeStream
> that doesn't buffer
> 2. DUP: build a new tree from the old tree; you can use the efficient
> TreeNodeStream that doesn't buffer
> 3. REWRITE: TreeNodeStream buffers the entire sequence of nodes to
> visit in the tree before parsing begins and nodes are rewritten not
> dup'd.
> 
> Come to think of it, there could be some really strange bugs
> introduced if you rewrite a subtree that is later parsed using it's
> original structure (but it no longer has that stronger and some of
> your actions will fail!).  Argh!
> 
> Anybody wanna comment?  This sounds complicated enough that I should
> release the tree parser component and worry about tree->tree
> manipulation for the next early access release.

I'm by no means an expert on this, but I can easily imagine scenarios
where you want to process the new nodes. For instance, when parsing
C/C++ style #define's, you probably want to do have one pass where you
only rewrite the tree to replace the defines with the makros contents.
In this case, it would make sense to process these new nodes
afterwards in the same step to catch any makros in the content of the
original #define.
How about making that configurable ? Antlr could easily mark new nodes
as being newly created in the current pass, and a local/global
configuration option could determine whether to process them or not.

regards,
Tom
From Gordon.Prieur at Sun.COM  Tue Jun 28 06:12:07 2005
From: Gordon.Prieur at Sun.COM (Gordon Prieur)
Date: Tue Jun 28 06:13:59 2005
Subject: [antlr-interest] Is JGuru's search engine broken?
Message-ID: <42C14CA7.7050106@sun.com>

Hi,

    I've tried various searches of the FAQ on JGuru.com
and all have failed. I've simplified searches down to
single words like "antlr", "parser", and "file". I still
get failed searches...

Gordon

From craig at palantir.co.za  Tue Jun 28 08:17:36 2005
From: craig at palantir.co.za (Craig R. Main)
Date: Tue Jun 28 08:23:52 2005
Subject: [antlr-interest] Struggling with tree function call,
Message-ID: <0929930BCC8E0E44846C23FCA13A470A1D03@isengard.palantir.co.za>

Hi,

 

I am struggling with parsing the parameters to the function in my
grammar.

Could someone point me in the right direction?

The parser is parsing correctly, and the tree looks correct, but I
cannot get the tree parser to recognize the function call.

 

options { 

        language = "CSharp";

        namespace = "Rules";

}

class RuleTreeParser extends TreeParser;

{

   /// <summary>

   /// Standard logging implementation

   /// </summary>

   private readonly log4net.ILog log =
log4net.LogManager.GetLogger(typeof(RuleParser));

}

 

rules

                                 : #(RULESET (statement)*)

                                 ;

 

statement                          {object result = null;}

                                 : #(ASSIGN id:ID result=expression {
log.Info(string.Format("{0} = {1}", id.getText(), result)); } ) 

                                 ;

 

expression

returns [object result]            {result = null;object l,r;}

                                 : #(PLUS l=term r=term)
{result=ExpressionOperation.Add(l,r);}

                                 | #(MINUS l=term r=term)
{result=ExpressionOperation.Subtract(l,r);}

                                 | #(MULTIPLY l=term r=term)
{result=ExpressionOperation.Multiply(l,r);}

                                 | #(DIVIDE l=term r=term)
{result=ExpressionOperation.Divide(l,r);}


                                 | result=term

                                 | #(ELIST ID (expression)* )

                                 ;

 

term

returns [object result]            {result = null;}

                                 : result=literal

                                 ;

 

//value                            : function | literal

//                                 ;

 

literal

returns [object result]            {result = null;}

                                 : id:ID { result = id.getText(); }

                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }

                                 ;

 

class RuleParser extends Parser;

options {

        k = 1;

        defaultErrorHandler = false;

        buildAST = true;

}

 

tokens

{

   METHOD_CALL;

}

 

{

   /// <summary>

   /// Standard logging implementation

   /// </summary>

   private readonly log4net.ILog log =
log4net.LogManager.GetLogger(typeof(RuleParser));

}

 

rules                   : (statement)* 

                          {#rules = #([RULESET, "RULESET"], #rules);}

                          EOF!

                        ;

 

statement               : assignment_statement SEMI!

                        ;

 

assignment_statement    : id:ID ASSIGN^ expression

                        ;

 

expression              : term ((PLUS^|MINUS^) term)*

                        ;

 

term                    : factor ((MULTIPLY^|DIVIDE^) factor)*

                        ;

 

factor                  : value

                        ;

 

value                   : (ID LPAREN) => function

                        | literal

                        ;

 

function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
arguments RPAREN!

                        ;

 

arguments               : (expression (COMMA! expression)*)?

                          {#arguments = #(#[ELIST,"ELIST"], arguments);}

                        ;

 

literal                 : id:ID^

                        | fl:FLOAT^

                        ;

 

class RuleLexer extends Lexer;

options {  

        // Required for * and /  

        k=3;

        charVocabulary = '\0'..'\377';

}

 

tokens {

   TOK_OR = "or";

   TOK_AND = "and";

   TOK_CONST = "const";

   TOK_IF = "if";

   TOK_ELSE = "else";

}

 

MULTIPLY        : '*' ;

DIVIDE          : '/' ;

PLUS            : '+' ;

MINUS           : '-' ;

LPAREN          : '(' ;

RPAREN          : ')' ;

SEMI            : ';' ;

ASSIGN          : '=' ;

DASH            : '^' ;

 

LTHAN           : "<" ;

GTHAN           : ">" ;

LTE             : "<=";

GTE             : ">=";

EQUAL           : "==";

NOT_EQUAL       : "<>";

 

LCURL           : "{" ;

RCURL           : "}" ;

COMMA           : "," ;

ID

options {

       testLiterals = true;

       paraphrase = "an identifier";

}

       :      ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*

       ;

protected

DIGIT

options {

  paraphrase = "a digit";

}

       :      '0'..'9'

       ;

 

FLOAT

options {

  paraphrase = "an integer value";

}

       :    (DIGIT)+                  // base-10 

             (  '.' (DIGIT)*)?

   ;

 

LITERAL

options {

   paraphrase = "a string literal";

}

       :      '"' (/*ESC|*/~'"')* '"'

       ;

 

WS_    :      (' '

       |      '\t'

       |      '\n'

       |      '\r')

              { _ttype = Token.SKIP; }

       ;

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050628/4af8bd95/attachment-0001.html
From jeffsteward at hotmail.com  Tue Jun 28 08:27:10 2005
From: jeffsteward at hotmail.com (Jeff Steward)
Date: Tue Jun 28 08:27:13 2005
Subject: [antlr-interest] Extra right parenthesis in "An Introduction to
	ANTLR" not failing - why?
Message-ID: <BAY106-F124CE12640A68F81D05F0DA2E10@phx.gbl>

Dear ANTLR interest,

I'm going to send an e-mail that I already sent privately to Professor Parr, 
so if he gets it twice I hope he won't mind.  :-)

Thank you all for your continued support of ANTLR.  I have just started 
using this tool and I must say I am impressed with the tool's ease of use, 
power, and flexibility.

I do have a question, however, that it seems difficult to get past even 
going through the documentation for a day or two.  If this is really basic, 
please forgive my ignorance.

I am using ANTLR to generate a small language much like the Expr example 
from the article "An Introduction to ANTLR."  The definition for the lexer 
and parser can be found there: 
http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html .  The trouble 
is that it appears the generated ExprParser will give an incorrect parse of 
the following (that is, it seems to me that the following should fail):

3+3)

The same occurs for any combination of incorrectly matched right 
parenthesis, such as 3+3)))))) .  In addition, something such as 3+3)+2 will 
not only parse without error, it will evaluate as 3+3 - behavior that would 
be highly undesirable for my user-defined input.  However, incorrectly 
matched left parenthesis - such as (3+3 - *will* fail, which is desirable 
behavior for my app.

Therefore, what I would really like to do is check for exact matching of 
parenthesis.  Is there a simple way to do this with ANTLR grammar?

Thank you very much for your time.

Sincerely,

Jeff Steward


From alex at csharpparser.com  Fri Jun 24 10:18:33 2005
From: alex at csharpparser.com (Alex Sedow)
Date: Tue Jun 28 08:57:37 2005
Subject: [antlr-interest] ANTLR 3.0ea3 released
References: <4.3.2.7.2.20050623120419.0ac00d08@pop3.newtechlaw.com>	<42F41D06-12EF-4B94-91AB-AD347F7BBA4E@cs.usfca.edu><000a01c5787a$53e1fe30$07060b0a@home>
	<42BBC1DE.9050908@cyconix.com>
Message-ID: <004e01c578e0$c48539c0$07060b0a@home>

>> Yes, but what do if you need multiple context informations?
>> For C# partial types is needed use mutiple AST-contexts depend on 
>> placement of part declarations in source files. Example:
>>
>> // file1
>> using I = I1;
>> partial class C : I {} // point1
>> // file2
>> using I = I2;
>> partial class C : I {} // point2
>>
>> Note: all parts of partial type (on type-lookup) must be processed 
>> together in point1 or in point2.
>> I think for this case the best way is generate and use pointer to 
>> AST-parent.
>
> I'm having a problem seeing when it would be necessary to look back up a 
> tree. At first sight, it seems to me that this is only necessary when 
> you're carrying out processing during tree construction. If you defer 
> processing till after tree completion, then surely you can always pass the 
> required information down, rather than up.
>
> Or have I missed the point?

In this case parents and children can be in pairs defined in different 
AST-trees. For correct processing using-directives defined above on a tree 
should be taken into account. I.e. it is necessary to use at once 
multiple(!) AST-contexts. If AST-nodes contain references to parents 
AST-nodes then they represent a AST-context. Otherwise it is necessary to 
save just in case in each tree the data on which it is possible to restore a 
context. And these data as a matter of fact will be equivalent to references 
to AST-parents.

--
Alex. 

From WFrag at yandex.ru  Fri Jun 24 11:06:18 2005
From: WFrag at yandex.ru (Ivan Dubrov)
Date: Tue Jun 28 08:58:16 2005
Subject: [antlr-interest] Problems with Java 1.5 grammar
Message-ID: <42BC4B9A.1000806@yandex.ru>

Hello,

I've tried to use one of the Java 1.5 grammars (this one: 
http://www.antlr.org/grammar/1093454600181/java15-grammar.zip), but 
encountered problems with the following code:

import java.io.StringReader;
public class Test {
    public static void main(String[] args) throws Exception {
        JavaLexer l = new JavaLexer(new StringReader("hello"));
        JavaRecognizer r = new JavaRecognizer(l);
        r.expression();
        System.out.println("OK");
    }
}

In my opinion, "hello" string is the Java expression, so the code should 
print "OK". The grammar tells the same (although I'm not very good at 
ANTLR grammars). But this code throws exception with message 'unexpected 
token "hello"'.

Anybody can tell me what's the problem here? Anobody tried to use these 
grammars to parse pieces of code?

Ivan.

From ewbank at gmail.com  Tue Jun 28 09:52:13 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 28 09:52:17 2005
Subject: [antlr-interest] predicates, performance, and C++, oh my!
Message-ID: <dd3a065f0506280952d0e39b2@mail.gmail.com>

Wanted to let others learn from our pain...

We have quite a few predicates, and we've built them up so they are
simple to read, like this:

   myRule :
      ( TOKEN_ONE ) => ruleONE
      | ( TOKEN_TWO ) => ruleTWO
      | ( TOKEN_TRE ) => ruleTRE
      | /* whatever else */
      ;

As it turns out, there's an exception thrown/caught for each of the
predicates (of course; i'd forgotten it, though), which means there's
a substantial hit if the predicates don't match (3 exceptions thrown).

By rewriting it to use only one predicate, we greatly improved thruput:

   myRule :
      ( TOKEN_ONE | TOKEN_TWO | TOKEN_TRE )
           => ( ruleONE | ruleTWO | ruleTRE )
      | /* whatever else */
      ;

You might still need extra goo in the first subrule, but you only get
one exception thrown for the unmatched case, which really helps.

Of course, YMMV, but every little bit should help someone.
- Bryan
From ewbank at gmail.com  Tue Jun 28 10:00:45 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Tue Jun 28 10:00:48 2005
Subject: [antlr-interest] Extra right parenthesis in "An Introduction to
	ANTLR" not failing - why?
In-Reply-To: <BAY106-F124CE12640A68F81D05F0DA2E10@phx.gbl>
References: <BAY106-F124CE12640A68F81D05F0DA2E10@phx.gbl>
Message-ID: <dd3a065f05062810005afbf45a@mail.gmail.com>

Hi Jeff,

What you are seeing is exactly correct, once you realize what's going on...

For the input "3+3)", only the "3+3" is matched by the grammar, then
ANTLR's generated parser terminates because the ")" cannot be
recognized in the context of the grammar.

The grammar defined for this parser does not require that it consume
the entire token stream, so it does not - it simply quits when it sees
something it cannot recognize.

In the same way, if I have the string "abcabcdef", the regular
expression "(abc)*" will not fail - it will only match the first six
characters.

To force the parser to consume the entire token stream, you must add a
top-level production something like this:

    program : expr EOF! ;

Using this production as your entry point will force the parser to
report an error as you expect, because by adding the "EOF" at the end
of the you have told ANTLR "match an expr, AND NOTHING ELSE".

Said another way, ANTLR's parser will expect EOF but see ")", which is
clearly a parse error.

Hope this helps,
- Bryan Ewbank

Jeff said:
> It appears the generated ExprParser will give an incorrect parse of
> the following (that is, it seems to me that the following should fail):
> 
> 3+3)
> 
> In addition, something such as 3+3)+2 will not only parse without error,
> it will evaluate as 3+3 - behavior that would be highly undesirable for
> my user-defined input.
>
> Therefore, what I would really like to do is check for exact matching of
> parenthesis.  Is there a simple way to do this with ANTLR grammar?
From jeffsteward at hotmail.com  Tue Jun 28 10:16:41 2005
From: jeffsteward at hotmail.com (Jeff Steward)
Date: Tue Jun 28 10:16:43 2005
Subject: [antlr-interest] Extra right parenthesis in "An Introduction
	toANTLR" not failing - why?
In-Reply-To: <dd3a065f05062810005afbf45a@mail.gmail.com>
Message-ID: <BAY106-F6A0584468BDECD2408813A2E10@phx.gbl>

Brian,

Thanks so much!  That's the piece of the puzzle I was missing!  Everything 
is much more clear now.  :-)

Gratefully yours,

Jeff

>From: Bryan Ewbank <ewbank@gmail.com>
>Reply-To: Bryan Ewbank <ewbank@gmail.com>
>To: ANTLR Interest <antlr-interest@antlr.org>
>Subject: Re: [antlr-interest] Extra right parenthesis in "An Introduction 
>toANTLR" not failing - why?
>Date: Tue, 28 Jun 2005 13:00:45 -0400
>
>Hi Jeff,
>
>What you are seeing is exactly correct, once you realize what's going on...
>
>For the input "3+3)", only the "3+3" is matched by the grammar, then
>ANTLR's generated parser terminates because the ")" cannot be
>recognized in the context of the grammar.
>
>The grammar defined for this parser does not require that it consume
>the entire token stream, so it does not - it simply quits when it sees
>something it cannot recognize.
>
>In the same way, if I have the string "abcabcdef", the regular
>expression "(abc)*" will not fail - it will only match the first six
>characters.
>
>To force the parser to consume the entire token stream, you must add a
>top-level production something like this:
>
>     program : expr EOF! ;
>
>Using this production as your entry point will force the parser to
>report an error as you expect, because by adding the "EOF" at the end
>of the you have told ANTLR "match an expr, AND NOTHING ELSE".
>
>Said another way, ANTLR's parser will expect EOF but see ")", which is
>clearly a parse error.
>
>Hope this helps,
>- Bryan Ewbank
>
>Jeff said:
> > It appears the generated ExprParser will give an incorrect parse of
> > the following (that is, it seems to me that the following should fail):
> >
> > 3+3)
> >
> > In addition, something such as 3+3)+2 will not only parse without error,
> > it will evaluate as 3+3 - behavior that would be highly undesirable for
> > my user-defined input.
> >
> > Therefore, what I would really like to do is check for exact matching of
> > parenthesis.  Is there a simple way to do this with ANTLR grammar?


From subhobrotosinha at rediffmail.com  Tue Jun 28 11:19:13 2005
From: subhobrotosinha at rediffmail.com (Subhobroto  Sinha)
Date: Tue Jun 28 11:17:46 2005
Subject: [antlr-interest] Need help with treewalking
Message-ID: <20050628181913.14975.qmail@webmail45.rediffmail.com>

 ?
Hi

This will just take a few minutes for you pros.

First of all, please get the ANTLR grammar at http://www.geocities.com/subhobrotosinha/novel.txt
The driver (C++) is available at http://www.geocities.com/subhobrotosinha/noveldriver.txt

For now, it just builds an AST for ANY arithmetic expression (C like : +,-,*,/ and () only)

Now, I just want to emit simple instructions in english which would calculate such an expression.

I think that I will be able to do what I want, if I implement an external stack/LIFO - I don't have a problem with that.

But something tells me that ANTLR TreeParser is much more powerful for that - specially after
 I went through Michael Barnett's treebuilding tut.

I think that that tut is wildy incomplete - if he had indeed completed the part
 on "How to write tree parser rules that explore the abstract syntax trees in a different order than the default left-to-right depth-first traversal."
then maybe, that would have made my day. Too bad - he didn't write it. Did anyone ?

So I want to take a pure ANTLR approach to the problem - I wanna write my TreeParser to do exactly what I want it to.

For example, I want to feed my program this :

START MAIN
MODULE PE0

	a = ((b * c) + d) / ((e + f) * g);

END MODULE
END MAIN

Abstract Syntax Tree : (AST is generated correctly)
 ( MAIN START ( PE0 MODULE ( = a ( / ( + ( * b c ) d ) ( * ( + e f ) g ) ) ) END MODULE ) END MAIN )

Here's the output currently generated :

        ;start of program 'MAIN'
        ;start of module 'PE0'

        ;got assignment
        ;got indentifier 'a'
        ;got division
        ;got addition
        ;got multiplication
        ;got indentifier 'b'
        ;got indentifier 'c'

        ; multiply them

        ;got indentifier 'd'

        ; add them

        ;got multiplication
        ;got addition
        ;got indentifier 'e'
        ;got indentifier 'f'

        ; add them

        ;got indentifier 'g'

        ; multiply them
        ; divide them

        ;assign it to 'a'

        ;end of module 'PE0'
        ;end of program 'MAIN'

and this what I want to get : (It's what SHOULD be, instead of what is being currently generated)

        ;start of program 'MAIN'
        ;start of module 'PE0'

        ;got assignment
        ;got indentifier 'a'
        ;got division
        ;got addition
        ;got multiplication
        ;got indentifier 'b'
        ;got indentifier 'c'

        ; multiply 'b' and 'c'
	; store the result a temp register, say 'R0' [Note : I think in this such cases, temp registers should be used - am I correct ? BTW - DON'T use the stack to store temps - there's no stack on the target machine - it's kinda RISC. period.]

        ;got indentifier 'd'

        ; add 'd' to the temp register 'R0'

        ;got multiplication
        ;got addition
        ;got indentifier 'e'
        ;got indentifier 'f'

        ; add 'e' and 'f'
	; store the result a temp register, say 'R1'

        ;got indentifier 'g'

        ; multiply 'g' with the temp register 'R1'
        ; divide 'R0' by 'R1'
	; store the result a temp register, say 'R2'

        ;assign 'R2' to 'a'

        ;end of module 'PE0'
        ;end of program 'MAIN'

So you see what I want to do ?

My alter self tells me to get on with implementing an external stack, and then operate on the top two operands once we get a binary op (kinda postfix eval. like)

However, I really wanna know ANTLR well, and I feel if you pros just gave me a head start, then I could understand a little about treewalking.

The current docs are way too much complicated for me (it would have been much better if Terr. explained the theory with a few diagrams), but if I get to grasp about TreeParser, then I indent to write a "Dummies guide to treewalking" ;)

Note that I am NOT interested in evaluating the expression, but in generating the instructions to do so..

BTW - simplified treewalking tuts are very much welcome.

You got me - I WANNA know about treewalking as much as possible, and I won't leave you guys until I do that ;)

Subhobroto Sinha

http://www.geocities.com/subhobrotosinha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050628/4d58eee1/attachment-0001.html
From Craig.Berry at portblue.com  Tue Jun 28 12:27:28 2005
From: Craig.Berry at portblue.com (Craig Berry)
Date: Tue Jun 28 12:27:30 2005
Subject: [antlr-interest] Out-of-order child node evaluation
Message-ID: <9070937C803EE44B830D5B8AB4BDAF7E015A9A61@exchange.portblue.com>

Hi, all,
I've consulted all the doc and FAQs I can find, but somehow I'm having a
continued mental block on resolving this problem.  Any help would be
appreciated.
We have a tree-walker rule clause that looks like this:
	|	#(sumop:SUM 
	      opA=subexpression opAxis=axisexpression)
		{ 
		  returnValue = new
SumFunctionCalculator().calculate(valueManager, opA, opAxis);
		}
As part of a redesign I would like to evaluate the right (opAxis) child
node first, and change things about the evaluation environment before
then evaluating the left (opA) child node.
I have been flailing around unsuccessfully with tree transformations,
override codes, noop rules, and a dozen other things, but I can't
accomplish this seemingly simple task.  Can anyone point me in the right
direction, please?

-- 
Craig Berry
Principal Architect
PortBlue Corporation (http://www.portblue.com/)

From parrt at cs.usfca.edu  Tue Jun 28 14:20:22 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun 28 14:19:36 2005
Subject: [antlr-interest] joy! (tree parsing)
Message-ID: <FD83A4CF-6458-4AA1-A974-35ECB86E1E2E@cs.usfca.edu>

Hi,

So tree parsing error messages pretty much suck in ANTLR 2.x.  I am  
building a simple C tree parser and I got a parse error:

[program, declaration, block, stat, forStat, expr]: line 8:8  
decision=<<57:1: expr : ( ^( EQEQ expr expr ) | ^( LT expr expr ) | ^ 
( PLUS expr expr ) | atom );>> state 0 (decision=7) no viable alt;  
token=[@45,76:76='=',<16>,8:8]

I think you'll agree that this is vastly superior (even if a glut of  
info).  The point is that you have it.  It is clear to me from this  
that the expr rule encountered an ASSIGN node and didn't think it  
could parse it (true).  Do you like the stack track too? cool, eh?

Hooray!

3.0ea4 approaching...

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From parrt at cs.usfca.edu  Tue Jun 28 14:32:04 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue Jun 28 14:31:21 2005
Subject: [antlr-interest] new blog entry for tree parser
Message-ID: <20C0433B-1056-4F41-8C5D-653954254162@cs.usfca.edu>

Hi,

http://www.antlr.org/blog/antlr3/treegrammar.tml

has an example simpleC AST construction and tree parser.  I love the - 
 > syntax!  For example, this is cool:

functionHeader
     :   type ID '(' ( formalParameter ( ',' formalParameter )* )? ')'
         -> ^(FUNC_HDR type ID formalParameter+)
     ;

Note the + in the rewrite section and the imaginary token. :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From nbsherid at secsme.org.au  Tue Jun 28 16:01:36 2005
From: nbsherid at secsme.org.au (Nigel Sheridan-Smith)
Date: Tue Jun 28 16:01:41 2005
Subject: [antlr-interest] Problems with Java 1.5 grammar
In-Reply-To: <42BC4B9A.1000806@yandex.ru>
Message-ID: <000201c57c35$5605d1a0$dc29198a@nigelnote>

> -----Original Message-----
> From: antlr-interest-bounces@antlr.org [mailto:antlr-interest-
> bounces@antlr.org] On Behalf Of Ivan Dubrov
> Sent: Saturday, 25 June 2005 4:06 AM
> To: antlr-interest@antlr.org
> Subject: [antlr-interest] Problems with Java 1.5 grammar
> 
> Hello,
> 
> I've tried to use one of the Java 1.5 grammars (this one:
> http://www.antlr.org/grammar/1093454600181/java15-grammar.zip), but
> encountered problems with the following code:
> 
> import java.io.StringReader;
> public class Test {
>     public static void main(String[] args) throws Exception {
>         JavaLexer l = new JavaLexer(new StringReader("hello"));
>         JavaRecognizer r = new JavaRecognizer(l);
>         r.expression();
>         System.out.println("OK");
>     }
> }
> 
> In my opinion, "hello" string is the Java expression, so the code should
> print "OK". The grammar tells the same (although I'm not very good at
> ANTLR grammars). But this code throws exception with message 'unexpected
> token "hello"'.
> 
> Anybody can tell me what's the problem here? Anobody tried to use these
> grammars to parse pieces of code?
> 


AFAIK you can't exactly call any rule in the parser to kick-start it - only
ones that aren't called by any other rule (a "top-level production"). 

The reason for this is that the FOLLOW sets are calculated at that rule,
based on the rules that might have called it... However, I think that should
only affect the rule on exit, not entry ("hello" is the first token to
match), so I'm not sure if that is causing the behaviour that you are
seeing, or whether it will be the next problem you face ;).

For some info on FIRST and FOLLOW sets...

http://www.antlr.org/article/langparse.html
http://www.antlr.org/pipermail/antlr-interest/2005-March/011301.html


Can you rebuild the grammar with -traceParser option on? And send us the
output?

Nigel

--
Nigel Sheridan-Smith
PhD research student

Faculty of Engineering
University of Technology, Sydney
Phone: 02 9514 7946
Fax: 02 9514 2435 


From craig at palantir.co.za  Wed Jun 29 00:13:17 2005
From: craig at palantir.co.za (Craig Main)
Date: Wed Jun 29 00:19:34 2005
Subject: [antlr-interest] Statement Parsing,
Message-ID: <20050629071930.667C2DC75D@www.antlr.org>

Hi,

 

Could someone let me know how to parse the statement below?

I am struggling to obtain the function name and parameters.

 

I am trying to parse ID ( param , param , param ) in a tree.

I have included the tree rules, and the grammar rules. I cannot seem to get
the tree to match the function at all.

 

I don't think the tree node below matches anything.

 

| #(ELIST ID (expression)* )

 

 

The tree is as follows.

rules

                                 : #(RULESET (statement)*)

                                 ;

statement                          {object result = null;}

                                 : #(ASSIGN id:ID
result=expression{log.Info(string.Format("{0}={1}", id.getText(),
result));}) 

                                 ;

 

expression

returns [object result]            {result = null;object l,r;}

                                 : #(PLUS l=term r=term) {result=Add(l,r);}

                                 | #(MINUS l=term r=term)
{result=Subtract(l,r);}

                                 | #(MULTIPLY l=term r=term)
{result=Multiply(l,r);}

                                 | #(DIVIDE l=term r=term)
{result=Divide(l,r);}                                 

                                 | result=term

                                 | #(ELIST ID (expression)* )

                                 ;

 

term

returns [object result]            {result = null;}

                                 : result=literal

                                 ;

 

//value                            : function | literal

//                                 ;

 

literal

returns [object result]            {result = null;}

                                 : id:ID { result = id.getText(); }

                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }

                                 ;

 

 

The grammar is as follows.

 

rules                   : (statement)* 

                          {#rules = #([RULESET, "RULESET"], #rules);}

                          EOF!

                        ;

statement               : assignment_statement SEMI!

                        ;

assignment_statement    : id:ID ASSIGN^ expression

                        ;

expression              : term ((PLUS^|MINUS^) term)*

                        ;

term                    : factor ((MULTIPLY^|DIVIDE^) factor)*

                        ;

factor                  : value

                        ;

value                   : (ID LPAREN) => function

                        | literal

                        ;

function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
arguments RPAREN!

                        ;

arguments               : (expression (COMMA! expression)*)?

                          {#arguments = #(#[ELIST,"ELIST"], arguments);}

                        ;

literal                 : id:ID^

                        | fl:FLOAT^

                        ;

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050629/0b07c8db/attachment-0001.html
From sebastian.mies at gmx.net  Wed Jun 29 02:31:13 2005
From: sebastian.mies at gmx.net (Sebastian Mies)
Date: Wed Jun 29 02:31:37 2005
Subject: [antlr-interest] joy! (tree parsing)
In-Reply-To: <FD83A4CF-6458-4AA1-A974-35ECB86E1E2E@cs.usfca.edu>
References: <FD83A4CF-6458-4AA1-A974-35ECB86E1E2E@cs.usfca.edu>
Message-ID: <671244385.20050629113113@gmx.net>

Hi Terence,

TP> So tree parsing error messages pretty much suck in ANTLR 2.x. I am
TP> building a simple C tree parser and I got a parse error:

TP> [program, declaration, block, stat, forStat, expr]: line 8:8  
TP> decision=<<57:1: expr : ( ^( EQEQ expr expr ) | ^( LT expr expr ) | ^
TP> ( PLUS expr expr ) | atom );>> state 0 (decision=7) no viable alt;
TP> token=[@45,76:76='=',<16>,8:8]
Nice!! :-)
So, if the stack track is available - next step whould be a
incremental parsing engine? at least it would be nice to save the
parser/lexer state at certain positions to restart parsing from
there until it matches another saved state.
Thats not incremental parsing in the common sense, but it would be
enough for most cases.

Sebastian.







From craig at palantir.co.za  Wed Jun 29 03:12:48 2005
From: craig at palantir.co.za (Craig Main)
Date: Wed Jun 29 03:20:33 2005
Subject: [antlr-interest] Function Call,
Message-ID: <20050629102029.CDB76DCC29@www.antlr.org>

Hi,

 

I have managed to get a little further, but I am still struggling with the
function call.

I am trying to match.

 

TEMP = 4 + func(10+1,2);

 

My problem is that #(ELIST ID expression) never gets matched. I am really
battling to understand how the tree is matched.

 

 

 

rules

                                 : #(RULESET (statement)*)

                                 ;

 

statement                          {object result = null;}

                                 : #(ASSIGN id:ID result=expression {
log.Info(string.Format("{0} = {1}", id.getText(), result)); } ) 

                                 ;

 

expression

returns [object result]            {result = null;object l,r;}

                                 : #(PLUS l=term r=term) {result=Add(l,r);}

                                 | #(MINUS l=term r=term)
{result=Subtract(l,r);}

                                 | #(MULTIPLY l=term r=term)
{result=Multiply(l,r);}

                                 | #(DIVIDE l=term r=term)
{result=Divide(l,r);}                                 

                                 | #(ELIST ID expression) {log.Info("#(ELIST
(expression)* )");}

                                 | result=term {log.Info("term");}

                                 | #(METHOD_CALL ELIST)

                                 ;

 

term

returns [object result]            {result = null;}

                                 : result=literal

                                 ;

 

//value                            : function | literal

//                                 ;

 

literal

returns [object result]            {result = null;}

                                 : id:ID { result = id.getText(); }

                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }

                                 ;

 

 

The parser.

 

rules                   : (statement)* 

                          {#rules = #([RULESET, "RULESET"], #rules);}

                          EOF!

                        ;

statement               : assignment_statement SEMI!

                        ;

assignment_statement    : id:ID ASSIGN^ expression

                        ;

expression              : term ((PLUS^|MINUS^) term)*

                        ;

term                    : factor ((MULTIPLY^|DIVIDE^) factor)*

                        ;

factor                  : value

                        ;

value                   : (ID LPAREN) => function

                        | literal

                        ;

function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
arguments RPAREN!

                        ;

arguments               : (expression (COMMA! expression)*)?

                          {#arguments = #(#[ELIST,"ELIST"], arguments);}

                        ;

literal                 : id:ID^

                        | fl:FLOAT^

                        ;

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050629/42887f18/attachment.html
From ewbank at gmail.com  Wed Jun 29 03:45:28 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Jun 29 03:45:31 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <20050629102029.CDB76DCC29@www.antlr.org>
References: <20050629102029.CDB76DCC29@www.antlr.org>
Message-ID: <dd3a065f05062903455707ac67@mail.gmail.com>

I find it's a great help to use the tracing utility in ANTLR, because
it shows a list of the productions matched, rather than letting my
eyes go where I "know" it will go.  Sometimes the two are very
different.

There's two problems; the first is that the alternative for
METHOD_CALL explicitly matches ELIST:
      // problem in original tree grammar - doesn't dive into ELIST tree
      #( METHOD_CALL ELIST )

It should instead use a subrule; perhaps it should be:
      // tree grammar to drill into the subtree rooted at ELIST
      #( METHOD_CALL expression )

The second problem is that the tree grammar for ELIST doesn't match
the parser output.  The parser produces this tree for a function call:
   #( METHOD_CALL #(ELIST e1 e2 e3) )
   // the name of the function is the text of the METHOD_CALL node

However, the tree walker (and your example) don't match this because
they place an ID node below the ELIST:
   // problem in original tree grammar
   #(ELIST ID expression)

To match the input grammar, this should instead read:
   // tree production to match that produced by the parser
   #(ELIST ( expression )* )

You can also collapse these into one production in the tree grammar, thus:
      // may as well write it this way; first two levels are known...
      #( METHOD_CALL #( ELIST ( expression )* ) )

Hope this helps,
- Bryan Ewbank
From wiggjd at lsbu.ac.uk  Wed Jun 29 05:17:09 2005
From: wiggjd at lsbu.ac.uk (David Wigg)
Date: Wed Jun 29 05:11:28 2005
Subject: [antlr-interest] C++ puzzle
Message-ID: <42C29145.7060002@lsbu.ac.uk>

Hi,

I'm trying to parse the following extract from a C++
preprocessed file. I wonder if someone could explain what the
problem statement indicated might mean.

#line 6 "C:\\Program Files\\Microsoft Visual Studio .NET
2003\\VC7\\INCLUDE\\xstring"

#pragma pack(push,8)
#pragma warning(push,3)
namespace std {

#pragma warning(disable:4251)

class  _String_base
      {
public:
      void _Xlen() const;
      void _Xran() const;
      };

template<class _Ty,
      class _Alloc>
      class _String_val
          : public _String_base
      {
protected:
      typedef typename _Alloc::template
          rebind<_Ty>::other _Alty;    // Problem statement

      _String_val(_Alty _Al = _Alty())
          : _Alval(_Al)
          {
          }

      _Alty _Alval;
      };
etc.


I can't see how "_Alloc::template" can be a typename
("template" is a reserved word), but what does it mean?

I presume the syntax is legal but I have not been able to find
any similar examples either in my include files in ...\Microsoft
Visual Studio\VC98\include or in Stroustrup, Third Edition, 
Deitel & Deitel, Third Edition, or in "C++ in a Nutshell" First
Edition.

This preprocessed file was sent to me as a problem. It is
interesting that I have not received this problem from anyone
else.

I wonder if anyone can identify the compiler and version?

I also find it confusing that _Alty is a type as well as the 
name of a function and _Alval is a variable as well as the name 
of a function!

Thanks,

David.









From stuart.dootson at gmail.com  Wed Jun 29 06:30:38 2005
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Wed Jun 29 06:30:41 2005
Subject: [antlr-interest] C++ puzzle
In-Reply-To: <42C29145.7060002@lsbu.ac.uk>
References: <42C29145.7060002@lsbu.ac.uk>
Message-ID: <8b56cad4050629063031fdea64@mail.gmail.com>

On 6/29/05, David Wigg <wiggjd@lsbu.ac.uk> wrote:
> Hi,
> 
> I'm trying to parse the following extract from a C++
> preprocessed file. I wonder if someone could explain what the
> problem statement indicated might mean.
> 

<big snip>

> typedef typename _Alloc::template rebind<_Ty>::other _Alty;    // Problem statement

The 'typename refers to the 'other' identifier. Use of
_Alloc::template rebind implies that _Alloc has a nested class
template called rebind. The whole statement is typedefing _Alty to the
type other, declared in the template instantiation rebind<_Ty>, which
is declared in the template parameter _Alloc. So, _Alloc should look
something like:

struct _Alloc
{
   template <class SomeType>
   struct rebind
   {
      typedef {some-declaration} other;
   };
};

<big snip>

> I wonder if anyone can identify the compiler and version?

Judging by the header file path name, it's VC++ 7.1 (i.e. the one from
Visual Studio .NET 2003).

> 
> Thanks,
> 
> David.
> 

HTH

Stuart Dootson
From craig at palantir.co.za  Wed Jun 29 06:31:11 2005
From: craig at palantir.co.za (Craig Main)
Date: Wed Jun 29 06:37:26 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <dd3a065f05062903455707ac67@mail.gmail.com>
Message-ID: <20050629133723.0714BDCC7D@www.antlr.org>

Hi,

I am *still* struggling.
What am I missing here?

I have tried the following rule.
#(METHOD_CALL( #(ELIST (expression)*))) {log.Info("Method Call");}

I also tried to match just
#(ELIST ( expression )* ) {log.Info("ELIST");}

It also doesn't match. The log output is never produced.

It still doesn't match.
The output is as follows.

rules.g:33:60: warning:Rule 'expression' returns a value
RuleLexer.cs(108,12): warning CS0219: The variable '_token' is assigned but
its value is never used

Tree Printout, trying to match TEMP = 4 + func[10+1,2];
-------------------------------------------------------

( RULESET ( = FRED 100 ) ( = TEST ( + 10 10 ) ) ( = ITEM ( + TEST 10 ) ) ( =
TE
MP ( + 4 ( func ( ELIST ( + 10 1 ) 2 ) ) ) ) )
---------------------------------------
[SimpleAppConfig]: term
[SimpleAppConfig]: FRED = 100
[SimpleAppConfig]: TEST = 20
[SimpleAppConfig]: ITEM = TEST10
<AST>: unexpected AST node: func
[SimpleAppConfig]: TEMP = 4
---------------------------------------

I cannot match the function.
Here is the new grammar.

rules
                                 : #(RULESET (statement)*)
                                 ;

statement                          {object result = null;}
                                 : #(ASSIGN id:ID result=expression {
log.Info(string.Format("{0} = {1}", id.getText(), result)); } ) 
                                 ;

expression
returns [object result]            {result = null;object l,r;}
                                 : #(PLUS l=term r=term)
{result=ExpressionOperation.Add(l,r);}
                                 | #(MINUS l=term r=term)
{result=ExpressionOperation.Subtract(l,r);}
                                 | #(MULTIPLY l=term r=term)
{result=ExpressionOperation.Multiply(l,r);}
                                 | #(DIVIDE l=term r=term)
{result=ExpressionOperation.Divide(l,r);}                                 
                                 | #(METHOD_CALL( #(ELIST (expression)*)))
{log.Info("E-Exp");}
                                 | result=term {log.Info("term");}
                                 ;

term
returns [object result]            {result = null;}
                                 : result=literal
                                 ;

//value                            : function | literal
//                                 ;

literal
returns [object result]            {result = null;}
                                 : id:ID { result = id.getText(); }
                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }
                                 ;


AND THE PARSER

rules                   : (statement)* 
                          {#rules = #([RULESET, "RULESET"], #rules);}
                          EOF!
                        ;

statement               : assignment_statement SEMI!
                        ;

assignment_statement    : id:ID ASSIGN^ expression
                        ;

expression              : term ((PLUS^|MINUS^) term)*
                        ;

term                    : factor ((MULTIPLY^|DIVIDE^) factor)*
                        ;

factor                  : value
                        ;

value                   : (ID LPAREN) => function
                        | literal
                        ;

function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
arguments RPAREN!
                        ;

arguments               : (expression (COMMA! expression)*)?
                          {#arguments = #(#[ELIST,"ELIST"], arguments);}
                        ;

literal                 : id:ID^
                        | fl:FLOAT^
                        ;

-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
Sent: 29 June 2005 12:45 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Function Call,

I find it's a great help to use the tracing utility in ANTLR, because
it shows a list of the productions matched, rather than letting my
eyes go where I "know" it will go.  Sometimes the two are very
different.

There's two problems; the first is that the alternative for
METHOD_CALL explicitly matches ELIST:
      // problem in original tree grammar - doesn't dive into ELIST tree
      #( METHOD_CALL ELIST )

It should instead use a subrule; perhaps it should be:
      // tree grammar to drill into the subtree rooted at ELIST
      #( METHOD_CALL expression )

The second problem is that the tree grammar for ELIST doesn't match
the parser output.  The parser produces this tree for a function call:
   #( METHOD_CALL #(ELIST e1 e2 e3) )
   // the name of the function is the text of the METHOD_CALL node

However, the tree walker (and your example) don't match this because
they place an ID node below the ELIST:
   // problem in original tree grammar
   #(ELIST ID expression)

To match the input grammar, this should instead read:
   // tree production to match that produced by the parser
   #(ELIST ( expression )* )

You can also collapse these into one production in the tree grammar, thus:
      // may as well write it this way; first two levels are known...
      #( METHOD_CALL #( ELIST ( expression )* ) )

Hope this helps,
- Bryan Ewbank


From gt54-antlr at cyconix.com  Wed Jun 29 06:40:51 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Wed Jun 29 06:40:58 2005
Subject: [antlr-interest] C++ puzzle
In-Reply-To: <42C29145.7060002@lsbu.ac.uk>
References: <42C29145.7060002@lsbu.ac.uk>
Message-ID: <42C2A4E3.6070507@cyconix.com>

David Wigg wrote:

> protected:
>      typedef typename _Alloc::template
>          rebind<_Ty>::other _Alty;    // Problem statement

I'm just an amateur, but here's my tuppence (you should try this on 
comp.std.c++ or comp.lang.c++):

this is just, I think,

protected:
  typedef _Alloc::rebind<_Ty>::other _Alty;

where _Alloc is a template. However, there are potentially 2 problems 
with this declaration:

1)  The type of _Alloc depends on a template parameter. The compiler 
can't look up rebind to see if it's a template, so it parses the 
statement as

(_Alloc::rebind) < ...

ie. it thinks you're doing a comparison. You have to explicitly indicate 
that rebind is the name of a template by inserting the prefix 'template' 
(_Alloc::template rebind). This can happen for all operators that can 
qualify a name (::, ->, .).

2) _Alloc is a typename in template _String_val. The typename keyword is 
just used to clarify this. Without typename, _Alloc might be considered 
a static member.

See C++ templates, Vandevoorde & Josuttis, 43 & 132. In many cases you 
can just ignore the typename and template keywords.

HTH

Paul


From ewbank at gmail.com  Wed Jun 29 08:02:38 2005
From: ewbank at gmail.com (Bryan Ewbank)
Date: Wed Jun 29 08:02:40 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <42c2a415.1466dcdb.145d.ffffae56SMTPIN_ADDED@mx.gmail.com>
References: <dd3a065f05062903455707ac67@mail.gmail.com>
	<42c2a415.1466dcdb.145d.ffffae56SMTPIN_ADDED@mx.gmail.com>
Message-ID: <dd3a065f05062908023a43a5df@mail.gmail.com>

Remove the extra parenthesis around the #(ELIST ... ) subrule.  Again,
I think the trace output for tree parsers is most helpful...

WRONG:
    #(METHOD_CALL ( #(ELIST (expression)*) ) )

RIGHT:
    #(METHOD_CALL #(ELIST (expression)* ) )

Hope this helps,
- Bryan
From mail at martin-probst.com  Wed Jun 29 08:07:42 2005
From: mail at martin-probst.com (Martin Probst)
Date: Wed Jun 29 08:07:59 2005
Subject: [antlr-interest] C++ puzzle
In-Reply-To: <42C29145.7060002@lsbu.ac.uk>
References: <42C29145.7060002@lsbu.ac.uk>
Message-ID: <1120057662.8338.14.camel@localhost.localdomain>

Hi,

> I also find it confusing that _Alty is a type as well as the 
> name of a function and _Alval is a variable as well as the name 
> of a function!

There are no "real" functions in there.
"_Alty _Al = _Alty()" is a call to the default constructor of _Alty,
compare "mytype foo = mytype();", which is of course equivalent to
"mytype foo();"

The _Alval(_Al) in: 
>      _String_val(_Alty _Al = _Alty())
>           : _Alval(_Al)
... is only the standard C++ initializer syntax, just as in

class MyFoo {
  int bar;
  public MyFoo()
    : bar(3) 
  {
    ...
  }
}

That is btw in my opinion the reason why C++ as a language is really
horrible - people tend to write stuff in it that is completely
unrecognisable to anyone, even when not using macros.

Regards,
Martin

From craig at palantir.co.za  Wed Jun 29 08:26:39 2005
From: craig at palantir.co.za (Craig Main)
Date: Wed Jun 29 08:48:10 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <dd3a065f05062908023a43a5df@mail.gmail.com>
Message-ID: <20050629154808.143F7DCC29@www.antlr.org>

Bryan,

Thanks very much for your assistance.
I have printed out the tree, and I obtain the following output.

( RULESET ( = FRED 100 ) ( = TEST ( + 10 10 ) ) ( = ITEM ( + TEST 10 ) ) ( =
TE
MP ( + 4 ( func ( ELIST ( + 10 1 ) 2 ) ) ) ) )

When the tree is parsed, with your corrected rule, I get

<AST>: unexpected AST node: func

I suspect that there is another problem. Surely METHOD_CALL should appear in
the tree output? ELIST and RULESET appear in the tree.
I suspect that the grammar rule:

function : id:ID^ {#id.setType(METHOD_CALL);} LPAREN! arguments RPAREN!

Is not actually setting the type properly or something?

I have included the rules in the event that anyone else is following the
thread.

rules
                                 : #(RULESET (statement)*)
                                 ;

statement                          {object result = null;}
                                 : #(ASSIGN id:ID result=expression {
log.Info(string.Format("{0} = {1}", id.getText(), result)); } ) 
                                 ;

expression
returns [object result]            {result = null;object l,r;}
                                 : #(PLUS l=term r=term)
{result=ExpressionOperation.Add(l,r);}
                                 | #(MINUS l=term r=term)
{result=ExpressionOperation.Subtract(l,r);}
                                 | #(MULTIPLY l=term r=term)
{result=ExpressionOperation.Multiply(l,r);}
                                 | #(DIVIDE l=term r=term)
{result=ExpressionOperation.Divide(l,r);}                                 
                                 | #(METHOD_CALL #(ELIST (expression)* )
){log.Info("test");}
                                 | result=term {log.Info("term");}
                                 ;

term
returns [object result]            {result = null;}
                                 : result=literal
                                 ;

//value                            : function | literal
//                                 ;

literal
returns [object result]            {result = null;}
                                 : id:ID { result = id.getText(); }
                                 | fl:FLOAT { result =
double.Parse(fl.getText()); }
                                 ;


rules                   : (statement)* 
                          {#rules = #([RULESET, "RULESET"], #rules);}
                          EOF!
                        ;

statement               : assignment_statement SEMI!
                        ;

assignment_statement    : id:ID ASSIGN^ expression
                        ;

expression              : term ((PLUS^|MINUS^) term)*
                        ;

term                    : factor ((MULTIPLY^|DIVIDE^) factor)*
                        ;

factor                  : value
                        ;

value                   : (ID LPAREN) => function
                        | literal
                        ;

function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
arguments RPAREN!
                        ;

arguments               : (expression (COMMA! expression)*)?
                          {#arguments = #(#[ELIST,"ELIST"], arguments);}
                        ;

literal                 : id:ID^
                        | fl:FLOAT^
                        ;







-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] On Behalf Of Bryan Ewbank
Sent: 29 June 2005 05:03 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Function Call,

Remove the extra parenthesis around the #(ELIST ... ) subrule.  Again,
I think the trace output for tree parsers is most helpful...

WRONG:
    #(METHOD_CALL ( #(ELIST (expression)*) ) )

RIGHT:
    #(METHOD_CALL #(ELIST (expression)* ) )

Hope this helps,
- Bryan


From parrt at cs.usfca.edu  Wed Jun 29 09:54:50 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 29 09:54:05 2005
Subject: [antlr-interest] joy! (tree parsing)
In-Reply-To: <671244385.20050629113113@gmx.net>
References: <FD83A4CF-6458-4AA1-A974-35ECB86E1E2E@cs.usfca.edu>
	<671244385.20050629113113@gmx.net>
Message-ID: <B20B0FB7-55A5-4296-B45A-F2209F26CCE0@cs.usfca.edu>


On Jun 29, 2005, at 2:31 AM, Sebastian Mies wrote:

> Hi Terence,
>
> TP> So tree parsing error messages pretty much suck in ANTLR 2.x. I am
> TP> building a simple C tree parser and I got a parse error:
>
> TP> [program, declaration, block, stat, forStat, expr]: line 8:8
> TP> decision=<<57:1: expr : ( ^( EQEQ expr expr ) | ^( LT expr  
> expr ) | ^
> TP> ( PLUS expr expr ) | atom );>> state 0 (decision=7) no viable alt;
> TP> token=[@45,76:76='=',<16>,8:8]
> Nice!! :-)
> So, if the stack track is available - next step whould be a
> incremental parsing engine? at least it would be nice to save the
> parser/lexer state at certain positions to restart parsing from
> there until it matches another saved state.
> Thats not incremental parsing in the common sense, but it would be
> enough for most cases.

Hi :)  Well, I sort of cheat by asking the Java runtime for the stack  
trace.  I will look at incremental parsing in the future for sure.   
Maybe I can convince Dave Ewing at apple to educate me on the subject :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From sanvermert at yahoo.com  Wed Jun 29 11:04:43 2005
From: sanvermert at yahoo.com (Mert Sanver)
Date: Wed Jun 29 11:04:46 2005
Subject: [antlr-interest] using antlr 2.7.5 with vc++ 6.0, please help
Message-ID: <20050629180443.36280.qmail@web51805.mail.yahoo.com>

Hi All,
 
We need to develop an application using ms vc++ 6.0 and antlr 2.7.5 tool, however we couldn't figure out how to get started. I tried everything I know within last 48 hours but still it does not work. All the files (antlr generated lexer,parser and main.cpp) compiled but vc++ can not do the link operation. It gives errors like below ;
 
libcpd.lib(locale.obj) : error LNK2005: "public: static class std::locale::id std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::id" (?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0l
ocale@2@A) already defined in antlr.lib(CharScanner.obj)
LINK : warning LNK4098: defaultlib "LIBC" conflicts with use of other libs; use /NODEFAULTLIB:library
antlr.lib(String.obj) : error LNK2001: unresolved external symbol "public: void __thiscall std::_String_base::_Xlen(void)const " (?_Xlen@_String_base@std@@QBEXXZ)
antlr.lib(BaseAST.obj) : error LNK2001: unresolved external symbol "public: void __thiscall std::_String_base::_Xlen(void)const " (?_Xlen@_String_base@std@@QBEXXZ)
antlr.lib(InputBuffer.obj) : error LNK2001: unresolved external symbol "public: void __thiscall std::_String_base::_Xlen(void)const " (?_Xlen@_String_base@std@@QBEXXZ)
....................
 
I would appreciate if anyone can help. Thanx to all in advance,
 
Best Regards,
 
Mert
 
 

		
---------------------------------
Yahoo! Sports
 Rekindle the Rivalries. Sign up for Fantasy Football
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050629/cc60e5bc/attachment-0001.html
From parrt at cs.usfca.edu  Wed Jun 29 11:52:42 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed Jun 29 11:51:58 2005
Subject: [antlr-interest] ANTLR 3.0ea4 released
Message-ID: <757BB2A4-7FC2-4D73-8EED-97CD360848B3@cs.usfca.edu>

Howdy!

Well, I just made my (artificial) end-of-June deadline for tree  
parsing. :)  Damn thing actually seems to work.  Note that anything  
other than perfect input grammars tends to make ANTLR puke.  I'll  
worry about bad-input checking later when I rewrite v3 in v3. :)

So, ANTLR v3 early access 4 marks the completion of the major  
components: lexing, parsing, tree construction, and tree parsing.   
Naturally they are not polished, but the core functionality seems to  
be there.  ANTLR can build or parse trees of any type (indeed it  
assumes your node type is Object).

http://www.antlr.org/download/antlr-3.0ea4.tar.gz

This version requires yet another update to the StringTemplate  
library (update is included in lib dir).  Expect ST release in July  
before my trip to Asia.

I have verified the examples work with 3.0ea4 and I have added a nice  
example of tree construction and tree parsing: simplecTreeParser.  See

http://www.antlr.org/download/examples-v3.tar.gz

Also, please see:

org/antlr/test/TestAutoAST.java
org/antlr/test/TestRewriteAST.java

for a bunch of unit tests that illustrate what is going on in terms  
of tree parsing.

Also, as I mentioned for 3.0ea3, I think i have broken the ANTLRWorks  
build/debug feature.  Jean is back soon from vacation, however.  He  
is giving a lecture at Stanford on ANTLRWorks in July so I'm guessing  
he will work hard on it before then. ;)

My plan is to fix bugs and perhaps do some tweaks on ANTLR v3 over  
the summer, but I will focus on StringTemplate in July as well as  
writing my lectures for Asia.  In August I will begin writing an  
ANTLR v3 book and a v3 summary paper for the Int'l conference on  
compiler construction (Vienna 2006).  I will then try to add more  
features to v3 and clean it up in time for the ANTLR2005 workshop at  
the end of October.  After that I will continue working on the book  
and so on as I will teach my grad languages class Spring 2006 with  
the book draft.  Also at some point I want to build a quick Java 1.5  
grammar from the language spec just to see how easy that is with LL 
(*) parsing. :)

Have fun!

Terence
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From joerg.rech at gmail.com  Wed Jun 29 12:10:16 2005
From: joerg.rech at gmail.com (=?ISO-8859-1?Q?J=F6rg_Rech?=)
Date: Wed Jun 29 12:16:14 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and not
	as a keyword
In-Reply-To: <C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
	<42BF0E6E.4000908@gmx.net> <42BF1A78.2080609@gmail.com>
	<C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>
Message-ID: <42C2F218.5030404@gmail.com>

Hi,
  maybe I got something wrong here but isn't the lexer called before the 
recognizer for the methods? So if I enter a method changes to enableEnum 
have no effect on the lexer?

Or is the lexer just registered and called by the recognizer/parser on 
demand?

Bye,
Joerg

David Ewing schrieb:

> You might be able to call JavaLexer.enableEnum(false) from an action  
> when you enter the recognition of a method, and call  
> JavaLexer.enableEnum(true) when leaving. A hack, but perhaps a useful  
> one. :)
>
> Dave
>
> On Jun 26, 2005, at 3:13 PM, J?rg Rech wrote:
>
>> Michael Studman schrieb:
>>
>>
>>> If you're not in a position to be able to change the source code  
>>> you're parsing and you can guarantee "enum" is not used as a  
>>> keyword  then you can call JavaLexer.enableEnum(false) on the  lexer 
>>> before you pass it into the recogniser.
>>>
>>
>> If you mean by "guarantee enum is not used" that I can decide  wether 
>> the class is either 1.4 or 1.5 I fear that this is not  possible. The 
>> only way I currently see is to have two different  pipelines with 
>> lexer, filter, and parser for 1.4 and 1.5 and then  parse the class 
>> first with 1.5 and if errors occur use the 1.4  pipeline.
>> I haven't tried it yet but it seems feasible (and ugly :-( )
>>
>> Thanks for your idea,
>> Joerg.
>


-- 
Joerg Rech
Computer Scientist        Web:   http://www.joerg-rech.de
Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com

From ric.klaren at gmail.com  Wed Jun 29 14:58:19 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Jun 29 14:58:34 2005
Subject: [antlr-interest] using antlr 2.7.5 with vc++ 6.0, please help
In-Reply-To: <20050629180443.36280.qmail@web51805.mail.yahoo.com>
References: <20050629180443.36280.qmail@web51805.mail.yahoo.com>
Message-ID: <42C3197B.5080401@gmail.com>

Mert Sanver wrote:
> We need to develop an application using ms vc++ 6.0 and antlr 2.7.5 tool, 
 > however we couldn't figure out how to get started. I tried everything I
 > know within last 48 hours but still it does not work. All the files 
(antlr generated
 > lexer,parser and main.cpp) compiled but vc++ can not do the link
 > operation.
 >
> It gives errors like below ;
>  
> libcpd.lib(locale.obj) : error LNK2005: "public: static class std::locale::id std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::id" (?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0l
> ocale@2@A) already defined in antlr.lib(CharScanner.obj)
> LINK : warning LNK4098: defaultlib "LIBC" conflicts with use of other libs; use /NODEFAULTLIB:library
> antlr.lib(String.obj) : error LNK2001: unresolved external symbol "public: void __thiscall std::_String_base::_Xlen(void)const " (?_Xlen@_String_base@std@@QBEXXZ)
> antlr.lib(BaseAST.obj) : error LNK2001: unresolved external symbol "public: void __thiscall std::_String_base::_Xlen(void)const " (?_Xlen@_String_base@std@@QBEXXZ)
> antlr.lib(InputBuffer.obj) : error LNK2001: unresolved external symbol "public: void __thiscall std::_String_base::_Xlen(void)const " (?_Xlen@_String_base@std@@QBEXXZ)
> ....................

How did you build the support library (configure build or manually 
created project)? Are you building/linking your project with the same 
options (for as far as they're relevant?)

No antlr dll I hope?

Cheers,

Ric
From ric.klaren at gmail.com  Wed Jun 29 15:08:23 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed Jun 29 15:08:28 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <20050629133723.0714BDCC7D@www.antlr.org>
References: <20050629133723.0714BDCC7D@www.antlr.org>
Message-ID: <42C31BD7.7040502@gmail.com>

Craig Main wrote:
> Hi,
> 
> I am *still* struggling.
> What am I missing here?
> 
> I have tried the following rule.
> #(METHOD_CALL( #(ELIST (expression)*))) {log.Info("Method Call");}
> 
> I also tried to match just
> #(ELIST ( expression )* ) {log.Info("ELIST");}
> 
> It also doesn't match. The log output is never produced.
> 
> It still doesn't match.
> The output is as follows.
> 
> rules.g:33:60: warning:Rule 'expression' returns a value
> RuleLexer.cs(108,12): warning CS0219: The variable '_token' is assigned but
> its value is never used
> 
> Tree Printout, trying to match TEMP = 4 + func[10+1,2];

So the input uses '[' and ']' as function argument grouping?

 > value                   : (ID LPAREN) => function
 >                         | literal
 >                         ;

Is your LPAREN a '(' or a '[' ? I suspect that the treeparser entered 
the literal rule in stead of the function one.

In case of doubt generate the treeparser with the -traceTreeParser and 
meditate on the output of that. This makes it really hard to see where 
the parser takes a wrong turn... The various tracing options to antlr 
for the generated lexers/parsers/treeparsers are some of your best friends.

Cheers,

Ric
From jddahl at micron.com  Wed Jun 29 15:26:52 2005
From: jddahl at micron.com (Jeff Dahl)
Date: Wed Jun 29 15:26:56 2005
Subject: [antlr-interest] Tree walking
Message-ID: <42C3202C.6040807@micron.com>

Why does SAMPLE.TREE.G not walk the entire tree?  Instead of

    ROOT
    |-- A
    |   `-- B
    |       |-- C
    |       |   |-- attribute1
    |       |   |   `-- value 1
    |       |   |-- attribute2
    |       |   |   `-- value 2
    |       |   `-- attribute3
    |       |       `-- value 3
    |       `-- D
    |           `-- attribute4
    |               `-- value 4
    |-- E
    |   `-- attribute5
    |       `-- value 5
    `-- F
        `-- attribute6
            `-- value 6

SAMPLE.TREE.G outputs

    ROOT
    |-- A
    |   `-- B
    |       |-- C
    |       `-- D
    |-- E
    `-- F

Also, once I can walk the entire tree, how do I change SAMPLE.TREE.G to 
transform the tree into

    A
    |-- B
    |   |-- C
    |   |   |-- attribute1
    |   |   |   `-- value 1
    |   |   |-- attribute2
    |   |   |   `-- value 2
    |   |   `-- attribute3
    |   |       `-- value 3
    |   `-- D
    |       `-- attribute4
    |           `-- value 4
    |-- E
    |   `-- attribute5
    |       `-- value 5
    `-- F
        `-- attribute6
            `-- value 6

Or in other words, how do I replace the ROOT node with its first child?

Thanks,
Jeff Dahl
------------------------------------------------------
SAMPLE.TXT

    $$_begin_A
       $$_begin_B
          $$_begin_C
             attribute1: value 1
             attribute2: value 2
             attribute3: value 3
          $$_end_C
          $$_begin_D
             attribute4: value 4
          $$_end_D
       $$_end_B
    $$_end_A
    $$_begin_E
       attribute5: value 5
    $$_end_E
    $$_begin_F
       attribute6: value 6
    $$_end_F

SAMPLE.TREE.G

    class SampleTreeParser extends TreeParser;
    options { buildAST=true; defaultErrorHandler=false; k=3; }
    tokens  { ROOT; }

    parse       : #(ROOT (section)+) ;

    section     : #(O_SECTION (key_value|section)*) ;

    key_value   : #(KEYWORD VALUE) ;

SAMPLE.G

    class SampleParser extends Parser;
    options { buildAST=true; defaultErrorHandler=false; k=3; }
    tokens  { ROOT; }

    parse       : (section)+ {#parse = #([ROOT, "ROOT"], #parse); } EOF! ;

    section     : O_SECTION^ (key_value|section)* C_SECTION! ;

    key_value   : KEYWORD^ VALUE ;

    class SampleLexer extends Lexer;
    options { defaultErrorHandler=false; caseSensitive=false; k=6; }

    SECTION     :
    "$$_"!("begin_"!{$setType(O_SECTION);}|"end_"!{$setType(C_SECTION);})
    ('a'..'z'|'_')+ NEWLINE! ;

    KEYWORD     : {getColumn()==1}? CHARS ((' '|'-'|'/') CHARS)* (':'!)? ;

    VALUE       : WS! (~'\n')* NEWLINE!;

    protected
    CHARS       : (options{greedy=true;}:'a'..'z'|'0'..'9'|'_')+ ;

    protected
    WS          : (options{greedy=true;}:' '|'\t')+ ;

    protected
    NEWLINE     : ((WS)? '\n'{newline();}|'\r')+ ;


From taco.indenbosch at xs4all.nl  Wed Jun 29 16:12:53 2005
From: taco.indenbosch at xs4all.nl (Taco H. in den Bosch)
Date: Wed Jun 29 16:10:50 2005
Subject: [antlr-interest] Problem with lexing: EOF and syntactic predicate.
Message-ID: <200506292310.j5TNAkGd028272@smtp-vbr3.xs4all.nl>

Hi everyone,

 

I have been using Antlr for some time now and have done various things with
it. Now I have two (related) problems, however which I seem to be unable to
address.

 

I have the following lexer productions:

 

EOS : '.' 

      ( '\t' | ' ' | '\n' )

      ;

 

Number : 

      ('0'..'9' )+

      (

            ( '.' '0'..'9' ) =>

            '.'

            ('0'..'9')+

      )?

      ;

 

(1) I want EOS to recognize a period followed by whitespace or the end of
the file. I tried

 

EOS : '.' 

      ( '\t' | ' ' | '\n' | EOF )

 

But that does not work as EOF can only be used in parsers, not lexers.
However I do not know another way to do this.

 

(2) I want the period of the production "Number" to be recognized only when
followed by digits (to form floating point numbers). Otherwise the lexer
should stop recognizing the production at the period, so the period can be
part of the EOS production. Thus:

 

123.456 => [Number="123.456"]

123.<space> => [Number="123"][EOS]

 

I thought at first that the syntactic predicate in the number production
should do the trick, but I now think syntactic predicates only work within a
production, i.e.:

 

Number : 

      ('0'..'9' )+

      (

            ( '.' '0'..'9' ) =>

            '.'

            ('0'..'9')+

      |

            '.'

            // Period with no following digits matched here

      )

      ;

 

Can anyone help me out?

 

Thanks in advance,

Taco.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050630/ce4a4450/attachment-0001.html
From jimmy at cs.cofc.edu  Wed Jun 29 19:22:16 2005
From: jimmy at cs.cofc.edu (James Wilkinson)
Date: Wed Jun 29 19:22:17 2005
Subject: [antlr-interest] newbie teething problem(s)
Message-ID: <a06210200bee90448c6dc@[153.9.17.137]>

I've been working my way through "An Introduction to ANTLR" and had a 
couple of things not work as expected:

1. In the very first example, I don't get the output shown in the 
document. I think that it's because the parser has been told to 
ignore newlines in the grammar. I type in an expression, hit the 
return key, and don't get any output at all. I think it's still 
waiting for EOF and isn't ever going to get it.

No big deal. I can redirect stuff in from a file and get the expected output.

2. When I got to the AST construction section, I made the changes to 
the grammar and the Main program and got a null pointer exception. 
Sure enough, parser.getAST() returns a null pointer. Now I'm totally 
derailed.

Can somebody give me an idea of what to try now?

thanks
-- 
-------------------------------------------------------------
Jimmy Wilkinson            | Professor of Computer Science
jimmy@cs.CofC.edu          | The College of Charleston
(843) 953-8160             | Charleston      SC        29424
http://www.cs.cofc.edu/~jimmy

If there is one word to describe me,
that word would have to be "profectionist".
Any form of incompitence is an athema to me.
Metathesis??? Don't ax me.
Just between you and I, the grammar used by Americans are getting worse.
It just ceases to amaze me how that could be the case, but mostly I 
could care less.
From chris at lotuscat.com  Wed Jun 29 21:48:35 2005
From: chris at lotuscat.com (Chris Black)
Date: Wed Jun 29 21:10:31 2005
Subject: [antlr-interest] newbie teething problem(s)
In-Reply-To: <a06210200bee90448c6dc@[153.9.17.137]>
References: <a06210200bee90448c6dc@[153.9.17.137]>
Message-ID: <42C379A3.20109@lotuscat.com>

James Wilkinson wrote:

> I've been working my way through "An Introduction to ANTLR" and had a 
> couple of things not work as expected:
> [stuff deleted]
> 2. When I got to the AST construction section, I made the changes to 
> the grammar and the Main program and got a null pointer exception. 
> Sure enough, parser.getAST() returns a null pointer. Now I'm totally 
> derailed.
>
> Can somebody give me an idea of what to try now?

I don't know the particular examples you speak of, but for getAST to 
work you need to have an options section that includes buildAST=true; in 
your parser.

Hope that helps,
Chris
From craig at palantir.co.za  Wed Jun 29 23:56:46 2005
From: craig at palantir.co.za (Craig Main)
Date: Thu Jun 30 00:03:03 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <42C31BD7.7040502@gmail.com>
Message-ID: <20050630070259.8B662DCC21@www.antlr.org>

Hi,

The problem has nothing to do with the type of brace used. I was trying both

I have tried both '(' and '[' because the tree output uses '(' and ')' and I
wanted to see what was what.

If I try and generate with -traceTreeParser, I get unresolved symbols
everywhere because currentAST does not exist.

The grammar is quite simple.
It boils down to the following simple rules that I cannot seem to match. (I
have been at this for three days, and I am tearing my fricking hair out).

The try output, which I have printed below shows 'func' under ELIST.

I have enclosed all the combinations I have tried so far to get it working.

With the following input.
FRED = 100;
TEST = 10 + 10;
ITEM = TEST + 10;
TEMP = 4 + func[10+1,2];

I get the following output.
[SimpleAppConfig]: term
[SimpleAppConfig]: FRED = 100
[SimpleAppConfig]: TEST = 20
[SimpleAppConfig]: ITEM = TEST10
<AST>: unexpected AST node: func
[SimpleAppConfig]: TEMP = 4

The node 'func' is not recognised by the tree grammar, and I cannot figure
out why. 

I have printed the tree, which looks like this.
( RULESET ( = FRED 100 ) ( = TEST ( + 10 10 ) ) ( = ITEM ( + TEST 10 ) ) ( =
TE
MP ( + 4 ( func ( ELIST ( + 10 1 ) 2 ) ) ) ) )

ELIST appears in the tree, but METHOD_CALL does not.
Why does it not appear in the tree? Perhaps that is the problem?

Func  appears in the tree, but not METHOD_CALL.

expression
returns [object result]            {result = null;object l,r;}
                                 : #(PLUS l=term r=term) {result=Add(l,r);}
                                 | #(MINUS l=term r=term) 
                                 | #(MULTIPLY l=term r=term) 
                                 | #(DIVIDE l=term r=term)

                                 | #(METHOD_CALL( #(ELIST (expression)*))) 
// also tried                    | #(METHOD_CALL #(ELIST (expression)*))
// also tried 	               | #(ELIST ID)
// also tried                    | #(ELIST (expression)*)
// also tried                    | #(METHOD_CALL ID)
// also tried                    | #(METHOD_CALL ID #(ELIST (expression)*))
// I think I have tried other
// combinations over the last three days too.
                                 | result=term {log.Info("term");}
                                 ;



Here is the parser, which should probably put METHOD_CALL into the tree
somewhere?

rules                   : (statement)* 
                          {#rules = #([RULESET, "RULESET"], #rules);}
                          EOF!
                        ;
statement               : assignment_statement SEMI!
                        ;
assignment_statement    : id:ID ASSIGN^ expression
                        ;
expression              : term ((PLUS^|MINUS^) term)*
                        ;
term                    : factor ((MULTIPLY^|DIVIDE^) factor)*
                        ;
factor                  : value
                        ;
value                   : (ID LPAREN) => function
                        | literal
                        ;
function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
arguments RPAREN!
                        ;
arguments               : (expression (COMMA! expression)*)?
                          {#arguments = #(#[ELIST,"ELIST"], arguments);}
                        ;

literal                 : id:ID^
                        | fl:FLOAT^
                        ;

-----Original Message-----
From: Ric Klaren [mailto:ric.klaren@gmail.com] 
Sent: 30 June 2005 12:08 AM
To: Craig Main
Cc: 'ANTLR Interest'
Subject: Re: [antlr-interest] Function Call,

Craig Main wrote:
> Hi,
> 
> I am *still* struggling.
> What am I missing here?
> 
> I have tried the following rule.
> #(METHOD_CALL( #(ELIST (expression)*))) {log.Info("Method Call");}
> 
> I also tried to match just
> #(ELIST ( expression )* ) {log.Info("ELIST");}
> 
> It also doesn't match. The log output is never produced.
> 
> It still doesn't match.
> The output is as follows.
> 
> rules.g:33:60: warning:Rule 'expression' returns a value
> RuleLexer.cs(108,12): warning CS0219: The variable '_token' is assigned
but
> its value is never used
> 
> Tree Printout, trying to match TEMP = 4 + func[10+1,2];

So the input uses '[' and ']' as function argument grouping?

 > value                   : (ID LPAREN) => function
 >                         | literal
 >                         ;

Is your LPAREN a '(' or a '[' ? I suspect that the treeparser entered 
the literal rule in stead of the function one.

In case of doubt generate the treeparser with the -traceTreeParser and 
meditate on the output of that. This makes it really hard to see where 
the parser takes a wrong turn... The various tracing options to antlr 
for the generated lexers/parsers/treeparsers are some of your best friends.

Cheers,

Ric


From sanvermert at yahoo.com  Thu Jun 30 01:20:42 2005
From: sanvermert at yahoo.com (Mert Sanver)
Date: Thu Jun 30 01:27:27 2005
Subject: [antlr-interest] RE: Antlr 2.7.5 & VC++ 6.0
Message-ID: <20050630082042.76106.qmail@web51810.mail.yahoo.com>


Ric:

Thank you for your answer. I did not build the library. I just tried to use the antlr.lib distributed with the antlr package: antlr/275/lib/antlr.lib. 

Do I need to build the library from the source using VC++ 6.0 ? And if so, can you please help us how to do that build ? 

Best Regards,

Mert


>How did you build the support library (configure build or manually 
>created project)? Are you building/linking your project with the same 
>options (for as far as they're relevant?)
>
>No antlr dll I hope?
>
>Cheers,
>
>Ric


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050630/220d7d5d/attachment.html
From gt54-antlr at cyconix.com  Thu Jun 30 01:42:33 2005
From: gt54-antlr at cyconix.com (Paul Johnson)
Date: Thu Jun 30 01:42:41 2005
Subject: [antlr-interest] C++ library code reference counting classes
Message-ID: <42C3B079.20509@cyconix.com>

I'm working my way through the C++ library code, and I have a couple of 
questions (by the way, who wrote this code? Is it 'new', or was it 
translated from a Java source?)

There are at least 3 reference counting classes (RefCount<>, 
ASTRefCount<>, and ASTRef). Is there any particular reason for this, or 
is it just historical? Is there also any reason not to replace the whole 
lot with the Boost/TRI smart pointer classes? This would clean up the 
code a lot.

Thanks

Paul

From ric.klaren at gmail.com  Thu Jun 30 01:49:01 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Jun 30 01:49:05 2005
Subject: [antlr-interest] RE: Antlr 2.7.5 & VC++ 6.0
In-Reply-To: <20050630082042.76106.qmail@web51810.mail.yahoo.com>
References: <20050630082042.76106.qmail@web51810.mail.yahoo.com>
Message-ID: <bc607a4e05063001491ea902e6@mail.gmail.com>

On 6/30/05, Mert Sanver <sanvermert@yahoo.com> wrote:
> Thank you for your answer. I did not build the library. I just tried to use
> the antlr.lib distributed with the antlr package: antlr/275/lib/antlr.lib. 

Hmm didn't know there was a binary in the distribution. If there is
it's probably for version 7.

> Do I need to build the library from the source using VC++ 6.0 ? And if so,
> can you please help us how to do that build ? 

Instructions are in lib/cpp/README. Make sure to make a clean build
e.g. have no old objects around.

Cheers,

Ric
From ric.klaren at gmail.com  Thu Jun 30 01:59:24 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Jun 30 02:05:43 2005
Subject: [antlr-interest] C++ library code reference counting classes
In-Reply-To: <42C3B079.20509@cyconix.com>
References: <42C3B079.20509@cyconix.com>
Message-ID: <bc607a4e0506300159ccb8b52@mail.gmail.com>

On 6/30/05, Paul Johnson <gt54-antlr@cyconix.com> wrote:
> I'm working my way through the C++ library code, and I have a couple of
> questions (by the way, who wrote this code? Is it 'new', or was it
> translated from a Java source?)

AFAIK it was very direct java port. E.g. many java-isms.

> There are at least 3 reference counting classes (RefCount<>,
> ASTRefCount<>, and ASTRef). Is there any particular reason for this, or
> is it just historical? 

Part historical, part necessity to accomodate the codegenerator. The
AST stuff requires some extra functionality over the standard
refcounter supplied. (for conversions/casting)

Before 2.7.5 I worked on replacing the lot with a single
implementation but due to lack of time I was not able to make the
codegenerator compatible with the new refcounter.

>Is there also any reason not to replace the whole
> lot with the Boost/TRI smart pointer classes? This would clean up the
> code a lot.

I don't want boost dependency for the support lib. When the boost
stuff gets integrated into the standard (I think there were some plans
for it or parts thereof) and if enough compilers support it then it
may be an option. Although if i'm not mistaken the boost smart
pointers will require extensive modifcation to the codegenerator to
make it work for all currently supported things (heterogeneous AST's).
My guess is that antlr 2 will not see that modification.

Antlr 3 will have a support library made from scratch C++ style.

Cheers,

Ric
From ric.klaren at gmail.com  Thu Jun 30 02:31:34 2005
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu Jun 30 02:31:36 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <42c39924.517e76a7.4137.ffff901bSMTPIN_ADDED@mx.gmail.com>
References: <42C31BD7.7040502@gmail.com>
	<42c39924.517e76a7.4137.ffff901bSMTPIN_ADDED@mx.gmail.com>
Message-ID: <bc607a4e05063002313a6aaade@mail.gmail.com>

On 6/30/05, Craig Main <craig@palantir.co.za> wrote:
> The problem has nothing to do with the type of brace used. I was trying both
> 
> I have tried both '(' and '[' because the tree output uses '(' and ')' and I
> wanted to see what was what.

Make very sure that you made a clean built of your project. And no
stale xxxtokentypes.txt is around. Observe that you have the right
build order for lexer, parser, treeparser and they all have the same
idea over which token is what. (manually check the xxtokentypes.txt
files) verify importVocab/exportVocab use. Also make sure you have no
typo's in token names antlr gives no warnings if you make a typo it
just silently adds a token!

> If I try and generate with -traceTreeParser, I get unresolved symbols
> everywhere because currentAST does not exist.

That has to be a bug. Which antlr version are you using?

> The grammar is quite simple.
> It boils down to the following simple rules that I cannot seem to match. (I
> have been at this for three days, and I am tearing my fricking hair out).
> 
> The try output, which I have printed below shows 'func' under ELIST.
> 
> I have enclosed all the combinations I have tried so far to get it working.
> 
> With the following input.
> FRED = 100;
> TEST = 10 + 10;
> ITEM = TEST + 10;
> TEMP = 4 + func[10+1,2];
> 

> The node 'func' is not recognised by the tree grammar, and I cannot figure
> out why.

If the -traceTreeparser does not work at least add a print to the top
of each treeparser rule in the init section:

rule { System.out.println("rulename"); }:    .... ;

That way you know where the treeparser takes a wrong turn. Or trace it
in a debugger.

> I have printed the tree, which looks like this.
> ( RULESET ( = FRED 100 ) ( = TEST ( + 10 10 ) ) ( = ITEM ( + TEST 10 ) ) ( =
> TE
> MP ( + 4 ( func ( ELIST ( + 10 1 ) 2 ) ) ) ) )
> 
> ELIST appears in the tree, but METHOD_CALL does not.
> Why does it not appear in the tree? Perhaps that is the problem?

The rule that builds the tree:

> function                : id:ID^ {#id.setType(METHOD_CALL);} LPAREN!
> arguments RPAREN!

> arguments               : (expression (COMMA! expression)*)?
>                           {#arguments = #(#[ELIST,"ELIST"], arguments);}

> Func  appears in the tree, but not METHOD_CALL.

You see the correct behaviour: You only do a setType no setText. The
supplied printers only prints the getText value. So I suspect that
underneath the func is a method_Call type.

<Aside note>

> arguments               : (expression (COMMA! expression)*)?
>                           {#arguments = #(#[ELIST,"ELIST"], arguments);}

This is safer written as:

arguments               : (expression (COMMA! expression)*)?
                          {#arguments = #(#[ELIST,"ELIST"], #arguments);}

or as:

arguments               : (expression (COMMA! expression)*)?
                          {## = #(#[ELIST,"ELIST"], ## );}

That you can address arguments directly is an artifact of the codegenerator.
</Aside note>

> expression
> returns [object result]            {result = null;object l,r;}
>                                  : #(PLUS l=term r=term) {result=Add(l,r);}
>                                  | #(MINUS l=term r=term)
>                                  | #(MULTIPLY l=term r=term)
>                                  | #(DIVIDE l=term r=term)
> 
>                                  | #(METHOD_CALL( #(ELIST (expression)*)))

> // also tried                    | #(METHOD_CALL #(ELIST (expression)*))

I would suspect that this one should work.... I'm betting on a mistake
with build order or vocab im/export or a typo.

If you want some example stuff: the grammar for MoDeST available at:

http://fmt.ewi.utwente.nl/tools/motor/?section=download

Has a working example of a similar language + treewalkers. The parser
is pretty ugly (tried to do too much at once) but should give an
example of how to build a tree (uses more imaginary tokens to tag
things) and how to walk. The treewalkers are in the backend/mobius
subdir.

Cheers,

Ric
From craig at palantir.co.za  Thu Jun 30 04:41:23 2005
From: craig at palantir.co.za (Craig Main)
Date: Thu Jun 30 04:47:56 2005
Subject: [antlr-interest] Function Call,
In-Reply-To: <bc607a4e05063002313a6aaade@mail.gmail.com>
Message-ID: <20050630114751.281F8DCC39@www.antlr.org>


Finally, I have it.

>> If I try and generate with -traceTreeParser, I get unresolved symbols
>> everywhere because currentAST does not exist.

>>> That has to be a bug. Which antlr version are you using?
I am using 2.7.5, maybe it is a bug. I am generating C#

> If the -traceTreeparser does not work at least add a print to the top
> of each treeparser rule in the init section:

> rule { System.out.println("rulename"); }:    .... ;

I have done this, and I get the following:
[SimpleAppConfig]: Executing Rule: statement
[SimpleAppConfig]: Executing Rule: expression
[SimpleAppConfig]: Executing Rule: term
[SimpleAppConfig]: Executing Rule: literal
[SimpleAppConfig]: Executing Rule: term
[SimpleAppConfig]: Executing Rule: literal
<AST>: unexpected AST node: func
[SimpleAppConfig]: TEMP = 4

It is taking a wrong turn to literal instead of matching the function.
I changed the grammar and moved the method call from expression down to
term, and now it works.

#(METHOD_CALL #(ELIST (expression)*)) {log.Info("Method Call");}

from the expression to the term.

term
returns [object result]            
{log.Info("Executing Rule: term"); result = null;}

     : result=literal
     | #(METHOD_CALL #(ELIST (expression)*)) {log.Info("Method Call");}
     ;

This now works. It seems that the match for the method call was too high in
the tree?

I am trying to figure out why now?
I am not convinced of my understanding of this, but it does feel right
because it matches at that level in the parser as well.

Regards
Craig


From stefan at amiq.ro  Thu Jun 30 08:21:52 2005
From: stefan at amiq.ro (stefan)
Date: Thu Jun 30 08:20:27 2005
Subject: [antlr-interest] ANTLR 3.0ea4 released
In-Reply-To: <757BB2A4-7FC2-4D73-8EED-97CD360848B3@cs.usfca.edu>
References: <757BB2A4-7FC2-4D73-8EED-97CD360848B3@cs.usfca.edu>
Message-ID: <200506301821.52756.stefan@amiq.ro>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

     With respect to stringtemplate I could give you a hand :)....if you need 
it of course.

Stefan.
On Wednesday 29 June 2005 21:52, Terence Parr wrote:
> Howdy!
>
> Well, I just made my (artificial) end-of-June deadline for tree
> parsing. :)  Damn thing actually seems to work.  Note that anything
> other than perfect input grammars tends to make ANTLR puke.  I'll
> worry about bad-input checking later when I rewrite v3 in v3. :)
>
> So, ANTLR v3 early access 4 marks the completion of the major
> components: lexing, parsing, tree construction, and tree parsing.
> Naturally they are not polished, but the core functionality seems to
> be there.  ANTLR can build or parse trees of any type (indeed it
> assumes your node type is Object).
>
> http://www.antlr.org/download/antlr-3.0ea4.tar.gz
>
> This version requires yet another update to the StringTemplate
> library (update is included in lib dir).  Expect ST release in July
> before my trip to Asia.
>
> I have verified the examples work with 3.0ea4 and I have added a nice
> example of tree construction and tree parsing: simplecTreeParser.  See
>
> http://www.antlr.org/download/examples-v3.tar.gz
>
> Also, please see:
>
> org/antlr/test/TestAutoAST.java
> org/antlr/test/TestRewriteAST.java
>
> for a bunch of unit tests that illustrate what is going on in terms
> of tree parsing.
>
> Also, as I mentioned for 3.0ea3, I think i have broken the ANTLRWorks
> build/debug feature.  Jean is back soon from vacation, however.  He
> is giving a lecture at Stanford on ANTLRWorks in July so I'm guessing
> he will work hard on it before then. ;)
>
> My plan is to fix bugs and perhaps do some tweaks on ANTLR v3 over
> the summer, but I will focus on StringTemplate in July as well as
> writing my lectures for Asia.  In August I will begin writing an
> ANTLR v3 book and a v3 summary paper for the Int'l conference on
> compiler construction (Vienna 2006).  I will then try to add more
> features to v3 and clean it up in time for the ANTLR2005 workshop at
> the end of October.  After that I will continue working on the book
> and so on as I will teach my grad languages class Spring 2006 with
> the book draft.  Also at some point I want to build a quick Java 1.5
> grammar from the language spec just to see how easy that is with LL
> (*) parsing. :)
>
> Have fun!
>
> Terence
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFCxA4QmhUC+mWm79QRAqBmAKCLypcAAAKstre9gN70Go+/a/DhpgCgld8h
qvS9T2Fm3BgOoonJNpyZ6Cw=
=xAEU
-----END PGP SIGNATURE-----
From dewing at apple.com  Thu Jun 30 10:15:48 2005
From: dewing at apple.com (David Ewing)
Date: Thu Jun 30 10:15:56 2005
Subject: [antlr-interest] Java1.5 grammar and enum as identifier and
	not	as a keyword
In-Reply-To: <42C2F218.5030404@gmail.com>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
	<42BF0E6E.4000908@gmx.net> <42BF1A78.2080609@gmail.com>
	<C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>
	<42C2F218.5030404@gmail.com>
Message-ID: <8B20F7DC-7B8A-43D0-95C4-0E667F68A2C0@apple.com>


On Jun 29, 2005, at 1:10 PM, J?rg Rech wrote:

> Hi,
>  maybe I got something wrong here but isn't the lexer called before  
> the recognizer for the methods? So if I enter a method changes to  
> enableEnum have no effect on the lexer?
>
> Or is the lexer just registered and called by the recognizer/parser  
> on demand?

It's called on demand. Another possibility would be to change 'IDENT'  
to '(IDENT | "enum")' in a few key places elsewhere in the grammar  
(e.g. variable declarators, expressions). That might be a tad more  
compatible, but it also might add ambiguities to the grammar. In any  
case, I haven't tried either, but I'd be interested to hear if they  
work.

Dave

> Bye,
> Joerg
>
> David Ewing schrieb:
>
>
>> You might be able to call JavaLexer.enableEnum(false) from an  
>> action  when you enter the recognition of a method, and call   
>> JavaLexer.enableEnum(true) when leaving. A hack, but perhaps a  
>> useful  one. :)
>>
>> Dave
>>
>> On Jun 26, 2005, at 3:13 PM, J?rg Rech wrote:
>>
>>
>>> Michael Studman schrieb:
>>>
>>>
>>>
>>>> If you're not in a position to be able to change the source  
>>>> code  you're parsing and you can guarantee "enum" is not used as  
>>>> a  keyword  then you can call JavaLexer.enableEnum(false) on  
>>>> the  lexer before you pass it into the recogniser.
>>>>
>>>>
>>>
>>> If you mean by "guarantee enum is not used" that I can decide   
>>> wether the class is either 1.4 or 1.5 I fear that this is not   
>>> possible. The only way I currently see is to have two different   
>>> pipelines with lexer, filter, and parser for 1.4 and 1.5 and  
>>> then  parse the class first with 1.5 and if errors occur use the  
>>> 1.4  pipeline.
>>> I haven't tried it yet but it seems feasible (and ugly :-( )
>>>
>>> Thanks for your idea,
>>> Joerg.
>>>
>>
>>
>
>
> -- 
> Joerg Rech
> Computer Scientist        Web:   http://www.joerg-rech.de
> Tel.: (+49|0) 631/10653   email: joerg.rech@gmail.com
>
>

From parrt at cs.usfca.edu  Thu Jun 30 11:15:59 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 30 11:15:12 2005
Subject: [antlr-interest] ANTLR v3: enum as identifier and as a keyword
In-Reply-To: <8B20F7DC-7B8A-43D0-95C4-0E667F68A2C0@apple.com>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
	<42BF0E6E.4000908@gmx.net> <42BF1A78.2080609@gmail.com>
	<C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>
	<42C2F218.5030404@gmail.com>
	<8B20F7DC-7B8A-43D0-95C4-0E667F68A2C0@apple.com>
Message-ID: <121061B8-324D-452F-9A16-DEC51BC11CA3@cs.usfca.edu>


On Jun 30, 2005, at 10:15 AM, David Ewing wrote:
> On Jun 29, 2005, at 1:10 PM, J?rg Rech wrote:
>> Hi,
>>  maybe I got something wrong here but isn't the lexer called  
>> before the recognizer for the methods? So if I enter a method  
>> changes to enableEnum have no effect on the lexer?
>>
>> Or is the lexer just registered and called by the recognizer/ 
>> parser on demand?
>>
>
> It's called on demand. Another possibility would be to change  
> 'IDENT' to '(IDENT | "enum")' in a few key places elsewhere in the  
> grammar (e.g. variable declarators, expressions). That might be a  
> tad more compatible, but it also might add ambiguities to the  
> grammar. In any case, I haven't tried either, but I'd be interested  
> to hear if they work.

Now that hoisted semantic predicates are back in ANTLR, you can do  
this very easily.  I just built a new example (and pushed it to the  
site--examples-v3.tar.gz has been updated).

/** Demonstrates how semantic predicates get hoisted out of the rule in
*  which they are found and used in other decisions.  This grammar  
illustrates
*  how predicates can be used to distinguish between enum as a  
keyword and
*  an ID *dynamically*. :)
* Run "java org.antlr.Tool -dfa t.g" to generate DOT (graphviz)  
files.  See
* the T_dec-1.dot file to see the predicates in action.
*/
grammar T;

{
/** With this true, enum is seen as a keyword.  False, it's an  
identifier */
boolean enableEnum = false;
}

stat: identifier    {System.out.println("enum is an ID");}
     | enumAsKeyword {System.out.println("enum is a keyword");}
     ;

identifier
     : ID
     | enumAsID
     ;

enumAsKeyword : {enableEnum}? "enum" ;

enumAsID : {!enableEnum}? "enum" ;
...

The rule stat decision sees ID or ID syntactically, but with  
predicates, the decision looks like this:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pastedGraphic.pdf
Type: application/pdf
Size: 14150 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20050630/c86da645/pastedGraphic-0001.pdf
-------------- next part --------------

The =>alt notation indicates which alt will be predicted.  The  
generated decision looks like:

             int LA1_0 = input.LA(1);
             if ( LA1_0==ID ) {
                 alt1=1;
             }
             else if ( LA1_0==7 ) {
                 int LA1_2 = input.LA(2);
                 if ( evalPredicate(enableEnum,"enableEnum") ) {
                     alt1=2;
                 }
                 else if ( evalPredicate(!enableEnum,"!enableEnum") ) {
                     alt1=1;
                 }
                 else {
                     ...error...
                 }
             }
             else
                    ...error...

Pretty slick, eh?  Hooray!

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From monty at codetransform.com  Thu Jun 30 08:32:21 2005
From: monty at codetransform.com (Monty Zukowski)
Date: Thu Jun 30 11:32:51 2005
Subject: [antlr-interest] ANTLR v3: enum as identifier and as a keyword
In-Reply-To: <121061B8-324D-452F-9A16-DEC51BC11CA3@cs.usfca.edu>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>	<42BF0E6E.4000908@gmx.net>
	<42BF1A78.2080609@gmail.com>	<C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>	<42C2F218.5030404@gmail.com>	<8B20F7DC-7B8A-43D0-95C4-0E667F68A2C0@apple.com>
	<121061B8-324D-452F-9A16-DEC51BC11CA3@cs.usfca.edu>
Message-ID: <42C41085.9060304@codetransform.com>

Terence Parr wrote:

> Pretty slick, eh?  Hooray!
> 

Woohoo!  Finally it will be easy to parse BASIC.  My arcane knowledge of
ANTLR internals is growing obsolete weekly, and I love it!

Monty
From glindholm at yahoo.com  Thu Jun 30 13:05:04 2005
From: glindholm at yahoo.com (Greg Lindholm)
Date: Thu Jun 30 13:05:09 2005
Subject: [antlr-interest] Multiple versions of Antlr playing nice together?
Message-ID: <20050630200504.66576.qmail@web52304.mail.yahoo.com>

I'm seeing more and more software packages use Antlr these days.
This is great for Antlr, great product, great validation for the people
behind Antlr.

However.... it does raise compatiblity issues when you want to use more
then one package that each include a different version of the Antlr
jar.

Are you doing anything to ensure that different (incompatable) version
of antlr can be used side-by-side in a project? I.e. Use different
package names?

An example I just encountered is Struts 1.2.7 comes with Antlr 2.7.2
and Hibernate 3.0.5 comes with antlr-2.7.5H3.jar.
In this project I'm not doing any development with antlr I'm just a
"user" of Struts and Hibernate. And as a user I don't know if there are
any dependencies on a particular version of antlr or even if these two
are compatible.
If I use the later release 2.7.5H3 will it break something is Struts? 
(Rethorical question don't expect anyone here to know, just making a
point.)

What about when Antlr 3.x come into widespread use? Will it be able to
be used in the same application with Antlr 2.x?

Thanks.



		
____________________________________________________ 
Yahoo! Sports 
Rekindle the Rivalries. Sign up for Fantasy Football 
http://football.fantasysports.yahoo.com
From parrt at cs.usfca.edu  Thu Jun 30 13:30:31 2005
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu Jun 30 13:29:43 2005
Subject: [antlr-interest] Multiple versions of Antlr playing nice together?
In-Reply-To: <20050630200504.66576.qmail@web52304.mail.yahoo.com>
References: <20050630200504.66576.qmail@web52304.mail.yahoo.com>
Message-ID: <4E188C47-C3CC-440E-AC63-B7F83561AC96@cs.usfca.edu>


On Jun 30, 2005, at 1:05 PM, Greg Lindholm wrote:

> I'm seeing more and more software packages use Antlr these days.
> This is great for Antlr, great product, great validation for the  
> people
> behind Antlr.

Hooray for the good guys!

> However.... it does raise compatiblity issues when you want to use  
> more
> then one package that each include a different version of the Antlr
> jar.

yes, almost like the DLL version issue on PCs.

> Are you doing anything to ensure that different (incompatable) version
> of antlr can be used side-by-side in a project? I.e. Use different
> package names?

I can't really do anything...the more common situation is to get an  
updated version and expect your code to still compile.   
antlr275.Token would be annoying, but is the only solution if you  
must have multiple version :(

> What about when Antlr 3.x come into widespread use? Will it be able to
> be used in the same application with Antlr 2.x?

Fortunately here we have org.antlr.* now instead of antlr.* so it  
works fine.  Indeed 3 is written in 2.7.5 :)

Ter
--
CS Professor & Grad Director, University of San Francisco
Creator, ANTLR Parser Generator, http://www.antlr.org
Cofounder, http://www.jguru.com

From tarunkhanna at gmail.com  Wed Jun 29 11:45:07 2005
From: tarunkhanna at gmail.com (Tarun Khanna)
Date: Thu Jun 30 13:42:37 2005
Subject: [antlr-interest] Builiding Translators by Hand Source
Message-ID: <dbcf4c2c050629114569b9eb39@mail.gmail.com>

Hi,

I just finished reading the Building Translators chapter from the online 
book (incomplete though).

Is the source code for the lexer/parser available somewhere?

Thanks
Tarun Khanna
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050629/4f595a4a/attachment.html
From tarunkhanna at gmail.com  Thu Jun 30 14:02:03 2005
From: tarunkhanna at gmail.com (Tarun Khanna)
Date: Thu Jun 30 14:02:06 2005
Subject: [antlr-interest] ANTLR v3: enum as identifier and as a keyword
In-Reply-To: <121061B8-324D-452F-9A16-DEC51BC11CA3@cs.usfca.edu>
References: <20050626184707.41307.qmail@web30806.mail.mud.yahoo.com>
	<42BF0E6E.4000908@gmx.net> <42BF1A78.2080609@gmail.com>
	<C820AFEA-45C9-4514-BB6C-AC548D516111@apple.com>
	<42C2F218.5030404@gmail.com>
	<8B20F7DC-7B8A-43D0-95C4-0E667F68A2C0@apple.com>
	<121061B8-324D-452F-9A16-DEC51BC11CA3@cs.usfca.edu>
Message-ID: <dbcf4c2c05063014023b91151b@mail.gmail.com>

Now is there a good way of differentiating between identifiers and type 
names/keywords in general? For example in a language like C/C++ 

A function definition can begin with a type name (such as int). 
------------> int func(int a);
But any expression can also begin with an identifier. 
---------------------------> sum += var1;

Syntactic Predicates is one way of doing it, but it doesn't help in the 
following rule for example.

prog: (declarations)* (expressions)* EOF

Now if the FIRST sets of both declarations and expressions are the same, the 
parser would never know, when to stop looking at declarations and when to 
start looking for expressions. 
I keep getting the all so famous Non Determinism warnings between alt1 and 
the exit block. I know why I am getting the warnings, but I can't think of a 
way to remove them.

What would be a good way to resolve such an ambiguity?
Does it make sense to define tokens in the lexer for all the typeNames, so 
that whenever a lexer sees a token like int, it returns the associated 
token.

I am new to ANTLR and for the past few days I have been breaking my head in 
both going through the documentation and also looking for a good source of 
help for ANTLR, as currently there seems to be no good guide to using ANTLR. 
All the links on the ANRL.org <http://anrl.org/> website are only good for 
getting started as the section in which they are found points out. The 
Manual itself is either not complete or is not very well organized.

Thanks Tarun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20050630/8927d87e/attachment.html
From evansgr_99 at hotmail.com  Thu Jun 30 18:10:37 2005
From: evansgr_99 at hotmail.com (Gary Evans)
Date: Thu Jun 30 18:10:40 2005
Subject: [antlr-interest] Newbie Question  - does antlr.py work?
Message-ID: <BAY102-F1C7018B692A4A9780246FEAE20@phx.gbl>

I am trying to use Antlr with Python.  I have a Windoze box that does not 
have Make or any compilers.  I don't have Java or C#, nor do I wish to use 
them.

I used a .msi file to install a binary on my system.  In the lib directory 
is a file called antlr.py, which looks like it should be the program.  But I 
cannot seem to use it.  Can I create my parser files using:

>>>python antlr.py test.g
...which should spit out the parser, lexer, etc.?

If so, what is the secret to doing this?  It seems that if I build from 
source on my computer, something like that may work, but as I said, I cannot 
do that.  I don't understand the Python examples because it looks like you 
need Make in order to use them.

If this is not possible, then what exactly is the purpose of the file 
antlr.py?

Thanks,
gevans


From open.zone at virgin.net  Thu Jun 30 19:54:37 2005
From: open.zone at virgin.net (Micheal J)
Date: Thu Jun 30 19:40:38 2005
Subject: [antlr-interest] Newbie Question  - does antlr.py work?
In-Reply-To: <BAY102-F1C7018B692A4A9780246FEAE20@phx.gbl>
Message-ID: <000401c57de8$3942c910$6402a8c0@hercules>

Gary,

<SNIP>
 
> I used a .msi file to install a binary on my system.  In the 
> lib directory 
> is a file called antlr.py, which looks like it should be the 
> program.  But I 
> cannot seem to use it.  Can I create my parser files using:
> 
> >>>python antlr.py test.g
> ...which should spit out the parser, lexer, etc.?

No. The ANTLR tool that generates lexers/parsers/treeparsers from a grammar
file is written in Java. AFAICT, it has not been re-implemented in Python
(nor does it need to be).

You will either need to install java or, obtain and use one of the many
binary versions of the ANTLR tool that run without java like cantlr (created
with gcj I believe) or the .NET version created with MS J#.

These should be available on the website somewhere.

<SNIP>

> If this is not possible, then what exactly is the purpose of the file 
> antlr.py?

I'm guessing it's part of the runtime support library needed for ANTLR
lexers/parsers/treeparser written in python.


Cheers,

Micheal

From rhill03 at eds.com  Thu Jun 30 23:38:36 2005
From: rhill03 at eds.com (Hill, Robert)
Date: Thu Jun 30 23:42:04 2005
Subject: [antlr-interest] Newbie Question  - does antlr.py work?
Message-ID: <2E909902FD3A03419E3A905908AE3DD4EC2954@UKNSM201.emea.corp.eds.com>

Hehe neat trick, developing without installing devtools ;)
I think you're misunderstanding , Antlr can generate python as output -
it isn't written in python. When people say Antlr c#/python/java,
they're talking about the code it generates not the language Antlr is
written in.
if you don't want to install the java runtime, you can download the
precompiled win32 binaries which should grant you your wish of avoiding
c# & java ;) IIRC there's a link to the binaries somewhere on the Antlr
home page.


Cheers,
/2ob



Rob Hill
F UKNMSC		'	+44 (0) 114 291 1928
Innovation Centre		6	+44 (0) 114 291 2000
217 Portobello		*	+44 (0) 791 732 1227
Sheffield			*	rhill03@eds.com
S1 4DP



-----Original Message-----
From: antlr-interest-bounces@antlr.org
[mailto:antlr-interest-bounces@antlr.org] 
Sent: 01 July 2005 02:11
To: antlr-interest@antlr.org
Subject: [antlr-interest] Newbie Question - does antlr.py work?

I am trying to use Antlr with Python.  I have a Windoze box that does
not have Make or any compilers.  I don't have Java or C#, nor do I wish
to use them.

I used a .msi file to install a binary on my system.  In the lib
directory is a file called antlr.py, which looks like it should be the
program.  But I cannot seem to use it.  Can I create my parser files
using:

>>>python antlr.py test.g
...which should spit out the parser, lexer, etc.?

If so, what is the secret to doing this?  It seems that if I build from
source on my computer, something like that may work, but as I said, I
cannot do that.  I don't understand the Python examples because it looks
like you need Make in order to use them.

If this is not possible, then what exactly is the purpose of the file
antlr.py?

Thanks,
gevans


