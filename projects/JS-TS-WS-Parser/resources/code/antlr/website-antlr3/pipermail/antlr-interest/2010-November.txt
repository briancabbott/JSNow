From mattcunning at hotmail.com  Mon Nov  1 07:45:49 2010
From: mattcunning at hotmail.com (matthew cunningham)
Date: Mon, 1 Nov 2010 14:45:49 +0000
Subject: [antlr-interest] Handling variables?
Message-ID: <BLU142-W10BE79237919E972B0B2B2B5480@phx.gbl>


I'm wondering about an implementation detail.
I'm using ANTLR with C# (.NET 3.5) and I'm trying to figure out what's the best course of action for handling my variables.
I'm using a dictionary right now... So I get a variable name and save it's value opposite. Dictionaries are basically 2d arrays with a limit of two columns.
Do you think I should maybe use something else? Mainly because you set the type (currently using integer) opposite your identifier (string right now) and that limits me to saving ints... what about floats, doubles, hex, strings...etc create one for each... using some sort of object that could handle all of them?

- Matthew
 		 	   		  

From Michael.J.Iatauro at nasa.gov  Mon Nov  1 08:05:39 2010
From: Michael.J.Iatauro at nasa.gov (Michael J Iatauro)
Date: Mon, 1 Nov 2010 08:05:39 -0700
Subject: [antlr-interest] C code generation differences on Windows
Message-ID: <4CCED743.9030208@nasa.gov>

Using ANTLR 3.1.3, I'm seeing some odd code generation differences in 
the tree parser between Windows and *nix platforms, specifically having 
to do with token names and IDs, which are causing my tree parser to 
reject all incoming trees.  There are several tokens missing in the 
generated Windows header, and those missing tokens as well as several 
others aren't given strings in the TreeTokenNames array in the C code. 
Even more weirdly, the token that's always expected to be the root is 
given different IDs, even between the parser and the tree parser, which 
is causing the rejection.  Has anybody else seen anything like this, or 
have a sense of what's going on?
Thanks!

~MJI

From ssawkar at aehr.com  Mon Nov  1 10:53:15 2010
From: ssawkar at aehr.com (Sunil Sawkar)
Date: Mon, 1 Nov 2010 10:53:15 -0700
Subject: [antlr-interest] g++ compiler warnings on the generated lexer and
	parser .c files
Message-ID: <201011011053.15176.ssawkar@aehr.com>

Hi,

Is there anyway to get rid of "unused variables"  to eliminate the compiler 
warnings such as:

algoexprLexer.c: In function ?ANTLR3_INT32 
dfa47_sst(algoexprLexer_Ctx_struct*, ANTLR3_BASE_RECOGNIZER_struct*, 
ANTLR3_INT_STREAM_struct*, ANTLR3_CYCLIC_DFA_struct*, ANTLR3_INT32)?:                                                                                                                                                         
algoexprLexer.c:10940: warning: unused variable ?index47_62?                                                                                                           
algoexprLexer.c:10964: warning: unused variable ?index47_170?

algoexprParser.c: In function ?algoexprParser_set_op_return 
set_op(algoexprParser_Ctx_struct*)?:
algoexprParser.c:3478: warning: unused variable ?LA9_1?                                                                                                                
algoexprParser.c: In function ?algoexprParser_algo_vector_return 
algo_vector(algoexprParser_Ctx_struct*)?:
algoexprParser.c:8901: warning: unused variable ?LA47_1?                                                                                                               
algoexprParser.c:8915: warning: unused variable ?LA47_2?

I have checked my grammar file to make sure everything in there is being used. 
Yet I see these warnings. When I look in the generated source, I can see these 
variables being declared but not referenced anywhere.

Any help appreciated..

-Sunil Sawkar

From mike.matera at xilinx.com  Mon Nov  1 10:46:04 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Mon, 1 Nov 2010 10:46:04 -0700
Subject: [antlr-interest] Resolving a First/Follow Conflict in Logo.
Message-ID: <a885a731-ce0e-4146-a8eb-a0dfb9c55174@SG2EHSMHS006.ehs.local>

Hi Everyone,

For kicks I'm writing a parser for the Logo programming language.  Logo 
has an ambiguity in its syntax in that:

  1. Statements are values (Like in C)
  2. Subroutine's arguments are not marked with delimiters

Here's a simplified example of a parser rule for Logo:

statement
   : 'fd' statement
   | 'bk' statement
   | IDENTIFIER statement*
   ;

As you can see, this rule is ambiguous.  Logo parsers must determine how 
many arguments are taken by 'IDENTIFIER' and use that to resolve the 
conflict.  I've brainstormed a couple of solutions for this problem but 
I need help with things that I was unable to figure out.

Here's my first solution:

In the scanner, lookup 'IDENTIFIER' in a table to determine the number 
of arguments it requires, then create a fake token to inform the parser. 
  The rules would look something like this:

statement
   : 'fd' statement
   | 'bk' statement
   | ZERO_ARG IDENTIFIER
   | ONE_ARG IDENTIFIER statement
   | TWO_ARG IDENTIFIER statement statement
   | THREE_ARG IDENTIFIER statement statement statement
   ;

IDENTIFIER
   : ('a' .. 'z')+
   {
      lookup(getText());
      <<INSERT_FAKE_TOKEN>>
   }
   ;

Question: How do I create and insert a fake token in the scanner?

Here's my second solution:

Use a predicate to inform the First/Follow conflict.  I've tried to use 
a semantic predicate to control the match without success.  The 
following is a non-working attempt to show what I mean:

statement
   : 'fd' statement
   | 'bk' statement
   | IDENTIFIER {args=lookup()} (statement {count<args}? {count++})*
   ;

Question: Is it possible to resolve a First/Follow conflict this way in 
ANTLR?  If so, how do I do it?

~~~~

If there's a solution I've missed please let me know, and thanks for 
your time and consideration.

Cheers
./m

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From mike.matera at xilinx.com  Mon Nov  1 11:18:29 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Mon, 1 Nov 2010 11:18:29 -0700
Subject: [antlr-interest] Resolving a First/Follow Conflict in Logo.
In-Reply-To: <a885a731-ce0e-4146-a8eb-a0dfb9c55174@SG2EHSMHS006.ehs.local>
References: <a885a731-ce0e-4146-a8eb-a0dfb9c55174@SG2EHSMHS006.ehs.local>
Message-ID: <5a204bb8-3ada-4fbc-b5b9-767139f69b05@SG2EHSMHS001.ehs.local>

Hi Again,

I think I may have resolved my own issue.  Looking at the code for my 
second solution I saw that I may have put my semantic predicate in the 
wrong place.  This rewrite compiles without a warning:

statement
   : 'fd' statement
   | 'bk' statement
   | IDENTIFIER {need=lookup();} ({count<need}? statement {count++;})*
   ;

It seems that putting the predicate BEFORE the token that causes the 
First/Follow conflict resolves the conflict.  Is this true?  In other 
words if (need<count) then I can always expect a follow?

Cheers
./m


Michael Matera wrote:
> Hi Everyone,
> 
> For kicks I'm writing a parser for the Logo programming language.  Logo 
> has an ambiguity in its syntax in that:
> 
>   1. Statements are values (Like in C)
>   2. Subroutine's arguments are not marked with delimiters
> 
> Here's a simplified example of a parser rule for Logo:
> 
> statement
>    : 'fd' statement
>    | 'bk' statement
>    | IDENTIFIER statement*
>    ;
> 
> As you can see, this rule is ambiguous.  Logo parsers must determine how 
> many arguments are taken by 'IDENTIFIER' and use that to resolve the 
> conflict.  I've brainstormed a couple of solutions for this problem but 
> I need help with things that I was unable to figure out.
> 
> Here's my first solution:
> 
> In the scanner, lookup 'IDENTIFIER' in a table to determine the number 
> of arguments it requires, then create a fake token to inform the parser. 
>   The rules would look something like this:
> 
> statement
>    : 'fd' statement
>    | 'bk' statement
>    | ZERO_ARG IDENTIFIER
>    | ONE_ARG IDENTIFIER statement
>    | TWO_ARG IDENTIFIER statement statement
>    | THREE_ARG IDENTIFIER statement statement statement
>    ;
> 
> IDENTIFIER
>    : ('a' .. 'z')+
>    {
>       lookup(getText());
>       <<INSERT_FAKE_TOKEN>>
>    }
>    ;
> 
> Question: How do I create and insert a fake token in the scanner?
> 
> Here's my second solution:
> 
> Use a predicate to inform the First/Follow conflict.  I've tried to use 
> a semantic predicate to control the match without success.  The 
> following is a non-working attempt to show what I mean:
> 
> statement
>    : 'fd' statement
>    | 'bk' statement
>    | IDENTIFIER {args=lookup()} (statement {count<args}? {count++})*
>    ;
> 
> Question: Is it possible to resolve a First/Follow conflict this way in 
> ANTLR?  If so, how do I do it?
> 
> ~~~~
> 
> If there's a solution I've missed please let me know, and thanks for 
> your time and consideration.
> 
> Cheers
> ./m
> 
> This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From douglasgodfrey at gmail.com  Mon Nov  1 12:10:18 2010
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 1 Nov 2010 15:10:18 -0400
Subject: [antlr-interest] Decision can match input such as ... using
 multiple alternatives / Semantic predicates were present but were hidden by
 actions.
Message-ID: <AANLkTikTN_cM53Fw7hJvp9MzOuOPRwA0GwNUmhjB30kp@mail.gmail.com>

The warning "Semantic predicates were present but were hidden by
actions." is issued without any line# if any rule has a semantic
predicate before the first token and the predicate is preceeded by any
action. In a large grammar this can be very difficult to locate.

This message is also incorrect since the actual problem is that ANTLR
cannot hoist the predicate into a parent rule if there is an
intervening action. This condition is distinct from the other cause of
"Semantic predicates were present but were hidden by actions." where
there are insufficient predicates to disambiguate the grammar. This
case of the "Semantic predicates" message should be changed to
something like "Semantic Predicate on line[nnn] cannot be hoisted due
to a preceeding action."

From amr.muhammad.w at gmail.com  Tue Nov  2 09:16:41 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Tue, 2 Nov 2010 18:16:41 +0200
Subject: [antlr-interest] Code Generation Instruction Ordering / Order of
	Execution of Rules Actions
Message-ID: <AANLkTikugwWWkZS9pFudG2Ha_vDOktv+ngCxBUyknvft@mail.gmail.com>

Hello,

I was wondering if it is possible to execute actions for rules, that calls
other rules, before executing the actions for the rules, that were called.


Let's say I have the following grammar:
---------------------------------------------------------------
block_rule: BLOCK block_name
'{'
    property1_rule

    NEWLINE

    property2_rule

'}'         { // generate block of statements say s3  }  ;

property1_rule: property1= value1 { // generate block of statements say s1 }
;
property2_rule: property2= value2 { // generate block of statements say s2 }
;

block_name: ID;
property1: ID;
value1: ID;
property2: ID;
value2: ID;
---------------------------------------------------------------

I would want the actions for rule block_rule to get executed before the
actions of property1_rule or
property2_rule

I am trying to do sth like:
-----------------------------------------
block_object  block_name;
block_name.property1= value1;
block_name.property2= value2;
-----------------------------------------
but what i get is:
-----------------------------------------
block_name.property1= value1;
block_name.property2= value2;
block_object  block_name;
-----------------------------------------

Just in case it matters, what i am actually doing is using the parser
grammar to generate an AST, and then using a tree grammar to walk the tree.


Thank you for your time :)
Best Regards,

Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From cummings at kjchome.homeip.net  Tue Nov  2 11:37:10 2010
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Tue, 02 Nov 2010 14:37:10 -0400
Subject: [antlr-interest] Code Generation Instruction Ordering / Order
 of	Execution of Rules Actions
In-Reply-To: <AANLkTikugwWWkZS9pFudG2Ha_vDOktv+ngCxBUyknvft@mail.gmail.com>
References: <AANLkTikugwWWkZS9pFudG2Ha_vDOktv+ngCxBUyknvft@mail.gmail.com>
Message-ID: <4CD05A56.9090803@kjchome.homeip.net>

On 11/02/2010 12:16 PM, Amr Muhammad wrote:
> Hello,
> 
> I was wondering if it is possible to execute actions for rules, that calls
> other rules, before executing the actions for the rules, that were called.

If I understand you correctly, yes.  You can put an action block after
any matching token or sub-rule.

> Let's say I have the following grammar:
> ---------------------------------------------------------------
> block_rule: BLOCK block_name
	{ // generate your block name stuff here }
> '{'
>     property1_rule
> 
>     NEWLINE
> 
>     property2_rule
> 
> '}'
	{ // Then any remaining actions can go here (after propert1_rule and
property2_rule have been run }

> property1_rule: property1= value1 { // generate block of statements say s1 }
> ;
> property2_rule: property2= value2 { // generate block of statements say s2 }
> ;
> 
> block_name: ID;
> property1: ID;
> value1: ID;
> property2: ID;
> value2: ID;
> ---------------------------------------------------------------
> 
> I would want the actions for rule block_rule to get executed before the
> actions of property1_rule or
> property2_rule
> 
> I am trying to do sth like:
> -----------------------------------------
> block_object  block_name;
> block_name.property1= value1;
> block_name.property2= value2;
> -----------------------------------------
> but what i get is:
> -----------------------------------------
> block_name.property1= value1;
> block_name.property2= value2;
> block_object  block_name;
> -----------------------------------------

My suggestion should get you what you want.

> Just in case it matters, what i am actually doing is using the parser
> grammar to generate an AST, and then using a tree grammar to walk the tree.

> Thank you for your time :)
> Best Regards,
> 
> Amr Muhammad
> Cairo Univ. Computer Eng. Grad.
> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

Good luck, happy parsing!

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From amr.muhammad.w at gmail.com  Tue Nov  2 12:48:45 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Tue, 2 Nov 2010 21:48:45 +0200
Subject: [antlr-interest] Manual Tree Walking Vs. Tree Grammars
Message-ID: <AANLkTi=n-EaNtsoC4vUsfYUWZ9HLXgjrm97SReP+U8hf@mail.gmail.com>

Hello,

In this post : http://www.antlr.org/pipermail/antlr
-interest/2010-October/039862.html
The following was mentioned:

> Also, remember to only call external Helper methods from your parsers/tree
> walkers. Do not embedded any code other than the calling code and pass the
> whole tree or token pointer. This means your calls won't care what gets done
> by the helper API and the helper API will not care how the parsers decided
> to call it. Anything else is an unmaintainable mess.
>
>
So,
does this imply that it is easier to walk the AST manually rather than
embedding actions in the tree grammar ?

Based on what i have tried till now, it seems that getting the embedded
actions to work, as expected, is not easy. So, I'd like to know if there is
some benefit that I would get out of writing embedded actions in tree
grammars?

Also, there is this post that seems to advocate manual tree walking:
http://www.antlr.org/article/1170602723163/treewalkers.html

So, I'm confused as to whether continue trying to make tree grammars do what
I want, or switch to manual tree walking. Appreciate your guidance...

Thank you for your time :)
Best Regards,

Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From ronburk at gmail.com  Tue Nov  2 13:08:12 2010
From: ronburk at gmail.com (Ron Burk)
Date: Tue, 2 Nov 2010 13:08:12 -0700
Subject: [antlr-interest] Resolving a First/Follow Conflict in Logo.
In-Reply-To: <a885a731-ce0e-4146-a8eb-a0dfb9c55174@SG2EHSMHS006.ehs.local>
References: <a885a731-ce0e-4146-a8eb-a0dfb9c55174@SG2EHSMHS006.ehs.local>
Message-ID: <AANLkTinz8MtR9wr5EenYE-mshinNaHnFTTBu9Bk-tf_S@mail.gmail.com>

>
>
>
Hmmm. Seems like Logo (like Forth) was specifically designed
to not need much in the way of a parser at all (or as a friend used to
say, "Forth uses the programmer as its parser!").  Ignoring practicality,
if I were going to aim the giant cannon of a parser generator like ANTLR
at the gnat of parsing some Logo dialect (what the heck, probably
somebody out there is using it to parse Lisp :-), with what little I
know of Logo I might maintain my own stack for the trivial task of
parsing the part of  the language that isn't proc definition or
control flow.

Side note: presumably need/count in your proposed solution
need to be stackable to work correctly, since you're using
them in a recursive rule...

For processing the basic actions of LOGO, I might just
have the grammar look for any number of operators/operands
and in the action code put those on a stack. Seems like it
would be very easy (it's all prefix operator syntax AFAICT
in a typical LOGO dialect) to just stack'em up, popping whenever
the most recent operator has acquired its requisite number
of operands. This would likely put you in a position to give
better error messages as well,  given how little structure is
in the grammar of this language.

IMHO, which could be completely wrong. :-)

From pat at pat.net  Tue Nov  2 15:59:31 2010
From: pat at pat.net (Patrick Niemeyer)
Date: Tue, 2 Nov 2010 17:59:31 -0500
Subject: [antlr-interest] Manual Tree Walking Vs. Tree Grammars
In-Reply-To: <AANLkTi=n-EaNtsoC4vUsfYUWZ9HLXgjrm97SReP+U8hf@mail.gmail.com>
References: <AANLkTi=n-EaNtsoC4vUsfYUWZ9HLXgjrm97SReP+U8hf@mail.gmail.com>
Message-ID: <BBF28BE8-E101-4779-9925-E897E3CD575E@pat.net>


I had been building up the experience to post something thoughtful on this topic, but I'll just chime in now :)

First let me say that I'm very impressed with ANTLR and it is making my job a lot easier these days.

I recently had to start a project with a very large grammar and I looked at the tree grammar pattern / capability that is presented in  the ANTLR book.  While I can see that it is a fairly elegant solution from a theoretical perspective, it seems like it would be awkward to maintain in real world code.  The first problem that I see is that I'd have two very large grammar files that I'd have to keep in sync.  The second problem is that even with a helper facade I'd still be creating a third layer that essentially ties together all of the code...  The solution to this seems to me to be to go with heterogeneous node types, which can encapsulate knowledge of the language in a nice object oriented way.

I was happy to see that there is support in ANTLR for specifying heterogeneous node types in the grammar directly, although I almost missed it because it seems to have been added after the ANTLR book was written (it's added as a footnote).  I have found that the support is a little preliminary and using them basically means that you can't use the antlrworks debugger, at all etc.   I'm sure that situation will improve.  (I will volunteer to help if I can).

Beyond that my only other request is that I'd like to see a little more solidification of the API for node types and tokens in general.  If you are walking a node stream and want to navigate things like UP/DOWN and error nodes you have to resort to some shenanigans like comparing strings ("UP"/"DOWN", knowing that node type 0 is reserved as "<invalid>", etc.). 

I'd be open to being proved wrong on the tree grammar front... if anyone has examples of how it simplified their code, etc.


Pat Niemeyer


On Nov 2, 2010, at 2:48 PM, Amr Muhammad wrote:

> Hello,
> 
> In this post : http://www.antlr.org/pipermail/antlr
> -interest/2010-October/039862.html
> The following was mentioned:
> 
>> Also, remember to only call external Helper methods from your parsers/tree
>> walkers. Do not embedded any code other than the calling code and pass the
>> whole tree or token pointer. This means your calls won't care what gets done
>> by the helper API and the helper API will not care how the parsers decided
>> to call it. Anything else is an unmaintainable mess.
>> 
>> 
> So,
> does this imply that it is easier to walk the AST manually rather than
> embedding actions in the tree grammar ?
> 
> Based on what i have tried till now, it seems that getting the embedded
> actions to work, as expected, is not easy. So, I'd like to know if there is
> some benefit that I would get out of writing embedded actions in tree
> grammars?
> 
> Also, there is this post that seems to advocate manual tree walking:
> http://www.antlr.org/article/1170602723163/treewalkers.html
> 
> So, I'm confused as to whether continue trying to make tree grammars do what
> I want, or switch to manual tree walking. Appreciate your guidance...
> 
> Thank you for your time :)
> Best Regards,
> 
> Amr Muhammad
> Cairo Univ. Computer Eng. Grad.
> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

Pat




From mike.matera at xilinx.com  Tue Nov  2 16:39:55 2010
From: mike.matera at xilinx.com (Mike Matera)
Date: Tue, 2 Nov 2010 16:39:55 -0700
Subject: [antlr-interest] Manual Tree Walking Vs. Tree Grammars
In-Reply-To: <AANLkTi=n-EaNtsoC4vUsfYUWZ9HLXgjrm97SReP+U8hf@mail.gmail.com>
References: <AANLkTi=n-EaNtsoC4vUsfYUWZ9HLXgjrm97SReP+U8hf@mail.gmail.com>
Message-ID: <3dffc708-4a84-4bc3-a668-a03076d19dcc@SG2EHSMHS004.ehs.local>

Hi Amr,

I have used ANTLR tree parsers as a runtime for my scripting languages 
and I quite like it.  Is this what you're tying to do?  Here's what I 
mean (this code is simplified for clarity):

<<tree parser definition>>

exec: ^(statement*)

statement
  : ^('+' a=NUM b=NUM) {push(a+b);}
  | ^('*' a=NUM b=NUM) {push(a*b);}
  | ^('if' statement then_block=. else_block=.) {
    if (pop()) {
      exec(then_block);
    }else{
      exec(else_block);
    }
  }
  ;

I disagree with Pat (the last poster) that it's awkward to maintain.  In 
practice when you add a new construct to your language you'll have to 
update your runtime for that construct anyway.  For me having it all in 
one place is handy.

However, you may be running into this bug:

http://www.antlr.org/jira/browse/ANTLR-418

I filed it against ANTLR 3.2 and I don't know if it's fixed.  The 
problem is that your 'then_block' will contain your 'else_block' so 
you'll have the situation where:

then_block = {then, else}
else_block = {else}

You will always see your 'else_block' run.  If you seem to be having 
that problem downgrade to ANTLR 3.1.1.

Cheers
./m




Amr Muhammad wrote:
> Hello,
>
> In this post : http://www.antlr.org/pipermail/antlr
> -interest/2010-October/039862.html
> The following was mentioned:
>
>   
>> Also, remember to only call external Helper methods from your parsers/tree
>> walkers. Do not embedded any code other than the calling code and pass the
>> whole tree or token pointer. This means your calls won't care what gets done
>> by the helper API and the helper API will not care how the parsers decided
>> to call it. Anything else is an unmaintainable mess.
>>
>>
>>     
> So,
> does this imply that it is easier to walk the AST manually rather than
> embedding actions in the tree grammar ?
>
> Based on what i have tried till now, it seems that getting the embedded
> actions to work, as expected, is not easy. So, I'd like to know if there is
> some benefit that I would get out of writing embedded actions in tree
> grammars?
>
> Also, there is this post that seems to advocate manual tree walking:
> http://www.antlr.org/article/1170602723163/treewalkers.html
>
> So, I'm confused as to whether continue trying to make tree grammars do what
> I want, or switch to manual tree walking. Appreciate your guidance...
>
> Thank you for your time :)
> Best Regards,
>
> Amr Muhammad
> Cairo Univ. Computer Eng. Grad.
> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From kirby.bohling at gmail.com  Tue Nov  2 17:49:37 2010
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Tue, 2 Nov 2010 19:49:37 -0500
Subject: [antlr-interest] Manual Tree Walking Vs. Tree Grammars
In-Reply-To: <BBF28BE8-E101-4779-9925-E897E3CD575E@pat.net>
References: <AANLkTi=n-EaNtsoC4vUsfYUWZ9HLXgjrm97SReP+U8hf@mail.gmail.com>
	<BBF28BE8-E101-4779-9925-E897E3CD575E@pat.net>
Message-ID: <AANLkTim0AD=Hq-hO7C4MXRoXB3ehy0qhFGxBxw_ZqNUF@mail.gmail.com>

On Tue, Nov 2, 2010 at 5:59 PM, Patrick Niemeyer <pat at pat.net> wrote:
>
> I had been building up the experience to post something thoughtful on this topic, but I'll just chime in now :)
>
<snip...>
> I'd be open to being proved wrong on the tree grammar front... if anyone has examples of how it simplified their code, etc.
>
>

I maintain several tree grammars (for various phases of my
processing).  I have one that is absolutely pristine (no code of any
type allowed, it is a mechanical one-to-one translation from the
parser grammar as described in the ANTLR book), that I then import
into all of the others tree grammars I have.  I do have to keep the
one pristine one, and the parser grammar in sync by hand but it is
trivial to tell from the diff if I screwed that up.  For each phase of
my processing I only have to keep it in sync if that phase actually
touches the rules I modified in my parser.  So I was going to be
touching it either way, because they are related to the area of
change.

I try and keep each Tree Grammar well focused, and handling
essentially one pass/phase of my problem.  I don't do anything hugely
sophisticated, so it might not be useful in a full blown
compiler/interpreter setup.

Prior to doing that, I had to touch all the phases every time I
touched the tree grammar.  It'd be really cool if Antlr had a standard
tool go kick out the tree walker for the grammar that I could use as
the basis of my import.  For all I know the tool does exist, and I
just don't know it.

No idea if that helps Pat, but it's the approach I've used in the past
with success.

Thanks,
   Kirby


> Pat Niemeyer
>
>
> On Nov 2, 2010, at 2:48 PM, Amr Muhammad wrote:
>
>> Hello,
>>
>> In this post : http://www.antlr.org/pipermail/antlr
>> -interest/2010-October/039862.html
>> The following was mentioned:
>>
>>> Also, remember to only call external Helper methods from your parsers/tree
>>> walkers. Do not embedded any code other than the calling code and pass the
>>> whole tree or token pointer. This means your calls won't care what gets done
>>> by the helper API and the helper API will not care how the parsers decided
>>> to call it. Anything else is an unmaintainable mess.
>>>
>>>
>> So,
>> does this imply that it is easier to walk the AST manually rather than
>> embedding actions in the tree grammar ?
>>
>> Based on what i have tried till now, it seems that getting the embedded
>> actions to work, as expected, is not easy. So, I'd like to know if there is
>> some benefit that I would get out of writing embedded actions in tree
>> grammars?
>>
>> Also, there is this post that seems to advocate manual tree walking:
>> http://www.antlr.org/article/1170602723163/treewalkers.html
>>
>> So, I'm confused as to whether continue trying to make tree grammars do what
>> I want, or switch to manual tree walking. Appreciate your guidance...
>>
>> Thank you for your time :)
>> Best Regards,
>>
>> Amr Muhammad
>> Cairo Univ. Computer Eng. Grad.
>> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> Pat
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From douglasgodfrey at gmail.com  Wed Nov  3 11:58:02 2010
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Wed, 3 Nov 2010 14:58:02 -0400
Subject: [antlr-interest] return value struct from start rule not generated
	when OUTPUT=AST not specified
Message-ID: <AANLkTinRk4Vbggu9eHrQWb9Nt-X3LeUJiOb3OMddYCDk@mail.gmail.com>

The following code does not generate the return value struct for the start rule:
robotC_Parser_robotC_parser_return_struct. The return value XmlNodeTreePtr
cannot be accessed by the main program.

If output=AST is specified, the return value struct is generated and
un-needed code is also generated to build an AST that will not be
used.

parser grammar robotC_Parser;

options
{
	language=C;
	k=1;
	tokenVocab=robotC_Lexer;
}
//	output=AST;
//	ASTLabelType=pANTLR3_BASE_TREE;


////////////////////////////////////////////////////////////////////////////////////////////////////

// P a r s e r   R u l e s

robotC_parser[SymbolTablePtr pThisPtr] returns[XmlNode * XmlNodeTreePtr]
	options {k=1;}
	:
	rule body
	;

From colin.yates at gmail.com  Wed Nov  3 12:16:50 2010
From: colin.yates at gmail.com (Colin Yates)
Date: Wed, 3 Nov 2010 19:16:50 +0000
Subject: [antlr-interest] Matching multiple occurrences of quoted text
 joined by 'and' (i.e. "a" and "b" and "c")
Message-ID: <AANLkTima+Zud-YAmGuAuaERXtEhu==F0hZi8Xznv+7W+@mail.gmail.com>

Hi,

I need to accept statements like:

  "a" and "b" and "c"

and retrieve the quoted strings (i.e. "a", "b", and "c").

When it didn't work as expected I decided to boil it down to its simplest
components.  I would expect the following to match, but it doesn't:

ruleA : QUOTED_TEXT 'and' QUOTED_TEXT 'and' QUOTED_TEXT;

QUOTED_TEXT : '\"' ( options {greedy=false;} : .)* '\"'
{ setText(getText().substring(1, getText().length() - 1)); } ;

With the text '"a" and "b" and "c"' (without the single quotes) it produces
the following output:

line 1:8 mismatched character '"' expecting 'w'
line 1:19 required (...)+ loop did not match anything at character '<EOF>'
line 1:9 mismatched input 'b' expecting 'and'

Changing ruleA so one of the quoted strings is replaced by the QUOTED_TEXT
lexical removes any errors.  For example, the following ruleA definition
works:

ruleA: '"a" and' QUOTED_TEXT 'and "c"';

So, my question is, what have I missed?  (This is using IDEA 8 with the
latest antlr works plugin by the way).

Many thanks,

Col

From Gordon.Tyler at quest.com  Wed Nov  3 12:25:54 2010
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Wed, 3 Nov 2010 12:25:54 -0700
Subject: [antlr-interest] Matching multiple occurrences of quoted text
 joined by 'and' (i.e. "a" and "b" and "c")
In-Reply-To: <AANLkTima+Zud-YAmGuAuaERXtEhu==F0hZi8Xznv+7W+@mail.gmail.com>
References: <AANLkTima+Zud-YAmGuAuaERXtEhu==F0hZi8Xznv+7W+@mail.gmail.com>
Message-ID: <1FE9A296676737419A8912A6FD22AE1D029454AC5F@alvxmbw04.prod.quest.corp>

> QUOTED_TEXT : '\"' ( options {greedy=false;} : .)* '\"'

Try this:

QUOTED_TEXT : '"' (~'"')* '"'

In English: Match '"', then match zero or more characters which are not '"', then match '"'.

Ciao,
Gordon


From douglasgodfrey at gmail.com  Wed Nov  3 12:27:35 2010
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Wed, 3 Nov 2010 15:27:35 -0400
Subject: [antlr-interest] Commented-Out references to missing rule return
	values cause syntax errors
Message-ID: <AANLkTi=8Z6+Bc+sHJimC0vMTuKXC0uGSsGR9_WEaCqiA@mail.gmail.com>

The following line generates an error in Antlr even though it is commented out.

//pNodeList -> push_back($range_test.pXmlNode);


range_test[std::string name, XmlNode * pParentNode]
	:	Range
		{TRACERULE(-1);}
		LParen
		{TRACERULE(-1);}
		(	(constant_expression Comma
constant_expression)=>(constant_expression Comma constant_expression)
		|	condition_expression[$pParentNode]
		)
		RParen
		{TRACERULE(-1);}
	;


robotC_Parser.g:294:4: unknown attribute for rule range_test: pXmlNode

From colin.yates at gmail.com  Wed Nov  3 12:37:19 2010
From: colin.yates at gmail.com (Colin Yates)
Date: Wed, 3 Nov 2010 19:37:19 +0000
Subject: [antlr-interest] Matching multiple occurrences of quoted text
 joined by 'and' (i.e. "a" and "b" and "c")
In-Reply-To: <1FE9A296676737419A8912A6FD22AE1D029454AC5F@alvxmbw04.prod.quest.corp>
References: <AANLkTima+Zud-YAmGuAuaERXtEhu==F0hZi8Xznv+7W+@mail.gmail.com>
	<1FE9A296676737419A8912A6FD22AE1D029454AC5F@alvxmbw04.prod.quest.corp>
Message-ID: <4450631916893883564@unknownmsgid>

Thanks Gordon,

That doesn't work either.  I think I need to separate out just this
fragment into its own grammar to ensure that the rest of the grammar
isn't having any unexpected side effects.

I will report back once I have isolated these two rules... Thanks!

Sent from my iPad

On 3 Nov 2010, at 19:25, Gordon Tyler <Gordon.Tyler at quest.com> wrote:

>> QUOTED_TEXT : '\"' ( options {greedy=false;} : .)* '\"'
>
> Try this:
>
> QUOTED_TEXT : '"' (~'"')* '"'
>
> In English: Match '"', then match zero or more characters which are not '"', then match '"'.
>
> Ciao,
> Gordon
>

From alex.rudyk at gmail.com  Wed Nov  3 14:37:52 2010
From: alex.rudyk at gmail.com (Alex Rudyk)
Date: Wed, 3 Nov 2010 14:37:52 -0700
Subject: [antlr-interest] What patterns to choose to build XPath processor
Message-ID: <AANLkTinVXUu81Ns0kacHYAfG4az5zMRT4wTjjZ3_9_Ak@mail.gmail.com>

Hi all,

I am reading Terence Parr "Language Implementation Patterns"
book<http://pragprog.com/titles/tpdsl/language-implementation-patterns>.
I'd like to practice and I want to build some kind of simple xpath
processor. I?ve sketched through most of book's patterns, but still not sure
what patterns best fit my goal.

Especially it?s hard to me to understand is xpath processor an interpreter
or a translator. What I have to do after I have my xpath AST ready? How to
evaluate xpath expression on xml input stream?

I'll appreciate any suggestions.

-- 
thx
alex

From colin.yates at gmail.com  Wed Nov  3 15:40:14 2010
From: colin.yates at gmail.com (Colin Yates)
Date: Wed, 3 Nov 2010 22:40:14 +0000
Subject: [antlr-interest] Matching multiple occurrences of quoted text
 joined by 'and' (i.e. "a" and "b" and "c")
In-Reply-To: <4450631916893883564@unknownmsgid>
References: <AANLkTima+Zud-YAmGuAuaERXtEhu==F0hZi8Xznv+7W+@mail.gmail.com>
	<1FE9A296676737419A8912A6FD22AE1D029454AC5F@alvxmbw04.prod.quest.corp>
	<4450631916893883564@unknownmsgid>
Message-ID: <AANLkTimQbFWx_BpoH+9RyC3oT=OfM3+pAU-r5vX9ii4Z@mail.gmail.com>

Hmmm - I think I might be running into a bug - either in the code or my
understanding (almost certainly my understanding!).

I have created a simple grammar which demonstrates the problem (I am testing
the first parser rule called 'rule1') :

--- start
grammar QuotedText;

@parser::header {
package examples.aandb;
}

@lexer::header {
package examples.aandb;
}

rule1
: a=QUOTED_TEXT 'and' b=QUOTED_TEXT 'and' c=QUOTED_TEXT
{ System.out.println("rule1: " + a.getText() + ", " + b.getText() + "," +
c.getText());}
;
ruleThatShouldBeIgnored
: 'and whose' 'external'? 'resource is' theResource=('this' | QUOTED_TEXT)
{ System.out.println("taskResource: " + $theResource);}
;

QUOTED_TEXT : '"' (~'"')* '"';
WS
    : (' '|'\t'|'\n'|'\r')+ {skip();}
    ;
--- end

My test case is as follows:

--- start
package examples.aandb;

import org.junit.Test;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.RecognitionException;

import java.io.IOException;

public class TestCase {

    @Test
    public void happyPath() throws IOException, RecognitionException {
        String dsl = "\"a\" and \"b\" and \"c\"";
        createParser(dsl).rule1();
    }

    private QuotedTextParser createParser(String testString) throws
IOException {
        QuotedTextLexer lexer = createLexer(testString);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        return new QuotedTextParser(tokens);
    }

    private QuotedTextLexer createLexer(String testString) throws
IOException {
        CharStream stream = new ANTLRStringStream(testString);
        return new QuotedTextLexer(stream);
    }
}

--- end

If I run that (in IDEA 8 using latest antlrworks and antlr 3.2 then I get
the following output:

--- start
lline 1:8 mismatched character '"' expecting 'w'
line 1:9 no viable alternative at character 'b'
line 1:17 no viable alternative at character 'c'
line 1:19 mismatched character '<EOF>' expecting '"'
line 1:10 missing 'and' at '" and "'
line 0:-1 mismatched input '<EOF>' expecting 'and'
--- end

if however, I comment out the second rule ('ruleThatShouldBeIgnored') then
everything works as expected.  The output is:

--- start
rule1: "a", "b","c"
--- end

I don't understand this behaviour - I don't see why
'ruleThatShouldBeIgnored' is having any influence.

Any ideas?

Thanks,

Col

On 3 November 2010 19:37, Colin Yates <colin.yates at gmail.com> wrote:

> Thanks Gordon,
>
> That doesn't work either.  I think I need to separate out just this
> fragment into its own grammar to ensure that the rest of the grammar
> isn't having any unexpected side effects.
>
> I will report back once I have isolated these two rules... Thanks!
>
> Sent from my iPad
>
> On 3 Nov 2010, at 19:25, Gordon Tyler <Gordon.Tyler at quest.com> wrote:
>
> >> QUOTED_TEXT : '\"' ( options {greedy=false;} : .)* '\"'
> >
> > Try this:
> >
> > QUOTED_TEXT : '"' (~'"')* '"'
> >
> > In English: Match '"', then match zero or more characters which are not
> '"', then match '"'.
> >
> > Ciao,
> > Gordon
> >
>

From jbb at acm.org  Wed Nov  3 18:29:49 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 03 Nov 2010 21:29:49 -0400
Subject: [antlr-interest] Matching multiple occurrences of quoted text
 joined by 'and' (i.e. "a" and "b" and "c")
In-Reply-To: <AANLkTimQbFWx_BpoH+9RyC3oT=OfM3+pAU-r5vX9ii4Z@mail.gmail.com>
References: <AANLkTima+Zud-YAmGuAuaERXtEhu==F0hZi8Xznv+7W+@mail.gmail.com>
	<1FE9A296676737419A8912A6FD22AE1D029454AC5F@alvxmbw04.prod.quest.corp>
	<4450631916893883564@unknownmsgid>
	<AANLkTimQbFWx_BpoH+9RyC3oT=OfM3+pAU-r5vX9ii4Z@mail.gmail.com>
Message-ID: <1288834189.19303.41.camel@gecko.home.org>

Greetings!

On Wed, 2010-11-03 at 22:40 +0000, Colin Yates wrote:
> Hmmm - I think I might be running into a bug - either in the code or my
> understanding (almost certainly my understanding!).

unfortunately i do believe you have mis-understood ANTLR Lexers...

> I have created a simple grammar which demonstrates the problem (I am testing
> the first parser rule called 'rule1') :
> 
> --- start
> grammar QuotedText;
> 
> @parser::header {
> package examples.aandb;
> }
> 
> @lexer::header {
> package examples.aandb;
> }
> 
> rule1
> : a=QUOTED_TEXT 'and' b=QUOTED_TEXT 'and' c=QUOTED_TEXT
> { System.out.println("rule1: " + a.getText() + ", " + b.getText() + "," +
> c.getText());}
> ;
> ruleThatShouldBeIgnored
> : 'and whose' 'external'? 'resource is' theResource=('this' | QUOTED_TEXT)
> { System.out.println("taskResource: " + $theResource);}
> ;
> 

please recall that ANTLR Lexers are greedy *and* Lexers do *not*
back-track.

so when the input string of 'and ' in your input '"a" and "b"'
sub-phrase, the lexer commits itself to recognizing the 'and whose' and
only the 'and whose' keyword. of course this particular input string
does not contain the 'and where' keyword so the lexer generates the
error you are observing (e.g. we are at the opening " of the "b"
sub-phrase and not a 'w' that must follow any instance of 'and ' in
order to recognize the 'and where' keyword.

as an aside, you will have similar problems with your 'resource is'
keyword.

you can fix this particular problem by splitting the 'and where' (and
'resource is') keyword into 2 keywords: 'and' 'where'.  this also has
the benefit of recognizing more than 1 blank (or tab) between the two
words --- 'and     where' != 'and where' 
but 'and'       'where' == 'and' 'where'

as a larger suggestion, you should avoid any 'quoted' keyword in your
parser rules. rather you should specify explicit lexer rules for them.
by following this suggestion you will be more aware of your lexer's
activities and can deal with common left prefix issues such as the above
problem.

if you really want to have an 'and where' token in addition to a 'and'
token you can do something like the following by using explicit lexer
rules:

tokens { AND_WHERE; } // at top of the .g file, after options{}

AND : 'and' ( WS 'where' { $type = AND_WHERE; } )? ;

and use AND everywhere in the parser instead of 'and' and use AND_WHERE
everywhere in the parser instead of 'and where'.

note: the use of WS above isn't really quite the best. better would be
to rework your WS rule as something like these:

fragment WS : (' '|'\t'|'\n'|'\r')+ ;
WHITESPACE : WS {skip();} ;

this latter alternative avoids token creation overhead in usage of the
WS rule (because it is now a fragment).


> QUOTED_TEXT : '"' (~'"')* '"';
> WS
>     : (' '|'\t'|'\n'|'\r')+ {skip();}
>     ;
> --- end
> 
> My test case is as follows:
> 
> --- start
> package examples.aandb;
> 
> import org.junit.Test;
> import org.antlr.runtime.CommonTokenStream;
> import org.antlr.runtime.CharStream;
> import org.antlr.runtime.ANTLRStringStream;
> import org.antlr.runtime.RecognitionException;
> 
> import java.io.IOException;
> 
> public class TestCase {
> 
>     @Test
>     public void happyPath() throws IOException, RecognitionException {
>         String dsl = "\"a\" and \"b\" and \"c\"";
>         createParser(dsl).rule1();
>     }
> 
>     private QuotedTextParser createParser(String testString) throws
> IOException {
>         QuotedTextLexer lexer = createLexer(testString);
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>         return new QuotedTextParser(tokens);
>     }
> 
>     private QuotedTextLexer createLexer(String testString) throws
> IOException {
>         CharStream stream = new ANTLRStringStream(testString);
>         return new QuotedTextLexer(stream);
>     }
> }
> 
> --- end
> 
> If I run that (in IDEA 8 using latest antlrworks and antlr 3.2 then I get
> the following output:
> 
> --- start
> lline 1:8 mismatched character '"' expecting 'w'
> line 1:9 no viable alternative at character 'b'
> line 1:17 no viable alternative at character 'c'
> line 1:19 mismatched character '<EOF>' expecting '"'
> line 1:10 missing 'and' at '" and "'
> line 0:-1 mismatched input '<EOF>' expecting 'and'
> --- end
> 
> if however, I comment out the second rule ('ruleThatShouldBeIgnored') then
> everything works as expected.  The output is:
> 
> --- start
> rule1: "a", "b","c"
> --- end
> 
> I don't understand this behaviour - I don't see why
> 'ruleThatShouldBeIgnored' is having any influence.
> 
> Any ideas?
> 
> Thanks,
> 
> Col
> 
> On 3 November 2010 19:37, Colin Yates <colin.yates at gmail.com> wrote:
> 
> > Thanks Gordon,
> >
> > That doesn't work either.  I think I need to separate out just this
> > fragment into its own grammar to ensure that the rest of the grammar
> > isn't having any unexpected side effects.
> >
> > I will report back once I have isolated these two rules... Thanks!
> >
> > Sent from my iPad
> >
> > On 3 Nov 2010, at 19:25, Gordon Tyler <Gordon.Tyler at quest.com> wrote:
> >
> > >> QUOTED_TEXT : '\"' ( options {greedy=false;} : .)* '\"'
> > >
> > > Try this:
> > >
> > > QUOTED_TEXT : '"' (~'"')* '"'
> > >
> > > In English: Match '"', then match zero or more characters which are not
> > '"', then match '"'.
> > >
> > > Ciao,
> > > Gordon
> > >
> >

Hope this helps.....
   -jbb



From Enrique.PradosValiente at reale.es  Thu Nov  4 00:14:41 2010
From: Enrique.PradosValiente at reale.es (Prados Valiente Enrique)
Date: Thu, 4 Nov 2010 08:14:41 +0100
Subject: [antlr-interest] Globalization for error messages
In-Reply-To: <AANLkTinRk4Vbggu9eHrQWb9Nt-X3LeUJiOb3OMddYCDk@mail.gmail.com>
References: <AANLkTinRk4Vbggu9eHrQWb9Nt-X3LeUJiOb3OMddYCDk@mail.gmail.com>
Message-ID: <931DCC17C6D7A849AEE684BF5B13E199EFF8DF@BLPOSTIN.reale.net>

Hi,

I use ANTLR Runtime for C#, and I want do "globalization" of error
messages like this:


line 1:8 mismatched character '"' expecting 'w'
line 1:19 required (...)+ loop did not match anything at character
'<EOF>'
line 1:9 mismatched input 'b' expecting 'and'

I need messages in French and Spanish language.

Any suggestions ? 

Thanks in advanced

From passionist_81 at yahoo.co.uk  Thu Nov  4 01:40:45 2010
From: passionist_81 at yahoo.co.uk (passionist_81 at yahoo.co.uk)
Date: Thu, 4 Nov 2010 08:40:45 +0000 (GMT)
Subject: [antlr-interest] [SPAM]
Message-ID: <851071.98553.qm@web24811.mail.ird.yahoo.com>

http://bawedig.t35.com/


From aleiby.antlr at gmail.com  Thu Nov  4 23:15:59 2010
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Thu, 4 Nov 2010 23:15:59 -0700
Subject: [antlr-interest] [c target] raising exceptions for semantic errors
Message-ID: <AANLkTinT1JY-1_qehW-WW5t+THzPbm0Gfi6WYab_m_Jc@mail.gmail.com>

I must be searching for the wrong thing because I can't find any examples or
documentation on how to add custom errors in grammar actions.

For example, if you have a grammar with a symbol table, and want to report
errors when symbols are used before they are defined, what's the method for
doing that in the C target?

In Java I believe you just throw a RecognitionException, etc.

I see there's a macro for creating exceptions: CONSTRUCTEX

And I see a similar function for creating exceptions: antlr3ExceptionNew

Additionally, in the generated code there are labels for jumping to on
HASEXCEPTION(), so I'm guessing there is a mechanism for working with all of
that, but I have yet to find it in the documentation or in previous email
threads or on the web.

What I have found is numerous discussions regarding displayRecognitionError,
but I'm not interested in changing *how* the errors are reported (yet).  I
just want to enforce semantic errors (stuff the grammar itself can't encode,
but will require checks like isSymbolDefined in grammar actions, etc.).

Thanks!
Aaron

From mortenoh at gmail.com  Fri Nov  5 09:13:48 2010
From: mortenoh at gmail.com (Morten Olav Hansen)
Date: Fri, 5 Nov 2010 17:13:48 +0100
Subject: [antlr-interest] Rewriting java source code
Message-ID: <AANLkTi=13J900YJEk9Er3gg+QyRyz8ZF6SCsfPDWh8UD@mail.gmail.com>

Hi

I'm currently trying to rewrite some java source code, and was looking
for some pointers for doing this. I have added the Java.g (1.5)
grammar and is currently using the grammar for parsing java files,
with no problems.

What I'm wondering is, how to proceed from this? I have used
StringTemplates before, but it seems to be a lot of work when I'm only
interested in rewriting small parts of the grammar, since I would have
to add rewrite rules for the entire java language, and I couldn't find
any pre-made files for this.

Could something like this be accomplished using a tree walker?

Any ideas or examples would be appreciated, thanks.


Regards,
Morten

From Nicola.Musatti at ObjectWay.it  Fri Nov  5 09:46:18 2010
From: Nicola.Musatti at ObjectWay.it (Nicola Musatti)
Date: Fri, 05 Nov 2010 17:46:18 +0100
Subject: [antlr-interest] Rewriting java source code
In-Reply-To: <29651_1288973714_4CD42D92_29651_237298_1_AANLkTi=13J900YJEk9Er3gg+QyRyz8ZF6SCsfPDWh8UD@mail.gmail.com>
References: <29651_1288973714_4CD42D92_29651_237298_1_AANLkTi=13J900YJEk9Er3gg+QyRyz8ZF6SCsfPDWh8UD@mail.gmail.com>
Message-ID: <29651_1288975574_4CD434D6_29651_237479_1_4CD434DA.5060905@ObjectWay.it>

Hallo, Morten.
This sounds like a perfect job for a TokenRewriteStream. You should add 
actions to your grammar that retrieve the start-end token pairs of the 
portions you need to rewrite and use those in conjunction with 
TokenRewriteStream's insert/replace/delete methods to perform your 
modifications, possibly by means of small StringTemplate templates.

See:
http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_token_rewrite_stream.html

Cheers,
Nicola Musatti

Morten Olav Hansen wrote:
> Hi
>
> I'm currently trying to rewrite some java source code, and was looking
> for some pointers for doing this. I have added the Java.g (1.5)
> grammar and is currently using the grammar for parsing java files,
> with no problems.
>
> What I'm wondering is, how to proceed from this? I have used
> StringTemplates before, but it seems to be a lot of work when I'm only
> interested in rewriting small parts of the grammar, since I would have
> to add rewrite rules for the entire java language, and I couldn't find
> any pre-made files for this.
>
> Could something like this be accomplished using a tree walker?
>
> Any ideas or examples would be appreciated, thanks.
>
>
> Regards,
> Morten
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    


Chi riceve il presente messaggio e' tenuto a verificare se lo stesso non gli
sia pervenuto per errore. In tal caso e' pregato di avvisare immediatamente
il mittente e, tenuto conto delle responsabilita' connesse all'indebito
utilizzo e/o divulgazione del messaggio e/o delle informazioni in esso
contenute, voglia cancellare l'originale e distruggere le varie copie o
stampe.

The receiver of this message is required to check if he/she has received it
erroneously. If so, the receiver is requested to immediately inform the
sender and - in consideration of the responsibilities arising from undue use
and/or disclosure of the message and/or the information contained therein -
destroy the original message and any copy or printout thereof. 


From chris.loftus at tiscali.co.uk  Fri Nov  5 10:44:44 2010
From: chris.loftus at tiscali.co.uk (Chris Loftus)
Date: Fri, 05 Nov 2010 17:44:44 +0000
Subject: [antlr-interest] ANSI C tree grammar for Antlr3
Message-ID: <4CD4428C.6060305@tiscali.co.uk>

Hello All,

Before I attempt to write a C tree grammar to complement Terrance Parr's 
ANSI C grammar for Antlr3, I wondered if anyone had one already or could 
point me at one? I want to generate for the Java target.

Many thanks
Chris

From mortenoh at gmail.com  Fri Nov  5 10:57:13 2010
From: mortenoh at gmail.com (Morten Olav Hansen)
Date: Fri, 5 Nov 2010 18:57:13 +0100
Subject: [antlr-interest] Rewriting java source code
In-Reply-To: <29651_1288975574_4CD434D6_29651_237479_1_4CD434DA.5060905@ObjectWay.it>
References: <29651_1288973714_4CD42D92_29651_237298_1_AANLkTi=13J900YJEk9Er3gg+QyRyz8ZF6SCsfPDWh8UD@mail.gmail.com>
	<29651_1288975574_4CD434D6_29651_237479_1_4CD434DA.5060905@ObjectWay.it>
Message-ID: <AANLkTimETUV69BudMjo=VTPKXGHNAqwRoQPU35sAoxgB@mail.gmail.com>

Thank you! That worked perfectly.

Regards,
Morten

On Fri, Nov 5, 2010 at 5:46 PM, Nicola Musatti
<Nicola.Musatti at objectway.it> wrote:
> Hallo, Morten.
> This sounds like a perfect job for a TokenRewriteStream. You should add
> actions to your grammar that retrieve the start-end token pairs of the
> portions you need to rewrite and use those in conjunction with
> TokenRewriteStream's insert/replace/delete methods to perform your
> modifications, possibly by means of small StringTemplate templates.
>
> See:
> http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_token_rewrite_stream.html
>
> Cheers,
> Nicola Musatti
>
> Morten Olav Hansen wrote:
>> Hi
>>
>> I'm currently trying to rewrite some java source code, and was looking
>> for some pointers for doing this. I have added the Java.g (1.5)
>> grammar and is currently using the grammar for parsing java files,
>> with no problems.
>>
>> What I'm wondering is, how to proceed from this? I have used
>> StringTemplates before, but it seems to be a lot of work when I'm only
>> interested in rewriting small parts of the grammar, since I would have
>> to add rewrite rules for the entire java language, and I couldn't find
>> any pre-made files for this.
>>
>> Could something like this be accomplished using a tree walker?
>>
>> Any ideas or examples would be appreciated, thanks.
>>
>>
>> Regards,
>> Morten
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>
> Chi riceve il presente messaggio e' tenuto a verificare se lo stesso non gli
> sia pervenuto per errore. In tal caso e' pregato di avvisare immediatamente
> il mittente e, tenuto conto delle responsabilita' connesse all'indebito
> utilizzo e/o divulgazione del messaggio e/o delle informazioni in esso
> contenute, voglia cancellare l'originale e distruggere le varie copie o
> stampe.
>
> The receiver of this message is required to check if he/she has received it
> erroneously. If so, the receiver is requested to immediately inform the
> sender and - in consideration of the responsibilities arising from undue use
> and/or disclosure of the message and/or the information contained therein -
> destroy the original message and any copy or printout thereof.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Sat Nov  6 05:30:40 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 06 Nov 2010 12:30:40 +0000
Subject: [antlr-interest] copy a tree in c
In-Reply-To: <AANLkTi=y9wu3JdTJnAJ45MhGQDaR6594hO4oy0kfSBBb@mail.gmail.com>
Message-ID: <e4f0ecedde8fdb439f11febbfe285400@temporal-wave.com>

If you just want to evaluate it, then don't duplicate it, just keep the pointer - it won't be deallocated until you free the main tree. Also, you should only use the toString stuff if you don't really care about performance and memory usage. Without knowing what you tried to code, I can't really help, but it is unlikely that you need to duplicate the tree. Usually such questions mean that you are trying to achieve something that should be achieved differently, so why don't you step back and say what you are trying to do rather than ask how to duplicate the tree?

Jim



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Stefan Lind
Sent: Friday, October 22, 2010 1:26 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] copy a tree in c

Hi,
I am trying to copy a part of a tree with the goal to evaluate this part to a later point. I wasn't able to find any tutorials or posts which describes a solution for my problem so i hope you can help me.
The most promising function i found is the dupTree() function from the pANTLR_BASE_TREE which i used as follows:
pANTLR3_BASE_TREE pBaseTree = (pANTLR3_BASE_TREE) FUNCTION_DEF10->dupTree(FUNCTION_DEF10);
Then i tryed to reuse the tree pBaseTree to a later point but it failed already when i used the toStringTree() function on it.
std::string treeString = (const char*)
pBaseTree->toStringTree(pBaseTree)->chars;
The output of the string treeString is nil. Between the dupTree() and toStringTree(), antlr continues to evaluate the tree.
When i call the toStringTree() function right after the dupTree() call, it delivers the correct ouput.

Does anyone see my mistake, or has any suggestion where i can find help?

Regards,
Stefan

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From sterling.mason at hotmail.com  Sun Nov  7 08:50:12 2010
From: sterling.mason at hotmail.com (Sterling Mason)
Date: Sun, 7 Nov 2010 09:50:12 -0700
Subject: [antlr-interest] Grammar issue
Message-ID: <BLU137-W167B5C1F4E5D2CDAA3A018834E0@phx.gbl>


I have a very simple grammar where I am attempting to parse some C++ code.  The input is very simple and I am having trouble figuring out how to parse (lex?) a line.  What I want to do is match a '#define" and then the rest of the line.  I don't care what is in the rest of the line (even if empty) but I do want it passed to a processing function where I can examine its contents.  The code snippet I have used is

definestatement
    : '#define' defineoption
    ;

defineoption
    : RESTOFLINE
    ;
...
COMMENT
    :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
    ;

LINE_COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
    ;
    
RESTOFLINE
 : ~('\n'|'\r')* '\r'? '\n'
 ;

This was taken out of the example grammar for 'C' and modified.

The problem is that when I attempt to use a RESTOFLINE in the grammar, the parser stops with an Unexpected Token at the terminal */ of the comment in the header.  It doesn't seem to make any difference if I modify LINE_COMMENT to contain the RESTOFLINE item or not.

Questions:
1.  How can I capture the rest of the line into a string that I can examine in the function handling that expression?
2.  Why doesn't the above construct work?

The grammar generates and compiles ok in Visual Studio 2008.

Thanks
Sterling
  		 	   		  

From zep_antlr at bahj.com  Sun Nov  7 09:04:36 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sun, 07 Nov 2010 12:04:36 -0500
Subject: [antlr-interest] Grammar issue
In-Reply-To: <BLU137-W167B5C1F4E5D2CDAA3A018834E0@phx.gbl>
References: <BLU137-W167B5C1F4E5D2CDAA3A018834E0@phx.gbl>
Message-ID: <4CD6DC24.7040402@bahj.com>

I'm going to guess that this has to do with the fact that you are 
creating a RESTOFLINE token.  Suppose the tokenizer encounters the 
following sequence of tokens:

// hello

This will match both LINE_COMMENT and RESTOFLINE.

I see two choices.  You could create a single token for DEFINESTATEMENT 
(where RESTOFLINE is now a tokenizer fragment); the presence of the 
#define while lexing would be sufficient to disambiguate.  Or you could 
pull the whole thing up into the parser (like the C preprocessor 
actually does).  The only trick with the latter case is that something 
as trivial as

definestatement: '#define' (~NEWLINE)* NEWLINE;

probably won't work because you're almost certainly skipping newlines as 
whitespace in your grammar.  My guess is that the approach here would be 
to fiddle with the token stream so that you can react to the newline 
token on the hidden stream.

For what you want to do, though, it sounds like simply treating the 
define as a token would get you what you want.

Cheers,

Zach
> I have a very simple grammar where I am attempting to parse some C++ code.  The input is very simple and I am having trouble figuring out how to parse (lex?) a line.  What I want to do is match a '#define" and then the rest of the line.  I don't care what is in the rest of the line (even if empty) but I do want it passed to a processing function where I can examine its contents.  The code snippet I have used is
>
> definestatement
>      : '#define' defineoption
>      ;
>
> defineoption
>      : RESTOFLINE
>      ;
> ...
> COMMENT
>      :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>      ;
>
> LINE_COMMENT
>      : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>      ;
>
> RESTOFLINE
>   : ~('\n'|'\r')* '\r'? '\n'
>   ;
>
> This was taken out of the example grammar for 'C' and modified.
>
> The problem is that when I attempt to use a RESTOFLINE in the grammar, the parser stops with an Unexpected Token at the terminal */ of the comment in the header.  It doesn't seem to make any difference if I modify LINE_COMMENT to contain the RESTOFLINE item or not.
>
> Questions:
> 1.  How can I capture the rest of the line into a string that I can examine in the function handling that expression?
> 2.  Why doesn't the above construct work?
>
> The grammar generates and compiles ok in Visual Studio 2008.
>
> Thanks
> Sterling
>    		 	   		
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    


From parrt at cs.usfca.edu  Sun Nov  7 16:20:42 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Nov 2010 16:20:42 -0800
Subject: [antlr-interest] mirror raw depot now
Message-ID: <7224D6EF-21BF-4ECB-A434-E44313A1C052@cs.usfca.edu>

hi, finally got around to mirroring raw depot

http://www.stringtemplate.org/depot
http://www.antlr.org/depot

The git hub seems to get refreshed as does the fisheye.  I guess what people want is the build (binary jars) set up?

Anyway, seemed like someone wanted this.  Is it useful to have?  I can have it do zips too.

Ter

From tenajahiker at yahoo.com  Sun Nov  7 16:22:01 2010
From: tenajahiker at yahoo.com (Tenaja)
Date: Sun, 7 Nov 2010 16:22:01 -0800 (PST)
Subject: [antlr-interest] Tutorial... actuala use?
Message-ID: <35024.95022.qm@web110004.mail.gq1.yahoo.com>

I'm familiar with bnf (etc) files, and have written a simple r/d compiler myself. I'm looking at antlr for expanding, and for maintenance reason. As such, I'd like to put together one of my simple bnf languages and view the output. I've seen a few antlr tutorials, but haven't found one that really describes the compiled code output (not the antlr output, but what a compiled exe or java file?output produces).
?
So... can someone point me to a tutorial that shows what to do AFTER you compile the anltr-generated file? 
?
Thanks!
Tenaja


      

From zep_antlr at bahj.com  Sun Nov  7 17:16:58 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Sun, 07 Nov 2010 20:16:58 -0500
Subject: [antlr-interest] Tutorial... actuala use?
In-Reply-To: <35024.95022.qm@web110004.mail.gq1.yahoo.com>
References: <35024.95022.qm@web110004.mail.gq1.yahoo.com>
Message-ID: <4CD74F8A.8090807@bahj.com>

Tenaja,

By default, the generated ANTLR grammar is just a recognizer: it will 
throw an exception in the presence of a string not in the grammar and it 
will terminate normally in the presence of a string in the grammar.  To 
get more output from ANTLR (such as an AST), you probably want to set 
"output=..." in the options section of your grammar.  For an informal 
discussion of "output=AST", try 
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction .  For more 
detailed information, there is a relatively inexpensive book ("The 
Definitive ANTLR Reference") that you can buy in electronic form.

For more examples, you might try taking a glance at some of the grammars 
on the ANTLR site (http://www.antlr.org/grammar/list).  There's also a 
somewhat non-standard approach that I've been forced to use (due to some 
strange constraints in my project) which is illustrated by the ANTLR 
grammar used in a branch of the OpenJDK project in which each rule 
explicitly returns the values that it needs (which are then set by 
grammar actions).

Cheers,

Zach
> I'm familiar with bnf (etc) files, and have written a simple r/d compiler myself. I'm looking at antlr for expanding, and for maintenance reason. As such, I'd like to put together one of my simple bnf languages and view the output. I've seen a few antlr tutorials, but haven't found one that really describes the compiled code output (not the antlr output, but what a compiled exe or java file output produces).
>   
> So... can someone point me to a tutorial that shows what to do AFTER you compile the anltr-generated file?
>   
> Thanks!
> Tenaja
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    


From rick at rickmurphy.org  Sun Nov  7 17:24:49 2010
From: rick at rickmurphy.org (Rick Murphy)
Date: Sun, 07 Nov 2010 20:24:49 -0500
Subject: [antlr-interest] antlr works import path: undefined import
Message-ID: <1289179489.2536.7.camel@metho-laptop>

All:

Thanks in advance for your help.

Would you be able to provide guidance on how to set the import path in
antlr works? Even a simple lexer import with both files in the same
directory generates an "undefined import" message.

lexer grammar L1

LETTER : 'A' .. 'Z';

lexer grammar L2
import L1; // undefined import

--
Rick


From parrt at cs.usfca.edu  Sun Nov  7 20:22:16 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Nov 2010 20:22:16 -0800
Subject: [antlr-interest] [stringtemplate-interest] mirror raw depot now
In-Reply-To: <AANLkTin0s59bvy+cEDnwnbm63i_cG=Xgk=x2VMXBMd_J@mail.gmail.com>
References: <7224D6EF-21BF-4ECB-A434-E44313A1C052@cs.usfca.edu>
	<AANLkTin0s59bvy+cEDnwnbm63i_cG=Xgk=x2VMXBMd_J@mail.gmail.com>
Message-ID: <6A64925E-A2F9-46E7-9603-F6ADEC3DDA22@cs.usfca.edu>


On Nov 7, 2010, at 4:39 PM, Zenaan Harkness wrote:

> On Mon, Nov 8, 2010 at 11:20, Terence Parr <parrt at cs.usfca.edu> wrote:
>> hi, finally got around to mirroring raw depot
> 
> What's "raw depot" ('scuse me ignorance) ?

well, no log/history on file. it's like webdav

> 
>> The git hub seems to get refreshed as does the fisheye.  I guess what people
>> want is the build (binary jars) set up?
>> Anyway, seemed like someone wanted this.  Is it useful to have?  I can have
>> it do zips too.
> 
> What would be riproaringly fantastic would be a "git clone ..." url

is

https://github.com/antlr

what you want?

> from which to pull from. Perhaps that's what you intended but the
> public read-only url link is not yet available/ displayed at
> github.org?
> 
> If you have not set that up yet, this would presumably just be some
> post commit hook thing in the VCS you currently use, to export as
> patch or something and auto-import into a local git repo and then auto
> push to github.org, taking note of branches.
> 
> I've forgotten your VCS, but if it's widely used, almost certainly
> such post-commit hooks VCS gateway type scripts are already available
> for the cherry picking :)

I just do a pull from depot into /depot dir in website every hour for this new thing.

I've got mvn running on the box now too so i can make a daily build.  hudson bit the dust so I removed link today.

Ter

From jrk1987 at yahoo.co.in  Sun Nov  7 23:09:32 2010
From: jrk1987 at yahoo.co.in (J.R Karthikeyan)
Date: Mon, 8 Nov 2010 12:39:32 +0530 (IST)
Subject: [antlr-interest] error(10): internal error: no such group file
	ST.stg
Message-ID: <441652.43677.qm@web94616.mail.in2.yahoo.com>

Hi,

   I have the grammar written in antlrworks-1.4 which will generate the C code 
from the grammar. I like the string template feature and would like to use it. 
But I am getting the following error

error(10):  internal error: no such group file ST.stg 

I just changed my options from 

options
{
language = C;
backtrack = true
}

to 


options
{
language = C;
backtrack = true;
output = template;
rewrite = true;
}

Is string template supported for C or am I missing some library files.

Thanks,
Jrk.



From maulattu at yahoo.it  Mon Nov  8 06:43:16 2010
From: maulattu at yahoo.it (maulattu)
Date: Mon, 8 Nov 2010 14:43:16 +0000 (GMT)
Subject: [antlr-interest] C preprocessor
Message-ID: <280118.29182.qm@web26002.mail.ukl.yahoo.com>

Hi all,
I've to add some parsing features to my grammar (it creates an AST, then with 
another grammar I walk the resulting tree).
The language is extremely simple, it's like C, i.e.:

    s_1 = 1;
    if (s_1)
    {
        s_2 = 1;
        s_3 = s_2 << 1;
    }
    else
        s_2 = 0;

what I'd like to to is to insert some "#define" optional directives as in C. If 
they are present, they must be only at the beginning of the file to be parsed:

   #define ignition s_1
    ... ... ...
    ignition = 1; /* was "s_1 = 1;" */
    ... // and the same as before

The main grammar (without the define feature) starts as

    script
      : statementList EOF
      ;
    statementList
      : statement+
      ;

    statement
      : compoundStatement
      | expressionStatement
      | selectionStatement
      ;

    compoundStatement
      : '{' statementList? '}'
      ;
....

I changed the grammar as following ("WS" is whitespace, \r,\n and similar):
    script
      : (defineStatement)* statementList EOF
      ;
  defineStatement
    : '#define' WS macroText = RAW_IDENTIFIER macroValue = RAW_IDENTIFIER
        -> (DEFINE $macroText $macroValue)
  ;

At this point I don't understand why the grammar is no more working.
It's expecting to have always a "#", not EOF or the other statements.
How can be written in order to have an optional "define list" only at the 
beginning on the text to be parsed by this grammar?
Even changing the "defineStatement" rule as
defineStatement
    : '#define' WS macroText = RAW_IDENTIFIER macroValue = RAW_IDENTIFIER
        -> (DEFINE $macroText $macroValue)
    |
  ;

nothing changes.

I take a look at
http://www.antlr.org/pipermail/antlr-interest/2004-July/008778.html
but it's a grammar related to a mandatory preprocessor directive list, not an 
optional one.

A lot of thanks in advance :)

Maurizio



      

From Ralf.Cremerius at de.bosch.com  Mon Nov  8 07:06:52 2010
From: Ralf.Cremerius at de.bosch.com (Cremerius Ralf (DGS-EC/ECC3))
Date: Mon, 8 Nov 2010 16:06:52 +0100
Subject: [antlr-interest] Different StringTemplate outputs depending on
 results of called parser rule
Message-ID: <117C1349CBA2C743ADB8626A716E85DE09EFC69572@SI-MBX12.de.bosch.com>

Hello,

Working with ANTLR v3 + StringTemplate I often come across the following situation:

One parser rule calls another rule and depending on the evaluation of that called rule, I'd like to return different values using StringTemplate. As far as I know, each rule alternative in ANTLR may only return one kind of StringTemplate output. So if I want to return two kinds of outputs, I need two parser rule alternatives. I then come up with parser rules of the following style (using a semantic predicate), but this won't work:

R:      // Alternative A
        called_rule
        { (comeConditionDependingOn_Called_rule) }?
        -> stringtemplate_output_A(...)
        |  // Alternative B
        { (!(comeConditionDependingOn_Called_rule)) }?
        -> stringtemplate_output_B(...)

=> What is a smarter way of achieving the different desired outputs?

Thanks in advance for any feedback & best regards,
   Ralf Cremerius




From j.grout at computer.org  Mon Nov  8 08:50:22 2010
From: j.grout at computer.org (John Grout)
Date: Mon, 8 Nov 2010 08:50:22 -0800
Subject: [antlr-interest] [Bug Report] C target mishandles failed validating
	semantic predicate
Message-ID: <5FC197AC-FCE3-48CF-8E17-4E5A86DC5DCA@computer.org>

When passing a duplicate argument to an argument-processing rule like

walletArgs
@declarations {
         ANTLR3_BOOLEAN b_nameArg, b_passwdArg, b_typeArg, b_userArg; }
@init {
         b_nameArg = ANTLR3_FALSE;
         b_passwdArg = ANTLR3_FALSE;
         b_typeArg = ANTLR3_FALSE;
         b_userArg = ANTLR3_FALSE;
}
     : ( nameArg {!b_nameArg}? {b_nameArg = ANTLR3_TRUE;} |
         passwdArg {!b_passwdArg}? {b_passwdArg = ANTLR3_TRUE;} |
         typeArg {!b_typeArg}? {b_typeArg = ANTLR3_TRUE;} |
         userArg {!b_userArg}? {b_userArg = ANTLR3_TRUE;} )*
     -> ^( ARGUMENT_LIST nameArg? passwdArg? typeArg? userArg? )
     ;

the C target creates a FailedPredicateException (the corresponding
ANTLR3_BOOLEAN variable is already ANTLR3_TRUE)... but the code
then falls through to execute the subsequent semantic action (and,
apparently, to the rewrite rule) rather than branching to  
rulewalletArgsEx,
which is where the rule throws its exceptions.  There is an exception  
check
and a branch to rulewalletArgsEx a few statements _before_ the  
validating
semantic predicate is tested, but none afterward.

As expected, the Java target throws a FailedPredicateException.

Full example on request (I've already sent it to Aaron Leiby, whom I
thank for pointing out the specific error which also turns up in my
own grammar, and Jim I).

John R. Grout
j.grout at computer.org


From martijn.reuvers at gmail.com  Mon Nov  8 09:16:51 2010
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Mon, 8 Nov 2010 18:16:51 +0100
Subject: [antlr-interest] C preprocessor
In-Reply-To: <280118.29182.qm@web26002.mail.ukl.yahoo.com>
References: <280118.29182.qm@web26002.mail.ukl.yahoo.com>
Message-ID: <AANLkTimwEj5+dZpWoBuu4jV8y+k2cntdBKbXt1n+Mvd_@mail.gmail.com>

Hello Maurizio,

By not seeing the whole grammar it's a bit difficult to guess, but
adding  WS at your #define statement will cause trouble (assuming you
either write the WS to the hidden channel or skip() it). If not you'd
have other issues I expect. You don't need the space there for what I
can tell.

I assume you have a WS defined simalar to:

WS
	: ( '\n' | '\r'  | '\t' | ' ' )+ { $channel = HIDDEN; }
    ;


Cheers!
Martijn



On Mon, Nov 8, 2010 at 3:43 PM, maulattu <maulattu at yahoo.it> wrote:
> Hi all,
> I've to add some parsing features to my grammar (it creates an AST, then with
> another grammar I walk the resulting tree).
> The language is extremely simple, it's like C, i.e.:
>
> ? ?s_1 = 1;
> ? ?if (s_1)
> ? ?{
> ? ? ? ?s_2 = 1;
> ? ? ? ?s_3 = s_2 << 1;
> ? ?}
> ? ?else
> ? ? ? ?s_2 = 0;
>
> what I'd like to to is to insert some "#define" optional directives as in C. If
> they are present, they must be only at the beginning of the file to be parsed:
>
> ? #define ignition s_1
> ? ?... ... ...
> ? ?ignition = 1; /* was "s_1 = 1;" */
> ? ?... // and the same as before
>
> The main grammar (without the define feature) starts as
>
> ? ?script
> ? ? ?: statementList EOF
> ? ? ?;
> ? ?statementList
> ? ? ?: statement+
> ? ? ?;
>
> ? ?statement
> ? ? ?: compoundStatement
> ? ? ?| expressionStatement
> ? ? ?| selectionStatement
> ? ? ?;
>
> ? ?compoundStatement
> ? ? ?: '{' statementList? '}'
> ? ? ?;
> ....
>
> I changed the grammar as following ("WS" is whitespace, \r,\n and similar):
> ? ?script
> ? ? ?: (defineStatement)* statementList EOF
> ? ? ?;
> ?defineStatement
> ? ?: '#define' WS macroText = RAW_IDENTIFIER macroValue = RAW_IDENTIFIER
> ? ? ? ?-> (DEFINE $macroText $macroValue)
> ?;
>
> At this point I don't understand why the grammar is no more working.
> It's expecting to have always a "#", not EOF or the other statements.
> How can be written in order to have an optional "define list" only at the
> beginning on the text to be parsed by this grammar?
> Even changing the "defineStatement" rule as
> defineStatement
> ? ?: '#define' WS macroText = RAW_IDENTIFIER macroValue = RAW_IDENTIFIER
> ? ? ? ?-> (DEFINE $macroText $macroValue)
> ? ?|
> ?;
>
> nothing changes.
>
> I take a look at
> http://www.antlr.org/pipermail/antlr-interest/2004-July/008778.html
> but it's a grammar related to a mandatory preprocessor directive list, not an
> optional one.
>
> A lot of thanks in advance :)
>
> Maurizio
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From tenajahiker at yahoo.com  Mon Nov  8 09:33:59 2010
From: tenajahiker at yahoo.com (Tenaja)
Date: Mon, 8 Nov 2010 09:33:59 -0800 (PST)
Subject: [antlr-interest] Tutorial... actual use? & BSD question
In-Reply-To: <4CD74F8A.8090807@bahj.com>
Message-ID: <691103.94538.qm@web110004.mail.gq1.yahoo.com>

Zach,
Thank you for responding. I think maybe my inquiry was unclear. I've read the "five minute intro..." and have used antlr to process several samples,?producing code in Java, C, C#, etc,. (It's very simple...) Unless the output=AST is different from those output commands (output = csharp), it is probably not what I'm interested in. 
?
What?I'm looking for is a 5-minute tutorial on using the output; for instance,?sending a file to the compiled C# output, and having that C# code process the text file and? generate a result. My end goal is a simple compiler?to produce some Intermediate Representation (Three-Address, or PCode, etc). 
?
...
On another topic, regarding the BSD license, since this is the first time I've worked with o/s code generation tools. 
.....The non-C output does not include a copy of it. 
.....The C output includes the BSD notice at the top. 
So, does that mean that I'm free to compile and distribute binary forms of Java & C# output code without the license, but not C? Does that mean the only requirements for distributing the C in binary form are to put it in an About box, or something equivelant? Why would the C output require it, but not the other languages? I may eventually turn this into a commercial product so I'd like to know how much disclosure is required.
?
Thanks!!!

--- On Sun, 11/7/10, Zachary Palmer <zep_antlr at bahj.com> wrote:


From: Zachary Palmer <zep_antlr at bahj.com>
Subject: Re: [antlr-interest] Tutorial... actuala use?
To: antlr-interest at antlr.org
Date: Sunday, November 7, 2010, 5:16 PM


Tenaja,

By default, the generated ANTLR grammar is just a recognizer: it will 
throw an exception in the presence of a string not in the grammar and it 
will terminate normally in the presence of a string in the grammar.? To 
get more output from ANTLR (such as an AST), you probably want to set 
"output=..." in the options section of your grammar.? For an informal 
discussion of "output=AST", try 
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction .? For more 
detailed information, there is a relatively inexpensive book ("The 
Definitive ANTLR Reference") that you can buy in electronic form.

For more examples, you might try taking a glance at some of the grammars 
on the ANTLR site (http://www.antlr.org/grammar/list).? There's also a 
somewhat non-standard approach that I've been forced to use (due to some 
strange constraints in my project) which is illustrated by the ANTLR 
grammar used in a branch of the OpenJDK project in which each rule 
explicitly returns the values that it needs (which are then set by 
grammar actions).

Cheers,

Zach
> I'm familiar with bnf (etc) files, and have written a simple r/d compiler myself. I'm looking at antlr for expanding, and for maintenance reason. As such, I'd like to put together one of my simple bnf languages and view the output. I've seen a few antlr tutorials, but haven't found one that really describes the compiled code output (not the antlr output, but what a compiled exe or java file output produces).
>???
> So... can someone point me to a tutorial that shows what to do AFTER you compile the anltr-generated file?
>???
> Thanks!
> Tenaja
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>? ? 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From zep_antlr at bahj.com  Mon Nov  8 10:13:26 2010
From: zep_antlr at bahj.com (Zachary Palmer)
Date: Mon, 08 Nov 2010 13:13:26 -0500
Subject: [antlr-interest] Tutorial... actual use? & BSD question
In-Reply-To: <691103.94538.qm@web110004.mail.gq1.yahoo.com>
References: <691103.94538.qm@web110004.mail.gq1.yahoo.com>
Message-ID: <4CD83DC6.4060005@bahj.com>

Tenaja,

The option of which you are thinking is "target", not "output".  The 
target option specifies the language for which you would like the parser 
to be generated; the output option specifies the type of information 
produced by a call to one of the functions in the generated code.

I am not familiar with any five minute intro that would give you the 
information you want other than the ANTLR book I mentioned in the 
previous e-mail.  The following might help, but please bear in mind that 
this is all off of the top of my head.  :)

So consider the grammar

     grammar Simple;
     options { target=Java; }
     program: decl*;
     decl: IDENTIFIER '{' statement* '}';
     statement: '+' | '-';
     IDENTIFIER: ('a'..'z')*;
     WS: ('\n' | '\r' | '\t' | ' ')* { skip(); } ;

This grammar would recognize any of the following code:

     foo { + - - + }
     bar { - + }

     stuff { + + + }

but it wouldn't produce any output; that is, the SimpleParser.program() 
method has a void return.  If you want output, you have to specify it in 
the grammar.  Consider the following rewrite:

     grammar Simple;
     options { target=Java; output=AST; }
     tokens { PROG; DECL; }
     program: decl* -> ^(PROG decl*);
     decl: IDENTIFIER '{' statement* '}' -> ^(DECL statement*);
     statement: '+' | '-';
     IDENTIFIER: ('a'..'z')*;
     WS: ('\n' | '\r' | '\t' | ' ')* { skip(); } ;

Now, the SimpleParser.program() method will have a return value of a 
type generated by ANTLR.  That type will have a public member named 
"tree".  By default, tree has type Object but actually contains a 
CommonTree; that CommonTree is a homogenously-typed AST which contains 
the parse of the input.  There are also instructions on the ANTLR site 
for causing the grammar to produce heterogeneously-typed ASTs.

In the project on which I am working, we have to create nodes through a 
factory.  As a result, we went with an alternative approach: manually 
controlling the output of the grammar rules.  Our rules look something 
like this:

     fieldDeclaration returns [FieldDeclarationNode ret]
         :
             fieldModifiers
             type
             variableDeclarators
             ';'
             {
                 $ret = factory.makeFieldDeclarationNode(
                         $fieldModifiers.ret, $type.ret, 
$variableDeclarators.ret);
             }
         ;

Does this answer your question about using the output of the ANTLR parser?

In terms of licensing, I would expect that the generated parser is not 
covered by the BSD license unless the original grammar file is covered 
by the BSD license.  I have this impression for the same reason that the 
exported PNG from a Microsoft Visio document isn't subject to any 
licensing restrictions from the Visio software itself; it's merely 
subject to restrictions which were on the original .vsd file.  But I 
could be wrong about this; you'd have to ask the more lawyer-y people on 
the list to be sure.

Cheers,

Zach
> Zach,
> Thank you for responding. I think maybe my inquiry was unclear. I've read the "five minute intro..." and have used antlr to process several samples, producing code in Java, C, C#, etc,. (It's very simple...) Unless the output=AST is different from those output commands (output = csharp), it is probably not what I'm interested in.
>   
> What I'm looking for is a 5-minute tutorial on using the output; for instance, sending a file to the compiled C# output, and having that C# code process the text file and  generate a result. My end goal is a simple compiler to produce some Intermediate Representation (Three-Address, or PCode, etc).
>   
> ...
> On another topic, regarding the BSD license, since this is the first time I've worked with o/s code generation tools.
> .....The non-C output does not include a copy of it.
> .....The C output includes the BSD notice at the top.
> So, does that mean that I'm free to compile and distribute binary forms of Java&  C# output code without the license, but not C? Does that mean the only requirements for distributing the C in binary form are to put it in an About box, or something equivelant? Why would the C output require it, but not the other languages? I may eventually turn this into a commercial product so I'd like to know how much disclosure is required.
>   
> Thanks!!!
>
> --- On Sun, 11/7/10, Zachary Palmer<zep_antlr at bahj.com>  wrote:
>
>
> From: Zachary Palmer<zep_antlr at bahj.com>
> Subject: Re: [antlr-interest] Tutorial... actuala use?
> To: antlr-interest at antlr.org
> Date: Sunday, November 7, 2010, 5:16 PM
>
>
> Tenaja,
>
> By default, the generated ANTLR grammar is just a recognizer: it will
> throw an exception in the presence of a string not in the grammar and it
> will terminate normally in the presence of a string in the grammar.  To
> get more output from ANTLR (such as an AST), you probably want to set
> "output=..." in the options section of your grammar.  For an informal
> discussion of "output=AST", try
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction .  For more
> detailed information, there is a relatively inexpensive book ("The
> Definitive ANTLR Reference") that you can buy in electronic form.
>
> For more examples, you might try taking a glance at some of the grammars
> on the ANTLR site (http://www.antlr.org/grammar/list).  There's also a
> somewhat non-standard approach that I've been forced to use (due to some
> strange constraints in my project) which is illustrated by the ANTLR
> grammar used in a branch of the OpenJDK project in which each rule
> explicitly returns the values that it needs (which are then set by
> grammar actions).
>
> Cheers,
>
> Zach
>    
>> I'm familiar with bnf (etc) files, and have written a simple r/d compiler myself. I'm looking at antlr for expanding, and for maintenance reason. As such, I'd like to put together one of my simple bnf languages and view the output. I've seen a few antlr tutorials, but haven't found one that really describes the compiled code output (not the antlr output, but what a compiled exe or java file output produces).
>>     
>> So... can someone point me to a tutorial that shows what to do AFTER you compile the anltr-generated file?
>>     
>> Thanks!
>> Tenaja
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>      
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    


From jrkraaijeveld at gmail.com  Mon Nov  8 10:47:32 2010
From: jrkraaijeveld at gmail.com (Joost Kraaijeveld)
Date: Mon, 08 Nov 2010 19:47:32 +0100
Subject: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe works,
	crashes in library
Message-ID: <4CD845C4.3060006@gmail.com>

[Note: this is the fourth attempt to post this message so it may appear
multiple times. Sorry about that.]

Hi,

I have a grammar that works OK if the parser and lexer are in the
executable but that crashes if the parser and lexer are in a library.
Parsing small files goes OK, but larger files crash. I don't have a clue
why it does not work. I am hoping that someone is kind enough to help
with this. Any suggestions are *very* welcome.

Running the program in GDB crashes (but I cannot find the problem using
GDB, and believe I have tried).  Running the program with Valgrind does
NOT crash. Another strange thing is that another grammar/parser/lexer
using the same kind of setup does not give any problem.

I have created the smallest possible examples of both programs where the
only difference is where parser and lexer are. Both programs are
autotools-project that should work on any platform with autotools
available. Antlr C-target runtime 3.2 should be in the library path.
Eclipse 3.6 project files are included.

A zipped file can be downloaded here:

http://trac.askesis.nl/downloads/AntlrProblem.tar.bz2

I also have available a SVN repository that contains the two projects:

http://trac.askesis.nl/svn/tidbits/AntlrBug/
http://trac.askesis.nl/svn/tidbits/AntlrDllBug/

where the first is the all-in-executable and the second is the
in-library project.

Running of the programs:

1. Unzip the file in directory of choice. It contains the 2 projects.
2. For each project do:
a. cd to the "build" of that project
b. ../configure
c. ./make
d. ./exe/src/yat ../Danu.spec
where
./exe/src/yat is the libtool executable
../Danu.spec is the file that should be parsed

One can comment out parts of the Danu.spec file using C-style "/**/" or
C++-style "//" comments.


TIA
-- 
Met vriendelijke groeten,

Joost Kraaijeveld
Askesis B.V.
Molukkenstraat 14
6524NB Nijmegen
tel: 024-3888063 / 06-51855277
fax: 024-3608416
web: www.askesis.nl

From karthi.jrk at gmail.com  Mon Nov  8 11:16:39 2010
From: karthi.jrk at gmail.com (J.R. Karthikeyan)
Date: Mon, 8 Nov 2010 11:16:39 -0800
Subject: [antlr-interest] error(10): internal error: no such group file
	ST.stg
Message-ID: <AANLkTi=s0wPavb7eAdFZwhAH_7o2R3bEne2NQ_9-BUH8@mail.gmail.com>

Hi,

   I have the grammar written in antlrworks-1.4 which will generate the C
code from the grammar. I like the string template feature and would like to
use it. But I am getting the following error

error(10):  internal error: no such group file ST.stg

I just changed my options from

options
{
 language = C;
backtrack = true
}

to


options
{
 language = C;
backtrack = true;
 output = template;
rewrite = true;
}

Is string template supported for C or am I missing some library files.

Thanks,
Jrk.

From parrt at cs.usfca.edu  Mon Nov  8 14:28:57 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 8 Nov 2010 14:28:57 -0800
Subject: [antlr-interest] parrt doing a keynote at Code Generation 2011
Message-ID: <1434526E-3E16-4E96-9F25-77171DC4D53C@cs.usfca.edu>

Howdy,

May 25-27, 2011 I'll be attending Code Generation 2011 conference (Cambridge UK) and doing a keynote presentation, probably derived my motto: "Why program by hand in five days what you can spend five years of your life automating?"  'course that 5 years turned into 20 years, heh, but who's counting?

http://www.codegeneration.net/cg2011/index.php

I believe the conference is more industrial than academic, but some professors lurk and give presentations.

Come heckle my presentation or just come to say hi.  See y'all there!

I've never been to Cambridge. Should be a hoot!

Terence

From wiggjd at bcs.org.uk  Tue Nov  9 05:26:06 2010
From: wiggjd at bcs.org.uk (David Wigg)
Date: Tue, 9 Nov 2010 13:26:06 +0000
Subject: [antlr-interest] Parsing problem in C++
Message-ID: <AANLkTim=H8nOA_YhC52DhWdyOoJ8D1+cM2zjxVcnkEut@mail.gmail.com>

I updated the CPP_parser from Antlr1 to Antlr2. Ramin Zaghi has done a
great job to convert that to run under Antlr3. However, we do still
have a problem with understanding one particular piece of code.

This is in an include file, iosfwd (1998). shown below. The line in question is
for (_N = 0; !eq(*_U, _E(0)); ++_U)
and I would like to know what _E(0) is in order to able to parse it
properly. It must be something that returns a value (like a pointer?).
It looks to me like very early C code for a typecast but a later
version (2007) of iosfwd has something similar, "_Elem()", in that
position so I suppose it can't be a typecast.
Is it a function? It can't be a class because a class doesn't return a value.

I hope some C++ expert can help. If so, it would be a great help if
he/she could quote chapter and verse from Stroustrup's book (Third
Edition, or indeed any other) as well since that would help to get our
C++ grammar file correct..

Thanks.

David Wigg

template<class _E>
        struct char_traits {
        typedef _E char_type;
        typedef _E int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void __cdecl assign(_E& _X, const _E& _Y)
                {_X = _Y; }
        static bool __cdecl eq(const _E& _X, const _E& _Y)
                {return (_X == _Y); }
        static bool __cdecl lt(const _E& _X, const _E& _Y)
                {return (_X < _Y); }
        static int __cdecl compare(const _E *_U, const _E *_V, size_t _N)
                {for (size_t _I = 0; _I < _N; ++_I, ++_U, ++_V)
                        if (!eq(*_U, *_V))
                                return (lt(*_U, *_V) ? -1 : +1);
                return (0); }
        static size_t __cdecl length(const _E *_U)
                {size_t _N;
                for (_N = 0; !eq(*_U, _E(0)); ++_U)  // I would like
to know what _E(0) is to parse it
                        ++_N;
                return (_N); }
        static _E * __cdecl copy(_E *_U, const _E *_V, size_t _N)
                {_E *_S = _U;
                for (; 0 < _N; --_N, ++_U, ++_V)
                        assign(*_U, *_V);
                return (_S); }
        static const _E * __cdecl find(const _E *_U, size_t _N,
                const _E& _C)
                {for (; 0 < _N; --_N, ++_U)
                        if (eq(*_U, _C))
                                return (_U);
                return (0); }
        static _E * __cdecl move(_E *_U, const _E *_V, size_t _N)
                {_E *_Ans = _U;
                if (_V < _U && _U < _V + _N)
                        for (_U += _N, _V += _N; 0 < _N; --_N)
                                assign(*--_U, *--_V);
                else
                        for (; 0 < _N; --_N, ++_U, ++_V)
                                assign(*_U, *_V);
                return (_Ans); }
        static _E * __cdecl assign(_E *_U, size_t _N, const _E& _C)
                {_E *_Ans = _U;
                for (; 0 < _N; --_N, ++_U)
                        assign(*_U, _C);
                return (_Ans); }
        static _E __cdecl to_char_type(const int_type& _C)
                {return ((_E)_C); }
        static int_type __cdecl to_int_type(const _E& _C)
                {return ((int_type)_C); }
        static bool __cdecl eq_int_type(const int_type& _X,
                const int_type& _Y)
                {return (_X == _Y); }
        static int_type __cdecl eof()
                {return ((-1)); }
        static int_type __cdecl not_eof(const int_type& _C)
                {return (_C != eof() ? _C : !eof()); }
        };

From aheller at gmx.at  Tue Nov  9 05:38:35 2010
From: aheller at gmx.at (Arnulf Heller)
Date: Tue, 09 Nov 2010 14:38:35 +0100
Subject: [antlr-interest] Parsing problem in C++
In-Reply-To: <AANLkTim=H8nOA_YhC52DhWdyOoJ8D1+cM2zjxVcnkEut@mail.gmail.com>
References: <AANLkTim=H8nOA_YhC52DhWdyOoJ8D1+cM2zjxVcnkEut@mail.gmail.com>
Message-ID: <4CD94EDB.1040406@gmx.at>

hello david,

I think this is the "null value" of class E.
I recently read about that in the template book of Josuttis/Vandervorde.

Don't have a stroustrup book here but look for "Zero Initialization".

In the former book they say:

template <typename T>
void foo()
{
     T x = T(); // cannot use T x = 0; for classes!
}

in the std code they probably want to compare _U != 0
-->
_U != E(0)


modern compilers translate T() to 0 if T is int, e.g.

hope that helps,
arnulf

looking forward to ANTLR3 in C++ :)

Am 09.11.2010 14:26, schrieb David Wigg:
> I updated the CPP_parser from Antlr1 to Antlr2. Ramin Zaghi has done a
> great job to convert that to run under Antlr3. However, we do still
> have a problem with understanding one particular piece of code.
>
> This is in an include file, iosfwd (1998). shown below. The line in question is
> for (_N = 0; !eq(*_U, _E(0)); ++_U)
> and I would like to know what _E(0) is in order to able to parse it
> properly. It must be something that returns a value (like a pointer?).
> It looks to me like very early C code for a typecast but a later
> version (2007) of iosfwd has something similar, "_Elem()", in that
> position so I suppose it can't be a typecast.
> Is it a function? It can't be a class because a class doesn't return a value.
>
> I hope some C++ expert can help. If so, it would be a great help if
> he/she could quote chapter and verse from Stroustrup's book (Third
> Edition, or indeed any other) as well since that would help to get our
> C++ grammar file correct..
>
> Thanks.
>
> David Wigg
>
> template<class _E>
>          struct char_traits {
>          typedef _E char_type;
>          typedef _E int_type;
>          typedef streampos pos_type;
>          typedef streamoff off_type;
>          typedef mbstate_t state_type;
>          static void __cdecl assign(_E&  _X, const _E&  _Y)
>                  {_X = _Y; }
>          static bool __cdecl eq(const _E&  _X, const _E&  _Y)
>                  {return (_X == _Y); }
>          static bool __cdecl lt(const _E&  _X, const _E&  _Y)
>                  {return (_X<  _Y); }
>          static int __cdecl compare(const _E *_U, const _E *_V, size_t _N)
>                  {for (size_t _I = 0; _I<  _N; ++_I, ++_U, ++_V)
>                          if (!eq(*_U, *_V))
>                                  return (lt(*_U, *_V) ? -1 : +1);
>                  return (0); }
>          static size_t __cdecl length(const _E *_U)
>                  {size_t _N;
>                  for (_N = 0; !eq(*_U, _E(0)); ++_U)  // I would like
> to know what _E(0) is to parse it
>                          ++_N;
>                  return (_N); }
>          static _E * __cdecl copy(_E *_U, const _E *_V, size_t _N)
>                  {_E *_S = _U;
>                  for (; 0<  _N; --_N, ++_U, ++_V)
>                          assign(*_U, *_V);
>                  return (_S); }
>          static const _E * __cdecl find(const _E *_U, size_t _N,
>                  const _E&  _C)
>                  {for (; 0<  _N; --_N, ++_U)
>                          if (eq(*_U, _C))
>                                  return (_U);
>                  return (0); }
>          static _E * __cdecl move(_E *_U, const _E *_V, size_t _N)
>                  {_E *_Ans = _U;
>                  if (_V<  _U&&  _U<  _V + _N)
>                          for (_U += _N, _V += _N; 0<  _N; --_N)
>                                  assign(*--_U, *--_V);
>                  else
>                          for (; 0<  _N; --_N, ++_U, ++_V)
>                                  assign(*_U, *_V);
>                  return (_Ans); }
>          static _E * __cdecl assign(_E *_U, size_t _N, const _E&  _C)
>                  {_E *_Ans = _U;
>                  for (; 0<  _N; --_N, ++_U)
>                          assign(*_U, _C);
>                  return (_Ans); }
>          static _E __cdecl to_char_type(const int_type&  _C)
>                  {return ((_E)_C); }
>          static int_type __cdecl to_int_type(const _E&  _C)
>                  {return ((int_type)_C); }
>          static bool __cdecl eq_int_type(const int_type&  _X,
>                  const int_type&  _Y)
>                  {return (_X == _Y); }
>          static int_type __cdecl eof()
>                  {return ((-1)); }
>          static int_type __cdecl not_eof(const int_type&  _C)
>                  {return (_C != eof() ? _C : !eof()); }
>          };
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> -----
> eMail ist virenfrei.
> Von AVG uberpruft - www.avg.de
> Version: 10.0.1153 / Virendatenbank: 424/3245 - Ausgabedatum: 08.11.2010
>
>


From oliver.zeigermann at gmail.com  Tue Nov  9 06:26:42 2010
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 9 Nov 2010 15:26:42 +0100
Subject: [antlr-interest] Very simple grammar confusing me
Message-ID: <AANLkTimRFcGEj55bCLJHpNF3GLLi8aLpLVYUHy5mMNp0@mail.gmail.com>

Folks!

This is my grammar

------------------
SHRASS : '>>=' ;
SEMI  : ';' ;
GT : '>';

rule : (GT | SEMI | SHRASS)+ ;
------------------

I though it should parse

>>;

into a token stream of

GT GT SEMI

but as I see both at runtime as well is in the mToken method it tries
to match the above input using SHRASS. Which of course fails.

Any hints what I could do to work around that?

Thanks in advance

- Oliver

From jbb at acm.org  Tue Nov  9 06:46:50 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 09 Nov 2010 09:46:50 -0500
Subject: [antlr-interest] Very simple grammar confusing me
In-Reply-To: <AANLkTimRFcGEj55bCLJHpNF3GLLi8aLpLVYUHy5mMNp0@mail.gmail.com>
References: <AANLkTimRFcGEj55bCLJHpNF3GLLi8aLpLVYUHy5mMNp0@mail.gmail.com>
Message-ID: <1289314010.6000.4.camel@gecko.home.org>

Greetings!

On Tue, 2010-11-09 at 15:26 +0100, Oliver Zeigermann wrote:
> Folks!
> 
> This is my grammar
> 
> ------------------
> SHRASS : '>>=' ;
> SEMI  : ';' ;
> GT : '>';
> 
> rule : (GT | SEMI | SHRASS)+ ;
> ------------------
> 
> I though it should parse
> 
> >>;
> 
> into a token stream of
> 
> GT GT SEMI
> 
> but as I see both at runtime as well is in the mToken method it tries
> to match the above input using SHRASS. Which of course fails.
> 
> Any hints what I could do to work around that?
> 

untested!

but I believe this should work:

tokens { SHRASS; } // e.g. add SHRASS to your tokens section
...
...
// delete the SHRASS rule
GT : '>' ( '>=' {$type = SHRASS;} )?



hope this helps...
   -jbb



From kunalsawlani at gmail.com  Tue Nov  9 07:11:32 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Tue, 9 Nov 2010 10:11:32 -0500
Subject: [antlr-interest] gUnit test for tree grammar
Message-ID: <AANLkTikzA3DFNH_2=sow6aoCLK+J_pzg1DNjFqHPZwMZ@mail.gmail.com>

Hi All,

I am trying to use ANTLR for checking the return values from my Tree
grammar.
I have a simple rule which just returns the text found.

start_tree_parser walks start_parser:
"this is text" returns ["this is text"]


However, the Answer returned from this rule is the actual AST built up by
the parser,

i.e. (TEXT this is text) is the actual value returned.

The options I have in my Tree grammar are.

options {
  language     = Java;
  output       = AST;
  tokenVocab   = text_parser;
  ASTLabelType = CommonTree;
}

And my tree grammar is as follows:

start_tree_parser returns [String result = " "] :
    ^(TEXT text) {$result = $text.result;}

text returns [String result = ""; ]:
    (TEXTTOKEN)  {$result = $text;}

The tree being formed from the parser is correct, however, I want to test
the output of walking the tree and checking the string returned.

I am not sure if I am using the correct syntax for checking the return
values. If anyone could point me in the right direction, that would be
great!

Thanks,
Kunal

From oliver.zeigermann at gmail.com  Tue Nov  9 08:15:12 2010
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 9 Nov 2010 17:15:12 +0100
Subject: [antlr-interest] Very simple grammar confusing me
In-Reply-To: <1289314010.6000.4.camel@gecko.home.org>
References: <AANLkTimRFcGEj55bCLJHpNF3GLLi8aLpLVYUHy5mMNp0@mail.gmail.com>
	<1289314010.6000.4.camel@gecko.home.org>
Message-ID: <AANLkTi=cTH=teKM6kHHtALfBoqJ1dJ9v8vLj_VC1FtK0@mail.gmail.com>

Hi John!

That actually does work, thanks for the hint :)

- Oliver

2010/11/9 John B. Brodie <jbb at acm.org>:
> Greetings!
>
> On Tue, 2010-11-09 at 15:26 +0100, Oliver Zeigermann wrote:
>> Folks!
>>
>> This is my grammar
>>
>> ------------------
>> SHRASS : '>>=' ;
>> SEMI ?: ';' ;
>> GT : '>';
>>
>> rule : (GT | SEMI | SHRASS)+ ;
>> ------------------
>>
>> I though it should parse
>>
>> >>;
>>
>> into a token stream of
>>
>> GT GT SEMI
>>
>> but as I see both at runtime as well is in the mToken method it tries
>> to match the above input using SHRASS. Which of course fails.
>>
>> Any hints what I could do to work around that?
>>
>
> untested!
>
> but I believe this should work:
>
> tokens { SHRASS; } // e.g. add SHRASS to your tokens section
> ...
> ...
> // delete the SHRASS rule
> GT : '>' ( '>=' {$type = SHRASS;} )?
>
>
>
> hope this helps...
> ? -jbb
>
>
>

From amr.muhammad.w at gmail.com  Tue Nov  9 11:34:22 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Tue, 9 Nov 2010 21:34:22 +0200
Subject: [antlr-interest] Code too large error
Message-ID: <AANLkTi=jX_s_U6KN7pNu365FJ2_zCRzXq3cX+rZz6VgO@mail.gmail.com>

Hello,

I was wondering if there is a way to avoid the "Code too large error" in
case of large grammars without having to split the grammar.


Thank you for your time :)
Regards,

Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From stuart.dootson at gmail.com  Tue Nov  9 16:41:54 2010
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Wed, 10 Nov 2010 00:41:54 +0000
Subject: [antlr-interest] Parsing problem in C++
In-Reply-To: <AANLkTim=H8nOA_YhC52DhWdyOoJ8D1+cM2zjxVcnkEut@mail.gmail.com>
References: <AANLkTim=H8nOA_YhC52DhWdyOoJ8D1+cM2zjxVcnkEut@mail.gmail.com>
Message-ID: <AANLkTinmEJ3ec4-CSv-tK19ju0LF-JDX+5BAtFxaKYh=@mail.gmail.com>

On Tue, Nov 9, 2010 at 1:26 PM, David Wigg <wiggjd at bcs.org.uk> wrote:
> I updated the CPP_parser from Antlr1 to Antlr2. Ramin Zaghi has done a
> great job to convert that to run under Antlr3. However, we do still
> have a problem with understanding one particular piece of code.
>
> This is in an include file, iosfwd (1998). shown below. The line in question is
> for (_N = 0; !eq(*_U, _E(0)); ++_U)
> and I would like to know what _E(0) is in order to able to parse it
> properly. It must be something that returns a value (like a pointer?).
> It looks to me like very early C code for a typecast but a later
> version (2007) of iosfwd has something similar, "_Elem()", in that
> position so I suppose it can't be a typecast.
> Is it a function? It can't be a class because a class doesn't return a value.
>
> I hope some C++ expert can help. If so, it would be a great help if
> he/she could quote chapter and verse from Stroustrup's book (Third
> Edition, or indeed any other) as well since that would help to get our
> C++ grammar file correct..
>
> Thanks.
>
> David Wigg

<code snipped>

_E(0) is either a) a "function style cast" (when _E is a type with no
constructors) or b) a constructor call (when _E is a type with
constructors).

So, in the case you're asking for, an _E of value 0 is constructed as
part of a search for the end of a null terminated string of _Es. And
the same syntax can be used whether _E is a simple type or (say) a
class type.

HTH

Stuart Dootson

From jschrod at acm.org  Wed Nov 10 02:01:20 2010
From: jschrod at acm.org (Joachim Schrod)
Date: Wed, 10 Nov 2010 11:01:20 +0100
Subject: [antlr-interest] Very simple grammar confusing me
In-Reply-To: <AANLkTimRFcGEj55bCLJHpNF3GLLi8aLpLVYUHy5mMNp0@mail.gmail.com>
References: <AANLkTimRFcGEj55bCLJHpNF3GLLi8aLpLVYUHy5mMNp0@mail.gmail.com>
Message-ID: <ibdqhh$u9q$1@dough.gmane.org>

Oliver Zeigermann wrote:
> Folks!
> 
> This is my grammar
> 
> ------------------
> SHRASS : '>>=' ;
> SEMI  : ';' ;
> GT : '>';
> 
> rule : (GT | SEMI | SHRASS)+ ;
> ------------------
> 
> I though it should parse
> 
>>>;
> 
> into a token stream of
> 
> GT GT SEMI
> 
> but as I see both at runtime as well is in the mToken method it tries
> to match the above input using SHRASS. Which of course fails.
> 
> Any hints what I could do to work around that?

John gave you the hint...

To reduce the probability that this happens again: Your basic
problem above is that there is a prefix of a token that is not
covered by any other token rule, namely '>>'.

For ANTLR lexers, *all* possible prefixes of any token must be
matched by another token. Otherwise lexers will fail, as ANTLR
lexers can not backtrack.

The standard solution is to refactor the token grammar. If that
gets too difficult or unmaintainable, one can combine another lexer
generator with ANTLR stream and tree parser capabilities.

HTH,
	Joachim

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From amr.muhammad.w at gmail.com  Wed Nov 10 06:05:26 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Wed, 10 Nov 2010 16:05:26 +0200
Subject: [antlr-interest] Why $rule.text does not get the whole rule text ?
Message-ID: <AANLkTi=wr1e56sO72=J4xwKfcBmDoEXPduDbVDTqbrK3@mail.gmail.com>

Hello,

Let's say, I have the following grammar:

rule1: key = value
          -> ^(RULE1_TOKEN  value)

value:  signed_int
           | ......

signed_int:   ('+' | '-') ? INT
               ;

in the tree grammar,
i do the following

rule1: ^(RULE1_TOKEN  value)
{
     char* temp = value.text->chars;
}


but in the case of value is signed_int, temp only contains the  + or - sign,
but not the INT part,
and this also happens for any alternative of value in which the rule is
composed of more than one token

So, i was wondering why does this happen, and how to get the whole text
matched for the rule?

Thank you for your time :)

Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From aheller at gmx.at  Wed Nov 10 06:11:37 2010
From: aheller at gmx.at (Arnulf Heller)
Date: Wed, 10 Nov 2010 15:11:37 +0100
Subject: [antlr-interest] Parsing problem in C++
In-Reply-To: <AANLkTinowFCcXTf=MCGHK5h1nTrEXqsvK0hXD0opmgxO@mail.gmail.com>
References: <AANLkTim=H8nOA_YhC52DhWdyOoJ8D1+cM2zjxVcnkEut@mail.gmail.com>	<4CD94EDB.1040406@gmx.at>
	<AANLkTinowFCcXTf=MCGHK5h1nTrEXqsvK0hXD0opmgxO@mail.gmail.com>
Message-ID: <4CDAA819.9000505@gmx.at>

Am 10.11.2010 10:31, schrieb David Wigg:
> Amulf,
>
> Many thanks for your prompt and most useful response.
>
> There is an interesting point here. In the grammar you can have either
> "class" or "typename" as a type-parameter. In our case it is "class".
> In your example it is "typename", At the moment in both "class E" and
> "typename E" I classify E as a typedef but I could distinguish between
> the two cases if necessary. There does not appear to be any
> significant difference between the two in the Stroustrup grammar
> definition but then neither does it say whether E should be classified
> as a class or a typedef.
>
> The question I need to ask is would the use of  "class" in your
> example make any difference to your reply?
no, it would not. the keywords "class" and "typename" can be 
interchanged (in the template argument list)
(see: http://www.codeguru.com/forum/showthread.php?t=422570)

> I see in your example you quote "// cannot use T x = 0; for classes!"
> although referring to "typename" as the type-parameter so perhaps
> there is no difference "class" and "typename" here..
you can also look at this small example:

template <typename T> class Couch
{
public:
     Couch() { T t = 0; }
};

template <typename T> class Cnoouch
{
public:
     Cnoouch() { T t = T(); }
};

class V
{
     V() {}
};

int main()
{
     Couch<int> coi; // ok
     Couch<V> cov; // ouch! 0 cannot be assigned to V
     Cnoouch<int> cnoi; // ok
     Cnoouch<V> cnov; // ok (no ouch:)

     // this effectively happens in Cnoouch; does also compile directly
     int i = int(); // i == 0 !
     char u = char(); // u == 0 !

     return 0;
}

> Unfortunately I can't see anything about T() (or T(0)) in the
> Stroustrup grammar definition as a zero (or null) initialisation.
Yes, Stroustrup templates are quite early; there are only a couple of 
pages in his book and much changed since then.

My favorite book can also be found here:
http://books.google.de/books?id=yQU-NlmQb_UC&printsec=frontcover&dq=vandervoorde+josuttis&source=bl&ots=EdpN59ZzEX&sig=yFJ6b1vXMBx9WfsA75uep1jZEB4&hl=de&ei=jqHaTJfAD43IswaP-PXsBw&sa=X&oi=book_result&ct=result&resnum=8&ved=0CFAQ6AEwBw#v=onepage&q&f=false

If you are lucky enough to get page 56 you will find more on zero 
initialization.
Type traits like your char_traits<> example are a chapter of their own.

Its also quite interesting to see the microsoft implementation:


template<class _Elem,
     class _Int_type>
     struct char_traits
     {    // they use the notation _Elem() in order to look for the null 
termination char
     static size_t length(const _Elem *_First)
         {    // find length of null-terminated sequence
         size_t _Count;
         for (_Count = 0; !eq(*_First, _Elem()); ++_First)
             ++_Count;
         return (_Count);
         }


template<>
     struct char_traits<wchar_t>
     {    // partial specialization for wchar_t calls build-in function; 
probably faster, more safe, ... ?
     static size_t length(const _Elem *_First)
         {    // find length of null-terminated sequence
         return (_CSTD wcslen(_First));
         }

> Thank you for your encouraging comment about looking forward to a C++
> grammar for Antlr3!
If you manage to parse the STL, you are a king!
If you manage to parse the boost, you are god ;)

cheers,
Arnulf



From jimi at temporal-wave.com  Wed Nov 10 08:28:57 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 08:28:57 -0800
Subject: [antlr-interest] How to handle rule arguments in C
In-Reply-To: <AANLkTi=ckWXdf-H=Hk0fGO+mxWLtUGmaY0-HdJz=hL+Z@mail.gmail.com>
References: <AANLkTim13A5S7Gn9XqOrKBvWDSZNYO-2d-_OeHKZnYcL@mail.gmail.com>
	<AANLkTi=ckWXdf-H=Hk0fGO+mxWLtUGmaY0-HdJz=hL+Z@mail.gmail.com>
Message-ID: <0b8101cb80f4$5f98b510$1eca1f30$@temporal-wave.com>

Does your grammar specify the output=AST; option? That is usually the
problem. Also, complicate type definitions in rule parameters tend to come
unstuck, it is usually better to create typedefs the mean the declaration is
simple.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of George Ruhlmann
> Sent: Friday, October 22, 2010 7:17 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to handle rule arguments in C
> 
> I am using ANTLR Version 3.2  My target language is C using VC10 64-
> bit.   I
> am creating a grammar called ASI.
> 
> I have the rule:
> 
> 
> tabledata[simData::ParserAdapter *adapter]
>  :   'DataTableRow' id=INT time[$adapter] values+=STRING*
>             {
> 
>             }
>         ;
> ANTLRWorks 1.4 generates the necessary files with no errors.  When I
> compile the code it generates the error:
> 
> 1>C:\people\feds\SIMDIS-
> X\SDK\include\GeneratedCode/src/ASIParser.c(8449):
> error C2039: 'vectors' : is not a member of 'ASIParser_Ctx_struct'
> 1>
> C:\people\feds\SIMDIS-
> X\SDK\include\GeneratedCode\include\ASIParser.h(242) :
> see declaration of 'ASIParser_Ctx_struct'
> 1>C:\people\feds\SIMDIS-
> X\SDK\include\GeneratedCode/src/ASIParser.c(8449):
> error C2227: left of '->newVector' must point to
> class/struct/union/generic type
> 1>C:\people\feds\SIMDIS-
> X\SDK\include\GeneratedCode/src/ASIParser.c(8449):
> error C2039: 'vectors' : is not a member of 'ASIParser_Ctx_struct'
> According to the book "The Definitive ANTLR Reference", the use of +=
> will place all the arguments in a list, but the C code does not know
> how to make the list object.  What am I doing wrong?
> 
> Thanks,
> 
> George
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 08:40:09 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 08:40:09 -0800
Subject: [antlr-interest] Lexer
In-Reply-To: <000001cb7194$e6521a70$b2f64f50$@net>
References: <000001cb7194$e6521a70$b2f64f50$@net>
Message-ID: <0b9201cb80f5$f0424990$d0c6dcb0$@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Steven Kibler
> Sent: Thursday, October 21, 2010 7:58 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer
> 
> Windows generation, C++, Microsoft compiler 2008.
> 
> 
> 
> 1.       Are there some configuration options for the lexer?  If so,
> where
> are they?

What kind of options are you looking for?

> 2.       How do I reduce the size of the tables to something less than
> 30,000  program lines?  Input is standard ASCII.

Usually this means that your lexer is trying to be very specific on the
characters it matches. It is generally best to be as vague as possible (but
no vaguer) on the patterns and counts. Then you apply a checking function
that can give a nice error about the problems with a token such as too many
characters or invalid characters. 

Also in cases like:

T: 'X'? 'X'; use

T: 'X' 'X'? ;


However, you will need to post your grammar if you want more specific help.

Also, what version of ANTLR are you using? Most of those lines are data
table static definitions by the way.

> 
> 3.       I have a runtime problem and can't determine if it is a parser
> issue or lexer issue.  How can I track the tokens returned from the
> lexer?

Look at the example projects in the downloads. Start with the Java parser
example. You will see that it calls LT(1) directly on the lexer. You can
also do that and call LT(n), get the token type and print the token text.

> 
> 4.       How do I insert my own lexer?


Look at the generated lexer, you will see that it creates a struct, installs
the pointers to its functions, but also creates standard library stuff. You
need to create the same thing, but provide your own implementations of
nextToken and the other library lexer stuff.

> 
> 5.       It appears that none of the functions in the generated lexer
> code,
> other than the initialization functions, are called.  Is the lexing
> done in the libraries?  How do I make a lexer that uses that code?

The functions are called from the match and nextToken methods. Trace the
code using the debugger.


Jim

> 
> 
> 
> Thanks
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 08:45:10 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 08:45:10 -0800
Subject: [antlr-interest] (newbie!) Maven pom for antlr 3.2 runtime
	->	stringtemplate 3.2 -> antlr 2.7.7
In-Reply-To: <B23395FB-F354-4045-BEB5-AE23761FF95A@winnall.ch>
References: <AANLkTinaUSdMgdXOnBr6GEL3DkacY=tT4HNCWhyQb+a8@mail.gmail.com>
	<B23395FB-F354-4045-BEB5-AE23761FF95A@winnall.ch>
Message-ID: <0b9601cb80f6$a3db75d0$eb926170$@temporal-wave.com>

This is not a bug. The runtimes can coexist and stringtemplate needs 2.7

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stephen Winnall
> Sent: Saturday, October 23, 2010 1:42 PM
> To: antlr-interest at antlr.org
> Cc: Colin Yates
> Subject: Re: [antlr-interest] (newbie!) Maven pom for antlr 3.2 runtime
> -> stringtemplate 3.2 -> antlr 2.7.7
> 
> I noticed that too, though I wasn't aware of the cause. I decided to
> ignore it because the two versions use different namespaces
> (org.antlr.* for 3.2, antlr.* for 2.7.7) so they will coexist happily.
> 
> I don't know how or where to place bug reports though.
> 
> Steve
> 
> On 23 Oct 2010, at 10:12, Colin Yates wrote:
> 
> > Hi all,
> >
> > Newbie - so go gently :)
> >
> > If I include antlr 3.2 in the gradle file then I end up with both
> > antlr 3.2 and antlr 2.7.7.
> >
> > Tracking this down at
> > http://mvnrepository.com/artifact/org.antlr/antlr-runtime/3.2
> > indicates that antlr 3.2 depends on stringtemplate 3.2 which pulls in
> 2.7.7.
> >
> > My understanding was that you shouldn't run more than one version of
> > antlr at any one time.
> >
> > So, is this OK or shall I file a bug report against the maven poms
> > (where?)
> >
> > Many thanks for an excellent tool and a very good book
> > http://pragprog.com/press_releases/tpantlr
> >
> > Col
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> > --
> > This message has been scanned for viruses and dangerous content by
> > MailScanner, and is believed to be clean.
> >
> 
> 
> --
> This message has been scanned for viruses and dangerous content by
> MailScanner, and is believed to be clean.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From matt at unformatt.com  Wed Nov 10 08:49:29 2010
From: matt at unformatt.com (Matt)
Date: Wed, 10 Nov 2010 11:49:29 -0500
Subject: [antlr-interest] Generated Python Parser produces double try:
In-Reply-To: <AANLkTintnuPhmr454pU0WuGr3AKgSAsVxY5GQ=wDmTUf@mail.gmail.com>
References: <AANLkTikVW6291E8p=JCaeDNefiv-Tj1i89KoF6Kdaaym@mail.gmail.com>
	<AANLkTinq+22S_xia=MQD6hOnQtHKhbW3CmufOVaTAChh@mail.gmail.com>
	<AANLkTintnuPhmr454pU0WuGr3AKgSAsVxY5GQ=wDmTUf@mail.gmail.com>
Message-ID: <AANLkTikDoJ46Q+qC=_AM0DGOuYYYfmXCK1+S=oED6mYo@mail.gmail.com>

One last cry for help here - Anyone have *any* idea why a generator would be
inserting 2 try statements?

On Wed, Oct 27, 2010 at 2:25 PM, Matt <dopelogik at gmail.com> wrote:

> Any ideas on how I can debug this?
>
>
> On Tue, Oct 19, 2010 at 11:54 PM, Matt <matt at unformatt.com> wrote:
>
>> I'm using antlr 3.1.2 jar on Windows.
>> The generated Parser.py has a double "try:" generated, but only one
>> "finally:".
>>
>> This seems to happen for every "try" in the Parser.
>> This is not a problem of indents, but a problem of having unmatched
>> try/finally.
>>
>> e.g.:
>>
>> try:
>>     try:
>>         # some code
>>
>> finally:
>>     pass
>>
>>
>> SHOULD BE:
>>
>> try:
>>       # some code
>>
>> finally:
>>     pass
>>
>>
>> OR:
>>
>> try:
>>     try:
>>         # some code
>>
>>     finally:
>>         pass
>> finally:
>>     pass
>>
>>
>

From fabian at fabianhaupt.de  Wed Nov 10 09:23:42 2010
From: fabian at fabianhaupt.de (Fabian Haupt)
Date: Wed, 10 Nov 2010 18:23:42 +0100
Subject: [antlr-interest] NoViableAlException
Message-ID: <4CDAD51E.2090107@fabianhaupt.de>

Hi all,

I have a fairly simple grammar with which i'm trying to extract some 
values from the diagnostic output of an analyzer program.

This is a minimal grammar (see down below) to demonstrate the error I'm 
experiencing.

I'm getting a NoViableAltException: line 1:55 no viable alternative at 
input '.[CheckIntegrity'

with the input of
'The lower level block specifies a right link block of 0. 
[CheckIntegrity+343^%SYS.DATABASE:%SYS]'
starting with the 'test' rule.


 From my (limited) understanding the decision at this point is clear. 
There is only the possibility to match a whitespace and then the 
debugnote ([Che...)
I see that the second part of firstNodePtrWrong starts with '. We' which 
starts with the . as well.

I've read up on the posts of the other occurences of 
NoViableAltException, but found no case matching this (or maybe just 
didn't recognize).

The problem goes away if I remove the fist space in '. We were...' but 
unfortunately I can't change the output of the program, so that's not an 
option.

What do I have to change in my grammar to make it work?
Or is this even a reasonible approach to extract some numbers and error 
types from an ouput? If you think I should do it completely different, 
please feel free to tell me.

The output I'm trying to parse looks like this:
**********Global A is Not OK**********
[CheckIntegrity+186^%SYS.DATABASE:%SYS]
  Error of type 26 while processing pointer block 39
[CheckIntegrity+190^%SYS.DATABASE:%SYS]
  The error occurred while processing node 213
[CheckIntegrity+206^%SYS.DATABASE:%SYS]
   which is ^A(97096) pointing to the lower level block 285
[CheckIntegrity+207^%SYS.DATABASE:%SYS]
  The lower level block specifies a right link block of 0.
[CheckIntegrity+343^%SYS.DATABASE:%SYS]
  That doesn't match the next pointer node in the pointer block, which 
is 286. [CheckIntegrity+344^%SYS.DATABASE:%SYS]
  Data Level:           # of blocks=1      8kb (0% full)
[CheckIntegrity+479^%SYS.DATABASE:%SYS]
  Total:                # of blocks=2      16kb (10% full)
[CheckIntegrity+66^%SYS.DATABASE:%SYS]



Thanks for your ideas and time,

Kind regards,
Fabian


this is the grammar:
----------------------------
grammar integrit;

options {
   language= Java;
}


test:'The lower level block specifies a right link block of '+INT+'.' WS 
debugnote NEWLINE;

firstNodePtrWrong: INT+'. We were expecting it to point to ';


debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';

ID  :   ('a'..'z'|'A'..'Z')+ ;
INT :   '0'..'9'+ ;
NEWLINE:('\r'? '\n');
WS  :   (' '|'\t')+ {skip();} ;

From jimi at temporal-wave.com  Wed Nov 10 09:27:37 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 09:27:37 -0800
Subject: [antlr-interest] ANLTR C++ code generation
In-Reply-To: <AANLkTimwUMDxfcEx1PaSGx2Xry2dSy09O5ObuehoXAZ=@mail.gmail.com>
References: <AANLkTimwUMDxfcEx1PaSGx2Xry2dSy09O5ObuehoXAZ=@mail.gmail.com>
Message-ID: <0bbb01cb80fc$9199f0d0$b4cdd270$@temporal-wave.com>

You can already just compile as C++ and should get no warnings from g++ even
with -Wall. Can you post the warnings and an example of what generates them?
The warnings are likely benign, but I prefer that they are not there.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Amr Muhammad
> Sent: Sunday, October 31, 2010 6:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANLTR C++ code generation
> 
> Hello,
> 
> I wanted to make sure that ANTLR can not generate c++ not c code. As
> the current .c files when compiled with g++, it would issue errors,
> mostly related to pointer cast operations. Also,  i was wondering if
> there was a way to compile the generated c files as c++ files without
> having to do changes in the generated code.
> 
> Thank you for your time.
> 
> --
> Amr Muhammad
> Cairo Univ. Computer Eng. Grad.
> twitter:@amrmuhammad <http://twitter.com/amrmuhammad>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 09:31:39 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 09:31:39 -0800
Subject: [antlr-interest] C code generation differences on Windows
In-Reply-To: <4CCED743.9030208@nasa.gov>
References: <4CCED743.9030208@nasa.gov>
Message-ID: <0bbd01cb80fd$21c60d60$65522820$@temporal-wave.com>

This is likely some error in your process. Other than the library headers
being different, the generated code is exactly the same on all systems so
that you can generate on one system and compile on all the others. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Michael J Iatauro
> Sent: Monday, November 01, 2010 8:06 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C code generation differences on Windows
> 
> Using ANTLR 3.1.3, I'm seeing some odd code generation differences in
> the tree parser between Windows and *nix platforms, specifically having
> to do with token names and IDs, which are causing my tree parser to
> reject all incoming trees.  There are several tokens missing in the
> generated Windows header, and those missing tokens as well as several
> others aren't given strings in the TreeTokenNames array in the C code.
> Even more weirdly, the token that's always expected to be the root is
> given different IDs, even between the parser and the tree parser, which
> is causing the rejection.  Has anybody else seen anything like this, or
> have a sense of what's going on?
> Thanks!
> 
> ~MJI
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 09:34:28 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 09:34:28 -0800
Subject: [antlr-interest] g++ compiler warnings on the generated lexer
	and	parser .c files
In-Reply-To: <201011011053.15176.ssawkar@aehr.com>
References: <201011011053.15176.ssawkar@aehr.com>
Message-ID: <0bbf01cb80fd$86679e50$9336daf0$@temporal-wave.com>

You probably need to suppress the warnings for that. The compiler will get rid of them anyway. I thought that this was already done in the generated header but perhaps a different pragma is required if compiling as C++.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sunil Sawkar
> Sent: Monday, November 01, 2010 10:53 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] g++ compiler warnings on the generated lexer
> and parser .c files
> 
> Hi,
> 
> Is there anyway to get rid of "unused variables"  to eliminate the
> compiler warnings such as:
> 
> algoexprLexer.c: In function ?ANTLR3_INT32
> dfa47_sst(algoexprLexer_Ctx_struct*, ANTLR3_BASE_RECOGNIZER_struct*,
> ANTLR3_INT_STREAM_struct*, ANTLR3_CYCLIC_DFA_struct*, ANTLR3_INT32)?:
> algoexprLexer.c:10940: warning: unused variable ?index47_62?
> algoexprLexer.c:10964: warning: unused variable ?index47_170?
> 
> algoexprParser.c: In function ?algoexprParser_set_op_return
> set_op(algoexprParser_Ctx_struct*)?:
> algoexprParser.c:3478: warning: unused variable ?LA9_1?
> algoexprParser.c: In function ?algoexprParser_algo_vector_return
> algo_vector(algoexprParser_Ctx_struct*)?:
> algoexprParser.c:8901: warning: unused variable ?LA47_1?
> algoexprParser.c:8915: warning: unused variable ?LA47_2?
> 
> I have checked my grammar file to make sure everything in there is
> being used.
> Yet I see these warnings. When I look in the generated source, I can
> see these variables being declared but not referenced anywhere.
> 
> Any help appreciated..
> 
> -Sunil Sawkar
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 09:53:37 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 09:53:37 -0800
Subject: [antlr-interest] error(10): internal error: no such group
	file	ST.stg
In-Reply-To: <441652.43677.qm@web94616.mail.in2.yahoo.com>
References: <441652.43677.qm@web94616.mail.in2.yahoo.com>
Message-ID: <0bc301cb8100$33aba0a0$9b02e1e0$@temporal-wave.com>

StringTemplate is an object oriented template system and only works with
Java and C#

jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of J.R Karthikeyan
> Sent: Sunday, November 07, 2010 11:10 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] error(10): internal error: no such group file
> ST.stg
> 
> Hi,
> 
>    I have the grammar written in antlrworks-1.4 which will generate the
> C code from the grammar. I like the string template feature and would
> like to use it.
> But I am getting the following error
> 
> error(10):  internal error: no such group file ST.stg
> 
> I just changed my options from
> 
> options
> {
> language = C;
> backtrack = true
> }
> 
> to
> 
> 
> options
> {
> language = C;
> backtrack = true;
> output = template;
> rewrite = true;
> }
> 
> Is string template supported for C or am I missing some library files.
> 
> Thanks,
> Jrk.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 09:58:40 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 09:58:40 -0800
Subject: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe works,
	crashes in library
In-Reply-To: <4CD845C4.3060006@gmail.com>
References: <4CD845C4.3060006@gmail.com>
Message-ID: <0bc501cb8100$e8356e70$b8a04b50$@temporal-wave.com>

Keep going with valgrind, but this is either that you are releasing and then
reusing your input file or have not allocated enough memory or something
similar. Look at the output of valgrind closely as it is probably telling
you what you are doing wrong.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Joost Kraaijeveld
> Sent: Monday, November 08, 2010 10:48 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe works,
> crashes in library
> 
> [Note: this is the fourth attempt to post this message so it may appear
> multiple times. Sorry about that.]
> 
> Hi,
> 
> I have a grammar that works OK if the parser and lexer are in the
> executable but that crashes if the parser and lexer are in a library.
> Parsing small files goes OK, but larger files crash. I don't have a
> clue why it does not work. I am hoping that someone is kind enough to
> help with this. Any suggestions are *very* welcome.
> 
> Running the program in GDB crashes (but I cannot find the problem using
> GDB, and believe I have tried).  Running the program with Valgrind does
> NOT crash. Another strange thing is that another grammar/parser/lexer
> using the same kind of setup does not give any problem.
> 
> I have created the smallest possible examples of both programs where
> the only difference is where parser and lexer are. Both programs are
> autotools-project that should work on any platform with autotools
> available. Antlr C-target runtime 3.2 should be in the library path.
> Eclipse 3.6 project files are included.
> 
> A zipped file can be downloaded here:
> 
> http://trac.askesis.nl/downloads/AntlrProblem.tar.bz2
> 
> I also have available a SVN repository that contains the two projects:
> 
> http://trac.askesis.nl/svn/tidbits/AntlrBug/
> http://trac.askesis.nl/svn/tidbits/AntlrDllBug/
> 
> where the first is the all-in-executable and the second is the in-
> library project.
> 
> Running of the programs:
> 
> 1. Unzip the file in directory of choice. It contains the 2 projects.
> 2. For each project do:
> a. cd to the "build" of that project
> b. ../configure
> c. ./make
> d. ./exe/src/yat ../Danu.spec
> where
> ./exe/src/yat is the libtool executable
> ../Danu.spec is the file that should be parsed
> 
> One can comment out parts of the Danu.spec file using C-style "/**/" or
> C++-style "//" comments.
> 
> 
> TIA
> --
> Met vriendelijke groeten,
> 
> Joost Kraaijeveld
> Askesis B.V.
> Molukkenstraat 14
> 6524NB Nijmegen
> tel: 024-3888063 / 06-51855277
> fax: 024-3608416
> web: www.askesis.nl
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Wed Nov 10 10:10:28 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 10:10:28 -0800
Subject: [antlr-interest] Generated Python Parser produces double try:
In-Reply-To: <AANLkTikDoJ46Q+qC=_AM0DGOuYYYfmXCK1+S=oED6mYo@mail.gmail.com>
References: <AANLkTikVW6291E8p=JCaeDNefiv-Tj1i89KoF6Kdaaym@mail.gmail.com>	<AANLkTinq+22S_xia=MQD6hOnQtHKhbW3CmufOVaTAChh@mail.gmail.com>	<AANLkTintnuPhmr454pU0WuGr3AKgSAsVxY5GQ=wDmTUf@mail.gmail.com>
	<AANLkTikDoJ46Q+qC=_AM0DGOuYYYfmXCK1+S=oED6mYo@mail.gmail.com>
Message-ID: <0bf001cb8102$8e18f8b0$aa4aea10$@temporal-wave.com>

I don't think that they Python target is being maintained and so this is
probably a bug. My feeling is that we should delete the targets that are not
being maintained or were never finished as they are misleading people into
using them.

If this is being maintained, then perhaps the maintainer could indicate this
here? Or perhaps someone else wants to take this on?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Matt
> Sent: Wednesday, November 10, 2010 8:49 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Generated Python Parser produces double
> try:
> 
> One last cry for help here - Anyone have *any* idea why a generator
> would be inserting 2 try statements?
> 
> On Wed, Oct 27, 2010 at 2:25 PM, Matt <dopelogik at gmail.com> wrote:
> 
> > Any ideas on how I can debug this?
> >
> >
> > On Tue, Oct 19, 2010 at 11:54 PM, Matt <matt at unformatt.com> wrote:
> >
> >> I'm using antlr 3.1.2 jar on Windows.
> >> The generated Parser.py has a double "try:" generated, but only one
> >> "finally:".
> >>
> >> This seems to happen for every "try" in the Parser.
> >> This is not a problem of indents, but a problem of having unmatched
> >> try/finally.
> >>
> >> e.g.:
> >>
> >> try:
> >>     try:
> >>         # some code
> >>
> >> finally:
> >>     pass
> >>
> >>
> >> SHOULD BE:
> >>
> >> try:
> >>       # some code
> >>
> >> finally:
> >>     pass
> >>
> >>
> >> OR:
> >>
> >> try:
> >>     try:
> >>         # some code
> >>
> >>     finally:
> >>         pass
> >> finally:
> >>     pass
> >>
> >>
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jrkraaijeveld at gmail.com  Wed Nov 10 10:57:57 2010
From: jrkraaijeveld at gmail.com (Joost Kraaijeveld)
Date: Wed, 10 Nov 2010 19:57:57 +0100
Subject: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe works,
 crashes in library
In-Reply-To: <0bc501cb8100$e8356e70$b8a04b50$@temporal-wave.com>
References: <4CD845C4.3060006@gmail.com>
	<0bc501cb8100$e8356e70$b8a04b50$@temporal-wave.com>
Message-ID: <4CDAEB35.8070604@gmail.com>

Hi Jim,

On 10/11/10 18:58, Jim Idle wrote:
> Keep going with valgrind, but this is either that you are releasing and then
> reusing your input file or have not allocated enough memory or something
> similar. Look at the output of valgrind closely as it is probably telling
> you what you are doing wrong.

I am sorry to say but valgrind is not telling anyting: with valgrind the
program runs OK and it just mentions that there are a lot of memory
leaks which seems reasonable because I do not release anything (nor
allocate allocate anything with new or malloc for that part). I also do
not release or reuse the input file.

Actually the program does not contain much code that is written by
myself. The grammar has some calls to functions embedded that just print
the thing that are recognised. And is in calling one of the 4 functions
that the program crashes.

I really think that there is a hidden "you should know this when you
embed antlr in a library" thing that I am not aware of or that there is
something else ( I don't like to shout bug :-))

I attached my valgrind log and again mention
http://trac.askesis.nl/downloads/AntlrProblem.tar.bz2 in the hope that
you can help me to find the problem.

TIA

-- 
Met vriendelijke groeten,

Joost Kraaijeveld
Askesis B.V.
Molukkenstraat 14
6524NB Nijmegen
tel: 024-3888063 / 06-51855277
fax: 024-3608416
web: www.askesis.nl
-------------- next part --------------
A non-text attachment was scrubbed...
Name: valgrind_17704.txt.tar.bz2
Type: application/x-bzip
Size: 1362 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20101110/095cf498/attachment.bin 

From jimi at temporal-wave.com  Wed Nov 10 11:16:52 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 10 Nov 2010 11:16:52 -0800
Subject: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe works,
	crashes in library
In-Reply-To: <4CDAEB35.8070604@gmail.com>
References: <4CD845C4.3060006@gmail.com>
	<0bc501cb8100$e8356e70$b8a04b50$@temporal-wave.com>
	<4CDAEB35.8070604@gmail.com>
Message-ID: <0cf301cb810b$d5188b50$7f49a1f0$@temporal-wave.com>

I can't find the log in this, but I think that you are complicating it by
trying to use autoconf. First just try building the library manually. The
ANTLR build invokes the misguided and convoluted libtool to build the DLL
because autoconf expects that, but you can just make the .so file yourself.
Also check the ldd for your library etc. I don't really have time to go
through all your autoconf stuff, but I doubt that there is a bug in the
ANTLR stuff as lots of people are using shared objects on everything from
Linux to AIX, including myself.

Check the link options are the same as the ANTLR build and that your
LD_LIBRARY_PATH is correct and so on.

Jim

> -----Original Message-----
> From: Joost Kraaijeveld [mailto:jrkraaijeveld at gmail.com]
> Sent: Wednesday, November 10, 2010 10:58 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe
> works, crashes in library
> 
> Hi Jim,
> 
> On 10/11/10 18:58, Jim Idle wrote:
> > Keep going with valgrind, but this is either that you are releasing
> > and then reusing your input file or have not allocated enough memory
> > or something similar. Look at the output of valgrind closely as it is
> > probably telling you what you are doing wrong.
> 
> I am sorry to say but valgrind is not telling anyting: with valgrind
> the program runs OK and it just mentions that there are a lot of memory
> leaks which seems reasonable because I do not release anything (nor
> allocate allocate anything with new or malloc for that part). I also do
> not release or reuse the input file.
> 
> Actually the program does not contain much code that is written by
> myself. The grammar has some calls to functions embedded that just
> print the thing that are recognised. And is in calling one of the 4
> functions that the program crashes.
> 
> I really think that there is a hidden "you should know this when you
> embed antlr in a library" thing that I am not aware of or that there is
> something else ( I don't like to shout bug :-))
> 
> I attached my valgrind log and again mention
> http://trac.askesis.nl/downloads/AntlrProblem.tar.bz2 in the hope that
> you can help me to find the problem.
> 
> TIA
> 
> --
> Met vriendelijke groeten,
> 
> Joost Kraaijeveld
> Askesis B.V.
> Molukkenstraat 14
> 6524NB Nijmegen
> tel: 024-3888063 / 06-51855277
> fax: 024-3608416
> web: www.askesis.nl


From jrkraaijeveld at gmail.com  Thu Nov 11 11:14:06 2010
From: jrkraaijeveld at gmail.com (Joost Kraaijeveld)
Date: Thu, 11 Nov 2010 20:14:06 +0100
Subject: [antlr-interest] Antlr 3.2 C-target lexer/parser in exe works,
 crashes in library
In-Reply-To: <0cf301cb810b$d5188b50$7f49a1f0$@temporal-wave.com>
References: <4CD845C4.3060006@gmail.com>	<0bc501cb8100$e8356e70$b8a04b50$@temporal-wave.com>	<4CDAEB35.8070604@gmail.com>
	<0cf301cb810b$d5188b50$7f49a1f0$@temporal-wave.com>
Message-ID: <4CDC407E.4030402@gmail.com>

Hi Jim,

No suprise to you I assume, but indeed the error was in my own code. And
it was staring me right in the face as the compiler gave me the correct
warning. Silly me.

Joost


From parrt at antlr.org  Thu Nov 11 13:09:49 2010
From: parrt at antlr.org (Terence Parr)
Date: Thu, 11 Nov 2010 13:09:49 -0800
Subject: [antlr-interest] antlr / ST daily builds now available
Message-ID: <6599C8F9-FC78-484C-8D7A-4E1035C3CDCD@antlr.org>

Howdy, I'm running maven as cron job off of mirrored depot:

http://www.antlr.org/depot/antlr3/main/target
http://www.stringtemplate.org/depot/ST3/java/main/target

Links now from download.html on both sites.

Ter


From stephen at hyarros.com  Thu Nov 11 15:34:35 2010
From: stephen at hyarros.com (Stephen Kou)
Date: Thu, 11 Nov 2010 15:34:35 -0800
Subject: [antlr-interest] ".tree" attribute produces a compiler error
Message-ID: <4CDC7D8B.3030402@hyarros.com>

Hi Everyone,

I'm trying to make a tree parser with ANTLR 3.2, and using the '.tree' 
attribute on a rule produces a compiler error:

The rule:
modifiers returns [Modifiers modifier]
   :
   (mod = modifier+)
   {
     $modifier = new Modifiers($mod.tree);
   }
   ;

The offending line of Java code produced:
modifier = new Modifiers((mod != null ? ((CommonTree)mod.tree) : null ));
--> "tree cannot be resolved or is not a field"

I have modify it manually from .tree to .getTree() for the Java to 
compile, there's no field called 'tree'.

Is this a bug, or am I doing something wrong?

Thanks,
Stephen

From jschrod at acm.org  Thu Nov 11 19:00:42 2010
From: jschrod at acm.org (Joachim Schrod)
Date: Fri, 12 Nov 2010 04:00:42 +0100
Subject: [antlr-interest] NoViableAlException
In-Reply-To: <4CDAD51E.2090107@fabianhaupt.de>
References: <4CDAD51E.2090107@fabianhaupt.de>
Message-ID: <ibiakr$bne$1@dough.gmane.org>

Fabian Haupt wrote:
> 
> I'm getting a NoViableAltException: line 1:55 no viable alternative at 
> input '.[CheckIntegrity'
> 
> with the input of
> 'The lower level block specifies a right link block of 0. 
> [CheckIntegrity+343^%SYS.DATABASE:%SYS]'
> starting with the 'test' rule.
> 
> 
> this is the grammar:
> ----------------------------
> grammar integrit;
> 
> options {
>    language= Java;
> }
> 
> 
> test:'The lower level block specifies a right link block of '+INT+'.' WS 
> debugnote NEWLINE;
> 
> firstNodePtrWrong: INT+'. We were expecting it to point to ';
> 
> 
> debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';
> 
> ID  :   ('a'..'z'|'A'..'Z')+ ;
> INT :   '0'..'9'+ ;
> NEWLINE:('\r'? '\n');
> WS  :   (' '|'\t')+ {skip();} ;

Without running it --
You demand a WS in the test rule that will never appear there as
you skip that token. Don't you mean NEWLINE there?

Btw, are you aware that '+' does not mean concatenation in ANTLR,
as it does in Java? It means `repeat one or more times' for the
previous token. Probably most of your pluses should be changed to
spaces. And use parenthesis in your INT definition, for enhanced
readability. You may leave them off at NEWLINE instead...

Then you'll propably run into problems since any '.' that's
followed by ' ' start the recognition of '. We were expecting it to
point to ', without the ability to backtrack when some other
character happens to be the 3rd char -- and that's probably neither
what you want.

Pull your strings out of the parser rules, make proper tokens for
them, and provide token definitions that match all prefixes of your
constant strings. Without that you're going to have a long fight
against the windmill before you.

I hope that gives you some ideas for your further problem analysis,

	Joachim

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From redrackem at yahoo.com  Fri Nov 12 07:46:35 2010
From: redrackem at yahoo.com (Red Rackham)
Date: Fri, 12 Nov 2010 07:46:35 -0800 (PST)
Subject: [antlr-interest] Lexer token gating predicate problems
Message-ID: <770034.94774.qm@web30004.mail.mud.yahoo.com>

Hi I'm new so please go easy on me.? I have a situation where I have a PATH_ID 
that has to allow many characters, and a general ID that has to match many 
characters, but have their unique patterns.

So in my combined grammar in the lexer section, I have defined PATH_ID & 
IDENTIFIER.? I have also other tokens defined like INTEGER,?STRING, etc.

So when I try to run input through the final implemenation (target=Python) I get 

PATH_ID catching IDENTIFIERS, and just about anything else.? What do I do to 
make PATH_ID only activate in context of "include PATH_ID" or "log PATH_ID", and 

never for other identifiers?

I've tried a lot of stuff with reordering tokens, predicates and gating symbols 
and no matter what I've tried it doesn't compile?AND run right.??("The following 

token definitions can never be matched because prior tokens match the same 
input", "rule PATH_ID has no defined parameters", "failed prediate", &c).? If I 
comment out PATH_ID then IDENTIFIER works fine, but I can't have a grammar 
without PATH_ID. 


Thanks in advance!
Mark



      

From sebastien.mosser at gmail.com  Fri Nov 12 07:47:07 2010
From: sebastien.mosser at gmail.com (=?iso-8859-1?Q?S=E9bastien_Mosser?=)
Date: Fri, 12 Nov 2010 16:47:07 +0100
Subject: [antlr-interest] How to implement a "require" mechanism?
Message-ID: <3481DE4D-C15A-400F-B37C-1D870E1AB939@gmail.com>

Hi, 

This is my first post on this mailing list. so let's start by a little presentation. I'm a French young researcher (aka 'postdoc'), working on the definition of mechanisms to support separation of concerns approaches.

I'm currently using ANTLR & StringTemplate to implement a translator associated to a prototype. By the way, these two tools are impressive (I previously only work with ANTLR for another project). 

However, I'm encountering a (big) issue. The translator I'm designing must support the definition of a "require" mechanism. A source file "x" must be able to require the content of another source file "y".

The translator first start by building an AST, and then a tree grammar visit the AST and use the appropriate templates. My first idea is to implement something like the following snippet in the grammar:

require: 'require' fileName=STRING ';' 	{ 
					  build the AST associated to $fileName;
					  insert its content inside the current one;
					}

however, I have no idea on how to implement the second actions, that is, including the content of another AST into this one. I'm not even sure this is the right solution to my problem :'(. Is preprocessing a better solution?

Any ideas?

Cheers, 

--
 S?bastien

From mike.matera at xilinx.com  Fri Nov 12 09:36:43 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Fri, 12 Nov 2010 09:36:43 -0800
Subject: [antlr-interest] How to implement a "require" mechanism?
In-Reply-To: <3481DE4D-C15A-400F-B37C-1D870E1AB939@gmail.com>
References: <3481DE4D-C15A-400F-B37C-1D870E1AB939@gmail.com>
Message-ID: <09226457-7707-4059-a386-a9db526bf27f@SG2EHSMHS001.ehs.local>

Hi Sebastien,

There's an ANTLR wiki entry that shows how to do this:

> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057

It works by inserting tokens into your token stream which has the effect 
of generating an AST at the point of the require.

Cheers
./m

? wrote:
> Hi, 
> 
> This is my first post on this mailing list. so let's start by a little presentation. I'm a French young researcher (aka 'postdoc'), working on the definition of mechanisms to support separation of concerns approaches.
> 
> I'm currently using ANTLR & StringTemplate to implement a translator associated to a prototype. By the way, these two tools are impressive (I previously only work with ANTLR for another project). 
> 
> However, I'm encountering a (big) issue. The translator I'm designing must support the definition of a "require" mechanism. A source file "x" must be able to require the content of another source file "y".
> 
> The translator first start by building an AST, and then a tree grammar visit the AST and use the appropriate templates. My first idea is to implement something like the following snippet in the grammar:
> 
> require: 'require' fileName=STRING ';' 	{ 
> 					  build the AST associated to $fileName;
> 					  insert its content inside the current one;
> 					}
> 
> however, I have no idea on how to implement the second actions, that is, including the content of another AST into this one. I'm not even sure this is the right solution to my problem :'(. Is preprocessing a better solution?
> 
> Any ideas?
> 
> Cheers, 
> 
> --
>  S?bastien
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From isabelle.perseil at enst.fr  Fri Nov 12 11:59:36 2010
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Fri, 12 Nov 2010 20:59:36 +0100
Subject: [antlr-interest] =?iso-8859-1?q?_1st_CALL_FOR_PAPERS_=3A_UML=26AA?=
 =?iso-8859-1?q?DL=922011?=
Message-ID: <18155e83f79a0f5ce948a9bfa9926ba5.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                     CALL FOR PAPERS:  UML&AADL?2011
           http://www.artist-embedded.org/artist/UML-AADL-2011.html

                Workshop held in conjunction with ICECCS 2011
                The sixteenth IEEE International Conference on
                    Engineering of Complex Computer Systems
                        http://www.iceccs.org/2011/
                               April 27th, 2011
                                Las Vegas, USA

************************************************************************

          Submission deadline (may be extended): November 30th, 2010
          ----------------------------------------------------------



Topics
======
New real-time systems have increasingly complex architectures because of
the intricacy of the multiple interdependent features they have to manage.
They must meet new requirements of reusability, interoperability,
flexibility and portability. These new dimensions favor the use of an
architecture description language that offers a global vision of the
system, and which is particularly suitable for handling real-time
characteristics.

Due to the even more increased complexity of distributed, real-time and
embedded systems (DRE), the need for a model-driven approach is more
obvious in this domain than in monolithic RT systems. The purpose of this
workshop is to provide an opportunity to gather researchers and industrial
practitioners to survey existing efforts related to behavior modeling and
model-based analysis of DRE systems.

This workshop seeks contributions from researchers and practitioners
interested in all aspects of the representation, analysis, and
implementation of DRE system behavior and/or architecture models. To this
end, we solicit papers (no more than 6 pages long) related to, but not
limited to, the following principal topics:

- Modeling languages integration (MARTE+SysML+AADL)
- Intensive use of AADL annexes (as ARINC 653, Programming Annex, Behavior
  Annex, Data Modeling Annexes, Error Modeling Annex)
- Automated System Engineering and System Composition
- Model-based methodologies
- Multi-domain specific modeling languages
- Model-based engineering Process with AADL
- Architectural analysis domain methods
- Real-time Software/System development issues
- Integration of different formalisms (e.g., Simulink/StateFlow, StateMate
  and Scade-drive)
- Integration of multiple domains of architectural analysis
- Model transformation and generative approaches
- Model Checking of architecture specifications
- ADLs behavioral models simulation, Scheduling analysis and Worst-case
  execution time prediction
- Assuring implementation correctness to architectural specification and
  analysis
- Tool chains facilitating architecture centric development

Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper via
easychair at:
http://www.easychair.org/conferences/?conf=umlaadl2011

Papers should not exceed 6 pages. Submitted manuscripts should be in
English and
formatted in the style of the IEEE Computer Society Proceedings Format.
(ftp://pubftp.computer.org/press/outgoing/proceedings/instruct.doc)
Preferably, submissions should be in PDF format.

Slides will be made available through the workshop website.

All selected papers will be published in the IEEE Computer Society Press
Proceedings.

IMPORTANT DATES
===============
Submission deadline:             November 30th, 2010
All Notification of acceptance:  December 18th, 2009
Final version due:               December 20th, 2010
Workshop date:                   April 27th, 2011


Organizational sponsors
=======================
ARTIST NoE
OMG

Organizers and Program Steering committee
=========================================
Marc Aiguier (Ecole Centrale Paris, MAS, France)
Jean-Michel Bruel (IRIT, France)
Robert De Simone (INRIA, France)
S?bastien G?rard (CEA-LIST, France)
Isabelle Perseil (INSERM, France)

Program Chairs
==============
Robert De Simone (INRIA, France)
Isabelle Perseil (INSERM, France)

Publicity Chair
===============
Sun Meng (CWI, The Netherlands)

IEEE CS TCCX Coordinator
========================
Mike Hinchey (Lero, Ireland)

Programme Committee
===================
Marc Aiguier (?cole Centrale Paris, MAS, France)
Yamine Ait Ameur (LISI / ENSMA, France)
Keijiro Araki (Kyushu University, Japan)
Sue Black (University of Westminster, UK)
Karin Breitman (Universidade Cat?lica do Rio de Janeiro, Brazil)
Radu Calinescu (University of Oxford, UK)
Daniela Cancila (CEA LIST, France - Sherpa Engineering, France)
Julien Delange (ESA, Netherlands)
Juan Antonio de la Puente (Universidad Polit?cnica de Madrid, Spain)
Bruce Douglass (IBM, USA)
Vincent Englebert (University of Namur, Belgium)
Huascar Espinoza (TECNALIA , Spain)
Jean-Marie Farines (UFSC Florian?polis, Brazil)
Sandra C. P. Ferraz Fabbri (Federal University of S?o Carlos, Brazil)
Mamoun Filali (IRIT, France)
Anthony Finkelstein (University College London, UK)
Robert France (Colorado State University, USA)
Emmanuel Gaudin (PragmaDev, France)
S?bastien G?rard (CEA-LIST, France)
Itana Maria de Souza Gimenes (UEM, Brazil)
Mark Grechanik (University of Illinois, USA)
J?rgen Hansson (Link?ping University, Sweden)
Jozef Hooman (Embedded Systems Institute, The Netherlands)
J?r?me Hugues (ISAE, France)
Daniel Krob ( CNRS. Ecole Polytechnique, France)
Johan Lilius (?bo Akademi University, Finland)
Ricardo J. Machado (University of Minho, Portugal)
Julio Medina (University of Cantabria, Spain)
Sun Meng (CWI, The Netherlands)
Dominique Mery (LORIA, France)
Thierry Millan (IRIT, France)
Henry Muccini (University of L?Aquila, Italy)
Ileana Ober (IRIT - University of Toulouse, France)
Richard Paige (University of York, UK)
Laurent Pautet (Telecom ParisTech, France)
Robert Pettit (George Mason University, USA)
Alfonso Pierantonio (Universit? degli Studi dell?Aquila, Italy)
Alek Radjenovic (University of York, United Kingdom)
Marc Reynolds (University of Western Australia, Australia)
Jos? Ra?l Romero Salguero (Universidad de C?rdoba, Spain)
David R?thlisberger (University of Bern, Switzerland)
Bernhard Rumpe (Braunschweig University of Technology, Germany)
Douglas C. Schmidt (Vanderbild University, USA)
Fran?oise Simonot Lion (LORIA, France)
Frank Singhoff (University of Brest, France)
Oleg Sokolsky (University of Pennsylvania, USA)
J?rn Guy S?? ( University of Queensland, Australia)
Jing Sun (University of Auckland, New Zealand)
Jun Suzuki (University of Massachusetts, USA)
Bedir Tekinerdo&#287;an (Bilkent University, Turkey)
Martin T?rngren (KTH, Sweden)
Antonio Vallecillo (Universidad de M?laga, Spain)
Stefan Van Baelen (K.U.Leuven, Belgium)
Tullio Vardanega (University of Padua, Italy)
Fran?ois Vernadat (CNRS-LAAS, France)
Thomas Vergnaud (THALES, France)
Eugenio Villar (Universidad de Cantabria, Spain)
Tim Weilkiens (oose GmbH, Germany)
Sergio Yovine (CNRS-Verimag, France / Universidad de Buenos Aires)
Bechir Zalila (University of Sfax, Tunisia)





From jimi at temporal-wave.com  Fri Nov 12 13:10:53 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 12 Nov 2010 13:10:53 -0800
Subject: [antlr-interest] NoViableAlException
In-Reply-To: <ibiakr$bne$1@dough.gmane.org>
References: <4CDAD51E.2090107@fabianhaupt.de> <ibiakr$bne$1@dough.gmane.org>
Message-ID: <01c701cb82ae$172a2730$457e7590$@temporal-wave.com>

Parsing cache error messages eh?


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Joachim Schrod
> Sent: Thursday, November 11, 2010 7:01 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] NoViableAlException
> 
> Fabian Haupt wrote:
> >
> > I'm getting a NoViableAltException: line 1:55 no viable alternative
> at
> > input '.[CheckIntegrity'
> >
> > with the input of
> > 'The lower level block specifies a right link block of 0.
> > [CheckIntegrity+343^%SYS.DATABASE:%SYS]'
> > starting with the 'test' rule.
> >
> >
> > this is the grammar:
> > ----------------------------
> > grammar integrit;
> >
> > options {
> >    language= Java;
> > }
> >
> >
> > test:'The lower level block specifies a right link block of '+INT+'.'
> > WS debugnote NEWLINE;
> >
> > firstNodePtrWrong: INT+'. We were expecting it to point to ';
> >
> >
> > debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';
> >
> > ID  :   ('a'..'z'|'A'..'Z')+ ;
> > INT :   '0'..'9'+ ;
> > NEWLINE:('\r'? '\n');
> > WS  :   (' '|'\t')+ {skip();} ;
> 
> Without running it --
> You demand a WS in the test rule that will never appear there as you
> skip that token. Don't you mean NEWLINE there?

This is correct, you are asking for WS that will be skipped, but also, hard
coding the specific message is so long will get you in to trouble I think.
You are probably better off with awk for something like this I think.


Jim


From pat at pat.net  Fri Nov 12 13:25:47 2010
From: pat at pat.net (Patrick Niemeyer)
Date: Fri, 12 Nov 2010 15:25:47 -0600
Subject: [antlr-interest] Imaginary node construction question and some
	feature thoughts...
Message-ID: <68A3D10F-B07D-4718-BD90-D3665FED7803@pat.net>


1)  I know that there is a syntax for constructing an imaginary node based on a single real token, but I'm wondering if there is some convenient way for me to initialize my node such that it spans all of the tokens matched...

So, for example in the following:

primary_expression_start   primary_expression_part* ->^(AST_PRIMARY_EXPRESSION primary_expression_start primary_expression_part*)

I'd like my ASTPrimaryExpresion node to correspond to start and stop tokens and text for the whole matched expression.  Of course I can implement that with a custom node, or action, but I am wondering if there is some easy way that I'm missing (maybe using parenthesis?)

I am also wondering if that wouldn't be a reasonable default behavior for imaginary nodes, to represent the span of tokens that they contain by start and stop token and text value spanning all of them.

2) I am actually using heterogeneous node types and so my rule looks like this:

primary_expression_start   primary_expression_part* ->^(AST_PRIMARY_EXPRESSION<ASTPrimaryExpression> primary_expression_start primary_expression_part*)

I am wondering if in the future we could do away with having to declare a token type for the imaginary node as well as reference the heterogeneous node type... i.e. could we just implicitly create a node type for it...  I guess I could just use a single bogus "MYNODE" type or something everywhere, but it just seems wrong.


thanks,
Pat Niemeyer


From fabian at fabianhaupt.de  Fri Nov 12 15:40:59 2010
From: fabian at fabianhaupt.de (Fabian Haupt)
Date: Sat, 13 Nov 2010 00:40:59 +0100
Subject: [antlr-interest] NoViableAlException
In-Reply-To: <ibiakr$bne$1@dough.gmane.org>
References: <4CDAD51E.2090107@fabianhaupt.de> <ibiakr$bne$1@dough.gmane.org>
Message-ID: <4CDDD08B.1060205@fabianhaupt.de>

I've figured the + things out, sry about that. It's been a long time 
since I wrote my last antlr grammar.

I'll do the refactorings you suggested and let you know how it turns out
:)

Thanks for your time!

cheers,
Fabian

On 11/12/2010 04:00 AM, Joachim Schrod wrote:
> Fabian Haupt wrote:
>>
>> I'm getting a NoViableAltException: line 1:55 no viable alternative at
>> input '.[CheckIntegrity'
>>
>> with the input of
>> 'The lower level block specifies a right link block of 0.
>> [CheckIntegrity+343^%SYS.DATABASE:%SYS]'
>> starting with the 'test' rule.
>>
>>
>> this is the grammar:
>> ----------------------------
>> grammar integrit;
>>
>> options {
>>     language= Java;
>> }
>>
>>
>> test:'The lower level block specifies a right link block of '+INT+'.' WS
>> debugnote NEWLINE;
>>
>> firstNodePtrWrong: INT+'. We were expecting it to point to ';
>>
>>
>> debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';
>>
>> ID  :   ('a'..'z'|'A'..'Z')+ ;
>> INT :   '0'..'9'+ ;
>> NEWLINE:('\r'? '\n');
>> WS  :   (' '|'\t')+ {skip();} ;
>
> Without running it --
> You demand a WS in the test rule that will never appear there as
> you skip that token. Don't you mean NEWLINE there?
>
> Btw, are you aware that '+' does not mean concatenation in ANTLR,
> as it does in Java? It means `repeat one or more times' for the
> previous token. Probably most of your pluses should be changed to
> spaces. And use parenthesis in your INT definition, for enhanced
> readability. You may leave them off at NEWLINE instead...
>
> Then you'll propably run into problems since any '.' that's
> followed by ' ' start the recognition of '. We were expecting it to
> point to ', without the ability to backtrack when some other
> character happens to be the 3rd char -- and that's probably neither
> what you want.
>
> Pull your strings out of the parser rules, make proper tokens for
> them, and provide token definitions that match all prefixes of your
> constant strings. Without that you're going to have a long fight
> against the windmill before you.
>
> I hope that gives you some ideas for your further problem analysis,
>
> 	Joachim
>

From fabian at fabianhaupt.de  Fri Nov 12 15:41:39 2010
From: fabian at fabianhaupt.de (Fabian Haupt)
Date: Sat, 13 Nov 2010 00:41:39 +0100
Subject: [antlr-interest] NoViableAlException
In-Reply-To: <01c701cb82ae$172a2730$457e7590$@temporal-wave.com>
References: <4CDAD51E.2090107@fabianhaupt.de> <ibiakr$bne$1@dough.gmane.org>
	<01c701cb82ae$172a2730$457e7590$@temporal-wave.com>
Message-ID: <4CDDD0B3.5000202@fabianhaupt.de>

yep ;) I want a nicer view of the dbase structure (and errors)


On 11/12/2010 10:10 PM, Jim Idle wrote:
> Parsing cache error messages eh?
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Joachim Schrod
>> Sent: Thursday, November 11, 2010 7:01 PM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] NoViableAlException
>>
>> Fabian Haupt wrote:
>>>
>>> I'm getting a NoViableAltException: line 1:55 no viable alternative
>> at
>>> input '.[CheckIntegrity'
>>>
>>> with the input of
>>> 'The lower level block specifies a right link block of 0.
>>> [CheckIntegrity+343^%SYS.DATABASE:%SYS]'
>>> starting with the 'test' rule.
>>>
>>>
>>> this is the grammar:
>>> ----------------------------
>>> grammar integrit;
>>>
>>> options {
>>>     language= Java;
>>> }
>>>
>>>
>>> test:'The lower level block specifies a right link block of '+INT+'.'
>>> WS debugnote NEWLINE;
>>>
>>> firstNodePtrWrong: INT+'. We were expecting it to point to ';
>>>
>>>
>>> debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';
>>>
>>> ID  :   ('a'..'z'|'A'..'Z')+ ;
>>> INT :   '0'..'9'+ ;
>>> NEWLINE:('\r'? '\n');
>>> WS  :   (' '|'\t')+ {skip();} ;
>>
>> Without running it --
>> You demand a WS in the test rule that will never appear there as you
>> skip that token. Don't you mean NEWLINE there?
>
> This is correct, you are asking for WS that will be skipped, but also, hard
> coding the specific message is so long will get you in to trouble I think.
> You are probably better off with awk for something like this I think.
>
>
> Jim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From redrackem at yahoo.com  Fri Nov 12 15:44:05 2010
From: redrackem at yahoo.com (Red Rackham)
Date: Fri, 12 Nov 2010 15:44:05 -0800 (PST)
Subject: [antlr-interest] Lexer token gating predicate problems
In-Reply-To: <770034.94774.qm@web30004.mail.mud.yahoo.com>
References: <770034.94774.qm@web30004.mail.mud.yahoo.com>
Message-ID: <246463.94056.qm@web30007.mail.mud.yahoo.com>

I got it working... thanks.

For those who come later...

1. Add lexer header code?functions?for enabling, disabling, reading a global 
state variable like "pathIdEnabled", make sure in each function to declare 
global pathIdEnabled, like this;
@lexer::header {
??? pathTokenEnabled = False
??? def isEnabledPathToken():
??????? global pathTokenEnabled
??????? print 'isEnabledPathToken returning ' + str(pathTokenEnabled)
??????? return pathTokenEnabled
??? def enablePathToken():
??????? global pathTokenEnabled
??????? print 'Enabling path Token Lexing'
??????? pathTokenEnabled = True
??? def disablePathToken():
??????? global pathTokenEnabled
??????? print 'Disabling path Token Lexing'
??????? pathTokenEnabled = False
??? }
2. Make tokens for 'include' & 'log', with calls to lexer header code to enable 
path id like this:
LOG: 'log' {enablePathToken()};
3. Make tokens for EOL or SEMI (or whatever) with calls to lexer?header code to 
disable path id like this:
EOL: ('\r\n'?| '\n') {disablePathToken()};
4.?Rename PATH_ID token into fragment PATH_ID_PRE.
5. Make new token PATH_ID that only triggers if pathIdEnabled is True like this;
PATH_ID: {isEnabledPathToken()}?=> PATH_ID_PRE ;

Worked for me.? Glad I was able to figure it out myself finally.? Haha.

Mark


----- Original Message ----
From: Red Rackham <redrackem at yahoo.com>
To: antlr-interest at antlr.org
Sent: Fri, November 12, 2010 7:46:35 AM
Subject: [antlr-interest] Lexer token gating predicate problems

Hi I'm new so please go easy on me.? I have a situation where I have a PATH_ID 
that has to allow many characters, and a general ID that has to match many 
characters, but have their unique patterns.

So in my combined grammar in the lexer section, I have defined PATH_ID & 
IDENTIFIER.? I have also other tokens defined like INTEGER,?STRING, etc.

So when I try to run input through the final implemenation (target=Python) I get 


PATH_ID catching IDENTIFIERS, and just about anything else.? What do I do to 
make PATH_ID only activate in context of "include PATH_ID" or "log PATH_ID", and 


never for other identifiers?

I've tried a lot of stuff with reordering tokens, predicates and gating symbols 
and no matter what I've tried it doesn't compile?AND run right.??("The following 


token definitions can never be matched because prior tokens match the same 
input", "rule PATH_ID has no defined parameters", "failed prediate", &c).? If I 
comment out PATH_ID then IDENTIFIER works fine, but I can't have a grammar 
without PATH_ID. 


Thanks in advance!
Mark



? ? ? 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From pat at pat.net  Fri Nov 12 13:53:13 2010
From: pat at pat.net (Patrick Niemeyer)
Date: Fri, 12 Nov 2010 15:53:13 -0600
Subject: [antlr-interest] Imaginary node construction question and some
	feature thoughts...
In-Reply-To: <68A3D10F-B07D-4718-BD90-D3665FED7803@pat.net>
References: <68A3D10F-B07D-4718-BD90-D3665FED7803@pat.net>
Message-ID: <11742FBE-5AA5-41A6-B4B7-9F907A3BDF49@pat.net>


On Nov 12, 2010, at 3:25 PM, Patrick Niemeyer wrote:

> I am also wondering if that wouldn't be a reasonable default behavior for imaginary nodes, to represent the span of tokens that they contain by start and stop token and text value spanning all of them.

Actually, it is setting the start and stop tokens.   I must be blind.  Sorry.


Pat


From jschrod at acm.org  Sat Nov 13 06:55:57 2010
From: jschrod at acm.org (Joachim Schrod)
Date: Sat, 13 Nov 2010 15:55:57 +0100
Subject: [antlr-interest] NoViableAlException
In-Reply-To: <01c701cb82ae$172a2730$457e7590$@temporal-wave.com>
References: <4CDAD51E.2090107@fabianhaupt.de> <ibiakr$bne$1@dough.gmane.org>
	<01c701cb82ae$172a2730$457e7590$@temporal-wave.com>
Message-ID: <ibm8tt$vj1$1@dough.gmane.org>

Jim Idle wrote:

> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Joachim Schrod
>> 
>> Fabian Haupt wrote:
>> >
>> > I'm getting a NoViableAltException: line 1:55 no viable alternative
>> at
>> > input '.[CheckIntegrity'
>> >
>> > with the input of
>> > 'The lower level block specifies a right link block of 0.
>> > [CheckIntegrity+343^%SYS.DATABASE:%SYS]'
>> > starting with the 'test' rule.
>> >
>> >
>> > this is the grammar:
>> > ----------------------------
>> > grammar integrit;
>> >
>> > options {
>> >    language= Java;
>> > }
>> >
>> >
>> > test:'The lower level block specifies a right link block of '+INT+'.'
>> > WS debugnote NEWLINE;
>> >
>> > firstNodePtrWrong: INT+'. We were expecting it to point to ';
>> >
>> >
>> > debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';
>> >
>> > ID  :   ('a'..'z'|'A'..'Z')+ ;
>> > INT :   '0'..'9'+ ;
>> > NEWLINE:('\r'? '\n');
>> > WS  :   (' '|'\t')+ {skip();} ;
>> 
>> Without running it --
>> You demand a WS in the test rule that will never appear there as you
>> skip that token. Don't you mean NEWLINE there?
> 
> This is correct, you are asking for WS that will be skipped, but also, hard
> coding the specific message is so long will get you in to trouble I think.
> You are probably better off with awk for something like this I think.

If Fabian's error messages are basically just regexps, probably.
But if the information structure is context free, ANTLR is a very
good bet.

I'm currently using ANTLR to extract data from invoice texts in PDF
files and to assure that I detect all information and that the
expected invoice structure is complete and hasn't changed. This is
very hard to do with regexps, but has the same base problem as
Fabian: Lots of long constant text strings that serve basically as
keywords and mark `places' in that PDF document. ANTLR is a great
tool to accomplish structure checking, with it's parser generation
facilities. If the lexical input is highly unstructured, it's a bit
of a pain in the back, but can be handled. (I ran into similar
lexer problem as Fabian. Eventually, I resolved them by using
jflex. ;-))

Cheers,
	Joachim

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From jschrod at acm.org  Sat Nov 13 07:02:12 2010
From: jschrod at acm.org (Joachim Schrod)
Date: Sat, 13 Nov 2010 16:02:12 +0100
Subject: [antlr-interest] throws-spec in ANTLR rules -- does nothing?
Message-ID: <ibm99l$1ec$1@dough.gmane.org>

Hi,

I'm using ANTLR 3.2 with Java code generation.

According to the ANTLR book, p.94, and
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1956, a rule
may have a ?throws-spec?. But I didn't find an explanation of that
part -- neither in the book nor on the Web site.

If I have a rule that starts with

   remarks throws DiscardPDFException : ...

I would have thought that DiscardPDFException is added to the
throws clause of the generated method; but it isn't done so. ANTLR
expects that clause without error messages, but also without effects.

So my question is:
What's the spec for ?throws-spec?, syntactically and semantically?

Thanks in advance for any answer,

	Joachim

PS: For now I can make DiscardPDFException a run-time exception,
but I would have preferred to force the caller to declare a catch
clause.

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From fabian at fabianhaupt.de  Sat Nov 13 09:47:38 2010
From: fabian at fabianhaupt.de (Fabian Haupt)
Date: Sat, 13 Nov 2010 18:47:38 +0100
Subject: [antlr-interest] NoViableAlException
In-Reply-To: <ibm8tt$vj1$1@dough.gmane.org>
References: <4CDAD51E.2090107@fabianhaupt.de>
	<ibiakr$bne$1@dough.gmane.org>	<01c701cb82ae$172a2730$457e7590$@temporal-wave.com>
	<ibm8tt$vj1$1@dough.gmane.org>
Message-ID: <4CDECF3A.60700@fabianhaupt.de>

My first attempt was to use regexps in perl,
but the error messages don't have enough structure, (and I was too lazy 
to write all those regexps..)

Since I've had a very good experience with antlr some years ago, I 
thought I'll use that, then I'll get the ast for free ;)

I have refactored my grammar and am currently in the process of 
eliminating prefixes in the tokens. (by hand .. is there a tool for that??)

Never heard of jflex, sound interesting, though *read* ;)

Thanks
Fabian

On 11/13/2010 03:55 PM, Joachim Schrod wrote:
> Jim Idle wrote:
>
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Joachim Schrod
>>>
>>> Fabian Haupt wrote:
>>>>
>>>> I'm getting a NoViableAltException: line 1:55 no viable alternative
>>> at
>>>> input '.[CheckIntegrity'
>>>>
>>>> with the input of
>>>> 'The lower level block specifies a right link block of 0.
>>>> [CheckIntegrity+343^%SYS.DATABASE:%SYS]'
>>>> starting with the 'test' rule.
>>>>
>>>>
>>>> this is the grammar:
>>>> ----------------------------
>>>> grammar integrit;
>>>>
>>>> options {
>>>>     language= Java;
>>>> }
>>>>
>>>>
>>>> test:'The lower level block specifies a right link block of '+INT+'.'
>>>> WS debugnote NEWLINE;
>>>>
>>>> firstNodePtrWrong: INT+'. We were expecting it to point to ';
>>>>
>>>>
>>>> debugnote:'['+ID+'+'+INT+'^%SYS.DATABASE:%SYS'+']';
>>>>
>>>> ID  :   ('a'..'z'|'A'..'Z')+ ;
>>>> INT :   '0'..'9'+ ;
>>>> NEWLINE:('\r'? '\n');
>>>> WS  :   (' '|'\t')+ {skip();} ;
>>>
>>> Without running it --
>>> You demand a WS in the test rule that will never appear there as you
>>> skip that token. Don't you mean NEWLINE there?
>>
>> This is correct, you are asking for WS that will be skipped, but also, hard
>> coding the specific message is so long will get you in to trouble I think.
>> You are probably better off with awk for something like this I think.
>
> If Fabian's error messages are basically just regexps, probably.
> But if the information structure is context free, ANTLR is a very
> good bet.
>
> I'm currently using ANTLR to extract data from invoice texts in PDF
> files and to assure that I detect all information and that the
> expected invoice structure is complete and hasn't changed. This is
> very hard to do with regexps, but has the same base problem as
> Fabian: Lots of long constant text strings that serve basically as
> keywords and mark `places' in that PDF document. ANTLR is a great
> tool to accomplish structure checking, with it's parser generation
> facilities. If the lexical input is highly unstructured, it's a bit
> of a pain in the back, but can be handled. (I ran into similar
> lexer problem as Fabian. Eventually, I resolved them by using
> jflex. ;-))
>
> Cheers,
> 	Joachim
>

From vijaydone at gmail.com  Sun Nov 14 04:24:29 2010
From: vijaydone at gmail.com (vijay e)
Date: Sun, 14 Nov 2010 17:54:29 +0530
Subject: [antlr-interest] pls help needed--macro expansion in a C file
Message-ID: <AANLkTi=2YAK77vt+udcViB1UKX1FOuZwz14p=HWHz0wU@mail.gmail.com>

hi,

hi to all, i need a  grammar tht expands macro preprocessor in a C file, any
one pls help me, i am tryin it with the help of C preprocessor grammar
provided by antlr but its giving errors when i compile it, i am unable to
compile it properly:(
pls help me out if anyone knows how to expand macro preprocessor.

-- 
Vijay.E,
Mtech (Pursuing),
Department of Computer Science,
IIT Madras.

From espina.edgar at gmail.com  Sun Nov 14 06:43:14 2010
From: espina.edgar at gmail.com (Edgar Espina)
Date: Sun, 14 Nov 2010 11:43:14 -0300
Subject: [antlr-interest] ANTLR IDE 2.1.1 released!!!
Message-ID: <AANLkTi=88aGSMnfq8E==cwOusrAQsygdHpWiaQhkn7LK@mail.gmail.com>

Enjoy it!!!

http://goo.gl/YbZV5

-- 
edgar

From bijoys_2000 at yahoo.com  Mon Nov 15 04:19:36 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Mon, 15 Nov 2010 04:19:36 
Subject: [antlr-interest] [SPAM] hey bro ANTLR
Message-ID: deb08b6505cafd8cb637df1e36c36eda@[192.168.1.1]

i saw you can be sent payment <a href="http://bit.ly/dvQTIU">clik shit</a> darkd cocacola cele





From aman.161089 at gmail.com  Mon Nov 15 04:34:24 2010
From: aman.161089 at gmail.com (aman agrawal)
Date: Mon, 15 Nov 2010 18:04:24 +0530
Subject: [antlr-interest] antlr c++ grammer
Message-ID: <AANLkTin_6dWKM2XHWN3LgZT_j_ErNO-NKbq_qH-4+Xyq@mail.gmail.com>

if any one have the c++ grammer for antlr v2 please mail or give the link as
soon as possible

From sebastien.mosser at gmail.com  Mon Nov 15 04:44:27 2010
From: sebastien.mosser at gmail.com (=?iso-8859-1?Q?S=E9bastien_Mosser?=)
Date: Mon, 15 Nov 2010 13:44:27 +0100
Subject: [antlr-interest] How to implement a "require" mechanism?
In-Reply-To: <09226457-7707-4059-a386-a9db526bf27f@SG2EHSMHS001.ehs.local>
References: <3481DE4D-C15A-400F-B37C-1D870E1AB939@gmail.com>
	<09226457-7707-4059-a386-a9db526bf27f@SG2EHSMHS001.ehs.local>
Message-ID: <FDA05614-3747-4333-A63F-366E83A24DDA@gmail.com>


Le 12 nov. 2010 ? 18:36, Michael Matera a ?crit :

> Hi Sebastien,
> 
> There's an ANTLR wiki entry that shows how to do this:
> 
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
> 
> It works by inserting tokens into your token stream which has the effect 
> of generating an AST at the point of the require.

The last code snippet perfectly fits my need. It's a shame that I don't use the "include" keyword when I googled my problem.


However, another simple question: How to handle properly cyclic inclusions?  I basically use a "visitedFile" table declared as a parser member. When I start the 'sub-parser', I set its visited table to the current one. And after the end of the sub-parse, I set mine to the one available in the sub-parser. 

Is there another solution? Mine looks like a hack :S

Cheers, 

--
 S?bastien Mosser
 http://sebastien-mosser.fr





From mike.matera at xilinx.com  Mon Nov 15 10:13:25 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Mon, 15 Nov 2010 10:13:25 -0800
Subject: [antlr-interest] How to implement a "require" mechanism?
In-Reply-To: <FDA05614-3747-4333-A63F-366E83A24DDA@gmail.com>
References: <3481DE4D-C15A-400F-B37C-1D870E1AB939@gmail.com>
	<09226457-7707-4059-a386-a9db526bf27f@SG2EHSMHS001.ehs.local>
	<FDA05614-3747-4333-A63F-366E83A24DDA@gmail.com>
Message-ID: <6b07cacb-fe3f-405b-b335-44f3f25ba633@SG2EHSMHS001.ehs.local>

Hi Sebastien,

I think your visited file table is a perfectly good solution.  I'm 
pretty sure that my parser will go into an infinite loop when that 
happens.  I should fix that.

Cheers
./m


? wrote:
> Le 12 nov. 2010 ? 18:36, Michael Matera a ?crit :
> 
>> Hi Sebastien,
>>
>> There's an ANTLR wiki entry that shows how to do this:
>>
>>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557057
>> It works by inserting tokens into your token stream which has the effect 
>> of generating an AST at the point of the require.
> 
> The last code snippet perfectly fits my need. It's a shame that I don't use the "include" keyword when I googled my problem.
> 
> 
> However, another simple question: How to handle properly cyclic inclusions?  I basically use a "visitedFile" table declared as a parser member. When I start the 'sub-parser', I set its visited table to the current one. And after the end of the sub-parse, I set mine to the one available in the sub-parser. 
> 
> Is there another solution? Mine looks like a hack :S
> 
> Cheers, 
> 
> --
>  S?bastien Mosser
>  http://sebastien-mosser.fr
> 
> 
> 
> 
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From maxgbr at hotmail.it  Mon Nov 15 10:30:02 2010
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Mon, 15 Nov 2010 19:30:02 +0100
Subject: [antlr-interest] Unable To compile Grammars
Message-ID: <BLU0-SMTP57B0D4CEA715B5E671088AB0360@phx.gbl>

  Hi, i'm quite a newbie of ANTLR and I have some problems when i try to 
compile my grammars.
I list the grammars rules (taken from Ivan Brezina's **OracleSQL* 
<http://www.ibrezina.net/OracleSQL.tgz> *Grammar) that generate me some 
troubles

sql_expression
     :    expr_add
     ;
expr_add
     :    expr_mul ( ( PLUS | MINUS | DOUBLEVERTBAR ) expr_mul )*
     ;
expr_mul
     :    expr_sign ( ( STAR | DIVIDE ) expr_sign )*
     ;
expr_sign // in fact this is not "sign" but unary operator
     :    ( PLUS | MINUS | 'PRIOR' | 'CONNECT_BY_ROOT' )? expr_pow
     ;
expr_pow
     :    expr_expr ( EXPONENT expr_expr )*
     ;
expr_expr
     :    datetime_expression
     |    interval_expression
     |    ( expr_paren ) => expr_paren
     |    ( cast_expression) => cast_expression
     |    ( special_expression ) => special_expression
     |    ( analytic_function ) => analytic_function
     |    ( function_expression ) => function_expression
//    |    ( compound_expression ) => compound_expression
     |    ( case_expression ) => case_expression
//    |    ( cursor_expression ) => cursor_expression
     |    ( simple_expression ) => simple_expression
//    |    ( select_expression ) => select_expression replaced with subquery
//    |    object_access_expression
//    |    scalar_subquery_expression
//    |    model_expression
//    |    type_constructor_expression
//    |    variable_expression
//    :    'NULL' | NUMBER | QUOTED_STRING | IDENTIFIER
     |    ( subquery ) => subquery
     ;
expr_paren
     :    LPAREN nested_expression RPAREN
     ;
nested_expression
     :    sql_expression
     ;
function_expression
      :    (function_name|analytic_function_name) LPAREN call_parameters 
RPAREN
     ;

call_parameters
     : STAR
     | call_parameter ( COMMA call_parameter )*
     ;
call_parameter
     :     ( parameter_name ARROW )? nested_expression
     ;
parameter_name
     :    identifier
     ;
case_expression
     :    'CASE' ( simple_case_expression | searched_case_expression ) ( 
else_case_expression )? 'END'
     ;
simple_case_expression
     :    nested_expression ( 'WHEN' nested_expression 'THEN' 
nested_expression )+
     ;
searched_case_expression
     :    ( 'WHEN' sql_condition 'THEN' nested_expression )+
     ;
else_case_expression
     :    'ELSE' nested_expression
     ;

simple_expression
     :    boolean_literal
     |    'SQL' ( FOUND_ATTR | NOTFOUND_ATTR | ISOPEN_ATTR | 
ROWCOUNT_ATTR | BULK_ROWCOUNT_ATTR )
     |    ( cell_assignment ) => cell_assignment // this is used only in 
model_clause s[PROD= 'A' ] = S[ 'a' ] + 1
     |    ( column_spec ) => column_spec
     |    quoted_string
     |    NUMBER
     ;

subquery
     :    LPAREN select_statement RPAREN
     |    LPAREN subquery RPAREN
     ;

datetime_expression
     :
         (     function_expression
         |     cast_expression
         |     simple_expression
         )
         'AT' ('LOCAL' | 'TIME' 'ZONE' ( quoted_string | 'DBTIMEZONE' | 
'SESSIONTIMEZONE' | sql_expression ));

interval_expression
     :
         LPAREN ( function_expression | cast_expression | 
simple_expression ) MINUS ( function_expression | cast_expression | 
simple_expression ) RPAREN
         (    'DAY' (LPAREN NUMBER RPAREN)? 'TO' 'SECOND' (LPAREN NUMBER 
RPAREN)?
         |    'YEAR' (LPAREN NUMBER RPAREN)? 'TO' 'MONTH' (LPAREN NUMBER 
RPAREN)?
         )
     ;

/* 
================================================================================
    Analytic query part
    
================================================================================ 
*/
analytic_function_name
     :
     |     'AVG'        | 'CORR'        | 'COVAR_POP'        | 
'COVAR_SAMP'        | 'COUNT'    | 'CUME_DIST'    | 'DENSE_RANK'
     |     'FIRST'        | 'FIRST_VALUE'        | 'LAG'            | 
'LAST'        | 'LAST_VALUE'    | 'LEAD'    | 'MAX'    | 'MIN'
     |     'NTILE'        | 'PERCENT_RANK'    | 'PERCENTILE_CONT'    | 
'PERCENTILE_DISC'    | 'RANK'    | 'RATIO_TO_REPORT'
     |     'REGR_SLOPE'    | 'REGR_INTERCEPT'    | 'REGR_COUNT'        | 
'REGR_R2'        | 'REGR_AVGX'    | 'REGR_AVGY'
     |     'REGR_SXX'    | 'REGR_SYY'        | 'REGR_SXY'        | 
'ROW_NUMBER'        | 'STDDEV'    | 'STDDEV_POP'
     |     'STDDEV_SAMP'    | 'SUM'            | 'VAR_POP'        | 
'VAR_SAMP'        | 'VARIANCE'     ;

analytic_function_call
     :     analytic_function_name
         LPAREN ( 'DISTINCT' | 'ALL')? sql_expression? (COMMA 
sql_expression)* ( ( 'RESPECT' | 'IGNORE') 'NULLS' )? RPAREN
     ;

analytic_function
     :     analytic_function_call ( ( 'RESPECT' | 'IGNORE') 'NULLS' )?  
'OVER'
         LPAREN .+//analytic_clause
         RPAREN
     ;
/*
analytic_clause
     : query_partition_clause? (order_by_clause windowing_clause?)?
     ;
*/
windowing_clause_part
     :     ( 'UNBOUNDED' ( 'PRECEDING' | 'FOLLOWING' ))
         |     ( 'CURRENT' 'ROW' )
         |     ( sql_expression ( 'PRECEDING' | 'FOLLOWING' ) )
     ;

windowing_clause
     : ('ROWS' | 'RANGE' )
       ( windowing_clause_part | ( 'BETWEEN' windowing_clause_part 'AND' 
windowing_clause_part) )
     ;

/* 
================================================================================
    Cell Assignment
    
================================================================================*/
cell_assignment
     :    measure_column LBRACK ( multi_column_for_loop | 
cell_assignment_exprs ) RBRACK
     ;

cell_assignment_exprs
     :    cell_assignment_expr ( COMMA cell_assignment_expr )*
     ;

cell_assignment_expr
     :    sql_condition | sql_expression | single_column_for_loop
     ;

measure_column
     :    column_name
     ;

single_column_for_loop
     :    'FOR' column_name
         (    'IN' LPAREN ( literals | subquery ) RPAREN
         |    ( 'LIKE' pattern )? 'FROM' literal 'TO' literal ( 
'INCREMENT' | 'DECREMENT' ) literal
         )
     ;
pattern
     :    quoted_string
     ;

literal
     :    ( PLUS | MINUS )? NUMBER
     |    quoted_string
     ;

literals
     :    literal ( COMMA literal )*
     ;

multi_column_for_loop
     :    'FOR' LPAREN column_specs RPAREN 'IN' LPAREN ( 
bracket_literals_list | subquery ) RPAREN
     ;

bracket_literals
     :    LPAREN literals RPAREN
     ;

bracket_literals_list
     :    bracket_literals ( COMMA bracket_literals )*
     ;

/* 
================================================================================
    Columns spec
    
================================================================================ 
*/
column_spec
     :     sql_identifier DOT sql_identifier DOT sql_identifier
     |     sql_identifier DOT sql_identifier
     |     sql_identifier
     |     pseudo_column
     ;
//TODO more pseudocolumns here - especially those who are reserved words
pseudo_column
     :     'NULL'
         |     'SYSDATE'
     |     'ROWID'
     |     'ROWNUM'
     |     'LEVEL'                // hierarchical query
     |     'CONNECT_BY_ISLEAF'
     |     'CONNECT_BY_ISCYCLE'
     |     'VERSIONS_STARTTIME'    // flashback query
     |     'VERSIONS_STARSCN'
     |     'VERSIONS_ENDTIME'
     |     'VERSIONS_ENDSCN'
     |     'VERSIONS_XID'
     |     'VERSIONS_OPERATION'
     |     'COLUMN_VALUE'    // XMLTABLE query
     |     'OBJECT_ID'        //
     |     'OBJECT_VALUE'    //
     |     'ORA_ROWSCN'        //
     |     'XMLDATA'
     ;

column_specs
     :    column_spec ( COMMA column_spec )*
     ;

/* 
================================================================================
    Special expressions
    
================================================================================ 
*/
special_expression
     :    cluster_set_clause
     ;
cluster_set_clause
     :     'CLUSTER_SET' LPAREN column_spec (COMMA column_spec)? (COMMA 
NUMBER)? 'USING' (column_specs | STAR) RPAREN
     ;

cast_expression
     :    'CAST' LPAREN (sql_expression | 'MULTISET' subquery) 'AS' 
(datatype|sql_identifier) RPAREN
     ;
/*datatype
     :    'BINARY_INTEGER'
     |    'BINARY_FLOAT'
     |    'BINARY_DOUBLE'
     |    'NATURAL'
     |    'POSITIVE'
     |    ( 'NUMBER' | 'NUMERIC' | 'DECIMAL' | 'DEC' ) ( LPAREN NUMBER ( 
COMMA NUMBER )? RPAREN )?
     |    'LONG' ( 'RAW')? ( LPAREN NUMBER RPAREN )?
     |    'RAW' ( LPAREN NUMBER RPAREN )?
     |    'BOOLEAN'
     |    'DATE'
     |    'INTERVAL' 'DAY' ( LPAREN NUMBER RPAREN )? 'TO' 'SECOND' ( 
LPAREN NUMBER RPAREN )?
     |    'INTERVAL' 'YEAR' ( LPAREN NUMBER RPAREN )? 'TO' 'MONTH'
     |    ( 'TIME' | 'TIMESTAMP' ) ( LPAREN NUMBER RPAREN )? ( 'WITH' ( 
'LOCAL' )? 'TIME' 'ZONE' )?
     |    'INTEGER'
     |    'INT'
     |    'SMALLINT'
     |    'FLOAT' ( LPAREN NUMBER RPAREN )?
     |    'REAL'
     |    'DOUBLE' 'PRECISION'
     |    'CHAR'      ( 'VARYING' )? ( LPAREN NUMBER ( 'BYTE' | 'CHAR' 
)? RPAREN )? ( 'CHARACTER' 'SET' ( identifier | column_spec CHARSET_ATTR 
) )?
     |    'VARCHAR'                  ( LPAREN NUMBER ( 'BYTE' | 'CHAR' 
)? RPAREN )? ( 'CHARACTER' 'SET' ( identifier | column_spec CHARSET_ATTR 
) )?
     |    'VARCHAR2'                 ( LPAREN NUMBER ( 'BYTE' | 'CHAR' 
)? RPAREN )? ( 'CHARACTER' 'SET' ( identifier | column_spec CHARSET_ATTR 
) )?
     |    'CHARACTER' ( 'VARYING' )? ( LPAREN NUMBER RPAREN )?
     |    'NCHAR'     ( 'VARYING' )? ( LPAREN NUMBER RPAREN )?
     |    'NVARCHAR'  ( LPAREN NUMBER RPAREN )?
     |    'NVARCHAR2' ( LPAREN NUMBER RPAREN )?
     |    'NATIONAL'  ( 'CHARACTER' | 'CHAR' ) ( 'VARYING' )? ( LPAREN 
NUMBER RPAREN )?
     |    'MLSLABEL'
     |    'PLS_INTEGER'
     |    'BLOB'
     |    'CLOB' ( 'CHARACTER' 'SET' ( identifier | column_spec 
CHARSET_ATTR ) )?
     |    'NCLOB'
     |    'BFILE'
     |    'ROWID'
     |    'UROWID' ( LPAREN NUMBER RPAREN )?
     ;*/

boolean_literal
     :    'TRUE' | 'FALSE'
     ;

t_alias
     : alias_name=sql_identifier //{ $alias_name.setType($alias_name, 
T_ALIAS); }
//        { $type = T_ALIAS; }
     ;

c_alias
     : ('AS'? sql_identifier) //{ $alias_name.setType($alias_name, 
T_ALIAS); }
     | 'AS'
     ;

alias
     :    'AS' sql_identifier?
     ;

function_name
     :    sql_identifier DOT sql_identifier DOT sql_identifier
     |     sql_identifier DOT sql_identifier
     |    sql_identifier
     ;

identifier
     :    IDENTIFIER
     |    DOUBLEQUOTED_STRING
        ;

sql_identifier
     :    IDENTIFIER
         |    keyword
     |    'ROWID'
     |    'ROWNUM'
     ;
/*
sql_condition
     :    condition_or
     ;
condition_or
//    :    condition_and ( 'OR' condition_and )*
     :    condition_or_part_first condition_or_part_next+ //-> 
^(T_COND_OR ^(T_COND_OR condition_or_part_first) condition_or_part_next*))
     |    condition_or_part_first
     ;

condition_or_part_first
     :    condition_and
         ;

condition_or_part_next
     :    'OR' condition_and //-> ^(T_COND_OR 'OR' condition_and)
         ;

condition_and
//    :    condition_not ( 'AND' condition_not )*
         :    condition_and_part_first condition_and_part_next+ //-> 
^(T_COND_AND ^(T_COND_AND condition_and_part_first) 
condition_and_part_next*))
     |    condition_and_part_first
     ;

condition_and_part_first
     :    condition_not
        ;

condition_and_part_next
     :    'AND' condition_not //-> ^(T_COND_AND 'AND' condition_not)
         ;

condition_not
     :    'NOT' condition_expr //-> ^(T_COND_NOT 'NOT' condition_expr))
     |    condition_expr
     ;
condition_expr
     :    condition_exists
     |    condition_is
     |    condition_comparison
     |    condition_group_comparison
     |    condition_in
     |    condition_is_a_set
     |    condition_is_any
     |    condition_is_empty
     |    condition_is_of_type
     |    condition_is_present
     |    condition_like
     |    condition_memeber
     |    condition_between
     |    condition_regexp_like
     |    condition_submultiset
     |    condition_equals_path
     |    condition_under_path
     |    condition_paren
     ;

condition_exists
     :    'EXISTS' subquery
     ;
condition_is
     :    sql_expression 'IS' ( 'NOT' )? ( 'NAN' | 'INFINITE' | 'NULL' )
     ;
condition_comparison
     :    LPAREN sql_expressions RPAREN ( outer_join_sign )? ( EQ | NEQ 
) subquery ( outer_join_sign )?
     |    ( 'PRIOR' )? sql_expression ( outer_join_sign )? ( EQ | NEQ | 
GTH | GEQ | LTH | LEQ ) ( 'PRIOR' )? ( sql_expression | LPAREN 
select_statement RPAREN ) ( outer_join_sign )?
     ;
condition_group_comparison
     :    LPAREN sql_expressions RPAREN ( EQ | NEQ ) ( 'ANY' | 'SOME' | 
'ALL' ) LPAREN ( grouping_expression_list | select_statement ) RPAREN
     |    sql_expression ( EQ | NEQ | GTH | GEQ | LTH | LEQ ) ( 'ANY' | 
'SOME' | 'ALL' ) LPAREN ( sql_expressions | select_statement ) RPAREN
     ;
condition_in
     :    LPAREN sql_expressions RPAREN ( 'NOT' )? 'IN' LPAREN ( 
grouping_expression_list | select_statement ) RPAREN
     |    sql_expression ( 'NOT' )? 'IN' LPAREN ( expression_list | 
select_statement ) RPAREN
     ;
condition_is_a_set
     :    nested_table_column_name 'IS' ( 'NOT' )? 'A' 'SET'
     ;
condition_is_any
     :    ( column_name 'IS' )? 'ANY'
     ;
condition_is_empty
     :    nested_table_column_name 'IS' ( 'NOT' )? 'EMPTY'
     ;
condition_is_of_type
     :    sql_expression 'IS' ('NOT')? 'OF' ( 'TYPE' )? LPAREN type_name 
RPAREN
     ;
condition_is_of_type_names
     :    condition_is_of_type_name ( COMMA condition_is_of_type_name )*
     ;
condition_is_of_type_name
     :    ( 'ONLY' )? type_name
     ;
condition_is_present
     :    cell_reference 'IS' 'PRESENT'
     ;
condition_like
     :    sql_expression ( 'NOT' )? ( 'LIKE' | 'LIKEC' | 'LIKE2' | 
'LIKE4' ) sql_expression ( 'ESCAPE' sql_expression )?
     ;
condition_memeber
     :    sql_expression ( 'NOT' )? 'MEMBER' ( 'OF' )? 
nested_table_column_name
     ;
condition_between
     :    sql_expression ( 'NOT' )? 'BETWEEN' sql_expression 'AND' 
sql_expression
     ;
condition_regexp_like
     :    'REGEXP_LIKE' LPAREN call_parameters RPAREN
     ;
condition_submultiset
     :    nested_table_column_name ( 'NOT' )? 'SUBMULTISET' ( 'OF' )? 
nested_table_column_name
     ;
condition_equals_path
     :    'EQUALS_PATH' LPAREN column_name COMMA path_string ( COMMA 
correlation_integer )? RPAREN
     ;
condition_under_path
     :    'UNDER_PATH' LPAREN column_name ( COMMA levels )? COMMA 
path_string ( COMMA correlation_integer )? RPAREN
     ;*/
levels
     :    integer
     ;
correlation_integer
     :    integer
     ;
path_string
     :    quoted_string
     ;
type_name
     :    identifier ( DOT identifier )*
     ;
integer
     :    NUMBER
     ;
column_name
     :    sql_identifier
     ;
nested_table
     :    sql_identifier
     ;
nested_table_column_name
     :    ( schema_name DOT )? (table_name DOT)? (nested_table DOT)? 
column_name
     ;
sql_expressions
     :    sql_expression ( COMMA sql_expression )*
     ;
grouping_expression_list
     :    expression_list ( COMMA expression_list )*
     ;
expression_list
     :    LPAREN sql_expressions RPAREN
     |    sql_expressions
     ;
cell_reference
     :    sql_identifier
     ;

condition_paren
     :    LPAREN sql_condition RPAREN
     ;

sql_condition
     :    'CONDITION' //To Implement
     ;


schema_name
     :    sql_identifier
     ;

outer_join_sign
     :    LPAREN PLUS RPAREN
     ;


When i add those rules in my Grammars i'm not able to compile anymore, 
but i can compile Ivan Brezina's Grammar.
How can i rewrite those rules in order to compile my grammar??

This is the Error when i try to compile:

Exception in thread "main" java.lang.OutOfMemoryError: GC overhead limit 
exceede
d
         at java.util.Arrays.copyOf(Unknown Source)
         at java.util.ArrayList.ensureCapacity(Unknown Source)
         at java.util.ArrayList.add(Unknown Source)
         at org.antlr.misc.OrderedHashSet.add(OrderedHashSet.java:65)
         at 
org.antlr.analysis.DFAState.addNFAConfiguration(DFAState.java:226)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:6
33)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:7
65)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:7
65)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:7
65)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:7
65)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:7
09)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:7
09)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:6
83)
         at 
org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:4
78)
         at 
org.antlr.analysis.NFAToDFAConverter.findNewDFAStatesAndAddDFATransit
ions(NFAToDFAConverter.java:297)
         at 
org.antlr.analysis.NFAToDFAConverter.convert(NFAToDFAConverter.java:1
11)
         at org.antlr.analysis.DFA.<init>(DFA.java:233)
         at org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1257)
         at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:1021)
         at org.antlr.tool.Grammar.createLookaheadDFAs(Grammar.java:971)
         at org.antlr.codegen.Target.performGrammarAnalysis(Target.java:114)
         at 
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:304)

         at org.antlr.Tool.generateRecognizer(Tool.java:641)
         at org.antlr.Tool.process(Tool.java:454)
         at org.antlr.Tool.main(Tool.java:91)

and this is my compile script:

java -jar C:\Antlr\Antlr-3.2.jar OracleSemplifiedParser.g -debug 
-Xmx2600m -Xconversiontimeout 120000 -o "C:\Users\admin\Documents\Visual 
Studio 2008\Projects\Antlr\RemoteDebugger"

I Know that is a very generic help request, but i hope to get an answer...
Thanks in advice and sorry for my bad english

From zching01 at gmail.com  Mon Nov 15 15:25:59 2010
From: zching01 at gmail.com (Ching)
Date: Mon, 15 Nov 2010 16:25:59 -0700
Subject: [antlr-interest] AST & Symbol table
Message-ID: <AANLkTikBpebR_20vH5KnOodG4ovUnozBgrZ0T6OQ4pGp@mail.gmail.com>

Hi,

I am new to the Antlr/compiler. Can someone show me an example how to
generate AST and symbol table at the same time with a given grammar? thanks.

From Philippe.Frankson at Frsglobal.com  Tue Nov 16 02:37:00 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 16 Nov 2010 11:37:00 +0100
Subject: [antlr-interest] antlr 3 lexer question
In-Reply-To: <AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>
	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>

Hi,

I spent quite some time to find a solution to the following problem but
I could not find a suitable solution so any help would be very much
appreciated.

When I have the following input:
row1.subrow1.subsubrow1..row1.subrow1.subsubrow5
I would like the lexer to return the following tokens: NAME RANGE NAME
Where RANGE is '..', the first NAME would be 'row1.subrow1.subsubrow1'
and the second one ' row1.subrow1.subsubrow5'.
For info, the dot is not mandatory (we can have row1 alone, for
example).
Let's assume that we allow any alpha characters (apart from the dot) ->
fragment ALPHA 	: ('a'..'z'|'A'..'Z');

Rem.: it is important to me to have a solution in the lexer side (I know
it is possible to solve this in the parser but I would like to avoid
it).

Thanks a lot in advance
Philippe Frankson


From wiggjd at bcs.org.uk  Tue Nov 16 07:01:54 2010
From: wiggjd at bcs.org.uk (David Wigg)
Date: Tue, 16 Nov 2010 15:01:54 +0000
Subject: [antlr-interest] C++ Grammar for Antlr2
Message-ID: <AANLkTinmRfX-Fzg54+n3QW1bStWf9gYF8HktarE4awCK@mail.gmail.com>

There is a C/C++ grammar available on the antlr.org website as follows;
CPP_parser(V3.2) using Antlr2.7 updated by David Wigg (2008 Version).
Please note it parses preprocessed C++ files (*.i).

If you have any problems with it please contact me.

There is also a version of the same grammar updated to run using
Antlr3.2 by Ramin Zaghi at
r.zaghi at gmail.com.

David.

Message: 2
Date: Mon, 15 Nov 2010 18:04:24 +0530
From: aman agrawal <aman.161089 at gmail.com>
Subject: [antlr-interest] antlr c++ grammer
To: antlr-interest at antlr.org
Message-ID:
       <AANLkTin_6dWKM2XHWN3LgZT_j_ErNO-NKbq_qH-4+Xyq at mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1

if any one have the c++ grammer for antlr v2 please mail or give the link as
soon as possible

From jimi at temporal-wave.com  Tue Nov 16 07:51:20 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Nov 2010 07:51:20 -0800
Subject: [antlr-interest] antlr 3 lexer question
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>
Message-ID: <017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>

Read through this example and you should see how to do it.

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C
+dot%2C+range%2C+time+specs 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Philippe Frankson
> Sent: Tuesday, November 16, 2010 2:37 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] antlr 3 lexer question
> 
> Hi,
> 
> I spent quite some time to find a solution to the following problem but
> I could not find a suitable solution so any help would be very much
> appreciated.
> 
> When I have the following input:
> row1.subrow1.subsubrow1..row1.subrow1.subsubrow5
> I would like the lexer to return the following tokens: NAME RANGE NAME
> Where RANGE is '..', the first NAME would be 'row1.subrow1.subsubrow1'
> and the second one ' row1.subrow1.subsubrow5'.
> For info, the dot is not mandatory (we can have row1 alone, for
> example).
> Let's assume that we allow any alpha characters (apart from the dot) ->
> fragment ALPHA 	: ('a'..'z'|'A'..'Z');
> 
> Rem.: it is important to me to have a solution in the lexer side (I
> know it is possible to solve this in the parser but I would like to
> avoid it).
> 
> Thanks a lot in advance
> Philippe Frankson
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jbb at acm.org  Tue Nov 16 07:52:41 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 16 Nov 2010 10:52:41 -0500
Subject: [antlr-interest] antlr 3 lexer question
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>
	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>
Message-ID: <1289922761.19023.2.camel@gecko>

Greetings!

On Tue, 2010-11-16 at 11:37 +0100, Philippe Frankson wrote:
> Hi,
> 
> I spent quite some time to find a solution to the following problem but
> I could not find a suitable solution so any help would be very much
> appreciated.
> 
> When I have the following input:
> row1.subrow1.subsubrow1..row1.subrow1.subsubrow5
> I would like the lexer to return the following tokens: NAME RANGE NAME
> Where RANGE is '..', the first NAME would be 'row1.subrow1.subsubrow1'
> and the second one ' row1.subrow1.subsubrow5'.
> For info, the dot is not mandatory (we can have row1 alone, for
> example).
> Let's assume that we allow any alpha characters (apart from the dot) ->
> fragment ALPHA 	: ('a'..'z'|'A'..'Z');
> 
> Rem.: it is important to me to have a solution in the lexer side (I know
> it is possible to solve this in the parser but I would like to avoid
> it).
> 

sometimes syntactic predicates can be Good (but be careful!)

try this:

NAME : ID ( ('.' ALPHA)=> '.' ID )* ;

RANGE : '..' ;

fragment ID : ALPHA (ALPHA|DIGIT)* ;
fragment ALPHA : ('a'..'z')|('A'..'Z') ;
fragment DIGIT : '0'..'9' ;

hope this helps...
   -jbb




From Philippe.Frankson at Frsglobal.com  Tue Nov 16 10:33:21 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 16 Nov 2010 19:33:21 +0100
Subject: [antlr-interest] antlr 3 lexer question
In-Reply-To: <1289922761.19023.2.camel@gecko>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>
	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>
	<1289922761.19023.2.camel@gecko>
Message-ID: <148D436D71E918499E8A71E1DAD38DD0147AB0E2@BRU-EXCH01.frsglobal.internal>

Thanks a lot John!
This is what I needed.

Rgds
Philippe Frankson

-----Original Message-----
From: John B. Brodie [mailto:jbb at acm.org] 
Sent: 16 November 2010 16:53
To: Philippe Frankson
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] antlr 3 lexer question

Greetings!

On Tue, 2010-11-16 at 11:37 +0100, Philippe Frankson wrote:
> Hi,
> 
> I spent quite some time to find a solution to the following problem but
> I could not find a suitable solution so any help would be very much
> appreciated.
> 
> When I have the following input:
> row1.subrow1.subsubrow1..row1.subrow1.subsubrow5
> I would like the lexer to return the following tokens: NAME RANGE NAME
> Where RANGE is '..', the first NAME would be 'row1.subrow1.subsubrow1'
> and the second one ' row1.subrow1.subsubrow5'.
> For info, the dot is not mandatory (we can have row1 alone, for
> example).
> Let's assume that we allow any alpha characters (apart from the dot) ->
> fragment ALPHA 	: ('a'..'z'|'A'..'Z');
> 
> Rem.: it is important to me to have a solution in the lexer side (I know
> it is possible to solve this in the parser but I would like to avoid
> it).
> 

sometimes syntactic predicates can be Good (but be careful!)

try this:

NAME : ID ( ('.' ALPHA)=> '.' ID )* ;

RANGE : '..' ;

fragment ID : ALPHA (ALPHA|DIGIT)* ;
fragment ALPHA : ('a'..'z')|('A'..'Z') ;
fragment DIGIT : '0'..'9' ;

hope this helps...
   -jbb




From Philippe.Frankson at Frsglobal.com  Tue Nov 16 10:35:59 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 16 Nov 2010 19:35:59 +0100
Subject: [antlr-interest] antlr 3 lexer question
In-Reply-To: <017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal>
	<017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>

Thank you Jim.
I knew this one but I could not manage to adapt it for my case.
But the solution that John provided me was what I needed.

Rgds
Philippe Frankson

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 16 November 2010 16:51
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] antlr 3 lexer question

Read through this example and you should see how to do it.

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+poin
t%2C
+dot%2C+range%2C+time+specs 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Philippe Frankson
> Sent: Tuesday, November 16, 2010 2:37 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] antlr 3 lexer question
> 
> Hi,
> 
> I spent quite some time to find a solution to the following problem
but
> I could not find a suitable solution so any help would be very much
> appreciated.
> 
> When I have the following input:
> row1.subrow1.subsubrow1..row1.subrow1.subsubrow5
> I would like the lexer to return the following tokens: NAME RANGE NAME
> Where RANGE is '..', the first NAME would be 'row1.subrow1.subsubrow1'
> and the second one ' row1.subrow1.subsubrow5'.
> For info, the dot is not mandatory (we can have row1 alone, for
> example).
> Let's assume that we allow any alpha characters (apart from the dot)
->
> fragment ALPHA 	: ('a'..'z'|'A'..'Z');
> 
> Rem.: it is important to me to have a solution in the lexer side (I
> know it is possible to solve this in the parser but I would like to
> avoid it).
> 
> Thanks a lot in advance
> Philippe Frankson
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Tue Nov 16 13:59:26 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Nov 2010 13:59:26 -0800
Subject: [antlr-interest] [stringtemplate-interest] Working Java 1.5
	grammar?
In-Reply-To: <63B67E7680727F47B475AC6F576DB2C40EC07FBA@ExchMBX104.netflix.com>
References: <63B67E7680727F47B475AC6F576DB2C40EC07FBA@ExchMBX104.netflix.com>
Message-ID: <022601cb85d9$88d37cf0$9a7a76d0$@temporal-wave.com>

I think that the grammar is relying on a faster computer or a longer timeout
;-) Try adding -Xconversiontimeout 30000 to the command line. 

 

Yang's grammar is very accurate for 1.5 but it does rely on backtracking,
which makes it a little slow and a little difficult to report accurate
errors with. However, if you know that the input is good, then this is a
great starting point if you want to do something very custom. Note that you
can always use existing tools such as those within Netbeans and many others
to provide custom refactoring too.

 

Jim

 

PS: I answered this on the ANTLR mailing list, which is where it belongs J

 

From: stringtemplate-interest-bounces at antlr.org
[mailto:stringtemplate-interest-bounces at antlr.org] On Behalf Of Steven
Atkinson
Sent: Tuesday, November 16, 2010 1:31 PM
To: 'stringtemplate-interest at antlr.org'
Cc: 'yang.jiang.z at gmail.com'
Subject: [stringtemplate-interest] Working Java 1.5 grammar?

 

Folks,

 

I'm trying to get a working Java 1.5 grammar and tree walker for
source-to-source refactoring efforts at Netflix. 

 

I've installed antlrWorks in IntelliJ, downloaded the Java.g from antlr.org,
and even went hunting in openJDK sources for a working ANTLR v3 grammer for
Java 1.5 or 1.6.

 

When I try putting the Java.g grammar from Yang Jiang
<http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g>
(yang.jiang.z at gmail.com) through ANTLRWorks or on the command line I get the
following error output

 

Any help is appreciated!

 

C:\Hack>java -jar antlr-3.2.jar Java.g

warning(209): Java.g:1783:1: Multiple token rules can match input such as
"'-'": SUBSUB, SUB, SUBEQ

 

As a result, token(s) SUB,SUBEQ were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'c'": CASE, CATCH, CHAR, CLASS, CONST, CONTINUE, IDENTIFIER

 

As a result, token(s) CATCH,CHAR,CLASS,CONST,CONTINUE,IDENTIFIER were
disabled for that input

warning(209): Java.g:1807:1: Multiple token rules can match input such as
"'%'": PERCENT, PERCENTEQ

 

As a result, token(s) PERCENTEQ were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'t'": THIS, THROW, THROWS, TRANSIENT, TRY, TRUE, IDENTIFIER

 

As a result, token(s) THROW,THROWS,TRANSIENT,TRY,TRUE,IDENTIFIER were
disabled for that input

warning(209): Java.g:1815:1: Multiple token rules can match input such as
"'!'": BANG, BANGEQ

 

As a result, token(s) BANGEQ were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'w'": WHILE, IDENTIFIER

 

As a result, token(s) IDENTIFIER were disabled for that input

warning(209): Java.g:1779:1: Multiple token rules can match input such as
"'+'": PLUSPLUS, PLUS, PLUSEQ

 

As a result, token(s) PLUS,PLUSEQ were disabled for that input

warning(209): Java.g:1370:1: Multiple token rules can match input such as
"'1'..'9'": LONGLITERAL, INTLITERAL, FLOATLITERAL, DOUBLELITERAL

 

As a result, token(s) INTLITERAL,FLOATLITERAL,DOUBLELITERAL were disabled
for that input

warning(209): Java.g:1803:1: Multiple token rules can match input such as
"'^'": CARET, CARETEQ

 

As a result, token(s) CARETEQ were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'s'": SHORT, STATIC, STRICTFP, SUPER, SWITCH, SYNCHRONIZED, IDENTIFIER

 

As a result, token(s) STATIC,STRICTFP,SUPER,SWITCH,SYNCHRONIZED,IDENTIFIER
were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'f'": FINAL, FINALLY, FLOAT, FOR, FALSE, IDENTIFIER

 

As a result, token(s) FINALLY,FLOAT,FOR,FALSE,IDENTIFIER were disabled for
that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'l'": LONG, IDENTIFIER

 

As a result, token(s) IDENTIFIER were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'v'": VOID, VOLATILE, IDENTIFIER

 

As a result, token(s) VOLATILE,IDENTIFIER were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'d'": DEFAULT, DO, DOUBLE, IDENTIFIER

 

As a result, token(s) DO,DOUBLE,IDENTIFIER were disabled for that input

warning(209): Java.g:1727:1: Multiple token rules can match input such as
"'='": EQ, EQEQ

 

As a result, token(s) EQEQ were disabled for that input

warning(209): Java.g:1787:1: Multiple token rules can match input such as
"'*'": STAR, STAREQ

 

As a result, token(s) STAREQ were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'e'": ELSE, ENUM, EXTENDS, IDENTIFIER

 

As a result, token(s) ENUM,EXTENDS,IDENTIFIER were disabled for that input

warning(209): Java.g:1791:1: Multiple token rules can match input such as
"'/'": COMMENT, LINE_COMMENT, SLASH, SLASHEQ

 

As a result, token(s) LINE_COMMENT,SLASH,SLASHEQ were disabled for that
input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'g'": GOTO, IDENTIFIER

 

As a result, token(s) IDENTIFIER were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'n'": NATIVE, NEW, NULL, IDENTIFIER

 

As a result, token(s) NEW,NULL,IDENTIFIER were disabled for that input

warning(209): Java.g:1799:1: Multiple token rules can match input such as
"'|'": BARBAR, BAR, BAREQ

 

As a result, token(s) BAR,BAREQ were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'r'": RETURN, IDENTIFIER

 

As a result, token(s) IDENTIFIER were disabled for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'p'": PACKAGE, PRIVATE, PROTECTED, PUBLIC, IDENTIFIER

 

As a result, token(s) PRIVATE,PROTECTED,PUBLIC,IDENTIFIER were disabled for
that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'b'": BOOLEAN, BREAK, BYTE, IDENTIFIER

 

As a result, token(s) BREAK,BYTE,IDENTIFIER were disabled for that input

warning(209): Java.g:1370:1: Multiple token rules can match input such as
"'0'": LONGLITERAL, INTLITERAL, FLOATLITERAL, DOUBLELITERAL

 

As a result, token(s) INTLITERAL,FLOATLITERAL,DOUBLELITERAL were disabled
for that input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'a'": ABSTRACT, ASSERT, IDENTIFIER

 

As a result, token(s) ASSERT,IDENTIFIER were disabled for that input

warning(209): Java.g:1795:1: Multiple token rules can match input such as
"'&'": AMPAMP, AMP, AMPEQ

 

As a result, token(s) AMP,AMPEQ were disabled for that input

warning(209): Java.g:1703:1: Multiple token rules can match input such as
"'.'": FLOATLITERAL, DOUBLELITERAL, DOT, ELLIPSIS

 

As a result, token(s) DOUBLELITERAL,DOT,ELLIPSIS were disabled for that
input

warning(209): Java.g:1827:1: Multiple token rules can match input such as
"'i'": IF, IMPLEMENTS, IMPORT, INSTANCEOF, INT, INTERFACE, IDENTIFIER

 

As a result, token(s) IMPLEMENTS,IMPORT,INSTANCEOF,INT,INTERFACE,IDENTIFIER
were disabled for that input

error(208): Java.g:1815:1: The following token definitions can never be
matched because prior tokens match the same input:
INTLITERAL,DOUBLELITERAL,LINE_COMMENT,ASSERT,BREAK,BYTE,CATCH,CHAR,CLASS,CON
S

T,CONTINUE,DO,DOUBLE,ENUM,EXTENDS,FINALLY,FLOAT,FOR,IMPLEMENTS,IMPORT,INSTAN
CEOF,INT,INTERFACE,NEW,PRIVATE,PROTECTED,PUBLIC,STATIC,STRICTFP,SUPER,SWITCH
,SYNCHRONIZED,THROW,THROWS,TRANSIENT,TRY,VOLATIL

E,TRUE,FALSE,NULL,DOT,ELLIPSIS,EQEQ,PLUS,SUB,SLASH,AMP,BAR,PLUSEQ,SUBEQ,STAR
EQ,SLASHEQ,AMPEQ,BAREQ,CARETEQ,PERCENTEQ,BANGEQ

 

C:\Hack>


From Philippe.Frankson at Frsglobal.com  Wed Nov 17 04:50:41 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Wed, 17 Nov 2010 13:50:41 +0100
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>
	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>
Message-ID: <148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>


When I call my parser with -> EXT.MyFunc()
The value returned by $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I
would expect to have only 'MyFunc' (because I'm using the '!' operator
in the lexer here below).

fragment INT		: ('0'..'9');
fragment ALPHA 		: ('a'..'z'|'A'..'Z'|'_');
fragment ID			: ALPHA (ALPHA | INT)*;

EXTERNAL_CALL: 'EXT.'! ID;


rule: EXTERNAL_CALL '(' { stack.push(new
FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
expressList: ...;


Any idea why the '!' operator looks like not working ? What am I doing
wrong ?

Thank you.
Philippe Frankson


From jimi at temporal-wave.com  Wed Nov 17 08:18:51 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 17 Nov 2010 08:18:51 -0800
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>
	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>
Message-ID: <034c01cb8673$1f119c80$5d34d580$@temporal-wave.com>

Remember antlr.markmail.org 

This operator is not supported in ANTLR3 for performance reasons. But if the
pieces you don't want are at the start or end, then you can just change the
start and/or end points of the token.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Philippe Frankson
> Sent: Wednesday, November 17, 2010 4:51 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> 
> When I call my parser with -> EXT.MyFunc() The value returned by
> $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I would expect to have
> only 'MyFunc' (because I'm using the '!' operator in the lexer here
> below).
> 
> fragment INT		: ('0'..'9');
> fragment ALPHA 		: ('a'..'z'|'A'..'Z'|'_');
> fragment ID			: ALPHA (ALPHA | INT)*;
> 
> EXTERNAL_CALL: 'EXT.'! ID;
> 
> 
> rule: EXTERNAL_CALL '(' { stack.push(new
> FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
> expressList: ...;
> 
> 
> Any idea why the '!' operator looks like not working ? What am I doing
> wrong ?
> 
> Thank you.
> Philippe Frankson
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From Colin.Macdonald at us.gbs.com  Wed Nov 17 12:42:59 2010
From: Colin.Macdonald at us.gbs.com (Colin Macdonald)
Date: Wed, 17 Nov 2010 15:42:59 -0500
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <034c01cb8673$1f119c80$5d34d580$@temporal-wave.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>
	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>
	<034c01cb8673$1f119c80$5d34d580$@temporal-wave.com>
Message-ID: <OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com>

Jim,

Don't you mean that the ! operator is not supported in the Lexer?

Phil would need a parser rule to discard the token.  Something like:

//Convert ID from a fragment to a token
ID: ALPHA (ALPHA | INT)*;
EXT: 'EXT.';
external_call: EXT! ID;

rule: call=external_call '(' { stack.push(new
        FuncName($call.text)); } (expressList { ... } )? ')'
        expressList: ...;



Colin Macdonald
Senior Consultant
_____________________________________ 

GROUP Business Software
Phone: 770 720 1300 ext: 6132

http://www.gbs.com/




From:   "Jim Idle" <jimi at temporal-wave.com>
To:     <antlr-interest at antlr.org>
Date:   2010-11-17 11:19 AM
Subject:        Re: [antlr-interest] Is '!' operator working with ANTLR 
3.1.2
Sent by:        antlr-interest-bounces at antlr.org



Remember antlr.markmail.org 

This operator is not supported in ANTLR3 for performance reasons. But if 
the
pieces you don't want are at the start or end, then you can just change 
the
start and/or end points of the token.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Philippe Frankson
> Sent: Wednesday, November 17, 2010 4:51 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> 
> When I call my parser with -> EXT.MyFunc() The value returned by
> $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I would expect to have
> only 'MyFunc' (because I'm using the '!' operator in the lexer here
> below).
> 
> fragment INT                           : ('0'..'9');
> fragment ALPHA                                 : 
('a'..'z'|'A'..'Z'|'_');
> fragment ID                                            : ALPHA (ALPHA | 
INT)*;
> 
> EXTERNAL_CALL: 'EXT.'! ID;
> 
> 
> rule: EXTERNAL_CALL '(' { stack.push(new
> FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
> expressList: ...;
> 
> 
> Any idea why the '!' operator looks like not working ? What am I doing
> wrong ?
> 
> Thank you.
> Philippe Frankson
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Nov 17 14:24:23 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 17 Nov 2010 14:24:23 -0800
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>	<034c01cb8673$1f119c80$5d34d580$@temporal-wave.com>
	<OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com>
Message-ID: <03c101cb86a6$2fc00e80$8f402b80$@temporal-wave.com>

In the lexer, but the context of the question tells you this. The ! operator
in the parser is used to prevent being auto written in to the tree on an AST
producing parser. That is not the same thing.

Ignoring the token in the parser is not the same thing as it allows
whitespace and any other characters that are not passed to the parser to be
placed in between.

All you need do is change the start and end points of the token or just
strip the characters out when you come to need the string value of the
token.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Colin Macdonald
> Sent: Wednesday, November 17, 2010 12:43 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> Jim,
> 
> Don't you mean that the ! operator is not supported in the Lexer?
> 
> Phil would need a parser rule to discard the token.  Something like:
> 
> //Convert ID from a fragment to a token
> ID: ALPHA (ALPHA | INT)*;
> EXT: 'EXT.';
> external_call: EXT! ID;
> 
> rule: call=external_call '(' { stack.push(new
>         FuncName($call.text)); } (expressList { ... } )? ')'
>         expressList: ...;
> 
> 
> 
> Colin Macdonald
> Senior Consultant
> _____________________________________
> 
> GROUP Business Software
> Phone: 770 720 1300 ext: 6132
> 
> http://www.gbs.com/
> 
> 
> 
> 
> From:   "Jim Idle" <jimi at temporal-wave.com>
> To:     <antlr-interest at antlr.org>
> Date:   2010-11-17 11:19 AM
> Subject:        Re: [antlr-interest] Is '!' operator working with ANTLR
> 3.1.2
> Sent by:        antlr-interest-bounces at antlr.org
> 
> 
> 
> Remember antlr.markmail.org
> 
> This operator is not supported in ANTLR3 for performance reasons. But
> if the pieces you don't want are at the start or end, then you can just
> change the start and/or end points of the token.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Philippe Frankson
> > Sent: Wednesday, November 17, 2010 4:51 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> >
> >
> > When I call my parser with -> EXT.MyFunc() The value returned by
> > $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I would expect to have
> > only 'MyFunc' (because I'm using the '!' operator in the lexer here
> > below).
> >
> > fragment INT                           : ('0'..'9');
> > fragment ALPHA                                 :
> ('a'..'z'|'A'..'Z'|'_');
> > fragment ID                                            : ALPHA (ALPHA
> |
> INT)*;
> >
> > EXTERNAL_CALL: 'EXT.'! ID;
> >
> >
> > rule: EXTERNAL_CALL '(' { stack.push(new
> > FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
> > expressList: ...;
> >
> >
> > Any idea why the '!' operator looks like not working ? What am I
> doing
> > wrong ?
> >
> > Thank you.
> > Philippe Frankson
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From Philippe.Frankson at Frsglobal.com  Thu Nov 18 02:33:04 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Thu, 18 Nov 2010 11:33:04 +0100
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <03c101cb86a6$2fc00e80$8f402b80$@temporal-wave.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>	<034c01cb8673$1f119c80$5d34d580$@temporal-wave.com><OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com>
	<03c101cb86a6$2fc00e80$8f402b80$@temporal-wave.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD0147ABF11@BRU-EXCH01.frsglobal.internal>

I'm sorry but I'm not sure to understand what you mean by 'change the
start and end points of the token'.
Do you mean I should split my lexer this way:

fragment INT 	: ('0'..'9');
fragment ALPHA    : ('a'..'z'|'A'..'Z'|'_');

ID	: ALPHA (ALPHA | INT)*;
EXT	: 'EXT.';

rule: EXT ID '(' { stack.push(new FuncName($ID.getText())); }
(expressList { ... } )? ')'	expressList: ...;


In fact I cannot do that because I have the following lexer rule (I
didn't put it in my previous mail to make it lighter):

IDENTIFIER		: ID (('.' ID)=> '.' ID { $type = CELLNAME; })*;

Because of that rule, 'EXT.Myfunc' would return the token CELLNAME
instead of EXT + ID;

Now, of course, like you said, I can strip the characters out but I
thought it was possible to do that at lexer side and that would have
been better.

Thank you for your feedback.
Philippe Frankson

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 17 November 2010 23:24
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2

In the lexer, but the context of the question tells you this. The !
operator
in the parser is used to prevent being auto written in to the tree on an
AST
producing parser. That is not the same thing.

Ignoring the token in the parser is not the same thing as it allows
whitespace and any other characters that are not passed to the parser to
be
placed in between.

All you need do is change the start and end points of the token or just
strip the characters out when you come to need the string value of the
token.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Colin Macdonald
> Sent: Wednesday, November 17, 2010 12:43 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> Jim,
> 
> Don't you mean that the ! operator is not supported in the Lexer?
> 
> Phil would need a parser rule to discard the token.  Something like:
> 
> //Convert ID from a fragment to a token
> ID: ALPHA (ALPHA | INT)*;
> EXT: 'EXT.';
> external_call: EXT! ID;
> 
> rule: call=external_call '(' { stack.push(new
>         FuncName($call.text)); } (expressList { ... } )? ')'
>         expressList: ...;
> 
> 
> 
> Colin Macdonald
> Senior Consultant
> _____________________________________
> 
> GROUP Business Software
> Phone: 770 720 1300 ext: 6132
> 
> http://www.gbs.com/
> 
> 
> 
> 
> From:   "Jim Idle" <jimi at temporal-wave.com>
> To:     <antlr-interest at antlr.org>
> Date:   2010-11-17 11:19 AM
> Subject:        Re: [antlr-interest] Is '!' operator working with
ANTLR
> 3.1.2
> Sent by:        antlr-interest-bounces at antlr.org
> 
> 
> 
> Remember antlr.markmail.org
> 
> This operator is not supported in ANTLR3 for performance reasons. But
> if the pieces you don't want are at the start or end, then you can
just
> change the start and/or end points of the token.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Philippe Frankson
> > Sent: Wednesday, November 17, 2010 4:51 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> >
> >
> > When I call my parser with -> EXT.MyFunc() The value returned by
> > $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I would expect to
have
> > only 'MyFunc' (because I'm using the '!' operator in the lexer here
> > below).
> >
> > fragment INT                           : ('0'..'9');
> > fragment ALPHA                                 :
> ('a'..'z'|'A'..'Z'|'_');
> > fragment ID                                            : ALPHA
(ALPHA
> |
> INT)*;
> >
> > EXTERNAL_CALL: 'EXT.'! ID;
> >
> >
> > rule: EXTERNAL_CALL '(' { stack.push(new
> > FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
> > expressList: ...;
> >
> >
> > Any idea why the '!' operator looks like not working ? What am I
> doing
> > wrong ?
> >
> > Thank you.
> > Philippe Frankson
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From tomas.prerovsky at capgemini.com  Thu Nov 18 07:49:54 2010
From: tomas.prerovsky at capgemini.com (Prerovsky, Tomas)
Date: Thu, 18 Nov 2010 16:49:54 +0100
Subject: [antlr-interest] Ambiguous reference
Message-ID: <4CBF0682BAD665429A95825536D60A0E02ACC99D@CORPMAIL07.corp.capgemini.com>

Hi,

the following line :

expression
:
 (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY $expression $rhs) |  )  
;

causes in the latest build of ANTLR 3.2 (Sep 23, 2009) the error:

"reference $expression is ambiguous; rule expression is enclosing rule and referenced in the production (assuming enclosing rule)
 |---> (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY $expression $rhs) |  ) "


ANTLR 3.0.1 accepts the given line without reporting an error. 

kind regards

Tomas







This message contains information that may be privileged or confidential and is the property of the Capgemini Group. It is 
intended only for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to 
read, print, retain, copy, disseminate, distribute, or use this message or any part thereof. If you receive this message 
in error, please notify the sender immediately and delete all copies of this message.


From sharwell at pixelminegames.com  Thu Nov 18 08:32:48 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 18 Nov 2010 10:32:48 -0600
Subject: [antlr-interest] Ambiguous reference
In-Reply-To: <4CBF0682BAD665429A95825536D60A0E02ACC99D@CORPMAIL07.corp.capgemini.com>
References: <4CBF0682BAD665429A95825536D60A0E02ACC99D@CORPMAIL07.corp.capgemini.com>
Message-ID: <01e801cb873e$3d59d290$b80d77b0$@pixelminegames.com>

Hi Tomas,

This is the first time I've seen someone else mention this. If you look at
all the ways this could be written, it's clear that there is no ambiguity,
so ANTLR is incorrectly failing:

VALID: If the rhs expression is not labeled (first example), then its
reference in a rewrite rule doesn't use a $ sign. If the rhs is labeled
(second example), then its label is different from the enclosing rule's
name.

expression : (pairing->pairing) (expression -> ^(APPLY $expression
expression));

expression : (pairing->pairing) (rhs=expression -> ^(APPLY $expression
$rhs));

INVALID: The only actual way to introduce an ambiguity is to write the rule
in the following way. However, it is an error in ANTLR to have the name of
any rule as a label anywhere in the grammar. This restriction guarantees
that there can never be an ambiguity when rewriting the rule as you were
trying to.

expression : (pairing->pairing) expression=expression -> ^(APPLY $expression
$expression);

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Prerovsky, Tomas
Sent: Thursday, November 18, 2010 9:50 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Ambiguous reference

Hi,

the following line :

expression
:
 (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY $expression
$rhs) |  ) ;

causes in the latest build of ANTLR 3.2 (Sep 23, 2009) the error:

"reference $expression is ambiguous; rule expression is enclosing rule and
referenced in the production (assuming enclosing rule)  |--->
(pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY $expression
$rhs) |  ) "


ANTLR 3.0.1 accepts the given line without reporting an error. 

kind regards

Tomas







This message contains information that may be privileged or confidential and
is the property of the Capgemini Group. It is intended only for the person
to whom it is addressed. If you are not the intended recipient, you are not
authorized to read, print, retain, copy, disseminate, distribute, or use
this message or any part thereof. If you receive this message in error,
please notify the sender immediately and delete all copies of this message.


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From Colin.Macdonald at us.gbs.com  Thu Nov 18 09:02:55 2010
From: Colin.Macdonald at us.gbs.com (Colin Macdonald)
Date: Thu, 18 Nov 2010 12:02:55 -0500
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD0147ABF11@BRU-EXCH01.frsglobal.internal>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>
	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>
	<034c01cb8673$1f119c80$5d34d580$@temporal-wave.com><OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com>
	<03c101cb86a6$2fc00e80$8f402b80$@temporal-wave.com>
	<148D436D71E918499E8A71E1DAD38DD0147ABF11@BRU-EXCH01.frsglobal.internal>
Message-ID: <OF0D2E0312.ADEED29C-ON852577DF.0045D638-852577DF.005D9F82@gbs.com>

OK, checked the reference last night (page 98) and ! is definitely parser 
only

Jim's got a good point about white space, so you need to go back to your 
original lexer rule and hack the text.

The easiest option would be to always trim out the "EXT." by calling 
something like

        $EXTERNAL_CALL.text.substring(4)

I don't suggest messing around with start & stop.  You don't have access 
to the Token in the lexer actions, besides it would be fragile unless you 
extend CommonToken to track if you've made the change already.

However, you could add a lexer action to alter the state property to start 
after the prefix.  This will should cause the Token created to only 
represent ID.

        EXTERNAL_CALL: 'EXT.' ID {state.tokenStartCharIndex+=4;};

Have you linked the ANTLR source to the jar in your environment?  In 
Eclipse, F3 is your friend, but you need the source linked.

Colin



From:   "Philippe Frankson" <Philippe.Frankson at Frsglobal.com>
To:     <antlr-interest at antlr.org>
Date:   11/18/2010 06:40 AM
Subject:        Re: [antlr-interest] Is '!' operator working with ANTLR 
3.1.2
Sent by:        antlr-interest-bounces at antlr.org



I'm sorry but I'm not sure to understand what you mean by 'change the
start and end points of the token'.
Do you mean I should split my lexer this way:

fragment INT             : ('0'..'9');
fragment ALPHA    : ('a'..'z'|'A'..'Z'|'_');

ID               : ALPHA (ALPHA | INT)*;
EXT              : 'EXT.';

rule: EXT ID '(' { stack.push(new FuncName($ID.getText())); }
(expressList { ... } )? ')'              expressList: ...;


In fact I cannot do that because I have the following lexer rule (I
didn't put it in my previous mail to make it lighter):

IDENTIFIER                               : ID (('.' ID)=> '.' ID { $type = 
CELLNAME; })*;

Because of that rule, 'EXT.Myfunc' would return the token CELLNAME
instead of EXT + ID;

Now, of course, like you said, I can strip the characters out but I
thought it was possible to do that at lexer side and that would have
been better.

Thank you for your feedback.
Philippe Frankson

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 17 November 2010 23:24
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2

In the lexer, but the context of the question tells you this. The !
operator
in the parser is used to prevent being auto written in to the tree on an
AST
producing parser. That is not the same thing.

Ignoring the token in the parser is not the same thing as it allows
whitespace and any other characters that are not passed to the parser to
be
placed in between.

All you need do is change the start and end points of the token or just
strip the characters out when you come to need the string value of the
token.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Colin Macdonald
> Sent: Wednesday, November 17, 2010 12:43 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> Jim,
> 
> Don't you mean that the ! operator is not supported in the Lexer?
> 
> Phil would need a parser rule to discard the token.  Something like:
> 
> //Convert ID from a fragment to a token
> ID: ALPHA (ALPHA | INT)*;
> EXT: 'EXT.';
> external_call: EXT! ID;
> 
> rule: call=external_call '(' { stack.push(new
>         FuncName($call.text)); } (expressList { ... } )? ')'
>         expressList: ...;
> 
> 
> 
> Colin Macdonald
> Senior Consultant
> _____________________________________
> 
> GROUP Business Software
> Phone: 770 720 1300 ext: 6132
> 
> http://www.gbs.com/
> 
> 
> 
> 
> From:   "Jim Idle" <jimi at temporal-wave.com>
> To:     <antlr-interest at antlr.org>
> Date:   2010-11-17 11:19 AM
> Subject:        Re: [antlr-interest] Is '!' operator working with
ANTLR
> 3.1.2
> Sent by:        antlr-interest-bounces at antlr.org
> 
> 
> 
> Remember antlr.markmail.org
> 
> This operator is not supported in ANTLR3 for performance reasons. But
> if the pieces you don't want are at the start or end, then you can
just
> change the start and/or end points of the token.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Philippe Frankson
> > Sent: Wednesday, November 17, 2010 4:51 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> >
> >
> > When I call my parser with -> EXT.MyFunc() The value returned by
> > $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I would expect to
have
> > only 'MyFunc' (because I'm using the '!' operator in the lexer here
> > below).
> >
> > fragment INT                           : ('0'..'9');
> > fragment ALPHA                                 :
> ('a'..'z'|'A'..'Z'|'_');
> > fragment ID                                            : ALPHA
(ALPHA
> |
> INT)*;
> >
> > EXTERNAL_CALL: 'EXT.'! ID;
> >
> >
> > rule: EXTERNAL_CALL '(' { stack.push(new
> > FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
> > expressList: ...;
> >
> >
> > Any idea why the '!' operator looks like not working ? What am I
> doing
> > wrong ?
> >
> > Thank you.
> > Philippe Frankson
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


Colin Macdonald
Senior Consultant
_____________________________________ 

GROUP Business Software
Phone: 770 720 1300 ext: 6132

http://www.gbs.com/

From jimi at temporal-wave.com  Thu Nov 18 09:23:28 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Nov 2010 09:23:28 -0800
Subject: [antlr-interest] Ambiguous reference
In-Reply-To: <01e801cb873e$3d59d290$b80d77b0$@pixelminegames.com>
References: <4CBF0682BAD665429A95825536D60A0E02ACC99D@CORPMAIL07.corp.capgemini.com>
	<01e801cb873e$3d59d290$b80d77b0$@pixelminegames.com>
Message-ID: <002401cb8745$50d1a1c0$f274e540$@temporal-wave.com>

It is a little overzealous in its warning but it isn't failing ;-) 

The warning is telling you that it is picking the correct interpretation,
but the label of the rule reference should of course suppress the warning.

I should also point out that using an entire expression reference as a
predicate (especially in this case) will be very slow and indicates that the
grammar is poorly formed. I suspect that you (Tomas) are following a written
spec too closely and are really trying to implement right associativity. 

I also suspect that overall, you need to start again but this time left
factor as you go. Remember that the spec you are working from is probably
written in LALR terms, that you will need to interpolate before typing in to
an ANTLR grammar spec. If you are not working from a spec then stepping back
and reconsidering the syntax may be in order.

What language are you trying to parse and what spec are you using? I think
that you may be asking the wrong questions :)

Look more at a construct like this (I am guessing at what you are ultimately
trying to do of course):

expression
  : p=paring e=expression
      -> ^(APPLY $p $e)
  | expr2
  ;

expr2
  : expr3 (OPER expr3)*
  ;

etc

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sam Harwell
> Sent: Thursday, November 18, 2010 8:33 AM
> To: 'Prerovsky, Tomas'; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Ambiguous reference
> 
> Hi Tomas,
> 
> This is the first time I've seen someone else mention this. If you look
> at all the ways this could be written, it's clear that there is no
> ambiguity, so ANTLR is incorrectly failing:
> 
> VALID: If the rhs expression is not labeled (first example), then its
> reference in a rewrite rule doesn't use a $ sign. If the rhs is labeled
> (second example), then its label is different from the enclosing rule's
> name.
> 
> expression : (pairing->pairing) (expression -> ^(APPLY $expression
> expression));
> 
> expression : (pairing->pairing) (rhs=expression -> ^(APPLY $expression
> $rhs));
> 
> INVALID: The only actual way to introduce an ambiguity is to write the
> rule in the following way. However, it is an error in ANTLR to have the
> name of any rule as a label anywhere in the grammar. This restriction
> guarantees that there can never be an ambiguity when rewriting the rule
> as you were trying to.
> 
> expression : (pairing->pairing) expression=expression -> ^(APPLY
> $expression $expression);
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Prerovsky, Tomas
> Sent: Thursday, November 18, 2010 9:50 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Ambiguous reference
> 
> Hi,
> 
> the following line :
> 
> expression
> :
>  (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY
> $expression
> $rhs) |  ) ;
> 
> causes in the latest build of ANTLR 3.2 (Sep 23, 2009) the error:
> 
> "reference $expression is ambiguous; rule expression is enclosing rule
> and referenced in the production (assuming enclosing rule)  |--->
> (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY
> $expression
> $rhs) |  ) "
> 
> 
> ANTLR 3.0.1 accepts the given line without reporting an error.
> 
> kind regards
> 
> Tomas
> 
> 
> 
> 
> 
> 
> 
> This message contains information that may be privileged or
> confidential and is the property of the Capgemini Group. It is intended
> only for the person to whom it is addressed. If you are not the
> intended recipient, you are not authorized to read, print, retain,
> copy, disseminate, distribute, or use this message or any part thereof.
> If you receive this message in error, please notify the sender
> immediately and delete all copies of this message.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Thu Nov 18 09:33:23 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Nov 2010 09:33:23 -0800
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <OF0D2E0312.ADEED29C-ON852577DF.0045D638-852577DF.005D9F82@gbs.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com>	<148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal>	<034c01cb8673$1f119c80$5d34d580$@temporal-wave.com><OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com>	<03c101cb86a6$2fc00e80$8f402b80$@temporal-wave.com>	<148D436D71E918499E8A71E1DAD38DD0147ABF11@BRU-EXCH01.frsglobal.internal>
	<OF0D2E0312.ADEED29C-ON852577DF.0045D638-852577DF.005D9F82@gbs.com>
Message-ID: <002701cb8746$b3166180$19432480$@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Colin Macdonald
> Sent: Thursday, November 18, 2010 9:03 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> OK, checked the reference last night (page 98) and ! is definitely
> parser only
> 
> Jim's got a good point about white space, so you need to go back to
> your original lexer rule and hack the text.
> 
> The easiest option would be to always trim out the "EXT." by calling
> something like
> 
>         $EXTERNAL_CALL.text.substring(4)
> 
> I don't suggest messing around with start & stop.  You don't have
> access to the Token in the lexer actions, 

Yes, you DO have access to the token - it isn't created until the rule
exits, so you set the things that will be used by the lexer.


besides it would be fragile
> unless you extend CommonToken to track if you've made the change
> already.

No, you don't need to do that, you change it in the lexer actions and then
never touch it again. From the top of my head (so check it):

K : 'CCCC'
     { $start 		= getCharIndex(); }
     'DDD' 'A'*
     etc


However, it is probably just as easy to use a substring when you reference
the token text, which you will generally only do once anyway.

Jim






From sharwell at pixelminegames.com  Thu Nov 18 09:48:02 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 18 Nov 2010 11:48:02 -0600
Subject: [antlr-interest] Ambiguous reference
In-Reply-To: <002401cb8745$50d1a1c0$f274e540$@temporal-wave.com>
References: <4CBF0682BAD665429A95825536D60A0E02ACC99D@CORPMAIL07.corp.capgemini.com>	<01e801cb873e$3d59d290$b80d77b0$@pixelminegames.com>
	<002401cb8745$50d1a1c0$f274e540$@temporal-wave.com>
Message-ID: <01fc01cb8748$bfbde780$3f39b680$@pixelminegames.com>

IIRC, it actually fails to compile the grammar with an error. At worst it
should be a warning, but given the clear difference between "$expression"
and "expression", the behavior is clear enough that no warning should be
needed. In C# for example, the following does not result in a warning. I
don't see how this is any different. If a $$ token was added for referencing
the enclosing rule, then the warning could be brought back suggesting the
use of $$ instead of $expression.

class Test {
    int field;
    void Foo() {
        int field = 3;
        Console.Write(field);
    }
}

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, November 18, 2010 11:23 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Ambiguous reference

It is a little overzealous in its warning but it isn't failing ;-) 

The warning is telling you that it is picking the correct interpretation,
but the label of the rule reference should of course suppress the warning.

<snip>

Jim



From tomas.prerovsky at capgemini.com  Thu Nov 18 10:01:07 2010
From: tomas.prerovsky at capgemini.com (Prerovsky, Tomas)
Date: Thu, 18 Nov 2010 19:01:07 +0100
Subject: [antlr-interest] Ambiguous reference
In-Reply-To: <002401cb8745$50d1a1c0$f274e540$@temporal-wave.com>
References: <4CBF0682BAD665429A95825536D60A0E02ACC99D@CORPMAIL07.corp.capgemini.com>
	<01e801cb873e$3d59d290$b80d77b0$@pixelminegames.com>,
	<002401cb8745$50d1a1c0$f274e540$@temporal-wave.com>
Message-ID: <4CBF0682BAD665429A95825536D60A0E02ACC99E@CORPMAIL07.corp.capgemini.com>

Hi Jim,

Yes, you are right, the "(expression)=>" predicate slows the parser down, the line i have posted stems from an earlier version of my grammar at a time i was experimenting with the possibilities of ANTLR.
The final version of my grammar, which by the way describes a small SML like language to define UML Model Transformations,  contains no seemingly awkward constructs . 

But this is not my point here. The line in question is perfectly legal : there is no ambiguity. Therefore ANTLR should not report an error.


Tomas
________________________________________
Von: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] im Auftrag von Jim Idle [jimi at temporal-wave.com]
Gesendet: Donnerstag, 18. November 2010 18:23
An: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] Ambiguous reference

It is a little overzealous in its warning but it isn't failing ;-)

The warning is telling you that it is picking the correct interpretation,
but the label of the rule reference should of course suppress the warning.

I should also point out that using an entire expression reference as a
predicate (especially in this case) will be very slow and indicates that the
grammar is poorly formed. I suspect that you (Tomas) are following a written
spec too closely and are really trying to implement right associativity.

I also suspect that overall, you need to start again but this time left
factor as you go. Remember that the spec you are working from is probably
written in LALR terms, that you will need to interpolate before typing in to
an ANTLR grammar spec. If you are not working from a spec then stepping back
and reconsidering the syntax may be in order.

What language are you trying to parse and what spec are you using? I think
that you may be asking the wrong questions :)

Look more at a construct like this (I am guessing at what you are ultimately
trying to do of course):

expression
  : p=paring e=expression
      -> ^(APPLY $p $e)
  | expr2
  ;

expr2
  : expr3 (OPER expr3)*
  ;

etc

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sam Harwell
> Sent: Thursday, November 18, 2010 8:33 AM
> To: 'Prerovsky, Tomas'; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Ambiguous reference
>
> Hi Tomas,
>
> This is the first time I've seen someone else mention this. If you look
> at all the ways this could be written, it's clear that there is no
> ambiguity, so ANTLR is incorrectly failing:
>
> VALID: If the rhs expression is not labeled (first example), then its
> reference in a rewrite rule doesn't use a $ sign. If the rhs is labeled
> (second example), then its label is different from the enclosing rule's
> name.
>
> expression : (pairing->pairing) (expression -> ^(APPLY $expression
> expression));
>
> expression : (pairing->pairing) (rhs=expression -> ^(APPLY $expression
> $rhs));
>
> INVALID: The only actual way to introduce an ambiguity is to write the
> rule in the following way. However, it is an error in ANTLR to have the
> name of any rule as a label anywhere in the grammar. This restriction
> guarantees that there can never be an ambiguity when rewriting the rule
> as you were trying to.
>
> expression : (pairing->pairing) expression=expression -> ^(APPLY
> $expression $expression);
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Prerovsky, Tomas
> Sent: Thursday, November 18, 2010 9:50 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Ambiguous reference
>
> Hi,
>
> the following line :
>
> expression
> :
>  (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY
> $expression
> $rhs) |  ) ;
>
> causes in the latest build of ANTLR 3.2 (Sep 23, 2009) the error:
>
> "reference $expression is ambiguous; rule expression is enclosing rule
> and referenced in the production (assuming enclosing rule)  |--->
> (pairing->pairing) ( (expression)=> rhs=expression -> ^(APPLY
> $expression
> $rhs) |  ) "
>
>
> ANTLR 3.0.1 accepts the given line without reporting an error.
>
> kind regards
>
> Tomas
>
>
>
>
>
>
>
> This message contains information that may be privileged or
> confidential and is the property of the Capgemini Group. It is intended
> only for the person to whom it is addressed. If you are not the
> intended recipient, you are not authorized to read, print, retain,
> copy, disseminate, distribute, or use this message or any part thereof.
> If you receive this message in error, please notify the sender
> immediately and delete all copies of this message.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address






This message contains information that may be privileged or confidential and is the property of the Capgemini Group. It is 
intended only for the person to whom it is addressed. If you are not the intended recipient, you are not authorized to 
read, print, retain, copy, disseminate, distribute, or use this message or any part thereof. If you receive this message 
in error, please notify the sender immediately and delete all copies of this message.


From Tony.Gray at ca.schneider-electric.com  Thu Nov 18 10:02:37 2010
From: Tony.Gray at ca.schneider-electric.com (Tony.Gray at ca.schneider-electric.com)
Date: Thu, 18 Nov 2010 10:02:37 -0800
Subject: [antlr-interest] AUTO: Tony Gray is out of the office. (returning
	11/22/2010)
Message-ID: <OFD4AFFC47.A4670E92-ON882577DF.00631E36-882577DF.00631E36@US.Schneider-Electric.com>


I am out of the office until 11/22/2010.

For urgent issues, please contact Aaron Sundberg at extension 7543


Note: This is an automated response to your message  "Re: [antlr-interest] Is '!' operator
working with ANTLR 3.1.2" sent on 11/18/2010 9:02:55 AM.

This is the only notification you will receive while this person is away.


From redrackem at yahoo.com  Thu Nov 18 10:30:50 2010
From: redrackem at yahoo.com (Red Rackham)
Date: Thu, 18 Nov 2010 10:30:50 -0800 (PST)
Subject: [antlr-interest] No '_dbg' attribute (python 3.1.3 debug)
In-Reply-To: <OFD4AFFC47.A4670E92-ON882577DF.00631E36-882577DF.00631E36@US.Schneider-Electric.com>
References: <OFD4AFFC47.A4670E92-ON882577DF.00631E36-882577DF.00631E36@US.Schneider-Electric.com>
Message-ID: <661139.5003.qm@web30004.mail.mud.yahoo.com>

With Python 3.1.3 in debug mode I get a little ways in ANTLRWorks then?at some 
point I get this:

Traceback (most recent call last):
...
? File "C:\SW_SVN\ScriptConverter\PgenToAntlr\antlr\ITPParser.py", line 124821, 
in specialStateTransition
??? self_.error(nvae)
? File "C:\SW_SVN\ScriptConverter\PgenToAntlr\antlr\ITPParser.py", line 124155, 
in error
??? self._dbg.recognitionException(nvae)
AttributeError: 'DFA22' object has no attribute '_dbg'>

I noted that _dbg is an attribute of some classes?in debug.py in antlr3 folder 
but not of DFA class (of which DFA22 is subclass).? So I am assuming this is a 
incomplete coding or a bug?? Is there any quick fix workaround that can be 
recommended?

Thanks in advance for any guidance.
Mark

PS Java is not an option here?due to having a?large grammar and?hitting?the 
Java?64K?module limit.



      

From Philippe.Frankson at Frsglobal.com  Thu Nov 18 13:01:49 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Thu, 18 Nov 2010 22:01:49 +0100
Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
In-Reply-To: <OF0D2E0312.ADEED29C-ON852577DF.0045D638-852577DF.005D9F82@gbs.com>
References: <AANLkTimoxRcor=9XQp1LFjrUCupP8HFyOSLd+qjGCnVA@mail.gmail.com>	<AANLkTinVTQLJ_Kf=Z-AeopkG3SKfi1YVkSVkizRjM+1C@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD014754991@BRU-EXCH01.frsglobal.internal><017901cb85a6$1ca21240$55e636c0$@temporal-wave.com><148D436D71E918499E8A71E1DAD38DD0147AB0E5@BRU-EXCH01.frsglobal.internal>	<148D436D71E918499E8A71E1DAD38DD0147AB67C@BRU-EXCH01.frsglobal.internal><034c01cb8673$1f119c80$5d34d580$@temporal-wave.com><OFC7439528.518E928D-ON852577DE.0070DD63-852577DE.0071BFA2@gbs.com><03c101cb86a6$2fc00e80$8f402b80$@temporal-wave.com><148D436D71E918499E8A71E1DAD38DD0147ABF11@BRU-EXCH01.frsglobal.internal>
	<OF0D2E0312.ADEED29C-ON852577DF.0045D638-852577DF.005D9F82@gbs.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD0148011A8@BRU-EXCH01.frsglobal.internal>

Thanks a lot Colin!

{state.tokenStartCharIndex+=4;}; -> this is exactly what I was looking
for and works perfectly well.
To answer to your question, yes I linked ANTLR to my environment but
using IntelliJIDEA 8.1.
However, I compile my grammar using ANTLRWorks1.3 directly in the
appropriate destination folder. 
Then I can directly recompile my project in IntelliJ.

Philippe

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Colin Macdonald
Sent: 18 November 2010 18:03
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2

OK, checked the reference last night (page 98) and ! is definitely
parser 
only

Jim's got a good point about white space, so you need to go back to your

original lexer rule and hack the text.

The easiest option would be to always trim out the "EXT." by calling 
something like

        $EXTERNAL_CALL.text.substring(4)

I don't suggest messing around with start & stop.  You don't have access

to the Token in the lexer actions, besides it would be fragile unless
you 
extend CommonToken to track if you've made the change already.

However, you could add a lexer action to alter the state property to
start 
after the prefix.  This will should cause the Token created to only 
represent ID.

        EXTERNAL_CALL: 'EXT.' ID {state.tokenStartCharIndex+=4;};

Have you linked the ANTLR source to the jar in your environment?  In 
Eclipse, F3 is your friend, but you need the source linked.

Colin



From:   "Philippe Frankson" <Philippe.Frankson at Frsglobal.com>
To:     <antlr-interest at antlr.org>
Date:   11/18/2010 06:40 AM
Subject:        Re: [antlr-interest] Is '!' operator working with ANTLR 
3.1.2
Sent by:        antlr-interest-bounces at antlr.org



I'm sorry but I'm not sure to understand what you mean by 'change the
start and end points of the token'.
Do you mean I should split my lexer this way:

fragment INT             : ('0'..'9');
fragment ALPHA    : ('a'..'z'|'A'..'Z'|'_');

ID               : ALPHA (ALPHA | INT)*;
EXT              : 'EXT.';

rule: EXT ID '(' { stack.push(new FuncName($ID.getText())); }
(expressList { ... } )? ')'              expressList: ...;


In fact I cannot do that because I have the following lexer rule (I
didn't put it in my previous mail to make it lighter):

IDENTIFIER                               : ID (('.' ID)=> '.' ID { $type
= 
CELLNAME; })*;

Because of that rule, 'EXT.Myfunc' would return the token CELLNAME
instead of EXT + ID;

Now, of course, like you said, I can strip the characters out but I
thought it was possible to do that at lexer side and that would have
been better.

Thank you for your feedback.
Philippe Frankson

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: 17 November 2010 23:24
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2

In the lexer, but the context of the question tells you this. The !
operator
in the parser is used to prevent being auto written in to the tree on an
AST
producing parser. That is not the same thing.

Ignoring the token in the parser is not the same thing as it allows
whitespace and any other characters that are not passed to the parser to
be
placed in between.

All you need do is change the start and end points of the token or just
strip the characters out when you come to need the string value of the
token.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Colin Macdonald
> Sent: Wednesday, November 17, 2010 12:43 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> 
> Jim,
> 
> Don't you mean that the ! operator is not supported in the Lexer?
> 
> Phil would need a parser rule to discard the token.  Something like:
> 
> //Convert ID from a fragment to a token
> ID: ALPHA (ALPHA | INT)*;
> EXT: 'EXT.';
> external_call: EXT! ID;
> 
> rule: call=external_call '(' { stack.push(new
>         FuncName($call.text)); } (expressList { ... } )? ')'
>         expressList: ...;
> 
> 
> 
> Colin Macdonald
> Senior Consultant
> _____________________________________
> 
> GROUP Business Software
> Phone: 770 720 1300 ext: 6132
> 
> http://www.gbs.com/
> 
> 
> 
> 
> From:   "Jim Idle" <jimi at temporal-wave.com>
> To:     <antlr-interest at antlr.org>
> Date:   2010-11-17 11:19 AM
> Subject:        Re: [antlr-interest] Is '!' operator working with
ANTLR
> 3.1.2
> Sent by:        antlr-interest-bounces at antlr.org
> 
> 
> 
> Remember antlr.markmail.org
> 
> This operator is not supported in ANTLR3 for performance reasons. But
> if the pieces you don't want are at the start or end, then you can
just
> change the start and/or end points of the token.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Philippe Frankson
> > Sent: Wednesday, November 17, 2010 4:51 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Is '!' operator working with ANTLR 3.1.2
> >
> >
> > When I call my parser with -> EXT.MyFunc() The value returned by
> > $EXTERNAL_CALL.getText() is 'EXT.MyFunc' where I would expect to
have
> > only 'MyFunc' (because I'm using the '!' operator in the lexer here
> > below).
> >
> > fragment INT                           : ('0'..'9');
> > fragment ALPHA                                 :
> ('a'..'z'|'A'..'Z'|'_');
> > fragment ID                                            : ALPHA
(ALPHA
> |
> INT)*;
> >
> > EXTERNAL_CALL: 'EXT.'! ID;
> >
> >
> > rule: EXTERNAL_CALL '(' { stack.push(new
> > FuncName($EXTERNAL_CALL.getText())); } (expressList { ... } )? ')'
> > expressList: ...;
> >
> >
> > Any idea why the '!' operator looks like not working ? What am I
> doing
> > wrong ?
> >
> > Thank you.
> > Philippe Frankson
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


Colin Macdonald
Senior Consultant
_____________________________________ 

GROUP Business Software
Phone: 770 720 1300 ext: 6132

http://www.gbs.com/

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From bijoys_2000 at yahoo.com  Thu Nov 18 23:01:10 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Thu, 18 Nov 2010 23:01:10 
Subject: [antlr-interest] [SPAM] Re: ANTLR
Message-ID: 981dcb050764453afe724b778f9164b6@[192.168.1.1]

i won my friends and I located i found this to make between $950 and $3,922 nobody believes this can happen until I saw the software since day 1 the gains have only gained more. you only must get in on the new program <a href="http://bit.ly/9ryv5M">go here to check it out</a> adrea The taxpayer starves before the susceptible cheek.The alarm shines. bo hk freestyled Adelinda

From asicaddress at gmail.com  Fri Nov 19 04:43:43 2010
From: asicaddress at gmail.com (A Z)
Date: Fri, 19 Nov 2010 06:43:43 -0600
Subject: [antlr-interest] C target character position
Message-ID: <AANLkTimdtQ6SPoFGuRPyj3GOiZAd_OXkNJ5K2J8-vt5s@mail.gmail.com>

Hello,

  I'm trying to record the offset of the start of a token, relative to the
beginning of the input buffer. My program passes a (char *) buffer to ANTLR
and then runs a simple grammar that builds a data structure containing the
element types and pointer to their position in the text buffer. The problem
is I can't find a way to get the true character offset from ANTLR in order
to set the pointer. Below it prints out the results of most of the values
for the ANTLR3_COMMON_TOKEN for the very first token. The two subsequent
values are the data member and the address of the character buffer. I would
expect start, getStartIndex and input->data to be the same but they are
different. How can I find the offset of a token, in terms of the number of
characters from the start of the stream?

Thanks

charPosition          : -1
getCharPositionInLine : -1
getLine               : 1
getStartIndex         : 23213648
getStopIndex          : 23213653
getTokenIndex         : 0
index                 : 0
line                  : 1
lineStart             : 23213648
start                 : 23213648
stop                  : 23213653

(pANTLR3_INPUT_STREAM)input->data 23217928
(uint8_t*)dataBuffer              23213624

From jimi at temporal-wave.com  Fri Nov 19 09:59:17 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 19 Nov 2010 09:59:17 -0800
Subject: [antlr-interest] C target character position
In-Reply-To: <AANLkTimdtQ6SPoFGuRPyj3GOiZAd_OXkNJ5K2J8-vt5s@mail.gmail.com>
References: <AANLkTimdtQ6SPoFGuRPyj3GOiZAd_OXkNJ5K2J8-vt5s@mail.gmail.com>
Message-ID: <00e701cb8813$7c1bbd60$74533820$@temporal-wave.com>

The very first token gives you a =1 for the char position in line I am
afraid, I need to work around that I think, but the indexes are pointers in
to memory (your input) and not 0, 1, 2 etc. Note that the token also
remembers that start of the line that it is located on. 

If the start of the first token is not the start of your data, then perhaps
there are comments and newline tokens that are skipped before the first
token that the parser sees? If this did not work, there would be a lot of
broken parsers out there.

So, use the pointer to get the start, subtract it from the end pointer to
get the length and print out that many characters, which will show you what
the token matched. The line start is updated when a '\n' is seen by the
parser, but you can change the character. This is useful for error messages
when you want to print the text line that an error occurs in.

The offset of the token is the start point minus the input start (use the
address you pass in (databuffer) and not input->data), however, the pointer
is pointing directly at that anyway. I think that you are forgetting that
the token stream does not return off channel tokens or SKIP()ed tokens.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Friday, November 19, 2010 4:44 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target character position
> 
> Hello,
> 
>   I'm trying to record the offset of the start of a token, relative to
> the beginning of the input buffer. My program passes a (char *) buffer
> to ANTLR and then runs a simple grammar that builds a data structure
> containing the element types and pointer to their position in the text
> buffer. The problem is I can't find a way to get the true character
> offset from ANTLR in order to set the pointer. Below it prints out the
> results of most of the values for the ANTLR3_COMMON_TOKEN for the very
> first token. The two subsequent values are the data member and the
> address of the character buffer. I would expect start, getStartIndex
> and input->data to be the same but they are different. How can I find
> the offset of a token, in terms of the number of characters from the
> start of the stream?
> 
> Thanks
> 
> charPosition          : -1
> getCharPositionInLine : -1
> getLine               : 1
> getStartIndex         : 23213648
> getStopIndex          : 23213653
> getTokenIndex         : 0
> index                 : 0
> line                  : 1
> lineStart             : 23213648
> start                 : 23213648
> stop                  : 23213653
> 
> (pANTLR3_INPUT_STREAM)input->data 23217928
> (uint8_t*)dataBuffer              23213624
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From Sheila.Morrissey at ithaka.org  Fri Nov 19 15:58:12 2010
From: Sheila.Morrissey at ithaka.org (Sheila M. Morrissey)
Date: Fri, 19 Nov 2010 18:58:12 -0500
Subject: [antlr-interest] Missing something basic about lexer tokens
Message-ID: <9FAE20247CC9EB41A6863490C392F7180258541FCA@pr1vmexch02.office.share.org>

Hello,

I am working on a recognizer that processes a text file, each line of which starts with one of short list of about 20 characters (mostly either upper case or lower case letters, a few special chars), immediately followed by a "name" (chars or dash), a space or 2, and then various space-delimited stretches of text comprised of arbitrarily any ASCII character Except newline, followed by newline.

The first letter is significant - it indicates what sort of "command" each line is.

Here's a simplified version of the grammar, with just one of these "commands" specified:

grammar ElementAttributes;

options {
  language = Java;
}
@parser::header {}
@lexer::header {}

elementAttributes : elementAttributeCommand+ EOF;

/**
e.g.
Aname IMPLIED
*/

elementAttributeCommand : ACMD NAME SPACE+ ATTRTYPE NEWLINE;

ATTRTYPE : ('IMPLIED'|'CDATA'|'NOTATION'|'ENTITY'|'TOKEN'|'ID'|'DATA');
ACMD : 'A';
NEWLINE:    '\r'? '\n';
SPACE:      ' ';
NAME : (NAMESTARTCHAR NAMECHAR*);

fragment LOWERCASELETTER : ('a'..'z');
fragment UPPERCASELETTER : ('A'..'Z');
fragment DIGIT : ('0'..'9');
fragment DASH  : ('-');
fragment NAMESTARTCHAR : (LOWERCASELETTER | UPPERCASELETTER);
fragment NAMECHAR : (NAMESTARTCHAR | DIGIT | DASH);


If run on a file consisting only of the line (terminated with NEWLINE)
Aname IMPLIED

I get the following error:
line 1:0 required (...)+ loop did not match anything at input 'Aname'

 How should I be declaring the lexer rules so that 'A' at start of line is recognized as a command token, and yet still make it possible for the "NAME" immediately following it to be unambiguously recognized?

Thanks
sheila

From jbb at acm.org  Fri Nov 19 17:56:06 2010
From: jbb at acm.org (John B. Brodie)
Date: Fri, 19 Nov 2010 20:56:06 -0500
Subject: [antlr-interest] Missing something basic about lexer tokens
In-Reply-To: <9FAE20247CC9EB41A6863490C392F7180258541FCA@pr1vmexch02.office.share.org>
References: <9FAE20247CC9EB41A6863490C392F7180258541FCA@pr1vmexch02.office.share.org>
Message-ID: <1290218166.31026.81.camel@gecko>

Greetings! 

On Fri, 2010-11-19 at 18:58 -0500, Sheila M. Morrissey wrote:
> Hello,
> 
> I am working on a recognizer that processes a text file, each line of which starts with one of short list of about 20 characters (mostly either upper case or lower case letters, a few special chars), immediately followed by a "name" (chars or dash), a space or 2, and then various space-delimited stretches of text comprised of arbitrarily any ASCII character Except newline, followed by newline.
> 
> The first letter is significant - it indicates what sort of "command" each line is.
> 
> Here's a simplified version of the grammar, with just one of these "commands" specified:
> 
> grammar ElementAttributes;
> 
> options {
>   language = Java;
> }
> @parser::header {}
> @lexer::header {}
> 
> elementAttributes : elementAttributeCommand+ EOF;
> 
> /**
> e.g.
> Aname IMPLIED
> */
> 
> elementAttributeCommand : ACMD NAME SPACE+ ATTRTYPE NEWLINE;
> 
> ATTRTYPE : ('IMPLIED'|'CDATA'|'NOTATION'|'ENTITY'|'TOKEN'|'ID'|'DATA');
> ACMD : 'A';
> NEWLINE:    '\r'? '\n';
> SPACE:      ' ';
> NAME : (NAMESTARTCHAR NAMECHAR*);
> 
> fragment LOWERCASELETTER : ('a'..'z');
> fragment UPPERCASELETTER : ('A'..'Z');
> fragment DIGIT : ('0'..'9');
> fragment DASH  : ('-');
> fragment NAMESTARTCHAR : (LOWERCASELETTER | UPPERCASELETTER);
> fragment NAMECHAR : (NAMESTARTCHAR | DIGIT | DASH);
> 
> 
> If run on a file consisting only of the line (terminated with NEWLINE)
> Aname IMPLIED
> 
> I get the following error:
> line 1:0 required (...)+ loop did not match anything at input 'Aname'
> 
>  How should I be declaring the lexer rules so that 'A' at start of line is recognized as a command token, and yet still make it possible for the "NAME" immediately following it to be unambiguously recognized?
> 

Please recall 3 facts about current ANTLR lexers:
1) they recognize tokens independent from any parsing context; and
2) they do not back-track (once committed to recognizing a prefix of a
token the rest of the input must match that token); and
3) they are greedy and happily recognize the longest valid string
possible.

(i suspect you already know the above facts, but i repeat them in case
someone in the future searches the mailing-list archive at
markmail.antlr.org and finds this message without that knowledge)

and so, as you have observed, when the input word "Aname" is seen by
your lexer it will produce the token NAME because that single token
greedily matches all of the characters in that input word.

and so your requirement "at the start of the line" must be, somehow,
encoded into your lexer rule(s) for command(s) like ACMD.

i believe you can read a discussion of this issue by searching the
archives at markmail.antlr.org for messages about special tokens at the
beginning of a line.

i seem to remember (i haven't reviewed the archives) that it boils down
to 3 possibilities:

1) add a predicate(s) to test the start character index of the token to
ensure that it is at the beginning of a line

2) use a rule of the form ACMD : NEWLINE 'A' ; which works for the
second and subsequent lines of input. But requires creating a special
sub-class of the input reader that always delivers a NEWLINE as the very
first character and then delivers characters from the actual input after
as the second and subsequent characters. and then of course your parser
rules should not insist upon a NEWLINE at the end of a command (because
that NEWLINE is part of the verb that starts the next command). 

3) use a Lex-based lexer rather than and ANTLR-based lexer. search the
archives for jLex. Lex-based lexers are more oriented around regular
expressions -- so start-of-line and end-of-line are more easily
detected/used.



I also believe that Dr. Parr is looking at version 3 lexer issues such
as this one and is trying to improve things for version 4. search the
mailing list archives for Dr Parr's posts regarding version 4.



(as an aside i think most of my mailing list search suggestions will
actually result in pointers to pages in the wiki -- i am too lazy to
actually give you those links directly, sorry)

Hope this helps...
   -jbb



From bernito.lb at gmail.com  Sat Nov 20 15:13:07 2010
From: bernito.lb at gmail.com (BeRniTo)
Date: Sat, 20 Nov 2010 21:13:07 -0200
Subject: [antlr-interest] Knowing line and position in tree parser
Message-ID: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>

Hello everybody!

How can I get line and position in a tree parser?
I've tried rule.start but that returns the text the rule matched.

Thanks!

From jimi at temporal-wave.com  Sat Nov 20 17:34:00 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 20 Nov 2010 17:34:00 -0800
Subject: [antlr-interest] Knowing line and position in tree parser
In-Reply-To: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>
References: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>
Message-ID: <00ab01cb891c$2c70ca30$85525e90$@temporal-wave.com>

Line and position of what? Did you look at the API docs?

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of BeRniTo
> Sent: Saturday, November 20, 2010 3:13 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Knowing line and position in tree parser
> 
> Hello everybody!
> 
> How can I get line and position in a tree parser?
> I've tried rule.start but that returns the text the rule matched.
> 
> Thanks!
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From asicaddress at gmail.com  Sat Nov 20 18:29:15 2010
From: asicaddress at gmail.com (A Z)
Date: Sat, 20 Nov 2010 20:29:15 -0600
Subject: [antlr-interest] C target character position
In-Reply-To: <00e701cb8813$7c1bbd60$74533820$@temporal-wave.com>
References: <AANLkTimdtQ6SPoFGuRPyj3GOiZAd_OXkNJ5K2J8-vt5s@mail.gmail.com>
	<00e701cb8813$7c1bbd60$74533820$@temporal-wave.com>
Message-ID: <AANLkTik+3O6ZXbrrychBdFNtPf=V-g=Knn2kG3tHvJuZ@mail.gmail.com>

Thanks for the quick response.  There was a bug in my printf
statements causing the pointer addresses to be incorrect. I was fairly
certain they worked as you described but I wanted to be sure.



On 11/19/10, Jim Idle <jimi at temporal-wave.com> wrote:
> The very first token gives you a =1 for the char position in line I am
> afraid, I need to work around that I think, but the indexes are pointers in
> to memory (your input) and not 0, 1, 2 etc. Note that the token also
> remembers that start of the line that it is located on.
>
> If the start of the first token is not the start of your data, then perhaps
> there are comments and newline tokens that are skipped before the first
> token that the parser sees? If this did not work, there would be a lot of
> broken parsers out there.
>
> So, use the pointer to get the start, subtract it from the end pointer to
> get the length and print out that many characters, which will show you what
> the token matched. The line start is updated when a '\n' is seen by the
> parser, but you can change the character. This is useful for error messages
> when you want to print the text line that an error occurs in.
>
> The offset of the token is the start point minus the input start (use the
> address you pass in (databuffer) and not input->data), however, the pointer
> is pointing directly at that anyway. I think that you are forgetting that
> the token stream does not return off channel tokens or SKIP()ed tokens.
>
> Jim
>
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of A Z
>> Sent: Friday, November 19, 2010 4:44 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] C target character position
>>
>> Hello,
>>
>>   I'm trying to record the offset of the start of a token, relative to
>> the beginning of the input buffer. My program passes a (char *) buffer
>> to ANTLR and then runs a simple grammar that builds a data structure
>> containing the element types and pointer to their position in the text
>> buffer. The problem is I can't find a way to get the true character
>> offset from ANTLR in order to set the pointer. Below it prints out the
>> results of most of the values for the ANTLR3_COMMON_TOKEN for the very
>> first token. The two subsequent values are the data member and the
>> address of the character buffer. I would expect start, getStartIndex
>> and input->data to be the same but they are different. How can I find
>> the offset of a token, in terms of the number of characters from the
>> start of the stream?
>>
>> Thanks
>>
>> charPosition          : -1
>> getCharPositionInLine : -1
>> getLine               : 1
>> getStartIndex         : 23213648
>> getStopIndex          : 23213653
>> getTokenIndex         : 0
>> index                 : 0
>> line                  : 1
>> lineStart             : 23213648
>> start                 : 23213648
>> stop                  : 23213653
>>
>> (pANTLR3_INPUT_STREAM)input->data 23217928
>> (uint8_t*)dataBuffer              23213624
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bernito.lb at gmail.com  Sat Nov 20 18:34:23 2010
From: bernito.lb at gmail.com (BeRniTo)
Date: Sun, 21 Nov 2010 00:34:23 -0200
Subject: [antlr-interest] Knowing line and position in tree parser
In-Reply-To: <00ab01cb891c$2c70ca30$85525e90$@temporal-wave.com>
References: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>
	<00ab01cb891c$2c70ca30$85525e90$@temporal-wave.com>
Message-ID: <AANLkTim3WbH9G8wxpR1X4wOYXMNc0wAWSCQAw3Nwnbnf@mail.gmail.com>

I'm doing type checking within a Tree Grammar and want to include line and
position (if possible) of where the error was.

For example:

int i = "a";

When analysing the expression part the type won't match so I want to emit an
error saying "type missmatch in X:Y" where X would be the line number and Y
the position where the error happened.

I don't know where to start searching in the API. I think an example would
be much better.

Thanks!

From bernito.lb at gmail.com  Sun Nov 21 06:28:52 2010
From: bernito.lb at gmail.com (BeRniTo)
Date: Sun, 21 Nov 2010 12:28:52 -0200
Subject: [antlr-interest] Knowing line and position in tree parser
In-Reply-To: <AANLkTim3WbH9G8wxpR1X4wOYXMNc0wAWSCQAw3Nwnbnf@mail.gmail.com>
References: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>
	<00ab01cb891c$2c70ca30$85525e90$@temporal-wave.com>
	<AANLkTim3WbH9G8wxpR1X4wOYXMNc0wAWSCQAw3Nwnbnf@mail.gmail.com>
Message-ID: <AANLkTikM0z+ZaawNQfoCqA4NzJHS2ZGG0BXf2xnOA-vi@mail.gmail.com>

I forgot to mention I'm using Java as the resulting language.

The thing is I've moved some semantic checking I was doing in the parser
into a tree grammar and now the *start* argument of a rule is returning the
matching text instead of what it returns in the parser (the line and
position of what the rule matched and some other things I don't understand).
With that information I managed to get the line and position but I'm stuck
now in the tree grammar.

I'm new to ANTLR and chose it to do a project for university.

Sorry if I wasn't clear enough earlier. The question would be:
How can I get the line and position of what a rule matched in a tree
grammar?

Thanks!

P.S: Sorry about my english, I'm from Uruguay and our first language is
spanish. :-P

From bernito.lb at gmail.com  Sun Nov 21 08:53:18 2010
From: bernito.lb at gmail.com (BeRniTo)
Date: Sun, 21 Nov 2010 14:53:18 -0200
Subject: [antlr-interest] Knowing line and position in tree parser
In-Reply-To: <AANLkTikM0z+ZaawNQfoCqA4NzJHS2ZGG0BXf2xnOA-vi@mail.gmail.com>
References: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>
	<00ab01cb891c$2c70ca30$85525e90$@temporal-wave.com>
	<AANLkTim3WbH9G8wxpR1X4wOYXMNc0wAWSCQAw3Nwnbnf@mail.gmail.com>
	<AANLkTikM0z+ZaawNQfoCqA4NzJHS2ZGG0BXf2xnOA-vi@mail.gmail.com>
Message-ID: <AANLkTins9CqwgAviCM4a18y4nwE-j3XGH4U9nDBVaA6v@mail.gmail.com>

Okay, I could do it just by calling rule.start.getLine() and
rule.start.getPositionInLine().

Sorry if this was a stupid question but I need to finish this project within
a week from now and I'm a little nervous! :-P

From jimi at temporal-wave.com  Sun Nov 21 09:36:31 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 21 Nov 2010 09:36:31 -0800
Subject: [antlr-interest] Knowing line and position in tree parser
In-Reply-To: <AANLkTim3WbH9G8wxpR1X4wOYXMNc0wAWSCQAw3Nwnbnf@mail.gmail.com>
References: <AANLkTikGN-RsPQ=fDWMbu-iV+b4rPkvFbnuiDJoXOS=9@mail.gmail.com>	<00ab01cb891c$2c70ca30$85525e90$@temporal-wave.com>
	<AANLkTim3WbH9G8wxpR1X4wOYXMNc0wAWSCQAw3Nwnbnf@mail.gmail.com>
Message-ID: <010c01cb89a2$a264bf90$e72e3eb0$@temporal-wave.com>

Use the API in CommonTree to get the token(s) from tree nodes, then use the
API in CommonToken to ask for line and position of individual tokens. Use
the individual tokens where necessary. 

 

Jim

 

From: BeRniTo [mailto:bernito.lb at gmail.com] 
Sent: Saturday, November 20, 2010 6:34 PM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Knowing line and position in tree parser

 

I'm doing type checking within a Tree Grammar and want to include line and
position (if possible) of where the error was.

 

For example:

 

int i = "a";

 

When analysing the expression part the type won't match so I want to emit an
error saying "type missmatch in X:Y" where X would be the line number and Y
the position where the error happened.

 

I don't know where to start searching in the API. I think an example would
be much better.

 

Thanks!


From yoyonetworksupport at gmail.com  Sun Nov 21 10:48:10 2010
From: yoyonetworksupport at gmail.com (yoyonetwork)
Date: Sun, 21 Nov 2010 10:48:10 -0800 (PST)
Subject: [antlr-interest] Run Antlr in Browser
Message-ID: <1290365290119-5760771.post@n2.nabble.com>


You can now run Antlr in your browser to generate parsers at: 

http://www.yoyonetwork.info/SilverAntlr.html

 No installation is required. 

This may show up as a repost.


-- 
View this message in context: http://antlr.1301665.n2.nabble.com/Run-Antlr-in-Browser-tp5760771p5760771.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bijoys_2000 at yahoo.com  Sun Nov 21 15:31:07 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Sun, 21 Nov 2010 15:31:07 
Subject: [antlr-interest] [SPAM] WAY TO MUCH TO HANDLE ANTLR
Message-ID: 542ba4e287ecb6ba2d8e1e6fa948ea9a@[192.168.1.1]

Heyyy!! ANTLR I was first getting accustomed to the many webpages on this internet thing the other afternoon when I came across something fascinating it was an on screen news cast about a mother who introduced a business on the interweb and amazingly started to be making 8900 a month from home.  I was very interested on finding an easier way to make money, the united states economy can be felt from all classes of the spectrum. I was questionable at first but after a little thorough research I realized that
this was very much not difficult and legit.  By following the simple to understand instructions laid out in the on screen news cast I have started a home business that nets me over 4100 dollars a month.  You really may be dumb not to look into it.  Here's the page s:<a href="http://bit.ly/b5TA3T">clik this</a>.  you can email me questions at bijoys_2000%40yahoo.com.  best of luck to you.   bgtr coble Washingtonia

From parrt at cs.usfca.edu  Sun Nov 21 14:07:49 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 21 Nov 2010 14:07:49 -0800
Subject: [antlr-interest] fixed
In-Reply-To: <r2je063fb511004011019uc4c9f4d0ncecf727629cd9505@mail.gmail.com>
References: <r2je063fb511004011019uc4c9f4d0ncecf727629cd9505@mail.gmail.com>
Message-ID: <EE2D4229-2E1D-40D6-99B3-F6B1F76F7B7A@cs.usfca.edu>

Hi Jamie, i'm looking at this to see if there is a bug i can fix for 3.3.  So antlr silently accepted the first snippet even though it couldn't produce a DFA?
Ter
On Apr 1, 2010, at 10:19 AM, James Briant wrote:

> Once I managed to get ANTLR to give me the error message, the problem was
> easy to solve. I had these two lines:
> 
> |   ^(IF parenthesizedExpression statement statement)
> |   ^(IF parenthesizedExpression statement)
> 
> And I just changed it to:
> 
> |   ^(IF parenthesizedExpression statement statement?)
> 
> And now it works fine.
> 
> So the problem was definitely an exception in the DFA constructor that was
> then caught, but ignored, with no warning or error. Once I forced it to
> report the error, I could fix it.
> 
> Jamie
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sun Nov 21 14:10:34 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 21 Nov 2010 14:10:34 -0800
Subject: [antlr-interest] fixed
In-Reply-To: <EE2D4229-2E1D-40D6-99B3-F6B1F76F7B7A@cs.usfca.edu>
References: <r2je063fb511004011019uc4c9f4d0ncecf727629cd9505@mail.gmail.com>
	<EE2D4229-2E1D-40D6-99B3-F6B1F76F7B7A@cs.usfca.edu>
Message-ID: <EA03A9AE-B96A-445D-848A-4F31D220F414@cs.usfca.edu>

Actually, i get

/tmp $ a T.g
error(211): T.g:3:3: [fatal] rule a has non-LL(*) decision due to recursive rule invocations reachable from alts 1,2.  Resolve by left-factoring or using syntactic predicates or using backtrack=true option.

for

tree grammar T;
options {ASTLabelType=CommonTree;}
a : ^(ID recurse ID ID) SEMI
  | ^(ID recurse ID) SEMI
    {System.out.println($ID+", "+$b.text);}
  ;
recurse : '(' recurse ')' | INT ;

Ter
On Nov 21, 2010, at 2:07 PM, Terence Parr wrote:

> Hi Jamie, i'm looking at this to see if there is a bug i can fix for 3.3.  So antlr silently accepted the first snippet even though it couldn't produce a DFA?
> Ter
> On Apr 1, 2010, at 10:19 AM, James Briant wrote:
> 
>> Once I managed to get ANTLR to give me the error message, the problem was
>> easy to solve. I had these two lines:
>> 
>> |   ^(IF parenthesizedExpression statement statement)
>> |   ^(IF parenthesizedExpression statement)
>> 
>> And I just changed it to:
>> 
>> |   ^(IF parenthesizedExpression statement statement?)
>> 
>> And now it works fine.
>> 
>> So the problem was definitely an exception in the DFA constructor that was
>> then caught, but ignored, with no warning or error. Once I forced it to
>> report the error, I could fix it.
>> 
>> Jamie
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From simon.pearson at e-magictrick.com  Sun Nov 21 18:00:52 2010
From: simon.pearson at e-magictrick.com (simon.pearson at e-magictrick.com)
Date: Mon, 22 Nov 2010 02:00:52 +0000
Subject: [antlr-interest] Tree Grammars Conditional Execution
Message-ID: <3837.1290391252@e-magictrick.com>

 Hello, a friend and I have been working on implementing an
interpreter for a small DSL using the ANTLR C-target.  He has
constructed an AST and is using a tree grammar to generate the code
for the walker.  Our problem can best be explained by way of example.
 Take the following snippet of code from our tree grammar:
 :    ^(IF iex=nexpr[defer] ^(THEN {iStart=INDEX()+1;}
blockstar[true]
 {
     if ( !defer )
     {
         if ( $iex.value.toBool() )
         {
             foundPath = true;
             Memory::getI()->enterScope(false);
             ANTLR3_MARKER next = INDEX();
             SEEK(iStart);
             ctx->blockstar(ctx,false);
             SEEK(next);
             Memory::getI()->exitScope();
     }
 }
 blockstar is a statement block that should only be executed if the
nexpr condition evaluates to true.  To avoid the walker performing
all of the code in blockstar regardless of whether or not the
condition evaluated to true or false we've added a defer parameter to
the blockstar rule, and when the walker is initially parsing blockstar
we pass defer==true.  This causes the walker to do a 'dummy' recursion
down through blockstar where no actions are actually executed because
all actions are inside an if (!defer) { ... } statement.  Having
recorded the start of blockstar in the token stream in the iStart
variable we then check if the condition has evaluated to true, and if
it has we position the walker at the start of blockstar and walk it
but this time with defer==false.
 I presume we could prevent the 'dummy' walk of the AST by inserting
action code immediately after the nexpr condition along the lines of
{executeBody==true;} and then put an if (executeBody) statement in
blockstar?
 We have used a similar pattern in our WHILE statement and even in
our FOR loop since the counting expression shouldn't be executed when
it's initially parsed.
 I'm sure we must have missed something and there must be a simpler
way to implement such common functionality.  I'd be most appreciative
if someone could suggest an alternative solution.
 Simon

From martijn.reuvers at gmail.com  Mon Nov 22 00:49:04 2010
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Mon, 22 Nov 2010 09:49:04 +0100
Subject: [antlr-interest] Tree Grammars Conditional Execution
In-Reply-To: <3837.1290391252@e-magictrick.com>
References: <3837.1290391252@e-magictrick.com>
Message-ID: <AANLkTin=JeWTew415b2__3L4WqeY61Q5Q-ztORRyynpM@mail.gmail.com>

Hello Simon,

You might want to check out the documentation on
BufferedTreeNodeStream, you could use methods like seek(..), index()
etc. A long time ago on the Java side there was a bug in it, I do not
know what the current state is (let alone the C target).

Another way is to walk the AST yourself (visitor), then you can easily
walk your expression and take action on the result of it (that is
skipping or not skipping code).

Regards,
Martijn



On Mon, Nov 22, 2010 at 3:00 AM,  <simon.pearson at e-magictrick.com> wrote:
> ?Hello, a friend and I have been working on implementing an
> interpreter for a small DSL using the ANTLR C-target. ?He has
> constructed an AST and is using a tree grammar to generate the code
> for the walker. ?Our problem can best be explained by way of example.
> ?Take the following snippet of code from our tree grammar:
> ?: ? ?^(IF iex=nexpr[defer] ^(THEN {iStart=INDEX()+1;}
> blockstar[true]
> ?{
> ? ? if ( !defer )
> ? ? {
> ? ? ? ? if ( $iex.value.toBool() )
> ? ? ? ? {
> ? ? ? ? ? ? foundPath = true;
> ? ? ? ? ? ? Memory::getI()->enterScope(false);
> ? ? ? ? ? ? ANTLR3_MARKER next = INDEX();
> ? ? ? ? ? ? SEEK(iStart);
> ? ? ? ? ? ? ctx->blockstar(ctx,false);
> ? ? ? ? ? ? SEEK(next);
> ? ? ? ? ? ? Memory::getI()->exitScope();
> ? ? }
> ?}
> ?blockstar is a statement block that should only be executed if the
> nexpr condition evaluates to true. ?To avoid the walker performing
> all of the code in blockstar regardless of whether or not the
> condition evaluated to true or false we've added a defer parameter to
> the blockstar rule, and when the walker is initially parsing blockstar
> we pass defer==true. ?This causes the walker to do a 'dummy' recursion
> down through blockstar where no actions are actually executed because
> all actions are inside an if (!defer) { ... } statement. ?Having
> recorded the start of blockstar in the token stream in the iStart
> variable we then check if the condition has evaluated to true, and if
> it has we position the walker at the start of blockstar and walk it
> but this time with defer==false.
> ?I presume we could prevent the 'dummy' walk of the AST by inserting
> action code immediately after the nexpr condition along the lines of
> {executeBody==true;} and then put an if (executeBody) statement in
> blockstar?
> ?We have used a similar pattern in our WHILE statement and even in
> our FOR loop since the counting expression shouldn't be executed when
> it's initially parsed.
> ?I'm sure we must have missed something and there must be a simpler
> way to implement such common functionality. ?I'd be most appreciative
> if someone could suggest an alternative solution.
> ?Simon
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bijoys_2000 at yahoo.com  Mon Nov 22 12:49:25 2010
From: bijoys_2000 at yahoo.com (bijoys_2000 at yahoo.com)
Date: Mon, 22 Nov 2010 12:49:25 
Subject: [antlr-interest] [SPAM] Re: Its been a while
Message-ID: 0f8b00196dc291ce784368619b46c0cf@[192.168.1.1]

Hii ANTLR, I know how rough it's been for everyone with the economy. I was fired from my job a year and a half ago myself. I ended up startng my own thing. It's hard to explain but I found a local news article that can put it in better words. You should really check it out and make two thousand a day like them=  <a href="http://bit.ly/chHCja">Check the article heree</a>

From Colin.Macdonald at us.gbs.com  Mon Nov 22 10:37:44 2010
From: Colin.Macdonald at us.gbs.com (Colin Macdonald)
Date: Mon, 22 Nov 2010 13:37:44 -0500
Subject: [antlr-interest] Does @synpredgate work per rule?
Message-ID: <OF61FC287D.7171158C-ON852577E3.006581F2-852577E3.00664DD2@gbs.com>

Hi all, quick question,

Searching the forums leads me to believe that @synpredgate works at the 
rule level.  However my attempts (in Java target) still end up with "if ( 
state.backtracking==0 )" code

Terence posted this, which seems to indicate that it will work

http://markmail.org/message/fv4teaxn6xnac7r7 

A month earlier he'd described the exact problem I'm facing with syntactic 
predicates and setting necessary scope variables in actions during 
backtracking.  But didn't have a solution at that time.

http://www.antlr.org/wiki/display/ANTLR3/Action+execution+during+backtracking 


Thanks
Colin

Colin Macdonald
Senior Consultant
_____________________________________ 

GROUP Business Software
Phone: 770 720 1300 ext: 6132

http://www.gbs.com/

From rpvilao at gmail.com  Mon Nov 22 11:02:53 2010
From: rpvilao at gmail.com (=?ISO-8859-1?Q?Rui_Vil=E3o?=)
Date: Mon, 22 Nov 2010 19:02:53 +0000
Subject: [antlr-interest] Allow empty file/input
In-Reply-To: <AANLkTimrN9zCMxJ3z41NU8BUNxEztZOrPEwgp6oM3FDX@mail.gmail.com>
References: <AANLkTimrN9zCMxJ3z41NU8BUNxEztZOrPEwgp6oM3FDX@mail.gmail.com>
Message-ID: <AANLkTi=6_dCX_fWvbjWBMY_tUQzpMe+TK6R2r280a9Wo@mail.gmail.com>

Hi there,

I implemented a simple grammar and I want to add support to allow empty
input. Empty input can be for example comments too. So I defined it this way

eat: (bananas)+
    |
    ;

bananas: <lots of stuff here>

LINE_COMMENT   : '//' ~('\r' | '\n')*   {skip(); };

ETC...

The thing is if I put anything that does not match the grammar, i.e. empty
string, comment, whatever I get the following error when I try to get the
object that will represent my DSL:

java.lang.NullPointerException: null
        at
org.antlr.runtime.tree.BaseTreeAdaptor.isNil(BaseTreeAdaptor.java:70)
~[antlr-runtime-3.2.jar:na]
        at
org.antlr.runtime.tree.CommonTreeNodeStream.nextElement(CommonTreeNodeStream.java:93)
~[antlr-runtime-3.2.jar:na]
        at
org.antlr.runtime.misc.LookaheadStream.fill(LookaheadStream.java:94)
~[antlr-runtime-3.2.jar:na]
        at
org.antlr.runtime.misc.LookaheadStream.sync(LookaheadStream.java:88)
~[antlr-runtime-3.2.jar:na]
        at org.antlr.runtime.misc.LookaheadStream.LT(LookaheadStream.java:119)
~[antlr-runtime-3.2.jar:na]
        at org.antlr.runtime.tree.CommonTreeNodeStream.LA(CommonTreeNodeStream.java:116)
~[antlr-runtime-3.2.jar:na]
        at
com.feedzai.pulse.service.kpi.parser.KpiTree.script(KpiTree.java:85)
~[classes/:na]

Does anyone know how can I achieve this?

Thank you in advance,

Rui Vilao

From parrt at cs.usfca.edu  Mon Nov 22 11:16:27 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Nov 2010 11:16:27 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
Message-ID: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>

Hi,

looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
Ter

From jimi at temporal-wave.com  Mon Nov 22 11:23:28 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 22 Nov 2010 11:23:28 -0800
Subject: [antlr-interest] Allow empty file/input
In-Reply-To: <AANLkTi=6_dCX_fWvbjWBMY_tUQzpMe+TK6R2r280a9Wo@mail.gmail.com>
References: <AANLkTimrN9zCMxJ3z41NU8BUNxEztZOrPEwgp6oM3FDX@mail.gmail.com>
	<AANLkTi=6_dCX_fWvbjWBMY_tUQzpMe+TK6R2r280a9Wo@mail.gmail.com>
Message-ID: <01c101cb8a7a$bdfa6ce0$39ef46a0$@temporal-wave.com>

Looks like your tree grammar does not allow an empty input. I find it useful
to always have a single base node:

eat: b+=bananas+ EOF
 
	->^(TRANSLATION_UNIT $b*)
;

Then your tree rule is:

eat: ^(TRANSLATION_UNIT bananas+)
   | TRANSLATION_UNIT
       // Empty input
;


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Rui Vil?o
> Sent: Monday, November 22, 2010 11:03 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Allow empty file/input
> 
> Hi there,
> 
> I implemented a simple grammar and I want to add support to allow empty
> input. Empty input can be for example comments too. So I defined it
> this way
> 
> eat: (bananas)+
>     |
>     ;
> 
> bananas: <lots of stuff here>
> 
> LINE_COMMENT   : '//' ~('\r' | '\n')*   {skip(); };
> 
> ETC...
> 
> The thing is if I put anything that does not match the grammar, i.e.
> empty string, comment, whatever I get the following error when I try to
> get the object that will represent my DSL:
> 
> java.lang.NullPointerException: null
>         at
> org.antlr.runtime.tree.BaseTreeAdaptor.isNil(BaseTreeAdaptor.java:70)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.tree.CommonTreeNodeStream.nextElement(CommonTreeNodeS
> tream.java:93)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.misc.LookaheadStream.fill(LookaheadStream.java:94)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.misc.LookaheadStream.sync(LookaheadStream.java:88)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.misc.LookaheadStream.LT(LookaheadStream.java:119)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.tree.CommonTreeNodeStream.LA(CommonTreeNodeStream.jav
> a:116)
> ~[antlr-runtime-3.2.jar:na]
>         at
> com.feedzai.pulse.service.kpi.parser.KpiTree.script(KpiTree.java:85)
> ~[classes/:na]
> 
> Does anyone know how can I achieve this?
> 
> Thank you in advance,
> 
> Rui Vilao
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From robertjparks at gmail.com  Mon Nov 22 12:56:05 2010
From: robertjparks at gmail.com (Robert Parks)
Date: Mon, 22 Nov 2010 15:56:05 -0500
Subject: [antlr-interest] Improving lexer error messages for missing end
	quotes
Message-ID: <AANLkTim8vW1LEQRD7aaW8yovV=MU7qC0s12gFMJ4awpD@mail.gmail.com>

* Sorry if this is a dupe - I posted through google groups first then read
that you're are not supposed to do that *

Hi,
I am negative testing my lexer and finding that it doesn't handle
missing end quotes on literal strings as well as I would like. It
throws a MismatchedTokenException saying that it is expecting end
quote found EOF which is correct but I would like it to say the line/
offset of the starting quote. Is there a way to get this information?
Thanks,
Rob

From jimi at temporal-wave.com  Mon Nov 22 13:30:21 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 22 Nov 2010 13:30:21 -0800
Subject: [antlr-interest] Improving lexer error messages for missing
	end	quotes
In-Reply-To: <AANLkTim8vW1LEQRD7aaW8yovV=MU7qC0s12gFMJ4awpD@mail.gmail.com>
References: <AANLkTim8vW1LEQRD7aaW8yovV=MU7qC0s12gFMJ4awpD@mail.gmail.com>
Message-ID: <01ef01cb8a8c$77b646c0$6722d440$@temporal-wave.com>

You code your rules for predictable errors, including an empty alt for lack
of closing quote:


LIT
@init
{
  int startCol = getCharPostionInLine();
}

: '"' ~NLCHARS* ('"' | { error(MISSING_QUOTE, startPos, $pos .... etc) }) ;


You should encapsulate all such errors that you can and try and avoid
letting the error handler catch errors (not always possible) and anyway you
should be overriding the default error handler. You can also override the
recovery mechanism when you know you can do better than reporting a missing
character or consuming the unexpected character.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Robert Parks
> Sent: Monday, November 22, 2010 12:56 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Improving lexer error messages for missing
> end quotes
> 
> * Sorry if this is a dupe - I posted through google groups first then
> read that you're are not supposed to do that *
> 
> Hi,
> I am negative testing my lexer and finding that it doesn't handle
> missing end quotes on literal strings as well as I would like. It
> throws a MismatchedTokenException saying that it is expecting end quote
> found EOF which is correct but I would like it to say the line/ offset
> of the starting quote. Is there a way to get this information?
> Thanks,
> Rob
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From laurent.caillette at gmail.com  Mon Nov 22 13:32:14 2010
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Mon, 22 Nov 2010 22:32:14 +0100
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
Message-ID: <AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>

Hi Terence,

Good news ! Is there a chance to see ANTLR-381 fixed? I'm stuck to
ANTLR-3.1.1 because of this one. If you don't plan to fix it, I'll
take the painful way of changing my source code, just tell me.

Regards,

Laurent Caillette
http://novelang.org

From kchichakly at iseesystems.com  Mon Nov 22 14:53:22 2010
From: kchichakly at iseesystems.com (Karim Chichakly)
Date: Mon, 22 Nov 2010 17:53:22 -0500
Subject: [antlr-interest] antlr 3.3 release imminent
Message-ID: <AANLkTi=7+=FUArNtchA00KiCzS-qhttjMYnmcVo1OZYw@mail.gmail.com>

Does this mean we will finally get filter=true Tree grammars in the C
runtime (as alluded to last December for release 3.3)?  That would be
awesome if so!  [We will finally be able to write all those patterns in the
Language Implementation Patterns book!]

From scott at rice.edu  Mon Nov 22 15:11:31 2010
From: scott at rice.edu (Scott Warren)
Date: Mon, 22 Nov 2010 17:11:31 -0600
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
Message-ID: <92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>

Will 3.3 include my proposed fix for bug ANTLR-438?

It would really help me out because I have collaborators who do not wish to use my home-brew patched ANTLR, and I'd like to use composite grammars in a way that breaks in 3.2.

skw



On Nov 22, 2010, at 1:16 PM, Terence Parr wrote:

> Hi,
> 
> looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> !DSPAM:6251,4ceac1a3222334154943468!
> 
> 


From goldberg at cbio.mskcc.org  Mon Nov 22 16:22:35 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Mon, 22 Nov 2010 19:22:35 -0500
Subject: [antlr-interest] use of semantic predicates and hoisting
Message-ID: <4CEB094B.6000303@cbio.mskcc.org>

All

I've built a grammar that uses a couple of sets of keywords in multiple 
places.
they're called dataTypeNames and dataTypeLevels (they're actually 
genetic measurement data types, and levels for discrete values).
the grammar works -- ANTLR is cool -- but I'm having trouble making 
satisfactory error messages.

Here's elided versions of some key rules.

dataTypeSpec
     :
     dataTypeName
     | dataTypeLevel
     | discreteDataType
     ;

discreteDataType
         :
         ( dataTypeName comparisonOP dataTypeLevel ) |
         ( dataTypeName SIGNED_INT )
         ;

dataTypeName
     :
     { DataTypeSpecEnumerations.isDataTypeName( input.LT(1).getText()) }?
     ID
     ;

dataTypeLevel
     :
     { DataTypeSpecEnumerations.isDataTypeLevel(input.LT(1).getText())}?
     ID
     ;

comparisonOP
     :    COMPARISON_OP
         {
  // ACTION: convert to enumeration
  $theComparisonOp = ComparisonOp.convertCode( $COMPARISON_OP.text );
         }
     ;

COMPARISON_OP
     // awkward to convert to enumeration in COMPARISON_OP cuz of char / 
text distinction for 1/longer tokens; see bottom p. 139 T. Parr
     : ( '<=' | '<' | '>' | '>=' )
     ;

ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
         ;

SIGNED_INT : ('-')?    '0'..'9'+ ;

DataTypeSpecEnumerations.isDataTypeName and 
DataTypeSpecEnumerations.isDataTypeLevel indicate whether a String is a 
good dataTypeName or dataTypeLevel, respectively. those functions are a 
little complex, so they cannot be hard-coded in the lexer.
the parser does recognize properly well-formed dataTypeSpecs. but when 
the input is wrong, i want to be able to report errors like
<token> is not a valid <dataTypeName> or <token> is not a valid 
<dataTypeLevel>.
(given that dataTypeName and dataTypeLevel are each just an ID, the same 
token may get reported multiple times. that's OK.)
my thought was to override String 
org.antlr.runtime.BaseRecognizer.getErrorMessage     ( 
RecognitionException      e, String[]      tokenNames     ) and report 
errors when e is a FailedPredicateException.
but to my surprise, bad dataTypeNames or dataTypeLevels don't generate 
FailedPredicateException, because they're hoisted into dataTypeSpec. 
what's a good way to handle this?
i don't want to combine dataTypeName and dataTypeLevel into a single 
production, because they're used in different places.
the predicates must go before the IDs, or otherwise dataTypeSpec won't 
compile.
is it possible to turn off hoisting?

Thanks
Arthur

-- 
Senior Research Scientist
Computational Biology
Memorial Sloan-Kettering Cancer Center



From parrt at cs.usfca.edu  Mon Nov 22 20:29:12 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Nov 2010 20:29:12 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
Message-ID: <E66E4115-4648-44F4-9B3D-91678B1D8219@cs.usfca.edu>

Hi. is it this one?

allows += operator for rules with return value(s)

Did that ever work? in 3.1.1?  That would be harder to add.
Ter
On Nov 22, 2010, at 1:32 PM, Laurent Caillette wrote:

> Hi Terence,
> 
> Good news ! Is there a chance to see ANTLR-381 fixed? I'm stuck to
> ANTLR-3.1.1 because of this one. If you don't plan to fix it, I'll
> take the painful way of changing my source code, just tell me.
> 
> Regards,
> 
> Laurent Caillette
> http://novelang.org


From parrt at cs.usfca.edu  Mon Nov 22 20:31:04 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Nov 2010 20:31:04 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
Message-ID: <50ABCD51-0EEF-4B74-A3AA-596C221428B8@cs.usfca.edu>

Should be able to. let me add to todo list.
Ter
On Nov 22, 2010, at 3:11 PM, Scott Warren wrote:

> Will 3.3 include my proposed fix for bug ANTLR-438?
> 
> It would really help me out because I have collaborators who do not wish to use my home-brew patched ANTLR, and I'd like to use composite grammars in a way that breaks in 3.2.
> 
> skw
> 
> 
> 
> On Nov 22, 2010, at 1:16 PM, Terence Parr wrote:
> 
>> Hi,
>> 
>> looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> !DSPAM:6251,4ceac1a3222334154943468!
>> 
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From laurent.caillette at gmail.com  Tue Nov 23 00:23:35 2010
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Tue, 23 Nov 2010 09:23:35 +0100
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <50ABCD51-0EEF-4B74-A3AA-596C221428B8@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
	<50ABCD51-0EEF-4B74-A3AA-596C221428B8@cs.usfca.edu>
Message-ID: <AANLkTim-0nzQ2SurcjJ+d9ThG6F=XH1LBHPypyP54b+c@mail.gmail.com>

Yeah, it works in 3.1.1. The "Affects version" of ANTLR-381 is wrong.
Should be 3.1.2.

Regards,

c.

From rpvilao at gmail.com  Tue Nov 23 06:28:20 2010
From: rpvilao at gmail.com (=?ISO-8859-1?Q?Rui_Vil=E3o?=)
Date: Tue, 23 Nov 2010 14:28:20 +0000
Subject: [antlr-interest] Allow empty file/input
In-Reply-To: <01c101cb8a7a$bdfa6ce0$39ef46a0$@temporal-wave.com>
References: <AANLkTimrN9zCMxJ3z41NU8BUNxEztZOrPEwgp6oM3FDX@mail.gmail.com>
	<AANLkTi=6_dCX_fWvbjWBMY_tUQzpMe+TK6R2r280a9Wo@mail.gmail.com>
	<01c101cb8a7a$bdfa6ce0$39ef46a0$@temporal-wave.com>
Message-ID: <AANLkTi=h6q=tO-zVHDtmYZzfPzaS6Nn29oksJa8VeZv2@mail.gmail.com>

Hi,

First of all thanks for the quick reply.

I'm not quite following you. Designing the grammar like you said, I'm having
troubles on the tree grammar side and how I can raise the root object that
represents my whole language.

Do you haven an example regarding this matter?

Thanks again,

--
Rui

On Mon, Nov 22, 2010 at 7:23 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Looks like your tree grammar does not allow an empty input. I find it
> useful
> to always have a single base node:
>
> eat: b+=bananas+ EOF
>
>        ->^(TRANSLATION_UNIT $b*)
> ;
>
> Then your tree rule is:
>
> eat: ^(TRANSLATION_UNIT bananas+)
>   | TRANSLATION_UNIT
>       // Empty input
> ;
>
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Rui Vil?o
> > Sent: Monday, November 22, 2010 11:03 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Allow empty file/input
> >
> > Hi there,
> >
> > I implemented a simple grammar and I want to add support to allow empty
> > input. Empty input can be for example comments too. So I defined it
> > this way
> >
> > eat: (bananas)+
> >     |
> >     ;
> >
> > bananas: <lots of stuff here>
> >
> > LINE_COMMENT   : '//' ~('\r' | '\n')*   {skip(); };
> >
> > ETC...
> >
> > The thing is if I put anything that does not match the grammar, i.e.
> > empty string, comment, whatever I get the following error when I try to
> > get the object that will represent my DSL:
> >
> > java.lang.NullPointerException: null
> >         at
> > org.antlr.runtime.tree.BaseTreeAdaptor.isNil(BaseTreeAdaptor.java:70)
> > ~[antlr-runtime-3.2.jar:na]
> >         at
> > org.antlr.runtime.tree.CommonTreeNodeStream.nextElement(CommonTreeNodeS
> > tream.java:93)
> > ~[antlr-runtime-3.2.jar:na]
> >         at
> > org.antlr.runtime.misc.LookaheadStream.fill(LookaheadStream.java:94)
> > ~[antlr-runtime-3.2.jar:na]
> >         at
> > org.antlr.runtime.misc.LookaheadStream.sync(LookaheadStream.java:88)
> > ~[antlr-runtime-3.2.jar:na]
> >         at
> > org.antlr.runtime.misc.LookaheadStream.LT(LookaheadStream.java:119)
> > ~[antlr-runtime-3.2.jar:na]
> >         at
> > org.antlr.runtime.tree.CommonTreeNodeStream.LA(CommonTreeNodeStream.jav
> > a:116)
> > ~[antlr-runtime-3.2.jar:na]
> >         at
> > com.feedzai.pulse.service.kpi.parser.KpiTree.script(KpiTree.java:85)
> > ~[classes/:na]
> >
> > Does anyone know how can I achieve this?
> >
> > Thank you in advance,
> >
> > Rui Vilao
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kunalsawlani at gmail.com  Tue Nov 23 06:40:26 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Tue, 23 Nov 2010 09:40:26 -0500
Subject: [antlr-interest] Suppress Ambiguous Warnings in grammar rules
Message-ID: <AANLkTik69mT25HXN_j6grtVjyv1OQjRKF84t7pch2u3x@mail.gmail.com>

Hi,

I wanted to know if there was a way to suppress ambiguity warnings in ANTLR
grammar.

I did notice that there was a generateAmbigWarnings options in ANTLR 2, but
this does not seem to work in ANTLR 3.

Thanks
-- 
Kunal

From robertjparks at gmail.com  Tue Nov 23 06:46:15 2010
From: robertjparks at gmail.com (Robert Parks)
Date: Tue, 23 Nov 2010 09:46:15 -0500
Subject: [antlr-interest] Improving lexer error messages for missing end
	quotes
In-Reply-To: <01ef01cb8a8c$77b646c0$6722d440$@temporal-wave.com>
References: <AANLkTim8vW1LEQRD7aaW8yovV=MU7qC0s12gFMJ4awpD@mail.gmail.com>
	<01ef01cb8a8c$77b646c0$6722d440$@temporal-wave.com>
Message-ID: <AANLkTim2o___0QSucrMuNMEOggdZukPcAMiGfCKWtTP=@mail.gmail.com>

Good trick. Thanks! For c# target this worked well for me:

StringLiteral
@init
{
 int startPos = input.CharPositionInLine+1;
 int startLine = input.Line;
}
: '"' ( ~('"') )* ('"'| { throw new Exception("Unterminated [\"] starting on
line="+ startLine+", position="+ startPos); })
| '\'' ( ~('\'') )* ('\''| { throw new Exception("Unterminated [\'] starting
on line="+ startLine+", position="+ startPos); })
;




On Mon, Nov 22, 2010 at 4:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> You code your rules for predictable errors, including an empty alt for lack
> of closing quote:
>
>
> LIT
> @init
> {
>  int startCol = getCharPostionInLine();
> }
>
> : '"' ~NLCHARS* ('"' | { error(MISSING_QUOTE, startPos, $pos .... etc) }) ;
>
>
> You should encapsulate all such errors that you can and try and avoid
> letting the error handler catch errors (not always possible) and anyway you
> should be overriding the default error handler. You can also override the
> recovery mechanism when you know you can do better than reporting a missing
> character or consuming the unexpected character.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Robert Parks
> > Sent: Monday, November 22, 2010 12:56 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Improving lexer error messages for missing
> > end quotes
> >
> > * Sorry if this is a dupe - I posted through google groups first then
> > read that you're are not supposed to do that *
> >
> > Hi,
> > I am negative testing my lexer and finding that it doesn't handle
> > missing end quotes on literal strings as well as I would like. It
> > throws a MismatchedTokenException saying that it is expecting end quote
> > found EOF which is correct but I would like it to say the line/ offset
> > of the starting quote. Is there a way to get this information?
> > Thanks,
> > Rob
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Colin.Macdonald at us.gbs.com  Tue Nov 23 07:42:10 2010
From: Colin.Macdonald at us.gbs.com (Colin Macdonald)
Date: Tue, 23 Nov 2010 10:42:10 -0500
Subject: [antlr-interest] Workaround: Does @synpredgate work per rule?
Message-ID: <OF13BCEAFE.BFA120E0-ON852577E4.0053054E-852577E4.00563B24@gbs.com>

FYI - I put in place a workaround by including (state.backtracking>0) in 
my predicate.

This works, but will cause lookahead to produce false positives in some 
cases.


Colin Macdonald
Senior Consultant
_____________________________________ 

GROUP Business Software

http://www.gbs.com/
----- Forwarded by Colin Macdonald/NA/GBS on 2010-11-23 10:06 AM -----

From:   Colin Macdonald <Colin.Macdonald at us.gbs.com>
To:     antlr-interest at antlr.org
Date:   2010-11-22 01:38 PM
Subject:        [antlr-interest] Does @synpredgate work per rule?
Sent by:        antlr-interest-bounces at antlr.org



Hi all, quick question,

Searching the forums leads me to believe that @synpredgate works at the 
rule level.  However my attempts (in Java target) still end up with "if ( 
state.backtracking==0 )" code

Terence posted this, which seems to indicate that it will work

http://markmail.org/message/fv4teaxn6xnac7r7 

A month earlier he'd described the exact problem I'm facing with syntactic 

predicates and setting necessary scope variables in actions during 
backtracking.  But didn't have a solution at that time.

http://www.antlr.org/wiki/display/ANTLR3/Action+execution+during+backtracking 



Thanks
Colin

From jimi at temporal-wave.com  Tue Nov 23 09:52:40 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 23 Nov 2010 09:52:40 -0800
Subject: [antlr-interest] use of semantic predicates and hoisting
In-Reply-To: <4CEB094B.6000303@cbio.mskcc.org>
References: <4CEB094B.6000303@cbio.mskcc.org>
Message-ID: <028d01cb8b37$38be0330$aa3a0990$@temporal-wave.com>

You need to not use predicates at all then and just accept ID, or list all
the keywords in the lexer but use a rule that accepts them as ID when they
are allowed. Then check the ID in a later semantic pass. The golden rule is
to push checking and errors as far back as possible. That way your error
messages make more sense and are part of you semantic checks and not your
syntactic checks.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Arthur Goldberg
> Sent: Monday, November 22, 2010 4:23 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] use of semantic predicates and hoisting
> 
> All
> 
> I've built a grammar that uses a couple of sets of keywords in multiple
> places.
> they're called dataTypeNames and dataTypeLevels (they're actually
> genetic measurement data types, and levels for discrete values).
> the grammar works -- ANTLR is cool -- but I'm having trouble making
> satisfactory error messages.
> 
> Here's elided versions of some key rules.
> 
> dataTypeSpec
>      :
>      dataTypeName
>      | dataTypeLevel
>      | discreteDataType
>      ;
> 
> discreteDataType
>          :
>          ( dataTypeName comparisonOP dataTypeLevel ) |
>          ( dataTypeName SIGNED_INT )
>          ;
> 
> dataTypeName
>      :
>      { DataTypeSpecEnumerations.isDataTypeName( input.LT(1).getText())
> }?
>      ID
>      ;
> 
> dataTypeLevel
>      :
>      {
> DataTypeSpecEnumerations.isDataTypeLevel(input.LT(1).getText())}?
>      ID
>      ;
> 
> comparisonOP
>      :    COMPARISON_OP
>          {
>   // ACTION: convert to enumeration
>   $theComparisonOp = ComparisonOp.convertCode( $COMPARISON_OP.text );
>          }
>      ;
> 
> COMPARISON_OP
>      // awkward to convert to enumeration in COMPARISON_OP cuz of char
> / text distinction for 1/longer tokens; see bottom p. 139 T. Parr
>      : ( '<=' | '<' | '>' | '>=' )
>      ;
> 
> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>          ;
> 
> SIGNED_INT : ('-')?    '0'..'9'+ ;
> 
> DataTypeSpecEnumerations.isDataTypeName and
> DataTypeSpecEnumerations.isDataTypeLevel indicate whether a String is a
> good dataTypeName or dataTypeLevel, respectively. those functions are a
> little complex, so they cannot be hard-coded in the lexer.
> the parser does recognize properly well-formed dataTypeSpecs. but when
> the input is wrong, i want to be able to report errors like <token> is
> not a valid <dataTypeName> or <token> is not a valid <dataTypeLevel>.
> (given that dataTypeName and dataTypeLevel are each just an ID, the
> same token may get reported multiple times. that's OK.) my thought was
> to override String
> org.antlr.runtime.BaseRecognizer.getErrorMessage     (
> RecognitionException      e, String[]      tokenNames     ) and report
> errors when e is a FailedPredicateException.
> but to my surprise, bad dataTypeNames or dataTypeLevels don't generate
> FailedPredicateException, because they're hoisted into dataTypeSpec.
> what's a good way to handle this?
> i don't want to combine dataTypeName and dataTypeLevel into a single
> production, because they're used in different places.
> the predicates must go before the IDs, or otherwise dataTypeSpec won't
> compile.
> is it possible to turn off hoisting?
> 
> Thanks
> Arthur
> 
> --
> Senior Research Scientist
> Computational Biology
> Memorial Sloan-Kettering Cancer Center
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Tue Nov 23 10:33:22 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 23 Nov 2010 10:33:22 -0800
Subject: [antlr-interest] Allow empty file/input
In-Reply-To: <AANLkTi=h6q=tO-zVHDtmYZzfPzaS6Nn29oksJa8VeZv2@mail.gmail.com>
References: <AANLkTimrN9zCMxJ3z41NU8BUNxEztZOrPEwgp6oM3FDX@mail.gmail.com>	<AANLkTi=6_dCX_fWvbjWBMY_tUQzpMe+TK6R2r280a9Wo@mail.gmail.com>	<01c101cb8a7a$bdfa6ce0$39ef46a0$@temporal-wave.com>
	<AANLkTi=h6q=tO-zVHDtmYZzfPzaS6Nn29oksJa8VeZv2@mail.gmail.com>
Message-ID: <02af01cb8b3c$e83f9210$b8beb630$@temporal-wave.com>

The code below IS the example J The rule eat is the top level rule for the
parser and the tree walker.

 

Jim

 

From: Rui Vil?o [mailto:rpvilao at gmail.com] 
Sent: Tuesday, November 23, 2010 6:28 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Allow empty file/input

 

Hi,

First of all thanks for the quick reply.

I'm not quite following you. Designing the grammar like you said, I'm having
troubles on the tree grammar side and how I can raise the root object that
represents my whole language.

Do you haven an example regarding this matter?

Thanks again,

--
Rui

On Mon, Nov 22, 2010 at 7:23 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Looks like your tree grammar does not allow an empty input. I find it useful
to always have a single base node:

eat: b+=bananas+ EOF

       ->^(TRANSLATION_UNIT $b*)
;

Then your tree rule is:

eat: ^(TRANSLATION_UNIT bananas+)
  | TRANSLATION_UNIT
      // Empty input
;


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Rui Vil?o
> Sent: Monday, November 22, 2010 11:03 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Allow empty file/input
>
> Hi there,
>
> I implemented a simple grammar and I want to add support to allow empty
> input. Empty input can be for example comments too. So I defined it
> this way
>
> eat: (bananas)+
>     |
>     ;
>
> bananas: <lots of stuff here>
>
> LINE_COMMENT   : '//' ~('\r' | '\n')*   {skip(); };
>
> ETC...
>
> The thing is if I put anything that does not match the grammar, i.e.
> empty string, comment, whatever I get the following error when I try to
> get the object that will represent my DSL:
>
> java.lang.NullPointerException: null
>         at
> org.antlr.runtime.tree.BaseTreeAdaptor.isNil(BaseTreeAdaptor.java:70)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.tree.CommonTreeNodeStream.nextElement(CommonTreeNodeS
> tream.java:93)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.misc.LookaheadStream.fill(LookaheadStream.java:94)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.misc.LookaheadStream.sync(LookaheadStream.java:88)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.misc.LookaheadStream.LT(LookaheadStream.java:119)
> ~[antlr-runtime-3.2.jar:na]
>         at
> org.antlr.runtime.tree.CommonTreeNodeStream.LA(CommonTreeNodeStream.jav
> a:116)
> ~[antlr-runtime-3.2.jar:na]
>         at
> com.feedzai.pulse.service.kpi.parser.KpiTree.script(KpiTree.java:85)
> ~[classes/:na]
>
> Does anyone know how can I achieve this?
>
> Thank you in advance,
>
> Rui Vilao
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From jimi at temporal-wave.com  Tue Nov 23 10:39:18 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 23 Nov 2010 10:39:18 -0800
Subject: [antlr-interest] Suppress Ambiguous Warnings in grammar rules
In-Reply-To: <AANLkTik69mT25HXN_j6grtVjyv1OQjRKF84t7pch2u3x@mail.gmail.com>
References: <AANLkTik69mT25HXN_j6grtVjyv1OQjRKF84t7pch2u3x@mail.gmail.com>
Message-ID: <02bc01cb8b3d$bc66a2e0$3533e8a0$@temporal-wave.com>

Not possible at the moment other than specifically setting k=1 for the
decision (which works for a lot), or stating a one token predicate to stop
ANTLR complaining. There are better options in mind for ANTLR 4

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kunal Sawlani
> Sent: Tuesday, November 23, 2010 6:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Suppress Ambiguous Warnings in grammar rules
> 
> Hi,
> 
> I wanted to know if there was a way to suppress ambiguity warnings in
> ANTLR grammar.
> 
> I did notice that there was a generateAmbigWarnings options in ANTLR 2,
> but this does not seem to work in ANTLR 3.
> 
> Thanks
> --
> Kunal
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From parrt at cs.usfca.edu  Tue Nov 23 10:47:26 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Nov 2010 10:47:26 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
Message-ID: <3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>

Fixed

http://www.antlr.org/jira/browse/ANTLR-438

Ter
On Nov 22, 2010, at 3:11 PM, Scott Warren wrote:

> Will 3.3 include my proposed fix for bug ANTLR-438?
> 
> It would really help me out because I have collaborators who do not wish to use my home-brew patched ANTLR, and I'd like to use composite grammars in a way that breaks in 3.2.
> 
> skw
> 
> 
> 
> On Nov 22, 2010, at 1:16 PM, Terence Parr wrote:
> 
>> Hi,
>> 
>> looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> !DSPAM:6251,4ceac1a3222334154943468!
>> 
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Nov 23 11:22:42 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Nov 2010 11:22:42 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
Message-ID: <852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>

Hi. i checked it out...Java.stg templates used to say:

<ruleDescriptor.ruleListLabels:{ll | <ll:ruleLabelDef(label=it)> <ll.label.text> = null;}; separator="\n">

but now shows RuleReturnScope as type:

<ruleDescriptor.ruleListLabels:{ll | RuleReturnScope <ll.label.text> = null;}; separator="\n">

Unfortunately, i can't fix this as it would break compilation maybe for some people. crap.  It has been this way for 1.5 years...i'm afraid to change.  Can you just update your template file per above?

Thanks,
Ter

On Nov 22, 2010, at 1:32 PM, Laurent Caillette wrote:

> Hi Terence,
> 
> Good news ! Is there a chance to see ANTLR-381 fixed? I'm stuck to
> ANTLR-3.1.1 because of this one. If you don't plan to fix it, I'll
> take the painful way of changing my source code, just tell me.
> 
> Regards,
> 
> Laurent Caillette
> http://novelang.org


From scott at rice.edu  Tue Nov 23 12:02:43 2010
From: scott at rice.edu (Scott Warren)
Date: Tue, 23 Nov 2010 14:02:43 -0600
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
	<3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>
Message-ID: <680F0A51-2AB7-4E34-B694-1FAD8F3CB5C1@rice.edu>

Yay, thanks! -- skw


On Nov 23, 2010, at 12:47 PM, Terence Parr wrote:

> Fixed
> 
> http://www.antlr.org/jira/browse/ANTLR-438
> 
> Ter
> On Nov 22, 2010, at 3:11 PM, Scott Warren wrote:
> 
>> Will 3.3 include my proposed fix for bug ANTLR-438?
>> 
>> It would really help me out because I have collaborators who do not wish to use my home-brew patched ANTLR, and I'd like to use composite grammars in a way that breaks in 3.2.
>> 
>> skw
>> 
>> 
>> 
>> On Nov 22, 2010, at 1:16 PM, Terence Parr wrote:
>> 
>>> Hi,
>>> 
>>> looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
>>> Ter
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>>> 
>>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> !DSPAM:6251,4cec0c46222331257911781!
> 
> 


From parrt at cs.usfca.edu  Tue Nov 23 14:30:19 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Nov 2010 14:30:19 -0800
Subject: [antlr-interest] ANTLRWorks 1.4.1
Message-ID: <48E7D8AE-F46A-4DA9-BE56-EA82DE5A9ED5@cs.usfca.edu>

Hi, I'll ship AW 1.4.1 right after ANTLR 3.3, though I didn't fix any bugs.  It just includes new ANTLR 3.3.

Ter

From laurent.caillette at gmail.com  Tue Nov 23 15:09:57 2010
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 24 Nov 2010 00:09:57 +0100
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
	<852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>
Message-ID: <AANLkTinXv6dYUw-SDqXYhUsJRPUGOkSp79ZEx4sZbn4v@mail.gmail.com>

Here is the behavior I observed. I'm building with Maven 3. I didn't
change the ``Java.stg`` file.

With ANTLR library set to `3.2` everything compiles and all tests do pass.

With ANTLR library set to `3.1.2` the compilation breaks upon rule return type.

Is there a chance this got magically fixed? I'll be happy to have a
try with ANTLR-3.3 anyways.

Regards,

c.



On Tue, Nov 23, 2010 at 8:22 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. i checked it out...Java.stg templates used to say:
>
> <ruleDescriptor.ruleListLabels:{ll | <ll:ruleLabelDef(label=it)> <ll.label.text> = null;}; separator="\n">
>
> but now shows RuleReturnScope as type:
>
> <ruleDescriptor.ruleListLabels:{ll | RuleReturnScope <ll.label.text> = null;}; separator="\n">
>
> Unfortunately, i can't fix this as it would break compilation maybe for some people. crap. ?It has been this way for 1.5 years...i'm afraid to change. ?Can you just update your template file per above?
>
> Thanks,
> Ter
>
> On Nov 22, 2010, at 1:32 PM, Laurent Caillette wrote:
>
>> Hi Terence,
>>
>> Good news ! Is there a chance to see ANTLR-381 fixed? I'm stuck to
>> ANTLR-3.1.1 because of this one. If you don't plan to fix it, I'll
>> take the painful way of changing my source code, just tell me.
>>
>> Regards,
>>
>> Laurent Caillette
>> http://novelang.org
>
>

From parrt at cs.usfca.edu  Tue Nov 23 15:34:18 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Nov 2010 15:34:18 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <AANLkTinXv6dYUw-SDqXYhUsJRPUGOkSp79ZEx4sZbn4v@mail.gmail.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
	<852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>
	<AANLkTinXv6dYUw-SDqXYhUsJRPUGOkSp79ZEx4sZbn4v@mail.gmail.com>
Message-ID: <A4838349-ECF1-48EE-9212-4FFD9188DC10@cs.usfca.edu>

it was fix in:

http://www.antlr.org/jira/browse/ANTLR-314

so is

http://www.antlr.org/jira/browse/ANTLR-381

same bug?

Ter
On Nov 23, 2010, at 3:09 PM, Laurent Caillette wrote:

> Here is the behavior I observed. I'm building with Maven 3. I didn't
> change the ``Java.stg`` file.
> 
> With ANTLR library set to `3.2` everything compiles and all tests do pass.
> 
> With ANTLR library set to `3.1.2` the compilation breaks upon rule return type.
> 
> Is there a chance this got magically fixed? I'll be happy to have a
> try with ANTLR-3.3 anyways.
> 
> Regards,
> 
> c.
> 
> 
> 
> On Tue, Nov 23, 2010 at 8:22 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi. i checked it out...Java.stg templates used to say:
>> 
>> <ruleDescriptor.ruleListLabels:{ll | <ll:ruleLabelDef(label=it)> <ll.label.text> = null;}; separator="\n">
>> 
>> but now shows RuleReturnScope as type:
>> 
>> <ruleDescriptor.ruleListLabels:{ll | RuleReturnScope <ll.label.text> = null;}; separator="\n">
>> 
>> Unfortunately, i can't fix this as it would break compilation maybe for some people. crap.  It has been this way for 1.5 years...i'm afraid to change.  Can you just update your template file per above?
>> 
>> Thanks,
>> Ter
>> 
>> On Nov 22, 2010, at 1:32 PM, Laurent Caillette wrote:
>> 
>>> Hi Terence,
>>> 
>>> Good news ! Is there a chance to see ANTLR-381 fixed? I'm stuck to
>>> ANTLR-3.1.1 because of this one. If you don't plan to fix it, I'll
>>> take the painful way of changing my source code, just tell me.
>>> 
>>> Regards,
>>> 
>>> Laurent Caillette
>>> http://novelang.org
>> 
>> 


From jschrod at acm.org  Tue Nov 23 17:15:03 2010
From: jschrod at acm.org (Joachim Schrod)
Date: Wed, 24 Nov 2010 02:15:03 +0100
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
	<3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>
Message-ID: <ichouo$tdn$1@dough.gmane.org>


Hi,

One wish: If you do the 3.3 release, would you please take care to
upload a javadoc package for antlr-runtime to Maven Global
Repository this time, too? It's very convenient to have Javadoc for
the ANTLR runtime classes in one's project without having to
download the sources and generate them oneself.

Thanks very much for your ongoing work, it's very much appreciated,

	Joachim

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From arifihsan50 at yahoo.com  Tue Nov 23 17:31:34 2010
From: arifihsan50 at yahoo.com (arif ihsan)
Date: Tue, 23 Nov 2010 17:31:34 -0800 (PST)
Subject: [antlr-interest] about intlr
Message-ID: <97767.79300.qm@web46414.mail.sp1.yahoo.com>

Hello,
           i have problem in running intlr. i generate grammer successfully but 
when i run the grammer i get the following error.
Cannot launch the dubugger and waiting time out to connect to the remote server.
Please help if any body knows about it.
thanks
 Regards/
Arif ihsan


      

From parrt at cs.usfca.edu  Tue Nov 23 18:46:01 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Nov 2010 18:46:01 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <ichouo$tdn$1@dough.gmane.org>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>
	<3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>
	<ichouo$tdn$1@dough.gmane.org>
Message-ID: <260968AE-1FD7-477C-A53B-970FAA20F202@cs.usfca.edu>

Can you point your IDE at the antlr.org/api/Java dir?
Ter
On Nov 23, 2010, at 5:15 PM, Joachim Schrod wrote:

> 
> Hi,
> 
> One wish: If you do the 3.3 release, would you please take care to
> upload a javadoc package for antlr-runtime to Maven Global
> Repository this time, too? It's very convenient to have Javadoc for
> the ANTLR runtime classes in one's project without having to
> download the sources and generate them oneself.
> 
> Thanks very much for your ongoing work, it's very much appreciated,
> 
> 	Joachim
> 
> -- 
> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> Joachim Schrod				Email: jschrod at acm.org
> Roedermark, Germany
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From laurent.caillette at gmail.com  Tue Nov 23 22:13:00 2010
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 24 Nov 2010 07:13:00 +0100
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <A4838349-ECF1-48EE-9212-4FFD9188DC10@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
	<852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>
	<AANLkTinXv6dYUw-SDqXYhUsJRPUGOkSp79ZEx4sZbn4v@mail.gmail.com>
	<A4838349-ECF1-48EE-9212-4FFD9188DC10@cs.usfca.edu>
Message-ID: <AANLkTikk3G0OkgScwZ51cUvFiY2YX-8u+R0PJ1+Ybg3o@mail.gmail.com>

Looks like the same bug to me. But ANTLR-314 resolves as "won't fix"!
So my grammar shouldn't compile!
I'll try to investigate a bit more because I feel like relying on a
feature that doesn't officially exist.

c.

On Wed, Nov 24, 2010 at 12:34 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> it was fix in:
>
> http://www.antlr.org/jira/browse/ANTLR-314
>
> so is
>
> http://www.antlr.org/jira/browse/ANTLR-381
>
> same bug?
>
> Ter
> On Nov 23, 2010, at 3:09 PM, Laurent Caillette wrote:
>
>> Here is the behavior I observed. I'm building with Maven 3. I didn't
>> change the ``Java.stg`` file.
>>
>> With ANTLR library set to `3.2` everything compiles and all tests do pass.
>>
>> With ANTLR library set to `3.1.2` the compilation breaks upon rule return type.
>>
>> Is there a chance this got magically fixed? I'll be happy to have a
>> try with ANTLR-3.3 anyways.
>>
>> Regards,
>>
>> c.
>>
>>
>>
>> On Tue, Nov 23, 2010 at 8:22 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Hi. i checked it out...Java.stg templates used to say:
>>>
>>> <ruleDescriptor.ruleListLabels:{ll | <ll:ruleLabelDef(label=it)> <ll.label.text> = null;}; separator="\n">
>>>
>>> but now shows RuleReturnScope as type:
>>>
>>> <ruleDescriptor.ruleListLabels:{ll | RuleReturnScope <ll.label.text> = null;}; separator="\n">
>>>
>>> Unfortunately, i can't fix this as it would break compilation maybe for some people. crap. ?It has been this way for 1.5 years...i'm afraid to change. ?Can you just update your template file per above?
>>>
>>> Thanks,
>>> Ter
>>>
>>> On Nov 22, 2010, at 1:32 PM, Laurent Caillette wrote:
>>>
>>>> Hi Terence,
>>>>
>>>> Good news ! Is there a chance to see ANTLR-381 fixed? I'm stuck to
>>>> ANTLR-3.1.1 because of this one. If you don't plan to fix it, I'll
>>>> take the painful way of changing my source code, just tell me.
>>>>
>>>> Regards,
>>>>
>>>> Laurent Caillette
>>>> http://novelang.org
>>>
>>>
>
>

From laurent.caillette at gmail.com  Tue Nov 23 23:03:11 2010
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 24 Nov 2010 08:03:11 +0100
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <AANLkTikk3G0OkgScwZ51cUvFiY2YX-8u+R0PJ1+Ybg3o@mail.gmail.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
	<852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>
	<AANLkTinXv6dYUw-SDqXYhUsJRPUGOkSp79ZEx4sZbn4v@mail.gmail.com>
	<A4838349-ECF1-48EE-9212-4FFD9188DC10@cs.usfca.edu>
	<AANLkTikk3G0OkgScwZ51cUvFiY2YX-8u+R0PJ1+Ybg3o@mail.gmail.com>
Message-ID: <AANLkTinrfSQHP3R-_d4cR3WM=RxXK0hqSmBgcsaBN7+0@mail.gmail.com>

Finally we get, for "ruleDescriptor.ruleListLabels" in Java.stg:

ANTLR-3.1.1:
<ruleDescriptor.ruleListLabels:{ll|RuleReturnScope <ll.label.text> =
null;}; separator="\n">

ANTLR-3.1.2:
<ruleDescriptor.ruleListLabels:{ll|<ll:ruleLabelDef(label=it)>
<ll.label.text> = null;}; separator="\n">

ANTLR-3.2:
<ruleDescriptor.ruleListLabels:{ll|RuleReturnScope <ll.label.text> =
null;}; separator="\n">

ANTLR-3.2 reverts the behavior to what we got in ANTLR-3.1.1 and
nobody seemed to complain. Great!

I suggest to update ANTLR-314 and ANTLR-381 as follows:
- Set the "Affects version" to 3.1.2.
- Set the "Fix version" to 3.2.
- Set resolution as "resolved".

Some unit test could ensure we don't lose this nice feature again.

ANTLR rocks!

c.

From jvfengda at yahoo.com  Wed Nov 24 04:17:59 2010
From: jvfengda at yahoo.com (Da Feng)
Date: Wed, 24 Nov 2010 04:17:59 -0800 (PST)
Subject: [antlr-interest] remove back track from compiler grammar
Message-ID: <50408.77858.qm@web35903.mail.mud.yahoo.com>

hello everyone:
I removed back track from openjdk project compiler grammer. Though performance 
is still significantly lower, the problem partly result from antlr lib loading. 
I did parse many files in a line, and result shows that only the first file 
suffers from large processing time. 




 
DaFENG
Coder
Telecommunication && Network Industry
Pudong
Shanghai
China


      

From jvfengda at yahoo.com  Wed Nov 24 04:28:23 2010
From: jvfengda at yahoo.com (Da Feng)
Date: Wed, 24 Nov 2010 04:28:23 -0800 (PST)
Subject: [antlr-interest] remove back track from compiler grammar
Message-ID: <807358.62823.qm@web35901.mail.mud.yahoo.com>

Hello everyone:
I removed back track from openjdk compiler grammar. Though performance is still 
low, partly it  results from antlr lib loading. I compiled multiple files in a 
line, and only the first file experience long start up time. I don't have TCK, 
so the compiler grammar file may still have bugs.

==================
[sunspider at sunspider perfTest]$ rm -r dest/*;time javac -d dest -XDparser=antlr  
*.java

real    0m2.212s
user    0m1.644s
sys    0m0.190s
[sunspider at sunspider perfTest]$ rm -r dest/*;time javac -d dest 
-XDparser=default  *.java

real    0m1.742s
user    0m1.204s
sys    0m0.190s

====================

 [sunspider at sunspider perfTest]$ rm -r dest/*;javac -d dest -XDparser=default 
-XDantlrdebug=true -verbose *.java
[parsing started Brackets.java]
[parsing completed 61ms]
[parsing started ClassLoaderL.java]
[parsing completed 23ms]
[parsing started Fragment.java]
[parsing completed 29ms]
[parsing started OKWorld.java]
[parsing completed 2ms]
[parsing started Regex.java]
[parsing completed 14ms]
[parsing started TestClass.java]
[parsing completed 0ms]
[parsing started TestFill.java]
[parsing completed 0ms]
[parsing started TestRegex2.java]
[parsing completed 1ms]
[parsing started TestRemove.java]
[parsing completed 6ms]
[parsing started TestThread2.java]
[parsing completed 4ms]
[parsing started TestThread.java]
[parsing completed 12ms]
[parsing started TestZIPFile.java]
[parsing completed 2ms]
[parsing started Text.java]
[parsing completed 26ms]
===============
[sunspider at sunspider perfTest]$ rm -r dest/*;javac -d dest -XDparser=antlr 
-XDantlrdebug=true -verbose *.java
[parsing started Brackets.java]
Parsing with antlr
[parsing completed 322ms]
[parsing started ClassLoaderL.java]
Parsing with antlr
[parsing completed 94ms]
[parsing started Fragment.java]
Parsing with antlr
[parsing completed 136ms]
[parsing started OKWorld.java]
Parsing with antlr
[parsing completed 42ms]
[parsing started Regex.java]
Parsing with antlr
[parsing completed 42ms]
[parsing started TestClass.java]
Parsing with antlr
[parsing completed 18ms]
[parsing started TestFill.java]
Parsing with antlr
[parsing completed 10ms]
[parsing started TestRegex2.java]
Parsing with antlr
[parsing completed 10ms]
[parsing started TestRemove.java]
Parsing with antlr
[parsing completed 24ms]
[parsing started TestThread2.java]
Parsing with antlr
[parsing completed 86ms]
[parsing started TestThread.java]
Parsing with antlr
[parsing completed 80ms]
[parsing started TestZIPFile.java]
Parsing with antlr
[parsing completed 14ms]
[parsing started Text.java]
Parsing with antlr
[parsing completed 46ms]
DaFENG
Coder
Telecommunication && Network Industry
Pudong
Shanghai
China


      
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Java.g.tar.gz
Type: application/x-gzip
Size: 27619 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20101124/b71c4ac6/attachment.gz 

From goldberg at cbio.mskcc.org  Wed Nov 24 06:55:18 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Wed, 24 Nov 2010 09:55:18 -0500
Subject: [antlr-interest] Lexer generator bug?
Message-ID: <4CED2756.7000306@cbio.mskcc.org>

Hello

ANTLRWorks can automatically generate
FLOAT
     :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
     |   '.' ('0'..'9')+ EXPONENT?
     |   ('0'..'9')+ EXPONENT
     ;

fragment
EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

But I want a FLOAT that doesn't require an exponent:
FLOAT_NOE2
     :   '.' ('0'..'9')+
     | ('0'..'9')+ ('.' ('0'..'9')* )?
     ;

It seems that this should recognize any of these: 1.2 .3 4
But this doesn't recognize 4. I cant find a branch in the generated 
Lexer that doesn't enter '.' ( '0' .. '9' )*

Also

FLOAT
     :   ('0'..'9')+ '.' ('0'..'9')*
     |   '.' ('0'..'9')+
     |   ('0'..'9')+
     ;

doesn't recognize 4, but I've not examined that lexer.

Do I misunderstand lexer syntax or is this a Lexer generator bug?

Regards
Arthur

-- 
Senior Research Scientist
Computational Biology
Memorial Sloan-Kettering Cancer Center


From jimi at temporal-wave.com  Wed Nov 24 09:01:05 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 24 Nov 2010 09:01:05 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <260968AE-1FD7-477C-A53B-970FAA20F202@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>	<3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>	<ichouo$tdn$1@dough.gmane.org>
	<260968AE-1FD7-477C-A53B-970FAA20F202@cs.usfca.edu>
Message-ID: <00df01cb8bf9$2ecb15d0$8c614170$@temporal-wave.com>

It's a maven integration thing and the IDEs will install the javadoc package
from maven central if it is there. I thought I had installed the javadoc
last time but I will remember to do so this time.

Can we push the release until after thanksgiving though? I don't think I
have enough time today.

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, November 23, 2010 6:46 PM
> To: Joachim Schrod
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] antlr 3.3 release imminent
> 
> Can you point your IDE at the antlr.org/api/Java dir?
> Ter
> On Nov 23, 2010, at 5:15 PM, Joachim Schrod wrote:
> 
> >
> > Hi,
> >
> > One wish: If you do the 3.3 release, would you please take care to
> > upload a javadoc package for antlr-runtime to Maven Global Repository
> > this time, too? It's very convenient to have Javadoc for the ANTLR
> > runtime classes in one's project without having to download the
> > sources and generate them oneself.
> >
> > Thanks very much for your ongoing work, it's very much appreciated,
> >
> > 	Joachim
> >
> > --
> > =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> > Joachim Schrod				Email: jschrod at acm.org
> > Roedermark, Germany
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From cummings at kjchome.homeip.net  Wed Nov 24 09:07:59 2010
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 24 Nov 2010 12:07:59 -0500
Subject: [antlr-interest] Lexer generator bug?
In-Reply-To: <4CED2756.7000306@cbio.mskcc.org>
References: <4CED2756.7000306@cbio.mskcc.org>
Message-ID: <4CED466F.1050307@kjchome.homeip.net>

On 11/24/2010 09:55 AM, Arthur Goldberg wrote:
> Hello
> 
> ANTLRWorks can automatically generate
> FLOAT
>      :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>      |   '.' ('0'..'9')+ EXPONENT?
>      |   ('0'..'9')+ EXPONENT
>      ;
> 
> fragment
> EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> 
> But I want a FLOAT that doesn't require an exponent:
> FLOAT_NOE2
>      :   '.' ('0'..'9')+
>      | ('0'..'9')+ ('.' ('0'..'9')* )?
>      ;

Is this in addition to the other FLOAT rule???

> It seems that this should recognize any of these: 1.2 .3 4
> But this doesn't recognize 4. I cant find a branch in the generated 
> Lexer that doesn't enter '.' ( '0' .. '9' )*

Do you have an INTEGER rule elsewhere in the grammar that matches
('0'..'9')+ as an integer?

> Also
> 
> FLOAT
>      :   ('0'..'9')+ '.' ('0'..'9')*
>      |   '.' ('0'..'9')+
>      |   ('0'..'9')+
>      ;
> 
> doesn't recognize 4, but I've not examined that lexer.
> 
> Do I misunderstand lexer syntax or is this a Lexer generator bug?

Have you looked at the following example?

> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C

It is a good example of combining various lexer rules to help eliminate
ambiguities during lexing, and more importantly, increasing the
efficiency of lexing and producing the right tokens.

You may not need all of it, but it may help you understand why your
attempts aren't doing what you think they are.

> Regards
> Arthur

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From parrt at cs.usfca.edu  Wed Nov 24 09:43:40 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Nov 2010 09:43:40 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <00df01cb8bf9$2ecb15d0$8c614170$@temporal-wave.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>	<92558E8E-DEAF-4141-A591-2D09870D5535@rice.edu>	<3C5A2184-7012-4CEA-BCC2-53DEF1139D8A@cs.usfca.edu>	<ichouo$tdn$1@dough.gmane.org>
	<260968AE-1FD7-477C-A53B-970FAA20F202@cs.usfca.edu>
	<00df01cb8bf9$2ecb15d0$8c614170$@temporal-wave.com>
Message-ID: <D0269837-C0E8-4A53-8380-F91BCD56B8E8@cs.usfca.edu>

Yeah, i have slyly set release for monday.
ter
On Nov 24, 2010, at 9:01 AM, Jim Idle wrote:

> It's a maven integration thing and the IDEs will install the javadoc package
> from maven central if it is there. I thought I had installed the javadoc
> last time but I will remember to do so this time.
> 
> Can we push the release until after thanksgiving though? I don't think I
> have enough time today.
> 
> Jim 
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Terence Parr
>> Sent: Tuesday, November 23, 2010 6:46 PM
>> To: Joachim Schrod
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] antlr 3.3 release imminent
>> 
>> Can you point your IDE at the antlr.org/api/Java dir?
>> Ter
>> On Nov 23, 2010, at 5:15 PM, Joachim Schrod wrote:
>> 
>>> 
>>> Hi,
>>> 
>>> One wish: If you do the 3.3 release, would you please take care to
>>> upload a javadoc package for antlr-runtime to Maven Global Repository
>>> this time, too? It's very convenient to have Javadoc for the ANTLR
>>> runtime classes in one's project without having to download the
>>> sources and generate them oneself.
>>> 
>>> Thanks very much for your ongoing work, it's very much appreciated,
>>> 
>>> 	Joachim
>>> 
>>> --
>>> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
>>> Joachim Schrod				Email: jschrod at acm.org
>>> Roedermark, Germany
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kunalsawlani at gmail.com  Wed Nov 24 11:02:10 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Wed, 24 Nov 2010 14:02:10 -0500
Subject: [antlr-interest] gUnitEditor support for Tree Walker
Message-ID: <AANLkTi=rVyQA_Up+AKGcD_=B1yJ94k=iDkvdm-T_RBJR@mail.gmail.com>

Hi All,

I was trying out the gUnitEditor and it seems like a great tool for quickly
adding unit tests.

However, I was not able to get it to work for tree grammars. I tried editing
the script source for the test suite, but it would never persist.

Could anyone let me know if Tree Grammars are supported for gUnitEditor?

Thanks,

-- 
Kunal

From parrt at cs.usfca.edu  Wed Nov 24 11:45:54 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Nov 2010 11:45:54 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <AANLkTinrfSQHP3R-_d4cR3WM=RxXK0hqSmBgcsaBN7+0@mail.gmail.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<AANLkTim8b7rEZPXVU-wMp-ukHdx3WSEAYNMyMc1-DsYk@mail.gmail.com>
	<852647FB-FA14-491F-B212-DB4E75139FBC@cs.usfca.edu>
	<AANLkTinXv6dYUw-SDqXYhUsJRPUGOkSp79ZEx4sZbn4v@mail.gmail.com>
	<A4838349-ECF1-48EE-9212-4FFD9188DC10@cs.usfca.edu>
	<AANLkTikk3G0OkgScwZ51cUvFiY2YX-8u+R0PJ1+Ybg3o@mail.gmail.com>
	<AANLkTinrfSQHP3R-_d4cR3WM=RxXK0hqSmBgcsaBN7+0@mail.gmail.com>
Message-ID: <24F2CA25-A22C-4530-BEB7-1A9A4FF9E9C6@cs.usfca.edu>

Hi. Thanks. I updated the bug database as you suggest :)
Ter
On Nov 23, 2010, at 11:03 PM, Laurent Caillette wrote:

> Finally we get, for "ruleDescriptor.ruleListLabels" in Java.stg:
> 
> ANTLR-3.1.1:
> <ruleDescriptor.ruleListLabels:{ll|RuleReturnScope <ll.label.text> =
> null;}; separator="\n">
> 
> ANTLR-3.1.2:
> <ruleDescriptor.ruleListLabels:{ll|<ll:ruleLabelDef(label=it)>
> <ll.label.text> = null;}; separator="\n">
> 
> ANTLR-3.2:
> <ruleDescriptor.ruleListLabels:{ll|RuleReturnScope <ll.label.text> =
> null;}; separator="\n">
> 
> ANTLR-3.2 reverts the behavior to what we got in ANTLR-3.1.1 and
> nobody seemed to complain. Great!
> 
> I suggest to update ANTLR-314 and ANTLR-381 as follows:
> - Set the "Affects version" to 3.1.2.
> - Set the "Fix version" to 3.2.
> - Set resolution as "resolved".
> 
> Some unit test could ensure we don't lose this nice feature again.
> 
> ANTLR rocks!
> 
> c.


From parrt at cs.usfca.edu  Wed Nov 24 11:47:40 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Nov 2010 11:47:40 -0800
Subject: [antlr-interest] remove back track from compiler grammar
In-Reply-To: <807358.62823.qm@web35901.mail.mud.yahoo.com>
References: <807358.62823.qm@web35901.mail.mud.yahoo.com>
Message-ID: <7531101B-3168-4F8A-93D6-7E3E8CBE466B@cs.usfca.edu>

The initial load time will be big because we have to initialize some DFA (and load lots of classes).
Ter
On Nov 24, 2010, at 4:28 AM, Da Feng wrote:

> Hello everyone:
> I removed back track from openjdk compiler grammar. Though performance is still 
> low, partly it  results from antlr lib loading. I compiled multiple files in a 
> line, and only the first file experience long start up time. I don't have TCK, 
> so the compiler grammar file may still have bugs.
> 
> ==================
> [sunspider at sunspider perfTest]$ rm -r dest/*;time javac -d dest -XDparser=antlr  
> *.java
> 
> real    0m2.212s
> user    0m1.644s
> sys    0m0.190s
> [sunspider at sunspider perfTest]$ rm -r dest/*;time javac -d dest 
> -XDparser=default  *.java
> 
> real    0m1.742s
> user    0m1.204s
> sys    0m0.190s
> 
> ====================
> 
> [sunspider at sunspider perfTest]$ rm -r dest/*;javac -d dest -XDparser=default 
> -XDantlrdebug=true -verbose *.java
> [parsing started Brackets.java]
> [parsing completed 61ms]
> [parsing started ClassLoaderL.java]
> [parsing completed 23ms]
> [parsing started Fragment.java]
> [parsing completed 29ms]
> [parsing started OKWorld.java]
> [parsing completed 2ms]
> [parsing started Regex.java]
> [parsing completed 14ms]
> [parsing started TestClass.java]
> [parsing completed 0ms]
> [parsing started TestFill.java]
> [parsing completed 0ms]
> [parsing started TestRegex2.java]
> [parsing completed 1ms]
> [parsing started TestRemove.java]
> [parsing completed 6ms]
> [parsing started TestThread2.java]
> [parsing completed 4ms]
> [parsing started TestThread.java]
> [parsing completed 12ms]
> [parsing started TestZIPFile.java]
> [parsing completed 2ms]
> [parsing started Text.java]
> [parsing completed 26ms]
> ===============
> [sunspider at sunspider perfTest]$ rm -r dest/*;javac -d dest -XDparser=antlr 
> -XDantlrdebug=true -verbose *.java
> [parsing started Brackets.java]
> Parsing with antlr
> [parsing completed 322ms]
> [parsing started ClassLoaderL.java]
> Parsing with antlr
> [parsing completed 94ms]
> [parsing started Fragment.java]
> Parsing with antlr
> [parsing completed 136ms]
> [parsing started OKWorld.java]
> Parsing with antlr
> [parsing completed 42ms]
> [parsing started Regex.java]
> Parsing with antlr
> [parsing completed 42ms]
> [parsing started TestClass.java]
> Parsing with antlr
> [parsing completed 18ms]
> [parsing started TestFill.java]
> Parsing with antlr
> [parsing completed 10ms]
> [parsing started TestRegex2.java]
> Parsing with antlr
> [parsing completed 10ms]
> [parsing started TestRemove.java]
> Parsing with antlr
> [parsing completed 24ms]
> [parsing started TestThread2.java]
> Parsing with antlr
> [parsing completed 86ms]
> [parsing started TestThread.java]
> Parsing with antlr
> [parsing completed 80ms]
> [parsing started TestZIPFile.java]
> Parsing with antlr
> [parsing completed 14ms]
> [parsing started Text.java]
> Parsing with antlr
> [parsing completed 46ms]
> DaFENG
> Coder
> Telecommunication && Network Industry
> Pudong
> Shanghai
> China
> 
> 
> <Java.g.tar.gz>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From goldberg at cbio.mskcc.org  Wed Nov 24 12:09:34 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Wed, 24 Nov 2010 15:09:34 -0500
Subject: [antlr-interest] tree grammar not in default package
Message-ID: <4CED70FE.1010607@cbio.mskcc.org>

Hello again

One can put a grammar in Java package 'main' with
header {
	package main;
}

But this doesn't work for a tree grammar, as the grammar compiler says
> error(100): ../completeOncoPrintSpecASTGenerator.g:10:8: syntax error: antlr: ../completeOncoPrintSpecASTGenerator.g:10:8: unexpected token:
> 	package main;

How does one put a tree grammar in another package?

Regards
Arthur


From jimi at temporal-wave.com  Wed Nov 24 13:25:44 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 24 Nov 2010 13:25:44 -0800
Subject: [antlr-interest] tree grammar not in default package
In-Reply-To: <4CED70FE.1010607@cbio.mskcc.org>
References: <4CED70FE.1010607@cbio.mskcc.org>
Message-ID: <001701cb8c1e$27604840$7620d8c0$@temporal-wave.com>

@header {
package main;

}

But make sure that your @header appears in the correct order within the
grammar.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Arthur Goldberg
> Sent: Wednesday, November 24, 2010 12:10 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] tree grammar not in default package
> 
> Hello again
> 
> One can put a grammar in Java package 'main' with header {
> 	package main;
> }
> 
> But this doesn't work for a tree grammar, as the grammar compiler says
> > error(100): ../completeOncoPrintSpecASTGenerator.g:10:8: syntax
> error: antlr: ../completeOncoPrintSpecASTGenerator.g:10:8: unexpected
> token:
> > 	package main;
> 
> How does one put a tree grammar in another package?
> 
> Regards
> Arthur
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From goldberg at cbio.mskcc.org  Wed Nov 24 15:26:41 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Wed, 24 Nov 2010 18:26:41 -0500
Subject: [antlr-interest] Error reporting with ANTLR tree grammar
Message-ID: <4CED9F31.5070201@cbio.mskcc.org>

Hello All

I'm writing a parser for a fairly simple language (14 rules & 10 tokens) 
that reads a description of a graph -- like this OncoPrint 
<http://cbio.mskcc.org/cancergenomics-dataportal/index.do?case_set_id=gbm_3way_complete&tab_index=tab_visualize&action=Submit&genetic_profile_ids=gbm_mutations&genetic_profile_ids=gbm_cna_rae&genetic_profile_ids=gbm_mrna_zscores&case_ids=&Z_SCORE_THRESHOLD=1.0&cancer_type_id=gbm&gene_list=EGFR+ERBB2+PDGFRA+MET+KRAS+NRAS+HRAS+NF1+SPRY2+FOXO1+FOXO3+AKT1+AKT2+AKT3+PIK3R1+PIK3CA+PTEN&gene_set_choice=glioblastoma:_rtk/ras/pi3k/akt_signaling_%2817_genes%29&> 
-- of cancer data and produces a data structure that will be used to 
select, organize and filter the data to be shown in the graph. Users 
will enter the language on our web site.

I have a working one-pass grammar, but after building it found that it's 
very difficult to produce error messages in one pass. For example, one 
might think that a failed semantic predicate would be a good place to 
report an error, but that doesn't work because exceptions are not thrown 
when predicates are hoisted and predicates are called multiple times as 
the parser backtracks to find a parse. (See my previous message on use 
of semantic predicates and hoisting 
<http://www.antlr.org/pipermail/antlr-interest/2010-November/040091.html>.)

I simply want to say things like
"Syntax error at 'xyz' at char <c> on line <l>"   // when the input 
syntax is wrong (I can't say "line 1:0 no viable alternative at input 
'xyz'"), and
"<input> is not a valid <type> at char <c> on line <l>"   // when the 
input semantics is wrong, for example when <input> should be a word that 
fits a pattern that describes a genetic data type

Therefore, I'm told that one should postpone error reporting until 
later, and that I need a two pass grammar -- 1) build AST, 2) walk the 
tree -- to easily and accurately report errors. I've started down that 
path, and have a few productions in each grammar and a driver program 
that connects them and handles bits of input.

I think that I can report the syntax errors by overriding
    public void displayRecognitionError(String[] tokenNames, 
RecognitionException e) and
    public String getErrorMessage(RecognitionException e, String[] 
tokenNames)
in Phase 1,

But it isn't clear how one accesses data in the AST with the tree 
grammar. That is, inside the tree grammar how do I get the data I need 
to produce the semantic error message above?

Is that documented? I don't see it in The Definitive ANTLR Ref, Chap. 8 
or 10.

Thanks & Thanksgiving
Arthur

-- 
Senior Research Scientist
Computational Biology
Memorial Sloan-Kettering Cancer Center


From mike.matera at xilinx.com  Wed Nov 24 15:30:58 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Wed, 24 Nov 2010 15:30:58 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
Message-ID: <11cdef66-e81a-4387-b8ea-c1ba40dee054@SG2EHSMHS006.ehs.local>

Hi,

I just ran into these bugs:

> http://www.antlr.org/jira/browse/ANTLR-370
> http://www.antlr.org/jira/browse/ANTLR-375

Any chance they will be fixed?  Alternatively they may be bugs in the 
documentation.  The rules for what you can say where in a combined 
grammar seem very complex.

Cheers
./m


Terence Parr wrote:
> Hi,
> 
> looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From parrt at cs.usfca.edu  Wed Nov 24 16:35:19 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Nov 2010 16:35:19 -0800
Subject: [antlr-interest] Error reporting with ANTLR tree grammar
In-Reply-To: <4CED9F31.5070201@cbio.mskcc.org>
References: <4CED9F31.5070201@cbio.mskcc.org>
Message-ID: <1BDA266B-A10F-4F4D-9932-5BEBC198C52A@cs.usfca.edu>

first question.  are you backtracking a lot?  that can cause bad error reporting liek this:

a : foo
   | bar
   ;

if it's backtracking and can't match foo or bar, it'll say "can't do nothin' with first token"

Ter
On Nov 24, 2010, at 3:26 PM, Arthur Goldberg wrote:

> Hello All
> 
> I'm writing a parser for a fairly simple language (14 rules & 10 tokens) 
> that reads a description of a graph -- like this OncoPrint 
> <http://cbio.mskcc.org/cancergenomics-dataportal/index.do?case_set_id=gbm_3way_complete&tab_index=tab_visualize&action=Submit&genetic_profile_ids=gbm_mutations&genetic_profile_ids=gbm_cna_rae&genetic_profile_ids=gbm_mrna_zscores&case_ids=&Z_SCORE_THRESHOLD=1.0&cancer_type_id=gbm&gene_list=EGFR+ERBB2+PDGFRA+MET+KRAS+NRAS+HRAS+NF1+SPRY2+FOXO1+FOXO3+AKT1+AKT2+AKT3+PIK3R1+PIK3CA+PTEN&gene_set_choice=glioblastoma:_rtk/ras/pi3k/akt_signaling_%2817_genes%29&> 
> -- of cancer data and produces a data structure that will be used to 
> select, organize and filter the data to be shown in the graph. Users 
> will enter the language on our web site.
> 
> I have a working one-pass grammar, but after building it found that it's 
> very difficult to produce error messages in one pass. For example, one 
> might think that a failed semantic predicate would be a good place to 
> report an error, but that doesn't work because exceptions are not thrown 
> when predicates are hoisted and predicates are called multiple times as 
> the parser backtracks to find a parse. (See my previous message on use 
> of semantic predicates and hoisting 
> <http://www.antlr.org/pipermail/antlr-interest/2010-November/040091.html>.)
> 
> I simply want to say things like
> "Syntax error at 'xyz' at char <c> on line <l>"   // when the input 
> syntax is wrong (I can't say "line 1:0 no viable alternative at input 
> 'xyz'"), and
> "<input> is not a valid <type> at char <c> on line <l>"   // when the 
> input semantics is wrong, for example when <input> should be a word that 
> fits a pattern that describes a genetic data type
> 
> Therefore, I'm told that one should postpone error reporting until 
> later, and that I need a two pass grammar -- 1) build AST, 2) walk the 
> tree -- to easily and accurately report errors. I've started down that 
> path, and have a few productions in each grammar and a driver program 
> that connects them and handles bits of input.
> 
> I think that I can report the syntax errors by overriding
>    public void displayRecognitionError(String[] tokenNames, 
> RecognitionException e) and
>    public String getErrorMessage(RecognitionException e, String[] 
> tokenNames)
> in Phase 1,
> 
> But it isn't clear how one accesses data in the AST with the tree 
> grammar. That is, inside the tree grammar how do I get the data I need 
> to produce the semantic error message above?
> 
> Is that documented? I don't see it in The Definitive ANTLR Ref, Chap. 8 
> or 10.
> 
> Thanks & Thanksgiving
> Arthur
> 
> -- 
> Senior Research Scientist
> Computational Biology
> Memorial Sloan-Kettering Cancer Center
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Nov 24 16:36:48 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Nov 2010 16:36:48 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <11cdef66-e81a-4387-b8ea-c1ba40dee054@SG2EHSMHS006.ehs.local>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<11cdef66-e81a-4387-b8ea-c1ba40dee054@SG2EHSMHS006.ehs.local>
Message-ID: <83E925E0-D7DD-46BE-A404-775FE2C4C8E5@cs.usfca.edu>

let e see how bad it is
Ter
On Nov 24, 2010, at 3:30 PM, Michael Matera wrote:

> Hi,
> 
> I just ran into these bugs:
> 
>> http://www.antlr.org/jira/browse/ANTLR-370
>> http://www.antlr.org/jira/browse/ANTLR-375
> 
> Any chance they will be fixed?  Alternatively they may be bugs in the 
> documentation.  The rules for what you can say where in a combined 
> grammar seem very complex.
> 
> Cheers
> ./m
> 
> 
> Terence Parr wrote:
>> Hi,
>> 
>> looks like java, c, c# 2&3 targets will get updated for 3.3; any other targets wanna jump in?  It will come out within a week.
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike.matera at xilinx.com  Wed Nov 24 16:47:32 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Wed, 24 Nov 2010 16:47:32 -0800
Subject: [antlr-interest] Error reporting with ANTLR tree grammar
In-Reply-To: <4CED9F31.5070201@cbio.mskcc.org>
References: <4CED9F31.5070201@cbio.mskcc.org>
Message-ID: <0fb7102a-8c41-42a2-8765-f8ed52c63115@SG2EHSMHS003.ehs.local>

Hi Arthur,

I have a parser where I've spruced up the error messages to make more 
sense to my users.  I overrode the (Java) methods:

String getErrorHeader(RecognitionException e)
String getErrorMessage(RecognitionException e, String[] tokenNames)

In getErrorHeader() I look at the exception and determine how I want to 
display where the error came from.  The RecognitionException has a 
'token' member (which may be null) and a line member.  If it has a token 
then you may be able to get a filename from 
token.getInputStream().getSourceName().

In getErrorMessage() I try to figure out why the parse error happened 
and tell my users the human meaning of the error.  Mostly this means 
doing something like this:

if (e instanceof UnwantedTokenException) {
  ...
} else if (e instanceof NoViableAltException) {
  ...
} else if (e instanceof FailedPredicateException) {
  ...
}

Pay special attention to FailedPredicateException because that exception 
stores the string of the failed predicate.  You can match it to say what 
it really means.  But be aware if multiple predicates were excluded you 
may not get the one that's "really" the problem.

One other tip:  Because my parser rules structurally resemble my 
language (I have a rule for 'if' and 'for' and 'while', etc).  I can use 
the stack trace inside the exception to see what rule I was in.  That 
way I can tell my user something like "Unexpected end to a 'for' 
statement," when they forgot to close the conditions section.

Hope this helps.

Cheers
./m


Here's a snipet from my parser:

> @members {
> 
> @Override
> public String getErrorHeader(RecognitionException e) {
>   ...
> }
> 
> @Override
> public String getErrorMessage(RecognitionException e, String[] tokenNames) {
>   return ErrorReporting.getParseErrorMessage(this, e, tokenNames);
> }
> 
> @Override
> public void emitErrorMessage(String message) {
>   Command.getSession().out.println(message);
> }



Arthur Goldberg wrote:
> Hello All
> 
> I'm writing a parser for a fairly simple language (14 rules & 10 tokens) 
> that reads a description of a graph -- like this OncoPrint 
> <http://cbio.mskcc.org/cancergenomics-dataportal/index.do?case_set_id=gbm_3way_complete&tab_index=tab_visualize&action=Submit&genetic_profile_ids=gbm_mutations&genetic_profile_ids=gbm_cna_rae&genetic_profile_ids=gbm_mrna_zscores&case_ids=&Z_SCORE_THRESHOLD=1.0&cancer_type_id=gbm&gene_list=EGFR+ERBB2+PDGFRA+MET+KRAS+NRAS+HRAS+NF1+SPRY2+FOXO1+FOXO3+AKT1+AKT2+AKT3+PIK3R1+PIK3CA+PTEN&gene_set_choice=glioblastoma:_rtk/ras/pi3k/akt_signaling_%2817_genes%29&> 
> -- of cancer data and produces a data structure that will be used to 
> select, organize and filter the data to be shown in the graph. Users 
> will enter the language on our web site.
> 
> I have a working one-pass grammar, but after building it found that it's 
> very difficult to produce error messages in one pass. For example, one 
> might think that a failed semantic predicate would be a good place to 
> report an error, but that doesn't work because exceptions are not thrown 
> when predicates are hoisted and predicates are called multiple times as 
> the parser backtracks to find a parse. (See my previous message on use 
> of semantic predicates and hoisting 
> <http://www.antlr.org/pipermail/antlr-interest/2010-November/040091.html>.)
> 
> I simply want to say things like
> "Syntax error at 'xyz' at char <c> on line <l>"   // when the input 
> syntax is wrong (I can't say "line 1:0 no viable alternative at input 
> 'xyz'"), and
> "<input> is not a valid <type> at char <c> on line <l>"   // when the 
> input semantics is wrong, for example when <input> should be a word that 
> fits a pattern that describes a genetic data type
> 
> Therefore, I'm told that one should postpone error reporting until 
> later, and that I need a two pass grammar -- 1) build AST, 2) walk the 
> tree -- to easily and accurately report errors. I've started down that 
> path, and have a few productions in each grammar and a driver program 
> that connects them and handles bits of input.
> 
> I think that I can report the syntax errors by overriding
>     public void displayRecognitionError(String[] tokenNames, 
> RecognitionException e) and
>     public String getErrorMessage(RecognitionException e, String[] 
> tokenNames)
> in Phase 1,
> 
> But it isn't clear how one accesses data in the AST with the tree 
> grammar. That is, inside the tree grammar how do I get the data I need 
> to produce the semantic error message above?
> 
> Is that documented? I don't see it in The Definitive ANTLR Ref, Chap. 8 
> or 10.
> 
> Thanks & Thanksgiving
> Arthur
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From parrt at cs.usfca.edu  Wed Nov 24 16:59:19 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 24 Nov 2010 16:59:19 -0800
Subject: [antlr-interest] Error reporting with ANTLR tree grammar
In-Reply-To: <0fb7102a-8c41-42a2-8765-f8ed52c63115@SG2EHSMHS003.ehs.local>
References: <4CED9F31.5070201@cbio.mskcc.org>
	<0fb7102a-8c41-42a2-8765-f8ed52c63115@SG2EHSMHS003.ehs.local>
Message-ID: <8EDC5EC9-CDC9-4F73-AD50-7164A54B089D@cs.usfca.edu>

Also see book where I talk about errors (I think it's a free chapter).

http://media.pragprog.com/titles/tpantlr/errors.pdf

oh crap. just a sample not whole chapter. oh well. last page will get you started on "paraphrase" concept.

Ter

On Nov 24, 2010, at 4:47 PM, Michael Matera wrote:

> Hi Arthur,
> 
> I have a parser where I've spruced up the error messages to make more 
> sense to my users.  I overrode the (Java) methods:
> 
> String getErrorHeader(RecognitionException e)
> String getErrorMessage(RecognitionException e, String[] tokenNames)
> 
> In getErrorHeader() I look at the exception and determine how I want to 
> display where the error came from.  The RecognitionException has a 
> 'token' member (which may be null) and a line member.  If it has a token 
> then you may be able to get a filename from 
> token.getInputStream().getSourceName().
> 
> In getErrorMessage() I try to figure out why the parse error happened 
> and tell my users the human meaning of the error.  Mostly this means 
> doing something like this:
> 
> if (e instanceof UnwantedTokenException) {
>  ...
> } else if (e instanceof NoViableAltException) {
>  ...
> } else if (e instanceof FailedPredicateException) {
>  ...
> }
> 
> Pay special attention to FailedPredicateException because that exception 
> stores the string of the failed predicate.  You can match it to say what 
> it really means.  But be aware if multiple predicates were excluded you 
> may not get the one that's "really" the problem.
> 
> One other tip:  Because my parser rules structurally resemble my 
> language (I have a rule for 'if' and 'for' and 'while', etc).  I can use 
> the stack trace inside the exception to see what rule I was in.  That 
> way I can tell my user something like "Unexpected end to a 'for' 
> statement," when they forgot to close the conditions section.
> 
> Hope this helps.
> 
> Cheers
> ./m
> 
> 
> Here's a snipet from my parser:
> 
>> @members {
>> 
>> @Override
>> public String getErrorHeader(RecognitionException e) {
>>  ...
>> }
>> 
>> @Override
>> public String getErrorMessage(RecognitionException e, String[] tokenNames) {
>>  return ErrorReporting.getParseErrorMessage(this, e, tokenNames);
>> }
>> 
>> @Override
>> public void emitErrorMessage(String message) {
>>  Command.getSession().out.println(message);
>> }
> 
> 
> 
> Arthur Goldberg wrote:
>> Hello All
>> 
>> I'm writing a parser for a fairly simple language (14 rules & 10 tokens) 
>> that reads a description of a graph -- like this OncoPrint 
>> <http://cbio.mskcc.org/cancergenomics-dataportal/index.do?case_set_id=gbm_3way_complete&tab_index=tab_visualize&action=Submit&genetic_profile_ids=gbm_mutations&genetic_profile_ids=gbm_cna_rae&genetic_profile_ids=gbm_mrna_zscores&case_ids=&Z_SCORE_THRESHOLD=1.0&cancer_type_id=gbm&gene_list=EGFR+ERBB2+PDGFRA+MET+KRAS+NRAS+HRAS+NF1+SPRY2+FOXO1+FOXO3+AKT1+AKT2+AKT3+PIK3R1+PIK3CA+PTEN&gene_set_choice=glioblastoma:_rtk/ras/pi3k/akt_signaling_%2817_genes%29&> 
>> -- of cancer data and produces a data structure that will be used to 
>> select, organize and filter the data to be shown in the graph. Users 
>> will enter the language on our web site.
>> 
>> I have a working one-pass grammar, but after building it found that it's 
>> very difficult to produce error messages in one pass. For example, one 
>> might think that a failed semantic predicate would be a good place to 
>> report an error, but that doesn't work because exceptions are not thrown 
>> when predicates are hoisted and predicates are called multiple times as 
>> the parser backtracks to find a parse. (See my previous message on use 
>> of semantic predicates and hoisting 
>> <http://www.antlr.org/pipermail/antlr-interest/2010-November/040091.html>.)
>> 
>> I simply want to say things like
>> "Syntax error at 'xyz' at char <c> on line <l>"   // when the input 
>> syntax is wrong (I can't say "line 1:0 no viable alternative at input 
>> 'xyz'"), and
>> "<input> is not a valid <type> at char <c> on line <l>"   // when the 
>> input semantics is wrong, for example when <input> should be a word that 
>> fits a pattern that describes a genetic data type
>> 
>> Therefore, I'm told that one should postpone error reporting until 
>> later, and that I need a two pass grammar -- 1) build AST, 2) walk the 
>> tree -- to easily and accurately report errors. I've started down that 
>> path, and have a few productions in each grammar and a driver program 
>> that connects them and handles bits of input.
>> 
>> I think that I can report the syntax errors by overriding
>>    public void displayRecognitionError(String[] tokenNames, 
>> RecognitionException e) and
>>    public String getErrorMessage(RecognitionException e, String[] 
>> tokenNames)
>> in Phase 1,
>> 
>> But it isn't clear how one accesses data in the AST with the tree 
>> grammar. That is, inside the tree grammar how do I get the data I need 
>> to produce the semantic error message above?
>> 
>> Is that documented? I don't see it in The Definitive ANTLR Ref, Chap. 8 
>> or 10.
>> 
>> Thanks & Thanksgiving
>> Arthur
>> 
> 
> This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From isabelle.perseil at enst.fr  Thu Nov 25 04:11:47 2010
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Thu, 25 Nov 2010 13:11:47 +0100
Subject: [antlr-interest]   CALL FOR PAPERS :   ICECCS 2011
Message-ID: <6d27de79dc233741c2498776f5f42930.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                     CALL FOR PAPERS:  ICECCS 2011
                      http://www.iceccs.org/2011

             16th Annual IEEE International Conference on the
             Engineering of Complex Computer Systems (ICECCS)
sponsored by the IEEE Technical Committee on Complexity in Computing (TCCX)

                         April 27th-29th, 2011
                          Las Vegas, NV, USA

************************************************************************

          Submission deadline (may be extended): November 30th, 2010
          ----------------------------------------------------------

The success of key human activities ranging from research and business to
everyday services relies on the use of ever more sophisticated,
feature-rich and complex computer systems. These complex computer systems
are regularly required to accomplish more, faster and on a broader scale,
to adapt dynamically to changing workloads, scenarios and objectives, and
to achieve guaranteed levels of performance and dependability. Satisfying
such demanding requirements in the presence of the variability,
heterogeneity and non-linear behaviour that characterise complex computer
systems poses numerous challenges to both their developers and their
users.

The aim of the conference is to bring together researchers, practitioners
and leading experts from academia and industry, to advance the state of
the art in the specification, development, validation and verification,
and management of complex computer systems.

Scope and topics:
================

Authors are invited to submit papers describing original, unpublished
research results, case studies and tools. Additionally, submissions of
poster papers are sought for two separate poster sessions: an "ongoing
research" poster session, and a "PhD research" poster session. Topics of
interest include but are not limited to the following aspects of complex
computer systems:

- Requirement specification and analysis
- Verification and validation
- Model-driven development
- Reverse engineering and refactoring
- Design by contract
- Agile methods
- Safety-critical & fault-tolerant architectures
- Adaptive, self-managing and multi-agent systems
- Real-time, hybrid and embedded systems
- Systems of systems
- Tools and tool integration
- Industrial case studies

Different kinds of contributions are sought, including novel research,
lessons learned, experience reports, and discussions of practical problems
faced by industry and user domains. The ultimate goal is to build a rich
and comprehensive conference program that can fit the interests and needs
of different classes of attendees: professionals, researchers, managers,
and students. A program goal is to organize several sessions that include
both academic and industrial papers on a given topic, and culminate with
panels to discuss relationships between industrial and academic research.

Full papers are divided into two categories: Technical Papers and
Experience Reports. The papers submitted to both categories will be
reviewed by program committee members, and papers accepted in either
category will be published in the conference proceedings. Technical papers
should describe original research, and experience reports should present
practical projects carried out in industry, and reflect on the lessons
learnt from them.

Poster paper submissions should specify in their abstract whether they
describe ongoing or PhD research. Both types of poster papers will be
reviewed by program committee members, and accepted posters will be
published in the conference proceedin


Submission of Papers:
====================

Submitted manuscripts should be in English and formatted in the style of
the IEEE Computer Society Proceedings Format. Papers should not exceed 10
pages for full papers and 2 pages for poster papers, including figures,
references, and appendices. All submissions should be in PDF format.
Submissions not adhering to the specified format and length may be
rejected immediately, without review.

See the submission guidelines on the conference web site.

Important Dates:
================

Submission of titles and abstracts            ASAP
Submission of all papers                      30 November, 2010
Notification of acceptance                    17 December, 2010
Camera-ready material for publicatio          15 January,  2011
Registration deadline for authors             15 January,  2011
Early registration deadline for non-authors   22 February, 2011


General Chair:
==============

Roy Sterritt, University of Ulster, Northern Ireland

Program Chairs:
===============

Karin Breitman, Pontificia Universidade Catolica do Rio de Janeiro, Brazil
Isabelle Perseil, Inserm, France

Program Committee:
==================
Marc Aiguier, Ecole Centrale Paris, France
Yamine AitAmeur, LISI/ENSMA, France
Luis Almeida, Fac. de Eng. da Universidade do Porto, Portugal
Keijiro Araki, Kyushu University, Japan
Luciano Baresi, DEI - Politecnico di Milano, Italy
Yolande Berbers, Katholieke Universiteit Leuven, Belgium
Gilles Bernot, University of Nice Sophia Antipolis, France
Jonathan P. Bowen, London South Bank University, United Kingdom
Karin Breitman, PUC-Rio, Brazil
Phil Brooke, University of Teesside, United Kingdom
Jean-Michel Bruel, IRIT, France
Michael Butler, University of Southampton, United Kingdom
Jordi Cabot, INRIA-?cole des Mines de Nantes, France
Radu Calinescu, Aston University, United Kingdom
Antonio Cerone, International Institute for Software Technology United
Nations
University, Macau SAR China
Corina Cirstea, University of Southampton, United Kingdom
Patrick Cousot, New York University and ?cole normale sup?rieure, France
Jim Davies, University of Oxford, United Kingdom
Juan deLara, Universidad Aut?noma de Madrid, Spain
Mieso Denko, UoG, Canada
Felicita Di Giandomenico, ISTI-CNR, Italy
Simon Dobson, University of St Andrews, United Kingdom
Gilles Dowek, Laboratoire d'Informatique(LIX), ?cole Polytechnique and
INRIA, France
Kerstin Eder, University of Bristol, United Kingdom
Huascar Espinoza, ESI Tecnalia, Spain
Fran?ois Fages, INRIA, France
Hector Figueiredo, BAE Systems, United Kingdom
Franck Fleurey, SINTEF, Norway
Robert France, Colorado State University, United States
Carlo Alberto Furia, ETH Zurich, Switzerland
Jean-Louis Giavitto, CNRS and University of Evry, France
Mark Grechanik, Accenture Labs, United States
Lindsay Groves, Victoria University of Wellington, New Zealand
Esther Guerra, Universidad Aut?noma de Madrid, Spain
Ga?tan Hains, Univeristy Paris Est, France
Shinji Kikuchi, Fujitsu Laboratories, Japan
Joseph Kiniry, IT University of Copenhagen, Denmark
Fabrice Kordon, Univ. Paris 6, France
Daniel Krob, Laboratoire d'Informatique(LIX), ?cole Polytechnique and
CNRS, France
Ralf Laemmel, Universit?t Koblenz-Landau, Germany
Phillip Laplante, Penn State University, United States
Kung-Kiu Lau, The University of Manchester, United Kingdom
Zhiming Liu, International Institute for Software Technology United Nations
University,Macau SAR China
Gerald Luettgen, University of Bamberg, Germany
Tom Maibaum, McMaster University, Canada
Tiziana Margaria, Potsdam University, Germany
Julie McCann, Imperial College, United Kingdom
Paul Mckee, BT Innovate and Design, United Kingdom
Raffaela Mirandola, Politecnico di Milano, Italy
Andrea Omicini, Universit? di Bologna, Italy
Richard Paige, University of York, United Kingdom
Laurent Pautet, Telecom ParisTech, France
Isabelle Perseil, Inserm, France
Robert Pettit, The Aerospace Corporation, United States
Ivan Porres, ?bo Akademi University, Finland
Awais Rashid, Lancaster University, United Kingdom
Bernhard Rumpe, RWTH Aachen University, Germany
Ricardo Sanz, Universidad Politecnica de Madrid, Spain
Douglas Schmidt, Vanderbilt University, United States
Cristina Seceleanu, M?lardalen University, Sweden
Janet Smart, University of Oxford, United Kingdom
Oleg Sokolsky, University of Pennsylvania, United States
Ian Sommerville, St Andrews University, United Kingdom
J?rn Guy S??, ITEE, The University of Queensland, Australia
Volker Stolz, United Nations University (UNU-IIST), Macau SAR China
Jing Sun, The University of Auckland, New Zealand
Clemens Szyperski, Microsoft Research, United States
Kenji Taguchi, National Institute of Informatics, Japan
Dalila Tamzalit, University of Nantes, France
Bedir Tekinerdogan, Bilkent University, Turkey
Suresh Thummalapenta, NC State University, United States
Antonio Vallecillo, University of Malaga, Spain
Tullio Vardanega, University of Padua, Italy
Emil Vassev, Lero, Ireland
Huibiao Zhu, East China Normal University, China
Steffen Zschaler, King's College London, United Kingdom


From maxgbr at hotmail.it  Fri Nov 26 07:48:16 2010
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Fri, 26 Nov 2010 16:48:16 +0100
Subject: [antlr-interest] Lexer rule precedence
Message-ID: <BLU0-SMTP1176687603DA51DEE2B453BB0210@phx.gbl>

  Hi, i have one problems on lexer rules and i can't understand why.
As attachment  there's a piece of my grammar where i got the error:
Debugging i can correctly match 'NULL', but i can't match 'DEFAULT NULL' 
there something that i miss....
I think there is something wrong with lexer rule precedence, but not sure.
Any help would be really appreciated

Greetings Max
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test4.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20101126/cf4fc049/attachment.pl 

From rael at zopyra.com  Fri Nov 26 08:18:50 2010
From: rael at zopyra.com (Bill Lear)
Date: Fri, 26 Nov 2010 10:18:50 -0600
Subject: [antlr-interest] Reading all text to end-of-line in a rule
Message-ID: <19695.56810.122399.751769@blake.zopyra.com>

I have searched in vain for a solution to this, though as this is my
first attempt at writing an Antlr grammar, perhaps I just don't know
enough about Antlr to form the right search.

I am trying to write a grammar to support simple one-line command
constructs of the following form:

   clean [-timeout <N>] [-notify (<email> | "<email1> <email2>...")]
   shell [-timeout <N>] shell_command_text

Where "shell_command_text" above is simply the remaining text on the
line.

Examples:

    clean -timeout 20
    clean -notify "foobar at biz.com joe at bla.com" -timeout 2
    shell ls -l /tmp
    shell /x/home/boo/jre/bin/java -jar /tmp/j.jar DoIt -timeout 22 fizbuz

In my current grammar, I have, among other things, essentially
the following:

    clean: 'clean' comamndOptions? ;

    shell: 'shell' timeoutOption COMMAND_TEXT ;

    commandOptions: timeoutOption | notifyOption |
        timeoutOption notifyOption | notifyOption timeoutOption ;

    timeoutOption: '-timeout' INT ;

    notifyOption: '-notify' EMAIL | '-notify' QUOTED_STRING ;

    COMMAND_TEXT: ~('\n' | '\r')+ {
        setText(getText().trim());
    } ;

    QUOTED_STRING:
        '"' ( EscapeSequence | ~('\\'|'"') )* '"' {
            setText(getText().substring(1, getText().length() - 1));
        } | '\'' ( EscapeSequence | ~('\\'|'\'') )* '\'' {
            setText(getText().substring(1, getText().length() - 1));
        } ;

    fragment
    EscapeSequence : '\\' ('\"'|'\''|'\\') ;
    INT: '0'..'9'+ ;
    ID: 'a'..'z'+ ;
    EMAIL: ~('\n' | '\r' | ' ' | '"')+ ;
    NEWLINE: '\r'? '\n' ;
    WS: (' ' | '\t')+ { skip(); } ;

Which of course does not work, as the COMMAND_TEXT rule basically
obliterates the others:

error(208): Command.g:133:1: The following token definitions can never be matched because prior tokens match the same input: INT,ID,EMAIL,WS

So, I'm at a loss as to how to support the need to read until the end of
line, or end of file, for the 'shell' rule.

I'm assuming a syntactit predicate or some other trickery is on order,
but I'm simply not able to figure it out after much head scratching.

Would anyone here be able to help with this?  Any other helpful
criticism of the above would also be welcome (a better EMAIL rule?
a better way to handle '-' type options?).

Thank you.


Bill

From maxgbr at hotmail.it  Fri Nov 26 08:27:07 2010
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Fri, 26 Nov 2010 17:27:07 +0100
Subject: [antlr-interest] [il-antlr-interest: 30654] Lexer rule
	precedence
In-Reply-To: <AANLkTin0Sc3nzkzRJZK_bzC-=vmvEuJ-QjP3mWjosRAk@mail.gmail.com>
References: <BLU0-SMTP1176687603DA51DEE2B453BB0210@phx.gbl>
	<AANLkTin0Sc3nzkzRJZK_bzC-=vmvEuJ-QjP3mWjosRAk@mail.gmail.com>
Message-ID: <BLU0-SMTP12253737836C440186E72D5B0210@phx.gbl>

   Thank for quik reply, this is only a bunch of my grammar and the 
'DEAFULT' in the first rule does not exists in the original one, is only 
for demostration purposes, but if you try debugging in AntrlWorks 1.4 
this grammar with 'DEFAULT NULL' lexer catch DEFAULTLL instead of 
DEFAUTL NULL.
Max

Il 26/11/2010 16:55, Akira Akira ha scritto:
> Have you tried:
>
> start:
>     'DEFAULT' expr SEMICOLON
>     | expr SEMICOLON
>     ;
>
> Usually I avoid optionals first. Besides, parsing performance must be 
> better.
>
>
>
> 2010/11/27 Massimiliano Donini <maxgbr at hotmail.it 
> <mailto:maxgbr at hotmail.it>>
>
>      Hi, i have one problems on lexer rules and i can't understand why.
>     As attachment  there's a piece of my grammar where i got the error:
>     Debugging i can correctly match 'NULL', but i can't match 'DEFAULT
>     NULL' there something that i miss....
>     I think there is something wrong with lexer rule precedence, but
>     not sure.
>     Any help would be really appreciated
>
>     Greetings Max
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>     --
>     You received this message because you are subscribed to the Google
>     Groups "il-antlr-interest" group.
>     To post to this group, send email to
>     il-antlr-interest at googlegroups.com
>     <mailto:il-antlr-interest at googlegroups.com>.
>     To unsubscribe from this group, send email to
>     il-antlr-interest+unsubscribe at googlegroups.com
>     <mailto:il-antlr-interest%2Bunsubscribe at googlegroups.com>.
>     For more options, visit this group at
>     http://groups.google.com/group/il-antlr-interest?hl=en.
>
>
>


From martijn.reuvers at gmail.com  Fri Nov 26 10:23:24 2010
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Fri, 26 Nov 2010 19:23:24 +0100
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <19695.56810.122399.751769@blake.zopyra.com>
References: <19695.56810.122399.751769@blake.zopyra.com>
Message-ID: <AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>

Hello Bill,

The grammar below does the trick for your command (I stripped it
somewhat, to quickly get it working). See the SHELL_COMMAND token,
notice the options part with the greedy identifier. It reads until it
encounters the newline stuff. You need to have something in front of
it, like SHELL in this example - otherwise it would match anything,
which is not what you want.

Martijn



grammar Test;

start
? :??? email
? | SHELL_COMMAND
? ??? { System.out.println("cmd=" + $SHELL_COMMAND.text.substring(6)); }
? ;


email
? :??? EMAIL TIMEOUT INT
? ;

EMAIL
??? :??? 'email'
??? ;

TIMEOUT
??? : 'timeout'
??? ;

SHELL
? :??? 'shell'
? ;

INT
? : '0'..'9'+
? ;

SHELL_COMMAND
??? : SHELL (options {greedy=false;} : . )* '\r'? '\n'
??? ;

WS
? : (' ' | '\t')+ { skip(); }
? ;


On Fri, Nov 26, 2010 at 5:18 PM, Bill Lear <rael at zopyra.com> wrote:
>
> I have searched in vain for a solution to this, though as this is my
> first attempt at writing an Antlr grammar, perhaps I just don't know
> enough about Antlr to form the right search.
>
> I am trying to write a grammar to support simple one-line command
> constructs of the following form:
>
> ? clean [-timeout <N>] [-notify (<email> | "<email1> <email2>...")]
> ? shell [-timeout <N>] shell_command_text
>
> Where "shell_command_text" above is simply the remaining text on the
> line.
>
> Examples:
>
> ? ?clean -timeout 20
> ? ?clean -notify "foobar at biz.com joe at bla.com" -timeout 2
> ? ?shell ls -l /tmp
> ? ?shell /x/home/boo/jre/bin/java -jar /tmp/j.jar DoIt -timeout 22 fizbuz
>
> In my current grammar, I have, among other things, essentially
> the following:
>
> ? ?clean: 'clean' comamndOptions? ;
>
> ? ?shell: 'shell' timeoutOption COMMAND_TEXT ;
>
> ? ?commandOptions: timeoutOption | notifyOption |
> ? ? ? ?timeoutOption notifyOption | notifyOption timeoutOption ;
>
> ? ?timeoutOption: '-timeout' INT ;
>
> ? ?notifyOption: '-notify' EMAIL | '-notify' QUOTED_STRING ;
>
> ? ?COMMAND_TEXT: ~('\n' | '\r')+ {
> ? ? ? ?setText(getText().trim());
> ? ?} ;
>
> ? ?QUOTED_STRING:
> ? ? ? ?'"' ( EscapeSequence | ~('\\'|'"') )* '"' {
> ? ? ? ? ? ?setText(getText().substring(1, getText().length() - 1));
> ? ? ? ?} | '\'' ( EscapeSequence | ~('\\'|'\'') )* '\'' {
> ? ? ? ? ? ?setText(getText().substring(1, getText().length() - 1));
> ? ? ? ?} ;
>
> ? ?fragment
> ? ?EscapeSequence : '\\' ('\"'|'\''|'\\') ;
> ? ?INT: '0'..'9'+ ;
> ? ?ID: 'a'..'z'+ ;
> ? ?EMAIL: ~('\n' | '\r' | ' ' | '"')+ ;
> ? ?NEWLINE: '\r'? '\n' ;
> ? ?WS: (' ' | '\t')+ { skip(); } ;
>
> Which of course does not work, as the COMMAND_TEXT rule basically
> obliterates the others:
>
> error(208): Command.g:133:1: The following token definitions can never be matched because prior tokens match the same input: INT,ID,EMAIL,WS
>
> So, I'm at a loss as to how to support the need to read until the end of
> line, or end of file, for the 'shell' rule.
>
> I'm assuming a syntactit predicate or some other trickery is on order,
> but I'm simply not able to figure it out after much head scratching.
>
> Would anyone here be able to help with this? ?Any other helpful
> criticism of the above would also be welcome (a better EMAIL rule?
> a better way to handle '-' type options?).
>
> Thank you.
>
>
> Bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From rael at zopyra.com  Fri Nov 26 11:09:53 2010
From: rael at zopyra.com (Bill Lear)
Date: Fri, 26 Nov 2010 13:09:53 -0600
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
References: <19695.56810.122399.751769@blake.zopyra.com>
	<AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
Message-ID: <19696.1537.6316.520005@blake.zopyra.com>

On Friday, November 26, 2010 at 19:23:24 (+0100) Martijn Reuvers writes:
>Hello Bill,
>
>The grammar below does the trick for your command (I stripped it
>somewhat, to quickly get it working). See the SHELL_COMMAND token,
>notice the options part with the greedy identifier. It reads until it
>encounters the newline stuff. You need to have something in front of
>it, like SHELL in this example - otherwise it would match anything,
>which is not what you want.

Thanks Martijn.  I tried replacing my original COMMAND_TEXT with
your suggestion:

COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
        setText(getText().trim());
    }
    ;

and though this reduces the conflict, I still have one I don't know how
to resolve:

error(208): Command.g:124:1: The following token definitions can never be matched because prior tokens match the same input: NEWLINE

I need the NEWLINE so I can limit the commands to a single line.  Here is
one part of the grammar I did not share that is relevant, along with
the parts I changed with your help:

command
    : (clean|shell) (NEWLINE | EOF)
    | NEWLINE
    ;

[clean as before]

shell : 'shell' timeoutOption? COMMAND_TEXT ;

[timeoutOption as before, etc.]

COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
        setText(getText().trim());
    }
    ;
EMAIL: ~('\n' | '\r' | ' ' | '"')+ ;
NEWLINE: '\r'? '\n' ;
WS: (' ' | '\t')+ { skip(); } ;

So, how do I preserve the single-line command idiom with the shell command
"read-to-end-of" line part?


Bill

From maxgbr at hotmail.it  Fri Nov 26 11:15:19 2010
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Fri, 26 Nov 2010 20:15:19 +0100
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <19696.1537.6316.520005@blake.zopyra.com>
References: <19695.56810.122399.751769@blake.zopyra.com>	<AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
	<19696.1537.6316.520005@blake.zopyra.com>
Message-ID: <BLU0-SMTP21119678BE833DBB1A3020B0210@phx.gbl>


  Can you send complete grammar?
That error is about lexer rules order

Max

Il 26/11/2010 20:09, Bill Lear ha scritto:
> On Friday, November 26, 2010 at 19:23:24 (+0100) Martijn Reuvers writes:
>> Hello Bill,
>>
>> The grammar below does the trick for your command (I stripped it
>> somewhat, to quickly get it working). See the SHELL_COMMAND token,
>> notice the options part with the greedy identifier. It reads until it
>> encounters the newline stuff. You need to have something in front of
>> it, like SHELL in this example - otherwise it would match anything,
>> which is not what you want.
> Thanks Martijn.  I tried replacing my original COMMAND_TEXT with
> your suggestion:
>
> COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
>          setText(getText().trim());
>      }
>      ;
>
> and though this reduces the conflict, I still have one I don't know how
> to resolve:
>
> error(208): Command.g:124:1: The following token definitions can never be matched because prior tokens match the same input: NEWLINE
>
> I need the NEWLINE so I can limit the commands to a single line.  Here is
> one part of the grammar I did not share that is relevant, along with
> the parts I changed with your help:
>
> command
>      : (clean|shell) (NEWLINE | EOF)
>      | NEWLINE
>      ;
>
> [clean as before]
>
> shell : 'shell' timeoutOption? COMMAND_TEXT ;
>
> [timeoutOption as before, etc.]
>
> COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
>          setText(getText().trim());
>      }
>      ;
> EMAIL: ~('\n' | '\r' | ' ' | '"')+ ;
> NEWLINE: '\r'? '\n' ;
> WS: (' ' | '\t')+ { skip(); } ;
>
> So, how do I preserve the single-line command idiom with the shell command
> "read-to-end-of" line part?
>
>
> Bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From parrt at cs.usfca.edu  Fri Nov 26 11:21:09 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 26 Nov 2010 11:21:09 -0800
Subject: [antlr-interest] Fixed composite grammar header propagation issues
Message-ID: <E746B124-040C-4B20-9273-8D66AD9DC9B1@cs.usfca.edu>

http://www.antlr.org/jira/browse/ANTLR-370
http://www.antlr.org/jira/browse/ANTLR-375

for 3.3.

Ter

From martijn.reuvers at gmail.com  Fri Nov 26 12:51:22 2010
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Fri, 26 Nov 2010 21:51:22 +0100
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <19696.1537.6316.520005@blake.zopyra.com>
References: <19695.56810.122399.751769@blake.zopyra.com>
	<AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
	<19696.1537.6316.520005@blake.zopyra.com>
Message-ID: <AANLkTikxnTSOsSThzMG=9WthX14Um-9anuhrS+-VhZ4r@mail.gmail.com>

Not tested but I think think your NEWLINE is the problem, replace
'\r'? '\n' with a reference to NEWLINE and make sure NEWLINE is
somewhere at the bottom of the grammar (you don't want it to be
matched too early). As NEWLINE & '\r'? \n' are both matching the same.



On Fri, Nov 26, 2010 at 8:09 PM, Bill Lear <rael at zopyra.com> wrote:
> On Friday, November 26, 2010 at 19:23:24 (+0100) Martijn Reuvers writes:
>>Hello Bill,
>>
>>The grammar below does the trick for your command (I stripped it
>>somewhat, to quickly get it working). See the SHELL_COMMAND token,
>>notice the options part with the greedy identifier. It reads until it
>>encounters the newline stuff. You need to have something in front of
>>it, like SHELL in this example - otherwise it would match anything,
>>which is not what you want.
>
> Thanks Martijn. ?I tried replacing my original COMMAND_TEXT with
> your suggestion:
>
> COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
> ? ? ? ?setText(getText().trim());
> ? ?}
> ? ?;
>
> and though this reduces the conflict, I still have one I don't know how
> to resolve:
>
> error(208): Command.g:124:1: The following token definitions can never be matched because prior tokens match the same input: NEWLINE
>
> I need the NEWLINE so I can limit the commands to a single line. ?Here is
> one part of the grammar I did not share that is relevant, along with
> the parts I changed with your help:
>
> command
> ? ?: (clean|shell) (NEWLINE | EOF)
> ? ?| NEWLINE
> ? ?;
>
> [clean as before]
>
> shell : 'shell' timeoutOption? COMMAND_TEXT ;
>
> [timeoutOption as before, etc.]
>
> COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
> ? ? ? ?setText(getText().trim());
> ? ?}
> ? ?;
> EMAIL: ~('\n' | '\r' | ' ' | '"')+ ;
> NEWLINE: '\r'? '\n' ;
> WS: (' ' | '\t')+ { skip(); } ;
>
> So, how do I preserve the single-line command idiom with the shell command
> "read-to-end-of" line part?
>
>
> Bill
>

From rael at zopyra.com  Fri Nov 26 13:50:01 2010
From: rael at zopyra.com (Bill Lear)
Date: Fri, 26 Nov 2010 15:50:01 -0600
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <BLU0-SMTP21119678BE833DBB1A3020B0210@phx.gbl>
References: <19695.56810.122399.751769@blake.zopyra.com>
	<AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
	<19696.1537.6316.520005@blake.zopyra.com>
	<BLU0-SMTP21119678BE833DBB1A3020B0210@phx.gbl>
Message-ID: <19696.11145.992897.111279@blake.zopyra.com>

On Friday, November 26, 2010 at 20:15:19 (+0100) Massimiliano Donini writes:
>
>Can you send complete grammar?
>That error is about lexer rules order.

Ok, added below my sig.


Bill

grammar Command;

@header {
    import java.util.ArrayList;
    import java.util.List;
}

@parser::members {
    private StageParameters stageParameters;
    private List<Command> commandList = new ArrayList<Command>();

    public void setStageParameters(final StageParameters params) {
        stageParameters = params;
    }

    public List<Command> getCommandList() {
        return commandList;
    }
}

commands: command+
    ;

command
scope {
    int timeout;
    List<String> notifyList;
}
@init {
    $command::timeout = -1;
    $command::notifyList = new ArrayList<String>();
}
    : (cleanlogs|cleanup) (NEWLINE | EOF)
    | NEWLINE
    ;

cleanlogs
@init {
    $command::timeout = CleanlogCommand.defaultMinutesToSleep;
}
    : 'cleanLogs' command_options? {
        commandList.add(new CleanlogCommand(stageParameters,
                                            $command::timeout,
                                            $command::notifyList));
    }
    ;

cleanup
@init {
    $command::timeout = CleanlogCommand.defaultMinutesToSleep;
}
    : 'cleanup' command_options ? {
        commandList.add(new CleanupCommand(stageParameters,
                                           $command::timeout,
                                           $command::notifyList));
    }
    ;

shellCommand
@init {
    $command::timeout = ShellCommand.defaultMinutesToSleep;
}
    : 'shellCommand' timeoutOption? COMMAND_TEXT {
        commandList.add(new ShellCommand(stageParameters,
                                         $COMMAND_TEXT.text));
    }
    ;

command_options:
    timeoutOption
    | notifyOption
    | timeoutOption notifyOption
    | notifyOption timeoutOption
    ;

timeoutOption:
    '-timeout' INT { $command::timeout = Integer.parseInt($INT.text); }
    ;

notifyOption: '-notify' EMAIL {
        $command::notifyList.add($EMAIL.text);
    }
    | '-notify' QUOTED_STRING {
        String[] l = $QUOTED_STRING.text.split("\\s+");

        for (int i = 0; i < l.length; i++) {
            $command::notifyList.add(l[i]);
        }
    }
    ;

COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
        setText(getText().trim());
    }
    ;

QUOTED_STRING:
    '"' ( EscapeSequence | ~('\\'|'"') )* '"' {
        setText(getText().substring(1, getText().length() - 1));
    }
    | '\'' ( EscapeSequence | ~('\\'|'\'') )* '\'' {
        setText(getText().substring(1, getText().length() - 1));
    }
    ;

fragment
EscapeSequence : '\\' ('\"'|'\''|'\\') ;

INT: '0'..'9'+
    ;

ID: 'a'..'z'+
    ;

EMAIL: ~('\n' | '\r' | ' ' | '"')+
    ;

NEWLINE:
    '\r'? '\n'
    ;

COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' { skip(); }
    | '/*' ( options {greedy=false;} : . )* '*/' { skip(); }
    ;

WS: (' ' | '\t')+ { skip(); }
    ;

From hirbli at nettmail.de  Fri Nov 26 14:31:56 2010
From: hirbli at nettmail.de (Michael Bosch)
Date: Fri, 26 Nov 2010 23:31:56 +0100
Subject: [antlr-interest] Identifiers with Spaces
Message-ID: <1290810716.2012.10.camel@mackie>

Hi,

I am trying to parse a language where identifiers can contain
spaces but otherwise spaces need to be ignored.  I have a problem
getting the ANTLR tokenizer to do this.  My problem can be
reproduced with the following grammar:

grammar test2;
s	:	ID ' ';
ID	:	'a' (' ' 'a')*;

No warnings / errors about ambiguities are reported but the
tokenizer fails on inputs "a " and "a a ".

When generating the code it turns out that the decision to enter
/ repeat the (' ' 'a') part is based only on a one character
lookahead.  A two character lookahead would fix my problem.

My understanding was that ANTLR was using unbounded lookahead as
needed to resolve such decisions and would be able to recognize
any regular language with no trouble.

Trying to understand the problem better created a grammar where
the parser should behave just like the lexer in the test2
grammar.  I did this by converting lexer rules to parser rules,
adding a token rule that combines all tokens and creating a
tokenstream that matches any number of tokens just to simulate
the repeated getting of tokens from the lexer:

grammar test3;
tokenstream
	:	token*;
token	:	id | ' ';
id	:	'a' (' ' 'a')*;

Compiling grammar test3 reports an ambiguity causing some
transition to be disabled.  The resulting parser behaves
different from the test2 lexer:

- Any input with leading space makes the parser match nothing
- Everything else parses just as intended, e.g. "a a a  " is
  grouped as "a a a", " ", " ".

My questions are:

- Is there a pragmatic solution for my original identifiers with
  spaces language (Preferably one that is target language independent)?
- Why is the lexer for test2 only using a 1 character lookahead?
- How does ANTLR resolve ambiguities in the lexer? Apparently
  keywords are always preferred over general identifiers but I have
  not found an explanation why this is the case.
- Why is the behavior of the parser in test3 different than the
  lexer in test2?

Michael



From goldberg at cbio.mskcc.org  Fri Nov 26 16:56:12 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Fri, 26 Nov 2010 19:56:12 -0500
Subject: [antlr-interest] Processing lists in a tree grammar
Message-ID: <4CF0572C.8060703@cbio.mskcc.org>

Hello All

It's me again!
As I wrote 
<http://www.antlr.org/pipermail/antlr-interest/2010-November/040124.html>, 
I'm writing a two-pass grammar. The AST generating code puts some 
repeating elements in a list:
> grammar completeOncoPrintSpecAST;
>
> options {output=AST;}
...
> fullDataTypeSpec
>     :    ':' ( dataTypeSpec )+ ';' -> dataTypeSpec+
>     ;
>
...

as per an example on p. 166 of Parr's "... ANTLR Reference" (TDAR):
> /** Collect the result trees from all formalArg invocations
> * and put into an AST list.
> */
> formalArgs :    formalArg (',' formalArg)* -> formalArg+
>  | ;
How does one walk these repeated elements in a tree grammar? I'm unable 
to find any documentation in TDAR or on antlr.org.

Thanks
A


From parrt at cs.usfca.edu  Fri Nov 26 18:04:37 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 26 Nov 2010 18:04:37 -0800
Subject: [antlr-interest] Processing lists in a tree grammar
In-Reply-To: <4CF0572C.8060703@cbio.mskcc.org>
References: <4CF0572C.8060703@cbio.mskcc.org>
Message-ID: <125CE0BF-29A5-41D6-97CC-524B9E1873E1@cs.usfca.edu>


On Nov 26, 2010, at 4:56 PM, Arthur Goldberg wrote:
> 
> as per an example on p. 166 of Parr's "... ANTLR Reference" (TDAR):
>> /** Collect the result trees from all formalArg invocations
>> * and put into an AST list.
>> */
>> formalArgs :    formalArg (',' formalArg)* -> formalArg+
>> | ;
> How does one walk these repeated elements in a tree grammar? I'm unable 
> to find any documentation in TDAR or on antlr.org.

hi. try formatArg+ in tree grammar :)

Remember right side of tree construction is usually the tree grammar.

Ter

From jbb at acm.org  Fri Nov 26 18:38:36 2010
From: jbb at acm.org (John B. Brodie)
Date: Fri, 26 Nov 2010 21:38:36 -0500
Subject: [antlr-interest] Identifiers with Spaces
In-Reply-To: <1290810716.2012.10.camel@mackie>
References: <1290810716.2012.10.camel@mackie>
Message-ID: <1290825516.20831.38.camel@gecko>

Greetings!

On Fri, 2010-11-26 at 23:31 +0100, Michael Bosch wrote:
> Hi,
> 
> I am trying to parse a language where identifiers can contain
> spaces but otherwise spaces need to be ignored.  I have a problem
> getting the ANTLR tokenizer to do this.  My problem can be
> reproduced with the following grammar:
> 
> grammar test2;
> s	:	ID ' ';
> ID	:	'a' (' ' 'a')*;
> 
> No warnings / errors about ambiguities are reported but the
> tokenizer fails on inputs "a " and "a a ".
> 
> When generating the code it turns out that the decision to enter
> / repeat the (' ' 'a') part is based only on a one character
> lookahead.  A two character lookahead would fix my problem.
> 
> My understanding was that ANTLR was using unbounded lookahead as
> needed to resolve such decisions and would be able to recognize
> any regular language with no trouble.
> 
> Trying to understand the problem better created a grammar where
> the parser should behave just like the lexer in the test2
> grammar.  I did this by converting lexer rules to parser rules,
> adding a token rule that combines all tokens and creating a
> tokenstream that matches any number of tokens just to simulate
> the repeated getting of tokens from the lexer:
> 
> grammar test3;
> tokenstream
> 	:	token*;
> token	:	id | ' ';
> id	:	'a' (' ' 'a')*;
> 
> Compiling grammar test3 reports an ambiguity causing some
> transition to be disabled.  The resulting parser behaves
> different from the test2 lexer:
> 
> - Any input with leading space makes the parser match nothing
> - Everything else parses just as intended, e.g. "a a a  " is
>   grouped as "a a a", " ", " ".
> 
> My questions are:
> 
> - Is there a pragmatic solution for my original identifiers with
>   spaces language (Preferably one that is target language independent)?

dis-allow blank(s) as the very last character of an identifier.

i suggest something like this (untested):

ID : ID_HEAD ( ' '* ID_TAIL )* ;
fragment ID_HEAD : LETTER ;
fragment ID_TAIL : LETTER | DIGIT | '_' ;

and of course ID_TAIL above should include all the non-blank characters
you intend to be valid.

basically we are saying that within an ID, a blank(s) may appear but if
it does appear it must be followed by at least one ID_TAIL character.

> - Why is the lexer for test2 only using a 1 character lookahead?

because that is all that is needed to disambiguate the situation. recall
that the lexer operates without any knowledge of parsing context. so, to
the lexer, (assuming a rule like ID:LETTER(' '|LETTER)*) "a " is clearly
an ID and not an 'a' followed by ' '.

> - How does ANTLR resolve ambiguities in the lexer? Apparently
>   keywords are always preferred over general identifiers but I have
>   not found an explanation why this is the case.

currently, ANTLR lexers greedily suck up all input that matches the
longest possible lexical Token. however, when 2 tokens match the exact
same input sequence, then the first lexer rule in the grammar wins.
implicit lexer rules (e.g. those lexer rules created for the 'quoted'
keyword strings in the parser rules) are placed first in the set of
lexer rules. so "a" would be the keyword 'a' and "ab" would be an ID
rather than a 'a' followed by an ID.

> - Why is the behavior of the parser in test3 different than the
>   lexer in test2?

moving lexer rules into the parser changes the ball-game.

hope this helps....
   -jbb



From wclodius at los-alamos.net  Fri Nov 26 20:42:42 2010
From: wclodius at los-alamos.net (William Clodius)
Date: Fri, 26 Nov 2010 21:42:42 -0700
Subject: [antlr-interest] Identifiers with Spaces
In-Reply-To: <1290810716.2012.10.camel@mackie>
References: <1290810716.2012.10.camel@mackie>
Message-ID: <5F4A4FF5-EE03-48CD-8262-A481FD8FA681@los-alamos.net>

Michael:

There are workarounds for your specific problem, but in general I would suggest a complete revision of your approach. Your approach is going to have problems dealing with some common typos, e.g. double spaces when one is intended. It is also going to have problems dealing with spaces in other contexts. What you are trying to do is generally better addressed during the semantic analysis, then during the lexical construction. I suggest the following approach

id_sequence : ID ID*

where ID is whatever you allow in an identifier between spaces. Then during the semantic analysis wherever you find an id_sequence in effect treat the first ID as a function that takes the rest of the id_sequence as an argument returning an "identifier". This analysis can be performed recursively fore each ID in the sequence. The implementation is straightforward, but tedious, and of course left to the student.

On Nov 26, 2010, at 3:31 PM, Michael Bosch wrote:

> Hi,
> 
> I am trying to parse a language where identifiers can contain
> spaces but otherwise spaces need to be ignored.  I have a problem
> getting the ANTLR tokenizer to do this.  My problem can be
> reproduced with the following grammar:
> 
> grammar test2;
> s	:	ID ' ';
> ID	:	'a' (' ' 'a')*;
> 
> No warnings / errors about ambiguities are reported but the
> tokenizer fails on inputs "a " and "a a ".
> 
> When generating the code it turns out that the decision to enter
> / repeat the (' ' 'a') part is based only on a one character
> lookahead.  A two character lookahead would fix my problem.
> 
> My understanding was that ANTLR was using unbounded lookahead as
> needed to resolve such decisions and would be able to recognize
> any regular language with no trouble.
> 
> Trying to understand the problem better created a grammar where
> the parser should behave just like the lexer in the test2
> grammar.  I did this by converting lexer rules to parser rules,
> adding a token rule that combines all tokens and creating a
> tokenstream that matches any number of tokens just to simulate
> the repeated getting of tokens from the lexer:
> 
> grammar test3;
> tokenstream
> 	:	token*;
> token	:	id | ' ';
> id	:	'a' (' ' 'a')*;
> 
> Compiling grammar test3 reports an ambiguity causing some
> transition to be disabled.  The resulting parser behaves
> different from the test2 lexer:
> 
> - Any input with leading space makes the parser match nothing
> - Everything else parses just as intended, e.g. "a a a  " is
>  grouped as "a a a", " ", " ".
> 
> My questions are:
> 
> - Is there a pragmatic solution for my original identifiers with
>  spaces language (Preferably one that is target language independent)?
> - Why is the lexer for test2 only using a 1 character lookahead?
> - How does ANTLR resolve ambiguities in the lexer? Apparently
>  keywords are always preferred over general identifiers but I have
>  not found an explanation why this is the case.
> - Why is the behavior of the parser in test3 different than the
>  lexer in test2?
> 
> Michael
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rebeka_fz at yahoo.fr  Sat Nov 27 15:26:55 2010
From: rebeka_fz at yahoo.fr (refka fouzai)
Date: Sat, 27 Nov 2010 23:26:55 +0000 (GMT)
Subject: [antlr-interest] debug test
Message-ID: <467029.15935.qm@web27902.mail.ukl.yahoo.com>

Hi,
im trying to debug this grammar which is correct while checking but im getting 
in the output box:"line1:51 not viable alternative at character ' ':
grammar marte;
    
riState    :stdianame  '.' 'addOpaqueBehavior''(' ELEMNAME ')' //ajout d'un 
Opaque Behavior au State Machine
    |stdianame '::' ELEMNAME '.' 'stereotyped''(' ster ')'
    ;

ster    :'TimedProcessing'ster_attr
    |'TimedDomain'
    |'clockType'
    ;

ster_attr:ACCOO 
DURATION'='INT(','START'='ELEMNAME)?(','FINISH'='ELEMNAME)?(','ON'='ELEMNAME)? 
ACCOC
    ;

stdianame:    'ST_'ELEMNAME
    ;
ACCOO    :    '{';
ACCOC    :    '}';        
DURATION:    'duration';
START    :    'start';
FINISH    :    'finish';
ON    :    'on'    ;


ELEMNAME  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;
    
INT :    '0'..'9'+
    ;

Rebeka

 Cordialement,


Refka Fouzai



      

From beginner.nguyen at gmail.com  Sat Nov 27 19:24:18 2010
From: beginner.nguyen at gmail.com (beginner.nguyen)
Date: Sat, 27 Nov 2010 19:24:18 -0800 (PST)
Subject: [antlr-interest] Get string from cmd output when run jar file about
	parsetree
Message-ID: <1290914658393-5780991.post@n2.nabble.com>


Hi, all
I use antlr-3.2.jar tool to general java code of a grammar, after that  I
built a program by java language to output a parsetree. 
When i run my program in cmd with input string: "which tour beggin ain
11/11/2010 ?" 
then a message appear in cmd: "line 1:19 no viable alternative at character
'a'". I know that the message appear because I type incorrect at "ain",
correct must be "in". But I want to get that message and set into a string
variable. could you help me.(I have attached a image)
Thank you very much. looking forward from you.
http://antlr.1301665.n2.nabble.com/file/n5780991/h2.jpg 
-- 
View this message in context: http://antlr.1301665.n2.nabble.com/Get-string-from-cmd-output-when-run-jar-file-about-parsetree-tp5780991p5780991.html
Sent from the ANTLR mailing list archive at Nabble.com.

From amr.muhammad.w at gmail.com  Sun Nov 28 01:38:21 2010
From: amr.muhammad.w at gmail.com (Amr Muhammad)
Date: Sun, 28 Nov 2010 11:38:21 +0200
Subject: [antlr-interest] "error reporting + paraphrase mechanism +
	cdfa.predict" problem
Message-ID: <AANLkTimzZ2YmjON3fwZXWuYhmo3U6YceDzgxq2ZzPzR5@mail.gmail.com>

Hello,

I am trying to implement the paraphrase mechanism explained in the textbook
ch.10 p.240. However, an exception is raised before the rule gets a chance
to be called.

I have a rule like this:

rule1: (rule2 (a+ b* | b* a+) )* (rule2 a*)*

rule2 calls other rules which deep down implement the paraphrase mechanism

when i looked at the generated code, it seems that the rule1 function would
call sth like : cdfa9.predict(....)
This predict method is what makes the parser go to exception state and would
not execute the function for rule2

i am not sure what i am doing wrong here.. Appreciate your guidance.

Thank you for your time :)

Amr Muhammad
Cairo Univ. Computer Eng. Grad.
twitter:@amrmuhammad <http://twitter.com/amrmuhammad>

From bernito.lb at gmail.com  Sun Nov 28 12:03:18 2010
From: bernito.lb at gmail.com (BeRniTo)
Date: Sun, 28 Nov 2010 18:03:18 -0200
Subject: [antlr-interest] Use another rule template's result
Message-ID: <AANLkTinNMBVaEyVfTTkw6tDm1z0xGRCeaa+-PWovu-G8@mail.gmail.com>

Hello guys!

I'm trying to make a translator to convert some input written in (some sort
of) C to a non-existent language (I'm doing a work for university and the
language comes from the teacher).

I've already created the lexer and the parser, and so a tree walker that
checks input's semantic.

Now, having the input:

constdef c1 = 1+2;
void main() { c1; }

I want to emit this code: ((add 1) 2));

The thing is I don't need to print the template's result of constdef rule
"((add 1) 2))" when visiting it's node but to store it somewhere and then
refer to it later in MAIN rule maybe by it's name (c1).
I was thinking in creating a HashMap<String, String>, like I did with the
symbol table (to store IDs so to report an error if a constant is declared
twice and those things), but I can't put embeded java code in rules as I
could when checking the semantic in the other tree walker with output=AST
(here I'm using "output=template" instead).

Is there a way to do this? What am I missing?

Sorry if my explanation isn't clear enough but I'm not an english-speaker so
it's a little hard to explain myself correctly. :-P

From martijn.reuvers at gmail.com  Sun Nov 28 23:08:16 2010
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Mon, 29 Nov 2010 08:08:16 +0100
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <19696.11145.992897.111279@blake.zopyra.com>
References: <19695.56810.122399.751769@blake.zopyra.com>
	<AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
	<19696.1537.6316.520005@blake.zopyra.com>
	<BLU0-SMTP21119678BE833DBB1A3020B0210@phx.gbl>
	<19696.11145.992897.111279@blake.zopyra.com>
Message-ID: <AANLkTinU1X2S63qk3Dtw7UD=5YxkWWUHxEnmkeCtmvd9@mail.gmail.com>

Hello Bill,

As said before most likely your newline is causing problems. I'd
recommend you to get rid of it first (completely including the \r \n
constructs), to the point where your grammar does not give any error
anymore. After that introduce it step by step.

As a side note avoid using text constructs in parser rules (e.g.
'cleanLogs', use real tokens for it). Sooner or later these will cause
trouble, plus that with real tokens you can have better error
reporting.

Regards,
Martijn

On Fri, Nov 26, 2010 at 10:50 PM, Bill Lear <rael at zopyra.com> wrote:
> On Friday, November 26, 2010 at 20:15:19 (+0100) Massimiliano Donini writes:
>>
>>Can you send complete grammar?
>>That error is about lexer rules order.
>
> Ok, added below my sig.
>
>
> Bill
>
> grammar Command;
>
> @header {
> ? ?import java.util.ArrayList;
> ? ?import java.util.List;
> }
>
> @parser::members {
> ? ?private StageParameters stageParameters;
> ? ?private List<Command> commandList = new ArrayList<Command>();
>
> ? ?public void setStageParameters(final StageParameters params) {
> ? ? ? ?stageParameters = params;
> ? ?}
>
> ? ?public List<Command> getCommandList() {
> ? ? ? ?return commandList;
> ? ?}
> }
>
> commands: command+
> ? ?;
>
> command
> scope {
> ? ?int timeout;
> ? ?List<String> notifyList;
> }
> @init {
> ? ?$command::timeout = -1;
> ? ?$command::notifyList = new ArrayList<String>();
> }
> ? ?: (cleanlogs|cleanup) (NEWLINE | EOF)
> ? ?| NEWLINE
> ? ?;
>
> cleanlogs
> @init {
> ? ?$command::timeout = CleanlogCommand.defaultMinutesToSleep;
> }
> ? ?: 'cleanLogs' command_options? {
> ? ? ? ?commandList.add(new CleanlogCommand(stageParameters,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?$command::timeout,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?$command::notifyList));
> ? ?}
> ? ?;
>
> cleanup
> @init {
> ? ?$command::timeout = CleanlogCommand.defaultMinutesToSleep;
> }
> ? ?: 'cleanup' command_options ? {
> ? ? ? ?commandList.add(new CleanupCommand(stageParameters,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? $command::timeout,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? $command::notifyList));
> ? ?}
> ? ?;
>
> shellCommand
> @init {
> ? ?$command::timeout = ShellCommand.defaultMinutesToSleep;
> }
> ? ?: 'shellCommand' timeoutOption? COMMAND_TEXT {
> ? ? ? ?commandList.add(new ShellCommand(stageParameters,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? $COMMAND_TEXT.text));
> ? ?}
> ? ?;
>
> command_options:
> ? ?timeoutOption
> ? ?| notifyOption
> ? ?| timeoutOption notifyOption
> ? ?| notifyOption timeoutOption
> ? ?;
>
> timeoutOption:
> ? ?'-timeout' INT { $command::timeout = Integer.parseInt($INT.text); }
> ? ?;
>
> notifyOption: '-notify' EMAIL {
> ? ? ? ?$command::notifyList.add($EMAIL.text);
> ? ?}
> ? ?| '-notify' QUOTED_STRING {
> ? ? ? ?String[] l = $QUOTED_STRING.text.split("\\s+");
>
> ? ? ? ?for (int i = 0; i < l.length; i++) {
> ? ? ? ? ? ?$command::notifyList.add(l[i]);
> ? ? ? ?}
> ? ?}
> ? ?;
>
> COMMAND_TEXT: (options {greedy=false;} : . )* '\r'? '\n' {
> ? ? ? ?setText(getText().trim());
> ? ?}
> ? ?;
>
> QUOTED_STRING:
> ? ?'"' ( EscapeSequence | ~('\\'|'"') )* '"' {
> ? ? ? ?setText(getText().substring(1, getText().length() - 1));
> ? ?}
> ? ?| '\'' ( EscapeSequence | ~('\\'|'\'') )* '\'' {
> ? ? ? ?setText(getText().substring(1, getText().length() - 1));
> ? ?}
> ? ?;
>
> fragment
> EscapeSequence : '\\' ('\"'|'\''|'\\') ;
>
> INT: '0'..'9'+
> ? ?;
>
> ID: 'a'..'z'+
> ? ?;
>
> EMAIL: ~('\n' | '\r' | ' ' | '"')+
> ? ?;
>
> NEWLINE:
> ? ?'\r'? '\n'
> ? ?;
>
> COMMENT
> ? ?: '//' ~('\n'|'\r')* '\r'? '\n' { skip(); }
> ? ?| '/*' ( options {greedy=false;} : . )* '*/' { skip(); }
> ? ?;
>
> WS: (' ' | '\t')+ { skip(); }
> ? ?;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rael at zopyra.com  Mon Nov 29 08:14:18 2010
From: rael at zopyra.com (Bill Lear)
Date: Mon, 29 Nov 2010 10:14:18 -0600
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <AANLkTinU1X2S63qk3Dtw7UD=5YxkWWUHxEnmkeCtmvd9@mail.gmail.com>
References: <19695.56810.122399.751769@blake.zopyra.com>
	<AANLkTikJJPp8BsXWiOuTADPunm3gdjVY_Mu6Biyx9nWv@mail.gmail.com>
	<19696.1537.6316.520005@blake.zopyra.com>
	<BLU0-SMTP21119678BE833DBB1A3020B0210@phx.gbl>
	<19696.11145.992897.111279@blake.zopyra.com>
	<AANLkTinU1X2S63qk3Dtw7UD=5YxkWWUHxEnmkeCtmvd9@mail.gmail.com>
Message-ID: <19699.53594.129936.761653@blake.zopyra.com>

On Monday, November 29, 2010 at 08:08:16 (+0100) Martijn Reuvers writes:
>Hello Bill,
>
>As said before most likely your newline is causing problems. I'd
>recommend you to get rid of it first (completely including the \r \n
>constructs), to the point where your grammar does not give any error
>anymore. After that introduce it step by step.
>
>As a side note avoid using text constructs in parser rules (e.g.
>'cleanLogs', use real tokens for it). Sooner or later these will cause
>trouble, plus that with real tokens you can have better error
>reporting.

The basic issue seems to be that I want this basic form:

    <command> [-timeout <NN>] [-notify <email_address>]

examples of which are:

    cleanlogs -timeout 20 -notify email1 at biz.com
    cleanup -timeout 10 -notify "email1 at biz.com email2 at biz.com"
    deploy -notify me at me.com -list "compA compB compC"

etc., along with the less-structured shell command types:

    // with timeout
    shell -timeout 20 find /x/web -name '*.logs.bak' | xargs rm -f

    // without timeout
    shell find /x/web -name '@*' | xargs mv /tmp/

The fact that I want an unquoted email address to be parsed (i.e.,
foo at bar.com and not 'foo at bar.com') seems to be causing the problem.

I'm going to try to redo things a bit more cleanly, try to boil down
the problem further, and repost if I still have problems.

Thanks for the help.


Bill


From ronburk at gmail.com  Mon Nov 29 08:19:21 2010
From: ronburk at gmail.com (Ron Burk)
Date: Mon, 29 Nov 2010 08:19:21 -0800
Subject: [antlr-interest] Use another rule template's result
In-Reply-To: <AANLkTinNMBVaEyVfTTkw6tDm1z0xGRCeaa+-PWovu-G8@mail.gmail.com>
References: <AANLkTinNMBVaEyVfTTkw6tDm1z0xGRCeaa+-PWovu-G8@mail.gmail.com>
Message-ID: <AANLkTikRfgGdG=p299jJTU=8PoSe2MT6hDFJMaqsirxK@mail.gmail.com>

To clarify, is constdef is a kind of macro that must be
evaluated when used and not evaluated when defined?
For example, if you had:

void main(){ 3*c1;}

would the expression be required to evaluate to 5 or to 9?

From troy.daniels at baesystems.com  Mon Nov 29 08:29:12 2010
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Mon, 29 Nov 2010 11:29:12 -0500
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <19699.53594.129936.761653@blake.zopyra.com>
Message-ID: <20101129162917.0E38534183AF@www.antlr.org>

 

> 
> The basic issue seems to be that I want this basic form:
> 
>     <command> [-timeout <NN>] [-notify <email_address>]
> 
> examples of which are:
> 
>     cleanlogs -timeout 20 -notify email1 at biz.com
>     cleanup -timeout 10 -notify "email1 at biz.com email2 at biz.com"
>     deploy -notify me at me.com -list "compA compB compC"
> 
> etc., along with the less-structured shell command types:
> 
>     // with timeout
>     shell -timeout 20 find /x/web -name '*.logs.bak' | xargs rm -f
> 
>     // without timeout
>     shell find /x/web -name '@*' | xargs mv /tmp/
> 

I think this is the main problem that you need to resolve.  The basic form is a highly structured, simple language, that can easily be handled with a small grammar.  The shell command is a complex language that could potentially match valid tokens in your simple language.  (It's generally not illegal to have a shell command called "-notify", just a bad idea.  But some user will do it anyway.)  

I think what you want to do is look at island grammars.  These are typically used when you have two different languages with very different structure in the same input.  (A common example is parsing javadoc comments within a java file.)  You also have a clean entry and exit point for the island grammar.  The lexer normally parses the basic form.  When the lexer encounters "shell", it switches to the island grammar to parse the remainder of the line, then switches back to the basic form for the next line.  This allows you to have a grammar which consumes the rest of the line regardless of content without the need to avoid conflicts with the basic form.

I think either 3.3 or 4 will have better support for this.

> The fact that I want an unquoted email address to be parsed 
> (i.e., foo at bar.com and not 'foo at bar.com') seems to be causing 
> the problem.
> 
> I'm going to try to redo things a bit more cleanly, try to 
> boil down the problem further, and repost if I still have problems.
> 

If you try to keep everything in one grammar, I suspect you will continually have problems like this arise.  If you fix the unquoted email, you might uncover another problem or your next change will introduce a similar problem.

Troy

> Thanks for the help.
> 
> 
> Bill
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From stefika at gmail.com  Mon Nov 29 09:55:52 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 29 Nov 2010 11:55:52 -0600
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <83E925E0-D7DD-46BE-A404-775FE2C4C8E5@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<11cdef66-e81a-4387-b8ea-c1ba40dee054@SG2EHSMHS006.ehs.local>
	<83E925E0-D7DD-46BE-A404-775FE2C4C8E5@cs.usfca.edu>
Message-ID: <AANLkTinpq7tiOX-2ErUMgsFhabf-tVk5Lo9nUWqp2FQT@mail.gmail.com>

Hey folks,

Two questions:

1. The compiler for our programming language is written with ANTLR.
Any changes we should know about before upgrading (e.g., non-backward
compatible changes)?

2. Maybe I missed it, but are there release notes available anywhere?

Andreas Stefik

From parrt at cs.usfca.edu  Mon Nov 29 10:19:10 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 29 Nov 2010 10:19:10 -0800
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <AANLkTinpq7tiOX-2ErUMgsFhabf-tVk5Lo9nUWqp2FQT@mail.gmail.com>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<11cdef66-e81a-4387-b8ea-c1ba40dee054@SG2EHSMHS006.ehs.local>
	<83E925E0-D7DD-46BE-A404-775FE2C4C8E5@cs.usfca.edu>
	<AANLkTinpq7tiOX-2ErUMgsFhabf-tVk5Lo9nUWqp2FQT@mail.gmail.com>
Message-ID: <7CA22EB2-B1F3-41A0-A568-9C4D43D69DBF@cs.usfca.edu>

Hi Andreas,

Only issue is if you implemented the debug interface.

Check here:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes

Ter

On Nov 29, 2010, at 9:55 AM, Andreas Stefik wrote:

> Hey folks,
> 
> Two questions:
> 
> 1. The compiler for our programming language is written with ANTLR.
> Any changes we should know about before upgrading (e.g., non-backward
> compatible changes)?
> 
> 2. Maybe I missed it, but are there release notes available anywhere?
> 
> Andreas Stefik


From stefika at gmail.com  Mon Nov 29 10:23:39 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 29 Nov 2010 12:23:39 -0600
Subject: [antlr-interest] antlr 3.3 release imminent
In-Reply-To: <7CA22EB2-B1F3-41A0-A568-9C4D43D69DBF@cs.usfca.edu>
References: <ED7E7D93-D1E2-40A2-BD0F-5F8908ACA194@cs.usfca.edu>
	<11cdef66-e81a-4387-b8ea-c1ba40dee054@SG2EHSMHS006.ehs.local>
	<83E925E0-D7DD-46BE-A404-775FE2C4C8E5@cs.usfca.edu>
	<AANLkTinpq7tiOX-2ErUMgsFhabf-tVk5Lo9nUWqp2FQT@mail.gmail.com>
	<7CA22EB2-B1F3-41A0-A568-9C4D43D69DBF@cs.usfca.edu>
Message-ID: <AANLkTi=XJ3z9dNQ1Ay=4bjRaiXjR0t246n0FexL2CT05@mail.gmail.com>

Great, thanks. Sounds like we should be fine.

Stefik

On Mon, Nov 29, 2010 at 12:19 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi Andreas,
> Only issue is if you implemented the debug interface.
> Check here:
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes
> Ter
> On Nov 29, 2010, at 9:55 AM, Andreas Stefik wrote:
>
> Hey folks,
>
> Two questions:
>
> 1. The compiler for our programming language is written with ANTLR.
> Any changes we should know about before upgrading (e.g., non-backward
> compatible changes)?
>
> 2. Maybe I missed it, but are there release notes available anywhere?
>
> Andreas Stefik
>
>

From mike.matera at xilinx.com  Mon Nov 29 10:45:37 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Mon, 29 Nov 2010 10:45:37 -0800
Subject: [antlr-interest] Get string from cmd output when run jar file
 about	parsetree
In-Reply-To: <1290914658393-5780991.post@n2.nabble.com>
References: <1290914658393-5780991.post@n2.nabble.com>
Message-ID: <a538bbc1-b21c-4f2f-93a2-4852a195822a@VA3EHSMHS030.ehs.local>

Hi,

Take a look at the documentation here:

http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery

Here's the summary:  You must override the error reporting mechanisms of 
your parser.  Then you can do whatever you want with the text of the 
errors.

Cheers
./m

beginner.nguyen wrote:
> Hi, all
> I use antlr-3.2.jar tool to general java code of a grammar, after that  I
> built a program by java language to output a parsetree. 
> When i run my program in cmd with input string: "which tour beggin ain
> 11/11/2010 ?" 
> then a message appear in cmd: "line 1:19 no viable alternative at character
> 'a'". I know that the message appear because I type incorrect at "ain",
> correct must be "in". But I want to get that message and set into a string
> variable. could you help me.(I have attached a image)
> Thank you very much. looking forward from you.
> http://antlr.1301665.n2.nabble.com/file/n5780991/h2.jpg 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From mike.matera at xilinx.com  Mon Nov 29 10:51:49 2010
From: mike.matera at xilinx.com (Michael Matera)
Date: Mon, 29 Nov 2010 10:51:49 -0800
Subject: [antlr-interest] Reading all text to end-of-line in a rule
In-Reply-To: <20101129162917.0E38534183AF@www.antlr.org>
References: <20101129162917.0E38534183AF@www.antlr.org>
Message-ID: <0fb115c2-d255-466e-b84a-0515d6ea8079@SG2EHSMHS004.ehs.local>

Hi,

One way to create island grammars in existing ANTLR is to use 
delimiters.  In other words your language would be much easier to parse 
if it took input like this:

<command> [-timeout <NN>] [-notify <addr>] "shell_command"

Your outside language constructs are now safely tucked away in quotes. 
Now your lexer doesn't need to see them in any meaningful way.  When you 
encounter a quoted string you can produce a STRING token and let higher 
level code deal with what it really means.

Cheers
./m

Daniels, Troy (US SSA) wrote:
>  
> 
>> The basic issue seems to be that I want this basic form:
>>
>>     <command> [-timeout <NN>] [-notify <email_address>]
>>
>> examples of which are:
>>
>>     cleanlogs -timeout 20 -notify email1 at biz.com
>>     cleanup -timeout 10 -notify "email1 at biz.com email2 at biz.com"
>>     deploy -notify me at me.com -list "compA compB compC"
>>
>> etc., along with the less-structured shell command types:
>>
>>     // with timeout
>>     shell -timeout 20 find /x/web -name '*.logs.bak' | xargs rm -f
>>
>>     // without timeout
>>     shell find /x/web -name '@*' | xargs mv /tmp/
>>
> 
> I think this is the main problem that you need to resolve.  The basic form is a highly structured, simple language, that can easily be handled with a small grammar.  The shell command is a complex language that could potentially match valid tokens in your simple language.  (It's generally not illegal to have a shell command called "-notify", just a bad idea.  But some user will do it anyway.)  
> 
> I think what you want to do is look at island grammars.  These are typically used when you have two different languages with very different structure in the same input.  (A common example is parsing javadoc comments within a java file.)  You also have a clean entry and exit point for the island grammar.  The lexer normally parses the basic form.  When the lexer encounters "shell", it switches to the island grammar to parse the remainder of the line, then switches back to the basic form for the next line.  This allows you to have a grammar which consumes the rest of the line regardless of content without the need to avoid conflicts with the basic form.
> 
> I think either 3.3 or 4 will have better support for this.
> 
>> The fact that I want an unquoted email address to be parsed 
>> (i.e., foo at bar.com and not 'foo at bar.com') seems to be causing 
>> the problem.
>>
>> I'm going to try to redo things a bit more cleanly, try to 
>> boil down the problem further, and repost if I still have problems.
>>
> 
> If you try to keep everything in one grammar, I suspect you will continually have problems like this arise.  If you fix the unquoted email, you might uncover another problem or your next change will introduce a similar problem.
> 
> Troy
> 
>> Thanks for the help.
>>
>>
>> Bill
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



From hirbli at nettmail.de  Mon Nov 29 14:23:50 2010
From: hirbli at nettmail.de (Michael Bosch)
Date: Mon, 29 Nov 2010 23:23:50 +0100
Subject: [antlr-interest] Identifiers with Spaces
In-Reply-To: <1290825516.20831.38.camel@gecko>
References: <1290810716.2012.10.camel@mackie> <1290825516.20831.38.camel@gecko>
Message-ID: <1291069430.2263.37.camel@mackie>

Hi John!

On Fri, 2010-11-26 at 21:38 -0500, John B. Brodie wrote:
> i suggest something like this (untested):
> 
> ID : ID_HEAD ( ' '* ID_TAIL )* ;
> fragment ID_HEAD : LETTER ;
> fragment ID_TAIL : LETTER | DIGIT | '_' ;

That is what I tried.  I just reduced it to the bare minimum to
demonstrate the problem.

> > - Why is the lexer for test2 only using a 1 character lookahead?
> 
> because that is all that is needed to disambiguate the situation. recall
> that the lexer operates without any knowledge of parsing context. so, to
> the lexer, (assuming a rule like ID:LETTER(' '|LETTER)*) "a " is clearly
> an ID and not an 'a' followed by ' '.

I tend to disagree: For the input 
  iden tifier =
the first space is a continuation of the ID, but the second space
is just whitespace to be ignored.  To distinguish between the two cases
the lexer would have to look past the spaces.

I know that the LL(*) parser / lexer engine is capable of doing that,
however ANTLR chooses to create a 1 character lookahead.
I have temporarily worked around the problem by manually changing
the lookahead code in the generated code.

Michael

PS: Your explanation of lexer rule priorities was helpful.


From hirbli at nettmail.de  Mon Nov 29 14:33:23 2010
From: hirbli at nettmail.de (Michael Bosch)
Date: Mon, 29 Nov 2010 23:33:23 +0100
Subject: [antlr-interest] Identifiers with Spaces
In-Reply-To: <5F4A4FF5-EE03-48CD-8262-A481FD8FA681@los-alamos.net>
References: <1290810716.2012.10.camel@mackie>
	<5F4A4FF5-EE03-48CD-8262-A481FD8FA681@los-alamos.net>
Message-ID: <1291070003.2263.48.camel@mackie>

Hi William!

On Fri, 2010-11-26 at 21:42 -0700, William Clodius wrote:
> There are workarounds for your specific problem, but in general I would suggest a complete revision of your approach.

Which other workarounds are there?  Can you give me some pointers?

Does this mean that there is no simple solution with ANTLR?

I played around with it some more and noticed that my lexer rules
are actually just regular expressions.  This is probably the usual
case for lexers.  So I just threw my problem at gnu sed and
it solves my tokenization problem perfectly:

command: sed 's/\(a\+\( \+a\+\)*\| \|=\)/[\1]/g'
input: a aa = aa
output: [a aa][ ][=][ ][aa]

Granted, the syntax is ugly and I would have to somehow put this into
code. But it gave me the idea of creating a simple preprocessor
that frames the identifiers with \u0002 and \u0003, such that
ANTLR recognizes them without problem.

> What you are trying to do is generally better addressed during the semantic analysis, then during the lexical construction. I suggest the following approach
> 
> id_sequence : ID ID*
> 
> where ID is whatever you allow in an identifier between spaces. Then during the semantic analysis wherever you find an id_sequence in effect treat the first ID as a function that takes the rest of the id_sequence as an argument returning an "identifier". This analysis can be performed recursively fore each ID in the sequence. The implementation is straightforward, but tedious, and of course left to the student.

Actually the spaces are part of the identifier and are significant.
That means I would have to know how many identifiers were between the
two IDs of an id_sequence.  I saw somebody mention that you could
somehow access the hidden channel used to ignore spaces but I did
not find any good explanation of how to do that.

Michael



From jbb at acm.org  Mon Nov 29 15:28:44 2010
From: jbb at acm.org (John B. Brodie)
Date: Mon, 29 Nov 2010 18:28:44 -0500
Subject: [antlr-interest] Identifiers with Spaces
In-Reply-To: <1291069430.2263.37.camel@mackie>
Message-ID: <1291073324.8286.10.camel@gecko>

sometimes, when the necessary look ahead is small and is bounded,
syntactic predicates can be your friend.

see attached.

-------------- next part --------------
grammar LexerOnly;

@members {
   private static final String [] x = new String[]{
      "a8 b c = d   e23      f",
      "a1b2c3   =   xyz",
      "a1 2 b"
   };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to lex:`"+x[i]+"`");
            LexerOnlyLexer lexer =
               new LexerOnlyLexer(new ANTLRStringStream(x[i]));

            int j = 1;
            Token token = lexer.nextToken();
            while( token.getType() != LexerOnlyLexer.EOF ) {
               System.out.format("\%d: type = \%s, text = `\%s`\%n",
                                 j,
                                 tokenNames[token.getType()],
                                 token.getText());
               j++;
               token = lexer.nextToken();
            }
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

list_of_tokens : .+ EOF ; // dummy, this rule is never used by this test case...

NUMBER : DIGIT+ ;
NAME : ID ( (WS ID_HEAD)=> WS ID )* ;
EQU : '=' ;
WHITESPACE : WS { $channel = HIDDEN; };


fragment ID : ID_HEAD ID_TAIL* ;
fragment ID_HEAD : ALPHA ;
fragment ID_TAIL : ALPHA | DIGIT;
fragment ALPHA : ('a'..'z')|('A'..'Z') ;
fragment DIGIT : '0'..'9' ;
fragment WS : ' '+ ;

From rael at zopyra.com  Mon Nov 29 19:00:46 2010
From: rael at zopyra.com (Bill Lear)
Date: Mon, 29 Nov 2010 21:00:46 -0600
Subject: [antlr-interest] Island grammar for reading shell commands
Message-ID: <19700.26846.836510.537929@blake.zopyra.com>

I've followed the sensible advice to create an island grammar to deal
with parsing an unstructured shell command along with more structured
input.  Unfortunately, when I follow the examples as given in the
Antlr examples zip file, I get very close, but then either a NULL
pointer exception bites, or I can only parse one line of "island"
input --- I can't figure out how to return control back to the "sea"
parser and have it read more input.

I've tried to boil it down to very essential form.  If someone could have
a look, I'd appreciate it (I've been working on it for hours and can't
quite get it to work).

Below my sig are the details.

Many thanks in advance for any help you can offer.


Bill

Here is some sample input:

shell ls /var/log
cleanup
cleanlog
cleanup -timeout 20
cleanlog -timeout 20
cleanup -timeout 20 -notify wlear at paypal.com
cleanlog -timeout 20 -notify wlear at paypal.com
cleanup -timeout 20 -notify "wlear at paypal.com foo at bar.com"
cleanlog -timeout 20 -notify "wlear at paypal.com foo at bar.com"
shell find /var/log/qmail -type f -name '@*' | xargs rm -f
shell -timeout 20 ls /tmp

Here is my driver program:

import org.antlr.runtime.*;

public class Command {
    public static void main(String[] args) throws Exception {
        new CommandParser(
            new CommonTokenStream(
                new CommandLexer(
                    new ANTLRInputStream(System.in)))).commands();
    }
}


Here is the "island" grammar (Shell.g):

grammar Shell;

@parser::members {
    private String command;
    public String getCommand() {
        return command;
    }
}

shell: REST_OF_LINE {
        command = $REST_OF_LINE.text.trim();
    }
    ;

REST_OF_LINE: (options {greedy=false;} : . )* '\r'? '\n' {
        // If this is uncommented, I get a NULL pointer exception.
        //emit(Token.EOF_TOKEN);
    }
    ;

Here is the "sea" grammar (Command.g):

grammar Command;

@lexer::members {
    public static final int SHELL_CHANNEL = 1;
}

commands : command+ ;

command
scope {
    int timeout;
    List<String> notifyList;
}
@init {
    $command::timeout = -1;
    $command::notifyList = new ArrayList<String>();
}
    : cleanup | cleanlog {
    }
    | SHELL
    | NEWLINE
    ;

cleanup
    : CLEANUP command_options? {
        System.out.println("cleanup::timeout=" + $command::timeout
                           + " email=" + $command::notifyList);
    }
    ;

cleanlog
    : CLEANLOG command_options? {
        System.out.println("cleanlog::timeout=" + $command::timeout
                           + " email=" + $command::notifyList);
    }
    ;

SHELL
    : 'shell' {
        System.out.println("Got shell.  Going native.");

        ShellLexer l = new ShellLexer(input);

        CommonTokenStream tokens = new CommonTokenStream(l);

        ShellParser parser = new ShellParser(tokens);
        parser.shell();

        String command = parser.getCommand();

        System.out.println("Got command from ShellParser:[" + command + "]");
        $channel = SHELL_CHANNEL;
    }
    ;

command_options
    : timeoutOption
    | notifyOption
    | timeoutOption notifyOption
    | notifyOption timeoutOption
    ;

timeoutOption
    : TIMEOUT INT { $command::timeout = Integer.parseInt($INT.text); }
    ;

notifyOption
    : NOTIFY EMAIL {
        $command::notifyList.add($EMAIL.text);
    }
    | NOTIFY QUOTED_STRING {
        String[] l = $QUOTED_STRING.text.split("\\s+");

        for (int i = 0; i < l.length; i++) {
            $command::notifyList.add(l[i]);
        }
    }
    ;

CLEANUP: 'cleanup' ;
CLEANLOG: 'cleanlog' ;
TIMEOUT: '-timeout' ;
NOTIFY: '-notify' ;
INT: '0'..'9'+ ;

QUOTED_STRING:
    '"' ( ESCAPE_SEQUENCE | ~('\\'|'"') )* '"' {
        setText(getText().substring(1, getText().length() - 1));
    }
    | '\'' ( ESCAPE_SEQUENCE | ~('\\'|'\'') )* '\'' {
        setText(getText().substring(1, getText().length() - 1));
    }
    ;

WS: (' ' | '\t')+ { skip(); } ;

NEWLINE: '\r'? '\n' { } ;

EMAIL: ~('\n' | '\r' | ' ' | '"')+ {
    }
    ;

COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' { skip(); }
    | '/*' ( options {greedy=false;} : . )* '*/' { skip(); }
    ;

fragment
ESCAPE_SEQUENCE : '\\' ('\"'|'\''|'\\') ;

From parrt at cs.usfca.edu  Mon Nov 29 19:18:32 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 29 Nov 2010 19:18:32 -0800
Subject: [antlr-interest] ANTLR v3.3 released!
Message-ID: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>

ANTLR 3.3 is out! Get it here:

http://antlr.org/download.html

Has new Objective-C and Ruby targets.  See

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes

I hope to get ANTLRWorks out tomorrow.  That will be 1.4.1 with ANTLR v3.3.

Ter

From rael at zopyra.com  Mon Nov 29 19:58:24 2010
From: rael at zopyra.com (Bill Lear)
Date: Mon, 29 Nov 2010 21:58:24 -0600
Subject: [antlr-interest] ANTLR v3.3 released!
In-Reply-To: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
References: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
Message-ID: <19700.30304.141455.78255@blake.zopyra.com>

On Monday, November 29, 2010 at 19:18:32 (-0800) Terence Parr writes:
>ANTLR 3.3 is out! Get it here:
>
>http://antlr.org/download.html
>
>Has new Objective-C and Ruby targets.  See
>
>http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes
>
>I hope to get ANTLRWorks out tomorrow.  That will be 1.4.1 with ANTLR v3.3.

Rain, meet parade...

Using maven 2.2.1, I don't seem to be able to build it.  After failing,
I tried 'mvn -N install', but that didn't clear things up:

% mvn -Dmaven.test.skip=true
[Wailing an gnashing of teeth]
[INFO] Error building POM (may not be this project's POM).

Project ID: unknown

Reason: Could not find the model file 'C:\cygwin\home\wlear\devel\antlr-3.3\antlr3-maven-archetype'. for project unknown

[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Could not find the model file 'C:\cygwin\home\wlear\devel\antlr-3.3\antlr3-maven-archetype'. for project unknown


Hopefully I've simply done something wrong, but I did not have this problem
building 3.2


Bill

From steel at kryas.com  Mon Nov 29 21:23:28 2010
From: steel at kryas.com (Stanley Steel)
Date: Mon, 29 Nov 2010 22:23:28 -0700
Subject: [antlr-interest] ANTLRC 3.3
Message-ID: <AANLkTimqQOy2ogFLSgpRfsEpLD0pXzmeYRtFGDtUz4Ky@mail.gmail.com>

This is mostly a question for Mr. Jim Idle.  Is there any plan to update the
antlrc 3.3 library?  Is it still being worked on?

From Enrique.PradosValiente at reale.es  Mon Nov 29 23:17:43 2010
From: Enrique.PradosValiente at reale.es (Prados Valiente Enrique)
Date: Tue, 30 Nov 2010 08:17:43 +0100
Subject: [antlr-interest] ANTLR v3.3 released!
In-Reply-To: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
References: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
Message-ID: <931DCC17C6D7A849AEE684BF5B13E199020DD397@BLPOSTIN.reale.net>

Will be ANTLR 3.3 Runtime for C# ??

thanks

-----Mensaje original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] En nombre de Terence Parr
Enviado el: martes, 30 de noviembre de 2010 4:19
Para: ANTLR Interest
CC: ANTLR-dev Dev
Asunto: [antlr-interest] ANTLR v3.3 released!

ANTLR 3.3 is out! Get it here:

http://antlr.org/download.html

Has new Objective-C and Ruby targets.  See

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes

I hope to get ANTLRWorks out tomorrow.  That will be 1.4.1 with ANTLR
v3.3.

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mark.mandel at gmail.com  Mon Nov 29 23:20:16 2010
From: mark.mandel at gmail.com (Mark Mandel)
Date: Tue, 30 Nov 2010 18:20:16 +1100
Subject: [antlr-interest] ANTLR v3.3 released!
In-Reply-To: <931DCC17C6D7A849AEE684BF5B13E199020DD397@BLPOSTIN.reale.net>
References: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
	<931DCC17C6D7A849AEE684BF5B13E199020DD397@BLPOSTIN.reale.net>
Message-ID: <AANLkTikn2xsX_yOLppvhJTmCf3ph-WvcSsQXRVTgu+ff@mail.gmail.com>

Congratulations Terrance! Thanks for the hard work, it is much
appreciated!!!

Mark

On Tue, Nov 30, 2010 at 6:17 PM, Prados Valiente Enrique <
Enrique.PradosValiente at reale.es> wrote:

> Will be ANTLR 3.3 Runtime for C# ??
>
> thanks
>
> -----Mensaje original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] En nombre de Terence Parr
> Enviado el: martes, 30 de noviembre de 2010 4:19
> Para: ANTLR Interest
> CC: ANTLR-dev Dev
> Asunto: [antlr-interest] ANTLR v3.3 released!
>
> ANTLR 3.3 is out! Get it here:
>
> http://antlr.org/download.html
>
> Has new Objective-C and Ruby targets.  See
>
> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes
>
> I hope to get ANTLRWorks out tomorrow.  That will be 1.4.1 with ANTLR
> v3.3.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From sharwell at pixelminegames.com  Mon Nov 29 23:40:24 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 30 Nov 2010 01:40:24 -0600
Subject: [antlr-interest] ANTLR v3.3 released!
In-Reply-To: <931DCC17C6D7A849AEE684BF5B13E199020DD397@BLPOSTIN.reale.net>
References: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
	<931DCC17C6D7A849AEE684BF5B13E199020DD397@BLPOSTIN.reale.net>
Message-ID: <023d01cb9061$dae68900$90b39b00$@pixelminegames.com>

Here are the C# 3 ports:

This is the Tool (Antlr3.exe and its templates), StringTemplate 3.2
including a new dynamic template compiler, the CSharp3 runtime, and the
MSBuild Targets file to incorporate ANTLR into C# builds:
http://www.280z28.org/downloads/antlr/antlr-dotnet-binaries-3.3.0.7239.7z

This is just the CSharp3 runtime:
http://www.280z28.org/downloads/antlr/antlr-dotnet-csharp3runtime-3.3.0.7239
.7z

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Prados Valiente
Enrique
Sent: Tuesday, November 30, 2010 1:18 AM
To: Terence Parr; ANTLR Interest
Cc: ANTLR-dev Dev
Subject: Re: [antlr-interest] ANTLR v3.3 released!

Will be ANTLR 3.3 Runtime for C# ??

thanks

-----Mensaje original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] En nombre de Terence Parr Enviado
el: martes, 30 de noviembre de 2010 4:19
Para: ANTLR Interest
CC: ANTLR-dev Dev
Asunto: [antlr-interest] ANTLR v3.3 released!

ANTLR 3.3 is out! Get it here:

http://antlr.org/download.html

Has new Objective-C and Ruby targets.  See

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes

I hope to get ANTLRWorks out tomorrow.  That will be 1.4.1 with ANTLR v3.3.

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mdonini at gpi.it  Tue Nov 30 05:40:53 2010
From: mdonini at gpi.it (Massimiliano Donini)
Date: Tue, 30 Nov 2010 14:40:53 +0100
Subject: [antlr-interest] AntlrWorks Debugging problems
Message-ID: <20101130134404.D0965C88@mailweb.gpi.it>

Hi, I'm not able to debug a grammar copmposed by a lexer and a parser.
I try to remote debug with VS2008 in the same way i do for a composite
grammar but i got a IOException and in AntrlWorks i got every time
Timeout message.
I don't have running process on AntrlWorks debug port.
What i was missing??
attached there is my grammar file, try to debug with any Sql condition.**

Regards Max

-------------- next part --------------
A non-text attachment was scrubbed...
Name: test7.rar
Type: application/octet-stream
Size: 4117 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20101130/24c38875/attachment.obj 

From lottvomschlott at gmx.de  Tue Nov 30 08:23:08 2010
From: lottvomschlott at gmx.de (Markus Lottmann)
Date: Tue, 30 Nov 2010 17:23:08 +0100
Subject: [antlr-interest] could not even do k=1 for decision 9;
	reason: timed out (>1000ms)
Message-ID: <4CF524EC.90108@gmx.de>

Hi,

i try to create a c++ gramar and get the following error:

error(10): internal error: 
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not 
even do k=1 for decision 9; reason: timed out (>1000ms)

The problem is that the grammer contains a few hundert lines of rules 
and i do not know how i should find the rule
which corresponds to decision 9. I get this error not only for decision 
9 but multiple times.

Can anyone help me?

Greetings,
ML

From jimi at temporal-wave.com  Tue Nov 30 08:35:13 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 30 Nov 2010 08:35:13 -0800
Subject: [antlr-interest] ANTLRC 3.3
In-Reply-To: <AANLkTimqQOy2ogFLSgpRfsEpLD0pXzmeYRtFGDtUz4Ky@mail.gmail.com>
References: <AANLkTimqQOy2ogFLSgpRfsEpLD0pXzmeYRtFGDtUz4Ky@mail.gmail.com>
Message-ID: <01cd01cb90ac$9036b470$b0a41d50$@temporal-wave.com>

Yes - it will be ready shortly.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stanley Steel
> Sent: Monday, November 29, 2010 9:23 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLRC 3.3
> 
> This is mostly a question for Mr. Jim Idle.  Is there any plan to
> update the antlrc 3.3 library?  Is it still being worked on?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From sharwell at pixelminegames.com  Tue Nov 30 08:37:39 2010
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 30 Nov 2010 10:37:39 -0600
Subject: [antlr-interest] could not even do k=1 for decision 9;
	reason: timed out (>1000ms)
In-Reply-To: <4CF524EC.90108@gmx.de>
References: <4CF524EC.90108@gmx.de>
Message-ID: <02a801cb90ac$e7d82d30$b7888790$@pixelminegames.com>

This message is no longer given in ANTLR 3.3. Are you able to update to it?

If not, you can try adding "-Xconversiontimeout 30000" to the command line,
which extends the allowed analysis period to 30 seconds.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Markus Lottmann
Sent: Tuesday, November 30, 2010 10:23 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] could not even do k=1 for decision 9; reason:
timed out (>1000ms)

Hi,

i try to create a c++ gramar and get the following error:

error(10): internal error: 
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even
do k=1 for decision 9; reason: timed out (>1000ms)

The problem is that the grammer contains a few hundert lines of rules and i
do not know how i should find the rule which corresponds to decision 9. I
get this error not only for decision
9 but multiple times.

Can anyone help me?

Greetings,
ML

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Nov 30 08:48:35 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 08:48:35 -0800
Subject: [antlr-interest] could not even do k=1 for decision 9;
	reason: timed out (>1000ms)
In-Reply-To: <02a801cb90ac$e7d82d30$b7888790$@pixelminegames.com>
References: <4CF524EC.90108@gmx.de>
	<02a801cb90ac$e7d82d30$b7888790$@pixelminegames.com>
Message-ID: <99B4EA3F-BFD6-4330-9E07-B670D5D79907@cs.usfca.edu>

or, just set backtrack=true for that decision with k=1.
Ter
On Nov 30, 2010, at 8:37 AM, Sam Harwell wrote:

> This message is no longer given in ANTLR 3.3. Are you able to update to it?
> 
> If not, you can try adding "-Xconversiontimeout 30000" to the command line,
> which extends the allowed analysis period to 30 seconds.
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Markus Lottmann
> Sent: Tuesday, November 30, 2010 10:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] could not even do k=1 for decision 9; reason:
> timed out (>1000ms)
> 
> Hi,
> 
> i try to create a c++ gramar and get the following error:
> 
> error(10): internal error: 
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even
> do k=1 for decision 9; reason: timed out (>1000ms)
> 
> The problem is that the grammer contains a few hundert lines of rules and i
> do not know how i should find the rule which corresponds to decision 9. I
> get this error not only for decision
> 9 but multiple times.
> 
> Can anyone help me?
> 
> Greetings,
> ML
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From lottvomschlott at gmx.de  Tue Nov 30 09:09:24 2010
From: lottvomschlott at gmx.de (Markus Lottmann)
Date: Tue, 30 Nov 2010 18:09:24 +0100
Subject: [antlr-interest] could not even do k=1 for decision 9;
 reason: timed out (>1000ms)
In-Reply-To: <99B4EA3F-BFD6-4330-9E07-B670D5D79907@cs.usfca.edu>
References: <4CF524EC.90108@gmx.de>
	<02a801cb90ac$e7d82d30$b7888790$@pixelminegames.com>
	<99B4EA3F-BFD6-4330-9E07-B670D5D79907@cs.usfca.edu>
Message-ID: <4CF52FC4.4040704@gmx.de>

I tried -Xconversiontimeout 30000 and the error still occurs.

So far i am using ANTLRWorks 1.4 which uses antlr3.2. Is it possible to 
use ANTLRWorks with antlr3.3?

@Terence: I am using this global options:
         language=Java;
         output=AST;
         ASTLabelType=CommonTree;
         backtrack=true;

and never specified a value for k.

Is there nothing else i can do except to update to antlr 3.3?

Thanks for your help so far.

Greetings,
ML

Am 30.11.2010 17:48, schrieb Terence Parr:
> or, just set backtrack=true for that decision with k=1.
> Ter
> On Nov 30, 2010, at 8:37 AM, Sam Harwell wrote:
>
>> This message is no longer given in ANTLR 3.3. Are you able to update to it?
>>
>> If not, you can try adding "-Xconversiontimeout 30000" to the command line,
>> which extends the allowed analysis period to 30 seconds.
>>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Markus Lottmann
>> Sent: Tuesday, November 30, 2010 10:23 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] could not even do k=1 for decision 9; reason:
>> timed out (>1000ms)
>>
>> Hi,
>>
>> i try to create a c++ gramar and get the following error:
>>
>> error(10): internal error:
>> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even
>> do k=1 for decision 9; reason: timed out (>1000ms)
>>
>> The problem is that the grammer contains a few hundert lines of rules and i
>> do not know how i should find the rule which corresponds to decision 9. I
>> get this error not only for decision
>> 9 but multiple times.
>>
>> Can anyone help me?
>>
>> Greetings,
>> ML
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From maxgbr at hotmail.it  Tue Nov 30 09:58:38 2010
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Tue, 30 Nov 2010 18:58:38 +0100
Subject: [antlr-interest] AntlrWorks Debugging problems
In-Reply-To: <20101130134404.D0965C88@mailweb.gpi.it>
References: <20101130134404.D0965C88@mailweb.gpi.it>
Message-ID: <BLU0-SMTP145CE652AFD9887BD471AAB0250@phx.gbl>

  Solved doing Nothing :D
Thanks anyway

Il 30/11/2010 14:40, Massimiliano Donini ha scritto:
> Hi, I'm not able to debug a grammar copmposed by a lexer and a parser.
> I try to remote debug with VS2008 in the same way i do for a composite
> grammar but i got a IOException and in AntrlWorks i got every time
> Timeout message.
> I don't have running process on AntrlWorks debug port.
> What i was missing??
> attached there is my grammar file, try to debug with any Sql condition.**
>
> Regards Max
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Nov 30 11:20:28 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 11:20:28 -0800
Subject: [antlr-interest] ANTLR v3.3 released!
In-Reply-To: <19700.30304.141455.78255@blake.zopyra.com>
References: <369975EB-2AF8-46A1-B0EC-753C9FDEA6CF@cs.usfca.edu>
	<19700.30304.141455.78255@blake.zopyra.com>
Message-ID: <3BDD351C-FA1A-4ED8-8C54-2AE8BE659C7E@cs.usfca.edu>

hi. updating pom.xml files and will repush, once Jim Idle and I confirm stuff.
T
On Nov 29, 2010, at 7:58 PM, Bill Lear wrote:

> On Monday, November 29, 2010 at 19:18:32 (-0800) Terence Parr writes:
>> ANTLR 3.3 is out! Get it here:
>> 
>> http://antlr.org/download.html
>> 
>> Has new Objective-C and Ruby targets.  See
>> 
>> http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes
>> 
>> I hope to get ANTLRWorks out tomorrow.  That will be 1.4.1 with ANTLR v3.3.
> 
> Rain, meet parade...
> 
> Using maven 2.2.1, I don't seem to be able to build it.  After failing,
> I tried 'mvn -N install', but that didn't clear things up:
> 
> % mvn -Dmaven.test.skip=true
> [Wailing an gnashing of teeth]
> [INFO] Error building POM (may not be this project's POM).
> 
> Project ID: unknown
> 
> Reason: Could not find the model file 'C:\cygwin\home\wlear\devel\antlr-3.3\antlr3-maven-archetype'. for project unknown
> 
> [INFO] ------------------------------------------------------------------------
> [INFO] Trace
> org.apache.maven.reactor.MavenExecutionException: Could not find the model file 'C:\cygwin\home\wlear\devel\antlr-3.3\antlr3-maven-archetype'. for project unknown
> 
> 
> Hopefully I've simply done something wrong, but I did not have this problem
> building 3.2
> 
> 
> Bill


From parrt at cs.usfca.edu  Tue Nov 30 11:21:02 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 11:21:02 -0800
Subject: [antlr-interest] could not even do k=1 for decision 9;
	reason: timed out (>1000ms)
In-Reply-To: <4CF52FC4.4040704@gmx.de>
References: <4CF524EC.90108@gmx.de>
	<02a801cb90ac$e7d82d30$b7888790$@pixelminegames.com>
	<99B4EA3F-BFD6-4330-9E07-B670D5D79907@cs.usfca.edu>
	<4CF52FC4.4040704@gmx.de>
Message-ID: <84ACEA5E-82D9-480D-84BF-CAFCA475232B@cs.usfca.edu>

set k=1 in that decision.
Ter
On Nov 30, 2010, at 9:09 AM, Markus Lottmann wrote:

> I tried -Xconversiontimeout 30000 and the error still occurs.
> 
> So far i am using ANTLRWorks 1.4 which uses antlr3.2. Is it possible to 
> use ANTLRWorks with antlr3.3?
> 
> @Terence: I am using this global options:
>         language=Java;
>         output=AST;
>         ASTLabelType=CommonTree;
>         backtrack=true;
> 
> and never specified a value for k.
> 
> Is there nothing else i can do except to update to antlr 3.3?
> 
> Thanks for your help so far.
> 
> Greetings,
> ML
> 
> Am 30.11.2010 17:48, schrieb Terence Parr:
>> or, just set backtrack=true for that decision with k=1.
>> Ter
>> On Nov 30, 2010, at 8:37 AM, Sam Harwell wrote:
>> 
>>> This message is no longer given in ANTLR 3.3. Are you able to update to it?
>>> 
>>> If not, you can try adding "-Xconversiontimeout 30000" to the command line,
>>> which extends the allowed analysis period to 30 seconds.
>>> 
>>> Sam
>>> 
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org
>>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Markus Lottmann
>>> Sent: Tuesday, November 30, 2010 10:23 AM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] could not even do k=1 for decision 9; reason:
>>> timed out (>1000ms)
>>> 
>>> Hi,
>>> 
>>> i try to create a c++ gramar and get the following error:
>>> 
>>> error(10): internal error:
>>> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1279): could not even
>>> do k=1 for decision 9; reason: timed out (>1000ms)
>>> 
>>> The problem is that the grammer contains a few hundert lines of rules and i
>>> do not know how i should find the rule which corresponds to decision 9. I
>>> get this error not only for decision
>>> 9 but multiple times.
>>> 
>>> Can anyone help me?
>>> 
>>> Greetings,
>>> ML
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Nov 30 11:25:18 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 11:25:18 -0800
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <19700.26846.836510.537929@blake.zopyra.com>
References: <19700.26846.836510.537929@blake.zopyra.com>
Message-ID: <5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>


On Nov 29, 2010, at 7:00 PM, Bill Lear wrote:

> I've followed the sensible advice to create an island grammar to deal
> with parsing an unstructured shell command along with more structured
> input.  Unfortunately, when I follow the examples as given in the
> Antlr examples zip file, I get very close, but then either a NULL
> pointer exception bites, or I can only parse one line of "island"
> input --- I can't figure out how to return control back to the "sea"
> parser and have it read more input.

Can you tell us where it gets null ptr?
T

From rael at zopyra.com  Tue Nov 30 12:59:28 2010
From: rael at zopyra.com (Bill Lear)
Date: Tue, 30 Nov 2010 14:59:28 -0600
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>
References: <19700.26846.836510.537929@blake.zopyra.com>
	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>
Message-ID: <19701.26032.665799.341444@blake.zopyra.com>

On Tuesday, November 30, 2010 at 11:25:18 (-0800) Terence Parr writes:
>
>On Nov 29, 2010, at 7:00 PM, Bill Lear wrote:
>
>> I've followed the sensible advice to create an island grammar to deal
>> with parsing an unstructured shell command along with more structured
>> input.  Unfortunately, when I follow the examples as given in the
>> Antlr examples zip file, I get very close, but then either a NULL
>> pointer exception bites, or I can only parse one line of "island"
>> input --- I can't figure out how to return control back to the "sea"
>> parser and have it read more input.
>
>Can you tell us where it gets null ptr?

Surely.  Here you go:

% cat input | java Command
Got shell.  Going native.
Exception in thread "main" java.lang.NullPointerException
        at org.antlr.runtime.Parser.getMissingSymbol(Parser.java:70)
        at org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecognizer.java:604)
        at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
        at ShellParser.shell(ShellParser.java:48)
        at CommandLexer.mSHELL(CommandLexer.java:57)
        at CommandLexer.mTokens(CommandLexer.java:688)
        at org.antlr.runtime.Lexer.nextToken(Lexer.java:84)
        at org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:95)
        at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
        at org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
        at CommandParser.commands(CommandParser.java:56)
        at Command.main(Command.java:8)

Let me know if I can do anything further to narrow it down for you.


Bill

From parrt at cs.usfca.edu  Tue Nov 30 13:02:29 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 13:02:29 -0800
Subject: [antlr-interest] updated 3.3 files on website
Message-ID: <74213273-35E9-4989-AEA4-96D390B9982E@cs.usfca.edu>

Hi, same functionality but updated pom.xml files and made sure binaries are Java 1.4 compatible.

antlr-3.3.tar.gz
antlr-3.3-complete.jar

Ter

From parrt at cs.usfca.edu  Tue Nov 30 13:07:57 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 13:07:57 -0800
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <19701.26032.665799.341444@blake.zopyra.com>
References: <19700.26846.836510.537929@blake.zopyra.com>
	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>
	<19701.26032.665799.341444@blake.zopyra.com>
Message-ID: <DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>

Wow. input.LT(1) or LT(-1) is returning null.

I'd turn on -trace option of antlr then recompile and retry. that may say more
T
On Nov 30, 2010, at 12:59 PM, Bill Lear wrote:

> On Tuesday, November 30, 2010 at 11:25:18 (-0800) Terence Parr writes:
>> 
>> On Nov 29, 2010, at 7:00 PM, Bill Lear wrote:
>> 
>>> I've followed the sensible advice to create an island grammar to deal
>>> with parsing an unstructured shell command along with more structured
>>> input.  Unfortunately, when I follow the examples as given in the
>>> Antlr examples zip file, I get very close, but then either a NULL
>>> pointer exception bites, or I can only parse one line of "island"
>>> input --- I can't figure out how to return control back to the "sea"
>>> parser and have it read more input.
>> 
>> Can you tell us where it gets null ptr?
> 
> Surely.  Here you go:
> 
> % cat input | java Command
> Got shell.  Going native.
> Exception in thread "main" java.lang.NullPointerException
>        at org.antlr.runtime.Parser.getMissingSymbol(Parser.java:70)
>        at org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecognizer.java:604)
>        at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
>        at ShellParser.shell(ShellParser.java:48)
>        at CommandLexer.mSHELL(CommandLexer.java:57)
>        at CommandLexer.mTokens(CommandLexer.java:688)
>        at org.antlr.runtime.Lexer.nextToken(Lexer.java:84)
>        at org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:95)
>        at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
>        at org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
>        at CommandParser.commands(CommandParser.java:56)
>        at Command.main(Command.java:8)
> 
> Let me know if I can do anything further to narrow it down for you.
> 
> 
> Bill


From jimi at temporal-wave.com  Tue Nov 30 13:09:50 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 30 Nov 2010 13:09:50 -0800
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>
References: <19700.26846.836510.537929@blake.zopyra.com>	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>	<19701.26032.665799.341444@blake.zopyra.com>
	<DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>
Message-ID: <021801cb90d2$ecc9c850$c65d58f0$@temporal-wave.com>

Isn't this when the grammar is trying to use a token that the lexer has not
defined?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, November 30, 2010 1:08 PM
> To: Bill Lear
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Island grammar for reading shell commands
> 
> Wow. input.LT(1) or LT(-1) is returning null.
> 
> I'd turn on -trace option of antlr then recompile and retry. that may
> say more T On Nov 30, 2010, at 12:59 PM, Bill Lear wrote:
> 
> > On Tuesday, November 30, 2010 at 11:25:18 (-0800) Terence Parr
> writes:
> >>
> >> On Nov 29, 2010, at 7:00 PM, Bill Lear wrote:
> >>
> >>> I've followed the sensible advice to create an island grammar to
> >>> deal with parsing an unstructured shell command along with more
> >>> structured input.  Unfortunately, when I follow the examples as
> >>> given in the Antlr examples zip file, I get very close, but then
> >>> either a NULL pointer exception bites, or I can only parse one line
> of "island"
> >>> input --- I can't figure out how to return control back to the
> "sea"
> >>> parser and have it read more input.
> >>
> >> Can you tell us where it gets null ptr?
> >
> > Surely.  Here you go:
> >
> > % cat input | java Command
> > Got shell.  Going native.
> > Exception in thread "main" java.lang.NullPointerException
> >        at org.antlr.runtime.Parser.getMissingSymbol(Parser.java:70)
> >        at
> org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecogni
> zer.java:604)
> >        at
> org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
> >        at ShellParser.shell(ShellParser.java:48)
> >        at CommandLexer.mSHELL(CommandLexer.java:57)
> >        at CommandLexer.mTokens(CommandLexer.java:688)
> >        at org.antlr.runtime.Lexer.nextToken(Lexer.java:84)
> >        at
> org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:9
> 5)
> >        at
> org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
> >        at
> org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)
> >        at CommandParser.commands(CommandParser.java:56)
> >        at Command.main(Command.java:8)
> >
> > Let me know if I can do anything further to narrow it down for you.
> >
> >
> > Bill
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From goldberg at cbio.mskcc.org  Tue Nov 30 13:15:07 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Tue, 30 Nov 2010 16:15:07 -0500
Subject: [antlr-interest] Error handling in lexer
Message-ID: <4CF5695B.5030301@cbio.mskcc.org>

Hi All

I've another question related to the same project. (I won't be bothering 
you much longer, it's due by the end of the week. :-)  I've got to move 
really quickly now.)

Typically, errors in ANTLR parsers are sent to stderr, via this 
emitErrorMessage:

00189  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#85afd3931a36f93c5e1fee84349b5673>          public  void  displayRecognitionError  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#85afd3931a36f93c5e1fee84349b5673>(String[] tokenNames,
00190RecognitionException  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_recognition_exception.html>  e)
00191         {
00192                 String hdr =getErrorHeader  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#08b70239348297407c4322a00a46c77c>(e);
00193                 String msg =getErrorMessage  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#f5adeec09d6d06b09bf18e2c14620093>(e, tokenNames);
00194emitErrorMessage  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#20c71583ddc8a129bf81ef64a1fb4857>(hdr+""+msg);
00195         }


But my lang will be embedded in a Web site, so rather than outputting 
errors to stderr I want to report them by throwing exceptions, which are 
easy to handle.
In my AST-producing grammar, I report syntactic errors by modifying 
reportError() to throw an IllegalArgumentException:
>        public void reportError(RecognitionException e) {
>            // if we've already reported an error and have not matched 
> a token
>            // yet successfully, don't report any errors.
>            if ( state.errorRecovery ) {
>                    //System.err.print("[SPURIOUS] ");
>                    return;
>            }
>            state.syntaxErrors++; // don't count spurious
>            state.errorRecovery = true;
>            throw new IllegalArgumentException( 
> getRecognitionError(this.getTokenNames(), e) );
>        }
>
getRecognitionError returns a string similar to the string that would 
normally be printed by displayRecognitionError.

In my tree grammar, a production can simply throw IllegalArgumentException.

But how -- short of modifying *Lexer.java -- can I direct the Lexer to 
throw an Exception which my driver can catch?

Thanks
Deadline looming!
A

-- 
Senior Research Scientist
Computational Biology
Memorial Sloan-Kettering Cancer Center


From parrt at cs.usfca.edu  Tue Nov 30 14:15:42 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 14:15:42 -0800
Subject: [antlr-interest] Error handling in lexer
In-Reply-To: <4CF5695B.5030301@cbio.mskcc.org>
References: <4CF5695B.5030301@cbio.mskcc.org>
Message-ID: <1A76B68D-8E6D-4507-9EB4-6D0D0CA0FACA@cs.usfca.edu>

Perhaps send a RuntimeException that is not caught by other stuff?
Ter
On Nov 30, 2010, at 1:15 PM, Arthur Goldberg wrote:

> Hi All
> 
> I've another question related to the same project. (I won't be bothering 
> you much longer, it's due by the end of the week. :-)  I've got to move 
> really quickly now.)
> 
> Typically, errors in ANTLR parsers are sent to stderr, via this 
> emitErrorMessage:
> 
> 00189  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#85afd3931a36f93c5e1fee84349b5673>          public  void  displayRecognitionError  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#85afd3931a36f93c5e1fee84349b5673>(String[] tokenNames,
> 00190RecognitionException  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_recognition_exception.html>  e)
> 00191         {
> 00192                 String hdr =getErrorHeader  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#08b70239348297407c4322a00a46c77c>(e);
> 00193                 String msg =getErrorMessage  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#f5adeec09d6d06b09bf18e2c14620093>(e, tokenNames);
> 00194emitErrorMessage  <http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#20c71583ddc8a129bf81ef64a1fb4857>(hdr+""+msg);
> 00195         }
> 
> 
> But my lang will be embedded in a Web site, so rather than outputting 
> errors to stderr I want to report them by throwing exceptions, which are 
> easy to handle.
> In my AST-producing grammar, I report syntactic errors by modifying 
> reportError() to throw an IllegalArgumentException:
>>       public void reportError(RecognitionException e) {
>>           // if we've already reported an error and have not matched 
>> a token
>>           // yet successfully, don't report any errors.
>>           if ( state.errorRecovery ) {
>>                   //System.err.print("[SPURIOUS] ");
>>                   return;
>>           }
>>           state.syntaxErrors++; // don't count spurious
>>           state.errorRecovery = true;
>>           throw new IllegalArgumentException( 
>> getRecognitionError(this.getTokenNames(), e) );
>>       }
>> 
> getRecognitionError returns a string similar to the string that would 
> normally be printed by displayRecognitionError.
> 
> In my tree grammar, a production can simply throw IllegalArgumentException.
> 
> But how -- short of modifying *Lexer.java -- can I direct the Lexer to 
> throw an Exception which my driver can catch?
> 
> Thanks
> Deadline looming!
> A
> 
> -- 
> Senior Research Scientist
> Computational Biology
> Memorial Sloan-Kettering Cancer Center
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From julio at rochsquadron.net  Tue Nov 30 14:22:10 2010
From: julio at rochsquadron.net (=?UTF-8?Q?Julio_C=C3=A9sar_Rocha?=)
Date: Tue, 30 Nov 2010 16:22:10 -0600
Subject: [antlr-interest] ANTLR 3.3 Maven artifacts
Message-ID: <AANLkTikBmFyQk9BvXw=24Xj9dm8ZEg5ApnaqZ-g703PL@mail.gmail.com>

This release is great news! It does have lots of improvements.
However, it would be great to have the Maven artifacts (plugins, libraries,
archetypes) updated. Who is in charge of this? I would be glad to help.

-- 
Sincerely:
    Julio C?sar Rocha

From parrt at cs.usfca.edu  Tue Nov 30 14:26:11 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 14:26:11 -0800
Subject: [antlr-interest] ANTLR 3.3 Maven artifacts
In-Reply-To: <AANLkTikBmFyQk9BvXw=24Xj9dm8ZEg5ApnaqZ-g703PL@mail.gmail.com>
References: <AANLkTikBmFyQk9BvXw=24Xj9dm8ZEg5ApnaqZ-g703PL@mail.gmail.com>
Message-ID: <64DFFE52-FED0-465C-B06B-306A11731BC9@cs.usfca.edu>

i've done the deploy; waiting for the maven server to propagate them I guess.
Ter
On Nov 30, 2010, at 2:22 PM, Julio C?sar Rocha wrote:

> This release is great news! It does have lots of improvements.
> However, it would be great to have the Maven artifacts (plugins, libraries,
> archetypes) updated. Who is in charge of this? I would be glad to help.
> 
> -- 
> Sincerely:
>    Julio C?sar Rocha
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rael at zopyra.com  Tue Nov 30 14:52:11 2010
From: rael at zopyra.com (Bill Lear)
Date: Tue, 30 Nov 2010 16:52:11 -0600
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>
References: <19700.26846.836510.537929@blake.zopyra.com>
	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>
	<19701.26032.665799.341444@blake.zopyra.com>
	<DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>
Message-ID: <19701.32795.390987.604758@blake.zopyra.com>

On Tuesday, November 30, 2010 at 13:07:57 (-0800) Terence Parr writes:
>Wow. input.LT(1) or LT(-1) is returning null.
>
>I'd turn on -trace option of antlr then recompile and retry. that may say more

Here's the output with -trace turned on:

enter SHELL s line=1:0
Got shell.  Going native.
enter REST_OF_LINE   line=1:5
exit REST_OF_LINE c line=2:0
enter shell [@-1,0:0='<no text>',<-1>,0:-1]
exit shell [@-1,0:0='<no text>',<-1>,0:-1]
exit SHELL c line=2:0
Exception in thread "main" java.lang.NullPointerException
        at org.antlr.runtime.Parser.getMissingSymbol(Parser.java:70)
        at org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecognizer.java:604)
        at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
        at ShellParser.shell(ShellParser.java:49)
        at CommandLexer.mSHELL(CommandLexer.java:58)
        at CommandLexer.mTokens(CommandLexer.java:712)
        at org.antlr.runtime.Lexer.nextToken(Lexer.java:84)
        at org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:95)
        at org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
        at org.antlr.runtime.Parser.traceIn(Parser.java:92)
        at CommandParser.commands(CommandParser.java:47)
        at Command.main(Command.java:8)

I posted the grammars previously, but just case you missed them, I posted
them (Shell.g, Command.g) below.


Bill

// Grammar for 'shell ...' command
grammar Shell;

@parser::members {
    private String command;
    public String getCommand() {
        return command;
    }
}

shell: REST_OF_LINE {
        command = $REST_OF_LINE.text.trim();
    }
    ;

REST_OF_LINE: (options {greedy=false;} : . )* '\r'? '\n' {
        emit(Token.EOF_TOKEN);
    }
    ;

// Grammar for other, regular commands
grammar Command;

@lexer::members {
    public static final int SHELL_CHANNEL = 1;
}

commands : command+ ;

command
scope {
    int timeout;
    List<String> notifyList;
}
@init {
    $command::timeout = -1;
    $command::notifyList = new ArrayList<String>();
}
    : cleanup | cleanlog {
    }
    | SHELL
    | NEWLINE
    ;

cleanup
    : CLEANUP command_options? {
        System.out.println("cleanup::timeout=" + $command::timeout
                           + " email=" + $command::notifyList);
    }
    ;

cleanlog
    : CLEANLOG command_options? {
        System.out.println("cleanlog::timeout=" + $command::timeout
                           + " email=" + $command::notifyList);
    }
    ;

SHELL
    : 'shell' {
        System.out.println("Got shell.  Going native.");

        ShellLexer l = new ShellLexer(input);

        CommonTokenStream tokens = new CommonTokenStream(l);

        ShellParser parser = new ShellParser(tokens);
        parser.shell();

        String command = parser.getCommand();

        System.out.println("Got command from ShellParser:[" + command + "]");
        $channel = SHELL_CHANNEL;
    }
    ;

command_options
    : timeoutOption
    | notifyOption
    | timeoutOption notifyOption
    | notifyOption timeoutOption
    ;

timeoutOption
    : TIMEOUT INT { $command::timeout = Integer.parseInt($INT.text); }
    ;

notifyOption
    : NOTIFY EMAIL {
        $command::notifyList.add($EMAIL.text);
    }
    | NOTIFY QUOTED_STRING {
        String[] l = $QUOTED_STRING.text.split("\\s+");

        for (int i = 0; i < l.length; i++) {
            $command::notifyList.add(l[i]);
        }
    }
    ;

CLEANUP: 'cleanup' ;
CLEANLOG: 'cleanlog' ;
TIMEOUT: '-timeout' ;
NOTIFY: '-notify' ;
INT: '0'..'9'+ ;

QUOTED_STRING:
    '"' ( ESCAPE_SEQUENCE | ~('\\'|'"') )* '"' {
        setText(getText().substring(1, getText().length() - 1));
    }
    | '\'' ( ESCAPE_SEQUENCE | ~('\\'|'\'') )* '\'' {
        setText(getText().substring(1, getText().length() - 1));
    }
    ;

WS: (' ' | '\t')+ { skip(); } ;

NEWLINE: '\r'? '\n' { } ;

EMAIL: ~('\n' | '\r' | ' ' | '"')+ {
    }
    ;

COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' { skip(); }
    | '/*' ( options {greedy=false;} : . )* '*/' { skip(); }
    ;

fragment
ESCAPE_SEQUENCE : '\\' ('\"'|'\''|'\\') ;

From goldberg at cbio.mskcc.org  Tue Nov 30 14:54:56 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Tue, 30 Nov 2010 17:54:56 -0500
Subject: [antlr-interest] Error handling in lexer
In-Reply-To: <1A76B68D-8E6D-4507-9EB4-6D0D0CA0FACA@cs.usfca.edu>
References: <4CF5695B.5030301@cbio.mskcc.org>
	<1A76B68D-8E6D-4507-9EB4-6D0D0CA0FACA@cs.usfca.edu>
Message-ID: <4CF580C0.80805@cbio.mskcc.org>

Sure, but how dows one tell ANTLR to tell the lexer to throw a certain 
RuntimeException? the lexer doesn't use
>         catch (RecognitionException re) {
>             reportError(re);
>             recover(input,re);
>         }
Suppose I want the lexer to report every error by doing:

throw new IllegalArgumentException( "Syntax error at char <c> of line 
<l>: did not expect '<x>'." );

where c, l and x are appropriately instantiated.

thanks
A

On 11/30/10 5:15 PM, Terence Parr wrote:
> Perhaps send a RuntimeException that is not caught by other stuff?
> Ter
> On Nov 30, 2010, at 1:15 PM, Arthur Goldberg wrote:
>
>> Hi All
>>
>> I've another question related to the same project. (I won't be bothering
>> you much longer, it's due by the end of the week. :-)  I've got to move
>> really quickly now.)
>>
>> Typically, errors in ANTLR parsers are sent to stderr, via this
>> emitErrorMessage:
>>
>> 00189<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#85afd3931a36f93c5e1fee84349b5673>           public  void  displayRecognitionError<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#85afd3931a36f93c5e1fee84349b5673>(String[] tokenNames,
>> 00190RecognitionException<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_recognition_exception.html>   e)
>> 00191         {
>> 00192                 String hdr =getErrorHeader<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#08b70239348297407c4322a00a46c77c>(e);
>> 00193                 String msg =getErrorMessage<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#f5adeec09d6d06b09bf18e2c14620093>(e, tokenNames);
>> 00194emitErrorMessage<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_base_recognizer.html#20c71583ddc8a129bf81ef64a1fb4857>(hdr+""+msg);
>> 00195         }
>>
>>
>> But my lang will be embedded in a Web site, so rather than outputting
>> errors to stderr I want to report them by throwing exceptions, which are
>> easy to handle.
>> In my AST-producing grammar, I report syntactic errors by modifying
>> reportError() to throw an IllegalArgumentException:
>>>        public void reportError(RecognitionException e) {
>>>            // if we've already reported an error and have not matched
>>> a token
>>>            // yet successfully, don't report any errors.
>>>            if ( state.errorRecovery ) {
>>>                    //System.err.print("[SPURIOUS] ");
>>>                    return;
>>>            }
>>>            state.syntaxErrors++; // don't count spurious
>>>            state.errorRecovery = true;
>>>            throw new IllegalArgumentException(
>>> getRecognitionError(this.getTokenNames(), e) );
>>>        }
>>>
>> getRecognitionError returns a string similar to the string that would
>> normally be printed by displayRecognitionError.
>>
>> In my tree grammar, a production can simply throw IllegalArgumentException.
>>
>> But how -- short of modifying *Lexer.java -- can I direct the Lexer to
>> throw an Exception which my driver can catch?
>>
>> Thanks
>> Deadline looming!
>> A
>>
>> -- 
>> Senior Research Scientist
>> Computational Biology
>> Memorial Sloan-Kettering Cancer Center
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Senior Research Scientist
Computational Biology
Memorial Sloan-Kettering Cancer Center



From jimi at temporal-wave.com  Tue Nov 30 15:46:27 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 30 Nov 2010 15:46:27 -0800
Subject: [antlr-interest] ANTLR 3.3 Maven artifacts
In-Reply-To: <AANLkTikBmFyQk9BvXw=24Xj9dm8ZEg5ApnaqZ-g703PL@mail.gmail.com>
References: <AANLkTikBmFyQk9BvXw=24Xj9dm8ZEg5ApnaqZ-g703PL@mail.gmail.com>
Message-ID: <023901cb90e8$ce5f0fe0$6b1d2fa0$@temporal-wave.com>

They are done, but maven central has yet to pick them up. I will also add javadoc and source to the depot too when I get a few hours.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Julio C?sar Rocha
> Sent: Tuesday, November 30, 2010 2:22 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR 3.3 Maven artifacts
> 
> This release is great news! It does have lots of improvements.
> However, it would be great to have the Maven artifacts (plugins,
> libraries,
> archetypes) updated. Who is in charge of this? I would be glad to help.
> 
> --
> Sincerely:
>     Julio C?sar Rocha
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Tue Nov 30 15:49:39 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 30 Nov 2010 15:49:39 -0800
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <19701.32795.390987.604758@blake.zopyra.com>
References: <19700.26846.836510.537929@blake.zopyra.com>	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>	<19701.26032.665799.341444@blake.zopyra.com>	<DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>
	<19701.32795.390987.604758@blake.zopyra.com>
Message-ID: <023b01cb90e9$409557e0$c1c007a0$@temporal-wave.com>

REST_OF_LINE allows an empty token which will immediately match nothing and
continue to do so forever. You want +  not *. I think you might be doing
this wrong to be honest. I would probably not use ANTLR for this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bill Lear
> Sent: Tuesday, November 30, 2010 2:52 PM
> To: Terence Parr
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Island grammar for reading shell commands
> 
> On Tuesday, November 30, 2010 at 13:07:57 (-0800) Terence Parr writes:
> >Wow. input.LT(1) or LT(-1) is returning null.
> >
> >I'd turn on -trace option of antlr then recompile and retry. that may
> >say more
> 
> Here's the output with -trace turned on:
> 
> enter SHELL s line=1:0
> Got shell.  Going native.
> enter REST_OF_LINE   line=1:5
> exit REST_OF_LINE c line=2:0
> enter shell [@-1,0:0='<no text>',<-1>,0:-1] exit shell [@-1,0:0='<no
> text>',<-1>,0:-1] exit SHELL c line=2:0 Exception in thread "main"
> java.lang.NullPointerException
>         at org.antlr.runtime.Parser.getMissingSymbol(Parser.java:70)
>         at
> org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecogni
> zer.java:604)
>         at
> org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
>         at ShellParser.shell(ShellParser.java:49)
>         at CommandLexer.mSHELL(CommandLexer.java:58)
>         at CommandLexer.mTokens(CommandLexer.java:712)
>         at org.antlr.runtime.Lexer.nextToken(Lexer.java:84)
>         at
> org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:9
> 5)
>         at
> org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
>         at org.antlr.runtime.Parser.traceIn(Parser.java:92)
>         at CommandParser.commands(CommandParser.java:47)
>         at Command.main(Command.java:8)
> 
> I posted the grammars previously, but just case you missed them, I
> posted them (Shell.g, Command.g) below.
> 
> 
> Bill
> 
> // Grammar for 'shell ...' command
> grammar Shell;
> 
> @parser::members {
>     private String command;
>     public String getCommand() {
>         return command;
>     }
> }
> 
> shell: REST_OF_LINE {
>         command = $REST_OF_LINE.text.trim();
>     }
>     ;
> 
> REST_OF_LINE: (options {greedy=false;} : . )* '\r'? '\n' {
>         emit(Token.EOF_TOKEN);
>     }
>     ;
> 
> // Grammar for other, regular commands
> grammar Command;
> 
> @lexer::members {
>     public static final int SHELL_CHANNEL = 1; }
> 
> commands : command+ ;
> 
> command
> scope {
>     int timeout;
>     List<String> notifyList;
> }
> @init {
>     $command::timeout = -1;
>     $command::notifyList = new ArrayList<String>(); }
>     : cleanup | cleanlog {
>     }
>     | SHELL
>     | NEWLINE
>     ;
> 
> cleanup
>     : CLEANUP command_options? {
>         System.out.println("cleanup::timeout=" + $command::timeout
>                            + " email=" + $command::notifyList);
>     }
>     ;
> 
> cleanlog
>     : CLEANLOG command_options? {
>         System.out.println("cleanlog::timeout=" + $command::timeout
>                            + " email=" + $command::notifyList);
>     }
>     ;
> 
> SHELL
>     : 'shell' {
>         System.out.println("Got shell.  Going native.");
> 
>         ShellLexer l = new ShellLexer(input);
> 
>         CommonTokenStream tokens = new CommonTokenStream(l);
> 
>         ShellParser parser = new ShellParser(tokens);
>         parser.shell();
> 
>         String command = parser.getCommand();
> 
>         System.out.println("Got command from ShellParser:[" + command +
> "]");
>         $channel = SHELL_CHANNEL;
>     }
>     ;
> 
> command_options
>     : timeoutOption
>     | notifyOption
>     | timeoutOption notifyOption
>     | notifyOption timeoutOption
>     ;
> 
> timeoutOption
>     : TIMEOUT INT { $command::timeout = Integer.parseInt($INT.text); }
>     ;
> 
> notifyOption
>     : NOTIFY EMAIL {
>         $command::notifyList.add($EMAIL.text);
>     }
>     | NOTIFY QUOTED_STRING {
>         String[] l = $QUOTED_STRING.text.split("\\s+");
> 
>         for (int i = 0; i < l.length; i++) {
>             $command::notifyList.add(l[i]);
>         }
>     }
>     ;
> 
> CLEANUP: 'cleanup' ;
> CLEANLOG: 'cleanlog' ;
> TIMEOUT: '-timeout' ;
> NOTIFY: '-notify' ;
> INT: '0'..'9'+ ;
> 
> QUOTED_STRING:
>     '"' ( ESCAPE_SEQUENCE | ~('\\'|'"') )* '"' {
>         setText(getText().substring(1, getText().length() - 1));
>     }
>     | '\'' ( ESCAPE_SEQUENCE | ~('\\'|'\'') )* '\'' {
>         setText(getText().substring(1, getText().length() - 1));
>     }
>     ;
> 
> WS: (' ' | '\t')+ { skip(); } ;
> 
> NEWLINE: '\r'? '\n' { } ;
> 
> EMAIL: ~('\n' | '\r' | ' ' | '"')+ {
>     }
>     ;
> 
> COMMENT
>     : '//' ~('\n'|'\r')* '\r'? '\n' { skip(); }
>     | '/*' ( options {greedy=false;} : . )* '*/' { skip(); }
>     ;
> 
> fragment
> ESCAPE_SEQUENCE : '\\' ('\"'|'\''|'\\') ;
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From isabelle.perseil at enst.fr  Tue Nov 30 16:56:23 2010
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Wed, 1 Dec 2010 01:56:23 +0100
Subject: [antlr-interest]   EXTENDED DEADLINE :   ICECCS 2011
Message-ID: <065e91842539c66d5fdac6b231d7b40b.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                     CALL FOR PAPERS:  ICECCS 2011
                      http://www.iceccs.org/2011

             16th Annual IEEE International Conference on the
             Engineering of Complex Computer Systems (ICECCS)
sponsored by the IEEE Technical Committee on Complexity in Computing (TCCX)

                         April 27th-29th, 2011
                          Las Vegas, NV, USA

************************************************************************

          Extended Submission deadline: December 15th, 2010
          --------------------------------------------------

The success of key human activities ranging from research and business to
everyday services relies on the use of ever more sophisticated,
feature-rich and complex computer systems. These complex computer systems
are regularly required to accomplish more, faster and on a broader scale,
to adapt dynamically to changing workloads, scenarios and objectives, and
to achieve guaranteed levels of performance and dependability. Satisfying
such demanding requirements in the presence of the variability,
heterogeneity and non-linear behaviour that characterise complex computer
systems poses numerous challenges to both their developers and their
users.

The aim of the conference is to bring together researchers, practitioners
and leading experts from academia and industry, to advance the state of
the art in the specification, development, validation and verification,
and management of complex computer systems.

Scope and topics:
================

Authors are invited to submit papers describing original, unpublished
research results, case studies and tools. Additionally, submissions of
poster papers are sought for two separate poster sessions: an "ongoing
research" poster session, and a "PhD research" poster session. Topics of
interest include but are not limited to the following aspects of complex
computer systems:

- Requirement specification and analysis
- Verification and validation
- Model-driven development
- Reverse engineering and refactoring
- Design by contract
- Agile methods
- Safety-critical & fault-tolerant architectures
- Adaptive, self-managing and multi-agent systems
- Real-time, hybrid and embedded systems
- Systems of systems
- Tools and tool integration
- Industrial case studies

Different kinds of contributions are sought, including novel research,
lessons learned, experience reports, and discussions of practical problems
faced by industry and user domains. The ultimate goal is to build a rich
and comprehensive conference program that can fit the interests and needs
of different classes of attendees: professionals, researchers, managers,
and students. A program goal is to organize several sessions that include
both academic and industrial papers on a given topic, and culminate with
panels to discuss relationships between industrial and academic research.

Full papers are divided into two categories: Technical Papers and
Experience Reports. The papers submitted to both categories will be
reviewed by program committee members, and papers accepted in either
category will be published in the conference proceedings. Technical papers
should describe original research, and experience reports should present
practical projects carried out in industry, and reflect on the lessons
learnt from them.

Poster paper submissions should specify in their abstract whether they
describe ongoing or PhD research. Both types of poster papers will be
reviewed by program committee members, and accepted posters will be
published in the conference proceedin


Submission of Papers:
====================

Submitted manuscripts should be in English and formatted in the style of
the IEEE Computer Society Proceedings Format. Papers should not exceed 10
pages for full papers and 2 pages for poster papers, including figures,
references, and appendices. All submissions should be in PDF format.
Submissions not adhering to the specified format and length may be
rejected immediately, without review.

See the submission guidelines on the conference web site.

Important Dates:
================

Submission of titles and abstracts            ASAP
Submission of all papers                      15 December, 2010
Notification of acceptance                    10 January,  2011
Camera-ready material for publication         31 January,  2011
Registration deadline for authors             10 February, 2011
Early registration deadline for non-authors   22 February, 2011


General Chair:
==============

Roy Sterritt, University of Ulster, Northern Ireland

Program Chairs:
===============

Karin Breitman, Pontificia Universidade Catolica do Rio de Janeiro, Brazil
Isabelle Perseil, Inserm, France

Program Committee:
==================
Mithun Acharya, ABB Corporate Research, United States
Marc Aiguier, Ecole Centrale Paris, France
Yamine AitAmeur, LISI/ENSMA, France
Luis Almeida, Fac. de Eng. da Universidade do Porto, Portugal
Keijiro Araki, Kyushu University, Japan
Luciano Baresi, DEI - Politecnico di Milano, Italy
Yolande Berbers, Katholieke Universiteit Leuven, Belgium
Gilles Bernot, University of Nice Sophia Antipolis, France
J?rgen B?rstler, Blekinge Institute of Technology, Sweden
Jonathan P. Bowen, London South Bank University, United Kingdom
Karin Breitman, PUC-Rio, Brazil
Phil Brooke, University of Teesside, United Kingdom
Jean-Michel Bruel, IRIT, France
Michael Butler, University of Southampton, United Kingdom
Jordi Cabot, INRIA-?cole des Mines de Nantes, France
Radu Calinescu, Aston University, United Kingdom
Antonio Cerone, International Institute for Software Technology United
Nations
University, Macau SAR China
Corina Cirstea, University of Southampton, United Kingdom
Patrick Cousot, New York University and ?cole normale sup?rieure, France
Jim Davies, University of Oxford, United Kingdom
Juan deLara, Universidad Aut?noma de Madrid, Spain
Mieso Denko, UoG, Canada
Felicita Di Giandomenico, ISTI-CNR, Italy
Simon Dobson, University of St Andrews, United Kingdom
Gilles Dowek, Laboratoire d'Informatique(LIX), ?cole Polytechnique and
INRIA, France
Kerstin Eder, University of Bristol, United Kingdom
Huascar Espinoza, ESI Tecnalia, Spain
Fran?ois Fages, INRIA, France
Hector Figueiredo, BAE Systems, United Kingdom
Franck Fleurey, SINTEF, Norway
Robert France, Colorado State University, United States
Leo Freitas, University of York, UK
Carlo Alberto Furia, ETH Zurich, Switzerland
Jean-Louis Giavitto, CNRS and University of Evry, France
Mark Grechanik, Accenture Labs, United States
Lindsay Groves, Victoria University of Wellington, New Zealand
Esther Guerra, Universidad Aut?noma de Madrid, Spain
Ga?tan Hains, Univeristy Paris Est, France
Shinji Kikuchi, Fujitsu Laboratories, Japan
Joseph Kiniry, IT University of Copenhagen, Denmark
Fabrice Kordon, Univ. Paris 6, France
Daniel Krob, Laboratoire d'Informatique(LIX), ?cole Polytechnique and
CNRS, France
Ralf Laemmel, Universit?t Koblenz-Landau, Germany
Phillip Laplante, Penn State University, United States
Kung-Kiu Lau, The University of Manchester, United Kingdom
Zhiming Liu, International Institute for Software Technology United
Nations University,Macau SAR China
Gerald Luettgen, University of Bamberg, Germany
Tom Maibaum, McMaster University, Canada
Tiziana Margaria, Potsdam University, Germany
Julie McCann, Imperial College, United Kingdom
Paul Mckee, BT Innovate and Design, United Kingdom
Raffaela Mirandola, Politecnico di Milano, Italy
Andrea Omicini, Universit? di Bologna, Italy
Richard Paige, University of York, United Kingdom
Laurent Pautet, Telecom ParisTech, France
Isabelle Perseil, Inserm, France
Robert Pettit, The Aerospace Corporation, United States
Ivan Porres, ?bo Akademi University, Finland
Awais Rashid, Lancaster University, United Kingdom
Bernhard Rumpe, RWTH Aachen University, Germany
Ricardo Sanz, Universidad Politecnica de Madrid, Spain
Douglas Schmidt, Vanderbilt University, United States
Cristina Seceleanu, M?lardalen University, Sweden
Janet Smart, University of Oxford, United Kingdom
Oleg Sokolsky, University of Pennsylvania, United States
Ian Sommerville, St Andrews University, United Kingdom
J?rn Guy S??, ITEE, The University of Queensland, Australia
Volker Stolz, United Nations University (UNU-IIST), Macau SAR China Jing
Sun, The University of Auckland, New Zealand
Clemens Szyperski, Microsoft Research, United States
Kenji Taguchi, National Institute of Informatics, Japan
Dalila Tamzalit, University of Nantes, France
Bedir Tekinerdogan, Bilkent University, Turkey
Suresh Thummalapenta, NC State University, United States
Antonio Vallecillo, University of Malaga, Spain
Tullio Vardanega, University of Padua, Italy
Emil Vassev, Lero, Ireland
Huibiao Zhu, East China Normal University, China
Steffen Zschaler, King's College London, United Kingdom



From isabelle.perseil at enst.fr  Tue Nov 30 16:57:08 2010
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Wed, 1 Dec 2010 01:57:08 +0100
Subject: [antlr-interest]   EXTENDED DEADLINE :   UML&AADL'2011
Message-ID: <c8edd3b65832b2ef3ab6d7d53337da82.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                     CALL FOR PAPERS:  UML&AADL?2011
           http://www.artist-embedded.org/artist/UML-AADL-2011.html

                Workshop held in conjunction with ICECCS 2011
                The sixteenth IEEE International Conference on
                    Engineering of Complex Computer Systems
                         http://www.iceccs.org/2011/
                               April 27th, 2011
                                Las Vegas, USA

************************************************************************

          Extended Submission deadline: December 15th, 2010
          --------------------------------------------------



Topics
======
New real-time systems have increasingly complex architectures because of
the intricacy of the multiple interdependent features they have to manage.
They must meet new requirements of reusability, interoperability,
flexibility and portability. These new dimensions favor the use of an
architecture description language that offers a global vision of the
system, and which is particularly suitable for handling real-time
characteristics.

Due to the even more increased complexity of distributed, real-time and
embedded systems (DRE), the need for a model-driven approach is more
obvious in this domain than in monolithic RT systems. The purpose of this
workshop is to provide an opportunity to gather researchers and industrial
practitioners to survey existing efforts related to behavior modeling and
model-based analysis of DRE systems.

This workshop seeks contributions from researchers and practitioners
interested in all aspects of the representation, analysis, and
implementation of DRE system behavior and/or architecture models. To this
end, we solicit papers (no more than 6 pages long) related to, but not
limited to, the following principal topics:

- Modeling languages integration (MARTE+SysML+AADL)
- Intensive use of AADL annexes (as ARINC 653, Programming Annex, Behavior
  Annex, Data Modeling Annexes, Error Modeling Annex)
- Automated System Engineering and System Composition
- Model-based methodologies
- Multi-domain specific modeling languages
- Model-based engineering Process with AADL
- Architectural analysis domain methods
- Real-time Software/System development issues
- Integration of different formalisms (e.g., Simulink/StateFlow, StateMate
  and Scade-drive)
- Integration of multiple domains of architectural analysis
- Model transformation and generative approaches
- Model Checking of architecture specifications
- ADLs behavioral models simulation, Scheduling analysis and Worst-case
  execution time prediction
- Assuring implementation correctness to architectural specification and
  analysis
- Tool chains facilitating architecture centric development

Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper via
easychair at:
http://www.easychair.org/conferences/?conf=umlaadl2011

Papers should not exceed 6 pages. Submitted manuscripts should be in
English and formatted in the style of the IEEE Computer Society
Proceedings Format.
(ftp://pubftp.computer.org/press/outgoing/proceedings/instruct.doc)
Preferably, submissions should be in PDF format.

Slides will be made available through the workshop website.

All selected papers will be published in the IEEE Computer Society Press
Proceedings.

IMPORTANT DATES
===============
Submission deadline:             December 15th, 2010
All Notification of acceptance:  January, 10th, 2011
Final version due:               January  31th, 2011
Workshop date:                   April 27th, 2011


Organizational sponsors
=======================
ARTIST NoE
OMG

Organizers and Program Steering committee
=========================================
Marc Aiguier (Ecole Centrale Paris, MAS, France)
Jean-Michel Bruel (IRIT, France)
Robert De Simone (INRIA, France)
S?bastien G?rard (CEA-LIST, France)
Isabelle Perseil (INSERM, France)

Program Chairs
==============
Robert De Simone (INRIA, France)
Isabelle Perseil (INSERM, France)

Publicity Chair
===============
Sun Meng (CWI, The Netherlands)

IEEE CS TCCX Coordinator
========================
Mike Hinchey (Lero, Ireland)

Programme Committee
===================
Marc Aiguier (?cole Centrale Paris, MAS, France)
Yamine Ait Ameur (LISI / ENSMA, France)
Keijiro Araki (Kyushu University, Japan)
Sue Black (University of Westminster, UK)
Karin Breitman (Universidade Cat?lica do Rio de Janeiro, Brazil)
Radu Calinescu (University of Oxford, UK)
Daniela Cancila (CEA LIST, France - Sherpa Engineering, France)
Julien Delange (ESA, Netherlands)
Juan Antonio de la Puente (Universidad Polit?cnica de Madrid, Spain) Bruce
Douglass (IBM, USA)
Vincent Englebert (University of Namur, Belgium)
Huascar Espinoza (TECNALIA , Spain)
Jean-Marie Farines (UFSC Florian?polis, Brazil)
Sandra C. P. Ferraz Fabbri (Federal University of S?o Carlos, Brazil)
Mamoun Filali (IRIT, France)
Anthony Finkelstein (University College London, UK)
Robert France (Colorado State University, USA)
Emmanuel Gaudin (PragmaDev, France)
S?bastien G?rard (CEA-LIST, France)
Itana Maria de Souza Gimenes (UEM, Brazil)
Mark Grechanik (University of Illinois, USA)
J?rgen Hansson (Link?ping University, Sweden)
Jozef Hooman (Embedded Systems Institute, The Netherlands)
J?r?me Hugues (ISAE, France)
Daniel Krob ( CNRS. Ecole Polytechnique, France)
Johan Lilius (?bo Akademi University, Finland)
Ricardo J. Machado (University of Minho, Portugal)
Julio Medina (University of Cantabria, Spain)
Sun Meng (CWI, The Netherlands)
Dominique Mery (LORIA, France)
Thierry Millan (IRIT, France)
Henry Muccini (University of L?Aquila, Italy)
Ileana Ober (IRIT - University of Toulouse, France)
Richard Paige (University of York, UK)
Laurent Pautet (Telecom ParisTech, France)
Robert Pettit (George Mason University, USA)
Alfonso Pierantonio (Universit? degli Studi dell?Aquila, Italy)
Alek Radjenovic (University of York, United Kingdom)
Marc Reynolds (University of Western Australia, Australia)
Jos? Ra?l Romero Salguero (Universidad de C?rdoba, Spain)
David R?thlisberger (University of Bern, Switzerland)
Bernhard Rumpe (Braunschweig University of Technology, Germany)
Douglas C. Schmidt (Vanderbild University, USA)
Fran?oise Simonot Lion (LORIA, France)
Frank Singhoff (University of Brest, France)
Oleg Sokolsky (University of Pennsylvania, USA)
J?rn Guy S?? ( University of Queensland, Australia)
Jing Sun (University of Auckland, New Zealand)
Jun Suzuki (University of Massachusetts, USA)
Bedir Tekinerdo&#287;an (Bilkent University, Turkey)
Martin T?rngren (KTH, Sweden)
Antonio Vallecillo (Universidad de M?laga, Spain)
Stefan Van Baelen (K.U.Leuven, Belgium)
Tullio Vardanega (University of Padua, Italy)
Fran?ois Vernadat (CNRS-LAAS, France)
Thomas Vergnaud (THALES, France)
Eugenio Villar (Universidad de Cantabria, Spain)
Tim Weilkiens (oose GmbH, Germany)
Sergio Yovine (CNRS-Verimag, France / Universidad de Buenos Aires)
Bechir Zalila (University of Sfax, Tunisia)



From parrt at cs.usfca.edu  Tue Nov 30 17:09:19 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 17:09:19 -0800
Subject: [antlr-interest] ANTLRWorks 1.4.1 released
Message-ID: <5A25156A-8866-4B96-9D76-E7D51770DFE2@cs.usfca.edu>

Hi, I updated ANTLRWorks to include ANTLR 3.3:

http://antlr.org/works/index.html

Or, ask AW to check for updates.

Ter

From goldberg at cbio.mskcc.org  Tue Nov 30 17:13:29 2010
From: goldberg at cbio.mskcc.org (Arthur Goldberg)
Date: Tue, 30 Nov 2010 20:13:29 -0500
Subject: [antlr-interest] Pattern for returning errors from ANTLR in data
 structures, not STDERR
Message-ID: <4CF5A139.1060101@cbio.mskcc.org>

Hello All

My ANTLR parser is embedded in other code. I've decided that reporting 
errors out of the parser would be better handled as a list of errors, 
not exceptions, so that the parse is allowed to recover from errors and 
complete, if possible.
Does anyone have a working pattern for returning errors from ANTLR in a 
list, not STDERR?
In more detail, I'd run it in two modes:
1) testing: call some rule other than the root
In this case, I will let the rule report an error via an exception.

2) production: call the root rule
In this case, a newReportError() in

     catch (RecognitionException re) {
         newReportError(re);
         recover(input,re);
     }

would catch exceptions thrown by other rules, and store them in a list. 
When the root rule returns, it returns the list of errors, along with 
the results of the parse.

If someone can help me with this, I'll make it worth your while. I'm 
running out of time for messing with ANTLR.

Thanks
Arthur


From parrt at cs.usfca.edu  Tue Nov 30 17:20:19 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 17:20:19 -0800
Subject: [antlr-interest] Pattern for returning errors from ANTLR in
	data structures, not STDERR
In-Reply-To: <4CF5A139.1060101@cbio.mskcc.org>
References: <4CF5A139.1060101@cbio.mskcc.org>
Message-ID: <966449AD-9F18-480D-9AEB-796C79013ACA@cs.usfca.edu>

Check ANTLRToolListener in antlr source or whatever. it has a similar problem to solve.
Ter
On Nov 30, 2010, at 5:13 PM, Arthur Goldberg wrote:

> Hello All
> 
> My ANTLR parser is embedded in other code. I've decided that reporting 
> errors out of the parser would be better handled as a list of errors, 
> not exceptions, so that the parse is allowed to recover from errors and 
> complete, if possible.
> Does anyone have a working pattern for returning errors from ANTLR in a 
> list, not STDERR?
> In more detail, I'd run it in two modes:
> 1) testing: call some rule other than the root
> In this case, I will let the rule report an error via an exception.
> 
> 2) production: call the root rule
> In this case, a newReportError() in
> 
>     catch (RecognitionException re) {
>         newReportError(re);
>         recover(input,re);
>     }
> 
> would catch exceptions thrown by other rules, and store them in a list. 
> When the root rule returns, it returns the list of errors, along with 
> the results of the parse.
> 
> If someone can help me with this, I'll make it worth your while. I'm 
> running out of time for messing with ANTLR.
> 
> Thanks
> Arthur
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rael at zopyra.com  Tue Nov 30 18:05:03 2010
From: rael at zopyra.com (Bill Lear)
Date: Tue, 30 Nov 2010 20:05:03 -0600
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <023b01cb90e9$409557e0$c1c007a0$@temporal-wave.com>
References: <19700.26846.836510.537929@blake.zopyra.com>
	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>
	<19701.26032.665799.341444@blake.zopyra.com>
	<DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>
	<19701.32795.390987.604758@blake.zopyra.com>
	<023b01cb90e9$409557e0$c1c007a0$@temporal-wave.com>
Message-ID: <19701.44367.264667.738071@blake.zopyra.com>

On Tuesday, November 30, 2010 at 15:49:39 (-0800) Jim Idle writes:
>REST_OF_LINE allows an empty token which will immediately match nothing and
>continue to do so forever. You want +  not *. I think you might be doing
>this wrong to be honest. I would probably not use ANTLR for this.

Maybe, but Antlr is so cool ...

I did try replacing * with + and I got the same error.  Blech.  I really
didn't want to write a parser by hand for all of this.  I've got
significantly more to do than what I've got here, the rest of which
should be easy to handle for antlr.

So, there is really no viable way to have Antlr read the rest of the
line of input?  I would be happy to just write the Java code for that
one line:

shell -timeout 30 find /var/log -name ....

If I could just get hold of the input stream, read to end of line,
I could hand-parse the '-timeout N' part, etc., and then let the
lexer continue reading on the next line.  Is there no way to "cut out"
a part of the input like this to process separately?

Actually, I think I have a sick idea: Since this is line-based stuff,
and small files, I can read this all in to memory.  I can hand-parse
the shell command lines, and replace them with an empty line (to
preserve line numbers in case of error) in the input, noting which
lines I modified.  Then, I can give the massaged input to Antlr.  The
parser is going to produce one instance of a Command class for each
line, and return a list of them, in order.  I can just put the shell
Command instances back in the list where they belong and be on my
merry way..

As I said though, it would be really cool if I could just do this all
in Antlr.


Bill

From parrt at cs.usfca.edu  Tue Nov 30 20:28:39 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Nov 2010 20:28:39 -0800
Subject: [antlr-interest] Pattern for returning errors from ANTLR in
	data structures, not STDERR
In-Reply-To: <966449AD-9F18-480D-9AEB-796C79013ACA@cs.usfca.edu>
References: <4CF5A139.1060101@cbio.mskcc.org>
	<966449AD-9F18-480D-9AEB-796C79013ACA@cs.usfca.edu>
Message-ID: <74A83393-6643-46B8-B2D2-127D7B67AFCA@cs.usfca.edu>

Let me be more specific.

In the v4 prerelease stuff, Tool.java has

// http://antlr.org/depot/antlr4/main/tool/src/org/antlr/v4/Tool.java
	public void error(Message msg) {
		if ( listeners.size()==0 ) {
			defaultListener.error(msg);
			return;
		}
		for (ANTLRToolListener l : listeners) l.error(msg);
	}

using

http://antlr.org/depot/antlr4/main/tool/src/org/antlr/v4/tool/ANTLRToolListener.java

then in

http://antlr.org/depot/antlr4/main/tool/src/org/antlr/v4/parse/ToolANTLRParser.java

I do:

	public void displayRecognitionError(String[] tokenNames,
										RecognitionException e)
	{
		String msg = getParserErrorMessage(this, e);
		if ( paraphrases.size()>0 ) {
			String paraphrase = (String)paraphrases.peek();
			msg = msg+" while "+paraphrase;
		}
	//	List stack = getRuleInvocationStack(e, this.getClass().getName());
	//	msg += ", rule stack = "+stack;
		tool.errMgr.syntaxError(ErrorType.SYNTAX_ERROR, getSourceName(), e.token, e, msg);
	}

which forces all msgs from antlr to shunt to Tool.error(), which announces to listeners.

For testing, i have unit tests use this

http://antlr.org/depot/antlr4/main/tool/test/org/antlr/v4/test/ErrorQueue.java

as a listener to the tool like so:

			Tool antlr = newTool(optionsA);
			antlr.addListener(equeue);

Ter

On Nov 30, 2010, at 5:20 PM, Terence Parr wrote:

> Check ANTLRToolListener in antlr source or whatever. it has a similar problem to solve.
> Ter
> On Nov 30, 2010, at 5:13 PM, Arthur Goldberg wrote:
> 
>> Hello All
>> 
>> My ANTLR parser is embedded in other code. I've decided that reporting 
>> errors out of the parser would be better handled as a list of errors, 
>> not exceptions, so that the parse is allowed to recover from errors and 
>> complete, if possible.
>> Does anyone have a working pattern for returning errors from ANTLR in a 
>> list, not STDERR?
>> In more detail, I'd run it in two modes:
>> 1) testing: call some rule other than the root
>> In this case, I will let the rule report an error via an exception.
>> 
>> 2) production: call the root rule
>> In this case, a newReportError() in
>> 
>>    catch (RecognitionException re) {
>>        newReportError(re);
>>        recover(input,re);
>>    }
>> 
>> would catch exceptions thrown by other rules, and store them in a list. 
>> When the root rule returns, it returns the list of errors, along with 
>> the results of the parse.
>> 
>> If someone can help me with this, I'll make it worth your while. I'm 
>> running out of time for messing with ANTLR.
>> 
>> Thanks
>> Arthur
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike.matera at xilinx.com  Tue Nov 30 21:32:09 2010
From: mike.matera at xilinx.com (Mike Matera)
Date: Tue, 30 Nov 2010 21:32:09 -0800
Subject: [antlr-interest] Island grammar for reading shell commands
In-Reply-To: <19701.44367.264667.738071@blake.zopyra.com>
References: <19700.26846.836510.537929@blake.zopyra.com>	<5C723D55-AC0A-48A0-ABEC-A7826F5028FC@cs.usfca.edu>	<19701.26032.665799.341444@blake.zopyra.com>	<DBF22DF0-7349-439C-939B-A0F2247AE5F0@cs.usfca.edu>	<19701.32795.390987.604758@blake.zopyra.com>	<023b01cb90e9$409557e0$c1c007a0$@temporal-wave.com>
	<19701.44367.264667.738071@blake.zopyra.com>
Message-ID: <25a6add6-6d3c-4914-b71f-17ac90f7b929@VA3EHSMHS006.ehs.local>

Hi Bill,

I think you're doing something weird here:

ShellLexer l = new ShellLexer(input);

You are reusing the CharStream that your parser is using.  I don't know
if this is really supposed to work or not.  Try this instead:

ShellLexer l = new ShellLexer(new ANTLRStringStream($SHELL.getText()))

This copies the characters into a new buffer with no ambiguous impacts
on your top-level parser.  I use this exact pattern to parse strings in
my language. 

One other thing you might consider is not parsing the shell command at
all.  If all you intend to do is run the command you can simply split
the command on whitespace then use java.lang.ProcessBuilder.  Here's
what I mean:

String[] cmd = $SHELL.getText().split("\\s+");
ProcessBuilder bld = new ProcessBuilder(cmd);
Process p = bld.start();

In order to make this trick work you want to stuff all of the shell
characters into a single token.  Here's how you could do that:

SHELL: 'shell' ~('\n' | '\r')+ ('\r')? '\n' ;

This token definition is like the ones you would use to implement a
mechanism similar to a '#define'.  The token blindly snarfs everything
after 'shell' until the end of line.  This is good because the
non-syntax elements won't bother your parser and because it preserves
whitespace which you will use later to tokenize your shell command. 

Hope this helps!

Cheers
./m



On 11/30/2010 06:05 PM, Bill Lear wrote:
> On Tuesday, November 30, 2010 at 15:49:39 (-0800) Jim Idle writes:
>> REST_OF_LINE allows an empty token which will immediately match nothing and
>> continue to do so forever. You want +  not *. I think you might be doing
>> this wrong to be honest. I would probably not use ANTLR for this.
> Maybe, but Antlr is so cool ...
>
> I did try replacing * with + and I got the same error.  Blech.  I really
> didn't want to write a parser by hand for all of this.  I've got
> significantly more to do than what I've got here, the rest of which
> should be easy to handle for antlr.
>
> So, there is really no viable way to have Antlr read the rest of the
> line of input?  I would be happy to just write the Java code for that
> one line:
>
> shell -timeout 30 find /var/log -name ....
>
> If I could just get hold of the input stream, read to end of line,
> I could hand-parse the '-timeout N' part, etc., and then let the
> lexer continue reading on the next line.  Is there no way to "cut out"
> a part of the input like this to process separately?
>
> Actually, I think I have a sick idea: Since this is line-based stuff,
> and small files, I can read this all in to memory.  I can hand-parse
> the shell command lines, and replace them with an empty line (to
> preserve line numbers in case of error) in the input, noting which
> lines I modified.  Then, I can give the massaged input to Antlr.  The
> parser is going to produce one instance of a Command class for each
> line, and return a list of them, in order.  I can just put the shell
> Command instances back in the list where they belong and be on my
> merry way..
>
> As I said though, it would be really cool if I could just do this all
> in Antlr.
>
>
> Bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

This email and any attachments are intended for the sole use of the named recipient(s) and contain(s) confidential information that may be proprietary, privileged or copyrighted under applicable law. If you are not the intended recipient, do not read, copy, or forward this email message or any attachments. Delete this email message and any attachments immediately.



