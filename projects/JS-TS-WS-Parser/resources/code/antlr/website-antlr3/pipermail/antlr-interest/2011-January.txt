From kingces95 at gmail.com  Sat Jan  1 06:02:07 2011
From: kingces95 at gmail.com (chris king)
Date: Sat, 1 Jan 2011 04:02:07 -1000
Subject: [antlr-interest] Sam Harwell?
Message-ID: <AANLkTi=3fA7bHdVma3Azij9wVA88veaUPsD-PstaS+8v@mail.gmail.com>

Hello, I'm giving the CSharp3 target a try and both C# port of the tool and
the java tool are not generating compilable code for me when using the
-debug switch. So I was wondering how I can get in touch with the author Sam
Harwell to see if he's still maintaining it and\or point me to the latest
LKG source\binaries.

Thanks!
Chris

From stefan.misch at gmx.de  Sat Jan  1 08:11:37 2011
From: stefan.misch at gmx.de (Stefan Misch)
Date: Sat, 1 Jan 2011 17:11:37 +0100
Subject: [antlr-interest] AntlrWorks 1.4.2 intepreter fails but generated
	Antlr3.3 C# parser works
Message-ID: <1640A8CE0CE04B37A2924D9C57CD5A71@stmwks05>

Hi,

I'm using my holdidays to get more in touch with ANTLR. As I now also have
the book I'm working through the samples in chapter 3 using C# as target
language. I noticed a difference between AntlrWorks 1.4.2 interpreter and
the code it generated.

Using the first grammar sample Expr.g without any actions the interpreter
can parse the simple expression "5-3" and build a graph. If I augment the
grammar with actions the interpreter fails with
"MismatchedTokenException(12!=4)" - token 12 is minus '-', 4 is NEWLINE. He
seems to be unhappy with the slightly altered rule syntax for "expr" in the
augmented version. If I use the same syntax for describing rule "expr" in
the simpler non-augmented grammar the AntlrWorks interpreter fails, too.

The interpreter works with this rule for "expr":

expr:	multExpr (('+'|'-') multExpr)*
	;

but fails with this:

expr:	multExpr 
	(	'+' multExpr
	|	'-' multExpr
	)*
	;

Please note that it can interprete "5+3" with both ways, just "5-3" fails.
Please also note that the ExprParser.cs file generated for the augmented
grammar with actions works, i.e. the correct result is printed, so the
possible bug is limited to AntlrWorks.

Thanks,
Stefan

Here is my complete grammar for Expr.g:

grammar Expr;

options {
	language=CSharp3;
	}

public prog
	:	statement+
	;

statement
	:	expr NEWLINE
	|	assignment NEWLINE
	|	NEWLINE
	;
	
assignment
	:	ID '=' expr
	;
	
expr
	:	multExpr (('+'|'-') multExpr)*
	;
	
multExpr
	:	atom (('*'|'/') atom)*
	;

atom
	:	INT
	|	ID
	|	LPAREN expr RPAREN
	;
	
INT		:	('0'..'9')+;
ID  		:	('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
LPAREN	:	'(';
RPAREN	:	')';
NEWLINE	:	'\r'? '\n';
WS  		:	(' '|'\t')+ {Skip();};



From sharwell at pixelminegames.com  Sat Jan  1 11:47:58 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 1 Jan 2011 13:47:58 -0600
Subject: [antlr-interest] Sam Harwell?
In-Reply-To: <AANLkTi=3fA7bHdVma3Azij9wVA88veaUPsD-PstaS+8v@mail.gmail.com>
References: <AANLkTi=3fA7bHdVma3Azij9wVA88veaUPsD-PstaS+8v@mail.gmail.com>
Message-ID: <007001cba9ec$cb52ac40$61f804c0$@pixelminegames.com>

Hi Chris,

Currently, the CSharp3 target does not support debugging through ANTLRWorks.
That said, the CSharp3 target also does not use the -debug flag. Instead,
you'll [eventually] need to define the ANTLR_DEBUG in your project build
settings to enable debugging.

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of chris king
Sent: Saturday, January 01, 2011 8:02 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Sam Harwell?

Hello, I'm giving the CSharp3 target a try and both C# port of the tool and
the java tool are not generating compilable code for me when using the
-debug switch. So I was wondering how I can get in touch with the author Sam
Harwell to see if he's still maintaining it and\or point me to the latest
LKG source\binaries.

Thanks!
Chris

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Jan  1 13:00:49 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Jan 2011 13:00:49 -0800
Subject: [antlr-interest] upgrading antlr.org software this weekend
Message-ID: <F1C09C62-A8FE-4CAB-AEB1-A3582E60C339@cs.usfca.edu>

beware...flakiness...
Ter

From kferrio at gmail.com  Sat Jan  1 15:47:17 2011
From: kferrio at gmail.com (Kyle Ferrio)
Date: Sat, 1 Jan 2011 16:47:17 -0700
Subject: [antlr-interest] AntlrWorks 1.4.2 intepreter fails but
 generated Antlr3.3 C# parser works
In-Reply-To: <1640A8CE0CE04B37A2924D9C57CD5A71@stmwks05>
References: <1640A8CE0CE04B37A2924D9C57CD5A71@stmwks05>
Message-ID: <AANLkTi=VNO8ukH7FX7Nw-MaNHUTsBKWSv=UvA7QtQL8-@mail.gmail.com>

You may find that if you reverse the order of the '+' and '-' alternatives
in the failing version of your rule, you may find that the minus case works
and the plus case fails, i.e. the opposite of what you are seeing now.  If
this hypothesis is correct, then you are probably seeing a quirky known
issue in the antlr interpreter.  (I'm sorry, I do not recall the bug
number.)  The first version of your rule works, apparently because the
alternatives are "protected" by parens.  I hope this helps.

Kyle

On Sat, Jan 1, 2011 at 9:11 AM, Stefan Misch <stefan.misch at gmx.de> wrote:

> Hi,
>
> I'm using my holdidays to get more in touch with ANTLR. As I now also have
> the book I'm working through the samples in chapter 3 using C# as target
> language. I noticed a difference between AntlrWorks 1.4.2 interpreter and
> the code it generated.
>
> Using the first grammar sample Expr.g without any actions the interpreter
> can parse the simple expression "5-3" and build a graph. If I augment the
> grammar with actions the interpreter fails with
> "MismatchedTokenException(12!=4)" - token 12 is minus '-', 4 is NEWLINE. He
> seems to be unhappy with the slightly altered rule syntax for "expr" in the
> augmented version. If I use the same syntax for describing rule "expr" in
> the simpler non-augmented grammar the AntlrWorks interpreter fails, too.
>
> The interpreter works with this rule for "expr":
>
> expr:   multExpr (('+'|'-') multExpr)*
>        ;
>
> but fails with this:
>
> expr:   multExpr
>        (       '+' multExpr
>        |       '-' multExpr
>        )*
>        ;
>
> Please note that it can interprete "5+3" with both ways, just "5-3" fails.
> Please also note that the ExprParser.cs file generated for the augmented
> grammar with actions works, i.e. the correct result is printed, so the
> possible bug is limited to AntlrWorks.
>
> Thanks,
> Stefan
>
> Here is my complete grammar for Expr.g:
>
> grammar Expr;
>
> options {
>        language=CSharp3;
>        }
>
> public prog
>        :       statement+
>        ;
>
> statement
>        :       expr NEWLINE
>        |       assignment NEWLINE
>        |       NEWLINE
>        ;
>
> assignment
>        :       ID '=' expr
>        ;
>
> expr
>        :       multExpr (('+'|'-') multExpr)*
>        ;
>
> multExpr
>        :       atom (('*'|'/') atom)*
>        ;
>
> atom
>        :       INT
>        |       ID
>        |       LPAREN expr RPAREN
>        ;
>
> INT             :       ('0'..'9')+;
> ID              :       ('a'..'z'|'A'..'Z'|'_')
> ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
> LPAREN  :       '(';
> RPAREN  :       ')';
> NEWLINE :       '\r'? '\n';
> WS              :       (' '|'\t')+ {Skip();};
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sat Jan  1 20:56:15 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 1 Jan 2011 20:56:15 -0800
Subject: [antlr-interest] antlr.org update complete
Message-ID: <EFF35EA9-EF4F-4018-A6A1-595C5F920B8D@cs.usfca.edu>

tomcat to 6.0.29, jira to 4.2.1, confluence to 3.4.5; imported old data. I hate upgrading software! blech. i want those 5 hours back!

i'm reopening self-registration to wiki; should be more secure. damn spammers!

let me know if you see weirdness.

Ter

From stefan.misch at gmx.de  Sun Jan  2 07:11:53 2011
From: stefan.misch at gmx.de (Stefan Misch)
Date: Sun, 2 Jan 2011 16:11:53 +0100
Subject: [antlr-interest] AntlrWorks 1.4.2 intepreter fails but
	generated Antlr3.3 C# parser works
In-Reply-To: <AANLkTi=VNO8ukH7FX7Nw-MaNHUTsBKWSv=UvA7QtQL8-@mail.gmail.com>
References: <1640A8CE0CE04B37A2924D9C57CD5A71@stmwks05>
	<AANLkTi=VNO8ukH7FX7Nw-MaNHUTsBKWSv=UvA7QtQL8-@mail.gmail.com>
Message-ID: <DC474831BEB54273A10BF263517849D2@stmwks05>

Yes, only the first alternative of the rule works...

  _____  

Von: Kyle Ferrio [mailto:kferrio at gmail.com] 
Gesendet: Sonntag, 2. Januar 2011 00:47
An: Stefan Misch
Cc: antlr-interest at antlr.org
Betreff: Re: [antlr-interest] AntlrWorks 1.4.2 intepreter fails but
generated Antlr3.3 C# parser works



You may find that if you reverse the order of the '+' and '-' alternatives
in the failing version of your rule, you may find that the minus case works
and the plus case fails, i.e. the opposite of what you are seeing now.  If
this hypothesis is correct, then you are probably seeing a quirky known
issue in the antlr interpreter.  (I'm sorry, I do not recall the bug
number.)  The first version of your rule works, apparently because the
alternatives are "protected" by parens.  I hope this helps.

Kyle


On Sat, Jan 1, 2011 at 9:11 AM, Stefan Misch <stefan.misch at gmx.de> wrote:


Hi,

I'm using my holdidays to get more in touch with ANTLR. As I now also have
the book I'm working through the samples in chapter 3 using C# as target
language. I noticed a difference between AntlrWorks 1.4.2 interpreter and
the code it generated.

Using the first grammar sample Expr.g without any actions the interpreter
can parse the simple expression "5-3" and build a graph. If I augment the
grammar with actions the interpreter fails with
"MismatchedTokenException(12!=4)" - token 12 is minus '-', 4 is NEWLINE. He
seems to be unhappy with the slightly altered rule syntax for "expr" in the
augmented version. If I use the same syntax for describing rule "expr" in
the simpler non-augmented grammar the AntlrWorks interpreter fails, too.

The interpreter works with this rule for "expr":

expr:   multExpr (('+'|'-') multExpr)*
       ;

but fails with this:

expr:   multExpr
       (       '+' multExpr
       |       '-' multExpr
       )*
       ;

Please note that it can interprete "5+3" with both ways, just "5-3" fails.
Please also note that the ExprParser.cs file generated for the augmented
grammar with actions works, i.e. the correct result is printed, so the
possible bug is limited to AntlrWorks.

Thanks,
Stefan

Here is my complete grammar for Expr.g:

grammar Expr;

options {
       language=CSharp3;
       }

public prog
       :       statement+
       ;

statement
       :       expr NEWLINE
       |       assignment NEWLINE
       |       NEWLINE
       ;

assignment
       :       ID '=' expr
       ;

expr
       :       multExpr (('+'|'-') multExpr)*
       ;

multExpr
       :       atom (('*'|'/') atom)*
       ;

atom
       :       INT
       |       ID
       |       LPAREN expr RPAREN
       ;

INT             :       ('0'..'9')+;
ID              :       ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
LPAREN  :       '(';
RPAREN  :       ')';
NEWLINE :       '\r'? '\n';
WS              :       (' '|'\t')+ {Skip();};



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From sharwell at pixelminegames.com  Sun Jan  2 08:54:46 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 2 Jan 2011 10:54:46 -0600
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>
	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
Message-ID: <009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>

When a semantic predicate is involved with decision making in a grammar, the
following rules should be considered absolute:

1. The predicate cannot access any argument to any rule.
2. The predicate cannot access any variables declared within an @init{}
block of any rule.
3. The predicate cannot access any member of any attribute scope in the
grammar.

In addition, semantic predicates should be pure in the sense that they do
not introduce changes to the program state under any circumstance.

Semantic predicates may safely do the following:

1. Access immutable variables declared within the @members{} section of the
grammar. If the rule foo is the entry point to your grammar, then any
variable "x" which is used by a semantic predicate should be initialized
before foo() is entered, and should remain unchanged until foo() completes.
2. Call input.la(n) and input.lt(n).

Finally, like the "backtrack" grammar option, you should do whatever is
necessary to remove semantic predicates from a production grammar as they
introduce a significant performance penalty. As an example, consider the
following example from a grammar I wrote. My language allows function
declarations of the form "function modifier* returnType? functionName",
where modifiers are effectively user-configured keywords in this context.
Originally, I had the following:

functionDefinition : 'function' ({IsFunctionModifier(input.LT(1))}? =>
mods+=IDENTIFIER)* retType=IDENTIFIER? functionBody
    -> ^('function' ^(MODS $mods*) retType? functionBody);

I now use the following:

functionDefinition : 'function' mods+=IDENTIFIER* functionBody
    -> ^('function' ^(MODS {ExtractFunctionModifiers($mods)})
{ExtractFunctionReturnType($mods)} functionBody);

The methods ExtractFunctionModifiers and ExtractFunctionReturnType each
return a CommonTree. ExtractFunctionModifiers returns a tree with a nil()
root and any number of children which are the actual modifiers. If
ExtractFunctionReturnType returns null, the node is not included in the
rewrite tree, so this works for cases where the return type is omitted.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ron Burk
Sent: Friday, December 31, 2010 11:14 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] the nihilistic circle hoist

More fun with predicate hoisting:

grammar Simple;

FOO : 'foo' ;

section : element* unrelated EOF ;
element : {P1}?=> pre;
pre : FOO post ;
post : FOO*;
unrelated : ':' post;

In this grammar, the generated code invokes P1 (completely outside its
intended syntactic context) while trying to recognize an "unrelated"
(because P1 was "hoisted downward" into "post", and "post" is reachable via
a nonterminal unrelated to "element").

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kferrio at gmail.com  Sun Jan  2 09:40:39 2011
From: kferrio at gmail.com (Kyle Ferrio)
Date: Sun, 2 Jan 2011 10:40:39 -0700
Subject: [antlr-interest] AntlrWorks 1.4.2 intepreter fails but
 generated Antlr3.3 C# parser works
In-Reply-To: <DC474831BEB54273A10BF263517849D2@stmwks05>
References: <1640A8CE0CE04B37A2924D9C57CD5A71@stmwks05>
	<AANLkTi=VNO8ukH7FX7Nw-MaNHUTsBKWSv=UvA7QtQL8-@mail.gmail.com>
	<DC474831BEB54273A10BF263517849D2@stmwks05>
Message-ID: <AANLkTimrvxACVkK+90rxB93AZNK9fqt7rApwY6jR6rpv@mail.gmail.com>

Now this may really surprise you: If you have more than two alternatives, as
in

    rule: thing ( '*' thing | '/' thing | '%' thing | '#' thing ) *     //
not a great rule, but you get the idea

then you will find that the first, third and fourth alternatives are
interpreted correctly, and only the second alternative generates an error.
Strange, no?

This information does not constitute a solution.  Rather, this simply
underscores the fact that there are moving parts in the interpreter which
await fixing by someone familiar with the interpreter internals.  Meanwhile,
we users are grateful that the generated parsers work and that even the
interpreter can be tricked into working -- as you discovered -- by wrapping
the alternatives in extra parentheses as a workaround.

Kyle


On Sun, Jan 2, 2011 at 8:11 AM, Stefan Misch <stefan.misch at gmx.de> wrote:

>  Yes, only the first alternative of the rule works...
>
>  ------------------------------
> *Von:* Kyle Ferrio [mailto:kferrio at gmail.com]
> *Gesendet:* Sonntag, 2. Januar 2011 00:47
> *An:* Stefan Misch
> *Cc:* antlr-interest at antlr.org
> *Betreff:* Re: [antlr-interest] AntlrWorks 1.4.2 intepreter fails but
> generated Antlr3.3 C# parser works
>
>
> You may find that if you reverse the order of the '+' and '-' alternatives
> in the failing version of your rule, you may find that the minus case works
> and the plus case fails, i.e. the opposite of what you are seeing now.  If
> this hypothesis is correct, then you are probably seeing a quirky known
> issue in the antlr interpreter.  (I'm sorry, I do not recall the bug
> number.)  The first version of your rule works, apparently because the
> alternatives are "protected" by parens.  I hope this helps.
>
> Kyle
>
> On Sat, Jan 1, 2011 at 9:11 AM, Stefan Misch <stefan.misch at gmx.de> wrote:
>
>> Hi,
>>
>> I'm using my holdidays to get more in touch with ANTLR. As I now also have
>> the book I'm working through the samples in chapter 3 using C# as target
>> language. I noticed a difference between AntlrWorks 1.4.2 interpreter and
>> the code it generated.
>>
>> Using the first grammar sample Expr.g without any actions the interpreter
>> can parse the simple expression "5-3" and build a graph. If I augment the
>> grammar with actions the interpreter fails with
>> "MismatchedTokenException(12!=4)" - token 12 is minus '-', 4 is NEWLINE.
>> He
>> seems to be unhappy with the slightly altered rule syntax for "expr" in
>> the
>> augmented version. If I use the same syntax for describing rule "expr" in
>> the simpler non-augmented grammar the AntlrWorks interpreter fails, too.
>>
>> The interpreter works with this rule for "expr":
>>
>> expr:   multExpr (('+'|'-') multExpr)*
>>        ;
>>
>> but fails with this:
>>
>> expr:   multExpr
>>        (       '+' multExpr
>>        |       '-' multExpr
>>        )*
>>        ;
>>
>> Please note that it can interprete "5+3" with both ways, just "5-3" fails.
>> Please also note that the ExprParser.cs file generated for the augmented
>> grammar with actions works, i.e. the correct result is printed, so the
>> possible bug is limited to AntlrWorks.
>>
>> Thanks,
>> Stefan
>>
>> Here is my complete grammar for Expr.g:
>>
>> grammar Expr;
>>
>> options {
>>        language=CSharp3;
>>        }
>>
>> public prog
>>        :       statement+
>>        ;
>>
>> statement
>>        :       expr NEWLINE
>>        |       assignment NEWLINE
>>        |       NEWLINE
>>        ;
>>
>> assignment
>>        :       ID '=' expr
>>        ;
>>
>> expr
>>        :       multExpr (('+'|'-') multExpr)*
>>        ;
>>
>> multExpr
>>        :       atom (('*'|'/') atom)*
>>        ;
>>
>> atom
>>        :       INT
>>        |       ID
>>        |       LPAREN expr RPAREN
>>        ;
>>
>> INT             :       ('0'..'9')+;
>> ID              :       ('a'..'z'|'A'..'Z'|'_')
>> ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>> LPAREN  :       '(';
>> RPAREN  :       ')';
>> NEWLINE :       '\r'? '\n';
>> WS              :       (' '|'\t')+ {Skip();};
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From david.beckedorff at gmail.com  Sun Jan  2 09:41:31 2011
From: david.beckedorff at gmail.com (David Beckedorff)
Date: Sun, 2 Jan 2011 12:41:31 -0500
Subject: [antlr-interest] ANTLR 3.3 Bug?
In-Reply-To: <AANLkTin0yRqbBaiD58yccDga7ZS_o7zqjdK4NCbvYxq=@mail.gmail.com>
References: <AANLkTinReyza3SS+cUZkTbcGx0CEi0sffX6RoBa+Uymz@mail.gmail.com>
	<AANLkTin0yRqbBaiD58yccDga7ZS_o7zqjdK4NCbvYxq=@mail.gmail.com>
Message-ID: <AANLkTikcgeOF-0WKcFOLWa-+8tKL=3=jWL4inzrSz4So@mail.gmail.com>

Sorry for the delay in responding ... was at Stowe, VT for a ski week & lost
focus on ANTLR   :>)   Not much snow there though -- the big Nor'Easter hit
further south.

Sam, thank you! thank you!  But, of course, an unclosed string! For some
reason, it never occurred to me to check for that -- I just assumed ANTLR
knew what it was doing when it said the error was on a specific line number.

I installed the ANTLR syntax definitions for TextPad & immediately located
the problem.

And Sam & Kyle, many thanks to both of you for your good advice and quick
responses! That will allow me to move on rapidly to the AST tree grammar
from my current development stage.

One follow-on question ...  how does one turn or some sort of debugging mode
for grammar analysis? If I could have looked at the last token collected, I
would have seen that it spanned several lines & the problem would have been
obvious. It looks like there was such a flag in ANTLR 2.7 but I don't see it
in 3.x.

Happy New Year,
David




On Fri, Dec 31, 2010 at 11:39 AM, Kyle Ferrio <kferrio at gmail.com> wrote:

>
> David,
>
> Sam's advice is wise.  BOth the ANTLR IDE and ANTLRWorks rely on antlr
> itself for many diagnostics, which may take some time to interpret. (I say
> this as someone who tends to understand error messages after the error is
> fixed.)  I just happen to have the ANTLR IDE 2.1.1 open right now, so I did
> this, without needing to know more about your grammar:
>
> *grammar DB;
>
> program : declaration* ;
>
> declaration
>     : tickSpec
>     | location
>     ;
>
> tickSpec
>     : 'TICK' '=' INTEGER
>
>     ;
>
> location
>     : 'LOC' '=' '(' numericalRange ',' numericalRange ')'
>     | '$TITLE'
>     | '$LEGEND'
>     ;
>
> // This is a total guess.
> numericalRange
>     : INTEGER '..' INTEGER
>     ;
>
> // This is a pretty good guess.
> INTEGER : '0'..'9'+ ;
>
> WS : (' '|'\t'|'\r'|'\n'|'\f')+ {$channel=HIDDEN;};*
>
> ANTLR IDE saves this grammar with no errors, and the following input parses
> exactly as expected in the interpreter:
>
> *TICK = 11
> LOC = (1..4,7..11)
> *
> A couple suggestions from experience:  Like Sam's advice about apostrophes,
> be very careful about ANTLR's own rule-delimiting tokens: semicolons, colons
> and vbars (|'s). (Syntax highlighting in ANTLR IDE will not help you here.)
> The usual divide-and-conquer approach to debugging applies. Since your
> grammar worked fine for me with just a little glue, it may be that problems
> are being detected some "distance" away from inception.  And as always make
> sure you have a suitable whitespace rule and that its not left on the
> default channel unless whitespace is actually semantic in your language (not
> recommended).
>
> Good Luck!
>
> Kyle
>
>
> On Thu, Dec 30, 2010 at 8:37 PM, David Beckedorff <
> david.beckedorff at gmail.com> wrote:
>
>> Antlr-interest List,
>>
>> I'm trying to build a parser with the ANTLR IDE 2.1.1 Eclipse plugin and
>> the
>> ANTLR 3.3 library. I'm getting a bunch of cryptic error messages for some
>> of
>> my parser rules.
>>
>> For example, for this rule:
>>
>> tickSpec
>>    :   'TICK' '=' INTEGER
>>    ;
>>
>> I get:
>>
>> error(100): /EZM Project 01/src/com/dlb/ezm/ezm01/Ezm01.g:174:14: syntax
>> error: antlr: unexpected token: ' '
>>  |---> :   'TICK' '=' INTEGER
>>
>>
>> and for the rule:
>>
>> location
>>    :   ( 'LOC' '=' '(' numericalRange ',' numericalRange ')' )
>>    |   '$TITLE'
>>    |   '$LEGEND'
>>    ;
>>
>> I get:
>>
>> error(100): /EZM Project 01/src/com/dlb/ezm/ezm01/Ezm01.g:182:15: syntax
>> error: antlr: unexpected token: ' '
>>  |---> :   ( 'LOC' '=' '(' numericalRange ',' numericalRange ')' )
>>
>> error(100): /EZM Project 01/src/com/dlb/ezm/ezm01/Ezm01.g:182:23: syntax
>> error: antlr: unexpected token: ' numericalRange '
>>  |---> :   ( 'LOC' '=' '(' numericalRange ',' numericalRange ')' )
>>
>>
>>
>> Why do I get an unexpected token ' ' error message for the whitespace
>> between tokens like 'TICK' or 'LOC' and '=' ? Why doesn't ANTLR just
>> absorb
>> the whitespace and move on to the '=' token??
>>
>> I have a whitespace rule in effect, namely:
>>
>> WS : (' '|'\t'|'\n'|'\r'|'\f')+ { $channel = HIDDEN; } ;
>>
>>
>> -David Beckedorff
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


-- 

David Beckedorff
57 Emerson Rd.
Wellesley, MA  02481

Home:  (781) 235-0061
Cell:  (781) 820-0567

From stefan.misch at gmx.de  Sun Jan  2 17:37:59 2011
From: stefan.misch at gmx.de (Stefan Misch)
Date: Mon, 3 Jan 2011 02:37:59 +0100
Subject: [antlr-interest] Struggling to analyze text inside comments
In-Reply-To: <AANLkTimrvxACVkK+90rxB93AZNK9fqt7rApwY6jR6rpv@mail.gmail.com>
References: <1640A8CE0CE04B37A2924D9C57CD5A71@stmwks05><AANLkTi=VNO8ukH7FX7Nw-MaNHUTsBKWSv=UvA7QtQL8-@mail.gmail.com><DC474831BEB54273A10BF263517849D2@stmwks05>
	<AANLkTimrvxACVkK+90rxB93AZNK9fqt7rApwY6jR6rpv@mail.gmail.com>
Message-ID: <EE3B66265DDA4732990473AB7B6EE7D5@stmwks05>

Hi,

I need to analyze the text inside comments at the start of a program. I
started with the default lexer rules for comments and tried to modify them.
My program uses C-like comments except that a single line comment starts
with '--' instead of '//'.

I have two questions:

Q1: how can I grab the text of a multiline comment, .i.e. the part expressed
by (options {greedy=false;} : . )*
so that it can also be analyzed by "INFO"

Q2: what must I do, so that in INFO not only the last alternative gets
chosen. Using "=>" I removed the syntactic ambiguity between the different
alternatives and the last one, because "TEXT" may match everthing (except
newline chars). But using AntlrWorks to debug the sample shown below, I only
see that "TEXT: ..." gets printed in the output tab.

This is my grammar:

<BOF X.g>
grammar X;
 
program
 : header
 ;
 
header
 : COMMENT*
 ;
 
COMMENT
    : '--' INFO '\r'? '\n'
    | '/*' (options {greedy=false;} : . )* '*/' // Q1: how to get text of
comment
    ;
 
INFO
 : ('TITLE:')   => 'TITLE:'   TEXT {System.out.println("TITLE: " +
$TEXT.text);}
 | ('NAME:')    => 'NAME:'    TEXT
 | ('VERSION:') => 'VERSION:' 'V'? VERSION_NR DATE
 | ('DESC:')    => 'DESC:'    TEXT
 | ('V')        => 'V' VERSION_NR DATUM NAME TEXT
 | TEXT {System.out.println("TEXT: " + $TEXT.text);} // Q2: this alternative
is the only one chosen
 ;
   
fragment VERSION_NR : DIGIT DIGIT DIGIT;
fragment DATE  : DIGIT DIGIT '.' DIGIT DIGIT '.'  DIGIT DIGIT DIGIT DIGIT;
fragment DIGIT  : '0'..'9';
fragment UMLAUT  : '?'|'?'|'?'|'?'|'?'|'?'|'?';
fragment NAME  : ('a'..'z'|'A'..'Z'|UMLAUT)+;
fragment SPACE  : (' '|'\t')+;
fragment TEXT  : ~('\n'|'\r')*;
 
WS     : (' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;};
<EOF X.g>

This is an example of a header I need to analyze:

<BOF sample.txt>
--
==========================================================================
-- TITLE:      Test
-- 
-- NAME:       test.prg
-- 
-- VERSION:    V003 29.01.2010
-- 
-- DESC:       some text
--             - some more text
--             - even more text
-- 
-- HISTORY:
--
---------------------------------------------------------------------------
-- V001	30.07.2009	Name	some comment
--
---------------------------------------------------------------------------
-- V002	01.10.2009	Name	some more comment -
--
---------------------------------------------------------------------------
-- V003	29.01.2010	Name	even more comment
--
===========================================================================
<EOF sample.txt>

The header may also be written using /* .. */ comment style (just one at the
begin and end or even for each line). But as I failed to solve question 1 I
tried to start with just the single line comments.

I really appreciate any help.
Stefan
 



From aleiby.antlr at gmail.com  Sun Jan  2 19:29:51 2011
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sun, 2 Jan 2011 19:29:51 -0800
Subject: [antlr-interest] array list action attributes
Message-ID: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>

ANTLR3 allows labeling attributes for referencing in actions.

Example:

decl: type id=ID ';' { print "var" + $id.text; }

With the C language target, the $id.text gets converted nicely into:

(id->getText(id))

However, if you have more than one attribute:

decl: ^( TYPE ids+=ID* )

...$ids becomes a pANTLR3_VECTOR, and it appears those helpful attributes no
longer work?

I was hoping something like $ids[i].text would get automatically converted.
 Instead, I had to dig into the implementation a bit and hand-expand it to:

pANTLR_BASE_TREE id = (pANTLR_BASE_TREE)$ids->get($ids, i);
const char* name = (const char*)id->getText(id)->chars;

So, I guess a couple questions:

1) Does the java language option suffer the same fate?  (i.e. ANTLR3 simply
does not provide syntax for working with attributes on multi-value labels?)
2) Does the C API provide some nice macros I may have missed for making this
less gross?  (e.g. its set of SCOPE accessors)

Thanks,
Aaron

From ronburk at gmail.com  Sun Jan  2 23:35:22 2011
From: ronburk at gmail.com (Ron Burk)
Date: Sun, 2 Jan 2011 23:35:22 -0800
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>
	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
	<009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>
Message-ID: <AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>

> When a semantic predicate is involved with decision making in a grammar, the
> following rules should be considered absolute:

The predicate used in the previous examples is "{true}",
which I believe satisfies all possible constraints one
could imagine. :-) And yet the result is still absolutely
incorrect parsers.

There is an ANTLR slideshow that declares hoisted
predicates must only be executed in the correct syntactic
context. The second example was intended to demonstrate that
they may, in fact, execute completely outside the correct
syntactic context. I see no constraints that can be placed
on predicates that will avoid the bugs that behavior can
induce.

Previously, I said:
> The previous observation suggests that "hoisting"
> should only be extended to nonterminals that can
> actually derive a string that starts with the nonterminal
> containing the predicate being hoisted.

Which I can now see is not a complete characterization
of the problem.

Working through an LL(1) example implementing
predicates on the classic Yacc-is-LR(2) problem
(treat IDENT ':' different than IDENT) makes me understand
why the downward hoisting is motivated. The problem is
being able to reach those downward-hoisted predicates
via a path that does not involve the nonterminal that
contained the predicate. I don't yet see any reason that
should be defined as correct behavior for hoisting
(how to explain to the hapless user that syntactic
behavior has been altered by a predicate that exists
nowhere in the syntax being altered?), and
suspect it is fixable.

It's an interesting problem.

From jimi at temporal-wave.com  Mon Jan  3 10:27:46 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 3 Jan 2011 10:27:46 -0800
Subject: [antlr-interest] array list action attributes
In-Reply-To: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>
References: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>
Message-ID: <204ce80380ca22db4205c82b0e9c0008@mail.gmail.com>

The += syntax is really only used for tree rewriting, but the vector
access functions are all documented in the API and there a copious
examples if you read through the runtime source code.

Unless you don't care too much about memory (memory for the STRINGs is not
released until you free the parser), then I would just get the pointers
from the token directly and copy whatever text you want from there.

However, I think that your confusion here is that you are gathering a list
then trying to process it afterwards, where I think you will find it more
useful to do this (and note that you use + as otherwise if there are no
IDs then it is just a TYPE alt):

: TYPE // No IDs
| ^(TYPE

      (
        i=ID { some code that does $i.whatever }
      )+
  )
  { action code to finish up }
;


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Aaron Leiby
> Sent: Sunday, January 02, 2011 7:30 PM
> To: antlr-interest
> Subject: [antlr-interest] array list action attributes
>
> ANTLR3 allows labeling attributes for referencing in actions.
>
> Example:
>
> decl: type id=ID ';' { print "var" + $id.text; }
>
> With the C language target, the $id.text gets converted nicely into:
>
> (id->getText(id))
>
> However, if you have more than one attribute:
>
> decl: ^( TYPE ids+=ID* )
>
> ...$ids becomes a pANTLR3_VECTOR, and it appears those helpful
> attributes no longer work?
>
> I was hoping something like $ids[i].text would get automatically
> converted.
>  Instead, I had to dig into the implementation a bit and hand-expand it
> to:
>
> pANTLR_BASE_TREE id = (pANTLR_BASE_TREE)$ids->get($ids, i); const char*
> name = (const char*)id->getText(id)->chars;
>
> So, I guess a couple questions:
>
> 1) Does the java language option suffer the same fate?  (i.e. ANTLR3
> simply does not provide syntax for working with attributes on multi-
> value labels?)
> 2) Does the C API provide some nice macros I may have missed for making
> this less gross?  (e.g. its set of SCOPE accessors)
>
> Thanks,
> Aaron
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ronburk at gmail.com  Mon Jan  3 11:15:59 2011
From: ronburk at gmail.com (Ron Burk)
Date: Mon, 3 Jan 2011 11:15:59 -0800
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>
	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
	<009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>
	<AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>
Message-ID: <AANLkTinsjsgN1=Z0-jv-5X-13_DBYVhUcp+y5fM6On02@mail.gmail.com>

After more tinkering, it appears there are two
separate bugs. First, the code generated for
predicate hoisting may simply be wrong when
the "+" EBNF operator is used. The second
is the more systemic problem that hoisted
predicates can be executed in the wrong syntactic
context.

The first bug can be seen in Wincent's original
report:

grammar Simple;

FOO : 'foo' ;

section : element* EOF ;
element : {P1}?=> pre ;
pre : FOO+ ;

The code generated for the previous grammar can
consume no FOOs. But after changing FOO+ to FOO FOO*:

grammar hoist1;

FOO : 'foo' ;

section : element* EOF ;
element : {P1}?=> pre ;
pre : FOO FOO* ;

This grammar, though it should produce identical
behavior to the previous one, does not. It correctly
consumes one FOO for every 'pre'. It does, however,
still suffer from the second bug, since 'pre' contains
a predicate that will "taint" any unrelated nonterminal
that uses it. E.g.:

...
unrelated : '(' pre ')' ;

This latter rule cannot match ( FOO FOO ) because
'pre' is executing predicate P1 in a completely unrelated
syntactic context. (assume P1 = true).

From ame01 at gmx.net  Mon Jan  3 15:37:58 2011
From: ame01 at gmx.net (Aurelian Melinte)
Date: Mon, 03 Jan 2011 18:37:58 -0500
Subject: [antlr-interest] AntlrWorks 1.4.2 with C target issue
Message-ID: <4D225DD6.4090709@gmx.net>

Hello,

I am trying to remote debug a grammar that has C as target. AntlrWorks 
connects to the parser fine but then it just runs it to the end. I 
cannot really step it nor break.

I am using AntlrWorks 1.4.2. Parser was generated with Antlr 3.2.

Any advice appreciated,
Aurelian



From marco at mtsystems.ch  Tue Jan  4 06:06:12 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Tue, 04 Jan 2011 15:06:12 +0100
Subject: [antlr-interest] How to recognize unmatchable input?
Message-ID: <4D232954.8010205@mtsystems.ch>

Dear all

##### grammar #####

grammar Demo;
main : ONE* ;
ONE  : '1' {System.out.print("(1) ");} ;
A    : 'a' {System.out.print("(a) ");} ;
WS   : ' ' {$channel=HIDDEN;} ;

##### code #####

public static void main(String[] args) throws Exception {
    DemoLexer lexer = new DemoLexer(new ANTLRStringStream("a 1 1"));
    DemoParser parser = new DemoParser(new CommonTokenStream(lexer));
    parser.main();
    System.out.println("Lexer: " + lexer.getNumberOfSyntaxErrors());
    System.out.println("Parser: " + parser.getNumberOfSyntaxErrors());
}


Working with antlr-3.3-complete.jar and libantlr3c-3.3-SNAPSHOT.tar.gz, 
for the input "a 1 1" I get:
- Java target: (a), Lexer: 0, Parser: 0
- C target: (1) (1), Lexer: 0, Parser: 0

Am I doing something undefined here? I'm surprised that the two targets 
produce a different result. I would expect an error since the input 
seems unmatchable to me.

If I change "main" to
	main : ONE* EOF ;
I get:
- Java target: (a) (1), Lexer: 0, Parser: 1
   -> With the warning: line 1:0 missing EOF at 'a'
- C target: (1) (1), Lexer: 0, Parser: 0


Questions:
- How do I recognize if an input did not match my grammar?
- Which of the targets is doing it right? None, only one or both?


In my real project I have something very similar but with completely 
different behavior. The Java target tells me "no viable alternative at 
input" and gives me a parser error. The C target just segfaults :-/
So I'm really interested how to do that right.


Thanks
Marco

From marco at mtsystems.ch  Tue Jan  4 06:15:14 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Tue, 04 Jan 2011 15:15:14 +0100
Subject: [antlr-interest] How to recognize unmatchable input?
In-Reply-To: <4D232954.8010205@mtsystems.ch>
References: <4D232954.8010205@mtsystems.ch>
Message-ID: <4D232B72.5010803@mtsystems.ch>

On a second thought, I think the Java target is doing it perfectly fine. 
There might be a bug in the C target.
Is there a workaround for that? I'm actually working with the C target, 
not with the Java one.

Thanks and happy new year
Marco


On 04.01.2011 15:06, Marco Trudel wrote:
> Dear all
>
> ##### grammar #####
>
> grammar Demo;
> main : ONE* ;
> ONE  : '1' {System.out.print("(1) ");} ;
> A    : 'a' {System.out.print("(a) ");} ;
> WS   : ' ' {$channel=HIDDEN;} ;
>
> ##### code #####
>
> public static void main(String[] args) throws Exception {
>      DemoLexer lexer = new DemoLexer(new ANTLRStringStream("a 1 1"));
>      DemoParser parser = new DemoParser(new CommonTokenStream(lexer));
>      parser.main();
>      System.out.println("Lexer: " + lexer.getNumberOfSyntaxErrors());
>      System.out.println("Parser: " + parser.getNumberOfSyntaxErrors());
> }
>
>
> Working with antlr-3.3-complete.jar and libantlr3c-3.3-SNAPSHOT.tar.gz,
> for the input "a 1 1" I get:
> - Java target: (a), Lexer: 0, Parser: 0
> - C target: (1) (1), Lexer: 0, Parser: 0
>
> Am I doing something undefined here? I'm surprised that the two targets
> produce a different result. I would expect an error since the input
> seems unmatchable to me.
>
> If I change "main" to
> 	main : ONE* EOF ;
> I get:
> - Java target: (a) (1), Lexer: 0, Parser: 1
>     ->  With the warning: line 1:0 missing EOF at 'a'
> - C target: (1) (1), Lexer: 0, Parser: 0
>
>
> Questions:
> - How do I recognize if an input did not match my grammar?
> - Which of the targets is doing it right? None, only one or both?
>
>
> In my real project I have something very similar but with completely
> different behavior. The Java target tells me "no viable alternative at
> input" and gives me a parser error. The C target just segfaults :-/
> So I'm really interested how to do that right.
>
>
> Thanks
> Marco
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Tue Jan  4 11:07:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 4 Jan 2011 11:07:12 -0800
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <AANLkTinsjsgN1=Z0-jv-5X-13_DBYVhUcp+y5fM6On02@mail.gmail.com>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>
	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
	<009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>
	<AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>
	<AANLkTinsjsgN1=Z0-jv-5X-13_DBYVhUcp+y5fM6On02@mail.gmail.com>
Message-ID: <3CA62850-10D4-4B3B-8028-F17BA2340164@cs.usfca.edu>


On Jan 3, 2011, at 11:15 AM, Ron Burk wrote:

> After more tinkering, it appears there are two
> separate bugs. First, the code generated for
> predicate hoisting may simply be wrong when
> the "+" EBNF operator is used. The second
> is the more systemic problem that hoisted
> predicates can be executed in the wrong syntactic
> context.

That's not a bug but a limitation of Java and most other targets; I think the book has a good description. and let's look at the grammar then:

> The first bug can be seen in Wincent's original
> report:
> 
> grammar Simple;
> 
> FOO : 'foo' ;
> 
> section : element* EOF ;
> element : {P1}?=> pre ;
> pre : FOO+ ;

The DFA to predict entry or exit of element* is

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 10022 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110104/8c53590f/attachment.tiff 
-------------- next part --------------


That seems correct to me.

> 
> The code generated for the previous grammar can
> consume no FOOs. But after changing FOO+ to FOO FOO*:
> 
> grammar hoist1;
> 
> FOO : 'foo' ;
> 
> section : element* EOF ;
> element : {P1}?=> pre ;
> pre : FOO FOO* ;

For this, element* gets the exact same prediction DFA.

> This grammar, though it should produce identical
> behavior to the previous one, does not. It correctly
> consumes one FOO for every 'pre'.

I get these results with 3.3.  Hmm... it looks like the decision for FOO FOO* and FOO+ also gets the same thing. which version are you using?

Ter

> It does, however,
> still suffer from the second bug, since 'pre' contains
> a predicate that will "taint" any unrelated nonterminal
> that uses it. E.g.:
> 
> ...
> unrelated : '(' pre ')' ;
> 
> This latter rule cannot match ( FOO FOO ) because
> 'pre' is executing predicate P1 in a completely unrelated
> syntactic context. (assume P1 = true).
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Tue Jan  4 11:32:35 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 4 Jan 2011 11:32:35 -0800
Subject: [antlr-interest] How to recognize unmatchable input?
In-Reply-To: <4D232B72.5010803@mtsystems.ch>
References: <4D232954.8010205@mtsystems.ch> <4D232B72.5010803@mtsystems.ch>
Message-ID: <646ff2382ce956117c284b29666370b2@mail.gmail.com>

I will take a look.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Trudel
> Sent: Tuesday, January 04, 2011 6:15 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to recognize unmatchable input?
>
> On a second thought, I think the Java target is doing it perfectly
> fine.
> There might be a bug in the C target.
> Is there a workaround for that? I'm actually working with the C target,
> not with the Java one.
>
> Thanks and happy new year
> Marco
>
>
> On 04.01.2011 15:06, Marco Trudel wrote:
> > Dear all
> >
> > ##### grammar #####
> >
> > grammar Demo;
> > main : ONE* ;
> > ONE  : '1' {System.out.print("(1) ");} ;
> > A    : 'a' {System.out.print("(a) ");} ;
> > WS   : ' ' {$channel=HIDDEN;} ;
> >
> > ##### code #####
> >
> > public static void main(String[] args) throws Exception {
> >      DemoLexer lexer = new DemoLexer(new ANTLRStringStream("a 1 1"));
> >      DemoParser parser = new DemoParser(new
> CommonTokenStream(lexer));
> >      parser.main();
> >      System.out.println("Lexer: " + lexer.getNumberOfSyntaxErrors());
> >      System.out.println("Parser: " +
> > parser.getNumberOfSyntaxErrors());
> > }
> >
> >
> > Working with antlr-3.3-complete.jar and
> > libantlr3c-3.3-SNAPSHOT.tar.gz, for the input "a 1 1" I get:
> > - Java target: (a), Lexer: 0, Parser: 0
> > - C target: (1) (1), Lexer: 0, Parser: 0
> >
> > Am I doing something undefined here? I'm surprised that the two
> > targets produce a different result. I would expect an error since the
> > input seems unmatchable to me.
> >
> > If I change "main" to
> > 	main : ONE* EOF ;
> > I get:
> > - Java target: (a) (1), Lexer: 0, Parser: 1
> >     ->  With the warning: line 1:0 missing EOF at 'a'
> > - C target: (1) (1), Lexer: 0, Parser: 0
> >
> >
> > Questions:
> > - How do I recognize if an input did not match my grammar?
> > - Which of the targets is doing it right? None, only one or both?
> >
> >
> > In my real project I have something very similar but with completely
> > different behavior. The Java target tells me "no viable alternative
> at
> > input" and gives me a parser error. The C target just segfaults :-/
> So
> > I'm really interested how to do that right.
> >
> >
> > Thanks
> > Marco
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gromer at google.com  Tue Jan  4 12:33:28 2011
From: gromer at google.com (Geoffrey Romer)
Date: Tue, 4 Jan 2011 12:33:28 -0800
Subject: [antlr-interest] Multiple-target parsers,
	and extending without overriding
Message-ID: <AANLkTi=4oEOBAWJ3+YzpbCFuJhMsSVWC4BEFDCSawUWd@mail.gmail.com>

Hi-

I'm new to ANTLR, and I'm trying to evaluate its suitability for a project
I'm working on. I'd appreciate help with a few questions:

- What is the status of C++ support? The wiki indicates that C++ support is
coming "later in 2008", but this is obviously out of date.

- One goal of the project is to provide cross-platform parsing and unparsing
support, i.e. to generate parsers and unparsers in multiple target languages
(primarily C++ and Java) from a single representation of the grammar. As far
as I can see, the only way to accomplish this in ANTLR is to provide a
grammar with AST output type which uses only rewrite rules and AST operators
(and, for unparsing, a tree grammar with template output type), with no
target-language code at all. However, I'm not sure this is feasible; many
ANTLR features (e.g. attributes and predicates, custom error handling) and
techniques (e.g. implementing case insensitivity or keywords-as-identifiers)
require use of a specific target language. Is this approach workable? Are
there better options I'm overlooking?

- Another goal of the project is to provide a unified parsing framework for
a family of closely related but distinct languages (specifically, SQL
dialects). We want to be able to express the language grammars in terms of
an inheritance hierarchy, where each language (other than the base) is
specified in terms of its differences from the parent language. This seems
like a natural fit for ANTLR's support for composite grammars, but I see two
drawbacks with that approach: first, the languages may differ in both
lexical structure and syntax; since combined grammars cannot inherit from
other combined grammars, this seems to imply that we'd need to maintain
separate, parallel hierarchies of lexer and parser grammars, which are
combined only in the leaves. Is there a cleaner solution? Second, the
composition mechanism doesn't seem to support extending a grammar with new
productions; only overriding existing productions. For example, if I have:

----
parser grammar Base;

a: b
----
parser grammar Derived;
import Base;

a: c
----

then as I understand it a -> b is not a rule of the derived language. I can
of course explicitly re-add it:

----
parser grammar Derived;
import Base;

a: b | c
----

but this defeats much of the purpose of the inheritance, by duplicating code
between the base and derived grammars. Is there any way for a derived
grammar to introduce a new production without overriding any existing
productions in the base grammar? Is there a better way to solve this kind of
problem?

From jimi at temporal-wave.com  Tue Jan  4 12:59:06 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 4 Jan 2011 12:59:06 -0800
Subject: [antlr-interest] Multiple-target parsers,
	and extending without overriding
In-Reply-To: <AANLkTi=4oEOBAWJ3+YzpbCFuJhMsSVWC4BEFDCSawUWd@mail.gmail.com>
References: <AANLkTi=4oEOBAWJ3+YzpbCFuJhMsSVWC4BEFDCSawUWd@mail.gmail.com>
Message-ID: <d22cb9d1ec56963e74962ca74f972378@mail.gmail.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Geoffrey Romer
> Sent: Tuesday, January 04, 2011 12:33 PM
> To: antlr-interest
> Cc: theov at google.com
> Subject: [antlr-interest] Multiple-target parsers, and extending
> without overriding
>
> Hi-
>
> I'm new to ANTLR, and I'm trying to evaluate its suitability for a
> project I'm working on. I'd appreciate help with a few questions:
>
> - What is the status of C++ support? The wiki indicates that C++
> support is coming "later in 2008", but this is obviously out of date.


Compile the C output as C++, keep custom code and actions entirely out of
the parser and produce AST outputs.

>
> - One goal of the project is to provide cross-platform parsing and
> unparsing support, i.e. to generate parsers and unparsers in multiple
> target languages (primarily C++ and Java) from a single representation
> of the grammar. As far as I can see, the only way to accomplish this in
> ANTLR is to provide a grammar with AST output type which uses only
> rewrite rules and AST operators (and, for unparsing, a tree grammar
> with template output type), with no target-language code at all.

Actually I use source code control for this. Start with a base definition
of all your grammars without any actions, then branch to specific targets
and add any target specific code.

> However, I'm not sure this is feasible; many ANTLR features (e.g.
> attributes and predicates, custom error handling) and techniques (e.g.
> implementing case insensitivity or keywords-as-identifiers) require use
> of a specific target language. Is this approach workable? Are there
> better options I'm overlooking?

You keep all such code outside the grammar and within your application
code. There are few differences if you do that. Also use:

id: ID | KEYWORD1 | KEYWORD2 ... etc;

And not comparison code on ID to workout keywords.

>
> - Another goal of the project is to provide a unified parsing framework
> for a family of closely related but distinct languages (specifically,
> SQL dialects).

You and everyone remotely interested in SQL ;)

> We want to be able to express the language grammars in
> terms of an inheritance hierarchy, where each language (other than the
> base) is specified in terms of its differences from the parent
> language. This seems like a natural fit for ANTLR's support for
> composite grammars, but I see two drawbacks with that approach: first,

SQL dialects are not really compatible enough to do that.

> the languages may differ in both lexical structure and syntax; since
> combined grammars cannot inherit from other combined grammars, this
> seems to imply that we'd need to maintain separate, parallel
> hierarchies of lexer and parser grammars, which are combined only in
> the leaves. Is there a cleaner solution? Second, the composition
> mechanism doesn't seem to support extending a grammar with new
> productions; only overriding existing productions.


Yes. Source code control is a better option here. Especially if you use
one that is good at branches such as perforce.

Jim

From gromer at google.com  Tue Jan  4 13:58:45 2011
From: gromer at google.com (Geoffrey Romer)
Date: Tue, 4 Jan 2011 13:58:45 -0800
Subject: [antlr-interest] Multiple-target parsers,
	and extending without overriding
In-Reply-To: <d22cb9d1ec56963e74962ca74f972378@mail.gmail.com>
References: <AANLkTi=4oEOBAWJ3+YzpbCFuJhMsSVWC4BEFDCSawUWd@mail.gmail.com>
	<d22cb9d1ec56963e74962ca74f972378@mail.gmail.com>
Message-ID: <AANLkTikpfFvohNVVWs4AeKF=v7vXCv54LMVrrQ2yhLsb@mail.gmail.com>

On Tue, Jan 4, 2011 at 12:59 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Geoffrey Romer
> > Sent: Tuesday, January 04, 2011 12:33 PM
> > To: antlr-interest
> > Cc: theov at google.com
> > Subject: [antlr-interest] Multiple-target parsers, and extending
> > without overriding
> >
> > Hi-
> >
> > I'm new to ANTLR, and I'm trying to evaluate its suitability for a
> > project I'm working on. I'd appreciate help with a few questions:
> >
> > - What is the status of C++ support? The wiki indicates that C++
> > support is coming "later in 2008", but this is obviously out of date.
>
>
> Compile the C output as C++, keep custom code and actions entirely out of
> the parser and produce AST outputs.
>

Are there any plans for native C++ target support (classes, RAII, all that
good stuff)?


>
> >
> > - One goal of the project is to provide cross-platform parsing and
> > unparsing support, i.e. to generate parsers and unparsers in multiple
> > target languages (primarily C++ and Java) from a single representation
> > of the grammar. As far as I can see, the only way to accomplish this in
> > ANTLR is to provide a grammar with AST output type which uses only
> > rewrite rules and AST operators (and, for unparsing, a tree grammar
> > with template output type), with no target-language code at all.
>
> Actually I use source code control for this. Start with a base definition
> of all your grammars without any actions, then branch to specific targets
> and add any target specific code.
>

But once you branch it, you no longer have a single representation of the
grammar, you have two representations which happen to have a common ancestor
somewhere in their revision history


>
> > However, I'm not sure this is feasible; many ANTLR features (e.g.
> > attributes and predicates, custom error handling) and techniques (e.g.
> > implementing case insensitivity or keywords-as-identifiers) require use
> > of a specific target language. Is this approach workable? Are there
> > better options I'm overlooking?
>
> You keep all such code outside the grammar and within your application
> code. There are few differences if you do that. Also use:
>
> id: ID | KEYWORD1 | KEYWORD2 ... etc;
>
> And not comparison code on ID to workout keywords.
>
> >
> > - Another goal of the project is to provide a unified parsing framework
> > for a family of closely related but distinct languages (specifically,
> > SQL dialects).
>
> You and everyone remotely interested in SQL ;)
>
> > We want to be able to express the language grammars in
> > terms of an inheritance hierarchy, where each language (other than the
> > base) is specified in terms of its differences from the parent
> > language. This seems like a natural fit for ANTLR's support for
> > composite grammars, but I see two drawbacks with that approach: first,
>
> SQL dialects are not really compatible enough to do that.
>

I haven't told you what dialects I'm interested in ;-)


>
> > the languages may differ in both lexical structure and syntax; since
> > combined grammars cannot inherit from other combined grammars, this
> > seems to imply that we'd need to maintain separate, parallel
> > hierarchies of lexer and parser grammars, which are combined only in
> > the leaves. Is there a cleaner solution? Second, the composition
> > mechanism doesn't seem to support extending a grammar with new
> > productions; only overriding existing productions.
>
>
> Yes. Source code control is a better option here. Especially if you use
> one that is good at branches such as perforce.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jcottam at umail.iu.edu  Tue Jan  4 15:47:41 2011
From: jcottam at umail.iu.edu (Joseph Cottam)
Date: Tue, 4 Jan 2011 18:47:41 -0500
Subject: [antlr-interest] AST loosing leaves in 3.3 vs. 3.2
Message-ID: <AANLkTi=8UoTurrbvS9_ZJS6Pt==_mJjcPtCzNeYGvOP-@mail.gmail.com>

Upgrading from v3.2 to v3.3, I started loosing the leaves in some of my
rules.  All affected rule-pairs have the same structure: The results of
called rule becomes the root of the AST returned by the rule doing the
calling AND the calling rule adds more nodes to the AST (not just returning
the results of the called rule).  In the example below, the result of
matching the "call" rule is truncated to just its root when it is referred
to in the construction of the AST for "callTarget."  I feel like I am
missing something simple, but I can't figure out what part of the v3.3
release notes covers this circumstance.

3.2 output: (FUNCTION first second third PACK)
3.3 output: (FUNCTION PACK)

-Joseph A. Cottam


input------------------------
first second third

grammar-------------------
grammar Error;

options {
  language = Java;
  output=AST;
}

tokens {FUNCTION; PACK;}

callTarget
 : call
    -> ^(call PACK)
 ;

call
  : one=ID two=ID three=ID
    -> ^(FUNCTION $one $two $three)
  ;

ID    : ('a'..'z' | 'A'..'Z' | '_') ('.'? ('a'..'z' | 'A'..'Z' | '_' |
'0'..'9'))*;
WS  : (' '|'\r'|'\t'|'\u000C'|'\n')+ {skip();};

From jimi at temporal-wave.com  Tue Jan  4 15:54:30 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 4 Jan 2011 15:54:30 -0800
Subject: [antlr-interest] AST loosing leaves in 3.3 vs. 3.2
In-Reply-To: <AANLkTi=8UoTurrbvS9_ZJS6Pt==_mJjcPtCzNeYGvOP-@mail.gmail.com>
References: <AANLkTi=8UoTurrbvS9_ZJS6Pt==_mJjcPtCzNeYGvOP-@mail.gmail.com>
Message-ID: <8bed6d6629fbc0b74107530aee0a9342@mail.gmail.com>

Your grammar is erroneous and just 'happened' to work in 3.2. The root of
a node can only be the result of a sib rule if the subrule contains a
single node, otherwise the results are undefined.

You would need:

callTarget
  : call
     -> ^(FUNCTION call PACK)
  ;

call
   : ID ID ID
   ;

Which is easily constructed in all situations, even if you add an extra
root node:


callTarget
  : call
     -> ^(CALL call PACK)
  ;

call
  : one=ID two=ID three=ID
    -> ^(FUNCTION $one $two $three)
  ;


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Joseph Cottam
> Sent: Tuesday, January 04, 2011 3:48 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] AST loosing leaves in 3.3 vs. 3.2
>
> Upgrading from v3.2 to v3.3, I started loosing the leaves in some of my
> rules.  All affected rule-pairs have the same structure: The results of
> called rule becomes the root of the AST returned by the rule doing the
> calling AND the calling rule adds more nodes to the AST (not just
> returning the results of the called rule).  In the example below, the
> result of matching the "call" rule is truncated to just its root when
> it is referred to in the construction of the AST for "callTarget."  I
> feel like I am missing something simple, but I can't figure out what
> part of the v3.3 release notes covers this circumstance.
>
> 3.2 output: (FUNCTION first second third PACK)
> 3.3 output: (FUNCTION PACK)
>
> -Joseph A. Cottam
>
>
> input------------------------
> first second third
>
> grammar-------------------
> grammar Error;
>
> options {
>   language = Java;
>   output=AST;
> }
>
> tokens {FUNCTION; PACK;}
>
> callTarget
>  : call
>     -> ^(call PACK)
>  ;
>
> call
>   : one=ID two=ID three=ID
>     -> ^(FUNCTION $one $two $three)
>   ;
>
> ID    : ('a'..'z' | 'A'..'Z' | '_') ('.'? ('a'..'z' | 'A'..'Z' | '_' |
> '0'..'9'))*;
> WS  : (' '|'\r'|'\t'|'\u000C'|'\n')+ {skip();};
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From zching01 at gmail.com  Tue Jan  4 15:57:48 2011
From: zching01 at gmail.com (Ching)
Date: Tue, 4 Jan 2011 16:57:48 -0700
Subject: [antlr-interest] how to initialize Antlr local variables?
In-Reply-To: <AANLkTinRJC+Q1JxLbcjNgSRsfiD1JTqgNb6aTJEyLJiU@mail.gmail.com>
References: <AANLkTiksrrNgh79DT8vGkVbmP3GR1UhR=7bh_B43oSYz@mail.gmail.com>
	<AANLkTinRJC+Q1JxLbcjNgSRsfiD1JTqgNb6aTJEyLJiU@mail.gmail.com>
Message-ID: <AANLkTinNnjXZrMHyBxkjdX_gq+j-fJ9n3PMeEVen65e1@mail.gmail.com>

Thank you! Another question is that I am doing type checking in my grammar
file, is there a way to display errors like the syntax error instead of
sending them to stderr? I read Terrence Parr's recently posting (
http://www.stringtemplate.org/wiki/display/ANTLR3/Pattern+for+returning+errors+from+ANTLR+in+data+structures,+not+STDERR)
, not sure I understand it. Hope you can help. Thanks.

-- Ching

On Thu, Dec 30, 2010 at 8:21 PM, Nick Vlassopoulos
<nvlassopoulos at gmail.com>wrote:

> Hi Ching,
>
> I am not sure if it is a legitimate statement, but what you probably want
> is the @members and @header keywords that add your code in the
> generated files.
>
> HTH,
>
> Nikos
>
> On Thu, Dec 30, 2010 at 10:53 PM, Ching <zching01 at gmail.com> wrote:
>
>> Hi,
>>
>> In a Antlr grammar file, I declared a number of variables. Is there a way
>> to
>> initialize these variables, for example, in the default constructor?
>>
>> Is below a legitimate grammar statement?
>>
>> *start:  initialization { var = new XXX();}  compilation_unit EOF*
>>
>> Thanks.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jcottam at umail.iu.edu  Tue Jan  4 17:59:08 2011
From: jcottam at umail.iu.edu (Joseph Cottam)
Date: Tue, 4 Jan 2011 20:59:08 -0500
Subject: [antlr-interest] AST loosing leaves in 3.3 vs. 3.2
In-Reply-To: <8bed6d6629fbc0b74107530aee0a9342@mail.gmail.com>
References: <AANLkTi=8UoTurrbvS9_ZJS6Pt==_mJjcPtCzNeYGvOP-@mail.gmail.com>
	<8bed6d6629fbc0b74107530aee0a9342@mail.gmail.com>
Message-ID: <AANLkTinDArMMQn7-zM2DF0aZCeQxK1JmYbf5ty1uUee_@mail.gmail.com>

Thanks for the help.  I didn't know the behavior I was employing was
undefined.  With some re-factoring I have my grammars working again.  The
refactor was more complex when the sub rule could return different root
types (I ended up adding sub-rules with predicates) and when the contents of
the new root-node depend on a value matched in the sub-rule (where I now use
a return value).  It works great though, I'm glad to know now that I was
mistaken before.

-JC


On Tue, Jan 4, 2011 at 6:54 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Your grammar is erroneous and just 'happened' to work in 3.2. The root of
> a node can only be the result of a sib rule if the subrule contains a
> single node, otherwise the results are undefined.
>
> You would need:
>
> callTarget
>  : call
>     -> ^(FUNCTION call PACK)
>  ;
>
> call
>   : ID ID ID
>   ;
>
> Which is easily constructed in all situations, even if you add an extra
> root node:
>
>
> callTarget
>  : call
>     -> ^(CALL call PACK)
>   ;
>
> call
>  : one=ID two=ID three=ID
>    -> ^(FUNCTION $one $two $three)
>  ;
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Joseph Cottam
> > Sent: Tuesday, January 04, 2011 3:48 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] AST loosing leaves in 3.3 vs. 3.2
> >
> > Upgrading from v3.2 to v3.3, I started loosing the leaves in some of my
> > rules.  All affected rule-pairs have the same structure: The results of
> > called rule becomes the root of the AST returned by the rule doing the
> > calling AND the calling rule adds more nodes to the AST (not just
> > returning the results of the called rule).  In the example below, the
> > result of matching the "call" rule is truncated to just its root when
> > it is referred to in the construction of the AST for "callTarget."  I
> > feel like I am missing something simple, but I can't figure out what
> > part of the v3.3 release notes covers this circumstance.
> >
> > 3.2 output: (FUNCTION first second third PACK)
> > 3.3 output: (FUNCTION PACK)
> >
> > -Joseph A. Cottam
> >
> >
> > input------------------------
> > first second third
> >
> > grammar-------------------
> > grammar Error;
> >
> > options {
> >   language = Java;
> >   output=AST;
> > }
> >
> > tokens {FUNCTION; PACK;}
> >
> > callTarget
> >  : call
> >     -> ^(call PACK)
> >  ;
> >
> > call
> >   : one=ID two=ID three=ID
> >     -> ^(FUNCTION $one $two $three)
> >   ;
> >
> > ID    : ('a'..'z' | 'A'..'Z' | '_') ('.'? ('a'..'z' | 'A'..'Z' | '_' |
> > '0'..'9'))*;
> > WS  : (' '|'\r'|'\t'|'\u000C'|'\n')+ {skip();};
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>

From ronburk at gmail.com  Wed Jan  5 05:43:19 2011
From: ronburk at gmail.com (Ron Burk)
Date: Wed, 5 Jan 2011 05:43:19 -0800
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <3CA62850-10D4-4B3B-8028-F17BA2340164@cs.usfca.edu>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>
	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
	<009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>
	<AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>
	<AANLkTinsjsgN1=Z0-jv-5X-13_DBYVhUcp+y5fM6On02@mail.gmail.com>
	<3CA62850-10D4-4B3B-8028-F17BA2340164@cs.usfca.edu>
Message-ID: <AANLkTi=_8A=MkvXOR6BRh7xmTvfDZFzKn=NV3Go6Xivm@mail.gmail.com>

> That's not a bug but a limitation of Java and most other targets; I think the book has a good description.

If we're talking about bug#2 (skip ahead if not! :-), then...

After (re)reading the book, the only thing I
could figure out you might be referring to is the final
paragraphs of Chapter 13. But those are about the
issues pretty well covered by Sam's prior post of limitations.
The predicate "true" does not "reference anything not
visible to all rules" or violate any other constraint
I've heard of :-).

Maybe a more extreme example can make the
problem clear:

----------------------------------------------------------
// this grammar is for this simple language:
// '(' ID+ ')' ( ':' ID+ )?
grammar hoist1;

WS  : (' '|'\t'|'\n'|'\r')+ {skip();};
ID  : ('a'..'z')+;

start : mainprog optional? EOF;

mainprog : '(' args ')';
args : ID ID* ;

// I've decided to "disable" this optional construct
optional: {false}?=> ':' element element;
element : {true}?=> args ;
----------------------------------------------------------

* predicates completely safe (only true/false)
* compiles (target language has no complaints)
* works sometimes! (accepts string "( x )")
* fails other times.

(the {false} predicate is there just to make the
resulting output as disturbingly incorrect as
possible; you can remove it and still get the
same wrong output).

When given an input string of "( x x )" the
generated parser says:
   line 1:4 extraneous input 'x' expecting ')'
The reason is that the predicate is being
executed far outside its correct
context. Predicate hoisting is significantly
harder than the current ANTLR algorithm
thinks it is. :-)  I really don't see any way
to implement it correctly without either
nontrivial grammar transformations or
a runtime stack of active predicates.

But all that's about bug#2.

Back to bug#1, where hopefully it should be much
simpler for me to see if I'm confused.

> I get these results with 3.3.  Hmm... it looks like the decision for FOO FOO* and FOO+ also gets the same thing. which version are you using?

The header line of my ANTLR output says:
   // $ANTLR 3.3 Nov 30, 2010 12:50:56 Simple.g 2011-01-04 12:20:14

Maybe you're saying the DFA is the same so "no problem",
while I'm saying the two parsers accept different languages,
so "problem"?

Here's the exact file I just tested:

grammar hoist1;

WS  : (' '|'\t'|'\n'|'\r')+ {skip();};
ID  : ('a'..'z')+;

start : element* EOF ;
element : {true}?=> pre ;
pre : ID+ ;


When I give this grammar an input string of "x", I get:

line 1:0 required (...)+ loop did not match anything at input 'x'

When I change change the "ID+" to "ID ID*", the resulting
parser happily accepts any number of space-separated x's.
Is that not the same result you get?

From sharwell at pixelminegames.com  Wed Jan  5 07:50:46 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 5 Jan 2011 09:50:46 -0600
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <AANLkTi=_8A=MkvXOR6BRh7xmTvfDZFzKn=NV3Go6Xivm@mail.gmail.com>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>	<009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>	<AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>	<AANLkTinsjsgN1=Z0-jv-5X-13_DBYVhUcp+y5fM6On02@mail.gmail.com>	<3CA62850-10D4-4B3B-8028-F17BA2340164@cs.usfca.edu>
	<AANLkTi=_8A=MkvXOR6BRh7xmTvfDZFzKn=NV3Go6Xivm@mail.gmail.com>
Message-ID: <018e01cbacf0$52389700$f6a9c500$@pixelminegames.com>

Here's my analysis of the problem. First and foremost, I'm treating the rule
"args" as though it were written "args : ID+;"

Problem 1: The rule "args" is not always executed behind the same predicate.
This is easily corrected by adding a second rule "args2" and modifying the
"element" rule as follows:

element : {true}? => args2;
args2 : ID+;

Problem 2: If we take a detailed look at the decision making for "optional",
we see a major problem. Removing predicates and inlining, we see the
following syntactic structure:

optional : ':' ID+ ID+;

After matching one ID element for the first instance of "ID+", if the next
input element is "ID", the grammar must decide whether to match that with
the first instance of "ID+" or to move on to the second. Without predicates,
this is a grammatical error. However, the predicates you provided clearly
indicate that on the condition "true", the loop should be terminated and
move on to the next instance of "ID+" (contained in the second "element").
This condition *must* be checked as part of the loop condition in the rule
"args".

Solution: Ignoring the only truly acceptable solution of not using syntactic
predicates, you should add the following to my list of rules about semantic
predicates.

1. A semantic predicate which unconditionally evaluates to "true" during
*any single execution of the grammar* behaves almost as though it weren't
included in the grammar. By removing the predicate from the rule "element",
the grammar compiler reports a warning for the rule "args" which clearly
indicates the rule "args" will not behave as you expect. This is the
specific rule where the decision error was observed - the semantic predicate
suppressed a critical warning.

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ron Burk
Sent: Wednesday, January 05, 2011 7:43 AM
To: ANTLR Interest
Subject: Re: [antlr-interest] the nihilistic circle hoist

> That's not a bug but a limitation of Java and most other targets; I think
the book has a good description.

If we're talking about bug#2 (skip ahead if not! :-), then...

After (re)reading the book, the only thing I could figure out you might be
referring to is the final paragraphs of Chapter 13. But those are about the
issues pretty well covered by Sam's prior post of limitations.
The predicate "true" does not "reference anything not visible to all rules"
or violate any other constraint I've heard of :-).

Maybe a more extreme example can make the problem clear:

----------------------------------------------------------
// this grammar is for this simple language:
// '(' ID+ ')' ( ':' ID+ )?
grammar hoist1;

WS  : (' '|'\t'|'\n'|'\r')+ {skip();};
ID  : ('a'..'z')+;

start : mainprog optional? EOF;

mainprog : '(' args ')';
args : ID ID* ;

// I've decided to "disable" this optional construct
optional: {false}?=> ':' element element; element : {true}?=> args ;
----------------------------------------------------------

* predicates completely safe (only true/false)
* compiles (target language has no complaints)
* works sometimes! (accepts string "( x )")
* fails other times.

(the {false} predicate is there just to make the resulting output as
disturbingly incorrect as possible; you can remove it and still get the same
wrong output).

When given an input string of "( x x )" the generated parser says:
   line 1:4 extraneous input 'x' expecting ')'
The reason is that the predicate is being executed far outside its correct
context. Predicate hoisting is significantly harder than the current ANTLR
algorithm thinks it is. :-)  I really don't see any way to implement it
correctly without either nontrivial grammar transformations or a runtime
stack of active predicates.

But all that's about bug#2.

Back to bug#1, where hopefully it should be much simpler for me to see if
I'm confused.

> I get these results with 3.3.  Hmm... it looks like the decision for FOO
FOO* and FOO+ also gets the same thing. which version are you using?

The header line of my ANTLR output says:
   // $ANTLR 3.3 Nov 30, 2010 12:50:56 Simple.g 2011-01-04 12:20:14

Maybe you're saying the DFA is the same so "no problem", while I'm saying
the two parsers accept different languages, so "problem"?

Here's the exact file I just tested:

grammar hoist1;

WS  : (' '|'\t'|'\n'|'\r')+ {skip();};
ID  : ('a'..'z')+;

start : element* EOF ;
element : {true}?=> pre ;
pre : ID+ ;


When I give this grammar an input string of "x", I get:

line 1:0 required (...)+ loop did not match anything at input 'x'

When I change change the "ID+" to "ID ID*", the resulting parser happily
accepts any number of space-separated x's.
Is that not the same result you get?

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ronburk at gmail.com  Wed Jan  5 13:02:36 2011
From: ronburk at gmail.com (Ron Burk)
Date: Wed, 5 Jan 2011 13:02:36 -0800
Subject: [antlr-interest] the nihilistic circle hoist
In-Reply-To: <018e01cbacf0$52389700$f6a9c500$@pixelminegames.com>
References: <AANLkTim9KJDyNhLMVZbSbdYw40N5YXRdcP9GeX8=qQXB@mail.gmail.com>
	<AANLkTi=g_hMdokGPyy3QaWEOMmo9BwVPyF_dkhF3PAq5@mail.gmail.com>
	<009b01cbaa9d$c37d7e80$4a787b80$@pixelminegames.com>
	<AANLkTinZ5_m8LsqPm6Skf_BaTbAtz-E8hKiX+yKSrzBP@mail.gmail.com>
	<AANLkTinsjsgN1=Z0-jv-5X-13_DBYVhUcp+y5fM6On02@mail.gmail.com>
	<3CA62850-10D4-4B3B-8028-F17BA2340164@cs.usfca.edu>
	<AANLkTi=_8A=MkvXOR6BRh7xmTvfDZFzKn=NV3Go6Xivm@mail.gmail.com>
	<018e01cbacf0$52389700$f6a9c500$@pixelminegames.com>
Message-ID: <AANLkTi=CRELymb=DX4_yse-_opTnBnugL_Dsaatdfp8x@mail.gmail.com>

> First and foremost, I'm treating the rule
> "args" as though it were written "args : ID+;"

Fine in theory. In practice, it conflates two distinct bugs
(which I say because the resulting parser rejects the
entire universe of possible input strings, which is quite
different behavior, and X X* should never behave
differently than X+, to my way of thinking).

> Problem 1: The rule "args" is not always executed behind the same predicate.
> This is easily corrected by adding a second rule "args2"

I agree you could always work around the hoisting bug by
rewriting your grammar. That's why I allow it might
be possible to implement hoisting correctly via grammar
transformations.

> This condition *must* be checked as part of the loop condition in the rule
> "args".

Not quite. To implement hoisting correctly, the predicate *must*
be fired when "args" is invoked via derivation from "optional"
and must *not* be fired when "args" is invoked via derivation
from "mainprog". This is what is broken. Antlr is, so to say,
combining states that cannot be combined (which is why
rewriting the grammar to split one nonterminal into
two works -- it breaks apart states that ANTLR
is erroneously combining, which can arise when a predicate is
hoisted into a nullable nonterminal via its FOLLOW set).

> Solution: Ignoring the only truly acceptable solution of not using syntactic
> predicates, you should add the following to my list of rules about semantic
> predicates.

I'm not sure how that translates into a generic rule, but if it's
"don't use a sympred if removing it causes a warning", then
it seems like the new list of constraints has eliminated virtually
all practical uses. Presumably, you shed no tears. :-)

Yet another way to look at why this is a fundamental
implementation flaw is to use the predicate hoisting
bug to inject two unrelated predicates into
a third unrelated nonterminal:

grammar hoist1;

WS  : (' '|'\t'|'\n'|'\r')+ {skip();};
ID  : ('a'..'z')+;

start : mainprog optional? EOF;

mainprog : '(' args ')';
args : ID ID*;

optional: ':'  args element ':' args element2;
element : {true}?=>args2;
element2: {false}?=>args3;
args2 : ID ID*;
args3 : ID ID* ;

This will inject two different unrelated predicates into "args".
When you look at the resulting code for args,
well, it's a bit bonkers:

    public final void args() throws RecognitionException {
        try {
            // hoist1.g:11:6: ( ID ( ID )* )
            // hoist1.g:11:8: ID ( ID )*
            {
            match(input,ID,FOLLOW_ID_in_args69);
            // hoist1.g:11:11: ( ID )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==ID) ) {
                    int LA2_2 = input.LA(2);

                    if ( (LA2_2==ID) &&
((!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||(false)||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||(true)||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false))))||!((((true)||(false)))))))
{
                        int LA2_3 = input.LA(3);

                        if ( (!((((false)||(true))))) ) {
                            alt2=1;
                        }

But my point here is that the algorithm clearly thinks it should be
calculating a Boolean expression that is based on two unrelated
predicates. It makes no sense to be combining unrelated predicates
into a single decision. (note that element and element2 are siblings
and have no part of their parse trees in common -- their predicates
are not relatable to each other).

For hoisting to work correctly in these cases,
the code would have to be distinguishing at runtime which of the
(arbitrarily many) unrelated predicates (or none of them!) is
"active" at that moment in the parse. Or else implicitly rewrite
the grammar beforehand to avoid the problem.

From ima.fakeuser at yahoo.com  Thu Jan  6 09:14:11 2011
From: ima.fakeuser at yahoo.com (Ima Fakeuser)
Date: Thu, 6 Jan 2011 09:14:11 -0800 (PST)
Subject: [antlr-interest] ANTLRWorks user registration and firewalls
Message-ID: <407732.46934.qm@web121408.mail.ne1.yahoo.com>

Jim Mayer wrote the following on Mon Jan 18 10:38:00 PST 2010:

> I'm having difficulty getting ANTLRWorks to start up at work.  At home,
> the system works fine.  A quick inspection of the code suggests that the
> problem is that ANTLRWorks tracks usage statistics and insists upon
> getting an "ID" from a site at antlr.org as part of its initial startup
> (this happens even if you ask it to not send information during the
> "Welcome to ANTLRWorks" dialog).
> 
> Has anyone else run into this problem?  I did some web searches and
> didn't see any.

I just started playing around with ANTLR and ran into this same problem
because I'm behind a corporate firewall.
In case it's not obvious to everyone by now, here's the solution.

  java -Dhttp.proxyHost=_your_proxy_._your_domain_.com \
       -Dhttp.proxyPort=_your_proxy_port_number_ \
       -jar antlrworks-1.4.2.jar

As to your privacy concerns, it looks like the registration process sends an 
http request like this:

    GET 
http://www.antlr.org/stats/register?who=0&sector=0&devtool=5&yearslang=2&yearsprog=1&residing=USA&caffeine=coffee&version=1.4.2
 HTTP/1.1
    User-Agent: Java/1.5.0_01
    Host: www.antlr.org
    Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
    Proxy-Connection: keep-alive
    Content-type: application/x-www-form-urlencoded

Which will receive a response like this:

    HTTP/1.1 200 OK
    Date: Thu, 06 Jan 2011 16:47:47 GMT
    Cache-Control: no-store
    Expires: Thu, 01 Jan 1970 00:00:00 GMT
    Pragma: no-cache
    Content-Type: text/html; charset=UTF-8
    Via: 1.1 _yourhost_._yourdomain_.com
    Content-Length: 14
    Proxy-Connection: Keep-Alive
    Connection: Keep-Alive
    Set-Cookie: JSESSIONID=_a_large_hex_value_; Path=/

    _a_large_integer_value_

And then it creates the following file:

    $HOME/.java/.userPrefs/org/antlr/works/prefs.xml

Specifically, it creates the item <entry key="PREF_SERVER_ID" 
value="_the_large_integer_value_from_above_"/>
in addition to lots of other XML data.

Then it seems to not talk back to antlr.org unless you do Help->Submit 
Statistics

    GET 
http://www.antlr.org/stats/notify?ID=_the_large_integer_value_from_above_&type=antlrworks&data=1.4.2%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090%090
 HTTP/1.1
    User-Agent: Java/1.5.0_01
    Host: www.antlr.org
    Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
    Proxy-Connection: keep-alive
    Content-type: application/x-www-form-urlencoded

There could be other communication that happens, but I didn't look through all 
the code or sniff the wire long enough.

Bottom line, it seems pretty innocuous, but I don't see any compelling reason 
for them to phone home like that.

To prevent unwanted tracking, you could periodically delete antlrworks' 
prefs.xml file.


      

From alexander.herz at mytum.de  Fri Jan  7 04:58:34 2011
From: alexander.herz at mytum.de (Alexander Herz)
Date: Fri, 07 Jan 2011 13:58:34 +0100
Subject: [antlr-interest] match parser rule inside every rule (compile
 time reflections)
In-Reply-To: <407732.46934.qm@web121408.mail.ne1.yahoo.com>
References: <407732.46934.qm@web121408.mail.ne1.yahoo.com>
Message-ID: <4D270DFA.5040307@mytum.de>

Hi,

I'm trying to implement compile time reflections, so inside the language 
(imagine java) there is a preprocessor like language which can access 
static properties of elements defined in the language:

Example:

class Test
{
     int i,j;

     Test()
     {
         //iterates over all members of Test
         #for_all($m,Test at members)
         {
             $m=0;
         }
         //will be evaluated to:
         i=0;
         j=0;
     }
}

It doesn't make sense to implement this in a preprocessor since the full 
AST is needed to process the #for_all directive.
Therefore, I'd like to implement it in the grammar of the language. Now, 
the problem is that the #for_all (and other related directives) can be 
placed anywhere (outside of classes, etc). So I would need to put the 
rule for #for_all into all the rules inside my grammar which seems ugly 
and cumbersome.

Any ideas how to solve this?

Thx,
Alex



From maxgbr at hotmail.it  Fri Jan  7 11:52:35 2011
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Fri, 7 Jan 2011 20:52:35 +0100
Subject: [antlr-interest] Antrr 3.3 template Output
Message-ID: <BLU0-SMTP12087609DC93E3B1320E378B00B0@phx.gbl>


  Hi, with Antlr 3.3 CSharp i try to use output = template, but 
generated class not compile because of a creation of STAttrMap object.
Looking in the ST.stg at line 132 / 139 / 146 i found 3 template wich 
create a new istance of STAttrMap object, but i can't found in Antlr 3.3 
runtime dll.
Am i missing something or is an issue??

Best regards
Max

From gromer at google.com  Fri Jan  7 16:06:16 2011
From: gromer at google.com (Geoffrey Romer)
Date: Fri, 7 Jan 2011 16:06:16 -0800
Subject: [antlr-interest] Multiple-target parsers,
	and extending without overriding
In-Reply-To: <d22cb9d1ec56963e74962ca74f972378@mail.gmail.com>
References: <AANLkTi=4oEOBAWJ3+YzpbCFuJhMsSVWC4BEFDCSawUWd@mail.gmail.com>
	<d22cb9d1ec56963e74962ca74f972378@mail.gmail.com>
Message-ID: <AANLkTi=L4CAUWZzmd_aHw6Vg+1Xp3v3pF9M-Y4UXV2-G@mail.gmail.com>

On Tue, Jan 4, 2011 at 12:59 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Geoffrey Romer
> > Sent: Tuesday, January 04, 2011 12:33 PM
> > To: antlr-interest
> > Cc: theov at google.com
> > Subject: [antlr-interest] Multiple-target parsers, and extending
> > without overriding
> >
> > Hi-
> >
> > I'm new to ANTLR, and I'm trying to evaluate its suitability for a
> > project I'm working on. I'd appreciate help with a few questions:
> >
> > - What is the status of C++ support? The wiki indicates that C++
> > support is coming "later in 2008", but this is obviously out of date.
>
>
> Compile the C output as C++, keep custom code and actions entirely out of
> the parser and produce AST outputs.
>
> >
> > - One goal of the project is to provide cross-platform parsing and
> > unparsing support, i.e. to generate parsers and unparsers in multiple
> > target languages (primarily C++ and Java) from a single representation
> > of the grammar. As far as I can see, the only way to accomplish this in
> > ANTLR is to provide a grammar with AST output type which uses only
> > rewrite rules and AST operators (and, for unparsing, a tree grammar
> > with template output type), with no target-language code at all.
>
> Actually I use source code control for this. Start with a base definition
> of all your grammars without any actions, then branch to specific targets
> and add any target specific code.
>
> > However, I'm not sure this is feasible; many ANTLR features (e.g.
> > attributes and predicates, custom error handling) and techniques (e.g.
> > implementing case insensitivity or keywords-as-identifiers) require use
> > of a specific target language. Is this approach workable? Are there
> > better options I'm overlooking?
>
> You keep all such code outside the grammar and within your application
> code.


But that seems like it's not always possible. So far as I can tell, there's
no way to keep syntactic or semantic predicates outside the grammar (now
would it be very desirable if you could). Keeping rule arguments and return
values outside the grammar is a contradiction in terms. I can't even find a
way to skip whitespace without writing code in the target language. Am I
missing something?


> There are few differences if you do that. Also use:
>
> id: ID | KEYWORD1 | KEYWORD2 ... etc;
>
> And not comparison code on ID to workout keywords.
>
> >
> > - Another goal of the project is to provide a unified parsing framework
> > for a family of closely related but distinct languages (specifically,
> > SQL dialects).
>
> You and everyone remotely interested in SQL ;)
>
> > We want to be able to express the language grammars in
> > terms of an inheritance hierarchy, where each language (other than the
> > base) is specified in terms of its differences from the parent
> > language. This seems like a natural fit for ANTLR's support for
> > composite grammars, but I see two drawbacks with that approach: first,
>
> SQL dialects are not really compatible enough to do that.
>
> > the languages may differ in both lexical structure and syntax; since
> > combined grammars cannot inherit from other combined grammars, this
> > seems to imply that we'd need to maintain separate, parallel
> > hierarchies of lexer and parser grammars, which are combined only in
> > the leaves. Is there a cleaner solution? Second, the composition
> > mechanism doesn't seem to support extending a grammar with new
> > productions; only overriding existing productions.
>
>
> Yes. Source code control is a better option here. Especially if you use
> one that is good at branches such as perforce.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From r.b.lists at gmx.net  Sat Jan  8 11:05:46 2011
From: r.b.lists at gmx.net (r.b.lists at gmx.net)
Date: Sat, 08 Jan 2011 20:05:46 +0100
Subject: [antlr-interest] adding a subtree to the left side of a rewrite
 rule which doesn't have a corresponding left side element ?
Message-ID: <4D28B58A.5040001@gmx.net>

Hello All,

Sorry for the confusing title...

I'm trying to build an AST via rewrite rules.

The input is a DSL which contains a number of possible constructs, 
including a description of state transitions.

I'd like to build a list 1of all the states mentioned and include that 
list in the AST as something like ^( SL states+ )

What is the best way to do this?

I tried to build a separate rule to extract the states from the input 
and insert it at the right side, but Antlr complains about referencing 
something on the right side which doesn't show up on the left side...

example:

program : bla1 bla2 bla3 -> ^( 'P' bla1 bla2 newSubTree bla3 ) ;

leads to an error...

Then i tried to set up a global scope and collect all the names in it , 
but i didn't find a way to transfer the list into a subtree from within 
the grammar...

Do i really have to build the sub-tree by hand and include it manually, 
or is there a more efficient way?

Thanks,
R.

From parrt at cs.usfca.edu  Sat Jan  8 11:39:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 8 Jan 2011 11:39:52 -0800
Subject: [antlr-interest] adding a subtree to the left side of a rewrite
	rule which doesn't have a corresponding left side element ?
In-Reply-To: <4D28B58A.5040001@gmx.net>
References: <4D28B58A.5040001@gmx.net>
Message-ID: <F4B39C3A-0366-4CCF-A7F8-5A9D85BA78E0@cs.usfca.edu>

hi. search for keyword "imaginary token" or imaginary  node.
Ter
On Jan 8, 2011, at 11:05 AM, r.b.lists at gmx.net wrote:

> Hello All,
> 
> Sorry for the confusing title...
> 
> I'm trying to build an AST via rewrite rules.
> 
> The input is a DSL which contains a number of possible constructs, 
> including a description of state transitions.
> 
> I'd like to build a list 1of all the states mentioned and include that 
> list in the AST as something like ^( SL states+ )
> 
> What is the best way to do this?
> 
> I tried to build a separate rule to extract the states from the input 
> and insert it at the right side, but Antlr complains about referencing 
> something on the right side which doesn't show up on the left side...
> 
> example:
> 
> program : bla1 bla2 bla3 -> ^( 'P' bla1 bla2 newSubTree bla3 ) ;
> 
> leads to an error...
> 
> Then i tried to set up a global scope and collect all the names in it , 
> but i didn't find a way to transfer the list into a subtree from within 
> the grammar...
> 
> Do i really have to build the sub-tree by hand and include it manually, 
> or is there a more efficient way?
> 
> Thanks,
> R.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From r.b.lists at gmx.net  Sat Jan  8 12:16:24 2011
From: r.b.lists at gmx.net (Roland Braito)
Date: Sat, 08 Jan 2011 21:16:24 +0100
Subject: [antlr-interest] adding a subtree to the left side of a rewrite
 rule which doesn't have a corresponding left side element ?
In-Reply-To: <F4B39C3A-0366-4CCF-A7F8-5A9D85BA78E0@cs.usfca.edu>
References: <4D28B58A.5040001@gmx.net>
	<F4B39C3A-0366-4CCF-A7F8-5A9D85BA78E0@cs.usfca.edu>
Message-ID: <20110108201624.280060@gmx.net>

Hi!

thanks for the quick reply!

However, the 'SL' token is not the problem, it's putting the list into a subtree and including that in the rewrite-rule's output.

I'm sure the answer is very obvious, but i'm unable to see it right now.


Thanks,
R.

 
-------- Original-Nachricht --------
> Datum: Sat, 8 Jan 2011 11:39:52 -0800
> Von: Terence Parr <parrt at cs.usfca.edu>
> An: r.b.lists at gmx.net
> CC: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] adding a subtree to the left side of a rewrite rule which doesn\'t have a corresponding left side element ?

> hi. search for keyword "imaginary token" or imaginary  node.
> Ter
> On Jan 8, 2011, at 11:05 AM, r.b.lists at gmx.net wrote:
> 
> > Hello All,
> > 
> > Sorry for the confusing title...
> > 
> > I'm trying to build an AST via rewrite rules.
> > 
> > The input is a DSL which contains a number of possible constructs, 
> > including a description of state transitions.
> > 
> > I'd like to build a list 1of all the states mentioned and include that 
> > list in the AST as something like ^( SL states+ )
> > 
> > What is the best way to do this?
> > 
> > I tried to build a separate rule to extract the states from the input 
> > and insert it at the right side, but Antlr complains about referencing 
> > something on the right side which doesn't show up on the left side...
> > 
> > example:
> > 
> > program : bla1 bla2 bla3 -> ^( 'P' bla1 bla2 newSubTree bla3 ) ;
> > 
> > leads to an error...
> > 
> > Then i tried to set up a global scope and collect all the names in it , 
> > but i didn't find a way to transfer the list into a subtree from within 
> > the grammar...
> > 
> > Do i really have to build the sub-tree by hand and include it manually, 
> > or is there a more efficient way?
> > 
> > Thanks,
> > R.
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From parrt at cs.usfca.edu  Sat Jan  8 12:30:33 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 8 Jan 2011 12:30:33 -0800
Subject: [antlr-interest] adding a subtree to the left side of a rewrite
	rule which doesn't have a corresponding left side element ?
In-Reply-To: <20110108201624.280060@gmx.net>
References: <4D28B58A.5040001@gmx.net>
	<F4B39C3A-0366-4CCF-A7F8-5A9D85BA78E0@cs.usfca.edu>
	<20110108201624.280060@gmx.net>
Message-ID: <44609A16-450B-48B2-B79C-026E60D5311E@cs.usfca.edu>

if newSubTree is some random tree you create not with antlr, then do

>> program : bla1 bla2 bla3 -> ^( 'P' bla1 bla2 {newSubTree} bla3 ) ;

T
On Jan 8, 2011, at 12:16 PM, Roland Braito wrote:

> Hi!
> 
> thanks for the quick reply!
> 
> However, the 'SL' token is not the problem, it's putting the list into a subtree and including that in the rewrite-rule's output.
> 
> I'm sure the answer is very obvious, but i'm unable to see it right now.
> 
> 
> Thanks,
> R.
> 
> 
> -------- Original-Nachricht --------
>> Datum: Sat, 8 Jan 2011 11:39:52 -0800
>> Von: Terence Parr <parrt at cs.usfca.edu>
>> An: r.b.lists at gmx.net
>> CC: antlr-interest at antlr.org
>> Betreff: Re: [antlr-interest] adding a subtree to the left side of a rewrite rule which doesn\'t have a corresponding left side element ?
> 
>> hi. search for keyword "imaginary token" or imaginary  node.
>> Ter
>> On Jan 8, 2011, at 11:05 AM, r.b.lists at gmx.net wrote:
>> 
>>> Hello All,
>>> 
>>> Sorry for the confusing title...
>>> 
>>> I'm trying to build an AST via rewrite rules.
>>> 
>>> The input is a DSL which contains a number of possible constructs, 
>>> including a description of state transitions.
>>> 
>>> I'd like to build a list 1of all the states mentioned and include that 
>>> list in the AST as something like ^( SL states+ )
>>> 
>>> What is the best way to do this?
>>> 
>>> I tried to build a separate rule to extract the states from the input 
>>> and insert it at the right side, but Antlr complains about referencing 
>>> something on the right side which doesn't show up on the left side...
>>> 
>>> example:
>>> 
>>> program : bla1 bla2 bla3 -> ^( 'P' bla1 bla2 newSubTree bla3 ) ;
>>> 
>>> leads to an error...
>>> 
>>> Then i tried to set up a global scope and collect all the names in it , 
>>> but i didn't find a way to transfer the list into a subtree from within 
>>> the grammar...
>>> 
>>> Do i really have to build the sub-tree by hand and include it manually, 
>>> or is there a more efficient way?
>>> 
>>> Thanks,
>>> R.
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From aleiby.antlr at gmail.com  Sat Jan  8 12:37:24 2011
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sat, 8 Jan 2011 12:37:24 -0800
Subject: [antlr-interest] array list action attributes
In-Reply-To: <204ce80380ca22db4205c82b0e9c0008@mail.gmail.com>
References: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>
	<204ce80380ca22db4205c82b0e9c0008@mail.gmail.com>
Message-ID: <AANLkTinYW0=3zfffbkZK6k2CWJsgbNMMOCLpAitt0cF0@mail.gmail.com>

I would prefer to handle the actions as suggested above, but in most cases I
need to know how many elements exist first.  So what I've been doing is
collecting them, getting the count, then processing them.

This is all in a tree walker grammar.  Is there an easy way to write out the
count in the lexer/parser grammar rewrite rules so it's available to the
tree walker without having to gather them first as I've been doing?

For example, I'd like to be able to do something like this (in the
lexer/parser grammar):

functionLiteral
: 'function' name=NameLiteral? args=parameters body=block
-> ^( FUNC $name? $args->count $args $body )
;

But the $args->count obviously won't work since the output tree is
homogenous.  I imagine there might be a way to create a dummy node with the
value as a payload, but I haven't tracked down the syntax for that yet.

Perhaps I'm still going about this the wrong way?

> the vector access functions are all documented in the API and there
> a copious examples if you read through the runtime source code.

Yep.  I was more hoping that there was higher level syntax in the ANTLR
language itself that could be used to autogenerate the API calls when
working with those vectors (making the grammar a bit more portable in the
process).  I was aware of the single element support (e.g. $arg.text), and
hoped I had simply missed the multi-value support.  Failing that, I was
familiar with the SCOPE macros that the C target provides for hiding some of
the data structure API details, and imagined similar macros had been created
for working with the += output that I had maybe missed.  It sounds like
neither of those are the case, so working directly with the API calls is the
correct/only path currently.

Thanks!

On Mon, Jan 3, 2011 at 10:27 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> The += syntax is really only used for tree rewriting, but the vector
> access functions are all documented in the API and there a copious
> examples if you read through the runtime source code.
>
> Unless you don't care too much about memory (memory for the STRINGs is not
> released until you free the parser), then I would just get the pointers
> from the token directly and copy whatever text you want from there.
>
> However, I think that your confusion here is that you are gathering a list
> then trying to process it afterwards, where I think you will find it more
> useful to do this (and note that you use + as otherwise if there are no
> IDs then it is just a TYPE alt):
>
> : TYPE // No IDs
> | ^(TYPE
>
>      (
>        i=ID { some code that does $i.whatever }
>      )+
>  )
>  { action code to finish up }
> ;
>
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Aaron Leiby
> > Sent: Sunday, January 02, 2011 7:30 PM
> > To: antlr-interest
> > Subject: [antlr-interest] array list action attributes
> >
> > ANTLR3 allows labeling attributes for referencing in actions.
> >
> > Example:
> >
> > decl: type id=ID ';' { print "var" + $id.text; }
> >
> > With the C language target, the $id.text gets converted nicely into:
> >
> > (id->getText(id))
> >
> > However, if you have more than one attribute:
> >
> > decl: ^( TYPE ids+=ID* )
> >
> > ...$ids becomes a pANTLR3_VECTOR, and it appears those helpful
> > attributes no longer work?
> >
> > I was hoping something like $ids[i].text would get automatically
> > converted.
> >  Instead, I had to dig into the implementation a bit and hand-expand it
> > to:
> >
> > pANTLR_BASE_TREE id = (pANTLR_BASE_TREE)$ids->get($ids, i); const char*
> > name = (const char*)id->getText(id)->chars;
> >
> > So, I guess a couple questions:
> >
> > 1) Does the java language option suffer the same fate?  (i.e. ANTLR3
> > simply does not provide syntax for working with attributes on multi-
> > value labels?)
> > 2) Does the C API provide some nice macros I may have missed for making
> > this less gross?  (e.g. its set of SCOPE accessors)
> >
> > Thanks,
> > Aaron
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From aleiby.antlr at gmail.com  Sat Jan  8 12:48:19 2011
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sat, 8 Jan 2011 12:48:19 -0800
Subject: [antlr-interest] array list action attributes
In-Reply-To: <AANLkTinYW0=3zfffbkZK6k2CWJsgbNMMOCLpAitt0cF0@mail.gmail.com>
References: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>
	<204ce80380ca22db4205c82b0e9c0008@mail.gmail.com>
	<AANLkTinYW0=3zfffbkZK6k2CWJsgbNMMOCLpAitt0cF0@mail.gmail.com>
Message-ID: <AANLkTimMFu+Mkw=OK05cEKp31nWGt-_CMpCMmgj3JT3w@mail.gmail.com>

Sorry, that was a bad example.  I would either hoist the 'parameters' rule
up into 'functionLiteral' to keep track of the count locally or more likely
just have the 'parameters' rule return the count.

functionLiteral
: 'function' name=NameLiteral? args=parameters body=block
-> ^( FUNC $name? $args.count $args $body )
;

The real point is that the output AST is composed of tree nodes, so you
can't just mix an integer in with that without wrapping it up in a node
first, and I haven't figured out how to do that (if it's even something
supported by ANTLR).

On Sat, Jan 8, 2011 at 12:37 PM, Aaron Leiby <aleiby.antlr at gmail.com> wrote:

> I would prefer to handle the actions as suggested above, but in most cases
> I need to know how many elements exist first.  So what I've been doing is
> collecting them, getting the count, then processing them.
>
> This is all in a tree walker grammar.  Is there an easy way to write out
> the count in the lexer/parser grammar rewrite rules so it's available to the
> tree walker without having to gather them first as I've been doing?
>
> For example, I'd like to be able to do something like this (in the
> lexer/parser grammar):
>
> functionLiteral
> : 'function' name=NameLiteral? args=parameters body=block
>  -> ^( FUNC $name? $args->count $args $body )
> ;
>
> But the $args->count obviously won't work since the output tree is
> homogenous.  I imagine there might be a way to create a dummy node with the
> value as a payload, but I haven't tracked down the syntax for that yet.
>
> Perhaps I'm still going about this the wrong way?
>
> > the vector access functions are all documented in the API and there
> > a copious examples if you read through the runtime source code.
>
> Yep.  I was more hoping that there was higher level syntax in the ANTLR
> language itself that could be used to autogenerate the API calls when
> working with those vectors (making the grammar a bit more portable in the
> process).  I was aware of the single element support (e.g. $arg.text), and
> hoped I had simply missed the multi-value support.  Failing that, I was
> familiar with the SCOPE macros that the C target provides for hiding some of
> the data structure API details, and imagined similar macros had been created
> for working with the += output that I had maybe missed.  It sounds like
> neither of those are the case, so working directly with the API calls is the
> correct/only path currently.
>
> Thanks!
>
> On Mon, Jan 3, 2011 at 10:27 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> The += syntax is really only used for tree rewriting, but the vector
>> access functions are all documented in the API and there a copious
>> examples if you read through the runtime source code.
>>
>> Unless you don't care too much about memory (memory for the STRINGs is not
>> released until you free the parser), then I would just get the pointers
>> from the token directly and copy whatever text you want from there.
>>
>> However, I think that your confusion here is that you are gathering a list
>> then trying to process it afterwards, where I think you will find it more
>> useful to do this (and note that you use + as otherwise if there are no
>> IDs then it is just a TYPE alt):
>>
>> : TYPE // No IDs
>> | ^(TYPE
>>
>>      (
>>        i=ID { some code that does $i.whatever }
>>      )+
>>  )
>>  { action code to finish up }
>> ;
>>
>>
>> Jim
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Aaron Leiby
>> > Sent: Sunday, January 02, 2011 7:30 PM
>> > To: antlr-interest
>> > Subject: [antlr-interest] array list action attributes
>> >
>> > ANTLR3 allows labeling attributes for referencing in actions.
>> >
>> > Example:
>> >
>> > decl: type id=ID ';' { print "var" + $id.text; }
>> >
>> > With the C language target, the $id.text gets converted nicely into:
>> >
>> > (id->getText(id))
>> >
>> > However, if you have more than one attribute:
>> >
>> > decl: ^( TYPE ids+=ID* )
>> >
>> > ...$ids becomes a pANTLR3_VECTOR, and it appears those helpful
>> > attributes no longer work?
>> >
>> > I was hoping something like $ids[i].text would get automatically
>> > converted.
>> >  Instead, I had to dig into the implementation a bit and hand-expand it
>> > to:
>> >
>> > pANTLR_BASE_TREE id = (pANTLR_BASE_TREE)$ids->get($ids, i); const char*
>> > name = (const char*)id->getText(id)->chars;
>> >
>> > So, I guess a couple questions:
>> >
>> > 1) Does the java language option suffer the same fate?  (i.e. ANTLR3
>> > simply does not provide syntax for working with attributes on multi-
>> > value labels?)
>> > 2) Does the C API provide some nice macros I may have missed for making
>> > this less gross?  (e.g. its set of SCOPE accessors)
>> >
>> > Thanks,
>> > Aaron
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> > email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Sat Jan  8 12:51:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 8 Jan 2011 12:51:36 -0800
Subject: [antlr-interest] array list action attributes
In-Reply-To: <AANLkTinYW0=3zfffbkZK6k2CWJsgbNMMOCLpAitt0cF0@mail.gmail.com>
References: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>
	<204ce80380ca22db4205c82b0e9c0008@mail.gmail.com>
	<AANLkTinYW0=3zfffbkZK6k2CWJsgbNMMOCLpAitt0cF0@mail.gmail.com>
Message-ID: <b3269c15154c464be3a2d748532b896d@mail.gmail.com>

Don?t do that. The count will be available to you in the tree parser as the
args will be in a vector and you can reference the count of the list. You
are trying to do too much in the parser basically.



Jim



*From:* Aaron Leiby [mailto:aleiby.antlr at gmail.com]
*Sent:* Saturday, January 08, 2011 12:37 PM
*To:* Jim Idle
*Cc:* antlr-interest
*Subject:* Re: [antlr-interest] array list action attributes



I would prefer to handle the actions as suggested above, but in most cases I
need to know how many elements exist first.  So what I've been doing is
collecting them, getting the count, then processing them.



This is all in a tree walker grammar.  Is there an easy way to write out the
count in the lexer/parser grammar rewrite rules so it's available to the
tree walker without having to gather them first as I've been doing?



For example, I'd like to be able to do something like this (in the
lexer/parser grammar):



functionLiteral

          :           'function' name=NameLiteral? args=parameters
body=block

          ->         ^( FUNC $name? $args->count $args $body )

          ;



But the $args->count obviously won't work since the output tree is
homogenous.  I imagine there might be a way to create a dummy node with the
value as a payload, but I haven't tracked down the syntax for that yet.



Perhaps I'm still going about this the wrong way?



> the vector access functions are all documented in the API and there

> a copious examples if you read through the runtime source code.



Yep.  I was more hoping that there was higher level syntax in the ANTLR
language itself that could be used to autogenerate the API calls when
working with those vectors (making the grammar a bit more portable in the
process).  I was aware of the single element support (e.g. $arg.text), and
hoped I had simply missed the multi-value support.  Failing that, I was
familiar with the SCOPE macros that the C target provides for hiding some of
the data structure API details, and imagined similar macros had been created
for working with the += output that I had maybe missed.  It sounds like
neither of those are the case, so working directly with the API calls is the
correct/only path currently.



Thanks!



On Mon, Jan 3, 2011 at 10:27 AM, Jim Idle <jimi at temporal-wave.com> wrote:

The += syntax is really only used for tree rewriting, but the vector
access functions are all documented in the API and there a copious
examples if you read through the runtime source code.

Unless you don't care too much about memory (memory for the STRINGs is not
released until you free the parser), then I would just get the pointers
from the token directly and copy whatever text you want from there.

However, I think that your confusion here is that you are gathering a list
then trying to process it afterwards, where I think you will find it more
useful to do this (and note that you use + as otherwise if there are no
IDs then it is just a TYPE alt):

: TYPE // No IDs
| ^(TYPE

     (
       i=ID { some code that does $i.whatever }
     )+
 )
 { action code to finish up }
;


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Aaron Leiby
> Sent: Sunday, January 02, 2011 7:30 PM
> To: antlr-interest
> Subject: [antlr-interest] array list action attributes
>
> ANTLR3 allows labeling attributes for referencing in actions.
>
> Example:
>
> decl: type id=ID ';' { print "var" + $id.text; }
>
> With the C language target, the $id.text gets converted nicely into:
>
> (id->getText(id))
>
> However, if you have more than one attribute:
>
> decl: ^( TYPE ids+=ID* )
>
> ...$ids becomes a pANTLR3_VECTOR, and it appears those helpful
> attributes no longer work?
>
> I was hoping something like $ids[i].text would get automatically
> converted.
>  Instead, I had to dig into the implementation a bit and hand-expand it
> to:
>
> pANTLR_BASE_TREE id = (pANTLR_BASE_TREE)$ids->get($ids, i); const char*
> name = (const char*)id->getText(id)->chars;
>
> So, I guess a couple questions:
>
> 1) Does the java language option suffer the same fate?  (i.e. ANTLR3
> simply does not provide syntax for working with attributes on multi-
> value labels?)
> 2) Does the C API provide some nice macros I may have missed for making
> this less gross?  (e.g. its set of SCOPE accessors)
>
> Thanks,
> Aaron
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From antlr at mirality.co.nz  Sat Jan  8 13:41:42 2011
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 09 Jan 2011 10:41:42 +1300
Subject: [antlr-interest] Multiple-target parsers,
 and extending  without overriding
In-Reply-To: <AANLkTi=L4CAUWZzmd_aHw6Vg+1Xp3v3pF9M-Y4UXV2-G@mail.gmail.c
 om>
References: <AANLkTi=4oEOBAWJ3+YzpbCFuJhMsSVWC4BEFDCSawUWd@mail.gmail.com>
	<d22cb9d1ec56963e74962ca74f972378@mail.gmail.com>
	<AANLkTi=L4CAUWZzmd_aHw6Vg+1Xp3v3pF9M-Y4UXV2-G@mail.gmail.com>
Message-ID: <20110108214203.50106341822A@www.antlr.org>

At 13:06 8/01/2011, Geoffrey Romer wrote:
 >But that seems like it's not always possible. So far as I can 
tell,
 >there's no way to keep syntactic or semantic predicates outside 
the
 >grammar (now would it be very desirable if you could). Keeping 
rule
 >arguments and return values outside the grammar is a 
contradiction
 >in terms. I can't even find a way to skip whitespace without
 >writing code in the target language.  Am I missing something?

One way to do it depends on how compatible the two languages are, 
particularly with method call syntax (for example, C++ and Java 
have compatible method call syntax).  If this is the case then you 
can just write every predicate as a call to a method (left 
undefined in the grammar), and then either subclass or superclass 
the resulting parser class to provide the actual 
implementation.  (You can do something similar with C, but you'd 
have to call global functions, and possibly alter the parameters a 
little.)


From aleiby.antlr at gmail.com  Sat Jan  8 14:43:07 2011
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Sat, 8 Jan 2011 14:43:07 -0800
Subject: [antlr-interest] array list action attributes
In-Reply-To: <b3269c15154c464be3a2d748532b896d@mail.gmail.com>
References: <AANLkTi=8BX3Wzro199=wTVqu2Pout8MAt4jn9Ng863BC@mail.gmail.com>
	<204ce80380ca22db4205c82b0e9c0008@mail.gmail.com>
	<AANLkTinYW0=3zfffbkZK6k2CWJsgbNMMOCLpAitt0cF0@mail.gmail.com>
	<b3269c15154c464be3a2d748532b896d@mail.gmail.com>
Message-ID: <AANLkTim=aZ6NUrvUpE5wqDWREaFqUC=dPQzkz0SkyN=9@mail.gmail.com>

The args will only be in a vector when using the += operator to gather them
rather than processing things as they are matched, right?  (Which had been
suggested not to use the += but handle them as they are matched instead -
which I agree would be preferable.)

A concrete example may help clear things up.  Here's my tree parser for
functionLiteral.

functionLiteral returns [LLVMValueRef value]
scope Symbols, Function;
@init
{
$Symbols::table = antlr3HashTableNew(11);
SCOPE_TOP(Symbols)->free = freeTable;
const char* function_name = "";
}
@after
{
BuildReturn($Function::ref);
}
: ^( FUNC ( name=NameLiteral { function_name = (const char
*)$name.text->chars; } )?
^( PARAMS args+=NameLiteral* )
{
ANTLR3_UINT32 count = $args ? $args->count : 0;
$Function::ref = CreateFunction(function_name, count);
 for (int i = 0; i < count; i++)
{
pANTLR3_BASE_TREE arg = (pANTLR3_BASE_TREE)$args->get($args, i);
const char* name = (const char *)arg->getText(arg)->chars;
LLVMValueRef value = NameParam($Function::ref, i, name);
addSymbol(ctx, value, name);
}
 addSymbol(ctx, $Function::ref, function_name);
$value = $Function::ref;
}
block[function_name] )
;

The arguments are gathered, to create a function object with the appropriate
number of parameters.  The way I would prefer this to work would be to
create the function object first, and then update the parameters as they are
matched.

functionLiteral returns [LLVMValueRef value]
scope Symbols, Function;
@init
{
$Symbols::table = antlr3HashTableNew(11);
SCOPE_TOP(Symbols)->free = freeTable;
const char* function_name = "";
int i = 0;
}
@after
{
BuildReturn($Function::ref);
}
: ^( FUNC name=NameLiteral?
{
function_name = $name ? (const char *)$name.text->chars : "";
$Function::ref = CreateFunction(function_name, count); //!! need count
addSymbol(ctx, $Function::ref, function_name);
$value = $Function::ref;
}
^( PARAMS ( arg=NameLiteral
{
const char* name = (const char *)$arg.text->chars;
LLVMValueRef value = NameParam($Function::ref, i++, name);
addSymbol(ctx, value, name);
} )* )
block[function_name] )
;

Does that make more sense?  I need the count (ideally) before I parse the
parameters.

On Sat, Jan 8, 2011 at 12:51 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Don?t do that. The count will be available to you in the tree parser as the
> args will be in a vector and you can reference the count of the list. You
> are trying to do too much in the parser basically.
>
>
>
> Jim
>
>
>
> *From:* Aaron Leiby [mailto:aleiby.antlr at gmail.com]
> *Sent:* Saturday, January 08, 2011 12:37 PM
> *To:* Jim Idle
> *Cc:* antlr-interest
> *Subject:* Re: [antlr-interest] array list action attributes
>
>
>
> I would prefer to handle the actions as suggested above, but in most cases
> I
> need to know how many elements exist first.  So what I've been doing is
> collecting them, getting the count, then processing them.
>
>
>
> This is all in a tree walker grammar.  Is there an easy way to write out
> the
> count in the lexer/parser grammar rewrite rules so it's available to the
> tree walker without having to gather them first as I've been doing?
>
>
>
> For example, I'd like to be able to do something like this (in the
> lexer/parser grammar):
>
>
>
> functionLiteral
>
>          :           'function' name=NameLiteral? args=parameters
> body=block
>
>          ->         ^( FUNC $name? $args->count $args $body )
>
>          ;
>
>
>
> But the $args->count obviously won't work since the output tree is
> homogenous.  I imagine there might be a way to create a dummy node with the
> value as a payload, but I haven't tracked down the syntax for that yet.
>
>
>
> Perhaps I'm still going about this the wrong way?
>
>
>
> > the vector access functions are all documented in the API and there
>
> > a copious examples if you read through the runtime source code.
>
>
>
> Yep.  I was more hoping that there was higher level syntax in the ANTLR
> language itself that could be used to autogenerate the API calls when
> working with those vectors (making the grammar a bit more portable in the
> process).  I was aware of the single element support (e.g. $arg.text), and
> hoped I had simply missed the multi-value support.  Failing that, I was
> familiar with the SCOPE macros that the C target provides for hiding some
> of
> the data structure API details, and imagined similar macros had been
> created
> for working with the += output that I had maybe missed.  It sounds like
> neither of those are the case, so working directly with the API calls is
> the
> correct/only path currently.
>
>
>
> Thanks!
>
>
>
> On Mon, Jan 3, 2011 at 10:27 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> The += syntax is really only used for tree rewriting, but the vector
> access functions are all documented in the API and there a copious
> examples if you read through the runtime source code.
>
> Unless you don't care too much about memory (memory for the STRINGs is not
> released until you free the parser), then I would just get the pointers
> from the token directly and copy whatever text you want from there.
>
> However, I think that your confusion here is that you are gathering a list
> then trying to process it afterwards, where I think you will find it more
> useful to do this (and note that you use + as otherwise if there are no
> IDs then it is just a TYPE alt):
>
> : TYPE // No IDs
> | ^(TYPE
>
>     (
>       i=ID { some code that does $i.whatever }
>     )+
>  )
>  { action code to finish up }
> ;
>
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Aaron Leiby
> > Sent: Sunday, January 02, 2011 7:30 PM
> > To: antlr-interest
> > Subject: [antlr-interest] array list action attributes
> >
> > ANTLR3 allows labeling attributes for referencing in actions.
> >
> > Example:
> >
> > decl: type id=ID ';' { print "var" + $id.text; }
> >
> > With the C language target, the $id.text gets converted nicely into:
> >
> > (id->getText(id))
> >
> > However, if you have more than one attribute:
> >
> > decl: ^( TYPE ids+=ID* )
> >
> > ...$ids becomes a pANTLR3_VECTOR, and it appears those helpful
> > attributes no longer work?
> >
> > I was hoping something like $ids[i].text would get automatically
> > converted.
> >  Instead, I had to dig into the implementation a bit and hand-expand it
> > to:
> >
> > pANTLR_BASE_TREE id = (pANTLR_BASE_TREE)$ids->get($ids, i); const char*
> > name = (const char*)id->getText(id)->chars;
> >
> > So, I guess a couple questions:
> >
> > 1) Does the java language option suffer the same fate?  (i.e. ANTLR3
> > simply does not provide syntax for working with attributes on multi-
> > value labels?)
> > 2) Does the C API provide some nice macros I may have missed for making
> > this less gross?  (e.g. its set of SCOPE accessors)
> >
> > Thanks,
> > Aaron
> >
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From roxton at gmail.com  Sun Jan  9 08:12:54 2011
From: roxton at gmail.com (Adam Augusta)
Date: Sun, 9 Jan 2011 11:12:54 -0500
Subject: [antlr-interest] Syntax Highlighting and Autocompletion
Message-ID: <AANLkTimK-CXhTAkfQh0dwFPbmwowtC_m_sY1dxPX_VH7@mail.gmail.com>

I'm interested in making a simple editor for my ANTLR grammar.  The key
things I want are autocomplete and syntax highlighting.  So after digging
through the book, I did a little digging on the list.

Back in June 2008, Terrence Parr talked about making the NFA's available at
runtime for such use.
http://groups.google.com/group/il-antlr-interest/browse_thread/thread/7c6d05a35046854d

In November 2008, Sam Harwell suggested that ANTLR was not appropriate for
autocompletion (although it was deemed appropriate for scanning the larger
project and populating the cache used by autocompletion).
http://www.antlr.org/pipermail/antlr-interest/2008-November/031576.html

In May 2009, Sam Harwell discussed the use of simplified lexers to
facilitate syntax highlighting in Visual Studio.  He makes a number of
insightful comments on VS's implementation/contract and best practices.
http://www.antlr.org/pipermail/antlr-interest/2009-May/034592.html

Did Terrence make any headway with runtime access of NFA's?  It seems that
Harwell's concerns about performance and robustness could be addressed by
having parsers work incrementally, pausing at the current, incomplete token
and giving the developer access to current runtime NFA state, perhaps
resolving ambiguity by following multiple still-valid paths on the NFA and
only using look-ahead to rank possibilities.  (The above may be badly
formulated, infeasible, or just plain incorrect.)

Harwell wrote a special grammar for common cases of incomplete expressions.
 Is that still a pretty good way to go?

I'm prepared to move ahead given what I know, but any updated thinking on
this subject would be much appreciated.

Thanks,
-Adam

From bill.andersen at mac.com  Sun Jan  9 20:30:47 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Sun, 09 Jan 2011 23:30:47 -0500
Subject: [antlr-interest] Composite grammar issues
Message-ID: <0D5B64BC-0A6C-4EB2-AAA4-963640CF9C31@mac.com>

Folks

I have played quite a bit with the ANTLR documentation wrt composite grammars and there seem to be some holes that are causing me some problems getting grammar import going.  Let describe the simple setup first.  Code follows description.

1) I have two grammars A and B.  B is meant to be a proper super-set of A.  

2) Seems a natural way to implement this in ANTLR would be to have the B grammar import and extend the A grammar.

3) I have a lexer for A.  The A parser has option set to use tokenVocab from the A lexer

See below code for description of problems.

========== Code ===============

///
///  A Lexer
///

lexer grammar ALexer;

@header {
package test;
}

ID  
	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
  ;
  
LP 
	:	'('
	;
	
RP
	: ')'
	;

WS  
	: ( ' ' | '\t' | '\r' | '\n' ) {$channel=HIDDEN;}
  ;

///
/// A Parser
///

parser grammar AParser;

options {
	language = Java;
	tokenVocab = ALexer;
}

@header {
package test;
}

a
	: form EOF
	;
	
form
	: LP ID RP
	;

///
/// B Parser
///

parser grammar BParser;

import AParser;

@header {
package test;
}

b
	: form form EOF
	;

========== Problems ===============

[1] Compiling BParser produces the error message "redefinition of header action".  Without this, my generated code ends up in the wrong package.

[2] I am accustomed in writing simple ANTLR combined grammars to specifying some of the tokens in the 'tokens' section and some in the lexer rule section.  With the above setup (sans the definitions of LP and RP in ALexer) and including

tokens {
  LP = '(';
  RP = ')';
}

in AParser yields the error "literal has no associated lexer rule".

[3] In BParser, the line

	import AParser;
 
is underlined in ANTLRWork with the message "Undefined import "AParser""

========== Questions ===============

I would like the BParser to have access to an extended stock of tokens over those supplied by ALexer.  Is the right thing to do write a BLexer that imports ALexer, have AParser use ALexer's tokenVocab and BParser import AParser and use BLexer's tokenVocab?

That's about all for now.  Any help appreciated.




From bill.andersen at mac.com  Sun Jan  9 22:10:22 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Mon, 10 Jan 2011 01:10:22 -0500
Subject: [antlr-interest] Another composite grammar issue
Message-ID: <0E15C747-DCEF-43DB-B66D-A303FE87828F@mac.com>

I have two lexer grammars, A and B, such that B imports A.  I compile A and get an A.tokens file generated.  Then I compile B.  I expect B.tokens to have all the token definitions in A.tokens.  This works.  But, when I compile B, A.tokens seems to be re-generated and then includes all token definitions from B as well.  In short, after compiling B, B.tokens = A.tokens.

I suspect this isn't correct.

From bill.andersen at mac.com  Sun Jan  9 22:12:51 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Mon, 10 Jan 2011 01:12:51 -0500
Subject: [antlr-interest] Forgot...
Message-ID: <425D57F4-CB61-4B8F-99EB-D8B06E38D515@mac.com>

On the previous messages regarding composite grammars, I'm using ANTLR 3.3 / ANTLRWorks 1.4

Sorry

From troy.daniels at baesystems.com  Mon Jan 10 12:59:52 2011
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Mon, 10 Jan 2011 15:59:52 -0500
Subject: [antlr-interest] match parser rule inside every rule (compile
 time reflections)
In-Reply-To: <4D270DFA.5040307@mytum.de>
References: <407732.46934.qm@web121408.mail.ne1.yahoo.com>
	<4D270DFA.5040307@mytum.de>
Message-ID: <ED474DDA5167ED448245DD89A4718EC9A2433D7199@GLDMS60322.goldlnk.rootlnka.net>

It seems likely your grammar has a form like:

start: class+ ;

class: CLASS NAME LP declarations* methods* RP;

declaration: TYPE NAME (COMMA NAME)* SEMI;

method: NAME argList LP statement* RP;

statement: assign | methodCall | returnStatement | ifStatement | whileLoop | ... ;

Followed by rules that are fairly specific.  Assuming that there are reasonable restrictions on where the reflection calls can go, you should be able to rewrite the above as 

start: class+ ;

class: FORALL argList LP class RP |
	   CLASS NAME LP declarations* methods* RP;

declaration: FORALL argList LP declaration RP |
			 TYPE NAME (COMMA NAME)* SEMI;

method: FORALL argList LP method RP | 
		NAME argList LP statement* RP;

statement: FORALL argList LP statement RP | 
		   assign | methodCall | returnStatement | ifStatement | whileLoop | ... ;

But then the rules I skipped do not need to be aware of the FORALL construct.  OTOH, if you can do things like

	x = 3 + #for_all($m,Test at intVars) { $m + } y; // x = 3 + i + j + y;

Then you might need to spread the details for FORALL throughout the grammar.  Think about where the reflection commands can go in the most abstract terms, then create rules for those situations. 

Troy
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alexander Herz
> Sent: Friday, January 07, 2011 7:59 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] match parser rule inside every 
> rule (compile time reflections)
> 
> Hi,
> 
> I'm trying to implement compile time reflections, so inside 
> the language (imagine java) there is a preprocessor like 
> language which can access static properties of elements 
> defined in the language:
> 
> Example:
> 
> class Test
> {
>      int i,j;
> 
>      Test()
>      {
>          //iterates over all members of Test
>          #for_all($m,Test at members)
>          {
>              $m=0;
>          }
>          //will be evaluated to:
>          i=0;
>          j=0;
>      }
> }
> 
> It doesn't make sense to implement this in a preprocessor 
> since the full AST is needed to process the #for_all directive.
> Therefore, I'd like to implement it in the grammar of the 
> language. Now, the problem is that the #for_all (and other 
> related directives) can be placed anywhere (outside of 
> classes, etc). So I would need to put the rule for #for_all 
> into all the rules inside my grammar which seems ugly and cumbersome.
> 
> Any ideas how to solve this?
> 
> Thx,
> Alex
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From ronburk at gmail.com  Mon Jan 10 16:13:21 2011
From: ronburk at gmail.com (Ron Burk)
Date: Mon, 10 Jan 2011 16:13:21 -0800
Subject: [antlr-interest] match parser rule inside every rule (compile
 time reflections)
In-Reply-To: <4D270DFA.5040307@mytum.de>
References: <407732.46934.qm@web121408.mail.ne1.yahoo.com>
	<4D270DFA.5040307@mytum.de>
Message-ID: <AANLkTi=VbrQ-7QWLwtjS8sv0FW2U8CcdsV4ZvFJF15ny@mail.gmail.com>

It does seem a shame that you can't actually implement
languages like C/C++ very directly with any parser generator
I know of. Your example is hard for much the same reason
integrating the C preprocessor and C++ class compiles are hard.
I wonder if mechanisms like reflections might not become
more common if parser generator tools were better equipped
to make them less painful.

I've been tinkering with an idea I call "micropasses" for this
reason. In your example:

> class Test
> {
> ? ? int i,j;
>
> ? ? Test()
> ? ? {
> ? ? ? ? //iterates over all members of Test
> ? ? ? ? #for_all($m,Test at members)
> ? ? ? ? {
> ? ? ? ? ? ? $m=0;
> ? ? ? ? }
> ? ? ? ? //will be evaluated to:
> ? ? ? ? i=0;
> ? ? ? ? j=0;
> ? ? }
> }

So, one micropass from 'class' to final '}' to
expand class-level reflections (none in this
example) and gather up member names/types
(whether it's safe to combine those two
activities in one micropass depends on the precise
abilities of your reflections). That produces an
output token stream that can be processed again
by the parser.

Micropass #2 takes the output stream from
micropass #1 (class declarations now all known)
and for each member that has a function definition:
    Perform a micropass to expand reflections, and
    generate member function body code (again,
    might have to split into two passes depending
    on how wild the powers of reflection are).

In the previous description, "combine" really
means that when you hit a reflection "#" token,
you pause and perform a micropass whose output
effectively replaces the tokens that were inside
that # directive.

Whipping token streams around and reusing them
is not devastatingly hard, though arriving at a syntax
that integrates with normal grammar syntax and can
still be deemed a readable representation of what
grammar gets applied to which token stream when
is harder.

This mechanism could not be deemed a success if it
didn't handle normal C preprocessing and C++ class
multi-passing with reasonable aplomb. It's really just
a recognition that a lot of multipass work actually only
ends up touching a very small percentage of the entire
token stream in practice, so why not have a mechanism
for interweaving the multiple passes, invoking them
only exactly as needed?

> So I would need to put the
> rule for #for_all into all the rules inside my grammar which seems ugly
> and cumbersome.

Your adjectives seem apt.

> Any ideas how to solve this?

Just about any compilation problem can be solved by
adding on more passes :-). Not fun, but always possible.
Gets rid of some of the ugly, but not necessarily the
cumbersome.

From kdubb at me.com  Mon Jan 10 17:26:04 2011
From: kdubb at me.com (Kevin Wooten)
Date: Mon, 10 Jan 2011 18:26:04 -0700
Subject: [antlr-interest] Tree Pattern Matching (filter=true) and the
	Wildcard...
Message-ID: <F6F315F3-9D04-4C62-BEB1-CB9516B95F35@me.com>

How do I get a wildcard to match a complete subtree? For example... (DECL name (ARRAY (TYPE float) 9))

Currently I can only get the wild card to match any flat node like: (DECL name float 9).

Here are my tree pattern match rules...

expand_array_declaration
	:	^(VDECL ty=. ^(IADECL id=. bnds=.)) 				-> ^(VDECL ^(ARRAY $ty $bnds) $id)
	;

expand_array_declarations
	: 	^(VDECL ty=. (^(IADECL id+=. bnds+=.))+) 			-> ^(VDECLS ^(VDECL ^(ARRAY $ty $bnds) $id)+)
	;
	
expand_scalar_declaration
	:	^(VDECL ty=. ^(ISDECL id=.)) 						-> ^(VDECL $ty $id)
	;
	
expand_scalar_declarations
	:	^(VDECL ty=. (^(ISDECL id+=.))+) 					-> ^(VDECLS ^(VDECL $ty $id)+)
	;


Also, as you can see, I have to versions that seem to account for a limitation (bug?) in the rewriting that only allows you to replace a node with a single node.  What these rules are doing is expanding type declarations so they are unified (e.g. float a, b[4], c, d[5]; -> float a; float[4] b; float c; float[5] d;).  So I need to replace one child with many. Simplified version would be: (VDECL type id+) -> (VDECL type id) (VDECL type id) (VDECL type id). Currently I have to do it in two separate rules and then I am guessing I will need a second pass to gather all the VDECLS + VDECL and flatten them out. Am I missing something obvious? Can (or should I be able to) replace on node with many?

Any help on these two issues is much appreciated.

Thanks,
Kevin


From jeffn at photorepo.com  Mon Jan 10 19:14:06 2011
From: jeffn at photorepo.com (Jeffrey Newman)
Date: Mon, 10 Jan 2011 19:14:06 -0800
Subject: [antlr-interest] Need help vector in C generated code
Message-ID: <201101101914.06396.jeffn@photorepo.com>

I'm trying to implement a SQL parser. 
I'm working from the SQLite grammar.

I need to return a column type. (e.g. var char)

The problem is that there is no vectors in the ctx structure.

I have not been able to find and example of using the vectors.

If I use name = ID+
then the name is just stomped with char, the var is gone.

Please help.
Please direct me where I see and example of using the C vectors.
How to include them, how to access them, how to make the generated code complie.

thanks

thanks

Jeffrey
\


type_name returns [ColumnTypeData ctd]
@init {
	int cnt;
	cnt = 0;
	
	ctd.name  = NULL;
	ctd.scale     = 0;
	ctd.precision = 0;
}
    : name+=ID+ (LPAREN size1=signed_number (COMMA size2=signed_number)? RPAREN)?
      {

      }
    ;


Generates (edited)

            	        {
            	            name = (pANTLR3_COMMON_TOKEN) MATCHT(ID, &FOLLOW_ID_in_type_name1283); 
            	            if  (HASEXCEPTION())
            	            {
            	                goto ruletype_nameEx;
            	            }

            	            if (list_name == NULL)
            	            {
            	                list_name=ctx->vectors->newVector(ctx->vectors);
            	            }
            	            list_name->add(list_name, name, NULL);

            	        }
            	        break;

From jimi at temporal-wave.com  Mon Jan 10 19:32:22 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 10 Jan 2011 19:32:22 -0800
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <201101101914.06396.jeffn@photorepo.com>
References: <201101101914.06396.jeffn@photorepo.com>
Message-ID: <26B6F5B2-9037-4415-9FA7-CF89D507F9CB@temporal-wave.com>

Try restating your question as it makes no sense at all as asked. Read through the runtime source for examples but usually a question like this means you are approaching it incorrectly to be honest. 

Go ducks. 

Jim

On Jan 10, 2011, at 19:14, Jeffrey Newman <jeffn at photorepo.com> wrote:

> I'm trying to implement a SQL parser. 
> I'm working from the SQLite grammar.
> 
> I need to return a column type. (e.g. var char)
> 
> The problem is that there is no vectors in the ctx structure.
> 
> I have not been able to find and example of using the vectors.
> 
> If I use name = ID+
> then the name is just stomped with char, the var is gone.
> 
> Please help.
> Please direct me where I see and example of using the C vectors.
> How to include them, how to access them, how to make the generated code complie.
> 
> thanks
> 
> thanks
> 
> Jeffrey
> \
> 
> 
> type_name returns [ColumnTypeData ctd]
> @init {
>    int cnt;
>    cnt = 0;
>    
>    ctd.name  = NULL;
>    ctd.scale     = 0;
>    ctd.precision = 0;
> }
>    : name+=ID+ (LPAREN size1=signed_number (COMMA size2=signed_number)? RPAREN)?
>      {
> 
>      }
>    ;
> 
> 
> Generates (edited)
> 
>                        {
>                            name = (pANTLR3_COMMON_TOKEN) MATCHT(ID, &FOLLOW_ID_in_type_name1283); 
>                            if  (HASEXCEPTION())
>                            {
>                                goto ruletype_nameEx;
>                            }
> 
>                            if (list_name == NULL)
>                            {
>                                list_name=ctx->vectors->newVector(ctx->vectors);
>                            }
>                            list_name->add(list_name, name, NULL);
> 
>                        }
>                        break;
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kdubb at me.com  Mon Jan 10 20:13:59 2011
From: kdubb at me.com (Kevin Wooten)
Date: Mon, 10 Jan 2011 21:13:59 -0700
Subject: [antlr-interest] Tree Pattern Matching (filter=true) and the
 Wildcard...
In-Reply-To: <F6F315F3-9D04-4C62-BEB1-CB9516B95F35@me.com>
References: <F6F315F3-9D04-4C62-BEB1-CB9516B95F35@me.com>
Message-ID: <8AB7A4AC-C69F-4787-B0AA-CE4950F2D085@me.com>

So I couldn't really get the rules below to work because I have VDECL nodes that have IADECL and ISDECL nodes mixed inside them.  With apparently no way to match each subtree individually...

Example:
	Given Input - (VDECL  (TYPE ty) (IADECL a 9) (ISDECL b) (ISDECL c) (IADECL d 5))

	I really wanting to match each "sub-tree" individually such as...

	(VDECL (TYPE ty) (IADECL a 9)),
	(VDECL (TYPE ty) (ISDECL b)),
	(VDECL (TYPE ty) (ISDECL c)),
	(VDECL (TYPE ty) (IADECL d 5))

After (it didn't work) a little examination I realized I wasn't trying to match "sub-trees" at all but something more complicated.  So I tried a different approach, with a new single rule, that almost seemed to work...

Rule-

expand_declarations
  : ^(VDECL ty=. ( ^( IADECL aids+=. bnds+=. ) | ^( ISDECL sids+=. ) )* ) -> ^(VDECLS ^(VDECL ^(ARRAY $ty $bnds) $aids)* ^(VDECL $ty $sids)*)
  ;

Here I am doing all the matching in one rule and ANTLR matched all of my rules properly.

Unfortunately ANTLR faulted on the rewrite part. After looking at the code I realized that it has no protection from the sizes of $bnds and $aids being different from $sids. Although according to ANTLR documentation it looks as if the cardinality of each should have take care of this, but it doesn't. 

After adding 2 if statements to the generated rewrite code I got this rule to work (seemingly) perfectly.  Is there a better way? Is this a bug or am I using it incorrectly?


On Jan 10, 2011, at 6:26 PM, Kevin Wooten wrote:

> How do I get a wildcard to match a complete subtree? For example... (DECL name (ARRAY (TYPE float) 9))
> 
> Currently I can only get the wild card to match any flat node like: (DECL name float 9).
> 
> Here are my tree pattern match rules...
> 
> expand_array_declaration
> 	:	^(VDECL ty=. ^(IADECL id=. bnds=.)) 				-> ^(VDECL ^(ARRAY $ty $bnds) $id)
> 	;
> 
> expand_array_declarations
> 	: 	^(VDECL ty=. (^(IADECL id+=. bnds+=.))+) 			-> ^(VDECLS ^(VDECL ^(ARRAY $ty $bnds) $id)+)
> 	;
> 	
> expand_scalar_declaration
> 	:	^(VDECL ty=. ^(ISDECL id=.)) 						-> ^(VDECL $ty $id)
> 	;
> 	
> expand_scalar_declarations
> 	:	^(VDECL ty=. (^(ISDECL id+=.))+) 					-> ^(VDECLS ^(VDECL $ty $id)+)
> 	;
> 
> 
> Also, as you can see, I have to versions that seem to account for a limitation (bug?) in the rewriting that only allows you to replace a node with a single node.  What these rules are doing is expanding type declarations so they are unified (e.g. float a, b[4], c, d[5]; -> float a; float[4] b; float c; float[5] d;).  So I need to replace one child with many. Simplified version would be: (VDECL type id+) -> (VDECL type id) (VDECL type id) (VDECL type id). Currently I have to do it in two separate rules and then I am guessing I will need a second pass to gather all the VDECLS + VDECL and flatten them out. Am I missing something obvious? Can (or should I be able to) replace on node with many?
> 
> Any help on these two issues is much appreciated.
> 
> Thanks,
> Kevin
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From steel at kryas.com  Mon Jan 10 22:29:40 2011
From: steel at kryas.com (Stanley Steel)
Date: Mon, 10 Jan 2011 23:29:40 -0700
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <201101101914.06396.jeffn@photorepo.com>
References: <201101101914.06396.jeffn@photorepo.com>
Message-ID: <AANLkTik5aJr7dCESBq7h5as1f4axnK0WH_JgYuj8TH8d@mail.gmail.com>

I don't know exactly what you are asking but here is an example on creating
and using a vector with the C API:

// Initialize vector factorypANTLR3_STRING_FACTORY str_factory =
antlr3StringFactoryNew();pANTLR3_VECTOR_FACTORY vec_factory = *
antlr3VectorFactoryNew*(1);
// create source vectorspANTLR3_VECTOR vector = *vec_factory*->*newVector*
(vec_factory);
// we must free this memory at some point
pANTLR3_STRING temp1 = str_factory->newStr8(str_factory, "one ");
pANTLR3_STRING
temp2 = str_factory->newStr8(str_factory, "two ");
vector->*add*(vector, (void *)temp1, NULL);  vector->*add*(vector, (void
*)temp2, NULL);
int i;for(i = 0; i < vector->size(vector); i++){  pANTLR3_STRING temp =
(pANTLR3_STRING) vector->*get*(vector, i);
  ANTLR3_PRINTF(temp->chars);  ANTLR3_PRINTF("\n");}


>
> Please help.
> Please direct me where I see and example of using the C vectors.
> How to include them, how to access them, how to make the generated code
> complie.
>
>

From mdonini at gpi.it  Tue Jan 11 02:18:21 2011
From: mdonini at gpi.it (Massimiliano Donini)
Date: Tue, 11 Jan 2011 11:18:21 +0100
Subject: [antlr-interest] Antrr 3.3 template Output
In-Reply-To: <20110107195258.5E10C1AE9@mailweb.gpi.it>
References: <20110107195258.5E10C1AE9@mailweb.gpi.it>
Message-ID: <20110111101814.65EEF1A96@mailweb.gpi.it>

Nobody has the same error?
I see that in ST.stg there is an invocation of getTemplate() method  in
ruleRefAndListLabel that have to be replaced with the Template Property
(for C# 3 target).
I would also ask a question for grammar's attributes:
Why we have different attributes name for differents target, eg text
attribute for a rule?
I think that grammar (except for action) can be the same for each target
language and then the StringTemplates for code generation can handle it
in the correct way (in Java would become a call to getText() method and
in C# a call to Text property).
This is just my opinion, what do you think?

Best regards Max


Massimiliano Donini ha scritto:
>   Hi, with Antlr 3.3 CSharp i try to use output = template, but 
> generated class not compile because of a creation of STAttrMap object.
> Looking in the ST.stg at line 132 / 139 / 146 i found 3 template wich 
> create a new istance of STAttrMap object, but i can't found in Antlr 3.3 
> runtime dll.
> Am i missing something or is an issue??
>
> Best regards
> Max
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   




From jeffn at photorepo.com  Tue Jan 11 07:39:50 2011
From: jeffn at photorepo.com (Jeffrey Newman)
Date: Tue, 11 Jan 2011 07:39:50 -0800
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <AANLkTik5aJr7dCESBq7h5as1f4axnK0WH_JgYuj8TH8d@mail.gmail.com>
References: <201101101914.06396.jeffn@photorepo.com>
	<AANLkTik5aJr7dCESBq7h5as1f4axnK0WH_JgYuj8TH8d@mail.gmail.com>
Message-ID: <201101110739.50101.jeffn@photorepo.com>

First of all thanks for the code sample.
This is a help, although I need to figure out where to put it, and how to call.

As per your and Jim's comment that my question was not clear,
I will try to clarify it now. 

(As to Jim's comment that I don't know what I'm doing. 
Well.... If I did I would not be asking for help.)

On page 132 of Ter's book (pdf version) 

When a rule matches elements repeatedly, translators commonly need
to build a list of these elements. As a convenience, ANTLR provides the
+= label operator that automatically adds all associated elements to an New in v3.
ArrayList, whereas the = label operator always refers to the last element
matched. The following variation of rule decl captures all identifiers into
a list called ids for use by actions:

decl: type ids+=ID (',' ids+=ID)* ';' ; // ids is list of ID tokens

my rule is a little different (and simplitied)

type_name 
    : name+=ID+ (LPAREN size1=signed_number (COMMA size2=signed_number)? RPAREN)?
      {
		
      }
    ;


The key point here being name += ID+

The relevant generated code looks like:


            	        // /home/jeffn/Development/antlr/trunk/edu/sqliteGui/SQLite.g:207:11: name+= ID
            	        {
            	            name = (pANTLR3_COMMON_TOKEN) MATCHT(ID, &FOLLOW_ID_in_type_name1275); 
            	            if  (HASEXCEPTION())
            	            {
            	                goto ruletype_nameEx;
            	            }

            	            if (list_name == NULL)
            	            {
            	                list_name=ctx->vectors->newVector(ctx->vectors);                     <<<<<<------- Key point.
            	            }
            	            list_name->add(list_name, name, NULL);

            	        }

The key point here, in the line below (and marked above). is the ctx->vectors.

 list_name=ctx->vectors->newVector(ctx->vectors)


There is no "vectors" element in the ctx structure.

SO, MY FOLLOW UP QUESTION ARE:  
HOW DO I PROPERLY ADD THE vectors ELEMENT TO THE THE ctx STRUCTURE?
HOW TO I INIT THE ctx ->vectors TO POINT TO MY NEWLY MINTED vectors function.
AND HOW TO USE IT IN SUBSEQUENT RULES.
(Or more precisely in my case. Since I can simply build a string and pass it back to the calling rule.
  How do I access the vector's element (eg the individual string of the compound type name (ie var char)
  to build a composite (concatenated) string.)

--------

One of my questions is why did the code generator generate code for functions it did not create?

--------

Some things that I have tried.

I have looked and read, and reread the documentation.
I have grepped and prayed over the example code and grammars.
I have searched the email archives and tried to find some info in the wiki.
I have googled everything I can think of.
All to no avail.

I noticed a lot of chatter about code hoisting and C# and global init. 
But I have to admit  I'm enough of a language guy to intricacies, nuances, and 
inter-language complications that I read about. 

I created a rule;

vectors: ;

This indeed put a vectors element in the ctx structure
(I thought I was home free, all I would have to do was initialize with the newly minted vectors function that Stanley gave me.)

So I added an
@members {
	myVectors() {}
}

@init {
 ctx->vectors = myVectorr;
}

And I found that the generated code did indeed contain the myVectors routine.
And nothing was generated to update the ctx->vectors element.

Clearly the my idea of an @init outside of a rule being executed was wrong.

So, now I am back asking for more help.
I hope this is more clear.

Thanks in advance (or should I say part way through)

Jeffrey




















From Hiran.Chaudhuri at web.de  Tue Jan 11 08:48:31 2011
From: Hiran.Chaudhuri at web.de (Hiran Chaudhuri)
Date: Tue, 11 Jan 2011 17:48:31 +0100 (CET)
Subject: [antlr-interest] test
Message-ID: <1118929310.111310.1294764511412.JavaMail.fmail@mwmweb063>

?This is a test message.
___________________________________________________________
Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de

From sharwell at pixelminegames.com  Tue Jan 11 11:25:16 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 11 Jan 2011 13:25:16 -0600
Subject: [antlr-interest] Antrr 3.3 template Output
In-Reply-To: <BLU0-SMTP12087609DC93E3B1320E378B00B0@phx.gbl>
References: <BLU0-SMTP12087609DC93E3B1320E378B00B0@phx.gbl>
Message-ID: <034a01cbb1c5$48623360$d9269a20$@pixelminegames.com>

Hi Max,

I have never used output=template for the CSharp3 target. I'll try to set up
some tests to get this working for a later release.

Thanks,
Sam

-----Original Message-----
From: Massimiliano Donini [mailto:maxgbr at hotmail.it] 
Sent: Friday, January 07, 2011 1:53 PM
To: 'ANTLR Interest'
Cc: Sam Harwell
Subject: Antrr 3.3 template Output


  Hi, with Antlr 3.3 CSharp i try to use output = template, but generated
class not compile because of a creation of STAttrMap object.
Looking in the ST.stg at line 132 / 139 / 146 i found 3 template wich create
a new istance of STAttrMap object, but i can't found in Antlr 3.3 runtime
dll.
Am i missing something or is an issue??

Best regards
Max


From ALehotsky at ABINITIO.COM  Tue Jan 11 14:19:04 2011
From: ALehotsky at ABINITIO.COM (Alan Lehotsky)
Date: Tue, 11 Jan 2011 17:19:04 -0500
Subject: [antlr-interest] How do I find what Antlr is really telling me?
Message-ID: <OFD5C5A17B.B62E3181-ON85257815.0079FD4A-85257815.007A986E@LocalDomain>

I've massaged the PLSQL.g grammar which has a number of rules of the form:

select_statement :  SELECT swallow_to_semi;

update_statement : UPDATE swallow_to_semi;

...

swallow_to_semi :  ~( SEMI )+


These all seem to do the right thing, but I get a warning from Antlr that 
says

warning(200): plsql.g:815:39; Decision can match input such as 
"{BLOCK..DIVIDE, OR..END, BODY..RETURN, TEMPORARY..INOUT_, 
TRANSACTION..VERTBAR}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input


But line 815 is in fact the swallow_to_semi rule, so it must have subsumed 
this rule into some other rule with multiple selections.


  
NOTICE  from Ab Initio: If received in error, please destroy and notify sender, and make no further use, disclosure, or distribution. This email (including attachments) may contain information subject to confidentiality obligations, and sender does not waive confidentiality or privilege.   

From aleiby.antlr at gmail.com  Tue Jan 11 19:43:15 2011
From: aleiby.antlr at gmail.com (Aaron Leiby)
Date: Tue, 11 Jan 2011 19:43:15 -0800
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <201101110739.50101.jeffn@photorepo.com>
References: <201101101914.06396.jeffn@photorepo.com>
	<AANLkTik5aJr7dCESBq7h5as1f4axnK0WH_JgYuj8TH8d@mail.gmail.com>
	<201101110739.50101.jeffn@photorepo.com>
Message-ID: <AANLkTiks11_ktV4aZkt_m=B8h7=s-9o4h+8bKjpA26Wg@mail.gmail.com>

What version of ANTLR are you using?

What options does your grammar specify?

'vectors' is defined for both parsers and tree walker grammars (though it
doesn't appear to exist in the generated lexer).  You should not have to
create the factory yourself.


On Tue, Jan 11, 2011 at 7:39 AM, Jeffrey Newman <jeffn at photorepo.com> wrote:

> First of all thanks for the code sample.
> This is a help, although I need to figure out where to put it, and how to
> call.
>
> As per your and Jim's comment that my question was not clear,
> I will try to clarify it now.
>
> (As to Jim's comment that I don't know what I'm doing.
> Well.... If I did I would not be asking for help.)
>
> On page 132 of Ter's book (pdf version)
>
> When a rule matches elements repeatedly, translators commonly need
> to build a list of these elements. As a convenience, ANTLR provides the
> += label operator that automatically adds all associated elements to an New
> in v3.
> ArrayList, whereas the = label operator always refers to the last element
> matched. The following variation of rule decl captures all identifiers into
> a list called ids for use by actions:
>
> decl: type ids+=ID (',' ids+=ID)* ';' ; // ids is list of ID tokens
>
> my rule is a little different (and simplitied)
>
> type_name
>     : name+=ID+ (LPAREN size1=signed_number (COMMA size2=signed_number)?
> RPAREN)?
>      {
>
>      }
>    ;
>
>
> The key point here being name += ID+
>
> The relevant generated code looks like:
>
>
>                        //
> /home/jeffn/Development/antlr/trunk/edu/sqliteGui/SQLite.g:207:11: name+= ID
>                        {
>                            name = (pANTLR3_COMMON_TOKEN) MATCHT(ID,
> &FOLLOW_ID_in_type_name1275);
>                             if  (HASEXCEPTION())
>                            {
>                                goto ruletype_nameEx;
>                            }
>
>                            if (list_name == NULL)
>                            {
>
>  list_name=ctx->vectors->newVector(ctx->vectors);
> <<<<<<------- Key point.
>                             }
>                            list_name->add(list_name, name, NULL);
>
>                        }
>
> The key point here, in the line below (and marked above). is the
> ctx->vectors.
>
>  list_name=ctx->vectors->newVector(ctx->vectors)
>
>
> There is no "vectors" element in the ctx structure.
>
> SO, MY FOLLOW UP QUESTION ARE:
> HOW DO I PROPERLY ADD THE vectors ELEMENT TO THE THE ctx STRUCTURE?
> HOW TO I INIT THE ctx ->vectors TO POINT TO MY NEWLY MINTED vectors
> function.
> AND HOW TO USE IT IN SUBSEQUENT RULES.
> (Or more precisely in my case. Since I can simply build a string and pass
> it back to the calling rule.
>  How do I access the vector's element (eg the individual string of the
> compound type name (ie var char)
>  to build a composite (concatenated) string.)
>
> --------
>
> One of my questions is why did the code generator generate code for
> functions it did not create?
>
> --------
>
> Some things that I have tried.
>
> I have looked and read, and reread the documentation.
> I have grepped and prayed over the example code and grammars.
> I have searched the email archives and tried to find some info in the wiki.
> I have googled everything I can think of.
> All to no avail.
>
> I noticed a lot of chatter about code hoisting and C# and global init.
> But I have to admit  I'm enough of a language guy to intricacies, nuances,
> and
> inter-language complications that I read about.
>
> I created a rule;
>
> vectors: ;
>
> This indeed put a vectors element in the ctx structure
> (I thought I was home free, all I would have to do was initialize with the
> newly minted vectors function that Stanley gave me.)
>
> So I added an
> @members {
>        myVectors() {}
> }
>
> @init {
>  ctx->vectors = myVectorr;
> }
>
> And I found that the generated code did indeed contain the myVectors
> routine.
> And nothing was generated to update the ctx->vectors element.
>
> Clearly the my idea of an @init outside of a rule being executed was wrong.
>
> So, now I am back asking for more help.
> I hope this is more clear.
>
> Thanks in advance (or should I say part way through)
>
> Jeffrey
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From roxier at wavecable.com  Tue Jan 11 21:45:13 2011
From: roxier at wavecable.com (Roxie Rochat)
Date: Tue, 11 Jan 2011 21:45:13 -0800
Subject: [antlr-interest] gUnit in ANTLR 3.3
Message-ID: <auto-000074380415@wavecable.net>


From dms at sosnoski.com  Tue Jan 11 23:44:30 2011
From: dms at sosnoski.com (Dennis Sosnoski)
Date: Wed, 12 Jan 2011 20:44:30 +1300
Subject: [antlr-interest] Changing lexers mid-stream
Message-ID: <4D2D5BDE.7000804@sosnoski.com>

I'm wondering if there's an easy way to switch back and forth between
different lexers while processing a stream. I'm working with Java
language documents, and I'd like to be able to break down /**...*/
comments into components - but to do this, I'd need to switch modes when
I enter the start of a comment, and switch back to normal Java lexer
rules at the end of the comment.

Any ideas?

I can do this in my own code, breaking down the comments into different
types of tokens that become part of the token stream - but that's
basically just writing my own lexer, which seems kind of silly.

  - Dennis


From bkiers at gmail.com  Tue Jan 11 23:54:37 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 12 Jan 2011 08:54:37 +0100
Subject: [antlr-interest] Changing lexers mid-stream
In-Reply-To: <4D2D5BDE.7000804@sosnoski.com>
References: <4D2D5BDE.7000804@sosnoski.com>
Message-ID: <AANLkTikR1eaW5kYD+4-ynrAOr6ERuJfWJ2d7MXkEM19W@mail.gmail.com>

On Wed, Jan 12, 2011 at 8:44 AM, Dennis Sosnoski <dms at sosnoski.com> wrote:

> I'm wondering if there's an easy way to switch back and forth between
> different lexers while processing a stream. I'm working with Java
> language documents, and I'd like to be able to break down /**...*/
> comments into components - but to do this, I'd need to switch modes when
> I enter the start of a comment, and switch back to normal Java lexer
> rules at the end of the comment.
>
> Any ideas?
>
> I can do this in my own code, breaking down the comments into different
> types of tokens that become part of the token stream - but that's
> basically just writing my own lexer, which seems kind of silly.
>
>  - Dennis
>
>
Have you seen this:
http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control
<http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control>
?

Kind regards,

Bart.

From dms at sosnoski.com  Wed Jan 12 01:05:08 2011
From: dms at sosnoski.com (Dennis Sosnoski)
Date: Wed, 12 Jan 2011 22:05:08 +1300
Subject: [antlr-interest] Changing lexers mid-stream
In-Reply-To: <AANLkTikR1eaW5kYD+4-ynrAOr6ERuJfWJ2d7MXkEM19W@mail.gmail.com>
References: <4D2D5BDE.7000804@sosnoski.com>
	<AANLkTikR1eaW5kYD+4-ynrAOr6ERuJfWJ2d7MXkEM19W@mail.gmail.com>
Message-ID: <4D2D6EC4.1020409@sosnoski.com>

On 01/12/2011 08:54 PM, Bart Kiers wrote:
> On Wed, Jan 12, 2011 at 8:44 AM, Dennis Sosnoski <dms at sosnoski.com
> <mailto:dms at sosnoski.com>> wrote:
>
>     I'm wondering if there's an easy way to switch back and forth between
>     different lexers while processing a stream. I'm working with Java
>     language documents, and I'd like to be able to break down /**...*/
>     comments into components - but to do this, I'd need to switch
>     modes when
>     I enter the start of a comment, and switch back to normal Java lexer
>     rules at the end of the comment.
>
>     ...
>
>
> Have you seen this:
> http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control
> ?
>

No, I hadn't seen that. It does sound very similar to what I want,
though I'm not completely sure how to apply it.

In my case I'd like to have the comment token types extend those used in
the base grammar (so just adding a couple more token types). I'm
guessing that if I create a pair of lexers (one for the language grammar
with a start-of-comment token, the other for comments with an
end-of-comment token) I could switch between lexers on-the-fly by using
a filter that implements TokenSource:

             /---Language lexer--\
---Filter---<                     >--CharStream
             \---Comment lexer---/

Does that sound like the best approach?

To do this, I'd want to add several token types to those defined in the
language grammar, which I know I can do by adding them to the tokens { 
} list. Then I'd want to use the actual token values assigned in the
generated language lexer in my comment lexer (so that the token type
codes are all unique in the generated token stream seen from the
filter). How can I do that part?

Thanks,

  - Dennis

From Hiran.Chaudhuri at web.de  Wed Jan 12 01:18:55 2011
From: Hiran.Chaudhuri at web.de (Hiran Chaudhuri)
Date: Wed, 12 Jan 2011 10:18:55 +0100 (CET)
Subject: [antlr-interest] Island grammar implementation
Message-ID: <828038905.495565.1294823935865.JavaMail.fmail@mwmweb061>

Hello, everybody. 
I've used ANTLR now for some simple cases, and it worked out quite well. But now I am facing files that can - between other items - contain regular expressions. These regular expressions are driving my lexer nuts as I cannot explain that the same characters mean different things within a regex as opposed to somewhere else in the file. As far as I understood such patterns can be addressed with (parser driven) Island Grammars, where the parser detects when a regex is expected and switches the lexer/parser combination until satisfied. 
However I am lacking a sample how to accomplish this. I looked at http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control, but it seems like this code does not compile directly (I'm working on ANTLR 3.2), and if I make the necessary amendments, it seems to always run out of heap space. 
Is there another example for Island Grammars controlled through the parser that I could use? 
Best regards Hiran
___________________________________________________________
WEB.DE DSL Doppel-Flat ab 19,99 &euro;/mtl.! Jetzt mit 
gratis Handy-Flat! http://produkte.web.de/go/DSL_Doppel_Flatrate/2

From jeffn at photorepo.com  Wed Jan 12 01:51:10 2011
From: jeffn at photorepo.com (Jeffrey Newman)
Date: Wed, 12 Jan 2011 01:51:10 -0800
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <AANLkTiks11_ktV4aZkt_m=B8h7=s-9o4h+8bKjpA26Wg@mail.gmail.com>
References: <201101101914.06396.jeffn@photorepo.com>
	<201101110739.50101.jeffn@photorepo.com>
	<AANLkTiks11_ktV4aZkt_m=B8h7=s-9o4h+8bKjpA26Wg@mail.gmail.com>
Message-ID: <201101120151.10713.jeffn@photorepo.com>

First, thanks for the reply.

My options are:

options {
	language = C;
	k = 4;
}

I didn't think I should have to. But...

Jeffrey

From bkiers at gmail.com  Wed Jan 12 02:33:47 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 12 Jan 2011 11:33:47 +0100
Subject: [antlr-interest] Island grammar implementation
In-Reply-To: <828038905.495565.1294823935865.JavaMail.fmail@mwmweb061>
References: <828038905.495565.1294823935865.JavaMail.fmail@mwmweb061>
Message-ID: <AANLkTin-YNPp33qYGYscvjVw4r8WvtVViJHsytX5hJ5G@mail.gmail.com>

On Wed, Jan 12, 2011 at 10:18 AM, Hiran Chaudhuri <Hiran.Chaudhuri at web.de>wrote:

> Hello, everybody.
> I've used ANTLR now for some simple cases, and it worked out quite well.
> But now I am facing files that can - between other items - contain regular
> expressions. These regular expressions are driving my lexer nuts as I cannot
> explain that the same characters mean different things within a regex as
> opposed to somewhere else in the file. As far as I understood such patterns
> can be addressed with (parser driven) Island Grammars, where the parser
> detects when a regex is expected and switches the lexer/parser combination
> until satisfied.
> However I am lacking a sample how to accomplish this. I looked at
> http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control,
> but it seems like this code does not compile directly (I'm working on ANTLR
> 3.2), and if I make the necessary amendments, it seems to always run out of
> heap space.
> Is there another example for Island Grammars controlled through the parser
> that I could use?
> Best regards Hiran
>

Here's a small demo that compiles using ANTLR v3.2.

Let's say your language consists of one ore more assignment statements. An
assignment is an identifiers followed by a number, another identifier or a
regex literal and ending with a semi-colon:

*grammar Language;*
*
*
*parse*
*  :  assignment+ EOF *
*  ;*
*
*
*assignment*
*  :  Identifier '=' atom ';' *
*  ;*
*
*
*atom*
*  :  Identifier*
*  |  Number*
*  |  Regex*
*  ;*
*
*
*Regex*
*  :  '/' ('\\' . | ~('/' | '\\'))* '/'*
*  ;*
*    *
*Identifier*
*  :  'a'..'z'*
*  |  'A'..'Z'*
*  ;*
*
*
*Number*
*  :  '0'..'9'+*
*  ;*
*
*
*Space*
*  :  (' ' | '\t' | '\r' | '\n') {skip();}*
*  ;*


and your (simplified) regex grammar looks like:

*grammar Regex;*
*
*
*parse*
*  :  Delim atom* Delim EOF*
*  ;*
*
*
*atom*
*  :  EscapeSequence *
*  |  CharClass  *
*  |  Other*
*  ;*
*  *
*Delim*
*  :  '/'*
*  ;*
*
*
*EscapeSequence*
*  :  '\\' ('\\' | '/')*
*  ;*
*  *
*CharClass*
*  :  '\\' ('d' | 'w' | 's')*
*  ;*
*
*
*Other*
*  :  ~Delim*
*  ;*


Now, to separately parse the regex literal inside your Language-grammar and
create an AST from it all, do something like this:

*grammar Language;*
*
*
*options {*
*  output=AST;*
*}*
*
*
*tokens {*
*  ROOT;*
*  REGEX;*
*  ASSIGNMENT;  *
*}*
*
*
*@parser::members {*
*  private CommonTree regexAST(String source) {*
*    try {*
*      ANTLRStringStream in = new ANTLRStringStream(source);*
*      RegexLexer lexer = new RegexLexer(in);*
*      CommonTokenStream tokens = new CommonTokenStream(lexer);*
*      RegexParser parser = new RegexParser(tokens);*
*      return (CommonTree)parser.parse().getTree();*
*    } catch(Exception e) {*
*      e.printStackTrace();*
*    }*
*    return null;*
*  }*
*}*
*
*
*parse*
*  :  assignment+ EOF -> ^(ROOT assignment+)*
*  ;*
*
*
*assignment*
*  :  Identifier '=' atom ';' -> ^(ASSIGNMENT Identifier atom)*
*  ;*
*
*
*atom*
*  :  Identifier*
*  |  Number*
*  |  r=Regex {CommonTree ast = regexAST($r.text);} -> ^( {ast} )*
*  ;*
*
*
*Regex*
*  :  '/' ('\\' . | ~('/' | '\\'))* '/'*
*  ;*
*    *
*Identifier*
*  :  'a'..'z'*
*  |  'A'..'Z'*
*  ;*
*
*
*Number*
*  :  '0'..'9'+*
*  ;*
*
*
*Space*
*  :  (' ' | '\t' | '\r' | '\n') {skip();}*
*  ;*
*
*
*grammar Regex;*
*
*
*options {*
*  output=AST;*
*}*
*
*
*tokens {*
*  REGEX;*
*  ESC_SEQ;*
*  CHAR_CLASS;*
*  OTHER;*
*}*
*
*
*parse*
*  :  Delim atom* Delim EOF -> ^(REGEX atom*)*
*  ;*
*
*
*atom*
*  :  EscapeSequence -> ^(ESC_SEQ EscapeSequence)*
*  |  CharClass      -> ^(CHAR_CLASS CharClass)*
*  |  Other          -> ^(OTHER Other)*
*  ;*
*  *
*Delim*
*  :  '/'*
*  ;*
*
*
*EscapeSequence*
*  :  '\\' ('\\' | '/')*
*  ;*
*  *
*CharClass*
*  :  '\\' ('d' | 'w' | 's')*
*  ;*
*
*
*Other*
*  :  ~Delim*
*  ;*


Now when parsing the source:

*a = 1;*
*b = a;*
*c = /\\\/\wab/;*


with your LanguageParser, you'll get the AST attached to this e-mail
message.

Below is the test class I used:

*import org.antlr.runtime.*;*
*import org.antlr.runtime.tree.*;*
*import org.antlr.stringtemplate.*;*
*
*
*public class Main {*
*    public static void main(String[] args) throws Exception {*
*        ANTLRStringStream in = new ANTLRStringStream(*
*                "a = 1;             \n" +*
*                "b = a;             \n" +*
*                "c = /\\\\\\/\\wab/;  "*
*        );*
*        LanguageLexer lexer = new LanguageLexer(in);*
*        CommonTokenStream tokens = new CommonTokenStream(lexer);*
*        LanguageParser parser = new LanguageParser(tokens);*
*        CommonTree tree = (CommonTree)parser.parse().getTree();*
*        DOTTreeGenerator gen = new DOTTreeGenerator();*
*        StringTemplate st = gen.toDOT(tree);*
*        System.out.println(st);*
*    }*
*}*


Regards,

Bart.

PS. in case any text gets mangled in my message, I attached a zip file
containing the grammar- and text class source files.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ast.gif
Type: image/gif
Size: 11908 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110112/184d06dd/attachment.gif 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: source.zip
Type: application/zip
Size: 1321 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110112/184d06dd/attachment.zip 

From alex at apption.com  Wed Jan 12 08:02:11 2011
From: alex at apption.com (Alex Lujan)
Date: Wed, 12 Jan 2011 11:02:11 -0500
Subject: [antlr-interest] Protocol message recognition - an amateur grammar
	question
Message-ID: <AANLkTinJp5DtkPWYTx7zZ_LUCG_W_O6jC1J7aCe-xVFx@mail.gmail.com>

I am trying Antlr v3 for message recognition, which must comply to a custom
define protocol.

I find myself unable to express the following rule (written in a
non-standard notation):

data: count number{count.value}

What I am expecting to find in the input is a numerical value (which Ive
labeled count), followed by as many numerical values as the value of count.

Examples of valid input:

3 10 12 15
2 6 9

Examples of invalid input:

3 10 12
2 4 5 6


This seems like a trivial message protocol situation, so I'm hoping this is
a solved problem.

Ive gone through The Definitive Antlr Reference, and can't find information
on quantifiers that would help me solve this issue.

Ideas? guidance?

Thanks very much in advance.

-- 
Alejandro Lujan

From micha-1 at fantasymail.de  Wed Jan 12 08:21:33 2011
From: micha-1 at fantasymail.de (Micha)
Date: Wed, 12 Jan 2011 17:21:33 +0100
Subject: [antlr-interest] Protocol message recognition - an amateur
 grammar question
In-Reply-To: <AANLkTinJp5DtkPWYTx7zZ_LUCG_W_O6jC1J7aCe-xVFx@mail.gmail.com>
References: <AANLkTinJp5DtkPWYTx7zZ_LUCG_W_O6jC1J7aCe-xVFx@mail.gmail.com>
Message-ID: <4D2DD50D.3020608@fantasymail.de>

Am 12.01.2011 17:02, schrieb Alex Lujan:
> I am trying Antlr v3 for message recognition, which must comply to a custom
> define protocol.
> 
> I find myself unable to express the following rule (written in a
> non-standard notation):
> 
> data: count number{count.value}
> 


just parse the lines as
data: number+ { check(); }
and then check in an action if the first number is correct.

 Michael

From bkiers at gmail.com  Wed Jan 12 08:29:20 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 12 Jan 2011 17:29:20 +0100
Subject: [antlr-interest] Protocol message recognition - an amateur
 grammar question
In-Reply-To: <AANLkTinJp5DtkPWYTx7zZ_LUCG_W_O6jC1J7aCe-xVFx@mail.gmail.com>
References: <AANLkTinJp5DtkPWYTx7zZ_LUCG_W_O6jC1J7aCe-xVFx@mail.gmail.com>
Message-ID: <AANLkTiksgaYpx95CWAA__VVZ8_8hfagj3B2+qKg3bfVv@mail.gmail.com>

On Wed, Jan 12, 2011 at 5:02 PM, Alex Lujan <alex at apption.com> wrote:

> I am trying Antlr v3 for message recognition, which must comply to a custom
> define protocol.
>
> I find myself unable to express the following rule (written in a
> non-standard notation):
>
> data: count number{count.value}
>
> What I am expecting to find in the input is a numerical value (which Ive
> labeled count), followed by as many numerical values as the value of count.
>
> Examples of valid input:
>
> 3 10 12 15
> 2 6 9
>
> Examples of invalid input:
>
> 3 10 12
> 2 4 5 6
>
>
You could use a 'validating semantic predicate'. A small demo:

*grammar Test;*
*
*
*parse*
*  :  line+ EOF*
*  ;*
*
*
*line*
*  :  n=number {int c = $n.value;} (number {--c;})* {c==0}? LineBreak*
*  ;*
*
*
*number returns [int value]*
*  :  Int {$value = Integer.parseInt($Int.text);}*
*  ;*
*    *
*Int*
*  :  '0'..'9'+ *
*  ;*
*
*
*LineBreak*
*  :  '\r'? '\n'*
*  |  '\r'*
*  ;*
*        *
*Space*
*  :  (' ' | '\t') {skip();}*
*  ;*



Regards,

Bart.

From jimi at temporal-wave.com  Wed Jan 12 09:19:29 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Jan 2011 09:19:29 -0800
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <201101110739.50101.jeffn@photorepo.com>
References: <201101101914.06396.jeffn@photorepo.com>	<AANLkTik5aJr7dCESBq7h5as1f4axnK0WH_JgYuj8TH8d@mail.gmail.com>
	<201101110739.50101.jeffn@photorepo.com>
Message-ID: <f4cdc3393d1dae0b5fe1f2f254faf68f@mail.gmail.com>

Ah, I see your problem now.

You are trying to use the += operator but you are not producing an AST
(output=AST; option). These operators are ONLY for producing ASTs (which
you should really be doing anyway if you are doing anything other than
something very trivial). So, if you do not want to produce an AST and want
to accumulate things like that, then you need to write your own code
(though you could use the vectors, hashtables of course). Then general
rule us to take all suck code out of actions so that you call an API that
builds lists - this means your action code is just the C/C++ code that is
required to pass the structures of interest to your library routines.

You could add the output=AST option and ignore the resulting AST too, but
this would be pretty wasteful of course.

Also, if you are still learning ANTLR, then unless you don't know Java or
C# at all, I would start with one of those targets as the C target has the
steepest learning curve. This is not to cast aspersions on your C
programming skills, it is just that it is better in general to learn about
the ANTLR 'stuff' then move to the C target.

Hope that helps,

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jeffrey Newman
> Sent: Tuesday, January 11, 2011 7:40 AM
> To: Stanley Steel
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Need help vector in C generated code
>
> First of all thanks for the code sample.
> This is a help, although I need to figure out where to put it, and how
> to call.
>
> As per your and Jim's comment that my question was not clear, I will
> try to clarify it now.
>
> (As to Jim's comment that I don't know what I'm doing.
> Well.... If I did I would not be asking for help.)
>
> On page 132 of Ter's book (pdf version)
>
> When a rule matches elements repeatedly, translators commonly need to
> build a list of these elements. As a convenience, ANTLR provides the
> += label operator that automatically adds all associated elements to an
> New in v3.
> ArrayList, whereas the = label operator always refers to the last
> element matched. The following variation of rule decl captures all
> identifiers into a list called ids for use by actions:
>
> decl: type ids+=ID (',' ids+=ID)* ';' ; // ids is list of ID tokens
>
> my rule is a little different (and simplitied)
>
> type_name
>     : name+=ID+ (LPAREN size1=signed_number (COMMA
> size2=signed_number)? RPAREN)?
>       {
>
>       }
>     ;
>
>
> The key point here being name += ID+
>
> The relevant generated code looks like:
>
>
>             	        //
> /home/jeffn/Development/antlr/trunk/edu/sqliteGui/SQLite.g:207:11:
> name+= ID
>             	        {
>             	            name = (pANTLR3_COMMON_TOKEN) MATCHT(ID,
> &FOLLOW_ID_in_type_name1275);
>             	            if  (HASEXCEPTION())
>             	            {
>             	                goto ruletype_nameEx;
>             	            }
>
>             	            if (list_name == NULL)
>             	            {
>             	                list_name=ctx->vectors->newVector(ctx-
> >vectors);                     <<<<<<------- Key point.
>             	            }
>             	            list_name->add(list_name, name, NULL);
>
>             	        }
>
> The key point here, in the line below (and marked above). is the ctx-
> >vectors.
>
>  list_name=ctx->vectors->newVector(ctx->vectors)
>
>
> There is no "vectors" element in the ctx structure.
>
> SO, MY FOLLOW UP QUESTION ARE:
> HOW DO I PROPERLY ADD THE vectors ELEMENT TO THE THE ctx STRUCTURE?
> HOW TO I INIT THE ctx ->vectors TO POINT TO MY NEWLY MINTED vectors
> function.
> AND HOW TO USE IT IN SUBSEQUENT RULES.
> (Or more precisely in my case. Since I can simply build a string and
> pass it back to the calling rule.
>   How do I access the vector's element (eg the individual string of the
> compound type name (ie var char)
>   to build a composite (concatenated) string.)
>
> --------
>
> One of my questions is why did the code generator generate code for
> functions it did not create?
>
> --------
>
> Some things that I have tried.
>
> I have looked and read, and reread the documentation.
> I have grepped and prayed over the example code and grammars.
> I have searched the email archives and tried to find some info in the
> wiki.
> I have googled everything I can think of.
> All to no avail.
>
> I noticed a lot of chatter about code hoisting and C# and global init.
> But I have to admit  I'm enough of a language guy to intricacies,
> nuances, and inter-language complications that I read about.
>
> I created a rule;
>
> vectors: ;
>
> This indeed put a vectors element in the ctx structure (I thought I was
> home free, all I would have to do was initialize with the newly minted
> vectors function that Stanley gave me.)
>
> So I added an
> @members {
> 	myVectors() {}
> }
>
> @init {
>  ctx->vectors = myVectorr;
> }
>
> And I found that the generated code did indeed contain the myVectors
> routine.
> And nothing was generated to update the ctx->vectors element.
>
> Clearly the my idea of an @init outside of a rule being executed was
> wrong.
>
> So, now I am back asking for more help.
> I hope this is more clear.
>
> Thanks in advance (or should I say part way through)
>
> Jeffrey
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From bkiers at gmail.com  Wed Jan 12 09:26:09 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 12 Jan 2011 18:26:09 +0100
Subject: [antlr-interest] Protocol message recognition - an amateur
 grammar question
In-Reply-To: <AANLkTim4OgZ6b+wJV693RCytWPFfcgTEJWpXY2M_Uf_v@mail.gmail.com>
References: <AANLkTinJp5DtkPWYTx7zZ_LUCG_W_O6jC1J7aCe-xVFx@mail.gmail.com>
	<AANLkTiksgaYpx95CWAA__VVZ8_8hfagj3B2+qKg3bfVv@mail.gmail.com>
	<AANLkTim4OgZ6b+wJV693RCytWPFfcgTEJWpXY2M_Uf_v@mail.gmail.com>
Message-ID: <AANLkTi=F4=5afPz1e3eicjdbiNRHyQxtj=jFQiQciUqK@mail.gmail.com>

On Wed, Jan 12, 2011 at 6:17 PM, Alex Lujan <alex at apption.com> wrote:

> Hi Bart,
>
> Thank you for your response.
>
> Will the validating semantic predicate verify the amount of matches after
> the first number, or will it instruct the parser to stop consuming tokens
> after the Nth occurrence? The second option is what I need.
>
> I provided a bit more context in a previous email, in answer to Michael's
> proposal. The short version is:
>
> The protocol is more complex, and the sequence can be followed by more
> data.
>
> Using the same non-standard notation, as I dont know a proper way to
> express this:
>
> protocol: data+
>
> data: count number{count.value}
>
> Therefore, the following sequence needs to be valid:
>
> *3* 10 12 15 *2* 4 5
>
> I need to instruct the parser to only match 3 numeric values after matching
> the 3, and so on.
>
> From implementing your proposal, Bart, it seems it does not achieve what I
> am looking for (again, my bad for not giving enough context at the
> beginning)
>
> Cheers!


In that case, using a "gated semantic predicate" before the "validating
predicate" is more appropriate:

*grammar Test;*
*
*
*parse*
*  :  line+ EOF*
*  ;*
*
*
*line*
*  :  n=number {int c = $n.value;} ({c > 0}?=> number {--c;})* {c == 0}?*
*  ;*
*
*
*number returns [int value]*
*  :  Int {$value = Integer.parseInt($Int.text);}*
*  ;*
*    *
*Int*
*  :  '0'..'9'+ *
*  ;*
*        *
*Space*
*  :  (' ' | '\t' | '\r' | '\n') {skip();}*
*  ;*


Tested with the following class:

*import org.antlr.runtime.*;*
*
*
*public class Main {*
*    public static void main(String[] args) throws Exception {*
*        ANTLRStringStream in = new ANTLRStringStream(*
*                "3 10 12 15    \n" +*
*                "2 6 9 3 1 1 111 \n"*
*        );*
*        TestLexer lexer = new TestLexer(in);*
*        CommonTokenStream tokens = new CommonTokenStream(lexer);*
*        TestParser parser = new TestParser(tokens);*
*        parser.parse();*
*    }*
*}*


Regards,

Bart.

From jimi at temporal-wave.com  Wed Jan 12 09:30:16 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Jan 2011 09:30:16 -0800
Subject: [antlr-interest] How do I find what Antlr is really telling me?
In-Reply-To: <OFD5C5A17B.B62E3181-ON85257815.0079FD4A-85257815.007A986E@LocalDomain>
References: <OFD5C5A17B.B62E3181-ON85257815.0079FD4A-85257815.007A986E@LocalDomain>
Message-ID: <1e553291efabedfe40017552c7db34f5@mail.gmail.com>

I think that you might be better not using a grammar construct if the
consume is always at the trailing end of the verb (but remember that not
all SQL requires termination with ';' which makes it a terrible language
to parser in general.)

You can insert an action, or a dummy rule that uses code to consume until
the SEMI token is discovered. You can adopt the code from this article:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery


But basically all you need (for Java) is:

select_statement : SELECT swallow_to_semi;

swallow_to_semi:
@init
{
	while (input.LA(1) != SEMI) { input.consume(); }
}
: ;

The problem with your other rule is that ANTLR is trying to work out
lookahead and so on. You might try the k=1 option on that individual rule,
but the code above is neater I think and will not give warnings because of
it. You might find though, that having this empty rule results in overall
ambiguities that have to be solved with k=1 and/or predicates.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alan Lehotsky
> Sent: Tuesday, January 11, 2011 2:19 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How do I find what Antlr is really telling
> me?
>
> I've massaged the PLSQL.g grammar which has a number of rules of the
> form:
>
> select_statement :  SELECT swallow_to_semi;
>
> update_statement : UPDATE swallow_to_semi;
>
> ...
>
> swallow_to_semi :  ~( SEMI )+
>
>
> These all seem to do the right thing, but I get a warning from Antlr
> that says
>
> warning(200): plsql.g:815:39; Decision can match input such as
> "{BLOCK..DIVIDE, OR..END, BODY..RETURN, TEMPORARY..INOUT_,
> TRANSACTION..VERTBAR}" using multiple alternatives: 1, 2 As a result,
> alternative(s) 2 were disabled for that input
>
>
> But line 815 is in fact the swallow_to_semi rule, so it must have
> subsumed this rule into some other rule with multiple selections.
>
>
>
> NOTICE  from Ab Initio: If received in error, please destroy and notify
> sender, and make no further use, disclosure, or distribution. This
> email (including attachments) may contain information subject to
> confidentiality obligations, and sender does not waive confidentiality
> or privilege.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jan 12 09:33:55 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 12 Jan 2011 09:33:55 -0800
Subject: [antlr-interest] Need help vector in C generated code
In-Reply-To: <201101120151.10713.jeffn@photorepo.com>
References: <201101101914.06396.jeffn@photorepo.com>	<201101110739.50101.jeffn@photorepo.com>
	<AANLkTiks11_ktV4aZkt_m=B8h7=s-9o4h+8bKjpA26Wg@mail.gmail.com>
	<201101120151.10713.jeffn@photorepo.com>
Message-ID: <748cbed6513e487eb457d5e8e2fd94ab@mail.gmail.com>

You should not specify k unless you have good reason to and you need
output=AST if you want to use the vectors, but then you should really use
an AST and not try to perform things in the parser as the next problem you
will have is tracking things that you malloc when a syntax error is found.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jeffrey Newman
> Sent: Wednesday, January 12, 2011 1:51 AM
> To: Aaron Leiby
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Need help vector in C generated code
>
> First, thanks for the reply.
>
> My options are:
>
> options {
> 	language = C;
> 	k = 4;
> }
>
> I didn't think I should have to. But...
>
> Jeffrey
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kcherr1 at tigers.lsu.edu  Wed Jan 12 10:29:59 2011
From: kcherr1 at tigers.lsu.edu (Kevin Cherry)
Date: Wed, 12 Jan 2011 12:29:59 -0600
Subject: [antlr-interest] Why Does Antlr3 Have Less Grammar Options Than
	Antlr2
Message-ID: <AANLkTi=Ryf2-Qh1+==nT1oep3o1mdUJ-Kw2WDa26_pAc@mail.gmail.com>

I have been using Antlr3 and have been very pleased with the power and
flexibility of it. However, I wanted to accomplish some things with it and
after searching through the book and online, I couldn't find any way to get
it to work. I then ran across some grammar options like classHeaderPrefix,
Ignore, and caseSensitivity. These were perfect for what I was trying to do,
but I quickly realized they are only for Antlr2. So I am wondering why these
(and several others) were taken out. I think I saw something about
caseSensitivity being hard to implement with different cultures or
something, however something like classHeaderPrefix I would think would be
simple to implement. Can anyone shed some light on why so many options were
left out and if they will ever come back in v3 or any newer versions?
P.S. This question may have been asked before, however I didn't find any
search feature for the archives (maybe I missed it?) and really didn't want
to check every one manually. If this has been asked before and someone has a
link to the post, then please let me know.

From maxgbr at hotmail.it  Wed Jan 12 13:49:03 2011
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Wed, 12 Jan 2011 22:49:03 +0100
Subject: [antlr-interest] AW ambiguous path visualization
Message-ID: <BLU0-SMTP1470471DE84DCB117D98EF2B0F10@phx.gbl>


  Hi, in AW i have some problem to get ambiguous path visualization and 
cannot get ambiguous rules to become red even if compilations emits 
several warnings.
My grammar is a pure parser that import another parser grammar.
I can e-mail grammars if necessary.
I have also noticed that AW doesn't correctly recognizes rules declared 
in imported grammar file and mark these rules as "Unrecognized rule".
Moreover for lexer rules i see that AW correctly recognizes rules if 
tokenVocab option is specified, but for killing warning 160 "tokenVocab 
option ignored in imported grammar XYZ" when removing tokenVocab option 
(because the same option is specified in imported file) AW doesn't 
recognizes lexer rules.
Anyway these are only my observations and dont know if are issues or not.

Best Regards
Max

From acondit at ipns.com  Thu Jan 13 12:20:01 2011
From: acondit at ipns.com (Alan Condit)
Date: Thu, 13 Jan 2011 12:20:01 -0800
Subject: [antlr-interest] Build errors in gunit trying to rebuild ANTLRWorks
	1.4.2
Message-ID: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>

When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series of errors from an area that I have never touched. I checked and made sure that I had the lastest revision. Here is what I am seeing:

[INFO] ANTLR: Processing source directory /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
Grammar /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g is up to date - build skipped
Grammar /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g is up to date - build skipped
Grammar /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g is up to date - build skipped
[INFO] [resources:resources {execution: default-resources}]
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 28 resources
[INFO] [compiler:compile {execution: default-compile}]
[INFO] Compiling 1 source file to /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18] cannot find symbol
symbol  : class ANTLRv3Lexer
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43] cannot find symbol
symbol  : class ANTLRv3Lexer
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18] cannot find symbol
symbol  : class ANTLRv3Parser
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45] cannot find symbol
symbol  : class ANTLRv3Parser
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18] cannot find symbol
symbol  : class StGUnitLexer
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43] cannot find symbol
symbol  : class StGUnitLexer
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18] cannot find symbol
symbol  : class StGUnitParser
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

/Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45] cannot find symbol
symbol  : class StGUnitParser
location: class org.antlr.gunit.swingui.model.TestSuiteFactory

HELP!!!!

What is going on?

Alan
---

Alan Condit
1085 Tierra Ct.
Woodburn, OR 97071

Email -- acondit at ipns.com
Home-Office (503) 982-0906


From pop.qvarnstrom at gmail.com  Thu Jan 13 15:59:56 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 14 Jan 2011 00:59:56 +0100
Subject: [antlr-interest] Build errors in gunit trying to rebuild
 ANTLRWorks 1.4.2
In-Reply-To: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
Message-ID: <AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>

That error is not strictly from building ANTLRWorks, but from the antlr
build, specifically from building gunit, which suddenly seems broken. (Same
result here.)

Cheers,
Pop

On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com> wrote:

> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series of
> errors from an area that I have never touched. I checked and made sure that
> I had the lastest revision. Here is what I am seeing:
>
> [INFO] ANTLR: Processing source directory
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
> Grammar
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
> is up to date - build skipped
> Grammar
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
> is up to date - build skipped
> Grammar
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
> is up to date - build skipped
> [INFO] [resources:resources {execution: default-resources}]
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] Copying 28 resources
> [INFO] [compiler:compile {execution: default-compile}]
> [INFO] Compiling 1 source file to
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
> [INFO]
> ------------------------------------------------------------------------
> [ERROR] BUILD FAILURE
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Compilation failure
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
> cannot find symbol
> symbol  : class ANTLRv3Lexer
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
> cannot find symbol
> symbol  : class ANTLRv3Lexer
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
> cannot find symbol
> symbol  : class ANTLRv3Parser
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
> cannot find symbol
> symbol  : class ANTLRv3Parser
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
> cannot find symbol
> symbol  : class StGUnitLexer
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
> cannot find symbol
> symbol  : class StGUnitLexer
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
> cannot find symbol
> symbol  : class StGUnitParser
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
> cannot find symbol
> symbol  : class StGUnitParser
> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>
> HELP!!!!
>
> What is going on?
>
> Alan
> ---
>
> Alan Condit
> 1085 Tierra Ct.
> Woodburn, OR 97071
>
> Email -- acondit at ipns.com
> Home-Office (503) 982-0906
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Thu Jan 13 16:58:24 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Jan 2011 16:58:24 -0800
Subject: [antlr-interest] Build errors in gunit trying to rebuild
	ANTLRWorks 1.4.2
In-Reply-To: <AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
Message-ID: <49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>

Yeah saw that. oops.Okay you can download it fresh here:

http://antlr.org/depot/antlr3/main/target

3.3.1 snapshot. it was really just gunit not the antlr stuff.
T

On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:

> That error is not strictly from building ANTLRWorks, but from the antlr
> build, specifically from building gunit, which suddenly seems broken. (Same
> result here.)
> 
> Cheers,
> Pop
> 
> On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com> wrote:
> 
>> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series of
>> errors from an area that I have never touched. I checked and made sure that
>> I had the lastest revision. Here is what I am seeing:
>> 
>> [INFO] ANTLR: Processing source directory
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
>> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
>> Grammar
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
>> is up to date - build skipped
>> Grammar
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
>> is up to date - build skipped
>> Grammar
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
>> is up to date - build skipped
>> [INFO] [resources:resources {execution: default-resources}]
>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>> [INFO] Copying 28 resources
>> [INFO] [compiler:compile {execution: default-compile}]
>> [INFO] Compiling 1 source file to
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
>> [INFO]
>> ------------------------------------------------------------------------
>> [ERROR] BUILD FAILURE
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] Compilation failure
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
>> cannot find symbol
>> symbol  : class ANTLRv3Lexer
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
>> cannot find symbol
>> symbol  : class ANTLRv3Lexer
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
>> cannot find symbol
>> symbol  : class ANTLRv3Parser
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
>> cannot find symbol
>> symbol  : class ANTLRv3Parser
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
>> cannot find symbol
>> symbol  : class StGUnitLexer
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
>> cannot find symbol
>> symbol  : class StGUnitLexer
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
>> cannot find symbol
>> symbol  : class StGUnitParser
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
>> cannot find symbol
>> symbol  : class StGUnitParser
>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> 
>> HELP!!!!
>> 
>> What is going on?
>> 
>> Alan
>> ---
>> 
>> Alan Condit
>> 1085 Tierra Ct.
>> Woodburn, OR 97071
>> 
>> Email -- acondit at ipns.com
>> Home-Office (503) 982-0906
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pop.qvarnstrom at gmail.com  Thu Jan 13 17:08:13 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 14 Jan 2011 02:08:13 +0100
Subject: [antlr-interest] Build errors in gunit trying to rebuild
 ANTLRWorks 1.4.2
In-Reply-To: <49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
	<49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
Message-ID: <AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>

Some imports were removed
from gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java
on the last commit (git commit aa9c4b5f54ac835e4aa9d1291c24e5aa8897f72c).
Restoring them fixed it.

Cheers,
Pop

2011/1/14 Terence Parr <parrt at cs.usfca.edu>

> Yeah saw that. oops.Okay you can download it fresh here:
>
> http://antlr.org/depot/antlr3/main/target
>
> 3.3.1 snapshot. it was really just gunit not the antlr stuff.
> T
>
> On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:
>
> > That error is not strictly from building ANTLRWorks, but from the antlr
> > build, specifically from building gunit, which suddenly seems broken.
> (Same
> > result here.)
> >
> > Cheers,
> > Pop
> >
> > On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com> wrote:
> >
> >> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series of
> >> errors from an area that I have never touched. I checked and made sure
> that
> >> I had the lastest revision. Here is what I am seeing:
> >>
> >> [INFO] ANTLR: Processing source directory
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
> >> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
> >> Grammar
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
> >> is up to date - build skipped
> >> Grammar
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
> >> is up to date - build skipped
> >> Grammar
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
> >> is up to date - build skipped
> >> [INFO] [resources:resources {execution: default-resources}]
> >> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> >> [INFO] Copying 28 resources
> >> [INFO] [compiler:compile {execution: default-compile}]
> >> [INFO] Compiling 1 source file to
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
> >> [INFO]
> >> ------------------------------------------------------------------------
> >> [ERROR] BUILD FAILURE
> >> [INFO]
> >> ------------------------------------------------------------------------
> >> [INFO] Compilation failure
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
> >> cannot find symbol
> >> symbol  : class ANTLRv3Lexer
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
> >> cannot find symbol
> >> symbol  : class ANTLRv3Lexer
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
> >> cannot find symbol
> >> symbol  : class ANTLRv3Parser
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
> >> cannot find symbol
> >> symbol  : class ANTLRv3Parser
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
> >> cannot find symbol
> >> symbol  : class StGUnitLexer
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
> >> cannot find symbol
> >> symbol  : class StGUnitLexer
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
> >> cannot find symbol
> >> symbol  : class StGUnitParser
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
> >> cannot find symbol
> >> symbol  : class StGUnitParser
> >> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>
> >> HELP!!!!
> >>
> >> What is going on?
> >>
> >> Alan
> >> ---
> >>
> >> Alan Condit
> >> 1085 Tierra Ct.
> >> Woodburn, OR 97071
> >>
> >> Email -- acondit at ipns.com
> >> Home-Office (503) 982-0906
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From parrt at cs.usfca.edu  Thu Jan 13 17:10:57 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Jan 2011 17:10:57 -0800
Subject: [antlr-interest] Build errors in gunit trying to rebuild
	ANTLRWorks 1.4.2
In-Reply-To: <AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
	<49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
	<AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>
Message-ID: <5AF68B74-3A90-4D92-AFC1-756A128AC31A@cs.usfca.edu>

Cool. wait, so the thing I just pushed is correct?
Ter
On Jan 13, 2011, at 5:08 PM, Pop Qvarnstr?m wrote:

> Some imports were removed
> from gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java
> on the last commit (git commit aa9c4b5f54ac835e4aa9d1291c24e5aa8897f72c).
> Restoring them fixed it.
> 
> Cheers,
> Pop
> 
> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
> 
>> Yeah saw that. oops.Okay you can download it fresh here:
>> 
>> http://antlr.org/depot/antlr3/main/target
>> 
>> 3.3.1 snapshot. it was really just gunit not the antlr stuff.
>> T
>> 
>> On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:
>> 
>>> That error is not strictly from building ANTLRWorks, but from the antlr
>>> build, specifically from building gunit, which suddenly seems broken.
>> (Same
>>> result here.)
>>> 
>>> Cheers,
>>> Pop
>>> 
>>> On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com> wrote:
>>> 
>>>> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series of
>>>> errors from an area that I have never touched. I checked and made sure
>> that
>>>> I had the lastest revision. Here is what I am seeing:
>>>> 
>>>> [INFO] ANTLR: Processing source directory
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
>>>> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
>>>> Grammar
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
>>>> is up to date - build skipped
>>>> Grammar
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
>>>> is up to date - build skipped
>>>> Grammar
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
>>>> is up to date - build skipped
>>>> [INFO] [resources:resources {execution: default-resources}]
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] Copying 28 resources
>>>> [INFO] [compiler:compile {execution: default-compile}]
>>>> [INFO] Compiling 1 source file to
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [ERROR] BUILD FAILURE
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] Compilation failure
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
>>>> cannot find symbol
>>>> symbol  : class ANTLRv3Lexer
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
>>>> cannot find symbol
>>>> symbol  : class ANTLRv3Lexer
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
>>>> cannot find symbol
>>>> symbol  : class ANTLRv3Parser
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
>>>> cannot find symbol
>>>> symbol  : class ANTLRv3Parser
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
>>>> cannot find symbol
>>>> symbol  : class StGUnitLexer
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
>>>> cannot find symbol
>>>> symbol  : class StGUnitLexer
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
>>>> cannot find symbol
>>>> symbol  : class StGUnitParser
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> 
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
>>>> cannot find symbol
>>>> symbol  : class StGUnitParser
>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>> 
>>>> HELP!!!!
>>>> 
>>>> What is going on?
>>>> 
>>>> Alan
>>>> ---
>>>> 
>>>> Alan Condit
>>>> 1085 Tierra Ct.
>>>> Woodburn, OR 97071
>>>> 
>>>> Email -- acondit at ipns.com
>>>> Home-Office (503) 982-0906
>>>> 
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Jan 13 17:15:38 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 13 Jan 2011 17:15:38 -0800
Subject: [antlr-interest] Build errors in gunit trying to rebuild
	ANTLRWorks 1.4.2
In-Reply-To: <5AF68B74-3A90-4D92-AFC1-756A128AC31A@cs.usfca.edu>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
	<49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
	<AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>
	<5AF68B74-3A90-4D92-AFC1-756A128AC31A@cs.usfca.edu>
Message-ID: <B9349C17-B236-4E47-8598-5BFDF46E79E0@cs.usfca.edu>

That's weird.I see the correct imports now

 import org.antlr.gunit.swingui.parsers.ANTLRv3Lexer;
import org.antlr.gunit.swingui.parsers.ANTLRv3Parser;
import org.antlr.gunit.swingui.parsers.StGUnitLexer;
import org.antlr.gunit.swingui.parsers.StGUnitParser;
import org.antlr.gunit.swingui.runner.TestSuiteAdapter;
import org.antlr.runtime.ANTLRReaderStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.stringtemplate.StringTemplate;
import org.antlr.stringtemplate.StringTemplateGroup;

Ter

On Jan 13, 2011, at 5:10 PM, Terence Parr wrote:

> Cool. wait, so the thing I just pushed is correct?
> Ter
> On Jan 13, 2011, at 5:08 PM, Pop Qvarnstr?m wrote:
> 
>> Some imports were removed
>> from gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java
>> on the last commit (git commit aa9c4b5f54ac835e4aa9d1291c24e5aa8897f72c).
>> Restoring them fixed it.
>> 
>> Cheers,
>> Pop
>> 
>> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
>> 
>>> Yeah saw that. oops.Okay you can download it fresh here:
>>> 
>>> http://antlr.org/depot/antlr3/main/target
>>> 
>>> 3.3.1 snapshot. it was really just gunit not the antlr stuff.
>>> T
>>> 
>>> On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:
>>> 
>>>> That error is not strictly from building ANTLRWorks, but from the antlr
>>>> build, specifically from building gunit, which suddenly seems broken.
>>> (Same
>>>> result here.)
>>>> 
>>>> Cheers,
>>>> Pop
>>>> 
>>>> On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com> wrote:
>>>> 
>>>>> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series of
>>>>> errors from an area that I have never touched. I checked and made sure
>>> that
>>>>> I had the lastest revision. Here is what I am seeing:
>>>>> 
>>>>> [INFO] ANTLR: Processing source directory
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
>>>>> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
>>>>> Grammar
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
>>>>> is up to date - build skipped
>>>>> Grammar
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
>>>>> is up to date - build skipped
>>>>> Grammar
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
>>>>> is up to date - build skipped
>>>>> [INFO] [resources:resources {execution: default-resources}]
>>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>>> [INFO] Copying 28 resources
>>>>> [INFO] [compiler:compile {execution: default-compile}]
>>>>> [INFO] Compiling 1 source file to
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
>>>>> [INFO]
>>>>> ------------------------------------------------------------------------
>>>>> [ERROR] BUILD FAILURE
>>>>> [INFO]
>>>>> ------------------------------------------------------------------------
>>>>> [INFO] Compilation failure
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
>>>>> cannot find symbol
>>>>> symbol  : class ANTLRv3Lexer
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
>>>>> cannot find symbol
>>>>> symbol  : class ANTLRv3Lexer
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
>>>>> cannot find symbol
>>>>> symbol  : class ANTLRv3Parser
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
>>>>> cannot find symbol
>>>>> symbol  : class ANTLRv3Parser
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
>>>>> cannot find symbol
>>>>> symbol  : class StGUnitLexer
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
>>>>> cannot find symbol
>>>>> symbol  : class StGUnitLexer
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
>>>>> cannot find symbol
>>>>> symbol  : class StGUnitParser
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> 
>>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
>>>>> cannot find symbol
>>>>> symbol  : class StGUnitParser
>>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>>>>> 
>>>>> HELP!!!!
>>>>> 
>>>>> What is going on?
>>>>> 
>>>>> Alan
>>>>> ---
>>>>> 
>>>>> Alan Condit
>>>>> 1085 Tierra Ct.
>>>>> Woodburn, OR 97071
>>>>> 
>>>>> Email -- acondit at ipns.com
>>>>> Home-Office (503) 982-0906
>>>>> 
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>> 
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pop.qvarnstrom at gmail.com  Thu Jan 13 17:23:44 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 14 Jan 2011 02:23:44 +0100
Subject: [antlr-interest] Build errors in gunit trying to rebuild
 ANTLRWorks 1.4.2
In-Reply-To: <B9349C17-B236-4E47-8598-5BFDF46E79E0@cs.usfca.edu>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
	<49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
	<AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>
	<5AF68B74-3A90-4D92-AFC1-756A128AC31A@cs.usfca.edu>
	<B9349C17-B236-4E47-8598-5BFDF46E79E0@cs.usfca.edu>
Message-ID: <AANLkTik9PUvtGN_C8Oe79_d5YjmQBbSFH46omUMb45uP@mail.gmail.com>

Looks good on
http://antlr.org/depot/antlr3/main//gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java,
but on github they seem to be gone since Jan 2. Weird indeed.

2011/1/14 Terence Parr <parrt at cs.usfca.edu>

> That's weird.I see the correct imports now
>
>  import org.antlr.gunit.swingui.parsers.ANTLRv3Lexer;
> import org.antlr.gunit.swingui.parsers.ANTLRv3Parser;
> import org.antlr.gunit.swingui.parsers.StGUnitLexer;
> import org.antlr.gunit.swingui.parsers.StGUnitParser;
> import org.antlr.gunit.swingui.runner.TestSuiteAdapter;
> import org.antlr.runtime.ANTLRReaderStream;
> import org.antlr.runtime.CommonTokenStream;
> import org.antlr.stringtemplate.StringTemplate;
> import org.antlr.stringtemplate.StringTemplateGroup;
>
> Ter
>
> On Jan 13, 2011, at 5:10 PM, Terence Parr wrote:
>
> > Cool. wait, so the thing I just pushed is correct?
> > Ter
> > On Jan 13, 2011, at 5:08 PM, Pop Qvarnstr?m wrote:
> >
> >> Some imports were removed
> >> from
> gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java
> >> on the last commit (git commit
> aa9c4b5f54ac835e4aa9d1291c24e5aa8897f72c).
> >> Restoring them fixed it.
> >>
> >> Cheers,
> >> Pop
> >>
> >> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
> >>
> >>> Yeah saw that. oops.Okay you can download it fresh here:
> >>>
> >>> http://antlr.org/depot/antlr3/main/target
> >>>
> >>> 3.3.1 snapshot. it was really just gunit not the antlr stuff.
> >>> T
> >>>
> >>> On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:
> >>>
> >>>> That error is not strictly from building ANTLRWorks, but from the
> antlr
> >>>> build, specifically from building gunit, which suddenly seems broken.
> >>> (Same
> >>>> result here.)
> >>>>
> >>>> Cheers,
> >>>> Pop
> >>>>
> >>>> On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com>
> wrote:
> >>>>
> >>>>> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a series
> of
> >>>>> errors from an area that I have never touched. I checked and made
> sure
> >>> that
> >>>>> I had the lastest revision. Here is what I am seeing:
> >>>>>
> >>>>> [INFO] ANTLR: Processing source directory
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
> >>>>> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
> >>>>> Grammar
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
> >>>>> is up to date - build skipped
> >>>>> Grammar
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
> >>>>> is up to date - build skipped
> >>>>> Grammar
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
> >>>>> is up to date - build skipped
> >>>>> [INFO] [resources:resources {execution: default-resources}]
> >>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> >>>>> [INFO] Copying 28 resources
> >>>>> [INFO] [compiler:compile {execution: default-compile}]
> >>>>> [INFO] Compiling 1 source file to
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
> >>>>> [INFO]
> >>>>>
> ------------------------------------------------------------------------
> >>>>> [ERROR] BUILD FAILURE
> >>>>> [INFO]
> >>>>>
> ------------------------------------------------------------------------
> >>>>> [INFO] Compilation failure
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
> >>>>> cannot find symbol
> >>>>> symbol  : class ANTLRv3Lexer
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
> >>>>> cannot find symbol
> >>>>> symbol  : class ANTLRv3Lexer
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
> >>>>> cannot find symbol
> >>>>> symbol  : class ANTLRv3Parser
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
> >>>>> cannot find symbol
> >>>>> symbol  : class ANTLRv3Parser
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
> >>>>> cannot find symbol
> >>>>> symbol  : class StGUnitLexer
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
> >>>>> cannot find symbol
> >>>>> symbol  : class StGUnitLexer
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
> >>>>> cannot find symbol
> >>>>> symbol  : class StGUnitParser
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>>
> >>>
> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
> >>>>> cannot find symbol
> >>>>> symbol  : class StGUnitParser
> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
> >>>>>
> >>>>> HELP!!!!
> >>>>>
> >>>>> What is going on?
> >>>>>
> >>>>> Alan
> >>>>> ---
> >>>>>
> >>>>> Alan Condit
> >>>>> 1085 Tierra Ct.
> >>>>> Woodburn, OR 97071
> >>>>>
> >>>>> Email -- acondit at ipns.com
> >>>>> Home-Office (503) 982-0906
> >>>>>
> >>>>>
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe:
> >>>>>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>>
> >>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From pop.qvarnstrom at gmail.com  Thu Jan 13 17:42:10 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 14 Jan 2011 02:42:10 +0100
Subject: [antlr-interest] Build errors in gunit trying to rebuild
 ANTLRWorks 1.4.2
In-Reply-To: <AANLkTik9PUvtGN_C8Oe79_d5YjmQBbSFH46omUMb45uP@mail.gmail.com>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
	<49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
	<AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>
	<5AF68B74-3A90-4D92-AFC1-756A128AC31A@cs.usfca.edu>
	<B9349C17-B236-4E47-8598-5BFDF46E79E0@cs.usfca.edu>
	<AANLkTik9PUvtGN_C8Oe79_d5YjmQBbSFH46omUMb45uP@mail.gmail.com>
Message-ID: <AANLkTimLqjoz5CB358ZWxgkS0XewQC4NNauoTA35Db-4@mail.gmail.com>

Just got note that github is synced, pulled changes and things are compiling
again.

Cheers,
Pop

2011/1/14 Pop Qvarnstr?m <pop.qvarnstrom at gmail.com>

> Looks good on
> http://antlr.org/depot/antlr3/main//gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java,
> but on github they seem to be gone since Jan 2. Weird indeed.
>
> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
>
>> That's weird.I see the correct imports now
>>
>>  import org.antlr.gunit.swingui.parsers.ANTLRv3Lexer;
>> import org.antlr.gunit.swingui.parsers.ANTLRv3Parser;
>> import org.antlr.gunit.swingui.parsers.StGUnitLexer;
>> import org.antlr.gunit.swingui.parsers.StGUnitParser;
>> import org.antlr.gunit.swingui.runner.TestSuiteAdapter;
>> import org.antlr.runtime.ANTLRReaderStream;
>> import org.antlr.runtime.CommonTokenStream;
>> import org.antlr.stringtemplate.StringTemplate;
>> import org.antlr.stringtemplate.StringTemplateGroup;
>>
>> Ter
>>
>> On Jan 13, 2011, at 5:10 PM, Terence Parr wrote:
>>
>> > Cool. wait, so the thing I just pushed is correct?
>> > Ter
>> > On Jan 13, 2011, at 5:08 PM, Pop Qvarnstr?m wrote:
>> >
>> >> Some imports were removed
>> >> from
>> gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java
>> >> on the last commit (git commit
>> aa9c4b5f54ac835e4aa9d1291c24e5aa8897f72c).
>> >> Restoring them fixed it.
>> >>
>> >> Cheers,
>> >> Pop
>> >>
>> >> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
>> >>
>> >>> Yeah saw that. oops.Okay you can download it fresh here:
>> >>>
>> >>> http://antlr.org/depot/antlr3/main/target
>> >>>
>> >>> 3.3.1 snapshot. it was really just gunit not the antlr stuff.
>> >>> T
>> >>>
>> >>> On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:
>> >>>
>> >>>> That error is not strictly from building ANTLRWorks, but from the
>> antlr
>> >>>> build, specifically from building gunit, which suddenly seems broken.
>> >>> (Same
>> >>>> result here.)
>> >>>>
>> >>>> Cheers,
>> >>>> Pop
>> >>>>
>> >>>> On Thu, Jan 13, 2011 at 9:20 PM, Alan Condit <acondit at ipns.com>
>> wrote:
>> >>>>
>> >>>>> When I tried to rebuild ANTLRWorks 1.4.2 this morning, I got a
>> series of
>> >>>>> errors from an area that I have never touched. I checked and made
>> sure
>> >>> that
>> >>>>> I had the lastest revision. Here is what I am seeing:
>> >>>>>
>> >>>>> [INFO] ANTLR: Processing source directory
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3
>> >>>>> ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
>> >>>>> Grammar
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/gUnit.g
>> >>>>> is up to date - build skipped
>> >>>>> Grammar
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/StGUnit.g
>> >>>>> is up to date - build skipped
>> >>>>> Grammar
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/antlr3/org/antlr/gunit/swingui/parsers/ANTLRv3.g
>> >>>>> is up to date - build skipped
>> >>>>> [INFO] [resources:resources {execution: default-resources}]
>> >>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>> >>>>> [INFO] Copying 28 resources
>> >>>>> [INFO] [compiler:compile {execution: default-compile}]
>> >>>>> [INFO] Compiling 1 source file to
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/target/classes
>> >>>>> [INFO]
>> >>>>>
>> ------------------------------------------------------------------------
>> >>>>> [ERROR] BUILD FAILURE
>> >>>>> [INFO]
>> >>>>>
>> ------------------------------------------------------------------------
>> >>>>> [INFO] Compilation failure
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,18]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class ANTLRv3Lexer
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[92,43]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class ANTLRv3Lexer
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,18]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class ANTLRv3Parser
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[94,45]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class ANTLRv3Parser
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,18]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class StGUnitLexer
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[158,43]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class StGUnitLexer
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,18]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class StGUnitParser
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>>
>> >>>
>> /Users/acondit/source/antlr3/acondit_localhost/code/antlr/main/gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java:[160,45]
>> >>>>> cannot find symbol
>> >>>>> symbol  : class StGUnitParser
>> >>>>> location: class org.antlr.gunit.swingui.model.TestSuiteFactory
>> >>>>>
>> >>>>> HELP!!!!
>> >>>>>
>> >>>>> What is going on?
>> >>>>>
>> >>>>> Alan
>> >>>>> ---
>> >>>>>
>> >>>>> Alan Condit
>> >>>>> 1085 Tierra Ct.
>> >>>>> Woodburn, OR 97071
>> >>>>>
>> >>>>> Email -- acondit at ipns.com
>> >>>>> Home-Office (503) 982-0906
>> >>>>>
>> >>>>>
>> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >>>>> Unsubscribe:
>> >>>>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>>>>
>> >>>>
>> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >>>> Unsubscribe:
>> >>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>>
>> >>>
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From acondit at ipns.com  Thu Jan 13 19:25:15 2011
From: acondit at ipns.com (Alan Condit)
Date: Thu, 13 Jan 2011 19:25:15 -0800
Subject: [antlr-interest] Build errors in gunit trying to rebuild
	ANTLRWorks 1.4.2
In-Reply-To: <AANLkTimLqjoz5CB358ZWxgkS0XewQC4NNauoTA35Db-4@mail.gmail.com>
References: <4AAE3805-02EB-4DD4-95A4-440E9F061888@ipns.com>
	<AANLkTi=oqPwsJm1cg258j92n18GKwNN=ZPx=tP93b+Li@mail.gmail.com>
	<49B6B044-2779-4A24-94A1-3B58DA02E62E@cs.usfca.edu>
	<AANLkTi=ASEM4O3F6Ww+ZNnjg-tmY52HNz_KUhfSqFJXO@mail.gmail.com>
	<5AF68B74-3A90-4D92-AFC1-756A128AC31A@cs.usfca.edu>
	<B9349C17-B236-4E47-8598-5BFDF46E79E0@cs.usfca.edu>
	<AANLkTik9PUvtGN_C8Oe79_d5YjmQBbSFH46omUMb45uP@mail.gmail.com>
	<AANLkTimLqjoz5CB358ZWxgkS0XewQC4NNauoTA35Db-4@mail.gmail.com>
Message-ID: <E2A428BA-F8AE-4083-A67A-06C5BD7E497E@ipns.com>

That fixed it for me. I was able to build again.

Thanks,
Alan
---

Alan Condit
1085 Tierra Ct.
Woodburn, OR 97071

Email -- acondit at ipns.com
Home-Office (503) 982-0906

On Jan 13, 2011, at 5:42 PM, Pop Qvarnstr?m wrote:

> Just got note that github is synced, pulled changes and things are compiling again.
> 
> Cheers,
> Pop
> 
> 2011/1/14 Pop Qvarnstr?m <pop.qvarnstrom at gmail.com>
> Looks good on http://antlr.org/depot/antlr3/main//gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java, but on github they seem to be gone since Jan 2. Weird indeed.
> 
> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
> That's weird.I see the correct imports now
> 
>  import org.antlr.gunit.swingui.parsers.ANTLRv3Lexer;
> import org.antlr.gunit.swingui.parsers.ANTLRv3Parser;
> import org.antlr.gunit.swingui.parsers.StGUnitLexer;
> import org.antlr.gunit.swingui.parsers.StGUnitParser;
> import org.antlr.gunit.swingui.runner.TestSuiteAdapter;
> import org.antlr.runtime.ANTLRReaderStream;
> import org.antlr.runtime.CommonTokenStream;
> import org.antlr.stringtemplate.StringTemplate;
> import org.antlr.stringtemplate.StringTemplateGroup;
> 
> Ter
> 
> On Jan 13, 2011, at 5:10 PM, Terence Parr wrote:
> 
> > Cool. wait, so the thing I just pushed is correct?
> > Ter
> > On Jan 13, 2011, at 5:08 PM, Pop Qvarnstr?m wrote:
> >
> >> Some imports were removed
> >> from gunit/src/main/java/org/antlr/gunit/swingui/model/TestSuiteFactory.java
> >> on the last commit (git commit aa9c4b5f54ac835e4aa9d1291c24e5aa8897f72c).
> >> Restoring them fixed it.
> >>
> >> Cheers,
> >> Pop
> >>
> >> 2011/1/14 Terence Parr <parrt at cs.usfca.edu>
> >>
> >>> Yeah saw that. oops.Okay you can download it fresh here:
> >>>
> >>> http://antlr.org/depot/antlr3/main/target
> >>>
> >>> 3.3.1 snapshot. it was really just gunit not the antlr stuff.
> >>> T
> >>>
> >>> On Jan 13, 2011, at 3:59 PM, Pop Qvarnstr?m wrote:
> >>>
> >>>> That error is not strictly from building ANTLRWorks, but from the antlr
> >>>> build, specifically from building gunit, which suddenly seems broken.
> >>> (Same
> >>>> result here.)
> >>>>
> >>>> Cheers,
> >>>> Pop
> >>>>


From mark.christiaens at sigasi.com  Fri Jan 14 06:40:22 2011
From: mark.christiaens at sigasi.com (Mark Christiaens)
Date: Fri, 14 Jan 2011 15:40:22 +0100
Subject: [antlr-interest] Strange parse result
Message-ID: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>

I have a small test grammar:

grammar test_grammar;

testrule : t*;
t: RULE_EQUALS | RULE_ABSTRACT_LITERAL | RULE_WS ;
RULE_EQUALS : ':=';
RULE_ABSTRACT_LITERAL : ('0'..'9')+ (':' ('0'..'9')+ ':')?;
RULE_WS : (' '|'\t')+;


When I debug this grammar (with ANTLRWorks 1.4.2 using ANLTR 3.3) I feed it
the input (no spaces)


15:=0


and it doesn't parse my input correctly.  When I change the input to (adding
space before ':=')

15 :=0

it parses successfully.  Any ideas what I'm missing here?

Mark
-- 
<http://www.sigasi.com>
Mark Christiaens, PhD
Expert Research Engineer
www.sigasi.com

From sorenkris at gmail.com  Fri Jan 14 07:30:18 2011
From: sorenkris at gmail.com (=?ISO-8859-1?Q?S=F8ren_Kristiansen?=)
Date: Fri, 14 Jan 2011 16:30:18 +0100
Subject: [antlr-interest] Strange parse result
In-Reply-To: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>
References: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>
Message-ID: <AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>

Hi Mark,
Without the space before ':=', 15: will match your
RULE_ABSTRACT_LITERAL rule and then '=' can't be
matchted.

Regards
   Soren

2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>

> I have a small test grammar:
>
> grammar test_grammar;
>
> testrule : t*;
> t: RULE_EQUALS | RULE_ABSTRACT_LITERAL | RULE_WS ;
> RULE_EQUALS : ':=';
> RULE_ABSTRACT_LITERAL : ('0'..'9')+ (':' ('0'..'9')+ ':')?;
> RULE_WS : (' '|'\t')+;
>
>
> When I debug this grammar (with ANTLRWorks 1.4.2 using ANLTR 3.3) I feed it
> the input (no spaces)
>
>
> 15:=0
>
>
> and it doesn't parse my input correctly.  When I change the input to
> (adding
> space before ':=')
>
> 15 :=0
>
> it parses successfully.  Any ideas what I'm missing here?
>
> Mark
> --
> <http://www.sigasi.com>
> Mark Christiaens, PhD
> Expert Research Engineer
> www.sigasi.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mark.christiaens at sigasi.com  Fri Jan 14 07:40:04 2011
From: mark.christiaens at sigasi.com (Mark Christiaens)
Date: Fri, 14 Jan 2011 16:40:04 +0100
Subject: [antlr-interest] Strange parse result
In-Reply-To: <AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>
References: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>
	<AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>
Message-ID: <AANLkTimgH+W18BNOE1LV8Bd_ed7AYE_=rK_GtWy3KGJ8@mail.gmail.com>

That was my first guess too but I doubt that that is the cause.

Without the space, I expect it to see the 15 (corresponding to
the ('0'..'9')+ part) and then look ahead and see that the next part must
start with a ':' followed by a number.  Since it doesn't see a number (it
sees a '=') it should end the RULE_ABSTRACT_LITERAL.  Then parsing can
continue and would start from the ':' to match the RULE_EQUALS and then
again the RULE_ABSTRACT_LITERAL.

Mark

On Fri, Jan 14, 2011 at 4:30 PM, S?ren Kristiansen <sorenkris at gmail.com>wrote:

> Hi Mark,
> Without the space before ':=', 15: will match your
> RULE_ABSTRACT_LITERAL rule and then '=' can't be
> matchted.
>
> Regards
>    Soren
>
> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
>
>> I have a small test grammar:
>>
>> grammar test_grammar;
>>
>> testrule : t*;
>> t: RULE_EQUALS | RULE_ABSTRACT_LITERAL | RULE_WS ;
>> RULE_EQUALS : ':=';
>> RULE_ABSTRACT_LITERAL : ('0'..'9')+ (':' ('0'..'9')+ ':')?;
>> RULE_WS : (' '|'\t')+;
>>
>>
>> When I debug this grammar (with ANTLRWorks 1.4.2 using ANLTR 3.3) I feed
>> it
>> the input (no spaces)
>>
>>
>> 15:=0
>>
>>
>> and it doesn't parse my input correctly.  When I change the input to
>> (adding
>> space before ':=')
>>
>> 15 :=0
>>
>> it parses successfully.  Any ideas what I'm missing here?
>>
>> Mark
>> --
>> <http://www.sigasi.com>
>>
>> Mark Christiaens, PhD
>> Expert Research Engineer
>> www.sigasi.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


-- 
<http://www.sigasi.com>
Mark Christiaens, PhD
Expert Research Engineer
www.sigasi.com

From sorenkris at gmail.com  Fri Jan 14 07:48:57 2011
From: sorenkris at gmail.com (=?ISO-8859-1?Q?S=F8ren_Kristiansen?=)
Date: Fri, 14 Jan 2011 16:48:57 +0100
Subject: [antlr-interest] Strange parse result
In-Reply-To: <AANLkTimgH+W18BNOE1LV8Bd_ed7AYE_=rK_GtWy3KGJ8@mail.gmail.com>
References: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>
	<AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>
	<AANLkTimgH+W18BNOE1LV8Bd_ed7AYE_=rK_GtWy3KGJ8@mail.gmail.com>
Message-ID: <AANLkTimOKfHKqEfPLZZMuLX+uF0Zb6Ld=XDqkxFPXsKC@mail.gmail.com>

Not sure your assumption about look ahead is correct but the gurus will have
to answer that ;-)

Try changing RULE_EQUALS to match  ';=' and  15;=0 as input will give the
expected result.

Regards
   Soren

2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>

> That was my first guess too but I doubt that that is the cause.
>
> Without the space, I expect it to see the 15 (corresponding to
> the ('0'..'9')+ part) and then look ahead and see that the next part must
> start with a ':' followed by a number.  Since it doesn't see a number (it
> sees a '=') it should end the RULE_ABSTRACT_LITERAL.  Then parsing can
> continue and would start from the ':' to match the RULE_EQUALS and then
> again the RULE_ABSTRACT_LITERAL.
>
> Mark
>
>
> On Fri, Jan 14, 2011 at 4:30 PM, S?ren Kristiansen <sorenkris at gmail.com>wrote:
>
>> Hi Mark,
>> Without the space before ':=', 15: will match your
>> RULE_ABSTRACT_LITERAL rule and then '=' can't be
>> matchted.
>>
>> Regards
>>    Soren
>>
>> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
>>
>>> I have a small test grammar:
>>>
>>> grammar test_grammar;
>>>
>>> testrule : t*;
>>> t: RULE_EQUALS | RULE_ABSTRACT_LITERAL | RULE_WS ;
>>> RULE_EQUALS : ':=';
>>> RULE_ABSTRACT_LITERAL : ('0'..'9')+ (':' ('0'..'9')+ ':')?;
>>> RULE_WS : (' '|'\t')+;
>>>
>>>
>>> When I debug this grammar (with ANTLRWorks 1.4.2 using ANLTR 3.3) I feed
>>> it
>>> the input (no spaces)
>>>
>>>
>>> 15:=0
>>>
>>>
>>> and it doesn't parse my input correctly.  When I change the input to
>>> (adding
>>> space before ':=')
>>>
>>> 15 :=0
>>>
>>> it parses successfully.  Any ideas what I'm missing here?
>>>
>>> Mark
>>> --
>>> <http://www.sigasi.com>
>>>
>>> Mark Christiaens, PhD
>>> Expert Research Engineer
>>> www.sigasi.com
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
>
> --
> <http://www.sigasi.com>
> Mark Christiaens, PhD
> Expert Research Engineer
> www.sigasi.com
>
>

From mark.christiaens at sigasi.com  Fri Jan 14 07:52:49 2011
From: mark.christiaens at sigasi.com (Mark Christiaens)
Date: Fri, 14 Jan 2011 16:52:49 +0100
Subject: [antlr-interest] Strange parse result
In-Reply-To: <AANLkTimOKfHKqEfPLZZMuLX+uF0Zb6Ld=XDqkxFPXsKC@mail.gmail.com>
References: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>
	<AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>
	<AANLkTimgH+W18BNOE1LV8Bd_ed7AYE_=rK_GtWy3KGJ8@mail.gmail.com>
	<AANLkTimOKfHKqEfPLZZMuLX+uF0Zb6Ld=XDqkxFPXsKC@mail.gmail.com>
Message-ID: <AANLkTimJP-RQWhsWA5S7N4-BOWNAfvAqk10pXqcOdcxb@mail.gmail.com>

Yes, that's right.  It's clearly a conflict with the ':' and the ':=' token
and using another character avoids the problem.  I can't do that though
since I'm trying to build a grammar for VHDL; the language is a given.

Mark

On Fri, Jan 14, 2011 at 4:48 PM, S?ren Kristiansen <sorenkris at gmail.com>wrote:

> Not sure your assumption about look ahead is correct but the gurus will
> have
> to answer that ;-)
>
> Try changing RULE_EQUALS to match  ';=' and  15;=0 as input will give the
> expected result.
>
> Regards
>   Soren
>
> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
>
> > That was my first guess too but I doubt that that is the cause.
> >
> > Without the space, I expect it to see the 15 (corresponding to
> > the ('0'..'9')+ part) and then look ahead and see that the next part must
> > start with a ':' followed by a number.  Since it doesn't see a number (it
> > sees a '=') it should end the RULE_ABSTRACT_LITERAL.  Then parsing can
> > continue and would start from the ':' to match the RULE_EQUALS and then
> > again the RULE_ABSTRACT_LITERAL.
> >
> > Mark
> >
> >
> > On Fri, Jan 14, 2011 at 4:30 PM, S?ren Kristiansen <sorenkris at gmail.com
> >wrote:
> >
> >> Hi Mark,
> >> Without the space before ':=', 15: will match your
> >> RULE_ABSTRACT_LITERAL rule and then '=' can't be
> >> matchted.
> >>
> >> Regards
> >>    Soren
> >>
> >> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
> >>
> >>> I have a small test grammar:
> >>>
> >>> grammar test_grammar;
> >>>
> >>> testrule : t*;
> >>> t: RULE_EQUALS | RULE_ABSTRACT_LITERAL | RULE_WS ;
> >>> RULE_EQUALS : ':=';
> >>> RULE_ABSTRACT_LITERAL : ('0'..'9')+ (':' ('0'..'9')+ ':')?;
> >>> RULE_WS : (' '|'\t')+;
> >>>
> >>>
> >>> When I debug this grammar (with ANTLRWorks 1.4.2 using ANLTR 3.3) I
> feed
> >>> it
> >>> the input (no spaces)
> >>>
> >>>
> >>> 15:=0
> >>>
> >>>
> >>> and it doesn't parse my input correctly.  When I change the input to
> >>> (adding
> >>> space before ':=')
> >>>
> >>> 15 :=0
> >>>
> >>> it parses successfully.  Any ideas what I'm missing here?
> >>>
> >>> Mark
> >>> --
> >>> <http://www.sigasi.com>
> >>>
> >>> Mark Christiaens, PhD
> >>> Expert Research Engineer
> >>> www.sigasi.com
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >
> >
> > --
> > <http://www.sigasi.com>
> > Mark Christiaens, PhD
> > Expert Research Engineer
> > www.sigasi.com
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
<http://www.sigasi.com>
Mark Christiaens, PhD
Expert Research Engineer
www.sigasi.com

From skip.burrell at ngc.com  Fri Jan 14 13:15:30 2011
From: skip.burrell at ngc.com (Burrell, Skip (IS))
Date: Fri, 14 Jan 2011 15:15:30 -0600
Subject: [antlr-interest] ant-antlr3 documentation?
Message-ID: <0E36CF63779A934D876C5E7FD29E74EB05B37AA7@XMBIL123.northgrum.com>

Is there any documentation on the ant-antlr3 ANT task? What are the
valid task attributes? My google-fu has so far wiffed on finding out
anything, and trying to find it on the ANTLR website is like trying to
find the proverbial needle in a haystack. Can I find any help here?

Thanks
Skip


From parrt at cs.usfca.edu  Fri Jan 14 13:37:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Jan 2011 13:37:54 -0800
Subject: [antlr-interest] StringTemplate v4 beta released
Message-ID: <A529BCDB-7000-4913-B71E-79F99D0A6DBF@cs.usfca.edu>

finally! http://bit.ly/gfHOaz
A complete reimplementation that is BSD license clean. next stop, antlr v4.

ter

From parrt at cs.usfca.edu  Fri Jan 14 13:50:57 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 14 Jan 2011 13:50:57 -0800
Subject: [antlr-interest] ant-antlr3 documentation?
In-Reply-To: <0E36CF63779A934D876C5E7FD29E74EB05B37AA7@XMBIL123.northgrum.com>
References: <0E36CF63779A934D876C5E7FD29E74EB05B37AA7@XMBIL123.northgrum.com>
Message-ID: <9744ADDF-6CFD-47A2-A2A1-2CCD96B3F959@cs.usfca.edu>

Hi. Thanks to Jurgen Pfundt, we have a fresh update to the task as well as some really great documentation:

http://www.antlr.org/wiki/display/ANTLR3/How+to+use+ant+with+ANTLR3

I also made a small faq entry in the ANTLR v3 FAQ.

 let me know how works out

Ter

On Jan 14, 2011, at 1:15 PM, Burrell, Skip (IS) wrote:

> Is there any documentation on the ant-antlr3 ANT task? What are the
> valid task attributes? My google-fu has so far wiffed on finding out
> anything, and trying to find it on the ANTLR website is like trying to
> find the proverbial needle in a haystack. Can I find any help here?
> 
> Thanks
> Skip
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From nikolai.fiikov at gmail.com  Sat Jan 15 02:43:07 2011
From: nikolai.fiikov at gmail.com (fikin)
Date: Sat, 15 Jan 2011 12:43:07 +0200
Subject: [antlr-interest] a range as single token?
Message-ID: <AANLkTi=N0-pDjR9zBmB-=0Oz7GcL6J3VON-+7kTE0CL=@mail.gmail.com>

most likely this is obviously stupid question, pardon me in advance please.

what exactly is wrong with this grammar?

lines 	:	line (NEWLINE line)*;
line 	:	'\u0020'..'\u007F'*;
NEWLINE :	'\r'? '\n';

...
[12:40:17] warning(200): dd.g:4:9: Decision can match input such as
"EOF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
...
[12:40:17] Interpreting...
[12:40:17] problem matching token at 1:1
NoViableAltException('1'@[1:1: Tokens : ( T__5 | T__6 | NEWLINE );])
...

From bkiers at gmail.com  Sat Jan 15 02:50:16 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 15 Jan 2011 11:50:16 +0100
Subject: [antlr-interest] a range as single token?
In-Reply-To: <AANLkTi=N0-pDjR9zBmB-=0Oz7GcL6J3VON-+7kTE0CL=@mail.gmail.com>
References: <AANLkTi=N0-pDjR9zBmB-=0Oz7GcL6J3VON-+7kTE0CL=@mail.gmail.com>
Message-ID: <AANLkTikLYud5XqQHkc_X3wTQVj310KvOrXjoX0AUbAJr@mail.gmail.com>

On Sat, Jan 15, 2011 at 11:43 AM, fikin <nikolai.fiikov at gmail.com> wrote:

> most likely this is obviously stupid question, pardon me in advance please.
>
> what exactly is wrong with this grammar?
>
> lines   :       line (NEWLINE line)*;
> line    :       '\u0020'..'\u007F'*;
> NEWLINE :       '\r'? '\n';
>

The range operator works differently inside a parser-rule.
For example, the rule *foo*:

foo
  :  A..C
  ;

A : 'a';
Z : 'z';
C : 'c';


will match one of the tokens A, Z or C (not one of the characters 'a', 'b'
or 'c'!).

Just as the `.` (DOT meta character) that has a different meaning depending
in which rule it is used: it means 'any character' inside lexer rules, while
it means 'any token' inside parser rules.

Regards,

Bart.

From nikolai.fiikov at gmail.com  Sat Jan 15 03:09:47 2011
From: nikolai.fiikov at gmail.com (fikin)
Date: Sat, 15 Jan 2011 13:09:47 +0200
Subject: [antlr-interest] a range as single token?
In-Reply-To: <AANLkTikLYud5XqQHkc_X3wTQVj310KvOrXjoX0AUbAJr@mail.gmail.com>
References: <AANLkTi=N0-pDjR9zBmB-=0Oz7GcL6J3VON-+7kTE0CL=@mail.gmail.com>
	<AANLkTikLYud5XqQHkc_X3wTQVj310KvOrXjoX0AUbAJr@mail.gmail.com>
Message-ID: <AANLkTinbYsLkQUhtEAMjpxvmZ+cacuwT77Wo0mBNy-3i@mail.gmail.com>

>> what exactly is wrong with this grammar?
>>
>> lines ? : ? ? ? line (NEWLINE line)*;
>> line ? ?: ? ? ? '\u0020'..'\u007F'*;
>> NEWLINE : ? ? ? '\r'? '\n';
>
> The range operator works differently inside a parser-rule.
> For example, the rule foo:
>
> foo
> ??: ?A..C
> ??;
> A : 'a';
> Z : 'z';
> C : 'c';
>
> will match one of the tokens A, Z or C (not one of the characters 'a', 'b'
> or 'c'!).

i also noticed that following works just fine:
lines   :       line (NEWLINE line)*;
line    :       CHAR*;
NEWLINE :       '\r'? '\n';
CHAR    :       '\u0020'..'\u007F';

is there a way i can make a rule token is a sequence of values as
opposing a sequence of tokens?

From bkiers at gmail.com  Sat Jan 15 03:17:12 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 15 Jan 2011 12:17:12 +0100
Subject: [antlr-interest] a range as single token?
In-Reply-To: <AANLkTinbYsLkQUhtEAMjpxvmZ+cacuwT77Wo0mBNy-3i@mail.gmail.com>
References: <AANLkTi=N0-pDjR9zBmB-=0Oz7GcL6J3VON-+7kTE0CL=@mail.gmail.com>
	<AANLkTikLYud5XqQHkc_X3wTQVj310KvOrXjoX0AUbAJr@mail.gmail.com>
	<AANLkTinbYsLkQUhtEAMjpxvmZ+cacuwT77Wo0mBNy-3i@mail.gmail.com>
Message-ID: <AANLkTikctBNDz7wMNCbmfVoozFr7XoWuh4hQZ=zY8BVm@mail.gmail.com>

>
> i also noticed that following works just fine:
> lines   :       line (NEWLINE line)*;
> line    :       CHAR*;
> NEWLINE :       '\r'? '\n';
> CHAR    :       '\u0020'..'\u007F';


Yes, because you are now using the range operator inside a lexer rule (I
presume you know the difference between parser- and lexer rules?).



> is there a way i can make a rule token is a sequence of values as
> opposing a sequence of tokens?
>

I don't know what you mean by that.

Regards,

Bart.

From bkiers at gmail.com  Sat Jan 15 04:35:53 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 15 Jan 2011 13:35:53 +0100
Subject: [antlr-interest] a range as single token?
In-Reply-To: <AANLkTinZHTpVYOcDPRnD5=-jfXBVChkkUKURFFwufNYu@mail.gmail.com>
References: <AANLkTi=N0-pDjR9zBmB-=0Oz7GcL6J3VON-+7kTE0CL=@mail.gmail.com>
	<AANLkTikLYud5XqQHkc_X3wTQVj310KvOrXjoX0AUbAJr@mail.gmail.com>
	<AANLkTinbYsLkQUhtEAMjpxvmZ+cacuwT77Wo0mBNy-3i@mail.gmail.com>
	<AANLkTikctBNDz7wMNCbmfVoozFr7XoWuh4hQZ=zY8BVm@mail.gmail.com>
	<AANLkTinZHTpVYOcDPRnD5=-jfXBVChkkUKURFFwufNYu@mail.gmail.com>
Message-ID: <AANLkTini2NDiqnCdO6bMCQ9M4T43hh7G8icxFixAqkMF@mail.gmail.com>

On Sat, Jan 15, 2011 at 1:23 PM, fikin <nikolai.fiikov at gmail.com> wrote:

> right. is there a way to make the lexer provide "line" content as
> single token as opposing to a container of "char" tokens?
>

Sure, like this:

lines   :       CHARS (NEWLINE CHARS)*;
NEWLINE :       '\r'? '\n';
CHARS   :       '\u0020'..'\u007F'+;


And if there can be empty lines, do:

lines   :       CHARS? (NEWLINE CHARS?)*;


Regards,

Bart.

From mark.christiaens at sigasi.com  Sun Jan 16 13:23:57 2011
From: mark.christiaens at sigasi.com (Mark Christiaens)
Date: Sun, 16 Jan 2011 22:23:57 +0100
Subject: [antlr-interest] Strange parse result
In-Reply-To: <AANLkTinA5BgLNX=Ph_OPJtS39St5p3U2XiQH2ZTgmwVZ@mail.gmail.com>
References: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>
	<AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>
	<AANLkTimgH+W18BNOE1LV8Bd_ed7AYE_=rK_GtWy3KGJ8@mail.gmail.com>
	<AANLkTimOKfHKqEfPLZZMuLX+uF0Zb6Ld=XDqkxFPXsKC@mail.gmail.com>
	<AANLkTimJP-RQWhsWA5S7N4-BOWNAfvAqk10pXqcOdcxb@mail.gmail.com>
	<AANLkTikx5hYogknD2WKjWt_WaGNPnqyH16gh69xxAvFj@mail.gmail.com>
	<AANLkTinA5BgLNX=Ph_OPJtS39St5p3U2XiQH2ZTgmwVZ@mail.gmail.com>
Message-ID: <AANLkTinM-y5CGOTaDtmv8ed6yAbY7koxFTRj=iyw+iwu@mail.gmail.com>

I simplified my test case further.  The grammar is now:

grammar test_grammar;

start : t*;
t: ASSIGN | NUM ;
ASSIGN : ':=';
//NUM : '0';
NUM : '0' ':0'?;

I would expect this to be able to match the input

0:=0

but it doesn't.  Changing the definition of NUM to the commented version and
the grammar does match the input.

Mark

On Fri, Jan 14, 2011 at 11:37 PM, Mark Christiaens <
mark.christiaens at sigasi.com> wrote:

> Indeed, looks like that should work.  I cannot use this approach though
> since I do not directly generate the ANTLR grammar code myself.  The code is
> generated automatically from an Xtext grammar.  That type of grammar does
> not allow me to embed syntactic/semantic predicates and other advanced
> approaches.
>
> So, I would still like to know why exactly the basic example does not work.
>  Then I can maybe reformulate it to avoid the problem.
>
> Thanks for the help,
>
> Mark
>
>
> On Fri, Jan 14, 2011 at 5:46 PM, S?ren Kristiansen <sorenkris at gmail.com>wrote:
>
>> You could try something like:
>>
>> RULE_ABSTRACT_LITERAL : ('0'..'9')+ LITERAL_SUFFIX?;
>>
>> fragment LITERAL_SUFFIX
>>     : {input.LT(1)==':'&& input.LT(2)!='='}?=> (':'  ('0'..'9')+ ':')
>>
>>     ;
>>
>> Regards
>>    Soren
>>
>> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
>>
>>> Yes, that's right.  It's clearly a conflict with the ':' and the ':='
>>> token and using another character avoids the problem.  I can't do that
>>> though since I'm trying to build a grammar for VHDL; the language is a
>>> given.
>>>
>>> Mark
>>>
>>>
>>> On Fri, Jan 14, 2011 at 4:48 PM, S?ren Kristiansen <sorenkris at gmail.com>wrote:
>>>
>>>> Not sure your assumption about look ahead is correct but the gurus will
>>>> have
>>>> to answer that ;-)
>>>>
>>>> Try changing RULE_EQUALS to match  ';=' and  15;=0 as input will give
>>>> the
>>>> expected result.
>>>>
>>>> Regards
>>>>   Soren
>>>>
>>>> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
>>>>
>>>> > That was my first guess too but I doubt that that is the cause.
>>>> >
>>>> > Without the space, I expect it to see the 15 (corresponding to
>>>> > the ('0'..'9')+ part) and then look ahead and see that the next part
>>>> must
>>>> > start with a ':' followed by a number.  Since it doesn't see a number
>>>> (it
>>>> > sees a '=') it should end the RULE_ABSTRACT_LITERAL.  Then parsing can
>>>> > continue and would start from the ':' to match the RULE_EQUALS and
>>>> then
>>>> > again the RULE_ABSTRACT_LITERAL.
>>>> >
>>>> > Mark
>>>> >
>>>> >
>>>> > On Fri, Jan 14, 2011 at 4:30 PM, S?ren Kristiansen <
>>>> sorenkris at gmail.com>wrote:
>>>> >
>>>> >> Hi Mark,
>>>> >> Without the space before ':=', 15: will match your
>>>> >> RULE_ABSTRACT_LITERAL rule and then '=' can't be
>>>> >> matchted.
>>>> >>
>>>> >> Regards
>>>> >>    Soren
>>>> >>
>>>> >> 2011/1/14 Mark Christiaens <mark.christiaens at sigasi.com>
>>>> >>
>>>> >>> I have a small test grammar:
>>>> >>>
>>>> >>> grammar test_grammar;
>>>> >>>
>>>> >>> testrule : t*;
>>>> >>> t: RULE_EQUALS | RULE_ABSTRACT_LITERAL | RULE_WS ;
>>>> >>> RULE_EQUALS : ':=';
>>>> >>> RULE_ABSTRACT_LITERAL : ('0'..'9')+ (':' ('0'..'9')+ ':')?;
>>>> >>> RULE_WS : (' '|'\t')+;
>>>> >>>
>>>> >>>
>>>> >>> When I debug this grammar (with ANTLRWorks 1.4.2 using ANLTR 3.3) I
>>>> feed
>>>> >>> it
>>>> >>> the input (no spaces)
>>>> >>>
>>>> >>>
>>>> >>> 15:=0
>>>> >>>
>>>> >>>
>>>> >>> and it doesn't parse my input correctly.  When I change the input to
>>>> >>> (adding
>>>> >>> space before ':=')
>>>> >>>
>>>> >>> 15 :=0
>>>> >>>
>>>> >>> it parses successfully.  Any ideas what I'm missing here?
>>>> >>>
>>>> >>> Mark
>>>> >>> --
>>>> >>> <http://www.sigasi.com>
>>>> >>>
>>>> >>> Mark Christiaens, PhD
>>>> >>> Expert Research Engineer
>>>> >>> www.sigasi.com
>>>> >>>
>>>> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> >>> Unsubscribe:
>>>> >>>
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>> >>>
>>>> >>
>>>> >>
>>>> >
>>>> >
>>>> > --
>>>> > <http://www.sigasi.com>
>>>> > Mark Christiaens, PhD
>>>> > Expert Research Engineer
>>>> > www.sigasi.com
>>>> >
>>>> >
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>>
>>> --
>>> <http://www.sigasi.com>
>>> Mark Christiaens, PhD
>>> Expert Research Engineer
>>> www.sigasi.com
>>>
>>>
>>
>
>
> --
> <http://www.sigasi.com>
> Mark Christiaens, PhD
> Expert Research Engineer
> www.sigasi.com
>
>


-- 
<http://www.sigasi.com>
Mark Christiaens, PhD
Expert Research Engineer
www.sigasi.com

From adityad at gmail.com  Sun Jan 16 21:01:02 2011
From: adityad at gmail.com (Aditya Damodaran)
Date: Mon, 17 Jan 2011 00:01:02 -0500
Subject: [antlr-interest] Newbie question on symbol tables and type
	validation
Message-ID: <AANLkTikb_qFET660bLsnUyHvJA5R7SuWKu4aVULMQNRC@mail.gmail.com>

First of all : Hello world! I'm a complete antlr newbie that is attempting
to navigate this all powerful tool (TParr you are my hero!) and create a
simple language which has assignments and expressions. The references are to
external data objects in a schema and I need to make sure the types work out
correctly and the scopes are multiplied through...e.g.


c.d= x.y + sum(a.b{c*d.e})*g

will become:

c.d=x.y + sum(a.b.c * a.b.d.e)*g


I also need to make sure that all these references are valid and the types
for all of these expressions work out correctly (e.g. am not assigning a
String to a float etc.). Using the 2 books and copious amounts of JavaDude
(thanks to Scott S as well!) I have blunderingly reached the below grammar
which is nice.


What I'm confused about completely is how I can return types from the
expression matching rules and still have the AST so I can eventually
evaluate it. I know this is a whale of a question but any pointers would be
super useful.

To summarize:


1)

How do I turn the following tree:

(ASSIGNMENT (REFERENCE x) (FUNC sum (SCOPE (REFERENCE a b) (* (REFERENCE c)
(REFERENCE d)))))


Into

(ASSIGNMENT (REFERENCE x) (FUNC sum (* (REFERENCE a b c) (REFERENCE a b d)))


using tree grammars or some kind of AST expressions.


2)Also how do I make sure that a.b.c is a valid symbol and the types of the
expressions match up? I have collections of all valid symbols and their
types etc. I can obviously take the tree and crete a copy with my own types
and then do multiple runs across it but I feel like I'm missing some basic
info which would speed up the task tremendously.


3)How do I at rule "term" below make sure that any subrule which matches
qualifiedid is replaced (after validation) by the concatenation of the scope
being stored globally and the tokens in the list for qualified ids?


Please help if you can...


Thanks,

Adi


Newbie grammar below:




grammar Rules;

options{

  language=Java;

  output=AST;

  ASTLabelType=CommonTree;

}


tokens{

PLUS='+';

MINUS='-';

MULTOP='*';

DIV='/';

POW='^';

NOT='!';

GT='>';

LT='<';

GE='>=';

LE='<=';

NE='!=';

EQ='==';

ASSIGN='=';

PARENOPEN='(';

PARENCLOSE=')';

AND='and';

OR='or';

SCOPEOPEN='{';

SCOPECLOSE='}';

DEREF='.';

COMMA=',';

IF='if';

SCOPE;

FUNC;

REFERENCE;

ASSIGNMENT;

}

@header {

  package rules;

}


@lexer::header {

  package rules;

}




rule:  (statement)+ EOF!;


vardef:

      qualifiedid ASSIGN^ expression

;


qualifiedid:

      j+=ID ((DEREF j+=ID)*) -> ^(REFERENCE $j+)

;


statement:

  vardef;



evaledif:

  IF^ PARENOPEN expression COMMA expression COMMA expression PARENCLOSE;


scopedexpression:

  qualifiedid so=SCOPEOPEN expression SCOPECLOSE -> ^(SCOPE qualifiedid
expression);


funccall:

      ID po=PARENOPEN exprlist PARENCLOSE -> ^(FUNC ID exprlist)

;


exprlist:

 (expression (COMMA (expression))*)?

;


term:

       qualifiedid

     | PARENOPEN expression PARENCLOSE -> expression

     | INT

     | FLOAT

     | STRING

     | funccall

     | scopedexpression

     | evaledif

;


//operator precedence

negation: NOT^* term;

unary:  (PLUS!|MINUS^)* negation;

power  : unary (POW^ unary)*;

mult: power ((MULTOP^|DIV^) power)*;

add : mult ((PLUS^|MINUS^) mult)*;

compare: add ((GT^|LT^|EQ^|GE^|LE^|NE^) add)*;

expression: compare ((AND^ | OR^) compare)*;



ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*

    ;



INT : '0'..'9'+

    ;


FLOAT

    :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?

    |   '.' ('0'..'9')+ EXPONENT?

    |   ('0'..'9')+ EXPONENT

    ;


COMMENT

    :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}

    |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}

    ;


WS  :   ( ' '

        | '\t'

        | '\r'

        | '\n'

        ) {$channel=HIDDEN;}

    ;


STRING

    :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'

    ;


fragment

EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;


fragment

HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;


fragment

ESC_SEQ

    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')

    |   UNICODE_ESC

    |   OCTAL_ESC

    ;


fragment

OCTAL_ESC

    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')

    |   '\\' ('0'..'7') ('0'..'7')

    |   '\\' ('0'..'7')

    ;


fragment

UNICODE_ESC

    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT

    ;

From micha-1 at fantasymail.de  Mon Jan 17 02:25:15 2011
From: micha-1 at fantasymail.de (Micha)
Date: Mon, 17 Jan 2011 11:25:15 +0100
Subject: [antlr-interest] Strange parse result
In-Reply-To: <AANLkTinM-y5CGOTaDtmv8ed6yAbY7koxFTRj=iyw+iwu@mail.gmail.com>
References: <AANLkTikuU_GKiyYD_YG6FdwWGrF=5F91E_aZk5XLVsjD@mail.gmail.com>	<AANLkTik3L2DGDqQwKWvsEYYYyESRFq8O4-1x6Bxm4xKU@mail.gmail.com>	<AANLkTimgH+W18BNOE1LV8Bd_ed7AYE_=rK_GtWy3KGJ8@mail.gmail.com>	<AANLkTimOKfHKqEfPLZZMuLX+uF0Zb6Ld=XDqkxFPXsKC@mail.gmail.com>	<AANLkTimJP-RQWhsWA5S7N4-BOWNAfvAqk10pXqcOdcxb@mail.gmail.com>	<AANLkTikx5hYogknD2WKjWt_WaGNPnqyH16gh69xxAvFj@mail.gmail.com>	<AANLkTinA5BgLNX=Ph_OPJtS39St5p3U2XiQH2ZTgmwVZ@mail.gmail.com>
	<AANLkTinM-y5CGOTaDtmv8ed6yAbY7koxFTRj=iyw+iwu@mail.gmail.com>
Message-ID: <4D34190B.6060707@fantasymail.de>

Am 16.01.2011 22:23, schrieb Mark Christiaens:
> I simplified my test case further.  The grammar is now:
> 
> grammar test_grammar;
> 
> start : t*;
> t: ASSIGN | NUM ;
> ASSIGN : ':=';
> //NUM : '0';
> NUM : '0' ':0'?;
> 
> I would expect this to be able to match the input
> 
> 0:=0
> 
> but it doesn't.  Changing the definition of NUM to the commented version and
> the grammar does match the input.

some lookahead may help:

ASSIGN: (':=')=> ':=' ;
NUM: '0' ( (':0')=>':0' )?;

 Michael

From Richard.Andrysek at rg-mechatronics.com  Mon Jan 17 03:13:22 2011
From: Richard.Andrysek at rg-mechatronics.com (Richard Andrysek)
Date: Mon, 17 Jan 2011 12:13:22 +0100
Subject: [antlr-interest] WG: Question to the tree grammer
Message-ID: <66EFF9DCA4A4734CA208D3E8BC4C80101B21E6@rg-server.RG.local>

 

I want to switch from yacc. So I've looked on Videos from Scott
Stanchfield <http://vimeo.com/user566590> , especially on Part9 about a
tree grammar.

I've found a problem with an unary operator. The Interpreter in Eclipse
works fine, but the grammar tree not.

It simply can't accept things like this:

 

-5 - - + - 4

 

I've attached also my files. Is there a way, how can I ask somebody
else, than me? I assume, it is something with left/right association, is
it?

 

Thank you for hints

 

Richard

 

 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Sample4.g
Type: application/octet-stream
Size: 1203 bytes
Desc: Sample4.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110117/366097f2/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: EvaluatorWalker.g
Type: application/octet-stream
Size: 846 bytes
Desc: EvaluatorWalker.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110117/366097f2/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test4.java
Type: application/octet-stream
Size: 1228 bytes
Desc: Test4.java
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110117/366097f2/attachment-0002.obj 

From christian.lerch at km-works.eu  Mon Jan 17 04:13:58 2011
From: christian.lerch at km-works.eu (Christian Lerch)
Date: Mon, 17 Jan 2011 13:13:58 +0100
Subject: [antlr-interest] WG: Question to the tree grammer
In-Reply-To: <66EFF9DCA4A4734CA208D3E8BC4C80101B21E6@rg-server.RG.local>
References: <66EFF9DCA4A4734CA208D3E8BC4C80101B21E6@rg-server.RG.local>
Message-ID: <4D343286.2070707@km-works.eu>


From Richard.Andrysek at rg-mechatronics.com  Mon Jan 17 06:12:08 2011
From: Richard.Andrysek at rg-mechatronics.com (Richard Andrysek)
Date: Mon, 17 Jan 2011 15:12:08 +0100
Subject: [antlr-interest] WG: Question to the tree grammer
In-Reply-To: <4D343286.2070707@km-works.eu>
References: <66EFF9DCA4A4734CA208D3E8BC4C80101B21E6@rg-server.RG.local>
	<4D343286.2070707@km-works.eu>
Message-ID: <66EFF9DCA4A4734CA208D3E8BC4C80101B21EE@rg-server.RG.local>

Hi Christian,

 

this seems like a correct implementation:

 

...

unary

      :     MINUS unary -> ^(NEGATION unary)   

      |     PLUS unary ->  unary

      |     term              

      ;

...

 

The rest strays as before, only PLUS and MINUS are new tokens.

 

 

Von: Christian Lerch [mailto:christian.lerch at km-works.eu] 
Gesendet: Montag, 17. Januar 2011 13:14
An: antlr-interest at antlr.org; Richard Andrysek
Betreff: Re: [antlr-interest] WG: Question to the tree grammer

 

Hi Richard,
I also had a fierce fight with unary operators, although in the context of juxtaposition (which allows to ellide the * and write e.g. 2x instead of 2*x).
Please take a look at my small but tested grammar module that addresses this problem.
It implements 5 precedence levels for
1. binary +, -        (left-assoc)
2. multiplication    (left-assoc)
3. unary +, -
4. juxtaposition interpreted as multiplication    (left-assoc)
5. exponentiation    (right-assoc)
A little bit anoying with this grammar is the fact, that the multiplication implied by juxtaposition has precedence over normal multiplication.
On the other hand this can also be viewed as a feature, cause it allows you to write e.g. 1/a b which results in the same AST as 1/(a*b)
Of course you can drop this feature altogether by simply deleting rule arithSec and substituting all references by arithPrim.

Best wishes,
Chris

/*
    Arithmetic expression grammar 
        with 5-level operator precedence and associativity
        with handling of unary minus and unary plus
        with juxtaposition mapped to multiplication
        without bracketedExpr: 
            unnecessary parenthesis can be removed later by the code generator
*/
parser grammar ArithExpr2Parser;
options {
    language      = Java;
    output        = AST;
    tokenVocab     = ArithExpr2Lexer;
}
tokens {
    NEG;
    PAREN;
    TIMES;
}
formulae:    arithExpr EOF
    ;
arithExpr:    arithTerm ( (PLUS^|MINUS^) arithTerm )*
    ;
arithTerm:    arithFact ( (MULT^|DIV^) arithFact )*
    ;
arithFact:    MINUS arithSec -> ^(NEG arithSec)
    |            PLUS! arithSec
    |            arithSec
    ;
arithSec:    (arithPrim -> arithPrim) 
                 (p=arithPrim -> ^(TIMES $arithSec $p))*
    ;
arithPrim:    arithAtom ( POWER^ arithPrim )?
    ;
arithAtom:    IDENT
    |            NUMBER
    |            LPAREN arithExpr RPAREN    -> ^(PAREN arithExpr)
    ;


Am 17.01.2011 12:13, schrieb Richard Andrysek: 

 
 
I want to switch from yacc. So I've looked on Videos from Scott
Stanchfield <http://vimeo.com/user566590> <http://vimeo.com/user566590>  , especially on Part9 about a
tree grammar.
 
I've found a problem with an unary operator. The Interpreter in Eclipse
works fine, but the grammar tree not.
 
It simply can't accept things like this:
 
 
 
-5 - - + - 4
 
 
 
I've attached also my files. Is there a way, how can I ask somebody
else, than me? I assume, it is something with left/right association, is
it?
 
 
 
Thank you for hints
 
 
 
Richard
 
 
 
 
 
 
 
 
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

-- 

km-works | Ing. Christian Lerch KG

Gesch?ftsf?hrer: Christian Lerch ? FN: 249408 b, LG Wien ? UID: ATU57985808
Tel: +43 (720) 616 400 ? e-mail: christian.lerch at km-works.eu 


Die Information in dieser E-Mail-Nachricht samt Anlagen ist vertraulich. Die Kenntnisnahme und Verwendung der hier enthaltenen Informationen ist nur denjenigen Personen gestattet, an die diese Kommunikation adressiert ist und/oder die zur Kenntnisnahme und Verwendung dieser Daten ausdr?cklich erm?chtigt wurden. Sollten Sie diesem Personenkreis nicht angeh?ren, werden Sie hiemit davon in Kenntnis gesetzt, dass jegliche Weiter- und Wiedergabe, Vervielf?ltigung, Verbreitung, Verwendung und/oder Handeln aufgrund des Inhalts dieser Informationen zu unterlassen ist. Sollten Sie diese Nachricht versehentlich erhalten haben, ersuchen wir Sie, uns ?ber diesen Umstand zu unterrichten. Bitte l?schen Sie dann anschlie?end diese E-Mail endg?ltig von Ihrem System.

All information contained in this e-mail message including attachments is privileged and confidential. The information contained herein is intended solely for the use and knowledge of the individual(s) to whom this communication is addressed and/or others authorised to receive it. If you are not the intended recipient, you are hereby notified that any disclosure, copying, distribution, use and/or taking action in reliance on the contents of this information is strictly prohibited. If you accidentally received this e-mail, kindly let us know about this. On having done so, please delete this e-mail permanently from your system.


From rcook at rprodev.com  Mon Jan 17 10:31:52 2011
From: rcook at rprodev.com (Richard Cook)
Date: Mon, 17 Jan 2011 10:31:52 -0800
Subject: [antlr-interest] Patches to fix CSharp2 runtime project and add
	VS2010 project files
Message-ID: <AANLkTik_1JsrKmv6bfJ-V2NR=XW8sxZFfeDYV=Qt9Bn=@mail.gmail.com>

Dear All,

I submitted a pull request via the Github repo since I was not aware that it
was read-only. I have attached the patch files corresponding to these two
fixes to this e-mail (as suggested by anatol). These are summarized below:

   - 0001-Added-missing-file-IAstRuleReturnScope-1.cs-into-sou.patch
   Adds missing source file IAstRuleReturnScope`1.cs into CSharp2 project
   (this file is referenced from .csproj files and the interface is consumed
   elsewhere)
   - 0002-Generated-project-files-for-VS2010-for-CSharp2-runti.patch
   I cloned the VS2008 project files and migrated them to VS2010. This might
   be useful to anybody else who uses this IDE to develop Antlr projects.

 Thanks, Richard Cook.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0001-Added-missing-file-IAstRuleReturnScope-1.cs-into-sou.patch
Type: application/octet-stream
Size: 3116 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110117/d35a82bf/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 0002-Generated-project-files-for-VS2010-for-CSharp2-runti.patch
Type: application/octet-stream
Size: 21451 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110117/d35a82bf/attachment-0001.obj 

From ALehotsky at ABINITIO.COM  Mon Jan 17 13:40:02 2011
From: ALehotsky at ABINITIO.COM (Alan Lehotsky)
Date: Mon, 17 Jan 2011 16:40:02 -0500
Subject: [antlr-interest] collecting tokens without invoking parser rules...
Message-ID: <OFF4F140CA.3798F165-ON8525781B.005C8B2C-8525781B.007705CE@LocalDomain>

Using Antlr 3.2 with language=C as a target

For parsing Teradata's stored-procedure language (SPL), we have the issue 
of context-sensitive token hiding.

I'm trying to use rules for SQL statements embedded in SPL that just 
swallow the tokens, so we have rules like:


        swallow_to_semi :   ~ (  SEMI  ) * ;

                update_stmt :  UPDATE swallow_to_semi;

We take the stream of tokens from this UPDATE rule and pass them off to an 
existing SQL parser.

But, because SPL has an assignment statement rule that looks like

                assignment_stmt :  SET  dotted_name '='  expression SEMI;

and teradata SQL uses 'SET' within its own grammar, when I encounter a 
source statement like


               update mytable  set x = y, a = b where a = 'none' ;

I get an error that makes it clear to me that the Antlr parser is 'seeing' 
the 'set' and trying to invoke the assignment_stmt rule.
because the complaint is about expecting a "SEMI" at the source position 
where the comma is.

I don't think that redirecting EVERYTHING in the lexer after the UPDATE to 
an alternate channel will work in all cases, because there are other 
context sensitivities in play - for example:

SELECT has to read everything to a SEMI when it appears in a statement 
context, but when there is a select clause in a FOR statement, it must 
read upto a USING, FOR, DO or SEMI token.

So, what I tried so far was code that looks like 


  static ANTLR3_BOOLEAN semicolonMatch ( pplsqlParser ctx, pANTLR3_VECTOR 
& tokens)
  {
    pANTLR3_PARSER parser = ctx->pParser;
    pANTLR3_TOKEN_STREAM ts = parser->getTokenStream(parser);
    ANTLR3_INT32 tok;
    if( ! tokens)      // If we didn't have a token list, start one now
      tokens = ctx->vectors->newVector( ctx->vectors);

    if (LA(0) == SEMI) return false; // e.g. "COMMIT ;"

    while( ( tok=LA( 1) ) != EOF)
    {
      switch( tok)
      {
        case SEMI:       return true; 
        case EOF:        return false;
        default:
          tokens->add( tokens, LT( 1), NULL);
          ts->istream->consume( ts->istream);
          continue;
      }
    }
    return false;
  }


And a modified swallow_to_semi rule that looks like

     swallow_to_semi :  tokenlist+=( {semicolonMatch(ctx, $tokenlist) }? ) 
-> $tokenlist+

but that doesn't work correctly because it seems to preemptively swallow 
the SEMI and a statement like

        COMMIT;

fails.

This feels like something that should be relatively easy to do, but I 
don't seem to be able to figure out exactly how to make it happen and I 
haven't hit upon the right search terms to find an appropriate example in 
the Antlr-interest archives or the Wiki.



  
NOTICE  from Ab Initio: If received in error, please destroy and notify sender, and make no further use, disclosure, or distribution. This email (including attachments) may contain information subject to confidentiality obligations, and sender does not waive confidentiality or privilege.   

From maxgbr at hotmail.it  Mon Jan 17 14:25:50 2011
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Mon, 17 Jan 2011 23:25:50 +0100
Subject: [antlr-interest] Antlr 3.3 Generate wrong debug code C# target
Message-ID: <BLU0-SMTP17702626E4D5F5940C37000B0F40@phx.gbl>

  Hi, i'm writing because i have some problems using Antlr 3.3, target 
CSharp3 with -debug option.
Compile the attached grammar (taken from Antlr 3.3 examples)  with 
-debug, ANTLR generates wrong C# code eg:

     * generates wrong class definition eg: public partial class Myclass 
: DebugAntlr.Runtime.Parser instead of Antlr.Runtime.Debug.DebugParser
     * doesn't genrate static member decisionCanBacktrack
     * set the DebugListener readonly property in the constructor

Best Regards
Max
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestImport.rar
Type: application/octet-stream
Size: 805 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110117/d78d12f5/attachment.obj 

From sharwell at pixelminegames.com  Mon Jan 17 15:23:51 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 17 Jan 2011 17:23:51 -0600
Subject: [antlr-interest] Antlr 3.3 Generate wrong debug code C# target
In-Reply-To: <BLU0-SMTP17702626E4D5F5940C37000B0F40@phx.gbl>
References: <BLU0-SMTP17702626E4D5F5940C37000B0F40@phx.gbl>
Message-ID: <007d01cbb69d$9a9c5b10$cfd51130$@pixelminegames.com>

Hi Max,

The CSharp3 target does not currently support ANTLRWorks-style debugging.
I'm planning to support debugging in a future release of the target.

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Massimiliano Donini
Sent: Monday, January 17, 2011 4:26 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr 3.3 Generate wrong debug code C# target

  Hi, i'm writing because i have some problems using Antlr 3.3, target
CSharp3 with -debug option.
Compile the attached grammar (taken from Antlr 3.3 examples)  with -debug,
ANTLR generates wrong C# code eg:

     * generates wrong class definition eg: public partial class Myclass
: DebugAntlr.Runtime.Parser instead of Antlr.Runtime.Debug.DebugParser
     * doesn't genrate static member decisionCanBacktrack
     * set the DebugListener readonly property in the constructor

Best Regards
Max


From zaebis at telus.net  Mon Jan 17 18:50:50 2011
From: zaebis at telus.net (Kirill Tchimerine)
Date: Tue, 18 Jan 2011 02:50:50 -0000
Subject: [antlr-interest] next possible tokens
Message-ID: <00d701cb56d4$29091e30$4001a8c0@ktr>

Folks,
 
I have been struggling with trying to get a list of next possible tokens for
a bit now and may use some help.
 
A page here
http://www.antlr.org/wiki/pages/viewpage.action?pageId=11567208
 
talks about how to retrieve a list of possible options but it doesnt seem to
cover all bases so to speak. According to my observations ANTLR has two
places where next tokens can be obtained (Match function whose parameter
indicates next options and PushFollow that preceeds rule invocation and
places possibilities in a state follow stack). Also a rule may have optional
token (TOKEN1 TOKEN2* for example)  in which case TOKEN2 may or may not be
present but no mismatch errors are triggered. ANTLR however knows that
TOKEN2 may be expected.
 
Another case is when predicates are used in a rule. Only 1 alternative is
possible given rule semantics but all possible rule starts are reported as
expected tokens in push follow stack.
 
So what is the best strategy to get a list of next expected tokens that is
a/ generic (so I dont have to weave code all over parser to make it happen)
and b/ reliable (gives me next expected possible tokens only)
 
Rgds.
!!!
 

From foamdino at gmail.com  Mon Jan 17 22:41:13 2011
From: foamdino at gmail.com (Kevin Jackson)
Date: Tue, 18 Jan 2011 13:41:13 +0700
Subject: [antlr-interest] Strangeness when parsing strings and spaces
Message-ID: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>

Hi,

I know that this is a problem with my lexer and I'm doing something
stupid, but I have a problem with simple k,v pairs of the format:

[String "quoted string with spaces and non-alhpa chars"]

My grammar
------------------

LEFT_SQUARE: '[';
RIGHT_SQUARE: ']';
STRING: 'a'..'z'|'A'..'Z';
TEXT: ('a'..z'|'A'..'Z'|' '|',')+

pair: LEFT_SQUARE (info=STRING) ' ' '"' (value=TEXT) '"' RIGHT_SQUARE
NEWLINE+ -> transform(i={$info.text},v={$value.text});

This fails with "mismatched input expecting 'Test ' expecting STRING"
(note the space that should not be present).

pair: LEFT_SQUARE (info=TEXT) ' ' '"' (value=TEXT) '"' RIGHT_SQUARE
NEWLINE+ -> transform(i={$info.text},v={$value.text});

This grabs the space and passes it to transform (which I really don't want)

Can anyone see what I'm doing wrong?  I know the answer is probably simple

Thanks,
Kev

From bkiers at gmail.com  Mon Jan 17 23:21:22 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 18 Jan 2011 08:21:22 +0100
Subject: [antlr-interest] Strangeness when parsing strings and spaces
In-Reply-To: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>
References: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>
Message-ID: <AANLkTimEUX=be=zQFL66qGRny8EGBg4Jj-BLHV3DhLyo@mail.gmail.com>

On Tue, Jan 18, 2011 at 7:41 AM, Kevin Jackson <foamdino at gmail.com> wrote:

> Hi,
>
> I know that this is a problem with my lexer and I'm doing something
> stupid, but I have a problem with simple k,v pairs of the format:
>
> [String "quoted string with spaces and non-alhpa chars"]
>
> My grammar
> ------------------
>
> LEFT_SQUARE: '[';
> RIGHT_SQUARE: ']';
> STRING: 'a'..'z'|'A'..'Z';
> TEXT: ('a'..z'|'A'..'Z'|' '|',')+
>
>
Your STRING and TEXT have too much in common. Better let TEXT also include
the double quotes. Also, you could just skip the spaces outside you quoted
text and your STRING rule only matches a single character, which is probably
a mistake.

Try something like:

pair
  :  LEFT_SQUARE IDENTIFIER QUOTED_TEXT RIGHT_SQUARE
  ;

LEFT_SQUARE  : '[';
RIGHT_SQUARE : ']';
IDENTIFIER   : ('a'..'z'|'A'..'Z')+;
QUOTED_TEXT  : '"' ('a'..'z' | 'A'..'Z' | ' ' | ',' | '-')+ '"';
SPACES       : (' ' | '\t')+ {skip();};


Regards,

Bart.

From foamdino at gmail.com  Mon Jan 17 23:28:02 2011
From: foamdino at gmail.com (Kevin Jackson)
Date: Tue, 18 Jan 2011 14:28:02 +0700
Subject: [antlr-interest] Strangeness when parsing strings and spaces
In-Reply-To: <AANLkTimEUX=be=zQFL66qGRny8EGBg4Jj-BLHV3DhLyo@mail.gmail.com>
References: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>
	<AANLkTimEUX=be=zQFL66qGRny8EGBg4Jj-BLHV3DhLyo@mail.gmail.com>
Message-ID: <AANLkTi=1VgY7-22yF8jSvxfoTAo4R+O9kVZBPmh_R2VT@mail.gmail.com>

Hi,

> pair
> ??: ?LEFT_SQUARE IDENTIFIER QUOTED_TEXT RIGHT_SQUARE
> ??;
>
> LEFT_SQUARE ?: '[';
> RIGHT_SQUARE : ']';
> IDENTIFIER ? : ('a'..'z'|'A'..'Z')+;
> QUOTED_TEXT ?: '"' ('a'..'z' | 'A'..'Z' | ' ' | ',' | '-')+ '"';
> SPACES ? ? ? : (' ' | '\t')+ {skip();};

Thanks for the reply.  This nearly works!  However I don't want to
retain the '"' (quotes) in the rewrite rule, so although the
IDENTIFIER has fixed the first problem, I now have a problem with the
QUOTED_TEXT.

I should have mentioned that I suppose.

Thanks,
Kev

From bkiers at gmail.com  Mon Jan 17 23:35:11 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 18 Jan 2011 08:35:11 +0100
Subject: [antlr-interest] Strangeness when parsing strings and spaces
In-Reply-To: <AANLkTi=1VgY7-22yF8jSvxfoTAo4R+O9kVZBPmh_R2VT@mail.gmail.com>
References: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>
	<AANLkTimEUX=be=zQFL66qGRny8EGBg4Jj-BLHV3DhLyo@mail.gmail.com>
	<AANLkTi=1VgY7-22yF8jSvxfoTAo4R+O9kVZBPmh_R2VT@mail.gmail.com>
Message-ID: <AANLkTikvfvYi5MKREktzZ6p78CEaC730B-C9K_TG1ykp@mail.gmail.com>

On Tue, Jan 18, 2011 at 8:28 AM, Kevin Jackson <foamdino at gmail.com> wrote:

> Hi,
>
> > pair
> >   :  LEFT_SQUARE IDENTIFIER QUOTED_TEXT RIGHT_SQUARE
> >   ;
> >
> > LEFT_SQUARE  : '[';
> > RIGHT_SQUARE : ']';
> > IDENTIFIER   : ('a'..'z'|'A'..'Z')+;
> > QUOTED_TEXT  : '"' ('a'..'z' | 'A'..'Z' | ' ' | ',' | '-')+ '"';
> > SPACES       : (' ' | '\t')+ {skip();};
>
> Thanks for the reply.  This nearly works!  However I don't want to
> retain the '"' (quotes) in the rewrite rule, so although the
> IDENTIFIER has fixed the first problem, I now have a problem with the
> QUOTED_TEXT.
>
> I should have mentioned that I suppose.
>
> Thanks,
> Kev
>

Try something like this:

QUOTED_TEXT
  :  '"' ('a'..'z' | 'A'..'Z' | ' ' | ',' | '-')+ '"'
{setText(getText().substring(0, getText().length()-1));}
  ;


to strip the quotes in the lexing-stage.

Regards,

Bart.

From foamdino at gmail.com  Mon Jan 17 23:49:49 2011
From: foamdino at gmail.com (Kevin Jackson)
Date: Tue, 18 Jan 2011 14:49:49 +0700
Subject: [antlr-interest] Strangeness when parsing strings and spaces
In-Reply-To: <AANLkTikvfvYi5MKREktzZ6p78CEaC730B-C9K_TG1ykp@mail.gmail.com>
References: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>
	<AANLkTimEUX=be=zQFL66qGRny8EGBg4Jj-BLHV3DhLyo@mail.gmail.com>
	<AANLkTi=1VgY7-22yF8jSvxfoTAo4R+O9kVZBPmh_R2VT@mail.gmail.com>
	<AANLkTikvfvYi5MKREktzZ6p78CEaC730B-C9K_TG1ykp@mail.gmail.com>
Message-ID: <AANLkTi=AAQ0kFFcGVa9472G9gL+_GKcYw5ksUF7FYax1@mail.gmail.com>

Hi,

> Try something like this:
>
> QUOTED_TEXT
> ??: ?'"' ('a'..'z' | 'A'..'Z' | ' ' | ',' | '-')+ '"'
> {setText(getText().substring(0, getText().length()-1));}
> ??;

Thanks, that works perfectly.  I thought that there was a way to
achieve this through the lexer/tokenization process without resorting
to code fragments - I recall seeing something similar but cannot find
where I saw it in my history :(

A further question which I cannot find the answer too:

What is the difference between 'a'..'z'+ and ('a'..'z')+ ??

Thanks,
Kev

From bkiers at gmail.com  Mon Jan 17 23:55:34 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 18 Jan 2011 08:55:34 +0100
Subject: [antlr-interest] Strangeness when parsing strings and spaces
In-Reply-To: <AANLkTi=AAQ0kFFcGVa9472G9gL+_GKcYw5ksUF7FYax1@mail.gmail.com>
References: <AANLkTimnxVaemxHiuaWaWGKmYBoPfvP+L9N2pjDWBj=Z@mail.gmail.com>
	<AANLkTimEUX=be=zQFL66qGRny8EGBg4Jj-BLHV3DhLyo@mail.gmail.com>
	<AANLkTi=1VgY7-22yF8jSvxfoTAo4R+O9kVZBPmh_R2VT@mail.gmail.com>
	<AANLkTikvfvYi5MKREktzZ6p78CEaC730B-C9K_TG1ykp@mail.gmail.com>
	<AANLkTi=AAQ0kFFcGVa9472G9gL+_GKcYw5ksUF7FYax1@mail.gmail.com>
Message-ID: <AANLkTingztHHWY-=6AqrDYk3BZ6YpUdC-j1KSi9oGJdb@mail.gmail.com>

>
> A further question which I cannot find the answer too:
>
> What is the difference between 'a'..'z'+ and ('a'..'z')+ ??
>

In ANTLR v3.x, there is no difference (I seem to recall that in v2 of ANTLR,
the parenthesis were mandatory, in this case).

Regards,

Bart.

From markwright at internode.on.net  Tue Jan 18 04:28:11 2011
From: markwright at internode.on.net (Mark Wright)
Date: Tue, 18 Jan 2011 23:28:11 +1100
Subject: [antlr-interest] Haskell binding to the ANTLR parser generator C
	runtime library
Message-ID: <ymaaaiyqtus.fsf@internode.on.net>

Hi,

I'm pleased to announce the release of a Haskell binding to the
ANTLR LL(*) parser generator C runtime library.

The lexing and parsing is handled in C.  The C parser actions call
Haskell code to do things such as:

- enter data into the symbol table

- look up data in the symbol table to implement dis-ambiguating semantic
  predicates for parsing context sensitive programming languages.

- create Abstract Symbol Table entries.

The Haskell binding to the ANTLR parser generator C runtime library is at:

http://hackage.haskell.org/package/antlrc
https://github.com/markwright/antlrc

An example based on the implementation of arithmetic expressions example
from "Types and Programming Languages" by Benjamin Pierce, chapter 4, is
on github:

https://github.com/markwright/antlrc-examples/tree/master/src/tapl/arith

Building the example is somewhat challenging.  I provide a Makefile,
however it is specific to my system and will need to be customized.

Documentation for the ANTLR C runtime library is at:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR3+Code+Generation+-+C

Thanks, Mark

From quagly at me.com  Tue Jan 18 07:08:58 2011
From: quagly at me.com (Michael West)
Date: Tue, 18 Jan 2011 07:08:58 -0800 (PST)
Subject: [antlr-interest] where is cminus.tar.gz?
Message-ID: <1295363338554-5935862.post@n2.nabble.com>


Can you direct me to the cminus.tar.gz referenced in this article? 

http://www.antlr.org/wiki/display/ST/Language+Translation+Using+ANTLR+and+StringTemplate#

I don't quite see how all the pieces fit together into a system, it would be
very helpful to be able to step through the source files.  I see this
question has been asked before in this forum with no reply, maybe someone
has found them since then.



-- 
View this message in context: http://antlr.1301665.n2.nabble.com/where-is-cminus-tar-gz-tp5935862p5935862.html
Sent from the ANTLR mailing list archive at Nabble.com.

From Hiran.Chaudhuri at web.de  Tue Jan 18 08:10:28 2011
From: Hiran.Chaudhuri at web.de (Hiran Chaudhuri)
Date: Tue, 18 Jan 2011 17:10:28 +0100 (CET)
Subject: [antlr-interest] How to handle blackslashes correctly?
Message-ID: <1401546606.4308740.1295367028061.JavaMail.fmail@mwmweb061>

Hello everybody.

I've got input files with different meaning for backslashes. Therefore my lexer does not really know how to generate the tokens and the parser does not what I want it to do. Maybe someone can help me checking this?
A backslash before a linefeed means the linefeed is just whitespace, whereas elsewhere it is not.
A backslash in some regions of the file is meant to be part of a file path (Windows).
A backslash in some regions of the file is part of a regular expression. I'm not interested in parsing that, so it shall be handled like a string value.
A backslash before a quote inside a quoted string means the quote does not terminate the string.

I've created a grammar that can handle all cases from my point of view. Now let's look at one fragment:

BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

This should be parsed as
Keyword	BrowserMatch
value	\bMSIE
not	!
value	no-gzip!gzip-only-text/html
not	!
value	gzip-only-text/html

but it is parsed as
Keyword	BrowserMatch
unknown	\b
value	MSIE
...

My expression for value allows backslash and the necessary letters, still the parser thinks it should not recognize this value.
What can be the reason for that?

Hiran
___________________________________________________________
Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de

From jeffn at photorepo.com  Tue Jan 18 09:07:08 2011
From: jeffn at photorepo.com (Jeffrey Newman)
Date: Tue, 18 Jan 2011 09:07:08 -0800
Subject: [antlr-interest] where is cminus.tar.gz?
In-Reply-To: <1295363338554-5935862.post@n2.nabble.com>
References: <1295363338554-5935862.post@n2.nabble.com>
Message-ID: <201101180907.08809.jeffn@photorepo.com>

I never got a reply, but I did find them.

.../examples-V3/C/cminus

Jeffrey

From pop.qvarnstrom at gmail.com  Tue Jan 18 09:14:01 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Tue, 18 Jan 2011 18:14:01 +0100
Subject: [antlr-interest] How to handle blackslashes correctly?
In-Reply-To: <1401546606.4308740.1295367028061.JavaMail.fmail@mwmweb061>
References: <1401546606.4308740.1295367028061.JavaMail.fmail@mwmweb061>
Message-ID: <AANLkTimOidHV8G9bU=DqkAK5WN5q7Vvi_hGZ6rR_O5K4@mail.gmail.com>

Could you provide your grammar, or relevant parts of it?

Cheers,
Pop

On Tue, Jan 18, 2011 at 5:10 PM, Hiran Chaudhuri <Hiran.Chaudhuri at web.de>wrote:

> Hello everybody.
>
> I've got input files with different meaning for backslashes. Therefore my
> lexer does not really know how to generate the tokens and the parser does
> not what I want it to do. Maybe someone can help me checking this?
> A backslash before a linefeed means the linefeed is just whitespace,
> whereas elsewhere it is not.
> A backslash in some regions of the file is meant to be part of a file path
> (Windows).
> A backslash in some regions of the file is part of a regular expression.
> I'm not interested in parsing that, so it shall be handled like a string
> value.
> A backslash before a quote inside a quoted string means the quote does not
> terminate the string.
>
> I've created a grammar that can handle all cases from my point of view. Now
> let's look at one fragment:
>
> BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
>
> This should be parsed as
> Keyword BrowserMatch
> value   \bMSIE
> not     !
> value   no-gzip!gzip-only-text/html
> not     !
> value   gzip-only-text/html
>
> but it is parsed as
> Keyword BrowserMatch
> unknown \b
> value   MSIE
> ...
>
> My expression for value allows backslash and the necessary letters, still
> the parser thinks it should not recognize this value.
> What can be the reason for that?
>
> Hiran
> ___________________________________________________________
> Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From asicaddress at gmail.com  Tue Jan 18 13:54:36 2011
From: asicaddress at gmail.com (A Z)
Date: Tue, 18 Jan 2011 15:54:36 -0600
Subject: [antlr-interest] ANTLR3C Single token stream with sequential parsers
Message-ID: <AANLkTiko3x=GmA31mKXkFJa0+BknS_bivCKU4GDWVnWq@mail.gmail.com>

Hello,

  Is there a way to reset the token stream without running the lexer again?
I have a case where I need to run two different parsers sequentially on the
same token stream. I tried rewind() on the input stream but this has side
effects(hidden tokens are not hidden).

Thanks

From kchichakly at iseesystems.com  Tue Jan 18 15:07:28 2011
From: kchichakly at iseesystems.com (Karim Chichakly)
Date: Tue, 18 Jan 2011 18:07:28 -0500
Subject: [antlr-interest] C Runtime Multiple Serial Tree Walkers - What can
	be freed when?
Message-ID: <AANLkTinx9b4NkqndB6pQReOXfLMk67fh-u_f45EG_HC-@mail.gmail.com>

I am using the C runtime.  I have a lexer and a parser.  Then I run a
constant expression reduction tree walker, which rewrites some nodes
(rewrite = false).  Then I run a semantic analysis tree walker, which also
rewrites some nodes (rewrite = false).  Then, at a much later time
determined by the user, I run a code generation tree walker.  I have to keep
the final tree (from the semantic analyzer) around as long as the program is
running, which could be hours.

The C runtime example that does something similar, polydiff, keeps all of
the separate node streams and all of the intermediate trees around until it
no longer needs the final tree.  The Java version keeps overwriting the
nodes variable (which holds the node stream), so presumably that is getting
freed before the start of each tree walker pass.  But also it keeps all the
intermediate trees.

If I try to free the first tree generated by the parser after running the
first tree walker (which gives me a different tree), the program crashes on
the free.  If I try to free the node stream, the tree becomes invalid and I
crash the next time I try to access it.

I don't honestly have to keep all intermediate tree results and node streams
around forever, do I?  What can I safely get rid of and when?

Thanks,

Karim

From jimi at temporal-wave.com  Tue Jan 18 15:15:15 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 18 Jan 2011 15:15:15 -0800
Subject: [antlr-interest] C Runtime Multiple Serial Tree Walkers - What
 can be freed when?
In-Reply-To: <AANLkTinx9b4NkqndB6pQReOXfLMk67fh-u_f45EG_HC-@mail.gmail.com>
References: <AANLkTinx9b4NkqndB6pQReOXfLMk67fh-u_f45EG_HC-@mail.gmail.com>
Message-ID: <c5f2edfe8f3f536c87ad9b29b4899a04@mail.gmail.com>

The rewrites do not [always] duplicate the nodes, they change the pointers
and so on. Hence you need to keep all the stuff around. It is not as
inefficient as you think and it is keeping pointers to the input source
and so on too, so you must keep it all around until you have finished
using it. Just tear it all down and rerun it when ready to do the codegen.
It won't take anytime at all to do that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Tuesday, January 18, 2011 3:07 PM
> To: antlr-interest at antlr.org interest
> Subject: [antlr-interest] C Runtime Multiple Serial Tree Walkers - What
> can be freed when?
>
> I am using the C runtime.  I have a lexer and a parser.  Then I run a
> constant expression reduction tree walker, which rewrites some nodes
> (rewrite = false).  Then I run a semantic analysis tree walker, which
> also rewrites some nodes (rewrite = false).  Then, at a much later time
> determined by the user, I run a code generation tree walker.  I have to
> keep the final tree (from the semantic analyzer) around as long as the
> program is running, which could be hours.
>
> The C runtime example that does something similar, polydiff, keeps all
> of the separate node streams and all of the intermediate trees around
> until it no longer needs the final tree.  The Java version keeps
> overwriting the nodes variable (which holds the node stream), so
> presumably that is getting freed before the start of each tree walker
> pass.  But also it keeps all the intermediate trees.
>
> If I try to free the first tree generated by the parser after running
> the first tree walker (which gives me a different tree), the program
> crashes on the free.  If I try to free the node stream, the tree
> becomes invalid and I crash the next time I try to access it.
>
> I don't honestly have to keep all intermediate tree results and node
> streams around forever, do I?  What can I safely get rid of and when?
>
> Thanks,
>
> Karim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From quagly at me.com  Tue Jan 18 15:27:27 2011
From: quagly at me.com (Michael West)
Date: Tue, 18 Jan 2011 15:27:27 -0800 (PST)
Subject: [antlr-interest] where is cminus.tar.gz?
In-Reply-To: <201101180907.08809.jeffn@photorepo.com>
References: <1295363338554-5935862.post@n2.nabble.com>
	<201101180907.08809.jeffn@photorepo.com>
Message-ID: <1295393247025-5937675.post@n2.nabble.com>


Thanks, I found them there.  However the grammar in examples-v3 seems to be
different though functionally equivalent to the one in the Language
Translation Using ANTLR and StringTemplate article.  For example, I don't
see the "helper function" 

StringTemplate template(String name) {
    return Main.templates.getInstanceOf(name);
}

Nor do I see any "returns" in the grammar which are used in many places in
the article.  An example from the article is:

assignStat returns [StringTemplate code=null]
{StringTemplate a=null;}
    :   id:ID ASSIGN a=expr
        {
            code=template("assign");
            code.setAttribute("lhs", id.getText());
            code.setAttribute("rhs", a);
        }
    ;

I took another look through the Definitive ANTLR Reference but did not find
this example discussed.

So the text of the great explanatory article does not correspond to the
grammar I have.  Well, I would rather have working code then text so I will
try to understand what is happening in the grammar.  

What I struggling with is how all those templates become a final template
that you can call toString() on.  From the article I understood that
returning StringTemplates was a key to this.  With no returns how does it
work?  It seems like an ordered list of templates may be getting created and
then toString() called on each one in order.

-- 
View this message in context: http://antlr.1301665.n2.nabble.com/where-is-cminus-tar-gz-tp5935862p5937675.html
Sent from the ANTLR mailing list archive at Nabble.com.

From kchichakly at iseesystems.com  Tue Jan 18 16:03:11 2011
From: kchichakly at iseesystems.com (Karim Chichakly)
Date: Tue, 18 Jan 2011 19:03:11 -0500
Subject: [antlr-interest] C Runtime Multiple Serial Tree Walkers - What
 can be freed when?
In-Reply-To: <c5f2edfe8f3f536c87ad9b29b4899a04@mail.gmail.com>
References: <AANLkTinx9b4NkqndB6pQReOXfLMk67fh-u_f45EG_HC-@mail.gmail.com>
	<c5f2edfe8f3f536c87ad9b29b4899a04@mail.gmail.com>
Message-ID: <AANLkTimvhug4ZQSuDfU_TNVTia01cDYx++wcEFaKVqCY@mail.gmail.com>

Ok, thank you!

Karim


On Tue, Jan 18, 2011 at 6:15 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> The rewrites do not [always] duplicate the nodes, they change the pointers
> and so on. Hence you need to keep all the stuff around. It is not as
> inefficient as you think and it is keeping pointers to the input source
> and so on too, so you must keep it all around until you have finished
> using it. Just tear it all down and rerun it when ready to do the codegen.
> It won't take anytime at all to do that.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Karim Chichakly
> > Sent: Tuesday, January 18, 2011 3:07 PM
> > To: antlr-interest at antlr.org interest
> > Subject: [antlr-interest] C Runtime Multiple Serial Tree Walkers - What
> > can be freed when?
> >
> > I am using the C runtime.  I have a lexer and a parser.  Then I run a
> > constant expression reduction tree walker, which rewrites some nodes
> > (rewrite = false).  Then I run a semantic analysis tree walker, which
> > also rewrites some nodes (rewrite = false).  Then, at a much later time
> > determined by the user, I run a code generation tree walker.  I have to
> > keep the final tree (from the semantic analyzer) around as long as the
> > program is running, which could be hours.
> >
> > The C runtime example that does something similar, polydiff, keeps all
> > of the separate node streams and all of the intermediate trees around
> > until it no longer needs the final tree.  The Java version keeps
> > overwriting the nodes variable (which holds the node stream), so
> > presumably that is getting freed before the start of each tree walker
> > pass.  But also it keeps all the intermediate trees.
> >
> > If I try to free the first tree generated by the parser after running
> > the first tree walker (which gives me a different tree), the program
> > crashes on the free.  If I try to free the node stream, the tree
> > becomes invalid and I crash the next time I try to access it.
> >
> > I don't honestly have to keep all intermediate tree results and node
> > streams around forever, do I?  What can I safely get rid of and when?
> >
> > Thanks,
> >
> > Karim
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From qsmgmt at earthlink.net  Tue Jan 18 16:15:42 2011
From: qsmgmt at earthlink.net (Alan Lehotsky)
Date: Tue, 18 Jan 2011 19:15:42 -0500
Subject: [antlr-interest] collecting tokens without invoking parser
	rules...
Message-ID: <5326BA01-C7AA-4B5D-91A3-91198985F3A2@earthlink.net>

> From: "Alan Lehotsky" <ALehotsky at ABINITIO.COM>
> Date: January 17, 2011 4:40:02 PM EST
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] collecting tokens without invoking parser rules...
> 
> 
> Using Antlr 3.2 with language=C as a target
> 
> For parsing Teradata's stored-procedure language (SPL), we have the issue 
> of context-sensitive token hiding.
> 
> I'm trying to use rules for SQL statements embedded in SPL that just 
> swallow the tokens, so we have rules like:
> 
> 
>        swallow_to_semi :   ~ (  SEMI  ) * ;
> 
>                update_stmt :  UPDATE swallow_to_semi;
> 
> .......
> This feels like something that should be relatively easy to do, but I 
> don't seem to be able to figure out exactly how to make it happen and I 
> haven't hit upon the right search terms to find an appropriate example in 
> the Antlr-interest archives or the Wiki.


Answering my own question...

It turns out that I was trying TOO hard to make this work.  This simple rule seems to completely resolve
the problems I was having:


	swallow_to_semi :

                     ( { LT(1)->getType(LT(1)) != SEMI }?.)+

i.e. collect any token that ISN'T a SEMI.  Not sure why the original rule didn't do exactly the same thing, but this
doesnt get confused by trying to do any parser-rule reductions on the token stream.


From jimi at temporal-wave.com  Tue Jan 18 16:21:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 18 Jan 2011 16:21:21 -0800
Subject: [antlr-interest] collecting tokens without invoking parser
	rules...
In-Reply-To: <5326BA01-C7AA-4B5D-91A3-91198985F3A2@earthlink.net>
References: <5326BA01-C7AA-4B5D-91A3-91198985F3A2@earthlink.net>
Message-ID: <9d2b5c3a623768397974f73cf10d0e25@mail.gmail.com>

Did you not see that I posted this as the solution to you last week?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alan Lehotsky
> Sent: Tuesday, January 18, 2011 4:16 PM
> To: antlr-interest at antlr.org
> Cc: Alan Lehotsky
> Subject: Re: [antlr-interest] collecting tokens without invoking parser
> rules...
>
> > From: "Alan Lehotsky" <ALehotsky at ABINITIO.COM>
> > Date: January 17, 2011 4:40:02 PM EST
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] collecting tokens without invoking parser
> rules...
> >
> >
> > Using Antlr 3.2 with language=C as a target
> >
> > For parsing Teradata's stored-procedure language (SPL), we have the
> > issue of context-sensitive token hiding.
> >
> > I'm trying to use rules for SQL statements embedded in SPL that just
> > swallow the tokens, so we have rules like:
> >
> >
> >        swallow_to_semi :   ~ (  SEMI  ) * ;
> >
> >                update_stmt :  UPDATE swallow_to_semi;
> >
> > .......
> > This feels like something that should be relatively easy to do, but I
> > don't seem to be able to figure out exactly how to make it happen and
> > I haven't hit upon the right search terms to find an appropriate
> > example in the Antlr-interest archives or the Wiki.
>
>
> Answering my own question...
>
> It turns out that I was trying TOO hard to make this work.  This simple
> rule seems to completely resolve the problems I was having:
>
>
> 	swallow_to_semi :
>
>                      ( { LT(1)->getType(LT(1)) != SEMI }?.)+
>
> i.e. collect any token that ISN'T a SEMI.  Not sure why the original
> rule didn't do exactly the same thing, but this doesnt get confused by
> trying to do any parser-rule reductions on the token stream.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From fadc80 at gmail.com  Tue Jan 18 20:57:02 2011
From: fadc80 at gmail.com (Fernando Costa)
Date: Wed, 19 Jan 2011 12:57:02 +0800
Subject: [antlr-interest] hello ..........-Q
Message-ID: <AANLkTimY9=gw1YLjamkoc3742hS6v7oVsPjfCD8_c99T@mail.gmail.com>

hello:
I have good news for you. Last week
I have Order china 23 Products Samsung UN55B8000 55-Inch 1080p 240Hz LED HDTV
I  completed  bank transfer payments,I have received the product!
w e b:www.gouobO0.com
It's amazing The item is original, brand new and has high quality,
but it's muc cheaper. I'm pleased to share this good news with you!
I believe you will find what you want there and have an good experience
on shopping from them
Regards!














cvbcvbb --?

From doramos at gfi.es  Wed Jan 19 00:02:06 2011
From: doramos at gfi.es (Oliver Ramos)
Date: Wed, 19 Jan 2011 09:02:06 +0100
Subject: [antlr-interest] How I can ignore all the functions of PL / SQL?
Message-ID: <AANLkTikkDgR3cZbMA1PaP7US9GFcBj6LzX-UFxU1+zxW@mail.gmail.com>

Hello and thanks in advance

I have a grammar to analyze pl / sql and I am interested to ignore all the
features of Oracle as the comments, for example:

  'UTL_SMTP.HELO'
  'UTL_SMTP.MAIL'
  'UTL_SMTP.RCPT'
  'UTL_SMTP.OPEN_DATA'
  ...
  Can anyone help?

From ales.teska at gmail.com  Wed Jan 19 01:08:43 2011
From: ales.teska at gmail.com (Ales Teska)
Date: Wed, 19 Jan 2011 10:08:43 +0100
Subject: [antlr-interest] New URL of Python 3 grammar for C target
Message-ID: <AANLkTi=0J000=JSCEZ3=Qzwk_v_Qs=KLRvj6yuXwqJk3@mail.gmail.com>

Hello,

I want to inform you all that URL of Python 3 grammar for C target is now
changed to https://devel.exidius.com/files/python3grammarC.tar.gz<http://www.linkedin.com/redirect?url=https%3A%2F%2Fdevel%2Eexidius%2Ecom%2Ffiles%2Fpython3grammarC%2Etar%2Egz&urlhash=ZpDr&_t=mbox_invm>

Can someone correct that on ANTRL Grammar list, please.

Thank you,
Ales

From Hiran.Chaudhuri at web.de  Wed Jan 19 06:31:37 2011
From: Hiran.Chaudhuri at web.de (Hiran Chaudhuri)
Date: Wed, 19 Jan 2011 15:31:37 +0100 (CET)
Subject: [antlr-interest] How to handle blackslashes correctly?
In-Reply-To: <AANLkTimOidHV8G9bU=DqkAK5WN5q7Vvi_hGZ6rR_O5K4@mail.gmail.com>
References: <1401546606.4308740.1295367028061.JavaMail.fmail@mwmweb061>,
	<AANLkTimOidHV8G9bU=DqkAK5WN5q7Vvi_hGZ6rR_O5K4@mail.gmail.com>
Message-ID: <1435659507.4804234.1295447497458.JavaMail.fmail@mwmweb062>

I will add the lexer part of my grammar. The rest is longish and probably not relevant here (I hope).

======8 8===========================


-----Urspr?ngliche Nachricht-----
Von: "Pop Qvarnstr?m"  
Gesendet: Jan 18, 2011 6:14:01 PM
An: "Hiran Chaudhuri"  
Betreff: Re: [antlr-interest] How to handle blackslashes correctly?

>Could you provide your grammar, or relevant parts of it?
>
>Cheers,
>Pop
>
>On Tue, Jan 18, 2011 at 5:10 PM, Hiran Chaudhuri  wrote:
>
>> Hello everybody.
>>
>> I've got input files with different meaning for backslashes. Therefore my
>> lexer does not really know how to generate the tokens and the parser does
>> not what I want it to do. Maybe someone can help me checking this?
>> A backslash before a linefeed means the linefeed is just whitespace,
>> whereas elsewhere it is not.
>> A backslash in some regions of the file is meant to be part of a file path
>> (Windows).
>> A backslash in some regions of the file is part of a regular expression.
>> I'm not interested in parsing that, so it shall be handled like a string
>> value.
>> A backslash before a quote inside a quoted string means the quote does not
>> terminate the string.
>>
>> I've created a grammar that can handle all cases from my point of view. Now
>> let's look at one fragment:
>>
>> BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
>>
>> This should be parsed as
>> Keyword BrowserMatch
>> value   \bMSIE
>> not     !
>> value   no-gzip!gzip-only-text/html
>> not     !
>> value   gzip-only-text/html
>>
>> but it is parsed as
>> Keyword BrowserMatch
>> unknown \b
>> value   MSIE
>> ...
>>
>> My expression for value allows backslash and the necessary letters, still
>> the parser thinks it should not recognize this value.
>> What can be the reason for that?
>>
>> Hiran
>> ___________________________________________________________
>> Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
>> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
___________________________________________________________
WEB.DE DSL Doppel-Flat ab 19,99 &euro;/mtl.! Jetzt mit 
gratis Handy-Flat! http://produkte.web.de/go/DSL_Doppel_Flatrate/2

From jimi at temporal-wave.com  Wed Jan 19 08:54:57 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 19 Jan 2011 08:54:57 -0800
Subject: [antlr-interest] How to handle blackslashes correctly?
In-Reply-To: <1435659507.4804234.1295447497458.JavaMail.fmail@mwmweb062>
References: <1401546606.4308740.1295367028061.JavaMail.fmail@mwmweb061>,
	<AANLkTimOidHV8G9bU=DqkAK5WN5q7Vvi_hGZ6rR_O5K4@mail.gmail.com>
	<1435659507.4804234.1295447497458.JavaMail.fmail@mwmweb062>
Message-ID: <5210b346d830540eae69a2ba42311c5b@mail.gmail.com>

I think that you are expecting the parser to tell the lexer which token it
should return. It will not do that. The language you are trying to parse is
broken really, but you may be able to create state in your lexer by setting
flags to create different tokens at different points, or you might specify
the keyword BrowserMatch as eating everything after it to the newline and
extracting the path later (this is what I usually do).

However, unless you post both lexer and parser parts that you want to work,
then we can't help you explicitly. Think of the lexer running first and
making ALL the tokens, then the parser running afterwards.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hiran Chaudhuri
> Sent: Wednesday, January 19, 2011 6:32 AM
> To: Pop Qvarnstr?m
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to handle blackslashes correctly?
>
> I will add the lexer part of my grammar. The rest is longish and
> probably not relevant here (I hope).
>
> ======8 8===========================
>
>
> -----Urspr?ngliche Nachricht-----
> Von: "Pop Qvarnstr?m"
> Gesendet: Jan 18, 2011 6:14:01 PM
> An: "Hiran Chaudhuri"
> Betreff: Re: [antlr-interest] How to handle blackslashes correctly?
>
> >Could you provide your grammar, or relevant parts of it?
> >
> >Cheers,
> >Pop
> >
> >On Tue, Jan 18, 2011 at 5:10 PM, Hiran Chaudhuri  wrote:
> >
> >> Hello everybody.
> >>
> >> I've got input files with different meaning for backslashes.
> >> Therefore my lexer does not really know how to generate the tokens
> >> and the parser does not what I want it to do. Maybe someone can help
> me checking this?
> >> A backslash before a linefeed means the linefeed is just whitespace,
> >> whereas elsewhere it is not.
> >> A backslash in some regions of the file is meant to be part of a
> file
> >> path (Windows).
> >> A backslash in some regions of the file is part of a regular
> expression.
> >> I'm not interested in parsing that, so it shall be handled like a
> >> string value.
> >> A backslash before a quote inside a quoted string means the quote
> >> does not terminate the string.
> >>
> >> I've created a grammar that can handle all cases from my point of
> >> view. Now let's look at one fragment:
> >>
> >> BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
> >>
> >> This should be parsed as
> >> Keyword BrowserMatch
> >> value   \bMSIE
> >> not     !
> >> value   no-gzip!gzip-only-text/html
> >> not     !
> >> value   gzip-only-text/html
> >>
> >> but it is parsed as
> >> Keyword BrowserMatch
> >> unknown \b
> >> value   MSIE
> >> ...
> >>
> >> My expression for value allows backslash and the necessary letters,
> >> still the parser thinks it should not recognize this value.
> >> What can be the reason for that?
> >>
> >> Hiran
> >> ___________________________________________________________
> >> Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
> >> belohnen Sie mit bis zu 50,- Euro!
> >> https://freundschaftswerbung.web.de
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> ___________________________________________________________
> WEB.DE DSL Doppel-Flat ab 19,99 &euro;/mtl.! Jetzt mit gratis Handy-
> Flat! http://produkte.web.de/go/DSL_Doppel_Flatrate/2
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Wed Jan 19 10:50:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 19 Jan 2011 10:50:39 -0800
Subject: [antlr-interest] New URL of Python 3 grammar for C target
In-Reply-To: <AANLkTi=0J000=JSCEZ3=Qzwk_v_Qs=KLRvj6yuXwqJk3@mail.gmail.com>
References: <AANLkTi=0J000=JSCEZ3=Qzwk_v_Qs=KLRvj6yuXwqJk3@mail.gmail.com>
Message-ID: <C1E78C20-E615-4801-BF5B-2D057D6AB64C@cs.usfca.edu>

Fixed.
Ter
On Jan 19, 2011, at 1:08 AM, Ales Teska wrote:

> Hello,
> 
> I want to inform you all that URL of Python 3 grammar for C target is now
> changed to https://devel.exidius.com/files/python3grammarC.tar.gz<http://www.linkedin.com/redirect?url=https%3A%2F%2Fdevel%2Eexidius%2Ecom%2Ffiles%2Fpython3grammarC%2Etar%2Egz&urlhash=ZpDr&_t=mbox_invm>
> 
> Can someone correct that on ANTRL Grammar list, please.
> 
> Thank you,
> Ales
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From foamdino at gmail.com  Wed Jan 19 22:48:15 2011
From: foamdino at gmail.com (Kevin Jackson)
Date: Thu, 20 Jan 2011 13:48:15 +0700
Subject: [antlr-interest] Problems with templates
Message-ID: <AANLkTikdiPa5PQDvTxgxNUE_tbR8wgvTmKJF7y5gF9BG@mail.gmail.com>

Hi,

I'm parsing some text and spitting out xml and I've chosen to do this
using output=template, rather than outputting AST and walking the
tree.

I've nearly got everything working, but I have a small problem with
nested templates inside a rewrite rule:

grammar:
----
//parser
game: (h+=hd)+ (m+=pl)+ -> game(infos={$h},plays={$m});

hd:
	LEFT_SQUARE (info=STRING) (value=QUOTED_TEXT) RIGHT_SQUARE NEWLINE+
-> head(i={$info.text},v={$value.text})
	;

pl: (num=DIGIT+) DOT (p1m=SAN) (p2m=SAN) NEWLINE* (ct=COMMENT_TEXT)*
-> play(num={$num.text}, p1m={$p1m.text}, p2m={$p2m.text},
comment={$ct})
	| (num=DIGIT+) THREEDOTS (p1m=SAN) NEWLINE* -> play(num={$num.text},
p1m={$p1m.text})
	;

//pl is b0rked somehow?

cm:
	(c=COMMENT_TEXT) -> comment(c={$c.text})
	;

//lexer
DIGIT: '0'..'9';
STRING: ('a'..'z'|'A'..'Z')+;
QUOTED_TEXT:
	'"' .+ '"' {setText(getText().substring(1, getText().length()-1));}
	;

COMMENT_TEXT:
	'{' .+ '}' {setText(getText().substring(1, getText().length()-1));}
	;

THREEDOTS: '...';
NEWLINE: '\r'? '\n' ;
DOT: '.';
LEFT_SQUARE: '[';
RIGHT_SQUARE: ']';

SAN: STRING DIGIT;

WS: (' '|'\t')+ {skip();};
----

template:
----
game(moves) ::= <<
\<game>
\<info>
<infos; separator="\n">
\</info>
\<begin>
\</begin>

\<moves>
<plays; separator="\n">
\</moves>
\</game>
>>

play(num, p1m, p2m, comment) ::= <<
\<ply side="1" pgn="" an="<p1m>-<p2m>"\>
\<pmv sr="1" sc="2" er="3" ec="2"/\>
<comment; separator="\n">
\</ply>
>>

comment(c) ::= <<
\<comment>
<c>
\</comment>
>>
head(i,v) ::= "\<<i>\><v>\</<i>\>"
---

output:
 [java] <moves>
 [java] <ply side="1" pgn="" an="e4-c5">
 [java] <pmv sr="1" sc="2" er="3" ec="2"/>
 [java] </ply>
 [java] <ply side="1" pgn="" an="Nf3-d6">
 [java] <pmv sr="1" sc="2" er="3" ec="2"/>
 [java] </ply>
 [java] <ply side="1" pgn="" an="d4-cxd4">
 [java] <pmv sr="1" sc="2" er="3" ec="2"/>
 [java] </ply>
 [java] <ply side="1" pgn="" an="Nxd4-Nf6">
 [java] <pmv sr="1" sc="2" er="3" ec="2"/>
 [java] </ply>
 [java] <ply side="1" pgn="" an="Nc3-Nc6">
 [java] <pmv sr="1" sc="2" er="3" ec="2"/>
 [java] [@103,382:406='Test comment',<12>,20:0]  <-- this should be
<comment>Test comment</comment>
 [java] </ply>
 [java] </moves>

I think the issue is with the grammar for the rewrite rule rather than
with the template (which looks fine to me).  The comment::= <<
template isn't being called and instead I'm getting an object
reference dumped into my play::= << template

Thanks,
Kev

From s.zschocke at infozoom.de  Fri Jan 21 01:34:18 2011
From: s.zschocke at infozoom.de (Stefan Zschocke)
Date: Fri, 21 Jan 2011 10:34:18 +0100
Subject: [antlr-interest] Source code of Runtime of antlrcs port
Message-ID: <002e01cbb94e$623b9250$26b2b6f0$@zschocke@infozoom.de>

Hi, where do I find the source code for the Runtime of Sam Harwell's port?

There seem to exist different versions of this port. 

I found the source code of one CSharp3 Runtime through the Antlr-pages. This
seems to be the runtime which is to be used when generating code with the
original java-version of Antlr targeting csharp3.

I also found the source code of the antlrcs port somewhere (I don't remember
exactly where - git?). But at that location there was not Runtime source
code.

When I tried to debug the runtime using the sources from the former version
of it, it didn't match the code generated by antlrcs. The mismatch seems to
concern different implementations of properties like Description vs.
getDescription().

So where is the source code of the runtime of antlrcs?

TIA, Stefan


From ed.tirelli at gmail.com  Fri Jan 21 18:32:39 2011
From: ed.tirelli at gmail.com (Edson Tirelli)
Date: Fri, 21 Jan 2011 21:32:39 -0500
Subject: [antlr-interest] Understanding (and tweaking) DFAs
Message-ID: <AANLkTi=PtgAR+51ddrnqHPXdCi2ns+JmTMnuCU8Sun+D@mail.gmail.com>

   Hi all,

   In my long quest to understand the reason behind some of antlr's
decisions, I am stuck with the following problem.

   I am using this lexer:

https://github.com/etirelli/droolsjbpm/blob/JBRULES-2642/drools-compiler/src/main/resources/org/drools/lang/DRLLexer.g

   And this grammar:

https://github.com/etirelli/droolsjbpm/blob/JBRULES-2642/drools-compiler/src/main/resources/org/drools/lang/DRLExpressions.g

   The grammar is just an expression grammar extracted from the java grammar
with some tweaks.

   Now the problem: imagine I have a long input stream, and at a given point
in time, my stream looks like this:

input := "foo" COMMA ...

   Where "foo" is a string token, and COMMA is the token for ",".

   At this point I invoke the conditionalExpression rule, that correctly
parses "foo" as an expression (a simple expression that is just a string),
and nicely stops parsing, as the next token (COMMA) is not part of the
expression. It works fine as expected, and some other rule will consume the
COMMA.

   Now, if my input stream is (where AT is the token for "@"):

input := "foo" AT ...

   Instead of doing exactly what it did before, it raises a
NoViableAltException at the "@", what is not what I want. I tested with
several different tokens on the input stream, like "!", or ";", or "ID",
etc... they all work as expected, but if an @ shows up, it blows.

   Now, debugging the generated code I found the culprit on this rule:

unaryExpressionNotPlusMinus
    :   TILDE unaryExpression
    | NEGATION unaryExpression
    |   (castExpression)=>castExpression
    |   primary ((selector)=>selector)* ((INCR|DECR)=> (INCR|DECR))?
    ;

   The ((selector)=>selector)* part generates the DFA29 (antlrworks
generated graph attached) where you can see the top branch containing the
relevant tokens, but explicitly excluding @. From the token file:

...
NULL=19
AT=20
PLUS_ASSIGN=21
...

    From the generated code for the DFA29:

...
if( ...(LA29_0>=BOOL && LA29_0<=NULL)||(LA29_0>=PLUS_ASSIGN &&
LA29_0<=INCR)... )
   s = 1;

    I tried blindly tweaking rules to fix it or at least understand why
ANTLR is not including AT on this branch of the DFA, but had no success.

    So my question is: is it possible to manually tweak the DFA to achive
the expected result? (other than obviously changing the generated code
manually, as it would make long term maintenance a hell)

    Or maybe is there another way to work around this problem?

    Sorry for the long e-mail and thanks in advance.

     Edson

-- 
  Edson Tirelli
  JBoss Drools Core Development
  JBoss by Red Hat @ www.jboss.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DFA29.png
Type: image/png
Size: 38268 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110121/02d73a94/attachment.png 

From ed.tirelli at gmail.com  Fri Jan 21 19:05:09 2011
From: ed.tirelli at gmail.com (Edson Tirelli)
Date: Fri, 21 Jan 2011 22:05:09 -0500
Subject: [antlr-interest] Understanding (and tweaking) DFAs
In-Reply-To: <AANLkTi=PtgAR+51ddrnqHPXdCi2ns+JmTMnuCU8Sun+D@mail.gmail.com>
References: <AANLkTi=PtgAR+51ddrnqHPXdCi2ns+JmTMnuCU8Sun+D@mail.gmail.com>
Message-ID: <AANLkTim1-gsX5JTo0x3cpyBDdio=yzpu1fJM04Yasvz6@mail.gmail.com>

   Just to follow up on this, I found one way to work around this problem: I
added AT to the rule:

assignmentOperator
:   EQUALS_ASSIGN
        |   PLUS_ASSIGN
        |   MINUS_ASSIGN
        |   MULT_ASSIGN
        |   DIV_ASSIGN
        |   AND_ASSIGN
        |   OR_ASSIGN
        |   XOR_ASSIGN
        |   MOD_ASSIGN
        |   LESS LESS EQUALS_ASSIGN
        |   (GREATER GREATER GREATER)=> GREATER GREATER GREATER
EQUALS_ASSIGN
        |   (GREATER GREATER)=> GREATER GREATER EQUALS_ASSIGN
        |   AT
;

    Since I am never invoking this rule with my current work, for now, I
don't have a problem in leaving the AT there just to work around the
problem. But this is exactly what is bothering me: why is ANTLR failing like
that, and by changing a rule that is not even being called in the rule chain
(conditionalExpression), it changes the behavior and "fix the problem"?!!!

    BTW, this is ANTLR 3.3.

    Thanks,
      Edson



2011/1/21 Edson Tirelli <ed.tirelli at gmail.com>

>
>    Hi all,
>
>    In my long quest to understand the reason behind some of antlr's
> decisions, I am stuck with the following problem.
>
>    I am using this lexer:
>
>
> https://github.com/etirelli/droolsjbpm/blob/JBRULES-2642/drools-compiler/src/main/resources/org/drools/lang/DRLLexer.g
>
>    And this grammar:
>
>
> https://github.com/etirelli/droolsjbpm/blob/JBRULES-2642/drools-compiler/src/main/resources/org/drools/lang/DRLExpressions.g
>
>    The grammar is just an expression grammar extracted from the java
> grammar with some tweaks.
>
>    Now the problem: imagine I have a long input stream, and at a given
> point in time, my stream looks like this:
>
> input := "foo" COMMA ...
>
>    Where "foo" is a string token, and COMMA is the token for ",".
>
>    At this point I invoke the conditionalExpression rule, that correctly
> parses "foo" as an expression (a simple expression that is just a string),
> and nicely stops parsing, as the next token (COMMA) is not part of the
> expression. It works fine as expected, and some other rule will consume the
> COMMA.
>
>    Now, if my input stream is (where AT is the token for "@"):
>
> input := "foo" AT ...
>
>    Instead of doing exactly what it did before, it raises a
> NoViableAltException at the "@", what is not what I want. I tested with
> several different tokens on the input stream, like "!", or ";", or "ID",
> etc... they all work as expected, but if an @ shows up, it blows.
>
>    Now, debugging the generated code I found the culprit on this rule:
>
> unaryExpressionNotPlusMinus
>     :   TILDE unaryExpression
>     | NEGATION unaryExpression
>     |   (castExpression)=>castExpression
>     |   primary ((selector)=>selector)* ((INCR|DECR)=> (INCR|DECR))?
>     ;
>
>    The ((selector)=>selector)* part generates the DFA29 (antlrworks
> generated graph attached) where you can see the top branch containing the
> relevant tokens, but explicitly excluding @. From the token file:
>
> ...
> NULL=19
> AT=20
> PLUS_ASSIGN=21
> ...
>
>     From the generated code for the DFA29:
>
> ...
> if( ...(LA29_0>=BOOL && LA29_0<=NULL)||(LA29_0>=PLUS_ASSIGN &&
> LA29_0<=INCR)... )
>    s = 1;
>
>     I tried blindly tweaking rules to fix it or at least understand why
> ANTLR is not including AT on this branch of the DFA, but had no success.
>
>     So my question is: is it possible to manually tweak the DFA to achive
> the expected result? (other than obviously changing the generated code
> manually, as it would make long term maintenance a hell)
>
>     Or maybe is there another way to work around this problem?
>
>     Sorry for the long e-mail and thanks in advance.
>
>      Edson
>
> --
>   Edson Tirelli
>   JBoss Drools Core Development
>   JBoss by Red Hat @ www.jboss.com
>



-- 
  Edson Tirelli
  JBoss Drools Core Development
  JBoss by Red Hat @ www.jboss.com

From parrt at cs.usfca.edu  Sat Jan 22 11:15:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 11:15:08 -0800
Subject: [antlr-interest] Source code of Runtime of antlrcs port
In-Reply-To: <002e01cbb94e$623b9250$26b2b6f0$@zschocke@infozoom.de>
References: <002e01cbb94e$623b9250$26b2b6f0$@zschocke@infozoom.de>
Message-ID: <5B735243-DBE8-4EF1-98B4-1F315873373C@cs.usfca.edu>

Hi Stefan, try here:

http://antlr.org/depot/antlrcs/main

I don't have a convenient tarball for you, but I can make you one.  I think this is a work in progress by Sam Harwell.

Ter
On Jan 21, 2011, at 1:34 AM, Stefan Zschocke wrote:

> Hi, where do I find the source code for the Runtime of Sam Harwell's port?
> 
> There seem to exist different versions of this port. 
> 
> I found the source code of one CSharp3 Runtime through the Antlr-pages. This
> seems to be the runtime which is to be used when generating code with the
> original java-version of Antlr targeting csharp3.
> 
> I also found the source code of the antlrcs port somewhere (I don't remember
> exactly where - git?). But at that location there was not Runtime source
> code.
> 
> When I tried to debug the runtime using the sources from the former version
> of it, it didn't match the code generated by antlrcs. The mismatch seems to
> concern different implementations of properties like Description vs.
> getDescription().
> 
> So where is the source code of the runtime of antlrcs?
> 
> TIA, Stefan
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From belayda at gmail.com  Sat Jan 22 12:45:26 2011
From: belayda at gmail.com (Bernardo Elayda)
Date: Sat, 22 Jan 2011 12:45:26 -0800
Subject: [antlr-interest] Can the Java Static.format be used in an Antlr 3.3
	action?
Message-ID: <AANLkTim+qtJYfmSLPq4Np_x6pSXfWVpeL9DsfEsTkEeH@mail.gmail.com>

Hi,

I have some Java code I need to place in actions in my Antlr 3.3 grammar.
But, this Java code uses the Java String.format method which uses the
'%' character.

When I build my grammar, Antlr complains that it thinks '%' is in use
with an incorrect usage of StringTemplate.  There is no use of
StringTemplate in my grammar.

Is my only workaround to replace all the String.format instances?

tia,
bernardo

From parrt at cs.usfca.edu  Sat Jan 22 12:59:04 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 22 Jan 2011 12:59:04 -0800
Subject: [antlr-interest] Can the Java Static.format be used in an Antlr
	3.3 action?
In-Reply-To: <AANLkTim+qtJYfmSLPq4Np_x6pSXfWVpeL9DsfEsTkEeH@mail.gmail.com>
References: <AANLkTim+qtJYfmSLPq4Np_x6pSXfWVpeL9DsfEsTkEeH@mail.gmail.com>
Message-ID: <68A9710B-0B0F-49E2-90AB-EB02D69B6559@cs.usfca.edu>

Try \%.I think that should work
Ter
On Jan 22, 2011, at 12:45 PM, Bernardo Elayda wrote:

> Hi,
> 
> I have some Java code I need to place in actions in my Antlr 3.3 grammar.
> But, this Java code uses the Java String.format method which uses the
> '%' character.
> 
> When I build my grammar, Antlr complains that it thinks '%' is in use
> with an incorrect usage of StringTemplate.  There is no use of
> StringTemplate in my grammar.
> 
> Is my only workaround to replace all the String.format instances?
> 
> tia,
> bernardo
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bill.andersen at mac.com  Sat Jan 22 22:44:07 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Sun, 23 Jan 2011 01:44:07 -0500
Subject: [antlr-interest] Selective unhiding of HIDDEN channel
Message-ID: <1DD0CC7C-FC52-4D7F-B69E-00DD75E2F761@mac.com>

Hi Folks

I have a parser grammar, part of which has to pay attention to newlines, and part of which can ignore them.  Not my favorite design for a grammar, but I'm stuck with it.

Normally, I would like to dump newlines to the HIDDEN channel, but selectively "turn on" the hidden channel to pay attention to newlines.  Is there any good way to do this?

Thanks in advance.

  .bill

From mark.mandel at gmail.com  Sun Jan 23 21:44:43 2011
From: mark.mandel at gmail.com (Mark Mandel)
Date: Mon, 24 Jan 2011 16:44:43 +1100
Subject: [antlr-interest] Failed Predicate Infinite Loop
Message-ID: <AANLkTimnFmieew3w=+GF1HnvVj5Noq+-4rgvKp_LEbdg@mail.gmail.com>

Hey guys,

My grammar can be seen here:
http://coldspring.git.sourceforge.net/git/gitweb.cgi?p=coldspring/coldspring;a=blob;f=antlr/com/coldspring/aop/expression/AopExpression.g;h=b80ef8a7ddd854458791e4e044a8f09461b66c50;hb=HEAD

It's a parser for a subset of AspectJ expressions, with some minor
modifications (if anyone cares ;o) ).

An example expression would be:
@annotation(dostuff='true')

I've used predicate in my lexer to work pick up the first item in the
expression, i.e. an expression should always start with 'target', '@target',
'execution', 'within' or '@annotation'

If I have a typo in the expression that is being entered, e.g.

@annotaion(dostuff='true')

I get the following output:
line 1:7 mismatched character 'i' expecting 't'
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
.... (infinite loop) ....

The errors are perfectly correct, but the infinite loop is a bit of a
problem, as I'm sure you can understand.

Is this a bug in ANTLR, or is there a way I can fix/change my grammar (or
add in some custom code), so that I don't fall into the infinite loop? (or
escape out of it)

I'm guessing this is because ANTLR tries to recover from an error whenever
it encounters one. (Which I would also be happy to turn off, I only need the
1st error for my purposes at the moment).

Any help would be appreciated.

Mark


-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From mark.mandel at gmail.com  Sun Jan 23 22:05:18 2011
From: mark.mandel at gmail.com (Mark Mandel)
Date: Mon, 24 Jan 2011 17:05:18 +1100
Subject: [antlr-interest] Failed Predicate Infinite Loop
In-Reply-To: <AANLkTimnFmieew3w=+GF1HnvVj5Noq+-4rgvKp_LEbdg@mail.gmail.com>
References: <AANLkTimnFmieew3w=+GF1HnvVj5Noq+-4rgvKp_LEbdg@mail.gmail.com>
Message-ID: <AANLkTi=ZOSF8LYBCeqDVBnRv5fzG-AFOa6i6tvAF65-7@mail.gmail.com>

Reading through the (great) ANTLR book, I see there is code in there to use
if you want to exit the recogniser on first error. It's not 100% ideal (in
case I want to ever report more than 1 error in a row in the future), but I
may try that out shortly.

I would still be interested to work out how to avoid this issue in future
grammars.

Mark

On Mon, Jan 24, 2011 at 4:44 PM, Mark Mandel <mark.mandel at gmail.com> wrote:

> Hey guys,
>
> My grammar can be seen here:
>
> http://coldspring.git.sourceforge.net/git/gitweb.cgi?p=coldspring/coldspring;a=blob;f=antlr/com/coldspring/aop/expression/AopExpression.g;h=b80ef8a7ddd854458791e4e044a8f09461b66c50;hb=HEAD
>
> It's a parser for a subset of AspectJ expressions, with some minor
> modifications (if anyone cares ;o) ).
>
> An example expression would be:
> @annotation(dostuff='true')
>
> I've used predicate in my lexer to work pick up the first item in the
> expression, i.e. an expression should always start with 'target', '@target',
> 'execution', 'within' or '@annotation'
>
> If I have a typo in the expression that is being entered, e.g.
>
> @annotaion(dostuff='true')
>
> I get the following output:
> line 1:7 mismatched character 'i' expecting 't'
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
> .... (infinite loop) ....
>
> The errors are perfectly correct, but the infinite loop is a bit of a
> problem, as I'm sure you can understand.
>
> Is this a bug in ANTLR, or is there a way I can fix/change my grammar (or
> add in some custom code), so that I don't fall into the infinite loop? (or
> escape out of it)
>
> I'm guessing this is because ANTLR tries to recover from an error whenever
> it encounters one. (Which I would also be happy to turn off, I only need the
> 1st error for my purposes at the moment).
>
> Any help would be appreciated.
>
> Mark
>
>
> --
> E: mark.mandel at gmail.com
> T: http://www.twitter.com/neurotic
> W: www.compoundtheory.com
>
> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
> http://www.cfobjective.com.au
>
> Hands-on ColdFusion ORM Training
> www.ColdFusionOrmTraining.com
>



-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From asicaddress at gmail.com  Mon Jan 24 09:55:52 2011
From: asicaddress at gmail.com (A Z)
Date: Mon, 24 Jan 2011 11:55:52 -0600
Subject: [antlr-interest] ANTLR language patterns for NEdit
Message-ID: <AANLkTinvrRZR4GtO1D8h0_UaZkfwGiNWy2yO_1om5zeG@mail.gmail.com>

Although there's many cases it doesn't handle correctly, some of you may
find this useful.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: antlr.pats
Type: application/octet-stream
Size: 1840 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110124/4370970a/attachment.obj 

From mark.mandel at gmail.com  Mon Jan 24 14:57:09 2011
From: mark.mandel at gmail.com (Mark Mandel)
Date: Tue, 25 Jan 2011 09:57:09 +1100
Subject: [antlr-interest] Failed Predicate Infinite Loop
In-Reply-To: <AANLkTi=ZOSF8LYBCeqDVBnRv5fzG-AFOa6i6tvAF65-7@mail.gmail.com>
References: <AANLkTimnFmieew3w=+GF1HnvVj5Noq+-4rgvKp_LEbdg@mail.gmail.com>
	<AANLkTi=ZOSF8LYBCeqDVBnRv5fzG-AFOa6i6tvAF65-7@mail.gmail.com>
Message-ID: <AANLkTimLk89vEdJNb9EB8QzuPt+9rq-j0bCx83b46ay0@mail.gmail.com>

I'm trying to resolve this a different way, and catch the failed predicate,
and handle it gracefully... however, for the life of me, I can't seem to
catch it in any way.

I tried adding a 'catch [FailedPredicateException fpe]' in my Lexer, under
the failing token, but it seems this only works in the Parser section.

I can't seem to catch this failed predicate infinite loop in the parser
section of my grammar.

So failing that, I'm attempting to find the right method in the Lexer to
overwrite to catch the FailedPredicateException and handle it accordingly,
but again, I can't seem to find the right place.

I had thought that overwriting the recover() method on the Lexer, to
intercept the FailedPredicate would work, but it does not seem to pass
through there.

Can anyone point me in the right direction, as to which method I should be
overwriting to intercept the failed predicate?

Mark






On Mon, Jan 24, 2011 at 5:05 PM, Mark Mandel <mark.mandel at gmail.com> wrote:

> Reading through the (great) ANTLR book, I see there is code in there to use
> if you want to exit the recogniser on first error. It's not 100% ideal (in
> case I want to ever report more than 1 error in a row in the future), but I
> may try that out shortly.
>
> I would still be interested to work out how to avoid this issue in future
> grammars.
>
> Mark
>
>
> On Mon, Jan 24, 2011 at 4:44 PM, Mark Mandel <mark.mandel at gmail.com>wrote:
>
>> Hey guys,
>>
>> My grammar can be seen here:
>>
>> http://coldspring.git.sourceforge.net/git/gitweb.cgi?p=coldspring/coldspring;a=blob;f=antlr/com/coldspring/aop/expression/AopExpression.g;h=b80ef8a7ddd854458791e4e044a8f09461b66c50;hb=HEAD
>>
>> It's a parser for a subset of AspectJ expressions, with some minor
>> modifications (if anyone cares ;o) ).
>>
>> An example expression would be:
>> @annotation(dostuff='true')
>>
>> I've used predicate in my lexer to work pick up the first item in the
>> expression, i.e. an expression should always start with 'target', '@target',
>> 'execution', 'within' or '@annotation'
>>
>> If I have a typo in the expression that is being entered, e.g.
>>
>> @annotaion(dostuff='true')
>>
>> I get the following output:
>> line 1:7 mismatched character 'i' expecting 't'
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>> .... (infinite loop) ....
>>
>> The errors are perfectly correct, but the infinite loop is a bit of a
>> problem, as I'm sure you can understand.
>>
>> Is this a bug in ANTLR, or is there a way I can fix/change my grammar (or
>> add in some custom code), so that I don't fall into the infinite loop? (or
>> escape out of it)
>>
>> I'm guessing this is because ANTLR tries to recover from an error whenever
>> it encounters one. (Which I would also be happy to turn off, I only need the
>> 1st error for my purposes at the moment).
>>
>> Any help would be appreciated.
>>
>> Mark
>>
>>
>> --
>> E: mark.mandel at gmail.com
>> T: http://www.twitter.com/neurotic
>> W: www.compoundtheory.com
>>
>> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
>> http://www.cfobjective.com.au
>>
>> Hands-on ColdFusion ORM Training
>> www.ColdFusionOrmTraining.com
>>
>
>
>
> --
> E: mark.mandel at gmail.com
> T: http://www.twitter.com/neurotic
> W: www.compoundtheory.com
>
> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
> http://www.cfobjective.com.au
>
> Hands-on ColdFusion ORM Training
> www.ColdFusionOrmTraining.com
>



-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From foamdino at gmail.com  Mon Jan 24 19:21:58 2011
From: foamdino at gmail.com (Kevin Jackson)
Date: Tue, 25 Jan 2011 10:21:58 +0700
Subject: [antlr-interest] Parsing PGN (chess algebraic notation) files
Message-ID: <AANLkTi=9uGO1XvgWY4PtkLSuo_+y3Ad5Ey-Z=ugTOdvY@mail.gmail.com>

Hi,

I have to convert PGN files using algebraic notation and I'm doing ok so far.

I have one major stumbling block and I was wondering if anyone has
done something similar.

Algebraic notation is a short form of chess move that only contains an
optional piece identifier, followed by destination square followed by
optional markers:
e5 => pawn moves to e5
Bf3 => Bishop moves to f3
Nh2+ => Knight moves to h2 (and check)

Parsing these is ok, but my task is to generate output containing both
start and end positions for a move.  My research seems to indicate
that this isn't easy without maintaining the current state of the
board and applying each move as I parse it to update the board and
therefore be able to determine where the move came from.  Another
option is to maintain an index of piece-destination
(possible_start_position_1, possible_start_position_2...) - and then
for each piece lookup where it could possibly have come from - I'm not
sure this helps though :)

What was a simple text transformation problem has become a game engine!

I'd be interested to hear any thoughts from people who have attempted
PGN parsing in antlr

Thanks,
Kev

From ed.tirelli at gmail.com  Mon Jan 24 19:29:10 2011
From: ed.tirelli at gmail.com (Edson Tirelli)
Date: Mon, 24 Jan 2011 22:29:10 -0500
Subject: [antlr-interest] Parsing PGN (chess algebraic notation) files
In-Reply-To: <AANLkTi=9uGO1XvgWY4PtkLSuo_+y3Ad5Ey-Z=ugTOdvY@mail.gmail.com>
References: <AANLkTi=9uGO1XvgWY4PtkLSuo_+y3Ad5Ey-Z=ugTOdvY@mail.gmail.com>
Message-ID: <AANLkTinMhcL0J4BsO3Gi2e97oBYFyNve-5gorF+eBi=X@mail.gmail.com>

   Kevin,

   Just keep a Map with each piece and current position, updating it as you
parse. It is simpler than you think. At least, that is how I would do it, as
it is not that different than tracking variables in a regular program. Since
the PGN is assumed to be correct, you will also have no problems with
conflicts, since whenever 2 pieces of the same type can move to the same
destination, the PGN notation will tell you which one is moving there. Ex:

Rae1

   Edson

2011/1/24 Kevin Jackson <foamdino at gmail.com>

> Hi,
>
> I have to convert PGN files using algebraic notation and I'm doing ok so
> far.
>
> I have one major stumbling block and I was wondering if anyone has
> done something similar.
>
> Algebraic notation is a short form of chess move that only contains an
> optional piece identifier, followed by destination square followed by
> optional markers:
> e5 => pawn moves to e5
> Bf3 => Bishop moves to f3
> Nh2+ => Knight moves to h2 (and check)
>
> Parsing these is ok, but my task is to generate output containing both
> start and end positions for a move.  My research seems to indicate
> that this isn't easy without maintaining the current state of the
> board and applying each move as I parse it to update the board and
> therefore be able to determine where the move came from.  Another
> option is to maintain an index of piece-destination
> (possible_start_position_1, possible_start_position_2...) - and then
> for each piece lookup where it could possibly have come from - I'm not
> sure this helps though :)
>
> What was a simple text transformation problem has become a game engine!
>
> I'd be interested to hear any thoughts from people who have attempted
> PGN parsing in antlr
>
> Thanks,
> Kev
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
  Edson Tirelli
  JBoss Drools Core Development
  JBoss by Red Hat @ www.jboss.com

From christian at mrugalla.info  Tue Jan 25 14:21:25 2011
From: christian at mrugalla.info (Christian Mrugalla)
Date: Tue, 25 Jan 2011 23:21:25 +0100
Subject: [antlr-interest] Recognition of dynamic ID-definitions
Message-ID: <4D3F4CE5.2060700@mrugalla.info>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Dear all,

is it possible to recognize a language which is (so to say)
'parameterized'  by a finite set of arbitrary named identifiers, using
ANTLR?

Trivial Example:

expr : ID ( '+' ID)* ;

ID is not defined at parser-generation-time, it is only known that at
parser-execution-time there exists a finite set S of arbitrary Strings
which contains the allowed values for ID.

That is in particular: It depends on S, if "a+b" is:
- - build by '+'-connected 'a'- and 'b'-IDs
- - an ID named 'a+b'
- - invalid, because S contains the IDs "a+" and "b"

I did not found any hint concerning such kind of
language-parameterization in the "The Definitive ANTLR Reference".

Thank you in advance for your help!

Kind Regards,
Christian Mrugalla

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAk0/TOUACgkQz2D7mOZ/GFxR0ACbB+GVUODsY1Njr8nGF7M6axJR
h2sAn3Ae3PAxGayB3lMODRQgAIFIvRm/
=ehYs
-----END PGP SIGNATURE-----

From mark.mandel at gmail.com  Tue Jan 25 15:04:45 2011
From: mark.mandel at gmail.com (Mark Mandel)
Date: Wed, 26 Jan 2011 10:04:45 +1100
Subject: [antlr-interest] Failed Predicate Infinite Loop
In-Reply-To: <AANLkTimLk89vEdJNb9EB8QzuPt+9rq-j0bCx83b46ay0@mail.gmail.com>
References: <AANLkTimnFmieew3w=+GF1HnvVj5Noq+-4rgvKp_LEbdg@mail.gmail.com>
	<AANLkTi=ZOSF8LYBCeqDVBnRv5fzG-AFOa6i6tvAF65-7@mail.gmail.com>
	<AANLkTimLk89vEdJNb9EB8QzuPt+9rq-j0bCx83b46ay0@mail.gmail.com>
Message-ID: <AANLkTim+qp9R3aY2XcA0F4yJZoUObbGFYHi=EJa=FTKN@mail.gmail.com>

For anyone else in a similar position, this is how I solved it in my Lexer:

Originally, my 'DESCRIPTOR' token looked like this:

DESCRIPTOR
    : {expressionStart}?=> (('a'..'z'|'A'..'Z'|'_'|'*')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.'|'*'|':')*)
    ;

Which was the only place my Lexer could go if 'expressionStart' was true,
and an invalid entry was entered, so it would end up getting into the
infinite loop here, as it had nowhere else to go. Hence the:
line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?

So I figured, why not give it a place to go? I switch this to:

DESCRIPTOR
    : {expressionStart}?=> (('a'..'z'|'A'..'Z'|'_'|'*')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.'|'*'|':')*)
    | /* give it another option so it doesn't infinite loop out when the
predicate fails */
    ;

This seemed to work well, but I can only assume it also infinite looped, as
I'd get a heap overflow.

So then I thought - well, if the predicate fails, let's just skip to the end
of the line (my inputs are always just 1 line long, so this makes it easy),
so I seek()'d the input forward to the end of the line:

DESCRIPTOR
    : {expressionStart}?=> (('a'..'z'|'A'..'Z'|'_'|'*')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.'|'*'|':')*)
    | /* give it another option so it doesn't infinite loop out when the
predicate fails */
    { input.seek(input.size()); }
    ;

No more infinite loops or heap overflows, and I get a nice error. Seems to
be working well for me :o)

Mark

On Tue, Jan 25, 2011 at 9:57 AM, Mark Mandel <mark.mandel at gmail.com> wrote:

> I'm trying to resolve this a different way, and catch the failed predicate,
> and handle it gracefully... however, for the life of me, I can't seem to
> catch it in any way.
>
> I tried adding a 'catch [FailedPredicateException fpe]' in my Lexer, under
> the failing token, but it seems this only works in the Parser section.
>
> I can't seem to catch this failed predicate infinite loop in the parser
> section of my grammar.
>
> So failing that, I'm attempting to find the right method in the Lexer to
> overwrite to catch the FailedPredicateException and handle it accordingly,
> but again, I can't seem to find the right place.
>
> I had thought that overwriting the recover() method on the Lexer, to
> intercept the FailedPredicate would work, but it does not seem to pass
> through there.
>
> Can anyone point me in the right direction, as to which method I should be
> overwriting to intercept the failed predicate?
>
> Mark
>
>
>
>
>
>
>
> On Mon, Jan 24, 2011 at 5:05 PM, Mark Mandel <mark.mandel at gmail.com>wrote:
>
>> Reading through the (great) ANTLR book, I see there is code in there to
>> use if you want to exit the recogniser on first error. It's not 100% ideal
>> (in case I want to ever report more than 1 error in a row in the future),
>> but I may try that out shortly.
>>
>> I would still be interested to work out how to avoid this issue in future
>> grammars.
>>
>> Mark
>>
>>
>> On Mon, Jan 24, 2011 at 4:44 PM, Mark Mandel <mark.mandel at gmail.com>wrote:
>>
>>> Hey guys,
>>>
>>> My grammar can be seen here:
>>>
>>> http://coldspring.git.sourceforge.net/git/gitweb.cgi?p=coldspring/coldspring;a=blob;f=antlr/com/coldspring/aop/expression/AopExpression.g;h=b80ef8a7ddd854458791e4e044a8f09461b66c50;hb=HEAD
>>>
>>> It's a parser for a subset of AspectJ expressions, with some minor
>>> modifications (if anyone cares ;o) ).
>>>
>>> An example expression would be:
>>> @annotation(dostuff='true')
>>>
>>> I've used predicate in my lexer to work pick up the first item in the
>>> expression, i.e. an expression should always start with 'target', '@target',
>>> 'execution', 'within' or '@annotation'
>>>
>>> If I have a typo in the expression that is being entered, e.g.
>>>
>>> @annotaion(dostuff='true')
>>>
>>> I get the following output:
>>> line 1:7 mismatched character 'i' expecting 't'
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> line 1:8 rule DESCRIPTOR failed predicate: {expressionStart}?
>>> .... (infinite loop) ....
>>>
>>> The errors are perfectly correct, but the infinite loop is a bit of a
>>> problem, as I'm sure you can understand.
>>>
>>> Is this a bug in ANTLR, or is there a way I can fix/change my grammar (or
>>> add in some custom code), so that I don't fall into the infinite loop? (or
>>> escape out of it)
>>>
>>> I'm guessing this is because ANTLR tries to recover from an error
>>> whenever it encounters one. (Which I would also be happy to turn off, I only
>>> need the 1st error for my purposes at the moment).
>>>
>>> Any help would be appreciated.
>>>
>>> Mark
>>>
>>>
>>> --
>>> E: mark.mandel at gmail.com
>>> T: http://www.twitter.com/neurotic
>>> W: www.compoundtheory.com
>>>
>>> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
>>> http://www.cfobjective.com.au
>>>
>>> Hands-on ColdFusion ORM Training
>>> www.ColdFusionOrmTraining.com
>>>
>>
>>
>>
>> --
>> E: mark.mandel at gmail.com
>> T: http://www.twitter.com/neurotic
>> W: www.compoundtheory.com
>>
>> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
>> http://www.cfobjective.com.au
>>
>> Hands-on ColdFusion ORM Training
>> www.ColdFusionOrmTraining.com
>>
>
>
>
> --
> E: mark.mandel at gmail.com
> T: http://www.twitter.com/neurotic
> W: www.compoundtheory.com
>
> cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
> http://www.cfobjective.com.au
>
> Hands-on ColdFusion ORM Training
> www.ColdFusionOrmTraining.com
>



-- 
E: mark.mandel at gmail.com
T: http://www.twitter.com/neurotic
W: www.compoundtheory.com

cf.Objective(ANZ) - Nov 18, 19 - Melbourne Australia
http://www.cfobjective.com.au

Hands-on ColdFusion ORM Training
www.ColdFusionOrmTraining.com

From xentastic at gmail.com  Wed Jan 26 08:13:41 2011
From: xentastic at gmail.com (Alfredo Perez J.)
Date: Wed, 26 Jan 2011 10:13:41 -0600
Subject: [antlr-interest] Use of multimap in grammar file.
Message-ID: <AANLkTimYFvTnBxXARDTt0nDyxKROC25XirS5FQieVz8v@mail.gmail.com>

Hello.

I am trying to make a not too complicated translator using ANTLR. From the
approach I'm taking it's convenient for me to use Multimaps.
However I'm having problmes initializing the map, I have something likes
this:

model
scope{
   Multimap <Integer, String> CMap;
   Multimap <Integer, String> UMap;
;

}

@init {
  $model::UMap = HashMultimap.create();
  $model::CMap = HashMultimap.create();

}

: RULES

;

From xentastic at gmail.com  Wed Jan 26 08:21:43 2011
From: xentastic at gmail.com (Alfredo Perez J.)
Date: Wed, 26 Jan 2011 10:21:43 -0600
Subject: [antlr-interest] Use of multimap in grammar file.
Message-ID: <AANLkTinMSyBR-hDMDii+0F2y0kSP6O6fecmtbTYjo_=e@mail.gmail.com>

Hello.

I am trying to make a not too complicated translator using ANTLR, the
aproach I'm taking makes use of Multimaps in the grammar file.
However I'm having some trouble initializing them, here's how I do it:

grammar FSM;

options {output=template;}

@header {
import org.antlr.stringtemplate.*;
import org.antlr.misc.MultiMap;

}
model
scope{
   Multimap <Integer, String> CMap;
   Multimap <Integer, String> UMap;
}

@init {
  $model::UMap = HashMultimap.create();
  $model::CMap = HashMultimap.create();

}

 : RULES
  -> RewriteRule
;

...

When I try to debug that in ANTLWorks, or try to build project in NetBeans I
get the following error:

error(104):  cannot find an attribute name in attribute declaration
java.lang.StringIndexOutOfBoundsException: String index out of range: -1

Which seems to be a problem with the angled brackets or something. Because
If I comment out /*Multimap <Integer, String> CMap*/ the error goes away.
What would be a correct way to initialize a Multimap visible to that scope?

For your time, thank you.

 - APJ

From xentastic at gmail.com  Wed Jan 26 09:40:53 2011
From: xentastic at gmail.com (Alfredo Perez J.)
Date: Wed, 26 Jan 2011 11:40:53 -0600
Subject: [antlr-interest] Use of multimap in grammar file.
Message-ID: <AANLkTimiCy=85jny4EsZmiNSN=GmiFk7rq=kt3vAMQKJ@mail.gmail.com>

Nevermind that previous post (accidentally doubled btw). My mind  after many
hours couldn't see an extra ; that was  there which caused the error.

Now I have a different quesiton if you mind.

I have some expression like this:

TRANSITION IDENTIFIER TO IDENTIFIER transFlags

Now what I want in this step is store IDENTIFIER.text from the left side and
IDENTIFIER.text from the right side, but how can I tell one from the other?
Tried something like this:

TRANSITION IDENTIFIER {Auxiliar = {$IDENTIFIER.text}} TO IDENTIFIER
transFlags

Auxiliar beign a String but I get the error: IDENTIFIER is a non-unique
reference.
I can't define some sort of "LeftIdentifier" because it's the same rule and
it won't be matched.

Any idea how can I differenciate these Identifiers?

From Gordon.Tyler at quest.com  Wed Jan 26 10:55:23 2011
From: Gordon.Tyler at quest.com (Gordon Tyler)
Date: Wed, 26 Jan 2011 18:55:23 +0000
Subject: [antlr-interest] Use of multimap in grammar file.
In-Reply-To: <AANLkTimiCy=85jny4EsZmiNSN=GmiFk7rq=kt3vAMQKJ@mail.gmail.com>
References: <AANLkTimiCy=85jny4EsZmiNSN=GmiFk7rq=kt3vAMQKJ@mail.gmail.com>
Message-ID: <C1F9423CECA546459E6FDBCC6E5F28AE032AB8@ALVMBXW01.prod.quest.corp>

rule: TRANSITION id1=IDENTIFIER TO id2=IDENTIFIER transFlags

Then you can use id1 and id2 as references to their respective tokens in the post-rule code block.

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alfredo Perez J.
> Sent: Wednesday, January 26, 2011 12:41 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Use of multimap in grammar file.
> 
> Nevermind that previous post (accidentally doubled btw). My mind  after
> many
> hours couldn't see an extra ; that was  there which caused the error.
> 
> Now I have a different quesiton if you mind.
> 
> I have some expression like this:
> 
> TRANSITION IDENTIFIER TO IDENTIFIER transFlags
> 
> Now what I want in this step is store IDENTIFIER.text from the left
> side and
> IDENTIFIER.text from the right side, but how can I tell one from the
> other?
> Tried something like this:
> 
> TRANSITION IDENTIFIER {Auxiliar = {$IDENTIFIER.text}} TO IDENTIFIER
> transFlags
> 
> Auxiliar beign a String but I get the error: IDENTIFIER is a non-unique
> reference.
> I can't define some sort of "LeftIdentifier" because it's the same rule
> and
> it won't be matched.
> 
> Any idea how can I differenciate these Identifiers?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ssawkar at aehr.com  Wed Jan 26 12:17:37 2011
From: ssawkar at aehr.com (Sunil Sawkar)
Date: Wed, 26 Jan 2011 12:17:37 -0800
Subject: [antlr-interest] Many unused variables in the generated parser c
	file
Message-ID: <201101261217.37826.ssawkar@aehr.com>

Hi,

Any suggestions as to how I can prevent unused variable declarations within 
the generated parser c file ? 

Thanks,
-Sunil Sawkar

Following is an example warning from compiler, and the related source in the c 
file:

compiler warning:

algoexprParser.c:5462: warning: unused variable ?LA2_2?    
algoexprParser.c:5476: warning: unused variable ?LA2_3?

source:
            for (;;)
            {
                int alt2=2;
                switch ( LA(1) ) 
                {
                case VARIABLE:
                case LABEL_NOT_VAR:
                	{
                		{
                		   /* 
dfaLoopbackState(k,edges,eotPredictsAlt,description,stateNumber,semPredState)
                		    */
                		    int LA2_2 = LA(2);
                		    if ( (synpred2_algoexpr(ctx)) ) 
                		    {
                		        alt2=1;
                		    }

                		}
                	}
                    break;
                case 72:
                	{
                		{
                		   /* 
dfaLoopbackState(k,edges,eotPredictsAlt,description,stateNumber,semPredState)
                		    */
                		    int LA2_3 = LA(2);
                		    if ( (synpred2_algoexpr(ctx)) ) 
                		    {
                		        alt2=1;
                		    }

                		}
                	}
                    break;
.....

From kcherr1 at tigers.lsu.edu  Wed Jan 26 12:48:09 2011
From: kcherr1 at tigers.lsu.edu (Kevin Cherry)
Date: Wed, 26 Jan 2011 14:48:09 -0600
Subject: [antlr-interest] Many unused variables in the generated parser
	c file
In-Reply-To: <201101261217.37826.ssawkar@aehr.com>
References: <201101261217.37826.ssawkar@aehr.com>
Message-ID: <AANLkTikx+2rmT8-a4jiz87evX1A8mJifNON1x9P3HcJ7@mail.gmail.com>

There are also several unused "using" statements in generated c# code as
well as 3 to 5 consecutive blank lines throughout.

On Wed, Jan 26, 2011 at 2:17 PM, Sunil Sawkar <ssawkar at aehr.com> wrote:

> Hi,
>
> Any suggestions as to how I can prevent unused variable declarations within
> the generated parser c file ?
>
> Thanks,
> -Sunil Sawkar
>
> Following is an example warning from compiler, and the related source in
> the c
> file:
>
> compiler warning:
>
> algoexprParser.c:5462: warning: unused variable ?LA2_2?
> algoexprParser.c:5476: warning: unused variable ?LA2_3?
>
> source:
>            for (;;)
>            {
>                int alt2=2;
>                switch ( LA(1) )
>                {
>                case VARIABLE:
>                case LABEL_NOT_VAR:
>                        {
>                                {
>                                   /*
>
> dfaLoopbackState(k,edges,eotPredictsAlt,description,stateNumber,semPredState)
>                                    */
>                                    int LA2_2 = LA(2);
>                                    if ( (synpred2_algoexpr(ctx)) )
>                                    {
>                                        alt2=1;
>                                    }
>
>                                }
>                        }
>                    break;
>                case 72:
>                        {
>                                {
>                                   /*
>
> dfaLoopbackState(k,edges,eotPredictsAlt,description,stateNumber,semPredState)
>                                    */
>                                    int LA2_3 = LA(2);
>                                    if ( (synpred2_algoexpr(ctx)) )
>                                    {
>                                        alt2=1;
>                                    }
>
>                                }
>                        }
>                    break;
> .....
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From zching01 at gmail.com  Wed Jan 26 13:40:33 2011
From: zching01 at gmail.com (Ching)
Date: Wed, 26 Jan 2011 14:40:33 -0700
Subject: [antlr-interest] org.antlr.runtime.CommonToken cannot be cast to
	org.antlr.runtime.tree.Tree
Message-ID: <AANLkTinpjy8E1U=yDN+LQ5T70iQowh4c2VLpJEQtUJ6-@mail.gmail.com>

Can anyone tell me why I got this exception? My output is AST. Thanks.

From bkiers at gmail.com  Wed Jan 26 13:57:50 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 26 Jan 2011 22:57:50 +0100
Subject: [antlr-interest] org.antlr.runtime.CommonToken cannot be cast
	to org.antlr.runtime.tree.Tree
In-Reply-To: <AANLkTinpjy8E1U=yDN+LQ5T70iQowh4c2VLpJEQtUJ6-@mail.gmail.com>
References: <AANLkTinpjy8E1U=yDN+LQ5T70iQowh4c2VLpJEQtUJ6-@mail.gmail.com>
Message-ID: <AANLkTinJPcCbRA76A7B7ZNt=NetgkChJYOY9BUT2UO=2@mail.gmail.com>

On Wed, Jan 26, 2011 at 10:40 PM, Ching <zching01 at gmail.com> wrote:

> Can anyone tell me why I got this exception? My output is AST. Thanks.
>
>
Err, that error is pretty self-explanatory: you're trying to cast
a org.antlr.runtime.CommonToken to a org.antlr.runtime.tree.Tree, which is
illegal. As you can see from ANTLR's class hierarchy:
http://www.antlr.org/api/Java/hierarchy.html
the two can't be cast (either CommonToken->Tree or Tree->CommonToken).

Perhaps you don't understand where this happens in your grammar? In that
case, please show your grammar as well.

Regards,

Bart.

From piotrek.kaleta at gmail.com  Wed Jan 26 15:19:18 2011
From: piotrek.kaleta at gmail.com (Piotr Kaleta)
Date: Thu, 27 Jan 2011 10:19:18 +1100
Subject: [antlr-interest] org.antlr.runtime.CommonToken cannot be cast
	to org.antlr.runtime.tree.Tree
In-Reply-To: <AANLkTinJPcCbRA76A7B7ZNt=NetgkChJYOY9BUT2UO=2@mail.gmail.com>
References: <AANLkTinpjy8E1U=yDN+LQ5T70iQowh4c2VLpJEQtUJ6-@mail.gmail.com>
	<AANLkTinJPcCbRA76A7B7ZNt=NetgkChJYOY9BUT2UO=2@mail.gmail.com>
Message-ID: <AANLkTimScd5Si1H9Lfr9M3nXz-rsb90bDp_ebU4SF_e3@mail.gmail.com>

You might need to introduce the Tree adaptor if you're using the custom type
of tree nodes. It's described here:
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

On Thu, Jan 27, 2011 at 8:57 AM, Bart Kiers <bkiers at gmail.com> wrote:

> On Wed, Jan 26, 2011 at 10:40 PM, Ching <zching01 at gmail.com> wrote:
>
> > Can anyone tell me why I got this exception? My output is AST. Thanks.
> >
> >
> Err, that error is pretty self-explanatory: you're trying to cast
> a org.antlr.runtime.CommonToken to a org.antlr.runtime.tree.Tree, which is
> illegal. As you can see from ANTLR's class hierarchy:
> http://www.antlr.org/api/Java/hierarchy.html
> the two can't be cast (either CommonToken->Tree or Tree->CommonToken).
>
> Perhaps you don't understand where this happens in your grammar? In that
> case, please show your grammar as well.
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Piotr Kaleta

From michael.bedward at gmail.com  Wed Jan 26 16:50:12 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 27 Jan 2011 11:50:12 +1100
Subject: [antlr-interest] best practice for unwanted input before EOF
Message-ID: <AANLkTimWNaLFmO-CCKVz4VwA0m3itmmJ+jUhrc95jToE@mail.gmail.com>

Hi folks,

I have a grammar with the following start rule...

prog: (init_block)? statement+ EOF ;

The purpose of the EOF token is to detect unwanted input after
statements. I'm unclear on the best way to respond to input that is
unwanted but, because it is defined in the grammar, does not provoke a
NoViableAlt exception such as an init_block following rather than
preceding the statements.

At the moment I'm doing this in the @members section of my grammar...

@Override
protected Object recoverFromMismatchedToken(IntStream input, int
ttype, BitSet follow) throws RecognitionException {
    if (ttype == Token.EOF) {
        throw new UnexpectedInputException("Invalid input before end of file");
    }
    return super.recoverFromMismatchedToken(input, ttype, follow);
}

It works, but it seems like a clunky solution.

I've searched the list archives and scanned the Definitive Reference
and Patterns books without success, although I suspect I must be
missing something obvious.

I'd be grateful for any examples or pointers to docs.

Michael

From bill.andersen at mac.com  Wed Jan 26 16:57:45 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Wed, 26 Jan 2011 19:57:45 -0500
Subject: [antlr-interest] Set line/col of synthetic token from non-token
Message-ID: <D2A204A9-C756-4B60-9E54-002693EA5F38@mac.com>

Folks,

I have this production

formula
  : outer_formula nle?
    -> ^(STMT[???,"STMT"] ....
  ;

where STMT is a synthetic token.  Question is how to pass info for line/col from whatever matches 'outer_formula' to where the STMT synthetic token is created in adaptor.create(...).  I get a tree for outer_formula, not a token.  I know how to do this with tokens.

Any help appreciated.

	.bill

From markwright at internode.on.net  Thu Jan 27 03:07:06 2011
From: markwright at internode.on.net (Mark Wright)
Date: Thu, 27 Jan 2011 22:07:06 +1100
Subject: [antlr-interest] Set line/col of synthetic token from non-token
In-Reply-To: <D2A204A9-C756-4B60-9E54-002693EA5F38@mac.com>
References: <D2A204A9-C756-4B60-9E54-002693EA5F38@mac.com>
Message-ID: <ymaaaimhag5.fsf@internode.on.net>

On Wed, 26 Jan 2011 19:57:45 -0500, Bill Andersen <bill.andersen at mac.com> wrote:
> Folks,
> 
> I have this production
> 
> formula
>   : outer_formula nle?
>     -> ^(STMT[???,"STMT"] ....
>   ;
> 
> where STMT is a synthetic token.  Question is how to pass info for line/col from whatever matches 'outer_formula' to where the STMT synthetic token is created in adaptor.create(...).  I get a tree for outer_formula, not a token.  I know how to do this with tokens.
> 
> Any help appreciated.
> 
> 	.bill

Hi Bill,

One idea is to pass a token from the outer_formula to the inner one,
something like (not tested, so not completely sure this will work):

formula[MyToken t]
  : outer_formula nle?
    -> ^(STMT[$[t,"STMT"] ....
  ;

outer_formula
  : o='outer'! formula[$o]
  ;

Regards, Mark

From bastian.asam at amadeus.com  Thu Jan 27 06:20:57 2011
From: bastian.asam at amadeus.com (Bastian Asam)
Date: Thu, 27 Jan 2011 15:20:57 +0100
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
Message-ID: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>

Hello everybody,
I spend all day to find a function for translating token names to their 
integer type value.

Basically what I want is to be able to call the 
getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test") 
instead of (tree, 23). Otherwise I would always have to change my code 
after altering the grammar a bit...

I found the getTokenType(string) function in java, but not in C. Is it 
missing in C? And what can I do to get it anyways?

Any help would be greatly appreciated!
Thanks
Bastian



IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 
the use of the individual or entity shown above as addressees. It may 
contain information which is privileged, confidential or otherwise 
protected from disclosure under applicable laws.  If the reader of this 
transmission is not the intended recipient, you are hereby notified that 
any dissemination, printing, distribution, copying, disclosure or the 
taking of any action in reliance on the contents of this information is 
strictly prohibited.  If you have received this transmission in error, 
please immediately notify us by reply e-mail or using the address below 
and delete the message and any attachments from your system. 

Amadeus Data Processing GmbH 
Gesch?ftsf?hrer: Eberhard Haag 
Sitz der Gesellschaft: Erding 
HR M?nchen 48 199 
Berghamer Strasse 6 
85435 Erding 
Germany

From parrt at cs.usfca.edu  Thu Jan 27 09:57:30 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 27 Jan 2011 09:57:30 -0800
Subject: [antlr-interest] an antlr contract
Message-ID: <CD0DEC0E-5D10-447A-A1CA-16F1A6DD9837@cs.usfca.edu>

> I?ve got a 5-6 week contract here in the Chicago area for a Grammar Developer. Our client is looking for someone with the following skills:
> 	? Senior Java Developer (5 + years )
> 	? Grammar development skills (Lexer or Parser or Tree Walker/Code Emitter)
> 	? Experience with open source parsing tooling, ANTLR and StringTemplate
> 	? 2-3 years of experience in developing schemas -  XSD
> 	? 2-3 years of experience with XML
> They are going to be generating java code and XSD definitions.
>  
> Thanks and have a great day!
>  
> Ron
>  
>  
> Ron Kutz
> Practice Director, Recruiting
> Technisource a Subsidiary of the SFN Group
> One Pierce Place, Suite 550W
> Itasca, IL 60143
>  
> Toll Free 888-948-6252 X2865
> Direct 630-919-2865, Cell 630-235-6843
> Fax 630-919-2888
> Email RonKutz at Technisource.com
> Web www.Technisource.com
> LinkedIn http://www.linkedin.com/in/ronkutz

From charbel.kaed at gmail.com  Thu Jan 27 17:08:55 2011
From: charbel.kaed at gmail.com (charbel elkaed)
Date: Fri, 28 Jan 2011 02:08:55 +0100
Subject: [antlr-interest] Return List from Java.g file
Message-ID: <AANLkTinUPY4DVBVqYUsWANcL=8CrvFQTOjSqrE3obD0_@mail.gmail.com>

Hi ANTLR Users,

I just started with ANTLR, followed the basic tutorials.

I am using ANTLR to parse a Java File, then do some treatment on  the
imports,  on some declarations and method invocation then regenerate
an output a Java File.

So far I can retrieve the imports but I think the declarations
treatment will be a bit more complex. For the imports, I using a list
in the Java.g.

Any idea how can I do that?
Is there any ANTLR API : Java->To->Java that I can use ?

Best Regards,
Charbel

From bill.andersen at mac.com  Thu Jan 27 19:17:52 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Thu, 27 Jan 2011 22:17:52 -0500
Subject: [antlr-interest] Quick tree parser question
Message-ID: <D0A0194B-2BF3-44EB-8500-94DA213EBE69@mac.com>

Just to check my understanding...

If you have a non-terminal in a tree grammar, but you know that it resolves to a single token, e.g.

predicate
	: name
	| variable
	;

name
	: NAME
	;

variable
	: VARIABLE
	;

is this the best way to inspect the text associated with the non-terminal?

	$predicate.start.getText()

Thanks

	.bill

From rjh at sixdemonbag.org  Thu Jan 27 23:51:58 2011
From: rjh at sixdemonbag.org (Robert J. Hansen)
Date: Fri, 28 Jan 2011 02:51:58 -0500
Subject: [antlr-interest] Greedy matching to end of line
Message-ID: <4D42759E.5010404@sixdemonbag.org>

I haven't done any work with lexers and parsers in many years, and
figured a good way to go about getting re-acquainted would be to find a
big corpus of text and put together a translator.  The corpus I had
around was the ARIN WHOIS information, which is basically key-value
coding in a record-based format.  Newlines are significant, but other
whitespace generally isn't.

I'm now running into a brick wall, though, with trying to enable greedy
matching -- scarfing up everything to end-of-line and returning that
back as a string.  I can *almost* do it, but I'm getting killed on some
corner cases.

The following is an abbreviated version of the grammar.  The bug is
present in this, but all actions, etc., have been omitted.

=====
grammar foo;

file	: (block|NEWLINE)*;
block	: asblock
	| netblock;
asblock	: asbegin asline* NEWLINE;
netblock: netbegin netline* NEWLINE;
netline	: n_nh;
netbegin: 'NetHandle:' words;
n_nh	: 'NOCHandle:' words;
asline	: 'Comment:' words;
asbegin	: 'ASHandle:' words;
words 	: word (word)* NEWLINE
	| NEWLINE;
word	: WORD;
WORD    : ~(' '|'\t'|'\r'|'\n')+;
NEWLINE : '\r'?'\n';
WS	: (' '|'\t') { skip(); };
=====

... Now, consider the derivation of the line:

	Comment: NOCHandle John Q. Hacker

... starting from rule asline.  asline derives out to 'Comment:' on the
left, words on the right, and from there straight to NoViableAltException.

However, if I change it to:

	Comment: NCHandle John Q. Hacker

... then it derives successfully.

It appears that when trying to derive the words rule, it sees that rule
n_nh could also apply and can't decide what derivation to use.  But why?
 n_nh is not listed as a child rule of words.  How can I fix this so
that the words rule will grab *everything* to the end of the line?

My second concern: when trying to parse a multi-gig file using a grammar
much like the above, Java demands it be given absurdly huge heap sizes.
 I am assuming that like most compilers ANTLR has to construct the
entire tree in memory before it can walk the tree doing various actions:
however, if there's some way to mitigate the heap memory problem, I
would be deeply appreciative.

Thank you all for your help!


From hiran.chaudhuri at web.de  Fri Jan 28 00:41:27 2011
From: hiran.chaudhuri at web.de (Hiran Chaudhuri)
Date: Fri, 28 Jan 2011 09:41:27 +0100
Subject: [antlr-interest] Return List from Java.g file
In-Reply-To: <AANLkTinUPY4DVBVqYUsWANcL=8CrvFQTOjSqrE3obD0_@mail.gmail.com>
References: <AANLkTinUPY4DVBVqYUsWANcL=8CrvFQTOjSqrE3obD0_@mail.gmail.com>
Message-ID: <1296204087.2339.3.camel@silver>

Am Freitag, den 28.01.2011, 02:08 +0100 schrieb charbel elkaed:
> I am using ANTLR to parse a Java File, then do some treatment on  the
> imports,  on some declarations and method invocation then regenerate
> an output a Java File.
> 
> So far I can retrieve the imports but I think the declarations
> treatment will be a bit more complex. For the imports, I using a list
> in the Java.g.
> 
> Any idea how can I do that?
> Is there any ANTLR API : Java->To->Java that I can use ?

Hi, Charbel.

1) A parser generates an AST to have the whole java code structure in
memory.

2) Some code would then modify that AST to 'rearrange' the imports -
whatever you need.

3) Finally you have to create code to serialise the AST, meaning to
generate your output java file.

ANTLR will help you in step 1. The other two are up to you.

Hiran


From hiran.chaudhuri at web.de  Fri Jan 28 00:49:50 2011
From: hiran.chaudhuri at web.de (Hiran Chaudhuri)
Date: Fri, 28 Jan 2011 09:49:50 +0100
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <4D42759E.5010404@sixdemonbag.org>
References: <4D42759E.5010404@sixdemonbag.org>
Message-ID: <1296204590.2339.9.camel@silver>

Am Freitag, den 28.01.2011, 02:51 -0500 schrieb Robert J. Hansen:
> ... Now, consider the derivation of the line:
> 
> 	Comment: NOCHandle John Q. Hacker
> 
> ... starting from rule asline.  asline derives out to 'Comment:' on the
> left, words on the right, and from there straight to NoViableAltException.
> 
> However, if I change it to:
> 
> 	Comment: NCHandle John Q. Hacker
> 
> ... then it derives successfully.

It seems to me that the parser recognizes the anonymous tokens although
at this position in the file they are valid non-keywords.

Somehow the solution must be to allow keywords in other positions of the
language, although I cannot tell how the solution would look like.

Hiran


From bastian.asam at amadeus.com  Fri Jan 28 01:04:03 2011
From: bastian.asam at amadeus.com (Bastian Asam)
Date: Fri, 28 Jan 2011 10:04:03 +0100
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
In-Reply-To: <40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>
References: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>
	<40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>
Message-ID: <OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>

Hi Hiran,
unfortunately there aren't any generated constants for my tokens or at 
least I can't find any. Since this also looks kind of odd to me I'm 
wondering if something's going wrong on my system.
Can anyone confirm please, that for the C target no token constants are 
generated or that there is no getTokenType Method?

And parser.test is only a Function: GrammarParser_test_return (*test) 
(struct GrammarParser_Ctx_struct * ctx) . I don't know how this could give 
the type of the token test.

Thanks
Bastian



From:   "Hiran Chaudhuri" <Hiran.Chaudhuri at web.de>
To:     "Bastian Asam" <bastian.asam at amadeus.com>
Date:   27-01-11 16:29
Subject:        Re: [antlr-interest] missing getTokenType(string) in 
ANTLR3C?



Hi, Bastian.

I've never used the C target, but in Java I would not go for 
getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")

but instead

getFirstChildWithType(BASE_TREE, UINT32) Function with (tree, parser.TEST)

Are there no constants generated for your tokens?

Hiran


-----Urspr?ngliche Nachricht-----
Von: "Bastian Asam" <bastian.asam at amadeus.com>
Gesendet: 27.01.2011 15:20:57
An: antlr-interest at antlr.org
Betreff: [antlr-interest] missing getTokenType(string) in ANTLR3C?

>Hello everybody,
>I spend all day to find a function for translating token names to their 
>integer type value.
>
>Basically what I want is to be able to call the 
>getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test") 
>instead of (tree, 23). Otherwise I would always have to change my code 
>after altering the grammar a bit...
>
>I found the getTokenType(string) function in java, but not in C. Is it 
>missing in C? And what can I do to get it anyways?
>
>Any help would be greatly appreciated!
>Thanks
>Bastian
>
>
>
>IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 

>the use of the individual or entity shown above as addressees. It may 
>contain information which is privileged, confidential or otherwise 
>protected from disclosure under applicable laws.  If the reader of this 
>transmission is not the intended recipient, you are hereby notified that 
>any dissemination, printing, distribution, copying, disclosure or the 
>taking of any action in reliance on the contents of this information is 
>strictly prohibited.  If you have received this transmission in error, 
>please immediately notify us by reply e-mail or using the address below 
>and delete the message and any attachments from your system. 
>
>Amadeus Data Processing GmbH 
>Gesch?ftsf?hrer: Eberhard Haag 
>Sitz der Gesellschaft: Erding 
>HR M?nchen 48 199 
>Berghamer Strasse 6 
>85435 Erding 
>Germany
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
___________________________________________________________
Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de





IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 
the use of the individual or entity shown above as addressees. It may 
contain information which is privileged, confidential or otherwise 
protected from disclosure under applicable laws.  If the reader of this 
transmission is not the intended recipient, you are hereby notified that 
any dissemination, printing, distribution, copying, disclosure or the 
taking of any action in reliance on the contents of this information is 
strictly prohibited.  If you have received this transmission in error, 
please immediately notify us by reply e-mail or using the address below 
and delete the message and any attachments from your system. 

Amadeus Data Processing GmbH 
Gesch?ftsf?hrer: Eberhard Haag 
Sitz der Gesellschaft: Erding 
HR M?nchen 48 199 
Berghamer Strasse 6 
85435 Erding 
Germany

From pop.qvarnstrom at gmail.com  Fri Jan 28 01:32:57 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 28 Jan 2011 10:32:57 +0100
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <4D42759E.5010404@sixdemonbag.org>
References: <4D42759E.5010404@sixdemonbag.org>
Message-ID: <AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>

Hi,

I cannot reproduce this using your supplied grammar: as long as the required
NEWLINE is in place, your example works just fine. If, however, I do not
provide a newline in the input, I'm hit by a NoViableAltException.

I.e. for input "Comment: NOCHandle John Q. Hacker" I get the result you
describe, while input
"Comment: NOCHandle John Q. Hacker
" works perfectly, which seems reasonable. Same result for NCHandle.

This, of course, if starting from rule asline.

Am I missing something?

Cheers,
Pop

On Fri, Jan 28, 2011 at 8:51 AM, Robert J. Hansen <rjh at sixdemonbag.org>wrote:

> I haven't done any work with lexers and parsers in many years, and
> figured a good way to go about getting re-acquainted would be to find a
> big corpus of text and put together a translator.  The corpus I had
> around was the ARIN WHOIS information, which is basically key-value
> coding in a record-based format.  Newlines are significant, but other
> whitespace generally isn't.
>
> I'm now running into a brick wall, though, with trying to enable greedy
> matching -- scarfing up everything to end-of-line and returning that
> back as a string.  I can *almost* do it, but I'm getting killed on some
> corner cases.
>
> The following is an abbreviated version of the grammar.  The bug is
> present in this, but all actions, etc., have been omitted.
>
> =====
> grammar foo;
>
> file    : (block|NEWLINE)*;
> block   : asblock
>        | netblock;
> asblock : asbegin asline* NEWLINE;
> netblock: netbegin netline* NEWLINE;
> netline : n_nh;
> netbegin: 'NetHandle:' words;
> n_nh    : 'NOCHandle:' words;
> asline  : 'Comment:' words;
> asbegin : 'ASHandle:' words;
> words   : word (word)* NEWLINE
>        | NEWLINE;
> word    : WORD;
> WORD    : ~(' '|'\t'|'\r'|'\n')+;
> NEWLINE : '\r'?'\n';
> WS      : (' '|'\t') { skip(); };
> =====
>
> ... Now, consider the derivation of the line:
>
>        Comment: NOCHandle John Q. Hacker
>
> ... starting from rule asline.  asline derives out to 'Comment:' on the
> left, words on the right, and from there straight to NoViableAltException.
>
> However, if I change it to:
>
>        Comment: NCHandle John Q. Hacker
>
> ... then it derives successfully.
>
> It appears that when trying to derive the words rule, it sees that rule
> n_nh could also apply and can't decide what derivation to use.  But why?
>  n_nh is not listed as a child rule of words.  How can I fix this so
> that the words rule will grab *everything* to the end of the line?
>
> My second concern: when trying to parse a multi-gig file using a grammar
> much like the above, Java demands it be given absurdly huge heap sizes.
>  I am assuming that like most compilers ANTLR has to construct the
> entire tree in memory before it can walk the tree doing various actions:
> however, if there's some way to mitigate the heap memory problem, I
> would be deeply appreciative.
>
> Thank you all for your help!
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From pvginkel at gmail.com  Fri Jan 28 04:56:06 2011
From: pvginkel at gmail.com (Pieter van Ginkel)
Date: Fri, 28 Jan 2011 13:56:06 +0100
Subject: [antlr-interest] Parsing OpenEdge (4GL database language) without
	preprocessor phase
Message-ID: <AANLkTi=ArrZ3NqozdgtFUhuujA6FqTqJEvE13kPY+U4Z@mail.gmail.com>

I need to write a parser for OpenEdge (a 4GL database language), but I need
to preserve facts of the source files that would otherwise be lost through
the preprocessor.

E.g., the following contrived example:

assign customer.name = {myinc.i}.

And an include myinc.i with the contents:

7 * 14

I need to have an AST that contains the fact that customer.name was assigned
with {myinc.i} and not 7 * 14. The includes are normally processed using a
preprocessor, so theoretically it's possible that the includes are accessed
anywhere within a file (not in a neat location like after the assign in the
above example). However, the code base is quite clean and this shouldn't
pose much of a problem.

The reason I need this is that I am writing an application for source
analysis for which I need to know every detail of the source file.

Can this be done with ANTLR? Any tips?

From jmurray at aerotech.com  Fri Jan 28 05:43:42 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Fri, 28 Jan 2011 08:43:42 -0500
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
In-Reply-To: <OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
References: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>	<40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>
	<OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393BED1884@EXCH-VIRTUAL.aerotechad.com>

Hi Bastian,

I have been using the C target for some time now. The lexer tokens are 
#define statements that can be found in both the generated lexer and 
parser .h files. Look for this heading in xxxParser.h:
/** Symbolic definitions of all the tokens that the parser will work with.

- Justin

On 1/28/2011 4:04 AM, Bastian Asam wrote:
> Hi Hiran,
> unfortunately there aren't any generated constants for my tokens or at
> least I can't find any. Since this also looks kind of odd to me I'm
> wondering if something's going wrong on my system.
> Can anyone confirm please, that for the C target no token constants are
> generated or that there is no getTokenType Method?
>
> And parser.test is only a Function: GrammarParser_test_return (*test)
> (struct GrammarParser_Ctx_struct * ctx) . I don't know how this could give
> the type of the token test.
>
> Thanks
> Bastian
>
>
>
> From:   "Hiran Chaudhuri"<Hiran.Chaudhuri at web.de>
> To:     "Bastian Asam"<bastian.asam at amadeus.com>
> Date:   27-01-11 16:29
> Subject:        Re: [antlr-interest] missing getTokenType(string) in
> ANTLR3C?
>
>
>
> Hi, Bastian.
>
> I've never used the C target, but in Java I would not go for
> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
>
> but instead
>
> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree, parser.TEST)
>
> Are there no constants generated for your tokens?
>
> Hiran
>
>
> -----Urspr?ngliche Nachricht-----
> Von: "Bastian Asam"<bastian.asam at amadeus.com>
> Gesendet: 27.01.2011 15:20:57
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] missing getTokenType(string) in ANTLR3C?
>
>> Hello everybody,
>> I spend all day to find a function for translating token names to their
>> integer type value.
>>
>> Basically what I want is to be able to call the
>> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
>> instead of (tree, 23). Otherwise I would always have to change my code
>> after altering the grammar a bit...
>>
>> I found the getTokenType(string) function in java, but not in C. Is it
>> missing in C? And what can I do to get it anyways?
>>
>> Any help would be greatly appreciated!
>> Thanks
>> Bastian
>>
>>
>>
>> IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for
>> the use of the individual or entity shown above as addressees. It may
>> contain information which is privileged, confidential or otherwise
>> protected from disclosure under applicable laws.  If the reader of this
>> transmission is not the intended recipient, you are hereby notified that
>> any dissemination, printing, distribution, copying, disclosure or the
>> taking of any action in reliance on the contents of this information is
>> strictly prohibited.  If you have received this transmission in error,
>> please immediately notify us by reply e-mail or using the address below
>> and delete the message and any attachments from your system.
>>
>> Amadeus Data Processing GmbH
>> Gesch?ftsf?hrer: Eberhard Haag
>> Sitz der Gesellschaft: Erding
>> HR M?nchen 48 199
>> Berghamer Strasse 6
>> 85435 Erding
>> Germany
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> ___________________________________________________________
> Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de
>
>
>
>
>
> IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for
> the use of the individual or entity shown above as addressees. It may
> contain information which is privileged, confidential or otherwise
> protected from disclosure under applicable laws.  If the reader of this
> transmission is not the intended recipient, you are hereby notified that
> any dissemination, printing, distribution, copying, disclosure or the
> taking of any action in reliance on the contents of this information is
> strictly prohibited.  If you have received this transmission in error,
> please immediately notify us by reply e-mail or using the address below
> and delete the message and any attachments from your system.
>
> Amadeus Data Processing GmbH
> Gesch?ftsf?hrer: Eberhard Haag
> Sitz der Gesellschaft: Erding
> HR M?nchen 48 199
> Berghamer Strasse 6
> 85435 Erding
> Germany
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From pop.qvarnstrom at gmail.com  Fri Jan 28 06:02:45 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 28 Jan 2011 15:02:45 +0100
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>
References: <4D42759E.5010404@sixdemonbag.org>
	<AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>
	<4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>
Message-ID: <AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>

Same apology goes here, attached is cap of my run of NOCHandle in the
interpreter, grammar cut and pasted from your original mail. The interpreter
has quirks though, have you tried running it in the debugger instead? And
what versions of antlr/antlrworks are you running?

Cheers,
Pop

2011/1/28 Robert J. Hansen <rjh at sixdemonbag.org>

> (I apologize in advance for the embedded images.  I understand a lot of
> people on the 'net want only pure ASCII text, but it seems easiest if I give
> screen caps.)
>
>
>
> > I cannot reproduce this using your supplied grammar: as long as the
> required NEWLINE is in place, your example works just fine. If, however, I
> do not provide a newline in the input, I'm hit by a NoViableAltException.
>
> Strange.  In my own tests it works out quite differently.
>
> First, yes, you're correct: a newline needs to be at the end of each and
> every line.  This is part of the original corpus's spec.  In the attached
> screenshots, the interpreter input has a newline at the end, although it's
> not visible.  First, a bad parse, showing how it bombs out on the words
> token:
>
>
>
> Second, a good parse, showing how changing NOCHandle to anything else
> allows it to parse:
>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: NOCHandle.png
Type: image/png
Size: 12656 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110128/a9b232a5/attachment.png 

From pop.qvarnstrom at gmail.com  Fri Jan 28 06:07:03 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 28 Jan 2011 15:07:03 +0100
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
References: <4D42759E.5010404@sixdemonbag.org>
	<AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>
	<4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>
	<AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
Message-ID: <AANLkTinZyKyPFmeZ2+aZo+uEaxRj+q3tiuNTkV6ZyMzg@mail.gmail.com>

Ouch, that's what I get for cutting and pasting. 'Comment: NOCHandle'
(original mail text) vs 'Comment: NOCHandle:' (from images, and - of course
- the keywords). Getting the same result as you when doing the same thing.
Sorry.

/Pop

2011/1/28 Pop Qvarnstr?m <pop.qvarnstrom at gmail.com>

> Same apology goes here, attached is cap of my run of NOCHandle in the
> interpreter, grammar cut and pasted from your original mail. The interpreter
> has quirks though, have you tried running it in the debugger instead? And
> what versions of antlr/antlrworks are you running?
>
> Cheers,
> Pop
>
> 2011/1/28 Robert J. Hansen <rjh at sixdemonbag.org>
>
>>  (I apologize in advance for the embedded images.  I understand a lot of
>> people on the 'net want only pure ASCII text, but it seems easiest if I give
>> screen caps.)
>>
>>
>>
>> > I cannot reproduce this using your supplied grammar: as long as the
>> required NEWLINE is in place, your example works just fine. If, however, I
>> do not provide a newline in the input, I'm hit by a NoViableAltException.
>>
>> Strange.  In my own tests it works out quite differently.
>>
>> First, yes, you're correct: a newline needs to be at the end of each and
>> every line.  This is part of the original corpus's spec.  In the attached
>> screenshots, the interpreter input has a newline at the end, although it's
>> not visible.  First, a bad parse, showing how it bombs out on the words
>> token:
>>
>>
>>
>> Second, a good parse, showing how changing NOCHandle to anything else
>> allows it to parse:
>>
>>
>>
>

From rjh at sixdemonbag.org  Fri Jan 28 06:08:50 2011
From: rjh at sixdemonbag.org (Robert J. Hansen)
Date: Fri, 28 Jan 2011 09:08:50 -0500
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
References: <4D42759E.5010404@sixdemonbag.org>
	<AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>
	<4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>
	<AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
Message-ID: <46AF758C-AAED-419B-9C20-B34814CD9BEB@sixdemonbag.org>

> Same apology goes here, attached is cap of my run of NOCHandle in the interpreter, grammar cut and pasted from your original mail. The interpreter has quirks though, have you tried running it in the debugger instead? And what versions of antlr/antlrworks are you running?

I have tried running it in the debugger: same result.  words derives into two NoViableAltException(0@[null]).

I'm running ANTLRworks 1.4.2, the OS X-specific app package version of it, with ANTLR 3.3 on the CLASSPATH.


From pop.qvarnstrom at gmail.com  Fri Jan 28 06:28:09 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Fri, 28 Jan 2011 15:28:09 +0100
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <46AF758C-AAED-419B-9C20-B34814CD9BEB@sixdemonbag.org>
References: <4D42759E.5010404@sixdemonbag.org>
	<AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>
	<4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>
	<AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
	<46AF758C-AAED-419B-9C20-B34814CD9BEB@sixdemonbag.org>
Message-ID: <AANLkTinB_wWpKg5YyArkLGZ9fGrMQHVT1BnUas2aiTO8@mail.gmail.com>

Just a thought: depending on what you do with the things after a 'Comment:',
you could just match .+ :

asline  : 'Comment:' .+;

/Pop

2011/1/28 Robert J. Hansen <rjh at sixdemonbag.org>

> > Same apology goes here, attached is cap of my run of NOCHandle in the
> interpreter, grammar cut and pasted from your original mail. The interpreter
> has quirks though, have you tried running it in the debugger instead? And
> what versions of antlr/antlrworks are you running?
>
> I have tried running it in the debugger: same result.  words derives into
> two NoViableAltException(0@[null]).
>
> I'm running ANTLRworks 1.4.2, the OS X-specific app package version of it,
> with ANTLR 3.3 on the CLASSPATH.
>
>

From rjh at sixdemonbag.org  Fri Jan 28 06:33:22 2011
From: rjh at sixdemonbag.org (Robert J. Hansen)
Date: Fri, 28 Jan 2011 09:33:22 -0500
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <AANLkTinB_wWpKg5YyArkLGZ9fGrMQHVT1BnUas2aiTO8@mail.gmail.com>
References: <4D42759E.5010404@sixdemonbag.org>
	<AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>
	<4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>
	<AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
	<46AF758C-AAED-419B-9C20-B34814CD9BEB@sixdemonbag.org>
	<AANLkTinB_wWpKg5YyArkLGZ9fGrMQHVT1BnUas2aiTO8@mail.gmail.com>
Message-ID: <5387508A-E0A0-4E3D-AE37-BD04B62EF656@sixdemonbag.org>

> Just a thought: depending on what you do with the things after a 'Comment:', you could just match .+ :

Well, I need to pull data out of what comes after the 'Comment:'.  If I can find some way to match .+ out to the first newline, and then extract the contents into $value, I'd be a happy camper.

(The grammar I posted has no return values.  The actual grammar I use does, since I hook up actions to various rules.)


From jimi at temporal-wave.com  Fri Jan 28 09:05:02 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 28 Jan 2011 09:05:02 -0800
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
In-Reply-To: <OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
References: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>
	<40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>
	<OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
Message-ID: <c87ef1a6ad8b34c2d3d1bb2b55746b0b@mail.gmail.com>

The token constants are in the .h file. If you are looking in a tree, you
get the tree node, then get its payload token and get the type from there.
You can include the .h file and write code to create a string map if you
want to use "dddd" but I think that you mean you want DDDD, which is the
#define in the generated .h file.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bastian Asam
> Sent: Friday, January 28, 2011 1:04 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] missing getTokenType(string) in ANTLR3C?
>
> Hi Hiran,
> unfortunately there aren't any generated constants for my tokens or at
> least I can't find any. Since this also looks kind of odd to me I'm
> wondering if something's going wrong on my system.
> Can anyone confirm please, that for the C target no token constants are
> generated or that there is no getTokenType Method?
>
> And parser.test is only a Function: GrammarParser_test_return (*test)
> (struct GrammarParser_Ctx_struct * ctx) . I don't know how this could
> give the type of the token test.
>
> Thanks
> Bastian
>
>
>
> From:   "Hiran Chaudhuri" <Hiran.Chaudhuri at web.de>
> To:     "Bastian Asam" <bastian.asam at amadeus.com>
> Date:   27-01-11 16:29
> Subject:        Re: [antlr-interest] missing getTokenType(string) in
> ANTLR3C?
>
>
>
> Hi, Bastian.
>
> I've never used the C target, but in Java I would not go for
> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
>
> but instead
>
> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,
> parser.TEST)
>
> Are there no constants generated for your tokens?
>
> Hiran
>
>
> -----Urspr?ngliche Nachricht-----
> Von: "Bastian Asam" <bastian.asam at amadeus.com>
> Gesendet: 27.01.2011 15:20:57
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] missing getTokenType(string) in ANTLR3C?
>
> >Hello everybody,
> >I spend all day to find a function for translating token names to
> their
> >integer type value.
> >
> >Basically what I want is to be able to call the
> >getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
> >instead of (tree, 23). Otherwise I would always have to change my code
> >after altering the grammar a bit...
> >
> >I found the getTokenType(string) function in java, but not in C. Is it
> >missing in C? And what can I do to get it anyways?
> >
> >Any help would be greatly appreciated!
> >Thanks
> >Bastian
> >
> >
> >
> >IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only
> >for
>
> >the use of the individual or entity shown above as addressees. It may
> >contain information which is privileged, confidential or otherwise
> >protected from disclosure under applicable laws.  If the reader of
> this
> >transmission is not the intended recipient, you are hereby notified
> >that any dissemination, printing, distribution, copying, disclosure or
> >the taking of any action in reliance on the contents of this
> >information is strictly prohibited.  If you have received this
> >transmission in error, please immediately notify us by reply e-mail or
> >using the address below and delete the message and any attachments
> from your system.
> >
> >Amadeus Data Processing GmbH
> >Gesch?ftsf?hrer: Eberhard Haag
> >Sitz der Gesellschaft: Erding
> >HR M?nchen 48 199
> >Berghamer Strasse 6
> >85435 Erding
> >Germany
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> ___________________________________________________________
> Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir belohnen
> Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de
>
>
>
>
>
> IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only
> for the use of the individual or entity shown above as addressees. It
> may contain information which is privileged, confidential or otherwise
> protected from disclosure under applicable laws.  If the reader of this
> transmission is not the intended recipient, you are hereby notified
> that any dissemination, printing, distribution, copying, disclosure or
> the taking of any action in reliance on the contents of this
> information is strictly prohibited.  If you have received this
> transmission in error, please immediately notify us by reply e-mail or
> using the address below and delete the message and any attachments from
> your system.
>
> Amadeus Data Processing GmbH
> Gesch?ftsf?hrer: Eberhard Haag
> Sitz der Gesellschaft: Erding
> HR M?nchen 48 199
> Berghamer Strasse 6
> 85435 Erding
> Germany
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Jan 28 09:15:40 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 28 Jan 2011 09:15:40 -0800
Subject: [antlr-interest] Parsing OpenEdge (4GL database language)
 without preprocessor phase
In-Reply-To: <AANLkTi=ArrZ3NqozdgtFUhuujA6FqTqJEvE13kPY+U4Z@mail.gmail.com>
References: <AANLkTi=ArrZ3NqozdgtFUhuujA6FqTqJEvE13kPY+U4Z@mail.gmail.com>
Message-ID: <0e2b75a8a0fe8c815d16596c43c867f7@mail.gmail.com>

Follow the example of the C pre-processor and stamp the pre-processor
output with file and line,offset:

assign customer.name = { ## "myinc.i" 1 0 ## 7 * 14 ## "origin.oe" 23 0 ##
}

Then collect this info in the lexer. If you override nextToken and derive
a new token type from CommonToken, it can track that. You could also do
this without overrides with more state programming in the lexer.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Pieter van Ginkel
> Sent: Friday, January 28, 2011 4:56 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Parsing OpenEdge (4GL database language)
> without preprocessor phase
>
> I need to write a parser for OpenEdge (a 4GL database language), but I
> need to preserve facts of the source files that would otherwise be lost
> through the preprocessor.
>
> E.g., the following contrived example:
>
> assign customer.name = {myinc.i}.
>
> And an include myinc.i with the contents:
>
> 7 * 14
>
> I need to have an AST that contains the fact that customer.name was
> assigned with {myinc.i} and not 7 * 14. The includes are normally
> processed using a preprocessor, so theoretically it's possible that the
> includes are accessed anywhere within a file (not in a neat location
> like after the assign in the above example). However, the code base is
> quite clean and this shouldn't pose much of a problem.
>
> The reason I need this is that I am writing an application for source
> analysis for which I need to know every detail of the source file.
>
> Can this be done with ANTLR? Any tips?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Jan 28 09:18:29 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 28 Jan 2011 09:18:29 -0800
Subject: [antlr-interest] Greedy matching to end of line
In-Reply-To: <5387508A-E0A0-4E3D-AE37-BD04B62EF656@sixdemonbag.org>
References: <4D42759E.5010404@sixdemonbag.org>	<AANLkTinkt3TnnHvrWRZOFN0_gD3aMOy8XpZofE4ZyNOF@mail.gmail.com>
	<4678358F-8BD9-4635-82C0-236DE33FA9CF@sixdemonbag.org>	<AANLkTikJDRb-pgmYC-QPCGoDkuAb_-5e=XxAcs8duAM6@mail.gmail.com>
	<46AF758C-AAED-419B-9C20-B34814CD9BEB@sixdemonbag.org>	<AANLkTinB_wWpKg5YyArkLGZ9fGrMQHVT1BnUas2aiTO8@mail.gmail.com>
	<5387508A-E0A0-4E3D-AE37-BD04B62EF656@sixdemonbag.org>
Message-ID: <b7e8dcc384bebf59cbd498d835a67780@mail.gmail.com>

Just use code in an action.


xxx: TOKEN
	{ while (input.LA(1) != NL) { /* process input.LT(1).toString() */
}
    NL
;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Robert J. Hansen
> Sent: Friday, January 28, 2011 6:33 AM
> To: Pop Qvarnstr?m
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Greedy matching to end of line
>
> > Just a thought: depending on what you do with the things after a
> 'Comment:', you could just match .+ :
>
> Well, I need to pull data out of what comes after the 'Comment:'.  If I
> can find some way to match .+ out to the first newline, and then
> extract the contents into $value, I'd be a happy camper.
>
> (The grammar I posted has no return values.  The actual grammar I use
> does, since I hook up actions to various rules.)
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kchichakly at iseesystems.com  Fri Jan 28 10:58:35 2011
From: kchichakly at iseesystems.com (Karim Chichakly)
Date: Fri, 28 Jan 2011 13:58:35 -0500
Subject: [antlr-interest] getParent() function on ANTLR3_BASE_TREE_struct
Message-ID: <AANLkTikTzgx6tDMJb3KxpSTG8u8Ub9zVAOecDuxos0Tt@mail.gmail.com>

I have the same question.  I actually have ANTLR3_COMMON_TREE_struct nodes
(even though their type is ANTLR3_BASE_TREE_struct).  Don't they track the
parent?  If not, how do I walk up the tree when I need context information
above me?

Thank you,

Karim

----------------------------------------------------
Subject:[antlr-interest] *getParent*() function on
ANTLR3_BASE_TREE_struct<http://markmail.org/message/ifubo7kubcyop6ei>
[image:
permalink] <http://markmail.org/message/ifubo7kubcyop6ei> From:Richard
Connon (con... at irconan.co.uk)Date: Dec 14, 2010 4:14:24 amList:*
org.antlr.antlr-interest*

I've been trying to use the *getParent*() function on
ANTLR3_BASE_TREE_struct but it seems that it's returning invalid values.

It was my understanding that this function would either return the address
of the parent node in the tree (iff the node isn't the root) or *NULL* (iff
the node is).

Is this the case?

From list at toolazydogs.com  Sat Jan 29 09:34:04 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sat, 29 Jan 2011 09:34:04 -0800
Subject: [antlr-interest] Need help with generating a "nested" tree
Message-ID: <9FB897DF-543E-47A1-95B5-CC853767AAA3@toolazydogs.com>

functioncall
    : varOrExp nameAndArgs+ -> ^(FUNCALL varOrExp nameAndArgs+)
    ;

generates

(FUNCALL 
	varOrExp
	nameAndArgs1
	nameAndArgs2
	nameAndArgs3
)

What I need it to do is generate

(FUNCALL 
	(FUNCALL
		(FUNCALL
			varOrExp
			nameAndArgs1)
		nameAndArgs2)
	nameAndArgs3)
)


I would appreciate any pointers on how I would go about generating this nested structure.


Regards,
Alan


From ruslan_zasukhin at valentina-db.com  Sat Jan 29 13:49:34 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sat, 29 Jan 2011 23:49:34 +0200
Subject: [antlr-interest] Feature for ANTLR Works
In-Reply-To: <08A33AC8-1F8E-473D-A819-953181D93D61@arizona-software.ch>
Message-ID: <C96A580E.E4E1F%ruslan_zasukhin@valentina-db.com>

Hi Jean,

Let user have type a rule as

Constant
    :   type expression
    ;

And there is no yet rules type and expression.

Now user need type 

type
    :
    ;


expression
    :
    ;


May be its possible add auto-generation of such missing yet rules on demand?

But question is where to insert them? In big grammar, I do not want scroll
yet to that new place, and if not scroll then how to find them fast ...

So may be better generate them into clipboard on e.g.
  cmd + option + click  on such missing yet rule.

Then I can jump into place I want in grammar and do PASTE  cmd + v




-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From anatol.pomozov at gmail.com  Sat Jan 29 16:05:54 2011
From: anatol.pomozov at gmail.com (Anatol Pomozov)
Date: Sat, 29 Jan 2011 16:05:54 -0800
Subject: [antlr-interest] Fwd: [GitHub] Scala port of ANTLR [antlr/antlr
	GH-3]
In-Reply-To: <4d421b54e6214_6b393fc6c59132fc2e5@fe2.rs.github.com.tmail>
References: <4d421b54e6214_6b393fc6c59132fc2e5@fe2.rs.github.com.tmail>
Message-ID: <AANLkTi=183qHdQKoBN4_DY_OsTp6678rJg1aq4Ne5CGG@mail.gmail.com>

Hi

Here is a pull request for github project mirror https://github.com/antlr

As this repo is read-only and cannot accept any patches I forward the
message to antlr-intrest. Dear developers, please review the changes.


---------- Forwarded message ----------
From: GitHub <noreply at github.com>
Date: Thu, Jan 27, 2011 at 5:26 PM
Subject: [GitHub] Scala port of ANTLR [antlr/antlr GH-3]


matthewlloyd wants someone to pull from matthewlloyd:master:

Terry and friends,

I've ported the ANTLR parser generator from Java to the new JVM-based
language, Scala. I've built and tested the new generator against v3.3
of the tool suite using one of my 250-line grammars and everything
seems to be working correctly.

You can list me as being irresponsible at
http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets if
you like :)

Matthew

View Pull Request: https://github.com/antlr/antlr/pull/3

From jbb at acm.org  Sat Jan 29 20:30:23 2011
From: jbb at acm.org (John B. Brodie)
Date: Sat, 29 Jan 2011 23:30:23 -0500
Subject: [antlr-interest] Need help with generating a "nested" tree
In-Reply-To: <9FB897DF-543E-47A1-95B5-CC853767AAA3@toolazydogs.com>
References: <9FB897DF-543E-47A1-95B5-CC853767AAA3@toolazydogs.com>
Message-ID: <1296361824.25321.5.camel@gecko>

On Sat, 2011-01-29 at 09:34 -0800, Alan D. Cabrera wrote:
> functioncall
>     : varOrExp nameAndArgs+ -> ^(FUNCALL varOrExp nameAndArgs+)
>     ;
> 
> generates
> 
> (FUNCALL 
> 	varOrExp
> 	nameAndArgs1
> 	nameAndArgs2
> 	nameAndArgs3
> )
> 
> What I need it to do is generate
> 
> (FUNCALL 
> 	(FUNCALL
> 		(FUNCALL
> 			varOrExp
> 			nameAndArgs1)
> 		nameAndArgs2)
> 	nameAndArgs3)
> )
> 
> 
> I would appreciate any pointers on how I would go about generating this nested structure.
> 

I have Curried a function application by passing the partial tree to
dependent rules. (Note: I strongly suspect that my solution is really
way more complicated than it needs to be, sorry about that...).

Something like:

functioncall
    : ( varOrExp nameAndArgs -> ^(FUNCALL varOrExp nameAndArgs) )
      ( curried_call[$functioncall.tree] -> curried_call )?
    ;

curried_call [ CommonTree t ] :
      (apply[t] -> apply) ( curried_call[$apply.tree] -> curried_call )?
   ;

apply [ CommonTree t ] : nameAndArgs -> ^(FUNCALL {$t} nameAndArgs) ;

Hope this helps....
   -jbb



From list at toolazydogs.com  Sat Jan 29 23:57:09 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sat, 29 Jan 2011 23:57:09 -0800
Subject: [antlr-interest] Need help with generating a "nested" tree
In-Reply-To: <1296361824.25321.5.camel@gecko>
References: <9FB897DF-543E-47A1-95B5-CC853767AAA3@toolazydogs.com>
	<1296361824.25321.5.camel@gecko>
Message-ID: <C3E07501-61A1-4E06-8117-E78E55B29F7E@toolazydogs.com>


On Jan 29, 2011, at 8:30 PM, John B. Brodie wrote:

> On Sat, 2011-01-29 at 09:34 -0800, Alan D. Cabrera wrote:
>> functioncall
>>    : varOrExp nameAndArgs+ -> ^(FUNCALL varOrExp nameAndArgs+)
>>    ;
>> 
>> generates
>> 
>> (FUNCALL 
>> 	varOrExp
>> 	nameAndArgs1
>> 	nameAndArgs2
>> 	nameAndArgs3
>> )
>> 
>> What I need it to do is generate
>> 
>> (FUNCALL 
>> 	(FUNCALL
>> 		(FUNCALL
>> 			varOrExp
>> 			nameAndArgs1)
>> 		nameAndArgs2)
>> 	nameAndArgs3)
>> )
>> 
>> 
>> I would appreciate any pointers on how I would go about generating this nested structure.
>> 
> 
> I have Curried a function application by passing the partial tree to
> dependent rules. (Note: I strongly suspect that my solution is really
> way more complicated than it needs to be, sorry about that...).
> 
> Something like:
> 
> functioncall
>    : ( varOrExp nameAndArgs -> ^(FUNCALL varOrExp nameAndArgs) )
>      ( curried_call[$functioncall.tree] -> curried_call )?
>    ;
> 
> curried_call [ CommonTree t ] :
>      (apply[t] -> apply) ( curried_call[$apply.tree] -> curried_call )?
>   ;
> 
> apply [ CommonTree t ] : nameAndArgs -> ^(FUNCALL {$t} nameAndArgs) ;
> 
> Hope this helps....

Thanks for looking into this for me.  I fiddled around a bit and and this rule seems to do the trick.

functioncall
    : (varOrExp nameAndArgs -> ^(FUNCALL varOrExp nameAndArgs)) (nameAndArgs -> ^(FUNCALL $functioncall nameAndArgs))*
    ;

Regards,
Alan





From intellij at yandex.ru  Sun Jan 30 09:54:52 2011
From: intellij at yandex.ru (=?koi8-r?B?9MnIz83J0s/XIPfBzMXO1MnO?=)
Date: Sun, 30 Jan 2011 20:54:52 +0300
Subject: [antlr-interest] antlr3: 'header' is renamed to 'not @header'
In-Reply-To: <mailman.0.1296409768.26349.antlr-interest@antlr.org>
References: <mailman.0.1296409768.26349.antlr-interest@antlr.org>
Message-ID: <284861296410092@web141.yandex.ru>

I compile the example http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+AN...

  header {
    import java.util.*;
  }

reports "'header' not expected grammar".

  @header {
    import java.util.*;
  }

reports "'@' not expected 'grammar'".

Has Terrence ever tested his tool submitting it to the public? Why nobody else complains?

Thanks,
Valentin.

From parrt at cs.usfca.edu  Sun Jan 30 10:20:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 30 Jan 2011 10:20:51 -0800
Subject: [antlr-interest] antlr3: 'header' is renamed to 'not @header'
In-Reply-To: <284861296410092@web141.yandex.ru>
References: <mailman.0.1296409768.26349.antlr-interest@antlr.org>
	<284861296410092@web141.yandex.ru>
Message-ID: <FCA4055C-9DC1-48F1-B186-2835276EAD61@cs.usfca.edu>

javadoc comments mess with it; also order matters. 

> nobody else complains

because this user error.  v2 to v3 is not trivial. perhaps someone else at your company can help you?

Ter
On Jan 30, 2011, at 9:54 AM, ????????? ???????? wrote:

> I compile the example http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+AN...
> 
>  header {
>    import java.util.*;
>  }
> 
> reports "'header' not expected grammar".
> 
>  @header {
>    import java.util.*;
>  }
> 
> reports "'@' not expected 'grammar'".
> 
> Has Terrence ever tested his tool submitting it to the public? Why nobody else complains?
> 
> Thanks,
> Valentin.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Sun Jan 30 10:26:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 30 Jan 2011 10:26:03 -0800
Subject: [antlr-interest] antlr3: 'header' is renamed to 'not @header'
In-Reply-To: <284861296410092@web141.yandex.ru>
References: <mailman.0.1296409768.26349.antlr-interest@antlr.org>
	<284861296410092@web141.yandex.ru>
Message-ID: <78d938cb634ea923401086b281ad07ee@mail.gmail.com>

1) This is an old article that may have fallen behind the times;
2) It is a Wiki article;
3) It wasn't written by Terence;
4) It was updated by him in 2008;
5) Try antlr.markmail.org as noted in the support page;
6) If you are going to put a man down, it might be better to spell his
name correctly;
7) The article is correct, but it does not tell you the ORDER of the
various sections which is what your problem is - which anyone worth a
grain of Siberian Mine production would have tried first - clearly, you
are not very good at this are you?
8) Now you know what the problem is with your grammar, you can improve the
wiki page;

The next version of the ANTLR parser will in fact accept the various
configuration sections in any order; however the mailing list will likely
remain a place where sending emails like this is not looked upon kindly,
unlike the apology that I am sure you are about to write.

I don't know what makes you think that you can use a freely provided work
for your own gain, and then complain about it in a rude fashion; I doubt
that I will be the only person to point this out to you.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ????????? ????????
> Sent: Sunday, January 30, 2011 9:55 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] antlr3: 'header' is renamed to 'not @header'
>
> I compile the example
> http://www.antlr.org/wiki/display/ANTLR3/Migrating+from+ANTLR+2+to+AN..
> .
>
>   header {
>     import java.util.*;
>   }
>
> reports "'header' not expected grammar".
>
>   @header {
>     import java.util.*;
>   }
>
> reports "'@' not expected 'grammar'".
>
> Has Terrence ever tested his tool submitting it to the public? Why
> nobody else complains?
>
> Thanks,
> Valentin.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From michael.bedward at gmail.com  Sun Jan 30 21:52:36 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 31 Jan 2011 16:52:36 +1100
Subject: [antlr-interest] Recognition of dynamic ID-definitions
In-Reply-To: <4D3F4CE5.2060700@mrugalla.info>
References: <4D3F4CE5.2060700@mrugalla.info>
Message-ID: <AANLkTimQjGnTKoB4QFxO=nqpHbTgNr1-OSpKA06BbAzZ@mail.gmail.com>

Hello Christian,

I've been waiting to see if anyone else would answer this question
before venturing a response.

I'd first create a pre-processor that runs at parser execution time,
feeding your 'real' parser with source transformed according to a
current list of characters recognized as operators.  Below is some a
toy grammar for such a pre-processor where the start rule takes as an
argument a List<String> of current operators.

Given the input "a+b" and a List of operators that includes "+" it
will produce output var<a> op<+> var<b>.  If the List excludes "+" the
output will be var<a+b>.

It scores low on efficiency and elegance but might get you started.

Michael


grammar Dynamic;

@header {
package dynamic;
import java.util.ArrayList;
}

@lexer::header {
package dynamic;
}

@members {
List<String> operators;

StringBuilder topSB = new StringBuilder();

void addVar(String var) {
    if (var.length() > 0) {
        topSB.append("var<").append(var).append("> ");
    }
}

void addOp(String op) {
    topSB.append("op<").append(op).append("> ");
}

}

// Parser rules
prog[List<String> operators]
@init {
    this.operators = operators == null ? new ArrayList<String>() : operators;
}
@after {
    System.out.println( topSB.toString() );
}
            : statement+
            ;

statement
@init {
    StringBuilder sb = new StringBuilder();
}
@after {
    addVar(sb.toString());
}
            : (element {
                if ($element.isOp) {
                    addVar(sb.toString());
                    addOp($element.src);
                    sb = new StringBuilder();
                } else {
                    sb.append($element.src);
                }
              })+ DELIM
            ;

element returns [String src, boolean isOp]
            : WORD {$src = $WORD.text; $isOp = false; }
            | OP {$src = $OP.text; $isOp = operators.contains($OP.text);}
            ;

// Lexer rules
WORD        : LETTER+
            ;

// All potential operator chars
OP          : ('+' | '-')
            ;

DELIM       : ';'
            ;

fragment
LETTER      : ('a'..'z' | 'A'..'Z')
            ;

WS          :   (' '|'\r'|'\t'|'\n') {$channel=HIDDEN;}
            ;



On 26 January 2011 09:21, Christian Mrugalla <christian at mrugalla.info> wrote:
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Dear all,
>
> is it possible to recognize a language which is (so to say)
> 'parameterized' ?by a finite set of arbitrary named identifiers, using
> ANTLR?
>
> Trivial Example:
>
> expr : ID ( '+' ID)* ;
>
> ID is not defined at parser-generation-time, it is only known that at
> parser-execution-time there exists a finite set S of arbitrary Strings
> which contains the allowed values for ID.
>
> That is in particular: It depends on S, if "a+b" is:
> - - build by '+'-connected 'a'- and 'b'-IDs
> - - an ID named 'a+b'
> - - invalid, because S contains the IDs "a+" and "b"
>
> I did not found any hint concerning such kind of
> language-parameterization in the "The Definitive ANTLR Reference".
>
> Thank you in advance for your help!
>
> Kind Regards,
> Christian Mrugalla
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v1.4.9 (GNU/Linux)
> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
>
> iEYEARECAAYFAk0/TOUACgkQz2D7mOZ/GFxR0ACbB+GVUODsY1Njr8nGF7M6axJR
> h2sAn3Ae3PAxGayB3lMODRQgAIFIvRm/
> =ehYs
> -----END PGP SIGNATURE-----
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From christian at mrugalla.info  Mon Jan 31 03:07:12 2011
From: christian at mrugalla.info (Christian Mrugalla)
Date: Mon, 31 Jan 2011 12:07:12 +0100
Subject: [antlr-interest] Recognition of dynamic ID-definitions
In-Reply-To: <AANLkTimQjGnTKoB4QFxO=nqpHbTgNr1-OSpKA06BbAzZ@mail.gmail.com>
References: <4D3F4CE5.2060700@mrugalla.info>
	<AANLkTimQjGnTKoB4QFxO=nqpHbTgNr1-OSpKA06BbAzZ@mail.gmail.com>
Message-ID: <4D4697E0.3010709@mrugalla.info>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hello Michael,

I had already some preprocessing in mind, as an emergency solution if
ANTLR is not powerful enough to express such dynamics. Thank you for
your suggestion.

I got two answers directly by E-Mail, both with the solution outlined as:

expr : t=ID {check.isValidRuntimeID(t.getText())}? ( '+' ID )* ;

Now I had the time to check if this elegant solution works. The
remaining problem is how to define ID!

I concretely tried:

grammar simple_example;
@header {import RT.RuntimeIDs;}
@lexer::header{import RT.RuntimeIDs;}
expr : t=ID {RuntimeIDs.isElem(t.getText())}? ('+' ID)*;
ID: (.)*;

This yields to an error message "The following alternatives can never be
matched" pointing to the line "ID: (.)*;".

After replacing this line by "ID: (options {greedy=true;} : .)*;" the
parser could be compiled, but this does not work at runtime (assuming
RuntimeIDs.isElem returns true iff its argument is "a" or "b", and the
input-stream to be parsed is "a+b"):

I got an "rule expr failed predicate"-error.

Using some *usual* ID-definition like
ID: 'a'..'b';
works instead.

Any other ideas, except a handwritten preprocessing, to write
ANTLR-grammars with IDs defined at runtime?

Kind regards,
Christian Mrugalla


Michael Bedward wrote:
> Hello Christian,
> 
> I've been waiting to see if anyone else would answer this question
> before venturing a response.
> 
> I'd first create a pre-processor that runs at parser execution time,
> feeding your 'real' parser with source transformed according to a
> current list of characters recognized as operators.  Below is some a
> toy grammar for such a pre-processor where the start rule takes as an
> argument a List<String> of current operators.
> 
> Given the input "a+b" and a List of operators that includes "+" it
> will produce output var<a> op<+> var<b>.  If the List excludes "+" the
> output will be var<a+b>.
> 
> It scores low on efficiency and elegance but might get you started.
> 
> Michael
> 
> 
> grammar Dynamic;
> 
> @header {
> package dynamic;
> import java.util.ArrayList;
> }
> 
> @lexer::header {
> package dynamic;
> }
> 
> @members {
> List<String> operators;
> 
> StringBuilder topSB = new StringBuilder();
> 
> void addVar(String var) {
>     if (var.length() > 0) {
>         topSB.append("var<").append(var).append("> ");
>     }
> }
> 
> void addOp(String op) {
>     topSB.append("op<").append(op).append("> ");
> }
> 
> }
> 
> // Parser rules
> prog[List<String> operators]
> @init {
>     this.operators = operators == null ? new ArrayList<String>() : operators;
> }
> @after {
>     System.out.println( topSB.toString() );
> }
>             : statement+
>             ;
> 
> statement
> @init {
>     StringBuilder sb = new StringBuilder();
> }
> @after {
>     addVar(sb.toString());
> }
>             : (element {
>                 if ($element.isOp) {
>                     addVar(sb.toString());
>                     addOp($element.src);
>                     sb = new StringBuilder();
>                 } else {
>                     sb.append($element.src);
>                 }
>               })+ DELIM
>             ;
> 
> element returns [String src, boolean isOp]
>             : WORD {$src = $WORD.text; $isOp = false; }
>             | OP {$src = $OP.text; $isOp = operators.contains($OP.text);}
>             ;
> 
> // Lexer rules
> WORD        : LETTER+
>             ;
> 
> // All potential operator chars
> OP          : ('+' | '-')
>             ;
> 
> DELIM       : ';'
>             ;
> 
> fragment
> LETTER      : ('a'..'z' | 'A'..'Z')
>             ;
> 
> WS          :   (' '|'\r'|'\t'|'\n') {$channel=HIDDEN;}
>             ;
> 
> 
> 
> On 26 January 2011 09:21, Christian Mrugalla <christian at mrugalla.info> wrote:
> Dear all,
> 
> is it possible to recognize a language which is (so to say)
> 'parameterized'  by a finite set of arbitrary named identifiers, using
> ANTLR?
> 
> Trivial Example:
> 
> expr : ID ( '+' ID)* ;
> 
> ID is not defined at parser-generation-time, it is only known that at
> parser-execution-time there exists a finite set S of arbitrary Strings
> which contains the allowed values for ID.
> 
> That is in particular: It depends on S, if "a+b" is:
> - build by '+'-connected 'a'- and 'b'-IDs
> - an ID named 'a+b'
> - invalid, because S contains the IDs "a+" and "b"
> 
> I did not found any hint concerning such kind of
> language-parameterization in the "The Definitive ANTLR Reference".
> 
> Thank you in advance for your help!
> 
> Kind Regards,
> Christian Mrugalla
> 
>>
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAk1Gl+AACgkQz2D7mOZ/GFzUYQCeJWh23D6IAY4x9m9+0LmUUDyN
xvoAoI9cxOddv6OxHiFOx/OWEpKIyiJ1
=GqKl
-----END PGP SIGNATURE-----

From christian at mrugalla.info  Mon Jan 31 03:53:31 2011
From: christian at mrugalla.info (Christian Mrugalla)
Date: Mon, 31 Jan 2011 12:53:31 +0100
Subject: [antlr-interest] Recognition of dynamic ID-definitions
In-Reply-To: <4D4697E0.3010709@mrugalla.info>
References: <4D3F4CE5.2060700@mrugalla.info>	<AANLkTimQjGnTKoB4QFxO=nqpHbTgNr1-OSpKA06BbAzZ@mail.gmail.com>
	<4D4697E0.3010709@mrugalla.info>
Message-ID: <4D46A2BB.6030000@mrugalla.info>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Correcting a typo in my recent post:

Replace 'ID (.)*;' by:

ID: (.)+;

Kind regards,
Christian Mrugalla

Christian Mrugalla wrote:
> Hello Michael,
> 
> I had already some preprocessing in mind, as an emergency solution if
> ANTLR is not powerful enough to express such dynamics. Thank you for
> your suggestion.
> 
> I got two answers directly by E-Mail, both with the solution outlined as:
> 
> expr : t=ID {check.isValidRuntimeID(t.getText())}? ( '+' ID )* ;
> 
> Now I had the time to check if this elegant solution works. The
> remaining problem is how to define ID!
> 
> I concretely tried:
> 
> grammar simple_example;
> @header {import RT.RuntimeIDs;}
> @lexer::header{import RT.RuntimeIDs;}
> expr : t=ID {RuntimeIDs.isElem(t.getText())}? ('+' ID)*;
> ID: (.)*;
> 
> This yields to an error message "The following alternatives can never be
> matched" pointing to the line "ID: (.)*;".
> 
> After replacing this line by "ID: (options {greedy=true;} : .)*;" the
> parser could be compiled, but this does not work at runtime (assuming
> RuntimeIDs.isElem returns true iff its argument is "a" or "b", and the
> input-stream to be parsed is "a+b"):
> 
> I got an "rule expr failed predicate"-error.
> 
> Using some *usual* ID-definition like
> ID: 'a'..'b';
> works instead.
> 
> Any other ideas, except a handwritten preprocessing, to write
> ANTLR-grammars with IDs defined at runtime?
> 
> Kind regards,
> Christian Mrugalla
> 
> 
> Michael Bedward wrote:
>> Hello Christian,
> 
>> I've been waiting to see if anyone else would answer this question
>> before venturing a response.
> 
>> I'd first create a pre-processor that runs at parser execution time,
>> feeding your 'real' parser with source transformed according to a
>> current list of characters recognized as operators.  Below is some a
>> toy grammar for such a pre-processor where the start rule takes as an
>> argument a List<String> of current operators.
> 
>> Given the input "a+b" and a List of operators that includes "+" it
>> will produce output var<a> op<+> var<b>.  If the List excludes "+" the
>> output will be var<a+b>.
> 
>> It scores low on efficiency and elegance but might get you started.
> 
>> Michael
> 
> 
>> grammar Dynamic;
> 
>> @header {
>> package dynamic;
>> import java.util.ArrayList;
>> }
> 
>> @lexer::header {
>> package dynamic;
>> }
> 
>> @members {
>> List<String> operators;
> 
>> StringBuilder topSB = new StringBuilder();
> 
>> void addVar(String var) {
>>     if (var.length() > 0) {
>>         topSB.append("var<").append(var).append("> ");
>>     }
>> }
> 
>> void addOp(String op) {
>>     topSB.append("op<").append(op).append("> ");
>> }
> 
>> }
> 
>> // Parser rules
>> prog[List<String> operators]
>> @init {
>>     this.operators = operators == null ? new ArrayList<String>() : operators;
>> }
>> @after {
>>     System.out.println( topSB.toString() );
>> }
>>             : statement+
>>             ;
> 
>> statement
>> @init {
>>     StringBuilder sb = new StringBuilder();
>> }
>> @after {
>>     addVar(sb.toString());
>> }
>>             : (element {
>>                 if ($element.isOp) {
>>                     addVar(sb.toString());
>>                     addOp($element.src);
>>                     sb = new StringBuilder();
>>                 } else {
>>                     sb.append($element.src);
>>                 }
>>               })+ DELIM
>>             ;
> 
>> element returns [String src, boolean isOp]
>>             : WORD {$src = $WORD.text; $isOp = false; }
>>             | OP {$src = $OP.text; $isOp = operators.contains($OP.text);}
>>             ;
> 
>> // Lexer rules
>> WORD        : LETTER+
>>             ;
> 
>> // All potential operator chars
>> OP          : ('+' | '-')
>>             ;
> 
>> DELIM       : ';'
>>             ;
> 
>> fragment
>> LETTER      : ('a'..'z' | 'A'..'Z')
>>             ;
> 
>> WS          :   (' '|'\r'|'\t'|'\n') {$channel=HIDDEN;}
>>             ;
> 
> 
> 
>> On 26 January 2011 09:21, Christian Mrugalla <christian at mrugalla.info> wrote:
>> Dear all,
> 
>> is it possible to recognize a language which is (so to say)
>> 'parameterized'  by a finite set of arbitrary named identifiers, using
>> ANTLR?
> 
>> Trivial Example:
> 
>> expr : ID ( '+' ID)* ;
> 
>> ID is not defined at parser-generation-time, it is only known that at
>> parser-execution-time there exists a finite set S of arbitrary Strings
>> which contains the allowed values for ID.
> 
>> That is in particular: It depends on S, if "a+b" is:
>> - build by '+'-connected 'a'- and 'b'-IDs
>> - an ID named 'a+b'
>> - invalid, because S contains the IDs "a+" and "b"
> 
>> I did not found any hint concerning such kind of
>> language-parameterization in the "The Definitive ANTLR Reference".
> 
>> Thank you in advance for your help!
> 
>> Kind Regards,
>> Christian Mrugalla
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAk1GorsACgkQz2D7mOZ/GFzMXgCeOSrg5J8q9cfr+SXyrNPei/pk
iXwAoMRNC0w3WBKRLePSDDRgTBdSAm6e
=W7Ow
-----END PGP SIGNATURE-----

From marco at mtsystems.ch  Mon Jan 31 05:36:57 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Mon, 31 Jan 2011 14:36:57 +0100
Subject: [antlr-interest] Memory management of C target
Message-ID: <4D46BAF9.1080302@mtsystems.ch>

Dear all

Does anyone know how the C target handles memory? I noticed that with 
very big input (e.g. 530.000 lines of C code) it crashes because it hits 
the 2gb process memory limit. Is there something I can tweak to make it 
work or do I have to split the input?

The Java target manages to parse the input if I give the process 1gb. It 
even requires only 20 seconds.
Would be great if the C target could also do that. Even better it the 
required time would be about half of the one of the Java target (as I'm 
used to when the C target can handle the input).

Thanks
Marco

From xentastic at gmail.com  Mon Jan 31 08:32:47 2011
From: xentastic at gmail.com (Alfredo Perez J.)
Date: Mon, 31 Jan 2011 10:32:47 -0600
Subject: [antlr-interest] Quick question about .stg file and output.
Message-ID: <AANLkTik=iRm6LsUVY8T9xDES7eoCoWG5u=+NGGwRy37u@mail.gmail.com>

Hello, first of all, never got to thank Gordon Tyler for the response
I got to my last question, it really helped me, thank you!

Now I have another quick question, been searching around and not sure
if it's possible.

Let's say I have a .stg file that has something like this:

sometmp(arg1) ::= <<
Here is arg1: <arg1>
>>

Now, think I need to put a random character like * every 2 characters
in arg1, so the output would be like: "ar*g1*" instead of just arg1
(assuming arg1 contains "arg1").
Is it possible to "format" or manipulate in any way the text I get
from invocations between < > in the .stg file?  Or do I need to be
sure to give the correct format before giving it to the template.
(Like making sure in the .g file I do something to squeeze those *'s
into the arg1 in sometmp rewrite rule). That's what I'm doing right
now and it works, but just wondering if I could just modifiy something
in the .stg so I wouldn't need to compile again if instead of *'s now
I need % or any other character.

From jimi at temporal-wave.com  Mon Jan 31 09:43:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 31 Jan 2011 09:43:11 -0800
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <4D46BAF9.1080302@mtsystems.ch>
References: <4D46BAF9.1080302@mtsystems.ch>
Message-ID: <91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>

The C target will be a lot faster than the Java target, but the objects
that are created are probably bigger. For v4 I plan to reduce that a lot.
It is probably better to reduce the input though. 530,000 lines of C code
as input seems a bit of a tall order for anything, even if you parse it.
The individual input files would be better.

Also, I think you were using $text references in your parser and these
will create hundreds of thousands of string objects that will not be
released until you release the parser. To use the text of an object it is
better to get the pointer to the input from that object and use the length
(start and end pointer are stored in the object) so that you make no
copies or memory allocations. The $text (in the C target) is a convenience
method that is relatively slow and inefficient; it is just there when you
don't really care that much about those factors. This catches so many
people that I may abandon it in v4, in favor of functions/macros that give
you the information.

You can also try 64bit mode, which will raise the 2GB bar.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Trudel
> Sent: Monday, January 31, 2011 5:37 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Memory management of C target
>
> Dear all
>
> Does anyone know how the C target handles memory? I noticed that with
> very big input (e.g. 530.000 lines of C code) it crashes because it
> hits the 2gb process memory limit. Is there something I can tweak to
> make it work or do I have to split the input?
>
> The Java target manages to parse the input if I give the process 1gb.
> It even requires only 20 seconds.
> Would be great if the C target could also do that. Even better it the
> required time would be about half of the one of the Java target (as I'm
> used to when the C target can handle the input).
>
> Thanks
> Marco
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kchichakly at iseesystems.com  Mon Jan 31 10:52:30 2011
From: kchichakly at iseesystems.com (Karim Chichakly)
Date: Mon, 31 Jan 2011 13:52:30 -0500
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
References: <4D46BAF9.1080302@mtsystems.ch>
	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
Message-ID: <AANLkTine=9RuiUrSVTuesbBCS50D0CvzhHqxaXgrDRNo@mail.gmail.com>

Hi Jim,

It is clear that for tokens in the parser, you can use getStartIndex and
getStopIndex directly to avoid using $text.  How can you do this for an
arbitrary tree node when walking the tree?  It appears in this case that you
also need the token stream (to ask for the token using get()).  Is there any
way to get the token stream from the tree node or is there another way to
get the text associated with the node?

Thanks,

Karim


On Mon, Jan 31, 2011 at 12:43 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> The C target will be a lot faster than the Java target, but the objects
> that are created are probably bigger. For v4 I plan to reduce that a lot.
> It is probably better to reduce the input though. 530,000 lines of C code
> as input seems a bit of a tall order for anything, even if you parse it.
> The individual input files would be better.
>
> Also, I think you were using $text references in your parser and these
> will create hundreds of thousands of string objects that will not be
> released until you release the parser. To use the text of an object it is
> better to get the pointer to the input from that object and use the length
> (start and end pointer are stored in the object) so that you make no
> copies or memory allocations. The $text (in the C target) is a convenience
> method that is relatively slow and inefficient; it is just there when you
> don't really care that much about those factors. This catches so many
> people that I may abandon it in v4, in favor of functions/macros that give
> you the information.
>
> You can also try 64bit mode, which will raise the 2GB bar.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Marco Trudel
> > Sent: Monday, January 31, 2011 5:37 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Memory management of C target
> >
> > Dear all
> >
> > Does anyone know how the C target handles memory? I noticed that with
> > very big input (e.g. 530.000 lines of C code) it crashes because it
> > hits the 2gb process memory limit. Is there something I can tweak to
> > make it work or do I have to split the input?
> >
> > The Java target manages to parse the input if I give the process 1gb.
> > It even requires only 20 seconds.
> > Would be great if the C target could also do that. Even better it the
> > required time would be about half of the one of the Java target (as I'm
> > used to when the C target can handle the input).
> >
> > Thanks
> > Marco
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Mon Jan 31 11:09:37 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 31 Jan 2011 11:09:37 -0800
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <AANLkTine=9RuiUrSVTuesbBCS50D0CvzhHqxaXgrDRNo@mail.gmail.com>
References: <4D46BAF9.1080302@mtsystems.ch>	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
	<AANLkTine=9RuiUrSVTuesbBCS50D0CvzhHqxaXgrDRNo@mail.gmail.com>
Message-ID: <bc9b8e48fc72dc0f0d51014fc12d610d@mail.gmail.com>

The pointer to the token (unless it is an imaginary token produced by the
parser) is in the token field of pANTLR3_COMMON_TREE. So, take the pointer
to the base tree that the reference in the tree gives you and cast the
super field in there to (pANTLR3_COMMON_TREE) and then the token field is
pANTLR3_COMMON_TOKEN. However, the getToken() method of
pANTLR3_COMMON_TREE will do that for you. Look at the methods in
antlr3commontree.c.

Remember that the tree parser only deals with pointers to the lowest basic
structure which is pANTLR3_BASE_TREE and that has a pointer 'super' to the
structure that contains it (normally pANTLR3_COMMON_TREE) which also has a
suprt pointer in case you encapsulate it further (usually too much hassle
to be worth it).

For a node with children then follow the lists recursively.

The code that produces dot files for an arbitrary tree is a good place to
look for hints as this traverses pANTLR3_BASE_TREE and looks for the text
that represents it. You will find that in antlr3basetreeadapator.c

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Karim Chichakly
> Sent: Monday, January 31, 2011 10:53 AM
> To: antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] Memory management of C target
>
> Hi Jim,
>
> It is clear that for tokens in the parser, you can use getStartIndex
> and getStopIndex directly to avoid using $text.  How can you do this
> for an arbitrary tree node when walking the tree?  It appears in this
> case that you also need the token stream (to ask for the token using
> get()).  Is there any way to get the token stream from the tree node or
> is there another way to get the text associated with the node?
>
> Thanks,
>
> Karim
>
>
> On Mon, Jan 31, 2011 at 12:43 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> > The C target will be a lot faster than the Java target, but the
> > objects that are created are probably bigger. For v4 I plan to reduce
> that a lot.
> > It is probably better to reduce the input though. 530,000 lines of C
> > code as input seems a bit of a tall order for anything, even if you
> parse it.
> > The individual input files would be better.
> >
> > Also, I think you were using $text references in your parser and
> these
> > will create hundreds of thousands of string objects that will not be
> > released until you release the parser. To use the text of an object
> it
> > is better to get the pointer to the input from that object and use
> the
> > length (start and end pointer are stored in the object) so that you
> > make no copies or memory allocations. The $text (in the C target) is
> a
> > convenience method that is relatively slow and inefficient; it is
> just
> > there when you don't really care that much about those factors. This
> > catches so many people that I may abandon it in v4, in favor of
> > functions/macros that give you the information.
> >
> > You can also try 64bit mode, which will raise the 2GB bar.
> >
> > Jim
> >
> >
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Marco Trudel
> > > Sent: Monday, January 31, 2011 5:37 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Memory management of C target
> > >
> > > Dear all
> > >
> > > Does anyone know how the C target handles memory? I noticed that
> > > with very big input (e.g. 530.000 lines of C code) it crashes
> > > because it hits the 2gb process memory limit. Is there something I
> > > can tweak to make it work or do I have to split the input?
> > >
> > > The Java target manages to parse the input if I give the process
> 1gb.
> > > It even requires only 20 seconds.
> > > Would be great if the C target could also do that. Even better it
> > > the required time would be about half of the one of the Java target
> > > (as I'm used to when the C target can handle the input).
> > >
> > > Thanks
> > > Marco
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kingces95 at gmail.com  Mon Jan 31 15:49:53 2011
From: kingces95 at gmail.com (chris king)
Date: Mon, 31 Jan 2011 15:49:53 -0800
Subject: [antlr-interest] How do I accept input ending with a newline *or*
	EOF?
Message-ID: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>

Hello! I'm trying to write a grammar that will accept lines of zero or more
IDs and I'd like to allow the last line to end in a new line *or *EOF. I
came up with this grammar:

grammar test;

start
  : input*
  ;

input
  : ID* ('\n' | EOF)
  ;

ID
  : ('a'..'z')*
  ;

WHITESPACE
  : ' '+ {skip();}
  ;

But got this error from ANTLRWorks saying start has un-reachable
alternatives:

[15:38:33] error(201): test2.g:9:5: The following alternatives can never be
matched: 2

If I remove the reference to EOF than everything works but I have to end the
last line in a new line and I don't want to have to do that. Any
suggestions?

Thanks,
Chris

From kirby.bohling at gmail.com  Mon Jan 31 16:03:52 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 31 Jan 2011 18:03:52 -0600
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
Message-ID: <AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>

No idea if it is related to the problem, but you likely really want to
have ID use a '+' not a '*' after ('a'..'z'), otherwise ID to match
nothing and be cause an infinite loop while lexing at points
(generally speaking, any time rules like

bar: (foo)*;

foo: (baz)*;

You are just asking for problems.  Whether foo and baz are lexers or
parser rules.  Every time I do that it is a mistake (or a failure of
imagination).  Generally speaking, low level items you want to force
the consumption of something, and make them optional at a higher level
(at least that has been true in my limited experience).

I believe the EOF is precisely because of the lack of a + vs. a *
there.  As rather then consume the EOF, you can spin consuming nothing
forever.  But I didn't actually crack out ANTLR and check.

Also, unless you really know what you are doing, you might want to
skip using constants in your parser rules.  While many the examples do
so, from what I've read, it can have complex interaction (it generates
a token for it internally that can't be seen).  I'd try making a
NEWLINE token and seeing if that helps make the error message any
clearer.

Kirby


On Mon, Jan 31, 2011 at 5:49 PM, chris king <kingces95 at gmail.com> wrote:
> Hello! I'm trying to write a grammar that will accept lines of zero or more
> IDs and I'd like to allow the last line to end in a new line *or *EOF. I
> came up with this grammar:
>
> grammar test;
>
> start
> ?: input*
> ?;
>
> input
> ?: ID* ('\n' | EOF)
> ?;
>
> ID
> ?: ('a'..'z')*
> ?;
>
> WHITESPACE
> ?: ' '+ {skip();}
> ?;
>
> But got this error from ANTLRWorks saying start has un-reachable
> alternatives:
>
> [15:38:33] error(201): test2.g:9:5: The following alternatives can never be
> matched: 2
>
> If I remove the reference to EOF than everything works but I have to end the
> last line in a new line and I don't want to have to do that. Any
> suggestions?
>
> Thanks,
> Chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Mon Jan 31 16:34:12 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 31 Jan 2011 16:34:12 -0800
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
Message-ID: <5fbef1b8bec373954e63af852b55dceb@mail.gmail.com>

It is much better to add a NL to the end of the input if it is not present
as the ambiguities are complicated and pointless without that, but with
this simple example you can do:

grammar t;


start
  : input* EOF
  ;

input
  : ((ID)=>ID)+
  | NL
  ;

ID
  : ('a'..'z')+
  ;

WHITESPACE
  : ' '+ {skip();}
  ;

NL : '\n' ;


Note that lexer rules should NEVER match an empty input, or they will
instantly match nothing an infinite number of times. The predicate is not
absolutely necessary but will suppress a warning.

You could also use the LL(*) mechanism, but we this will need to read all
the ID* available until NL or EOF before selecting the path:

grammar t;


start
  : input* input2 EOF
  ;

input
  : ID* NL
  ;

input2
  : ID*
  ;

ID
  : ('a'..'z')+
  ;

WHITESPACE
  : ' '+ {skip();}
  ;

NL : '\n' ;


Or, but only if the elements you are looking for remain as simple as this,
then you can trivially do this:

grammar t;


start
  : input EOF
  ;

input
  : ID* (NL ID*)*
  ;

ID
  : ('a'..'z')+
  ;

WHITESPACE
  : ' '+ {skip();}
  ;

NL : '\n' ;


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of chris king
> Sent: Monday, January 31, 2011 3:50 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How do I accept input ending with a newline
> *or* EOF?
>
> Hello! I'm trying to write a grammar that will accept lines of zero or
> more IDs and I'd like to allow the last line to end in a new line *or
> *EOF. I came up with this grammar:
>
> grammar test;
>
> start
>   : input*
>   ;
>
> input
>   : ID* ('\n' | EOF)
>   ;
>
> ID
>   : ('a'..'z')*
>   ;
>
> WHITESPACE
>   : ' '+ {skip();}
>   ;
>
> But got this error from ANTLRWorks saying start has un-reachable
> alternatives:
>
> [15:38:33] error(201): test2.g:9:5: The following alternatives can
> never be
> matched: 2
>
> If I remove the reference to EOF than everything works but I have to
> end the last line in a new line and I don't want to have to do that.
> Any suggestions?
>
> Thanks,
> Chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kirby.bohling at gmail.com  Mon Jan 31 16:54:00 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 31 Jan 2011 18:54:00 -0600
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <5fbef1b8bec373954e63af852b55dceb@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<5fbef1b8bec373954e63af852b55dceb@mail.gmail.com>
Message-ID: <AANLkTik6ozRPBUAKhHw5AVQUekWpkX3tDOE76nVZSp=n@mail.gmail.com>

On Mon, Jan 31, 2011 at 6:34 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> It is much better to add a NL to the end of the input if it is not present
> as the ambiguities are complicated and pointless without that, but with
> this simple example you can do:
<snip..>

Jim,

   I've seen you make this suggestion several times.  Is there a
canonical or simple way to do that inside the Lexer?  Or is the
easiest way to do that to monkey with the stream to ensure it kicks
out a potentially missing character if it isn't the last character
before the EOF?

I've had this problem, and I just had my NL be ('\n'|EOF) and moved
along, for the grammars I had it was 'good enough'.  It would seem
much easier, and cleaner to fix up it up as you suggest, just not sure
the cleanest way to go about it.

Kirby

