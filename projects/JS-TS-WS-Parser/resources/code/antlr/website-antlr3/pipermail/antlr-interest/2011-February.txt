From bastian.asam at amadeus.com  Tue Feb  1 00:56:24 2011
From: bastian.asam at amadeus.com (Bastian Asam)
Date: Tue, 1 Feb 2011 09:56:24 +0100
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
In-Reply-To: <c87ef1a6ad8b34c2d3d1bb2b55746b0b@mail.gmail.com>
References: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>	<40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>
	<OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
	<c87ef1a6ad8b34c2d3d1bb2b55746b0b@mail.gmail.com>
Message-ID: <OF2894CA1E.04518812-ON0025782A.00303BA3-C125782A.00310E72@amadeus.com>

Thank you Jim and Justin,
the only usefull token constants in my header files are the ones from the 
lexer, not the parser. It looks like this:

/** Symbolic definitions of all the tokens that the parser will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to 
filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from 
C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef  EOF
#undef  EOF
#endif
#ifdef  Tokens
#undef  Tokens
#endif 
#define EOF      -1
#define T__23      23
#define T__24      24
#define T__25      25
#define T__26      26
#define T__27      27
#define T__28      28
#define T__29      29
#define T__30      30
#define T__31      31
#define T__32      32
#define T__33      33
#define T__34      34
#define T__35      35
#define T__36      36
#define T__37      37
#define T__38      38
#define T__39      39
#define T__40      40
#define T__41      41
#define T__42      42
#define T__43      43
#define T__44      44
#define T__45      45
#define T__46      46
#define T__47      47
#define T__48      48
#define T__49      49
#define T__50      50
#define T__51      51
#define T__52      52
#define T__53      53
#define T__54      54
#define T__55      55
#define T__56      56
#define T__57      57
#define T__58      58
#define T__59      59
#define T__60      60
#define T__61      61
#define T__62      62
#define T__63      63
#define T__64      64
#define T__65      65
#define T__66      66
#define T__67      67
#define T__68      68
#define T__69      69
#define T__70      70
#define T__71      71
#define T__72      72
#define T__73      73
#define T__74      74
#define T__75      75
#define T__76      76
#define T__77      77
#define T__78      78
#define T__79      79
#define T__80      80
#define T__81      81
#define T__82      82
#define T__83      83
#define T__84      84
#define T__85      85
#define T__86      86
#define T__87      87
#define T__88      88
#define T__89      89
#define T__90      90
#define T__91      91
#define T__92      92
#define T__93      93
#define T__94      94
#define T__95      95
#define T__96      96
#define T__97      97
#define T__98      98
#define T__99      99
#define T__100      100
#define T__101      101
#define T__102      102
#define DEF      4
#define COMMENT      5
#define STRING      6
#define INT      7
#define DATETIME      8
#define DURATION      9
#define METRIC      10
#define BEHAVIORS      11
#define RESULTS      12
#define ID      13
#define RESULT_TYPES      14
#define NUMBER      15
#define CHAR      16
#define WS      17
#define SPECIALS      18
#define DATE      19
#define TIME      20
#define TZD      21
#define DAYS      22
#ifdef  EOF
#undef  EOF
#define EOF     ANTLR3_TOKEN_EOF
#endif

Sadly there are no parser rulenames. Is this correct or should there be 
some for the parser as well?
Anyway, I guess its probably better to use a tree parser...

But it's good to know, that you guys try to help :) I believe you will 
hear from me again ;)
Thanks
Bastian




From:   Jim Idle <jimi at temporal-wave.com>
To:     antlr-interest at antlr.org
Date:   28-01-11 18:09
Subject:        Re: [antlr-interest] missing getTokenType(string) in 
ANTLR3C?
Sent by:        antlr-interest-bounces at antlr.org



The token constants are in the .h file. If you are looking in a tree, you
get the tree node, then get its payload token and get the type from there.
You can include the .h file and write code to create a string map if you
want to use "dddd" but I think that you mean you want DDDD, which is the
#define in the generated .h file.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bastian Asam
> Sent: Friday, January 28, 2011 1:04 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] missing getTokenType(string) in ANTLR3C?
>
> Hi Hiran,
> unfortunately there aren't any generated constants for my tokens or at
> least I can't find any. Since this also looks kind of odd to me I'm
> wondering if something's going wrong on my system.
> Can anyone confirm please, that for the C target no token constants are
> generated or that there is no getTokenType Method?
>
> And parser.test is only a Function: GrammarParser_test_return (*test)
> (struct GrammarParser_Ctx_struct * ctx) . I don't know how this could
> give the type of the token test.
>
> Thanks
> Bastian
>
>
>
> From:   "Hiran Chaudhuri" <Hiran.Chaudhuri at web.de>
> To:     "Bastian Asam" <bastian.asam at amadeus.com>
> Date:   27-01-11 16:29
> Subject:        Re: [antlr-interest] missing getTokenType(string) in
> ANTLR3C?
>
>
>
> Hi, Bastian.
>
> I've never used the C target, but in Java I would not go for
> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
>
> but instead
>
> getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,
> parser.TEST)
>
> Are there no constants generated for your tokens?
>
> Hiran
>
>
> -----Urspr?ngliche Nachricht-----
> Von: "Bastian Asam" <bastian.asam at amadeus.com>
> Gesendet: 27.01.2011 15:20:57
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] missing getTokenType(string) in ANTLR3C?
>
> >Hello everybody,
> >I spend all day to find a function for translating token names to
> their
> >integer type value.
> >
> >Basically what I want is to be able to call the
> >getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
> >instead of (tree, 23). Otherwise I would always have to change my code
> >after altering the grammar a bit...
> >
> >I found the getTokenType(string) function in java, but not in C. Is it
> >missing in C? And what can I do to get it anyways?
> >
> >Any help would be greatly appreciated!
> >Thanks
> >Bastian
> >
> >
> >
> >IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only
> >for
>
> >the use of the individual or entity shown above as addressees. It may
> >contain information which is privileged, confidential or otherwise
> >protected from disclosure under applicable laws.  If the reader of
> this
> >transmission is not the intended recipient, you are hereby notified
> >that any dissemination, printing, distribution, copying, disclosure or
> >the taking of any action in reliance on the contents of this
> >information is strictly prohibited.  If you have received this
> >transmission in error, please immediately notify us by reply e-mail or
> >using the address below and delete the message and any attachments
> from your system.
> >
> >Amadeus Data Processing GmbH
> >Gesch?ftsf?hrer: Eberhard Haag
> >Sitz der Gesellschaft: Erding
> >HR M?nchen 48 199
> >Berghamer Strasse 6
> >85435 Erding
> >Germany
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> ___________________________________________________________
> Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir belohnen
> Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de
>
>
>
>
>
> IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only
> for the use of the individual or entity shown above as addressees. It
> may contain information which is privileged, confidential or otherwise
> protected from disclosure under applicable laws.  If the reader of this
> transmission is not the intended recipient, you are hereby notified
> that any dissemination, printing, distribution, copying, disclosure or
> the taking of any action in reliance on the contents of this
> information is strictly prohibited.  If you have received this
> transmission in error, please immediately notify us by reply e-mail or
> using the address below and delete the message and any attachments from
> your system.
>
> Amadeus Data Processing GmbH
> Gesch?ftsf?hrer: Eberhard Haag
> Sitz der Gesellschaft: Erding
> HR M?nchen 48 199
> Berghamer Strasse 6
> 85435 Erding
> Germany
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address





IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 
the use of the individual or entity shown above as addressees. It may 
contain information which is privileged, confidential or otherwise 
protected from disclosure under applicable laws.  If the reader of this 
transmission is not the intended recipient, you are hereby notified that 
any dissemination, printing, distribution, copying, disclosure or the 
taking of any action in reliance on the contents of this information is 
strictly prohibited.  If you have received this transmission in error, 
please immediately notify us by reply e-mail or using the address below 
and delete the message and any attachments from your system. 

Amadeus Data Processing GmbH 
Gesch?ftsf?hrer: Eberhard Haag 
Sitz der Gesellschaft: Erding 
HR M?nchen 48 199 
Berghamer Strasse 6 
85435 Erding 
Germany

From john_ibbotson at uk.ibm.com  Tue Feb  1 03:32:55 2011
From: john_ibbotson at uk.ibm.com (John Ibbotson)
Date: Tue, 1 Feb 2011 11:32:55 +0000
Subject: [antlr-interest] Newbie question on ANTLR
Message-ID: <OF9ABD4C3A.EEA64BD7-ON8025782A.003DF6B7-8025782A.003EF965@uk.ibm.com>

Hi,
I'm a newcomer to ANTLR and am trying to write a grammar to parse 
controlled natural language. The idea is to parse sentences then convert 
to RDF using Jena. A colleague has already written a version in Prolog so 
I'm looking to do a Java version. My starting point is to write the 
following grammar:

rule: cesentence;

cesentence:             sentence FSTOP;
sentence:               declarative;
declarative:            simpleds name?;
simpleds:               ('there is' existentialnp) |
                        (nounp verbp) |
                        ('it is' ('true' | 'false' | 'unknown') 'that' 
generalproposition);
existentialnp:          ('a' | 'an') description;
description:            noun namedecl? relativeclause?;
namedecl:               ('named' name) |
                        variable |
                        ('known as' name);
nounp:                  existentialnp |
                        referentialnp;
verbp:                  simplevp ('and' simplevp)*;
simplevp:               (('has' | 'does not have') simplenp 'as' 
functionalnoun);
verbcomp:               simplenp;
simplenp:               ('(' simplenp ')') |
                        existentialnp |
                        referentialnp;
referentialnp:          ('the' noun (name | variable)) |
                        variable |
                        ('the type' noun) |
                        ('the' noun 'known as' name);
generalproposition:     simpleds |
                        QUOTE;
relativeclause:         ('that' verbp) |
                        ('described as' QUOTE);

// CE Lexical categories
name:                   STRNG;
noun:                   'person';
functionalnoun: 'brother';
variable:               UCSTR;

// Terminators
FSTOP:          '.';
UCSTR:                  ('A'..'Z' | '0'..'9')+;                 // String 
with upper and digits
STRNG:          (UCSTR | 'a'..'z')+;                    // String with 
upper, lower and digits
SPACE:                  ' ';
QUOTE:          '"' (STRNG | SPACE)* '"'; 

which was pretty straightforward. I then tested it using the interpreter 
(Eclipse IDE plugin) on the following sentence:

there is a person named Fred.

but the parser falls over on the existentialnp rule. Any help appreciated.

Regards,
John

John Ibbotson PhD CEng FIET
Master Inventor
ITA  Project, Emerging Technology Services 
Hursley Park, MP137, Winchester, Hants. SO21 2JN, UK 

Tel:         +44 1962 815188 
Email:     john_ibbotson at uk.ibm.com 

ITA:                   http://www.usukita.org

Technical Solutions to business problems that require innovation across 
IBM knowledge portfolio. 

"A doctor can bury his mistakes but an architect can only advise his 
clients to plant vines." Frank Lloyd Wright





Unless stated otherwise above:
IBM United Kingdom Limited - Registered in England and Wales with number 
741598. 
Registered office: PO Box 41, North Harbour, Portsmouth, Hampshire PO6 3AU






From marco at mtsystems.ch  Tue Feb  1 05:39:23 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Tue, 01 Feb 2011 14:39:23 +0100
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
References: <4D46BAF9.1080302@mtsystems.ch>
	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
Message-ID: <4D480D0B.7010803@mtsystems.ch>

Dear Jim

On 31.01.2011 18:43, Jim Idle wrote:
> The C target will be a lot faster than the Java target, but the objects
> that are created are probably bigger. For v4 I plan to reduce that a lot.
> It is probably better to reduce the input though. 530,000 lines of C code
> as input seems a bit of a tall order for anything, even if you parse it.
> The individual input files would be better.

The splitting function I wrote is way slower (> 1 min) than the time the 
Java target needs to parse the whole file (20s).

> Also, I think you were using $text references in your parser and these
> will create hundreds of thousands of string objects that will not be
> released until you release the parser.

You mean like in:

foo
    : IDENTIFIER { printf("\%s\n", $IDENTIFIER.text->chars); }
    ;

This is done about 90'000 times. Nothing 2gb memory couldn't handle.

> To use the text of an object it is
> better to get the pointer to the input from that object and use the length
> (start and end pointer are stored in the object) so that you make no
> copies or memory allocations.

Like:

foo
    : IDENTIFIER
      { printf("Input length: \%d, start: \%d, end: \%d\n",
           strlen($IDENTIFIER->input->data),
           $IDENTIFIER->start,
           $IDENTIFIER->stop);
      }
    ;

I guess I'm doing something wrong. Though the length is correct, the 
indexes are way out of bounds (example output: Input length: 253, start: 
9338085, end: 9338088).
But this isn't the main memory usage anyway with only about 90'000 calls 
to $IDENTIFIER.text.


So I guess my best alternative is using the Java target. But I'm still 
very open to other suggestions where I might waste memory...


Thanks for your time
Marco


> The $text (in the C target) is a convenience
> method that is relatively slow and inefficient; it is just there when you
> don't really care that much about those factors. This catches so many
> people that I may abandon it in v4, in favor of functions/macros that give
> you the information.
>
> You can also try 64bit mode, which will raise the 2GB bar.
>
> Jim
>
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Marco Trudel
>> Sent: Monday, January 31, 2011 5:37 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Memory management of C target
>>
>> Dear all
>>
>> Does anyone know how the C target handles memory? I noticed that with
>> very big input (e.g. 530.000 lines of C code) it crashes because it
>> hits the 2gb process memory limit. Is there something I can tweak to
>> make it work or do I have to split the input?
>>
>> The Java target manages to parse the input if I give the process 1gb.
>> It even requires only 20 seconds.
>> Would be great if the C target could also do that. Even better it the
>> required time would be about half of the one of the Java target (as I'm
>> used to when the C target can handle the input).
>>
>> Thanks
>> Marco
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From andrius.bentkus at gmail.com  Tue Feb  1 06:59:53 2011
From: andrius.bentkus at gmail.com (Andrius Bentkus)
Date: Tue, 1 Feb 2011 15:59:53 +0100
Subject: [antlr-interest] Little grammar specification problem
Message-ID: <AANLkTimFpjsUpPNJ040jFrr7u-4aQ5JsU0EtGoB06ebN@mail.gmail.com>

Hello,

I'm trying to write a very simple log parser with ANTLR to compare it to my
current one (which is just a bunch of regexes).
The problem that I'm facing is that I don't know how to parse random input.
In my case the input looks something like this: "word1_word2"


What I came by so far is this:
  rVal: CO rString CO;
  rString: rChar | rChar rString;
  rChar: ( 'a'..'z' | '/' | '_' | '0'..'9' | '.' );
  CO: '"';

rVal should match the rule (imo), but I just get the error line 1:1 no
viable alternative at input 'de_dust'.
Maybe you guys got some better ideas, or could explain me why it doesn't.

From jimi at temporal-wave.com  Tue Feb  1 08:51:31 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 1 Feb 2011 08:51:31 -0800
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTik6ozRPBUAKhHw5AVQUekWpkX3tDOE76nVZSp=n@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<5fbef1b8bec373954e63af852b55dceb@mail.gmail.com>
	<AANLkTik6ozRPBUAKhHw5AVQUekWpkX3tDOE76nVZSp=n@mail.gmail.com>
Message-ID: <5a2f01c11fb116cb7e9a60f4799d5b26@mail.gmail.com>

Just append a newline to the input string whether it has one or not -
there is no need to play with the input stream logic. A realloc of the
input string for one extra character will usually be accommodated by the
existing string allocation (which is almost always aligned/padded).

Jim

> -----Original Message-----
> From: Kirby Bohling [mailto:kirby.bohling at gmail.com]
> Sent: Monday, January 31, 2011 4:54 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How do I accept input ending with a
> newline *or* EOF?
>
> On Mon, Jan 31, 2011 at 6:34 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> > It is much better to add a NL to the end of the input if it is not
> > present as the ambiguities are complicated and pointless without
> that,
> > but with this simple example you can do:
> <snip..>
>
> Jim,
>
>    I've seen you make this suggestion several times.  Is there a
> canonical or simple way to do that inside the Lexer?  Or is the easiest
> way to do that to monkey with the stream to ensure it kicks out a
> potentially missing character if it isn't the last character before the
> EOF?
>
> I've had this problem, and I just had my NL be ('\n'|EOF) and moved
> along, for the grammars I had it was 'good enough'.  It would seem much
> easier, and cleaner to fix up it up as you suggest, just not sure the
> cleanest way to go about it.
>
> Kirby

From jimi at temporal-wave.com  Tue Feb  1 09:05:57 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 1 Feb 2011 09:05:57 -0800
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
In-Reply-To: <OF2894CA1E.04518812-ON0025782A.00303BA3-C125782A.00310E72@amadeus.com>
References: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>
	<40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>	<OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
	<c87ef1a6ad8b34c2d3d1bb2b55746b0b@mail.gmail.com>
	<OF2894CA1E.04518812-ON0025782A.00303BA3-C125782A.00310E72@amadeus.com>
Message-ID: <e97deb9b3423da9ed735e6ec3bc01455@mail.gmail.com>

It looks like you have used 'strings' in your parser and not "real" tokens
in the lexer. That is the reason I always advise to use:

p: A ;
A : 'a' ;

And not

p: 'a' ;

There is no way for you to create a cross correlation. In the former you
will get:

#define A 5

And the latter:

#define T__5 5

With the former, you can build a static table yourself:

{
   A, "An", "a token";
...

But with the latter you can do nothing because you do not know what token
number is defined. In error messages, you will have the token number and
can look in your table for the string that represents it and so on.


The C target does not tell you about the parser rules you are in, as this
is only kept by the Java runtime, so you have to create a stack yourself
and push the rule in actions. However the parser rule is rarely that
useful expect in some error reporting situations.

As you say - use a tree and real tokens and it will all make sense to you.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bastian Asam
> Sent: Tuesday, February 01, 2011 12:56 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] missing getTokenType(string) in ANTLR3C?
>
> Thank you Jim and Justin,
> the only usefull token constants in my header files are the ones from
> the lexer, not the parser. It looks like this:
>
> /** Symbolic definitions of all the tokens that the parser will work
> with.
>  * \{
>  *
>  * Antlr will define EOF, but we can't use that as it it is too common
> in
>  * in C header files and that would be confusing. There is no way to
> filter this out at the moment
>  * so we just undef it here for now. That isn't the value we get back
> from C recognizers
>  * anyway. We are looking for ANTLR3_TOKEN_EOF.
>  */
> #ifdef  EOF
> #undef  EOF
> #endif
> #ifdef  Tokens
> #undef  Tokens
> #endif
> #define EOF      -1
> #define T__23      23
> #define T__24      24
> #define T__25      25
> #define T__26      26
> #define T__27      27
> #define T__28      28
> #define T__29      29
> #define T__30      30
> #define T__31      31
> #define T__32      32
> #define T__33      33
> #define T__34      34
> #define T__35      35
> #define T__36      36
> #define T__37      37
> #define T__38      38
> #define T__39      39
> #define T__40      40
> #define T__41      41
> #define T__42      42
> #define T__43      43
> #define T__44      44
> #define T__45      45
> #define T__46      46
> #define T__47      47
> #define T__48      48
> #define T__49      49
> #define T__50      50
> #define T__51      51
> #define T__52      52
> #define T__53      53
> #define T__54      54
> #define T__55      55
> #define T__56      56
> #define T__57      57
> #define T__58      58
> #define T__59      59
> #define T__60      60
> #define T__61      61
> #define T__62      62
> #define T__63      63
> #define T__64      64
> #define T__65      65
> #define T__66      66
> #define T__67      67
> #define T__68      68
> #define T__69      69
> #define T__70      70
> #define T__71      71
> #define T__72      72
> #define T__73      73
> #define T__74      74
> #define T__75      75
> #define T__76      76
> #define T__77      77
> #define T__78      78
> #define T__79      79
> #define T__80      80
> #define T__81      81
> #define T__82      82
> #define T__83      83
> #define T__84      84
> #define T__85      85
> #define T__86      86
> #define T__87      87
> #define T__88      88
> #define T__89      89
> #define T__90      90
> #define T__91      91
> #define T__92      92
> #define T__93      93
> #define T__94      94
> #define T__95      95
> #define T__96      96
> #define T__97      97
> #define T__98      98
> #define T__99      99
> #define T__100      100
> #define T__101      101
> #define T__102      102
> #define DEF      4
> #define COMMENT      5
> #define STRING      6
> #define INT      7
> #define DATETIME      8
> #define DURATION      9
> #define METRIC      10
> #define BEHAVIORS      11
> #define RESULTS      12
> #define ID      13
> #define RESULT_TYPES      14
> #define NUMBER      15
> #define CHAR      16
> #define WS      17
> #define SPECIALS      18
> #define DATE      19
> #define TIME      20
> #define TZD      21
> #define DAYS      22
> #ifdef  EOF
> #undef  EOF
> #define EOF     ANTLR3_TOKEN_EOF
> #endif
>
> Sadly there are no parser rulenames. Is this correct or should there be
> some for the parser as well?
> Anyway, I guess its probably better to use a tree parser...
>
> But it's good to know, that you guys try to help :) I believe you will
> hear from me again ;) Thanks Bastian
>
>
>
>
> From:   Jim Idle <jimi at temporal-wave.com>
> To:     antlr-interest at antlr.org
> Date:   28-01-11 18:09
> Subject:        Re: [antlr-interest] missing getTokenType(string) in
> ANTLR3C?
> Sent by:        antlr-interest-bounces at antlr.org
>
>
>
> The token constants are in the .h file. If you are looking in a tree,
> you
> get the tree node, then get its payload token and get the type from
> there.
> You can include the .h file and write code to create a string map if
> you
> want to use "dddd" but I think that you mean you want DDDD, which is
> the
> #define in the generated .h file.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bastian Asam
> > Sent: Friday, January 28, 2011 1:04 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] missing getTokenType(string) in
> ANTLR3C?
> >
> > Hi Hiran,
> > unfortunately there aren't any generated constants for my tokens or
> at
> > least I can't find any. Since this also looks kind of odd to me I'm
> > wondering if something's going wrong on my system.
> > Can anyone confirm please, that for the C target no token constants
> are
> > generated or that there is no getTokenType Method?
> >
> > And parser.test is only a Function: GrammarParser_test_return (*test)
> > (struct GrammarParser_Ctx_struct * ctx) . I don't know how this could
> > give the type of the token test.
> >
> > Thanks
> > Bastian
> >
> >
> >
> > From:   "Hiran Chaudhuri" <Hiran.Chaudhuri at web.de>
> > To:     "Bastian Asam" <bastian.asam at amadeus.com>
> > Date:   27-01-11 16:29
> > Subject:        Re: [antlr-interest] missing getTokenType(string) in
> > ANTLR3C?
> >
> >
> >
> > Hi, Bastian.
> >
> > I've never used the C target, but in Java I would not go for
> > getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
> >
> > but instead
> >
> > getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,
> > parser.TEST)
> >
> > Are there no constants generated for your tokens?
> >
> > Hiran
> >
> >
> > -----Urspr?ngliche Nachricht-----
> > Von: "Bastian Asam" <bastian.asam at amadeus.com>
> > Gesendet: 27.01.2011 15:20:57
> > An: antlr-interest at antlr.org
> > Betreff: [antlr-interest] missing getTokenType(string) in ANTLR3C?
> >
> > >Hello everybody,
> > >I spend all day to find a function for translating token names to
> > their
> > >integer type value.
> > >
> > >Basically what I want is to be able to call the
> > >getFirstChildWithType(BASE_TREE, UINT32) Function with (tree,"test")
> > >instead of (tree, 23). Otherwise I would always have to change my
> code
> > >after altering the grammar a bit...
> > >
> > >I found the getTokenType(string) function in java, but not in C. Is
> it
> > >missing in C? And what can I do to get it anyways?
> > >
> > >Any help would be greatly appreciated!
> > >Thanks
> > >Bastian
> > >
> > >
> > >
> > >IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended
> only
> > >for
> >
> > >the use of the individual or entity shown above as addressees. It
> may
> > >contain information which is privileged, confidential or otherwise
> > >protected from disclosure under applicable laws.  If the reader of
> > this
> > >transmission is not the intended recipient, you are hereby notified
> > >that any dissemination, printing, distribution, copying, disclosure
> or
> > >the taking of any action in reliance on the contents of this
> > >information is strictly prohibited.  If you have received this
> > >transmission in error, please immediately notify us by reply e-mail
> or
> > >using the address below and delete the message and any attachments
> > from your system.
> > >
> > >Amadeus Data Processing GmbH
> > >Gesch?ftsf?hrer: Eberhard Haag
> > >Sitz der Gesellschaft: Erding
> > >HR M?nchen 48 199
> > >Berghamer Strasse 6
> > >85435 Erding
> > >Germany
> > >
> > >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > ___________________________________________________________
> > Empfehlen Sie WEB.DE DSL Ihren Freunden und Bekannten und wir
> belohnen
> > Sie mit bis zu 50,- Euro! https://freundschaftswerbung.web.de
> >
> >
> >
> >
> >
> > IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only
> > for the use of the individual or entity shown above as addressees. It
> > may contain information which is privileged, confidential or
> otherwise
> > protected from disclosure under applicable laws.  If the reader of
> this
> > transmission is not the intended recipient, you are hereby notified
> > that any dissemination, printing, distribution, copying, disclosure
> or
> > the taking of any action in reliance on the contents of this
> > information is strictly prohibited.  If you have received this
> > transmission in error, please immediately notify us by reply e-mail
> or
> > using the address below and delete the message and any attachments
> from
> > your system.
> >
> > Amadeus Data Processing GmbH
> > Gesch?ftsf?hrer: Eberhard Haag
> > Sitz der Gesellschaft: Erding
> > HR M?nchen 48 199
> > Berghamer Strasse 6
> > 85435 Erding
> > Germany
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only
> for
> the use of the individual or entity shown above as addressees. It may
> contain information which is privileged, confidential or otherwise
> protected from disclosure under applicable laws.  If the reader of this
> transmission is not the intended recipient, you are hereby notified
> that
> any dissemination, printing, distribution, copying, disclosure or the
> taking of any action in reliance on the contents of this information is
> strictly prohibited.  If you have received this transmission in error,
> please immediately notify us by reply e-mail or using the address below
> and delete the message and any attachments from your system.
>
> Amadeus Data Processing GmbH
> Gesch?ftsf?hrer: Eberhard Haag
> Sitz der Gesellschaft: Erding
> HR M?nchen 48 199
> Berghamer Strasse 6
> 85435 Erding
> Germany
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue Feb  1 09:15:19 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 1 Feb 2011 09:15:19 -0800
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <4D480D0B.7010803@mtsystems.ch>
References: <4D46BAF9.1080302@mtsystems.ch>	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
	<4D480D0B.7010803@mtsystems.ch>
Message-ID: <18eafa052b3df78cbb14c31cee1e7ccf@mail.gmail.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Trudel
> Sent: Tuesday, February 01, 2011 5:39 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Memory management of C target
>
> Dear Jim
>
> On 31.01.2011 18:43, Jim Idle wrote:
> > The C target will be a lot faster than the Java target, but the
> > objects that are created are probably bigger. For v4 I plan to reduce
> that a lot.
> > It is probably better to reduce the input though. 530,000 lines of C
> > code as input seems a bit of a tall order for anything, even if you
> parse it.
> > The individual input files would be better.
>
> The splitting function I wrote is way slower (> 1 min) than the time
> the Java target needs to parse the whole file (20s).


You need a better splitting function! Do it in place not by memcpy and so
on. You can also write a simple override for the character stream.

>
> > Also, I think you were using $text references in your parser and
> these
> > will create hundreds of thousands of string objects that will not be
> > released until you release the parser.
>
> You mean like in:
>
> foo
>     : IDENTIFIER { printf("\%s\n", $IDENTIFIER.text->chars); }
>     ;
>
> This is done about 90'000 times. Nothing 2gb memory couldn't handle.

It is a ton of tiny allocations and it will accumulate. However, I think
that in 3.3 I have fixed a bug that was not releasing memory references
when building a tree until the tree was freed. Try making a version that
does not build a tree and see how it differs.

>
> > To use the text of an object it is
> > better to get the pointer to the input from that object and use the
> > length (start and end pointer are stored in the object) so that you
> > make no copies or memory allocations.
>
> Like:
>
> foo
>     : IDENTIFIER
>       { printf("Input length: \%d, start: \%d, end: \%d\n",
>            strlen($IDENTIFIER->input->data),
>            $IDENTIFIER->start,
>            $IDENTIFIER->stop);
>       }
>     ;
>
> I guess I'm doing something wrong. Though the length is correct, the
> indexes are way out of bounds (example output: Input length: 253,
> start:
> 9338085, end: 9338088).

As per the prior email these are POINTERs to the start and end addresses
in the input text. You cannot use strlen as this will not stop until the
end of the input string, The start pointer points directly to the input
text and so does the end point. The length is the difference in the two.

> But this isn't the main memory usage anyway with only about 90'000
> calls to $IDENTIFIER.text.
>
>
> So I guess my best alternative is using the Java target. But I'm still
> very open to other suggestions where I might waste memory...

Your splitting routine does not seem to be a good algorithm, but why do
you end up with 640,000 lines of C code in the first place? Perhaps you
should start there. However, if you are able to deal with the Java
version, you will certainly find it easier I suspect.

Jim

>
>
> Thanks for your time
> Marco
>
>
> > The $text (in the C target) is a convenience
> > method that is relatively slow and inefficient; it is just there when
> you
> > don't really care that much about those factors. This catches so many
> > people that I may abandon it in v4, in favor of functions/macros that
> give
> > you the information.
> >
> > You can also try 64bit mode, which will raise the 2GB bar.
> >
> > Jim
> >
> >
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Marco Trudel
> >> Sent: Monday, January 31, 2011 5:37 AM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Memory management of C target
> >>
> >> Dear all
> >>
> >> Does anyone know how the C target handles memory? I noticed that
> with
> >> very big input (e.g. 530.000 lines of C code) it crashes because it
> >> hits the 2gb process memory limit. Is there something I can tweak to
> >> make it work or do I have to split the input?
> >>
> >> The Java target manages to parse the input if I give the process
> 1gb.
> >> It even requires only 20 seconds.
> >> Would be great if the C target could also do that. Even better it
> the
> >> required time would be about half of the one of the Java target (as
> I'm
> >> used to when the C target can handle the input).
> >>
> >> Thanks
> >> Marco
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue Feb  1 09:18:29 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 1 Feb 2011 09:18:29 -0800
Subject: [antlr-interest] Little grammar specification problem
In-Reply-To: <AANLkTimFpjsUpPNJ040jFrr7u-4aQ5JsU0EtGoB06ebN@mail.gmail.com>
References: <AANLkTimFpjsUpPNJ040jFrr7u-4aQ5JsU0EtGoB06ebN@mail.gmail.com>
Message-ID: <da2127fe63ef4eaffee470ec53a5b509@mail.gmail.com>

You are confusing lexer rules with parser rules. Stand back and read
through the getting started articles on the Wiki and you will see what the
problem is.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andrius Bentkus
> Sent: Tuesday, February 01, 2011 7:00 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Little grammar specification problem
>
> Hello,
>
> I'm trying to write a very simple log parser with ANTLR to compare it
> to my current one (which is just a bunch of regexes).
> The problem that I'm facing is that I don't know how to parse random
> input.
> In my case the input looks something like this: "word1_word2"
>
>
> What I came by so far is this:
>   rVal: CO rString CO;
>   rString: rChar | rChar rString;
>   rChar: ( 'a'..'z' | '/' | '_' | '0'..'9' | '.' );
>   CO: '"';
>
> rVal should match the rule (imo), but I just get the error line 1:1 no
> viable alternative at input 'de_dust'.
> Maybe you guys got some better ideas, or could explain me why it
> doesn't.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From nvlassopoulos at gmail.com  Tue Feb  1 09:19:12 2011
From: nvlassopoulos at gmail.com (Nick Vlassopoulos)
Date: Tue, 1 Feb 2011 18:19:12 +0100
Subject: [antlr-interest] Little grammar specification problem
In-Reply-To: <AANLkTimFpjsUpPNJ040jFrr7u-4aQ5JsU0EtGoB06ebN@mail.gmail.com>
References: <AANLkTimFpjsUpPNJ040jFrr7u-4aQ5JsU0EtGoB06ebN@mail.gmail.com>
Message-ID: <AANLkTi=hFSP3Y0HP2Tw6LvEN9xScDagxfGEXoaEH4cE-@mail.gmail.com>

Hello Andrius,

Without being entirely sure, I noted the following two:
First, the ' (quote) should appear as follows in the lexer rules: '\''
Second, you are defining the rString, rChar as tokens. Is this what
you meant to do?

I am not sure if the following grammar matches what you want,
but it works for your example:


grammar loggram;

rVal : CO STRING CO;

CHAR_FOO: 'a'..'z';
STRING : CHAR_FOO+ '_' CHAR_FOO+;
CO : '\'';

HTH,

Nikos

On Tue, Feb 1, 2011 at 3:59 PM, Andrius Bentkus
<andrius.bentkus at gmail.com>wrote:

> Hello,
>
> I'm trying to write a very simple log parser with ANTLR to compare it to my
> current one (which is just a bunch of regexes).
> The problem that I'm facing is that I don't know how to parse random input.
> In my case the input looks something like this: "word1_word2"
>
>
> What I came by so far is this:
>  rVal: CO rString CO;
>  rString: rChar | rChar rString;
>  rChar: ( 'a'..'z' | '/' | '_' | '0'..'9' | '.' );
>  CO: '"';
>
> rVal should match the rule (imo), but I just get the error line 1:1 no
> viable alternative at input 'de_dust'.
> Maybe you guys got some better ideas, or could explain me why it doesn't.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gerald at certiv.net  Tue Feb  1 13:50:23 2011
From: gerald at certiv.net (Gerald Rosenberg)
Date: Tue, 01 Feb 2011 13:50:23 -0800
Subject: [antlr-interest] Newbie question on ANTLR
In-Reply-To: <OF9ABD4C3A.EEA64BD7-ON8025782A.003DF6B7-8025782A.003EF965@uk.ibm.com>
References: <OF9ABD4C3A.EEA64BD7-ON8025782A.003DF6B7-8025782A.003EF965@uk.ibm.com>
Message-ID: <4D48801F.7080009@certiv.net>

Welcome.

Take a look at the SQL grammars to get an idea what you are getting 
into.  Look for the Antlr Wiki page on handling when keywords overlap 
other strings.  If your language is going to grow much beyond what you 
show below, a real NLP tool is likely to be required.  Take a look at 
openNLP on sourceforge.

That said, very difficult to quickly pinpoint the problem with your 
current grammar.  Beyond being a matter of good style, you need to move 
all keywords/constant strings in the lexer.  That is the only hope to 
quickly see how the stream will tokenize.  Lexer rules are evaluated top 
down and nominally with a fixed look-ahead of 1.  So, for example, the 
lexer rules

THERE: 'there';
THE: 'the';

will fail on the input 'the' and 'then' -- expecting an 'r' and got 
either nothing or an 'n'.

Also, spaces are typically only token delimiters, for human 
convenience.  Theycontainnootherinformation.  Best to hide them from the 
parser.

BTW, if I had to guess, the problem you are seeing is that the grammar 
is expecting no space between 'a' and 'person'.

Best,
Gerald



------ Original Message (Tuesday, February 01, 2011 11:32:55 
AM) From: John Ibbotson ------
Subject: [antlr-interest] Newbie question on ANTLR
> Hi,
> I'm a newcomer to ANTLR and am trying to write a grammar to parse
> controlled natural language. The idea is to parse sentences then convert
> to RDF using Jena. A colleague has already written a version in Prolog so
> I'm looking to do a Java version. My starting point is to write the
> following grammar:
>
> rule: cesentence;
>
> cesentence:             sentence FSTOP;
> sentence:               declarative;
> declarative:            simpleds name?;
> simpleds:               ('there is' existentialnp) |
>                          (nounp verbp) |
>                          ('it is' ('true' | 'false' | 'unknown') 'that'
> generalproposition);
> existentialnp:          ('a' | 'an') description;
> description:            noun namedecl? relativeclause?;
> namedecl:               ('named' name) |
>                          variable |
>                          ('known as' name);
> nounp:                  existentialnp |
>                          referentialnp;
> verbp:                  simplevp ('and' simplevp)*;
> simplevp:               (('has' | 'does not have') simplenp 'as'
> functionalnoun);
> verbcomp:               simplenp;
> simplenp:               ('(' simplenp ')') |
>                          existentialnp |
>                          referentialnp;
> referentialnp:          ('the' noun (name | variable)) |
>                          variable |
>                          ('the type' noun) |
>                          ('the' noun 'known as' name);
> generalproposition:     simpleds |
>                          QUOTE;
> relativeclause:         ('that' verbp) |
>                          ('described as' QUOTE);
>
> // CE Lexical categories
> name:                   STRNG;
> noun:                   'person';
> functionalnoun: 'brother';
> variable:               UCSTR;
>
> // Terminators
> FSTOP:          '.';
> UCSTR:                  ('A'..'Z' | '0'..'9')+;                 // String
> with upper and digits
> STRNG:          (UCSTR | 'a'..'z')+;                    // String with
> upper, lower and digits
> SPACE:                  ' ';
> QUOTE:          '"' (STRNG | SPACE)* '"';
>
> which was pretty straightforward. I then tested it using the interpreter
> (Eclipse IDE plugin) on the following sentence:
>
> there is a person named Fred.
>
> but the parser falls over on the existentialnp rule. Any help appreciated.
>
> Regards,
> John
>
> John Ibbotson PhD CEng FIET
> Master Inventor
> ITA  Project, Emerging Technology Services
> Hursley Park, MP137, Winchester, Hants. SO21 2JN, UK
>
> Tel:         +44 1962 815188
> Email:     john_ibbotson at uk.ibm.com
>
> ITA:                   http://www.usukita.org
>
> Technical Solutions to business problems that require innovation across
> IBM knowledge portfolio.
>
> "A doctor can bury his mistakes but an architect can only advise his
> clients to plant vines." Frank Lloyd Wright
>
>
>
>
>
> Unless stated otherwise above:
> IBM United Kingdom Limited - Registered in England and Wales with number
> 741598.
> Registered office: PO Box 41, North Harbour, Portsmouth, Hampshire PO6 3AU
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From asicaddress at gmail.com  Tue Feb  1 14:06:03 2011
From: asicaddress at gmail.com (A Z)
Date: Tue, 1 Feb 2011 16:06:03 -0600
Subject: [antlr-interest] missing getTokenType(string) in ANTLR3C?
In-Reply-To: <e97deb9b3423da9ed735e6ec3bc01455@mail.gmail.com>
References: <OF361ECDE9.6D295655-ON00257825.004DE1A3-C1257825.004ED2A0@amadeus.com>
	<40613457.3521372.1296142189051.JavaMail.fmail@mwmweb062>
	<OFDE61C531.3CEE5433-ON00257826.002FC20D-C1257826.0031C9C6@amadeus.com>
	<c87ef1a6ad8b34c2d3d1bb2b55746b0b@mail.gmail.com>
	<OF2894CA1E.04518812-ON0025782A.00303BA3-C125782A.00310E72@amadeus.com>
	<e97deb9b3423da9ed735e6ec3bc01455@mail.gmail.com>
Message-ID: <AANLkTikF0Qk0L8hnAB54TzqTNj=f-wX_b8x=dqTTpb=i@mail.gmail.com>

Hi Bastian,

  You may find these scripts useful. One creates a character array of all
the tokens, so you can index it with the token #define value to get the
string name. The second one post-processes the parser .c file to add a
rudimentary stack trace.  As Jim pointed out, you will need to move all
character strings from the parser rules to lexer rules or tokens in order to
get useful token names.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: insTree.pl
Type: application/x-perl
Size: 3360 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110201/d0c3a201/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: parseTok.pl
Type: application/x-perl
Size: 1350 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110201/d0c3a201/attachment-0001.bin 

From bill.andersen at mac.com  Tue Feb  1 16:03:47 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Tue, 01 Feb 2011 19:03:47 -0500
Subject: [antlr-interest] Access to delegates for imported grammars
Message-ID: <0E535AE1-F601-4092-80E7-AEF1FA3F4A97@mac.com>

Folks

I have a grammar A that imports B.  One thing I'd like to do is to provide a mechanism for non-default error reporting in A and B and I do this in the way described here

	http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery

Thing is, I have to plug this code 

  private ErrorReporter errorReporter = null;
  
  public void setErrorReporter(ErrorReporter errorReporter) {
    this.errorReporter = errorReporter;
    <delegate>.setErrorReporter(errorReporter);
  }

  // Overrides parser/lexer emitErrorMsg   
  public void emitErrorMessage(String msg) {
    if (errorReporter == null) {
      super.emitErrorMessage(msg);
    } else {
      errorReporter.reportError(msg);
    }
  }

into all the grammars where I want this functionality, including the imported grammars.

What I'd like to do is to define subclasses of Parser and TreeParser that include this behavior already.  I need a way for the method setErrorReporter() in A to also work on B.  Where I have <delegate> above is where I do this.  

The issue is that, if I provide these methods in defined subclasses of Parser and TreeParser, there seems to be no way in that code that  can get to the delegates without knowing their names.  What I'd like for setErrorReporter() is something like this (call my defined Parser subclass MyParser):

  public void setErrorReporter(ErrorReporter errorReporter) {
    this.errorReporter = errorReporter;
    for (MyParser delegate : getDelegates()) {
      delegate.setErrorReporter(errorReporter);
    }
  }

First, is there any way to do what I'm trying to do here?  Second, if there's not, is there a good workaround (I have a feeling that I might have to change ANTLR's processing of imports to generate that getDelegates() method)?

Any help appreciated

  .bill

From michael.bedward at gmail.com  Tue Feb  1 16:42:58 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 2 Feb 2011 11:42:58 +1100
Subject: [antlr-interest] tree pattern matching rewrite bug ?
Message-ID: <AANLkTi=B102vsYYUgwH-W8qsGyoJGLvQz7_Oxsi2hkDn@mail.gmail.com>

Hello all,

I hope it's ok to ask about ANTLR Jira issues on this list.

I've been using pattern matching for some simple tree rewriting tasks.
Most work, but for some of them I keep hitting the error "Can't set
single child to a list". I've spent quite a bit of time in the
debugger without success.

Google found this issue for version 3.2 which appears to be related
and still open (which I assume means not fixed in version 3.3)...

http://www.antlr.org/jira/browse/ANTLR-419

Before I spend more time debugging, I wonder if anyone can tell me if
this is indeed a current bug. If so I can probably work around it by
going back to rewriting using a complete grammar.

cheers
Michael

From michael.bedward at gmail.com  Tue Feb  1 16:45:33 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 2 Feb 2011 11:45:33 +1100
Subject: [antlr-interest] Access to delegates for imported grammars
In-Reply-To: <0E535AE1-F601-4092-80E7-AEF1FA3F4A97@mac.com>
References: <0E535AE1-F601-4092-80E7-AEF1FA3F4A97@mac.com>
Message-ID: <AANLkTimxtf+-rzgHhbD2TD-tB91giQ0NBeGLNocrqRsJ@mail.gmail.com>

Hi Bill,

My first thought would be to cheat, and make the errorReporter field
in your subclass static.

Michael


On 2 February 2011 11:03, Bill Andersen <bill.andersen at mac.com> wrote:
> Folks
>
> I have a grammar A that imports B. ?One thing I'd like to do is to provide a mechanism for non-default error reporting in A and B and I do this in the way described here
>
> ? ? ? ?http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery
>
> Thing is, I have to plug this code
>
> ?private ErrorReporter errorReporter = null;
>
> ?public void setErrorReporter(ErrorReporter errorReporter) {
> ? ?this.errorReporter = errorReporter;
> ? ?<delegate>.setErrorReporter(errorReporter);
> ?}
>
> ?// Overrides parser/lexer emitErrorMsg
> ?public void emitErrorMessage(String msg) {
> ? ?if (errorReporter == null) {
> ? ? ?super.emitErrorMessage(msg);
> ? ?} else {
> ? ? ?errorReporter.reportError(msg);
> ? ?}
> ?}
>
> into all the grammars where I want this functionality, including the imported grammars.
>
> What I'd like to do is to define subclasses of Parser and TreeParser that include this behavior already. ?I need a way for the method setErrorReporter() in A to also work on B. ?Where I have <delegate> above is where I do this.
>
> The issue is that, if I provide these methods in defined subclasses of Parser and TreeParser, there seems to be no way in that code that ?can get to the delegates without knowing their names. ?What I'd like for setErrorReporter() is something like this (call my defined Parser subclass MyParser):
>
> ?public void setErrorReporter(ErrorReporter errorReporter) {
> ? ?this.errorReporter = errorReporter;
> ? ?for (MyParser delegate : getDelegates()) {
> ? ? ?delegate.setErrorReporter(errorReporter);
> ? ?}
> ?}
>
> First, is there any way to do what I'm trying to do here? ?Second, if there's not, is there a good workaround (I have a feeling that I might have to change ANTLR's processing of imports to generate that getDelegates() method)?
>
> Any help appreciated
>
> ?.bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bastian.asam at amadeus.com  Wed Feb  2 06:17:28 2011
From: bastian.asam at amadeus.com (Bastian Asam)
Date: Wed, 2 Feb 2011 15:17:28 +0100
Subject: [antlr-interest] tree grammar and list via +=
Message-ID: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>

Hello again,
since you helped me nicely last time a have an other question:

Is it now possible to use a list in a tree grammar? I found a mail from 
2007 saying it will be implemented soon.

But when I try it, I get a very long error Message.
Here is the grammar:

tree grammar TreeWalker;
options{
        language=C;
        tokenVocab=Grammar;
        output=AST;
        ASTLabelType=pANTLR3_BASE_TREE;
}
...
idrefs : list+=id+ ;
...

When generating the code, I get this:
error(10): internal error: /TreeWalker.g :
java.util.NoSuchElementException: template listLabelAST has no such 
attribute: elem in template context [outputFile treeParser 
genericParser(...) rule ruleBlockSingleAlt alt element 
positiveClosureBlock altSwitchCase alt element ruleRefAndListLabel <invoke 
listLabelAST arg context>]
...

Sounds to me like I cannot use a list with output AST, but when I set 
output to template I get:
error(10): internal error: no such group file ST.stg

output=AST would be neccessary anyway.

Any suggestions? Thanks in advance
Bastian





IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 
the use of the individual or entity shown above as addressees. It may 
contain information which is privileged, confidential or otherwise 
protected from disclosure under applicable laws.  If the reader of this 
transmission is not the intended recipient, you are hereby notified that 
any dissemination, printing, distribution, copying, disclosure or the 
taking of any action in reliance on the contents of this information is 
strictly prohibited.  If you have received this transmission in error, 
please immediately notify us by reply e-mail or using the address below 
and delete the message and any attachments from your system. 

Amadeus Data Processing GmbH 
Gesch?ftsf?hrer: Eberhard Haag 
Sitz der Gesellschaft: Erding 
HR M?nchen 48 199 
Berghamer Strasse 6 
85435 Erding 
Germany

From marco at mtsystems.ch  Wed Feb  2 08:19:42 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Wed, 02 Feb 2011 17:19:42 +0100
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <18eafa052b3df78cbb14c31cee1e7ccf@mail.gmail.com>
References: <4D46BAF9.1080302@mtsystems.ch>	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>	<4D480D0B.7010803@mtsystems.ch>
	<18eafa052b3df78cbb14c31cee1e7ccf@mail.gmail.com>
Message-ID: <4D49841E.7090706@mtsystems.ch>

Dear Jim

On 01.02.2011 18:15, Jim Idle wrote:
> <snip>
>
> I think
> that in 3.3 I have fixed a bug that was not releasing memory references
> when building a tree until the tree was freed. Try making a version that
> does not build a tree and see how it differs.
>
> <snip>

Ok, made a version of my grammar that doesn't build a tree:

libantlr3c-3.2, no tree output: works, uses about 600mb memory
libantlr3c-3.2, tree output: crash, wants more than 2gb

libantlr3c-3.3-SNAPSHOT, no tree output: works, uses about 630mb memory
libantlr3c-3.3-SNAPSHOT, tree output: crash, wants more than 2gb

The only changes to the grammar where removing/adding "output = AST;". 
Is your fix already in the current SNAPSHOT?


Thanks
Marco

From jimi at temporal-wave.com  Wed Feb  2 09:01:27 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 2 Feb 2011 09:01:27 -0800
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <4D49841E.7090706@mtsystems.ch>
References: <4D46BAF9.1080302@mtsystems.ch>	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>
	<4D480D0B.7010803@mtsystems.ch>	<18eafa052b3df78cbb14c31cee1e7ccf@mail.gmail.com>
	<4D49841E.7090706@mtsystems.ch>
Message-ID: <009a426c47eee023cf0674eea19b7a25@mail.gmail.com>

I think that the fix is in there, which means that your input is too big
to build the tree in the way it is being done. Write an input stream
wrapper that splits the input by just returning EOF at the split point
then resets to the next unit.

How are you ending up with 640,000 lines of C input?

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Trudel
> Sent: Wednesday, February 02, 2011 8:20 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Memory management of C target
>
> Dear Jim
>
> On 01.02.2011 18:15, Jim Idle wrote:
> > <snip>
> >
> > I think
> > that in 3.3 I have fixed a bug that was not releasing memory
> > references when building a tree until the tree was freed. Try making
> a
> > version that does not build a tree and see how it differs.
> >
> > <snip>
>
> Ok, made a version of my grammar that doesn't build a tree:
>
> libantlr3c-3.2, no tree output: works, uses about 600mb memory
> libantlr3c-3.2, tree output: crash, wants more than 2gb
>
> libantlr3c-3.3-SNAPSHOT, no tree output: works, uses about 630mb memory
> libantlr3c-3.3-SNAPSHOT, tree output: crash, wants more than 2gb
>
> The only changes to the grammar where removing/adding "output = AST;".
> Is your fix already in the current SNAPSHOT?
>
>
> Thanks
> Marco
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From list at toolazydogs.com  Wed Feb  2 09:07:54 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 2 Feb 2011 09:07:54 -0800
Subject: [antlr-interest] SLL(2) in "The Definitive ANTLR Reference"
Message-ID: <9B0BD131-1BDB-4CF7-87F8-9EE5D9A3C905@toolazydogs.com>

I was reading about the following grammar on page 287 of the PDF document

grammar t;
s : X r A B
  | Y r B
  ;

r : A
  |
  ;

I don't see where the problem is since the alternatives in s begin with two different tokens X and Y.  I think that since these two tokens are different I can easily construct a DFA that would unambiguously parse a stream of tokens.

I sense that this example was supposed to bring out a finer point about how ANTLR generates parsers but I'm afraid that it is being lost on me.


Regards,
Alan


From marco at mtsystems.ch  Wed Feb  2 10:08:20 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Wed, 02 Feb 2011 19:08:20 +0100
Subject: [antlr-interest] Memory management of C target
In-Reply-To: <009a426c47eee023cf0674eea19b7a25@mail.gmail.com>
References: <4D46BAF9.1080302@mtsystems.ch>	<91150c2c6c64e6c47f1e2329f93d84fd@mail.gmail.com>	<4D480D0B.7010803@mtsystems.ch>	<18eafa052b3df78cbb14c31cee1e7ccf@mail.gmail.com>	<4D49841E.7090706@mtsystems.ch>
	<009a426c47eee023cf0674eea19b7a25@mail.gmail.com>
Message-ID: <4D499D94.5030700@mtsystems.ch>

On 02.02.2011 18:01, Jim Idle wrote:
> I think that the fix is in there, which means that your input is too big
> to build the tree in the way it is being done. Write an input stream
> wrapper that splits the input by just returning EOF at the split point
> then resets to the next unit.

Actually I already rewrote my splitter. Now I get almost exactly the 
same performance for parsing the files splitted and as a whole.
Also the overall memory consumption is much better this way since I 
actually build an AST in another framework. I only use antlr to parse 
the input.
I just wanted to compare the performance of different approaches.
I now also tried to use the start and end pointers to the input instead 
of using $text. Doesn't make a difference in memory consumption or 
speed. So I stick with the convenient $text.

> How are you ending up with 640,000 lines of C input?

I'm doing some program analysis and preprocess the C programms with CIL 
[1]. vim and libgsl for instance then are about half a million lines of 
code.


Thanks for your time
Marco

[1] http://hal.cs.berkeley.edu/cil/


> Jim
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Marco Trudel
>> Sent: Wednesday, February 02, 2011 8:20 AM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Memory management of C target
>>
>> Dear Jim
>>
>> On 01.02.2011 18:15, Jim Idle wrote:
>>> <snip>
>>>
>>> I think
>>> that in 3.3 I have fixed a bug that was not releasing memory
>>> references when building a tree until the tree was freed. Try making
>> a
>>> version that does not build a tree and see how it differs.
>>>
>>> <snip>
>>
>> Ok, made a version of my grammar that doesn't build a tree:
>>
>> libantlr3c-3.2, no tree output: works, uses about 600mb memory
>> libantlr3c-3.2, tree output: crash, wants more than 2gb
>>
>> libantlr3c-3.3-SNAPSHOT, no tree output: works, uses about 630mb memory
>> libantlr3c-3.3-SNAPSHOT, tree output: crash, wants more than 2gb
>>
>> The only changes to the grammar where removing/adding "output = AST;".
>> Is your fix already in the current SNAPSHOT?
>>
>>
>> Thanks
>> Marco
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From breroger at cisco.com  Wed Feb  2 10:39:11 2011
From: breroger at cisco.com (breroger)
Date: Wed, 02 Feb 2011 12:39:11 -0600
Subject: [antlr-interest] JOB: Senior Software Engineer with Parsing
	Expertise needed at CISCO
Message-ID: <C96F00EF.25B69%breroger@cisco.com>

Please contact Brent at breroger at cisco.com if you are interested in the job
opening listed below.
 
Regards,
Brent

Senior Software Engineer
 
Location ? San Jose, California
 
Security Technology Business Unit (STBU) within WSRTG, is seeking a Software
Engineer. STBU offers network and content security solutions that enable our
customers to collaborate with confidence. These solutions include our
firewall, intrusion prevention, remote access/VPN, unified client, web and
email security.
 
Responsibilities:
Develop software for the Cisco Adaptive Security Appliance (ASA) and more
specifically for the SSL VPN Remote Access component. Program in C, C++ and
Javascript on a Linux-based platform with a slew of open source and
proprietary libraries and infrastructure. Small team is central owner of
WebVPN functionality; engage in all aspects of the product life-cycle from
specification, design to development and post release maintenance. Great
opportunity to employ a breadth of software engineering skills in a highly
visible product.
 
The successful candidate would have 3+ years of industry experience or more,
would have experience working on large projects, analyzing and debugging
Layer 7 protocols, writing parsers for high level languages and has written
javascript to generate javascript.
 
This candidate will show talent, passion and pride in software architecture,
authorship and quality, excellent collaboration skills, teamwork and cross
functional aptitude.
 
Expertise in most of the following areas is required:
 
* Flash decompilation
* Unix/POSIX/Linux application level programming
* Very strong Javascript development skills, with ability to use debuggers
and profilers
* Ability to diagnose issues with proprietary protocols
* knowledge of parsers, regular expressions
* Strong knowledge of the HTTP protocol and HTML
* NTLM, SSL, character encoding
* Differences between browsers, proxies
* Experience with tools and frameworks like wireshark, Pcap, HTTPwatch,
Spidermonkey, webkit


From parrt at cs.usfca.edu  Wed Feb  2 11:17:07 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 2 Feb 2011 11:17:07 -0800
Subject: [antlr-interest] SLL(2) in "The Definitive ANTLR Reference"
In-Reply-To: <9B0BD131-1BDB-4CF7-87F8-9EE5D9A3C905@toolazydogs.com>
References: <9B0BD131-1BDB-4CF7-87F8-9EE5D9A3C905@toolazydogs.com>
Message-ID: <78499B54-C610-492A-B4AE-C98439A3A8E1@cs.usfca.edu>

try for rule 'r' though ;)
Ter
On Feb 2, 2011, at 9:07 AM, Alan D. Cabrera wrote:

> I was reading about the following grammar on page 287 of the PDF document
> 
> grammar t;
> s : X r A B
>  | Y r B
>  ;
> 
> r : A
>  |
>  ;
> 
> I don't see where the problem is since the alternatives in s begin with two different tokens X and Y.  I think that since these two tokens are different I can easily construct a DFA that would unambiguously parse a stream of tokens.
> 
> I sense that this example was supposed to bring out a finer point about how ANTLR generates parsers but I'm afraid that it is being lost on me.
> 
> 
> Regards,
> Alan

From power_giordo at yahoo.com.ar  Wed Feb  2 11:18:04 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Wed, 02 Feb 2011 16:18:04 -0300
Subject: [antlr-interest] Question of Repetead tokens and early termination
In-Reply-To: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>
Message-ID: <4D49ADEC.8040406@yahoo.com.ar>

Hi there. I am having trouble with the error handling.
I have a grammar for recoignize linear expression. And it works great!.
The grammar for a linear expresion is the following:

tokens
{
	PLUS 	= '+';
	MINUS 	= '-';
	MUL		= '*';
	DIV		= '/';
}

linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)*;
linterm : factor? ID;

expr returns [double value]
	: e=term {$value = $e.value;}
	(	PLUS e=term {$value += $e.value;}
	|	MINUS e=term {$value -= $e.value;}
	)*;

term returns [double value]
	: f=factor {$value = $f.value;}
	(	MUL f=factor {$value *= $f.value;}
	|	DIV f=factor {$value /= $f.value;}
	)*;

factor returns [double value]
	: DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
	| '(' e=expr ')'{$value = $e.value;};
	
ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

DOUBLE
	:   ('0'..'9')+
	|	('0'..'9')+ '.' ('0'..'9')* EXPONENT?
     |   '.' ('0'..'9')+ EXPONENT?
     |   ('0'..'9')+ EXPONENT
     ;

fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

NEWLINE:'\r'? '\n' { $channel = HIDDEN; };

WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };


But the problem ocurrs when, for example, i have:
"x x x"

Then the parsers stop after processing the first "x".
?How do i correctly emit an invalid syntax error?.
I Try with the catch EarlyExitException, but it doesn't works.
I Want, inside my java aplicacition to catch this, and show to the final 
user.
Something like this...
//line is equals to the user input...

             CharStream cs = new ANTLRStringStream(line);
             LinearExpressionLexer lexer = new LinearExpressionLexer(cs);
             CommonTokenStream tokens = new CommonTokenStream(lexer);
             LinearExpressionParser parser = new 
LinearExpressionParser(tokens);
             res = parser.linexpr (); // and here, it's suppose to fail, 
but it isn't.
Actually, the linexpr does returns some kind of data whose type is a 
custom class called LinearExpresion. I omit to put the return in the 
linearexpr parser rule to simplify things.

Hope anyone can help me.
Greettings and thanks for advance.
V?ctor.

From sharwell at pixelminegames.com  Wed Feb  2 11:21:54 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 2 Feb 2011 13:21:54 -0600
Subject: [antlr-interest] SLL(2) in "The Definitive ANTLR Reference"
In-Reply-To: <9B0BD131-1BDB-4CF7-87F8-9EE5D9A3C905@toolazydogs.com>
References: <9B0BD131-1BDB-4CF7-87F8-9EE5D9A3C905@toolazydogs.com>
Message-ID: <024201cbc30e$74239ac0$5c6ad040$@pixelminegames.com>

The problem is the decision inside rule r. Since ANTLR uses lookahead only
(as opposed to lookbehind), the decision making doesn't know which instance
of r is being parsed. The following would resolve the issue:

s : X r1 A B
   | Y r2 B
   ;

r1 : A | ;
r2 : A | ;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alan D. Cabrera
Sent: Wednesday, February 02, 2011 11:08 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] SLL(2) in "The Definitive ANTLR Reference"

I was reading about the following grammar on page 287 of the PDF document

grammar t;
s : X r A B
  | Y r B
  ;

r : A
  |
  ;

I don't see where the problem is since the alternatives in s begin with two
different tokens X and Y.  I think that since these two tokens are different
I can easily construct a DFA that would unambiguously parse a stream of
tokens.

I sense that this example was supposed to bring out a finer point about how
ANTLR generates parsers but I'm afraid that it is being lost on me.


Regards,
Alan


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jbb at acm.org  Wed Feb  2 12:32:11 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 02 Feb 2011 15:32:11 -0500
Subject: [antlr-interest] Question of Repetead tokens and early
 termination
In-Reply-To: <4D49ADEC.8040406@yahoo.com.ar>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>
	<4D49ADEC.8040406@yahoo.com.ar>
Message-ID: <1296678731.7731.14.camel@gecko>

Your grammar does not mention the EOF token. (more below...)
On Wed, 2011-02-02 at 16:18 -0300, Victor Giordano wrote:
> Hi there. I am having trouble with the error handling.
> I have a grammar for recoignize linear expression. And it works great!.
> The grammar for a linear expresion is the following:
> 
> tokens
> {
> 	PLUS 	= '+';
> 	MINUS 	= '-';
> 	MUL		= '*';
> 	DIV		= '/';
> }
> 
> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)*;
> linterm : factor? ID;
> 
> expr returns [double value]
> 	: e=term {$value = $e.value;}
> 	(	PLUS e=term {$value += $e.value;}
> 	|	MINUS e=term {$value -= $e.value;}
> 	)*;
> 
> term returns [double value]
> 	: f=factor {$value = $f.value;}
> 	(	MUL f=factor {$value *= $f.value;}
> 	|	DIV f=factor {$value /= $f.value;}
> 	)*;
> 
> factor returns [double value]
> 	: DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
> 	| '(' e=expr ')'{$value = $e.value;};
> 	
> ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
> 
> DOUBLE
> 	:   ('0'..'9')+
> 	|	('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>      |   '.' ('0'..'9')+ EXPONENT?
>      |   ('0'..'9')+ EXPONENT
>      ;
> 
> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
> 
> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
> 
> WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
> 
> 
> But the problem ocurrs when, for example, i have:
> "x x x"
> 
> Then the parsers stop after processing the first "x".
> ?How do i correctly emit an invalid syntax error?.
> I Try with the catch EarlyExitException, but it doesn't works.
> I Want, inside my java aplicacition to catch this, and show to the final 
> user.
> Something like this...
> //line is equals to the user input...
> 
>              CharStream cs = new ANTLRStringStream(line);
>              LinearExpressionLexer lexer = new LinearExpressionLexer(cs);
>              CommonTokenStream tokens = new CommonTokenStream(lexer);
>              LinearExpressionParser parser = new 
> LinearExpressionParser(tokens);
>              res = parser.linexpr (); // and here, it's suppose to fail, 
> but it isn't.
> Actually, the linexpr does returns some kind of data whose type is a 
> custom class called LinearExpresion. I omit to put the return in the 
> linearexpr parser rule to simplify things.
> 
> Hope anyone can help me.
> Greettings and thanks for advance.

Greetings!

By design ANTLR parsers stop after consuming the longest possible VALID
input sequence. I believe the rational for this is that any remaining
input will be available for some other tool to process.

If you want ANTLR to try to process the entire input, reporting and
recovering from syntax errors in the input; you must tell it to do that.

By referring to the EOF token (a special built-in token) in your
top-most rule will cause ANTLR to consume the entire input string. E.g.
the parse will not have a valid input until the EOF is seen and so will
consume all of the input sentence.

I suggest adding a top-level rule similar to:

start : linexpr EOF! ;

and then call parser.start() instead of parser.linexpr() in your driver.

(note the ! meta-character after the EOF token above will keep the EOF
out of any AST produced, but you do not seem to be building an AST so it
won't make any difference...)

Hope this helps...
   -jbb



From list at toolazydogs.com  Wed Feb  2 12:54:32 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 2 Feb 2011 12:54:32 -0800
Subject: [antlr-interest] SLL(2) in "The Definitive ANTLR Reference"
In-Reply-To: <78499B54-C610-492A-B4AE-C98439A3A8E1@cs.usfca.edu>
References: <9B0BD131-1BDB-4CF7-87F8-9EE5D9A3C905@toolazydogs.com>
	<78499B54-C610-492A-B4AE-C98439A3A8E1@cs.usfca.edu>
Message-ID: <2A21D41C-D5FB-4EA0-9872-050003FD82D3@toolazydogs.com>

Ahh, the DFA for the 'r' rule.  That makes sense now.  Interesting example.

Thanks Terence and Sam!


Regards,
Alan

On Feb 2, 2011, at 11:17 AM, Terence Parr wrote:

> try for rule 'r' though ;)
> Ter
> On Feb 2, 2011, at 9:07 AM, Alan D. Cabrera wrote:
> 
>> I was reading about the following grammar on page 287 of the PDF document
>> 
>> grammar t;
>> s : X r A B
>> | Y r B
>> ;
>> 
>> r : A
>> |
>> ;
>> 
>> I don't see where the problem is since the alternatives in s begin with two different tokens X and Y.  I think that since these two tokens are different I can easily construct a DFA that would unambiguously parse a stream of tokens.
>> 
>> I sense that this example was supposed to bring out a finer point about how ANTLR generates parsers but I'm afraid that it is being lost on me.
>> 
>> 
>> Regards,
>> Alan
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Feb  2 13:25:50 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 2 Feb 2011 13:25:50 -0800
Subject: [antlr-interest] LL(*) paper accepted to PLDI 2011
Message-ID: <94A15E19-E218-43FF-94FA-202CDBC068ED@cs.usfca.edu>

Here's a draft of "LL(*): The Foundation of the ANTLR Parser Generator"

http://www.antlr.org/papers/LL-star-PLDI11.pdf

Explains the LL(*) parsing strategy and ANTLR's analysis algorithm that builds LL(*) parsers. [warning: written for academic audiences.]

Ter

From power_giordo at yahoo.com.ar  Wed Feb  2 13:50:36 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Wed, 02 Feb 2011 18:50:36 -0300
Subject: [antlr-interest] Question of Repetead tokens and early
	termination
In-Reply-To: <1296678731.7731.14.camel@gecko>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>	
	<4D49ADEC.8040406@yahoo.com.ar> <1296678731.7731.14.camel@gecko>
Message-ID: <4D49D1AC.5030600@yahoo.com.ar>

Thanks for your anwser John. Your explanation was very clear and most 
welcome!.
Thinks seem to go better beacuse kwow the parser is throwing an 
MissingTokenExeption.
I will capture and use it for the cause!!
Grettins and thanks again!.
V?ctor.


El 02/02/2011 05:32 p.m., John B. Brodie escribi?:
> Your grammar does not mention the EOF token. (more below...)
> On Wed, 2011-02-02 at 16:18 -0300, Victor Giordano wrote:
>> Hi there. I am having trouble with the error handling.
>> I have a grammar for recoignize linear expression. And it works great!.
>> The grammar for a linear expresion is the following:
>>
>> tokens
>> {
>> 	PLUS 	= '+';
>> 	MINUS 	= '-';
>> 	MUL		= '*';
>> 	DIV		= '/';
>> }
>>
>> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)*;
>> linterm : factor? ID;
>>
>> expr returns [double value]
>> 	: e=term {$value = $e.value;}
>> 	(	PLUS e=term {$value += $e.value;}
>> 	|	MINUS e=term {$value -= $e.value;}
>> 	)*;
>>
>> term returns [double value]
>> 	: f=factor {$value = $f.value;}
>> 	(	MUL f=factor {$value *= $f.value;}
>> 	|	DIV f=factor {$value /= $f.value;}
>> 	)*;
>>
>> factor returns [double value]
>> 	: DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
>> 	| '(' e=expr ')'{$value = $e.value;};
>> 	
>> ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>>
>> DOUBLE
>> 	:   ('0'..'9')+
>> 	|	('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>>       |   '.' ('0'..'9')+ EXPONENT?
>>       |   ('0'..'9')+ EXPONENT
>>       ;
>>
>> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>>
>> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
>>
>> WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
>>
>>
>> But the problem ocurrs when, for example, i have:
>> "x x x"
>>
>> Then the parsers stop after processing the first "x".
>> ?How do i correctly emit an invalid syntax error?.
>> I Try with the catch EarlyExitException, but it doesn't works.
>> I Want, inside my java aplicacition to catch this, and show to the final
>> user.
>> Something like this...
>> //line is equals to the user input...
>>
>>               CharStream cs = new ANTLRStringStream(line);
>>               LinearExpressionLexer lexer = new LinearExpressionLexer(cs);
>>               CommonTokenStream tokens = new CommonTokenStream(lexer);
>>               LinearExpressionParser parser = new
>> LinearExpressionParser(tokens);
>>               res = parser.linexpr (); // and here, it's suppose to fail,
>> but it isn't.
>> Actually, the linexpr does returns some kind of data whose type is a
>> custom class called LinearExpresion. I omit to put the return in the
>> linearexpr parser rule to simplify things.
>>
>> Hope anyone can help me.
>> Greettings and thanks for advance.
>
> Greetings!
>
> By design ANTLR parsers stop after consuming the longest possible VALID
> input sequence. I believe the rational for this is that any remaining
> input will be available for some other tool to process.
>
> If you want ANTLR to try to process the entire input, reporting and
> recovering from syntax errors in the input; you must tell it to do that.
>
> By referring to the EOF token (a special built-in token) in your
> top-most rule will cause ANTLR to consume the entire input string. E.g.
> the parse will not have a valid input until the EOF is seen and so will
> consume all of the input sentence.
>
> I suggest adding a top-level rule similar to:
>
> start : linexpr EOF! ;
>
> and then call parser.start() instead of parser.linexpr() in your driver.
>
> (note the ! meta-character after the EOF token above will keep the EOF
> out of any AST produced, but you do not seem to be building an AST so it
> won't make any difference...)
>
> Hope this helps...
>     -jbb
>
>
>

From michael.bedward at gmail.com  Wed Feb  2 15:03:01 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 3 Feb 2011 10:03:01 +1100
Subject: [antlr-interest] tree pattern matching rewrite bug ?
In-Reply-To: <AANLkTi=B102vsYYUgwH-W8qsGyoJGLvQz7_Oxsi2hkDn@mail.gmail.com>
References: <AANLkTi=B102vsYYUgwH-W8qsGyoJGLvQz7_Oxsi2hkDn@mail.gmail.com>
Message-ID: <AANLkTikQ2Edg6tstjLAfz-3sz=gWoqjNdKpjg=3DeEM0@mail.gmail.com>

Just a little more on the issue below, when I swapped the tree
grammars that were provoking the  "Can't set single child to a list"
error from pattern matching mode (filter = true) to complete grammars
(filter = false) the tree rewrites run successfully.

I'd still be interested to hear if issue ANTLR-419 is known to be
current problem.

cheers
Michael


On 2 February 2011 11:42, Michael Bedward <michael.bedward at gmail.com> wrote:
> Hello all,
>
> I hope it's ok to ask about ANTLR Jira issues on this list.
>
> I've been using pattern matching for some simple tree rewriting tasks.
> Most work, but for some of them I keep hitting the error "Can't set
> single child to a list". I've spent quite a bit of time in the
> debugger without success.
>
> Google found this issue for version 3.2 which appears to be related
> and still open (which I assume means not fixed in version 3.3)...
>
> http://www.antlr.org/jira/browse/ANTLR-419
>
> Before I spend more time debugging, I wonder if anyone can tell me if
> this is indeed a current bug. If so I can probably work around it by
> going back to rewriting using a complete grammar.
>
> cheers
> Michael
>

From punch at cse.msu.edu  Wed Feb  2 17:36:38 2011
From: punch at cse.msu.edu (bill punch)
Date: Wed, 02 Feb 2011 20:36:38 -0500
Subject: [antlr-interest] Which approach for an Interpreter: Tree Grammar vs
	AST-Visitor
Message-ID: <4D4A06A6.8000000@cse.msu.edu>

I'm designing a project for my compiler class, and we are at the stage
of building an interpreter for our grammar. Before going farther, let me
say first that ANTLR is great and makes the whole process a lot easier.
However, I'm converting the course and, being new to ANTLR, have a few
questions. Here is one.

I was using Pattern 25, the Pie language,  from LIP as a guideline, but
I'm a little confused about the best approach. Pattern 25, Pie,
constructs an AST then uses hand-written code to do the visiting. I like
the approach, as more complex code can be embedded in the visitor code.
However, instead of writing my own visitor, I could have the students
write a tree grammar to visit the AST nodes. But it seems that I would
still be better off putting the exec type code in a separate file.

So would it be better to have an example like the Pie language use a
tree grammar or is the hand-written visitor code a better approach? What
are the pros and cons? Any help appreciated.

-- 
      >>>bill<<<


From power_giordo at yahoo.com.ar  Wed Feb  2 18:22:24 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Wed, 02 Feb 2011 23:22:24 -0300
Subject: [antlr-interest] Catching errors
In-Reply-To: <1296678731.7731.14.camel@gecko>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>	
	<4D49ADEC.8040406@yahoo.com.ar> <1296678731.7731.14.camel@gecko>
Message-ID: <4D4A1160.80102@yahoo.com.ar>

Okey. So adding and EOF forces the parser to go to the end of the input 
in search of others tokens in correct order.

1)But a still have a problem, consider the following grammar:

grammar LinearMath;

tokens
{
     PLUS     = '+';
     MINUS     = '-';
     MUL        = '*';
     DIV        = '/';
}

inecuation:	linexpr ((RELATIONSHIP) linexpr)+ EOF!;
catch [UnwantedTokenException ute]
{
	System.out.println ("inecuation UnwantedTokenException  " + 
ute.toString());
	throw ute;
}

linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)* EOF;

linterm : factor? ID;

expr returns [double value]
     : e=term {$value = $e.value;}
     (    PLUS e=term {$value += $e.value;}
     |    MINUS e=term {$value -= $e.value;}
     )*;

term returns [double value]
     : f=factor {$value = $f.value;}
     (    MUL f=factor {$value *= $f.value;}
     |    DIV f=factor {$value /= $f.value;}
     )*;

factor returns [double value]
     : DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
     | '(' e=expr ')'{$value = $e.value;};

ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

DOUBLE
     :   ('0'..'9')+
     |    ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
       |   '.' ('0'..'9')+ EXPONENT?
       |   ('0'..'9')+ EXPONENT
       ;

fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

NEWLINE:'\r'? '\n' { $channel = HIDDEN; };

WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };


RELATIONSHIP :	'<'|'<='|'='|'>'|'>=';

and with the following input: "x < y x"
that isn't a valid inecuation beacause the y x must have a binary 
aritmetic operator (PLUS OR MINUS). The parser do his job very well, he 
consume the "x" then "<" later "y" and when it reachs the seconds "x" it 
emits an "UnwantedTokenException". The think is, that i am not being 
able to catch it, and display an error to the final user. Look that i am 
using to parse that input the inecuation "rule".

Hope anyone can help me with this again.

2) Other thing is about invalid tokens, i manage to treat then 
overriding a member function of the lexer called nextToken(), like this:

@lexer::members
{
	@Override
	public Token nextToken()
	{
		while (true) {
			state.token = null;
			state.channel = Token.DEFAULT_CHANNEL;
			state.tokenStartCharIndex = input.index();
			state.tokenStartCharPositionInLine = input.getCharPositionInLine();
			state.tokenStartLine = input.getLine();
			state.text = null;
			if ( input.LA(1)==CharStream.EOF ) {
				return Token.EOF_TOKEN;
			}
			try {
				mTokens();
				if ( state.token==null ) {
					emit();
				}
				else if ( state.token==Token.SKIP_TOKEN ) {
					continue;
				}
				return state.token;
			}
			catch (RecognitionException re) {
				reportError(re);
				throw new RuntimeException("Invalid Character  : " + (char) (re.c)); 
// or throw Error
			}
		}
	}
}

?It's that the correct way?

Well that is all!!!
Thanks for advance!.
Victor!!

El 02/02/2011 05:32 p.m., John B. Brodie escribi?:
> Your grammar does not mention the EOF token. (more below...)
> On Wed, 2011-02-02 at 16:18 -0300, Victor Giordano wrote:
>> Hi there. I am having trouble with the error handling.
>> I have a grammar for recoignize linear expression. And it works great!.
>> The grammar for a linear expresion is the following:
>>
>> tokens
>> {
>> 	PLUS 	= '+';
>> 	MINUS 	= '-';
>> 	MUL		= '*';
>> 	DIV		= '/';
>> }
>>
>> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)*;
>> linterm : factor? ID;
>>
>> expr returns [double value]
>> 	: e=term {$value = $e.value;}
>> 	(	PLUS e=term {$value += $e.value;}
>> 	|	MINUS e=term {$value -= $e.value;}
>> 	)*;
>>
>> term returns [double value]
>> 	: f=factor {$value = $f.value;}
>> 	(	MUL f=factor {$value *= $f.value;}
>> 	|	DIV f=factor {$value /= $f.value;}
>> 	)*;
>>
>> factor returns [double value]
>> 	: DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
>> 	| '(' e=expr ')'{$value = $e.value;};
>> 	
>> ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>>
>> DOUBLE
>> 	:   ('0'..'9')+
>> 	|	('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>>       |   '.' ('0'..'9')+ EXPONENT?
>>       |   ('0'..'9')+ EXPONENT
>>       ;
>>
>> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>>
>> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
>>
>> WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
>>
>>
>> But the problem ocurrs when, for example, i have:
>> "x x x"
>>
>> Then the parsers stop after processing the first "x".
>> ?How do i correctly emit an invalid syntax error?.
>> I Try with the catch EarlyExitException, but it doesn't works.
>> I Want, inside my java aplicacition to catch this, and show to the final
>> user.
>> Something like this...
>> //line is equals to the user input...
>>
>>               CharStream cs = new ANTLRStringStream(line);
>>               LinearExpressionLexer lexer = new LinearExpressionLexer(cs);
>>               CommonTokenStream tokens = new CommonTokenStream(lexer);
>>               LinearExpressionParser parser = new
>> LinearExpressionParser(tokens);
>>               res = parser.linexpr (); // and here, it's suppose to fail,
>> but it isn't.
>> Actually, the linexpr does returns some kind of data whose type is a
>> custom class called LinearExpresion. I omit to put the return in the
>> linearexpr parser rule to simplify things.
>>
>> Hope anyone can help me.
>> Greettings and thanks for advance.
>
> Greetings!
>
> By design ANTLR parsers stop after consuming the longest possible VALID
> input sequence. I believe the rational for this is that any remaining
> input will be available for some other tool to process.
>
> If you want ANTLR to try to process the entire input, reporting and
> recovering from syntax errors in the input; you must tell it to do that.
>
> By referring to the EOF token (a special built-in token) in your
> top-most rule will cause ANTLR to consume the entire input string. E.g.
> the parse will not have a valid input until the EOF is seen and so will
> consume all of the input sentence.
>
> I suggest adding a top-level rule similar to:
>
> start : linexpr EOF! ;
>
> and then call parser.start() instead of parser.linexpr() in your driver.
>
> (note the ! meta-character after the EOF token above will keep the EOF
> out of any AST produced, but you do not seem to be building an AST so it
> won't make any difference...)
>
> Hope this helps...
>     -jbb
>
>
>

From power_giordo at yahoo.com.ar  Wed Feb  2 19:36:15 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Thu, 03 Feb 2011 00:36:15 -0300
Subject: [antlr-interest] Catching errors
In-Reply-To: <4D4A1160.80102@yahoo.com.ar>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>		<4D49ADEC.8040406@yahoo.com.ar>
	<1296678731.7731.14.camel@gecko> <4D4A1160.80102@yahoo.com.ar>
Message-ID: <4D4A22AF.1050205@yahoo.com.ar>

[Updated]I am watching when i use the generated lexer and parser 
(Generated from the LinearMath grammar below) in a java application is 
that do really emit somekind of warning about two thinks:

1)extraneous input '<some_token>' expecting EOF *Only when a append the 
EOF token at the end of the rule*
2)required (...)+ loop did not match anything at input <some_token>' 
*Only when i use the '+' quantity token modifier*

where <some_token> there is actually token.

In fact the warnings is actually are a strings sended to the standart error.

The matter is, again, how do i do to manage those errors altering normal 
flow with a real exception and treating it like one.
Ok, so far this.
Sorry for the bombing of emails!. Thanks for advance.
V?ctor.




El 02/02/2011 11:22 p.m., Victor Giordano escribi?:
> Okey. So adding and EOF forces the parser to go to the end of the input
> in search of others tokens in correct order.
>
> 1)But a still have a problem, consider the following grammar:
>
> grammar LinearMath;
>
> tokens
> {
>       PLUS     = '+';
>       MINUS     = '-';
>       MUL        = '*';
>       DIV        = '/';
> }
>
> inecuation:	linexpr ((RELATIONSHIP) linexpr)+ EOF!;
> catch [UnwantedTokenException ute]
> {
> 	System.out.println ("inecuation UnwantedTokenException  " +
> ute.toString());
> 	throw ute;
> }
>
> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)* EOF;
>
> linterm : factor? ID;
>
> expr returns [double value]
>       : e=term {$value = $e.value;}
>       (    PLUS e=term {$value += $e.value;}
>       |    MINUS e=term {$value -= $e.value;}
>       )*;
>
> term returns [double value]
>       : f=factor {$value = $f.value;}
>       (    MUL f=factor {$value *= $f.value;}
>       |    DIV f=factor {$value /= $f.value;}
>       )*;
>
> factor returns [double value]
>       : DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
>       | '(' e=expr ')'{$value = $e.value;};
>
> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>
> DOUBLE
>       :   ('0'..'9')+
>       |    ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>         |   '.' ('0'..'9')+ EXPONENT?
>         |   ('0'..'9')+ EXPONENT
>         ;
>
> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>
> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
>
> WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
>
>
> RELATIONSHIP :	'<'|'<='|'='|'>'|'>=';
>
> and with the following input: "x<  y x"
> that isn't a valid inecuation beacause the y x must have a binary
> aritmetic operator (PLUS OR MINUS). The parser do his job very well, he
> consume the "x" then "<" later "y" and when it reachs the seconds "x" it
> emits an "UnwantedTokenException". The think is, that i am not being
> able to catch it, and display an error to the final user. Look that i am
> using to parse that input the inecuation "rule".
>
> Hope anyone can help me with this again.
>
> 2) Other thing is about invalid tokens, i manage to treat then
> overriding a member function of the lexer called nextToken(), like this:
>
> @lexer::members
> {
> 	@Override
> 	public Token nextToken()
> 	{
> 		while (true) {
> 			state.token = null;
> 			state.channel = Token.DEFAULT_CHANNEL;
> 			state.tokenStartCharIndex = input.index();
> 			state.tokenStartCharPositionInLine = input.getCharPositionInLine();
> 			state.tokenStartLine = input.getLine();
> 			state.text = null;
> 			if ( input.LA(1)==CharStream.EOF ) {
> 				return Token.EOF_TOKEN;
> 			}
> 			try {
> 				mTokens();
> 				if ( state.token==null ) {
> 					emit();
> 				}
> 				else if ( state.token==Token.SKIP_TOKEN ) {
> 					continue;
> 				}
> 				return state.token;
> 			}
> 			catch (RecognitionException re) {
> 				reportError(re);
> 				throw new RuntimeException("Invalid Character  : " + (char) (re.c));
> // or throw Error
> 			}
> 		}
> 	}
> }
>
> ?It's that the correct way?
>
> Well that is all!!!
> Thanks for advance!.
> Victor!!
>
> El 02/02/2011 05:32 p.m., John B. Brodie escribi?:
>> Your grammar does not mention the EOF token. (more below...)
>> On Wed, 2011-02-02 at 16:18 -0300, Victor Giordano wrote:
>>> Hi there. I am having trouble with the error handling.
>>> I have a grammar for recoignize linear expression. And it works great!.
>>> The grammar for a linear expresion is the following:
>>>
>>> tokens
>>> {
>>> 	PLUS 	= '+';
>>> 	MINUS 	= '-';
>>> 	MUL		= '*';
>>> 	DIV		= '/';
>>> }
>>>
>>> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)*;
>>> linterm : factor? ID;
>>>
>>> expr returns [double value]
>>> 	: e=term {$value = $e.value;}
>>> 	(	PLUS e=term {$value += $e.value;}
>>> 	|	MINUS e=term {$value -= $e.value;}
>>> 	)*;
>>>
>>> term returns [double value]
>>> 	: f=factor {$value = $f.value;}
>>> 	(	MUL f=factor {$value *= $f.value;}
>>> 	|	DIV f=factor {$value /= $f.value;}
>>> 	)*;
>>>
>>> factor returns [double value]
>>> 	: DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
>>> 	| '(' e=expr ')'{$value = $e.value;};
>>> 	
>>> ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>>>
>>> DOUBLE
>>> 	:   ('0'..'9')+
>>> 	|	('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>>>        |   '.' ('0'..'9')+ EXPONENT?
>>>        |   ('0'..'9')+ EXPONENT
>>>        ;
>>>
>>> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>>>
>>> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
>>>
>>> WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
>>>
>>>
>>> But the problem ocurrs when, for example, i have:
>>> "x x x"
>>>
>>> Then the parsers stop after processing the first "x".
>>> ?How do i correctly emit an invalid syntax error?.
>>> I Try with the catch EarlyExitException, but it doesn't works.
>>> I Want, inside my java aplicacition to catch this, and show to the final
>>> user.
>>> Something like this...
>>> //line is equals to the user input...
>>>
>>>                CharStream cs = new ANTLRStringStream(line);
>>>                LinearExpressionLexer lexer = new LinearExpressionLexer(cs);
>>>                CommonTokenStream tokens = new CommonTokenStream(lexer);
>>>                LinearExpressionParser parser = new
>>> LinearExpressionParser(tokens);
>>>                res = parser.linexpr (); // and here, it's suppose to fail,
>>> but it isn't.
>>> Actually, the linexpr does returns some kind of data whose type is a
>>> custom class called LinearExpresion. I omit to put the return in the
>>> linearexpr parser rule to simplify things.
>>>
>>> Hope anyone can help me.
>>> Greettings and thanks for advance.
>>
>> Greetings!
>>
>> By design ANTLR parsers stop after consuming the longest possible VALID
>> input sequence. I believe the rational for this is that any remaining
>> input will be available for some other tool to process.
>>
>> If you want ANTLR to try to process the entire input, reporting and
>> recovering from syntax errors in the input; you must tell it to do that.
>>
>> By referring to the EOF token (a special built-in token) in your
>> top-most rule will cause ANTLR to consume the entire input string. E.g.
>> the parse will not have a valid input until the EOF is seen and so will
>> consume all of the input sentence.
>>
>> I suggest adding a top-level rule similar to:
>>
>> start : linexpr EOF! ;
>>
>> and then call parser.start() instead of parser.linexpr() in your driver.
>>
>> (note the ! meta-character after the EOF token above will keep the EOF
>> out of any AST produced, but you do not seem to be building an AST so it
>> won't make any difference...)
>>
>> Hope this helps...
>>      -jbb
>>
>>
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Hiran.Chaudhuri at web.de  Wed Feb  2 23:00:26 2011
From: Hiran.Chaudhuri at web.de (Hiran Chaudhuri)
Date: Thu, 3 Feb 2011 08:00:26 +0100 (CET)
Subject: [antlr-interest] Which approach for an Interpreter: Tree
 Grammar vs AST-Visitor
In-Reply-To: <4D4A06A6.8000000@cse.msu.edu>
References: <4D4A06A6.8000000@cse.msu.edu>
Message-ID: <689937689.7221040.1296716426631.JavaMail.fmail@mwmweb063>

>So would it be better to have an example like the Pie language use a
>tree grammar or is the hand-written visitor code a better approach? What
>are the pros and cons? Any help appreciated.

A pure interpreter would read statements one by one and execute them directly.
A compiler would read the whole source in one chunk and translate it before execution.
You can take any approach inbetween as well.

That said, I believe parsing the whole file and translating into an AST is not really interpretation.
But there is still the approach to parse statement for statement, and here I would definitely separate the grammar from execution code through an AST.

file: statement+ EOF;
statement: .....

My interpreter would open the file, construct parser and lexers, manage variables and scope, repeatedly ask the parser to return the AST for the next statement and send it for execution.
This way you would get the typical behaviour that syntax errors or else are detected during execution time. And if you were to change your mind towards a compiler, the grammar and AST construction would not change as you simply call the file method on the parser.

Of course it is more intersting if your interpreted language allows methods/procedures/functions as then parsing the source file would not be linear.

Hiran
___________________________________________________________
Neu: WEB.DE De-Mail - Einfach wie E-Mail, sicher wie ein Brief!  
Jetzt De-Mail-Adresse reservieren: https://produkte.web.de/go/demail02

From lgcraymer at yahoo.com  Thu Feb  3 00:58:37 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 3 Feb 2011 00:58:37 -0800 (PST)
Subject: [antlr-interest] Which approach for an Interpreter: Tree
	Grammar vs AST-Visitor
In-Reply-To: <4D4A06A6.8000000@cse.msu.edu>
References: <4D4A06A6.8000000@cse.msu.edu>
Message-ID: <673438.16144.qm@web55901.mail.re3.yahoo.com>

The "best" way to implement an interpreter is to compile to byte code and 
interpret the byte code--the interpreter is then a large case statement 
surrounded by a loop which fetches the next byte to be interpreted and that 
value is used as an index into the case statement.  That provides the code 
separation that you want and provides a good lesson in designing a virtual 
machine.  As to the tree grammar or visitor choice, consider doing 
both--possibly by dividing the class.  The tree grammar approach is superior in 
the general case, but an important lesson for students to learn the value of 
tools as opposed to automatically hand coding solutions--exposing students to 
alternatives is good for them.

--Loring


----- Original Message ----
> From: bill punch <punch at cse.msu.edu>
> To: antlr-interest at antlr.org
> Sent: Wed, February 2, 2011 5:36:38 PM
> Subject: [antlr-interest] Which approach for an Interpreter: Tree Grammar vs 
>AST-Visitor
> 
> I'm designing a project for my compiler class, and we are at the stage
> of  building an interpreter for our grammar. Before going farther, let me
> say  first that ANTLR is great and makes the whole process a lot easier.
> However,  I'm converting the course and, being new to ANTLR, have a few
> questions. Here  is one.
> 
> I was using Pattern 25, the Pie language,  from LIP as a  guideline, but
> I'm a little confused about the best approach. Pattern 25,  Pie,
> constructs an AST then uses hand-written code to do the visiting. I  like
> the approach, as more complex code can be embedded in the visitor  code.
> However, instead of writing my own visitor, I could have the  students
> write a tree grammar to visit the AST nodes. But it seems that I  would
> still be better off putting the exec type code in a separate  file.
> 
> So would it be better to have an example like the Pie language use  a
> tree grammar or is the hand-written visitor code a better approach?  What
> are the pros and cons? Any help appreciated.
> 
> -- 
>        >>>bill<<<
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


      

From daisydale85 at yahoo.com  Thu Feb  3 02:07:39 2011
From: daisydale85 at yahoo.com (Daisy)
Date: Thu, 3 Feb 2011 02:07:39 -0800 (PST)
Subject: [antlr-interest] Custom error recovery
Message-ID: <1296727659323-5988216.post@n2.nabble.com>


Hi,

I am a newbie to ANTLR. I am trying to generate a parser based on the Lua
5.1 grammar given in the ANTLR grammar list. My query is regarding error
handling. 

This is the rule in the grammar that I am concerned about : functioncall:
varOrExp nameAndArgs+; 
A sample input : SampleFunctionCall {errorVal, testParam1=10, testParam2 =
20}
When this input is given, everything works fine and the "SampleFunctionCall"
will get correctly mapped to "functioncall".

Error scenario input : SampleFunctionCall {errorVal testParam1=10,
testParam2 = 20} 

Here, I removed the ',' after 'errorVal' which is used to separate the
function parameters.
For the above input, I get errors in 3 locations : 1) for errorVal 2) for
testParam1 3) for = in testParam2=20
Also, it no longer detects the input as a function call. From an end-user
perspective, when such an entry is given, I would expect an error "missing ,
after errorVal". When I debugged the code, I was able to see that the
predict function of "field" (the sample functioncall input is made up of ->
var tableconstructor. For more details, see attached image files that shows
the parsed tree) fails to identify "errorVal" and it returns state.failed =
true. This results in coming out of the "functioncall" rule. Rest of the
statements are being considered as normal statements.

My requirement is to stay inside the "functioncall" and show error message
"missing , after errorVal" only for "errorVal". Is this possible?

Please let me know if I havent made myself clear.

Thanks,
Daisy. http://antlr.1301665.n2.nabble.com/file/n5988216/ParseTree.jpg 
http://antlr.1301665.n2.nabble.com/file/n5988216/ParseTreeErrorScenario.jpg 
-- 
View this message in context: http://antlr.1301665.n2.nabble.com/Custom-error-recovery-tp5988216p5988216.html
Sent from the ANTLR mailing list archive at Nabble.com.

From doramos at gfi.es  Thu Feb  3 03:57:47 2011
From: doramos at gfi.es (Oliver Ramos)
Date: Thu, 3 Feb 2011 12:57:47 +0100
Subject: [antlr-interest] Error applying the antlr runtime on grammar
Message-ID: <AANLkTimT-1XzNYeqYoipjj7iY8B-PC0xC+6cyKcRLqLJ@mail.gmail.com>

Hello and thanks in advance.

 I have a grammar that parses files pl / sql (oracle). By applying the antlr
runtime on grammar, I get the following error:

 error(23):  cannot create target Antlr3.Targets.CSharp2Target code
generator:

You can either help

From marco at mtsystems.ch  Thu Feb  3 05:58:27 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Thu, 03 Feb 2011 14:58:27 +0100
Subject: [antlr-interest] Segfault in C target on EOF error reporting
Message-ID: <4D4AB483.50802@mtsystems.ch>

Dear Jim

If there's an EOF in the grammar, the C target crashes on input with 
certain syntax errors. I wrote this quick fix. I hope it at least helps 
you pinpointing the problem.

Any thoughts/comments?


Thanks
Marco
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: eof-quickfix.patch
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110203/5b7d0c8b/attachment.pl 

From bill.andersen at mac.com  Thu Feb  3 07:23:47 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Thu, 03 Feb 2011 10:23:47 -0500
Subject: [antlr-interest] Best way to carry input file name along with ASTs
Message-ID: <82489F91-656A-42DF-BD6E-3F9DCCA062A4@mac.com>

Folks

I have a parser that emits an AST and a number of stages after that.  At each stage, errors can be detected and I want to emit informative error messages about the source of the problem, to include the input file name.

I know there are several ways to do it but I'm looking for an easy way to have access to the source file name of a given token, even if its several passes down the line.

Any suggestions welcome.

  .bill

From jimi at temporal-wave.com  Thu Feb  3 07:58:43 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Feb 2011 07:58:43 -0800
Subject: [antlr-interest] Which approach for an Interpreter: Tree
 Grammar vs AST-Visitor
In-Reply-To: <673438.16144.qm@web55901.mail.re3.yahoo.com>
References: <4D4A06A6.8000000@cse.msu.edu>
	<673438.16144.qm@web55901.mail.re3.yahoo.com>
Message-ID: <069121637edd6613618f94d85b483227@mail.gmail.com>

I agree wholeheartedly with this. Trying you interpret the tree will tie
everyone up in problems understanding the tree, but generating byte code
by walking the tree in a grammar will help to visualize the tree and is
easy to do (especially with a simple stack machine). Generating register
based byte code will usually result in faster execution times but needs
more thought. Also, these days I would consider using the asm framework to
generate Java classes/byte code as this is easy to learn and shows a lot
of things that will be practical in the real world. Knowing the visitor
patterns for tree walking is obviously a base skill for this area and
should be at least taught.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Loring Craymer
> Sent: Thursday, February 03, 2011 12:59 AM
> To: bill punch; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Which approach for an Interpreter: Tree
> Grammar vs AST-Visitor
>
> The "best" way to implement an interpreter is to compile to byte code
> and interpret the byte code--the interpreter is then a large case
> statement surrounded by a loop which fetches the next byte to be
> interpreted and that value is used as an index into the case statement.
> That provides the code separation that you want and provides a good
> lesson in designing a virtual machine.  As to the tree grammar or
> visitor choice, consider doing both--possibly by dividing the class.
> The tree grammar approach is superior in the general case, but an
> important lesson for students to learn the value of tools as opposed to
> automatically hand coding solutions--exposing students to alternatives
> is good for them.
>
> --Loring
>
>
> ----- Original Message ----
> > From: bill punch <punch at cse.msu.edu>
> > To: antlr-interest at antlr.org
> > Sent: Wed, February 2, 2011 5:36:38 PM
> > Subject: [antlr-interest] Which approach for an Interpreter: Tree
> Grammar vs
> >AST-Visitor
> >
> > I'm designing a project for my compiler class, and we are at the
> stage
> > of  building an interpreter for our grammar. Before going farther,
> let me
> > say  first that ANTLR is great and makes the whole process a lot
> easier.
> > However,  I'm converting the course and, being new to ANTLR, have a
> few
> > questions. Here  is one.
> >
> > I was using Pattern 25, the Pie language,  from LIP as a  guideline,
> but
> > I'm a little confused about the best approach. Pattern 25,  Pie,
> > constructs an AST then uses hand-written code to do the visiting. I
> like
> > the approach, as more complex code can be embedded in the visitor
> code.
> > However, instead of writing my own visitor, I could have the
> students
> > write a tree grammar to visit the AST nodes. But it seems that I
> would
> > still be better off putting the exec type code in a separate  file.
> >
> > So would it be better to have an example like the Pie language use  a
> > tree grammar or is the hand-written visitor code a better approach?
> What
> > are the pros and cons? Any help appreciated.
> >
> > --
> >        >>>bill<<<
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Feb  3 07:59:53 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Feb 2011 07:59:53 -0800
Subject: [antlr-interest] Custom error recovery
In-Reply-To: <1296727659323-5988216.post@n2.nabble.com>
References: <1296727659323-5988216.post@n2.nabble.com>
Message-ID: <93f21b10ee33391c2a9fbece324d4e73@mail.gmail.com>

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
http://antlr.markmail.org

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Daisy
> Sent: Thursday, February 03, 2011 2:08 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Custom error recovery
>
>
> Hi,
>
> I am a newbie to ANTLR. I am trying to generate a parser based on the
> Lua
> 5.1 grammar given in the ANTLR grammar list. My query is regarding
> error handling.
>
> This is the rule in the grammar that I am concerned about :
> functioncall:
> varOrExp nameAndArgs+;
> A sample input : SampleFunctionCall {errorVal, testParam1=10,
> testParam2 = 20} When this input is given, everything works fine and
> the "SampleFunctionCall"
> will get correctly mapped to "functioncall".
>
> Error scenario input : SampleFunctionCall {errorVal testParam1=10,
> testParam2 = 20}
>
> Here, I removed the ',' after 'errorVal' which is used to separate the
> function parameters.
> For the above input, I get errors in 3 locations : 1) for errorVal 2)
> for
> testParam1 3) for = in testParam2=20
> Also, it no longer detects the input as a function call. From an end-
> user perspective, when such an entry is given, I would expect an error
> "missing , after errorVal". When I debugged the code, I was able to see
> that the predict function of "field" (the sample functioncall input is
> made up of -> var tableconstructor. For more details, see attached
> image files that shows the parsed tree) fails to identify "errorVal"
> and it returns state.failed = true. This results in coming out of the
> "functioncall" rule. Rest of the statements are being considered as
> normal statements.
>
> My requirement is to stay inside the "functioncall" and show error
> message "missing , after errorVal" only for "errorVal". Is this
> possible?
>
> Please let me know if I havent made myself clear.
>
> Thanks,
> Daisy. http://antlr.1301665.n2.nabble.com/file/n5988216/ParseTree.jpg
> http://antlr.1301665.n2.nabble.com/file/n5988216/ParseTreeErrorScenario
> .jpg
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Custom-error-recovery-
> tp5988216p5988216.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Feb  3 08:01:54 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Feb 2011 08:01:54 -0800
Subject: [antlr-interest] Segfault in C target on EOF error reporting
In-Reply-To: <4D4AB483.50802@mtsystems.ch>
References: <4D4AB483.50802@mtsystems.ch>
Message-ID: <75054fbd467822e1440f3a023cd000aa@mail.gmail.com>

I have already fixed this I think. It is because the EOF token is trying
to be duplicated or otherwise modified. However, the runtime error message
routine is just an example - you are expected to implement your own that
does something sensible ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marco Trudel
> Sent: Thursday, February 03, 2011 5:58 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Segfault in C target on EOF error reporting
>
> Dear Jim
>
> If there's an EOF in the grammar, the C target crashes on input with
> certain syntax errors. I wrote this quick fix. I hope it at least helps
> you pinpointing the problem.
>
> Any thoughts/comments?
>
>
> Thanks
> Marco

From jimi at temporal-wave.com  Thu Feb  3 08:04:13 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 3 Feb 2011 08:04:13 -0800
Subject: [antlr-interest] Best way to carry input file name along with
	ASTs
In-Reply-To: <82489F91-656A-42DF-BD6E-3F9DCCA062A4@mac.com>
References: <82489F91-656A-42DF-BD6E-3F9DCCA062A4@mac.com>
Message-ID: <4bdc2a20b0d2c322cf905553e0e1de4c@mail.gmail.com>

The token references its input stream, which gives you the file name.
Target? How are you processing things like include files? Track the file
boundaries by token index?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bill Andersen
> Sent: Thursday, February 03, 2011 7:24 AM
> To: antlr-interest
> Subject: [antlr-interest] Best way to carry input file name along with
> ASTs
>
> Folks
>
> I have a parser that emits an AST and a number of stages after that.
> At each stage, errors can be detected and I want to emit informative
> error messages about the source of the problem, to include the input
> file name.
>
> I know there are several ways to do it but I'm looking for an easy way
> to have access to the source file name of a given token, even if its
> several passes down the line.
>
> Any suggestions welcome.
>
>   .bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kingces95 at gmail.com  Thu Feb  3 16:00:14 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 3 Feb 2011 16:00:14 -0800
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>
Message-ID: <AANLkTimNT4YLYcekH826=NtC1Ofd1xCb-UDW-yqY4vBt@mail.gmail.com>

Kirby thanks! That helped a ton and thanks for that + vs * tip. A real life
saver.

I have another problem and I'm hoping you can point me in the right
direction. I'm trying to chose between two approaches for building for a
pre-processor. The first (1) approach is to have the pre-processor pass
tokens to the compiler. The second (2) approach is to have the pre-processor
pass strings (those that have not been #if defed out) to the compiler. The
former seems more natural but complicates the lexer because the the lexing
is context sensitive (see below). The latter simplifies both pre-processor
and compiler but feels ugly because it requires the input to be lexered
twice.

As I said, the problem I encountered with the first approach is that the
lexer is context sensitive. For example, consider the following toy grammar
where pre-processor identifiers can be upper or lower case but language
identifiers can only be lower case. The input "'#define HELLO" parses fine
but "#define hello" fails because (I assume) "hello" could be match by two
lexer productions -- ID and PP_ID. I tried inserting a predicate in ID
(e.g. ID : {false}?=> 'a'..'z';) to provide context but if I do then
ANTLRWorks spins when I try to interpret any input. I've also tried fiddling
with the order of ID and PP_ID but each ordering has it's own problems (e.g.
can only make one of the following for a given order: { "hello", "#define
hello" }).

start
        : input*
        ;
input
        : ID+ (NEW_LINE | EOF)
        | pp_input
        ;

pp_input
        : '#' 'define' PP_ID+ (NEW_LINE | EOF)
        ;

NEW_LINE
        : '\r' '\n'
        ;
ID
        : 'a'..'z';

PP_ID
        : 'a'..'z'
        | 'A'..'Z';

This seems like a standard 101 type problem space so hopefully you've
explored it and can direct me! :)

Thanks,
Chris

On Mon, Jan 31, 2011 at 4:03 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> No idea if it is related to the problem, but you likely really want to
> have ID use a '+' not a '*' after ('a'..'z'), otherwise ID to match
> nothing and be cause an infinite loop while lexing at points
> (generally speaking, any time rules like
>
> bar: (foo)*;
>
> foo: (baz)*;
>
> You are just asking for problems.  Whether foo and baz are lexers or
> parser rules.  Every time I do that it is a mistake (or a failure of
> imagination).  Generally speaking, low level items you want to force
> the consumption of something, and make them optional at a higher level
> (at least that has been true in my limited experience).
>
> I believe the EOF is precisely because of the lack of a + vs. a *
> there.  As rather then consume the EOF, you can spin consuming nothing
> forever.  But I didn't actually crack out ANTLR and check.
>
> Also, unless you really know what you are doing, you might want to
> skip using constants in your parser rules.  While many the examples do
> so, from what I've read, it can have complex interaction (it generates
> a token for it internally that can't be seen).  I'd try making a
> NEWLINE token and seeing if that helps make the error message any
> clearer.
>
> Kirby
>
>
> On Mon, Jan 31, 2011 at 5:49 PM, chris king <kingces95 at gmail.com> wrote:
> > Hello! I'm trying to write a grammar that will accept lines of zero or
> more
> > IDs and I'd like to allow the last line to end in a new line *or *EOF. I
> > came up with this grammar:
> >
> > grammar test;
> >
> > start
> >  : input*
> >  ;
> >
> > input
> >  : ID* ('\n' | EOF)
> >  ;
> >
> > ID
> >  : ('a'..'z')*
> >  ;
> >
> > WHITESPACE
> >  : ' '+ {skip();}
> >  ;
> >
> > But got this error from ANTLRWorks saying start has un-reachable
> > alternatives:
> >
> > [15:38:33] error(201): test2.g:9:5: The following alternatives can never
> be
> > matched: 2
> >
> > If I remove the reference to EOF than everything works but I have to end
> the
> > last line in a new line and I don't want to have to do that. Any
> > suggestions?
> >
> > Thanks,
> > Chris
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>

From punch at cse.msu.edu  Thu Feb  3 16:09:24 2011
From: punch at cse.msu.edu (bill punch)
Date: Thu, 03 Feb 2011 19:09:24 -0500
Subject: [antlr-interest] Which approach for an Interpreter: Tree
 Grammar vs AST-Visitor
In-Reply-To: <069121637edd6613618f94d85b483227@mail.gmail.com>
References: <4D4A06A6.8000000@cse.msu.edu>	<673438.16144.qm@web55901.mail.re3.yahoo.com>
	<069121637edd6613618f94d85b483227@mail.gmail.com>
Message-ID: <4D4B43B4.9000101@cse.msu.edu>

Ultimately, generating byte code is one of the goals. However, given
that this is a class we are working our way up, climbing the ladder. My
approach has been to:

- first, just write some grammar rules (first project really just did
token counting). Basically expr grammar
- add control constructs (if, while, etc.) , and generate an AST (just
print it)
- now, walk the tree. I thought it would be good for them to manipulate
the tree by writing their own visitor. This was the question I asked,
whether to walk the AST directly (which I think is what I will do, easy
enough to implement) or to use a tree grammar.

The remaining steps are a good question. I was thinking:
- add scope ala the Pie example, with function definitions, stack of
scopes, etc.
- generate JVM byte code, probably use Jasmine.
- not sure for a last project. I was thinking about retargeting to a
different architecture, I'm working on that now.

I appreciate the feedback and, again think ANTLR and the book examples
make this a really great teaching tool. Also, this forum has been most
helpful. I've been following a number of the discussions and they have
been very helpful.

      >>>bill<<<


On 2/3/11 10:58 AM, Jim Idle wrote:
> I agree wholeheartedly with this. Trying you interpret the tree will tie
> everyone up in problems understanding the tree, but generating byte code
> by walking the tree in a grammar will help to visualize the tree and is
> easy to do (especially with a simple stack machine). Generating register
> based byte code will usually result in faster execution times but needs
> more thought. Also, these days I would consider using the asm framework to
> generate Java classes/byte code as this is easy to learn and shows a lot
> of things that will be practical in the real world. Knowing the visitor
> patterns for tree walking is obviously a base skill for this area and
> should be at least taught.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Loring Craymer
>> Sent: Thursday, February 03, 2011 12:59 AM
>> To: bill punch; antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Which approach for an Interpreter: Tree
>> Grammar vs AST-Visitor
>>
>> The "best" way to implement an interpreter is to compile to byte code
>> and interpret the byte code--the interpreter is then a large case
>> statement surrounded by a loop which fetches the next byte to be
>> interpreted and that value is used as an index into the case statement.
>> That provides the code separation that you want and provides a good
>> lesson in designing a virtual machine.  As to the tree grammar or
>> visitor choice, consider doing both--possibly by dividing the class.
>> The tree grammar approach is superior in the general case, but an
>> important lesson for students to learn the value of tools as opposed to
>> automatically hand coding solutions--exposing students to alternatives
>> is good for them.
>>
>> --Loring
>>
>>
>> ----- Original Message ----
>>> From: bill punch <punch at cse.msu.edu>
>>> To: antlr-interest at antlr.org
>>> Sent: Wed, February 2, 2011 5:36:38 PM
>>> Subject: [antlr-interest] Which approach for an Interpreter: Tree
>> Grammar vs
>>> AST-Visitor
>>>
>>> I'm designing a project for my compiler class, and we are at the
>> stage
>>> of  building an interpreter for our grammar. Before going farther,
>> let me
>>> say  first that ANTLR is great and makes the whole process a lot
>> easier.
>>> However,  I'm converting the course and, being new to ANTLR, have a
>> few
>>> questions. Here  is one.
>>>
>>> I was using Pattern 25, the Pie language,  from LIP as a  guideline,
>> but
>>> I'm a little confused about the best approach. Pattern 25,  Pie,
>>> constructs an AST then uses hand-written code to do the visiting. I
>> like
>>> the approach, as more complex code can be embedded in the visitor
>> code.
>>> However, instead of writing my own visitor, I could have the
>> students
>>> write a tree grammar to visit the AST nodes. But it seems that I
>> would
>>> still be better off putting the exec type code in a separate  file.
>>>
>>> So would it be better to have an example like the Pie language use  a
>>> tree grammar or is the hand-written visitor code a better approach?
>> What
>>> are the pros and cons? Any help appreciated.
>>>
>>> --
>>>        >>>bill<<<
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From adityad at gmail.com  Thu Feb  3 16:21:33 2011
From: adityad at gmail.com (Aditya Damodaran)
Date: Thu, 3 Feb 2011 19:21:33 -0500
Subject: [antlr-interest] Rewrite Rule Inconsistent Behavior (Tree Grammar
	Problem)
Message-ID: <AANLkTikf__nYpj84PQexLJsi-gShrdbmLqsB+QVBO+tq@mail.gmail.com>

Hi,
I'm trying to rewrite a simple tree where ^(operator op1 op2) -> ^(FUNC
operator op1 op2)
I am having fairly inconsistent behavior when I attempt to do this.

tree grammar MExpr;


options {

  ....

  filter=true;

  rewrite=true;

}


bottomup: mathExpr

 term

: ID

| BOOLEAN | INT | FLOAT | STRING

|   ^(FUNC .);


mathExpr

: ^(m=MINUS x=term) -> ^(FUNC NEGATION $x)

|   ^(t=operator t1=term t2=term) -> ^(FUNC $t $t1 $t2);


operator: PLUS | MINUS | MULTOP;


When defined above I get the following StackTrace:

Exception in thread "main"
org.antlr.runtime.tree.RewriteEmptyStreamException: rule t

at org.antlr.runtime.tree.RewriteRuleElementStream._next(
RewriteRuleElementStream.java:157)

at org.antlr.runtime.tree.RewriteRuleElementStream.nextTree(
RewriteRuleElementStream.java:144)....


I have isolated the reason (I think) to be the code that the "operator" rule
produces...



*            **if** ( (**input**.LA(1)>=**PLUS** && **input**.LA(1)<=**
MULTOP**) ) {*

*                **input**.consume();*


As a result the operator_return has a start at the correct token but a tree
of null which causes this error.

If I switch the mathExpr rule to


|^(PLUS t1=term t2=term) -> ^(FUNC PLUS $t1 $t2);


then everything works fine. Obviously this means I have to specify the
rewrite rule for EVERY operator.

I'm sure I'm missing something basic but I'm unable to figure it out. Any
help is much appreciated.


Another interesting variation is that if I just have


operator: PLUS;


then the toStringTree of the return value goes into an infinite recursion
and blows up.


Thanks,

Adi

From kirby.bohling at gmail.com  Thu Feb  3 17:05:20 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Thu, 3 Feb 2011 19:05:20 -0600
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTimNT4YLYcekH826=NtC1Ofd1xCb-UDW-yqY4vBt@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>
	<AANLkTimNT4YLYcekH826=NtC1Ofd1xCb-UDW-yqY4vBt@mail.gmail.com>
Message-ID: <AANLkTin3iQc2wri7U5TEiQN=d3-Bi8cFL9pLD4dM_NmV@mail.gmail.com>

On Thu, Feb 3, 2011 at 6:00 PM, chris king <kingces95 at gmail.com> wrote:
> Kirby thanks! That helped a ton and thanks for that + vs * tip. A real life
> saver.
> I have another problem?and I'm hoping you can point me in the right
> direction. I'm trying to chose between two?approaches for building for?a
> pre-processor. The first (1)?approach is to have the pre-processor pass
> tokens to the compiler. The second (2) approach is to have the pre-processor
> pass strings (those that have not been #if defed out) to the compiler. The
> former?seems more natural?but complicates the lexer because the the lexing
> is context sensitive (see below). The latter simplifies both pre-processor
> and compiler but feels ugly because it requires the input to be lexered
> twice.
> As I said, the problem I encountered with the first approach is that the
> lexer is context sensitive. For example, consider the following toy grammar
> where pre-processor identifiers can be upper or lower case but language
> identifiers can only be lower case. The input "'#define HELLO" parses fine
> but "#define hello" fails because (I assume) "hello" could be match by two
> lexer productions -- ID and PP_ID. I tried inserting a predicate in ID
> (e.g.?ID :?{false}?=> 'a'..'z';) to provide context but if I do then
> ANTLRWorks spins when I try to?interpret any input. I've also tried fiddling
> with the order of ID and PP_ID but each ordering has it's own problems (e.g.
> can only make one of the following for a given order: { "hello", "#define
> hello" }).

Chris,

   I'm not much of an ANTLR expert, but here are my thoughts.  My
first thought is go read what Jim Idle has to say on the list, he
dispenses a lot of practical advice about parsing.  In this case, I
believe Jim's stock advice is that you are doing too much in the lexer
and parser.  In order to generate decent error messages, you should
just skip figuring out if the item is in capital or lower case letters
until after the input is parsed.  Just have one rule 'ID'.  Once you
have the whole thing parsed and in memory, use a tree walker to
validate that the input consumed by the ID that is after a '#define'
is in all caps.  If it isn't, print out a really nice error message,
when you have a lot of semantic information and context to print out a
good error.

First, you're mistaken about why "hello" vs. "HELLO" is causing you
problems.  It can be lexed exactly one way.  If it matches two rules,
the first rule listed wins (if you inverted ID and PP_ID, then ID
tokens could never be generated).  One of the things about ANTLR is
that the lexer runs to completion before the parser ever runs (even if
it doesn't, it logically does).  I always split up my lexer and
parser, specifically so I never get confused into thinking that the
parser will cause the lexer to backtrack and generate a new token type
(it would with other parser rules, but tokens, absolutely not).  The
lexer has some other behavior that isn't like the parser.  That's the
advanced lesson for a different e-mail.

So if for some reason you insist on doing the validation early do
something like this:

pp_input:
'#' 'define' (ID|PP_ID)+ (NEW_LINE | EOF)
;

Down lower, I'd point out that you really want to to be: (ID|PP_ID)
with no plus after it (or better yet just have it be 'ID' if you
follow the advice above), I think your lexer rule is not doing what
you expect.  Which leads to another piece of advice:

Lex your stuff, and then dump it out in a format that makes sense to
you, print the token and then the token text.  Make absolutely sure
the lexer is generating what you expect (the lexer has a lot more
surprises then the parser does IMHO).  Then go mentally execute the
parser, and figure out what is going on.  In this case 'hello' is
generating an 'ID' token, and your rule only allowed a 'PP_ID' token.
That is the likely culprit with some of the problems you are
describing.

> start
> ?? ? ? ?: input*
> ?? ? ? ?;
> input
> ?? ? ? ?: ID+ (NEW_LINE | EOF)
> ?? ? ? ?| pp_input
> ?? ? ? ?;
> pp_input
> ?? ? ? ?: '#' 'define' PP_ID+ (NEW_LINE | EOF)
> ?? ? ? ?;
> NEW_LINE
> ?? ? ? ?: '\r' '\n'
> ?? ? ? ?;
> ID
> ?? ? ? ?: 'a'..'z';
>
> PP_ID
> ?? ? ? ?: 'a'..'z'
> ?? ? ? ?| 'A'..'Z';

I'd not put '#' 'define' in a parser rule.  I'd make it a proper token
for clarity.

Next, I'm pretty sure you mean that ID has a value of 'hello', the way
you have the rules constructed, the input 'hello' is 5 tokens (one of
'h', 'e', 'l', 'l', and 'o').  So first things, first, I'd fix that
(and PP_ID analogously, if you insist on keeping it).

You aren't skipping whitespace, but I'm assuming you just elided that
from this grammar.

Next, are you sure you don't mean ('\n' | '\r') for new line?  I think
I'd just follow Jim's advice and ensure that you have a new line at
the end.  It would make the EOF handling much easier (or barring that,
just add EOF to as an alternative to NEWLINE rule and the grammar
becomes easier to read).

Finally, I'd stop using ANTLR works temporarily.  I'd generate the
code, and step through the Java in a debugger.  One of the beauties of
ANTLR is that you can tell a _lot_ about what is going on just from
the stack trace and stepping through the code (recursive descent
parsers are fantastic in this respect).

If it is spinning, that is generally a sign that you have done
something silly and have a rule that allow consumes no input and is
repeated.  There is nothing obvious to me just from looking at the
grammar.  You've got enough small problems that I'll let you sort
those out first.  From what you've sent me, nothing would actually
work, so it'll be hard to figure out what is really going on with
precision.

I'd split your input rule just for symmetry to be something like:

input :
     ID+ (NEW_LINE | EOF)
;

pp_input:
     DEFINE PP_ID+ (NEW_LINE | EOF)
;

Then have a third rule like:

stmt:
    (input | pp_input)
;

Modify the start to use it:
start:
    (stmt)* EOF;

I like the symmetry, and I would guess it makes it easier to read the
stack traces to figure out where you are (you can tell if it is
attempting to parse the input as a input, or as a pre-processor
input).

Again, my suggestions very concisely are:

1. Split the Lexer and the Parser up.
2. Do not use the ability to have generated tokens in the parser (read
remove '#define' from the parser rule.
3. Don't try and differentiate between the uppercase/lowercase stuff
inside the lexer.
4. Run the lexer and make sure it generates exactly the tokens you think it is.
5. Run the parser in a debugger, recursive descent style parsers are
how you would write a parser by hand, so they make a lot of sense when
you step through them and the stack traces tell you exactly how it is
attempting to match the input so far.

Thanks,
   Kirby

PS:  Assembling all my instructions, except splitting the lexer and
parser apart (and not running any of this, so if it breaks, keep the
pieces):

// Add EOF, to force all the input to be consumed, or generate an error.
start:
    stmt* EOF
        ;

stmt:
    input|pp_input
;

input
        : ID NEW_LINE;
        ;

pp_input
        :  DEFINE ID NEW_LINE
        ;

// NOTE: This is going to cause you problems if you have a '#', but
not a '#define'
// again I'm skipping that to get you past this point.
DEFINE:
    '#define'
;

NEW_LINE
        : '\r' '\n' | EOF
        ;
ID
        : 'a'..'z'
        | 'A'..'Z';

// Add a whitespace rule somewhere in here...

<snip...>

From kingces95 at gmail.com  Thu Feb  3 19:21:23 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 3 Feb 2011 19:21:23 -0800
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTin3iQc2wri7U5TEiQN=d3-Bi8cFL9pLD4dM_NmV@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>
	<AANLkTimNT4YLYcekH826=NtC1Ofd1xCb-UDW-yqY4vBt@mail.gmail.com>
	<AANLkTin3iQc2wri7U5TEiQN=d3-Bi8cFL9pLD4dM_NmV@mail.gmail.com>
Message-ID: <AANLkTikDihVyW-RBiuR1B-p5YXcCkc_Ez2VTojdp5F0x@mail.gmail.com>

Kirby, thanks again for the great tips and corrections. After digesting all
that I think I'll be able to work through many of my issues (some I didn't
even know I had!). I promise I did try to do my best to create a good
example :) but I'm afraid my many newbe mistakes distracted from my main
question. So instead of trying to author a grammar let me instead describe
what I'm trying to do and ask if you could please cook me up a small
grammar.

Suppose I want to create a grammar to recognize integers with one integer
per line. Additionally suppose I want a preprocessor such that I can wrap
groups of integers in #if [expr] ... #endif where if expr has basic
arithmetic operations. If expr evaluates to greater than 0 the enclosed
lines are lexed else they are not. What would that grammar (or even just
lexer) look like?

So for example, it should recognize this input and return an integer token
10 but not a token for 20. It should also ignore the comment.


10
#if (2-1)*3-10
20 and just ignore this comment
#endif

I cannot come up with a lexer that can lex the whole file without knowing if
it's in an active #if\#endif block so I'm stuck before I can even begin my
grammar.

Thanks (in advance!),
Chris

On Thu, Feb 3, 2011 at 5:05 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> On Thu, Feb 3, 2011 at 6:00 PM, chris king <kingces95 at gmail.com> wrote:
> > Kirby thanks! That helped a ton and thanks for that + vs * tip. A real
> life
> > saver.
> > I have another problem and I'm hoping you can point me in the right
> > direction. I'm trying to chose between two approaches for building for a
> > pre-processor. The first (1) approach is to have the pre-processor pass
> > tokens to the compiler. The second (2) approach is to have the
> pre-processor
> > pass strings (those that have not been #if defed out) to the compiler.
> The
> > former seems more natural but complicates the lexer because the the
> lexing
> > is context sensitive (see below). The latter simplifies both
> pre-processor
> > and compiler but feels ugly because it requires the input to be lexered
> > twice.
> > As I said, the problem I encountered with the first approach is that the
> > lexer is context sensitive. For example, consider the following toy
> grammar
> > where pre-processor identifiers can be upper or lower case but language
> > identifiers can only be lower case. The input "'#define HELLO" parses
> fine
> > but "#define hello" fails because (I assume) "hello" could be match by
> two
> > lexer productions -- ID and PP_ID. I tried inserting a predicate in ID
> > (e.g. ID : {false}?=> 'a'..'z';) to provide context but if I do then
> > ANTLRWorks spins when I try to interpret any input. I've also tried
> fiddling
> > with the order of ID and PP_ID but each ordering has it's own problems
> (e.g.
> > can only make one of the following for a given order: { "hello", "#define
> > hello" }).
>
> Chris,
>
>   I'm not much of an ANTLR expert, but here are my thoughts.  My
> first thought is go read what Jim Idle has to say on the list, he
> dispenses a lot of practical advice about parsing.  In this case, I
> believe Jim's stock advice is that you are doing too much in the lexer
> and parser.  In order to generate decent error messages, you should
> just skip figuring out if the item is in capital or lower case letters
> until after the input is parsed.  Just have one rule 'ID'.  Once you
> have the whole thing parsed and in memory, use a tree walker to
> validate that the input consumed by the ID that is after a '#define'
> is in all caps.  If it isn't, print out a really nice error message,
> when you have a lot of semantic information and context to print out a
> good error.
>
> First, you're mistaken about why "hello" vs. "HELLO" is causing you
> problems.  It can be lexed exactly one way.  If it matches two rules,
> the first rule listed wins (if you inverted ID and PP_ID, then ID
> tokens could never be generated).  One of the things about ANTLR is
> that the lexer runs to completion before the parser ever runs (even if
> it doesn't, it logically does).  I always split up my lexer and
> parser, specifically so I never get confused into thinking that the
> parser will cause the lexer to backtrack and generate a new token type
> (it would with other parser rules, but tokens, absolutely not).  The
> lexer has some other behavior that isn't like the parser.  That's the
> advanced lesson for a different e-mail.
>
> So if for some reason you insist on doing the validation early do
> something like this:
>
> pp_input:
> '#' 'define' (ID|PP_ID)+ (NEW_LINE | EOF)
> ;
>
> Down lower, I'd point out that you really want to to be: (ID|PP_ID)
> with no plus after it (or better yet just have it be 'ID' if you
> follow the advice above), I think your lexer rule is not doing what
> you expect.  Which leads to another piece of advice:
>
> Lex your stuff, and then dump it out in a format that makes sense to
> you, print the token and then the token text.  Make absolutely sure
> the lexer is generating what you expect (the lexer has a lot more
> surprises then the parser does IMHO).  Then go mentally execute the
> parser, and figure out what is going on.  In this case 'hello' is
> generating an 'ID' token, and your rule only allowed a 'PP_ID' token.
> That is the likely culprit with some of the problems you are
> describing.
>
> > start
> >         : input*
> >         ;
> > input
> >         : ID+ (NEW_LINE | EOF)
> >         | pp_input
> >         ;
> > pp_input
> >         : '#' 'define' PP_ID+ (NEW_LINE | EOF)
> >         ;
> > NEW_LINE
> >         : '\r' '\n'
> >         ;
> > ID
> >         : 'a'..'z';
> >
> > PP_ID
> >         : 'a'..'z'
> >         | 'A'..'Z';
>
> I'd not put '#' 'define' in a parser rule.  I'd make it a proper token
> for clarity.
>
> Next, I'm pretty sure you mean that ID has a value of 'hello', the way
> you have the rules constructed, the input 'hello' is 5 tokens (one of
> 'h', 'e', 'l', 'l', and 'o').  So first things, first, I'd fix that
> (and PP_ID analogously, if you insist on keeping it).
>
> You aren't skipping whitespace, but I'm assuming you just elided that
> from this grammar.
>
> Next, are you sure you don't mean ('\n' | '\r') for new line?  I think
> I'd just follow Jim's advice and ensure that you have a new line at
> the end.  It would make the EOF handling much easier (or barring that,
> just add EOF to as an alternative to NEWLINE rule and the grammar
> becomes easier to read).
>
> Finally, I'd stop using ANTLR works temporarily.  I'd generate the
> code, and step through the Java in a debugger.  One of the beauties of
> ANTLR is that you can tell a _lot_ about what is going on just from
> the stack trace and stepping through the code (recursive descent
> parsers are fantastic in this respect).
>
> If it is spinning, that is generally a sign that you have done
> something silly and have a rule that allow consumes no input and is
> repeated.  There is nothing obvious to me just from looking at the
> grammar.  You've got enough small problems that I'll let you sort
> those out first.  From what you've sent me, nothing would actually
> work, so it'll be hard to figure out what is really going on with
> precision.
>
> I'd split your input rule just for symmetry to be something like:
>
> input :
>     ID+ (NEW_LINE | EOF)
> ;
>
> pp_input:
>     DEFINE PP_ID+ (NEW_LINE | EOF)
> ;
>
> Then have a third rule like:
>
> stmt:
>    (input | pp_input)
> ;
>
> Modify the start to use it:
> start:
>    (stmt)* EOF;
>
> I like the symmetry, and I would guess it makes it easier to read the
> stack traces to figure out where you are (you can tell if it is
> attempting to parse the input as a input, or as a pre-processor
> input).
>
> Again, my suggestions very concisely are:
>
> 1. Split the Lexer and the Parser up.
> 2. Do not use the ability to have generated tokens in the parser (read
> remove '#define' from the parser rule.
> 3. Don't try and differentiate between the uppercase/lowercase stuff
> inside the lexer.
> 4. Run the lexer and make sure it generates exactly the tokens you think it
> is.
> 5. Run the parser in a debugger, recursive descent style parsers are
> how you would write a parser by hand, so they make a lot of sense when
> you step through them and the stack traces tell you exactly how it is
> attempting to match the input so far.
>
> Thanks,
>   Kirby
>
> PS:  Assembling all my instructions, except splitting the lexer and
> parser apart (and not running any of this, so if it breaks, keep the
> pieces):
>
> // Add EOF, to force all the input to be consumed, or generate an error.
> start:
>    stmt* EOF
>        ;
>
> stmt:
>    input|pp_input
> ;
>
> input
>        : ID NEW_LINE;
>        ;
>
> pp_input
>        :  DEFINE ID NEW_LINE
>        ;
>
> // NOTE: This is going to cause you problems if you have a '#', but
> not a '#define'
> // again I'm skipping that to get you past this point.
> DEFINE:
>    '#define'
> ;
>
> NEW_LINE
>        : '\r' '\n' | EOF
>        ;
> ID
>        : 'a'..'z'
>        | 'A'..'Z';
>
> // Add a whitespace rule somewhere in here...
>
> <snip...>
>

From power_giordo at yahoo.com.ar  Thu Feb  3 20:11:51 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Fri, 04 Feb 2011 01:11:51 -0300
Subject: [antlr-interest] Catching errors
In-Reply-To: <4D4A22AF.1050205@yahoo.com.ar>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>		<4D49ADEC.8040406@yahoo.com.ar>
	<1296678731.7731.14.camel@gecko> <4D4A1160.80102@yahoo.com.ar>
	<4D4A22AF.1050205@yahoo.com.ar>
Message-ID: <4D4B7C87.3090706@yahoo.com.ar>

Hello people, two days a posted this problem and i still having troubles 
with this matter, pliz give a hand, if you can of course....
I need to handle the errors of parsing in order to display a nice user 
message.

I am watching when i use the generated lexer and parser (Generated from 
the LinearMath grammar below) in a java application is that do really 
emit somekind of warning about two thinks:

1)extraneous input '<some_token>' expecting EOF *Only when a append the 
EOF token at the end of the rule*
2)required (...)+ loop did not match anything at input <some_token>' 
*Only when i use the '+' quantity token modifier*

where <some_token> there is actually token.

The matter is, again, how do i catch in a exception those errors. I show 
below the grammar with an input example to try for yourself:

grammar LinearMath;

tokens
{
       PLUS     = '+';
       MINUS     = '-';
       MUL        = '*';
       DIV        = '/';
}

inecuation:    linexpr ((RELATIONSHIP) linexpr)+ EOF!;
catch [UnwantedTokenException ute]
{
     System.out.println ("inecuation UnwantedTokenException  " +
ute.toString());
     throw ute;
}

linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)* EOF;

linterm : factor? ID;

expr returns [double value]
       : e=term {$value = $e.value;}
       (    PLUS e=term {$value += $e.value;}
       |    MINUS e=term {$value -= $e.value;}
       )*;

term returns [double value]
       : f=factor {$value = $f.value;}
       (    MUL f=factor {$value *= $f.value;}
       |    DIV f=factor {$value /= $f.value;}
       )*;

factor returns [double value]
       : DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
       | '(' e=expr ')'{$value = $e.value;};

ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

DOUBLE
       :   ('0'..'9')+
       |    ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
         |   '.' ('0'..'9')+ EXPONENT?
         |   ('0'..'9')+ EXPONENT
         ;

fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

NEWLINE:'\r'? '\n' { $channel = HIDDEN; };

WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };


RELATIONSHIP :    '<'|'<='|'='|'>'|'>=';

and with the following input: "x<  y x"
that isn't a valid inecuation beacause the y x must have a binary
aritmetic operator (PLUS OR MINUS). The parser do his job very well, he
consume the "x" then "<" later "y" and when it reachs the seconds "x" it
emits an "UnwantedTokenException". The think is, that i am not being
able to catch it, and display an error to the final user. Look that i am
using to parse that input the inecuation "rule".

--------------------------------------------------------------------------
2) Other thing is about invalid tokens, i manage to treat then
overriding a member function of the lexer called nextToken(), like this:

@lexer::members
{
     @Override
     public Token nextToken()
     {
         while (true) {
             state.token = null;
             state.channel = Token.DEFAULT_CHANNEL;
             state.tokenStartCharIndex = input.index();
             state.tokenStartCharPositionInLine = 
input.getCharPositionInLine();
             state.tokenStartLine = input.getLine();
             state.text = null;
             if ( input.LA(1)==CharStream.EOF ) {
                 return Token.EOF_TOKEN;
             }
             try {
                 mTokens();
                 if ( state.token==null ) {
                     emit();
                 }
                 else if ( state.token==Token.SKIP_TOKEN ) {
                     continue;
                 }
                 return state.token;
             }
             catch (RecognitionException re) {
                 reportError(re);
                 throw new RuntimeException("Invalid Character  : " + 
(char) (re.c));
// or throw Error
             }
         }
     }
}
?It's that the correct way?

Ok, so far this.
Sorry for the bombing III of emails!. Thanks for advance.
V?ctor.


El 03/02/2011 12:36 a.m., Victor Giordano escribi?:
> I am watching when i use the generated lexer and parser (Generated from
> the LinearMath grammar below) in a java application is that do really
> emit somekind of warning about two thinks:
>
> 1)extraneous input '<some_token>' expecting EOF *Only when a append the
> EOF token at the end of the rule*
> 2)required (...)+ loop did not match anything at input <some_token>'
> *Only when i use the '+' quantity token modifier*
>
> where <some_token> there is actually token.
>
> In fact the warnings is actually are a strings sended to the standart
> error.
>
> The matter is, again, how do i do to manage those errors altering normal
> flow with a real exception and treating it like one.
> Ok, so far this.
> Sorry for the bombing of emails!. Thanks for advance.
> V?ctor.

From micha-1 at fantasymail.de  Fri Feb  4 00:30:53 2011
From: micha-1 at fantasymail.de (Micha)
Date: Fri, 04 Feb 2011 09:30:53 +0100
Subject: [antlr-interest] How do I accept input ending with a newline
 *or* EOF?
In-Reply-To: <AANLkTikDihVyW-RBiuR1B-p5YXcCkc_Ez2VTojdp5F0x@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>	<AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>	<AANLkTimNT4YLYcekH826=NtC1Ofd1xCb-UDW-yqY4vBt@mail.gmail.com>	<AANLkTin3iQc2wri7U5TEiQN=d3-Bi8cFL9pLD4dM_NmV@mail.gmail.com>
	<AANLkTikDihVyW-RBiuR1B-p5YXcCkc_Ez2VTojdp5F0x@mail.gmail.com>
Message-ID: <4D4BB93D.9020102@fantasymail.de>

Am 04.02.2011 04:21, schrieb chris king:
> Suppose I want to create a grammar to recognize integers with one integer
> per line. Additionally suppose I want a preprocessor such that I can wrap
> groups of integers in #if [expr] ... #endif where if expr has basic
> arithmetic operations. If expr evaluates to greater than 0 the enclosed
> lines are lexed else they are not. What would that grammar (or even just
> lexer) look like?
> 
> So for example, it should recognize this input and return an integer token
> 10 but not a token for 20. It should also ignore the comment.
> 
> 
> 10
> #if (2-1)*3-10
> 20 and just ignore this comment
> #endif
> 
> I cannot come up with a lexer that can lex the whole file without knowing if
> it's in an active #if\#endif block so I'm stuck before I can even begin my
> grammar.


I think it would be better to open a new thread for a new question :-)

The lexer itself isn't that suited to capture blockstructures, but if
you really want to do it, you can maintain yourself a stack of states,
onto which you push something like 'IN_BLOCK' after seeing the #if and
remove it after seeing the #endif  (if you want to nest the blocks)
You lex the tokens as normal, but when inside a block you return just a
NL or similar. You could use this to prescan the input ....
Maybe some book about compiler construction or DSL could help also (the
antlr dsl book is really helpful)

cheers,
 Michael



From marco at mtsystems.ch  Fri Feb  4 05:38:44 2011
From: marco at mtsystems.ch (Marco Trudel)
Date: Fri, 04 Feb 2011 14:38:44 +0100
Subject: [antlr-interest] Segfault in C target on EOF error reporting
In-Reply-To: <75054fbd467822e1440f3a023cd000aa@mail.gmail.com>
References: <4D4AB483.50802@mtsystems.ch>
	<75054fbd467822e1440f3a023cd000aa@mail.gmail.com>
Message-ID: <4D4C0164.2000409@mtsystems.ch>

On 03.02.2011 17:01, Jim Idle wrote:
> I have already fixed this I think.

No. libantlr3c-3.3-SNAPSHOT downloaded 30min ago still crashes.

> It is because the EOF token is trying
> to be duplicated or otherwise modified.

It's because recognizer->state->tokenNames is accessed with the EOF 
token type (-1). The garbage returned is then handled as a string and 
strlen segfaults. My patch just specially handles the EOF type. No idea 
if that's the right fix.

> However, the runtime error message
> routine is just an example - you are expected to implement your own that
> does something sensible ;-)

I have seen you telling that to people over and over again. This 
surprises me a little. I would expect that a majority of people just 
want to have default error message and have no time/interest in diving 
into the antlr internals to write it themselves. If someone still has to 
do that, he can invest the time and energy to achieve it.
Actually in 2007 you seemed to have the same idea: "... I am going to 
produce an error message handler that will do for most things ..." [1].

Anyway, actually do have my own "displayRecognitionError" routines. But 
it's just a copy-paste from yours with the difference that I put 
everything into a pANTLR3_STRING so that I can show it to the user in 
the GUI.


Thanks
Marco

[1] http://markmail.org/message/27ezjtsvfiglnuyk


> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Marco Trudel
>> Sent: Thursday, February 03, 2011 5:58 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Segfault in C target on EOF error reporting
>>
>> Dear Jim
>>
>> If there's an EOF in the grammar, the C target crashes on input with
>> certain syntax errors. I wrote this quick fix. I hope it at least helps
>> you pinpointing the problem.
>>
>> Any thoughts/comments?
>>
>>
>> Thanks
>> Marco
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From lefevrol at yahoo.com  Fri Feb  4 12:08:18 2011
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 04 Feb 2011 21:08:18 +0100
Subject: [antlr-interest] [SPAM] Tree attribute for tree grammar rule: how?
Message-ID: <iihmbn$a6t$1@dough.gmane.org>

I am looking at TDAR $6.4 and it is clear that tree
grammar rules have no tree attribute. How best to
give them one? After all, they are derived from a
parser rule, often in 1-to-1 correspondence, and the
parser rule does have such an attribute.

Thanks,

-- O.L.


From qsmgmt at earthlink.net  Fri Feb  4 12:55:02 2011
From: qsmgmt at earthlink.net (Alan Lehotsky)
Date: Fri, 4 Feb 2011 15:55:02 -0500 (GMT-05:00)
Subject: [antlr-interest] syntactic predicates and Kleene star...
Message-ID: <6573328.1296852902039.JavaMail.root@elwamui-royal.atl.sa.earthlink.net>

In retrospect, this is probably obvious, but maybe someone else is puzzling over this situation.

I have a SQL grammar with a rule

  dotted_name :
         ID ( DOT^ ID)*
  ;

which works correctly, but ANTLR produced the error message

warning(200): plsql.g:1014:8: Decision can match input such as "DOT ID" using multiple alternatives: 1,2
As a result, alternative(s) 2 were disabled for that input

I tried following the advice of using a syntactic predicate, changing the rule to

         ID (DOT)=>(DOT^ ID)*

but that didn't stifle the warning.  I finally realized that I wanted zero-or-more predicted DOT ID's, and rewrote it as

         ID ( (DOT)=>(DOT ^ ID ))*

and the warning went away.


From kingces95 at gmail.com  Fri Feb  4 14:46:48 2011
From: kingces95 at gmail.com (chris king)
Date: Fri, 4 Feb 2011 14:46:48 -0800
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTi=vC+7W-chQ+0VagOOd2v2DmisZ7QR+rwjoxWus@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<AANLkTikUs2wwdXKJBxGLmbsvXa44XOmgL4OmGRsiFCsO@mail.gmail.com>
	<AANLkTimNT4YLYcekH826=NtC1Ofd1xCb-UDW-yqY4vBt@mail.gmail.com>
	<AANLkTi=vC+7W-chQ+0VagOOd2v2DmisZ7QR+rwjoxWus@mail.gmail.com>
Message-ID: <AANLkTikc6qtnsCNnHhCLjdaxxdLnsPn-=SWGMv2z6XhW@mail.gmail.com>

Douglas, thanks for the reply. Yes, it occurred to me to try implement the
#if and #ifdef in the lexer. The problem I encountered is that the
pre-processor statements can contain arithmetic expressions. I don't think
those can be expressed in a lexer alone.

It also occurred to me the channels might be of use. The problem I
encountered was that channels only take affect after a lexer rule has been
chosen and so don't seem to address the root problem which is that depending
on the context or the parser I need some lexer rules to be enabled and
others disabled. So for example, the text inside a disabled block need not
be parsable by the compiler and so if I'm inside a disabled block I simply
want to lex everything upto the #endif into one big token. That rule to
select everything upto the next #endif is very aggressive and as such will
usually end up with the longest match and hence selected when it should be
-- in the case where the #if block is enabled.

I think anyone building a C#, C, or Java compiler must have encountered this
issue. The only way I can see around this problem is to lex portions of the
input string twice. But ANTLR being so nice to work with in other respects
makes me wonder if I'm not missing some convention that would allow me to
lex the string only once. To do that I think I'd need lex rules to be
enabled and disabled at runtime.

Thanks,
Chris

On Fri, Feb 4, 2011 at 10:44 AM, Douglas Godfrey
<douglasgodfrey at gmail.com>wrote:

> Implement #if and #ifdef by parsing the preprocessor statements in the
> lexer and setting the
> channel for all non preprocessor tokens based on whether  the proprocessor
> statements
> select the "true" case.
>
> The parser would only see the lexer tokens that were enabled by the #if and
> #ifdef statements.
>
>
> On Thu, Feb 3, 2011 at 7:00 PM, chris king <kingces95 at gmail.com> wrote:
>
>> Kirby thanks! That helped a ton and thanks for that + vs * tip. A real
>> life
>> saver.
>>
>> I have another problem and I'm hoping you can point me in the right
>> direction. I'm trying to chose between two approaches for building for a
>> pre-processor. The first (1) approach is to have the pre-processor pass
>> tokens to the compiler. The second (2) approach is to have the
>> pre-processor
>> pass strings (those that have not been #if defed out) to the compiler. The
>> former seems more natural but complicates the lexer because the the lexing
>> is context sensitive (see below). The latter simplifies both pre-processor
>> and compiler but feels ugly because it requires the input to be lexered
>> twice.
>>
>> As I said, the problem I encountered with the first approach is that the
>> lexer is context sensitive. For example, consider the following toy
>> grammar
>> where pre-processor identifiers can be upper or lower case but language
>> identifiers can only be lower case. The input "'#define HELLO" parses fine
>> but "#define hello" fails because (I assume) "hello" could be match by two
>> lexer productions -- ID and PP_ID. I tried inserting a predicate in ID
>> (e.g. ID : {false}?=> 'a'..'z';) to provide context but if I do then
>> ANTLRWorks spins when I try to interpret any input. I've also tried
>> fiddling
>> with the order of ID and PP_ID but each ordering has it's own problems
>> (e.g.
>> can only make one of the following for a given order: { "hello", "#define
>> hello" }).
>>
>> start
>>        : input*
>>        ;
>> input
>>        : ID+ (NEW_LINE | EOF)
>>        | pp_input
>>        ;
>>
>> pp_input
>>        : '#' 'define' PP_ID+ (NEW_LINE | EOF)
>>        ;
>>
>> NEW_LINE
>>        : '\r' '\n'
>>        ;
>> ID
>>        : 'a'..'z';
>>
>> PP_ID
>>        : 'a'..'z'
>>        | 'A'..'Z';
>>
>> This seems like a standard 101 type problem space so hopefully you've
>> explored it and can direct me! :)
>>
>> Thanks,
>> Chris
>>
>> On Mon, Jan 31, 2011 at 4:03 PM, Kirby Bohling <kirby.bohling at gmail.com
>> >wrote:
>>
>> > No idea if it is related to the problem, but you likely really want to
>> > have ID use a '+' not a '*' after ('a'..'z'), otherwise ID to match
>> > nothing and be cause an infinite loop while lexing at points
>> > (generally speaking, any time rules like
>> >
>> > bar: (foo)*;
>> >
>> > foo: (baz)*;
>> >
>> > You are just asking for problems.  Whether foo and baz are lexers or
>> > parser rules.  Every time I do that it is a mistake (or a failure of
>> > imagination).  Generally speaking, low level items you want to force
>> > the consumption of something, and make them optional at a higher level
>> > (at least that has been true in my limited experience).
>> >
>> > I believe the EOF is precisely because of the lack of a + vs. a *
>> > there.  As rather then consume the EOF, you can spin consuming nothing
>> > forever.  But I didn't actually crack out ANTLR and check.
>> >
>> > Also, unless you really know what you are doing, you might want to
>> > skip using constants in your parser rules.  While many the examples do
>> > so, from what I've read, it can have complex interaction (it generates
>> > a token for it internally that can't be seen).  I'd try making a
>> > NEWLINE token and seeing if that helps make the error message any
>> > clearer.
>> >
>> > Kirby
>> >
>> >
>> > On Mon, Jan 31, 2011 at 5:49 PM, chris king <kingces95 at gmail.com>
>> wrote:
>> > > Hello! I'm trying to write a grammar that will accept lines of zero or
>> > more
>> > > IDs and I'd like to allow the last line to end in a new line *or *EOF.
>> I
>> > > came up with this grammar:
>> > >
>> > > grammar test;
>> > >
>> > > start
>> > >  : input*
>> > >  ;
>> > >
>> > > input
>> > >  : ID* ('\n' | EOF)
>> > >  ;
>> > >
>> > > ID
>> > >  : ('a'..'z')*
>> > >  ;
>> > >
>> > > WHITESPACE
>> > >  : ' '+ {skip();}
>> > >  ;
>> > >
>> > > But got this error from ANTLRWorks saying start has un-reachable
>> > > alternatives:
>> > >
>> > > [15:38:33] error(201): test2.g:9:5: The following alternatives can
>> never
>> > be
>> > > matched: 2
>> > >
>> > > If I remove the reference to EOF than everything works but I have to
>> end
>> > the
>> > > last line in a new line and I don't want to have to do that. Any
>> > > suggestions?
>> > >
>> > > Thanks,
>> > > Chris
>> > >
>> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> > >
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From stephen.mcgruer at gmail.com  Fri Feb  4 16:14:27 2011
From: stephen.mcgruer at gmail.com (Stephen McGruer)
Date: Sat, 5 Feb 2011 00:14:27 +0000
Subject: [antlr-interest] Correct way to handle custom errors?
Message-ID: <AANLkTimrbPBecxdLha1X9YZGjoqbHOT654sYibes-WtA@mail.gmail.com>

I was wondering what the "correct" way to handle custom errors in ANTLR 3
was. I'm implementing a parser/lexer for a small subset of C, and want to
give better error messages than the general mismatched tokens error.

 From this post -
http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery I
implemented my own error reporting class which grabs the recognition
exception from the Parser. However, I'm then unsure about the best approach
is to start recognising errors - from things as basic as replacing the name
of my variable name rule (ID) with a more user-friendly term such as
"identifier", to more complex things such as giving nice error messages when
the user attempts to set a variable to a value that isn't an integer or
character (the only two allowable types in my subset). The recognition
exception doesn't seem to be too useful - getMessage() seems to return null.
I assume that the getErrorHeader and getErrorMessage methods do something
different to get information. The only way I can think of checking for
errors at the moment is manually scraping the strings returned by these
methods, which seems... clumsy.

So, is there a sort of "normal" or "usual" method to approaching
parser/lexer error message handling when doing programming language parsing?

I hope the above contained enough information, and made sense.

Thanks,
Stephen

From michael.bedward at gmail.com  Fri Feb  4 22:20:31 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 5 Feb 2011 17:20:31 +1100
Subject: [antlr-interest] Catching errors
In-Reply-To: <4D4B7C87.3090706@yahoo.com.ar>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>
	<4D49ADEC.8040406@yahoo.com.ar> <1296678731.7731.14.camel@gecko>
	<4D4A1160.80102@yahoo.com.ar> <4D4A22AF.1050205@yahoo.com.ar>
	<4D4B7C87.3090706@yahoo.com.ar>
Message-ID: <AANLkTi=5XA7B=HTLwZLk3XipXRoOQJD02bmRs=Y7fxns@mail.gmail.com>

Hello Victor,

This question that I posted last week describes how I am raising an
error on unwanted input before EOF which, I think, is similar to what
you are trying to do...

http://antlr.1301665.n2.nabble.com/best-practice-for-unwanted-input-before-EOF-td5964792.html

I was looking for a better way (no one has replied so far) but it does work.

Michael

On 4 February 2011 15:11, Victor Giordano <power_giordo at yahoo.com.ar> wrote:
> Hello people, two days a posted this problem and i still having troubles
> with this matter, pliz give a hand, if you can of course....
> I need to handle the errors of parsing in order to display a nice user
> message.
>
> I am watching when i use the generated lexer and parser (Generated from
> the LinearMath grammar below) in a java application is that do really
> emit somekind of warning about two thinks:
>
> 1)extraneous input '<some_token>' expecting EOF *Only when a append the
> EOF token at the end of the rule*
> 2)required (...)+ loop did not match anything at input <some_token>'
> *Only when i use the '+' quantity token modifier*
>
> where <some_token> there is actually token.
>
> The matter is, again, how do i catch in a exception those errors. I show
> below the grammar with an input example to try for yourself:
>
> grammar LinearMath;
>
> tokens
> {
> ? ? ? PLUS ? ? = '+';
> ? ? ? MINUS ? ? = '-';
> ? ? ? MUL ? ? ? ?= '*';
> ? ? ? DIV ? ? ? ?= '/';
> }
>
> inecuation: ? ?linexpr ((RELATIONSHIP) linexpr)+ EOF!;
> catch [UnwantedTokenException ute]
> {
> ? ? System.out.println ("inecuation UnwantedTokenException ?" +
> ute.toString());
> ? ? throw ute;
> }
>
> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)* EOF;
>
> linterm : factor? ID;
>
> expr returns [double value]
> ? ? ? : e=term {$value = $e.value;}
> ? ? ? ( ? ?PLUS e=term {$value += $e.value;}
> ? ? ? | ? ?MINUS e=term {$value -= $e.value;}
> ? ? ? )*;
>
> term returns [double value]
> ? ? ? : f=factor {$value = $f.value;}
> ? ? ? ( ? ?MUL f=factor {$value *= $f.value;}
> ? ? ? | ? ?DIV f=factor {$value /= $f.value;}
> ? ? ? )*;
>
> factor returns [double value]
> ? ? ? : DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
> ? ? ? | '(' e=expr ')'{$value = $e.value;};
>
> ID ?: ? ?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>
> DOUBLE
> ? ? ? : ? ('0'..'9')+
> ? ? ? | ? ?('0'..'9')+ '.' ('0'..'9')* EXPONENT?
> ? ? ? ? | ? '.' ('0'..'9')+ EXPONENT?
> ? ? ? ? | ? ('0'..'9')+ EXPONENT
> ? ? ? ? ;
>
> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>
> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
>
> WS ?: ? (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
>
>
> RELATIONSHIP : ? ?'<'|'<='|'='|'>'|'>=';
>
> and with the following input: "x< ?y x"
> that isn't a valid inecuation beacause the y x must have a binary
> aritmetic operator (PLUS OR MINUS). The parser do his job very well, he
> consume the "x" then "<" later "y" and when it reachs the seconds "x" it
> emits an "UnwantedTokenException". The think is, that i am not being
> able to catch it, and display an error to the final user. Look that i am
> using to parse that input the inecuation "rule".
>
> --------------------------------------------------------------------------
> 2) Other thing is about invalid tokens, i manage to treat then
> overriding a member function of the lexer called nextToken(), like this:
>
> @lexer::members
> {
> ? ? @Override
> ? ? public Token nextToken()
> ? ? {
> ? ? ? ? while (true) {
> ? ? ? ? ? ? state.token = null;
> ? ? ? ? ? ? state.channel = Token.DEFAULT_CHANNEL;
> ? ? ? ? ? ? state.tokenStartCharIndex = input.index();
> ? ? ? ? ? ? state.tokenStartCharPositionInLine =
> input.getCharPositionInLine();
> ? ? ? ? ? ? state.tokenStartLine = input.getLine();
> ? ? ? ? ? ? state.text = null;
> ? ? ? ? ? ? if ( input.LA(1)==CharStream.EOF ) {
> ? ? ? ? ? ? ? ? return Token.EOF_TOKEN;
> ? ? ? ? ? ? }
> ? ? ? ? ? ? try {
> ? ? ? ? ? ? ? ? mTokens();
> ? ? ? ? ? ? ? ? if ( state.token==null ) {
> ? ? ? ? ? ? ? ? ? ? emit();
> ? ? ? ? ? ? ? ? }
> ? ? ? ? ? ? ? ? else if ( state.token==Token.SKIP_TOKEN ) {
> ? ? ? ? ? ? ? ? ? ? continue;
> ? ? ? ? ? ? ? ? }
> ? ? ? ? ? ? ? ? return state.token;
> ? ? ? ? ? ? }
> ? ? ? ? ? ? catch (RecognitionException re) {
> ? ? ? ? ? ? ? ? reportError(re);
> ? ? ? ? ? ? ? ? throw new RuntimeException("Invalid Character ?: " +
> (char) (re.c));
> // or throw Error
> ? ? ? ? ? ? }
> ? ? ? ? }
> ? ? }
> }
> ?It's that the correct way?
>
> Ok, so far this.
> Sorry for the bombing III of emails!. Thanks for advance.
> V?ctor.
>
>
> El 03/02/2011 12:36 a.m., Victor Giordano escribi?:
>> I am watching when i use the generated lexer and parser (Generated from
>> the LinearMath grammar below) in a java application is that do really
>> emit somekind of warning about two thinks:
>>
>> 1)extraneous input '<some_token>' expecting EOF *Only when a append the
>> EOF token at the end of the rule*
>> 2)required (...)+ loop did not match anything at input <some_token>'
>> *Only when i use the '+' quantity token modifier*
>>
>> where <some_token> there is actually token.
>>
>> In fact the warnings is actually are a strings sended to the standart
>> error.
>>
>> The matter is, again, how do i do to manage those errors altering normal
>> flow with a real exception and treating it like one.
>> Ok, so far this.
>> Sorry for the bombing of emails!. Thanks for advance.
>> V?ctor.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From pvginkel at gmail.com  Sat Feb  5 01:25:34 2011
From: pvginkel at gmail.com (Pieter van Ginkel)
Date: Sat, 5 Feb 2011 10:25:34 +0100
Subject: [antlr-interest] Parsing OpenEdge (4GL database language)
 without preprocessor phase
In-Reply-To: <AANLkTin-hXx7Ais7C7T8wn2NunSEEDEJTriC+LHoB9hE@mail.gmail.com>
References: <AANLkTi=ArrZ3NqozdgtFUhuujA6FqTqJEvE13kPY+U4Z@mail.gmail.com>
	<AANLkTi=tG_gWN=zZP6Ko5oEXLRCy=mRm8VUb_acCpZ8B@mail.gmail.com>
	<AANLkTinnWS+i2OP4J_9Qt=mM+g82Es4Xjrd_UK81W5Pw@mail.gmail.com>
	<AANLkTin-hXx7Ais7C7T8wn2NunSEEDEJTriC+LHoB9hE@mail.gmail.com>
Message-ID: <AANLkTi=Cw8oAoPFn1355ozVkk6MPG_0QgnjRDwEPb2h2@mail.gmail.com>

I've found the examples on how to parse includes from the lexer. These looks
very promising, but I would like some guidance on a specific issue.

My source language allows for the following construct:

File myinc.i:

message "{&a}".

File userid.i:

userid()

And the calling file:

{myinc.i a="Welcome :~" + ~{userid.i~} + ~""}

The preprocessor expands this to:

message "Welcome :" + userid() + "".

What happens here is that the parameters of the include file rewrite its
contents. From what I've seen I would really like to solve this in the
lexer, but I can't see how I could do this.

Suggestions are welcome.

On Mon, Jan 31, 2011 at 2:53 AM, Douglas Godfrey
<douglasgodfrey at gmail.com>wrote:

> Yes. The text of the token {&a} can be replaced in the lexer so the parser
> would see the value 7
>
>
> On Sun, Jan 30, 2011 at 9:24 AM, Pieter van Ginkel <pvginkel at gmail.com>wrote:
>
>> This sounds terrific. Will ANTLR treat the contents of {myinc.i} as part
>> of the original file?
>>
>> One more question. The includes are parameterized, e.g.
>>
>> {myinc.i a=7}
>>
>> and the contents of myinc.i:
>>
>> {&a} * 14
>>
>> Is this also possible?
>>
>> On Fri, Jan 28, 2011 at 11:58 PM, Douglas Godfrey <
>> douglasgodfrey at gmail.com> wrote:
>>
>>> Antlr can implement includes inline in the lexer with a stacked input
>>> stream.
>>> When the lexer encounters {myinc.i} it would open a new stream and switch
>>> to it
>>> for the tokens "7", "*" and "14" and switch back to the original stream
>>> when it
>>> reached EOF in the myinc.i file.
>>>
>>> The 3 tokens from myinc.i woild have the file name, line and column from
>>> the
>>> include file. The text {myinc.i} would be consumed by the lexer without
>>> any
>>> generated token.
>>>
>>> On Fri, Jan 28, 2011 at 7:56 AM, Pieter van Ginkel <pvginkel at gmail.com>wrote:
>>>
>>>> I need to write a parser for OpenEdge (a 4GL database language), but I
>>>> need
>>>> to preserve facts of the source files that would otherwise be lost
>>>> through
>>>> the preprocessor.
>>>>
>>>> E.g., the following contrived example:
>>>>
>>>> assign customer.name = {myinc.i}.
>>>>
>>>> And an include myinc.i with the contents:
>>>>
>>>> 7 * 14
>>>>
>>>> I need to have an AST that contains the fact that customer.name was
>>>> assigned
>>>> with {myinc.i} and not 7 * 14. The includes are normally processed using
>>>> a
>>>> preprocessor, so theoretically it's possible that the includes are
>>>> accessed
>>>> anywhere within a file (not in a neat location like after the assign in
>>>> the
>>>> above example). However, the code base is quite clean and this shouldn't
>>>> pose much of a problem.
>>>>
>>>> The reason I need this is that I am writing an application for source
>>>> analysis for which I need to know every detail of the source file.
>>>>
>>>> Can this be done with ANTLR? Any tips?
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>
>

From micha-1 at fantasymail.de  Sat Feb  5 08:26:55 2011
From: micha-1 at fantasymail.de (Micha)
Date: Sat, 5 Feb 2011 17:26:55 +0100
Subject: [antlr-interest] How do I accept input ending with a newline
	*or* EOF?
In-Reply-To: <AANLkTikc6qtnsCNnHhCLjdaxxdLnsPn-=SWGMv2z6XhW@mail.gmail.com>
References: <AANLkTik37HsGVpZGed+kDfKmaoOyZjBg9jjpawuq4n1i@mail.gmail.com>
	<AANLkTi=vC+7W-chQ+0VagOOd2v2DmisZ7QR+rwjoxWus@mail.gmail.com>
	<AANLkTikc6qtnsCNnHhCLjdaxxdLnsPn-=SWGMv2z6XhW@mail.gmail.com>
Message-ID: <201102051726.56083.micha-1@fantasymail.de>

you could also override the nextToken method in your lexer class to overread 
tokens until a flag (maybe skip) becomes false:

. at Override
.Token nextToken() {
.	do {
.          Token = super.nextToken();
.      } while (skip == true || token == #if | token == #endif );
.	return token;
.}


And in your lexer rules for '#if' and '#endif' you set skip according to the 
expression result. And you have to parse your expression to do that. So after 
reading the text after '#if' until the end of the line, parse this text to get 
the result and set your flag.

cheers
 Michael

From jimi at temporal-wave.com  Sat Feb  5 08:28:15 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 5 Feb 2011 08:28:15 -0800
Subject: [antlr-interest] Correct way to handle custom errors?
In-Reply-To: <AANLkTimrbPBecxdLha1X9YZGjoqbHOT654sYibes-WtA@mail.gmail.com>
References: <AANLkTimrbPBecxdLha1X9YZGjoqbHOT654sYibes-WtA@mail.gmail.com>
Message-ID: <530276e5c577783110319275bc0fdc6e@mail.gmail.com>

If you download the source code to the Java FX compiler you will have a
complete example to work from, assuming a Java target. Start by creating a
superclass for the parser and overriding various error reporting points.
The JavaFX compiler will show you how to do that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stephen McGruer
> Sent: Friday, February 04, 2011 4:14 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Correct way to handle custom errors?
>
> I was wondering what the "correct" way to handle custom errors in ANTLR
> 3 was. I'm implementing a parser/lexer for a small subset of C, and
> want to give better error messages than the general mismatched tokens
> error.
>
>  From this post -
> http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery I
> implemented my own error reporting class which grabs the recognition
> exception from the Parser. However, I'm then unsure about the best
> approach is to start recognising errors - from things as basic as
> replacing the name of my variable name rule (ID) with a more user-
> friendly term such as "identifier", to more complex things such as
> giving nice error messages when the user attempts to set a variable to
> a value that isn't an integer or character (the only two allowable
> types in my subset). The recognition exception doesn't seem to be too
> useful - getMessage() seems to return null.
> I assume that the getErrorHeader and getErrorMessage methods do
> something different to get information. The only way I can think of
> checking for errors at the moment is manually scraping the strings
> returned by these methods, which seems... clumsy.
>
> So, is there a sort of "normal" or "usual" method to approaching
> parser/lexer error message handling when doing programming language
> parsing?
>
> I hope the above contained enough information, and made sense.
>
> Thanks,
> Stephen
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From power_giordo at yahoo.com.ar  Sat Feb  5 10:41:36 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Sat, 05 Feb 2011 15:41:36 -0300
Subject: [antlr-interest] [Bulk] Re:  Catching errors
In-Reply-To: <AANLkTi=5XA7B=HTLwZLk3XipXRoOQJD02bmRs=Y7fxns@mail.gmail.com>
References: <OF58784A7A.ECCC8EED-ON0025782B.004CC4CA-C125782B.004E8135@amadeus.com>	<4D49ADEC.8040406@yahoo.com.ar>	<1296678731.7731.14.camel@gecko>	<4D4A1160.80102@yahoo.com.ar>	<4D4A22AF.1050205@yahoo.com.ar>	<4D4B7C87.3090706@yahoo.com.ar>
	<AANLkTi=5XA7B=HTLwZLk3XipXRoOQJD02bmRs=Y7fxns@mail.gmail.com>
Message-ID: <4D4D99E0.8000305@yahoo.com.ar>

Thanks Michael! I will take a look.. as far as we know, there are many 
ways to handle grammars errors, but i have certainly doubts about this, 
beacause the catch statement inside the grammar (at the bottom of the 
parser rule) doesn't catch the errors that suggest or, most probably, 
i'm not understanding how it work's... but, again, as far i see, i am 
not the only one having problems with this matter.

I hope to put an end to that je!.
Well thanks again!.

El 05/02/2011 03:20 a.m., Michael Bedward escribi?:
> Hello Victor,
>
> This question that I posted last week describes how I am raising an
> error on unwanted input before EOF which, I think, is similar to what
> you are trying to do...
>
> http://antlr.1301665.n2.nabble.com/best-practice-for-unwanted-input-before-EOF-td5964792.html
>
> I was looking for a better way (no one has replied so far) but it does work.
>
> Michael
>
> On 4 February 2011 15:11, Victor Giordano<power_giordo at yahoo.com.ar>  wrote:
>> Hello people, two days a posted this problem and i still having troubles
>> with this matter, pliz give a hand, if you can of course....
>> I need to handle the errors of parsing in order to display a nice user
>> message.
>>
>> I am watching when i use the generated lexer and parser (Generated from
>> the LinearMath grammar below) in a java application is that do really
>> emit somekind of warning about two thinks:
>>
>> 1)extraneous input '<some_token>' expecting EOF *Only when a append the
>> EOF token at the end of the rule*
>> 2)required (...)+ loop did not match anything at input<some_token>'
>> *Only when i use the '+' quantity token modifier*
>>
>> where<some_token>  there is actually token.
>>
>> The matter is, again, how do i catch in a exception those errors. I show
>> below the grammar with an input example to try for yourself:
>>
>> grammar LinearMath;
>>
>> tokens
>> {
>>        PLUS     = '+';
>>        MINUS     = '-';
>>        MUL        = '*';
>>        DIV        = '/';
>> }
>>
>> inecuation:    linexpr ((RELATIONSHIP) linexpr)+ EOF!;
>> catch [UnwantedTokenException ute]
>> {
>>      System.out.println ("inecuation UnwantedTokenException  " +
>> ute.toString());
>>      throw ute;
>> }
>>
>> linexpr : (MINUS|PLUS)? linterm ((PLUS|MINUS) linterm)* EOF;
>>
>> linterm : factor? ID;
>>
>> expr returns [double value]
>>        : e=term {$value = $e.value;}
>>        (    PLUS e=term {$value += $e.value;}
>>        |    MINUS e=term {$value -= $e.value;}
>>        )*;
>>
>> term returns [double value]
>>        : f=factor {$value = $f.value;}
>>        (    MUL f=factor {$value *= $f.value;}
>>        |    DIV f=factor {$value /= $f.value;}
>>        )*;
>>
>> factor returns [double value]
>>        : DOUBLE {$value = Double.parseDouble($DOUBLE.text);}
>>        | '(' e=expr ')'{$value = $e.value;};
>>
>> ID  :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>>
>> DOUBLE
>>        :   ('0'..'9')+
>>        |    ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
>>          |   '.' ('0'..'9')+ EXPONENT?
>>          |   ('0'..'9')+ EXPONENT
>>          ;
>>
>> fragment EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>>
>> NEWLINE:'\r'? '\n' { $channel = HIDDEN; };
>>
>> WS  :   (' '|'\t'|'\n'|'\r')+ { $channel = HIDDEN; };
>>
>>
>> RELATIONSHIP :    '<'|'<='|'='|'>'|'>=';
>>
>> and with the following input: "x<    y x"
>> that isn't a valid inecuation beacause the y x must have a binary
>> aritmetic operator (PLUS OR MINUS). The parser do his job very well, he
>> consume the "x" then "<" later "y" and when it reachs the seconds "x" it
>> emits an "UnwantedTokenException". The think is, that i am not being
>> able to catch it, and display an error to the final user. Look that i am
>> using to parse that input the inecuation "rule".
>>
>> --------------------------------------------------------------------------
>> 2) Other thing is about invalid tokens, i manage to treat then
>> overriding a member function of the lexer called nextToken(), like this:
>>
>> @lexer::members
>> {
>>      @Override
>>      public Token nextToken()
>>      {
>>          while (true) {
>>              state.token = null;
>>              state.channel = Token.DEFAULT_CHANNEL;
>>              state.tokenStartCharIndex = input.index();
>>              state.tokenStartCharPositionInLine =
>> input.getCharPositionInLine();
>>              state.tokenStartLine = input.getLine();
>>              state.text = null;
>>              if ( input.LA(1)==CharStream.EOF ) {
>>                  return Token.EOF_TOKEN;
>>              }
>>              try {
>>                  mTokens();
>>                  if ( state.token==null ) {
>>                      emit();
>>                  }
>>                  else if ( state.token==Token.SKIP_TOKEN ) {
>>                      continue;
>>                  }
>>                  return state.token;
>>              }
>>              catch (RecognitionException re) {
>>                  reportError(re);
>>                  throw new RuntimeException("Invalid Character  : " +
>> (char) (re.c));
>> // or throw Error
>>              }
>>          }
>>      }
>> }
>> ?It's that the correct way?
>>
>> Ok, so far this.
>> Sorry for the bombing III of emails!. Thanks for advance.
>> V?ctor.
>>
>>
>> El 03/02/2011 12:36 a.m., Victor Giordano escribi?:
>>> I am watching when i use the generated lexer and parser (Generated from
>>> the LinearMath grammar below) in a java application is that do really
>>> emit somekind of warning about two thinks:
>>>
>>> 1)extraneous input '<some_token>' expecting EOF *Only when a append the
>>> EOF token at the end of the rule*
>>> 2)required (...)+ loop did not match anything at input<some_token>'
>>> *Only when i use the '+' quantity token modifier*
>>>
>>> where<some_token>  there is actually token.
>>>
>>> In fact the warnings is actually are a strings sended to the standart
>>> error.
>>>
>>> The matter is, again, how do i do to manage those errors altering normal
>>> flow with a real exception and treating it like one.
>>> Ok, so far this.
>>> Sorry for the bombing of emails!. Thanks for advance.
>>> V?ctor.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>

From mr.xkurt at gmail.com  Sun Feb  6 08:04:19 2011
From: mr.xkurt at gmail.com (Pavel Martynov)
Date: Sun, 6 Feb 2011 21:04:19 +0500
Subject: [antlr-interest] Partial grammar for class counting
Message-ID: <AANLkTikY-OF6p_76Lf6B90ZCEB8vL9WQixtnaC-zKEKR@mail.gmail.com>

Hi!

I need to count the number of classes in correct C# source file. I
wrote the following grammar:

grammar CSharpClassGrammar;

options
{
? ? ? ? language=CSharp2;

}

@parser::namespace { CSharpClassGrammar.Generated }
@lexer::namespace ?{ CSharpClassGrammar.Generated }

@header
{
? ? ? ? using System;
? ? ? ? using System.Collections.Generic;

}

@members
{
? ? ? ? private List<string> _classCollector = new List<string>();
? ? ? ? public List<string> ClassCollector { get { return
_classCollector; } }

}

/*------------------------------------------------------------------
?* PARSER RULES
?*------------------------------------------------------------------*/

csfile ?: class_declaration* EOF
? ? ? ? ;

class_declaration
? ? ? ? : (ACCESSLEVEL | MODIFIERS)* PARTIAL? 'class' CLASSNAME
? ? ? ? ? class_body
? ? ? ? ? ';'?
? ? ? ? ? { _classCollector.Add($CLASSNAME.text); }
? ? ? ? ;

class_body
? ? ? ? : '{' class_declaration* '}'
? ? ? ? ;

/*------------------------------------------------------------------
?* LEXER RULES
?*------------------------------------------------------------------*/

ACCESSLEVEL
? ? ? ? : 'public' | 'internal' | 'protected' | 'private' | 'protected
internal'
? ? ? ? ;

MODIFIERS
? ? ? ? : 'static' | 'sealed' | 'abstract'
? ? ? ? ;

PARTIAL
? ? ? ? : 'partial'
? ? ? ? ;

CLASSNAME
? ? ? ? : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
? ? ? ? ;

COMMENT
? ? ? ? : '//' ~('\n'|'\r')* {$channel=HIDDEN;}
? ? ? ? | ? '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
? ? ? ? ;

WHITESPACE
? ? ? ? : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; }
? ? ? ? ;



Hi!

I need to count the number of classes in correct C# source file. I
wrote the following grammar:

grammar CSharpClassGrammar;

options
{
? ? ? ? language=CSharp2;

}

@parser::namespace { CSharpClassGrammar.Generated }
@lexer::namespace ?{ CSharpClassGrammar.Generated }

@header
{
? ? ? ? using System;
? ? ? ? using System.Collections.Generic;

}

@members
{
? ? ? ? private List<string> _classCollector = new List<string>();
? ? ? ? public List<string> ClassCollector { get { return
_classCollector; } }

}

/*------------------------------------------------------------------
?* PARSER RULES
?*------------------------------------------------------------------*/

csfile ?: class_declaration* EOF
? ? ? ? ;

class_declaration
? ? ? ? : (ACCESSLEVEL | MODIFIERS)* PARTIAL? 'class' CLASSNAME
? ? ? ? ? class_body
? ? ? ? ? ';'?
? ? ? ? ? { _classCollector.Add($CLASSNAME.text); }
? ? ? ? ;

class_body
? ? ? ? : '{' class_declaration* '}'
? ? ? ? ;

/*------------------------------------------------------------------
?* LEXER RULES
?*------------------------------------------------------------------*/

ACCESSLEVEL
? ? ? ? : 'public' | 'internal' | 'protected' | 'private' | 'protected
internal'
? ? ? ? ;

MODIFIERS
? ? ? ? : 'static' | 'sealed' | 'abstract'
? ? ? ? ;

PARTIAL
? ? ? ? : 'partial'
? ? ? ? ;

CLASSNAME
? ? ? ? : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
? ? ? ? ;

COMMENT
? ? ? ? : '//' ~('\n'|'\r')* {$channel=HIDDEN;}
? ? ? ? | ? '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
? ? ? ? ;

WHITESPACE
? ? ? ? : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; }
? ? ? ? ;

This parser correctly count empty classes (and nested classes too)
with empty class-body:

internal class DeclarationClass1
{
? ? class DeclarationClass2
? ? {
? ? ? ? public class DeclarationClass3
? ? ? ? {
? ? ? ? ? ? abstract class DeclarationClass4
? ? ? ? ? ? {
? ? ? ? ? ? }
? ? ? ? }
? ? }
}

I need to count classes with not empty body, such as:

class TestClass
{
? ? int a = 42;

? ? class Nested { }
}

I need to somehow ignore all the code that is "not a class
declaration". In the example above ignore

int a = 42;

How can I do this? May be example for other language?
Please, help!


--
with best regards, Pavel Martynov

From maxgbr at hotmail.it  Sun Feb  6 08:22:17 2011
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Sun, 6 Feb 2011 17:22:17 +0100
Subject: [antlr-interest] Partial grammar for class counting
In-Reply-To: <AANLkTikY-OF6p_76Lf6B90ZCEB8vL9WQixtnaC-zKEKR@mail.gmail.com>
References: <AANLkTikY-OF6p_76Lf6B90ZCEB8vL9WQixtnaC-zKEKR@mail.gmail.com>
Message-ID: <BLU0-SMTP100918CF2B53A3F5A4F3D3AB0E80@phx.gbl>


  Hi pavel,
Did you try to use Lexical Filter?
Have a look http://www.antlr.org/wiki/display/ANTLR3/Lexical+filters

Hope it helps
Best Regards Max


Il 06/02/2011 17:04, Pavel Martynov ha scritto:
> Hi!
>
> I need to count the number of classes in correct C# source file. I
> wrote the following grammar:
>
> grammar CSharpClassGrammar;
>
> options
> {
>          language=CSharp2;
>
> }
>
> @parser::namespace { CSharpClassGrammar.Generated }
> @lexer::namespace  { CSharpClassGrammar.Generated }
>
> @header
> {
>          using System;
>          using System.Collections.Generic;
>
> }
>
> @members
> {
>          private List<string>  _classCollector = new List<string>();
>          public List<string>  ClassCollector { get { return
> _classCollector; } }
>
> }
>
> /*------------------------------------------------------------------
>   * PARSER RULES
>   *------------------------------------------------------------------*/
>
> csfile  : class_declaration* EOF
>          ;
>
> class_declaration
>          : (ACCESSLEVEL | MODIFIERS)* PARTIAL? 'class' CLASSNAME
>            class_body
>            ';'?
>            { _classCollector.Add($CLASSNAME.text); }
>          ;
>
> class_body
>          : '{' class_declaration* '}'
>          ;
>
> /*------------------------------------------------------------------
>   * LEXER RULES
>   *------------------------------------------------------------------*/
>
> ACCESSLEVEL
>          : 'public' | 'internal' | 'protected' | 'private' | 'protected
> internal'
>          ;
>
> MODIFIERS
>          : 'static' | 'sealed' | 'abstract'
>          ;
>
> PARTIAL
>          : 'partial'
>          ;
>
> CLASSNAME
>          : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>          ;
>
> COMMENT
>          : '//' ~('\n'|'\r')* {$channel=HIDDEN;}
>          |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>          ;
>
> WHITESPACE
>          : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; }
>          ;
>
>
>
> Hi!
>
> I need to count the number of classes in correct C# source file. I
> wrote the following grammar:
>
> grammar CSharpClassGrammar;
>
> options
> {
>          language=CSharp2;
>
> }
>
> @parser::namespace { CSharpClassGrammar.Generated }
> @lexer::namespace  { CSharpClassGrammar.Generated }
>
> @header
> {
>          using System;
>          using System.Collections.Generic;
>
> }
>
> @members
> {
>          private List<string>  _classCollector = new List<string>();
>          public List<string>  ClassCollector { get { return
> _classCollector; } }
>
> }
>
> /*------------------------------------------------------------------
>   * PARSER RULES
>   *------------------------------------------------------------------*/
>
> csfile  : class_declaration* EOF
>          ;
>
> class_declaration
>          : (ACCESSLEVEL | MODIFIERS)* PARTIAL? 'class' CLASSNAME
>            class_body
>            ';'?
>            { _classCollector.Add($CLASSNAME.text); }
>          ;
>
> class_body
>          : '{' class_declaration* '}'
>          ;
>
> /*------------------------------------------------------------------
>   * LEXER RULES
>   *------------------------------------------------------------------*/
>
> ACCESSLEVEL
>          : 'public' | 'internal' | 'protected' | 'private' | 'protected
> internal'
>          ;
>
> MODIFIERS
>          : 'static' | 'sealed' | 'abstract'
>          ;
>
> PARTIAL
>          : 'partial'
>          ;
>
> CLASSNAME
>          : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>          ;
>
> COMMENT
>          : '//' ~('\n'|'\r')* {$channel=HIDDEN;}
>          |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>          ;
>
> WHITESPACE
>          : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; }
>          ;
>
> This parser correctly count empty classes (and nested classes too)
> with empty class-body:
>
> internal class DeclarationClass1
> {
>      class DeclarationClass2
>      {
>          public class DeclarationClass3
>          {
>              abstract class DeclarationClass4
>              {
>              }
>          }
>      }
> }
>
> I need to count classes with not empty body, such as:
>
> class TestClass
> {
>      int a = 42;
>
>      class Nested { }
> }
>
> I need to somehow ignore all the code that is "not a class
> declaration". In the example above ignore
>
> int a = 42;
>
> How can I do this? May be example for other language?
> Please, help!
>
>
> --
> with best regards, Pavel Martynov
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From bkiers at gmail.com  Sun Feb  6 11:19:59 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 6 Feb 2011 20:19:59 +0100
Subject: [antlr-interest] Partial grammar for class counting
In-Reply-To: <BLU0-SMTP100918CF2B53A3F5A4F3D3AB0E80@phx.gbl>
References: <AANLkTikY-OF6p_76Lf6B90ZCEB8vL9WQixtnaC-zKEKR@mail.gmail.com>
	<BLU0-SMTP100918CF2B53A3F5A4F3D3AB0E80@phx.gbl>
Message-ID: <AANLkTinKK-eNMUAxvGftL1qv++7fb6+ev0kgxLypjrpP@mail.gmail.com>

>
> Il 06/02/2011 17:04, Pavel Martynov ha scritto:
> > Hi!
> > ....
> > with best regards, Pavel Martynov
> >
>

Answered here:
http://stackoverflow.com/questions/4914073/partial-grammar-for-counting-class-count/4914224#4914224
as
well.

<http://stackoverflow.com/questions/4914073/partial-grammar-for-counting-class-count/4914224#4914224>
HTH,

Bart.

From ranco.marcus at epirion.nl  Mon Feb  7 00:25:44 2011
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Mon, 7 Feb 2011 08:25:44 +0000
Subject: [antlr-interest] Error message requires key press to continue
Message-ID: <2B65C901391C804DBB9CF9E6FE30C6F94C6883E2@sun.epirion.local>

Hi all!

We are working on an ANTLR tree grammar in which a syntax tree is created manually instead of by an ANTLR parser. We hand edit the TOKEN file and found out that if the last line does not end with a newline, ANTLR emits an error message "problems parsing vocabulary file...".

Although the error message is unnecessary, it causes no problems. The problem we are experiencing however is that a key press is needed to return to the command prompt. Since we are calling ANTLR from a custom tool in Visual Studio, the entire development environment freezes and ultimately crashes our IDE.

We haven't seen this key press behavior in other error messages and are wondering if it can be removed.

Thanks in advance,

Best regards,

Ranco Marcus




From lgcraymer at yahoo.com  Mon Feb  7 01:01:27 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 7 Feb 2011 01:01:27 -0800 (PST)
Subject: [antlr-interest] Error message requires key press to continue
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F94C6883E2@sun.epirion.local>
References: <2B65C901391C804DBB9CF9E6FE30C6F94C6883E2@sun.epirion.local>
Message-ID: <3575.23415.qm@web55907.mail.re3.yahoo.com>

Vocabulary import uses StreamTokenizer in Grammar.importTokenVocabulary(String 
vocabName).  There is a minor bug in that error recovery consumes tokens until 
TT_EOL is found; that should be either TT_EOL or TT_EOF.  You might try fixing 
that and reporting if the fix works.

--Loring


----- Original Message ----
> From: Ranco Marcus <ranco.marcus at epirion.nl>
> To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> Sent: Mon, February 7, 2011 12:25:44 AM
> Subject: [antlr-interest] Error message requires key press to continue
> 
> Hi all!
> 
> We are working on an ANTLR tree grammar in which a syntax tree is  created 
>manually instead of by an ANTLR parser. We hand edit the TOKEN file and  found 
>out that if the last line does not end with a newline, ANTLR emits an  error 
>message "problems parsing vocabulary file...".
> 
> Although the error  message is unnecessary, it causes no problems. The problem 
>we are experiencing  however is that a key press is needed to return to the 
>command prompt. Since we  are calling ANTLR from a custom tool in Visual Studio, 
>the entire development  environment freezes and ultimately crashes our IDE.
> 
> We haven't seen this  key press behavior in other error messages and are 
>wondering if it can be  removed.
> 
> Thanks in advance,
> 
> Best regards,
> 
> Ranco  Marcus
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


      

From stephen.mcgruer at gmail.com  Mon Feb  7 09:48:08 2011
From: stephen.mcgruer at gmail.com (Stephen McGruer)
Date: Mon, 7 Feb 2011 17:48:08 +0000
Subject: [antlr-interest] Correct way to handle custom errors?
In-Reply-To: <530276e5c577783110319275bc0fdc6e@mail.gmail.com>
References: <AANLkTimrbPBecxdLha1X9YZGjoqbHOT654sYibes-WtA@mail.gmail.com>
	<530276e5c577783110319275bc0fdc6e@mail.gmail.com>
Message-ID: <AANLkTikGb6p3tJ5SDtqhe1whJmU7T9znfJAAtxK29GfH@mail.gmail.com>

Jim,

Thanks for the suggestion - although I don't quite want the level of detail
you guys go into (and I don't quite understand all of it, possibly because I
don't know the JavaFX syntax!) the source code was very useful and I think
I've now got enough to put in some decent error messages.

There are two things I'm still having trouble with that I think are related
to this question strongly enough to not warrant a new thread. The first is
printing out the line that the error occurred on. I wanted to try out
mimicking the sort of print out that javac does when it encounters an error,
but I can't work out how to get access to the text of the line that is
having the problem. I read here -
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1769 - that if you
are using the CommonTokenStream you should have access to a "token" with the
information, but in my getErrorMessage override that simply returns null for
most of the errors I've tried (currently MisMatchedToken exceptions):

public String getErrorMessage(RecognitionException e, String[] tokenNames) {
    // Prints out true!
    System.out.println(e.token == null);
}

I then read that you can use the inputstream attached to the
RecognitionException instead (can't quite remember where... the official
docs?), but can't figure out how to do this. Currently I have tried casting
it from an IntStream to a CharStream (I think it will always be a CharStream
for me... maybe XD) and played with the various methods available, but none
of them seem to offer a way to just print out the current line. The most
promising looks like substring(start, stop), but I cannot find a way to get
the length of the line to give as the "stop" parameter! I also assume that
if I do this method I should mark the stream before I begin, and rewind it
once I'm done?

Alternatively, if there's a "better" way to do this when overriding the
getErrorMessage method please tell me.

The second problem I'm having is with is stopping the parser from running if
the lexer has spat out any errors. As far as I can tell, it's very possible
and easy to stop the lexer after a single error message is thrown, but I
cannot find anywhere that shows how to let the lexer continue but not let
the parser run. Since all error messages are only thrown once you call
something like "program_return parserResult = parser.program();" (i.e. the
lexer has no errors until after this line), then I can't stop it parsing the
syntactically invalid file and spitting out more (useless, imo) error
messages! Is there a 'correct' or even just any way to achieve this?

Thanks,
Stephen

On 5 February 2011 16:28, Jim Idle <jimi at temporal-wave.com> wrote:

> If you download the source code to the Java FX compiler you will have a
> complete example to work from, assuming a Java target. Start by creating a
> superclass for the parser and overriding various error reporting points.
> The JavaFX compiler will show you how to do that.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Stephen McGruer
> > Sent: Friday, February 04, 2011 4:14 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Correct way to handle custom errors?
> >
> > I was wondering what the "correct" way to handle custom errors in ANTLR
> > 3 was. I'm implementing a parser/lexer for a small subset of C, and
> > want to give better error messages than the general mismatched tokens
> > error.
> >
> >  From this post -
> > http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery I
> > implemented my own error reporting class which grabs the recognition
> > exception from the Parser. However, I'm then unsure about the best
> > approach is to start recognising errors - from things as basic as
> > replacing the name of my variable name rule (ID) with a more user-
> > friendly term such as "identifier", to more complex things such as
> > giving nice error messages when the user attempts to set a variable to
> > a value that isn't an integer or character (the only two allowable
> > types in my subset). The recognition exception doesn't seem to be too
> > useful - getMessage() seems to return null.
> > I assume that the getErrorHeader and getErrorMessage methods do
> > something different to get information. The only way I can think of
> > checking for errors at the moment is manually scraping the strings
> > returned by these methods, which seems... clumsy.
> >
> > So, is there a sort of "normal" or "usual" method to approaching
> > parser/lexer error message handling when doing programming language
> > parsing?
> >
> > I hope the above contained enough information, and made sense.
> >
> > Thanks,
> > Stephen
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gthouraya at yahoo.fr  Mon Feb  7 10:48:36 2011
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Mon, 7 Feb 2011 18:48:36 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <172546.63653.qm@web26304.mail.ukl.yahoo.com>

please, help me I have a problem.?I made a transformation program using ANTLRWorks1 .4, but the problem is that it can not accept an input of size more than 2.45KO. When the input is 2.45KO, an emplacement that shows 60M of 60M. How can I do with an input more than 2.45KO? please, help me.


      

From gthouraya at yahoo.fr  Mon Feb  7 10:53:41 2011
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Mon, 7 Feb 2011 18:53:41 +0000 (GMT)
Subject: [antlr-interest] problem of size of input
Message-ID: <924959.59435.qm@web26302.mail.ukl.yahoo.com>

please, help me I have a problem.?I made a transformation program using ANTLRWorks1 .4, but the problem is that it can not accept an input of size more than 2.45KO. When the input is 2.45KO, an emplacement that shows 60M of 60M. How can I do with an input more than 2.45KO? please, help me.



      

From stephen.mcgruer at gmail.com  Mon Feb  7 11:46:46 2011
From: stephen.mcgruer at gmail.com (Stephen McGruer)
Date: Mon, 7 Feb 2011 19:46:46 +0000
Subject: [antlr-interest] Correct way to handle custom errors?
In-Reply-To: <AANLkTikGb6p3tJ5SDtqhe1whJmU7T9znfJAAtxK29GfH@mail.gmail.com>
References: <AANLkTimrbPBecxdLha1X9YZGjoqbHOT654sYibes-WtA@mail.gmail.com>
	<530276e5c577783110319275bc0fdc6e@mail.gmail.com>
	<AANLkTikGb6p3tJ5SDtqhe1whJmU7T9znfJAAtxK29GfH@mail.gmail.com>
Message-ID: <AANLkTim82vUEGJcqG30F8phXxJ2d0XvsXxtSQFu8ifAB@mail.gmail.com>

Quick update on this. I managed to grab the current line from the
inputstream by doing the following:

CharStream cs = (CharStream) e.input;
cs.mark();
cs.seek((cs.index() - 1));
System.out.println(cs.substring(0, cs.index() - 1);
cs.rewind();

And this doesnt seem to interfere with later scanning (or parsing), but...
is this okay? It seems awfully dodgy.

Stephen

On 7 February 2011 17:48, Stephen McGruer <stephen.mcgruer at gmail.com> wrote:

> Jim,
>
> Thanks for the suggestion - although I don't quite want the level of detail
> you guys go into (and I don't quite understand all of it, possibly because I
> don't know the JavaFX syntax!) the source code was very useful and I think
> I've now got enough to put in some decent error messages.
>
> There are two things I'm still having trouble with that I think are related
> to this question strongly enough to not warrant a new thread. The first is
> printing out the line that the error occurred on. I wanted to try out
> mimicking the sort of print out that javac does when it encounters an error,
> but I can't work out how to get access to the text of the line that is
> having the problem. I read here -
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1769 - that if you
> are using the CommonTokenStream you should have access to a "token" with the
> information, but in my getErrorMessage override that simply returns null for
> most of the errors I've tried (currently MisMatchedToken exceptions):
>
> public String getErrorMessage(RecognitionException e, String[] tokenNames)
> {
>     // Prints out true!
>     System.out.println(e.token == null);
> }
>
> I then read that you can use the inputstream attached to the
> RecognitionException instead (can't quite remember where... the official
> docs?), but can't figure out how to do this. Currently I have tried casting
> it from an IntStream to a CharStream (I think it will always be a CharStream
> for me... maybe XD) and played with the various methods available, but none
> of them seem to offer a way to just print out the current line. The most
> promising looks like substring(start, stop), but I cannot find a way to get
> the length of the line to give as the "stop" parameter! I also assume that
> if I do this method I should mark the stream before I begin, and rewind it
> once I'm done?
>
> Alternatively, if there's a "better" way to do this when overriding the
> getErrorMessage method please tell me.
>
> The second problem I'm having is with is stopping the parser from running
> if the lexer has spat out any errors. As far as I can tell, it's very
> possible and easy to stop the lexer after a single error message is thrown,
> but I cannot find anywhere that shows how to let the lexer continue but not
> let the parser run. Since all error messages are only thrown once you call
> something like "program_return parserResult = parser.program();" (i.e. the
> lexer has no errors until after this line), then I can't stop it parsing the
> syntactically invalid file and spitting out more (useless, imo) error
> messages! Is there a 'correct' or even just any way to achieve this?
>
> Thanks,
> Stephen
>
>
> On 5 February 2011 16:28, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> If you download the source code to the Java FX compiler you will have a
>> complete example to work from, assuming a Java target. Start by creating a
>> superclass for the parser and overriding various error reporting points.
>> The JavaFX compiler will show you how to do that.
>>
>> Jim
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Stephen McGruer
>> > Sent: Friday, February 04, 2011 4:14 PM
>> > To: antlr-interest at antlr.org
>> > Subject: [antlr-interest] Correct way to handle custom errors?
>> >
>> > I was wondering what the "correct" way to handle custom errors in ANTLR
>> > 3 was. I'm implementing a parser/lexer for a small subset of C, and
>> > want to give better error messages than the general mismatched tokens
>> > error.
>> >
>> >  From this post -
>> > http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery I
>> > implemented my own error reporting class which grabs the recognition
>> > exception from the Parser. However, I'm then unsure about the best
>> > approach is to start recognising errors - from things as basic as
>> > replacing the name of my variable name rule (ID) with a more user-
>> > friendly term such as "identifier", to more complex things such as
>> > giving nice error messages when the user attempts to set a variable to
>> > a value that isn't an integer or character (the only two allowable
>> > types in my subset). The recognition exception doesn't seem to be too
>> > useful - getMessage() seems to return null.
>> > I assume that the getErrorHeader and getErrorMessage methods do
>> > something different to get information. The only way I can think of
>> > checking for errors at the moment is manually scraping the strings
>> > returned by these methods, which seems... clumsy.
>> >
>> > So, is there a sort of "normal" or "usual" method to approaching
>> > parser/lexer error message handling when doing programming language
>> > parsing?
>> >
>> > I hope the above contained enough information, and made sense.
>> >
>> > Thanks,
>> > Stephen
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> > email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From kingces95 at gmail.com  Mon Feb  7 21:19:19 2011
From: kingces95 at gmail.com (chris king)
Date: Mon, 7 Feb 2011 21:19:19 -0800
Subject: [antlr-interest] Simple semantic predicates in lexers in ANTLRWorks?
Message-ID: <AANLkTi=Xwxd7U96Ht_CBD7KqsPwXxK-uJYRnDhF6w8Pg@mail.gmail.com>

Hello, I'm feeling rather stupid but why doesn't ANTLRWorks recognize 'a'
using this grammar? When I gen the grammar using target CSharp3 it does
match 'a'. Does ANTLRWorks support semantic predicates?

a
    : A
    ;

A
    : {true}? 'a'
    ;

Thanks,
Chris

From andersen at highfleet.com  Tue Feb  8 13:16:09 2011
From: andersen at highfleet.com (Bill Andersen)
Date: Tue, 8 Feb 2011 16:16:09 -0500
Subject: [antlr-interest] setTokenStream() on grammar with imports + feature
	request
Message-ID: <46E62259-DC32-42BF-B3CE-D8229056CE0B@highfleet.com>

Folks

Can anyone tell me quick if this makes sense...  I have grammar A that imports B.  I want to reuse the A parser so I call

	AParser.setTokenStream(input);

Thing is setTokenStream() is inherited from Parser and by default does not communicate with delegate parsers.  Should I override in AParser with

	public void setTokenStream(TokenStream input) {
		super.setTokenStream(input);
		gB.setTokenStream(input);
	}

where gB is the delegate parser in AParser?

And a feature request...  I use grammar imports quite extensively and have already run into an issue where I needed a method in a parser to get its delegate parsers.  Is there some fundamental barrier to providing such a method on Lexer, Parser, and TreeParser that would return some collection of delegate parsers/lexers/tree parsers?


Bill Andersen 
Highfleet, Inc. (www.highfleet.com)
3600 O'Donnell Street, Suite 600
Baltimore, MD 21224
Office: +1.410.675.1201
Cell: +1.443.858.6444
Fax: +1.410.675.1204






From alex at apption.com  Tue Feb  8 14:18:40 2011
From: alex at apption.com (Alex Lujan)
Date: Tue, 8 Feb 2011 17:18:40 -0500
Subject: [antlr-interest] Unicode input
Message-ID: <AANLkTimuX45WkvoO7YKZzxtFLsz7k89HWJ+nyRDaS-kJ@mail.gmail.com>

Im having an issue with parsing an input that contains unicode characters.

This is the code Im using to test the parser (messageBytes is an array
created by reading bytes from a binary file):

private static void parseMessage(byte[] messageBytes) throws IOException{

        ByteArrayInputStream input = new ByteArrayInputStream(messageBytes);
        ANTLRInputStream in = new ANTLRInputStream(input);
        UnitedToteLexer lexer = new UnitedToteLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        UnitedToteParser parser = new UnitedToteParser(tokens);


        try {
            parser.message();

            printHexArray(messageBytes);

        } catch (Exception e){
            // TODO handle unrecognized message formats
            System.out.println("Unrecognized message format");
        }
    }

The main problem I have at the moment is that I get a number of these guys:

line 1:1 no viable alternative at character ''
line 1:2 no viable alternative at character '?'
line 1:3 no viable alternative at character '?'
line 1:4 no viable alternative at character 'x'
line 1:5 no viable alternative at character '?'
...

Essentially, one for each character that is not explicitely defined as a
token in my grammar. Nonetheless, I do have the following rule:

BYTE_VALUE    :    '\u0000'..'\uFFFE';

Which should, if I understand correctly, include all unicode characters.

Now, I understand there was a charVocabulary option in previous versions of
ANTLR to aid with this problem, but it seems it was removed in ANTLR 3.

Was this problem solved in a different way?

[btw my grammar is rather large, Im not sure I should post 400 lines in this
message.]

From bkiers at gmail.com  Tue Feb  8 14:21:43 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 8 Feb 2011 23:21:43 +0100
Subject: [antlr-interest] Unicode input
In-Reply-To: <AANLkTimuX45WkvoO7YKZzxtFLsz7k89HWJ+nyRDaS-kJ@mail.gmail.com>
References: <AANLkTimuX45WkvoO7YKZzxtFLsz7k89HWJ+nyRDaS-kJ@mail.gmail.com>
Message-ID: <AANLkTikoP9w6gcmk9fi8HYdLzjmTwp3n91E4GU+dqFbn@mail.gmail.com>

Hi,

On Tue, Feb 8, 2011 at 11:18 PM, Alex Lujan <alex at apption.com> wrote:

> Im having an issue with parsing an input that contains unicode characters.
>
> This is the code Im using to test the parser (messageBytes is an array
> created by reading bytes from a binary file):
>
> private static void parseMessage(byte[] messageBytes) throws IOException{
>
>        ByteArrayInputStream input = new ByteArrayInputStream(messageBytes);
>        ANTLRInputStream in = new ANTLRInputStream(input);
>          ...


You'll probably want to set the *encoding* of the input using:

ANTLRInputStream<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_a_n_t_l_r_input_stream.html#cc37ee52e581d61a2efef0413ae3366f>
 (InputStream input, String encoding)


Regards,

Bart.

From power_giordo at yahoo.com.ar  Tue Feb  8 16:00:21 2011
From: power_giordo at yahoo.com.ar (Victor Giordano)
Date: Tue, 08 Feb 2011 21:00:21 -0300
Subject: [antlr-interest] [Bulk] Re: Correct way to handle custom errors?
In-Reply-To: <AANLkTikGb6p3tJ5SDtqhe1whJmU7T9znfJAAtxK29GfH@mail.gmail.com>
References: <AANLkTimrbPBecxdLha1X9YZGjoqbHOT654sYibes-WtA@mail.gmail.com>	<530276e5c577783110319275bc0fdc6e@mail.gmail.com>
	<AANLkTikGb6p3tJ5SDtqhe1whJmU7T9znfJAAtxK29GfH@mail.gmail.com>
Message-ID: <4D51D915.3080302@yahoo.com.ar>

Hello Sthepen: i was having problems with "custom errors handling" too .
So far, to catch the errors i added to my grammar.g file this snippet of 
code:


@lexer::members
{
     @Override
     protected Object recoverFromMismatchedToken (IntStream input,int 
ttype,BitSet follow) throws RecognitionException
     {
         throw new MismatchedTokenException (ttype, input);
     }

     @Override
     public Object recoverFromMismatchedSet (IntStream input, 
RecognitionException e, BitSet follow) throws RecognitionException
     {
         throw new MismatchedSetException (follow, input);
     }

     @Override
     public void reportError (RecognitionException e)
     {
         Class exceptionClass = e.getClass ();
         String msg = "L?nea invalida";
         if (exceptionClass == NoViableAltException.class)
         {
             NoViableAltException nvae = (NoViableAltException) e;
             msg = "S?mbolo invalido " + nvae.c;
         }
         throw new RuntimeException (msg);
     }	
}

@parser::members
{
     /** Para atrapar errores cuando se repiten tokens v?lidos*/
     @Override
     protected Object recoverFromMismatchedToken (IntStream input,int 
ttype,BitSet follow) throws RecognitionException
     {
         // Desactivo el mecanismo de recuperaci?n por defecto
         throw new MismatchedTokenException (ttype, input);
     }

     @Override
     public void reportError (RecognitionException e)
     {
         Class exceptionClass = e.getClass ();
         String msg = "L?nea invalida";
         if (exceptionClass == NoViableAltException.class)
         {
             NoViableAltException nvae = (NoViableAltException) e;
             msg = "S?mbolo en posici?n " + (nvae.charPositionInLine+1) 
+ " invalido : " + nvae.token.getText ();
         }
         if (exceptionClass == EarlyExitException.class)
         {
             EarlyExitException eee = (EarlyExitException) e;
			msg = "La expresi?n esta mal formada. Revisar el '" + 
eee.token.getText () + "'";
         }
         if (exceptionClass == MismatchedTokenException.class)
         {
             MismatchedTokenException mte = (MismatchedTokenException) e;
             msg = "La expresi?n esta mal formada. Revisar el '" + 
mte.token.getText () + "'";
         }
         throw new RuntimeException (msg);
     }
}

And works perfectly... but i still think that is only a work around... 
cuz i really don't understand how to catch every kind of error propertly.

Hope that helps.
Grettins!

P.D: The message strings are in spanish: Basically the sayd you put 
thinks wrong.


El 07/02/2011 02:48 p.m., Stephen McGruer escribi?:
> Jim,
>
> Thanks for the suggestion - although I don't quite want the level of detail
> you guys go into (and I don't quite understand all of it, possibly because I
> don't know the JavaFX syntax!) the source code was very useful and I think
> I've now got enough to put in some decent error messages.
>
> There are two things I'm still having trouble with that I think are related
> to this question strongly enough to not warrant a new thread. The first is
> printing out the line that the error occurred on. I wanted to try out
> mimicking the sort of print out that javac does when it encounters an error,
> but I can't work out how to get access to the text of the line that is
> having the problem. I read here -
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1769 - that if you
> are using the CommonTokenStream you should have access to a "token" with the
> information, but in my getErrorMessage override that simply returns null for
> most of the errors I've tried (currently MisMatchedToken exceptions):
>
> public String getErrorMessage(RecognitionException e, String[] tokenNames) {
>      // Prints out true!
>      System.out.println(e.token == null);
> }
>
> I then read that you can use the inputstream attached to the
> RecognitionException instead (can't quite remember where... the official
> docs?), but can't figure out how to do this. Currently I have tried casting
> it from an IntStream to a CharStream (I think it will always be a CharStream
> for me... maybe XD) and played with the various methods available, but none
> of them seem to offer a way to just print out the current line. The most
> promising looks like substring(start, stop), but I cannot find a way to get
> the length of the line to give as the "stop" parameter! I also assume that
> if I do this method I should mark the stream before I begin, and rewind it
> once I'm done?
>
> Alternatively, if there's a "better" way to do this when overriding the
> getErrorMessage method please tell me.
>
> The second problem I'm having is with is stopping the parser from running if
> the lexer has spat out any errors. As far as I can tell, it's very possible
> and easy to stop the lexer after a single error message is thrown, but I
> cannot find anywhere that shows how to let the lexer continue but not let
> the parser run. Since all error messages are only thrown once you call
> something like "program_return parserResult = parser.program();" (i.e. the
> lexer has no errors until after this line), then I can't stop it parsing the
> syntactically invalid file and spitting out more (useless, imo) error
> messages! Is there a 'correct' or even just any way to achieve this?
>
> Thanks,
> Stephen
>
> On 5 February 2011 16:28, Jim Idle<jimi at temporal-wave.com>  wrote:
>
>> If you download the source code to the Java FX compiler you will have a
>> complete example to work from, assuming a Java target. Start by creating a
>> superclass for the parser and overriding various error reporting points.
>> The JavaFX compiler will show you how to do that.
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Stephen McGruer
>>> Sent: Friday, February 04, 2011 4:14 PM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] Correct way to handle custom errors?
>>>
>>> I was wondering what the "correct" way to handle custom errors in ANTLR
>>> 3 was. I'm implementing a parser/lexer for a small subset of C, and
>>> want to give better error messages than the general mismatched tokens
>>> error.
>>>
>>>   From this post -
>>> http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery I
>>> implemented my own error reporting class which grabs the recognition
>>> exception from the Parser. However, I'm then unsure about the best
>>> approach is to start recognising errors - from things as basic as
>>> replacing the name of my variable name rule (ID) with a more user-
>>> friendly term such as "identifier", to more complex things such as
>>> giving nice error messages when the user attempts to set a variable to
>>> a value that isn't an integer or character (the only two allowable
>>> types in my subset). The recognition exception doesn't seem to be too
>>> useful - getMessage() seems to return null.
>>> I assume that the getErrorHeader and getErrorMessage methods do
>>> something different to get information. The only way I can think of
>>> checking for errors at the moment is manually scraping the strings
>>> returned by these methods, which seems... clumsy.
>>>
>>> So, is there a sort of "normal" or "usual" method to approaching
>>> parser/lexer error message handling when doing programming language
>>> parsing?
>>>
>>> I hope the above contained enough information, and made sense.
>>>
>>> Thanks,
>>> Stephen
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bill.andersen at mac.com  Tue Feb  8 20:40:23 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Tue, 08 Feb 2011 23:40:23 -0500
Subject: [antlr-interest] TreeParser reset()
Message-ID: <BE87B6B2-92E2-4A5F-891E-6E9C252D9ACB@mac.com>

Folks

I noticed that setTokenStream() in antlr.org.runtime.Parser calls reset(), but setTreeNodeStream() in antlr.org.runtime.tree.TreeParser does not call reset().  Is there a reason for this or is it just an oversight?  If the former should I call reset() before or after setTreeNodeStream() on a tree parser I want to re-use?

Thanks in advance.

   .bill

From alex at apption.com  Wed Feb  9 06:34:30 2011
From: alex at apption.com (Alex Lujan)
Date: Wed, 9 Feb 2011 09:34:30 -0500
Subject: [antlr-interest] Unicode input
In-Reply-To: <AANLkTimuX45WkvoO7YKZzxtFLsz7k89HWJ+nyRDaS-kJ@mail.gmail.com>
References: <AANLkTimuX45WkvoO7YKZzxtFLsz7k89HWJ+nyRDaS-kJ@mail.gmail.com>
Message-ID: <AANLkTintJh_7D8owaOLaEB3awi9aMJqBNivfYXSGByT7@mail.gmail.com>

I just realized, I'm also getting this error:

line 1:0 mismatched input '0' expecting BYTE_VALUE

Where the following rule exists within my grammar:

BYTE_VALUE    :    '\u0000'..'\uFFFE';

Which in my understanding should match any Unicode character that can be
represented with the UTF8 encoding.

The question is: why is the character 0 (Digit zero) not matching the
BYTE_VALUE rule.

I have verified that the first character of the input is 0 ('\u0030').

Any clues?

On Tue, Feb 8, 2011 at 5:18 PM, Alex Lujan <alex at apption.com> wrote:

> Im having an issue with parsing an input that contains unicode characters.
>
> This is the code Im using to test the parser (messageBytes is an array
> created by reading bytes from a binary file):
>
> private static void parseMessage(byte[] messageBytes) throws IOException{
>
>         ByteArrayInputStream input = new
> ByteArrayInputStream(messageBytes);
>         ANTLRInputStream in = new ANTLRInputStream(input);
>         UnitedToteLexer lexer = new UnitedToteLexer(in);
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>         UnitedToteParser parser = new UnitedToteParser(tokens);
>
>
>         try {
>             parser.message();
>
>             printHexArray(messageBytes);
>
>         } catch (Exception e){
>             // TODO handle unrecognized message formats
>             System.out.println("Unrecognized message format");
>         }
>     }
>
> The main problem I have at the moment is that I get a number of these guys:
>
> line 1:1 no viable alternative at character ' '
> line 1:2 no viable alternative at character '?'
> line 1:3 no viable alternative at character '?'
> line 1:4 no viable alternative at character 'x'
> line 1:5 no viable alternative at character '?'
> ...
>
> Essentially, one for each character that is not explicitely defined as a
> token in my grammar. Nonetheless, I do have the following rule:
>
> BYTE_VALUE    :    '\u0000'..'\uFFFE';
>
> Which should, if I understand correctly, include all unicode characters.
>
> Now, I understand there was a charVocabulary option in previous versions of
> ANTLR to aid with this problem, but it seems it was removed in ANTLR 3.
>
> Was this problem solved in a different way?
>
> [btw my grammar is rather large, Im not sure I should post 400 lines in
> this message.]
>
>


-- 
Alejandro Lujan
Apption Software
(613) 725 62 68 x625

From alex at apption.com  Wed Feb  9 06:35:31 2011
From: alex at apption.com (Alex Lujan)
Date: Wed, 9 Feb 2011 09:35:31 -0500
Subject: [antlr-interest] Unicode input
In-Reply-To: <AANLkTikoP9w6gcmk9fi8HYdLzjmTwp3n91E4GU+dqFbn@mail.gmail.com>
References: <AANLkTimuX45WkvoO7YKZzxtFLsz7k89HWJ+nyRDaS-kJ@mail.gmail.com>
	<AANLkTikoP9w6gcmk9fi8HYdLzjmTwp3n91E4GU+dqFbn@mail.gmail.com>
Message-ID: <AANLkTinBARJYANhNC8XwSLQxtApFEm2Qk2QuVAkKbtLj@mail.gmail.com>

Hi Bart,

Thanks for the suggestion, but Ive tried setting the encoding to UTF8 with
no success.

Any other ideas?

On Tue, Feb 8, 2011 at 5:21 PM, Bart Kiers <bkiers at gmail.com> wrote:

> Hi,
>
> On Tue, Feb 8, 2011 at 11:18 PM, Alex Lujan <alex at apption.com> wrote:
>
>> Im having an issue with parsing an input that contains unicode characters.
>>
>> This is the code Im using to test the parser (messageBytes is an array
>> created by reading bytes from a binary file):
>>
>> private static void parseMessage(byte[] messageBytes) throws IOException{
>>
>>        ByteArrayInputStream input = new
>> ByteArrayInputStream(messageBytes);
>>        ANTLRInputStream in = new ANTLRInputStream(input);
>>          ...
>
>
> You'll probably want to set the *encoding* of the input using:
>
> ANTLRInputStream<http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_a_n_t_l_r_input_stream.html#cc37ee52e581d61a2efef0413ae3366f>
>  (InputStream input, String encoding)
>
>
> Regards,
>
> Bart.
>



-- 
Alejandro Lujan
Apption Software
(613) 725 62 68 x625

From parrt at cs.usfca.edu  Wed Feb  9 11:07:24 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 9 Feb 2011 11:07:24 -0800
Subject: [antlr-interest] TreeParser reset()
In-Reply-To: <BE87B6B2-92E2-4A5F-891E-6E9C252D9ACB@mac.com>
References: <BE87B6B2-92E2-4A5F-891E-6E9C252D9ACB@mac.com>
Message-ID: <A4B95D62-2C50-4790-8813-F5E5F0D612C6@cs.usfca.edu>

Interesting...yeah, seems reset would be good but not sure who relies on this...hmm...might be a risk to fix.
Ter
On Feb 8, 2011, at 8:40 PM, Bill Andersen wrote:

> Folks
> 
> I noticed that setTokenStream() in antlr.org.runtime.Parser calls reset(), but setTreeNodeStream() in antlr.org.runtime.tree.TreeParser does not call reset().  Is there a reason for this or is it just an oversight?  If the former should I call reset() before or after setTreeNodeStream() on a tree parser I want to re-use?
> 
> Thanks in advance.
> 
>   .bill
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Wed Feb  9 15:59:32 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 10 Feb 2011 10:59:32 +1100
Subject: [antlr-interest] multi-channel token stream
Message-ID: <AANLkTi=58cFSHOyckK+M=NZ31u82RoMQu=n_0eNjeX__@mail.gmail.com>

Hi folks,

I'd like my parser to be able to tune in to more than one token
channel with the choice of channel(s) being set when constructing the
TokenStream. The DAR book doesn't have an example of doing this,
unless I've missed it. The wiki refers to being able to merge channels
but I couldn't find an example of doing this - unless it just meant
using BufferedTokenStream instead of CommonTokenStream ?

My solution has been to create a simple class,
MultiChannelTokenStream, adapted from CommonTokenStream. Instead of
holding the index of a single channel it maintains a list of "active
channels" which is used by the various stream access and positioning
methods.  The source is here:

http://code.google.com/p/jai-tools/source/browse/trunk/jiffle/src/main/java/jaitools/jiffle/parser/MultiChannelTokenStream.java

I still have a lurking doubt that I'm re-inventing the wheel here, ie.
that I must be missing something obvious in the ANTLR API (or perhaps
more fundamentally in lexer / parser design). If that's the case I'd
appreciate any tips. On the other hand, if the class is of any use to
others, please feel free to grab it.

Michael

From michael.bedward at gmail.com  Wed Feb  9 20:42:49 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 10 Feb 2011 15:42:49 +1100
Subject: [antlr-interest] rule catch blocks ignored in imported grammars ?
Message-ID: <AANLkTimT-LfAayT5VFMk89cg3z_ROmae49KAnZBemi+J@mail.gmail.com>

Hi folks,

Say I have a parser grammar LittleFoo with a rule that includes a
catch block. If I import LittleFoo into parser grammar BigFoo I get
these generated source files (Java target)...

BigFoo.java - master
BigFoo_LittleFoo.java - delegate
LittleFoo.java - not used at runtime (?)

My catch block is present in LittleFoo.java but not in the delegate
parser BigFoo_LittleFoo.java.  Is there any way in ANTLR 3.3 to force
the catch block into the delegate ?

cheers
Michael

From roohul17 at yahoo.com  Thu Feb 10 09:08:53 2011
From: roohul17 at yahoo.com (Roohul)
Date: Thu, 10 Feb 2011 09:08:53 -0800 (PST)
Subject: [antlr-interest] Ident with ending In or Out word
Message-ID: <82895.53902.qm@web39421.mail.mud.yahoo.com>

Hi,
?
I am working on a grammar which have some variables ending with In or Out which is treated as the connector between two components. I do not know how to handle this.
?
For example: 
real abcIn 
real abcOut
?
these are treated as connectors. while abcI or abcOu will be treated as normal variables.
?
?


Regards

Roohul 
S/W Engineer, LIU, Sweden



      

From bkiers at gmail.com  Thu Feb 10 10:40:16 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 10 Feb 2011 19:40:16 +0100
Subject: [antlr-interest] Ident with ending In or Out word
In-Reply-To: <82895.53902.qm@web39421.mail.mud.yahoo.com>
References: <82895.53902.qm@web39421.mail.mud.yahoo.com>
Message-ID: <AANLkTikd+_bcN+D+195R9u6rvKsZW1L+N+EVoCahyYNe@mail.gmail.com>

On Thu, Feb 10, 2011 at 6:08 PM, Roohul <roohul17 at yahoo.com> wrote:

> Hi,
>
> I am working on a grammar which have some variables ending with In or Out
> which is treated as the connector between two components. I do not know how
> to handle this.
>
> For example:
> real abcIn
> real abcOut
>
> these are treated as connectors. while abcI or abcOu will be treated as
> normal variables.
>

You could handle this on a "lexer level" like this:

REAL
  :  'real'
  ;

CONNECTOR
  :  Alpha+ ('In' | 'Out')
  ;

VARIABLE
  :  Alpha+
  ;

fragment
Alpha
  :  'a'..'z'
  |  'A'..'Z'
  ;


(the order of the rules is important here!)

Regards,

Bart.

From coaic at mac.com  Thu Feb 10 18:19:31 2011
From: coaic at mac.com (Shane MacPhillamy)
Date: Fri, 11 Feb 2011 13:19:31 +1100
Subject: [antlr-interest] Should the C Target generation -trace option
 generate compilable code from a grammar
Message-ID: <2D38D203-8C61-46AB-A636-81356AF59C00@mac.com>

I'm getting started with ANTLR using the C Target. Should the -trace option to org.antlr.Tool produce compilable code. I'm seeing references in the generated "-trace" code to System.out instead of ANTLR_PRINTF, and mismatched arguments to the format string to ANTLR_PRINTF.

Thanks.

Cheers, Shane

From dominik.dietrich at dfki.de  Fri Feb 11 01:41:47 2011
From: dominik.dietrich at dfki.de (Dominik Dietrich)
Date: Fri, 11 Feb 2011 10:41:47 +0100
Subject: [antlr-interest] semantic predicates
Message-ID: <4D55045B.9010603@dfki.de>

Hi,

I'm new to ANTLR and have a problem with the following toy grammar, 
which uses semantic predicates to disambiguate operator precedences. The 
idea is to support dynamic prolog style operator declarations, where 
lower precedence binds tighter. On the input 3*3+3, the epsilon 
production of the rule rterm is not choosen, but instead I get a 
NoViableAltException, which I do not understand. I'm aware that I could 
also express the precedences in the productions, but this is not what I 
want because the overall goal later is to support dynamic operators. Can 
you please help?

Thanks.

grammar PTermParser;

options {
   output=AST;
}

@members {
   public static void main(String[] args) throws Exception {
         PTermParserLexer lex = new PTermParserLexer(new 
ANTLRFileStream(args[0]));
            CommonTokenStream tokens = new CommonTokenStream(lex);

         PTermParserParser parser = new PTermParserParser(tokens);

         try {
             parser.term(1200);
         } catch (RecognitionException e)  {
             e.printStackTrace();
         }
     }
}

WHITESPACE: (' ' | '\t')+ { $channel = HIDDEN; };
NEWLINE: ('\r'? '\n')+ { $channel = HIDDEN;} ;
IDENTIFIER     :    LETTER (LETTER | DIGIT | '_')*;
NUMBER         :    DIGIT+;
OPERATORSEQ     :     SPECIALCHAR+;

fragment LETTER
     : 'a'..'z'
     | 'A'..'Z'
     ;

fragment DIGIT    :    '0' .. '9';

fragment SPECIALCHAR :    '+' | '-' | '*' | '/';

start
@init{
   System.out.println("start");
}
:     term[1200];

term[int prec]
@init{
   System.out.println("term with "+$prec);
}
:
     NUMBER rterm[$prec, 0]
     |    IDENTIFIER rterm[$prec, 0]
     |    '(' term[1200] ')' rterm[$prec, 0]
     ;

rterm[int pprec, int lprec]
@init{
   System.out.println("rterm: pprec is "+pprec+" lprec is "+lprec);
}
      :    {(400 <= $pprec) && ($lprec < 400)}?=> ('+'^ term[400] 
rterm[pprec,400]) { System.out.println("use + production");}
     |    {(300 <= $pprec) && ($lprec < 300)}?=> ('*'^  term[300] 
rterm[pprec,300]) { System.out.println("use * production");}
     |
     ;



From roohul17 at yahoo.com  Fri Feb 11 05:27:57 2011
From: roohul17 at yahoo.com (Roohul)
Date: Fri, 11 Feb 2011 05:27:57 -0800 (PST)
Subject: [antlr-interest] Ident with ending In or Out word
In-Reply-To: <AANLkTikd+_bcN+D+195R9u6rvKsZW1L+N+EVoCahyYNe@mail.gmail.com>
Message-ID: <53958.98525.qm@web39422.mail.mud.yahoo.com>

Hi,
This is my sample grammar.. this did not work.. another thing is 
that my variables and connectors both can have digits so I created Alpha
 : LETTER (LETTER | DIGIT)*; for this but it also give an error. 

primitiveType
??? :?? 'real'
??? |?? 'integer'
??? |?? 'char'
??? |?? 'boolean'
??? |?? 'void'
??? ;



?
CONNECTOR : LETTER+ ('In' | 'Out');
ID: LETTER+ ;

??? 

fragment LETTER : ('a'..'z' | 'A'..'Z') ;
fragment DIGIT : '0'..'9';
INT : DIGIT+ ;

Regards

Roohul 
S/W Engineer, LIU, Sweden




--- On Thu, 2/10/11, Bart Kiers <bkiers at gmail.com> wrote:

From: Bart Kiers <bkiers at gmail.com>
Subject: Re: [antlr-interest] Ident with ending In or Out word
To: "Roohul" <roohul17 at yahoo.com>
Cc: "ANTLR" <antlr-interest at antlr.org>
Date: Thursday, February 10, 2011, 10:40 AM

On Thu, Feb 10, 2011 at 6:08 PM, Roohul <roohul17 at yahoo.com> wrote:

Hi,

?

I am working on a grammar which have some variables ending with In or Out which is treated as the connector between two components. I do not know how to handle this.

?

For example:

real abcIn

real abcOut

?

these are treated as connectors. while abcI or abcOu will be treated as normal variables.

You could handle this on a "lexer level" like this:

REAL??: ?'real'
??;

CONNECTOR??: ?Alpha+ ('In' | 'Out')
??;

VARIABLE??: ?Alpha+
??;

fragmentAlpha??: ?'a'..'z'??| ?'A'..'Z'??;

(the order of the rules is important here!)
Regards,
Bart.?




      

From bkiers at gmail.com  Fri Feb 11 05:30:37 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 11 Feb 2011 14:30:37 +0100
Subject: [antlr-interest] Ident with ending In or Out word
In-Reply-To: <53958.98525.qm@web39422.mail.mud.yahoo.com>
References: <AANLkTikd+_bcN+D+195R9u6rvKsZW1L+N+EVoCahyYNe@mail.gmail.com>
	<53958.98525.qm@web39422.mail.mud.yahoo.com>
Message-ID: <AANLkTikyePuCNBAnOGFYnjftJxE6QHSbRTwJo1GO5JDz@mail.gmail.com>

On Fri, Feb 11, 2011 at 2:27 PM, Roohul <roohul17 at yahoo.com> wrote:

> Hi,
> This is my sample grammar.. this did not work.. another thing is that my
> variables and connectors both can have digits so I created Alpha : LETTER
> (LETTER | DIGIT)*; for this but it also give an error.
>
>
The problem descriptions *"did not work"* and *"also give an error"* do not
tell much. Care to elaborate?

Bart.

From roohul17 at yahoo.com  Fri Feb 11 07:17:35 2011
From: roohul17 at yahoo.com (Roohul)
Date: Fri, 11 Feb 2011 07:17:35 -0800 (PST)
Subject: [antlr-interest] Ident with ending In or Out word
In-Reply-To: <AANLkTikyePuCNBAnOGFYnjftJxE6QHSbRTwJo1GO5JDz@mail.gmail.com>
Message-ID: <678862.76476.qm@web39405.mail.mud.yahoo.com>

Sorry for that..

when i use only letters (a..z | A..Z) in the variables and connectors it give an error while creating an AST that "no viable alternative at input 'real'" and when creating variables with digits the grammar do not compile at all and give the following error. 
"The following token definitions can never be matched because prior tokens match the same? input: Alpha"

I hope that it is more elaboration.. 

Regards

Roohul 




--- On Fri, 2/11/11, Bart Kiers <bkiers at gmail.com> wrote:

From: Bart Kiers <bkiers at gmail.com>
Subject: Re: [antlr-interest] Ident with ending In or Out word
To: "Roohul" <roohul17 at yahoo.com>
Cc: "ANTLR" <antlr-interest at antlr.org>
Date: Friday, February 11, 2011, 5:30 AM

On Fri, Feb 11, 2011 at 2:27 PM, Roohul <roohul17 at yahoo.com> wrote:

Hi,
This is my sample grammar.. this did not work.. another thing is 
that my variables and connectors both can have digits so I created Alpha
 : LETTER (LETTER | DIGIT)*; for this but it also give an error. 


The problem descriptions?"did not work" and "also give an error" do not tell much. Care to elaborate?

Bart.




      

From kirby.bohling at gmail.com  Fri Feb 11 07:39:04 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Fri, 11 Feb 2011 09:39:04 -0600
Subject: [antlr-interest] Ident with ending In or Out word
In-Reply-To: <678862.76476.qm@web39405.mail.mud.yahoo.com>
References: <AANLkTikyePuCNBAnOGFYnjftJxE6QHSbRTwJo1GO5JDz@mail.gmail.com>
	<678862.76476.qm@web39405.mail.mud.yahoo.com>
Message-ID: <AANLkTikc+7bpKmwTr+EQ51rQEQwzuyWc1aVNHG+jU_Sm@mail.gmail.com>

On Fri, Feb 11, 2011 at 9:17 AM, Roohul <roohul17 at yahoo.com> wrote:
> Sorry for that..
>
> when i use only letters (a..z | A..Z) in the variables and connectors it give an error while creating an AST that "no viable alternative at input 'real'" and when creating variables with digits the grammar do not compile at all and give the following error.
> "The following token definitions can never be matched because prior tokens match the same? input: Alpha"
>
> I hope that it is more elaboration..
>

I would try moving some of that to real lexer items.  You are using
generated tokens, which depending on where they go, 'real', would be
matched by the rule for ID, and there would be no way to generate
that.  I don't know where they end up, but I do remember it being
recommended to avoid them until you have more experience.  Given the
error, I think that is what is happening here.  Look at the sample
grammars and how they handle keywords.

My guess is that you are trying to do too much in the lexer, you can
detect a lot of this at a much later state in the parser/analysis
phase.  But that is just parroting common advise on this list.

Kirby



> Regards
>
> Roohul
>
>
>
>
> --- On Fri, 2/11/11, Bart Kiers <bkiers at gmail.com> wrote:
>
> From: Bart Kiers <bkiers at gmail.com>
> Subject: Re: [antlr-interest] Ident with ending In or Out word
> To: "Roohul" <roohul17 at yahoo.com>
> Cc: "ANTLR" <antlr-interest at antlr.org>
> Date: Friday, February 11, 2011, 5:30 AM
>
> On Fri, Feb 11, 2011 at 2:27 PM, Roohul <roohul17 at yahoo.com> wrote:
>
> Hi,
> This is my sample grammar.. this did not work.. another thing is
> that my variables and connectors both can have digits so I created Alpha
> ?: LETTER (LETTER | DIGIT)*; for this but it also give an error.
>
>
> The problem descriptions?"did not work" and "also give an error" do not tell much. Care to elaborate?
>
> Bart.
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From lefevrol at yahoo.com  Fri Feb 11 09:34:47 2011
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 11 Feb 2011 18:34:47 +0100
Subject: [antlr-interest] [SPAM] Optional expression rule alternative
Message-ID: <ij3rvp$evo$1@dough.gmane.org>

Is it possible to have a rule like this in ANTLR?

   rule[boolean z] : if (z) then rule1 else rule2 ;

Thanks,

-- O.L.




From cummings at kjchome.homeip.net  Fri Feb 11 09:44:22 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 11 Feb 2011 12:44:22 -0500
Subject: [antlr-interest] [SPAM] [SPAM] Optional expression rule
	alternative
In-Reply-To: <ij3rvp$evo$1@dough.gmane.org>
References: <ij3rvp$evo$1@dough.gmane.org>
Message-ID: <4D557576.4050508@kjchome.homeip.net>

On 02/11/2011 12:34 PM, Olivier Lefevre wrote:
> Is it possible to have a rule like this in ANTLR?
> 
>    rule[boolean z] : if (z) then rule1 else rule2 ;

rule[boolean z]
    : { z }? rule1
    | rule2
    ;

> Thanks,
> 
> -- O.L.

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From lefevrol at yahoo.com  Fri Feb 11 10:04:49 2011
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 11 Feb 2011 19:04:49 +0100
Subject: [antlr-interest] [SPAM] Re: [SPAM] [SPAM] Optional expression rule
	alternative
In-Reply-To: <4D557576.4050508@kjchome.homeip.net>
References: <ij3rvp$evo$1@dough.gmane.org>
	<4D557576.4050508@kjchome.homeip.net>
Message-ID: <ij3to5$pu9$1@dough.gmane.org>

Great! Not to abuse but would you know in which section of
"The Definitive ANTLR Reference" this mentioned? I couldn't
find it. What is this syntax called?

But in my real-world problem it was actually not a choice
between rule1 and rule2 but a question of whether to allow
an extra alternative in the z case without too much
verbatim repetition, i.e. (again in pseudo-code):

rule[boolean z] :
   rule1 | rule2 | ... | rule23 | (z ? rule24 : nothing) ;

That is, allow rule24 if z otherwise stop at rule23.

Thanks again,

-- O.L.


From jmurray at aerotech.com  Fri Feb 11 10:33:25 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Fri, 11 Feb 2011 13:33:25 -0500
Subject: [antlr-interest] [SPAM] [SPAM] Re: [SPAM] [SPAM] Optional
	expression rule	alternative
In-Reply-To: <ij3to5$pu9$1@dough.gmane.org>
References: <ij3rvp$evo$1@dough.gmane.org>	<4D557576.4050508@kjchome.homeip.net>
	<ij3to5$pu9$1@dough.gmane.org>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393BED1898@EXCH-VIRTUAL.aerotechad.com>

These are called Semantic Predicates. Section 12.1 in TDAR. 
Specifically, look at page 295 of the PDF. If the predicate evaluates to 
false, the alternative is effectively switched off.

- Justin

On 2/11/2011 1:04 PM, Olivier Lefevre wrote:
> Great! Not to abuse but would you know in which section of
> "The Definitive ANTLR Reference" this mentioned? I couldn't
> find it. What is this syntax called?
>
> But in my real-world problem it was actually not a choice
> between rule1 and rule2 but a question of whether to allow
> an extra alternative in the z case without too much
> verbatim repetition, i.e. (again in pseudo-code):
>
> rule[boolean z] :
>     rule1 | rule2 | ... | rule23 | (z ? rule24 : nothing) ;
>
> That is, allow rule24 if z otherwise stop at rule23.
>
> Thanks again,
>
> -- O.L.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From bkiers at gmail.com  Fri Feb 11 10:34:05 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 11 Feb 2011 19:34:05 +0100
Subject: [antlr-interest] [SPAM] [SPAM] Re: [SPAM] [SPAM] Optional
 expression rule alternative
In-Reply-To: <ij3to5$pu9$1@dough.gmane.org>
References: <ij3rvp$evo$1@dough.gmane.org>
	<4D557576.4050508@kjchome.homeip.net>
	<ij3to5$pu9$1@dough.gmane.org>
Message-ID: <AANLkTik8vH_DdF18wXU=skijEtrD9hBjFnYGXtr7TvcV@mail.gmail.com>

On Fri, Feb 11, 2011 at 7:04 PM, Olivier Lefevre <lefevrol at yahoo.com> wrote:

> Great! Not to abuse but would you know in which section of
> "The Definitive ANTLR Reference" this mentioned? I couldn't
> find it. What is this syntax called?
>

It's called a "validating semantic predicate" which is explained in chapter
12 and 13.


But in my real-world problem it was actually not a choice
> between rule1 and rule2 but a question of whether to allow
> an extra alternative in the z case without too much
> verbatim repetition, i.e. (again in pseudo-code):
>
> rule[boolean z] :
>   rule1 | rule2 | ... | rule23 | (z ? rule24 : nothing) ;
>
> That is, allow rule24 if z otherwise stop at rule23.


You can still do that:

rule [boolean z]
  :  {z}? (rule1 | rule2 | rule3 | ... | rule23 | rule24)
  |       (rule1 | rule2 | rule3 | ... | rule23)
  ;


Regards,

Bart.

From lefevrol at yahoo.com  Fri Feb 11 10:46:42 2011
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 11 Feb 2011 19:46:42 +0100
Subject: [antlr-interest] [SPAM] Re: Re: Optional expression rule alternative
In-Reply-To: <AANLkTik8vH_DdF18wXU=skijEtrD9hBjFnYGXtr7TvcV@mail.gmail.com>
References: <ij3rvp$evo$1@dough.gmane.org>	<4D557576.4050508@kjchome.homeip.net>	<ij3to5$pu9$1@dough.gmane.org>
	<AANLkTik8vH_DdF18wXU=skijEtrD9hBjFnYGXtr7TvcV@mail.gmail.com>
Message-ID: <ij406k$8i0$1@dough.gmane.org>

On 2/11/2011 7:34 PM, Bart Kiers wrote:
> You can still do that:
> rule [boolean z]
>    :  {z}? (rule1 | rule2 | rule3 | ... | rule23 | rule24)
>    |       (rule1 | rule2 | rule3 | ... | rule23)
>    ;

Yes but the rule1 | ... | rule23 train is huge: that is what
I meant by "without too much verbatim repetition". So I'll
pack off the first 23 rules into yet another rule; not ideal
but that'll do.

I knew about predicates (although I haven't used them so far)
but they didn't occur to me in this context because they are
presented as a solution for grammar ambiguities, not as
switches driven "from outside" as here.

Thanks again,

-- O.L.


From nick.curry+antlr at gmail.com  Fri Feb 11 11:42:22 2011
From: nick.curry+antlr at gmail.com (Nick C)
Date: Fri, 11 Feb 2011 19:42:22 +0000
Subject: [antlr-interest] beginner question - 'unexpected ast node' when
 generating from combined grammar
Message-ID: <AANLkTik3U=j9Ag2-qorRuYpS5KuHahpLenQkyraoSWpE@mail.gmail.com>

Hi,

I'm trying learn antlr by writing a parser for a simple HTML
templating language (in combination with reading the Definitive Antlr
Reference book - I'm only just past the calculator example so far
though.)

The parser should handle something like this:

  {namespace My.Namespace}
  {template MyTemplate}
      hello
      {if $name}
          {print $name}
      {else}
          world
      {/if}
      <br/>
   {/template}

My current attempt is to first build a simple version of the parser
without any actions, just to get it to parse valid input correctly:

    grammar Test;

    options { language = 'CSharp2'; }

    doc    :     ns
                 WS*
                 (template)+
                 WS* ;

    ns      :    '{namespace' WS+ DOTTED_IDENT WS* '}';

    template:    '{template' WS+ IDENT WS* '}' content '{/template}';

    cmdSp   :    '{sp' WS* '/}';

    cmdIf   :    '{if' WS* '}' content ('{elseif}' content)* ('{else}'
content)? WS* '{/if}' ;

    anyCmd  :    cmdSp | cmdIf;
    nonCmd  :    ~(anyCmd); /* ~('{')*;*/
    content :    (anyCmd | nonCmd)*;

    WS      :    ' '|'\t'|'\r'|'\n';
    IDENT   :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
    DOTTED_IDENT
            :    IDENT ((WS)* '.' (WS)* IDENT)*;


I was hoping to parse the first example minus the {$name} print
statement and the conditional in the {if} statement (i.e. the $name in
the {if}.)

When I try to generate the parser with the above definition, I get the
following warnings/errors:

    Test.g:0:0: syntax error: buildnfa: <AST>:19:16: unexpected AST node: anyCmd
    Test.g:19:14: set complement is empty

I'm guessing my use of ~(anyCmd) is incorrect, but I don't understand why?

If I try replacing that with ~('{')* as per the comment above, I get
these errors:

    Test.g:19:18: Decision can match input such as "'{else}'" using
multiple alternatives: 1, 2
    As a result, alternative(s) 2 were disabled for that input
    ... more errors like this ...
    Test.g:19:18: The following alternatives can never be matched: 2

I thought this was specifying 'any character apart from {', so I don't
understand how '{else}' could be a match (or why there are multiple
alternatives - I thought I only specified one, unless * counts as
many?)

A brief explanation and/or a pointer to the section of the book I
should be reading would be most welcome.

Thanks,
Nick

From lefevrol at yahoo.com  Fri Feb 11 11:52:44 2011
From: lefevrol at yahoo.com (Olivier Lefevre)
Date: Fri, 11 Feb 2011 20:52:44 +0100
Subject: [antlr-interest] [SPAM] Chaining attributes
Message-ID: <ij442g$t9l$1@dough.gmane.org>

I wonder why it is not possible to chain attributes.
E.g., $rule.start.type doesn't work. Since
$rule.start.getType() does it's not a big deal but
the former would be more elegant.

-- O.L.


From acondit at ipns.com  Sat Feb 12 10:11:04 2011
From: acondit at ipns.com (Alan Condit)
Date: Sat, 12 Feb 2011 10:11:04 -0800
Subject: [antlr-interest] ANTLR stringTemplates ObjC cleanup
Message-ID: <A04FA7BC-5C5B-4A42-B39F-AF9DF9814725@ipns.com>

Greetings all,

I hacked around on the stringTemplates in ANTLR earlier and got things to work, but now I am trying to really understand them.

I am trying to clean up my Objective-C templates in order to facilitate implementation of ST.stg in Objective-C.

I have got the template <ruleAttributeScopeImplementation(scope)> defined in genericParser. My question is how do I convert the template <ruleAttributeScopeImplementation(scope)> into the next two templates (<ruleAttributeScopeImplementation(scope)> and <ruleAttributeScopeImplementation.synthesize()> and get it to work. I guess more succinctly the question is how do I get Antlr to recognize a new named "sub" template and invoke it. Do I need to do something like this:

#pragma mark Rule attributes scope methods
<rules:{rule |
<rule.ruleDescriptor.ruleScope:ruleAttributeScopeImplementation.synthesize(scope=it)>}><\n>

in genericParser or do I need to do something more in <ruleAttributeScopeImplementation(scope)>???
If so, what???

/******* START OF EXAMPLES ********/

ruleAttributeScopeImplementation(scope) ::= <<
/* start of ruleAttributeScopeImplementation */
<if(scope.attributes)>
@implementation <scope.name>_Scope<\n>
/******* MOVE THE FOLLOWING LINE TO A NEW TEMPLATE *******/
<scope.attributes:{a|@synthesize <a.name>;}; separator="\n"><\n>

+ (<scope.name>_Scope *)new<scope.name>_Scope
{
    return [[[<scope.name>_Scope alloc] init] retain];
}

/********* a bunch more lines of template ************/
/*********    end of these more lines     ************/
@end /* end of <scope.name>_Scope implemtation */<\n>
<endif>
>>

/******_________CONVERT ABOVE TO BELOW_________*******/

ruleAttributeScopeImplementation.synthesize(scope) ::=<<
<scope.attributes:{a|@synthesize <a.name>;}; separator="\n"><\n>
>>

ruleAttributeScopeImplementation(scope) ::= <<
/* start of ruleAttributeScopeImplementation */
<if(scope.attributes)>
@implementation <scope.name>_Scope<\n>
/********** INVOKE THE NEW TEMPLATE HERE **********/
<ruleAttributeScopeImplementation.synthesize(scope)>

+ (<scope.name>_Scope *)new<scope.name>_Scope
{
    return [[[<scope.name>_Scope alloc] init] retain];
}

/********* a bunch more lines of template ************/
/*********    end of these more lines     ************/
@end /* end of <scope.name>_Scope implemtation */<\n>
<endif>
>>

Thanks in Advance for any help given,
Alan
---

Alan Condit
1085 Tierra Ct.
Woodburn, OR 97071

Email -- acondit at ipns.com
Home-Office (503) 982-0906


From belayda at gmail.com  Sat Feb 12 10:33:32 2011
From: belayda at gmail.com (Bernardo Elayda)
Date: Sat, 12 Feb 2011 10:33:32 -0800
Subject: [antlr-interest] Getting the wrong token during lexing with Antlr
	3.3
Message-ID: <AANLkTi=wxgaSAeK51wzppHkaC0ZgKxAPQWfAYDsgTiH+@mail.gmail.com>

Hi,

I have a very simple grammar that I'm using to process a csv.
In that csv, I have defined the following token:

NUM : '0'..'2'+

This rule works fine but when the token is 1-character long and the
'0' value, the lexer doesn't classify '0' as NUM!  I know this is
happening because I pulled the tokens out of CommonTokenStream and
examined the token types used. When the token is 1-charactrer long and
the '0' value, it is classifying it as some machine generated token
not explicitly defined in my grammar. I'm sure I'm doing something
wrong.  Do I have another rule in my lexer that is causing the
conflict?

tia,
Bernardo

From bkiers at gmail.com  Sat Feb 12 10:35:36 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 12 Feb 2011 19:35:36 +0100
Subject: [antlr-interest] Getting the wrong token during lexing with
	Antlr 3.3
In-Reply-To: <AANLkTi=wxgaSAeK51wzppHkaC0ZgKxAPQWfAYDsgTiH+@mail.gmail.com>
References: <AANLkTi=wxgaSAeK51wzppHkaC0ZgKxAPQWfAYDsgTiH+@mail.gmail.com>
Message-ID: <AANLkTi=q-1AmMdjy+BC5naYETP_7VyNP2NRUSqE=oiY=@mail.gmail.com>

On Sat, Feb 12, 2011 at 7:33 PM, Bernardo Elayda <belayda at gmail.com> wrote:

> Hi,
>
>
Hi, could you attach your entire grammar? Or at least the lexer-grammar of
lexer rules?

Regards,

Bart.

From acondit at ipns.com  Sat Feb 12 10:48:46 2011
From: acondit at ipns.com (Alan Condit)
Date: Sat, 12 Feb 2011 10:48:46 -0800
Subject: [antlr-interest] ANTLR stringTemplates ObjC cleanup
Message-ID: <401EAA9E-6B80-4DB5-A580-77687395DB60@ipns.com>

Greetings all,

(I am reposting this because ANTLRInterest doesn't autowrap long lines and it makes it hard to read.)
I hacked around on the stringTemplates in ANTLR earlier and got things to work, but now I am trying to really understand them.

I am trying to clean up my Objective-C templates in order to facilitate implementation of ST.stg in Objective-C.

I have got the template <ruleAttributeScopeImplementation(scope)> defined in genericParser.
My question is how do I convert the template <ruleAttributeScopeImplementation(scope)>
into the next two templates (<ruleAttributeScopeImplementation(scope)> and 
<ruleAttributeScopeImplementation.synthesize()> and get it to work. 
I guess more succinctly the question is how do I get Antlr to recognize a new named "sub" template 
and invoke it. Do I need to do something like this:

#pragma mark Rule attributes scope methods
<rules:{rule |
<rule.ruleDescriptor.ruleScope:ruleAttributeScopeImplementation.synthesize(scope=it)>}><\n>

in genericParser or do I need to do something more in <ruleAttributeScopeImplementation(scope)>???
If so, what???

/******* START OF EXAMPLES ********/

ruleAttributeScopeImplementation(scope) ::= <<
/* start of ruleAttributeScopeImplementation */
<if(scope.attributes)>
@implementation <scope.name>_Scope<\n>
/******* MOVE THE FOLLOWING LINE TO A NEW TEMPLATE *******/
<scope.attributes:{a|@synthesize <a.name>;}; separator="\n"><\n>

+ (<scope.name>_Scope *)new<scope.name>_Scope
{
   return [[[<scope.name>_Scope alloc] init] retain];
}

/********* a bunch more lines of template ************/
/*********    end of these more lines     ************/
@end /* end of <scope.name>_Scope implemtation */<\n>
<endif>
>> 

/******_________CONVERT ABOVE TO BELOW_________*******/

ruleAttributeScopeImplementation.synthesize(scope) ::=<<
<scope.attributes:{a|@synthesize <a.name>;}; separator="\n"><\n>
>> 

ruleAttributeScopeImplementation(scope) ::= <<
/* start of ruleAttributeScopeImplementation */
<if(scope.attributes)>
@implementation <scope.name>_Scope<\n>
/********** INVOKE THE NEW TEMPLATE HERE **********/
<ruleAttributeScopeImplementation.synthesize(scope)>

+ (<scope.name>_Scope *)new<scope.name>_Scope
{
   return [[[<scope.name>_Scope alloc] init] retain];
}

/********* a bunch more lines of template ************/
/*********    end of these more lines     ************/
@end /* end of <scope.name>_Scope implemtation */<\n>
<endif>
>> 

Thanks in Advance for any help given,
Alan
---

Alan Condit
1085 Tierra Ct.
Woodburn, OR 97071

Email -- acondit at ipns.com
Home-Office (503) 982-0906

From david.daeschler at gmail.com  Sat Feb 12 23:01:57 2011
From: david.daeschler at gmail.com (David Daeschler)
Date: Sun, 13 Feb 2011 02:01:57 -0500
Subject: [antlr-interest] CSharp3 target, flawless victory
Message-ID: <AANLkTin16OJfYZN+EaWry05evNkGNjFAqxZsxig3iCTs@mail.gmail.com>

I just wanted to hop on to give kudos to the ANTLR developers and Sam
Harwell. I am using the CSharp3 target for lexing, parsing, and AST
rewriting and so far I have not had a single problem with it. I just got
through semantic and type checking and I am about to move on to generate
assembly output for a VM.

What a great experience this has been moving from The Definitive ANTLR
Reference and Language Implementation Patterns to actually watching
something come alive.

Thanks again! And enjoy the rest of your weekend(s)
-- 
David Daeschler

From roxton at gmail.com  Sun Feb 13 05:49:22 2011
From: roxton at gmail.com (Adam Augusta)
Date: Sun, 13 Feb 2011 08:49:22 -0500
Subject: [antlr-interest] Rewriting Text
Message-ID: <AANLkTi=htArqMighzx9c_uYZTsyU8hgWqGL+TKPRX4-q@mail.gmail.com>

Let's say I've got a tree with a series of nested SPANs with TEXT leaves.

Let's say I want to write a tree grammar that causes SPANs with a
"boo" TEXT child to become a SPAN with a "moo" TEXT child.

rule: ^(SPAN 'boo') -> ^(SPAN 'moo')

That clearly doesn't work, because 'boo' and 'moo' aren't tokens.

So I did the following:

tree grammar Boo2Moo;

options {
    ASTLabelType = CommonTree;
    tokenVocab = IntermediateTree;
    filter = true;
    output = AST;
}

bottomup:	spantag;
spantag:	^(parent=SPAN e=TEXT) {"boo".equals($e.getText())}?
{adaptor.setChild($parent, 0, adaptor.create(TEXT, "moo"));};

This works.  Is there a more elegant way, or is this a reasonable approach?

Thanks,
-Adam

From roxton at gmail.com  Sun Feb 13 06:11:18 2011
From: roxton at gmail.com (Adam Augusta)
Date: Sun, 13 Feb 2011 09:11:18 -0500
Subject: [antlr-interest] Rewriting Text
In-Reply-To: <AANLkTi=htArqMighzx9c_uYZTsyU8hgWqGL+TKPRX4-q@mail.gmail.com>
References: <AANLkTi=htArqMighzx9c_uYZTsyU8hgWqGL+TKPRX4-q@mail.gmail.com>
Message-ID: <AANLkTi=9PTqboftLJYhpfcpSw5GetbvUvGOUCH4PRqhW@mail.gmail.com>

On Sun, Feb 13, 2011 at 8:49 AM, Adam Augusta <roxton at gmail.com> wrote:
> spantag: ? ? ? ?^(parent=SPAN e=TEXT) {"boo".equals($e.getText())}?
> {adaptor.setChild($parent, 0, adaptor.create(TEXT, "moo"));};
>
> This works. ?Is there a more elegant way, or is this a reasonable approach?

Sorry, I think I answered my own question.
spantag:	^(SPAN e=TEXT) {"boo".equals($e.getText())}? -> ^(SPAN
{adaptor.create(TEXT, "moo")});

I didn't realize you could use inline code in the rewrite statement this way.

Thanks,
-Adam

From tenajahiker at yahoo.com  Sun Feb 13 07:04:13 2011
From: tenajahiker at yahoo.com (Tenaja)
Date: Sun, 13 Feb 2011 07:04:13 -0800 (PST)
Subject: [antlr-interest] Antlr in San Diego?
Message-ID: <942401.66939.qm@web110008.mail.gq1.yahoo.com>

Are there any consultants or experts in San Diego?


      

From acondit at ipns.com  Sun Feb 13 14:02:35 2011
From: acondit at ipns.com (Alan Condit)
Date: Sun, 13 Feb 2011 14:02:35 -0800
Subject: [antlr-interest]  Re: ANTLR stringTemplates ObjC cleanup
In-Reply-To: <401EAA9E-6B80-4DB5-A580-77687395DB60@ipns.com>
References: <401EAA9E-6B80-4DB5-A580-77687395DB60@ipns.com>
Message-ID: <1D8E2F07-4867-423E-99BC-5ECE7D1E989F@ipns.com>

I apologize but I find the StringTemplate documentation not very helpful.
I usually use the main documentation to get familiar with a project and 
then a Cheat Sheet to remind me what works. In the case of StringTemplate
the Cheat Sheet saved the day. Below is the answer that worked.

Synthesize(scope) ::=<<
<scope.attributes:{a|@synthesize <a.name>;<\n>}; separator="\n">
>>

ruleAttributeScopeImplementation(scope) ::= <<
/* start of ruleAttributeScopeImplementation */
<if(scope.attributes)>
@implementation <scope.name>_Scope<\n>

<Synthesize(scope)> /* THIS WAS JUST TOO SIMPLE */

+ (<scope.name>_Scope *)new<scope.name>_Scope
{
  return [[[<scope.name>_Scope alloc] init] retain];
}

/********* a bunch more lines of template ************/
/*********    end of these more lines     ************/
@end /* end of <scope.name>_Scope implemtation */<\n>
<endif>
>>

The answer was just too simple.

Alan
---

Alan Condit
1085 Tierra Ct.
Woodburn, OR 97071

Email -- acondit at ipns.com
Home-Office (503) 982-0906



From nick.curry+antlr at gmail.com  Sun Feb 13 14:33:58 2011
From: nick.curry+antlr at gmail.com (Nick C)
Date: Sun, 13 Feb 2011 22:33:58 +0000
Subject: [antlr-interest] Fwd: beginner question - 'unexpected ast node'
 when generating from combined grammar
In-Reply-To: <AANLkTinO9p0k1ix6OJHCCPO7snNm92Wv=ZxpCvb3=vtM@mail.gmail.com>
References: <AANLkTik3U=j9Ag2-qorRuYpS5KuHahpLenQkyraoSWpE@mail.gmail.com>
	<4D55AF16.6050102@kjchome.homeip.net>
	<AANLkTinO9p0k1ix6OJHCCPO7snNm92Wv=ZxpCvb3=vtM@mail.gmail.com>
Message-ID: <AANLkTi=2TooFpOqB1zkmsH=E3aEeyG94z72k=E2W1NJA@mail.gmail.com>

Hi Kevin,

Thanks very much for your email - I did find it very helpful.

> I find that when I can't figure out why ANTLR is doing what it is doing
> that a gander at the generated source code of the parser sheds a lot of
> light on the subject. ?Then all I have to do is figure out how to change
> my parser definitions to get ANTLR to do what *I* want it to do.

The problem I posted below was preventing ANTLR to generate any code,
which made it particularly hard for me to understand what was going
on.

Given the example I posted earlier:

? anyCmd ?: ? ?cmdSp | cmdIf;
? nonCmd ?: ? ?~(anyCmd);

would you happen to know what could cause these errors to be generated?

? Test.g:0:0: syntax error: buildnfa: <AST>:19:16: unexpected AST node: anyCmd
? Test.g:19:14: set complement is empty

> Think about what TOKENS your parser needs to see, and how they can be
> generated, then think about in what order those tokens need to be
> recognized by the parser, and how to do it.

This comment was pretty helpful - I changed my grammar to use tokens a
lot more, e.g. from:

? ?cmdIf : '{if' WS* '}' content ('{elseif}' content)* ('{else}'
content)? WS* '{/if}';

to

? ?cmdIf: IF_OPEN WS* CURLY_CLOSE content (ELSEIF content)* (ELSE
content)? WS* IF_CLOSE;

This allows the grammar to compile, and it can now recognize some of
the basic content I pass it - thanks.

I also started using barriers so that things like IDENT are only
matched when within a command.

> Also, DOTTED_IDENT looks like it should be a parser rule rather than a
> lexer rule....
>
> dottedIdent: IDENT ( '.' IDENT )* ;

That makes sense - I was getting problems where something that matched
both IDENT and DOTTED_IDENT came up as an IDENT, and so caused the
parsing to fail.

> So, input like:
> ...
> would be considered illegal since there is WS between the { and the name?

I actually took this out to make the grammar easier to read for the
purpose of posting to this list! My original did have this (thanks for
pointing it out though!)

Thanks,
Nick


On 11 February 2011 21:50, Kevin J. Cummings
<cummings at kjchome.homeip.net> wrote:
> On 02/11/2011 02:42 PM, Nick C wrote:
>> Hi,
>>
>> I'm trying learn antlr by writing a parser for a simple HTML
>> templating language (in combination with reading the Definitive Antlr
>> Reference book - I'm only just past the calculator example so far
>> though.)
>>
>> The parser should handle something like this:
>
> "something like this" is not a very accurate description of what you
> intend to recognize.
>
>> ? {namespace My.Namespace}
>> ? {template MyTemplate}
>> ? ? ? hello
>> ? ? ? {if $name}
>> ? ? ? ? ? {print $name}
>> ? ? ? {else}
>> ? ? ? ? ? world
>> ? ? ? {/if}
>> ? ? ? <br/>
>> ? ?{/template}
>
> So, input like:
>
> ? ? ? ?{ namespace My.namespace }
> ? ? ? ?{ template MyTemplate }
> ? ? ? ? ? ? ? ?hello
> ? ? ? ? ? ? ? ?{ if $name }
> ? ? ? ? ? ? ? ? ? ? ? ?{ print $name }
> ? ? ? ? ? ? ? ?{ else }
> ? ? ? ? ? ? ? ? ? ? ? ?world
> ? ? ? ? ? ? ? ?{ /if }
> ? ? ? ? ? ? ? ?<br/>
> ? ? ? ?{ /template }
>
> would be considered illegal since there is WS between the { and the name?
>
> (Unless it is specifically forbidden to do by your language
> specification), I would separate the '{' out as a separate token, and
> change the parser so that WS is not significant, except when necessary
> to separate similar tokens. ?Then you end up with the problem of
> reserved words or keywords for things like "namespace", "template",
> "if", and "else" and making sure they don't conflict with IDENT.
>
> WS: ?( ' ' | '\t' | '\r' | '\n' )
> ? ? { skip(); }
> ?;
>
> ns: '{' 'namespace' dottedIdent '}' ;
>
> etc...
>
> Now you have the problem of ambiguity of all the rules that start with
> '{', which can be solved by increasing k to k=2; (or more) or you can
> combine them into a single parser rule like:
>
> xml: '{' ( ns | template | if | else | ... ) ;
>
> Also, DOTTED_IDENT looks like it should be a parser rule rather than a
> lexer rule....
>
> dottedIdent: IDENT ( '.' IDENT )* ;
>
> Think about what TOKENS your parser needs to see, and how they can be
> generated, then think about in what order those tokens need to be
> recognized by the parser, and how to do it.
>
> If you try to do too much at a low level, you will run into problems
> (like you have been).
>
>> My current attempt is to first build a simple version of the parser
>> without any actions, just to get it to parse valid input correctly:
>>
>> ? ? grammar Test;
>>
>> ? ? options { language = 'CSharp2'; }
>>
>> ? ? doc ? ?: ? ? ns
>> ? ? ? ? ? ? ? ? ?WS*
>> ? ? ? ? ? ? ? ? ?(template)+
>> ? ? ? ? ? ? ? ? ?WS* ;
>>
>> ? ? ns ? ? ?: ? ?'{namespace' WS+ DOTTED_IDENT WS* '}';
>>
>> ? ? template: ? ?'{template' WS+ IDENT WS* '}' content '{/template}';
>>
>> ? ? cmdSp ? : ? ?'{sp' WS* '/}';
>>
>> ? ? cmdIf ? : ? ?'{if' WS* '}' content ('{elseif}' content)* ('{else}'
>> content)? WS* '{/if}' ;
>>
>> ? ? anyCmd ?: ? ?cmdSp | cmdIf;
>> ? ? nonCmd ?: ? ?~(anyCmd); /* ~('{')*;*/
>> ? ? content : ? ?(anyCmd | nonCmd)*;
>>
>> ? ? WS ? ? ?: ? ?' '|'\t'|'\r'|'\n';
>> ? ? IDENT ? : ? ?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
>> ? ? DOTTED_IDENT
>> ? ? ? ? ? ? : ? ?IDENT ((WS)* '.' (WS)* IDENT)*;
>>
>>
>> I was hoping to parse the first example minus the {$name} print
>> statement and the conditional in the {if} statement (i.e. the $name in
>> the {if}.)
>>
>> When I try to generate the parser with the above definition, I get the
>> following warnings/errors:
>>
>> ? ? Test.g:0:0: syntax error: buildnfa: <AST>:19:16: unexpected AST node: anyCmd
>> ? ? Test.g:19:14: set complement is empty
>>
>> I'm guessing my use of ~(anyCmd) is incorrect, but I don't understand why?
>>
>> If I try replacing that with ~('{')* as per the comment above, I get
>> these errors:
>>
>> ? ? Test.g:19:18: Decision can match input such as "'{else}'" using
>> multiple alternatives: 1, 2
>> ? ? As a result, alternative(s) 2 were disabled for that input
>> ? ? ... more errors like this ...
>> ? ? Test.g:19:18: The following alternatives can never be matched: 2
>>
>> I thought this was specifying 'any character apart from {', so I don't
>> understand how '{else}' could be a match (or why there are multiple
>> alternatives - I thought I only specified one, unless * counts as
>> many?)
>
> I find that when I can't figure out why ANTLR is doing what it is doing
> that a gander at the generated source code of the parser sheds a lot of
> light on the subject. ?Then all I have to do is figure out how to change
> my parser definitions to get ANTLR to do what *I* want it to do.
>
> Sometimes that involves the use of syntactic or semantic predicates when
> things get complicated.
>
>> A brief explanation and/or a pointer to the section of the book I
>> should be reading would be most welcome.
>
> This is not necessarily covered by a specific part of the book. ?It is
> usually covered by a very detailed specification of what you are trying
> to parse. ?Once you figure out what your language's delimiters and
> separators are, the proper token definitions should just fall out.
>
>> Thanks,
>> Nick
>
> Just my $0.02. ?I hope you find some of it helpful.
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>

From habr.filip at seznam.cz  Mon Feb 14 09:50:47 2011
From: habr.filip at seznam.cz (=?us-ascii?Q?Filip=20Habr?=)
Date: Mon, 14 Feb 2011 18:50:47 +0100 (CET)
Subject: [antlr-interest] Own Tree Class
Message-ID: <16097.1817.4761-8302-2000960321-1297705847@seznam.cz>

Hello, can you help me somebody? I wrote ExpressionParser in ANTLR, which parse
math expression to a tree. I was using CommonTree class as a target. Now I need
to create my own tree class, because I have to create additional methods. Is
there any way to create own tree class, which could be used by ANTLR grammar as
a target tree class.

options {
	language=CSharp2;
	output=AST;
	ASTLabelType=MY_OWN_CLASS;
	}

Best help for me would be an advice, how to write class like CommonTree, because
the code of CommonTree methods is not visible of course. Every class, i have
written doesn't work. Thanks a lot!!!! 

From bkiers at gmail.com  Mon Feb 14 12:07:20 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 14 Feb 2011 21:07:20 +0100
Subject: [antlr-interest] Own Tree Class
In-Reply-To: <16097.1817.4761-8302-2000960321-1297705847@seznam.cz>
References: <16097.1817.4761-8302-2000960321-1297705847@seznam.cz>
Message-ID: <AANLkTinzs+UxzRUWJuvqYo1XOCBVNysaPvZKdQEm7Bpu@mail.gmail.com>

On Mon, Feb 14, 2011 at 6:50 PM, Filip Habr <habr.filip at seznam.cz> wrote:

> Hello, can you help me somebody? I wrote ExpressionParser in ANTLR, which
> parse
> math expression to a tree. I was using CommonTree class as a target. Now I
> need
> to create my own tree class, because I have to create additional methods.
> Is
> there any way to create own tree class, which could be used by ANTLR
> grammar as
> a target tree class.
>
> options {
>        language=CSharp2;
>        output=AST;
>        ASTLabelType=MY_OWN_CLASS;
>        }
>
> Best help for me would be an advice, how to write class like CommonTree,
> because
> the code of CommonTree methods is not visible of course. Every class, i
> have
> written doesn't work. Thanks a lot!!!!




On Mon, Feb 14, 2011 at 6:50 PM, Filip Habr <habr.filip at seznam.cz> wrote:

> Hello, can you help me somebody? I wrote ExpressionParser in ANTLR, which
> parse
> math expression to a tree. I was using CommonTree class as a target. Now I
> need
> to create my own tree class, because I have to create additional methods.
> Is
> there any way to create own tree class, which could be used by ANTLR
> grammar as
> a target tree class.
>
> options {
>        language=CSharp2;
>        output=AST;
>        ASTLabelType=MY_OWN_CLASS;
>        }
>
> Best help for me would be an advice, how to write class like CommonTree,
> because
> the code of CommonTree methods is not visible of course. Every class, i
> have
> written doesn't work. Thanks a lot!!!!
>
>

Besides writing your own CommonTree subclass and adding `` to your
`options{...}` section, you should write your own CommonTreeAdaptor that
actually creates instances of your custom tree(s).

A little demo. Specifically note the lines that have `// !!!` after them:

// file://BooleExp.g
grammar BoolExp;

options {
  output=AST;
  ASTLabelType=BoolExpTree;               // !!!
}

parse
  :  exp EOF -> exp
  ;

exp
  :  orExp
  ;

orExp
  :  andExp (Or^ andExp)*
  ;

andExp
  :  atom (And^ atom)*
  ;

atom
  :  '(' exp ')' -> exp
  |  True
  |  False
  ;

Or    : 'OR' | '||';
And   : 'AND' | '&&';
True  : 'true';
False : 'false';
Space : (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};

// file://Main.java
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {

    private static void walk(BoolExpTree tree, int depth) {
        if(tree == null) {
            return;
        }
        for(int i = 0; i < depth; i++) {
            System.out.print(". ");
        }
        System.out.println(tree);
        walk(tree.left(), depth + 1);
        walk(tree.right(), depth + 1);
    }

    public static void main(String[] args) throws Exception {
        ANTLRStringStream in = new ANTLRStringStream("true AND (false ||
true && (true OR false))");
        BoolExpLexer lexer = new BoolExpLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        BoolExpParser parser = new BoolExpParser(tokens);
        parser.setTreeAdaptor(new BoolExpTreeAdaptor());
      // !!!
        BoolExpParser.parse_return returnValue = parser.parse();
        CommonTree tree = (BoolExpTree)returnValue.getTree();
        walk((BoolExpTree)tree, 0);
    }
}

class BoolExpTree extends CommonTree {

    public BoolExpTree(Token token) {
        super(token);
    }

    public BoolExpTree left() {
        return super.getChildCount() > 0 ? (BoolExpTree)super.getChild(0) :
null;
    }

    public BoolExpTree right() {
        return super.getChildCount() > 1 ? (BoolExpTree)super.getChild(1) :
null;
    }

    @Override
    public String toString() {
        return "BoolExpTree[" + super.toString() + "]";
    }
}

class BoolExpTreeAdaptor extends CommonTreeAdaptor {

    @Override
    public Object create(Token token) {
        return new BoolExpTree(token);
    }
}


When generating a lexer/parser, compiling all .java source files, and
running the main class:

java -cp antlr-3.2.jar org.antlr.Tool BoolExp.g
javac -cp .:antlr-3.2.jar *.java
java -cp .:antlr-3.2.jar Main


you will see the following output:

BoolExpTree[AND]
. BoolExpTree[true]
. BoolExpTree[||]
. . BoolExpTree[false]
. . BoolExpTree[&&]
. . . BoolExpTree[true]
. . . BoolExpTree[OR]
. . . . BoolExpTree[true]
. . . . BoolExpTree[false]


Regards,

Bart.

From simonzmail at gmail.com  Mon Feb 14 21:21:54 2011
From: simonzmail at gmail.com (Simon)
Date: Tue, 15 Feb 2011 16:21:54 +1100
Subject: [antlr-interest] Compile errors with CSharp2 Target
Message-ID: <AANLkTi=OWZC=+9Ns5AhK=OfUHKWha=eV289WKqYJMfv7@mail.gmail.com>

Hello all,

I'm trying to get the CSharp2 target to work.   I followed the
instructions here:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075

except that I generated using the command line rather than using Antlrworks:

java -classpath antlr-3.1.3.jar org.antlr.Tool -o . Test.g

The test example worked just fine and produced valid CSharp code, but
when I tried a PHP grammar (which works fine when generating to Java
code) it produced a build error:

C:\Temp\PHPParser\PhpLexer.cs(132,22): error CS0722:
'Antlr.Runtime.Token': static types cannot be used as return types

I tried using various different .NET targets (2.0, 3.0, 3.5), but it
didn't help.

Can anyone give me some hints about what might be wrong here?

Cheers & Thanks!

Simon

From maxgbr at hotmail.it  Tue Feb 15 00:04:32 2011
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Tue, 15 Feb 2011 09:04:32 +0100
Subject: [antlr-interest] R:  Compile errors with CSharp2 Target
In-Reply-To: <004401cbcce6$3226d060$96747120$@gmail.com>
References: <004401cbcce6$3226d060$96747120$@gmail.com>
Message-ID: <COL124-DS187D23FB223EF7C146601AB0D30@phx.gbl>

Can you attach source (generated) code?
In C# target there are some differeneces from java Antrl runtime (e.g. Token
interface is called IToken you can find others differences here:
http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target?focusedCommen
tId=25559049#comment-25559049)
If you send generated code and maybe test grammar I can give you more info.

Best regards
Max

-----Messaggio originale-----
Da: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Per conto di Simon
Inviato: marted? 15 febbraio 2011 06:22
A: antlr-interest at antlr.org
Oggetto: [antlr-interest] Compile errors with CSharp2 Target

Hello all,

I'm trying to get the CSharp2 target to work.   I followed the
instructions here:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075

except that I generated using the command line rather than using Antlrworks:

java -classpath antlr-3.1.3.jar org.antlr.Tool -o . Test.g

The test example worked just fine and produced valid CSharp code, but when I
tried a PHP grammar (which works fine when generating to Java
code) it produced a build error:

C:\Temp\PHPParser\PhpLexer.cs(132,22): error CS0722:
'Antlr.Runtime.Token': static types cannot be used as return types

I tried using various different .NET targets (2.0, 3.0, 3.5), but it didn't
help.

Can anyone give me some hints about what might be wrong here?

Cheers & Thanks!

Simon

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From contactdick at gmail.com  Tue Feb 15 03:05:18 2011
From: contactdick at gmail.com (Richard Druce)
Date: Tue, 15 Feb 2011 11:05:18 +0000
Subject: [antlr-interest] Fairly simple grammar question (Antlr 3.1)
Message-ID: <AANLkTi=foHBO5fo=8jd5LBPTGWNp_AnfKnm2nV4UA9Hs@mail.gmail.com>

Hi,

I'm sure this question has been answered before but I'm not sure how
to phrase it well enough to find it in the archives.

I want to match to inputs an INT such as '   170  \n'
and an AMOUNT such as '  $ 170.00 ' (unfortunately there is
occasionally a space before the amount)

The following grammar works for ' $ 170.00 ' but not for  ' 170 ' it
sees the space and tries to match the AMOUNT and the output
'mismatched character ' ' expecting '.' ' is provided.  Reading
through the antlr reference book, it looks like there are a number of
ways to possibly handle this but I'm not sure how best to approach it.

grammar testing;

start :
	(AMOUNT
	| INT
	| NEW_LINE)+;

fragment DIGIT : '0'..'9';

AMOUNT 	: '$'? SPACE? DIGIT+ (','DIGIT+)? '.' DIGIT DIGIT;

INT :  DIGIT+ (','DIGIT+)?;

NEW_LINE
	: ('\r'?'\n');

WS  : (SPACE |'\t'|'\u000C')
	{$channel=HIDDEN;};
	
fragment SPACE
	: ' ';

Thanks,

Richard
--
m: +44 753 489 2926

From JALuber at gmx.de  Tue Feb 15 05:15:01 2011
From: JALuber at gmx.de (Johannes Luber)
Date: Tue, 15 Feb 2011 14:15:01 +0100
Subject: [antlr-interest] Compile errors with CSharp2 Target
Message-ID: <20110215131502.239100@gmx.net>

> Hello all,
> 
> I'm trying to get the CSharp2 target to work. I followed the
> instructions here:
> 
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075
> 
> except that I generated using the command line rather than using Antlrworks:
> 
> java -classpath antlr-3.1.3.jar org.antlr.Tool -o . Test.g
> 
> The test example worked just fine and produced valid CSharp code, but
> when I tried a PHP grammar (which works fine when generating to Java
> code) it produced a build error:
> 
> C:\Temp\PHPParser\PhpLexer.cs(132,22): error CS0722:
> 'Antlr.Runtime.Token': static types cannot be used as return types
> 
> I tried using various different .NET targets (2.0, 3.0, 3.5), but it
> didn't help.
> 
> Can anyone give me some hints about what might be wrong here?


Hi,

The problem lies in the fact the for current state of the CSharp2 target I didn't release any binaries because of a bug which kills the execution of an example grammar. I'm currently backporting the CSharp3 runtime to isolate if the error is in the runtime or in the templates for the code generation. In the meantime use CSharp3 instead. It only misses debugging support via ANTLRworks, which I hope to add to the backport again. Sorry for the less-than-ideal situation. :(

Johannes

> 
> Cheers & Thanks!
> 
> Simon
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From maxgbr at hotmail.it  Tue Feb 15 06:02:50 2011
From: maxgbr at hotmail.it (Massimiliano Donini)
Date: Tue, 15 Feb 2011 15:02:50 +0100
Subject: [antlr-interest] I:  Compile errors with CSharp2 Target
References: <004401cbcce6$3226d060$96747120$@gmail.com>	<COL124-DS187D23FB223EF7C146601AB0D30@phx.gbl>
	<AANLkTik+ZH8OqyFu4FsOCzGZ4Hwo0ZnNbyTD0TYPcROt@mail.gmail.com> 
Message-ID: <COL124-DS9DE04360CC51B87814673B0D30@phx.gbl>

Hi simon
don'you miss Language=CSharp2 in grammar's option section?
And why in grammar there is package definition? (line 98 and line 104) But
the erroneous code is defined above (line  107)

private boolean allowShortOpenTag = false;

    // Handle the first token, which will always be a BodyString.
    public Token nextToken(){
        //The following code was pulled out from super.nextToken()
        if (input.index() == 0) {
            try {
                state.token = null;
                state.channel = Token.DEFAULT_CHANNEL;
                state.tokenStartCharIndex = input.index();
                state.tokenStartCharPositionInLine =
input.getCharPositionInLine();
                state.tokenStartLine = input.getLine();
                state.text = null;
                state.backtracking = 0;
                mBodyStringRest();
                state.type = BodyString;
                emit();
                return state.token;
            } catch (NoViableAltException nva) {
                reportError(nva);
                recover(nva); // throw out current char and try again
            } catch (RecognitionException re) {
                reportError(re);
                // match() routine has already called recover()
            }    
        }
        return super.nextToken();
    }

    /**
     * Property to enable short open tags
     * 
     * Returns true if short open tags are enabled
     * false if short open tags are disabled.
     * 
     */
    public boolean isAllowShortOpenTag(){
        return allowShortOpenTag;
    }

    /**
     * Property to enable short open tags.
     *
     * Set to true to enable short open tags and false 
     * to disable.
     */
    public void setAllowShortOpenTag(boolean val){
        allowShortOpenTag = val;
    }

All these methods are written in target language (default Java) So you have
to change it for compile with C# For example Boolean should be bool and
Token should be IToken, input.index() should be input.Index and so on.

Hope it helps
Best regards
Max

-----Messaggio originale-----
Da: Simon [mailto:simonzmail at gmail.com]
Inviato: marted? 15 febbraio 2011 12:05
A: Massimiliano Donini
Oggetto: Re: [antlr-interest] Compile errors with CSharp2 Target

Hi Max,

Thanks for the thoughts - I've attached the generated code.   You can
see the grammar here:

http://code.google.com/p/phpparser/source/browse/#hg%2Fgrammar

Cheers,

Simon

On Tue, Feb 15, 2011 at 7:04 PM, Massimiliano Donini <maxgbr at hotmail.it>
wrote:
> Can you attach source (generated) code?
> In C# target there are some differeneces from java Antrl runtime (e.g. 
> Token interface is called IToken you can find others differences here:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target?focused
> Commen
> tId=25559049#comment-25559049)
> If you send generated code and maybe test grammar I can give you more
info.
>
> Best regards
> Max
>
> -----Messaggio originale-----
> Da: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Per conto di Simon
> Inviato: marted? 15 febbraio 2011 06:22
> A: antlr-interest at antlr.org
> Oggetto: [antlr-interest] Compile errors with CSharp2 Target
>
> Hello all,
>
> I'm trying to get the CSharp2 target to work. ? I followed the 
> instructions here:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075
>
> except that I generated using the command line rather than using
Antlrworks:
>
> java -classpath antlr-3.1.3.jar org.antlr.Tool -o . Test.g
>
> The test example worked just fine and produced valid CSharp code, but 
> when I tried a PHP grammar (which works fine when generating to Java
> code) it produced a build error:
>
> C:\Temp\PHPParser\PhpLexer.cs(132,22): error CS0722:
> 'Antlr.Runtime.Token': static types cannot be used as return types
>
> I tried using various different .NET targets (2.0, 3.0, 3.5), but it 
> didn't help.
>
> Can anyone give me some hints about what might be wrong here?
>
> Cheers & Thanks!
>
> Simon
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From sharwell at pixelminegames.com  Tue Feb 15 06:21:31 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 15 Feb 2011 08:21:31 -0600
Subject: [antlr-interest] Compile errors with CSharp2 Target
In-Reply-To: <AANLkTi=OWZC=+9Ns5AhK=OfUHKWha=eV289WKqYJMfv7@mail.gmail.com>
References: <AANLkTi=OWZC=+9Ns5AhK=OfUHKWha=eV289WKqYJMfv7@mail.gmail.com>
Message-ID: <004401cbcd1b$a4f127f0$eed377d0$@pixelminegames.com>

Hi Simon,

I assume you're using the grammar from this project:
http://code.google.com/p/phpparser/

If so, you'll need to modify the grammar to work with any target other than
the Java target. In the @header and @members blocks at the top, the
contained code is written in Java and will need to be ported to C#. As a
start, the @header blocks should be:

@lexer::namespace{Kuruvila.Php.Parser}
@parser::namespace{Kuruvila.Php.Parser}

You'll also need to port the embedded action in the HereDocContents lexer
rule to C#.

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Simon
Sent: Monday, February 14, 2011 11:22 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Compile errors with CSharp2 Target

Hello all,

I'm trying to get the CSharp2 target to work.   I followed the
instructions here:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557075

except that I generated using the command line rather than using Antlrworks:

java -classpath antlr-3.1.3.jar org.antlr.Tool -o . Test.g

The test example worked just fine and produced valid CSharp code, but when I
tried a PHP grammar (which works fine when generating to Java
code) it produced a build error:

C:\Temp\PHPParser\PhpLexer.cs(132,22): error CS0722:
'Antlr.Runtime.Token': static types cannot be used as return types

I tried using various different .NET targets (2.0, 3.0, 3.5), but it didn't
help.

Can anyone give me some hints about what might be wrong here?

Cheers & Thanks!

Simon

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at shmuelhome.mine.nu  Tue Feb 15 07:24:28 2011
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Tue, 15 Feb 2011 17:24:28 +0200
Subject: [antlr-interest] Fairly simple grammar question (Antlr 3.1)
In-Reply-To: <AANLkTi=foHBO5fo=8jd5LBPTGWNp_AnfKnm2nV4UA9Hs@mail.gmail.com>
References: <AANLkTi=foHBO5fo=8jd5LBPTGWNp_AnfKnm2nV4UA9Hs@mail.gmail.com>
Message-ID: <4D5A9AAC.4070401@shmuelhome.mine.nu>

On 2/15/2011 1:05 PM, Richard Druce wrote:

> Hi,
>
> I'm sure this question has been answered before but I'm not sure how
> to phrase it well enough to find it in the archives.
>
> I want to match to inputs an INT such as '   170  \n'
> and an AMOUNT such as '  $ 170.00 ' (unfortunately there is
> occasionally a space before the amount)
>
> The following grammar works for ' $ 170.00 ' but not for  ' 170 ' it
> sees the space and tries to match the AMOUNT and the output
> 'mismatched character ' ' expecting '.' ' is provided.  Reading
> through the antlr reference book, it looks like there are a number of
> ways to possibly handle this but I'm not sure how best to approach it.
>
> grammar testing;
>
> start :
> 	(AMOUNT
> 	| INT
> 	| NEW_LINE)+;
>
> fragment DIGIT : '0'..'9';
>
> AMOUNT 	: '$'? SPACE? DIGIT+ (','DIGIT+)? '.' DIGIT DIGIT;
>
> INT :  DIGIT+ (','DIGIT+)?;
>
> NEW_LINE
> 	: ('\r'?'\n');
>
> WS  : (SPACE |'\t'|'\u000C')
> 	{$channel=HIDDEN;};
> 	
> fragment SPACE
> 	: ' ';
>
> Thanks,
>
> Richard
> --
> m: +44 753 489 2926
Do you still get the problem if the '$' is not optional?


From jmurray at aerotech.com  Tue Feb 15 07:26:10 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Tue, 15 Feb 2011 10:26:10 -0500
Subject: [antlr-interest] Fairly simple grammar question (Antlr 3.1)
In-Reply-To: <AANLkTi=foHBO5fo=8jd5LBPTGWNp_AnfKnm2nV4UA9Hs@mail.gmail.com>
References: <AANLkTi=foHBO5fo=8jd5LBPTGWNp_AnfKnm2nV4UA9Hs@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393BED18A1@EXCH-VIRTUAL.aerotechad.com>

Hi Richard,

The answer is to use 2 lexer rules instead of one, and change the parser 
rule. It is generally not a good idea to mark whitespace as hidden (as 
you have done), and also use whitespace in your lexer rules. Here is 
what I would try:

grammar testing;

start :
	(	DOLLAR? INT CENTS?
	| 	NEW_LINE
	)+
	;

fragment DIGIT : '0'..'9';

DOLLAR	: '$';
CENTS	: '.' DIGIT DIGIT;

INT :  DIGIT+ (',' DIGIT+)*;

NEW_LINE
	: ('\r'?'\n');

WS  : (SPACE |'\t'|'\u000C')
	{$channel=HIDDEN;};
	
fragment SPACE
	: ' ';


- Justin

On 2/15/2011 6:05 AM, Richard Druce wrote:
> Hi,
>
> I'm sure this question has been answered before but I'm not sure how
> to phrase it well enough to find it in the archives.
>
> I want to match to inputs an INT such as '   170  \n'
> and an AMOUNT such as '  $ 170.00 ' (unfortunately there is
> occasionally a space before the amount)
>
> The following grammar works for ' $ 170.00 ' but not for  ' 170 ' it
> sees the space and tries to match the AMOUNT and the output
> 'mismatched character ' ' expecting '.' ' is provided.  Reading
> through the antlr reference book, it looks like there are a number of
> ways to possibly handle this but I'm not sure how best to approach it.
>
> grammar testing;
>
> start :
> 	(AMOUNT
> 	| INT
> 	| NEW_LINE)+;
>
> fragment DIGIT : '0'..'9';
>
> AMOUNT 	: '$'? SPACE? DIGIT+ (','DIGIT+)? '.' DIGIT DIGIT;
>
> INT :  DIGIT+ (','DIGIT+)?;
>
> NEW_LINE
> 	: ('\r'?'\n');
>
> WS  : (SPACE |'\t'|'\u000C')
> 	{$channel=HIDDEN;};
> 	
> fragment SPACE
> 	: ' ';
>
> Thanks,
>
> Richard
> --
> m: +44 753 489 2926
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From simonzmail at gmail.com  Tue Feb 15 15:13:06 2011
From: simonzmail at gmail.com (Simon)
Date: Wed, 16 Feb 2011 10:13:06 +1100
Subject: [antlr-interest] Compile errors with CSharp2 Target
In-Reply-To: <20110215131502.239100@gmx.net>
References: <20110215131502.239100@gmx.net>
Message-ID: <AANLkTikMFagsbVQ-jgeGr3oW+7ed0tsrLcqCsRUYsYss@mail.gmail.com>

Hi Johannes,

> The problem lies in the fact the for current state of the CSharp2 target I didn't release any binaries because of a bug which kills the execution of an example grammar. I'm currently backporting the CSharp3 runtime to isolate if the error is in the runtime or in the templates for the code generation. In the meantime use CSharp3 instead.

Thanks!  I tried the CSharp3 target but I seem to get some basic
syntactical errors:

> PHPParser\PhpLexer.cs(4996,6): error CS1009: Unrecognized escape sequence

When I look at that line it's got some clear problems with how it's
escaping characters:

> const string DFA4_eotS = "\3\uffff\1\7\5\uffff\1\7";

Which in CSharp2 is generated (correctly) as:

    const string DFA4_eotS = "\x03\uffff\x01\x07\x05\uffff\x01\x07";

This was generated using antlr 3.1.3.   I tried generating with the
latest version but got even more errors of a different kind:

> error CS0308: The non-generic type 'Antlr.Runtime.ParserRuleReturnScope' cannot be used with type arguments

at this line of code:

>	public class prog_return : ParserRuleReturnScope<IToken>, IAstRuleReturnScope<CommonTree>

Is there a particular ANTLR version / ANTLR runtime version that I
should use with these?  (in all cases here I'm using the DLLs from the
latest ANTLR-3.3, not sure if that's the right thing to do here
either).

> Sorry for the less-than-ideal situation. :(

Not at all - I appreciate your efforts to do it in the first place!

Cheers,

Simon

From parrt at cs.usfca.edu  Tue Feb 15 15:36:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Feb 2011 15:36:12 -0800
Subject: [antlr-interest] what would ANTLR ref guide revised edition have?
Message-ID: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>

Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)

Ter

From coaic at mac.com  Tue Feb 15 15:43:43 2011
From: coaic at mac.com (Shane MacPhillamy)
Date: Wed, 16 Feb 2011 10:43:43 +1100
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
Message-ID: <58C8DFAD-8439-4C75-967F-93111D60E351@mac.com>

Absolutely, I'd like to see discussion and tutorials around the C target.
On 16/02/2011, at 10:36 AM, Terence Parr wrote:

> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From JALuber at gmx.de  Tue Feb 15 15:47:20 2011
From: JALuber at gmx.de (Johannes Luber)
Date: Wed, 16 Feb 2011 00:47:20 +0100
Subject: [antlr-interest] Compile errors with CSharp2 Target
Message-ID: <20110215234721.239080@gmx.net>

> 
> Hi Johannes,
> 
> > The problem lies in the fact the for current state of the CSharp2 target I didn't release any binaries because of a bug which kills the execution of an example grammar. I'm currently backporting the CSharp3 runtime to isolate if the error is in the runtime or in the templates for the code generation. In the meantime use CSharp3 instead.
> 
> Thanks! I tried the CSharp3 target but I seem to get some basic
> syntactical errors:
> 
> > PHPParser\PhpLexer.cs(4996,6): error CS1009: Unrecognized escape sequence
> 
> When I look at that line it's got some clear problems with how it's
> escaping characters:
> 
> > const string DFA4_eotS = "\3\uffff\1\7\5\uffff\1\7";
> 
> Which in CSharp2 is generated (correctly) as:
> 
> ?const string DFA4_eotS = "\x03\uffff\x01\x07\x05\uffff\x01\x07";
> 
> This was generated using antlr 3.1.3. I tried generating with the
> latest version but got even more errors of a different kind:
> 
> > error CS0308: The non-generic type 'Antlr.Runtime.ParserRuleReturnScope' cannot be used with type arguments
> 
> at this line of code:
> 
> > public class prog_return : ParserRuleReturnScope<IToken>, IAstRuleReturnScope<CommonTree>
> 
> Is there a particular ANTLR version / ANTLR runtime version that I
> should use with these? (in all cases here I'm using the DLLs from the
> latest ANTLR-3.3, not sure if that's the right thing to do here
> either).

Did you read the other emails stating you may have a grammar which is meant to work with Java? If possible pls attach the grammar to the email, so we can check this and any other errors. I forgot which ANTLR versions require what runtimes exactly, but you need 3.1 or 3.2 for CSharp2. CSharp3 requires ANTLR 3.3 and other assemblies than I've provided, as the targets aren't compatible with each other yet. Not sure if those assemblies are provided in distro or where else you can find them. Sam should know more.

Johannes
> 
> > Sorry for the less-than-ideal situation. :(
> 
> Not at all - I appreciate your efforts to do it in the first place!
> 
> Cheers,
> 
> Simon
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Feb 15 15:57:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Feb 2011 15:57:54 -0800
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <58C8DFAD-8439-4C75-967F-93111D60E351@mac.com>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<58C8DFAD-8439-4C75-967F-93111D60E351@mac.com>
Message-ID: <9008CBC4-7424-4155-88DC-F5B85325F08D@cs.usfca.edu>

ok. I will do full usage examples for each target.

should book include FAQ type stuff?

Ter
On Feb 15, 2011, at 3:43 PM, Shane MacPhillamy wrote:

> Absolutely, I'd like to see discussion and tutorials around the C target.
> On 16/02/2011, at 10:36 AM, Terence Parr wrote:
> 
>> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From david.daeschler at gmail.com  Tue Feb 15 16:11:00 2011
From: david.daeschler at gmail.com (David Daeschler)
Date: Tue, 15 Feb 2011 19:11:00 -0500
Subject: [antlr-interest] Compile errors with CSharp2 Target
In-Reply-To: <20110215234721.239080@gmx.net>
References: <20110215234721.239080@gmx.net>
Message-ID: <AANLkTimiD4oa=56QYOFSJoOCLKdHdzarbk1tFcZZNVkB@mail.gmail.com>

Just my two cents here

I also had an issue until I manually compiled the latest version of the
CSharp3 runtime to work with the current 3.3 ANTLR release. I had code
generation issues when I tried to use the prebuilt DOT-NET-runtime-3.1.zip
with the current ANTLR 3.3 release.

Hope this helps.
- David

On Tue, Feb 15, 2011 at 6:47 PM, Johannes Luber <JALuber at gmx.de> wrote:

> >
> > Hi Johannes,
> >
> > > The problem lies in the fact the for current state of the CSharp2
> target I didn't release any binaries because of a bug which kills the
> execution of an example grammar. I'm currently backporting the CSharp3
> runtime to isolate if the error is in the runtime or in the templates for
> the code generation. In the meantime use CSharp3 instead.
> >
> > Thanks! I tried the CSharp3 target but I seem to get some basic
> > syntactical errors:
> >
> > > PHPParser\PhpLexer.cs(4996,6): error CS1009: Unrecognized escape
> sequence
> >
> > When I look at that line it's got some clear problems with how it's
> > escaping characters:
> >
> > > const string DFA4_eotS = "\3\uffff\1\7\5\uffff\1\7";
> >
> > Which in CSharp2 is generated (correctly) as:
> >
> >  const string DFA4_eotS = "\x03\uffff\x01\x07\x05\uffff\x01\x07";
> >
> > This was generated using antlr 3.1.3. I tried generating with the
> > latest version but got even more errors of a different kind:
> >
> > > error CS0308: The non-generic type
> 'Antlr.Runtime.ParserRuleReturnScope' cannot be used with type arguments
> >
> > at this line of code:
> >
> > > public class prog_return : ParserRuleReturnScope<IToken>,
> IAstRuleReturnScope<CommonTree>
> >
> > Is there a particular ANTLR version / ANTLR runtime version that I
> > should use with these? (in all cases here I'm using the DLLs from the
> > latest ANTLR-3.3, not sure if that's the right thing to do here
> > either).
>
> Did you read the other emails stating you may have a grammar which is meant
> to work with Java? If possible pls attach the grammar to the email, so we
> can check this and any other errors. I forgot which ANTLR versions require
> what runtimes exactly, but you need 3.1 or 3.2 for CSharp2. CSharp3 requires
> ANTLR 3.3 and other assemblies than I've provided, as the targets aren't
> compatible with each other yet. Not sure if those assemblies are provided in
> distro or where else you can find them. Sam should know more.
>
> Johannes
> >
> > > Sorry for the less-than-ideal situation. :(
> >
> > Not at all - I appreciate your efforts to do it in the first place!
> >
> > Cheers,
> >
> > Simon
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From coaic at mac.com  Tue Feb 15 16:37:49 2011
From: coaic at mac.com (Shane MacPhillamy)
Date: Wed, 16 Feb 2011 11:37:49 +1100
Subject: [antlr-interest] what would ANTLR ref guide revised
	edition	have?
In-Reply-To: <9008CBC4-7424-4155-88DC-F5B85325F08D@cs.usfca.edu>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<58C8DFAD-8439-4C75-967F-93111D60E351@mac.com>
	<9008CBC4-7424-4155-88DC-F5B85325F08D@cs.usfca.edu>
Message-ID: <8491B350-FD33-4DE5-A97C-CAE8C0C77070@mac.com>

I think some FAQ stuff would be helpful. There are a couple of things I've found a bit challenging so far. Some points;

- Eclipse integration (Galileo, Helios etc) has provided me with a few unexpected surprises
- Presently I'm using a combination of Emacs, make, ANTLRWorks and Xcode -- works for me, though not the easiest to explain to a new comer.
- Some strategies for debugging non Java targets, in particular Tree Grammars.

Cheers, Shane
On 16/02/2011, at 10:57 AM, Terence Parr wrote:

> ok. I will do full usage examples for each target.
> 
> should book include FAQ type stuff?
> 
> Ter
> On Feb 15, 2011, at 3:43 PM, Shane MacPhillamy wrote:
> 
>> Absolutely, I'd like to see discussion and tutorials around the C target.
>> On 16/02/2011, at 10:36 AM, Terence Parr wrote:
>> 
>>> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
>>> 
>>> Ter
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rschneid at bridgewater.edu  Tue Feb 15 17:01:38 2011
From: rschneid at bridgewater.edu (Raymond J. Schneider)
Date: Tue, 15 Feb 2011 20:01:38 -0500
Subject: [antlr-interest] what would ANTLR ref guide revised edition
 have?
In-Reply-To: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
Message-ID: <915A31E60D7DFE4BB11CAF9CD7545FEA032D0BD30592@EXMB.Bridgewater.local>

An orderly sequence of structured examples of increasing difficulty illustrating the concepts covering all the bases would be nice.  This is especially true as one enters the realm of trees and then string rewriting.  I used the book for a class on writing language parsers and we had a good deal of difficulty after the first part.  We're currently using the Language Implementation Patterns book with a bit more success so far because of the orderly presentation that the use of patterns is providing.

Regards, Ray
--
Ray Schneider,PE, Ph.D
Associate Professor
Math and Computer Science
Bridgewater College
http://www.bridgewater.edu/~rschneid/
http://theweedlessgarden.blogspot.com
________________________________________
From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr [parrt at cs.usfca.edu]
Sent: Tuesday, February 15, 2011 18:36
To: antlr-interest Interest
Subject: [antlr-interest] what would ANTLR ref guide revised edition have?

Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Tue Feb 15 17:37:55 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Feb 2011 17:37:55 -0800
Subject: [antlr-interest] what would ANTLR ref guide revised
	edition	have?
In-Reply-To: <8491B350-FD33-4DE5-A97C-CAE8C0C77070@mac.com>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<58C8DFAD-8439-4C75-967F-93111D60E351@mac.com>
	<9008CBC4-7424-4155-88DC-F5B85325F08D@cs.usfca.edu>
	<8491B350-FD33-4DE5-A97C-CAE8C0C77070@mac.com>
Message-ID: <0E101F7F-9395-4BED-9F6C-F22E22F566DE@cs.usfca.edu>

Ah. Good point. I should talk about the eclipse plug-ins.

on the targets, I will probably have to limit myself to some examples that demonstrate how to use that target. I will ask the authors of the targets to explain what works and what doesn't work.
Ter

On Feb 15, 2011, at 4:37 PM, Shane MacPhillamy wrote:

> I think some FAQ stuff would be helpful. There are a couple of things I've found a bit challenging so far. Some points;
> 
> - Eclipse integration (Galileo, Helios etc) has provided me with a few unexpected surprises
> - Presently I'm using a combination of Emacs, make, ANTLRWorks and Xcode -- works for me, though not the easiest to explain to a new comer.
> - Some strategies for debugging non Java targets, in particular Tree Grammars.
> 
> Cheers, Shane
> On 16/02/2011, at 10:57 AM, Terence Parr wrote:
> 
>> ok. I will do full usage examples for each target.
>> 
>> should book include FAQ type stuff?
>> 
>> Ter
>> On Feb 15, 2011, at 3:43 PM, Shane MacPhillamy wrote:
>> 
>>> Absolutely, I'd like to see discussion and tutorials around the C target.
>>> On 16/02/2011, at 10:36 AM, Terence Parr wrote:
>>> 
>>>> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
>>>> 
>>>> Ter
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Tue Feb 15 17:39:54 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 15 Feb 2011 19:39:54 -0600
Subject: [antlr-interest] Updated C# port and CSharp3 target (C# build
	3.3.1.7705)
Message-ID: <007601cbcd7a$69df30d0$3d9d9270$@pixelminegames.com>

Hello everyone,

 

First of all, I have to make the following important note: due to a change
in ANTLRCore.sti, this build of Antlr3.exe (the tool) only works properly
with the included CSharp3 target. Likewise, the CSharp3 target only works
properly with this version of the tool (the Java version will not work).

 

I'll have to post the list of changes since the 3.3.0 release online later.

 

For the distribution, there are several options here:

 

.         CSharp3Runtime
<http://www.tunnelvisionlabs.com/downloads/antlr/antlr-dotnet-csharp3runtime
-3.3.1.7705.7z> : Only includes the latest build of Antlr3.Runtime.dll.

.         CSharp3Boostrap
<http://www.tunnelvisionlabs.com/downloads/antlr/antlr-dotnet-csharp3bootstr
ap-3.3.1.7705.7z> : Includes all files necessary to generate code for (and
run) grammars using the CSharp3 target. It also includes the MSBuild targets
file to include ANTLR in the Visual Studio build process.

.         Tool
<http://www.tunnelvisionlabs.com/downloads/antlr/antlr-dotnet-tool-3.3.1.770
5.7z> : In addition to the files in CSharp3Bootstrap, this includes all
targets and debug symbol files (*.PDB) for all binaries. It also includes
Antlr4.StringTemplate.dll and Antlr4.StringTemplate.Visualizer.dll.

.         Source
<http://www.tunnelvisionlabs.com/downloads/antlr/antlr-dotnet-source-3.3.1.7
705.7z> : Includes the source tree for the Tool distribution (no binaries).

 

You may find the following documentation for the CSharp3 target useful as
well. If you installed a previous copy of the Visual Studio extensions,
you'll need to uninstall them thorugh the Visual Studio 2010 Extension
Manager before installing the new versions.

 

http://www.tunnelvisionlabs.com/downloads/antlr/ANTLRCSharp3_VS2010.xps

 

.         Visual Studio project setup for ANTLR grammars with your project.

.         Visual Studio 2010 highlighting and IntelliSense support for ANTLR
v3 grammars and highlighting support for StringTemplate v4 group files.

 

Thank you,

Sam Harwell

 


From parrt at cs.usfca.edu  Tue Feb 15 17:40:04 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 15 Feb 2011 17:40:04 -0800
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <915A31E60D7DFE4BB11CAF9CD7545FEA032D0BD30592@EXMB.Bridgewater.local>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<915A31E60D7DFE4BB11CAF9CD7545FEA032D0BD30592@EXMB.Bridgewater.local>
Message-ID: <E3EA05F7-E11E-49D7-82D3-5247283319CF@cs.usfca.edu>

Hi Ray,

Yeah, the language implementation patterns book is much more amenable to a class I would say. the reference guide is more of an accompanying text. do think that is working out for you this semester would be examples in the LIP book?

 I'm actually teaching a programming language is classed myself this semester. I have been doing six projects that take anywhere from 3 to 10 hours depending on their abilities. This gives them the skills necessary to tackle the Smalltalk compiler and interpreter starting next month. yikes. I hope it does anyway ;)

Ter
On Feb 15, 2011, at 5:01 PM, Raymond J. Schneider wrote:

> An orderly sequence of structured examples of increasing difficulty illustrating the concepts covering all the bases would be nice.  This is especially true as one enters the realm of trees and then string rewriting.  I used the book for a class on writing language parsers and we had a good deal of difficulty after the first part.  We're currently using the Language Implementation Patterns book with a bit more success so far because of the orderly presentation that the use of patterns is providing.
> 
> Regards, Ray
> --
> Ray Schneider,PE, Ph.D
> Associate Professor
> Math and Computer Science
> Bridgewater College
> http://www.bridgewater.edu/~rschneid/
> http://theweedlessgarden.blogspot.com
> ________________________________________
> From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr [parrt at cs.usfca.edu]
> Sent: Tuesday, February 15, 2011 18:36
> To: antlr-interest Interest
> Subject: [antlr-interest] what would ANTLR ref guide revised edition have?
> 
> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kirby.bohling at gmail.com  Tue Feb 15 17:46:27 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Tue, 15 Feb 2011 19:46:27 -0600
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
Message-ID: <AANLkTikbT6ES5Lq8LaTO2B7_5chahVZLCOahW-xcQ1Ec@mail.gmail.com>

On Tue, Feb 15, 2011 at 5:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book). ?Any suggestions to improve? ?One obvious thing: discuss not just java target :)
>
> Ter
>

The thing I struggled with the most was overcoming my Lex-like
expectations of the Lexer (which as I understand it is something to be
addressed in Antlr4).  A lot of people appear to struggle with the
lexer not falling back to the last matched token if there was a
partial match that didn't reach completion.

The other piece of advise I had to take to heart was avoiding inline
tokens in my Parser which are inserted if you have a combined grammar.
 I can't remember if the book or the list advised avoiding those, but
specifying the lexer grammar and parser grammar separately greatly
helped me overcome my incorrect assumptions (backtracking the lexer
and parser are different).  As virtually every example used a combined
grammar, and had implicit tokens in the parser rules often, I had many
problems because I didn't grok the rules about when and how to safely
use implicit tokens.  Once I stopped using them entirely, ANTLR became
a much smoother experience.

Kirby

From punch at cse.msu.edu  Tue Feb 15 17:55:09 2011
From: punch at cse.msu.edu (bill punch)
Date: Tue, 15 Feb 2011 20:55:09 -0500
Subject: [antlr-interest] what would ANTLR ref guide revised
	edition	have?
In-Reply-To: <E3EA05F7-E11E-49D7-82D3-5247283319CF@cs.usfca.edu>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>	<915A31E60D7DFE4BB11CAF9CD7545FEA032D0BD30592@EXMB.Bridgewater.local>
	<E3EA05F7-E11E-49D7-82D3-5247283319CF@cs.usfca.edu>
Message-ID: <4D5B2E7D.7050408@cse.msu.edu>

Let me say that I really like ANTLR and have been using both books
extensively. Thus I hope this is taken as constructive criticism.

I think what Ray is saying is what I've been running into. I'm teaching
the Compiler's class (for the first time) and using the ANTLR reference
book. It has been a bit of a struggle to get things in an order that I
think they can easily assimilate. I want to focus on the higher-level
issues and less on the details of the underlying programming, until it
has to be addressed. For example, the progression so far has been :
lexer/parser for a simple language, output an AST for that simple
language, now interpret (AST->Java Tree Walker) with global scope, no
functions. Next I hope is language with scope, then probably translation
to (probably) Java bytecode using templates. Each project adds a little
more of the language, so we have something at the end. I'm working with
Logo at the moment, with some Java/Swing for the turtle.

What I've found is that I need something in-between the two books. The
reference book has most of the stuff I need, but a bit spread around and
with what seems like a lot of detail in between. The LIP has far too
much detail in many ways, which makes getting the point across difficult.

As with Ray, I would prefer a better progression like the LIP book, but
at a level above the Java details that come up. One can go quite a ways
without having to write a lot of Java, and then it can be introduced
slowly. They didn't really have to write much Java till the interpreter,
and even then I took the Pie example and stripped out most of the scope
stuff (took out functions, error checking) to get down to a basic
skeleton. I think a lot of that material could have been discussed
(Symbol, Scope, resolve, etc.) at a higher level and then shown
implemented in Java. I think a lot of the details get caught up in the
language and it really shouldn't have to.

If done as described, I suppose it would be easier to get other targets
in, though I think if the concepts are clear and one implementation is
provided, others would be easily done (perhaps as appendicies).

Anyway, it has been something I've been thinking about.

      >>>bill<<<


On 2/15/11 8:40 PM, Terence Parr wrote:
> Hi Ray,
>
> Yeah, the language implementation patterns book is much more amenable to a class I would say. the reference guide is more of an accompanying text. do think that is working out for you this semester would be examples in the LIP book?
>
>  I'm actually teaching a programming language is classed myself this semester. I have been doing six projects that take anywhere from 3 to 10 hours depending on their abilities. This gives them the skills necessary to tackle the Smalltalk compiler and interpreter starting next month. yikes. I hope it does anyway ;)
>
> Ter
> On Feb 15, 2011, at 5:01 PM, Raymond J. Schneider wrote:
>
>> An orderly sequence of structured examples of increasing difficulty illustrating the concepts covering all the bases would be nice.  This is especially true as one enters the realm of trees and then string rewriting.  I used the book for a class on writing language parsers and we had a good deal of difficulty after the first part.  We're currently using the Language Implementation Patterns book with a bit more success so far because of the orderly presentation that the use of patterns is providing.
>>
>> Regards, Ray
>> --
>> Ray Schneider,PE, Ph.D
>> Associate Professor
>> Math and Computer Science
>> Bridgewater College
>> http://www.bridgewater.edu/~rschneid/
>> http://theweedlessgarden.blogspot.com
>> ________________________________________
>> From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr [parrt at cs.usfca.edu]
>> Sent: Tuesday, February 15, 2011 18:36
>> To: antlr-interest Interest
>> Subject: [antlr-interest] what would ANTLR ref guide revised edition have?
>>
>> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
>>
>> Ter
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From michael.bedward at gmail.com  Tue Feb 15 18:05:36 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 16 Feb 2011 13:05:36 +1100
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <AANLkTikbT6ES5Lq8LaTO2B7_5chahVZLCOahW-xcQ1Ec@mail.gmail.com>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<AANLkTikbT6ES5Lq8LaTO2B7_5chahVZLCOahW-xcQ1Ec@mail.gmail.com>
Message-ID: <AANLkTimpPzgLqrf5O=Bhmwo-aYyWtQAB+zz14YAS6vwg@mail.gmail.com>

My wish list would be:

1. Tree rewriting with pattern matching: the concept is wonderfully
simple but the execution, or rather my execution, is harder. The
examples dealing with variable scope in the LIP book are really good,
and make it look obvious, but somehow I still find myself struggling
to work out what should be topdown vs bottomup, or trying to
understand errors like the one I asked about recently
(http://groups.google.com/group/il-antlr-interest/browse_thread/thread/020ae7e3140004c5/a233c2282993d971?lnk=raot&pli=1)

2. Some examples of using with more than one token channel in a parser.

3. Examples with imported / island grammars.

I'm shamelessly suggesting things that I've asked about on the list
recently but received no replies :)

Michael

From simonzmail at gmail.com  Tue Feb 15 23:42:19 2011
From: simonzmail at gmail.com (Simon)
Date: Wed, 16 Feb 2011 18:42:19 +1100
Subject: [antlr-interest] Compile errors with CSharp2 Target
In-Reply-To: <20110215234721.239080@gmx.net>
References: <20110215234721.239080@gmx.net>
Message-ID: <AANLkTind4_5Lpmg3ry_AoMfrq0ue1kZNSEM7PutkbcCb@mail.gmail.com>

On Wed, Feb 16, 2011 at 10:47 AM, Johannes Luber <JALuber at gmx.de> wrote:
> Did you read the other emails stating you may have a grammar which is meant to work with Java? If possible pls attach the grammar to the email, so we can check this and any other errors. I forgot which ANTLR versions require what runtimes exactly, but you need 3.1 or 3.2 for CSharp2. CSharp3 requires ANTLR 3.3 and other assemblies than I've provided, as the targets aren't compatible with each other yet. Not sure if those assemblies are provided in distro or where else you can find them. Sam should know more.

Ah, thanks to everyone for pointing out the obvious - I looked more
thoroughly in the grammar and in the end did find some stray bits of
Java code which, once eliminated let it compile just fine using
CSharp2.   I still have the same errors with CSharp3 (incorrect escape
sequences when generated with antlr 3.1.3, different errors with antlr
3.3).   I've attached the "purified" Php.g grammar that succeeds in
CSharp2 but fails in CSharp3 in case it is useful - however I think I
will proceed with CSharp2 at this point.

Thanks again for the help!

Simon
-------------- next part --------------
//Todo: Labels and goto have been disabled, need to test on 5.3 

grammar Php;

options {
    backtrack = true; 
    memoize = true;
    k=2;
    output = AST;
    ASTLabelType = CommonTree;
    language = 'CSharp3';
}

tokens{
    SemiColon = ';';
    Comma = ',';
    OpenBrace = '(';
    CloseBrace = ')';
    OpenSquareBrace = '[';
    CloseSquareBrace = ']';
    OpenCurlyBrace = '{';
    CloseCurlyBrace = '}';
    ArrayAssign = '=>';
    LogicalOr = '||';
    LogicalAnd = '&&';
    ClassMember = '::';
    InstanceMember = '->';
    SuppressWarnings = '@';
    QuestionMark = '?';
    Dollar = '$';
    Colon = ':';
    Dot = '.';
    Ampersand = '&';
    Pipe = '|';
    Bang = '!';
    Plus = '+';
    Minus = '-';
    Asterisk = '*';
    Percent = '%';
    Forwardslash = '/'; 
    Tilde = '~';
    Equals = '=';
    New = 'new';
    Clone = 'clone';
    Echo = 'echo';
    If = 'if';
    Else = 'else';
    ElseIf = 'elseif';
    For = 'for';
    Foreach = 'foreach';
    While = 'while';
    Do = 'do';
    Switch = 'switch';
    Case = 'case';
    Default = 'default';
    Function = 'function';
    Break = 'break';
    Continue = 'continue';
    //Goto = 'goto';
    Return = 'return';
    Global = 'global';
    Static = 'static';
    And = 'and';
    Or = 'or';
    Xor = 'xor';
    Instanceof = 'instanceof';
    
    Class = 'class';
    Interface = 'interface';
    Extends = 'extends';
    Implements = 'implements';
    Abstract = 'abstract';
    Var = 'var';
    Const = 'const';
    Modifiers;
    ClassDefinition;
    
    Block;
    Params;
    Apply;
    Member;
    Reference;
    Empty;
    Prefix;
    Postfix;
    IfExpression;
    Label;
    Cast;
    ForInit;
    ForCondition;
    ForUpdate;
    Field;
    Method;
}

@parser::namespace { PHPParser } 

@lexer::namespace { PHPParser }


@header{
// package com.bnw.php; 
}
@lexer::header{
// package com.bnw.php; 
}
@lexer::members{
}


prog : statement*;

statement
    : simpleStatement? BodyString
    | '{' statement '}' -> statement
    | bracketedBlock
    //| UnquotedString Colon statement -> ^(Label UnquotedString statement)
    | classDefinition
    | interfaceDefinition
    | complexStatement
    | simpleStatement ';'!
    ;
    
bracketedBlock
    : '{' stmts=statement* '}' -> ^(Block $stmts)
    ;

interfaceDefinition
    : Interface interfaceName=UnquotedString interfaceExtends?
        OpenCurlyBrace
        interfaceMember*
        CloseCurlyBrace
        -> ^(Interface $interfaceName interfaceExtends? interfaceMember*)
    ;

interfaceExtends
    : Extends^ UnquotedString (Comma! UnquotedString)*
    ;
interfaceMember
    : Const UnquotedString (Equals atom)? ';' 
        -> ^(Const UnquotedString atom?)
    | fieldModifier* Function UnquotedString parametersDefinition ';'
        -> ^(Method ^(Modifiers fieldModifier*) UnquotedString parametersDefinition)
    ;

classDefinition
    :   classModifier? 
        Class className=UnquotedString 
        (Extends extendsclass=UnquotedString)? 
        classImplements?
        OpenCurlyBrace
        classMember*
        CloseCurlyBrace 
        -> ^(Class ^(Modifiers classModifier?) $className ^(Extends $extendsclass)? classImplements?
            classMember*
        )
    ;
    
classImplements
    :  Implements^ (UnquotedString (Comma! UnquotedString)*)
    ;

classMember
    : fieldModifier* Function UnquotedString parametersDefinition 
        (bracketedBlock | ';')
        -> ^(Method ^(Modifiers fieldModifier*) UnquotedString parametersDefinition bracketedBlock?)
    | Var Dollar UnquotedString (Equals atom)? ';' 
        -> ^(Var ^(Dollar UnquotedString) atom?) 
    | Const UnquotedString (Equals atom)? ';' 
        -> ^(Const UnquotedString atom?)
    | fieldModifier* (Dollar UnquotedString) (Equals atom)? ';' 
        -> ^(Field ^(Modifiers fieldModifier*) ^(Dollar UnquotedString) atom?)
    ;

fieldDefinition
    : Dollar UnquotedString (Equals atom)? ';'-> ^(Field ^(Dollar UnquotedString) atom?)
    ;
    
classModifier
    : 'abstract';
    
fieldModifier
    : AccessModifier | 'abstract' | 'static' 
    ;


complexStatement
    : If '(' ifCondition=expression ')' ifTrue=statement conditional?
        -> ^('if' expression $ifTrue conditional?)
    | For '(' forInit forCondition forUpdate ')' statement -> ^(For forInit forCondition forUpdate statement)
    | Foreach '(' variable 'as' arrayEntry ')' statement -> ^(Foreach variable arrayEntry statement)
    | While '(' whileCondition=expression? ')' statement -> ^(While $whileCondition statement)
    | Do statement While '(' doCondition=expression ')' ';' -> ^(Do statement $doCondition)
    | Switch '(' expression ')' '{'cases'}' -> ^(Switch expression cases)
    | functionDefinition
    ;

simpleStatement
    : Echo^ commaList
    | Global^ name (','! name)*
    | Static^ variable Equals! atom
    | Break^ Integer?
    | Continue^ Integer?
    //| Goto^ UnquotedString
    | Return^ expression?
    | RequireOperator^ expression
    | expression
    ;


conditional
    : ElseIf '(' ifCondition=expression ')' ifTrue=statement conditional? -> ^(If $ifCondition $ifTrue conditional?)
    | Else statement -> statement
    ;

forInit
    : commaList? ';' -> ^(ForInit commaList?)
    ;

forCondition
    : commaList? ';' -> ^(ForCondition commaList?)
    ;
    
forUpdate
    : commaList? -> ^(ForUpdate commaList?)
    ;

cases 
    : casestatement*  defaultcase
    ;

casestatement
    : Case^ expression ':'! statement*
    ;

defaultcase 
    : (Default^ ':'! statement*)
    ;

functionDefinition
    : Function UnquotedString parametersDefinition bracketedBlock -> 
        ^(Function UnquotedString parametersDefinition bracketedBlock)
    ;

parametersDefinition
    : OpenBrace (paramDef (Comma paramDef)*)? CloseBrace -> ^(Params paramDef*) 
    ;

paramDef
    : paramName (Equals^ atom)?
    ;

paramName
    : Dollar^ UnquotedString
    | Ampersand Dollar UnquotedString -> ^(Ampersand ^(Dollar UnquotedString))
    ;

commaList
    : expression (','! expression)* 
    ;
    
expression
    : weakLogicalOr
    ;

weakLogicalOr
    : weakLogicalXor (Or^ weakLogicalXor)*
    ;

weakLogicalXor
    : weakLogicalAnd (Xor^ weakLogicalAnd)*
    ;
    
weakLogicalAnd
    : assignment (And^ assignment)*
    ;

assignment
    : name ((Equals | AsignmentOperator)^ assignment)
    | ternary
    ;

ternary
    : logicalOr QuestionMark expression Colon expression -> ^(IfExpression logicalOr expression*)
    | logicalOr
    ;
    
logicalOr
    : logicalAnd (LogicalOr^ logicalAnd)*
    ;

logicalAnd
    : bitwiseOr (LogicalAnd^ bitwiseOr)*
    ;
    
bitwiseOr
    : bitWiseAnd (Pipe^ bitWiseAnd)*
    ;

bitWiseAnd
    : equalityCheck (Ampersand^ equalityCheck)*
    ;

equalityCheck
    : comparisionCheck (EqualityOperator^ comparisionCheck)?
    ;
    
comparisionCheck
    : bitWiseShift (ComparisionOperator^ bitWiseShift)?
    ;

bitWiseShift
    : addition (ShiftOperator^ addition)*
    ;
    
addition
    : multiplication ((Plus | Minus | Dot)^ multiplication)*
    ;

multiplication
    : logicalNot ((Asterisk | Forwardslash | Percent)^ logicalNot)*
    ;

logicalNot
    : Bang^ logicalNot
    | instanceOf
    ;

instanceOf
    : negateOrCast (Instanceof^ negateOrCast)?
    ;

negateOrCast
    : (Tilde | Minus | SuppressWarnings)^ increment
    | OpenBrace PrimitiveType CloseBrace increment -> ^(Cast PrimitiveType increment)
    | OpenBrace! weakLogicalAnd CloseBrace!
    | increment
    ;

increment
    : IncrementOperator name -> ^(Prefix IncrementOperator name)
    | name IncrementOperator -> ^(Postfix IncrementOperator name)
    | newOrClone
    ;

newOrClone
    : New^ nameOrFunctionCall
    | Clone^ name
    | atomOrReference
    ;

atomOrReference
    : atom
    | reference
    ;

arrayDeclaration
    : Array OpenBrace (arrayEntry (Comma arrayEntry)*)? CloseBrace -> ^(Array arrayEntry*)
    ;

arrayEntry
    : (keyValuePair | expression)
    ;

keyValuePair
    : (expression ArrayAssign expression) -> ^(ArrayAssign expression+)
    ;

atom: SingleQuotedString | DoubleQuotedString | Integer | Real | Boolean | arrayDeclaration
    ;

//Need to be smarter with references, they have their own tower of application.
reference
    : Ampersand^ nameOrFunctionCall
    | nameOrFunctionCall
    ;

nameOrFunctionCall
    : name OpenBrace (expression (Comma expression)*)? CloseBrace -> ^(Apply name expression*)
    | name
    ;

name: staticMemberAccess
    | memberAccess
    | variable
    ;
    
staticMemberAccess
    : UnquotedString '::'^ variable
    ;

memberAccess
    : variable 
        ( OpenSquareBrace^ expression CloseSquareBrace!
        | '->'^ UnquotedString)*
    ;
    
variable
    : Dollar^ variable
    | UnquotedString
    ;

BodyString 
    : '?>' (('<' ~ '?')=> '<' | ~'<' )* ('<?' ('php'?))?
    ;

fragment
FirstBodyString
    : (('<' ~ '?')=> '<' | ~'<' )* '<?' ('php'?)
    ;

MultilineComment    
    : '/*' (('*' ~ '/')=>'*' | ~ '*')* '*/' {$channel=HIDDEN;}
    ;

SinglelineComment
    : '//'  (('?' ~'>')=>'?' | ~('\n'|'?'))* {$channel=HIDDEN;}
    ;

UnixComment
    : '#' (('?' ~'>')=>'?' | ~('\n'|'?'))* {$channel=HIDDEN;}
    ;
    

Array
    : ('a'|'A')('r'|'R')('r'|'R')('a'|'A')('y'|'Y')
    ;

RequireOperator
    : 'require' | 'require_once' | 'include' | 'include_once'
    ;

PrimitiveType
    : 'int'|'float'|'string'|'array'|'object'|'bool'
    ;

AccessModifier
    : 'public' | 'private' | 'protected' 
    ;

fragment
Decimal	
	:('1'..'9' ('0'..'9')*)|'0'
	;
fragment
Hexadecimal
	: '0'('x'|'X')('0'..'9'|'a'..'f'|'A'..'F')+
	;
	
fragment
Octal
	: '0'('0'..'7')+
	;
Integer
	:Octal|Decimal|Hexadecimal
	;
	
fragment
Digits
	: '0'..'9'+
	;
	
fragment
DNum
	:(('.' Digits)=>('.' Digits)|(Digits '.' Digits?))
	;
	
fragment
Exponent_DNum
	:((Digits|DNum)('e'|'E')('+''-')?Digits)
	;
	
Real
    : DNum|Exponent_DNum
    ;

Boolean
    : 'true' | 'false'
    ;

SingleQuotedString
    : '\'' (('\\' '\'')=>'\\' '\''
    |         ('\\' '\\')=>'\\' '\\' 
    |         '\\' | ~ ('\'' | '\\'))* 
      '\''
    ;

fragment
EscapeCharector
    : 'n' | 'r' | 't' | '\\' | '$' | '"' | Digits | 'x'
    ;

DoubleQuotedString
    : '"'  ( ('\\' EscapeCharector)=> '\\' EscapeCharector 
    | '\\' 
    | ~('\\'|'"') )* 
      '"'
    ;

//Todo handle '\x7f' - '\xff'
UnquotedString
   : ('a'..'z' | 'A'..'Z' | '_')  ('a'..'z' | 'A'..'Z' | '0'..'9' | '_')*
   ;
   
AsignmentOperator
    : '+='|'-='|'*='|'/='|'.='|'%='|'&='|'|='|'^='|'<<='|'>>='
    ;
    
EqualityOperator
    : '==' | '!=' | '===' | '!=='
    ;

ComparisionOperator
    : '<' | '<=' | '>' | '>=' | '<>'
    ;
    
ShiftOperator
    : '<<' | '>>'
    ;

IncrementOperator
    : '--'|'++'
    ;
    

fragment
Eol : '\n'
    ;

WhiteSpace
@init{
    $channel=HIDDEN;
}
	:	(' '| '\t'| '\n'|'\r')*
	;
	



From devdoer2 at gmail.com  Wed Feb 16 00:18:42 2011
From: devdoer2 at gmail.com (devdoer bird)
Date: Wed, 16 Feb 2011 16:18:42 +0800
Subject: [antlr-interest] [begginer question] could somebody help me to see
	this simple grammar?
Message-ID: <AANLkTinpqzYknpHkewDhXCLT76nC_pjKwAc+5kwY_5wE@mail.gmail.com>

HI,all:

the grammar is list below:
----------------------------------------------
logicExp
 :  FIELDNAME ( '>' | '<' ) (CONST_INT | CONST_STRING)
 | '(' logicExp')'

 ;

fragment DIGIT : '0'..'9';
fragment LOWER  : 'a'..'z';
fragment UPPER  : 'A'..'Z';
FIELDNAME : LOWER (LOWER|DIGIT)*  ;
CONST_INT : DIGIT+;
CONST_STRING : '"' (LOWER|UPPER|DIGIT)* '"';

----------------------------------------

When I use the antlrworks to test the grammar,I use the input "( a>3 )",but
the interepter failed to recoginze the last ")", output as follows:
 logicExp
   / \
 /    \
(    logicExp
      /\  \
     /  \  \
    a   >  3

As you see, the last ')'  is missed.
So what's wrong with my grammar?

From bkiers at gmail.com  Wed Feb 16 00:40:01 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 16 Feb 2011 09:40:01 +0100
Subject: [antlr-interest] [begginer question] could somebody help me to
 see this simple grammar?
In-Reply-To: <AANLkTinpqzYknpHkewDhXCLT76nC_pjKwAc+5kwY_5wE@mail.gmail.com>
References: <AANLkTinpqzYknpHkewDhXCLT76nC_pjKwAc+5kwY_5wE@mail.gmail.com>
Message-ID: <AANLkTinFoezB1BN-eyCadr3uOqGD3=iKzRy3oaFGnG=h@mail.gmail.com>

On Wed, Feb 16, 2011 at 9:18 AM, devdoer bird <devdoer2 at gmail.com> wrote:

> ...
> As you see, the last ')'  is missed.
> So what's wrong with my grammar?
>

Nothing.

Given your grammar (and adding a `parse` rule to it):

grammar T;

parse
  :  logicExp EOF {System.out.println("parsed :: " + $logicExp.text);}
  ;

logicExp
  :  FIELDNAME ( '>' | '<' ) (CONST_INT | CONST_STRING)
  | '(' logicExp')'
  ;

fragment DIGIT : '0'..'9';
fragment LOWER  : 'a'..'z';
fragment UPPER  : 'A'..'Z';
FIELDNAME : LOWER (LOWER|DIGIT)*  ;
CONST_INT : DIGIT+;
CONST_STRING : '"' (LOWER|UPPER|DIGIT)* '"';


and creating the test class:

import org.antlr.runtime.*;

public class Main {
    public static void main(String[] args) throws Exception {
        ANTLRStringStream in = new ANTLRStringStream("(a>3)");
        TLexer lexer = new TLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        TParser parser = new TParser(tokens);
        parser.parse();
    }
}


I generated a lexer & parser, compiled all .java files and ran the main
class:

java -cp antlr-3.2.jar org.antlr.Tool T.g
javac -cp antlr-3.2.jar *.java
java -cp .:antlr-3.2.jar Main


which produced the output:

parsed :: (a>3)


So, if ANTLRWorks produces something different, there's something wrong with
it.

Regards,

Bart.

From douglasgodfrey at gmail.com  Wed Feb 16 01:37:33 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Wed, 16 Feb 2011 04:37:33 -0500
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
Message-ID: <AANLkTineOWhNijH76bUYCSGrXtw9+19ajAwznkyeM4_2@mail.gmail.com>

How about an example Symbol Table class that can handle C++ or Java style
languages
with nested scopes and drill down access to nested classes via name spaces
and compound names.

On Tue, Feb 15, 2011 at 6:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4
> might be awhile so I should update book).  Any suggestions to improve?  One
> obvious thing: discuss not just java target :)
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From devdoer2 at gmail.com  Wed Feb 16 04:41:44 2011
From: devdoer2 at gmail.com (devdoer bird)
Date: Wed, 16 Feb 2011 20:41:44 +0800
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <AANLkTineOWhNijH76bUYCSGrXtw9+19ajAwznkyeM4_2@mail.gmail.com>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<AANLkTineOWhNijH76bUYCSGrXtw9+19ajAwznkyeM4_2@mail.gmail.com>
Message-ID: <AANLkTi=8Hiwn4T_zGhx13dbEBjcRG8qpYHnEy6wXe7-a@mail.gmail.com>

Thanks.

But I found it also failed in eclipse plugin.

I tried the following grammar.
---------------
otherFilterSpec
  : OTHERFILTER '('  CONST_STRING  ')'
  ;

fragment DIGIT : '0'..'9';
fragment LOWER  : 'a'..'z';
fragment UPPER  : 'A'..'Z';

CONST_STRING : '"' (LOWER|UPPER|DIGIT)* '"';
---------------
parsed ok.

but the following:
---------------
 otherFilterSpec
  : OTHERFILTER '('  CONST_STRING  ')'
  ;

constString: ' " '  (LOWER|UPPER|DIGIT)* ' " ';


fragment DIGIT : '0'..'9';
fragment LOWER  : 'a'..'z';
fragment UPPER  : 'A'..'Z';

CONST_STRING : '"' (LOWER|UPPER|DIGIT)* '"';
---------------
failed.
I don't know why changing from rule to TOKEN works.
2011/2/16 Douglas Godfrey <douglasgodfrey at gmail.com>

> How about an example Symbol Table class that can handle C++ or Java style
> languages
> with nested scopes and drill down access to nested classes via name spaces
> and compound names.
>
> On Tue, Feb 15, 2011 at 6:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> > Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4
> > might be awhile so I should update book).  Any suggestions to improve?
>  One
> > obvious thing: discuss not just java target :)
> >
> > Ter
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From devdoer2 at gmail.com  Wed Feb 16 04:54:04 2011
From: devdoer2 at gmail.com (devdoer bird)
Date: Wed, 16 Feb 2011 20:54:04 +0800
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <AANLkTi=8Hiwn4T_zGhx13dbEBjcRG8qpYHnEy6wXe7-a@mail.gmail.com>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<AANLkTineOWhNijH76bUYCSGrXtw9+19ajAwznkyeM4_2@mail.gmail.com>
	<AANLkTi=8Hiwn4T_zGhx13dbEBjcRG8qpYHnEy6wXe7-a@mail.gmail.com>
Message-ID: <AANLkTinw2zLoR+2Xc8XneESkOXzYzjZBijj4DkwUmAYP@mail.gmail.com>

Sorry ,I changed grammar as below with red font.
2011/2/16 devdoer bird <devdoer2 at gmail.com>

> Thanks.
>
> But I found it also failed in eclipse plugin.
>
> I tried the following grammar.
> ---------------
> otherFilterSpec
>   : OTHERFILTER '('  CONST_STRING  ')'
>   ;
>
> fragment DIGIT : '0'..'9';
> fragment LOWER  : 'a'..'z';
> fragment UPPER  : 'A'..'Z';
>
> CONST_STRING : '"' (LOWER|UPPER|DIGIT)* '"';
> ---------------
> parsed ok.
>
> but the following:
> ---------------
>  otherFilterSpec
>   : OTHERFILTER '('   *constString *  ')' // sorry,
>    ;
>
> constString: ' " '  (LOWER|UPPER|DIGIT)* ' " ';
>
>
> fragment DIGIT : '0'..'9';
> fragment LOWER  : 'a'..'z';
> fragment UPPER  : 'A'..'Z';
>
> CONST_STRING : '"' (LOWER|UPPER|DIGIT)* '"';
> ---------------
> failed.
> I don't know why changing from rule to TOKEN works.
> 2011/2/16 Douglas Godfrey <douglasgodfrey at gmail.com>
>
> How about an example Symbol Table class that can handle C++ or Java style
>> languages
>> with nested scopes and drill down access to nested classes via name spaces
>> and compound names.
>>
>> On Tue, Feb 15, 2011 at 6:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> > Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4
>> > might be awhile so I should update book).  Any suggestions to improve?
>>  One
>> > obvious thing: discuss not just java target :)
>> >
>> > Ter
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From bschonga at cisco.com  Wed Feb 16 06:03:32 2011
From: bschonga at cisco.com (Bill Schongar)
Date: Wed, 16 Feb 2011 09:03:32 -0500
Subject: [antlr-interest] NPE when adding @header? (ANTLRWorks 1.4.2,
	Mac OSX 10.6.6)
Message-ID: <C9814364.8C0C%bschonga@cisco.com>

Hi folks,

 I?m just getting started with Antlr, and have a basic grammar working.
However, as soon as I add an @header declaration I get an NPE when I go to
Debug it, almost as if I hadn?t properly terminated the @header declaration.

 If I remove @header everything works fine, and I can run debug with my
sample text, get my expected output, etc.

 Any thoughts on what I?m doing wrong? System info, relevant section of the
grammar and NPE are added at the end for reference.

Thanks,
-Bill

----

System info:
* AntlrWorks 1.4.2
    * Compiler preference setting: javac (in /usr/bin/javac, 1.6.0_22)
* Mac OSX 10.6.6

-- Excerpt of the grammar file ---
grammar TestFile;

@header {package com.mycompany.foo;}

options {
    language = Java;
}
    
tokens {
    ...
--------


[08:56:45] error(100): TestFile.g:5:1: syntax error: antlr: TestFile.g:5:1:
unexpected token: options {
[08:56:45] error(150):  grammar file TestFile.g has no rules
[08:56:45] error(100): TestFile.g:0:0: syntax error: assign.types:
<AST>:0:0: unexpected end of subtree
[08:56:45] error(100): TestFile.g:0:0: syntax error: define: <AST>:0:0:
unexpected end of subtree
[08:56:45] java.lang.NullPointerException
    at 
org.antlr.grammar.v2.DefineGrammarItemsWalker.trimGrammar(DefineGrammarItems
Walker.java:94)
    at 
org.antlr.grammar.v2.DefineGrammarItemsWalker.finish(DefineGrammarItemsWalke
r.java:77)
    at 
org.antlr.grammar.v2.DefineGrammarItemsWalker.grammar(DefineGrammarItemsWalk
er.java:206)
    at org.antlr.tool.Grammar.defineGrammarSymbols(Grammar.java:707)
    at 
org.antlr.tool.CompositeGrammar.defineGrammarSymbols(CompositeGrammar.java:3
52)
    at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:584)
    at 
org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar(ANTLRG
rammarEngineImpl.java:192)
    at 
org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar(ANT
LRGrammarEngineImpl.java:225)
    at 
org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createCombinedGrammar(A
NTLRGrammarEngineImpl.java:203)
    at 
org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars(ANTLRGra
mmarEngineImpl.java:165)
    at 
org.antlr.works.grammar.engine.GrammarEngineImpl.getGrammarLanguage(GrammarE
ngineImpl.java:115)
    at 
org.antlr.works.components.GrammarWindowMenu.getEditTestRigTitle(GrammarWind
owMenu.java:244)
    at 
org.antlr.works.components.GrammarWindowMenu.menuItemState(GrammarWindowMenu
.java:529)
    at 
org.antlr.works.components.GrammarWindow.menuItemState(GrammarWindow.java:44
0)
    at 
org.antlr.xjlib.appkit.menu.XJMainMenuBar.refreshMenuItemState(XJMainMenuBar
.java:175)
    at 
org.antlr.xjlib.appkit.menu.XJMainMenuBar.refreshMenuState(XJMainMenuBar.jav
a:169)
    at 
org.antlr.xjlib.appkit.menu.XJMainMenuBar.refreshState(XJMainMenuBar.java:15
3)
    at 
org.antlr.xjlib.appkit.menu.XJMainMenuBar.refresh(XJMainMenuBar.java:145)
    at 
org.antlr.xjlib.appkit.frame.XJWindow.windowActivated(XJWindow.java:200)
    at 
org.antlr.works.components.GrammarWindow.windowActivated(GrammarWindow.java:
413)
    at 
org.antlr.xjlib.appkit.frame.XJFrame$3.windowActivated(XJFrame.java:161)
    at 
java.awt.AWTEventMulticaster.windowActivated(AWTEventMulticaster.java:372)
    at java.awt.Window.processWindowEvent(Window.java:1877)
    at javax.swing.JFrame.processWindowEvent(JFrame.java:274)
    at java.awt.Window.processEvent(Window.java:1823)
    at java.awt.Component.dispatchEventImpl(Component.java:4714)
    at java.awt.Container.dispatchEventImpl(Container.java:2143)
    at java.awt.Window.dispatchEventImpl(Window.java:2478)
    at java.awt.Component.dispatchEvent(Component.java:4544)
    at 
java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1850
)
    at 
java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocu
sManager.java:910)
    at 
java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManag
er.java:409)
    at java.awt.Component.dispatchEventImpl(Component.java:4586)
    at java.awt.Container.dispatchEventImpl(Container.java:2143)
    at java.awt.Window.dispatchEventImpl(Window.java:2478)
    at java.awt.Component.dispatchEvent(Component.java:4544)
    at java.awt.EventQueue.dispatchEvent(EventQueue.java:635)
    at java.awt.SentEvent.dispatch(SentEvent.java:55)
    at 
java.awt.DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.di
spatch(DefaultKeyboardFocusManager.java:183)
    at 
java.awt.DefaultKeyboardFocusManager.sendMessage(DefaultKeyboardFocusManager
.java:210)
    at 
java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManag
er.java:286)
    at java.awt.Component.dispatchEventImpl(Component.java:4586)
    at java.awt.Container.dispatchEventImpl(Container.java:2143)
    at java.awt.Window.dispatchEventImpl(Window.java:2478)
    at java.awt.Component.dispatchEvent(Component.java:4544)
    at java.awt.EventQueue.dispatchEvent(EventQueue.java:635)
    at java.awt.SequencedEvent.dispatch(SequencedEvent.java:101)
    at java.awt.EventQueue.dispatchEvent(EventQueue.java:633)
    at 
java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java
:296)
    at 
java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:21
1)
    at 
java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java
:201)
    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:196)
    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:188)
    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)





From taj105 at ecs.soton.ac.uk  Wed Feb 16 06:19:37 2011
From: taj105 at ecs.soton.ac.uk (Tristan Aubrey-Jones)
Date: Wed, 16 Feb 2011 14:19:37 +0000
Subject: [antlr-interest] ANTLRWorks interpretter bug
In-Reply-To: <6be4f48f2f738d7552cd7836b11247ff@ecs.soton.ac.uk>
References: <6be4f48f2f738d7552cd7836b11247ff@ecs.soton.ac.uk>
	<3bef7d2cb68b1f51f39f29bd2dfc8cbc@ecs.soton.ac.uk>
Message-ID: <EMEW3|a92d2c5b979c016782f3f657af6312f1n1FEJk06taj105|ecs.soton.ac.uk|3bef7d2cb68b1f51f39f29bd2dfc8cbc@ecs.soton.ac.uk>



Hi there, 

I've been trying the Expression evaluator tutorial at
http://www.antlr.org/works/help/tutorial/calculator.html [1] and am getting
a MismatchedTokenException(10!=4) when parsing strings containing
subtraction like "1-2n" in the interpreter. The grammar works fine when I
generate and debug but in the interpreter it fails. If I swap the '+' and
'-' expressions the same problem occurs with the '+' instead of the '-' so
its positional. Any ideas? 

Thanks, 

Tristan

Links:
------
[1]
http://www.antlr.org/works/help/tutorial/calculator.html

From sharwell at pixelminegames.com  Wed Feb 16 07:21:58 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 16 Feb 2011 09:21:58 -0600
Subject: [antlr-interest] Compile errors with CSharp2 Target
In-Reply-To: <AANLkTind4_5Lpmg3ry_AoMfrq0ue1kZNSEM7PutkbcCb@mail.gmail.com>
References: <20110215234721.239080@gmx.net>
	<AANLkTind4_5Lpmg3ry_AoMfrq0ue1kZNSEM7PutkbcCb@mail.gmail.com>
Message-ID: <00bc01cbcded$410a7a20$c31f6e60$@pixelminegames.com>

Hi Simon,

Using the 3.3.1 build I posted last night, the only issue with the C# target
is the use of {$channel=HIDDEN;}. To match .NET naming conventions, the
hidden channel constant is Hidden, so they need to be changed to
{$channel=Hidden;}.

I updated the grammar you sent by:

1. Fixing the CSharp3 build issue (requires the 3.3.1 build I posted last
night).
2. Left factoring to remove the backtrack, memoize, and k=2 options.
3. Using the extended AST operators of the CSharp3 target to remove
unnecessary rewrite rules.

I haven't tested the result aside from making sure it compiles properly with
the CSharp3 target.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Simon
Sent: Wednesday, February 16, 2011 1:42 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Compile errors with CSharp2 Target

On Wed, Feb 16, 2011 at 10:47 AM, Johannes Luber <JALuber at gmx.de> wrote:
> Did you read the other emails stating you may have a grammar which is
meant to work with Java? If possible pls attach the grammar to the email, so
we can check this and any other errors. I forgot which ANTLR versions
require what runtimes exactly, but you need 3.1 or 3.2 for CSharp2. CSharp3
requires ANTLR 3.3 and other assemblies than I've provided, as the targets
aren't compatible with each other yet. Not sure if those assemblies are
provided in distro or where else you can find them. Sam should know more.

Ah, thanks to everyone for pointing out the obvious - I looked more
thoroughly in the grammar and in the end did find some stray bits of Java
code which, once eliminated let it compile just fine using
CSharp2.   I still have the same errors with CSharp3 (incorrect escape
sequences when generated with antlr 3.1.3, different errors with antlr
3.3).   I've attached the "purified" Php.g grammar that succeeds in
CSharp2 but fails in CSharp3 in case it is useful - however I think I will
proceed with CSharp2 at this point.

Thanks again for the help!

Simon
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Php.g
Type: application/octet-stream
Size: 9823 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110216/eef26c94/attachment.obj 

From sharwell at pixelminegames.com  Wed Feb 16 07:27:13 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 16 Feb 2011 09:27:13 -0600
Subject: [antlr-interest] NPE when adding @header? (ANTLRWorks 1.4.2,
	Mac OSX 10.6.6)
In-Reply-To: <C9814364.8C0C%bschonga@cisco.com>
References: <C9814364.8C0C%bschonga@cisco.com>
Message-ID: <00d101cbcded$fce8a780$f6b9f680$@pixelminegames.com>

Hi Bill,

You need to place the @header block after the options{} block.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bill Schongar
Sent: Wednesday, February 16, 2011 8:04 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] NPE when adding @header? (ANTLRWorks 1.4.2, Mac
OSX 10.6.6)

Hi folks,

 I?m just getting started with Antlr, and have a basic grammar working.
However, as soon as I add an @header declaration I get an NPE when I go to
Debug it, almost as if I hadn?t properly terminated the @header declaration.

 If I remove @header everything works fine, and I can run debug with my
sample text, get my expected output, etc.

 Any thoughts on what I?m doing wrong? System info, relevant section of the
grammar and NPE are added at the end for reference.

Thanks,
-Bill



From bschonga at cisco.com  Wed Feb 16 07:35:31 2011
From: bschonga at cisco.com (Bill Schongar)
Date: Wed, 16 Feb 2011 10:35:31 -0500
Subject: [antlr-interest] NPE when adding @header? (ANTLRWorks 1.4.2,
 Mac OSX 10.6.6)
In-Reply-To: <00d101cbcded$fce8a780$f6b9f680$@pixelminegames.com>
Message-ID: <C98158F3.8C43%bschonga@cisco.com>


D'oh! I knew I was doing something stupid.. Making sure I put it after
options and tokens fixes it in the combined grammar.

Thanks Sam!
-Bill



On 2/16/11 10:27 AM, "Sam Harwell" <sharwell at pixelminegames.com> wrote:

> Hi Bill,
> 
> You need to place the @header block after the options{} block.
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bill Schongar
> Sent: Wednesday, February 16, 2011 8:04 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] NPE when adding @header? (ANTLRWorks 1.4.2, Mac
> OSX 10.6.6)
> 
> Hi folks,
> 
>  I?m just getting started with Antlr, and have a basic grammar working.
> However, as soon as I add an @header declaration I get an NPE when I go to
> Debug it, almost as if I hadn?t properly terminated the @header declaration.
> 
>  If I remove @header everything works fine, and I can run debug with my
> sample text, get my expected output, etc.
> 
>  Any thoughts on what I?m doing wrong? System info, relevant section of the
> grammar and NPE are added at the end for reference.
> 
> Thanks,
> -Bill
> 
> 


From zigzed at ovi.com  Wed Feb 16 07:38:48 2011
From: zigzed at ovi.com (Wilbur Lang)
Date: Wed, 16 Feb 2011 23:38:48 +0800
Subject: [antlr-interest] MissingTokenException
Message-ID: <4D5BEF88.6000207@ovi.com>

Hi,

I'm working on ANTLR to create a parser but failed with 
MissingTokenException. Following is the grammar:


grammar test1;

moduleId
     :    TYPEREFERENCE
     ;

WS  :   ( ' '| '\t'| '\r'| '\n') {$channel=HIDDEN;}
     ;

fragment UPPER :    ('A'..'Z') ;
fragment LOWER :    ('a'..'z') ;
fragment DIGIT :    ('0'..'9') ;
HYPHEN :    '-' ;

CAPITALREFERENCE
     :    UPPER (UPPER|DIGIT)* (HYPHEN (UPPER|DIGIT)+)*
     ;

TYPEREFERENCE
     :    UPPER (UPPER|LOWER|DIGIT)* (HYPHEN (UPPER|LOWER|DIGIT)+)*
     ;

When I input sentence 'T3', ANTLR failed with 'MissingTokenException'. 
When I comment 'CAPITALREFERENCE', ANTLR worked. How can I correct the 
grammar?

Please note, I need 'CAPITALREFERENCE' to distinguish such as 'Tabc-01' 
and 'TABC-01'.

Thanks.

Wilbur Lang

--------------------------------------------------------------
Ovi Mail: Making email access easy
http://mail.ovi.com


From cummings at kjchome.homeip.net  Wed Feb 16 07:54:17 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 16 Feb 2011 10:54:17 -0500
Subject: [antlr-interest] MissingTokenException
In-Reply-To: <4D5BEF88.6000207@ovi.com>
References: <4D5BEF88.6000207@ovi.com>
Message-ID: <4D5BF329.5030105@kjchome.homeip.net>

On 02/16/2011 10:38 AM, Wilbur Lang wrote:
> Hi,
> 
> I'm working on ANTLR to create a parser but failed with 
> MissingTokenException. Following is the grammar:
> 
> 
> grammar test1;
> 
> moduleId
>      :    TYPEREFERENCE
>      ;
> 
> WS  :   ( ' '| '\t'| '\r'| '\n') {$channel=HIDDEN;}
>      ;
> 
> fragment UPPER :    ('A'..'Z') ;
> fragment LOWER :    ('a'..'z') ;
> fragment DIGIT :    ('0'..'9') ;
> HYPHEN :    '-' ;
> 
> CAPITALREFERENCE
>      :    UPPER (UPPER|DIGIT)* (HYPHEN (UPPER|DIGIT)+)*
>      ;
> 
> TYPEREFERENCE
>      :    UPPER (UPPER|LOWER|DIGIT)* (HYPHEN (UPPER|LOWER|DIGIT)+)*
>      ;
> 
> When I input sentence 'T3', ANTLR failed with 'MissingTokenException'. 
> When I comment 'CAPITALREFERENCE', ANTLR worked. How can I correct the 
> grammar?

I'd do the following:

fragment TYPEREFERENCE : ;

CAPITALREFERENCE
    : UPPER (UPPER | DIGIT | LOWER { $type=TYPEREFERENCE; })*
     (HYPHEN (UPPER | DIGIT | LOWER { $type=TYPEREFERENCE; })+ )*
    ;

That way you'll only change the token type to TYPEREFERENCE if 1 or more
LOWER characters are found....

> Please note, I need 'CAPITALREFERENCE' to distinguish such as 'Tabc-01' 
> and 'TABC-01'.
> 
> Thanks.
> 
> Wilbur Lang

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From parrt at cs.usfca.edu  Wed Feb 16 08:22:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Feb 2011 08:22:16 -0800
Subject: [antlr-interest] what would ANTLR ref guide revised edition
	have?
In-Reply-To: <AANLkTineOWhNijH76bUYCSGrXtw9+19ajAwznkyeM4_2@mail.gmail.com>
References: <3DA9A501-CD90-4B73-8A8D-AD19AC02E56A@cs.usfca.edu>
	<AANLkTineOWhNijH76bUYCSGrXtw9+19ajAwznkyeM4_2@mail.gmail.com>
Message-ID: <BE862765-D651-4E68-A63B-D82BCB7E1DDB@cs.usfca.edu>

Hi. you mean just like the LIP book does?
Ter
On Feb 16, 2011, at 1:37 AM, Douglas Godfrey wrote:

> How about an example Symbol Table class that can handle C++ or Java style languages 
> with nested scopes and drill down access to nested classes via name spaces and compound names.
> 
> On Tue, Feb 15, 2011 at 6:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Howdy. I'm thinking about revising the ref guide for ANTLR 3 (ANTLR v4 might be awhile so I should update book).  Any suggestions to improve?  One obvious thing: discuss not just java target :)
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From zigzed at ovi.com  Wed Feb 16 09:13:45 2011
From: zigzed at ovi.com (Wilbur Lang)
Date: Thu, 17 Feb 2011 01:13:45 +0800
Subject: [antlr-interest] MissingTokenException
In-Reply-To: <4D5BF329.5030105@kjchome.homeip.net>
References: <4D5BEF88.6000207@ovi.com> <4D5BF329.5030105@kjchome.homeip.net>
Message-ID: <4D5C05C9.1080109@ovi.com>

On 2011/2/16 23:54, Kevin J. Cummings wrote:
> On 02/16/2011 10:38 AM, Wilbur Lang wrote:
>> moduleId
>>       :    TYPEREFERENCE
>>       ;
>>
>> I'd do the following:
>>
>> fragment TYPEREFERENCE : ;
>>
>> CAPITALREFERENCE
>>      : UPPER (UPPER | DIGIT | LOWER { $type=TYPEREFERENCE; })*
>>       (HYPHEN (UPPER | DIGIT | LOWER { $type=TYPEREFERENCE; })+ )*
>>      ;
>>
>> That way you'll only change the token type to TYPEREFERENCE if 1 or more
>> LOWER characters are found....
Thanks Kevin.

I rechecked the grammar, it not a context-free one, and it's impossible 
to disambiguate 'T3' is a CAPTIALREFERENCE or TYPEREFERENCE. Maybe I 
should check the 'semantic predicated'.

Wilbur Lang

--------------------------------------------------------------
Ovi Mail: Making email access easy
http://mail.ovi.com


From jimi at temporal-wave.com  Wed Feb 16 09:19:27 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Feb 2011 09:19:27 -0800
Subject: [antlr-interest] MissingTokenException
In-Reply-To: <4D5C05C9.1080109@ovi.com>
References: <4D5BEF88.6000207@ovi.com> <4D5BF329.5030105@kjchome.homeip.net>
	<4D5C05C9.1080109@ovi.com>
Message-ID: <6e34680af1a7b9321e199d40a4573039@mail.gmail.com>

Kevin's suggestion is the best way to do this as it involves no
predicates.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wilbur Lang
> Sent: Wednesday, February 16, 2011 9:14 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] MissingTokenException
>
> On 2011/2/16 23:54, Kevin J. Cummings wrote:
> > On 02/16/2011 10:38 AM, Wilbur Lang wrote:
> >> moduleId
> >>       :    TYPEREFERENCE
> >>       ;
> >>
> >> I'd do the following:
> >>
> >> fragment TYPEREFERENCE : ;
> >>
> >> CAPITALREFERENCE
> >>      : UPPER (UPPER | DIGIT | LOWER { $type=TYPEREFERENCE; })*
> >>       (HYPHEN (UPPER | DIGIT | LOWER { $type=TYPEREFERENCE; })+ )*
> >>      ;
> >>
> >> That way you'll only change the token type to TYPEREFERENCE if 1 or
> >> more LOWER characters are found....
> Thanks Kevin.
>
> I rechecked the grammar, it not a context-free one, and it's impossible
> to disambiguate 'T3' is a CAPTIALREFERENCE or TYPEREFERENCE. Maybe I
> should check the 'semantic predicated'.
>
> Wilbur Lang
>
> --------------------------------------------------------------
> Ovi Mail: Making email access easy
> http://mail.ovi.com
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kingces95 at gmail.com  Wed Feb 16 13:32:21 2011
From: kingces95 at gmail.com (chris king)
Date: Wed, 16 Feb 2011 13:32:21 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
Message-ID: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>

Does ANTLR support context sensitive keywords? For example, in C# "where" is
a keyword only in a LINQ expression. To support this ANTLR would need to
change the lexer behavior given feedback from the parser letting it know
what context it is in. From what I hear ANTLR lexes the entire file before
passing it onto the parser. If that's true than I guess it doesn't support
this language concept. In that case, is there a way to work around?

Thanks,
Chris

From jimi at temporal-wave.com  Wed Feb 16 13:38:58 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Feb 2011 13:38:58 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
Message-ID: <7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>

No you do this in the parser by allowing the keywords where ID is expected
then by predicating the WHERE keyword in the LINQ rules:


.... ((WHERE)=>where_clause)? ....


id : ID | WHERE | ....


I have fully working C# lexer, parser, tree walker if that is what you are
trying to build. It is a commercial product though.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of chris king
> Sent: Wednesday, February 16, 2011 1:32 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Context Sensitive Keyword Support?
>
> Does ANTLR support context sensitive keywords? For example, in C#
> "where" is a keyword only in a LINQ expression. To support this ANTLR
> would need to change the lexer behavior given feedback from the parser
> letting it know what context it is in. From what I hear ANTLR lexes the
> entire file before passing it onto the parser. If that's true than I
> guess it doesn't support this language concept. In that case, is there
> a way to work around?
>
> Thanks,
> Chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From scott at javadude.com  Wed Feb 16 14:02:17 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Wed, 16 Feb 2011 17:02:17 -0500
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>
Message-ID: <AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>

Has anyone looked at the context-sensitive-scanning proposal I sent a
while back?

    http://javadude.com/articles/antlr-context-sensitive-scanner.html

-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Wed, Feb 16, 2011 at 4:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> No you do this in the parser by allowing the keywords where ID is expected
> then by predicating the WHERE keyword in the LINQ rules:
>
>
> .... ((WHERE)=>where_clause)? ....
>
>
> id : ID | WHERE | ....
>
>
> I have fully working C# lexer, parser, tree walker if that is what you are
> trying to build. It is a commercial product though.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of chris king
>> Sent: Wednesday, February 16, 2011 1:32 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Context Sensitive Keyword Support?
>>
>> Does ANTLR support context sensitive keywords? For example, in C#
>> "where" is a keyword only in a LINQ expression. To support this ANTLR
>> would need to change the lexer behavior given feedback from the parser
>> letting it know what context it is in. From what I hear ANTLR lexes the
>> entire file before passing it onto the parser. If that's true than I
>> guess it doesn't support this language concept. In that case, is there
>> a way to work around?
>>
>> Thanks,
>> Chris
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Wed Feb 16 14:08:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Feb 2011 14:08:35 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>
	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
Message-ID: <F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>

hiya. yep, i had a similar proposal way back when for v3.0 but I abandoned; can't remember why at this point. i love idea but impl had some issues.
ter
On Feb 16, 2011, at 2:02 PM, Scott Stanchfield wrote:

> Has anyone looked at the context-sensitive-scanning proposal I sent a
> while back?
> 
>    http://javadude.com/articles/antlr-context-sensitive-scanner.html
> 
> -- Scott
> 
> ----------------------------------------
> Scott Stanchfield
> http://javadude.com
> 
> 
> 
> On Wed, Feb 16, 2011 at 4:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> No you do this in the parser by allowing the keywords where ID is expected
>> then by predicating the WHERE keyword in the LINQ rules:
>> 
>> 
>> .... ((WHERE)=>where_clause)? ....
>> 
>> 
>> id : ID | WHERE | ....
>> 
>> 
>> I have fully working C# lexer, parser, tree walker if that is what you are
>> trying to build. It is a commercial product though.
>> 
>> Jim
>> 
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of chris king
>>> Sent: Wednesday, February 16, 2011 1:32 PM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] Context Sensitive Keyword Support?
>>> 
>>> Does ANTLR support context sensitive keywords? For example, in C#
>>> "where" is a keyword only in a LINQ expression. To support this ANTLR
>>> would need to change the lexer behavior given feedback from the parser
>>> letting it know what context it is in. From what I hear ANTLR lexes the
>>> entire file before passing it onto the parser. If that's true than I
>>> guess it doesn't support this language concept. In that case, is there
>>> a way to work around?
>>> 
>>> Thanks,
>>> Chris
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From scott at javadude.com  Wed Feb 16 14:10:18 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Wed, 16 Feb 2011 17:10:18 -0500
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>
	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
Message-ID: <AANLkTimpEkJ6T+OaGU4uhAnx6OrzM-LFWEWAhStg3vCg@mail.gmail.com>

If I get a chance I'll play around with it sometime. When I was
thinking of it a while back it sounded like it should fit in pretty
nicely, but there may have been some evil little impl detail I didn't
consider...
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Wed, Feb 16, 2011 at 5:08 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> hiya. yep, i had a similar proposal way back when for v3.0 but I abandoned; can't remember why at this point. i love idea but impl had some issues.
> ter
> On Feb 16, 2011, at 2:02 PM, Scott Stanchfield wrote:
>
>> Has anyone looked at the context-sensitive-scanning proposal I sent a
>> while back?
>>
>> ? ?http://javadude.com/articles/antlr-context-sensitive-scanner.html
>>
>> -- Scott
>>
>> ----------------------------------------
>> Scott Stanchfield
>> http://javadude.com
>>
>>
>>
>> On Wed, Feb 16, 2011 at 4:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>>> No you do this in the parser by allowing the keywords where ID is expected
>>> then by predicating the WHERE keyword in the LINQ rules:
>>>
>>>
>>> .... ((WHERE)=>where_clause)? ....
>>>
>>>
>>> id : ID | WHERE | ....
>>>
>>>
>>> I have fully working C# lexer, parser, tree walker if that is what you are
>>> trying to build. It is a commercial product though.
>>>
>>> Jim
>>>
>>>> -----Original Message-----
>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>> bounces at antlr.org] On Behalf Of chris king
>>>> Sent: Wednesday, February 16, 2011 1:32 PM
>>>> To: antlr-interest at antlr.org
>>>> Subject: [antlr-interest] Context Sensitive Keyword Support?
>>>>
>>>> Does ANTLR support context sensitive keywords? For example, in C#
>>>> "where" is a keyword only in a LINQ expression. To support this ANTLR
>>>> would need to change the lexer behavior given feedback from the parser
>>>> letting it know what context it is in. From what I hear ANTLR lexes the
>>>> entire file before passing it onto the parser. If that's true than I
>>>> guess it doesn't support this language concept. In that case, is there
>>>> a way to work around?
>>>>
>>>> Thanks,
>>>> Chris
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>>> email-address
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Feb 16 14:21:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Feb 2011 14:21:21 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
Message-ID: <4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>

I think that every time we talk about this, we realize that the problems
lie in lookahead where you cannot decide what to do in certain cases. I
think that the quantum token idea is a much better one in that a token can
simultaneously be ID and WHERE or any other token that it is flagged as
being possible to be. This removes context from the lexer and allows the
parser to decide.

Predicates would still work and any other ambiguity should work out? It
means that input.LA(n) would also need

input.LA(n, TYPE)
  and perhaps
input.LT(n).getType(TYPE)

which would return TYPE if LT(n)/LA(n) can be one, otherwise the main type
that it actually is. Could have Boolean versions instead/as well of
course.

WHERE :: ID, KEYWORD : 'WHERE' ;

Or something like that. I think that this is well worth looking in to.



Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, February 16, 2011 2:09 PM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] Context Sensitive Keyword Support?
>
> hiya. yep, i had a similar proposal way back when for v3.0 but I
> abandoned; can't remember why at this point. i love idea but impl had
> some issues.
> ter
> On Feb 16, 2011, at 2:02 PM, Scott Stanchfield wrote:
>
> > Has anyone looked at the context-sensitive-scanning proposal I sent a
> > while back?
> >
> >    http://javadude.com/articles/antlr-context-sensitive-scanner.html
> >
> > -- Scott
> >
> > ----------------------------------------
> > Scott Stanchfield
> > http://javadude.com
> >
> >
> >
> > On Wed, Feb 16, 2011 at 4:38 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >> No you do this in the parser by allowing the keywords where ID is
> >> expected then by predicating the WHERE keyword in the LINQ rules:
> >>
> >>
> >> .... ((WHERE)=>where_clause)? ....
> >>
> >>
> >> id : ID | WHERE | ....
> >>
> >>
> >> I have fully working C# lexer, parser, tree walker if that is what
> >> you are trying to build. It is a commercial product though.
> >>
> >> Jim
> >>
> >>> -----Original Message-----
> >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>> bounces at antlr.org] On Behalf Of chris king
> >>> Sent: Wednesday, February 16, 2011 1:32 PM
> >>> To: antlr-interest at antlr.org
> >>> Subject: [antlr-interest] Context Sensitive Keyword Support?
> >>>
> >>> Does ANTLR support context sensitive keywords? For example, in C#
> >>> "where" is a keyword only in a LINQ expression. To support this
> >>> ANTLR would need to change the lexer behavior given feedback from
> >>> the parser letting it know what context it is in. From what I hear
> >>> ANTLR lexes the entire file before passing it onto the parser. If
> >>> that's true than I guess it doesn't support this language concept.
> >>> In that case, is there a way to work around?
> >>>
> >>> Thanks,
> >>> Chris
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-
> >>> email-address
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kingces95 at gmail.com  Wed Feb 16 14:51:45 2011
From: kingces95 at gmail.com (chris king)
Date: Wed, 16 Feb 2011 14:51:45 -0800
Subject: [antlr-interest] CSharp tool port
Message-ID: <AANLkTimX5cxB-RkraGHv0B8-OBeuDPYZkfjjbuLW9jT-@mail.gmail.com>

Does anyone know if this is the latest version of *Sam Harwell *C# port or
the Antlr tool?

*http://www.280z28.org/downloads/antlr/antlr-dotnet-binaries-3.2.0.6805.7z*


Thanks,
Chris

From sharwell at pixelminegames.com  Wed Feb 16 15:40:13 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 16 Feb 2011 17:40:13 -0600
Subject: [antlr-interest] CSharp tool port
In-Reply-To: <AANLkTimX5cxB-RkraGHv0B8-OBeuDPYZkfjjbuLW9jT-@mail.gmail.com>
References: <AANLkTimX5cxB-RkraGHv0B8-OBeuDPYZkfjjbuLW9jT-@mail.gmail.com>
Message-ID: <011301cbce32$dbc8aec0$935a0c40$@pixelminegames.com>

Hi Chris,

I just sent an email last night about a new release. :) The links are broken
on that page due to word wrap - just copy everything within the angle braces
(<...>) and remove the newline to get the correct link.

http://www.antlr.org/pipermail/antlr-interest/2011-February/040767.html

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of chris king
Sent: Wednesday, February 16, 2011 4:52 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] CSharp tool port

Does anyone know if this is the latest version of *Sam Harwell *C# port or
the Antlr tool?

*http://www.280z28.org/downloads/antlr/antlr-dotnet-binaries-3.2.0.6805.7z*


Thanks,
Chris

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Feb 16 15:42:44 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Feb 2011 15:42:44 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
Message-ID: <B1E0FBDB-24F2-47F7-8526-A2FA42292025@cs.usfca.edu>

I also want to try a scannerless version of ANTLR.  Rats guy Robert Grimm has groovy combined language / modularity feature.
ter
On Feb 16, 2011, at 2:21 PM, Jim Idle wrote:

> I think that every time we talk about this, we realize that the problems
> lie in lookahead where you cannot decide what to do in certain cases. I
> think that the quantum token idea is a much better one in that a token can
> simultaneously be ID and WHERE or any other token that it is flagged as
> being possible to be. This removes context from the lexer and allows the
> parser to decide.
> 
> Predicates would still work and any other ambiguity should work out? It
> means that input.LA(n) would also need
> 
> input.LA(n, TYPE)
>  and perhaps
> input.LT(n).getType(TYPE)
> 
> which would return TYPE if LT(n)/LA(n) can be one, otherwise the main type
> that it actually is. Could have Boolean versions instead/as well of
> course.
> 
> WHERE :: ID, KEYWORD : 'WHERE' ;
> 
> Or something like that. I think that this is well worth looking in to.
> 
> 
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Terence Parr
>> Sent: Wednesday, February 16, 2011 2:09 PM
>> To: antlr-interest Interest
>> Subject: Re: [antlr-interest] Context Sensitive Keyword Support?
>> 
>> hiya. yep, i had a similar proposal way back when for v3.0 but I
>> abandoned; can't remember why at this point. i love idea but impl had
>> some issues.
>> ter
>> On Feb 16, 2011, at 2:02 PM, Scott Stanchfield wrote:
>> 
>>> Has anyone looked at the context-sensitive-scanning proposal I sent a
>>> while back?
>>> 
>>>   http://javadude.com/articles/antlr-context-sensitive-scanner.html
>>> 
>>> -- Scott
>>> 
>>> ----------------------------------------
>>> Scott Stanchfield
>>> http://javadude.com
>>> 
>>> 
>>> 
>>> On Wed, Feb 16, 2011 at 4:38 PM, Jim Idle <jimi at temporal-wave.com>
>> wrote:
>>>> No you do this in the parser by allowing the keywords where ID is
>>>> expected then by predicating the WHERE keyword in the LINQ rules:
>>>> 
>>>> 
>>>> .... ((WHERE)=>where_clause)? ....
>>>> 
>>>> 
>>>> id : ID | WHERE | ....
>>>> 
>>>> 
>>>> I have fully working C# lexer, parser, tree walker if that is what
>>>> you are trying to build. It is a commercial product though.
>>>> 
>>>> Jim
>>>> 
>>>>> -----Original Message-----
>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>>> bounces at antlr.org] On Behalf Of chris king
>>>>> Sent: Wednesday, February 16, 2011 1:32 PM
>>>>> To: antlr-interest at antlr.org
>>>>> Subject: [antlr-interest] Context Sensitive Keyword Support?
>>>>> 
>>>>> Does ANTLR support context sensitive keywords? For example, in C#
>>>>> "where" is a keyword only in a LINQ expression. To support this
>>>>> ANTLR would need to change the lexer behavior given feedback from
>>>>> the parser letting it know what context it is in. From what I hear
>>>>> ANTLR lexes the entire file before passing it onto the parser. If
>>>>> that's true than I guess it doesn't support this language concept.
>>>>> In that case, is there a way to work around?
>>>>> 
>>>>> Thanks,
>>>>> Chris
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
>>>>> email-address
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> addres
>>>> s
>>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address


From jimi at temporal-wave.com  Wed Feb 16 15:49:14 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Feb 2011 15:49:14 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <B1E0FBDB-24F2-47F7-8526-A2FA42292025@cs.usfca.edu>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
	<B1E0FBDB-24F2-47F7-8526-A2FA42292025@cs.usfca.edu>
Message-ID: <fdbbefd77ce4b3737f66721b5789ab7f@mail.gmail.com>

Yeah - I am skeptical of the performance of scannerless parsing, but if
performance is not the issue, it can help a lot here. I think that the
rats parsing technique also ends up with weak error reporting though I
think it records information to help with this right?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, February 16, 2011 3:43 PM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] Context Sensitive Keyword Support?
>
> I also want to try a scannerless version of ANTLR.  Rats guy Robert
> Grimm has groovy combined language / modularity feature.
> ter
> On Feb 16, 2011, at 2:21 PM, Jim Idle wrote:
>
> > I think that every time we talk about this, we realize that the
> > problems lie in lookahead where you cannot decide what to do in
> > certain cases. I think that the quantum token idea is a much better
> > one in that a token can simultaneously be ID and WHERE or any other
> > token that it is flagged as being possible to be. This removes
> context
> > from the lexer and allows the parser to decide.
> >
> > Predicates would still work and any other ambiguity should work out?
> > It means that input.LA(n) would also need
> >
> > input.LA(n, TYPE)
> >  and perhaps
> > input.LT(n).getType(TYPE)
> >
> > which would return TYPE if LT(n)/LA(n) can be one, otherwise the main
> > type that it actually is. Could have Boolean versions instead/as well
> > of course.
> >
> > WHERE :: ID, KEYWORD : 'WHERE' ;
> >
> > Or something like that. I think that this is well worth looking in
> to.
> >
> >
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Terence Parr
> >> Sent: Wednesday, February 16, 2011 2:09 PM
> >> To: antlr-interest Interest
> >> Subject: Re: [antlr-interest] Context Sensitive Keyword Support?
> >>
> >> hiya. yep, i had a similar proposal way back when for v3.0 but I
> >> abandoned; can't remember why at this point. i love idea but impl
> had
> >> some issues.
> >> ter
> >> On Feb 16, 2011, at 2:02 PM, Scott Stanchfield wrote:
> >>
> >>> Has anyone looked at the context-sensitive-scanning proposal I sent
> >>> a while back?
> >>>
> >>>   http://javadude.com/articles/antlr-context-sensitive-scanner.html
> >>>
> >>> -- Scott
> >>>
> >>> ----------------------------------------
> >>> Scott Stanchfield
> >>> http://javadude.com
> >>>
> >>>
> >>>
> >>> On Wed, Feb 16, 2011 at 4:38 PM, Jim Idle <jimi at temporal-wave.com>
> >> wrote:
> >>>> No you do this in the parser by allowing the keywords where ID is
> >>>> expected then by predicating the WHERE keyword in the LINQ rules:
> >>>>
> >>>>
> >>>> .... ((WHERE)=>where_clause)? ....
> >>>>
> >>>>
> >>>> id : ID | WHERE | ....
> >>>>
> >>>>
> >>>> I have fully working C# lexer, parser, tree walker if that is what
> >>>> you are trying to build. It is a commercial product though.
> >>>>
> >>>> Jim
> >>>>
> >>>>> -----Original Message-----
> >>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>>>> bounces at antlr.org] On Behalf Of chris king
> >>>>> Sent: Wednesday, February 16, 2011 1:32 PM
> >>>>> To: antlr-interest at antlr.org
> >>>>> Subject: [antlr-interest] Context Sensitive Keyword Support?
> >>>>>
> >>>>> Does ANTLR support context sensitive keywords? For example, in C#
> >>>>> "where" is a keyword only in a LINQ expression. To support this
> >>>>> ANTLR would need to change the lexer behavior given feedback from
> >>>>> the parser letting it know what context it is in. From what I
> hear
> >>>>> ANTLR lexes the entire file before passing it onto the parser. If
> >>>>> that's true than I guess it doesn't support this language
> concept.
> >>>>> In that case, is there a way to work around?
> >>>>>
> >>>>> Thanks,
> >>>>> Chris
> >>>>>
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe:
> >>>>> http://www.antlr.org/mailman/options/antlr-interest/your-
> >>>>> email-address
> >>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> addres
> >>>> s
> >>>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sharwell at pixelminegames.com  Wed Feb 16 16:33:33 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 16 Feb 2011 18:33:33 -0600
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <B1E0FBDB-24F2-47F7-8526-A2FA42292025@cs.usfca.edu>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
	<B1E0FBDB-24F2-47F7-8526-A2FA42292025@cs.usfca.edu>
Message-ID: <011d01cbce3a$4f714740$ee53d5c0$@pixelminegames.com>

That's actually on my list of things to discuss when I'm there. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, February 16, 2011 5:43 PM
To: antlr-interest Interest
Subject: Re: [antlr-interest] Context Sensitive Keyword Support?

I also want to try a scannerless version of ANTLR.  Rats guy Robert Grimm
has groovy combined language / modularity feature.
ter



From parrt at cs.usfca.edu  Wed Feb 16 17:06:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 16 Feb 2011 17:06:06 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <011d01cbce3a$4f714740$ee53d5c0$@pixelminegames.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
	<B1E0FBDB-24F2-47F7-8526-A2FA42292025@cs.usfca.edu>
	<011d01cbce3a$4f714740$ee53d5c0$@pixelminegames.com>
Message-ID: <FC2EEAA6-0F45-43F5-9DBF-419FF74742C0@cs.usfca.edu>

I'd like to get expression parsing, unbuffered char streams implemented for v3 soon. would be nice.

Ter
On Feb 16, 2011, at 4:33 PM, Sam Harwell wrote:

> That's actually on my list of things to discuss when I'm there. :)
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Wednesday, February 16, 2011 5:43 PM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] Context Sensitive Keyword Support?
> 
> I also want to try a scannerless version of ANTLR.  Rats guy Robert Grimm
> has groovy combined language / modularity feature.
> ter
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Wed Feb 16 19:56:22 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 17 Feb 2011 14:56:22 +1100
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>
	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
Message-ID: <AANLkTinVo-Hyb7GtYLNV59uczEzNb8ac-A8MjT4zAqof@mail.gmail.com>

On 17 February 2011 09:21, Jim Idle <jimi at temporal-wave.com> wrote:
> I think that the quantum token idea is a much better one in that a token can
> simultaneously be ID and WHERE or any other token that it is flagged as
> being possible to be. This removes context from the lexer and allows the
> parser to decide.
>

Yes please !!!  This seems like a wonderfully elegant and very useful idea.

Michael

From scott at javadude.com  Wed Feb 16 20:06:29 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Wed, 16 Feb 2011 23:06:29 -0500
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <AANLkTinVo-Hyb7GtYLNV59uczEzNb8ac-A8MjT4zAqof@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>
	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>
	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
	<AANLkTinVo-Hyb7GtYLNV59uczEzNb8ac-A8MjT4zAqof@mail.gmail.com>
Message-ID: <AANLkTinAmX=FqtNfT4vO2qQ2RfV76UNFQYC75stEiWPi@mail.gmail.com>

Two things I don't like about that approach:

* The scanner would need to match each possibility against the text -
adds time to the scan when you really only need one of the
possibilities. My approach has the parser tell the scanner what tokens
are possible and the scanner will only consider those possibilities

* It really only works for very discrete token values. Suppose the
parser were switching to an embedded language; that embedded language
could use multi-word tokens or delimit things like comments in a very
different manner.

I'll have to tinker with this when I get a chance... don't know that
that's likely until after we've performed (in April) the play I'm
directing...
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Wed, Feb 16, 2011 at 10:56 PM, Michael Bedward
<michael.bedward at gmail.com> wrote:
> On 17 February 2011 09:21, Jim Idle <jimi at temporal-wave.com> wrote:
>> I think that the quantum token idea is a much better one in that a token can
>> simultaneously be ID and WHERE or any other token that it is flagged as
>> being possible to be. This removes context from the lexer and allows the
>> parser to decide.
>>
>
> Yes please !!! ?This seems like a wonderfully elegant and very useful idea.
>
> Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From xpwithme at 163.com  Wed Feb 16 20:53:39 2011
From: xpwithme at 163.com (=?GBK?B?0MHUvg==?=)
Date: Thu, 17 Feb 2011 12:53:39 +0800 (CST)
Subject: [antlr-interest] Just For Converting
Message-ID: <22465a.30a2.12e31f7611e.Coremail.xpwithme@163.com>




i want convert the Stream content like:

attribute1      attibute2       attribute3        attribute4           attribute5

 value1          value2         value3            value4                value5

 value1          value2         value3            value4                 value5

 vaue1          value2          value3            value4                 value5

my goal is store those tokens in the form of

(atribute1 value1) ( attribue2 value2) ( attribue3 value3) ... ...

(atribute1 value1) ( attribue2 value2) ( attribue3 value3) ... ...

(atribute1 value1) ( attribue2 value2) ( attribue3 value3) ... ...

so how could i write my grammer by antlr to reach my goal

thanks

 

 

 




From michael.bedward at gmail.com  Wed Feb 16 20:59:11 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 17 Feb 2011 15:59:11 +1100
Subject: [antlr-interest] Just For Converting
In-Reply-To: <22465a.30a2.12e31f7611e.Coremail.xpwithme@163.com>
References: <22465a.30a2.12e31f7611e.Coremail.xpwithme@163.com>
Message-ID: <AANLkTimoGbgHX4Bqx7n4nFHx-eCmSQoKKsfvi95VJ3Tr@mail.gmail.com>

Hello,

For fixed-width or delimited data like these it is a lot easier to
write a program by hand than use ANTLR.

Michael

On 17 February 2011 15:53, ?? <xpwithme at 163.com> wrote:
>
>
>
> i want convert the Stream content like:
>
> attribute1 ? ? ?attibute2 ? ? ? attribute3 ? ? ? ?attribute4 ? ? ? ? ? attribute5
>
> ?value1 ? ? ? ? ?value2 ? ? ? ? value3 ? ? ? ? ? ?value4 ? ? ? ? ? ? ? ?value5
>
> ?value1 ? ? ? ? ?value2 ? ? ? ? value3 ? ? ? ? ? ?value4 ? ? ? ? ? ? ? ? value5
>
> ?vaue1 ? ? ? ? ?value2 ? ? ? ? ?value3 ? ? ? ? ? ?value4 ? ? ? ? ? ? ? ? value5
>
> my goal is store those tokens in the form of
>
> (atribute1 value1) ( attribue2 value2) ( attribue3 value3) ... ...
>
> (atribute1 value1) ( attribue2 value2) ( attribue3 value3) ... ...
>
> (atribute1 value1) ( attribue2 value2) ( attribue3 value3) ... ...
>
> so how could i write my grammer by antlr to reach my goal
>
> thanks
>
>
>
>
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Feb 16 21:05:01 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Feb 2011 21:05:01 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <AANLkTinAmX=FqtNfT4vO2qQ2RfV76UNFQYC75stEiWPi@mail.gmail.com>
References: <AANLkTik3=Z_jw88JS0e=rJjQqKecjbwTgEvVYWmHa3mD@mail.gmail.com>
	<7a4e28ce529d9181de30638ac47201e8@mail.gmail.com>	<AANLkTinFUzc6g5O_q=bzZvK0novo3Z7sZt_-iRJXCF_C@mail.gmail.com>
	<F29D4AE7-7729-43DB-AC03-EDB274DC2640@cs.usfca.edu>	<4d48443495246ed0b5b9bb5d5f622b00@mail.gmail.com>
	<AANLkTinVo-Hyb7GtYLNV59uczEzNb8ac-A8MjT4zAqof@mail.gmail.com>
	<AANLkTinAmX=FqtNfT4vO2qQ2RfV76UNFQYC75stEiWPi@mail.gmail.com>
Message-ID: <1f64604356bbea19eee4a013b66d05ff@mail.gmail.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Scott Stanchfield
> Sent: Wednesday, February 16, 2011 8:06 PM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] Context Sensitive Keyword Support?
>
> Two things I don't like about that approach:
>
> * The scanner would need to match each possibility against the text -
> adds time to the scan when you really only need one of the
> possibilities. My approach has the parser tell the scanner what tokens
> are possible and the scanner will only consider those possibilities

It does not do that, it does a single match as now and then tells the
token what its possible types are. The parser driven lexer basically falls
down in a number of areas to do with lookahead, which I think you are
missing. In your case (I have not looked at your code yet though) the
parser would have to call the lexer and say can I have an X and a Y and a
Z and it will say yes on the X, yes on the Y then nay on the Z, so you
would have to backtrack and re-scan? This is why you end up with a
scannerless parser instead. In the superposition token, you cannot have
ambiguous lexer definitions, but the tokens so scanned may answer to a
number of possibilities; I feel that this covers the huge majority of
cases.

>
> * It really only works for very discrete token values. Suppose the
> parser were switching to an embedded language;

You really need lexer modes for that, which will be in v4 I think.

> that embedded language
> could use multi-word tokens or delimit things like comments in a very
> different manner.

You end up having context one way or another, but without second guessing
you, I think that you will find you are limited in lookahead/predicates
and that it is ultimately just better to go scannerless. Hand crafted
parsers often do what you are suggesting, so it isn't without merit, but I
think it has practical limitations for a generic recognizer generator of
LL(k).

>
> I'll have to tinker with this when I get a chance... don't know that
> that's likely until after we've performed (in April) the play I'm
> directing...

Good luck on the play :-)

Jim

> -- Scott
>
> ----------------------------------------
> Scott Stanchfield
> http://javadude.com
>
>
>
> On Wed, Feb 16, 2011 at 10:56 PM, Michael Bedward
> <michael.bedward at gmail.com> wrote:
> > On 17 February 2011 09:21, Jim Idle <jimi at temporal-wave.com> wrote:
> >> I think that the quantum token idea is a much better one in that a
> >> token can simultaneously be ID and WHERE or any other token that it
> >> is flagged as being possible to be. This removes context from the
> >> lexer and allows the parser to decide.
> >>
> >
> > Yes please !!! ?This seems like a wonderfully elegant and very useful
> idea.
> >
> > Michael
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From devdoer2 at gmail.com  Wed Feb 16 21:04:55 2011
From: devdoer2 at gmail.com (devdoer bird)
Date: Thu, 17 Feb 2011 13:04:55 +0800
Subject: [antlr-interest] How can I make sure there's one such rule in the
	input ?
Message-ID: <AANLkTimy6kC86Sy7VE_k5H3LKvX6R5SXkNLgK_=dKpMW@mail.gmail.com>

HI:

I have the grammar:

statements:(inputStatement|schemaStatement|filtersStatement|COMMENT)* EOF;


As you see ,it will match as many inputStatements as there are in the input
file.


How can change the grammar to  make sure there is only one inputStatment in
the input file?


Thanks.

From jimi at temporal-wave.com  Wed Feb 16 21:10:33 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 16 Feb 2011 21:10:33 -0800
Subject: [antlr-interest] How can I make sure there's one such rule in
 the input ?
In-Reply-To: <AANLkTimy6kC86Sy7VE_k5H3LKvX6R5SXkNLgK_=dKpMW@mail.gmail.com>
References: <AANLkTimy6kC86Sy7VE_k5H3LKvX6R5SXkNLgK_=dKpMW@mail.gmail.com>
Message-ID: <7e63a6abfcec053c59aa740d15728b0a@mail.gmail.com>

You don't. You add a counter and parse everything that comes up, then you
issue a semantic error saying that there are too many inputStatements.
Always push the errors as far down the chain as you can as they gain more
context and are therefore clearer to the end user.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of devdoer bird
> Sent: Wednesday, February 16, 2011 9:05 PM
> To: antlr-interest Interest
> Subject: [antlr-interest] How can I make sure there's one such rule in
> the input ?
>
> HI:
>
> I have the grammar:
>
> statements:(inputStatement|schemaStatement|filtersStatement|COMMENT)*
> EOF;
>
>
> As you see ,it will match as many inputStatements as there are in the
> input file.
>
>
> How can change the grammar to  make sure there is only one
> inputStatment in the input file?
>
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From devdoer2 at gmail.com  Wed Feb 16 21:37:45 2011
From: devdoer2 at gmail.com (devdoer bird)
Date: Thu, 17 Feb 2011 13:37:45 +0800
Subject: [antlr-interest] How can I make sure there's one such rule in
 the input ?
In-Reply-To: <7e63a6abfcec053c59aa740d15728b0a@mail.gmail.com>
References: <AANLkTimy6kC86Sy7VE_k5H3LKvX6R5SXkNLgK_=dKpMW@mail.gmail.com>
	<7e63a6abfcec053c59aa740d15728b0a@mail.gmail.com>
Message-ID: <AANLkTikYyavWbjo=CZz6-qBer7kxd+L0eiNPBm0LtETL@mail.gmail.com>

Thanks?

2011/2/17 Jim Idle <jimi at temporal-wave.com>

> You don't. You add a counter and parse everything that comes up, then you
> issue a semantic error saying that there are too many inputStatements.
> Always push the errors as far down the chain as you can as they gain more
> context and are therefore clearer to the end user.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of devdoer bird
> > Sent: Wednesday, February 16, 2011 9:05 PM
> > To: antlr-interest Interest
> > Subject: [antlr-interest] How can I make sure there's one such rule in
> > the input ?
> >
> > HI:
> >
> > I have the grammar:
> >
> > statements:(inputStatement|schemaStatement|filtersStatement|COMMENT)*
> > EOF;
> >
> >
> > As you see ,it will match as many inputStatements as there are in the
> > input file.
> >
> >
> > How can change the grammar to  make sure there is only one
> > inputStatment in the input file?
> >
> >
> > Thanks.
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Thu Feb 17 00:29:25 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 17 Feb 2011 19:29:25 +1100
Subject: [antlr-interest] Just For Converting
In-Reply-To: <fb06eb.4120.12e32611119.Coremail.xpwithme@163.com>
References: <22465a.30a2.12e31f7611e.Coremail.xpwithme@163.com>
	<AANLkTimoGbgHX4Bqx7n4nFHx-eCmSQoKKsfvi95VJ3Tr@mail.gmail.com>
	<fb06eb.4120.12e32611119.Coremail.xpwithme@163.com>
Message-ID: <AANLkTimV50Pgwh6MnBYorN5bKmdGOrpc2X5ySUPy4uzc@mail.gmail.com>

OK. Well in that case it would be good if you could provide the list
with more details. That will increase your chances of getting useful
advice.

Michael


2011/2/17 ?? <xpwithme at 163.com>:
> hello
> what had listed, is only a partion of the grammer , so i?must use?antlr
>
>
> At?2011-02-17?"Michael?Bedward"?<michael.bedward at gmail.com>?wrote:
>
>>Hello,
>>
>>For?fixed-width?or?delimited?data?like?these?it?is?a?lot?easier?to
>>write?a?program?by?hand?than?use?ANTLR.
>>
>>Michael
>>
>>On?17?February?2011?15:53,????<xpwithme at 163.com>?wrote:
>>>
>>>
>>>
>>>?i?want?convert?the?Stream?content?like:
>>>
>>>?attribute1??????attibute2???????attribute3????????attribute4???????????attribute5
>>>
>>>??value1??????????value2?????????value3????????????value4????????????????value5
>>>
>>>??value1??????????value2?????????value3????????????value4?????????????????value5
>>>
>>>??vaue1??????????value2??????????value3????????????value4?????????????????value5
>>>
>>>?my?goal?is?store?those?tokens?in?the?form?of
>>>
>>>?(atribute1?value1)?(?attribue2?value2)?(?attribue3?value3)?...?...
>>>
>>>?(atribute1?value1)?(?attribue2?value2)?(?attribue3?value3)?...?...
>>>
>>>?(atribute1?value1)?(?attribue2?value2)?(?attribue3?value3)?...?...
>>>
>>>?so?how?could?i?write?my?grammer?by?antlr?to?reach?my?goal
>>>
>>>?thanks
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>?List:?http://www.antlr.org/mailman/listinfo/antlr-interest
>>>?Unsubscribe:?http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>
>
>

From reza.genial at gmail.com  Thu Feb 17 01:00:55 2011
From: reza.genial at gmail.com (Reza)
Date: Thu, 17 Feb 2011 01:00:55 -0800
Subject: [antlr-interest] i faced problem with "sort" command?! anybody can
 help me? i have limited time :(
Message-ID: <AANLkTi=0BqeiZHMj-fh0KM_jPOTY-Cu1MxXcPMnnsKhn@mail.gmail.com>

Dear All
      I'm using one framework they used ANTLR 2.7.3 (20050127-10) as part of
this framework but when i try to compile this part of frame work i receive
below error is there any boday can help me.
/* $ANTLR 2.7.3 (20050127-10): "XmlPL.g" -> "XmlPLParser.cpp"$ */ in these
two file there is sort command but when i compile i receive this error:
.
.
.
../../xmlpl/parser/ast/Cast.h: In member function ?virtual const bool
Cast::isSelfAppending() const?:
../../xmlpl/parser/ast/Cast.h:35: warning: suggest parentheses around ?&&?
within ?||?
XmlPL.g: In member function ?void XmlPLParser::program(const EnvRef&)?:
XmlPL.g:506: error: ?sort? was not declared in this scope
XmlPL.g:506: error: expected primary-expression before ?,? token
XmlPL.g:506: error: expected primary-expression before ?>? token
make[7]: *** [libxmlplParser_la-XmlPLParser.lo] Error 1
make[7]: Leaving directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/xmlplcc/src/xmlpl/parser'
make[6]: *** [all-recursive] Error 1
.
.
.

any body can help me to solve this problem and in below is that part of
source code used sort command:
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XmlPLParser.cpp :

#line 496 "XmlPL.g"

                vector<EnvEntryRef> entries;
                if (Options::getInstance()->getBuildLibrary()) {
                if (pd_AST == 0)
                ErrorHandler::error("libraries must have a package
declaration");

                // Get local symbols
                Environment::env_map_t::const_iterator it;
                for (it = env->begin(); it != env->end(); it++) {
                Environment::ns_map_t::const_iterator it2;
                it2 = it->second.find("");
                if (it2 == it->second.end()) continue;

                entries.push_back(it2->second);
                }

                Sort symbols
                sort<vector<EnvEntryRef>::iterator,
ltEnvEntry>(entries.begin(),
                              entries.end(), ltEnvEntry());
                }
//////////////////////////////////////////////////////////////////////////////////////////////////////////
XmlPL.g:

program[const EnvRef &env]
: (pd:packageDecl[env])? (declaration[env])* EOF!
{
  vector<EnvEntryRef> entries;
  if (Options::getInstance()->getBuildLibrary()) {
    if (#pd == 0)
      ErrorHandler::error("libraries must have a package declaration");

    // Get local symbols
    Environment::env_map_t::const_iterator it;
    for (it = env->begin(); it != env->end(); it++) {
      Environment::ns_map_t::const_iterator it2;
      it2 = it->second.find("");
      if (it2 == it->second.end()) continue;

      entries.push_back(it2->second);
    }

    Sort symbols
    sort<vector<EnvEntryRef>::iterator, ltEnvEntry>(entries.begin(),
                 entries.end(), ltEnvEntry());
  }

  Program *p = new Program(entries);
  #program = #(p, #program);
}
;
/////////////////////////////////////////////////////////////////////////////////////////////////
-- 
Best Regards
Reza

From reza.genial at gmail.com  Thu Feb 17 02:04:28 2011
From: reza.genial at gmail.com (Reza)
Date: Thu, 17 Feb 2011 02:04:28 -0800
Subject: [antlr-interest] i faced problem with "sort" command?! anybody can
 help me? i have limited time :(
Message-ID: <AANLkTi=CvKa6eDwWKdrm70i5EbjhkdDJ5-tTkgC4yupg@mail.gmail.com>

Dear All
      I'm using Sesame framework, this framework included some other
applications and one of them is ANTLR 2.7.3 (20050127-10) but when i try to
compile this part of framework i receive an error.
/* $ANTLR 2.7.3 (20050127-10): "XmlPL.g" -> "XmlPLParser.cpp"$ */ in these
two file there is sort command but when i compile i receive this error:
.
.
.
../../xmlpl/parser/ast/Cast.h: In member function ?virtual const bool
Cast::isSelfAppending() const?:
../../xmlpl/parser/ast/Cast.h:35: warning: suggest parentheses around ?&&?
within ?||?
XmlPL.g: In member function ?void XmlPLParser::program(const EnvRef&)?:
XmlPL.g:506: error: ?sort? was not declared in this scope
XmlPL.g:506: error: expected primary-expression before ?,? token
XmlPL.g:506: error: expected primary-expression before ?>? token
make[7]: *** [libxmlplParser_la-XmlPLParser.lo] Error 1
make[7]: Leaving directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/xmlplcc/src/xmlpl/parser'
make[6]: *** [all-recursive] Error 1
.
.
.

any body can help me to solve this problem and in below is that part of
source code used sort command:
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
first file is XmlPLParser.cpp and below is source code for that part :

#line 496 "XmlPL.g"

                vector<EnvEntryRef> entries;
                if (Options::getInstance()->getBuildLibrary()) {
                if (pd_AST == 0)
                ErrorHandler::error("libraries must have a package
declaration");

                // Get local symbols
                Environment::env_map_t::const_iterator it;
                for (it = env->begin(); it != env->end(); it++) {
                Environment::ns_map_t::const_iterator it2;
                it2 = it->second.find("");
                if (it2 == it->second.end()) continue;

                entries.push_back(it2->second);
                }

                Sort symbols
                sort<vector<EnvEntryRef>::iterator,
ltEnvEntry>(entries.begin(),
                              entries.end(), ltEnvEntry());
                }
//////////////////////////////////////////////////////////////////////////////////////////////////////////
second file is XmlPL.g and below is source code for that part:

program[const EnvRef &env]
: (pd:packageDecl[env])? (declaration[env])* EOF!
{
  vector<EnvEntryRef> entries;
  if (Options::getInstance()->getBuildLibrary()) {
    if (#pd == 0)
      ErrorHandler::error("libraries must have a package declaration");

    // Get local symbols
    Environment::env_map_t::const_iterator it;
    for (it = env->begin(); it != env->end(); it++) {
      Environment::ns_map_t::const_iterator it2;
      it2 = it->second.find("");
      if (it2 == it->second.end()) continue;

      entries.push_back(it2->second);
    }

    Sort symbols
    sort<vector<EnvEntryRef>::iterator, ltEnvEntry>(entries.begin(),
                 entries.end(), ltEnvEntry());
  }

  Program *p = new Program(entries);
  #program = #(p, #program);
}
;
/////////////////////////////////////////////////////////////////////////////////////////////////


-- 
Best Regards
Reza

From reza.genial at gmail.com  Thu Feb 17 02:14:19 2011
From: reza.genial at gmail.com (Reza)
Date: Thu, 17 Feb 2011 02:14:19 -0800
Subject: [antlr-interest] I faced problem for installing libantlr is there
 anybody help me? i have limited time :(
Message-ID: <AANLkTi=owLZrZcJ3StTawgcSAeX-0J+H95P7w1v6pmM7@mail.gmail.com>

Dear All
      I'm using Sesame framework, this framework included some other
applications and one of them is ANTLR 2.7.3 (20050127-10) but when i try to
compile this part(xmlpl/libantlr) of framework i receive an error.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
root at ubuntu:/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr#
make
make  all-recursive
make[1]: Entering directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr'
Making all in src
make[2]: Entering directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr/src'
Making all in antlr
make[3]: Entering directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr/src/antlr'
g++ -DHAVE_CONFIG_H     -I.. -g -O2 -MT libantlr_a-Parser.o -MD -MP -MF
.deps/libantlr_a-Parser.Tpo -c -o libantlr_a-Parser.o `test -f 'Parser.cpp'
|| echo './'`Parser.cpp
Parser.cpp: In member function ?virtual void antlr::Parser::panic()?:
Parser.cpp:154: error: ?exit? was not declared in this scope
make[3]: *** [libantlr_a-Parser.o] Error 1
make[3]: Leaving directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr/src/antlr'
make[2]: *** [all-recursive] Error 1
make[2]: Leaving directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr/src'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory
`/home/reza/daedalus/Tools/sesame-release_20071126/xmlpl/libantlr'
make: *** [all] Error 2
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

is there anybody help in this issue?


-- 
Best Regards
Reza

From bastian.asam at amadeus.com  Thu Feb 17 03:55:57 2011
From: bastian.asam at amadeus.com (Bastian Asam)
Date: Thu, 17 Feb 2011 12:55:57 +0100
Subject: [antlr-interest] FYI Duplicate Nodes Behavior
Message-ID: <OFC2B59791.DBCA5F48-ON0025783A.003F0416-C125783A.00418A92@amadeus.com>

Hello everybody,
I just spend almost a day to figure out a difference on how ANTLR handles 
the duplication of nodes and thought it might be helpful to others.

What I was trying to do is rather simple:

dup : 'test =' refs -> ^('test' refs refs) ;
refs : id(',' id)* ;
id : ID ;

That generates with input "test = test1,test2" this tree: ^('test' id 
test1 test2 ^(nil test1 test2))

Why is there a nil node generated?

My solution to this is to put the refs definition in the dup definition:
dup : 'test =' (i+=id(',' i+=id)*) -> ^('test' $i* $i*) ;       // don't 
forget the * !!
id : ID ;

Is not particularly beautiful, but works :)

Output is now
^('test' id test1 test2 test1 test2)

Hope this helps someone...
Bastian



IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 
the use of the individual or entity shown above as addressees. It may 
contain information which is privileged, confidential or otherwise 
protected from disclosure under applicable laws.  If the reader of this 
transmission is not the intended recipient, you are hereby notified that 
any dissemination, printing, distribution, copying, disclosure or the 
taking of any action in reliance on the contents of this information is 
strictly prohibited.  If you have received this transmission in error, 
please immediately notify us by reply e-mail or using the address below 
and delete the message and any attachments from your system. 

Amadeus Data Processing GmbH 
Gesch?ftsf?hrer: Eberhard Haag 
Sitz der Gesellschaft: Erding 
HR M?nchen 48 199 
Berghamer Strasse 6 
85435 Erding 
Germany

From g4 at novadsp.com  Thu Feb 17 06:31:00 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Thu, 17 Feb 2011 14:31:00 +0000
Subject: [antlr-interest] C# 4 grammar query
Message-ID: <4D5D3124.90100@novadsp.com>


From g4 at novadsp.com  Thu Feb 17 09:55:25 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Thu, 17 Feb 2011 17:55:25 +0000
Subject: [antlr-interest] C# v4 fixes
Message-ID: <4D5D610D.2090704@novadsp.com>


From parrt at cs.usfca.edu  Thu Feb 17 10:04:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 17 Feb 2011 10:04:03 -0800
Subject: [antlr-interest] new -language L option
Message-ID: <FDC31436-7751-477F-BC44-D5CFF5394F3E@cs.usfca.edu>

* Add -language L option to override language=L option in grammar.  Same
  grammar can yield multiple parsers in different languages now.

Will appear next release or daily build later tonight.

Ter

From kingces95 at gmail.com  Thu Feb 17 14:52:29 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 17 Feb 2011 14:52:29 -0800
Subject: [antlr-interest] Context Sensitive Keyword Support?
Message-ID: <AANLkTin0C2a05eJY_9rDhhGJwy22K_fHMJRx=KzhebzX@mail.gmail.com>

Jim, thanks! I'll try that. Yes, I'm trying to build a C# antlr grammar.
It's a learning exercise at the moment. I'm hoping to open source it so I
don't want to be peeking at any commercial code but I'd love to pick your
brain! :)

How did you implement the pre-processor? To embed the language grammar in
the pre-processor grammar I created a subclass of a C# TextReader that looks
for lines starting with # and then hands those lines off to a pre-processor
grammar to determine if the block of code should be returned to the language
parser. This way the TextReader is generating only the text that is not
#ifdefed out. I tried to create a unified grammar but failed. Did you manage
to have a unified pre-processor and language grammar?

For my 2c I like Scott's proposal. Build a lexer that generates tokens given
(1) a lexical grammar and (2) the set of possible tokens the parser could
consume. Seems that would be an especially elegant way to embed one grammar
(C#) in another (C# pre-processor) as well the keyword context problem.

Thanks,
Chris

From michael.bedward at gmail.com  Thu Feb 17 16:50:14 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 18 Feb 2011 11:50:14 +1100
Subject: [antlr-interest] Context Sensitive Keyword Support?
In-Reply-To: <AANLkTin0C2a05eJY_9rDhhGJwy22K_fHMJRx=KzhebzX@mail.gmail.com>
References: <AANLkTin0C2a05eJY_9rDhhGJwy22K_fHMJRx=KzhebzX@mail.gmail.com>
Message-ID: <AANLkTimf4pG_ASAGR9pP0QWpCBxwruOdKEb390TGeZZ9@mail.gmail.com>

On 18 February 2011 09:52, chris king <kingces95 at gmail.com> wrote:
> For my 2c I like Scott's proposal. Build a lexer that generates tokens given
> (1) a lexical grammar and (2) the set of possible tokens the parser could
> consume.

It's horses for courses I guess, with either approach seeming easier
or more intuitive given the particulars of the task (and the person
writing the code).

For my projects and style of thinking, Jim's proposal is very
appealing. The lexer just delivers what's on offer and the parser's
role is to use or reject that input.  To me this seems conceptually
simpler than the parser saying what it would like next and the lexer
working out whether it can deliver it.  I like simple things :)

Michael

From vinicius.durelli at gmail.com  Fri Feb 18 07:35:06 2011
From: vinicius.durelli at gmail.com (Vinicius Durelli)
Date: Fri, 18 Feb 2011 13:35:06 -0200
Subject: [antlr-interest] Tree Grammar (Beginner doubt/problem)
Message-ID: <AANLkTi=bdHXXeRHj28L3O_XxH-N=Otf=XKbT_6eMxKGB@mail.gmail.com>

Hi, I have created a lexer and a parser for a rather simple DSL. A snippet
of this DSL that I am using for testing my lexer/parser is attached
(snippet.txt).
However, when it comes to evaluating the AST generated by my parser, my tree
grammar does not work properly. To be more specific, it stops parsing at
rule:

body : ^(MUTANTSNODE mutant*)
;

I have created grammars for lexers and parsers before, but tree grammars are
pretty new to my. Thus, any help on how to fix this problem (I am sure it
must be something quite simple, I do not have a clue though) would be
appreciated.
Attached you will find both grammars and the foregoing snippet that I am
using for testing purposes.

I can provide more details if needed.
For your time, thanks.

Regards,
Vinicius Durelli
-------------- next part --------------
[original] {
     id := "int HelloMaxine.fooBarFirstOne(int, float) "
     [before:1] {
          snapshot := {}
     }
     [before:2] {
          snapshot := {
	  "40";
	  "0";
	}
     }
     [after:1] {
          snapshot := {}
     }
     [after:2] {
          snapshot := {
	  "40";
	  "4657.3";
	}
     }
     [mutant] {
        id := "int HelloMaxine.fooBar$Mutant_2(int a, float f) "
		snapshot <- {
		  "4";
		  "4657.3";
		}
		state <- DEAD("return value different from the original method's")
     }
     [mutant] {
        id := "int HelloMaxine.fooBar$Mutant_3(int a, float f) "
		snapshot <- {
		  "40";
		  "4657.3";
		}
		state <- LIVE
     }
     [mutant] {
        id := "int HelloMaxine.fooBar$Mutant_4(int a, float f) "
		snapshot <- {
		  "40";
		  "4657.3";
		}
		state <- EQUIV
     }
}
[original] {
     id:="int HelloMaxine.fooBarEmpty2(int, float) "	
}
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Eval.g
Type: application/octet-stream
Size: 388 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110218/a8229c06/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Project.g
Type: application/octet-stream
Size: 21530 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110218/a8229c06/attachment-0001.obj 

From jimi at temporal-wave.com  Fri Feb 18 08:54:17 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Feb 2011 08:54:17 -0800
Subject: [antlr-interest] Tree Grammar (Beginner doubt/problem)
In-Reply-To: <AANLkTi=bdHXXeRHj28L3O_XxH-N=Otf=XKbT_6eMxKGB@mail.gmail.com>
References: <AANLkTi=bdHXXeRHj28L3O_XxH-N=Otf=XKbT_6eMxKGB@mail.gmail.com>
Message-ID: <2b981a25df28ac6de80c5cfeed9f88bf@mail.gmail.com>

Your construct will fail if the mutant rule is empty as it will not be a
node. You want:

body : ^(MUTANTSNODE mutant+)
     | MUTANTSNODE // No children
     ;

That's a guess without looking at your tree though. If you debug the
parser grammar in AntlrWorks, you can see the tree that you are actually
building. This will help. You can also produce a dot spec for the tree
(search the list) and produce an image of it.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vinicius Durelli
> Sent: Friday, February 18, 2011 7:35 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Tree Grammar (Beginner doubt/problem)
>
> Hi, I have created a lexer and a parser for a rather simple DSL. A
> snippet of this DSL that I am using for testing my lexer/parser is
> attached (snippet.txt).
> However, when it comes to evaluating the AST generated by my parser, my
> tree grammar does not work properly. To be more specific, it stops
> parsing at
> rule:
>
> body : ^(MUTANTSNODE mutant*)
> ;
>
> I have created grammars for lexers and parsers before, but tree
> grammars are pretty new to my. Thus, any help on how to fix this
> problem (I am sure it must be something quite simple, I do not have a
> clue though) would be appreciated.
> Attached you will find both grammars and the foregoing snippet that I
> am using for testing purposes.
>
> I can provide more details if needed.
> For your time, thanks.
>
> Regards,
> Vinicius Durelli

From vinicius.durelli at gmail.com  Fri Feb 18 09:23:48 2011
From: vinicius.durelli at gmail.com (Vinicius Durelli)
Date: Fri, 18 Feb 2011 15:23:48 -0200
Subject: [antlr-interest] Tree Grammar (Beginner doubt/problem)
In-Reply-To: <2b981a25df28ac6de80c5cfeed9f88bf@mail.gmail.com>
References: <AANLkTi=bdHXXeRHj28L3O_XxH-N=Otf=XKbT_6eMxKGB@mail.gmail.com>
	<2b981a25df28ac6de80c5cfeed9f88bf@mail.gmail.com>
Message-ID: <AANLkTimCkvnrGLo6_XOcv2uCzu6LtFNsJed1o7JZOnDL@mail.gmail.com>

Jim, thank you.
Indeed, I stared at this rule for almost an hour and didn't see anything
wrong. You're right, I modified my grammar as you suggested and it did the
trick.
BTW, I was using AW but even using it I was not able to spot my stupid
mistake.

All the best,
~Vinicius Durelli

2011/2/18 Jim Idle <jimi at temporal-wave.com>

> Your construct will fail if the mutant rule is empty as it will not be a
> node. You want:
>
> body : ^(MUTANTSNODE mutant+)
>     | MUTANTSNODE // No children
>     ;
>
> That's a guess without looking at your tree though. If you debug the
> parser grammar in AntlrWorks, you can see the tree that you are actually
> building. This will help. You can also produce a dot spec for the tree
> (search the list) and produce an image of it.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Vinicius Durelli
> > Sent: Friday, February 18, 2011 7:35 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Tree Grammar (Beginner doubt/problem)
> >
> > Hi, I have created a lexer and a parser for a rather simple DSL. A
> > snippet of this DSL that I am using for testing my lexer/parser is
> > attached (snippet.txt).
> > However, when it comes to evaluating the AST generated by my parser, my
> > tree grammar does not work properly. To be more specific, it stops
> > parsing at
> > rule:
> >
> > body : ^(MUTANTSNODE mutant*)
> > ;
> >
> > I have created grammars for lexers and parsers before, but tree
> > grammars are pretty new to my. Thus, any help on how to fix this
> > problem (I am sure it must be something quite simple, I do not have a
> > clue though) would be appreciated.
> > Attached you will find both grammars and the foregoing snippet that I
> > am using for testing purposes.
> >
> > I can provide more details if needed.
> > For your time, thanks.
> >
> > Regards,
> > Vinicius Durelli
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cummings at kjchome.homeip.net  Fri Feb 18 12:57:32 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 18 Feb 2011 15:57:32 -0500
Subject: [antlr-interest] Problem with AST type in tree grammar in C target
Message-ID: <4D5EDD3C.5070002@kjchome.homeip.net>

I'm trying to implement a Tree Grammar for my Lexer and Parser.

In my Tree Grammar, I specify:

> tree grammar m2Emit;
> 
> options { language=C;
>           ASTLabelType=pANTLR3_COMMON_TREE;
>         }

Further down, I have a rule:

> stmt
>     : ^(ASSIGN assLhs=ref assExp=exp )
>     ;

When I compile, I see the following errors:

> m2Emit.c: In function ?m2Emit_exp_return exp(m2Emit_Ctx_struct*)?:
> m2Emit.c:1113:20: error: cannot convert ?ANTLR3_BASE_TREE_struct*? to ?ANTLR3_COMMON_TREE_struct*? in assignment
> m2Emit.c: In function ?m2Emit_ref_return ref(m2Emit_Ctx_struct*)?:
> m2Emit.c:2193:20: error: cannot convert ?ANTLR3_BASE_TREE_struct*? to ?ANTLR3_COMMON_TREE_struct*? in assignment

In m2Emit.c, I can see the following code:

>     retval.start = LT(1); retval.stop = retval.start;

It looks like LT(1) is an ANTLR3_BASE_TREE_struct*, while retval.start
is an ANTLR3_COMMON_TREE_struct*.

Is this a bug, or did I miss some important documentation?

In case it matters, I'm trying to compile as C++....


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From kchichakly at iseesystems.com  Fri Feb 18 13:13:19 2011
From: kchichakly at iseesystems.com (Karim Chichakly)
Date: Fri, 18 Feb 2011 16:13:19 -0500
Subject: [antlr-interest] Problem with AST type in tree grammar in C
	target
In-Reply-To: <4D5EDD3C.5070002@kjchome.homeip.net>
References: <4D5EDD3C.5070002@kjchome.homeip.net>
Message-ID: <AANLkTi=MhC_PYfUTK-K=KFsDb=--xrbLth3xs_jJGxgt@mail.gmail.com>

With the C target, you have to use:

    ASTLabelType = pANTLR3_BASE_TREE;

And all the nodes you get will be of this type.

Karim


On Fri, Feb 18, 2011 at 3:57 PM, Kevin J. Cummings <
cummings at kjchome.homeip.net> wrote:

> I'm trying to implement a Tree Grammar for my Lexer and Parser.
>
> In my Tree Grammar, I specify:
>
> > tree grammar m2Emit;
> >
> > options { language=C;
> >           ASTLabelType=pANTLR3_COMMON_TREE;
> >         }
>
> Further down, I have a rule:
>
> > stmt
> >     : ^(ASSIGN assLhs=ref assExp=exp )
> >     ;
>
> When I compile, I see the following errors:
>
> > m2Emit.c: In function ?m2Emit_exp_return exp(m2Emit_Ctx_struct*)?:
> > m2Emit.c:1113:20: error: cannot convert ?ANTLR3_BASE_TREE_struct*? to
> ?ANTLR3_COMMON_TREE_struct*? in assignment
> > m2Emit.c: In function ?m2Emit_ref_return ref(m2Emit_Ctx_struct*)?:
> > m2Emit.c:2193:20: error: cannot convert ?ANTLR3_BASE_TREE_struct*? to
> ?ANTLR3_COMMON_TREE_struct*? in assignment
>
> In m2Emit.c, I can see the following code:
>
> >     retval.start = LT(1); retval.stop = retval.start;
>
> It looks like LT(1) is an ANTLR3_BASE_TREE_struct*, while retval.start
> is an ANTLR3_COMMON_TREE_struct*.
>
> Is this a bug, or did I miss some important documentation?
>
> In case it matters, I'm trying to compile as C++....
>
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Feb 18 13:59:13 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Feb 2011 13:59:13 -0800
Subject: [antlr-interest] Problem with AST type in tree grammar in C
	target
In-Reply-To: <4D5EDD3C.5070002@kjchome.homeip.net>
References: <4D5EDD3C.5070002@kjchome.homeip.net>
Message-ID: <c8d6498aa9e1d032db123b658a1b1fd5@mail.gmail.com>

The type of a node is pANTLR3_BASE_TREE and that is the default, you do
not need to specify it as it is ALWAYS that unless you want to do lots and
lots of work, which you don't.

Now the default tree factory actually creates pANTLR3_COMMON_TREE but this
contains pANTLR3_BASE_TREE and it is the pointer to the base tree that is
used because EVERY tree node implementation must contain one of these.

So, when you use the pointer, if you want to access the COMMON_TREE, then
you cast the 'super' pointer in the base tree to pANTLR3_COMMON_TREE and
hey presto.

{
	pANTLR3_COMMON_TREE ct = (pANTLR3_COMMON_TREE)($assLhs->super);
}

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kevin J. Cummings
> Sent: Friday, February 18, 2011 12:58 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem with AST type in tree grammar in C
> target
>
> I'm trying to implement a Tree Grammar for my Lexer and Parser.
>
> In my Tree Grammar, I specify:
>
> > tree grammar m2Emit;
> >
> > options { language=C;
> >           ASTLabelType=pANTLR3_COMMON_TREE;
> >         }
>
> Further down, I have a rule:
>
> > stmt
> >     : ^(ASSIGN assLhs=ref assExp=exp )
> >     ;
>
> When I compile, I see the following errors:
>
> > m2Emit.c: In function 'm2Emit_exp_return exp(m2Emit_Ctx_struct*)':
> > m2Emit.c:1113:20: error: cannot convert 'ANTLR3_BASE_TREE_struct*' to
> > 'ANTLR3_COMMON_TREE_struct*' in assignment
> > m2Emit.c: In function 'm2Emit_ref_return ref(m2Emit_Ctx_struct*)':
> > m2Emit.c:2193:20: error: cannot convert 'ANTLR3_BASE_TREE_struct*' to
> > 'ANTLR3_COMMON_TREE_struct*' in assignment
>
> In m2Emit.c, I can see the following code:
>
> >     retval.start = LT(1); retval.stop = retval.start;
>
> It looks like LT(1) is an ANTLR3_BASE_TREE_struct*, while retval.start
> is an ANTLR3_COMMON_TREE_struct*.
>
> Is this a bug, or did I miss some important documentation?
>
> In case it matters, I'm trying to compile as C++....
>
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Feb 18 15:13:41 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Feb 2011 15:13:41 -0800
Subject: [antlr-interest] Problem with AST type in tree grammar in C
	target
In-Reply-To: <4D5EF06B.7090200@kjchome.homeip.net>
References: <4D5EDD3C.5070002@kjchome.homeip.net>
	<c8d6498aa9e1d032db123b658a1b1fd5@mail.gmail.com>
	<4D5EF06B.7090200@kjchome.homeip.net>
Message-ID: <ea9cbf27eb1402ba9aca6715da261a49@mail.gmail.com>

You are telling to type them as pANTLR3_COMMON_TREE and so that's what it
does. It's your fault, not ANTLR's ;-) The ability to specify the type is
just a left over from the Java, basically you should not do it as
everything is just passed around via the base pointer.

Jim

> -----Original Message-----
> From: Kevin J. Cummings [mailto:cummings at kjchome.homeip.net]
> Sent: Friday, February 18, 2011 2:19 PM
> To: Jim Idle
> Subject: Re: [antlr-interest] Problem with AST type in tree grammar in
> C target
>
> On 02/18/2011 04:59 PM, Jim Idle wrote:
> > The type of a node is pANTLR3_BASE_TREE and that is the default, you
> > do not need to specify it as it is ALWAYS that unless you want to do
> > lots and lots of work, which you don't.
>
> I had used pANTR3_COMMON_TREE for my parser AST, so I just "assumed" I
> needed to do the same for the Tree parser since it was reading in those
> nodes.
>
> > Now the default tree factory actually creates pANTLR3_COMMON_TREE but
> > this contains pANTLR3_BASE_TREE and it is the pointer to the base
> tree
> > that is used because EVERY tree node implementation must contain one
> of these.
> >
> > So, when you use the pointer, if you want to access the COMMON_TREE,
> > then you cast the 'super' pointer in the base tree to
> > pANTLR3_COMMON_TREE and hey presto.
> >
> > {
> > 	pANTLR3_COMMON_TREE ct = (pANTLR3_COMMON_TREE)($assLhs->super);
> > }
>
> But, the example I quoted below is the code that ANTLR generated, not
> something from my actions.  Shouldn't ANTLR get it right in its
> generated code?
>
> I will play further with trying to remove the AST type from the tree
> grammar and see what happens....
>
> > Jim
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)

From jimi at temporal-wave.com  Fri Feb 18 15:17:39 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Feb 2011 15:17:39 -0800
Subject: [antlr-interest] Problem with AST type in tree grammar in C
	target
In-Reply-To: <4D5EF5C2.7080202@kjchome.homeip.net>
References: <4D5EDD3C.5070002@kjchome.homeip.net>
	<c8d6498aa9e1d032db123b658a1b1fd5@mail.gmail.com>
	<4D5EF5C2.7080202@kjchome.homeip.net>
Message-ID: <21ba50890b892b3019b98dd013830e15@mail.gmail.com>

I can't see what you are doing wrong without seeing your grammar. Oh, you
removed it altogether and there is an issue somewhere in StringTemplate
where it does not see the default that I set up.

Just copy from this or the examples grammars in the examplse tar:

// Author: Jim Idle, Temporal Wave LLC, Feb 2008.
//
tree grammar tsqlwalker;
//
--------------------------------------------------------------------------
-----------------
//
--------------------------------------------------------------------------
-----------------
// Grammar options
//
options
{
	//
	tokenVocab		= tsql;
	
	//
	ASTLabelType	= pANTLR3_BASE_TREE;
	
	language	= C;
}

Jim


> -----Original Message-----
> From: Kevin J. Cummings [mailto:cummings at kjchome.homeip.net]
> Sent: Friday, February 18, 2011 2:42 PM
> To: Jim Idle
> Subject: Re: [antlr-interest] Problem with AST type in tree grammar in
> C target
>
> On 02/18/2011 04:59 PM, Jim Idle wrote:
> > The type of a node is pANTLR3_BASE_TREE and that is the default, you
> > do not need to specify it as it is ALWAYS that unless you want to do
> > lots and lots of work, which you don't.
>
> If I remove the ASTLabelType option, I get the following errors:
>
> > m2Emit.h:120:8: error: 'start' does not name a type
> > m2Emit.h:121:8: error: 'stop' does not name a type
> > m2Emit.h:127:8: error: 'start' does not name a type
> > m2Emit.h:128:8: error: 'stop' does not name a type
>
> Which makes sense since I see:
>
> > typedef struct m2Emit_exp_return_struct {
> >        start;
> >        stop;
> > }
> >     m2Emit_exp_return;
> >
> > typedef struct m2Emit_ref_return_struct {
> >        start;
> >        stop;
> > }
> >     m2Emit_ref_return;
>
> but is not what I expected from what you just said.  Shouldn't there by
> types for those struct members?  Of course this problem breaks the next
> one....
>
> > m2Emit.c: In function 'void stmt(m2Emit_Ctx_struct*)':
> > m2Emit.c:868:43: error: 'struct m2Emit_ref_return' has no member
> named 'start'
> > m2Emit.c:868:43: error: 'struct m2Emit_ref_return' has no member
> named 'start'
> > m2Emit.c:868:111: error: 'struct m2Emit_exp_return' has no member
> named 'start'
> > m2Emit.c:868:111: error: 'struct m2Emit_exp_return' has no member
> named 'start'
> > m2Emit.c: In function 'm2Emit_exp_return exp(m2Emit_Ctx_struct*)':
> > m2Emit.c:1113:12: error: 'struct m2Emit_exp_return' has no member
> named 'start'
> > m2Emit.c:1113:34: error: 'struct m2Emit_exp_return' has no member
> named 'stop'
> > m2Emit.c:1113:48: error: 'struct m2Emit_exp_return' has no member
> named 'start'
> > m2Emit.c: In function 'm2Emit_ref_return ref(m2Emit_Ctx_struct*)':
> > m2Emit.c:2193:12: error: 'struct m2Emit_ref_return' has no member
> named 'start'
> > m2Emit.c:2193:34: error: 'struct m2Emit_ref_return' has no member
> named 'stop'
> > m2Emit.c:2193:48: error: 'struct m2Emit_ref_return' has no member
> named 'start'
>
> I'm feeling very frustrated at this....
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)

From tom at metasd.com  Fri Feb 18 17:12:50 2011
From: tom at metasd.com (Tom Fiddaman)
Date: Fri, 18 Feb 2011 18:12:50 -0700
Subject: [antlr-interest] baffling grammar behavior
Message-ID: <06f301cbcfd2$21a90d40$64fb27c0$@com>

I've built a grammar for much of a declarative simulation language.
Everything works, except this bit that I've distilled as much as possible:

grammar test;

input 	:	VARNAME IS LITERAL
	;

VARNAME :	VCHAR (SP? VCHAR)*
    ;
    
fragment
VCHAR 	: ('a'..'z'|'A'..'Z')
	;	

fragment
SP 	:	(' ')
	;
	
IS	:	':IS:'
	;

LITERAL:  '\'' ( options {greedy=false;} : . )* '\''
    ;
    
WS  :   ( ' '
	| '\t'
        | '\n'
        | '\r'
        ) {$channel=HIDDEN;}
    ;

When I feed the interpreter a typical string in ANTLRworks, like
y :IS: 'frank'
the first token matched (a VARNAME) is
y :IS
followed by a MismatchedTokenException for the rest.

The initial match doesn't make sense to me, because : isn't a possible
character of my VARNAME. I'm expecting my rules to first pick up the y as a
VARNAME, then consume the space as WS on the hidden channel, then grab the
:IS: operator.

This works fine if I eliminate the space before the :IS: in the input, or
simplify the VARNAME to just VARNAME : VCHAR ; or VARNAME : VCHAR (VCHAR)* ;
but unfortunately the target language permits spaces in variable names, so I
need the optional space SP?.

I'm hoping that I'm just making a dumb noob syntax error, but any
suggestions would be much appreciated.

Tom


From jimi at temporal-wave.com  Fri Feb 18 19:11:53 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 18 Feb 2011 19:11:53 -0800
Subject: [antlr-interest] baffling grammar behavior
In-Reply-To: <06f301cbcfd2$21a90d40$64fb27c0$@com>
References: <06f301cbcfd2$21a90d40$64fb27c0$@com>
Message-ID: <51e8ef099094d568191d2e8e73c05737@mail.gmail.com>

It is probably that the interpreter cannot deal with it to be honest. Use
the debugger rather than the interpreter.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Tom Fiddaman
> Sent: Friday, February 18, 2011 5:13 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] baffling grammar behavior
>
> I've built a grammar for much of a declarative simulation language.
> Everything works, except this bit that I've distilled as much as
> possible:
>
> grammar test;
>
> input 	:	VARNAME IS LITERAL
> 	;
>
> VARNAME :	VCHAR (SP? VCHAR)*
>     ;
>
> fragment
> VCHAR 	: ('a'..'z'|'A'..'Z')
> 	;
>
> fragment
> SP 	:	(' ')
> 	;
>
> IS	:	':IS:'
> 	;
>
> LITERAL:  '\'' ( options {greedy=false;} : . )* '\''
>     ;
>
> WS  :   ( ' '
> 	| '\t'
>         | '\n'
>         | '\r'
>         ) {$channel=HIDDEN;}
>     ;
>
> When I feed the interpreter a typical string in ANTLRworks, like y :IS:
> 'frank'
> the first token matched (a VARNAME) is
> y :IS
> followed by a MismatchedTokenException for the rest.
>
> The initial match doesn't make sense to me, because : isn't a possible
> character of my VARNAME. I'm expecting my rules to first pick up the y
> as a VARNAME, then consume the space as WS on the hidden channel, then
> grab the
> :IS: operator.
>
> This works fine if I eliminate the space before the :IS: in the input,
> or simplify the VARNAME to just VARNAME : VCHAR ; or VARNAME : VCHAR
> (VCHAR)* ; but unfortunately the target language permits spaces in
> variable names, so I need the optional space SP?.
>
> I'm hoping that I'm just making a dumb noob syntax error, but any
> suggestions would be much appreciated.
>
> Tom
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From bill.andersen at mac.com  Fri Feb 18 21:30:03 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Sat, 19 Feb 2011 00:30:03 -0500
Subject: [antlr-interest] Best way to set up lexer jUnit tests
Message-ID: <BDD9A165-977D-47AC-B00F-CA4C055EAF66@mac.com>

Hi Folks

Can't use gUnit because I have separate parser / lexer grammar.  

Looked around and found the project on sourceforge for ANTLR jUnit tests but don't want to use that.

I'd like to set up some jUnit tests of just my lexer.  Any advice on how to do that?

Thanks

  .bill


From list at toolazydogs.com  Sat Feb 19 10:14:34 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sat, 19 Feb 2011 10:14:34 -0800
Subject: [antlr-interest] Best way to set up lexer jUnit tests
In-Reply-To: <BDD9A165-977D-47AC-B00F-CA4C055EAF66@mac.com>
References: <BDD9A165-977D-47AC-B00F-CA4C055EAF66@mac.com>
Message-ID: <655C89B4-0AF7-4C94-AF97-E11A0553D0F7@toolazydogs.com>

Check out:

https://github.com/maguro/aunit


Regards,
Alan

On Feb 18, 2011, at 9:30 PM, Bill Andersen wrote:

> Hi Folks
> 
> Can't use gUnit because I have separate parser / lexer grammar.  
> 
> Looked around and found the project on sourceforge for ANTLR jUnit tests but don't want to use that.
> 
> I'd like to set up some jUnit tests of just my lexer.  Any advice on how to do that?
> 
> Thanks
> 
>  .bill
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Feb 19 18:21:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 19 Feb 2011 18:21:31 -0800
Subject: [antlr-interest] left-recursive expression rule prototype
Message-ID: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>

howdy. Finally got around to supporting left-recursion in limited circumstances. I started looking at it 2008:

http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression+parsing+for+ANTLR

Specifically, the building of perhaps 20 rules to handle the different precedence levels of arithmetic expressions and top-down parsers is heinous. The LR bottom up version is much easier to read but is, of course is ambiguous. I'm working on a little prototype where you specify an LR-like rule for arithmetic expressions and ANTLR can translate it to a "precedence climbing" rule without left recursion. It uses a predicate to simply compare the precedence of the previous operator with the precedence of the next operator coming down the road. The order of the alternatives provides the precedence of operations from loosest to tightest binding.

At least for now, I'm distinguishing rules with left recursion you want removed by using '/' instead of '|' for the alternative operator. In principle, I can simply look for patterns in any rule (works great for declarations too) and avoid the special operator.

Anyway, here is my test cases:

grammar V;
options {output=AST;}
    
e : e ('+'^|'-'^) e
  / e '*'^ e
  / '-'^ e
  / e '.'^ ID
  / INT
  / ID
  ;

ID : 'a'..'z'+ ;
INT : '0'..'9'+ ;
WS : (' '|'\t'|'\n')+ {skip();} ;

it gets translated to

start: e : e_[0] ;
e_[int _p]
   :   e_primary
       ( {1 >= _p}?=>  ('+'^|'-'^) e_[2]
         | {2 >= _p}?=>  '*'^ e_[3]
         | {4 >= _p}?=> '.'^ ID
       )*
   ;
e_primary
    :    '-'^ e_[3]
	| INT
	| ID
    ;

here are some sample input-output pairs using my test rig; input text to trees:

3+a.b 		(+ 3 (. a b))
a.b+3		(+ (. a b) 3)
a.b+3*4		(+ (. a b) (* 3 4))
-b * c		(* (- b) c)
a + -b * c		(+ a (* (- b) c))

I have to  get the  left vs right associativity in still, but I am encouraged by these early results. This translation results in a massive space reduction in the generated parsers over the typical 20-level chain of rules for arithmetic expression parsing. It should also prove incredibly fast in comparison. For example, the standard solution requires 20 method calls to match an integer vs 1 or 2 here.

And, oh yea, it will actually work for C declarators too :)

declarator
        : '*' declarator
        / declarator '[' e ']'
        / declarator '[' ']' 
        / declarator '(' ')'
        / '(' declarator ')'
        / ID
        ; 

ter

From call.vijayraj at yahoo.com  Sat Feb 19 19:53:12 2011
From: call.vijayraj at yahoo.com (Vijay Raj)
Date: Sat, 19 Feb 2011 19:53:12 -0800 (PST)
Subject: [antlr-interest] Maven antlr integration ?
Message-ID: <721836.24033.qm@web120316.mail.ne1.yahoo.com>

For a particular task regarding parsing java 6 grammars - my maven configuration 
of using antlr looks like this: 


   <plugin>
     <groupId>org.antlr</groupId>
     <artifactId>antlr3-maven-plugin</artifactId>
     <version>3.1.3-1</version>
            <configuration>
                <goals>
                    <goal>antlr</goal>
                </goals>
                <conversionTimeout>10000</conversionTimeout>
                <grammars>java.g</grammars>
            </configuration>


I am getting the following error message: 

Failed to execute goal 
org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate (default-cli) on 
project root: The parameters 'grammars' for goal 
org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate are missing or 
invalid -> [Help 1]

The documentation under reference: 
http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2 . Is that up 
to date with the reality ? 

I am using the Java 6 grammar as in the grammars page, thanks to Yang Jiang , 
here at : http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g 
 . 

$ mvn --version
Apache Maven 3.0.2 (r1056850; 2011-01-09 06:28:10+0530)


Let me know what I could be missing here ! 


      

From michael.bedward at gmail.com  Sat Feb 19 20:03:48 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sun, 20 Feb 2011 15:03:48 +1100
Subject: [antlr-interest] left-recursive expression rule prototype
In-Reply-To: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>
References: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>
Message-ID: <AANLkTin-XW91_pPqLsvuDnk=bdtZ5HN=-LzqLTPBrH+M@mail.gmail.com>

Nice !  It will make debugging easier too I imagine.

Michael

On 20 February 2011 13:21, Terence Parr <parrt at cs.usfca.edu> wrote:
> howdy. Finally got around to supporting left-recursion in limited circumstances. I started looking at it 2008:
>
> http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression+parsing+for+ANTLR
>
> Specifically, the building of perhaps 20 rules to handle the different precedence levels of arithmetic expressions and top-down parsers is heinous. The LR bottom up version is much easier to read but is, of course is ambiguous. I'm working on a little prototype where you specify an LR-like rule for arithmetic expressions and ANTLR can translate it to a "precedence climbing" rule without left recursion. It uses a predicate to simply compare the precedence of the previous operator with the precedence of the next operator coming down the road. The order of the alternatives provides the precedence of operations from loosest to tightest binding.
>
> At least for now, I'm distinguishing rules with left recursion you want removed by using '/' instead of '|' for the alternative operator. In principle, I can simply look for patterns in any rule (works great for declarations too) and avoid the special operator.
>
> Anyway, here is my test cases:
>
> grammar V;
> options {output=AST;}
>
> e : e ('+'^|'-'^) e
> ?/ e '*'^ e
> ?/ '-'^ e
> ?/ e '.'^ ID
> ?/ INT
> ?/ ID
> ?;
>
> ID : 'a'..'z'+ ;
> INT : '0'..'9'+ ;
> WS : (' '|'\t'|'\n')+ {skip();} ;
>
> it gets translated to
>
> start: e : e_[0] ;
> e_[int _p]
> ? : ? e_primary
> ? ? ? ( {1 >= _p}?=> ?('+'^|'-'^) e_[2]
> ? ? ? ? | {2 >= _p}?=> ?'*'^ e_[3]
> ? ? ? ? | {4 >= _p}?=> '.'^ ID
> ? ? ? )*
> ? ;
> e_primary
> ? ?: ? ?'-'^ e_[3]
> ? ? ? ?| INT
> ? ? ? ?| ID
> ? ?;
>
> here are some sample input-output pairs using my test rig; input text to trees:
>
> 3+a.b ? ? ? ? ? (+ 3 (. a b))
> a.b+3 ? ? ? ? ? (+ (. a b) 3)
> a.b+3*4 ? ? ? ? (+ (. a b) (* 3 4))
> -b * c ? ? ? ? ?(* (- b) c)
> a + -b * c ? ? ? ? ? ? ?(+ a (* (- b) c))
>
> I have to ?get the ?left vs right associativity in still, but I am encouraged by these early results. This translation results in a massive space reduction in the generated parsers over the typical 20-level chain of rules for arithmetic expression parsing. It should also prove incredibly fast in comparison. For example, the standard solution requires 20 method calls to match an integer vs 1 or 2 here.
>
> And, oh yea, it will actually work for C declarators too :)
>
> declarator
> ? ? ? ?: '*' declarator
> ? ? ? ?/ declarator '[' e ']'
> ? ? ? ?/ declarator '[' ']'
> ? ? ? ?/ declarator '(' ')'
> ? ? ? ?/ '(' declarator ')'
> ? ? ? ?/ ID
> ? ? ? ?;
>
> ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sat Feb 19 20:55:07 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 19 Feb 2011 20:55:07 -0800
Subject: [antlr-interest] left-recursive expression rule prototype
In-Reply-To: <AANLkTin-XW91_pPqLsvuDnk=bdtZ5HN=-LzqLTPBrH+M@mail.gmail.com>
References: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>
	<AANLkTin-XW91_pPqLsvuDnk=bdtZ5HN=-LzqLTPBrH+M@mail.gmail.com>
Message-ID: <4E21B19F-F34F-4AD1-8DB3-EFC4A63673EC@cs.usfca.edu>


On Feb 19, 2011, at 8:03 PM, Michael Bedward wrote:

> Nice !  It will make debugging easier too I imagine.

It should minus those mysterious precedence numbers ;)

Ter

From pop.qvarnstrom at gmail.com  Sun Feb 20 00:53:56 2011
From: pop.qvarnstrom at gmail.com (=?ISO-8859-1?Q?Pop_Qvarnstr=F6m?=)
Date: Sun, 20 Feb 2011 09:53:56 +0100
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <AANLkTikWeR_ATvnr-26aTxafOU+wfB-Usr5x7oCqRYYs@mail.gmail.com>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
	<AANLkTikWeR_ATvnr-26aTxafOU+wfB-Usr5x7oCqRYYs@mail.gmail.com>
Message-ID: <AANLkTim1xc71WvVGC8bM1jfHAYq2ipE4q9CSt4rXtR7P@mail.gmail.com>

Looks like you have a reference to a different version of an antlr plugin
somewhere in your pom (old, for antlr v2).

Cheers,
Pop
Den 20 feb 2011 04.53 skrev "Vijay Raj" <call.vijayraj at yahoo.com>:

From jimi at temporal-wave.com  Sun Feb 20 08:26:44 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 20 Feb 2011 08:26:44 -0800
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
Message-ID: <b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>

I don't think that you are using the correct version of the documentation
and 3.1.3-1 is the wrong version of the maven plugin anyway.

Why not create your project using the archetype 3.2 and then just overlay
your own .g file. See:

http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Mave
n

Use version 3.2 as in the article as 3.3 seems not to work and I have not
had time to look at why just yet.

And also see the docs for the plugin at:

http://www.antlr.org/antlr3-maven-plugin/index.html

I think you are following docs for the ANTLR 2 plugin or something.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vijay Raj
> Sent: Saturday, February 19, 2011 7:53 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Maven antlr integration ?
>
> For a particular task regarding parsing java 6 grammars - my maven
> configuration of using antlr looks like this:
>
>
>    <plugin>
>      <groupId>org.antlr</groupId>
>      <artifactId>antlr3-maven-plugin</artifactId>
>      <version>3.1.3-1</version>
>             <configuration>
>                 <goals>
>                     <goal>antlr</goal>
>                 </goals>
>                 <conversionTimeout>10000</conversionTimeout>
>                 <grammars>java.g</grammars>
>             </configuration>
>
>
> I am getting the following error message:
>
> Failed to execute goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate
> (default-cli) on
> project root: The parameters 'grammars' for goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate are
> missing or
> invalid -> [Help 1]
>
> The documentation under reference:
> http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2 .
> Is that up
> to date with the reality ?
>
> I am using the Java 6 grammar as in the grammars page, thanks to Yang
> Jiang ,
> here at : http://openjdk.java.net/projects/compiler-
> grammar/antlrworks/Java.g
>  .
>
> $ mvn --version
> Apache Maven 3.0.2 (r1056850; 2011-01-09 06:28:10+0530)
>
>
> Let me know what I could be missing here !
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From call.vijayraj at yahoo.com  Sun Feb 20 18:05:57 2011
From: call.vijayraj at yahoo.com (Vijay Raj)
Date: Sun, 20 Feb 2011 18:05:57 -0800 (PST)
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
	<b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
Message-ID: <517881.27458.qm@web120311.mail.ne1.yahoo.com>

Thanks, Jim for the pointers. 

I cleaned my maven cache. 

Here are the errors on the console: 

[INFO] --- antlr3-maven-plugin:3.3:antlr (default) @ core ---
[INFO] ANTLR: Processing source directory ../core/src/main/antlr3
ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
error(7):  cannot find or open file: null/Java.g
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE

[ERROR] Failed to execute goal org.antlr:antlr3-maven-plugin:3.3:antlr (default) 
on project core: ANTLR caught 1 build errors. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e 
switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please 
read the following articles:
[ERROR] [Help 1] 
http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException

Java.g is indeed present as per the directory structure recommended in the 
wiki. 

../core$ ls src/main/antlr3/Java.g 
src/main/antlr3/Java.g

The plugin fragment appears as below:  (using v 3.3 , the latest ). 

   <plugin>
    <groupId>org.antlr</groupId>
    <artifactId>antlr3-maven-plugin</artifactId>
    <version>3.3</version>
    <executions>
        <execution>
            <goals>
                <goal>antlr</goal>
            </goals>
        </execution>
    </executions>
   </plugin>

What else could I be missing ? 




________________________________
From: Jim Idle <jimi at temporal-wave.com>
To: Vijay Raj <call.vijayraj at yahoo.com>; antlr-interest at antlr.org
Sent: Sun, February 20, 2011 9:56:44 PM
Subject: RE: [antlr-interest] Maven antlr integration ?

I don't think that you are using the correct version of the documentation
and 3.1.3-1 is the wrong version of the maven plugin anyway.

Why not create your project using the archetype 3.2 and then just overlay
your own .g file. See:

http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Mave
n

Use version 3.2 as in the article as 3.3 seems not to work and I have not
had time to look at why just yet.

And also see the docs for the plugin at:

http://www.antlr.org/antlr3-maven-plugin/index.html

I think you are following docs for the ANTLR 2 plugin or something.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vijay Raj
> Sent: Saturday, February 19, 2011 7:53 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Maven antlr integration ?
>
> For a particular task regarding parsing java 6 grammars - my maven
> configuration of using antlr looks like this:
>
>
>    <plugin>
>      <groupId>org.antlr</groupId>
>      <artifactId>antlr3-maven-plugin</artifactId>
>      <version>3.1.3-1</version>
>             <configuration>
>                 <goals>
>                     <goal>antlr</goal>
>                 </goals>
>                 <conversionTimeout>10000</conversionTimeout>
>                 <grammars>java.g</grammars>
>             </configuration>
>
>
> I am getting the following error message:
>
> Failed to execute goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate
> (default-cli) on
> project root: The parameters 'grammars' for goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate are
> missing or
> invalid -> [Help 1]
>
> The documentation under reference:
> http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2 .
> Is that up
> to date with the reality ?
>
> I am using the Java 6 grammar as in the grammars page, thanks to Yang
> Jiang ,
> here at : http://openjdk.java.net/projects/compiler-
> grammar/antlrworks/Java.g
>  .
>
> $ mvn --version
> Apache Maven 3.0.2 (r1056850; 2011-01-09 06:28:10+0530)
>
>
> Let me know what I could be missing here !
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address



      

From call.vijayraj at yahoo.com  Sun Feb 20 18:21:11 2011
From: call.vijayraj at yahoo.com (Vijay Raj)
Date: Sun, 20 Feb 2011 18:21:11 -0800 (PST)
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <517881.27458.qm@web120311.mail.ne1.yahoo.com>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
	<b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
	<517881.27458.qm@web120311.mail.ne1.yahoo.com>
Message-ID: <249432.69675.qm@web120306.mail.ne1.yahoo.com>

Ok - Got past the error, the issue seems to be the null package where Java.g was 
present. 

Placing the Java.g in src/main/antlr3/com/antlr/generated  (or a similar 
non-default . named package ) helped get past the error. 



________________________________
From: Vijay Raj <call.vijayraj at yahoo.com>
To: Jim Idle <jimi at temporal-wave.com>; antlr-interest at antlr.org
Sent: Mon, February 21, 2011 7:35:57 AM
Subject: Re: [antlr-interest] Maven antlr integration ?

Thanks, Jim for the pointers. 

I cleaned my maven cache. 

Here are the errors on the console: 

[INFO] --- antlr3-maven-plugin:3.3:antlr (default) @ core ---
[INFO] ANTLR: Processing source directory ../core/src/main/antlr3
ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29
error(7):  cannot find or open file: null/Java.g
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE

[ERROR] Failed to execute goal org.antlr:antlr3-maven-plugin:3.3:antlr (default) 

on project core: ANTLR caught 1 build errors. -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e 
switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please 
read the following articles:
[ERROR] [Help 1] 
http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException

Java.g is indeed present as per the directory structure recommended in the 
wiki. 

../core$ ls src/main/antlr3/Java.g 
src/main/antlr3/Java.g

The plugin fragment appears as below:  (using v 3.3 , the latest ). 

   <plugin>
    <groupId>org.antlr</groupId>
    <artifactId>antlr3-maven-plugin</artifactId>
    <version>3.3</version>
    <executions>
        <execution>
            <goals>
                <goal>antlr</goal>
            </goals>
        </execution>
    </executions>
   </plugin>

What else could I be missing ? 




________________________________
From: Jim Idle <jimi at temporal-wave.com>
To: Vijay Raj <call.vijayraj at yahoo.com>; antlr-interest at antlr.org
Sent: Sun, February 20, 2011 9:56:44 PM
Subject: RE: [antlr-interest] Maven antlr integration ?

I don't think that you are using the correct version of the documentation
and 3.1.3-1 is the wrong version of the maven plugin anyway.

Why not create your project using the archetype 3.2 and then just overlay
your own .g file. See:

http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Mave
n

Use version 3.2 as in the article as 3.3 seems not to work and I have not
had time to look at why just yet.

And also see the docs for the plugin at:

http://www.antlr.org/antlr3-maven-plugin/index.html

I think you are following docs for the ANTLR 2 plugin or something.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vijay Raj
> Sent: Saturday, February 19, 2011 7:53 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Maven antlr integration ?
>
> For a particular task regarding parsing java 6 grammars - my maven
> configuration of using antlr looks like this:
>
>
>    <plugin>
>      <groupId>org.antlr</groupId>
>      <artifactId>antlr3-maven-plugin</artifactId>
>      <version>3.1.3-1</version>
>             <configuration>
>                 <goals>
>                     <goal>antlr</goal>
>                 </goals>
>                 <conversionTimeout>10000</conversionTimeout>
>                 <grammars>java.g</grammars>
>             </configuration>
>
>
> I am getting the following error message:
>
> Failed to execute goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate
> (default-cli) on
> project root: The parameters 'grammars' for goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate are
> missing or
> invalid -> [Help 1]
>
> The documentation under reference:
> http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2 .
> Is that up
> to date with the reality ?
>
> I am using the Java 6 grammar as in the grammars page, thanks to Yang
> Jiang ,
> here at : http://openjdk.java.net/projects/compiler-
> grammar/antlrworks/Java.g
>  .
>
> $ mvn --version
> Apache Maven 3.0.2 (r1056850; 2011-01-09 06:28:10+0530)
>
>
> Let me know what I could be missing here !
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address



      

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From jimi at temporal-wave.com  Sun Feb 20 21:31:13 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 20 Feb 2011 21:31:13 -0800
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <517881.27458.qm@web120311.mail.ne1.yahoo.com>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
	<b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
	<517881.27458.qm@web120311.mail.ne1.yahoo.com>
Message-ID: <bda6a867989a50ac7af850c9c1039731@mail.gmail.com>

As I said before, please use 3.2 not 3.3.



Jim



*From:* Vijay Raj [mailto:call.vijayraj at yahoo.com]
*Sent:* Sunday, February 20, 2011 6:06 PM
*To:* Jim Idle; antlr-interest at antlr.org
*Subject:* Re: [antlr-interest] Maven antlr integration ?



Thanks, Jim for the pointers.



I cleaned my maven cache.



Here are the errors on the console:



[INFO] --- antlr3-maven-plugin:3.3:antlr (default) @ core ---

[INFO] ANTLR: Processing source directory ../core/src/main/antlr3

ANTLR Parser Generator  Version 3.3 Nov 30, 2010 12:46:29

error(7):  cannot find or open file: null/Java.g

[INFO]
------------------------------------------------------------------------

[INFO] BUILD FAILURE



[ERROR] Failed to execute goal org.antlr:antlr3-maven-plugin:3.3:antlr
(default) on project core: ANTLR caught 1 build errors. -> [Help 1]

[ERROR]

[ERROR] To see the full stack trace of the errors, re-run Maven with the -e
switch.

[ERROR] Re-run Maven using the -X switch to enable full debug logging.

[ERROR]

[ERROR] For more information about the errors and possible solutions, please
read the following articles:

[ERROR] [Help 1]
http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException



Java.g is indeed present as per the directory structure recommended in the
wiki.



../core$ ls src/main/antlr3/Java.g

src/main/antlr3/Java.g



The plugin fragment appears as below:  (using v 3.3 , the latest ).



   <plugin>

    <groupId>org.antlr</groupId>

    <artifactId>antlr3-maven-plugin</artifactId>

    <version>3.3</version>

    <executions>

        <execution>

            <goals>

                <goal>antlr</goal>

            </goals>

        </execution>

    </executions>

   </plugin>



What else could I be missing ?




------------------------------

*From:* Jim Idle <jimi at temporal-wave.com>
*To:* Vijay Raj <call.vijayraj at yahoo.com>; antlr-interest at antlr.org
*Sent:* Sun, February 20, 2011 9:56:44 PM
*Subject:* RE: [antlr-interest] Maven antlr integration ?

I don't think that you are using the correct version of the documentation
and 3.1.3-1 is the wrong version of the maven plugin anyway.

Why not create your project using the archetype 3.2 and then just overlay
your own .g file. See:

http://www.antlr.org/wiki/display/ANTLR3/Building+ANTLR+Projects+with+Mave
n

Use version 3.2 as in the article as 3.3 seems not to work and I have not
had time to look at why just yet.

And also see the docs for the plugin at:

http://www.antlr.org/antlr3-maven-plugin/index.html

I think you are following docs for the ANTLR 2 plugin or something.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vijay Raj
> Sent: Saturday, February 19, 2011 7:53 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Maven antlr integration ?
>
> For a particular task regarding parsing java 6 grammars - my maven
> configuration of using antlr looks like this:
>
>
>    <plugin>
>      <groupId>org.antlr</groupId>
>      <artifactId>antlr3-maven-plugin</artifactId>
>      <version>3.1.3-1</version>
>            <configuration>
>                <goals>
>                    <goal>antlr</goal>
>                </goals>
>                <conversionTimeout>10000</conversionTimeout>
>                <grammars>java.g</grammars>
>            </configuration>
>
>
> I am getting the following error message:
>
> Failed to execute goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate
> (default-cli) on
> project root: The parameters 'grammars' for goal
> org.apache.maven.plugins:maven-antlr-plugin:2.0-beta-1:generate are
> missing or
> invalid -> [Help 1]
>
> The documentation under reference:
> http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2 .
> Is that up
> to date with the reality ?
>
> I am using the Java 6 grammar as in the grammars page, thanks to Yang
> Jiang ,
> here at : http://openjdk.java.net/projects/compiler-
> grammar/antlrworks/Java.g
>  .
>
> $ mvn --version
> Apache Maven 3.0.2 (r1056850; 2011-01-09 06:28:10+0530)
>
>
> Let me know what I could be missing here !
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From Ramon.Verbruggen at quintiq.com  Mon Feb 21 00:15:29 2011
From: Ramon.Verbruggen at quintiq.com (Ramon Verbruggen)
Date: Mon, 21 Feb 2011 09:15:29 +0100
Subject: [antlr-interest] left-recursive expression rule prototype
In-Reply-To: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>
References: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>
Message-ID: <4D622D310200008700005F30@mail.quintiq.nl>

>>> Terence Parr <parrt at cs.usfca.edu> wrote:
> Finally got around to supporting left-recursion in limited 
> circumstances. I started looking at it 2008:
> 
> http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression+parsing+for+ANTLR 
> 
This is great, it will make our grammar so much simpler *and* faster!!

Looking forward to this in ANTLR v4(?) !!!

Best regards,

Ramon Verbruggen




From pavlov.dmitry.n at gmail.com  Mon Feb 21 04:33:04 2011
From: pavlov.dmitry.n at gmail.com (Dmitry Pavlov)
Date: Mon, 21 Feb 2011 15:33:04 +0300
Subject: [antlr-interest] Last symbol disappered on wrong expression
Message-ID: <AANLkTik-rBog5xRHRZY-8K9dg9r1_EhZ1jE=JJoiQxwz@mail.gmail.com>

Hi, all.

I'm writing a math expressions highlighter.
It'll be used in a text editor, so on text change we need to reparse the
expression and higlight it again.
I'm performing a text parsing with AST as a target, then some tree parsers
do some additional processing.

During grammar testing i've stucked with the following problem:
if i try to parse expression: sin("
or even: sin("hello there antlr
then parser create and AST with a single an error node with the text
sin(
but if we add the ending quote sin("" or sin("hello there antlr"
then error node contains all input text: sin("hello there antlr"

This was tested in AntlrWorks with standard Java target language (in debug
mode the input parsed string does not contains qouted text) and in simple
app with ActionScript target language.

Is this a bug or feature? Is there a way to fix this problem and get all
input symbols?

Simplified grammar which can reproduce this case:

grammar EatLast;

options {
  output = AST;
}

script: exp=expression EOF!;

expression
    :    additive;

additive
    :    (a=atom->$a)
        (op=SIGN b=atom
            -> ^($op $additive $b))*;

atom
    :    constant
    |    func
    |    LEFT_PAREN expression RIGHT_PAREN -> expression
    ;

constant
    :    NUMBER | STRING;

func
    :    id=ID LEFT_PAREN functionParams? RIGHT_PAREN -> ^(ID
functionParams?)
    ;

functionParams
    :    expression ( PARAM_SEPARATOR! expression)*
    ;


/*            LIXER RULES            */
PARAM_SEPARATOR  :     ',';

//PARANTHESIS
LEFT_PAREN: '(';
RIGHT_PAREN: ')';

//ARITHMETIC OPERATIONS
SIGN: '+' | '-';

//NUMBERS
NUMBER: INT;

fragment
INT :    DIGIT+ ;

ID  :    (LETTER|'_') (LETTER|DIGIT|'_')* ;

//WHITESPACES
WS  :   ( ' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;} ;
//STRING ELEMENTS
STRING
    :  '"' ( ~('\\'|'"') )* '"'
    ;

fragment LETTER: LOWER | UPPER;
fragment LOWER: 'a'..'z';
fragment UPPER: 'A'..'Z';
fragment DIGIT: '0'..'9';


-- 
Sincerely, Pavlov Dmitry

From jschrod at acm.org  Mon Feb 21 07:14:29 2011
From: jschrod at acm.org (Joachim Schrod)
Date: Mon, 21 Feb 2011 16:14:29 +0100
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>
	<b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
Message-ID: <ijtvgm$9kq$1@dough.gmane.org>

Jim Idle wrote:

Hi Jim,
> 
> Use version 3.2 as in the article as 3.3 seems not to work and I have not
> had time to look at why just yet.

Is there a ticket where one can follow the issue with 3.3?
Or could you send a note to the email list when you got around to
look at it?

TIA,
	Joachim

-- 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Joachim Schrod				Email: jschrod at acm.org
Roedermark, Germany


From jimi at temporal-wave.com  Mon Feb 21 08:17:13 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 21 Feb 2011 08:17:13 -0800
Subject: [antlr-interest] Maven antlr integration ?
In-Reply-To: <ijtvgm$9kq$1@dough.gmane.org>
References: <721836.24033.qm@web120316.mail.ne1.yahoo.com>	<b88b9b8da11f920568573b5d17e770f3@mail.gmail.com>
	<ijtvgm$9kq$1@dough.gmane.org>
Message-ID: <54dec67b5658b6e0fa574d7efdfa72b7@mail.gmail.com>

I will notify the list when I have fixed it. For now just create using the
3.2 archetype which is exactly the same except it references 3.2 not 3.3,
then manually change the plugin version in the pom.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Joachim Schrod
> Sent: Monday, February 21, 2011 7:14 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Maven antlr integration ?
>
> Jim Idle wrote:
>
> Hi Jim,
> >
> > Use version 3.2 as in the article as 3.3 seems not to work and I have
> > not had time to look at why just yet.
>
> Is there a ticket where one can follow the issue with 3.3?
> Or could you send a note to the email list when you got around to look
> at it?
>
> TIA,
> 	Joachim
>
> --
> =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
> Joachim Schrod				Email: jschrod at acm.org
> Roedermark, Germany
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Mon Feb 21 09:18:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 21 Feb 2011 09:18:22 -0800
Subject: [antlr-interest] left-recursive expression rule prototype
In-Reply-To: <4D622D310200008700005F30@mail.quintiq.nl>
References: <4193142E-1F54-4984-91F9-7DF02B166574@cs.usfca.edu>
	<4D622D310200008700005F30@mail.quintiq.nl>
Message-ID: <F6B2A6AF-69F5-41D9-BEA9-BE1B2A86DD89@cs.usfca.edu>


On Feb 21, 2011, at 12:15 AM, Ramon Verbruggen wrote:

>>>> Terence Parr <parrt at cs.usfca.edu> wrote:
>> Finally got around to supporting left-recursion in limited 
>> circumstances. I started looking at it 2008:
>> 
>> http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression+parsing+for+ANTLR 
>> 
> This is great, it will make our grammar so much simpler *and* faster!!

hooray!  yeah, i should have done long ago.  it was "easy". ;)

> 
> Looking forward to this in ANTLR v4(?) !!!

This will be v3.4 I think.  I've had to put v4 off into nebulous future.  My priorities flipped recently.  I'm going down this path:

1. finish STv4 and doc; release
2. completely revise/gut antlr ref guide book
3. simultaneously, go nuts on bug fixing and a few big features for antlr

Background threads:
	* design new prog. language to take over world.
	* collect notes for future coding book

Ter

From parrt at antlr.org  Mon Feb 21 14:14:53 2011
From: parrt at antlr.org (Terence Parr)
Date: Mon, 21 Feb 2011 14:14:53 -0800
Subject: [antlr-interest] fix to LL(1) error set computation
Message-ID: <B1D96E51-C61B-4B56-956B-88BDCE8E171B@antlr.org>

* Fixed http://www.antlr.org/jira/browse/ANTLR-437 thanks to Vladislav Kuzkokov.
  added unit test.


From parrt at cs.usfca.edu  Mon Feb 21 14:27:18 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 21 Feb 2011 14:27:18 -0800
Subject: [antlr-interest] tree pattern matching rewrite bug ?
In-Reply-To: <AANLkTikQ2Edg6tstjLAfz-3sz=gWoqjNdKpjg=3DeEM0@mail.gmail.com>
References: <AANLkTi=B102vsYYUgwH-W8qsGyoJGLvQz7_Oxsi2hkDn@mail.gmail.com>
	<AANLkTikQ2Edg6tstjLAfz-3sz=gWoqjNdKpjg=3DeEM0@mail.gmail.com>
Message-ID: <FD16B724-D6AF-4CE0-A80F-F9C12F1E7966@cs.usfca.edu>

interesting. still issue i guess. adding your comment.

Ter

On Feb 2, 2011, at 3:03 PM, Michael Bedward wrote:

> Just a little more on the issue below, when I swapped the tree
> grammars that were provoking the  "Can't set single child to a list"
> error from pattern matching mode (filter = true) to complete grammars
> (filter = false) the tree rewrites run successfully.
> 
> I'd still be interested to hear if issue ANTLR-419 is known to be
> current problem.
> 
> cheers
> Michael
> 
> 
> On 2 February 2011 11:42, Michael Bedward <michael.bedward at gmail.com> wrote:
>> Hello all,
>> 
>> I hope it's ok to ask about ANTLR Jira issues on this list.
>> 
>> I've been using pattern matching for some simple tree rewriting tasks.
>> Most work, but for some of them I keep hitting the error "Can't set
>> single child to a list". I've spent quite a bit of time in the
>> debugger without success.
>> 
>> Google found this issue for version 3.2 which appears to be related
>> and still open (which I assume means not fixed in version 3.3)...
>> 
>> http://www.antlr.org/jira/browse/ANTLR-419
>> 
>> Before I spend more time debugging, I wonder if anyone can tell me if
>> this is indeed a current bug. If so I can probably work around it by
>> going back to rewriting using a complete grammar.
>> 
>> cheers
>> Michael
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Mon Feb 21 14:31:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 21 Feb 2011 14:31:51 -0800
Subject: [antlr-interest] FYI Duplicate Nodes Behavior
In-Reply-To: <OFC2B59791.DBCA5F48-ON0025783A.003F0416-C125783A.00418A92@amadeus.com>
References: <OFC2B59791.DBCA5F48-ON0025783A.003F0416-C125783A.00418A92@amadeus.com>
Message-ID: <A82B96B9-BCD9-477C-B507-FD1882081F5B@cs.usfca.edu>


On Feb 17, 2011, at 3:55 AM, Bastian Asam wrote:

> Hello everybody,
> I just spend almost a day to figure out a difference on how ANTLR handles 
> the duplication of nodes and thought it might be helpful to others.
> 
> What I was trying to do is rather simple:
> 
> dup : 'test =' refs -> ^('test' refs refs) ;
> refs : id(',' id)* ;
> id : ID ;
> 
> That generates with input "test = test1,test2" this tree: ^('test' id test1 test2 ^(nil test1 test2))

Is there really an "id" in there too?

> Why is there a nil node generated?

a bug i think. adding.

http://www.antlr.org/jira/browse/ANTLR-443

Ter

> 
> My solution to this is to put the refs definition in the dup definition:
> dup : 'test =' (i+=id(',' i+=id)*) -> ^('test' $i* $i*) ;       // don't 
> forget the * !!
> id : ID ;
> 
> Is not particularly beautiful, but works :)
> 
> Output is now
> ^('test' id test1 test2 test1 test2)
> 
> Hope this helps someone...
> Bastian
> 
> 
> 
> IMPORTANT  -  CONFIDENTIALITY  NOTICE  - This e-mail is intended only for 
> the use of the individual or entity shown above as addressees. It may 
> contain information which is privileged, confidential or otherwise 
> protected from disclosure under applicable laws.  If the reader of this 
> transmission is not the intended recipient, you are hereby notified that 
> any dissemination, printing, distribution, copying, disclosure or the 
> taking of any action in reliance on the contents of this information is 
> strictly prohibited.  If you have received this transmission in error, 
> please immediately notify us by reply e-mail or using the address below 
> and delete the message and any attachments from your system. 
> 
> Amadeus Data Processing GmbH 
> Gesch?ftsf?hrer: Eberhard Haag 
> Sitz der Gesellschaft: Erding 
> HR M?nchen 48 199 
> Berghamer Strasse 6 
> 85435 Erding 
> Germany
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From christofer.dutz at c-ware.de  Mon Feb 21 14:55:56 2011
From: christofer.dutz at c-ware.de (christofer.dutz at c-ware.de)
Date: Mon, 21 Feb 2011 23:55:56 +0100
Subject: [antlr-interest] Help with some first steps with Antlr
Message-ID: <66E38C42347D6446BF7FCB22C3D38780498AB1A670@ECCR06PUBLIC.exchange.local>

Hi,

I am currently trying to dig into Antlr as I find this tool very helpful. The last Time I used it, I generated something based upon a finished grammar.
This time I wanted to build my own grammar and really start understanding what's happening.

For this I decided to build a parser for some Wiki-Notation-Like text.

Here an example (without the -Start - and - End - row):

------------ Start ---------------
before
More before

And yet even more ...
[Lineup]
[Floor:Main Floor]
Test1
Test2
[Floor:Classics Floor]
Test3
Test4
Test5
Test6
[/Lineup]
after
more After
..

And even more.
------------ End ---------------

If the text contains a "Lineup" block, then this should be parsed. The content is at least one "Floor" followed by a number of Names, a new "Floor" or the closing "Lineup"
I managed my parser to parse the text if I change my grammar and the text I am trying to parse to "[Floor:]" (One Block) but I really need a name in there :(

As soon as I change my Grammar to support the Floor-Name, nothing works anymore.
Could you please help me with this? I'm not looking for someone that fixes it for me without a comment. I would really like to know why my grammar doesn't work.
I'm really stuck and I'm working on this for days now (Ok ... I admit, it's just my spare time after work ... but at least all of that).

Here comes my gammar. If I try to parse the full text, I allways get EarlyExitExceptions while parsing the  :( :

grammar CalendarEventsJava;

/*------------------------------------------------------------------
* PARSER RULES
*------------------------------------------------------------------*/

event    : (
                               (LINE_CONTENT | NEWLINE)*
                               (lineup (LINE_CONTENT | NEWLINE)*)?
               );

lineup   : (LINEUP_OPEN NEWLINE floor+ LINEUP_CLOSE);

floor      : (FLOOR_OPEN LINE_CONTENT FLOOR_CLOSE NEWLINE lineupEntry+);

lineupEntry
                : (LINE_CONTENT? NEWLINE);

artist     : LINE_CONTENT;


/*------------------------------------------------------------------
* LEXER RULES
*------------------------------------------------------------------*/


LINEUP_OPEN
                :              '[Lineup]';
LINEUP_CLOSE
                :              '[/Lineup]';
FLOOR_OPEN
                :              '[Floor:';
FLOOR_CLOSE
                :              ']';

BLANKS               :              ( ' ' | '\t' )+;
NONBREAKING
                :              ~('\r' | '\n');
NEWLINE            :              '\r'? '\n';


// the content of a line consists of at least one non-breaking character.
LINE_CONTENT
                :              NONBREAKING+ ;


I really hope you can help me, as I'm really anxious to really get started with ANTLR, cause I think it really rocks :)

Chris

From pavlov.dmitry.n at gmail.com  Tue Feb 22 01:07:03 2011
From: pavlov.dmitry.n at gmail.com (Dmitry Pavlov)
Date: Tue, 22 Feb 2011 12:07:03 +0300
Subject: [antlr-interest] Last symbol disappered on wrong expression
In-Reply-To: <AANLkTik-rBog5xRHRZY-8K9dg9r1_EhZ1jE=JJoiQxwz@mail.gmail.com>
References: <AANLkTik-rBog5xRHRZY-8K9dg9r1_EhZ1jE=JJoiQxwz@mail.gmail.com>
Message-ID: <AANLkTimb8hZEGy5-Cqi4Fqq_264N32hbib-B48z-XkcW@mail.gmail.com>

Found a great antlr wiki's article that describe exactly what i need.
http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341230
Question is closed.

2011/2/21 Dmitry Pavlov <pavlov.dmitry.n at gmail.com>

> Hi, all.
>
> I'm writing a math expressions highlighter.
> It'll be used in a text editor, so on text change we need to reparse the
> expression and higlight it again.
> I'm performing a text parsing with AST as a target, then some tree parsers
> do some additional processing.
>
> During grammar testing i've stucked with the following problem:
> if i try to parse expression: sin("
> or even: sin("hello there antlr
> then parser create and AST with a single an error node with the text
> sin(
> but if we add the ending quote sin("" or sin("hello there antlr"
> then error node contains all input text: sin("hello there antlr"
>
> This was tested in AntlrWorks with standard Java target language (in debug
> mode the input parsed string does not contains qouted text) and in simple
> app with ActionScript target language.
>
> Is this a bug or feature? Is there a way to fix this problem and get all
> input symbols?
>
> Simplified grammar which can reproduce this case:
>
> grammar EatLast;
>
> options {
>   output = AST;
> }
>
> script: exp=expression EOF!;
>
> expression
>     :    additive;
>
> additive
>     :    (a=atom->$a)
>         (op=SIGN b=atom
>             -> ^($op $additive $b))*;
>
> atom
>     :    constant
>     |    func
>     |    LEFT_PAREN expression RIGHT_PAREN -> expression
>     ;
>
> constant
>     :    NUMBER | STRING;
>
> func
>     :    id=ID LEFT_PAREN functionParams? RIGHT_PAREN -> ^(ID
> functionParams?)
>     ;
>
> functionParams
>     :    expression ( PARAM_SEPARATOR! expression)*
>     ;
>
>
> /*            LIXER RULES            */
> PARAM_SEPARATOR  :     ',';
>
> //PARANTHESIS
> LEFT_PAREN: '(';
> RIGHT_PAREN: ')';
>
> //ARITHMETIC OPERATIONS
> SIGN: '+' | '-';
>
> //NUMBERS
> NUMBER: INT;
>
> fragment
> INT :    DIGIT+ ;
>
> ID  :    (LETTER|'_') (LETTER|DIGIT|'_')* ;
>
> //WHITESPACES
> WS  :   ( ' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;} ;
> //STRING ELEMENTS
> STRING
>     :  '"' ( ~('\\'|'"') )* '"'
>     ;
>
> fragment LETTER: LOWER | UPPER;
> fragment LOWER: 'a'..'z';
> fragment UPPER: 'A'..'Z';
> fragment DIGIT: '0'..'9';
>
>
> --
> Sincerely, Pavlov Dmitry
>



-- 
Sincerely, Pavlov Dmitry

From alex at apption.com  Tue Feb 22 07:21:46 2011
From: alex at apption.com (Alex Lujan)
Date: Tue, 22 Feb 2011 10:21:46 -0500
Subject: [antlr-interest] Rule optimization - inline
Message-ID: <AANLkTim0SNV2csj+SxWwC2N6NCiJ3XrrFYCR6C0C=GiY@mail.gmail.com>

Hi All,

I'm having a problem with what I believe is an optimization within the ANTLR
code generation.

Consider the following sample grammar:

grammar CharSelectionTest;

@header {
import org.apache.commons.lang.StringUtils;
}

type             :    (type_sell | type_itsp) data ;

type_sell         :    character['s'];

type_itsp         :    character['i'];

data            :    BYTE_VALUE*;

character[char character_to_match]
                :    {input.LT(1).getText().charAt(0) ==
character_to_match}? BYTE_VALUE;

BYTE_VALUE        :    '\u0000'..'\uFFFE';


When ANTLR generates the Parser java code, the type() method seems to be
replacing the call to the character rule with an inline equivalent:

public final void type() throws RecognitionException {
        try {
            {
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==BYTE_VALUE) ) {
                int LA1_1 = input.LA(2);

                // Compile error: character_to_match is not defined!
                if ( ((input.LT(1).getText().charAt(0) ==
character_to_match)) ) {
                    alt1=1;
                }
                else if ( ((input.LT(1).getText().charAt(0) ==
character_to_match)) ) {
                    alt1=2;
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 1, 1, input);

                    throw nvae;
                }
            }
            ...
    }

Note that the variable character_to_match is not defined, since it's
supposed to be a parameter of the character rule.

Is there anything wrong with the rule definition in this simple grammar?

Is this a known issue?

Any workarounds / solutions to this problem?

Thanks very much for your help.

-- 
Alejandro Lujan

From jimi at temporal-wave.com  Tue Feb 22 08:19:57 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 22 Feb 2011 08:19:57 -0800
Subject: [antlr-interest] Rule optimization - inline
In-Reply-To: <AANLkTim0SNV2csj+SxWwC2N6NCiJ3XrrFYCR6C0C=GiY@mail.gmail.com>
References: <AANLkTim0SNV2csj+SxWwC2N6NCiJ3XrrFYCR6C0C=GiY@mail.gmail.com>
Message-ID: <bd846a0a2a8d480e072d55da8a677bbf@mail.gmail.com>

Use the mailing list search at antlr.markmail.org for examples of local
variable out of scope in predicates. Generally you cannot use local
parameters as elements of your predicate because the code generator
generates the predicate as a separate method and so the local parameter to
your rule is out of scope. You need to use a scope variable to do that.

That said, your design is the best one in that you are trying to enforce
semantics/context within your parser grammar rules. This will result in a
parser that is error prone and is also unable to give out good error
messages to your users. The better way to do this is to accept any
BYTE_VALUE and merge type_sell and type_itsp into one left factored rule.
Then you can tell this rule what to check for as a rule parameter and
compare what it finds. If what it finds is not what is expected you can
now issue a semantic error such as "Must have a type selector here" or
something. Ideally you would create a tree and then walk the tree to check
semantics and so on.

Hope that helps,

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alex Lujan
> Sent: Tuesday, February 22, 2011 7:22 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Rule optimization - inline
>
> Hi All,
>
> I'm having a problem with what I believe is an optimization within the
> ANTLR code generation.
>
> Consider the following sample grammar:
>
> grammar CharSelectionTest;
>
> @header {
> import org.apache.commons.lang.StringUtils;
> }
>
> type             :    (type_sell | type_itsp) data ;
>
> type_sell         :    character['s'];
>
> type_itsp         :    character['i'];
>
> data            :    BYTE_VALUE*;
>
> character[char character_to_match]
>                 :    {input.LT(1).getText().charAt(0) ==
> character_to_match}? BYTE_VALUE;
>
> BYTE_VALUE        :    '\u0000'..'\uFFFE';
>
>
> When ANTLR generates the Parser java code, the type() method seems to
> be replacing the call to the character rule with an inline equivalent:
>
> public final void type() throws RecognitionException {
>         try {
>             {
>             int alt1=2;
>             int LA1_0 = input.LA(1);
>
>             if ( (LA1_0==BYTE_VALUE) ) {
>                 int LA1_1 = input.LA(2);
>
>                 // Compile error: character_to_match is not defined!
>                 if ( ((input.LT(1).getText().charAt(0) ==
> character_to_match)) ) {
>                     alt1=1;
>                 }
>                 else if ( ((input.LT(1).getText().charAt(0) ==
> character_to_match)) ) {
>                     alt1=2;
>                 }
>                 else {
>                     NoViableAltException nvae =
>                         new NoViableAltException("", 1, 1, input);
>
>                     throw nvae;
>                 }
>             }
>             ...
>     }
>
> Note that the variable character_to_match is not defined, since it's
> supposed to be a parameter of the character rule.
>
> Is there anything wrong with the rule definition in this simple
> grammar?
>
> Is this a known issue?
>
> Any workarounds / solutions to this problem?
>
> Thanks very much for your help.
>
> --
> Alejandro Lujan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From alex at apption.com  Tue Feb 22 08:28:35 2011
From: alex at apption.com (Alex Lujan)
Date: Tue, 22 Feb 2011 11:28:35 -0500
Subject: [antlr-interest] Rule optimization - inline
In-Reply-To: <bd846a0a2a8d480e072d55da8a677bbf@mail.gmail.com>
References: <AANLkTim0SNV2csj+SxWwC2N6NCiJ3XrrFYCR6C0C=GiY@mail.gmail.com>
	<bd846a0a2a8d480e072d55da8a677bbf@mail.gmail.com>
Message-ID: <AANLkTiks9gB50yiZhr5AeOn=7QkB73h_XFQRFnmAdiwz@mail.gmail.com>

Thanks Jim, I'll check that.

On Tue, Feb 22, 2011 at 11:19 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Use the mailing list search at antlr.markmail.org for examples of local
> variable out of scope in predicates. Generally you cannot use local
> parameters as elements of your predicate because the code generator
> generates the predicate as a separate method and so the local parameter to
> your rule is out of scope. You need to use a scope variable to do that.
>
> That said, your design is the best one in that you are trying to enforce
> semantics/context within your parser grammar rules. This will result in a
> parser that is error prone and is also unable to give out good error
> messages to your users. The better way to do this is to accept any
> BYTE_VALUE and merge type_sell and type_itsp into one left factored rule.
> Then you can tell this rule what to check for as a rule parameter and
> compare what it finds. If what it finds is not what is expected you can
> now issue a semantic error such as "Must have a type selector here" or
> something. Ideally you would create a tree and then walk the tree to check
> semantics and so on.
>
> Hope that helps,
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Alex Lujan
> > Sent: Tuesday, February 22, 2011 7:22 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Rule optimization - inline
> >
> > Hi All,
> >
> > I'm having a problem with what I believe is an optimization within the
> > ANTLR code generation.
> >
> > Consider the following sample grammar:
> >
> > grammar CharSelectionTest;
> >
> > @header {
> > import org.apache.commons.lang.StringUtils;
> > }
> >
> > type             :    (type_sell | type_itsp) data ;
> >
> > type_sell         :    character['s'];
> >
> > type_itsp         :    character['i'];
> >
> > data            :    BYTE_VALUE*;
> >
> > character[char character_to_match]
> >                 :    {input.LT(1).getText().charAt(0) ==
> > character_to_match}? BYTE_VALUE;
> >
> > BYTE_VALUE        :    '\u0000'..'\uFFFE';
> >
> >
> > When ANTLR generates the Parser java code, the type() method seems to
> > be replacing the call to the character rule with an inline equivalent:
> >
> > public final void type() throws RecognitionException {
> >         try {
> >             {
> >             int alt1=2;
> >             int LA1_0 = input.LA(1);
> >
> >             if ( (LA1_0==BYTE_VALUE) ) {
> >                 int LA1_1 = input.LA(2);
> >
> >                 // Compile error: character_to_match is not defined!
> >                 if ( ((input.LT(1).getText().charAt(0) ==
> > character_to_match)) ) {
> >                     alt1=1;
> >                 }
> >                 else if ( ((input.LT(1).getText().charAt(0) ==
> > character_to_match)) ) {
> >                     alt1=2;
> >                 }
> >                 else {
> >                     NoViableAltException nvae =
> >                         new NoViableAltException("", 1, 1, input);
> >
> >                     throw nvae;
> >                 }
> >             }
> >             ...
> >     }
> >
> > Note that the variable character_to_match is not defined, since it's
> > supposed to be a parameter of the character rule.
> >
> > Is there anything wrong with the rule definition in this simple
> > grammar?
> >
> > Is this a known issue?
> >
> > Any workarounds / solutions to this problem?
> >
> > Thanks very much for your help.
> >
> > --
> > Alejandro Lujan
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Alejandro Lujan
Apption Software
(613) 725 62 68 x625

From jimi at temporal-wave.com  Tue Feb 22 09:33:55 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 22 Feb 2011 09:33:55 -0800
Subject: [antlr-interest] Rule optimization - inline
In-Reply-To: <AANLkTiks9gB50yiZhr5AeOn=7QkB73h_XFQRFnmAdiwz@mail.gmail.com>
References: <AANLkTim0SNV2csj+SxWwC2N6NCiJ3XrrFYCR6C0C=GiY@mail.gmail.com>
	<bd846a0a2a8d480e072d55da8a677bbf@mail.gmail.com>
	<AANLkTiks9gB50yiZhr5AeOn=7QkB73h_XFQRFnmAdiwz@mail.gmail.com>
Message-ID: <ef8db220d6f89f48549ff3e0dc3a15a8@mail.gmail.com>

I just re-read my answer and there was a typo it should have said "your
design is NOT the best one..." - hope that was not confusing.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alex Lujan
> Sent: Tuesday, February 22, 2011 8:29 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Rule optimization - inline
>
> Thanks Jim, I'll check that.
>
> On Tue, Feb 22, 2011 at 11:19 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> > Use the mailing list search at antlr.markmail.org for examples of
> > local variable out of scope in predicates. Generally you cannot use
> > local parameters as elements of your predicate because the code
> > generator generates the predicate as a separate method and so the
> > local parameter to your rule is out of scope. You need to use a scope
> variable to do that.
> >
> > That said, your design is the best one in that you are trying to
> > enforce semantics/context within your parser grammar rules. This will
> > result in a parser that is error prone and is also unable to give out
> > good error messages to your users. The better way to do this is to
> > accept any BYTE_VALUE and merge type_sell and type_itsp into one left
> factored rule.
> > Then you can tell this rule what to check for as a rule parameter and
> > compare what it finds. If what it finds is not what is expected you
> > can now issue a semantic error such as "Must have a type selector
> > here" or something. Ideally you would create a tree and then walk the
> > tree to check semantics and so on.
> >
> > Hope that helps,
> >
> > Jim
> >
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Alex Lujan
> > > Sent: Tuesday, February 22, 2011 7:22 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Rule optimization - inline
> > >
> > > Hi All,
> > >
> > > I'm having a problem with what I believe is an optimization within
> > > the ANTLR code generation.
> > >
> > > Consider the following sample grammar:
> > >
> > > grammar CharSelectionTest;
> > >
> > > @header {
> > > import org.apache.commons.lang.StringUtils;
> > > }
> > >
> > > type             :    (type_sell | type_itsp) data ;
> > >
> > > type_sell         :    character['s'];
> > >
> > > type_itsp         :    character['i'];
> > >
> > > data            :    BYTE_VALUE*;
> > >
> > > character[char character_to_match]
> > >                 :    {input.LT(1).getText().charAt(0) ==
> > > character_to_match}? BYTE_VALUE;
> > >
> > > BYTE_VALUE        :    '\u0000'..'\uFFFE';
> > >
> > >
> > > When ANTLR generates the Parser java code, the type() method seems
> > > to be replacing the call to the character rule with an inline
> equivalent:
> > >
> > > public final void type() throws RecognitionException {
> > >         try {
> > >             {
> > >             int alt1=2;
> > >             int LA1_0 = input.LA(1);
> > >
> > >             if ( (LA1_0==BYTE_VALUE) ) {
> > >                 int LA1_1 = input.LA(2);
> > >
> > >                 // Compile error: character_to_match is not
> defined!
> > >                 if ( ((input.LT(1).getText().charAt(0) ==
> > > character_to_match)) ) {
> > >                     alt1=1;
> > >                 }
> > >                 else if ( ((input.LT(1).getText().charAt(0) ==
> > > character_to_match)) ) {
> > >                     alt1=2;
> > >                 }
> > >                 else {
> > >                     NoViableAltException nvae =
> > >                         new NoViableAltException("", 1, 1, input);
> > >
> > >                     throw nvae;
> > >                 }
> > >             }
> > >             ...
> > >     }
> > >
> > > Note that the variable character_to_match is not defined, since
> it's
> > > supposed to be a parameter of the character rule.
> > >
> > > Is there anything wrong with the rule definition in this simple
> > > grammar?
> > >
> > > Is this a known issue?
> > >
> > > Any workarounds / solutions to this problem?
> > >
> > > Thanks very much for your help.
> > >
> > > --
> > > Alejandro Lujan
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
>
> --
> Alejandro Lujan
> Apption Software
> (613) 725 62 68 x625
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From alex at apption.com  Tue Feb 22 10:16:48 2011
From: alex at apption.com (Alex Lujan)
Date: Tue, 22 Feb 2011 13:16:48 -0500
Subject: [antlr-interest] Rule optimization - inline
In-Reply-To: <ef8db220d6f89f48549ff3e0dc3a15a8@mail.gmail.com>
References: <AANLkTim0SNV2csj+SxWwC2N6NCiJ3XrrFYCR6C0C=GiY@mail.gmail.com>
	<bd846a0a2a8d480e072d55da8a677bbf@mail.gmail.com>
	<AANLkTiks9gB50yiZhr5AeOn=7QkB73h_XFQRFnmAdiwz@mail.gmail.com>
	<ef8db220d6f89f48549ff3e0dc3a15a8@mail.gmail.com>
Message-ID: <AANLkTimo3Gsw6CyZ1OQcOukC57x1RMn6yOUfPfWuYrHb@mail.gmail.com>

Yes, I got that from the rest of the context :)

On Tue, Feb 22, 2011 at 12:33 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> I just re-read my answer and there was a typo it should have said "your
> design is NOT the best one..." - hope that was not confusing.
>



-- 
Alejandro Lujan
Apption Software
(613) 725 62 68 x625

From death.iron.bug at gmail.com  Tue Feb 22 11:02:20 2011
From: death.iron.bug at gmail.com (Iron Bug)
Date: Wed, 23 Feb 2011 00:02:20 +0500
Subject: [antlr-interest] Using global and dynamic scopes together - is it
	possible?
Message-ID: <1298401340.5296.24.camel@IronBug>

Greetings.
I've been using ANTLR with C interface for a long time and it was ok,
but today I bumped into a problem:
I use global scope for certain rules and I sometimes use dynamic scopes
for minor local variables. And in one rule it happened the different
scopes have met each other. 
Something like:

rulename
scope GlobalOne;		
scope
{
	bool localFlag;
}
@init
{
	$GlobalOne::globalVariable = ....;
	...
	$rulename::localFlag = true;
}

And ANTLR does not eat that. Well, I'm not sure it's possible even.
Maybe I should use some different syntax? I tried some variants that
seemed reasonable to me, but failed. 
I don't know whether it is a problem of ANTLR itself or of the C
interface realization.
Can I use both variants of scopes in one rule?

I use ANTLR 3.3 with the latest shapshot version of the C interface
(libantlr3c-3.3-SNAPSHOT).

Just in case, the errors generated are like:

unexpected token: bool localFlag;

syntax error: expecting SEMI, found '@'

unknown dynamic scope: rulename


From jimi at temporal-wave.com  Tue Feb 22 11:15:00 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 22 Feb 2011 11:15:00 -0800
Subject: [antlr-interest] Using global and dynamic scopes together - is
	it possible?
In-Reply-To: <1298401340.5296.24.camel@IronBug>
References: <1298401340.5296.24.camel@IronBug>
Message-ID: <eaf11e4d065416c693fa86b06d888457@mail.gmail.com>

grammar t;

scope GlobalOne {
 int c;
}


rulename

scope
{
	bool localFlag;
}
scope GlobalOne;
@init
{
	fred = 1;
}
		
	: C ;
	

C : 'C';

Globals come after locals but before @init.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Iron Bug
> Sent: Tuesday, February 22, 2011 11:02 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Using global and dynamic scopes together - is
> it possible?
>
> Greetings.
> I've been using ANTLR with C interface for a long time and it was ok,
> but today I bumped into a problem:
> I use global scope for certain rules and I sometimes use dynamic scopes
> for minor local variables. And in one rule it happened the different
> scopes have met each other.
> Something like:
>
> rulename
> scope GlobalOne;
> scope
> {
> 	bool localFlag;
> }
> @init
> {
> 	$GlobalOne::globalVariable = ....;
> 	...
> 	$rulename::localFlag = true;
> }
>
> And ANTLR does not eat that. Well, I'm not sure it's possible even.
> Maybe I should use some different syntax? I tried some variants that
> seemed reasonable to me, but failed.
> I don't know whether it is a problem of ANTLR itself or of the C
> interface realization.
> Can I use both variants of scopes in one rule?
>
> I use ANTLR 3.3 with the latest shapshot version of the C interface
> (libantlr3c-3.3-SNAPSHOT).
>
> Just in case, the errors generated are like:
>
> unexpected token: bool localFlag;
>
> syntax error: expecting SEMI, found '@'
>
> unknown dynamic scope: rulename
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ed.tirelli at gmail.com  Tue Feb 22 12:48:19 2011
From: ed.tirelli at gmail.com (Edson Tirelli)
Date: Tue, 22 Feb 2011 15:48:19 -0500
Subject: [antlr-interest] Rewrite rules accessing subrule's results?
Message-ID: <AANLkTimBY0w9mfomn1csnsN87X2bmdw0BaRvuK6rE2bL@mail.gmail.com>

   Hi all,

   Imagine I have an expression grammar that has to deal with the following
expression:

age > 10 && < 20

   When finding the above input, the grammar has to rewrite that into:

age > 10 && age < 20

   My expression grammar is a typical expression grammar otherwise, but for
simplification lets imagine it is like this:

relationalExpression : operand (operator^ operand)*

operand : // will match the "age" token above;

operator: // will match operators, like the > and < above;

   And then I have my "and" rule where I need to use the rewrite:

andRule : relationalExpression ( '&&' operator operand )*;

   I tried the following:

andRule :
scope { CommonTree se1 = null; }
    ( relationalExpression -> relationalExpression )
    ( ( '&&' op=operator se2=operand ) -> ^('&&' $andRule ^( $op $se1 $se2 )
)*;

   And then setting se1 in the relational expression, but the rewrite rule
does not allow me to reference $se1. I am probably over-thinking this, but
any help would be greatly appreciated. BTW, the "operand" is actually
several calls down in the real grammar... above is just a simplified
snippet, but the problem is the same.

   Thanks,
     Edson


-- 
  Edson Tirelli
  JBoss Drools Core Development
  JBoss by Red Hat @ www.jboss.com

From parrt at cs.usfca.edu  Tue Feb 22 13:06:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 22 Feb 2011 13:06:54 -0800
Subject: [antlr-interest] Rewrite rules accessing subrule's results?
In-Reply-To: <AANLkTimBY0w9mfomn1csnsN87X2bmdw0BaRvuK6rE2bL@mail.gmail.com>
References: <AANLkTimBY0w9mfomn1csnsN87X2bmdw0BaRvuK6rE2bL@mail.gmail.com>
Message-ID: <5B3B4210-A15D-4AB5-B55E-B95F013B6721@cs.usfca.edu>

Yo bro!  try {$andRule::se1} in the rewrite itself instead of just $se1
Ter
On Feb 22, 2011, at 12:48 PM, Edson Tirelli wrote:

>   Hi all,
> 
>   Imagine I have an expression grammar that has to deal with the following
> expression:
> 
> age > 10 && < 20
> 
>   When finding the above input, the grammar has to rewrite that into:
> 
> age > 10 && age < 20
> 
>   My expression grammar is a typical expression grammar otherwise, but for
> simplification lets imagine it is like this:
> 
> relationalExpression : operand (operator^ operand)*
> 
> operand : // will match the "age" token above;
> 
> operator: // will match operators, like the > and < above;
> 
>   And then I have my "and" rule where I need to use the rewrite:
> 
> andRule : relationalExpression ( '&&' operator operand )*;
> 
>   I tried the following:
> 
> andRule :
> scope { CommonTree se1 = null; }
>    ( relationalExpression -> relationalExpression )
>    ( ( '&&' op=operator se2=operand ) -> ^('&&' $andRule ^( $op $se1 $se2 )
> )*;
> 
>   And then setting se1 in the relational expression, but the rewrite rule
> does not allow me to reference $se1. I am probably over-thinking this, but
> any help would be greatly appreciated. BTW, the "operand" is actually
> several calls down in the real grammar... above is just a simplified
> snippet, but the problem is the same.
> 
>   Thanks,
>     Edson
> 
> 
> -- 
>  Edson Tirelli
>  JBoss Drools Core Development
>  JBoss by Red Hat @ www.jboss.com
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ed.tirelli at gmail.com  Tue Feb 22 13:18:58 2011
From: ed.tirelli at gmail.com (Edson Tirelli)
Date: Tue, 22 Feb 2011 16:18:58 -0500
Subject: [antlr-interest] Rewrite rules accessing subrule's results?
In-Reply-To: <5B3B4210-A15D-4AB5-B55E-B95F013B6721@cs.usfca.edu>
References: <AANLkTimBY0w9mfomn1csnsN87X2bmdw0BaRvuK6rE2bL@mail.gmail.com>
	<5B3B4210-A15D-4AB5-B55E-B95F013B6721@cs.usfca.edu>
Message-ID: <AANLkTi=jDThNfqhc41A-LVYBti6YDVGMi15aRxBEg94u@mail.gmail.com>

   Cool, it works, thanks!

   I don't remember using this {} syntax in rewrite rules before... will
have to re-read your books looking for it.

   Edson

2011/2/22 Terence Parr <parrt at cs.usfca.edu>

> Yo bro!  try {$andRule::se1} in the rewrite itself instead of just $se1
> Ter
> On Feb 22, 2011, at 12:48 PM, Edson Tirelli wrote:
>
> >   Hi all,
> >
> >   Imagine I have an expression grammar that has to deal with the
> following
> > expression:
> >
> > age > 10 && < 20
> >
> >   When finding the above input, the grammar has to rewrite that into:
> >
> > age > 10 && age < 20
> >
> >   My expression grammar is a typical expression grammar otherwise, but
> for
> > simplification lets imagine it is like this:
> >
> > relationalExpression : operand (operator^ operand)*
> >
> > operand : // will match the "age" token above;
> >
> > operator: // will match operators, like the > and < above;
> >
> >   And then I have my "and" rule where I need to use the rewrite:
> >
> > andRule : relationalExpression ( '&&' operator operand )*;
> >
> >   I tried the following:
> >
> > andRule :
> > scope { CommonTree se1 = null; }
> >    ( relationalExpression -> relationalExpression )
> >    ( ( '&&' op=operator se2=operand ) -> ^('&&' $andRule ^( $op $se1 $se2
> )
> > )*;
> >
> >   And then setting se1 in the relational expression, but the rewrite rule
> > does not allow me to reference $se1. I am probably over-thinking this,
> but
> > any help would be greatly appreciated. BTW, the "operand" is actually
> > several calls down in the real grammar... above is just a simplified
> > snippet, but the problem is the same.
> >
> >   Thanks,
> >     Edson
> >
> >
> > --
> >  Edson Tirelli
> >  JBoss Drools Core Development
> >  JBoss by Red Hat @ www.jboss.com
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
  Edson Tirelli
  JBoss Drools Core Development
  JBoss by Red Hat @ www.jboss.com

From parrt at cs.usfca.edu  Tue Feb 22 13:26:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 22 Feb 2011 13:26:16 -0800
Subject: [antlr-interest] Rewrite rules accessing subrule's results?
In-Reply-To: <AANLkTi=jDThNfqhc41A-LVYBti6YDVGMi15aRxBEg94u@mail.gmail.com>
References: <AANLkTimBY0w9mfomn1csnsN87X2bmdw0BaRvuK6rE2bL@mail.gmail.com>
	<5B3B4210-A15D-4AB5-B55E-B95F013B6721@cs.usfca.edu>
	<AANLkTi=jDThNfqhc41A-LVYBti6YDVGMi15aRxBEg94u@mail.gmail.com>
Message-ID: <3579A5C1-15DB-4A33-9217-B5361FDF0E9E@cs.usfca.edu>

yup it's in there.
Ter


From eschew at gmail.com  Tue Feb 22 15:59:55 2011
From: eschew at gmail.com (Ben Karel)
Date: Tue, 22 Feb 2011 18:59:55 -0500
Subject: [antlr-interest] Bug in ANTLRWorks interpreter with repeated
	alternations
Message-ID: <AANLkTikRiNp_KX0sFc7MF7tvP4Ha8hCiRjqhD_prYYpM@mail.gmail.com>

Hi all,

Here's a small example for which the interpreter in ANTLRWorks 1.4.2
incorrectly gives MismatchedTokenExceptions:

grammar test;

sa : a EOF;
sb : b EOF;
sc : c EOF;

p : '('   ')';

x :  p | '^' ;

a : (p | '^')*; // does not match ^  does match ()
b : ('^' | p)*; // does match ^    no match for ()
c :     x    *; // does match ^      does match ()

This bug also applies if the p rule is inlined into the others, but only if
p is a two-token rule. If p matches a single token, then the bug goes away
if p is inlined.

Cheers from a happy ANTLR user,
-- Ben

From antlr at xrad.org  Wed Feb 23 11:28:54 2011
From: antlr at xrad.org (antlr at xrad.org)
Date: Wed, 23 Feb 2011 19:28:54 +0000
Subject: [antlr-interest] Status of gUnit?
Message-ID: <E1PsKOM-0002Nf-Nm@mouse.home.xrad.org>


Hi there,

I'm wondering what the status of gUnit is these days?  The SimpleC
example on the introductory web page fails when run against
examples-v3/java/LL-star/SimpleC.g, and various experiments of mine
don't seem to come out as expected either.

  http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

.. as is, this fails because 

  "int x;" -> OK

doesn't appear to be valid in the current grammar (I'm using
antlr-3.3-complete.jar) --- the "->" appears to be the problem, but if I
remove it then I get unexpected failures --- on the above test, for
example, all four of the OKs actually FAIL, even though the web page
suggests that three of them should pass:

  -----------------------------------------------------------------------
  executing testsuite for grammar:SimpleC with 11 tests
  -----------------------------------------------------------------------
  6 failures found:
  test2 (variable, line7) - 
  expected: OK
  actual: FAIL

  test3 (functionHeader, line11) - 
  expected: int
  actual: Invalid input

  test4 (program, line15) - 
  expected: OK
  actual: FAIL

  test5 (program, line20) - 
  expected: OK
  actual: FAIL

  test6 (program, line22) - 
  expected: 
  actual: Invalid input

  test8 (ID, line28) - 
  expected: OK
  actual: extra text found, '@999'

  Tests run: 11, Failures: 6

I get the same experience in my own code.  This grammar:

  grammar Simple;
  input : 'yes' ;

when run with this test:

  gunit Simple;
  input:
  "yes" OK
  "x" FAIL

fails as follows:

  -----------------------------------------------------------------------
  executing testsuite for grammar:Simple with 2 tests
  -----------------------------------------------------------------------
  1 failures found:
  test1 (input, line3) - 
  expected: OK
  actual: FAIL

  Tests run: 2, Failures: 1

Finally, the thing I would really like to do is to test my rewriting
grammar translator.  This doesn't work either --- there seems to be a
fundamental problem with rewriting grammars in gUnit's internals:

  grammar Simple;
  options { output=template; rewrite=true; }
  input : 'yes' -> template() "no" ;

tested with this:

  gunit Simple;
  input:
  "yes" -> "no"

results in this:

  -----------------------------------------------------------------------
  executing testsuite for grammar:Simple with 1 tests
  -----------------------------------------------------------------------
  1 failures found:
  test1 (input, line3) - 
  expected: no
  actual: java.lang.ClassCastException: org.antlr.runtime.CommonTokenStream can
not be cast to org.antlr.runtime.TokenRewriteStream

  Tests run: 1, Failures: 1

... any suggestions?  I tried rebuilding gUnit after editing the
offending CommonTokenStream declarations in gUnitExecutor to
TokenRewriteStreams --- just to see if it helped --- and it does make
things work again, at least with this trivial example.  Not so clear
with more complex stuff though.  Something similar to this seemed to be
reported a few years back (without official response), so I'm wondering
whether gUnit's no longer actively maintained?

Conrad

From parrt at cs.usfca.edu  Wed Feb 23 13:40:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 23 Feb 2011 13:40:53 -0800
Subject: [antlr-interest] more on left-recursive rules
Message-ID: <4F6411A4-ADD2-49AD-A081-DBBFA6F93F6F@cs.usfca.edu>

Got these examples into unit tests. :) feeling good.
Ter

// simple, no AST
a : a ID
  | ID  ;

-------------

declarator
        : declarator '['^ e ']'!
        | declarator '['^ ']'!
        | declarator '('^ ')'!
        | '*'^ declarator
        | '('! declarator ')'!
        | ID
        ;


declarator
        : declarator '[' e ']' -> ^('[' declarator e)
        | declarator '[' ']' -> ^('[' declarator)
        | declarator '(' ')' -> ^('(' declarator)
        | '*' declarator -> ^('*' declarator) 
        | '(' declarator ')' -> declarator
        | ID -> ID
        ;

		String[] tests = {
			"a",		"a",
			"*a",		"(* a)",
			"**a",		"(* (* a))",
			"a[3]",		"([ a 3)",
			"b[]",		"([ b)",
			"(a)",		"a",
			"a[]()",	"(( ([ a))",
			"a[][]",	"([ ([ a))",
			"*a[]",		"(* ([ a))",
			"(*a)[]",	"([ (* a))",
		};

---------------

e : e '.'^ ID
  | e '.'^ 'this'
  | '-'^ e
  | e '*'^ e
  | e ('+'^|'-'^) e
  | INT
  | ID
  ;

		String[] tests = {
			"a",		"a",
			"1",		"1",
			"a+1",		"(+ a 1)",
			"a*1",		"(* a 1)",
			"a.b",		"(. a b)",
			"a.this",	"(. a this)",
			"a+b*c",	"(+ a (* b c))",
			"a.b+1",	"(+ (. a b) 1)",
			"-a",		"(- a)",
			"-a+b",		"(+ (- a) b)",
			"-a.b",		"(- (. a b))",
		};



From Alan.Rooks at onsemi.com  Wed Feb 23 14:19:57 2011
From: Alan.Rooks at onsemi.com (Alan Rooks)
Date: Wed, 23 Feb 2011 17:19:57 -0500
Subject: [antlr-interest] more on left-recursive rules
In-Reply-To: <4F6411A4-ADD2-49AD-A081-DBBFA6F93F6F@cs.usfca.edu>
References: <4F6411A4-ADD2-49AD-A081-DBBFA6F93F6F@cs.usfca.edu>
Message-ID: <4D65880D.408@onsemi.com>



Terence Parr wrote:
> Got these examples into unit tests. :) feeling good.
> Ter
> 
> // simple, no AST
> a : a ID
>   | ID  ;
> 
> -------------
> 
> declarator
>         : declarator '['^ e ']'!
>         | declarator '['^ ']'!
>         | declarator '('^ ')'!
>         | '*'^ declarator
>         | '('! declarator ')'!
>         | ID
>         ;
> 
> 
> declarator
>         : declarator '[' e ']' -> ^('[' declarator e)
>         | declarator '[' ']' -> ^('[' declarator)
>         | declarator '(' ')' -> ^('(' declarator)
>         | '*' declarator -> ^('*' declarator) 
>         | '(' declarator ')' -> declarator
>         | ID -> ID
>         ;
> 
> 		String[] tests = {
> 			"a",		"a",
> 			"*a",		"(* a)",
> 			"**a",		"(* (* a))",
> 			"a[3]",		"([ a 3)",
> 			"b[]",		"([ b)",
> 			"(a)",		"a",
> 			"a[]()",	"(( ([ a))",
> 			"a[][]",	"([ ([ a))",
> 			"*a[]",		"(* ([ a))",
> 			"(*a)[]",	"([ (* a))",
> 		};
> 
> ---------------
> 
> e : e '.'^ ID
>   | e '.'^ 'this'
>   | '-'^ e
>   | e '*'^ e
>   | e ('+'^|'-'^) e
>   | INT
>   | ID
>   ;
> 
> 		String[] tests = {
> 			"a",		"a",
> 			"1",		"1",
> 			"a+1",		"(+ a 1)",
> 			"a*1",		"(* a 1)",
> 			"a.b",		"(. a b)",
> 			"a.this",	"(. a this)",
> 			"a+b*c",	"(+ a (* b c))",
> 			"a.b+1",	"(+ (. a b) 1)",
> 			"-a",		"(- a)",
> 			"-a+b",		"(+ (- a) b)",
> 			"-a.b",		"(- (. a b))",
> 		};

What do you get for "a-b+c"?

I hope it's "(+ (- a b) c)" and not "(- a (+ b c)".

(The former being left associative and the latter being right.  Most people 
would expect a-b+c to be evaluated left, as in (a-b)+c.  Right?  :-)

Alan
--
Alan Rooks
Software Tools Development
ON Semiconductor

From parrt at cs.usfca.edu  Wed Feb 23 16:05:10 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 23 Feb 2011 16:05:10 -0800
Subject: [antlr-interest] more on left-recursive rules
In-Reply-To: <4D65880D.408@onsemi.com>
References: <4F6411A4-ADD2-49AD-A081-DBBFA6F93F6F@cs.usfca.edu>
	<4D65880D.408@onsemi.com>
Message-ID: <699091D3-6491-48BF-B211-1CF6791522E6@cs.usfca.edu>


On Feb 23, 2011, at 2:19 PM, Alan Rooks wrote:
> What do you get for "a-b+c"?
> 
> I hope it's "(+ (- a b) c)" and not "(- a (+ b c)".

Yep. added test case:

			"a-b+c",	"(+ (- a b) c)",

i'm adding right associativity now.

Ter

From parrt at cs.usfca.edu  Wed Feb 23 16:37:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 23 Feb 2011 16:37:28 -0800
Subject: [antlr-interest] ast rewrites in left-recursive rules
Message-ID: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>

So I have it working with rewrite rules now:

e : e '.' ID 			-> ^('.' e ID)
  | e '.' 'this' 		-> ^('.' e 'this')
  | '-' e 			-> ^('-' e)
  | e '*' b=e 			-> ^('*' e $b)
  | e (op='+'|op='-') b=e	-> ^($op e $b)
  | INT 			-> INT
  | ID 				-> ID
  ;

But take a look at the multiplication rule: it needs a label on the second e. plain e is ambiguous. I decided that plain e references the left recursive version; since it will disappear during the transformation, putting a label on that one won't work. we have to put a label on the second reference as you see above. this is not optimal. can anyone think of a better way to differentiate between the left and right e references in a single alternative? [Note that e refers to the entire tree created so far.]

Ter

From sharwell at pixelminegames.com  Wed Feb 23 17:07:21 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 23 Feb 2011 19:07:21 -0600
Subject: [antlr-interest] ast rewrites in left-recursive rules
In-Reply-To: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
References: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
Message-ID: <03bd01cbd3bf$315b6a80$94123f80$@pixelminegames.com>

(Begin objective section)

Inside the following rewrite:

e : e '*' b=e -> ^(...);

e refers to the first e (the one right after the ':' in the rule)
$e refers to the enclosing rule (the tree created so far)
$b refers to the second e (the one labeled 'b=')

This is never ambiguous because the following is not valid in a grammar:

e : e '*' e=e;

In particular, no label in the grammar can match the name of any rule in the
grammar, so $rulename appearing in a rewrite, where rulename is some rule in
the grammar, can only *ever* refer to an enclosing rule.

(End objective section, begin subjective section) :)

I'm sure you've noticed I've been pushing AST operators recently. :) With
the extended syntax, I've found that the vast majority (over 90%) of rules I
write use AST operators instead of rewrite syntax. Due to this, I rarely
have to worry about labels. For the rule you've written, I'd just use '*'^
and skip the rewrite. Another little known fact is the following rule:

e : NUM (LETTER^ NUM)*;

With the input "1 A 2 B 3" produces the following tree, which is a
left-associative infix operator:

(B (A 1 2) 3)

For the expression syntax you're using, AST operators remain a great
candidate as long as you can also handle right-associativity for them.

Sam


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, February 23, 2011 6:37 PM
To: antlr-interest Interest
Subject: [antlr-interest] ast rewrites in left-recursive rules

So I have it working with rewrite rules now:

e : e '.' ID 			-> ^('.' e ID)
  | e '.' 'this' 		-> ^('.' e 'this')
  | '-' e 			-> ^('-' e)
  | e '*' b=e 			-> ^('*' e $b)
  | e (op='+'|op='-') b=e	-> ^($op e $b)
  | INT 			-> INT
  | ID 				-> ID
  ;

But take a look at the multiplication rule: it needs a label on the second
e. plain e is ambiguous. I decided that plain e references the left
recursive version; since it will disappear during the transformation,
putting a label on that one won't work. we have to put a label on the second
reference as you see above. this is not optimal. can anyone think of a
better way to differentiate between the left and right e references in a
single alternative? [Note that e refers to the entire tree created so far.]

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Feb 23 17:16:51 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 23 Feb 2011 17:16:51 -0800
Subject: [antlr-interest] ast rewrites in left-recursive rules
In-Reply-To: <03bd01cbd3bf$315b6a80$94123f80$@pixelminegames.com>
References: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
	<03bd01cbd3bf$315b6a80$94123f80$@pixelminegames.com>
Message-ID: <12B75A76-CF67-4E06-811F-DFD421BC8486@cs.usfca.edu>


On Feb 23, 2011, at 5:07 PM, Sam Harwell wrote:

> Inside the following rewrite:
> 
> e : e '*' b=e -> ^(...);
> 
> e refers to the first e (the one right after the ':' in the rule)
> $e refers to the enclosing rule (the tree created so far)
> $b refers to the second e (the one labeled 'b=')

Yep, I think that this is the way I got it working now.

> I'm sure you've noticed I've been pushing AST operators recently. :) With

They are very nice for expressions, which was the major motivation for their creation back in '92.

> the extended syntax,

[I've got to go look at your extended syntax now; ok, i'll think about that one]

Ter

From e.craft at shibasoku.co.jp  Wed Feb 23 17:34:47 2011
From: e.craft at shibasoku.co.jp (Eric Craft)
Date: Thu, 24 Feb 2011 10:34:47 +0900
Subject: [antlr-interest] [newbie] Creating a new node in a grammar
Message-ID: <4D65B5B7.1080701@shibasoku.co.jp>

Hello all,
     I have modified the C++ grammar to support numbers with units.
     float j = 3.0mV;
     I created an action to replace the 3.0mV with 0.003 using the 
following code in the grammar:
@init
{
   string newNum(" ");
}

inside a rule alternative:
     |       un=UNITNUM //EAC here is where we replace the prefix with 
multiplier
                           {
                           ConvertToNum($un, newNum);
                           printf("UnitNum= %s %s\n", $un.text->chars, 
newNum.c_str());
                           $un.text = newNum;
                           } -> {newNum} // this is where I get lost

So how do I create the new pANTLR_BASE_TREE node and assign it the 
string of interest?

I was thinking something like the following, but I don't know how to 
assign the new token to the tree node.

            pANTLR3_COMMON_TOKEN  newTok = new ANTLR3_COMMON_TOKEN(un);
            pANTLR3_STRING newString = new ANTLR3_STRING();
            newString->set(newString, newNum.c_str());
             newTok->setText(newTok, newString);
            pANTLR3_BASE_TREE newNumTree = new ANTLR3_COMMON_TREE(<put 
in the token?>);

Any help would be greatly appreciated!

-- 
Eric Craft
ShibaSoku Co., Ltd.
Software Engineer
848 Wakamatsu-cho
Tokorozawa, Saitama 359-0032 Japan
TEL 81-4-2994-1154
e.craft at shibasoku.co.jp


From jbb at acm.org  Wed Feb 23 18:05:47 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 23 Feb 2011 21:05:47 -0500
Subject: [antlr-interest] ast rewrites in left-recursive rules
In-Reply-To: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
References: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
Message-ID: <1298513147.6291.26.camel@gecko>

On Wed, 2011-02-23 at 16:37 -0800, Terence Parr wrote:
> So I have it working with rewrite rules now:
> 
> e : e '.' ID 			-> ^('.' e ID)
>   | e '.' 'this' 		-> ^('.' e 'this')
>   | '-' e 			-> ^('-' e)
>   | e '*' b=e 			-> ^('*' e $b)
>   | e (op='+'|op='-') b=e	-> ^($op e $b)
>   | INT 			-> INT
>   | ID 				-> ID
>   ;
> 
> But take a look at the multiplication rule: it needs a label on the second e. plain e is ambiguous. I decided that plain e references the left recursive version; since it will disappear during the transformation, putting a label on that one won't work. we have to put a label on the second reference as you see above. this is not optimal. can anyone think of a better way to differentiate between the left and right e references in a single alternative? [Note that e refers to the entire tree created so far.]
> 

First, apologies. I have not been following your effort on this so far,
so my comments are probably just useless noise, sorry about that.

1) If the user must label the second recursive reference, will you be
able to provide a *really* good error message when he forgets?

question: do i have to tell ANTLR which rules are in play for this
and/or which operators are supposed to be roots?

question: is the token in the rule always the root? if so, what if the
rule has more than 1 token? 
(like conditionals e.g. e: e '?' e ':' e -> ^('?' e_1 e_2 e_3) which
works for first token as root but maybe there are other possibilities).


2) is it possible - as part of your transformation of the left recursion
into an equivalent right recursion - just spawn the label for the second
recursion (and third, fourth, ... if needed) as part of that
transformation process. so for example

e : ....
  | e '*' e
  | ...
  ;

is first pattern matched and preliminarily transformed into

e : ...
  | e first_unique_spawned_label='*' second_unique_spawned_label=e
  | ...
  ;

which you then subsequently transform using your current technique

e : ...
  | e fst_unique='*' snd_unique=e -> ^($fst_unique e $snd_unique)
  | ...
  ;

and 

...| e ('+'|'-) e

becomes
  
...| e (third_unique='+'|third_unique='-') fourth_unique=e
               -> ^($third_unique e $fourth_unique)

a bad part of this suggestion is that you will probably have to reserve
some label prefix (or maybe suffix) for use in unique label generation.
which users will need to be aware of...



again, sorry if the above is off-base.
   -jbb





From contactdick at gmail.com  Thu Feb 24 01:25:37 2011
From: contactdick at gmail.com (Richard Druce)
Date: Thu, 24 Feb 2011 09:25:37 +0000
Subject: [antlr-interest] Token parsing speed
Message-ID: <AANLkTik_5Uv0oWME=z=QHdHg2BHS-RivY8fE-tf8RkzX@mail.gmail.com>

I have a question on the general best practice and speed between of
using  tokens vs rules to construct parts of the grammar. Our language
has many phrases that share words, a simplified sample being 'first'
and 'first second'.  Would I be better off putting them in as tokens
or rules from a speed of parsing perspective. Some of my tokens also
contain whitespace.

i.e
rule1: FIRST;

rule2: FIRST WS SECOND;

FIRST: 'first';
SECOND: 'second'

WS: ' ';

or

rule1: RULE1;

rule2: RULE2;

RULE1: 'first second';

RULE2: 'first';

Thanks,

Richard

From code_dude at nym.hush.com  Thu Feb 24 02:36:45 2011
From: code_dude at nym.hush.com (code_dude at nym.hush.com)
Date: Thu, 24 Feb 2011 10:36:45 +0000
Subject: [antlr-interest] antlr C++ Target
Message-ID: <20110224103645.5C0BDE66FA@smtp.hushmail.com>

Hi Guys,
 Any news on the v3 C++  target ?


From peter.crowther at melandra.com  Thu Feb 24 04:14:37 2011
From: peter.crowther at melandra.com (Peter Crowther)
Date: Thu, 24 Feb 2011 12:14:37 +0000
Subject: [antlr-interest] Antlr 3.3, CSharp3 target,
 StringTemplate: Invalid code generated for a template rewrite
Message-ID: <AANLkTinYc5AHpQzR7sT+_ojpVvkA_oqdPQUDmoXLoJTw@mail.gmail.com>

Source fragment (it's a tree grammar, long story):
-- snip --
federation_query    : ^(FEDERATIONQUERY namespace_part? warranties_part?
select_statement) -> federation_query(select={select_statement}) ;
-- snip --

Generated code fragment:
-- snip --
            // TEMPLATE REWRITE
            // 15:89: -> federation_query(select=select_statement)
            {
                retval.Template =
templateLib.GetInstanceOf("federation_query",
                new STAttrMap().put("select", select_statement));
            }


            }
-- snip --

Error:
-- snip --
The type or namespace name 'STAttrMap' could not be found (are you missing a
using directive or an assembly reference?)
-- snip --

In C#, the second parameter of GetInstanceOf() is
IDictionary<string,object>.  Note that IDictionary does not define put(key,
value) - the .Net equivalent is Add(key, value).  Is this a holdover from an
incomplete Java translation?  How might I debug it?

All ideas welcome!

- Peter
--
Peter Crowther, Director, Melandra Limited

From sharwell at pixelminegames.com  Thu Feb 24 06:46:41 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 24 Feb 2011 08:46:41 -0600
Subject: [antlr-interest] Antlr 3.3, CSharp3 target,
	StringTemplate: Invalid code generated for a template rewrite
In-Reply-To: <AANLkTinYc5AHpQzR7sT+_ojpVvkA_oqdPQUDmoXLoJTw@mail.gmail.com>
References: <AANLkTinYc5AHpQzR7sT+_ojpVvkA_oqdPQUDmoXLoJTw@mail.gmail.com>
Message-ID: <03ec01cbd431$a6f5e550$f4e1aff0$@pixelminegames.com>

Hi Peter,

This is fixed in the 3.3.1 release from last week. Here is a link to the
instructions which I keep updated. It includes a link to release 3.3.1 in
section 1.3.

http://www.tunnelvisionlabs.com/downloads/antlr/ANTLRCSharp3_VS2010.xps

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter Crowther
Sent: Thursday, February 24, 2011 6:15 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Antlr 3.3, CSharp3 target, StringTemplate: Invalid
code generated for a template rewrite

Source fragment (it's a tree grammar, long story):
-- snip --
federation_query    : ^(FEDERATIONQUERY namespace_part? warranties_part?
select_statement) -> federation_query(select={select_statement}) ;
-- snip --

Generated code fragment:
-- snip --
            // TEMPLATE REWRITE
            // 15:89: -> federation_query(select=select_statement)
            {
                retval.Template =
templateLib.GetInstanceOf("federation_query",
                new STAttrMap().put("select", select_statement));
            }


            }
-- snip --

Error:
-- snip --
The type or namespace name 'STAttrMap' could not be found (are you missing a
using directive or an assembly reference?)
-- snip --

In C#, the second parameter of GetInstanceOf() is
IDictionary<string,object>.  Note that IDictionary does not define put(key,
value) - the .Net equivalent is Add(key, value).  Is this a holdover from an
incomplete Java translation?  How might I debug it?

All ideas welcome!

- Peter
--
Peter Crowther, Director, Melandra Limited

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From douglasgodfrey at gmail.com  Thu Feb 24 07:31:33 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Thu, 24 Feb 2011 10:31:33 -0500
Subject: [antlr-interest] ast rewrites in left-recursive rules
In-Reply-To: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
References: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
Message-ID: <AANLkTikg53pn_BU05UkvqT4Pm=03wNHUZ08rcH8tmb1h@mail.gmail.com>

Each parse state where a binary operator is encountered there must be a left
and right sub-expression.
For the Antlr grammar something like $lhs and $rhs would be a natural
expression of these sub-expressions:
e :
     ( e '.' ID    -> ^( '.' e ID)                 | e '.' 'this'    -> ^(
'.' e 'this' )  )             // group equal precedence rules
  |  ( '-' e        -> ^( '-' e )                     | '+' e           ->
^( '+' e )   )                   // equal precedence and unary operators
  |  ( e '*' e     -> ^( '*' e.$lhs e.$rhs )  | e '/' e         -> ^( '/'
e.$lhs e.$rhs )  )   // equal precedence and binary operators
  |  ( e '-' e     -> ^( '-' e.$lhs e.$rhs )  | e '+' e         -> ^( '+'
e.$lhs e.$rhs )  ) // equal precedence and binary operators
  |  ( INT        -> INT                          | ID               -> ID
)                              // no operator
  ;

On Wed, Feb 23, 2011 at 7:37 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> So I have it working with rewrite rules now:
>
> e : e '.' ID                    -> ^('.' e ID)
>  | e '.' 'this'                -> ^('.' e 'this')
>  | '-' e                       -> ^('-' e)
>  | e '*' b=e                   -> ^('*' e $b)
>  | e (op='+'|op='-') b=e       -> ^($op e $b)
>  | INT                         -> INT
>  | ID                          -> ID
>  ;
>
> But take a look at the multiplication rule: it needs a label on the second
> e. plain e is ambiguous. I decided that plain e references the left
> recursive version; since it will disappear during the transformation,
> putting a label on that one won't work. we have to put a label on the second
> reference as you see above. this is not optimal. can anyone think of a
> better way to differentiate between the left and right e references in a
> single alternative? [Note that e refers to the entire tree created so far.]
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From douglasgodfrey at gmail.com  Thu Feb 24 07:54:29 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Thu, 24 Feb 2011 10:54:29 -0500
Subject: [antlr-interest] Using global and dynamic scopes together - is
	it possible?
In-Reply-To: <1298401340.5296.24.camel@IronBug>
References: <1298401340.5296.24.camel@IronBug>
Message-ID: <AANLkTimOjSGy=wwnpoQuiA2hZq2ZhacvFo_wKAKw6gNz@mail.gmail.com>

you can define local [non-class] variables with the @init clause.
class variables cannot be used because you will get a compile error in the
generated code.

rulename
scope GlobalOne;
@init
{
       bool localFlag;

       $GlobalOne::globalVariable = ....;
       ...
       localFlag = true;
}

On Tue, Feb 22, 2011 at 2:02 PM, Iron Bug <death.iron.bug at gmail.com> wrote:

> Greetings.
> I've been using ANTLR with C interface for a long time and it was ok,
> but today I bumped into a problem:
> I use global scope for certain rules and I sometimes use dynamic scopes
> for minor local variables. And in one rule it happened the different
> scopes have met each other.
> Something like:
>
> rulename
> scope GlobalOne;
> scope
> {
>        bool localFlag;
> }
> @init
> {
>        $GlobalOne::globalVariable = ....;
>        ...
>        $rulename::localFlag = true;
> }
>
> And ANTLR does not eat that. Well, I'm not sure it's possible even.
> Maybe I should use some different syntax? I tried some variants that
> seemed reasonable to me, but failed.
> I don't know whether it is a problem of ANTLR itself or of the C
> interface realization.
> Can I use both variants of scopes in one rule?
>
> I use ANTLR 3.3 with the latest shapshot version of the C interface
> (libantlr3c-3.3-SNAPSHOT).
>
> Just in case, the errors generated are like:
>
> unexpected token: bool localFlag;
>
> syntax error: expecting SEMI, found '@'
>
> unknown dynamic scope: rulename
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cummings at kjchome.homeip.net  Thu Feb 24 09:31:56 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 24 Feb 2011 12:31:56 -0500
Subject: [antlr-interest] Token parsing speed
In-Reply-To: <AANLkTik_5Uv0oWME=z=QHdHg2BHS-RivY8fE-tf8RkzX@mail.gmail.com>
References: <AANLkTik_5Uv0oWME=z=QHdHg2BHS-RivY8fE-tf8RkzX@mail.gmail.com>
Message-ID: <4D66960C.6060905@kjchome.homeip.net>

On 02/24/2011 04:25 AM, Richard Druce wrote:
> I have a question on the general best practice and speed between of
> using  tokens vs rules to construct parts of the grammar. Our language
> has many phrases that share words, a simplified sample being 'first'
> and 'first second'.  Would I be better off putting them in as tokens
> or rules from a speed of parsing perspective. Some of my tokens also
> contain whitespace.
>
> i.e
> rule1: FIRST;
> 
> rule2: FIRST WS SECOND;
> 
> FIRST: 'first';
> SECOND: 'second'
> 
> WS: ' ';
> 
> or
> 
> rule1: RULE1;
> 
> rule2: RULE2;
> 
> RULE1: 'first second';
> 
> RULE2: 'first';
> 
> Thanks,
> 
> Richard

Richard,
	The answer to your question has to do with the answer to these questions:

	How much whitespace is allowed between 'first' and 'second'?

	If the answer is "exactly 1 space", then your second method could
suffice.  If the answer is more than 1, then your first example could
work, depending on what else might be allowed.  Do you have any tokens
in your language that you either SKIP() or send to the HIDDEN channel?
If so, WS should be one of them, and then you don't care what comes
between FIRST and SECOND.

(You *will* run into more ambiguity problems if you don't code your
lexer rules correctly in the second case.)

	If your language allows inline comments, could you put a comment
between the 'first' and 'second' token?  How about a NL?  How about a TAB?

	In most languages, whitespace is considered a delimter, or a separator.
 It is only required in those cases where it is necessary to keep the
lexer from over lexing various keywords or identifier names, or numbers.
 Otherwise, they can be ignored.  When I write compiler front-ends, I
usually IGNORE (skip) whitespace in my grammar and let the lexer lex
what it finds for tokens and just parse the tokens it returns.  The only
notable exceptions I've run into is things like pre-processor directives
which need to be recognized and acted upon at the time the lexer finds
them, and not put them into the parsers token stream.  To that end, I
never put WS tokens in my parser rules (only LEXER rules).

	The simple answer is:  Put into tokens only what your parser expects to
see and still be able to parser the language correctly.

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From kirby.bohling at gmail.com  Thu Feb 24 10:12:14 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Thu, 24 Feb 2011 12:12:14 -0600
Subject: [antlr-interest] Token parsing speed
In-Reply-To: <AANLkTik_5Uv0oWME=z=QHdHg2BHS-RivY8fE-tf8RkzX@mail.gmail.com>
References: <AANLkTik_5Uv0oWME=z=QHdHg2BHS-RivY8fE-tf8RkzX@mail.gmail.com>
Message-ID: <AANLkTimE4=BEeV1mj-S0RZUBSRB0u1mdY7ZxKkdRou5v@mail.gmail.com>

On Thu, Feb 24, 2011 at 3:25 AM, Richard Druce <contactdick at gmail.com> wrote:
> I have a question on the general best practice and speed between of
> using ?tokens vs rules to construct parts of the grammar. Our language
> has many phrases that share words, a simplified sample being 'first'
> and 'first second'. ?Would I be better off putting them in as tokens
> or rules from a speed of parsing perspective. Some of my tokens also
> contain whitespace.
>
> i.e
> rule1: FIRST;
>
> rule2: FIRST WS SECOND;
>
> FIRST: 'first';
> SECOND: 'second'
>
> WS: ' ';
>
> or
>
> rule1: RULE1;
>
> rule2: RULE2;
>
> RULE1: 'first second';
>
> RULE2: 'first';
>
> Thanks,
>
> Richard


I'm no expert on language design, but this sounds like way premature
optimization to me.  Why not focus on what the language purpose is,
ensure that the grammar is effective and efficient and capturing it,
and then revisit it about speed of tokenization?  In general, ANTLR is
pretty darn speedy, and if you are doing much complex with the
language the tokenization is unlikely to be the slow part.

From parrt at cs.usfca.edu  Thu Feb 24 15:09:36 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Feb 2011 15:09:36 -0800
Subject: [antlr-interest] got associativity working
In-Reply-To: <03bd01cbd3bf$315b6a80$94123f80$@pixelminegames.com>
References: <244C5615-0830-4C91-9FBD-7BE7FE23CE24@cs.usfca.edu>
	<03bd01cbd3bf$315b6a80$94123f80$@pixelminegames.com>
Message-ID: <C1CB2361-2363-4A13-ACD6-70E709D95B4A@cs.usfca.edu>

assumes left unless you say otherwise:

e: e '.'^ ID
  | '-'^ e
  | e '^'<assoc=right>^ e
  | e '*'^ e
  | e ('+'^|'-'^) e
  | e ('='<assoc=right>^ |'+='<assoc=right>^) e
  | INT
  | ID
  ;

All operators at the same precedence level must have the same associativity;  it's   nonoptimal to have to say it on each operator, but there is no existing syntax that would let me say "right associativity for this alternative".

some examples examples of the associativity

a^b^c		-> (^ a (^ b c))
a=b=c		-> (= a (= b c))
a=b=c+d.e	-> (= a (= b (+ c (. d e))))

Ter
PS: woot!


From krishnavss at gmail.com  Thu Feb 24 16:59:23 2011
From: krishnavss at gmail.com (Krishna Venuturimilli)
Date: Thu, 24 Feb 2011 16:59:23 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit linux
Message-ID: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>

I searched all over the net, but can't find a way to compile g3pl file to
generate C code for 64 bit target.
Any help is appreciated.
thanks a lot.
-Krishna

From isabelle.perseil at enst.fr  Thu Feb 24 17:15:22 2011
From: isabelle.perseil at enst.fr (Isabelle Perseil)
Date: Fri, 25 Feb 2011 02:15:22 +0100
Subject: [antlr-interest] =?iso-8859-1?q?_CALL_FOR_PAPERS_=3A_UML=26FM=922?=
	=?iso-8859-1?q?011?=
Message-ID: <12695a65bd181578322534689b331463.squirrel@webmail1.telecom-paristech.fr>

**********************************************************************
                   CALL FOR PAPERS :  UML&FM?2011
            4th INTERNATIONAL WORKSHOP ON UML&FORMAL METHODS
          http://www.artist-embedded.org/artist/UML-FM-2011.html

               Workshop held in conjunction with FM 2011
                   The 17th International Symposium on
                            Formal Methods
                      http://sites.lero.ie/fm2011
                            june 20th, 2011
                            Limerick, Ireland
************************************************************************

                     Submission deadline: April 15th, 2011
                     -------------------------------------


Many interest groups from a research perspective are in favour of the
creation of this workshop.

For more than a decade now, the two communities of UML and formal methods
have been working together to produce a simultaneously practical (via UML)
and rigorous (via formal methods) approach to software engineering.

UML is the de facto standard for modelling various aspects of software
systems in both industry and academia, despite the inconvenience that its
current specification is complex and its syntax imprecise.

The fact that the UML semantics is too informal have led many researchers
to formalize it with all kinds of existing formal languages, like OCL, Z,
B, CSP, VDM, Petri Nets, UPPAAL, HOL, Coq, PVS etc.

This fourth edition of the workshop will be open to various subjects as
the main objective is to encourage new initiatives of building bridges
between informal, semi-formal and formal notations.


Topics:
======

This workshop seeks contributions from researchers and practitioners
interested in all aspects of integrating UML and formal methods. To this
end, we solicit papers (no more than 8 pages long) related to, but not
limited to, the following principal topics:

?        Consistent specifications, model transformations (QVT technologies,
         transformation repositories). Transformations to make models more
         analyzable so as to make them executable.

?        Automation of traceability through transformations

?        Refinement techniques: developing detailed design from a UML
         abstract specification

?        Refinement of OCL specification as well

?        Formal reasoning on models for code generation

?        Technologies for compositional verification of models

?        Specification of a formal semantics for the UML.
         Giving an abstract syntax to UML diagrams

?        Formal validation and verification of software

?        Co-modeling methods formal/informal mapping techniques

?        End-to-end methodologies or software process
         engineering,correct-by-construction design providing and
         supporting tools for safety-critical embedded systems design


Workshop Format
===============
This full-day workshop will consist of an introduction of the topic by the
workshop organizers, presentations of accepted papers, and in depth
discussion of previously identified subjects emerging from the
submissions. A summary of the discussions will be made available.


Submission and Publication
==========================
To contribute, please send a position paper or a technical paper at:

https://www.easychair.org/account/signin.cgi?conf=umlfm2011

Papers should not exceed 8 pages . Submitted manuscripts should be in
English and formatted in the style of the ISSE Format. Please, follow the
guidelines at the "For authors and editors" heading in the ISSE website

All accepted papers will be published in a special issue of ISSE NASA
journal (Innovations in Systems and Software Engineering).

Slides will be made available through the workshop website.



IMPORTANT DATES
===============
Submission deadline:              April 15th, 2011
All Notification of acceptance:   May 5th,    2011
Final copy :                      June 15th,  2011
Workshop date :                   June 20th,  2011


Organizers
==========

Organizational sponsors :

OMG      (http://www.omg.org/)
ARTIST   (http://www.artist-embedded.org/artist/)


Organizers and Programme Steering committee:

- Jean-Michel Bruel (Liuppa, France)
- Robert de Simone (INRIA, France)
- S?bastien G?rard (CEA-LIST, France)
- Paul Gibson (Telecom SudParis, France)
- Isabelle Perseil (Inserm, France)

IEEE CS Coordinator:
Mike Hinchey (Lero and NASA GSFC , Ireland)

PC Chairs:
- Paul Gibson (Telecom SudParis, France)
- Isabelle Perseil (Inserm, France)

Program Committee:
- Lukman Ab Rahim (Lancaster University, United Kingdom)
- Nazareno Aguirre (Universidad Nacional de R?o Cuarto, Argentina)
- Marc Aiguier (Ecole Centrale Paris, France)
- Yamine Ait Ameur (LISI / ENSMA, France)
- Pascal Andr? (LINA, University of Nantes, France)
- Luciano Baresi (Politecnico di Milano, Italia)
- Kamel Barkaoui (CEDRIC-CNAM, France)
- Jean-Paul Bodeveix (IRIT, France)
- Jean-Michel Bruel (IRIT, France)
- Alexandre Cabral Mota (Universidade Federal de Pernambuco, Brazil)
- Agusti Canals (CS, France)
- David Clark(University College London, United Kingdom)
- Vincent Englebert (University of Namur, Belgium)
- Huascar Espinoza (Tecnalia, Spain)
- Mamoun Filali (IRIT, France)
- S?bastien G?rard (CEA-LIST, France)
- Frederic Gervais (Universit? Paris-Est, LACL, France)
- Paul Gibson (Telecom SudParis, France)
- Martin Gogolla (University of Bremen, Germany)
- J?r?me Hugues (ISAE, France)
- Stephen J.Mellor (Accelerated Technologies, Tucson AZ, USA)
- Paul Krause (University of Surrey, United Kingdom)
- Kevin Lano (King?s College London, United Kingdom)
- Manuel Mazzara (Newcastle University, United Kingdom)
- Sun Meng (Peking University, China)
- Dominique Mery (LORIA, France)
- Elie Najm (Telecom ParisTech, France)
- Kazuhiro Ogata (Japan Advanced Institute of Science and Technology, Japan)
- Isabelle Perseil (Inserm, France)
- Dorina Petriu (Carlton University, USA)
- Fiona Polack (University of York, United Kingdom)
- Shengchao Qin (Teesside University, United Kingdom)
- Arend Rensink (University of Twente, Netherlands)
- Thomas Robert (Telecom ParisTech, France)
- Douglas Schmidt (Vanderbilt University, USA)
- Pierre-Yves Schobbens (University of Namur, Belgium)
- Bran Selic (Malina Software Corp, Canada)
- Fran?oise Simonot Lion (LORIA, France)
- Volker Stolz (United Nations University, Norway)
- Jing Sun (University of Auckland, New Zealand)
- Jun Suzuki (University of Massachusetts, Boston, USA)
- Bedir Tekinerdogan (Bilkent University, Turkey)
- Tatsuhiro Tsuchiya (Osaka University, Japan)
- Naoyasu Ubayashi (Kyushu Institute of Technology, Japan)
- Stefan Van Baelen (Catholic University of Leuven, Belgium)
- Tullio Vardanega (University of Padua, Italia)
- Fran?ois Vernadat (CNRS-LAAS, France)
- Eugenio Villar (Universidad de Cantabria, Spain)
- Tim Weilkiens (OOSE Innovative Informatik, Germany)
- Sergio Yovine (Universidad de Buenos Aires, Argentina)








From parrt at cs.usfca.edu  Thu Feb 24 18:42:47 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Feb 2011 18:42:47 -0800
Subject: [antlr-interest] holy crap; got java expressions working
Message-ID: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>

did a quick trial of java expression. i'll be damned if it doesn't seem to work. sample input/output pairs below.

Ter
--------------

e   :   '('! e ')'!
    |   'this' 
    |   'super'
    |   INT
    |   ID
    |   type '.'^ 'class'
    |   e '.'^ ID
    |   e '.'^ 'this'
    |   e '.'^ 'super' '('^ expressionList? ')'!
    |   e '.'^ 'new'^ ID '('! expressionList? ')'!
    |	'new'^ type ( '(' expressionList? ')'! | (options {k=1;}:'[' e ']'!)+)
    |   e '['^ e ']'!
    |   '('^ type ')'! e
    |   e ('++'^ | '--'^)
    |   e '('^ expressionList? ')'!
    |   ('+'^|'-'^|'++'^|'--'^) e
    |   ('~'^|'!'^) e
    |   e ('*'^|'/'^|'%'^) e
    |   e ('+'^|'-'^) e
    |   e ('<' '<' | '>' '>' '>' | '>' '>') e
    |   e ('<='^ | '>='^ | '>'^ | '<'^) e
    |   e 'instanceof'^ e
    |   e ('=='^ | '!='^) e
    |   e '&'^ e
    |   e '^'<assoc=right>^ e
    |   e '|'^ e
    |   e '&&'^ e
    |   e '||'^ e
//    |   e '?' e ':' e
    |   e ('='<assoc=right>^
          |'+='<assoc=right>^
          |'-='<assoc=right>^
          |'*='<assoc=right>^
          |'/='<assoc=right>^
          |'&='<assoc=right>^
          |'|='<assoc=right>^
          |'^='<assoc=right>^
          |'>>='<assoc=right>^
          |'>>>='<assoc=right>^
          |'<<='<assoc=right>^
          |'<<<='<assoc=right>^
          |'%='<assoc=right>^) e
    ;
expressionList
    :   e (','! e)*
    ;
type: ID 
    | ID '['^ ']'!
    | 'int'
	 | 'int' '['^ ']'! 
    ;

-------------

a -> a
1 -> 1
a+1 -> (+ a 1)
a*1 -> (* a 1)
a.b -> (. a b)
a-b+c -> (+ (- a b) c)
a+b*c -> (+ a (* b c))
a.b+1 -> (+ (. a b) 1)
-a -> (- a)
-a+b -> (+ (- a) b)
-a.b -> (- (. a b))
a^b^c -> (^ a (^ b c))
a=b=c -> (= a (= b c))
a=b=c+d.e -> (= a (= b (+ c (. d e))))
a|b&c -> (| a (& b c))
(a|b)&c -> (& (| a b) c)
(T)x -> (( T x)
new A().b -> (. (new A () b)
(T)t.f() -> (( (( T (. t f)))
a.f(x)==T.c -> (== (( (. a f) x) (. T c))
a.f().g(x,1) -> (( (. (( (. a f)) g) x 1)
new T[((n-1) * x) + 1] -> (new T [ (+ (* (- n 1) x) 1))


From michael.bedward at gmail.com  Thu Feb 24 18:53:43 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Feb 2011 13:53:43 +1100
Subject: [antlr-interest] holy crap; got java expressions working
In-Reply-To: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>
References: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>
Message-ID: <AANLkTikD6Gc97jHpDECf_J-zySV9OkcbHPL-rO_R2HsR@mail.gmail.com>

You're just showing off now :)

Michael

On 25 February 2011 13:42, Terence Parr <parrt at cs.usfca.edu> wrote:
> did a quick trial of java expression. i'll be damned if it doesn't seem to work. sample input/output pairs below.
>
> Ter
> --------------
>
> e ? : ? '('! e ')'!
> ? ?| ? 'this'
> ? ?| ? 'super'
> ? ?| ? INT
> ? ?| ? ID
> ? ?| ? type '.'^ 'class'
> ? ?| ? e '.'^ ID
> ? ?| ? e '.'^ 'this'
> ? ?| ? e '.'^ 'super' '('^ expressionList? ')'!
> ? ?| ? e '.'^ 'new'^ ID '('! expressionList? ')'!
> ? ?| ? 'new'^ type ( '(' expressionList? ')'! | (options {k=1;}:'[' e ']'!)+)
> ? ?| ? e '['^ e ']'!
> ? ?| ? '('^ type ')'! e
> ? ?| ? e ('++'^ | '--'^)
> ? ?| ? e '('^ expressionList? ')'!
> ? ?| ? ('+'^|'-'^|'++'^|'--'^) e
> ? ?| ? ('~'^|'!'^) e
> ? ?| ? e ('*'^|'/'^|'%'^) e
> ? ?| ? e ('+'^|'-'^) e
> ? ?| ? e ('<' '<' | '>' '>' '>' | '>' '>') e
> ? ?| ? e ('<='^ | '>='^ | '>'^ | '<'^) e
> ? ?| ? e 'instanceof'^ e
> ? ?| ? e ('=='^ | '!='^) e
> ? ?| ? e '&'^ e
> ? ?| ? e '^'<assoc=right>^ e
> ? ?| ? e '|'^ e
> ? ?| ? e '&&'^ e
> ? ?| ? e '||'^ e
> // ? ?| ? e '?' e ':' e
> ? ?| ? e ('='<assoc=right>^
> ? ? ? ? ?|'+='<assoc=right>^
> ? ? ? ? ?|'-='<assoc=right>^
> ? ? ? ? ?|'*='<assoc=right>^
> ? ? ? ? ?|'/='<assoc=right>^
> ? ? ? ? ?|'&='<assoc=right>^
> ? ? ? ? ?|'|='<assoc=right>^
> ? ? ? ? ?|'^='<assoc=right>^
> ? ? ? ? ?|'>>='<assoc=right>^
> ? ? ? ? ?|'>>>='<assoc=right>^
> ? ? ? ? ?|'<<='<assoc=right>^
> ? ? ? ? ?|'<<<='<assoc=right>^
> ? ? ? ? ?|'%='<assoc=right>^) e
> ? ?;
> expressionList
> ? ?: ? e (','! e)*
> ? ?;
> type: ID
> ? ?| ID '['^ ']'!
> ? ?| 'int'
> ? ? ? ? | 'int' '['^ ']'!
> ? ?;
>
> -------------
>
> a -> a
> 1 -> 1
> a+1 -> (+ a 1)
> a*1 -> (* a 1)
> a.b -> (. a b)
> a-b+c -> (+ (- a b) c)
> a+b*c -> (+ a (* b c))
> a.b+1 -> (+ (. a b) 1)
> -a -> (- a)
> -a+b -> (+ (- a) b)
> -a.b -> (- (. a b))
> a^b^c -> (^ a (^ b c))
> a=b=c -> (= a (= b c))
> a=b=c+d.e -> (= a (= b (+ c (. d e))))
> a|b&c -> (| a (& b c))
> (a|b)&c -> (& (| a b) c)
> (T)x -> (( T x)
> new A().b -> (. (new A () b)
> (T)t.f() -> (( (( T (. t f)))
> a.f(x)==T.c -> (== (( (. a f) x) (. T c))
> a.f().g(x,1) -> (( (. (( (. a f)) g) x 1)
> new T[((n-1) * x) + 1] -> (new T [ (+ (* (- n 1) x) 1))
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Thu Feb 24 18:55:40 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Feb 2011 18:55:40 -0800
Subject: [antlr-interest] holy crap; got java expressions working
In-Reply-To: <AANLkTikD6Gc97jHpDECf_J-zySV9OkcbHPL-rO_R2HsR@mail.gmail.com>
References: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>
	<AANLkTikD6Gc97jHpDECf_J-zySV9OkcbHPL-rO_R2HsR@mail.gmail.com>
Message-ID: <6E037EA2-1F7C-4E8D-890C-AFE975A63342@cs.usfca.edu>

look, ma! no hands! :)

i have to do ternary op next and then I think I can call it a day, push to main, and get back to ST v4 release. :)

Ter
On Feb 24, 2011, at 6:53 PM, Michael Bedward wrote:

> You're just showing off now :)
> 
> Michael


From michael.bedward at gmail.com  Thu Feb 24 19:11:58 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Feb 2011 14:11:58 +1100
Subject: [antlr-interest] holy crap; got java expressions working
In-Reply-To: <6E037EA2-1F7C-4E8D-890C-AFE975A63342@cs.usfca.edu>
References: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>
	<AANLkTikD6Gc97jHpDECf_J-zySV9OkcbHPL-rO_R2HsR@mail.gmail.com>
	<6E037EA2-1F7C-4E8D-890C-AFE975A63342@cs.usfca.edu>
Message-ID: <AANLkTimXFmeC0NoroWt0X6B3z+2wqC27pR-ebZaT2iqP@mail.gmail.com>

Sorry if I've missed posts about this, but is the plan for ANTLR 3.4
to support ST v4 ?  Or is your recent post about ANTLR v4 being put
back now out of date ?

Michael

On 25 February 2011 13:55, Terence Parr <parrt at cs.usfca.edu> wrote:
> look, ma! no hands! :)
>
> i have to do ternary op next and then I think I can call it a day, push to main, and get back to ST v4 release. :)
>
> Ter
> On Feb 24, 2011, at 6:53 PM, Michael Bedward wrote:
>
>> You're just showing off now :)
>>
>> Michael
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Thu Feb 24 19:34:08 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Feb 2011 14:34:08 +1100
Subject: [antlr-interest] Using global and dynamic scopes together - is
	it possible?
In-Reply-To: <eaf11e4d065416c693fa86b06d888457@mail.gmail.com>
References: <1298401340.5296.24.camel@IronBug>
	<eaf11e4d065416c693fa86b06d888457@mail.gmail.com>
Message-ID: <AANLkTim5ysp2gLkADS40Xk9Ruj1xY-FsdOh8_PXxmp=3@mail.gmail.com>

That's handy to know !

Just added it to the FAQ...
http://www.antlr.org/wiki/display/ANTLR3/Using+both+global+and+local+%28rule%29+attribute+scopes

Michael

On 23 February 2011 06:15, Jim Idle <jimi at temporal-wave.com> wrote:
> grammar t;
>
> scope GlobalOne {
> ?int c;
> }
>
>
> rulename
>
> scope
> {
> ? ? ? ?bool localFlag;
> }
> scope GlobalOne;
> @init
> {
> ? ? ? ?fred = 1;
> }
>
> ? ? ? ?: C ;
>
>
> C : 'C';
>
> Globals come after locals but before @init.
>
> Jim
>

From krishnavss at gmail.com  Thu Feb 24 20:22:45 2011
From: krishnavss at gmail.com (Krishna Venuturimilli)
Date: Thu, 24 Feb 2011 20:22:45 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
Message-ID: <AANLkTi=uBSbs3tvsb0S4M7Jkh6mNG+75Frpw9r97NNf-@mail.gmail.com>

is there a separate antlr jar file for 64 bit systems?
thanks
-Krishna

On Thu, Feb 24, 2011 at 4:59 PM, Krishna Venuturimilli <krishnavss at gmail.com
> wrote:

> I searched all over the net, but can't find a way to compile g3pl file to
> generate C code for 64 bit target.
> Any help is appreciated.
> thanks a lot.
> -Krishna
>

From parrt at cs.usfca.edu  Thu Feb 24 20:26:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 24 Feb 2011 20:26:26 -0800
Subject: [antlr-interest] holy crap; got java expressions working
In-Reply-To: <AANLkTimXFmeC0NoroWt0X6B3z+2wqC27pR-ebZaT2iqP@mail.gmail.com>
References: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>
	<AANLkTikD6Gc97jHpDECf_J-zySV9OkcbHPL-rO_R2HsR@mail.gmail.com>
	<6E037EA2-1F7C-4E8D-890C-AFE975A63342@cs.usfca.edu>
	<AANLkTimXFmeC0NoroWt0X6B3z+2wqC27pR-ebZaT2iqP@mail.gmail.com>
Message-ID: <A106587F-ED44-4167-9B33-A00D7D00FEC0@cs.usfca.edu>

I'll wait a bit on ST v4 I think.  All templates for code gen would need some modifications.
Ter
On Feb 24, 2011, at 7:11 PM, Michael Bedward wrote:

> Sorry if I've missed posts about this, but is the plan for ANTLR 3.4
> to support ST v4 ?  Or is your recent post about ANTLR v4 being put
> back now out of date ?
> 
> Michael
> 
> On 25 February 2011 13:55, Terence Parr <parrt at cs.usfca.edu> wrote:
>> look, ma! no hands! :)
>> 
>> i have to do ternary op next and then I think I can call it a day, push to main, and get back to ST v4 release. :)
>> 
>> Ter
>> On Feb 24, 2011, at 6:53 PM, Michael Bedward wrote:
>> 
>>> You're just showing off now :)
>>> 
>>> Michael
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Thu Feb 24 20:39:00 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Feb 2011 15:39:00 +1100
Subject: [antlr-interest] holy crap; got java expressions working
In-Reply-To: <A106587F-ED44-4167-9B33-A00D7D00FEC0@cs.usfca.edu>
References: <C6482A7B-DC0F-45A6-A24A-B3AD9589755B@cs.usfca.edu>
	<AANLkTikD6Gc97jHpDECf_J-zySV9OkcbHPL-rO_R2HsR@mail.gmail.com>
	<6E037EA2-1F7C-4E8D-890C-AFE975A63342@cs.usfca.edu>
	<AANLkTimXFmeC0NoroWt0X6B3z+2wqC27pR-ebZaT2iqP@mail.gmail.com>
	<A106587F-ED44-4167-9B33-A00D7D00FEC0@cs.usfca.edu>
Message-ID: <AANLkTinrjc28v7dADhoYfkZ5zm6qAsv-EAY6ZR5g67LL@mail.gmail.com>

Thanks Ter - that's good to know.

I'm testing ST4 with the Jiffle language project by replacing the
current template-output grammar with one that has manual template
construction in rule actions. If that works (as of course it will :)
I'd like to move the project over to ST4 as soon as its available via
Maven. Knowing that the ANTLR side will be a bit later is helpful - it
means I should do the grammar actions "properly" rather than in quick
hack mode.

Michael


On 25 February 2011 15:26, Terence Parr <parrt at cs.usfca.edu> wrote:
> I'll wait a bit on ST v4 I think. ?All templates for code gen would need some modifications.
> Ter
> On Feb 24, 2011, at 7:11 PM, Michael Bedward wrote:
>
>> Sorry if I've missed posts about this, but is the plan for ANTLR 3.4
>> to support ST v4 ? ?Or is your recent post about ANTLR v4 being put
>> back now out of date ?
>>
>> Michael
>>
>> On 25 February 2011 13:55, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> look, ma! no hands! :)
>>>
>>> i have to do ternary op next and then I think I can call it a day, push to main, and get back to ST v4 release. :)
>>>
>>> Ter
>>> On Feb 24, 2011, at 6:53 PM, Michael Bedward wrote:
>>>
>>>> You're just showing off now :)
>>>>
>>>> Michael
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Fri Feb 25 00:50:53 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 25 Feb 2011 19:50:53 +1100
Subject: [antlr-interest] ST v4
Message-ID: <AANLkTi=PF6xARq-k4yWXy++bE7jDWmPokk=ig9Jh-gBr@mail.gmail.com>

Hi Ter and all,

Some feedback on ST v4.0b5.

It works :)

I've just tested it with my Jiffle scripting language which translates
scripts to Java runtime source. I hacked over the v3 template output
grammar to a no-output one with ST4 operations in the rule actions.
When the project is compiled all unit tests pass (only a moderate
number of tests but many are quite demanding).

One question about the stg files. Previously I used "group foo : bar"
in a file to import a base template group.  ST4 has import statements
instead but it seems that you have to specify the absolute file path -
is that right ?  I'm sure that I'm missing something very obvious
there.  For the moment I'm importing the base group programmatically
instead.

Anyway, thanks for the great work !  Hope the first release is soon.

Michael

From antlr at xrad.org  Fri Feb 25 02:04:02 2011
From: antlr at xrad.org (Conrad Hughes)
Date: Fri, 25 Feb 2011 10:04:02 +0000
Subject: [antlr-interest] Island grammars: returning information through
	tokens?
Message-ID: <E1PsuWo-0000ce-AV@mouse.home.xrad.org>


Hi there,

I've been looking at the island-grammar example, switching between
Simple and Javadoc at the lexer level.  One thing that's not clear to me
from this is how information can be returned to the containing document
from this kind of setup, because it doesn't seem to be possible to
easily attach information to lexer tokens (the island grammar example
treats the island (Javadoc) material as a single JAVADOC token in the
containing (Simple java) document, and I'm not sure how to attach
information discovered in the island grammar to the JAVADOC token).

It's artificial, but let's say I wanted the Simple parser to know the
names of authors contained in the Javadoc.  In the example, all
information is simply println()'ed, never communicated upwards.

I've tried a number of different ways of doing this, several have turned
out to be wrong-headed:

  - 'returns' from a JAVADOC token: looks as if tokens could have return
    values at one stage in ANTLR's development, but not any more.
  - Scoped variables: don't seem to work between the lexer and the
    parser, or maybe I didn't try hard enough?  I can see it making
    sense that they don't work in this context though.
  - Subclass CommonToken and use TokenLabelType to allow JAVADOC tokens
    to contain additional information, then add this information to the
    JAVADOC token as I complete the Javadoc parse.
  - Patch my lexer to emit multiple tokens, adding a fake "AUTHOR" token
    derived from the Javadoc parse at the same time that it explicitly
    emits the JAVADOC token.

I have the last method working, but is there a better way to do this?

Conrad

From peter.crowther at melandra.com  Fri Feb 25 03:23:01 2011
From: peter.crowther at melandra.com (Peter Crowther)
Date: Fri, 25 Feb 2011 11:23:01 +0000
Subject: [antlr-interest] C# antlr 3.3.1 and ST: Wallowing in templates,
	would like some direction
Message-ID: <AANLkTi=N57sZD+fxRhnrtsbzyZ5zbvwzM4yX8aFxHe7V@mail.gmail.com>

My goal is to take an expression of the form "NAMESPACE a=123, b=456", parse
it into an AST ^(NAMESPACE ^(= a 123) ^(= b 456)) and then unparse that back
to the original text.  I know - not very inspiring yet, but I'll be hacking
at the AST in the middle.  This is a part of a larger project.

The parser's fine.  I'm getting stuck on the use of templates in the
unparser.  I'm reasonably sure I've got the wrong end of at least one stick,
and would appreciate any pointers of "start reading here, you idiot".  If
someone was willing to take 5 minutes to change my example into something
sensible, I'd *really* appreciate it.  I've not yet found a useful tutorial
on using template group files and ANTLR parsers together, and suspect that's
the issue.

File fragments below.  With the tree given above, this produces "NAMESPACE
;" - in other words, nothing is produced for the list at all.  I have two
concerns about my use of templates: 1) the repeated expression and ".st" use
in the grammar seems horribly repetitive and horribly ugly - neither are
common features of antlr or ST -  and 2) I seem to be having issues with
multi-valued attributes.

-- mdxForHealthRenderer.g3 fragment --

options {
    language=CSharp3;
    ASTLabelType=CommonTree;
    output=template;
    tokenVocab = mdxForHealth;
}

namespace_part        : ^(NAMESPACE namespace_list) ->
namespace_part(namespace_list={$namespace_list.st});

namespace_list        : namespace_definition+ ->
namespace_list(namespace_definitions={$namespace_definition.st});

namespace_definition    : ^(EQ namespace_identifier OID) ->
namespace_definition(namespace_identifier={$namespace_identifier.text},
oid={$OID.text});

namespace_identifier    : unquoted_identifier;

... unquoted_identifier.text and OID.text are properly set and appear in
templates, so I think their definitions are fine...

-- end fragment --

-- msas.stg --
group msas;

namespace_part(namespace_list) ::= "NAMESPACE <namespace_list>;"

namespace_list(namespace_definitions) ::= "<namespace_definitions;
separator=','>"

namespace_definition(namespace_identifier, oid) ::= "<namespace_identifier>
= <oid>"
-- end msas.stg --

-- Call sequence (fragment) --
            CommonTree root = (CommonTree)ret.Tree;

            // Unparse as well, to prove it can be done
            string templateFileName = "msas.stg";
            StringTemplateGroup templates = new
StringTemplateGroup(File.OpenText(templateFileName));
            CommonTreeNodeStream nodes = new CommonTreeNodeStream(root);
            nodes.TokenStream = tokens;
            mdxForHealthRenderer unparser = new mdxForHealthRenderer(nodes);
            unparser.TemplateGroup = templates;
            StringTemplate code = unparser.root().Template;
            if (null == code)
                MessageBox.Show("null returned from unparser");
            else
                MessageBox.Show(code.ToString());
-- End call sequence --

Comments, suggestions, and ways of handing me the right end of the stick
would be very welcome.  This really can't be as hard as I've made it for
myself!

Cheers,

- Peter

From tjtaill36 at gmail.com  Fri Feb 25 06:53:02 2011
From: tjtaill36 at gmail.com (tjtaill36)
Date: Fri, 25 Feb 2011 09:53:02 -0500
Subject: [antlr-interest] Antlr newbie trying to make Sloc counter with
	antlr
Message-ID: <AANLkTimY-N+_SP-iynYCWNSJwvLpL3L2VOV7PM2sP_Rn@mail.gmail.com>

Hi all,

I am new to antlr and I am trying use it to gather metrics about code
starting with the low hanging fruit I wanted to count slocs so I made the
following grammar but it doesn't seem to work correctly any advice would be
appreciated. Also can I use the just a lexer by itself or do I absolutely
need a Parser as well ?

lexer grammar Slocs;

options {
  language = Java;
  filter=true;
}

@lexer::header {
package code.metrics;
}

@lexer::members {
    public int slocs = 0;
}


COMMENT:
    ('/*' .* '*/' | '//' ~('\r' | '\n')* ) {$channel=HIDDEN;}
    ;


SLOC:
    .* ';' {slocs++;}
    ;


LINE:
    .* NEWLINE {$channel=HIDDEN;}
    ;

fragment NEWLINE:
    '\r'? '\n'
    ;

Thanks

Troy

From bkiers at gmail.com  Fri Feb 25 07:50:37 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 25 Feb 2011 16:50:37 +0100
Subject: [antlr-interest] Antlr newbie trying to make Sloc counter with
	antlr
In-Reply-To: <AANLkTimGkvZeBWwFFDDfshFifGxccqxMg4SjRo=bxty4@mail.gmail.com>
References: <AANLkTimY-N+_SP-iynYCWNSJwvLpL3L2VOV7PM2sP_Rn@mail.gmail.com>
	<AANLkTim+ozkS6os5GMRjDP8wB81O-6=PuZ+Xo6ZJN9m4@mail.gmail.com>
	<AANLkTimGkvZeBWwFFDDfshFifGxccqxMg4SjRo=bxty4@mail.gmail.com>
Message-ID: <AANLkTikxtrRZ16=bZvUw5nEVPEfpGJvC5Q3TTa_z1CYW@mail.gmail.com>

Hi Troy,

On Fri, Feb 25, 2011 at 4:36 PM, tjtaill36 <tjtaill36 at gmail.com> wrote:

> Bart,
>
> Thanks for answering a sloc is a logical line of code in a c base language
> that is pretty much the number of non commented semi colons.
>
>
Ah, I see.



> this is my test code and it says there is 0 slocs when it should answer two
>
> package code.metrics;
>
> import java.io.IOException;
>
> import org.antlr.runtime.ANTLRStringStream;
> import org.antlr.runtime.CommonTokenStream;
> import org.antlr.runtime.RecognitionException;
>
>
> public class CountSlocs {
>     public static void main(String[] args) throws IOException,
>                                         RecognitionException {
>
>         StringBuilder file = new StringBuilder();
>         file.append("package code.metrics;\n");
>         file.append("/* ml comment */\n");
>         file.append("class Whatever {\n");
>         file.append("\tpublic static void main(String[] args){\n");
>         file.append("\t\tSystem.out.println(\"Hello World!\");\n");
>         file.append("\t}\n");
>         file.append("}\n");
>
>         ANTLRStringStream in = new ANTLRStringStream(file.toString());
>         Slocs lexer = new Slocs(in);
>
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>
>         tokens.getTokens();
>
>         System.out.println(lexer.slocs);
>     }
>
> }
>
> Troy


When I run your code, I get this:

$ java -cp antlr-3.2.jar org.antlr.Tool Slocs.g
$ javac -cp antlr-3.2.jar *.java
$ java -cp .:antlr-3.2.jar CountSlocs
2


which is the expected output...

Note that since you're using the `filter=true` option, you don't need to
account for anything except those token you're interested in. So all the
`.*` stuff can be omitted. The following grammar also produces "2" being
printed to the console:

lexer grammar Slocs;

// options

// members

COMMENT
  :  '/*' .* '*/'
  |  '//' ~('\r' | '\n')*
  ;

// string and char-literals here

SLOC
  :  ';' {slocs++;}
  ;



Regards,

Bart.

From tjtaill36 at gmail.com  Fri Feb 25 08:11:00 2011
From: tjtaill36 at gmail.com (tjtaill36)
Date: Fri, 25 Feb 2011 11:11:00 -0500
Subject: [antlr-interest] Antlr newbie trying to make Sloc counter with
	antlr
In-Reply-To: <AANLkTikxtrRZ16=bZvUw5nEVPEfpGJvC5Q3TTa_z1CYW@mail.gmail.com>
References: <AANLkTimY-N+_SP-iynYCWNSJwvLpL3L2VOV7PM2sP_Rn@mail.gmail.com>
	<AANLkTim+ozkS6os5GMRjDP8wB81O-6=PuZ+Xo6ZJN9m4@mail.gmail.com>
	<AANLkTimGkvZeBWwFFDDfshFifGxccqxMg4SjRo=bxty4@mail.gmail.com>
	<AANLkTikxtrRZ16=bZvUw5nEVPEfpGJvC5Q3TTa_z1CYW@mail.gmail.com>
Message-ID: <AANLkTimHANpW4RJ=QhMfrW5WUuW7eHwuQ5J2Y8tLE_0O@mail.gmail.com>

Bart,

Thanks for your help I am still getting 0 when I run my code even with your
grammar mods. The only difference I see is I am using antlr3.3-complete.jar
from eclipse instead of antlr3.2.jar
from the command line. I will try using antlr3.2.jar instead but I doubt
that is the problem. Actually just switching from 3.3 to 3.2 solved my
problem I am not sure why this would be ?
Using 3.2 I get the results I expect using 3.3 it gives 0. Well I guess I am
sticking to 3.2 version. It would have taken me a long while to figure out
to try a previous version without your assistance.

Troy



On Fri, Feb 25, 2011 at 10:50 AM, Bart Kiers <bkiers at gmail.com> wrote:

> Hi Troy,
>
> On Fri, Feb 25, 2011 at 4:36 PM, tjtaill36 <tjtaill36 at gmail.com> wrote:
>
>> Bart,
>>
>> Thanks for answering a sloc is a logical line of code in a c base language
>> that is pretty much the number of non commented semi colons.
>>
>>
> Ah, I see.
>
>
>
>> this is my test code and it says there is 0 slocs when it should answer
>> two
>>
>> package code.metrics;
>>
>> import java.io.IOException;
>>
>> import org.antlr.runtime.ANTLRStringStream;
>> import org.antlr.runtime.CommonTokenStream;
>> import org.antlr.runtime.RecognitionException;
>>
>>
>> public class CountSlocs {
>>     public static void main(String[] args) throws IOException,
>>                                         RecognitionException {
>>
>>         StringBuilder file = new StringBuilder();
>>         file.append("package code.metrics;\n");
>>         file.append("/* ml comment */\n");
>>         file.append("class Whatever {\n");
>>         file.append("\tpublic static void main(String[] args){\n");
>>         file.append("\t\tSystem.out.println(\"Hello World!\");\n");
>>         file.append("\t}\n");
>>         file.append("}\n");
>>
>>         ANTLRStringStream in = new ANTLRStringStream(file.toString());
>>         Slocs lexer = new Slocs(in);
>>
>>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>>
>>         tokens.getTokens();
>>
>>         System.out.println(lexer.slocs);
>>     }
>>
>> }
>>
>> Troy
>
>
> When I run your code, I get this:
>
> $ java -cp antlr-3.2.jar org.antlr.Tool Slocs.g
> $ javac -cp antlr-3.2.jar *.java
> $ java -cp .:antlr-3.2.jar CountSlocs
> 2
>
>
> which is the expected output...
>
> Note that since you're using the `filter=true` option, you don't need to
> account for anything except those token you're interested in. So all the
> `.*` stuff can be omitted. The following grammar also produces "2" being
> printed to the console:
>
> lexer grammar Slocs;
>
> // options
>
> // members
>
> COMMENT
>   :  '/*' .* '*/'
>   |  '//' ~('\r' | '\n')*
>   ;
>
> // string and char-literals here
>
> SLOC
>   :  ';' {slocs++;}
>   ;
>
>
>
> Regards,
>
> Bart.
>
>
>

From douglasgodfrey at gmail.com  Fri Feb 25 08:33:36 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Fri, 25 Feb 2011 11:33:36 -0500
Subject: [antlr-interest] Can Antlr use a variable in a lexer pattern?
Message-ID: <AANLkTi=M33eQYNm1VkcQxWJZkJki_AEJuyZKmpSDwoQQ@mail.gmail.com>

in the snippet below, can "escape_character" be a variable?
it seems that this would not work because the "escape_character" is not
known until it is too late.
the alternate form below might work if the Antlr Lexer can use a variable in
the pattern match.
can the lexer apply the escape character as a post processing validation
step?
    i.e. accept anything within the quotes and then validate the sequence
after the ESCAPE clause?

Unicode_Identifier  =
        U Ampersand
        Double_Quote  ( Unicode_Identifier_Part )+ Double_Quote
        ( ESCAPE escape_character )?
        ;


Alternate form:

Unicode_Identifier  =
        U Ampersand
        ( ESCAPE escape_character )?
        Double_Quote  ( Unicode_Identifier_Part )+ Double_Quote
        ;


fragment
Unicode_Identifier_Part  = Unicode_Permitted_Identifier_Character  |
Unicode_Escape_Value ;

fragment
Unicode_Escape_Value  = Unicode_4_Digit_Escape_Value  |
Unicode_6_Digit_Escape_Value ;

fragment
Unicode_4_Digit_Escape_Value  = escape_character  Hexit  Hexit  Hexit  Hexit
;

fragment
Unicode_6_Digit_Escape_Value  = escape_character  Plus_Sign Hexit  Hexit
Hexit  Hexit  Hexit  Hexit ;

escape_character            = Back_Slash /*!! See the Syntax Rules*/; ;

From jimi at temporal-wave.com  Fri Feb 25 09:01:18 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 09:01:18 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
Message-ID: <66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>

1) What file is this and from where?
2) These days you can just rename it to a .g file, the extension names
were because older versions of Visual Studio needed it to see what the
output files were but that isn't relevant any more.
3) The generated C is the same on all platforms and there is nothing
special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc. In
fact it is designed so that you can generate the C on one platform and
compile it on any. I had to do that because HPUX Java (and HPUX in
general) sucks and could not even run the ANTLR tool jar without patching
the kernel.

So, just like any other file you run the ANTLR tool on it and it will give
you a .c and .h file. The generated files are both 32 and 64 bit
compatible but if you read the docs for the C runtime it will point you at
./configure --help where you will see a flag that you supply to build the
libraries in 64 bit mode.

As to searching all over the interweb, look at the API documentation link
on the ANTLR home page and remember antlr.markmail.org as per the link on
the support page.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> Sent: Thursday, February 24, 2011 4:59 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] generating C code from g3pl file for 64 bit
> linux
>
> I searched all over the net, but can't find a way to compile g3pl file
> to generate C code for 64 bit target.
> Any help is appreciated.
> thanks a lot.
> -Krishna
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Feb 25 09:14:28 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 09:14:28 -0800
Subject: [antlr-interest] C# antlr 3.3.1 and ST: Wallowing in templates,
 would like some direction
In-Reply-To: <AANLkTi=N57sZD+fxRhnrtsbzyZ5zbvwzM4yX8aFxHe7V@mail.gmail.com>
References: <AANLkTi=N57sZD+fxRhnrtsbzyZ5zbvwzM4yX8aFxHe7V@mail.gmail.com>
Message-ID: <3b553d0d5af34ce7daeaf2fdfb4da313@mail.gmail.com>

Each rule in your tree parser must set the return template correctly and
each rule that calls a rule should pick up that rule's template and use it
when creating its own template. Otherwise you create the template and it
just goes away if you don't reference it. The ANTLR book would give you a
big jump start on this, but don't forget to look at the generated Java
code as this often shows you why you are not getting what you expect to
get.

ruleDefinition
	:	^(RULE

            statements
        )

        {
            // Just pass on up the generated statement code
            //
            $st = $statements.st;

        }

    |   RULE    // No statements, no st
	;



Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter Crowther
> Sent: Friday, February 25, 2011 3:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C# antlr 3.3.1 and ST: Wallowing in
> templates, would like some direction
>
> My goal is to take an expression of the form "NAMESPACE a=123, b=456",
> parse it into an AST ^(NAMESPACE ^(= a 123) ^(= b 456)) and then
> unparse that back to the original text.  I know - not very inspiring
> yet, but I'll be hacking at the AST in the middle.  This is a part of a
> larger project.
>
> The parser's fine.  I'm getting stuck on the use of templates in the
> unparser.  I'm reasonably sure I've got the wrong end of at least one
> stick, and would appreciate any pointers of "start reading here, you
> idiot".  If someone was willing to take 5 minutes to change my example
> into something sensible, I'd *really* appreciate it.  I've not yet
> found a useful tutorial on using template group files and ANTLR parsers
> together, and suspect that's the issue.
>
> File fragments below.  With the tree given above, this produces
> "NAMESPACE ;" - in other words, nothing is produced for the list at
> all.  I have two concerns about my use of templates: 1) the repeated
> expression and ".st" use in the grammar seems horribly repetitive and
> horribly ugly - neither are common features of antlr or ST -  and 2) I
> seem to be having issues with multi-valued attributes.
>
> -- mdxForHealthRenderer.g3 fragment --
>
> options {
>     language=CSharp3;
>     ASTLabelType=CommonTree;
>     output=template;
>     tokenVocab = mdxForHealth;
> }
>
> namespace_part        : ^(NAMESPACE namespace_list) ->
> namespace_part(namespace_list={$namespace_list.st});
>
> namespace_list        : namespace_definition+ ->
> namespace_list(namespace_definitions={$namespace_definition.st});
>
> namespace_definition    : ^(EQ namespace_identifier OID) ->
> namespace_definition(namespace_identifier={$namespace_identifier.text},
> oid={$OID.text});
>
> namespace_identifier    : unquoted_identifier;
>
> ... unquoted_identifier.text and OID.text are properly set and appear
> in templates, so I think their definitions are fine...
>
> -- end fragment --
>
> -- msas.stg --
> group msas;
>
> namespace_part(namespace_list) ::= "NAMESPACE <namespace_list>;"
>
> namespace_list(namespace_definitions) ::= "<namespace_definitions;
> separator=','>"
>
> namespace_definition(namespace_identifier, oid) ::=
> "<namespace_identifier> = <oid>"
> -- end msas.stg --
>
> -- Call sequence (fragment) --
>             CommonTree root = (CommonTree)ret.Tree;
>
>             // Unparse as well, to prove it can be done
>             string templateFileName = "msas.stg";
>             StringTemplateGroup templates = new
> StringTemplateGroup(File.OpenText(templateFileName));
>             CommonTreeNodeStream nodes = new
> CommonTreeNodeStream(root);
>             nodes.TokenStream = tokens;
>             mdxForHealthRenderer unparser = new
> mdxForHealthRenderer(nodes);
>             unparser.TemplateGroup = templates;
>             StringTemplate code = unparser.root().Template;
>             if (null == code)
>                 MessageBox.Show("null returned from unparser");
>             else
>                 MessageBox.Show(code.ToString());
> -- End call sequence --
>
> Comments, suggestions, and ways of handing me the right end of the
> stick would be very welcome.  This really can't be as hard as I've made
> it for myself!
>
> Cheers,
>
> - Peter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Feb 25 09:39:51 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 09:39:51 -0800
Subject: [antlr-interest] Can Antlr use a variable in a lexer pattern?
In-Reply-To: <AANLkTi=M33eQYNm1VkcQxWJZkJki_AEJuyZKmpSDwoQQ@mail.gmail.com>
References: <AANLkTi=M33eQYNm1VkcQxWJZkJki_AEJuyZKmpSDwoQQ@mail.gmail.com>
Message-ID: <731a168e2feb6c3783ab34143a88ce52@mail.gmail.com>

Just use action code.


However you are committing the common error of trying to enforce things at
too low a level. You should let the \ escape any character at all, then
let the parser produce a tree then when walking the tree look through
strings and validate. This will give you:

Invalid escape sequence '\g', can be '\m' or '\n' ...

Whereas a lexer fail gives:

Unexpected character 'g'

And your users will have no idea why. Also the lex will fail so the parse
won't run and so syntax errors and validation errors won't get reported.
So, for the sake of one mistyped character the whole tool chain will
abort. Always push the errors as far down the chain as you can, preferably
to the semantic phase if technically possible. Basically a lexer should
never fail if at all possible, even if it is just because the last rule
is:

BAD : . { error(UNKNOWN_CHARACTER, $text); skip(); } ;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Douglas Godfrey
> Sent: Friday, February 25, 2011 8:34 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can Antlr use a variable in a lexer pattern?
>
> in the snippet below, can "escape_character" be a variable?
> it seems that this would not work because the "escape_character" is not
> known until it is too late.
> the alternate form below might work if the Antlr Lexer can use a
> variable in the pattern match.
> can the lexer apply the escape character as a post processing
> validation step?
>     i.e. accept anything within the quotes and then validate the
> sequence after the ESCAPE clause?
>
> Unicode_Identifier  =
>         U Ampersand
>         Double_Quote  ( Unicode_Identifier_Part )+ Double_Quote
>         ( ESCAPE escape_character )?
>         ;
>
>
> Alternate form:
>
> Unicode_Identifier  =
>         U Ampersand
>         ( ESCAPE escape_character )?
>         Double_Quote  ( Unicode_Identifier_Part )+ Double_Quote
>         ;
>
>
> fragment
> Unicode_Identifier_Part  = Unicode_Permitted_Identifier_Character  |
> Unicode_Escape_Value ;
>
> fragment
> Unicode_Escape_Value  = Unicode_4_Digit_Escape_Value  |
> Unicode_6_Digit_Escape_Value ;
>
> fragment
> Unicode_4_Digit_Escape_Value  = escape_character  Hexit  Hexit  Hexit
> Hexit ;
>
> fragment
> Unicode_6_Digit_Escape_Value  = escape_character  Plus_Sign Hexit
> Hexit Hexit  Hexit  Hexit  Hexit ;
>
> escape_character            = Back_Slash /*!! See the Syntax Rules*/; ;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From krishnavss at gmail.com  Fri Feb 25 10:31:40 2011
From: krishnavss at gmail.com (Krishna Venuturimilli)
Date: Fri, 25 Feb 2011 10:31:40 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
	<66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>
Message-ID: <AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>

Well the generated code is using ANTLR_UINT32 variable and is assigning
ANTLR_MARKER type value to it; this doesn't work on 64 bit. So I was
wondering if the generated C code is dependent on 32 vs 64 bit.

Is there a way to make it use UINT64 instead of UINT32?

thanks
-Krishna

On Fri, Feb 25, 2011 at 9:01 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> 1) What file is this and from where?
> 2) These days you can just rename it to a .g file, the extension names
> were because older versions of Visual Studio needed it to see what the
> output files were but that isn't relevant any more.
> 3) The generated C is the same on all platforms and there is nothing
> special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc. In
> fact it is designed so that you can generate the C on one platform and
> compile it on any. I had to do that because HPUX Java (and HPUX in
> general) sucks and could not even run the ANTLR tool jar without patching
> the kernel.
>
> So, just like any other file you run the ANTLR tool on it and it will give
> you a .c and .h file. The generated files are both 32 and 64 bit
> compatible but if you read the docs for the C runtime it will point you at
> ./configure --help where you will see a flag that you supply to build the
> libraries in 64 bit mode.
>
> As to searching all over the interweb, look at the API documentation link
> on the ANTLR home page and remember antlr.markmail.org as per the link on
> the support page.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> > Sent: Thursday, February 24, 2011 4:59 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] generating C code from g3pl file for 64 bit
> > linux
> >
> > I searched all over the net, but can't find a way to compile g3pl file
> > to generate C code for 64 bit target.
> > Any help is appreciated.
> > thanks a lot.
> > -Krishna
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Feb 25 10:34:49 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 10:34:49 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
	<66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>
	<AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>
Message-ID: <24cee804f3dd3c44eb091d0fea1ecf0f@mail.gmail.com>

Did you set the enable-64bit flag when you built the runtime? Did you use
the latest release? It is 64 bit compatible and ANTLR_MARKER is 64 bits when
you build the runtime for 64 bits. Sounds like you built it with the default
32 bits.



Jim



*From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
*Sent:* Friday, February 25, 2011 10:32 AM
*To:* Jim Idle
*Cc:* antlr-interest at antlr.org
*Subject:* Re: [antlr-interest] generating C code from g3pl file for 64 bit
linux



Well the generated code is using ANTLR_UINT32 variable and is assigning
ANTLR_MARKER type value to it; this doesn't work on 64 bit. So I was
wondering if the generated C code is dependent on 32 vs 64 bit.



Is there a way to make it use UINT64 instead of UINT32?



thanks

-Krishna

On Fri, Feb 25, 2011 at 9:01 AM, Jim Idle <jimi at temporal-wave.com> wrote:

1) What file is this and from where?
2) These days you can just rename it to a .g file, the extension names
were because older versions of Visual Studio needed it to see what the
output files were but that isn't relevant any more.
3) The generated C is the same on all platforms and there is nothing
special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc. In
fact it is designed so that you can generate the C on one platform and
compile it on any. I had to do that because HPUX Java (and HPUX in
general) sucks and could not even run the ANTLR tool jar without patching
the kernel.

So, just like any other file you run the ANTLR tool on it and it will give
you a .c and .h file. The generated files are both 32 and 64 bit
compatible but if you read the docs for the C runtime it will point you at
./configure --help where you will see a flag that you supply to build the
libraries in 64 bit mode.

As to searching all over the interweb, look at the API documentation link
on the ANTLR home page and remember antlr.markmail.org as per the link on
the support page.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> Sent: Thursday, February 24, 2011 4:59 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] generating C code from g3pl file for 64 bit
> linux
>
> I searched all over the net, but can't find a way to compile g3pl file
> to generate C code for 64 bit target.
> Any help is appreciated.
> thanks a lot.
> -Krishna
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From krishnavss at gmail.com  Fri Feb 25 11:11:16 2011
From: krishnavss at gmail.com (Krishna Venuturimilli)
Date: Fri, 25 Feb 2011 11:11:16 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <24cee804f3dd3c44eb091d0fea1ecf0f@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
	<66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>
	<AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>
	<24cee804f3dd3c44eb091d0fea1ecf0f@mail.gmail.com>
Message-ID: <AANLkTinEa0QzU+ESUyJT=y4GE19_3dXKm=j1nkFcjztb@mail.gmail.com>

we are using antlr 3.1.1 - and yes we did compile the runtime libs with the
enable 64 bit.
The libs compile fine and link with our application code fine; When did not
have the enable 64 bit the link against our application code would fail
because the libs were built in 32 bit.

May be I should try with 3.3 (the latest version of antlr).
thank you
-Krishna

On Fri, Feb 25, 2011 at 10:34 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Did you set the enable-64bit flag when you built the runtime? Did you use
> the latest release? It is 64 bit compatible and ANTLR_MARKER is 64 bits
> when
> you build the runtime for 64 bits. Sounds like you built it with the
> default
> 32 bits.
>
>
>
> Jim
>
>
>
> *From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
> *Sent:* Friday, February 25, 2011 10:32 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] generating C code from g3pl file for 64 bit
> linux
>
>
>
> Well the generated code is using ANTLR_UINT32 variable and is assigning
> ANTLR_MARKER type value to it; this doesn't work on 64 bit. So I was
> wondering if the generated C code is dependent on 32 vs 64 bit.
>
>
>
> Is there a way to make it use UINT64 instead of UINT32?
>
>
>
> thanks
>
> -Krishna
>
> On Fri, Feb 25, 2011 at 9:01 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> 1) What file is this and from where?
> 2) These days you can just rename it to a .g file, the extension names
> were because older versions of Visual Studio needed it to see what the
> output files were but that isn't relevant any more.
> 3) The generated C is the same on all platforms and there is nothing
> special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc. In
> fact it is designed so that you can generate the C on one platform and
> compile it on any. I had to do that because HPUX Java (and HPUX in
> general) sucks and could not even run the ANTLR tool jar without patching
> the kernel.
>
> So, just like any other file you run the ANTLR tool on it and it will give
> you a .c and .h file. The generated files are both 32 and 64 bit
> compatible but if you read the docs for the C runtime it will point you at
> ./configure --help where you will see a flag that you supply to build the
> libraries in 64 bit mode.
>
> As to searching all over the interweb, look at the API documentation link
> on the ANTLR home page and remember antlr.markmail.org as per the link on
> the support page.
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> > Sent: Thursday, February 24, 2011 4:59 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] generating C code from g3pl file for 64 bit
> > linux
> >
> > I searched all over the net, but can't find a way to compile g3pl file
> > to generate C code for 64 bit target.
> > Any help is appreciated.
> > thanks a lot.
> > -Krishna
> >
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From david.daeschler at gmail.com  Fri Feb 25 11:24:44 2011
From: david.daeschler at gmail.com (David Daeschler)
Date: Fri, 25 Feb 2011 14:24:44 -0500
Subject: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue with
	collected template list
Message-ID: <AANLkTinbc5hvHOmjnWJvw+EMWqsb6f=G6aQ2QGZWQR5+@mail.gmail.com>

Hello,

I am using antlr-dotnet-tool-3.3.1.7705 and beginning work on a template to
translate from a high level language to bytecode.

One of my rules looks something like this:

script : (g+=globalVar)+
-> file(globalVars={$g})

globalVar
: ^(VAR_DECL TYPE ID .?)
-> vardec(type={$TYPE.text}, id={$ID.text})
;

It appears that the code being generated in this case to collect the
templates is slightly off. The type of list to hold the returned result is:

List<MyAST> list_g = null;

But when the collection is done, it is expecting the list to hold a
stringtemplate:

if (list_g==null) list_g=new List<StringTemplate>();
list_g.Add(g.Template);

I have confirmed my output is set correctly:

options {
language = 'CSharp3';
tokenVocab = MyVocab;
ASTLabelType = MyAST;
output = template;
}


Is there anything else I need to do?

Thank you very much for any help.
-- 
David Daeschler

From aurelien.baudet at gmail.com  Fri Feb 25 11:42:49 2011
From: aurelien.baudet at gmail.com (=?ISO-8859-1?Q?Aur=E9lien_Baudet?=)
Date: Fri, 25 Feb 2011 20:42:49 +0100
Subject: [antlr-interest] Problem in grammar (#a, #b, #c, #d,
	#f are not well recognized)
Message-ID: <AANLkTimhq0bW4o5=__o45ehn9bhrxxSxRz9Au8QKzaW1@mail.gmail.com>

   Hello,

I'm currently writing an xtext plugin for css. I have a problem and I don't
find any solution. My grammar works quite well for many css files but it
fails on that:

.dj_iPad #header #formSearch.disabled {
	opacity: 1;
}



However, it works for (g instead of h) :

.dj_iPad #header #gormSearch.disabled {
	opacity: 1;
}


It works for any character different from a, b, c, e, f...

So I think the parser recognize that as hex character.

Can somebody help me fixing this bug ?

The grammar:

grammar css;

options {
	output=AST;
	ASTLabelType=CommonTree;
	language=Java;
	//k=4;
}

tokens {
	IMPORT;
	NESTED;
	NEST;
	RULE;
	ATTRIB;
	PARENTOF;
	PRECEDEDS;
	ATTRIBEQUAL;
	HASVALUE;
	BEGINSWITH;
	PSEUDO;
	PROPERTY;
	FUNCTION;
	TAG;
	ID;
	CLASS;
	PERCENTAGE;
	UNIT;
	PERCENTAGE;
	EMS;
	EXS;
	LENGTH;
	ANGLE;
	TIME;
	FREQ;
}


stylesheet:
	charset?
	importRule*
	namespace*
	(ruleset | media | page | font_face | keyframes)+;

charset:
	'@charset' STRING ';';

namespace:
	'@namespace' IDENT? (STRING|url) ';';
	
importRule:
	'@import' (STRING|url) (medias)? ';';

medias:
	IDENT (',' IDENT)*;

keyframes:
	'@keyframes' IDENT '{' keyframes_blocks* '}';
	
keyframes_blocks:
	keyframes_selectors block;
	
keyframes_selectors:
	'from' | 'to' | PERCENTAGE (',' 'from' | 'to' | PERCENTAGE)*;

media:
	'@media' medias '{' ruleset* '}';
	
page:
	'@page' IDENT? (':' IDENT)? block;
	
font_face:
	'@font-face' block;
	
ruleset:
	selectors block;

selectors:
	selector (',' selector)*;

selector:
	simple_selector (selectop? simple_selector)*;
	
simple_selector:
	(elem | '*') (attrib | pseudo)?;

block:
	'{' properties* ';'? '}';
	
properties:
	declaration (';' declaration)*;

elem:
	IDENT
	| '#' IDENT
	| '.' IDENT;

pseudo:
	(':' | '::') IDENT
	| (':' | '::') function;

attrib:
	'[' IDENT (attribRelate (STRING | IDENT))? ']';

declaration:
	IDENT ':' args '!important'?;

args:
	expr (','? expr)*;

expr:
	('-' | '+')? (NUM | PERCENTAGE | LENGTH | EMS | EXS | ANGLE | TIME | FREQ)
	| IDENT
	//| COLOR
	| STRING
	| URI
	| function;

function:
	IDENT '(' args ')';

// TODO: autoriser url(http://...)
url:
	'url(' STRING ')';
	
attribRelate:
	'='
	| '~='
	| '|=';

selectop:
	'>'
	| '+';

 URI:
	'url(' STRING ')'
	| 'url(' ('a'..'~')* ')';

 PERCENTAGE:
	NUM '%';

 EMS:
	NUM 'em';

 EXS:
	NUM 'ex';

 LENGTH:
	NUM ('px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc');

 ANGLE:
	NUM ('deg' | 'rad' | 'grad');

 TIME:
	NUM ('ms' | 's');

 FREQ:
	NUM ('khz' | 'hz');
	
 IDENT:
	('_' | 'a'..'z' | 'A'..'Z') ('_' | '-' | 'a'..'z' | 'A'..'Z' | '0'..'9')*
	| '-' ('_' | 'a'..'z' | 'A'..'Z') ('_' | '-' | 'a'..'z' | 'A'..'Z' |
'0'..'9')*;

 NUM:
	(('0'..'9')* '.')? ('0'..'9')+;

 COLOR:
	'#' ('0'..'9' | 'a'..'f' | 'A'..'F')+;

STRING	:
			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\') | ~('\\'|'"') )* '"' |
			'\'' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\') | ~('\\'|'\'') )* '\''
		;
		
// Single-line comments
SL_COMMENT
	:	'//'
		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
		{$channel=HIDDEN;}
	;
	
// multiple-line comments
COMMENT
	:	'/*' .* '*/' { $channel = HIDDEN; }
	;

// Whitespace -- ignored
WS	: ( ' ' | '\t' | '\r' | '\n' | '\f' )+ { $channel = HIDDEN; }
	;

From douglasgodfrey at gmail.com  Fri Feb 25 11:49:05 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Fri, 25 Feb 2011 14:49:05 -0500
Subject: [antlr-interest] AntlrWorks FEATURE REQUEST
Message-ID: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>

Please add an option to turn off the parse as you type syntax checking with
a toolbar button to refresh the parse.

When I am converting a grammar from BNF to Antlr the grammar may start out
with thousands of errors.

AntlrWorks GUI becomes unresponsive if the errors cause an exception in the
parse as you type syntax checking.

AntlrWorks GUI also becomes unresponsive if there are more than 10-20 errors
even if they don't cause a parse exception.

I wind up having to edit the BNF grammar in another editor and switch back
and forth between my editor and AntlrWorks for each error.

From sharwell at pixelminegames.com  Fri Feb 25 12:01:06 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 25 Feb 2011 14:01:06 -0600
Subject: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue
	with	collected template list
In-Reply-To: <AANLkTinbc5hvHOmjnWJvw+EMWqsb6f=G6aQ2QGZWQR5+@mail.gmail.com>
References: <AANLkTinbc5hvHOmjnWJvw+EMWqsb6f=G6aQ2QGZWQR5+@mail.gmail.com>
Message-ID: <007d01cbd526$bdf5fec0$39e1fc40$@pixelminegames.com>

Hi David,

Can you add the following template to the CSharp3 target's ST.stg which is
used for generating code. Let me know if it resolves the issue for you. If
this works, I'll clean it up (only overriding the necessary portion) and get
it checked in for the next release.

ruleLabelDefs() ::= <<
<[ruleDescriptor.tokenLabels,ruleDescriptor.tokenListLabels,ruleDescriptor.w
ildcardTreeLabels,ruleDescriptor.wildcardTreeListLabels]
    :{<labelType> <it.label.text> = default(<labelType>);}; separator="\n"
>
<ruleDescriptor.tokenListLabels
    :{List\<<labelType>\> list_<it.label.text> = null;}; separator="\n"
>
<ruleDescriptor.ruleListLabels
    :{List\<<StringTemplate>\> list_<it.label.text> = null;}; separator="\n"
>
<ruleDescriptor.wildcardTreeListLabels
    :{List\<<ASTLabelType>\> list_<it.label.text> = null;}; separator="\n"
>
<ruleDescriptor.ruleLabels:ruleLabelDef(label=it); separator="\n">
<ruleDescriptor.ruleListLabels:ruleLabelDef(label=it); separator="\n">
>>


Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Daeschler
Sent: Friday, February 25, 2011 1:25 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue with
collected template list

Hello,

I am using antlr-dotnet-tool-3.3.1.7705 and beginning work on a template to
translate from a high level language to bytecode.

One of my rules looks something like this:

script : (g+=globalVar)+
-> file(globalVars={$g})

globalVar
: ^(VAR_DECL TYPE ID .?)
-> vardec(type={$TYPE.text}, id={$ID.text})
;

It appears that the code being generated in this case to collect the
templates is slightly off. The type of list to hold the returned result is:

List<MyAST> list_g = null;

But when the collection is done, it is expecting the list to hold a
stringtemplate:

if (list_g==null) list_g=new List<StringTemplate>();
list_g.Add(g.Template);

I have confirmed my output is set correctly:

options {
language = 'CSharp3';
tokenVocab = MyVocab;
ASTLabelType = MyAST;
output = template;
}


Is there anything else I need to do?

Thank you very much for any help.
-- 
David Daeschler

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Fri Feb 25 12:34:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 12:34:03 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <AANLkTinEa0QzU+ESUyJT=y4GE19_3dXKm=j1nkFcjztb@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
	<66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>	<AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>
	<24cee804f3dd3c44eb091d0fea1ecf0f@mail.gmail.com>
	<AANLkTinEa0QzU+ESUyJT=y4GE19_3dXKm=j1nkFcjztb@mail.gmail.com>
Message-ID: <7655d03a674483e9e3086104fd294eb6@mail.gmail.com>

I think that there is one place where the generated code is not quite
correct ? something to do with tree parser output. Can you post the error
you are getting or send me the grammar files?



Jim



*From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
*Sent:* Friday, February 25, 2011 11:11 AM
*To:* Jim Idle
*Cc:* antlr-interest at antlr.org
*Subject:* Re: [antlr-interest] generating C code from g3pl file for 64 bit
linux



we are using antlr 3.1.1 - and yes we did compile the runtime libs with the
enable 64 bit.

The libs compile fine and link with our application code fine; When did not
have the enable 64 bit the link against our application code would fail
because the libs were built in 32 bit.



May be I should try with 3.3 (the latest version of antlr).

thank you

-Krishna

On Fri, Feb 25, 2011 at 10:34 AM, Jim Idle <jimi at temporal-wave.com> wrote:

Did you set the enable-64bit flag when you built the runtime? Did you use
the latest release? It is 64 bit compatible and ANTLR_MARKER is 64 bits when
you build the runtime for 64 bits. Sounds like you built it with the default
32 bits.



Jim



*From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
*Sent:* Friday, February 25, 2011 10:32 AM
*To:* Jim Idle
*Cc:* antlr-interest at antlr.org
*Subject:* Re: [antlr-interest] generating C code from g3pl file for 64 bit

linux



Well the generated code is using ANTLR_UINT32 variable and is assigning
ANTLR_MARKER type value to it; this doesn't work on 64 bit. So I was
wondering if the generated C code is dependent on 32 vs 64 bit.



Is there a way to make it use UINT64 instead of UINT32?



thanks

-Krishna

On Fri, Feb 25, 2011 at 9:01 AM, Jim Idle <jimi at temporal-wave.com> wrote:

1) What file is this and from where?
2) These days you can just rename it to a .g file, the extension names
were because older versions of Visual Studio needed it to see what the
output files were but that isn't relevant any more.
3) The generated C is the same on all platforms and there is nothing
special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc. In
fact it is designed so that you can generate the C on one platform and
compile it on any. I had to do that because HPUX Java (and HPUX in
general) sucks and could not even run the ANTLR tool jar without patching
the kernel.

So, just like any other file you run the ANTLR tool on it and it will give
you a .c and .h file. The generated files are both 32 and 64 bit
compatible but if you read the docs for the C runtime it will point you at
./configure --help where you will see a flag that you supply to build the
libraries in 64 bit mode.

As to searching all over the interweb, look at the API documentation link
on the ANTLR home page and remember antlr.markmail.org as per the link on
the support page.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> Sent: Thursday, February 24, 2011 4:59 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] generating C code from g3pl file for 64 bit
> linux
>
> I searched all over the net, but can't find a way to compile g3pl file
> to generate C code for 64 bit target.
> Any help is appreciated.
> thanks a lot.
> -Krishna
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Fri Feb 25 12:58:40 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 12:58:40 -0800
Subject: [antlr-interest] Problem in grammar (#a, #b, #c, #d,
 #f are not well recognized)
In-Reply-To: <AANLkTimhq0bW4o5=__o45ehn9bhrxxSxRz9Au8QKzaW1@mail.gmail.com>
References: <AANLkTimhq0bW4o5=__o45ehn9bhrxxSxRz9Au8QKzaW1@mail.gmail.com>
Message-ID: <4a66c6d02d381a84cfd6560ec22e22dc@mail.gmail.com>

Why don't you try the grammar I contributed on antlr download page and see
if that works. The grammar you have here is not going to work as you have
hard coded the tokens in the grammar and ANTLR is generating a lexer that
will fall over on keywords etc. CSS is lot more difficult to parse than
you think.

Microsoft were going to hire me to write some parsers for a project but
they cancelled the project before I was even hired. I had jumped the gun
and written the CSS parser to get a head start on the project, so I just
contributed the grammar. I did not do a lot of testing, but it is pretty
accurate I think.

http://www.antlr.org/grammar/1240941192304/css21.g

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Aur?lien Baudet
> Sent: Friday, February 25, 2011 11:43 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem in grammar (#a, #b, #c, #d, #f are
> not well recognized)
>
>    Hello,
>
> I'm currently writing an xtext plugin for css. I have a problem and I
> don't find any solution. My grammar works quite well for many css files
> but it fails on that:
>
> .dj_iPad #header #formSearch.disabled {
> 	opacity: 1;
> }
>
>
>
> However, it works for (g instead of h) :
>
> .dj_iPad #header #gormSearch.disabled {
> 	opacity: 1;
> }
>
>
> It works for any character different from a, b, c, e, f...
>
> So I think the parser recognize that as hex character.
>
> Can somebody help me fixing this bug ?
>
> The grammar:
>
> grammar css;
>
> options {
> 	output=AST;
> 	ASTLabelType=CommonTree;
> 	language=Java;
> 	//k=4;
> }
>
> tokens {
> 	IMPORT;
> 	NESTED;
> 	NEST;
> 	RULE;
> 	ATTRIB;
> 	PARENTOF;
> 	PRECEDEDS;
> 	ATTRIBEQUAL;
> 	HASVALUE;
> 	BEGINSWITH;
> 	PSEUDO;
> 	PROPERTY;
> 	FUNCTION;
> 	TAG;
> 	ID;
> 	CLASS;
> 	PERCENTAGE;
> 	UNIT;
> 	PERCENTAGE;
> 	EMS;
> 	EXS;
> 	LENGTH;
> 	ANGLE;
> 	TIME;
> 	FREQ;
> }
>
>
> stylesheet:
> 	charset?
> 	importRule*
> 	namespace*
> 	(ruleset | media | page | font_face | keyframes)+;
>
> charset:
> 	'@charset' STRING ';';
>
> namespace:
> 	'@namespace' IDENT? (STRING|url) ';';
>
> importRule:
> 	'@import' (STRING|url) (medias)? ';';
>
> medias:
> 	IDENT (',' IDENT)*;
>
> keyframes:
> 	'@keyframes' IDENT '{' keyframes_blocks* '}';
>
> keyframes_blocks:
> 	keyframes_selectors block;
>
> keyframes_selectors:
> 	'from' | 'to' | PERCENTAGE (',' 'from' | 'to' | PERCENTAGE)*;
>
> media:
> 	'@media' medias '{' ruleset* '}';
>
> page:
> 	'@page' IDENT? (':' IDENT)? block;
>
> font_face:
> 	'@font-face' block;
>
> ruleset:
> 	selectors block;
>
> selectors:
> 	selector (',' selector)*;
>
> selector:
> 	simple_selector (selectop? simple_selector)*;
>
> simple_selector:
> 	(elem | '*') (attrib | pseudo)?;
>
> block:
> 	'{' properties* ';'? '}';
>
> properties:
> 	declaration (';' declaration)*;
>
> elem:
> 	IDENT
> 	| '#' IDENT
> 	| '.' IDENT;
>
> pseudo:
> 	(':' | '::') IDENT
> 	| (':' | '::') function;
>
> attrib:
> 	'[' IDENT (attribRelate (STRING | IDENT))? ']';
>
> declaration:
> 	IDENT ':' args '!important'?;
>
> args:
> 	expr (','? expr)*;
>
> expr:
> 	('-' | '+')? (NUM | PERCENTAGE | LENGTH | EMS | EXS | ANGLE | TIME
> | FREQ)
> 	| IDENT
> 	//| COLOR
> 	| STRING
> 	| URI
> 	| function;
>
> function:
> 	IDENT '(' args ')';
>
> // TODO: autoriser url(http://...)
> url:
> 	'url(' STRING ')';
>
> attribRelate:
> 	'='
> 	| '~='
> 	| '|=';
>
> selectop:
> 	'>'
> 	| '+';
>
>  URI:
> 	'url(' STRING ')'
> 	| 'url(' ('a'..'~')* ')';
>
>  PERCENTAGE:
> 	NUM '%';
>
>  EMS:
> 	NUM 'em';
>
>  EXS:
> 	NUM 'ex';
>
>  LENGTH:
> 	NUM ('px' | 'cm' | 'mm' | 'in' | 'pt' | 'pc');
>
>  ANGLE:
> 	NUM ('deg' | 'rad' | 'grad');
>
>  TIME:
> 	NUM ('ms' | 's');
>
>  FREQ:
> 	NUM ('khz' | 'hz');
>
>  IDENT:
> 	('_' | 'a'..'z' | 'A'..'Z') ('_' | '-' | 'a'..'z' | 'A'..'Z' |
> '0'..'9')*
> 	| '-' ('_' | 'a'..'z' | 'A'..'Z') ('_' | '-' | 'a'..'z' | 'A'..'Z'
> | '0'..'9')*;
>
>  NUM:
> 	(('0'..'9')* '.')? ('0'..'9')+;
>
>  COLOR:
> 	'#' ('0'..'9' | 'a'..'f' | 'A'..'F')+;
>
> STRING	:
> 			'"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\') |
> ~('\\'|'"') )* '"' |
> 			'\'' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\') |
> ~('\\'|'\'') )* '\''
> 		;
>
> // Single-line comments
> SL_COMMENT
> 	:	'//'
> 		(~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> 		{$channel=HIDDEN;}
> 	;
>
> // multiple-line comments
> COMMENT
> 	:	'/*' .* '*/' { $channel = HIDDEN; }
> 	;
>
> // Whitespace -- ignored
> WS	: ( ' ' | '\t' | '\r' | '\n' | '\f' )+ { $channel = HIDDEN; }
> 	;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sharwell at pixelminegames.com  Fri Feb 25 13:20:00 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 25 Feb 2011 15:20:00 -0600
Subject: [antlr-interest] AntlrWorks FEATURE REQUEST
In-Reply-To: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>
References: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>
Message-ID: <008601cbd531$c3ce44a0$4b6acde0$@pixelminegames.com>

This is exactly when creating an IDE you (IDE developer) should always
include something like the following in the parse error handler (causing it
cancel out of the entire parse operation):

if (errorCount > N)
throw new OperationCanceledException();

:)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Douglas Godfrey
Sent: Friday, February 25, 2011 1:49 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AntlrWorks FEATURE REQUEST

Please add an option to turn off the parse as you type syntax checking with
a toolbar button to refresh the parse.

When I am converting a grammar from BNF to Antlr the grammar may start out
with thousands of errors.

AntlrWorks GUI becomes unresponsive if the errors cause an exception in the
parse as you type syntax checking.

AntlrWorks GUI also becomes unresponsive if there are more than 10-20 errors
even if they don't cause a parse exception.

I wind up having to edit the BNF grammar in another editor and switch back
and forth between my editor and AntlrWorks for each error.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Fri Feb 25 13:27:37 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 25 Feb 2011 13:27:37 -0800
Subject: [antlr-interest] AntlrWorks FEATURE REQUEST
In-Reply-To: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>
References: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>
Message-ID: <059E2319-9A56-449D-85CC-F3575783CE4E@cs.usfca.edu>

Yeah,Sorry about that. I think the easiest thing to do is to go to the editor tab in preferences and set the update delay from 250ms to something longer.

Ter
On Feb 25, 2011, at 11:49 AM, Douglas Godfrey wrote:

> Please add an option to turn off the parse as you type syntax checking with
> a toolbar button to refresh the parse.
> 
> When I am converting a grammar from BNF to Antlr the grammar may start out
> with thousands of errors.
> 
> AntlrWorks GUI becomes unresponsive if the errors cause an exception in the
> parse as you type syntax checking.
> 
> AntlrWorks GUI also becomes unresponsive if there are more than 10-20 errors
> even if they don't cause a parse exception.
> 
> I wind up having to edit the BNF grammar in another editor and switch back
> and forth between my editor and AntlrWorks for each error.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Fri Feb 25 13:53:41 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 13:53:41 -0800
Subject: [antlr-interest] AntlrWorks FEATURE REQUEST
In-Reply-To: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>
References: <AANLkTinB3YYFkVj0mZh-46zSB2uS6uKOmc5dF22PqpZD@mail.gmail.com>
Message-ID: <7a51a8d62bcc3059b9708e2f343b9b19@mail.gmail.com>

Go in to the preferences and change the check delay setting. Change it to
a huge number of milliseconds. That should help.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Douglas Godfrey
> Sent: Friday, February 25, 2011 11:49 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] AntlrWorks FEATURE REQUEST
>
> Please add an option to turn off the parse as you type syntax checking
> with a toolbar button to refresh the parse.
>
> When I am converting a grammar from BNF to Antlr the grammar may start
> out with thousands of errors.
>
> AntlrWorks GUI becomes unresponsive if the errors cause an exception in
> the parse as you type syntax checking.
>
> AntlrWorks GUI also becomes unresponsive if there are more than 10-20
> errors even if they don't cause a parse exception.
>
> I wind up having to edit the BNF grammar in another editor and switch
> back and forth between my editor and AntlrWorks for each error.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From cummings at kjchome.homeip.net  Fri Feb 25 13:56:20 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 25 Feb 2011 16:56:20 -0500
Subject: [antlr-interest] Problem in grammar (#a, #b, #c, #d,
	#f are not well recognized)
In-Reply-To: <AANLkTimhq0bW4o5=__o45ehn9bhrxxSxRz9Au8QKzaW1@mail.gmail.com>
References: <AANLkTimhq0bW4o5=__o45ehn9bhrxxSxRz9Au8QKzaW1@mail.gmail.com>
Message-ID: <4D682584.1050500@kjchome.homeip.net>

On 02/25/2011 02:42 PM, Aur?lien Baudet wrote:
>    Hello,
> 
> I'm currently writing an xtext plugin for css. I have a problem and I don't
> find any solution. My grammar works quite well for many css files but it
> fails on that:

> The grammar:
> 
> grammar css;

> elem:
> 	IDENT
> 	| '#' IDENT
> 	| '.' IDENT;

>  COLOR:
> 	'#' ('0'..'9' | 'a'..'f' | 'A'..'F')+;

Those are the 2 rules rules in conflict.  You need to find a way to
disambiguate the use of the # as a token.  It would help you to go back
to the general advice of not using quoted tokens in your parser.
Instead, have LEXER rules for each one.  You will probably need to merge
the COLOR and HASH rules together using a syntactic predicate in the
lexer rules.  Something like:

fragment
COLOR: ;

HASH: '#' ('0'..'9' | 'a'..'f' | 'A'..'F')=> (('0'..'9' | 'a'..'f' |
'A'..'F')+ { $type=COLOR; });

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From krishnavss at gmail.com  Fri Feb 25 16:14:41 2011
From: krishnavss at gmail.com (Krishna Venuturimilli)
Date: Fri, 25 Feb 2011 16:14:41 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <7655d03a674483e9e3086104fd294eb6@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
	<66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>
	<AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>
	<24cee804f3dd3c44eb091d0fea1ecf0f@mail.gmail.com>
	<AANLkTinEa0QzU+ESUyJT=y4GE19_3dXKm=j1nkFcjztb@mail.gmail.com>
	<7655d03a674483e9e3086104fd294eb6@mail.gmail.com>
Message-ID: <AANLkTimw6e5+HGoA47zRw9dgFvRoujhz+0mN7-Q3biMK@mail.gmail.com>

I tried using 3.3;
Not sure what I am doing wrong...but the code doesn't even get generated
now.
Here's the error message.
thanks
-Krishna

ectflnx1001> java -cp
"/disks/data1/HDMT/hdmt_project/thirdparty/Antlr/antlr-3.3/lib/antlr-3.3-complete.jar"
org.antlr.Tool
/disks/data1/HDMT/hdmt_project/src/hdmt/tos/common/HdmtTplParser2/tplParser.g3pl
-fo .

Exception in thread "main" java.lang.UnsupportedClassVersionError:
org/antlr/Tool (Unsupported major.minor version 49.0)

        at java.lang.ClassLoader.defineClass0(Native Method)

        at java.lang.ClassLoader.defineClass(ClassLoader.java:502)

        at
java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)

        at java.net.URLClassLoader.defineClass(URLClassLoader.java:250)

        at java.net.URLClassLoader.access$100(URLClassLoader.java:54)

        at java.net.URLClassLoader$1.run(URLClassLoader.java:193)

        at java.security.AccessController.doPrivileged(Native Method)

        at java.net.URLClassLoader.findClass(URLClassLoader.java:186)

        at java.lang.ClassLoader.loadClass(ClassLoader.java:299)

        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:265)

        at java.lang.ClassLoader.loadClass(ClassLoader.java:255)

        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:315)

On Fri, Feb 25, 2011 at 12:34 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> I think that there is one place where the generated code is not quite
> correct ? something to do with tree parser output. Can you post the error
> you are getting or send me the grammar files?
>
>
>
> Jim
>
>
>
> *From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
> *Sent:* Friday, February 25, 2011 11:11 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] generating C code from g3pl file for 64 bit
> linux
>
>
>
> we are using antlr 3.1.1 - and yes we did compile the runtime libs with the
> enable 64 bit.
>
> The libs compile fine and link with our application code fine; When did not
> have the enable 64 bit the link against our application code would fail
> because the libs were built in 32 bit.
>
>
>
> May be I should try with 3.3 (the latest version of antlr).
>
> thank you
>
> -Krishna
>
> On Fri, Feb 25, 2011 at 10:34 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Did you set the enable-64bit flag when you built the runtime? Did you use
> the latest release? It is 64 bit compatible and ANTLR_MARKER is 64 bits
> when
> you build the runtime for 64 bits. Sounds like you built it with the
> default
> 32 bits.
>
>
>
> Jim
>
>
>
> *From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
> *Sent:* Friday, February 25, 2011 10:32 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] generating C code from g3pl file for 64 bit
>
> linux
>
>
>
> Well the generated code is using ANTLR_UINT32 variable and is assigning
> ANTLR_MARKER type value to it; this doesn't work on 64 bit. So I was
> wondering if the generated C code is dependent on 32 vs 64 bit.
>
>
>
> Is there a way to make it use UINT64 instead of UINT32?
>
>
>
> thanks
>
> -Krishna
>
> On Fri, Feb 25, 2011 at 9:01 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> 1) What file is this and from where?
> 2) These days you can just rename it to a .g file, the extension names
> were because older versions of Visual Studio needed it to see what the
> output files were but that isn't relevant any more.
> 3) The generated C is the same on all platforms and there is nothing
> special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc. In
> fact it is designed so that you can generate the C on one platform and
> compile it on any. I had to do that because HPUX Java (and HPUX in
> general) sucks and could not even run the ANTLR tool jar without patching
> the kernel.
>
> So, just like any other file you run the ANTLR tool on it and it will give
> you a .c and .h file. The generated files are both 32 and 64 bit
> compatible but if you read the docs for the C runtime it will point you at
> ./configure --help where you will see a flag that you supply to build the
> libraries in 64 bit mode.
>
> As to searching all over the interweb, look at the API documentation link
> on the ANTLR home page and remember antlr.markmail.org as per the link on
> the support page.
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> > Sent: Thursday, February 24, 2011 4:59 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] generating C code from g3pl file for 64 bit
> > linux
> >
> > I searched all over the net, but can't find a way to compile g3pl file
> > to generate C code for 64 bit target.
> > Any help is appreciated.
> > thanks a lot.
> > -Krishna
> >
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Feb 25 16:37:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 25 Feb 2011 16:37:21 -0800
Subject: [antlr-interest] generating C code from g3pl file for 64 bit
	linux
In-Reply-To: <AANLkTimw6e5+HGoA47zRw9dgFvRoujhz+0mN7-Q3biMK@mail.gmail.com>
References: <AANLkTimQiUA6V1QLwALrmiBkhTjxCiLwUDSPgKfJ5rta@mail.gmail.com>
	<66ee2d12007c7ceab604fa1de331a239@mail.gmail.com>	<AANLkTin0RQPT20B8_HMDioc0N3JTxvCa7FO6U3byNc3u@mail.gmail.com>
	<24cee804f3dd3c44eb091d0fea1ecf0f@mail.gmail.com>	<AANLkTinEa0QzU+ESUyJT=y4GE19_3dXKm=j1nkFcjztb@mail.gmail.com>
	<7655d03a674483e9e3086104fd294eb6@mail.gmail.com>
	<AANLkTimw6e5+HGoA47zRw9dgFvRoujhz+0mN7-Q3biMK@mail.gmail.com>
Message-ID: <642f038eaa78e88323a6e602c1172013@mail.gmail.com>

You have a version of java that is too old it looks like. Use the Sun java
as everything else is pretty flakey IMO.

Also the C runtime does not support 3.3 yet - I hope to release it next
week.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> Sent: Friday, February 25, 2011 4:15 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] generating C code from g3pl file for 64
> bit linux
>
> I tried using 3.3;
> Not sure what I am doing wrong...but the code doesn't even get
> generated now.
> Here's the error message.
> thanks
> -Krishna
>
> ectflnx1001> java -cp
> "/disks/data1/HDMT/hdmt_project/thirdparty/Antlr/antlr-3.3/lib/antlr-
> 3.3-complete.jar"
> org.antlr.Tool
> /disks/data1/HDMT/hdmt_project/src/hdmt/tos/common/HdmtTplParser2/tplPa
> rser.g3pl
> -fo .
>
> Exception in thread "main" java.lang.UnsupportedClassVersionError:
> org/antlr/Tool (Unsupported major.minor version 49.0)
>
>         at java.lang.ClassLoader.defineClass0(Native Method)
>
>         at java.lang.ClassLoader.defineClass(ClassLoader.java:502)
>
>         at
> java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)
>
>         at java.net.URLClassLoader.defineClass(URLClassLoader.java:250)
>
>         at java.net.URLClassLoader.access$100(URLClassLoader.java:54)
>
>         at java.net.URLClassLoader$1.run(URLClassLoader.java:193)
>
>         at java.security.AccessController.doPrivileged(Native Method)
>
>         at java.net.URLClassLoader.findClass(URLClassLoader.java:186)
>
>         at java.lang.ClassLoader.loadClass(ClassLoader.java:299)
>
>         at
> sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:265)
>
>         at java.lang.ClassLoader.loadClass(ClassLoader.java:255)
>
>         at
> java.lang.ClassLoader.loadClassInternal(ClassLoader.java:315)
>
> On Fri, Feb 25, 2011 at 12:34 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
>
> > I think that there is one place where the generated code is not quite
> > correct - something to do with tree parser output. Can you post the
> > error you are getting or send me the grammar files?
> >
> >
> >
> > Jim
> >
> >
> >
> > *From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
> > *Sent:* Friday, February 25, 2011 11:11 AM
> > *To:* Jim Idle
> > *Cc:* antlr-interest at antlr.org
> > *Subject:* Re: [antlr-interest] generating C code from g3pl file for
> > 64 bit linux
> >
> >
> >
> > we are using antlr 3.1.1 - and yes we did compile the runtime libs
> > with the enable 64 bit.
> >
> > The libs compile fine and link with our application code fine; When
> > did not have the enable 64 bit the link against our application code
> > would fail because the libs were built in 32 bit.
> >
> >
> >
> > May be I should try with 3.3 (the latest version of antlr).
> >
> > thank you
> >
> > -Krishna
> >
> > On Fri, Feb 25, 2011 at 10:34 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >
> > Did you set the enable-64bit flag when you built the runtime? Did you
> > use the latest release? It is 64 bit compatible and ANTLR_MARKER is
> 64
> > bits when you build the runtime for 64 bits. Sounds like you built it
> > with the default
> > 32 bits.
> >
> >
> >
> > Jim
> >
> >
> >
> > *From:* Krishna Venuturimilli [mailto:krishnavss at gmail.com]
> > *Sent:* Friday, February 25, 2011 10:32 AM
> > *To:* Jim Idle
> > *Cc:* antlr-interest at antlr.org
> > *Subject:* Re: [antlr-interest] generating C code from g3pl file for
> > 64 bit
> >
> > linux
> >
> >
> >
> > Well the generated code is using ANTLR_UINT32 variable and is
> > assigning ANTLR_MARKER type value to it; this doesn't work on 64 bit.
> > So I was wondering if the generated C code is dependent on 32 vs 64
> bit.
> >
> >
> >
> > Is there a way to make it use UINT64 instead of UINT32?
> >
> >
> >
> > thanks
> >
> > -Krishna
> >
> > On Fri, Feb 25, 2011 at 9:01 AM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >
> > 1) What file is this and from where?
> > 2) These days you can just rename it to a .g file, the extension
> names
> > were because older versions of Visual Studio needed it to see what
> the
> > output files were but that isn't relevant any more.
> > 3) The generated C is the same on all platforms and there is nothing
> > special to do to generate 64 but, 32 bit, Linux, Win32, Solaris etc.
> > In fact it is designed so that you can generate the C on one platform
> > and compile it on any. I had to do that because HPUX Java (and HPUX
> in
> > general) sucks and could not even run the ANTLR tool jar without
> > patching the kernel.
> >
> > So, just like any other file you run the ANTLR tool on it and it will
> > give you a .c and .h file. The generated files are both 32 and 64 bit
> > compatible but if you read the docs for the C runtime it will point
> > you at ./configure --help where you will see a flag that you supply
> to
> > build the libraries in 64 bit mode.
> >
> > As to searching all over the interweb, look at the API documentation
> > link on the ANTLR home page and remember antlr.markmail.org as per
> the
> > link on the support page.
> >
> > Jim
> >
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Krishna Venuturimilli
> > > Sent: Thursday, February 24, 2011 4:59 PM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] generating C code from g3pl file for 64
> > > bit linux
> > >
> > > I searched all over the net, but can't find a way to compile g3pl
> > > file to generate C code for 64 bit target.
> > > Any help is appreciated.
> > > thanks a lot.
> > > -Krishna
> > >
> >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Fri Feb 25 17:41:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 25 Feb 2011 17:41:08 -0800
Subject: [antlr-interest] and, finally, ternary operator works
Message-ID: <BE6EFF21-3DE3-4931-A1E9-DE538E55A104@cs.usfca.edu>

Wow. I'm having fun.  I guess i'll bring into main line now.  The beauty is that I'm generating another grammar with very little target code needed.  I will add the following to each target:

// used for left-recursive rules
recRuleDefArg() ::= "int <recRuleArg()>"
recRuleArg() ::= "_p"
recRuleAltPredicate(ruleName,opPrec) ::= "<recRuleArg()> \<= <opPrec>"
recRuleSetResultAction() ::= "root_0=$<ruleName>_primary.tree;"

That will be correct for most targets.  here's output for the below test:

e_[int _p]
    :   e_primary {root_0=$e_primary.tree;}
        (
          ( {_p <= 6}?=> '*'^ e_[7]{}
        | {_p <= 5}?=> '+'^ e_[6]{}
        | {_p <= 3}?=> '='<assoc=right>^ e_[3]{}
        | {_p <= 4}?=> '?'<assoc=right>^ e ':'! e_[4]{}
          )
        )*
    ;

here's another test. 

	@Test public void testTernaryExpr() throws Exception {
		String grammar =
			"grammar T;\n" +
			"options {output=AST;}\n" +
			"e : e '*'^ e" +
			"  | e '+'^ e" +
			"  | e '?'<assoc=right>^ e ':'! e" +
			"  | e '='<assoc=right>^ e" +
			"  | ID" +
			"  ;\n" +
			"ID : 'a'..'z'+ ;\n" +
			"WS : (' '|'\\n') {skip();} ;\n";
		String[] tests = {
			"a",			"a",
			"a+b",			"(+ a b)",
			"a*b",			"(* a b)",
			"a?b:c",		"(? a b c)",
			"a=b=c",		"(= a (= b c))",
			"a?b+c:d",		"(? a (+ b c) d)",
			"a?b=c:d",		"(? a (= b c) d)",
			"a? b?c:d : e",	"(? a (? b c d) e)",
			"a?b: c?d:e",	"(? a b (? c d e))",
		};
		runTests(grammar, tests, "e");
	}

 ternary is pretty weird.  C and Java grammars show

ConditionalExpression:
	ConditionalOrExpression
	ConditionalOrExpression ? Expression : ConditionalExpression

So it's right associative but middle expr acts like (expr).

Ter

From david.daeschler at gmail.com  Fri Feb 25 18:13:21 2011
From: david.daeschler at gmail.com (David Daeschler)
Date: Fri, 25 Feb 2011 21:13:21 -0500
Subject: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue with
 collected template list
In-Reply-To: <009001cbd552$a29aa730$e7cff590$@pixelminegames.com>
References: <AANLkTinbc5hvHOmjnWJvw+EMWqsb6f=G6aQ2QGZWQR5+@mail.gmail.com>
	<007d01cbd526$bdf5fec0$39e1fc40$@pixelminegames.com>
	<AANLkTinWsMctppGNZidtCe3RNjnh8pYqFeDOM1DNDZ=p@mail.gmail.com>
	<008101cbd531$63081920$29184b60$@pixelminegames.com>
	<AANLkTimMbSpMiinHresv=h5xLsLeK5fCGGt6p4wfy8KA@mail.gmail.com>
	<009001cbd552$a29aa730$e7cff590$@pixelminegames.com>
Message-ID: <AANLkTi=dEeJCzyvdqovuJTkr148vH-ntdC_2W7pxdzO1@mail.gmail.com>

Sam,

Thank you so much. It works!

Sorry for not having the list in the To: field I didn't realize these
weren't going to the list until just now. Hopefully this can help someone
else.

Thanks again for your hard work!
- David

On Fri, Feb 25, 2011 at 8:15 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> Hi David,
>
>
>
> This one was my fault. Got an extra set of angle brackets goin? on.
>
>
>
> The part of the template reading this:
>
>
>
> List\<<StringTemplate>\>
>
>
>
> Should actually be this:
>
>
>
> List\<StringTemplate\>
>
>
>
> Sam
>
>
>
> *From:* David Daeschler [mailto:david.daeschler at gmail.com]
> *Sent:* Friday, February 25, 2011 3:46 PM
>
> *To:* Sam Harwell
> *Subject:* Re: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue with
> collected template list
>
>
>
> Hey Sam,
>
>
>
> Sorry I should have noticed that. I removed the errant line break and I got
> an even bigger error while it was trying to generate the parser:
>
>
>
> error(10):  internal error: Gen.g : System.ArgumentException: no such
> attribute:
>
>  StringTemplate in template context [outputFile treeParser
> genericParser(...) ru
>
> le ruleLabelDefs anonymous]
>
>    at
> Antlr3.ST.StringTemplate.CheckNullAttributeAgainstFormalArguments(StringTe
>
> mplate self, String attribute) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3
>
> .StringTemplate\StringTemplate.cs:line 1656
>
>    at Antlr3.ST.StringTemplate.GetAttribute(String name) in
> c:\dev\stringtemplat
>
> e_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line 967
>
>    at
> Antlr3.ST.Language.ActionEvaluator.<>c__DisplayClass36.<actionFunctional>b
>
> __34(ASTExpr chunk, StringTemplate self, IStringTemplateWriter writer) in
> c:\dev
>
>
> \stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\obj\Release\ActionEvalua
>
> tor.cs:line 2091
>
>    at
> Antlr3.ST.Language.ASTExpr.HoldsActionFuncAndChunk.Evaluate(StringTemplate
>
>  template, IStringTemplateWriter writer) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 149
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self,
> IStringTemplateWrite
>
> r out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\Language
>
> \ASTExpr.cs:line 318
>
>    at Antlr3.ST.StringTemplate.Write(IStringTemplateWriter writer) in
> c:\dev\str
>
> ingtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line
> 992
>
>    at Antlr3.ST.Language.ASTExpr.WriteTemplate(StringTemplate self,
> StringTempla
>
> te stToWrite, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 1111
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1023
>
>    at Antlr3.ST.Language.ASTExpr.WriteIterableValue(StringTemplate self,
> Iterato
>
> r iter, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\An
>
> tlr3.StringTemplate\Language\ASTExpr.cs:line 1163
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1029
>
>    at
> Antlr3.ST.Language.ASTExpr.HoldsActionFuncAndChunk.Evaluate(StringTemplate
>
>  template, IStringTemplateWriter writer) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 149
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self,
> IStringTemplateWrite
>
> r out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\Language
>
> \ASTExpr.cs:line 318
>
>    at Antlr3.ST.StringTemplate.Write(IStringTemplateWriter writer) in
> c:\dev\str
>
> ingtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line
> 992
>
>    at Antlr3.ST.Language.ASTExpr.WriteTemplate(StringTemplate self,
> StringTempla
>
> te stToWrite, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 1111
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1023
>
>    at
> Antlr3.ST.Language.ASTExpr.HoldsActionFuncAndChunk.Evaluate(StringTemplate
>
>  template, IStringTemplateWriter writer) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 149
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self,
> IStringTemplateWrite
>
> r out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\Language
>
> \ASTExpr.cs:line 318
>
>    at Antlr3.ST.StringTemplate.Write(IStringTemplateWriter writer) in
> c:\dev\str
>
> ingtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line
> 992
>
>    at Antlr3.ST.Language.ASTExpr.WriteTemplate(StringTemplate self,
> StringTempla
>
> te stToWrite, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 1111
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1023
>
>    at Antlr3.ST.Language.ASTExpr.WriteIterableValue(StringTemplate self,
> Iterato
>
> r iter, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\An
>
> tlr3.StringTemplate\Language\ASTExpr.cs:line 1163
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1029
>
>    at
> Antlr3.ST.Language.ASTExpr.HoldsActionFuncAndChunk.Evaluate(StringTemplate
>
>  template, IStringTemplateWriter writer) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 149
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self,
> IStringTemplateWrite
>
> r out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\Language
>
> \ASTExpr.cs:line 318
>
>    at Antlr3.ST.StringTemplate.Write(IStringTemplateWriter writer) in
> c:\dev\str
>
> ingtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line
> 992
>
>    at Antlr3.ST.Language.ASTExpr.WriteTemplate(StringTemplate self,
> StringTempla
>
> te stToWrite, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 1111
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1023
>
>    at
> Antlr3.ST.Language.ASTExpr.HoldsActionFuncAndChunk.Evaluate(StringTemplate
>
>  template, IStringTemplateWriter writer) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 149
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self,
> IStringTemplateWrite
>
> r out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\Language
>
> \ASTExpr.cs:line 318
>
>    at Antlr3.ST.StringTemplate.Write(IStringTemplateWriter writer) in
> c:\dev\str
>
> ingtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line
> 992
>
>    at Antlr3.ST.Language.ASTExpr.WriteTemplate(StringTemplate self,
> StringTempla
>
> te stToWrite, IStringTemplateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 1111
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self, Object o,
> IStringTem
>
> plateWriter out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplat
>
> e\Language\ASTExpr.cs:line 1023
>
>    at
> Antlr3.ST.Language.ASTExpr.HoldsActionFuncAndChunk.Evaluate(StringTemplate
>
>  template, IStringTemplateWriter writer) in
> c:\dev\stringtemplate_main\antlrcs\m
>
> ain\Antlr3.StringTemplate\Language\ASTExpr.cs:line 149
>
>    at Antlr3.ST.Language.ASTExpr.Write(StringTemplate self,
> IStringTemplateWrite
>
> r out) in
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\Language
>
> \ASTExpr.cs:line 318
>
>    at Antlr3.ST.StringTemplate.Write(IStringTemplateWriter writer) in
> c:\dev\str
>
> ingtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line
> 992
>
>    at Antlr3.Codegen.CodeGenerator.Write(StringTemplate code, String
> fileName) i
>
> n
> c:\dev\stringtemplate_main\antlrcs\main\Antlr3\Codegen\CodeGenerator.cs:line
> 1
>
> 604
>
>    at Antlr3.Targets.CSharp3Target.GenRecognizerFile(AntlrTool tool,
> CodeGenerat
>
> or generator, Grammar grammar, StringTemplate outputFileST) in
> c:\dev\stringtemp
>
>
> late_main\antlrcs\main\Antlr3.Targets\Antlr3.Targets.CSharp3\CSharp3Target.cs:li
>
> ne 86
>
>    at Antlr3.Codegen.CodeGenerator.GenRecognizer() in
> c:\dev\stringtemplate_main
>
> \antlrcs\main\Antlr3\Codegen\CodeGenerator.cs:line 739
>
>    at Antlr3.AntlrTool.GenerateRecognizer(Grammar grammar) in
> c:\dev\stringtempl
>
> ate_main\antlrcs\main\Antlr3\AntlrTool.cs:line 762
>
>    at Antlr3.AntlrTool.Process() in
> c:\dev\stringtemplate_main\antlrcs\main\Antl
>
> r3\AntlrTool.cs:line 561
>
> CheckNullAttributeAgainstFormalArguments at offset 225 in file:line:column
> c:\de
>
>
> v\stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:1656:
>
> 17
>
>
>
> GetAttribute at offset 57 in file:line:column
> c:\dev\stringtemplate_main\antlrcs
>
> \main\Antlr3.StringTemplate\StringTemplate.cs:967:13
>
>
>
> <actionFunctional>b__34 at offset 36 in file:line:column
> c:\dev\stringtemplate_m
>
>
> ain\antlrcs\main\Antlr3.StringTemplate\obj\Release\ActionEvaluator.cs:2091:37
>
>
>
> Evaluate at offset 28 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3.StringTemplate\Language\ASTExpr.cs:149:17
>
>
>
> Write at offset 445 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:318:21
>
>
>
> Write at offset 155 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\StringTemplate.cs:992:17
>
>
>
> WriteTemplate at offset 305 in file:line:column
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1111:17
>
>
>
> Write at offset 204 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1023:21
>
>
>
> WriteIterableValue at offset 484 in file:line:column
> c:\dev\stringtemplate_main\
>
> antlrcs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1163:29
>
>
>
> Write at offset 268 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1029:21
>
>
>
> Evaluate at offset 28 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3.StringTemplate\Language\ASTExpr.cs:149:17
>
>
>
> Write at offset 445 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:318:21
>
>
>
> Write at offset 155 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\StringTemplate.cs:992:17
>
>
>
> WriteTemplate at offset 305 in file:line:column
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1111:17
>
>
>
> Write at offset 204 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1023:21
>
>
>
> Evaluate at offset 28 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3.StringTemplate\Language\ASTExpr.cs:149:17
>
>
>
> Write at offset 445 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:318:21
>
>
>
> Write at offset 155 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\StringTemplate.cs:992:17
>
>
>
> WriteTemplate at offset 305 in file:line:column
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1111:17
>
>
>
> Write at offset 204 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1023:21
>
>
>
> WriteIterableValue at offset 484 in file:line:column
> c:\dev\stringtemplate_main\
>
> antlrcs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1163:29
>
>
>
> Write at offset 268 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1029:21
>
>
>
> Evaluate at offset 28 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3.StringTemplate\Language\ASTExpr.cs:149:17
>
>
>
> Write at offset 445 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:318:21
>
>
>
> Write at offset 155 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\StringTemplate.cs:992:17
>
>
>
> WriteTemplate at offset 305 in file:line:column
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1111:17
>
>
>
> Write at offset 204 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1023:21
>
>
>
> Evaluate at offset 28 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3.StringTemplate\Language\ASTExpr.cs:149:17
>
>
>
> Write at offset 445 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:318:21
>
>
>
> Write at offset 155 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\StringTemplate.cs:992:17
>
>
>
> WriteTemplate at offset 305 in file:line:column
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\Language\ASTExpr.cs:1111:17
>
>
>
> Write at offset 204 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:1023:21
>
>
>
> Evaluate at offset 28 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3.StringTemplate\Language\ASTExpr.cs:149:17
>
>
>
> Write at offset 445 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\Language\ASTExpr.cs:318:21
>
>
>
> Write at offset 155 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\StringTemplate.cs:992:17
>
>
>
> Write at offset 109 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3\Codegen\CodeGenerator.cs:1604:13
>
>
>
> GenRecognizerFile at offset 132 in file:line:column
> c:\dev\stringtemplate_main\a
>
> ntlrcs\main\Antlr3.Targets\Antlr3.Targets.CSharp3\CSharp3Target.cs:86:13
>
>
>
> GenRecognizer at offset 3139 in file:line:column
> c:\dev\stringtemplate_main\antl
>
> rcs\main\Antlr3\Codegen\CodeGenerator.cs:739:17
>
>
>
> GenerateRecognizer at offset 234 in file:line:column
> c:\dev\stringtemplate_main\
>
> antlrcs\main\Antlr3\AntlrTool.cs:762:17
>
>
>
> Process at offset 591 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\mai
>
> n\Antlr3\AntlrTool.cs:561:21
>
>
>
> Thanks again,
>
> --
> David Daeschler
>
>
>
>
>
> On Fri, Feb 25, 2011 at 4:17 PM, Sam Harwell <sharwell at pixelminegames.com>
> wrote:
>
> Looks like wordwrap got you. ?wildcardTreeLabels? is one word.
>
>
>
> Let me know if that gets it fixed. :)
>
>
>
> Sam
>
>
>
> *From:* David Daeschler [mailto:david.daeschler at gmail.com]
> *Sent:* Friday, February 25, 2011 2:14 PM
> *To:* Sam Harwell
> *Subject:* Re: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue with
> collected template list
>
>
>
> Hi Sam,
>
>
>
> Thank you very much for the quick response.
>
>
>
> Pasting that to the bottom of ST.stg in the Codegen\Templates\CSharp3
> subdirectory yields the following errors when I run the template, note like
> 16t0 is where ruleLabelDefs() ::= << begins:
>
>
>
>
>
> error(10):  internal error: action parse error in group ST line 160;
> template co
>
> ntext is [ruleLabelDefs] : MismatchedTokenException(ID!=RBRACK)
>
> RecoverFromMismatchedToken at offset 381 in file:line:column
> c:\dev\stringtempla
>
>
> te_main\antlr\main\runtime\CSharp3\Sources\Antlr3.Runtime\BaseRecognizer.cs:726:
>
> 13
>
>
>
> Match at offset 149 in file:line:column
> c:\dev\stringtemplate_main\antlr\main\ru
>
> ntime\CSharp3\Sources\Antlr3.Runtime\BaseRecognizer.cs:157:13
>
>
>
> list at offset 773 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\A
>
> ntlr3.StringTemplate\obj\Release\ActionParser.cs:3036:4
>
>
>
> error(10):  internal error: problem parsing template 'ruleLabelDefs' :
> System.In
>
> validCastException: Unable to cast object of type
> 'Antlr.Runtime.Tree.CommonErro
>
> rNode' to type 'Antlr3.ST.Language.StringTemplateAST'.
>
>    at Antlr3.ST.Language.ActionParser.list() in
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:line 3051
>
>    at Antlr3.ST.Language.ActionParser.primaryExpr() in
> c:\dev\stringtemplate_mai
>
> n\antlrcs\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:line 1723
>
>    at Antlr3.ST.Language.ActionParser.expr() in
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:line 1318
>
>    at Antlr3.ST.Language.ActionParser.templatesExpr() in
> c:\dev\stringtemplate_m
>
> ain\antlrcs\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:line 652
>
>    at Antlr3.ST.Language.ActionParser.action() in
> c:\dev\stringtemplate_main\ant
>
> lrcs\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:line 234
>
>    at Antlr3.ST.StringTemplate.ParseAction(String action) in
> c:\dev\stringtempla
>
> te_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line 1173
>
>    at Antlr3.ST.Language.TemplateParser.action(StringTemplate self) in
> c:\dev\st
>
>
> ringtemplate_main\antlrcs\main\Antlr3.StringTemplate\obj\Release\TemplateParser.
>
> cs:line 303
>
>    at Antlr3.ST.Language.TemplateParser.template(StringTemplate self) in
> c:\dev\
>
>
> stringtemplate_main\antlrcs\main\Antlr3.StringTemplate\obj\Release\TemplateParse
>
> r.cs:line 171
>
>    at Antlr3.ST.StringTemplate.BreakTemplateIntoChunks() in
> c:\dev\stringtemplat
>
> e_main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:line 1145
>
> list at offset 1221 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\
>
> Antlr3.StringTemplate\obj\Release\ActionParser.cs:3051:3
>
>
>
> primaryExpr at offset 2387 in file:line:column
> c:\dev\stringtemplate_main\antlrc
>
> s\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:1723:5
>
>
>
> expr at offset 221 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main\A
>
> ntlr3.StringTemplate\obj\Release\ActionParser.cs:1318:4
>
>
>
> templatesExpr at offset 419 in file:line:column
> c:\dev\stringtemplate_main\antlr
>
> cs\main\Antlr3.StringTemplate\obj\Release\ActionParser.cs:652:4
>
>
>
> action at offset 493 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main
>
> \Antlr3.StringTemplate\obj\Release\ActionParser.cs:234:5
>
>
>
> ParseAction at offset 150 in file:line:column
> c:\dev\stringtemplate_main\antlrcs
>
> \main\Antlr3.StringTemplate\StringTemplate.cs:1173:17
>
>
>
> action at offset 388 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\main
>
> \Antlr3.StringTemplate\obj\Release\TemplateParser.cs:303:8
>
>
>
> template at offset 564 in file:line:column
> c:\dev\stringtemplate_main\antlrcs\ma
>
> in\Antlr3.StringTemplate\obj\Release\TemplateParser.cs:171:6
>
>
>
> BreakTemplateIntoChunks at offset 227 in file:line:column
> c:\dev\stringtemplate_
>
> main\antlrcs\main\Antlr3.StringTemplate\StringTemplate.cs:1145:17
>
>
>
>
>
> On Fri, Feb 25, 2011 at 3:01 PM, Sam Harwell <sharwell at pixelminegames.com>
> wrote:
>
> Hi David,
>
> Can you add the following template to the CSharp3 target's ST.stg which is
> used for generating code. Let me know if it resolves the issue for you. If
> this works, I'll clean it up (only overriding the necessary portion) and
> get
> it checked in for the next release.
>
> ruleLabelDefs() ::= <<
>
> <[ruleDescriptor.tokenLabels,ruleDescriptor.tokenListLabels,ruleDescriptor.w
> ildcardTreeLabels,ruleDescriptor.wildcardTreeListLabels]
>    :{<labelType> <it.label.text> = default(<labelType>);}; separator="\n"
> >
> <ruleDescriptor.tokenListLabels
>    :{List\<<labelType>\> list_<it.label.text> = null;}; separator="\n"
> >
> <ruleDescriptor.ruleListLabels
>    :{List\<<StringTemplate>\> list_<it.label.text> = null;}; separator="\n"
> >
> <ruleDescriptor.wildcardTreeListLabels
>    :{List\<<ASTLabelType>\> list_<it.label.text> = null;}; separator="\n"
> >
> <ruleDescriptor.ruleLabels:ruleLabelDef(label=it); separator="\n">
> <ruleDescriptor.ruleListLabels:ruleLabelDef(label=it); separator="\n">
> >>
>
>
> Thanks,
> Sam
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Daeschler
> Sent: Friday, February 25, 2011 1:25 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C# antlr-dotnet-tool-3.3.1.7705 issue with
> collected template list
>
> Hello,
>
> I am using antlr-dotnet-tool-3.3.1.7705 and beginning work on a template to
> translate from a high level language to bytecode.
>
> One of my rules looks something like this:
>
> script : (g+=globalVar)+
> -> file(globalVars={$g})
>
> globalVar
> : ^(VAR_DECL TYPE ID .?)
> -> vardec(type={$TYPE.text}, id={$ID.text})
> ;
>
> It appears that the code being generated in this case to collect the
> templates is slightly off. The type of list to hold the returned result is:
>
> List<MyAST> list_g = null;
>
> But when the collection is done, it is expecting the list to hold a
> stringtemplate:
>
> if (list_g==null) list_g=new List<StringTemplate>();
> list_g.Add(g.Template);
>
> I have confirmed my output is set correctly:
>
> options {
> language = 'CSharp3';
> tokenVocab = MyVocab;
> ASTLabelType = MyAST;
> output = template;
> }
>
>
> Is there anything else I need to do?
>
> Thank you very much for any help.
> --
> David Daeschler
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> --
> David Daeschler
>
>
>
>

From sharwell at pixelminegames.com  Fri Feb 25 19:14:37 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 25 Feb 2011 21:14:37 -0600
Subject: [antlr-interest] and, finally, ternary operator works
In-Reply-To: <BE6EFF21-3DE3-4931-A1E9-DE538E55A104@cs.usfca.edu>
References: <BE6EFF21-3DE3-4931-A1E9-DE538E55A104@cs.usfca.edu>
Message-ID: <009801cbd563$4d5ead00$e81c0700$@pixelminegames.com>

Ternary for C++ is even stranger, though I'm not sure it's necessary to
support it at this point.

x ? a : b = c

should parse as this in C++:

(? x a (= b c))

But as this is C (which is found to be invalid at a later time since the
ternary operator cannot return an lvalue in C):

(= (? x a b) c)

However, in both C and C++ the following:

x = c ? a : b

Should parse as:

(= x (? c a b))

I've been watching for those check-ins, and I see one now! :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Friday, February 25, 2011 7:41 PM
To: antlr-interest Interest
Subject: [antlr-interest] and, finally, ternary operator works

Wow. I'm having fun.  I guess i'll bring into main line now.  The beauty is
that I'm generating another grammar with very little target code needed.  I
will add the following to each target:

// used for left-recursive rules
recRuleDefArg() ::= "int <recRuleArg()>"
recRuleArg() ::= "_p"
recRuleAltPredicate(ruleName,opPrec) ::= "<recRuleArg()> \<= <opPrec>"
recRuleSetResultAction() ::= "root_0=$<ruleName>_primary.tree;"

That will be correct for most targets.  here's output for the below test:

e_[int _p]
    :   e_primary {root_0=$e_primary.tree;}
        (
          ( {_p <= 6}?=> '*'^ e_[7]{}
        | {_p <= 5}?=> '+'^ e_[6]{}
        | {_p <= 3}?=> '='<assoc=right>^ e_[3]{}
        | {_p <= 4}?=> '?'<assoc=right>^ e ':'! e_[4]{}
          )
        )*
    ;

here's another test. 

	@Test public void testTernaryExpr() throws Exception {
		String grammar =
			"grammar T;\n" +
			"options {output=AST;}\n" +
			"e : e '*'^ e" +
			"  | e '+'^ e" +
			"  | e '?'<assoc=right>^ e ':'! e" +
			"  | e '='<assoc=right>^ e" +
			"  | ID" +
			"  ;\n" +
			"ID : 'a'..'z'+ ;\n" +
			"WS : (' '|'\\n') {skip();} ;\n";
		String[] tests = {
			"a",			"a",
			"a+b",			"(+ a b)",
			"a*b",			"(* a b)",
			"a?b:c",		"(? a b c)",
			"a=b=c",		"(= a (= b c))",
			"a?b+c:d",		"(? a (+ b c) d)",
			"a?b=c:d",		"(? a (= b c) d)",
			"a? b?c:d : e",	"(? a (? b c d) e)",
			"a?b: c?d:e",	"(? a b (? c d e))",
		};
		runTests(grammar, tests, "e");
	}

 ternary is pretty weird.  C and Java grammars show

ConditionalExpression:
	ConditionalOrExpression
	ConditionalOrExpression ? Expression : ConditionalExpression

So it's right associative but middle expr acts like (expr).

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From douglasgodfrey at gmail.com  Sat Feb 26 02:23:43 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Sat, 26 Feb 2011 05:23:43 -0500
Subject: [antlr-interest] strange bug in AntlrWorks
Message-ID: <AANLkTikkmE097_shSfLSRHc=i8tL5hafZ4jwO=Yh80cx@mail.gmail.com>

I have a large combined grammar for SQL:2003 that I have just converted from
the ISO BNF grammar.

When I put the cursor over a Parser rule I get the normal syntax diagram.

When I put the cursor over a Lexer rule I get the message:
Cannot display rule "xxxx" because start state not found.

The grammar file is names sql2003.g and the start rule is defined as the
first parser rule in the grammar file.

sql2003
    :    ( sql_client_module_definition
        | externally_invoked_procedure
        | sql_invoked_procedure
        | sql_invoked_function
        | sql_procedure_statement
        )
        EOF
    ;

I thought that the Lexer has no "Start State" as such and instead tries to
invoke each Lexer rule in order.

From researcher0x00 at gmail.com  Sat Feb 26 05:49:46 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Sat, 26 Feb 2011 08:49:46 -0500
Subject: [antlr-interest] 40% discount from Pragmatic Bookshelf. Takes two
 people, need someone else who wants 40% discount.
Message-ID: <AANLkTi=RLC695w1w1vL0U5umnWaB62AeY=2tJZS4VFVR@mail.gmail.com>

I was in the process of buying Terences's books from The Pragmaic Bookshelp
when I found the 40% discount.

http://pragprog.com/promotions/invite-a-friend

I don't know if anyone can do this, or they have to an existing customer.

If someone else is interested in the 40% discount, please let me know and we
can both benefit.
Either way I will by buying them by Monday evening.

Thanks

From parrt at cs.usfca.edu  Sat Feb 26 08:46:43 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 26 Feb 2011 08:46:43 -0800
Subject: [antlr-interest] strange bug in AntlrWorks
In-Reply-To: <AANLkTikkmE097_shSfLSRHc=i8tL5hafZ4jwO=Yh80cx@mail.gmail.com>
References: <AANLkTikkmE097_shSfLSRHc=i8tL5hafZ4jwO=Yh80cx@mail.gmail.com>
Message-ID: <DA2B319F-8D2E-4060-A014-2745D89F1867@cs.usfca.edu>

yeah, AW is kinda hosed at moment in some ways. I need time to dig into it.
Ter
On Feb 26, 2011, at 2:23 AM, Douglas Godfrey wrote:

> I have a large combined grammar for SQL:2003 that I have just converted from
> the ISO BNF grammar.
> 
> When I put the cursor over a Parser rule I get the normal syntax diagram.
> 
> When I put the cursor over a Lexer rule I get the message:
> Cannot display rule "xxxx" because start state not found.
> 
> The grammar file is names sql2003.g and the start rule is defined as the
> first parser rule in the grammar file.
> 
> sql2003
>    :    ( sql_client_module_definition
>        | externally_invoked_procedure
>        | sql_invoked_procedure
>        | sql_invoked_function
>        | sql_procedure_statement
>        )
>        EOF
>    ;
> 
> I thought that the Lexer has no "Start State" as such and instead tries to
> invoke each Lexer rule in order.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Feb 26 08:48:47 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 26 Feb 2011 08:48:47 -0800
Subject: [antlr-interest] and, finally, ternary operator works
In-Reply-To: <009801cbd563$4d5ead00$e81c0700$@pixelminegames.com>
References: <BE6EFF21-3DE3-4931-A1E9-DE538E55A104@cs.usfca.edu>
	<009801cbd563$4d5ead00$e81c0700$@pixelminegames.com>
Message-ID: <C9BFE1AF-0446-4764-90CD-315CA359381E@cs.usfca.edu>


On Feb 25, 2011, at 7:14 PM, Sam Harwell wrote:

> Ternary for C++ is even stranger, though I'm not sure it's necessary to
> support it at this point.

C/C++ do it differently?

> 
> x ? a : b = c
> 
> should parse as this in C++:
> 
> (? x a (= b c))

ack.

> But as this is C (which is found to be invalid at a later time since the
> ternary operator cannot return an lvalue in C):
> 
> (= (? x a b) c)
> 
> However, in both C and C++ the following:
> 
> x = c ? a : b
> 
> Should parse as:
> 
> (= x (? c a b))

coorect.

> I've been watching for those check-ins, and I see one now! :)
> 

you'll be disappointed with size reduction. I only got 50% or so.  speed test coming.

Ter

From list at toolazydogs.com  Sat Feb 26 12:37:07 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sat, 26 Feb 2011 12:37:07 -0800
Subject: [antlr-interest] Status of gUnit?
In-Reply-To: <E1PsKOM-0002Nf-Nm@mouse.home.xrad.org>
References: <E1PsKOM-0002Nf-Nm@mouse.home.xrad.org>
Message-ID: <2C77A6A3-F369-433E-B1BA-EF92DE00C079@toolazydogs.com>

As an alternative to gUnit I invite you to take a look at

https://github.com/maguro/aunit

Comments and suggestions are welcome.


Regards,
Alan

On Feb 23, 2011, at 11:28 AM, antlr at xrad.org wrote:

> 
> Hi there,
> 
> I'm wondering what the status of gUnit is these days?  The SimpleC
> example on the introductory web page fails when run against
> examples-v3/java/LL-star/SimpleC.g, and various experiments of mine
> don't seem to come out as expected either.
> 
>  http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
> 
> .. as is, this fails because 
> 
>  "int x;" -> OK
> 
> doesn't appear to be valid in the current grammar (I'm using
> antlr-3.3-complete.jar) --- the "->" appears to be the problem, but if I
> remove it then I get unexpected failures --- on the above test, for
> example, all four of the OKs actually FAIL, even though the web page
> suggests that three of them should pass:
> 
>  -----------------------------------------------------------------------
>  executing testsuite for grammar:SimpleC with 11 tests
>  -----------------------------------------------------------------------
>  6 failures found:
>  test2 (variable, line7) - 
>  expected: OK
>  actual: FAIL
> 
>  test3 (functionHeader, line11) - 
>  expected: int
>  actual: Invalid input
> 
>  test4 (program, line15) - 
>  expected: OK
>  actual: FAIL
> 
>  test5 (program, line20) - 
>  expected: OK
>  actual: FAIL
> 
>  test6 (program, line22) - 
>  expected: 
>  actual: Invalid input
> 
>  test8 (ID, line28) - 
>  expected: OK
>  actual: extra text found, '@999'
> 
>  Tests run: 11, Failures: 6
> 
> I get the same experience in my own code.  This grammar:
> 
>  grammar Simple;
>  input : 'yes' ;
> 
> when run with this test:
> 
>  gunit Simple;
>  input:
>  "yes" OK
>  "x" FAIL
> 
> fails as follows:
> 
>  -----------------------------------------------------------------------
>  executing testsuite for grammar:Simple with 2 tests
>  -----------------------------------------------------------------------
>  1 failures found:
>  test1 (input, line3) - 
>  expected: OK
>  actual: FAIL
> 
>  Tests run: 2, Failures: 1
> 
> Finally, the thing I would really like to do is to test my rewriting
> grammar translator.  This doesn't work either --- there seems to be a
> fundamental problem with rewriting grammars in gUnit's internals:
> 
>  grammar Simple;
>  options { output=template; rewrite=true; }
>  input : 'yes' -> template() "no" ;
> 
> tested with this:
> 
>  gunit Simple;
>  input:
>  "yes" -> "no"
> 
> results in this:
> 
>  -----------------------------------------------------------------------
>  executing testsuite for grammar:Simple with 1 tests
>  -----------------------------------------------------------------------
>  1 failures found:
>  test1 (input, line3) - 
>  expected: no
>  actual: java.lang.ClassCastException: org.antlr.runtime.CommonTokenStream can
> not be cast to org.antlr.runtime.TokenRewriteStream
> 
>  Tests run: 1, Failures: 1
> 
> ... any suggestions?  I tried rebuilding gUnit after editing the
> offending CommonTokenStream declarations in gUnitExecutor to
> TokenRewriteStreams --- just to see if it helped --- and it does make
> things work again, at least with this trivial example.  Not so clear
> with more complex stuff though.  Something similar to this seemed to be
> reported a few years back (without official response), so I'm wondering
> whether gUnit's no longer actively maintained?
> 
> Conrad
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Feb 26 12:49:38 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 26 Feb 2011 12:49:38 -0800
Subject: [antlr-interest] Status of gUnit?
In-Reply-To: <2C77A6A3-F369-433E-B1BA-EF92DE00C079@toolazydogs.com>
References: <E1PsKOM-0002Nf-Nm@mouse.home.xrad.org>
	<2C77A6A3-F369-433E-B1BA-EF92DE00C079@toolazydogs.com>
Message-ID: <436262A1-63F0-48EE-9F1E-48DFF6F7213D@cs.usfca.edu>

No description of what it does exactly. example?
T
On Feb 26, 2011, at 12:37 PM, Alan D. Cabrera wrote:

> As an alternative to gUnit I invite you to take a look at
> 
> https://github.com/maguro/aunit
> 
> Comments and suggestions are welcome.
> 
> 
> Regards,
> Alan
> 
> On Feb 23, 2011, at 11:28 AM, antlr at xrad.org wrote:
> 
>> 
>> Hi there,
>> 
>> I'm wondering what the status of gUnit is these days?  The SimpleC
>> example on the introductory web page fails when run against
>> examples-v3/java/LL-star/SimpleC.g, and various experiments of mine
>> don't seem to come out as expected either.
>> 
>> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>> 
>> .. as is, this fails because 
>> 
>> "int x;" -> OK
>> 
>> doesn't appear to be valid in the current grammar (I'm using
>> antlr-3.3-complete.jar) --- the "->" appears to be the problem, but if I
>> remove it then I get unexpected failures --- on the above test, for
>> example, all four of the OKs actually FAIL, even though the web page
>> suggests that three of them should pass:
>> 
>> -----------------------------------------------------------------------
>> executing testsuite for grammar:SimpleC with 11 tests
>> -----------------------------------------------------------------------
>> 6 failures found:
>> test2 (variable, line7) - 
>> expected: OK
>> actual: FAIL
>> 
>> test3 (functionHeader, line11) - 
>> expected: int
>> actual: Invalid input
>> 
>> test4 (program, line15) - 
>> expected: OK
>> actual: FAIL
>> 
>> test5 (program, line20) - 
>> expected: OK
>> actual: FAIL
>> 
>> test6 (program, line22) - 
>> expected: 
>> actual: Invalid input
>> 
>> test8 (ID, line28) - 
>> expected: OK
>> actual: extra text found, '@999'
>> 
>> Tests run: 11, Failures: 6
>> 
>> I get the same experience in my own code.  This grammar:
>> 
>> grammar Simple;
>> input : 'yes' ;
>> 
>> when run with this test:
>> 
>> gunit Simple;
>> input:
>> "yes" OK
>> "x" FAIL
>> 
>> fails as follows:
>> 
>> -----------------------------------------------------------------------
>> executing testsuite for grammar:Simple with 2 tests
>> -----------------------------------------------------------------------
>> 1 failures found:
>> test1 (input, line3) - 
>> expected: OK
>> actual: FAIL
>> 
>> Tests run: 2, Failures: 1
>> 
>> Finally, the thing I would really like to do is to test my rewriting
>> grammar translator.  This doesn't work either --- there seems to be a
>> fundamental problem with rewriting grammars in gUnit's internals:
>> 
>> grammar Simple;
>> options { output=template; rewrite=true; }
>> input : 'yes' -> template() "no" ;
>> 
>> tested with this:
>> 
>> gunit Simple;
>> input:
>> "yes" -> "no"
>> 
>> results in this:
>> 
>> -----------------------------------------------------------------------
>> executing testsuite for grammar:Simple with 1 tests
>> -----------------------------------------------------------------------
>> 1 failures found:
>> test1 (input, line3) - 
>> expected: no
>> actual: java.lang.ClassCastException: org.antlr.runtime.CommonTokenStream can
>> not be cast to org.antlr.runtime.TokenRewriteStream
>> 
>> Tests run: 1, Failures: 1
>> 
>> ... any suggestions?  I tried rebuilding gUnit after editing the
>> offending CommonTokenStream declarations in gUnitExecutor to
>> TokenRewriteStreams --- just to see if it helped --- and it does make
>> things work again, at least with this trivial example.  Not so clear
>> with more complex stuff though.  Something similar to this seemed to be
>> reported a few years back (without official response), so I'm wondering
>> whether gUnit's no longer actively maintained?
>> 
>> Conrad
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From eschew at gmail.com  Sat Feb 26 12:52:29 2011
From: eschew at gmail.com (Ben Karel)
Date: Sat, 26 Feb 2011 15:52:29 -0500
Subject: [antlr-interest] Status of gUnit?
In-Reply-To: <436262A1-63F0-48EE-9F1E-48DFF6F7213D@cs.usfca.edu>
References: <E1PsKOM-0002Nf-Nm@mouse.home.xrad.org>
	<2C77A6A3-F369-433E-B1BA-EF92DE00C079@toolazydogs.com>
	<436262A1-63F0-48EE-9F1E-48DFF6F7213D@cs.usfca.edu>
Message-ID: <AANLkTimcqvufhe=hxRbf9bKX2xqH=8Nq=Un3yiU2Vc+y@mail.gmail.com>

It looks like there's an example here:

https://github.com/maguro/aunit/blob/master/it/src/test/java/com/toolazydogs/aunit/CMinusTest.java

On Sat, Feb 26, 2011 at 3:49 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> No description of what it does exactly. example?
> T
> On Feb 26, 2011, at 12:37 PM, Alan D. Cabrera wrote:
>
> > As an alternative to gUnit I invite you to take a look at
> >
> > https://github.com/maguro/aunit
> >
> > Comments and suggestions are welcome.
> >
> >
> > Regards,
> > Alan
> >
> > On Feb 23, 2011, at 11:28 AM, antlr at xrad.org wrote:
> >
> >>
> >> Hi there,
> >>
> >> I'm wondering what the status of gUnit is these days?  The SimpleC
> >> example on the introductory web page fails when run against
> >> examples-v3/java/LL-star/SimpleC.g, and various experiments of mine
> >> don't seem to come out as expected either.
> >>
> >> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
> >>
> >> .. as is, this fails because
> >>
> >> "int x;" -> OK
> >>
> >> doesn't appear to be valid in the current grammar (I'm using
> >> antlr-3.3-complete.jar) --- the "->" appears to be the problem, but if I
> >> remove it then I get unexpected failures --- on the above test, for
> >> example, all four of the OKs actually FAIL, even though the web page
> >> suggests that three of them should pass:
> >>
> >> -----------------------------------------------------------------------
> >> executing testsuite for grammar:SimpleC with 11 tests
> >> -----------------------------------------------------------------------
> >> 6 failures found:
> >> test2 (variable, line7) -
> >> expected: OK
> >> actual: FAIL
> >>
> >> test3 (functionHeader, line11) -
> >> expected: int
> >> actual: Invalid input
> >>
> >> test4 (program, line15) -
> >> expected: OK
> >> actual: FAIL
> >>
> >> test5 (program, line20) -
> >> expected: OK
> >> actual: FAIL
> >>
> >> test6 (program, line22) -
> >> expected:
> >> actual: Invalid input
> >>
> >> test8 (ID, line28) -
> >> expected: OK
> >> actual: extra text found, '@999'
> >>
> >> Tests run: 11, Failures: 6
> >>
> >> I get the same experience in my own code.  This grammar:
> >>
> >> grammar Simple;
> >> input : 'yes' ;
> >>
> >> when run with this test:
> >>
> >> gunit Simple;
> >> input:
> >> "yes" OK
> >> "x" FAIL
> >>
> >> fails as follows:
> >>
> >> -----------------------------------------------------------------------
> >> executing testsuite for grammar:Simple with 2 tests
> >> -----------------------------------------------------------------------
> >> 1 failures found:
> >> test1 (input, line3) -
> >> expected: OK
> >> actual: FAIL
> >>
> >> Tests run: 2, Failures: 1
> >>
> >> Finally, the thing I would really like to do is to test my rewriting
> >> grammar translator.  This doesn't work either --- there seems to be a
> >> fundamental problem with rewriting grammars in gUnit's internals:
> >>
> >> grammar Simple;
> >> options { output=template; rewrite=true; }
> >> input : 'yes' -> template() "no" ;
> >>
> >> tested with this:
> >>
> >> gunit Simple;
> >> input:
> >> "yes" -> "no"
> >>
> >> results in this:
> >>
> >> -----------------------------------------------------------------------
> >> executing testsuite for grammar:Simple with 1 tests
> >> -----------------------------------------------------------------------
> >> 1 failures found:
> >> test1 (input, line3) -
> >> expected: no
> >> actual: java.lang.ClassCastException:
> org.antlr.runtime.CommonTokenStream can
> >> not be cast to org.antlr.runtime.TokenRewriteStream
> >>
> >> Tests run: 1, Failures: 1
> >>
> >> ... any suggestions?  I tried rebuilding gUnit after editing the
> >> offending CommonTokenStream declarations in gUnitExecutor to
> >> TokenRewriteStreams --- just to see if it helped --- and it does make
> >> things work again, at least with this trivial example.  Not so clear
> >> with more complex stuff though.  Something similar to this seemed to be
> >> reported a few years back (without official response), so I'm wondering
> >> whether gUnit's no longer actively maintained?
> >>
> >> Conrad
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sat Feb 26 13:45:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 26 Feb 2011 13:45:54 -0800
Subject: [antlr-interest] node construction proposed upgrade
Message-ID: <3905B53A-0C9D-4CEC-ACAD-14C8EBA24281@cs.usfca.edu>

At moment you can set hetero node type with token option:

type : ID<TypeNode> ;

var : ID<VarNode> ;

Sometimes you want to set token type / text of node.  can use -> now

type : ID -> TYPENAME[$ID] ; // sets new token type for ID; copies text, line, col

a : lc='{' ... '}' -> BLOCK[$lc, "BLOCK"] ; // sets new token type and text

Inline i'm proposing two new token option names: text, ttype to join current options node and assoc.

type : ID<ttype=TYPENAME> ;

a : '{'<ttype=BLOCK, text="BLOCK"> ... '}' ;

My motivation is this

    |   e '?'^ e ':' e

following is gross but would work:

    |   e '?'<type=TERNARY, text="?:">^ e ':' e

we could also mimic rewrite stuff by allowing args on tokens in parser rules:

    |   e '?'[TERNARY, "?:"]^ e ':' e

what say ye? 2nd option is appealing but slightly diff fom how rewrite element args work.

Ter

From list at toolazydogs.com  Sat Feb 26 13:47:46 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sat, 26 Feb 2011 13:47:46 -0800
Subject: [antlr-interest] Status of gUnit?
In-Reply-To: <AANLkTimcqvufhe=hxRbf9bKX2xqH=8Nq=Un3yiU2Vc+y@mail.gmail.com>
References: <E1PsKOM-0002Nf-Nm@mouse.home.xrad.org>
	<2C77A6A3-F369-433E-B1BA-EF92DE00C079@toolazydogs.com>
	<436262A1-63F0-48EE-9F1E-48DFF6F7213D@cs.usfca.edu>
	<AANLkTimcqvufhe=hxRbf9bKX2xqH=8Nq=Un3yiU2Vc+y@mail.gmail.com>
Message-ID: <CC1195F6-373A-4805-A2EF-EE1A95DF1FCC@toolazydogs.com>

Yep, this is the best example.  I have just peppered it with useful comments.


Regards,
Alan

On Feb 26, 2011, at 12:52 PM, Ben Karel wrote:

> It looks like there's an example here:
> 
> https://github.com/maguro/aunit/blob/master/it/src/test/java/com/toolazydogs/aunit/CMinusTest.java
> 
> On Sat, Feb 26, 2011 at 3:49 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
>> No description of what it does exactly. example?
>> T
>> On Feb 26, 2011, at 12:37 PM, Alan D. Cabrera wrote:
>> 
>>> As an alternative to gUnit I invite you to take a look at
>>> 
>>> https://github.com/maguro/aunit
>>> 
>>> Comments and suggestions are welcome.
>>> 
>>> 
>>> Regards,
>>> Alan
>>> 
>>> On Feb 23, 2011, at 11:28 AM, antlr at xrad.org wrote:
>>> 
>>>> 
>>>> Hi there,
>>>> 
>>>> I'm wondering what the status of gUnit is these days?  The SimpleC
>>>> example on the introductory web page fails when run against
>>>> examples-v3/java/LL-star/SimpleC.g, and various experiments of mine
>>>> don't seem to come out as expected either.
>>>> 
>>>> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>>>> 
>>>> .. as is, this fails because
>>>> 
>>>> "int x;" -> OK
>>>> 
>>>> doesn't appear to be valid in the current grammar (I'm using
>>>> antlr-3.3-complete.jar) --- the "->" appears to be the problem, but if I
>>>> remove it then I get unexpected failures --- on the above test, for
>>>> example, all four of the OKs actually FAIL, even though the web page
>>>> suggests that three of them should pass:
>>>> 
>>>> -----------------------------------------------------------------------
>>>> executing testsuite for grammar:SimpleC with 11 tests
>>>> -----------------------------------------------------------------------
>>>> 6 failures found:
>>>> test2 (variable, line7) -
>>>> expected: OK
>>>> actual: FAIL
>>>> 
>>>> test3 (functionHeader, line11) -
>>>> expected: int
>>>> actual: Invalid input
>>>> 
>>>> test4 (program, line15) -
>>>> expected: OK
>>>> actual: FAIL
>>>> 
>>>> test5 (program, line20) -
>>>> expected: OK
>>>> actual: FAIL
>>>> 
>>>> test6 (program, line22) -
>>>> expected:
>>>> actual: Invalid input
>>>> 
>>>> test8 (ID, line28) -
>>>> expected: OK
>>>> actual: extra text found, '@999'
>>>> 
>>>> Tests run: 11, Failures: 6
>>>> 
>>>> I get the same experience in my own code.  This grammar:
>>>> 
>>>> grammar Simple;
>>>> input : 'yes' ;
>>>> 
>>>> when run with this test:
>>>> 
>>>> gunit Simple;
>>>> input:
>>>> "yes" OK
>>>> "x" FAIL
>>>> 
>>>> fails as follows:
>>>> 
>>>> -----------------------------------------------------------------------
>>>> executing testsuite for grammar:Simple with 2 tests
>>>> -----------------------------------------------------------------------
>>>> 1 failures found:
>>>> test1 (input, line3) -
>>>> expected: OK
>>>> actual: FAIL
>>>> 
>>>> Tests run: 2, Failures: 1
>>>> 
>>>> Finally, the thing I would really like to do is to test my rewriting
>>>> grammar translator.  This doesn't work either --- there seems to be a
>>>> fundamental problem with rewriting grammars in gUnit's internals:
>>>> 
>>>> grammar Simple;
>>>> options { output=template; rewrite=true; }
>>>> input : 'yes' -> template() "no" ;
>>>> 
>>>> tested with this:
>>>> 
>>>> gunit Simple;
>>>> input:
>>>> "yes" -> "no"
>>>> 
>>>> results in this:
>>>> 
>>>> -----------------------------------------------------------------------
>>>> executing testsuite for grammar:Simple with 1 tests
>>>> -----------------------------------------------------------------------
>>>> 1 failures found:
>>>> test1 (input, line3) -
>>>> expected: no
>>>> actual: java.lang.ClassCastException:
>> org.antlr.runtime.CommonTokenStream can
>>>> not be cast to org.antlr.runtime.TokenRewriteStream
>>>> 
>>>> Tests run: 1, Failures: 1
>>>> 
>>>> ... any suggestions?  I tried rebuilding gUnit after editing the
>>>> offending CommonTokenStream declarations in gUnitExecutor to
>>>> TokenRewriteStreams --- just to see if it helped --- and it does make
>>>> things work again, at least with this trivial example.  Not so clear
>>>> with more complex stuff though.  Something similar to this seemed to be
>>>> reported a few years back (without official response), so I'm wondering
>>>> whether gUnit's no longer actively maintained?
>>>> 
>>>> Conrad
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sat Feb 26 20:37:11 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 26 Feb 2011 20:37:11 -0800
Subject: [antlr-interest] integrated new expression rule into Java.g
Message-ID: <EFFC6593-0831-44CC-BC48-10C85C6E2321@cs.usfca.edu>

Seems to work after I beat ANTLR silly for a few hours.

Tomorrow i hope to allow arbitrary actions in left-recursive rules

T

From g4 at novadsp.com  Sun Feb 27 06:09:14 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Sun, 27 Feb 2011 14:09:14 +0000
Subject: [antlr-interest] Lexical hacks
Message-ID: <4D6A5B0A.5040208@novadsp.com>


From g4 at novadsp.com  Sun Feb 27 06:40:30 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Sun, 27 Feb 2011 14:40:30 +0000
Subject: [antlr-interest] Lexical hacks ... again.
Message-ID: <4D6A625E.5010904@novadsp.com>

Right. ANTLR != PCCTS. Wow.

I've written a modest utility to transform CoCo/R grammar specs to ANTLR 
3. CoCo/R allows syntactic predicates (for LL(1) disambiguation) to be 
embedded as 'IF' '(' anything ')'. Not wanting to parse all the code 
I've dealt with this by having the lexer eat all content after spotting 
the 'IF'.

Question is this: Is there any way to embed a 'sub-lexer' at this point? 
i.e. grab the input stream and point it at a lexer for C#/C code?

I don't need to evaluate the expression itself but storing lexical 
tokens rather than characters would be a plus in later stages of analysis.

Thx++

Jerry.



From cummings at kjchome.homeip.net  Sun Feb 27 11:40:35 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sun, 27 Feb 2011 14:40:35 -0500
Subject: [antlr-interest] Lexical hacks ... again.
In-Reply-To: <4D6A625E.5010904@novadsp.com>
References: <4D6A625E.5010904@novadsp.com>
Message-ID: <4D6AA8B3.4020705@kjchome.homeip.net>

On 02/27/2011 09:40 AM, g4 at novadsp.com wrote:
> Right. ANTLR != PCCTS. Wow.

Well, er, ah, it was at one time.  PCCTS antlr was ANTLR v1.
I did my first project using it.  I even got to submit a bug fix for its
look-ahead stuff that I needed for my project (in one of the MR releases
long after Ter had moved on to ANTLR v2).

> I've written a modest utility to transform CoCo/R grammar specs to ANTLR 
> 3. CoCo/R allows syntactic predicates (for LL(1) disambiguation) to be 
> embedded as 'IF' '(' anything ')'. Not wanting to parse all the code 
> I've dealt with this by having the lexer eat all content after spotting 
> the 'IF'.
> 
> Question is this: Is there any way to embed a 'sub-lexer' at this point? 
> i.e. grab the input stream and point it at a lexer for C#/C code?

Sounds like you should treat them similar to the way you would treat a
comment.  Have the lexer consume all the text and either write it to a
separate stream or a single token in a separate stream.  Then you could
deal with that text however you wish (like in a separate lexer
instantiation).  Sorry, I'm thinking off the top of my head, no
implementation details.

> I don't need to evaluate the expression itself but storing lexical 
> tokens rather than characters would be a plus in later stages of analysis.

Especially if you could feed them to the same parser at some future
point....

Ter talked about multiple token streams (channels?) in ANTLR v2.  I've
never used them myself.  I'm not sure what support there is for them in v3.

> Thx++
> 
> Jerry.

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jimi at temporal-wave.com  Sun Feb 27 12:45:08 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 27 Feb 2011 12:45:08 -0800
Subject: [antlr-interest] Lexical hacks ... again.
In-Reply-To: <4D6A625E.5010904@novadsp.com>
References: <4D6A625E.5010904@novadsp.com>
Message-ID: <be16647823f23f621a99091592f4d730@mail.gmail.com>

Yes you can do this, but it is a little hacky. First you will need to
create a token vocab file:
X=4
Y=5

etc and import it in to both lexers. Then you will need to embed some java
code to hand off the input stream to your second lexer and have it add
tokens to the current token stream. You should be able to do that.

However, before doing that, take a look at the island grammar examples.
This may be more elegant for your needs if the switch over can be
lexically detected. Look to that first.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of g4 at novadsp.com
> Sent: Sunday, February 27, 2011 6:41 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexical hacks ... again.
>
> Right. ANTLR != PCCTS. Wow.
>
> I've written a modest utility to transform CoCo/R grammar specs to
> ANTLR 3. CoCo/R allows syntactic predicates (for LL(1) disambiguation)
> to be embedded as 'IF' '(' anything ')'. Not wanting to parse all the
> code I've dealt with this by having the lexer eat all content after
> spotting the 'IF'.
>
> Question is this: Is there any way to embed a 'sub-lexer' at this
> point?
> i.e. grab the input stream and point it at a lexer for C#/C code?
>
> I don't need to evaluate the expression itself but storing lexical
> tokens rather than characters would be a plus in later stages of
> analysis.
>
> Thx++
>
> Jerry.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ben.corne at gmail.com  Sun Feb 27 14:14:56 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Sun, 27 Feb 2011 23:14:56 +0100
Subject: [antlr-interest] ANTLR V3 Comments parsing (and retaining them)
Message-ID: <AANLkTintpYDWRYrhd54Xq2LabJ89YFqUuQhQjfagkFLN@mail.gmail.com>

I want to create a documentation tool for some language, this involves
introducing new syntax which can be ignored by the normal parser, but is
taken into account when feeding a program to the documenter-parser.

Here's where I started off with: (the language itself is added after I get
the comments right)
http://pastebin.com/q9L8sKcP

ANTLR complains with warnings about line 29, 30 and 39.
Any explanation why it warns me?
line 29 & 30 boil down to this:
//@<anything until a newline>
or
//<anything until a newline>

I don't see what is wrong with it. Note however that when removing the
multiline comments, it does build:
http://pastebin.com/W47wn70k
however still with warnings (stating that documentation can match COMMENT
(for which I see no problem: // some text //more commented text)

When I remove the documentation rule part, "life is peachy" (cfr javadude's
tutorial)

Any clues what goes wrong? I guess I should get rid of the warnings in the
annotation part before adding multiline comment/annotation

From parrt at cs.usfca.edu  Sun Feb 27 16:56:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 27 Feb 2011 16:56:26 -0800
Subject: [antlr-interest] actions, return values, ASTs, left recursion
Message-ID: <22ADA2D1-DB76-453F-88EC-F6C5ADBF699E@cs.usfca.edu>

ta da!

e returns [int v]
  : e '*'^ b=e {$v *= $b.v;}
  | e '+'^ b=e {$v += $b.v;}
  | INT {$v = $INT.int;}
  ;

works. :)  builds a tree and computes v.  $v automatically set for left-recursive call. generates this more or less:

e returns [int v] : =e_[0] {$v=$e_.v;} ;

e_[int _p] returns [int v]
    :  e_primary  {root_0=$e_primary.tree;} {$v=$e_primary.v;}
        ( ( {_p <= 4}?=> '*' ^b= e {$v *= $b.v;}
          | {_p <= 3}?=> '+' ^b= e {$v += $b.v;}
          )
        )*
    ;

e_primary returns [int v]
    : INT {$v = $INT.int;}
    ;

Ter

From patrick.lpz87 at googlemail.com  Mon Feb 28 03:07:08 2011
From: patrick.lpz87 at googlemail.com (Infostudent)
Date: Mon, 28 Feb 2011 03:07:08 -0800 (PST)
Subject: [antlr-interest] (Re-) Building the parse tree in Java
Message-ID: <1298891228070-6072780.post@n2.nabble.com>

Hello,

I've built a grammar using ANTLRWorks 1.4.2, and, after it worked fine, have
generated the respective java code and included it into a mini project to
test my grammar in java now.

So far, it works fine, I'm just searching for hours how to (re-) build the
Parse Tree which is shown in the ANTLRWorks tool (so the tree which shows
how the rules are fired and the input string is gradually split into its
tokens). I anyway got it to fetch the leaves of the tree (tokens) by
performing this code:

<code>

   public static void main(String[] args) throws Exception {

        ANTLRStringStream in = new
ANTLRStringStream("((InnerPaths;(SelfPath;(SelfPath;(Nametoken;Trigram;Set_Average);Set_Average),(SelfNode;(Nametoken;Trigram,UserSyn;Max;Set_Max),(Name;UserSyn;Set_Average);Max;Set_Average);Average;Set_Average);(Both,Threshold(0.3))),(DownPaths;(SelfNode;(Nametoken;Trigram;Set_Average),(Datatype;DatatypeSimilarity;Set_Average);Weighted(0.7,0.3);Set_Average);(Both,Threshold(0.3))))");

        ComaWorkFlowLexer lexer = new ComaWorkFlowLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        ComaWorkFlowParser parser = new ComaWorkFlowParser(tokens);
        ComaWorkFlowParser.coma_return result = parser.coma();
        
        CommonTree tree = (CommonTree) result.getTree();
        
        preOrder(tree, 0);   // Show the ground level
        
    }

    
    private static void preOrder(CommonTree tree, int depth) {
        for(int i = 0; i < depth; i++) {
            System.out.print("- ");
        }
        System.out.println(">   "+ tree + "    ::    " +
ComaWorkFlowParser.tokenNames[tree.getType()]);
        java.util.List children = tree.getChildren();
        if(children == null) return;
        for(Object o : children) {
            preOrder((CommonTree)o, depth+1);
        }
    }

</code>


This is a nice beginning, however, it would be important for us to also get
(or build) the tree itself, so that we see the parts of the input string
which are on level 1, 2 etc. (the rules that were fired).


Maybe I give an example to make myself more clear: For instance we have some
paragraphs, sentences, words and different punctuations, so we have a
paragraph rule, sentence rule, question rule, some word rules etc. The input
might be: <The weather is nice. Is it nice? It is nice.>

What I'm getting if I perform the code above is something like this: 

The - WORD; weather - WORD; is - WORD; nice - WORD; . - PUNCTUATION; Is -
WORD; it - WORD; nice - WORD; ? - PUNCTUATION; It - WORD; is - WORD; nice -
WORD; . - PUNCTUATION.

So I get the "ground level" (leaves) of the tree (the words, dots etc.).
However, my goal is it to also get the upper levels, like SENTENCE QUESTION
SENTENCE (so the rules which where fired and which are also shown in the
ANTLR Parse Tree),

Our goal is then to say something like this: "The input constists of two
paragraphs. The first paragraph consists of three sentences, a question, and
two further sentences. The questions consists of the 7 words bla, bla, ...
and a question mark. ...". 

That is, we also want to have the opportunity to resolve a part of the tree,
e.g. resolve QUESTION and then get:  Is - WORD, it - WORD, nice - WORD, ? -
PUNCTUATION. 

It will certainly be possible to perform this (ANTLRWorks does it anyway),
but I do not know how. I hope someone can help me. I'm completely new to
ANTLR and already put much work and time in it, yet do not know how to go
on.


Thank you very much.
Patrick


-- 
View this message in context: http://antlr.1301665.n2.nabble.com/Re-Building-the-parse-tree-in-Java-tp6072780p6072780.html
Sent from the ANTLR mailing list archive at Nabble.com.

From douglasgodfrey at gmail.com  Mon Feb 28 04:18:20 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 28 Feb 2011 07:18:20 -0500
Subject: [antlr-interest] Bug in AntlrWorks 1.4.2
Message-ID: <AANLkTik3pqOJMZjEAyUK8ZQOjaCsCtB1v6fpqYdoAkLd@mail.gmail.com>

A set of rules have mutual left recursion.

The rules are all copied into one contiguous set in one place in the grammar
file so they can be refactored.

The original rules are all commented out using /* */.

AntlrWorks reports the mutual recursion errors for the original [commented
out] rules and not for the effective rules.

From g4 at novadsp.com  Mon Feb 28 04:50:54 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Mon, 28 Feb 2011 12:50:54 +0000
Subject: [antlr-interest] Lexical hacks ... again.
In-Reply-To: <4D6AA8B3.4020705@kjchome.homeip.net>
References: <4D6A625E.5010904@novadsp.com>
	<4D6AA8B3.4020705@kjchome.homeip.net>
Message-ID: <4D6B9A2E.2020606@novadsp.com>

Thanks Kevin

On 27/02/2011 19:40, Kevin J. Cummings wrote:
> Well, er, ah, it was at one time.

Indeed. Amazed at the transformation.



From g4 at novadsp.com  Mon Feb 28 04:52:17 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Mon, 28 Feb 2011 12:52:17 +0000
Subject: [antlr-interest] Lexical hacks ... again.
In-Reply-To: <be16647823f23f621a99091592f4d730@mail.gmail.com>
References: <4D6A625E.5010904@novadsp.com>
	<be16647823f23f621a99091592f4d730@mail.gmail.com>
Message-ID: <4D6B9A81.3020709@novadsp.com>

Thanks Jim

On 27/02/2011 20:45, Jim Idle wrote:
> However, before doing that, take a look at the island grammar examples.
> This may be more elegant for your needs if the switch over can be
> lexically detected.

Indeed it can be lexically detected. Sounds ideal.



From douglasgodfrey at gmail.com  Mon Feb 28 05:31:01 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 28 Feb 2011 08:31:01 -0500
Subject: [antlr-interest] Another pair of bug in AntlrWorks 1.4.2
Message-ID: <AANLkTinmAOAzKRGQhWu3F9AO90hfbpqgxo6E9nNkYgLa@mail.gmail.com>

1) with a somewhat large grammar [8K lines] grammar, AntlrWorks sometimes
gets lost when processing edit:undo and undoes the wrong lines.

2) with the same grammar after 20-30 cut&paste operations, syntax
highlighting becomes garbled with partially highlighted tokens.

From bruno.costa at auditmark.com  Mon Feb 28 06:58:16 2011
From: bruno.costa at auditmark.com (zbordie)
Date: Mon, 28 Feb 2011 06:58:16 -0800 (PST)
Subject: [antlr-interest] Detecting javascript code
Message-ID: <1298905096756-6073567.post@n2.nabble.com>

Hi there,

I'm trying to build a tool that detects/recognizes javascript code embedded
in any
kind of language or file format, for example PHP, ASP.NET, etc. . Not
just HTML.

My strategy would be, to use ANTLR's lexer or parser (I don't know) to
read the files and detect where the javascript blocks start and end.

Do you think it's possible to use ANTLR with that purpose? What should be
used
to do that?

Do you know any other tools that do this already?

Thank you,
Bruno Costa 

-- 
View this message in context: http://antlr.1301665.n2.nabble.com/Detecting-javascript-code-tp6073567p6073567.html
Sent from the ANTLR mailing list archive at Nabble.com.

From peter.crowther at melandra.com  Mon Feb 28 07:21:56 2011
From: peter.crowther at melandra.com (Peter Crowther)
Date: Mon, 28 Feb 2011 15:21:56 +0000
Subject: [antlr-interest] Detecting javascript code
In-Reply-To: <1298905096756-6073567.post@n2.nabble.com>
References: <1298905096756-6073567.post@n2.nabble.com>
Message-ID: <AANLkTik=vrYKs0BugakSS-hsLh-vM6OnQB6KnNBzKwz_@mail.gmail.com>

On 28 February 2011 14:58, zbordie <bruno.costa at auditmark.com> wrote:

> I'm trying to build a tool that detects/recognizes javascript code embedded
> in any
> kind of language or file format, for example PHP, ASP.NET, etc. . Not
> just HTML.
>
> What's your use case?  In particular, which of the following three files
(in C# syntax) would you want it to detect and why?

-- file1.cs --
Response.Write("alert('i pwnz u');");

-- file2.cs --
// In Javascript, we'd write this as function doit() { alert('hi'); }
void doit() { MessageBox.Show("hi"); }

-- file3.cs --
Response.Write("ale" + "rt (" + "'pw" + "ned" + "');");

Cheers,

- Peter

From sergey.staroletov at gmail.com  Mon Feb 28 11:59:13 2011
From: sergey.staroletov at gmail.com (Sergey Staroletov)
Date: Tue, 1 Mar 2011 01:59:13 +0600
Subject: [antlr-interest] MismatchedTokenExeption vs xml processing
Message-ID: <AANLkTimu9-LC5Tx+XEdfzGWjqXrCFqjWPznv=Rui6jBW@mail.gmail.com>

Hi everyone here.
I want to process my custom xml (just for theses annotation)

part of grammar there (some was cut):


grammar testg;

options {
  language = Java;
}

component: (state)* ;
state: oneState|subAutomaton ;
oneState:  TAG_OPEN 'state' stateAttribs TAG_CLOSE stateBody TAG_OPEN
'/state' TAG_CLOSE;
stateAttribs: (stateAttrib '=' Value)* ;
stateAttrib: 'threadId' | 'srcFile' | 'srcLineFrom' | 'srcLineTo' |
'name' | 'N' | 'subAutomatonId' | 'firstState' | 'finalState'|'active';
stateBody: (state|operation|transition)* ;
subAutomaton: TAG_OPEN 'subAutomaton' subAutomatonAttribs TAG_CLOSE
subAutomatonBody TAG_OPEN '/subAutomaton' TAG_CLOSE ;
subAutomatonAttribs: (subAutomatonAttrib '=' Value)* ;
subAutomatonAttrib: 'name'|'firstState'|'parent' ;
subAutomatonBody: (finalState|oneState)* ;
finalState: TAG_OPEN 'final' 'state' '=' Value TAG_CLOSE_WITHOUT_BODY;
transition: (TAG_OPEN 'jump' transitionAttribs) (TAG_CLOSE_WITHOUT_BODY |
(TAG_CLOSE transitionBody TAG_OPEN '/jump' TAG_CLOSE)) ;
transitionAttribs: (transitionAttrib '=' Value)* ;
transitionAttrib: 'transitionString' | 'p' | 'toState';
transitionBody: (event)* ;
operation: (fork|join) ;
operationAttribs: (operationAttrib '=' Value)*;
operationAttrib: 'p'|'nextState' ;
fork: TAG_OPEN 'fork' operationAttribs TAG_CLOSE forkBody TAG_OPEN '/fork'
TAG_CLOSE ;
forkBody: 'body';
join: TAG_OPEN 'join' operationAttribs TAG_CLOSE joinBody TAG_OPEN '/join'
TAG_CLOSE;
joinBody: 'body' ;
event: TAG_OPEN 'event' eventAttribs  (TAG_CLOSE_WITHOUT_BODY |( TAG_CLOSE
eventBody TAG_OPEN '/event' TAG_CLOSE)) ;
eventAttribs: (eventAttrib '=' Value)* ;
eventAttrib: 'eventState'|'eventSubautomaton'|'p' | 'warn' | 'iFlag' |
'returnState'|'timeout';
eventBody: (state)* ;
Value: '"' Identifier '"' ;
TAG_OPEN : '<'  ;
TAG_CLOSE: '>' ;
TAG_CLOSE_WITHOUT_BODY : '/>' ;
Identifier :
  Letter (Letter | Digit)*;
  fragment
  Letter :
      'a'..'z' |
    'A'..'Z'|'_';
    fragment
   Digit :
      '0'..'9';
 WS  : (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;};



Testcase #1
<state name="test">
<subAutomaton name="test" firstState="connect">
<final state="connect"/>
<state name="connect">
</state>
</subAutomaton>
</state>
result: OK
Testcase #2 (just rotated <final and  <state , but rule
is: subAutomatonBody: (finalState|oneState)* ; that matter no change?
<state name="test">
<subAutomaton name="test" firstState="connect">
<state name="connect">
</state>
<final state="connect"/>
</subAutomaton>
</state>
result: Error, mismatch input 'state' expecting '\u001A'
Why?

Testcase #3
<state name="test">
<subAutomaton name="test" firstState="connect">
<final state="connect"/>
<state name="connect">
 <fork>body</fork>
</state>
</subAutomaton>
</state>
result: error

Testcase #4 (just add <state></state>)
<state name="test">
<subAutomaton name="test" firstState="connect">
<final state="connect"/>
<state name="connect">
<state></state>
<fork>body</fork>
</state>
</subAutomaton>
</state>
result:ok

(a|b)* works as i haven't realized...

The grammar works in my mind, but it can't work in practice:(








-- 
Sergey

From scott at javadude.com  Mon Feb 28 12:06:31 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Mon, 28 Feb 2011 15:06:31 -0500
Subject: [antlr-interest] MismatchedTokenExeption vs xml processing
In-Reply-To: <AANLkTimu9-LC5Tx+XEdfzGWjqXrCFqjWPznv=Rui6jBW@mail.gmail.com>
References: <AANLkTimu9-LC5Tx+XEdfzGWjqXrCFqjWPznv=Rui6jBW@mail.gmail.com>
Message-ID: <AANLkTik2Ants4atsz96rET=sYq+zMfEVQB+03m_+KnJo@mail.gmail.com>

You may want to have a peek at ANTXR, my ANTLR derivative for XML
processing. It may make your parsing much simpler (especially with the
"any tag" processing I describe on the web page).

See http://javadude.com/tools/antxr
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Mon, Feb 28, 2011 at 2:59 PM, Sergey Staroletov
<sergey.staroletov at gmail.com> wrote:
> Hi everyone here.
> I want to process my custom xml (just for theses annotation)
>
> part of grammar there (some was cut):
>
>
> grammar testg;
>
> options {
> ?language = Java;
> }
>
> component: (state)* ;
> state: oneState|subAutomaton ;
> oneState: ?TAG_OPEN 'state' stateAttribs TAG_CLOSE stateBody TAG_OPEN
> '/state' TAG_CLOSE;
> stateAttribs: (stateAttrib '=' Value)* ;
> stateAttrib: 'threadId' | 'srcFile' | 'srcLineFrom' | 'srcLineTo' |
> 'name' | 'N' | 'subAutomatonId' | 'firstState' | 'finalState'|'active';
> stateBody: (state|operation|transition)* ;
> subAutomaton: TAG_OPEN 'subAutomaton' subAutomatonAttribs TAG_CLOSE
> subAutomatonBody TAG_OPEN '/subAutomaton' TAG_CLOSE ;
> subAutomatonAttribs: (subAutomatonAttrib '=' Value)* ;
> subAutomatonAttrib: 'name'|'firstState'|'parent' ;
> subAutomatonBody: (finalState|oneState)* ;
> finalState: TAG_OPEN 'final' 'state' '=' Value TAG_CLOSE_WITHOUT_BODY;
> transition: (TAG_OPEN 'jump' transitionAttribs) (TAG_CLOSE_WITHOUT_BODY |
> (TAG_CLOSE transitionBody TAG_OPEN '/jump' TAG_CLOSE)) ;
> transitionAttribs: (transitionAttrib '=' Value)* ;
> transitionAttrib: 'transitionString' | 'p' | 'toState';
> transitionBody: (event)* ;
> operation: (fork|join) ;
> operationAttribs: (operationAttrib '=' Value)*;
> operationAttrib: 'p'|'nextState' ;
> fork: TAG_OPEN 'fork' operationAttribs TAG_CLOSE forkBody TAG_OPEN '/fork'
> TAG_CLOSE ;
> forkBody: 'body';
> join: TAG_OPEN 'join' operationAttribs TAG_CLOSE joinBody TAG_OPEN '/join'
> TAG_CLOSE;
> joinBody: 'body' ;
> event: TAG_OPEN 'event' eventAttribs ?(TAG_CLOSE_WITHOUT_BODY |( TAG_CLOSE
> eventBody TAG_OPEN '/event' TAG_CLOSE)) ;
> eventAttribs: (eventAttrib '=' Value)* ;
> eventAttrib: 'eventState'|'eventSubautomaton'|'p' | 'warn' | 'iFlag' |
> 'returnState'|'timeout';
> eventBody: (state)* ;
> Value: '"' Identifier '"' ;
> TAG_OPEN : '<' ?;
> TAG_CLOSE: '>' ;
> TAG_CLOSE_WITHOUT_BODY : '/>' ;
> Identifier :
> ?Letter (Letter | Digit)*;
> ?fragment
> ?Letter :
> ? ? ?'a'..'z' |
> ? ?'A'..'Z'|'_';
> ? ?fragment
> ? Digit :
> ? ? ?'0'..'9';
> ?WS ?: (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;};
>
>
>
> Testcase #1
> <state name="test">
> <subAutomaton name="test" firstState="connect">
> <final state="connect"/>
> <state name="connect">
> </state>
> </subAutomaton>
> </state>
> result: OK
> Testcase #2 (just rotated <final and ?<state , but rule
> is: subAutomatonBody: (finalState|oneState)* ; that matter no change?
> <state name="test">
> <subAutomaton name="test" firstState="connect">
> <state name="connect">
> </state>
> <final state="connect"/>
> </subAutomaton>
> </state>
> result: Error, mismatch input 'state' expecting '\u001A'
> Why?
>
> Testcase #3
> <state name="test">
> <subAutomaton name="test" firstState="connect">
> <final state="connect"/>
> <state name="connect">
> ?<fork>body</fork>
> </state>
> </subAutomaton>
> </state>
> result: error
>
> Testcase #4 (just add <state></state>)
> <state name="test">
> <subAutomaton name="test" firstState="connect">
> <final state="connect"/>
> <state name="connect">
> <state></state>
> <fork>body</fork>
> </state>
> </subAutomaton>
> </state>
> result:ok
>
> (a|b)* works as i haven't realized...
>
> The grammar works in my mind, but it can't work in practice:(
>
>
>
>
>
>
>
>
> --
> Sergey
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Mon Feb 28 13:58:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Feb 2011 13:58:35 -0800
Subject: [antlr-interest] Bug in AntlrWorks 1.4.2
In-Reply-To: <AANLkTik3pqOJMZjEAyUK8ZQOjaCsCtB1v6fpqYdoAkLd@mail.gmail.com>
References: <AANLkTik3pqOJMZjEAyUK8ZQOjaCsCtB1v6fpqYdoAkLd@mail.gmail.com>
Message-ID: <52B526CF-04B4-4A86-8B1E-8892B8E97D2F@cs.usfca.edu>

Hi. Can we have a simple example? I'm not sure I understand exactly. do you mean that the left recursion is not removed during refactoring? I may have solved that problem for the next release of ANTLR  because it automatically removes me left recursion without you having to change grammar :)

Ter
On Feb 28, 2011, at 4:18 AM, Douglas Godfrey wrote:

> A set of rules have mutual left recursion.
> 
> The rules are all copied into one contiguous set in one place in the grammar
> file so they can be refactored.
> 
> The original rules are all commented out using /* */.
> 
> AntlrWorks reports the mutual recursion errors for the original [commented
> out] rules and not for the effective rules.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Mon Feb 28 13:59:45 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Feb 2011 13:59:45 -0800
Subject: [antlr-interest] Another pair of bug in AntlrWorks 1.4.2
In-Reply-To: <AANLkTinmAOAzKRGQhWu3F9AO90hfbpqgxo6E9nNkYgLa@mail.gmail.com>
References: <AANLkTinmAOAzKRGQhWu3F9AO90hfbpqgxo6E9nNkYgLa@mail.gmail.com>
Message-ID: <DA87C538-D84E-4306-AE1A-E016FE6C8955@cs.usfca.edu>


On Feb 28, 2011, at 5:31 AM, Douglas Godfrey wrote:

> 1) with a somewhat large grammar [8K lines] grammar, AntlrWorks sometimes
> gets lost when processing edit:undo and undoes the wrong lines.

Yeah,The undo operation doesn't always work so well I've noticed. I asked Jean Bovet about it but we couldn't figure out anything immediately.

> 2) with the same grammar after 20-30 cut&paste operations, syntax
> highlighting becomes garbled with partially highlighted tokens.

Interesting. I'm being lazy: could you look at the list of bugs at

http://www.antlr.org/jira/browse/AW

 to see if we've covered that one?
Ter


From parrt at cs.usfca.edu  Mon Feb 28 14:00:59 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Feb 2011 14:00:59 -0800
Subject: [antlr-interest] [antlr-dev] Generated code checks for
	backtracking even though backtracking is off
In-Reply-To: <AANLkTikTtgES4zOh8+Oz0J87r0z9UY0yRDuwo_q9cLJR@mail.gmail.com>
References: <AANLkTikTtgES4zOh8+Oz0J87r0z9UY0yRDuwo_q9cLJR@mail.gmail.com>
Message-ID: <0D94BF68-A272-435A-AEB7-668E7D92002D@cs.usfca.edu>

Hi. [I'm moving this to the interest list as it is about using not building antlr]

Do you have backtrack=true anywhere?  do you have "=>" operators anywhere? I believe that is the only way it will wrap those actions.

Ter
On Feb 28, 2011, at 12:18 PM, Susanna Siebert wrote:

> Hi everybody,
> 
> we are trying to add custom bracematching to our language, Hop. For example, our functions are designed in the form action myAction .. end, where we are trying to match the "action" with the "end". To do that we added some semantic actions to the appropriate rules in the *.g file, that add some information about the position of the tokens to a hash table in a matcher module. This works fine except for the if-else-statements. These look like so:
> 
> if_statement    
>     :
>     firstif = IF root_expression THEN { symbol.add(new BlockDescriptor()); } block { symbol.popScope(); } firstend = END 
>     {
>         MatchKeyword keyword1 = new MatchKeyword();
>         keyword1.setMatchID(((CommonToken)$firstif).getStartIndex());
>         keyword1.setStartOffset(((CommonToken)$firstif).getStartIndex() - $firstif.getLine() + 1);
>         keyword1.setEndOffset(((CommonToken)$firstif).getStopIndex() - $firstif.getLine() + 2);
>         keyword1.setIsPrefix(true); 
>         MatchKeyword keyword2 = new MatchKeyword();
>         keyword2.setMatchID(((CommonToken)$firstif).getStartIndex());
>         keyword2.setStartOffset(((CommonToken)$firstend).getStartIndex() - $firstend.getLine() + 1);
>         keyword2.setEndOffset(((CommonToken)$firstend).getStopIndex() - $firstend.getLine() + 2);
>         keyword2.setIsPrefix(false); 
>         matcher.addMatch(keyword1, keyword2);
>     }
>     ((firstelse = ELSE IF root_expression THEN { symbol.add(new BlockDescriptor()); } block { symbol.popScope(); } secondend = END 
>     {
>         MatchKeyword keyword1 = new MatchKeyword();
>         keyword1.setMatchID(((CommonToken)$firstelse).getStartIndex());
>         keyword1.setStartOffset(((CommonToken)$firstelse).getStartIndex() - $firstelse.getLine() + 1);
>         keyword1.setEndOffset(((CommonToken)$firstelse).getStopIndex() - $firstelse.getLine() + 2);
>         keyword1.setIsPrefix(true); 
>         MatchKeyword keyword2 = new MatchKeyword();
>         keyword2.setMatchID(((CommonToken)$firstelse).getStartIndex());
>         keyword2.setStartOffset(((CommonToken)$secondend).getStartIndex() - $secondend.getLine() + 1);
>         keyword2.setEndOffset(((CommonToken)$secondend).getStopIndex() - $secondend.getLine() + 2);
>         keyword2.setIsPrefix(false); 
>         matcher.addMatch(keyword1, keyword2);
>     }
>     ) => (ELSE IF root_expression THEN block END))*  //else if blocks
>     ((secondelse = ELSE THEN { symbol.add(new BlockDescriptor()); } block { symbol.popScope(); } thirdend = END
>     {
>         MatchKeyword keyword1 = new MatchKeyword();
>         keyword1.setMatchID(((CommonToken)$secondelse).getStartIndex());
>         keyword1.setStartOffset(((CommonToken)$secondelse).getStartIndex() - $secondelse.getLine() + 1);
>         keyword1.setEndOffset(((CommonToken)$secondelse).getStopIndex() - $secondelse.getLine() + 2);
>         keyword1.setIsPrefix(true); 
>         MatchKeyword keyword2 = new MatchKeyword();
>         keyword2.setMatchID(((CommonToken)$secondelse).getStartIndex());
>         keyword2.setStartOffset(((CommonToken)$thirdend).getStartIndex() - $thirdend.getLine() + 1);
>         keyword2.setEndOffset(((CommonToken)$thirdend).getStopIndex() - $thirdend.getLine() + 2);
>         keyword2.setIsPrefix(false); 
>         matcher.addMatch(keyword1, keyword2);
>     }
>     ) => (ELSE THEN block END) )? 
>     ;
> 
> The problem is that when the code is generated, the semantic actions are being surrounded by an if-statement that checks state.backtracking (if (state.backtracking == 0) {}). For the if-then part of the rule, this check evaluates to true but for the else-if-then and else-then it evaluates to false because state.backtracking is 1. However, backtracking is turned off. 
> 
> My questions now are: 
> Why is a check for state.backtracking added when code is generated even if backtracking is turned off? 
> How can I make sure that the semantic actions of the else-if-then and else-then are being executed? 
> 
> I appreciate your help.
> 
> Best regards,
> 
> Susanna Siebert
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev


From g4 at novadsp.com  Mon Feb 28 14:35:17 2011
From: g4 at novadsp.com (g4 at novadsp.com)
Date: Mon, 28 Feb 2011 22:35:17 +0000
Subject: [antlr-interest] OR alternatives
Message-ID: <4D6C2325.4020804@novadsp.com>

The CoCo grammar expression spec is shown below [2].  My problem is with 
constructions such as these:

CS = { ExternAliasDirective }
         { UsingDirective }
         EOF .

CS results in an AST with a OR_EXPR node although no '|' character 
actually appears. I'm sure this is due to my simplistic definition of 
expression but I cannot see any other way to write the rules.

I did experiment with [1] to resolve the ambiguity. It does work but the 
hack seems only to reinforce the fact that the basic construction is wrong.

Any tips much appreciated.

Jerry.

[1] expression
@init { bool ored = false; }
     : term {ored = (input.LT(1).Type == OR); } (OR term)*
         ->  {ored}? ^(OR_EXPR term term*)
         ->            ^(LIST term term*)


[2] rule '=' expression '.' ;

expression
     : term ('|' term)*
         -> ^( OR_EXPR term term* )
     ;
term
     : (factor (factor)*)? ;

factor
     : symbol
     | '(' expression ')'
         -> ^( GROUPED_EXPR expression )
     | '[' expression']'
         -> ^( OPTIONAL_EXPR expression)
     | '{' expression '}'
         -> ^( SEQUENCE_EXPR expression)
     ;

symbol
     : IF_ACTION
     | ID (ATTRIBUTES)?
     | STRINGLITERAL
     ;




From sharwell at pixelminegames.com  Mon Feb 28 14:37:09 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 28 Feb 2011 16:37:09 -0600
Subject: [antlr-interest] [antlr-dev] Generated code checks for
	backtracking even though backtracking is off
Message-ID: <00a801cbd798$09a3ed50$1cebc7f0$@pixelminegames.com>

Hi Susanna,

 

Actions are not executed as part of a syntactic predicate. As a simplified
example, take the following:

 

rule : (x {Foo();}) => x;

 

Foo() will not be called here, instead, you should write:

 

rule : (x) => x {Foo();};

 

Sam

 

From: antlr-dev-bounces at antlr.org [mailto:antlr-dev-bounces at antlr.org] On
Behalf Of Susanna Siebert
Sent: Monday, February 28, 2011 2:19 PM
To: antlr-dev at antlr.org
Subject: [antlr-dev] Generated code checks for backtracking even though
backtracking is off

 

Hi everybody,

we are trying to add custom bracematching to our language, Hop. For example,
our functions are designed in the form action myAction .. end, where we are
trying to match the "action" with the "end". To do that we added some
semantic actions to the appropriate rules in the *.g file, that add some
information about the position of the tokens to a hash table in a matcher
module. This works fine except for the if-else-statements. These look like
so:

if_statement    
    :
    firstif = IF root_expression THEN { symbol.add(new BlockDescriptor()); }
block { symbol.popScope(); } firstend = END 
    {
        MatchKeyword keyword1 = new MatchKeyword();
        keyword1.setMatchID(((CommonToken)$firstif).getStartIndex());
        keyword1.setStartOffset(((CommonToken)$firstif).getStartIndex() -
$firstif.getLine() + 1);
        keyword1.setEndOffset(((CommonToken)$firstif).getStopIndex() -
$firstif.getLine() + 2);
        keyword1.setIsPrefix(true); 
        MatchKeyword keyword2 = new MatchKeyword();
        keyword2.setMatchID(((CommonToken)$firstif).getStartIndex());
        keyword2.setStartOffset(((CommonToken)$firstend).getStartIndex() -
$firstend.getLine() + 1);
        keyword2.setEndOffset(((CommonToken)$firstend).getStopIndex() -
$firstend.getLine() + 2);
        keyword2.setIsPrefix(false); 
        matcher.addMatch(keyword1, keyword2);
    }
    ((firstelse = ELSE IF root_expression THEN { symbol.add(new
BlockDescriptor()); } block { symbol.popScope(); } secondend = END 
    {
        MatchKeyword keyword1 = new MatchKeyword();
        keyword1.setMatchID(((CommonToken)$firstelse).getStartIndex());
        keyword1.setStartOffset(((CommonToken)$firstelse).getStartIndex() -
$firstelse.getLine() + 1);
        keyword1.setEndOffset(((CommonToken)$firstelse).getStopIndex() -
$firstelse.getLine() + 2);
        keyword1.setIsPrefix(true); 
        MatchKeyword keyword2 = new MatchKeyword();
        keyword2.setMatchID(((CommonToken)$firstelse).getStartIndex());
        keyword2.setStartOffset(((CommonToken)$secondend).getStartIndex() -
$secondend.getLine() + 1);
        keyword2.setEndOffset(((CommonToken)$secondend).getStopIndex() -
$secondend.getLine() + 2);
        keyword2.setIsPrefix(false); 
        matcher.addMatch(keyword1, keyword2);
    }
    ) => (ELSE IF root_expression THEN block END))*  //else if blocks
    ((secondelse = ELSE THEN { symbol.add(new BlockDescriptor()); } block {
symbol.popScope(); } thirdend = END
    {
        MatchKeyword keyword1 = new MatchKeyword();
        keyword1.setMatchID(((CommonToken)$secondelse).getStartIndex());
        keyword1.setStartOffset(((CommonToken)$secondelse).getStartIndex() -
$secondelse.getLine() + 1);
        keyword1.setEndOffset(((CommonToken)$secondelse).getStopIndex() -
$secondelse.getLine() + 2);
        keyword1.setIsPrefix(true); 
        MatchKeyword keyword2 = new MatchKeyword();
        keyword2.setMatchID(((CommonToken)$secondelse).getStartIndex());
        keyword2.setStartOffset(((CommonToken)$thirdend).getStartIndex() -
$thirdend.getLine() + 1);
        keyword2.setEndOffset(((CommonToken)$thirdend).getStopIndex() -
$thirdend.getLine() + 2);
        keyword2.setIsPrefix(false); 
        matcher.addMatch(keyword1, keyword2);
    }
    ) => (ELSE THEN block END) )? 
    ;

The problem is that when the code is generated, the semantic actions are
being surrounded by an if-statement that checks state.backtracking (if
(state.backtracking == 0) {}). For the if-then part of the rule, this check
evaluates to true but for the else-if-then and else-then it evaluates to
false because state.backtracking is 1. However, backtracking is turned off. 

My questions now are: 
Why is a check for state.backtracking added when code is generated even if
backtracking is turned off? 
How can I make sure that the semantic actions of the else-if-then and
else-then are being executed? 

I appreciate your help.

Best regards,

Susanna Siebert


From researcher0x00 at gmail.com  Mon Feb 28 16:16:21 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 28 Feb 2011 19:16:21 -0500
Subject: [antlr-interest] Can a ANTLR 3 rule have both a rule and global
	scope?
Message-ID: <AANLkTimaOewyD-zXho12xFHaFyyDLAK=3gROenm3x+ca@mail.gmail.com>

When trying to use both a rule and global scope for a rule, ANTLR generated
errors. To get past the error all of the attributes were pused into the
global scope.

Just want to confirm that ANTLR 3 only allows a rule to have either a rule
or global scope but not both.



Thanks, Eric

From michael.bedward at gmail.com  Mon Feb 28 16:28:32 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 1 Mar 2011 11:28:32 +1100
Subject: [antlr-interest] Can a ANTLR 3 rule have both a rule and global
	scope?
In-Reply-To: <AANLkTimaOewyD-zXho12xFHaFyyDLAK=3gROenm3x+ca@mail.gmail.com>
References: <AANLkTimaOewyD-zXho12xFHaFyyDLAK=3gROenm3x+ca@mail.gmail.com>
Message-ID: <AANLkTi=bBkV9jwZTf6u_SWP2PPicC4cdyLuhGknwTYpA@mail.gmail.com>

Hi Eric,

This was discussed on the list a few days ago...

http://antlr.markmail.org/search/?q=global%20scope#query:global%20scope+page:1+mid:nbxmsqelbhhqevf4+state:results

Michael


On 1 March 2011 11:16, The Researcher <researcher0x00 at gmail.com> wrote:
> When trying to use both a rule and global scope for a rule, ANTLR generated
> errors. To get past the error all of the attributes were pused into the
> global scope.
>
> Just want to confirm that ANTLR 3 only allows a rule to have either a rule
> or global scope but not both.
>
>
>
> Thanks, Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Mon Feb 28 16:31:10 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 28 Feb 2011 18:31:10 -0600
Subject: [antlr-interest] Can a ANTLR 3 rule have both a rule and global
	scope?
Message-ID: <00c201cbd7a7$f6f47fc0$e4dd7f40$@pixelminegames.com>

A rule can have zero or one rule scopes, and zero or more global scopes.

You need to place the rule scope before any global scopes:

rule
scope { /*rule scope*/ }
scope GlobalScope1;
scope ClobalScope2;
	: ...
	;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of The Researcher
Sent: Monday, February 28, 2011 6:16 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can a ANTLR 3 rule have both a rule and global
scope?

When trying to use both a rule and global scope for a rule, ANTLR generated
errors. To get past the error all of the attributes were pused into the
global scope.

Just want to confirm that ANTLR 3 only allows a rule to have either a rule
or global scope but not both.



Thanks, Eric

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Mon Feb 28 16:44:01 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 1 Mar 2011 11:44:01 +1100
Subject: [antlr-interest] actions, return values, ASTs, left recursion
In-Reply-To: <22ADA2D1-DB76-453F-88EC-F6C5ADBF699E@cs.usfca.edu>
References: <22ADA2D1-DB76-453F-88EC-F6C5ADBF699E@cs.usfca.edu>
Message-ID: <AANLkTi=YWMFb1DNU28Yr5fvmfr3SWPSyyv1gESD_q1_M@mail.gmail.com>

I'm wondering how much unlearning this is going to require. Even
though I've only used ANTLR for a couple of years, the conditioning to
avoid left-recursing like the plague is already deeply etched into my
frontal cortex. When I first looked at this latest example I couldn't
cope with it at all because it was too easy.

Michael


On 28 February 2011 11:56, Terence Parr <parrt at cs.usfca.edu> wrote:
> ta da!
>
> e returns [int v]
> ?: e '*'^ b=e {$v *= $b.v;}
> ?| e '+'^ b=e {$v += $b.v;}
> ?| INT {$v = $INT.int;}
> ?;
>
> works. :) ?builds a tree and computes v. ?$v automatically set for left-recursive call. generates this more or less:
>
> e returns [int v] : =e_[0] {$v=$e_.v;} ;
>
> e_[int _p] returns [int v]
> ? ?: ?e_primary ?{root_0=$e_primary.tree;} {$v=$e_primary.v;}
> ? ? ? ?( ( {_p <= 4}?=> '*' ^b= e {$v *= $b.v;}
> ? ? ? ? ?| {_p <= 3}?=> '+' ^b= e {$v += $b.v;}
> ? ? ? ? ?)
> ? ? ? ?)*
> ? ?;
>
> e_primary returns [int v]
> ? ?: INT {$v = $INT.int;}
> ? ?;
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Mon Feb 28 17:24:24 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 28 Feb 2011 17:24:24 -0800
Subject: [antlr-interest] Can a ANTLR 3 rule have both a rule and global
	scope?
In-Reply-To: <AANLkTimaOewyD-zXho12xFHaFyyDLAK=3gROenm3x+ca@mail.gmail.com>
References: <AANLkTimaOewyD-zXho12xFHaFyyDLAK=3gROenm3x+ca@mail.gmail.com>
Message-ID: <481a4b6d5c82476121938444bc7b2593@mail.gmail.com>

Nope - you just have the order specified in the wrong sequence. Use
antlr.markmail.org and search for my answer to this exact question of
about 5 days or so ago.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of The Researcher
> Sent: Monday, February 28, 2011 4:16 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can a ANTLR 3 rule have both a rule and
> global scope?
>
> When trying to use both a rule and global scope for a rule, ANTLR
> generated errors. To get past the error all of the attributes were
> pused into the global scope.
>
> Just want to confirm that ANTLR 3 only allows a rule to have either a
> rule or global scope but not both.
>
>
>
> Thanks, Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Mon Feb 28 18:02:37 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 28 Feb 2011 18:02:37 -0800
Subject: [antlr-interest] actions, return values, ASTs, left recursion
In-Reply-To: <AANLkTi=YWMFb1DNU28Yr5fvmfr3SWPSyyv1gESD_q1_M@mail.gmail.com>
References: <22ADA2D1-DB76-453F-88EC-F6C5ADBF699E@cs.usfca.edu>
	<AANLkTi=YWMFb1DNU28Yr5fvmfr3SWPSyyv1gESD_q1_M@mail.gmail.com>
Message-ID: <B6B2FBD6-386B-43E3-B1ED-D631D2D6F6E5@cs.usfca.edu>


On Feb 28, 2011, at 4:44 PM, Michael Bedward wrote:

> I'm wondering how much unlearning this is going to require. Even
> though I've only used ANTLR for a couple of years, the conditioning to
> avoid left-recursing like the plague is already deeply etched into my
> frontal cortex. When I first looked at this latest example I couldn't
> cope with it at all because it was too easy.

ha! i know what ya mean :) it is WEIRD!
Ter

From researcher0x00 at gmail.com  Mon Feb 28 18:12:11 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 28 Feb 2011 21:12:11 -0500
Subject: [antlr-interest] ANTLR 3 using k=0, any info on doing this?
Message-ID: <AANLkTimFsVgRhj6FaXKyTSXc4DYAQv7qgRbADL3TZzts@mail.gmail.com>

I tried searching the interest group with k=0 but that wasn't productive,
and Google doesn't do any better.

Yes I know setting k=0 is not what one normally if ever does with ANTLR, but
I am researching what it will take to get ANTLR to validate a Microsoft
Common Language Infrastructure file. I did write a separate validator by
hand and that works great.

One of my goals out of this is to have a way to write binary file readers
and validators using ANTLR. Yes I know that I will have to modify ANTLR.g to
do this correctly, but before that, I have to know what the current ANTLR.g
is capable of doing and what needs to be modified or enhanced.

So far I have only fond the ANTLR 2 Java .class file reader by Andreas
Rueckert and the few mentions of using Bytes in "Definitive ANTLR
Reference". I am getting the other book.

Using gated semantic predicates is working out great, but ANTLR is
determined to check for multiple alternatives. I was hoping that K=0 would
shut that whole process down  and using the gated semantic predicates to
dynamically shut off the options would leave ANTLR not trying alternatives.

Any clues or references are welcome.

Thanks Eric

From michael.bedward at gmail.com  Mon Feb 28 19:27:23 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 1 Mar 2011 14:27:23 +1100
Subject: [antlr-interest] sdl: simple declarative language
Message-ID: <AANLkTim0w=m4Z6RVkSNpCYsGf3ne4_ioSTOE97eTnF+N@mail.gmail.com>

Hi folks,

Does anyone know of an existing ANTLR grammar for Simple Declarative Language ?

http://www.ikayzo.org/confluence/display/SDL/Home

I've used their Java parser which works well but would like to have it
in ANTLR to make it easier to deal with custom tags etc.  Thought I'd
check the lazy option before writing one myself.

Michael

