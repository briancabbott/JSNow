From jchgautier at yahoo.fr  Fri Dec  1 02:11:59 2006
From: jchgautier at yahoo.fr (JeanChristophe Gautier)
Date: Fri, 1 Dec 2006 11:11:59 +0100 (CET)
Subject: [antlr-interest] RE : Re: RE : Re: How can I ignore reserved words
	in certain cases ?
In-Reply-To: <OF202E6D4A.F59AA463-ON86257236.004B72E3-86257236.004B72E7@lawson.com>
Message-ID: <20061201101159.70101.qmail@web23403.mail.ird.yahoo.com>

Hi all,

Thanks to everyone for their help.
Using Ryan's solution, we have managed to overcome the
problem.

The expression line now looks like this:

expr1: PRINT {isValidString(LT(1).getText())}? .;

For us it works as we want.
Thanks again for all the input. It helps us to
understand the possibilities with Antlr.

JC



Ryan Hollom <ryan.hollom at us.lawson.com> a ?crit : I,
too, have this issue with my DSL.  The way I have
handled it (which doesn't work in all cases, due to
ambiguous parser rules), is to define the parser rule
kind of like this:

expr: PRINT {isValidString(input.LT(1))}=> .

Where isValidString() checks to see whether the input
is a bunch of lowercase chars.  The rule will then
match any token after that as part of the rule.

Hope this helps,
Ryan


-----antlr-interest-bounces at antlr.org wrote: -----

To: antlr-interest at antlr.org
From: JeanChristophe Gautier <jchgautier at yahoo.fr>
Sent by: antlr-interest-bounces at antlr.org
Date: 11/30/2006 06:59AM
Subject: [antlr-interest] RE : Re: How can I ignore
reserved words in certain cases ?

Hi,
 
 Thanks for your help but that doesn't solve my
problem. We have a hundred or so key words (such as
print) declared in the lexer, all of which should be
accepted as a STRING. We could always do as you
suggested but we would have a parser rule several
lines long and we would need to modify it whenever we
added a new key word. Is there no way to simply ignore
the key word tokens for certain rules?
 
 Many thanks,
 JC
 

Micheal J <open.zone at virgin.net>  a ?crit :          
Hi,


I am writing a command line editor that has reserved
words, such
 as

"print", that should accept, at times, any string
value. For example the

following should be allowed:


print hello

print print


The grammar is defined as follows:




class ExprParser extends Parser;


options {

        k = 2;

    buildAST=true;

}


expr: expr1;


expr1: PRINT STRING;
 
==> expr: PRINT ( STRING | PRINT ) ;
 




class ExprLexer extends Lexer;


options {

    k=2;

    charVocabulary='\u0000'..'\u007F';

    testLiterals = false;

}


tokens {

        PRINT = "print";

}


STRING options { testLiterals = true; } : ('a'..'z')+;


WS    : ( ' '

        | '\r' '\n'

        | '\n'

        | '\t'

  
      )

        {$setType(Token.SKIP);}

      ;



Obviously the second example ("print print") does not
work

 because the

token PRINT takes priority since we have testLiterals
= true (note
     that
this example is taken from a more complex grammar).

The    question is: how do I, under certain
circumstances, ignore reserved
word    tokens?

Bythe way, I am currently using antlr 2.7.   
      
    ==> ANTLR2's latest version is 2.7.7   

Many    thanks,
JC



        

---------------------------------
    Yahoo! Mail r?invente le mail !  D?couvrez le 
nouveau     Yahoo! Mail  et son interface
r?volutionnaire.  
                   

---------------------------------
  Yahoo! Mail r?invente le mail !  D?couvrez le 
nouveau Yahoo! Mail  et son interface r?volutionnaire.

 




	

	
		
___________________________________________________________________________ 
D?couvrez une nouvelle fa?on d'obtenir des r?ponses ? toutes vos questions ! 
Profitez des connaissances, des opinions et des exp?riences des internautes sur Yahoo! Questions/R?ponses 
http://fr.answers.yahoo.com

From rgavrilov at QUARK.com  Fri Dec  1 06:02:30 2006
From: rgavrilov at QUARK.com (Roman Gavrilov)
Date: Fri, 1 Dec 2006 07:02:30 -0700
Subject: [antlr-interest] .java -> .xml -- lazy route
Message-ID: <9D9FFB4786F59745B1DA49295D543E924A4BD1@EXCH-USA-VS1.usa.quark.com>

Is there anything that would OUT-OF-THE-BOX let me do .java -> .xml
(Java AST to XML)?

Regards,
Roman

From lists.steve at arachnedesign.net  Fri Dec  1 06:35:47 2006
From: lists.steve at arachnedesign.net (Steve Lianoglou)
Date: Fri, 1 Dec 2006 09:35:47 -0500
Subject: [antlr-interest] .java -> .xml -- lazy route
In-Reply-To: <9D9FFB4786F59745B1DA49295D543E924A4BD1@EXCH-USA-VS1.usa.quark.com>
References: <9D9FFB4786F59745B1DA49295D543E924A4BD1@EXCH-USA-VS1.usa.quark.com>
Message-ID: <CB529740-0BAB-4F4C-8374-CC9ED461DBC1@arachnedesign.net>

> Is there anything that would OUT-OF-THE-BOX let me do .java -> .xml
> (Java AST to XML)?

You mean serializing a java object to xml? I'm not sure what you're  
really looking for, but if that's it, you can try this:

http://xstream.codehaus.org/

I've used it a couple of times and did what I expected it to w/ not  
too much fuss.

-steve

From antlr at jazillian.com  Fri Dec  1 13:22:09 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 01 Dec 2006 16:22:09 -0500
Subject: [antlr-interest] .java -> .xml -- lazy route
In-Reply-To: <CB529740-0BAB-4F4C-8374-CC9ED461DBC1@arachnedesign.net>
References: <9D9FFB4786F59745B1DA49295D543E924A4BD1@EXCH-USA-VS1.usa.quark.com>
	<CB529740-0BAB-4F4C-8374-CC9ED461DBC1@arachnedesign.net>
Message-ID: <45709D01.3020304@jazillian.com>

Steve Lianoglou wrote:
>> Is there anything that would OUT-OF-THE-BOX let me do .java -> .xml
>> (Java AST to XML)?
>
> You mean serializing a java object to xml? I'm not sure what you're 
> really looking for, but if that's it, you can try this:
>
> http://xstream.codehaus.org/
>
> I've used it a couple of times and did what I expected it to w/ not 
> too much fuss.
>
> -steve
>
Sounds like he wants to store Java source in XML format, so using 
xstream to serialize the ASTs
that ANTLR produces (which represent the Java source) would work. You 
could also use castor
(www.castor.org) to save the ASTs in XML.

Or you could very simply walk the AST with code like:

	// A simple method to print out an AST as a tree:
	private static String SPACES = "                                              ";
	private static void showTree(AST t, int level) {
		if ( t==null ) return;
		System.err.print(SPACES.substring(0, level));
		System.err.println("text:" + t.getText() + " type=" + t.getType());
		AST child = t.getFirstChild();
		showTree(child, level+2);
		AST next = t.getNextSibling();
		showTree(next, level);
	}




From mydiksha at yahoo.com  Sat Dec  2 12:45:27 2006
From: mydiksha at yahoo.com (Diksha singh)
Date: Sat, 2 Dec 2006 12:45:27 -0800 (PST)
Subject: [antlr-interest] lexer creation for binary files??
Message-ID: <850408.32512.qm@web55906.mail.re3.yahoo.com>

 
  Is there a simple way to create a lexer for binary files in ANTLR v3? I want
to scan a Java *.class file and break it into one byte tokens that can be read by the parser.

I know this has been done in version 2 of ANTLR, but I'd like to do it in version 3.0
   
  Thanks

 
---------------------------------
Access over 1 million songs - Yahoo! Music Unlimited.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061202/67398a13/attachment.html 

From jorn.news at gmail.com  Sun Dec  3 04:21:59 2006
From: jorn.news at gmail.com (Jorn Ronnow)
Date: Sun, 3 Dec 2006 13:21:59 +0100
Subject: [antlr-interest] Problem when trying to run John Merrell's tutorial
	(from antlr.org Getting Started page)
Message-ID: <ekufb6$1pj$1@sea.gmane.org>

I'm trying to work my way through John Merrell's ANTLR tutorial
(http://www.merrells.com/blog/work/archives/2002/01/accent_vol_2_no.html,
linked from http://www.antlr.org/doc/getting-started.html).

I've generated the lexer and parser files, and compiled them and Merrell's
main.cpp.

When I try to run the example, I get an access violation ("Access violation
reading location 0x00000014") following a call to parser.expr().

This is what happens in main():

    CalcLexer lexer(cin);
    CalcParser parser(lexer);
    parser.expr();

Tracing the call to CalcParser::expr(), I see that this function tries to
call astFactory->create(LT(1)), but astFactory is NULL, which makes the
program crash.

Clues, anyone?

(Compiler: MS VC++ 2005. ANTLR 2.7.7 lib built with static RTL, Merrell's
sample prog built with static RTL.)

(This message may be duplicated. I had problems posting it, so I've made a
few retries.)

--
/J?rn




From ora.et.labora at web.de  Sun Dec  3 10:27:30 2006
From: ora.et.labora at web.de (wolfgang haefelinger)
Date: Sun, 03 Dec 2006 18:27:30 -0000
Subject: [antlr-interest] MSI Installer ANTLR 2.7.7
Message-ID: <ENEFKBMHAGGDPHHBAGHGCECACAAA.ora.et.labora@web.de>

Greetings,

just saved two files into Antlr's depot:

	//depot/code/org.antlr/dev/geronimo.dev/ftp/antlr-2.7.7.msi#1
	//depot/code/org.antlr/dev/geronimo.dev/ftp/antlr-2.7.7.msi.md5#1

File antlr-2.7.7.msi is meant as a replacement for the current
published http://www.antlr.org/download/antlr-2.7.7.msi (which
is actually derived from 2.7.7rc1):
 
 * sync with 2.7.7 (minor changes compared to  rc1 like reporting
   correct version number, publish date in html files et cetera).

 * default installtion directory is now c:\antlr\277 instead of 
   c:\antlr\277rc1.

 * uninstalls cleanly, i.e. removes files like *.pyc as well as 
   directories "bin" and "sbin".

Regards,
Wolfgang.

P.S.: Ter, would you please update http://www.antlr.org/download.html? 
      Thx.


 



From ric.klaren at gmail.com  Sun Dec  3 11:31:50 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Sun, 3 Dec 2006 20:31:50 +0100
Subject: [antlr-interest] Problem when trying to run John Merrell's
	tutorial (from antlr.org Getting Started page)
In-Reply-To: <ekufb6$1pj$1@sea.gmane.org>
References: <ekufb6$1pj$1@sea.gmane.org>
Message-ID: <bc607a4e0612031131k1d1f7f0dr3ecd9a7e912d2d0e@mail.gmail.com>

Hi,

On 12/3/06, Jorn Ronnow <jorn.news at gmail.com> wrote:
> ....
> Tracing the call to CalcParser::expr(), I see that this function tries to
> call astFactory->create(LT(1)), but astFactory is NULL, which makes the
> program crash.

This problem is due to changes in 2.7.4 plus or minus a minor version
number. It's now required to initialize the ASTFactory when building
trees. Look at the examples/C++ documentation section on how to do
this.

Cheers,

Ric

From jorn.news at gmail.com  Sun Dec  3 13:38:48 2006
From: jorn.news at gmail.com (Jorn Ronnow)
Date: Sun, 3 Dec 2006 22:38:48 +0100
Subject: [antlr-interest] Problem when trying to run John
	Merrell'stutorial (from antlr.org Getting Started page)
References: <ekufb6$1pj$1@sea.gmane.org>
	<bc607a4e0612031131k1d1f7f0dr3ecd9a7e912d2d0e@mail.gmail.com>
Message-ID: <ekvfv7$1ts$1@sea.gmane.org>

"Ric Klaren" <ric.klaren at gmail.com> wrote in
message news:bc607a4e0612031131k1d1f7f0dr3ecd9a7e912d2d0e at mail.gmail.com...
> Hi,
>
> On 12/3/06, Jorn Ronnow
<jorn.news at gmail.com> wrote:
> > ....
> > Tracing the call to CalcParser::expr(), I see that this function tries
to
> > call astFactory->create(LT(1)), but astFactory is NULL, which makes the
> > program crash.
>
> This problem is due to changes in 2.7.4 plus or minus a minor version
> number. It's now required to initialize the ASTFactory when building
> trees. Look at the examples/C++ documentation section on how to do
> this.

Thanks, that got me up and running!

cul8r
/J?rn




From naimal_khan at hotmail.com  Sun Dec  3 18:15:50 2006
From: naimal_khan at hotmail.com (Naimal Khan)
Date: Mon, 04 Dec 2006 07:15:50 +0500
Subject: [antlr-interest] Preserving spaces: TokenStreamRewriteEngine
Message-ID: <BAY23-F198E7FE8A5B3827C7552D49ADF0@phx.gbl>

How can i preserve the white spaces when I spit out an instrumented code 
with TokenStreamRewriteEngine?
Niamal

_________________________________________________________________
FREE pop-up blocking with the new MSN Toolbar - get it now! 
http://toolbar.msn.click-url.com/go/onm00200415ave/direct/01/


From antlr-list at arizona-software.ch  Sun Dec  3 18:22:12 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 3 Dec 2006 18:22:12 -0800
Subject: [antlr-interest] ANTLRWorks 1.0b7 available
Message-ID: <D72E0D37-4842-42C8-9302-19C4F80718C0@arizona-software.ch>

Hello,

ANTLRWorks 1.0b7 is now available for download: this version fixes  
many bugs (i.e. Windows syntax coloring issue, etc) and add now the  
support of package declared in the headers section. The plugin for  
IntelliJ has also been updated.

Regards,

Jean


From fhaupt at informatik.uni-wuerzburg.de  Mon Dec  4 03:18:55 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Mon, 4 Dec 2006 12:18:55 +0100
Subject: [antlr-interest] antlrworks
Message-ID: <20061204111855.GB18410@maya.lan>

Hi there,

i'm trying to use antlrworks-1.07b(http://www.antlr.org/download/antlrworks-1.0b7.jar) . i'm trying to execute it as 
described at the homepage. 

i have java, as it is required, at least it says so in the docu:
java -version
java version "1.4.2_12"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_12-b03)
Java HotSpot(TM) Client VM (build 1.4.2_12-b03, mixed mode)

but i get an error at starting :


java -jar antlrworks-1.07b.jar 
Warning: Cannot convert string "-b&h-lucida-medium-r-normal-sans-*-140-*-*-p-*-iso8859-1" to type FontStruct
java.lang.NullPointerException
	at java.io.File.<init>(File.java:180)
	at org.antlr.works.components.grammar.CEditorGrammar.isFileWritable(Unknown Source)
	at org.antlr.works.components.grammar.CEditorGrammar.updateInformation(Unknown Source)
	at org.antlr.works.components.grammar.CEditorGrammar.componentDidAwake(Unknown Source)
	at org.antlr.works.components.grammar.CContainerGrammar.becomingVisibleForTheFirstTime(Unknown Source)
	at edu.usfca.xj.appkit.frame.XJFrame.setVisible(Unknown Source)
	at edu.usfca.xj.appkit.frame.XJFrame.show(Unknown Source)
	at edu.usfca.xj.appkit.document.XJDocument.showWindow(Unknown Source)
	at edu.usfca.xj.appkit.app.XJApplication.newDocument(Unknown Source)
	at edu.usfca.xj.appkit.app.XJApplication.newDocument(Unknown Source)
	at org.antlr.works.IDE.appDidLaunch(Unknown Source)
	at edu.usfca.xj.appkit.app.XJApplication$1.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:189)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:478)
	at java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:151)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:145)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:137)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:100)


am I missing something here? Could someone point me in the right direction please?

Thanks a lot for any advice.

greets
Fabian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/bb52e1da/attachment.bin 

From ssiegel at finjan.com  Mon Dec  4 05:56:45 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Mon, 4 Dec 2006 15:56:45 +0200
Subject: [antlr-interest] ANTLR 3 rewrite rule syntax
Message-ID: <E344C433F006AB45A306D422F9C3EB4CF7DB3B@exmail1.finjan.com>

To my surprise, I am coming to like the rewrite rules better than the
grammar markups; more power and better separation between grammar and
output.  I do have some syntax questions.

 

Consider 

rule : A? B (id+)=C*

 

I know that I can write -> A? MYTOKEN[$B] $id*

 

But how can I make private tokens from "A" and "C". Ultimately "C" can
be handled by a subrule but how do I issue a conditional token in my
rewrite. MYTOKEN[$A?] and MYTOKEN[$A]? don't seem to work.

 

Shmuel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/336c47f1/attachment.html 

From alexander at gaengel.de  Mon Dec  4 06:10:56 2006
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Mon, 4 Dec 2006 15:10:56 +0100 (MET)
Subject: [antlr-interest] ast rewrite
Message-ID: <45742C51.4030800@gaengel.de>

Hi,
I have a lexer rule like this:

String    :
     '\''  ~('\'')* '\''
     ;

but I would like to have in the AST only the sting without the single quotes

is this possible?

I use AntlrWorks 1.0b6

From alexander at gaengel.de  Mon Dec  4 06:43:22 2006
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Mon, 4 Dec 2006 15:43:22 +0100 (MET)
Subject: [antlr-interest] ast rewrite
In-Reply-To: <45742C51.4030800@gaengel.de>
References: <45742C51.4030800@gaengel.de>
Message-ID: <457433EB.4090303@gaengel.de>

Ok I found it in the wiki:

STRING: '\"' CHARS '\"' {setText(getText().substring(1, getText().length()));} ;

but with this I still have the tailing '

I thins the wiki is wrong in this point. (I'mnot sure if I just misssomething)

I now use this:

String    :
     '\''  ~('\'')* '\''   {setText(getText().substring(1, 
getText().length()-1));}
     ;

Alexander


Alexander G?ngel schrieb:
> Hi,
> I have a lexer rule like this:
>
> String    :
>     '\''  ~('\'')* '\''
>     ;
>
> but I would like to have in the AST only the sting without the single 
> quotes
>
> is this possible?
>
> I use AntlrWorks 1.0b6

From ugo.landini at gmail.com  Mon Dec  4 08:34:06 2006
From: ugo.landini at gmail.com (ugol)
Date: Mon, 4 Dec 2006 17:34:06 +0100
Subject: [antlr-interest] How to implement an IF
Message-ID: <b70c55390612040834k5cfc6281le8ab17f272f895fd@mail.gmail.com>

Hi, I am a complete newbie of ANTLR. I am using the 3.0b5 release and
I am trying to adapt the example found here:

http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

I want to add to the expression evaluation a conditional expression:

f.e.

if (x>10) x=y

I think I have correctly built the lexer and parser stuff, but I can't
figure out how to check the condition and then act. My tree stuff
parse the condition, no matter if the condition is true or false. I am
probably missing something here.

I have a IF node with a condition and an expression, but don't know
how to say this:

if ($cond.value() assign.??? )

I was thinking to set some sort of variable and then check it, but I
don't know if this is the right way to do it, and the v3examples
didn't help.

TIA,
uL

Attached two fragments of Cond.g and Eval.g

grammar Cond;
options {
    output=AST;
    ASTLabelType=CommonTree; // type of $stat.tree ref etc...
}

prog
    :   ( stat {System.out.println($stat.tree.toStringTree());} )+ ;

stat
    :   IF LPAREN condition RPAREN assign NEWLINE -> ^(IF condition assign)
    |   assign NEWLINE  -> assign
    |   expr NEWLINE    -> expr
    |   NEWLINE         ->
    ;

assign
    : VAR ASSIGN expr -> ^(ASSIGN VAR expr)
    ;

[cut]

tree grammar Eval;

options {
    tokenVocab=Cond;
    ASTLabelType=CommonTree;
}

@header {
import java.util.HashMap;
}

@members {
}

prog:   stat+ ;

stat:   expr
        {System.out.println($expr.value);}
    |   ^(ASSIGN VAR expr)
        {Memory.put($VAR.text, new Integer($expr.value));}
    |   ^(IF condition assign)
        {if ($condition.value) // how to reference the assign part here?}    ;

condition returns [boolean value]
    :  ^(EQUALS a=expr b=expr) {$value = (a == b);}
    ;

From antlr-list at arizona-software.ch  Mon Dec  4 08:45:31 2006
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 4 Dec 2006 08:45:31 -0800
Subject: [antlr-interest] ANTLRWorks 1.0b8 fixes
Message-ID: <C8867AD3-8024-478C-92AF-38E6CDF8B419@arizona-software.ch>

Hello,

Please download the new version of ANTLRWorks 1.0b8 that fixes a few  
annoying bugs that was in the yesterday release.

http://www.antlr.org/works/index.html

- fixed a bug where package name with dot would fail to be correctly  
parsed
- fixed a bug where creating a new document would fail
- fixed a bug where checking the grammar would make the current  
syntax diagram go away
- fixed a bug where checking twice a grammar containing one or more  
errors would fail to report the errors the second time

Sorry for that.

Regards,

Jean


From ewbank at gmail.com  Mon Dec  4 08:48:30 2006
From: ewbank at gmail.com (Bryan Ewbank)
Date: Mon, 4 Dec 2006 11:48:30 -0500
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <b70c55390612040834k5cfc6281le8ab17f272f895fd@mail.gmail.com>
References: <b70c55390612040834k5cfc6281le8ab17f272f895fd@mail.gmail.com>
Message-ID: <dd3a065f0612040848td60168dqb7a7786a8c0ef828@mail.gmail.com>

I don't know antlr3 syntax, but the general idea is to process only
the elements you want, and skip ths others.  In other words, delay
processing the "assign" until you know that the condition is true.

^(IF condition x:.)        // x is NOT evaluated, merely captured
   { if ($condition.value) { stat(x); }

Hope this helps!

> I want to add to the expression evaluation a conditional expression:
>
> I think I have correctly built the lexer and parser stuff, but I can't
> figure out how to check the condition and then act. My tree stuff
> parse the condition, no matter if the condition is true or false. I am
> probably missing something here.

From cross at symboticware.com  Mon Dec  4 09:01:01 2006
From: cross at symboticware.com (Cameron Ross)
Date: Mon, 04 Dec 2006 12:01:01 -0500
Subject: [antlr-interest] Adding state variables to a tree parser
Message-ID: <4574544D.3010309@symboticware.com>

Hello,

I have a tree parser called Expander that extends a BaseTreeParser 
defined within a super-grammar.  Expander overrides a BaseTreeParser 
rule so that the text the a specific token is gets expanded N number of 
times.  Everything works as expected when I hard-code the value for N 
within Expander.  However, I would like to add a property to Expander so 
that N can be set by a parser client and read from within the Expander 
action code. 

I've defined a subclass of BaseTreeParser with the required property and 
then attempted to define Expander in the following ways:
    1) class Expander extends 
BaseTreeParser("my.package.name.BaseExpander");
    2) class Expander extends TreeParser("my.package.name.BaseExpander");
    3) class Expander extends BaseExpander; // with appropriate import 
statement in header block

None of these work.

Is there a way that I can achieve my objective?  Note that I'm using 
ANTLR version 2.7.6.

Thanks in advance,
Cameron Ross.

From jimi at intersystems.com  Mon Dec  4 09:04:05 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 4 Dec 2006 12:04:05 -0500
Subject: [antlr-interest] ANTLR 3 rewrite rule syntax
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4CF7DB3B@exmail1.finjan.com>
Message-ID: <20061204170406.1637B5A8@mail.intersystems.com>

Use conditional rewrite (plenty of ways to decide what is to be written, this is just one example):
 
 
rule: (a=A)? b=B (id+=C)*
 
     -> {$a == null && $id == null}? $b
     -> {$a == null && $id != null}? $b $id*
etc?
;
 
That should give you enough info to proceed I think.
 
Jim
 
   _____  

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Shmuel Siegel
Sent: Monday, December 04, 2006 5:57 AM
To: ANTLR Interest
Subject: [antlr-interest] ANTLR 3 rewrite rule syntax
 
To my surprise, I am coming to like the rewrite rules better than the grammar markups; more power and better separation between grammar and output.  I do have some syntax questions.
 
Consider 
rule : A? B (id+)=C*
 
I know that I can write -> A? MYTOKEN[$B] $id*
 
But how can I make private tokens from ?A? and ?C?. Ultimately ?C? can be handled by a subrule but how do I issue a conditional token in my rewrite. MYTOKEN[$A?] and MYTOKEN[$A]? don?t seem to work.
 
Shmuel

--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.15.6/567 - Release Date: 12/4/2006 7:18 AM


-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.15.6/567 - Release Date: 12/4/2006 7:18 AM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/a9f69806/attachment.html 

From dave at badgers-in-foil.co.uk  Mon Dec  4 09:19:13 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 4 Dec 2006 17:19:13 +0000
Subject: [antlr-interest] ANTLR 3 rewrite rule syntax
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4CF7DB3B@exmail1.finjan.com>
References: <E344C433F006AB45A306D422F9C3EB4CF7DB3B@exmail1.finjan.com>
Message-ID: <20061204171913.GA4732@badgers-in-foil.co.uk>

On Mon, Dec 04, 2006 at 03:56:45PM +0200, Shmuel Siegel wrote:
> Consider 
> 
> rule : A? B (id+)=C*
> 
> I know that I can write -> A? MYTOKEN[$B] $id*
> 
> But how can I make private tokens from "A" and "C". Ultimately "C" can
> be handled by a subrule but how do I issue a conditional token in my
> rewrite. MYTOKEN[$A?] and MYTOKEN[$A]? don't seem to work.

In addition to Jim's suggestion, you could also push "A" into another
rule:

  rule : myA? B (id+=C)*  -> myA? MYTOKEN[$B] $id
       ;
  myA  : A -> MYTOKEN[$A]
       ;


ta,
dave

-- 
http://david.holroyd.me.uk/

From fhaupt at informatik.uni-wuerzburg.de  Mon Dec  4 09:23:32 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Mon, 4 Dec 2006 18:23:32 +0100
Subject: [antlr-interest] antlrworks
In-Reply-To: <e7e02b7a0612040433x3337a51dx63120167454ff8a8@mail.gmail.com>
References: <20061204111855.GB18410@maya.lan>
	<e7e02b7a0612040433x3337a51dx63120167454ff8a8@mail.gmail.com>
Message-ID: <20061204172332.GC26125@maya.lan>

thanks for the fast reply,

but i'm sorry, i don't have windows :)
i'm running on linux.

thanks anyways.. 

ps i tried it in vmware, it just shows the startup-splash screen, nothing more.
so it doesn't work in windows either

greets 
Fabian
On Mon, Dec 04, 2006 at 01:33:17PM +0100, Dominik Holenstein wrote:
> Fabian,
> After you have downloaded the antlrworks-1.0b7.jar file just double-click on
> the file to open it.
> 
> If you are using the Internet Explorer to download the file change the file
> name from antlrworks-1.0b7.zip to antlrworks-1.0b7.jar.
> (The Internet Explorer thinks this is a zip file and not a jar file...)
> 
> Dominik
> 
> 
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/988ebf8e/attachment.bin 

From parrt at cs.usfca.edu  Mon Dec  4 09:48:23 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Dec 2006 09:48:23 -0800
Subject: [antlr-interest] ast rewrite
In-Reply-To: <457433EB.4090303@gaengel.de>
References: <45742C51.4030800@gaengel.de> <457433EB.4090303@gaengel.de>
Message-ID: <243932A3-48AE-46E0-B47E-055F00B61DD9@cs.usfca.edu>


On Dec 4, 2006, at 6:43 AM, Alexander G?ngel wrote:

> Ok I found it in the wiki:
>
> STRING: '\"' CHARS '\"' {setText(getText().substring(1, getText 
> ().length()));} ;
>
> but with this I still have the tailing '
>
> I thins the wiki is wrong in this point. (I'mnot sure if I just  
> misssomething)

Hi Alexander.  I think it's okay, because the Java API for String  
says "The substring begins at the specified beginIndex and extends to  
the character at index endIndex - 1."

> I now use this:
>
> String    :
>     '\''  ~('\'')* '\''   {setText(getText().substring(1, getText 
> ().length()-1));}
>     ;

Does that work? are you not missing the last character before the  
last quote?

Ter


From crickett at lanl.gov  Mon Dec  4 09:49:14 2006
From: crickett at lanl.gov (Christopher D. Rickett)
Date: Mon, 4 Dec 2006 10:49:14 -0700 (MST)
Subject: [antlr-interest] [antlr-dev] actions in rules with backtracking
	(fwd)
Message-ID: <Pine.LNX.4.58.0612041046210.15401@lennox.lanl.gov>



---------- Forwarded message ----------
Date: Fri, 1 Dec 2006 17:09:53 -0700
From: Craig Rasmussen <crasmussen at lanl.gov>
To: Kay Roepke <kroepke at classdump.org>
Cc: Christopher D. Rickett <crickett at lanl.gov>, antlr-interest at antlr.org
Subject: Re: [antlr-dev] actions in rules with backtracking

Kay,

In your kind response you asked what we wanted to achieve.  In general we are
developing a parser for Fortran 2003 (with some later extensions).
Specifically, we are trying to add communication between the parser and lexer.
Fortran has some nasty ambiguities between identifiers and keywords.  For
example, you can declare an integer with the name integer, as in,

    integer :: integer = 3

This may seem like poor form, but Fortran has so many stupid keywords that it
is almost necessary.

It is common to perform a preliminary pass over the token list to do a
rudimentary analysis in order to fix up the tokens.  However, we thought it
might be better to have parser change a keyword to an identifier, just before
it was expecting to see an identifier.  However, with backtracking, actions to
do this are not called.

Perhaps you have some other ideas.

Cheers,
Craig


On Nov 30, 2006, at 2:08 PM, Kay Roepke wrote:

> Hi!
> 
> On 30. Nov 2006, at 21:54 , Christopher D. Rickett wrote:
> 
> > Is there a way to force actions that begin rules to always be executed,
> > even if backtracking is enabled?  For example:
> > 
> > A : {/* my action */;} B ;
> > 
> > Is there a way to ensure that this action will be executed?
> 
> Do you mean to execute the action 'while backtracking'?
> That's tricky. For synpreds you might be able to get away with the global
> @synpredgate { expression that replaces the 'backtracking == 0' check}, but
> that only works for syntactic predicates and affects all synpreds.
> 
> OTOH:
> If you simply want to execute code at the beginning of a rule, use an @init
> action.
> Those are not protected with 'if (backtracking==0)':
> 
> rule
> @init {
>      // this is always executed, try the -trace option to see it in action
> }
> :    'foo' ;
> 
> BTW, what do you want to achieve?
> 
> HTH,
> -k
> 
> P.S.: antlr-interest is a better list for those questions ;)
> -- 
> Kay R?pke
> http://classdump.org/
> 
> 
> 
> 


From parrt at cs.usfca.edu  Mon Dec  4 10:01:48 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Dec 2006 10:01:48 -0800
Subject: [antlr-interest] [antlr-dev] actions in rules with backtracking
	(fwd)
In-Reply-To: <Pine.LNX.4.58.0612041046210.15401@lennox.lanl.gov>
References: <Pine.LNX.4.58.0612041046210.15401@lennox.lanl.gov>
Message-ID: <C6346FDC-CDE4-4637-9878-7869941C095F@cs.usfca.edu>


On Dec 4, 2006, at 9:49 AM, Christopher D. Rickett wrote:

>
>
> ---------- Forwarded message ----------
> Date: Fri, 1 Dec 2006 17:09:53 -0700
> From: Craig Rasmussen <crasmussen at lanl.gov>
> To: Kay Roepke <kroepke at classdump.org>
> Cc: Christopher D. Rickett <crickett at lanl.gov>, antlr- 
> interest at antlr.org
> Subject: Re: [antlr-dev] actions in rules with backtracking
>
> Kay,
>
> In your kind response you asked what we wanted to achieve.  In  
> general we are
> developing a parser for Fortran 2003 (with some later extensions).
> Specifically, we are trying to add communication between the parser  
> and lexer.
> Fortran has some nasty ambiguities between identifiers and  
> keywords.  For
> example, you can declare an integer with the name integer, as in,
>
>     integer :: integer = 3
>
> This may seem like poor form, but Fortran has so many stupid  
> keywords that it
> is almost necessary.
>
> It is common to perform a preliminary pass over the token list to do a
> rudimentary analysis in order to fix up the tokens.  However, we  
> thought it
> might be better to have parser change a keyword to an identifier,  
> just before
> it was expecting to see an identifier.  However, with backtracking,  
> actions to
> do this are not called.
>
> Perhaps you have some other ideas.

Perhaps you can make a CommonTokenStream implementation that looks  
for this kind of keyword issue and replace the 3 tokens with a new  
meta token before it hits the parser.  Then now parser->lexer comm.  
needed.

Ter

From Joerg.Werner at qimonda.com  Mon Dec  4 11:25:47 2006
From: Joerg.Werner at qimonda.com (Joerg.Werner at qimonda.com)
Date: Mon, 4 Dec 2006 20:25:47 +0100
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <dd3a065f0612040848td60168dqb7a7786a8c0ef828@mail.gmail.com>
Message-ID: <8659C7B861F21A4889878EE7CF859D7D02A049FF@mucse303.eu.infineon.com>

Hi all,

for antlr3 the stat(x) will not work, because you can not pass the sub-tree to a rule any more (which the rule then processes).
In antlr3 the current tree parsing position is stored in the TreeNodeStream class instance, which is an instance variable of your TreeParser class. So you can not easily tell a sub-rule what part of the tree to process. You need instead to forward/rewind the TreeNodeStream to the correct position, before calling the rule of interest.

For writing interpreters with antlr3 I see only two solutions:
-Create a new instance of the TreeParser to handle the sub-tree (incurs a lot of overhead)
-Sub-class (Common)TreeNodeStream to easily jump to certain positions in the TreeNodeStream (similar to the mark() and rewind() methods in CommonTreeNodeStream, but these are stack based and will thus not work in your case).

Or does one of the other experts knows a better solution to this problem?

Regards,

J?rg


-- 
Dr. J?rg Werner
Qimonda AG 
Memory Products Division
QAG PD PT TPE C
Am Campeon 1-12
D-85579 Neubiberg
email: joerg.werner at qimonda.com
Tel:  +49 89 234-26602
Fax: +49 89 234-9553128

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bryan Ewbank
Sent: Monday, December 04, 2006 5:48 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] How to implement an IF

I don't know antlr3 syntax, but the general idea is to process only the elements you want, and skip ths others.  In other words, delay processing the "assign" until you know that the condition is true.

^(IF condition x:.)        // x is NOT evaluated, merely captured
   { if ($condition.value) { stat(x); }

Hope this helps!

> I want to add to the expression evaluation a conditional expression:
>
> I think I have correctly built the lexer and parser stuff, but I can't 
> figure out how to check the condition and then act. My tree stuff 
> parse the condition, no matter if the condition is true or false. I am 
> probably missing something here.

From antlr at mirality.co.nz  Mon Dec  4 12:09:06 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 05 Dec 2006 09:09:06 +1300
Subject: [antlr-interest] ast rewrite
Message-ID: <7.0.1.0.0.20061205090314.03670898@mirality.co.nz>

At 08:33 5/12/2006, Terence Parr wrote:
 >
 >Hi Alexander.  I think it's okay, because the Java API for 
String
 >says "The substring begins at the specified beginIndex and 
extends
 >to the character at index endIndex - 1."

Yeah, but if you pass getText().length() as endIndex then 
endIndex-1 is the trailing single quote.  So the OP is quite 
correct.

I prefer doing something that avoids copying the text though; more 
like this:

String : '\'' str=UnquotedString '\''  { emit($str); 
$setType(String); };
fragment UnquotedString: ~('\'')*;

The subrule outputs a token (which simply indexes into the input 
stream rather than copying the text), which the parent rule then 
uses as its own output.  Note that I'm not 100% sure of the syntax 
you have to use in that first rule, you might have to experiment a 
bit.


From parrt at cs.usfca.edu  Mon Dec  4 12:30:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Dec 2006 12:30:31 -0800
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <8659C7B861F21A4889878EE7CF859D7D02A049FF@mucse303.eu.infineon.com>
References: <8659C7B861F21A4889878EE7CF859D7D02A049FF@mucse303.eu.infineon.com>
Message-ID: <AA3E0405-9826-49FE-8848-AD30352C5B4F@cs.usfca.edu>


On Dec 4, 2006, at 11:25 AM, <Joerg.Werner at qimonda.com>  
<Joerg.Werner at qimonda.com> wrote:

> Hi all,
>
> for antlr3 the stat(x) will not work, because you can not pass the  
> sub-tree to a rule any more (which the rule then processes).
> In antlr3 the current tree parsing position is stored in the  
> TreeNodeStream class instance, which is an instance variable of  
> your TreeParser class. So you can not easily tell a sub-rule what  
> part of the tree to process. You need instead to forward/rewind the  
> TreeNodeStream to the correct position, before calling the rule of  
> interest.

Yes, I noticed this myself the other day and am wondering what to do  
about it.

> For writing interpreters with antlr3 I see only two solutions:
> -Create a new instance of the TreeParser to handle the sub-tree  
> (incurs a lot of overhead)
> -Sub-class (Common)TreeNodeStream to easily jump to certain  
> positions in the TreeNodeStream (similar to the mark() and rewind()  
> methods in CommonTreeNodeStream, but these are stack based and will  
> thus not work in your case).
>
> Or does one of the other experts knows a better solution to this  
> problem?

Ok, I just figured out. we need a new method on the  
CommonTreeNodeStream that pushes the current location a stack and  
jumps to a new index in the stream.  The only trick then is to map  
nodes of interest to the correct index.  In reality, what happens is  
that the recognition of the functions in your language will create a  
hash table entry that maps the function name to the index in the stream:

funcDef
@init {int i = input.index();}
	:	'void' ID '(' ')' -> ^(FUNCDEF ID)
		{functions.put($ID.text, i);}
	;

something like that. If you get that to work, let us know.

I should also note that I don't think that I have finished  
backtracking for the tree node stream.  Comments on the market and  
rewind methods should indicate that.

Ter

From fhaupt at informatik.uni-wuerzburg.de  Mon Dec  4 14:06:08 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Mon, 4 Dec 2006 23:06:08 +0100
Subject: [antlr-interest] antlr 3 woe
Message-ID: <20061204220608.GB19576@maya.lan>

Hi there,

it works with the new release..

Now i have a strang problem: I'm trying to macht a rather simple statement:



Author="J.Doe"


my grammar so far is : (actually thats part of a bigger grammar, but thats the part is problematic for me)

author	:	AUTHORK EQ SIG STRING SIG;

fragment AUTHORK	:	'Author';
EQ	:	'=';
SIG	:	'"';
STRING	:	('a'..'z'|'A'..'Z'|'0'..'9'|'.')+;


but the i keeps getting me an MismachtedTokenException(0!=0)

what das this mean? is there anyting i have to activate or toggel to allow '"'?

thanks for any help in advandce

greets
Fabian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/5f4de5bd/attachment.bin 

From fhaupt at informatik.uni-wuerzburg.de  Mon Dec  4 14:15:26 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Mon, 4 Dec 2006 23:15:26 +0100
Subject: [antlr-interest] antlr 3 woe
In-Reply-To: <20061204220608.GB19576@maya.lan>
References: <20061204220608.GB19576@maya.lan>
Message-ID: <20061204221526.GC19576@maya.lan>

ok, 

it seems to be a problem of the rest :(

this part is working perfectly...

thanks anyways


On Mon, Dec 04, 2006 at 11:06:08PM +0100, fhaupt at informatik.uni-wuerzburg.de wrote:
> Hi there,
> 
> it works with the new release..
> 
> Now i have a strang problem: I'm trying to macht a rather simple statement:
> 
> 
> 
> Author="J.Doe"
> 
> 
> my grammar so far is : (actually thats part of a bigger grammar, but thats the part is problematic for me)
> 
> author	:	AUTHORK EQ SIG STRING SIG;
> 
> fragment AUTHORK	:	'Author';
> EQ	:	'=';
> SIG	:	'"';
> STRING	:	('a'..'z'|'A'..'Z'|'0'..'9'|'.')+;
> 
> 
> but the i keeps getting me an MismachtedTokenException(0!=0)
> 
> what das this mean? is there anyting i have to activate or toggel to allow '"'?
> 
> thanks for any help in advandce
> 
> greets
> Fabian


-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/5a505356/attachment.bin 

From fhaupt at informatik.uni-wuerzburg.de  Mon Dec  4 14:27:00 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Mon, 4 Dec 2006 23:27:00 +0100
Subject: [antlr-interest] antlr 3 woe
In-Reply-To: <20061204221526.GC19576@maya.lan>
References: <20061204220608.GB19576@maya.lan> <20061204221526.GC19576@maya.lan>
Message-ID: <20061204222700.GD19576@maya.lan>

I think i've stumbled upon the reason for the problems:

how can i match something like :

%META:TOPICINFO{}%


thist text should be matched by: 


meta	:      OTOPICINFO CTOPICINFO;

fragment OTOPICINFO
	:	'%META:TOPICINFO{' 
	;	
fragment CTOPICINFO:'}%';


but it isn't. maybe because of the string templates? how can i escap the }% part eg?

greets
fabian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061204/d2121787/attachment.bin 

From jbb at acm.org  Mon Dec  4 15:05:08 2006
From: jbb at acm.org (John B. Brodie)
Date: Mon, 04 Dec 2006 18:05:08 -0500
Subject: [antlr-interest] antlr 3 woe
In-Reply-To: <20061204222700.GD19576@maya.lan>
	(fhaupt@informatik.uni-wuerzburg.de)
References: <20061204220608.GB19576@maya.lan> <20061204221526.GC19576@maya.lan>
	<20061204222700.GD19576@maya.lan>
Message-ID: <E1GrMs0-0000m3-00@gecko>

>I think i've stumbled upon the reason for the problems:
>
>how can i match something like :
>
>%META:TOPICINFO{}%
>
>
>this text should be matched by:
>
>
>meta	:      OTOPICINFO CTOPICINFO;
>
>fragment OTOPICINFO
>	:	'%META:TOPICINFO{'
>	;
>fragment CTOPICINFO:'}%
>
>but it isn't. maybe because of the string templates? how can i escap
>the }% part eg?

the `fragment` keyword establishes a Token which is a fragment, e.g. a
portion of, another Token.

fragment Tokens may not be referenced by parser rules, but ANTLRv3
currently does not check for that mis-use (there is a bug report about
this).

you need to re-work your lexer rules so that Tokens that the parser needs
to see are not created by fragment rules.

as for using % in rules. I believe that % inside an antlr string,
e.g. '...%...'  works just fine without any special escape. But a %
anywhere inside an action code fragment, e.g. {...%...} should be escaped
as \%.  So { System.out.printf("%s%n",x); } should be written as
{ System.out.printf("\%s\%n",x); } // java 1.5.

Hope this helps...
   -jbb

From dave at badgers-in-foil.co.uk  Mon Dec  4 15:20:05 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 4 Dec 2006 23:20:05 +0000
Subject: [antlr-interest] Island grammar in AntlrV3
In-Reply-To: <20060902230143.GA10590@badgers-in-foil.co.uk>
References: <200609022309.32178.ilia@obnovlenie.ru>
	<20060902230143.GA10590@badgers-in-foil.co.uk>
Message-ID: <20061204232005.GA8855@badgers-in-foil.co.uk>

On Sat, Sep 02, 2006 at 11:01:43PM +0000, David Holroyd wrote:
> On Sat, Sep 02, 2006 at 11:09:32PM +0400, Ilia Kantor wrote:
> > I have island grammar, that becomes known on parsing stage.
> > 
> > How can I parse it with separate lexer/parser, 
> >   adding result to common tree ?
> 
> I've also been wondering about this, but I don't have an answer yet.
> 
> I'm worried that by the time the parser has the chance to try and fiddle
> with the lexer, lookahead has consumed the input anyway.  Maybe the
> standard infrastructure can let the input character stream 'backtrack'?
> 
> My specific use case is regular expression literals, e.g. I'd like to be
> able to handle,
> 
>   r =   / b; f = r/m;  // regexp literal with 'm' flag
>   r = a / b; f = r/m;  // two expr-statements involving division
> 
> It seems that the lexer needs context from the grammar in order to tell
> what to do on seeing '/'.

I've been avoiding working on this bit of my grammar, but I'm starting
to need it now.

At what level should I attack the problem?

My first idea is to have an action at the point in the outer grammar
where the island grammar's start-marker is recognised, which will...

 1) take the unprocessed tail of the CommonTokenStream that the
    outer parser currently has as input, and turn back into a string
 2) create a new island lexer/TokenStream that reprocesses the tail
    from 1)
 3) create a parser for the island grammar, and parse the new token
    stream from 2)
 4) get the tail of the island grammar's token stream once the
    end-marker was found, and convert back to the lexer for 'this'
    grammar again
 5) replace the original 'input' reference the parser was using, and get
    going with the outer grammar again

If all that works, I can hook the AST built by the island grammar into
the AST that the outer grammar is creating.


How does that compare with the approach that others are taking?  Does it
sound like it might work, or is it wrong-headed and silly?


thanks!
dave

-- 
http://david.holroyd.me.uk/

From fhaupt at informatik.uni-wuerzburg.de  Mon Dec  4 17:02:00 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Tue, 5 Dec 2006 02:02:00 +0100
Subject: [antlr-interest] antlr 3 woe
In-Reply-To: <E1GrMs0-0000m3-00@gecko>
References: <20061204220608.GB19576@maya.lan> <20061204221526.GC19576@maya.lan>
	<20061204222700.GD19576@maya.lan> <E1GrMs0-0000m3-00@gecko>
Message-ID: <20061205010200.GE19576@maya.lan>

Hi,

> the `fragment` keyword establishes a Token which is a fragment, e.g. a
> portion of, another Token.
> 
thats how I understood it. In most of the cases my keywords could also be matched by STRING.

> fragment Tokens may not be referenced by parser rules, but ANTLRv3
> currently does not check for that mis-use (there is a bug report about
> this).
Ahh, thanks a lot.

> 
> you need to re-work your lexer rules so that Tokens that the parser needs
> to see are not created by fragment rules.
I'm over it....

> 
> as for using % in rules. I believe that % inside an antlr string,
> e.g. '...%...'  works just fine without any special escape. But a %
> anywhere inside an action code fragment, e.g. {...%...} should be escaped
> as \%.  So { System.out.printf("%s%n",x); } should be written as
> { System.out.printf("\%s\%n",x); } // java 1.5.
> 
> Hope this helps...
>    -jbb
> 


Yes it does, 
thanks alot 

fabian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061205/cea150eb/attachment.bin 

From ssiegel at finjan.com  Mon Dec  4 17:42:24 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 5 Dec 2006 03:42:24 +0200
Subject: [antlr-interest] ANTLR 3 rewrite rule syntax
In-Reply-To: <20061204171913.GA4732@badgers-in-foil.co.uk>
Message-ID: <E344C433F006AB45A306D422F9C3EB4CF7DD73@exmail1.finjan.com>

The "artificially add a subrule" method works and it is at least linear
in the conditionals. The conditional rewrite method is combinatorial in
the conditionals and can easily get out of hand.
I was hoping that the rewrite rule syntax itself could handle the
individual conditionals and repetition factors as that would allow me to
keep the grammar oriented to the input instead of the output.
Oh well, I guess this will become a 3.1 enhancement request since there
are workarounds.

Thanks for the feedback,
Shmuel

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Holroyd
Sent: Monday, December 04, 2006 7:19 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR 3 rewrite rule syntax

On Mon, Dec 04, 2006 at 03:56:45PM +0200, Shmuel Siegel wrote:
> Consider 
> 
> rule : A? B (id+)=C*
> 
> I know that I can write -> A? MYTOKEN[$B] $id*
> 
> But how can I make private tokens from "A" and "C". Ultimately "C" can
> be handled by a subrule but how do I issue a conditional token in my
> rewrite. MYTOKEN[$A?] and MYTOKEN[$A]? don't seem to work.

In addition to Jim's suggestion, you could also push "A" into another
rule:

  rule : myA? B (id+=C)*  -> myA? MYTOKEN[$B] $id
       ;
  myA  : A -> MYTOKEN[$A]
       ;


ta,
dave

-- 
http://david.holroyd.me.uk/

From e.papegaaij at student.utwente.nl  Mon Dec  4 23:57:39 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Tue, 5 Dec 2006 08:57:39 +0100
Subject: [antlr-interest] ast rewrite
In-Reply-To: <243932A3-48AE-46E0-B47E-055F00B61DD9@cs.usfca.edu>
References: <45742C51.4030800@gaengel.de> <457433EB.4090303@gaengel.de>
	<243932A3-48AE-46E0-B47E-055F00B61DD9@cs.usfca.edu>
Message-ID: <200612050857.39417.e.papegaaij@student.utwente.nl>

On Monday 04 December 2006 18:48, Terence Parr wrote:
> On Dec 4, 2006, at 6:43 AM, Alexander G?ngel wrote:
> > Ok I found it in the wiki:
> >
> > STRING: '\"' CHARS '\"' {setText(getText().substring(1, getText
> > ().length()));} ;
> >
> > but with this I still have the tailing '
> >
> > I thins the wiki is wrong in this point. (I'mnot sure if I just
> > misssomething)
>
> Hi Alexander.  I think it's okay, because the Java API for String
> says "The substring begins at the specified beginIndex and extends to
> the character at index endIndex - 1."
>
> > I now use this:
> >
> > String    :
> >     '\''  ~('\'')* '\''   {setText(getText().substring(1, getText
> > ().length()-1));}
> >     ;
>
> Does that work? are you not missing the last character before the
> last quote?

It should be getText().length()-1. The indices are zero based. I always use 
short strings to find the right index:
  str = "'a'", length = 3, charAt(length-1) = ''', substring(1,2) = "a"
Also from the Javadoc: 'Thus the length of the substring is 
endIndex-beginIndex.'

Unfortunately, I can't update the wiki, because I don't have a login.

Best regards,
Emond


From ugo.landini at gmail.com  Tue Dec  5 03:23:11 2006
From: ugo.landini at gmail.com (ugol)
Date: Tue, 5 Dec 2006 12:23:11 +0100
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <AA3E0405-9826-49FE-8848-AD30352C5B4F@cs.usfca.edu>
References: <8659C7B861F21A4889878EE7CF859D7D02A049FF@mucse303.eu.infineon.com>
	<AA3E0405-9826-49FE-8848-AD30352C5B4F@cs.usfca.edu>
Message-ID: <b70c55390612050323w93372d6pb197a3e5d39b1b53@mail.gmail.com>

> something like that. If you get that to work, let us know.
>
> I should also note that I don't think that I have finished
> backtracking for the tree node stream.  Comments on the market and
> rewind methods should indicate that.

Thx Terrence,
I tried the stat stuff but, as you said, doesn't work in 3.0.
I'll have to deliver this little grammar next week, so probably I'll
roll-back to 2.7.x and switch to 3.0 as soon as you will implement
this feature.

thx,
uL

From fhaupt at informatik.uni-wuerzburg.de  Tue Dec  5 03:34:02 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Tue, 5 Dec 2006 12:34:02 +0100
Subject: [antlr-interest] warnings
Message-ID: <20061205113402.GA22066@maya.lan>

hi, 

me once again :)


how can i find out which are the conflicting rules in an ambiguity error?

[11:29:42] warning(200): TOCgrammar.g:166:1: Decision can match input such as "'Intro=' '[' '[' STRING ' ' 
STRING ']'" using multiple alternatives: 1, 2


which rules are the 1 and 2? where can i look this up? It ain't the token-table...


i'm trying to match something like


Intro=[[hi this is a wiki link][and this the page]]


and having some trouble with the whitespace in there :/



greets & sorry for annoyance

fabian
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061205/77d7a565/attachment.bin 

From dave at badgers-in-foil.co.uk  Tue Dec  5 04:06:44 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 5 Dec 2006 12:06:44 +0000
Subject: [antlr-interest] Island grammar in AntlrV3
In-Reply-To: <20061204232005.GA8855@badgers-in-foil.co.uk>
References: <200609022309.32178.ilia@obnovlenie.ru>
	<20060902230143.GA10590@badgers-in-foil.co.uk>
	<20061204232005.GA8855@badgers-in-foil.co.uk>
Message-ID: <20061205120644.GA18410@badgers-in-foil.co.uk>

On Mon, Dec 04, 2006 at 11:20:05PM +0000, David Holroyd wrote:
> On Sat, Sep 02, 2006 at 11:01:43PM +0000, David Holroyd wrote:
> > My specific use case is regular expression literals, e.g. I'd like to be
> > able to handle,
> > 
> >   r =   / b; f = r/m;  // regexp literal with 'm' flag
> >   r = a / b; f = r/m;  // two expr-statements involving division
> > 
> > It seems that the lexer needs context from the grammar in order to tell
> > what to do on seeing '/'.
> 
> I've been avoiding working on this bit of my grammar, but I'm starting
> to need it now.
> 
> At what level should I attack the problem?
> 
> My first idea is to have an action at the point in the outer grammar
> where the island grammar's start-marker is recognised, which will...
> 
>  1) take the unprocessed tail of the CommonTokenStream that the
>     outer parser currently has as input, and turn back into a string
>  2) create a new island lexer/TokenStream that reprocesses the tail
>     from 1)
>  3) create a parser for the island grammar, and parse the new token
>     stream from 2)
>  4) get the tail of the island grammar's token stream once the
>     end-marker was found, and convert back to the lexer for 'this'
>     grammar again
>  5) replace the original 'input' reference the parser was using, and get
>     going with the outer grammar again
> 
> If all that works, I can hook the AST built by the island grammar into
> the AST that the outer grammar is creating.
> 
> 
> How does that compare with the approach that others are taking?  Does it
> sound like it might work, or is it wrong-headed and silly?

So I've just spotted that point 1) above is flawed bacause it suggests
using CommonTokenStream, which immediately tokenizes the entire input.
Of course, tokens of the island grammar aren't 'compatible' with tokens
of the outer grammar (e.g. the regexp literal /"/ will look like an
unterminated string to the outer grammar's lexer), so I would get lexer
errors trying to use that implementation.

I'm going to need a TokenStream which lazy-loads tokens from the
TokenSource.

Does my plan sound realistic otherwise?


ta,
dave

-- 
http://david.holroyd.me.uk/

From e.papegaaij at student.utwente.nl  Tue Dec  5 04:31:33 2006
From: e.papegaaij at student.utwente.nl (Emond Papegaaij)
Date: Tue, 5 Dec 2006 13:31:33 +0100
Subject: [antlr-interest] Island grammar in AntlrV3
In-Reply-To: <20061205120644.GA18410@badgers-in-foil.co.uk>
References: <200609022309.32178.ilia@obnovlenie.ru>
	<20061204232005.GA8855@badgers-in-foil.co.uk>
	<20061205120644.GA18410@badgers-in-foil.co.uk>
Message-ID: <200612051331.33755.e.papegaaij@student.utwente.nl>

On Tuesday 05 December 2006 13:06, David Holroyd wrote:
> On Mon, Dec 04, 2006 at 11:20:05PM +0000, David Holroyd wrote:
> > On Sat, Sep 02, 2006 at 11:01:43PM +0000, David Holroyd wrote:
> > > My specific use case is regular expression literals, e.g. I'd like to
> > > be able to handle,
> > >
> > >   r =   / b; f = r/m;  // regexp literal with 'm' flag
> > >   r = a / b; f = r/m;  // two expr-statements involving division
> > >
> > > It seems that the lexer needs context from the grammar in order to tell
> > > what to do on seeing '/'.
> >
> > I've been avoiding working on this bit of my grammar, but I'm starting
> > to need it now.
> >
> > At what level should I attack the problem?
> >
> > My first idea is to have an action at the point in the outer grammar
> > where the island grammar's start-marker is recognised, which will...
> >
> >  1) take the unprocessed tail of the CommonTokenStream that the
> >     outer parser currently has as input, and turn back into a string
> >  2) create a new island lexer/TokenStream that reprocesses the tail
> >     from 1)
> >  3) create a parser for the island grammar, and parse the new token
> >     stream from 2)
> >  4) get the tail of the island grammar's token stream once the
> >     end-marker was found, and convert back to the lexer for 'this'
> >     grammar again
> >  5) replace the original 'input' reference the parser was using, and get
> >     going with the outer grammar again
> >
> > If all that works, I can hook the AST built by the island grammar into
> > the AST that the outer grammar is creating.
> >
> >
> > How does that compare with the approach that others are taking?  Does it
> > sound like it might work, or is it wrong-headed and silly?
>
> So I've just spotted that point 1) above is flawed bacause it suggests
> using CommonTokenStream, which immediately tokenizes the entire input.
> Of course, tokens of the island grammar aren't 'compatible' with tokens
> of the outer grammar (e.g. the regexp literal /"/ will look like an
> unterminated string to the outer grammar's lexer), so I would get lexer
> errors trying to use that implementation.
>
> I'm going to need a TokenStream which lazy-loads tokens from the
> TokenSource.
>
> Does my plan sound realistic otherwise?

I've tried something similar, and it does work, but be prepared for some 
difficulties. For example, the outer grammar MUST not look ahead past (or 
into) the island grammar. As that will cause trouble with the lexer (as you 
just mentioned). Interaction between the parser and the lexer is difficult to 
get right, due to the LA. Writing a lazy token stream is not very difficult 
with ANTLR v3 (just implement the interface).

Best regards,
Emond

From stanio at myrealbox.com  Tue Dec  5 06:30:57 2006
From: stanio at myrealbox.com (Stanimir Stamenkov)
Date: Tue, 05 Dec 2006 16:30:57 +0200
Subject: [antlr-interest] [OT] MSI Installer ANTLR 2.7.7
In-Reply-To: <ENEFKBMHAGGDPHHBAGHGCECACAAA.ora.et.labora@web.de>
References: <ENEFKBMHAGGDPHHBAGHGCECACAAA.ora.et.labora@web.de>
Message-ID: <457582A1.4030208@myrealbox.com>

/wolfgang haefelinger/:

> Date: Fri, 29 Dec 2006 19:27:30 +0100

You're really quite ahead in the future.

-- 
Stanimir

From foolishewe at hotmail.com  Tue Dec  5 07:30:24 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 05 Dec 2006 15:30:24 +0000
Subject: [antlr-interest] Using ANTLR3 in an Eclipse Environment
Message-ID: <BAY107-F368613CEA49A251D16DE23C0DE0@phx.gbl>

Hello All:

I'm a beginner with eclipse, but have been doing some grammar 
implementation/testing
using ANTLRworks (a very nice tool).  Now, I'm getting ready to use ANTLR 
with eclpse,
and am wondering about what the best route to working with ANTLR3 with 
Eclipse (the
preferred local development environment).

1) Should I build my own ANTLR3 jars, and if so, how can I get good 
debugging information in them.
2) Are there any good eclipse integrations of ANTLR3 currently available?
3) Any hints on how to build ANTLR3 in eclipse?

Regards:

Bill M.

_________________________________________________________________
WIN up to $10,000 in cash or prizes ? enter the Microsoft Office Live 
Sweepstakes http://clk..atdmt.com/MRT/go/aub0050001581mrt/direct/01/


From parrt at cs.usfca.edu  Tue Dec  5 07:55:20 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Dec 2006 07:55:20 -0800
Subject: [antlr-interest] ast rewrite
In-Reply-To: <200612050857.39417.e.papegaaij@student.utwente.nl>
References: <45742C51.4030800@gaengel.de> <457433EB.4090303@gaengel.de>
	<243932A3-48AE-46E0-B47E-055F00B61DD9@cs.usfca.edu>
	<200612050857.39417.e.papegaaij@student.utwente.nl>
Message-ID: <860262E3-FEF2-4B8D-A980-8C1D5AE67D08@cs.usfca.edu>

Folks, if you'll read the Java API docs...what I have is correct.   
It's not like i haven't tried what I put up there. ;)

JDK: "The substring begins at the specified beginIndex and extends to  
the character at index endIndex - 1"

So, using the length means that the substring will not go up to the  
end quote.  I *think* what is there is correct; except now somebody  
changed it ;)  Please change it back.  Emond, I will get you an  
account...can you remind me via private email?  Thanks!

Ter
On Dec 4, 2006, at 11:57 PM, Emond Papegaaij wrote:

> On Monday 04 December 2006 18:48, Terence Parr wrote:
>> On Dec 4, 2006, at 6:43 AM, Alexander G?ngel wrote:
>>> Ok I found it in the wiki:
>>>
>>> STRING: '\"' CHARS '\"' {setText(getText().substring(1, getText
>>> ().length()));} ;
>>>
>>> but with this I still have the tailing '
>>>
>>> I thins the wiki is wrong in this point. (I'mnot sure if I just
>>> misssomething)
>>
>> Hi Alexander.  I think it's okay, because the Java API for String
>> says "The substring begins at the specified beginIndex and extends to
>> the character at index endIndex - 1."
>>
>>> I now use this:
>>>
>>> String    :
>>>     '\''  ~('\'')* '\''   {setText(getText().substring(1, getText
>>> ().length()-1));}
>>>     ;
>>
>> Does that work? are you not missing the last character before the
>> last quote?
>
> It should be getText().length()-1. The indices are zero based. I  
> always use
> short strings to find the right index:
>   str = "'a'", length = 3, charAt(length-1) = ''', substring(1,2) =  
> "a"
> Also from the Javadoc: 'Thus the length of the substring is
> endIndex-beginIndex.'
>
> Unfortunately, I can't update the wiki, because I don't have a login.
>
> Best regards,
> Emond
>


From hugo.a.garcia at gmail.com  Tue Dec  5 10:35:04 2006
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Tue, 5 Dec 2006 19:35:04 +0100
Subject: [antlr-interest] How to use StringTemplate in Antler 3
In-Reply-To: <5D8BD577-72CF-4820-BBEB-055FC3EA0B17@classdump.org>
References: <f9637ada0611090658m6a619836re4e4e600bdba44db@mail.gmail.com>
	<5D8BD577-72CF-4820-BBEB-055FC3EA0B17@classdump.org>
Message-ID: <f9637ada0612051035o591babbg7e720f2d7613c058@mail.gmail.com>

ok... figured out that I had to use the java grammar from the examples.

Is there an example on how to use StringTemplate in Antler v3?

I wonder if I should stick to an AST/TreeParser instead??? My goal is
to translate Java into another programming language.

-H

From parrt at cs.usfca.edu  Tue Dec  5 11:10:37 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Dec 2006 11:10:37 -0800
Subject: [antlr-interest] How to use StringTemplate in Antler 3
In-Reply-To: <f9637ada0612051035o591babbg7e720f2d7613c058@mail.gmail.com>
References: <f9637ada0611090658m6a619836re4e4e600bdba44db@mail.gmail.com>
	<5D8BD577-72CF-4820-BBEB-055FC3EA0B17@classdump.org>
	<f9637ada0612051035o591babbg7e720f2d7613c058@mail.gmail.com>
Message-ID: <6D4D2CE9-D94B-405B-931E-E91534A35712@cs.usfca.edu>

http://linguamantra.org
Ter
On Dec 5, 2006, at 10:35 AM, Hugo Garcia wrote:

> ok... figured out that I had to use the java grammar from the  
> examples.
>
> Is there an example on how to use StringTemplate in Antler v3?
>
> I wonder if I should stick to an AST/TreeParser instead??? My goal is
> to translate Java into another programming language.
>
> -H


From ryan.hollom at us.lawson.com  Tue Dec  5 11:06:57 2006
From: ryan.hollom at us.lawson.com (Ryan Hollom)
Date: Tue, 5 Dec 2006 13:06:57 -0600
Subject: [antlr-interest] Using ANTLR3 in an Eclipse Environment
In-Reply-To: <BAY107-F368613CEA49A251D16DE23C0DE0@phx.gbl>
Message-ID: <OFC994B4C9.FA54F026-ON8625723B.00686356-8625723B.006901E7@lawson.com>

Bill-
Could you describe what you're trying to accomplish with ANTLR and 
Eclipse?  Are you trying to generate a parser and use it within an Eclipse 
plugin, or something else?

Assuming it is the former, you should not need to build ANTLR3 jars on 
your own.  Just include the relevant ANTLR jar files as runtime jar files 
in your Eclipse plugin (antlr-3.0b5.jar, et al) and you'll be able to 
write code that reference ANTLR classes (such as your generated parser). 
As for debugging, you can then attach the ANTLR source and Eclipse will do 
the rest.

I don't know of any ANTLR v3 implementations currently available in 
Eclipse.  Personally, I still use ANTLRworks to write my grammar, and then 
switch over to eclipse to write my plugin that uses the generated parser.

Hope this helps,
Ryan




"Foolish Ewe" <foolishewe at hotmail.com> 
Sent by: antlr-interest-bounces at antlr.org
12/05/2006 09:30 AM

To
antlr-interest at antlr.org
cc

Subject
[antlr-interest] Using ANTLR3 in an Eclipse Environment






Hello All:

I'm a beginner with eclipse, but have been doing some grammar 
implementation/testing
using ANTLRworks (a very nice tool).  Now, I'm getting ready to use ANTLR 
with eclpse,
and am wondering about what the best route to working with ANTLR3 with 
Eclipse (the
preferred local development environment).

1) Should I build my own ANTLR3 jars, and if so, how can I get good 
debugging information in them.
2) Are there any good eclipse integrations of ANTLR3 currently available?
3) Any hints on how to build ANTLR3 in eclipse?

Regards:

Bill M.

_________________________________________________________________
WIN up to $10,000 in cash or prizes ? enter the Microsoft Office Live 
Sweepstakes http://clk..atdmt.com/MRT/go/aub0050001581mrt/direct/01/



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061205/fefaa24d/attachment-0001.html 

From babak.teymouri at noos.fr  Tue Dec  5 12:58:55 2006
From: babak.teymouri at noos.fr (babak.teymouri at noos.fr)
Date: Tue,  5 Dec 2006 21:58:55 +0100
Subject: [antlr-interest] V3 error message
Message-ID: <mnet1.1165352335.24624.babak.teymouri@noos.fr>

Hi, 
I'm testing the antlr v3 with C code generation. 
Ive recieved somme error messages during grammar compilation:
Has anyone experimented this ?
The funniest thing is that the C code is well generated and well compiled!! 

here is the messages i've got:
F:\Eclipse\workspace\parselv\V3>java org.antlr.Tool parselv3.g
no such locale file org/antlr/tool/templates/messages/languages/fr.stg retrying with English locale
ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
error(10):  internal error: group C does not satisfy interface ANTLRCore: missing templates [lexerRulePropertyRef_text, lexerRulePro
pertyRef_type, lexerRulePropertyRef_line, lexerRulePropertyRef_pos, lexerRulePropertyRef_index, lexerRulePropertyRef_channel]

error(146): parselv3.g:95:2: invalid StringTemplate % shorthand syntax: '%s'
error(146): parselv3.g:95:2: invalid StringTemplate % shorthand syntax: '%s'
error(146): parselv3.g:95:2: invalid StringTemplate % shorthand syntax: '%s'
error(146): parselv3.g:95:2: invalid StringTemplate % shorthand syntax: '%s'
error(10):  internal error: group C does not satisfy interface ANTLRCore: missing templates [lexerRulePropertyRef_text, lexerRulePro
pertyRef_type, lexerRulePropertyRef_line, lexerRulePropertyRef_pos, lexerRulePropertyRef_index, lexerRulePropertyRef_channel]

error(10):  internal error: parselv3.g : java.lang.NullPointerException
org.antlr.codegen.ActionTranslatorLexer.mLOCAL_ATTR(ActionTranslatorLexer.java:1045)
org.antlr.codegen.ActionTranslatorLexer.mTokens(ActionTranslatorLexer.java:2891)
org.antlr.codegen.ActionTranslatorLexer.nextToken(ActionTranslatorLexer.java:221)
org.antlr.codegen.ActionTranslatorLexer.translateToChunks(ActionTranslatorLexer.java:106)
org.antlr.codegen.CodeGenerator.translateAction(CodeGenerator.java:828)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1874)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1116)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:728)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:519)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:461)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:272)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:404)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:311)
org.antlr.Tool.main(Tool.java:69)

-------------------------------------------------------------
Noos, votre bureau virtuel sur Internet : Mail...
Web : webmail.noos.fr


From jimi at intersystems.com  Tue Dec  5 13:23:13 2006
From: jimi at intersystems.com (Jim Idle)
Date: Tue, 5 Dec 2006 16:23:13 -0500
Subject: [antlr-interest] V3 error message
In-Reply-To: <mnet1.1165352335.24624.babak.teymouri@noos.fr>
Message-ID: <20061205212315.C7F9014E1@mail.intersystems.com>



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of babak.teymouri at noos.fr


> Hi, 
> I'm testing the antlr v3 with C code generation. 

You might receive warnings about missing templates here. You can ignore them as they don?t affect the validity of the code.



> Ive recieved somme error messages during grammar compilation:
> Has anyone experimented this ?
> The funniest thing is that the C code is well generated and well compiled!! 

> no such locale file org/antlr/tool/templates/messages/languages/fr.stg 
> retrying with English locale

Care to supply fr.stg? This is because the locale language has been detected as French, but there is no French translation of the error and warning messages yet.


> error(146): parselv3.g:95:2: invalid StringTemplate % shorthand syntax: '%s'
> error(146): parselv3.g:95:2: invalid StringTemplate % shorthand syntax: '%s'


This is because you have something like:

printf("text is %s\n", $x.text->chars);

ANTLR does not know about C stuff itself, so it sees a % in your format code and thinks you are trying to do something with a string template. Make this go away by escaping the %:

printf("text is \%s\n", .....

> error(10):  internal error: group C does not satisfy interface ANTLRCore: > missing templates [lexerRulePropertyRef_text, lexerRulePro
> pertyRef_type, lexerRulePropertyRef_line, lexerRulePropertyRef_pos, 
> lexerRulePropertyRef_index, lexerRulePropertyRef_channel]


You can ignore these, they will go away in the next beta. I just missed the boat on changing the lexer code gen template for C.


> error(10):  internal error: parselv3.g : java.lang.NullPointerException
> org.antlr.codegen.ActionTranslatorLexer.mLOCAL_ATTR(ActionTranslatorLexer.java:1045)
> org.antlr.codegen.ActionTranslatorLexer.mTokens(ActionTranslatorLexer.java:2891)

To get to the bottom of this, I would need to see your grammar. But it is probably something specified incorrectly that later releases of ANTLR would catch as a warning/error. One thing you could look for is over complicated use of $attribute stuff in C code expressions. In general you want to assign the results to some local variable and use that.

Jim
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.15.7/569 - Release Date: 12/5/2006 3:00 AM
 

From cross at symboticware.com  Tue Dec  5 19:09:02 2006
From: cross at symboticware.com (Cameron Ross)
Date: Tue, 05 Dec 2006 22:09:02 -0500
Subject: [antlr-interest] My recursive tree walker won't
Message-ID: <4576344E.7090206@symboticware.com>

I have a simple tree walker that doesn't recurse as I expect.   The tree 
constructed by my parser is as expected.  However, the tree parser only 
reports the highest level PWORD root whereas I expect it to decend and 
report on the nested PWORD node as well.  The expression I'm parsing is 
(a (b c)) and the tree constructed by the parser looks like this:

PWORD
    |
    a -- PWORD
                |
                b -- c

Any help is greatly appreciated.

Cheers,
Cameron.

My client code follows:
------------------------------
    StringReader stringReader = new StringReader("(a (b c))");
    MyLexer lexer = new MyLexer(stringReader);
    MyParser parser = new MyParser(lexer);
    parser.parse();
    AST ast = parser.getAST();
    TestTreeParser treeParser = new TestTreeParser();
    treeParser.start(ast); 

The grammar defining my lexer, parser and tree parser follows:
------------------------------------------------------------------------------

class TestTreeParser extends TreeParser;
options {
    buildAST = true;
}
start: (expr)*;
expr: pword;
pword: #(PWORD (expr)*) {
        System.out.println("pword: " + #pword.toStringList());
    };

class MyParser extends Parser;
options {
    buildAST = true;
    exportVocab = MyVocab;
}
tokens {
    PWORD;
}
parse: (expr)+;
expr: LPAR! (expr | WORD)+ RPAR! {
    if (#expr.getType() == MyVocabTokenTypes.WORD) {
        ## = #([PWORD, "PWORD"], ##);
        System.out.println("WORD: " + #expr.toStringList());
    }
};

class MyLexer extends Lexer;
options {
    exportVocab = MyVocab;
}
LPAR: '(';
RPAR: ')';
WORD: ('a'..'z')+;
WS: ' ' { $setType(Token.SKIP); };


From cross at symboticware.com  Tue Dec  5 20:25:37 2006
From: cross at symboticware.com (Cameron Ross)
Date: Tue, 05 Dec 2006 23:25:37 -0500
Subject: [antlr-interest] My recursive tree walker won't
Message-ID: <45764641.1030005@symboticware.com>

I've found the problem...

I was explicitly exporting the vocabulary from the parser and not the 
tree parser.  This caused two token files to be created with 
inconsistent type values for the WORD token.  This was causing my tree 
parser recursion problems.

In resolving this problem I ended up with a warning on the parser 
grammar that I was redefining the PWORD token (which I'm pretty sure I'm 
not).  I resolved the problem by simply removing the token section and 
the PWORD token does in fact appear to be defined elsewhere, but I have 
no idea as to where.  Any thoughts are greatly appreciated.

Cheers,
Cameron.

From antlr at mirality.co.nz  Tue Dec  5 23:34:01 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 06 Dec 2006 20:34:01 +1300
Subject: [antlr-interest] Scopes and C runtime
Message-ID: <7.0.1.0.0.20061206202351.03706fd0@mirality.co.nz>

In 3.0b5 (using the C runtime included with that version), if I 
try using a global named scope then ANTLR throws an exception 
while generating the parser.

eg:
grammar Message;
options {
   language = C;
}
scope MessageData {
   enum MessageType msgType;
}
// ...
messageDefn
scope MessageData;
   : someRule | someOtherRule
   ;

This goes away if I remove the reference to the scope in the 
rule.  And dynamic scopes appear to work fine.  Below is the error 
that this produces:

error(10):  internal error: Class java.lang.String has no such 
attribute: name in template context [outputFile parser 
genericParser(...) rule ruleInitializations anonymous <invoke 
scopeTop arg context>] : java.lang.NoSuchFieldException: name
java.lang.Class.getField(Unknown Source)
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:489)
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:385)
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:351)
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:136)
org.antlr.stringtemplate.language.ActionEvaluator.argumentAssignment(ActionEvaluator.java:905)
org.antlr.stringtemplate.language.ActionEvaluator.argList(ActionEvaluator.java:850)
org.antlr.stringtemplate.language.ASTExpr.evaluateArguments(ASTExpr.java:790)
org.antlr.stringtemplate.language.ASTExpr.getTemplateInclude(ASTExpr.java:609)
org.antlr.stringtemplate.language.ActionEvaluator.templateInclude(ActionEvaluator.java:470)
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:142)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:84)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:687)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:687)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.StringTemplate.toString(StringTemplate.java:1727)
org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1083)
org.antlr.codegen.CTarget.genRecognizerFile(CTarget.java:53)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:429)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)


From alexander at gaengel.de  Wed Dec  6 06:01:39 2006
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Wed, 6 Dec 2006 15:01:39 +0100 (MET)
Subject: [antlr-interest] Problem in my Grammar
Message-ID: <4576CD3C.3040503@gaengel.de>

I have to distinguish "." from "..".

I have terms like Set{number,number,....}



number can be an int or an real (int.int) or an Range int/real .. int/real

the Problem is the Range because when Antlr finds one . always thinks it 
a real and than complains that another . is wrong

I thought that with option backtrack=true Antlr would try the other 
rules when an error occurred.

I hope you can help me,

Alexander

the whole grammar is:

grammar problem;
options {k=2;backtrack=true; }

start :expression;

expression
    :
    collectionLiteralExp|tupleLiteralExp
    ;

tupleLiteralExp
    :
    integerLiteral|RealLiteral
    ;   
   
collectionLiteralExp
    :
    'Set' '{'collectionLiteralParts '}'
    ;   
   
collectionLiteralParts
    :
    collectionLiteralPart (',' collectionLiteralPart)*  
    ;
   
collectionLiteralPart
    :
    expression | collectionRange
    ;   
   
collectionRange
    :
    expression '..' expression
    ;   

integerLiteral
    :   HexLiteral
    |   OctalLiteral
    |   DecimalLiteral
    ;
   
// LEXER
WS    :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=99;}
    ;

RealLiteral
    :   
    '.' ('0'..'9')+ Exponent? FloatTypeSuffix?
    |
       ('0'..'9')+
        (
            (Exponent FloatTypeSuffix)|(FloatTypeSuffix)|(Exponent)
                |'.' ('0'..'9')* Exponent? FloatTypeSuffix?
        );

fragment
Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

fragment
FloatTypeSuffix : ('f'|'F'|'d'|'D') ;

HexLiteral : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;

DecimalLiteral : ('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;

OctalLiteral : '0' ('0'..'7')+ IntegerTypeSuffix? ;

fragment
HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
IntegerTypeSuffix : ('l'|'L') ;






From jbb at acm.org  Wed Dec  6 06:22:44 2006
From: jbb at acm.org (John B. Brodie)
Date: Wed, 06 Dec 2006 09:22:44 -0500
Subject: [antlr-interest] Problem in my Grammar
In-Reply-To: <4576CD3C.3040503@gaengel.de> (message from
	=?ISO-8859-15?Q?Alexander_G=E4ngel?= on Wed, 06 Dec 2006 15:01:39
	+0100 (MET))
References: <4576CD3C.3040503@gaengel.de>
Message-ID: <E1GrxfY-0004Yc-00@gecko>

On Wed, 06 Dec 2006 15:01:39 +0100 (MET), Alexander wrote:
>I have to distinguish "." from "..".
>...snipped...

does the example lexer given in

http://www.antlr.org/pipermail/antlr-interest/2006-July/017120.html

help any?
   -jbb

From hugo.a.garcia at gmail.com  Wed Dec  6 06:47:57 2006
From: hugo.a.garcia at gmail.com (Hugo Garcia)
Date: Wed, 6 Dec 2006 15:47:57 +0100
Subject: [antlr-interest] Using ANTLR3 in an Eclipse Environment
In-Reply-To: <BAY107-F368613CEA49A251D16DE23C0DE0@phx.gbl>
References: <BAY107-F368613CEA49A251D16DE23C0DE0@phx.gbl>
Message-ID: <f9637ada0612060647jff965fp8c8e14e343cff44f@mail.gmail.com>

my two cents:

Download the source and build ANTLR V3 as a unique Java Project. Once
it compiles... then you can reference the project from other Java
Projects. IF you need to use ANTLR in a plugin then you can easily
package the jars in the lib of the distro into a plugin {Look in the
create New Plugin Project Wizard).

There is a link from the ANTLR home page to an Eclipse plugin that
helps in writting grammars but that is about it. It won't work for
doing much else... yet.

AntlrWorks is very mature. It is is very easy to just share your
projects workspace with AntlrWorks....

Hope this helps

-H

On 12/5/06, Foolish Ewe <foolishewe at hotmail.com> wrote:
> Hello All:
>
> I'm a beginner with eclipse, but have been doing some grammar
> implementation/testing
> using ANTLRworks (a very nice tool).  Now, I'm getting ready to use ANTLR
> with eclpse,
> and am wondering about what the best route to working with ANTLR3 with
> Eclipse (the
> preferred local development environment).
>
> 1) Should I build my own ANTLR3 jars, and if so, how can I get good
> debugging information in them.
> 2) Are there any good eclipse integrations of ANTLR3 currently available?
> 3) Any hints on how to build ANTLR3 in eclipse?
>
> Regards:
>
> Bill M.
>
> _________________________________________________________________
> WIN up to $10,000 in cash or prizes ? enter the Microsoft Office Live
> Sweepstakes http://clk..atdmt.com/MRT/go/aub0050001581mrt/direct/01/
>
>

From foolishewe at hotmail.com  Wed Dec  6 09:09:32 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Wed, 06 Dec 2006 17:09:32 +0000
Subject: [antlr-interest] Using ANTLR3 in an Eclipse Environment
Message-ID: <BAY107-F186E9FF334818DAAA242D2C0DD0@phx.gbl>

Hi Ryan:

Sorry for the delay in replying. thanks for the info. Your description of 
how I plan
to use ANTLR seems right.

Informally, I'm writing a language which interfaces with "back end" that 
performs
the actions written in the parsed langauge.

In our case, we want to make a java application that uses the ANTLR parser 
as a
"front end", i.e. to support a sort of scripting language interface.

So you are right, I want to use ANTLRworks to manage the front end (at least 
in
the short term), and have the generated Parser and Lexer java files import 
the
classes used in the backend, and invoke the backend stuff in grammar actions
or by walking the AST.

How do you access the ANTLR Jar without compiling ANTLR, do you use
the ANTLRworks Jar (which I presume has all relevant ANTLR classes embedded 
in it)?

I'm going to try ANTLR beta 1.08 today, I haven't had luck with package 
statments
in the @header sections yet, maybe this will be the fix.

Regards:

Bill M.

>From: Ryan Hollom <ryan.hollom at us.lawson.com>
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Using ANTLR3 in an Eclipse Environment
>Date: Tue, 5 Dec 2006 13:06:57 -0600
>
>Bill-
>Could you describe what you're trying to accomplish with ANTLR and
>Eclipse?  Are you trying to generate a parser and use it within an Eclipse
>plugin, or something else?
>
>Assuming it is the former, you should not need to build ANTLR3 jars on
>your own.  Just include the relevant ANTLR jar files as runtime jar files
>in your Eclipse plugin (antlr-3.0b5.jar, et al) and you'll be able to
>write code that reference ANTLR classes (such as your generated parser).
>As for debugging, you can then attach the ANTLR source and Eclipse will do
>the rest.
>
>I don't know of any ANTLR v3 implementations currently available in
>Eclipse.  Personally, I still use ANTLRworks to write my grammar, and then
>switch over to eclipse to write my plugin that uses the generated parser.
>
>Hope this helps,
>Ryan
>
>
>
>
>"Foolish Ewe" <foolishewe at hotmail.com>
>Sent by: antlr-interest-bounces at antlr.org
>12/05/2006 09:30 AM
>
>To
>antlr-interest at antlr.org
>cc
>
>Subject
>[antlr-interest] Using ANTLR3 in an Eclipse Environment
>
>
>
>
>
>
>Hello All:
>
>I'm a beginner with eclipse, but have been doing some grammar
>implementation/testing
>using ANTLRworks (a very nice tool).  Now, I'm getting ready to use ANTLR
>with eclpse,
>and am wondering about what the best route to working with ANTLR3 with
>Eclipse (the
>preferred local development environment).
>
>1) Should I build my own ANTLR3 jars, and if so, how can I get good
>debugging information in them.
>2) Are there any good eclipse integrations of ANTLR3 currently available?
>3) Any hints on how to build ANTLR3 in eclipse?
>
>Regards:
>
>Bill M.
>
>_________________________________________________________________
>WIN up to $10,000 in cash or prizes ? enter the Microsoft Office Live
>Sweepstakes http://clk..atdmt.com/MRT/go/aub0050001581mrt/direct/01/
>
>
>

_________________________________________________________________
Stay up-to-date with your friends through the Windows Live Spaces friends 
list. 
http://clk.atdmt.com/MSN/go/msnnkwsp0070000001msn/direct/01/?href=http://spaces.live.com/spacesapi.aspx?wx_action=create&wx_url=/friends.aspx&mk


From foolishewe at hotmail.com  Wed Dec  6 10:13:22 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Wed, 06 Dec 2006 18:13:22 +0000
Subject: [antlr-interest] Using ANTLR3 in an Eclipse Environment
In-Reply-To: <f9637ada0612060647jff965fp8c8e14e343cff44f@mail.gmail.com>
Message-ID: <BAY107-F164A55A7443343A2CD19D7C0DD0@phx.gbl>

Thank you for the tips Hugo.

I have used ANTLRworks for developing my grammar and I agree it is very nice 
and
is becoming even more polished every time I try it.

Regarding eclipse plugins, there are 2 that I'm aware of the
freely licensed eclipse plugin downloadable from source forge (I've tried 
this one, it is
nice but I prefer ANTLRworks)
http://antlreclipse.sourceforge.net/

and I think the ANTLR studio is also an eclipse plugin which is commercially 
licensed
(I've never tried this version, but it looks nice).
http://www.placidsystems.com/

I think both the eclipse plugin and ANTLR studio currently support ANTLR2, 
while ANTRLworks
supports ANTLR3, which is what I use.


Tentatilvey (as a quick approach) I was thinking of placing the ANTLRworks 
jar in my class path,
but eventually, I think I will want to do something along the lines of what 
you suggest.

Regards:

Bill M.
>From: "Hugo Garcia" <hugo.a.garcia at gmail.com>
>To: "Foolish Ewe" <foolishewe at hotmail.com>
>CC: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Using ANTLR3 in an Eclipse Environment
>Date: Wed, 6 Dec 2006 15:47:57 +0100
>
>my two cents:
>
>Download the source and build ANTLR V3 as a unique Java Project. Once
>it compiles... then you can reference the project from other Java
>Projects. IF you need to use ANTLR in a plugin then you can easily
>package the jars in the lib of the distro into a plugin {Look in the
>create New Plugin Project Wizard).
>
>There is a link from the ANTLR home page to an Eclipse plugin that
>helps in writting grammars but that is about it. It won't work for
>doing much else... yet.
>
>AntlrWorks is very mature. It is is very easy to just share your
>projects workspace with AntlrWorks....
>
>Hope this helps
>
>-H
>
>On 12/5/06, Foolish Ewe <foolishewe at hotmail.com> wrote:
>>Hello All:
>>
>>I'm a beginner with eclipse, but have been doing some grammar
>>implementation/testing
>>using ANTLRworks (a very nice tool).  Now, I'm getting ready to use ANTLR
>>with eclpse,
>>and am wondering about what the best route to working with ANTLR3 with
>>Eclipse (the
>>preferred local development environment).
>>
>>1) Should I build my own ANTLR3 jars, and if so, how can I get good
>>debugging information in them.
>>2) Are there any good eclipse integrations of ANTLR3 currently available?
>>3) Any hints on how to build ANTLR3 in eclipse?
>>
>>Regards:
>>
>>Bill M.
>>
>>_________________________________________________________________
>>WIN up to $10,000 in cash or prizes ? enter the Microsoft Office Live
>>Sweepstakes http://clk..atdmt.com/MRT/go/aub0050001581mrt/direct/01/
>>
>>

_________________________________________________________________
Visit MSN Holiday Challenge for your chance to win up to $50,000 in Holiday 
cash! 
http://www.msnholidaychallenge.com/default.aspx?ocid=tagline&locale=en-us


From parrt at cs.usfca.edu  Wed Dec  6 10:44:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Dec 2006 10:44:33 -0800
Subject: [antlr-interest] quick description of LL(*) algorithm
Message-ID: <4936F5EF-9A35-438E-BA45-4DC7F59B29ED@cs.usfca.edu>

Hi,

I started putting this LL(*) description in the upcoming ANTLR v3  
book, but decided it was beyond the scope of the reference guide so  
here it is in the lookahead blog:

http://www.antlr.org/blog/antlr3/lookahead.tml

Not sure that it is useful to industry or academia because it is  
neither practical, nor complete, nor rigorous. ;)  Anyway, there you go.

Ter

From jimi at intersystems.com  Wed Dec  6 10:47:05 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 6 Dec 2006 13:47:05 -0500
Subject: [antlr-interest] Scopes and C runtime
In-Reply-To: <7.0.1.0.0.20061206202351.03706fd0@mirality.co.nz>
Message-ID: <20061206184706.5F1FC16F5@mail.intersystems.com>

Looks like a change in the template such that the way I generate the scope reference requires an attribute to be available that is not available when a global scope is defined. I will add it to my list.

Are you sure you need a global scope? ;-)

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Tuesday, December 05, 2006 11:34 PM
To: Antlr Interest
Subject: [antlr-interest] Scopes and C runtime

In 3.0b5 (using the C runtime included with that version), if I 
try using a global named scope then ANTLR throws an exception 
while generating the parser.

eg:
grammar Message;
options {
   language = C;
}
scope MessageData {
   enum MessageType msgType;
}
// ...
messageDefn
scope MessageData;
   : someRule | someOtherRule
   ;

This goes away if I remove the reference to the scope in the 
rule.  And dynamic scopes appear to work fine.  Below is the error 
that this produces:

error(10):  internal error: Class java.lang.String has no such 
attribute: name in template context [outputFile parser 
genericParser(...) rule ruleInitializations anonymous <invoke 
scopeTop arg context>] : java.lang.NoSuchFieldException: name
java.lang.Class.getField(Unknown Source)
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(ASTExpr.java:489)
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(ASTExpr.java:385)
org.antlr.stringtemplate.language.ActionEvaluator.attribute(ActionEvaluator.java:351)
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:136)
org.antlr.stringtemplate.language.ActionEvaluator.argumentAssignment(ActionEvaluator.java:905)
org.antlr.stringtemplate.language.ActionEvaluator.argList(ActionEvaluator.java:850)
org.antlr.stringtemplate.language.ASTExpr.evaluateArguments(ASTExpr.java:790)
org.antlr.stringtemplate.language.ASTExpr.getTemplateInclude(ASTExpr.java:609)
org.antlr.stringtemplate.language.ActionEvaluator.templateInclude(ActionEvaluator.java:470)
org.antlr.stringtemplate.language.ActionEvaluator.expr(ActionEvaluator.java:142)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:84)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:687)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:687)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:666)
org.antlr.stringtemplate.language.ASTExpr.writeAttribute(ASTExpr.java:624)
org.antlr.stringtemplate.language.ActionEvaluator.action(ActionEvaluator.java:86)
org.antlr.stringtemplate.language.ASTExpr.write(ASTExpr.java:138)
org.antlr.stringtemplate.StringTemplate.write(StringTemplate.java:792)
org.antlr.stringtemplate.StringTemplate.toString(StringTemplate.java:1727)
org.antlr.codegen.CodeGenerator.write(CodeGenerator.java:1083)
org.antlr.codegen.CTarget.genRecognizerFile(CTarget.java:53)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:429)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)


-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.430 / Virus Database: 268.15.7/569 - Release Date: 12/5/2006 3:00 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.9/573 - Release Date: 12/5/2006 4:07 PM
 

From Ari.Steinberg at EMBARCADERO.COM  Wed Dec  6 11:33:11 2006
From: Ari.Steinberg at EMBARCADERO.COM (Ari Steinberg)
Date: Wed, 6 Dec 2006 14:33:11 -0500
Subject: [antlr-interest] ANTLR 2 - reducing the number of exceptions being
	thrown when parsing
Message-ID: <715057EB65FC7E47923FE408F290ADFD01595D0F@ettoma01.embarcadero.com>

A while back there was some talk of using a global error variable to
indicate when a predicate failed rather then throwing exceptions.  We
implemented something along these lines ( for the java code generator )
and found it useful.  I've included a diff in case anyone else wanted to
make use of the changes or incorporate it into the latest release.
Since we've made many other changes to the generator and are using ANTLR
2.7.5, I used a context diff since some line numbers will be off from
the original JavaCodeGenerator.java file.

Cheers,
Ari

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: JavaCodeGenerator.diff.txt
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20061206/b0103876/attachment-0001.txt 

From TomL at avokia.com  Wed Dec  6 14:16:09 2006
From: TomL at avokia.com (Tom Liu)
Date: Wed, 6 Dec 2006 17:16:09 -0500
Subject: [antlr-interest] most efficient grammar pasing
In-Reply-To: <mailman.3616.1165433633.15912.antlr-interest@antlr.org>
Message-ID: <C8EB616CF20CA143AD2DE9BF45C911B4CC20BE@cx41.800onemail.com>


Hi Ter,

I didn't learn much about the pasing theory and algorithms
But in the recent several months, I have finshed two full
Grammar T-SQL parsers, one is for sql server, the other is for sybase.

I think the most efficient algorithm of parsing
will finally become the analyzing of grammar itself,
and Never do any analysis of what is to be parsed - the script
which is written according to the grammar.
No predication will be involved. 
It should have an expected parsing time performance of near O(n).

The result of grammar analyzing should be some kind of tree or graph
grammar structures. The parsing procedure is like a cut or narrowing
down
the posibilities of mattached grammar rules and then every
token is recognized and belongs to one of the grammar rules.
Finally, the script itself which is being parsed is prsented as a path 
in the grammar structure graph.


I initially got this idea from BMH String Pattern-matching Algorithm,
By studying it more deeply, I cognized that, dig and use more knowledge
of the pattern to be matched or the grammar to be used for parsing,
we can do more efficient processing, no matter what the materials to be
processed is.

Have fun

Tom



Date: Wed, 6 Dec 2006 10:44:33 -0800
From: Terence Parr <parrt at cs.usfca.edu>
Subject: [antlr-interest] quick description of LL(*) algorithm
To: Antlr Interest <antlr-interest at antlr.org>
Cc: PEG <peg at lists.csail.mit.edu>
Message-ID: <4936F5EF-9A35-438E-BA45-4DC7F59B29ED at cs.usfca.edu>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Hi,

I started putting this LL(*) description in the upcoming ANTLR v3  
book, but decided it was beyond the scope of the reference guide so  
here it is in the lookahead blog:

http://www.antlr.org/blog/antlr3/lookahead.tml

Not sure that it is useful to industry or academia because it is  
neither practical, nor complete, nor rigorous. ;)  Anyway, there you go.

Ter


From jimi at intersystems.com  Wed Dec  6 15:26:50 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 6 Dec 2006 18:26:50 -0500
Subject: [antlr-interest] most efficient grammar pasing
In-Reply-To: <C8EB616CF20CA143AD2DE9BF45C911B4CC20BE@cx41.800onemail.com>
Message-ID: <20061206232651.2624685E@mail.intersystems.com>



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tom Liu


> I didn't learn much about the pasing theory and algorithms
> But in the recent several months, I have finshed two full
> Grammar T-SQL parsers, one is for sql server, the other is for sybase.

Were these written in ANTLR? Are you going to make them generally available?

Jim
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.9/573 - Release Date: 12/5/2006 4:07 PM
 

From antlr at mirality.co.nz  Thu Dec  7 04:09:11 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 08 Dec 2006 01:09:11 +1300
Subject: [antlr-interest] Scopes and C runtime
Message-ID: <7.0.1.0.0.20061208010558.0371dec0@mirality.co.nz>

At 23:49 7/12/2006,  wrote:
 >Looks like a change in the template such that the way I generate 

 >the scope reference requires an attribute to be available that 
is
 >not available when a global scope is defined. I will add it to 
my
 >list.
 >
 >Are you sure you need a global scope? ;-)

No, I don't *need* one -- I've already rewritten the grammar to 
use dynamic scopes instead, since they seemed to work fine (and my 
grammar does now work fine).  I just thought it'd be a good idea 
to mention to someone. :)

Especially since an exception dump doesn't seem like a good 
response.  Couldn't it recognise that it's an issue with the 
codegen template and simply report that rather than spewing a full 
exception?  Just a thought.


From kroepke at classdump.org  Thu Dec  7 04:37:51 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 7 Dec 2006 13:37:51 +0100
Subject: [antlr-interest] Scopes and C runtime
In-Reply-To: <7.0.1.0.0.20061208010558.0371dec0@mirality.co.nz>
References: <7.0.1.0.0.20061208010558.0371dec0@mirality.co.nz>
Message-ID: <651923AB-5E81-4B57-96B7-11BEC4ABCBBF@classdump.org>


On 7. Dec 2006, at 13:09 , Gavin Lambert wrote:

> Especially since an exception dump doesn't seem like a good  
> response.  Couldn't it recognise that it's an issue with the  
> codegen template and simply report that rather than spewing a full  
> exception?  Just a thought.

For the time being I think exceptions are the way to go. It helps us  
to identify problems much more quickly. But I agree that a final  
version shouldn't fail in that way if at all reasonable. OTOH if it  
really is an exception, then why not. At the end of the day, this is  
a tool for programmers who mostly understand what's going on. That  
doesn't mean that they know the reason for the particular exception,  
but instead that there is a problem which should mandate a bug report :)

In most cases I've come across, it is due to some missing template/ 
attribute. Clearly, there isn't much ANTLR can do in those cases,  
it's just going to fail.

cheers,

-k
-- 
Kay R?pke
http://classdump.org/





From jimi at intersystems.com  Thu Dec  7 08:57:03 2006
From: jimi at intersystems.com (Jim Idle)
Date: Thu, 7 Dec 2006 11:57:03 -0500
Subject: [antlr-interest] Scopes and C runtime
In-Reply-To: <7.0.1.0.0.20061208010558.0371dec0@mirality.co.nz>
Message-ID: <20061207165649.0BB69175E@mail.intersystems.com>

I am sure that the error message will improve but at the moment that comes straight from stringtemplate and isn?t caught I think.

The ;-) was intended to imply that my comment was a joke though - there should be no problem using global scopes. I should point out that in fact the global refers to the grammar, the global scopes (before whatever change broke them) are not global in the C sense as I wanted the generated C to be completely free-threading.

I might get some time this weekend to clean that one up. :-)

Jim

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 

 >list.
 >
 >Are you sure you need a global scope? ;-)

No, I don't *need* one -- I've already rewritten the grammar to 
use dynamic scopes instead, since they seemed to work fine (and my 
grammar does now work fine).  I just thought it'd be a good idea 
to mention to someone. :)

Especially since an exception dump doesn't seem like a good 
response.  Couldn't it recognise that it's an issue with the 
codegen template and simply report that rather than spewing a full 
exception?  Just a thought.


-- 
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.14/578 - Release Date: 12/7/2006 1:27 AM
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.14/578 - Release Date: 12/7/2006 1:27 AM
 

From jose.sanleandro at ventura24.es  Thu Dec  7 10:15:55 2006
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Thu, 7 Dec 2006 19:15:55 +0100
Subject: [antlr-interest] TokenRewriteStream and lexical filters
Message-ID: <200612071915.56420.jose.sanleandro@ventura24.es>

Hi all,

I'm trying to define a lexer that, from a Java source, is able to provide the 
same source with small modifications (initially, just modifications in 
the 'extends' and 'implements' clauses).
I started from FuzzyJava example, since I want to avoid checking source 
correctness (just digest anything and manage only the class declarations of 
the source).
As long as I know, to use TokenRewriteStream I'll need a parser. So far, I 
only have the lexer, and don't know what the parser will be like. How can I 
make use of both lexical filters and TokenRewriteStream?

Thank you in advance.

From parrt at cs.usfca.edu  Thu Dec  7 12:27:04 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Dec 2006 12:27:04 -0800
Subject: [antlr-interest] new FAQ entry on fuzzy parsing / stream rewriting
Message-ID: <EEA78297-2620-4168-B8A0-3A74E7FC5AA8@cs.usfca.edu>

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1752
Ter

From parrt at cs.usfca.edu  Thu Dec  7 12:20:12 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 7 Dec 2006 12:20:12 -0800
Subject: [antlr-interest] TokenRewriteStream and lexical filters
In-Reply-To: <200612071915.56420.jose.sanleandro@ventura24.es>
References: <200612071915.56420.jose.sanleandro@ventura24.es>
Message-ID: <C17365A6-EDAE-4D73-8FCF-5A6FB8C53BE9@cs.usfca.edu>


On Dec 7, 2006, at 10:15 AM, Jose San Leandro wrote:

> Hi all,
>
> I'm trying to define a lexer that, from a Java source, is able to  
> provide the
> same source with small modifications (initially, just modifications in
> the 'extends' and 'implements' clauses).
> I started from FuzzyJava example, since I want to avoid checking  
> source
> correctness (just digest anything and manage only the class  
> declarations of
> the source).
> As long as I know, to use TokenRewriteStream I'll need a parser. So  
> far, I
> only have the lexer, and don't know what the parser will be like.  
> How can I
> make use of both lexical filters and TokenRewriteStream?

Good question.  I do something like this for a translator using  
filter mode:

/*
@grammar
...
@@ to
<begin lang="grammar">
...
</end>
*/
GRAMMAR
         :       '@grammar' '\n'
                 {out.println("<begin lang=\"grammar\">");}
                 CODE_CHUNK
                 {out.println("</end>");}
         ;

EVERYTHING_ELSE
     :   c=.             {out.print((char)c);}
     ;

Ter


From TomL at avokia.com  Thu Dec  7 13:28:01 2006
From: TomL at avokia.com (Tom Liu)
Date: Thu, 7 Dec 2006 16:28:01 -0500
Subject: [antlr-interest] most efficient grammar pasing
Message-ID: <C8EB616CF20CA143AD2DE9BF45C911B4D31212@cx41.800onemail.com>

 

Hi Jim,

 

The T-SQL parsers were written in ANTLR 2.7.6,  

the sql server version is SQL SERVER 2000,

the sybase version is Sybase ASE 12.5. 

and so far, it can parse all the system stored procedures

(for Sql server, they are in master database; for sybase, 

they are in a separate database called sybsystemprocs)

 

The objective is rather simple, translating any t-sql scripts into

structured xml with all grammar elements tagged

 

Due to customer's requirement, I can't put *.g file to public

at the present time.  Any way, I can send you some parsing example files

if you are interested in it.  Just leave me am email address.

 

Tom

 

 

-----Original Message-----

 

Date: Wed, 6 Dec 2006 18:26:50 -0500

From: "Jim Idle" <jimi at intersystems.com>

Subject: Re: [antlr-interest] most efficient grammar pasing

To: "Tom Liu" <TomL at avokia.com>, <antlr-interest at antlr.org>

Message-ID: <20061206232651.2624685E at mail.intersystems.com>

Content-Type: text/plain;     charset="windows-1250"

 

> I didn't learn much about the pasing theory and algorithms

> But in the recent several months, I have finshed two full

> Grammar T-SQL parsers, one is for sql server, the other is for sybase.

 

Were these written in ANTLR? Are you going to make them generally
available?

 

Jim

 

 

-- 

No virus found in this outgoing message.

Checked by AVG Free Edition.

Version: 7.5.432 / Virus Database: 268.15.9/573 - Release Date:
12/5/2006 4:07 PM

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061207/0a7a8085/attachment.html 

From rvclayton at acm.org  Thu Dec  7 18:32:51 2006
From: rvclayton at acm.org (r. clayton)
Date: 07 Dec 2006 21:32:51 -0500
Subject: [antlr-interest] Syntactic predicates vs branch-local declarations.
Message-ID: <87zm9zyv58.fsf@UlanBator.myhome.westell.com>

Antlr 2.7.7 is generating bad code for grammars using both syntactic predicates
and branch-local declarations, as in

  a: { int v1, v2; } A  v1 = b  v2 = b;

  c: (d) => d | e;

Part of the code generated is

  if ( inputState.guessing==0 ) {
    int v1, v2;
    }
  match(A);
  v1=b();
  v2=b();

which doesn't compile because v1 and v2 can't escape their scope.  The fix is
to make the branch-local declarations rule local:

  a { int v1, v2; } : A  v1 = b  v2 = b;







From alexander at gaengel.de  Fri Dec  8 01:56:02 2006
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Fri, 8 Dec 2006 10:56:02 +0100 (MET)
Subject: [antlr-interest] Problem in my Grammar
In-Reply-To: <E1GrxfY-0004Yc-00@gecko>
References: <4576CD3C.3040503@gaengel.de> <E1GrxfY-0004Yc-00@gecko>
Message-ID: <457936E6.9020200@gaengel.de>

I think i could use this to provide a solution but I still wonder if 
backtrack option shut resolve this directly, or do I misunderstood 
backtrack.

Alexander

John B. Brodie schrieb:
> On Wed, 06 Dec 2006 15:01:39 +0100 (MET), Alexander wrote:
>   
>> I have to distinguish "." from "..".
>> ...snipped...
>>     
>
> does the example lexer given in
>
> http://www.antlr.org/pipermail/antlr-interest/2006-July/017120.html
>
> help any?
>    -jbb
>   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061208/878134c4/attachment.html 

From monty at codetransform.com  Fri Dec  8 09:47:51 2006
From: monty at codetransform.com (Monty Zukowski)
Date: Fri, 8 Dec 2006 09:47:51 -0800
Subject: [antlr-interest] Syntactic predicates vs branch-local
	declarations.
In-Reply-To: <87zm9zyv58.fsf@UlanBator.myhome.westell.com>
References: <87zm9zyv58.fsf@UlanBator.myhome.westell.com>
Message-ID: <598864c70612080947o6908620oc872c17d60949f62@mail.gmail.com>

Below your code block is an action, not a declaration.  All actions
are wrapped in if(guessing) so that syntactic predicates work.  This
is not a bug.  There is no such thing as a branch-local declaration in
antlr 2.

 a: { int v1, v2; } A  v1 = b  v2 = b;

Monty

On 07 Dec 2006 21:32:51 -0500, r. clayton <rvclayton at acm.org> wrote:
> Antlr 2.7.7 is generating bad code for grammars using both syntactic predicates
> and branch-local declarations, as in
>
>   a: { int v1, v2; } A  v1 = b  v2 = b;
>
>   c: (d) => d | e;
>
> Part of the code generated is
>
>   if ( inputState.guessing==0 ) {
>     int v1, v2;
>     }
>   match(A);
>   v1=b();
>   v2=b();
>
> which doesn't compile because v1 and v2 can't escape their scope.  The fix is
> to make the branch-local declarations rule local:
>
>   a { int v1, v2; } : A  v1 = b  v2 = b;
>
>
>
>
>
>
>

From babak.teymouri at noos.fr  Fri Dec  8 11:53:18 2006
From: babak.teymouri at noos.fr (babak.teymouri at noos.fr)
Date: Fri,  8 Dec 2006 20:53:18 +0100
Subject: [antlr-interest] V3 equivalent of $setType(TOKEN)
Message-ID: <mnet1.1165607598.7003.babak.teymouri@noos.fr>

Hi,
I'm trying to convert some V2 grammar to V3 and don't know if there is any V3 equivalent of $setType(TOKEN).
( I did not found it on then wiki!!)

Many Thanks in advance.
Babak

-------------------------------------------------------------
Noos, votre bureau virtuel sur Internet : Mail...
Web : webmail.noos.fr


From rvclayton at acm.org  Fri Dec  8 16:22:05 2006
From: rvclayton at acm.org (r. clayton)
Date: 08 Dec 2006 19:22:05 -0500
Subject: [antlr-interest] Syntactic predicates vs
	branch-local	declarations.
References: <87zm9zyv58.fsf@UlanBator.myhome.westell.com>
	<598864c70612080947o6908620oc872c17d60949f62@mail.gmail.com>
Message-ID: <87odqdq5oy.fsf@UlanBator.myhome.westell.com>

Below your code block is an action, not a declaration.  

  I get your point, but I don't think it explains much.  The example has an
  action that contains a declaration.

All actions are wrapped in if(guessing) so that syntactic predicates work.
This is not a bug.

  Maybe, maybe not.  I would argue that it is erroneous behavior, but I
  wouldn't argue too strenuously because it looks like a fix will be
  complicated.

  Whatever it's called, however, it's unpleasant and unexpected behavior when
  it happens, particularly in the spooky, break-something-unrelated-over-there
  way shown in the original example.
  
There is no such thing as a branch-local declaration in antlr 2.

  I disagree:

    $ cat t.a
    class test 
    extends Parser;

    a: { char c; } A { c = 'A'; }
     |             B { c = 'B'; }
     ;

    $ java antlr.Tool t.a
    ANTLR Parser Generator   Version 2.7.6 (20060528)   1989-2005

    $ javac test.java
    test.java:58: cannot find symbol
    symbol  : variable c
    location: class test
				  c = 'B';
				    ^
    1 error

    $ 

  The code for each branch is enclosed in a separate scope, so anything
  declared in one branch is not accessible outside the branch; hence
  branch-local declarations.


From lgcraymer at yahoo.com  Fri Dec  8 17:10:19 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 8 Dec 2006 17:10:19 -0800 (PST)
Subject: [antlr-interest] Syntactic predicates vs branch-local
	declarations.
In-Reply-To: <87odqdq5oy.fsf@UlanBator.myhome.westell.com>
Message-ID: <577417.75686.qm@web55913.mail.re3.yahoo.com>


--- "r. clayton" <rvclayton at acm.org> wrote:

   
> There is no such thing as a branch-local declaration
> in antlr 2.
> 
>   I disagree:
> 
>     $ cat t.a
>     class test 
>     extends Parser;
> 
>     a: { char c; } A { c = 'A'; }
>      |             B { c = 'B'; }
>      ;
> 
>     $ java antlr.Tool t.a
>     ANTLR Parser Generator   Version 2.7.6
> (20060528)   1989-2005
> 
>     $ javac test.java
>     test.java:58: cannot find symbol
>     symbol  : variable c
>     location: class test
> 				  c = 'B';
> 				    ^
>     1 error
> 
>     $ 
> 
>   The code for each branch is enclosed in a separate
> scope, so anything
>   declared in one branch is not accessible outside
> the branch; hence
>   branch-local declarations.
> 

Try changing your grammar slightly:
    class test 
    extends Parser;

    a: { char c; } (A)=> A { c = 'A'; }
     |             B { c = 'B'; }
     ;
 
and you will see what Monty means:  it will have
problems with c = 'A';

--Loring

> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From monty at codetransform.com  Sat Dec  9 08:20:12 2006
From: monty at codetransform.com (Monty Zukowski)
Date: Sat, 9 Dec 2006 08:20:12 -0800
Subject: [antlr-interest] Syntactic predicates vs branch-local
	declarations.
In-Reply-To: <87odqdq5oy.fsf@UlanBator.myhome.westell.com>
References: <87zm9zyv58.fsf@UlanBator.myhome.westell.com>
	<598864c70612080947o6908620oc872c17d60949f62@mail.gmail.com>
	<87odqdq5oy.fsf@UlanBator.myhome.westell.com>
Message-ID: <598864c70612090820k4bbc692el56539ef2f9931376@mail.gmail.com>

>   I disagree:
>
>     $ cat t.a
>     class test
>     extends Parser;
>
>     a: { char c; } A { c = 'A'; }
>      |             B { c = 'B'; }
>      ;
>
>     $ java antlr.Tool t.a
>     ANTLR Parser Generator   Version 2.7.6 (20060528)   1989-2005
>
>     $ javac test.java
>     test.java:58: cannot find symbol
>     symbol  : variable c
>     location: class test
>                                   c = 'B';
>                                     ^
>     1 error
>
>     $
>
>   The code for each branch is enclosed in a separate scope, so anything
>   declared in one branch is not accessible outside the branch; hence
>   branch-local declarations.
>
>

Well, I could be wrong there, but I had never heard of it before (and
I've been around a while.)

Monty

From jdfrens at calvin.edu  Sat Dec  9 10:02:13 2006
From: jdfrens at calvin.edu (Jeremy D. Frens)
Date: Sat, 09 Dec 2006 13:02:13 -0500
Subject: [antlr-interest] unit tests
In-Reply-To: <20061123210651.4DC20190A70@www.antlr.org>
References: <20061123210651.4DC20190A70@www.antlr.org>
Message-ID: <457AFA25.6010007@calvin.edu>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Sorry to jump into the discussion late.  It's too easy to let things
slide while on a sabbatical...

Robert Hill wrote:
> Hi all, just want to open up a bit of a discussion, how does everyone else
> handle unit testing for a compiler/code generator.
> Or if you're using JUnit/NUnit how do test your Antlr output ?
> 
> File compares on the output sources? How do you test individual constructs?
> Hundred of files( or embedded strings) with each one having a single example
> to the construct in question?
> 
> Just looking for some good ideas ( or examples :) ) on implementation (I'll
> be using JUinit btw)

I believe very strongly in unit testing, so while I was writing an
interpreter using ANTLR (http://nolatte.sourceforge.net), I also built a
unit-testing library for ANTLR grammars using JUnit.  My results can be
found on SourceForge: http://antlr-testing.sourceforge.net/ .

Unfortunately, there are a few problems with the ANTLR Testing library:
first, the website sucks.  Second, the library works (as far as I know)
only with ANTLR 2.7.6, and it is unaware of JUnit 4.x.  Third,
ironically, the library is not well tested.  Fourth, I've learned a lot
about unit testing since I wrote the library, and the overall design of
the library could stand some reworking.

As an example of the fourth problem, in order to test a tree parser, you
end up testing the lexer and the parser as well.  I don't know that I'll
necessarily drop this because it *is* good functional testing.  But a
unit test should just test *one* action (e.g., one tree transformation)
in *one* module (e.g., the tree builder).

That's the bad news; here's the good news.

The library is very usable now, even with my warnings.  I've used it for
my own interpreter; I've used it two or three times in a compiler course
(at Calvin College, http://cs.calvin.edu/); I've used it twice in a
Programming Languages course (also at Calvin).

Better yet, the purpose of my sabbatical next semester is to write a lab
manual (maybe textbook) for a Programming Languages course, doing
incremental, test-driven development of interpreters (plural!) and other
language transformations (like a compiler).  It's becoming clear to me
this semester that I need a better ANTLR Testing library to make this
lab manual effective.

Some changes that I've planned (not in any real order): switch to JUnit
4.1 (or whatever's current); rework the existing library for ANTLR
2.7.6; build a new library for ANTLR 3.0; unit test the library; write a
better website.

I'm very interested in what people think about my ANTLR Testing library
and what features you'd like to see in such a library.

jdf

- --
* Jeremy D. Frens * Professor, Computer Science * jdfrens at calvin.edu *
              ``The first step towards wisdom is calling
                things by their right names.''  --Chinese proverb

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFFevokOcBu2deY79IRAudAAJ9Wkc/dAE0ZOjfQ7f840wmTHCLLaACfd/N4
O3uubpYvv2Ivn6yLrlO7AdE=
=wf3Q
-----END PGP SIGNATURE-----

From rvclayton at acm.org  Sat Dec  9 12:00:53 2006
From: rvclayton at acm.org (r. clayton)
Date: 09 Dec 2006 15:00:53 -0500
Subject: [antlr-interest] Syntactic predicates vs branch-local
	declarations.
References: <87zm9zyv58.fsf@UlanBator.myhome.westell.com>
	<598864c70612080947o6908620oc872c17d60949f62@mail.gmail.com>
	<87odqdq5oy.fsf@UlanBator.myhome.westell.com>
	<598864c70612090820k4bbc692el56539ef2f9931376@mail.gmail.com>
Message-ID: <87slfokfey.fsf_-_@UlanBator.myhome.westell.com>

  I had never heard of it before

It comes from being anal retentive enough to always declare variables in the
smallest possible scope; see, for example, Section 10.4 of Code Complete (2nd
ed) by Steve McConnell.

Some confusion may come about because element labels are not branch local; the
rule

  binaryOp
    : Plus e1:exp e2:exp
    | Minus e1:exp e2:exp
    ;

causes problems:

  $ java antlr.Tool t.a
  ANTLR Parser Generator   Version 2.7.6 (20060528)   1989-2005
  t.a:5:11: Label 'e1' has already been defined
  t.a:5:18: Label 'e2' has already been defined
  Exiting due to errors.

  $

You have to resort to circumlocutions such as

  binaryOp
    : Plus pe1:exp pe2:exp
    | Minus me1:exp me2:exp
    ;

which is annoying.


From parrt at cs.usfca.edu  Sat Dec  9 13:36:10 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Dec 2006 13:36:10 -0800
Subject: [antlr-interest] unit tests
In-Reply-To: <457AFA25.6010007@calvin.edu>
References: <20061123210651.4DC20190A70@www.antlr.org>
	<457AFA25.6010007@calvin.edu>
Message-ID: <69FEB904-75FC-4733-AD9D-8D0EFCF39316@cs.usfca.edu>

Hi Jeremy,

Very interesting work! at a recent GPCE2006 conference, Martin  
Bravenboer showed me his interesting tools for testing GLR-based  
Stratego stuff.   After that, I decided to build GUnit using the same  
ideas Martin had.  You can do each thing things without having to  
resort to Java code:

expr:
	"3+4" -> ^(+ 3 4)
	"3+4*5" -> ^(+ 3 ^(* 4 5))

etc...

  where you could test output, parse tree, AST, etc. Naturally, this  
could simply generate JUnit code.

Ter


On Dec 9, 2006, at 10:02 AM, Jeremy D. Frens wrote:
> Sorry to jump into the discussion late.  It's too easy to let things
> slide while on a sabbatical...
>
> Robert Hill wrote:
>> Hi all, just want to open up a bit of a discussion, how does  
>> everyone else
>> handle unit testing for a compiler/code generator.
>> Or if you're using JUnit/NUnit how do test your Antlr output ?
>>
>> File compares on the output sources? How do you test individual  
>> constructs?
>> Hundred of files( or embedded strings) with each one having a  
>> single example
>> to the construct in question?
>>
>> Just looking for some good ideas ( or examples :) ) on  
>> implementation (I'll
>> be using JUinit btw)
>
> I believe very strongly in unit testing, so while I was writing an
> interpreter using ANTLR (http://nolatte.sourceforge.net), I also  
> built a
> unit-testing library for ANTLR grammars using JUnit.  My results  
> can be
> found on SourceForge: http://antlr-testing.sourceforge.net/ .
>
> Unfortunately, there are a few problems with the ANTLR Testing  
> library:
> first, the website sucks.  Second, the library works (as far as I  
> know)
> only with ANTLR 2.7.6, and it is unaware of JUnit 4.x.  Third,
> ironically, the library is not well tested.  Fourth, I've learned a  
> lot
> about unit testing since I wrote the library, and the overall  
> design of
> the library could stand some reworking.
>
> As an example of the fourth problem, in order to test a tree  
> parser, you
> end up testing the lexer and the parser as well.  I don't know that  
> I'll
> necessarily drop this because it *is* good functional testing.  But a
> unit test should just test *one* action (e.g., one tree  
> transformation)
> in *one* module (e.g., the tree builder).
>
> That's the bad news; here's the good news.
>
> The library is very usable now, even with my warnings.  I've used  
> it for
> my own interpreter; I've used it two or three times in a compiler  
> course
> (at Calvin College, http://cs.calvin.edu/); I've used it twice in a
> Programming Languages course (also at Calvin).
>
> Better yet, the purpose of my sabbatical next semester is to write  
> a lab
> manual (maybe textbook) for a Programming Languages course, doing
> incremental, test-driven development of interpreters (plural!) and  
> other
> language transformations (like a compiler).  It's becoming clear to me
> this semester that I need a better ANTLR Testing library to make this
> lab manual effective.
>
> Some changes that I've planned (not in any real order): switch to  
> JUnit
> 4.1 (or whatever's current); rework the existing library for ANTLR
> 2.7.6; build a new library for ANTLR 3.0; unit test the library;  
> write a
> better website.
>
> I'm very interested in what people think about my ANTLR Testing  
> library
> and what features you'd like to see in such a library.
>
> jdf


From parrt at cs.usfca.edu  Sat Dec  9 13:36:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Dec 2006 13:36:33 -0800
Subject: [antlr-interest] V3 equivalent of $setType(TOKEN)
In-Reply-To: <mnet1.1165607598.7003.babak.teymouri@noos.fr>
References: <mnet1.1165607598.7003.babak.teymouri@noos.fr>
Message-ID: <21EBB793-430C-44EF-AFA8-2120CCF3758B@cs.usfca.edu>


On Dec 8, 2006, at 11:53 AM, babak.teymouri at noos.fr wrote:

> Hi,
> I'm trying to convert some V2 grammar to V3 and don't know if there  
> is any V3 equivalent of $setType(TOKEN).
> ( I did not found it on then wiki!!)

Hi.  Try $type = ... ;

Ter


From parrt at cs.usfca.edu  Sat Dec  9 13:38:22 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Dec 2006 13:38:22 -0800
Subject: [antlr-interest] My recursive tree walker won't
In-Reply-To: <45764641.1030005@symboticware.com>
References: <45764641.1030005@symboticware.com>
Message-ID: <5A9522FC-4D38-450E-B6F0-AB5BA6ABA729@cs.usfca.edu>


On Dec 5, 2006, at 8:25 PM, Cameron Ross wrote:

> I've found the problem...
>
> I was explicitly exporting the vocabulary from the parser and not  
> the tree parser.  This caused two token files to be created with  
> inconsistent type values for the WORD token.  This was causing my  
> tree parser recursion problems.
>
> In resolving this problem I ended up with a warning on the parser  
> grammar that I was redefining the PWORD token (which I'm pretty  
> sure I'm not).  I resolved the problem by simply removing the token  
> section and the PWORD token does in fact appear to be defined  
> elsewhere, but I have no idea as to where.  Any thoughts are  
> greatly appreciated.

Hi Cameron,

I designed things so that you should be able to generate a token list  
from the parser and load that into the tree parser:

tree grammar tp;

options {tokenVocab=p;}

...

  Is that not the behavior you find?

Ter


From parrt at cs.usfca.edu  Sat Dec  9 13:42:51 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 9 Dec 2006 13:42:51 -0800
Subject: [antlr-interest] File extensions for ANTLR 3
In-Reply-To: <065C4511-4D08-4C75-88A7-C44E147A8393@classdump.org>
References: <20061130234635.284B0150E@mail.intersystems.com>
	<065C4511-4D08-4C75-88A7-C44E147A8393@classdump.org>
Message-ID: <50A9FD29-C102-42B1-9BED-DACE331EEE2C@cs.usfca.edu>

Ok guys, sounds like we can just let people use whatever file  
extension they want, but should we put in the manual that we  
recommend .g, .gp, .gl, gtp?  I don't like the 3 in there, but... you  
can do what you want. ;) Should we take off the TreeParser suffix  
for .gtp files?

Ter

From dave at badgers-in-foil.co.uk  Sat Dec  9 16:10:58 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 10 Dec 2006 00:10:58 +0000
Subject: [antlr-interest] Island grammar in AntlrV3
In-Reply-To: <200612051331.33755.e.papegaaij@student.utwente.nl>
References: <200609022309.32178.ilia@obnovlenie.ru>
	<20061204232005.GA8855@badgers-in-foil.co.uk>
	<20061205120644.GA18410@badgers-in-foil.co.uk>
	<200612051331.33755.e.papegaaij@student.utwente.nl>
Message-ID: <20061210001057.GA4466@badgers-in-foil.co.uk>

On Tue, Dec 05, 2006 at 01:31:33PM +0100, Emond Papegaaij wrote:
> On Tuesday 05 December 2006 13:06, David Holroyd wrote:
> > On Mon, Dec 04, 2006 at 11:20:05PM +0000, David Holroyd wrote:
> > > On Sat, Sep 02, 2006 at 11:01:43PM +0000, David Holroyd wrote:
> > > My first idea is to have an action at the point in the outer grammar
> > > where the island grammar's start-marker is recognised, which will...
> > >
> > >  1) take the unprocessed tail of the CommonTokenStream that the
> > >     outer parser currently has as input, and turn back into a string
> > >  2) create a new island lexer/TokenStream that reprocesses the tail
> > >     from 1)
> > >  3) create a parser for the island grammar, and parse the new token
> > >     stream from 2)
> > >  4) get the tail of the island grammar's token stream once the
> > >     end-marker was found, and convert back to the lexer for 'this'
> > >     grammar again
> > >  5) replace the original 'input' reference the parser was using, and get
> > >     going with the outer grammar again

> I've tried something similar, and it does work, but be prepared for some 
> difficulties. For example, the outer grammar MUST not look ahead past (or 
> into) the island grammar. As that will cause trouble with the lexer (as you 
> just mentioned). Interaction between the parser and the lexer is difficult to 
> get right, due to the LA. Writing a lazy token stream is not very difficult 
> with ANTLR v3 (just implement the interface).

I've sort-of got some stuff working along these lines, so I wrote up
some notes in the wiki:

http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control

Hope they'll be of use to someone else.


ta,
dave

-- 
http://david.holroyd.me.uk/

From masterxor at rcn.com  Sun Dec 10 12:06:08 2006
From: masterxor at rcn.com (David Richards)
Date: Sun, 10 Dec 2006 15:06:08 -0500
Subject: [antlr-interest] the ^ character in an ANTLR grammar
Message-ID: <000101c71c96$a1a44d00$6401a8c0@wizard>

Hello -
I'm an ANTLR newbie and was wondering about the calc.g grammar file in
examples/java/calc that came with version 2.7.7. The online tutorial (An
Introduction to ANTLR by Terence Paar) states the following grammar rule for
an expression:

expr:   mexpr ((PLUS|MINUS) mexpr)*
    ;      


But the rule that I see in examples/java/calc/calc.g states it as follows:

expr
	:	mexpr (PLUS^ mexpr)* SEMI!

What exactly does the '^' character mean in an ANTLR grammar? I searched
high and low with out success...
Many Thanks!
Dave

From renjith.varma at gmail.com  Sun Dec 10 12:17:40 2006
From: renjith.varma at gmail.com (Renjith Varma)
Date: Sun, 10 Dec 2006 12:17:40 -0800
Subject: [antlr-interest] C Parser generated with antlr v3.0b not working
In-Reply-To: <cad0d44c0612101204p6508dc88w19b34e30d599f5e@mail.gmail.com>
References: <cad0d44c0612101204p6508dc88w19b34e30d599f5e@mail.gmail.com>
Message-ID: <cad0d44c0612101217r4373f7a0s7e285fa86795242d@mail.gmail.com>

Hi,

I am a newbie to antlr. I downloaded antlr3.0b as well as the ANSI C grammar
from the antlr home page. I tried to generate the parser in  C language by
giving
language=C; in options. It gave a lot of errors (a part of which I am
attaching below) but created CParser__.g, CParserLexer.c, CParserLexer.h,
CParserParser.c, CParserParser.h and CParser.tokens.
Now i tried to compile all these .c files into one object file and it is
showing lots of errors. Am i doing something wrong? Please help
Also, my idea is to modify the parser files in C to do tree walking. Is this
already available? If so could you help me in finding it?
The errors during C code generation are:

[root at localhost ansic]# java org.antlr.Tool CParser.g
ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
error(10):  internal error: group C does not satisfy interface ANTLRCore:
missing templates [lexerRulePropertyRef_text, lexerRulePropertyRef_type,
lexerRulePropertyRef_line, lexerRulePropertyRef_pos,
lexerRulePropertyRef_index, lexerRulePropertyRef_channel]

warning(200): CParser.g:457:38: Decision can match input such as "'else'"
using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
error(10):  internal error: Class java.lang.String has no such attribute:
name in template context [outputFile parser genericParser(...) rule
ruleInitializations ruleInitializations anonymous <invoke scopeTop arg
context>] : java.lang.NoSuchFieldException: name
java.lang.Class.getField(java.lang.String) (/usr/lib/libgcj.so.6.0.0)
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(
org.antlr.stringtemplate.StringTemplate, java.lang.Object, java.lang.String)
(Unknown Source)
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(
org.antlr.stringtemplate.StringTemplate, java.lang.Object, java.lang.String)
(Unknown Source)
org.antlr.stringtemplate.language.ActionEvaluator.attribute(
antlr.collections.AST) (Unknown Source)
org.antlr.stringtemplate.language.ActionEvaluator.expr(antlr.collections.AST)
(Unknown Source)
org.antlr.stringtemplate.language.ActionEvaluator.argumentAssignment(
antlr.collections.AST, org.antlr.stringtemplate.StringTemplate,
java.util.Map) (Unknown Source)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061210/a3d279ee/attachment.html 

From masterxor at rcn.com  Sun Dec 10 12:30:24 2006
From: masterxor at rcn.com (David Richards)
Date: Sun, 10 Dec 2006 15:30:24 -0500
Subject: [antlr-interest] the ^ character in an ANTLR grammar
In-Reply-To: <000101c71c96$a1a44d00$6401a8c0@wizard>
Message-ID: <000701c71c9a$054a3880$6401a8c0@wizard>

I found my own answer so please disregard this post 
Sorry for the band-width...
Dave

-----Original Message-----
From: David Richards [mailto:masterxor at rcn.com] 
Sent: Sunday, December 10, 2006 3:06 PM
To: antlr-interest at antlr.org
Subject: the ^ character in an ANTLR grammar

Hello -
I'm an ANTLR newbie and was wondering about the calc.g grammar file in
examples/java/calc that came with version 2.7.7. The online tutorial (An
Introduction to ANTLR by Terence Paar) states the following grammar rule for
an expression:

expr:   mexpr ((PLUS|MINUS) mexpr)*
    ;      


But the rule that I see in examples/java/calc/calc.g states it as follows:

expr
	:	mexpr (PLUS^ mexpr)* SEMI!

What exactly does the '^' character mean in an ANTLR grammar? I searched
high and low with out success...
Many Thanks!
Dave


From virtuoso.vin at gmail.com  Sun Dec 10 13:43:11 2006
From: virtuoso.vin at gmail.com (Vinay Veeramachaneni)
Date: Sun, 10 Dec 2006 16:43:11 -0500
Subject: [antlr-interest] Nondeterminism in my grammar files
Message-ID: <3b5bc90612101343m739eac36vfa647aa4cf834eea@mail.gmail.com>

Hello Everybody,

I'm new to Antlr and I appreciate the work in devising this tool.
I'm designing a compiler, a look alike of C. I tried my best to avoid
non-determinism in my grammar. I could not trace out a few.
At a point, I've also set the token look ahead to 4. The below is my
scanner/lexer grammar-
*

options* {

k = 4;

*testLiterals* = *false;   **}
*
*

protected* LETTER: ('a'..'z' | 'A'..'Z');
*

protected* DIGIT: '0'..'9';

ID *options* { testLiterals = *true*; }

: LETTER (LETTER | DIGIT | '_')*;

NUMBER: (DIGIT)+;

PLUS : '+';

SUB : '-';

MULT : '*';

DIV : '/';

ASSIGN : '=';

EQUALS : "==";

LPAREN : '(';

RPAREN : ')';

LSQRPAREN : '[';

RSQRPAREN : ']';

LBRACE : '{';

RBRACE : '}';

LT : "<";

GT : ">";

NOT : '!';

COMMA : ',';

AND : "&&";

OR : "||";

DOT : '.';

COLON : ':';

SEMI : ';';

PERCENTILE : '%';

COMMENT : ("//") {_ttype = Token.SKIP; };

KEYWORD_INT *options* { testLiterals = *false*; }: "int";

KEYWORD_IF *options* { testLiterals = *false*; }: "if";

KEYWORD_ELSE *options* { testLiterals = *false*; }: "else";

KEYWORD_WITH *options* { testLiterals = *false*; }: "with";

KEYWORD_BYTE *options* { testLiterals = *false*; }: "byte";

KEYWORD_VOID *options* { testLiterals = *false*; }: "void";

KEYWORD_LOOP *options* { testLiterals = *false*; }: "loop";

KEYWORD_RETURN *options* { testLiterals = *false*; }: "return";

KEYWORD_INTERFACE *options* { testLiterals = *false*; }: "interface";

KEYWORD_TRIGGER *options* { testLiterals = *false*; }: "trigger";

KEYWORD_ARRAY *options* { testLiterals = *false*; }: "array";

NEWLINE: ('\r''\n'|'\n') {newline(); _ttype = SCAN_END; } ;

WS: (' '|'\t')+ {_ttype = Token.SKIP;} ;

*#-----------------------------------------------------------------*

The warnings I got are-

lexical nondeteminism between rules ID and KEYWORD_INT upon k==1:'i'
k==2:'n' k==3:'t' k==4:<end-of-token>

the other warnings are similar to the above....

*#-----------------------------------------------------------------*

I have the same problem with my parser too. I'm trying to build an AST tree
and while testing couln't build a few of them. I think this has been caused
due to the nondeterminism problem in the scanner. May be my thinking is
immature. My parser file is given below-
*

tokens*{

TREE_ROOT;

TREE_VAR;

VAR_DEC;

FUNC_DEC;

FORMALS;

BLOCK;

FUNC_CALL;

IF_ELSE_STMT;

LOOP_STMT;

INTERFACE_DEC;

ARRAY_DEC;

ARRAY_INDEX;

TRIGGER_DEC;

}

{

*class* ChirpErrorException *extends* RuntimeException {

ChirpErrorException(String msg) {

*super*(msg);

}

}

*private* *void* setLine(AST ast, *int* line) {

ChirpAST chirp_ast = (ChirpAST) ast;

chirp_ast.setLine(line);

}

}

file: ( var_dec (SCAN_END!)* | func_dec (SCAN_END!)*

| interface_dec (SCAN_END!)* | trigger_dec(SCAN_END!)* | array_dec
(SCAN_END!)*)+

{ #file=#([TREE_ROOT, "tree_root"], file);};

var_dec: ( data_type (assignment) (SEMI!) )

{ #var_dec=#([VAR_DEC, "var_dec"], var_dec);};

assignment: ID (ASSIGN^ NUMBER)? ;

data_type: KEYWORD_INT | KEYWORD_BYTE ;

array_dec: (data_type ID (LSQRPAREN! NUMBER RSQRPAREN!) (SEMI!))

{ #array_dec=#([ARRAY_DEC, "array_dec"], array_dec);};

array_index: (LSQRPAREN! ID RSQRPAREN!){ #array_index=#([ARRAY_INDEX,
"array_index"], array_index);};

func_dec: (func_type ID (LPAREN! ( formals ( COMMA! formals)* )? RPAREN!)
(SCAN_END!)* block)

{ #func_dec = #([FUNC_DEC, "func_dec"],func_dec);};

func_type: data_type | KEYWORD_VOID ;

formals: (data_type ID) { #formals=#([FORMALS, "formals"], formals);};

block: ( LBRACE! (SCAN_END!)* ( statement )+ (SCAN_END!)* RBRACE! )

{ #block=#([BLOCK, "block"], block);};

statement: assign_stmt (SEMI!) (SCAN_END!)* | block (SCAN_END!)* |
if_else_stmt (SCAN_END!)*

| func_call (SEMI!)(SCAN_END!)* | loop_stmt (SCAN_END!)* | return_stmt
(SEMI!)(SCAN_END!)* ;

assign_stmt: ID ( array_index )? ASSIGN^ expr;

expr: NOT rel_expr | rel_expr (( AND^ | OR^ ) rel_expr )* ;

rel_expr: arith_expr (( EQUALS^ | LT^ | GT^ ) arith_expr )* ;

arith_expr: term (( PLUS^ | SUB^ ) term )* ;

term: factor (( MULT^ | DIV^ | PERCENTILE^ ) factor )* ;

factor: ID ( LSQRPAREN! expr RSQRPAREN! )? | NUMBER | LPAREN! expr RPAREN! |
func_call ;

func_call: ( ID (DOT ID)* (LPAREN! ( expr ( COMMA! expr )* )? RPAREN!))

{ #func_call = #([FUNC_CALL, "func_call"],func_call);};

if_else_stmt: ( KEYWORD_IF (LPAREN! expr RPAREN!) (SCAN_END!)* statement

(*options* {greedy = *true*;}: KEYWORD_ELSE statement)? )

{ #if_else_stmt = #([IF_ELSE_STMT, "if_else_stmt"],if_else_stmt);};

loop_stmt: (KEYWORD_LOOP ( LPAREN! expr RPAREN!)? block (KEYWORD_WITH ID
(SEMI!))? )

{ #loop_stmt = #([LOOP_STMT, "loop_stmt"],loop_stmt);};

return_stmt: KEYWORD_RETURN ( expr )? ;

interface_dec: (KEYWORD_INTERFACE ID (DOT ID)*

(LBRACE! ((SCAN_END!)* (func_dec)+ (SCAN_END!)*)+ RBRACE!))

{ #interface_dec = #([INTERFACE_DEC, "interface_dec"], interface_dec);};

trigger_dec: (KEYWORD_TRIGGER ID (LBRACE! (SCAN_END!)*

LPAREN! expr RPAREN! (SCAN_END!)* RBRACE!) COLON! block)

{ #trigger_dec = #([TRIGGER_DEC, "trigger_dec"], trigger_dec);};

*
#--------------------------------------------------------------------------------------------
*

The warnings I got in the parser are from the "statement"(colored in redabove)-

nondeterminism upon k==1:SCAN_END k==2:SCAN_END, ID, LBRACE,
RBRACE,KEYWORD_IF,KEYWORD_ELSE,KEYWORD_LOOP, KEYWORD_RETURN
k==3:EOF,ID,SCAN_END......KEYWORD_INTERFACE,KEYWORD_TRIGGER between alt 1
and exit branch of block.

Other 5 warnings are from the same Non-terminal.

#------------------------------------------------------------------------------------------

Please help me trace the problem.

Thanks in advance,

Vinay
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061210/73570443/attachment-0001.html 

From joseph.paterson at gmail.com  Mon Dec 11 01:40:56 2006
From: joseph.paterson at gmail.com (Joseph Paterson)
Date: Mon, 11 Dec 2006 10:40:56 +0100
Subject: [antlr-interest] Problems with linking using v2.7.7 // Code::Blocks
	and MinGW32
Message-ID: <f5fac4320612110140y32e888d3wa742ebac7e94ed85@mail.gmail.com>

Hi all,

I'm trying to compile and link a very small Lexer - Parser that I've created
to suit ANTLR v2.7.7.
The compilation of the generated C++ source files goes fine, but the linking
doesn't. I've told the linker to use the library antlr.lib located in the
lib/ sub-directory of my ANTLR install, but I get the following error
messages:

mingw32-g++.exe -LC:\MinGW\lib  -o bin\Release\LostCities.exe
obj\Release\src\Game.o obj\Release\src\MoveParser\generated\MoveLexer.o
obj\Release\src\MoveParser\generated\MoveParser.o obj\Release\src\main.o
obj\Release\src\AgentAI.o   -s  C:\antlr\277rc1\lib\antlr.lib
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x159):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x209):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x25a):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x529):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x58d):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5b3):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5d9):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5ff):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x769):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x819):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x86a):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xb39):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xb9d):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xbc3):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xbe9):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xc0f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xd79):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xe29):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0xe7a):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1149):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x11ad):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x11d3):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x11f9):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x121f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1389):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1439):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x148a):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1759):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x17bd):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x17e3):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1809):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x182f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1999):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1a49):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1a9a):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1d69):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1dcd):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1df3):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1e19):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1e3f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x1fa9):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2059):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x20aa):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2379):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x23dd):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2403):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2429):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x244f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x25b9):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2669):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x26ba):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2989):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x29ed):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2a13):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2a39):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2a5f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2bc9):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2c79):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2cca):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2f99):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x2ffd):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3023):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3049):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x306f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x31df):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3299):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3301):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x35e4):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3648):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x366e):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3694):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x36ba):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3849):MoveLexer.cpp:
more undefined references to `antlr::TokenRef::~TokenRef()' follow
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3953):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3aaf):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3aef):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3b15):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3cd4):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3cfa):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x3e4e):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4091):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x40cb):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4116):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x413c):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x419f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x41c5):MoveLexer.cpp:
more undefined references to `antlr::TokenRef::~TokenRef()' follow
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x430e):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4551):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x458b):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x45d6):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x45fc):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x465f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4685):MoveLexer.cpp:
more undefined references to `antlr::TokenRef::~TokenRef()' follow
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x47ce):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4a11):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4a4b):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4a96):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4abc):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4b1f):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4b45):MoveLexer.cpp:
more undefined references to `antlr::TokenRef::~TokenRef()' follow
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4c8e):MoveLexer.cpp:
undefined reference to `antlr::nullToken'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4ed1):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4f0b):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4f56):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4f7c):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x4fdf):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5005):MoveLexer.cpp:
more undefined references to `antlr::TokenRef::~TokenRef()' follow
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5df2):MoveLexer.cpp:
undefined reference to `vtable for antlr::RecognitionException'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5e62):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5f7e):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5fa4):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5fca):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x5ff0):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x6016):MoveLexer.cpp:
more undefined references to `antlr::TokenRef::~TokenRef()' follow
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x634b):MoveLexer.cpp:
undefined reference to
`antlr::NoViableAltForCharException::NoViableAltForCharException(int,
std::string const&, int, int)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x6389):MoveLexer.cpp:
undefined reference to `antlr::TokenRef::~TokenRef()'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x640e):MoveLexer.cpp:
undefined reference to
`antlr::CharScanner::CharScanner(antlr::RefCount<antlr::LexerInputState>
const&, bool)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x643e):MoveLexer.cpp:
undefined reference to
`antlr::CharScanner::CharScanner(antlr::RefCount<antlr::LexerInputState>
const&, bool)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x646e):MoveLexer.cpp:
undefined reference to `antlr::CharScanner::CharScanner(antlr::InputBuffer&,
bool)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x649e):MoveLexer.cpp:
undefined reference to `antlr::CharScanner::CharScanner(antlr::InputBuffer&,
bool)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x6519):MoveLexer.cpp:
undefined reference to `antlr::CharBuffer::CharBuffer(std::istream&)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x653b):MoveLexer.cpp:
undefined reference to `antlr::CharScanner::CharScanner(antlr::InputBuffer*,
bool)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x65f9):MoveLexer.cpp:
undefined reference to `antlr::CharBuffer::CharBuffer(std::istream&)'
obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x661b):MoveLexer.cpp:
undefined reference to `antlr::CharScanner::CharScanner(antlr::InputBuffer*,
bool)'
........... (etc, etc)

Any idea why it could be doing this?

Thanks very much in advance,

Joseph Paterson.

-- 
Joseph Paterson
Trinity College, Royal Parade
Parkville, 3052 VIC
+61 3 9348 7227 // +61 4 0022 5518
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061211/e5363685/attachment-0001.html 

From ric.klaren at gmail.com  Mon Dec 11 03:36:28 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon, 11 Dec 2006 12:36:28 +0100
Subject: [antlr-interest] Problems with linking using v2.7.7 //
	Code::Blocks and MinGW32
In-Reply-To: <f5fac4320612110140y32e888d3wa742ebac7e94ed85@mail.gmail.com>
References: <f5fac4320612110140y32e888d3wa742ebac7e94ed85@mail.gmail.com>
Message-ID: <bc607a4e0612110336w14915095w2996a9b1e64e3b1@mail.gmail.com>

Hi,

On 12/11/06, Joseph Paterson <joseph.paterson at gmail.com> wrote:
> I'm trying to compile and link a very small Lexer - Parser that I've created
> to suit ANTLR v2.7.7.
> The compilation of the generated C++ source files goes fine, but the linking
> doesn't. I've told the linker to use the library antlr.lib located in the
> lib/ sub-directory of my ANTLR install, but I get the following error
> messages:
>
> mingw32-g++.exe -LC:\MinGW\lib  -o bin\Release\LostCities.exe
> obj\Release\src\Game.o
> obj\Release\src\MoveParser\generated\MoveLexer.o
> obj\Release\src\MoveParser\generated\MoveParser.o
> obj\Release\src\main.o obj\Release\src\AgentAI.o   -s
> C:\antlr\277rc1\lib\antlr.lib
> obj\Release\src\MoveParser\generated\MoveLexer.o(.text+0x159):MoveLexer.cpp:
> undefined reference to
> `antlr::NoViableAltForCharException::NoViableAltForCharException(int,
> std::string const&, int, int)'
> ...

Did you build the lib with the same mingw installation (and options)?
If it's a MSVC lib then it will probably never work (due to ABI
incompatibility).

Cheers,

Ric

From jimi at intersystems.com  Mon Dec 11 09:58:24 2006
From: jimi at intersystems.com (Jim Idle)
Date: Mon, 11 Dec 2006 12:58:24 -0500
Subject: [antlr-interest] C Parser generated with antlr v3.0b not working
In-Reply-To: <cad0d44c0612101217r4373f7a0s7e285fa86795242d@mail.gmail.com>
Message-ID: <20061211175826.30ABE1310@mail.intersystems.com>

Renjith,
 
Unless you are already familiar with ANTLR 3 and ANTLR stuff, then you might be want to wait before workgin with the C output. However:
 
The warning:
 
error(10):  internal error: group C does not satisfy interface ANTLRCore: missing templates [lexerRulePropertyRef_text, lexerRulePropertyRef_type, lexerRulePropertyRef_line, lexerRulePropertyRef_pos, lexerRulePropertyRef_index, lexerRulePropertyRef_channel]
 
Can be ignored (though it is now fixed pending one addition from Ter so you can reference $start) ? it does not affect the code that is output.
 
The rest of the errors are nothing to do with the C output but appear to be errors or ambiguities in the grammar itself, with the possibl exception of:
 
error(10):  internal error: Class java.lang.String has no such attribute: name in template context [outputFile parser genericParser(...) rule ruleInitializations ruleInitializations anonymous <invoke scopeTop arg context>] : java.lang.NoSuchFieldException: name
 
Which I will take a look at if you send me your grammar (or post it here if small enough). If this is referencing a global scope, then that might be the problem. However, I wonder if we have changed the scope of the name attribute, which the C codegen relies on as the global scope code gen also gives this error. I don?t have it in my own grammars, which are pretty extensive, but then, I am probably not using absolutely everything that can be used.
 
Why don?t you first put this grammar through ANTLRWorks, without the C output option and see if you can make it work there. Until you absolutely have to have code in actions and so on, this is generally a good idea anyway as you can debug the actual parsing of the grammar etc.
 
There should be no need to modify the output code to do tree parsing etc, that is what the tree rewriting actions and the tree parser grammars are for and they already work in the C output. 
 
Jim
 
 
 
 
   _____  

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Renjith Varma
Sent: Sunday, December 10, 2006 12:18 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C Parser generated with antlr v3.0b not working
 
Hi,

I am a newbie to antlr. I downloaded antlr3.0b as well as the ANSI C grammar from the antlr home page. I tried to generate the parser in  C language by giving 
language=C; in options. It gave a lot of errors (a part of which I am attaching below) but created CParser__.g, CParserLexer.c, CParserLexer.h, CParserParser.c, CParserParser.h and CParser.tokens.
Now i tried to compile all these .c files into one object file and it is showing lots of errors. Am i doing something wrong? Please help
Also, my idea is to modify the parser files in C to do tree walking. Is this already available? If so could you help me in finding it?
The errors during C code generation are:

[root at localhost ansic]# java org.antlr.Tool CParser.g
ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
error(10):  internal error: group C does not satisfy interface ANTLRCore: missing templates [lexerRulePropertyRef_text, lexerRulePropertyRef_type, lexerRulePropertyRef_line, lexerRulePropertyRef_pos, lexerRulePropertyRef_index, lexerRulePropertyRef_channel]

warning(200): CParser.g:457:38: Decision can match input such as "'else'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
error(10):  internal error: Class java.lang.String has no such attribute: name in template context [outputFile parser genericParser(...) rule ruleInitializations ruleInitializations anonymous <invoke scopeTop arg context>] : java.lang.NoSuchFieldException: name
java.lang.Class.getField(java.lang.String) (/usr/lib/libgcj.so.6.0.0)
org.antlr.stringtemplate.language.ASTExpr.rawGetObjectProperty(org.antlr.stringtemplate.StringTemplate, java.lang.Object, java.lang.String) (Unknown Source)
org.antlr.stringtemplate.language.ASTExpr.getObjectProperty(org.antlr.stringtemplate.StringTemplate, java.lang.Object, java.lang.String) (Unknown Source)
org.antlr.stringtemplate.language.ActionEvaluator.attribute(antlr.collections.AST) (Unknown Source)
org.antlr.stringtemplate.language.ActionEvaluator.expr(antlr.collections.AST) (Unknown Source)
org.antlr.stringtemplate.language.ActionEvaluator.argumentAssignment(antlr.collections.AST, org.antlr.stringtemplate.StringTemplate, java.util.Map) (Unknown Source)


--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/581 - Release Date: 12/9/2006 3:41 PM

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/581 - Release Date: 12/9/2006 3:41 PM
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061211/797eee7b/attachment.html 

From Joerg.Werner at qimonda.com  Mon Dec 11 11:42:43 2006
From: Joerg.Werner at qimonda.com (Joerg.Werner at qimonda.com)
Date: Mon, 11 Dec 2006 20:42:43 +0100
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <AA3E0405-9826-49FE-8848-AD30352C5B4F@cs.usfca.edu>
Message-ID: <8659C7B861F21A4889878EE7CF859D7D02B09F14@mucse303.eu.infineon.com>

Hi all, 

>Ok, I just figured out. we need a new method on the CommonTreeNodeStream that pushes the
>current location a stack and jumps to a new index in the stream.  The only trick then is to map 
>nodes of interest to the correct index.  In reality, what happens is that the recognition of 
>the functions in your language will create a hash table entry that maps the function name to 
>the index in the stream:
>
>funcDef
>@init {int i = input.index();}
>	:	'void' ID '(' ')' -> ^(FUNCDEF ID)
>		{functions.put($ID.text, i);}
>	;

Yes, this will work nicely for functions. What I do not like is that we use "input" directly, this makes us implementation/language dependent. Maybe we should go for $input instead?

And what about if-else constructs? It is hard to keep track of those, because they typically have no unique ID. My solution for if-then constructs would be along these lines (in the TreeParser):

  ^(IF_TOKEN t=boolean_expression {int thenIndex = input.index();} thenAst:. {int elseIndex = input.index();} elseAst:.)
     {
        input.jumpTo(t ? thenIndex : elseIndex); 
        val = expression(); 
     }

Though I think this litters the code quite a lot. Much nicer would be if thenAst and elseAst would have attributes which would point to the correct position in the CommonTreeNodeStream, something like:

  ^(IF_TOKEN t=boolean_expression thenAst:. elseAst:.)
     {
        input.jumpTo(t ? $thenAst.TreeNodePos : $elseAst.TreeNodePos); 
        val = expression(); 
     }

What do you think about this?

>something like that. If you get that to work, let us know.

I'll try to implement something like the index() and jumpTo() methods in CommonTreeNodeStream. Will let you know when I'm done.


>I should also note that I don't think that I have finished backtracking for the tree node 
>stream.  Comments on the market and rewind methods should indicate that.

>Ter

Regards,

J?rg

From dmitry.goldenberg at weblayers.com  Mon Dec 11 13:20:48 2006
From: dmitry.goldenberg at weblayers.com (Dmitry Goldenberg)
Date: Mon, 11 Dec 2006 13:20:48 -0800
Subject: [antlr-interest] Problem using CSharpParser.g
Message-ID: <5CCB14CB6DCFB147A4D09CC90808B0F30D6F41@ehost011-3.exch011.intermedia.net>

I'm trying to use Antlr 2.6.7 with the CSharpParser.g grammar.
 
java antlr.Tool CSharpParser.g yields the following:
ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
panic: Cannot find importVocab file 'CSharpLexerTokenTypes.txt'
 
Does anyone have any idea how to fix this?
Thanks,
- Dmitry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061211/9e020b8f/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 11 15:44:59 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 11 Dec 2006 15:44:59 -0800
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <8659C7B861F21A4889878EE7CF859D7D02B09F14@mucse303.eu.infineon.com>
References: <8659C7B861F21A4889878EE7CF859D7D02B09F14@mucse303.eu.infineon.com>
Message-ID: <211DDAC7-5641-4F52-8DB7-50406866C866@cs.usfca.edu>


On Dec 11, 2006, at 11:42 AM, <Joerg.Werner at qimonda.com>  
<Joerg.Werner at qimonda.com> wrote:

> Hi all,
>
>> Ok, I just figured out. we need a new method on the  
>> CommonTreeNodeStream that pushes the
>> current location a stack and jumps to a new index in the stream.   
>> The only trick then is to map
>> nodes of interest to the correct index.  In reality, what happens  
>> is that the recognition of
>> the functions in your language will create a hash table entry that  
>> maps the function name to
>> the index in the stream:
>>
>> funcDef
>> @init {int i = input.index();}
>> 	:	'void' ID '(' ')' -> ^(FUNCDEF ID)
>> 		{functions.put($ID.text, i);}
>> 	;
>
> Yes, this will work nicely for functions. What I do not like is  
> that we use "input" directly, this makes us implementation/language  
> dependent. Maybe we should go for $input instead?

Well, the functions.put($ID.text, i) will be language specific  
anyway, won't it?

> And what about if-else constructs? It is hard to keep track of  
> those, because they typically have no unique ID.

There index in the input stream is effectively their virtual machine  
address I guess.

> My solution for if-then constructs would be along these lines (in  
> the TreeParser):
>
>   ^(IF_TOKEN t=boolean_expression {int thenIndex = input.index();}  
> thenAst:. {int elseIndex = input.index();} elseAst:.)
>      {

don't forget that we have to actually call a rule in 3.0; can't use  
'.' to jump over a subtree (yet?)

>         input.jumpTo(t ? thenIndex : elseIndex);
>         val = expression();
>      }
>
> Though I think this litters the code quite a lot. Much nicer would  
> be if thenAst and elseAst would have attributes which would point  
> to the correct position in the CommonTreeNodeStream, something like:
>
>   ^(IF_TOKEN t=boolean_expression thenAst:. elseAst:.)
>      {
>         input.jumpTo(t ? $thenAst.TreeNodePos : $elseAst.TreeNodePos);
>         val = expression();
>      }
>
> What do you think about this?

Actually, we have $thenAST.start, which is the tree node...damn, we  
don't have the stream index! Crap.  I guess we could add $index but  
that would force us to add that as a variable to the tree node I  
guess unless you called a rule that set a return value.  Not sure  
what to do here...

>> something like that. If you get that to work, let us know.
>
> I'll try to implement something like the index() and jumpTo()  
> methods in CommonTreeNodeStream. Will let you know when I'm done.

Great.  Use seek() for jumpTo() to be consistent; should already exist.

Ter

From open.zone at virgin.net  Mon Dec 11 18:18:56 2006
From: open.zone at virgin.net (Micheal J)
Date: Tue, 12 Dec 2006 02:18:56 -0000
Subject: [antlr-interest] Problem using CSharpParser.g
In-Reply-To: <5CCB14CB6DCFB147A4D09CC90808B0F30D6F41@ehost011-3.exch011.intermedia.net>
Message-ID: <01ea01c71d93$e16c07e0$c704a8c0@hercules>

Where did you get the CSharpParser.g grammar file you are using?
 
If you are talking about CSharpParser.g from our grammar contribution (named
KCSParse or csharp_v1) then, you should know that we provided a
self-contained distribution that builds all the grammars in the right order.
You will need Nant to build. Incidentally, although KCSParse is still
available from the website, it has been superceeded by csharp_v1 (which is
included as a sample with ANTLR 2.7.6 and 2.7.7).
 
Micheal
 
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dmitry Goldenberg
Sent: 11 December 2006 21:21
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problem using CSharpParser.g


I'm trying to use Antlr 2.6.7 with the CSharpParser.g grammar.
 
java antlr.Tool CSharpParser.g yields the following:
ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
panic: Cannot find importVocab file 'CSharpLexerTokenTypes.txt'
 
Does anyone have any idea how to fix this?
Thanks,
- Dmitry

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061212/84098c3b/attachment.html 

From Abhijit_Ghonge at infosys.com  Tue Dec 12 08:05:22 2006
From: Abhijit_Ghonge at infosys.com (Abhijit Nandkumar Ghonge)
Date: Tue, 12 Dec 2006 21:35:22 +0530
Subject: [antlr-interest] Customizing Abstract Syntax Tree
Message-ID: <D72A054DF5002D4FA6CF14252F7997B8D97ED5@BLRKECMSG13.ad.infosys.com>


Hi,

            Can anybody help me with this? Can I customize the Abstract
syntax tree? For example:

I have a parser like this:

class CalcParser extends Parser;

options {

            buildAST = true; // uses CommonAST by default

}



expr

            :           mexpr (PLUS mexpr)* SEMI!

            ;



mexpr

            :           atom (STAR atom)*

            ;



atom:    INT

            ;



I want an Abstract Syntax Tree such as:



2 + ( 3 + 4)



Then I may be able to develop something like this:







Please help.



Regards,

Abhijit.



**************** CAUTION - Disclaimer *****************
This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended solely for the use of the addressee(s). If you are not the intended recipient, please notify the sender by e-mail and delete the original message. Further, you are not to copy, disclose, or distribute this e-mail or its contents to any other person and any such actions are unlawful. This e-mail may contain viruses. Infosys has taken every reasonable precaution to minimize this risk, but is not liable for any damage you may sustain as a result of any virus in this e-mail. You should carry out your own virus checks before opening the e-mail or attachment. Infosys reserves the right to monitor and review the content of all messages sent to or from this e-mail address. Messages sent to or from this e-mail address may be stored on the Infosys e-mail system.
***INFOSYS******** End of Disclaimer ********INFOSYS***
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061212/d6fae09f/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/jpeg
Size: 5179 bytes
Desc: image001.jpg
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061212/d6fae09f/attachment-0001.jpe 

From matt at ebi.ac.uk  Tue Dec 12 09:10:31 2006
From: matt at ebi.ac.uk (Matt Harrison)
Date: Tue, 12 Dec 2006 17:10:31 +0000
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching single
	character input
Message-ID: <457EE287.3020801@ebi.ac.uk>

Salute, fellow antlers.

I'm a recent convert to the world of language recognition/parsing using 
ANTLR, although I have used Perl /python for "simple" parsing tasks for 
many many man-months.

I am having trouble diagnosing why the (common) lexer expression 
"('a'..'z')+" is not matching any single character input (eg: "n") in my 
grammar. Is there any situations under which this expression should not 
match a single character in the range 'a' - 'z'?

Thanks for your time.
Matt

~~~
The offending parser rule is as following:

substituent

        :   IDENTIFIER 

            (HYPHEN IDENTIFIER)*

        ;


The lexer is pretty basic:

class FooBarLexer extends Lexer;

options {

    k=3;        /*  lookahead  */

}

//~~~~~~~~~~~~~~~~~~~~  token separators & delimiters  ~~~~~~~~~~~~~~~~~~~~~~//

    

COLON

        options { paraphrase="a colon separator"; }

        :   ':'

        ;

    

COMMA                

        options { paraphrase="a comma"; }

        :     ','

        ;

HYPHEN            

        options { paraphrase="an internal linkage delimiter '-'"; }

        :     '-' 

        ;

PIPE                

        options { paraphrase="a residue substitution delimiter"; }

        :     '|'

        ;

SEMICOLON

        options { paraphrase="a residue/linkage token separator"; }

        :   ';'

        ;

        

LPARENTHESIS

        options { paraphrase="a linkage delimiter"; }

        :   '('

        ;

        

RPARENTHESIS

        options { paraphrase="a linkage delimiter"; }

        :   ')'

        ;
 

//~~~~~~~~~~~~~~~~~~~~~~~~~~~ identifiers ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

INTEGER

        options { paraphrase="a positive integer or zero"; }

        :     ('1'..'9')  ('0'..'9')*  

        |   '0'

        ;

        

IDENTIFIER                    

        options { paraphrase="a residue name/identifier"; }

        :     ('a'..'z')+

        ;

//~~~~~~~~~~~~~~~~~~~~~~~  section type identifiers  ~~~~~~~~~~~~~~~~~~~~~~~~//

RES

        options { paraphrase="a RES (residue) section start identifier"; }

        :   "RES"

        ;

        

LIN     

        options { paraphrase="a LIN (linkage) section start identifier"; }

        :   "LIN" 

        ;

        

PRO     

        options { paraphrase="a PRO (heterogeneity due to uncertainty) section start identifier"; }

        :   "PRO"

        ;

        

REP     

        options { paraphrase="a REP (repeat) section start identifier"; }

        :   "REP"

        ;

        

STA 

        options { paraphrase="a STA (heterogeneity due to a statistical distribution) section start identifier"; }

        :   "STA"

        ;

        

ISO

        options { paraphrase="an ISO (isotope) section start identifier"; }

        :   "ISO"

        ;

        

AGL

        options { paraphrase="an AGL (aglycon) section start identifier"; }

        :   "AGL"

        ;

    

CR

        : ( '\r' '\n' )

        | '\n'                                  {   newline(); $setType( Token.SKIP );  }

        ;

    

WS  

        : (' '| '\t' )                          {   $setType( Token.SKIP );  }

        ;

 


-- 
Dr Matt Harrison
BTech (Biotech) Hons PhD
Glycobiology Bioinformatician
European Bioinformatics Institute UK
http://www.ebi.ac.uk   +44 (0)1223 492533


From foolishewe at hotmail.com  Tue Dec 12 13:01:05 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 12 Dec 2006 21:01:05 +0000
Subject: [antlr-interest] How to use String Attributes in ANTLR3
Message-ID: <BAY107-F34F1DEC0B1F5009121A97CC0D70@phx.gbl>

Hello All:

I'm trying to add backend support to my grammar and for my convenience,  I 
would like to have
Java Strings "synthetic attributes" passed from the bottom up in the grammar 
(so that I can
access them in non terminal productions).  I tried following the approach 
that appears to
be suggested in the expression evaluator in the wiki, at:
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

However, something like:

testCommandSuffix returns [String text]
	:
		ACTION {$text = $ACTION.text;}
	;

generates errors reported in the console reading:

[15:55:48] error(151): C:\temp\TestGrammar.g:111:10: cannot write to read 
only attribute: $text.
[15:55:49] error(10):  internal error: 
org.antlr.tool.Message.toString(Message.java:124): Assertion failed! Message 
ID 151 created but is not present in errorMsgIDs or warningMsgIDs.

Have I made an error here, if so, how can I fix it?  Otherwise, how does one 
specify a
synthetic attribute in ANTLR?

I have also noticed that in ANTLRworks 1.0b8, when trying to generate 
grammars, sometimes if I get
an error, I will get a popup window reading:
"Grammar Check failed:
  null
  Check Console for more Information"

and if I try to edit the grammar or regenerate it, the console window does 
not get any new
diagnostic messages routed to it.  Does anyone else get this?

Thanks:

Bill M.

_________________________________________________________________
Visit MSN Holiday Challenge for your chance to win up to $50,000 in Holiday 
cash from MSN today!  
http://www.msnholidaychallenge.com/index.aspx?ocid=tagline&locale=en-us


From woods.kirk at gmail.com  Tue Dec 12 13:15:52 2006
From: woods.kirk at gmail.com (Kirk Woods)
Date: Tue, 12 Dec 2006 15:15:52 -0600
Subject: [antlr-interest] Rewinding the token stream between templates
Message-ID: <ae0488d00612121315me3451ch807ea731da4ca26d@mail.gmail.com>

I am in the process of creating a tool, with ANTLR 3.0b5 and StringTemplate
3.0, which at this point has two template files and will most likely have
four in the future.  After parsing with the first template group, I must
rewind the token stream in order to parse with the next template group.

        parser.setTemplateLib(Main.createTemplates);
        RuleReturnScope ruleScope = parser.program();
        System.out.println(ruleScope.getTemplate().toString());

        parser.getTokenStream().rewind(0);
        parser.setTemplateLib(Main.alterTemplates);
        ruleScope = parser.program();
        System.out.println(ruleScope.getTemplate().toString());

While I can do this by calling "parser.getTokenStream().rewind(0)", this
creates a dependency on knowledge of the internal implementation of the
parser.  I would like to suggest that the implementation of the
setTemplateLib method be modified to rewind the token stream (e.g.
super.input.rewind(-1)).  Is there a valid use case where one would not want
the token stream reset whenever the setTemplateLib method is called?

Thanks,
Kirk Woods

p.s. These are great tools.  I have only been using these for two weeks and
the amount of code I am now able to generate is tremendous.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061212/e1879375/attachment.html 

From parrt at cs.usfca.edu  Tue Dec 12 13:23:33 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Dec 2006 13:23:33 -0800
Subject: [antlr-interest] How to use String Attributes in ANTLR3
In-Reply-To: <BAY107-F34F1DEC0B1F5009121A97CC0D70@phx.gbl>
References: <BAY107-F34F1DEC0B1F5009121A97CC0D70@phx.gbl>
Message-ID: <66448389-539E-4924-B9E3-32E77019A0CC@cs.usfca.edu>

Hi. $text is a built-in attribute...please don't use text as a user- 
defined paramenter.:)

Ter
On Dec 12, 2006, at 1:01 PM, Foolish Ewe wrote:

> Hello All:
>
> I'm trying to add backend support to my grammar and for my  
> convenience,  I would like to have
> Java Strings "synthetic attributes" passed from the bottom up in  
> the grammar (so that I can
> access them in non terminal productions).  I tried following the  
> approach that appears to
> be suggested in the expression evaluator in the wiki, at:
> http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
>
> However, something like:
>
> testCommandSuffix returns [String text]
> 	:
> 		ACTION {$text = $ACTION.text;}
> 	;
>
> generates errors reported in the console reading:
>
> [15:55:48] error(151): C:\temp\TestGrammar.g:111:10: cannot write  
> to read only attribute: $text.
> [15:55:49] error(10):  internal error:  
> org.antlr.tool.Message.toString(Message.java:124): Assertion  
> failed! Message ID 151 created but is not present in errorMsgIDs or  
> warningMsgIDs.
>
> Have I made an error here, if so, how can I fix it?  Otherwise, how  
> does one specify a
> synthetic attribute in ANTLR?
>
> I have also noticed that in ANTLRworks 1.0b8, when trying to  
> generate grammars, sometimes if I get
> an error, I will get a popup window reading:
> "Grammar Check failed:
>  null
>  Check Console for more Information"
>
> and if I try to edit the grammar or regenerate it, the console  
> window does not get any new
> diagnostic messages routed to it.  Does anyone else get this?
>
> Thanks:
>
> Bill M.
>
> _________________________________________________________________
> Visit MSN Holiday Challenge for your chance to win up to $50,000 in  
> Holiday cash from MSN today!  http://www.msnholidaychallenge.com/ 
> index.aspx?ocid=tagline&locale=en-us
>


From woods.kirk at gmail.com  Tue Dec 12 13:28:05 2006
From: woods.kirk at gmail.com (Kirk Woods)
Date: Tue, 12 Dec 2006 15:28:05 -0600
Subject: [antlr-interest] How to use String Attributes in ANTLR3
In-Reply-To: <BAY107-F34F1DEC0B1F5009121A97CC0D70@phx.gbl>
References: <BAY107-F34F1DEC0B1F5009121A97CC0D70@phx.gbl>
Message-ID: <ae0488d00612121328s36d41a2bq4cac21d490b89734@mail.gmail.com>

I am very new to this, so I will start with what I know and then move on to
my guesses.  For AntlrWorks, I have found that I have to save, check
grammar, and then generate code (Ctrl-S, Ctrl-R, Ctrl-F10).
As for the $text problem, try changing your returns attribute from text to
txt and see if that makes a difference.

On 12/12/06, Foolish Ewe <foolishewe at hotmail.com> wrote:
>
> Hello All:
>
> I'm trying to add backend support to my grammar and for my convenience,  I
> would like to have
> Java Strings "synthetic attributes" passed from the bottom up in the
> grammar
> (so that I can
> access them in non terminal productions).  I tried following the approach
> that appears to
> be suggested in the expression evaluator in the wiki, at:
> http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator
>
> However, something like:
>
> testCommandSuffix returns [String text]
>         :
>                 ACTION {$text = $ACTION.text;}
>         ;
>
> generates errors reported in the console reading:
>
> [15:55:48] error(151): C:\temp\TestGrammar.g:111:10: cannot write to read
> only attribute: $text.
> [15:55:49] error(10):  internal error:
> org.antlr.tool.Message.toString(Message.java:124): Assertion failed!
> Message
> ID 151 created but is not present in errorMsgIDs or warningMsgIDs.
>
> Have I made an error here, if so, how can I fix it?  Otherwise, how does
> one
> specify a
> synthetic attribute in ANTLR?
>
> I have also noticed that in ANTLRworks 1.0b8, when trying to generate
> grammars, sometimes if I get
> an error, I will get a popup window reading:
> "Grammar Check failed:
>   null
>   Check Console for more Information"
>
> and if I try to edit the grammar or regenerate it, the console window does
> not get any new
> diagnostic messages routed to it.  Does anyone else get this?
>
> Thanks:
>
> Bill M.
>
> _________________________________________________________________
> Visit MSN Holiday Challenge for your chance to win up to $50,000 in
> Holiday
> cash from MSN today!
> http://www.msnholidaychallenge.com/index.aspx?ocid=tagline&locale=en-us
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061212/90ae0217/attachment.html 

From parrt at cs.usfca.edu  Tue Dec 12 16:11:50 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 12 Dec 2006 16:11:50 -0800
Subject: [antlr-interest] Rewinding the token stream between templates
In-Reply-To: <ae0488d00612121315me3451ch807ea731da4ca26d@mail.gmail.com>
References: <ae0488d00612121315me3451ch807ea731da4ca26d@mail.gmail.com>
Message-ID: <DAC3638D-FB3B-4DDD-8891-E98579D7ACA8@cs.usfca.edu>


On Dec 12, 2006, at 1:15 PM, Kirk Woods wrote:

> I am in the process of creating a tool, with ANTLR 3.0b5 and  
> StringTemplate 3.0, which at this point has two template files and  
> will most likely have four in the future.  After parsing with the  
> first template group, I must rewind the token stream in order to  
> parse with the next template group.
>
>         parser.setTemplateLib(Main.createTemplates);
>         RuleReturnScope ruleScope = parser.program();
>         System.out.println(ruleScope.getTemplate().toString());
>
>         parser.getTokenStream().rewind(0);
>         parser.setTemplateLib(Main.alterTemplates);
>         ruleScope = parser.program();
>         System.out.println(ruleScope.getTemplate().toString());
>
> While I can do this by calling " parser.getTokenStream().rewind 
> (0)", this creates a dependency on knowledge of the internal  
> implementation of the parser.  I would like to suggest that the  
> implementation of the setTemplateLib method be modified to rewind  
> the token stream ( e.g. super.input.rewind(-1)).  Is there a valid  
> use case where one would not want the token stream reset whenever  
> the setTemplateLib method is called?

Hmm...possibly...might set it to default and then within option alter  
it. I would like to separate this functionality.

First, you want seek() not rewind(0)...that arg is a marker not an  
index.  I think that I wanted to use reset, but I know the following  
comment:

	/** reset the parser's state */
	public void reset() {
		// TODO: implement this!
		//following.setSize(0);
	}

[snicker].

  the following does not seem odious to me:

parser.getTokenStream().seek(0);

what do other people think?  I think reset() is better because the  
parser might want to reset error flags and so on.  Ok, I just built  
it BaseRecognizer.reset:

	/** reset the parser's state; subclasses must rewinds the input  
stream */
	public void reset() {
		// wack everything related to error recovery
		_fsp = -1;
		errorRecovery = false;
		lastErrorIndex = -1;
		failed = false;
		// wack everything related to backtracking and memoization
		backtracking = 0;
		for (int i = 0; ruleMemo!=null && i < ruleMemo.length; i++) { //  
wipe cache
			ruleMemo[i] = null;
		}
	}

Then in parser.reset

	public void reset() {
		super.reset(); // reset all recognizer state variables
		if ( input!=null ) {
			input.seek(0); // rewind the input
		}
	}

I'm pushing to the depot, so you should be able to get it from the  
repository browser within a few minutes if you don't want to cut and  
paste.

> p.s. These are great tools.  I have only been using these for two  
> weeks and the amount of code I am now able to generate is tremendous.

Thanks!

Ter


From dmitry.goldenberg at weblayers.com  Tue Dec 12 16:45:20 2006
From: dmitry.goldenberg at weblayers.com (Dmitry Goldenberg)
Date: Tue, 12 Dec 2006 16:45:20 -0800
Subject: [antlr-interest] Problem using CSharpParser.g
Message-ID: <5CCB14CB6DCFB147A4D09CC90808B0F30D6F45@ehost011-3.exch011.intermedia.net>

Micheal,
I was trying to use CSharpParser.g from csharp_v1 in Antlr 2.7.6.  
 
It has the following line:
importVocab = CSharpLexer;

I believe the exception was raised by this code in ImportVocabTokenManager, instantiated by DefineGrammarSymbols

        if (!grammarFile.exists()) {
            grammarFile = new File(antlrTool.getOutputDirectory(), filename);

            if (!grammarFile.exists()) {
                antlrTool.panic("Cannot find importVocab file '" + filename + "'");
            }
        }

The import vocab token manager is instantiated like this:

            ImportVocabTokenManager tm =
                new ImportVocabTokenManager(grammar,
                                            grammar.importVocab + CodeGenerator.TokenTypesFileSuffix + CodeGenerator.TokenTypesFileExt,
                                            grammar.exportVocab,
                                            tool);

I believe it's that string concatenation that generates "CSharpLexerTokenTypes.txt" and this file is not available.  Any thoughts?

Thanks,

- Dmitry

-----------------------
 
Where did you get the CSharpParser.g grammar file you are using?

If you are talking about CSharpParser.g from our grammar contribution (named
KCSParse or csharp_v1) then, you should know that we provided a
self-contained distribution that builds all the grammars in the right order.
You will need Nant to build. Incidentally, although KCSParse is still
available from the website, it has been superceeded by csharp_v1 (which is
included as a sample with ANTLR 2.7.6 and 2.7.7).

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org <http://www.antlr.org/mailman/listinfo/antlr-interest> 
[mailto:antlr-interest-bounces at antlr.org <http://www.antlr.org/mailman/listinfo/antlr-interest> ] On Behalf Of Dmitry Goldenberg
Sent: 11 December 2006 21:21
To: antlr-interest at antlr.org <http://www.antlr.org/mailman/listinfo/antlr-interest> 
Subject: [antlr-interest] Problem using CSharpParser.g


I'm trying to use Antlr 2.6.7 with the CSharpParser.g grammar.

java antlr.Tool CSharpParser.g yields the following:
ANTLR Parser Generator   Version 2.7.6 (2005-12-22)   1989-2005
panic: Cannot find importVocab file 'CSharpLexerTokenTypes.txt'

Does anyone have any idea how to fix this?
Thanks,
- Dmitry

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061212/7594c26b/attachment-0001.html 

From jarrod at vertigrated.com  Tue Dec 12 17:49:25 2006
From: jarrod at vertigrated.com (jarrod roberson)
Date: Tue, 12 Dec 2006 20:49:25 -0500
Subject: [antlr-interest] can anyone give me a working example of parsing
	binary data with ANTLR v3?
Message-ID: <2389d4730612121749r2ba8e6falc749ec1fdfe31607@mail.gmail.com>

like basic unsigned int and character patterns?

I have a header file I am parsing with the Python struct module, and
want to migrate it to ANTLR so I can generate code in other languages
as well.

it is a 4 character magic number, then a few unsigned ints, and some
more fixed length characters.

I found a basic example for 2.x but wanted to try and use 3.x since it
is the new hottness and all.

-- 
If you don't know what you want, you probably need a nap.

From karpdantax at yahoo.com.br  Tue Dec 12 23:03:13 2006
From: karpdantax at yahoo.com.br (Karp Dantax)
Date: Wed, 13 Dec 2006 05:03:13 -0200
Subject: [antlr-interest] Stop parsing in 2.7.7
Message-ID: <003801c71e84$c3551d40$2101a8c0@bedeschi>

How can i stop parsing the AST in Antlr 2.7.7? Is throwing an exception the only way?

[]s,
Adriano Bedeschi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061213/06dee71c/attachment.html 

From avereha at gmail.com  Tue Dec 12 23:54:59 2006
From: avereha at gmail.com (Andrei Vereha)
Date: Wed, 13 Dec 2006 07:54:59 +0000
Subject: [antlr-interest] Catch all rule/Warnings
Message-ID: <efa9402d0612122354g50d53781p8eaa7498c87911a7@mail.gmail.com>

I have a question about warnings.

I took the "HTML Indexer" from Gramar list section. When I generate the
source with antlr, I get 3 warnings. Is a way to avoid these warnings?

I have have a similar problem to solve:  I need to look for a lot of
"custom" tags in a html file + the html content(I can't ignore the HTML
content !). If I use this aproach, I will get  more and more warnings. This
is the only solution?

In a simple case, (a JSP file), where I need to recognize just the "<%" and
"%>" tag, TEXT_BETWEEN_TAGS and TEXT(text outside tags), I made a gramar
without warnings, by writing a catch all rule like this:

JSPSTART:"<%" {this.in_jsp=true };
JSPEND:"%>" {this.in_jsp=false };

TEXT options{testLiterals=true} : (~( '<' |  '>' | '%'))+
{
 if(this.in_jsp) $setType(TEXT_BETWEEN_TAGS);
};

In a more complex case, where I need to regonize : <TAG1>, <TAG2>, the TEXT
rule will be imposible to write.

Do you have any suggestions?

Thank you,
 Andrei
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061213/c3c5593c/attachment.html 

From avereha at gmail.com  Wed Dec 13 01:36:21 2006
From: avereha at gmail.com (Andrei Vereha)
Date: Wed, 13 Dec 2006 09:36:21 +0000
Subject: [antlr-interest] Catch all rule and warnings
Message-ID: <efa9402d0612130136k1c71f1d8l2b5d3a050ef5bb6f@mail.gmail.com>

I have a question about warnings.

I took the "HTML Indexer" from Gramar list section. When I generate
the source with antlr, I get 3 warnings. Is a way to avoid these
warnings?

I have have a similar problem to solve:  I need to look for a lot of
"custom" tags in a html file + the html content(I can't ignore the
HTML content !). If I use this aproach, I will get  more and more
warnings. This is the only solution?

In a simple case, (a JSP file), where I need to recognize just the
"<%" and "%>" tag, TEXT_BETWEEN_TAGS and TEXT(text outside tags), I
made a gramar without warnings, by writing a catch all rule like this:

JSPSTART:"<%" {this.in_jsp=true };
JSPEND:"%>" {this.in_jsp=false };

TEXT options{testLiterals=true} : (~( '<' |  '>' | '%'))+
{
 if(this.in_jsp) $setType(TEXT_BETWEEN_TAGS);
};

In a more complex case, where I need to regonize : <TAG1>, <TAG2>, the
TEXT rule will be imposible to write.

Do you have any suggestions?

Thank you,
 Andrei

From matt at ebi.ac.uk  Wed Dec 13 03:03:29 2006
From: matt at ebi.ac.uk (Matt Harrison)
Date: Wed, 13 Dec 2006 11:03:29 +0000
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
 single character input
In-Reply-To: <3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
References: <457EE287.3020801@ebi.ac.uk>
	<3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
Message-ID: <457FDE01.2060703@ebi.ac.uk>


Unfortunately, it doesn't. For some bizarre reason, ('a'..'z')+ 
stubbornly refuses to match any single alphabetic character, regardless 
of context; that is, I can call the rule 'substituent' below directly 
with a single character of input and it doesn't match, nor will it match 
if a single character 'substituent' occurs in the middle of a token stream.

Perhaps a bug in ANTLR? Surely this has got to be due to something else 
I am missing due to my inexperience with ANLTR, but I can't for the life 
of me discern what.

cheers,
Matt Harrison

ps: "identifiers" for my particular parsing problem are only lower-case, 
and indeed, allowing upper-case ids introduces non-determinism with all 
of the constant upper-case keywords defined elsewhere in the lexer.

Vinay Veeramachaneni wrote:
> Hi,
>  
> Your grammar seems to be fine. You must consider to include the 
> uppercase letters as identifiers too.
>  
> IDENTIFIER   options { paraphrase="a residue name/identifier"; }
>
>        :     ('a'..'z' | 'A'..'Z')+ ;
>
> This must solve the problem.
>  
> Regards,
> Vinay
>
>  
> On 12/12/06, *Matt Harrison* <matt at ebi.ac.uk <mailto:matt at ebi.ac.uk>> 
> wrote:
>
>     Salute, fellow antlers.
>
>     I'm a recent convert to the world of language recognition/parsing
>     using
>     ANTLR, although I have used Perl /python for "simple" parsing
>     tasks for
>     many many man-months.
>
>     I am having trouble diagnosing why the (common) lexer expression
>     "('a'..'z')+" is not matching any single character input (eg: "n")
>     in my
>     grammar. Is there any situations under which this expression
>     should not
>     match a single character in the range 'a' - 'z'?
>
>     Thanks for your time.
>     Matt
>
>     ~~~
>     The offending parser rule is as following:
>
>     substituent
>
>            :   IDENTIFIER
>
>                (HYPHEN IDENTIFIER)*
>
>            ;
>
>
>     The lexer is pretty basic:
>
>     class FooBarLexer extends Lexer;
>
>     options {
>
>        k=3;        /*  lookahead  */
>
>     }
>
>     //~~~~~~~~~~~~~~~~~~~~  token separators &
>     delimiters  ~~~~~~~~~~~~~~~~~~~~~~//
>
>
>
>     COLON
>
>            options { paraphrase="a colon separator"; }
>
>            :   ':'
>
>            ;
>
>
>
>     COMMA
>
>            options { paraphrase="a comma"; }
>
>            :     ','
>
>            ;
>
>     HYPHEN
>
>            options { paraphrase="an internal linkage delimiter '-'"; }
>
>            :     '-'
>
>            ;
>
>     PIPE
>
>            options { paraphrase="a residue substitution delimiter"; }
>
>            :     '|'
>
>            ;
>
>     SEMICOLON
>
>            options { paraphrase="a residue/linkage token separator"; }
>
>            :   ';'
>
>            ;
>
>
>
>     LPARENTHESIS
>
>            options { paraphrase="a linkage delimiter"; }
>
>            :   '('
>
>            ;
>
>
>
>     RPARENTHESIS
>
>            options { paraphrase="a linkage delimiter"; }
>
>            :   ')'
>
>            ;
>
>
>     //~~~~~~~~~~~~~~~~~~~~~~~~~~~ identifiers
>     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
>
>     INTEGER
>
>            options { paraphrase="a positive integer or zero"; }
>
>            :     ('1'..'9')  ('0'..'9')*
>
>            |   '0'
>
>            ;
>
>
>
>     IDENTIFIER
>
>            options { paraphrase="a residue name/identifier"; }
>
>            :     ('a'..'z')+
>
>            ;
>
>     //~~~~~~~~~~~~~~~~~~~~~~~  section type
>     identifiers  ~~~~~~~~~~~~~~~~~~~~~~~~//
>
>     RES
>
>            options { paraphrase="a RES (residue) section start
>     identifier"; }
>
>            :   "RES"
>
>            ;
>
>
>
>     LIN
>
>            options { paraphrase="a LIN (linkage) section start
>     identifier"; }
>
>            :   "LIN"
>
>            ;
>
>
>
>     PRO
>
>            options { paraphrase="a PRO (heterogeneity due to
>     uncertainty) section start identifier"; }
>
>            :   "PRO"
>
>            ;
>
>
>
>     REP
>
>            options { paraphrase="a REP (repeat) section start
>     identifier"; }
>
>            :   "REP"
>
>            ;
>
>
>
>     STA
>
>            options { paraphrase="a STA (heterogeneity due to a
>     statistical distribution) section start identifier"; }
>
>            :   "STA"
>
>            ;
>
>
>
>     ISO
>
>            options { paraphrase="an ISO (isotope) section start
>     identifier"; }
>
>            :   "ISO"
>
>            ;
>
>
>
>     AGL
>
>            options { paraphrase="an AGL (aglycon) section start
>     identifier"; }
>
>            :   "AGL"
>
>            ;
>
>
>
>     CR
>
>            : ( '\r' '\n' )
>
>            | '\n'                                  {   newline();
>     $setType( Token.SKIP );  }
>
>            ;
>
>
>
>     WS
>
>            : (' '| '\t' )                          {   $setType(
>     Token.SKIP );  }
>
>            ;
>
>
>
>
>     --
>     Dr Matt Harrison
>     BTech (Biotech) Hons PhD
>     Glycobiology Bioinformatician
>     European Bioinformatics Institute UK
>     http://www.ebi.ac.uk <http://www.ebi.ac.uk>   +44 (0)1223 492533
>
>

From VAUCHER at fermat.eu  Wed Dec 13 03:28:32 2006
From: VAUCHER at fermat.eu (VAUCHER Laurent)
Date: Wed, 13 Dec 2006 12:28:32 +0100
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
	single character input
Message-ID: <20061213122904.SM08184@037f27dd816a40c>

 
Didn't you include a charVocabulary in lexer options that would throw
away characters above 96?

Or an option caseSensitive=false or caseSensitiveLiterals=false?

By the way, what version of ANTLR are you using? 2.7 or 3?


Laurent.



From dave at badgers-in-foil.co.uk  Wed Dec 13 05:22:36 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Wed, 13 Dec 2006 13:22:36 +0000
Subject: [antlr-interest] Catch all rule and warnings
In-Reply-To: <efa9402d0612130136k1c71f1d8l2b5d3a050ef5bb6f@mail.gmail.com>
References: <efa9402d0612130136k1c71f1d8l2b5d3a050ef5bb6f@mail.gmail.com>
Message-ID: <20061213132235.GA6713@badgers-in-foil.co.uk>

On Wed, Dec 13, 2006 at 09:36:21AM +0000, Andrei Vereha wrote:
> I have a question about warnings.
> 
> I took the "HTML Indexer" from Gramar list section. When I generate
> the source with antlr, I get 3 warnings. Is a way to avoid these
> warnings?
> 
> I have have a similar problem to solve:  I need to look for a lot of
> "custom" tags in a html file + the html content(I can't ignore the
> HTML content !). If I use this aproach, I will get  more and more
> warnings. This is the only solution?
> 
> In a simple case, (a JSP file), where I need to recognize just the
> "<%" and "%>" tag, TEXT_BETWEEN_TAGS and TEXT(text outside tags), I
> made a gramar without warnings, by writing a catch all rule like this:
> 
> JSPSTART:"<%" {this.in_jsp=true };
> JSPEND:"%>" {this.in_jsp=false };
> 
> TEXT options{testLiterals=true} : (~( '<' |  '>' | '%'))+
> {
> if(this.in_jsp) $setType(TEXT_BETWEEN_TAGS);
> };
> 
> In a more complex case, where I need to regonize : <TAG1>, <TAG2>, the
> TEXT rule will be imposible to write.

Do you really need to recognise these in the lexer?  I mean, does the
parse need to proceed differently depending on the name of the tag?

If you just need to run different actions based on the tag name, then I
would suggest having a generic TAG_NAME token and testing its contents
in the action (indeed, this might even allow you to add support for new
tag names at runtime without needing to change the grammar).

Also, note that simple approach your looking at will not handle
complex input like,

  <%  out.print("%>");  %>

But hey, maybe that's fine :)


For an example of another XML-like language (which also currently fails to
handle complex input equivalent to the example above), see here,

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/antlr/uk/co/badgersinfoil/metaas/impl/parser/e4x/E4X.g

NB  This is an ANTLR 3 grammar.


ta,
dave

-- 
http://david.holroyd.me.uk/

From rhill03 at eds.com  Wed Dec 13 05:31:56 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Wed, 13 Dec 2006 13:31:56 -0000
Subject: [antlr-interest] Catch all rule and warnings
In-Reply-To: <efa9402d0612130136k1c71f1d8l2b5d3a050ef5bb6f@mail.gmail.com>
Message-ID: <2E909902FD3A03419E3A905908AE3DD402B4589F@UKNSM201.emea.corp.eds.com>

Maybe this is another case for an island grammer?

I believe Ter put an example somewhere in the Antlr Distribution.

Regards, 

Rob

Robert Hill
Information Engineer
Agile Alliance Member
UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St, Sheffield. S11
8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

 

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andrei Vereha
>Sent: 13 December 2006 09:36
>To: antlr-interest at antlr.org
>Subject: [antlr-interest] Catch all rule and warnings
>
>I have a question about warnings.
>
>I took the "HTML Indexer" from Gramar list section. When I 
>generate the source with antlr, I get 3 warnings. Is a way to 
>avoid these warnings?
>
>I have have a similar problem to solve:  I need to look for a 
>lot of "custom" tags in a html file + the html content(I can't 
>ignore the HTML content !). If I use this aproach, I will get  
>more and more warnings. This is the only solution?
>
>In a simple case, (a JSP file), where I need to recognize just 
>the "<%" and "%>" tag, TEXT_BETWEEN_TAGS and TEXT(text outside 
>tags), I made a gramar without warnings, by writing a catch 
>all rule like this:
>
>JSPSTART:"<%" {this.in_jsp=true };
>JSPEND:"%>" {this.in_jsp=false };
>
>TEXT options{testLiterals=true} : (~( '<' |  '>' | '%'))+ {
> if(this.in_jsp) $setType(TEXT_BETWEEN_TAGS); };
>
>In a more complex case, where I need to regonize : <TAG1>, 
><TAG2>, the TEXT rule will be imposible to write.
>
>Do you have any suggestions?
>
>Thank you,
> Andrei
>

From prm225 at gmail.com  Wed Dec 13 06:46:50 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Wed, 13 Dec 2006 09:46:50 -0500
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
	single character input
In-Reply-To: <20061213122904.SM08184@037f27dd816a40c>
References: <20061213122904.SM08184@037f27dd816a40c>
Message-ID: <81ce7cdb0612130646i280a0fc8y20b68589545a47c1@mail.gmail.com>

Hi,
I just tried the following in antlr3:

grammar foo;
substituent
       :   IDENTIFIER(HYPHEN IDENTIFIER)*
       ;
HYPHEN
       :     '-'
       ;
IDENTIFIER
       :     ('a'..'z')+
       ;


As expected, it matches everything defined under ('a'..'z')+ . Nothing
wrong with that part of the grammar. Maybe some other non-terminal
leading upto substituent?

I'd suggest using Antlrworks (http://www.antlr.org/works/index.html)
to help you identify the problem areas in the grammar. Wonderful tool!
Good luck.



On 12/13/06, VAUCHER Laurent <VAUCHER at fermat.eu> wrote:
>
> Didn't you include a charVocabulary in lexer options that would throw
> away characters above 96?
>
> Or an option caseSensitive=false or caseSensitiveLiterals=false?
>
> By the way, what version of ANTLR are you using? 2.7 or 3?
>
>
> Laurent.
>
>
>

From jbb at acm.org  Wed Dec 13 07:09:03 2006
From: jbb at acm.org (John B. Brodie)
Date: Wed, 13 Dec 2006 10:09:03 -0500
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
 single character input
In-Reply-To: <457FDE01.2060703@ebi.ac.uk> (message from Matt Harrison on Wed, 
	13 Dec 2006 11:03:29 +0000)
References: <457EE287.3020801@ebi.ac.uk>
	<3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
	<457FDE01.2060703@ebi.ac.uk>
Message-ID: <E1GuVjD-0007Fi-00@gecko>

Greetings!

On Wed, 13 Dec 2006 11:03:29, Matt Harrison wrote (in part):
>Unfortunately, it doesn't. For some bizarre reason, ('a'..'z')+ 
>stubbornly refuses to match any single alphabetic character, regardless 
>of context; that is, I can call the rule 'substituent' below directly 
>with a single character of input and it doesn't match, nor will it match 
>if a single character 'substituent' occurs in the middle of a token stream.
>
>Perhaps a bug in ANTLR? Surely this has got to be due to something else 
>I am missing due to my inexperience with ANLTR, but I can't for the life 
>of me discern what.
>
>.....snipped.....

Your lexer works just fine for me for IDENTIFIER's.

I am using ANTLR 2.7.7.

I will attach my versions of the Main.java and the parser at the end
of this message.

I did change your lexer rule for CR from:
>CR
>       : ( '\r' '\n' )
>       | '\n'         {   newline(); $setType( Token.SKIP );  }
>       ;

to be:

CR : ( ( '\r' ('\n')? ) | '\n' ) { newline(); $setType( Token.SKIP ); } ;

observe that in your version of the rule the action binds to only the
second alternative. Thus if a '\r' is encountered it is not SKIP'ed.

Could this be your problem?

Hope this helps...
   -jbb


//.....begin FooBarParser fragment.....

class FooBarParser extends Parser;

program : substituent EOF;
substituent : IDENTIFIER (HYPHEN IDENTIFIER)* ;

//.....end FooBarParser fragment.....

//.....begin Main.java.....

import java.io.*;
import java.util.*;

import antlr.*;

class Main {
   private static final String [] x =
      new String[]{
         "n", "nn", "nnn",
         "n-n", "nn-n", "n-nnn",
         "N", "nN", "Nn", // these should be errors
         "PRO" // prove we can recognize at least one keyword
      };

   public static void main(String[] args) {

      for (int i=0; i < x.length; ++i) {
         System.out.format("%nabout to process:%s%n",x[i]);

         try {
            
            FooBarLexer lexer = new FooBarLexer(new StringReader(x[i]));
            FooBarParser parser = new FooBarParser(lexer);
            parser.program();

         } catch(Exception e) {
            System.err.format("%s%n", e);
            //e.printStackTrace();
         }
      }
   }
}

//.....end Main.java.....

From chantal.ackermann at web.de  Wed Dec 13 07:54:26 2006
From: chantal.ackermann at web.de (Chantal Ackermann)
Date: Wed, 13 Dec 2006 16:54:26 +0100
Subject: [antlr-interest] Unexpected Token dearly expected...
Message-ID: <1218503728@web.de>

Hi to all!

I am using ANTLR to parse some "natural" German language input. It is meant as the part of a language processing engine that does the semantic parsing of the language input.

As the language input determines which domain is meant and which filter/action is to apply to this domain's data, I went for several small parsers:
1. one "DomainParser" which extracts the domain information from the input.
    This works quite well. It's straight forward, and ignores everything except the keywords that specify the domain.
2. several "Filter*Parser" which extract any additional information applying to their specific domain.
    So there is a FilterCalendarParser, e.g., which should understand input of the kind "today's dates" (well, at least in German).

I do have some problems, though, and so I'm asking you for advice. Thanks a lot for any help or input on that matter!

1. Problem:
Input like "meine heutigen termine" works but I get a NoViableAltException for "termine die n?chsten 2 stunden"

2006-12-13 16:22:01,742 DEBUG [VuiController] Normalized: termine die naechsten 2 stunden
2006-12-13 16:22:01,743 DEBUG [DomainParser] Extracting domain...
Domain: calendarMenu
2006-12-13 16:22:01,745 DEBUG [SpeechParser] Extracting calendar fields...
line 1:32: unexpected token: null
	at de.infoman.voice.parser.FilterCalendarParser.extractFields(FilterCalendarParser.java:94)

After testing around with inputs like "termine 2" where the filter information would consist of just a DIGIT token, I am at a loss. A lexer token

DIGIT: (0..9);

works well, and is accepted by the parser. But a more complex token that contains DIGIT and some other string:

STUNDEN_ANGABE
	:	DIGIT " Stunden"
	;

isn't recognized at all. In that case, I get the above unexpected token exception (NoViableAltException). At the end of this mail, I'll paste the FilterCalendarParser.g file. I'd gladely appreciate if one of you experts could have a look at it and point my nose on the mistake.

2. Question:
How do I handle the case when there really is no input of the expected kind? Say, there actually wasn't any domain information in the input. What is the best way to go about that? Do I just catch the exception or do I specify a custom errorhandler?

Kind regards,
Chantal


************************************************
header
{
	package de.infoman.voice.parser;
	
	import java.util.Map;
	import java.util.HashMap;
	import de.infoman.voice.parser.FieldNameConstants;
	import de.infoman.voice.parser.ControlConstants;
	import de.infoman.ThemeConstants;
	import org.apache.log4j.Logger;
}

/******************** PARSER **************************/

class FilterCalendarParser extends Parser;

options
{
	defaultErrorHandler = false;
}

{
	private static final Logger log= Logger.getLogger(FilterCalendarParser.class);
}
	
extractFields [Map container]
returns [Map map]
{
	log.debug("Extracting calendar fields...");
	map = container;
}
	:	HEUTE
			{
				map.put(FieldNameConstants.SELECTION, ControlConstants.TODAY);
			}
	|	TAG
			{
				map.put(FieldNameConstants.SELECTION, ControlConstants.TODAY_DAY);
			}
	|	STUNDEN_ANGABE
			{
//				System.out.println("Stunden angegeben: " + h);
				map.put(FieldNameConstants.SELECTION, ControlConstants.HOURS_FUTURE);
//				map.put(FieldNameConstants.NUMBER, h);
			}
	;
			

/******************** LEXER **************************/

class FilterCalendarLexer extends Lexer;

options
{
	//charVocabulary = '\3'..'\377';
	//defaultErrorHandler = false;
	k=3;
	filter=true;
	//caseSensitive=false;
}

STUNDEN_ANGABE
	:	DIGIT " Stunden"
	;
	

TAG
	:	"tagsueber"
	;

HEUTE
	:	"heut" ('e' | "ige")
	;

protected DIGIT
	:	('0'..'9')
	;
______________________________________________________________________________
"Ein Herz f?r Kinder" - Ihre Spende hilft! Aktion: www.deutschlandsegelt.de
Unser Dankesch?n: Ihr Name auf dem Segel der 1. deutschen America's Cup-Yacht!


From parrt at cs.usfca.edu  Wed Dec 13 08:09:38 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Dec 2006 08:09:38 -0800
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
	single character input
In-Reply-To: <457FDE01.2060703@ebi.ac.uk>
References: <457EE287.3020801@ebi.ac.uk>
	<3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
	<457FDE01.2060703@ebi.ac.uk>
Message-ID: <F28FB634-6952-4703-B101-1655A1CB9E0A@cs.usfca.edu>

Hi.  What is the error message?  Note you'll need to have A..Z in  
IDENTIFIER if it is to match the keywords (upper case you have).

Ter
On Dec 13, 2006, at 3:03 AM, Matt Harrison wrote:

>
> Unfortunately, it doesn't. For some bizarre reason, ('a'..'z')+  
> stubbornly refuses to match any single alphabetic character,  
> regardless of context; that is, I can call the rule 'substituent'  
> below directly with a single character of input and it doesn't  
> match, nor will it match if a single character 'substituent' occurs  
> in the middle of a token stream.
>
> Perhaps a bug in ANTLR? Surely this has got to be due to something  
> else I am missing due to my inexperience with ANLTR, but I can't  
> for the life of me discern what.
>
> cheers,
> Matt Harrison
>
> ps: "identifiers" for my particular parsing problem are only lower- 
> case, and indeed, allowing upper-case ids introduces non- 
> determinism with all of the constant upper-case keywords defined  
> elsewhere in the lexer.
>
> Vinay Veeramachaneni wrote:
>> Hi,
>>  Your grammar seems to be fine. You must consider to include the  
>> uppercase letters as identifiers too.
>>  IDENTIFIER   options { paraphrase="a residue name/identifier"; }
>>
>>        :     ('a'..'z' | 'A'..'Z')+ ;
>>
>> This must solve the problem.
>>  Regards,
>> Vinay
>>
>>  On 12/12/06, *Matt Harrison* <matt at ebi.ac.uk  
>> <mailto:matt at ebi.ac.uk>> wrote:
>>
>>     Salute, fellow antlers.
>>
>>     I'm a recent convert to the world of language recognition/parsing
>>     using
>>     ANTLR, although I have used Perl /python for "simple" parsing
>>     tasks for
>>     many many man-months.
>>
>>     I am having trouble diagnosing why the (common) lexer expression
>>     "('a'..'z')+" is not matching any single character input (eg:  
>> "n")
>>     in my
>>     grammar. Is there any situations under which this expression
>>     should not
>>     match a single character in the range 'a' - 'z'?
>>
>>     Thanks for your time.
>>     Matt
>>
>>     ~~~
>>     The offending parser rule is as following:
>>
>>     substituent
>>
>>            :   IDENTIFIER
>>
>>                (HYPHEN IDENTIFIER)*
>>
>>            ;
>>
>>
>>     The lexer is pretty basic:
>>
>>     class FooBarLexer extends Lexer;
>>
>>     options {
>>
>>        k=3;        /*  lookahead  */
>>
>>     }
>>
>>     //~~~~~~~~~~~~~~~~~~~~  token separators &
>>     delimiters  ~~~~~~~~~~~~~~~~~~~~~~//
>>
>>
>>
>>     COLON
>>
>>            options { paraphrase="a colon separator"; }
>>
>>            :   ':'
>>
>>            ;
>>
>>
>>
>>     COMMA
>>
>>            options { paraphrase="a comma"; }
>>
>>            :     ','
>>
>>            ;
>>
>>     HYPHEN
>>
>>            options { paraphrase="an internal linkage delimiter  
>> '-'"; }
>>
>>            :     '-'
>>
>>            ;
>>
>>     PIPE
>>
>>            options { paraphrase="a residue substitution delimiter"; }
>>
>>            :     '|'
>>
>>            ;
>>
>>     SEMICOLON
>>
>>            options { paraphrase="a residue/linkage token  
>> separator"; }
>>
>>            :   ';'
>>
>>            ;
>>
>>
>>
>>     LPARENTHESIS
>>
>>            options { paraphrase="a linkage delimiter"; }
>>
>>            :   '('
>>
>>            ;
>>
>>
>>
>>     RPARENTHESIS
>>
>>            options { paraphrase="a linkage delimiter"; }
>>
>>            :   ')'
>>
>>            ;
>>
>>
>>     //~~~~~~~~~~~~~~~~~~~~~~~~~~~ identifiers
>>     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
>>
>>     INTEGER
>>
>>            options { paraphrase="a positive integer or zero"; }
>>
>>            :     ('1'..'9')  ('0'..'9')*
>>
>>            |   '0'
>>
>>            ;
>>
>>
>>
>>     IDENTIFIER
>>
>>            options { paraphrase="a residue name/identifier"; }
>>
>>            :     ('a'..'z')+
>>
>>            ;
>>
>>     //~~~~~~~~~~~~~~~~~~~~~~~  section type
>>     identifiers  ~~~~~~~~~~~~~~~~~~~~~~~~//
>>
>>     RES
>>
>>            options { paraphrase="a RES (residue) section start
>>     identifier"; }
>>
>>            :   "RES"
>>
>>            ;
>>
>>
>>
>>     LIN
>>
>>            options { paraphrase="a LIN (linkage) section start
>>     identifier"; }
>>
>>            :   "LIN"
>>
>>            ;
>>
>>
>>
>>     PRO
>>
>>            options { paraphrase="a PRO (heterogeneity due to
>>     uncertainty) section start identifier"; }
>>
>>            :   "PRO"
>>
>>            ;
>>
>>
>>
>>     REP
>>
>>            options { paraphrase="a REP (repeat) section start
>>     identifier"; }
>>
>>            :   "REP"
>>
>>            ;
>>
>>
>>
>>     STA
>>
>>            options { paraphrase="a STA (heterogeneity due to a
>>     statistical distribution) section start identifier"; }
>>
>>            :   "STA"
>>
>>            ;
>>
>>
>>
>>     ISO
>>
>>            options { paraphrase="an ISO (isotope) section start
>>     identifier"; }
>>
>>            :   "ISO"
>>
>>            ;
>>
>>
>>
>>     AGL
>>
>>            options { paraphrase="an AGL (aglycon) section start
>>     identifier"; }
>>
>>            :   "AGL"
>>
>>            ;
>>
>>
>>
>>     CR
>>
>>            : ( '\r' '\n' )
>>
>>            | '\n'                                  {   newline();
>>     $setType( Token.SKIP );  }
>>
>>            ;
>>
>>
>>
>>     WS
>>
>>            : (' '| '\t' )                          {   $setType(
>>     Token.SKIP );  }
>>
>>            ;
>>
>>
>>
>>
>>     --
>>     Dr Matt Harrison
>>     BTech (Biotech) Hons PhD
>>     Glycobiology Bioinformatician
>>     European Bioinformatics Institute UK
>>     http://www.ebi.ac.uk <http://www.ebi.ac.uk>   +44 (0)1223 492533
>>
>>


From jimi at intersystems.com  Wed Dec 13 08:54:14 2006
From: jimi at intersystems.com (Jim Idle)
Date: Wed, 13 Dec 2006 11:54:14 -0500
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
	single character input
In-Reply-To: <457FDE01.2060703@ebi.ac.uk>
Message-ID: <20061213165416.EBE1A12FD@mail.intersystems.com>

I think that your input text holds the clue here probably. Your CR lexer rule will return a CR token if the end of line is: '\r' '\n' and will skip it if it is just '\n'. If you are running your test on Windows, then your substituent rule will fail immediately if your input text starts with one or more blank lines.

What is the input and what error (if any) are you getting when trying to run the parser?

Jim

-----Original Message-----

>     ~~~
>     The offending parser rule is as following:
>
>     substituent
>
>            :   IDENTIFIER
>
>                (HYPHEN IDENTIFIER)*
>
>            ;
>
>
>     CR
>
>            : ( '\r' '\n' )

This will return token CR...

>
>            | '\n'                                  {   newline();
>     $setType( Token.SKIP );  }

This will skip UNIX style end of line

>
>            ;
>
 

-- 
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.18/584 - Release Date: 12/12/2006 11:17 PM
 

From matt at ebi.ac.uk  Wed Dec 13 09:53:16 2006
From: matt at ebi.ac.uk (Matt Harrison)
Date: Wed, 13 Dec 2006 17:53:16 +0000
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
 single character input
In-Reply-To: <F28FB634-6952-4703-B101-1655A1CB9E0A@cs.usfca.edu>
References: <457EE287.3020801@ebi.ac.uk>
	<3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
	<457FDE01.2060703@ebi.ac.uk>
	<F28FB634-6952-4703-B101-1655A1CB9E0A@cs.usfca.edu>
Message-ID: <45803E0C.8020005@ebi.ac.uk>


Thanks to everyone for the replies.

At risk of permanently offending the entire mailing list, i'll include 
the grammar file in its entirety (since I feel it's far more likely I'm 
missing something than there is a genuine bug in ANTLR).

The input text is a sequence format for carbohydrate structures, some 
samples follow. "Identifiers" in this grammar are always lower-case, and 
adhere to the grammar "('a'-'z')+ ('-' ('a'-'z')+)*".

These sequences parse without problems:

"RES 1b:a-dara-hex-2:5|2:keto;"

"RES 1b:a-dara-hex-1:5|2:d|6:d;"

"RES 1b:a-dglc-hex-1:5;2s:lactone; LIN 1:1d(3-6)2o;"

"RES 1b:a-dgro-dgal-non-2:6|1:a|2:keto|3:d;1s:glycolyl; LIN 1:1o(5-1)2d;


These sequences have ids that contain single chars and fail to  parse. 
I've included the error and a javac-style context marker '^'.

org.eurocarbdb.sugar.seq.SequenceFormatException: expecting a residue name/identifier, found 'n'

RES 1b:a-drib-hex-1:5|3:d;2s:n;3s:n;LIN 1:1d(2-1)2n;2:1d(6-1)3n;

                             ^

org.eurocarbdb.sugar.seq.SequenceFormatException: expecting a residue name/identifier, found 'n'

RES 1b:a-dgal-hex-1:5;2s:n;4s:thiol;LIN 1:1d(3-1)2n;2:1d(4-1)3n;

                         ^

org.eurocarbdb.sugar.seq.SequenceFormatException: expecting a residue name/identifier, found 'n'

RES 1b:a-dgro-dgal-non-2:6|1:a|2:keto|3:d;1s:n-glycolyl;LIN 1:1o(5-1)2d;

                                             ^

org.eurocarbdb.sugar.seq.SequenceFormatException: expecting a residue name/identifier, found 'n'

RES1b:b-dgal-hex-1:5;2s:n-acetyl;3b:a-lgal-hex-1:5|6:d;4b:b-dgal-hex-1:5;LIN1:1d(2-1)2n;2:1o(3-1)3d;3:1o(4-1)4d;

                        ^


The grammar:


/*    glycoct_grammar.g -- a grammar for carbohydrates in IUPAC nomenclature    */


header //  <-- this section appears at the top of the auto-generated parser
{   
package org.eurocarbdb.sugar.seq.grammar; 
}


/*    class GlycoctParser  *//*****************************************************
*<p>
*   This class defines an LLk parser based on ANTLR (http://antlr.org) syntax 
*   rules for parsing carbohydrate sequences in GlycoCT syntax, according 
*   to the syntax rules described (TODO: hassle ppl for a definitive syntax reference link). 
*</p>
*<p>
*   This class' superclass provides the majority of 
*   the semantic action code that is called from within this grammar. This
*   is in order to keep the grammar as clear as possible and to facillitate
*   re-targeting of this grammar to other languages than Java (at time of 
*   writing ANTLR also supports C++, python, C#).
*</p>
*<p>
*   Note that the source code for this class has been auto-generated by ANTLR.
*</p>
*
*   @see GlycoctLexer
*   @see GlycoctParserAdaptor
*   @see ParserAdaptor
*   @see glycoct_grammar.g
*
*    @author mjh [matt at ebi.ac.uk]
*/
class GlycoctParser extends Parser("org.eurocarbdb.sugar.seq.grammar.GlycoctParserAdaptor");

//~~~  ANTLR options  ~~~
options {
    k=2;                         /* lookahead */
    codeGenDebug=false;            /* a debugging setting */
    analyzerDebug=false;        /* a debugging setting */
    defaultErrorHandler=false;  /* needs to be false to propagate exceptions */
}

//~~~ start class init section ~~~  
//  this section is inserted directly into the top of the generated class
//  right after the class declaration. It can contain any valid (Java) code. 
{
    /* empty */
}
//~~~ end class init section ~~~  


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GRAMMAR ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//                                              |                              |
//          grammar-specification               |      actions for grammar     |
//            written in antlr                  |        written in java       |
//                                              |                              |
//                                              |                              |

/**    Toplevel rule defining a sugar sequence.  */
sugar        
        :   res_section        /*  residues  */
            (lin_section)?     /*  linkages  */

//TODO:     (pro_section)?     /*  heterogeneity due to uncertainty  */
//TODO:     (rep_section)?     /*  repeats   */
//TODO: // STA section too incompletely defined grammatically - omitted
//TODO      sta_section        /*  heterogeneity due to statistical distribution, eg GAGs */              
            EOF
        ; 
 
 

//~~~  SECTIONS  ~~~//
        
res_section
        :   RES 
            (residue)+
        ;


lin_section
        :   LIN
            (linkage)+
        ;
           
        
pro_section
        :   PRO
            (linkage)+
        ;
        
        
rep_section
        :   REP
            (sugar)+
        ;
        
//~~~  RES SECTION  ~~~//

/** A numbered residue entry in the 'RES' section. */
residue
        :   INTEGER
            residue_specification
            SEMICOLON
        ;
   
   
/** A residue, which may be either a monosaccharide, a substituent, 
*   or one of the other types specified by GlycoCT (INCHI, freetext)
*/
residue_specification
        :   monosac_specification
        |   substit_specification
        //|   inchi_specification // TODO later
        ;

monosac_specification
        :
            "b"   // for "basetype" 
            COLON
            monosaccharide
        ;

substit_specification
        :
            "s"   // for "substituent"
            COLON
            substituent
        ;

/** A monosaccharide, in GlycoCT format */
monosaccharide
        :   a:anomer                            
            HYPHEN
            monosaccharide_name
            HYPHEN
            c:monosac_superclass
            HYPHEN
            monosac_ring_closure              
            (monosac_modifications)*
        ;


//  stem-type
monosaccharide_name
        :   n:IDENTIFIER                    
            ( 
                HYPHEN 
                x:IDENTIFIER                    {   n.setText( n.getText() + "-" + x.getText() );  } 
            )*                                  {   addResidue( createResidueToken( n ) );  }                                      
        ; 
        
// A substituent (ie: non-monosaccharide) */
substituent
        :   n:IDENTIFIER                        
            (
                HYPHEN 
                x:IDENTIFIER                    {   n.setText( n.getText() + "-" + x.getText() );  }
            )*                                  {   addResidue( createResidueToken( n ) );  }
        ;
         

// Name/type given to the basic monosaccharide sans mods, eg: glc 
monosac_stemtype
        :
            //HYPHEN
            //stereo
            s:IDENTIFIER // have to check for stereo separately here
        ;
        
        
// Ring size/configuration, eg: hex 
monosac_superclass
        :   //IDENTIFIER
            "hex"       // hexose (6)
        |   "pen"       // pentose (5)
        |   "hept"      // heptose (7)
        |   "non"       // nonulose (8)
        ;

monosac_ring_closure
        :
            terminus_position                   
            COLON
            terminus_position                   
        ;
        
terminus_position
        :   
            t:INTEGER                          
        |   u:UNKNOWN                     
        ;
   
monosac_modifications
        :   
            PIPE
            INTEGER 
            ( COMMA INTEGER )? // syntax for alkenes is '|2,3:en' 
            COLON
            monosac_modification
        ;
    
monosac_modification
        :   
        (   "d"         //  deoxygenation  
        |   "keto"      //  a carbonyl group 
        |   "en"        //  double-bond       
        |   "enx"       //  double-bond?   
        |   "a"         //  acidic group    
        |   "aldi"      //  reduced C1 carbonyl
        |   "sp2"       //  outgoing linkage with double bond 
        |   "geminal"   //  2 OH at one backbone carbon 
        )
        ;

monosac_type_identifier
        :   
        (   "b"     //  a base type  
        |   "s"     //  a substituent 
        |   "n"     //  other chemically defined entity (freetext) 
        |   "i"     //  INCHI-encoded non-basetype, non-substituent 
        |   "r"     //  repeating unit 

//  ERROR in the specification: 's' is duplicated
//        |   "s"     //  statistical unit
        )
        ;
    

//~~~  LIN SECTION  ~~~//

linkage                                         {   Token nrtt, rtt;  }
        :
            //  linkage numbering 
            i:INTEGER
            COLON
            
            //  non-reducing residue id 
            nrti:INTEGER
            nrtt=linkage_type_identifier

            //  then the actual linkage             
            LPARENTHESIS
            lnrt:INTEGER
            HYPHEN
            lrt:INTEGER
            RPARENTHESIS
            
            //  then the reducing residue id
            rti:INTEGER
            rtt=linkage_type_identifier

            //  end of linkage
            SEMICOLON                           {   addLinkage( i, nrti, nrtt, lnrt, lrt, rti, rtt );  }
        ;

/* inlined to avoid having to pass tokens 
linkage_specification
        :
            linkage_terminus_specification
            linkage_terminii
            linkage_terminus_specification
        ;

linkage_terminus_specification
        :
            INTEGER
            linkage_type_identifier
        ;

linkage_terminii
        :
            LPARENTHESIS
            INTEGER
            HYPHEN
            INTEGER
            RPARENTHESIS
        ;
*/

linkage_type_identifier returns [Token t]
        :  
        (   "o"     //  loss of H from OH 
        |   "h"     //  loss of H
        |   "d"     //  loss of OH 
        |   "n"     //  linkage to non-monosac/repeat
        |   "r"     //  prochiral H-atom removed, resulting in R-configuration 
        |   "s"     //  prochiral H-atom removed, resulting in S-configuration 
        )                                       {   t = LT(1);  }
        ;    
  
anomer                    
        :   "a"       /*  alpha       */
        |   "b"       /*  beta        */
        |   "o"       /*  open-chain  */
        |   "x"       /*  unknown     */        
        ;
 
stereo
        :
        (   "d"       /*  dextro  */
        |   "l"       /*  levo    */
        |   "x"       /*  unknown */
        )
        ;

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LEXER  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
/**
*
*   This class implements a lexer/scanner for carbohydrate
*   sequences in Glycoct syntax. This class was auto-generated from
*   the ANTLR lexer grammar in glycoct_grammar.g.
*
*   @see GlycoctParser
*   @see glycoct_grammar.g
*
*   @author mjh [matt at ebi.ac.uk]
*/
class GlycoctLexer extends Lexer;

options {
    k=3;        /*  lookahead  */
    testLiterals=true;
}

//~~~~~~~~~~~~~~~~~~~~  token separators & delimiters  ~~~~~~~~~~~~~~~~~~~~~~//
    
COLON
        options { paraphrase="a colon separator ':'"; }
        :   ':'
        ;
     
COMMA                
        options { paraphrase="a comma ','"; }
        :     ','
        ;

HYPHEN            
        options { paraphrase="a hyphen '-'"; }
        :     '-' 
        ;

PIPE                
        options { paraphrase="a residue substitution delimiter '|'"; }
        :     '|'
        ;

SEMICOLON
        options { paraphrase="a residue/linkage token separator ';'"; }
        :   ';'
        ;
        
LPARENTHESIS
        options { paraphrase="a linkage start delimiter '('"; }
        :   '('
        ;
        
RPARENTHESIS
        options { paraphrase="a linkage end delimiter ')'"; }
        :   ')'
        ;
        
        
//~~~~~~~~~~~~~~~~~~~~~~~~~~~ identifiers ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

INTEGER
        options { paraphrase="a positive integer or zero"; }
        :     ('1'..'9')  ('0'..'9')*  
        |   '0'
        ;
        
        
IDENTIFIER                    
        options { paraphrase="a residue name/identifier"; }
        :     ('a'..'z')+ 
        ;


//~~~~~~~~~~~~~~~~~~~~~~~  section type identifiers  ~~~~~~~~~~~~~~~~~~~~~~~~//

RES
        options { paraphrase="a RES (residue) section start identifier"; }
        :   "RES"
        ;
        
LIN     
        options { paraphrase="a LIN (linkage) section start identifier"; }
        :   "LIN" 
        ;
        
PRO     
        options { paraphrase="a PRO (heterogeneity due to uncertainty) section start identifier"; }
        :   "PRO"
        ;
        
REP     
        options { paraphrase="a REP (repeat) section start identifier"; }
        :   "REP"
        ;
        
STA 
        options { paraphrase="a STA (heterogeneity due to a statistical distribution) section start identifier"; }
        :   "STA"
        ;
        
ISO
        options { paraphrase="an ISO (isotope) section start identifier"; }
        :   "ISO"
        ;
        
AGL
        options { paraphrase="an AGL (aglycon) section start identifier"; }
        :   "AGL"
        ;
    
CR
        : (( '\r' '\n' ) | '\n')                {   newline(); $setType( Token.SKIP );  }
        ;
    
WS  
        : (' '| '\t' )                          {   $setType( Token.SKIP );  }
        ;
          



Terence Parr wrote:
> Hi.  What is the error message?  Note you'll need to have A..Z in 
> IDENTIFIER if it is to match the keywords (upper case you have).
>
> Ter
> On Dec 13, 2006, at 3:03 AM, Matt Harrison wrote:
>
>>
>> Unfortunately, it doesn't. For some bizarre reason, ('a'..'z')+ 
>> stubbornly refuses to match any single alphabetic character, 
>> regardless of context; that is, I can call the rule 'substituent' 
>> below directly with a single character of input and it doesn't match, 
>> nor will it match if a single character 'substituent' occurs in the 
>> middle of a token stream.
>>
>> Perhaps a bug in ANTLR? Surely this has got to be due to something 
>> else I am missing due to my inexperience with ANLTR, but I can't for 
>> the life of me discern what.
>>
>> cheers,
>> Matt Harrison
>>
>> ps: "identifiers" for my particular parsing problem are only 
>> lower-case, and indeed, allowing upper-case ids introduces 
>> non-determinism with all of the constant upper-case keywords defined 
>> elsewhere in the lexer.
>>
>> Vinay Veeramachaneni wrote:
>>> Hi,
>>>  Your grammar seems to be fine. You must consider to include the 
>>> uppercase letters as identifiers too.
>>>  IDENTIFIER   options { paraphrase="a residue name/identifier"; }
>>>
>>>        :     ('a'..'z' | 'A'..'Z')+ ;
>>>
>>> This must solve the problem.
>>>  Regards,
>>> Vinay
>>>
>>>  On 12/12/06, *Matt Harrison* <matt at ebi.ac.uk 
>>> <mailto:matt at ebi.ac.uk>> wrote:
>>>
>>>     Salute, fellow antlers.
>>>
>>>     I'm a recent convert to the world of language recognition/parsing
>>>     using
>>>     ANTLR, although I have used Perl /python for "simple" parsing
>>>     tasks for
>>>     many many man-months.
>>>
>>>     I am having trouble diagnosing why the (common) lexer expression
>>>     "('a'..'z')+" is not matching any single character input (eg: "n")
>>>     in my
>>>     grammar. Is there any situations under which this expression
>>>     should not
>>>     match a single character in the range 'a' - 'z'?
>>>
>>>     Thanks for your time.
>>>     Matt
>>>
>>>     ~~~
>>>     The offending parser rule is as following:
>>>
>>>     substituent
>>>
>>>            :   IDENTIFIER
>>>
>>>                (HYPHEN IDENTIFIER)*
>>>
>>>            ;
>>>
>>>
>>>     The lexer is pretty basic:
>>>
>>>     class FooBarLexer extends Lexer;
>>>
>>>     options {
>>>
>>>        k=3;        /*  lookahead  */
>>>
>>>     }
>>>
>>>     //~~~~~~~~~~~~~~~~~~~~  token separators &
>>>     delimiters  ~~~~~~~~~~~~~~~~~~~~~~//
>>>
>>>
>>>
>>>     COLON
>>>
>>>            options { paraphrase="a colon separator"; }
>>>
>>>            :   ':'
>>>
>>>            ;
>>>
>>>
>>>
>>>     COMMA
>>>
>>>            options { paraphrase="a comma"; }
>>>
>>>            :     ','
>>>
>>>            ;
>>>
>>>     HYPHEN
>>>
>>>            options { paraphrase="an internal linkage delimiter '-'"; }
>>>
>>>            :     '-'
>>>
>>>            ;
>>>
>>>     PIPE
>>>
>>>            options { paraphrase="a residue substitution delimiter"; }
>>>
>>>            :     '|'
>>>
>>>            ;
>>>
>>>     SEMICOLON
>>>
>>>            options { paraphrase="a residue/linkage token separator"; }
>>>
>>>            :   ';'
>>>
>>>            ;
>>>
>>>
>>>
>>>     LPARENTHESIS
>>>
>>>            options { paraphrase="a linkage delimiter"; }
>>>
>>>            :   '('
>>>
>>>            ;
>>>
>>>
>>>
>>>     RPARENTHESIS
>>>
>>>            options { paraphrase="a linkage delimiter"; }
>>>
>>>            :   ')'
>>>
>>>            ;
>>>
>>>
>>>     //~~~~~~~~~~~~~~~~~~~~~~~~~~~ identifiers
>>>     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
>>>
>>>     INTEGER
>>>
>>>            options { paraphrase="a positive integer or zero"; }
>>>
>>>            :     ('1'..'9')  ('0'..'9')*
>>>
>>>            |   '0'
>>>
>>>            ;
>>>
>>>
>>>
>>>     IDENTIFIER
>>>
>>>            options { paraphrase="a residue name/identifier"; }
>>>
>>>            :     ('a'..'z')+
>>>
>>>            ;
>>>
>>>     //~~~~~~~~~~~~~~~~~~~~~~~  section type
>>>     identifiers  ~~~~~~~~~~~~~~~~~~~~~~~~//
>>>
>>>     RES
>>>
>>>            options { paraphrase="a RES (residue) section start
>>>     identifier"; }
>>>
>>>            :   "RES"
>>>
>>>            ;
>>>
>>>
>>>
>>>     LIN
>>>
>>>            options { paraphrase="a LIN (linkage) section start
>>>     identifier"; }
>>>
>>>            :   "LIN"
>>>
>>>            ;
>>>
>>>
>>>
>>>     PRO
>>>
>>>            options { paraphrase="a PRO (heterogeneity due to
>>>     uncertainty) section start identifier"; }
>>>
>>>            :   "PRO"
>>>
>>>            ;
>>>
>>>
>>>
>>>     REP
>>>
>>>            options { paraphrase="a REP (repeat) section start
>>>     identifier"; }
>>>
>>>            :   "REP"
>>>
>>>            ;
>>>
>>>
>>>
>>>     STA
>>>
>>>            options { paraphrase="a STA (heterogeneity due to a
>>>     statistical distribution) section start identifier"; }
>>>
>>>            :   "STA"
>>>
>>>            ;
>>>
>>>
>>>
>>>     ISO
>>>
>>>            options { paraphrase="an ISO (isotope) section start
>>>     identifier"; }
>>>
>>>            :   "ISO"
>>>
>>>            ;
>>>
>>>
>>>
>>>     AGL
>>>
>>>            options { paraphrase="an AGL (aglycon) section start
>>>     identifier"; }
>>>
>>>            :   "AGL"
>>>
>>>            ;
>>>
>>>
>>>
>>>     CR
>>>
>>>            : ( '\r' '\n' )
>>>
>>>            | '\n'                                  {   newline();
>>>     $setType( Token.SKIP );  }
>>>
>>>            ;
>>>
>>>
>>>
>>>     WS
>>>
>>>            : (' '| '\t' )                          {   $setType(
>>>     Token.SKIP );  }
>>>
>>>            ;
>>>
>>>
>>>
>>>
>>>     --
>>>     Dr Matt Harrison
>>>     BTech (Biotech) Hons PhD
>>>     Glycobiology Bioinformatician
>>>     European Bioinformatics Institute UK
>>>     http://www.ebi.ac.uk <http://www.ebi.ac.uk>   +44 (0)1223 492533
>>>
>>>

From jbb at acm.org  Wed Dec 13 11:02:10 2006
From: jbb at acm.org (John B. Brodie)
Date: Wed, 13 Dec 2006 14:02:10 -0500
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
 single character input
In-Reply-To: <45803E0C.8020005@ebi.ac.uk> (message from Matt Harrison on Wed, 
	13 Dec 2006 17:53:16 +0000)
References: <457EE287.3020801@ebi.ac.uk>
	<3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
	<457FDE01.2060703@ebi.ac.uk>
	<F28FB634-6952-4703-B101-1655A1CB9E0A@cs.usfca.edu>
	<45803E0C.8020005@ebi.ac.uk>
Message-ID: <E1GuZMo-0001pf-00@gecko>

>Thanks to everyone for the replies.

You are welcome.

>At risk of permanently offending the entire mailing list, i'll include 
>the grammar file in its entirety (since I feel it's far more likely I'm 
>missing something than there is a genuine bug in ANTLR).

No offense taken here, everyone struggles to learn a new tool from
time to time. and I'm certainly no exception to that ;-)

>The input text is a sequence format for carbohydrate structures, some 
>samples follow. "Identifiers" in this grammar are always lower-case, and 
>adhere to the grammar "('a'-'z')+ ('-' ('a'-'z')+)*".
>
>.....examples and grammar snipped.....

You have most of the single lowercase letters specified to be KEYWORDS
of your language.

Take "n", the first error you find, for example. It is a keyword as
specified by the two rules: monosac_type_identifier and
linkage_type_identifier.  and so "n" is NOT an IDENTIFIER.

There should be lots of messages in this mailing list's archives on
how to handle keywords which also may be identifiers...

I suggest you try (re-)generating your parser and lexer and give
antlr.Tool one of the trace enable switches, either -traceLexer or
-traceParser or -trace (i think, my memory of ANTLRv2 switches is
rusty).  and re-run your tests.  you will get copious output showing
what the generated code is attempting to do during the parse.

Hope this helps...
   -jbb

From tomas.vichta at venios.cz  Wed Dec 13 12:45:37 2006
From: tomas.vichta at venios.cz (=?ISO-8859-2?Q?Tom=E1=B9_Vichta?=)
Date: Wed, 13 Dec 2006 21:45:37 +0100
Subject: [antlr-interest]  PHP Grammar
References: cop8f5$hdb$1@sea.gmane.org
Message-ID: <45806671.3090007@venios.cz>

Hello,
is any possibility to get PHP Grammar? (Version 4 or 5, it doesn't 
depends on). I have to make php phraser to my subject at university I'm 
studying. I need only very small part of the grammar, i have to create 
small example project.

Thanx for help,
Tomas Vichta,
CTU Prague, student

From Bernhard.Schmalhofer at gmx.de  Wed Dec 13 13:27:58 2006
From: Bernhard.Schmalhofer at gmx.de (Bernhard Schmalhofer)
Date: Wed, 13 Dec 2006 22:27:58 +0100
Subject: [antlr-interest] PHP Grammar
In-Reply-To: <45806671.3090007@venios.cz>
References: cop8f5$hdb$1@sea.gmane.org <45806671.3090007@venios.cz>
Message-ID: <4580705E.4020803@gmx.de>

Tom?? Vichta schrieb:
> Hello,
> is any possibility to get PHP Grammar? (Version 4 or 5, it doesn't 
> depends on). I have to make php phraser to my subject at university 
> I'm studying. I need only very small part of the grammar, i have to 
> create small example project.
Hi Tom??,

I don't have a PHP grammar, but please tell me when you find or create one.
I'm working on a project called Plumhead, 
http://rakudo.org/parrot/index.cgi?plumhead, where
I want to explore implementation strategies of PHP on Parrot, 
http://www.parrotcode.org.

Ahoi,
  Bernhard



From greenj at ix.netcom.com  Wed Dec 13 14:27:36 2006
From: greenj at ix.netcom.com (John Green)
Date: Wed, 13 Dec 2006 14:27:36 -0800
Subject: [antlr-interest] PHP Grammar
In-Reply-To: <4580705E.4020803@gmx.de>
References: "cop8f5$hdb$1@sea.gmane.org" <45806671.3090007@venios.cz>
	<4580705E.4020803@gmx.de>
Message-ID: <45807E58.5020109@ix.netcom.com>

You might find something useful here:
  http://www.phpcompiler.org/index.html


Bernhard Schmalhofer wrote:
> Tom?? Vichta schrieb:
>> Hello,
>> is any possibility to get PHP Grammar? (Version 4 or 5, it doesn't 
>> depends on). I have to make php phraser to my subject at university 
>> I'm studying. I need only very small part of the grammar, i have to 
>> create small example project.
> Hi Tom??,
> 
> I don't have a PHP grammar, but please tell me when you find or create one.
> I'm working on a project called Plumhead, 
> http://rakudo.org/parrot/index.cgi?plumhead, where
> I want to explore implementation strategies of PHP on Parrot, 
> http://www.parrotcode.org.
> 
> Ahoi,
>  Bernhard
> 
> 
> 



From martin.bravenboer at gmail.com  Wed Dec 13 14:56:07 2006
From: martin.bravenboer at gmail.com (Martin Bravenboer)
Date: Wed, 13 Dec 2006 22:56:07 +0000
Subject: [antlr-interest] PHP Grammar
In-Reply-To: <45807E58.5020109@ix.netcom.com>
References: <45806671.3090007@venios.cz> <4580705E.4020803@gmx.de>
	<45807E58.5020109@ix.netcom.com>
Message-ID: <2074242c0612131456t18c7746am4bb123adaf627b44@mail.gmail.com>

Hi,

> >> is any possibility to get PHP Grammar? (Version 4 or 5, it doesn't
> >> depends on). I have to make php phraser to my subject at university
> >> I'm studying. I need only very small part of the grammar, i have to
> >> create small example project.

> You might find something useful here:
>   http://www.phpcompiler.org/index.html

If you just need a grammar, then I would not suggest to use the one
from phpcompiler.org. They use a YACC grammar that is directly based
on the YACC grammar of the PHP distribution, so you can just as well
use the PHP grammar then. One advantage of the PHP compiler front-end
is that they also support XML output, which might be convenient for
connecting the parser to your tools.

There is also a JavaCC grammar for PHP, which might be easier to start
with if you want to develop a grammar for ANTLR (considering that
JavaCC is LL and YACC is LALR). The JavaCC grammar is however not
complete.

See: http://cobase-www.cs.ucla.edu/pub/javacc/

The reason why I am interested in PHP grammars is that we are
developing a PHP grammar for SDF, which is implemented using a
Generalized-LR parser. The grammar is reasonably feature complete (and
has very cool features for parsing string literals), but is not
completely compatible concerning the precedence of operators (it's a
bit more restrictive than standard PHP). The tools based on this can
output XML as well, but I don't want to push it too much on this ANTLR
list ;)

http://www.program-transformation.org/PHP/PhpFront

Cheers,
-- 
Martin Bravenboer
---------------------------------------------------------------------
Software Engineering Research Group,
Department of Software Technology,
Delft University of Technology.

From antlr at mirality.co.nz  Wed Dec 13 01:05:34 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 13 Dec 2006 22:05:34 +1300
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
 single character input
In-Reply-To: <457EE287.3020801@ebi.ac.uk>
References: <457EE287.3020801@ebi.ac.uk>
Message-ID: <7.0.1.0.0.20061213220132.035963f0@mirality.co.nz>

At 06:10 13/12/2006, Matt Harrison wrote:
 >I am having trouble diagnosing why the (common) lexer expression 

 >"('a'..'z')+" is not matching any single character input (eg: 
"n")
 >in my grammar. Is there any situations under which this 
expression
 >should not match a single character in the range 'a' - 'z'?

I don't have the answer to your question, but I did notice:

 >CR
 >        : ( '\r' '\n' )
 >        | '\n'                                  {   newline();
 >$setType( Token.SKIP );  }
 >        ;

I'm fairly sure that this is wrong.  The action will be applied 
only to the second alt, meaning that when seeing '\r\n' in the 
stream it won't skip it.  You should add an extra set of 
parentheses around both alts, so you've only got a single unit 
before the action.


From parrt at cs.usfca.edu  Wed Dec 13 15:58:36 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Dec 2006 15:58:36 -0800
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <8659C7B861F21A4889878EE7CF859D7D02B09F14@mucse303.eu.infineon.com>
References: <8659C7B861F21A4889878EE7CF859D7D02B09F14@mucse303.eu.infineon.com>
Message-ID: <EAAC444E-5019-4ADD-854A-2C2FCAFD1121@cs.usfca.edu>

howdy Joerg, i just tweaked CommonTreeNodeStream to make rewind/ 
release work properly.  The seek is there also (already I guess).   
Wait, it says:

		if ( index<this.index() ) {
             throw new IllegalArgumentException("can't seek backwards  
in node stream");
		}

which is true.  You can't seek backwards w/o knowing your state in  
the past (whence the treestate objects).  What we need for  
interpreters is to do away with the small lookahead array and just  
suck all tokens from CommonTreeNodeStream into an array like  
CommonTokenStream does.

Perhaps we need another class BufferedTreeNodeStream that sucks from  
a TreeNodeStream and buffers them so you can seek with an index  
change.  Make sense?  If so, i'll build it real quick.

I also want to update this to use Object not Tree as the type of  
nodes to be more generic.

Ter

From parrt at cs.usfca.edu  Wed Dec 13 17:07:43 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 13 Dec 2006 17:07:43 -0800
Subject: [antlr-interest] added org.antlr.runtime.tree.DOTTreeGenerator class
Message-ID: <D77B5D19-68C3-4FD2-B63B-9EE2CF1EA397@cs.usfca.edu>

Hi,

Needed for book, but formalized.

/** A utility class to generate DOT diagrams (graphviz) from
*  arbitrary trees.  You can pass in your own templates and
*  can pass in any kind of tree or use Tree interface method.
*  I wanted this separator so that you don't have to include
*  ST just to use the org.antlr.runtime.tree.* package.
*  This is a set of non-static methods so you can subclass
*  to override.  For example, here is an invocation:
*
*      CharStream input = new ANTLRInputStream(System.in);
*      TLexer lex = new TLexer(input);
*      CommonTokenStream tokens = new CommonTokenStream(lex);
*      TParser parser = new TParser(tokens);
*      TParser.e_return r = parser.e();
*      Tree t = (Tree)r.tree;
*      System.out.println(t.toStringTree());
*      DOTTreeGenerator gen = new DOTTreeGenerator();
*      StringTemplate st = gen.toDOT(t);
*      System.out.println(st);
*/

Assume grammar:

grammar T;
options {output=AST;}
e : m ('+'^^ m)* ;

m : a ('*'^^ a)* ;

a : INT
   | ID
   ;

INT : '0'..'9'+ ;

ID  : 'a'..'z'+ ;

WS : (' '|'\n')+ {$channel=HIDDEN;}
    ;

and test rig:

public class Test {
     public static void main(String[] args) throws Exception {
         CharStream input = new ANTLRInputStream(System.in);
         TLexer lex = new TLexer(input);
         CommonTokenStream tokens = new CommonTokenStream(lex);
         TParser parser = new TParser(tokens);
         TParser.e_return r = parser.e();
         Tree t = (Tree)r.tree;
         System.out.println(t.toStringTree());
         DOTTreeGenerator gen = new DOTTreeGenerator();
         StringTemplate st = gen.toDOT(t);
         System.out.println(st);
     }
}

Sample run:

$ java Test
3+4*5
(+ 3 (* 4 5))
digraph {
   node [shape=plaintext, fixedsize=true, fontsize=11,  
fontname="Courier",
         width=.4, height=.2];
   edge [arrowsize=.7]
   "+" -> "3"
   "+" -> "*"
   "*" -> "4"
   "*" -> "5"
}

looks like:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: 345.png
Type: image/png
Size: 4262 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061213/e0536ede/attachment.png 
-------------- next part --------------

Oh, and antlr-dev folks: updated tree adaptor to impl getChild and  
getChildCount

edit //depot/code/antlr/main/README.txt#129
edit //depot/code/antlr/main/src/org/antlr/runtime/tree/BaseTree.java#13
edit //depot/code/antlr/main/src/org/antlr/runtime/tree/ 
CommonTreeAdaptor.java#14
add //depot/code/antlr/main/src/org/antlr/runtime/tree/ 
DOTTreeGenerator.java#1
Change 3331 submitted.

Ter

From antlr at telenet.be  Wed Dec 13 18:31:39 2006
From: antlr at telenet.be (Bill Mayfield)
Date: Thu, 14 Dec 2006 03:31:39 +0100
Subject: [antlr-interest] What to do when you need to semantically validate
	an expression?
Message-ID: <4580B78B.50103@telenet.be>

Hi,

I need to create a formula language for our product. The formulas 
entered need to be translated to SQL statements that can be executed 
against our database.

Basically I would create a lexer and parser for the formula language 
using ANTLR so that I can build an expression tree. But then I'm 
somewhat *stuck*.

1. Do I let ANTLR create an AST automatically or do I create a tree by 
hand with more meaningful types like Expression, Sum, etc...
2. The parsed result needs to be semantically validated. I presume I 
need to write custom validation logic in each type for this??? This 
might answer question 1?

for instance: (pseudo-code)

public class Sum
{
    private Expression left;
    private Expression right;

    public void validate()
    {
       //validate whether left and right are of correct datatypes
    }
}

3. Would it be better to write a translater by hand to translate the 
expression tree to SQL or would it be better to use a treewalker to do 
this?


I'm new to ANTLR, have just read (most of) the spec, and I could use 
some guidance.


Thanks!






From Joerg.Werner at qimonda.com  Thu Dec 14 00:42:38 2006
From: Joerg.Werner at qimonda.com (Joerg.Werner at qimonda.com)
Date: Thu, 14 Dec 2006 09:42:38 +0100
Subject: [antlr-interest] How to implement an IF
In-Reply-To: <EAAC444E-5019-4ADD-854A-2C2FCAFD1121@cs.usfca.edu>
Message-ID: <8659C7B861F21A4889878EE7CF859D7D02B398CA@mucse303.eu.infineon.com>

Hi Terr,

Makes sense to me to implement it in BufferedTreeNodeStream, because buffering the whole TreeNodeStream may consume a lot of memory. So people who do not need the seeking backwards functionality, but want less memory consumption/better performance can use TreeNodeStream.

Regards,

J?rg


-- 
Dr. J?rg Werner
Qimonda AG 
Memory Products Division
QAG PD PT TPE C
Am Campeon 1-12
D-85579 Neubiberg
email: joerg.werner at qimonda.com
Tel:  +49 89 234-26602
Fax: +49 89 234-9553128

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Thursday, December 14, 2006 12:59 AM
To: Werner Joerg (QAG PD PT TPE C)
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to implement an IF

howdy Joerg, i just tweaked CommonTreeNodeStream to make rewind/ 
release work properly.  The seek is there also (already I guess).   
Wait, it says:

		if ( index<this.index() ) {
             throw new IllegalArgumentException("can't seek backwards in node stream");
		}

which is true.  You can't seek backwards w/o knowing your state in the past (whence the treestate objects).  What we need for interpreters is to do away with the small lookahead array and just suck all tokens from CommonTreeNodeStream into an array like CommonTokenStream does.

Perhaps we need another class BufferedTreeNodeStream that sucks from a TreeNodeStream and buffers them so you can seek with an index change.  Make sense?  If so, i'll build it real quick.

I also want to update this to use Object not Tree as the type of nodes to be more generic.

Ter

From matt at ebi.ac.uk  Thu Dec 14 06:17:23 2006
From: matt at ebi.ac.uk (Matt Harrison)
Date: Thu, 14 Dec 2006 14:17:23 +0000
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
	single character input
In-Reply-To: <E1GuZMo-0001pf-00@gecko>
References: <457EE287.3020801@ebi.ac.uk>
	<3b5bc90612122032l32e464a7kf70d1c6139e4c45@mail.gmail.com>
	<457FDE01.2060703@ebi.ac.uk>
	<F28FB634-6952-4703-B101-1655A1CB9E0A@cs.usfca.edu>
	<45803E0C.8020005@ebi.ac.uk> <E1GuZMo-0001pf-00@gecko>
Message-ID: <75479806-C279-4C4D-A949-E2D70F9DA683@ebi.ac.uk>

Hi again,

> You have most of the single lowercase letters specified to be KEYWORDS
> of your language.
>
> Take "n", the first error you find, for example. It is a keyword as
> specified by the two rules: monosac_type_identifier and
> linkage_type_identifier.  and so "n" is NOT an IDENTIFIER.

Bingo. Changing the 'n' to any letter that is not used elsewhere as a  
literal
does indeed parse as expected. The heavy use of literals is the  
problem then.

With the benefit of hindsight, the error message 'Expected an  
IDENTIFIER but got "b"' does indeed point to 'b' having been  
identified by ANTLR as something other than an IDENTIFIER, but to my  
inexperienced eyes the cause was not immediately obvious.

Perhaps the error message given by ANTLR for this situation could be  
modified slightly?

Instead of:

"Expected an XXX but got a 'YYY'"

... where YYY was extracted from elsewhere in the grammar and  
silently made into a literal by ANTLR, an error message like:

"Expected an XXX but got literal 'YYY'"

would make it more clear that 'YYY' exists as a literal elsewhere in  
the grammar and for that reason, 'YYY' will never be taken to be an  
XXX (unless testLiterals is false).


> There should be lots of messages in this mailing list's archives on
> how to handle keywords which also may be identifiers...

Indeed, it seems to be a very commonly encountered problem. But what  
if your "keywords" are usually single letters and highly context  
dependant? I am somewhat reluctant to declare all my keywords as  
IDENTIFIERS and to use semantic predicates everywhere -- I'd like the  
grammar to be easily targeted to other languages besides Java and it  
just feels wrong using code everywhere instead of real grammar. There  
has to be a better way?

For example, given the input text "RES 1b:b-bbb-hex-1:5|6:a;", the  
first 'b' is effectively a keyword, the second 'b' is another keyword  
from a different set of keywords, and the 3rd-5th 'b' constitutes an  
identifier. To clarify, in the position of the first 'b', any of the  
characters { 'b', 's', 'i' } would be allowed, in the position of the  
second 'b' { 'a', 'b', 'o', 'x' } would be allowed, whereas an  
identifier can be any ('a'..'z')+.

Could anyone please recommend a strategy that efficiently deals with  
this predicament?

> Hope this helps...

Indeed it has :-) Now that we've identified the problem, I'm fearful  
of what the correct solution to my problem will be ;-)

cheers,
Matt


From foolishewe at hotmail.com  Thu Dec 14 07:37:07 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Thu, 14 Dec 2006 15:37:07 +0000
Subject: [antlr-interest] Using ANTLR for Interpreting scripting languages
Message-ID: <BAY107-F300D1B486CFF1BE173F21AC0D50@phx.gbl>

Hello All:

I'm trying to use an ANTLR grammar I've made for a sort of scripting 
language.
Historically I've tested the grammar using input files, but the users may 
invoke the
interactively invoke the scripting tool whlie reading from System.in.  Since 
the language
does not have flow of control constructs (it is pretty simple in that 
respect).

When I tried using an ANTLRInputStream  from System.in  (based on the  
ExpressionEvaluator),
I noticed that the expression evaluator appears to read all input until end 
of file, and then
parses all the input.  Can I get ANTLR to parse input as it is being read 
in?

Regards:

Bill M.

_________________________________________________________________
Get the latest Windows Live Messenger 8.1 Beta version.?Join now. 
http://ideas.live.com


From lgcraymer at yahoo.com  Thu Dec 14 09:55:45 2006
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 14 Dec 2006 09:55:45 -0800 (PST)
Subject: [antlr-interest] lexing expression ('a'..'z')+ not matching
	single character input
In-Reply-To: <75479806-C279-4C4D-A949-E2D70F9DA683@ebi.ac.uk>
Message-ID: <352766.85447.qm@web55903.mail.re3.yahoo.com>


--- Matt Harrison <matt at ebi.ac.uk> wrote:

 
> Indeed it has :-) Now that we've identified the
> problem, I'm fearful  
> of what the correct solution to my problem will be
> ;-)

What you need are another ANTLR feature:  semantic
predicates.

In the appropriate place in your parser grammar,
recognize 'n' as:

{ input.LT(1).equals("n") }? IDENTIFIER

(I may have the wrong java code here).  This will also
work in ANTLR 2, but not always (no hoisting of
predicates).

--Loring


> 
> cheers,
> Matt
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From jose.sanleandro at ventura24.es  Thu Dec 14 12:01:51 2006
From: jose.sanleandro at ventura24.es (Jose San Leandro)
Date: Thu, 14 Dec 2006 21:01:51 +0100
Subject: [antlr-interest] Error in CodeGenTreeWalker
Message-ID: <200612142101.52360.jose.sanleandro@ventura24.es>

Hi,

I'm working on a grammar which filters an input with lexical filters and 
modifies some stuff.

I've declared a lexer rule like this:

fragment
ANYTHING_BUT_BRACKET
    :   c=~('{'|'}')   {append((char) c);}
   ;

When executing ANTLR, it fails with the following message:

error(100): AntLangInner.g:0:0: syntax error: codegen: <AST>:0:0: unexpected 
end of subtree
error(10):  internal error: AntLangInner.g : java.lang.ClassCastException
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1135)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:2397)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1856)

I don't know if that is expected or not. What the rule tries to do is to match 
and leave untouched anything but opening or closing brackets. Is there a 
better way to do it?

Thank you in advance,
Jose.

From parrt at cs.usfca.edu  Thu Dec 14 13:49:49 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 14 Dec 2006 13:49:49 -0800
Subject: [antlr-interest] Error in CodeGenTreeWalker
In-Reply-To: <200612142101.52360.jose.sanleandro@ventura24.es>
References: <200612142101.52360.jose.sanleandro@ventura24.es>
Message-ID: <E0085A5C-F6E6-41B5-8D57-C97F4027095B@cs.usfca.edu>

hi.  For now, use

BRACK : ('{'|'}') ;
ELSE : . ;
On Dec 14, 2006, at 12:01 PM, Jose San Leandro wrote:

> Hi,
>
> I'm working on a grammar which filters an input with lexical  
> filters and
> modifies some stuff.
>
> I've declared a lexer rule like this:
>
> fragment
> ANYTHING_BUT_BRACKET
>     :   c=~('{'|'}')   {append((char) c);}
>    ;
>
> When executing ANTLR, it fails with the following message:
>
> error(100): AntLangInner.g:0:0: syntax error: codegen: <AST>:0:0:  
> unexpected
> end of subtree
> error(10):  internal error: AntLangInner.g :  
> java.lang.ClassCastException
> org.antlr.codegen.CodeGenTreeWalker.alternative 
> (CodeGenTreeWalker.java:1135)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1000)
> org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:2397)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java: 
> 1856)
>
> I don't know if that is expected or not. What the rule tries to do  
> is to match
> and leave untouched anything but opening or closing brackets. Is  
> there a
> better way to do it?
>
> Thank you in advance,
> Jose.


From kroepke at classdump.org  Thu Dec 14 14:23:34 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 14 Dec 2006 23:23:34 +0100
Subject: [antlr-interest] What to do when you need to semantically
	validate an expression?
In-Reply-To: <4580B78B.50103@telenet.be>
References: <4580B78B.50103@telenet.be>
Message-ID: <A27BD6DF-6AAE-4B76-8524-0973A0189F8A@classdump.org>

Hi Bill!

On 14. Dec 2006, at 3:31 , Bill Mayfield wrote:

> 1. Do I let ANTLR create an AST automatically or do I create a tree  
> by hand with more meaningful types like Expression, Sum, etc...

You can go either way, but unless you have really specific  
requirements, a homogeneous tree (all nodes are of the same class)  
should do it.
You'd differentiate the subtrees by their root node (most of them  
will be imaginary tokens).

> 2. The parsed result needs to be semantically validated. I presume  
> I need to write custom validation logic in each type for this???  
> This might answer question 1?

See question 3 ;)

>
> 3. Would it be better to write a translater by hand to translate  
> the expression tree to SQL or would it be better to use a  
> treewalker to do this?

A treewalker approach is the easiest to modify, IMHO, and can save  
you a lot of custom code. Furthermore you have the additional benefit  
of having a LL-parser for trees, too.
The semantic checks would be done in actions in that (or those) tree  
parsers.

> I'm new to ANTLR, have just read (most of) the spec, and I could  
> use some guidance.

Have a look at the Mantra language Terence is working on <http:// 
linguamantra.org>. It is using ANTLR v3, although the principle is  
applicable
to v2, also. Not sure which version you will be using.

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Thu Dec 14 14:53:43 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 14 Dec 2006 23:53:43 +0100
Subject: [antlr-interest] Unexpected Token dearly expected...
In-Reply-To: <1218503728@web.de>
References: <1218503728@web.de>
Message-ID: <9B8F1E20-00D2-4626-A628-E511650DCADF@classdump.org>


On 13. Dec 2006, at 16:54 , Chantal Ackermann wrote:

> Hi to all!

Hi Chantal!

> 1. Problem:
> Input like "meine heutigen termine" works but I get a  
> NoViableAltException for "termine die n?chsten 2 stunden"
>
[...]
>
> STUNDEN_ANGABE
> 	:	DIGIT " Stunden"
> 	;

Is case sensitivity turned on or off in the lexer? If it is case  
sensitive, that might explain the no viable alt exception.
You're probably better off by specifying everything in lowercase in  
the recognizer and normalize the input (as you already seem to do  
with umlauts) (klingt immer irgendwie komisch auf Englisch, nicht  
wahr? ;))

> 2. Question:
> How do I handle the case when there really is no input of the  
> expected kind? Say, there actually wasn't any domain information in  
> the input. What is the best way to go about that? Do I just catch  
> the exception or do I specify a custom errorhandler?

Catching the exception should be enough, unless you want to do more  
fine-grained error recovery (this might not be possible/feasible in  
your case).

HTH,

-k

-- 
Kay R?pke
http://classdump.org/





From mu_hin at hotmail.com  Fri Dec 15 02:58:39 2006
From: mu_hin at hotmail.com (Muhin Ploymai)
Date: Fri, 15 Dec 2006 17:58:39 +0700
Subject: [antlr-interest] How to generate FIRST and FOLLOW set
Message-ID: <BAY22-F166D91BE7CF6761DE69C26E7D40@phx.gbl>

Hello,
    I have a grammar in ANTLR 2.7.5, how to use ANTLR to generate FIRST and 
FOLLOW set for each production?

Thanks much
Muhin

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From rhill03 at eds.com  Fri Dec 15 03:59:35 2006
From: rhill03 at eds.com (Hill, Robert)
Date: Fri, 15 Dec 2006 11:59:35 -0000
Subject: [antlr-interest] Make file grammar
Message-ID: <2E909902FD3A03419E3A905908AE3DD402B45C98@UKNSM201.emea.corp.eds.com>

Before I set off and write one from scratch , has anyone got a makefile
grammar they're willing to share?

Ta!

Rob

Robert Hill
Information Engineer
Agile Alliance Member
EDS UKIMEA DWP ACU, Hallamshire Business Park, 100 Napier St, Sheffield.
S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061215/1e3dc805/attachment.html 

From asmith at moncons.co.uk  Fri Dec 15 08:49:23 2006
From: asmith at moncons.co.uk (Andrew Smith)
Date: Fri, 15 Dec 2006 16:49:23 +0000
Subject: [antlr-interest] V3 grammar writing tactics
Message-ID: <4582D213.4070103@moncons.co.uk>

Hi all,

Can I pick the collective brains of the group's experts with a rather
general question about approaches to writing grammars?

Background
I am writing a grammar to produce ASTs for a Pascal variant of similar
complexity to Java, except that case insensitivity is required. I have
worked up from lexer tokens via expression rules to rules accepting
blocks of statements and am approaching completion with rules which will
enable programme source files to be analysed. The grammars have no
parser/lexer errors as the lower stages give no warnings about
ambiguity, recursion etc. However ANTLR V3.0b5 runs slower than 3.0b4 or
earlier, taking minutes rather than seconds for my grammars, and uses
large amounts of Heap memory (I have seen about 500MB in a profiler). I
have now reached an impasse because the more developed grammars cannot
be analysed because of runtime Heap overflow, even on command line runs.
I think that this is because the upper level grammars greatly increase
the complexity of the resultant AST by linking disparate branches
together. The running time is not very important to me, but Heap errors
that terminate analysis are show stoppers.

Tactics
My tactic for this task was to keep the individual rules as simple as
possible to aid understanding their operation. As a result there are a
large number of rules, I estimate that slightly more than 300 will be
needed in the full, tree constructing, grammar. A large number of these
rules, 148, are lexer tokens introduced to overcome V3 case sensitivity.
To stop ambiguity I allow a full k* analysis to occur.

Observations
The step that induced the final Heap overflow increased the rules from
272 to 274 to take the scope from "Block" to "Programme Block".
Terence analyses Java 1.5 files in 148 rules, virtually none of which
are tokens. (Note- the V3 J1.5 java.g only produces a flat linked AST.
>From this stage my grammars needed about 20 new rules to give the tree
topology which I require.) The java grammar is also analysed very
quickly on 3.0b5 and probably also uses minimal Heap.
Inspection shows that Ter's tactic was to write fewer, more complex
rules as distinct from my own more but simpler approach. He has also the
restriction, k=2, and accepts that two warnings are permissible.

Questions
1) Is it possible to generalise that one of these approaches to rule
writing is likely to produce grammars which are less memory heavy and
run faster? (That is - fewer, more complex rules vs. more, simpler ones.)
2) If so, is the second approach inevitably the "bad" one?
3) If not, should the aim be to keep k as low as possible whilst
eliminating all ambiguities?
4) If not, should the aim be to keep k as low as possible at the expense
 of accepting limited ambiguities?

Apologies for the length, but thanks anyway,
Andrew Smith

From jimi at intersystems.com  Fri Dec 15 12:30:04 2006
From: jimi at intersystems.com (Jim Idle)
Date: Fri, 15 Dec 2006 15:30:04 -0500
Subject: [antlr-interest] V3 grammar writing tactics
In-Reply-To: <4582D213.4070103@moncons.co.uk>
Message-ID: <20061215202936.E33A9124C@mail.intersystems.com>

Andrew,

A couple of points for you.

Rather than try to use lexer tokens for case insensitivity, try the code
below this text. This will use upper case only to recognize tokens, but
will preserve case in the input stream and is probably what most people
want to do.

Perhaps recent grammar analysis changes have bitten you on this one, I
know some bugs have been fixed and some others tweaked since the release
you are using, but not exactly sure what.

Assuming that the analysis will eventually finish and not just loop
forever (ANTLRWorks does this on certain strange inputs right now), then
use the command line option: -Xmx1000M  on your java invocation
(assuming Windows, you may need to consult the java command line for you
actual system etc).

Jim


Use the following where you would normally use an ANTLRFileStream, to
create a case insensitive lexer which preserves case in the input
stream:

import org.antlr.runtime.*;
import java.io.*;

/**
 *
 * @author jimi
 */
public class ANTLRNoCaseFileStream  extends ANTLRFileStream
{
	public ANTLRNoCaseFileStream(String fileName) throws IOException
{
		super(fileName, null);
	}

	public ANTLRNoCaseFileStream(String fileName, String encoding)
throws IOException {
		super(fileName, encoding);
	}
	    
	public int LA(int i) {
		if ( i==0 ) {
			return 0; // undefined
		}
		if ( i<0 ) {
			i++; // e.g., translate LA(-1) to use offset 0 
		}

		if ( (p+i-1) >= n ) {
            //System.out.println("char LA("+i+")=EOF; p="+p);
            return CharStream.EOF;
        }
        //System.out.println("char LA("+i+")="+data.charAt(p+i-1)+";
p="+p);
        return Character.toUpperCase(data[p+i-1]);
    }

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andrew Smith
Sent: Friday, December 15, 2006 8:49 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] V3 grammar writing tactics

Hi all,

Can I pick the collective brains of the group's experts with a rather
general question about approaches to writing grammars?

Background
I am writing a grammar to produce ASTs for a Pascal variant of similar
complexity to Java, except that case insensitivity is required. I have
worked up from lexer tokens via expression rules to rules accepting
blocks of statements and am approaching completion with rules which will
enable programme source files to be analysed. The grammars have no
parser/lexer errors as the lower stages give no warnings about
ambiguity, recursion etc. However ANTLR V3.0b5 runs slower than 3.0b4 or
earlier, taking minutes rather than seconds for my grammars, and uses
large amounts of Heap memory (I have seen about 500MB in a profiler). I
have now reached an impasse because the more developed grammars cannot
be analysed because of runtime Heap overflow, even on command line runs.
I think that this is because the upper level grammars greatly increase
the complexity of the resultant AST by linking disparate branches
together. The running time is not very important to me, but Heap errors
that terminate analysis are show stoppers.

Tactics
My tactic for this task was to keep the individual rules as simple as
possible to aid understanding their operation. As a result there are a
large number of rules, I estimate that slightly more than 300 will be
needed in the full, tree constructing, grammar. A large number of these
rules, 148, are lexer tokens introduced to overcome V3 case sensitivity.
To stop ambiguity I allow a full k* analysis to occur.

Observations
The step that induced the final Heap overflow increased the rules from
272 to 274 to take the scope from "Block" to "Programme Block".
Terence analyses Java 1.5 files in 148 rules, virtually none of which
are tokens. (Note- the V3 J1.5 java.g only produces a flat linked AST.
>From this stage my grammars needed about 20 new rules to give the tree
topology which I require.) The java grammar is also analysed very
quickly on 3.0b5 and probably also uses minimal Heap.
Inspection shows that Ter's tactic was to write fewer, more complex
rules as distinct from my own more but simpler approach. He has also the
restriction, k=2, and accepts that two warnings are permissible.

Questions
1) Is it possible to generalise that one of these approaches to rule
writing is likely to produce grammars which are less memory heavy and
run faster? (That is - fewer, more complex rules vs. more, simpler
ones.)
2) If so, is the second approach inevitably the "bad" one?
3) If not, should the aim be to keep k as low as possible whilst
eliminating all ambiguities?
4) If not, should the aim be to keep k as low as possible at the expense
 of accepting limited ambiguities?

Apologies for the length, but thanks anyway,
Andrew Smith

From mdepascale at dii.unisi.it  Sat Dec 16 06:18:24 2006
From: mdepascale at dii.unisi.it (Maurizio de Pascale)
Date: Sat, 16 Dec 2006 15:18:24 +0100
Subject: [antlr-interest] bug? missing lexical token not reported as error
Message-ID: <45840030.8060301@dii.unisi.it>

Hi,
it looks like that if a parser rules uses an undefined lexical token no 
error is reported by antlr... but it throws at runtime...
for example a rule like:

startRule : (SOME_THING)* EOF;

where SOMETHING is a valid token for the lexer (in the same grammar 
file) but SOME_THING doesn't exist, gets translated with no reported error.
Is this a bug or am I missing something?

using ANTLR 2.7.7 (20060930) with C++ output.

Maurizio de Pascale
mdepascale at dii.unisi.it

From fhaupt at informatik.uni-wuerzburg.de  Sat Dec 16 06:42:14 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Sat, 16 Dec 2006 15:42:14 +0100
Subject: [antlr-interest] how to match '.' ?
Message-ID: <20061216144214.GB5779@maya.lan>

Hi there,

i have the following rules:

test	:	STRING ' ' PUNKTUATION ' ' STRING;

PUNKTUATION 
	:	 '.'|','|'!'|'?'|':'|'\\'|'/'|'$'|';'|'"'|')'|'(';
		
STRING	:	('a'..'z'|'A'..'Z'|'0'..'9'|'\.'|'-')+;



this matches 
'hallo ( test', 'hallo ? test', 'hallo : test', etc ..

but noch anything like 
'hallo . test' (or !,\,/," instead of . ) 

do I have to escape those? i've tried 

PUNKTUATION
        :        '\.'|','|'!'|'?'|':'|'\\'|'/'|'$'|';'|'"'|')'|'(';

as rule, but 'hallo . test' still isn't matched.

i'm using antlr-3.0b5.

thanks for any suggestions in advance.




-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061216/21aba37c/attachment.bin 

From mdepascale at dii.unisi.it  Sat Dec 16 07:00:57 2006
From: mdepascale at dii.unisi.it (Maurizio de Pascale)
Date: Sat, 16 Dec 2006 16:00:57 +0100
Subject: [antlr-interest] on ANTLR reported ambiguity
Message-ID: <45840A29.7050505@dii.unisi.it>

Hi,
I'm slowly learning to use ANTLR and I would like to better understand 
the ANTLR warning: "warning:nondeterminism between alts 1 and 2 of block 
upon".
For what I understand it reports that on a particular sequence of tokens 
in the input stream (e.g. IDENTIFIER IDENTIFIER ...) the rules are 
ambiguous since more than one can be guessed.

back to practice, for the small piece of grammar below:

block
    :    LEFT_CURLYBRACKET     
        (                                                       //THIS 
IS LINE 83
            variable_declaration
        |    execution_statement
        )*
        RIGHT_CURLYBRACKET
    ;

variable_declaration
    :    type_identifier name_identifier SEMICOLON
    ;

type_identifier
    :    IDENTIFIER
    ;

name_identifier
    :    IDENTIFIER
    ;

execution_statement
    :    null_execution_statement
    |    return_statement                                    //IF THIS 
LINE IS COMMENTED NO MORE WARNING
    ;

null_execution_statement
    :    name_identifier SEMICOLON
    ;

return_statement
    :    KEYWORD_RETURN name_identifier SEMICOLON
    ;

antlr does report this warning:
ANTLR Parser Generator   Version 2.7.7 (20060930)   1989-2005
mururoa.g:83: warning:nondeterminism between alts 1 and 2 of block upon
mururoa.g:83:     k==1:IDENTIFIER
mururoa.g:83:     k==2:IDENTIFIER

however if I comment out the "| return_statement" alternative in the 
"execution_statement" rule no more warnings are reported.
but the "return_statement" starts with a token different than 
IDENTIFIER, so I can't really see why it should give ambiguity for the 
reported type of input tokens since the only rule that start with two 
IDENTIFIER is variable_declaration.
What am I doing wrong?

Moreover I suggest that eventually the tool should spit out not only the 
input the causes ambiguity, but also the rules that are conflicting just 
like compilers do on ambiguous argument type deduction. Or is there 
already such an option that I'm missing?


thank you in advance for your help
Maurizio de Pascale
mdepascale at dii.unisi.it

P.S. please, save me answers like "there are already c++ grammars, use 
those".

From jbb at acm.org  Sat Dec 16 07:49:09 2006
From: jbb at acm.org (John B. Brodie)
Date: Sat, 16 Dec 2006 10:49:09 -0500
Subject: [antlr-interest] how to match '.' ?
In-Reply-To: <20061216144214.GB5779@maya.lan>
	(fhaupt@informatik.uni-wuerzburg.de)
References: <20061216144214.GB5779@maya.lan>
Message-ID: <E1Gvbme-0000Wl-00@gecko>

>Hi there,

Hi!

>i have the following rules:
>
>test	:	STRING ' ' PUNKTUATION ' ' STRING;
>
>PUNKTUATION
>	:	 '.'|','|'!'|'?'|':'|'\\'|'/'|'$'|';'|'"'|')'|'(';
>
>STRING	:	('a'..'z'|'A'..'Z'|'0'..'9'|'\.'|'-')+;
>
>
>
>this matches=20
>'hallo ( test', 'hallo ? test', 'hallo : test', etc ..
>
>but noch anything like=20
>'hallo . test' (or !,\,/," instead of . )=20

a grammar file containing just those 3 rules above works just fine for me.

maybe post the smallest *complete* example of your problem?

   -jbb

From foolishewe at hotmail.com  Sat Dec 16 10:52:43 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Sat, 16 Dec 2006 18:52:43 +0000
Subject: [antlr-interest] Expr example in Wiki compile error Eclipse using
	ANTLRworks 1.0b8, ANTLR 3.0b5
Message-ID: <BAY107-F9B50B14FD9924329135E6C0CB0@phx.gbl>

I've tried getting some my stuff working ANTLR source code into eclipse, by
adding the ANTLRworks 1.0b8 jar to my class path, and using ANTLRworks to 
generate
the Java source and compile it in the Eclipse framework.

The generated code had compiler errors, (as did my much larger example) for 
the following
ANTLR source line:
    |   '(' expr ')' {$value = $expr.value;}

The action $value=$expr.value; generates the following Java source (which 
does not compile):

                    value = $expr.value;

Which does not compile.

I've noticed in my own source that I've had to create attribute labels in 
order
to get compilable code out of ANTLR1.0b5 (via ANTRLworks 1.0b8),
so changing the ANTLR source to read:

    |   '(' myexpr=expr ')' {$value = $myexpr.value;}

generates the following Java source (which does compile):

                    value = myexpr;

Does anyone have any idea why the published example in the wiki isn't 
building
in this environment?

Regards:

Bill M.

_________________________________________________________________
View Athlete?s Collections with Live Search 
http://sportmaps.live.com/index.html?source=hmemailtaglinenov06&FORM=MGAC01


From parrt at cs.usfca.edu  Sat Dec 16 11:08:44 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Dec 2006 11:08:44 -0800
Subject: [antlr-interest] Expr example in Wiki compile error Eclipse
	using ANTLRworks 1.0b8, ANTLR 3.0b5
In-Reply-To: <BAY107-F9B50B14FD9924329135E6C0CB0@phx.gbl>
References: <BAY107-F9B50B14FD9924329135E6C0CB0@phx.gbl>
Message-ID: <4BB326F4-49C9-41FF-80ED-6966BFD93EC1@cs.usfca.edu>

Hi Bill...sorry about that...try grabbing latest from depot browser,  
fixed after 3.0b5.

I hope to do another release soon.

Ter
On Dec 16, 2006, at 10:52 AM, Foolish Ewe wrote:

> I've tried getting some my stuff working ANTLR source code into  
> eclipse, by
> adding the ANTLRworks 1.0b8 jar to my class path, and using  
> ANTLRworks to generate
> the Java source and compile it in the Eclipse framework.
>
> The generated code had compiler errors, (as did my much larger  
> example) for the following
> ANTLR source line:
>    |   '(' expr ')' {$value = $expr.value;}
>
> The action $value=$expr.value; generates the following Java source  
> (which does not compile):
>
>                    value = $expr.value;
>
> Which does not compile.
>
> I've noticed in my own source that I've had to create attribute  
> labels in order
> to get compilable code out of ANTLR1.0b5 (via ANTRLworks 1.0b8),
> so changing the ANTLR source to read:
>
>    |   '(' myexpr=expr ')' {$value = $myexpr.value;}
>
> generates the following Java source (which does compile):
>
>                    value = myexpr;
>
> Does anyone have any idea why the published example in the wiki  
> isn't building
> in this environment?
>
> Regards:
>
> Bill M.
>
> _________________________________________________________________
> View Athlete?s Collections with Live Search http:// 
> sportmaps.live.com/index.html?source=hmemailtaglinenov06&FORM=MGAC01
>


From antlr at telenet.be  Sat Dec 16 12:00:52 2006
From: antlr at telenet.be (Bill Mayfield)
Date: Sat, 16 Dec 2006 21:00:52 +0100
Subject: [antlr-interest] V3 BUG in C# generator (3.0b5)
Message-ID: <45845074.8020808@telenet.be>

Howdy,

Sorry if this isn't the right place to report bugs but I don't know 
where else to go with it so...

Following rule in the 5 minute introduction sample grammar ( 
http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3 
) produces this C# error upon compilation.


Rule: WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+     { channel 
= 99; } ;
Compilation Error: The name channel does not exist in the current context.



I guess channel = 99 should be _channel=99? But is this a bug in the C# 
generator or in the grammer?







Below is the generated code for clarity:




    // $ANTLR start WHITESPACE
    public void mWHITESPACE() // throws RecognitionException [2]
    {
        try
        {
            ruleNestingLevel++;
            int _type = WHITESPACE;
            int _start = CharIndex;
            int _line = Line;
            int _charPosition = CharPositionInLine;
            int _channel = Token.DEFAULT_CHANNEL;
            // c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:14: ( ( 
('\\t'|' '|'\\r'|'\\n'|'\\u000C'))+ )
            // c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:14: ( 
('\\t'|' '|'\\r'|'\\n'|'\\u000C'))+
            {
                // c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:14: ( 
('\\t'|' '|'\\r'|'\\n'|'\\u000C'))+
                int cnt2 = 0;
                do
                {
                    int alt2 = 2;
                    int LA2_0 = input.LA(1);
                    if ( ((LA2_0 >= '\t' && LA2_0 <= '\n') || (LA2_0 >= 
'\f' && LA2_0 <= '\r') || LA2_0 == ' ') )
                    {
                        alt2 = 1;
                    }
                   
               
                    switch (alt2)
                    {
                        case 1 :
                            // 
c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:16: ('\\t'|' 
'|'\\r'|'\\n'|'\\u000C')
                            {
                                if ( (input.LA(1) >= '\t' && input.LA(1) 
<= '\n') || (input.LA(1) >= '\f' && input.LA(1) <= '\r') || input.LA(1) 
== ' ' )
                                {
                                    input.Consume();
                               
                                }
                                else
                                {
                                    MismatchedSetException mse =
                                        new 
MismatchedSetException(null,input);
                                    Recover(mse);    throw mse;
                                }

                           
                            }
                            break;
               
                        default:
                            if ( cnt2 >= 1 ) goto loop2;
                                EarlyExitException eee =
                                    new EarlyExitException(2, input);
                                throw eee;
                    }
                    cnt2++;
                } while (true);
               
                loop2:
                    ;    // Stops C# compiler whinging that label 
'loop2' has no statements

                 channel = 99;
           
            }
   
   
           
                    if ( (token == null) && (ruleNestingLevel == 1) )
                    {
                        Emit(_type, _line, _charPosition, _channel, 
_start, CharIndex-1);
                    }
           
                        }
        finally
        {
            ruleNestingLevel--;
        }
    }
    // $ANTLR end WHITESPACE

From antlr at telenet.be  Sat Dec 16 12:06:39 2006
From: antlr at telenet.be (Bill Mayfield)
Date: Sat, 16 Dec 2006 21:06:39 +0100
Subject: [antlr-interest] V3 How comes this grammer discard whitespace?
Message-ID: <458451CF.2020704@telenet.be>

How comes this grammar accepts input "1      2      3" ? (remove quotes)


grammar SimpleCalc;

options {
    language=CSharp;
}

tokens {
    PLUS     = '+' ;
    MINUS    = '-' ;
    MULT    = '*' ;
    DIV    = '/' ;
}

@members {
    public static void Main(string[] args) {
        SimpleCalcLexer lex = new SimpleCalcLexer(new 
ANTLRFileStream(args[0]));
           CommonTokenStream tokens = new CommonTokenStream(lex);

        SimpleCalcParser parser = new SimpleCalcParser(tokens);

        try {
            parser.expr();
        } catch (RecognitionException e)  {
            Console.Error.WriteLine(e.StackTrace);
        }
    }
}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

expr    : term ( ( PLUS | MINUS )  term )* ;
   
term    : factor ( ( MULT | DIV ) factor )* ;
   
factor    : NUMBER ;


/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

NUMBER    : (DIGIT)+ ;
   
WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+     { _channel = 
99; } ;
   
fragment DIGIT    : '0'..'9' ;

From parrt at cs.usfca.edu  Sat Dec 16 12:51:25 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Dec 2006 12:51:25 -0800
Subject: [antlr-interest] V3 BUG in C# generator (3.0b5)
In-Reply-To: <45845074.8020808@telenet.be>
References: <45845074.8020808@telenet.be>
Message-ID: <0ECDD9CE-434B-46CA-8B07-55345B00BAE1@cs.usfca.edu>

ooops.  Fixed in wiki: $channel = HIDDEN;

Ter
On Dec 16, 2006, at 12:00 PM, Bill Mayfield wrote:

> Howdy,
>
> Sorry if this isn't the right place to report bugs but I don't know  
> where else to go with it so...
>
> Following rule in the 5 minute introduction sample grammar ( http:// 
> www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR 
> +3 ) produces this C# error upon compilation.
>
>
> Rule: WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+      
> { channel = 99; } ;
> Compilation Error: The name channel does not exist in the current  
> context.
>
>
>
> I guess channel = 99 should be _channel=99? But is this a bug in  
> the C# generator or in the grammer?
>
>
>
>
>
>
>
> Below is the generated code for clarity:
>
>
>
>
>    // $ANTLR start WHITESPACE
>    public void mWHITESPACE() // throws RecognitionException [2]
>    {
>        try
>        {
>            ruleNestingLevel++;
>            int _type = WHITESPACE;
>            int _start = CharIndex;
>            int _line = Line;
>            int _charPosition = CharPositionInLine;
>            int _channel = Token.DEFAULT_CHANNEL;
>            // c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:14:  
> ( ( ('\\t'|' '|'\\r'|'\\n'|'\\u000C'))+ )
>            // c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:14: ( ('\ 
> \t'|' '|'\\r'|'\\n'|'\\u000C'))+
>            {
>                // c:\\antlr\\work\\simplecalc\\SimpleCalc.g:46:14:  
> ( ('\\t'|' '|'\\r'|'\\n'|'\\u000C'))+
>                int cnt2 = 0;
>                do
>                {
>                    int alt2 = 2;
>                    int LA2_0 = input.LA(1);
>                    if ( ((LA2_0 >= '\t' && LA2_0 <= '\n') || (LA2_0  
> >= '\f' && LA2_0 <= '\r') || LA2_0 == ' ') )
>                    {
>                        alt2 = 1;
>                    }
>                                                    switch (alt2)
>                    {
>                        case 1 :
>                            // c:\\antlr\\work\\simplecalc\ 
> \SimpleCalc.g:46:16: ('\\t'|' '|'\\r'|'\\n'|'\\u000C')
>                            {
>                                if ( (input.LA(1) >= '\t' && input.LA 
> (1) <= '\n') || (input.LA(1) >= '\f' && input.LA(1) <= '\r') ||  
> input.LA(1) == ' ' )
>                                {
>                                    input.Consume();
>                                                              }
>                                else
>                                {
>                                    MismatchedSetException mse =
>                                        new MismatchedSetException 
> (null,input);
>                                    Recover(mse);    throw mse;
>                                }
>
>                                                      }
>                            break;
>                                      default:
>                            if ( cnt2 >= 1 ) goto loop2;
>                                EarlyExitException eee =
>                                    new EarlyExitException(2, input);
>                                throw eee;
>                    }
>                    cnt2++;
>                } while (true);
>                              loop2:
>                    ;    // Stops C# compiler whinging that label  
> 'loop2' has no statements
>
>                 channel = 99;
>                      }
>                                  if ( (token == null) &&  
> (ruleNestingLevel == 1) )
>                    {
>                        Emit(_type, _line, _charPosition, _channel,  
> _start, CharIndex-1);
>                    }
>                                  }
>        finally
>        {
>            ruleNestingLevel--;
>        }
>    }
>    // $ANTLR end WHITESPACE


From parrt at cs.usfca.edu  Sat Dec 16 12:52:29 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Dec 2006 12:52:29 -0800
Subject: [antlr-interest] V3 How comes this grammer discard whitespace?
In-Reply-To: <458451CF.2020704@telenet.be>
References: <458451CF.2020704@telenet.be>
Message-ID: <243E9850-2A94-4EBC-980D-B3190A92D55D@cs.usfca.edu>


On Dec 16, 2006, at 12:06 PM, Bill Mayfield wrote:

> How comes this grammar accepts input "1      2      3" ? (remove  
> quotes)

It is matching "1    " and then deciding it has read a single expr  
and quits.

Ter
>
>
> grammar SimpleCalc;
>
> options {
>    language=CSharp;
> }
>
> tokens {
>    PLUS     = '+' ;
>    MINUS    = '-' ;
>    MULT    = '*' ;
>    DIV    = '/' ;
> }
>
> @members {
>    public static void Main(string[] args) {
>        SimpleCalcLexer lex = new SimpleCalcLexer(new ANTLRFileStream 
> (args[0]));
>           CommonTokenStream tokens = new CommonTokenStream(lex);
>
>        SimpleCalcParser parser = new SimpleCalcParser(tokens);
>
>        try {
>            parser.expr();
>        } catch (RecognitionException e)  {
>            Console.Error.WriteLine(e.StackTrace);
>        }
>    }
> }
>
> /*------------------------------------------------------------------
> * PARSER RULES
> *------------------------------------------------------------------*/
>
> expr    : term ( ( PLUS | MINUS )  term )* ;
>   term    : factor ( ( MULT | DIV ) factor )* ;
>   factor    : NUMBER ;
>
>
> /*------------------------------------------------------------------
> * LEXER RULES
> *------------------------------------------------------------------*/
>
> NUMBER    : (DIGIT)+ ;
>   WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+      
> { _channel = 99; } ;
>   fragment DIGIT    : '0'..'9' ;


From foolishewe at hotmail.com  Sat Dec 16 16:35:10 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Sun, 17 Dec 2006 00:35:10 +0000
Subject: [antlr-interest] Expr example in Wiki compile error
	Eclipseusing ANTLRworks
Message-ID: <BAY107-F1342F3DAAAB9A6D320F9DCC0CA0@phx.gbl>

Hello All:

Thanks Ter, my initial thought was I had made some sort of error, but was 
just too dense to see it.
Given the amount of improved functionality the ANTLR folks are introducing 
in ANTLR3
and ANTLRworks, I am actually pleased with how robust the environment is and 
how fast
fixes are applied in when something is discovered.

I have an additional question about the example grammar, the lexer and 
perhaps Eclipse itself.
The example, Expr appears to hang when I run it in Eclipse, and I've added 
debugging
output and actions to all  non terminals (Please see attached source for 
details).
In the trace for Expr in the wiki, it appears to read until it reaches EOF, 
I've tried entering
^D (control D) into the Eclipse console window but that doesn't seem to 
trigger the EOF
condition, nor do I see any of the expected output.  Running it in the 
debugger seems to indicate
that the ANTLRInputStream constructor does not terminate.  Why is that?

My questions are:
1) Have I somehow screwed things up that the symptoms I'm seeing are my own 
fault?
2) In Eclipse, is it possible to pass an EOF to System.in? (not an Antlr 
question, but maybe I'll
    get lucky).
3) If I want to limit buffering to one line of input at a time, is there 
some other input class
    I should be using in ANTLR.

Thanks:

Bill M.

>From: Terence Parr <parrt at cs.usfca.edu>
>To: ANTLR List <antlr-interest at antlr.org>
>Subject: Re: [antlr-interest] Expr example in Wiki compile error 
>Eclipseusing ANTLRworks 1.0b8, ANTLR 3.0b5
>Date: Sat, 16 Dec 2006 11:08:44 -0800
>
>Hi Bill...sorry about that...try grabbing latest from depot browser,  fixed 
>after 3.0b5.
>
>I hope to do another release soon.
>
>Ter
>On Dec 16, 2006, at 10:52 AM, Foolish Ewe wrote:
>
>>I've tried getting some my stuff working ANTLR source code into  eclipse, 
>>by
>>adding the ANTLRworks 1.0b8 jar to my class path, and using  ANTLRworks to 
>>generate
>>the Java source and compile it in the Eclipse framework.
>>
>>The generated code had compiler errors, (as did my much larger  example) 
>>for the following
>>ANTLR source line:
>>    |   '(' expr ')' {$value = $expr.value;}
>>
>>The action $value=$expr.value; generates the following Java source  (which 
>>does not compile):
>>
>>                    value = $expr.value;
>>
>>Which does not compile.
>>
>>I've noticed in my own source that I've had to create attribute  labels in 
>>order
>>to get compilable code out of ANTLR1.0b5 (via ANTRLworks 1.0b8),
>>so changing the ANTLR source to read:
>>
>>    |   '(' myexpr=expr ')' {$value = $myexpr.value;}
>>
>>generates the following Java source (which does compile):
>>
>>                    value = myexpr;
>>
>>Does anyone have any idea why the published example in the wiki  isn't 
>>building
>>in this environment?
>>
>>Regards:
>>
>>Bill M.
>>
>>_________________________________________________________________
>>View Athlete?s Collections with Live Search http:// 
>>sportmaps.live.com/index.html?source=hmemailtaglinenov06&FORM=MGAC01
>>
>

_________________________________________________________________
Stay up-to-date with your friends through the Windows Live Spaces friends 
list. 
http://clk.atdmt.com/MSN/go/msnnkwsp0070000001msn/direct/01/?href=http://spaces.live.com/spacesapi.aspx?wx_action=create&wx_url=/friends.aspx&mk
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Expr.g
Type: application/octet-stream
Size: 1116 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061217/b9748dd9/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.java
Type: application/octet-stream
Size: 905 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061217/b9748dd9/attachment-0001.obj 

From parrt at cs.usfca.edu  Sat Dec 16 16:43:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Dec 2006 16:43:17 -0800
Subject: [antlr-interest] Expr example in Wiki compile error
	Eclipseusing ANTLRworks
In-Reply-To: <BAY107-F1342F3DAAAB9A6D320F9DCC0CA0@phx.gbl>
References: <BAY107-F1342F3DAAAB9A6D320F9DCC0CA0@phx.gbl>
Message-ID: <F57E210C-E014-4D92-8DD5-31859F1E59BE@cs.usfca.edu>


On Dec 16, 2006, at 4:35 PM, Foolish Ewe wrote:

> Hello All:
>
> Thanks Ter, my initial thought was I had made some sort of error,  
> but was just too dense to see it.
> Given the amount of improved functionality the ANTLR folks are  
> introducing in ANTLR3
> and ANTLRworks, I am actually pleased with how robust the  
> environment is and how fast
> fixes are applied in when something is discovered.

Thanks!  we are getting closer and closer to a final release, but I'm  
fixing bugs only when they interfere with what I am typing in the  
book. ;) My deadline is essentially end of January for the book in  
order to get it published and in stores by May. then I will devote  
full time to getting a full 3.0 release out.

> I have an additional question about the example grammar, the lexer  
> and perhaps Eclipse itself.
> The example, Expr appears to hang when I run it in Eclipse, and  
> I've added debugging
> output and actions to all  non terminals (Please see attached  
> source for details).
> In the trace for Expr in the wiki, it appears to read until it  
> reaches EOF, I've tried entering
> ^D (control D) into the Eclipse console window but that doesn't  
> seem to trigger the EOF
> condition, nor do I see any of the expected output.  Running it in  
> the debugger seems to indicate
> that the ANTLRInputStream constructor does not terminate.  Why is  
> that?
>
> My questions are:
> 1) Have I somehow screwed things up that the symptoms I'm seeing  
> are my own fault?

I think eclipse probably does not know how to say EOF.  Convert to  
use ANTLRFileStream and pass it a file name with that input.

> 2) In Eclipse, is it possible to pass an EOF to System.in? (not an  
> Antlr question, but maybe I'll
>    get lucky).

Some  eclipse guy can tell, but I cannot ;)

> 3) If I want to limit buffering to one line of input at a time, is  
> there some other input class
>    I should be using in ANTLR.

Right now, ANTLR sucks everything in by default. I believe people are  
working on some on-demand stuff.

Ter

From antlr at telenet.be  Sat Dec 16 18:29:43 2006
From: antlr at telenet.be (Bill Mayfield)
Date: Sun, 17 Dec 2006 03:29:43 +0100
Subject: [antlr-interest] V3 -- No start rule??? (newbie question)
Message-ID: <4584AB97.3070000@telenet.be>

Howdy,

I'm new to this. Any help is very much appreciated!


How comes I get the following grammar error on the grammar below?

---------------
error(138): SimpleCalc.g:0:0: grammar SimpleCalc: no start rule (no rule 
can obviously be followed by EOF)
---------------



= GRAMMAR 
==========================================================================



grammar SimpleCalc;

options {
    language=CSharp;
}

tokens {
    PLUS    = '+' ;
    MINUS    = '-' ;
    MULT    = '*' ;
    DIV    = '/' ;
}

@members {
    public static void Main(string[] args) {
        SimpleCalcLexer lex = new SimpleCalcLexer(new 
ANTLRFileStream(args[0]));
           CommonTokenStream tokens = new CommonTokenStream(lex);

        SimpleCalcParser parser = new SimpleCalcParser(tokens);

        try {
            parser.expr();
        } catch (RecognitionException e)  {
            Console.Error.WriteLine(e.StackTrace);
        }
    }
}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

expr    : term ( ( PLUS | MINUS )  term )* ;
    
term    : factor ( ( MULT | DIV ) factor )* ;
    
factor    : NUMBER
    | '(' expr ')' ;


/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

NUMBER    : (DIGIT)+ ;
    
WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+     { $channel = 
HIDDEN; } ;
    
fragment DIGIT    : '0'..'9' ;


From parrt at cs.usfca.edu  Sat Dec 16 18:37:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 16 Dec 2006 18:37:07 -0800
Subject: [antlr-interest] V3 -- No start rule??? (newbie question)
In-Reply-To: <4584AB97.3070000@telenet.be>
References: <4584AB97.3070000@telenet.be>
Message-ID: <02620C53-B68F-452D-B28D-24502A45A71B@cs.usfca.edu>

that might actually work, but antlr is complaining that it does not  
know whether EOF can follow expr; it cannot find a rule not  
referenced by anybody else. For the life of me, I can't remember why  
I absolutely needed this to be an error inside the analysis. ;)

Ter
On Dec 16, 2006, at 6:29 PM, Bill Mayfield wrote:

> Howdy,
>
> I'm new to this. Any help is very much appreciated!
>
>
> How comes I get the following grammar error on the grammar below?
>
> ---------------
> error(138): SimpleCalc.g:0:0: grammar SimpleCalc: no start rule (no  
> rule can obviously be followed by EOF)
> ---------------
>
>
>
> = GRAMMAR  
> ====================================================================== 
> ====
>
>
>
> grammar SimpleCalc;
>
> options {
>    language=CSharp;
> }
>
> tokens {
>    PLUS    = '+' ;
>    MINUS    = '-' ;
>    MULT    = '*' ;
>    DIV    = '/' ;
> }
>
> @members {
>    public static void Main(string[] args) {
>        SimpleCalcLexer lex = new SimpleCalcLexer(new ANTLRFileStream 
> (args[0]));
>           CommonTokenStream tokens = new CommonTokenStream(lex);
>
>        SimpleCalcParser parser = new SimpleCalcParser(tokens);
>
>        try {
>            parser.expr();
>        } catch (RecognitionException e)  {
>            Console.Error.WriteLine(e.StackTrace);
>        }
>    }
> }
>
> /*------------------------------------------------------------------
> * PARSER RULES
> *------------------------------------------------------------------*/
>
> expr    : term ( ( PLUS | MINUS )  term )* ;
>    term    : factor ( ( MULT | DIV ) factor )* ;
>    factor    : NUMBER
>    | '(' expr ')' ;
>
>
> /*------------------------------------------------------------------
> * LEXER RULES
> *------------------------------------------------------------------*/
>
> NUMBER    : (DIGIT)+ ;
>    WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+      
> { $channel = HIDDEN; } ;
>    fragment DIGIT    : '0'..'9' ;
>


From fhaupt at informatik.uni-wuerzburg.de  Sun Dec 17 02:04:20 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Sun, 17 Dec 2006 11:04:20 +0100
Subject: [antlr-interest] how to match '.' ?
In-Reply-To: <E1Gvbme-0000Wl-00@gecko>
References: <20061216144214.GB5779@maya.lan> <E1Gvbme-0000Wl-00@gecko>
Message-ID: <20061217100420.GA10891@maya.lan>

Hi,

I have tried to copy the complete grammar peacewise to a new one till the problem occurs. 
but it doesn't .. maybe it was the order, or i don't now. in the old file the problem remains, in the new one it isn't 
there...
strange

if one wants to have a look at both files, tell me.i'll mail them directly. So the mailinglist doesnt get spammed :)

greets and thanks

fab

On Sat, Dec 16, 2006 at 10:49:09AM -0500, John B. Brodie wrote:
> >Hi there,
> 
> Hi!
> 
> >i have the following rules:
> >
> >test	:	STRING ' ' PUNKTUATION ' ' STRING;
> >
> >PUNKTUATION
> >	:	 '.'|','|'!'|'?'|':'|'\\'|'/'|'$'|';'|'"'|')'|'(';
> >
> >STRING	:	('a'..'z'|'A'..'Z'|'0'..'9'|'\.'|'-')+;
> >
> >
> >
> >this matches=20
> >'hallo ( test', 'hallo ? test', 'hallo : test', etc ..
> >
> >but noch anything like=20
> >'hallo . test' (or !,\,/," instead of . )=20
> 
> a grammar file containing just those 3 rules above works just fine for me.
> 
> maybe post the smallest *complete* example of your problem?
> 
>    -jbb
> 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061217/a685f850/attachment.bin 

From parrt at cs.usfca.edu  Sun Dec 17 16:13:43 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 17 Dec 2006 16:13:43 -0800
Subject: [antlr-interest] FAQ entry: how can I build parse trees not ASTs?
Message-ID: <205BBC39-E437-428D-BC9D-9201C8B1E91E@cs.usfca.edu>

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
Ter

From fhaupt at informatik.uni-wuerzburg.de  Mon Dec 18 01:07:29 2006
From: fhaupt at informatik.uni-wuerzburg.de (fhaupt at informatik.uni-wuerzburg.de)
Date: Mon, 18 Dec 2006 10:07:29 +0100
Subject: [antlr-interest] german umlauts - encoding?
Message-ID: <20061218090729.GA32533@maya.lan>

Hi,

I've run into a little Problem here. Whilst in antlrworks i my grammar works just fine with the german 
umlauts ('???') in the interpreter window, the compiled java code complains about 

....
[mTokens]: line 10:944 1:1: Tokens : ( T7 | T8 | T9 | T10 | T11 | T12 | T13 | T14 | T15 | T16 | T17 | T18 | T19 
| T20 | T21 | T22 | T23 | T24 | T25 | T26 | T27 | T28 | T29 | T30 | T31 | T32 | T33 | T34 | T35 | T36 | T37 | 
T38 | T39 | T40 | T41 | T42 | T43 | T44 | T45 | T46 | T47 | T48 | T49 | T50 | T51 | T52 | STRING | PUNKTUATION 
| NEWLINE ); state 0 (decision=3) no viable alt line 10:944; char='?'
....

a lot. And the Umlauts are not read. I've already tried to change the encoding of my ANTLRFileStreamreader. but 
no success so far.

I suppose i'm missing some trivial point here, but i can't find any clue in the docs about this.



Thanks in advance for any suggestions.
Fabian

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061218/a728d44f/attachment.bin 

From costa_basil at yahoo.ca  Mon Dec 18 01:22:21 2006
From: costa_basil at yahoo.ca (Costa Basil)
Date: Mon, 18 Dec 2006 04:22:21 -0500 (EST)
Subject: [antlr-interest] antlr 2.7.6 - nondeterminism question
Message-ID: <970724.14383.qm@web54306.mail.yahoo.com>

Hi:

I am working on big grammar with k=3 and I have a spot where antlr returns the nondeterminism warning. Now, I know that the grammar is right but because of the linear approximate lookahead antlr returns this warning. Is there an option to turn it off? Unfortunately it appears on a alternate block with no empty choices so I cannot use the warnWhenFollowAmbig option.

This is my problem simplified. For k = 2 antlr chokes because of the linear approximation

p1 : alt1 | alt2;  
alt1: A B | C D | X Y | U V;
alt2: A V | X D;

This approximate lookahead causes me a lot of frustration. I wish there was a way to turn it off. Every time I make changes and I regenerate the grammar there are obscure warnings popping up from all over the place just because of the way this thing works and it is annoying because I think I got my changes right but antlr says I didn't. Then trying to figure out what's going on is the same as searching a needle in the haystack. 







 __________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061218/e02a9c95/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 18 09:28:27 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Dec 2006 09:28:27 -0800
Subject: [antlr-interest] information about the v3 book
Message-ID: <0E67CB17-722B-45E9-A6ED-2E6DDEDDEA3D@cs.usfca.edu>

Hi,

I have been speaking to the pragmatic programmers bookshelf people  
about the beta PDF of the book that will come out in January.  I know  
that people are pre-ordering the book from Amazon (it's  
supercheap...like $21), but I think some of you will want the PDF  
before the book comes out printed in May. Here is what the  
development editor says about the deals you get with PDF handbook  
from the pragmatic programmers website.

> When your book comes out in beta, the beta book is ONLY available  
> via the
> Pragmatic Bookshelf Web site. When beta is ready, there will be two  
> links on
> your book page on the site: one to buy beta book now and and paper  
> book when
> released, and one other link to buy just the beta book.
>
> 1. People who choose to buy beta book now and paper book when  
> released pay
> only the retail price for the book (that is, the beta book comes  
> "free" with
> purchase).
>
> 2. People who choose to buy the beta book only will pay  
> significantly less
> (about half the price of the printed book) but will not have access  
> to the
> printed book when it's available.
>
> Obviously option #1 is the better deal, but that can only be done  
> via the
> Pragmatic Bookshelf Web site. So tell your fans out there to order  
> from the
> Pragmatic Bookshelf site (in January) rather than Amazon if they  
> want both
> the beta and paper book deal. Also, buying from the Pragmatic site  
> is a
> better deal for people who want both the paper book and final PDF  
> versions
> of the book, because the PDF versions are only available there.

Ter

From parrt at cs.usfca.edu  Mon Dec 18 09:37:01 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Dec 2006 09:37:01 -0800
Subject: [antlr-interest] change to AST construction operators
Message-ID: <83AF66B3-E690-4DC7-B3F1-7FFCA2BA3E3F@cs.usfca.edu>

Howdy,

While writing the chapter on AST construction in the book, I realize  
I have made a mistake. I have created both ^^ and ^ operators where  
^^ is the new version of v2's ^ operator.  I created two different  
versions so that you could set the root of the entire tree and the  
root of the enclosing subtree using different operators.  This would  
have been very useful in v2, but I realize now that the rewrite rules  
are a much better way to specify trees that would require subrule  
tree roots. I am going to remove ^^ and make the semantics of ^ the  
same as they were in v2: set the root of the current rule's tree.

This has the added benefit of significantly reducing the complexity  
of the code generation for the automatic tree construction and AST  
operators. It will also make it faster and use less memory. good  
benefits all around.

Target developers: sorry for the change near the end, but I want to  
create what is correct and the book is helping me do a lot of  
thinking about the semantics of the ANTLR metalanguage. Fortunately,  
the change will be to simply remove some templates and/or slightly  
alter some existing templates... so the change should be minimal.  I  
will make sure that ANTLR itself tweaks the operator etc. I hope to  
have these changes done in the next couple of days as I finish up the  
tree chapter.

Ter

From dieter_frej at gmx.net  Mon Dec 18 11:44:30 2006
From: dieter_frej at gmx.net (Dieter Frej)
Date: Mon, 18 Dec 2006 20:44:30 +0100
Subject: [antlr-interest] FAQ entry: how can I build parse trees not
	ASTs?
In-Reply-To: <205BBC39-E437-428D-BC9D-9201C8B1E91E@cs.usfca.edu>
References: <205BBC39-E437-428D-BC9D-9201C8B1E91E@cs.usfca.edu>
Message-ID: <4586EF9E.6040603@gmx.net>

Hi Ter,

 > only 3.0b6 and above;
when will b6 be available?

- Didi



Terence Parr wrote:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
> Ter
> 


From asmith at moncons.co.uk  Mon Dec 18 12:09:29 2006
From: asmith at moncons.co.uk (Andrew Smith)
Date: Mon, 18 Dec 2006 20:09:29 +0000
Subject: [antlr-interest] V3 grammar writing tactics
In-Reply-To: <20061215202936.E33A9124C@mail.intersystems.com>
References: <20061215202936.E33A9124C@mail.intersystems.com>
Message-ID: <4586F579.50506@moncons.co.uk>

Jim,

Thanks for your reply, I am about to try your suggestion of a new input
stream class, I have noticed now that Ter did suggest this approach to
case insensitivity somewhere or other. It will certainly greatly
simplify the grammar.

As regards my original question, it is fairly clear that the problem lay
 in the k=2 vs. k* choice. (Murphy says, pose a properly formulated
question and the answer is obvious!). Accepting the former restriction
brings analysis times back down to seconds again, with no other change
to the grammar. I had already taken the heap setting up as far as I
could, with no result except that the JVM took longer to fall over. As
you said, there are certainly some cases where a loop "close to
infinite" can be produced, outside ANTLRWorks as well as within.

The best news for me was that my grammars, in the state they were in,
did prove to be free from ambiguities and warnings.

BUT, this raises another question - Why should there be any difference
between k-limited and k* behaviour on identical error free grammars? Ter
seems to imply that the look ahead will be limited to that necessary to
eliminate ambiguity, but this cannot be happening in my case. Is it that
the extra look ahead brings so many new possibilities for ambiguity that
a closed loop becomes sufficiently "close to infinite" to exhaust any
usable heap size, as recursion gives memory requirements that are an
N^(some positive number) function?

Anyway, thanks again as I can now progress once more,
Andrew Smith

Jim Idle wrote:
> Andrew,
> 
> A couple of points for you.
> 
> Rather than try to use lexer tokens for case insensitivity, try the code
> below this text. This will use upper case only to recognize tokens, but
> will preserve case in the input stream and is probably what most people
> want to do.
> 
> Perhaps recent grammar analysis changes have bitten you on this one, I
> know some bugs have been fixed and some others tweaked since the release
> you are using, but not exactly sure what.
> 
> Assuming that the analysis will eventually finish and not just loop
> forever (ANTLRWorks does this on certain strange inputs right now), then
> use the command line option: -Xmx1000M  on your java invocation
> (assuming Windows, you may need to consult the java command line for you
> actual system etc).
> 
> Jim
> 
> 
> Use the following where you would normally use an ANTLRFileStream, to
> create a case insensitive lexer which preserves case in the input
> stream:
> 
> import org.antlr.runtime.*;
> import java.io.*;
> 
> /**
>  *
>  * @author jimi
>  */
> public class ANTLRNoCaseFileStream  extends ANTLRFileStream
> {
> 	public ANTLRNoCaseFileStream(String fileName) throws IOException
> {
> 		super(fileName, null);
> 	}
> 
> 	public ANTLRNoCaseFileStream(String fileName, String encoding)
> throws IOException {
> 		super(fileName, encoding);
> 	}
> 	    
> 	public int LA(int i) {
> 		if ( i==0 ) {
> 			return 0; // undefined
> 		}
> 		if ( i<0 ) {
> 			i++; // e.g., translate LA(-1) to use offset 0 
> 		}
> 
> 		if ( (p+i-1) >= n ) {
>             //System.out.println("char LA("+i+")=EOF; p="+p);
>             return CharStream.EOF;
>         }
>         //System.out.println("char LA("+i+")="+data.charAt(p+i-1)+";
> p="+p);
>         return Character.toUpperCase(data[p+i-1]);
>     }
> 


From porcelli at uol.com.br  Mon Dec 18 15:01:30 2006
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 18 Dec 2006 21:01:30 -0200
Subject: [antlr-interest] Quastion About How To Write Grammars with
	Positional Restriction v3
Message-ID: <ee873c070612181501t5fafdf6au5f1a5cf3b5c3d10f@mail.gmail.com>

Hi All,

  I'd like to ask you, if is possible (and if yes, how) to write
grammars based on positional files.

  My necessity is to write a grammar for a specific report, and to
identify, for instance a line format, I need to check the first
character.

  Is it possible and, is it possible mix positional with lex rules?

Sample Report:

DXXXX      *MABCDEFG YYYYYYYYYYYY
W          W         YYYYYYYYYYYY
MPOCTPPPPCP                  AXXXXXXXXXX                9999    O
LAAAA.BCDE                                                     305
H
V                                            DV
T%%TIME=*
ZPOCTPPPPBABCDEFGHIJ                                                    V300
IPOCT1040-POCTPPPP   ODAT
QINIT                0001
OPOCT1040-POCTPPPP   ODAT-
BYY
R.        ..                                                    E2
C,,,,ANYSTEP         O001OK    ,,,,ANYSTEP
C      12345678 M

Best Regards,
Alexandre Porcelli

From parrt at cs.usfca.edu  Mon Dec 18 17:32:11 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 18 Dec 2006 17:32:11 -0800
Subject: [antlr-interest] FAQ entry: how can I build parse trees not
	ASTs?
In-Reply-To: <4586EF9E.6040603@gmx.net>
References: <205BBC39-E437-428D-BC9D-9201C8B1E91E@cs.usfca.edu>
	<4586EF9E.6040603@gmx.net>
Message-ID: <B66A9EAC-7413-4DE6-BC28-E3655B8C75CE@cs.usfca.edu>

Probably after xmas as most of the target developers will be busy and  
I just threw that AST operator change on them.  You can get the  
latest build from the depot browser (hosted by cenqua.com); link on  
main antlr.org news section.  That zip will have latest up to minute  
source.

Ter
On Dec 18, 2006, at 11:44 AM, Dieter Frej wrote:

> Hi Ter,
>
> > only 3.0b6 and above;
> when will b6 be available?
>
> - Didi
>
>
>
> Terence Parr wrote:
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
>> Ter
>


From dubravko.gorupic at wbs-tech.hr  Tue Dec 19 01:04:51 2006
From: dubravko.gorupic at wbs-tech.hr (Dubravko Gorupic)
Date: Tue, 19 Dec 2006 10:04:51 +0100
Subject: [antlr-interest] Error report in tree walker after semantic
	predicate
Message-ID: <200612191004.51163.dubravko.gorupic@wbs-tech.hr>

Hi there.
I have a tree parser that extends TreeParser. In my tree parser I use semantic 
predicates which, on false evaluation, throw exceptions. When I catch those 
exceptions (SemanticException), I can't get line number of last recognized 
AST node before exception was risen, so could inform on which line of code 
was error.
Is there any way to find out line number of last AST node which was recognized 
before exception from semantic predicate happened? I also use extended 
CommonAST class with new getLine() and initialize() methods like was in most 
examples on internet.
Thanx, Dubravko.

P.S.

Part of tree.g:
.....
options
{
  language="Cpp";
}

class cMyWalker extends TreeParser;

options
{
  importVocab=actVocab;
  ASTLabelType = "RefNodeAST";
  defaultErrorHandler = false;
}
.....

From foolishewe at hotmail.com  Tue Dec 19 07:59:47 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 19 Dec 2006 15:59:47 +0000
Subject: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
Message-ID: <BAY107-F241CF41BC9D9A47DA22846C0C80@phx.gbl>

Hi All:

Thanks for the help (especiallly Ter), in a previous e-mail, I suggested 
that aggressive buffering in
in ANTLRInputStream made ANTLR problematic for parsing interactive input, 
since the
ANTRLInputStream constructor blocks on reading all input until EOF into a 
buffer.

However, I tried making a simple input method that uses Lazy buffering (i.e. 
reads characters
on demand extending the buffer).  This lazy input stream no longer blocks on 
the constructor,
however, now I've noticed that the CommonTokenStream constructor appears to 
block.
It appears to be blocking in fillBuffer, but I don't see an explicit call in 
the constructor.
The impact of this is that it negates the interactive support that the lazy 
buffering of my
home-grown input stream class, so I'd like to fix it.

Is there a lazy buffering (buffer as input becomes available/on demand) 
variant of TokenStream
support or have I made some error?

This interactive sort of support might allow ANTLR to be used for a wider 
class of application,
e.g. for parsing piped input (log messages delivered through pipes),
nteractive scripting languages, etc. and may widen the appeal of ANTLR.

Regards:

Bill M.

_________________________________________________________________
Visit MSN Holiday Challenge for your chance to win up to $50,000 in Holiday 
cash from MSN today! 
http://www.msnholidaychallenge.com/index.aspx?ocid=tagline&locale=en-us


From kroepke at classdump.org  Tue Dec 19 08:32:28 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 19 Dec 2006 17:32:28 +0100
Subject: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
In-Reply-To: <BAY107-F241CF41BC9D9A47DA22846C0C80@phx.gbl>
References: <BAY107-F241CF41BC9D9A47DA22846C0C80@phx.gbl>
Message-ID: <769FF64C-8D38-436B-99E9-D59F0A2BD0C1@classdump.org>


On 19. Dec 2006, at 16:59 , Foolish Ewe wrote:

> However, I tried making a simple input method that uses Lazy  
> buffering (i.e. reads characters
> on demand extending the buffer).  This lazy input stream no longer  
> blocks on the constructor,
> however, now I've noticed that the CommonTokenStream constructor  
> appears to block.

What do you do in your input stream's constructor? The  
CommonTokenStream constructors shouldn't block,
they just set the members.

> It appears to be blocking in fillBuffer, but I don't see an  
> explicit call in the constructor.

fillBuffer is invoked on the first call to LT. Maybe you're seeing  
that? Though it doesn't sound
likely based on what you described...

> The impact of this is that it negates the interactive support that  
> the lazy buffering of my
> home-grown input stream class, so I'd like to fix it.
>
> Is there a lazy buffering (buffer as input becomes available/on  
> demand) variant of TokenStream
> support or have I made some error?

No there's nothing like that in the standard distribution. Could you  
post some code?

cheers,

-k

-- 
Kay R?pke
http://classdump.org/





From dave at badgers-in-foil.co.uk  Tue Dec 19 09:19:29 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 19 Dec 2006 17:19:29 +0000
Subject: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
In-Reply-To: <BAY107-F241CF41BC9D9A47DA22846C0C80@phx.gbl>
References: <BAY107-F241CF41BC9D9A47DA22846C0C80@phx.gbl>
Message-ID: <20061219171929.GA22704@badgers-in-foil.co.uk>

On Tue, Dec 19, 2006 at 03:59:47PM +0000, Foolish Ewe wrote:
> Hi All:
> 
> Thanks for the help (especiallly Ter), in a previous e-mail, I suggested 
> that aggressive buffering in
> in ANTLRInputStream made ANTLR problematic for parsing interactive input, 
> since the
> ANTRLInputStream constructor blocks on reading all input until EOF into a 
> buffer.
> 
> However, I tried making a simple input method that uses Lazy buffering 
> (i.e. reads characters
> on demand extending the buffer).  This lazy input stream no longer blocks 
> on the constructor,
> however, now I've noticed that the CommonTokenStream constructor appears to 
> block.
> It appears to be blocking in fillBuffer, but I don't see an explicit call 
> in the constructor.
> The impact of this is that it negates the interactive support that the lazy 
> buffering of my
> home-grown input stream class, so I'd like to fix it.
> 
> Is there a lazy buffering (buffer as input becomes available/on demand) 
> variant of TokenStream
> support or have I made some error?

I've got this one you can use,

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/java/uk/co/badgersinfoil/metaas/impl/antlr/LinkedListTokenStream.java

It happens to also create a doubly-linked list of Tokens, but you can
just strip that out, I expect.

ta,
dave

-- 
http://david.holroyd.me.uk/

From foolishewe at hotmail.com  Tue Dec 19 10:05:58 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 19 Dec 2006 18:05:58 +0000
Subject: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
Message-ID: <BAY107-F11F98DE1C5C2DB3DFCEB99C0C80@phx.gbl>

Hi Kay:

Thanks to you for the hints.  I'm somewhat restricted in which code I can 
publish without
managerial/legal approval.  I have modified the Expr example from the wiki 
to have some
additional debugging output and created a "MyLazyInputStream" class.  The 
constructor
for this new class is pretty simple, it does an assignment of the input 
stream and allocates
storage to buffer input and does little else (the class' stream position 
pointers, etc.
all use compile time initialization).

Since my last post, I've taken a closer look at my code and discovered that 
I
had statements of the form

        CommonTokenStream tokens = new CommonTokenStream(lexer);
        System.out.println("After TokenStream Constructor, tokens = " + 
tokens + ">");

Instead of dumping the reference address, this appaeared to somehow invoke 
fillbuffer,
when I changed System.out.println to no longer try to print the tokens 
object/reference,
then controll passed into the parser which I think then blocks on 
tokens.fillbuffer();
I removed the dumps of the tokens and parser objects, now the software hangs 
so that
the Eclipse debugger can't break it in the parser.prog (unusual because I 
was able to do this
with all previous examples).

I still suspect that the tokens.fillbuffer() method aggressively buffers 
tokens, but I'll
need to check it more carefully to confirm this, since I'm not sure of why I 
get no output
when I enter
a = 3 + 4

In the Eclipse debugger (I don't know of anyway to get Eclipse to pass an 
EOF on input, it
appears to filter out control D).

Regards:

Bill M.

>From: Kay Roepke <kroepke at classdump.org>
>To: Foolish Ewe <foolishewe at hotmail.com>
>CC: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
>Date: Tue, 19 Dec 2006 17:32:28 +0100
>
>
>On 19. Dec 2006, at 16:59 , Foolish Ewe wrote:
>
>>However, I tried making a simple input method that uses Lazy  buffering 
>>(i.e. reads characters
>>on demand extending the buffer).  This lazy input stream no longer  blocks 
>>on the constructor,
>>however, now I've noticed that the CommonTokenStream constructor  appears 
>>to block.
>
>What do you do in your input stream's constructor? The  CommonTokenStream 
>constructors shouldn't block,
>they just set the members.
>
>>It appears to be blocking in fillBuffer, but I don't see an  explicit call 
>>in the constructor.
>
>fillBuffer is invoked on the first call to LT. Maybe you're seeing  that? 
>Though it doesn't sound
>likely based on what you described...
>
>>The impact of this is that it negates the interactive support that  the 
>>lazy buffering of my
>>home-grown input stream class, so I'd like to fix it.
>>
>>Is there a lazy buffering (buffer as input becomes available/on  demand) 
>>variant of TokenStream
>>support or have I made some error?
>
>No there's nothing like that in the standard distribution. Could you  post 
>some code?
>
>cheers,
>
>-k
>
>--
>Kay R?pke
>http://classdump.org/
>
>
>
>

_________________________________________________________________
Get free, personalized online radio with MSN Radio powered by Pandora 
http://radio.msn.com/?icid=T002MSN03A07001
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Test.java
Type: application/octet-stream
Size: 1035 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061219/7e64b509/attachment.obj 

From foolishewe at hotmail.com  Tue Dec 19 10:09:23 2006
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 19 Dec 2006 18:09:23 +0000
Subject: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
In-Reply-To: <20061219171929.GA22704@badgers-in-foil.co.uk>
Message-ID: <BAY107-F27E2E5C16B0B308DA48022C0C80@phx.gbl>

Thanks Dave:

I'll give this a try, it may be a day or two before I can do it as I've 
other fish to fry at the
moment.  I've given some more background in my reply to Kay Roepke.

Regards:

Bill M.


>From: David Holroyd <dave at badgers-in-foil.co.uk>
>To: antlr-interest at antlr.org
>Subject: Re: [antlr-interest] Aggressive vs. Lazy Buffering in ANTLR
>Date: Tue, 19 Dec 2006 17:19:29 +0000
>
>On Tue, Dec 19, 2006 at 03:59:47PM +0000, Foolish Ewe wrote:
> > Hi All:
> >
> > Thanks for the help (especiallly Ter), in a previous e-mail, I suggested
> > that aggressive buffering in
> > in ANTLRInputStream made ANTLR problematic for parsing interactive 
>input,
> > since the
> > ANTRLInputStream constructor blocks on reading all input until EOF into 
>a
> > buffer.
> >
> > However, I tried making a simple input method that uses Lazy buffering
> > (i.e. reads characters
> > on demand extending the buffer).  This lazy input stream no longer 
>blocks
> > on the constructor,
> > however, now I've noticed that the CommonTokenStream constructor appears 
>to
> > block.
> > It appears to be blocking in fillBuffer, but I don't see an explicit 
>call
> > in the constructor.
> > The impact of this is that it negates the interactive support that the 
>lazy
> > buffering of my
> > home-grown input stream class, so I'd like to fix it.
> >
> > Is there a lazy buffering (buffer as input becomes available/on demand)
> > variant of TokenStream
> > support or have I made some error?
>
>I've got this one you can use,
>
>   
>http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/java/uk/co/badgersinfoil/metaas/impl/antlr/LinkedListTokenStream.java
>
>It happens to also create a doubly-linked list of Tokens, but you can
>just strip that out, I expect.
>
>ta,
>dave
>
>--
>http://david.holroyd.me.uk/

_________________________________________________________________
Get free, personalized online radio with MSN Radio powered by Pandora 
http://radio.msn.com/?icid=T002MSN03A07001


From parrt at cs.usfca.edu  Tue Dec 19 10:49:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 19 Dec 2006 10:49:26 -0800
Subject: [antlr-interest] correction about book pricing
Message-ID: <FB928792-01B9-4B96-B7C3-6EED0660D8C7@cs.usfca.edu>

Hi...from the editor:

> OK actually I was somewhat incorrect about the price of beta book  
> and paper
> book combo.
>
> As an example, here is the price structure for Rails for Java  
> Developers
> (another book I'm editing right now that is in beta):
>
> Retail price for paper book alone: 34.95
> Price on Amazon (Amazon always discounts below retail price): 23.07
> Combo pack price on Pragmatic Bookshelf site (beta book PDF and  
> paper book):
> 43.75
> PDF alone on Pragmatic Bookshelf site: 22.00
>
> So . . . combo of beta PDF and paper book is about $9 more than retail
> price. That includes final PDF of book when it is available, too.  
> Still a
> good deal.

Terence

From nicolai at mainiero.de  Wed Dec 20 05:50:36 2006
From: nicolai at mainiero.de (Nicolai Mainiero)
Date: Wed, 20 Dec 2006 14:50:36 +0100
Subject: [antlr-interest] Get absolute start and end of parsing rule
Message-ID: <662EA063-3E43-4BEF-BEF8-A2F3A845EC1B@mainiero.de>

Hi,

please can you tell me how I can get the beginning and end of an  
matching rulr in the parser like:

functionDec :
	{ // get the beginning of functionDec here}
	'function' paramlist functionbody
	{// get the end of functionDec here}

It seems like the Token Object contains this information when  
converted toString() I get the following [@84,437:444='function',<33>, 
28:0]
		   ^

The marked Value is what I want. So how can I get it?


Yours Nicolai Mainiero
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2421 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061220/e3c1afff/attachment.bin 

From chantal.ackermann at web.de  Wed Dec 20 07:44:14 2006
From: chantal.ackermann at web.de (Chantal Ackermann)
Date: Wed, 20 Dec 2006 16:44:14 +0100
Subject: [antlr-interest]  Unexpected Token dearly expected...
In-Reply-To: <e7e02b7a0612140500k5023c789rf50a569ee8b2946c@mail.gmail.com>
References: <1218503728@web.de>
	<e7e02b7a0612140500k5023c789rf50a569ee8b2946c@mail.gmail.com>
Message-ID: <7d3d01f4e4dda595e3562a485eab8818@web.de>

Hello Kay, hello Dominik, hello all,

thanks for your help!
Case sensitivity really was the problem, oh my...

> Is case sensitivity turned on or off in the lexer? If it is case
> sensitive, that might explain the no viable alt exception.
> You're probably better off by specifying everything in lowercase in
> the recognizer and normalize the input (as you already seem to do
> with umlauts) (klingt immer irgendwie komisch auf Englisch, nicht
> wahr? ;))
>
actually, I do normalize the input to lowercase and break up the 
"umlaute", but I did comment the line where I set caseSensitive=false. 
I did specify all the other tokens in lowercase, and obviously I forgot 
about that while playing around with new expressions...
I might just remove the comment at caseSensitive=false, but I think I 
had some reason to put it there even though I can't remember it 
anymore. So for now I just changed "Stunden" to "stunden". ;-D
Ok, thanks a lot, in any case. This was just the stupid mistake I 
suspected I'd have missed.



Am 14.12.2006 um 14:00 schrieb Dominik Holenstein:

> Just one idea:
> ?
> Your code snippet:
> ?
> STUNDEN_ANGABE
> ?????? :?????? DIGIT " Stunden"
> ?????? ;
> ?
> Try this (not tested yet):
> ?
> STUNDEN_ANGABE
> ?????? :?????? (DIGIT)*?HOURS
> ?????? ;
> ?
> WS
> ????? : (' ' | '\t') {$setType(Token.SKIP);}
> ????? ;
> ?
> protected HOURS
> ?????? : "Stunden"
> ?????? ;
> ?
As the problem was the uppercase letter in "Stunden" this would not 
have solved the problem. But it's always good to have some neat example 
code to get some inspiration from. :-)

Thanks again for your help!
Enjoy your Christmas Holidays!
Chantal


From laggarcia at bol.com.br  Wed Dec 20 10:09:25 2006
From: laggarcia at bol.com.br (=?ISO-8859-1?Q?Leonardo_Augusto_Guimar=E3es_Garcia?=)
Date: Wed, 20 Dec 2006 16:09:25 -0200
Subject: [antlr-interest] C source-to-source translation
Message-ID: <45897C55.3060500@bol.com.br>

Hi!

I am new to ANTLR and I am a bit lost.

I want to create a C source-to-source translator in which I substitute 
some parts of the source code by others. I just found ANTLR and I though 
it suited my needs, however, I am not being able to get started.

Do you think ANTLR is a good tool for what I need? Is there any 
examples/tutorials already available with C source-to-source translation 
(I think this is a recurrent problem and maybe someone has a good 
example so that I can get started)?

I appreciate any help!

Best regards,

Leonardo Garcia

From monty at codetransform.com  Wed Dec 20 10:37:38 2006
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 20 Dec 2006 10:37:38 -0800
Subject: [antlr-interest] C source-to-source translation
In-Reply-To: <45897C55.3060500@bol.com.br>
References: <45897C55.3060500@bol.com.br>
Message-ID: <598864c70612201037x1cb19bf3sb21fb71c0621817b@mail.gmail.com>

Yeah, check out the GCC source to source toolkit on the antlr site.
It also handles plain C (C86, not C99)

Monty

On 12/20/06, Leonardo Augusto Guimar?es Garcia <laggarcia at bol.com.br> wrote:
> Hi!
>
> I am new to ANTLR and I am a bit lost.
>
> I want to create a C source-to-source translator in which I substitute
> some parts of the source code by others. I just found ANTLR and I though
> it suited my needs, however, I am not being able to get started.
>
> Do you think ANTLR is a good tool for what I need? Is there any
> examples/tutorials already available with C source-to-source translation
> (I think this is a recurrent problem and maybe someone has a good
> example so that I can get started)?
>
> I appreciate any help!
>
> Best regards,
>
> Leonardo Garcia
>

From LukeSilver at web.de  Wed Dec 20 14:12:18 2006
From: LukeSilver at web.de (Luke Silver)
Date: Wed, 20 Dec 2006 23:12:18 +0100
Subject: [antlr-interest] lexer and parser implementation in ANTLRv3
Message-ID: <32733344@web.de>

Hi,

I?ve generated an ANTLRv3 lexer and parser for my grammar and now I would like to integrate this files (myLexer.java, myParser.java) in my project. My problem is that the input string for a test grammar is not of the type "CharStream" it?s of the Type "StringReader" (Java5).
There is a good description in the ANTLR reference manual (Java Runtime Model, lexer and parser implementation) of how to implement more constructors for the lexer and the parser but this is for ANTLRv2.7. How can I implement a constructor of the type "StringReader" in ANTLRv3? Or is a constructor a false attempt?

Here is a part of my project:


//grammar of type StringReader

public static Class classmethod(Reader grammar) {

try {

MyLexer lexer = new MyLexer(grammar);

CommonTokenStream tokens = new CommonTokenStream(lexer);

MyParser parser = new MyParser(tokens);


// parse grammar

parser.firstrule();

}

catch ...



Best wishes,

Luke
______________________________________________________________________________
"Ein Herz f?r Kinder" - Ihre Spende hilft! Aktion: www.deutschlandsegelt.de
Unser Dankesch?n: Ihr Name auf dem Segel der 1. deutschen America's Cup-Yacht!


From alexander at gaengel.de  Wed Dec 20 19:03:11 2006
From: alexander at gaengel.de (=?ISO-8859-15?Q?Alexander_G=E4ngel?=)
Date: Thu, 21 Dec 2006 04:03:11 +0100 (MET)
Subject: [antlr-interest] Problem with Backtrack
Message-ID: <4589F9AF.1070707@gaengel.de>

My Grammar uses the backtrack option.

but now I have a Problem, after I check a predicate it wont match my Input.

if I remove the Backtrack Option It works. (can't I use Backtrack and
Predicates tried it before an I worked I think)

I use AntlrWorks 1.0b8

could somebody tell me, if there is something wrong with my grammar?

Alexander G?ngel

------------------------------------------------------------------------

the start rule is: oclExpression

the not working Input: validFrom.mod

hier is the Grammar:

grammar ocl;

options  {
    backtrack=true;
    k=2;
    output=AST;
    ASTLabelType=CommonTree;
    }
 
tokens {
    Var;
    Type;
    TupleType;
    Collection;
    IfExpression;
    VariableExp;
    CollectionRange;
}

@members {
    boolean op = false;
}

typeCS    :
    collectionTypeCS -> ^(Type collectionTypeCS)
    | Identifier -> ^(Type Identifier)
    |tupleTypes -> ^(Type  tupleTypes)
    ;
   
   
collectionTypeCS
    :
    collectionTypeIdentifier '(' typeCS ')' -> ^(Collection
collectionTypeIdentifier typeCS)
    ;
   
tupleTypes
    :
    'TupleType' '(' variableDeclaration ')' -> ^(TupleType
variableDeclaration)
    ;

oclExpression            
    :
    (
     oclExpression_direct
    (
        ( ocl_or_operation)* (standard_operation  oclExpression  )*)
    )
    |'('oclExpression')'
    ;
   
ocl_or_operation
    :
    ('.'{op=true;}(oclExpression|ocl_operations))
    ;

ocl_operations
    :
    {op}?
    ('mod'^|'div'^){op=false;}
    ;

oclExpression_direct
    :   
    (    (literalExp-> literalExp)
        |
        (variableExp-> variableExp)
        |
        (ifExpression-> ifExpression)
    )
    ;   

standard_operation
    :   
    OP_Plus   
    ;   
   

literalExp
    :
    collectionLiteralExp
    |tupleLiteralExp
    ;
   
tupleLiteralExp
    :   
    integerLiteral
    |RealLiteral
    |StringLiteral
    |booleanLiteral
    ;   
   
collectionLiteralExp
    :
    collectionTypeIdentifier '{'collectionLiteralParts '}' ->
^(collectionTypeIdentifier collectionLiteralParts)
    ;   
   
collectionLiteralParts
    :
    collectionLiteralPart (',' collectionLiteralPart)*   ->
^(collectionLiteralPart)+
    ;
   
collectionLiteralPart
    :
    oclExpression -> ^(oclExpression)
    |collectionRange -> ^(collectionRange)
    ;   
   
collectionRange
    :
    oclExpression '..' oclExpression -> ^(CollectionRange
oclExpression+)   
    ;   


variableExp
    :
    Identifier ('('oclExpression?')')? -> ^(Identifier oclExpression?)   
    ;
   
   
ifExpression
    :
    ifpart
    thenpart
    elsepart
    'endif'
    ;
   
   
ifpart    :
    'if' oclExpression -> ^('if' ^(oclExpression))
    ;
   
thenpart    :
    'then' oclExpression -> ^('then' ^(oclExpression))
    ;
   
   
elsepart    :
    'else' oclExpression -> ^('else' ^(oclExpression))
    ;           
       
variableDeclaration
    :
    Identifier (Colon typeCS)? ( '=' oclExpression)?
    ->  ^(Var Identifier typeCS? oclExpression?)
    ;
   
collectionTypeIdentifier
    :
    'Set'
    |'Bag'
    |'Sequence'
    |'OrderedSet'
    |'Collection'
    ;
       
// LEXER
Identifier
    :   ('a'..'z'|'A'..'Z'|'_') (Letter)*
        ;

fragment
Letter   
        :'a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$';


WS    :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=99;}
    ;

COMMENT
    :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=99;}
    ;

LINE_COMMENT
       : ('//'|'--') ~('\n'|'\r')* '\r'? '\n' {$channel=99;}
    ;
   
Colon   :                
    ':'
    ;
   
StringLiteral    :
     '\''  ~('\'')* '\''   {setText(getText().substring(1,
getText().length()-1));}
     ;
   
booleanLiteral    :   
    'true'| 'false'
    ;           
   
RealLiteral
    :   
        //'.' ('0'..'9')+ Exponent? FloatTypeSuffix?
      ('0'..'9')+
        (
            (Exponent FloatTypeSuffix?)|(FloatTypeSuffix)
                |('.' ('0'..'9')+) Exponent? FloatTypeSuffix?
        );

fragment
Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

fragment
FloatTypeSuffix : ('f'|'F'|'d'|'D') ;

integerLiteral
    :   HexLiteral
    |   OctalLiteral
    |   DecimalLiteral
    ;

HexLiteral : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;

DecimalLiteral : ('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;

OctalLiteral :  '0' ('0'..'7')+ IntegerTypeSuffix? ;

fragment
HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
IntegerTypeSuffix : ('l'|'L') ;

OP_Plus    :    '+';

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061221/370bb197/attachment.html 

From mark.mandel at gmail.com  Thu Dec 21 22:48:15 2006
From: mark.mandel at gmail.com (Mark Mandel)
Date: Fri, 22 Dec 2006 17:48:15 +1100
Subject: [antlr-interest] Starting my first parser...
Message-ID: <4153ee230612212248x3b1e793euc3ce6367dc7402a9@mail.gmail.com>

Hey all,

Totally language parser / compiler newbie here, so please go easy.

I've done as much reading as I can, and even tried a bunch of stuff,
but I can't seem to wrap my head around one very simple thing.

The case I'm working on is I'm writing a HQL like (I say 'like', but
in actuality it will probably be almost identical) syntax for my
ColdFusion ORM.

To start with, I'm just wanting to parse a most basic simple HQL like
string that looks like:

select emails.Email.emailid from emails.Email where
emails.Email.emailName = :emailName

No subselects, nothing fancy, just a simple select looking like that.

Now, where I first get stuck is basically at the Lexer point, and with
look ahead.

The way I'm seeing it (and I think this sounds right), the rule for
emails.Email.emailid is something like:

identifier : a..z ( a..z | 0..9 | '_' | '.' )*

Which basically means, anything that is alpha numeric, has a . or a _ in it.

Where I get confused is, a Lexer definition like:

select: 'select'

Could possibly be a identifier when parsing... as the string 'select'
also fits the definition of identifier, so how can I tell ANTLR to
check for that, short of setting k=7 or something similar? or is that
the only way?

I've looked at similar SQL grammars, and the HQL grammar, and they
seem quite happy with a k=2, but I don't get how they have managed to
do that.  I feel like I'm missing a penny dropping moment.

I've also just downloaded and started looking at AntrWorks 1.08b,
which is amazing, but haven't really started delving into it yet, but
I will start playing with it shortly.

Any and all help will be appreciated - even if its just 'go read over here'

Thanks,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From dave at badgers-in-foil.co.uk  Fri Dec 22 02:30:23 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 22 Dec 2006 10:30:23 +0000
Subject: [antlr-interest] Starting my first parser...
In-Reply-To: <4153ee230612212248x3b1e793euc3ce6367dc7402a9@mail.gmail.com>
References: <4153ee230612212248x3b1e793euc3ce6367dc7402a9@mail.gmail.com>
Message-ID: <20061222103023.GA9522@badgers-in-foil.co.uk>

On Fri, Dec 22, 2006 at 05:48:15PM +1100, Mark Mandel wrote:
> To start with, I'm just wanting to parse a most basic simple HQL like
> string that looks like:
> 
> select emails.Email.emailid from emails.Email where
> emails.Email.emailName = :emailName
[...]
> The way I'm seeing it (and I think this sounds right), the rule for
> emails.Email.emailid is something like:
> 
> identifier : a..z ( a..z | 0..9 | '_' | '.' )*
> 
> Which basically means, anything that is alpha numeric, has a . or a _ in it.

Consider making '.' a seperate token from IDENTIFIER, so that you can
easily allow whitespace between a '.' and an identifier-part.

> Where I get confused is, a Lexer definition like:
> 
> select: 'select'
> 
> Could possibly be a identifier when parsing... as the string 'select'
> also fits the definition of identifier, so how can I tell ANTLR to
> check for that, short of setting k=7 or something similar? or is that
> the only way?
> 
> I've looked at similar SQL grammars, and the HQL grammar, and they
> seem quite happy with a k=2, but I don't get how they have managed to
> do that.  I feel like I'm missing a penny dropping moment.

The HQL grammar uses an action to call a weakKeywords() method, defined
in a Parser subclass, here, I think,

http://anonsvn.jboss.org/repos/hibernate/trunk/Hibernate3/src/org/hibernate/hql/ast/HqlParser.java

This appears to do the magic of transumting keywords into identifiers
were allowed.  Also, the HQL lexer has

  options { testLiterals=true; }

in the definition of it's IDENT token,

  http://anonsvn.jboss.org/repos/hibernate/trunk/Hibernate3/grammar/hql.g


> I've also just downloaded and started looking at AntrWorks 1.08b,
> which is amazing, but haven't really started delving into it yet, but
> I will start playing with it shortly.

NB. AltlrWorks is for ANTLR v3, while the above examples are for v2.


ta,
dave

-- 
http://david.holroyd.me.uk/

From TomL at avokia.com  Fri Dec 22 08:21:00 2006
From: TomL at avokia.com (Tom Liu)
Date: Fri, 22 Dec 2006 11:21:00 -0500
Subject: [antlr-interest] performance of the C runtime for ANTLR 3
In-Reply-To: <20061208225820.A5F4CFFE@mail.intersystems.com>
Message-ID: <C8EB616CF20CA143AD2DE9BF45C911B4ED98D3@cx41.800onemail.com>

Hi Jim

 

Do you know if there are general performance comparison information

between the C parsers and java parsers all generated by antlr ?

 

 

Merry Christmas

 

Tom


--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.14/578 - Release Date:
12/7/2006 1:27 AM



--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061222/82491129/attachment.html 

From parrt at cs.usfca.edu  Fri Dec 22 10:58:43 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Dec 2006 10:58:43 -0800
Subject: [antlr-interest] TreeNodeStream implementation
Message-ID: <079AE98D-F70F-43EF-B164-EDFD604B4EA4@cs.usfca.edu>

Heh, I've been building a node stream that is much faster and simpler  
than current CommonTreeNodeStream, but requires that I make an array  
of node pointers that point into the tree.  It will be much more  
suitable to interpreters etc... because it can jump around.  So it's  
faster and simpler, but costs memory for that array.

Q: Shall I make this the CommonTreeNodeStream and then make current  
one another name like UnbufferedTreeNodeStream?

Later I will even make an IndexedTreeNodeStream for really fast rule- 
based translation...where are my grad students when I need them!  Oh,  
I don't have any...that's right.

I know most people in western world are on vacation, but anybody from  
Asia or wherever wanna comment?  Should we buffer the tree node  
stream just like we do for the token streams by default?

Ter

From parrt at cs.usfca.edu  Fri Dec 22 11:00:54 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Dec 2006 11:00:54 -0800
Subject: [antlr-interest] Problem with Backtrack
In-Reply-To: <4589F9AF.1070707@gaengel.de>
References: <4589F9AF.1070707@gaengel.de>
Message-ID: <7644508B-78F1-4476-B700-2B471AB30B3F@cs.usfca.edu>

Hi, must be related to actions, which are not executed during  
backtracking...init actions are executed though...
Ter
On Dec 20, 2006, at 7:03 PM, Alexander G?ngel wrote:

> My Grammar uses the backtrack option.
>
> but now I have a Problem, after I check a predicate it wont match  
> my Input.
>
> if I remove the Backtrack Option It works. (can't I use Backtrack  
> and Predicates tried it before an I worked I think)
>
> I use AntlrWorks 1.0b8
>
> could somebody tell me, if there is something wrong with my grammar?
>
> Alexander G?ngel
>
>
> the start rule is: oclExpression
>
> the not working Input: validFrom.mod
>
> hier is the Grammar:
>
> grammar ocl;
>
> options  {
>     backtrack=true;
>     k=2;
>     output=AST;
>     ASTLabelType=CommonTree;
>     }
>
> tokens {
>     Var;
>     Type;
>     TupleType;
>     Collection;
>     IfExpression;
>     VariableExp;
>     CollectionRange;
> }
>
> @members {
>     boolean op = false;
> }
>
> typeCS    :
>     collectionTypeCS -> ^(Type collectionTypeCS)
>     | Identifier -> ^(Type Identifier)
>     |tupleTypes -> ^(Type  tupleTypes)
>     ;
>
>
> collectionTypeCS
>     :
>     collectionTypeIdentifier '(' typeCS ')' -> ^(Collection  
> collectionTypeIdentifier typeCS)
>     ;
>
> tupleTypes
>     :
>     'TupleType' '(' variableDeclaration ')' -> ^(TupleType  
> variableDeclaration)
>     ;
>
> oclExpression
>     :
>     (
>      oclExpression_direct
>     (
>         ( ocl_or_operation)* (standard_operation  oclExpression  )*)
>     )
>     |'('oclExpression')'
>     ;
>
> ocl_or_operation
>     :
>     ('.'{op=true;}(oclExpression|ocl_operations))
>     ;
>
> ocl_operations
>     :
>     {op}?
>     ('mod'^|'div'^){op=false;}
>     ;
>
> oclExpression_direct
>     :
>     (    (literalExp-> literalExp)
>         |
>         (variableExp-> variableExp)
>         |
>         (ifExpression-> ifExpression)
>     )
>     ;
>
> standard_operation
>     :
>     OP_Plus
>     ;
>
>
> literalExp
>     :
>     collectionLiteralExp
>     |tupleLiteralExp
>     ;
>
> tupleLiteralExp
>     :
>     integerLiteral
>     |RealLiteral
>     |StringLiteral
>     |booleanLiteral
>     ;
>
> collectionLiteralExp
>     :
>     collectionTypeIdentifier '{'collectionLiteralParts '}' -> ^ 
> (collectionTypeIdentifier collectionLiteralParts)
>     ;
>
> collectionLiteralParts
>     :
>     collectionLiteralPart (',' collectionLiteralPart)*   -> ^ 
> (collectionLiteralPart)+
>     ;
>
> collectionLiteralPart
>     :
>     oclExpression -> ^(oclExpression)
>     |collectionRange -> ^(collectionRange)
>     ;
>
> collectionRange
>     :
>     oclExpression '..' oclExpression -> ^(CollectionRange  
> oclExpression+)
>     ;
>
>
> variableExp
>     :
>     Identifier ('('oclExpression?')')? -> ^(Identifier oclExpression?)
>     ;
>
>
> ifExpression
>     :
>     ifpart
>     thenpart
>     elsepart
>     'endif'
>     ;
>
>
> ifpart    :
>     'if' oclExpression -> ^('if' ^(oclExpression))
>     ;
>
> thenpart    :
>     'then' oclExpression -> ^('then' ^(oclExpression))
>     ;
>
>
> elsepart    :
>     'else' oclExpression -> ^('else' ^(oclExpression))
>     ;
>
> variableDeclaration
>     :
>     Identifier (Colon typeCS)? ( '=' oclExpression)?
>     ->  ^(Var Identifier typeCS? oclExpression?)
>     ;
>
> collectionTypeIdentifier
>     :
>     'Set'
>     |'Bag'
>     |'Sequence'
>     |'OrderedSet'
>     |'Collection'
>     ;
>
> // LEXER
> Identifier
>     :   ('a'..'z'|'A'..'Z'|'_') (Letter)*
>         ;
>
> fragment
> Letter
>         :'a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$';
>
>
> WS    :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=99;}
>     ;
>
> COMMENT
>     :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=99;}
>     ;
>
> LINE_COMMENT
>        : ('//'|'--') ~('\n'|'\r')* '\r'? '\n' {$channel=99;}
>     ;
>
> Colon   :
>     ':'
>     ;
>
> StringLiteral    :
>      '\''  ~('\'')* '\''   {setText(getText().substring(1, getText 
> ().length()-1));}
>      ;
>
> booleanLiteral    :
>     'true'| 'false'
>     ;
>
> RealLiteral
>     :
>         //'.' ('0'..'9')+ Exponent? FloatTypeSuffix?
>       ('0'..'9')+
>         (
>             (Exponent FloatTypeSuffix?)|(FloatTypeSuffix)
>                 |('.' ('0'..'9')+) Exponent? FloatTypeSuffix?
>         );
>
> fragment
> Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;
>
> fragment
> FloatTypeSuffix : ('f'|'F'|'d'|'D') ;
>
> integerLiteral
>     :   HexLiteral
>     |   OctalLiteral
>     |   DecimalLiteral
>     ;
>
> HexLiteral : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;
>
> DecimalLiteral : ('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;
>
> OctalLiteral :  '0' ('0'..'7')+ IntegerTypeSuffix? ;
>
> fragment
> HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;
>
> fragment
> IntegerTypeSuffix : ('l'|'L') ;
>
> OP_Plus    :    '+';
>


From parrt at cs.usfca.edu  Fri Dec 22 11:01:41 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Dec 2006 11:01:41 -0800
Subject: [antlr-interest] lexer and parser implementation in ANTLRv3
In-Reply-To: <32733344@web.de>
References: <32733344@web.de>
Message-ID: <6EE7C657-3368-4A1F-BD2C-BDD221516EC4@cs.usfca.edu>

Hi.  Isn't there a ANTLRReaderStream in your distribution?
Ter


From jimi at intersystems.com  Fri Dec 22 11:15:03 2006
From: jimi at intersystems.com (Jim Idle)
Date: Fri, 22 Dec 2006 14:15:03 -0500
Subject: [antlr-interest] performance of the C runtime for ANTLR 3
In-Reply-To: <C8EB616CF20CA143AD2DE9BF45C911B4ED98D3@cx41.800onemail.com>
Message-ID: <20061222191453.3FAFC11D8@mail.intersystems.com>

I ought to do some tests, but my own query language parser was first
done in java and took forever to load and get going (fault of java not
the code really), though I could have course have pre-loaded it and so
on. Once it was going it was pretty OK. The C version however is many
many times quicker. So, my on experience says that it is very much
better, but I can't give you anything specific until I do some real
tests. I have also been running profiling on the out and will be making
general tweaks to improve performance over time.

 

Jim 

 

________________________________

From: Tom Liu [mailto:TomL at avokia.com] 
Sent: Friday, December 22, 2006 8:21 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: performance of the C runtime for ANTLR 3

 

Hi Jim

 

Do you know if there are general performance comparison information

between the C parsers and java parsers all generated by antlr ?

 

 

Merry Christmas

 

Tom


--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.14/578 - Release Date:
12/7/2006 1:27 AM



--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this outgoing message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.15/579 - Release Date:
12/7/2006 1:31 PM



--
No virus found in this incoming message.
Checked by AVG Free Edition.
Version: 7.5.432 / Virus Database: 268.15.26/597 - Release Date:
12/21/2006 6:45 PM


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061222/e67921bd/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Dec 22 12:54:17 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Dec 2006 12:54:17 -0800
Subject: [antlr-interest] tree interpreters and node streams
Message-ID: <AC113BF1-8903-44F6-8651-19576C782A3F@cs.usfca.edu>

Hi,

Just made some big changes in the tree node stream stuff to support  
interpreters.The issue was that the current tree nodes stream did not  
buffer any node pointers so it was not really suited for  
interpreters, which need to jump around in the treenode stream quite  
a bit. When building the buffered version, I noticed that it was much  
simpler and faster than the unbuffered version so I have made it the  
common treenode stream.  It has extra methods for push and pop of  
indexes so that you can make an interpreter that jumps around. I've  
re-factored the unit tests for treenode stream and added a few tests  
for the push and pop.

Also, importantly, made CommonTreeNodeStream work with any tree node  
type. It assumes object now and uses an adapter.

* New CommonTreeNodeStream buffers all nodes in stream for fast jumping
   around.  It now has push/pop methods to invoke other locations in
   the stream for building interpreters.

* Moved CommonTreeNodeStream to UnBufferedTreeNodeStream and removed
   Iterator implementation.  moved toNodesOnlyString() to  
TestTreeNodeStream

* [BREAKS ANY TREE IMPLEMENTATION]
   made CommonTreeNodeStream work with any tree node type.  TreeAdaptor
   now implements isNil so must add; trivial, but does break back
   compatibility.

Okay, back to writing the book. Finished tree construction, tree  
parsing chapters.  Now templates, error reporting, intro and I'm done!

Ter

From antlr at telenet.be  Fri Dec 22 16:42:19 2006
From: antlr at telenet.be (Bill Mayfield)
Date: Sat, 23 Dec 2006 01:42:19 +0100
Subject: [antlr-interest] When will the beta book be available?
Message-ID: <458C7B6B.8030709@telenet.be>

Hi Terence,

First a BIG BIG BIG thank you for the work you've put into ANTLR 3!!! 
It's such an improvement over ANTLR 2... I like it! Great work! :-)

Any idea on when the pdf (beta) version of the book will be available. 
You don't know how many times I have wished I had access to your 
knowledge right now! Would gladly pay 5 times the price just for that ;-)


A merry christmas to you and your family...

Bill

From parrt at cs.usfca.edu  Fri Dec 22 17:02:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Dec 2006 17:02:09 -0800
Subject: [antlr-interest] added tree-based interpreter tutorial
Message-ID: <BEF2F6B0-C017-478D-8314-FDB7B71B46AB@cs.usfca.edu>

Added a tutorial, which was impetus for  a bunch of changes for 3.0b6  
(which have been pushed to the depot, you can grab the latest from  
the repository browser).

Couldn't really build a tree-based interpreter before, but now you  
can as demonstrated in the tutorial:

http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter

Ter

From parrt at cs.usfca.edu  Fri Dec 22 17:07:24 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 22 Dec 2006 17:07:24 -0800
Subject: [antlr-interest] When will the beta book be available?
In-Reply-To: <458C7B6B.8030709@telenet.be>
References: <458C7B6B.8030709@telenet.be>
Message-ID: <FB44E317-8C58-4E42-A53F-87B8AB6E87E2@cs.usfca.edu>


On Dec 22, 2006, at 4:42 PM, Bill Mayfield wrote:

> Hi Terence,
>
> First a BIG BIG BIG thank you for the work you've put into ANTLR  
> 3!!! It's such an improvement over ANTLR 2... I like it! Great  
> work! :-)

Thanks!  It's been a long 3.5 years (working every day including  
weekends except for the past few months). I really do think I  
understand parser generators now and this tool is the culmination of  
everything I've learned about parsing and just plain coding in general.

> Any idea on when the pdf (beta) version of the book will be  
> available. You don't know how many times I have wished I had access  
> to your knowledge right now! Would gladly pay 5 times the price  
> just for that ;-)

Should I up the price of the book? ;)

The development editor and the other hip cats at pragmatic  
programmers bookshelf are evaluating the book as we speak and  
hopefully first week of January or second week you'll have a beta  
version that includes most of the stuff.  Just posted a tutorial  
(with almost no text) on building a tree-based interpreter.  I think  
you will enjoy... requires the absolute up to the second version of  
the tool but hey ;) I made a huge number of improvements today to  
support building interpreters.  I decided this was too much for the  
current book, which is really a reference manual.  The next book will  
be all about building domain specific languages.

> A merry christmas to you and your family...

Thanks, Bill.  Happy holidays. :)

Ter

From mark.mandel at gmail.com  Fri Dec 22 17:29:24 2006
From: mark.mandel at gmail.com (Mark Mandel)
Date: Sat, 23 Dec 2006 12:29:24 +1100
Subject: [antlr-interest] Starting my first parser...
In-Reply-To: <20061222103023.GA9522@badgers-in-foil.co.uk>
References: <4153ee230612212248x3b1e793euc3ce6367dc7402a9@mail.gmail.com>
	<20061222103023.GA9522@badgers-in-foil.co.uk>
Message-ID: <4153ee230612221729w4053a533p5376b5fcab6494c@mail.gmail.com>

Thanks for pointing me in the right direction.

>
> The HQL grammar uses an action to call a weakKeywords() method, defined
> in a Parser subclass, here, I think,
>
> http://anonsvn.jboss.org/repos/hibernate/trunk/Hibernate3/src/org/hibernate/hql/ast/HqlParser.java
>
> This appears to do the magic of transumting keywords into identifiers
> were allowed.  Also, the HQL lexer has
>
>   options { testLiterals=true; }
>
> in the definition of it's IDENT token,
>
>   http://anonsvn.jboss.org/repos/hibernate/trunk/Hibernate3/grammar/hql.g
>
>
> > I've also just downloaded and started looking at AntrWorks 1.08b,
> > which is amazing, but haven't really started delving into it yet, but
> > I will start playing with it shortly.
>
> NB. AltlrWorks is for ANTLR v3, while the above examples are for v2.

Duly noted, but just to make life more complicated for myself, figured
I'd move onto Antlr3.. just looking at the example grammer files, I
think I find it a little more intuitive.

Also being able to see the diagram for lexers and parsers makes the
learning process *a lot* easier.

Thanks for your help.

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From woods.kirk at gmail.com  Fri Dec 22 22:19:08 2006
From: woods.kirk at gmail.com (Kirk Woods)
Date: Sat, 23 Dec 2006 00:19:08 -0600
Subject: [antlr-interest] TreeNodeStream implementation
In-Reply-To: <079AE98D-F70F-43EF-B164-EDFD604B4EA4@cs.usfca.edu>
References: <079AE98D-F70F-43EF-B164-EDFD604B4EA4@cs.usfca.edu>
Message-ID: <ae0488d00612222219l3394ccbbq95e3b074a5899a93@mail.gmail.com>

I vote for faster and simpler. Memory is cheap and continues to get
cheaper.  If someone is on an older machine lacking memory, they can use the
UnbufferedTreeNodeStream.

Kirk

On 12/22/06, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Heh, I've been building a node stream that is much faster and simpler
> than current CommonTreeNodeStream, but requires that I make an array
> of node pointers that point into the tree.  It will be much more
> suitable to interpreters etc... because it can jump around.  So it's
> faster and simpler, but costs memory for that array.
>
> Q: Shall I make this the CommonTreeNodeStream and then make current
> one another name like UnbufferedTreeNodeStream?
>
> Later I will even make an IndexedTreeNodeStream for really fast rule-
> based translation...where are my grad students when I need them!  Oh,
> I don't have any...that's right.
>
> I know most people in western world are on vacation, but anybody from
> Asia or wherever wanna comment?  Should we buffer the tree node
> stream just like we do for the token streams by default?
>
> Ter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061223/a3f797c9/attachment.html 

From ilia at obnovlenie.ru  Sat Dec 23 02:48:51 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 23 Dec 2006 13:48:51 +0300
Subject: [antlr-interest] How to store data in token?
In-Reply-To: <ebc876d70609271747l15507edagc3ecc02007c8cf6c@mail.gmail.com>
References: <OF4B904AC1.844D125A-ONC12571F6.00462B4C-C12571F6.0046B131@Axi.be>
	<D62D4EA4-7A6F-4239-96F6-9BE681EE0169@cs.usfca.edu>
	<ebc876d70609271747l15507edagc3ecc02007c8cf6c@mail.gmail.com>
Message-ID: <200612231348.51109.ilia@obnovlenie.ru>


I'd like to adapt something like

body: command? BLOCK {$body.mainBlock=$BLOCK};

That is: evaluate and store important data in token.

Is such kind of thing possible ?

From ilia at obnovlenie.ru  Sat Dec 23 04:28:01 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 23 Dec 2006 15:28:01 +0300
Subject: [antlr-interest] How to store data in token?
In-Reply-To: <200612231348.51109.ilia@obnovlenie.ru>
References: <OF4B904AC1.844D125A-ONC12571F6.00462B4C-C12571F6.0046B131@Axi.be>
	<ebc876d70609271747l15507edagc3ecc02007c8cf6c@mail.gmail.com>
	<200612231348.51109.ilia@obnovlenie.ru>
Message-ID: <200612231528.01715.ilia@obnovlenie.ru>


> I'd like to adapt something like
>
> body: command? BLOCK {$body.mainBlock=$BLOCK};
>
> That is: evaluate and store important data in token.
>
> Is such kind of thing possible ?
Wow, just got to reading new 
http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter and b6 
stuff. 

Can be just what I've been waiting for so long!

From ilia at obnovlenie.ru  Sat Dec 23 05:16:36 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 23 Dec 2006 16:16:36 +0300
Subject: [antlr-interest] Where can I get 3.0b6 ?
Message-ID: <200612231616.36661.ilia@obnovlenie.ru>


I see, tutorial is meant for 3.0b6 ,
but the most recent version I could find is 
http://www.antlr.org/download/antlr-3.0b5.tar.gz

Not yet published, um ?

From aspitz at gmail.com  Sat Dec 23 06:00:42 2006
From: aspitz at gmail.com (Ayal Spitz)
Date: Sat, 23 Dec 2006 09:00:42 -0500
Subject: [antlr-interest] added tree-based interpreter tutorial
In-Reply-To: <BEF2F6B0-C017-478D-8314-FDB7B71B46AB@cs.usfca.edu>
References: <BEF2F6B0-C017-478D-8314-FDB7B71B46AB@cs.usfca.edu>
Message-ID: <a54e7a220612230600i209302f8mdb2f9dcc064013a8@mail.gmail.com>

Ter -

How does one find the repository to get access to the latest version of ANTR?

- AYAL

On 12/22/06, Terence Parr <parrt at cs.usfca.edu> wrote:
> Added a tutorial, which was impetus for  a bunch of changes for 3.0b6
> (which have been pushed to the depot, you can grab the latest from
> the repository browser).
>
> Couldn't really build a tree-based interpreter before, but now you
> can as demonstrated in the tutorial:
>
> http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter
>
> Ter
>

From kroepke at classdump.org  Sat Dec 23 06:06:17 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 23 Dec 2006 15:06:17 +0100
Subject: [antlr-interest] Where can I get 3.0b6 ?
In-Reply-To: <200612231616.36661.ilia@obnovlenie.ru>
References: <200612231616.36661.ilia@obnovlenie.ru>
Message-ID: <ABD92BBA-773C-4C57-B9B7-09443A959058@classdump.org>


On 23. Dec 2006, at 14:16 , Ilia Kantor wrote:

>
> I see, tutorial is meant for 3.0b6 ,
> but the most recent version I could find is
> http://www.antlr.org/download/antlr-3.0b5.tar.gz
>
> Not yet published, um ?

That's correct. However, you can get the latest depot version
at <http://fisheye2.cenqua.com/browse/antlr>. That version is
labeled as 3.0b6, albeit with '??' as the release date. That way
you can tell if you are running an unreleased version.

There are three links in the lower left-hand corner that give you a
tarball in various archive formats.

Of course, these version need not be stable and may contain incompatible
changes. Be sure to look into the README file for the changelog.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sat Dec 23 06:08:18 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 23 Dec 2006 15:08:18 +0100
Subject: [antlr-interest] added tree-based interpreter tutorial
In-Reply-To: <a54e7a220612230600i209302f8mdb2f9dcc064013a8@mail.gmail.com>
References: <BEF2F6B0-C017-478D-8314-FDB7B71B46AB@cs.usfca.edu>
	<a54e7a220612230600i209302f8mdb2f9dcc064013a8@mail.gmail.com>
Message-ID: <852D77D4-37E7-4EC7-A3F1-A20F2C919445@classdump.org>


On 23. Dec 2006, at 15:00 , Ayal Spitz wrote:

> How does one find the repository to get access to the latest  
> version of ANTR?

See my other post, or don't bother and read it here ;)

<http://fisheye2.cenqua.com/browse/antlr>

The link is in the download section at <http://antlr.org/v3/index.html>.
It's the first one in that section.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From ilia at obnovlenie.ru  Sat Dec 23 08:55:31 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 23 Dec 2006 19:55:31 +0300
Subject: [antlr-interest] Tree parser to compress some tokens
Message-ID: <200612231955.31105.ilia@obnovlenie.ru>


Hello,

I wrote parser for a grammar with rules:

id : namechar+;

alpha_num
	:	DIGIT | LETTER_ENG;

namechar
    : alpha_num | '_'
    ;

rule_output
	:	s_output id body -> ^(s_output id body);

BLOCK : '{' (BLOCK | ~('{'|'}'))* '}' ;
body: BLOCK;

But resulting AST for "output test {..}" has

"output" "t" "e" "s" "t" "{...}"

How to write a tree parser that will compress such "t" "e" "s" "t" sequences 
(parts of single id) into one token with "test" string ?
 

From parrt at cs.usfca.edu  Sat Dec 23 09:02:56 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 23 Dec 2006 09:02:56 -0800
Subject: [antlr-interest] Tree parser to compress some tokens
In-Reply-To: <200612231955.31105.ilia@obnovlenie.ru>
References: <200612231955.31105.ilia@obnovlenie.ru>
Message-ID: <168F4607-1184-4685-85A2-0268FA4A2D82@cs.usfca.edu>

Hi.  Don't match characters in the parser.  use ID and NAMECHAR and  
ALPHA_NUM.  then s : ID ;
Ter
On Dec 23, 2006, at 8:55 AM, Ilia Kantor wrote:

>
> Hello,
>
> I wrote parser for a grammar with rules:
>
> id : namechar+;
>
> alpha_num
> 	:	DIGIT | LETTER_ENG;
>
> namechar
>     : alpha_num | '_'
>     ;
>
> rule_output
> 	:	s_output id body -> ^(s_output id body);
>
> BLOCK : '{' (BLOCK | ~('{'|'}'))* '}' ;
> body: BLOCK;
>
> But resulting AST for "output test {..}" has
>
> "output" "t" "e" "s" "t" "{...}"
>
> How to write a tree parser that will compress such "t" "e" "s" "t"  
> sequences
> (parts of single id) into one token with "test" string ?
>


From ilia at obnovlenie.ru  Sat Dec 23 10:14:57 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 23 Dec 2006 21:14:57 +0300
Subject: [antlr-interest] How to recognize 'grammar' in parser ?
Message-ID: <200612232114.57582.ilia@obnovlenie.ru>


I wrote simple grammar that should recognize 'grammar <name>;' in parser.
But somehow it fails on 'grammar <gr...>;' example.

Looks like I need to change to lookahead or another method ?


---------------- Test grammar ---------------
grammar Gram;

options {
    output=AST;
    ASTLabelType=CommonTree;
}

DIGIT
    :    '0'..'9'
    ;

LETTER_ENG
    : 'a'..'z'
    | 'A'..'Z'
    ;
    
WS  :
       (' '|'\r'|'\t'|'\u000C'|'\n' )+ {$channel=HIDDEN;}
    ;
    

id : namechar+;



alpha_num
	:	DIGIT | LETTER_ENG;

namechar
    : alpha_num | '_'
    ;

document : grammar_definition;

s_grammar
	:	'grammar';
	
grammar_definition: s_grammar id ';' -> ^(s_grammar id);

--------------------------- Test input

grammar gr;

------------------------- Output

[mTokens, mT8]: line 2:10 mismatched char: ';' on line 2; expecting char 'a'
[document, grammar_definition, id]: line 0:-1 required (...)+ loop 
(decision=1) did not match anything; token=[@-1,0:0='<no text>',<-1>,0:-1]

From alexander.berger at gmx.ch  Sun Dec 24 01:57:20 2006
From: alexander.berger at gmx.ch (ab)
Date: Sun, 24 Dec 2006 10:57:20 +0100
Subject: [antlr-interest] Antlr 3 generates very big java classes which do
	not compile
Message-ID: <200612241057.20778.alexander.berger@gmx.ch>

Hi Everybody

Using the latest ANTLR 3 copy to generate a lexer and parser I encountered the 
following two problems:

If I generate a Lexer with the grammar below (a pseudo lexer grammar for 
PL/SQL keywords) antlr generates a Java source file of about 15MBs in size, ?
which will not compile because the size of its mToken member function exceeds 
the 65535 bytes limit for java function size.

Something similar happens if I build a parser (or lexer) with a vast amount of 
rules. Then the constant pool size of the java class file, which is limited 
to 65535 bytes, might get exceeded as well.

I know that most languages are rather small, but there are such beasts out 
there like PL/SQL or SQL which are quite big. I also know several ways how to 
deal with the first problem, but the only solution for the second problem 
seems to be to split the parser into several parsers and then embeed them 
into one main parser. 

However, I am just curious if you are aware of this problems and if you have 
any ideas of how the deal with them.

Kind regards
Alex


///////////// CODE SNIPPET STARTS HERE ///////////////////
lexer grammar Lexer;
?

options {
????????language=Java;
}

@lexer::header{
????????package indirection;
}

?
fragment A : 'a' | 'A';
fragment B : 'b' | 'B';
fragment C : 'c' | 'C';
fragment D : 'd' | 'D';
fragment E : 'e' | 'E';
fragment F : 'f' | 'F';
fragment G : 'g' | 'G';
fragment H : 'h' | 'H';
fragment I : 'i' | 'I';
fragment J : 'j' | 'J';
fragment K : 'k' | 'K';
fragment L : 'l' | 'L';
fragment M : 'm' | 'M';
fragment N : 'n' | 'N';
fragment O : 'o' | 'O';
fragment P : 'p' | 'P';
fragment Q : 'q' | 'Q';
fragment R : 'r' | 'R';
fragment S : 's' | 'S';
fragment T : 't' | 'T';
fragment U : 'u' | 'U';
fragment V : 'v' | 'V';
fragment W : 'w' | 'W';
fragment X : 'x' | 'X';
fragment Y : 'y' | 'Y';
fragment Z : 'z' | 'Z';



ZONE : Z O N E;
YES : Y E S;
YEAR : Y E A R;
XMLTYPE : X M L T Y P E;
XMLTABLE : X M L T A B L E;
XMLSERIALIZE : X M L S E R I A L I Z E;
XMLSCHEMA : X M L S C H E M A;
XMLROOT : X M L R O O T;
XMLQUERY : X M L Q U E R Y;
XMLPI : X M L P I;
XMLPARSE : X M L P A R S E;
XMLNAMESPACES : X M L N A M E S P A C E S;
XMLFOREST : X M L F O R E S T;
XMLELEMENT : X M L E L E M E N T;
XMLCOLATTVAL : X M L C O L A T T V A L;
XMLATTRIBUTES : X M L A T T R I B U T E S;
XID : X I D;
X_DYN_PRUNE : X '_' D Y N '_' P R U N E;
WRITE : W R I T E;
WRAPPED : W R A P P E D;
WORK : W O R K;
WITHOUT : W I T H O U T;
WITHIN : W I T H I N;
WITH : W I T H;
WHITESPACE : W H I T E S P A C E;
WHILE : W H I L E;
WHERE : W H E R E;
WHENEVER : W H E N E V E R;
WHEN : W H E N;
WELLFORMED : W E L L F O R M E D;
WALLET : W A L L E T;
WAIT : W A I T;
VOID : V O I D;
VIEWS : V I E W S;
VIEW : V I E W;
VERSIONS : V E R S I O N S;
VERSION : V E R S I O N;
VECTOR_READ_TRACE : V E C T O R '_' R E A D '_' T R A C E;
VECTOR_READ : V E C T O R '_' R E A D;
VARYING : V A R Y I N G;
VARRAY : V A R R A Y;
VARIANCE : V A R I A N C E;
VARIABLE : V A R I A B L E;
VARCHAR2 : V A R C H A R '2';
VARCHAR : V A R C H A R;
VALUES : V A L U E S;
VALUE : V A L U E;
VALIST : V A L I S T;
VALIDATION : V A L I D A T I O N;
VALIDATE : V A L I D A T E;
USING : U S I N G;
USE_WEAK_NAME_RESL : U S E '_' W E A K '_' N A M E '_' R E S L;
USE_TTT_FOR_GSETS : U S E '_' T T T '_' F O R '_' G S E T S;
USE_STORED_OUTLINES : U S E '_' S T O R E D '_' O U T L I N E S;
USE_SEMI : U S E '_' S E M I;
USERS : U S E R S;
USER_RECYCLEBIN : U S E R '_' R E C Y C L E B I N;
USER_DEFINED : U S E R '_' D E F I N E D;
USER : U S E R;
USE_PRIVATE_OUTLINES : U S E '_' P R I V A T E '_' O U T L I N E S;
USE_NL_WITH_INDEX : U S E '_' N L '_' W I T H '_' I N D E X;
USE_NL : U S E '_' N L;
USE_MERGE : U S E '_' M E R G E;
USE_HASH_AGGREGATION : U S E '_' H A S H '_' A G G R E G A T I O N;
USE_HASH : U S E '_' H A S H;
USE_CONCAT : U S E '_' C O N C A T;
USE_ANTI : U S E '_' A N T I;
USE : U S E;
USAGE : U S A G E;
UROWID : U R O W I D;
UPSERT : U P S E R T;
UPGRADE : U P G R A D E;
UPD_JOININDEX : U P D '_' J O I N I N D E X;
UPD_INDEXES : U P D '_' I N D E X E S;
UPDATED : U P D A T E D;
UPDATE : U P D A T E;
UPDATABLE : U P D A T A B L E;
UNUSED : U N U S E D;
UNUSABLE : U N U S A B L E;
UNTRUSTED : U N T R U S T E D;
UNTIL : U N T I L;
UNSIGNED : U N S I G N E D;
UNRECOVERABLE : U N R E C O V E R A B L E;
UNQUIESCE : U N Q U I E S C E;
UNPROTECTED : U N P R O T E C T E D;
UNPACKED : U N P A C K E D;
UNNEST : U N N E S T;
UNLOCK : U N L O C K;
UNLIMITED : U N L I M I T E D;
UNIQUE : U N I Q U E;
UNION : U N I O N;
UNIFORM : U N I F O R M;
UNDROP : U N D R O P;
UNDO : U N D O;
UNDER : U N D E R;
UNBOUNDED : U N B O U N D E D;
UNBOUND : U N B O U N D;
UNARCHIVED : U N A R C H I V E D;
UID : U I D;
UI : U I;
UBA : U B A;
UB4 : U B '4';
UB2 : U B '2';
UB1 : U B '1';
TZ_OFFSET : T Z '_' O F F S E T;
TYPES : T Y P E S;
TYPE : T Y P E;
TX : T X;
TUNING : T U N I N G;
TRUSTED : T R U S T E D;
TRUNCATE : T R U N C A T E;
TRUE : T R U E;
TRIGGERS : T R I G G E R S;
TRIGGER : T R I G G E R;
TREAT : T R E A T;
TRANSITIONAL : T R A N S I T I O N A L;
TRANSACTIONAL : T R A N S A C T I O N A L;
TRANSACTION : T R A N S A C T I O N;
TRANSAC : T R A N S A C;
TRAILING : T R A I L I N G;
TRACKING : T R A C K I N G;
TRACING : T R A C I N G;
TRACE : T R A C E;
TOPLEVEL : T O P L E V E L;
TO_CHAR : T O '_' C H A R;
TO : T O;
TIV_SSF : T I V '_' S S F;
TIV_GB : T I V '_' G B;
TIMEZONE_REGION : T I M E Z O N E '_' R E G I O N;
TIMEZONE_OFFSET : T I M E Z O N E '_' O F F S E T;
TIMEZONE_MINUTE : T I M E Z O N E '_' M I N U T E;
TIMEZONE_HOUR : T I M E Z O N E '_' H O U R;
TIMEZONE_ABBR : T I M E Z O N E '_' A B B R;
TIME_ZONE : T I M E '_' Z O N E;
TIMESTAMP : T I M E S T A M P;
TIMEOUT : T I M E O U T;
TIME : T I M E;
THROUGH : T H R O U G H;
THREAD : T H R E A D;
THEN : T H E N;
THE : T H E;
THAN : T H A N;
TEST : T E S T;
TEMP_TABLE : T E M P '_' T A B L E;
TEMPORARY : T E M P O R A R Y;
TEMPLATE : T E M P L A T E;
TEMPFILE : T E M P F I L E;
TDO : T D O;
TABNO : T A B N O;
TABLE_STATS : T A B L E '_' S T A T S;
TABLESPACE_NO : T A B L E S P A C E '_' N O;
TABLESPACE : T A B L E S P A C E;
TABLES : T A B L E S;
TABLE : T A B L E;
TABAUTH : T A B A U T H;
SYSTIMESTAMP : S Y S T I M E S T A M P;
SYSTEM : S Y S T E M;
SYS_RID_ORDER : S Y S '_' R I D '_' O R D E R;
SYS_PARALLEL_TXN : S Y S '_' P A R A L L E L '_' T X N;
SYS_OP_NTCIMG : S Y S '_' O P '_' N T C I M G '$';
SYS_OP_NOEXPAND : S Y S '_' O P '_' N O E X P A N D;
SYS_OP_EXTRACT : S Y S '_' O P '_' E X T R A C T;
SYSOPER : S Y S O P E R;
SYS_OP_ENFORCE_NOT_NULL : S Y S '_' O P '_' E N F O R C E '_' N O T '_' N U L 
L '$';
SYS_OP_CAST : S Y S '_' O P '_' C A S T;
SYS_OP_BITVEC : S Y S '_' O P '_' B I T V E C;
SYS_FBT_INSDEL : S Y S '_' F B T '_' I N S D E L;
SYS_DL_CURSOR : S Y S '_' D L '_' C U R S O R;
SYSDBA : S Y S D B A;
SYSDATE : S Y S D A T E;
SYSAUX : S Y S A U X;
SYNONYM : S Y N O N Y M;
SWITCHOVER : S W I T C H O V E R;
SWITCH : S W I T C H;
SWAP_JOIN_INPUTS : S W A P '_' J O I N '_' I N P U T S;
SUSPEND : S U S P E N D;
SUPPLEMENTAL : S U P P L E M E N T A L;
SUMMARY : S U M M A R Y;
SUM : S U M;
SUCCESSFUL : S U C C E S S F U L;
SUBTYPE : S U B T Y P E;
SUBSTITUTABLE : S U B S T I T U T A B L E;
SUBQUERIES : S U B Q U E R I E S;
SUBPARTITIONS : S U B P A R T I T I O N S;
SUBPARTITION_REL : S U B P A R T I T I O N '_' R E L;
SUBPARTITION : S U B P A R T I T I O N;
SUBMULTISET : S U B M U L T I S E T;
STYLE : S T Y L E;
STRUCTURE : S T R U C T U R E;
STRUCT : S T R U C T;
STRIP : S T R I P;
STRING : S T R I N G;
STRICT : S T R I C T;
STREAMS : S T R E A M S;
STORED : S T O R E D;
STORE : S T O R E;
STORAGE : S T O R A G E;
STOP : S T O P;
STDDEV : S T D D E V;
STATISTICS : S T A T I S T I C S;
STATIC : S T A T I C;
STATEMENT_ID : S T A T E M E N T '_' I D;
STARTUP : S T A R T U P;
STAR_TRANSFORMATION : S T A R '_' T R A N S F O R M A T I O N;
START : S T A R T;
STAR : S T A R;
STANDBY : S T A N D B Y;
STANDARD : S T A N D A R D;
STANDALONE : S T A N D A L O N E;
SQL_TRACE : S Q L '_' T R A C E;
SQLSTATE : S Q L S T A T E;
SQLNAME : S Q L N A M E;
SQLLDR : S Q L L D R;
SQLERRM : S Q L E R R M;
SQLDATA : S Q L D A T A;
SQLCODE : S Q L C O D E;
SQL : S Q L;
SPREADSHEET : S P R E A D S H E E T;
SPLIT : S P L I T;
SPFILE : S P F I L E;
SPECIFICATION : S P E C I F I C A T I O N;
SPARSE : S P A R S E;
SPACE : S P A C E;
SOURCE : S O U R C E;
SORT : S O R T;
SOME : S O M E;
SNAPSHOT : S N A P S H O T;
SMALLINT : S M A L L I N T;
SMALLFILE : S M A L L F I L E;
SKIP_UNUSABLE_INDEXES : S K I P '_' U N U S A B L E '_' I N D E X E S;
SKIP_UNQ_UNUSABLE_IDX : S K I P '_' U N Q '_' U N U S A B L E '_' I D X;
SKIP_EXT_OPTIMIZER : S K I P '_' E X T '_' O P T I M I Z E R;
SKIP : S K I P;
SIZE_T : S I Z E '_' T;
SIZE : S I Z E;
SINGLETASK : S I N G L E T A S K;
SINGLE : S I N G L E;
SIMPLE : S I M P L E;
SID : S I D;
SIBLINGS : S I B L I N G S;
SHUTDOWN : S H U T D O W N;
SHRINK : S H R I N K;
SHORT : S H O R T;
SHARED_POOL : S H A R E D '_' P O O L;
SHARED : S H A R E D;
SHARE : S H A R E;
SEVERE : S E V E R E;
SET_TO_JOIN : S E T '_' T O '_' J O I N;
SETTINGS : S E T T I N G S;
SETS : S E T S;
SET : S E T;
SESSIONTZNAME : S E S S I O N T Z N A M E;
SESSIONTIMEZONE : S E S S I O N T I M E Z O N E;
SESSIONS_PER_USER : S E S S I O N S '_' P E R '_' U S E R;
SESSION_CACHED_CURSORS : S E S S I O N '_' C A C H E D '_' C U R S O R S;
SESSION : S E S S I O N;
SERVERERROR : S E R V E R E R R O R;
SERIALIZABLE : S E R I A L I Z A B L E;
SEQUENTIAL : S E Q U E N T I A L;
SEQUENCED : S E Q U E N C E D;
SEQUENCE : S E Q U E N C E;
SEPERATE : S E P E R A T E;
SEPARATE : S E P A R A T E;
SEMIJOIN_DRIVER : S E M I J O I N '_' D R I V E R;
SEMIJOIN : S E M I J O I N;
SELF : S E L F;
SELECTIVITY : S E L E C T I V I T Y;
SELECT : S E L E C T;
SEGMENT : S E G M E N T;
SEG_FILE : S E G '_' F I L E;
SEG_BLOCK : S E G '_' B L O C K;
SEED : S E E D;
SECURITY : S E C U R I T Y;
SECOND : S E C O N D;
SD_SHOW : S D '_' S H O W;
SD_INHIBIT : S D '_' I N H I B I T;
SD_ALL : S D '_' A L L;
SCOPE : S C O P E;
SCN_ASCENDING : S C N '_' A S C E N D I N G;
SCN : S C N;
SCHEMA : S C H E M A;
SCHEDULER : S C H E D U L E R;
SCAN_INSTANCES : S C A N '_' I N S T A N C E S;
SCAN : S C A N;
SCALE_ROWS : S C A L E '_' R O W S;
SCALE : S C A L E;
SB4 : S B '4';
SB2 : S B '2';
SB1 : S B '1';
SAVEPOINT : S A V E P O I N T;
SAVE_AS_INTERVALS : S A V E '_' A S '_' I N T E R V A L S;
SAVE : S A V E;
SAMPLE : S A M P L E;
SALT : S A L T;
RULES : R U L E S;
RULE : R U L E;
ROWTYPE : R O W T Y P E;
ROWS : R O W S;
ROWNUM : R O W N U M;
ROW_LENGTH : R O W '_' L E N G T H;
ROWID : R O W I D;
ROWDEPENDENCIES : R O W D E P E N D E N C I E S;
ROWCOUNT : R O W C O U N T;
ROW : R O W;
ROLLUP : R O L L U P;
ROLLING : R O L L I N G;
ROLLBACK : R O L L B A C K;
ROLES : R O L E S;
ROLE : R O L E;
RIGHT : R I G H T;
REWRITE_OR_ERROR : R E W R I T E '_' O R '_' E R R O R;
REWRITE : R E W R I T E;
REVOKE : R E V O K E;
REVERSE : R E V E R S E;
REUSE : R E U S E;
RETURNING : R E T U R N I N G;
RETURN : R E T U R N;
RETENTION : R E T E N T I O N;
RESUME : R E S U M E;
RESUMABLE : R E S U M A B L E;
RESULT : R E S U L T;
RESTRICTED : R E S T R I C T E D;
RESTRICT_ALL_REF_CONS : R E S T R I C T '_' A L L '_' R E F '_' C O N S;
RESTRICT : R E S T R I C T;
RESTORE_AS_INTERVALS : R E S T O R E '_' A S '_' I N T E R V A L S;
RESTORE : R E S T O R E;
RESOURCE : R E S O U R C E;
RESOLVER : R E S O L V E R;
RESOLVE : R E S O L V E;
RESIZE : R E S I Z E;
RESETLOGS : R E S E T L O G S;
RESET : R E S E T;
REQUIRED : R E Q U I R E D;
REPLACE : R E P L A C E;
REPAIR : R E P A I R;
RENAME : R E N A M E;
REMOTE_MAPPED : R E M O T E '_' M A P P E D;
REMAINDER : R E M A I N D E R;
REM : R E M;
RELY : R E L Y;
RELEASE : R E L E A S E;
RELATIONAL : R E L A T I O N A L;
REKEY : R E K E Y;
REJECT : R E J E C T;
REGISTER : R E G I S T E R;
REGEXP_LIKE : R E G E X P '_' L I K E;
REFRESH : R E F R E S H;
REFERENCING : R E F E R E N C I N G;
REFERENCES : R E F E R E N C E S;
REFERENCED : R E F E R E N C E D;
REFERENCE : R E F E R E N C E;
REF_CASCADE_CURSOR : R E F '_' C A S C A D E '_' C U R S O R;
REF : R E F;
REDUNDANCY : R E D U N D A N C Y;
REDUCED : R E D U C E D;
RECYCLEBIN : R E C Y C L E B I N;
RECYCLE : R E C Y C L E;
RECOVERY : R E C O V E R Y;
RECOVERABLE : R E C O V E R A B L E;
RECOVER : R E C O V E R;
RECORDS_PER_BLOCK : R E C O R D S '_' P E R '_' B L O C K;
RECORD : R E C O R D;
REBUILD : R E B U I L D;
REBALANCE : R E B A L A N C E;
REAL : R E A L;
READS : R E A D S;
READ : R E A D;
RBO_OUTLINE : R B O '_' O U T L I N E;
RBA : R B A;
RAW : R A W;
RAPIDLY : R A P I D L Y;
RANGE : R A N G E;
RANDOM : R A N D O M;
RAISE : R A I S E;
QUOTA : Q U O T A;
QUIESCE : Q U I E S C E;
QUEUE_ROWP : Q U E U E '_' R O W P;
QUEUE_CURR : Q U E U E '_' C U R R;
QUEUE : Q U E U E;
QUERY_BLOCK : Q U E R Y '_' B L O C K;
QUERY : Q U E R Y;
QB_NAME : Q B '_' N A M E;
PX_JOIN_FILTER : P X '_' J O I N '_' F I L T E R;
PX_GRANULE : P X '_' G R A N U L E;
PUSH_SUBQ : P U S H '_' S U B Q;
PUSH_PRED : P U S H '_' P R E D;
PURGE : P U R G E;
PULL_PRED : P U L L '_' P R E D;
PUBLIC : P U B L I C;
PROTECTION : P R O T E C T I O N;
PROTECTED : P R O T E C T E D;
PROJECT : P R O J E C T;
PROGRAM : P R O G R A M;
PROFILE : P R O F I L E;
PROCEDURE : P R O C E D U R E;
PRIVILEGES : P R I V I L E G E S;
PRIVILEGE : P R I V I L E G E;
PRIVATE_SGA : P R I V A T E '_' S G A;
PRIVATE : P R I V A T E;
PRIOR : P R I O R;
PRIMARY : P R I M A R Y;
PRESERVE_OID : P R E S E R V E '_' O I D;
PRESERVE : P R E S E R V E;
PRESENT : P R E S E N T;
PREPARE : P R E P A R E;
PRECOMPUTE_SUBQUERY : P R E C O M P U T E '_' S U B Q U E R Y;
PRECISION : P R E C I S I O N;
PRECEDING : P R E C E D I N G;
PREBUILT : P R E B U I L T;
PRAGMA : P R A G M A;
PQ_NOMAP : P Q '_' N O M A P;
PQ_MAP : P Q '_' M A P;
PQ_DISTRIBUTE : P Q '_' D I S T R I B U T E;
POWER : P O W E R;
POST_TRANSACTION : P O S T '_' T R A N S A C T I O N;
POSITIVEN : P O S I T I V E N;
POSITIVE : P O S I T I V E;
POLICY : P O L I C Y;
POINT : P O I N T;
PLSQL_WARNINGS : P L S Q L '_' W A R N I N G S;
PLSQL_OPTIMIZE_LEVEL : P L S Q L '_' O P T I M I Z E '_' L E V E L;
PLSQL_DEBUG : P L S Q L '_' D E B U G;
PLSQL_CODE_TYPE : P L S Q L '_' C O D E '_' T Y P E;
PLSQL_CCFLAGS : P L S Q L '_' C C F L A G S;
PLS_INTEGER : P L S '_' I N T E G E R;
PLAN : P L A N;
PIV_SSF : P I V '_' S S F;
PIV_GB : P I V '_' G B;
PIPELINED : P I P E L I N E D;
PIPE : P I P E;
PHYSICAL : P H Y S I C A L;
PFILE : P F I L E;
PERMANENT : P E R M A N E N T;
PERFORMANCE : P E R F O R M A N C E;
PERCENT : P E R C E N T;
PCTVERSION : P C T V E R S I O N;
PCTUSED : P C T U S E D;
PCTTHRESHOLD : P C T T H R E S H O L D;
PCTINCREASE : P C T I N C R E A S E;
PCTFREE : P C T F R E E;
PATHS : P A T H S;
PATH : P A T H;
PASSWORD_VERIFY_FUNCTION : P A S S W O R D '_' V E R I F Y '_' F U N C T I O 
N;
PASSWORD_REUSE_TIME : P A S S W O R D '_' R E U S E '_' T I M E;
PASSWORD_REUSE_MAX : P A S S W O R D '_' R E U S E '_' M A X;
PASSWORD_LOCK_TIME : P A S S W O R D '_' L O C K '_' T I M E;
PASSWORD_LIFE_TIME : P A S S W O R D '_' L I F E '_' T I M E;
PASSWORD_GRACE_TIME : P A S S W O R D '_' G R A C E '_' T I M E;
PASSWORD : P A S S W O R D;
PASSING : P A S S I N G;
PASCAL : P A S C A L;
PARTITIONS : P A R T I T I O N S;
PARTITION_RANGE : P A R T I T I O N '_' R A N G E;
PARTITION_LIST : P A R T I T I O N '_' L I S T;
PARTITION_HASH : P A R T I T I O N '_' H A S H;
PARTITION : P A R T I T I O N;
PARTIALLY : P A R T I A L L Y;
PARITY : P A R I T Y;
PARENT : P A R E N T;
PARAMETERS : P A R A M E T E R S;
PARAMETER : P A R A M E T E R;
PARALLEL_INDEX : P A R A L L E L '_' I N D E X;
PARALLEL_ENABLE : P A R A L L E L '_' E N A B L E;
PARALLEL : P A R A L L E L;
PACKAGES : P A C K A G E S;
PACKAGE : P A C K A G E;
OWN : O W N;
OVERRIDING : O V E R R I D I N G;
OVERLAPS : O V E R L A P S;
OVERFLOW_NOMOVE : O V E R F L O W '_' N O M O V E;
OVERFLOW : O V E R F L O W;
OVER : O V E R;
OUT_OF_LINE : O U T '_' O F '_' L I N E;
OUTLINE_LEAF : O U T L I N E '_' L E A F;
OUTLINE : O U T L I N E;
OUTER : O U T E R;
OUT : O U T;
OTHERS : O T H E R S;
ORLVARY : O R L V A R Y;
ORLANY : O R L A N Y;
ORGANIZATION : O R G A N I Z A T I O N;
OR_EXPAND : O R '_' E X P A N D;
ORDINALITY : O R D I N A L I T Y;
ORDERED_PREDICATES : O R D E R E D '_' P R E D I C A T E S;
ORDERED : O R D E R E D;
ORDER : O R D E R;
ORA_ROWSCN : O R A '_' R O W S C N;
ORADATA : O R A D A T A;
ORACLE : O R A C L E;
OR : O R;
OPT_PARAM : O P T '_' P A R A M;
OPTION : O P T I O N;
OPTIMIZER_GOAL : O P T I M I Z E R '_' G O A L;
OPTIMIZER_FEATURES_ENABLE : O P T I M I Z E R '_' F E A T U R E S '_' E N A B 
L E;
OPTIMAL : O P T I M A L;
OPT_ESTIMATE : O P T '_' E S T I M A T E;
OPERATOR : O P E R A T O R;
OPEN : O P E N;
OPCODE : O P C O D E;
OPAQUE_XCANONICAL : O P A Q U E '_' X C A N O N I C A L;
OPAQUE_TRANSFORM : O P A Q U E '_' T R A N S F O R M;
OPAQUE : O P A Q U E;
ONLY : O N L Y;
ONLINE : O N L I N E;
ON : O N;
OLD_PUSH_PRED : O L D '_' P U S H '_' P R E D;
OLD : O L D;
OIDINDEX : O I D I N D E X;
OID : O I D;
OFFLINE : O F F L I N E;
OFF : O F F;
OF : O F;
OCITYPE : O C I T Y P E;
OCISTRING : O C I S T R I N G;
OCIROWID : O C I R O W I D;
OCIREFCURSOR : O C I R E F C U R S O R;
OCIREF : O C I R E F;
OCIRAW : O C I R A W;
OCINUMBER : O C I N U M B E R;
OCILOBLOCATOR : O C I L O B L O C A T O R;
OCIINTERVAL : O C I I N T E R V A L;
OCIDURATION : O C I D U R A T I O N;
OCIDATETIME : O C I D A T E T I M E;
OCIDATE : O C I D A T E;
OCICOLL : O C I C O L L;
OBJNO_REUSE : O B J N O '_' R E U S E;
OBJNO : O B J N O;
OBJECT : O B J E C T;
NVARCHAR2 : N V A R C H A R '2';
NUMERIC : N U M E R I C;
NUMBER_BASE : N U M B E R '_' B A S E;
NUMBER : N U M B E R;
NULLS : N U L L S;
NULLIF : N U L L I F;
NULL : N U L L;
NO_XML_QUERY_REWRITE : N O '_' X M L '_' Q U E R Y '_' R E W R I T E;
NOWAIT : N O W A I T;
NOVALIDATE : N O V A L I D A T E;
NO_USE_NL : N O '_' U S E '_' N L;
NO_USE_MERGE : N O '_' U S E '_' M E R G E;
NO_USE_HASH_AGGREGATION : N O '_' U S E '_' H A S H '_' A G G R E G A T I O N;
NO_USE_HASH : N O '_' U S E '_' H A S H;
NO_UNNEST : N O '_' U N N E S T;
NOTIFICATION : N O T I F I C A T I O N;
NOTHING : N O T H I N G;
NO_TEMP_TABLE : N O '_' T E M P '_' T A B L E;
NOT : N O T;
NOSWITCH : N O S W I T C H;
NO_SWAP_JOIN_INPUTS : N O '_' S W A P '_' J O I N '_' I N P U T S;
NOSTRICT : N O S T R I C T;
NO_STATS_GSETS : N O '_' S T A T S '_' G S E T S;
NO_STAR_TRANSFORMATION : N O '_' S T A R '_' T R A N S F O R M A T I O N;
NO_SQL_TUNE : N O '_' S Q L '_' T U N E;
NOSORT : N O S O R T;
NO_SET_TO_JOIN : N O '_' S E T '_' T O '_' J O I N;
NO_SEMIJOIN : N O '_' S E M I J O I N;
NOSEGMENT : N O S E G M E N T;
NOROWDEPENDENCIES : N O R O W D E P E N D E N C I E S;
NORMAL : N O R M A L;
NO_REWRITE : N O '_' R E W R I T E;
NOREWRITE : N O R E W R I T E;
NOREVERSE : N O R E V E R S E;
NORESETLOGS : N O R E S E T L O G S;
NOREPAIR : N O R E P A I R;
NORELY : N O R E L Y;
NO_REF_CASCADE : N O '_' R E F '_' C A S C A D E;
NO_QUERY_TRANSFORMATION : N O '_' Q U E R Y '_' T R A N S F O R M A T I O N;
NO_QKN_BUFF : N O '_' Q K N '_' B U F F;
NO_PX_JOIN_FILTER : N O '_' P X '_' J O I N '_' F I L T E R;
NO_PUSH_SUBQ : N O '_' P U S H '_' S U B Q;
NO_PUSH_PRED : N O '_' P U S H '_' P R E D;
NO_PULL_PRED : N O '_' P U L L '_' P R E D;
NO_PRUNE_GSETS : N O '_' P R U N E '_' G S E T S;
NO_PARTIAL_COMMIT : N O '_' P A R T I A L '_' C O M M I T;
NOPARALLEL_INDEX : N O P A R A L L E L '_' I N D E X;
NO_PARALLEL_INDEX : N O '_' P A R A L L E L '_' I N D E X;
NO_PARALLEL : N O '_' P A R A L L E L;
NOPARALLEL : N O P A R A L L E L;
NOOVERRIDE : N O O V E R R I D E;
NO_ORDER_ROLLUPS : N O '_' O R D E R '_' R O L L U P S;
NOORDER : N O O R D E R;
NONE : N O N E;
NO_MULTIMV_REWRITE : N O '_' M U L T I M V '_' R E W R I T E;
NO_MONITORING : N O '_' M O N I T O R I N G;
NOMONITORING : N O M O N I T O R I N G;
NO_MODEL_PUSH_REF : N O '_' M O D E L '_' P U S H '_' R E F;
NOMINVALUE : N O M I N V A L U E;
NOMINIMIZE : N O M I N I M I Z E;
NO_MERGE : N O '_' M E R G E;
NOMAXVALUE : N O M A X V A L U E;
NOMAPPING : N O M A P P I N G;
NOLOGGING : N O L O G G I N G;
NO_INDEX_SS : N O '_' I N D E X '_' S S;
NO_INDEX_FFS : N O '_' I N D E X '_' F F S;
NO_INDEX : N O '_' I N D E X;
NOGUARANTEE : N O G U A R A N T E E;
NOFORCE : N O F O R C E;
NO_FILTERING : N O '_' F I L T E R I N G;
NO_FACT : N O '_' F A C T;
NO_EXPAND_GSET_TO_UNION : N O '_' E X P A N D '_' G S E T '_' T O '_' U N I O 
N;
NO_EXPAND : N O '_' E X P A N D;
NO_ELIMINATE_OUTER_JOIN : N O '_' E L I M I N A T E '_' O U T E R '_' J O I N;
NO_ELIMINATE_OBY : N O '_' E L I M I N A T E '_' O B Y;
NO_ELIMINATE_JOIN : N O '_' E L I M I N A T E '_' J O I N;
NODELAY : N O D E L A Y;
NOCYCLE : N O C Y C L E;
NOCPU_COSTING : N O C P U '_' C O S T I N G;
NO_CPU_COSTING : N O '_' C P U '_' C O S T I N G;
NOCOPY : N O C O P Y;
NOCOMPRESS : N O C O M P R E S S;
NO_CARTESIAN : N O '_' C A R T E S I A N;
NOCACHE : N O C A C H E;
NO_BUFFER : N O '_' B U F F E R;
NO_BASETABLE_MULTIMV_REWRITE : N O '_' B A S E T A B L E '_' M U L T I M V '_' 
R E W R I T E;
NOAUDIT : N O A U D I T;
NOARCHIVELOG : N O A R C H I V E L O G;
NOAPPEND : N O A P P E N D;
NO_ACCESS : N O '_' A C C E S S;
NO : N O;
NLS_TERRITORY : N L S '_' T E R R I T O R Y;
NLS_SPECIAL_CHARS : N L S '_' S P E C I A L '_' C H A R S;
NLS_SORT : N L S '_' S O R T;
NLS_NUMERIC_CHARACTERS : N L S '_' N U M E R I C '_' C H A R A C T E R S;
NLS_NCHAR_CONV_EXCP : N L S '_' N C H A R '_' C O N V '_' E X C P;
NLS_LENGTH_SEMANTICS : N L S '_' L E N G T H '_' S E M A N T I C S;
NLS_LANGUAGE : N L S '_' L A N G U A G E;
NLS_LANG : N L S '_' L A N G;
NL_SJ : N L '_' S J;
NLS_ISO_CURRENCY : N L S '_' I S O '_' C U R R E N C Y;
NLS_DATE_LANGUAGE : N L S '_' D A T E '_' L A N G U A G E;
NLS_DATE_FORMAT : N L S '_' D A T E '_' F O R M A T;
NLS_CURRENCY : N L S '_' C U R R E N C Y;
NLS_COMP : N L S '_' C O M P;
NLS_CHARACTERSET : N L S '_' C H A R A C T E R S E T;
NLS_CALENDAR : N L S '_' C A L E N D A R;
NL_AJ : N L '_' A J;
NEXTVAL : N E X T V A L;
NEXT : N E X T;
NEW : N E W;
NEVER : N E V E R;
NETWORK : N E T W O R K;
NESTED_TABLE_SET_SETID : N E S T E D '_' T A B L E '_' S E T '_' S E T I D;
NESTED_TABLE_SET_REFS : N E S T E D '_' T A B L E '_' S E T '_' R E F S;
NESTED_TABLE_ID : N E S T E D '_' T A B L E '_' I D;
NESTED_TABLE_GET_REFS : N E S T E D '_' T A B L E '_' G E T '_' R E F S;
NESTED_TABLE_FAST_INSERT : N E S T E D '_' T A B L E '_' F A S T '_' I N S E R 
T;
NESTED : N E S T E D;
NEEDED : N E E D E D;
NCLOB : N C L O B;
NCHAR_CS : N C H A R '_' C S;
NCHAR : N C H A R;
NAV : N A V;
NATURALN : N A T U R A L N;
NATURAL : N A T U R A L;
NATIVE : N A T I V E;
NATIONAL : N A T I O N A L;
NAN : N A N;
NAMED : N A M E D;
NAME : N A M E;
MV_MERGE : M V '_' M E R G E;
MULTISET : M U L T I S E T;
MOVEMENT : M O V E M E N T;
MOVE : M O V E;
MOUNT : M O U N T;
MONTH : M O N T H;
MONITORING : M O N I T O R I N G;
MODIFY : M O D I F Y;
MODEL_PUSH_REF : M O D E L '_' P U S H '_' R E F;
MODEL_PBY : M O D E L '_' P B Y;
MODEL_NO_ANALYSIS : M O D E L '_' N O '_' A N A L Y S I S;
MODEL_MIN_ANALYSIS : M O D E L '_' M I N '_' A N A L Y S I S;
MODEL_DYNAMIC_SUBQUERY : M O D E L '_' D Y N A M I C '_' S U B Q U E R Y;
MODEL_DONTVERIFY_UNIQUENESS : M O D E L '_' D O N T V E R I F Y '_' U N I Q U 
E N E S S;
MODEL_COMPILE_SUBQUERY : M O D E L '_' C O M P I L E '_' S U B Q U E R Y;
MODEL : M O D E L;
MODE : M O D E;
MOD : M O D;
MLSLABEL : M L S L A B E L;
MIRROR : M I R R O R;
MINVALUE : M I N V A L U E;
MINUTE : M I N U T E;
MINUS_NULL : M I N U S '_' N U L L;
MINUS : M I N U S;
MINIMUM : M I N I M U M;
MINIMIZE : M I N I M I Z E;
MINEXTENTS : M I N E X T E N T S;
MIN : M I N;
MIGRATE : M I G R A T E;
METHOD : M E T H O D;
MERGE_SJ : M E R G E '_' S J;
MERGE_CONST_ON : M E R G E '_' C O N S T '_' O N;
MERGE_AJ : M E R G E '_' A J;
MERGE : M E R G E;
MEMORY : M E M O R Y;
MEMBER : M E M B E R;
MEASURES : M E A S U R E S;
MAXVALUE : M A X V A L U E;
MAXTRANS : M A X T R A N S;
MAXSIZE : M A X S I Z E;
MAXLOGMEMBERS : M A X L O G M E M B E R S;
MAXLOGHISTORY : M A X L O G H I S T O R Y;
MAXLOGFILES : M A X L O G F I L E S;
MAXLEN : M A X L E N;
MAXINSTANCES : M A X I N S T A N C E S;
MAXIMIZE : M A X I M I Z E;
MAXEXTENTS : M A X E X T E N T S;
MAXDATAFILES : M A X D A T A F I L E S;
MAXARCHLOGS : M A X A R C H L O G S;
MAX : M A X;
MATERIALIZED : M A T E R I A L I Z E D;
MATERIALIZE : M A T E R I A L I Z E;
MATCHED : M A T C H E D;
MASTER : M A S T E R;
MAPPING : M A P P I N G;
MAP : M A P;
MANUAL : M A N U A L;
MANAGEMENT : M A N A G E M E N T;
MANAGED : M A N A G E D;
MANAGE : M A N A G E;
MAIN : M A I N;
LOOP : L O O P;
LONG : L O N G;
LOGON : L O G O N;
LOGOFF : L O G O F F;
LOGICAL_READS_PER_SESSION : L O G I C A L '_' R E A D S '_' P E R '_' S E S S 
I O N;
LOGICAL_READS_PER_CALL : L O G I C A L '_' R E A D S '_' P E R '_' C A L L;
LOGICAL : L O G I C A L;
LOGGING : L O G G I N G;
LOGFILE : L O G F I L E;
LOG : L O G;
LOCKED : L O C K E D;
LOCK : L O C K;
LOCATOR : L O C A T O R;
LOCATION : L O C A T I O N;
LOCALTIMESTAMP : L O C A L T I M E S T A M P;
LOCALTIME : L O C A L T I M E;
LOCAL_INDEXES : L O C A L '_' I N D E X E S;
LOCAL : L O C A L;
LOB : L O B;
LIST : L I S T;
LINK : L I N K;
LIMITED : L I M I T E D;
LIMIT : L I M I T;
LIKE_EXPAND : L I K E '_' E X P A N D;
LIKEC : L I K E C;
LIKE4 : L I K E '4';
LIKE2 : L I K E '2';
LIKE : L I K E;
LIBRARY : L I B R A R Y;
LEVELS : L E V E L S;
LEVEL : L E V E L;
LESS : L E S S;
LENGTH : L E N G T H;
LEFT : L E F T;
LEADING : L E A D I N G;
LDAP_REG_SYNC_INTERVAL : L D A P '_' R E G '_' S Y N C '_' I N T E R V A L;
LDAP_REGISTRATION_ENABLED : L D A P '_' R E G I S T R A T I O N '_' E N A B L 
E D;
LDAP_REGISTRATION : L D A P '_' R E G I S T R A T I O N;
LAYER : L A Y E R;
LATERAL : L A T E R A L;
LAST : L A S T;
LARGE : L A R G E;
LANGUAGE : L A N G U A G E;
KILL : K I L L;
KEYSIZE : K E Y S I Z E;
KEYS : K E Y S;
KEY_LENGTH : K E Y '_' L E N G T H;
KEY : K E Y;
KERBEROS : K E R B E R O S;
KEEP : K E E P;
JOIN : J O I N;
JOB : J O B;
JAVA : J A V A;
ITERATION_NUMBER : I T E R A T I O N '_' N U M B E R;
ITERATE : I T E R A T E;
ISOLATION_LEVEL : I S O L A T I O N '_' L E V E L;
ISOLATION : I S O L A T I O N;
IS : I S;
INVALIDATE : I N V A L I D A T E;
INTO : I N T O;
INTERVAL : I N T E R V A L;
INTERSECT : I N T E R S E C T;
INTERPRETED : I N T E R P R E T E D;
INTERNAL_USE : I N T E R N A L '_' U S E;
INTERNAL_CONVERT : I N T E R N A L '_' C O N V E R T;
INTERMEDIATE : I N T E R M E D I A T E;
INTERFACE : I N T E R F A C E;
INTEGER : I N T E G E R;
INT : I N T;
INSTEAD : I N S T E A D;
INSTANTLY : I N S T A N T L Y;
INSTANTIABLE : I N S T A N T I A B L E;
INSTANCES : I N S T A N C E S;
INSTANCE : I N S T A N C E;
INSERT : I N S E R T;
INNER : I N N E R;
IN_MEMORY_METADATA : I N '_' M E M O R Y '_' M E T A D A T A;
INLINE_XMLTYPE_NT : I N L I N E '_' X M L T Y P E '_' N T;
INLINE : I N L I N E;
INITRANS : I N I T R A N S;
INITIALLY : I N I T I A L L Y;
INITIALIZED : I N I T I A L I Z E D;
INITIAL : I N I T I A L;
INFORMATIONAL : I N F O R M A T I O N A L;
INFINITE : I N F I N I T E;
INDICES : I N D I C E S;
INDICATOR : I N D I C A T O R;
INDEXTYPES : I N D E X T Y P E S;
INDEXTYPE : I N D E X T Y P E;
INDEX_STATS : I N D E X '_' S T A T S;
INDEX_SS_DESC : I N D E X '_' S S '_' D E S C;
INDEX_SS_ASC : I N D E X '_' S S '_' A S C;
INDEX_SS : I N D E X '_' S S;
INDEX_SKIP_SCAN : I N D E X '_' S K I P '_' S C A N;
INDEX_SCAN : I N D E X '_' S C A N;
INDEX_RRS : I N D E X '_' R R S;
INDEX_ROWS : I N D E X '_' R O W S;
INDEX_JOIN : I N D E X '_' J O I N;
INDEX_FILTER : I N D E X '_' F I L T E R;
INDEX_FFS : I N D E X '_' F F S;
INDEXES : I N D E X E S;
INDEXED : I N D E X E D;
INDEX_DESC : I N D E X '_' D E S C;
INDEX_COMBINE : I N D E X '_' C O M B I N E;
INDEX_ASC : I N D E X '_' A S C;
INDEX : I N D E X;
INCREMENTAL : I N C R E M E N T A L;
INCREMENT : I N C R E M E N T;
INCLUDING : I N C L U D I N G;
INCLUDE_VERSION : I N C L U D E '_' V E R S I O N;
IN : I N;
IMPORT : I M P O R T;
IMMEDIATE : I M M E D I A T E;
IGNORE_WHERE_CLAUSE : I G N O R E '_' W H E R E '_' C L A U S E;
IGNORE_OPTIM_EMBEDDED_HINTS : I G N O R E '_' O P T I M '_' E M B E D D E 
D '_' H I N T S;
IGNORE : I G N O R E;
IF : I F;
IDLE_TIME : I D L E '_' T I M E;
IDGENERATORS : I D G E N E R A T O R S;
IDENTITY : I D E N T I T Y;
IDENTIFIER : I D E N T I F I E R;
IDENTIFIED : I D E N T I F I E D;
ID : I D;
HWM_BROKERED : H W M '_' B R O K E R E D;
HOUR : H O U R;
HINTSET_END : H I N T S E T '_' E N D;
HINTSET_BEGIN : H I N T S E T '_' B E G I N;
HIGH : H I G H;
HIERARCHY : H I E R A R C H Y;
HIDDEN : H I D D E N;
HEAP : H E A P;
HEADER : H E A D E R;
HAVING : H A V I N G;
HASH_SJ : H A S H '_' S J;
HASHKEYS : H A S H K E Y S;
HASH_AJ : H A S H '_' A J;
HASH : H A S H;
GUARD : G U A R D;
GUARANTEED : G U A R A N T E E D;
GUARANTEE : G U A R A N T E E;
GROUPS : G R O U P S;
GROUPING : G R O U P I N G;
GROUP_BY : G R O U P '_' B Y;
GROUP : G R O U P;
GRANT : G R A N T;
GOTO : G O T O;
GLOBAL_TOPIC_ENABLED : G L O B A L '_' T O P I C '_' E N A B L E D;
GLOBAL_NAME : G L O B A L '_' N A M E;
GLOBALLY : G L O B A L L Y;
GLOBAL : G L O B A L;
GENERATED : G E N E R A T E D;
GENERAL : G E N E R A L;
GBY_CONC_ROLLUP : G B Y '_' C O N C '_' R O L L U P;
GATHER_PLAN_STATISTICS : G A T H E R '_' P L A N '_' S T A T I S T I C S;
FUNCTIONS : F U N C T I O N S;
FUNCTION : F U N C T I O N;
FULL : F U L L;
FROM : F R O M;
FRESH : F R E S H;
FREEPOOLS : F R E E P O O L S;
FREELISTS : F R E E L I S T S;
FREELIST : F R E E L I S T;
FORM : F O R M;
FOREIGN : F O R E I G N;
FORCE_XML_QUERY_REWRITE : F O R C E '_' X M L '_' Q U E R Y '_' R E W R I T E;
FORCE : F O R C E;
FORALL : F O R A L L;
FOR : F O R;
FOLLOWING : F O L L O W I N G;
FLUSH : F L U S H;
FLOB : F L O B;
FLOAT : F L O A T;
FLASHBACK : F L A S H B A C K;
FLAGGER : F L A G G E R;
FIXED : F I X E D;
FIRST_ROWS : F I R S T '_' R O W S;
FIRST : F I R S T;
FINISH : F I N I S H;
FINE : F I N E;
FINAL : F I N A L;
FILTER : F I L T E R;
FILE : F I L E;
FIC_PIV : F I C '_' P I V;
FIC_CIV : F I C '_' C I V;
FETCH : F E T C H;
FBTSCAN : F B T S C A N;
FAST : F A S T;
FALSE : F A L S E;
FAILGROUP : F A I L G R O U P;
FAILED_LOGIN_ATTEMPTS : F A I L E D '_' L O G I N '_' A T T E M P T S;
FAILED : F A I L E D;
FACT : F A C T;
EXTRACT : E X T R A C T;
EXTERNALLY : E X T E R N A L L Y;
EXTERNAL : E X T E R N A L;
EXTENTS : E X T E N T S;
EXTENT : E X T E N T;
EXTENDS : E X T E N D S;
EXPR_CORR_CHECK : E X P R '_' C O R R '_' C H E C K;
EXPORT : E X P O R T;
EXPLOSION : E X P L O S I O N;
EXPLAIN : E X P L A I N;
EXPIRE : E X P I R E;
EXPAND_GSET_TO_UNION : E X P A N D '_' G S E T '_' T O '_' U N I O N;
EXIT : E X I T;
EXISTS : E X I S T S;
EXEMPT : E X E M P T;
EXECUTE : E X E C U T E;
EXCLUSIVE : E X C L U S I V E;
EXCLUDING : E X C L U D I N G;
EXCHANGE : E X C H A N G E;
EXCEPTIONS : E X C E P T I O N S;
EXCEPTION : E X C E P T I O N;
EXCEPT : E X C E P T;
EVENTS : E V E N T S;
EVALUATION : E V A L U A T I O N;
EVALNAME : E V A L N A M E;
ESTIMATE : E S T I M A T E;
ESCAPE : E S C A P E;
ERRORS : E R R O R S;
ERROR_ON_OVERLAP_TIME : E R R O R '_' O N '_' O V E R L A P '_' T I M E;
ERROR : E R R O R;
ENTRY : E N T R Y;
ENTERPRISE : E N T E R P R I S E;
ENQUEUE : E N Q U E U E;
ENFORCED : E N F O R C E D;
ENFORCE : E N F O R C E;
END_OUTLINE_DATA : E N D '_' O U T L I N E '_' D A T A;
END : E N D;
ENCRYPTION : E N C R Y P T I O N;
ENCRYPT : E N C R Y P T;
ENABLE : E N A B L E;
EMPTY : E M P T Y;
ELSIF : E L S I F;
ELSE : E L S E;
ELIMINATE_OUTER_JOIN : E L I M I N A T E '_' O U T E R '_' J O I N;
ELIMINATE_OBY : E L I M I N A T E '_' O B Y;
ELIMINATE_JOIN : E L I M I N A T E '_' J O I N;
ELEMENT : E L E M E N T;
EACH : E A C H;
DYNAMIC_SAMPLING_EST_CDN : D Y N A M I C '_' S A M P L I N G '_' E S T '_' C D 
N;
DYNAMIC_SAMPLING : D Y N A M I C '_' S A M P L I N G;
DYNAMIC : D Y N A M I C;
DURATION : D U R A T I O N;
DUMP : D U M P;
DROP : D R O P;
DRIVING_SITE : D R I V I N G '_' S I T E;
DOWNGRADE : D O W N G R A D E;
DOUBLE : D O U B L E;
DOMAIN_INDEX_SORT : D O M A I N '_' I N D E X '_' S O R T;
DOMAIN_INDEX_NO_SORT : D O M A I N '_' I N D E X '_' N O '_' S O R T;
DOCUMENT : D O C U M E N T;
DO : D O;
DML_UPDATE : D M L '_' U P D A T E;
DML : D M L;
DISTRIBUTED : D I S T R I B U T E D;
DISTINGUISHED : D I S T I N G U I S H E D;
DISTINCT : D I S T I N C T;
DISMOUNT : D I S M O U N T;
DISKS : D I S K S;
DISKGROUP : D I S K G R O U P;
DISK : D I S K;
DISCONNECT : D I S C O N N E C T;
DISASSOCIATE : D I S A S S O C I A T E;
DISABLE_RPKE : D I S A B L E '_' R P K E;
DISABLE : D I S A B L E;
DIRECTORY : D I R E C T O R Y;
DIMENSION : D I M E N S I O N;
DICTIONARY : D I C T I O N A R Y;
DETERMINISTIC : D E T E R M I N I S T I C;
DETERMINES : D E T E R M I N E S;
DETACHED : D E T A C H E D;
DESC : D E S C;
DEREF_NO_REWRITE : D E R E F '_' N O '_' R E W R I T E;
DEREF : D E R E F;
DEQUEUE : D E Q U E U E;
DENSE_RANK : D E N S E '_' R A N K;
DEMAND : D E M A N D;
DELETE : D E L E T E;
DELAY : D E L A Y;
DEGREE : D E G R E E;
DEFINER : D E F I N E R;
DEFINED : D E F I N E D;
DEFINE : D E F I N E;
DEFERRED : D E F E R R E D;
DEFERRABLE : D E F E R R A B L E;
DEFAULT : D E F A U L T;
DECRYPT : D E C R Y P T;
DECREMENT : D E C R E M E N T;
DECLARE : D E C L A R E;
DECIMAL : D E C I M A L;
DEC : D E C;
DEBUG : D E B U G;
DEALLOCATE : D E A L L O C A T E;
DDL : D D L;
DBTIMEZONE : D B T I M E Z O N E;
DB_ROLE_CHANGE : D B '_' R O L E '_' C H A N G E;
DBMS_STATS : D B M S '_' S T A T S;
DBA_RECYCLEBIN : D B A '_' R E C Y C L E B I N;
DBA : D B A;
DAY : D A Y;
DATE_MODE : D A T E '_' M O D E;
DATE_BASE : D A T E '_' B A S E;
DATE : D A T E;
DATAOBJNO : D A T A O B J N O;
DATAFILES : D A T A F I L E S;
DATAFILE : D A T A F I L E;
DATABASE : D A T A B A S E;
DATA : D A T A;
DANGLING : D A N G L I N G;
CYCLE : C Y C L E;
CUSTOMDATUM : C U S T O M D A T U M;
CURSOR_SPECIFIC_SEGMENT : C U R S O R '_' S P E C I F I C '_' S E G M E N T;
CURSOR_SHARING_EXACT : C U R S O R '_' S H A R I N G '_' E X A C T;
CURSOR : C U R S O R;
CURRVAL : C U R R V A L;
CURRENT_USER : C U R R E N T '_' U S E R;
CURRENT_TIMESTAMP : C U R R E N T '_' T I M E S T A M P;
CURRENT_TIME : C U R R E N T '_' T I M E;
CURRENT_SCHEMA : C U R R E N T '_' S C H E M A;
CURRENT_DATE : C U R R E N T '_' D A T E;
CURRENT : C U R R E N T;
CUBE_GB : C U B E '_' G B;
CUBE : C U B E;
CROSS : C R O S S;
CREATE_STORED_OUTLINES : C R E A T E '_' S T O R E D '_' O U T L I N E S;
CREATE : C R E A T E;
CRASH : C R A S H;
CPU_PER_SESSION : C P U '_' P E R '_' S E S S I O N;
CPU_PER_CALL : C P U '_' P E R '_' C A L L;
CPU_COSTING : C P U '_' C O S T I N G;
COUNT : C O U N T;
COST : C O S T;
CORRUPTION : C O R R U P T I O N;
CONVERT : C O N V E R T;
CONTROLFILE : C O N T R O L F I L E;
CONTINUE : C O N T I N U E;
CONTEXT : C O N T E X T;
CONTENTS : C O N T E N T S;
CONTENT : C O N T E N T;
CONTAINER : C O N T A I N E R;
CONSTRUCTOR : C O N S T R U C T O R;
CONSTRAINTS : C O N S T R A I N T S;
CONSTRAINT : C O N S T R A I N T;
CONSTANT : C O N S T A N T;
CONSISTENT : C O N S I S T E N T;
CONSIDER : C O N S I D E R;
CONNECT_TIME : C O N N E C T '_' T I M E;
CONNECT_BY_ROOT : C O N N E C T '_' B Y '_' R O O T;
CONNECT_BY_ISLEAF : C O N N E C T '_' B Y '_' I S L E A F;
CONNECT_BY_ISCYCLE : C O N N E C T '_' B Y '_' I S C Y C L E;
CONNECT : C O N N E C T;
CONFORMING : C O N F O R M I N G;
COMPUTE : C O M P U T E;
COMPRESS : C O M P R E S S;
COMPOSITE_LIMIT : C O M P O S I T E '_' L I M I T;
COMPLETE : C O M P L E T E;
COMPILED : C O M P I L E D;
COMPILE : C O M P I L E;
COMPATIBILITY : C O M P A T I B I L I T Y;
COMPACT : C O M P A C T;
COMMITTED : C O M M I T T E D;
COMMIT : C O M M I T;
COMMENT : C O M M E N T;
COLUMN_VALUE : C O L U M N '_' V A L U E;
COLUMN_STATS : C O L U M N '_' S T A T S;
COLUMNS : C O L U M N S;
COLUMN : C O L U M N;
COLLECT : C O L L E C T;
COLAUTH : C O L A U T H;
COARSE : C O A R S E;
COALESCE : C O A L E S C E;
CLUSTERS : C L U S T E R S;
CLUSTERING_FACTOR : C L U S T E R I N G '_' F A C T O R;
CLUSTER : C L U S T E R;
CLOSE_CACHED_OPEN_CURSORS : C L O S E '_' C A C H E D '_' O P E N '_' C U R S 
O R S;
CLOSE : C L O S E;
CLONE : C L O N E;
CLOB_BASE : C L O B '_' B A S E;
CLOB : C L O B;
CLEAR : C L E A R;
CLASS : C L A S S;
CIV_GB : C I V '_' G B;
CHUNK : C H U N K;
CHOOSE : C H O O S E;
CHILD : C H I L D;
CHECKPOINT : C H E C K P O I N T;
CHECK : C H E C K;
CHARSETID : C H A R S E T I D;
CHARSETFORM : C H A R S E T F O R M;
CHARSET : C H A R S E T;
CHAR_CS : C H A R '_' C S;
CHAR_BASE : C H A R '_' B A S E;
CHARACTER : C H A R A C T E R;
CHAR : C H A R;
CHANGE : C H A N G E;
CHAINED : C H A I N E D;
CFILE : C F I L E;
CERTIFICATE : C E R T I F I C A T E;
CATEGORY : C A T E G O R Y;
CAST : C A S T;
CASE : C A S E;
CASCADE : C A S C A D E;
CARDINALITY : C A R D I N A L I T Y;
CANCEL : C A N C E L;
CALLING : C A L L I N G;
CALL : C A L L;
CACHE_TEMP_TABLE : C A C H E '_' T E M P '_' T A B L E;
CACHE_INSTANCES : C A C H E '_' I N S T A N C E S;
CACHE_CB : C A C H E '_' C B;
CACHE : C A C H E;
BYTE : B Y T E;
BYPASS_UJVC : B Y P A S S '_' U J V C;
BYPASS_RECURSIVE_CHECK : B Y P A S S '_' R E C U R S I V E '_' C H E C K;
BY : B Y;
BULK : B U L K;
BUILD : B U I L D;
BUFFER_POOL : B U F F E R '_' P O O L;
BUFFER_CACHE : B U F F E R '_' C A C H E;
BUFFER : B U F F E R;
BROADCAST : B R O A D C A S T;
BOUND : B O U N D;
BOTH : B O T H;
BOOLEAN : B O O L E A N;
BODY : B O D Y;
BLOCKSIZE : B L O C K S I Z E;
BLOCKS : B L O C K S;
BLOCK_RANGE : B L O C K '_' R A N G E;
BLOCK : B L O C K;
BLOB_BASE : B L O B '_' B A S E;
BLOB : B L O B;
BITS : B I T S;
BITMAP_TREE : B I T M A P '_' T R E E;
BITMAPS : B I T M A P S;
BITMAP : B I T M A P;
BINDING : B I N D I N G;
BINARY_INTEGER : B I N A R Y '_' I N T E G E R;
BINARY_FLOAT_NAN : B I N A R Y '_' F L O A T '_' N A N;
BINARY_FLOAT_INFINITY : B I N A R Y '_' F L O A T '_' I N F I N I T Y;
BINARY_FLOAT : B I N A R Y '_' F L O A T;
BINARY_DOUBLE_NAN : B I N A R Y '_' D O U B L E '_' N A N;
BINARY_DOUBLE_INFINITY : B I N A R Y '_' D O U B L E '_' I N F I N I T Y;
BINARY_DOUBLE : B I N A R Y '_' D O U B L E;
BINARY : B I N A R Y;
BIGFILE : B I G F I L E;
BFILE_BASE : B F I L E '_' B A S E;
BFILE : B F I L E;
BETWEEN : B E T W E E N;
BEHALF : B E H A L F;
BEGIN_OUTLINE_DATA : B E G I N '_' O U T L I N E '_' D A T A;
BEGIN : B E G I N;
BEFORE : B E F O R E;
BECOME : B E C O M E;
BATCH : B A T C H;
BACKUP : B A C K U P;
AVG : A V G;
AVAILABILITY : A V A I L A B I L I T Y;
AUTOMATIC : A U T O M A T I C;
AUTOEXTEND : A U T O E X T E N D;
AUTOALLOCATE : A U T O A L L O C A T E;
AUTO : A U T O;
AUTHORIZATION : A U T H O R I Z A T I O N;
AUTHID : A U T H I D;
AUTHENTICATION : A U T H E N T I C A T I O N;
AUTHENTICATED : A U T H E N T I C A T E D;
AUDIT : A U D I T;
ATTRIBUTES : A T T R I B U T E S;
ATTRIBUTE : A T T R I B U T E;
AT : A T;
ASSOCIATE : A S S O C I A T E;
ASC : A S C;
AS : A S;
ARROW : A R R O W;
ARRAY : A R R A Y;
ARCHIVELOG : A R C H I V E L O G;
ARCHIVE : A R C H I V E;
APPLY : A P P L Y;
APPEND : A P P E N D;
ANY : A N Y;
ANTIJOIN : A N T I J O I N;
AND_EQUAL : A N D '_' E Q U A L;
AND : A N D;
ANCILLARY : A N C I L L A R Y;
ANALYZE : A N A L Y Z E;
ALWAYS : A L W A Y S;
ALTER : A L T E R;
ALL_ROWS : A L L '_' R O W S;
ALLOW : A L L O W;
ALLOCATE : A L L O C A T E;
ALL : A L L;
ALIAS : A L I A S;
AGGREGATE : A G G R E G A T E;
AGENT : A G E N T;
AFTER : A F T E R;
ADVISOR : A D V I S O R;
ADVISE : A D V I S E;
ADMINISTRATOR : A D M I N I S T R A T O R;
ADMINISTER : A D M I N I S T E R;
ADMIN : A D M I N;
ADD : A D D;
ACTIVATE : A C T I V A T E;
ACCOUNT : A C C O U N T;
ACCESSED : A C C E S S E D;
ACCESS : A C C E S S;
ABORT : A B O R T;

///////////// CODE SNIPPET ENDS HERE ///////////////////

From mark.mandel at gmail.com  Sun Dec 24 02:42:41 2006
From: mark.mandel at gmail.com (Mark Mandel)
Date: Sun, 24 Dec 2006 21:42:41 +1100
Subject: [antlr-interest] ANTLR 3: XML Parsing tutorial
Message-ID: <4153ee230612240242i4e027876s9a0032d25abc8b0a@mail.gmail.com>

Hey,

(Quick prefix with a ANTLR newbie disclaimer)

Quick question for you all:

Looking at:
http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer

The rule in question is:
WS  : (' '|'\r'|'\t'|'\u000C'|'\n') {channel=99;}
    ;

2 questions on the statement made on this rule:

(1)
'The rule WS is special as it recognizes all white spaces, but does
not pass it to the next stage, the token parser, because we don't care
about white spaces.'

Any reason why a $channel=HIDDEN was not used (I realise this is the
same, but, I would have thought it would make more sense to a new
user?)

(2)
Sending the token to channel 99 is ANTLR's way of saying that.
'0'..'9' is a short form of saying (0|1|2|3|4|5|6|7|8|9) and 'a'..'z'
respectively for the characters from a to z.'

Is it just me, or does this sentence not make any sense?

>From what I've been reading, sending the token to chennel 99 is ANTLRs
way of saying, 'please ignore this token, because we do not care about
it at this time'.  Am I wrong?

Otherwise, tutorial is looking good - just plugging away at it.

Thanks for the hard work.

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From mark.mandel at gmail.com  Sun Dec 24 03:07:11 2006
From: mark.mandel at gmail.com (Mark Mandel)
Date: Sun, 24 Dec 2006 22:07:11 +1100
Subject: [antlr-interest] ANTLR v3: Java Versions?
Message-ID: <4153ee230612240307q71c0c29bi67d6302dfdf6d1f4@mail.gmail.com>

Another quick question -

What version of Java is reqired to run Antlr v3?

What version of Java is the generated Java code expected to run under?

I ask these questions as I am building a Parser to run under a Java
1.4 platform, and I would like to make sure that they will compile
with the 1.4 SDK.

Thanks for the hard work, as a new developer to ANTLR, I've actually
wrapped my head far faster around v3 in an hour, than I have with a
weeks reading into v2.

Cheers,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From oliver.zeigermann at gmail.com  Sun Dec 24 03:41:34 2006
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 24 Dec 2006 12:41:34 +0100
Subject: [antlr-interest] ANTLR 3: XML Parsing tutorial
In-Reply-To: <4153ee230612240242i4e027876s9a0032d25abc8b0a@mail.gmail.com>
References: <4153ee230612240242i4e027876s9a0032d25abc8b0a@mail.gmail.com>
Message-ID: <9da4f4520612240341l76ab3e96h6195c4a74db43b2c@mail.gmail.com>

Hi Mark!

2006/12/24, Mark Mandel <mark.mandel at gmail.com>:
> Hey,
>
> (Quick prefix with a ANTLR newbie disclaimer)
>
> Quick question for you all:
>
> Looking at:
> http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer
>
> The rule in question is:
> WS  : (' '|'\r'|'\t'|'\u000C'|'\n') {channel=99;}
>     ;
>
> 2 questions on the statement made on this rule:
>
> (1)
> 'The rule WS is special as it recognizes all white spaces, but does
> not pass it to the next stage, the token parser, because we don't care
> about white spaces.'
>
> Any reason why a $channel=HIDDEN was not used (I realise this is the
> same, but, I would have thought it would make more sense to a new
> user?)

$channel=HIDDEN would actually be better I guess.

> (2)
> Sending the token to channel 99 is ANTLR's way of saying that.
> '0'..'9' is a short form of saying (0|1|2|3|4|5|6|7|8|9) and 'a'..'z'
> respectively for the characters from a to z.'
>
> Is it just me, or does this sentence not make any sense?

Does not make sense to me neither. However, if you include the
sentence directly before that:

"The rule WS is special as it recognizes all white spaces, but does
not pass it to the next stage, the token parser, because we don't care
about white spaces."

Does it make sense?

> >From what I've been reading, sending the token to chennel 99 is ANTLRs
> way of saying, 'please ignore this token, because we do not care about
> it at this time'.  Am I wrong?

That's right and may be a better phrasing.

Anyway, it is a Wiki. If things do not sound clear, you are free and
welcome to make them better :)

Cheers

Oliver

From rob.hill at blueyonder.co.uk  Sun Dec 24 04:38:57 2006
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Sun, 24 Dec 2006 12:38:57 -0000
Subject: [antlr-interest] Pagan Festivals n stuff.
Message-ID: <000001c72758$7b1d94d0$7158be70$@hill@blueyonder.co.uk>

M-E-R-R-Y  C-H-R-I-S-T-M-A-S!

--------------------------------------

 

Thanks for all your help over the past year!

 

See y'all in the new year.

 

/2ob

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061224/dfa0dd6b/attachment.html 

From parrt at cs.usfca.edu  Sun Dec 24 10:16:02 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 24 Dec 2006 10:16:02 -0800
Subject: [antlr-interest] Antlr 3 generates very big java classes which
	do not compile
In-Reply-To: <200612241057.20778.alexander.berger@gmx.ch>
References: <200612241057.20778.alexander.berger@gmx.ch>
Message-ID: <2F8FBA82-D228-45B5-AC1A-50363801669B@cs.usfca.edu>

Ok, I just have to ask: why do you do

COLLECT : C O L L E C T;

when you can do

COLLECT : 'COLLECT';

?

Ter


From parrt at cs.usfca.edu  Sun Dec 24 10:17:00 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 24 Dec 2006 10:17:00 -0800
Subject: [antlr-interest] ANTLR v3: Java Versions?
In-Reply-To: <4153ee230612240307q71c0c29bi67d6302dfdf6d1f4@mail.gmail.com>
References: <4153ee230612240307q71c0c29bi67d6302dfdf6d1f4@mail.gmail.com>
Message-ID: <4F8D3D59-160B-4991-B83B-3438BC1C986A@cs.usfca.edu>


On Dec 24, 2006, at 3:07 AM, Mark Mandel wrote:

> Another quick question -
>
> What version of Java is reqired to run Antlr v3?

1.4 probably min.

> What version of Java is the generated Java code expected to run under?

1.3 and above probably.

> I ask these questions as I am building a Parser to run under a Java
> 1.4 platform, and I would like to make sure that they will compile
> with the 1.4 SDK.

no problem.

Ter

From kroepke at classdump.org  Sun Dec 24 15:27:39 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 25 Dec 2006 00:27:39 +0100
Subject: [antlr-interest] Antlr 3 generates very big java classes which
	do not compile
In-Reply-To: <2F8FBA82-D228-45B5-AC1A-50363801669B@cs.usfca.edu>
References: <200612241057.20778.alexander.berger@gmx.ch>
	<2F8FBA82-D228-45B5-AC1A-50363801669B@cs.usfca.edu>
Message-ID: <E19A437B-5982-4E5C-A93E-5FEC12A1E108@classdump.org>


On 24. Dec 2006, at 19:16 , Terence Parr wrote:

> Ok, I just have to ask: why do you do
>
> COLLECT : C O L L E C T;
>
> when you can do
>
> COLLECT : 'COLLECT';

Seems the OP wanted to emulate case insensitivity by using
fragment C : 'c'|'C';
rules....

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From manunews at gmail.com  Sun Dec 24 23:54:39 2006
From: manunews at gmail.com (Manu)
Date: Mon, 25 Dec 2006 08:54:39 +0100
Subject: [antlr-interest] ANTLR trees and adaptors
Message-ID: <96f4581f0612242354m5eef9e05td53e7ffa8aac175f@mail.gmail.com>

The tree construction seems a bit counterintuitive to me, having the
code split in the tree and in the adaptor, with operations that have
different behaviour if the tree has nil nodes or not.

Wouldn't it be easier to implement a more robust tree data structure
that can handle all the scenarios orthogonally?

For example, defining a Tree class and TreeNode class. A tree has
always an empty tree node where it can't store information as its root
but it is used just as a place holder. The real data are the childs of
that place holder. A tree node has a list of childs and maybe a
reference to its parent. With this model a tree can have more than 1
root tree node below the place holder tree node. This is not a
problem, is an added feature.

Some examples:

1) (a b c) will be represented as:

PLACEHOLDER
|   |   |
a  b  c

2) (d (e f g)) will be represented as:

PLACEHOLDER
|
d
|
--------
|   |   |
e  f  g

What do you think? Am I the only one that thinks this is better?

From manunews at gmail.com  Mon Dec 25 00:36:42 2006
From: manunews at gmail.com (Manu)
Date: Mon, 25 Dec 2006 09:36:42 +0100
Subject: [antlr-interest] ANTLR trees and adaptors
In-Reply-To: <96f4581f0612242354m5eef9e05td53e7ffa8aac175f@mail.gmail.com>
References: <96f4581f0612242354m5eef9e05td53e7ffa8aac175f@mail.gmail.com>
Message-ID: <96f4581f0612250036u56263a49jfcccfd0a88d382d5@mail.gmail.com>

Sorry, the examples weren't in ANTLR notation. In ANTLR notation it
will be something like:

1) ^(nil a b c)
2) ^(d e f g)

2006/12/25, Manu <manunews at gmail.com>:
> The tree construction seems a bit counterintuitive to me, having the
> code split in the tree and in the adaptor, with operations that have
> different behaviour if the tree has nil nodes or not.
>
> Wouldn't it be easier to implement a more robust tree data structure
> that can handle all the scenarios orthogonally?
>
> For example, defining a Tree class and TreeNode class. A tree has
> always an empty tree node where it can't store information as its root
> but it is used just as a place holder. The real data are the childs of
> that place holder. A tree node has a list of childs and maybe a
> reference to its parent. With this model a tree can have more than 1
> root tree node below the place holder tree node. This is not a
> problem, is an added feature.
>
> Some examples:
>
> 1) (a b c) will be represented as:
>
> PLACEHOLDER
> |   |   |
> a  b  c
>
> 2) (d (e f g)) will be represented as:
>
> PLACEHOLDER
> |
> d
> |
> --------
> |   |   |
> e  f  g
>
> What do you think? Am I the only one that thinks this is better?
>

From debabrata.pani at gmail.com  Mon Dec 25 02:58:16 2006
From: debabrata.pani at gmail.com (Debabrata Pani)
Date: Mon, 25 Dec 2006 16:28:16 +0530
Subject: [antlr-interest] StackOverflow Error
Message-ID: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>

hi ,
I have a grammar and i have generated parsers using ANTLR.
for smaller files the program runs without error,
but for even reasonably medium sized ones, 70kBytes, the parser throws a
STACK OVERFLOW exception
The grammar was for parsing Open Financial Exchange files, which is based on
SGML.

Sample OFX file:

OFXHEADER:100
DATA:OFXSGML
VERSION:102
SECURITY:NONE
ENCODING:USASCII
CHARSET:1252
COMPRESSION:NONE
OLDFILEUID:NONE
NEWFILEUID:NONE

<OFX>
<SIGNONMSGSRSV1>
<SONRS>
<STATUS>
<CODE>0
<SEVERITY>INFO
</STATUS>
<DTSERVER>20051124163122
<LANGUAGE>ENG
</SONRS>
</SIGNONMSGSRSV1>
<CREDITCARDMSGSRSV1>
<CCSTMTTRNRS>
<TRNUID>0
<STATUS>
<CODE>0
<SEVERITY>INFO
</STATUS>
<CCSTMTRS>
<CURDEF>USD
<CCACCTFROM>
<ACCTID>XXXXXXXXXXXXXXXX
</CCACCTFROM>
<BANKTRANLIST>
<DTSTART>20051003120000
<DTEND>20051025120000
<STMTTRN>
<TRNTYPE>DEBIT
<DTPOSTED>20051002180000
<TRNAMT>-35.06
<FITID>3013062760001
<SIC>5499
<NAME>Random graphs
</STMTTRN>
...

The grammars is :

class OfxParser extends Parser;
options
{
k=2
}
ofx_entity : ofx_header  NEWLINE  ofx_aggregate EOF
            ;

ofx_header: (n:NAME COLON m:NAME)NEWLINE ofx_header

            |

          ;

ofx_aggregate : tag_open  (WS|NEWLINE)* remaining
              | tag_closed  (WS|NEWLINE)* ofx_aggregate

              |
              ;

remaining : ofx_aggregate
          | element (NEWLINE)* ofx_aggregate

          ;
tag_open : LT n:NAME GT

         ;

tag_closed : LT FSLASH n:NAME GT

           ;


element : (n:NAME (WS|COLON|FSLASH)*)+

        ;

The error thrown was:

java.lang.StackOverflowError
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown
Source)
    at java.lang.reflect.Constructor.newInstance(Unknown Source)
    at java.lang.Class.newInstance0(Unknown Source)
    at java.lang.Class.newInstance(Unknown Source)
    at antlr.CharScanner.makeToken(CharScanner.java:175)
    at com.project.finance.importer.ofx.OFXLexer.mLT(OFXLexer.java:379)
    at com.project.finance.importer.ofx.OFXLexer.nextToken(OFXLexer.java:92)
    at antlr.TokenBuffer.fill(TokenBuffer.java:69)
    at antlr.TokenBuffer.LA(TokenBuffer.java:80)
    at antlr.LLkParser.LA(LLkParser.java:52)
    at com.project.finance.importer.ofx.OfxParser.element(OfxParser.java
:304)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:239)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:234)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:192)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:253)
    at com.project.finance.importer.ofx.OfxParser.ofx_aggregate(
OfxParser.java:166)
    at com.project.finance.importer.ofx.OfxParser.remaining(OfxParser.java
:234)
   ....
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061225/5ec7d8cd/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 25 08:52:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Dec 2006 08:52:39 -0800
Subject: [antlr-interest] ANTLR trees and adaptors
In-Reply-To: <96f4581f0612242354m5eef9e05td53e7ffa8aac175f@mail.gmail.com>
References: <96f4581f0612242354m5eef9e05td53e7ffa8aac175f@mail.gmail.com>
Message-ID: <D84CB378-6BE8-45C6-B6B4-0218CEB264A5@cs.usfca.edu>

Hi.  The problem is that trees are like fractals: they look the same  
no matter what scale you look at.  A node is a tree in fact and so is  
a subtree.  The nil is no problem at all.  Making two classes is  
weird.  So a tree would just be the top outermost level? Then how do  
I add that to another tree?  I'd have to carve apart.

I have cleaned up the construction a bit now that subrules don't have  
subtree roots.  Only nil() call is at start of method. :)

Ter

On Dec 24, 2006, at 11:54 PM, Manu wrote:

> The tree construction seems a bit counterintuitive to me, having the
> code split in the tree and in the adaptor, with operations that have
> different behaviour if the tree has nil nodes or not.
>
> Wouldn't it be easier to implement a more robust tree data structure
> that can handle all the scenarios orthogonally?
>
> For example, defining a Tree class and TreeNode class. A tree has
> always an empty tree node where it can't store information as its root
> but it is used just as a place holder. The real data are the childs of
> that place holder. A tree node has a list of childs and maybe a
> reference to its parent. With this model a tree can have more than 1
> root tree node below the place holder tree node. This is not a
> problem, is an added feature.
>
> Some examples:
>
> 1) (a b c) will be represented as:
>
> PLACEHOLDER
> |   |   |
> a  b  c
>
> 2) (d (e f g)) will be represented as:
>
> PLACEHOLDER
> |
> d
> |
> --------
> |   |   |
> e  f  g
>
> What do you think? Am I the only one that thinks this is better?


From parrt at cs.usfca.edu  Mon Dec 25 08:55:06 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Dec 2006 08:55:06 -0800
Subject: [antlr-interest] StackOverflow Error
In-Reply-To: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>
References: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>
Message-ID: <8AD1EC27-6521-4D5A-BAE4-6292052E6BEC@cs.usfca.edu>

Hi. You've made an infinite loop with your tail recursion in those  
aggr. and remaining rules.
Ter
On Dec 25, 2006, at 2:58 AM, Debabrata Pani wrote:

> hi ,
> I have a grammar and i have generated parsers using ANTLR.
> for smaller files the program runs without error,
> but for even reasonably medium sized ones, 70kBytes, the parser  
> throws a
> STACK OVERFLOW exception
> The grammar was for parsing Open Financial Exchange files, which is  
> based on SGML.
>
> Sample OFX file:
>
> OFXHEADER:100
> DATA:OFXSGML
> VERSION:102
> SECURITY:NONE
> ENCODING:USASCII
> CHARSET:1252
> COMPRESSION:NONE
> OLDFILEUID:NONE
> NEWFILEUID:NONE
>
> <OFX>
> <SIGNONMSGSRSV1>
> <SONRS>
> <STATUS>
> <CODE>0
> <SEVERITY>INFO
> </STATUS>
> <DTSERVER>20051124163122
> <LANGUAGE>ENG
> </SONRS>
> </SIGNONMSGSRSV1>
> <CREDITCARDMSGSRSV1>
> <CCSTMTTRNRS>
> <TRNUID>0
> <STATUS>
> <CODE>0
> <SEVERITY>INFO
> </STATUS>
> <CCSTMTRS>
> <CURDEF>USD
> <CCACCTFROM>
> <ACCTID>XXXXXXXXXXXXXXXX
> </CCACCTFROM>
> <BANKTRANLIST>
> <DTSTART>20051003120000
> <DTEND>20051025120000
> <STMTTRN>
> <TRNTYPE>DEBIT
> <DTPOSTED>20051002180000
> <TRNAMT>-35.06
> <FITID>3013062760001
> <SIC>5499
> <NAME>Random graphs
> </STMTTRN>
> ...
>
> The grammars is :
>
> class OfxParser extends Parser;
> options
> {
> k=2
> }
> ofx_entity : ofx_header  NEWLINE  ofx_aggregate EOF
>             ;
>
> ofx_header: (n:NAME COLON m:NAME)NEWLINE ofx_header
>
>             |
>
>           ;
>
> ofx_aggregate : tag_open  (WS|NEWLINE)* remaining
>               | tag_closed  (WS|NEWLINE)* ofx_aggregate
>
>               |
>               ;
>
> remaining : ofx_aggregate
>           | element (NEWLINE)* ofx_aggregate
>
>           ;
> tag_open : LT n:NAME GT
>
>          ;
>
> tag_closed : LT FSLASH n:NAME GT
>
>            ;
>
>
> element : (n:NAME (WS|COLON|FSLASH)*)+
>
>         ;
>
> The error thrown was:
>
> java.lang.StackOverflowError
>     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance 
> (Unknown Source)
>     at java.lang.reflect.Constructor.newInstance(Unknown Source)
>     at java.lang.Class.newInstance0(Unknown Source)
>     at java.lang.Class.newInstance (Unknown Source)
>     at antlr.CharScanner.makeToken(CharScanner.java:175)
>     at com.project.finance.importer.ofx.OFXLexer.mLT(OFXLexer.java: 
> 379)
>     at com.project.finance.importer.ofx.OFXLexer.nextToken 
> (OFXLexer.java :92)
>     at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>     at antlr.TokenBuffer.LA(TokenBuffer.java:80)
>     at antlr.LLkParser.LA(LLkParser.java:52)
>     at com.project.finance.importer.ofx.OfxParser.element 
> (OfxParser.java :304)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:239)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining  
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate  
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining  
> (OfxParser.java:234)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:192)
>     at com.project.finance.importer.ofx.OfxParser.remaining  
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate  
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining  
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate  
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining  
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate 
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:253)
>     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate  
> (OfxParser.java:166)
>     at com.project.finance.importer.ofx.OfxParser.remaining 
> (OfxParser.java:234)
>    ....


From rob.hill at blueyonder.co.uk  Mon Dec 25 09:45:55 2006
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Mon, 25 Dec 2006 17:45:55 -0000
Subject: [antlr-interest] StackOverflow Error
In-Reply-To: <8AD1EC27-6521-4D5A-BAE4-6292052E6BEC@cs.usfca.edu>
References: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>
	<8AD1EC27-6521-4D5A-BAE4-6292052E6BEC@cs.usfca.edu>
Message-ID: <000301c7284c$8751d0a0$95f571e0$@hill@blueyonder.co.uk>

> Sent: 25 December 2006 16:55

LOL - Hey Ter, give it a rest mate ! Its Christmas! ;)
At 4.55, i was totally OD'd on xmas pudding and mince pies!
Don't tell me, Santa brought you a new PC, and you're just testing it
out.... hehehe

Merry Xmas!
/2ob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> To: ANTLR List
> Subject: Re: [antlr-interest] StackOverflow Error
> 
> Hi. You've made an infinite loop with your tail recursion in those
> aggr. and remaining rules.
> Ter
> On Dec 25, 2006, at 2:58 AM, Debabrata Pani wrote:
> 
> > hi ,
> > I have a grammar and i have generated parsers using ANTLR.
> > for smaller files the program runs without error,
> > but for even reasonably medium sized ones, 70kBytes, the parser
> > throws a
> > STACK OVERFLOW exception
> > The grammar was for parsing Open Financial Exchange files, which is
> > based on SGML.
> >
> > Sample OFX file:
> >
> > OFXHEADER:100
> > DATA:OFXSGML
> > VERSION:102
> > SECURITY:NONE
> > ENCODING:USASCII
> > CHARSET:1252
> > COMPRESSION:NONE
> > OLDFILEUID:NONE
> > NEWFILEUID:NONE
> >
> > <OFX>
> > <SIGNONMSGSRSV1>
> > <SONRS>
> > <STATUS>
> > <CODE>0
> > <SEVERITY>INFO
> > </STATUS>
> > <DTSERVER>20051124163122
> > <LANGUAGE>ENG
> > </SONRS>
> > </SIGNONMSGSRSV1>
> > <CREDITCARDMSGSRSV1>
> > <CCSTMTTRNRS>
> > <TRNUID>0
> > <STATUS>
> > <CODE>0
> > <SEVERITY>INFO
> > </STATUS>
> > <CCSTMTRS>
> > <CURDEF>USD
> > <CCACCTFROM>
> > <ACCTID>XXXXXXXXXXXXXXXX
> > </CCACCTFROM>
> > <BANKTRANLIST>
> > <DTSTART>20051003120000
> > <DTEND>20051025120000
> > <STMTTRN>
> > <TRNTYPE>DEBIT
> > <DTPOSTED>20051002180000
> > <TRNAMT>-35.06
> > <FITID>3013062760001
> > <SIC>5499
> > <NAME>Random graphs
> > </STMTTRN>
> > ...
> >
> > The grammars is :
> >
> > class OfxParser extends Parser;
> > options
> > {
> > k=2
> > }
> > ofx_entity : ofx_header  NEWLINE  ofx_aggregate EOF
> >             ;
> >
> > ofx_header: (n:NAME COLON m:NAME)NEWLINE ofx_header
> >
> >             |
> >
> >           ;
> >
> > ofx_aggregate : tag_open  (WS|NEWLINE)* remaining
> >               | tag_closed  (WS|NEWLINE)* ofx_aggregate
> >
> >               |
> >               ;
> >
> > remaining : ofx_aggregate
> >           | element (NEWLINE)* ofx_aggregate
> >
> >           ;
> > tag_open : LT n:NAME GT
> >
> >          ;
> >
> > tag_closed : LT FSLASH n:NAME GT
> >
> >            ;
> >
> >
> > element : (n:NAME (WS|COLON|FSLASH)*)+
> >
> >         ;
> >
> > The error thrown was:
> >
> > java.lang.StackOverflowError
> >     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance
> > (Unknown Source)
> >     at java.lang.reflect.Constructor.newInstance(Unknown Source)
> >     at java.lang.Class.newInstance0(Unknown Source)
> >     at java.lang.Class.newInstance (Unknown Source)
> >     at antlr.CharScanner.makeToken(CharScanner.java:175)
> >     at com.project.finance.importer.ofx.OFXLexer.mLT(OFXLexer.java:
> > 379)
> >     at com.project.finance.importer.ofx.OFXLexer.nextToken
> > (OFXLexer.java :92)
> >     at antlr.TokenBuffer.fill(TokenBuffer.java:69)
> >     at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> >     at antlr.LLkParser.LA(LLkParser.java:52)
> >     at com.project.finance.importer.ofx.OfxParser.element
> > (OfxParser.java :304)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:239)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:234)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:192)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:253)
> >     at com.project.finance.importer.ofx.OfxParser.ofx_aggregate
> > (OfxParser.java:166)
> >     at com.project.finance.importer.ofx.OfxParser.remaining
> > (OfxParser.java:234)
> >    ....




From parrt at cs.usfca.edu  Mon Dec 25 09:52:31 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Dec 2006 09:52:31 -0800
Subject: [antlr-interest] StackOverflow Error
In-Reply-To: <000301c7284c$8751d0a0$95f571e0$@hill@blueyonder.co.uk>
References: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>
	<8AD1EC27-6521-4D5A-BAE4-6292052E6BEC@cs.usfca.edu>
	<000301c7284c$8751d0a0$95f571e0$@hill@blueyonder.co.uk>
Message-ID: <23E8D934-9CCF-4253-93EE-B415562A9D30@cs.usfca.edu>


On Dec 25, 2006, at 9:45 AM, Rob Hill wrote:

>> Sent: 25 December 2006 16:55
>
> LOL - Hey Ter, give it a rest mate ! Its Christmas! ;)

yeah, just killing time til I gotta stuff my face with food this  
afternoon. ;)

> At 4.55, i was totally OD'd on xmas pudding and mince pies!

Right behind ya...

> Don't tell me, Santa brought you a new PC, and you're just testing it
> out.... hehehe

Nope...no presents. ;)  Well, the lack of email flooding my box is a  
present enough this time of year. ;)

Ter

From kroepke at classdump.org  Mon Dec 25 09:58:24 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 25 Dec 2006 18:58:24 +0100
Subject: [antlr-interest] SantaOverflow Error ;)
In-Reply-To: <23E8D934-9CCF-4253-93EE-B415562A9D30@cs.usfca.edu>
References: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>
	<8AD1EC27-6521-4D5A-BAE4-6292052E6BEC@cs.usfca.edu>
	<000301c7284c$8751d0a0$95f571e0$@hill@blueyonder.co.uk>
	<23E8D934-9CCF-4253-93EE-B415562A9D30@cs.usfca.edu>
Message-ID: <43E819D8-0E10-441A-9155-4DB017ED3B76@classdump.org>


On 25. Dec 2006, at 18:52 , Terence Parr wrote:

>> At 4.55, i was totally OD'd on xmas pudding and mince pies!
>
> Right behind ya...

See, it has positive sides to begin celebrating on Christmas Eve, I'm  
telling ya!

>> Don't tell me, Santa brought you a new PC, and you're just testing it
>> out.... hehehe
>
> Nope...no presents. ;)  Well, the lack of email flooding my box is  
> a present enough this time of year. ;)

Oh, I could forward my daily spam to you if you like...;)
But I agree, it's nice and quite, perfect time to code :D

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From rob.hill at blueyonder.co.uk  Mon Dec 25 10:32:37 2006
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Mon, 25 Dec 2006 18:32:37 -0000
Subject: [antlr-interest] SantaOverflow Error ;)
In-Reply-To: <43E819D8-0E10-441A-9155-4DB017ED3B76@classdump.org>
References: <2d1f7e8d0612250258p14cf2db0m894fdb8f296c310b@mail.gmail.com>
	<8AD1EC27-6521-4D5A-BAE4-6292052E6BEC@cs.usfca.edu>
	<000301c7284c$8751d0a0$95f571e0$@hill@blueyonder.co.uk>
	<23E8D934-9CCF-4253-93EE-B415562A9D30@cs.usfca.edu>
	<43E819D8-0E10-441A-9155-4DB017ED3B76@classdump.org>
Message-ID: <000001c72853$0d657ce0$283076a0$@hill@blueyonder.co.uk>

Hi Kay, Merry xmas to u bud.

Ok, i have to admit, im not here just checkin' my mail...
Im trying to get my head round the new WPF stuff. Its pretty good actually,
im quite surprised at how flexible the XAML stuff actually it, once i'd
figured out its actually just like one big scenegraph, it just starting to
fall into place. I knew that game dev stuff would eventually come in handy
;) LOL

Plus i've just installed Vista, VS2005 & all the c#3 CTP stuff and
downloaded the Expression Blend Beta, so i've got loads to play with while
everyone else is busy processing their chicken dinner ! :)

Damn vista's fine on decent HW !

/2ob




> -----Original Message-----
> From: Kay Roepke [mailto:kroepke at classdump.org]
> Sent: 25 December 2006 17:58
> To: Terence Parr
> Cc: Robert Hill; ANTLR List
> Subject: Re: [antlr-interest] SantaOverflow Error ;)
> 
> 
> On 25. Dec 2006, at 18:52 , Terence Parr wrote:
> 
> >> At 4.55, i was totally OD'd on xmas pudding and mince pies!
> >
> > Right behind ya...
> 
> See, it has positive sides to begin celebrating on Christmas Eve, I'm
> telling ya!
> 
> >> Don't tell me, Santa brought you a new PC, and you're just testing
> it
> >> out.... hehehe
> >
> > Nope...no presents. ;)  Well, the lack of email flooding my box is
> > a present enough this time of year. ;)
> 
> Oh, I could forward my daily spam to you if you like...;)
> But I agree, it's nice and quite, perfect time to code :D
> 
> cheers,
> -k
> 
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 




From alexander.berger at gmx.ch  Tue Dec 26 07:52:53 2006
From: alexander.berger at gmx.ch (gmx)
Date: Tue, 26 Dec 2006 16:52:53 +0100
Subject: [antlr-interest] Antlr 3 generates very big java classes which
	do not compile
In-Reply-To: <E19A437B-5982-4E5C-A93E-5FEC12A1E108@classdump.org>
References: <200612241057.20778.alexander.berger@gmx.ch>
	<2F8FBA82-D228-45B5-AC1A-50363801669B@cs.usfca.edu>
	<E19A437B-5982-4E5C-A93E-5FEC12A1E108@classdump.org>
Message-ID: <200612261652.53636.alexander.berger@gmx.ch>

Thanks for your response

Actually That grammar served just as a (bad) example for one possible way to 
generate a case insensitive formal description of a grammar. I really know 
how to workaround the problem an that there are other, more efficient ways to 
achieve case insensitivity [at least I think so :-)].

However, my intention was just to mention the problem about the generated java 
code, which might get to big to comply with the java specification. At the 
moment I am writting my diploma about writting a parser for a very complex 
and featurerich proprietary programming language (PL/SQL). That language 
supports so many different kinds of statements and other constructs, that it 
is very likely that the generated parser will be to big to fit into one java 
class. (This is because java class files are limited to 65535 entries in 
their constant pool)

So the actual question is. Wether to create an additional java backend for 
antlr which will not only emit on source file (*.java) for the lexer and one 
for the parser, but will create several files so that these still comply to 
the java specification and can be compiled?
E.g. Instead of one java source file for the whole parse, a source file is 
created for each rule in the grammar.

Kind regards
Alex

Am Montag, 25. Dezember 2006 00:27 schrieb Kay Roepke:
> On 24. Dec 2006, at 19:16 , Terence Parr wrote:
> > Ok, I just have to ask: why do you do
> >
> > COLLECT : C O L L E C T;
> >
> > when you can do
> >
> > COLLECT : 'COLLECT';
>
> Seems the OP wanted to emulate case insensitivity by using
> fragment C : 'c'|'C';
> rules....
>
> cheers,
> -k

From kroepke at classdump.org  Tue Dec 26 08:40:29 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 26 Dec 2006 17:40:29 +0100
Subject: [antlr-interest] Antlr 3 generates very big java classes which
	do not compile
In-Reply-To: <200612261652.53636.alexander.berger@gmx.ch>
References: <200612241057.20778.alexander.berger@gmx.ch>
	<2F8FBA82-D228-45B5-AC1A-50363801669B@cs.usfca.edu>
	<E19A437B-5982-4E5C-A93E-5FEC12A1E108@classdump.org>
	<200612261652.53636.alexander.berger@gmx.ch>
Message-ID: <7FBC40F5-9D48-45D5-B392-9612FB41B9EC@classdump.org>

Hi!

On 26. Dec 2006, at 16:52 , gmx wrote:

>
> So the actual question is. Wether to create an additional java  
> backend for
> antlr which will not only emit on source file (*.java) for the  
> lexer and one
> for the parser, but will create several files so that these still  
> comply to
> the java specification and can be compiled?
> E.g. Instead of one java source file for the whole parse, a source  
> file is
> created for each rule in the grammar.

I doubt that this will be part of the standard distribution, but Ter  
might think otherwise (although
this will definitely not make it into the 3.0 release, due to more  
important issues needing attention).

If it is a big concern for you right now, you could manually split up  
the files, though I think
in Java each file must contain a single class, isn't that right? If  
that's true, you'd have
to split up the recognizer across multiple classes, which will pose  
several problems in itself.

In the end, there must be one mTokens method. You could of course  
split that up into two or more methods,
but for the moment you're on your own, sorry.
Creating a new target probably wouldn't cut it, because the  
CodeGenerator is responsible of putting the output
together. The splitting must happen there (and won't be pretty, I'm  
afraid...).

Oh, I just remembered the following:
It's probably really bad advice, but because it's Christmas and I  
feel like giving bad advice this time
of the year, I give it nonetheless ;)
There's a static boolean in CodeGenerator.java, which toggles whether  
to create inline DFAs or always create
DFA objects for prediction. Be careful, this is a global switch, you  
will not get *any* inline (if and switch-based)
DFAs anymore.
Changing it to false and running your grammar through the modified  
ANTLR compiles just fine for me.
Essentially, it splits the mTokens method into one call to  
DFA.predict and the big switch which calls the
predicted alt's methods. You could get away with this for now.
Try both methods and compare the output (esp. mTokens()). You'll see  
what I mean.
Compiling the generated lexer source takes about 6 seconds on my  
machine...FWIW (=nothing ;)).

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Tue Dec 26 08:47:43 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 26 Dec 2006 17:47:43 +0100
Subject: [antlr-interest] Antlr 3 generates very big java classes which
	do not compile
In-Reply-To: <7FBC40F5-9D48-45D5-B392-9612FB41B9EC@classdump.org>
References: <200612241057.20778.alexander.berger@gmx.ch>
	<2F8FBA82-D228-45B5-AC1A-50363801669B@cs.usfca.edu>
	<E19A437B-5982-4E5C-A93E-5FEC12A1E108@classdump.org>
	<200612261652.53636.alexander.berger@gmx.ch>
	<7FBC40F5-9D48-45D5-B392-9612FB41B9EC@classdump.org>
Message-ID: <A56E44C0-C537-43BF-80D1-359D85708F51@classdump.org>


On 26. Dec 2006, at 17:40 , Kay Roepke wrote:

> There's a static boolean in CodeGenerator.java, which toggles  
> whether to create inline DFAs or always create
> DFA objects for prediction. Be careful, this is a global switch,  
> you will not get *any* inline (if and switch-based)
> DFAs anymore.

P.S.: I created a bug report for this. Maybe we can somehow have a  
threshold that tells us to prefer a DFA object over inline
acyclic DFAs if we have a lot of labels. This might allow a larger  
class of grammars to compile.

<http://www.antlr.org:8888/browse/ANTLR-75>

-k
-- 
Kay R?pke
http://classdump.org/





From pink at odahoda.de  Tue Dec 26 13:20:31 2006
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 26 Dec 2006 22:20:31 +0100
Subject: [antlr-interest] Ping Marq Koel and Wolfgang Hafelinger: Python
	target for V3
Message-ID: <ems3n2$jgr$1@sea.gmane.org>

Hello Marq, Wolfgang, Terence and everyone else,

I hope everyone survived the holidays :)

I would like to ask (once again ;) ) about the status of the Python target
for ANTLR3. 
Marq, Wolfgang (or someone else): did you already spend some of your time on
this?
The parser of my current project needs some major changes anyway and I would
really like to try the V2->V3 migration now. If nobody else is working on
the Python target, I will give it a try myself - though I won't make any
promises yet.

Happy hacking,
        Benjamin

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From james.mello at intelligentdiscovery.com  Tue Dec 26 16:00:07 2006
From: james.mello at intelligentdiscovery.com (James Mello)
Date: Tue, 26 Dec 2006 16:00:07 -0800
Subject: [antlr-interest] Question on ambiguouity
Message-ID: <005801c72949$f863ccf0$ad7481ce@apptechsys.com>

I'm relatively new to this whole parser grammer thing and I'm trying to get
up to speed as quickly as possible. This is a particularly troubling thing
as I can't quite grok why this doesn't work.... So given this simple set of
rules and productions....

class MyParser extends Parser;

options
{
	buildAST = true;	
	k = 2;
}

multipleIDs :
	(ID)+
	;

class MyLexer extends Lexer;

options
{
	k = 2;
	charVocabulary = '\u0000'..'\ufffe';
	caseSensitive = false;
}

ID : 
	'a'..'z'
	;

The expression for multipleIDs compiles cleanly...

When you change the multipleIDs rule to the following

multipleIDs : 
	ID (multipleIDs)*

You end up with a warning that says:

Nondeterminism upon K==1:ID K==2:ID between alt 1 and exit branch of block

I'm trying to figure out why this is the case as it seems to me that a
recursive rule like this should work. I've looked a bit for some info on the
faq and didn't find much on this.

Finally, since this is NOT the way to write recursive rules, how does one go
about doing this correctly?


James Mello : Software Engineer - ATS, Inc. 
web: www.intelligentdiscovery.com | (p) 360.698.7100x236 | (f) 360.698.7200 



From LukeSilver at web.de  Wed Dec 27 01:14:01 2006
From: LukeSilver at web.de (Luke Silver)
Date: Wed, 27 Dec 2006 10:14:01 +0100
Subject: [antlr-interest] lexer and parser implementation in ANTLRv3
Message-ID: <37531559@web.de>

Hi,

yes, there is a ANTLRReaderStream and I already solved my problem with this constructor:

public MyLexer(Reader reader) throws IOException {
		super(new ANTLRReaderStream(reader));
	}


regards,
Luke



> -----Urspr?ngliche Nachricht-----
> Von: Terence Parr <parrt at cs.usfca.edu>
> Gesendet: 22.12.06 20:25:34
> An: ANTLR List <antlr-interest at antlr.org>
> Betreff: Re: [antlr-interest] lexer and parser implementation in ANTLRv3


> Hi.  Isn't there a ANTLRReaderStream in your distribution?
> Ter
> 
> 


_______________________________________________________________________
Viren-Scan f?r Ihren PC! Jetzt f?r jeden. Sofort, online und kostenlos.
Gleich testen! http://www.pc-sicherheit.web.de/freescan/?mc=022222


From stuart.dootson at gmail.com  Wed Dec 27 01:22:08 2006
From: stuart.dootson at gmail.com (Stuart Dootson)
Date: Wed, 27 Dec 2006 09:22:08 +0000
Subject: [antlr-interest] Question on ambiguouity
In-Reply-To: <005801c72949$f863ccf0$ad7481ce@apptechsys.com>
References: <005801c72949$f863ccf0$ad7481ce@apptechsys.com>
Message-ID: <8b56cad40612270122n279613c2sbeae3f9bff7bf7bf@mail.gmail.com>

On 12/27/06, James Mello <james.mello at intelligentdiscovery.com> wrote:
> I'm relatively new to this whole parser grammer thing and I'm trying to get
> up to speed as quickly as possible. This is a particularly troubling thing
> as I can't quite grok why this doesn't work.... So given this simple set of
> rules and productions....
>
> class MyParser extends Parser;
>
> options
> {
>         buildAST = true;
>         k = 2;
> }
>
> multipleIDs :
>         (ID)+
>         ;
>
> class MyLexer extends Lexer;
>
> options
> {
>         k = 2;
>         charVocabulary = '\u0000'..'\ufffe';
>         caseSensitive = false;
> }
>
> ID :
>         'a'..'z'
>         ;
>
> The expression for multipleIDs compiles cleanly...
>
> When you change the multipleIDs rule to the following
>
> multipleIDs :
>         ID (multipleIDs)*
>
> You end up with a warning that says:
>
> Nondeterminism upon K==1:ID K==2:ID between alt 1 and exit branch of block
>
> I'm trying to figure out why this is the case as it seems to me that a
> recursive rule like this should work. I've looked a bit for some info on the
> faq and didn't find much on this.
>
> Finally, since this is NOT the way to write recursive rules, how does one go
> about doing this correctly?
>
>
> James Mello : Software Engineer - ATS, Inc.
> web: www.intelligentdiscovery.com | (p) 360.698.7100x236 | (f) 360.698.7200

Presuming you're just wanting to say that 'multipleIDs' consists of 1
or more 'ID's, then this will work fine:

multipleIDs :(ID)* ;

You'll also need a lexer rule that defines ID separators - for example
whitespace - with something like this:

WS     :
    (' '
    | '\t'
    | '\r' '\n' { newline(); }
    | '\n'      { newline(); }
    )
    { $setType(Token.SKIP); }
  ;

This tells the lexer to use whitespace as token delimiters, but not to
pass it on to the parser.

HTH

Stuart Dootson

From ric.klaren at gmail.com  Wed Dec 27 02:14:32 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 27 Dec 2006 11:14:32 +0100
Subject: [antlr-interest] Question on ambiguouity
In-Reply-To: <005801c72949$f863ccf0$ad7481ce@apptechsys.com>
References: <005801c72949$f863ccf0$ad7481ce@apptechsys.com>
Message-ID: <bc607a4e0612270214g6934defcw454deb8c081719cc@mail.gmail.com>

Hi,

On 12/27/06, James Mello <james.mello at intelligentdiscovery.com> wrote:
> class MyParser extends Parser;
>
> options
> {
>         buildAST = true;
>         k = 2;
> }
>
> multipleIDs :
>         (ID)+
>         ;

vs.

> multipleIDs :
>         ID (multipleIDs)*

In principle this is equivalent to the ()+ notation. Although it's a
weird way of writing it down. Probably better to use: ID (ID)*.

In a parser you should end the start rule with an EOF token (so antlr
knows where to stop). With the first notation the choice for antlr is
evident just keep eating ID's or give an error if something else is
encountered. With the second antlr cannot see if there's a
(multipleIDs)* follwing the first ID adding the EOF behind the start
rule should fix that.

I guess adding the EOF and optionally reducing k to one should fix the warning.

Also note that a warning doesn't have to be bad. Often times you have
grammars were warnings are present but where the right thing is done
(antlr prefers the first alternative)

In some cases you can turn of warnings.

> Finally, since this is NOT the way to write recursive rules, how does one go
> about doing this correctly?

I guess it's good to look at some of the bigger grammars to get a feel
for it. There's no one way since it depends on your language.

This may sound weird but... try reading the code generated for the
parser and lexer for small grammars this gives a lot of insight in how
things work, and adds to your intuition of how the tool works. There's
a commandline option to generate a textual description of the grammar
as well with descriptions of how the lexer/parser will work, this is
sometimes instructive as well.

Cheers,

Ric

From gyula.laszlo at profund.hu  Wed Dec 27 11:15:45 2006
From: gyula.laszlo at profund.hu (=?ISO-8859-1?Q?Gyula_L=E1szl=F3?=)
Date: Wed, 27 Dec 2006 20:15:45 +0100
Subject: [antlr-interest] virtual semicolons again: JavaScript, ECMAScript,
	ActionScript
Message-ID: <EC0FCDD7-EDCC-49D2-937F-6B5D2ED62A47@profund.hu>

Hello,

I know, this has been a topic on the list before (2005), however this  
keeps coming back at me:

http://www.antlr.org/pipermail/antlr-interest/2005-October/ 
014116.html
http://www.antlr.org/pipermail/antlr-interest/2005-April/ 
011916.html


shmuel siegel wrote:
 >
 >> One aspect that is different is that Javascript expressions end
 >> either at a semi colon, or at the earliest new line that makes a
 >> valid expression.
 >
 >
 > As far as I know, this is not a valid definition for javascript
 > statements. It is true for control statements like "return" or  
"break"
 > but not for arithmetic statements.
 >
 > Consider,
 >     <script>
 >         a=3
 >         +4
 >         alert(a);
 >     </script>
 >
 > It is legal and will result in an alert with the value 7. In general,
 > a new line only marks the end of a statement if the next token cannot
 > be part of the previous pattern.

This might be true for standardized JS, however, during my AS3 parser  
construction and testing on the flex SDK, I've learnt my lesson.

Setup: My expression statements were like this



	level1expression
		:	level0expression
			(	(level1expressionOperator NL* level0expression)+
			|
			)
		;

	statement
		: 	expressionStatement statementEnd
		;

	statementEnd
		:	';' NL*
		|	NL+
		;




(the last rule generates a warning, I don't really care about :)

this worked on 99% of the flex SDK source code. However, the rest  
contains the weird Adobe vibe:

Operator after a newline, like:




	something.getHerProperty()
		.YetAnotherMethodAccessorAfterTheNewLine()

or:

	if ( (this.width > 0) && (this.height > 200)
		&& (this.doesMrBunnyHaveAHat ) )
	{
		beatTheBunny()
	}




I really can't put the newline into the expressions themselves (FYI:  
the operator with the lowest precedence swallows
the newline tokens insted of the (unknown to the parser!) real  
statement end), because there are statement lists like with the  
following:



	var showStopper:Object =
		{
			foreground:0xff0000,
			background:0x550000
		}

	var theParserNeverMakesItToHere:int = 0



I could exclude the newline, and try with virtual semicolons, however  
I found, that none of the examples for the virtual semicolons (ASDT's  
AS2 & 3 grammar, ECMAScript grammar) could handle these cases AND the  
flex sdk AND not being an ANTLR-freezer, so I feel like there's  
something here.

Any kind of help is really appreciated,
Thank you for your time,

Gyula L?szl?

email:gyula.laszlo AT profund.hu
http://profund.hu



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061227/7579ea57/attachment-0001.html 

From antlr at mirality.co.nz  Wed Dec 27 12:07:04 2006
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 28 Dec 2006 09:07:04 +1300
Subject: [antlr-interest] virtual semicolons again: JavaScript,
 ECMAScript, ActionScript
In-Reply-To: <EC0FCDD7-EDCC-49D2-937F-6B5D2ED62A47@profund.hu>
References: <EC0FCDD7-EDCC-49D2-937F-6B5D2ED62A47@profund.hu>
Message-ID: <7.0.1.0.0.20061228090015.036e5520@mirality.co.nz>

At 08:15 28/12/2006, Gyula L?szl? wrote:
>Operator after a newline, like:
>
>something.getHerProperty()
>.YetAnotherMethodAccessorAfterTheNewLine()
>
>or:
>
>if ( (this.width > 0) && (this.height > 200)
>&& (this.doesMrBunnyHaveAHat ) )
>{
>beatTheBunny()
>}
>
>I really can't put the newline into the 
>expressions themselves (FYI: the operator with 
>the lowest precedence swallows the newline 
>tokens insted of the (unknown to the parser!) 
>real statement end), because there are statement 
>lists like with the following:
>
>var showStopper:Object =
>{
>foreground:0xff0000,
>background:0x550000
>}
>
>var theParserNeverMakesItToHere:int = 0
>
>I could exclude the newline, and try with 
>virtual semicolons, however I found, that none 
>of the examples for the virtual semicolons 
>(ASDT's AS2 & 3 grammar, ECMAScript grammar) 
>could handle these cases AND the flex sdk AND 
>not being an ANTLR-freezer, so I feel like there's something here.

Can't you just mark the semicolon as optional at 
the end of a statement (ie. 'SEMI?')?

With a sufficiently high k (or ANTLR v3 and 
backtracking) it ought to be able to disambiguate 
where statements begin and end depending on 
whether the following line is a valid statement 
or merely a statement fragment.  (Or at least I 
think so.  I'm mostly an ANTLR newbie myself.)

For this sort of language you really have to hide 
the newlines, since whitespace is treated as 
insignificant most of the time.

There ought to be formal EBNF grammars for those 
languages, which should be fairly easy to convert to ANTLR syntax.


From ilia at obnovlenie.ru  Wed Dec 27 13:39:38 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Thu, 28 Dec 2006 00:39:38 +0300
Subject: [antlr-interest] Latest antlr (bug?) incorrect parsing
Message-ID: <200612280039.39104.ilia@obnovlenie.ru>


I run my old grammars on antlr 3b5

Here is a rule:

text returns [String value] :
 (TEXT {$value = $TEXT.text;}) | (WS {$value = $WS.text;})

There is no substutution in second alt for $WS in code:

..... java code for first alt ......
TEXT14=(Token)input.LT(1);
.....
retval.value = TEXT14.getText();

..... java code for second alt ......
WS15=(Token)input.LT(1);
...........
retval.value =$WS.text;  // COMPILE ERROR
-----

There clearly should be WS15 instead of $WS in second alt.

Same thing happens with this rule:
expr_no_semi returns [StringRuleResult value]
	:	
		(expr_simple {$value=$expr_simple.value;}) | (curly_block 
{$value=$curly_block.value; }) 
	;

That is: $curly_block is output into java code just like $WS.



============ The whole grammar just in case anyone needs it to test ==========


grammar CommonRule;

options {
    output=AST;
}

@parser::header {
    package grammar.parser;
    
	import grammar.*;	
	import grammar.parser.*;
	import grammar.parser.exception.*;

    import org.apache.log4j.Logger;
    import java.util.Stack;
    import java.util.ArrayList;
}

@rulecatch { }

@parser::members {

    private static Logger logger = Logger.getLogger(CommonRuleParser.class);

    Stack<Integer> caseCountersStack = new Stack<Integer>();

    // checks condition, if its false then case syntax error
    protected void checkCaseCounter(Boolean cond, Token token) throws 
RuleRecognitionException {
    	if (!cond) {
    		throw new RuleRecognitionException("Case syntax error near "+token, 
token);
		}
    }
    
    protected void mismatch(IntStream input, int ttype, BitSet follow) throws 
RecognitionException {
        MismatchedTokenException mte = new MismatchedTokenException(ttype, 
input);
        throw mte;
    }
    
    protected RuleInterpreter ruleInterpreter;

    public void setRuleInterpreter(RuleInterpreter ruleInterpreter) {
        this.ruleInterpreter = ruleInterpreter;
    }
    
    

}



@lexer::header {
    package grammar.parser;	
    import grammar.*;
    
}

LCURL	:	'{';
RCURL	:	'}';

CONTROL	:	 '~';

IF	:	'If';
THEN:	'Then';
CASE:	'Case';
ELSE:	'Else';


TEXT:  (~('~' | ';' | '#' | '{' | '}' | ' '|'\r'|'\t'|'\u000C'|'\n'))*;


RULE_CALL : '#' ID;

WS  :
       (' '|'\r'|'\t'|'\u000C'|'\n' )+
    ;

SEMI	:  ';';

fragment ID : NAMECHAR+;


fragment NAMECHAR
    : ALPHA_NUM | '_'
    ;

fragment ALPHA_NUM
	:	DIGIT | LETTER_ENG;

fragment DIGIT
    :    '0'..'9'
    ;

fragment LETTER_ENG
    : 'a'..'z'
    | 'A'..'Z'
    ;
    
    

document returns [StringRuleResult value]: LCURL exprs { 
$value=$exprs.value; } RCURL
;


exprs returns [StringRuleResult value]
@init {
	String sum="";
}:
	(expr { sum = sum+$expr.value.getStringValue(); } )+
{
	$value = new StringRuleResult(sum);
	logger.info("exprs value "+$value);
}
;

exprs_no_semi returns [StringRuleResult value]
@init {
	String sum="";
}
	:	(e=expr_no_semi { sum = sum + $e.value.getStringValue(); } )+
{
	$value = new StringRuleResult(sum);
	logger.info("exprs_no_semi value "+$value);
}
;


exprs_simple returns [StringRuleResult value]
@init {
	String sum="";
}
	:	(e=expr_simple { sum = sum+$e.value.getStringValue(); } )+
{
	$value = new StringRuleResult(sum);
	logger.info("exprs_simple value "+$value);
}
	;
	
	
expr_no_semi returns [StringRuleResult value]
	:	
		(expr_simple {$value=$expr_simple.value;}) | (curly_block 
{$value=$curly_block.value; }) 
	;

/* expression without curl at start and ; */
expr_simple returns [StringRuleResult value]
	:
	(
	//command {$value=$command.value;} |
	rule_call {$value=$rule_call.value;} |
	text {$value=$text.value; } 
	)
	{
	logger.info("expr_simple value "+$value);
	}
;	
	


expr returns [StringRuleResult value]:
(
	(e=expr_no_semi {$value=$e.value;}) | (SEMI {$value=new 
StringRuleResult($SEMI.text);})
)

	;


rule_call returns [StringRuleResult value]:
	RULE_CALL
{
	$value = ruleInterpreter.doRule($RULE_CALL, $RULE_CALL.text.substring(1));
	logger.info("rule_call value " + $value);
}
;


curly_block returns [StringRuleResult value]:
	LCURL exprs RCURL
{
	$value = new StringRuleResult($LCURL.text + $exprs.value.getStringValue() + 
$RCURL.text);
	logger.info("curly_block value "+$value);
}
;


text returns [StringRuleResult value] :
 (TEXT {$value = new StringRuleResult($TEXT.text);}) | (WS {$value = new 
StringRuleResult($WS.text);})
{	
	logger.info("text value "+$value);
};













From parrt at cs.usfca.edu  Wed Dec 27 13:56:09 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 27 Dec 2006 13:56:09 -0800
Subject: [antlr-interest] Latest antlr (bug?) incorrect parsing
In-Reply-To: <200612280039.39104.ilia@obnovlenie.ru>
References: <200612280039.39104.ilia@obnovlenie.ru>
Message-ID: <FE95CC31-D120-4C40-A7D8-C1DA929437FE@cs.usfca.edu>


On Dec 27, 2006, at 1:39 PM, Ilia Kantor wrote:

>
> I run my old grammars on antlr 3b5
>
> Here is a rule:
>
> text returns [String value] :
>  (TEXT {$value = $TEXT.text;}) | (WS {$value = $WS.text;})
>
> There is no substutution in second alt for $WS in code:
>
> ..... java code for first alt ......
> TEXT14=(Token)input.LT(1);
> .....
> retval.value = TEXT14.getText();
>
> ..... java code for second alt ......
> WS15=(Token)input.LT(1);
> ...........
> retval.value =$WS.text;  // COMPILE ERROR
> -----

in 3.0b6, I get:

                     WS2=(Token)input.LT(1);
                     match(input,WS,FOLLOW_WS_in_text24);
                     value = WS2.getText();

Thanks,
Ter


From parrt at cs.usfca.edu  Wed Dec 27 13:57:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 27 Dec 2006 13:57:07 -0800
Subject: [antlr-interest] Ping Marq Koel and Wolfgang Hafelinger: Python
	target for V3
In-Reply-To: <ems3n2$jgr$1@sea.gmane.org>
References: <ems3n2$jgr$1@sea.gmane.org>
Message-ID: <06A76150-8C3C-480C-BA64-FD1F54E85C0D@cs.usfca.edu>

I think Marq is too busy for Python v3.  I think Wolfgang expressed  
interest.
Ter
On Dec 26, 2006, at 1:20 PM, Benjamin Niemann wrote:

> Hello Marq, Wolfgang, Terence and everyone else,
>
> I hope everyone survived the holidays :)
>
> I would like to ask (once again ;) ) about the status of the Python  
> target
> for ANTLR3.
> Marq, Wolfgang (or someone else): did you already spend some of  
> your time on
> this?
> The parser of my current project needs some major changes anyway  
> and I would
> really like to try the V2->V3 migration now. If nobody else is  
> working on
> the Python target, I will give it a try myself - though I won't  
> make any
> promises yet.
>
> Happy hacking,
>         Benjamin
>
> -- 
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
>


From mark.mandel at gmail.com  Wed Dec 27 19:43:48 2006
From: mark.mandel at gmail.com (Mark Mandel)
Date: Thu, 28 Dec 2006 14:43:48 +1100
Subject: [antlr-interest] V3: Clarification parser vs tree grammer,
	and a question
Message-ID: <4153ee230612271943s60fa5b62m6f8aba60258359b2@mail.gmail.com>

Heya,

Still on my learning trail, and I think I may finaly have had my 'aha'
moment, but I figured I would double check.

Looking at the XML Parser tutorial, because that is a good example,
and looking at the parser grammer vs the tree grammer.

The way I'm seeing it at the moment is that the job of the Parser is
to build the AST tree.  It defines the tokens, explains where the root
of the tree should be, and defines the structure of the children.

The tree grammer is how to DO something with that tree (I believe in
v2, it was a tree walker?).  Basically it parses the AST Tree that is
built in the Parser grammer.

It's almost like it is the parser's parser ... if that remotely makes any sense.

So that means that the rule structure of the tree grammer should match
the tree structure that is generated by the parser grammer.

Is this correct? it seems to be that way to me, so I just want to make
sure I've got it right.

Onto a second question -

If my treeParser requires other Java objects to evaluate the tree it
has been passed, is there some way to add that to the Constructor of
the generated TreeParser, OR is the best way simply to make a
setMyLib(myLib) function via the @members section, and call that prior
to evaluating the tree?

Hope that was clear,

Mark

-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From ilia at obnovlenie.ru  Wed Dec 27 20:17:26 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Thu, 28 Dec 2006 07:17:26 +0300
Subject: [antlr-interest] 3b6 build.xml minor bug
In-Reply-To: <06A76150-8C3C-480C-BA64-FD1F54E85C0D@cs.usfca.edu>
References: <ems3n2$jgr$1@sea.gmane.org>
	<06A76150-8C3C-480C-BA64-FD1F54E85C0D@cs.usfca.edu>
Message-ID: <200612280717.26740.ilia@obnovlenie.ru>


What is the right place to post bugs ? Any bugzilla or such?

Just to note, that antlr 3b6 build.xml is not working,
because build.properties removed and stringtemplate.jar property is empty.

So one has to provide it, e.g replace default classpath with 

<path id="classpath" path="/usr/share/antlr3/lib/stringtemplate-3.0.jar" />

Otherwise, antlr will fail to compile.


P.S 3b6 fixed alt problem of 3b5 with $WS, thanks.


From xdm at suzsoft.com  Wed Dec 27 20:19:46 2006
From: xdm at suzsoft.com (xdm)
Date: Thu, 28 Dec 2006 12:19:46 +0800
Subject: [antlr-interest] a question about nondeterminism
Message-ID: <001801c72a37$681987e0$6b02000a@suzsoft.com>

I have a question about ANTLR

(1)

I wrote a simple expression, just like this:

E:(E)
E:E (+|-|*|\) E
E: ('0'..'9')+ ('.'('0'..'9')+ )? 

 

(2)

Adjust the expression, avoid the left recursion, and get the final
expression:

expr : ( NUM expr_tail ) | ( LPAREN expr RPAREN expr_tail ) ;
expr_tail : ( (PLUS|SUB|MUL|DIV) expr)* ;

 

(3)

There is a warning 

warning: nondeterminism upon? 

k==1:PLUS,SUB,MUL,DIV
k==2:LPAREN,NUM
between alt 1 and exit branch of block

 

And When I try to parse ?3+1(?, there is no exception. 

 

Can you help me?

 

 

Regards

Edison

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/e6e3a1c3/attachment-0001.html 

From kroepke at classdump.org  Thu Dec 28 00:49:37 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 28 Dec 2006 09:49:37 +0100
Subject: [antlr-interest] V3: Clarification parser vs tree grammer,
	and a question
In-Reply-To: <4153ee230612271943s60fa5b62m6f8aba60258359b2@mail.gmail.com>
References: <4153ee230612271943s60fa5b62m6f8aba60258359b2@mail.gmail.com>
Message-ID: <B2FA29E6-9B8E-4AB3-BB46-9AB8ED944148@classdump.org>

Hi Mark!

On 28. Dec 2006, at 4:43 , Mark Mandel wrote:

>
> The way I'm seeing it at the moment is that the job of the Parser is
> to build the AST tree.  It defines the tokens, explains where the root
> of the tree should be, and defines the structure of the children.

Very correct, if you have output=AST, of course ;)

> The tree grammer is how to DO something with that tree (I believe in
> v2, it was a tree walker?).  Basically it parses the AST Tree that is
> built in the Parser grammer.

Exactly.

> It's almost like it is the parser's parser ... if that remotely  
> makes any sense.
>
> So that means that the rule structure of the tree grammer should match
> the tree structure that is generated by the parser grammer.

Yes, very much like a parser recognizes token sequences from a  
stream, a tree parser
recognizes tree/subtree sequences. Internally, it is pretty much the  
same, a tree node
stream just has support for extra (special) tokens in there. Those  
are UP and DOWN
and mark the spots where a substree begins and ends.

> Onto a second question -
>
> If my treeParser requires other Java objects to evaluate the tree it
> has been passed, is there some way to add that to the Constructor of
> the generated TreeParser, OR is the best way simply to make a
> setMyLib(myLib) function via the @members section, and call that prior
> to evaluating the tree?

What do you mean by evaluating the tree? Normally, you would use a  
tree parser for evaluation.
You'd specify the evaluation code in actions in your (sub)rules. If  
you need to have several
passes, you'd normally have several tree parsers.
Aside from that, if you want to avoid putting a lot of code into  
@members you can use the
superClass option (I hope the spelling is right, check the wiki!).  
That's not for grammar
inheritance, but only influences the code generated, i.e. that  
'superClass' must inherit
from TreeParser. It allows you to put common code into a .java file  
and gives you the benefit of
being able to use your favorite Java IDE for that code. At the same  
time it keeps
your grammar file size down, which might make it easier to read.

<shameless plug>
Of course, if you'd be using Objective-C, you could just define the  
methods/messages in
categories and be done with it ;)
</shameless plug>

HTH,

-k
-- 
Kay R?pke
http://classdump.org/





From sidefxboy at gmail.com  Thu Dec 28 02:05:14 2006
From: sidefxboy at gmail.com (Simon)
Date: Thu, 28 Dec 2006 10:05:14 +0000
Subject: [antlr-interest] Help getting started with a calculator
Message-ID: <ef281ef40612280205x65fe6e43pf1e1eaaf048b2038@mail.gmail.com>

Hi folks,

I hope someone might be able to help a real newbie who's trying to get
started with a simple calculator example. I've worked through the basic
getting started links that deal with calculators and wanted to expand on
them. Specifically I'm using the concepts from the following 2:

http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html

http://supportweb.cs.bham.ac.uk/docs/tutorials/docsystem/build/tutorials/antlr/antlrhome.html

I want to expand on the ideas of the first one, using some of the ideas of
the second one.  I'm also generating output in C# if that changes anything.
The thing I don't like about the grammar in the second example is that it
seems to require parenthases around all expressions?  For example it fails
to evaluate 12 as an input but (12) works fine.

In any case, my real question is why the following grammar seems to work
fine in the parser:

expr     : prodExpr ((PLUS^|MINUS^) prodExpr)* ;
prodExpr : atom ((MUL^|DIV^|MOD^) atom)* ;
atom     : INT | LPAREN! expr RPAREN! ;

whereas the following causes odd behaviour (seems to skip the last token
when building the AST or something?):

expr     : prodExpr ((PLUS^|MINUS^) prodExpr)* ;
prodExpr : powExpr ((MUL^|DIV^|MOD^) powExpr )* ;
powExpr  : atom (POW^ atom)? ;
atom     : INT | LPAREN! expr RPAREN! ;

using the following lexer:

class YATTLexer extends Lexer;

options {
    k=2; // needed for newline junk
    charVocabulary='\u0000'..'\u007F'; // allow ascii
}

PLUS  : '+' ;
MINUS : '-' ;
MUL   : '*' ;
DIV   : '/' ;
MOD   : '%' ;
POW   : '^' ;
LPAREN: '(' ;
RPAREN: ')' ;
INT   : ('0'..'9')+ ;
WS    : (' ' | '\t' | '\r' | '\n') {$setType(Token.SKIP);} ;



No doubt I'm missing something obvious, but I'd appreciate any
enlightenment. :)

cheers!
Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/2cf509d5/attachment.html 

From ssiegel at finjan.com  Thu Dec 28 02:47:47 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 28 Dec 2006 12:47:47 +0200
Subject: [antlr-interest] virtual semicolons again: JavaScript,
	ECMAScript, ActionScript
In-Reply-To: <7.0.1.0.0.20061228090015.036e5520@mirality.co.nz>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C011E6F2B@exmail1.finjan.com>

Gavin,

Working backwards through your suggestions:
1) I haven't come across a complete EBNF grammar of ECMAScript. They
seem to always leave out some definitions, especially in the tokenizer.
They also ignore the virtual semicolon issues and leave that to verbal
descriptions. I also haven't seen an EBNF grammar that took regular
expressions into account.

2) You are definitely right that you don't want to deal with newlines at
the parser level. Once you start to allow it, you have to deal with it
everywhere. It quickly gets out of hand.

3) There are certainly two categories of statements that need to deal
with the concept of virtual semicolons or newlines, whichever you prefer
	a) Control statements like break, return, throw, and continue
since the newline has semantic meaning.
	b) pre and post increment/decrement.

It is probably worth determining if the normal termination rules in
ANTLR3 can handle everything else by just using optional semicolons. It
is too hard of a question to answer without investigation.

From ssiegel at finjan.com  Thu Dec 28 03:32:05 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 28 Dec 2006 13:32:05 +0200
Subject: [antlr-interest] virtual semicolons again: JavaScript,
	ECMAScript, ActionScript
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C011E6F2B@exmail1.finjan.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C011E6F53@exmail1.finjan.com>

Actually, if antlr is used to verify javascript syntax, using optional
semicolons would cause illegal programs to pass the verifier.

Consider:
	A=B  C=D

As opposed to
	A=B
	C=D

The first is illegal, the second is legal (at least as far as ie 6 is
concerned);

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Shmuel Siegel
Sent: Thursday, December 28, 2006 12:48 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] virtual semicolons again:
JavaScript,ECMAScript, ActionScript

Gavin,

Working backwards through your suggestions:
1) I haven't come across a complete EBNF grammar of ECMAScript. They
seem to always leave out some definitions, especially in the tokenizer.
They also ignore the virtual semicolon issues and leave that to verbal
descriptions. I also haven't seen an EBNF grammar that took regular
expressions into account.

2) You are definitely right that you don't want to deal with newlines at
the parser level. Once you start to allow it, you have to deal with it
everywhere. It quickly gets out of hand.

3) There are certainly two categories of statements that need to deal
with the concept of virtual semicolons or newlines, whichever you prefer
	a) Control statements like break, return, throw, and continue
since the newline has semantic meaning.
	b) pre and post increment/decrement.

It is probably worth determining if the normal termination rules in
ANTLR3 can handle everything else by just using optional semicolons. It
is too hard of a question to answer without investigation.


From ssiegel at finjan.com  Thu Dec 28 04:44:18 2006
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Thu, 28 Dec 2006 14:44:18 +0200
Subject: [antlr-interest] virtual semicolons again: JavaScript,
	ECMAScript, ActionScript
In-Reply-To: <EC0FCDD7-EDCC-49D2-937F-6B5D2ED62A47@profund.hu>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C011E6F87@exmail1.finjan.com>

As a caveat: my javascript parser is not ANTLR based, hence I might have overlooked something. But I can tell you how I handle the virtual semicolon issue.

 

Most of the work is done in the tokenizer. In general, whitespace is merely a token delimeter but EOL is a special token. The tokenizer emits one token at a time but it remembers the previous token. If the next token would be an EOL, the tokenizer generates a third token. Then if tokens one and three are incompatable, e.g '('  followed by '}',  the tokenizer emits a virtual semicolon instead of the EOL. Otherwise it skips the EOL. 

To accomplish this in ANTLR you would need a wrapper around the tokenizer that remembers the previous token and is capable of keeping the next token in abeyance when the virtual semicolon is generated. In addition, the ANTLR grammar MUST generate the EOL.

 

The parser also has to help. Although it is usually illegal for an identifier to follow a right paren, it can inside if, for, and while statements. The parser will have to be willing to ignore virtual semicolons for these cases.

 

I hope that I have been of some help.

 

Shmuel

________________________________

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gyula L?szl?
Sent: Wednesday, December 27, 2006 9:16 PM
To: ANTLR Interest
Subject: [antlr-interest] virtual semicolons again: JavaScript, ECMAScript,ActionScript

 

Hello,

 

I know, this has been a topic on the list before (2005), however this keeps coming back at me:

 

http://www.antlr.org/pipermail/antlr-interest/2005-October/014116.html

http://www.antlr.org/pipermail/antlr-interest/2005-April/011916.html

 

 

shmuel siegel wrote:

> 

>> One aspect that is different is that Javascript expressions end

>> either at a semi colon, or at the earliest new line that makes a

>> valid expression.

> 

> 

> As far as I know, this is not a valid definition for javascript

> statements. It is true for control statements like "return" or "break"

> but not for arithmetic statements.

> 

> Consider,

>     <script>

>         a=3

>         +4

>         alert(a);

>     </script>

> 

> It is legal and will result in an alert with the value 7. In general,

> a new line only marks the end of a statement if the next token cannot

> be part of the previous pattern.

 

This might be true for standardized JS, however, during my AS3 parser construction and testing on the flex SDK, I've learnt my lesson.

 

Setup: My expression statements were like this

 

 

 

            level1expression

                        :           level0expression

                                    (           (level1expressionOperator NL* level0expression)+

                                    |

                                    )

                        ;

 

            statement

                        :           expressionStatement statementEnd

                        ;

 

            statementEnd

                        :           ';' NL*

                        |           NL+

                        ;

 

 

 

 

(the last rule generates a warning, I don't really care about :)

 

this worked on 99% of the flex SDK source code. However, the rest contains the weird Adobe vibe:

 

Operator after a newline, like:

 

 

 

 

            something.getHerProperty()

                        .YetAnotherMethodAccessorAfterTheNewLine()

 

or:

 

            if ( (this.width > 0) && (this.height > 200)

                        && (this.doesMrBunnyHaveAHat ) )

            {

                        beatTheBunny()

            }

 

 

 

 

I really can't put the newline into the expressions themselves (FYI: the operator with the lowest precedence swallows

the newline tokens insted of the (unknown to the parser!) real statement end), because there are statement lists like with the following:

 

 

 

            var showStopper:Object =

                        {

                                    foreground:0xff0000,

                                    background:0x550000

                        }

 

            var theParserNeverMakesItToHere:int = 0

 

 

 

I could exclude the newline, and try with virtual semicolons, however I found, that none of the examples for the virtual semicolons (ASDT's AS2 & 3 grammar, ECMAScript grammar) could handle these cases AND the flex sdk AND not being an ANTLR-freezer, so I feel like there's something here.

 

Any kind of help is really appreciated,

Thank you for your time,

 

Gyula L?szl?

 

email:gyula.laszlo AT profund.hu

http://profund.hu

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/e192fef9/attachment-0001.html 

From ilia at obnovlenie.ru  Thu Dec 28 05:40:22 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Thu, 28 Dec 2006 16:40:22 +0300
Subject: [antlr-interest] 3b6 internal error (bug?)
Message-ID: <200612281640.22146.ilia@obnovlenie.ru>



ANTLR Parser Generator  Version 3.0b6 (??)  1989-2007
error(100): CommonRule.g:11:1: syntax error: antlr: CommonRule.g:11:1: 
unexpected token: options {
error(10):  internal error: CommonRule.g : java.lang.NullPointerException
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:518)
org.antlr.tool.Grammar.<init>(Grammar.java:440)
org.antlr.Tool.process(Tool.java:261)
org.antlr.Tool.main(Tool.java:69)


The error is fixed if I swap tokens with options.



======== simplified grammar with most part removed =====================

grammar Gram2;


tokens {
        RULE_ID;
}


options {
    output=AST;
}


LCURL   :       '{';
RCURL   :       '}';

CONTROL :        '~';

IF      :       'If';
THEN:   'Then';
CASE:   'Case';
ELSE:   'Else';


document .*;

From kroepke at classdump.org  Thu Dec 28 06:21:03 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 28 Dec 2006 15:21:03 +0100
Subject: [antlr-interest] 3b6 internal error (bug?)
In-Reply-To: <200612281640.22146.ilia@obnovlenie.ru>
References: <200612281640.22146.ilia@obnovlenie.ru>
Message-ID: <A959D711-A097-484B-9EDD-CC9E1EB151CE@classdump.org>


On 28. Dec 2006, at 14:40 , Ilia Kantor wrote:

> The error is fixed if I swap tokens with options.

Yes, v3 is pretty picky about the order of those things. This is  
documented somewhere (book at least)
but nice error handling isn't available for this now. I'm not sure  
why the sections have to be in this
order, maybe Ter knows ;)

Thanks for the reminder,

-k

-- 
Kay R?pke
http://classdump.org/





From jhvdven at xs4all.nl  Thu Dec 28 06:54:00 2006
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Thu, 28 Dec 2006 15:54:00 +0100
Subject: [antlr-interest] How to process blocks of code?
Message-ID: <4593DA88.7090006@xs4all.nl>

Dear List,


I am quite new to grammars, so I had no idea what would be the correct 
phrase to use when searching the archives. I think my problem is quite 
common:

I have a set of statements that need to be syntactically checked. I have 
a g file that does just that for the whole set. However I would like to 
do some more logical processing on each statement separately. So I 
thought to call a function whenever the parser has completed a 
statement. My question now is, how can I find the text/tokens belonging 
to that parsed piece of code?

I thought of chunking the pieces first and then feeding that to the 
parser, but this does not work for all scripts I want to process. As I 
am working on SQL an example may be in order.

This handles mulitple statements:

sql_script :
    statement (statement_separator (statement)? )* EOF
    ;


But the CREATE PROCEDURE is a single statement with multiple ones in it:
create_statement
    :
    CREATE PROCEDURE procedure_name (parameter_list)? sql_script
    | CREATE TABLE table_name
    | CREATE VIEW table_name select_statement
    ;


So I think the first alternative is the best way to go:
statement
    :
      select_statement {SQLSyntaxModel.runChecks();}

And we are down to my original question: what was in this statement and 
how can I access it from code?

Any help will be greatly appreciated.

Kind regards,


Jan


From gyula.laszlo at profund.hu  Thu Dec 28 09:09:17 2006
From: gyula.laszlo at profund.hu (=?ISO-8859-1?Q?Gyula_L=E1szl=F3?=)
Date: Thu, 28 Dec 2006 18:09:17 +0100
Subject: [antlr-interest] V3: Clarification parser vs tree grammer,
	and a question
In-Reply-To: <4153ee230612271943s60fa5b62m6f8aba60258359b2@mail.gmail.com>
References: <4153ee230612271943s60fa5b62m6f8aba60258359b2@mail.gmail.com>
Message-ID: <D5ABCB54-63A4-483B-BB6C-0D728AD936FA@profund.hu>

Hello,

On 2006.12.28., at 4:43, Mark Mandel wrote:

>
> The way I'm seeing it at the moment is that the job of the Parser is
> to build the AST tree.  It defines the tokens, explains where the root
> of the tree should be, and defines the structure of the children.
>

IMHO, the goal of separating the tree parser from the parser is the goal
to make it reusable. The AST (should) reflect the real nature of the  
language,
and not how you parse it. That said, imagine the following:

	You parse a simple Java class with your parser, that generates an AST.
	You create a tree parser skeleton, that walks the tree and does  
nothing else.

You create some tree parsers:

	the first walks the tree, and builds the symbol tables
	and grammar structure (loads imports, resolves global symbols,  
inheritance, etc).

	the second checks the typing from the previously loaded symbols.

	the third creates a wrapper bean class with StringTemplate.

	the third creates Ruby wrapper code with StringTemplate.

	...
	...

As you can see, the file only needs to be parsed once, and every  
other step can depend on
the previous one, using the same (easy to parse) AST. The rule codes  
are shorter this way, and
every aspect sits right in his/her own grammar. That's a good thing  
(tm).

The other use of AST is to use other people's WORKING parser, and  
then do your job  on the
easy to parse AST which is already created by the existing parser

>
> If my treeParser requires other Java objects to evaluate the tree it
> has been passed, is there some way to add that to the Constructor of
> the generated TreeParser, OR is the best way simply to make a
> setMyLib(myLib) function via the @members section, and call that prior
> to evaluating the tree?
>
>

IMHO the easiest way is to use a custom superclass for the parser  
(which subclasses ANTLRTreeParser)
and define everything not strictly grammar-related there. (I like to  
keep my grammars clean and use
delegates to do the job.


> Hope that was clear,
>
> Mark
>
> -- 
> E: mark.mandel at gmail.com
> W: www.compoundtheory.com

cheers,

Gyula L?szl?

email:gyula.laszlo AT profund.hu
http://profund.hu




From jab.antlr at species.org  Thu Dec 28 11:13:16 2006
From: jab.antlr at species.org (James Briant)
Date: Thu, 28 Dec 2006 11:13:16 -0800
Subject: [antlr-interest] Fwd: c# 2.0 grammar help
In-Reply-To: <e063fb510612281111x7acf59c4k75b2a2db4e7c47b7@mail.gmail.com>
References: <e063fb510612281111x7acf59c4k75b2a2db4e7c47b7@mail.gmail.com>
Message-ID: <e063fb510612281113h53800863v90b26a92417ffd4@mail.gmail.com>

I'm trying to create a grammar for C# 2.0 by following the spec. I'm stuck
on the lexer! I'm not sure how best to handle the different character types.
This is what I have done:


LETTER_CHARACTER
    :    c=. { IsUnicodeLetterChar( c ) }?
    |    u=UNICODE_ESCAPE_SEQUENCE { IsUnicodeLetterChar( u ) }?
    ;

COMBINING_CHARACTER
    :    c=. {    IsUnicodeCombiningCharacter(c) }?
   |    u=UNICODE_ESCAPE_SEQUENCE { IsUnicodeCombiningCharacter( u ) }?
    ;


Will the {}? term successfully filter out the different types of character
or is there a much better way of doing this? Any help greatly appreciated.
The full lexer grammar that I have so far is attached.

Thanks!

James Briant
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/d6fe5739/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: csharp2.g
Type: application/octet-stream
Size: 10690 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/d6fe5739/attachment.obj 

From jab.antlr at species.org  Thu Dec 28 11:23:42 2006
From: jab.antlr at species.org (James Briant)
Date: Thu, 28 Dec 2006 11:23:42 -0800
Subject: [antlr-interest] My C# grammar hangs antlr
Message-ID: <e063fb510612281123s6e18cd8bld4629dddd87bec7c@mail.gmail.com>

That grammar I posted was for 3.0b5, and when I run antlr, antlr hangs. :-(

This is the output I get, and then it just sits there:

ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
warning(200): csharp2.g:11:5: Decision can match input such as "<EOT>" using
mul
tiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(201): csharp2.g:11:5: The following alternatives are unreachable: 2

warning(200): csharp2.g:20:18: Decision can match input such as
"'\r''\u0000'..'
\uFFFE'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

Any ideas? Thanks.

Jamie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/1e79c1f1/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: csharp2.g
Type: application/octet-stream
Size: 10690 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20061228/1e79c1f1/attachment-0001.obj 

From agnisys at yahoo.com  Thu Dec 28 11:31:02 2006
From: agnisys at yahoo.com (Agnisys)
Date: Thu, 28 Dec 2006 11:31:02 -0800 (PST)
Subject: [antlr-interest] Newbie questions: How to traverse the AST ...
In-Reply-To: <D5ABCB54-63A4-483B-BB6C-0D728AD936FA@profund.hu>
Message-ID: <970194.26210.qm@web32612.mail.mud.yahoo.com>

Hi,
  I need to pick up useful pieces of information from a 3rd party file. The file format is simple
field based with possible quoted text. I've written the lexer and parser for the file (.g). I
would have used Perl but decided to try Antlr in the hope that when the 3rd party changes the
format I would have to do little to accommodate the changes. 

  I have a couple of questions related to this :

  1.  What is the standard idiom to traverse the AST ? Any examples would help. How do I get to
the relevant information in the Java code?
  2.  Is there an AWK mode that simply splits the input into fields?
  3.  How to deal with quoted comments that can contain elements from the language itself.
      For example :
      ABC="123 456=789"
      The '=' should be skipped inside the double quote.
  4.  Is the antlr-interest group postings search-able on any site?

Thanks for any pointers for any of these questions. This would enable me to move forward. 
Anupam.

P.S. Anxiously waiting for the Antlr book. I found this to be very helpful:
http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html




From ric.klaren at gmail.com  Thu Dec 28 12:24:57 2006
From: ric.klaren at gmail.com (Ric Klaren)
Date: Thu, 28 Dec 2006 21:24:57 +0100
Subject: [antlr-interest] How to process blocks of code?
In-Reply-To: <4593DA88.7090006@xs4all.nl>
References: <4593DA88.7090006@xs4all.nl>
Message-ID: <bc607a4e0612281224o5f4a5572n17536329a5c5e59b@mail.gmail.com>

Hi,

On 12/28/06, Jan van der Ven <jhvdven at xs4all.nl> wrote:
> I am quite new to grammars, so I had no idea what would be the correct
> phrase to use when searching the archives. I think my problem is quite
> common:
>
> I have a set of statements that need to be syntactically checked. I have
> a g file that does just that for the whole set. However I would like to
> do some more logical processing on each statement separately. So I
> thought to call a function whenever the parser has completed a
> statement. My question now is, how can I find the text/tokens belonging
> to that parsed piece of code?

My guess (or advice rather ;) ) would be that you'd want to make a
multipass parser. E.g. do first a general parse and build a tree and
process it afterwards with several treeparsers to rewrite or enhance,
or to build additional datastructures next to this tree.

Another option is to build trees and call a tree parser from within
the parser.. although a bit less clean and in the wrong hands can turn
less maintainable as the multiple tree parser option (where you can
separate different steps of the process better).

> I thought of chunking the pieces first and then feeding that to the
> parser, but this does not work for all scripts I want to process. As I
> am working on SQL an example may be in order.
>
> This handles mulitple statements:
>
> sql_script :
>     statement (statement_separator (statement)? )* EOF
>     ;
>
> But the CREATE PROCEDURE is a single statement with multiple ones in it:
> create_statement
>     :
>     CREATE PROCEDURE procedure_name (parameter_list)? sql_script
>     | CREATE TABLE table_name
>     | CREATE VIEW table_name select_statement
>     ;
>
> So I think the first alternative is the best way to go:
> statement
>     :
>       select_statement {SQLSyntaxModel.runChecks();}
>
> And we are down to my original question: what was in this statement and
> how can I access it from code?

Turn on the buildAST option for the parser. Then think hard about how
you want to build your tree... e.g. you want to build a tree with a
structure that makes it easier to do the following processing steps
(heck it maybe even take a few iterations to build the tree you
desire). Note that treeparser only have a lookahead of one, so
generally you'd keep this in mind when constructing the trees in the
parser. Also look at imaginary nodes (tokens) with which you can tag
'important' bits in the tree.

Hope this helps,

Ric

From james.mello at intelligentdiscovery.com  Thu Dec 28 13:13:43 2006
From: james.mello at intelligentdiscovery.com (James Mello)
Date: Thu, 28 Dec 2006 13:13:43 -0800
Subject: [antlr-interest] Question on tree generation
In-Reply-To: <970194.26210.qm@web32612.mail.mud.yahoo.com>
Message-ID: <008b01c72ac5$0dcd7100$ad7481ce@apptechsys.com>

Given the rule:

begin! :
	(s:SLASH t:typeValue)+


How does one build up a tree using the tree building syntax such given the
input

/a:b /c:d /e:f (where a:b, c:d, e:f are of type typeValue)

That you will end up with a tree that looks like so?

Sibling(/a:b) ->sibling(/c:d)....

I've tried the following action rule, but only end up with the last
element....

{
	#begin = #(s, t);
}

James Mello : Software Engineer - ATS, Inc. 
web: www.intelligentdiscovery.com | (p) 360.698.7100x236 | (f) 360.698.7200 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Agnisys
Sent: Thursday, December 28, 2006 11:31 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Newbie questions: How to traverse the AST ...

Hi,
  I need to pick up useful pieces of information from a 3rd party file. The
file format is simple field based with possible quoted text. I've written
the lexer and parser for the file (.g). I would have used Perl but decided
to try Antlr in the hope that when the 3rd party changes the format I would
have to do little to accommodate the changes. 

  I have a couple of questions related to this :

  1.  What is the standard idiom to traverse the AST ? Any examples would
help. How do I get to the relevant information in the Java code?
  2.  Is there an AWK mode that simply splits the input into fields?
  3.  How to deal with quoted comments that can contain elements from the
language itself.
      For example :
      ABC="123 456=789"
      The '=' should be skipped inside the double quote.
  4.  Is the antlr-interest group postings search-able on any site?

Thanks for any pointers for any of these questions. This would enable me to
move forward. 
Anupam.

P.S. Anxiously waiting for the Antlr book. I found this to be very helpful:
http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html




From parrt at cs.usfca.edu  Thu Dec 28 20:59:16 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 28 Dec 2006 20:59:16 -0800
Subject: [antlr-interest] My C# grammar hangs antlr
In-Reply-To: <e063fb510612281123s6e18cd8bld4629dddd87bec7c@mail.gmail.com>
References: <e063fb510612281123s6e18cd8bld4629dddd87bec7c@mail.gmail.com>
Message-ID: <22FDF3EE-4EA1-40DD-A766-B40DFCA5F738@cs.usfca.edu>

Hi, turn on -Xwatchconversion I think it is.  That will tell you  
which decision has the problem.  Most likely you have a rule with two  
alts starting with recursive rules.
Ter
On Dec 28, 2006, at 11:23 AM, James Briant wrote:

> That grammar I posted was for 3.0b5, and when I run antlr, antlr  
> hangs. :-(
>
> This is the output I get, and then it just sits there:
>
> ANTLR Parser Generator  Version 3.0b5 (November 15, 2006)  1989-2006
> warning(200): csharp2.g:11:5: Decision can match input such as  
> "<EOT>" using mul
> tiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(201): csharp2.g:11:5: The following alternatives are  
> unreachable: 2
>
> warning(200): csharp2.g:20:18: Decision can match input such as  
> "'\r''\u0000'..'
> \uFFFE'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>
> Any ideas? Thanks.
>
> Jamie
> <csharp2.g>


From mdepascale at dii.unisi.it  Fri Dec 29 03:21:48 2006
From: mdepascale at dii.unisi.it (Maurizio de Pascale)
Date: Fri, 29 Dec 2006 12:21:48 +0100
Subject: [antlr-interest] C++ compliance of antlr generated code
Message-ID: <4594FA4C.7000604@dii.unisi.it>

the C++ code generated by ANTLR (latest 2.7.X) uses lots of variables 
starting with '_', which is however forbidden by the standard since 
symbols starting with an underscore are reserved to the implementation.
I suggest taking care of this for the ANTLR 3 C++ target.

cheers,
Maurizio de Pascale
mdepascale at dii.unisi.it

From antlr at telenet.be  Fri Dec 29 06:49:14 2006
From: antlr at telenet.be (Bill Mayfield)
Date: Fri, 29 Dec 2006 15:49:14 +0100
Subject: [antlr-interest] V3: How to translate one language to another
Message-ID: <45952AEA.7090306@telenet.be>

Hi,

I'm working on a project that requires me to translate a domain specific 
query language to a plain SQL statements. This domain specific language 
is object-oriented instead of relational like SQL.

For example:  (each employee is member of a department)

SELECT firstname + ' ' + lastname, department.name FROM employees

needs to be translated into something like:

SELECT e.firstname + ' ' + e.lastname, d.name from employees e LEFT JOIN 
departments d ON e.departmentid = d.id



I have the grammer for my parser figured out and I can build an AST that 
represents the language but I'm kind of STUCK on what to do next. I need 
to semantically validate the query; but how? Do I do this in a 
treewalker? Do I need a symbol table? And how can I translate the query 
into SQL statements? Do I use templates? TemplateString?


I'm not so much interested in any 'specific' help (altough that would be 
appreciated). I'm interested in the steps that are needed to get to the 
solution. How many treewalkers? What does each do etc...


If you have any idea, it would be greatly appreciated!


Bill



BTW: I've decided to use ANTLR v3

From gyula.laszlo at profund.hu  Fri Dec 29 08:17:10 2006
From: gyula.laszlo at profund.hu (=?ISO-8859-1?Q?Gyula_L=E1szl=F3?=)
Date: Fri, 29 Dec 2006 17:17:10 +0100
Subject: [antlr-interest] V3: How to translate one language to another
In-Reply-To: <45952AEA.7090306@telenet.be>
References: <45952AEA.7090306@telenet.be>
Message-ID: <10B606E2-EE23-46AF-A45E-BCB2CC164007@profund.hu>

Hello,

On 2006.12.29., at 15:49, Bill Mayfield wrote:

>
> I have the grammer for my parser figured out and I can build an AST  
> that represents the language but I'm kind of STUCK on what to do  
> next. I need to semantically validate the query; but how? Do I do  
> this in a treewalker? Do I need a symbol table? And how can I  
> translate the query into SQL statements? Do I use templates?  
> TemplateString?
>

I think you should write two tree parsers, each using the same grammar:

one does nothing else, but validates the statements
the other uses stringTemplate to generate the statements.


An example, which might be buggy :) :

	selectStatement
		: ^('select' (a+=selectedFields)+ 'from' objectName)
		;

A long example for the first parser:

	@members {
		ISQLTableObject currentObject;
		DelegateCollection delegates;
	}

	selectStatement
		: ^('select' (a+=selectedFields)+ 'from' objectName)
		{
			SelectedStaementChecker selectStatementChecker =
				delegates.getCheckerDelegateByName("selectStatement");
			
			selectStatementChecker.checkFieldNameASTListForObject 
(currentObject, $a);
			selectStatementChecker.checkObjectNameAST($objectName);

			selectStatementChecker.assertIfStatementInvalid();
		}
		;

A shorter example for the second:
	
	selectStatement
		: ^('select' (a+=selectedFields)+ 'from' objectName)
			-> selectStatementTemplate(fields={toTemplates($a)}, objectName= 
{$objectName.st})
		;

and in "selectStatementTemplate.st":

	SELECT <fields; separator=","> FROM <objectName>;


I hope it helps...
Cheers,

Gyula L?szl?

email:gyula.laszlo AT profund.hu
http://profund.hu


>
> BTW: I've decided to use ANTLR v3

Wise choice :)



From gyula.laszlo at profund.hu  Fri Dec 29 08:22:22 2006
From: gyula.laszlo at profund.hu (=?ISO-8859-1?Q?Gyula_L=E1szl=F3?=)
Date: Fri, 29 Dec 2006 17:22:22 +0100
Subject: [antlr-interest] Fwd: c# 2.0 grammar help
In-Reply-To: <e063fb510612281113h53800863v90b26a92417ffd4@mail.gmail.com>
References: <e063fb510612281111x7acf59c4k75b2a2db4e7c47b7@mail.gmail.com>
	<e063fb510612281113h53800863v90b26a92417ffd4@mail.gmail.com>
Message-ID: <7BCC88F1-F0C3-4290-A05B-854080580748@profund.hu>

Hello,


On 2006.12.28., at 20:13, James Briant wrote:

>
> I'm trying to create a grammar for C# 2.0 by following the spec.  
> I'm stuck on the lexer! I'm not sure how best to handle the  
> different character types. This is what I have done:
>
>
> LETTER_CHARACTER
>     :    c=. { IsUnicodeLetterChar( c ) }?
>     |    u=UNICODE_ESCAPE_SEQUENCE { IsUnicodeLetterChar( u ) }?
>     ;
>
> COMBINING_CHARACTER
>     :    c=. {    IsUnicodeCombiningCharacter(c) }?
>    |    u=UNICODE_ESCAPE_SEQUENCE { IsUnicodeCombiningCharacter 
> ( u ) }?
>     ;
>

Mr. Parr already answered this, however I think it's  better to use  
unicode char ranges in the lexer
(or am I missing the point?):
The following is from Mr. Parr's Java example grammar:


/**I found this char range in JavaCC's grammar, but Letter and Digit  
overlap.
    Still works, but...
*/
fragment
Letter
     :  '\u0024' |
        '\u0041'..'\u005a' |
        '\u005f' |
        '\u0061'..'\u007a' |
        '\u00c0'..'\u00d6' |
        '\u00d8'..'\u00f6' |
        '\u00f8'..'\u00ff' |
        '\u0100'..'\u1fff' |
        '\u3040'..'\u318f' |
        '\u3300'..'\u337f' |
        '\u3400'..'\u3d2d' |
        '\u4e00'..'\u9fff' |
        '\uf900'..'\ufaff'
     ;

fragment
JavaIDDigit
     :  '\u0030'..'\u0039' |
        '\u0660'..'\u0669' |
        '\u06f0'..'\u06f9' |
        '\u0966'..'\u096f' |
        '\u09e6'..'\u09ef' |
        '\u0a66'..'\u0a6f' |
        '\u0ae6'..'\u0aef' |
        '\u0b66'..'\u0b6f' |
        '\u0be7'..'\u0bef' |
        '\u0c66'..'\u0c6f' |
        '\u0ce6'..'\u0cef' |
        '\u0d66'..'\u0d6f' |
        '\u0e50'..'\u0e59' |
        '\u0ed0'..'\u0ed9' |
        '\u1040'..'\u1049'
    ;

They throw a warning, but they work OK...

byz

Gyula L?szl?

email:gyula.laszlo AT profund.hu
http://profund.hu



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061229/cc4dea63/attachment.html 

From sohail at taggedtype.net  Fri Dec 29 08:34:37 2006
From: sohail at taggedtype.net (sohail at taggedtype.net)
Date: Fri, 29 Dec 2006 10:34:37 -0600
Subject: [antlr-interest] C++ compliance of antlr generated code
In-Reply-To: <4594FA4C.7000604@dii.unisi.it>
References: <4594FA4C.7000604@dii.unisi.it>
Message-ID: <20061229103437.u0n5oct0fb1cgogs@taggedtype.net>

Quoting Maurizio de Pascale <mdepascale at dii.unisi.it>:

> the C++ code generated by ANTLR (latest 2.7.X) uses lots of variables
> starting with '_', which is however forbidden by the standard since
> symbols starting with an underscore are reserved to the implementation.
> I suggest taking care of this for the ANTLR 3 C++ target.

 From what I recall, symbols starting with _ are reserved in the  
global namespace.

From antlr at jazillian.com  Fri Dec 29 09:28:37 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 29 Dec 2006 12:28:37 -0500
Subject: [antlr-interest] Newbie questions: How to traverse the AST ...
In-Reply-To: <970194.26210.qm@web32612.mail.mud.yahoo.com>
References: <970194.26210.qm@web32612.mail.mud.yahoo.com>
Message-ID: <45955045.7090600@jazillian.com>

Agnisys wrote:
> Hi,
>   I need to pick up useful pieces of information from a 3rd party file. The file format is simple
> field based with possible quoted text. I've written the lexer and parser for the file (.g). I
> would have used Perl but decided to try Antlr in the hope that when the 3rd party changes the
> format I would have to do little to accommodate the changes. 
>
>   I have a couple of questions related to this :
>
>   1.  What is the standard idiom to traverse the AST ? Any examples would help. How do I get to
> the relevant information in the Java code?
>   
The simplest way to traverse the AST is something like:
AST child = parent.getFirstChild();
while (child != null) {
  // do your work
  child = child.getNextSibling();
}

Here's an example that traverses an AST to print pretty Java code:
http://www.jazillian.com/antlr/emitter.html

The more precise/complex/official way to traverse an AST is with an 
ANTLR "treewalker"...you define a "grammar" for
the structure of the AST, and then add actions to that grammar. See the
ANTLR documentation for details. Here's a treewalker that also 
pretty-prints Java code:
http://antlr.org/share/1101058268251/java.tree.g
>   2.  Is there an AWK mode that simply splits the input into fields?
>   
No, I don't think so, but I'm sure an ANTLR lexer that just splits the 
input into whitespace-separated fields
would be quite trivial :) Sound to me like ANTLR might be overkill for 
what you need to do. ANTLR (and other
tools) are really geared toward getting a deep understanding of the 
structure and meaning of a non-trivial language.
If you can do what you need in Perl or AWK then you probably should. Or 
use some very simple Java.
>   3.  How to deal with quoted comments that can contain elements from the language itself.
>       For example :
>       ABC="123 456=789"
>       The '=' should be skipped inside the double quote.
>   
Here, you can embedd ANTLR "actions" inside your lexer.
>   4.  Is the antlr-interest group postings search-able on any site?
>   
I just use "site:antlr.org whatever" at google.
> Thanks for any pointers for any of these questions. This would enable me to move forward. 
> Anupam.
>
> P.S. Anxiously waiting for the Antlr book. I found this to be very helpful:
> http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr-lexers.html
>
>
>
>   


From antlr at jazillian.com  Fri Dec 29 09:49:42 2006
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 29 Dec 2006 12:49:42 -0500
Subject: [antlr-interest] V3: How to translate one language to another
In-Reply-To: <45952AEA.7090306@telenet.be>
References: <45952AEA.7090306@telenet.be>
Message-ID: <45955536.7010000@jazillian.com>

Bill Mayfield wrote:
> Hi,
>
> I'm working on a project that requires me to translate a domain 
> specific query language to a plain SQL statements. This domain 
> specific language is object-oriented instead of relational like SQL.
>
> For example:  (each employee is member of a department)
>
> SELECT firstname + ' ' + lastname, department.name FROM employees
>
> needs to be translated into something like:
>
> SELECT e.firstname + ' ' + e.lastname, d.name from employees e LEFT 
> JOIN departments d ON e.departmentid = d.id
>
>
>
> I have the grammer for my parser figured out and I can build an AST 
> that represents the language 
Actually, an AST just represents a particular input in thelanguage. 
You're building a grammar that will tell ANTLR how to generate
code that generates such ASTs.

> but I'm kind of STUCK on what to do next. I need to semantically 
> validate the query; but how?
I assume you mean here that you need to semantically *understand* the 
query, not validate it.
You need to know things like "does this SELECT statement in my input 
language require me to generate an SQL JOIN?",
not "Is this input actually reasonable?"


> Do I do this in a treewalker? Do I need a symbol table? And how can I 
> translate the query into SQL statements? Do I use templates? 
> TemplateString?
I would start by writing down, say, 10 example translations for 
SELECT...so you really get a field for what you'll need
to do to map your DSL to SQL. Then figure out what your logic needs to 
be (e.g. "SELECT in my DSL always maps
to SQL SELECT", "any time I see <otherTableName>.<fieldName> in my DSL, 
I'll need to generate a JOIN", etc).
Then plug your examples into ANTLR and make sure you're generating 
reasonable ASTs and make sure you understand
the structure of the ASTs ("e.g. a SELECT node's first child is a 
FIELDS_TO_SELECT NODE and its second child
is a FROM node", and the optional third child is a WHERE node").

I then would start writing a little vanilla Java code that walks the 
AST, doing things in whatever way seems right to you.
After a day or two of that, step back and say, "Am I really just doing 
some simple action at each particular place in the AST?"
If so, then a treewalker might be simpler and easier. If not, just keep 
going.
>
>
> I'm not so much interested in any 'specific' help (altough that would 
> be appreciated). I'm interested in the steps that are needed to get to 
> the solution. How many treewalkers? What does each do etc...
I don't see the need for a "validating treewalk" unless you really 
aren't sure that the input is valid, which seems
weird to me. Obviously, there are always cases where you might get 
invalid input, but presumably your one-and-only
treewalker will give an error in that case.
>
>
> If you have any idea, it would be greatly appreciated!
>
>
> Bill
>
>
>
> BTW: I've decided to use ANTLR v3
>


From amohombe at yahoo.com  Fri Dec 29 10:23:29 2006
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Fri, 29 Dec 2006 19:23:29 +0100
Subject: [antlr-interest] When will the beta book be available?
In-Reply-To: <FB44E317-8C58-4E42-A53F-87B8AB6E87E2@cs.usfca.edu>
References: <458C7B6B.8030709@telenet.be>
	<FB44E317-8C58-4E42-A53F-87B8AB6E87E2@cs.usfca.edu>
Message-ID: <en3mf2$9k7$1@sea.gmane.org>

> The next book will be all about building domain 
> specific languages.
Now that would be really awesome :).
Any details about it would be appreciated :).

Considering how complicated is this approach:
http://www.jetbrains.com/mps/ (just try to use it :( ),

I hope that the DSL book + ANTLR3(4?) can bring an approach that
is at least an order of magnitude simpler than the above.

Thank you,

Ahmed.


From parrt at cs.usfca.edu  Fri Dec 29 11:06:14 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Dec 2006 11:06:14 -0800
Subject: [antlr-interest] When will the beta book be available?
In-Reply-To: <en3mf2$9k7$1@sea.gmane.org>
References: <458C7B6B.8030709@telenet.be>
	<FB44E317-8C58-4E42-A53F-87B8AB6E87E2@cs.usfca.edu>
	<en3mf2$9k7$1@sea.gmane.org>
Message-ID: <7F6800B0-617F-4F2C-84BA-E4EEC38B0550@cs.usfca.edu>


On Dec 29, 2006, at 10:23 AM, Ahmed Mohombe wrote:

>> The next book will be all about building domain specific languages.
> Now that would be really awesome :).
> Any details about it would be appreciated :).

Well, that will happy after I finish the ref guide; beta within 2  
weeks.  I have 2 chapters left after that.  Working on v3 itself at  
same time.

> Considering how complicated is this approach:
> http://www.jetbrains.com/mps/ (just try to use it :( ),
>
> I hope that the DSL book + ANTLR3(4?) can bring an approach that
> is at least an order of magnitude simpler than the above.

Me too :)

Ter


From parrt at cs.usfca.edu  Fri Dec 29 13:05:53 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Dec 2006 13:05:53 -0800
Subject: [antlr-interest] started a page on which language problems are hard?
Message-ID: <C30CD225-726D-40E1-932B-A78F35158B82@cs.usfca.edu>

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1773

  If you want a login so you can help with the wiki, just let me  
know.  I had to turn off general sign-up because a spammer signed up  
all 200 users.

Ter

From ilia at obnovlenie.ru  Fri Dec 29 15:11:29 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 30 Dec 2006 02:11:29 +0300
Subject: [antlr-interest] Stack overflow error (bug)
Message-ID: <200612300211.29297.ilia@obnovlenie.ru>


P.S in beginning cause that's general question =)  Can I somehow see parse 
tree without AntlrWorks and special logging statements after each rule ?

=========== Bug report ===============
For (latest built) Antlr 3b6:

The problem appeared in AntlrWorks after I inserted {isNextText("if")}? 
predicate, but antlr still compiled it well.

Later, I added a couple of logger.info("..."); statements you can find in 
text, and the error is now seen w/o antlrworks.


ANTLR Parser Generator  Version 3.0b6 (??)  1989-2007
Exception in thread "main" java.lang.StackOverflowError
        at java.util.HashMap$KeyIterator.<init>(HashMap.java:875)
        at java.util.HashMap$KeyIterator.<init>(HashMap.java:875)
        at java.util.HashMap.newKeyIterator(HashMap.java:889)
        at java.util.HashMap$KeySet.iterator(HashMap.java:921)
        at java.util.HashSet.iterator(HashSet.java:154)
        at 
org.antlr.analysis.DFAState.getGatedPredicatesInNFAConfigurations(DFAState.java:695)
        at 
org.antlr.codegen.CodeGenerator.canGenerateSwitch(CodeGenerator.java:1119)
        at 
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:72)
        at 
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:146)
        at 
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:146)
        at 
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:146)
.............. lots lots


============== FULL GRAMMAR ===============

grammar CommonRule;


options {
    output=AST;
   	superClass=CommonRuleParentParser; 
}



@parser::header {
    package grammar.parser;
    
	import grammar.*;	
	import grammar.parser.*;
	import grammar.parser.exception.*;

    import org.apache.log4j.Logger;
    import java.util.Stack;
    import java.util.ArrayList;
}

@rulecatch { }

@parser::members {

    private static Logger logger = Logger.getLogger(CommonRuleParser.class);    

    protected String getTokenName(Token tok) {
    	return tokenNames[tok.getType()];
    }
}



@lexer::header {
    package grammar.parser;	
    import grammar.*;
    
}


LCURL	:	'{';
RCURL	:	'}';

CONTROL	:	 '~';

RULE_CALL
	:	'#';


SEMI:	';';

DOT	:	'.';

MINUS
	:	'-';

GT	:	'>';

SPECIAL_CHAR
	:	'`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |  
	'+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' |
	 '/' | '?';
	


fragment WS_CHAR  :
       (' '|'\r'|'\t'|'\u000C'|'\n' )
    ;
    
WS	:	WS_CHAR+;

// not SPECIAL_CHAR not WS_CHAR
WORD:	(~ ('`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |  
	'+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' | '/' | '?'
	| '~' 
	| '{' 
	| '}'
	| '#'
	| ';'
	| '.'
	| '-'
	| '>'
	| ' '|'\r'|'\t'|'\u000C'|'\n' ) )+;




document: exprs ;


exprs:
        (expr)+
;

exprs_no_semi
        :       (expr_no_semi)+
;


exprs_simple 
        :       (expr_simple)+
        ;


expr_no_semi 
        :
                (expr_simple) | (curly_block)
        ;

/* expression without curl at start and ; */
expr_simple 
        :
        (
        command |
        rule_call |
        text
        )
;


command:
         CONTROL (
         command_eval |
         command_if  |
         text
         )	
{ 
	logger.info("command"); 
}
;


command_if
       :
       {isNextText("if")}? WORD LCURL exprs /*command_if_part_then 
(command_if_part_else)?*/ RCURL
{ 
	logger.info("command_if"); 
}
;

/*
command_if_part_else returns [String value] :
        (CONTROL ELSE exprs)
{
        $value = $exprs.value;
        logger.info("command_if_else value "+$value);
}
;

command_if_part_then returns [String value]
        :(CONTROL THEN exprs)
{
        $value = $exprs.value;
        logger.info("command_if_then value "+$value);
}
;
*/


command_eval:
        LCURL exprs RCURL
{ 
	logger.info("command_eval"); 
}
      
;




expr:
(
        (expr_no_semi) | (SEMI)
)
;


rule_call: RULE_CALL ( WORD | LCURL WORD rule_long_def_part* RCURL )
;

rule_long_def_part
	:	(MINUS GT | DOT) WORD
	;


curly_block:
        LCURL exprs RCURL
;


text:
	DOT | MINUS | WORD | WS | GT
;



From parrt at cs.usfca.edu  Fri Dec 29 15:17:07 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Dec 2006 15:17:07 -0800
Subject: [antlr-interest] Stack overflow error (bug)
In-Reply-To: <200612300211.29297.ilia@obnovlenie.ru>
References: <200612300211.29297.ilia@obnovlenie.ru>
Message-ID: <67115710-925C-46AB-8BC2-9600BF0736B6@cs.usfca.edu>

Your version of ANTLWorks must be using an older version of ANTLR  
then if the to behave differently, which I believe is the case.

On Dec 29, 2006, at 3:11 PM, Ilia Kantor wrote:
> P.S in beginning cause that's general question =)  Can I somehow  
> see parse
> tree without AntlrWorks and special logging statements after each  
> rule ?

Have you tried -trace?  Seen?

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760

Ter


From ilia at obnovlenie.ru  Fri Dec 29 15:38:19 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 30 Dec 2006 02:38:19 +0300
Subject: [antlr-interest] Stack overflow error (bug)
In-Reply-To: <67115710-925C-46AB-8BC2-9600BF0736B6@cs.usfca.edu>
References: <200612300211.29297.ilia@obnovlenie.ru>
	<67115710-925C-46AB-8BC2-9600BF0736B6@cs.usfca.edu>
Message-ID: <200612300238.19232.ilia@obnovlenie.ru>

> Your version of ANTLWorks must be using an older version of ANTLR
> then if the to behave differently, which I believe is the case.

The report refers to latest antlr 3b6 build (1 hour ago) w/o antlrworks.

The applied grammar fails to compile.




From parrt at cs.usfca.edu  Fri Dec 29 15:44:16 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Dec 2006 15:44:16 -0800
Subject: [antlr-interest] Stack overflow error (bug)
In-Reply-To: <200612300238.19232.ilia@obnovlenie.ru>
References: <200612300211.29297.ilia@obnovlenie.ru>
	<67115710-925C-46AB-8BC2-9600BF0736B6@cs.usfca.edu>
	<200612300238.19232.ilia@obnovlenie.ru>
Message-ID: <2CC4CAD5-8707-4FDF-B786-FF621CF85DC1@cs.usfca.edu>


On Dec 29, 2006, at 3:38 PM, Ilia Kantor wrote:

>> Your version of ANTLWorks must be using an older version of ANTLR
>> then if the to behave differently, which I believe is the case.
>
> The report refers to latest antlr 3b6 build (1 hour ago) w/o  
> antlrworks.

You said it worked with 3.0b6, but not from within AW.

> The applied grammar fails to compile.

ok, so that fails on all versions of ANTLR you have, right?

Thanks,
Ter

From parrt at cs.usfca.edu  Fri Dec 29 17:29:39 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Dec 2006 17:29:39 -0800
Subject: [antlr-interest] need quotes / foreword for the book
Message-ID: <066466DE-9014-4F09-A2C4-02352CD512BA@cs.usfca.edu>

Hi,

The book will be done and off to the printer within about six weeks  
and, in the meantime, I need to find some good quotes from famous  
people/projects and possibly a good person to do a foreword.  If you  
run a high profile project or know somebody that does, please  
consider doing a quote for the cover of the ANTLR v3 book. Naturally,  
I get you a copy of the book. ;)

Please contact me directly with suggestions for people to do cover  
quotes; I can only have between six and eight quotes so I'll  
necessarily have to pick the most impressive projects / humans. (no  
offense if I end up not being able to use you on the cover).  
Optimally, the quotes would come from people who have used ANTLR on  
well-known projects or just plain famous people like James Gosling. ;)

Thanks!
Ter

From ilia at obnovlenie.ru  Fri Dec 29 17:57:28 2006
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 30 Dec 2006 04:57:28 +0300
Subject: [antlr-interest] Stack overflow error (bug)
In-Reply-To: <2CC4CAD5-8707-4FDF-B786-FF621CF85DC1@cs.usfca.edu>
References: <200612300211.29297.ilia@obnovlenie.ru>
	<200612300238.19232.ilia@obnovlenie.ru>
	<2CC4CAD5-8707-4FDF-B786-FF621CF85DC1@cs.usfca.edu>
Message-ID: <200612300457.28288.ilia@obnovlenie.ru>


> You said it worked with 3.0b6, but not from within AW.
>
> > The applied grammar fails to compile.
>
> ok, so that fails on all versions of ANTLR you have, right?

Yes, 3b6 and whatever latest antlrworks is using.


From aspitz at gmail.com  Fri Dec 29 18:41:54 2006
From: aspitz at gmail.com (Ayal Spitz)
Date: Fri, 29 Dec 2006 21:41:54 -0500
Subject: [antlr-interest] MismatchedTokenException
Message-ID: <a54e7a220612291841q7238151dv14a9fea011e2b08@mail.gmail.com>

Does anyone know if there is a way to get the incomplete token that is
causing the parser to throw a MismatchedTokenException?

Here is what I'm doing. I have the following grammar:
parser : STRING;
STRING : '"' .* '"';

When I parse the following text:
"Test

I get the MismatchedTokenException. The token tied to the exception looks
like this:
[@-1,0:0='<no text>',<-1>,0:-1]

What I really need is the token that represents the incomplete STRING token.

Anyone have any ideas how to get this?

Thanks - AYAL
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061229/3aae3768/attachment.html 

From parrt at cs.usfca.edu  Fri Dec 29 18:46:26 2006
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Dec 2006 18:46:26 -0800
Subject: [antlr-interest] MismatchedTokenException
In-Reply-To: <a54e7a220612291841q7238151dv14a9fea011e2b08@mail.gmail.com>
References: <a54e7a220612291841q7238151dv14a9fea011e2b08@mail.gmail.com>
Message-ID: <DF5C4B55-C4CB-4FD4-A18A-7A098F4D6946@cs.usfca.edu>

.* matches until EOF, which iswhat you see.  See the examples or use  
(options{greedy=false;}:.)* for more interesting results. :)
Ter
On Dec 29, 2006, at 6:41 PM, Ayal Spitz wrote:

> Does anyone know if there is a way to get the incomplete token that  
> is causing the parser to throw a MismatchedTokenException?
>
> Here is what I'm doing. I have the following grammar:
> parser	:	STRING;
> STRING	:	'"' .* '"';
>
> When I parse the following text:
> "Test
>
> I get the MismatchedTokenException. The token tied to the exception  
> looks like this:
> [@-1,0:0='<no text>',<-1>,0:-1]
>
> What I really need is the token that represents the incomplete  
> STRING token.
>
> Anyone have any ideas how to get this?
>
> Thanks - AYAL


From prm225 at gmail.com  Sat Dec 30 14:39:30 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Sat, 30 Dec 2006 16:39:30 -0600
Subject: [antlr-interest] compile-time error for the parser
Message-ID: <4596EAA2.2040606@gmail.com>

Hello all.
I'm using antlr-3.0b5 and the attached grammar file.
The initial step, of creating the .java files from test.g goes fine (and 
I've also tested the grammar with some sample inputs in AntlrWorks 
before going CLI.)
Once I get to compiling with javac, I get tons of errors (100 to be 
exact) due to the Parser constructor not being found, some other symbols 
not being found, etc..
Any idea why this might be so (I'm afraid it might just be some path 
issues, but can't see where I'm making an error.)

What I'm doing:

$java -cp antlr-3.0b5.jar:stringtemplate-3.0.jar:antlr-2.7.7.jar:. 
org.antlr.Tool test.g

(works alright, .java files created.)

$javac -cp antlr-3.0b5.jar:stringtemplate-3.0.jar:antlr-2.7.7.jar *.java

(fails with the errors.)



And on an aside, why would the parser fail on encountering a COMMENT (in 
the lexer section)? I haven't been able to test it with code I've 
written, but AntlrWorks comes back with a [NoViableAltException].

Thanks.
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20061230/5c922a52/attachment.pl 

From dave at badgers-in-foil.co.uk  Sat Dec 30 15:05:03 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 30 Dec 2006 23:05:03 +0000
Subject: [antlr-interest] compile-time error for the parser
In-Reply-To: <4596EAA2.2040606@gmail.com>
References: <4596EAA2.2040606@gmail.com>
Message-ID: <20061230230503.GA32155@badgers-in-foil.co.uk>

On Sat, Dec 30, 2006 at 04:39:30PM -0600, Rajesh Menon wrote:
> Any idea why this might be so (I'm afraid it might just be some path 
> issues, but can't see where I'm making an error.)

Sorry, don't know about that, but,

> And on an aside, why would the parser fail on encountering a COMMENT (in 
> the lexer section)? I haven't been able to test it with code I've 
> written, but AntlrWorks comes back with a [NoViableAltException].

> COMMENT
> 	:	'//' ~('n'|'\r')* '\r'? '\n' {skip();}
> 	;

I think I read that ANTLRWorks doesn't actually run actions.  I believe
it uses heuristics like the pattern {$channel=HIDDEN;} though, because it
seems to know to ignore tokens marked that way.  Expect to see things
listed next to 'Ignore rules:' in the Interpreter tab if this is
working properly.

ta,
dave

-- 
http://david.holroyd.me.uk/

From kroepke at classdump.org  Sat Dec 30 18:27:10 2006
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 31 Dec 2006 03:27:10 +0100
Subject: [antlr-interest] C++ compliance of antlr generated code
In-Reply-To: <20061229103437.u0n5oct0fb1cgogs@taggedtype.net>
References: <4594FA4C.7000604@dii.unisi.it>
	<20061229103437.u0n5oct0fb1cgogs@taggedtype.net>
Message-ID: <F9DAB36D-7121-4F8F-8D75-D6B621110E18@classdump.org>


On 29. Dec 2006, at 17:34 , sohail at taggedtype.net wrote:

> Quoting Maurizio de Pascale <mdepascale at dii.unisi.it>:
>
>> the C++ code generated by ANTLR (latest 2.7.X) uses lots of variables
>> starting with '_', which is however forbidden by the standard since
>> symbols starting with an underscore are reserved to the  
>> implementation.
>> I suggest taking care of this for the ANTLR 3 C++ target.
>
> From what I recall, symbols starting with _ are reserved in the  
> global namespace.

Hi!

We had a discussion about this over on antlr-dev a while ago. Please  
see my reply at
<http://antlr.org/pipermail/antlr-dev/2006-November/000729.html>  
for the gist
of it.

Ric has agreed that it doesn't appear to be a problem, just as Sohail  
said.
I don't think this will need to be changed.

cheers,

-k
-- 
Kay R?pke
http://classdump.org/





From clinton.roy at gmail.com  Sat Dec 30 20:31:04 2006
From: clinton.roy at gmail.com (Clinton Roy)
Date: Sun, 31 Dec 2006 14:31:04 +1000
Subject: [antlr-interest] Ping Marq Koel and Wolfgang Hafelinger: Python
	target for V3
In-Reply-To: <06A76150-8C3C-480C-BA64-FD1F54E85C0D@cs.usfca.edu>
References: <ems3n2$jgr$1@sea.gmane.org>
	<06A76150-8C3C-480C-BA64-FD1F54E85C0D@cs.usfca.edu>
Message-ID: <9c0715e40612302031rfe3390co24d719377e591bb6@mail.gmail.com>

On 12/28/06, Terence Parr <parrt at cs.usfca.edu> wrote:
> I think Marq is too busy for Python v3.  I think Wolfgang expressed
> interest.
> Ter

Heya's, I'm still interested in working on the v3 Python target, but I
can't give any time to it until February.

Cheers,

-- 
Clinton Roy
www.acqao.org - ARC Centre of Excellence for Quantum-Atom Optics
www.humbug.org.au  - Brisbane Unix Group
azure.humbug.org.au/~croy/blog - Blog
www.flickr.com/photos/croy/ - Photos

From xdm at suzsoft.com  Sat Dec 30 23:44:24 2006
From: xdm at suzsoft.com (xdm)
Date: Sun, 31 Dec 2006 15:44:24 +0800
Subject: [antlr-interest] a question about AST tree
Message-ID: <003801c72caf$7df14010$610710ac@suzsoft.com>

It is a simple expression. 

 

class CalcParser extends Parser;

options { buildAST=true; }

expr : ( NUM expr_tail  )  | ( LPAREN!  expr RPAREN!  expr_tail ) ;

expr_tail : ( (PLUS^|SUB^|MUL^|DIV^) expr )*  ;

 

 

For the expression "2+4", the result is supposed to be "+ 2 4", but I just
get "2". 

 

Can you tell me why??

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20061231/7e3da08f/attachment.html 

From mdepascale at dii.unisi.it  Sun Dec 31 05:59:22 2006
From: mdepascale at dii.unisi.it (Maurizio de Pascale)
Date: Sun, 31 Dec 2006 14:59:22 +0100
Subject: [antlr-interest] C++ compliance of antlr generated code
In-Reply-To: <F9DAB36D-7121-4F8F-8D75-D6B621110E18@classdump.org>
References: <4594FA4C.7000604@dii.unisi.it>
	<20061229103437.u0n5oct0fb1cgogs@taggedtype.net>
	<F9DAB36D-7121-4F8F-8D75-D6B621110E18@classdump.org>
Message-ID: <4597C23A.5060407@dii.unisi.it>

Hi Kay, Sohail,
thank you for your responses.

I know that strictly speaking this is a non-issue, since in the worst 
case these "unhappy" vars could at most hide some strange 
implementation-defined symbols in the global namespace (which however 
could cause problems in some weird user defined actions).
However, code lives also of conventions, and to the brainlexer of most 
C++ programmers any symbol starting with '_' is a compiler/os specific 
hack, whatever namespace it is supposed to be into.
So I was not saying that this is a bug, or that it will break some code 
in the future, but since I suppose that the C++ target for ANTLR3 is 
already being rewritten, I still suggest that it could be worth to do a 
bit of find-and-replace to handle this.

I've read the old post you pointed to, and I agree this is not a 
bug/issue, but the real (still to be answered) question is:
Is there a good reason to keep in ANTLR3 C++ generated code variables 
starting with '_' ?
Why is _ttype better than ttype, tokenType, token_type, or whatever one 
can choose?

thank you,
Maurizio de Pascale
mdepascale at dii.unisi.it

P.S. is ANTLR3 C++ target complete?




Kay Roepke wrote:
>
> On 29. Dec 2006, at 17:34 , sohail at taggedtype.net wrote:
>
>> Quoting Maurizio de Pascale <mdepascale at dii.unisi.it>:
>>
>>> the C++ code generated by ANTLR (latest 2.7.X) uses lots of variables
>>> starting with '_', which is however forbidden by the standard since
>>> symbols starting with an underscore are reserved to the implementation.
>>> I suggest taking care of this for the ANTLR 3 C++ target.
>>
>> From what I recall, symbols starting with _ are reserved in the 
>> global namespace.
>
> Hi!
>
> We had a discussion about this over on antlr-dev a while ago. Please 
> see my reply at
> <http://antlr.org/pipermail/antlr-dev/2006-November/000729.html> 
> for the gist
> of it.
>
> Ric has agreed that it doesn't appear to be a problem, just as Sohail 
> said.
> I don't think this will need to be changed.
>
> cheers,
>
> -k
> --Kay R?pke
> http://classdump.org/
>
>
>
>
>

From prm225 at gmail.com  Sun Dec 31 09:01:50 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Sun, 31 Dec 2006 11:01:50 -0600
Subject: [antlr-interest] compile-time error for the parser
In-Reply-To: <20061230230503.GA32155@badgers-in-foil.co.uk>
References: <4596EAA2.2040606@gmail.com>
	<20061230230503.GA32155@badgers-in-foil.co.uk>
Message-ID: <4597ECFE.1010304@gmail.com>

David Holroyd wrote:
> On Sat, Dec 30, 2006 at 04:39:30PM -0600, Rajesh Menon wrote:
> 
>>Any idea why this might be so (I'm afraid it might just be some path 
>>issues, but can't see where I'm making an error.)
> 
> 
> Sorry, don't know about that, but,
> 
> 
>>And on an aside, why would the parser fail on encountering a COMMENT (in 
>>the lexer section)? I haven't been able to test it with code I've 
>>written, but AntlrWorks comes back with a [NoViableAltException].
> 
> 
>>COMMENT
>>	:	'//' ~('n'|'\r')* '\r'? '\n' {skip();}
>>	;
> 
> 
> I think I read that ANTLRWorks doesn't actually run actions.  I believe
> it uses heuristics like the pattern {$channel=HIDDEN;} though, because it
> seems to know to ignore tokens marked that way.  Expect to see things
> listed next to 'Ignore rules:' in the Interpreter tab if this is
> working properly.
> 
> ta,
> dave
> 

Nevermind the errors I mentioned. It was indeed an oversight that was 
cured with a night's sleep (I had my class named Parser, which conflicts 
with the Parser class that antlr uses internally.) Change in names was 
all it needed.

Thanks for the comment on antlrworks and it not running the actions - 
that makes sense as well.

From mdepascale at dii.unisi.it  Sun Dec 31 10:43:45 2006
From: mdepascale at dii.unisi.it (Maurizio de Pascale)
Date: Sun, 31 Dec 2006 19:43:45 +0100
Subject: [antlr-interest] bad prediction on common prefix despite enough
	lookahead depth
Message-ID: <459804E1.7090300@dii.unisi.it>

Using the small grammar below ANTLR 2.7.7 reports no warning but the 
generated lexer fails to parse the input ">>":
in fact, the code generated for nextToken() uses only LA(1) and LA(2) to 
predict the C token, despite the lookahead depth set to 3, and then 
throws for the missing '='...

Here are the questions:
Is this a bug or am I missing something?
Is   D: (">>=")=> C | B | A;   the best solution?
Is this related to the linear approximate lookahead?
should it spit out at least a warning?
does ANTLR3 correctly handle this?


thank you in advance,
Maurizio de Pascale
mdepascale at dii.unisi.it



TEST.G:

options {language="Cpp";}

class TestLexer extends Lexer;
options {k=3;}

A : '>' ;
B : '=' ;
C : ">>=" ;

From sohail at taggedtype.net  Sun Dec 31 11:05:11 2006
From: sohail at taggedtype.net (sohail at taggedtype.net)
Date: Sun, 31 Dec 2006 13:05:11 -0600
Subject: [antlr-interest] C++ compliance of antlr generated code
In-Reply-To: <4597C23A.5060407@dii.unisi.it>
References: <4594FA4C.7000604@dii.unisi.it>
	<20061229103437.u0n5oct0fb1cgogs@taggedtype.net>
	<F9DAB36D-7121-4F8F-8D75-D6B621110E18@classdump.org>
	<4597C23A.5060407@dii.unisi.it>
Message-ID: <20061231130511.mo3sib6w31ls08w0@taggedtype.net>

Quoting Maurizio de Pascale <mdepascale at dii.unisi.it>:

> Hi Kay, Sohail,
> thank you for your responses.

You're welcome.

> However, code lives also of conventions, and to the brainlexer of most
> C++ programmers any symbol starting with '_' is a compiler/os specific
> hack, whatever namespace it is supposed to be into.

Personally, I think you're only speaking for yourself. In C++ there  
are a bazillion sensible ways to do things and sometimes they conflict.

From prm225 at gmail.com  Sun Dec 31 11:31:24 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Sun, 31 Dec 2006 13:31:24 -0600
Subject: [antlr-interest] building antlr with ant, or otherwise
Message-ID: <4598100C.50105@gmail.com>

Hi.
I wanted to try antlr-3.0b6 so I downloaded 
http://fisheye2.cenqua.com/browse/~tarball=tbz2/antlr/antlr.tbz2 and 
tried to build it using ant (I noticed Terr's comment on the ant thing 
in the README, but I decided to do it anyway.)

Ant fails with the report:
Buildfile: build.xml

generator:
     [antlr] Exception in thread "main" java.lang.NoClassDefFoundError: 
antlr/Tool

BUILD FAILED
~/src/antlr/antlr-3.0b6/build.xml:49: ANTLR returned: 1


Line 49 in build.xml is `<antlr target="${antlr.g}" />`.

Once again (twice in a day), I think this looks like a classpath/naming 
issue (I tend to say that whenever I see that Exception.)
Any help from those who've used ant to build antlr would be appreciated.

Thanks.

p.s: do we need to add some older .jar's to the classpath to build the 
new ones?

From agnisys at yahoo.com  Sun Dec 31 14:38:48 2006
From: agnisys at yahoo.com (Agnisys)
Date: Sun, 31 Dec 2006 14:38:48 -0800 (PST)
Subject: [antlr-interest] Newbie questions: How to traverse the AST ...
In-Reply-To: <45955045.7090600@jazillian.com>
Message-ID: <137800.84986.qm@web32608.mail.mud.yahoo.com>

Andy thanks, that was helpful. I have a follow up question (very elementary again):

I need to parse text like the following:

LHS1=ABC LHS2=EFG=123 LHS3=345 

The value of LHS2 should be "EFG=123". The problem is with the "=" sign in the value. I can
understand why Antrl complains, but I'm not sure how to fix it. How to tell Antlr that the value
can contain "=" sign.

The lexer has the following:

IDENT :
 ( 'a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.'|'-'|':'|'/'|','|'^'|'+'|'=' )+ 

EQUAL   : '=' ;

other code
--------------------

Any help or pointers would be appreciated.
Thanks,
Anupam.




From prm225 at gmail.com  Sun Dec 31 15:04:59 2006
From: prm225 at gmail.com (Rajesh Menon)
Date: Sun, 31 Dec 2006 17:04:59 -0600
Subject: [antlr-interest] Newbie questions: How to traverse the AST ...
In-Reply-To: <137800.84986.qm@web32608.mail.mud.yahoo.com>
References: <137800.84986.qm@web32608.mail.mud.yahoo.com>
Message-ID: <4598421B.20109@gmail.com>

Agnisys wrote:
> Andy thanks, that was helpful. I have a follow up question (very elementary again):
> 
> I need to parse text like the following:
> 
> LHS1=ABC LHS2=EFG=123 LHS3=345 
> 
> The value of LHS2 should be "EFG=123". The problem is with the "=" sign in the value. I can
> understand why Antrl complains, but I'm not sure how to fix it. How to tell Antlr that the value
> can contain "=" sign.
> 
> The lexer has the following:
> 
> IDENT :
>  ( 'a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.'|'-'|':'|'/'|','|'^'|'+'|'=' )+ 
> 
> EQUAL   : '=' ;
> 
> other code
> --------------------
> 
> Any help or pointers would be appreciated.
> Thanks,
> Anupam.
> 
> 
> 
> 

Hi.

For inputs:

LHS1=ABC
LHS2=EFG=123
LHS3=345
LHS4=3.14
LHS5=CDE=ABC=XYZ=10

, something like the following should do:

//
grammar test;
options {
	k=1
}
tokens {
	EQUALS='=';
}
expressions
	:	expression*
	;
expression
	:	lhs EQUALS rhs('\r'?'\n')!
	;
lhs
	:	IDENTIFIER
	;
rhs
	:	lhs(EQUALS rhs)*
	|	NUMBER
	;
IDENTIFIER
	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
	;
NUMBER
	:	('0'..'9')+('.'('0'..'9')+)?
	;	
//

HTH.

From dave at badgers-in-foil.co.uk  Sun Dec 31 15:47:18 2006
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 31 Dec 2006 23:47:18 +0000
Subject: [antlr-interest] building antlr with ant, or otherwise
In-Reply-To: <4598100C.50105@gmail.com>
References: <4598100C.50105@gmail.com>
Message-ID: <20061231234717.GA16143@badgers-in-foil.co.uk>

On Sun, Dec 31, 2006 at 01:31:24PM -0600, Rajesh Menon wrote:
> generator:
>     [antlr] Exception in thread "main" java.lang.NoClassDefFoundError: antlr/Tool

NB antlr.Tool is the 'entry point' for v2; in v3 the equivalent is
org.antlr.Tool.

> p.s: do we need to add some older .jar's to the classpath to build the 
> new ones?

Yes, ANTLRv3 needs a built copy of v2 in the classpath to compile and
run (it also depends on StringTemplate, if you've not already grabbed a
copy).


ta,
dave

-- 
http://david.holroyd.me.uk/

From rob.hill at blueyonder.co.uk  Sun Dec 31 16:41:35 2006
From: rob.hill at blueyonder.co.uk (Rob Hill)
Date: Mon, 1 Jan 2007 00:41:35 -0000
Subject: [antlr-interest] HAPPY NEW YEAR!
In-Reply-To: <20061231234717.GA16143@badgers-in-foil.co.uk>
References: <4598100C.50105@gmail.com>
	<20061231234717.GA16143@badgers-in-foil.co.uk>
Message-ID: <000301c72d3d$9752a7e0$c5f7f7a0$@hill@blueyonder.co.uk>

To all Antlr's!

Have a good 2007 all!

/2ob




From agnisys at yahoo.com  Sun Dec 31 16:59:05 2006
From: agnisys at yahoo.com (Agnisys)
Date: Sun, 31 Dec 2006 16:59:05 -0800 (PST)
Subject: [antlr-interest] Newbie questions: How to traverse the AST ...
In-Reply-To: <4598421B.20109@gmail.com>
Message-ID: <670513.56204.qm@web32604.mail.mud.yahoo.com>

Hi Rajesh,
 I'm using 2.7.7 so I converted your code but when running Antlr on it I got the following. Once
again the  problem is that '=' can be in the RHS.

ANTLR Parser Generator   Version 2.7.7 (20060930)   1989-2005
menon.g:12: warning:nondeterminism upon
menon.g:12:     k==1:"="
menon.g:12:     between alt 1 and exit branch of block

  Here is my conversion:

class FlexParser  extends Parser;
expressions
	:	(expression)*
	;
expression
	:	lhs EQUALS rhs NEWLINE!
	;
lhs
	:	IDENTIFIER
	;
rhs
	:	lhs(EQUALS rhs)*
	|	NUMBER
	;
class FlexLexer extends Lexer;
options {
	k=2;
}
tokens {
	EQUALS="=";
}
NEWLINE :('\r''\n')=> '\r''\n' //DOS
     | '\n'                  //UNIX
     { newline(); }
     ;
IDENTIFIER
	:	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
	;
NUMBER
	:	('0'..'9')+('.'('0'..'9')+)?
	;	

Thanks for your help,
Anupam.


