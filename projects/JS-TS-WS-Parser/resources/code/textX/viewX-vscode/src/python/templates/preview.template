<!DOCTYPE html>

<!-- Generated by viewX-vscode extension using 'preview.template' on {{ date }} -->
<!-- This file represents the visualization of {{ view_model.tx_import.model }} model when viewX model {{ view_model_name }} is applied. -->

<html lang="en">

<head>
    <title>{{ project_name }}/{{ model_name }} - viewX Preview</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="css/style.css" rel="stylesheet">
    <script src='js/cytoscape.min.js'></script>
    <script src='js/socket.io.slim.js'></script>
</head>

<body>
    <div id="cy"></div>
    <script>
        var cy = cytoscape({
            container: document.getElementById('cy'),
            elements: [
                {% for element in elements %}
                    {# workaround because join() filter splits each letter after applying to_json() function #}
                    {% if not loop.first %}
                    ,{{element.to_json()}}
                    {% else %}
                    {{element.to_json()}}
                    {% endif %}
                {% endfor %}
            ],
            style: [
            {% if not overwrite_styles %}
                {% for style in styles %}
                    {# workaround because join() filter splits each letter after applying to_json() function #}
                    {% if not loop.first %}
                    ,{{style.to_json()}}
                    {% else %}
                    {{style.to_json()}}
                    {% endif %}
                {% endfor %}
            {% endif %}
            {# always append custom styles #}
            {% if view_model.stylesheet.style %}
                {% if not overwrite_styles %},{% endif %}
                {{view_model.stylesheet.style}}
            {% endif %}
            ],
            layout: {
                name: 'circle',
                fit: true,
                padding: 10,
                avoidOverlap: true
            },
            // decrease zoom sensitivity
            wheelSensitivity: 0.2
        });
		
		// flag for Code editor on Windows platform (needed for rendering fixes)
		// var codeOnWindows = window.clientInformation.platform == "Win32" && window.clientInformation.appVersion.indexOf(" Electron/") > -1;
        // disable rendering bugfix
        var codeOnWindows = false;

        if (codeOnWindows) {
            // workaround for initial centering bug (moving by y-axis offset)
			var height = window.screen.height;
				cy.panBy({x: 0, y: height - cy.height()});
        }

        // timestamp of the last click event
        var lastClickTimeStamp = 0.00;
		
        const socket = io('http://localhost:{{socket_port}}');
        // join to preview room
        socket.emit("preview-room");
        cy.elements().on('click', (event) => {
            // workaround since Cytoscape.js does not support double click event
            // if the second click occurred at most 1 second after the first, consider it as a double click event
			if (event.timeStamp - lastClickTimeStamp <= 1000.00) {
				var el_data = event.target._private.data;
				socket.emit("preview-send-command", `select|offset=${el_data.offset}|offset_end=${el_data.offset_end}`);
				console.log('graph double click');
			}
			lastClickTimeStamp = event.timeStamp;
        });
        socket.on("preview-receive-command", function(command) {
            console.log('preview received command: ' + command);
            interpretCommand(command);
        });

        function interpretCommand(command) {
            if (command.startsWith("fit")) {
                var filter = "";
                var args = command.split("|").slice(1).forEach(arg => {
                    filter += "[" + arg + "]";
                });
                var padding = Math.min(window.screen.height, window.screen.width) / 4;
                cy.fit(cy.elements(filter), padding);
                // workaround for centering bug (moving by y-axis offset) only for Code editor on Windows platform
				if (codeOnWindows) {
					cy.panBy({x: 0, y: height - cy.height()});
				}
            }
        }
    </script>
</body>

</html>